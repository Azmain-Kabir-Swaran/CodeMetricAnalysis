{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PortScanner.java",
  "functionName": "setPortRange",
  "functionId": "setPortRange___input-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/utils/PortScanner.java",
  "functionStartLine": 44,
  "functionEndLine": 78,
  "numCommitsSeen": 5,
  "timeTaken": 3006,
  "changeHistory": [
    "40ab068eabe50875449d601471619a4e82fff86d",
    "2191f5b533c6b4763f5d443d21127f1f8552ce64",
    "f47df51791dfc1b3bda9cbd00f644894ba69c8ec"
  ],
  "changeHistoryShort": {
    "40ab068eabe50875449d601471619a4e82fff86d": "Yfilerename",
    "2191f5b533c6b4763f5d443d21127f1f8552ce64": "Ymovefromfile",
    "f47df51791dfc1b3bda9cbd00f644894ba69c8ec": "Yintroduced"
  },
  "changeHistoryDetails": {
    "40ab068eabe50875449d601471619a4e82fff86d": {
      "type": "Yfilerename",
      "commitMessage": "YARN-7091. Rename application to service in yarn-native-services. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "40ab068eabe50875449d601471619a4e82fff86d",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "2ba38ce8ecb1cf3836fab48cdb2c5ae7e1b5427d",
      "commitAuthorOld": "Gour Saha",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void setPortRange(String input) throws BadConfigException {\n    // first split based on commas\n    Set\u003cInteger\u003e inputPorts\u003d new TreeSet\u003cInteger\u003e();\n    String[] ranges \u003d input.split(\",\");\n    for ( String range : ranges ) {\n      if (range.trim().isEmpty()) {\n        continue;\n      }\n      Matcher m \u003d SINGLE_NUMBER.matcher(range.trim());\n      if (m.find()) {\n        inputPorts.add(Integer.parseInt(m.group()));\n        continue;\n      }\n      m \u003d NUMBER_RANGE.matcher(range.trim());\n      if (m.find()) {\n        String[] boundaryValues \u003d m.group(0).split(\"-\");\n        int start \u003d Integer.parseInt(boundaryValues[0].trim());\n        int end \u003d Integer.parseInt(boundaryValues[1].trim());\n        if (end \u003c start) {\n          throw new BadConfigException(\"End of port range is before start: \"\n              + range + \" in input: \" + input);\n        }\n        for (int i \u003d start; i \u003c end + 1; i++) {\n          inputPorts.add(i);\n        }\n        continue;\n      }\n      throw new BadConfigException(\"Bad port range: \" + range + \" in input: \"\n          + input);\n    }\n    if (inputPorts.size() \u003d\u003d 0) {\n      throw new BadConfigException(\"No ports found in range: \" + input);\n    }\n    this.remainingPortsToCheck \u003d new ArrayList\u003cInteger\u003e(inputPorts);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/utils/PortScanner.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/utils/PortScanner.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/utils/PortScanner.java"
      }
    },
    "2191f5b533c6b4763f5d443d21127f1f8552ce64": {
      "type": "Ymovefromfile",
      "commitMessage": "YARN-7050. Post cleanup after YARN-6903, removal of org.apache.slider package. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "2191f5b533c6b4763f5d443d21127f1f8552ce64",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "79bf5c084d4a063f1a933cae498af23edfd46792",
      "commitAuthorOld": "Billie Rinaldi",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void setPortRange(String input) throws BadConfigException {\n    // first split based on commas\n    Set\u003cInteger\u003e inputPorts\u003d new TreeSet\u003cInteger\u003e();\n    String[] ranges \u003d input.split(\",\");\n    for ( String range : ranges ) {\n      if (range.trim().isEmpty()) {\n        continue;\n      }\n      Matcher m \u003d SINGLE_NUMBER.matcher(range.trim());\n      if (m.find()) {\n        inputPorts.add(Integer.parseInt(m.group()));\n        continue;\n      }\n      m \u003d NUMBER_RANGE.matcher(range.trim());\n      if (m.find()) {\n        String[] boundaryValues \u003d m.group(0).split(\"-\");\n        int start \u003d Integer.parseInt(boundaryValues[0].trim());\n        int end \u003d Integer.parseInt(boundaryValues[1].trim());\n        if (end \u003c start) {\n          throw new BadConfigException(\"End of port range is before start: \"\n              + range + \" in input: \" + input);\n        }\n        for (int i \u003d start; i \u003c end + 1; i++) {\n          inputPorts.add(i);\n        }\n        continue;\n      }\n      throw new BadConfigException(\"Bad port range: \" + range + \" in input: \"\n          + input);\n    }\n    if (inputPorts.size() \u003d\u003d 0) {\n      throw new BadConfigException(\"No ports found in range: \" + input);\n    }\n    this.remainingPortsToCheck \u003d new ArrayList\u003cInteger\u003e(inputPorts);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/utils/PortScanner.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/slider/common/tools/PortScanner.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/utils/PortScanner.java",
        "oldMethodName": "setPortRange",
        "newMethodName": "setPortRange"
      }
    },
    "f47df51791dfc1b3bda9cbd00f644894ba69c8ec": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5461. Initial code ported from slider-core module. (jianhe)\n",
      "commitDate": "06/11/17 1:28 PM",
      "commitName": "f47df51791dfc1b3bda9cbd00f644894ba69c8ec",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,35 @@\n+  public void setPortRange(String input) throws BadConfigException {\n+    // first split based on commas\n+    Set\u003cInteger\u003e inputPorts\u003d new TreeSet\u003cInteger\u003e();\n+    String[] ranges \u003d input.split(\",\");\n+    for ( String range : ranges ) {\n+      if (range.trim().isEmpty()) {\n+        continue;\n+      }\n+      Matcher m \u003d SINGLE_NUMBER.matcher(range.trim());\n+      if (m.find()) {\n+        inputPorts.add(Integer.parseInt(m.group()));\n+        continue;\n+      }\n+      m \u003d NUMBER_RANGE.matcher(range.trim());\n+      if (m.find()) {\n+        String[] boundaryValues \u003d m.group(0).split(\"-\");\n+        int start \u003d Integer.parseInt(boundaryValues[0].trim());\n+        int end \u003d Integer.parseInt(boundaryValues[1].trim());\n+        if (end \u003c start) {\n+          throw new BadConfigException(\"End of port range is before start: \"\n+              + range + \" in input: \" + input);\n+        }\n+        for (int i \u003d start; i \u003c end + 1; i++) {\n+          inputPorts.add(i);\n+        }\n+        continue;\n+      }\n+      throw new BadConfigException(\"Bad port range: \" + range + \" in input: \"\n+          + input);\n+    }\n+    if (inputPorts.size() \u003d\u003d 0) {\n+      throw new BadConfigException(\"No ports found in range: \" + input);\n+    }\n+    this.remainingPortsToCheck \u003d new ArrayList\u003cInteger\u003e(inputPorts);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void setPortRange(String input) throws BadConfigException {\n    // first split based on commas\n    Set\u003cInteger\u003e inputPorts\u003d new TreeSet\u003cInteger\u003e();\n    String[] ranges \u003d input.split(\",\");\n    for ( String range : ranges ) {\n      if (range.trim().isEmpty()) {\n        continue;\n      }\n      Matcher m \u003d SINGLE_NUMBER.matcher(range.trim());\n      if (m.find()) {\n        inputPorts.add(Integer.parseInt(m.group()));\n        continue;\n      }\n      m \u003d NUMBER_RANGE.matcher(range.trim());\n      if (m.find()) {\n        String[] boundaryValues \u003d m.group(0).split(\"-\");\n        int start \u003d Integer.parseInt(boundaryValues[0].trim());\n        int end \u003d Integer.parseInt(boundaryValues[1].trim());\n        if (end \u003c start) {\n          throw new BadConfigException(\"End of port range is before start: \"\n              + range + \" in input: \" + input);\n        }\n        for (int i \u003d start; i \u003c end + 1; i++) {\n          inputPorts.add(i);\n        }\n        continue;\n      }\n      throw new BadConfigException(\"Bad port range: \" + range + \" in input: \"\n          + input);\n    }\n    if (inputPorts.size() \u003d\u003d 0) {\n      throw new BadConfigException(\"No ports found in range: \" + input);\n    }\n    this.remainingPortsToCheck \u003d new ArrayList\u003cInteger\u003e(inputPorts);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/slider/common/tools/PortScanner.java"
    }
  }
}