{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "S3AFileSystem.java",
  "functionName": "toString",
  "functionId": "toString",
  "sourceFilePath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java",
  "functionStartLine": 3867,
  "functionEndLine": 3914,
  "numCommitsSeen": 141,
  "timeTaken": 7266,
  "changeHistory": [
    "34747c373f40a33d36a2e21ecb33fa791ccd939f",
    "6d0bffe17eadedd60d4599427248b0db4a7c5502",
    "7f783970364930cc461d1a73833bc58cdd10553e",
    "d7152332b32a575c3a92e3f4c44b95e58462528d",
    "da9a39eed138210de29b59b90c449b28da1c04f9",
    "268ab4e0279b3e40f4a627d3dfe91e2a3523a8cc",
    "de8b6ca5ef8614de6d6277b7617e27c788b0555c",
    "6c348c56918973fd988b110e79231324a8befe12",
    "4ee3543625c77c06d566fe81644d21c607d6d74d",
    "757050ff355d40bc28f9dbfd0c0083c5f337d270",
    "08ea07f1b8edbc38c99015c81a62ca127a247bf7",
    "27c4e90efce04e1b1302f668b5eb22412e00d033"
  ],
  "changeHistoryShort": {
    "34747c373f40a33d36a2e21ecb33fa791ccd939f": "Ybodychange",
    "6d0bffe17eadedd60d4599427248b0db4a7c5502": "Ybodychange",
    "7f783970364930cc461d1a73833bc58cdd10553e": "Ybodychange",
    "d7152332b32a575c3a92e3f4c44b95e58462528d": "Ybodychange",
    "da9a39eed138210de29b59b90c449b28da1c04f9": "Ybodychange",
    "268ab4e0279b3e40f4a627d3dfe91e2a3523a8cc": "Ybodychange",
    "de8b6ca5ef8614de6d6277b7617e27c788b0555c": "Ybodychange",
    "6c348c56918973fd988b110e79231324a8befe12": "Ybodychange",
    "4ee3543625c77c06d566fe81644d21c607d6d74d": "Ybodychange",
    "757050ff355d40bc28f9dbfd0c0083c5f337d270": "Ybodychange",
    "08ea07f1b8edbc38c99015c81a62ca127a247bf7": "Ybodychange",
    "27c4e90efce04e1b1302f668b5eb22412e00d033": "Yintroduced"
  },
  "changeHistoryDetails": {
    "34747c373f40a33d36a2e21ecb33fa791ccd939f": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16396. Allow authoritative mode on a subdirectory. (#1043)\n\n",
      "commitDate": "03/07/19 11:04 AM",
      "commitName": "34747c373f40a33d36a2e21ecb33fa791ccd939f",
      "commitAuthor": "Sean Mackrory",
      "commitDateOld": "20/06/19 1:56 AM",
      "commitNameOld": "e02eb24e0a9139418120027b694492e0738df20a",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 13.38,
      "commitsBetweenForRepo": 143,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,47 +1,48 @@\n   public String toString() {\n     final StringBuilder sb \u003d new StringBuilder(\n         \"S3AFileSystem{\");\n     sb.append(\"uri\u003d\").append(uri);\n     sb.append(\", workingDir\u003d\").append(workingDir);\n     sb.append(\", inputPolicy\u003d\").append(inputPolicy);\n     sb.append(\", partSize\u003d\").append(partSize);\n     sb.append(\", enableMultiObjectsDelete\u003d\").append(enableMultiObjectsDelete);\n     sb.append(\", maxKeys\u003d\").append(maxKeys);\n     if (cannedACL !\u003d null) {\n       sb.append(\", cannedACL\u003d\").append(cannedACL.toString());\n     }\n     sb.append(\", readAhead\u003d\").append(readAhead);\n     if (getConf() !\u003d null) {\n       sb.append(\", blockSize\u003d\").append(getDefaultBlockSize());\n     }\n     sb.append(\", multiPartThreshold\u003d\").append(multiPartThreshold);\n     if (getServerSideEncryptionAlgorithm() !\u003d null) {\n       sb.append(\", serverSideEncryptionAlgorithm\u003d\u0027\")\n           .append(getServerSideEncryptionAlgorithm())\n           .append(\u0027\\\u0027\u0027);\n     }\n     if (blockFactory !\u003d null) {\n       sb.append(\", blockFactory\u003d\").append(blockFactory);\n     }\n     sb.append(\", metastore\u003d\").append(metadataStore);\n-    sb.append(\", authoritative\u003d\").append(allowAuthoritative);\n+    sb.append(\", authoritativeStore\u003d\").append(allowAuthoritativeMetadataStore);\n+    sb.append(\", authoritativePath\u003d\").append(allowAuthoritativePaths);\n     sb.append(\", useListV1\u003d\").append(useListV1);\n     if (committerIntegration !\u003d null) {\n       sb.append(\", magicCommitter\u003d\").append(isMagicCommitEnabled());\n     }\n     sb.append(\", boundedExecutor\u003d\").append(boundedThreadPool);\n     sb.append(\", unboundedExecutor\u003d\").append(unboundedThreadPool);\n     sb.append(\", credentials\u003d\").append(credentials);\n     sb.append(\", delegation tokens\u003d\")\n         .append(delegationTokens.map(Objects::toString).orElse(\"disabled\"));\n     sb.append(\", statistics {\")\n         .append(statistics)\n         .append(\"}\");\n     if (instrumentation !\u003d null) {\n       sb.append(\", metrics {\")\n           .append(instrumentation.dump(\"{\", \"\u003d\", \"} \", true))\n           .append(\"}\");\n     }\n     sb.append(\u0027}\u0027);\n     return sb.toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    final StringBuilder sb \u003d new StringBuilder(\n        \"S3AFileSystem{\");\n    sb.append(\"uri\u003d\").append(uri);\n    sb.append(\", workingDir\u003d\").append(workingDir);\n    sb.append(\", inputPolicy\u003d\").append(inputPolicy);\n    sb.append(\", partSize\u003d\").append(partSize);\n    sb.append(\", enableMultiObjectsDelete\u003d\").append(enableMultiObjectsDelete);\n    sb.append(\", maxKeys\u003d\").append(maxKeys);\n    if (cannedACL !\u003d null) {\n      sb.append(\", cannedACL\u003d\").append(cannedACL.toString());\n    }\n    sb.append(\", readAhead\u003d\").append(readAhead);\n    if (getConf() !\u003d null) {\n      sb.append(\", blockSize\u003d\").append(getDefaultBlockSize());\n    }\n    sb.append(\", multiPartThreshold\u003d\").append(multiPartThreshold);\n    if (getServerSideEncryptionAlgorithm() !\u003d null) {\n      sb.append(\", serverSideEncryptionAlgorithm\u003d\u0027\")\n          .append(getServerSideEncryptionAlgorithm())\n          .append(\u0027\\\u0027\u0027);\n    }\n    if (blockFactory !\u003d null) {\n      sb.append(\", blockFactory\u003d\").append(blockFactory);\n    }\n    sb.append(\", metastore\u003d\").append(metadataStore);\n    sb.append(\", authoritativeStore\u003d\").append(allowAuthoritativeMetadataStore);\n    sb.append(\", authoritativePath\u003d\").append(allowAuthoritativePaths);\n    sb.append(\", useListV1\u003d\").append(useListV1);\n    if (committerIntegration !\u003d null) {\n      sb.append(\", magicCommitter\u003d\").append(isMagicCommitEnabled());\n    }\n    sb.append(\", boundedExecutor\u003d\").append(boundedThreadPool);\n    sb.append(\", unboundedExecutor\u003d\").append(unboundedThreadPool);\n    sb.append(\", credentials\u003d\").append(credentials);\n    sb.append(\", delegation tokens\u003d\")\n        .append(delegationTokens.map(Objects::toString).orElse(\"disabled\"));\n    sb.append(\", statistics {\")\n        .append(statistics)\n        .append(\"}\");\n    if (instrumentation !\u003d null) {\n      sb.append(\", metrics {\")\n          .append(instrumentation.dump(\"{\", \"\u003d\", \"} \", true))\n          .append(\"}\");\n    }\n    sb.append(\u0027}\u0027);\n    return sb.toString();\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java",
      "extendedDetails": {}
    },
    "6d0bffe17eadedd60d4599427248b0db4a7c5502": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14556. S3A to support Delegation Tokens.\n\nContributed by Steve Loughran and Daryn Sharp.\n",
      "commitDate": "14/01/19 9:59 AM",
      "commitName": "6d0bffe17eadedd60d4599427248b0db4a7c5502",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "07/01/19 9:51 PM",
      "commitNameOld": "7f783970364930cc461d1a73833bc58cdd10553e",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 6.51,
      "commitsBetweenForRepo": 32,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,45 +1,47 @@\n   public String toString() {\n     final StringBuilder sb \u003d new StringBuilder(\n         \"S3AFileSystem{\");\n     sb.append(\"uri\u003d\").append(uri);\n     sb.append(\", workingDir\u003d\").append(workingDir);\n     sb.append(\", inputPolicy\u003d\").append(inputPolicy);\n     sb.append(\", partSize\u003d\").append(partSize);\n     sb.append(\", enableMultiObjectsDelete\u003d\").append(enableMultiObjectsDelete);\n     sb.append(\", maxKeys\u003d\").append(maxKeys);\n     if (cannedACL !\u003d null) {\n       sb.append(\", cannedACL\u003d\").append(cannedACL.toString());\n     }\n     sb.append(\", readAhead\u003d\").append(readAhead);\n     if (getConf() !\u003d null) {\n       sb.append(\", blockSize\u003d\").append(getDefaultBlockSize());\n     }\n     sb.append(\", multiPartThreshold\u003d\").append(multiPartThreshold);\n-    if (serverSideEncryptionAlgorithm !\u003d null) {\n+    if (getServerSideEncryptionAlgorithm() !\u003d null) {\n       sb.append(\", serverSideEncryptionAlgorithm\u003d\u0027\")\n-          .append(serverSideEncryptionAlgorithm)\n+          .append(getServerSideEncryptionAlgorithm())\n           .append(\u0027\\\u0027\u0027);\n     }\n     if (blockFactory !\u003d null) {\n       sb.append(\", blockFactory\u003d\").append(blockFactory);\n     }\n     sb.append(\", metastore\u003d\").append(metadataStore);\n     sb.append(\", authoritative\u003d\").append(allowAuthoritative);\n     sb.append(\", useListV1\u003d\").append(useListV1);\n     if (committerIntegration !\u003d null) {\n       sb.append(\", magicCommitter\u003d\").append(isMagicCommitEnabled());\n     }\n     sb.append(\", boundedExecutor\u003d\").append(boundedThreadPool);\n     sb.append(\", unboundedExecutor\u003d\").append(unboundedThreadPool);\n     sb.append(\", credentials\u003d\").append(credentials);\n+    sb.append(\", delegation tokens\u003d\")\n+        .append(delegationTokens.map(Objects::toString).orElse(\"disabled\"));\n     sb.append(\", statistics {\")\n         .append(statistics)\n         .append(\"}\");\n     if (instrumentation !\u003d null) {\n       sb.append(\", metrics {\")\n           .append(instrumentation.dump(\"{\", \"\u003d\", \"} \", true))\n           .append(\"}\");\n     }\n     sb.append(\u0027}\u0027);\n     return sb.toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    final StringBuilder sb \u003d new StringBuilder(\n        \"S3AFileSystem{\");\n    sb.append(\"uri\u003d\").append(uri);\n    sb.append(\", workingDir\u003d\").append(workingDir);\n    sb.append(\", inputPolicy\u003d\").append(inputPolicy);\n    sb.append(\", partSize\u003d\").append(partSize);\n    sb.append(\", enableMultiObjectsDelete\u003d\").append(enableMultiObjectsDelete);\n    sb.append(\", maxKeys\u003d\").append(maxKeys);\n    if (cannedACL !\u003d null) {\n      sb.append(\", cannedACL\u003d\").append(cannedACL.toString());\n    }\n    sb.append(\", readAhead\u003d\").append(readAhead);\n    if (getConf() !\u003d null) {\n      sb.append(\", blockSize\u003d\").append(getDefaultBlockSize());\n    }\n    sb.append(\", multiPartThreshold\u003d\").append(multiPartThreshold);\n    if (getServerSideEncryptionAlgorithm() !\u003d null) {\n      sb.append(\", serverSideEncryptionAlgorithm\u003d\u0027\")\n          .append(getServerSideEncryptionAlgorithm())\n          .append(\u0027\\\u0027\u0027);\n    }\n    if (blockFactory !\u003d null) {\n      sb.append(\", blockFactory\u003d\").append(blockFactory);\n    }\n    sb.append(\", metastore\u003d\").append(metadataStore);\n    sb.append(\", authoritative\u003d\").append(allowAuthoritative);\n    sb.append(\", useListV1\u003d\").append(useListV1);\n    if (committerIntegration !\u003d null) {\n      sb.append(\", magicCommitter\u003d\").append(isMagicCommitEnabled());\n    }\n    sb.append(\", boundedExecutor\u003d\").append(boundedThreadPool);\n    sb.append(\", unboundedExecutor\u003d\").append(unboundedThreadPool);\n    sb.append(\", credentials\u003d\").append(credentials);\n    sb.append(\", delegation tokens\u003d\")\n        .append(delegationTokens.map(Objects::toString).orElse(\"disabled\"));\n    sb.append(\", statistics {\")\n        .append(statistics)\n        .append(\"}\");\n    if (instrumentation !\u003d null) {\n      sb.append(\", metrics {\")\n          .append(instrumentation.dump(\"{\", \"\u003d\", \"} \", true))\n          .append(\"}\");\n    }\n    sb.append(\u0027}\u0027);\n    return sb.toString();\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java",
      "extendedDetails": {}
    },
    "7f783970364930cc461d1a73833bc58cdd10553e": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"HADOOP-14556. S3A to support Delegation Tokens.\"\n\nThis reverts commit d7152332b32a575c3a92e3f4c44b95e58462528d.\n",
      "commitDate": "07/01/19 9:51 PM",
      "commitName": "7f783970364930cc461d1a73833bc58cdd10553e",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "07/01/19 5:18 AM",
      "commitNameOld": "d7152332b32a575c3a92e3f4c44b95e58462528d",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 0.69,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,47 +1,45 @@\n   public String toString() {\n     final StringBuilder sb \u003d new StringBuilder(\n         \"S3AFileSystem{\");\n     sb.append(\"uri\u003d\").append(uri);\n     sb.append(\", workingDir\u003d\").append(workingDir);\n     sb.append(\", inputPolicy\u003d\").append(inputPolicy);\n     sb.append(\", partSize\u003d\").append(partSize);\n     sb.append(\", enableMultiObjectsDelete\u003d\").append(enableMultiObjectsDelete);\n     sb.append(\", maxKeys\u003d\").append(maxKeys);\n     if (cannedACL !\u003d null) {\n       sb.append(\", cannedACL\u003d\").append(cannedACL.toString());\n     }\n     sb.append(\", readAhead\u003d\").append(readAhead);\n     if (getConf() !\u003d null) {\n       sb.append(\", blockSize\u003d\").append(getDefaultBlockSize());\n     }\n     sb.append(\", multiPartThreshold\u003d\").append(multiPartThreshold);\n-    if (getServerSideEncryptionAlgorithm() !\u003d null) {\n+    if (serverSideEncryptionAlgorithm !\u003d null) {\n       sb.append(\", serverSideEncryptionAlgorithm\u003d\u0027\")\n-          .append(getServerSideEncryptionAlgorithm())\n+          .append(serverSideEncryptionAlgorithm)\n           .append(\u0027\\\u0027\u0027);\n     }\n     if (blockFactory !\u003d null) {\n       sb.append(\", blockFactory\u003d\").append(blockFactory);\n     }\n     sb.append(\", metastore\u003d\").append(metadataStore);\n     sb.append(\", authoritative\u003d\").append(allowAuthoritative);\n     sb.append(\", useListV1\u003d\").append(useListV1);\n     if (committerIntegration !\u003d null) {\n       sb.append(\", magicCommitter\u003d\").append(isMagicCommitEnabled());\n     }\n     sb.append(\", boundedExecutor\u003d\").append(boundedThreadPool);\n     sb.append(\", unboundedExecutor\u003d\").append(unboundedThreadPool);\n     sb.append(\", credentials\u003d\").append(credentials);\n-    sb.append(\", delegation tokens\u003d\")\n-        .append(delegationTokens.map(Objects::toString).orElse(\"disabled\"));\n     sb.append(\", statistics {\")\n         .append(statistics)\n         .append(\"}\");\n     if (instrumentation !\u003d null) {\n       sb.append(\", metrics {\")\n           .append(instrumentation.dump(\"{\", \"\u003d\", \"} \", true))\n           .append(\"}\");\n     }\n     sb.append(\u0027}\u0027);\n     return sb.toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    final StringBuilder sb \u003d new StringBuilder(\n        \"S3AFileSystem{\");\n    sb.append(\"uri\u003d\").append(uri);\n    sb.append(\", workingDir\u003d\").append(workingDir);\n    sb.append(\", inputPolicy\u003d\").append(inputPolicy);\n    sb.append(\", partSize\u003d\").append(partSize);\n    sb.append(\", enableMultiObjectsDelete\u003d\").append(enableMultiObjectsDelete);\n    sb.append(\", maxKeys\u003d\").append(maxKeys);\n    if (cannedACL !\u003d null) {\n      sb.append(\", cannedACL\u003d\").append(cannedACL.toString());\n    }\n    sb.append(\", readAhead\u003d\").append(readAhead);\n    if (getConf() !\u003d null) {\n      sb.append(\", blockSize\u003d\").append(getDefaultBlockSize());\n    }\n    sb.append(\", multiPartThreshold\u003d\").append(multiPartThreshold);\n    if (serverSideEncryptionAlgorithm !\u003d null) {\n      sb.append(\", serverSideEncryptionAlgorithm\u003d\u0027\")\n          .append(serverSideEncryptionAlgorithm)\n          .append(\u0027\\\u0027\u0027);\n    }\n    if (blockFactory !\u003d null) {\n      sb.append(\", blockFactory\u003d\").append(blockFactory);\n    }\n    sb.append(\", metastore\u003d\").append(metadataStore);\n    sb.append(\", authoritative\u003d\").append(allowAuthoritative);\n    sb.append(\", useListV1\u003d\").append(useListV1);\n    if (committerIntegration !\u003d null) {\n      sb.append(\", magicCommitter\u003d\").append(isMagicCommitEnabled());\n    }\n    sb.append(\", boundedExecutor\u003d\").append(boundedThreadPool);\n    sb.append(\", unboundedExecutor\u003d\").append(unboundedThreadPool);\n    sb.append(\", credentials\u003d\").append(credentials);\n    sb.append(\", statistics {\")\n        .append(statistics)\n        .append(\"}\");\n    if (instrumentation !\u003d null) {\n      sb.append(\", metrics {\")\n          .append(instrumentation.dump(\"{\", \"\u003d\", \"} \", true))\n          .append(\"}\");\n    }\n    sb.append(\u0027}\u0027);\n    return sb.toString();\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java",
      "extendedDetails": {}
    },
    "d7152332b32a575c3a92e3f4c44b95e58462528d": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14556. S3A to support Delegation Tokens.\n\nContributed by Steve Loughran.\n",
      "commitDate": "07/01/19 5:18 AM",
      "commitName": "d7152332b32a575c3a92e3f4c44b95e58462528d",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "28/11/18 9:45 AM",
      "commitNameOld": "5d96b74f33ca716c9fe4fadb046f79ed488a3059",
      "commitAuthorOld": "Sean Mackrory",
      "daysBetweenCommits": 39.81,
      "commitsBetweenForRepo": 242,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,45 +1,47 @@\n   public String toString() {\n     final StringBuilder sb \u003d new StringBuilder(\n         \"S3AFileSystem{\");\n     sb.append(\"uri\u003d\").append(uri);\n     sb.append(\", workingDir\u003d\").append(workingDir);\n     sb.append(\", inputPolicy\u003d\").append(inputPolicy);\n     sb.append(\", partSize\u003d\").append(partSize);\n     sb.append(\", enableMultiObjectsDelete\u003d\").append(enableMultiObjectsDelete);\n     sb.append(\", maxKeys\u003d\").append(maxKeys);\n     if (cannedACL !\u003d null) {\n       sb.append(\", cannedACL\u003d\").append(cannedACL.toString());\n     }\n     sb.append(\", readAhead\u003d\").append(readAhead);\n     if (getConf() !\u003d null) {\n       sb.append(\", blockSize\u003d\").append(getDefaultBlockSize());\n     }\n     sb.append(\", multiPartThreshold\u003d\").append(multiPartThreshold);\n-    if (serverSideEncryptionAlgorithm !\u003d null) {\n+    if (getServerSideEncryptionAlgorithm() !\u003d null) {\n       sb.append(\", serverSideEncryptionAlgorithm\u003d\u0027\")\n-          .append(serverSideEncryptionAlgorithm)\n+          .append(getServerSideEncryptionAlgorithm())\n           .append(\u0027\\\u0027\u0027);\n     }\n     if (blockFactory !\u003d null) {\n       sb.append(\", blockFactory\u003d\").append(blockFactory);\n     }\n     sb.append(\", metastore\u003d\").append(metadataStore);\n     sb.append(\", authoritative\u003d\").append(allowAuthoritative);\n     sb.append(\", useListV1\u003d\").append(useListV1);\n     if (committerIntegration !\u003d null) {\n       sb.append(\", magicCommitter\u003d\").append(isMagicCommitEnabled());\n     }\n     sb.append(\", boundedExecutor\u003d\").append(boundedThreadPool);\n     sb.append(\", unboundedExecutor\u003d\").append(unboundedThreadPool);\n     sb.append(\", credentials\u003d\").append(credentials);\n+    sb.append(\", delegation tokens\u003d\")\n+        .append(delegationTokens.map(Objects::toString).orElse(\"disabled\"));\n     sb.append(\", statistics {\")\n         .append(statistics)\n         .append(\"}\");\n     if (instrumentation !\u003d null) {\n       sb.append(\", metrics {\")\n           .append(instrumentation.dump(\"{\", \"\u003d\", \"} \", true))\n           .append(\"}\");\n     }\n     sb.append(\u0027}\u0027);\n     return sb.toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    final StringBuilder sb \u003d new StringBuilder(\n        \"S3AFileSystem{\");\n    sb.append(\"uri\u003d\").append(uri);\n    sb.append(\", workingDir\u003d\").append(workingDir);\n    sb.append(\", inputPolicy\u003d\").append(inputPolicy);\n    sb.append(\", partSize\u003d\").append(partSize);\n    sb.append(\", enableMultiObjectsDelete\u003d\").append(enableMultiObjectsDelete);\n    sb.append(\", maxKeys\u003d\").append(maxKeys);\n    if (cannedACL !\u003d null) {\n      sb.append(\", cannedACL\u003d\").append(cannedACL.toString());\n    }\n    sb.append(\", readAhead\u003d\").append(readAhead);\n    if (getConf() !\u003d null) {\n      sb.append(\", blockSize\u003d\").append(getDefaultBlockSize());\n    }\n    sb.append(\", multiPartThreshold\u003d\").append(multiPartThreshold);\n    if (getServerSideEncryptionAlgorithm() !\u003d null) {\n      sb.append(\", serverSideEncryptionAlgorithm\u003d\u0027\")\n          .append(getServerSideEncryptionAlgorithm())\n          .append(\u0027\\\u0027\u0027);\n    }\n    if (blockFactory !\u003d null) {\n      sb.append(\", blockFactory\u003d\").append(blockFactory);\n    }\n    sb.append(\", metastore\u003d\").append(metadataStore);\n    sb.append(\", authoritative\u003d\").append(allowAuthoritative);\n    sb.append(\", useListV1\u003d\").append(useListV1);\n    if (committerIntegration !\u003d null) {\n      sb.append(\", magicCommitter\u003d\").append(isMagicCommitEnabled());\n    }\n    sb.append(\", boundedExecutor\u003d\").append(boundedThreadPool);\n    sb.append(\", unboundedExecutor\u003d\").append(unboundedThreadPool);\n    sb.append(\", credentials\u003d\").append(credentials);\n    sb.append(\", delegation tokens\u003d\")\n        .append(delegationTokens.map(Objects::toString).orElse(\"disabled\"));\n    sb.append(\", statistics {\")\n        .append(statistics)\n        .append(\"}\");\n    if (instrumentation !\u003d null) {\n      sb.append(\", metrics {\")\n          .append(instrumentation.dump(\"{\", \"\u003d\", \"} \", true))\n          .append(\"}\");\n    }\n    sb.append(\u0027}\u0027);\n    return sb.toString();\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java",
      "extendedDetails": {}
    },
    "da9a39eed138210de29b59b90c449b28da1c04f9": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15583. Stabilize S3A Assumed Role support.\nContributed by Steve Loughran.\n",
      "commitDate": "08/08/18 10:57 PM",
      "commitName": "da9a39eed138210de29b59b90c449b28da1c04f9",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "27/06/18 10:37 PM",
      "commitNameOld": "2b2399d623539ab68e71a38fa9fbfc9a405bddb8",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 42.01,
      "commitsBetweenForRepo": 267,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,44 +1,45 @@\n   public String toString() {\n     final StringBuilder sb \u003d new StringBuilder(\n         \"S3AFileSystem{\");\n     sb.append(\"uri\u003d\").append(uri);\n     sb.append(\", workingDir\u003d\").append(workingDir);\n     sb.append(\", inputPolicy\u003d\").append(inputPolicy);\n     sb.append(\", partSize\u003d\").append(partSize);\n     sb.append(\", enableMultiObjectsDelete\u003d\").append(enableMultiObjectsDelete);\n     sb.append(\", maxKeys\u003d\").append(maxKeys);\n     if (cannedACL !\u003d null) {\n       sb.append(\", cannedACL\u003d\").append(cannedACL.toString());\n     }\n     sb.append(\", readAhead\u003d\").append(readAhead);\n     if (getConf() !\u003d null) {\n       sb.append(\", blockSize\u003d\").append(getDefaultBlockSize());\n     }\n     sb.append(\", multiPartThreshold\u003d\").append(multiPartThreshold);\n     if (serverSideEncryptionAlgorithm !\u003d null) {\n       sb.append(\", serverSideEncryptionAlgorithm\u003d\u0027\")\n           .append(serverSideEncryptionAlgorithm)\n           .append(\u0027\\\u0027\u0027);\n     }\n     if (blockFactory !\u003d null) {\n       sb.append(\", blockFactory\u003d\").append(blockFactory);\n     }\n     sb.append(\", metastore\u003d\").append(metadataStore);\n     sb.append(\", authoritative\u003d\").append(allowAuthoritative);\n     sb.append(\", useListV1\u003d\").append(useListV1);\n     if (committerIntegration !\u003d null) {\n       sb.append(\", magicCommitter\u003d\").append(isMagicCommitEnabled());\n     }\n     sb.append(\", boundedExecutor\u003d\").append(boundedThreadPool);\n     sb.append(\", unboundedExecutor\u003d\").append(unboundedThreadPool);\n+    sb.append(\", credentials\u003d\").append(credentials);\n     sb.append(\", statistics {\")\n         .append(statistics)\n         .append(\"}\");\n     if (instrumentation !\u003d null) {\n       sb.append(\", metrics {\")\n           .append(instrumentation.dump(\"{\", \"\u003d\", \"} \", true))\n           .append(\"}\");\n     }\n     sb.append(\u0027}\u0027);\n     return sb.toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    final StringBuilder sb \u003d new StringBuilder(\n        \"S3AFileSystem{\");\n    sb.append(\"uri\u003d\").append(uri);\n    sb.append(\", workingDir\u003d\").append(workingDir);\n    sb.append(\", inputPolicy\u003d\").append(inputPolicy);\n    sb.append(\", partSize\u003d\").append(partSize);\n    sb.append(\", enableMultiObjectsDelete\u003d\").append(enableMultiObjectsDelete);\n    sb.append(\", maxKeys\u003d\").append(maxKeys);\n    if (cannedACL !\u003d null) {\n      sb.append(\", cannedACL\u003d\").append(cannedACL.toString());\n    }\n    sb.append(\", readAhead\u003d\").append(readAhead);\n    if (getConf() !\u003d null) {\n      sb.append(\", blockSize\u003d\").append(getDefaultBlockSize());\n    }\n    sb.append(\", multiPartThreshold\u003d\").append(multiPartThreshold);\n    if (serverSideEncryptionAlgorithm !\u003d null) {\n      sb.append(\", serverSideEncryptionAlgorithm\u003d\u0027\")\n          .append(serverSideEncryptionAlgorithm)\n          .append(\u0027\\\u0027\u0027);\n    }\n    if (blockFactory !\u003d null) {\n      sb.append(\", blockFactory\u003d\").append(blockFactory);\n    }\n    sb.append(\", metastore\u003d\").append(metadataStore);\n    sb.append(\", authoritative\u003d\").append(allowAuthoritative);\n    sb.append(\", useListV1\u003d\").append(useListV1);\n    if (committerIntegration !\u003d null) {\n      sb.append(\", magicCommitter\u003d\").append(isMagicCommitEnabled());\n    }\n    sb.append(\", boundedExecutor\u003d\").append(boundedThreadPool);\n    sb.append(\", unboundedExecutor\u003d\").append(unboundedThreadPool);\n    sb.append(\", credentials\u003d\").append(credentials);\n    sb.append(\", statistics {\")\n        .append(statistics)\n        .append(\"}\");\n    if (instrumentation !\u003d null) {\n      sb.append(\", metrics {\")\n          .append(instrumentation.dump(\"{\", \"\u003d\", \"} \", true))\n          .append(\"}\");\n    }\n    sb.append(\u0027}\u0027);\n    return sb.toString();\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java",
      "extendedDetails": {}
    },
    "268ab4e0279b3e40f4a627d3dfe91e2a3523a8cc": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15141 Support IAM Assumed roles in S3A. Contributed by Steve Loughran.\n",
      "commitDate": "17/01/18 12:05 AM",
      "commitName": "268ab4e0279b3e40f4a627d3dfe91e2a3523a8cc",
      "commitAuthor": "Aaron Fabbri",
      "commitDateOld": "15/01/18 3:33 AM",
      "commitNameOld": "a0c71dcc33ca7c5539d0ab61c4a276c4f39e5744",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 1.86,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,42 +1,44 @@\n   public String toString() {\n     final StringBuilder sb \u003d new StringBuilder(\n         \"S3AFileSystem{\");\n     sb.append(\"uri\u003d\").append(uri);\n     sb.append(\", workingDir\u003d\").append(workingDir);\n     sb.append(\", inputPolicy\u003d\").append(inputPolicy);\n     sb.append(\", partSize\u003d\").append(partSize);\n     sb.append(\", enableMultiObjectsDelete\u003d\").append(enableMultiObjectsDelete);\n     sb.append(\", maxKeys\u003d\").append(maxKeys);\n     if (cannedACL !\u003d null) {\n       sb.append(\", cannedACL\u003d\").append(cannedACL.toString());\n     }\n     sb.append(\", readAhead\u003d\").append(readAhead);\n     if (getConf() !\u003d null) {\n       sb.append(\", blockSize\u003d\").append(getDefaultBlockSize());\n     }\n     sb.append(\", multiPartThreshold\u003d\").append(multiPartThreshold);\n     if (serverSideEncryptionAlgorithm !\u003d null) {\n       sb.append(\", serverSideEncryptionAlgorithm\u003d\u0027\")\n           .append(serverSideEncryptionAlgorithm)\n           .append(\u0027\\\u0027\u0027);\n     }\n     if (blockFactory !\u003d null) {\n       sb.append(\", blockFactory\u003d\").append(blockFactory);\n     }\n     sb.append(\", metastore\u003d\").append(metadataStore);\n     sb.append(\", authoritative\u003d\").append(allowAuthoritative);\n     sb.append(\", useListV1\u003d\").append(useListV1);\n-    sb.append(\", magicCommitter\u003d\").append(isMagicCommitEnabled());\n+    if (committerIntegration !\u003d null) {\n+      sb.append(\", magicCommitter\u003d\").append(isMagicCommitEnabled());\n+    }\n     sb.append(\", boundedExecutor\u003d\").append(boundedThreadPool);\n     sb.append(\", unboundedExecutor\u003d\").append(unboundedThreadPool);\n     sb.append(\", statistics {\")\n         .append(statistics)\n         .append(\"}\");\n     if (instrumentation !\u003d null) {\n       sb.append(\", metrics {\")\n           .append(instrumentation.dump(\"{\", \"\u003d\", \"} \", true))\n           .append(\"}\");\n     }\n     sb.append(\u0027}\u0027);\n     return sb.toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    final StringBuilder sb \u003d new StringBuilder(\n        \"S3AFileSystem{\");\n    sb.append(\"uri\u003d\").append(uri);\n    sb.append(\", workingDir\u003d\").append(workingDir);\n    sb.append(\", inputPolicy\u003d\").append(inputPolicy);\n    sb.append(\", partSize\u003d\").append(partSize);\n    sb.append(\", enableMultiObjectsDelete\u003d\").append(enableMultiObjectsDelete);\n    sb.append(\", maxKeys\u003d\").append(maxKeys);\n    if (cannedACL !\u003d null) {\n      sb.append(\", cannedACL\u003d\").append(cannedACL.toString());\n    }\n    sb.append(\", readAhead\u003d\").append(readAhead);\n    if (getConf() !\u003d null) {\n      sb.append(\", blockSize\u003d\").append(getDefaultBlockSize());\n    }\n    sb.append(\", multiPartThreshold\u003d\").append(multiPartThreshold);\n    if (serverSideEncryptionAlgorithm !\u003d null) {\n      sb.append(\", serverSideEncryptionAlgorithm\u003d\u0027\")\n          .append(serverSideEncryptionAlgorithm)\n          .append(\u0027\\\u0027\u0027);\n    }\n    if (blockFactory !\u003d null) {\n      sb.append(\", blockFactory\u003d\").append(blockFactory);\n    }\n    sb.append(\", metastore\u003d\").append(metadataStore);\n    sb.append(\", authoritative\u003d\").append(allowAuthoritative);\n    sb.append(\", useListV1\u003d\").append(useListV1);\n    if (committerIntegration !\u003d null) {\n      sb.append(\", magicCommitter\u003d\").append(isMagicCommitEnabled());\n    }\n    sb.append(\", boundedExecutor\u003d\").append(boundedThreadPool);\n    sb.append(\", unboundedExecutor\u003d\").append(unboundedThreadPool);\n    sb.append(\", statistics {\")\n        .append(statistics)\n        .append(\"}\");\n    if (instrumentation !\u003d null) {\n      sb.append(\", metrics {\")\n          .append(instrumentation.dump(\"{\", \"\u003d\", \"} \", true))\n          .append(\"}\");\n    }\n    sb.append(\u0027}\u0027);\n    return sb.toString();\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java",
      "extendedDetails": {}
    },
    "de8b6ca5ef8614de6d6277b7617e27c788b0555c": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13786 Add S3A committer for zero-rename commits to S3 endpoints.\nContributed by Steve Loughran and Ryan Blue.\n",
      "commitDate": "22/11/17 7:28 AM",
      "commitName": "de8b6ca5ef8614de6d6277b7617e27c788b0555c",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "25/09/17 3:59 PM",
      "commitNameOld": "47011d7dd300b0c74bb6cfe25b918c479d718f4f",
      "commitAuthorOld": "Aaron Fabbri",
      "daysBetweenCommits": 57.69,
      "commitsBetweenForRepo": 477,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,42 @@\n-    public String toString() {\n-      final StringBuilder sb \u003d new StringBuilder(\n-          \"{bucket\u003d\").append(bucket);\n-      sb.append(\", key\u003d\u0027\").append(key).append(\u0027\\\u0027\u0027);\n-      sb.append(\u0027}\u0027);\n-      return sb.toString();\n-    }\n\\ No newline at end of file\n+  public String toString() {\n+    final StringBuilder sb \u003d new StringBuilder(\n+        \"S3AFileSystem{\");\n+    sb.append(\"uri\u003d\").append(uri);\n+    sb.append(\", workingDir\u003d\").append(workingDir);\n+    sb.append(\", inputPolicy\u003d\").append(inputPolicy);\n+    sb.append(\", partSize\u003d\").append(partSize);\n+    sb.append(\", enableMultiObjectsDelete\u003d\").append(enableMultiObjectsDelete);\n+    sb.append(\", maxKeys\u003d\").append(maxKeys);\n+    if (cannedACL !\u003d null) {\n+      sb.append(\", cannedACL\u003d\").append(cannedACL.toString());\n+    }\n+    sb.append(\", readAhead\u003d\").append(readAhead);\n+    if (getConf() !\u003d null) {\n+      sb.append(\", blockSize\u003d\").append(getDefaultBlockSize());\n+    }\n+    sb.append(\", multiPartThreshold\u003d\").append(multiPartThreshold);\n+    if (serverSideEncryptionAlgorithm !\u003d null) {\n+      sb.append(\", serverSideEncryptionAlgorithm\u003d\u0027\")\n+          .append(serverSideEncryptionAlgorithm)\n+          .append(\u0027\\\u0027\u0027);\n+    }\n+    if (blockFactory !\u003d null) {\n+      sb.append(\", blockFactory\u003d\").append(blockFactory);\n+    }\n+    sb.append(\", metastore\u003d\").append(metadataStore);\n+    sb.append(\", authoritative\u003d\").append(allowAuthoritative);\n+    sb.append(\", useListV1\u003d\").append(useListV1);\n+    sb.append(\", magicCommitter\u003d\").append(isMagicCommitEnabled());\n+    sb.append(\", boundedExecutor\u003d\").append(boundedThreadPool);\n+    sb.append(\", unboundedExecutor\u003d\").append(unboundedThreadPool);\n+    sb.append(\", statistics {\")\n+        .append(statistics)\n+        .append(\"}\");\n+    if (instrumentation !\u003d null) {\n+      sb.append(\", metrics {\")\n+          .append(instrumentation.dump(\"{\", \"\u003d\", \"} \", true))\n+          .append(\"}\");\n+    }\n+    sb.append(\u0027}\u0027);\n+    return sb.toString();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    final StringBuilder sb \u003d new StringBuilder(\n        \"S3AFileSystem{\");\n    sb.append(\"uri\u003d\").append(uri);\n    sb.append(\", workingDir\u003d\").append(workingDir);\n    sb.append(\", inputPolicy\u003d\").append(inputPolicy);\n    sb.append(\", partSize\u003d\").append(partSize);\n    sb.append(\", enableMultiObjectsDelete\u003d\").append(enableMultiObjectsDelete);\n    sb.append(\", maxKeys\u003d\").append(maxKeys);\n    if (cannedACL !\u003d null) {\n      sb.append(\", cannedACL\u003d\").append(cannedACL.toString());\n    }\n    sb.append(\", readAhead\u003d\").append(readAhead);\n    if (getConf() !\u003d null) {\n      sb.append(\", blockSize\u003d\").append(getDefaultBlockSize());\n    }\n    sb.append(\", multiPartThreshold\u003d\").append(multiPartThreshold);\n    if (serverSideEncryptionAlgorithm !\u003d null) {\n      sb.append(\", serverSideEncryptionAlgorithm\u003d\u0027\")\n          .append(serverSideEncryptionAlgorithm)\n          .append(\u0027\\\u0027\u0027);\n    }\n    if (blockFactory !\u003d null) {\n      sb.append(\", blockFactory\u003d\").append(blockFactory);\n    }\n    sb.append(\", metastore\u003d\").append(metadataStore);\n    sb.append(\", authoritative\u003d\").append(allowAuthoritative);\n    sb.append(\", useListV1\u003d\").append(useListV1);\n    sb.append(\", magicCommitter\u003d\").append(isMagicCommitEnabled());\n    sb.append(\", boundedExecutor\u003d\").append(boundedThreadPool);\n    sb.append(\", unboundedExecutor\u003d\").append(unboundedThreadPool);\n    sb.append(\", statistics {\")\n        .append(statistics)\n        .append(\"}\");\n    if (instrumentation !\u003d null) {\n      sb.append(\", metrics {\")\n          .append(instrumentation.dump(\"{\", \"\u003d\", \"} \", true))\n          .append(\"}\");\n    }\n    sb.append(\u0027}\u0027);\n    return sb.toString();\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java",
      "extendedDetails": {}
    },
    "6c348c56918973fd988b110e79231324a8befe12": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13560. S3ABlockOutputStream to support huge (many GB) file writes. Contributed by Steve Loughran\n",
      "commitDate": "18/10/16 1:16 PM",
      "commitName": "6c348c56918973fd988b110e79231324a8befe12",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "07/10/16 4:51 AM",
      "commitNameOld": "ebd4f39a393e5fa9a810c6a36b749549229a53df",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 11.35,
      "commitsBetweenForRepo": 80,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,7 @@\n-  public String toString() {\n-    final StringBuilder sb \u003d new StringBuilder(\n-        \"S3AFileSystem{\");\n-    sb.append(\"uri\u003d\").append(uri);\n-    sb.append(\", workingDir\u003d\").append(workingDir);\n-    sb.append(\", inputPolicy\u003d\").append(inputPolicy);\n-    sb.append(\", partSize\u003d\").append(partSize);\n-    sb.append(\", enableMultiObjectsDelete\u003d\").append(enableMultiObjectsDelete);\n-    sb.append(\", maxKeys\u003d\").append(maxKeys);\n-    if (cannedACL !\u003d null) {\n-      sb.append(\", cannedACL\u003d\").append(cannedACL.toString());\n-    }\n-    sb.append(\", readAhead\u003d\").append(readAhead);\n-    sb.append(\", blockSize\u003d\").append(getDefaultBlockSize());\n-    sb.append(\", multiPartThreshold\u003d\").append(multiPartThreshold);\n-    if (serverSideEncryptionAlgorithm !\u003d null) {\n-      sb.append(\", serverSideEncryptionAlgorithm\u003d\u0027\")\n-          .append(serverSideEncryptionAlgorithm)\n-          .append(\u0027\\\u0027\u0027);\n-    }\n-    sb.append(\", statistics {\")\n-        .append(statistics)\n-        .append(\"}\");\n-    sb.append(\", metrics {\")\n-        .append(instrumentation.dump(\"{\", \"\u003d\", \"} \", true))\n-        .append(\"}\");\n-    sb.append(\u0027}\u0027);\n-    return sb.toString();\n-  }\n\\ No newline at end of file\n+    public String toString() {\n+      final StringBuilder sb \u003d new StringBuilder(\n+          \"{bucket\u003d\").append(bucket);\n+      sb.append(\", key\u003d\u0027\").append(key).append(\u0027\\\u0027\u0027);\n+      sb.append(\u0027}\u0027);\n+      return sb.toString();\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public String toString() {\n      final StringBuilder sb \u003d new StringBuilder(\n          \"{bucket\u003d\").append(bucket);\n      sb.append(\", key\u003d\u0027\").append(key).append(\u0027\\\u0027\u0027);\n      sb.append(\u0027}\u0027);\n      return sb.toString();\n    }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java",
      "extendedDetails": {}
    },
    "4ee3543625c77c06d566fe81644d21c607d6d74d": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13203 S3A: Support fadvise \"random\" mode for high performance readPositioned() reads. Contributed by Rajesh Balamohan and stevel.\n",
      "commitDate": "22/06/16 7:45 AM",
      "commitName": "4ee3543625c77c06d566fe81644d21c607d6d74d",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "16/06/16 11:13 AM",
      "commitNameOld": "4aefe119a0203c03cdc893dcb3330fd37f26f0ee",
      "commitAuthorOld": "Ravi Prakash",
      "daysBetweenCommits": 5.86,
      "commitsBetweenForRepo": 33,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,29 @@\n   public String toString() {\n     final StringBuilder sb \u003d new StringBuilder(\n         \"S3AFileSystem{\");\n     sb.append(\"uri\u003d\").append(uri);\n     sb.append(\", workingDir\u003d\").append(workingDir);\n+    sb.append(\", inputPolicy\u003d\").append(inputPolicy);\n     sb.append(\", partSize\u003d\").append(partSize);\n     sb.append(\", enableMultiObjectsDelete\u003d\").append(enableMultiObjectsDelete);\n     sb.append(\", maxKeys\u003d\").append(maxKeys);\n     if (cannedACL !\u003d null) {\n       sb.append(\", cannedACL\u003d\").append(cannedACL.toString());\n     }\n     sb.append(\", readAhead\u003d\").append(readAhead);\n     sb.append(\", blockSize\u003d\").append(getDefaultBlockSize());\n     sb.append(\", multiPartThreshold\u003d\").append(multiPartThreshold);\n     if (serverSideEncryptionAlgorithm !\u003d null) {\n       sb.append(\", serverSideEncryptionAlgorithm\u003d\u0027\")\n           .append(serverSideEncryptionAlgorithm)\n           .append(\u0027\\\u0027\u0027);\n     }\n     sb.append(\", statistics {\")\n         .append(statistics)\n         .append(\"}\");\n     sb.append(\", metrics {\")\n         .append(instrumentation.dump(\"{\", \"\u003d\", \"} \", true))\n         .append(\"}\");\n     sb.append(\u0027}\u0027);\n     return sb.toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    final StringBuilder sb \u003d new StringBuilder(\n        \"S3AFileSystem{\");\n    sb.append(\"uri\u003d\").append(uri);\n    sb.append(\", workingDir\u003d\").append(workingDir);\n    sb.append(\", inputPolicy\u003d\").append(inputPolicy);\n    sb.append(\", partSize\u003d\").append(partSize);\n    sb.append(\", enableMultiObjectsDelete\u003d\").append(enableMultiObjectsDelete);\n    sb.append(\", maxKeys\u003d\").append(maxKeys);\n    if (cannedACL !\u003d null) {\n      sb.append(\", cannedACL\u003d\").append(cannedACL.toString());\n    }\n    sb.append(\", readAhead\u003d\").append(readAhead);\n    sb.append(\", blockSize\u003d\").append(getDefaultBlockSize());\n    sb.append(\", multiPartThreshold\u003d\").append(multiPartThreshold);\n    if (serverSideEncryptionAlgorithm !\u003d null) {\n      sb.append(\", serverSideEncryptionAlgorithm\u003d\u0027\")\n          .append(serverSideEncryptionAlgorithm)\n          .append(\u0027\\\u0027\u0027);\n    }\n    sb.append(\", statistics {\")\n        .append(statistics)\n        .append(\"}\");\n    sb.append(\", metrics {\")\n        .append(instrumentation.dump(\"{\", \"\u003d\", \"} \", true))\n        .append(\"}\");\n    sb.append(\u0027}\u0027);\n    return sb.toString();\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java",
      "extendedDetails": {}
    },
    "757050ff355d40bc28f9dbfd0c0083c5f337d270": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12723 S3A: Add ability to plug in any AWSCredentialsProvider. Contributed by Steven Wong.\n",
      "commitDate": "20/05/16 5:52 AM",
      "commitName": "757050ff355d40bc28f9dbfd0c0083c5f337d270",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "17/05/16 5:19 AM",
      "commitNameOld": "08ea07f1b8edbc38c99015c81a62ca127a247bf7",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 3.02,
      "commitsBetweenForRepo": 39,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,28 @@\n   public String toString() {\n     final StringBuilder sb \u003d new StringBuilder(\n         \"S3AFileSystem{\");\n     sb.append(\"uri\u003d\").append(uri);\n     sb.append(\", workingDir\u003d\").append(workingDir);\n     sb.append(\", partSize\u003d\").append(partSize);\n     sb.append(\", enableMultiObjectsDelete\u003d\").append(enableMultiObjectsDelete);\n     sb.append(\", maxKeys\u003d\").append(maxKeys);\n     if (cannedACL !\u003d null) {\n       sb.append(\", cannedACL\u003d\").append(cannedACL.toString());\n     }\n     sb.append(\", readAhead\u003d\").append(readAhead);\n     sb.append(\", blockSize\u003d\").append(getDefaultBlockSize());\n     sb.append(\", multiPartThreshold\u003d\").append(multiPartThreshold);\n     if (serverSideEncryptionAlgorithm !\u003d null) {\n       sb.append(\", serverSideEncryptionAlgorithm\u003d\u0027\")\n           .append(serverSideEncryptionAlgorithm)\n           .append(\u0027\\\u0027\u0027);\n     }\n     sb.append(\", statistics {\")\n-        .append(statistics.toString())\n+        .append(statistics)\n         .append(\"}\");\n     sb.append(\", metrics {\")\n         .append(instrumentation.dump(\"{\", \"\u003d\", \"} \", true))\n         .append(\"}\");\n     sb.append(\u0027}\u0027);\n     return sb.toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    final StringBuilder sb \u003d new StringBuilder(\n        \"S3AFileSystem{\");\n    sb.append(\"uri\u003d\").append(uri);\n    sb.append(\", workingDir\u003d\").append(workingDir);\n    sb.append(\", partSize\u003d\").append(partSize);\n    sb.append(\", enableMultiObjectsDelete\u003d\").append(enableMultiObjectsDelete);\n    sb.append(\", maxKeys\u003d\").append(maxKeys);\n    if (cannedACL !\u003d null) {\n      sb.append(\", cannedACL\u003d\").append(cannedACL.toString());\n    }\n    sb.append(\", readAhead\u003d\").append(readAhead);\n    sb.append(\", blockSize\u003d\").append(getDefaultBlockSize());\n    sb.append(\", multiPartThreshold\u003d\").append(multiPartThreshold);\n    if (serverSideEncryptionAlgorithm !\u003d null) {\n      sb.append(\", serverSideEncryptionAlgorithm\u003d\u0027\")\n          .append(serverSideEncryptionAlgorithm)\n          .append(\u0027\\\u0027\u0027);\n    }\n    sb.append(\", statistics {\")\n        .append(statistics)\n        .append(\"}\");\n    sb.append(\", metrics {\")\n        .append(instrumentation.dump(\"{\", \"\u003d\", \"} \", true))\n        .append(\"}\");\n    sb.append(\u0027}\u0027);\n    return sb.toString();\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java",
      "extendedDetails": {}
    },
    "08ea07f1b8edbc38c99015c81a62ca127a247bf7": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13158 S3AFileSystem#toString might throw NullPointerException due to null cannedACL. (Chris Nauroth via stevel)\n",
      "commitDate": "17/05/16 5:19 AM",
      "commitName": "08ea07f1b8edbc38c99015c81a62ca127a247bf7",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "12/05/16 11:24 AM",
      "commitNameOld": "27c4e90efce04e1b1302f668b5eb22412e00d033",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 4.75,
      "commitsBetweenForRepo": 31,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,28 @@\n   public String toString() {\n     final StringBuilder sb \u003d new StringBuilder(\n         \"S3AFileSystem{\");\n     sb.append(\"uri\u003d\").append(uri);\n     sb.append(\", workingDir\u003d\").append(workingDir);\n     sb.append(\", partSize\u003d\").append(partSize);\n     sb.append(\", enableMultiObjectsDelete\u003d\").append(enableMultiObjectsDelete);\n     sb.append(\", maxKeys\u003d\").append(maxKeys);\n-    sb.append(\", cannedACL\u003d\").append(cannedACL.toString());\n+    if (cannedACL !\u003d null) {\n+      sb.append(\", cannedACL\u003d\").append(cannedACL.toString());\n+    }\n     sb.append(\", readAhead\u003d\").append(readAhead);\n     sb.append(\", blockSize\u003d\").append(getDefaultBlockSize());\n     sb.append(\", multiPartThreshold\u003d\").append(multiPartThreshold);\n     if (serverSideEncryptionAlgorithm !\u003d null) {\n       sb.append(\", serverSideEncryptionAlgorithm\u003d\u0027\")\n           .append(serverSideEncryptionAlgorithm)\n           .append(\u0027\\\u0027\u0027);\n     }\n     sb.append(\", statistics {\")\n         .append(statistics.toString())\n         .append(\"}\");\n     sb.append(\", metrics {\")\n         .append(instrumentation.dump(\"{\", \"\u003d\", \"} \", true))\n         .append(\"}\");\n     sb.append(\u0027}\u0027);\n     return sb.toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    final StringBuilder sb \u003d new StringBuilder(\n        \"S3AFileSystem{\");\n    sb.append(\"uri\u003d\").append(uri);\n    sb.append(\", workingDir\u003d\").append(workingDir);\n    sb.append(\", partSize\u003d\").append(partSize);\n    sb.append(\", enableMultiObjectsDelete\u003d\").append(enableMultiObjectsDelete);\n    sb.append(\", maxKeys\u003d\").append(maxKeys);\n    if (cannedACL !\u003d null) {\n      sb.append(\", cannedACL\u003d\").append(cannedACL.toString());\n    }\n    sb.append(\", readAhead\u003d\").append(readAhead);\n    sb.append(\", blockSize\u003d\").append(getDefaultBlockSize());\n    sb.append(\", multiPartThreshold\u003d\").append(multiPartThreshold);\n    if (serverSideEncryptionAlgorithm !\u003d null) {\n      sb.append(\", serverSideEncryptionAlgorithm\u003d\u0027\")\n          .append(serverSideEncryptionAlgorithm)\n          .append(\u0027\\\u0027\u0027);\n    }\n    sb.append(\", statistics {\")\n        .append(statistics.toString())\n        .append(\"}\");\n    sb.append(\", metrics {\")\n        .append(instrumentation.dump(\"{\", \"\u003d\", \"} \", true))\n        .append(\"}\");\n    sb.append(\u0027}\u0027);\n    return sb.toString();\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java",
      "extendedDetails": {}
    },
    "27c4e90efce04e1b1302f668b5eb22412e00d033": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-13028 add low level counter metrics for S3A; use in read performance tests. contributed by: stevel\npatch includes\nHADOOP-12844 Recover when S3A fails on IOException in read()\nHADOOP-13058 S3A FS fails during init against a read-only FS if multipart purge\nHADOOP-13047 S3a Forward seek in stream length to be configurable\n",
      "commitDate": "12/05/16 11:24 AM",
      "commitName": "27c4e90efce04e1b1302f668b5eb22412e00d033",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,26 @@\n+  public String toString() {\n+    final StringBuilder sb \u003d new StringBuilder(\n+        \"S3AFileSystem{\");\n+    sb.append(\"uri\u003d\").append(uri);\n+    sb.append(\", workingDir\u003d\").append(workingDir);\n+    sb.append(\", partSize\u003d\").append(partSize);\n+    sb.append(\", enableMultiObjectsDelete\u003d\").append(enableMultiObjectsDelete);\n+    sb.append(\", maxKeys\u003d\").append(maxKeys);\n+    sb.append(\", cannedACL\u003d\").append(cannedACL.toString());\n+    sb.append(\", readAhead\u003d\").append(readAhead);\n+    sb.append(\", blockSize\u003d\").append(getDefaultBlockSize());\n+    sb.append(\", multiPartThreshold\u003d\").append(multiPartThreshold);\n+    if (serverSideEncryptionAlgorithm !\u003d null) {\n+      sb.append(\", serverSideEncryptionAlgorithm\u003d\u0027\")\n+          .append(serverSideEncryptionAlgorithm)\n+          .append(\u0027\\\u0027\u0027);\n+    }\n+    sb.append(\", statistics {\")\n+        .append(statistics.toString())\n+        .append(\"}\");\n+    sb.append(\", metrics {\")\n+        .append(instrumentation.dump(\"{\", \"\u003d\", \"} \", true))\n+        .append(\"}\");\n+    sb.append(\u0027}\u0027);\n+    return sb.toString();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    final StringBuilder sb \u003d new StringBuilder(\n        \"S3AFileSystem{\");\n    sb.append(\"uri\u003d\").append(uri);\n    sb.append(\", workingDir\u003d\").append(workingDir);\n    sb.append(\", partSize\u003d\").append(partSize);\n    sb.append(\", enableMultiObjectsDelete\u003d\").append(enableMultiObjectsDelete);\n    sb.append(\", maxKeys\u003d\").append(maxKeys);\n    sb.append(\", cannedACL\u003d\").append(cannedACL.toString());\n    sb.append(\", readAhead\u003d\").append(readAhead);\n    sb.append(\", blockSize\u003d\").append(getDefaultBlockSize());\n    sb.append(\", multiPartThreshold\u003d\").append(multiPartThreshold);\n    if (serverSideEncryptionAlgorithm !\u003d null) {\n      sb.append(\", serverSideEncryptionAlgorithm\u003d\u0027\")\n          .append(serverSideEncryptionAlgorithm)\n          .append(\u0027\\\u0027\u0027);\n    }\n    sb.append(\", statistics {\")\n        .append(statistics.toString())\n        .append(\"}\");\n    sb.append(\", metrics {\")\n        .append(instrumentation.dump(\"{\", \"\u003d\", \"} \", true))\n        .append(\"}\");\n    sb.append(\u0027}\u0027);\n    return sb.toString();\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java"
    }
  }
}