{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "MemoryRMStateStore.java",
  "functionName": "loadState",
  "functionId": "loadState",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/MemoryRMStateStore.java",
  "functionStartLine": 69,
  "functionEndLine": 93,
  "numCommitsSeen": 35,
  "timeTaken": 2045,
  "changeHistory": [
    "285d2c07531a92067368ac4bdd21d309e6e81bc4",
    "d4fec3493351c619a0278929ae2d5c8cd67cbfbe",
    "29902cd53c2dd6f0b2c44fef14fe9cdbaf183895",
    "6cd0736cc57849e4f7c5d38a3986432a9717fe39"
  ],
  "changeHistoryShort": {
    "285d2c07531a92067368ac4bdd21d309e6e81bc4": "Ybodychange",
    "d4fec3493351c619a0278929ae2d5c8cd67cbfbe": "Ybodychange",
    "29902cd53c2dd6f0b2c44fef14fe9cdbaf183895": "Ybodychange",
    "6cd0736cc57849e4f7c5d38a3986432a9717fe39": "Yintroduced"
  },
  "changeHistoryDetails": {
    "285d2c07531a92067368ac4bdd21d309e6e81bc4": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8449. RM HA for AM web server HTTPS Support. (Contributed by Robert Kanter)\n",
      "commitDate": "18/10/18 9:24 PM",
      "commitName": "285d2c07531a92067368ac4bdd21d309e6e81bc4",
      "commitAuthor": "Haibo Chen",
      "commitDateOld": "02/05/18 5:23 PM",
      "commitNameOld": "e6a80e476d4348a4373e6dd5792d70edff16516f",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 169.17,
      "commitsBetweenForRepo": 1401,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,25 @@\n   public synchronized RMState loadState() throws Exception {\n     // return a copy of the state to allow for modification of the real state\n     RMState returnState \u003d new RMState();\n     returnState.appState.putAll(state.appState);\n     returnState.rmSecretManagerState.getMasterKeyState()\n       .addAll(state.rmSecretManagerState.getMasterKeyState());\n     returnState.rmSecretManagerState.getTokenState().putAll(\n       state.rmSecretManagerState.getTokenState());\n     returnState.rmSecretManagerState.dtSequenceNumber \u003d\n         state.rmSecretManagerState.dtSequenceNumber;\n     returnState.amrmTokenSecretManagerState \u003d\n         state.amrmTokenSecretManagerState \u003d\u003d null ? null\n             : AMRMTokenSecretManagerState\n               .newInstance(state.amrmTokenSecretManagerState);\n+    if (state.proxyCAState.getCaCert() !\u003d null) {\n+      byte[] caCertData \u003d state.proxyCAState.getCaCert().getEncoded();\n+      returnState.proxyCAState.setCaCert(caCertData);\n+    }\n+    if (state.proxyCAState.getCaPrivateKey() !\u003d null) {\n+      byte[] caPrivateKeyData\n+          \u003d state.proxyCAState.getCaPrivateKey().getEncoded();\n+      returnState.proxyCAState.setCaPrivateKey(caPrivateKeyData);\n+    }\n     return returnState;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized RMState loadState() throws Exception {\n    // return a copy of the state to allow for modification of the real state\n    RMState returnState \u003d new RMState();\n    returnState.appState.putAll(state.appState);\n    returnState.rmSecretManagerState.getMasterKeyState()\n      .addAll(state.rmSecretManagerState.getMasterKeyState());\n    returnState.rmSecretManagerState.getTokenState().putAll(\n      state.rmSecretManagerState.getTokenState());\n    returnState.rmSecretManagerState.dtSequenceNumber \u003d\n        state.rmSecretManagerState.dtSequenceNumber;\n    returnState.amrmTokenSecretManagerState \u003d\n        state.amrmTokenSecretManagerState \u003d\u003d null ? null\n            : AMRMTokenSecretManagerState\n              .newInstance(state.amrmTokenSecretManagerState);\n    if (state.proxyCAState.getCaCert() !\u003d null) {\n      byte[] caCertData \u003d state.proxyCAState.getCaCert().getEncoded();\n      returnState.proxyCAState.setCaCert(caCertData);\n    }\n    if (state.proxyCAState.getCaPrivateKey() !\u003d null) {\n      byte[] caPrivateKeyData\n          \u003d state.proxyCAState.getCaPrivateKey().getEncoded();\n      returnState.proxyCAState.setCaPrivateKey(caPrivateKeyData);\n    }\n    return returnState;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/MemoryRMStateStore.java",
      "extendedDetails": {}
    },
    "d4fec3493351c619a0278929ae2d5c8cd67cbfbe": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2211. Persist AMRMToken master key in RMStateStore for RM recovery. Contributed by Xuan Gong\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1613515 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/07/14 1:42 PM",
      "commitName": "d4fec3493351c619a0278929ae2d5c8cd67cbfbe",
      "commitAuthor": "Jian He",
      "commitDateOld": "09/07/14 12:58 PM",
      "commitNameOld": "8fbca62a9008306249779367af1d3c329f875552",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 16.03,
      "commitsBetweenForRepo": 135,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,16 @@\n   public synchronized RMState loadState() throws Exception {\n     // return a copy of the state to allow for modification of the real state\n     RMState returnState \u003d new RMState();\n     returnState.appState.putAll(state.appState);\n     returnState.rmSecretManagerState.getMasterKeyState()\n       .addAll(state.rmSecretManagerState.getMasterKeyState());\n     returnState.rmSecretManagerState.getTokenState().putAll(\n       state.rmSecretManagerState.getTokenState());\n     returnState.rmSecretManagerState.dtSequenceNumber \u003d\n         state.rmSecretManagerState.dtSequenceNumber;\n+    returnState.amrmTokenSecretManagerState \u003d\n+        state.amrmTokenSecretManagerState \u003d\u003d null ? null\n+            : AMRMTokenSecretManagerState\n+              .newInstance(state.amrmTokenSecretManagerState);\n     return returnState;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized RMState loadState() throws Exception {\n    // return a copy of the state to allow for modification of the real state\n    RMState returnState \u003d new RMState();\n    returnState.appState.putAll(state.appState);\n    returnState.rmSecretManagerState.getMasterKeyState()\n      .addAll(state.rmSecretManagerState.getMasterKeyState());\n    returnState.rmSecretManagerState.getTokenState().putAll(\n      state.rmSecretManagerState.getTokenState());\n    returnState.rmSecretManagerState.dtSequenceNumber \u003d\n        state.rmSecretManagerState.dtSequenceNumber;\n    returnState.amrmTokenSecretManagerState \u003d\n        state.amrmTokenSecretManagerState \u003d\u003d null ? null\n            : AMRMTokenSecretManagerState\n              .newInstance(state.amrmTokenSecretManagerState);\n    return returnState;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/MemoryRMStateStore.java",
      "extendedDetails": {}
    },
    "29902cd53c2dd6f0b2c44fef14fe9cdbaf183895": {
      "type": "Ybodychange",
      "commitMessage": "YARN-638. Modified ResourceManager to restore RMDelegationTokens after restarting. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1487720 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/05/13 9:14 PM",
      "commitName": "29902cd53c2dd6f0b2c44fef14fe9cdbaf183895",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "23/05/13 8:22 PM",
      "commitNameOld": "259edf8dca44de54033e96f7eb65a83aaa6096f2",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 6.04,
      "commitsBetweenForRepo": 20,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,12 @@\n   public synchronized RMState loadState() throws Exception {\n     // return a copy of the state to allow for modification of the real state\n     RMState returnState \u003d new RMState();\n     returnState.appState.putAll(state.appState);\n+    returnState.rmSecretManagerState.getMasterKeyState()\n+      .addAll(state.rmSecretManagerState.getMasterKeyState());\n+    returnState.rmSecretManagerState.getTokenState().putAll(\n+      state.rmSecretManagerState.getTokenState());\n+    returnState.rmSecretManagerState.dtSequenceNumber \u003d\n+        state.rmSecretManagerState.dtSequenceNumber;\n     return returnState;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized RMState loadState() throws Exception {\n    // return a copy of the state to allow for modification of the real state\n    RMState returnState \u003d new RMState();\n    returnState.appState.putAll(state.appState);\n    returnState.rmSecretManagerState.getMasterKeyState()\n      .addAll(state.rmSecretManagerState.getMasterKeyState());\n    returnState.rmSecretManagerState.getTokenState().putAll(\n      state.rmSecretManagerState.getTokenState());\n    returnState.rmSecretManagerState.dtSequenceNumber \u003d\n        state.rmSecretManagerState.dtSequenceNumber;\n    return returnState;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/MemoryRMStateStore.java",
      "extendedDetails": {}
    },
    "6cd0736cc57849e4f7c5d38a3986432a9717fe39": {
      "type": "Yintroduced",
      "commitMessage": "YARN-230. RM Restart phase 1 - includes support for saving/restarting all applications on an RM bounce. Contributed by Bikas Saha.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1423758 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/12/12 8:21 PM",
      "commitName": "6cd0736cc57849e4f7c5d38a3986432a9717fe39",
      "commitAuthor": "Arun Murthy",
      "diff": "@@ -0,0 +1,6 @@\n+  public synchronized RMState loadState() throws Exception {\n+    // return a copy of the state to allow for modification of the real state\n+    RMState returnState \u003d new RMState();\n+    returnState.appState.putAll(state.appState);\n+    return returnState;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized RMState loadState() throws Exception {\n    // return a copy of the state to allow for modification of the real state\n    RMState returnState \u003d new RMState();\n    returnState.appState.putAll(state.appState);\n    return returnState;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/MemoryRMStateStore.java"
    }
  }
}