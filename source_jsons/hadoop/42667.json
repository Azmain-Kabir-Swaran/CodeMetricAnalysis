{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMAppAttemptImpl.java",
  "functionName": "getAMRMTokenKeyId",
  "functionId": "getAMRMTokenKeyId",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java",
  "functionStartLine": 729,
  "functionEndLine": 748,
  "numCommitsSeen": 155,
  "timeTaken": 2352,
  "changeHistory": [
    "18297e09727e4af95140084760ae1267e8fe51c4"
  ],
  "changeHistoryShort": {
    "18297e09727e4af95140084760ae1267e8fe51c4": "Yintroduced"
  },
  "changeHistoryDetails": {
    "18297e09727e4af95140084760ae1267e8fe51c4": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3104. Fixed RM to not generate new AMRM tokens on every heartbeat between rolling and activation. Contributed by Jason Lowe\n",
      "commitDate": "12/02/15 4:02 PM",
      "commitName": "18297e09727e4af95140084760ae1267e8fe51c4",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,20 @@\n+  public int getAMRMTokenKeyId() {\n+    Integer keyId \u003d this.amrmTokenKeyId;\n+    if (keyId \u003d\u003d null) {\n+      this.readLock.lock();\n+      try {\n+        if (this.amrmToken \u003d\u003d null) {\n+          throw new YarnRuntimeException(\"Missing AMRM token for \"\n+              + this.applicationAttemptId);\n+        }\n+        keyId \u003d this.amrmToken.decodeIdentifier().getKeyId();\n+        this.amrmTokenKeyId \u003d keyId;\n+      } catch (IOException e) {\n+        throw new YarnRuntimeException(\"AMRM token decode error for \"\n+            + this.applicationAttemptId, e);\n+      } finally {\n+        this.readLock.unlock();\n+      }\n+    }\n+    return keyId;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public int getAMRMTokenKeyId() {\n    Integer keyId \u003d this.amrmTokenKeyId;\n    if (keyId \u003d\u003d null) {\n      this.readLock.lock();\n      try {\n        if (this.amrmToken \u003d\u003d null) {\n          throw new YarnRuntimeException(\"Missing AMRM token for \"\n              + this.applicationAttemptId);\n        }\n        keyId \u003d this.amrmToken.decodeIdentifier().getKeyId();\n        this.amrmTokenKeyId \u003d keyId;\n      } catch (IOException e) {\n        throw new YarnRuntimeException(\"AMRM token decode error for \"\n            + this.applicationAttemptId, e);\n      } finally {\n        this.readLock.unlock();\n      }\n    }\n    return keyId;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java"
    }
  }
}