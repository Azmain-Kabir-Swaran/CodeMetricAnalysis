{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SaslRpcClient.java",
  "functionName": "saslEvaluateToken",
  "functionId": "saslEvaluateToken___saslResponse-RpcSaslProto__serverIsDone-boolean",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/SaslRpcClient.java",
  "functionStartLine": 476,
  "functionEndLine": 497,
  "numCommitsSeen": 38,
  "timeTaken": 1525,
  "changeHistory": [
    "65be21267587f04a2c33af65b951211cc9085b15",
    "5f9b4c14a175873b4f82654513e289c657c694eb"
  ],
  "changeHistoryShort": {
    "65be21267587f04a2c33af65b951211cc9085b15": "Ymultichange(Yparameterchange,Ybodychange)",
    "5f9b4c14a175873b4f82654513e289c657c694eb": "Yintroduced"
  },
  "changeHistoryDetails": {
    "65be21267587f04a2c33af65b951211cc9085b15": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-9698. [RPC v9] Client must honor server\u0027s SASL negotiate response (daryn)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1508086 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/07/13 7:44 AM",
      "commitName": "65be21267587f04a2c33af65b951211cc9085b15",
      "commitAuthor": "Daryn Sharp",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-9698. [RPC v9] Client must honor server\u0027s SASL negotiate response (daryn)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1508086 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "29/07/13 7:44 AM",
          "commitName": "65be21267587f04a2c33af65b951211cc9085b15",
          "commitAuthor": "Daryn Sharp",
          "commitDateOld": "18/07/13 4:44 PM",
          "commitNameOld": "8724ceb2359af66c800043e665c17a2a30981c7d",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 10.63,
          "commitsBetweenForRepo": 62,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,22 @@\n   private byte[] saslEvaluateToken(RpcSaslProto saslResponse,\n-      boolean done) throws SaslException {\n+      boolean serverIsDone) throws SaslException {\n     byte[] saslToken \u003d null;\n     if (saslResponse.hasToken()) {\n       saslToken \u003d saslResponse.getToken().toByteArray();\n       saslToken \u003d saslClient.evaluateChallenge(saslToken);\n-    } else if (!done) {\n-      throw new SaslException(\"Challenge contains no token\");\n+    } else if (!serverIsDone) {\n+      // the server may only omit a token when it\u0027s done\n+      throw new SaslException(\"Server challenge contains no token\");\n     }\n-    if (done \u0026\u0026 !saslClient.isComplete()) {\n-      throw new SaslException(\"Client is out of sync with server\");\n+    if (serverIsDone) {\n+      // server tried to report success before our client completed\n+      if (!saslClient.isComplete()) {\n+        throw new SaslException(\"Client is out of sync with server\");\n+      }\n+      // a client cannot generate a response to a success message\n+      if (saslToken !\u003d null) {\n+        throw new SaslException(\"Client generated spurious response\");        \n+      }\n     }\n     return saslToken;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private byte[] saslEvaluateToken(RpcSaslProto saslResponse,\n      boolean serverIsDone) throws SaslException {\n    byte[] saslToken \u003d null;\n    if (saslResponse.hasToken()) {\n      saslToken \u003d saslResponse.getToken().toByteArray();\n      saslToken \u003d saslClient.evaluateChallenge(saslToken);\n    } else if (!serverIsDone) {\n      // the server may only omit a token when it\u0027s done\n      throw new SaslException(\"Server challenge contains no token\");\n    }\n    if (serverIsDone) {\n      // server tried to report success before our client completed\n      if (!saslClient.isComplete()) {\n        throw new SaslException(\"Client is out of sync with server\");\n      }\n      // a client cannot generate a response to a success message\n      if (saslToken !\u003d null) {\n        throw new SaslException(\"Client generated spurious response\");        \n      }\n    }\n    return saslToken;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/SaslRpcClient.java",
          "extendedDetails": {
            "oldValue": "[saslResponse-RpcSaslProto, done-boolean]",
            "newValue": "[saslResponse-RpcSaslProto, serverIsDone-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-9698. [RPC v9] Client must honor server\u0027s SASL negotiate response (daryn)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1508086 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "29/07/13 7:44 AM",
          "commitName": "65be21267587f04a2c33af65b951211cc9085b15",
          "commitAuthor": "Daryn Sharp",
          "commitDateOld": "18/07/13 4:44 PM",
          "commitNameOld": "8724ceb2359af66c800043e665c17a2a30981c7d",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 10.63,
          "commitsBetweenForRepo": 62,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,22 @@\n   private byte[] saslEvaluateToken(RpcSaslProto saslResponse,\n-      boolean done) throws SaslException {\n+      boolean serverIsDone) throws SaslException {\n     byte[] saslToken \u003d null;\n     if (saslResponse.hasToken()) {\n       saslToken \u003d saslResponse.getToken().toByteArray();\n       saslToken \u003d saslClient.evaluateChallenge(saslToken);\n-    } else if (!done) {\n-      throw new SaslException(\"Challenge contains no token\");\n+    } else if (!serverIsDone) {\n+      // the server may only omit a token when it\u0027s done\n+      throw new SaslException(\"Server challenge contains no token\");\n     }\n-    if (done \u0026\u0026 !saslClient.isComplete()) {\n-      throw new SaslException(\"Client is out of sync with server\");\n+    if (serverIsDone) {\n+      // server tried to report success before our client completed\n+      if (!saslClient.isComplete()) {\n+        throw new SaslException(\"Client is out of sync with server\");\n+      }\n+      // a client cannot generate a response to a success message\n+      if (saslToken !\u003d null) {\n+        throw new SaslException(\"Client generated spurious response\");        \n+      }\n     }\n     return saslToken;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private byte[] saslEvaluateToken(RpcSaslProto saslResponse,\n      boolean serverIsDone) throws SaslException {\n    byte[] saslToken \u003d null;\n    if (saslResponse.hasToken()) {\n      saslToken \u003d saslResponse.getToken().toByteArray();\n      saslToken \u003d saslClient.evaluateChallenge(saslToken);\n    } else if (!serverIsDone) {\n      // the server may only omit a token when it\u0027s done\n      throw new SaslException(\"Server challenge contains no token\");\n    }\n    if (serverIsDone) {\n      // server tried to report success before our client completed\n      if (!saslClient.isComplete()) {\n        throw new SaslException(\"Client is out of sync with server\");\n      }\n      // a client cannot generate a response to a success message\n      if (saslToken !\u003d null) {\n        throw new SaslException(\"Client generated spurious response\");        \n      }\n    }\n    return saslToken;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/SaslRpcClient.java",
          "extendedDetails": {}
        }
      ]
    },
    "5f9b4c14a175873b4f82654513e289c657c694eb": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-9421. [RPC v9] Convert SASL to use ProtoBuf and provide negotiation capabilities (daryn)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1495577 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/06/13 1:09 PM",
      "commitName": "5f9b4c14a175873b4f82654513e289c657c694eb",
      "commitAuthor": "Daryn Sharp",
      "diff": "@@ -0,0 +1,14 @@\n+  private byte[] saslEvaluateToken(RpcSaslProto saslResponse,\n+      boolean done) throws SaslException {\n+    byte[] saslToken \u003d null;\n+    if (saslResponse.hasToken()) {\n+      saslToken \u003d saslResponse.getToken().toByteArray();\n+      saslToken \u003d saslClient.evaluateChallenge(saslToken);\n+    } else if (!done) {\n+      throw new SaslException(\"Challenge contains no token\");\n+    }\n+    if (done \u0026\u0026 !saslClient.isComplete()) {\n+      throw new SaslException(\"Client is out of sync with server\");\n+    }\n+    return saslToken;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private byte[] saslEvaluateToken(RpcSaslProto saslResponse,\n      boolean done) throws SaslException {\n    byte[] saslToken \u003d null;\n    if (saslResponse.hasToken()) {\n      saslToken \u003d saslResponse.getToken().toByteArray();\n      saslToken \u003d saslClient.evaluateChallenge(saslToken);\n    } else if (!done) {\n      throw new SaslException(\"Challenge contains no token\");\n    }\n    if (done \u0026\u0026 !saslClient.isComplete()) {\n      throw new SaslException(\"Client is out of sync with server\");\n    }\n    return saslToken;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/SaslRpcClient.java"
    }
  }
}