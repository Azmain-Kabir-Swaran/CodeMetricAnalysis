{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AbstractYarnScheduler.java",
  "functionName": "getMaximumResourceCapability",
  "functionId": "getMaximumResourceCapability",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AbstractYarnScheduler.java",
  "functionStartLine": 346,
  "functionEndLine": 348,
  "numCommitsSeen": 193,
  "timeTaken": 10200,
  "changeHistory": [
    "20d389ce61eaacb5ddfb329015f50e96ad894f8d",
    "7882bc0f1433ae73361cab4207eb0c15abee4586",
    "3114d4731dcca7cb6c16aaa7c7a6550b7dd7dccb",
    "82f3454f5ac1f1c457e668e2cee12b4dcc800ee1",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "20d389ce61eaacb5ddfb329015f50e96ad894f8d": "Ybodychange",
    "7882bc0f1433ae73361cab4207eb0c15abee4586": "Ybodychange",
    "3114d4731dcca7cb6c16aaa7c7a6550b7dd7dccb": "Ybodychange",
    "82f3454f5ac1f1c457e668e2cee12b4dcc800ee1": "Ymovefromfile",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "20d389ce61eaacb5ddfb329015f50e96ad894f8d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4719. Add a helper library to maintain node state and allows common queries. (kasha)\n",
      "commitDate": "14/03/16 2:19 PM",
      "commitName": "20d389ce61eaacb5ddfb329015f50e96ad894f8d",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "10/02/16 6:06 PM",
      "commitNameOld": "d16b17b4d299b4d58f879a2a15708bacd0938685",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 32.8,
      "commitsBetweenForRepo": 206,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,3 @@\n   public Resource getMaximumResourceCapability() {\n-    Resource maxResource;\n-    maxAllocReadLock.lock();\n-    try {\n-      if (useConfiguredMaximumAllocationOnly) {\n-        if (System.currentTimeMillis() - ResourceManager.getClusterTimeStamp()\n-            \u003e configuredMaximumAllocationWaitTime) {\n-          useConfiguredMaximumAllocationOnly \u003d false;\n-        }\n-        maxResource \u003d Resources.clone(configuredMaximumAllocation);\n-      } else {\n-        maxResource \u003d Resources.clone(maximumAllocation);\n-      }\n-    } finally {\n-      maxAllocReadLock.unlock();\n-    }\n-    return maxResource;\n+    return nodeTracker.getMaxAllowedAllocation();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Resource getMaximumResourceCapability() {\n    return nodeTracker.getMaxAllowedAllocation();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AbstractYarnScheduler.java",
      "extendedDetails": {}
    },
    "7882bc0f1433ae73361cab4207eb0c15abee4586": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3079. Scheduler should also update maximumAllocation when updateNodeResource. (Zhihai Xu via wangda)\n",
      "commitDate": "28/01/15 9:54 PM",
      "commitName": "7882bc0f1433ae73361cab4207eb0c15abee4586",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "12/01/15 10:47 AM",
      "commitNameOld": "ae7bf31fe1c63f323ba5271e50fd0e4425a7510f",
      "commitAuthorOld": "Robert Kanter",
      "daysBetweenCommits": 16.46,
      "commitsBetweenForRepo": 130,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,18 @@\n   public Resource getMaximumResourceCapability() {\n     Resource maxResource;\n-    ReentrantReadWriteLock.ReadLock readLock \u003d maximumAllocationLock.readLock();\n-    readLock.lock();\n+    maxAllocReadLock.lock();\n     try {\n       if (useConfiguredMaximumAllocationOnly) {\n         if (System.currentTimeMillis() - ResourceManager.getClusterTimeStamp()\n             \u003e configuredMaximumAllocationWaitTime) {\n           useConfiguredMaximumAllocationOnly \u003d false;\n         }\n         maxResource \u003d Resources.clone(configuredMaximumAllocation);\n       } else {\n         maxResource \u003d Resources.clone(maximumAllocation);\n       }\n     } finally {\n-      readLock.unlock();\n+      maxAllocReadLock.unlock();\n     }\n     return maxResource;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Resource getMaximumResourceCapability() {\n    Resource maxResource;\n    maxAllocReadLock.lock();\n    try {\n      if (useConfiguredMaximumAllocationOnly) {\n        if (System.currentTimeMillis() - ResourceManager.getClusterTimeStamp()\n            \u003e configuredMaximumAllocationWaitTime) {\n          useConfiguredMaximumAllocationOnly \u003d false;\n        }\n        maxResource \u003d Resources.clone(configuredMaximumAllocation);\n      } else {\n        maxResource \u003d Resources.clone(maximumAllocation);\n      }\n    } finally {\n      maxAllocReadLock.unlock();\n    }\n    return maxResource;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AbstractYarnScheduler.java",
      "extendedDetails": {}
    },
    "3114d4731dcca7cb6c16aaa7c7a6550b7dd7dccb": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2604. Scheduler should consider max-allocation-* in conjunction with the largest node. (Robert Kanter via kasha)\n",
      "commitDate": "21/11/14 10:32 AM",
      "commitName": "3114d4731dcca7cb6c16aaa7c7a6550b7dd7dccb",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "03/10/14 3:41 PM",
      "commitNameOld": "eb3e40b833b9d82c1556843f960194dc42e482f3",
      "commitAuthorOld": "carlo curino",
      "daysBetweenCommits": 48.83,
      "commitsBetweenForRepo": 442,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,3 +1,19 @@\n   public Resource getMaximumResourceCapability() {\n-    return maximumAllocation;\n+    Resource maxResource;\n+    ReentrantReadWriteLock.ReadLock readLock \u003d maximumAllocationLock.readLock();\n+    readLock.lock();\n+    try {\n+      if (useConfiguredMaximumAllocationOnly) {\n+        if (System.currentTimeMillis() - ResourceManager.getClusterTimeStamp()\n+            \u003e configuredMaximumAllocationWaitTime) {\n+          useConfiguredMaximumAllocationOnly \u003d false;\n+        }\n+        maxResource \u003d Resources.clone(configuredMaximumAllocation);\n+      } else {\n+        maxResource \u003d Resources.clone(maximumAllocation);\n+      }\n+    } finally {\n+      readLock.unlock();\n+    }\n+    return maxResource;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Resource getMaximumResourceCapability() {\n    Resource maxResource;\n    ReentrantReadWriteLock.ReadLock readLock \u003d maximumAllocationLock.readLock();\n    readLock.lock();\n    try {\n      if (useConfiguredMaximumAllocationOnly) {\n        if (System.currentTimeMillis() - ResourceManager.getClusterTimeStamp()\n            \u003e configuredMaximumAllocationWaitTime) {\n          useConfiguredMaximumAllocationOnly \u003d false;\n        }\n        maxResource \u003d Resources.clone(configuredMaximumAllocation);\n      } else {\n        maxResource \u003d Resources.clone(maximumAllocation);\n      }\n    } finally {\n      readLock.unlock();\n    }\n    return maxResource;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AbstractYarnScheduler.java",
      "extendedDetails": {}
    },
    "82f3454f5ac1f1c457e668e2cee12b4dcc800ee1": {
      "type": "Ymovefromfile",
      "commitMessage": "YARN-2017. Merged some of the common scheduler code. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1596753 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/05/14 10:32 PM",
      "commitName": "82f3454f5ac1f1c457e668e2cee12b4dcc800ee1",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "21/05/14 9:50 PM",
      "commitNameOld": "6b2e615f5fa034d679be0de8fb300b878a2d801a",
      "commitAuthorOld": "Chris Nauroth",
      "daysBetweenCommits": 0.03,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public Resource getMaximumResourceCapability() {\n    return maximumAllocation;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AbstractYarnScheduler.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AbstractYarnScheduler.java",
        "oldMethodName": "getMaximumResourceCapability",
        "newMethodName": "getMaximumResourceCapability"
      }
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public Resource getMaximumResourceCapability() {\n    return maximumAllocation;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public Resource getMaximumResourceCapability() {\n    return maximumAllocation;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,3 @@\n+  public Resource getMaximumResourceCapability() {\n+    return maximumAllocation;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Resource getMaximumResourceCapability() {\n    return maximumAllocation;\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fifo/FifoScheduler.java"
    }
  }
}