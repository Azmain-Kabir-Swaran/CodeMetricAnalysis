{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ApplicationMaster.java",
  "functionName": "setupContainerAskForRM",
  "functionId": "setupContainerAskForRM",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/ApplicationMaster.java",
  "functionStartLine": 1587,
  "functionEndLine": 1602,
  "numCommitsSeen": 147,
  "timeTaken": 5089,
  "changeHistory": [
    "f738b397ae021c9be900e4ec51ab55cd69b075e0",
    "aae629913cee0157c945a2c7384c7bf398f10616",
    "40b0045ebe0752cd3d1d09be00acbabdea983799",
    "7805deed4896e470ebd2f6bbd1ba9962947c63cd",
    "f6c723ff0c09134d721534a409e8d688cc028307",
    "735d8b27f78ea8be839008650a3e88db37dc507d",
    "3520039979188c4ca6e69654223b3ac794e8bf8f",
    "f5551bf8091c11586d402cdd4a0b09aa0498b673",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "fad230a49d0d4cdbb2062b10c3dea6c755737db5"
  ],
  "changeHistoryShort": {
    "f738b397ae021c9be900e4ec51ab55cd69b075e0": "Ybodychange",
    "aae629913cee0157c945a2c7384c7bf398f10616": "Ybodychange",
    "40b0045ebe0752cd3d1d09be00acbabdea983799": "Ybodychange",
    "7805deed4896e470ebd2f6bbd1ba9962947c63cd": "Ybodychange",
    "f6c723ff0c09134d721534a409e8d688cc028307": "Ybodychange",
    "735d8b27f78ea8be839008650a3e88db37dc507d": "Ybodychange",
    "3520039979188c4ca6e69654223b3ac794e8bf8f": "Ymultichange(Yparameterchange,Ybodychange)",
    "f5551bf8091c11586d402cdd4a0b09aa0498b673": "Ymultichange(Yreturntypechange,Ybodychange)",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "fad230a49d0d4cdbb2062b10c3dea6c755737db5": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f738b397ae021c9be900e4ec51ab55cd69b075e0": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9191. Add cli option in DS to support enforceExecutionType in resource requests. Contributed by Abhishek Modi.\n",
      "commitDate": "31/01/19 11:24 AM",
      "commitName": "f738b397ae021c9be900e4ec51ab55cd69b075e0",
      "commitAuthor": "Giovanni Matteo Fumarola",
      "commitDateOld": "11/12/18 2:13 PM",
      "commitNameOld": "fb55e5201e5b2ff40e1b757a9c5bf23c5d8aec93",
      "commitAuthorOld": "Haibo Chen",
      "daysBetweenCommits": 50.88,
      "commitsBetweenForRepo": 338,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   private ContainerRequest setupContainerAskForRM() {\n     // setup requirements for hosts\n     // using * as any host will do for the distributed shell app\n     // set the priority for the request\n     // TODO - what is the range for priority? how to decide?\n     Priority pri \u003d Priority.newInstance(requestPriority);\n \n     // Set up resource type requirements\n     ContainerRequest request \u003d new ContainerRequest(\n         getTaskResourceCapability(),\n         null, null, pri, 0, true, null,\n-        ExecutionTypeRequest.newInstance(containerType),\n+        ExecutionTypeRequest.newInstance(containerType, enforceExecType),\n         containerResourceProfile);\n     LOG.info(\"Requested container ask: \" + request.toString());\n     return request;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private ContainerRequest setupContainerAskForRM() {\n    // setup requirements for hosts\n    // using * as any host will do for the distributed shell app\n    // set the priority for the request\n    // TODO - what is the range for priority? how to decide?\n    Priority pri \u003d Priority.newInstance(requestPriority);\n\n    // Set up resource type requirements\n    ContainerRequest request \u003d new ContainerRequest(\n        getTaskResourceCapability(),\n        null, null, pri, 0, true, null,\n        ExecutionTypeRequest.newInstance(containerType, enforceExecType),\n        containerResourceProfile);\n    LOG.info(\"Requested container ask: \" + request.toString());\n    return request;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/ApplicationMaster.java",
      "extendedDetails": {}
    },
    "aae629913cee0157c945a2c7384c7bf398f10616": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7292. Retrospect Resource Profile Behavior for overriding capability. Contributed by Wangda Tan.\n",
      "commitDate": "15/02/18 11:07 PM",
      "commitName": "aae629913cee0157c945a2c7384c7bf398f10616",
      "commitAuthor": "Sunil G",
      "commitDateOld": "10/02/18 10:20 PM",
      "commitNameOld": "a08c048832d68c203fbdfce8d9f0e7dcccb02a55",
      "commitAuthorOld": "Weiwei Yang",
      "daysBetweenCommits": 5.03,
      "commitsBetweenForRepo": 32,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,16 @@\n   private ContainerRequest setupContainerAskForRM() {\n     // setup requirements for hosts\n     // using * as any host will do for the distributed shell app\n     // set the priority for the request\n     // TODO - what is the range for priority? how to decide?\n     Priority pri \u003d Priority.newInstance(requestPriority);\n \n     // Set up resource type requirements\n-    ContainerRequest request \u003d\n-        new ContainerRequest(createProfileCapability(), null, null,\n-            pri, 0, true, null,\n-            ExecutionTypeRequest.newInstance(containerType));\n+    ContainerRequest request \u003d new ContainerRequest(\n+        getTaskResourceCapability(),\n+        null, null, pri, 0, true, null,\n+        ExecutionTypeRequest.newInstance(containerType),\n+        containerResourceProfile);\n     LOG.info(\"Requested container ask: \" + request.toString());\n     return request;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private ContainerRequest setupContainerAskForRM() {\n    // setup requirements for hosts\n    // using * as any host will do for the distributed shell app\n    // set the priority for the request\n    // TODO - what is the range for priority? how to decide?\n    Priority pri \u003d Priority.newInstance(requestPriority);\n\n    // Set up resource type requirements\n    ContainerRequest request \u003d new ContainerRequest(\n        getTaskResourceCapability(),\n        null, null, pri, 0, true, null,\n        ExecutionTypeRequest.newInstance(containerType),\n        containerResourceProfile);\n    LOG.info(\"Requested container ask: \" + request.toString());\n    return request;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/ApplicationMaster.java",
      "extendedDetails": {}
    },
    "40b0045ebe0752cd3d1d09be00acbabdea983799": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7610. Extend Distributed Shell to support launching job with opportunistic containers. Contributed by Weiwei Yang.\n",
      "commitDate": "06/12/17 1:52 AM",
      "commitName": "40b0045ebe0752cd3d1d09be00acbabdea983799",
      "commitAuthor": "Weiwei Yang",
      "commitDateOld": "31/10/17 12:36 AM",
      "commitNameOld": "785f1b0d11a3bf0af9851c080ff0acc34539f17b",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 36.09,
      "commitsBetweenForRepo": 295,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,15 @@\n   private ContainerRequest setupContainerAskForRM() {\n     // setup requirements for hosts\n     // using * as any host will do for the distributed shell app\n     // set the priority for the request\n     // TODO - what is the range for priority? how to decide?\n     Priority pri \u003d Priority.newInstance(requestPriority);\n \n     // Set up resource type requirements\n     ContainerRequest request \u003d\n-        new ContainerRequest(createProfileCapability(), null, null, pri);\n+        new ContainerRequest(createProfileCapability(), null, null,\n+            pri, 0, true, null,\n+            ExecutionTypeRequest.newInstance(containerType));\n     LOG.info(\"Requested container ask: \" + request.toString());\n     return request;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private ContainerRequest setupContainerAskForRM() {\n    // setup requirements for hosts\n    // using * as any host will do for the distributed shell app\n    // set the priority for the request\n    // TODO - what is the range for priority? how to decide?\n    Priority pri \u003d Priority.newInstance(requestPriority);\n\n    // Set up resource type requirements\n    ContainerRequest request \u003d\n        new ContainerRequest(createProfileCapability(), null, null,\n            pri, 0, true, null,\n            ExecutionTypeRequest.newInstance(containerType));\n    LOG.info(\"Requested container ask: \" + request.toString());\n    return request;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/ApplicationMaster.java",
      "extendedDetails": {}
    },
    "7805deed4896e470ebd2f6bbd1ba9962947c63cd": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5588. [YARN-3926] Add support for resource profiles in distributed shell. Contributed by Varun Vasudev.\n",
      "commitDate": "12/09/17 9:19 AM",
      "commitName": "7805deed4896e470ebd2f6bbd1ba9962947c63cd",
      "commitAuthor": "Sunil G",
      "commitDateOld": "07/09/17 10:23 AM",
      "commitNameOld": "c41118a7f826dcbb269b4bd3d5877b35fbbee2b1",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 4.96,
      "commitsBetweenForRepo": 49,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,13 @@\n   private ContainerRequest setupContainerAskForRM() {\n     // setup requirements for hosts\n     // using * as any host will do for the distributed shell app\n     // set the priority for the request\n     // TODO - what is the range for priority? how to decide?\n     Priority pri \u003d Priority.newInstance(requestPriority);\n \n     // Set up resource type requirements\n-    // For now, memory and CPU are supported so we set memory and cpu requirements\n-    Resource capability \u003d Resource.newInstance(containerMemory,\n-      containerVirtualCores);\n-\n-    ContainerRequest request \u003d new ContainerRequest(capability, null, null,\n-        pri);\n+    ContainerRequest request \u003d\n+        new ContainerRequest(createProfileCapability(), null, null, pri);\n     LOG.info(\"Requested container ask: \" + request.toString());\n     return request;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private ContainerRequest setupContainerAskForRM() {\n    // setup requirements for hosts\n    // using * as any host will do for the distributed shell app\n    // set the priority for the request\n    // TODO - what is the range for priority? how to decide?\n    Priority pri \u003d Priority.newInstance(requestPriority);\n\n    // Set up resource type requirements\n    ContainerRequest request \u003d\n        new ContainerRequest(createProfileCapability(), null, null, pri);\n    LOG.info(\"Requested container ask: \" + request.toString());\n    return request;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/ApplicationMaster.java",
      "extendedDetails": {}
    },
    "f6c723ff0c09134d721534a409e8d688cc028307": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2295. Refactored DistributedShell to use public APIs of protocol records. Contributed by Li Lu\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1612626 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/07/14 10:49 AM",
      "commitName": "f6c723ff0c09134d721534a409e8d688cc028307",
      "commitAuthor": "Jian He",
      "commitDateOld": "08/04/14 3:11 PM",
      "commitNameOld": "6c2a0ce30b8bc54998ec40551bc14f478a353e10",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 104.82,
      "commitsBetweenForRepo": 658,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,17 @@\n   private ContainerRequest setupContainerAskForRM() {\n     // setup requirements for hosts\n     // using * as any host will do for the distributed shell app\n     // set the priority for the request\n-    Priority pri \u003d Records.newRecord(Priority.class);\n     // TODO - what is the range for priority? how to decide?\n-    pri.setPriority(requestPriority);\n+    Priority pri \u003d Priority.newInstance(requestPriority);\n \n     // Set up resource type requirements\n     // For now, memory and CPU are supported so we set memory and cpu requirements\n-    Resource capability \u003d Records.newRecord(Resource.class);\n-    capability.setMemory(containerMemory);\n-    capability.setVirtualCores(containerVirtualCores);\n+    Resource capability \u003d Resource.newInstance(containerMemory,\n+      containerVirtualCores);\n \n     ContainerRequest request \u003d new ContainerRequest(capability, null, null,\n         pri);\n     LOG.info(\"Requested container ask: \" + request.toString());\n     return request;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private ContainerRequest setupContainerAskForRM() {\n    // setup requirements for hosts\n    // using * as any host will do for the distributed shell app\n    // set the priority for the request\n    // TODO - what is the range for priority? how to decide?\n    Priority pri \u003d Priority.newInstance(requestPriority);\n\n    // Set up resource type requirements\n    // For now, memory and CPU are supported so we set memory and cpu requirements\n    Resource capability \u003d Resource.newInstance(containerMemory,\n      containerVirtualCores);\n\n    ContainerRequest request \u003d new ContainerRequest(capability, null, null,\n        pri);\n    LOG.info(\"Requested container ask: \" + request.toString());\n    return request;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/ApplicationMaster.java",
      "extendedDetails": {}
    },
    "735d8b27f78ea8be839008650a3e88db37dc507d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7. Support CPU resource for DistributedShell. (Junping Du via llu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1531222 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/10/13 1:18 AM",
      "commitName": "735d8b27f78ea8be839008650a3e88db37dc507d",
      "commitAuthor": "Luke Lu",
      "commitDateOld": "04/10/13 11:08 PM",
      "commitNameOld": "be3edccf0acf55e710b0ec8ab8ce8418da74c615",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 6.09,
      "commitsBetweenForRepo": 46,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,19 @@\n   private ContainerRequest setupContainerAskForRM() {\n     // setup requirements for hosts\n     // using * as any host will do for the distributed shell app\n     // set the priority for the request\n     Priority pri \u003d Records.newRecord(Priority.class);\n     // TODO - what is the range for priority? how to decide?\n     pri.setPriority(requestPriority);\n \n     // Set up resource type requirements\n-    // For now, only memory is supported so we set memory requirements\n+    // For now, memory and CPU are supported so we set memory and cpu requirements\n     Resource capability \u003d Records.newRecord(Resource.class);\n     capability.setMemory(containerMemory);\n+    capability.setVirtualCores(containerVirtualCores);\n \n     ContainerRequest request \u003d new ContainerRequest(capability, null, null,\n         pri);\n     LOG.info(\"Requested container ask: \" + request.toString());\n     return request;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private ContainerRequest setupContainerAskForRM() {\n    // setup requirements for hosts\n    // using * as any host will do for the distributed shell app\n    // set the priority for the request\n    Priority pri \u003d Records.newRecord(Priority.class);\n    // TODO - what is the range for priority? how to decide?\n    pri.setPriority(requestPriority);\n\n    // Set up resource type requirements\n    // For now, memory and CPU are supported so we set memory and cpu requirements\n    Resource capability \u003d Records.newRecord(Resource.class);\n    capability.setMemory(containerMemory);\n    capability.setVirtualCores(containerVirtualCores);\n\n    ContainerRequest request \u003d new ContainerRequest(capability, null, null,\n        pri);\n    LOG.info(\"Requested container ask: \" + request.toString());\n    return request;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/ApplicationMaster.java",
      "extendedDetails": {}
    },
    "3520039979188c4ca6e69654223b3ac794e8bf8f": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-927. Change ContainerRequest to not have more than 1 container count and remove StoreContainerRequest (bikas)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1503960 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/07/13 5:47 PM",
      "commitName": "3520039979188c4ca6e69654223b3ac794e8bf8f",
      "commitAuthor": "Bikas Saha",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-927. Change ContainerRequest to not have more than 1 container count and remove StoreContainerRequest (bikas)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1503960 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "16/07/13 5:47 PM",
          "commitName": "3520039979188c4ca6e69654223b3ac794e8bf8f",
          "commitAuthor": "Bikas Saha",
          "commitDateOld": "20/06/13 5:08 PM",
          "commitNameOld": "1a06175440eec7994d6b63b0e5ac8b6532870fb3",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 26.03,
          "commitsBetweenForRepo": 116,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,18 @@\n-  private ContainerRequest setupContainerAskForRM(int numContainers) {\n+  private ContainerRequest setupContainerAskForRM() {\n     // setup requirements for hosts\n     // using * as any host will do for the distributed shell app\n     // set the priority for the request\n     Priority pri \u003d Records.newRecord(Priority.class);\n     // TODO - what is the range for priority? how to decide?\n     pri.setPriority(requestPriority);\n \n     // Set up resource type requirements\n     // For now, only memory is supported so we set memory requirements\n     Resource capability \u003d Records.newRecord(Resource.class);\n     capability.setMemory(containerMemory);\n \n     ContainerRequest request \u003d new ContainerRequest(capability, null, null,\n-        pri, numContainers);\n+        pri);\n     LOG.info(\"Requested container ask: \" + request.toString());\n     return request;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private ContainerRequest setupContainerAskForRM() {\n    // setup requirements for hosts\n    // using * as any host will do for the distributed shell app\n    // set the priority for the request\n    Priority pri \u003d Records.newRecord(Priority.class);\n    // TODO - what is the range for priority? how to decide?\n    pri.setPriority(requestPriority);\n\n    // Set up resource type requirements\n    // For now, only memory is supported so we set memory requirements\n    Resource capability \u003d Records.newRecord(Resource.class);\n    capability.setMemory(containerMemory);\n\n    ContainerRequest request \u003d new ContainerRequest(capability, null, null,\n        pri);\n    LOG.info(\"Requested container ask: \" + request.toString());\n    return request;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/ApplicationMaster.java",
          "extendedDetails": {
            "oldValue": "[numContainers-int]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-927. Change ContainerRequest to not have more than 1 container count and remove StoreContainerRequest (bikas)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1503960 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "16/07/13 5:47 PM",
          "commitName": "3520039979188c4ca6e69654223b3ac794e8bf8f",
          "commitAuthor": "Bikas Saha",
          "commitDateOld": "20/06/13 5:08 PM",
          "commitNameOld": "1a06175440eec7994d6b63b0e5ac8b6532870fb3",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 26.03,
          "commitsBetweenForRepo": 116,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,18 @@\n-  private ContainerRequest setupContainerAskForRM(int numContainers) {\n+  private ContainerRequest setupContainerAskForRM() {\n     // setup requirements for hosts\n     // using * as any host will do for the distributed shell app\n     // set the priority for the request\n     Priority pri \u003d Records.newRecord(Priority.class);\n     // TODO - what is the range for priority? how to decide?\n     pri.setPriority(requestPriority);\n \n     // Set up resource type requirements\n     // For now, only memory is supported so we set memory requirements\n     Resource capability \u003d Records.newRecord(Resource.class);\n     capability.setMemory(containerMemory);\n \n     ContainerRequest request \u003d new ContainerRequest(capability, null, null,\n-        pri, numContainers);\n+        pri);\n     LOG.info(\"Requested container ask: \" + request.toString());\n     return request;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private ContainerRequest setupContainerAskForRM() {\n    // setup requirements for hosts\n    // using * as any host will do for the distributed shell app\n    // set the priority for the request\n    Priority pri \u003d Records.newRecord(Priority.class);\n    // TODO - what is the range for priority? how to decide?\n    pri.setPriority(requestPriority);\n\n    // Set up resource type requirements\n    // For now, only memory is supported so we set memory requirements\n    Resource capability \u003d Records.newRecord(Resource.class);\n    capability.setMemory(containerMemory);\n\n    ContainerRequest request \u003d new ContainerRequest(capability, null, null,\n        pri);\n    LOG.info(\"Requested container ask: \" + request.toString());\n    return request;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/ApplicationMaster.java",
          "extendedDetails": {}
        }
      ]
    },
    "f5551bf8091c11586d402cdd4a0b09aa0498b673": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "YARN-277. Use AMRMClient in DistributedShell to exemplify the approach. Contributed by Bikas Saha\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1437156 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/01/13 12:49 PM",
      "commitName": "f5551bf8091c11586d402cdd4a0b09aa0498b673",
      "commitAuthor": "Hitesh Shah",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "YARN-277. Use AMRMClient in DistributedShell to exemplify the approach. Contributed by Bikas Saha\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1437156 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/01/13 12:49 PM",
          "commitName": "f5551bf8091c11586d402cdd4a0b09aa0498b673",
          "commitAuthor": "Hitesh Shah",
          "commitDateOld": "07/08/12 10:22 PM",
          "commitNameOld": "e1fdf62123625e4ba399af02f8aad500637d29d1",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 167.64,
          "commitsBetweenForRepo": 901,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,18 @@\n-  private ResourceRequest setupContainerAskForRM(int numContainers) {\n-    ResourceRequest request \u003d Records.newRecord(ResourceRequest.class);\n-\n-    // setup requirements for hosts \n-    // whether a particular rack/host is needed \n-    // Refer to apis under org.apache.hadoop.net for more \n-    // details on how to get figure out rack/host mapping.\n+  private ContainerRequest setupContainerAskForRM(int numContainers) {\n+    // setup requirements for hosts\n     // using * as any host will do for the distributed shell app\n-    request.setHostName(\"*\");\n-\n-    // set no. of containers needed\n-    request.setNumContainers(numContainers);\n-\n     // set the priority for the request\n     Priority pri \u003d Records.newRecord(Priority.class);\n-    // TODO - what is the range for priority? how to decide? \n+    // TODO - what is the range for priority? how to decide?\n     pri.setPriority(requestPriority);\n-    request.setPriority(pri);\n \n     // Set up resource type requirements\n     // For now, only memory is supported so we set memory requirements\n     Resource capability \u003d Records.newRecord(Resource.class);\n     capability.setMemory(containerMemory);\n-    request.setCapability(capability);\n \n+    ContainerRequest request \u003d new ContainerRequest(capability, null, null,\n+        pri, numContainers);\n+    LOG.info(\"Requested container ask: \" + request.toString());\n     return request;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private ContainerRequest setupContainerAskForRM(int numContainers) {\n    // setup requirements for hosts\n    // using * as any host will do for the distributed shell app\n    // set the priority for the request\n    Priority pri \u003d Records.newRecord(Priority.class);\n    // TODO - what is the range for priority? how to decide?\n    pri.setPriority(requestPriority);\n\n    // Set up resource type requirements\n    // For now, only memory is supported so we set memory requirements\n    Resource capability \u003d Records.newRecord(Resource.class);\n    capability.setMemory(containerMemory);\n\n    ContainerRequest request \u003d new ContainerRequest(capability, null, null,\n        pri, numContainers);\n    LOG.info(\"Requested container ask: \" + request.toString());\n    return request;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/ApplicationMaster.java",
          "extendedDetails": {
            "oldValue": "ResourceRequest",
            "newValue": "ContainerRequest"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-277. Use AMRMClient in DistributedShell to exemplify the approach. Contributed by Bikas Saha\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1437156 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/01/13 12:49 PM",
          "commitName": "f5551bf8091c11586d402cdd4a0b09aa0498b673",
          "commitAuthor": "Hitesh Shah",
          "commitDateOld": "07/08/12 10:22 PM",
          "commitNameOld": "e1fdf62123625e4ba399af02f8aad500637d29d1",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 167.64,
          "commitsBetweenForRepo": 901,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,18 @@\n-  private ResourceRequest setupContainerAskForRM(int numContainers) {\n-    ResourceRequest request \u003d Records.newRecord(ResourceRequest.class);\n-\n-    // setup requirements for hosts \n-    // whether a particular rack/host is needed \n-    // Refer to apis under org.apache.hadoop.net for more \n-    // details on how to get figure out rack/host mapping.\n+  private ContainerRequest setupContainerAskForRM(int numContainers) {\n+    // setup requirements for hosts\n     // using * as any host will do for the distributed shell app\n-    request.setHostName(\"*\");\n-\n-    // set no. of containers needed\n-    request.setNumContainers(numContainers);\n-\n     // set the priority for the request\n     Priority pri \u003d Records.newRecord(Priority.class);\n-    // TODO - what is the range for priority? how to decide? \n+    // TODO - what is the range for priority? how to decide?\n     pri.setPriority(requestPriority);\n-    request.setPriority(pri);\n \n     // Set up resource type requirements\n     // For now, only memory is supported so we set memory requirements\n     Resource capability \u003d Records.newRecord(Resource.class);\n     capability.setMemory(containerMemory);\n-    request.setCapability(capability);\n \n+    ContainerRequest request \u003d new ContainerRequest(capability, null, null,\n+        pri, numContainers);\n+    LOG.info(\"Requested container ask: \" + request.toString());\n     return request;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private ContainerRequest setupContainerAskForRM(int numContainers) {\n    // setup requirements for hosts\n    // using * as any host will do for the distributed shell app\n    // set the priority for the request\n    Priority pri \u003d Records.newRecord(Priority.class);\n    // TODO - what is the range for priority? how to decide?\n    pri.setPriority(requestPriority);\n\n    // Set up resource type requirements\n    // For now, only memory is supported so we set memory requirements\n    Resource capability \u003d Records.newRecord(Resource.class);\n    capability.setMemory(containerMemory);\n\n    ContainerRequest request \u003d new ContainerRequest(capability, null, null,\n        pri, numContainers);\n    LOG.info(\"Requested container ask: \" + request.toString());\n    return request;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/ApplicationMaster.java",
          "extendedDetails": {}
        }
      ]
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private ResourceRequest setupContainerAskForRM(int numContainers) {\n    ResourceRequest request \u003d Records.newRecord(ResourceRequest.class);\n\n    // setup requirements for hosts \n    // whether a particular rack/host is needed \n    // Refer to apis under org.apache.hadoop.net for more \n    // details on how to get figure out rack/host mapping.\n    // using * as any host will do for the distributed shell app\n    request.setHostName(\"*\");\n\n    // set no. of containers needed\n    request.setNumContainers(numContainers);\n\n    // set the priority for the request\n    Priority pri \u003d Records.newRecord(Priority.class);\n    // TODO - what is the range for priority? how to decide? \n    pri.setPriority(requestPriority);\n    request.setPriority(pri);\n\n    // Set up resource type requirements\n    // For now, only memory is supported so we set memory requirements\n    Resource capability \u003d Records.newRecord(Resource.class);\n    capability.setMemory(containerMemory);\n    request.setCapability(capability);\n\n    return request;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/ApplicationMaster.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/ApplicationMaster.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/ApplicationMaster.java"
      }
    },
    "fad230a49d0d4cdbb2062b10c3dea6c755737db5": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-2719. Add a simple, DistributedShell, application to illustrate alternate frameworks on YARN. Contributed by Hitesh Shah.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1177864 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/09/11 3:25 PM",
      "commitName": "fad230a49d0d4cdbb2062b10c3dea6c755737db5",
      "commitAuthor": "Arun Murthy",
      "diff": "@@ -0,0 +1,27 @@\n+  private ResourceRequest setupContainerAskForRM(int numContainers) {\n+    ResourceRequest request \u003d Records.newRecord(ResourceRequest.class);\n+\n+    // setup requirements for hosts \n+    // whether a particular rack/host is needed \n+    // Refer to apis under org.apache.hadoop.net for more \n+    // details on how to get figure out rack/host mapping.\n+    // using * as any host will do for the distributed shell app\n+    request.setHostName(\"*\");\n+\n+    // set no. of containers needed\n+    request.setNumContainers(numContainers);\n+\n+    // set the priority for the request\n+    Priority pri \u003d Records.newRecord(Priority.class);\n+    // TODO - what is the range for priority? how to decide? \n+    pri.setPriority(requestPriority);\n+    request.setPriority(pri);\t    \n+\n+    // Set up resource type requirements\n+    // For now, only memory is supported so we set memory requirements\n+    Resource capability \u003d Records.newRecord(Resource.class);\n+    capability.setMemory(containerMemory);\n+    request.setCapability(capability);\n+\n+    return request;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private ResourceRequest setupContainerAskForRM(int numContainers) {\n    ResourceRequest request \u003d Records.newRecord(ResourceRequest.class);\n\n    // setup requirements for hosts \n    // whether a particular rack/host is needed \n    // Refer to apis under org.apache.hadoop.net for more \n    // details on how to get figure out rack/host mapping.\n    // using * as any host will do for the distributed shell app\n    request.setHostName(\"*\");\n\n    // set no. of containers needed\n    request.setNumContainers(numContainers);\n\n    // set the priority for the request\n    Priority pri \u003d Records.newRecord(Priority.class);\n    // TODO - what is the range for priority? how to decide? \n    pri.setPriority(requestPriority);\n    request.setPriority(pri);\t    \n\n    // Set up resource type requirements\n    // For now, only memory is supported so we set memory requirements\n    Resource capability \u003d Records.newRecord(Resource.class);\n    capability.setMemory(containerMemory);\n    request.setCapability(capability);\n\n    return request;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/ApplicationMaster.java"
    }
  }
}