{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FsDatasetCache.java",
  "functionName": "getReplicaCachePath",
  "functionId": "getReplicaCachePath___bpid-String__blockId-long",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetCache.java",
  "functionStartLine": 220,
  "functionEndLine": 227,
  "numCommitsSeen": 31,
  "timeTaken": 2387,
  "changeHistory": [
    "d79cce20abbbf321f6dcce03f4087544124a7cd2",
    "9b0aace1e6c54f201784912c0b623707aa82b761",
    "35ff31dd9462cf4fb4ebf5556ee8ae6bcd7c5c3a"
  ],
  "changeHistoryShort": {
    "d79cce20abbbf321f6dcce03f4087544124a7cd2": "Yexceptionschange",
    "9b0aace1e6c54f201784912c0b623707aa82b761": "Ybodychange",
    "35ff31dd9462cf4fb4ebf5556ee8ae6bcd7c5c3a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d79cce20abbbf321f6dcce03f4087544124a7cd2": {
      "type": "Yexceptionschange",
      "commitMessage": "HDFS-14740. Recover data blocks from persistent memory read cache during datanode restarts. Contributed by Feilong He.\n",
      "commitDate": "01/01/20 10:14 PM",
      "commitName": "d79cce20abbbf321f6dcce03f4087544124a7cd2",
      "commitAuthor": "Rakesh Radhakrishnan",
      "commitDateOld": "22/09/19 9:32 AM",
      "commitNameOld": "659c88801d008bb352d10a1cb3bd0e401486cc9b",
      "commitAuthorOld": "Rakesh Radhakrishnan",
      "daysBetweenCommits": 101.57,
      "commitsBetweenForRepo": 448,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,8 @@\n-  String getReplicaCachePath(String bpid, long blockId) {\n+  String getReplicaCachePath(String bpid, long blockId) throws IOException {\n     if (cacheLoader.isTransientCache() ||\n         !isCached(bpid, blockId)) {\n       return null;\n     }\n     ExtendedBlockId key \u003d new ExtendedBlockId(blockId, bpid);\n     return PmemVolumeManager.getInstance().getCachePath(key);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  String getReplicaCachePath(String bpid, long blockId) throws IOException {\n    if (cacheLoader.isTransientCache() ||\n        !isCached(bpid, blockId)) {\n      return null;\n    }\n    ExtendedBlockId key \u003d new ExtendedBlockId(blockId, bpid);\n    return PmemVolumeManager.getInstance().getCachePath(key);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetCache.java",
      "extendedDetails": {
        "oldValue": "[]",
        "newValue": "[IOException]"
      }
    },
    "9b0aace1e6c54f201784912c0b623707aa82b761": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14401. Refine the implementation for HDFS cache on SCM. Contributed by Feilong He.\n",
      "commitDate": "08/05/19 4:50 AM",
      "commitName": "9b0aace1e6c54f201784912c0b623707aa82b761",
      "commitAuthor": "Rakesh Radhakrishnan",
      "commitDateOld": "30/03/19 11:33 PM",
      "commitNameOld": "35ff31dd9462cf4fb4ebf5556ee8ae6bcd7c5c3a",
      "commitAuthorOld": "Uma Maheswara Rao G",
      "daysBetweenCommits": 38.22,
      "commitsBetweenForRepo": 236,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,8 @@\n   String getReplicaCachePath(String bpid, long blockId) {\n     if (cacheLoader.isTransientCache() ||\n         !isCached(bpid, blockId)) {\n       return null;\n     }\n     ExtendedBlockId key \u003d new ExtendedBlockId(blockId, bpid);\n-    return cacheLoader.getCachedPath(key);\n+    return PmemVolumeManager.getInstance().getCachePath(key);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  String getReplicaCachePath(String bpid, long blockId) {\n    if (cacheLoader.isTransientCache() ||\n        !isCached(bpid, blockId)) {\n      return null;\n    }\n    ExtendedBlockId key \u003d new ExtendedBlockId(blockId, bpid);\n    return PmemVolumeManager.getInstance().getCachePath(key);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetCache.java",
      "extendedDetails": {}
    },
    "35ff31dd9462cf4fb4ebf5556ee8ae6bcd7c5c3a": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-14355 : Implement HDFS cache on SCM by using pure java mapped byte buffer. Contributed by Feilong He.\n",
      "commitDate": "30/03/19 11:33 PM",
      "commitName": "35ff31dd9462cf4fb4ebf5556ee8ae6bcd7c5c3a",
      "commitAuthor": "Uma Maheswara Rao G",
      "diff": "@@ -0,0 +1,8 @@\n+  String getReplicaCachePath(String bpid, long blockId) {\n+    if (cacheLoader.isTransientCache() ||\n+        !isCached(bpid, blockId)) {\n+      return null;\n+    }\n+    ExtendedBlockId key \u003d new ExtendedBlockId(blockId, bpid);\n+    return cacheLoader.getCachedPath(key);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  String getReplicaCachePath(String bpid, long blockId) {\n    if (cacheLoader.isTransientCache() ||\n        !isCached(bpid, blockId)) {\n      return null;\n    }\n    ExtendedBlockId key \u003d new ExtendedBlockId(blockId, bpid);\n    return cacheLoader.getCachedPath(key);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetCache.java"
    }
  }
}