{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DelegationTokenAuthenticationHandler.java",
  "functionName": "initTokenManager",
  "functionId": "initTokenManager___config-Properties",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/web/DelegationTokenAuthenticationHandler.java",
  "functionStartLine": 151,
  "functionEndLine": 164,
  "numCommitsSeen": 25,
  "timeTaken": 1169,
  "changeHistory": [
    "db890eef3208cc557476fa510f7a253ba22bc68a",
    "be9c67930b57c516723d566625f9036a88a84055"
  ],
  "changeHistoryShort": {
    "db890eef3208cc557476fa510f7a253ba22bc68a": "Ybodychange",
    "be9c67930b57c516723d566625f9036a88a84055": "Yintroduced"
  },
  "changeHistoryDetails": {
    "db890eef3208cc557476fa510f7a253ba22bc68a": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11017. KMS delegation token secret manager should be able to use zookeeper as store. (asuresh via tucu)\n",
      "commitDate": "20/09/14 8:21 AM",
      "commitName": "db890eef3208cc557476fa510f7a253ba22bc68a",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "04/09/14 9:11 AM",
      "commitNameOld": "70b218748badf079c859c3af2b468a0b7b49c333",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 15.97,
      "commitsBetweenForRepo": 191,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,14 @@\n   public void initTokenManager(Properties config) {\n-    String configPrefix \u003d authHandler.getType() + \".\";\n     Configuration conf \u003d new Configuration(false);\n     for (Map.Entry entry : config.entrySet()) {\n       conf.set((String) entry.getKey(), (String) entry.getValue());\n     }\n     String tokenKind \u003d conf.get(TOKEN_KIND);\n     if (tokenKind \u003d\u003d null) {\n       throw new IllegalArgumentException(\n           \"The configuration does not define the token kind\");\n     }\n     tokenKind \u003d tokenKind.trim();\n-    long updateInterval \u003d conf.getLong(configPrefix + UPDATE_INTERVAL,\n-        UPDATE_INTERVAL_DEFAULT);\n-    long maxLifeTime \u003d conf.getLong(configPrefix + MAX_LIFETIME,\n-        MAX_LIFETIME_DEFAULT);\n-    long renewInterval \u003d conf.getLong(configPrefix + RENEW_INTERVAL,\n-        RENEW_INTERVAL_DEFAULT);\n-    long removalScanInterval \u003d conf.getLong(\n-        configPrefix + REMOVAL_SCAN_INTERVAL, REMOVAL_SCAN_INTERVAL_DEFAULT);\n-    tokenManager \u003d new DelegationTokenManager(new Text(tokenKind),\n-        updateInterval * 1000, maxLifeTime * 1000, renewInterval * 1000,\n-        removalScanInterval * 1000);\n+    tokenManager \u003d new DelegationTokenManager(conf, new Text(tokenKind));\n     tokenManager.init();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void initTokenManager(Properties config) {\n    Configuration conf \u003d new Configuration(false);\n    for (Map.Entry entry : config.entrySet()) {\n      conf.set((String) entry.getKey(), (String) entry.getValue());\n    }\n    String tokenKind \u003d conf.get(TOKEN_KIND);\n    if (tokenKind \u003d\u003d null) {\n      throw new IllegalArgumentException(\n          \"The configuration does not define the token kind\");\n    }\n    tokenKind \u003d tokenKind.trim();\n    tokenManager \u003d new DelegationTokenManager(conf, new Text(tokenKind));\n    tokenManager.init();\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/web/DelegationTokenAuthenticationHandler.java",
      "extendedDetails": {}
    },
    "be9c67930b57c516723d566625f9036a88a84055": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-10771. Refactor HTTP delegation support out of httpfs to common, PART 2. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1616672 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/14 9:58 PM",
      "commitName": "be9c67930b57c516723d566625f9036a88a84055",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,25 @@\n+  public void initTokenManager(Properties config) {\n+    String configPrefix \u003d authHandler.getType() + \".\";\n+    Configuration conf \u003d new Configuration(false);\n+    for (Map.Entry entry : config.entrySet()) {\n+      conf.set((String) entry.getKey(), (String) entry.getValue());\n+    }\n+    String tokenKind \u003d conf.get(TOKEN_KIND);\n+    if (tokenKind \u003d\u003d null) {\n+      throw new IllegalArgumentException(\n+          \"The configuration does not define the token kind\");\n+    }\n+    tokenKind \u003d tokenKind.trim();\n+    long updateInterval \u003d conf.getLong(configPrefix + UPDATE_INTERVAL,\n+        UPDATE_INTERVAL_DEFAULT);\n+    long maxLifeTime \u003d conf.getLong(configPrefix + MAX_LIFETIME,\n+        MAX_LIFETIME_DEFAULT);\n+    long renewInterval \u003d conf.getLong(configPrefix + RENEW_INTERVAL,\n+        RENEW_INTERVAL_DEFAULT);\n+    long removalScanInterval \u003d conf.getLong(\n+        configPrefix + REMOVAL_SCAN_INTERVAL, REMOVAL_SCAN_INTERVAL_DEFAULT);\n+    tokenManager \u003d new DelegationTokenManager(new Text(tokenKind),\n+        updateInterval * 1000, maxLifeTime * 1000, renewInterval * 1000,\n+        removalScanInterval * 1000);\n+    tokenManager.init();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void initTokenManager(Properties config) {\n    String configPrefix \u003d authHandler.getType() + \".\";\n    Configuration conf \u003d new Configuration(false);\n    for (Map.Entry entry : config.entrySet()) {\n      conf.set((String) entry.getKey(), (String) entry.getValue());\n    }\n    String tokenKind \u003d conf.get(TOKEN_KIND);\n    if (tokenKind \u003d\u003d null) {\n      throw new IllegalArgumentException(\n          \"The configuration does not define the token kind\");\n    }\n    tokenKind \u003d tokenKind.trim();\n    long updateInterval \u003d conf.getLong(configPrefix + UPDATE_INTERVAL,\n        UPDATE_INTERVAL_DEFAULT);\n    long maxLifeTime \u003d conf.getLong(configPrefix + MAX_LIFETIME,\n        MAX_LIFETIME_DEFAULT);\n    long renewInterval \u003d conf.getLong(configPrefix + RENEW_INTERVAL,\n        RENEW_INTERVAL_DEFAULT);\n    long removalScanInterval \u003d conf.getLong(\n        configPrefix + REMOVAL_SCAN_INTERVAL, REMOVAL_SCAN_INTERVAL_DEFAULT);\n    tokenManager \u003d new DelegationTokenManager(new Text(tokenKind),\n        updateInterval * 1000, maxLifeTime * 1000, renewInterval * 1000,\n        removalScanInterval * 1000);\n    tokenManager.init();\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/web/DelegationTokenAuthenticationHandler.java"
    }
  }
}