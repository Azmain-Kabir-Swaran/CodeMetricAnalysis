{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SchedulerAppUtils.java",
  "functionName": "isPlaceBlacklisted",
  "functionId": "isPlaceBlacklisted___application-SchedulerApplicationAttempt__node-SchedulerNode__log-Logger",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerAppUtils.java",
  "functionStartLine": 25,
  "functionEndLine": 41,
  "numCommitsSeen": 11,
  "timeTaken": 6291,
  "changeHistory": [
    "2064ca015d1584263aac0cc20c60b925a3aff612",
    "e40e2d6ad5cbe782c3a067229270738b501ed27e",
    "620325e81696fca140195b74929ed9eda2d5eb16",
    "a45017a5f17ec11814db7e206d1e80aaa4dd8d8f",
    "b4a5476d95271bf3df6eb19f5d6b4c65f816396d"
  ],
  "changeHistoryShort": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": "Ybodychange",
    "e40e2d6ad5cbe782c3a067229270738b501ed27e": "Yparameterchange",
    "620325e81696fca140195b74929ed9eda2d5eb16": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
    "a45017a5f17ec11814db7e206d1e80aaa4dd8d8f": "Yparameterchange",
    "b4a5476d95271bf3df6eb19f5d6b4c65f816396d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9349.  Changed logging to use slf4j api.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "15/03/19 4:20 PM",
      "commitName": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "04/03/19 9:10 PM",
      "commitNameOld": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
      "commitAuthorOld": "Prabhu Joseph",
      "daysBetweenCommits": 10.76,
      "commitsBetweenForRepo": 108,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,17 @@\n   public static boolean isPlaceBlacklisted(\n       SchedulerApplicationAttempt application, SchedulerNode node,\n       Logger log) {\n     if (application.isPlaceBlacklisted(node.getNodeName())) {\n-      if (log.isDebugEnabled()) {\n-        log.debug(\"Skipping \u0027host\u0027 \" + node.getNodeName() +\n-            \" for \" + application.getApplicationId() +\n-            \" since it has been blacklisted\");\n-      }\n+      log.debug(\"Skipping \u0027host\u0027 {} for {} since it has been blacklisted\",\n+          node.getNodeName(), application.getApplicationId());\n       return true;\n     }\n \n     if (application.isPlaceBlacklisted(node.getRackName())) {\n-      if (log.isDebugEnabled()) {\n-        log.debug(\"Skipping \u0027rack\u0027 \" + node.getRackName() +\n-            \" for \" + application.getApplicationId() +\n-            \" since it has been blacklisted\");\n-      }\n+      log.debug(\"Skipping \u0027rack\u0027 {} for {} since it has been blacklisted\",\n+          node.getRackName(), application.getApplicationId());\n       return true;\n     }\n \n     return false;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static boolean isPlaceBlacklisted(\n      SchedulerApplicationAttempt application, SchedulerNode node,\n      Logger log) {\n    if (application.isPlaceBlacklisted(node.getNodeName())) {\n      log.debug(\"Skipping \u0027host\u0027 {} for {} since it has been blacklisted\",\n          node.getNodeName(), application.getApplicationId());\n      return true;\n    }\n\n    if (application.isPlaceBlacklisted(node.getRackName())) {\n      log.debug(\"Skipping \u0027rack\u0027 {} for {} since it has been blacklisted\",\n          node.getRackName(), application.getApplicationId());\n      return true;\n    }\n\n    return false;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerAppUtils.java",
      "extendedDetails": {}
    },
    "e40e2d6ad5cbe782c3a067229270738b501ed27e": {
      "type": "Yparameterchange",
      "commitMessage": "YARN-7243. Moving logging APIs over to slf4j in hadoop-yarn-server-resourcemanager.\n\nSigned-off-by: Akira Ajisaka \u003caajisaka@apache.org\u003e\n",
      "commitDate": "04/03/19 9:10 PM",
      "commitName": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
      "commitAuthor": "Prabhu Joseph",
      "commitDateOld": "07/06/16 3:06 PM",
      "commitNameOld": "620325e81696fca140195b74929ed9eda2d5eb16",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 1000.29,
      "commitsBetweenForRepo": 7675,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,23 @@\n   public static boolean isPlaceBlacklisted(\n-      SchedulerApplicationAttempt application, SchedulerNode node, Log log) {\n+      SchedulerApplicationAttempt application, SchedulerNode node,\n+      Logger log) {\n     if (application.isPlaceBlacklisted(node.getNodeName())) {\n       if (log.isDebugEnabled()) {\n         log.debug(\"Skipping \u0027host\u0027 \" + node.getNodeName() +\n             \" for \" + application.getApplicationId() +\n             \" since it has been blacklisted\");\n       }\n       return true;\n     }\n \n     if (application.isPlaceBlacklisted(node.getRackName())) {\n       if (log.isDebugEnabled()) {\n         log.debug(\"Skipping \u0027rack\u0027 \" + node.getRackName() +\n             \" for \" + application.getApplicationId() +\n             \" since it has been blacklisted\");\n       }\n       return true;\n     }\n \n     return false;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static boolean isPlaceBlacklisted(\n      SchedulerApplicationAttempt application, SchedulerNode node,\n      Logger log) {\n    if (application.isPlaceBlacklisted(node.getNodeName())) {\n      if (log.isDebugEnabled()) {\n        log.debug(\"Skipping \u0027host\u0027 \" + node.getNodeName() +\n            \" for \" + application.getApplicationId() +\n            \" since it has been blacklisted\");\n      }\n      return true;\n    }\n\n    if (application.isPlaceBlacklisted(node.getRackName())) {\n      if (log.isDebugEnabled()) {\n        log.debug(\"Skipping \u0027rack\u0027 \" + node.getRackName() +\n            \" for \" + application.getApplicationId() +\n            \" since it has been blacklisted\");\n      }\n      return true;\n    }\n\n    return false;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerAppUtils.java",
      "extendedDetails": {
        "oldValue": "[application-SchedulerApplicationAttempt, node-SchedulerNode, log-Log]",
        "newValue": "[application-SchedulerApplicationAttempt, node-SchedulerNode, log-Logger]"
      }
    },
    "620325e81696fca140195b74929ed9eda2d5eb16": {
      "type": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-4837. User facing aspects of \u0027AM blacklisting\u0027 feature need fixing. (vinodkv via wangda)\n",
      "commitDate": "07/06/16 3:06 PM",
      "commitName": "620325e81696fca140195b74929ed9eda2d5eb16",
      "commitAuthor": "Wangda Tan",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-4837. User facing aspects of \u0027AM blacklisting\u0027 feature need fixing. (vinodkv via wangda)\n",
          "commitDate": "07/06/16 3:06 PM",
          "commitName": "620325e81696fca140195b74929ed9eda2d5eb16",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "02/01/14 12:19 PM",
          "commitNameOld": "a45017a5f17ec11814db7e206d1e80aaa4dd8d8f",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 887.07,
          "commitsBetweenForRepo": 6864,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,22 @@\n-  public static  boolean isBlacklisted(SchedulerApplicationAttempt application,\n-      SchedulerNode node, Log LOG) {\n-    if (application.isBlacklisted(node.getNodeName())) {\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Skipping \u0027host\u0027 \" + node.getNodeName() +\n+  public static boolean isPlaceBlacklisted(\n+      SchedulerApplicationAttempt application, SchedulerNode node, Log log) {\n+    if (application.isPlaceBlacklisted(node.getNodeName())) {\n+      if (log.isDebugEnabled()) {\n+        log.debug(\"Skipping \u0027host\u0027 \" + node.getNodeName() +\n             \" for \" + application.getApplicationId() +\n             \" since it has been blacklisted\");\n       }\n       return true;\n     }\n \n-    if (application.isBlacklisted(node.getRackName())) {\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Skipping \u0027rack\u0027 \" + node.getRackName() +\n+    if (application.isPlaceBlacklisted(node.getRackName())) {\n+      if (log.isDebugEnabled()) {\n+        log.debug(\"Skipping \u0027rack\u0027 \" + node.getRackName() +\n             \" for \" + application.getApplicationId() +\n             \" since it has been blacklisted\");\n       }\n       return true;\n     }\n \n     return false;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static boolean isPlaceBlacklisted(\n      SchedulerApplicationAttempt application, SchedulerNode node, Log log) {\n    if (application.isPlaceBlacklisted(node.getNodeName())) {\n      if (log.isDebugEnabled()) {\n        log.debug(\"Skipping \u0027host\u0027 \" + node.getNodeName() +\n            \" for \" + application.getApplicationId() +\n            \" since it has been blacklisted\");\n      }\n      return true;\n    }\n\n    if (application.isPlaceBlacklisted(node.getRackName())) {\n      if (log.isDebugEnabled()) {\n        log.debug(\"Skipping \u0027rack\u0027 \" + node.getRackName() +\n            \" for \" + application.getApplicationId() +\n            \" since it has been blacklisted\");\n      }\n      return true;\n    }\n\n    return false;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerAppUtils.java",
          "extendedDetails": {
            "oldValue": "isBlacklisted",
            "newValue": "isPlaceBlacklisted"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-4837. User facing aspects of \u0027AM blacklisting\u0027 feature need fixing. (vinodkv via wangda)\n",
          "commitDate": "07/06/16 3:06 PM",
          "commitName": "620325e81696fca140195b74929ed9eda2d5eb16",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "02/01/14 12:19 PM",
          "commitNameOld": "a45017a5f17ec11814db7e206d1e80aaa4dd8d8f",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 887.07,
          "commitsBetweenForRepo": 6864,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,22 @@\n-  public static  boolean isBlacklisted(SchedulerApplicationAttempt application,\n-      SchedulerNode node, Log LOG) {\n-    if (application.isBlacklisted(node.getNodeName())) {\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Skipping \u0027host\u0027 \" + node.getNodeName() +\n+  public static boolean isPlaceBlacklisted(\n+      SchedulerApplicationAttempt application, SchedulerNode node, Log log) {\n+    if (application.isPlaceBlacklisted(node.getNodeName())) {\n+      if (log.isDebugEnabled()) {\n+        log.debug(\"Skipping \u0027host\u0027 \" + node.getNodeName() +\n             \" for \" + application.getApplicationId() +\n             \" since it has been blacklisted\");\n       }\n       return true;\n     }\n \n-    if (application.isBlacklisted(node.getRackName())) {\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Skipping \u0027rack\u0027 \" + node.getRackName() +\n+    if (application.isPlaceBlacklisted(node.getRackName())) {\n+      if (log.isDebugEnabled()) {\n+        log.debug(\"Skipping \u0027rack\u0027 \" + node.getRackName() +\n             \" for \" + application.getApplicationId() +\n             \" since it has been blacklisted\");\n       }\n       return true;\n     }\n \n     return false;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static boolean isPlaceBlacklisted(\n      SchedulerApplicationAttempt application, SchedulerNode node, Log log) {\n    if (application.isPlaceBlacklisted(node.getNodeName())) {\n      if (log.isDebugEnabled()) {\n        log.debug(\"Skipping \u0027host\u0027 \" + node.getNodeName() +\n            \" for \" + application.getApplicationId() +\n            \" since it has been blacklisted\");\n      }\n      return true;\n    }\n\n    if (application.isPlaceBlacklisted(node.getRackName())) {\n      if (log.isDebugEnabled()) {\n        log.debug(\"Skipping \u0027rack\u0027 \" + node.getRackName() +\n            \" for \" + application.getApplicationId() +\n            \" since it has been blacklisted\");\n      }\n      return true;\n    }\n\n    return false;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerAppUtils.java",
          "extendedDetails": {
            "oldValue": "[application-SchedulerApplicationAttempt, node-SchedulerNode, LOG-Log]",
            "newValue": "[application-SchedulerApplicationAttempt, node-SchedulerNode, log-Log]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4837. User facing aspects of \u0027AM blacklisting\u0027 feature need fixing. (vinodkv via wangda)\n",
          "commitDate": "07/06/16 3:06 PM",
          "commitName": "620325e81696fca140195b74929ed9eda2d5eb16",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "02/01/14 12:19 PM",
          "commitNameOld": "a45017a5f17ec11814db7e206d1e80aaa4dd8d8f",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 887.07,
          "commitsBetweenForRepo": 6864,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,22 @@\n-  public static  boolean isBlacklisted(SchedulerApplicationAttempt application,\n-      SchedulerNode node, Log LOG) {\n-    if (application.isBlacklisted(node.getNodeName())) {\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Skipping \u0027host\u0027 \" + node.getNodeName() +\n+  public static boolean isPlaceBlacklisted(\n+      SchedulerApplicationAttempt application, SchedulerNode node, Log log) {\n+    if (application.isPlaceBlacklisted(node.getNodeName())) {\n+      if (log.isDebugEnabled()) {\n+        log.debug(\"Skipping \u0027host\u0027 \" + node.getNodeName() +\n             \" for \" + application.getApplicationId() +\n             \" since it has been blacklisted\");\n       }\n       return true;\n     }\n \n-    if (application.isBlacklisted(node.getRackName())) {\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Skipping \u0027rack\u0027 \" + node.getRackName() +\n+    if (application.isPlaceBlacklisted(node.getRackName())) {\n+      if (log.isDebugEnabled()) {\n+        log.debug(\"Skipping \u0027rack\u0027 \" + node.getRackName() +\n             \" for \" + application.getApplicationId() +\n             \" since it has been blacklisted\");\n       }\n       return true;\n     }\n \n     return false;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static boolean isPlaceBlacklisted(\n      SchedulerApplicationAttempt application, SchedulerNode node, Log log) {\n    if (application.isPlaceBlacklisted(node.getNodeName())) {\n      if (log.isDebugEnabled()) {\n        log.debug(\"Skipping \u0027host\u0027 \" + node.getNodeName() +\n            \" for \" + application.getApplicationId() +\n            \" since it has been blacklisted\");\n      }\n      return true;\n    }\n\n    if (application.isPlaceBlacklisted(node.getRackName())) {\n      if (log.isDebugEnabled()) {\n        log.debug(\"Skipping \u0027rack\u0027 \" + node.getRackName() +\n            \" for \" + application.getApplicationId() +\n            \" since it has been blacklisted\");\n      }\n      return true;\n    }\n\n    return false;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerAppUtils.java",
          "extendedDetails": {}
        }
      ]
    },
    "a45017a5f17ec11814db7e206d1e80aaa4dd8d8f": {
      "type": "Yparameterchange",
      "commitMessage": "YARN-1493. Changed ResourceManager and Scheduler interfacing to recognize app-attempts separately from apps. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1554896 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/01/14 12:19 PM",
      "commitName": "a45017a5f17ec11814db7e206d1e80aaa4dd8d8f",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "25/10/13 5:31 PM",
      "commitNameOld": "b4a5476d95271bf3df6eb19f5d6b4c65f816396d",
      "commitAuthorOld": "Sanford Ryza",
      "daysBetweenCommits": 68.82,
      "commitsBetweenForRepo": 370,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n-  public static  boolean isBlacklisted(SchedulerApplication application,\n+  public static  boolean isBlacklisted(SchedulerApplicationAttempt application,\n       SchedulerNode node, Log LOG) {\n     if (application.isBlacklisted(node.getNodeName())) {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Skipping \u0027host\u0027 \" + node.getNodeName() +\n             \" for \" + application.getApplicationId() +\n             \" since it has been blacklisted\");\n       }\n       return true;\n     }\n \n     if (application.isBlacklisted(node.getRackName())) {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Skipping \u0027rack\u0027 \" + node.getRackName() +\n             \" for \" + application.getApplicationId() +\n             \" since it has been blacklisted\");\n       }\n       return true;\n     }\n \n     return false;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static  boolean isBlacklisted(SchedulerApplicationAttempt application,\n      SchedulerNode node, Log LOG) {\n    if (application.isBlacklisted(node.getNodeName())) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Skipping \u0027host\u0027 \" + node.getNodeName() +\n            \" for \" + application.getApplicationId() +\n            \" since it has been blacklisted\");\n      }\n      return true;\n    }\n\n    if (application.isBlacklisted(node.getRackName())) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Skipping \u0027rack\u0027 \" + node.getRackName() +\n            \" for \" + application.getApplicationId() +\n            \" since it has been blacklisted\");\n      }\n      return true;\n    }\n\n    return false;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerAppUtils.java",
      "extendedDetails": {
        "oldValue": "[application-SchedulerApplication, node-SchedulerNode, LOG-Log]",
        "newValue": "[application-SchedulerApplicationAttempt, node-SchedulerNode, LOG-Log]"
      }
    },
    "b4a5476d95271bf3df6eb19f5d6b4c65f816396d": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1333: Add missing file SchedulerAppUtils\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1535900 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/10/13 5:31 PM",
      "commitName": "b4a5476d95271bf3df6eb19f5d6b4c65f816396d",
      "commitAuthor": "Sanford Ryza",
      "diff": "@@ -0,0 +1,22 @@\n+  public static  boolean isBlacklisted(SchedulerApplication application,\n+      SchedulerNode node, Log LOG) {\n+    if (application.isBlacklisted(node.getNodeName())) {\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"Skipping \u0027host\u0027 \" + node.getNodeName() +\n+            \" for \" + application.getApplicationId() +\n+            \" since it has been blacklisted\");\n+      }\n+      return true;\n+    }\n+\n+    if (application.isBlacklisted(node.getRackName())) {\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"Skipping \u0027rack\u0027 \" + node.getRackName() +\n+            \" for \" + application.getApplicationId() +\n+            \" since it has been blacklisted\");\n+      }\n+      return true;\n+    }\n+\n+    return false;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static  boolean isBlacklisted(SchedulerApplication application,\n      SchedulerNode node, Log LOG) {\n    if (application.isBlacklisted(node.getNodeName())) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Skipping \u0027host\u0027 \" + node.getNodeName() +\n            \" for \" + application.getApplicationId() +\n            \" since it has been blacklisted\");\n      }\n      return true;\n    }\n\n    if (application.isBlacklisted(node.getRackName())) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Skipping \u0027rack\u0027 \" + node.getRackName() +\n            \" for \" + application.getApplicationId() +\n            \" since it has been blacklisted\");\n      }\n      return true;\n    }\n\n    return false;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerAppUtils.java"
    }
  }
}