{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ZKRMStateStore.java",
  "functionName": "storeRMDTMasterKeyState",
  "functionId": "storeRMDTMasterKeyState___delegationKey-DelegationKey",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
  "functionStartLine": 1125,
  "functionEndLine": 1136,
  "numCommitsSeen": 77,
  "timeTaken": 3468,
  "changeHistory": [
    "2064ca015d1584263aac0cc20c60b925a3aff612",
    "4249172e1419acdb2b69ae3db43dc59da2aa2e03",
    "14a696f369f7e3802587f57c8fff3aa51b5ab576",
    "960b8f19ca98dbcfdd30f2f1f275b8718d2e872f",
    "93907baa0b033c1431dc7055116746fc9db508cc",
    "8628c1704b7d8c1a0ac01cea679c03245d11d330"
  ],
  "changeHistoryShort": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": "Ybodychange",
    "4249172e1419acdb2b69ae3db43dc59da2aa2e03": "Ybodychange",
    "14a696f369f7e3802587f57c8fff3aa51b5ab576": "Ybodychange",
    "960b8f19ca98dbcfdd30f2f1f275b8718d2e872f": "Ybodychange",
    "93907baa0b033c1431dc7055116746fc9db508cc": "Ybodychange",
    "8628c1704b7d8c1a0ac01cea679c03245d11d330": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9349.  Changed logging to use slf4j api.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "15/03/19 4:20 PM",
      "commitName": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "04/03/19 9:10 PM",
      "commitNameOld": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
      "commitAuthorOld": "Prabhu Joseph",
      "daysBetweenCommits": 10.76,
      "commitsBetweenForRepo": 108,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,12 @@\n   protected synchronized void storeRMDTMasterKeyState(\n       DelegationKey delegationKey) throws Exception {\n     String nodeCreatePath \u003d getNodePath(dtMasterKeysRootPath,\n         DELEGATION_KEY_PREFIX + delegationKey.getKeyId());\n-    if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"Storing RMDelegationKey_\" + delegationKey.getKeyId());\n-    }\n+    LOG.debug(\"Storing RMDelegationKey_{}\", delegationKey.getKeyId());\n     ByteArrayOutputStream os \u003d new ByteArrayOutputStream();\n     try(DataOutputStream fsOut \u003d new DataOutputStream(os)) {\n       delegationKey.write(fsOut);\n       zkManager.safeCreate(nodeCreatePath, os.toByteArray(), zkAcl,\n           CreateMode.PERSISTENT, zkAcl, fencingNodePath);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected synchronized void storeRMDTMasterKeyState(\n      DelegationKey delegationKey) throws Exception {\n    String nodeCreatePath \u003d getNodePath(dtMasterKeysRootPath,\n        DELEGATION_KEY_PREFIX + delegationKey.getKeyId());\n    LOG.debug(\"Storing RMDelegationKey_{}\", delegationKey.getKeyId());\n    ByteArrayOutputStream os \u003d new ByteArrayOutputStream();\n    try(DataOutputStream fsOut \u003d new DataOutputStream(os)) {\n      delegationKey.write(fsOut);\n      zkManager.safeCreate(nodeCreatePath, os.toByteArray(), zkAcl,\n          CreateMode.PERSISTENT, zkAcl, fencingNodePath);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "4249172e1419acdb2b69ae3db43dc59da2aa2e03": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7053. Move curator transaction support to ZKCuratorManager. (Jonathan Hung via Subru).\n",
      "commitDate": "22/08/17 7:20 PM",
      "commitName": "4249172e1419acdb2b69ae3db43dc59da2aa2e03",
      "commitAuthor": "Subru Krishnan",
      "commitDateOld": "15/08/17 4:53 PM",
      "commitNameOld": "75dd866bfb8b63cb9f13179d4365b05c48e0907d",
      "commitAuthorOld": "Subru Krishnan",
      "daysBetweenCommits": 7.1,
      "commitsBetweenForRepo": 34,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n   protected synchronized void storeRMDTMasterKeyState(\n       DelegationKey delegationKey) throws Exception {\n     String nodeCreatePath \u003d getNodePath(dtMasterKeysRootPath,\n         DELEGATION_KEY_PREFIX + delegationKey.getKeyId());\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Storing RMDelegationKey_\" + delegationKey.getKeyId());\n     }\n     ByteArrayOutputStream os \u003d new ByteArrayOutputStream();\n     try(DataOutputStream fsOut \u003d new DataOutputStream(os)) {\n       delegationKey.write(fsOut);\n-      safeCreate(nodeCreatePath, os.toByteArray(), zkAcl,\n-          CreateMode.PERSISTENT);\n+      zkManager.safeCreate(nodeCreatePath, os.toByteArray(), zkAcl,\n+          CreateMode.PERSISTENT, zkAcl, fencingNodePath);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected synchronized void storeRMDTMasterKeyState(\n      DelegationKey delegationKey) throws Exception {\n    String nodeCreatePath \u003d getNodePath(dtMasterKeysRootPath,\n        DELEGATION_KEY_PREFIX + delegationKey.getKeyId());\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Storing RMDelegationKey_\" + delegationKey.getKeyId());\n    }\n    ByteArrayOutputStream os \u003d new ByteArrayOutputStream();\n    try(DataOutputStream fsOut \u003d new DataOutputStream(os)) {\n      delegationKey.write(fsOut);\n      zkManager.safeCreate(nodeCreatePath, os.toByteArray(), zkAcl,\n          CreateMode.PERSISTENT, zkAcl, fencingNodePath);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "14a696f369f7e3802587f57c8fff3aa51b5ab576": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5663. Small refactor in ZKRMStateStore. Contributed by Oleksii Dymytrov.\n",
      "commitDate": "25/09/16 11:00 PM",
      "commitName": "14a696f369f7e3802587f57c8fff3aa51b5ab576",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "14/06/16 3:06 PM",
      "commitNameOld": "c77a1095dc556e8bea87df6d8ddf36e898f27e86",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 103.33,
      "commitsBetweenForRepo": 782,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,15 @@\n   protected synchronized void storeRMDTMasterKeyState(\n       DelegationKey delegationKey) throws Exception {\n     String nodeCreatePath \u003d\n         getNodePath(dtMasterKeysRootPath, DELEGATION_KEY_PREFIX\n             + delegationKey.getKeyId());\n-    ByteArrayOutputStream os \u003d new ByteArrayOutputStream();\n-    DataOutputStream fsOut \u003d new DataOutputStream(os);\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Storing RMDelegationKey_\" + delegationKey.getKeyId());\n     }\n-    delegationKey.write(fsOut);\n-    try {\n+    ByteArrayOutputStream os \u003d new ByteArrayOutputStream();\n+    try(DataOutputStream fsOut \u003d new DataOutputStream(os)) {\n+      delegationKey.write(fsOut);\n       safeCreate(nodeCreatePath, os.toByteArray(), zkAcl,\n           CreateMode.PERSISTENT);\n-    } finally {\n-      os.close();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected synchronized void storeRMDTMasterKeyState(\n      DelegationKey delegationKey) throws Exception {\n    String nodeCreatePath \u003d\n        getNodePath(dtMasterKeysRootPath, DELEGATION_KEY_PREFIX\n            + delegationKey.getKeyId());\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Storing RMDelegationKey_\" + delegationKey.getKeyId());\n    }\n    ByteArrayOutputStream os \u003d new ByteArrayOutputStream();\n    try(DataOutputStream fsOut \u003d new DataOutputStream(os)) {\n      delegationKey.write(fsOut);\n      safeCreate(nodeCreatePath, os.toByteArray(), zkAcl,\n          CreateMode.PERSISTENT);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "960b8f19ca98dbcfdd30f2f1f275b8718d2e872f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2716. Refactor ZKRMStateStore retry code with Apache Curator. Contributed by Karthik Kambatla\n",
      "commitDate": "08/06/15 2:50 PM",
      "commitName": "960b8f19ca98dbcfdd30f2f1f275b8718d2e872f",
      "commitAuthor": "Jian He",
      "commitDateOld": "08/05/15 3:12 PM",
      "commitNameOld": "d0b73287c26983f32b0efe01862150e9fd28086f",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 30.99,
      "commitsBetweenForRepo": 257,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   protected synchronized void storeRMDTMasterKeyState(\n       DelegationKey delegationKey) throws Exception {\n     String nodeCreatePath \u003d\n         getNodePath(dtMasterKeysRootPath, DELEGATION_KEY_PREFIX\n             + delegationKey.getKeyId());\n     ByteArrayOutputStream os \u003d new ByteArrayOutputStream();\n     DataOutputStream fsOut \u003d new DataOutputStream(os);\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Storing RMDelegationKey_\" + delegationKey.getKeyId());\n     }\n     delegationKey.write(fsOut);\n     try {\n-      createWithRetries(nodeCreatePath, os.toByteArray(), zkAcl,\n+      safeCreate(nodeCreatePath, os.toByteArray(), zkAcl,\n           CreateMode.PERSISTENT);\n     } finally {\n       os.close();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected synchronized void storeRMDTMasterKeyState(\n      DelegationKey delegationKey) throws Exception {\n    String nodeCreatePath \u003d\n        getNodePath(dtMasterKeysRootPath, DELEGATION_KEY_PREFIX\n            + delegationKey.getKeyId());\n    ByteArrayOutputStream os \u003d new ByteArrayOutputStream();\n    DataOutputStream fsOut \u003d new DataOutputStream(os);\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Storing RMDelegationKey_\" + delegationKey.getKeyId());\n    }\n    delegationKey.write(fsOut);\n    try {\n      safeCreate(nodeCreatePath, os.toByteArray(), zkAcl,\n          CreateMode.PERSISTENT);\n    } finally {\n      os.close();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "93907baa0b033c1431dc7055116746fc9db508cc": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1307. Redesign znode structure for Zookeeper based RM state-store for better organization and scalability. Contributed by Tsuyoshi OZAWA.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1552209 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/12/13 6:33 PM",
      "commitName": "93907baa0b033c1431dc7055116746fc9db508cc",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "07/12/13 8:17 PM",
      "commitNameOld": "305ae48136d6e201de4451e824cb7b84f94ba2e0",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 10.93,
      "commitsBetweenForRepo": 69,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   protected synchronized void storeRMDTMasterKeyState(\n       DelegationKey delegationKey) throws Exception {\n     String nodeCreatePath \u003d\n-        getNodePath(rmDTSecretManagerRoot, DELEGATION_KEY_PREFIX\n+        getNodePath(dtMasterKeysRootPath, DELEGATION_KEY_PREFIX\n             + delegationKey.getKeyId());\n     ByteArrayOutputStream os \u003d new ByteArrayOutputStream();\n     DataOutputStream fsOut \u003d new DataOutputStream(os);\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Storing RMDelegationKey_\" + delegationKey.getKeyId());\n     }\n     delegationKey.write(fsOut);\n     try {\n       createWithRetries(nodeCreatePath, os.toByteArray(), zkAcl,\n           CreateMode.PERSISTENT);\n     } finally {\n       os.close();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected synchronized void storeRMDTMasterKeyState(\n      DelegationKey delegationKey) throws Exception {\n    String nodeCreatePath \u003d\n        getNodePath(dtMasterKeysRootPath, DELEGATION_KEY_PREFIX\n            + delegationKey.getKeyId());\n    ByteArrayOutputStream os \u003d new ByteArrayOutputStream();\n    DataOutputStream fsOut \u003d new DataOutputStream(os);\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Storing RMDelegationKey_\" + delegationKey.getKeyId());\n    }\n    delegationKey.write(fsOut);\n    try {\n      createWithRetries(nodeCreatePath, os.toByteArray(), zkAcl,\n          CreateMode.PERSISTENT);\n    } finally {\n      os.close();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "8628c1704b7d8c1a0ac01cea679c03245d11d330": {
      "type": "Yintroduced",
      "commitMessage": "YARN-353. Add Zookeeper-based store implementation for RMStateStore. Contributed by Bikas Saha, Jian He and Karthik Kambatla.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1524829 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/09/13 1:39 PM",
      "commitName": "8628c1704b7d8c1a0ac01cea679c03245d11d330",
      "commitAuthor": "Hitesh Shah",
      "diff": "@@ -0,0 +1,18 @@\n+  protected synchronized void storeRMDTMasterKeyState(\n+      DelegationKey delegationKey) throws Exception {\n+    String nodeCreatePath \u003d\n+        getNodePath(rmDTSecretManagerRoot, DELEGATION_KEY_PREFIX\n+            + delegationKey.getKeyId());\n+    ByteArrayOutputStream os \u003d new ByteArrayOutputStream();\n+    DataOutputStream fsOut \u003d new DataOutputStream(os);\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"Storing RMDelegationKey_\" + delegationKey.getKeyId());\n+    }\n+    delegationKey.write(fsOut);\n+    try {\n+      createWithRetries(nodeCreatePath, os.toByteArray(), zkAcl,\n+          CreateMode.PERSISTENT);\n+    } finally {\n+      os.close();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected synchronized void storeRMDTMasterKeyState(\n      DelegationKey delegationKey) throws Exception {\n    String nodeCreatePath \u003d\n        getNodePath(rmDTSecretManagerRoot, DELEGATION_KEY_PREFIX\n            + delegationKey.getKeyId());\n    ByteArrayOutputStream os \u003d new ByteArrayOutputStream();\n    DataOutputStream fsOut \u003d new DataOutputStream(os);\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Storing RMDelegationKey_\" + delegationKey.getKeyId());\n    }\n    delegationKey.write(fsOut);\n    try {\n      createWithRetries(nodeCreatePath, os.toByteArray(), zkAcl,\n          CreateMode.PERSISTENT);\n    } finally {\n      os.close();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java"
    }
  }
}