{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NameNode.java",
  "functionName": "reconfHeartbeatRecheckInterval",
  "functionId": "reconfHeartbeatRecheckInterval___datanodeManager-DatanodeManager(modifiers-final)__property-String(modifiers-final)__newVal-String(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNode.java",
  "functionStartLine": 2273,
  "functionEndLine": 2295,
  "numCommitsSeen": 210,
  "timeTaken": 2102,
  "changeHistory": [
    "b4be288c5d6801988f555a566c2eb793c88a15a4"
  ],
  "changeHistoryShort": {
    "b4be288c5d6801988f555a566c2eb793c88a15a4": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b4be288c5d6801988f555a566c2eb793c88a15a4": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-10207. Support enable Hadoop IPC backoff without namenode restart. Contributed by Xiaobing Zhou.\n",
      "commitDate": "21/04/16 10:18 AM",
      "commitName": "b4be288c5d6801988f555a566c2eb793c88a15a4",
      "commitAuthor": "Xiaoyu Yao",
      "diff": "@@ -0,0 +1,23 @@\n+  private String reconfHeartbeatRecheckInterval(\n+      final DatanodeManager datanodeManager, final String property,\n+      final String newVal) throws ReconfigurationException {\n+    namesystem.writeLock();\n+    try {\n+      if (newVal \u003d\u003d null) {\n+        // set to default\n+        datanodeManager.setHeartbeatRecheckInterval(\n+            DFS_NAMENODE_HEARTBEAT_RECHECK_INTERVAL_DEFAULT);\n+        return String.valueOf(DFS_NAMENODE_HEARTBEAT_RECHECK_INTERVAL_DEFAULT);\n+      } else {\n+        datanodeManager.setHeartbeatRecheckInterval(Integer.parseInt(newVal));\n+        return String.valueOf(datanodeManager.getHeartbeatRecheckInterval());\n+      }\n+    } catch (NumberFormatException nfe) {\n+      throw new ReconfigurationException(property, newVal, getConf().get(\n+          property), nfe);\n+    } finally {\n+      namesystem.writeUnlock();\n+      LOG.info(\"RECONFIGURE* changed heartbeatRecheckInterval to \"\n+          + datanodeManager.getHeartbeatRecheckInterval());\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private String reconfHeartbeatRecheckInterval(\n      final DatanodeManager datanodeManager, final String property,\n      final String newVal) throws ReconfigurationException {\n    namesystem.writeLock();\n    try {\n      if (newVal \u003d\u003d null) {\n        // set to default\n        datanodeManager.setHeartbeatRecheckInterval(\n            DFS_NAMENODE_HEARTBEAT_RECHECK_INTERVAL_DEFAULT);\n        return String.valueOf(DFS_NAMENODE_HEARTBEAT_RECHECK_INTERVAL_DEFAULT);\n      } else {\n        datanodeManager.setHeartbeatRecheckInterval(Integer.parseInt(newVal));\n        return String.valueOf(datanodeManager.getHeartbeatRecheckInterval());\n      }\n    } catch (NumberFormatException nfe) {\n      throw new ReconfigurationException(property, newVal, getConf().get(\n          property), nfe);\n    } finally {\n      namesystem.writeUnlock();\n      LOG.info(\"RECONFIGURE* changed heartbeatRecheckInterval to \"\n          + datanodeManager.getHeartbeatRecheckInterval());\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NameNode.java"
    }
  }
}