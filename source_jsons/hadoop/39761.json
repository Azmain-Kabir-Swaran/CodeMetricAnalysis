{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "UsersManager.java",
  "functionName": "getUsersInfo",
  "functionId": "getUsersInfo",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/UsersManager.java",
  "functionStartLine": 450,
  "functionEndLine": 468,
  "numCommitsSeen": 147,
  "timeTaken": 8043,
  "changeHistory": [
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
    "ca13b224b2feb9c44de861da9cbba8dd2a12cb35",
    "5fb723bb77722d41df6959eee23e1b0cfeb5584e",
    "2b66d9ec5bdaec7e6b278926fbb6f222c4e3afaa",
    "4337b263aa23464a01c316336db2319e2858a2b3",
    "76ec26de8099dc48ce3812c595b7ab857a600442",
    "658097d6da1b1aac8e01db459f0c3b456e99652f",
    "86358221fc85a7743052a0b4c1647353508bf308",
    "666667464ad773449cd76b567312495577b3214d"
  ],
  "changeHistoryShort": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": "Ybodychange",
    "ca13b224b2feb9c44de861da9cbba8dd2a12cb35": "Ybodychange",
    "5fb723bb77722d41df6959eee23e1b0cfeb5584e": "Ymultichange(Ymovefromfile,Ybodychange,Yrename)",
    "2b66d9ec5bdaec7e6b278926fbb6f222c4e3afaa": "Ymultichange(Ymodifierchange,Ybodychange)",
    "4337b263aa23464a01c316336db2319e2858a2b3": "Ybodychange",
    "76ec26de8099dc48ce3812c595b7ab857a600442": "Ybodychange",
    "658097d6da1b1aac8e01db459f0c3b456e99652f": "Ybodychange",
    "86358221fc85a7743052a0b4c1647353508bf308": "Ybodychange",
    "666667464ad773449cd76b567312495577b3214d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9341.  Fixed enentrant lock usage in YARN project.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "07/03/19 1:47 PM",
      "commitName": "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "04/03/19 9:10 PM",
      "commitNameOld": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
      "commitAuthorOld": "Prabhu Joseph",
      "daysBetweenCommits": 2.69,
      "commitsBetweenForRepo": 39,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n   public ArrayList\u003cUserInfo\u003e getUsersInfo() {\n+    readLock.lock();\n     try {\n-      readLock.lock();\n       ArrayList\u003cUserInfo\u003e usersToReturn \u003d new ArrayList\u003cUserInfo\u003e();\n       for (Map.Entry\u003cString, User\u003e entry : getUsers().entrySet()) {\n         User user \u003d entry.getValue();\n         usersToReturn.add(\n             new UserInfo(entry.getKey(), Resources.clone(user.getAllUsed()),\n                 user.getActiveApplications(), user.getPendingApplications(),\n                 Resources.clone(user.getConsumedAMResources()),\n                 Resources.clone(user.getUserResourceLimit()),\n                 user.getResourceUsage(), user.getWeight(),\n                 activeUsersSet.contains(user.userName)));\n       }\n       return usersToReturn;\n     } finally {\n       readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ArrayList\u003cUserInfo\u003e getUsersInfo() {\n    readLock.lock();\n    try {\n      ArrayList\u003cUserInfo\u003e usersToReturn \u003d new ArrayList\u003cUserInfo\u003e();\n      for (Map.Entry\u003cString, User\u003e entry : getUsers().entrySet()) {\n        User user \u003d entry.getValue();\n        usersToReturn.add(\n            new UserInfo(entry.getKey(), Resources.clone(user.getAllUsed()),\n                user.getActiveApplications(), user.getPendingApplications(),\n                Resources.clone(user.getConsumedAMResources()),\n                Resources.clone(user.getUserResourceLimit()),\n                user.getResourceUsage(), user.getWeight(),\n                activeUsersSet.contains(user.userName)));\n      }\n      return usersToReturn;\n    } finally {\n      readLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/UsersManager.java",
      "extendedDetails": {}
    },
    "ca13b224b2feb9c44de861da9cbba8dd2a12cb35": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5892. Support user-specific minimum user limit percentage in Capacity Scheduler. Contributed by Eric Payne.\n",
      "commitDate": "22/06/17 11:50 PM",
      "commitName": "ca13b224b2feb9c44de861da9cbba8dd2a12cb35",
      "commitAuthor": "Sunil G",
      "commitDateOld": "22/05/17 2:26 PM",
      "commitNameOld": "c583ab02c730be0a63d974039a78f2dc67dc2db6",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 31.39,
      "commitsBetweenForRepo": 156,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,19 @@\n   public ArrayList\u003cUserInfo\u003e getUsersInfo() {\n     try {\n       readLock.lock();\n       ArrayList\u003cUserInfo\u003e usersToReturn \u003d new ArrayList\u003cUserInfo\u003e();\n       for (Map.Entry\u003cString, User\u003e entry : getUsers().entrySet()) {\n         User user \u003d entry.getValue();\n         usersToReturn.add(\n             new UserInfo(entry.getKey(), Resources.clone(user.getAllUsed()),\n                 user.getActiveApplications(), user.getPendingApplications(),\n                 Resources.clone(user.getConsumedAMResources()),\n                 Resources.clone(user.getUserResourceLimit()),\n-                user.getResourceUsage()));\n+                user.getResourceUsage(), user.getWeight(),\n+                activeUsersSet.contains(user.userName)));\n       }\n       return usersToReturn;\n     } finally {\n       readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ArrayList\u003cUserInfo\u003e getUsersInfo() {\n    try {\n      readLock.lock();\n      ArrayList\u003cUserInfo\u003e usersToReturn \u003d new ArrayList\u003cUserInfo\u003e();\n      for (Map.Entry\u003cString, User\u003e entry : getUsers().entrySet()) {\n        User user \u003d entry.getValue();\n        usersToReturn.add(\n            new UserInfo(entry.getKey(), Resources.clone(user.getAllUsed()),\n                user.getActiveApplications(), user.getPendingApplications(),\n                Resources.clone(user.getConsumedAMResources()),\n                Resources.clone(user.getUserResourceLimit()),\n                user.getResourceUsage(), user.getWeight(),\n                activeUsersSet.contains(user.userName)));\n      }\n      return usersToReturn;\n    } finally {\n      readLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/UsersManager.java",
      "extendedDetails": {}
    },
    "5fb723bb77722d41df6959eee23e1b0cfeb5584e": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange,Yrename)",
      "commitMessage": "YARN-5889. Improve and refactor user-limit calculation in Capacity Scheduler. (Sunil G via wangda)\n",
      "commitDate": "09/02/17 10:23 AM",
      "commitName": "5fb723bb77722d41df6959eee23e1b0cfeb5584e",
      "commitAuthor": "Wangda Tan",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-5889. Improve and refactor user-limit calculation in Capacity Scheduler. (Sunil G via wangda)\n",
          "commitDate": "09/02/17 10:23 AM",
          "commitName": "5fb723bb77722d41df6959eee23e1b0cfeb5584e",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "09/02/17 8:47 AM",
          "commitNameOld": "b6bb99c18a772d2179d5cc6757cddf141e8d39c0",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 0.07,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,18 @@\n-  public ArrayList\u003cUserInfo\u003e getUsers() {\n+  public ArrayList\u003cUserInfo\u003e getUsersInfo() {\n     try {\n       readLock.lock();\n       ArrayList\u003cUserInfo\u003e usersToReturn \u003d new ArrayList\u003cUserInfo\u003e();\n-      for (Map.Entry\u003cString, User\u003e entry : users.entrySet()) {\n+      for (Map.Entry\u003cString, User\u003e entry : getUsers().entrySet()) {\n         User user \u003d entry.getValue();\n         usersToReturn.add(\n             new UserInfo(entry.getKey(), Resources.clone(user.getAllUsed()),\n                 user.getActiveApplications(), user.getPendingApplications(),\n                 Resources.clone(user.getConsumedAMResources()),\n                 Resources.clone(user.getUserResourceLimit()),\n                 user.getResourceUsage()));\n       }\n       return usersToReturn;\n     } finally {\n       readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public ArrayList\u003cUserInfo\u003e getUsersInfo() {\n    try {\n      readLock.lock();\n      ArrayList\u003cUserInfo\u003e usersToReturn \u003d new ArrayList\u003cUserInfo\u003e();\n      for (Map.Entry\u003cString, User\u003e entry : getUsers().entrySet()) {\n        User user \u003d entry.getValue();\n        usersToReturn.add(\n            new UserInfo(entry.getKey(), Resources.clone(user.getAllUsed()),\n                user.getActiveApplications(), user.getPendingApplications(),\n                Resources.clone(user.getConsumedAMResources()),\n                Resources.clone(user.getUserResourceLimit()),\n                user.getResourceUsage()));\n      }\n      return usersToReturn;\n    } finally {\n      readLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/UsersManager.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/UsersManager.java",
            "oldMethodName": "getUsers",
            "newMethodName": "getUsersInfo"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-5889. Improve and refactor user-limit calculation in Capacity Scheduler. (Sunil G via wangda)\n",
          "commitDate": "09/02/17 10:23 AM",
          "commitName": "5fb723bb77722d41df6959eee23e1b0cfeb5584e",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "09/02/17 8:47 AM",
          "commitNameOld": "b6bb99c18a772d2179d5cc6757cddf141e8d39c0",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 0.07,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,18 @@\n-  public ArrayList\u003cUserInfo\u003e getUsers() {\n+  public ArrayList\u003cUserInfo\u003e getUsersInfo() {\n     try {\n       readLock.lock();\n       ArrayList\u003cUserInfo\u003e usersToReturn \u003d new ArrayList\u003cUserInfo\u003e();\n-      for (Map.Entry\u003cString, User\u003e entry : users.entrySet()) {\n+      for (Map.Entry\u003cString, User\u003e entry : getUsers().entrySet()) {\n         User user \u003d entry.getValue();\n         usersToReturn.add(\n             new UserInfo(entry.getKey(), Resources.clone(user.getAllUsed()),\n                 user.getActiveApplications(), user.getPendingApplications(),\n                 Resources.clone(user.getConsumedAMResources()),\n                 Resources.clone(user.getUserResourceLimit()),\n                 user.getResourceUsage()));\n       }\n       return usersToReturn;\n     } finally {\n       readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public ArrayList\u003cUserInfo\u003e getUsersInfo() {\n    try {\n      readLock.lock();\n      ArrayList\u003cUserInfo\u003e usersToReturn \u003d new ArrayList\u003cUserInfo\u003e();\n      for (Map.Entry\u003cString, User\u003e entry : getUsers().entrySet()) {\n        User user \u003d entry.getValue();\n        usersToReturn.add(\n            new UserInfo(entry.getKey(), Resources.clone(user.getAllUsed()),\n                user.getActiveApplications(), user.getPendingApplications(),\n                Resources.clone(user.getConsumedAMResources()),\n                Resources.clone(user.getUserResourceLimit()),\n                user.getResourceUsage()));\n      }\n      return usersToReturn;\n    } finally {\n      readLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/UsersManager.java",
          "extendedDetails": {}
        },
        {
          "type": "Yrename",
          "commitMessage": "YARN-5889. Improve and refactor user-limit calculation in Capacity Scheduler. (Sunil G via wangda)\n",
          "commitDate": "09/02/17 10:23 AM",
          "commitName": "5fb723bb77722d41df6959eee23e1b0cfeb5584e",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "09/02/17 8:47 AM",
          "commitNameOld": "b6bb99c18a772d2179d5cc6757cddf141e8d39c0",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 0.07,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,18 @@\n-  public ArrayList\u003cUserInfo\u003e getUsers() {\n+  public ArrayList\u003cUserInfo\u003e getUsersInfo() {\n     try {\n       readLock.lock();\n       ArrayList\u003cUserInfo\u003e usersToReturn \u003d new ArrayList\u003cUserInfo\u003e();\n-      for (Map.Entry\u003cString, User\u003e entry : users.entrySet()) {\n+      for (Map.Entry\u003cString, User\u003e entry : getUsers().entrySet()) {\n         User user \u003d entry.getValue();\n         usersToReturn.add(\n             new UserInfo(entry.getKey(), Resources.clone(user.getAllUsed()),\n                 user.getActiveApplications(), user.getPendingApplications(),\n                 Resources.clone(user.getConsumedAMResources()),\n                 Resources.clone(user.getUserResourceLimit()),\n                 user.getResourceUsage()));\n       }\n       return usersToReturn;\n     } finally {\n       readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public ArrayList\u003cUserInfo\u003e getUsersInfo() {\n    try {\n      readLock.lock();\n      ArrayList\u003cUserInfo\u003e usersToReturn \u003d new ArrayList\u003cUserInfo\u003e();\n      for (Map.Entry\u003cString, User\u003e entry : getUsers().entrySet()) {\n        User user \u003d entry.getValue();\n        usersToReturn.add(\n            new UserInfo(entry.getKey(), Resources.clone(user.getAllUsed()),\n                user.getActiveApplications(), user.getPendingApplications(),\n                Resources.clone(user.getConsumedAMResources()),\n                Resources.clone(user.getUserResourceLimit()),\n                user.getResourceUsage()));\n      }\n      return usersToReturn;\n    } finally {\n      readLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/UsersManager.java",
          "extendedDetails": {
            "oldValue": "getUsers",
            "newValue": "getUsersInfo"
          }
        }
      ]
    },
    "2b66d9ec5bdaec7e6b278926fbb6f222c4e3afaa": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-3140. Improve locks in AbstractCSQueue/LeafQueue/ParentQueue. Contributed by Wangda Tan\n",
      "commitDate": "20/09/16 12:03 AM",
      "commitName": "2b66d9ec5bdaec7e6b278926fbb6f222c4e3afaa",
      "commitAuthor": "Jian He",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-3140. Improve locks in AbstractCSQueue/LeafQueue/ParentQueue. Contributed by Wangda Tan\n",
          "commitDate": "20/09/16 12:03 AM",
          "commitName": "2b66d9ec5bdaec7e6b278926fbb6f222c4e3afaa",
          "commitAuthor": "Jian He",
          "commitDateOld": "16/09/16 10:05 PM",
          "commitNameOld": "4174b9756c8c7877797545c4356b1f40df603ec5",
          "commitAuthorOld": "Naganarasimha",
          "daysBetweenCommits": 3.08,
          "commitsBetweenForRepo": 11,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,18 @@\n-  public synchronized ArrayList\u003cUserInfo\u003e getUsers() {\n-    ArrayList\u003cUserInfo\u003e usersToReturn \u003d new ArrayList\u003cUserInfo\u003e();\n-    for (Map.Entry\u003cString, User\u003e entry : users.entrySet()) {\n-      User user \u003d entry.getValue();\n-      usersToReturn.add(new UserInfo(entry.getKey(), Resources.clone(user\n-          .getAllUsed()), user.getActiveApplications(), user\n-          .getPendingApplications(), Resources.clone(user\n-          .getConsumedAMResources()), Resources.clone(user\n-          .getUserResourceLimit()), user.getResourceUsage()));\n+  public ArrayList\u003cUserInfo\u003e getUsers() {\n+    try {\n+      readLock.lock();\n+      ArrayList\u003cUserInfo\u003e usersToReturn \u003d new ArrayList\u003cUserInfo\u003e();\n+      for (Map.Entry\u003cString, User\u003e entry : users.entrySet()) {\n+        User user \u003d entry.getValue();\n+        usersToReturn.add(\n+            new UserInfo(entry.getKey(), Resources.clone(user.getAllUsed()),\n+                user.getActiveApplications(), user.getPendingApplications(),\n+                Resources.clone(user.getConsumedAMResources()),\n+                Resources.clone(user.getUserResourceLimit()),\n+                user.getResourceUsage()));\n+      }\n+      return usersToReturn;\n+    } finally {\n+      readLock.unlock();\n     }\n-    return usersToReturn;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public ArrayList\u003cUserInfo\u003e getUsers() {\n    try {\n      readLock.lock();\n      ArrayList\u003cUserInfo\u003e usersToReturn \u003d new ArrayList\u003cUserInfo\u003e();\n      for (Map.Entry\u003cString, User\u003e entry : users.entrySet()) {\n        User user \u003d entry.getValue();\n        usersToReturn.add(\n            new UserInfo(entry.getKey(), Resources.clone(user.getAllUsed()),\n                user.getActiveApplications(), user.getPendingApplications(),\n                Resources.clone(user.getConsumedAMResources()),\n                Resources.clone(user.getUserResourceLimit()),\n                user.getResourceUsage()));\n      }\n      return usersToReturn;\n    } finally {\n      readLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
          "extendedDetails": {
            "oldValue": "[public, synchronized]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3140. Improve locks in AbstractCSQueue/LeafQueue/ParentQueue. Contributed by Wangda Tan\n",
          "commitDate": "20/09/16 12:03 AM",
          "commitName": "2b66d9ec5bdaec7e6b278926fbb6f222c4e3afaa",
          "commitAuthor": "Jian He",
          "commitDateOld": "16/09/16 10:05 PM",
          "commitNameOld": "4174b9756c8c7877797545c4356b1f40df603ec5",
          "commitAuthorOld": "Naganarasimha",
          "daysBetweenCommits": 3.08,
          "commitsBetweenForRepo": 11,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,18 @@\n-  public synchronized ArrayList\u003cUserInfo\u003e getUsers() {\n-    ArrayList\u003cUserInfo\u003e usersToReturn \u003d new ArrayList\u003cUserInfo\u003e();\n-    for (Map.Entry\u003cString, User\u003e entry : users.entrySet()) {\n-      User user \u003d entry.getValue();\n-      usersToReturn.add(new UserInfo(entry.getKey(), Resources.clone(user\n-          .getAllUsed()), user.getActiveApplications(), user\n-          .getPendingApplications(), Resources.clone(user\n-          .getConsumedAMResources()), Resources.clone(user\n-          .getUserResourceLimit()), user.getResourceUsage()));\n+  public ArrayList\u003cUserInfo\u003e getUsers() {\n+    try {\n+      readLock.lock();\n+      ArrayList\u003cUserInfo\u003e usersToReturn \u003d new ArrayList\u003cUserInfo\u003e();\n+      for (Map.Entry\u003cString, User\u003e entry : users.entrySet()) {\n+        User user \u003d entry.getValue();\n+        usersToReturn.add(\n+            new UserInfo(entry.getKey(), Resources.clone(user.getAllUsed()),\n+                user.getActiveApplications(), user.getPendingApplications(),\n+                Resources.clone(user.getConsumedAMResources()),\n+                Resources.clone(user.getUserResourceLimit()),\n+                user.getResourceUsage()));\n+      }\n+      return usersToReturn;\n+    } finally {\n+      readLock.unlock();\n     }\n-    return usersToReturn;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public ArrayList\u003cUserInfo\u003e getUsers() {\n    try {\n      readLock.lock();\n      ArrayList\u003cUserInfo\u003e usersToReturn \u003d new ArrayList\u003cUserInfo\u003e();\n      for (Map.Entry\u003cString, User\u003e entry : users.entrySet()) {\n        User user \u003d entry.getValue();\n        usersToReturn.add(\n            new UserInfo(entry.getKey(), Resources.clone(user.getAllUsed()),\n                user.getActiveApplications(), user.getPendingApplications(),\n                Resources.clone(user.getConsumedAMResources()),\n                Resources.clone(user.getUserResourceLimit()),\n                user.getResourceUsage()));\n      }\n      return usersToReturn;\n    } finally {\n      readLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
          "extendedDetails": {}
        }
      ]
    },
    "4337b263aa23464a01c316336db2319e2858a2b3": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4162. CapacityScheduler: Add resource usage by partition and queue capacity by partition to REST API. (Naganarasimha G R via wangda)\n",
      "commitDate": "16/10/15 3:06 PM",
      "commitName": "4337b263aa23464a01c316336db2319e2858a2b3",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "23/09/15 1:29 PM",
      "commitNameOld": "89cab1ba5f0671f8ef30dbe7432079c18362b434",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 23.07,
      "commitsBetweenForRepo": 181,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n   public synchronized ArrayList\u003cUserInfo\u003e getUsers() {\n     ArrayList\u003cUserInfo\u003e usersToReturn \u003d new ArrayList\u003cUserInfo\u003e();\n     for (Map.Entry\u003cString, User\u003e entry : users.entrySet()) {\n       User user \u003d entry.getValue();\n       usersToReturn.add(new UserInfo(entry.getKey(), Resources.clone(user\n           .getAllUsed()), user.getActiveApplications(), user\n           .getPendingApplications(), Resources.clone(user\n           .getConsumedAMResources()), Resources.clone(user\n-          .getUserResourceLimit())));\n+          .getUserResourceLimit()), user.getResourceUsage()));\n     }\n     return usersToReturn;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized ArrayList\u003cUserInfo\u003e getUsers() {\n    ArrayList\u003cUserInfo\u003e usersToReturn \u003d new ArrayList\u003cUserInfo\u003e();\n    for (Map.Entry\u003cString, User\u003e entry : users.entrySet()) {\n      User user \u003d entry.getValue();\n      usersToReturn.add(new UserInfo(entry.getKey(), Resources.clone(user\n          .getAllUsed()), user.getActiveApplications(), user\n          .getPendingApplications(), Resources.clone(user\n          .getConsumedAMResources()), Resources.clone(user\n          .getUserResourceLimit()), user.getResourceUsage()));\n    }\n    return usersToReturn;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {}
    },
    "76ec26de8099dc48ce3812c595b7ab857a600442": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3932. SchedulerApplicationAttempt#getResourceUsageReport and UserInfo should based on total-used-resources. (Bibin A Chundatt via wangda)\n",
      "commitDate": "22/07/15 11:54 AM",
      "commitName": "76ec26de8099dc48ce3812c595b7ab857a600442",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "21/07/15 9:57 AM",
      "commitNameOld": "c39ca541f498712133890961598bbff50d89d68b",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 1.08,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n   public synchronized ArrayList\u003cUserInfo\u003e getUsers() {\n     ArrayList\u003cUserInfo\u003e usersToReturn \u003d new ArrayList\u003cUserInfo\u003e();\n     for (Map.Entry\u003cString, User\u003e entry : users.entrySet()) {\n       User user \u003d entry.getValue();\n       usersToReturn.add(new UserInfo(entry.getKey(), Resources.clone(user\n-          .getUsed()), user.getActiveApplications(), user\n+          .getAllUsed()), user.getActiveApplications(), user\n           .getPendingApplications(), Resources.clone(user\n           .getConsumedAMResources()), Resources.clone(user\n           .getUserResourceLimit())));\n     }\n     return usersToReturn;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized ArrayList\u003cUserInfo\u003e getUsers() {\n    ArrayList\u003cUserInfo\u003e usersToReturn \u003d new ArrayList\u003cUserInfo\u003e();\n    for (Map.Entry\u003cString, User\u003e entry : users.entrySet()) {\n      User user \u003d entry.getValue();\n      usersToReturn.add(new UserInfo(entry.getKey(), Resources.clone(user\n          .getAllUsed()), user.getActiveApplications(), user\n          .getPendingApplications(), Resources.clone(user\n          .getConsumedAMResources()), Resources.clone(user\n          .getUserResourceLimit())));\n    }\n    return usersToReturn;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {}
    },
    "658097d6da1b1aac8e01db459f0c3b456e99652f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3273. Improve scheduler UI to facilitate scheduling analysis and debugging. Contributed Rohith Sharmaks\n",
      "commitDate": "17/03/15 9:30 PM",
      "commitName": "658097d6da1b1aac8e01db459f0c3b456e99652f",
      "commitAuthor": "Jian He",
      "commitDateOld": "17/03/15 10:24 AM",
      "commitNameOld": "487374b7fe0c92fc7eb1406c568952722b5d5b15",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 0.46,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,12 @@\n   public synchronized ArrayList\u003cUserInfo\u003e getUsers() {\n     ArrayList\u003cUserInfo\u003e usersToReturn \u003d new ArrayList\u003cUserInfo\u003e();\n-    for (Map.Entry\u003cString, User\u003e entry: users.entrySet()) {\n-      usersToReturn.add(new UserInfo(entry.getKey(), Resources.clone(\n-        entry.getValue().getUsed()), entry.getValue().getActiveApplications(),\n-        entry.getValue().getPendingApplications()));\n+    for (Map.Entry\u003cString, User\u003e entry : users.entrySet()) {\n+      User user \u003d entry.getValue();\n+      usersToReturn.add(new UserInfo(entry.getKey(), Resources.clone(user\n+          .getUsed()), user.getActiveApplications(), user\n+          .getPendingApplications(), Resources.clone(user\n+          .getConsumedAMResources()), Resources.clone(user\n+          .getUserResourceLimit())));\n     }\n     return usersToReturn;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized ArrayList\u003cUserInfo\u003e getUsers() {\n    ArrayList\u003cUserInfo\u003e usersToReturn \u003d new ArrayList\u003cUserInfo\u003e();\n    for (Map.Entry\u003cString, User\u003e entry : users.entrySet()) {\n      User user \u003d entry.getValue();\n      usersToReturn.add(new UserInfo(entry.getKey(), Resources.clone(user\n          .getUsed()), user.getActiveApplications(), user\n          .getPendingApplications(), Resources.clone(user\n          .getConsumedAMResources()), Resources.clone(user\n          .getUserResourceLimit())));\n    }\n    return usersToReturn;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {}
    },
    "86358221fc85a7743052a0b4c1647353508bf308": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3099. Capacity Scheduler LeafQueue/ParentQueue should use ResourceUsage to track used-resources-by-label. Contributed by Wangda Tan\n",
      "commitDate": "30/01/15 3:15 PM",
      "commitName": "86358221fc85a7743052a0b4c1647353508bf308",
      "commitAuthor": "Jian He",
      "commitDateOld": "27/01/15 3:36 PM",
      "commitNameOld": "18741adf97f4fda5f8743318b59c440928e51297",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 2.99,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n   public synchronized ArrayList\u003cUserInfo\u003e getUsers() {\n     ArrayList\u003cUserInfo\u003e usersToReturn \u003d new ArrayList\u003cUserInfo\u003e();\n     for (Map.Entry\u003cString, User\u003e entry: users.entrySet()) {\n       usersToReturn.add(new UserInfo(entry.getKey(), Resources.clone(\n-        entry.getValue().consumed), entry.getValue().getActiveApplications(),\n+        entry.getValue().getUsed()), entry.getValue().getActiveApplications(),\n         entry.getValue().getPendingApplications()));\n     }\n     return usersToReturn;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized ArrayList\u003cUserInfo\u003e getUsers() {\n    ArrayList\u003cUserInfo\u003e usersToReturn \u003d new ArrayList\u003cUserInfo\u003e();\n    for (Map.Entry\u003cString, User\u003e entry: users.entrySet()) {\n      usersToReturn.add(new UserInfo(entry.getKey(), Resources.clone(\n        entry.getValue().getUsed()), entry.getValue().getActiveApplications(),\n        entry.getValue().getPendingApplications()));\n    }\n    return usersToReturn;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {}
    },
    "666667464ad773449cd76b567312495577b3214d": {
      "type": "Yintroduced",
      "commitMessage": "YARN-249. Capacity Scheduler web page should show list of active users per queue like it used to (in 1.x) (Ravi Prakash via tgraves)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1445673 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/02/13 7:40 AM",
      "commitName": "666667464ad773449cd76b567312495577b3214d",
      "commitAuthor": "Thomas Graves",
      "diff": "@@ -0,0 +1,9 @@\n+  public synchronized ArrayList\u003cUserInfo\u003e getUsers() {\n+    ArrayList\u003cUserInfo\u003e usersToReturn \u003d new ArrayList\u003cUserInfo\u003e();\n+    for (Map.Entry\u003cString, User\u003e entry: users.entrySet()) {\n+      usersToReturn.add(new UserInfo(entry.getKey(), Resources.clone(\n+        entry.getValue().consumed), entry.getValue().getActiveApplications(),\n+        entry.getValue().getPendingApplications()));\n+    }\n+    return usersToReturn;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized ArrayList\u003cUserInfo\u003e getUsers() {\n    ArrayList\u003cUserInfo\u003e usersToReturn \u003d new ArrayList\u003cUserInfo\u003e();\n    for (Map.Entry\u003cString, User\u003e entry: users.entrySet()) {\n      usersToReturn.add(new UserInfo(entry.getKey(), Resources.clone(\n        entry.getValue().consumed), entry.getValue().getActiveApplications(),\n        entry.getValue().getPendingApplications()));\n    }\n    return usersToReturn;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java"
    }
  }
}