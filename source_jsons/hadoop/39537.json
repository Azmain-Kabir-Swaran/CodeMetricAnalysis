{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CSQueueUtils.java",
  "functionName": "loadCapacitiesByLabelsFromConf",
  "functionId": "loadCapacitiesByLabelsFromConf___queuePath-String__queueCapacities-QueueCapacities__csConf-CapacitySchedulerConfiguration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CSQueueUtils.java",
  "functionStartLine": 120,
  "functionEndLine": 144,
  "numCommitsSeen": 44,
  "timeTaken": 2989,
  "changeHistory": [
    "b38643c9a8dd2c53024ae830b9565a550d0ec39c",
    "56e4f6237ae8b1852e82b186e08db3934f79a9db",
    "f489a4ec969f3727d03c8e85d51af1018fc0b2a1",
    "18a594257e052e8f10a03e5594e6cc6901dc56be"
  ],
  "changeHistoryShort": {
    "b38643c9a8dd2c53024ae830b9565a550d0ec39c": "Ybodychange",
    "56e4f6237ae8b1852e82b186e08db3934f79a9db": "Ybodychange",
    "f489a4ec969f3727d03c8e85d51af1018fc0b2a1": "Ymultichange(Yparameterchange,Ybodychange)",
    "18a594257e052e8f10a03e5594e6cc6901dc56be": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b38643c9a8dd2c53024ae830b9565a550d0ec39c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7473. Implement Framework and policy for capacity management of auto created queues. (Suma Shivaprasad via wangda)\n\nChange-Id: Icca7805fe12f6f7fb335effff4b121b6f7f6337b\n",
      "commitDate": "08/12/17 3:10 PM",
      "commitName": "b38643c9a8dd2c53024ae830b9565a550d0ec39c",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "08/12/17 3:07 PM",
      "commitNameOld": "74665e3a7d7f05644d9a5abad5a3f2d47597d6c8",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n   private static void loadCapacitiesByLabelsFromConf(String queuePath,\n       QueueCapacities queueCapacities, CapacitySchedulerConfiguration csConf) {\n     queueCapacities.clearConfigurableFields();\n     Set\u003cString\u003e configuredNodelabels \u003d\n         csConf.getConfiguredNodeLabels(queuePath);\n \n     for (String label : configuredNodelabels) {\n       if (label.equals(CommonNodeLabelsManager.NO_LABEL)) {\n-        queueCapacities.setCapacity(CommonNodeLabelsManager.NO_LABEL,\n+        queueCapacities.setCapacity(label,\n             csConf.getNonLabeledQueueCapacity(queuePath) / 100);\n-        queueCapacities.setMaximumCapacity(CommonNodeLabelsManager.NO_LABEL,\n+        queueCapacities.setMaximumCapacity(label,\n             csConf.getNonLabeledQueueMaximumCapacity(queuePath) / 100);\n         queueCapacities.setMaxAMResourcePercentage(\n-            CommonNodeLabelsManager.NO_LABEL,\n+            label,\n             csConf.getMaximumAMResourcePercentPerPartition(queuePath, label));\n       } else {\n         queueCapacities.setCapacity(label,\n             csConf.getLabeledQueueCapacity(queuePath, label) / 100);\n         queueCapacities.setMaximumCapacity(label,\n             csConf.getLabeledQueueMaximumCapacity(queuePath, label) / 100);\n         queueCapacities.setMaxAMResourcePercentage(label,\n             csConf.getMaximumAMResourcePercentPerPartition(queuePath, label));\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void loadCapacitiesByLabelsFromConf(String queuePath,\n      QueueCapacities queueCapacities, CapacitySchedulerConfiguration csConf) {\n    queueCapacities.clearConfigurableFields();\n    Set\u003cString\u003e configuredNodelabels \u003d\n        csConf.getConfiguredNodeLabels(queuePath);\n\n    for (String label : configuredNodelabels) {\n      if (label.equals(CommonNodeLabelsManager.NO_LABEL)) {\n        queueCapacities.setCapacity(label,\n            csConf.getNonLabeledQueueCapacity(queuePath) / 100);\n        queueCapacities.setMaximumCapacity(label,\n            csConf.getNonLabeledQueueMaximumCapacity(queuePath) / 100);\n        queueCapacities.setMaxAMResourcePercentage(\n            label,\n            csConf.getMaximumAMResourcePercentPerPartition(queuePath, label));\n      } else {\n        queueCapacities.setCapacity(label,\n            csConf.getLabeledQueueCapacity(queuePath, label) / 100);\n        queueCapacities.setMaximumCapacity(label,\n            csConf.getLabeledQueueMaximumCapacity(queuePath, label) / 100);\n        queueCapacities.setMaxAMResourcePercentage(label,\n            csConf.getMaximumAMResourcePercentPerPartition(queuePath, label));\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CSQueueUtils.java",
      "extendedDetails": {}
    },
    "56e4f6237ae8b1852e82b186e08db3934f79a9db": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3216. Max-AM-Resource-Percentage should respect node labels. (Sunil G via wangda)\n",
      "commitDate": "26/10/15 4:44 PM",
      "commitName": "56e4f6237ae8b1852e82b186e08db3934f79a9db",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "07/05/15 5:35 PM",
      "commitNameOld": "f489a4ec969f3727d03c8e85d51af1018fc0b2a1",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 171.96,
      "commitsBetweenForRepo": 1433,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,25 @@\n   private static void loadCapacitiesByLabelsFromConf(String queuePath,\n       QueueCapacities queueCapacities, CapacitySchedulerConfiguration csConf) {\n     queueCapacities.clearConfigurableFields();\n     Set\u003cString\u003e configuredNodelabels \u003d\n         csConf.getConfiguredNodeLabels(queuePath);\n \n     for (String label : configuredNodelabels) {\n       if (label.equals(CommonNodeLabelsManager.NO_LABEL)) {\n         queueCapacities.setCapacity(CommonNodeLabelsManager.NO_LABEL,\n             csConf.getNonLabeledQueueCapacity(queuePath) / 100);\n         queueCapacities.setMaximumCapacity(CommonNodeLabelsManager.NO_LABEL,\n             csConf.getNonLabeledQueueMaximumCapacity(queuePath) / 100);\n+        queueCapacities.setMaxAMResourcePercentage(\n+            CommonNodeLabelsManager.NO_LABEL,\n+            csConf.getMaximumAMResourcePercentPerPartition(queuePath, label));\n       } else {\n         queueCapacities.setCapacity(label,\n             csConf.getLabeledQueueCapacity(queuePath, label) / 100);\n         queueCapacities.setMaximumCapacity(label,\n             csConf.getLabeledQueueMaximumCapacity(queuePath, label) / 100);\n+        queueCapacities.setMaxAMResourcePercentage(label,\n+            csConf.getMaximumAMResourcePercentPerPartition(queuePath, label));\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void loadCapacitiesByLabelsFromConf(String queuePath,\n      QueueCapacities queueCapacities, CapacitySchedulerConfiguration csConf) {\n    queueCapacities.clearConfigurableFields();\n    Set\u003cString\u003e configuredNodelabels \u003d\n        csConf.getConfiguredNodeLabels(queuePath);\n\n    for (String label : configuredNodelabels) {\n      if (label.equals(CommonNodeLabelsManager.NO_LABEL)) {\n        queueCapacities.setCapacity(CommonNodeLabelsManager.NO_LABEL,\n            csConf.getNonLabeledQueueCapacity(queuePath) / 100);\n        queueCapacities.setMaximumCapacity(CommonNodeLabelsManager.NO_LABEL,\n            csConf.getNonLabeledQueueMaximumCapacity(queuePath) / 100);\n        queueCapacities.setMaxAMResourcePercentage(\n            CommonNodeLabelsManager.NO_LABEL,\n            csConf.getMaximumAMResourcePercentPerPartition(queuePath, label));\n      } else {\n        queueCapacities.setCapacity(label,\n            csConf.getLabeledQueueCapacity(queuePath, label) / 100);\n        queueCapacities.setMaximumCapacity(label,\n            csConf.getLabeledQueueMaximumCapacity(queuePath, label) / 100);\n        queueCapacities.setMaxAMResourcePercentage(label,\n            csConf.getMaximumAMResourcePercentPerPartition(queuePath, label));\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CSQueueUtils.java",
      "extendedDetails": {}
    },
    "f489a4ec969f3727d03c8e85d51af1018fc0b2a1": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-2918. RM should not fail on startup if queue\u0027s configured labels do not exist in cluster-node-labels. Contributed by Wangda Tan\n",
      "commitDate": "07/05/15 5:35 PM",
      "commitName": "f489a4ec969f3727d03c8e85d51af1018fc0b2a1",
      "commitAuthor": "Jian He",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-2918. RM should not fail on startup if queue\u0027s configured labels do not exist in cluster-node-labels. Contributed by Wangda Tan\n",
          "commitDate": "07/05/15 5:35 PM",
          "commitName": "f489a4ec969f3727d03c8e85d51af1018fc0b2a1",
          "commitAuthor": "Jian He",
          "commitDateOld": "23/04/15 11:19 AM",
          "commitNameOld": "f5fe35e297ed4a00a1ba93d090207ef67cebcc9d",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 14.26,
          "commitsBetweenForRepo": 141,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,20 @@\n   private static void loadCapacitiesByLabelsFromConf(String queuePath,\n-      Set\u003cString\u003e labels, RMNodeLabelsManager mgr,\n       QueueCapacities queueCapacities, CapacitySchedulerConfiguration csConf) {\n     queueCapacities.clearConfigurableFields();\n-    labels \u003d normalizeAccessibleNodeLabels(labels, mgr);\n+    Set\u003cString\u003e configuredNodelabels \u003d\n+        csConf.getConfiguredNodeLabels(queuePath);\n \n-    for (String label : labels) {\n+    for (String label : configuredNodelabels) {\n       if (label.equals(CommonNodeLabelsManager.NO_LABEL)) {\n         queueCapacities.setCapacity(CommonNodeLabelsManager.NO_LABEL,\n             csConf.getNonLabeledQueueCapacity(queuePath) / 100);\n         queueCapacities.setMaximumCapacity(CommonNodeLabelsManager.NO_LABEL,\n             csConf.getNonLabeledQueueMaximumCapacity(queuePath) / 100);\n       } else {\n         queueCapacities.setCapacity(label,\n             csConf.getLabeledQueueCapacity(queuePath, label) / 100);\n         queueCapacities.setMaximumCapacity(label,\n             csConf.getLabeledQueueMaximumCapacity(queuePath, label) / 100);\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void loadCapacitiesByLabelsFromConf(String queuePath,\n      QueueCapacities queueCapacities, CapacitySchedulerConfiguration csConf) {\n    queueCapacities.clearConfigurableFields();\n    Set\u003cString\u003e configuredNodelabels \u003d\n        csConf.getConfiguredNodeLabels(queuePath);\n\n    for (String label : configuredNodelabels) {\n      if (label.equals(CommonNodeLabelsManager.NO_LABEL)) {\n        queueCapacities.setCapacity(CommonNodeLabelsManager.NO_LABEL,\n            csConf.getNonLabeledQueueCapacity(queuePath) / 100);\n        queueCapacities.setMaximumCapacity(CommonNodeLabelsManager.NO_LABEL,\n            csConf.getNonLabeledQueueMaximumCapacity(queuePath) / 100);\n      } else {\n        queueCapacities.setCapacity(label,\n            csConf.getLabeledQueueCapacity(queuePath, label) / 100);\n        queueCapacities.setMaximumCapacity(label,\n            csConf.getLabeledQueueMaximumCapacity(queuePath, label) / 100);\n      }\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CSQueueUtils.java",
          "extendedDetails": {
            "oldValue": "[queuePath-String, labels-Set\u003cString\u003e, mgr-RMNodeLabelsManager, queueCapacities-QueueCapacities, csConf-CapacitySchedulerConfiguration]",
            "newValue": "[queuePath-String, queueCapacities-QueueCapacities, csConf-CapacitySchedulerConfiguration]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-2918. RM should not fail on startup if queue\u0027s configured labels do not exist in cluster-node-labels. Contributed by Wangda Tan\n",
          "commitDate": "07/05/15 5:35 PM",
          "commitName": "f489a4ec969f3727d03c8e85d51af1018fc0b2a1",
          "commitAuthor": "Jian He",
          "commitDateOld": "23/04/15 11:19 AM",
          "commitNameOld": "f5fe35e297ed4a00a1ba93d090207ef67cebcc9d",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 14.26,
          "commitsBetweenForRepo": 141,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,20 @@\n   private static void loadCapacitiesByLabelsFromConf(String queuePath,\n-      Set\u003cString\u003e labels, RMNodeLabelsManager mgr,\n       QueueCapacities queueCapacities, CapacitySchedulerConfiguration csConf) {\n     queueCapacities.clearConfigurableFields();\n-    labels \u003d normalizeAccessibleNodeLabels(labels, mgr);\n+    Set\u003cString\u003e configuredNodelabels \u003d\n+        csConf.getConfiguredNodeLabels(queuePath);\n \n-    for (String label : labels) {\n+    for (String label : configuredNodelabels) {\n       if (label.equals(CommonNodeLabelsManager.NO_LABEL)) {\n         queueCapacities.setCapacity(CommonNodeLabelsManager.NO_LABEL,\n             csConf.getNonLabeledQueueCapacity(queuePath) / 100);\n         queueCapacities.setMaximumCapacity(CommonNodeLabelsManager.NO_LABEL,\n             csConf.getNonLabeledQueueMaximumCapacity(queuePath) / 100);\n       } else {\n         queueCapacities.setCapacity(label,\n             csConf.getLabeledQueueCapacity(queuePath, label) / 100);\n         queueCapacities.setMaximumCapacity(label,\n             csConf.getLabeledQueueMaximumCapacity(queuePath, label) / 100);\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void loadCapacitiesByLabelsFromConf(String queuePath,\n      QueueCapacities queueCapacities, CapacitySchedulerConfiguration csConf) {\n    queueCapacities.clearConfigurableFields();\n    Set\u003cString\u003e configuredNodelabels \u003d\n        csConf.getConfiguredNodeLabels(queuePath);\n\n    for (String label : configuredNodelabels) {\n      if (label.equals(CommonNodeLabelsManager.NO_LABEL)) {\n        queueCapacities.setCapacity(CommonNodeLabelsManager.NO_LABEL,\n            csConf.getNonLabeledQueueCapacity(queuePath) / 100);\n        queueCapacities.setMaximumCapacity(CommonNodeLabelsManager.NO_LABEL,\n            csConf.getNonLabeledQueueMaximumCapacity(queuePath) / 100);\n      } else {\n        queueCapacities.setCapacity(label,\n            csConf.getLabeledQueueCapacity(queuePath, label) / 100);\n        queueCapacities.setMaximumCapacity(label,\n            csConf.getLabeledQueueMaximumCapacity(queuePath, label) / 100);\n      }\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CSQueueUtils.java",
          "extendedDetails": {}
        }
      ]
    },
    "18a594257e052e8f10a03e5594e6cc6901dc56be": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3124. Fixed CS LeafQueue/ParentQueue to use QueueCapacities to track capacities-by-label. Contributed by Wangda Tan\n",
      "commitDate": "12/02/15 2:58 PM",
      "commitName": "18a594257e052e8f10a03e5594e6cc6901dc56be",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,20 @@\n+  private static void loadCapacitiesByLabelsFromConf(String queuePath,\n+      Set\u003cString\u003e labels, RMNodeLabelsManager mgr,\n+      QueueCapacities queueCapacities, CapacitySchedulerConfiguration csConf) {\n+    queueCapacities.clearConfigurableFields();\n+    labels \u003d normalizeAccessibleNodeLabels(labels, mgr);\n+\n+    for (String label : labels) {\n+      if (label.equals(CommonNodeLabelsManager.NO_LABEL)) {\n+        queueCapacities.setCapacity(CommonNodeLabelsManager.NO_LABEL,\n+            csConf.getNonLabeledQueueCapacity(queuePath) / 100);\n+        queueCapacities.setMaximumCapacity(CommonNodeLabelsManager.NO_LABEL,\n+            csConf.getNonLabeledQueueMaximumCapacity(queuePath) / 100);\n+      } else {\n+        queueCapacities.setCapacity(label,\n+            csConf.getLabeledQueueCapacity(queuePath, label) / 100);\n+        queueCapacities.setMaximumCapacity(label,\n+            csConf.getLabeledQueueMaximumCapacity(queuePath, label) / 100);\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static void loadCapacitiesByLabelsFromConf(String queuePath,\n      Set\u003cString\u003e labels, RMNodeLabelsManager mgr,\n      QueueCapacities queueCapacities, CapacitySchedulerConfiguration csConf) {\n    queueCapacities.clearConfigurableFields();\n    labels \u003d normalizeAccessibleNodeLabels(labels, mgr);\n\n    for (String label : labels) {\n      if (label.equals(CommonNodeLabelsManager.NO_LABEL)) {\n        queueCapacities.setCapacity(CommonNodeLabelsManager.NO_LABEL,\n            csConf.getNonLabeledQueueCapacity(queuePath) / 100);\n        queueCapacities.setMaximumCapacity(CommonNodeLabelsManager.NO_LABEL,\n            csConf.getNonLabeledQueueMaximumCapacity(queuePath) / 100);\n      } else {\n        queueCapacities.setCapacity(label,\n            csConf.getLabeledQueueCapacity(queuePath, label) / 100);\n        queueCapacities.setMaximumCapacity(label,\n            csConf.getLabeledQueueMaximumCapacity(queuePath, label) / 100);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CSQueueUtils.java"
    }
  }
}