{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ResourceTrackerService.java",
  "functionName": "updateNodeLabelsFromNMReport",
  "functionId": "updateNodeLabelsFromNMReport___nodeLabels-Set__String____nodeId-NodeId",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceTrackerService.java",
  "functionStartLine": 874,
  "functionEndLine": 895,
  "numCommitsSeen": 98,
  "timeTaken": 2444,
  "changeHistory": [
    "e40e2d6ad5cbe782c3a067229270738b501ed27e",
    "2a945d24f7de1a7ae6e7bd6636188ce3b55c7f52"
  ],
  "changeHistoryShort": {
    "e40e2d6ad5cbe782c3a067229270738b501ed27e": "Ybodychange",
    "2a945d24f7de1a7ae6e7bd6636188ce3b55c7f52": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e40e2d6ad5cbe782c3a067229270738b501ed27e": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7243. Moving logging APIs over to slf4j in hadoop-yarn-server-resourcemanager.\n\nSigned-off-by: Akira Ajisaka \u003caajisaka@apache.org\u003e\n",
      "commitDate": "04/03/19 9:10 PM",
      "commitName": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
      "commitAuthor": "Prabhu Joseph",
      "commitDateOld": "22/02/19 7:31 AM",
      "commitNameOld": "ed13cf84068ad50a78e66211132c1f08238fb65b",
      "commitAuthorOld": "bibinchundatt",
      "daysBetweenCommits": 10.57,
      "commitsBetweenForRepo": 98,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n   private void updateNodeLabelsFromNMReport(Set\u003cString\u003e nodeLabels,\n       NodeId nodeId) throws IOException {\n     try {\n       Map\u003cNodeId, Set\u003cString\u003e\u003e labelsUpdate \u003d\n           new HashMap\u003cNodeId, Set\u003cString\u003e\u003e();\n       labelsUpdate.put(nodeId, nodeLabels);\n       this.rmContext.getNodeLabelManager().replaceLabelsOnNode(labelsUpdate);\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Node Labels {\" + StringUtils.join(\",\", nodeLabels)\n             + \"} from Node \" + nodeId + \" were Accepted from RM\");\n       }\n     } catch (IOException ex) {\n       StringBuilder errorMessage \u003d new StringBuilder();\n       errorMessage.append(\"Node Labels {\")\n           .append(StringUtils.join(\",\", nodeLabels))\n           .append(\"} reported from NM with ID \").append(nodeId)\n           .append(\" was rejected from RM with exception message as : \")\n           .append(ex.getMessage());\n-      LOG.error(errorMessage, ex);\n+      LOG.error(errorMessage.toString(), ex);\n       throw new IOException(errorMessage.toString(), ex);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void updateNodeLabelsFromNMReport(Set\u003cString\u003e nodeLabels,\n      NodeId nodeId) throws IOException {\n    try {\n      Map\u003cNodeId, Set\u003cString\u003e\u003e labelsUpdate \u003d\n          new HashMap\u003cNodeId, Set\u003cString\u003e\u003e();\n      labelsUpdate.put(nodeId, nodeLabels);\n      this.rmContext.getNodeLabelManager().replaceLabelsOnNode(labelsUpdate);\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Node Labels {\" + StringUtils.join(\",\", nodeLabels)\n            + \"} from Node \" + nodeId + \" were Accepted from RM\");\n      }\n    } catch (IOException ex) {\n      StringBuilder errorMessage \u003d new StringBuilder();\n      errorMessage.append(\"Node Labels {\")\n          .append(StringUtils.join(\",\", nodeLabels))\n          .append(\"} reported from NM with ID \").append(nodeId)\n          .append(\" was rejected from RM with exception message as : \")\n          .append(ex.getMessage());\n      LOG.error(errorMessage.toString(), ex);\n      throw new IOException(errorMessage.toString(), ex);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceTrackerService.java",
      "extendedDetails": {}
    },
    "2a945d24f7de1a7ae6e7bd6636188ce3b55c7f52": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2495. Allow admin specify labels from each NM (Distributed configuration for node label). (Naganarasimha G R via wangda)\n",
      "commitDate": "30/03/15 12:05 PM",
      "commitName": "2a945d24f7de1a7ae6e7bd6636188ce3b55c7f52",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,22 @@\n+  private void updateNodeLabelsFromNMReport(Set\u003cString\u003e nodeLabels,\n+      NodeId nodeId) throws IOException {\n+    try {\n+      Map\u003cNodeId, Set\u003cString\u003e\u003e labelsUpdate \u003d\n+          new HashMap\u003cNodeId, Set\u003cString\u003e\u003e();\n+      labelsUpdate.put(nodeId, nodeLabels);\n+      this.rmContext.getNodeLabelManager().replaceLabelsOnNode(labelsUpdate);\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"Node Labels {\" + StringUtils.join(\",\", nodeLabels)\n+            + \"} from Node \" + nodeId + \" were Accepted from RM\");\n+      }\n+    } catch (IOException ex) {\n+      StringBuilder errorMessage \u003d new StringBuilder();\n+      errorMessage.append(\"Node Labels {\")\n+          .append(StringUtils.join(\",\", nodeLabels))\n+          .append(\"} reported from NM with ID \").append(nodeId)\n+          .append(\" was rejected from RM with exception message as : \")\n+          .append(ex.getMessage());\n+      LOG.error(errorMessage, ex);\n+      throw new IOException(errorMessage.toString(), ex);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void updateNodeLabelsFromNMReport(Set\u003cString\u003e nodeLabels,\n      NodeId nodeId) throws IOException {\n    try {\n      Map\u003cNodeId, Set\u003cString\u003e\u003e labelsUpdate \u003d\n          new HashMap\u003cNodeId, Set\u003cString\u003e\u003e();\n      labelsUpdate.put(nodeId, nodeLabels);\n      this.rmContext.getNodeLabelManager().replaceLabelsOnNode(labelsUpdate);\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Node Labels {\" + StringUtils.join(\",\", nodeLabels)\n            + \"} from Node \" + nodeId + \" were Accepted from RM\");\n      }\n    } catch (IOException ex) {\n      StringBuilder errorMessage \u003d new StringBuilder();\n      errorMessage.append(\"Node Labels {\")\n          .append(StringUtils.join(\",\", nodeLabels))\n          .append(\"} reported from NM with ID \").append(nodeId)\n          .append(\" was rejected from RM with exception message as : \")\n          .append(ex.getMessage());\n      LOG.error(errorMessage, ex);\n      throw new IOException(errorMessage.toString(), ex);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceTrackerService.java"
    }
  }
}