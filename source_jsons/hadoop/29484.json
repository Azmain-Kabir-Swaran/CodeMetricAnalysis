{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NodeStatus.java",
  "functionName": "newInstance",
  "functionId": "newInstance___nodeId-NodeId__responseId-int__containerStatuses-List__ContainerStatus____keepAliveApplications-List__ApplicationId____nodeHealthStatus-NodeHealthStatus__containersUtilization-ResourceUtilization__nodeUtilization-ResourceUtilization__increasedContainers-List__Container__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/records/NodeStatus.java",
  "functionStartLine": 56,
  "functionEndLine": 73,
  "numCommitsSeen": 23,
  "timeTaken": 4498,
  "changeHistory": [
    "c3dc1af072574f5890a8d43e4d60526951b4b8bc",
    "13604bd5f119fc81b9942190dfa366afad61bc92",
    "527c40e4d664c721b8f32d7cd8df21b2666fea8a",
    "cfa783141fa69c2cf154d1d9e5393353d14ce5e1"
  ],
  "changeHistoryShort": {
    "c3dc1af072574f5890a8d43e4d60526951b4b8bc": "Ymultichange(Yparameterchange,Ybodychange)",
    "13604bd5f119fc81b9942190dfa366afad61bc92": "Ymultichange(Yparameterchange,Ybodychange)",
    "527c40e4d664c721b8f32d7cd8df21b2666fea8a": "Ymultichange(Yparameterchange,Ybodychange)",
    "cfa783141fa69c2cf154d1d9e5393353d14ce5e1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c3dc1af072574f5890a8d43e4d60526951b4b8bc": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-1644. RM-NM protocol changes and NodeStatusUpdater implementation to support container resizing. Contributed by Meng Ding\n",
      "commitDate": "23/09/15 1:29 PM",
      "commitName": "c3dc1af072574f5890a8d43e4d60526951b4b8bc",
      "commitAuthor": "Jian He",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-1644. RM-NM protocol changes and NodeStatusUpdater implementation to support container resizing. Contributed by Meng Ding\n",
          "commitDate": "23/09/15 1:29 PM",
          "commitName": "c3dc1af072574f5890a8d43e4d60526951b4b8bc",
          "commitAuthor": "Jian He",
          "commitDateOld": "13/09/15 6:25 AM",
          "commitNameOld": "7269906254afe59ea464ed674d8218f82eeaec26",
          "commitAuthorOld": "Steve Loughran",
          "daysBetweenCommits": 10.29,
          "commitsBetweenForRepo": 73,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,18 @@\n   public static NodeStatus newInstance(NodeId nodeId, int responseId,\n       List\u003cContainerStatus\u003e containerStatuses,\n       List\u003cApplicationId\u003e keepAliveApplications,\n       NodeHealthStatus nodeHealthStatus,\n       ResourceUtilization containersUtilization,\n-      ResourceUtilization nodeUtilization) {\n+      ResourceUtilization nodeUtilization,\n+      List\u003cContainer\u003e increasedContainers) {\n     NodeStatus nodeStatus \u003d Records.newRecord(NodeStatus.class);\n     nodeStatus.setResponseId(responseId);\n     nodeStatus.setNodeId(nodeId);\n     nodeStatus.setContainersStatuses(containerStatuses);\n     nodeStatus.setKeepAliveApplications(keepAliveApplications);\n     nodeStatus.setNodeHealthStatus(nodeHealthStatus);\n     nodeStatus.setContainersUtilization(containersUtilization);\n     nodeStatus.setNodeUtilization(nodeUtilization);\n+    nodeStatus.setIncreasedContainers(increasedContainers);\n     return nodeStatus;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static NodeStatus newInstance(NodeId nodeId, int responseId,\n      List\u003cContainerStatus\u003e containerStatuses,\n      List\u003cApplicationId\u003e keepAliveApplications,\n      NodeHealthStatus nodeHealthStatus,\n      ResourceUtilization containersUtilization,\n      ResourceUtilization nodeUtilization,\n      List\u003cContainer\u003e increasedContainers) {\n    NodeStatus nodeStatus \u003d Records.newRecord(NodeStatus.class);\n    nodeStatus.setResponseId(responseId);\n    nodeStatus.setNodeId(nodeId);\n    nodeStatus.setContainersStatuses(containerStatuses);\n    nodeStatus.setKeepAliveApplications(keepAliveApplications);\n    nodeStatus.setNodeHealthStatus(nodeHealthStatus);\n    nodeStatus.setContainersUtilization(containersUtilization);\n    nodeStatus.setNodeUtilization(nodeUtilization);\n    nodeStatus.setIncreasedContainers(increasedContainers);\n    return nodeStatus;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/records/NodeStatus.java",
          "extendedDetails": {
            "oldValue": "[nodeId-NodeId, responseId-int, containerStatuses-List\u003cContainerStatus\u003e, keepAliveApplications-List\u003cApplicationId\u003e, nodeHealthStatus-NodeHealthStatus, containersUtilization-ResourceUtilization, nodeUtilization-ResourceUtilization]",
            "newValue": "[nodeId-NodeId, responseId-int, containerStatuses-List\u003cContainerStatus\u003e, keepAliveApplications-List\u003cApplicationId\u003e, nodeHealthStatus-NodeHealthStatus, containersUtilization-ResourceUtilization, nodeUtilization-ResourceUtilization, increasedContainers-List\u003cContainer\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-1644. RM-NM protocol changes and NodeStatusUpdater implementation to support container resizing. Contributed by Meng Ding\n",
          "commitDate": "23/09/15 1:29 PM",
          "commitName": "c3dc1af072574f5890a8d43e4d60526951b4b8bc",
          "commitAuthor": "Jian He",
          "commitDateOld": "13/09/15 6:25 AM",
          "commitNameOld": "7269906254afe59ea464ed674d8218f82eeaec26",
          "commitAuthorOld": "Steve Loughran",
          "daysBetweenCommits": 10.29,
          "commitsBetweenForRepo": 73,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,18 @@\n   public static NodeStatus newInstance(NodeId nodeId, int responseId,\n       List\u003cContainerStatus\u003e containerStatuses,\n       List\u003cApplicationId\u003e keepAliveApplications,\n       NodeHealthStatus nodeHealthStatus,\n       ResourceUtilization containersUtilization,\n-      ResourceUtilization nodeUtilization) {\n+      ResourceUtilization nodeUtilization,\n+      List\u003cContainer\u003e increasedContainers) {\n     NodeStatus nodeStatus \u003d Records.newRecord(NodeStatus.class);\n     nodeStatus.setResponseId(responseId);\n     nodeStatus.setNodeId(nodeId);\n     nodeStatus.setContainersStatuses(containerStatuses);\n     nodeStatus.setKeepAliveApplications(keepAliveApplications);\n     nodeStatus.setNodeHealthStatus(nodeHealthStatus);\n     nodeStatus.setContainersUtilization(containersUtilization);\n     nodeStatus.setNodeUtilization(nodeUtilization);\n+    nodeStatus.setIncreasedContainers(increasedContainers);\n     return nodeStatus;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static NodeStatus newInstance(NodeId nodeId, int responseId,\n      List\u003cContainerStatus\u003e containerStatuses,\n      List\u003cApplicationId\u003e keepAliveApplications,\n      NodeHealthStatus nodeHealthStatus,\n      ResourceUtilization containersUtilization,\n      ResourceUtilization nodeUtilization,\n      List\u003cContainer\u003e increasedContainers) {\n    NodeStatus nodeStatus \u003d Records.newRecord(NodeStatus.class);\n    nodeStatus.setResponseId(responseId);\n    nodeStatus.setNodeId(nodeId);\n    nodeStatus.setContainersStatuses(containerStatuses);\n    nodeStatus.setKeepAliveApplications(keepAliveApplications);\n    nodeStatus.setNodeHealthStatus(nodeHealthStatus);\n    nodeStatus.setContainersUtilization(containersUtilization);\n    nodeStatus.setNodeUtilization(nodeUtilization);\n    nodeStatus.setIncreasedContainers(increasedContainers);\n    return nodeStatus;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/records/NodeStatus.java",
          "extendedDetails": {}
        }
      ]
    },
    "13604bd5f119fc81b9942190dfa366afad61bc92": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-4055. Report node resource utilization in heartbeat. (Inigo Goiri via kasha)\n",
      "commitDate": "16/08/15 3:08 PM",
      "commitName": "13604bd5f119fc81b9942190dfa366afad61bc92",
      "commitAuthor": "Karthik Kambatla",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-4055. Report node resource utilization in heartbeat. (Inigo Goiri via kasha)\n",
          "commitDate": "16/08/15 3:08 PM",
          "commitName": "13604bd5f119fc81b9942190dfa366afad61bc92",
          "commitAuthor": "Karthik Kambatla",
          "commitDateOld": "09/07/15 9:35 AM",
          "commitNameOld": "527c40e4d664c721b8f32d7cd8df21b2666fea8a",
          "commitAuthorOld": "Karthik Kambatla",
          "daysBetweenCommits": 38.23,
          "commitsBetweenForRepo": 205,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,16 @@\n   public static NodeStatus newInstance(NodeId nodeId, int responseId,\n       List\u003cContainerStatus\u003e containerStatuses,\n       List\u003cApplicationId\u003e keepAliveApplications,\n       NodeHealthStatus nodeHealthStatus,\n-      ResourceUtilization containersUtilization) {\n+      ResourceUtilization containersUtilization,\n+      ResourceUtilization nodeUtilization) {\n     NodeStatus nodeStatus \u003d Records.newRecord(NodeStatus.class);\n     nodeStatus.setResponseId(responseId);\n     nodeStatus.setNodeId(nodeId);\n     nodeStatus.setContainersStatuses(containerStatuses);\n     nodeStatus.setKeepAliveApplications(keepAliveApplications);\n     nodeStatus.setNodeHealthStatus(nodeHealthStatus);\n     nodeStatus.setContainersUtilization(containersUtilization);\n+    nodeStatus.setNodeUtilization(nodeUtilization);\n     return nodeStatus;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static NodeStatus newInstance(NodeId nodeId, int responseId,\n      List\u003cContainerStatus\u003e containerStatuses,\n      List\u003cApplicationId\u003e keepAliveApplications,\n      NodeHealthStatus nodeHealthStatus,\n      ResourceUtilization containersUtilization,\n      ResourceUtilization nodeUtilization) {\n    NodeStatus nodeStatus \u003d Records.newRecord(NodeStatus.class);\n    nodeStatus.setResponseId(responseId);\n    nodeStatus.setNodeId(nodeId);\n    nodeStatus.setContainersStatuses(containerStatuses);\n    nodeStatus.setKeepAliveApplications(keepAliveApplications);\n    nodeStatus.setNodeHealthStatus(nodeHealthStatus);\n    nodeStatus.setContainersUtilization(containersUtilization);\n    nodeStatus.setNodeUtilization(nodeUtilization);\n    return nodeStatus;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/records/NodeStatus.java",
          "extendedDetails": {
            "oldValue": "[nodeId-NodeId, responseId-int, containerStatuses-List\u003cContainerStatus\u003e, keepAliveApplications-List\u003cApplicationId\u003e, nodeHealthStatus-NodeHealthStatus, containersUtilization-ResourceUtilization]",
            "newValue": "[nodeId-NodeId, responseId-int, containerStatuses-List\u003cContainerStatus\u003e, keepAliveApplications-List\u003cApplicationId\u003e, nodeHealthStatus-NodeHealthStatus, containersUtilization-ResourceUtilization, nodeUtilization-ResourceUtilization]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4055. Report node resource utilization in heartbeat. (Inigo Goiri via kasha)\n",
          "commitDate": "16/08/15 3:08 PM",
          "commitName": "13604bd5f119fc81b9942190dfa366afad61bc92",
          "commitAuthor": "Karthik Kambatla",
          "commitDateOld": "09/07/15 9:35 AM",
          "commitNameOld": "527c40e4d664c721b8f32d7cd8df21b2666fea8a",
          "commitAuthorOld": "Karthik Kambatla",
          "daysBetweenCommits": 38.23,
          "commitsBetweenForRepo": 205,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,16 @@\n   public static NodeStatus newInstance(NodeId nodeId, int responseId,\n       List\u003cContainerStatus\u003e containerStatuses,\n       List\u003cApplicationId\u003e keepAliveApplications,\n       NodeHealthStatus nodeHealthStatus,\n-      ResourceUtilization containersUtilization) {\n+      ResourceUtilization containersUtilization,\n+      ResourceUtilization nodeUtilization) {\n     NodeStatus nodeStatus \u003d Records.newRecord(NodeStatus.class);\n     nodeStatus.setResponseId(responseId);\n     nodeStatus.setNodeId(nodeId);\n     nodeStatus.setContainersStatuses(containerStatuses);\n     nodeStatus.setKeepAliveApplications(keepAliveApplications);\n     nodeStatus.setNodeHealthStatus(nodeHealthStatus);\n     nodeStatus.setContainersUtilization(containersUtilization);\n+    nodeStatus.setNodeUtilization(nodeUtilization);\n     return nodeStatus;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static NodeStatus newInstance(NodeId nodeId, int responseId,\n      List\u003cContainerStatus\u003e containerStatuses,\n      List\u003cApplicationId\u003e keepAliveApplications,\n      NodeHealthStatus nodeHealthStatus,\n      ResourceUtilization containersUtilization,\n      ResourceUtilization nodeUtilization) {\n    NodeStatus nodeStatus \u003d Records.newRecord(NodeStatus.class);\n    nodeStatus.setResponseId(responseId);\n    nodeStatus.setNodeId(nodeId);\n    nodeStatus.setContainersStatuses(containerStatuses);\n    nodeStatus.setKeepAliveApplications(keepAliveApplications);\n    nodeStatus.setNodeHealthStatus(nodeHealthStatus);\n    nodeStatus.setContainersUtilization(containersUtilization);\n    nodeStatus.setNodeUtilization(nodeUtilization);\n    return nodeStatus;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/records/NodeStatus.java",
          "extendedDetails": {}
        }
      ]
    },
    "527c40e4d664c721b8f32d7cd8df21b2666fea8a": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-1012. Report NM aggregated container resource utilization in heartbeat. (Inigo Goiri via kasha)\n",
      "commitDate": "09/07/15 9:35 AM",
      "commitName": "527c40e4d664c721b8f32d7cd8df21b2666fea8a",
      "commitAuthor": "Karthik Kambatla",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-1012. Report NM aggregated container resource utilization in heartbeat. (Inigo Goiri via kasha)\n",
          "commitDate": "09/07/15 9:35 AM",
          "commitName": "527c40e4d664c721b8f32d7cd8df21b2666fea8a",
          "commitAuthor": "Karthik Kambatla",
          "commitDateOld": "18/11/13 9:17 PM",
          "commitNameOld": "cfa783141fa69c2cf154d1d9e5393353d14ce5e1",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 597.47,
          "commitsBetweenForRepo": 4734,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,14 @@\n   public static NodeStatus newInstance(NodeId nodeId, int responseId,\n       List\u003cContainerStatus\u003e containerStatuses,\n       List\u003cApplicationId\u003e keepAliveApplications,\n-      NodeHealthStatus nodeHealthStatus) {\n+      NodeHealthStatus nodeHealthStatus,\n+      ResourceUtilization containersUtilization) {\n     NodeStatus nodeStatus \u003d Records.newRecord(NodeStatus.class);\n     nodeStatus.setResponseId(responseId);\n     nodeStatus.setNodeId(nodeId);\n     nodeStatus.setContainersStatuses(containerStatuses);\n     nodeStatus.setKeepAliveApplications(keepAliveApplications);\n     nodeStatus.setNodeHealthStatus(nodeHealthStatus);\n+    nodeStatus.setContainersUtilization(containersUtilization);\n     return nodeStatus;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static NodeStatus newInstance(NodeId nodeId, int responseId,\n      List\u003cContainerStatus\u003e containerStatuses,\n      List\u003cApplicationId\u003e keepAliveApplications,\n      NodeHealthStatus nodeHealthStatus,\n      ResourceUtilization containersUtilization) {\n    NodeStatus nodeStatus \u003d Records.newRecord(NodeStatus.class);\n    nodeStatus.setResponseId(responseId);\n    nodeStatus.setNodeId(nodeId);\n    nodeStatus.setContainersStatuses(containerStatuses);\n    nodeStatus.setKeepAliveApplications(keepAliveApplications);\n    nodeStatus.setNodeHealthStatus(nodeHealthStatus);\n    nodeStatus.setContainersUtilization(containersUtilization);\n    return nodeStatus;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/records/NodeStatus.java",
          "extendedDetails": {
            "oldValue": "[nodeId-NodeId, responseId-int, containerStatuses-List\u003cContainerStatus\u003e, keepAliveApplications-List\u003cApplicationId\u003e, nodeHealthStatus-NodeHealthStatus]",
            "newValue": "[nodeId-NodeId, responseId-int, containerStatuses-List\u003cContainerStatus\u003e, keepAliveApplications-List\u003cApplicationId\u003e, nodeHealthStatus-NodeHealthStatus, containersUtilization-ResourceUtilization]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-1012. Report NM aggregated container resource utilization in heartbeat. (Inigo Goiri via kasha)\n",
          "commitDate": "09/07/15 9:35 AM",
          "commitName": "527c40e4d664c721b8f32d7cd8df21b2666fea8a",
          "commitAuthor": "Karthik Kambatla",
          "commitDateOld": "18/11/13 9:17 PM",
          "commitNameOld": "cfa783141fa69c2cf154d1d9e5393353d14ce5e1",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 597.47,
          "commitsBetweenForRepo": 4734,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,14 @@\n   public static NodeStatus newInstance(NodeId nodeId, int responseId,\n       List\u003cContainerStatus\u003e containerStatuses,\n       List\u003cApplicationId\u003e keepAliveApplications,\n-      NodeHealthStatus nodeHealthStatus) {\n+      NodeHealthStatus nodeHealthStatus,\n+      ResourceUtilization containersUtilization) {\n     NodeStatus nodeStatus \u003d Records.newRecord(NodeStatus.class);\n     nodeStatus.setResponseId(responseId);\n     nodeStatus.setNodeId(nodeId);\n     nodeStatus.setContainersStatuses(containerStatuses);\n     nodeStatus.setKeepAliveApplications(keepAliveApplications);\n     nodeStatus.setNodeHealthStatus(nodeHealthStatus);\n+    nodeStatus.setContainersUtilization(containersUtilization);\n     return nodeStatus;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static NodeStatus newInstance(NodeId nodeId, int responseId,\n      List\u003cContainerStatus\u003e containerStatuses,\n      List\u003cApplicationId\u003e keepAliveApplications,\n      NodeHealthStatus nodeHealthStatus,\n      ResourceUtilization containersUtilization) {\n    NodeStatus nodeStatus \u003d Records.newRecord(NodeStatus.class);\n    nodeStatus.setResponseId(responseId);\n    nodeStatus.setNodeId(nodeId);\n    nodeStatus.setContainersStatuses(containerStatuses);\n    nodeStatus.setKeepAliveApplications(keepAliveApplications);\n    nodeStatus.setNodeHealthStatus(nodeHealthStatus);\n    nodeStatus.setContainersUtilization(containersUtilization);\n    return nodeStatus;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/records/NodeStatus.java",
          "extendedDetails": {}
        }
      ]
    },
    "cfa783141fa69c2cf154d1d9e5393353d14ce5e1": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1210. Changed RM to start new app-attempts on RM restart only after ensuring that previous AM exited or after expiry time. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1543310 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/11/13 9:17 PM",
      "commitName": "cfa783141fa69c2cf154d1d9e5393353d14ce5e1",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,12 @@\n+  public static NodeStatus newInstance(NodeId nodeId, int responseId,\n+      List\u003cContainerStatus\u003e containerStatuses,\n+      List\u003cApplicationId\u003e keepAliveApplications,\n+      NodeHealthStatus nodeHealthStatus) {\n+    NodeStatus nodeStatus \u003d Records.newRecord(NodeStatus.class);\n+    nodeStatus.setResponseId(responseId);\n+    nodeStatus.setNodeId(nodeId);\n+    nodeStatus.setContainersStatuses(containerStatuses);\n+    nodeStatus.setKeepAliveApplications(keepAliveApplications);\n+    nodeStatus.setNodeHealthStatus(nodeHealthStatus);\n+    return nodeStatus;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static NodeStatus newInstance(NodeId nodeId, int responseId,\n      List\u003cContainerStatus\u003e containerStatuses,\n      List\u003cApplicationId\u003e keepAliveApplications,\n      NodeHealthStatus nodeHealthStatus) {\n    NodeStatus nodeStatus \u003d Records.newRecord(NodeStatus.class);\n    nodeStatus.setResponseId(responseId);\n    nodeStatus.setNodeId(nodeId);\n    nodeStatus.setContainersStatuses(containerStatuses);\n    nodeStatus.setKeepAliveApplications(keepAliveApplications);\n    nodeStatus.setNodeHealthStatus(nodeHealthStatus);\n    return nodeStatus;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/records/NodeStatus.java"
    }
  }
}