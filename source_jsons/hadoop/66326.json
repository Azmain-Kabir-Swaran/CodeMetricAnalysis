{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SchedulerMetrics.java",
  "functionName": "run",
  "functionId": "run",
  "sourceFilePath": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/SchedulerMetrics.java",
  "functionStartLine": 520,
  "functionEndLine": 538,
  "numCommitsSeen": 40,
  "timeTaken": 2310,
  "changeHistory": [
    "8563fd67befeb0026a95ae268395baf04cd3c22f",
    "6a5516c2381f107d96b8326939514de3c6e53d3d",
    "58b08e11b9f04c9190ab4a07473f0ee04e01ec6b"
  ],
  "changeHistoryShort": {
    "8563fd67befeb0026a95ae268395baf04cd3c22f": "Ybodychange",
    "6a5516c2381f107d96b8326939514de3c6e53d3d": "Ymultichange(Ymovefromfile,Ybodychange)",
    "58b08e11b9f04c9190ab4a07473f0ee04e01ec6b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8563fd67befeb0026a95ae268395baf04cd3c22f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8632. Threads in SLS quit without logging exception. Contributed by Xianghao Lu.\n",
      "commitDate": "24/08/18 11:23 AM",
      "commitName": "8563fd67befeb0026a95ae268395baf04cd3c22f",
      "commitAuthor": "Yufei Gu",
      "commitDateOld": "27/04/18 12:36 AM",
      "commitNameOld": "ba2db39c655600d00d2d3d3951e0c780f4d6f622",
      "commitAuthorOld": "Weiwei Yang",
      "daysBetweenCommits": 119.45,
      "commitsBetweenForRepo": 884,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,19 @@\n     public void run() {\n-      if(running) {\n+      SchedulerWrapper wrapper \u003d (SchedulerWrapper) scheduler;\n+      if(running \u0026\u0026 wrapper.getTracker().getQueueSet() !\u003d null) {\n         // all WebApp to get real tracking json\n         String trackingMetrics \u003d web.generateRealTimeTrackingMetrics();\n         // output\n         try {\n           if(firstLine) {\n             metricsLogBW.write(trackingMetrics + EOL);\n             firstLine \u003d false;\n           } else {\n             metricsLogBW.write(\",\" + trackingMetrics + EOL);\n           }\n           metricsLogBW.flush();\n         } catch (IOException e) {\n           LOG.info(e.getMessage());\n         }\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      SchedulerWrapper wrapper \u003d (SchedulerWrapper) scheduler;\n      if(running \u0026\u0026 wrapper.getTracker().getQueueSet() !\u003d null) {\n        // all WebApp to get real tracking json\n        String trackingMetrics \u003d web.generateRealTimeTrackingMetrics();\n        // output\n        try {\n          if(firstLine) {\n            metricsLogBW.write(trackingMetrics + EOL);\n            firstLine \u003d false;\n          } else {\n            metricsLogBW.write(\",\" + trackingMetrics + EOL);\n          }\n          metricsLogBW.flush();\n        } catch (IOException e) {\n          LOG.info(e.getMessage());\n        }\n      }\n    }",
      "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/SchedulerMetrics.java",
      "extendedDetails": {}
    },
    "6a5516c2381f107d96b8326939514de3c6e53d3d": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "YARN-5654. Not be able to run SLS with FairScheduler (yufeigu via rkanter)\n",
      "commitDate": "29/03/17 4:18 PM",
      "commitName": "6a5516c2381f107d96b8326939514de3c6e53d3d",
      "commitAuthor": "Robert Kanter",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-5654. Not be able to run SLS with FairScheduler (yufeigu via rkanter)\n",
          "commitDate": "29/03/17 4:18 PM",
          "commitName": "6a5516c2381f107d96b8326939514de3c6e53d3d",
          "commitAuthor": "Robert Kanter",
          "commitDateOld": "29/03/17 2:37 PM",
          "commitNameOld": "4966a6e26e45d7dc36e0b270066ff7c87bcd00cc",
          "commitAuthorOld": "Andrew Wang",
          "daysBetweenCommits": 0.07,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,18 @@\n     public void run() {\n       if(running) {\n         // all WebApp to get real tracking json\n-        String metrics \u003d web.generateRealTimeTrackingMetrics();\n+        String trackingMetrics \u003d web.generateRealTimeTrackingMetrics();\n         // output\n         try {\n           if(firstLine) {\n-            metricsLogBW.write(metrics + EOL);\n+            metricsLogBW.write(trackingMetrics + EOL);\n             firstLine \u003d false;\n           } else {\n-            metricsLogBW.write(\",\" + metrics + EOL);\n+            metricsLogBW.write(\",\" + trackingMetrics + EOL);\n           }\n           metricsLogBW.flush();\n         } catch (IOException e) {\n-          e.printStackTrace();\n+          LOG.info(e.getMessage());\n         }\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void run() {\n      if(running) {\n        // all WebApp to get real tracking json\n        String trackingMetrics \u003d web.generateRealTimeTrackingMetrics();\n        // output\n        try {\n          if(firstLine) {\n            metricsLogBW.write(trackingMetrics + EOL);\n            firstLine \u003d false;\n          } else {\n            metricsLogBW.write(\",\" + trackingMetrics + EOL);\n          }\n          metricsLogBW.flush();\n        } catch (IOException e) {\n          LOG.info(e.getMessage());\n        }\n      }\n    }",
          "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/SchedulerMetrics.java",
          "extendedDetails": {
            "oldPath": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/ResourceSchedulerWrapper.java",
            "newPath": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/SchedulerMetrics.java",
            "oldMethodName": "run",
            "newMethodName": "run"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-5654. Not be able to run SLS with FairScheduler (yufeigu via rkanter)\n",
          "commitDate": "29/03/17 4:18 PM",
          "commitName": "6a5516c2381f107d96b8326939514de3c6e53d3d",
          "commitAuthor": "Robert Kanter",
          "commitDateOld": "29/03/17 2:37 PM",
          "commitNameOld": "4966a6e26e45d7dc36e0b270066ff7c87bcd00cc",
          "commitAuthorOld": "Andrew Wang",
          "daysBetweenCommits": 0.07,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,18 @@\n     public void run() {\n       if(running) {\n         // all WebApp to get real tracking json\n-        String metrics \u003d web.generateRealTimeTrackingMetrics();\n+        String trackingMetrics \u003d web.generateRealTimeTrackingMetrics();\n         // output\n         try {\n           if(firstLine) {\n-            metricsLogBW.write(metrics + EOL);\n+            metricsLogBW.write(trackingMetrics + EOL);\n             firstLine \u003d false;\n           } else {\n-            metricsLogBW.write(\",\" + metrics + EOL);\n+            metricsLogBW.write(\",\" + trackingMetrics + EOL);\n           }\n           metricsLogBW.flush();\n         } catch (IOException e) {\n-          e.printStackTrace();\n+          LOG.info(e.getMessage());\n         }\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void run() {\n      if(running) {\n        // all WebApp to get real tracking json\n        String trackingMetrics \u003d web.generateRealTimeTrackingMetrics();\n        // output\n        try {\n          if(firstLine) {\n            metricsLogBW.write(trackingMetrics + EOL);\n            firstLine \u003d false;\n          } else {\n            metricsLogBW.write(\",\" + trackingMetrics + EOL);\n          }\n          metricsLogBW.flush();\n        } catch (IOException e) {\n          LOG.info(e.getMessage());\n        }\n      }\n    }",
          "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/SchedulerMetrics.java",
          "extendedDetails": {}
        }
      ]
    },
    "58b08e11b9f04c9190ab4a07473f0ee04e01ec6b": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1021. Yarn Scheduler Load Simulator. (ywskycn via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1527059 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/09/13 1:23 PM",
      "commitName": "58b08e11b9f04c9190ab4a07473f0ee04e01ec6b",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,18 @@\n+    public void run() {\n+      if(running) {\n+        // all WebApp to get real tracking json\n+        String metrics \u003d web.generateRealTimeTrackingMetrics();\n+        // output\n+        try {\n+          if(firstLine) {\n+            metricsLogBW.write(metrics + EOL);\n+            firstLine \u003d false;\n+          } else {\n+            metricsLogBW.write(\",\" + metrics + EOL);\n+          }\n+          metricsLogBW.flush();\n+        } catch (IOException e) {\n+          e.printStackTrace();\n+        }\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      if(running) {\n        // all WebApp to get real tracking json\n        String metrics \u003d web.generateRealTimeTrackingMetrics();\n        // output\n        try {\n          if(firstLine) {\n            metricsLogBW.write(metrics + EOL);\n            firstLine \u003d false;\n          } else {\n            metricsLogBW.write(\",\" + metrics + EOL);\n          }\n          metricsLogBW.flush();\n        } catch (IOException e) {\n          e.printStackTrace();\n        }\n      }\n    }",
      "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/ResourceSchedulerWrapper.java"
    }
  }
}