{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RouterWebHdfsMethods.java",
  "functionName": "redirectURI",
  "functionId": "redirectURI___router-Router(modifiers-final)__ugi-UserGroupInformation(modifiers-final)__delegation-DelegationParam(modifiers-final)__username-UserParam(modifiers-final)__doAsUser-DoAsParam(modifiers-final)__path-String(modifiers-final)__op-HttpOpParam.Op(modifiers-final)__openOffset-long(modifiers-final)__excludeDatanodes-String(modifiers-final)__parameters-Param__?,?__(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterWebHdfsMethods.java",
  "functionStartLine": 411,
  "functionEndLine": 452,
  "numCommitsSeen": 6,
  "timeTaken": 1254,
  "changeHistory": [
    "021a43b1a4bbc8a68c31461e206214a5eadc38dd",
    "6e31a090842f8aeedb331b653b075499f8df6c60"
  ],
  "changeHistoryShort": {
    "021a43b1a4bbc8a68c31461e206214a5eadc38dd": "Ybodychange",
    "6e31a090842f8aeedb331b653b075499f8df6c60": "Yintroduced"
  },
  "changeHistoryDetails": {
    "021a43b1a4bbc8a68c31461e206214a5eadc38dd": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13972. RBF: Support for Delegation Token (WebHDFS). Contributed by CR Hota.\n",
      "commitDate": "24/06/19 9:33 AM",
      "commitName": "021a43b1a4bbc8a68c31461e206214a5eadc38dd",
      "commitAuthor": "Brahma Reddy Battula",
      "commitDateOld": "26/03/19 11:27 AM",
      "commitNameOld": "55fb3c32fb48ca26a629d4d5f3f07e2858d09594",
      "commitAuthorOld": "Takanobu Asanuma",
      "daysBetweenCommits": 89.92,
      "commitsBetweenForRepo": 632,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,42 +1,42 @@\n   private URI redirectURI(final Router router, final UserGroupInformation ugi,\n       final DelegationParam delegation, final UserParam username,\n       final DoAsParam doAsUser, final String path, final HttpOpParam.Op op,\n       final long openOffset, final String excludeDatanodes,\n       final Param\u003c?, ?\u003e... parameters) throws URISyntaxException, IOException {\n     final DatanodeInfo dn \u003d\n         chooseDatanode(router, path, op, openOffset, excludeDatanodes);\n \n     if (dn \u003d\u003d null) {\n       throw new IOException(\"Failed to find datanode, suggest to check cluster\"\n           + \" health. excludeDatanodes\u003d\" + excludeDatanodes);\n     }\n \n     final String delegationQuery;\n     if (!UserGroupInformation.isSecurityEnabled()) {\n       // security disabled\n       delegationQuery \u003d Param.toSortedString(\"\u0026\", doAsUser, username);\n     } else if (delegation.getValue() !\u003d null) {\n       // client has provided a token\n       delegationQuery \u003d \"\u0026\" + delegation;\n     } else {\n       // generate a token\n       final Token\u003c? extends TokenIdentifier\u003e t \u003d generateDelegationToken(\n-          router, ugi, request.getUserPrincipal().getName());\n+          ugi, ugi.getUserName());\n       delegationQuery \u003d \"\u0026delegation\u003d\" + t.encodeToUrlString();\n     }\n \n     final String redirectQuery \u003d op.toQueryString() + delegationQuery\n         + \"\u0026namenoderpcaddress\u003d\" + router.getRouterId()\n         + Param.toSortedString(\"\u0026\", parameters);\n     final String uripath \u003d WebHdfsFileSystem.PATH_PREFIX + path;\n \n     int port \u003d \"http\".equals(getScheme()) ? dn.getInfoPort() :\n         dn.getInfoSecurePort();\n     final URI uri \u003d new URI(getScheme(), null, dn.getHostName(), port, uripath,\n         redirectQuery, null);\n \n     if (LOG.isTraceEnabled()) {\n       LOG.trace(\"redirectURI\u003d{}\", uri);\n     }\n     return uri;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private URI redirectURI(final Router router, final UserGroupInformation ugi,\n      final DelegationParam delegation, final UserParam username,\n      final DoAsParam doAsUser, final String path, final HttpOpParam.Op op,\n      final long openOffset, final String excludeDatanodes,\n      final Param\u003c?, ?\u003e... parameters) throws URISyntaxException, IOException {\n    final DatanodeInfo dn \u003d\n        chooseDatanode(router, path, op, openOffset, excludeDatanodes);\n\n    if (dn \u003d\u003d null) {\n      throw new IOException(\"Failed to find datanode, suggest to check cluster\"\n          + \" health. excludeDatanodes\u003d\" + excludeDatanodes);\n    }\n\n    final String delegationQuery;\n    if (!UserGroupInformation.isSecurityEnabled()) {\n      // security disabled\n      delegationQuery \u003d Param.toSortedString(\"\u0026\", doAsUser, username);\n    } else if (delegation.getValue() !\u003d null) {\n      // client has provided a token\n      delegationQuery \u003d \"\u0026\" + delegation;\n    } else {\n      // generate a token\n      final Token\u003c? extends TokenIdentifier\u003e t \u003d generateDelegationToken(\n          ugi, ugi.getUserName());\n      delegationQuery \u003d \"\u0026delegation\u003d\" + t.encodeToUrlString();\n    }\n\n    final String redirectQuery \u003d op.toQueryString() + delegationQuery\n        + \"\u0026namenoderpcaddress\u003d\" + router.getRouterId()\n        + Param.toSortedString(\"\u0026\", parameters);\n    final String uripath \u003d WebHdfsFileSystem.PATH_PREFIX + path;\n\n    int port \u003d \"http\".equals(getScheme()) ? dn.getInfoPort() :\n        dn.getInfoSecurePort();\n    final URI uri \u003d new URI(getScheme(), null, dn.getHostName(), port, uripath,\n        redirectQuery, null);\n\n    if (LOG.isTraceEnabled()) {\n      LOG.trace(\"redirectURI\u003d{}\", uri);\n    }\n    return uri;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterWebHdfsMethods.java",
      "extendedDetails": {}
    },
    "6e31a090842f8aeedb331b653b075499f8df6c60": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-12512. RBF: Add WebHDFS.\n",
      "commitDate": "23/03/18 8:32 AM",
      "commitName": "6e31a090842f8aeedb331b653b075499f8df6c60",
      "commitAuthor": "weiy",
      "diff": "@@ -0,0 +1,42 @@\n+  private URI redirectURI(final Router router, final UserGroupInformation ugi,\n+      final DelegationParam delegation, final UserParam username,\n+      final DoAsParam doAsUser, final String path, final HttpOpParam.Op op,\n+      final long openOffset, final String excludeDatanodes,\n+      final Param\u003c?, ?\u003e... parameters) throws URISyntaxException, IOException {\n+    final DatanodeInfo dn \u003d\n+        chooseDatanode(router, path, op, openOffset, excludeDatanodes);\n+\n+    if (dn \u003d\u003d null) {\n+      throw new IOException(\"Failed to find datanode, suggest to check cluster\"\n+          + \" health. excludeDatanodes\u003d\" + excludeDatanodes);\n+    }\n+\n+    final String delegationQuery;\n+    if (!UserGroupInformation.isSecurityEnabled()) {\n+      // security disabled\n+      delegationQuery \u003d Param.toSortedString(\"\u0026\", doAsUser, username);\n+    } else if (delegation.getValue() !\u003d null) {\n+      // client has provided a token\n+      delegationQuery \u003d \"\u0026\" + delegation;\n+    } else {\n+      // generate a token\n+      final Token\u003c? extends TokenIdentifier\u003e t \u003d generateDelegationToken(\n+          router, ugi, request.getUserPrincipal().getName());\n+      delegationQuery \u003d \"\u0026delegation\u003d\" + t.encodeToUrlString();\n+    }\n+\n+    final String redirectQuery \u003d op.toQueryString() + delegationQuery\n+        + \"\u0026namenoderpcaddress\u003d\" + router.getRouterId()\n+        + Param.toSortedString(\"\u0026\", parameters);\n+    final String uripath \u003d WebHdfsFileSystem.PATH_PREFIX + path;\n+\n+    int port \u003d \"http\".equals(getScheme()) ? dn.getInfoPort() :\n+        dn.getInfoSecurePort();\n+    final URI uri \u003d new URI(getScheme(), null, dn.getHostName(), port, uripath,\n+        redirectQuery, null);\n+\n+    if (LOG.isTraceEnabled()) {\n+      LOG.trace(\"redirectURI\u003d{}\", uri);\n+    }\n+    return uri;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private URI redirectURI(final Router router, final UserGroupInformation ugi,\n      final DelegationParam delegation, final UserParam username,\n      final DoAsParam doAsUser, final String path, final HttpOpParam.Op op,\n      final long openOffset, final String excludeDatanodes,\n      final Param\u003c?, ?\u003e... parameters) throws URISyntaxException, IOException {\n    final DatanodeInfo dn \u003d\n        chooseDatanode(router, path, op, openOffset, excludeDatanodes);\n\n    if (dn \u003d\u003d null) {\n      throw new IOException(\"Failed to find datanode, suggest to check cluster\"\n          + \" health. excludeDatanodes\u003d\" + excludeDatanodes);\n    }\n\n    final String delegationQuery;\n    if (!UserGroupInformation.isSecurityEnabled()) {\n      // security disabled\n      delegationQuery \u003d Param.toSortedString(\"\u0026\", doAsUser, username);\n    } else if (delegation.getValue() !\u003d null) {\n      // client has provided a token\n      delegationQuery \u003d \"\u0026\" + delegation;\n    } else {\n      // generate a token\n      final Token\u003c? extends TokenIdentifier\u003e t \u003d generateDelegationToken(\n          router, ugi, request.getUserPrincipal().getName());\n      delegationQuery \u003d \"\u0026delegation\u003d\" + t.encodeToUrlString();\n    }\n\n    final String redirectQuery \u003d op.toQueryString() + delegationQuery\n        + \"\u0026namenoderpcaddress\u003d\" + router.getRouterId()\n        + Param.toSortedString(\"\u0026\", parameters);\n    final String uripath \u003d WebHdfsFileSystem.PATH_PREFIX + path;\n\n    int port \u003d \"http\".equals(getScheme()) ? dn.getInfoPort() :\n        dn.getInfoSecurePort();\n    final URI uri \u003d new URI(getScheme(), null, dn.getHostName(), port, uripath,\n        redirectQuery, null);\n\n    if (LOG.isTraceEnabled()) {\n      LOG.trace(\"redirectURI\u003d{}\", uri);\n    }\n    return uri;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterWebHdfsMethods.java"
    }
  }
}