{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JobResourceUploader.java",
  "functionName": "disableErasureCodingForPath",
  "functionId": "disableErasureCodingForPath___path-Path",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/JobResourceUploader.java",
  "functionStartLine": 902,
  "functionEndLine": 923,
  "numCommitsSeen": 31,
  "timeTaken": 2403,
  "changeHistory": [
    "6e6945cd78d76c6beaec85c963f27e28bf96c0f2",
    "0adc0471d0c06f66a31060f270dcb50a7b4ffafa"
  ],
  "changeHistoryShort": {
    "6e6945cd78d76c6beaec85c963f27e28bf96c0f2": "Ymultichange(Yparameterchange,Ybodychange)",
    "0adc0471d0c06f66a31060f270dcb50a7b4ffafa": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6e6945cd78d76c6beaec85c963f27e28bf96c0f2": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "MAPREDUCE-7059. Downward Compatibility issue: MR job fails because of unknown setErasureCodingPolicy method from 3.x client to HDFS 2.x cluster. Contributed by Jiandan Yang.\n",
      "commitDate": "28/02/18 6:18 PM",
      "commitName": "6e6945cd78d76c6beaec85c963f27e28bf96c0f2",
      "commitAuthor": "Weiwei Yang",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "MAPREDUCE-7059. Downward Compatibility issue: MR job fails because of unknown setErasureCodingPolicy method from 3.x client to HDFS 2.x cluster. Contributed by Jiandan Yang.\n",
          "commitDate": "28/02/18 6:18 PM",
          "commitName": "6e6945cd78d76c6beaec85c963f27e28bf96c0f2",
          "commitAuthor": "Weiwei Yang",
          "commitDateOld": "02/11/17 1:43 AM",
          "commitNameOld": "178751ed8c9d47038acf8616c226f1f52e884feb",
          "commitAuthorOld": "Akira Ajisaka",
          "daysBetweenCommits": 118.73,
          "commitsBetweenForRepo": 784,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,22 @@\n-  private void disableErasureCodingForPath(FileSystem fs, Path path)\n+  private void disableErasureCodingForPath(Path path)\n       throws IOException {\n-    if (jtFs instanceof DistributedFileSystem) {\n-      LOG.info(\"Disabling Erasure Coding for path: \" + path);\n-      DistributedFileSystem dfs \u003d (DistributedFileSystem) jtFs;\n-      dfs.setErasureCodingPolicy(path,\n-          SystemErasureCodingPolicies.getReplicationPolicy().getName());\n+    try {\n+      if (jtFs instanceof DistributedFileSystem) {\n+        LOG.info(\"Disabling Erasure Coding for path: \" + path);\n+        DistributedFileSystem dfs \u003d (DistributedFileSystem) jtFs;\n+        dfs.setErasureCodingPolicy(path,\n+            SystemErasureCodingPolicies.getReplicationPolicy().getName());\n+      }\n+    } catch (RemoteException e) {\n+      if (!RpcNoSuchMethodException.class.getName().equals(e.getClassName())) {\n+        throw e;\n+      } else {\n+        if (LOG.isDebugEnabled()) {\n+          LOG.debug(\n+              \"Ignore disabling erasure coding for path {} because method \"\n+                  + \"disableErasureCodingForPath doesn\u0027t exist, probably \"\n+                  + \"talking to a lower version HDFS.\", path.toString(), e);\n+        }\n+      }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void disableErasureCodingForPath(Path path)\n      throws IOException {\n    try {\n      if (jtFs instanceof DistributedFileSystem) {\n        LOG.info(\"Disabling Erasure Coding for path: \" + path);\n        DistributedFileSystem dfs \u003d (DistributedFileSystem) jtFs;\n        dfs.setErasureCodingPolicy(path,\n            SystemErasureCodingPolicies.getReplicationPolicy().getName());\n      }\n    } catch (RemoteException e) {\n      if (!RpcNoSuchMethodException.class.getName().equals(e.getClassName())) {\n        throw e;\n      } else {\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\n              \"Ignore disabling erasure coding for path {} because method \"\n                  + \"disableErasureCodingForPath doesn\u0027t exist, probably \"\n                  + \"talking to a lower version HDFS.\", path.toString(), e);\n        }\n      }\n    }\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/JobResourceUploader.java",
          "extendedDetails": {
            "oldValue": "[fs-FileSystem, path-Path]",
            "newValue": "[path-Path]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-7059. Downward Compatibility issue: MR job fails because of unknown setErasureCodingPolicy method from 3.x client to HDFS 2.x cluster. Contributed by Jiandan Yang.\n",
          "commitDate": "28/02/18 6:18 PM",
          "commitName": "6e6945cd78d76c6beaec85c963f27e28bf96c0f2",
          "commitAuthor": "Weiwei Yang",
          "commitDateOld": "02/11/17 1:43 AM",
          "commitNameOld": "178751ed8c9d47038acf8616c226f1f52e884feb",
          "commitAuthorOld": "Akira Ajisaka",
          "daysBetweenCommits": 118.73,
          "commitsBetweenForRepo": 784,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,22 @@\n-  private void disableErasureCodingForPath(FileSystem fs, Path path)\n+  private void disableErasureCodingForPath(Path path)\n       throws IOException {\n-    if (jtFs instanceof DistributedFileSystem) {\n-      LOG.info(\"Disabling Erasure Coding for path: \" + path);\n-      DistributedFileSystem dfs \u003d (DistributedFileSystem) jtFs;\n-      dfs.setErasureCodingPolicy(path,\n-          SystemErasureCodingPolicies.getReplicationPolicy().getName());\n+    try {\n+      if (jtFs instanceof DistributedFileSystem) {\n+        LOG.info(\"Disabling Erasure Coding for path: \" + path);\n+        DistributedFileSystem dfs \u003d (DistributedFileSystem) jtFs;\n+        dfs.setErasureCodingPolicy(path,\n+            SystemErasureCodingPolicies.getReplicationPolicy().getName());\n+      }\n+    } catch (RemoteException e) {\n+      if (!RpcNoSuchMethodException.class.getName().equals(e.getClassName())) {\n+        throw e;\n+      } else {\n+        if (LOG.isDebugEnabled()) {\n+          LOG.debug(\n+              \"Ignore disabling erasure coding for path {} because method \"\n+                  + \"disableErasureCodingForPath doesn\u0027t exist, probably \"\n+                  + \"talking to a lower version HDFS.\", path.toString(), e);\n+        }\n+      }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void disableErasureCodingForPath(Path path)\n      throws IOException {\n    try {\n      if (jtFs instanceof DistributedFileSystem) {\n        LOG.info(\"Disabling Erasure Coding for path: \" + path);\n        DistributedFileSystem dfs \u003d (DistributedFileSystem) jtFs;\n        dfs.setErasureCodingPolicy(path,\n            SystemErasureCodingPolicies.getReplicationPolicy().getName());\n      }\n    } catch (RemoteException e) {\n      if (!RpcNoSuchMethodException.class.getName().equals(e.getClassName())) {\n        throw e;\n      } else {\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\n              \"Ignore disabling erasure coding for path {} because method \"\n                  + \"disableErasureCodingForPath doesn\u0027t exist, probably \"\n                  + \"talking to a lower version HDFS.\", path.toString(), e);\n        }\n      }\n    }\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/JobResourceUploader.java",
          "extendedDetails": {}
        }
      ]
    },
    "0adc0471d0c06f66a31060f270dcb50a7b4ffafa": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-6954. Disable erasure coding for files that are uploaded to the MR staging area (pbacsko via rkanter)\n",
      "commitDate": "18/09/17 10:40 AM",
      "commitName": "0adc0471d0c06f66a31060f270dcb50a7b4ffafa",
      "commitAuthor": "Robert Kanter",
      "diff": "@@ -0,0 +1,9 @@\n+  private void disableErasureCodingForPath(FileSystem fs, Path path)\n+      throws IOException {\n+    if (jtFs instanceof DistributedFileSystem) {\n+      LOG.info(\"Disabling Erasure Coding for path: \" + path);\n+      DistributedFileSystem dfs \u003d (DistributedFileSystem) jtFs;\n+      dfs.setErasureCodingPolicy(path,\n+          SystemErasureCodingPolicies.getReplicationPolicy().getName());\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void disableErasureCodingForPath(FileSystem fs, Path path)\n      throws IOException {\n    if (jtFs instanceof DistributedFileSystem) {\n      LOG.info(\"Disabling Erasure Coding for path: \" + path);\n      DistributedFileSystem dfs \u003d (DistributedFileSystem) jtFs;\n      dfs.setErasureCodingPolicy(path,\n          SystemErasureCodingPolicies.getReplicationPolicy().getName());\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/JobResourceUploader.java"
    }
  }
}