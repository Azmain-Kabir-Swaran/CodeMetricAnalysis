{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DirectoryWithSnapshotFeature.java",
  "functionName": "destroyDiffAndCollectBlocks",
  "functionId": "destroyDiffAndCollectBlocks___reclaimContext-INode.ReclaimContext__currentINode-INodeDirectory",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/DirectoryWithSnapshotFeature.java",
  "functionStartLine": 286,
  "functionEndLine": 294,
  "numCommitsSeen": 172,
  "timeTaken": 6130,
  "changeHistory": [
    "b2c85db86c9a62b0a03ee87547265077f664970a",
    "4536399d47f6c061e149e2504600804a0f1e093d",
    "00fe1ed3a4b3ee35fe24be257ec36445d2f44d63",
    "5dae97a584d30cef3e34141edfaca49c4ec57913",
    "50ae1a6664a92619aa683d2a864d0da9fb4af026",
    "44a6560b5da3f79d2299579a36e7a2a60a91f823",
    "72d783374c1e302492d7ce537222b563241038bb",
    "0fa5cad0b27780c27a284c23101b1099d4886506",
    "92e0416ced279a910616985bf11fa3f8b1b1de9b",
    "9c6a7bebe23ffb85d7fd95607f3b7bb4fe82dbe4",
    "3b3ea5c4220e674064c7603a449f63904c10bac1"
  ],
  "changeHistoryShort": {
    "b2c85db86c9a62b0a03ee87547265077f664970a": "Ymultichange(Yreturntypechange,Ybodychange)",
    "4536399d47f6c061e149e2504600804a0f1e093d": "Ymultichange(Yparameterchange,Ybodychange)",
    "00fe1ed3a4b3ee35fe24be257ec36445d2f44d63": "Ybodychange",
    "5dae97a584d30cef3e34141edfaca49c4ec57913": "Ymultichange(Yparameterchange,Yreturntypechange,Ybodychange)",
    "50ae1a6664a92619aa683d2a864d0da9fb4af026": "Ybodychange",
    "44a6560b5da3f79d2299579a36e7a2a60a91f823": "Yfilerename",
    "72d783374c1e302492d7ce537222b563241038bb": "Ybodychange",
    "0fa5cad0b27780c27a284c23101b1099d4886506": "Ybodychange",
    "92e0416ced279a910616985bf11fa3f8b1b1de9b": "Ymultichange(Yparameterchange,Ybodychange)",
    "9c6a7bebe23ffb85d7fd95607f3b7bb4fe82dbe4": "Ybodychange",
    "3b3ea5c4220e674064c7603a449f63904c10bac1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b2c85db86c9a62b0a03ee87547265077f664970a": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-7728. Avoid updating quota usage while loading edits. Contributed by Jing Zhao.\n",
      "commitDate": "13/05/15 9:50 PM",
      "commitName": "b2c85db86c9a62b0a03ee87547265077f664970a",
      "commitAuthor": "Haohui Mai",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-7728. Avoid updating quota usage while loading edits. Contributed by Jing Zhao.\n",
          "commitDate": "13/05/15 9:50 PM",
          "commitName": "b2c85db86c9a62b0a03ee87547265077f664970a",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "09/05/15 10:51 PM",
          "commitNameOld": "4536399d47f6c061e149e2504600804a0f1e093d",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 3.96,
          "commitsBetweenForRepo": 43,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,9 @@\n-    QuotaCounts destroyDiffAndCollectBlocks(\n+    void destroyDiffAndCollectBlocks(\n         INode.ReclaimContext reclaimContext, INodeDirectory currentINode) {\n       // this diff has been deleted\n-      QuotaCounts counts \u003d new QuotaCounts.Builder().build();\n-      counts.add(diff.destroyDeletedList(reclaimContext));\n+      diff.destroyDeletedList(reclaimContext);\n       INodeDirectoryAttributes snapshotINode \u003d getSnapshotINode();\n       if (snapshotINode !\u003d null \u0026\u0026 snapshotINode.getAclFeature() !\u003d null) {\n         AclStorage.removeAclFeature(snapshotINode.getAclFeature());\n       }\n-      return counts;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    void destroyDiffAndCollectBlocks(\n        INode.ReclaimContext reclaimContext, INodeDirectory currentINode) {\n      // this diff has been deleted\n      diff.destroyDeletedList(reclaimContext);\n      INodeDirectoryAttributes snapshotINode \u003d getSnapshotINode();\n      if (snapshotINode !\u003d null \u0026\u0026 snapshotINode.getAclFeature() !\u003d null) {\n        AclStorage.removeAclFeature(snapshotINode.getAclFeature());\n      }\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/DirectoryWithSnapshotFeature.java",
          "extendedDetails": {
            "oldValue": "QuotaCounts",
            "newValue": "void"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-7728. Avoid updating quota usage while loading edits. Contributed by Jing Zhao.\n",
          "commitDate": "13/05/15 9:50 PM",
          "commitName": "b2c85db86c9a62b0a03ee87547265077f664970a",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "09/05/15 10:51 PM",
          "commitNameOld": "4536399d47f6c061e149e2504600804a0f1e093d",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 3.96,
          "commitsBetweenForRepo": 43,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,9 @@\n-    QuotaCounts destroyDiffAndCollectBlocks(\n+    void destroyDiffAndCollectBlocks(\n         INode.ReclaimContext reclaimContext, INodeDirectory currentINode) {\n       // this diff has been deleted\n-      QuotaCounts counts \u003d new QuotaCounts.Builder().build();\n-      counts.add(diff.destroyDeletedList(reclaimContext));\n+      diff.destroyDeletedList(reclaimContext);\n       INodeDirectoryAttributes snapshotINode \u003d getSnapshotINode();\n       if (snapshotINode !\u003d null \u0026\u0026 snapshotINode.getAclFeature() !\u003d null) {\n         AclStorage.removeAclFeature(snapshotINode.getAclFeature());\n       }\n-      return counts;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    void destroyDiffAndCollectBlocks(\n        INode.ReclaimContext reclaimContext, INodeDirectory currentINode) {\n      // this diff has been deleted\n      diff.destroyDeletedList(reclaimContext);\n      INodeDirectoryAttributes snapshotINode \u003d getSnapshotINode();\n      if (snapshotINode !\u003d null \u0026\u0026 snapshotINode.getAclFeature() !\u003d null) {\n        AclStorage.removeAclFeature(snapshotINode.getAclFeature());\n      }\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/DirectoryWithSnapshotFeature.java",
          "extendedDetails": {}
        }
      ]
    },
    "4536399d47f6c061e149e2504600804a0f1e093d": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-8357. Consolidate parameters of INode.CleanSubtree() into a parameter objects. Contributed by Li Lu.\n",
      "commitDate": "09/05/15 10:51 PM",
      "commitName": "4536399d47f6c061e149e2504600804a0f1e093d",
      "commitAuthor": "Haohui Mai",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-8357. Consolidate parameters of INode.CleanSubtree() into a parameter objects. Contributed by Li Lu.\n",
          "commitDate": "09/05/15 10:51 PM",
          "commitName": "4536399d47f6c061e149e2504600804a0f1e093d",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "08/05/15 11:04 PM",
          "commitNameOld": "00fe1ed3a4b3ee35fe24be257ec36445d2f44d63",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 0.99,
          "commitsBetweenForRepo": 7,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,11 @@\n     QuotaCounts destroyDiffAndCollectBlocks(\n-        BlockStoragePolicySuite bsps, INodeDirectory currentINode,\n-        BlocksMapUpdateInfo collectedBlocks, final List\u003cINode\u003e removedINodes) {\n+        INode.ReclaimContext reclaimContext, INodeDirectory currentINode) {\n       // this diff has been deleted\n       QuotaCounts counts \u003d new QuotaCounts.Builder().build();\n-      counts.add(diff.destroyDeletedList(bsps, collectedBlocks, removedINodes,\n-                                         null));\n+      counts.add(diff.destroyDeletedList(reclaimContext));\n       INodeDirectoryAttributes snapshotINode \u003d getSnapshotINode();\n       if (snapshotINode !\u003d null \u0026\u0026 snapshotINode.getAclFeature() !\u003d null) {\n         AclStorage.removeAclFeature(snapshotINode.getAclFeature());\n       }\n       return counts;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    QuotaCounts destroyDiffAndCollectBlocks(\n        INode.ReclaimContext reclaimContext, INodeDirectory currentINode) {\n      // this diff has been deleted\n      QuotaCounts counts \u003d new QuotaCounts.Builder().build();\n      counts.add(diff.destroyDeletedList(reclaimContext));\n      INodeDirectoryAttributes snapshotINode \u003d getSnapshotINode();\n      if (snapshotINode !\u003d null \u0026\u0026 snapshotINode.getAclFeature() !\u003d null) {\n        AclStorage.removeAclFeature(snapshotINode.getAclFeature());\n      }\n      return counts;\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/DirectoryWithSnapshotFeature.java",
          "extendedDetails": {
            "oldValue": "[bsps-BlockStoragePolicySuite, currentINode-INodeDirectory, collectedBlocks-BlocksMapUpdateInfo, removedINodes-List\u003cINode\u003e(modifiers-final)]",
            "newValue": "[reclaimContext-INode.ReclaimContext, currentINode-INodeDirectory]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-8357. Consolidate parameters of INode.CleanSubtree() into a parameter objects. Contributed by Li Lu.\n",
          "commitDate": "09/05/15 10:51 PM",
          "commitName": "4536399d47f6c061e149e2504600804a0f1e093d",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "08/05/15 11:04 PM",
          "commitNameOld": "00fe1ed3a4b3ee35fe24be257ec36445d2f44d63",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 0.99,
          "commitsBetweenForRepo": 7,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,11 @@\n     QuotaCounts destroyDiffAndCollectBlocks(\n-        BlockStoragePolicySuite bsps, INodeDirectory currentINode,\n-        BlocksMapUpdateInfo collectedBlocks, final List\u003cINode\u003e removedINodes) {\n+        INode.ReclaimContext reclaimContext, INodeDirectory currentINode) {\n       // this diff has been deleted\n       QuotaCounts counts \u003d new QuotaCounts.Builder().build();\n-      counts.add(diff.destroyDeletedList(bsps, collectedBlocks, removedINodes,\n-                                         null));\n+      counts.add(diff.destroyDeletedList(reclaimContext));\n       INodeDirectoryAttributes snapshotINode \u003d getSnapshotINode();\n       if (snapshotINode !\u003d null \u0026\u0026 snapshotINode.getAclFeature() !\u003d null) {\n         AclStorage.removeAclFeature(snapshotINode.getAclFeature());\n       }\n       return counts;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    QuotaCounts destroyDiffAndCollectBlocks(\n        INode.ReclaimContext reclaimContext, INodeDirectory currentINode) {\n      // this diff has been deleted\n      QuotaCounts counts \u003d new QuotaCounts.Builder().build();\n      counts.add(diff.destroyDeletedList(reclaimContext));\n      INodeDirectoryAttributes snapshotINode \u003d getSnapshotINode();\n      if (snapshotINode !\u003d null \u0026\u0026 snapshotINode.getAclFeature() !\u003d null) {\n        AclStorage.removeAclFeature(snapshotINode.getAclFeature());\n      }\n      return counts;\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/DirectoryWithSnapshotFeature.java",
          "extendedDetails": {}
        }
      ]
    },
    "00fe1ed3a4b3ee35fe24be257ec36445d2f44d63": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6757. Simplify lease manager with INodeID. Contributed by Haohui Mai.\n",
      "commitDate": "08/05/15 11:04 PM",
      "commitName": "00fe1ed3a4b3ee35fe24be257ec36445d2f44d63",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "02/04/15 9:20 PM",
      "commitNameOld": "72f6bd4893dcf10d6dad24753f9be99505a87a1f",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 36.07,
      "commitsBetweenForRepo": 375,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,13 @@\n     QuotaCounts destroyDiffAndCollectBlocks(\n         BlockStoragePolicySuite bsps, INodeDirectory currentINode,\n         BlocksMapUpdateInfo collectedBlocks, final List\u003cINode\u003e removedINodes) {\n       // this diff has been deleted\n       QuotaCounts counts \u003d new QuotaCounts.Builder().build();\n-      counts.add(diff.destroyDeletedList(bsps, collectedBlocks, removedINodes));\n+      counts.add(diff.destroyDeletedList(bsps, collectedBlocks, removedINodes,\n+                                         null));\n       INodeDirectoryAttributes snapshotINode \u003d getSnapshotINode();\n       if (snapshotINode !\u003d null \u0026\u0026 snapshotINode.getAclFeature() !\u003d null) {\n         AclStorage.removeAclFeature(snapshotINode.getAclFeature());\n       }\n       return counts;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    QuotaCounts destroyDiffAndCollectBlocks(\n        BlockStoragePolicySuite bsps, INodeDirectory currentINode,\n        BlocksMapUpdateInfo collectedBlocks, final List\u003cINode\u003e removedINodes) {\n      // this diff has been deleted\n      QuotaCounts counts \u003d new QuotaCounts.Builder().build();\n      counts.add(diff.destroyDeletedList(bsps, collectedBlocks, removedINodes,\n                                         null));\n      INodeDirectoryAttributes snapshotINode \u003d getSnapshotINode();\n      if (snapshotINode !\u003d null \u0026\u0026 snapshotINode.getAclFeature() !\u003d null) {\n        AclStorage.removeAclFeature(snapshotINode.getAclFeature());\n      }\n      return counts;\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/DirectoryWithSnapshotFeature.java",
      "extendedDetails": {}
    },
    "5dae97a584d30cef3e34141edfaca49c4ec57913": {
      "type": "Ymultichange(Yparameterchange,Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-7723. Quota By Storage Type namenode implemenation. (Contributed by Xiaoyu Yao)\n",
      "commitDate": "11/02/15 10:41 AM",
      "commitName": "5dae97a584d30cef3e34141edfaca49c4ec57913",
      "commitAuthor": "Arpit Agarwal",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-7723. Quota By Storage Type namenode implemenation. (Contributed by Xiaoyu Yao)\n",
          "commitDate": "11/02/15 10:41 AM",
          "commitName": "5dae97a584d30cef3e34141edfaca49c4ec57913",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "02/02/15 4:32 PM",
          "commitNameOld": "8cb473124c1cf1c6f68ead7bde06558ebf7ce47e",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 8.76,
          "commitsBetweenForRepo": 109,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,12 @@\n-    Quota.Counts destroyDiffAndCollectBlocks(INodeDirectory currentINode,\n+    QuotaCounts destroyDiffAndCollectBlocks(\n+        BlockStoragePolicySuite bsps, INodeDirectory currentINode,\n         BlocksMapUpdateInfo collectedBlocks, final List\u003cINode\u003e removedINodes) {\n       // this diff has been deleted\n-      Quota.Counts counts \u003d Quota.Counts.newInstance();\n-      counts.add(diff.destroyDeletedList(collectedBlocks, removedINodes));\n+      QuotaCounts counts \u003d new QuotaCounts.Builder().build();\n+      counts.add(diff.destroyDeletedList(bsps, collectedBlocks, removedINodes));\n       INodeDirectoryAttributes snapshotINode \u003d getSnapshotINode();\n       if (snapshotINode !\u003d null \u0026\u0026 snapshotINode.getAclFeature() !\u003d null) {\n         AclStorage.removeAclFeature(snapshotINode.getAclFeature());\n       }\n       return counts;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    QuotaCounts destroyDiffAndCollectBlocks(\n        BlockStoragePolicySuite bsps, INodeDirectory currentINode,\n        BlocksMapUpdateInfo collectedBlocks, final List\u003cINode\u003e removedINodes) {\n      // this diff has been deleted\n      QuotaCounts counts \u003d new QuotaCounts.Builder().build();\n      counts.add(diff.destroyDeletedList(bsps, collectedBlocks, removedINodes));\n      INodeDirectoryAttributes snapshotINode \u003d getSnapshotINode();\n      if (snapshotINode !\u003d null \u0026\u0026 snapshotINode.getAclFeature() !\u003d null) {\n        AclStorage.removeAclFeature(snapshotINode.getAclFeature());\n      }\n      return counts;\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/DirectoryWithSnapshotFeature.java",
          "extendedDetails": {
            "oldValue": "[currentINode-INodeDirectory, collectedBlocks-BlocksMapUpdateInfo, removedINodes-List\u003cINode\u003e(modifiers-final)]",
            "newValue": "[bsps-BlockStoragePolicySuite, currentINode-INodeDirectory, collectedBlocks-BlocksMapUpdateInfo, removedINodes-List\u003cINode\u003e(modifiers-final)]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-7723. Quota By Storage Type namenode implemenation. (Contributed by Xiaoyu Yao)\n",
          "commitDate": "11/02/15 10:41 AM",
          "commitName": "5dae97a584d30cef3e34141edfaca49c4ec57913",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "02/02/15 4:32 PM",
          "commitNameOld": "8cb473124c1cf1c6f68ead7bde06558ebf7ce47e",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 8.76,
          "commitsBetweenForRepo": 109,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,12 @@\n-    Quota.Counts destroyDiffAndCollectBlocks(INodeDirectory currentINode,\n+    QuotaCounts destroyDiffAndCollectBlocks(\n+        BlockStoragePolicySuite bsps, INodeDirectory currentINode,\n         BlocksMapUpdateInfo collectedBlocks, final List\u003cINode\u003e removedINodes) {\n       // this diff has been deleted\n-      Quota.Counts counts \u003d Quota.Counts.newInstance();\n-      counts.add(diff.destroyDeletedList(collectedBlocks, removedINodes));\n+      QuotaCounts counts \u003d new QuotaCounts.Builder().build();\n+      counts.add(diff.destroyDeletedList(bsps, collectedBlocks, removedINodes));\n       INodeDirectoryAttributes snapshotINode \u003d getSnapshotINode();\n       if (snapshotINode !\u003d null \u0026\u0026 snapshotINode.getAclFeature() !\u003d null) {\n         AclStorage.removeAclFeature(snapshotINode.getAclFeature());\n       }\n       return counts;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    QuotaCounts destroyDiffAndCollectBlocks(\n        BlockStoragePolicySuite bsps, INodeDirectory currentINode,\n        BlocksMapUpdateInfo collectedBlocks, final List\u003cINode\u003e removedINodes) {\n      // this diff has been deleted\n      QuotaCounts counts \u003d new QuotaCounts.Builder().build();\n      counts.add(diff.destroyDeletedList(bsps, collectedBlocks, removedINodes));\n      INodeDirectoryAttributes snapshotINode \u003d getSnapshotINode();\n      if (snapshotINode !\u003d null \u0026\u0026 snapshotINode.getAclFeature() !\u003d null) {\n        AclStorage.removeAclFeature(snapshotINode.getAclFeature());\n      }\n      return counts;\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/DirectoryWithSnapshotFeature.java",
          "extendedDetails": {
            "oldValue": "Quota.Counts",
            "newValue": "QuotaCounts"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-7723. Quota By Storage Type namenode implemenation. (Contributed by Xiaoyu Yao)\n",
          "commitDate": "11/02/15 10:41 AM",
          "commitName": "5dae97a584d30cef3e34141edfaca49c4ec57913",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "02/02/15 4:32 PM",
          "commitNameOld": "8cb473124c1cf1c6f68ead7bde06558ebf7ce47e",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 8.76,
          "commitsBetweenForRepo": 109,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,12 @@\n-    Quota.Counts destroyDiffAndCollectBlocks(INodeDirectory currentINode,\n+    QuotaCounts destroyDiffAndCollectBlocks(\n+        BlockStoragePolicySuite bsps, INodeDirectory currentINode,\n         BlocksMapUpdateInfo collectedBlocks, final List\u003cINode\u003e removedINodes) {\n       // this diff has been deleted\n-      Quota.Counts counts \u003d Quota.Counts.newInstance();\n-      counts.add(diff.destroyDeletedList(collectedBlocks, removedINodes));\n+      QuotaCounts counts \u003d new QuotaCounts.Builder().build();\n+      counts.add(diff.destroyDeletedList(bsps, collectedBlocks, removedINodes));\n       INodeDirectoryAttributes snapshotINode \u003d getSnapshotINode();\n       if (snapshotINode !\u003d null \u0026\u0026 snapshotINode.getAclFeature() !\u003d null) {\n         AclStorage.removeAclFeature(snapshotINode.getAclFeature());\n       }\n       return counts;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    QuotaCounts destroyDiffAndCollectBlocks(\n        BlockStoragePolicySuite bsps, INodeDirectory currentINode,\n        BlocksMapUpdateInfo collectedBlocks, final List\u003cINode\u003e removedINodes) {\n      // this diff has been deleted\n      QuotaCounts counts \u003d new QuotaCounts.Builder().build();\n      counts.add(diff.destroyDeletedList(bsps, collectedBlocks, removedINodes));\n      INodeDirectoryAttributes snapshotINode \u003d getSnapshotINode();\n      if (snapshotINode !\u003d null \u0026\u0026 snapshotINode.getAclFeature() !\u003d null) {\n        AclStorage.removeAclFeature(snapshotINode.getAclFeature());\n      }\n      return counts;\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/DirectoryWithSnapshotFeature.java",
          "extendedDetails": {}
        }
      ]
    },
    "50ae1a6664a92619aa683d2a864d0da9fb4af026": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7456. De-duplicate AclFeature instances with same AclEntries do reduce memory footprint of NameNode (Contributed by Vinayakumar B)\n",
      "commitDate": "22/12/14 11:05 PM",
      "commitName": "50ae1a6664a92619aa683d2a864d0da9fb4af026",
      "commitAuthor": "Vinayakumar B",
      "commitDateOld": "27/08/14 10:26 AM",
      "commitNameOld": "6b441d227a8806e87224106a81361bd61f0b3d0b",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 117.57,
      "commitsBetweenForRepo": 1095,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,11 @@\n     Quota.Counts destroyDiffAndCollectBlocks(INodeDirectory currentINode,\n         BlocksMapUpdateInfo collectedBlocks, final List\u003cINode\u003e removedINodes) {\n       // this diff has been deleted\n       Quota.Counts counts \u003d Quota.Counts.newInstance();\n       counts.add(diff.destroyDeletedList(collectedBlocks, removedINodes));\n+      INodeDirectoryAttributes snapshotINode \u003d getSnapshotINode();\n+      if (snapshotINode !\u003d null \u0026\u0026 snapshotINode.getAclFeature() !\u003d null) {\n+        AclStorage.removeAclFeature(snapshotINode.getAclFeature());\n+      }\n       return counts;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    Quota.Counts destroyDiffAndCollectBlocks(INodeDirectory currentINode,\n        BlocksMapUpdateInfo collectedBlocks, final List\u003cINode\u003e removedINodes) {\n      // this diff has been deleted\n      Quota.Counts counts \u003d Quota.Counts.newInstance();\n      counts.add(diff.destroyDeletedList(collectedBlocks, removedINodes));\n      INodeDirectoryAttributes snapshotINode \u003d getSnapshotINode();\n      if (snapshotINode !\u003d null \u0026\u0026 snapshotINode.getAclFeature() !\u003d null) {\n        AclStorage.removeAclFeature(snapshotINode.getAclFeature());\n      }\n      return counts;\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/DirectoryWithSnapshotFeature.java",
      "extendedDetails": {}
    },
    "44a6560b5da3f79d2299579a36e7a2a60a91f823": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-5632. Flatten INodeDirectory hierarchy: Replace INodeDirectoryWithSnapshot with DirectoryWithSnapshotFeature.  Contributed by jing9 \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1550917 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/12/13 2:13 AM",
      "commitName": "44a6560b5da3f79d2299579a36e7a2a60a91f823",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "13/12/13 6:00 PM",
      "commitNameOld": "d63cfdbf1a5389acb27e8cd61f4c14d8eaedb26f",
      "commitAuthorOld": "Zhijie Shen",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    Quota.Counts destroyDiffAndCollectBlocks(INodeDirectory currentINode,\n        BlocksMapUpdateInfo collectedBlocks, final List\u003cINode\u003e removedINodes) {\n      // this diff has been deleted\n      Quota.Counts counts \u003d Quota.Counts.newInstance();\n      counts.add(diff.destroyDeletedList(collectedBlocks, removedINodes));\n      return counts;\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/DirectoryWithSnapshotFeature.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/INodeDirectoryWithSnapshot.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/DirectoryWithSnapshotFeature.java"
      }
    },
    "72d783374c1e302492d7ce537222b563241038bb": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4791. Update and fix deletion of reference inode.  Contributed by Jing Zhao\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1479198 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/05/13 3:10 PM",
      "commitName": "72d783374c1e302492d7ce537222b563241038bb",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "30/04/13 2:05 PM",
      "commitNameOld": "3a3e0f573129c8308332d4b301a9319ee579d85a",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 4.05,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,7 @@\n     Quota.Counts destroyDiffAndCollectBlocks(INodeDirectory currentINode,\n         BlocksMapUpdateInfo collectedBlocks, final List\u003cINode\u003e removedINodes) {\n       // this diff has been deleted\n       Quota.Counts counts \u003d Quota.Counts.newInstance();\n-      List\u003cINodeReference\u003e refNodes \u003d new ArrayList\u003cINodeReference\u003e();\n-      counts.add(diff.destroyDeletedList(collectedBlocks, removedINodes,\n-          refNodes));\n-      for (INodeReference ref : refNodes) {\n-        // if the node is a reference node, we should continue the \n-        // snapshot deletion process\n-        if (ref instanceof INodeReference.DstReference) {\n-          // if ref is a DstReference instance, we should delete all the files\n-          // created after the rename\n-          destroyDstSnapshot(ref, snapshot, null, collectedBlocks,\n-              removedINodes);\n-        } else if (ref instanceof INodeReference.WithName) {\n-          // ref should have been renamed again. We only need to delete\n-          // the snapshot in its subtree.\n-          try {\n-            ref.cleanSubtree(snapshot, null, collectedBlocks, removedINodes);\n-          } catch (QuotaExceededException e) {\n-            LOG.error(\"Error: should not throw QuotaExceededException\", e);\n-          }\n-        }\n-      }\n+      counts.add(diff.destroyDeletedList(collectedBlocks, removedINodes));\n       return counts;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    Quota.Counts destroyDiffAndCollectBlocks(INodeDirectory currentINode,\n        BlocksMapUpdateInfo collectedBlocks, final List\u003cINode\u003e removedINodes) {\n      // this diff has been deleted\n      Quota.Counts counts \u003d Quota.Counts.newInstance();\n      counts.add(diff.destroyDeletedList(collectedBlocks, removedINodes));\n      return counts;\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/INodeDirectoryWithSnapshot.java",
      "extendedDetails": {}
    },
    "0fa5cad0b27780c27a284c23101b1099d4886506": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4686. Update quota computation for rename and INodeReference.  Contributed by Jing Zhao\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1471647 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/04/13 1:31 PM",
      "commitName": "0fa5cad0b27780c27a284c23101b1099d4886506",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "23/04/13 7:11 PM",
      "commitNameOld": "3a812e9f3ae66cfa525faceb5af9085a4cc37232",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 0.76,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,27 @@\n     Quota.Counts destroyDiffAndCollectBlocks(INodeDirectory currentINode,\n         BlocksMapUpdateInfo collectedBlocks, final List\u003cINode\u003e removedINodes) {\n       // this diff has been deleted\n       Quota.Counts counts \u003d Quota.Counts.newInstance();\n       List\u003cINodeReference\u003e refNodes \u003d new ArrayList\u003cINodeReference\u003e();\n       counts.add(diff.destroyDeletedList(collectedBlocks, removedINodes,\n           refNodes));\n       for (INodeReference ref : refNodes) {\n         // if the node is a reference node, we should continue the \n         // snapshot deletion process\n-        try {\n-          // Use null as prior snapshot. We are handling a reference node stored\n-          // in the delete list of this snapshot diff. We need to destroy this \n-          // snapshot diff because it is the very first one in history.\n-          // If the ref node is a WithName instance acting as the src node of\n-          // the rename operation, there will not be any snapshot before the\n-          // snapshot to be deleted. If the ref node presents the dst node of a \n-          // rename operation, we can identify the corresponding prior snapshot \n-          // when we come into the subtree of the ref node.\n-          counts.add(ref.cleanSubtree(this.snapshot, null, collectedBlocks,\n-              removedINodes));\n-        } catch (QuotaExceededException e) {\n-          String error \u003d \n-              \"should not have QuotaExceededException while deleting snapshot \" \n-              + this.snapshot;\n-          LOG.error(error, e);\n+        if (ref instanceof INodeReference.DstReference) {\n+          // if ref is a DstReference instance, we should delete all the files\n+          // created after the rename\n+          destroyDstSnapshot(ref, snapshot, null, collectedBlocks,\n+              removedINodes);\n+        } else if (ref instanceof INodeReference.WithName) {\n+          // ref should have been renamed again. We only need to delete\n+          // the snapshot in its subtree.\n+          try {\n+            ref.cleanSubtree(snapshot, null, collectedBlocks, removedINodes);\n+          } catch (QuotaExceededException e) {\n+            LOG.error(\"Error: should not throw QuotaExceededException\", e);\n+          }\n         }\n       }\n       return counts;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    Quota.Counts destroyDiffAndCollectBlocks(INodeDirectory currentINode,\n        BlocksMapUpdateInfo collectedBlocks, final List\u003cINode\u003e removedINodes) {\n      // this diff has been deleted\n      Quota.Counts counts \u003d Quota.Counts.newInstance();\n      List\u003cINodeReference\u003e refNodes \u003d new ArrayList\u003cINodeReference\u003e();\n      counts.add(diff.destroyDeletedList(collectedBlocks, removedINodes,\n          refNodes));\n      for (INodeReference ref : refNodes) {\n        // if the node is a reference node, we should continue the \n        // snapshot deletion process\n        if (ref instanceof INodeReference.DstReference) {\n          // if ref is a DstReference instance, we should delete all the files\n          // created after the rename\n          destroyDstSnapshot(ref, snapshot, null, collectedBlocks,\n              removedINodes);\n        } else if (ref instanceof INodeReference.WithName) {\n          // ref should have been renamed again. We only need to delete\n          // the snapshot in its subtree.\n          try {\n            ref.cleanSubtree(snapshot, null, collectedBlocks, removedINodes);\n          } catch (QuotaExceededException e) {\n            LOG.error(\"Error: should not throw QuotaExceededException\", e);\n          }\n        }\n      }\n      return counts;\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/INodeDirectoryWithSnapshot.java",
      "extendedDetails": {}
    },
    "92e0416ced279a910616985bf11fa3f8b1b1de9b": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-4727. Update inodeMap after deleting files/directories/snapshots.  Contributed by Jing Zhao\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1470756 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/04/13 5:00 PM",
      "commitName": "92e0416ced279a910616985bf11fa3f8b1b1de9b",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-4727. Update inodeMap after deleting files/directories/snapshots.  Contributed by Jing Zhao\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1470756 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/04/13 5:00 PM",
          "commitName": "92e0416ced279a910616985bf11fa3f8b1b1de9b",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "22/04/13 3:13 PM",
          "commitNameOld": "43bdc22e9207a74678665de5f109dd7e56fe979a",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 0.07,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,30 @@\n     Quota.Counts destroyDiffAndCollectBlocks(INodeDirectory currentINode,\n-        BlocksMapUpdateInfo collectedBlocks) {\n+        BlocksMapUpdateInfo collectedBlocks, final List\u003cINode\u003e removedINodes) {\n       // this diff has been deleted\n       Quota.Counts counts \u003d Quota.Counts.newInstance();\n       List\u003cINodeReference\u003e refNodes \u003d new ArrayList\u003cINodeReference\u003e();\n-      counts.add(diff.destroyDeletedList(collectedBlocks, refNodes));\n+      counts.add(diff.destroyDeletedList(collectedBlocks, removedINodes,\n+          refNodes));\n       for (INodeReference ref : refNodes) {\n         // if the node is a reference node, we should continue the \n         // snapshot deletion process\n         try {\n           // Use null as prior snapshot. We are handling a reference node stored\n           // in the delete list of this snapshot diff. We need to destroy this \n           // snapshot diff because it is the very first one in history.\n           // If the ref node is a WithName instance acting as the src node of\n           // the rename operation, there will not be any snapshot before the\n           // snapshot to be deleted. If the ref node presents the dst node of a \n           // rename operation, we can identify the corresponding prior snapshot \n           // when we come into the subtree of the ref node.\n-          counts.add(ref.cleanSubtree(this.snapshot, null, collectedBlocks));\n+          counts.add(ref.cleanSubtree(this.snapshot, null, collectedBlocks,\n+              removedINodes));\n         } catch (QuotaExceededException e) {\n           String error \u003d \n               \"should not have QuotaExceededException while deleting snapshot \" \n               + this.snapshot;\n           LOG.error(error, e);\n         }\n       }\n       return counts;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    Quota.Counts destroyDiffAndCollectBlocks(INodeDirectory currentINode,\n        BlocksMapUpdateInfo collectedBlocks, final List\u003cINode\u003e removedINodes) {\n      // this diff has been deleted\n      Quota.Counts counts \u003d Quota.Counts.newInstance();\n      List\u003cINodeReference\u003e refNodes \u003d new ArrayList\u003cINodeReference\u003e();\n      counts.add(diff.destroyDeletedList(collectedBlocks, removedINodes,\n          refNodes));\n      for (INodeReference ref : refNodes) {\n        // if the node is a reference node, we should continue the \n        // snapshot deletion process\n        try {\n          // Use null as prior snapshot. We are handling a reference node stored\n          // in the delete list of this snapshot diff. We need to destroy this \n          // snapshot diff because it is the very first one in history.\n          // If the ref node is a WithName instance acting as the src node of\n          // the rename operation, there will not be any snapshot before the\n          // snapshot to be deleted. If the ref node presents the dst node of a \n          // rename operation, we can identify the corresponding prior snapshot \n          // when we come into the subtree of the ref node.\n          counts.add(ref.cleanSubtree(this.snapshot, null, collectedBlocks,\n              removedINodes));\n        } catch (QuotaExceededException e) {\n          String error \u003d \n              \"should not have QuotaExceededException while deleting snapshot \" \n              + this.snapshot;\n          LOG.error(error, e);\n        }\n      }\n      return counts;\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/INodeDirectoryWithSnapshot.java",
          "extendedDetails": {
            "oldValue": "[currentINode-INodeDirectory, collectedBlocks-BlocksMapUpdateInfo]",
            "newValue": "[currentINode-INodeDirectory, collectedBlocks-BlocksMapUpdateInfo, removedINodes-List\u003cINode\u003e(modifiers-final)]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-4727. Update inodeMap after deleting files/directories/snapshots.  Contributed by Jing Zhao\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1470756 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/04/13 5:00 PM",
          "commitName": "92e0416ced279a910616985bf11fa3f8b1b1de9b",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "22/04/13 3:13 PM",
          "commitNameOld": "43bdc22e9207a74678665de5f109dd7e56fe979a",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 0.07,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,30 @@\n     Quota.Counts destroyDiffAndCollectBlocks(INodeDirectory currentINode,\n-        BlocksMapUpdateInfo collectedBlocks) {\n+        BlocksMapUpdateInfo collectedBlocks, final List\u003cINode\u003e removedINodes) {\n       // this diff has been deleted\n       Quota.Counts counts \u003d Quota.Counts.newInstance();\n       List\u003cINodeReference\u003e refNodes \u003d new ArrayList\u003cINodeReference\u003e();\n-      counts.add(diff.destroyDeletedList(collectedBlocks, refNodes));\n+      counts.add(diff.destroyDeletedList(collectedBlocks, removedINodes,\n+          refNodes));\n       for (INodeReference ref : refNodes) {\n         // if the node is a reference node, we should continue the \n         // snapshot deletion process\n         try {\n           // Use null as prior snapshot. We are handling a reference node stored\n           // in the delete list of this snapshot diff. We need to destroy this \n           // snapshot diff because it is the very first one in history.\n           // If the ref node is a WithName instance acting as the src node of\n           // the rename operation, there will not be any snapshot before the\n           // snapshot to be deleted. If the ref node presents the dst node of a \n           // rename operation, we can identify the corresponding prior snapshot \n           // when we come into the subtree of the ref node.\n-          counts.add(ref.cleanSubtree(this.snapshot, null, collectedBlocks));\n+          counts.add(ref.cleanSubtree(this.snapshot, null, collectedBlocks,\n+              removedINodes));\n         } catch (QuotaExceededException e) {\n           String error \u003d \n               \"should not have QuotaExceededException while deleting snapshot \" \n               + this.snapshot;\n           LOG.error(error, e);\n         }\n       }\n       return counts;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    Quota.Counts destroyDiffAndCollectBlocks(INodeDirectory currentINode,\n        BlocksMapUpdateInfo collectedBlocks, final List\u003cINode\u003e removedINodes) {\n      // this diff has been deleted\n      Quota.Counts counts \u003d Quota.Counts.newInstance();\n      List\u003cINodeReference\u003e refNodes \u003d new ArrayList\u003cINodeReference\u003e();\n      counts.add(diff.destroyDeletedList(collectedBlocks, removedINodes,\n          refNodes));\n      for (INodeReference ref : refNodes) {\n        // if the node is a reference node, we should continue the \n        // snapshot deletion process\n        try {\n          // Use null as prior snapshot. We are handling a reference node stored\n          // in the delete list of this snapshot diff. We need to destroy this \n          // snapshot diff because it is the very first one in history.\n          // If the ref node is a WithName instance acting as the src node of\n          // the rename operation, there will not be any snapshot before the\n          // snapshot to be deleted. If the ref node presents the dst node of a \n          // rename operation, we can identify the corresponding prior snapshot \n          // when we come into the subtree of the ref node.\n          counts.add(ref.cleanSubtree(this.snapshot, null, collectedBlocks,\n              removedINodes));\n        } catch (QuotaExceededException e) {\n          String error \u003d \n              \"should not have QuotaExceededException while deleting snapshot \" \n              + this.snapshot;\n          LOG.error(error, e);\n        }\n      }\n      return counts;\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/INodeDirectoryWithSnapshot.java",
          "extendedDetails": {}
        }
      ]
    },
    "9c6a7bebe23ffb85d7fd95607f3b7bb4fe82dbe4": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4675. Fix rename across snapshottable directories.  Contributed by Jing Zhao\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1467540 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/04/13 7:48 PM",
      "commitName": "9c6a7bebe23ffb85d7fd95607f3b7bb4fe82dbe4",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "04/04/13 4:52 PM",
      "commitNameOld": "ca848beb533790ae8abb6498f5d4676594fbae4c",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 8.12,
      "commitsBetweenForRepo": 24,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,28 @@\n     Quota.Counts destroyDiffAndCollectBlocks(INodeDirectory currentINode,\n         BlocksMapUpdateInfo collectedBlocks) {\n       // this diff has been deleted\n       Quota.Counts counts \u003d Quota.Counts.newInstance();\n-      counts.add(diff.destroyDeletedList(collectedBlocks));\n+      List\u003cINodeReference\u003e refNodes \u003d new ArrayList\u003cINodeReference\u003e();\n+      counts.add(diff.destroyDeletedList(collectedBlocks, refNodes));\n+      for (INodeReference ref : refNodes) {\n+        // if the node is a reference node, we should continue the \n+        // snapshot deletion process\n+        try {\n+          // Use null as prior snapshot. We are handling a reference node stored\n+          // in the delete list of this snapshot diff. We need to destroy this \n+          // snapshot diff because it is the very first one in history.\n+          // If the ref node is a WithName instance acting as the src node of\n+          // the rename operation, there will not be any snapshot before the\n+          // snapshot to be deleted. If the ref node presents the dst node of a \n+          // rename operation, we can identify the corresponding prior snapshot \n+          // when we come into the subtree of the ref node.\n+          counts.add(ref.cleanSubtree(this.snapshot, null, collectedBlocks));\n+        } catch (QuotaExceededException e) {\n+          String error \u003d \n+              \"should not have QuotaExceededException while deleting snapshot \" \n+              + this.snapshot;\n+          LOG.error(error, e);\n+        }\n+      }\n       return counts;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    Quota.Counts destroyDiffAndCollectBlocks(INodeDirectory currentINode,\n        BlocksMapUpdateInfo collectedBlocks) {\n      // this diff has been deleted\n      Quota.Counts counts \u003d Quota.Counts.newInstance();\n      List\u003cINodeReference\u003e refNodes \u003d new ArrayList\u003cINodeReference\u003e();\n      counts.add(diff.destroyDeletedList(collectedBlocks, refNodes));\n      for (INodeReference ref : refNodes) {\n        // if the node is a reference node, we should continue the \n        // snapshot deletion process\n        try {\n          // Use null as prior snapshot. We are handling a reference node stored\n          // in the delete list of this snapshot diff. We need to destroy this \n          // snapshot diff because it is the very first one in history.\n          // If the ref node is a WithName instance acting as the src node of\n          // the rename operation, there will not be any snapshot before the\n          // snapshot to be deleted. If the ref node presents the dst node of a \n          // rename operation, we can identify the corresponding prior snapshot \n          // when we come into the subtree of the ref node.\n          counts.add(ref.cleanSubtree(this.snapshot, null, collectedBlocks));\n        } catch (QuotaExceededException e) {\n          String error \u003d \n              \"should not have QuotaExceededException while deleting snapshot \" \n              + this.snapshot;\n          LOG.error(error, e);\n        }\n      }\n      return counts;\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/INodeDirectoryWithSnapshot.java",
      "extendedDetails": {}
    },
    "3b3ea5c4220e674064c7603a449f63904c10bac1": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-4563. Update namespace/diskspace usage after deleting snapshots.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1455396 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/03/13 7:41 PM",
      "commitName": "3b3ea5c4220e674064c7603a449f63904c10bac1",
      "commitAuthor": "Tsz-wo Sze",
      "diff": "@@ -0,0 +1,7 @@\n+    Quota.Counts destroyDiffAndCollectBlocks(INodeDirectory currentINode,\n+        BlocksMapUpdateInfo collectedBlocks) {\n+      // this diff has been deleted\n+      Quota.Counts counts \u003d Quota.Counts.newInstance();\n+      counts.add(diff.destroyDeletedList(collectedBlocks));\n+      return counts;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    Quota.Counts destroyDiffAndCollectBlocks(INodeDirectory currentINode,\n        BlocksMapUpdateInfo collectedBlocks) {\n      // this diff has been deleted\n      Quota.Counts counts \u003d Quota.Counts.newInstance();\n      counts.add(diff.destroyDeletedList(collectedBlocks));\n      return counts;\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/INodeDirectoryWithSnapshot.java"
    }
  }
}