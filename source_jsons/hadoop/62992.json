{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ResourceRequest.java",
  "functionName": "compareTo",
  "functionId": "compareTo___other-ResourceRequest",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/ResourceRequest.java",
  "functionStartLine": 638,
  "functionEndLine": 670,
  "numCommitsSeen": 36,
  "timeTaken": 8790,
  "changeHistory": [
    "19c743c1bbcaf3df8f1d63e557143c960a538c42",
    "2d8d183b1992b82c4d8dd3d6b41a1964685d909e",
    "cb2b34b01c512b4768a7469c49deab0d67c0dd84",
    "f27e484636f9903bb80afac9c9e51a04a7dbce76",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "28a2eb9d722bb8cbbeee87a1c43b4dc4ef4467ce",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "19c743c1bbcaf3df8f1d63e557143c960a538c42": "Ybodychange",
    "2d8d183b1992b82c4d8dd3d6b41a1964685d909e": "Ybodychange",
    "cb2b34b01c512b4768a7469c49deab0d67c0dd84": "Ybodychange",
    "f27e484636f9903bb80afac9c9e51a04a7dbce76": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "28a2eb9d722bb8cbbeee87a1c43b4dc4ef4467ce": "Ymultichange(Ymovefromfile,Ybodychange)",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "19c743c1bbcaf3df8f1d63e557143c960a538c42": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4889. Changes in AMRMClient for identifying resource-requests explicitly. (Arun Suresh via wangda)\n",
      "commitDate": "26/08/16 5:14 PM",
      "commitName": "19c743c1bbcaf3df8f1d63e557143c960a538c42",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "26/07/16 7:08 PM",
      "commitNameOld": "2d8d183b1992b82c4d8dd3d6b41a1964685d909e",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 30.92,
      "commitsBetweenForRepo": 233,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,33 @@\n   public int compareTo(ResourceRequest other) {\n     int priorityComparison \u003d this.getPriority().compareTo(other.getPriority());\n     if (priorityComparison \u003d\u003d 0) {\n       int hostNameComparison \u003d\n           this.getResourceName().compareTo(other.getResourceName());\n       if (hostNameComparison \u003d\u003d 0) {\n         int execTypeReqComparison \u003d this.getExecutionTypeRequest()\n             .compareTo(other.getExecutionTypeRequest());\n         if (execTypeReqComparison \u003d\u003d 0) {\n           int capabilityComparison \u003d\n               this.getCapability().compareTo(other.getCapability());\n           if (capabilityComparison \u003d\u003d 0) {\n-            return this.getNumContainers() - other.getNumContainers();\n+            int numContainerComparison \u003d\n+                this.getNumContainers() - other.getNumContainers();\n+            if (numContainerComparison \u003d\u003d 0) {\n+              return Long.compare(getAllocationRequestId(),\n+                  other.getAllocationRequestId());\n+            } else {\n+              return numContainerComparison;\n+            }\n           } else {\n             return capabilityComparison;\n           }\n         } else {\n           return execTypeReqComparison;\n         }\n       } else {\n         return hostNameComparison;\n       }\n     } else {\n       return priorityComparison;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int compareTo(ResourceRequest other) {\n    int priorityComparison \u003d this.getPriority().compareTo(other.getPriority());\n    if (priorityComparison \u003d\u003d 0) {\n      int hostNameComparison \u003d\n          this.getResourceName().compareTo(other.getResourceName());\n      if (hostNameComparison \u003d\u003d 0) {\n        int execTypeReqComparison \u003d this.getExecutionTypeRequest()\n            .compareTo(other.getExecutionTypeRequest());\n        if (execTypeReqComparison \u003d\u003d 0) {\n          int capabilityComparison \u003d\n              this.getCapability().compareTo(other.getCapability());\n          if (capabilityComparison \u003d\u003d 0) {\n            int numContainerComparison \u003d\n                this.getNumContainers() - other.getNumContainers();\n            if (numContainerComparison \u003d\u003d 0) {\n              return Long.compare(getAllocationRequestId(),\n                  other.getAllocationRequestId());\n            } else {\n              return numContainerComparison;\n            }\n          } else {\n            return capabilityComparison;\n          }\n        } else {\n          return execTypeReqComparison;\n        }\n      } else {\n        return hostNameComparison;\n      }\n    } else {\n      return priorityComparison;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/ResourceRequest.java",
      "extendedDetails": {}
    },
    "2d8d183b1992b82c4d8dd3d6b41a1964685d909e": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5351. ResourceRequest should take ExecutionType into account during comparison. (Konstantinos Karanasos via asuresh)\n",
      "commitDate": "26/07/16 7:08 PM",
      "commitName": "2d8d183b1992b82c4d8dd3d6b41a1964685d909e",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "13/06/16 9:57 PM",
      "commitNameOld": "eec835ec17f77bf713d90dbc2f77dea45f3ee660",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 42.88,
      "commitsBetweenForRepo": 410,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,26 @@\n   public int compareTo(ResourceRequest other) {\n     int priorityComparison \u003d this.getPriority().compareTo(other.getPriority());\n     if (priorityComparison \u003d\u003d 0) {\n       int hostNameComparison \u003d\n           this.getResourceName().compareTo(other.getResourceName());\n       if (hostNameComparison \u003d\u003d 0) {\n-        int capabilityComparison \u003d\n-            this.getCapability().compareTo(other.getCapability());\n-        if (capabilityComparison \u003d\u003d 0) {\n-          return this.getNumContainers() - other.getNumContainers();\n+        int execTypeReqComparison \u003d this.getExecutionTypeRequest()\n+            .compareTo(other.getExecutionTypeRequest());\n+        if (execTypeReqComparison \u003d\u003d 0) {\n+          int capabilityComparison \u003d\n+              this.getCapability().compareTo(other.getCapability());\n+          if (capabilityComparison \u003d\u003d 0) {\n+            return this.getNumContainers() - other.getNumContainers();\n+          } else {\n+            return capabilityComparison;\n+          }\n         } else {\n-          return capabilityComparison;\n+          return execTypeReqComparison;\n         }\n       } else {\n         return hostNameComparison;\n       }\n     } else {\n       return priorityComparison;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int compareTo(ResourceRequest other) {\n    int priorityComparison \u003d this.getPriority().compareTo(other.getPriority());\n    if (priorityComparison \u003d\u003d 0) {\n      int hostNameComparison \u003d\n          this.getResourceName().compareTo(other.getResourceName());\n      if (hostNameComparison \u003d\u003d 0) {\n        int execTypeReqComparison \u003d this.getExecutionTypeRequest()\n            .compareTo(other.getExecutionTypeRequest());\n        if (execTypeReqComparison \u003d\u003d 0) {\n          int capabilityComparison \u003d\n              this.getCapability().compareTo(other.getCapability());\n          if (capabilityComparison \u003d\u003d 0) {\n            return this.getNumContainers() - other.getNumContainers();\n          } else {\n            return capabilityComparison;\n          }\n        } else {\n          return execTypeReqComparison;\n        }\n      } else {\n        return hostNameComparison;\n      }\n    } else {\n      return priorityComparison;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/ResourceRequest.java",
      "extendedDetails": {}
    },
    "cb2b34b01c512b4768a7469c49deab0d67c0dd84": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2195. Clean a piece of code in ResourceRequest. Contributed by Wei Yan.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1605083 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/06/14 6:57 AM",
      "commitName": "cb2b34b01c512b4768a7469c49deab0d67c0dd84",
      "commitAuthor": "Devarajulu K",
      "commitDateOld": "17/06/13 8:10 PM",
      "commitNameOld": "2b14656ab5050dd75935b64681cdc25fb49db94f",
      "commitAuthorOld": "Siddharth Seth",
      "daysBetweenCommits": 371.45,
      "commitsBetweenForRepo": 2425,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,20 @@\n   public int compareTo(ResourceRequest other) {\n     int priorityComparison \u003d this.getPriority().compareTo(other.getPriority());\n     if (priorityComparison \u003d\u003d 0) {\n       int hostNameComparison \u003d\n           this.getResourceName().compareTo(other.getResourceName());\n       if (hostNameComparison \u003d\u003d 0) {\n         int capabilityComparison \u003d\n             this.getCapability().compareTo(other.getCapability());\n         if (capabilityComparison \u003d\u003d 0) {\n-          int numContainersComparison \u003d\n-              this.getNumContainers() - other.getNumContainers();\n-          if (numContainersComparison \u003d\u003d 0) {\n-            return 0;\n-          } else {\n-            return numContainersComparison;\n-          }\n+          return this.getNumContainers() - other.getNumContainers();\n         } else {\n           return capabilityComparison;\n         }\n       } else {\n         return hostNameComparison;\n       }\n     } else {\n       return priorityComparison;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int compareTo(ResourceRequest other) {\n    int priorityComparison \u003d this.getPriority().compareTo(other.getPriority());\n    if (priorityComparison \u003d\u003d 0) {\n      int hostNameComparison \u003d\n          this.getResourceName().compareTo(other.getResourceName());\n      if (hostNameComparison \u003d\u003d 0) {\n        int capabilityComparison \u003d\n            this.getCapability().compareTo(other.getCapability());\n        if (capabilityComparison \u003d\u003d 0) {\n          return this.getNumContainers() - other.getNumContainers();\n        } else {\n          return capabilityComparison;\n        }\n      } else {\n        return hostNameComparison;\n      }\n    } else {\n      return priorityComparison;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/ResourceRequest.java",
      "extendedDetails": {}
    },
    "f27e484636f9903bb80afac9c9e51a04a7dbce76": {
      "type": "Ybodychange",
      "commitMessage": "YARN-749. Rename ResourceRequest.(get,set)HostName to ResourceRequest.(get,set)ResourceName. Contributed by Arun C. Murthy.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1488806 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/06/13 3:53 PM",
      "commitName": "f27e484636f9903bb80afac9c9e51a04a7dbce76",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "31/05/13 10:26 AM",
      "commitNameOld": "781e82ca9a3d05e0463923cf3c709c99827ba10b",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 2.23,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n   public int compareTo(ResourceRequest other) {\n     int priorityComparison \u003d this.getPriority().compareTo(other.getPriority());\n     if (priorityComparison \u003d\u003d 0) {\n       int hostNameComparison \u003d\n-          this.getHostName().compareTo(other.getHostName());\n+          this.getResourceName().compareTo(other.getResourceName());\n       if (hostNameComparison \u003d\u003d 0) {\n         int capabilityComparison \u003d\n             this.getCapability().compareTo(other.getCapability());\n         if (capabilityComparison \u003d\u003d 0) {\n           int numContainersComparison \u003d\n               this.getNumContainers() - other.getNumContainers();\n           if (numContainersComparison \u003d\u003d 0) {\n             return 0;\n           } else {\n             return numContainersComparison;\n           }\n         } else {\n           return capabilityComparison;\n         }\n       } else {\n         return hostNameComparison;\n       }\n     } else {\n       return priorityComparison;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int compareTo(ResourceRequest other) {\n    int priorityComparison \u003d this.getPriority().compareTo(other.getPriority());\n    if (priorityComparison \u003d\u003d 0) {\n      int hostNameComparison \u003d\n          this.getResourceName().compareTo(other.getResourceName());\n      if (hostNameComparison \u003d\u003d 0) {\n        int capabilityComparison \u003d\n            this.getCapability().compareTo(other.getCapability());\n        if (capabilityComparison \u003d\u003d 0) {\n          int numContainersComparison \u003d\n              this.getNumContainers() - other.getNumContainers();\n          if (numContainersComparison \u003d\u003d 0) {\n            return 0;\n          } else {\n            return numContainersComparison;\n          }\n        } else {\n          return capabilityComparison;\n        }\n      } else {\n        return hostNameComparison;\n      }\n    } else {\n      return priorityComparison;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/ResourceRequest.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public int compareTo(ResourceRequest other) {\n    int priorityComparison \u003d this.getPriority().compareTo(other.getPriority());\n    if (priorityComparison \u003d\u003d 0) {\n      int hostNameComparison \u003d\n          this.getHostName().compareTo(other.getHostName());\n      if (hostNameComparison \u003d\u003d 0) {\n        int capabilityComparison \u003d\n            this.getCapability().compareTo(other.getCapability());\n        if (capabilityComparison \u003d\u003d 0) {\n          int numContainersComparison \u003d\n              this.getNumContainers() - other.getNumContainers();\n          if (numContainersComparison \u003d\u003d 0) {\n            return 0;\n          } else {\n            return numContainersComparison;\n          }\n        } else {\n          return capabilityComparison;\n        }\n      } else {\n        return hostNameComparison;\n      }\n    } else {\n      return priorityComparison;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/ResourceRequest.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/ResourceRequest.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/ResourceRequest.java"
      }
    },
    "28a2eb9d722bb8cbbeee87a1c43b4dc4ef4467ce": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "MAPREDUCE-3810. Performance tweaks - reduced logging in AM and defined hascode/equals for ResourceRequest \u0026 Priority. Contributed by Vinod K V. \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1241205 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/02/12 2:01 PM",
      "commitName": "28a2eb9d722bb8cbbeee87a1c43b4dc4ef4467ce",
      "commitAuthor": "Arun Murthy",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "MAPREDUCE-3810. Performance tweaks - reduced logging in AM and defined hascode/equals for ResourceRequest \u0026 Priority. Contributed by Vinod K V. \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1241205 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "06/02/12 2:01 PM",
          "commitName": "28a2eb9d722bb8cbbeee87a1c43b4dc4ef4467ce",
          "commitAuthor": "Arun Murthy",
          "commitDateOld": "06/02/12 1:33 PM",
          "commitNameOld": "2c91c9d7167f33eea30d6dc76c026ac21c6aee32",
          "commitAuthorOld": "Robert Joseph Evans",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,26 @@\n   public int compareTo(ResourceRequest other) {\n-    if (this.getPriority().compareTo(other.getPriority()) \u003d\u003d 0) {\n-      if (this.getHostName().equals(other.getHostName())) {\n-        if (this.getCapability().equals(other.getCapability())) {\n-          if (this.getNumContainers() \u003d\u003d other.getNumContainers()) {\n+    int priorityComparison \u003d this.getPriority().compareTo(other.getPriority());\n+    if (priorityComparison \u003d\u003d 0) {\n+      int hostNameComparison \u003d\n+          this.getHostName().compareTo(other.getHostName());\n+      if (hostNameComparison \u003d\u003d 0) {\n+        int capabilityComparison \u003d\n+            this.getCapability().compareTo(other.getCapability());\n+        if (capabilityComparison \u003d\u003d 0) {\n+          int numContainersComparison \u003d\n+              this.getNumContainers() - other.getNumContainers();\n+          if (numContainersComparison \u003d\u003d 0) {\n             return 0;\n           } else {\n-            return this.getNumContainers() - other.getNumContainers();\n+            return numContainersComparison;\n           }\n         } else {\n-          return this.getCapability().compareTo(other.getCapability());\n+          return capabilityComparison;\n         }\n       } else {\n-        return this.getHostName().compareTo(other.getHostName());\n+        return hostNameComparison;\n       }\n     } else {\n-      return this.getPriority().compareTo(other.getPriority());\n+      return priorityComparison;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public int compareTo(ResourceRequest other) {\n    int priorityComparison \u003d this.getPriority().compareTo(other.getPriority());\n    if (priorityComparison \u003d\u003d 0) {\n      int hostNameComparison \u003d\n          this.getHostName().compareTo(other.getHostName());\n      if (hostNameComparison \u003d\u003d 0) {\n        int capabilityComparison \u003d\n            this.getCapability().compareTo(other.getCapability());\n        if (capabilityComparison \u003d\u003d 0) {\n          int numContainersComparison \u003d\n              this.getNumContainers() - other.getNumContainers();\n          if (numContainersComparison \u003d\u003d 0) {\n            return 0;\n          } else {\n            return numContainersComparison;\n          }\n        } else {\n          return capabilityComparison;\n        }\n      } else {\n        return hostNameComparison;\n      }\n    } else {\n      return priorityComparison;\n    }\n  }",
          "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/ResourceRequest.java",
          "extendedDetails": {
            "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ResourceRequestPBImpl.java",
            "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/ResourceRequest.java",
            "oldMethodName": "compareTo",
            "newMethodName": "compareTo"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-3810. Performance tweaks - reduced logging in AM and defined hascode/equals for ResourceRequest \u0026 Priority. Contributed by Vinod K V. \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1241205 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "06/02/12 2:01 PM",
          "commitName": "28a2eb9d722bb8cbbeee87a1c43b4dc4ef4467ce",
          "commitAuthor": "Arun Murthy",
          "commitDateOld": "06/02/12 1:33 PM",
          "commitNameOld": "2c91c9d7167f33eea30d6dc76c026ac21c6aee32",
          "commitAuthorOld": "Robert Joseph Evans",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,26 @@\n   public int compareTo(ResourceRequest other) {\n-    if (this.getPriority().compareTo(other.getPriority()) \u003d\u003d 0) {\n-      if (this.getHostName().equals(other.getHostName())) {\n-        if (this.getCapability().equals(other.getCapability())) {\n-          if (this.getNumContainers() \u003d\u003d other.getNumContainers()) {\n+    int priorityComparison \u003d this.getPriority().compareTo(other.getPriority());\n+    if (priorityComparison \u003d\u003d 0) {\n+      int hostNameComparison \u003d\n+          this.getHostName().compareTo(other.getHostName());\n+      if (hostNameComparison \u003d\u003d 0) {\n+        int capabilityComparison \u003d\n+            this.getCapability().compareTo(other.getCapability());\n+        if (capabilityComparison \u003d\u003d 0) {\n+          int numContainersComparison \u003d\n+              this.getNumContainers() - other.getNumContainers();\n+          if (numContainersComparison \u003d\u003d 0) {\n             return 0;\n           } else {\n-            return this.getNumContainers() - other.getNumContainers();\n+            return numContainersComparison;\n           }\n         } else {\n-          return this.getCapability().compareTo(other.getCapability());\n+          return capabilityComparison;\n         }\n       } else {\n-        return this.getHostName().compareTo(other.getHostName());\n+        return hostNameComparison;\n       }\n     } else {\n-      return this.getPriority().compareTo(other.getPriority());\n+      return priorityComparison;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public int compareTo(ResourceRequest other) {\n    int priorityComparison \u003d this.getPriority().compareTo(other.getPriority());\n    if (priorityComparison \u003d\u003d 0) {\n      int hostNameComparison \u003d\n          this.getHostName().compareTo(other.getHostName());\n      if (hostNameComparison \u003d\u003d 0) {\n        int capabilityComparison \u003d\n            this.getCapability().compareTo(other.getCapability());\n        if (capabilityComparison \u003d\u003d 0) {\n          int numContainersComparison \u003d\n              this.getNumContainers() - other.getNumContainers();\n          if (numContainersComparison \u003d\u003d 0) {\n            return 0;\n          } else {\n            return numContainersComparison;\n          }\n        } else {\n          return capabilityComparison;\n        }\n      } else {\n        return hostNameComparison;\n      }\n    } else {\n      return priorityComparison;\n    }\n  }",
          "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/ResourceRequest.java",
          "extendedDetails": {}
        }
      ]
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public int compareTo(ResourceRequest other) {\n    if (this.getPriority().compareTo(other.getPriority()) \u003d\u003d 0) {\n      if (this.getHostName().equals(other.getHostName())) {\n        if (this.getCapability().equals(other.getCapability())) {\n          if (this.getNumContainers() \u003d\u003d other.getNumContainers()) {\n            return 0;\n          } else {\n            return this.getNumContainers() - other.getNumContainers();\n          }\n        } else {\n          return this.getCapability().compareTo(other.getCapability());\n        }\n      } else {\n        return this.getHostName().compareTo(other.getHostName());\n      }\n    } else {\n      return this.getPriority().compareTo(other.getPriority());\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ResourceRequestPBImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ResourceRequestPBImpl.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ResourceRequestPBImpl.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,19 @@\n+  public int compareTo(ResourceRequest other) {\n+    if (this.getPriority().compareTo(other.getPriority()) \u003d\u003d 0) {\n+      if (this.getHostName().equals(other.getHostName())) {\n+        if (this.getCapability().equals(other.getCapability())) {\n+          if (this.getNumContainers() \u003d\u003d other.getNumContainers()) {\n+            return 0;\n+          } else {\n+            return this.getNumContainers() - other.getNumContainers();\n+          }\n+        } else {\n+          return this.getCapability().compareTo(other.getCapability());\n+        }\n+      } else {\n+        return this.getHostName().compareTo(other.getHostName());\n+      }\n+    } else {\n+      return this.getPriority().compareTo(other.getPriority());\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public int compareTo(ResourceRequest other) {\n    if (this.getPriority().compareTo(other.getPriority()) \u003d\u003d 0) {\n      if (this.getHostName().equals(other.getHostName())) {\n        if (this.getCapability().equals(other.getCapability())) {\n          if (this.getNumContainers() \u003d\u003d other.getNumContainers()) {\n            return 0;\n          } else {\n            return this.getNumContainers() - other.getNumContainers();\n          }\n        } else {\n          return this.getCapability().compareTo(other.getCapability());\n        }\n      } else {\n        return this.getHostName().compareTo(other.getHostName());\n      }\n    } else {\n      return this.getPriority().compareTo(other.getPriority());\n    }\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ResourceRequestPBImpl.java"
    }
  }
}