{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "QueueManager.java",
  "functionName": "initialize",
  "functionId": "initialize",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/QueueManager.java",
  "functionStartLine": 103,
  "functionEndLine": 117,
  "numCommitsSeen": 129,
  "timeTaken": 5320,
  "changeHistory": [
    "5257f50abb71905ef3068fd45541d00ce9e8f355",
    "86bc6425d425913899f1d951498bd040e453b3d0",
    "11be3f70e029c2324b167563168c8a254d234aef",
    "e224c9623493d6c4c2f3ff731fd3c72c0f448b19",
    "f6ea9be5473ab66798b0536317d2f32c5348eb57",
    "6d5f8ebed60e59d772e0dcee0b069f8db95f6ccc",
    "3858b9018e3c2f4b883b02021679852591b706f7",
    "2db1d4d4ee7838f2a8c0b3999b6055456798321d",
    "aa2745abe596c610157f6e3be9c23ba8cc1e21d0",
    "ae6f1123f57c09a9cf5eed3e8c4659481417dc21",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "1ef64e64c05ae5318cd4cb47d03a0494d742fb7c"
  ],
  "changeHistoryShort": {
    "5257f50abb71905ef3068fd45541d00ce9e8f355": "Ymultichange(Yparameterchange,Yexceptionschange)",
    "86bc6425d425913899f1d951498bd040e453b3d0": "Ybodychange",
    "11be3f70e029c2324b167563168c8a254d234aef": "Ybodychange",
    "e224c9623493d6c4c2f3ff731fd3c72c0f448b19": "Ybodychange",
    "f6ea9be5473ab66798b0536317d2f32c5348eb57": "Ybodychange",
    "6d5f8ebed60e59d772e0dcee0b069f8db95f6ccc": "Ymultichange(Yparameterchange,Ybodychange)",
    "3858b9018e3c2f4b883b02021679852591b706f7": "Ybodychange",
    "2db1d4d4ee7838f2a8c0b3999b6055456798321d": "Ybodychange",
    "aa2745abe596c610157f6e3be9c23ba8cc1e21d0": "Ybodychange",
    "ae6f1123f57c09a9cf5eed3e8c4659481417dc21": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "1ef64e64c05ae5318cd4cb47d03a0494d742fb7c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5257f50abb71905ef3068fd45541d00ce9e8f355": {
      "type": "Ymultichange(Yparameterchange,Yexceptionschange)",
      "commitMessage": "YARN-8967. Change FairScheduler to use PlacementRule interface. Contributed by Wilfred Spiegelenburg.\n",
      "commitDate": "25/03/19 10:47 PM",
      "commitName": "5257f50abb71905ef3068fd45541d00ce9e8f355",
      "commitAuthor": "yufei",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-8967. Change FairScheduler to use PlacementRule interface. Contributed by Wilfred Spiegelenburg.\n",
          "commitDate": "25/03/19 10:47 PM",
          "commitName": "5257f50abb71905ef3068fd45541d00ce9e8f355",
          "commitAuthor": "yufei",
          "commitDateOld": "04/03/19 9:10 PM",
          "commitNameOld": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
          "commitAuthorOld": "Prabhu Joseph",
          "daysBetweenCommits": 21.03,
          "commitsBetweenForRepo": 170,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,15 @@\n-  public void initialize(Configuration conf) throws IOException,\n-      SAXException, AllocationConfigurationException, ParserConfigurationException {\n+  public void initialize() {\n     // Policies of root and default queue are set to\n     // SchedulingPolicy.DEFAULT_POLICY since the allocation file hasn\u0027t been\n     // loaded yet.\n     rootQueue \u003d new FSParentQueue(\"root\", scheduler, null);\n     rootQueue.setDynamic(false);\n     queues.put(rootQueue.getName(), rootQueue);\n \n     // Create the default queue\n     FSLeafQueue defaultQueue \u003d\n         getLeafQueue(YarnConfiguration.DEFAULT_QUEUE_NAME, true);\n     defaultQueue.setDynamic(false);\n     // Recursively reinitialize to propagate queue properties\n     rootQueue.reinit(true);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void initialize() {\n    // Policies of root and default queue are set to\n    // SchedulingPolicy.DEFAULT_POLICY since the allocation file hasn\u0027t been\n    // loaded yet.\n    rootQueue \u003d new FSParentQueue(\"root\", scheduler, null);\n    rootQueue.setDynamic(false);\n    queues.put(rootQueue.getName(), rootQueue);\n\n    // Create the default queue\n    FSLeafQueue defaultQueue \u003d\n        getLeafQueue(YarnConfiguration.DEFAULT_QUEUE_NAME, true);\n    defaultQueue.setDynamic(false);\n    // Recursively reinitialize to propagate queue properties\n    rootQueue.reinit(true);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/QueueManager.java",
          "extendedDetails": {
            "oldValue": "[conf-Configuration]",
            "newValue": "[]"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "YARN-8967. Change FairScheduler to use PlacementRule interface. Contributed by Wilfred Spiegelenburg.\n",
          "commitDate": "25/03/19 10:47 PM",
          "commitName": "5257f50abb71905ef3068fd45541d00ce9e8f355",
          "commitAuthor": "yufei",
          "commitDateOld": "04/03/19 9:10 PM",
          "commitNameOld": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
          "commitAuthorOld": "Prabhu Joseph",
          "daysBetweenCommits": 21.03,
          "commitsBetweenForRepo": 170,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,15 @@\n-  public void initialize(Configuration conf) throws IOException,\n-      SAXException, AllocationConfigurationException, ParserConfigurationException {\n+  public void initialize() {\n     // Policies of root and default queue are set to\n     // SchedulingPolicy.DEFAULT_POLICY since the allocation file hasn\u0027t been\n     // loaded yet.\n     rootQueue \u003d new FSParentQueue(\"root\", scheduler, null);\n     rootQueue.setDynamic(false);\n     queues.put(rootQueue.getName(), rootQueue);\n \n     // Create the default queue\n     FSLeafQueue defaultQueue \u003d\n         getLeafQueue(YarnConfiguration.DEFAULT_QUEUE_NAME, true);\n     defaultQueue.setDynamic(false);\n     // Recursively reinitialize to propagate queue properties\n     rootQueue.reinit(true);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void initialize() {\n    // Policies of root and default queue are set to\n    // SchedulingPolicy.DEFAULT_POLICY since the allocation file hasn\u0027t been\n    // loaded yet.\n    rootQueue \u003d new FSParentQueue(\"root\", scheduler, null);\n    rootQueue.setDynamic(false);\n    queues.put(rootQueue.getName(), rootQueue);\n\n    // Create the default queue\n    FSLeafQueue defaultQueue \u003d\n        getLeafQueue(YarnConfiguration.DEFAULT_QUEUE_NAME, true);\n    defaultQueue.setDynamic(false);\n    // Recursively reinitialize to propagate queue properties\n    rootQueue.reinit(true);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/QueueManager.java",
          "extendedDetails": {
            "oldValue": "[IOException, SAXException, AllocationConfigurationException, ParserConfigurationException]",
            "newValue": "[]"
          }
        }
      ]
    },
    "86bc6425d425913899f1d951498bd040e453b3d0": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8191. Fair scheduler: queue deletion without RM restart. (Gergo Repas via Haibo Chen)\n",
      "commitDate": "24/05/18 5:12 PM",
      "commitName": "86bc6425d425913899f1d951498bd040e453b3d0",
      "commitAuthor": "Haibo Chen",
      "commitDateOld": "05/10/17 11:51 PM",
      "commitNameOld": "99292adcefdc6b8f280b8e100605fb39f755c38a",
      "commitAuthorOld": "Yufei Gu",
      "daysBetweenCommits": 230.72,
      "commitsBetweenForRepo": 2231,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,16 @@\n   public void initialize(Configuration conf) throws IOException,\n       SAXException, AllocationConfigurationException, ParserConfigurationException {\n     // Policies of root and default queue are set to\n     // SchedulingPolicy.DEFAULT_POLICY since the allocation file hasn\u0027t been\n     // loaded yet.\n     rootQueue \u003d new FSParentQueue(\"root\", scheduler, null);\n+    rootQueue.setDynamic(false);\n     queues.put(rootQueue.getName(), rootQueue);\n \n     // Create the default queue\n-    getLeafQueue(YarnConfiguration.DEFAULT_QUEUE_NAME, true);\n+    FSLeafQueue defaultQueue \u003d\n+        getLeafQueue(YarnConfiguration.DEFAULT_QUEUE_NAME, true);\n+    defaultQueue.setDynamic(false);\n     // Recursively reinitialize to propagate queue properties\n     rootQueue.reinit(true);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void initialize(Configuration conf) throws IOException,\n      SAXException, AllocationConfigurationException, ParserConfigurationException {\n    // Policies of root and default queue are set to\n    // SchedulingPolicy.DEFAULT_POLICY since the allocation file hasn\u0027t been\n    // loaded yet.\n    rootQueue \u003d new FSParentQueue(\"root\", scheduler, null);\n    rootQueue.setDynamic(false);\n    queues.put(rootQueue.getName(), rootQueue);\n\n    // Create the default queue\n    FSLeafQueue defaultQueue \u003d\n        getLeafQueue(YarnConfiguration.DEFAULT_QUEUE_NAME, true);\n    defaultQueue.setDynamic(false);\n    // Recursively reinitialize to propagate queue properties\n    rootQueue.reinit(true);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/QueueManager.java",
      "extendedDetails": {}
    },
    "11be3f70e029c2324b167563168c8a254d234aef": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4212. FairScheduler: Can\u0027t create a DRF queue under a FAIR policy queue. (Yufei Gu via kasha)\n",
      "commitDate": "15/02/17 11:51 PM",
      "commitName": "11be3f70e029c2324b167563168c8a254d234aef",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "17/01/17 5:01 PM",
      "commitNameOld": "e224c9623493d6c4c2f3ff731fd3c72c0f448b19",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 29.28,
      "commitsBetweenForRepo": 143,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,13 @@\n   public void initialize(Configuration conf) throws IOException,\n       SAXException, AllocationConfigurationException, ParserConfigurationException {\n+    // Policies of root and default queue are set to\n+    // SchedulingPolicy.DEFAULT_POLICY since the allocation file hasn\u0027t been\n+    // loaded yet.\n     rootQueue \u003d new FSParentQueue(\"root\", scheduler, null);\n     queues.put(rootQueue.getName(), rootQueue);\n \n     // Create the default queue\n     getLeafQueue(YarnConfiguration.DEFAULT_QUEUE_NAME, true);\n     // Recursively reinitialize to propagate queue properties\n     rootQueue.reinit(true);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void initialize(Configuration conf) throws IOException,\n      SAXException, AllocationConfigurationException, ParserConfigurationException {\n    // Policies of root and default queue are set to\n    // SchedulingPolicy.DEFAULT_POLICY since the allocation file hasn\u0027t been\n    // loaded yet.\n    rootQueue \u003d new FSParentQueue(\"root\", scheduler, null);\n    queues.put(rootQueue.getName(), rootQueue);\n\n    // Create the default queue\n    getLeafQueue(YarnConfiguration.DEFAULT_QUEUE_NAME, true);\n    // Recursively reinitialize to propagate queue properties\n    rootQueue.reinit(true);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/QueueManager.java",
      "extendedDetails": {}
    },
    "e224c9623493d6c4c2f3ff731fd3c72c0f448b19": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5831. FairScheduler: Propagate allowPreemptionFrom flag all the way down to the app. (Yufei Gu via kasha)\n",
      "commitDate": "17/01/17 5:01 PM",
      "commitName": "e224c9623493d6c4c2f3ff731fd3c72c0f448b19",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "02/09/16 2:56 PM",
      "commitNameOld": "f6ea9be5473ab66798b0536317d2f32c5348eb57",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 137.13,
      "commitsBetweenForRepo": 894,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,10 @@\n   public void initialize(Configuration conf) throws IOException,\n       SAXException, AllocationConfigurationException, ParserConfigurationException {\n     rootQueue \u003d new FSParentQueue(\"root\", scheduler, null);\n-    rootQueue.init();\n     queues.put(rootQueue.getName(), rootQueue);\n \n     // Create the default queue\n     getLeafQueue(YarnConfiguration.DEFAULT_QUEUE_NAME, true);\n+    // Recursively reinitialize to propagate queue properties\n+    rootQueue.reinit(true);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void initialize(Configuration conf) throws IOException,\n      SAXException, AllocationConfigurationException, ParserConfigurationException {\n    rootQueue \u003d new FSParentQueue(\"root\", scheduler, null);\n    queues.put(rootQueue.getName(), rootQueue);\n\n    // Create the default queue\n    getLeafQueue(YarnConfiguration.DEFAULT_QUEUE_NAME, true);\n    // Recursively reinitialize to propagate queue properties\n    rootQueue.reinit(true);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/QueueManager.java",
      "extendedDetails": {}
    },
    "f6ea9be5473ab66798b0536317d2f32c5348eb57": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5264. Store all queue-specific information in FSQueue. (Yufei Gu via kasha)\n",
      "commitDate": "02/09/16 2:56 PM",
      "commitName": "f6ea9be5473ab66798b0536317d2f32c5348eb57",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "17/08/16 5:40 PM",
      "commitNameOld": "20f0eb871c57cc4c5a6d19aae0e3745b6175509b",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 15.89,
      "commitsBetweenForRepo": 103,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,9 @@\n   public void initialize(Configuration conf) throws IOException,\n       SAXException, AllocationConfigurationException, ParserConfigurationException {\n     rootQueue \u003d new FSParentQueue(\"root\", scheduler, null);\n+    rootQueue.init();\n     queues.put(rootQueue.getName(), rootQueue);\n-    \n+\n     // Create the default queue\n     getLeafQueue(YarnConfiguration.DEFAULT_QUEUE_NAME, true);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void initialize(Configuration conf) throws IOException,\n      SAXException, AllocationConfigurationException, ParserConfigurationException {\n    rootQueue \u003d new FSParentQueue(\"root\", scheduler, null);\n    rootQueue.init();\n    queues.put(rootQueue.getName(), rootQueue);\n\n    // Create the default queue\n    getLeafQueue(YarnConfiguration.DEFAULT_QUEUE_NAME, true);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/QueueManager.java",
      "extendedDetails": {}
    },
    "6d5f8ebed60e59d772e0dcee0b069f8db95f6ccc": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-1403. Separate out configuration loading from QueueManager in the Fair Scheduler (Sandy Ryza)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1548006 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/12/13 7:26 PM",
      "commitName": "6d5f8ebed60e59d772e0dcee0b069f8db95f6ccc",
      "commitAuthor": "Sanford Ryza",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-1403. Separate out configuration loading from QueueManager in the Fair Scheduler (Sandy Ryza)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1548006 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "04/12/13 7:26 PM",
          "commitName": "6d5f8ebed60e59d772e0dcee0b069f8db95f6ccc",
          "commitAuthor": "Sanford Ryza",
          "commitDateOld": "29/11/13 11:02 AM",
          "commitNameOld": "7545d8bf996e5d060d5d613bf769ec52a62d428b",
          "commitAuthorOld": "Sanford Ryza",
          "daysBetweenCommits": 5.35,
          "commitsBetweenForRepo": 26,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,8 @@\n-  public void initialize() throws IOException, SAXException,\n-      AllocationConfigurationException, ParserConfigurationException {\n-    FairSchedulerConfiguration conf \u003d scheduler.getConf();\n-    rootQueue \u003d new FSParentQueue(\"root\", this, scheduler, null);\n+  public void initialize(Configuration conf) throws IOException,\n+      SAXException, AllocationConfigurationException, ParserConfigurationException {\n+    rootQueue \u003d new FSParentQueue(\"root\", scheduler, null);\n     queues.put(rootQueue.getName(), rootQueue);\n     \n-    this.allocFile \u003d conf.getAllocationFile();\n-    placementPolicy \u003d new QueuePlacementPolicy(getSimplePlacementRules(),\n-        new HashSet\u003cString\u003e(), conf);\n-    \n-    reloadAllocs();\n-    lastSuccessfulReload \u003d scheduler.getClock().getTime();\n-    lastReloadAttempt \u003d scheduler.getClock().getTime();\n     // Create the default queue\n     getLeafQueue(YarnConfiguration.DEFAULT_QUEUE_NAME, true);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void initialize(Configuration conf) throws IOException,\n      SAXException, AllocationConfigurationException, ParserConfigurationException {\n    rootQueue \u003d new FSParentQueue(\"root\", scheduler, null);\n    queues.put(rootQueue.getName(), rootQueue);\n    \n    // Create the default queue\n    getLeafQueue(YarnConfiguration.DEFAULT_QUEUE_NAME, true);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/QueueManager.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[conf-Configuration]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-1403. Separate out configuration loading from QueueManager in the Fair Scheduler (Sandy Ryza)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1548006 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "04/12/13 7:26 PM",
          "commitName": "6d5f8ebed60e59d772e0dcee0b069f8db95f6ccc",
          "commitAuthor": "Sanford Ryza",
          "commitDateOld": "29/11/13 11:02 AM",
          "commitNameOld": "7545d8bf996e5d060d5d613bf769ec52a62d428b",
          "commitAuthorOld": "Sanford Ryza",
          "daysBetweenCommits": 5.35,
          "commitsBetweenForRepo": 26,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,8 @@\n-  public void initialize() throws IOException, SAXException,\n-      AllocationConfigurationException, ParserConfigurationException {\n-    FairSchedulerConfiguration conf \u003d scheduler.getConf();\n-    rootQueue \u003d new FSParentQueue(\"root\", this, scheduler, null);\n+  public void initialize(Configuration conf) throws IOException,\n+      SAXException, AllocationConfigurationException, ParserConfigurationException {\n+    rootQueue \u003d new FSParentQueue(\"root\", scheduler, null);\n     queues.put(rootQueue.getName(), rootQueue);\n     \n-    this.allocFile \u003d conf.getAllocationFile();\n-    placementPolicy \u003d new QueuePlacementPolicy(getSimplePlacementRules(),\n-        new HashSet\u003cString\u003e(), conf);\n-    \n-    reloadAllocs();\n-    lastSuccessfulReload \u003d scheduler.getClock().getTime();\n-    lastReloadAttempt \u003d scheduler.getClock().getTime();\n     // Create the default queue\n     getLeafQueue(YarnConfiguration.DEFAULT_QUEUE_NAME, true);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void initialize(Configuration conf) throws IOException,\n      SAXException, AllocationConfigurationException, ParserConfigurationException {\n    rootQueue \u003d new FSParentQueue(\"root\", scheduler, null);\n    queues.put(rootQueue.getName(), rootQueue);\n    \n    // Create the default queue\n    getLeafQueue(YarnConfiguration.DEFAULT_QUEUE_NAME, true);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/QueueManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "3858b9018e3c2f4b883b02021679852591b706f7": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1392. Allow sophisticated app-to-queue placement policies in the Fair Scheduler (Sandy Ryza)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1542105 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/11/13 2:12 PM",
      "commitName": "3858b9018e3c2f4b883b02021679852591b706f7",
      "commitAuthor": "Sanford Ryza",
      "commitDateOld": "22/10/13 4:53 PM",
      "commitNameOld": "3baff29b8cf594145f0ca8da36b1d7603a5992cc",
      "commitAuthorOld": "Sanford Ryza",
      "daysBetweenCommits": 22.93,
      "commitsBetweenForRepo": 117,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,16 @@\n   public void initialize() throws IOException, SAXException,\n       AllocationConfigurationException, ParserConfigurationException {\n     FairSchedulerConfiguration conf \u003d scheduler.getConf();\n     rootQueue \u003d new FSParentQueue(\"root\", this, scheduler, null);\n     queues.put(rootQueue.getName(), rootQueue);\n     \n     this.allocFile \u003d conf.getAllocationFile();\n+    placementPolicy \u003d new QueuePlacementPolicy(getSimplePlacementRules(),\n+        new HashSet\u003cString\u003e(), conf);\n     \n     reloadAllocs();\n     lastSuccessfulReload \u003d scheduler.getClock().getTime();\n     lastReloadAttempt \u003d scheduler.getClock().getTime();\n     // Create the default queue\n     getLeafQueue(YarnConfiguration.DEFAULT_QUEUE_NAME, true);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void initialize() throws IOException, SAXException,\n      AllocationConfigurationException, ParserConfigurationException {\n    FairSchedulerConfiguration conf \u003d scheduler.getConf();\n    rootQueue \u003d new FSParentQueue(\"root\", this, scheduler, null);\n    queues.put(rootQueue.getName(), rootQueue);\n    \n    this.allocFile \u003d conf.getAllocationFile();\n    placementPolicy \u003d new QueuePlacementPolicy(getSimplePlacementRules(),\n        new HashSet\u003cString\u003e(), conf);\n    \n    reloadAllocs();\n    lastSuccessfulReload \u003d scheduler.getClock().getTime();\n    lastReloadAttempt \u003d scheduler.getClock().getTime();\n    // Create the default queue\n    getLeafQueue(YarnConfiguration.DEFAULT_QUEUE_NAME, true);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/QueueManager.java",
      "extendedDetails": {}
    },
    "2db1d4d4ee7838f2a8c0b3999b6055456798321d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1213. Restore config to ban submitting to undeclared pools in the Fair Scheduler. (Sandy Ryza)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1528696 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/10/13 6:17 PM",
      "commitName": "2db1d4d4ee7838f2a8c0b3999b6055456798321d",
      "commitAuthor": "Sanford Ryza",
      "commitDateOld": "01/10/13 1:14 PM",
      "commitNameOld": "aa2745abe596c610157f6e3be9c23ba8cc1e21d0",
      "commitAuthorOld": "Sanford Ryza",
      "daysBetweenCommits": 1.21,
      "commitsBetweenForRepo": 23,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n   public void initialize() throws IOException, SAXException,\n       AllocationConfigurationException, ParserConfigurationException {\n     FairSchedulerConfiguration conf \u003d scheduler.getConf();\n     rootQueue \u003d new FSParentQueue(\"root\", this, scheduler, null);\n     queues.put(rootQueue.getName(), rootQueue);\n     \n     this.allocFile \u003d conf.getAllocationFile();\n     \n     reloadAllocs();\n     lastSuccessfulReload \u003d scheduler.getClock().getTime();\n     lastReloadAttempt \u003d scheduler.getClock().getTime();\n     // Create the default queue\n-    getLeafQueue(YarnConfiguration.DEFAULT_QUEUE_NAME);\n+    getLeafQueue(YarnConfiguration.DEFAULT_QUEUE_NAME, true);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void initialize() throws IOException, SAXException,\n      AllocationConfigurationException, ParserConfigurationException {\n    FairSchedulerConfiguration conf \u003d scheduler.getConf();\n    rootQueue \u003d new FSParentQueue(\"root\", this, scheduler, null);\n    queues.put(rootQueue.getName(), rootQueue);\n    \n    this.allocFile \u003d conf.getAllocationFile();\n    \n    reloadAllocs();\n    lastSuccessfulReload \u003d scheduler.getClock().getTime();\n    lastReloadAttempt \u003d scheduler.getClock().getTime();\n    // Create the default queue\n    getLeafQueue(YarnConfiguration.DEFAULT_QUEUE_NAME, true);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/QueueManager.java",
      "extendedDetails": {}
    },
    "aa2745abe596c610157f6e3be9c23ba8cc1e21d0": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1228. Clean up Fair Scheduler configuration loading. (Sandy Ryza)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1528201 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "01/10/13 1:14 PM",
      "commitName": "aa2745abe596c610157f6e3be9c23ba8cc1e21d0",
      "commitAuthor": "Sanford Ryza",
      "commitDateOld": "28/06/13 11:59 AM",
      "commitNameOld": "c221204ccaadcf70992d9e858ef71c6f8864ff4e",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 95.05,
      "commitsBetweenForRepo": 531,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,14 @@\n   public void initialize() throws IOException, SAXException,\n       AllocationConfigurationException, ParserConfigurationException {\n     FairSchedulerConfiguration conf \u003d scheduler.getConf();\n     rootQueue \u003d new FSParentQueue(\"root\", this, scheduler, null);\n     queues.put(rootQueue.getName(), rootQueue);\n     \n     this.allocFile \u003d conf.getAllocationFile();\n-    if (allocFile \u003d\u003d null) {\n-      // No allocation file specified in jobconf. Use the default allocation\n-      // file, fair-scheduler.xml, looking for it on the classpath.\n-      allocFile \u003d new Configuration().getResource(\"fair-scheduler.xml\");\n-      if (allocFile \u003d\u003d null) {\n-        LOG.error(\"The fair scheduler allocation file fair-scheduler.xml was \"\n-            + \"not found on the classpath, and no other config file is given \"\n-            + \"through mapred.fairscheduler.allocation.file.\");\n-      }\n-    }\n+    \n     reloadAllocs();\n     lastSuccessfulReload \u003d scheduler.getClock().getTime();\n     lastReloadAttempt \u003d scheduler.getClock().getTime();\n     // Create the default queue\n     getLeafQueue(YarnConfiguration.DEFAULT_QUEUE_NAME);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void initialize() throws IOException, SAXException,\n      AllocationConfigurationException, ParserConfigurationException {\n    FairSchedulerConfiguration conf \u003d scheduler.getConf();\n    rootQueue \u003d new FSParentQueue(\"root\", this, scheduler, null);\n    queues.put(rootQueue.getName(), rootQueue);\n    \n    this.allocFile \u003d conf.getAllocationFile();\n    \n    reloadAllocs();\n    lastSuccessfulReload \u003d scheduler.getClock().getTime();\n    lastReloadAttempt \u003d scheduler.getClock().getTime();\n    // Create the default queue\n    getLeafQueue(YarnConfiguration.DEFAULT_QUEUE_NAME);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/QueueManager.java",
      "extendedDetails": {}
    },
    "ae6f1123f57c09a9cf5eed3e8c4659481417dc21": {
      "type": "Ybodychange",
      "commitMessage": "YARN-187. Add hierarchical queues to the fair scheduler. Contributed by Sandy Ryza.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1415592 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/11/12 4:03 AM",
      "commitName": "ae6f1123f57c09a9cf5eed3e8c4659481417dc21",
      "commitAuthor": "Thomas White",
      "commitDateOld": "17/11/12 9:00 PM",
      "commitNameOld": "576f96f0ac79a2afe49948056498f2c06fe317c3",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 12.29,
      "commitsBetweenForRepo": 34,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,23 @@\n   public void initialize() throws IOException, SAXException,\n       AllocationConfigurationException, ParserConfigurationException {\n     FairSchedulerConfiguration conf \u003d scheduler.getConf();\n+    rootQueue \u003d new FSParentQueue(\"root\", this, scheduler, null);\n+    queues.put(rootQueue.getName(), rootQueue);\n+    \n     this.allocFile \u003d conf.getAllocationFile();\n     if (allocFile \u003d\u003d null) {\n       // No allocation file specified in jobconf. Use the default allocation\n       // file, fair-scheduler.xml, looking for it on the classpath.\n       allocFile \u003d new Configuration().getResource(\"fair-scheduler.xml\");\n       if (allocFile \u003d\u003d null) {\n         LOG.error(\"The fair scheduler allocation file fair-scheduler.xml was \"\n             + \"not found on the classpath, and no other config file is given \"\n             + \"through mapred.fairscheduler.allocation.file.\");\n       }\n     }\n     reloadAllocs();\n     lastSuccessfulReload \u003d scheduler.getClock().getTime();\n     lastReloadAttempt \u003d scheduler.getClock().getTime();\n     // Create the default queue\n-    getQueue(YarnConfiguration.DEFAULT_QUEUE_NAME);\n+    getLeafQueue(YarnConfiguration.DEFAULT_QUEUE_NAME);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void initialize() throws IOException, SAXException,\n      AllocationConfigurationException, ParserConfigurationException {\n    FairSchedulerConfiguration conf \u003d scheduler.getConf();\n    rootQueue \u003d new FSParentQueue(\"root\", this, scheduler, null);\n    queues.put(rootQueue.getName(), rootQueue);\n    \n    this.allocFile \u003d conf.getAllocationFile();\n    if (allocFile \u003d\u003d null) {\n      // No allocation file specified in jobconf. Use the default allocation\n      // file, fair-scheduler.xml, looking for it on the classpath.\n      allocFile \u003d new Configuration().getResource(\"fair-scheduler.xml\");\n      if (allocFile \u003d\u003d null) {\n        LOG.error(\"The fair scheduler allocation file fair-scheduler.xml was \"\n            + \"not found on the classpath, and no other config file is given \"\n            + \"through mapred.fairscheduler.allocation.file.\");\n      }\n    }\n    reloadAllocs();\n    lastSuccessfulReload \u003d scheduler.getClock().getTime();\n    lastReloadAttempt \u003d scheduler.getClock().getTime();\n    // Create the default queue\n    getLeafQueue(YarnConfiguration.DEFAULT_QUEUE_NAME);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/QueueManager.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void initialize() throws IOException, SAXException,\n      AllocationConfigurationException, ParserConfigurationException {\n    FairSchedulerConfiguration conf \u003d scheduler.getConf();\n    this.allocFile \u003d conf.getAllocationFile();\n    if (allocFile \u003d\u003d null) {\n      // No allocation file specified in jobconf. Use the default allocation\n      // file, fair-scheduler.xml, looking for it on the classpath.\n      allocFile \u003d new Configuration().getResource(\"fair-scheduler.xml\");\n      if (allocFile \u003d\u003d null) {\n        LOG.error(\"The fair scheduler allocation file fair-scheduler.xml was \"\n            + \"not found on the classpath, and no other config file is given \"\n            + \"through mapred.fairscheduler.allocation.file.\");\n      }\n    }\n    reloadAllocs();\n    lastSuccessfulReload \u003d scheduler.getClock().getTime();\n    lastReloadAttempt \u003d scheduler.getClock().getTime();\n    // Create the default queue\n    getQueue(YarnConfiguration.DEFAULT_QUEUE_NAME);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/QueueManager.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/QueueManager.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/QueueManager.java"
      }
    },
    "1ef64e64c05ae5318cd4cb47d03a0494d742fb7c": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-3451. Port Fair Scheduler to MR2 (pwendell via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1361020 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/07/12 5:43 PM",
      "commitName": "1ef64e64c05ae5318cd4cb47d03a0494d742fb7c",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,20 @@\n+  public void initialize() throws IOException, SAXException,\n+      AllocationConfigurationException, ParserConfigurationException {\n+    FairSchedulerConfiguration conf \u003d scheduler.getConf();\n+    this.allocFile \u003d conf.getAllocationFile();\n+    if (allocFile \u003d\u003d null) {\n+      // No allocation file specified in jobconf. Use the default allocation\n+      // file, fair-scheduler.xml, looking for it on the classpath.\n+      allocFile \u003d new Configuration().getResource(\"fair-scheduler.xml\");\n+      if (allocFile \u003d\u003d null) {\n+        LOG.error(\"The fair scheduler allocation file fair-scheduler.xml was \"\n+            + \"not found on the classpath, and no other config file is given \"\n+            + \"through mapred.fairscheduler.allocation.file.\");\n+      }\n+    }\n+    reloadAllocs();\n+    lastSuccessfulReload \u003d scheduler.getClock().getTime();\n+    lastReloadAttempt \u003d scheduler.getClock().getTime();\n+    // Create the default queue\n+    getQueue(YarnConfiguration.DEFAULT_QUEUE_NAME);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void initialize() throws IOException, SAXException,\n      AllocationConfigurationException, ParserConfigurationException {\n    FairSchedulerConfiguration conf \u003d scheduler.getConf();\n    this.allocFile \u003d conf.getAllocationFile();\n    if (allocFile \u003d\u003d null) {\n      // No allocation file specified in jobconf. Use the default allocation\n      // file, fair-scheduler.xml, looking for it on the classpath.\n      allocFile \u003d new Configuration().getResource(\"fair-scheduler.xml\");\n      if (allocFile \u003d\u003d null) {\n        LOG.error(\"The fair scheduler allocation file fair-scheduler.xml was \"\n            + \"not found on the classpath, and no other config file is given \"\n            + \"through mapred.fairscheduler.allocation.file.\");\n      }\n    }\n    reloadAllocs();\n    lastSuccessfulReload \u003d scheduler.getClock().getTime();\n    lastReloadAttempt \u003d scheduler.getClock().getTime();\n    // Create the default queue\n    getQueue(YarnConfiguration.DEFAULT_QUEUE_NAME);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/QueueManager.java"
    }
  }
}