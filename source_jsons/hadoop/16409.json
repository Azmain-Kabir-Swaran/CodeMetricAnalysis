{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RouterClientProtocol.java",
  "functionName": "getRenameDestinations",
  "functionId": "getRenameDestinations___srcLocations-List__RemoteLocation__(modifiers-final)__dst-String(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterClientProtocol.java",
  "functionStartLine": 1815,
  "functionEndLine": 1837,
  "numCommitsSeen": 64,
  "timeTaken": 3708,
  "changeHistory": [
    "ffbb6b6557f4eb8587c7d57cda38f2a0de573f8b",
    "3deb5d345f439cbebcad5296c69689e8334f59ce",
    "6425ed27ea638da75f656204d6df4adad1d91fe1",
    "fb5b3dce6192265bce9b9d93ab663bdc5be8048e"
  ],
  "changeHistoryShort": {
    "ffbb6b6557f4eb8587c7d57cda38f2a0de573f8b": "Ybodychange",
    "3deb5d345f439cbebcad5296c69689e8334f59ce": "Ybodychange",
    "6425ed27ea638da75f656204d6df4adad1d91fe1": "Ymultichange(Ymovefromfile,Ybodychange)",
    "fb5b3dce6192265bce9b9d93ab663bdc5be8048e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ffbb6b6557f4eb8587c7d57cda38f2a0de573f8b": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13255. RBF: Fail when try to remove mount point paths. Contributed by Akira Ajisaka.\n",
      "commitDate": "24/06/19 9:33 AM",
      "commitName": "ffbb6b6557f4eb8587c7d57cda38f2a0de573f8b",
      "commitAuthor": "Ayush Saxena",
      "commitDateOld": "24/06/19 9:33 AM",
      "commitNameOld": "3deb5d345f439cbebcad5296c69689e8334f59ce",
      "commitAuthorOld": "Giovanni Matteo Fumarola",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   private RemoteParam getRenameDestinations(\n       final List\u003cRemoteLocation\u003e srcLocations, final String dst)\n       throws IOException {\n \n     final List\u003cRemoteLocation\u003e dstLocations \u003d\n-        rpcServer.getLocationsForPath(dst, true, false);\n+        rpcServer.getLocationsForPath(dst, false, false);\n     final Map\u003cRemoteLocation, String\u003e dstMap \u003d new HashMap\u003c\u003e();\n \n     Iterator\u003cRemoteLocation\u003e iterator \u003d srcLocations.iterator();\n     while (iterator.hasNext()) {\n       RemoteLocation srcLocation \u003d iterator.next();\n       RemoteLocation eligibleDst \u003d\n           getFirstMatchingLocation(srcLocation, dstLocations);\n       if (eligibleDst !\u003d null) {\n         // Use this dst for this source location\n         dstMap.put(srcLocation, eligibleDst.getDest());\n       } else {\n         // This src destination is not valid, remove from the source list\n         iterator.remove();\n       }\n     }\n     return new RemoteParam(dstMap);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private RemoteParam getRenameDestinations(\n      final List\u003cRemoteLocation\u003e srcLocations, final String dst)\n      throws IOException {\n\n    final List\u003cRemoteLocation\u003e dstLocations \u003d\n        rpcServer.getLocationsForPath(dst, false, false);\n    final Map\u003cRemoteLocation, String\u003e dstMap \u003d new HashMap\u003c\u003e();\n\n    Iterator\u003cRemoteLocation\u003e iterator \u003d srcLocations.iterator();\n    while (iterator.hasNext()) {\n      RemoteLocation srcLocation \u003d iterator.next();\n      RemoteLocation eligibleDst \u003d\n          getFirstMatchingLocation(srcLocation, dstLocations);\n      if (eligibleDst !\u003d null) {\n        // Use this dst for this source location\n        dstMap.put(srcLocation, eligibleDst.getDest());\n      } else {\n        // This src destination is not valid, remove from the source list\n        iterator.remove();\n      }\n    }\n    return new RemoteParam(dstMap);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterClientProtocol.java",
      "extendedDetails": {}
    },
    "3deb5d345f439cbebcad5296c69689e8334f59ce": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14490. RBF: Remove unnecessary quota checks. Contributed by Ayush Saxena.\n",
      "commitDate": "24/06/19 9:33 AM",
      "commitName": "3deb5d345f439cbebcad5296c69689e8334f59ce",
      "commitAuthor": "Giovanni Matteo Fumarola",
      "commitDateOld": "24/06/19 9:33 AM",
      "commitNameOld": "62fa53a01dc7165d7965cdd4fddb444082f0602c",
      "commitAuthorOld": "Ayush Saxena",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   private RemoteParam getRenameDestinations(\n       final List\u003cRemoteLocation\u003e srcLocations, final String dst)\n       throws IOException {\n \n     final List\u003cRemoteLocation\u003e dstLocations \u003d\n-        rpcServer.getLocationsForPath(dst, true);\n+        rpcServer.getLocationsForPath(dst, true, false);\n     final Map\u003cRemoteLocation, String\u003e dstMap \u003d new HashMap\u003c\u003e();\n \n     Iterator\u003cRemoteLocation\u003e iterator \u003d srcLocations.iterator();\n     while (iterator.hasNext()) {\n       RemoteLocation srcLocation \u003d iterator.next();\n       RemoteLocation eligibleDst \u003d\n           getFirstMatchingLocation(srcLocation, dstLocations);\n       if (eligibleDst !\u003d null) {\n         // Use this dst for this source location\n         dstMap.put(srcLocation, eligibleDst.getDest());\n       } else {\n         // This src destination is not valid, remove from the source list\n         iterator.remove();\n       }\n     }\n     return new RemoteParam(dstMap);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private RemoteParam getRenameDestinations(\n      final List\u003cRemoteLocation\u003e srcLocations, final String dst)\n      throws IOException {\n\n    final List\u003cRemoteLocation\u003e dstLocations \u003d\n        rpcServer.getLocationsForPath(dst, true, false);\n    final Map\u003cRemoteLocation, String\u003e dstMap \u003d new HashMap\u003c\u003e();\n\n    Iterator\u003cRemoteLocation\u003e iterator \u003d srcLocations.iterator();\n    while (iterator.hasNext()) {\n      RemoteLocation srcLocation \u003d iterator.next();\n      RemoteLocation eligibleDst \u003d\n          getFirstMatchingLocation(srcLocation, dstLocations);\n      if (eligibleDst !\u003d null) {\n        // Use this dst for this source location\n        dstMap.put(srcLocation, eligibleDst.getDest());\n      } else {\n        // This src destination is not valid, remove from the source list\n        iterator.remove();\n      }\n    }\n    return new RemoteParam(dstMap);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterClientProtocol.java",
      "extendedDetails": {}
    },
    "6425ed27ea638da75f656204d6df4adad1d91fe1": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "HDFS-13790. RBF: Move ClientProtocol APIs to its own module. Contributed by Chao Sun.\n",
      "commitDate": "19/08/18 11:50 PM",
      "commitName": "6425ed27ea638da75f656204d6df4adad1d91fe1",
      "commitAuthor": "Brahma Reddy Battula",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-13790. RBF: Move ClientProtocol APIs to its own module. Contributed by Chao Sun.\n",
          "commitDate": "19/08/18 11:50 PM",
          "commitName": "6425ed27ea638da75f656204d6df4adad1d91fe1",
          "commitAuthor": "Brahma Reddy Battula",
          "commitDateOld": "17/08/18 9:56 PM",
          "commitNameOld": "4aacbfff605262aaf3dbd926258afcadc86c72c0",
          "commitAuthorOld": "Rohith Sharma K S",
          "daysBetweenCommits": 2.08,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,23 @@\n   private RemoteParam getRenameDestinations(\n       final List\u003cRemoteLocation\u003e srcLocations, final String dst)\n-          throws IOException {\n+      throws IOException {\n \n-    final List\u003cRemoteLocation\u003e dstLocations \u003d getLocationsForPath(dst, true);\n+    final List\u003cRemoteLocation\u003e dstLocations \u003d\n+        rpcServer.getLocationsForPath(dst, true);\n     final Map\u003cRemoteLocation, String\u003e dstMap \u003d new HashMap\u003c\u003e();\n \n     Iterator\u003cRemoteLocation\u003e iterator \u003d srcLocations.iterator();\n     while (iterator.hasNext()) {\n       RemoteLocation srcLocation \u003d iterator.next();\n       RemoteLocation eligibleDst \u003d\n           getFirstMatchingLocation(srcLocation, dstLocations);\n       if (eligibleDst !\u003d null) {\n         // Use this dst for this source location\n         dstMap.put(srcLocation, eligibleDst.getDest());\n       } else {\n         // This src destination is not valid, remove from the source list\n         iterator.remove();\n       }\n     }\n     return new RemoteParam(dstMap);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private RemoteParam getRenameDestinations(\n      final List\u003cRemoteLocation\u003e srcLocations, final String dst)\n      throws IOException {\n\n    final List\u003cRemoteLocation\u003e dstLocations \u003d\n        rpcServer.getLocationsForPath(dst, true);\n    final Map\u003cRemoteLocation, String\u003e dstMap \u003d new HashMap\u003c\u003e();\n\n    Iterator\u003cRemoteLocation\u003e iterator \u003d srcLocations.iterator();\n    while (iterator.hasNext()) {\n      RemoteLocation srcLocation \u003d iterator.next();\n      RemoteLocation eligibleDst \u003d\n          getFirstMatchingLocation(srcLocation, dstLocations);\n      if (eligibleDst !\u003d null) {\n        // Use this dst for this source location\n        dstMap.put(srcLocation, eligibleDst.getDest());\n      } else {\n        // This src destination is not valid, remove from the source list\n        iterator.remove();\n      }\n    }\n    return new RemoteParam(dstMap);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterClientProtocol.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterRpcServer.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterClientProtocol.java",
            "oldMethodName": "getRenameDestinations",
            "newMethodName": "getRenameDestinations"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-13790. RBF: Move ClientProtocol APIs to its own module. Contributed by Chao Sun.\n",
          "commitDate": "19/08/18 11:50 PM",
          "commitName": "6425ed27ea638da75f656204d6df4adad1d91fe1",
          "commitAuthor": "Brahma Reddy Battula",
          "commitDateOld": "17/08/18 9:56 PM",
          "commitNameOld": "4aacbfff605262aaf3dbd926258afcadc86c72c0",
          "commitAuthorOld": "Rohith Sharma K S",
          "daysBetweenCommits": 2.08,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,23 @@\n   private RemoteParam getRenameDestinations(\n       final List\u003cRemoteLocation\u003e srcLocations, final String dst)\n-          throws IOException {\n+      throws IOException {\n \n-    final List\u003cRemoteLocation\u003e dstLocations \u003d getLocationsForPath(dst, true);\n+    final List\u003cRemoteLocation\u003e dstLocations \u003d\n+        rpcServer.getLocationsForPath(dst, true);\n     final Map\u003cRemoteLocation, String\u003e dstMap \u003d new HashMap\u003c\u003e();\n \n     Iterator\u003cRemoteLocation\u003e iterator \u003d srcLocations.iterator();\n     while (iterator.hasNext()) {\n       RemoteLocation srcLocation \u003d iterator.next();\n       RemoteLocation eligibleDst \u003d\n           getFirstMatchingLocation(srcLocation, dstLocations);\n       if (eligibleDst !\u003d null) {\n         // Use this dst for this source location\n         dstMap.put(srcLocation, eligibleDst.getDest());\n       } else {\n         // This src destination is not valid, remove from the source list\n         iterator.remove();\n       }\n     }\n     return new RemoteParam(dstMap);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private RemoteParam getRenameDestinations(\n      final List\u003cRemoteLocation\u003e srcLocations, final String dst)\n      throws IOException {\n\n    final List\u003cRemoteLocation\u003e dstLocations \u003d\n        rpcServer.getLocationsForPath(dst, true);\n    final Map\u003cRemoteLocation, String\u003e dstMap \u003d new HashMap\u003c\u003e();\n\n    Iterator\u003cRemoteLocation\u003e iterator \u003d srcLocations.iterator();\n    while (iterator.hasNext()) {\n      RemoteLocation srcLocation \u003d iterator.next();\n      RemoteLocation eligibleDst \u003d\n          getFirstMatchingLocation(srcLocation, dstLocations);\n      if (eligibleDst !\u003d null) {\n        // Use this dst for this source location\n        dstMap.put(srcLocation, eligibleDst.getDest());\n      } else {\n        // This src destination is not valid, remove from the source list\n        iterator.remove();\n      }\n    }\n    return new RemoteParam(dstMap);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterClientProtocol.java",
          "extendedDetails": {}
        }
      ]
    },
    "fb5b3dce6192265bce9b9d93ab663bdc5be8048e": {
      "type": "Yintroduced",
      "commitMessage": "Revert \"HDFS-13790. RBF: Move ClientProtocol APIs to its own module. Contributed by Chao Sun.\"\n\nThis reverts commit fa121eb66bc42e9cb5586f8c2e268cfdc2ed187a.\n",
      "commitDate": "17/08/18 8:01 AM",
      "commitName": "fb5b3dce6192265bce9b9d93ab663bdc5be8048e",
      "commitAuthor": "Xiaoyu Yao",
      "diff": "@@ -0,0 +1,22 @@\n+  private RemoteParam getRenameDestinations(\n+      final List\u003cRemoteLocation\u003e srcLocations, final String dst)\n+          throws IOException {\n+\n+    final List\u003cRemoteLocation\u003e dstLocations \u003d getLocationsForPath(dst, true);\n+    final Map\u003cRemoteLocation, String\u003e dstMap \u003d new HashMap\u003c\u003e();\n+\n+    Iterator\u003cRemoteLocation\u003e iterator \u003d srcLocations.iterator();\n+    while (iterator.hasNext()) {\n+      RemoteLocation srcLocation \u003d iterator.next();\n+      RemoteLocation eligibleDst \u003d\n+          getFirstMatchingLocation(srcLocation, dstLocations);\n+      if (eligibleDst !\u003d null) {\n+        // Use this dst for this source location\n+        dstMap.put(srcLocation, eligibleDst.getDest());\n+      } else {\n+        // This src destination is not valid, remove from the source list\n+        iterator.remove();\n+      }\n+    }\n+    return new RemoteParam(dstMap);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private RemoteParam getRenameDestinations(\n      final List\u003cRemoteLocation\u003e srcLocations, final String dst)\n          throws IOException {\n\n    final List\u003cRemoteLocation\u003e dstLocations \u003d getLocationsForPath(dst, true);\n    final Map\u003cRemoteLocation, String\u003e dstMap \u003d new HashMap\u003c\u003e();\n\n    Iterator\u003cRemoteLocation\u003e iterator \u003d srcLocations.iterator();\n    while (iterator.hasNext()) {\n      RemoteLocation srcLocation \u003d iterator.next();\n      RemoteLocation eligibleDst \u003d\n          getFirstMatchingLocation(srcLocation, dstLocations);\n      if (eligibleDst !\u003d null) {\n        // Use this dst for this source location\n        dstMap.put(srcLocation, eligibleDst.getDest());\n      } else {\n        // This src destination is not valid, remove from the source list\n        iterator.remove();\n      }\n    }\n    return new RemoteParam(dstMap);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterRpcServer.java"
    }
  }
}