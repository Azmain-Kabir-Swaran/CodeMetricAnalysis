{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSNamesystem.java",
  "functionName": "startCheckpoint",
  "functionId": "startCheckpoint___backupNode-NamenodeRegistration__activeNamenode-NamenodeRegistration",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
  "functionStartLine": 5123,
  "functionEndLine": 5139,
  "numCommitsSeen": 1123,
  "timeTaken": 53849,
  "changeHistory": [
    "ff0b99eafeda035ebe0dc82cfe689808047a8893",
    "71de367c5e80ea76d1e8d21f0216cd6b879dcee5",
    "8e253cb93030642f5a7324bad0f161cd0ad33206",
    "34f08944b7c8d58f531a3f3bf3d4ee4cd3fa643a",
    "1fe1942328856dd832e9f94fb56a40ab3d810870",
    "1b531c1dbb452a6192fad411605d2baaa3831bcd",
    "3bf09c51501a23b7fa28fd0a0c4c0965858d026c",
    "36d1c49486587c2dbb193e8538b1d4510c462fa6",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "ff0b99eafeda035ebe0dc82cfe689808047a8893": "Ybodychange",
    "71de367c5e80ea76d1e8d21f0216cd6b879dcee5": "Ybodychange",
    "8e253cb93030642f5a7324bad0f161cd0ad33206": "Ybodychange",
    "34f08944b7c8d58f531a3f3bf3d4ee4cd3fa643a": "Ybodychange",
    "1fe1942328856dd832e9f94fb56a40ab3d810870": "Ybodychange",
    "1b531c1dbb452a6192fad411605d2baaa3831bcd": "Ymultichange(Yparameterchange,Ybodychange)",
    "3bf09c51501a23b7fa28fd0a0c4c0965858d026c": "Ybodychange",
    "36d1c49486587c2dbb193e8538b1d4510c462fa6": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ff0b99eafeda035ebe0dc82cfe689808047a8893": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10872. Add MutableRate metrics for FSNamesystemLock operations. Contributed by Erik Krogen.\n",
      "commitDate": "14/11/16 11:05 AM",
      "commitName": "ff0b99eafeda035ebe0dc82cfe689808047a8893",
      "commitAuthor": "Zhe Zhang",
      "commitDateOld": "08/11/16 6:17 PM",
      "commitNameOld": "ed0bebabaaf27cd730f7f8eb002d92c9c7db327d",
      "commitAuthorOld": "Brahma Reddy Battula",
      "daysBetweenCommits": 5.7,
      "commitsBetweenForRepo": 36,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   NamenodeCommand startCheckpoint(NamenodeRegistration backupNode,\n       NamenodeRegistration activeNamenode) throws IOException {\n     checkOperation(OperationCategory.CHECKPOINT);\n     writeLock();\n     try {\n       checkOperation(OperationCategory.CHECKPOINT);\n       checkNameNodeSafeMode(\"Checkpoint not started\");\n       \n       LOG.info(\"Start checkpoint for \" + backupNode.getAddress());\n       NamenodeCommand cmd \u003d getFSImage().startCheckpoint(backupNode,\n           activeNamenode, getEffectiveLayoutVersion());\n       getEditLog().logSync();\n       return cmd;\n     } finally {\n-      writeUnlock();\n+      writeUnlock(\"startCheckpoint\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  NamenodeCommand startCheckpoint(NamenodeRegistration backupNode,\n      NamenodeRegistration activeNamenode) throws IOException {\n    checkOperation(OperationCategory.CHECKPOINT);\n    writeLock();\n    try {\n      checkOperation(OperationCategory.CHECKPOINT);\n      checkNameNodeSafeMode(\"Checkpoint not started\");\n      \n      LOG.info(\"Start checkpoint for \" + backupNode.getAddress());\n      NamenodeCommand cmd \u003d getFSImage().startCheckpoint(backupNode,\n          activeNamenode, getEffectiveLayoutVersion());\n      getEditLog().logSync();\n      return cmd;\n    } finally {\n      writeUnlock(\"startCheckpoint\");\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "71de367c5e80ea76d1e8d21f0216cd6b879dcee5": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8432. Introduce a minimum compatible layout version to allow downgrade in more rolling upgrade use cases. Contributed by Chris Nauroth.\n",
      "commitDate": "06/06/15 9:43 AM",
      "commitName": "71de367c5e80ea76d1e8d21f0216cd6b879dcee5",
      "commitAuthor": "cnauroth",
      "commitDateOld": "05/06/15 3:09 PM",
      "commitNameOld": "3841d09765bab332c9ae4803c5981799585b1f41",
      "commitAuthorOld": "Xiaoyu Yao",
      "daysBetweenCommits": 0.77,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   NamenodeCommand startCheckpoint(NamenodeRegistration backupNode,\n       NamenodeRegistration activeNamenode) throws IOException {\n     checkOperation(OperationCategory.CHECKPOINT);\n     writeLock();\n     try {\n       checkOperation(OperationCategory.CHECKPOINT);\n       checkNameNodeSafeMode(\"Checkpoint not started\");\n       \n       LOG.info(\"Start checkpoint for \" + backupNode.getAddress());\n       NamenodeCommand cmd \u003d getFSImage().startCheckpoint(backupNode,\n-          activeNamenode);\n+          activeNamenode, getEffectiveLayoutVersion());\n       getEditLog().logSync();\n       return cmd;\n     } finally {\n       writeUnlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  NamenodeCommand startCheckpoint(NamenodeRegistration backupNode,\n      NamenodeRegistration activeNamenode) throws IOException {\n    checkOperation(OperationCategory.CHECKPOINT);\n    writeLock();\n    try {\n      checkOperation(OperationCategory.CHECKPOINT);\n      checkNameNodeSafeMode(\"Checkpoint not started\");\n      \n      LOG.info(\"Start checkpoint for \" + backupNode.getAddress());\n      NamenodeCommand cmd \u003d getFSImage().startCheckpoint(backupNode,\n          activeNamenode, getEffectiveLayoutVersion());\n      getEditLog().logSync();\n      return cmd;\n    } finally {\n      writeUnlock();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "8e253cb93030642f5a7324bad0f161cd0ad33206": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7412. Move RetryCache to NameNodeRpcServer. Contributed by Haohui Mai.\n",
      "commitDate": "24/11/14 11:11 AM",
      "commitName": "8e253cb93030642f5a7324bad0f161cd0ad33206",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "24/11/14 10:46 AM",
      "commitNameOld": "daacbc18d739d030822df0b75205eeb067f89850",
      "commitAuthorOld": "Colin Patrick Mccabe",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,17 @@\n   NamenodeCommand startCheckpoint(NamenodeRegistration backupNode,\n       NamenodeRegistration activeNamenode) throws IOException {\n     checkOperation(OperationCategory.CHECKPOINT);\n-    CacheEntryWithPayload cacheEntry \u003d RetryCache.waitForCompletion(retryCache,\n-        null);\n-    if (cacheEntry !\u003d null \u0026\u0026 cacheEntry.isSuccess()) {\n-      return (NamenodeCommand) cacheEntry.getPayload();\n-    }\n     writeLock();\n-    NamenodeCommand cmd \u003d null;\n     try {\n       checkOperation(OperationCategory.CHECKPOINT);\n       checkNameNodeSafeMode(\"Checkpoint not started\");\n       \n       LOG.info(\"Start checkpoint for \" + backupNode.getAddress());\n-      cmd \u003d getFSImage().startCheckpoint(backupNode, activeNamenode);\n+      NamenodeCommand cmd \u003d getFSImage().startCheckpoint(backupNode,\n+          activeNamenode);\n       getEditLog().logSync();\n       return cmd;\n     } finally {\n       writeUnlock();\n-      RetryCache.setState(cacheEntry, cmd !\u003d null, cmd);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  NamenodeCommand startCheckpoint(NamenodeRegistration backupNode,\n      NamenodeRegistration activeNamenode) throws IOException {\n    checkOperation(OperationCategory.CHECKPOINT);\n    writeLock();\n    try {\n      checkOperation(OperationCategory.CHECKPOINT);\n      checkNameNodeSafeMode(\"Checkpoint not started\");\n      \n      LOG.info(\"Start checkpoint for \" + backupNode.getAddress());\n      NamenodeCommand cmd \u003d getFSImage().startCheckpoint(backupNode,\n          activeNamenode);\n      getEditLog().logSync();\n      return cmd;\n    } finally {\n      writeUnlock();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "34f08944b7c8d58f531a3f3bf3d4ee4cd3fa643a": {
      "type": "Ybodychange",
      "commitMessage": "merge trunk to branch HDFS-4949\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4949@1532952 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/10/13 7:14 PM",
      "commitName": "34f08944b7c8d58f531a3f3bf3d4ee4cd3fa643a",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "16/10/13 3:15 PM",
      "commitNameOld": "3cc7a38a53c8ae27ef6b2397cddc5d14a378203a",
      "commitAuthorOld": "Colin McCabe",
      "daysBetweenCommits": 0.17,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,23 @@\n   NamenodeCommand startCheckpoint(NamenodeRegistration backupNode,\n       NamenodeRegistration activeNamenode) throws IOException {\n     checkOperation(OperationCategory.CHECKPOINT);\n     CacheEntryWithPayload cacheEntry \u003d RetryCache.waitForCompletion(retryCache,\n         null);\n     if (cacheEntry !\u003d null \u0026\u0026 cacheEntry.isSuccess()) {\n       return (NamenodeCommand) cacheEntry.getPayload();\n     }\n     writeLock();\n     NamenodeCommand cmd \u003d null;\n     try {\n       checkOperation(OperationCategory.CHECKPOINT);\n \n-      if (isInSafeMode()) {\n-        throw new SafeModeException(\"Checkpoint not started\", safeMode);\n-      }\n+      checkNameNodeSafeMode(\"Checkpoint not started\");\n       LOG.info(\"Start checkpoint for \" + backupNode.getAddress());\n       cmd \u003d getFSImage().startCheckpoint(backupNode, activeNamenode);\n       getEditLog().logSync();\n       return cmd;\n     } finally {\n       writeUnlock();\n       RetryCache.setState(cacheEntry, cmd !\u003d null, cmd);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  NamenodeCommand startCheckpoint(NamenodeRegistration backupNode,\n      NamenodeRegistration activeNamenode) throws IOException {\n    checkOperation(OperationCategory.CHECKPOINT);\n    CacheEntryWithPayload cacheEntry \u003d RetryCache.waitForCompletion(retryCache,\n        null);\n    if (cacheEntry !\u003d null \u0026\u0026 cacheEntry.isSuccess()) {\n      return (NamenodeCommand) cacheEntry.getPayload();\n    }\n    writeLock();\n    NamenodeCommand cmd \u003d null;\n    try {\n      checkOperation(OperationCategory.CHECKPOINT);\n\n      checkNameNodeSafeMode(\"Checkpoint not started\");\n      LOG.info(\"Start checkpoint for \" + backupNode.getAddress());\n      cmd \u003d getFSImage().startCheckpoint(backupNode, activeNamenode);\n      getEditLog().logSync();\n      return cmd;\n    } finally {\n      writeUnlock();\n      RetryCache.setState(cacheEntry, cmd !\u003d null, cmd);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "1fe1942328856dd832e9f94fb56a40ab3d810870": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5291. Standby namenode after transition to active goes into safemode. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1530112 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/10/13 4:58 PM",
      "commitName": "1fe1942328856dd832e9f94fb56a40ab3d810870",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "06/10/13 11:39 AM",
      "commitNameOld": "7317e97bd72ca30f5db37fa94389dbdb52ae079e",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 1.22,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,23 @@\n   NamenodeCommand startCheckpoint(NamenodeRegistration backupNode,\n       NamenodeRegistration activeNamenode) throws IOException {\n     checkOperation(OperationCategory.CHECKPOINT);\n     CacheEntryWithPayload cacheEntry \u003d RetryCache.waitForCompletion(retryCache,\n         null);\n     if (cacheEntry !\u003d null \u0026\u0026 cacheEntry.isSuccess()) {\n       return (NamenodeCommand) cacheEntry.getPayload();\n     }\n     writeLock();\n     NamenodeCommand cmd \u003d null;\n     try {\n       checkOperation(OperationCategory.CHECKPOINT);\n \n-      if (isInSafeMode()) {\n-        throw new SafeModeException(\"Checkpoint not started\", safeMode);\n-      }\n+      checkNameNodeSafeMode(\"Checkpoint not started\");\n       LOG.info(\"Start checkpoint for \" + backupNode.getAddress());\n       cmd \u003d getFSImage().startCheckpoint(backupNode, activeNamenode);\n       getEditLog().logSync();\n       return cmd;\n     } finally {\n       writeUnlock();\n       RetryCache.setState(cacheEntry, cmd !\u003d null, cmd);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  NamenodeCommand startCheckpoint(NamenodeRegistration backupNode,\n      NamenodeRegistration activeNamenode) throws IOException {\n    checkOperation(OperationCategory.CHECKPOINT);\n    CacheEntryWithPayload cacheEntry \u003d RetryCache.waitForCompletion(retryCache,\n        null);\n    if (cacheEntry !\u003d null \u0026\u0026 cacheEntry.isSuccess()) {\n      return (NamenodeCommand) cacheEntry.getPayload();\n    }\n    writeLock();\n    NamenodeCommand cmd \u003d null;\n    try {\n      checkOperation(OperationCategory.CHECKPOINT);\n\n      checkNameNodeSafeMode(\"Checkpoint not started\");\n      LOG.info(\"Start checkpoint for \" + backupNode.getAddress());\n      cmd \u003d getFSImage().startCheckpoint(backupNode, activeNamenode);\n      getEditLog().logSync();\n      return cmd;\n    } finally {\n      writeUnlock();\n      RetryCache.setState(cacheEntry, cmd !\u003d null, cmd);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "1b531c1dbb452a6192fad411605d2baaa3831bcd": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-4979. Implement retry cache on Namenode. Contributed by Suresh Srinivas.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1507170 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/07/13 6:09 PM",
      "commitName": "1b531c1dbb452a6192fad411605d2baaa3831bcd",
      "commitAuthor": "Suresh Srinivas",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-4979. Implement retry cache on Namenode. Contributed by Suresh Srinivas.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1507170 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "25/07/13 6:09 PM",
          "commitName": "1b531c1dbb452a6192fad411605d2baaa3831bcd",
          "commitAuthor": "Suresh Srinivas",
          "commitDateOld": "24/07/13 5:32 PM",
          "commitNameOld": "f138ae68f9be0ae072a6a4ee50e94a1608c90edb",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 1.03,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,25 @@\n-  NamenodeCommand startCheckpoint(\n-                                NamenodeRegistration bnReg, // backup node\n-                                NamenodeRegistration nnReg) // active name-node\n-  throws IOException {\n+  NamenodeCommand startCheckpoint(NamenodeRegistration backupNode,\n+      NamenodeRegistration activeNamenode) throws IOException {\n     checkOperation(OperationCategory.CHECKPOINT);\n+    CacheEntryWithPayload cacheEntry \u003d RetryCache.waitForCompletion(retryCache,\n+        null);\n+    if (cacheEntry !\u003d null \u0026\u0026 cacheEntry.isSuccess()) {\n+      return (NamenodeCommand) cacheEntry.getPayload();\n+    }\n     writeLock();\n+    NamenodeCommand cmd \u003d null;\n     try {\n       checkOperation(OperationCategory.CHECKPOINT);\n \n       if (isInSafeMode()) {\n         throw new SafeModeException(\"Checkpoint not started\", safeMode);\n       }\n-      LOG.info(\"Start checkpoint for \" + bnReg.getAddress());\n-      NamenodeCommand cmd \u003d getFSImage().startCheckpoint(bnReg, nnReg);\n+      LOG.info(\"Start checkpoint for \" + backupNode.getAddress());\n+      cmd \u003d getFSImage().startCheckpoint(backupNode, activeNamenode);\n       getEditLog().logSync();\n       return cmd;\n     } finally {\n       writeUnlock();\n+      RetryCache.setState(cacheEntry, cmd !\u003d null, cmd);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  NamenodeCommand startCheckpoint(NamenodeRegistration backupNode,\n      NamenodeRegistration activeNamenode) throws IOException {\n    checkOperation(OperationCategory.CHECKPOINT);\n    CacheEntryWithPayload cacheEntry \u003d RetryCache.waitForCompletion(retryCache,\n        null);\n    if (cacheEntry !\u003d null \u0026\u0026 cacheEntry.isSuccess()) {\n      return (NamenodeCommand) cacheEntry.getPayload();\n    }\n    writeLock();\n    NamenodeCommand cmd \u003d null;\n    try {\n      checkOperation(OperationCategory.CHECKPOINT);\n\n      if (isInSafeMode()) {\n        throw new SafeModeException(\"Checkpoint not started\", safeMode);\n      }\n      LOG.info(\"Start checkpoint for \" + backupNode.getAddress());\n      cmd \u003d getFSImage().startCheckpoint(backupNode, activeNamenode);\n      getEditLog().logSync();\n      return cmd;\n    } finally {\n      writeUnlock();\n      RetryCache.setState(cacheEntry, cmd !\u003d null, cmd);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
          "extendedDetails": {
            "oldValue": "[bnReg-NamenodeRegistration, nnReg-NamenodeRegistration]",
            "newValue": "[backupNode-NamenodeRegistration, activeNamenode-NamenodeRegistration]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-4979. Implement retry cache on Namenode. Contributed by Suresh Srinivas.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1507170 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "25/07/13 6:09 PM",
          "commitName": "1b531c1dbb452a6192fad411605d2baaa3831bcd",
          "commitAuthor": "Suresh Srinivas",
          "commitDateOld": "24/07/13 5:32 PM",
          "commitNameOld": "f138ae68f9be0ae072a6a4ee50e94a1608c90edb",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 1.03,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,25 @@\n-  NamenodeCommand startCheckpoint(\n-                                NamenodeRegistration bnReg, // backup node\n-                                NamenodeRegistration nnReg) // active name-node\n-  throws IOException {\n+  NamenodeCommand startCheckpoint(NamenodeRegistration backupNode,\n+      NamenodeRegistration activeNamenode) throws IOException {\n     checkOperation(OperationCategory.CHECKPOINT);\n+    CacheEntryWithPayload cacheEntry \u003d RetryCache.waitForCompletion(retryCache,\n+        null);\n+    if (cacheEntry !\u003d null \u0026\u0026 cacheEntry.isSuccess()) {\n+      return (NamenodeCommand) cacheEntry.getPayload();\n+    }\n     writeLock();\n+    NamenodeCommand cmd \u003d null;\n     try {\n       checkOperation(OperationCategory.CHECKPOINT);\n \n       if (isInSafeMode()) {\n         throw new SafeModeException(\"Checkpoint not started\", safeMode);\n       }\n-      LOG.info(\"Start checkpoint for \" + bnReg.getAddress());\n-      NamenodeCommand cmd \u003d getFSImage().startCheckpoint(bnReg, nnReg);\n+      LOG.info(\"Start checkpoint for \" + backupNode.getAddress());\n+      cmd \u003d getFSImage().startCheckpoint(backupNode, activeNamenode);\n       getEditLog().logSync();\n       return cmd;\n     } finally {\n       writeUnlock();\n+      RetryCache.setState(cacheEntry, cmd !\u003d null, cmd);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  NamenodeCommand startCheckpoint(NamenodeRegistration backupNode,\n      NamenodeRegistration activeNamenode) throws IOException {\n    checkOperation(OperationCategory.CHECKPOINT);\n    CacheEntryWithPayload cacheEntry \u003d RetryCache.waitForCompletion(retryCache,\n        null);\n    if (cacheEntry !\u003d null \u0026\u0026 cacheEntry.isSuccess()) {\n      return (NamenodeCommand) cacheEntry.getPayload();\n    }\n    writeLock();\n    NamenodeCommand cmd \u003d null;\n    try {\n      checkOperation(OperationCategory.CHECKPOINT);\n\n      if (isInSafeMode()) {\n        throw new SafeModeException(\"Checkpoint not started\", safeMode);\n      }\n      LOG.info(\"Start checkpoint for \" + backupNode.getAddress());\n      cmd \u003d getFSImage().startCheckpoint(backupNode, activeNamenode);\n      getEditLog().logSync();\n      return cmd;\n    } finally {\n      writeUnlock();\n      RetryCache.setState(cacheEntry, cmd !\u003d null, cmd);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
          "extendedDetails": {}
        }
      ]
    },
    "3bf09c51501a23b7fa28fd0a0c4c0965858d026c": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4591. HA clients can fail to fail over while Standby NN is performing long checkpoint. Contributed by Aaron T. Myers.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1456107 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/03/13 12:51 PM",
      "commitName": "3bf09c51501a23b7fa28fd0a0c4c0965858d026c",
      "commitAuthor": "Aaron Myers",
      "commitDateOld": "12/03/13 7:32 PM",
      "commitNameOld": "86a940f7adc5bd9c9eaea2283df5e014e5079ab6",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.72,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,20 @@\n   NamenodeCommand startCheckpoint(\n                                 NamenodeRegistration bnReg, // backup node\n                                 NamenodeRegistration nnReg) // active name-node\n   throws IOException {\n+    checkOperation(OperationCategory.CHECKPOINT);\n     writeLock();\n     try {\n       checkOperation(OperationCategory.CHECKPOINT);\n \n       if (isInSafeMode()) {\n         throw new SafeModeException(\"Checkpoint not started\", safeMode);\n       }\n       LOG.info(\"Start checkpoint for \" + bnReg.getAddress());\n       NamenodeCommand cmd \u003d getFSImage().startCheckpoint(bnReg, nnReg);\n       getEditLog().logSync();\n       return cmd;\n     } finally {\n       writeUnlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  NamenodeCommand startCheckpoint(\n                                NamenodeRegistration bnReg, // backup node\n                                NamenodeRegistration nnReg) // active name-node\n  throws IOException {\n    checkOperation(OperationCategory.CHECKPOINT);\n    writeLock();\n    try {\n      checkOperation(OperationCategory.CHECKPOINT);\n\n      if (isInSafeMode()) {\n        throw new SafeModeException(\"Checkpoint not started\", safeMode);\n      }\n      LOG.info(\"Start checkpoint for \" + bnReg.getAddress());\n      NamenodeCommand cmd \u003d getFSImage().startCheckpoint(bnReg, nnReg);\n      getEditLog().logSync();\n      return cmd;\n    } finally {\n      writeUnlock();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "36d1c49486587c2dbb193e8538b1d4510c462fa6": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2693. Fix synchronization issues around state transition. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1221582 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "20/12/11 7:03 PM",
      "commitName": "36d1c49486587c2dbb193e8538b1d4510c462fa6",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "16/12/11 10:36 AM",
      "commitNameOld": "371f4228e86f5ebffb3d8647fb30b8bdc2b777c4",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 4.35,
      "commitsBetweenForRepo": 20,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,19 @@\n   NamenodeCommand startCheckpoint(\n                                 NamenodeRegistration bnReg, // backup node\n                                 NamenodeRegistration nnReg) // active name-node\n   throws IOException {\n     writeLock();\n     try {\n+      checkOperation(OperationCategory.CHECKPOINT);\n+\n       if (isInSafeMode()) {\n         throw new SafeModeException(\"Checkpoint not started\", safeMode);\n       }\n       LOG.info(\"Start checkpoint for \" + bnReg.getAddress());\n       NamenodeCommand cmd \u003d getFSImage().startCheckpoint(bnReg, nnReg);\n       getEditLog().logSync();\n       return cmd;\n     } finally {\n       writeUnlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  NamenodeCommand startCheckpoint(\n                                NamenodeRegistration bnReg, // backup node\n                                NamenodeRegistration nnReg) // active name-node\n  throws IOException {\n    writeLock();\n    try {\n      checkOperation(OperationCategory.CHECKPOINT);\n\n      if (isInSafeMode()) {\n        throw new SafeModeException(\"Checkpoint not started\", safeMode);\n      }\n      LOG.info(\"Start checkpoint for \" + bnReg.getAddress());\n      NamenodeCommand cmd \u003d getFSImage().startCheckpoint(bnReg, nnReg);\n      getEditLog().logSync();\n      return cmd;\n    } finally {\n      writeUnlock();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  NamenodeCommand startCheckpoint(\n                                NamenodeRegistration bnReg, // backup node\n                                NamenodeRegistration nnReg) // active name-node\n  throws IOException {\n    writeLock();\n    try {\n      if (isInSafeMode()) {\n        throw new SafeModeException(\"Checkpoint not started\", safeMode);\n      }\n      LOG.info(\"Start checkpoint for \" + bnReg.getAddress());\n      NamenodeCommand cmd \u003d getFSImage().startCheckpoint(bnReg, nnReg);\n      getEditLog().logSync();\n      return cmd;\n    } finally {\n      writeUnlock();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  NamenodeCommand startCheckpoint(\n                                NamenodeRegistration bnReg, // backup node\n                                NamenodeRegistration nnReg) // active name-node\n  throws IOException {\n    writeLock();\n    try {\n      if (isInSafeMode()) {\n        throw new SafeModeException(\"Checkpoint not started\", safeMode);\n      }\n      LOG.info(\"Start checkpoint for \" + bnReg.getAddress());\n      NamenodeCommand cmd \u003d getFSImage().startCheckpoint(bnReg, nnReg);\n      getEditLog().logSync();\n      return cmd;\n    } finally {\n      writeUnlock();\n    }\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,17 @@\n+  NamenodeCommand startCheckpoint(\n+                                NamenodeRegistration bnReg, // backup node\n+                                NamenodeRegistration nnReg) // active name-node\n+  throws IOException {\n+    writeLock();\n+    try {\n+      if (isInSafeMode()) {\n+        throw new SafeModeException(\"Checkpoint not started\", safeMode);\n+      }\n+      LOG.info(\"Start checkpoint for \" + bnReg.getAddress());\n+      NamenodeCommand cmd \u003d getFSImage().startCheckpoint(bnReg, nnReg);\n+      getEditLog().logSync();\n+      return cmd;\n+    } finally {\n+      writeUnlock();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  NamenodeCommand startCheckpoint(\n                                NamenodeRegistration bnReg, // backup node\n                                NamenodeRegistration nnReg) // active name-node\n  throws IOException {\n    writeLock();\n    try {\n      if (isInSafeMode()) {\n        throw new SafeModeException(\"Checkpoint not started\", safeMode);\n      }\n      LOG.info(\"Start checkpoint for \" + bnReg.getAddress());\n      NamenodeCommand cmd \u003d getFSImage().startCheckpoint(bnReg, nnReg);\n      getEditLog().logSync();\n      return cmd;\n    } finally {\n      writeUnlock();\n    }\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java"
    }
  }
}