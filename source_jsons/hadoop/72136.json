{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "KerberosName.java",
  "functionName": "parseRules",
  "functionId": "parseRules___rules-String",
  "sourceFilePath": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/util/KerberosName.java",
  "functionStartLine": 358,
  "functionEndLine": 380,
  "numCommitsSeen": 18,
  "timeTaken": 1025,
  "changeHistory": [
    "dca7350a36f051c50078a94ce4d784f53162033a",
    "2b016dac8232e0f5c43293adcbdf7164f5fca74c",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "a0f120ce68dddb0cb31b64c89f3224313f3cb5af"
  ],
  "changeHistoryShort": {
    "dca7350a36f051c50078a94ce4d784f53162033a": "Ybodychange",
    "2b016dac8232e0f5c43293adcbdf7164f5fca74c": "Yfilerename",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "a0f120ce68dddb0cb31b64c89f3224313f3cb5af": "Yintroduced"
  },
  "changeHistoryDetails": {
    "dca7350a36f051c50078a94ce4d784f53162033a": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10566. Add toLowerCase support to auth_to_local rules for service name. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1593105 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/05/14 11:20 AM",
      "commitName": "dca7350a36f051c50078a94ce4d784f53162033a",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "18/03/13 6:46 AM",
      "commitNameOld": "7eb7b3b723c524ece8ef2247943eb631fefcfe41",
      "commitAuthorOld": "Daryn Sharp",
      "daysBetweenCommits": 415.19,
      "commitsBetweenForRepo": 2734,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,23 @@\n   static List\u003cRule\u003e parseRules(String rules) {\n     List\u003cRule\u003e result \u003d new ArrayList\u003cRule\u003e();\n     String remaining \u003d rules.trim();\n     while (remaining.length() \u003e 0) {\n       Matcher matcher \u003d ruleParser.matcher(remaining);\n       if (!matcher.lookingAt()) {\n         throw new IllegalArgumentException(\"Invalid rule: \" + remaining);\n       }\n       if (matcher.group(2) !\u003d null) {\n         result.add(new Rule());\n       } else {\n         result.add(new Rule(Integer.parseInt(matcher.group(4)),\n                             matcher.group(5),\n                             matcher.group(7),\n                             matcher.group(9),\n                             matcher.group(10),\n-                            \"g\".equals(matcher.group(11))));\n+                            \"g\".equals(matcher.group(11)),\n+                            \"L\".equals(matcher.group(12))));\n       }\n       remaining \u003d remaining.substring(matcher.end());\n     }\n     return result;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static List\u003cRule\u003e parseRules(String rules) {\n    List\u003cRule\u003e result \u003d new ArrayList\u003cRule\u003e();\n    String remaining \u003d rules.trim();\n    while (remaining.length() \u003e 0) {\n      Matcher matcher \u003d ruleParser.matcher(remaining);\n      if (!matcher.lookingAt()) {\n        throw new IllegalArgumentException(\"Invalid rule: \" + remaining);\n      }\n      if (matcher.group(2) !\u003d null) {\n        result.add(new Rule());\n      } else {\n        result.add(new Rule(Integer.parseInt(matcher.group(4)),\n                            matcher.group(5),\n                            matcher.group(7),\n                            matcher.group(9),\n                            matcher.group(10),\n                            \"g\".equals(matcher.group(11)),\n                            \"L\".equals(matcher.group(12))));\n      }\n      remaining \u003d remaining.substring(matcher.end());\n    }\n    return result;\n  }",
      "path": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/util/KerberosName.java",
      "extendedDetails": {}
    },
    "2b016dac8232e0f5c43293adcbdf7164f5fca74c": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7579. Rename package names from alfredo to auth.  Contributed by Alejandro Abdelnur\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1163852 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/08/11 3:40 PM",
      "commitName": "2b016dac8232e0f5c43293adcbdf7164f5fca74c",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "31/08/11 2:18 PM",
      "commitNameOld": "4f1a0e36fab1f18e6e2c5fcc72cd9a7634967fcd",
      "commitAuthorOld": "Konstantin Shvachko",
      "daysBetweenCommits": 0.06,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  static List\u003cRule\u003e parseRules(String rules) {\n    List\u003cRule\u003e result \u003d new ArrayList\u003cRule\u003e();\n    String remaining \u003d rules.trim();\n    while (remaining.length() \u003e 0) {\n      Matcher matcher \u003d ruleParser.matcher(remaining);\n      if (!matcher.lookingAt()) {\n        throw new IllegalArgumentException(\"Invalid rule: \" + remaining);\n      }\n      if (matcher.group(2) !\u003d null) {\n        result.add(new Rule());\n      } else {\n        result.add(new Rule(Integer.parseInt(matcher.group(4)),\n                            matcher.group(5),\n                            matcher.group(7),\n                            matcher.group(9),\n                            matcher.group(10),\n                            \"g\".equals(matcher.group(11))));\n      }\n      remaining \u003d remaining.substring(matcher.end());\n    }\n    return result;\n  }",
      "path": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/util/KerberosName.java",
      "extendedDetails": {
        "oldPath": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/alfredo/util/KerberosName.java",
        "newPath": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/util/KerberosName.java"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  static List\u003cRule\u003e parseRules(String rules) {\n    List\u003cRule\u003e result \u003d new ArrayList\u003cRule\u003e();\n    String remaining \u003d rules.trim();\n    while (remaining.length() \u003e 0) {\n      Matcher matcher \u003d ruleParser.matcher(remaining);\n      if (!matcher.lookingAt()) {\n        throw new IllegalArgumentException(\"Invalid rule: \" + remaining);\n      }\n      if (matcher.group(2) !\u003d null) {\n        result.add(new Rule());\n      } else {\n        result.add(new Rule(Integer.parseInt(matcher.group(4)),\n                            matcher.group(5),\n                            matcher.group(7),\n                            matcher.group(9),\n                            matcher.group(10),\n                            \"g\".equals(matcher.group(11))));\n      }\n      remaining \u003d remaining.substring(matcher.end());\n    }\n    return result;\n  }",
      "path": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/alfredo/util/KerberosName.java",
      "extendedDetails": {
        "oldPath": "hadoop-alfredo/src/main/java/org/apache/hadoop/alfredo/util/KerberosName.java",
        "newPath": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/alfredo/util/KerberosName.java"
      }
    },
    "a0f120ce68dddb0cb31b64c89f3224313f3cb5af": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7119. add Kerberos HTTP SPNEGO authentication support to Hadoop JT/NN/DN/TT web-consoles. (Alejandro Abdelnur via atm)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159804 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 3:31 PM",
      "commitName": "a0f120ce68dddb0cb31b64c89f3224313f3cb5af",
      "commitAuthor": "Aaron Myers",
      "diff": "@@ -0,0 +1,22 @@\n+  static List\u003cRule\u003e parseRules(String rules) {\n+    List\u003cRule\u003e result \u003d new ArrayList\u003cRule\u003e();\n+    String remaining \u003d rules.trim();\n+    while (remaining.length() \u003e 0) {\n+      Matcher matcher \u003d ruleParser.matcher(remaining);\n+      if (!matcher.lookingAt()) {\n+        throw new IllegalArgumentException(\"Invalid rule: \" + remaining);\n+      }\n+      if (matcher.group(2) !\u003d null) {\n+        result.add(new Rule());\n+      } else {\n+        result.add(new Rule(Integer.parseInt(matcher.group(4)),\n+                            matcher.group(5),\n+                            matcher.group(7),\n+                            matcher.group(9),\n+                            matcher.group(10),\n+                            \"g\".equals(matcher.group(11))));\n+      }\n+      remaining \u003d remaining.substring(matcher.end());\n+    }\n+    return result;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  static List\u003cRule\u003e parseRules(String rules) {\n    List\u003cRule\u003e result \u003d new ArrayList\u003cRule\u003e();\n    String remaining \u003d rules.trim();\n    while (remaining.length() \u003e 0) {\n      Matcher matcher \u003d ruleParser.matcher(remaining);\n      if (!matcher.lookingAt()) {\n        throw new IllegalArgumentException(\"Invalid rule: \" + remaining);\n      }\n      if (matcher.group(2) !\u003d null) {\n        result.add(new Rule());\n      } else {\n        result.add(new Rule(Integer.parseInt(matcher.group(4)),\n                            matcher.group(5),\n                            matcher.group(7),\n                            matcher.group(9),\n                            matcher.group(10),\n                            \"g\".equals(matcher.group(11))));\n      }\n      remaining \u003d remaining.substring(matcher.end());\n    }\n    return result;\n  }",
      "path": "hadoop-alfredo/src/main/java/org/apache/hadoop/alfredo/util/KerberosName.java"
    }
  }
}