{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BlockManager.java",
  "functionName": "setBlockToken",
  "functionId": "setBlockToken___b-LocatedBlock(modifiers-final)__mode-AccessMode(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
  "functionStartLine": 1531,
  "functionEndLine": 1555,
  "numCommitsSeen": 729,
  "timeTaken": 22537,
  "changeHistory": [
    "56b1ff80dd9fbcde8d21a604eff0babb3a16418f",
    "a3954ccab148bddc290cb96528e63ff19799bcc9",
    "2f73396b5901fd5fe29f6cd76fc1b3134b854b37",
    "70d6f201260086a3f12beaa317fede2a99639fef",
    "c457095206e5093c577b0124ad6fc7eef6f77b0a",
    "06394e37601186d2bcff49ccea00712fda9b3579",
    "36e4cd3be6f7fec8db82d3d1bcb258af470ece2e",
    "313dd0250543177752ebbad7f7f6a6bcf3a8ab42",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "b0944651681337e81b41250f43bd1e8eebc78125",
    "371f4a59059322000a40eb4bdf5386b96b626ece",
    "d68e38b78d9687987c4de2046ce9aa0016685e98",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "56b1ff80dd9fbcde8d21a604eff0babb3a16418f": "Ybodychange",
    "a3954ccab148bddc290cb96528e63ff19799bcc9": "Ybodychange",
    "2f73396b5901fd5fe29f6cd76fc1b3134b854b37": "Ybodychange",
    "70d6f201260086a3f12beaa317fede2a99639fef": "Ybodychange",
    "c457095206e5093c577b0124ad6fc7eef6f77b0a": "Ybodychange",
    "06394e37601186d2bcff49ccea00712fda9b3579": "Ybodychange",
    "36e4cd3be6f7fec8db82d3d1bcb258af470ece2e": "Yparameterchange",
    "313dd0250543177752ebbad7f7f6a6bcf3a8ab42": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "b0944651681337e81b41250f43bd1e8eebc78125": "Ybodychange",
    "371f4a59059322000a40eb4bdf5386b96b626ece": "Ymultichange(Yparameterchange,Ybodychange)",
    "d68e38b78d9687987c4de2046ce9aa0016685e98": "Ymultichange(Ymovefromfile,Ymodifierchange)",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "56b1ff80dd9fbcde8d21a604eff0babb3a16418f": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12872. EC Checksum broken when BlockAccessToken is enabled.\n",
      "commitDate": "05/12/17 8:48 PM",
      "commitName": "56b1ff80dd9fbcde8d21a604eff0babb3a16418f",
      "commitAuthor": "Xiao Chen",
      "commitDateOld": "01/12/17 10:34 PM",
      "commitNameOld": "42307e3c3abbfe0b83d9a2581deba327435b910f",
      "commitAuthorOld": "Chris Douglas",
      "daysBetweenCommits": 3.93,
      "commitsBetweenForRepo": 20,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,25 @@\n   public void setBlockToken(final LocatedBlock b,\n       final AccessMode mode) throws IOException {\n     if (isBlockTokenEnabled()) {\n       // Use cached UGI if serving RPC calls.\n       if (b.isStriped()) {\n         Preconditions.checkState(b instanceof LocatedStripedBlock);\n         LocatedStripedBlock sb \u003d (LocatedStripedBlock) b;\n         byte[] indices \u003d sb.getBlockIndices();\n         Token\u003cBlockTokenIdentifier\u003e[] blockTokens \u003d new Token[indices.length];\n         ExtendedBlock internalBlock \u003d new ExtendedBlock(b.getBlock());\n         for (int i \u003d 0; i \u003c indices.length; i++) {\n           internalBlock.setBlockId(b.getBlock().getBlockId() + indices[i]);\n           blockTokens[i] \u003d blockTokenSecretManager.generateToken(\n               NameNode.getRemoteUser().getShortUserName(),\n               internalBlock, EnumSet.of(mode), b.getStorageTypes(),\n               b.getStorageIDs());\n         }\n         sb.setBlockTokens(blockTokens);\n-      } else {\n-        b.setBlockToken(blockTokenSecretManager.generateToken(\n-            NameNode.getRemoteUser().getShortUserName(),\n-            b.getBlock(), EnumSet.of(mode), b.getStorageTypes(),\n-            b.getStorageIDs()));\n       }\n+      b.setBlockToken(blockTokenSecretManager.generateToken(\n+          NameNode.getRemoteUser().getShortUserName(),\n+          b.getBlock(), EnumSet.of(mode), b.getStorageTypes(),\n+          b.getStorageIDs()));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setBlockToken(final LocatedBlock b,\n      final AccessMode mode) throws IOException {\n    if (isBlockTokenEnabled()) {\n      // Use cached UGI if serving RPC calls.\n      if (b.isStriped()) {\n        Preconditions.checkState(b instanceof LocatedStripedBlock);\n        LocatedStripedBlock sb \u003d (LocatedStripedBlock) b;\n        byte[] indices \u003d sb.getBlockIndices();\n        Token\u003cBlockTokenIdentifier\u003e[] blockTokens \u003d new Token[indices.length];\n        ExtendedBlock internalBlock \u003d new ExtendedBlock(b.getBlock());\n        for (int i \u003d 0; i \u003c indices.length; i++) {\n          internalBlock.setBlockId(b.getBlock().getBlockId() + indices[i]);\n          blockTokens[i] \u003d blockTokenSecretManager.generateToken(\n              NameNode.getRemoteUser().getShortUserName(),\n              internalBlock, EnumSet.of(mode), b.getStorageTypes(),\n              b.getStorageIDs());\n        }\n        sb.setBlockTokens(blockTokens);\n      }\n      b.setBlockToken(blockTokenSecretManager.generateToken(\n          NameNode.getRemoteUser().getShortUserName(),\n          b.getBlock(), EnumSet.of(mode), b.getStorageTypes(),\n          b.getStorageIDs()));\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "extendedDetails": {}
    },
    "a3954ccab148bddc290cb96528e63ff19799bcc9": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9807. Add an optional StorageID to writes. Contributed by Ewan Higgs\n",
      "commitDate": "05/05/17 12:01 PM",
      "commitName": "a3954ccab148bddc290cb96528e63ff19799bcc9",
      "commitAuthor": "Chris Douglas",
      "commitDateOld": "01/05/17 12:19 PM",
      "commitNameOld": "07b98e7830c2214340cb7f434df674057e89df94",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 3.99,
      "commitsBetweenForRepo": 31,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,26 @@\n   public void setBlockToken(final LocatedBlock b,\n       final AccessMode mode) throws IOException {\n     if (isBlockTokenEnabled()) {\n       // Use cached UGI if serving RPC calls.\n       if (b.isStriped()) {\n         Preconditions.checkState(b instanceof LocatedStripedBlock);\n         LocatedStripedBlock sb \u003d (LocatedStripedBlock) b;\n         byte[] indices \u003d sb.getBlockIndices();\n         Token\u003cBlockTokenIdentifier\u003e[] blockTokens \u003d new Token[indices.length];\n         ExtendedBlock internalBlock \u003d new ExtendedBlock(b.getBlock());\n         for (int i \u003d 0; i \u003c indices.length; i++) {\n           internalBlock.setBlockId(b.getBlock().getBlockId() + indices[i]);\n           blockTokens[i] \u003d blockTokenSecretManager.generateToken(\n               NameNode.getRemoteUser().getShortUserName(),\n-              internalBlock, EnumSet.of(mode), b.getStorageTypes());\n+              internalBlock, EnumSet.of(mode), b.getStorageTypes(),\n+              b.getStorageIDs());\n         }\n         sb.setBlockTokens(blockTokens);\n       } else {\n         b.setBlockToken(blockTokenSecretManager.generateToken(\n             NameNode.getRemoteUser().getShortUserName(),\n-            b.getBlock(), EnumSet.of(mode), b.getStorageTypes()));\n+            b.getBlock(), EnumSet.of(mode), b.getStorageTypes(),\n+            b.getStorageIDs()));\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setBlockToken(final LocatedBlock b,\n      final AccessMode mode) throws IOException {\n    if (isBlockTokenEnabled()) {\n      // Use cached UGI if serving RPC calls.\n      if (b.isStriped()) {\n        Preconditions.checkState(b instanceof LocatedStripedBlock);\n        LocatedStripedBlock sb \u003d (LocatedStripedBlock) b;\n        byte[] indices \u003d sb.getBlockIndices();\n        Token\u003cBlockTokenIdentifier\u003e[] blockTokens \u003d new Token[indices.length];\n        ExtendedBlock internalBlock \u003d new ExtendedBlock(b.getBlock());\n        for (int i \u003d 0; i \u003c indices.length; i++) {\n          internalBlock.setBlockId(b.getBlock().getBlockId() + indices[i]);\n          blockTokens[i] \u003d blockTokenSecretManager.generateToken(\n              NameNode.getRemoteUser().getShortUserName(),\n              internalBlock, EnumSet.of(mode), b.getStorageTypes(),\n              b.getStorageIDs());\n        }\n        sb.setBlockTokens(blockTokens);\n      } else {\n        b.setBlockToken(blockTokenSecretManager.generateToken(\n            NameNode.getRemoteUser().getShortUserName(),\n            b.getBlock(), EnumSet.of(mode), b.getStorageTypes(),\n            b.getStorageIDs()));\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "extendedDetails": {}
    },
    "2f73396b5901fd5fe29f6cd76fc1b3134b854b37": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6708. StorageType should be encoded in the block token. Contributed by Ewan Higgs\n",
      "commitDate": "25/04/17 11:57 PM",
      "commitName": "2f73396b5901fd5fe29f6cd76fc1b3134b854b37",
      "commitAuthor": "Chris Douglas",
      "commitDateOld": "17/04/17 4:56 PM",
      "commitNameOld": "8dfcd95d580bb090af7f40af0a57061518c18c8c",
      "commitAuthorOld": "Konstantin V Shvachko",
      "daysBetweenCommits": 8.29,
      "commitsBetweenForRepo": 41,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n   public void setBlockToken(final LocatedBlock b,\n       final AccessMode mode) throws IOException {\n     if (isBlockTokenEnabled()) {\n       // Use cached UGI if serving RPC calls.\n       if (b.isStriped()) {\n         Preconditions.checkState(b instanceof LocatedStripedBlock);\n         LocatedStripedBlock sb \u003d (LocatedStripedBlock) b;\n         byte[] indices \u003d sb.getBlockIndices();\n         Token\u003cBlockTokenIdentifier\u003e[] blockTokens \u003d new Token[indices.length];\n         ExtendedBlock internalBlock \u003d new ExtendedBlock(b.getBlock());\n         for (int i \u003d 0; i \u003c indices.length; i++) {\n           internalBlock.setBlockId(b.getBlock().getBlockId() + indices[i]);\n           blockTokens[i] \u003d blockTokenSecretManager.generateToken(\n               NameNode.getRemoteUser().getShortUserName(),\n-              internalBlock, EnumSet.of(mode));\n+              internalBlock, EnumSet.of(mode), b.getStorageTypes());\n         }\n         sb.setBlockTokens(blockTokens);\n       } else {\n         b.setBlockToken(blockTokenSecretManager.generateToken(\n             NameNode.getRemoteUser().getShortUserName(),\n-            b.getBlock(), EnumSet.of(mode)));\n+            b.getBlock(), EnumSet.of(mode), b.getStorageTypes()));\n       }\n-    }    \n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setBlockToken(final LocatedBlock b,\n      final AccessMode mode) throws IOException {\n    if (isBlockTokenEnabled()) {\n      // Use cached UGI if serving RPC calls.\n      if (b.isStriped()) {\n        Preconditions.checkState(b instanceof LocatedStripedBlock);\n        LocatedStripedBlock sb \u003d (LocatedStripedBlock) b;\n        byte[] indices \u003d sb.getBlockIndices();\n        Token\u003cBlockTokenIdentifier\u003e[] blockTokens \u003d new Token[indices.length];\n        ExtendedBlock internalBlock \u003d new ExtendedBlock(b.getBlock());\n        for (int i \u003d 0; i \u003c indices.length; i++) {\n          internalBlock.setBlockId(b.getBlock().getBlockId() + indices[i]);\n          blockTokens[i] \u003d blockTokenSecretManager.generateToken(\n              NameNode.getRemoteUser().getShortUserName(),\n              internalBlock, EnumSet.of(mode), b.getStorageTypes());\n        }\n        sb.setBlockTokens(blockTokens);\n      } else {\n        b.setBlockToken(blockTokenSecretManager.generateToken(\n            NameNode.getRemoteUser().getShortUserName(),\n            b.getBlock(), EnumSet.of(mode), b.getStorageTypes()));\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "extendedDetails": {}
    },
    "70d6f201260086a3f12beaa317fede2a99639fef": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9575. Use byte array for internal block indices in a striped block.  Contributed by jing9\n",
      "commitDate": "21/12/15 10:47 PM",
      "commitName": "70d6f201260086a3f12beaa317fede2a99639fef",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "commitDateOld": "16/12/15 6:16 PM",
      "commitNameOld": "f741476146574550a1a208d58ef8be76639e5ddc",
      "commitAuthorOld": "Uma Mahesh",
      "daysBetweenCommits": 5.19,
      "commitsBetweenForRepo": 38,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n   public void setBlockToken(final LocatedBlock b,\n       final AccessMode mode) throws IOException {\n     if (isBlockTokenEnabled()) {\n       // Use cached UGI if serving RPC calls.\n       if (b.isStriped()) {\n         Preconditions.checkState(b instanceof LocatedStripedBlock);\n         LocatedStripedBlock sb \u003d (LocatedStripedBlock) b;\n-        int[] indices \u003d sb.getBlockIndices();\n+        byte[] indices \u003d sb.getBlockIndices();\n         Token\u003cBlockTokenIdentifier\u003e[] blockTokens \u003d new Token[indices.length];\n         ExtendedBlock internalBlock \u003d new ExtendedBlock(b.getBlock());\n         for (int i \u003d 0; i \u003c indices.length; i++) {\n           internalBlock.setBlockId(b.getBlock().getBlockId() + indices[i]);\n           blockTokens[i] \u003d blockTokenSecretManager.generateToken(\n               NameNode.getRemoteUser().getShortUserName(),\n               internalBlock, EnumSet.of(mode));\n         }\n         sb.setBlockTokens(blockTokens);\n       } else {\n         b.setBlockToken(blockTokenSecretManager.generateToken(\n             NameNode.getRemoteUser().getShortUserName(),\n             b.getBlock(), EnumSet.of(mode)));\n       }\n     }    \n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setBlockToken(final LocatedBlock b,\n      final AccessMode mode) throws IOException {\n    if (isBlockTokenEnabled()) {\n      // Use cached UGI if serving RPC calls.\n      if (b.isStriped()) {\n        Preconditions.checkState(b instanceof LocatedStripedBlock);\n        LocatedStripedBlock sb \u003d (LocatedStripedBlock) b;\n        byte[] indices \u003d sb.getBlockIndices();\n        Token\u003cBlockTokenIdentifier\u003e[] blockTokens \u003d new Token[indices.length];\n        ExtendedBlock internalBlock \u003d new ExtendedBlock(b.getBlock());\n        for (int i \u003d 0; i \u003c indices.length; i++) {\n          internalBlock.setBlockId(b.getBlock().getBlockId() + indices[i]);\n          blockTokens[i] \u003d blockTokenSecretManager.generateToken(\n              NameNode.getRemoteUser().getShortUserName(),\n              internalBlock, EnumSet.of(mode));\n        }\n        sb.setBlockTokens(blockTokens);\n      } else {\n        b.setBlockToken(blockTokenSecretManager.generateToken(\n            NameNode.getRemoteUser().getShortUserName(),\n            b.getBlock(), EnumSet.of(mode)));\n      }\n    }    \n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "extendedDetails": {}
    },
    "c457095206e5093c577b0124ad6fc7eef6f77b0a": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8550. Erasure Coding: Fix FindBugs Multithreaded correctness Warning. Contributed by Rakesh R.\n\nChange-Id: Ic248999a7f8e5e740d49c9b10abcf16f66dd0f98\n",
      "commitDate": "18/09/15 11:04 AM",
      "commitName": "c457095206e5093c577b0124ad6fc7eef6f77b0a",
      "commitAuthor": "Zhe Zhang",
      "commitDateOld": "09/09/15 11:07 PM",
      "commitNameOld": "f62237bc2f02afe11ce185e13aa51a60b5960037",
      "commitAuthorOld": "Zhe Zhang",
      "daysBetweenCommits": 8.5,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,24 @@\n   public void setBlockToken(final LocatedBlock b,\n       final AccessMode mode) throws IOException {\n     if (isBlockTokenEnabled()) {\n       // Use cached UGI if serving RPC calls.\n       if (b.isStriped()) {\n+        Preconditions.checkState(b instanceof LocatedStripedBlock);\n         LocatedStripedBlock sb \u003d (LocatedStripedBlock) b;\n         int[] indices \u003d sb.getBlockIndices();\n         Token\u003cBlockTokenIdentifier\u003e[] blockTokens \u003d new Token[indices.length];\n         ExtendedBlock internalBlock \u003d new ExtendedBlock(b.getBlock());\n         for (int i \u003d 0; i \u003c indices.length; i++) {\n           internalBlock.setBlockId(b.getBlock().getBlockId() + indices[i]);\n           blockTokens[i] \u003d blockTokenSecretManager.generateToken(\n               NameNode.getRemoteUser().getShortUserName(),\n               internalBlock, EnumSet.of(mode));\n         }\n         sb.setBlockTokens(blockTokens);\n       } else {\n         b.setBlockToken(blockTokenSecretManager.generateToken(\n             NameNode.getRemoteUser().getShortUserName(),\n             b.getBlock(), EnumSet.of(mode)));\n       }\n     }    \n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setBlockToken(final LocatedBlock b,\n      final AccessMode mode) throws IOException {\n    if (isBlockTokenEnabled()) {\n      // Use cached UGI if serving RPC calls.\n      if (b.isStriped()) {\n        Preconditions.checkState(b instanceof LocatedStripedBlock);\n        LocatedStripedBlock sb \u003d (LocatedStripedBlock) b;\n        int[] indices \u003d sb.getBlockIndices();\n        Token\u003cBlockTokenIdentifier\u003e[] blockTokens \u003d new Token[indices.length];\n        ExtendedBlock internalBlock \u003d new ExtendedBlock(b.getBlock());\n        for (int i \u003d 0; i \u003c indices.length; i++) {\n          internalBlock.setBlockId(b.getBlock().getBlockId() + indices[i]);\n          blockTokens[i] \u003d blockTokenSecretManager.generateToken(\n              NameNode.getRemoteUser().getShortUserName(),\n              internalBlock, EnumSet.of(mode));\n        }\n        sb.setBlockTokens(blockTokens);\n      } else {\n        b.setBlockToken(blockTokenSecretManager.generateToken(\n            NameNode.getRemoteUser().getShortUserName(),\n            b.getBlock(), EnumSet.of(mode)));\n      }\n    }    \n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "extendedDetails": {}
    },
    "06394e37601186d2bcff49ccea00712fda9b3579": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8433. Erasure coding: set blockToken in LocatedStripedBlock. Contributed by Walter Su.\n",
      "commitDate": "19/07/15 7:18 PM",
      "commitName": "06394e37601186d2bcff49ccea00712fda9b3579",
      "commitAuthor": "Walter Su",
      "commitDateOld": "15/07/15 8:13 PM",
      "commitNameOld": "4fdd9abd7e43a0fb7b569982954a8f9660b9268b",
      "commitAuthorOld": "Zhe Zhang",
      "daysBetweenCommits": 3.96,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,23 @@\n   public void setBlockToken(final LocatedBlock b,\n       final AccessMode mode) throws IOException {\n     if (isBlockTokenEnabled()) {\n       // Use cached UGI if serving RPC calls.\n-      b.setBlockToken(blockTokenSecretManager.generateToken(\n-          NameNode.getRemoteUser().getShortUserName(),\n-          b.getBlock(), EnumSet.of(mode)));\n+      if (b.isStriped()) {\n+        LocatedStripedBlock sb \u003d (LocatedStripedBlock) b;\n+        int[] indices \u003d sb.getBlockIndices();\n+        Token\u003cBlockTokenIdentifier\u003e[] blockTokens \u003d new Token[indices.length];\n+        ExtendedBlock internalBlock \u003d new ExtendedBlock(b.getBlock());\n+        for (int i \u003d 0; i \u003c indices.length; i++) {\n+          internalBlock.setBlockId(b.getBlock().getBlockId() + indices[i]);\n+          blockTokens[i] \u003d blockTokenSecretManager.generateToken(\n+              NameNode.getRemoteUser().getShortUserName(),\n+              internalBlock, EnumSet.of(mode));\n+        }\n+        sb.setBlockTokens(blockTokens);\n+      } else {\n+        b.setBlockToken(blockTokenSecretManager.generateToken(\n+            NameNode.getRemoteUser().getShortUserName(),\n+            b.getBlock(), EnumSet.of(mode)));\n+      }\n     }    \n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setBlockToken(final LocatedBlock b,\n      final AccessMode mode) throws IOException {\n    if (isBlockTokenEnabled()) {\n      // Use cached UGI if serving RPC calls.\n      if (b.isStriped()) {\n        LocatedStripedBlock sb \u003d (LocatedStripedBlock) b;\n        int[] indices \u003d sb.getBlockIndices();\n        Token\u003cBlockTokenIdentifier\u003e[] blockTokens \u003d new Token[indices.length];\n        ExtendedBlock internalBlock \u003d new ExtendedBlock(b.getBlock());\n        for (int i \u003d 0; i \u003c indices.length; i++) {\n          internalBlock.setBlockId(b.getBlock().getBlockId() + indices[i]);\n          blockTokens[i] \u003d blockTokenSecretManager.generateToken(\n              NameNode.getRemoteUser().getShortUserName(),\n              internalBlock, EnumSet.of(mode));\n        }\n        sb.setBlockTokens(blockTokens);\n      } else {\n        b.setBlockToken(blockTokenSecretManager.generateToken(\n            NameNode.getRemoteUser().getShortUserName(),\n            b.getBlock(), EnumSet.of(mode)));\n      }\n    }    \n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "extendedDetails": {}
    },
    "36e4cd3be6f7fec8db82d3d1bcb258af470ece2e": {
      "type": "Yparameterchange",
      "commitMessage": "HDFS-8103. Move BlockTokenSecretManager.AccessMode into BlockTokenIdentifier. Contributed by Haohui Mai.\n",
      "commitDate": "10/04/15 4:36 PM",
      "commitName": "36e4cd3be6f7fec8db82d3d1bcb258af470ece2e",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "08/04/15 4:09 PM",
      "commitNameOld": "5a540c3d3107199f4632e2ad7ee8ff913b107a04",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 2.02,
      "commitsBetweenForRepo": 28,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n   public void setBlockToken(final LocatedBlock b,\n-      final BlockTokenSecretManager.AccessMode mode) throws IOException {\n+      final AccessMode mode) throws IOException {\n     if (isBlockTokenEnabled()) {\n       // Use cached UGI if serving RPC calls.\n       b.setBlockToken(blockTokenSecretManager.generateToken(\n           NameNode.getRemoteUser().getShortUserName(),\n           b.getBlock(), EnumSet.of(mode)));\n     }    \n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setBlockToken(final LocatedBlock b,\n      final AccessMode mode) throws IOException {\n    if (isBlockTokenEnabled()) {\n      // Use cached UGI if serving RPC calls.\n      b.setBlockToken(blockTokenSecretManager.generateToken(\n          NameNode.getRemoteUser().getShortUserName(),\n          b.getBlock(), EnumSet.of(mode)));\n    }    \n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "extendedDetails": {
        "oldValue": "[b-LocatedBlock(modifiers-final), mode-BlockTokenSecretManager.AccessMode(modifiers-final)]",
        "newValue": "[b-LocatedBlock(modifiers-final), mode-AccessMode(modifiers-final)]"
      }
    },
    "313dd0250543177752ebbad7f7f6a6bcf3a8ab42": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5010. Reduce the frequency of getCurrentUser() calls from namenode. Contributed by Kihwal Lee.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1505160 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "20/07/13 9:22 AM",
      "commitName": "313dd0250543177752ebbad7f7f6a6bcf3a8ab42",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "19/07/13 12:00 AM",
      "commitNameOld": "0dc5824a83716468a88bcd669ed24fc19871332a",
      "commitAuthorOld": "Harsh J",
      "daysBetweenCommits": 1.39,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,9 @@\n   public void setBlockToken(final LocatedBlock b,\n       final BlockTokenSecretManager.AccessMode mode) throws IOException {\n     if (isBlockTokenEnabled()) {\n-      b.setBlockToken(blockTokenSecretManager.generateToken(b.getBlock(), \n-          EnumSet.of(mode)));\n+      // Use cached UGI if serving RPC calls.\n+      b.setBlockToken(blockTokenSecretManager.generateToken(\n+          NameNode.getRemoteUser().getShortUserName(),\n+          b.getBlock(), EnumSet.of(mode)));\n     }    \n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setBlockToken(final LocatedBlock b,\n      final BlockTokenSecretManager.AccessMode mode) throws IOException {\n    if (isBlockTokenEnabled()) {\n      // Use cached UGI if serving RPC calls.\n      b.setBlockToken(blockTokenSecretManager.generateToken(\n          NameNode.getRemoteUser().getShortUserName(),\n          b.getBlock(), EnumSet.of(mode)));\n    }    \n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void setBlockToken(final LocatedBlock b,\n      final BlockTokenSecretManager.AccessMode mode) throws IOException {\n    if (isBlockTokenEnabled()) {\n      b.setBlockToken(blockTokenSecretManager.generateToken(b.getBlock(), \n          EnumSet.of(mode)));\n    }    \n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void setBlockToken(final LocatedBlock b,\n      final BlockTokenSecretManager.AccessMode mode) throws IOException {\n    if (isBlockTokenEnabled()) {\n      b.setBlockToken(blockTokenSecretManager.generateToken(b.getBlock(), \n          EnumSet.of(mode)));\n    }    \n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java"
      }
    },
    "b0944651681337e81b41250f43bd1e8eebc78125": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2265. Remove unnecessary BlockTokenSecretManager fields/methods from BlockManager.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1158743 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/08/11 7:34 AM",
      "commitName": "b0944651681337e81b41250f43bd1e8eebc78125",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "11/08/11 3:16 PM",
      "commitNameOld": "1dd48b1aee2378c02ee7e78864a757cff3607274",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 5.68,
      "commitsBetweenForRepo": 24,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,7 @@\n   public void setBlockToken(final LocatedBlock b,\n       final BlockTokenSecretManager.AccessMode mode) throws IOException {\n-    if (isBlockTokenEnabled) {\n+    if (isBlockTokenEnabled()) {\n       b.setBlockToken(blockTokenSecretManager.generateToken(b.getBlock(), \n           EnumSet.of(mode)));\n     }    \n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setBlockToken(final LocatedBlock b,\n      final BlockTokenSecretManager.AccessMode mode) throws IOException {\n    if (isBlockTokenEnabled()) {\n      b.setBlockToken(blockTokenSecretManager.generateToken(b.getBlock(), \n          EnumSet.of(mode)));\n    }    \n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "extendedDetails": {}
    },
    "371f4a59059322000a40eb4bdf5386b96b626ece": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-2228. Move block and datanode code from FSNamesystem to BlockManager and DatanodeManager.  (szetszwo)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1154899 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/08/11 3:06 AM",
      "commitName": "371f4a59059322000a40eb4bdf5386b96b626ece",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-2228. Move block and datanode code from FSNamesystem to BlockManager and DatanodeManager.  (szetszwo)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1154899 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "08/08/11 3:06 AM",
          "commitName": "371f4a59059322000a40eb4bdf5386b96b626ece",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "04/08/11 3:55 PM",
          "commitNameOld": "7fac946ac983e31613fd62836c8ac9c4a579210a",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 3.47,
          "commitsBetweenForRepo": 8,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,5 +1,7 @@\n-  public void setBlockToken(LocatedBlock l) throws IOException {\n-    Token\u003cBlockTokenIdentifier\u003e token \u003d blockTokenSecretManager.generateToken(l\n-        .getBlock(), EnumSet.of(BlockTokenSecretManager.AccessMode.READ));\n-    l.setBlockToken(token);\n+  public void setBlockToken(final LocatedBlock b,\n+      final BlockTokenSecretManager.AccessMode mode) throws IOException {\n+    if (isBlockTokenEnabled) {\n+      b.setBlockToken(blockTokenSecretManager.generateToken(b.getBlock(), \n+          EnumSet.of(mode)));\n+    }    \n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void setBlockToken(final LocatedBlock b,\n      final BlockTokenSecretManager.AccessMode mode) throws IOException {\n    if (isBlockTokenEnabled) {\n      b.setBlockToken(blockTokenSecretManager.generateToken(b.getBlock(), \n          EnumSet.of(mode)));\n    }    \n  }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
          "extendedDetails": {
            "oldValue": "[l-LocatedBlock]",
            "newValue": "[b-LocatedBlock(modifiers-final), mode-BlockTokenSecretManager.AccessMode(modifiers-final)]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-2228. Move block and datanode code from FSNamesystem to BlockManager and DatanodeManager.  (szetszwo)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1154899 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "08/08/11 3:06 AM",
          "commitName": "371f4a59059322000a40eb4bdf5386b96b626ece",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "04/08/11 3:55 PM",
          "commitNameOld": "7fac946ac983e31613fd62836c8ac9c4a579210a",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 3.47,
          "commitsBetweenForRepo": 8,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,5 +1,7 @@\n-  public void setBlockToken(LocatedBlock l) throws IOException {\n-    Token\u003cBlockTokenIdentifier\u003e token \u003d blockTokenSecretManager.generateToken(l\n-        .getBlock(), EnumSet.of(BlockTokenSecretManager.AccessMode.READ));\n-    l.setBlockToken(token);\n+  public void setBlockToken(final LocatedBlock b,\n+      final BlockTokenSecretManager.AccessMode mode) throws IOException {\n+    if (isBlockTokenEnabled) {\n+      b.setBlockToken(blockTokenSecretManager.generateToken(b.getBlock(), \n+          EnumSet.of(mode)));\n+    }    \n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void setBlockToken(final LocatedBlock b,\n      final BlockTokenSecretManager.AccessMode mode) throws IOException {\n    if (isBlockTokenEnabled) {\n      b.setBlockToken(blockTokenSecretManager.generateToken(b.getBlock(), \n          EnumSet.of(mode)));\n    }    \n  }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "d68e38b78d9687987c4de2046ce9aa0016685e98": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange)",
      "commitMessage": "HDFS-2199. Move blockTokenSecretManager from FSNamesystem to BlockManager.  Contributed by Uma Maheswara Rao G\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1152776 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "01/08/11 6:57 AM",
      "commitName": "d68e38b78d9687987c4de2046ce9aa0016685e98",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-2199. Move blockTokenSecretManager from FSNamesystem to BlockManager.  Contributed by Uma Maheswara Rao G\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1152776 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "01/08/11 6:57 AM",
          "commitName": "d68e38b78d9687987c4de2046ce9aa0016685e98",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "29/07/11 5:10 PM",
          "commitNameOld": "8390152d08306caad31b78abbd509e5ea8580671",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 2.57,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,5 +1,5 @@\n-  private void setBlockToken(LocatedBlock l) throws IOException {\n+  public void setBlockToken(LocatedBlock l) throws IOException {\n     Token\u003cBlockTokenIdentifier\u003e token \u003d blockTokenSecretManager.generateToken(l\n         .getBlock(), EnumSet.of(BlockTokenSecretManager.AccessMode.READ));\n     l.setBlockToken(token);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void setBlockToken(LocatedBlock l) throws IOException {\n    Token\u003cBlockTokenIdentifier\u003e token \u003d blockTokenSecretManager.generateToken(l\n        .getBlock(), EnumSet.of(BlockTokenSecretManager.AccessMode.READ));\n    l.setBlockToken(token);\n  }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
          "extendedDetails": {
            "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
            "newPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
            "oldMethodName": "setBlockToken",
            "newMethodName": "setBlockToken"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-2199. Move blockTokenSecretManager from FSNamesystem to BlockManager.  Contributed by Uma Maheswara Rao G\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1152776 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "01/08/11 6:57 AM",
          "commitName": "d68e38b78d9687987c4de2046ce9aa0016685e98",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "29/07/11 5:10 PM",
          "commitNameOld": "8390152d08306caad31b78abbd509e5ea8580671",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 2.57,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,5 +1,5 @@\n-  private void setBlockToken(LocatedBlock l) throws IOException {\n+  public void setBlockToken(LocatedBlock l) throws IOException {\n     Token\u003cBlockTokenIdentifier\u003e token \u003d blockTokenSecretManager.generateToken(l\n         .getBlock(), EnumSet.of(BlockTokenSecretManager.AccessMode.READ));\n     l.setBlockToken(token);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void setBlockToken(LocatedBlock l) throws IOException {\n    Token\u003cBlockTokenIdentifier\u003e token \u003d blockTokenSecretManager.generateToken(l\n        .getBlock(), EnumSet.of(BlockTokenSecretManager.AccessMode.READ));\n    l.setBlockToken(token);\n  }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[public]"
          }
        }
      ]
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,5 @@\n+  private void setBlockToken(LocatedBlock l) throws IOException {\n+    Token\u003cBlockTokenIdentifier\u003e token \u003d blockTokenSecretManager.generateToken(l\n+        .getBlock(), EnumSet.of(BlockTokenSecretManager.AccessMode.READ));\n+    l.setBlockToken(token);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void setBlockToken(LocatedBlock l) throws IOException {\n    Token\u003cBlockTokenIdentifier\u003e token \u003d blockTokenSecretManager.generateToken(l\n        .getBlock(), EnumSet.of(BlockTokenSecretManager.AccessMode.READ));\n    l.setBlockToken(token);\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java"
    }
  }
}