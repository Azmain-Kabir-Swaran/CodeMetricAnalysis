{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSImageFormatProtobuf.java",
  "functionName": "loadCacheManagerSection",
  "functionId": "loadCacheManagerSection___in-InputStream__prog-StartupProgress__currentStep-Step",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormatProtobuf.java",
  "functionStartLine": 544,
  "functionEndLine": 562,
  "numCommitsSeen": 54,
  "timeTaken": 2860,
  "changeHistory": [
    "e965dcec378cb807856372425307598792977604",
    "a2edb11b68ae01a44092cb14ac2717a6aad93305"
  ],
  "changeHistoryShort": {
    "e965dcec378cb807856372425307598792977604": "Ymultichange(Yparameterchange,Ybodychange)",
    "a2edb11b68ae01a44092cb14ac2717a6aad93305": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e965dcec378cb807856372425307598792977604": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-8470. fsimage loading progress should update inode, delegation token and cache pool count. (Contributed by surendra singh lilhore)\n",
      "commitDate": "03/06/15 1:54 AM",
      "commitName": "e965dcec378cb807856372425307598792977604",
      "commitAuthor": "Vinayakumar B",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-8470. fsimage loading progress should update inode, delegation token and cache pool count. (Contributed by surendra singh lilhore)\n",
          "commitDate": "03/06/15 1:54 AM",
          "commitName": "e965dcec378cb807856372425307598792977604",
          "commitAuthor": "Vinayakumar B",
          "commitDateOld": "02/05/15 10:03 AM",
          "commitNameOld": "6ae2a0d048e133b43249c248a75a4d77d9abb80d",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 31.66,
          "commitsBetweenForRepo": 326,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,19 @@\n-    private void loadCacheManagerSection(InputStream in) throws IOException {\n+    private void loadCacheManagerSection(InputStream in, StartupProgress prog,\n+        Step currentStep) throws IOException {\n       CacheManagerSection s \u003d CacheManagerSection.parseDelimitedFrom(in);\n-      ArrayList\u003cCachePoolInfoProto\u003e pools \u003d Lists.newArrayListWithCapacity(s\n-          .getNumPools());\n+      int numPools \u003d s.getNumPools();\n+      ArrayList\u003cCachePoolInfoProto\u003e pools \u003d Lists\n+          .newArrayListWithCapacity(numPools);\n       ArrayList\u003cCacheDirectiveInfoProto\u003e directives \u003d Lists\n           .newArrayListWithCapacity(s.getNumDirectives());\n-      for (int i \u003d 0; i \u003c s.getNumPools(); ++i)\n+      prog.setTotal(Phase.LOADING_FSIMAGE, currentStep, numPools);\n+      Counter counter \u003d prog.getCounter(Phase.LOADING_FSIMAGE, currentStep);\n+      for (int i \u003d 0; i \u003c numPools; ++i) {\n         pools.add(CachePoolInfoProto.parseDelimitedFrom(in));\n+        counter.increment();\n+      }\n       for (int i \u003d 0; i \u003c s.getNumDirectives(); ++i)\n         directives.add(CacheDirectiveInfoProto.parseDelimitedFrom(in));\n       fsn.getCacheManager().loadState(\n           new CacheManager.PersistState(s, pools, directives));\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void loadCacheManagerSection(InputStream in, StartupProgress prog,\n        Step currentStep) throws IOException {\n      CacheManagerSection s \u003d CacheManagerSection.parseDelimitedFrom(in);\n      int numPools \u003d s.getNumPools();\n      ArrayList\u003cCachePoolInfoProto\u003e pools \u003d Lists\n          .newArrayListWithCapacity(numPools);\n      ArrayList\u003cCacheDirectiveInfoProto\u003e directives \u003d Lists\n          .newArrayListWithCapacity(s.getNumDirectives());\n      prog.setTotal(Phase.LOADING_FSIMAGE, currentStep, numPools);\n      Counter counter \u003d prog.getCounter(Phase.LOADING_FSIMAGE, currentStep);\n      for (int i \u003d 0; i \u003c numPools; ++i) {\n        pools.add(CachePoolInfoProto.parseDelimitedFrom(in));\n        counter.increment();\n      }\n      for (int i \u003d 0; i \u003c s.getNumDirectives(); ++i)\n        directives.add(CacheDirectiveInfoProto.parseDelimitedFrom(in));\n      fsn.getCacheManager().loadState(\n          new CacheManager.PersistState(s, pools, directives));\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormatProtobuf.java",
          "extendedDetails": {
            "oldValue": "[in-InputStream]",
            "newValue": "[in-InputStream, prog-StartupProgress, currentStep-Step]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-8470. fsimage loading progress should update inode, delegation token and cache pool count. (Contributed by surendra singh lilhore)\n",
          "commitDate": "03/06/15 1:54 AM",
          "commitName": "e965dcec378cb807856372425307598792977604",
          "commitAuthor": "Vinayakumar B",
          "commitDateOld": "02/05/15 10:03 AM",
          "commitNameOld": "6ae2a0d048e133b43249c248a75a4d77d9abb80d",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 31.66,
          "commitsBetweenForRepo": 326,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,19 @@\n-    private void loadCacheManagerSection(InputStream in) throws IOException {\n+    private void loadCacheManagerSection(InputStream in, StartupProgress prog,\n+        Step currentStep) throws IOException {\n       CacheManagerSection s \u003d CacheManagerSection.parseDelimitedFrom(in);\n-      ArrayList\u003cCachePoolInfoProto\u003e pools \u003d Lists.newArrayListWithCapacity(s\n-          .getNumPools());\n+      int numPools \u003d s.getNumPools();\n+      ArrayList\u003cCachePoolInfoProto\u003e pools \u003d Lists\n+          .newArrayListWithCapacity(numPools);\n       ArrayList\u003cCacheDirectiveInfoProto\u003e directives \u003d Lists\n           .newArrayListWithCapacity(s.getNumDirectives());\n-      for (int i \u003d 0; i \u003c s.getNumPools(); ++i)\n+      prog.setTotal(Phase.LOADING_FSIMAGE, currentStep, numPools);\n+      Counter counter \u003d prog.getCounter(Phase.LOADING_FSIMAGE, currentStep);\n+      for (int i \u003d 0; i \u003c numPools; ++i) {\n         pools.add(CachePoolInfoProto.parseDelimitedFrom(in));\n+        counter.increment();\n+      }\n       for (int i \u003d 0; i \u003c s.getNumDirectives(); ++i)\n         directives.add(CacheDirectiveInfoProto.parseDelimitedFrom(in));\n       fsn.getCacheManager().loadState(\n           new CacheManager.PersistState(s, pools, directives));\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void loadCacheManagerSection(InputStream in, StartupProgress prog,\n        Step currentStep) throws IOException {\n      CacheManagerSection s \u003d CacheManagerSection.parseDelimitedFrom(in);\n      int numPools \u003d s.getNumPools();\n      ArrayList\u003cCachePoolInfoProto\u003e pools \u003d Lists\n          .newArrayListWithCapacity(numPools);\n      ArrayList\u003cCacheDirectiveInfoProto\u003e directives \u003d Lists\n          .newArrayListWithCapacity(s.getNumDirectives());\n      prog.setTotal(Phase.LOADING_FSIMAGE, currentStep, numPools);\n      Counter counter \u003d prog.getCounter(Phase.LOADING_FSIMAGE, currentStep);\n      for (int i \u003d 0; i \u003c numPools; ++i) {\n        pools.add(CachePoolInfoProto.parseDelimitedFrom(in));\n        counter.increment();\n      }\n      for (int i \u003d 0; i \u003c s.getNumDirectives(); ++i)\n        directives.add(CacheDirectiveInfoProto.parseDelimitedFrom(in));\n      fsn.getCacheManager().loadState(\n          new CacheManager.PersistState(s, pools, directives));\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormatProtobuf.java",
          "extendedDetails": {}
        }
      ]
    },
    "a2edb11b68ae01a44092cb14ac2717a6aad93305": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-5698. Use protobuf to serialize / deserialize FSImage. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1566359 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/02/14 11:18 AM",
      "commitName": "a2edb11b68ae01a44092cb14ac2717a6aad93305",
      "commitAuthor": "Jing Zhao",
      "diff": "@@ -0,0 +1,13 @@\n+    private void loadCacheManagerSection(InputStream in) throws IOException {\n+      CacheManagerSection s \u003d CacheManagerSection.parseDelimitedFrom(in);\n+      ArrayList\u003cCachePoolInfoProto\u003e pools \u003d Lists.newArrayListWithCapacity(s\n+          .getNumPools());\n+      ArrayList\u003cCacheDirectiveInfoProto\u003e directives \u003d Lists\n+          .newArrayListWithCapacity(s.getNumDirectives());\n+      for (int i \u003d 0; i \u003c s.getNumPools(); ++i)\n+        pools.add(CachePoolInfoProto.parseDelimitedFrom(in));\n+      for (int i \u003d 0; i \u003c s.getNumDirectives(); ++i)\n+        directives.add(CacheDirectiveInfoProto.parseDelimitedFrom(in));\n+      fsn.getCacheManager().loadState(\n+          new CacheManager.PersistState(s, pools, directives));\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private void loadCacheManagerSection(InputStream in) throws IOException {\n      CacheManagerSection s \u003d CacheManagerSection.parseDelimitedFrom(in);\n      ArrayList\u003cCachePoolInfoProto\u003e pools \u003d Lists.newArrayListWithCapacity(s\n          .getNumPools());\n      ArrayList\u003cCacheDirectiveInfoProto\u003e directives \u003d Lists\n          .newArrayListWithCapacity(s.getNumDirectives());\n      for (int i \u003d 0; i \u003c s.getNumPools(); ++i)\n        pools.add(CachePoolInfoProto.parseDelimitedFrom(in));\n      for (int i \u003d 0; i \u003c s.getNumDirectives(); ++i)\n        directives.add(CacheDirectiveInfoProto.parseDelimitedFrom(in));\n      fsn.getCacheManager().loadState(\n          new CacheManager.PersistState(s, pools, directives));\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormatProtobuf.java"
    }
  }
}