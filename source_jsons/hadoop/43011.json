{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AppCatalog.java",
  "functionName": "getClasses",
  "functionId": "getClasses",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-catalog/hadoop-yarn-applications-catalog-webapp/src/main/java/org/apache/hadoop/yarn/appcatalog/application/AppCatalog.java",
  "functionStartLine": 35,
  "functionEndLine": 51,
  "numCommitsSeen": 3,
  "timeTaken": 819,
  "changeHistory": [
    "7ee32a2eb187d43f1c8d7c6416eebc13d461ee1e"
  ],
  "changeHistoryShort": {
    "7ee32a2eb187d43f1c8d7c6416eebc13d461ee1e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7ee32a2eb187d43f1c8d7c6416eebc13d461ee1e": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7129. Application Catalog for YARN applications. Contributed by Eric Yang\n",
      "commitDate": "29/03/19 1:51 PM",
      "commitName": "7ee32a2eb187d43f1c8d7c6416eebc13d461ee1e",
      "commitAuthor": "Billie Rinaldi",
      "diff": "@@ -0,0 +1,17 @@\n+  public Set\u003cClass\u003c?\u003e\u003e getClasses() {\n+    final Set\u003cClass\u003c?\u003e\u003e resources \u003d new java.util.HashSet\u003c\u003e();\n+    // following code can be used to customize Jersey 2.0 JSON provider:\n+    try {\n+      final Class\u003c?\u003e jsonProvider \u003d\n+          Class.forName(\"org.glassfish.jersey.jackson.JacksonFeature\");\n+      // Class jsonProvider \u003d\n+      // Class.forName(\"org.glassfish.jersey.moxy.json.MoxyJsonFeature\");\n+      // Class jsonProvider \u003d\n+      // Class.forName(\"org.glassfish.jersey.jettison.JettisonFeature\");\n+      resources.add(jsonProvider);\n+    } catch (final ClassNotFoundException ex) {\n+      ex.printStackTrace();\n+    }\n+    addRestResourceClasses(resources);\n+    return resources;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Set\u003cClass\u003c?\u003e\u003e getClasses() {\n    final Set\u003cClass\u003c?\u003e\u003e resources \u003d new java.util.HashSet\u003c\u003e();\n    // following code can be used to customize Jersey 2.0 JSON provider:\n    try {\n      final Class\u003c?\u003e jsonProvider \u003d\n          Class.forName(\"org.glassfish.jersey.jackson.JacksonFeature\");\n      // Class jsonProvider \u003d\n      // Class.forName(\"org.glassfish.jersey.moxy.json.MoxyJsonFeature\");\n      // Class jsonProvider \u003d\n      // Class.forName(\"org.glassfish.jersey.jettison.JettisonFeature\");\n      resources.add(jsonProvider);\n    } catch (final ClassNotFoundException ex) {\n      ex.printStackTrace();\n    }\n    addRestResourceClasses(resources);\n    return resources;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-catalog/hadoop-yarn-applications-catalog-webapp/src/main/java/org/apache/hadoop/yarn/appcatalog/application/AppCatalog.java"
    }
  }
}