{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FileSystemApplicationHistoryStore.java",
  "functionName": "getContainer",
  "functionId": "getContainer___containerId-ContainerId",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/FileSystemApplicationHistoryStore.java",
  "functionStartLine": 313,
  "functionEndLine": 358,
  "numCommitsSeen": 16,
  "timeTaken": 1669,
  "changeHistory": [
    "3993d646d7fe8d28ac33e9bbda2c357d94dd98ea",
    "8314674947ec087899d2515ae6b668c6c39cabbd",
    "cbee889711eddc5c67a61df4a6531b4ab3cd205a"
  ],
  "changeHistoryShort": {
    "3993d646d7fe8d28ac33e9bbda2c357d94dd98ea": "Ybodychange",
    "8314674947ec087899d2515ae6b668c6c39cabbd": "Ybodychange",
    "cbee889711eddc5c67a61df4a6531b4ab3cd205a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3993d646d7fe8d28ac33e9bbda2c357d94dd98ea": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1920. Fixed TestFileSystemApplicationHistoryStore failure on windows. Contributed by Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1586414 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/04/14 11:57 AM",
      "commitName": "3993d646d7fe8d28ac33e9bbda2c357d94dd98ea",
      "commitAuthor": "Zhijie Shen",
      "commitDateOld": "17/03/14 2:36 PM",
      "commitNameOld": "8314674947ec087899d2515ae6b668c6c39cabbd",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 23.89,
      "commitsBetweenForRepo": 171,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,46 +1,46 @@\n   public ContainerHistoryData getContainer(ContainerId containerId)\n       throws IOException {\n     HistoryFileReader hfReader \u003d\n         getHistoryFileReader(containerId.getApplicationAttemptId()\n           .getApplicationId());\n     try {\n       boolean readStartData \u003d false;\n       boolean readFinishData \u003d false;\n       ContainerHistoryData historyData \u003d\n           ContainerHistoryData\n             .newInstance(containerId, null, null, null, Long.MIN_VALUE,\n               Long.MAX_VALUE, null, Integer.MAX_VALUE, null);\n       while ((!readStartData || !readFinishData) \u0026\u0026 hfReader.hasNext()) {\n         HistoryFileReader.Entry entry \u003d hfReader.next();\n         if (entry.key.id.equals(containerId.toString())) {\n           if (entry.key.suffix.equals(START_DATA_SUFFIX)) {\n             ContainerStartData startData \u003d parseContainerStartData(entry.value);\n             mergeContainerHistoryData(historyData, startData);\n             readStartData \u003d true;\n           } else if (entry.key.suffix.equals(FINISH_DATA_SUFFIX)) {\n             ContainerFinishData finishData \u003d\n                 parseContainerFinishData(entry.value);\n             mergeContainerHistoryData(historyData, finishData);\n             readFinishData \u003d true;\n           }\n         }\n       }\n       if (!readStartData \u0026\u0026 !readFinishData) {\n         return null;\n       }\n       if (!readStartData) {\n         LOG.warn(\"Start information is missing for container \" + containerId);\n       }\n       if (!readFinishData) {\n         LOG.warn(\"Finish information is missing for container \" + containerId);\n       }\n       LOG.info(\"Completed reading history information of container \"\n           + containerId);\n       return historyData;\n     } catch (IOException e) {\n-      LOG.error(\"Error when reading history file of container \" + containerId);\n+      LOG.error(\"Error when reading history file of container \" + containerId, e);\n       throw e;\n     } finally {\n       hfReader.close();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ContainerHistoryData getContainer(ContainerId containerId)\n      throws IOException {\n    HistoryFileReader hfReader \u003d\n        getHistoryFileReader(containerId.getApplicationAttemptId()\n          .getApplicationId());\n    try {\n      boolean readStartData \u003d false;\n      boolean readFinishData \u003d false;\n      ContainerHistoryData historyData \u003d\n          ContainerHistoryData\n            .newInstance(containerId, null, null, null, Long.MIN_VALUE,\n              Long.MAX_VALUE, null, Integer.MAX_VALUE, null);\n      while ((!readStartData || !readFinishData) \u0026\u0026 hfReader.hasNext()) {\n        HistoryFileReader.Entry entry \u003d hfReader.next();\n        if (entry.key.id.equals(containerId.toString())) {\n          if (entry.key.suffix.equals(START_DATA_SUFFIX)) {\n            ContainerStartData startData \u003d parseContainerStartData(entry.value);\n            mergeContainerHistoryData(historyData, startData);\n            readStartData \u003d true;\n          } else if (entry.key.suffix.equals(FINISH_DATA_SUFFIX)) {\n            ContainerFinishData finishData \u003d\n                parseContainerFinishData(entry.value);\n            mergeContainerHistoryData(historyData, finishData);\n            readFinishData \u003d true;\n          }\n        }\n      }\n      if (!readStartData \u0026\u0026 !readFinishData) {\n        return null;\n      }\n      if (!readStartData) {\n        LOG.warn(\"Start information is missing for container \" + containerId);\n      }\n      if (!readFinishData) {\n        LOG.warn(\"Finish information is missing for container \" + containerId);\n      }\n      LOG.info(\"Completed reading history information of container \"\n          + containerId);\n      return historyData;\n    } catch (IOException e) {\n      LOG.error(\"Error when reading history file of container \" + containerId, e);\n      throw e;\n    } finally {\n      hfReader.close();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/FileSystemApplicationHistoryStore.java",
      "extendedDetails": {}
    },
    "8314674947ec087899d2515ae6b668c6c39cabbd": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1685. Fixed few bugs related to handling of containers\u0027 log-URLs on ResourceManager and history-service. Contributed by Zhijie Shen.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1578602 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/03/14 2:36 PM",
      "commitName": "8314674947ec087899d2515ae6b668c6c39cabbd",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "22/02/14 6:04 PM",
      "commitNameOld": "e167e585e9dd5c86ae763c257d62fdcc83260200",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 22.81,
      "commitsBetweenForRepo": 200,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,46 +1,46 @@\n   public ContainerHistoryData getContainer(ContainerId containerId)\n       throws IOException {\n     HistoryFileReader hfReader \u003d\n         getHistoryFileReader(containerId.getApplicationAttemptId()\n           .getApplicationId());\n     try {\n       boolean readStartData \u003d false;\n       boolean readFinishData \u003d false;\n       ContainerHistoryData historyData \u003d\n           ContainerHistoryData\n             .newInstance(containerId, null, null, null, Long.MIN_VALUE,\n-              Long.MAX_VALUE, null, null, Integer.MAX_VALUE, null);\n+              Long.MAX_VALUE, null, Integer.MAX_VALUE, null);\n       while ((!readStartData || !readFinishData) \u0026\u0026 hfReader.hasNext()) {\n         HistoryFileReader.Entry entry \u003d hfReader.next();\n         if (entry.key.id.equals(containerId.toString())) {\n           if (entry.key.suffix.equals(START_DATA_SUFFIX)) {\n             ContainerStartData startData \u003d parseContainerStartData(entry.value);\n             mergeContainerHistoryData(historyData, startData);\n             readStartData \u003d true;\n           } else if (entry.key.suffix.equals(FINISH_DATA_SUFFIX)) {\n             ContainerFinishData finishData \u003d\n                 parseContainerFinishData(entry.value);\n             mergeContainerHistoryData(historyData, finishData);\n             readFinishData \u003d true;\n           }\n         }\n       }\n       if (!readStartData \u0026\u0026 !readFinishData) {\n         return null;\n       }\n       if (!readStartData) {\n         LOG.warn(\"Start information is missing for container \" + containerId);\n       }\n       if (!readFinishData) {\n         LOG.warn(\"Finish information is missing for container \" + containerId);\n       }\n       LOG.info(\"Completed reading history information of container \"\n           + containerId);\n       return historyData;\n     } catch (IOException e) {\n       LOG.error(\"Error when reading history file of container \" + containerId);\n       throw e;\n     } finally {\n       hfReader.close();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ContainerHistoryData getContainer(ContainerId containerId)\n      throws IOException {\n    HistoryFileReader hfReader \u003d\n        getHistoryFileReader(containerId.getApplicationAttemptId()\n          .getApplicationId());\n    try {\n      boolean readStartData \u003d false;\n      boolean readFinishData \u003d false;\n      ContainerHistoryData historyData \u003d\n          ContainerHistoryData\n            .newInstance(containerId, null, null, null, Long.MIN_VALUE,\n              Long.MAX_VALUE, null, Integer.MAX_VALUE, null);\n      while ((!readStartData || !readFinishData) \u0026\u0026 hfReader.hasNext()) {\n        HistoryFileReader.Entry entry \u003d hfReader.next();\n        if (entry.key.id.equals(containerId.toString())) {\n          if (entry.key.suffix.equals(START_DATA_SUFFIX)) {\n            ContainerStartData startData \u003d parseContainerStartData(entry.value);\n            mergeContainerHistoryData(historyData, startData);\n            readStartData \u003d true;\n          } else if (entry.key.suffix.equals(FINISH_DATA_SUFFIX)) {\n            ContainerFinishData finishData \u003d\n                parseContainerFinishData(entry.value);\n            mergeContainerHistoryData(historyData, finishData);\n            readFinishData \u003d true;\n          }\n        }\n      }\n      if (!readStartData \u0026\u0026 !readFinishData) {\n        return null;\n      }\n      if (!readStartData) {\n        LOG.warn(\"Start information is missing for container \" + containerId);\n      }\n      if (!readFinishData) {\n        LOG.warn(\"Finish information is missing for container \" + containerId);\n      }\n      LOG.info(\"Completed reading history information of container \"\n          + containerId);\n      return historyData;\n    } catch (IOException e) {\n      LOG.error(\"Error when reading history file of container \" + containerId);\n      throw e;\n    } finally {\n      hfReader.close();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/FileSystemApplicationHistoryStore.java",
      "extendedDetails": {}
    },
    "cbee889711eddc5c67a61df4a6531b4ab3cd205a": {
      "type": "Yintroduced",
      "commitMessage": "YARN-321. Merging YARN-321 branch to trunk.\nsvn merge ../branches/YARN-321\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1561452 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/01/14 8:51 PM",
      "commitName": "cbee889711eddc5c67a61df4a6531b4ab3cd205a",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,46 @@\n+  public ContainerHistoryData getContainer(ContainerId containerId)\n+      throws IOException {\n+    HistoryFileReader hfReader \u003d\n+        getHistoryFileReader(containerId.getApplicationAttemptId()\n+          .getApplicationId());\n+    try {\n+      boolean readStartData \u003d false;\n+      boolean readFinishData \u003d false;\n+      ContainerHistoryData historyData \u003d\n+          ContainerHistoryData\n+            .newInstance(containerId, null, null, null, Long.MIN_VALUE,\n+              Long.MAX_VALUE, null, null, Integer.MAX_VALUE, null);\n+      while ((!readStartData || !readFinishData) \u0026\u0026 hfReader.hasNext()) {\n+        HistoryFileReader.Entry entry \u003d hfReader.next();\n+        if (entry.key.id.equals(containerId.toString())) {\n+          if (entry.key.suffix.equals(START_DATA_SUFFIX)) {\n+            ContainerStartData startData \u003d parseContainerStartData(entry.value);\n+            mergeContainerHistoryData(historyData, startData);\n+            readStartData \u003d true;\n+          } else if (entry.key.suffix.equals(FINISH_DATA_SUFFIX)) {\n+            ContainerFinishData finishData \u003d\n+                parseContainerFinishData(entry.value);\n+            mergeContainerHistoryData(historyData, finishData);\n+            readFinishData \u003d true;\n+          }\n+        }\n+      }\n+      if (!readStartData \u0026\u0026 !readFinishData) {\n+        return null;\n+      }\n+      if (!readStartData) {\n+        LOG.warn(\"Start information is missing for container \" + containerId);\n+      }\n+      if (!readFinishData) {\n+        LOG.warn(\"Finish information is missing for container \" + containerId);\n+      }\n+      LOG.info(\"Completed reading history information of container \"\n+          + containerId);\n+      return historyData;\n+    } catch (IOException e) {\n+      LOG.error(\"Error when reading history file of container \" + containerId);\n+      throw e;\n+    } finally {\n+      hfReader.close();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public ContainerHistoryData getContainer(ContainerId containerId)\n      throws IOException {\n    HistoryFileReader hfReader \u003d\n        getHistoryFileReader(containerId.getApplicationAttemptId()\n          .getApplicationId());\n    try {\n      boolean readStartData \u003d false;\n      boolean readFinishData \u003d false;\n      ContainerHistoryData historyData \u003d\n          ContainerHistoryData\n            .newInstance(containerId, null, null, null, Long.MIN_VALUE,\n              Long.MAX_VALUE, null, null, Integer.MAX_VALUE, null);\n      while ((!readStartData || !readFinishData) \u0026\u0026 hfReader.hasNext()) {\n        HistoryFileReader.Entry entry \u003d hfReader.next();\n        if (entry.key.id.equals(containerId.toString())) {\n          if (entry.key.suffix.equals(START_DATA_SUFFIX)) {\n            ContainerStartData startData \u003d parseContainerStartData(entry.value);\n            mergeContainerHistoryData(historyData, startData);\n            readStartData \u003d true;\n          } else if (entry.key.suffix.equals(FINISH_DATA_SUFFIX)) {\n            ContainerFinishData finishData \u003d\n                parseContainerFinishData(entry.value);\n            mergeContainerHistoryData(historyData, finishData);\n            readFinishData \u003d true;\n          }\n        }\n      }\n      if (!readStartData \u0026\u0026 !readFinishData) {\n        return null;\n      }\n      if (!readStartData) {\n        LOG.warn(\"Start information is missing for container \" + containerId);\n      }\n      if (!readFinishData) {\n        LOG.warn(\"Finish information is missing for container \" + containerId);\n      }\n      LOG.info(\"Completed reading history information of container \"\n          + containerId);\n      return historyData;\n    } catch (IOException e) {\n      LOG.error(\"Error when reading history file of container \" + containerId);\n      throw e;\n    } finally {\n      hfReader.close();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/FileSystemApplicationHistoryStore.java"
    }
  }
}