{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RawLocalFileSystem.java",
  "functionName": "createNonRecursive",
  "functionId": "createNonRecursive___f-Path__permission-FsPermission__overwrite-boolean__bufferSize-int__replication-short__blockSize-long__progress-Progressable",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/RawLocalFileSystem.java",
  "functionStartLine": 359,
  "functionEndLine": 366,
  "numCommitsSeen": 53,
  "timeTaken": 1778,
  "changeHistory": [
    "e996a1bfd4f3ada6cbd9633fe68fda1e0c910bdf",
    "03867eb1bb173c66b5eb3bebf2fe03a1188635b5",
    "2deaca4415863fb20cee539878fd9acc3fc2fa82"
  ],
  "changeHistoryShort": {
    "e996a1bfd4f3ada6cbd9633fe68fda1e0c910bdf": "Ybodychange",
    "03867eb1bb173c66b5eb3bebf2fe03a1188635b5": "Ybodychange",
    "2deaca4415863fb20cee539878fd9acc3fc2fa82": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e996a1bfd4f3ada6cbd9633fe68fda1e0c910bdf": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11321. copyToLocal cannot save a file to an SMB share unless the user has Full Control permissions. Contributed by Chris Nauroth.\n",
      "commitDate": "16/12/14 3:29 PM",
      "commitName": "e996a1bfd4f3ada6cbd9633fe68fda1e0c910bdf",
      "commitAuthor": "cnauroth",
      "commitDateOld": "09/12/14 2:31 PM",
      "commitNameOld": "03867eb1bb173c66b5eb3bebf2fe03a1188635b5",
      "commitAuthorOld": "Colin Patrick Mccabe",
      "daysBetweenCommits": 7.04,
      "commitsBetweenForRepo": 53,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,8 @@\n   public FSDataOutputStream createNonRecursive(Path f, FsPermission permission,\n       boolean overwrite,\n       int bufferSize, short replication, long blockSize,\n       Progressable progress) throws IOException {\n-    FSDataOutputStream out \u003d create(f,\n-        overwrite, false, bufferSize, replication, blockSize, progress);\n-    boolean success \u003d false;\n-    try {\n-      setPermission(f, permission);\n-      success \u003d true;\n-      return out;\n-    } finally {\n-      if (!success) {\n-        IOUtils.cleanup(LOG, out);\n-      } \n-    }\n+    FSDataOutputStream out \u003d create(f, overwrite, false, bufferSize, replication,\n+        blockSize, progress, permission);\n+    return out;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public FSDataOutputStream createNonRecursive(Path f, FsPermission permission,\n      boolean overwrite,\n      int bufferSize, short replication, long blockSize,\n      Progressable progress) throws IOException {\n    FSDataOutputStream out \u003d create(f, overwrite, false, bufferSize, replication,\n        blockSize, progress, permission);\n    return out;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/RawLocalFileSystem.java",
      "extendedDetails": {}
    },
    "03867eb1bb173c66b5eb3bebf2fe03a1188635b5": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11349. RawLocalFileSystem leaks file descriptor while creating a file if creat succeeds but chmod fails. (Varun Saxena via Colin P.  McCabe)\n",
      "commitDate": "09/12/14 2:31 PM",
      "commitName": "03867eb1bb173c66b5eb3bebf2fe03a1188635b5",
      "commitAuthor": "Colin Patrick Mccabe",
      "commitDateOld": "22/10/14 3:57 PM",
      "commitNameOld": "3b12fd6cfbf4cc91ef8e8616c7aafa9de006cde5",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 47.98,
      "commitsBetweenForRepo": 405,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,17 @@\n   public FSDataOutputStream createNonRecursive(Path f, FsPermission permission,\n       boolean overwrite,\n       int bufferSize, short replication, long blockSize,\n       Progressable progress) throws IOException {\n     FSDataOutputStream out \u003d create(f,\n         overwrite, false, bufferSize, replication, blockSize, progress);\n-    setPermission(f, permission);\n-    return out;\n+    boolean success \u003d false;\n+    try {\n+      setPermission(f, permission);\n+      success \u003d true;\n+      return out;\n+    } finally {\n+      if (!success) {\n+        IOUtils.cleanup(LOG, out);\n+      } \n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public FSDataOutputStream createNonRecursive(Path f, FsPermission permission,\n      boolean overwrite,\n      int bufferSize, short replication, long blockSize,\n      Progressable progress) throws IOException {\n    FSDataOutputStream out \u003d create(f,\n        overwrite, false, bufferSize, replication, blockSize, progress);\n    boolean success \u003d false;\n    try {\n      setPermission(f, permission);\n      success \u003d true;\n      return out;\n    } finally {\n      if (!success) {\n        IOUtils.cleanup(LOG, out);\n      } \n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/RawLocalFileSystem.java",
      "extendedDetails": {}
    },
    "2deaca4415863fb20cee539878fd9acc3fc2fa82": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-6886. LocalFileSystem Needs createNonRecursive API. Contributed by Nicolas Spiegelberg and Eli Collins\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1212073 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/12/11 11:57 AM",
      "commitName": "2deaca4415863fb20cee539878fd9acc3fc2fa82",
      "commitAuthor": "Eli Collins",
      "diff": "@@ -0,0 +1,9 @@\n+  public FSDataOutputStream createNonRecursive(Path f, FsPermission permission,\n+      boolean overwrite,\n+      int bufferSize, short replication, long blockSize,\n+      Progressable progress) throws IOException {\n+    FSDataOutputStream out \u003d create(f,\n+        overwrite, false, bufferSize, replication, blockSize, progress);\n+    setPermission(f, permission);\n+    return out;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public FSDataOutputStream createNonRecursive(Path f, FsPermission permission,\n      boolean overwrite,\n      int bufferSize, short replication, long blockSize,\n      Progressable progress) throws IOException {\n    FSDataOutputStream out \u003d create(f,\n        overwrite, false, bufferSize, replication, blockSize, progress);\n    setPermission(f, permission);\n    return out;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/RawLocalFileSystem.java"
    }
  }
}