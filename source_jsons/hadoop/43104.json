{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SystemServiceManagerImpl.java",
  "functionName": "scanForUserServices",
  "functionId": "scanForUserServices",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/client/SystemServiceManagerImpl.java",
  "functionStartLine": 276,
  "functionEndLine": 302,
  "numCommitsSeen": 5,
  "timeTaken": 1895,
  "changeHistory": [
    "a23ff8d88001ad8e4ac4c36fc1f7691d193dc1d0",
    "427ad7ecc4afbf2cc4acde22c29a7248c46fb22b",
    "d4e63ccca0763b452e4a0169dd932b3f32066281"
  ],
  "changeHistoryShort": {
    "a23ff8d88001ad8e4ac4c36fc1f7691d193dc1d0": "Yfilerename",
    "427ad7ecc4afbf2cc4acde22c29a7248c46fb22b": "Ybodychange",
    "d4e63ccca0763b452e4a0169dd932b3f32066281": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a23ff8d88001ad8e4ac4c36fc1f7691d193dc1d0": {
      "type": "Yfilerename",
      "commitMessage": "YARN-7530.  Refactored YARN service API project location.\n            Contributed by Chandni Singh\n",
      "commitDate": "18/05/18 2:29 PM",
      "commitName": "a23ff8d88001ad8e4ac4c36fc1f7691d193dc1d0",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "18/05/18 11:29 AM",
      "commitNameOld": "89f59113927dd886f09d8fe2c05ff2cd5d1390c1",
      "commitAuthorOld": "Xiao Chen",
      "daysBetweenCommits": 0.12,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  void scanForUserServices() throws IOException {\n    if (systemServiceDir \u003d\u003d null) {\n      return;\n    }\n    try {\n      LOG.info(\"Scan for launch type on {}\", systemServiceDir);\n      RemoteIterator\u003cFileStatus\u003e iterLaunchType \u003d list(systemServiceDir);\n      while (iterLaunchType.hasNext()) {\n        FileStatus launchType \u003d iterLaunchType.next();\n        if (!launchType.isDirectory()) {\n          LOG.debug(\"Scanner skips for unknown file {}\", launchType.getPath());\n          continue;\n        }\n        if (launchType.getPath().getName().equals(SYNC)) {\n          scanForUserServiceDefinition(launchType.getPath(), syncUserServices);\n        } else if (launchType.getPath().getName().equals(ASYNC)) {\n          scanForUserServiceDefinition(launchType.getPath(), asyncUserServices);\n        } else {\n          badDirSkipCounter++;\n          LOG.debug(\"Scanner skips for unknown dir {}.\", launchType.getPath());\n        }\n      }\n    } catch (FileNotFoundException e) {\n      LOG.warn(\"System service directory {} doesn\u0027t not exist.\",\n          systemServiceDir);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/client/SystemServiceManagerImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/client/SystemServiceManagerImpl.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/client/SystemServiceManagerImpl.java"
      }
    },
    "427ad7ecc4afbf2cc4acde22c29a7248c46fb22b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8126. Support auto-spawning of admin configured services during bootstrap of RM. Contributed by Rohith Sharma K S.\n",
      "commitDate": "17/04/18 2:38 AM",
      "commitName": "427ad7ecc4afbf2cc4acde22c29a7248c46fb22b",
      "commitAuthor": "Sunil G",
      "commitDateOld": "06/04/18 9:24 PM",
      "commitNameOld": "d4e63ccca0763b452e4a0169dd932b3f32066281",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 10.22,
      "commitsBetweenForRepo": 72,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,27 @@\n   void scanForUserServices() throws IOException {\n     if (systemServiceDir \u003d\u003d null) {\n       return;\n     }\n     try {\n       LOG.info(\"Scan for launch type on {}\", systemServiceDir);\n       RemoteIterator\u003cFileStatus\u003e iterLaunchType \u003d list(systemServiceDir);\n       while (iterLaunchType.hasNext()) {\n         FileStatus launchType \u003d iterLaunchType.next();\n         if (!launchType.isDirectory()) {\n           LOG.debug(\"Scanner skips for unknown file {}\", launchType.getPath());\n           continue;\n         }\n         if (launchType.getPath().getName().equals(SYNC)) {\n           scanForUserServiceDefinition(launchType.getPath(), syncUserServices);\n         } else if (launchType.getPath().getName().equals(ASYNC)) {\n           scanForUserServiceDefinition(launchType.getPath(), asyncUserServices);\n         } else {\n+          badDirSkipCounter++;\n           LOG.debug(\"Scanner skips for unknown dir {}.\", launchType.getPath());\n         }\n       }\n     } catch (FileNotFoundException e) {\n       LOG.warn(\"System service directory {} doesn\u0027t not exist.\",\n           systemServiceDir);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void scanForUserServices() throws IOException {\n    if (systemServiceDir \u003d\u003d null) {\n      return;\n    }\n    try {\n      LOG.info(\"Scan for launch type on {}\", systemServiceDir);\n      RemoteIterator\u003cFileStatus\u003e iterLaunchType \u003d list(systemServiceDir);\n      while (iterLaunchType.hasNext()) {\n        FileStatus launchType \u003d iterLaunchType.next();\n        if (!launchType.isDirectory()) {\n          LOG.debug(\"Scanner skips for unknown file {}\", launchType.getPath());\n          continue;\n        }\n        if (launchType.getPath().getName().equals(SYNC)) {\n          scanForUserServiceDefinition(launchType.getPath(), syncUserServices);\n        } else if (launchType.getPath().getName().equals(ASYNC)) {\n          scanForUserServiceDefinition(launchType.getPath(), asyncUserServices);\n        } else {\n          badDirSkipCounter++;\n          LOG.debug(\"Scanner skips for unknown dir {}.\", launchType.getPath());\n        }\n      }\n    } catch (FileNotFoundException e) {\n      LOG.warn(\"System service directory {} doesn\u0027t not exist.\",\n          systemServiceDir);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/client/SystemServiceManagerImpl.java",
      "extendedDetails": {}
    },
    "d4e63ccca0763b452e4a0169dd932b3f32066281": {
      "type": "Yintroduced",
      "commitMessage": "YARN-8048. Support auto-spawning of admin configured services during bootstrap of RM (Rohith Sharma K S via wangda)\n\nChange-Id: I2d8d61ccad55e1118009294d7e17822df3cd0fd5\n",
      "commitDate": "06/04/18 9:24 PM",
      "commitName": "d4e63ccca0763b452e4a0169dd932b3f32066281",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,26 @@\n+  void scanForUserServices() throws IOException {\n+    if (systemServiceDir \u003d\u003d null) {\n+      return;\n+    }\n+    try {\n+      LOG.info(\"Scan for launch type on {}\", systemServiceDir);\n+      RemoteIterator\u003cFileStatus\u003e iterLaunchType \u003d list(systemServiceDir);\n+      while (iterLaunchType.hasNext()) {\n+        FileStatus launchType \u003d iterLaunchType.next();\n+        if (!launchType.isDirectory()) {\n+          LOG.debug(\"Scanner skips for unknown file {}\", launchType.getPath());\n+          continue;\n+        }\n+        if (launchType.getPath().getName().equals(SYNC)) {\n+          scanForUserServiceDefinition(launchType.getPath(), syncUserServices);\n+        } else if (launchType.getPath().getName().equals(ASYNC)) {\n+          scanForUserServiceDefinition(launchType.getPath(), asyncUserServices);\n+        } else {\n+          LOG.debug(\"Scanner skips for unknown dir {}.\", launchType.getPath());\n+        }\n+      }\n+    } catch (FileNotFoundException e) {\n+      LOG.warn(\"System service directory {} doesn\u0027t not exist.\",\n+          systemServiceDir);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  void scanForUserServices() throws IOException {\n    if (systemServiceDir \u003d\u003d null) {\n      return;\n    }\n    try {\n      LOG.info(\"Scan for launch type on {}\", systemServiceDir);\n      RemoteIterator\u003cFileStatus\u003e iterLaunchType \u003d list(systemServiceDir);\n      while (iterLaunchType.hasNext()) {\n        FileStatus launchType \u003d iterLaunchType.next();\n        if (!launchType.isDirectory()) {\n          LOG.debug(\"Scanner skips for unknown file {}\", launchType.getPath());\n          continue;\n        }\n        if (launchType.getPath().getName().equals(SYNC)) {\n          scanForUserServiceDefinition(launchType.getPath(), syncUserServices);\n        } else if (launchType.getPath().getName().equals(ASYNC)) {\n          scanForUserServiceDefinition(launchType.getPath(), asyncUserServices);\n        } else {\n          LOG.debug(\"Scanner skips for unknown dir {}.\", launchType.getPath());\n        }\n      }\n    } catch (FileNotFoundException e) {\n      LOG.warn(\"System service directory {} doesn\u0027t not exist.\",\n          systemServiceDir);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/client/SystemServiceManagerImpl.java"
    }
  }
}