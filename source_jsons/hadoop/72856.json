{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CachingKeyProvider.java",
  "functionName": "load",
  "functionId": "load___key-String",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/CachingKeyProvider.java",
  "functionStartLine": 64,
  "functionEndLine": 70,
  "numCommitsSeen": 4,
  "timeTaken": 862,
  "changeHistory": [
    "0a3ea6c486b43a798d487f9a20668d418f539b8b",
    "17d4fbbf0af9b93de9502afb274e91533140d1c6"
  ],
  "changeHistoryShort": {
    "0a3ea6c486b43a798d487f9a20668d418f539b8b": "Ymovefromfile",
    "17d4fbbf0af9b93de9502afb274e91533140d1c6": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0a3ea6c486b43a798d487f9a20668d418f539b8b": {
      "type": "Ymovefromfile",
      "commitMessage": "HADOOP-10750. KMSKeyProviderCache should be in hadoop-common. (asuresh via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1611823 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/07/14 3:01 PM",
      "commitName": "0a3ea6c486b43a798d487f9a20668d418f539b8b",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "18/07/14 2:46 PM",
      "commitNameOld": "f1b831ccfbec37712522bef7a44f51bff0369003",
      "commitAuthorOld": "Xuan Gong",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,7 @@\n-      public KeyVersion load(String key) throws Exception {\n-        KeyVersion kv \u003d  provider.getCurrentKey(key);\n-        if (kv \u003d\u003d null) {\n-          throw new KeyNotFoundException();\n-        }\n-        return kv;\n-      }\n\\ No newline at end of file\n+            public KeyVersion load(String key) throws Exception {\n+              KeyVersion kv \u003d provider.getCurrentKey(key);\n+              if (kv \u003d\u003d null) {\n+                throw new KeyNotFoundException();\n+              }\n+              return kv;\n+            }\n\\ No newline at end of file\n",
      "actualSource": "            public KeyVersion load(String key) throws Exception {\n              KeyVersion kv \u003d provider.getCurrentKey(key);\n              if (kv \u003d\u003d null) {\n                throw new KeyNotFoundException();\n              }\n              return kv;\n            }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/CachingKeyProvider.java",
      "extendedDetails": {
        "oldPath": "hadoop-common-project/hadoop-kms/src/main/java/org/apache/hadoop/crypto/key/kms/server/KMSCacheKeyProvider.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/CachingKeyProvider.java",
        "oldMethodName": "load",
        "newMethodName": "load"
      }
    },
    "17d4fbbf0af9b93de9502afb274e91533140d1c6": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-10433. Key Management Server based on KeyProvider API. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1592637 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/05/14 2:43 PM",
      "commitName": "17d4fbbf0af9b93de9502afb274e91533140d1c6",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,7 @@\n+      public KeyVersion load(String key) throws Exception {\n+        KeyVersion kv \u003d  provider.getCurrentKey(key);\n+        if (kv \u003d\u003d null) {\n+          throw new KeyNotFoundException();\n+        }\n+        return kv;\n+      }\n\\ No newline at end of file\n",
      "actualSource": "      public KeyVersion load(String key) throws Exception {\n        KeyVersion kv \u003d  provider.getCurrentKey(key);\n        if (kv \u003d\u003d null) {\n          throw new KeyNotFoundException();\n        }\n        return kv;\n      }",
      "path": "hadoop-common-project/hadoop-kms/src/main/java/org/apache/hadoop/crypto/key/kms/server/KMSCacheKeyProvider.java"
    }
  }
}