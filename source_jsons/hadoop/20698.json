{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CombineFileRecordReader.java",
  "functionName": "initNextRecordReader",
  "functionId": "initNextRecordReader",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/lib/CombineFileRecordReader.java",
  "functionStartLine": 123,
  "functionEndLine": 154,
  "numCommitsSeen": 8,
  "timeTaken": 4460,
  "changeHistory": [
    "c122ef900042ba55b069c19e7d9454412e59359b",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "c122ef900042ba55b069c19e7d9454412e59359b": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c122ef900042ba55b069c19e7d9454412e59359b": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5670. CombineFileRecordReader should report progress when moving to the next file. Contributed by Chen He\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1568118 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/02/14 3:16 PM",
      "commitName": "c122ef900042ba55b069c19e7d9454412e59359b",
      "commitAuthor": "Jason Darrell Lowe",
      "commitDateOld": "31/05/13 5:33 PM",
      "commitNameOld": "b8e9f067749dbe03f352736255e473a4e00d81d8",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 257.95,
      "commitsBetweenForRepo": 1622,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,32 @@\n   protected boolean initNextRecordReader() throws IOException {\n \n     if (curReader !\u003d null) {\n       curReader.close();\n       curReader \u003d null;\n       if (idx \u003e 0) {\n         progress +\u003d split.getLength(idx-1);    // done processing so far\n       }\n     }\n \n     // if all chunks have been processed, nothing more to do.\n     if (idx \u003d\u003d split.getNumPaths()) {\n       return false;\n     }\n \n+    reporter.progress();\n+\n     // get a record reader for the idx-th chunk\n     try {\n       curReader \u003d  rrConstructor.newInstance(new Object [] \n                             {split, jc, reporter, Integer.valueOf(idx)});\n \n       // setup some helper config variables.\n       jc.set(JobContext.MAP_INPUT_FILE, split.getPath(idx).toString());\n       jc.setLong(JobContext.MAP_INPUT_START, split.getOffset(idx));\n       jc.setLong(JobContext.MAP_INPUT_PATH, split.getLength(idx));\n     } catch (Exception e) {\n       throw new RuntimeException (e);\n     }\n     idx++;\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected boolean initNextRecordReader() throws IOException {\n\n    if (curReader !\u003d null) {\n      curReader.close();\n      curReader \u003d null;\n      if (idx \u003e 0) {\n        progress +\u003d split.getLength(idx-1);    // done processing so far\n      }\n    }\n\n    // if all chunks have been processed, nothing more to do.\n    if (idx \u003d\u003d split.getNumPaths()) {\n      return false;\n    }\n\n    reporter.progress();\n\n    // get a record reader for the idx-th chunk\n    try {\n      curReader \u003d  rrConstructor.newInstance(new Object [] \n                            {split, jc, reporter, Integer.valueOf(idx)});\n\n      // setup some helper config variables.\n      jc.set(JobContext.MAP_INPUT_FILE, split.getPath(idx).toString());\n      jc.setLong(JobContext.MAP_INPUT_START, split.getOffset(idx));\n      jc.setLong(JobContext.MAP_INPUT_PATH, split.getLength(idx));\n    } catch (Exception e) {\n      throw new RuntimeException (e);\n    }\n    idx++;\n    return true;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/lib/CombineFileRecordReader.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected boolean initNextRecordReader() throws IOException {\n\n    if (curReader !\u003d null) {\n      curReader.close();\n      curReader \u003d null;\n      if (idx \u003e 0) {\n        progress +\u003d split.getLength(idx-1);    // done processing so far\n      }\n    }\n\n    // if all chunks have been processed, nothing more to do.\n    if (idx \u003d\u003d split.getNumPaths()) {\n      return false;\n    }\n\n    // get a record reader for the idx-th chunk\n    try {\n      curReader \u003d  rrConstructor.newInstance(new Object [] \n                            {split, jc, reporter, Integer.valueOf(idx)});\n\n      // setup some helper config variables.\n      jc.set(JobContext.MAP_INPUT_FILE, split.getPath(idx).toString());\n      jc.setLong(JobContext.MAP_INPUT_START, split.getOffset(idx));\n      jc.setLong(JobContext.MAP_INPUT_PATH, split.getLength(idx));\n    } catch (Exception e) {\n      throw new RuntimeException (e);\n    }\n    idx++;\n    return true;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/lib/CombineFileRecordReader.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/lib/CombineFileRecordReader.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/lib/CombineFileRecordReader.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected boolean initNextRecordReader() throws IOException {\n\n    if (curReader !\u003d null) {\n      curReader.close();\n      curReader \u003d null;\n      if (idx \u003e 0) {\n        progress +\u003d split.getLength(idx-1);    // done processing so far\n      }\n    }\n\n    // if all chunks have been processed, nothing more to do.\n    if (idx \u003d\u003d split.getNumPaths()) {\n      return false;\n    }\n\n    // get a record reader for the idx-th chunk\n    try {\n      curReader \u003d  rrConstructor.newInstance(new Object [] \n                            {split, jc, reporter, Integer.valueOf(idx)});\n\n      // setup some helper config variables.\n      jc.set(JobContext.MAP_INPUT_FILE, split.getPath(idx).toString());\n      jc.setLong(JobContext.MAP_INPUT_START, split.getOffset(idx));\n      jc.setLong(JobContext.MAP_INPUT_PATH, split.getLength(idx));\n    } catch (Exception e) {\n      throw new RuntimeException (e);\n    }\n    idx++;\n    return true;\n  }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/lib/CombineFileRecordReader.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/java/org/apache/hadoop/mapred/lib/CombineFileRecordReader.java",
        "newPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/lib/CombineFileRecordReader.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,30 @@\n+  protected boolean initNextRecordReader() throws IOException {\n+\n+    if (curReader !\u003d null) {\n+      curReader.close();\n+      curReader \u003d null;\n+      if (idx \u003e 0) {\n+        progress +\u003d split.getLength(idx-1);    // done processing so far\n+      }\n+    }\n+\n+    // if all chunks have been processed, nothing more to do.\n+    if (idx \u003d\u003d split.getNumPaths()) {\n+      return false;\n+    }\n+\n+    // get a record reader for the idx-th chunk\n+    try {\n+      curReader \u003d  rrConstructor.newInstance(new Object [] \n+                            {split, jc, reporter, Integer.valueOf(idx)});\n+\n+      // setup some helper config variables.\n+      jc.set(JobContext.MAP_INPUT_FILE, split.getPath(idx).toString());\n+      jc.setLong(JobContext.MAP_INPUT_START, split.getOffset(idx));\n+      jc.setLong(JobContext.MAP_INPUT_PATH, split.getLength(idx));\n+    } catch (Exception e) {\n+      throw new RuntimeException (e);\n+    }\n+    idx++;\n+    return true;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected boolean initNextRecordReader() throws IOException {\n\n    if (curReader !\u003d null) {\n      curReader.close();\n      curReader \u003d null;\n      if (idx \u003e 0) {\n        progress +\u003d split.getLength(idx-1);    // done processing so far\n      }\n    }\n\n    // if all chunks have been processed, nothing more to do.\n    if (idx \u003d\u003d split.getNumPaths()) {\n      return false;\n    }\n\n    // get a record reader for the idx-th chunk\n    try {\n      curReader \u003d  rrConstructor.newInstance(new Object [] \n                            {split, jc, reporter, Integer.valueOf(idx)});\n\n      // setup some helper config variables.\n      jc.set(JobContext.MAP_INPUT_FILE, split.getPath(idx).toString());\n      jc.setLong(JobContext.MAP_INPUT_START, split.getOffset(idx));\n      jc.setLong(JobContext.MAP_INPUT_PATH, split.getLength(idx));\n    } catch (Exception e) {\n      throw new RuntimeException (e);\n    }\n    idx++;\n    return true;\n  }",
      "path": "mapreduce/src/java/org/apache/hadoop/mapred/lib/CombineFileRecordReader.java"
    }
  }
}