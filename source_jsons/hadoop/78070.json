{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BaseExpression.java",
  "functionName": "toString",
  "functionId": "toString",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/find/BaseExpression.java",
  "functionStartLine": 111,
  "functionEndLine": 136,
  "numCommitsSeen": 2,
  "timeTaken": 1034,
  "changeHistory": [
    "fb8932a727f757b2e9c1c61a18145878d0eb77bd",
    "ba879a5dadbb0f33bba7e05ebc329a9942f34276"
  ],
  "changeHistoryShort": {
    "fb8932a727f757b2e9c1c61a18145878d0eb77bd": "Ybodychange",
    "ba879a5dadbb0f33bba7e05ebc329a9942f34276": "Yintroduced"
  },
  "changeHistoryDetails": {
    "fb8932a727f757b2e9c1c61a18145878d0eb77bd": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16029. Consecutive StringBuilder.append can be reused. Contributed by Ayush Saxena.\n",
      "commitDate": "11/01/19 10:54 AM",
      "commitName": "fb8932a727f757b2e9c1c61a18145878d0eb77bd",
      "commitAuthor": "Giovanni Matteo Fumarola",
      "commitDateOld": "13/11/14 11:52 AM",
      "commitNameOld": "ba879a5dadbb0f33bba7e05ebc329a9942f34276",
      "commitAuthorOld": "Allen Wittenauer",
      "daysBetweenCommits": 1519.96,
      "commitsBetweenForRepo": 11540,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n   public String toString() {\n     StringBuilder sb \u003d new StringBuilder();\n-    sb.append(getClass().getSimpleName());\n-    sb.append(\"(\");\n+    sb.append(getClass().getSimpleName())\n+        .append(\"(\");\n     boolean firstArg \u003d true;\n     for (String arg : getArguments()) {\n       if (!firstArg) {\n         sb.append(\",\");\n       } else {\n         firstArg \u003d false;\n       }\n       sb.append(arg);\n     }\n     sb.append(\";\");\n     firstArg \u003d true;\n     for (Expression child : getChildren()) {\n       if (!firstArg) {\n         sb.append(\",\");\n       } else {\n         firstArg \u003d false;\n       }\n       sb.append(child.toString());\n     }\n     sb.append(\")\");\n     return sb.toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    StringBuilder sb \u003d new StringBuilder();\n    sb.append(getClass().getSimpleName())\n        .append(\"(\");\n    boolean firstArg \u003d true;\n    for (String arg : getArguments()) {\n      if (!firstArg) {\n        sb.append(\",\");\n      } else {\n        firstArg \u003d false;\n      }\n      sb.append(arg);\n    }\n    sb.append(\";\");\n    firstArg \u003d true;\n    for (Expression child : getChildren()) {\n      if (!firstArg) {\n        sb.append(\",\");\n      } else {\n        firstArg \u003d false;\n      }\n      sb.append(child.toString());\n    }\n    sb.append(\")\");\n    return sb.toString();\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/find/BaseExpression.java",
      "extendedDetails": {}
    },
    "ba879a5dadbb0f33bba7e05ebc329a9942f34276": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-8989. hadoop fs -find feature (Jonathan Allen via aw)\n",
      "commitDate": "13/11/14 11:52 AM",
      "commitName": "ba879a5dadbb0f33bba7e05ebc329a9942f34276",
      "commitAuthor": "Allen Wittenauer",
      "diff": "@@ -0,0 +1,26 @@\n+  public String toString() {\n+    StringBuilder sb \u003d new StringBuilder();\n+    sb.append(getClass().getSimpleName());\n+    sb.append(\"(\");\n+    boolean firstArg \u003d true;\n+    for (String arg : getArguments()) {\n+      if (!firstArg) {\n+        sb.append(\",\");\n+      } else {\n+        firstArg \u003d false;\n+      }\n+      sb.append(arg);\n+    }\n+    sb.append(\";\");\n+    firstArg \u003d true;\n+    for (Expression child : getChildren()) {\n+      if (!firstArg) {\n+        sb.append(\",\");\n+      } else {\n+        firstArg \u003d false;\n+      }\n+      sb.append(child.toString());\n+    }\n+    sb.append(\")\");\n+    return sb.toString();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    StringBuilder sb \u003d new StringBuilder();\n    sb.append(getClass().getSimpleName());\n    sb.append(\"(\");\n    boolean firstArg \u003d true;\n    for (String arg : getArguments()) {\n      if (!firstArg) {\n        sb.append(\",\");\n      } else {\n        firstArg \u003d false;\n      }\n      sb.append(arg);\n    }\n    sb.append(\";\");\n    firstArg \u003d true;\n    for (Expression child : getChildren()) {\n      if (!firstArg) {\n        sb.append(\",\");\n      } else {\n        firstArg \u003d false;\n      }\n      sb.append(child.toString());\n    }\n    sb.append(\")\");\n    return sb.toString();\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/find/BaseExpression.java"
    }
  }
}