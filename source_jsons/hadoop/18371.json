{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "WordMedian.java",
  "functionName": "run",
  "functionId": "run___args-String[]",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-examples/src/main/java/org/apache/hadoop/examples/WordMedian.java",
  "functionStartLine": 176,
  "functionEndLine": 209,
  "numCommitsSeen": 7,
  "timeTaken": 1131,
  "changeHistory": [
    "9e7196749ee025db7668c648743d1deb72d3ca28",
    "bd69fb2d44403e930d1fc0868ed1dd2a49dd9659",
    "26447229ba2c3d43db978c1b3ce95613669182ee",
    "1c019512644cbd01fda43366db727887efb5ae7f"
  ],
  "changeHistoryShort": {
    "9e7196749ee025db7668c648743d1deb72d3ca28": "Ybodychange",
    "bd69fb2d44403e930d1fc0868ed1dd2a49dd9659": "Ybodychange",
    "26447229ba2c3d43db978c1b3ce95613669182ee": "Yfilerename",
    "1c019512644cbd01fda43366db727887efb5ae7f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9e7196749ee025db7668c648743d1deb72d3ca28": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-7174. Mapreduce example wordmedian should handle generic options. Contributed by Fei Hui.\n",
      "commitDate": "02/01/19 5:39 AM",
      "commitName": "9e7196749ee025db7668c648743d1deb72d3ca28",
      "commitAuthor": "Weiwei Yang",
      "commitDateOld": "22/05/17 1:40 AM",
      "commitNameOld": "b6f66b0da1cc77f4e61118404a008b4bd7e1a752",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 590.21,
      "commitsBetweenForRepo": 4904,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,34 @@\n   public int run(String[] args) throws Exception {\n-    if (args.length !\u003d 2) {\n+    Configuration conf \u003d new Configuration();\n+    String[] otherArgs \u003d\n+        new GenericOptionsParser(conf, args).getRemainingArgs();\n+    if (otherArgs.length !\u003d 2) {\n       System.err.println(\"Usage: wordmedian \u003cin\u003e \u003cout\u003e\");\n       return 0;\n     }\n \n-    setConf(new Configuration());\n-    Configuration conf \u003d getConf();\n+    setConf(conf);\n \n     Job job \u003d Job.getInstance(conf, \"word median\");\n     job.setJarByClass(WordMedian.class);\n     job.setMapperClass(WordMedianMapper.class);\n     job.setCombinerClass(WordMedianReducer.class);\n     job.setReducerClass(WordMedianReducer.class);\n     job.setOutputKeyClass(IntWritable.class);\n     job.setOutputValueClass(IntWritable.class);\n-    FileInputFormat.addInputPath(job, new Path(args[0]));\n-    FileOutputFormat.setOutputPath(job, new Path(args[1]));\n+    FileInputFormat.addInputPath(job, new Path(otherArgs[0]));\n+    FileOutputFormat.setOutputPath(job, new Path(otherArgs[1]));\n     boolean result \u003d job.waitForCompletion(true);\n \n     // Wait for JOB 1 -- get middle value to check for Median\n \n     long totalWords \u003d job.getCounters()\n         .getGroup(TaskCounter.class.getCanonicalName())\n         .findCounter(\"MAP_OUTPUT_RECORDS\", \"Map output records\").getValue();\n     int medianIndex1 \u003d (int) Math.ceil((totalWords / 2.0));\n     int medianIndex2 \u003d (int) Math.floor((totalWords / 2.0));\n \n     median \u003d readAndFindMedian(args[1], medianIndex1, medianIndex2, conf);\n \n     return (result ? 0 : 1);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] args) throws Exception {\n    Configuration conf \u003d new Configuration();\n    String[] otherArgs \u003d\n        new GenericOptionsParser(conf, args).getRemainingArgs();\n    if (otherArgs.length !\u003d 2) {\n      System.err.println(\"Usage: wordmedian \u003cin\u003e \u003cout\u003e\");\n      return 0;\n    }\n\n    setConf(conf);\n\n    Job job \u003d Job.getInstance(conf, \"word median\");\n    job.setJarByClass(WordMedian.class);\n    job.setMapperClass(WordMedianMapper.class);\n    job.setCombinerClass(WordMedianReducer.class);\n    job.setReducerClass(WordMedianReducer.class);\n    job.setOutputKeyClass(IntWritable.class);\n    job.setOutputValueClass(IntWritable.class);\n    FileInputFormat.addInputPath(job, new Path(otherArgs[0]));\n    FileOutputFormat.setOutputPath(job, new Path(otherArgs[1]));\n    boolean result \u003d job.waitForCompletion(true);\n\n    // Wait for JOB 1 -- get middle value to check for Median\n\n    long totalWords \u003d job.getCounters()\n        .getGroup(TaskCounter.class.getCanonicalName())\n        .findCounter(\"MAP_OUTPUT_RECORDS\", \"Map output records\").getValue();\n    int medianIndex1 \u003d (int) Math.ceil((totalWords / 2.0));\n    int medianIndex2 \u003d (int) Math.floor((totalWords / 2.0));\n\n    median \u003d readAndFindMedian(args[1], medianIndex1, medianIndex2, conf);\n\n    return (result ? 0 : 1);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-examples/src/main/java/org/apache/hadoop/examples/WordMedian.java",
      "extendedDetails": {}
    },
    "bd69fb2d44403e930d1fc0868ed1dd2a49dd9659": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5800. Use Job#getInstance instead of deprecated constructors. (aajisaka)\n",
      "commitDate": "03/02/15 2:30 PM",
      "commitName": "bd69fb2d44403e930d1fc0868ed1dd2a49dd9659",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "14/11/12 4:16 PM",
      "commitNameOld": "905b17876c44634545a68300ff2f2d73fb86d3b7",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 810.93,
      "commitsBetweenForRepo": 5513,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,32 @@\n   public int run(String[] args) throws Exception {\n     if (args.length !\u003d 2) {\n       System.err.println(\"Usage: wordmedian \u003cin\u003e \u003cout\u003e\");\n       return 0;\n     }\n \n     setConf(new Configuration());\n     Configuration conf \u003d getConf();\n \n-    @SuppressWarnings(\"deprecation\")\n-    Job job \u003d new Job(conf, \"word median\");\n+    Job job \u003d Job.getInstance(conf, \"word median\");\n     job.setJarByClass(WordMedian.class);\n     job.setMapperClass(WordMedianMapper.class);\n     job.setCombinerClass(WordMedianReducer.class);\n     job.setReducerClass(WordMedianReducer.class);\n     job.setOutputKeyClass(IntWritable.class);\n     job.setOutputValueClass(IntWritable.class);\n     FileInputFormat.addInputPath(job, new Path(args[0]));\n     FileOutputFormat.setOutputPath(job, new Path(args[1]));\n     boolean result \u003d job.waitForCompletion(true);\n \n     // Wait for JOB 1 -- get middle value to check for Median\n \n     long totalWords \u003d job.getCounters()\n         .getGroup(TaskCounter.class.getCanonicalName())\n         .findCounter(\"MAP_OUTPUT_RECORDS\", \"Map output records\").getValue();\n     int medianIndex1 \u003d (int) Math.ceil((totalWords / 2.0));\n     int medianIndex2 \u003d (int) Math.floor((totalWords / 2.0));\n \n     median \u003d readAndFindMedian(args[1], medianIndex1, medianIndex2, conf);\n \n     return (result ? 0 : 1);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] args) throws Exception {\n    if (args.length !\u003d 2) {\n      System.err.println(\"Usage: wordmedian \u003cin\u003e \u003cout\u003e\");\n      return 0;\n    }\n\n    setConf(new Configuration());\n    Configuration conf \u003d getConf();\n\n    Job job \u003d Job.getInstance(conf, \"word median\");\n    job.setJarByClass(WordMedian.class);\n    job.setMapperClass(WordMedianMapper.class);\n    job.setCombinerClass(WordMedianReducer.class);\n    job.setReducerClass(WordMedianReducer.class);\n    job.setOutputKeyClass(IntWritable.class);\n    job.setOutputValueClass(IntWritable.class);\n    FileInputFormat.addInputPath(job, new Path(args[0]));\n    FileOutputFormat.setOutputPath(job, new Path(args[1]));\n    boolean result \u003d job.waitForCompletion(true);\n\n    // Wait for JOB 1 -- get middle value to check for Median\n\n    long totalWords \u003d job.getCounters()\n        .getGroup(TaskCounter.class.getCanonicalName())\n        .findCounter(\"MAP_OUTPUT_RECORDS\", \"Map output records\").getValue();\n    int medianIndex1 \u003d (int) Math.ceil((totalWords / 2.0));\n    int medianIndex2 \u003d (int) Math.floor((totalWords / 2.0));\n\n    median \u003d readAndFindMedian(args[1], medianIndex1, medianIndex2, conf);\n\n    return (result ? 0 : 1);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-examples/src/main/java/org/apache/hadoop/examples/WordMedian.java",
      "extendedDetails": {}
    },
    "26447229ba2c3d43db978c1b3ce95613669182ee": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7590. Mavenize streaming and MR examples. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1203941 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/11/11 5:24 PM",
      "commitName": "26447229ba2c3d43db978c1b3ce95613669182ee",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "18/11/11 1:04 AM",
      "commitNameOld": "905a127850d5e0cba85c2e075f989fa0f5cf129a",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.68,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public int run(String[] args) throws Exception {\n    if (args.length !\u003d 2) {\n      System.err.println(\"Usage: wordmedian \u003cin\u003e \u003cout\u003e\");\n      return 0;\n    }\n\n    setConf(new Configuration());\n    Configuration conf \u003d getConf();\n\n    @SuppressWarnings(\"deprecation\")\n    Job job \u003d new Job(conf, \"word median\");\n    job.setJarByClass(WordMedian.class);\n    job.setMapperClass(WordMedianMapper.class);\n    job.setCombinerClass(WordMedianReducer.class);\n    job.setReducerClass(WordMedianReducer.class);\n    job.setOutputKeyClass(IntWritable.class);\n    job.setOutputValueClass(IntWritable.class);\n    FileInputFormat.addInputPath(job, new Path(args[0]));\n    FileOutputFormat.setOutputPath(job, new Path(args[1]));\n    boolean result \u003d job.waitForCompletion(true);\n\n    // Wait for JOB 1 -- get middle value to check for Median\n\n    long totalWords \u003d job.getCounters()\n        .getGroup(TaskCounter.class.getCanonicalName())\n        .findCounter(\"MAP_OUTPUT_RECORDS\", \"Map output records\").getValue();\n    int medianIndex1 \u003d (int) Math.ceil((totalWords / 2.0));\n    int medianIndex2 \u003d (int) Math.floor((totalWords / 2.0));\n\n    median \u003d readAndFindMedian(args[1], medianIndex1, medianIndex2, conf);\n\n    return (result ? 0 : 1);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-examples/src/main/java/org/apache/hadoop/examples/WordMedian.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/src/examples/org/apache/hadoop/examples/WordMedian.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-examples/src/main/java/org/apache/hadoop/examples/WordMedian.java"
      }
    },
    "1c019512644cbd01fda43366db727887efb5ae7f": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-2669. Add new examples for Mean, Median, and Standard Deviation. Contributed by Plamen Jeliazkov.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1169874 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/09/11 12:13 PM",
      "commitName": "1c019512644cbd01fda43366db727887efb5ae7f",
      "commitAuthor": "Konstantin Shvachko",
      "diff": "@@ -0,0 +1,33 @@\n+  public int run(String[] args) throws Exception {\n+    if (args.length !\u003d 2) {\n+      System.err.println(\"Usage: wordmedian \u003cin\u003e \u003cout\u003e\");\n+      return 0;\n+    }\n+\n+    setConf(new Configuration());\n+    Configuration conf \u003d getConf();\n+\n+    @SuppressWarnings(\"deprecation\")\n+    Job job \u003d new Job(conf, \"word median\");\n+    job.setJarByClass(WordMedian.class);\n+    job.setMapperClass(WordMedianMapper.class);\n+    job.setCombinerClass(WordMedianReducer.class);\n+    job.setReducerClass(WordMedianReducer.class);\n+    job.setOutputKeyClass(IntWritable.class);\n+    job.setOutputValueClass(IntWritable.class);\n+    FileInputFormat.addInputPath(job, new Path(args[0]));\n+    FileOutputFormat.setOutputPath(job, new Path(args[1]));\n+    boolean result \u003d job.waitForCompletion(true);\n+\n+    // Wait for JOB 1 -- get middle value to check for Median\n+\n+    long totalWords \u003d job.getCounters()\n+        .getGroup(TaskCounter.class.getCanonicalName())\n+        .findCounter(\"MAP_OUTPUT_RECORDS\", \"Map output records\").getValue();\n+    int medianIndex1 \u003d (int) Math.ceil((totalWords / 2.0));\n+    int medianIndex2 \u003d (int) Math.floor((totalWords / 2.0));\n+\n+    median \u003d readAndFindMedian(args[1], medianIndex1, medianIndex2, conf);\n+\n+    return (result ? 0 : 1);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] args) throws Exception {\n    if (args.length !\u003d 2) {\n      System.err.println(\"Usage: wordmedian \u003cin\u003e \u003cout\u003e\");\n      return 0;\n    }\n\n    setConf(new Configuration());\n    Configuration conf \u003d getConf();\n\n    @SuppressWarnings(\"deprecation\")\n    Job job \u003d new Job(conf, \"word median\");\n    job.setJarByClass(WordMedian.class);\n    job.setMapperClass(WordMedianMapper.class);\n    job.setCombinerClass(WordMedianReducer.class);\n    job.setReducerClass(WordMedianReducer.class);\n    job.setOutputKeyClass(IntWritable.class);\n    job.setOutputValueClass(IntWritable.class);\n    FileInputFormat.addInputPath(job, new Path(args[0]));\n    FileOutputFormat.setOutputPath(job, new Path(args[1]));\n    boolean result \u003d job.waitForCompletion(true);\n\n    // Wait for JOB 1 -- get middle value to check for Median\n\n    long totalWords \u003d job.getCounters()\n        .getGroup(TaskCounter.class.getCanonicalName())\n        .findCounter(\"MAP_OUTPUT_RECORDS\", \"Map output records\").getValue();\n    int medianIndex1 \u003d (int) Math.ceil((totalWords / 2.0));\n    int medianIndex2 \u003d (int) Math.floor((totalWords / 2.0));\n\n    median \u003d readAndFindMedian(args[1], medianIndex1, medianIndex2, conf);\n\n    return (result ? 0 : 1);\n  }",
      "path": "hadoop-mapreduce-project/src/examples/org/apache/hadoop/examples/WordMedian.java"
    }
  }
}