{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "WritableRpcEngine.java",
  "functionName": "getProxy",
  "functionId": "getProxy___protocol-Class__T____clientVersion-long__addr-InetSocketAddress__ticket-UserGroupInformation__conf-Configuration__factory-SocketFactory__rpcTimeout-int__connectionRetryPolicy-RetryPolicy__fallbackToSimpleAuth-AtomicBoolean__alignmentContext-AlignmentContext",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/WritableRpcEngine.java",
  "functionStartLine": 303,
  "functionEndLine": 320,
  "numCommitsSeen": 71,
  "timeTaken": 2545,
  "changeHistory": [
    "e880660a204b6fd0e5a0799393a4d36359765a54",
    "93d8a7f2a2d72a1719d02b1ed90678397900b6ed"
  ],
  "changeHistoryShort": {
    "e880660a204b6fd0e5a0799393a4d36359765a54": "Ymultichange(Yparameterchange,Ybodychange)",
    "93d8a7f2a2d72a1719d02b1ed90678397900b6ed": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e880660a204b6fd0e5a0799393a4d36359765a54": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-13399. [SBN read] Make Client field AlignmentContext non-static. Contributed by Plamen Jeliazkov.",
      "commitDate": "24/12/18 9:33 AM",
      "commitName": "e880660a204b6fd0e5a0799393a4d36359765a54",
      "commitAuthor": "Plamen Jeliazkov",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-13399. [SBN read] Make Client field AlignmentContext non-static. Contributed by Plamen Jeliazkov.",
          "commitDate": "24/12/18 9:33 AM",
          "commitName": "e880660a204b6fd0e5a0799393a4d36359765a54",
          "commitAuthor": "Plamen Jeliazkov",
          "commitDateOld": "24/12/18 9:33 AM",
          "commitNameOld": "c9d73437e881296282abe46a6b3196befc8cef72",
          "commitAuthorOld": "Plamen Jeliazkov",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 4,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,18 @@\n   public \u003cT\u003e ProtocolProxy\u003cT\u003e getProxy(Class\u003cT\u003e protocol, long clientVersion,\n                          InetSocketAddress addr, UserGroupInformation ticket,\n                          Configuration conf, SocketFactory factory,\n                          int rpcTimeout, RetryPolicy connectionRetryPolicy,\n-                         AtomicBoolean fallbackToSimpleAuth)\n+                         AtomicBoolean fallbackToSimpleAuth,\n+                         AlignmentContext alignmentContext)\n     throws IOException {    \n \n     if (connectionRetryPolicy !\u003d null) {\n       throw new UnsupportedOperationException(\n           \"Not supported: connectionRetryPolicy\u003d\" + connectionRetryPolicy);\n     }\n \n     T proxy \u003d (T) Proxy.newProxyInstance(protocol.getClassLoader(),\n         new Class[] { protocol }, new Invoker(protocol, addr, ticket, conf,\n-            factory, rpcTimeout, fallbackToSimpleAuth));\n+            factory, rpcTimeout, fallbackToSimpleAuth, alignmentContext));\n     return new ProtocolProxy\u003cT\u003e(protocol, proxy, true);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public \u003cT\u003e ProtocolProxy\u003cT\u003e getProxy(Class\u003cT\u003e protocol, long clientVersion,\n                         InetSocketAddress addr, UserGroupInformation ticket,\n                         Configuration conf, SocketFactory factory,\n                         int rpcTimeout, RetryPolicy connectionRetryPolicy,\n                         AtomicBoolean fallbackToSimpleAuth,\n                         AlignmentContext alignmentContext)\n    throws IOException {    \n\n    if (connectionRetryPolicy !\u003d null) {\n      throw new UnsupportedOperationException(\n          \"Not supported: connectionRetryPolicy\u003d\" + connectionRetryPolicy);\n    }\n\n    T proxy \u003d (T) Proxy.newProxyInstance(protocol.getClassLoader(),\n        new Class[] { protocol }, new Invoker(protocol, addr, ticket, conf,\n            factory, rpcTimeout, fallbackToSimpleAuth, alignmentContext));\n    return new ProtocolProxy\u003cT\u003e(protocol, proxy, true);\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/WritableRpcEngine.java",
          "extendedDetails": {
            "oldValue": "[protocol-Class\u003cT\u003e, clientVersion-long, addr-InetSocketAddress, ticket-UserGroupInformation, conf-Configuration, factory-SocketFactory, rpcTimeout-int, connectionRetryPolicy-RetryPolicy, fallbackToSimpleAuth-AtomicBoolean]",
            "newValue": "[protocol-Class\u003cT\u003e, clientVersion-long, addr-InetSocketAddress, ticket-UserGroupInformation, conf-Configuration, factory-SocketFactory, rpcTimeout-int, connectionRetryPolicy-RetryPolicy, fallbackToSimpleAuth-AtomicBoolean, alignmentContext-AlignmentContext]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-13399. [SBN read] Make Client field AlignmentContext non-static. Contributed by Plamen Jeliazkov.",
          "commitDate": "24/12/18 9:33 AM",
          "commitName": "e880660a204b6fd0e5a0799393a4d36359765a54",
          "commitAuthor": "Plamen Jeliazkov",
          "commitDateOld": "24/12/18 9:33 AM",
          "commitNameOld": "c9d73437e881296282abe46a6b3196befc8cef72",
          "commitAuthorOld": "Plamen Jeliazkov",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 4,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,18 @@\n   public \u003cT\u003e ProtocolProxy\u003cT\u003e getProxy(Class\u003cT\u003e protocol, long clientVersion,\n                          InetSocketAddress addr, UserGroupInformation ticket,\n                          Configuration conf, SocketFactory factory,\n                          int rpcTimeout, RetryPolicy connectionRetryPolicy,\n-                         AtomicBoolean fallbackToSimpleAuth)\n+                         AtomicBoolean fallbackToSimpleAuth,\n+                         AlignmentContext alignmentContext)\n     throws IOException {    \n \n     if (connectionRetryPolicy !\u003d null) {\n       throw new UnsupportedOperationException(\n           \"Not supported: connectionRetryPolicy\u003d\" + connectionRetryPolicy);\n     }\n \n     T proxy \u003d (T) Proxy.newProxyInstance(protocol.getClassLoader(),\n         new Class[] { protocol }, new Invoker(protocol, addr, ticket, conf,\n-            factory, rpcTimeout, fallbackToSimpleAuth));\n+            factory, rpcTimeout, fallbackToSimpleAuth, alignmentContext));\n     return new ProtocolProxy\u003cT\u003e(protocol, proxy, true);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public \u003cT\u003e ProtocolProxy\u003cT\u003e getProxy(Class\u003cT\u003e protocol, long clientVersion,\n                         InetSocketAddress addr, UserGroupInformation ticket,\n                         Configuration conf, SocketFactory factory,\n                         int rpcTimeout, RetryPolicy connectionRetryPolicy,\n                         AtomicBoolean fallbackToSimpleAuth,\n                         AlignmentContext alignmentContext)\n    throws IOException {    \n\n    if (connectionRetryPolicy !\u003d null) {\n      throw new UnsupportedOperationException(\n          \"Not supported: connectionRetryPolicy\u003d\" + connectionRetryPolicy);\n    }\n\n    T proxy \u003d (T) Proxy.newProxyInstance(protocol.getClassLoader(),\n        new Class[] { protocol }, new Invoker(protocol, addr, ticket, conf,\n            factory, rpcTimeout, fallbackToSimpleAuth, alignmentContext));\n    return new ProtocolProxy\u003cT\u003e(protocol, proxy, true);\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/WritableRpcEngine.java",
          "extendedDetails": {}
        }
      ]
    },
    "93d8a7f2a2d72a1719d02b1ed90678397900b6ed": {
      "type": "Yintroduced",
      "commitMessage": "Revert \"HADOOP-12579. Deprecate and remove WriteableRPCEngine. Contributed by Kai Zheng\"\n\nThis reverts commit a6c79f92d503c664f2d109355b719124f29a30e5.\n",
      "commitDate": "31/05/16 5:41 PM",
      "commitName": "93d8a7f2a2d72a1719d02b1ed90678397900b6ed",
      "commitAuthor": "Kai Zheng",
      "diff": "@@ -0,0 +1,17 @@\n+  public \u003cT\u003e ProtocolProxy\u003cT\u003e getProxy(Class\u003cT\u003e protocol, long clientVersion,\n+                         InetSocketAddress addr, UserGroupInformation ticket,\n+                         Configuration conf, SocketFactory factory,\n+                         int rpcTimeout, RetryPolicy connectionRetryPolicy,\n+                         AtomicBoolean fallbackToSimpleAuth)\n+    throws IOException {    \n+\n+    if (connectionRetryPolicy !\u003d null) {\n+      throw new UnsupportedOperationException(\n+          \"Not supported: connectionRetryPolicy\u003d\" + connectionRetryPolicy);\n+    }\n+\n+    T proxy \u003d (T) Proxy.newProxyInstance(protocol.getClassLoader(),\n+        new Class[] { protocol }, new Invoker(protocol, addr, ticket, conf,\n+            factory, rpcTimeout, fallbackToSimpleAuth));\n+    return new ProtocolProxy\u003cT\u003e(protocol, proxy, true);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public \u003cT\u003e ProtocolProxy\u003cT\u003e getProxy(Class\u003cT\u003e protocol, long clientVersion,\n                         InetSocketAddress addr, UserGroupInformation ticket,\n                         Configuration conf, SocketFactory factory,\n                         int rpcTimeout, RetryPolicy connectionRetryPolicy,\n                         AtomicBoolean fallbackToSimpleAuth)\n    throws IOException {    \n\n    if (connectionRetryPolicy !\u003d null) {\n      throw new UnsupportedOperationException(\n          \"Not supported: connectionRetryPolicy\u003d\" + connectionRetryPolicy);\n    }\n\n    T proxy \u003d (T) Proxy.newProxyInstance(protocol.getClassLoader(),\n        new Class[] { protocol }, new Invoker(protocol, addr, ticket, conf,\n            factory, rpcTimeout, fallbackToSimpleAuth));\n    return new ProtocolProxy\u003cT\u003e(protocol, proxy, true);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/WritableRpcEngine.java"
    }
  }
}