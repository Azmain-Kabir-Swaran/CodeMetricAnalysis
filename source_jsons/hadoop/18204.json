{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RouterAdmin.java",
  "functionName": "addMount",
  "functionId": "addMount___mount-String__nss-String[]__dest-String__readonly-boolean__faultTolerant-boolean__order-DestinationOrder__aclInfo-ACLEntity",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/tools/federation/RouterAdmin.java",
  "functionStartLine": 537,
  "functionEndLine": 630,
  "numCommitsSeen": 54,
  "timeTaken": 4932,
  "changeHistory": [
    "c422e36397920311bd2823deb0206a97cf288bf0",
    "dd8c2b92df2d42fe8ee07032988fe1fb68161004",
    "6c42d4050461ab71c88f123569649793dc53aebd",
    "484440602c5b69fbd8106010603c61ae051056dd",
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d",
    "ee028bfdf1c88a27cd925bed93ebb599a164dd2e",
    "b3e6bd22e3c02b3e4f50396538f56a1bcb007638"
  ],
  "changeHistoryShort": {
    "c422e36397920311bd2823deb0206a97cf288bf0": "Ybodychange",
    "dd8c2b92df2d42fe8ee07032988fe1fb68161004": "Ybodychange",
    "6c42d4050461ab71c88f123569649793dc53aebd": "Ymultichange(Yparameterchange,Ybodychange)",
    "484440602c5b69fbd8106010603c61ae051056dd": "Ybodychange",
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d": "Yfilerename",
    "ee028bfdf1c88a27cd925bed93ebb599a164dd2e": "Ymultichange(Yparameterchange,Ybodychange)",
    "b3e6bd22e3c02b3e4f50396538f56a1bcb007638": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c422e36397920311bd2823deb0206a97cf288bf0": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13842. RBF: Exceptions are conflicting when creating the same mount entry twice. Contributed by Ranith Sardar.\n",
      "commitDate": "21/11/19 10:12 PM",
      "commitName": "c422e36397920311bd2823deb0206a97cf288bf0",
      "commitAuthor": "Ayush Saxena",
      "commitDateOld": "21/11/19 11:38 AM",
      "commitNameOld": "b89fd4dfe95a1e0a18a346ec1c1321c366ff97a0",
      "commitAuthorOld": "Ayush Saxena",
      "daysBetweenCommits": 0.44,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,93 +1,94 @@\n   public boolean addMount(String mount, String[] nss, String dest,\n       boolean readonly, boolean faultTolerant, DestinationOrder order,\n       ACLEntity aclInfo)\n       throws IOException {\n     mount \u003d normalizeFileSystemPath(mount);\n     // Get the existing entry\n     MountTableManager mountTable \u003d client.getMountTableManager();\n     MountTable existingEntry \u003d getMountEntry(mount, mountTable);\n \n     if (existingEntry \u003d\u003d null) {\n       // Create and add the entry if it doesn\u0027t exist\n       Map\u003cString, String\u003e destMap \u003d new LinkedHashMap\u003c\u003e();\n       for (String ns : nss) {\n         destMap.put(ns, dest);\n       }\n       MountTable newEntry \u003d MountTable.newInstance(mount, destMap);\n       if (readonly) {\n         newEntry.setReadOnly(true);\n       }\n       if (faultTolerant) {\n         newEntry.setFaultTolerant(true);\n       }\n       if (order !\u003d null) {\n         newEntry.setDestOrder(order);\n       }\n \n       // Set ACL info for mount table entry\n       if (aclInfo.getOwner() !\u003d null) {\n         newEntry.setOwnerName(aclInfo.getOwner());\n       }\n \n       if (aclInfo.getGroup() !\u003d null) {\n         newEntry.setGroupName(aclInfo.getGroup());\n       }\n \n       if (aclInfo.getMode() !\u003d null) {\n         newEntry.setMode(aclInfo.getMode());\n       }\n \n       newEntry.validate();\n \n       AddMountTableEntryRequest request \u003d\n           AddMountTableEntryRequest.newInstance(newEntry);\n       AddMountTableEntryResponse addResponse \u003d\n           mountTable.addMountTableEntry(request);\n       boolean added \u003d addResponse.getStatus();\n       if (!added) {\n         System.err.println(\"Cannot add mount point \" + mount);\n       }\n       return added;\n     } else {\n       // Update the existing entry if it exists\n       for (String nsId : nss) {\n         if (!existingEntry.addDestination(nsId, dest)) {\n           System.err.println(\"Cannot add destination at \" + nsId + \" \" + dest);\n+          return false;\n         }\n       }\n       if (readonly) {\n         existingEntry.setReadOnly(true);\n       }\n       if (faultTolerant) {\n         existingEntry.setFaultTolerant(true);\n       }\n       if (order !\u003d null) {\n         existingEntry.setDestOrder(order);\n       }\n \n       // Update ACL info of mount table entry\n       if (aclInfo.getOwner() !\u003d null) {\n         existingEntry.setOwnerName(aclInfo.getOwner());\n       }\n \n       if (aclInfo.getGroup() !\u003d null) {\n         existingEntry.setGroupName(aclInfo.getGroup());\n       }\n \n       if (aclInfo.getMode() !\u003d null) {\n         existingEntry.setMode(aclInfo.getMode());\n       }\n \n       existingEntry.validate();\n \n       UpdateMountTableEntryRequest updateRequest \u003d\n           UpdateMountTableEntryRequest.newInstance(existingEntry);\n       UpdateMountTableEntryResponse updateResponse \u003d\n           mountTable.updateMountTableEntry(updateRequest);\n       boolean updated \u003d updateResponse.getStatus();\n       if (!updated) {\n         System.err.println(\"Cannot update mount point \" + mount);\n       }\n       return updated;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean addMount(String mount, String[] nss, String dest,\n      boolean readonly, boolean faultTolerant, DestinationOrder order,\n      ACLEntity aclInfo)\n      throws IOException {\n    mount \u003d normalizeFileSystemPath(mount);\n    // Get the existing entry\n    MountTableManager mountTable \u003d client.getMountTableManager();\n    MountTable existingEntry \u003d getMountEntry(mount, mountTable);\n\n    if (existingEntry \u003d\u003d null) {\n      // Create and add the entry if it doesn\u0027t exist\n      Map\u003cString, String\u003e destMap \u003d new LinkedHashMap\u003c\u003e();\n      for (String ns : nss) {\n        destMap.put(ns, dest);\n      }\n      MountTable newEntry \u003d MountTable.newInstance(mount, destMap);\n      if (readonly) {\n        newEntry.setReadOnly(true);\n      }\n      if (faultTolerant) {\n        newEntry.setFaultTolerant(true);\n      }\n      if (order !\u003d null) {\n        newEntry.setDestOrder(order);\n      }\n\n      // Set ACL info for mount table entry\n      if (aclInfo.getOwner() !\u003d null) {\n        newEntry.setOwnerName(aclInfo.getOwner());\n      }\n\n      if (aclInfo.getGroup() !\u003d null) {\n        newEntry.setGroupName(aclInfo.getGroup());\n      }\n\n      if (aclInfo.getMode() !\u003d null) {\n        newEntry.setMode(aclInfo.getMode());\n      }\n\n      newEntry.validate();\n\n      AddMountTableEntryRequest request \u003d\n          AddMountTableEntryRequest.newInstance(newEntry);\n      AddMountTableEntryResponse addResponse \u003d\n          mountTable.addMountTableEntry(request);\n      boolean added \u003d addResponse.getStatus();\n      if (!added) {\n        System.err.println(\"Cannot add mount point \" + mount);\n      }\n      return added;\n    } else {\n      // Update the existing entry if it exists\n      for (String nsId : nss) {\n        if (!existingEntry.addDestination(nsId, dest)) {\n          System.err.println(\"Cannot add destination at \" + nsId + \" \" + dest);\n          return false;\n        }\n      }\n      if (readonly) {\n        existingEntry.setReadOnly(true);\n      }\n      if (faultTolerant) {\n        existingEntry.setFaultTolerant(true);\n      }\n      if (order !\u003d null) {\n        existingEntry.setDestOrder(order);\n      }\n\n      // Update ACL info of mount table entry\n      if (aclInfo.getOwner() !\u003d null) {\n        existingEntry.setOwnerName(aclInfo.getOwner());\n      }\n\n      if (aclInfo.getGroup() !\u003d null) {\n        existingEntry.setGroupName(aclInfo.getGroup());\n      }\n\n      if (aclInfo.getMode() !\u003d null) {\n        existingEntry.setMode(aclInfo.getMode());\n      }\n\n      existingEntry.validate();\n\n      UpdateMountTableEntryRequest updateRequest \u003d\n          UpdateMountTableEntryRequest.newInstance(existingEntry);\n      UpdateMountTableEntryResponse updateResponse \u003d\n          mountTable.updateMountTableEntry(updateRequest);\n      boolean updated \u003d updateResponse.getStatus();\n      if (!updated) {\n        System.err.println(\"Cannot update mount point \" + mount);\n      }\n      return updated;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/tools/federation/RouterAdmin.java",
      "extendedDetails": {}
    },
    "dd8c2b92df2d42fe8ee07032988fe1fb68161004": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13853. RBF: RouterAdmin update cmd is overwriting the entry not updating the existing. Contributed by Ayush Saxena.\n",
      "commitDate": "24/06/19 9:33 AM",
      "commitName": "dd8c2b92df2d42fe8ee07032988fe1fb68161004",
      "commitAuthor": "Ayush Saxena",
      "commitDateOld": "24/06/19 9:33 AM",
      "commitNameOld": "6c42d4050461ab71c88f123569649793dc53aebd",
      "commitAuthorOld": "Ayush Saxena",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,103 +1,93 @@\n   public boolean addMount(String mount, String[] nss, String dest,\n       boolean readonly, boolean faultTolerant, DestinationOrder order,\n       ACLEntity aclInfo)\n       throws IOException {\n     mount \u003d normalizeFileSystemPath(mount);\n     // Get the existing entry\n     MountTableManager mountTable \u003d client.getMountTableManager();\n-    GetMountTableEntriesRequest getRequest \u003d\n-        GetMountTableEntriesRequest.newInstance(mount);\n-    GetMountTableEntriesResponse getResponse \u003d\n-        mountTable.getMountTableEntries(getRequest);\n-    List\u003cMountTable\u003e results \u003d getResponse.getEntries();\n-    MountTable existingEntry \u003d null;\n-    for (MountTable result : results) {\n-      if (mount.equals(result.getSourcePath())) {\n-        existingEntry \u003d result;\n-      }\n-    }\n+    MountTable existingEntry \u003d getMountEntry(mount, mountTable);\n \n     if (existingEntry \u003d\u003d null) {\n       // Create and add the entry if it doesn\u0027t exist\n       Map\u003cString, String\u003e destMap \u003d new LinkedHashMap\u003c\u003e();\n       for (String ns : nss) {\n         destMap.put(ns, dest);\n       }\n       MountTable newEntry \u003d MountTable.newInstance(mount, destMap);\n       if (readonly) {\n         newEntry.setReadOnly(true);\n       }\n       if (faultTolerant) {\n         newEntry.setFaultTolerant(true);\n       }\n       if (order !\u003d null) {\n         newEntry.setDestOrder(order);\n       }\n \n       // Set ACL info for mount table entry\n       if (aclInfo.getOwner() !\u003d null) {\n         newEntry.setOwnerName(aclInfo.getOwner());\n       }\n \n       if (aclInfo.getGroup() !\u003d null) {\n         newEntry.setGroupName(aclInfo.getGroup());\n       }\n \n       if (aclInfo.getMode() !\u003d null) {\n         newEntry.setMode(aclInfo.getMode());\n       }\n \n       newEntry.validate();\n \n       AddMountTableEntryRequest request \u003d\n           AddMountTableEntryRequest.newInstance(newEntry);\n       AddMountTableEntryResponse addResponse \u003d\n           mountTable.addMountTableEntry(request);\n       boolean added \u003d addResponse.getStatus();\n       if (!added) {\n         System.err.println(\"Cannot add mount point \" + mount);\n       }\n       return added;\n     } else {\n       // Update the existing entry if it exists\n       for (String nsId : nss) {\n         if (!existingEntry.addDestination(nsId, dest)) {\n           System.err.println(\"Cannot add destination at \" + nsId + \" \" + dest);\n         }\n       }\n       if (readonly) {\n         existingEntry.setReadOnly(true);\n       }\n       if (faultTolerant) {\n         existingEntry.setFaultTolerant(true);\n       }\n       if (order !\u003d null) {\n         existingEntry.setDestOrder(order);\n       }\n \n       // Update ACL info of mount table entry\n       if (aclInfo.getOwner() !\u003d null) {\n         existingEntry.setOwnerName(aclInfo.getOwner());\n       }\n \n       if (aclInfo.getGroup() !\u003d null) {\n         existingEntry.setGroupName(aclInfo.getGroup());\n       }\n \n       if (aclInfo.getMode() !\u003d null) {\n         existingEntry.setMode(aclInfo.getMode());\n       }\n \n       existingEntry.validate();\n \n       UpdateMountTableEntryRequest updateRequest \u003d\n           UpdateMountTableEntryRequest.newInstance(existingEntry);\n       UpdateMountTableEntryResponse updateResponse \u003d\n           mountTable.updateMountTableEntry(updateRequest);\n       boolean updated \u003d updateResponse.getStatus();\n       if (!updated) {\n         System.err.println(\"Cannot update mount point \" + mount);\n       }\n       return updated;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean addMount(String mount, String[] nss, String dest,\n      boolean readonly, boolean faultTolerant, DestinationOrder order,\n      ACLEntity aclInfo)\n      throws IOException {\n    mount \u003d normalizeFileSystemPath(mount);\n    // Get the existing entry\n    MountTableManager mountTable \u003d client.getMountTableManager();\n    MountTable existingEntry \u003d getMountEntry(mount, mountTable);\n\n    if (existingEntry \u003d\u003d null) {\n      // Create and add the entry if it doesn\u0027t exist\n      Map\u003cString, String\u003e destMap \u003d new LinkedHashMap\u003c\u003e();\n      for (String ns : nss) {\n        destMap.put(ns, dest);\n      }\n      MountTable newEntry \u003d MountTable.newInstance(mount, destMap);\n      if (readonly) {\n        newEntry.setReadOnly(true);\n      }\n      if (faultTolerant) {\n        newEntry.setFaultTolerant(true);\n      }\n      if (order !\u003d null) {\n        newEntry.setDestOrder(order);\n      }\n\n      // Set ACL info for mount table entry\n      if (aclInfo.getOwner() !\u003d null) {\n        newEntry.setOwnerName(aclInfo.getOwner());\n      }\n\n      if (aclInfo.getGroup() !\u003d null) {\n        newEntry.setGroupName(aclInfo.getGroup());\n      }\n\n      if (aclInfo.getMode() !\u003d null) {\n        newEntry.setMode(aclInfo.getMode());\n      }\n\n      newEntry.validate();\n\n      AddMountTableEntryRequest request \u003d\n          AddMountTableEntryRequest.newInstance(newEntry);\n      AddMountTableEntryResponse addResponse \u003d\n          mountTable.addMountTableEntry(request);\n      boolean added \u003d addResponse.getStatus();\n      if (!added) {\n        System.err.println(\"Cannot add mount point \" + mount);\n      }\n      return added;\n    } else {\n      // Update the existing entry if it exists\n      for (String nsId : nss) {\n        if (!existingEntry.addDestination(nsId, dest)) {\n          System.err.println(\"Cannot add destination at \" + nsId + \" \" + dest);\n        }\n      }\n      if (readonly) {\n        existingEntry.setReadOnly(true);\n      }\n      if (faultTolerant) {\n        existingEntry.setFaultTolerant(true);\n      }\n      if (order !\u003d null) {\n        existingEntry.setDestOrder(order);\n      }\n\n      // Update ACL info of mount table entry\n      if (aclInfo.getOwner() !\u003d null) {\n        existingEntry.setOwnerName(aclInfo.getOwner());\n      }\n\n      if (aclInfo.getGroup() !\u003d null) {\n        existingEntry.setGroupName(aclInfo.getGroup());\n      }\n\n      if (aclInfo.getMode() !\u003d null) {\n        existingEntry.setMode(aclInfo.getMode());\n      }\n\n      existingEntry.validate();\n\n      UpdateMountTableEntryRequest updateRequest \u003d\n          UpdateMountTableEntryRequest.newInstance(existingEntry);\n      UpdateMountTableEntryResponse updateResponse \u003d\n          mountTable.updateMountTableEntry(updateRequest);\n      boolean updated \u003d updateResponse.getStatus();\n      if (!updated) {\n        System.err.println(\"Cannot update mount point \" + mount);\n      }\n      return updated;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/tools/federation/RouterAdmin.java",
      "extendedDetails": {}
    },
    "6c42d4050461ab71c88f123569649793dc53aebd": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-14316. RBF: Support unavailable subclusters for mount points with multiple destinations. Contributed by Inigo Goiri.\n",
      "commitDate": "24/06/19 9:33 AM",
      "commitName": "6c42d4050461ab71c88f123569649793dc53aebd",
      "commitAuthor": "Ayush Saxena",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-14316. RBF: Support unavailable subclusters for mount points with multiple destinations. Contributed by Inigo Goiri.\n",
          "commitDate": "24/06/19 9:33 AM",
          "commitName": "6c42d4050461ab71c88f123569649793dc53aebd",
          "commitAuthor": "Ayush Saxena",
          "commitDateOld": "24/06/19 9:33 AM",
          "commitNameOld": "8b8ff5ccbc677d98a91092b2fa64999a99d1595d",
          "commitAuthorOld": "Giovanni Matteo Fumarola",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 12,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,92 +1,103 @@\n   public boolean addMount(String mount, String[] nss, String dest,\n-      boolean readonly, DestinationOrder order, ACLEntity aclInfo)\n+      boolean readonly, boolean faultTolerant, DestinationOrder order,\n+      ACLEntity aclInfo)\n       throws IOException {\n     mount \u003d normalizeFileSystemPath(mount);\n     // Get the existing entry\n     MountTableManager mountTable \u003d client.getMountTableManager();\n     GetMountTableEntriesRequest getRequest \u003d\n         GetMountTableEntriesRequest.newInstance(mount);\n     GetMountTableEntriesResponse getResponse \u003d\n         mountTable.getMountTableEntries(getRequest);\n     List\u003cMountTable\u003e results \u003d getResponse.getEntries();\n     MountTable existingEntry \u003d null;\n     for (MountTable result : results) {\n       if (mount.equals(result.getSourcePath())) {\n         existingEntry \u003d result;\n       }\n     }\n \n     if (existingEntry \u003d\u003d null) {\n       // Create and add the entry if it doesn\u0027t exist\n       Map\u003cString, String\u003e destMap \u003d new LinkedHashMap\u003c\u003e();\n       for (String ns : nss) {\n         destMap.put(ns, dest);\n       }\n       MountTable newEntry \u003d MountTable.newInstance(mount, destMap);\n       if (readonly) {\n         newEntry.setReadOnly(true);\n       }\n+      if (faultTolerant) {\n+        newEntry.setFaultTolerant(true);\n+      }\n       if (order !\u003d null) {\n         newEntry.setDestOrder(order);\n       }\n \n       // Set ACL info for mount table entry\n       if (aclInfo.getOwner() !\u003d null) {\n         newEntry.setOwnerName(aclInfo.getOwner());\n       }\n \n       if (aclInfo.getGroup() !\u003d null) {\n         newEntry.setGroupName(aclInfo.getGroup());\n       }\n \n       if (aclInfo.getMode() !\u003d null) {\n         newEntry.setMode(aclInfo.getMode());\n       }\n \n+      newEntry.validate();\n+\n       AddMountTableEntryRequest request \u003d\n           AddMountTableEntryRequest.newInstance(newEntry);\n       AddMountTableEntryResponse addResponse \u003d\n           mountTable.addMountTableEntry(request);\n       boolean added \u003d addResponse.getStatus();\n       if (!added) {\n         System.err.println(\"Cannot add mount point \" + mount);\n       }\n       return added;\n     } else {\n       // Update the existing entry if it exists\n       for (String nsId : nss) {\n         if (!existingEntry.addDestination(nsId, dest)) {\n           System.err.println(\"Cannot add destination at \" + nsId + \" \" + dest);\n         }\n       }\n       if (readonly) {\n         existingEntry.setReadOnly(true);\n       }\n+      if (faultTolerant) {\n+        existingEntry.setFaultTolerant(true);\n+      }\n       if (order !\u003d null) {\n         existingEntry.setDestOrder(order);\n       }\n \n       // Update ACL info of mount table entry\n       if (aclInfo.getOwner() !\u003d null) {\n         existingEntry.setOwnerName(aclInfo.getOwner());\n       }\n \n       if (aclInfo.getGroup() !\u003d null) {\n         existingEntry.setGroupName(aclInfo.getGroup());\n       }\n \n       if (aclInfo.getMode() !\u003d null) {\n         existingEntry.setMode(aclInfo.getMode());\n       }\n \n+      existingEntry.validate();\n+\n       UpdateMountTableEntryRequest updateRequest \u003d\n           UpdateMountTableEntryRequest.newInstance(existingEntry);\n       UpdateMountTableEntryResponse updateResponse \u003d\n           mountTable.updateMountTableEntry(updateRequest);\n       boolean updated \u003d updateResponse.getStatus();\n       if (!updated) {\n         System.err.println(\"Cannot update mount point \" + mount);\n       }\n       return updated;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean addMount(String mount, String[] nss, String dest,\n      boolean readonly, boolean faultTolerant, DestinationOrder order,\n      ACLEntity aclInfo)\n      throws IOException {\n    mount \u003d normalizeFileSystemPath(mount);\n    // Get the existing entry\n    MountTableManager mountTable \u003d client.getMountTableManager();\n    GetMountTableEntriesRequest getRequest \u003d\n        GetMountTableEntriesRequest.newInstance(mount);\n    GetMountTableEntriesResponse getResponse \u003d\n        mountTable.getMountTableEntries(getRequest);\n    List\u003cMountTable\u003e results \u003d getResponse.getEntries();\n    MountTable existingEntry \u003d null;\n    for (MountTable result : results) {\n      if (mount.equals(result.getSourcePath())) {\n        existingEntry \u003d result;\n      }\n    }\n\n    if (existingEntry \u003d\u003d null) {\n      // Create and add the entry if it doesn\u0027t exist\n      Map\u003cString, String\u003e destMap \u003d new LinkedHashMap\u003c\u003e();\n      for (String ns : nss) {\n        destMap.put(ns, dest);\n      }\n      MountTable newEntry \u003d MountTable.newInstance(mount, destMap);\n      if (readonly) {\n        newEntry.setReadOnly(true);\n      }\n      if (faultTolerant) {\n        newEntry.setFaultTolerant(true);\n      }\n      if (order !\u003d null) {\n        newEntry.setDestOrder(order);\n      }\n\n      // Set ACL info for mount table entry\n      if (aclInfo.getOwner() !\u003d null) {\n        newEntry.setOwnerName(aclInfo.getOwner());\n      }\n\n      if (aclInfo.getGroup() !\u003d null) {\n        newEntry.setGroupName(aclInfo.getGroup());\n      }\n\n      if (aclInfo.getMode() !\u003d null) {\n        newEntry.setMode(aclInfo.getMode());\n      }\n\n      newEntry.validate();\n\n      AddMountTableEntryRequest request \u003d\n          AddMountTableEntryRequest.newInstance(newEntry);\n      AddMountTableEntryResponse addResponse \u003d\n          mountTable.addMountTableEntry(request);\n      boolean added \u003d addResponse.getStatus();\n      if (!added) {\n        System.err.println(\"Cannot add mount point \" + mount);\n      }\n      return added;\n    } else {\n      // Update the existing entry if it exists\n      for (String nsId : nss) {\n        if (!existingEntry.addDestination(nsId, dest)) {\n          System.err.println(\"Cannot add destination at \" + nsId + \" \" + dest);\n        }\n      }\n      if (readonly) {\n        existingEntry.setReadOnly(true);\n      }\n      if (faultTolerant) {\n        existingEntry.setFaultTolerant(true);\n      }\n      if (order !\u003d null) {\n        existingEntry.setDestOrder(order);\n      }\n\n      // Update ACL info of mount table entry\n      if (aclInfo.getOwner() !\u003d null) {\n        existingEntry.setOwnerName(aclInfo.getOwner());\n      }\n\n      if (aclInfo.getGroup() !\u003d null) {\n        existingEntry.setGroupName(aclInfo.getGroup());\n      }\n\n      if (aclInfo.getMode() !\u003d null) {\n        existingEntry.setMode(aclInfo.getMode());\n      }\n\n      existingEntry.validate();\n\n      UpdateMountTableEntryRequest updateRequest \u003d\n          UpdateMountTableEntryRequest.newInstance(existingEntry);\n      UpdateMountTableEntryResponse updateResponse \u003d\n          mountTable.updateMountTableEntry(updateRequest);\n      boolean updated \u003d updateResponse.getStatus();\n      if (!updated) {\n        System.err.println(\"Cannot update mount point \" + mount);\n      }\n      return updated;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/tools/federation/RouterAdmin.java",
          "extendedDetails": {
            "oldValue": "[mount-String, nss-String[], dest-String, readonly-boolean, order-DestinationOrder, aclInfo-ACLEntity]",
            "newValue": "[mount-String, nss-String[], dest-String, readonly-boolean, faultTolerant-boolean, order-DestinationOrder, aclInfo-ACLEntity]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-14316. RBF: Support unavailable subclusters for mount points with multiple destinations. Contributed by Inigo Goiri.\n",
          "commitDate": "24/06/19 9:33 AM",
          "commitName": "6c42d4050461ab71c88f123569649793dc53aebd",
          "commitAuthor": "Ayush Saxena",
          "commitDateOld": "24/06/19 9:33 AM",
          "commitNameOld": "8b8ff5ccbc677d98a91092b2fa64999a99d1595d",
          "commitAuthorOld": "Giovanni Matteo Fumarola",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 12,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,92 +1,103 @@\n   public boolean addMount(String mount, String[] nss, String dest,\n-      boolean readonly, DestinationOrder order, ACLEntity aclInfo)\n+      boolean readonly, boolean faultTolerant, DestinationOrder order,\n+      ACLEntity aclInfo)\n       throws IOException {\n     mount \u003d normalizeFileSystemPath(mount);\n     // Get the existing entry\n     MountTableManager mountTable \u003d client.getMountTableManager();\n     GetMountTableEntriesRequest getRequest \u003d\n         GetMountTableEntriesRequest.newInstance(mount);\n     GetMountTableEntriesResponse getResponse \u003d\n         mountTable.getMountTableEntries(getRequest);\n     List\u003cMountTable\u003e results \u003d getResponse.getEntries();\n     MountTable existingEntry \u003d null;\n     for (MountTable result : results) {\n       if (mount.equals(result.getSourcePath())) {\n         existingEntry \u003d result;\n       }\n     }\n \n     if (existingEntry \u003d\u003d null) {\n       // Create and add the entry if it doesn\u0027t exist\n       Map\u003cString, String\u003e destMap \u003d new LinkedHashMap\u003c\u003e();\n       for (String ns : nss) {\n         destMap.put(ns, dest);\n       }\n       MountTable newEntry \u003d MountTable.newInstance(mount, destMap);\n       if (readonly) {\n         newEntry.setReadOnly(true);\n       }\n+      if (faultTolerant) {\n+        newEntry.setFaultTolerant(true);\n+      }\n       if (order !\u003d null) {\n         newEntry.setDestOrder(order);\n       }\n \n       // Set ACL info for mount table entry\n       if (aclInfo.getOwner() !\u003d null) {\n         newEntry.setOwnerName(aclInfo.getOwner());\n       }\n \n       if (aclInfo.getGroup() !\u003d null) {\n         newEntry.setGroupName(aclInfo.getGroup());\n       }\n \n       if (aclInfo.getMode() !\u003d null) {\n         newEntry.setMode(aclInfo.getMode());\n       }\n \n+      newEntry.validate();\n+\n       AddMountTableEntryRequest request \u003d\n           AddMountTableEntryRequest.newInstance(newEntry);\n       AddMountTableEntryResponse addResponse \u003d\n           mountTable.addMountTableEntry(request);\n       boolean added \u003d addResponse.getStatus();\n       if (!added) {\n         System.err.println(\"Cannot add mount point \" + mount);\n       }\n       return added;\n     } else {\n       // Update the existing entry if it exists\n       for (String nsId : nss) {\n         if (!existingEntry.addDestination(nsId, dest)) {\n           System.err.println(\"Cannot add destination at \" + nsId + \" \" + dest);\n         }\n       }\n       if (readonly) {\n         existingEntry.setReadOnly(true);\n       }\n+      if (faultTolerant) {\n+        existingEntry.setFaultTolerant(true);\n+      }\n       if (order !\u003d null) {\n         existingEntry.setDestOrder(order);\n       }\n \n       // Update ACL info of mount table entry\n       if (aclInfo.getOwner() !\u003d null) {\n         existingEntry.setOwnerName(aclInfo.getOwner());\n       }\n \n       if (aclInfo.getGroup() !\u003d null) {\n         existingEntry.setGroupName(aclInfo.getGroup());\n       }\n \n       if (aclInfo.getMode() !\u003d null) {\n         existingEntry.setMode(aclInfo.getMode());\n       }\n \n+      existingEntry.validate();\n+\n       UpdateMountTableEntryRequest updateRequest \u003d\n           UpdateMountTableEntryRequest.newInstance(existingEntry);\n       UpdateMountTableEntryResponse updateResponse \u003d\n           mountTable.updateMountTableEntry(updateRequest);\n       boolean updated \u003d updateResponse.getStatus();\n       if (!updated) {\n         System.err.println(\"Cannot update mount point \" + mount);\n       }\n       return updated;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean addMount(String mount, String[] nss, String dest,\n      boolean readonly, boolean faultTolerant, DestinationOrder order,\n      ACLEntity aclInfo)\n      throws IOException {\n    mount \u003d normalizeFileSystemPath(mount);\n    // Get the existing entry\n    MountTableManager mountTable \u003d client.getMountTableManager();\n    GetMountTableEntriesRequest getRequest \u003d\n        GetMountTableEntriesRequest.newInstance(mount);\n    GetMountTableEntriesResponse getResponse \u003d\n        mountTable.getMountTableEntries(getRequest);\n    List\u003cMountTable\u003e results \u003d getResponse.getEntries();\n    MountTable existingEntry \u003d null;\n    for (MountTable result : results) {\n      if (mount.equals(result.getSourcePath())) {\n        existingEntry \u003d result;\n      }\n    }\n\n    if (existingEntry \u003d\u003d null) {\n      // Create and add the entry if it doesn\u0027t exist\n      Map\u003cString, String\u003e destMap \u003d new LinkedHashMap\u003c\u003e();\n      for (String ns : nss) {\n        destMap.put(ns, dest);\n      }\n      MountTable newEntry \u003d MountTable.newInstance(mount, destMap);\n      if (readonly) {\n        newEntry.setReadOnly(true);\n      }\n      if (faultTolerant) {\n        newEntry.setFaultTolerant(true);\n      }\n      if (order !\u003d null) {\n        newEntry.setDestOrder(order);\n      }\n\n      // Set ACL info for mount table entry\n      if (aclInfo.getOwner() !\u003d null) {\n        newEntry.setOwnerName(aclInfo.getOwner());\n      }\n\n      if (aclInfo.getGroup() !\u003d null) {\n        newEntry.setGroupName(aclInfo.getGroup());\n      }\n\n      if (aclInfo.getMode() !\u003d null) {\n        newEntry.setMode(aclInfo.getMode());\n      }\n\n      newEntry.validate();\n\n      AddMountTableEntryRequest request \u003d\n          AddMountTableEntryRequest.newInstance(newEntry);\n      AddMountTableEntryResponse addResponse \u003d\n          mountTable.addMountTableEntry(request);\n      boolean added \u003d addResponse.getStatus();\n      if (!added) {\n        System.err.println(\"Cannot add mount point \" + mount);\n      }\n      return added;\n    } else {\n      // Update the existing entry if it exists\n      for (String nsId : nss) {\n        if (!existingEntry.addDestination(nsId, dest)) {\n          System.err.println(\"Cannot add destination at \" + nsId + \" \" + dest);\n        }\n      }\n      if (readonly) {\n        existingEntry.setReadOnly(true);\n      }\n      if (faultTolerant) {\n        existingEntry.setFaultTolerant(true);\n      }\n      if (order !\u003d null) {\n        existingEntry.setDestOrder(order);\n      }\n\n      // Update ACL info of mount table entry\n      if (aclInfo.getOwner() !\u003d null) {\n        existingEntry.setOwnerName(aclInfo.getOwner());\n      }\n\n      if (aclInfo.getGroup() !\u003d null) {\n        existingEntry.setGroupName(aclInfo.getGroup());\n      }\n\n      if (aclInfo.getMode() !\u003d null) {\n        existingEntry.setMode(aclInfo.getMode());\n      }\n\n      existingEntry.validate();\n\n      UpdateMountTableEntryRequest updateRequest \u003d\n          UpdateMountTableEntryRequest.newInstance(existingEntry);\n      UpdateMountTableEntryResponse updateResponse \u003d\n          mountTable.updateMountTableEntry(updateRequest);\n      boolean updated \u003d updateResponse.getStatus();\n      if (!updated) {\n        System.err.println(\"Cannot update mount point \" + mount);\n      }\n      return updated;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/tools/federation/RouterAdmin.java",
          "extendedDetails": {}
        }
      ]
    },
    "484440602c5b69fbd8106010603c61ae051056dd": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13508. RBF: Normalize paths (automatically) when adding, updating, removing or listing mount table entries. Contributed by Ekanth S.\n",
      "commitDate": "27/04/18 4:28 PM",
      "commitName": "484440602c5b69fbd8106010603c61ae051056dd",
      "commitAuthor": "Inigo Goiri",
      "commitDateOld": "26/04/18 1:54 PM",
      "commitNameOld": "09c9cf1d43b802dd62b532c3c7be0e21a0c9ad5c",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 1.11,
      "commitsBetweenForRepo": 18,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,91 +1,92 @@\n   public boolean addMount(String mount, String[] nss, String dest,\n       boolean readonly, DestinationOrder order, ACLEntity aclInfo)\n       throws IOException {\n+    mount \u003d normalizeFileSystemPath(mount);\n     // Get the existing entry\n     MountTableManager mountTable \u003d client.getMountTableManager();\n     GetMountTableEntriesRequest getRequest \u003d\n         GetMountTableEntriesRequest.newInstance(mount);\n     GetMountTableEntriesResponse getResponse \u003d\n         mountTable.getMountTableEntries(getRequest);\n     List\u003cMountTable\u003e results \u003d getResponse.getEntries();\n     MountTable existingEntry \u003d null;\n     for (MountTable result : results) {\n       if (mount.equals(result.getSourcePath())) {\n         existingEntry \u003d result;\n       }\n     }\n \n     if (existingEntry \u003d\u003d null) {\n       // Create and add the entry if it doesn\u0027t exist\n       Map\u003cString, String\u003e destMap \u003d new LinkedHashMap\u003c\u003e();\n       for (String ns : nss) {\n         destMap.put(ns, dest);\n       }\n       MountTable newEntry \u003d MountTable.newInstance(mount, destMap);\n       if (readonly) {\n         newEntry.setReadOnly(true);\n       }\n       if (order !\u003d null) {\n         newEntry.setDestOrder(order);\n       }\n \n       // Set ACL info for mount table entry\n       if (aclInfo.getOwner() !\u003d null) {\n         newEntry.setOwnerName(aclInfo.getOwner());\n       }\n \n       if (aclInfo.getGroup() !\u003d null) {\n         newEntry.setGroupName(aclInfo.getGroup());\n       }\n \n       if (aclInfo.getMode() !\u003d null) {\n         newEntry.setMode(aclInfo.getMode());\n       }\n \n       AddMountTableEntryRequest request \u003d\n           AddMountTableEntryRequest.newInstance(newEntry);\n       AddMountTableEntryResponse addResponse \u003d\n           mountTable.addMountTableEntry(request);\n       boolean added \u003d addResponse.getStatus();\n       if (!added) {\n         System.err.println(\"Cannot add mount point \" + mount);\n       }\n       return added;\n     } else {\n       // Update the existing entry if it exists\n       for (String nsId : nss) {\n         if (!existingEntry.addDestination(nsId, dest)) {\n           System.err.println(\"Cannot add destination at \" + nsId + \" \" + dest);\n         }\n       }\n       if (readonly) {\n         existingEntry.setReadOnly(true);\n       }\n       if (order !\u003d null) {\n         existingEntry.setDestOrder(order);\n       }\n \n       // Update ACL info of mount table entry\n       if (aclInfo.getOwner() !\u003d null) {\n         existingEntry.setOwnerName(aclInfo.getOwner());\n       }\n \n       if (aclInfo.getGroup() !\u003d null) {\n         existingEntry.setGroupName(aclInfo.getGroup());\n       }\n \n       if (aclInfo.getMode() !\u003d null) {\n         existingEntry.setMode(aclInfo.getMode());\n       }\n \n       UpdateMountTableEntryRequest updateRequest \u003d\n           UpdateMountTableEntryRequest.newInstance(existingEntry);\n       UpdateMountTableEntryResponse updateResponse \u003d\n           mountTable.updateMountTableEntry(updateRequest);\n       boolean updated \u003d updateResponse.getStatus();\n       if (!updated) {\n         System.err.println(\"Cannot update mount point \" + mount);\n       }\n       return updated;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean addMount(String mount, String[] nss, String dest,\n      boolean readonly, DestinationOrder order, ACLEntity aclInfo)\n      throws IOException {\n    mount \u003d normalizeFileSystemPath(mount);\n    // Get the existing entry\n    MountTableManager mountTable \u003d client.getMountTableManager();\n    GetMountTableEntriesRequest getRequest \u003d\n        GetMountTableEntriesRequest.newInstance(mount);\n    GetMountTableEntriesResponse getResponse \u003d\n        mountTable.getMountTableEntries(getRequest);\n    List\u003cMountTable\u003e results \u003d getResponse.getEntries();\n    MountTable existingEntry \u003d null;\n    for (MountTable result : results) {\n      if (mount.equals(result.getSourcePath())) {\n        existingEntry \u003d result;\n      }\n    }\n\n    if (existingEntry \u003d\u003d null) {\n      // Create and add the entry if it doesn\u0027t exist\n      Map\u003cString, String\u003e destMap \u003d new LinkedHashMap\u003c\u003e();\n      for (String ns : nss) {\n        destMap.put(ns, dest);\n      }\n      MountTable newEntry \u003d MountTable.newInstance(mount, destMap);\n      if (readonly) {\n        newEntry.setReadOnly(true);\n      }\n      if (order !\u003d null) {\n        newEntry.setDestOrder(order);\n      }\n\n      // Set ACL info for mount table entry\n      if (aclInfo.getOwner() !\u003d null) {\n        newEntry.setOwnerName(aclInfo.getOwner());\n      }\n\n      if (aclInfo.getGroup() !\u003d null) {\n        newEntry.setGroupName(aclInfo.getGroup());\n      }\n\n      if (aclInfo.getMode() !\u003d null) {\n        newEntry.setMode(aclInfo.getMode());\n      }\n\n      AddMountTableEntryRequest request \u003d\n          AddMountTableEntryRequest.newInstance(newEntry);\n      AddMountTableEntryResponse addResponse \u003d\n          mountTable.addMountTableEntry(request);\n      boolean added \u003d addResponse.getStatus();\n      if (!added) {\n        System.err.println(\"Cannot add mount point \" + mount);\n      }\n      return added;\n    } else {\n      // Update the existing entry if it exists\n      for (String nsId : nss) {\n        if (!existingEntry.addDestination(nsId, dest)) {\n          System.err.println(\"Cannot add destination at \" + nsId + \" \" + dest);\n        }\n      }\n      if (readonly) {\n        existingEntry.setReadOnly(true);\n      }\n      if (order !\u003d null) {\n        existingEntry.setDestOrder(order);\n      }\n\n      // Update ACL info of mount table entry\n      if (aclInfo.getOwner() !\u003d null) {\n        existingEntry.setOwnerName(aclInfo.getOwner());\n      }\n\n      if (aclInfo.getGroup() !\u003d null) {\n        existingEntry.setGroupName(aclInfo.getGroup());\n      }\n\n      if (aclInfo.getMode() !\u003d null) {\n        existingEntry.setMode(aclInfo.getMode());\n      }\n\n      UpdateMountTableEntryRequest updateRequest \u003d\n          UpdateMountTableEntryRequest.newInstance(existingEntry);\n      UpdateMountTableEntryResponse updateResponse \u003d\n          mountTable.updateMountTableEntry(updateRequest);\n      boolean updated \u003d updateResponse.getStatus();\n      if (!updated) {\n        System.err.println(\"Cannot update mount point \" + mount);\n      }\n      return updated;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/tools/federation/RouterAdmin.java",
      "extendedDetails": {}
    },
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-13215. RBF: Move Router to its own module. Contributed by Wei Yan\n",
      "commitDate": "19/03/18 10:13 PM",
      "commitName": "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d",
      "commitAuthor": "weiy",
      "commitDateOld": "19/03/18 5:19 PM",
      "commitNameOld": "e65ff1c8be48ef4f04ed96f96ac4caef4974944d",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 0.2,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public boolean addMount(String mount, String[] nss, String dest,\n      boolean readonly, DestinationOrder order, ACLEntity aclInfo)\n      throws IOException {\n    // Get the existing entry\n    MountTableManager mountTable \u003d client.getMountTableManager();\n    GetMountTableEntriesRequest getRequest \u003d\n        GetMountTableEntriesRequest.newInstance(mount);\n    GetMountTableEntriesResponse getResponse \u003d\n        mountTable.getMountTableEntries(getRequest);\n    List\u003cMountTable\u003e results \u003d getResponse.getEntries();\n    MountTable existingEntry \u003d null;\n    for (MountTable result : results) {\n      if (mount.equals(result.getSourcePath())) {\n        existingEntry \u003d result;\n      }\n    }\n\n    if (existingEntry \u003d\u003d null) {\n      // Create and add the entry if it doesn\u0027t exist\n      Map\u003cString, String\u003e destMap \u003d new LinkedHashMap\u003c\u003e();\n      for (String ns : nss) {\n        destMap.put(ns, dest);\n      }\n      MountTable newEntry \u003d MountTable.newInstance(mount, destMap);\n      if (readonly) {\n        newEntry.setReadOnly(true);\n      }\n      if (order !\u003d null) {\n        newEntry.setDestOrder(order);\n      }\n\n      // Set ACL info for mount table entry\n      if (aclInfo.getOwner() !\u003d null) {\n        newEntry.setOwnerName(aclInfo.getOwner());\n      }\n\n      if (aclInfo.getGroup() !\u003d null) {\n        newEntry.setGroupName(aclInfo.getGroup());\n      }\n\n      if (aclInfo.getMode() !\u003d null) {\n        newEntry.setMode(aclInfo.getMode());\n      }\n\n      AddMountTableEntryRequest request \u003d\n          AddMountTableEntryRequest.newInstance(newEntry);\n      AddMountTableEntryResponse addResponse \u003d\n          mountTable.addMountTableEntry(request);\n      boolean added \u003d addResponse.getStatus();\n      if (!added) {\n        System.err.println(\"Cannot add mount point \" + mount);\n      }\n      return added;\n    } else {\n      // Update the existing entry if it exists\n      for (String nsId : nss) {\n        if (!existingEntry.addDestination(nsId, dest)) {\n          System.err.println(\"Cannot add destination at \" + nsId + \" \" + dest);\n        }\n      }\n      if (readonly) {\n        existingEntry.setReadOnly(true);\n      }\n      if (order !\u003d null) {\n        existingEntry.setDestOrder(order);\n      }\n\n      // Update ACL info of mount table entry\n      if (aclInfo.getOwner() !\u003d null) {\n        existingEntry.setOwnerName(aclInfo.getOwner());\n      }\n\n      if (aclInfo.getGroup() !\u003d null) {\n        existingEntry.setGroupName(aclInfo.getGroup());\n      }\n\n      if (aclInfo.getMode() !\u003d null) {\n        existingEntry.setMode(aclInfo.getMode());\n      }\n\n      UpdateMountTableEntryRequest updateRequest \u003d\n          UpdateMountTableEntryRequest.newInstance(existingEntry);\n      UpdateMountTableEntryResponse updateResponse \u003d\n          mountTable.updateMountTableEntry(updateRequest);\n      boolean updated \u003d updateResponse.getStatus();\n      if (!updated) {\n        System.err.println(\"Cannot update mount point \" + mount);\n      }\n      return updated;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/tools/federation/RouterAdmin.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/federation/RouterAdmin.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/tools/federation/RouterAdmin.java"
      }
    },
    "ee028bfdf1c88a27cd925bed93ebb599a164dd2e": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-12895. RBF: Add ACL support for mount table. Contributed by Yiqun Lin.\n",
      "commitDate": "14/12/17 10:09 PM",
      "commitName": "ee028bfdf1c88a27cd925bed93ebb599a164dd2e",
      "commitAuthor": "Yiqun Lin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-12895. RBF: Add ACL support for mount table. Contributed by Yiqun Lin.\n",
          "commitDate": "14/12/17 10:09 PM",
          "commitName": "ee028bfdf1c88a27cd925bed93ebb599a164dd2e",
          "commitAuthor": "Yiqun Lin",
          "commitDateOld": "11/12/17 3:14 PM",
          "commitNameOld": "5cd1056ad77a2ebb0466e7bc5933337b57f6fe30",
          "commitAuthorOld": "Inigo Goiri",
          "daysBetweenCommits": 3.29,
          "commitsBetweenForRepo": 28,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,62 +1,91 @@\n   public boolean addMount(String mount, String[] nss, String dest,\n-      boolean readonly, DestinationOrder order) throws IOException {\n+      boolean readonly, DestinationOrder order, ACLEntity aclInfo)\n+      throws IOException {\n     // Get the existing entry\n     MountTableManager mountTable \u003d client.getMountTableManager();\n     GetMountTableEntriesRequest getRequest \u003d\n         GetMountTableEntriesRequest.newInstance(mount);\n     GetMountTableEntriesResponse getResponse \u003d\n         mountTable.getMountTableEntries(getRequest);\n     List\u003cMountTable\u003e results \u003d getResponse.getEntries();\n     MountTable existingEntry \u003d null;\n     for (MountTable result : results) {\n       if (mount.equals(result.getSourcePath())) {\n         existingEntry \u003d result;\n       }\n     }\n \n     if (existingEntry \u003d\u003d null) {\n       // Create and add the entry if it doesn\u0027t exist\n       Map\u003cString, String\u003e destMap \u003d new LinkedHashMap\u003c\u003e();\n       for (String ns : nss) {\n         destMap.put(ns, dest);\n       }\n       MountTable newEntry \u003d MountTable.newInstance(mount, destMap);\n       if (readonly) {\n         newEntry.setReadOnly(true);\n       }\n       if (order !\u003d null) {\n         newEntry.setDestOrder(order);\n       }\n+\n+      // Set ACL info for mount table entry\n+      if (aclInfo.getOwner() !\u003d null) {\n+        newEntry.setOwnerName(aclInfo.getOwner());\n+      }\n+\n+      if (aclInfo.getGroup() !\u003d null) {\n+        newEntry.setGroupName(aclInfo.getGroup());\n+      }\n+\n+      if (aclInfo.getMode() !\u003d null) {\n+        newEntry.setMode(aclInfo.getMode());\n+      }\n+\n       AddMountTableEntryRequest request \u003d\n           AddMountTableEntryRequest.newInstance(newEntry);\n       AddMountTableEntryResponse addResponse \u003d\n           mountTable.addMountTableEntry(request);\n       boolean added \u003d addResponse.getStatus();\n       if (!added) {\n         System.err.println(\"Cannot add mount point \" + mount);\n       }\n       return added;\n     } else {\n       // Update the existing entry if it exists\n       for (String nsId : nss) {\n         if (!existingEntry.addDestination(nsId, dest)) {\n           System.err.println(\"Cannot add destination at \" + nsId + \" \" + dest);\n         }\n       }\n       if (readonly) {\n         existingEntry.setReadOnly(true);\n       }\n       if (order !\u003d null) {\n         existingEntry.setDestOrder(order);\n       }\n+\n+      // Update ACL info of mount table entry\n+      if (aclInfo.getOwner() !\u003d null) {\n+        existingEntry.setOwnerName(aclInfo.getOwner());\n+      }\n+\n+      if (aclInfo.getGroup() !\u003d null) {\n+        existingEntry.setGroupName(aclInfo.getGroup());\n+      }\n+\n+      if (aclInfo.getMode() !\u003d null) {\n+        existingEntry.setMode(aclInfo.getMode());\n+      }\n+\n       UpdateMountTableEntryRequest updateRequest \u003d\n           UpdateMountTableEntryRequest.newInstance(existingEntry);\n       UpdateMountTableEntryResponse updateResponse \u003d\n           mountTable.updateMountTableEntry(updateRequest);\n       boolean updated \u003d updateResponse.getStatus();\n       if (!updated) {\n         System.err.println(\"Cannot update mount point \" + mount);\n       }\n       return updated;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean addMount(String mount, String[] nss, String dest,\n      boolean readonly, DestinationOrder order, ACLEntity aclInfo)\n      throws IOException {\n    // Get the existing entry\n    MountTableManager mountTable \u003d client.getMountTableManager();\n    GetMountTableEntriesRequest getRequest \u003d\n        GetMountTableEntriesRequest.newInstance(mount);\n    GetMountTableEntriesResponse getResponse \u003d\n        mountTable.getMountTableEntries(getRequest);\n    List\u003cMountTable\u003e results \u003d getResponse.getEntries();\n    MountTable existingEntry \u003d null;\n    for (MountTable result : results) {\n      if (mount.equals(result.getSourcePath())) {\n        existingEntry \u003d result;\n      }\n    }\n\n    if (existingEntry \u003d\u003d null) {\n      // Create and add the entry if it doesn\u0027t exist\n      Map\u003cString, String\u003e destMap \u003d new LinkedHashMap\u003c\u003e();\n      for (String ns : nss) {\n        destMap.put(ns, dest);\n      }\n      MountTable newEntry \u003d MountTable.newInstance(mount, destMap);\n      if (readonly) {\n        newEntry.setReadOnly(true);\n      }\n      if (order !\u003d null) {\n        newEntry.setDestOrder(order);\n      }\n\n      // Set ACL info for mount table entry\n      if (aclInfo.getOwner() !\u003d null) {\n        newEntry.setOwnerName(aclInfo.getOwner());\n      }\n\n      if (aclInfo.getGroup() !\u003d null) {\n        newEntry.setGroupName(aclInfo.getGroup());\n      }\n\n      if (aclInfo.getMode() !\u003d null) {\n        newEntry.setMode(aclInfo.getMode());\n      }\n\n      AddMountTableEntryRequest request \u003d\n          AddMountTableEntryRequest.newInstance(newEntry);\n      AddMountTableEntryResponse addResponse \u003d\n          mountTable.addMountTableEntry(request);\n      boolean added \u003d addResponse.getStatus();\n      if (!added) {\n        System.err.println(\"Cannot add mount point \" + mount);\n      }\n      return added;\n    } else {\n      // Update the existing entry if it exists\n      for (String nsId : nss) {\n        if (!existingEntry.addDestination(nsId, dest)) {\n          System.err.println(\"Cannot add destination at \" + nsId + \" \" + dest);\n        }\n      }\n      if (readonly) {\n        existingEntry.setReadOnly(true);\n      }\n      if (order !\u003d null) {\n        existingEntry.setDestOrder(order);\n      }\n\n      // Update ACL info of mount table entry\n      if (aclInfo.getOwner() !\u003d null) {\n        existingEntry.setOwnerName(aclInfo.getOwner());\n      }\n\n      if (aclInfo.getGroup() !\u003d null) {\n        existingEntry.setGroupName(aclInfo.getGroup());\n      }\n\n      if (aclInfo.getMode() !\u003d null) {\n        existingEntry.setMode(aclInfo.getMode());\n      }\n\n      UpdateMountTableEntryRequest updateRequest \u003d\n          UpdateMountTableEntryRequest.newInstance(existingEntry);\n      UpdateMountTableEntryResponse updateResponse \u003d\n          mountTable.updateMountTableEntry(updateRequest);\n      boolean updated \u003d updateResponse.getStatus();\n      if (!updated) {\n        System.err.println(\"Cannot update mount point \" + mount);\n      }\n      return updated;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/federation/RouterAdmin.java",
          "extendedDetails": {
            "oldValue": "[mount-String, nss-String[], dest-String, readonly-boolean, order-DestinationOrder]",
            "newValue": "[mount-String, nss-String[], dest-String, readonly-boolean, order-DestinationOrder, aclInfo-ACLEntity]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-12895. RBF: Add ACL support for mount table. Contributed by Yiqun Lin.\n",
          "commitDate": "14/12/17 10:09 PM",
          "commitName": "ee028bfdf1c88a27cd925bed93ebb599a164dd2e",
          "commitAuthor": "Yiqun Lin",
          "commitDateOld": "11/12/17 3:14 PM",
          "commitNameOld": "5cd1056ad77a2ebb0466e7bc5933337b57f6fe30",
          "commitAuthorOld": "Inigo Goiri",
          "daysBetweenCommits": 3.29,
          "commitsBetweenForRepo": 28,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,62 +1,91 @@\n   public boolean addMount(String mount, String[] nss, String dest,\n-      boolean readonly, DestinationOrder order) throws IOException {\n+      boolean readonly, DestinationOrder order, ACLEntity aclInfo)\n+      throws IOException {\n     // Get the existing entry\n     MountTableManager mountTable \u003d client.getMountTableManager();\n     GetMountTableEntriesRequest getRequest \u003d\n         GetMountTableEntriesRequest.newInstance(mount);\n     GetMountTableEntriesResponse getResponse \u003d\n         mountTable.getMountTableEntries(getRequest);\n     List\u003cMountTable\u003e results \u003d getResponse.getEntries();\n     MountTable existingEntry \u003d null;\n     for (MountTable result : results) {\n       if (mount.equals(result.getSourcePath())) {\n         existingEntry \u003d result;\n       }\n     }\n \n     if (existingEntry \u003d\u003d null) {\n       // Create and add the entry if it doesn\u0027t exist\n       Map\u003cString, String\u003e destMap \u003d new LinkedHashMap\u003c\u003e();\n       for (String ns : nss) {\n         destMap.put(ns, dest);\n       }\n       MountTable newEntry \u003d MountTable.newInstance(mount, destMap);\n       if (readonly) {\n         newEntry.setReadOnly(true);\n       }\n       if (order !\u003d null) {\n         newEntry.setDestOrder(order);\n       }\n+\n+      // Set ACL info for mount table entry\n+      if (aclInfo.getOwner() !\u003d null) {\n+        newEntry.setOwnerName(aclInfo.getOwner());\n+      }\n+\n+      if (aclInfo.getGroup() !\u003d null) {\n+        newEntry.setGroupName(aclInfo.getGroup());\n+      }\n+\n+      if (aclInfo.getMode() !\u003d null) {\n+        newEntry.setMode(aclInfo.getMode());\n+      }\n+\n       AddMountTableEntryRequest request \u003d\n           AddMountTableEntryRequest.newInstance(newEntry);\n       AddMountTableEntryResponse addResponse \u003d\n           mountTable.addMountTableEntry(request);\n       boolean added \u003d addResponse.getStatus();\n       if (!added) {\n         System.err.println(\"Cannot add mount point \" + mount);\n       }\n       return added;\n     } else {\n       // Update the existing entry if it exists\n       for (String nsId : nss) {\n         if (!existingEntry.addDestination(nsId, dest)) {\n           System.err.println(\"Cannot add destination at \" + nsId + \" \" + dest);\n         }\n       }\n       if (readonly) {\n         existingEntry.setReadOnly(true);\n       }\n       if (order !\u003d null) {\n         existingEntry.setDestOrder(order);\n       }\n+\n+      // Update ACL info of mount table entry\n+      if (aclInfo.getOwner() !\u003d null) {\n+        existingEntry.setOwnerName(aclInfo.getOwner());\n+      }\n+\n+      if (aclInfo.getGroup() !\u003d null) {\n+        existingEntry.setGroupName(aclInfo.getGroup());\n+      }\n+\n+      if (aclInfo.getMode() !\u003d null) {\n+        existingEntry.setMode(aclInfo.getMode());\n+      }\n+\n       UpdateMountTableEntryRequest updateRequest \u003d\n           UpdateMountTableEntryRequest.newInstance(existingEntry);\n       UpdateMountTableEntryResponse updateResponse \u003d\n           mountTable.updateMountTableEntry(updateRequest);\n       boolean updated \u003d updateResponse.getStatus();\n       if (!updated) {\n         System.err.println(\"Cannot update mount point \" + mount);\n       }\n       return updated;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean addMount(String mount, String[] nss, String dest,\n      boolean readonly, DestinationOrder order, ACLEntity aclInfo)\n      throws IOException {\n    // Get the existing entry\n    MountTableManager mountTable \u003d client.getMountTableManager();\n    GetMountTableEntriesRequest getRequest \u003d\n        GetMountTableEntriesRequest.newInstance(mount);\n    GetMountTableEntriesResponse getResponse \u003d\n        mountTable.getMountTableEntries(getRequest);\n    List\u003cMountTable\u003e results \u003d getResponse.getEntries();\n    MountTable existingEntry \u003d null;\n    for (MountTable result : results) {\n      if (mount.equals(result.getSourcePath())) {\n        existingEntry \u003d result;\n      }\n    }\n\n    if (existingEntry \u003d\u003d null) {\n      // Create and add the entry if it doesn\u0027t exist\n      Map\u003cString, String\u003e destMap \u003d new LinkedHashMap\u003c\u003e();\n      for (String ns : nss) {\n        destMap.put(ns, dest);\n      }\n      MountTable newEntry \u003d MountTable.newInstance(mount, destMap);\n      if (readonly) {\n        newEntry.setReadOnly(true);\n      }\n      if (order !\u003d null) {\n        newEntry.setDestOrder(order);\n      }\n\n      // Set ACL info for mount table entry\n      if (aclInfo.getOwner() !\u003d null) {\n        newEntry.setOwnerName(aclInfo.getOwner());\n      }\n\n      if (aclInfo.getGroup() !\u003d null) {\n        newEntry.setGroupName(aclInfo.getGroup());\n      }\n\n      if (aclInfo.getMode() !\u003d null) {\n        newEntry.setMode(aclInfo.getMode());\n      }\n\n      AddMountTableEntryRequest request \u003d\n          AddMountTableEntryRequest.newInstance(newEntry);\n      AddMountTableEntryResponse addResponse \u003d\n          mountTable.addMountTableEntry(request);\n      boolean added \u003d addResponse.getStatus();\n      if (!added) {\n        System.err.println(\"Cannot add mount point \" + mount);\n      }\n      return added;\n    } else {\n      // Update the existing entry if it exists\n      for (String nsId : nss) {\n        if (!existingEntry.addDestination(nsId, dest)) {\n          System.err.println(\"Cannot add destination at \" + nsId + \" \" + dest);\n        }\n      }\n      if (readonly) {\n        existingEntry.setReadOnly(true);\n      }\n      if (order !\u003d null) {\n        existingEntry.setDestOrder(order);\n      }\n\n      // Update ACL info of mount table entry\n      if (aclInfo.getOwner() !\u003d null) {\n        existingEntry.setOwnerName(aclInfo.getOwner());\n      }\n\n      if (aclInfo.getGroup() !\u003d null) {\n        existingEntry.setGroupName(aclInfo.getGroup());\n      }\n\n      if (aclInfo.getMode() !\u003d null) {\n        existingEntry.setMode(aclInfo.getMode());\n      }\n\n      UpdateMountTableEntryRequest updateRequest \u003d\n          UpdateMountTableEntryRequest.newInstance(existingEntry);\n      UpdateMountTableEntryResponse updateResponse \u003d\n          mountTable.updateMountTableEntry(updateRequest);\n      boolean updated \u003d updateResponse.getStatus();\n      if (!updated) {\n        System.err.println(\"Cannot update mount point \" + mount);\n      }\n      return updated;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/federation/RouterAdmin.java",
          "extendedDetails": {}
        }
      ]
    },
    "b3e6bd22e3c02b3e4f50396538f56a1bcb007638": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-10646. Federation admin tool. Contributed by Inigo Goiri.\n\n(cherry picked from commit ae27e31fbcf546481db0b0345772db2e9132372e)\n",
      "commitDate": "06/10/17 6:50 PM",
      "commitName": "b3e6bd22e3c02b3e4f50396538f56a1bcb007638",
      "commitAuthor": "Inigo Goiri",
      "diff": "@@ -0,0 +1,62 @@\n+  public boolean addMount(String mount, String[] nss, String dest,\n+      boolean readonly, DestinationOrder order) throws IOException {\n+    // Get the existing entry\n+    MountTableManager mountTable \u003d client.getMountTableManager();\n+    GetMountTableEntriesRequest getRequest \u003d\n+        GetMountTableEntriesRequest.newInstance(mount);\n+    GetMountTableEntriesResponse getResponse \u003d\n+        mountTable.getMountTableEntries(getRequest);\n+    List\u003cMountTable\u003e results \u003d getResponse.getEntries();\n+    MountTable existingEntry \u003d null;\n+    for (MountTable result : results) {\n+      if (mount.equals(result.getSourcePath())) {\n+        existingEntry \u003d result;\n+      }\n+    }\n+\n+    if (existingEntry \u003d\u003d null) {\n+      // Create and add the entry if it doesn\u0027t exist\n+      Map\u003cString, String\u003e destMap \u003d new LinkedHashMap\u003c\u003e();\n+      for (String ns : nss) {\n+        destMap.put(ns, dest);\n+      }\n+      MountTable newEntry \u003d MountTable.newInstance(mount, destMap);\n+      if (readonly) {\n+        newEntry.setReadOnly(true);\n+      }\n+      if (order !\u003d null) {\n+        newEntry.setDestOrder(order);\n+      }\n+      AddMountTableEntryRequest request \u003d\n+          AddMountTableEntryRequest.newInstance(newEntry);\n+      AddMountTableEntryResponse addResponse \u003d\n+          mountTable.addMountTableEntry(request);\n+      boolean added \u003d addResponse.getStatus();\n+      if (!added) {\n+        System.err.println(\"Cannot add mount point \" + mount);\n+      }\n+      return added;\n+    } else {\n+      // Update the existing entry if it exists\n+      for (String nsId : nss) {\n+        if (!existingEntry.addDestination(nsId, dest)) {\n+          System.err.println(\"Cannot add destination at \" + nsId + \" \" + dest);\n+        }\n+      }\n+      if (readonly) {\n+        existingEntry.setReadOnly(true);\n+      }\n+      if (order !\u003d null) {\n+        existingEntry.setDestOrder(order);\n+      }\n+      UpdateMountTableEntryRequest updateRequest \u003d\n+          UpdateMountTableEntryRequest.newInstance(existingEntry);\n+      UpdateMountTableEntryResponse updateResponse \u003d\n+          mountTable.updateMountTableEntry(updateRequest);\n+      boolean updated \u003d updateResponse.getStatus();\n+      if (!updated) {\n+        System.err.println(\"Cannot update mount point \" + mount);\n+      }\n+      return updated;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean addMount(String mount, String[] nss, String dest,\n      boolean readonly, DestinationOrder order) throws IOException {\n    // Get the existing entry\n    MountTableManager mountTable \u003d client.getMountTableManager();\n    GetMountTableEntriesRequest getRequest \u003d\n        GetMountTableEntriesRequest.newInstance(mount);\n    GetMountTableEntriesResponse getResponse \u003d\n        mountTable.getMountTableEntries(getRequest);\n    List\u003cMountTable\u003e results \u003d getResponse.getEntries();\n    MountTable existingEntry \u003d null;\n    for (MountTable result : results) {\n      if (mount.equals(result.getSourcePath())) {\n        existingEntry \u003d result;\n      }\n    }\n\n    if (existingEntry \u003d\u003d null) {\n      // Create and add the entry if it doesn\u0027t exist\n      Map\u003cString, String\u003e destMap \u003d new LinkedHashMap\u003c\u003e();\n      for (String ns : nss) {\n        destMap.put(ns, dest);\n      }\n      MountTable newEntry \u003d MountTable.newInstance(mount, destMap);\n      if (readonly) {\n        newEntry.setReadOnly(true);\n      }\n      if (order !\u003d null) {\n        newEntry.setDestOrder(order);\n      }\n      AddMountTableEntryRequest request \u003d\n          AddMountTableEntryRequest.newInstance(newEntry);\n      AddMountTableEntryResponse addResponse \u003d\n          mountTable.addMountTableEntry(request);\n      boolean added \u003d addResponse.getStatus();\n      if (!added) {\n        System.err.println(\"Cannot add mount point \" + mount);\n      }\n      return added;\n    } else {\n      // Update the existing entry if it exists\n      for (String nsId : nss) {\n        if (!existingEntry.addDestination(nsId, dest)) {\n          System.err.println(\"Cannot add destination at \" + nsId + \" \" + dest);\n        }\n      }\n      if (readonly) {\n        existingEntry.setReadOnly(true);\n      }\n      if (order !\u003d null) {\n        existingEntry.setDestOrder(order);\n      }\n      UpdateMountTableEntryRequest updateRequest \u003d\n          UpdateMountTableEntryRequest.newInstance(existingEntry);\n      UpdateMountTableEntryResponse updateResponse \u003d\n          mountTable.updateMountTableEntry(updateRequest);\n      boolean updated \u003d updateResponse.getStatus();\n      if (!updated) {\n        System.err.println(\"Cannot update mount point \" + mount);\n      }\n      return updated;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/federation/RouterAdmin.java"
    }
  }
}