{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CrossOriginFilter.java",
  "functionName": "areOriginsAllowed",
  "functionId": "areOriginsAllowed___originsList-String",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/http/CrossOriginFilter.java",
  "functionStartLine": 231,
  "functionEndLine": 257,
  "numCommitsSeen": 15,
  "timeTaken": 2458,
  "changeHistory": [
    "4d5dd75b607d25adf8b41f7408713dfcea8f5330",
    "f8adeb712dc834c27cec15c04a986f2f635aba83",
    "98588cf044d9908ecf767257c09a52cf17aa2ec2",
    "a092cdf32de4d752456286a9f4dda533d8a62bca",
    "51a4faf52199b181471d591a9fde900fc166fc48",
    "41aa4badf8270a8e7d4321809fe8b8a34db98968"
  ],
  "changeHistoryShort": {
    "4d5dd75b607d25adf8b41f7408713dfcea8f5330": "Ybodychange",
    "f8adeb712dc834c27cec15c04a986f2f635aba83": "Yfilerename",
    "98588cf044d9908ecf767257c09a52cf17aa2ec2": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
    "a092cdf32de4d752456286a9f4dda533d8a62bca": "Ybodychange",
    "51a4faf52199b181471d591a9fde900fc166fc48": "Ymultichange(Ymodifierchange,Ybodychange)",
    "41aa4badf8270a8e7d4321809fe8b8a34db98968": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4d5dd75b607d25adf8b41f7408713dfcea8f5330": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14908. CrossOriginFilter should trigger regex on more input (Johannes Alberti via aw)\n",
      "commitDate": "03/10/17 10:58 AM",
      "commitName": "4d5dd75b607d25adf8b41f7408713dfcea8f5330",
      "commitAuthor": "Allen Wittenauer",
      "commitDateOld": "17/07/17 9:32 PM",
      "commitNameOld": "ccaf036662e22da14583942054898c99fa51dae5",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 77.56,
      "commitsBetweenForRepo": 664,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,27 @@\n   boolean areOriginsAllowed(String originsList) {\n     if (allowAllOrigins) {\n       return true;\n     }\n \n     String[] origins \u003d originsList.trim().split(\"\\\\s+\");\n     for (String origin : origins) {\n       for (String allowedOrigin : allowedOrigins) {\n-        if (allowedOrigin.contains(\"*\")) {\n-          String regex \u003d allowedOrigin.replace(\".\", \"\\\\.\").replace(\"*\", \".*\");\n-          Pattern p \u003d Pattern.compile(regex);\n-          Matcher m \u003d p.matcher(origin);\n-          if (m.matches()) {\n+        Pattern regexPattern \u003d null;\n+        if (allowedOrigin.startsWith(ALLOWED_ORIGINS_REGEX_PREFIX)) {\n+            String regex \u003d allowedOrigin.substring(ALLOWED_ORIGINS_REGEX_PREFIX.length());\n+            regexPattern \u003d Pattern.compile(regex);\n+        } else if (allowedOrigin.contains(\"*\")) {\n+            String regex \u003d allowedOrigin.replace(\".\", \"\\\\.\").replace(\"*\", \".*\");\n+            regexPattern \u003d Pattern.compile(regex);\n+        }\n+\n+        if (regexPattern !\u003d null\n+                \u0026\u0026 regexPattern.matcher(origin).matches()) {\n             return true;\n-          }\n         } else if (allowedOrigin.equals(origin)) {\n-          return true;\n+            return true;\n         }\n       }\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  boolean areOriginsAllowed(String originsList) {\n    if (allowAllOrigins) {\n      return true;\n    }\n\n    String[] origins \u003d originsList.trim().split(\"\\\\s+\");\n    for (String origin : origins) {\n      for (String allowedOrigin : allowedOrigins) {\n        Pattern regexPattern \u003d null;\n        if (allowedOrigin.startsWith(ALLOWED_ORIGINS_REGEX_PREFIX)) {\n            String regex \u003d allowedOrigin.substring(ALLOWED_ORIGINS_REGEX_PREFIX.length());\n            regexPattern \u003d Pattern.compile(regex);\n        } else if (allowedOrigin.contains(\"*\")) {\n            String regex \u003d allowedOrigin.replace(\".\", \"\\\\.\").replace(\"*\", \".*\");\n            regexPattern \u003d Pattern.compile(regex);\n        }\n\n        if (regexPattern !\u003d null\n                \u0026\u0026 regexPattern.matcher(origin).matches()) {\n            return true;\n        } else if (allowedOrigin.equals(origin)) {\n            return true;\n        }\n      }\n    }\n    return false;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/http/CrossOriginFilter.java",
      "extendedDetails": {}
    },
    "f8adeb712dc834c27cec15c04a986f2f635aba83": {
      "type": "Yfilerename",
      "commitMessage": "YARN-4009. CORS support for ResourceManager REST API. ( Varun Vasudev via jeagles)\n",
      "commitDate": "23/10/15 8:34 AM",
      "commitName": "f8adeb712dc834c27cec15c04a986f2f635aba83",
      "commitAuthor": "Jonathan Eagles",
      "commitDateOld": "23/10/15 7:47 AM",
      "commitNameOld": "35a303dfbe348f96c465fb8778ced6b5bb617e89",
      "commitAuthorOld": "Tsuyoshi Ozawa",
      "daysBetweenCommits": 0.03,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  boolean areOriginsAllowed(String originsList) {\n    if (allowAllOrigins) {\n      return true;\n    }\n\n    String[] origins \u003d originsList.trim().split(\"\\\\s+\");\n    for (String origin : origins) {\n      for (String allowedOrigin : allowedOrigins) {\n        if (allowedOrigin.contains(\"*\")) {\n          String regex \u003d allowedOrigin.replace(\".\", \"\\\\.\").replace(\"*\", \".*\");\n          Pattern p \u003d Pattern.compile(regex);\n          Matcher m \u003d p.matcher(origin);\n          if (m.matches()) {\n            return true;\n          }\n        } else if (allowedOrigin.equals(origin)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/http/CrossOriginFilter.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/webapp/CrossOriginFilter.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/http/CrossOriginFilter.java"
      }
    },
    "98588cf044d9908ecf767257c09a52cf17aa2ec2": {
      "type": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-2528. Relaxed http response split vulnerability protection for the origins header and made it accept multiple origins in CrossOriginFilter. Contributed by Jonathan Eagles.\n",
      "commitDate": "12/09/14 9:33 PM",
      "commitName": "98588cf044d9908ecf767257c09a52cf17aa2ec2",
      "commitAuthor": "Zhijie Shen",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-2528. Relaxed http response split vulnerability protection for the origins header and made it accept multiple origins in CrossOriginFilter. Contributed by Jonathan Eagles.\n",
          "commitDate": "12/09/14 9:33 PM",
          "commitName": "98588cf044d9908ecf767257c09a52cf17aa2ec2",
          "commitAuthor": "Zhijie Shen",
          "commitDateOld": "12/09/14 1:35 PM",
          "commitNameOld": "54e5794806bd856da0277510efe63656eed23146",
          "commitAuthorOld": "Jonathan Eagles",
          "daysBetweenCommits": 0.33,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,22 @@\n-  boolean isOriginAllowed(String origin) {\n+  boolean areOriginsAllowed(String originsList) {\n     if (allowAllOrigins) {\n       return true;\n     }\n \n-    for (String allowedOrigin : allowedOrigins) {\n-      if (allowedOrigin.contains(\"*\")) {\n-        String regex \u003d allowedOrigin.replace(\".\", \"\\\\.\").replace(\"*\", \".*\");\n-        Pattern p \u003d Pattern.compile(regex);\n-        Matcher m \u003d p.matcher(origin);\n-        if (m.matches()) {\n+    String[] origins \u003d originsList.trim().split(\"\\\\s+\");\n+    for (String origin : origins) {\n+      for (String allowedOrigin : allowedOrigins) {\n+        if (allowedOrigin.contains(\"*\")) {\n+          String regex \u003d allowedOrigin.replace(\".\", \"\\\\.\").replace(\"*\", \".*\");\n+          Pattern p \u003d Pattern.compile(regex);\n+          Matcher m \u003d p.matcher(origin);\n+          if (m.matches()) {\n+            return true;\n+          }\n+        } else if (allowedOrigin.equals(origin)) {\n           return true;\n         }\n-      } else if (allowedOrigin.equals(origin)) {\n-        return true;\n       }\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  boolean areOriginsAllowed(String originsList) {\n    if (allowAllOrigins) {\n      return true;\n    }\n\n    String[] origins \u003d originsList.trim().split(\"\\\\s+\");\n    for (String origin : origins) {\n      for (String allowedOrigin : allowedOrigins) {\n        if (allowedOrigin.contains(\"*\")) {\n          String regex \u003d allowedOrigin.replace(\".\", \"\\\\.\").replace(\"*\", \".*\");\n          Pattern p \u003d Pattern.compile(regex);\n          Matcher m \u003d p.matcher(origin);\n          if (m.matches()) {\n            return true;\n          }\n        } else if (allowedOrigin.equals(origin)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/webapp/CrossOriginFilter.java",
          "extendedDetails": {
            "oldValue": "isOriginAllowed",
            "newValue": "areOriginsAllowed"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-2528. Relaxed http response split vulnerability protection for the origins header and made it accept multiple origins in CrossOriginFilter. Contributed by Jonathan Eagles.\n",
          "commitDate": "12/09/14 9:33 PM",
          "commitName": "98588cf044d9908ecf767257c09a52cf17aa2ec2",
          "commitAuthor": "Zhijie Shen",
          "commitDateOld": "12/09/14 1:35 PM",
          "commitNameOld": "54e5794806bd856da0277510efe63656eed23146",
          "commitAuthorOld": "Jonathan Eagles",
          "daysBetweenCommits": 0.33,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,22 @@\n-  boolean isOriginAllowed(String origin) {\n+  boolean areOriginsAllowed(String originsList) {\n     if (allowAllOrigins) {\n       return true;\n     }\n \n-    for (String allowedOrigin : allowedOrigins) {\n-      if (allowedOrigin.contains(\"*\")) {\n-        String regex \u003d allowedOrigin.replace(\".\", \"\\\\.\").replace(\"*\", \".*\");\n-        Pattern p \u003d Pattern.compile(regex);\n-        Matcher m \u003d p.matcher(origin);\n-        if (m.matches()) {\n+    String[] origins \u003d originsList.trim().split(\"\\\\s+\");\n+    for (String origin : origins) {\n+      for (String allowedOrigin : allowedOrigins) {\n+        if (allowedOrigin.contains(\"*\")) {\n+          String regex \u003d allowedOrigin.replace(\".\", \"\\\\.\").replace(\"*\", \".*\");\n+          Pattern p \u003d Pattern.compile(regex);\n+          Matcher m \u003d p.matcher(origin);\n+          if (m.matches()) {\n+            return true;\n+          }\n+        } else if (allowedOrigin.equals(origin)) {\n           return true;\n         }\n-      } else if (allowedOrigin.equals(origin)) {\n-        return true;\n       }\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  boolean areOriginsAllowed(String originsList) {\n    if (allowAllOrigins) {\n      return true;\n    }\n\n    String[] origins \u003d originsList.trim().split(\"\\\\s+\");\n    for (String origin : origins) {\n      for (String allowedOrigin : allowedOrigins) {\n        if (allowedOrigin.contains(\"*\")) {\n          String regex \u003d allowedOrigin.replace(\".\", \"\\\\.\").replace(\"*\", \".*\");\n          Pattern p \u003d Pattern.compile(regex);\n          Matcher m \u003d p.matcher(origin);\n          if (m.matches()) {\n            return true;\n          }\n        } else if (allowedOrigin.equals(origin)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/webapp/CrossOriginFilter.java",
          "extendedDetails": {
            "oldValue": "[origin-String]",
            "newValue": "[originsList-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-2528. Relaxed http response split vulnerability protection for the origins header and made it accept multiple origins in CrossOriginFilter. Contributed by Jonathan Eagles.\n",
          "commitDate": "12/09/14 9:33 PM",
          "commitName": "98588cf044d9908ecf767257c09a52cf17aa2ec2",
          "commitAuthor": "Zhijie Shen",
          "commitDateOld": "12/09/14 1:35 PM",
          "commitNameOld": "54e5794806bd856da0277510efe63656eed23146",
          "commitAuthorOld": "Jonathan Eagles",
          "daysBetweenCommits": 0.33,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,22 @@\n-  boolean isOriginAllowed(String origin) {\n+  boolean areOriginsAllowed(String originsList) {\n     if (allowAllOrigins) {\n       return true;\n     }\n \n-    for (String allowedOrigin : allowedOrigins) {\n-      if (allowedOrigin.contains(\"*\")) {\n-        String regex \u003d allowedOrigin.replace(\".\", \"\\\\.\").replace(\"*\", \".*\");\n-        Pattern p \u003d Pattern.compile(regex);\n-        Matcher m \u003d p.matcher(origin);\n-        if (m.matches()) {\n+    String[] origins \u003d originsList.trim().split(\"\\\\s+\");\n+    for (String origin : origins) {\n+      for (String allowedOrigin : allowedOrigins) {\n+        if (allowedOrigin.contains(\"*\")) {\n+          String regex \u003d allowedOrigin.replace(\".\", \"\\\\.\").replace(\"*\", \".*\");\n+          Pattern p \u003d Pattern.compile(regex);\n+          Matcher m \u003d p.matcher(origin);\n+          if (m.matches()) {\n+            return true;\n+          }\n+        } else if (allowedOrigin.equals(origin)) {\n           return true;\n         }\n-      } else if (allowedOrigin.equals(origin)) {\n-        return true;\n       }\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  boolean areOriginsAllowed(String originsList) {\n    if (allowAllOrigins) {\n      return true;\n    }\n\n    String[] origins \u003d originsList.trim().split(\"\\\\s+\");\n    for (String origin : origins) {\n      for (String allowedOrigin : allowedOrigins) {\n        if (allowedOrigin.contains(\"*\")) {\n          String regex \u003d allowedOrigin.replace(\".\", \"\\\\.\").replace(\"*\", \".*\");\n          Pattern p \u003d Pattern.compile(regex);\n          Matcher m \u003d p.matcher(origin);\n          if (m.matches()) {\n            return true;\n          }\n        } else if (allowedOrigin.equals(origin)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/webapp/CrossOriginFilter.java",
          "extendedDetails": {}
        }
      ]
    },
    "a092cdf32de4d752456286a9f4dda533d8a62bca": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2512. Allowed pattern matching for origins in CrossOriginFilter. Contributed by Jonathan Eagles.\n",
      "commitDate": "07/09/14 5:49 PM",
      "commitName": "a092cdf32de4d752456286a9f4dda533d8a62bca",
      "commitAuthor": "Zhijie Shen",
      "commitDateOld": "04/09/14 3:01 PM",
      "commitNameOld": "51a4faf52199b181471d591a9fde900fc166fc48",
      "commitAuthorOld": "Zhijie Shen",
      "daysBetweenCommits": 3.12,
      "commitsBetweenForRepo": 22,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,3 +1,19 @@\n   boolean isOriginAllowed(String origin) {\n-    return allowAllOrigins || allowedOrigins.contains(origin);\n+    if (allowAllOrigins) {\n+      return true;\n+    }\n+\n+    for (String allowedOrigin : allowedOrigins) {\n+      if (allowedOrigin.contains(\"*\")) {\n+        String regex \u003d allowedOrigin.replace(\".\", \"\\\\.\").replace(\"*\", \".*\");\n+        Pattern p \u003d Pattern.compile(regex);\n+        Matcher m \u003d p.matcher(origin);\n+        if (m.matches()) {\n+          return true;\n+        }\n+      } else if (allowedOrigin.equals(origin)) {\n+        return true;\n+      }\n+    }\n+    return false;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  boolean isOriginAllowed(String origin) {\n    if (allowAllOrigins) {\n      return true;\n    }\n\n    for (String allowedOrigin : allowedOrigins) {\n      if (allowedOrigin.contains(\"*\")) {\n        String regex \u003d allowedOrigin.replace(\".\", \"\\\\.\").replace(\"*\", \".*\");\n        Pattern p \u003d Pattern.compile(regex);\n        Matcher m \u003d p.matcher(origin);\n        if (m.matches()) {\n          return true;\n        }\n      } else if (allowedOrigin.equals(origin)) {\n        return true;\n      }\n    }\n    return false;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/webapp/CrossOriginFilter.java",
      "extendedDetails": {}
    },
    "51a4faf52199b181471d591a9fde900fc166fc48": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-2511. Allowed all origins by default when CrossOriginFilter is enabled. Contributed by Jonathan Eagles.\n",
      "commitDate": "04/09/14 3:01 PM",
      "commitName": "51a4faf52199b181471d591a9fde900fc166fc48",
      "commitAuthor": "Zhijie Shen",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-2511. Allowed all origins by default when CrossOriginFilter is enabled. Contributed by Jonathan Eagles.\n",
          "commitDate": "04/09/14 3:01 PM",
          "commitName": "51a4faf52199b181471d591a9fde900fc166fc48",
          "commitAuthor": "Zhijie Shen",
          "commitDateOld": "13/08/14 1:29 PM",
          "commitNameOld": "41aa4badf8270a8e7d4321809fe8b8a34db98968",
          "commitAuthorOld": "Zhijie Shen",
          "daysBetweenCommits": 22.06,
          "commitsBetweenForRepo": 161,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,3 +1,3 @@\n-  private boolean isOriginAllowed(String origin) {\n-    return allowedOrigins.contains(origin);\n+  boolean isOriginAllowed(String origin) {\n+    return allowAllOrigins || allowedOrigins.contains(origin);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  boolean isOriginAllowed(String origin) {\n    return allowAllOrigins || allowedOrigins.contains(origin);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/webapp/CrossOriginFilter.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-2511. Allowed all origins by default when CrossOriginFilter is enabled. Contributed by Jonathan Eagles.\n",
          "commitDate": "04/09/14 3:01 PM",
          "commitName": "51a4faf52199b181471d591a9fde900fc166fc48",
          "commitAuthor": "Zhijie Shen",
          "commitDateOld": "13/08/14 1:29 PM",
          "commitNameOld": "41aa4badf8270a8e7d4321809fe8b8a34db98968",
          "commitAuthorOld": "Zhijie Shen",
          "daysBetweenCommits": 22.06,
          "commitsBetweenForRepo": 161,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,3 +1,3 @@\n-  private boolean isOriginAllowed(String origin) {\n-    return allowedOrigins.contains(origin);\n+  boolean isOriginAllowed(String origin) {\n+    return allowAllOrigins || allowedOrigins.contains(origin);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  boolean isOriginAllowed(String origin) {\n    return allowAllOrigins || allowedOrigins.contains(origin);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/webapp/CrossOriginFilter.java",
          "extendedDetails": {}
        }
      ]
    },
    "41aa4badf8270a8e7d4321809fe8b8a34db98968": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2277. Added cross-origin support for the timeline server web services. Contributed by Jonathan Eagles.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1617832 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/08/14 1:29 PM",
      "commitName": "41aa4badf8270a8e7d4321809fe8b8a34db98968",
      "commitAuthor": "Zhijie Shen",
      "diff": "@@ -0,0 +1,3 @@\n+  private boolean isOriginAllowed(String origin) {\n+    return allowedOrigins.contains(origin);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean isOriginAllowed(String origin) {\n    return allowedOrigins.contains(origin);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/webapp/CrossOriginFilter.java"
    }
  }
}