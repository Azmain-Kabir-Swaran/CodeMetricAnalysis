{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AppLevelTimelineCollectorWithAgg.java",
  "functionName": "serviceStop",
  "functionId": "serviceStop",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/AppLevelTimelineCollectorWithAgg.java",
  "functionStartLine": 100,
  "functionEndLine": 109,
  "numCommitsSeen": 4,
  "timeTaken": 306,
  "changeHistory": [
    "3fb71b1393018e1001da55b794dda7d26491cf35"
  ],
  "changeHistoryShort": {
    "3fb71b1393018e1001da55b794dda7d26491cf35": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3fb71b1393018e1001da55b794dda7d26491cf35": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6888. Refactor AppLevelTimelineCollector such that RM does not have aggregator threads created. Contributed by Vrushali C.\n",
      "commitDate": "29/08/17 10:59 PM",
      "commitName": "3fb71b1393018e1001da55b794dda7d26491cf35",
      "commitAuthor": "Rohith Sharma K S",
      "diff": "@@ -0,0 +1,10 @@\n+  protected void serviceStop() throws Exception {\n+    appAggregationExecutor.shutdown();\n+    if (!appAggregationExecutor.awaitTermination(10, TimeUnit.SECONDS)) {\n+      LOG.info(\"App-level aggregator shutdown timed out, shutdown now. \");\n+      appAggregationExecutor.shutdownNow();\n+    }\n+    // Perform one round of aggregation after the aggregation executor is done.\n+    appAggregator.aggregate();\n+    super.serviceStop();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceStop() throws Exception {\n    appAggregationExecutor.shutdown();\n    if (!appAggregationExecutor.awaitTermination(10, TimeUnit.SECONDS)) {\n      LOG.info(\"App-level aggregator shutdown timed out, shutdown now. \");\n      appAggregationExecutor.shutdownNow();\n    }\n    // Perform one round of aggregation after the aggregation executor is done.\n    appAggregator.aggregate();\n    super.serviceStop();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/AppLevelTimelineCollectorWithAgg.java"
    }
  }
}