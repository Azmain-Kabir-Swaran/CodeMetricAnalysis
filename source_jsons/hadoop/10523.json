{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BPServiceActor.java",
  "functionName": "retrieveNamespaceInfo",
  "functionId": "retrieveNamespaceInfo",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPServiceActor.java",
  "functionStartLine": 240,
  "functionEndLine": 263,
  "numCommitsSeen": 148,
  "timeTaken": 2997,
  "changeHistory": [
    "1e346aa829519f8a2aa830e76d9856f914861805",
    "39ce694d05c6d8c428bd87bc1b9c95f94dfdf6fd",
    "1f92266516c882e43fa453b876dd8ca09893c477"
  ],
  "changeHistoryShort": {
    "1e346aa829519f8a2aa830e76d9856f914861805": "Ymultichange(Ymovefromfile,Yexceptionschange,Ybodychange)",
    "39ce694d05c6d8c428bd87bc1b9c95f94dfdf6fd": "Ymovefromfile",
    "1f92266516c882e43fa453b876dd8ca09893c477": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1e346aa829519f8a2aa830e76d9856f914861805": {
      "type": "Ymultichange(Ymovefromfile,Yexceptionschange,Ybodychange)",
      "commitMessage": "HDFS-1971. Send block report from datanode to both active and standby namenodes. (sanjay, todd via suresh)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1208925 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/11/11 5:10 PM",
      "commitName": "1e346aa829519f8a2aa830e76d9856f914861805",
      "commitAuthor": "Suresh Srinivas",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-1971. Send block report from datanode to both active and standby namenodes. (sanjay, todd via suresh)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1208925 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "30/11/11 5:10 PM",
          "commitName": "1e346aa829519f8a2aa830e76d9856f914861805",
          "commitAuthor": "Suresh Srinivas",
          "commitDateOld": "30/11/11 1:46 PM",
          "commitNameOld": "f87a4b40bc99e76602a75906df31747cfdbff78a",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.14,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,24 @@\n-  NamespaceInfo retrieveNamespaceInfo() throws IncorrectVersionException {\n+  NamespaceInfo retrieveNamespaceInfo() throws IOException {\n     NamespaceInfo nsInfo \u003d null;\n     while (shouldRun()) {\n       try {\n         nsInfo \u003d bpNamenode.versionRequest();\n         LOG.debug(this + \" received versionRequest response: \" + nsInfo);\n         break;\n       } catch(SocketTimeoutException e) {  // namenode is busy\n         LOG.warn(\"Problem connecting to server: \" + nnAddr);\n       } catch(IOException e ) {  // namenode is not available\n         LOG.warn(\"Problem connecting to server: \" + nnAddr);\n       }\n       \n       // try again in a second\n       sleepAndLogInterrupts(5000, \"requesting version info from NN\");\n     }\n     \n     if (nsInfo !\u003d null) {\n-      checkNNVersion(nsInfo);        \n+      checkNNVersion(nsInfo);\n+    } else {\n+      throw new IOException(\"DN shut down before block pool connected\");\n     }\n     return nsInfo;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  NamespaceInfo retrieveNamespaceInfo() throws IOException {\n    NamespaceInfo nsInfo \u003d null;\n    while (shouldRun()) {\n      try {\n        nsInfo \u003d bpNamenode.versionRequest();\n        LOG.debug(this + \" received versionRequest response: \" + nsInfo);\n        break;\n      } catch(SocketTimeoutException e) {  // namenode is busy\n        LOG.warn(\"Problem connecting to server: \" + nnAddr);\n      } catch(IOException e ) {  // namenode is not available\n        LOG.warn(\"Problem connecting to server: \" + nnAddr);\n      }\n      \n      // try again in a second\n      sleepAndLogInterrupts(5000, \"requesting version info from NN\");\n    }\n    \n    if (nsInfo !\u003d null) {\n      checkNNVersion(nsInfo);\n    } else {\n      throw new IOException(\"DN shut down before block pool connected\");\n    }\n    return nsInfo;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPServiceActor.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPOfferService.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPServiceActor.java",
            "oldMethodName": "retrieveNamespaceInfo",
            "newMethodName": "retrieveNamespaceInfo"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "HDFS-1971. Send block report from datanode to both active and standby namenodes. (sanjay, todd via suresh)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1208925 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "30/11/11 5:10 PM",
          "commitName": "1e346aa829519f8a2aa830e76d9856f914861805",
          "commitAuthor": "Suresh Srinivas",
          "commitDateOld": "30/11/11 1:46 PM",
          "commitNameOld": "f87a4b40bc99e76602a75906df31747cfdbff78a",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.14,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,24 @@\n-  NamespaceInfo retrieveNamespaceInfo() throws IncorrectVersionException {\n+  NamespaceInfo retrieveNamespaceInfo() throws IOException {\n     NamespaceInfo nsInfo \u003d null;\n     while (shouldRun()) {\n       try {\n         nsInfo \u003d bpNamenode.versionRequest();\n         LOG.debug(this + \" received versionRequest response: \" + nsInfo);\n         break;\n       } catch(SocketTimeoutException e) {  // namenode is busy\n         LOG.warn(\"Problem connecting to server: \" + nnAddr);\n       } catch(IOException e ) {  // namenode is not available\n         LOG.warn(\"Problem connecting to server: \" + nnAddr);\n       }\n       \n       // try again in a second\n       sleepAndLogInterrupts(5000, \"requesting version info from NN\");\n     }\n     \n     if (nsInfo !\u003d null) {\n-      checkNNVersion(nsInfo);        \n+      checkNNVersion(nsInfo);\n+    } else {\n+      throw new IOException(\"DN shut down before block pool connected\");\n     }\n     return nsInfo;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  NamespaceInfo retrieveNamespaceInfo() throws IOException {\n    NamespaceInfo nsInfo \u003d null;\n    while (shouldRun()) {\n      try {\n        nsInfo \u003d bpNamenode.versionRequest();\n        LOG.debug(this + \" received versionRequest response: \" + nsInfo);\n        break;\n      } catch(SocketTimeoutException e) {  // namenode is busy\n        LOG.warn(\"Problem connecting to server: \" + nnAddr);\n      } catch(IOException e ) {  // namenode is not available\n        LOG.warn(\"Problem connecting to server: \" + nnAddr);\n      }\n      \n      // try again in a second\n      sleepAndLogInterrupts(5000, \"requesting version info from NN\");\n    }\n    \n    if (nsInfo !\u003d null) {\n      checkNNVersion(nsInfo);\n    } else {\n      throw new IOException(\"DN shut down before block pool connected\");\n    }\n    return nsInfo;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPServiceActor.java",
          "extendedDetails": {
            "oldValue": "[IncorrectVersionException]",
            "newValue": "[IOException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-1971. Send block report from datanode to both active and standby namenodes. (sanjay, todd via suresh)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1208925 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "30/11/11 5:10 PM",
          "commitName": "1e346aa829519f8a2aa830e76d9856f914861805",
          "commitAuthor": "Suresh Srinivas",
          "commitDateOld": "30/11/11 1:46 PM",
          "commitNameOld": "f87a4b40bc99e76602a75906df31747cfdbff78a",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.14,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,24 @@\n-  NamespaceInfo retrieveNamespaceInfo() throws IncorrectVersionException {\n+  NamespaceInfo retrieveNamespaceInfo() throws IOException {\n     NamespaceInfo nsInfo \u003d null;\n     while (shouldRun()) {\n       try {\n         nsInfo \u003d bpNamenode.versionRequest();\n         LOG.debug(this + \" received versionRequest response: \" + nsInfo);\n         break;\n       } catch(SocketTimeoutException e) {  // namenode is busy\n         LOG.warn(\"Problem connecting to server: \" + nnAddr);\n       } catch(IOException e ) {  // namenode is not available\n         LOG.warn(\"Problem connecting to server: \" + nnAddr);\n       }\n       \n       // try again in a second\n       sleepAndLogInterrupts(5000, \"requesting version info from NN\");\n     }\n     \n     if (nsInfo !\u003d null) {\n-      checkNNVersion(nsInfo);        \n+      checkNNVersion(nsInfo);\n+    } else {\n+      throw new IOException(\"DN shut down before block pool connected\");\n     }\n     return nsInfo;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  NamespaceInfo retrieveNamespaceInfo() throws IOException {\n    NamespaceInfo nsInfo \u003d null;\n    while (shouldRun()) {\n      try {\n        nsInfo \u003d bpNamenode.versionRequest();\n        LOG.debug(this + \" received versionRequest response: \" + nsInfo);\n        break;\n      } catch(SocketTimeoutException e) {  // namenode is busy\n        LOG.warn(\"Problem connecting to server: \" + nnAddr);\n      } catch(IOException e ) {  // namenode is not available\n        LOG.warn(\"Problem connecting to server: \" + nnAddr);\n      }\n      \n      // try again in a second\n      sleepAndLogInterrupts(5000, \"requesting version info from NN\");\n    }\n    \n    if (nsInfo !\u003d null) {\n      checkNNVersion(nsInfo);\n    } else {\n      throw new IOException(\"DN shut down before block pool connected\");\n    }\n    return nsInfo;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPServiceActor.java",
          "extendedDetails": {}
        }
      ]
    },
    "39ce694d05c6d8c428bd87bc1b9c95f94dfdf6fd": {
      "type": "Ymovefromfile",
      "commitMessage": "HDFS-2566. Move BPOfferService to be a non-inner class. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1204659 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/11/11 11:27 AM",
      "commitName": "39ce694d05c6d8c428bd87bc1b9c95f94dfdf6fd",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "21/11/11 11:03 AM",
      "commitNameOld": "68173af69d2fbda3292404c90a5077483e14d6f4",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n-    NamespaceInfo retrieveNamespaceInfo() throws IncorrectVersionException {\n-      NamespaceInfo nsInfo \u003d null;\n-      while (shouldRun()) {\n-        try {\n-          nsInfo \u003d bpNamenode.versionRequest();\n-          LOG.debug(this + \" received versionRequest response: \" + nsInfo);\n-          break;\n-        } catch(SocketTimeoutException e) {  // namenode is busy\n-          LOG.warn(\"Problem connecting to server: \" + nnAddr);\n-        } catch(IOException e ) {  // namenode is not available\n-          LOG.warn(\"Problem connecting to server: \" + nnAddr);\n-        }\n-        \n-        // try again in a second\n-        sleepAndLogInterrupts(5000, \"requesting version info from NN\");\n+  NamespaceInfo retrieveNamespaceInfo() throws IncorrectVersionException {\n+    NamespaceInfo nsInfo \u003d null;\n+    while (shouldRun()) {\n+      try {\n+        nsInfo \u003d bpNamenode.versionRequest();\n+        LOG.debug(this + \" received versionRequest response: \" + nsInfo);\n+        break;\n+      } catch(SocketTimeoutException e) {  // namenode is busy\n+        LOG.warn(\"Problem connecting to server: \" + nnAddr);\n+      } catch(IOException e ) {  // namenode is not available\n+        LOG.warn(\"Problem connecting to server: \" + nnAddr);\n       }\n       \n-      if (nsInfo !\u003d null) {\n-        checkNNVersion(nsInfo);        \n-      }\n-      return nsInfo;\n-    }\n\\ No newline at end of file\n+      // try again in a second\n+      sleepAndLogInterrupts(5000, \"requesting version info from NN\");\n+    }\n+    \n+    if (nsInfo !\u003d null) {\n+      checkNNVersion(nsInfo);        \n+    }\n+    return nsInfo;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  NamespaceInfo retrieveNamespaceInfo() throws IncorrectVersionException {\n    NamespaceInfo nsInfo \u003d null;\n    while (shouldRun()) {\n      try {\n        nsInfo \u003d bpNamenode.versionRequest();\n        LOG.debug(this + \" received versionRequest response: \" + nsInfo);\n        break;\n      } catch(SocketTimeoutException e) {  // namenode is busy\n        LOG.warn(\"Problem connecting to server: \" + nnAddr);\n      } catch(IOException e ) {  // namenode is not available\n        LOG.warn(\"Problem connecting to server: \" + nnAddr);\n      }\n      \n      // try again in a second\n      sleepAndLogInterrupts(5000, \"requesting version info from NN\");\n    }\n    \n    if (nsInfo !\u003d null) {\n      checkNNVersion(nsInfo);        \n    }\n    return nsInfo;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPOfferService.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataNode.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPOfferService.java",
        "oldMethodName": "retrieveNamespaceInfo",
        "newMethodName": "retrieveNamespaceInfo"
      }
    },
    "1f92266516c882e43fa453b876dd8ca09893c477": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-2563. Some cleanup in BPOfferService. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1203943 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/11/11 5:31 PM",
      "commitName": "1f92266516c882e43fa453b876dd8ca09893c477",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,22 @@\n+    NamespaceInfo retrieveNamespaceInfo() throws IncorrectVersionException {\n+      NamespaceInfo nsInfo \u003d null;\n+      while (shouldRun()) {\n+        try {\n+          nsInfo \u003d bpNamenode.versionRequest();\n+          LOG.debug(this + \" received versionRequest response: \" + nsInfo);\n+          break;\n+        } catch(SocketTimeoutException e) {  // namenode is busy\n+          LOG.warn(\"Problem connecting to server: \" + nnAddr);\n+        } catch(IOException e ) {  // namenode is not available\n+          LOG.warn(\"Problem connecting to server: \" + nnAddr);\n+        }\n+        \n+        // try again in a second\n+        sleepAndLogInterrupts(5000, \"requesting version info from NN\");\n+      }\n+      \n+      if (nsInfo !\u003d null) {\n+        checkNNVersion(nsInfo);        \n+      }\n+      return nsInfo;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    NamespaceInfo retrieveNamespaceInfo() throws IncorrectVersionException {\n      NamespaceInfo nsInfo \u003d null;\n      while (shouldRun()) {\n        try {\n          nsInfo \u003d bpNamenode.versionRequest();\n          LOG.debug(this + \" received versionRequest response: \" + nsInfo);\n          break;\n        } catch(SocketTimeoutException e) {  // namenode is busy\n          LOG.warn(\"Problem connecting to server: \" + nnAddr);\n        } catch(IOException e ) {  // namenode is not available\n          LOG.warn(\"Problem connecting to server: \" + nnAddr);\n        }\n        \n        // try again in a second\n        sleepAndLogInterrupts(5000, \"requesting version info from NN\");\n      }\n      \n      if (nsInfo !\u003d null) {\n        checkNNVersion(nsInfo);        \n      }\n      return nsInfo;\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataNode.java"
    }
  }
}