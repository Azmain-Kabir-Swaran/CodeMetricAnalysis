{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NativeAzureFileSystem.java",
  "functionName": "getOwnerForPath",
  "functionId": "getOwnerForPath___absolutePath-Path",
  "sourceFilePath": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/NativeAzureFileSystem.java",
  "functionStartLine": 3921,
  "functionEndLine": 3950,
  "numCommitsSeen": 66,
  "timeTaken": 2167,
  "changeHistory": [
    "45d9568aaaf532a6da11bd7c1844ff81bf66bab1",
    "89bb8bfe582ba85566cede321b233bb642f1c675"
  ],
  "changeHistoryShort": {
    "45d9568aaaf532a6da11bd7c1844ff81bf66bab1": "Ybodychange",
    "89bb8bfe582ba85566cede321b233bb642f1c675": "Yintroduced"
  },
  "changeHistoryDetails": {
    "45d9568aaaf532a6da11bd7c1844ff81bf66bab1": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15547/ WASB: improve listStatus performance.\nContributed by Thomas Marquardt.\n\n(cherry picked from commit 749fff577ed9afb4ef8a54b8948f74be083cc620)\n",
      "commitDate": "19/07/18 12:31 PM",
      "commitName": "45d9568aaaf532a6da11bd7c1844ff81bf66bab1",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "27/06/18 10:37 PM",
      "commitNameOld": "2b2399d623539ab68e71a38fa9fbfc9a405bddb8",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 21.58,
      "commitsBetweenForRepo": 124,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,30 @@\n   public String getOwnerForPath(Path absolutePath) throws IOException {\n     String owner \u003d \"\";\n     FileMetadata meta \u003d null;\n     String key \u003d pathToKey(absolutePath);\n     try {\n \n       meta \u003d store.retrieveMetadata(key);\n \n       if (meta !\u003d null) {\n-        owner \u003d meta.getPermissionStatus().getUserName();\n+        owner \u003d meta.getOwner();\n         LOG.debug(\"Retrieved \u0027{}\u0027 as owner for path - {}\", owner, absolutePath);\n       } else {\n         // meta will be null if file/folder doen not exist\n         LOG.debug(\"Cannot find file/folder - \u0027{}\u0027. Returning owner as empty string\", absolutePath);\n       }\n     } catch(IOException ex) {\n \n           Throwable innerException \u003d NativeAzureFileSystemHelper.checkForAzureStorageException(ex);\n           boolean isfileNotFoundException \u003d innerException instanceof StorageException\n             \u0026\u0026 NativeAzureFileSystemHelper.isFileNotFoundException((StorageException) innerException);\n \n           // should not throw when the exception is related to blob/container/file/folder not found\n           if (!isfileNotFoundException) {\n             String errorMsg \u003d \"Could not retrieve owner information for path - \" + absolutePath;\n             LOG.error(errorMsg);\n             throw new IOException(errorMsg, ex);\n           }\n       }\n     return owner;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String getOwnerForPath(Path absolutePath) throws IOException {\n    String owner \u003d \"\";\n    FileMetadata meta \u003d null;\n    String key \u003d pathToKey(absolutePath);\n    try {\n\n      meta \u003d store.retrieveMetadata(key);\n\n      if (meta !\u003d null) {\n        owner \u003d meta.getOwner();\n        LOG.debug(\"Retrieved \u0027{}\u0027 as owner for path - {}\", owner, absolutePath);\n      } else {\n        // meta will be null if file/folder doen not exist\n        LOG.debug(\"Cannot find file/folder - \u0027{}\u0027. Returning owner as empty string\", absolutePath);\n      }\n    } catch(IOException ex) {\n\n          Throwable innerException \u003d NativeAzureFileSystemHelper.checkForAzureStorageException(ex);\n          boolean isfileNotFoundException \u003d innerException instanceof StorageException\n            \u0026\u0026 NativeAzureFileSystemHelper.isFileNotFoundException((StorageException) innerException);\n\n          // should not throw when the exception is related to blob/container/file/folder not found\n          if (!isfileNotFoundException) {\n            String errorMsg \u003d \"Could not retrieve owner information for path - \" + absolutePath;\n            LOG.error(errorMsg);\n            throw new IOException(errorMsg, ex);\n          }\n      }\n    return owner;\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/NativeAzureFileSystem.java",
      "extendedDetails": {}
    },
    "89bb8bfe582ba85566cede321b233bb642f1c675": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-14442. Owner support for ranger-wasb integration. Contributed by Varada Hemeswari\n",
      "commitDate": "26/05/17 5:54 PM",
      "commitName": "89bb8bfe582ba85566cede321b233bb642f1c675",
      "commitAuthor": "Mingliang Liu",
      "diff": "@@ -0,0 +1,30 @@\n+  public String getOwnerForPath(Path absolutePath) throws IOException {\n+    String owner \u003d \"\";\n+    FileMetadata meta \u003d null;\n+    String key \u003d pathToKey(absolutePath);\n+    try {\n+\n+      meta \u003d store.retrieveMetadata(key);\n+\n+      if (meta !\u003d null) {\n+        owner \u003d meta.getPermissionStatus().getUserName();\n+        LOG.debug(\"Retrieved \u0027{}\u0027 as owner for path - {}\", owner, absolutePath);\n+      } else {\n+        // meta will be null if file/folder doen not exist\n+        LOG.debug(\"Cannot find file/folder - \u0027{}\u0027. Returning owner as empty string\", absolutePath);\n+      }\n+    } catch(IOException ex) {\n+\n+          Throwable innerException \u003d NativeAzureFileSystemHelper.checkForAzureStorageException(ex);\n+          boolean isfileNotFoundException \u003d innerException instanceof StorageException\n+            \u0026\u0026 NativeAzureFileSystemHelper.isFileNotFoundException((StorageException) innerException);\n+\n+          // should not throw when the exception is related to blob/container/file/folder not found\n+          if (!isfileNotFoundException) {\n+            String errorMsg \u003d \"Could not retrieve owner information for path - \" + absolutePath;\n+            LOG.error(errorMsg);\n+            throw new IOException(errorMsg, ex);\n+          }\n+      }\n+    return owner;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public String getOwnerForPath(Path absolutePath) throws IOException {\n    String owner \u003d \"\";\n    FileMetadata meta \u003d null;\n    String key \u003d pathToKey(absolutePath);\n    try {\n\n      meta \u003d store.retrieveMetadata(key);\n\n      if (meta !\u003d null) {\n        owner \u003d meta.getPermissionStatus().getUserName();\n        LOG.debug(\"Retrieved \u0027{}\u0027 as owner for path - {}\", owner, absolutePath);\n      } else {\n        // meta will be null if file/folder doen not exist\n        LOG.debug(\"Cannot find file/folder - \u0027{}\u0027. Returning owner as empty string\", absolutePath);\n      }\n    } catch(IOException ex) {\n\n          Throwable innerException \u003d NativeAzureFileSystemHelper.checkForAzureStorageException(ex);\n          boolean isfileNotFoundException \u003d innerException instanceof StorageException\n            \u0026\u0026 NativeAzureFileSystemHelper.isFileNotFoundException((StorageException) innerException);\n\n          // should not throw when the exception is related to blob/container/file/folder not found\n          if (!isfileNotFoundException) {\n            String errorMsg \u003d \"Could not retrieve owner information for path - \" + absolutePath;\n            LOG.error(errorMsg);\n            throw new IOException(errorMsg, ex);\n          }\n      }\n    return owner;\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/NativeAzureFileSystem.java"
    }
  }
}