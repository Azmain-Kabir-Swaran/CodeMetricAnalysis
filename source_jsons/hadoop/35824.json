{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMNodeImpl.java",
  "functionName": "deactivateNode",
  "functionId": "deactivateNode___rmNode-RMNodeImpl__finalState-NodeState",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmnode/RMNodeImpl.java",
  "functionStartLine": 1095,
  "functionEndLine": 1111,
  "numCommitsSeen": 92,
  "timeTaken": 3030,
  "changeHistory": [
    "d0da13229cf692579c8c9db47a93f6c6255392c8",
    "2a5da97f81d69b481e4d1324a47e64bb55b9407c",
    "1cbcd4a491e6a57d466c2897335614dc6770b475",
    "6b0f813e898cbd14b2ae52ecfed6d30bce8cb6b7",
    "9bc913a35c46e65d373c3ae3f01a377e16e8d0ca"
  ],
  "changeHistoryShort": {
    "d0da13229cf692579c8c9db47a93f6c6255392c8": "Ybodychange",
    "2a5da97f81d69b481e4d1324a47e64bb55b9407c": "Ybodychange",
    "1cbcd4a491e6a57d466c2897335614dc6770b475": "Ybodychange",
    "6b0f813e898cbd14b2ae52ecfed6d30bce8cb6b7": "Ybodychange",
    "9bc913a35c46e65d373c3ae3f01a377e16e8d0ca": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d0da13229cf692579c8c9db47a93f6c6255392c8": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4311. Removing nodes from include and exclude lists will not remove them from decommissioned nodes list. Contributed by Kuhu Shukla\n",
      "commitDate": "05/05/16 7:07 AM",
      "commitName": "d0da13229cf692579c8c9db47a93f6c6255392c8",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "26/04/16 8:12 PM",
      "commitNameOld": "341888a0aa23f24458b4e6e34868794b9735c06a",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 8.46,
      "commitsBetweenForRepo": 49,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,17 @@\n   public static void deactivateNode(RMNodeImpl rmNode, NodeState finalState) {\n \n     if (rmNode.getNodeID().getPort() \u003d\u003d -1) {\n       rmNode.updateMetricsForDeactivatedNode(rmNode.getState(), finalState);\n       return;\n     }\n     reportNodeUnusable(rmNode, finalState);\n \n     // Deactivate the node\n     rmNode.context.getRMNodes().remove(rmNode.nodeId);\n     LOG.info(\"Deactivating Node \" + rmNode.nodeId + \" as it is now \"\n         + finalState);\n     rmNode.context.getInactiveRMNodes().put(rmNode.nodeId, rmNode);\n+    if (rmNode.context.getNodesListManager().isUntrackedNode(rmNode.hostName)) {\n+      rmNode.setUntrackedTimeStamp(Time.monotonicNow());\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void deactivateNode(RMNodeImpl rmNode, NodeState finalState) {\n\n    if (rmNode.getNodeID().getPort() \u003d\u003d -1) {\n      rmNode.updateMetricsForDeactivatedNode(rmNode.getState(), finalState);\n      return;\n    }\n    reportNodeUnusable(rmNode, finalState);\n\n    // Deactivate the node\n    rmNode.context.getRMNodes().remove(rmNode.nodeId);\n    LOG.info(\"Deactivating Node \" + rmNode.nodeId + \" as it is now \"\n        + finalState);\n    rmNode.context.getInactiveRMNodes().put(rmNode.nodeId, rmNode);\n    if (rmNode.context.getNodesListManager().isUntrackedNode(rmNode.hostName)) {\n      rmNode.setUntrackedTimeStamp(Time.monotonicNow());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmnode/RMNodeImpl.java",
      "extendedDetails": {}
    },
    "2a5da97f81d69b481e4d1324a47e64bb55b9407c": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"YARN-4311. Removing nodes from include and exclude lists will not remove them from decommissioned nodes list. Contributed by Kuhu Shukla\"\n\nThis reverts commit 1cbcd4a491e6a57d466c2897335614dc6770b475.\n",
      "commitDate": "11/04/16 8:51 AM",
      "commitName": "2a5da97f81d69b481e4d1324a47e64bb55b9407c",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "05/04/16 6:40 AM",
      "commitNameOld": "1cbcd4a491e6a57d466c2897335614dc6770b475",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 6.09,
      "commitsBetweenForRepo": 38,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,14 @@\n   public static void deactivateNode(RMNodeImpl rmNode, NodeState finalState) {\n \n     if (rmNode.getNodeID().getPort() \u003d\u003d -1) {\n       rmNode.updateMetricsForDeactivatedNode(rmNode.getState(), finalState);\n       return;\n     }\n     reportNodeUnusable(rmNode, finalState);\n \n     // Deactivate the node\n     rmNode.context.getRMNodes().remove(rmNode.nodeId);\n     LOG.info(\"Deactivating Node \" + rmNode.nodeId + \" as it is now \"\n         + finalState);\n     rmNode.context.getInactiveRMNodes().put(rmNode.nodeId, rmNode);\n-    if (finalState \u003d\u003d NodeState.SHUTDOWN \u0026\u0026\n-        rmNode.context.getNodesListManager().isUntrackedNode(rmNode.hostName)) {\n-      rmNode.setUntrackedTimeStamp(Time.monotonicNow());\n-    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void deactivateNode(RMNodeImpl rmNode, NodeState finalState) {\n\n    if (rmNode.getNodeID().getPort() \u003d\u003d -1) {\n      rmNode.updateMetricsForDeactivatedNode(rmNode.getState(), finalState);\n      return;\n    }\n    reportNodeUnusable(rmNode, finalState);\n\n    // Deactivate the node\n    rmNode.context.getRMNodes().remove(rmNode.nodeId);\n    LOG.info(\"Deactivating Node \" + rmNode.nodeId + \" as it is now \"\n        + finalState);\n    rmNode.context.getInactiveRMNodes().put(rmNode.nodeId, rmNode);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmnode/RMNodeImpl.java",
      "extendedDetails": {}
    },
    "1cbcd4a491e6a57d466c2897335614dc6770b475": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4311. Removing nodes from include and exclude lists will not remove them from decommissioned nodes list. Contributed by Kuhu Shukla\n",
      "commitDate": "05/04/16 6:40 AM",
      "commitName": "1cbcd4a491e6a57d466c2897335614dc6770b475",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "26/02/16 12:24 PM",
      "commitNameOld": "6b0f813e898cbd14b2ae52ecfed6d30bce8cb6b7",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 38.72,
      "commitsBetweenForRepo": 221,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,18 @@\n   public static void deactivateNode(RMNodeImpl rmNode, NodeState finalState) {\n \n     if (rmNode.getNodeID().getPort() \u003d\u003d -1) {\n       rmNode.updateMetricsForDeactivatedNode(rmNode.getState(), finalState);\n       return;\n     }\n     reportNodeUnusable(rmNode, finalState);\n \n     // Deactivate the node\n     rmNode.context.getRMNodes().remove(rmNode.nodeId);\n     LOG.info(\"Deactivating Node \" + rmNode.nodeId + \" as it is now \"\n         + finalState);\n     rmNode.context.getInactiveRMNodes().put(rmNode.nodeId, rmNode);\n+    if (finalState \u003d\u003d NodeState.SHUTDOWN \u0026\u0026\n+        rmNode.context.getNodesListManager().isUntrackedNode(rmNode.hostName)) {\n+      rmNode.setUntrackedTimeStamp(Time.monotonicNow());\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void deactivateNode(RMNodeImpl rmNode, NodeState finalState) {\n\n    if (rmNode.getNodeID().getPort() \u003d\u003d -1) {\n      rmNode.updateMetricsForDeactivatedNode(rmNode.getState(), finalState);\n      return;\n    }\n    reportNodeUnusable(rmNode, finalState);\n\n    // Deactivate the node\n    rmNode.context.getRMNodes().remove(rmNode.nodeId);\n    LOG.info(\"Deactivating Node \" + rmNode.nodeId + \" as it is now \"\n        + finalState);\n    rmNode.context.getInactiveRMNodes().put(rmNode.nodeId, rmNode);\n    if (finalState \u003d\u003d NodeState.SHUTDOWN \u0026\u0026\n        rmNode.context.getNodesListManager().isUntrackedNode(rmNode.hostName)) {\n      rmNode.setUntrackedTimeStamp(Time.monotonicNow());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmnode/RMNodeImpl.java",
      "extendedDetails": {}
    },
    "6b0f813e898cbd14b2ae52ecfed6d30bce8cb6b7": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4723. NodesListManager$UnknownNodeId ClassCastException. Contributed by Kuhu Shukla\n",
      "commitDate": "26/02/16 12:24 PM",
      "commitName": "6b0f813e898cbd14b2ae52ecfed6d30bce8cb6b7",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "23/02/16 3:30 AM",
      "commitNameOld": "9ed17f181d96b8719a0ef54a129081948781d57e",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 3.37,
      "commitsBetweenForRepo": 29,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,14 @@\n   public static void deactivateNode(RMNodeImpl rmNode, NodeState finalState) {\n \n+    if (rmNode.getNodeID().getPort() \u003d\u003d -1) {\n+      rmNode.updateMetricsForDeactivatedNode(rmNode.getState(), finalState);\n+      return;\n+    }\n     reportNodeUnusable(rmNode, finalState);\n \n     // Deactivate the node\n     rmNode.context.getRMNodes().remove(rmNode.nodeId);\n     LOG.info(\"Deactivating Node \" + rmNode.nodeId + \" as it is now \"\n         + finalState);\n     rmNode.context.getInactiveRMNodes().put(rmNode.nodeId, rmNode);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void deactivateNode(RMNodeImpl rmNode, NodeState finalState) {\n\n    if (rmNode.getNodeID().getPort() \u003d\u003d -1) {\n      rmNode.updateMetricsForDeactivatedNode(rmNode.getState(), finalState);\n      return;\n    }\n    reportNodeUnusable(rmNode, finalState);\n\n    // Deactivate the node\n    rmNode.context.getRMNodes().remove(rmNode.nodeId);\n    LOG.info(\"Deactivating Node \" + rmNode.nodeId + \" as it is now \"\n        + finalState);\n    rmNode.context.getInactiveRMNodes().put(rmNode.nodeId, rmNode);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmnode/RMNodeImpl.java",
      "extendedDetails": {}
    },
    "9bc913a35c46e65d373c3ae3f01a377e16e8d0ca": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3212. RMNode State Transition Update with DECOMMISSIONING state. (Junping Du via wangda)\n",
      "commitDate": "18/09/15 10:04 AM",
      "commitName": "9bc913a35c46e65d373c3ae3f01a377e16e8d0ca",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,10 @@\n+  public static void deactivateNode(RMNodeImpl rmNode, NodeState finalState) {\n+\n+    reportNodeUnusable(rmNode, finalState);\n+\n+    // Deactivate the node\n+    rmNode.context.getRMNodes().remove(rmNode.nodeId);\n+    LOG.info(\"Deactivating Node \" + rmNode.nodeId + \" as it is now \"\n+        + finalState);\n+    rmNode.context.getInactiveRMNodes().put(rmNode.nodeId, rmNode);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static void deactivateNode(RMNodeImpl rmNode, NodeState finalState) {\n\n    reportNodeUnusable(rmNode, finalState);\n\n    // Deactivate the node\n    rmNode.context.getRMNodes().remove(rmNode.nodeId);\n    LOG.info(\"Deactivating Node \" + rmNode.nodeId + \" as it is now \"\n        + finalState);\n    rmNode.context.getInactiveRMNodes().put(rmNode.nodeId, rmNode);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmnode/RMNodeImpl.java"
    }
  }
}