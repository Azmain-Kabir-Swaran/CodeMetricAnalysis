{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FsDatasetImpl.java",
  "functionName": "activateVolume",
  "functionId": "activateVolume___replicaMap-ReplicaMap__sd-Storage.StorageDirectory__storageType-StorageType__ref-FsVolumeReference",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
  "functionStartLine": 441,
  "functionEndLine": 462,
  "numCommitsSeen": 197,
  "timeTaken": 6318,
  "changeHistory": [
    "d7c136b9ed6d99e1b03f5b89723b3a20df359ba8",
    "4b4200f1f87ad40d9c19ba160f706ffd0470a8d4",
    "96b12662ea76e3ded4ef13944fc8df206cfb4613",
    "8c0638471f8f1dd47667b2d6727d4d2d54e4b48c",
    "04375756a5ed6e907ee7548469c2c508aebbafb7"
  ],
  "changeHistoryShort": {
    "d7c136b9ed6d99e1b03f5b89723b3a20df359ba8": "Ybodychange",
    "4b4200f1f87ad40d9c19ba160f706ffd0470a8d4": "Ybodychange",
    "96b12662ea76e3ded4ef13944fc8df206cfb4613": "Ybodychange",
    "8c0638471f8f1dd47667b2d6727d4d2d54e4b48c": "Ymultichange(Ymodifierchange,Ybodychange)",
    "04375756a5ed6e907ee7548469c2c508aebbafb7": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d7c136b9ed6d99e1b03f5b89723b3a20df359ba8": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-15150. Introduce read write lock to Datanode. Contributed Stephen O\u0027Donnell.\n\nSigned-off-by: Wei-Chiu Chuang \u003cweichiu@apache.org\u003e\n",
      "commitDate": "11/02/20 8:00 AM",
      "commitName": "d7c136b9ed6d99e1b03f5b89723b3a20df359ba8",
      "commitAuthor": "Stephen O\u0027Donnell",
      "commitDateOld": "28/01/20 10:10 AM",
      "commitNameOld": "1839c467f60cbb8592d446694ec3d7710cda5142",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 13.91,
      "commitsBetweenForRepo": 33,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n   private void activateVolume(\n       ReplicaMap replicaMap,\n       Storage.StorageDirectory sd, StorageType storageType,\n       FsVolumeReference ref) throws IOException {\n-    try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n+    try (AutoCloseableLock lock \u003d datasetWriteLock.acquire()) {\n       DatanodeStorage dnStorage \u003d storageMap.get(sd.getStorageUuid());\n       if (dnStorage !\u003d null) {\n         final String errorMsg \u003d String.format(\n             \"Found duplicated storage UUID: %s in %s.\",\n             sd.getStorageUuid(), sd.getVersionFile());\n         LOG.error(errorMsg);\n         throw new IOException(errorMsg);\n       }\n       volumeMap.mergeAll(replicaMap);\n       storageMap.put(sd.getStorageUuid(),\n           new DatanodeStorage(sd.getStorageUuid(),\n               DatanodeStorage.State.NORMAL,\n               storageType));\n       asyncDiskService.addVolume((FsVolumeImpl) ref.getVolume());\n       volumes.addVolume(ref);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void activateVolume(\n      ReplicaMap replicaMap,\n      Storage.StorageDirectory sd, StorageType storageType,\n      FsVolumeReference ref) throws IOException {\n    try (AutoCloseableLock lock \u003d datasetWriteLock.acquire()) {\n      DatanodeStorage dnStorage \u003d storageMap.get(sd.getStorageUuid());\n      if (dnStorage !\u003d null) {\n        final String errorMsg \u003d String.format(\n            \"Found duplicated storage UUID: %s in %s.\",\n            sd.getStorageUuid(), sd.getVersionFile());\n        LOG.error(errorMsg);\n        throw new IOException(errorMsg);\n      }\n      volumeMap.mergeAll(replicaMap);\n      storageMap.put(sd.getStorageUuid(),\n          new DatanodeStorage(sd.getStorageUuid(),\n              DatanodeStorage.State.NORMAL,\n              storageType));\n      asyncDiskService.addVolume((FsVolumeImpl) ref.getVolume());\n      volumes.addVolume(ref);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
      "extendedDetails": {}
    },
    "4b4200f1f87ad40d9c19ba160f706ffd0470a8d4": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13677. Dynamic refresh Disk configuration results in overwriting VolumeMap. Contributed by xuzq.\n",
      "commitDate": "29/04/19 2:49 PM",
      "commitName": "4b4200f1f87ad40d9c19ba160f706ffd0470a8d4",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "30/03/19 11:33 PM",
      "commitNameOld": "35ff31dd9462cf4fb4ebf5556ee8ae6bcd7c5c3a",
      "commitAuthorOld": "Uma Maheswara Rao G",
      "daysBetweenCommits": 29.64,
      "commitsBetweenForRepo": 190,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n   private void activateVolume(\n       ReplicaMap replicaMap,\n       Storage.StorageDirectory sd, StorageType storageType,\n       FsVolumeReference ref) throws IOException {\n     try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n       DatanodeStorage dnStorage \u003d storageMap.get(sd.getStorageUuid());\n       if (dnStorage !\u003d null) {\n         final String errorMsg \u003d String.format(\n             \"Found duplicated storage UUID: %s in %s.\",\n             sd.getStorageUuid(), sd.getVersionFile());\n         LOG.error(errorMsg);\n         throw new IOException(errorMsg);\n       }\n-      volumeMap.addAll(replicaMap);\n+      volumeMap.mergeAll(replicaMap);\n       storageMap.put(sd.getStorageUuid(),\n           new DatanodeStorage(sd.getStorageUuid(),\n               DatanodeStorage.State.NORMAL,\n               storageType));\n       asyncDiskService.addVolume((FsVolumeImpl) ref.getVolume());\n       volumes.addVolume(ref);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void activateVolume(\n      ReplicaMap replicaMap,\n      Storage.StorageDirectory sd, StorageType storageType,\n      FsVolumeReference ref) throws IOException {\n    try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n      DatanodeStorage dnStorage \u003d storageMap.get(sd.getStorageUuid());\n      if (dnStorage !\u003d null) {\n        final String errorMsg \u003d String.format(\n            \"Found duplicated storage UUID: %s in %s.\",\n            sd.getStorageUuid(), sd.getVersionFile());\n        LOG.error(errorMsg);\n        throw new IOException(errorMsg);\n      }\n      volumeMap.mergeAll(replicaMap);\n      storageMap.put(sd.getStorageUuid(),\n          new DatanodeStorage(sd.getStorageUuid(),\n              DatanodeStorage.State.NORMAL,\n              storageType));\n      asyncDiskService.addVolume((FsVolumeImpl) ref.getVolume());\n      volumes.addVolume(ref);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
      "extendedDetails": {}
    },
    "96b12662ea76e3ded4ef13944fc8df206cfb4613": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10637. Modifications to remove the assumption that FsVolumes are backed by java.io.File. (Virajith Jalaparti via lei)\n",
      "commitDate": "10/10/16 3:30 PM",
      "commitName": "96b12662ea76e3ded4ef13944fc8df206cfb4613",
      "commitAuthor": "Lei Xu",
      "commitDateOld": "30/09/16 11:11 PM",
      "commitNameOld": "fe9ebe20ab113567f0777c11cb48ce0d3ce587a8",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 9.68,
      "commitsBetweenForRepo": 64,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n   private void activateVolume(\n       ReplicaMap replicaMap,\n       Storage.StorageDirectory sd, StorageType storageType,\n       FsVolumeReference ref) throws IOException {\n     try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n       DatanodeStorage dnStorage \u003d storageMap.get(sd.getStorageUuid());\n       if (dnStorage !\u003d null) {\n         final String errorMsg \u003d String.format(\n             \"Found duplicated storage UUID: %s in %s.\",\n             sd.getStorageUuid(), sd.getVersionFile());\n         LOG.error(errorMsg);\n         throw new IOException(errorMsg);\n       }\n       volumeMap.addAll(replicaMap);\n       storageMap.put(sd.getStorageUuid(),\n           new DatanodeStorage(sd.getStorageUuid(),\n               DatanodeStorage.State.NORMAL,\n               storageType));\n-      asyncDiskService.addVolume(sd.getCurrentDir());\n+      asyncDiskService.addVolume((FsVolumeImpl) ref.getVolume());\n       volumes.addVolume(ref);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void activateVolume(\n      ReplicaMap replicaMap,\n      Storage.StorageDirectory sd, StorageType storageType,\n      FsVolumeReference ref) throws IOException {\n    try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n      DatanodeStorage dnStorage \u003d storageMap.get(sd.getStorageUuid());\n      if (dnStorage !\u003d null) {\n        final String errorMsg \u003d String.format(\n            \"Found duplicated storage UUID: %s in %s.\",\n            sd.getStorageUuid(), sd.getVersionFile());\n        LOG.error(errorMsg);\n        throw new IOException(errorMsg);\n      }\n      volumeMap.addAll(replicaMap);\n      storageMap.put(sd.getStorageUuid(),\n          new DatanodeStorage(sd.getStorageUuid(),\n              DatanodeStorage.State.NORMAL,\n              storageType));\n      asyncDiskService.addVolume((FsVolumeImpl) ref.getVolume());\n      volumes.addVolume(ref);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
      "extendedDetails": {}
    },
    "8c0638471f8f1dd47667b2d6727d4d2d54e4b48c": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "HADOOP-10682. Replace FsDatasetImpl object lock with a separate lock object. (Chen Liang)\n",
      "commitDate": "08/08/16 12:02 PM",
      "commitName": "8c0638471f8f1dd47667b2d6727d4d2d54e4b48c",
      "commitAuthor": "Arpit Agarwal",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "HADOOP-10682. Replace FsDatasetImpl object lock with a separate lock object. (Chen Liang)\n",
          "commitDate": "08/08/16 12:02 PM",
          "commitName": "8c0638471f8f1dd47667b2d6727d4d2d54e4b48c",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "08/07/16 7:40 PM",
          "commitNameOld": "da6f1b88dd47e22b24d44f6fc8bbee73e85746f7",
          "commitAuthorOld": "Yongjun Zhang",
          "daysBetweenCommits": 30.68,
          "commitsBetweenForRepo": 320,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,22 @@\n-  private synchronized void activateVolume(\n+  private void activateVolume(\n       ReplicaMap replicaMap,\n       Storage.StorageDirectory sd, StorageType storageType,\n       FsVolumeReference ref) throws IOException {\n-    DatanodeStorage dnStorage \u003d storageMap.get(sd.getStorageUuid());\n-    if (dnStorage !\u003d null) {\n-      final String errorMsg \u003d String.format(\n-          \"Found duplicated storage UUID: %s in %s.\",\n-          sd.getStorageUuid(), sd.getVersionFile());\n-      LOG.error(errorMsg);\n-      throw new IOException(errorMsg);\n+    try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n+      DatanodeStorage dnStorage \u003d storageMap.get(sd.getStorageUuid());\n+      if (dnStorage !\u003d null) {\n+        final String errorMsg \u003d String.format(\n+            \"Found duplicated storage UUID: %s in %s.\",\n+            sd.getStorageUuid(), sd.getVersionFile());\n+        LOG.error(errorMsg);\n+        throw new IOException(errorMsg);\n+      }\n+      volumeMap.addAll(replicaMap);\n+      storageMap.put(sd.getStorageUuid(),\n+          new DatanodeStorage(sd.getStorageUuid(),\n+              DatanodeStorage.State.NORMAL,\n+              storageType));\n+      asyncDiskService.addVolume(sd.getCurrentDir());\n+      volumes.addVolume(ref);\n     }\n-    volumeMap.addAll(replicaMap);\n-    storageMap.put(sd.getStorageUuid(),\n-        new DatanodeStorage(sd.getStorageUuid(),\n-            DatanodeStorage.State.NORMAL,\n-            storageType));\n-    asyncDiskService.addVolume(sd.getCurrentDir());\n-    volumes.addVolume(ref);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void activateVolume(\n      ReplicaMap replicaMap,\n      Storage.StorageDirectory sd, StorageType storageType,\n      FsVolumeReference ref) throws IOException {\n    try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n      DatanodeStorage dnStorage \u003d storageMap.get(sd.getStorageUuid());\n      if (dnStorage !\u003d null) {\n        final String errorMsg \u003d String.format(\n            \"Found duplicated storage UUID: %s in %s.\",\n            sd.getStorageUuid(), sd.getVersionFile());\n        LOG.error(errorMsg);\n        throw new IOException(errorMsg);\n      }\n      volumeMap.addAll(replicaMap);\n      storageMap.put(sd.getStorageUuid(),\n          new DatanodeStorage(sd.getStorageUuid(),\n              DatanodeStorage.State.NORMAL,\n              storageType));\n      asyncDiskService.addVolume(sd.getCurrentDir());\n      volumes.addVolume(ref);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
          "extendedDetails": {
            "oldValue": "[private, synchronized]",
            "newValue": "[private]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-10682. Replace FsDatasetImpl object lock with a separate lock object. (Chen Liang)\n",
          "commitDate": "08/08/16 12:02 PM",
          "commitName": "8c0638471f8f1dd47667b2d6727d4d2d54e4b48c",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "08/07/16 7:40 PM",
          "commitNameOld": "da6f1b88dd47e22b24d44f6fc8bbee73e85746f7",
          "commitAuthorOld": "Yongjun Zhang",
          "daysBetweenCommits": 30.68,
          "commitsBetweenForRepo": 320,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,22 @@\n-  private synchronized void activateVolume(\n+  private void activateVolume(\n       ReplicaMap replicaMap,\n       Storage.StorageDirectory sd, StorageType storageType,\n       FsVolumeReference ref) throws IOException {\n-    DatanodeStorage dnStorage \u003d storageMap.get(sd.getStorageUuid());\n-    if (dnStorage !\u003d null) {\n-      final String errorMsg \u003d String.format(\n-          \"Found duplicated storage UUID: %s in %s.\",\n-          sd.getStorageUuid(), sd.getVersionFile());\n-      LOG.error(errorMsg);\n-      throw new IOException(errorMsg);\n+    try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n+      DatanodeStorage dnStorage \u003d storageMap.get(sd.getStorageUuid());\n+      if (dnStorage !\u003d null) {\n+        final String errorMsg \u003d String.format(\n+            \"Found duplicated storage UUID: %s in %s.\",\n+            sd.getStorageUuid(), sd.getVersionFile());\n+        LOG.error(errorMsg);\n+        throw new IOException(errorMsg);\n+      }\n+      volumeMap.addAll(replicaMap);\n+      storageMap.put(sd.getStorageUuid(),\n+          new DatanodeStorage(sd.getStorageUuid(),\n+              DatanodeStorage.State.NORMAL,\n+              storageType));\n+      asyncDiskService.addVolume(sd.getCurrentDir());\n+      volumes.addVolume(ref);\n     }\n-    volumeMap.addAll(replicaMap);\n-    storageMap.put(sd.getStorageUuid(),\n-        new DatanodeStorage(sd.getStorageUuid(),\n-            DatanodeStorage.State.NORMAL,\n-            storageType));\n-    asyncDiskService.addVolume(sd.getCurrentDir());\n-    volumes.addVolume(ref);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void activateVolume(\n      ReplicaMap replicaMap,\n      Storage.StorageDirectory sd, StorageType storageType,\n      FsVolumeReference ref) throws IOException {\n    try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n      DatanodeStorage dnStorage \u003d storageMap.get(sd.getStorageUuid());\n      if (dnStorage !\u003d null) {\n        final String errorMsg \u003d String.format(\n            \"Found duplicated storage UUID: %s in %s.\",\n            sd.getStorageUuid(), sd.getVersionFile());\n        LOG.error(errorMsg);\n        throw new IOException(errorMsg);\n      }\n      volumeMap.addAll(replicaMap);\n      storageMap.put(sd.getStorageUuid(),\n          new DatanodeStorage(sd.getStorageUuid(),\n              DatanodeStorage.State.NORMAL,\n              storageType));\n      asyncDiskService.addVolume(sd.getCurrentDir());\n      volumes.addVolume(ref);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "04375756a5ed6e907ee7548469c2c508aebbafb7": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-9715. Check storage ID uniqueness on datanode startup (Contributed by Lei (Eddy) Xu)\n",
      "commitDate": "02/02/16 6:05 PM",
      "commitName": "04375756a5ed6e907ee7548469c2c508aebbafb7",
      "commitAuthor": "Vinayakumar B",
      "diff": "@@ -0,0 +1,20 @@\n+  private synchronized void activateVolume(\n+      ReplicaMap replicaMap,\n+      Storage.StorageDirectory sd, StorageType storageType,\n+      FsVolumeReference ref) throws IOException {\n+    DatanodeStorage dnStorage \u003d storageMap.get(sd.getStorageUuid());\n+    if (dnStorage !\u003d null) {\n+      final String errorMsg \u003d String.format(\n+          \"Found duplicated storage UUID: %s in %s.\",\n+          sd.getStorageUuid(), sd.getVersionFile());\n+      LOG.error(errorMsg);\n+      throw new IOException(errorMsg);\n+    }\n+    volumeMap.addAll(replicaMap);\n+    storageMap.put(sd.getStorageUuid(),\n+        new DatanodeStorage(sd.getStorageUuid(),\n+            DatanodeStorage.State.NORMAL,\n+            storageType));\n+    asyncDiskService.addVolume(sd.getCurrentDir());\n+    volumes.addVolume(ref);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void activateVolume(\n      ReplicaMap replicaMap,\n      Storage.StorageDirectory sd, StorageType storageType,\n      FsVolumeReference ref) throws IOException {\n    DatanodeStorage dnStorage \u003d storageMap.get(sd.getStorageUuid());\n    if (dnStorage !\u003d null) {\n      final String errorMsg \u003d String.format(\n          \"Found duplicated storage UUID: %s in %s.\",\n          sd.getStorageUuid(), sd.getVersionFile());\n      LOG.error(errorMsg);\n      throw new IOException(errorMsg);\n    }\n    volumeMap.addAll(replicaMap);\n    storageMap.put(sd.getStorageUuid(),\n        new DatanodeStorage(sd.getStorageUuid(),\n            DatanodeStorage.State.NORMAL,\n            storageType));\n    asyncDiskService.addVolume(sd.getCurrentDir());\n    volumes.addVolume(ref);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java"
    }
  }
}