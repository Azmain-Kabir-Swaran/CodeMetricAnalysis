{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AppCatalogSolrClient.java",
  "functionName": "findAppEntry",
  "functionId": "findAppEntry___id-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-catalog/hadoop-yarn-applications-catalog-webapp/src/main/java/org/apache/hadoop/yarn/appcatalog/application/AppCatalogSolrClient.java",
  "functionStartLine": 223,
  "functionEndLine": 250,
  "numCommitsSeen": 7,
  "timeTaken": 846,
  "changeHistory": [
    "7ee32a2eb187d43f1c8d7c6416eebc13d461ee1e"
  ],
  "changeHistoryShort": {
    "7ee32a2eb187d43f1c8d7c6416eebc13d461ee1e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7ee32a2eb187d43f1c8d7c6416eebc13d461ee1e": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7129. Application Catalog for YARN applications. Contributed by Eric Yang\n",
      "commitDate": "29/03/19 1:51 PM",
      "commitName": "7ee32a2eb187d43f1c8d7c6416eebc13d461ee1e",
      "commitAuthor": "Billie Rinaldi",
      "diff": "@@ -0,0 +1,28 @@\n+  public AppEntry findAppEntry(String id) {\n+    AppEntry entry \u003d new AppEntry();\n+    ObjectMapper mapper \u003d new ObjectMapper();\n+    mapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);\n+\n+    SolrClient solr \u003d getSolrClient();\n+    SolrQuery query \u003d new SolrQuery();\n+    query.setQuery(\"id:\" + id);\n+    query.setFilterQueries(\"type_s:AppEntry\");\n+    query.setRows(1);\n+\n+    QueryResponse response;\n+    try {\n+      response \u003d solr.query(query);\n+      Iterator\u003cSolrDocument\u003e appList \u003d response.getResults().listIterator();\n+      while (appList.hasNext()) {\n+        SolrDocument d \u003d appList.next();\n+        entry.setId(d.get(\"id\").toString());\n+        entry.setApp(d.get(\"app_s\").toString());\n+        entry.setName(d.get(\"name_s\").toString());\n+        entry.setYarnfile(mapper.readValue(d.get(\"yarnfile_s\").toString(),\n+            Service.class));\n+      }\n+    } catch (SolrServerException | IOException e) {\n+      LOG.error(\"Error in finding deployed application: \" + id, e);\n+    }\n+    return entry;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public AppEntry findAppEntry(String id) {\n    AppEntry entry \u003d new AppEntry();\n    ObjectMapper mapper \u003d new ObjectMapper();\n    mapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);\n\n    SolrClient solr \u003d getSolrClient();\n    SolrQuery query \u003d new SolrQuery();\n    query.setQuery(\"id:\" + id);\n    query.setFilterQueries(\"type_s:AppEntry\");\n    query.setRows(1);\n\n    QueryResponse response;\n    try {\n      response \u003d solr.query(query);\n      Iterator\u003cSolrDocument\u003e appList \u003d response.getResults().listIterator();\n      while (appList.hasNext()) {\n        SolrDocument d \u003d appList.next();\n        entry.setId(d.get(\"id\").toString());\n        entry.setApp(d.get(\"app_s\").toString());\n        entry.setName(d.get(\"name_s\").toString());\n        entry.setYarnfile(mapper.readValue(d.get(\"yarnfile_s\").toString(),\n            Service.class));\n      }\n    } catch (SolrServerException | IOException e) {\n      LOG.error(\"Error in finding deployed application: \" + id, e);\n    }\n    return entry;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-catalog/hadoop-yarn-applications-catalog-webapp/src/main/java/org/apache/hadoop/yarn/appcatalog/application/AppCatalogSolrClient.java"
    }
  }
}