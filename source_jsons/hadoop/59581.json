{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AllocateRequestPBImpl.java",
  "functionName": "addUpdateRequestsToProto",
  "functionId": "addUpdateRequestsToProto",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/AllocateRequestPBImpl.java",
  "functionStartLine": 307,
  "functionEndLine": 341,
  "numCommitsSeen": 15,
  "timeTaken": 2935,
  "changeHistory": [
    "d6d9cff21b7b6141ed88359652cf22e8973c0661",
    "dfe2cb849fcb273d32e840d8562eaaee904af054",
    "9c4168f45ab66ac42cf836040db04b45437db66b"
  ],
  "changeHistoryShort": {
    "d6d9cff21b7b6141ed88359652cf22e8973c0661": "Ymultichange(Yrename,Ybodychange)",
    "dfe2cb849fcb273d32e840d8562eaaee904af054": "Ybodychange",
    "9c4168f45ab66ac42cf836040db04b45437db66b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d6d9cff21b7b6141ed88359652cf22e8973c0661": {
      "type": "Ymultichange(Yrename,Ybodychange)",
      "commitMessage": "YARN-5221. Expose UpdateResourceRequest API to allow AM to request for change in container properties. (asuresh)\n",
      "commitDate": "30/08/16 3:52 PM",
      "commitName": "d6d9cff21b7b6141ed88359652cf22e8973c0661",
      "commitAuthor": "Arun Suresh",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-5221. Expose UpdateResourceRequest API to allow AM to request for change in container properties. (asuresh)\n",
          "commitDate": "30/08/16 3:52 PM",
          "commitName": "d6d9cff21b7b6141ed88359652cf22e8973c0661",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "23/09/15 1:29 PM",
          "commitNameOld": "dfe2cb849fcb273d32e840d8562eaaee904af054",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 342.1,
          "commitsBetweenForRepo": 2425,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,35 +1,35 @@\n-  private void addIncreaseRequestsToProto() {\n+  private void addUpdateRequestsToProto() {\n     maybeInitBuilder();\n-    builder.clearIncreaseRequest();\n-    if (increaseRequests \u003d\u003d null) {\n+    builder.clearUpdateRequests();\n+    if (updateRequests \u003d\u003d null) {\n       return;\n     }\n-    Iterable\u003cContainerResourceChangeRequestProto\u003e iterable \u003d\n-        new Iterable\u003cContainerResourceChangeRequestProto\u003e() {\n+    Iterable\u003cUpdateContainerRequestProto\u003e iterable \u003d\n+        new Iterable\u003cUpdateContainerRequestProto\u003e() {\n           @Override\n-          public Iterator\u003cContainerResourceChangeRequestProto\u003e iterator() {\n-            return new Iterator\u003cContainerResourceChangeRequestProto\u003e() {\n+          public Iterator\u003cUpdateContainerRequestProto\u003e iterator() {\n+            return new Iterator\u003cUpdateContainerRequestProto\u003e() {\n \n-              Iterator\u003cContainerResourceChangeRequest\u003e iter \u003d\n-                  increaseRequests.iterator();\n+              private Iterator\u003cUpdateContainerRequest\u003e iter \u003d\n+                  updateRequests.iterator();\n \n               @Override\n               public boolean hasNext() {\n                 return iter.hasNext();\n               }\n \n               @Override\n-              public ContainerResourceChangeRequestProto next() {\n+              public UpdateContainerRequestProto next() {\n                 return convertToProtoFormat(iter.next());\n               }\n \n               @Override\n               public void remove() {\n                 throw new UnsupportedOperationException();\n               }\n             };\n \n           }\n         };\n-    builder.addAllIncreaseRequest(iterable);\n+    builder.addAllUpdateRequests(iterable);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void addUpdateRequestsToProto() {\n    maybeInitBuilder();\n    builder.clearUpdateRequests();\n    if (updateRequests \u003d\u003d null) {\n      return;\n    }\n    Iterable\u003cUpdateContainerRequestProto\u003e iterable \u003d\n        new Iterable\u003cUpdateContainerRequestProto\u003e() {\n          @Override\n          public Iterator\u003cUpdateContainerRequestProto\u003e iterator() {\n            return new Iterator\u003cUpdateContainerRequestProto\u003e() {\n\n              private Iterator\u003cUpdateContainerRequest\u003e iter \u003d\n                  updateRequests.iterator();\n\n              @Override\n              public boolean hasNext() {\n                return iter.hasNext();\n              }\n\n              @Override\n              public UpdateContainerRequestProto next() {\n                return convertToProtoFormat(iter.next());\n              }\n\n              @Override\n              public void remove() {\n                throw new UnsupportedOperationException();\n              }\n            };\n\n          }\n        };\n    builder.addAllUpdateRequests(iterable);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/AllocateRequestPBImpl.java",
          "extendedDetails": {
            "oldValue": "addIncreaseRequestsToProto",
            "newValue": "addUpdateRequestsToProto"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-5221. Expose UpdateResourceRequest API to allow AM to request for change in container properties. (asuresh)\n",
          "commitDate": "30/08/16 3:52 PM",
          "commitName": "d6d9cff21b7b6141ed88359652cf22e8973c0661",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "23/09/15 1:29 PM",
          "commitNameOld": "dfe2cb849fcb273d32e840d8562eaaee904af054",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 342.1,
          "commitsBetweenForRepo": 2425,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,35 +1,35 @@\n-  private void addIncreaseRequestsToProto() {\n+  private void addUpdateRequestsToProto() {\n     maybeInitBuilder();\n-    builder.clearIncreaseRequest();\n-    if (increaseRequests \u003d\u003d null) {\n+    builder.clearUpdateRequests();\n+    if (updateRequests \u003d\u003d null) {\n       return;\n     }\n-    Iterable\u003cContainerResourceChangeRequestProto\u003e iterable \u003d\n-        new Iterable\u003cContainerResourceChangeRequestProto\u003e() {\n+    Iterable\u003cUpdateContainerRequestProto\u003e iterable \u003d\n+        new Iterable\u003cUpdateContainerRequestProto\u003e() {\n           @Override\n-          public Iterator\u003cContainerResourceChangeRequestProto\u003e iterator() {\n-            return new Iterator\u003cContainerResourceChangeRequestProto\u003e() {\n+          public Iterator\u003cUpdateContainerRequestProto\u003e iterator() {\n+            return new Iterator\u003cUpdateContainerRequestProto\u003e() {\n \n-              Iterator\u003cContainerResourceChangeRequest\u003e iter \u003d\n-                  increaseRequests.iterator();\n+              private Iterator\u003cUpdateContainerRequest\u003e iter \u003d\n+                  updateRequests.iterator();\n \n               @Override\n               public boolean hasNext() {\n                 return iter.hasNext();\n               }\n \n               @Override\n-              public ContainerResourceChangeRequestProto next() {\n+              public UpdateContainerRequestProto next() {\n                 return convertToProtoFormat(iter.next());\n               }\n \n               @Override\n               public void remove() {\n                 throw new UnsupportedOperationException();\n               }\n             };\n \n           }\n         };\n-    builder.addAllIncreaseRequest(iterable);\n+    builder.addAllUpdateRequests(iterable);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void addUpdateRequestsToProto() {\n    maybeInitBuilder();\n    builder.clearUpdateRequests();\n    if (updateRequests \u003d\u003d null) {\n      return;\n    }\n    Iterable\u003cUpdateContainerRequestProto\u003e iterable \u003d\n        new Iterable\u003cUpdateContainerRequestProto\u003e() {\n          @Override\n          public Iterator\u003cUpdateContainerRequestProto\u003e iterator() {\n            return new Iterator\u003cUpdateContainerRequestProto\u003e() {\n\n              private Iterator\u003cUpdateContainerRequest\u003e iter \u003d\n                  updateRequests.iterator();\n\n              @Override\n              public boolean hasNext() {\n                return iter.hasNext();\n              }\n\n              @Override\n              public UpdateContainerRequestProto next() {\n                return convertToProtoFormat(iter.next());\n              }\n\n              @Override\n              public void remove() {\n                throw new UnsupportedOperationException();\n              }\n            };\n\n          }\n        };\n    builder.addAllUpdateRequests(iterable);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/AllocateRequestPBImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "dfe2cb849fcb273d32e840d8562eaaee904af054": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3866. AM-RM protocol changes to support container resizing. Contributed by Meng Ding\n",
      "commitDate": "23/09/15 1:29 PM",
      "commitName": "dfe2cb849fcb273d32e840d8562eaaee904af054",
      "commitAuthor": "Jian He",
      "commitDateOld": "09/12/13 9:44 AM",
      "commitNameOld": "9c4168f45ab66ac42cf836040db04b45437db66b",
      "commitAuthorOld": "Sanford Ryza",
      "daysBetweenCommits": 653.11,
      "commitsBetweenForRepo": 5045,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,35 @@\n   private void addIncreaseRequestsToProto() {\n     maybeInitBuilder();\n     builder.clearIncreaseRequest();\n     if (increaseRequests \u003d\u003d null) {\n       return;\n     }\n-    Iterable\u003cContainerResourceIncreaseRequestProto\u003e iterable \u003d\n-        new Iterable\u003cContainerResourceIncreaseRequestProto\u003e() {\n+    Iterable\u003cContainerResourceChangeRequestProto\u003e iterable \u003d\n+        new Iterable\u003cContainerResourceChangeRequestProto\u003e() {\n           @Override\n-          public Iterator\u003cContainerResourceIncreaseRequestProto\u003e iterator() {\n-            return new Iterator\u003cContainerResourceIncreaseRequestProto\u003e() {\n+          public Iterator\u003cContainerResourceChangeRequestProto\u003e iterator() {\n+            return new Iterator\u003cContainerResourceChangeRequestProto\u003e() {\n \n-              Iterator\u003cContainerResourceIncreaseRequest\u003e iter \u003d\n+              Iterator\u003cContainerResourceChangeRequest\u003e iter \u003d\n                   increaseRequests.iterator();\n \n               @Override\n               public boolean hasNext() {\n                 return iter.hasNext();\n               }\n \n               @Override\n-              public ContainerResourceIncreaseRequestProto next() {\n+              public ContainerResourceChangeRequestProto next() {\n                 return convertToProtoFormat(iter.next());\n               }\n \n               @Override\n               public void remove() {\n                 throw new UnsupportedOperationException();\n               }\n             };\n \n           }\n         };\n     builder.addAllIncreaseRequest(iterable);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void addIncreaseRequestsToProto() {\n    maybeInitBuilder();\n    builder.clearIncreaseRequest();\n    if (increaseRequests \u003d\u003d null) {\n      return;\n    }\n    Iterable\u003cContainerResourceChangeRequestProto\u003e iterable \u003d\n        new Iterable\u003cContainerResourceChangeRequestProto\u003e() {\n          @Override\n          public Iterator\u003cContainerResourceChangeRequestProto\u003e iterator() {\n            return new Iterator\u003cContainerResourceChangeRequestProto\u003e() {\n\n              Iterator\u003cContainerResourceChangeRequest\u003e iter \u003d\n                  increaseRequests.iterator();\n\n              @Override\n              public boolean hasNext() {\n                return iter.hasNext();\n              }\n\n              @Override\n              public ContainerResourceChangeRequestProto next() {\n                return convertToProtoFormat(iter.next());\n              }\n\n              @Override\n              public void remove() {\n                throw new UnsupportedOperationException();\n              }\n            };\n\n          }\n        };\n    builder.addAllIncreaseRequest(iterable);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/AllocateRequestPBImpl.java",
      "extendedDetails": {}
    },
    "9c4168f45ab66ac42cf836040db04b45437db66b": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1448. AM-RM protocol changes to support container resizing (Wangda Tan via Sandy Ryza)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1549627 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/12/13 9:44 AM",
      "commitName": "9c4168f45ab66ac42cf836040db04b45437db66b",
      "commitAuthor": "Sanford Ryza",
      "diff": "@@ -0,0 +1,35 @@\n+  private void addIncreaseRequestsToProto() {\n+    maybeInitBuilder();\n+    builder.clearIncreaseRequest();\n+    if (increaseRequests \u003d\u003d null) {\n+      return;\n+    }\n+    Iterable\u003cContainerResourceIncreaseRequestProto\u003e iterable \u003d\n+        new Iterable\u003cContainerResourceIncreaseRequestProto\u003e() {\n+          @Override\n+          public Iterator\u003cContainerResourceIncreaseRequestProto\u003e iterator() {\n+            return new Iterator\u003cContainerResourceIncreaseRequestProto\u003e() {\n+\n+              Iterator\u003cContainerResourceIncreaseRequest\u003e iter \u003d\n+                  increaseRequests.iterator();\n+\n+              @Override\n+              public boolean hasNext() {\n+                return iter.hasNext();\n+              }\n+\n+              @Override\n+              public ContainerResourceIncreaseRequestProto next() {\n+                return convertToProtoFormat(iter.next());\n+              }\n+\n+              @Override\n+              public void remove() {\n+                throw new UnsupportedOperationException();\n+              }\n+            };\n+\n+          }\n+        };\n+    builder.addAllIncreaseRequest(iterable);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void addIncreaseRequestsToProto() {\n    maybeInitBuilder();\n    builder.clearIncreaseRequest();\n    if (increaseRequests \u003d\u003d null) {\n      return;\n    }\n    Iterable\u003cContainerResourceIncreaseRequestProto\u003e iterable \u003d\n        new Iterable\u003cContainerResourceIncreaseRequestProto\u003e() {\n          @Override\n          public Iterator\u003cContainerResourceIncreaseRequestProto\u003e iterator() {\n            return new Iterator\u003cContainerResourceIncreaseRequestProto\u003e() {\n\n              Iterator\u003cContainerResourceIncreaseRequest\u003e iter \u003d\n                  increaseRequests.iterator();\n\n              @Override\n              public boolean hasNext() {\n                return iter.hasNext();\n              }\n\n              @Override\n              public ContainerResourceIncreaseRequestProto next() {\n                return convertToProtoFormat(iter.next());\n              }\n\n              @Override\n              public void remove() {\n                throw new UnsupportedOperationException();\n              }\n            };\n\n          }\n        };\n    builder.addAllIncreaseRequest(iterable);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/AllocateRequestPBImpl.java"
    }
  }
}