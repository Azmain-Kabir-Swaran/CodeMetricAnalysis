{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BPServiceActor.java",
  "functionName": "processQueueMessages",
  "functionId": "processQueueMessages",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPServiceActor.java",
  "functionStartLine": 952,
  "functionEndLine": 968,
  "numCommitsSeen": 125,
  "timeTaken": 1776,
  "changeHistory": [
    "38262779bbf38a427bad6d044e91165567f1d206"
  ],
  "changeHistoryShort": {
    "38262779bbf38a427bad6d044e91165567f1d206": "Yintroduced"
  },
  "changeHistoryDetails": {
    "38262779bbf38a427bad6d044e91165567f1d206": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-7704. DN heartbeat to Active NN may be blocked and expire if connection to Standby NN continues to time out. Contributed by Rushabh Shah.\n",
      "commitDate": "12/02/15 7:15 AM",
      "commitName": "38262779bbf38a427bad6d044e91165567f1d206",
      "commitAuthor": "Kihwal Lee",
      "diff": "@@ -0,0 +1,17 @@\n+  private void processQueueMessages() {\n+    LinkedList\u003cBPServiceActorAction\u003e duplicateQueue;\n+    synchronized (bpThreadQueue) {\n+      duplicateQueue \u003d new LinkedList\u003cBPServiceActorAction\u003e(bpThreadQueue);\n+      bpThreadQueue.clear();\n+    }\n+    while (!duplicateQueue.isEmpty()) {\n+      BPServiceActorAction actionItem \u003d duplicateQueue.remove();\n+      try {\n+        actionItem.reportTo(bpNamenode, bpRegistration);\n+      } catch (BPServiceActorActionException baae) {\n+        LOG.warn(baae.getMessage() + nnAddr , baae);\n+        // Adding it back to the queue if not present\n+        bpThreadEnqueue(actionItem);\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void processQueueMessages() {\n    LinkedList\u003cBPServiceActorAction\u003e duplicateQueue;\n    synchronized (bpThreadQueue) {\n      duplicateQueue \u003d new LinkedList\u003cBPServiceActorAction\u003e(bpThreadQueue);\n      bpThreadQueue.clear();\n    }\n    while (!duplicateQueue.isEmpty()) {\n      BPServiceActorAction actionItem \u003d duplicateQueue.remove();\n      try {\n        actionItem.reportTo(bpNamenode, bpRegistration);\n      } catch (BPServiceActorActionException baae) {\n        LOG.warn(baae.getMessage() + nnAddr , baae);\n        // Adding it back to the queue if not present\n        bpThreadEnqueue(actionItem);\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPServiceActor.java"
    }
  }
}