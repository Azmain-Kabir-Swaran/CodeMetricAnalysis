{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TempQueuePerPartition.java",
  "functionName": "appendLogString",
  "functionId": "appendLogString___sb-StringBuilder",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/TempQueuePerPartition.java",
  "functionStartLine": 309,
  "functionEndLine": 322,
  "numCommitsSeen": 41,
  "timeTaken": 3328,
  "changeHistory": [
    "90dd3a8148468ac37a3f2173ad8d45e38bfcb0c9",
    "42f90ab885d9693fcc1e52f9637f7de4111110ae",
    "bb62e0592566b2fcae7136b30972aad2d3ac55b0",
    "60e4116bf1d00afed91010e57357fe54057e4e39",
    "85f0efb68f9d1d9ee3466e3939c4fc2f985ccf61"
  ],
  "changeHistoryShort": {
    "90dd3a8148468ac37a3f2173ad8d45e38bfcb0c9": "Ybodychange",
    "42f90ab885d9693fcc1e52f9637f7de4111110ae": "Ybodychange",
    "bb62e0592566b2fcae7136b30972aad2d3ac55b0": "Ybodychange",
    "60e4116bf1d00afed91010e57357fe54057e4e39": "Ymultichange(Ymovefromfile,Ybodychange)",
    "85f0efb68f9d1d9ee3466e3939c4fc2f985ccf61": "Yintroduced"
  },
  "changeHistoryDetails": {
    "90dd3a8148468ac37a3f2173ad8d45e38bfcb0c9": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2009. CapacityScheduler: Add intra-queue preemption for app priority support. (Sunil G via wangda)\n",
      "commitDate": "31/10/16 3:18 PM",
      "commitName": "90dd3a8148468ac37a3f2173ad8d45e38bfcb0c9",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "29/05/16 8:54 AM",
      "commitNameOld": "42f90ab885d9693fcc1e52f9637f7de4111110ae",
      "commitAuthorOld": "Varun Vasudev",
      "daysBetweenCommits": 155.27,
      "commitsBetweenForRepo": 1196,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,14 @@\n   void appendLogString(StringBuilder sb) {\n-    sb.append(queueName).append(\", \")\n-        .append(current.getMemorySize()).append(\", \")\n-        .append(current.getVirtualCores()).append(\", \")\n+    sb.append(queueName).append(\", \").append(current.getMemorySize())\n+        .append(\", \").append(current.getVirtualCores()).append(\", \")\n         .append(pending.getMemorySize()).append(\", \")\n         .append(pending.getVirtualCores()).append(\", \")\n         .append(getGuaranteed().getMemorySize()).append(\", \")\n         .append(getGuaranteed().getVirtualCores()).append(\", \")\n         .append(idealAssigned.getMemorySize()).append(\", \")\n         .append(idealAssigned.getVirtualCores()).append(\", \")\n         .append(toBePreempted.getMemorySize()).append(\", \")\n-        .append(toBePreempted.getVirtualCores() ).append(\", \")\n-        .append(actuallyToBePreempted.getMemorySize()).append(\", \")\n-        .append(actuallyToBePreempted.getVirtualCores());\n+        .append(toBePreempted.getVirtualCores()).append(\", \")\n+        .append(getActuallyToBePreempted().getMemorySize()).append(\", \")\n+        .append(getActuallyToBePreempted().getVirtualCores());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void appendLogString(StringBuilder sb) {\n    sb.append(queueName).append(\", \").append(current.getMemorySize())\n        .append(\", \").append(current.getVirtualCores()).append(\", \")\n        .append(pending.getMemorySize()).append(\", \")\n        .append(pending.getVirtualCores()).append(\", \")\n        .append(getGuaranteed().getMemorySize()).append(\", \")\n        .append(getGuaranteed().getVirtualCores()).append(\", \")\n        .append(idealAssigned.getMemorySize()).append(\", \")\n        .append(idealAssigned.getVirtualCores()).append(\", \")\n        .append(toBePreempted.getMemorySize()).append(\", \")\n        .append(toBePreempted.getVirtualCores()).append(\", \")\n        .append(getActuallyToBePreempted().getMemorySize()).append(\", \")\n        .append(getActuallyToBePreempted().getVirtualCores());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/TempQueuePerPartition.java",
      "extendedDetails": {}
    },
    "42f90ab885d9693fcc1e52f9637f7de4111110ae": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4844. Add getMemorySize/getVirtualCoresSize to o.a.h.y.api.records.Resource. Contributed by Wangda Tan.\n",
      "commitDate": "29/05/16 8:54 AM",
      "commitName": "42f90ab885d9693fcc1e52f9637f7de4111110ae",
      "commitAuthor": "Varun Vasudev",
      "commitDateOld": "05/05/16 12:56 PM",
      "commitNameOld": "bb62e0592566b2fcae7136b30972aad2d3ac55b0",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 23.83,
      "commitsBetweenForRepo": 173,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n   void appendLogString(StringBuilder sb) {\n     sb.append(queueName).append(\", \")\n-        .append(current.getMemory()).append(\", \")\n+        .append(current.getMemorySize()).append(\", \")\n         .append(current.getVirtualCores()).append(\", \")\n-        .append(pending.getMemory()).append(\", \")\n+        .append(pending.getMemorySize()).append(\", \")\n         .append(pending.getVirtualCores()).append(\", \")\n-        .append(getGuaranteed().getMemory()).append(\", \")\n+        .append(getGuaranteed().getMemorySize()).append(\", \")\n         .append(getGuaranteed().getVirtualCores()).append(\", \")\n-        .append(idealAssigned.getMemory()).append(\", \")\n+        .append(idealAssigned.getMemorySize()).append(\", \")\n         .append(idealAssigned.getVirtualCores()).append(\", \")\n-        .append(toBePreempted.getMemory()).append(\", \")\n+        .append(toBePreempted.getMemorySize()).append(\", \")\n         .append(toBePreempted.getVirtualCores() ).append(\", \")\n-        .append(actuallyToBePreempted.getMemory()).append(\", \")\n+        .append(actuallyToBePreempted.getMemorySize()).append(\", \")\n         .append(actuallyToBePreempted.getVirtualCores());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void appendLogString(StringBuilder sb) {\n    sb.append(queueName).append(\", \")\n        .append(current.getMemorySize()).append(\", \")\n        .append(current.getVirtualCores()).append(\", \")\n        .append(pending.getMemorySize()).append(\", \")\n        .append(pending.getVirtualCores()).append(\", \")\n        .append(getGuaranteed().getMemorySize()).append(\", \")\n        .append(getGuaranteed().getVirtualCores()).append(\", \")\n        .append(idealAssigned.getMemorySize()).append(\", \")\n        .append(idealAssigned.getVirtualCores()).append(\", \")\n        .append(toBePreempted.getMemorySize()).append(\", \")\n        .append(toBePreempted.getVirtualCores() ).append(\", \")\n        .append(actuallyToBePreempted.getMemorySize()).append(\", \")\n        .append(actuallyToBePreempted.getVirtualCores());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/TempQueuePerPartition.java",
      "extendedDetails": {}
    },
    "bb62e0592566b2fcae7136b30972aad2d3ac55b0": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4390. Do surgical preemption based on reserved container in CapacityScheduler. Contributed by Wangda Tan\n",
      "commitDate": "05/05/16 12:56 PM",
      "commitName": "bb62e0592566b2fcae7136b30972aad2d3ac55b0",
      "commitAuthor": "Jian He",
      "commitDateOld": "30/03/16 12:43 PM",
      "commitNameOld": "60e4116bf1d00afed91010e57357fe54057e4e39",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 36.01,
      "commitsBetweenForRepo": 225,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n   void appendLogString(StringBuilder sb) {\n     sb.append(queueName).append(\", \")\n         .append(current.getMemory()).append(\", \")\n         .append(current.getVirtualCores()).append(\", \")\n         .append(pending.getMemory()).append(\", \")\n         .append(pending.getVirtualCores()).append(\", \")\n-        .append(guaranteed.getMemory()).append(\", \")\n-        .append(guaranteed.getVirtualCores()).append(\", \")\n+        .append(getGuaranteed().getMemory()).append(\", \")\n+        .append(getGuaranteed().getVirtualCores()).append(\", \")\n         .append(idealAssigned.getMemory()).append(\", \")\n         .append(idealAssigned.getVirtualCores()).append(\", \")\n         .append(toBePreempted.getMemory()).append(\", \")\n         .append(toBePreempted.getVirtualCores() ).append(\", \")\n         .append(actuallyToBePreempted.getMemory()).append(\", \")\n         .append(actuallyToBePreempted.getVirtualCores());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void appendLogString(StringBuilder sb) {\n    sb.append(queueName).append(\", \")\n        .append(current.getMemory()).append(\", \")\n        .append(current.getVirtualCores()).append(\", \")\n        .append(pending.getMemory()).append(\", \")\n        .append(pending.getVirtualCores()).append(\", \")\n        .append(getGuaranteed().getMemory()).append(\", \")\n        .append(getGuaranteed().getVirtualCores()).append(\", \")\n        .append(idealAssigned.getMemory()).append(\", \")\n        .append(idealAssigned.getVirtualCores()).append(\", \")\n        .append(toBePreempted.getMemory()).append(\", \")\n        .append(toBePreempted.getVirtualCores() ).append(\", \")\n        .append(actuallyToBePreempted.getMemory()).append(\", \")\n        .append(actuallyToBePreempted.getVirtualCores());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/TempQueuePerPartition.java",
      "extendedDetails": {}
    },
    "60e4116bf1d00afed91010e57357fe54057e4e39": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "YARN-4822. Refactor existing Preemption Policy of CS for easier adding new approach to select preemption candidates. Contributed by Wangda Tan\n",
      "commitDate": "30/03/16 12:43 PM",
      "commitName": "60e4116bf1d00afed91010e57357fe54057e4e39",
      "commitAuthor": "Jian He",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-4822. Refactor existing Preemption Policy of CS for easier adding new approach to select preemption candidates. Contributed by Wangda Tan\n",
          "commitDate": "30/03/16 12:43 PM",
          "commitName": "60e4116bf1d00afed91010e57357fe54057e4e39",
          "commitAuthor": "Jian He",
          "commitDateOld": "29/03/16 11:22 PM",
          "commitNameOld": "09d63d5a192b5d6b172f94ff6c94da348fd49ea6",
          "commitAuthorOld": "Vinayakumar B",
          "daysBetweenCommits": 0.56,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,15 @@\n-    void appendLogString(StringBuilder sb) {\n-      sb.append(queueName).append(\", \")\n+  void appendLogString(StringBuilder sb) {\n+    sb.append(queueName).append(\", \")\n         .append(current.getMemory()).append(\", \")\n         .append(current.getVirtualCores()).append(\", \")\n         .append(pending.getMemory()).append(\", \")\n         .append(pending.getVirtualCores()).append(\", \")\n         .append(guaranteed.getMemory()).append(\", \")\n         .append(guaranteed.getVirtualCores()).append(\", \")\n         .append(idealAssigned.getMemory()).append(\", \")\n         .append(idealAssigned.getVirtualCores()).append(\", \")\n         .append(toBePreempted.getMemory()).append(\", \")\n         .append(toBePreempted.getVirtualCores() ).append(\", \")\n-        .append(actuallyPreempted.getMemory()).append(\", \")\n-        .append(actuallyPreempted.getVirtualCores());\n-    }\n\\ No newline at end of file\n+        .append(actuallyToBePreempted.getMemory()).append(\", \")\n+        .append(actuallyToBePreempted.getVirtualCores());\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  void appendLogString(StringBuilder sb) {\n    sb.append(queueName).append(\", \")\n        .append(current.getMemory()).append(\", \")\n        .append(current.getVirtualCores()).append(\", \")\n        .append(pending.getMemory()).append(\", \")\n        .append(pending.getVirtualCores()).append(\", \")\n        .append(guaranteed.getMemory()).append(\", \")\n        .append(guaranteed.getVirtualCores()).append(\", \")\n        .append(idealAssigned.getMemory()).append(\", \")\n        .append(idealAssigned.getVirtualCores()).append(\", \")\n        .append(toBePreempted.getMemory()).append(\", \")\n        .append(toBePreempted.getVirtualCores() ).append(\", \")\n        .append(actuallyToBePreempted.getMemory()).append(\", \")\n        .append(actuallyToBePreempted.getVirtualCores());\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/TempQueuePerPartition.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/ProportionalCapacityPreemptionPolicy.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/TempQueuePerPartition.java",
            "oldMethodName": "appendLogString",
            "newMethodName": "appendLogString"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4822. Refactor existing Preemption Policy of CS for easier adding new approach to select preemption candidates. Contributed by Wangda Tan\n",
          "commitDate": "30/03/16 12:43 PM",
          "commitName": "60e4116bf1d00afed91010e57357fe54057e4e39",
          "commitAuthor": "Jian He",
          "commitDateOld": "29/03/16 11:22 PM",
          "commitNameOld": "09d63d5a192b5d6b172f94ff6c94da348fd49ea6",
          "commitAuthorOld": "Vinayakumar B",
          "daysBetweenCommits": 0.56,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,15 @@\n-    void appendLogString(StringBuilder sb) {\n-      sb.append(queueName).append(\", \")\n+  void appendLogString(StringBuilder sb) {\n+    sb.append(queueName).append(\", \")\n         .append(current.getMemory()).append(\", \")\n         .append(current.getVirtualCores()).append(\", \")\n         .append(pending.getMemory()).append(\", \")\n         .append(pending.getVirtualCores()).append(\", \")\n         .append(guaranteed.getMemory()).append(\", \")\n         .append(guaranteed.getVirtualCores()).append(\", \")\n         .append(idealAssigned.getMemory()).append(\", \")\n         .append(idealAssigned.getVirtualCores()).append(\", \")\n         .append(toBePreempted.getMemory()).append(\", \")\n         .append(toBePreempted.getVirtualCores() ).append(\", \")\n-        .append(actuallyPreempted.getMemory()).append(\", \")\n-        .append(actuallyPreempted.getVirtualCores());\n-    }\n\\ No newline at end of file\n+        .append(actuallyToBePreempted.getMemory()).append(\", \")\n+        .append(actuallyToBePreempted.getVirtualCores());\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  void appendLogString(StringBuilder sb) {\n    sb.append(queueName).append(\", \")\n        .append(current.getMemory()).append(\", \")\n        .append(current.getVirtualCores()).append(\", \")\n        .append(pending.getMemory()).append(\", \")\n        .append(pending.getVirtualCores()).append(\", \")\n        .append(guaranteed.getMemory()).append(\", \")\n        .append(guaranteed.getVirtualCores()).append(\", \")\n        .append(idealAssigned.getMemory()).append(\", \")\n        .append(idealAssigned.getVirtualCores()).append(\", \")\n        .append(toBePreempted.getMemory()).append(\", \")\n        .append(toBePreempted.getVirtualCores() ).append(\", \")\n        .append(actuallyToBePreempted.getMemory()).append(\", \")\n        .append(actuallyToBePreempted.getVirtualCores());\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/TempQueuePerPartition.java",
          "extendedDetails": {}
        }
      ]
    },
    "85f0efb68f9d1d9ee3466e3939c4fc2f985ccf61": {
      "type": "Yintroduced",
      "commitMessage": "YARN-569. Add support for requesting and enforcing preemption requests via\na capacity monitor. Contributed by Carlo Curino, Chris Douglas\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1502083 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/07/13 6:20 PM",
      "commitName": "85f0efb68f9d1d9ee3466e3939c4fc2f985ccf61",
      "commitAuthor": "Christopher Douglas",
      "diff": "@@ -0,0 +1,15 @@\n+    void appendLogString(StringBuilder sb) {\n+      sb.append(queueName).append(\", \")\n+        .append(current.getMemory()).append(\", \")\n+        .append(current.getVirtualCores()).append(\", \")\n+        .append(pending.getMemory()).append(\", \")\n+        .append(pending.getVirtualCores()).append(\", \")\n+        .append(guaranteed.getMemory()).append(\", \")\n+        .append(guaranteed.getVirtualCores()).append(\", \")\n+        .append(idealAssigned.getMemory()).append(\", \")\n+        .append(idealAssigned.getVirtualCores()).append(\", \")\n+        .append(toBePreempted.getMemory()).append(\", \")\n+        .append(toBePreempted.getVirtualCores() ).append(\", \")\n+        .append(actuallyPreempted.getMemory()).append(\", \")\n+        .append(actuallyPreempted.getVirtualCores());\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    void appendLogString(StringBuilder sb) {\n      sb.append(queueName).append(\", \")\n        .append(current.getMemory()).append(\", \")\n        .append(current.getVirtualCores()).append(\", \")\n        .append(pending.getMemory()).append(\", \")\n        .append(pending.getVirtualCores()).append(\", \")\n        .append(guaranteed.getMemory()).append(\", \")\n        .append(guaranteed.getVirtualCores()).append(\", \")\n        .append(idealAssigned.getMemory()).append(\", \")\n        .append(idealAssigned.getVirtualCores()).append(\", \")\n        .append(toBePreempted.getMemory()).append(\", \")\n        .append(toBePreempted.getVirtualCores() ).append(\", \")\n        .append(actuallyPreempted.getMemory()).append(\", \")\n        .append(actuallyPreempted.getVirtualCores());\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/ProportionalCapacityPreemptionPolicy.java"
    }
  }
}