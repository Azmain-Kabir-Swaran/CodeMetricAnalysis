{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LinuxContainerExecutor.java",
  "functionName": "execContainer",
  "functionId": "execContainer___ctx-ContainerExecContext",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/LinuxContainerExecutor.java",
  "functionStartLine": 812,
  "functionEndLine": 830,
  "numCommitsSeen": 84,
  "timeTaken": 2163,
  "changeHistory": [
    "f7df55f4a89ed2d75d874b32209647ef4f448875",
    "1f9c4f32e842529be5980e395587f135452372bb",
    "347ea385817766a5c418017009728cd8b9959776"
  ],
  "changeHistoryShort": {
    "f7df55f4a89ed2d75d874b32209647ef4f448875": "Ybodychange",
    "1f9c4f32e842529be5980e395587f135452372bb": "Ybodychange",
    "347ea385817766a5c418017009728cd8b9959776": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f7df55f4a89ed2d75d874b32209647ef4f448875": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9602. Use logger format in Container Executor. Contributed by Abhishek Modi.\n",
      "commitDate": "11/06/19 9:59 AM",
      "commitName": "f7df55f4a89ed2d75d874b32209647ef4f448875",
      "commitAuthor": "bibinchundatt",
      "commitDateOld": "15/03/19 4:20 PM",
      "commitNameOld": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 87.73,
      "commitsBetweenForRepo": 542,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n   public IOStreamPair execContainer(ContainerExecContext ctx)\n       throws ContainerExecutionException {\n     IOStreamPair res;\n     try {\n       res \u003d linuxContainerRuntime.execContainer(ctx);\n     } catch (ContainerExecutionException e) {\n       int retCode \u003d e.getExitCode();\n       if (retCode !\u003d 0) {\n         return new IOStreamPair(null, null);\n       }\n-      LOG.warn(\"Error in executing container interactive shell\"\n-          + ctx + \" exit \u003d \" + retCode, e);\n+      LOG.warn(\"Error in executing container interactive shell {} exit \u003d {}\",\n+          ctx, retCode, e);\n       logOutput(e.getOutput());\n       throw new ContainerExecutionException(\n           \"Error in executing container interactive shel\" + ctx.getContainer()\n           .getContainerId().toString() + \" exit \u003d \" + retCode);\n     }\n     return res;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public IOStreamPair execContainer(ContainerExecContext ctx)\n      throws ContainerExecutionException {\n    IOStreamPair res;\n    try {\n      res \u003d linuxContainerRuntime.execContainer(ctx);\n    } catch (ContainerExecutionException e) {\n      int retCode \u003d e.getExitCode();\n      if (retCode !\u003d 0) {\n        return new IOStreamPair(null, null);\n      }\n      LOG.warn(\"Error in executing container interactive shell {} exit \u003d {}\",\n          ctx, retCode, e);\n      logOutput(e.getOutput());\n      throw new ContainerExecutionException(\n          \"Error in executing container interactive shel\" + ctx.getContainer()\n          .getContainerId().toString() + \" exit \u003d \" + retCode);\n    }\n    return res;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/LinuxContainerExecutor.java",
      "extendedDetails": {}
    },
    "1f9c4f32e842529be5980e395587f135452372bb": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8776. Implement Container Exec feature in LinuxContainerExecutor. Contributed by Eric Yang\n",
      "commitDate": "12/11/18 10:42 AM",
      "commitName": "1f9c4f32e842529be5980e395587f135452372bb",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "26/10/18 5:57 PM",
      "commitNameOld": "d07e873b7db6cb317eccb4768607c1afb505c99b",
      "commitAuthorOld": "Billie Rinaldi",
      "daysBetweenCommits": 16.74,
      "commitsBetweenForRepo": 101,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,19 @@\n   public IOStreamPair execContainer(ContainerExecContext ctx)\n       throws ContainerExecutionException {\n-    // TODO: calls PrivilegedOperationExecutor and return IOStream pairs\n-    InputStream in \u003d null;\n-    OutputStream out \u003d null;\n-    int byteSize \u003d 4000;\n+    IOStreamPair res;\n     try {\n-      in \u003d new ByteArrayInputStream(\n-          \"This is input command\".getBytes(Charset.forName(\"UTF-8\")));\n-      out \u003d new ByteArrayOutputStream(byteSize);\n-    } catch (IllegalArgumentException e) {\n-      LOG.error(\"Failed to execute command to container runtime\", e);\n+      res \u003d linuxContainerRuntime.execContainer(ctx);\n+    } catch (ContainerExecutionException e) {\n+      int retCode \u003d e.getExitCode();\n+      if (retCode !\u003d 0) {\n+        return new IOStreamPair(null, null);\n+      }\n+      LOG.warn(\"Error in executing container interactive shell\"\n+          + ctx + \" exit \u003d \" + retCode, e);\n+      logOutput(e.getOutput());\n+      throw new ContainerExecutionException(\n+          \"Error in executing container interactive shel\" + ctx.getContainer()\n+          .getContainerId().toString() + \" exit \u003d \" + retCode);\n     }\n-    IOStreamPair pair \u003d new IOStreamPair(in, out);\n-    System.out.println(pair);\n-    return new IOStreamPair(in, out);\n+    return res;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public IOStreamPair execContainer(ContainerExecContext ctx)\n      throws ContainerExecutionException {\n    IOStreamPair res;\n    try {\n      res \u003d linuxContainerRuntime.execContainer(ctx);\n    } catch (ContainerExecutionException e) {\n      int retCode \u003d e.getExitCode();\n      if (retCode !\u003d 0) {\n        return new IOStreamPair(null, null);\n      }\n      LOG.warn(\"Error in executing container interactive shell\"\n          + ctx + \" exit \u003d \" + retCode, e);\n      logOutput(e.getOutput());\n      throw new ContainerExecutionException(\n          \"Error in executing container interactive shel\" + ctx.getContainer()\n          .getContainerId().toString() + \" exit \u003d \" + retCode);\n    }\n    return res;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/LinuxContainerExecutor.java",
      "extendedDetails": {}
    },
    "347ea385817766a5c418017009728cd8b9959776": {
      "type": "Yintroduced",
      "commitMessage": "YARN-8763.  Added node manager websocket API for accessing containers.\n            Contributed by Zian Chen\n",
      "commitDate": "08/10/18 10:56 AM",
      "commitName": "347ea385817766a5c418017009728cd8b9959776",
      "commitAuthor": "Eric Yang",
      "diff": "@@ -0,0 +1,17 @@\n+  public IOStreamPair execContainer(ContainerExecContext ctx)\n+      throws ContainerExecutionException {\n+    // TODO: calls PrivilegedOperationExecutor and return IOStream pairs\n+    InputStream in \u003d null;\n+    OutputStream out \u003d null;\n+    int byteSize \u003d 4000;\n+    try {\n+      in \u003d new ByteArrayInputStream(\n+          \"This is input command\".getBytes(Charset.forName(\"UTF-8\")));\n+      out \u003d new ByteArrayOutputStream(byteSize);\n+    } catch (IllegalArgumentException e) {\n+      LOG.error(\"Failed to execute command to container runtime\", e);\n+    }\n+    IOStreamPair pair \u003d new IOStreamPair(in, out);\n+    System.out.println(pair);\n+    return new IOStreamPair(in, out);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public IOStreamPair execContainer(ContainerExecContext ctx)\n      throws ContainerExecutionException {\n    // TODO: calls PrivilegedOperationExecutor and return IOStream pairs\n    InputStream in \u003d null;\n    OutputStream out \u003d null;\n    int byteSize \u003d 4000;\n    try {\n      in \u003d new ByteArrayInputStream(\n          \"This is input command\".getBytes(Charset.forName(\"UTF-8\")));\n      out \u003d new ByteArrayOutputStream(byteSize);\n    } catch (IllegalArgumentException e) {\n      LOG.error(\"Failed to execute command to container runtime\", e);\n    }\n    IOStreamPair pair \u003d new IOStreamPair(in, out);\n    System.out.println(pair);\n    return new IOStreamPair(in, out);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/LinuxContainerExecutor.java"
    }
  }
}