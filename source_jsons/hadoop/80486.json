{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FileSystem.java",
  "functionName": "loadFileSystems",
  "functionId": "loadFileSystems",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java",
  "functionStartLine": 3318,
  "functionEndLine": 3355,
  "numCommitsSeen": 143,
  "timeTaken": 5148,
  "changeHistory": [
    "860d49aa6ae7790d970d7f2322fed890b0e5cda2",
    "2d46c3f6b7d55b6a2f124d07fe26d37359615df4",
    "8652cce5b21825f6f835e4ea31de82eb59fb06c1",
    "706e861a859a247661b027f4e473814995556c2e"
  ],
  "changeHistoryShort": {
    "860d49aa6ae7790d970d7f2322fed890b0e5cda2": "Ybodychange",
    "2d46c3f6b7d55b6a2f124d07fe26d37359615df4": "Ybodychange",
    "8652cce5b21825f6f835e4ea31de82eb59fb06c1": "Ybodychange",
    "706e861a859a247661b027f4e473814995556c2e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "860d49aa6ae7790d970d7f2322fed890b0e5cda2": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13605. Clean up FileSystem javadocs, logging; improve diagnostics on FS load. Contributed by Steve Loughran\n",
      "commitDate": "23/11/16 4:42 PM",
      "commitName": "860d49aa6ae7790d970d7f2322fed890b0e5cda2",
      "commitAuthor": "Mingliang Liu",
      "commitDateOld": "16/11/16 8:08 PM",
      "commitNameOld": "aab9737a058c0bdeeb17c173e530b7e571315a56",
      "commitAuthorOld": "Mingliang Liu",
      "daysBetweenCommits": 6.86,
      "commitsBetweenForRepo": 38,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,38 @@\n   private static void loadFileSystems() {\n+    LOGGER.debug(\"Loading filesystems\");\n     synchronized (FileSystem.class) {\n       if (!FILE_SYSTEMS_LOADED) {\n         ServiceLoader\u003cFileSystem\u003e serviceLoader \u003d ServiceLoader.load(FileSystem.class);\n         Iterator\u003cFileSystem\u003e it \u003d serviceLoader.iterator();\n         while (it.hasNext()) {\n-          FileSystem fs \u003d null;\n+          FileSystem fs;\n           try {\n             fs \u003d it.next();\n             try {\n               SERVICE_FILE_SYSTEMS.put(fs.getScheme(), fs.getClass());\n+              if (LOGGER.isDebugEnabled()) {\n+                LOGGER.debug(\"{}:// \u003d {} from {}\",\n+                    fs.getScheme(), fs.getClass(),\n+                    ClassUtil.findContainingJar(fs.getClass()));\n+              }\n             } catch (Exception e) {\n-              LOG.warn(\"Cannot load: \" + fs + \" from \" +\n-                  ClassUtil.findContainingJar(fs.getClass()), e);\n+              LOGGER.warn(\"Cannot load: {} from {}\", fs,\n+                  ClassUtil.findContainingJar(fs.getClass()));\n+              LOGGER.info(\"Full exception loading: {}\", fs, e);\n             }\n           } catch (ServiceConfigurationError ee) {\n             LOG.warn(\"Cannot load filesystem: \" + ee);\n             Throwable cause \u003d ee.getCause();\n             // print all the nested exception messages\n             while (cause !\u003d null) {\n               LOG.warn(cause.toString());\n               cause \u003d cause.getCause();\n             }\n             // and at debug: the full stack\n             LOG.debug(\"Stack Trace\", ee);\n           }\n         }\n         FILE_SYSTEMS_LOADED \u003d true;\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void loadFileSystems() {\n    LOGGER.debug(\"Loading filesystems\");\n    synchronized (FileSystem.class) {\n      if (!FILE_SYSTEMS_LOADED) {\n        ServiceLoader\u003cFileSystem\u003e serviceLoader \u003d ServiceLoader.load(FileSystem.class);\n        Iterator\u003cFileSystem\u003e it \u003d serviceLoader.iterator();\n        while (it.hasNext()) {\n          FileSystem fs;\n          try {\n            fs \u003d it.next();\n            try {\n              SERVICE_FILE_SYSTEMS.put(fs.getScheme(), fs.getClass());\n              if (LOGGER.isDebugEnabled()) {\n                LOGGER.debug(\"{}:// \u003d {} from {}\",\n                    fs.getScheme(), fs.getClass(),\n                    ClassUtil.findContainingJar(fs.getClass()));\n              }\n            } catch (Exception e) {\n              LOGGER.warn(\"Cannot load: {} from {}\", fs,\n                  ClassUtil.findContainingJar(fs.getClass()));\n              LOGGER.info(\"Full exception loading: {}\", fs, e);\n            }\n          } catch (ServiceConfigurationError ee) {\n            LOG.warn(\"Cannot load filesystem: \" + ee);\n            Throwable cause \u003d ee.getCause();\n            // print all the nested exception messages\n            while (cause !\u003d null) {\n              LOG.warn(cause.toString());\n              cause \u003d cause.getCause();\n            }\n            // and at debug: the full stack\n            LOG.debug(\"Stack Trace\", ee);\n          }\n        }\n        FILE_SYSTEMS_LOADED \u003d true;\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java",
      "extendedDetails": {}
    },
    "2d46c3f6b7d55b6a2f124d07fe26d37359615df4": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13323. Downgrade stack trace on FS load from Warn to debug. Contributed by Steve Loughran.\n",
      "commitDate": "06/10/16 10:57 AM",
      "commitName": "2d46c3f6b7d55b6a2f124d07fe26d37359615df4",
      "commitAuthor": "Chris Nauroth",
      "commitDateOld": "27/09/16 5:36 PM",
      "commitNameOld": "9a44a832a99eb967aa4e34338dfa75baf35f9845",
      "commitAuthorOld": "Mingliang Liu",
      "daysBetweenCommits": 8.72,
      "commitsBetweenForRepo": 69,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,31 @@\n   private static void loadFileSystems() {\n     synchronized (FileSystem.class) {\n       if (!FILE_SYSTEMS_LOADED) {\n         ServiceLoader\u003cFileSystem\u003e serviceLoader \u003d ServiceLoader.load(FileSystem.class);\n         Iterator\u003cFileSystem\u003e it \u003d serviceLoader.iterator();\n         while (it.hasNext()) {\n           FileSystem fs \u003d null;\n           try {\n             fs \u003d it.next();\n             try {\n               SERVICE_FILE_SYSTEMS.put(fs.getScheme(), fs.getClass());\n             } catch (Exception e) {\n               LOG.warn(\"Cannot load: \" + fs + \" from \" +\n                   ClassUtil.findContainingJar(fs.getClass()), e);\n             }\n           } catch (ServiceConfigurationError ee) {\n-            LOG.warn(\"Cannot load filesystem\", ee);\n+            LOG.warn(\"Cannot load filesystem: \" + ee);\n+            Throwable cause \u003d ee.getCause();\n+            // print all the nested exception messages\n+            while (cause !\u003d null) {\n+              LOG.warn(cause.toString());\n+              cause \u003d cause.getCause();\n+            }\n+            // and at debug: the full stack\n+            LOG.debug(\"Stack Trace\", ee);\n           }\n         }\n         FILE_SYSTEMS_LOADED \u003d true;\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void loadFileSystems() {\n    synchronized (FileSystem.class) {\n      if (!FILE_SYSTEMS_LOADED) {\n        ServiceLoader\u003cFileSystem\u003e serviceLoader \u003d ServiceLoader.load(FileSystem.class);\n        Iterator\u003cFileSystem\u003e it \u003d serviceLoader.iterator();\n        while (it.hasNext()) {\n          FileSystem fs \u003d null;\n          try {\n            fs \u003d it.next();\n            try {\n              SERVICE_FILE_SYSTEMS.put(fs.getScheme(), fs.getClass());\n            } catch (Exception e) {\n              LOG.warn(\"Cannot load: \" + fs + \" from \" +\n                  ClassUtil.findContainingJar(fs.getClass()), e);\n            }\n          } catch (ServiceConfigurationError ee) {\n            LOG.warn(\"Cannot load filesystem: \" + ee);\n            Throwable cause \u003d ee.getCause();\n            // print all the nested exception messages\n            while (cause !\u003d null) {\n              LOG.warn(cause.toString());\n              cause \u003d cause.getCause();\n            }\n            // and at debug: the full stack\n            LOG.debug(\"Stack Trace\", ee);\n          }\n        }\n        FILE_SYSTEMS_LOADED \u003d true;\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java",
      "extendedDetails": {}
    },
    "8652cce5b21825f6f835e4ea31de82eb59fb06c1": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12636. Prevent ServiceLoader failure init for unused FileSystems. Contributed by Inigo Goiri\n",
      "commitDate": "18/12/15 6:30 PM",
      "commitName": "8652cce5b21825f6f835e4ea31de82eb59fb06c1",
      "commitAuthor": "Chris Douglas",
      "commitDateOld": "04/12/15 10:39 AM",
      "commitNameOld": "cbc7b6bf97a80c39d4bbb3005e42dacae6726baf",
      "commitAuthorOld": "Xiaoyu Yao",
      "daysBetweenCommits": 14.33,
      "commitsBetweenForRepo": 101,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,23 @@\n   private static void loadFileSystems() {\n     synchronized (FileSystem.class) {\n       if (!FILE_SYSTEMS_LOADED) {\n         ServiceLoader\u003cFileSystem\u003e serviceLoader \u003d ServiceLoader.load(FileSystem.class);\n-        for (FileSystem fs : serviceLoader) {\n-          SERVICE_FILE_SYSTEMS.put(fs.getScheme(), fs.getClass());\n+        Iterator\u003cFileSystem\u003e it \u003d serviceLoader.iterator();\n+        while (it.hasNext()) {\n+          FileSystem fs \u003d null;\n+          try {\n+            fs \u003d it.next();\n+            try {\n+              SERVICE_FILE_SYSTEMS.put(fs.getScheme(), fs.getClass());\n+            } catch (Exception e) {\n+              LOG.warn(\"Cannot load: \" + fs + \" from \" +\n+                  ClassUtil.findContainingJar(fs.getClass()), e);\n+            }\n+          } catch (ServiceConfigurationError ee) {\n+            LOG.warn(\"Cannot load filesystem\", ee);\n+          }\n         }\n         FILE_SYSTEMS_LOADED \u003d true;\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void loadFileSystems() {\n    synchronized (FileSystem.class) {\n      if (!FILE_SYSTEMS_LOADED) {\n        ServiceLoader\u003cFileSystem\u003e serviceLoader \u003d ServiceLoader.load(FileSystem.class);\n        Iterator\u003cFileSystem\u003e it \u003d serviceLoader.iterator();\n        while (it.hasNext()) {\n          FileSystem fs \u003d null;\n          try {\n            fs \u003d it.next();\n            try {\n              SERVICE_FILE_SYSTEMS.put(fs.getScheme(), fs.getClass());\n            } catch (Exception e) {\n              LOG.warn(\"Cannot load: \" + fs + \" from \" +\n                  ClassUtil.findContainingJar(fs.getClass()), e);\n            }\n          } catch (ServiceConfigurationError ee) {\n            LOG.warn(\"Cannot load filesystem\", ee);\n          }\n        }\n        FILE_SYSTEMS_LOADED \u003d true;\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java",
      "extendedDetails": {}
    },
    "706e861a859a247661b027f4e473814995556c2e": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7549. Use JDK ServiceLoader mechanism to find FileSystem implementations. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1329994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/04/12 1:33 PM",
      "commitName": "706e861a859a247661b027f4e473814995556c2e",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,11 @@\n+  private static void loadFileSystems() {\n+    synchronized (FileSystem.class) {\n+      if (!FILE_SYSTEMS_LOADED) {\n+        ServiceLoader\u003cFileSystem\u003e serviceLoader \u003d ServiceLoader.load(FileSystem.class);\n+        for (FileSystem fs : serviceLoader) {\n+          SERVICE_FILE_SYSTEMS.put(fs.getScheme(), fs.getClass());\n+        }\n+        FILE_SYSTEMS_LOADED \u003d true;\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static void loadFileSystems() {\n    synchronized (FileSystem.class) {\n      if (!FILE_SYSTEMS_LOADED) {\n        ServiceLoader\u003cFileSystem\u003e serviceLoader \u003d ServiceLoader.load(FileSystem.class);\n        for (FileSystem fs : serviceLoader) {\n          SERVICE_FILE_SYSTEMS.put(fs.getScheme(), fs.getClass());\n        }\n        FILE_SYSTEMS_LOADED \u003d true;\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java"
    }
  }
}