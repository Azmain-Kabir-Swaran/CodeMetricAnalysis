{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LdapGroupsMapping.java",
  "functionName": "goUpGroupHierarchy",
  "functionId": "goUpGroupHierarchy___groupDNs-Set__String____goUpHierarchy-int__groups-Set__String__",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/LdapGroupsMapping.java",
  "functionStartLine": 591,
  "functionEndLine": 617,
  "numCommitsSeen": 29,
  "timeTaken": 1668,
  "changeHistory": [
    "c9a3aa64dc95b097c51070f71a3b1a2ad126b2b9",
    "a2121cb0d907be439d19cd1165a0371b37a5fe68",
    "6f0aa75121224589fe1e20630c597f851ef3bed2"
  ],
  "changeHistoryShort": {
    "c9a3aa64dc95b097c51070f71a3b1a2ad126b2b9": "Ybodychange",
    "a2121cb0d907be439d19cd1165a0371b37a5fe68": "Ybodychange",
    "6f0aa75121224589fe1e20630c597f851ef3bed2": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c9a3aa64dc95b097c51070f71a3b1a2ad126b2b9": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15950. Failover for LdapGroupsMapping. Contributed by Lukas Majercak.\n",
      "commitDate": "03/12/18 12:10 PM",
      "commitName": "c9a3aa64dc95b097c51070f71a3b1a2ad126b2b9",
      "commitAuthor": "Giovanni Matteo Fumarola",
      "commitDateOld": "29/03/18 5:16 PM",
      "commitNameOld": "2216bde322961c0fe33b5822510880a65d5c45fd",
      "commitAuthorOld": "Konstantin V Shvachko",
      "daysBetweenCommits": 248.83,
      "commitsBetweenForRepo": 2455,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n   void goUpGroupHierarchy(Set\u003cString\u003e groupDNs,\n                           int goUpHierarchy,\n                           Set\u003cString\u003e groups)\n       throws NamingException {\n     if (goUpHierarchy \u003c\u003d 0 || groups.isEmpty()) {\n       return;\n     }\n     DirContext context \u003d getDirContext();\n-    Set\u003cString\u003e nextLevelGroups \u003d new HashSet\u003cString\u003e();\n+    Set\u003cString\u003e nextLevelGroups \u003d new HashSet\u003c\u003e();\n     StringBuilder filter \u003d new StringBuilder();\n     filter.append(\"(\u0026\").append(groupSearchFilter).append(\"(|\");\n     for (String dn : groupDNs) {\n       filter.append(\"(\").append(groupMemberAttr).append(\"\u003d\")\n         .append(dn).append(\")\");\n     }\n     filter.append(\"))\");\n     LOG.debug(\"Ldap group query string: \" + filter.toString());\n     NamingEnumeration\u003cSearchResult\u003e groupResults \u003d\n         context.search(groupbaseDN,\n            filter.toString(),\n            SEARCH_CONTROLS);\n     while (groupResults.hasMoreElements()) {\n       SearchResult groupResult \u003d groupResults.nextElement();\n       getGroupNames(groupResult, groups, nextLevelGroups, true);\n     }\n     goUpGroupHierarchy(nextLevelGroups, goUpHierarchy - 1, groups);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void goUpGroupHierarchy(Set\u003cString\u003e groupDNs,\n                          int goUpHierarchy,\n                          Set\u003cString\u003e groups)\n      throws NamingException {\n    if (goUpHierarchy \u003c\u003d 0 || groups.isEmpty()) {\n      return;\n    }\n    DirContext context \u003d getDirContext();\n    Set\u003cString\u003e nextLevelGroups \u003d new HashSet\u003c\u003e();\n    StringBuilder filter \u003d new StringBuilder();\n    filter.append(\"(\u0026\").append(groupSearchFilter).append(\"(|\");\n    for (String dn : groupDNs) {\n      filter.append(\"(\").append(groupMemberAttr).append(\"\u003d\")\n        .append(dn).append(\")\");\n    }\n    filter.append(\"))\");\n    LOG.debug(\"Ldap group query string: \" + filter.toString());\n    NamingEnumeration\u003cSearchResult\u003e groupResults \u003d\n        context.search(groupbaseDN,\n           filter.toString(),\n           SEARCH_CONTROLS);\n    while (groupResults.hasMoreElements()) {\n      SearchResult groupResult \u003d groupResults.nextElement();\n      getGroupNames(groupResult, groups, nextLevelGroups, true);\n    }\n    goUpGroupHierarchy(nextLevelGroups, goUpHierarchy - 1, groups);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/LdapGroupsMapping.java",
      "extendedDetails": {}
    },
    "a2121cb0d907be439d19cd1165a0371b37a5fe68": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14465. LdapGroupsMapping - support user and group search base. Contributed by Shwetha G S and Mingliang Liu\n",
      "commitDate": "09/06/17 2:55 PM",
      "commitName": "a2121cb0d907be439d19cd1165a0371b37a5fe68",
      "commitAuthor": "Mingliang Liu",
      "commitDateOld": "05/08/16 4:32 PM",
      "commitNameOld": "49ba09a9221ad1e25e89800f6c455bbaad41483b",
      "commitAuthorOld": "Wei-Chiu Chuang",
      "daysBetweenCommits": 307.93,
      "commitsBetweenForRepo": 1866,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n   void goUpGroupHierarchy(Set\u003cString\u003e groupDNs,\n                           int goUpHierarchy,\n                           Set\u003cString\u003e groups)\n       throws NamingException {\n     if (goUpHierarchy \u003c\u003d 0 || groups.isEmpty()) {\n       return;\n     }\n     DirContext context \u003d getDirContext();\n     Set\u003cString\u003e nextLevelGroups \u003d new HashSet\u003cString\u003e();\n     StringBuilder filter \u003d new StringBuilder();\n     filter.append(\"(\u0026\").append(groupSearchFilter).append(\"(|\");\n     for (String dn : groupDNs) {\n       filter.append(\"(\").append(groupMemberAttr).append(\"\u003d\")\n         .append(dn).append(\")\");\n     }\n     filter.append(\"))\");\n     LOG.debug(\"Ldap group query string: \" + filter.toString());\n     NamingEnumeration\u003cSearchResult\u003e groupResults \u003d\n-        context.search(baseDN,\n+        context.search(groupbaseDN,\n            filter.toString(),\n            SEARCH_CONTROLS);\n     while (groupResults.hasMoreElements()) {\n       SearchResult groupResult \u003d groupResults.nextElement();\n       getGroupNames(groupResult, groups, nextLevelGroups, true);\n     }\n     goUpGroupHierarchy(nextLevelGroups, goUpHierarchy - 1, groups);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void goUpGroupHierarchy(Set\u003cString\u003e groupDNs,\n                          int goUpHierarchy,\n                          Set\u003cString\u003e groups)\n      throws NamingException {\n    if (goUpHierarchy \u003c\u003d 0 || groups.isEmpty()) {\n      return;\n    }\n    DirContext context \u003d getDirContext();\n    Set\u003cString\u003e nextLevelGroups \u003d new HashSet\u003cString\u003e();\n    StringBuilder filter \u003d new StringBuilder();\n    filter.append(\"(\u0026\").append(groupSearchFilter).append(\"(|\");\n    for (String dn : groupDNs) {\n      filter.append(\"(\").append(groupMemberAttr).append(\"\u003d\")\n        .append(dn).append(\")\");\n    }\n    filter.append(\"))\");\n    LOG.debug(\"Ldap group query string: \" + filter.toString());\n    NamingEnumeration\u003cSearchResult\u003e groupResults \u003d\n        context.search(groupbaseDN,\n           filter.toString(),\n           SEARCH_CONTROLS);\n    while (groupResults.hasMoreElements()) {\n      SearchResult groupResult \u003d groupResults.nextElement();\n      getGroupNames(groupResult, groups, nextLevelGroups, true);\n    }\n    goUpGroupHierarchy(nextLevelGroups, goUpHierarchy - 1, groups);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/LdapGroupsMapping.java",
      "extendedDetails": {}
    },
    "6f0aa75121224589fe1e20630c597f851ef3bed2": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-12291. Add support for nested groups in LdapGroupsMapping. Contributed by Esther Kundin.\n",
      "commitDate": "15/06/16 11:41 AM",
      "commitName": "6f0aa75121224589fe1e20630c597f851ef3bed2",
      "commitAuthor": "Jitendra Pandey",
      "diff": "@@ -0,0 +1,27 @@\n+  void goUpGroupHierarchy(Set\u003cString\u003e groupDNs,\n+                          int goUpHierarchy,\n+                          Set\u003cString\u003e groups)\n+      throws NamingException {\n+    if (goUpHierarchy \u003c\u003d 0 || groups.isEmpty()) {\n+      return;\n+    }\n+    DirContext context \u003d getDirContext();\n+    Set\u003cString\u003e nextLevelGroups \u003d new HashSet\u003cString\u003e();\n+    StringBuilder filter \u003d new StringBuilder();\n+    filter.append(\"(\u0026\").append(groupSearchFilter).append(\"(|\");\n+    for (String dn : groupDNs) {\n+      filter.append(\"(\").append(groupMemberAttr).append(\"\u003d\")\n+        .append(dn).append(\")\");\n+    }\n+    filter.append(\"))\");\n+    LOG.debug(\"Ldap group query string: \" + filter.toString());\n+    NamingEnumeration\u003cSearchResult\u003e groupResults \u003d\n+        context.search(baseDN,\n+           filter.toString(),\n+           SEARCH_CONTROLS);\n+    while (groupResults.hasMoreElements()) {\n+      SearchResult groupResult \u003d groupResults.nextElement();\n+      getGroupNames(groupResult, groups, nextLevelGroups, true);\n+    }\n+    goUpGroupHierarchy(nextLevelGroups, goUpHierarchy - 1, groups);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  void goUpGroupHierarchy(Set\u003cString\u003e groupDNs,\n                          int goUpHierarchy,\n                          Set\u003cString\u003e groups)\n      throws NamingException {\n    if (goUpHierarchy \u003c\u003d 0 || groups.isEmpty()) {\n      return;\n    }\n    DirContext context \u003d getDirContext();\n    Set\u003cString\u003e nextLevelGroups \u003d new HashSet\u003cString\u003e();\n    StringBuilder filter \u003d new StringBuilder();\n    filter.append(\"(\u0026\").append(groupSearchFilter).append(\"(|\");\n    for (String dn : groupDNs) {\n      filter.append(\"(\").append(groupMemberAttr).append(\"\u003d\")\n        .append(dn).append(\")\");\n    }\n    filter.append(\"))\");\n    LOG.debug(\"Ldap group query string: \" + filter.toString());\n    NamingEnumeration\u003cSearchResult\u003e groupResults \u003d\n        context.search(baseDN,\n           filter.toString(),\n           SEARCH_CONTROLS);\n    while (groupResults.hasMoreElements()) {\n      SearchResult groupResult \u003d groupResults.nextElement();\n      getGroupNames(groupResult, groups, nextLevelGroups, true);\n    }\n    goUpGroupHierarchy(nextLevelGroups, goUpHierarchy - 1, groups);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/LdapGroupsMapping.java"
    }
  }
}