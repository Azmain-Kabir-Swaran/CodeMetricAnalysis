{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ShellBasedIdMapping.java",
  "functionName": "updateStaticMapping",
  "functionId": "updateStaticMapping",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/ShellBasedIdMapping.java",
  "functionStartLine": 296,
  "functionEndLine": 328,
  "numCommitsSeen": 13,
  "timeTaken": 686,
  "changeHistory": [
    "788ee35e2bf0f3d445e03e6ea9bd02c40c8fdfe3"
  ],
  "changeHistoryShort": {
    "788ee35e2bf0f3d445e03e6ea9bd02c40c8fdfe3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "788ee35e2bf0f3d445e03e6ea9bd02c40c8fdfe3": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-7564. NFS gateway dynamically reload UID/GID mapping file /etc/nfs.map. Contributed by Yongjun Zhang\n",
      "commitDate": "06/01/15 4:19 PM",
      "commitName": "788ee35e2bf0f3d445e03e6ea9bd02c40c8fdfe3",
      "commitAuthor": "Brandon Li",
      "diff": "@@ -0,0 +1,33 @@\n+  private synchronized void updateStaticMapping() throws IOException {\n+    final boolean init \u003d (staticMapping \u003d\u003d null);\n+    //\n+    // if the static mapping file\n+    //   - was modified after last update, load the map again;\n+    //   - did not exist but was added since last update, load the map;\n+    //   - existed before but deleted since last update, clear the map\n+    //\n+    if (staticMappingFile.exists()) {\n+      // check modification time, reload the file if the last modification\n+      // time changed since prior load.\n+      long lmTime \u003d staticMappingFile.lastModified();\n+      if (lmTime !\u003d lastModificationTimeStaticMap) {\n+        LOG.info(init? \"Using \" : \"Reloading \" + \"\u0027\" + staticMappingFile\n+            + \"\u0027 for static UID/GID mapping...\");\n+        lastModificationTimeStaticMap \u003d lmTime;\n+        staticMapping \u003d parseStaticMap(staticMappingFile);        \n+      }\n+    } else {\n+      if (init) {\n+        staticMapping \u003d new StaticMapping(new HashMap\u003cInteger, Integer\u003e(),\n+            new HashMap\u003cInteger, Integer\u003e());\n+      }\n+      if (lastModificationTimeStaticMap !\u003d 0 || init) {\n+        // print the following log at initialization or when the static\n+        // mapping file was deleted after prior load\n+        LOG.info(\"Not doing static UID/GID mapping because \u0027\"\n+            + staticMappingFile + \"\u0027 does not exist.\");\n+      }\n+      lastModificationTimeStaticMap \u003d 0;\n+      staticMapping.clear();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void updateStaticMapping() throws IOException {\n    final boolean init \u003d (staticMapping \u003d\u003d null);\n    //\n    // if the static mapping file\n    //   - was modified after last update, load the map again;\n    //   - did not exist but was added since last update, load the map;\n    //   - existed before but deleted since last update, clear the map\n    //\n    if (staticMappingFile.exists()) {\n      // check modification time, reload the file if the last modification\n      // time changed since prior load.\n      long lmTime \u003d staticMappingFile.lastModified();\n      if (lmTime !\u003d lastModificationTimeStaticMap) {\n        LOG.info(init? \"Using \" : \"Reloading \" + \"\u0027\" + staticMappingFile\n            + \"\u0027 for static UID/GID mapping...\");\n        lastModificationTimeStaticMap \u003d lmTime;\n        staticMapping \u003d parseStaticMap(staticMappingFile);        \n      }\n    } else {\n      if (init) {\n        staticMapping \u003d new StaticMapping(new HashMap\u003cInteger, Integer\u003e(),\n            new HashMap\u003cInteger, Integer\u003e());\n      }\n      if (lastModificationTimeStaticMap !\u003d 0 || init) {\n        // print the following log at initialization or when the static\n        // mapping file was deleted after prior load\n        LOG.info(\"Not doing static UID/GID mapping because \u0027\"\n            + staticMappingFile + \"\u0027 does not exist.\");\n      }\n      lastModificationTimeStaticMap \u003d 0;\n      staticMapping.clear();\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/ShellBasedIdMapping.java"
    }
  }
}