{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JobImpl.java",
  "functionName": "isChainJob",
  "functionId": "isChainJob___conf-Configuration",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java",
  "functionStartLine": 1320,
  "functionEndLine": 1345,
  "numCommitsSeen": 96,
  "timeTaken": 8052,
  "changeHistory": [
    "c7e87574cbf6ef73c5c77c0dab353f36f03527db",
    "b7ae5a6cb7b2d3e3112ac53007e984caeb07de58",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "c7e87574cbf6ef73c5c77c0dab353f36f03527db": "Ybodychange",
    "b7ae5a6cb7b2d3e3112ac53007e984caeb07de58": "Ymodifierchange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c7e87574cbf6ef73c5c77c0dab353f36f03527db": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5837. MRAppMaster fails when checking on uber mode. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1589903 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/04/14 3:53 PM",
      "commitName": "c7e87574cbf6ef73c5c77c0dab353f36f03527db",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "18/04/14 1:33 PM",
      "commitNameOld": "8d569c2220236551d5c95e2ebdaaea52eebe37e6",
      "commitAuthorOld": "Jason Darrell Lowe",
      "daysBetweenCommits": 6.1,
      "commitsBetweenForRepo": 36,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,26 @@\n   private boolean isChainJob(Configuration conf) {\n     boolean isChainJob \u003d false;\n     try {\n       String mapClassName \u003d conf.get(MRJobConfig.MAP_CLASS_ATTR);\n       if (mapClassName !\u003d null) {\n         Class\u003c?\u003e mapClass \u003d Class.forName(mapClassName);\n         if (ChainMapper.class.isAssignableFrom(mapClass))\n           isChainJob \u003d true;\n       }\n     } catch (ClassNotFoundException cnfe) {\n       // don\u0027t care; assume it\u0027s not derived from ChainMapper\n+    } catch (NoClassDefFoundError ignored) {\n     }\n     try {\n       String reduceClassName \u003d conf.get(MRJobConfig.REDUCE_CLASS_ATTR);\n       if (reduceClassName !\u003d null) {\n         Class\u003c?\u003e reduceClass \u003d Class.forName(reduceClassName);\n         if (ChainReducer.class.isAssignableFrom(reduceClass))\n           isChainJob \u003d true;\n       }\n     } catch (ClassNotFoundException cnfe) {\n       // don\u0027t care; assume it\u0027s not derived from ChainReducer\n+    } catch (NoClassDefFoundError ignored) {\n     }\n     return isChainJob;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean isChainJob(Configuration conf) {\n    boolean isChainJob \u003d false;\n    try {\n      String mapClassName \u003d conf.get(MRJobConfig.MAP_CLASS_ATTR);\n      if (mapClassName !\u003d null) {\n        Class\u003c?\u003e mapClass \u003d Class.forName(mapClassName);\n        if (ChainMapper.class.isAssignableFrom(mapClass))\n          isChainJob \u003d true;\n      }\n    } catch (ClassNotFoundException cnfe) {\n      // don\u0027t care; assume it\u0027s not derived from ChainMapper\n    } catch (NoClassDefFoundError ignored) {\n    }\n    try {\n      String reduceClassName \u003d conf.get(MRJobConfig.REDUCE_CLASS_ATTR);\n      if (reduceClassName !\u003d null) {\n        Class\u003c?\u003e reduceClass \u003d Class.forName(reduceClassName);\n        if (ChainReducer.class.isAssignableFrom(reduceClass))\n          isChainJob \u003d true;\n      }\n    } catch (ClassNotFoundException cnfe) {\n      // don\u0027t care; assume it\u0027s not derived from ChainReducer\n    } catch (NoClassDefFoundError ignored) {\n    }\n    return isChainJob;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java",
      "extendedDetails": {}
    },
    "b7ae5a6cb7b2d3e3112ac53007e984caeb07de58": {
      "type": "Ymodifierchange",
      "commitMessage": "MAPREDUCE-3426. Fixed MR AM in uber mode to write map intermediate outputs in the correct directory to work properly in secure mode. Contributed by Hitesh Shah.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1213987 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/12/11 3:35 PM",
      "commitName": "b7ae5a6cb7b2d3e3112ac53007e984caeb07de58",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "07/11/11 11:28 PM",
      "commitNameOld": "9fe9f42c8fad872f7aab5f9bbdac4a860edb0d43",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 35.67,
      "commitsBetweenForRepo": 192,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n-    boolean isChainJob(Configuration conf) {\n-      boolean isChainJob \u003d false;\n-      try {\n-        String mapClassName \u003d conf.get(MRJobConfig.MAP_CLASS_ATTR);\n-        if (mapClassName !\u003d null) {\n-          Class\u003c?\u003e mapClass \u003d Class.forName(mapClassName);\n-          if (ChainMapper.class.isAssignableFrom(mapClass))\n-            isChainJob \u003d true;\n-        }\n-      } catch (ClassNotFoundException cnfe) {\n-        // don\u0027t care; assume it\u0027s not derived from ChainMapper\n+  private boolean isChainJob(Configuration conf) {\n+    boolean isChainJob \u003d false;\n+    try {\n+      String mapClassName \u003d conf.get(MRJobConfig.MAP_CLASS_ATTR);\n+      if (mapClassName !\u003d null) {\n+        Class\u003c?\u003e mapClass \u003d Class.forName(mapClassName);\n+        if (ChainMapper.class.isAssignableFrom(mapClass))\n+          isChainJob \u003d true;\n       }\n-      try {\n-        String reduceClassName \u003d conf.get(MRJobConfig.REDUCE_CLASS_ATTR);\n-        if (reduceClassName !\u003d null) {\n-          Class\u003c?\u003e reduceClass \u003d Class.forName(reduceClassName);\n-          if (ChainReducer.class.isAssignableFrom(reduceClass))\n-            isChainJob \u003d true;\n-        }\n-      } catch (ClassNotFoundException cnfe) {\n-        // don\u0027t care; assume it\u0027s not derived from ChainReducer\n+    } catch (ClassNotFoundException cnfe) {\n+      // don\u0027t care; assume it\u0027s not derived from ChainMapper\n+    }\n+    try {\n+      String reduceClassName \u003d conf.get(MRJobConfig.REDUCE_CLASS_ATTR);\n+      if (reduceClassName !\u003d null) {\n+        Class\u003c?\u003e reduceClass \u003d Class.forName(reduceClassName);\n+        if (ChainReducer.class.isAssignableFrom(reduceClass))\n+          isChainJob \u003d true;\n       }\n-      return isChainJob;\n-    }\n\\ No newline at end of file\n+    } catch (ClassNotFoundException cnfe) {\n+      // don\u0027t care; assume it\u0027s not derived from ChainReducer\n+    }\n+    return isChainJob;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean isChainJob(Configuration conf) {\n    boolean isChainJob \u003d false;\n    try {\n      String mapClassName \u003d conf.get(MRJobConfig.MAP_CLASS_ATTR);\n      if (mapClassName !\u003d null) {\n        Class\u003c?\u003e mapClass \u003d Class.forName(mapClassName);\n        if (ChainMapper.class.isAssignableFrom(mapClass))\n          isChainJob \u003d true;\n      }\n    } catch (ClassNotFoundException cnfe) {\n      // don\u0027t care; assume it\u0027s not derived from ChainMapper\n    }\n    try {\n      String reduceClassName \u003d conf.get(MRJobConfig.REDUCE_CLASS_ATTR);\n      if (reduceClassName !\u003d null) {\n        Class\u003c?\u003e reduceClass \u003d Class.forName(reduceClassName);\n        if (ChainReducer.class.isAssignableFrom(reduceClass))\n          isChainJob \u003d true;\n      }\n    } catch (ClassNotFoundException cnfe) {\n      // don\u0027t care; assume it\u0027s not derived from ChainReducer\n    }\n    return isChainJob;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java",
      "extendedDetails": {
        "oldValue": "[]",
        "newValue": "[private]"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    boolean isChainJob(Configuration conf) {\n      boolean isChainJob \u003d false;\n      try {\n        String mapClassName \u003d conf.get(MRJobConfig.MAP_CLASS_ATTR);\n        if (mapClassName !\u003d null) {\n          Class\u003c?\u003e mapClass \u003d Class.forName(mapClassName);\n          if (ChainMapper.class.isAssignableFrom(mapClass))\n            isChainJob \u003d true;\n        }\n      } catch (ClassNotFoundException cnfe) {\n        // don\u0027t care; assume it\u0027s not derived from ChainMapper\n      }\n      try {\n        String reduceClassName \u003d conf.get(MRJobConfig.REDUCE_CLASS_ATTR);\n        if (reduceClassName !\u003d null) {\n          Class\u003c?\u003e reduceClass \u003d Class.forName(reduceClassName);\n          if (ChainReducer.class.isAssignableFrom(reduceClass))\n            isChainJob \u003d true;\n        }\n      } catch (ClassNotFoundException cnfe) {\n        // don\u0027t care; assume it\u0027s not derived from ChainReducer\n      }\n      return isChainJob;\n    }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,24 @@\n+    boolean isChainJob(Configuration conf) {\n+      boolean isChainJob \u003d false;\n+      try {\n+        String mapClassName \u003d conf.get(MRJobConfig.MAP_CLASS_ATTR);\n+        if (mapClassName !\u003d null) {\n+          Class\u003c?\u003e mapClass \u003d Class.forName(mapClassName);\n+          if (ChainMapper.class.isAssignableFrom(mapClass))\n+            isChainJob \u003d true;\n+        }\n+      } catch (ClassNotFoundException cnfe) {\n+        // don\u0027t care; assume it\u0027s not derived from ChainMapper\n+      }\n+      try {\n+        String reduceClassName \u003d conf.get(MRJobConfig.REDUCE_CLASS_ATTR);\n+        if (reduceClassName !\u003d null) {\n+          Class\u003c?\u003e reduceClass \u003d Class.forName(reduceClassName);\n+          if (ChainReducer.class.isAssignableFrom(reduceClass))\n+            isChainJob \u003d true;\n+        }\n+      } catch (ClassNotFoundException cnfe) {\n+        // don\u0027t care; assume it\u0027s not derived from ChainReducer\n+      }\n+      return isChainJob;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    boolean isChainJob(Configuration conf) {\n      boolean isChainJob \u003d false;\n      try {\n        String mapClassName \u003d conf.get(MRJobConfig.MAP_CLASS_ATTR);\n        if (mapClassName !\u003d null) {\n          Class\u003c?\u003e mapClass \u003d Class.forName(mapClassName);\n          if (ChainMapper.class.isAssignableFrom(mapClass))\n            isChainJob \u003d true;\n        }\n      } catch (ClassNotFoundException cnfe) {\n        // don\u0027t care; assume it\u0027s not derived from ChainMapper\n      }\n      try {\n        String reduceClassName \u003d conf.get(MRJobConfig.REDUCE_CLASS_ATTR);\n        if (reduceClassName !\u003d null) {\n          Class\u003c?\u003e reduceClass \u003d Class.forName(reduceClassName);\n          if (ChainReducer.class.isAssignableFrom(reduceClass))\n            isChainJob \u003d true;\n        }\n      } catch (ClassNotFoundException cnfe) {\n        // don\u0027t care; assume it\u0027s not derived from ChainReducer\n      }\n      return isChainJob;\n    }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java"
    }
  }
}