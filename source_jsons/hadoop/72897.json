{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JavaKeyStoreProvider.java",
  "functionName": "loadAndReturnPerm",
  "functionId": "loadAndReturnPerm___pathToLoad-Path__pathToDelete-Path",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/JavaKeyStoreProvider.java",
  "functionStartLine": 252,
  "functionEndLine": 272,
  "numCommitsSeen": 26,
  "timeTaken": 1326,
  "changeHistory": [
    "5af572b6443715b7a741296c1bd520a1840f9a7c",
    "5582b0f1d469e7c98811a341c4b4c78eaa64ede5",
    "74fe84393d9a8c412f69bbf0cd0ad06f3cc85e85"
  ],
  "changeHistoryShort": {
    "5af572b6443715b7a741296c1bd520a1840f9a7c": "Ybodychange",
    "5582b0f1d469e7c98811a341c4b4c78eaa64ede5": "Ybodychange",
    "74fe84393d9a8c412f69bbf0cd0ad06f3cc85e85": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5af572b6443715b7a741296c1bd520a1840f9a7c": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13427. Eliminate needless uses of FileSystem#{exists(), isFile(), isDirectory()}. Contributed by Steve Loughran and Mingliang Liu\n",
      "commitDate": "15/11/16 10:57 AM",
      "commitName": "5af572b6443715b7a741296c1bd520a1840f9a7c",
      "commitAuthor": "Mingliang Liu",
      "commitDateOld": "17/05/16 5:44 PM",
      "commitNameOld": "7154ace71212e9fb9dd6209a92165fb075df7806",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 181.76,
      "commitsBetweenForRepo": 1418,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,21 @@\n   private FsPermission loadAndReturnPerm(Path pathToLoad, Path pathToDelete)\n       throws NoSuchAlgorithmException, CertificateException,\n       IOException {\n     FsPermission perm \u003d null;\n     try {\n       perm \u003d loadFromPath(pathToLoad, password);\n       renameOrFail(pathToLoad, path);\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(String.format(\"KeyStore loaded successfully from \u0027%s\u0027!!\",\n             pathToLoad));\n       }\n-      if (fs.exists(pathToDelete)) {\n-        fs.delete(pathToDelete, true);\n-      }\n+      fs.delete(pathToDelete, true);\n     } catch (IOException e) {\n       // Check for password issue : don\u0027t want to trash file due\n       // to wrong password\n       if (isBadorWrongPassword(e)) {\n         throw e;\n       }\n     }\n     return perm;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private FsPermission loadAndReturnPerm(Path pathToLoad, Path pathToDelete)\n      throws NoSuchAlgorithmException, CertificateException,\n      IOException {\n    FsPermission perm \u003d null;\n    try {\n      perm \u003d loadFromPath(pathToLoad, password);\n      renameOrFail(pathToLoad, path);\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(String.format(\"KeyStore loaded successfully from \u0027%s\u0027!!\",\n            pathToLoad));\n      }\n      fs.delete(pathToDelete, true);\n    } catch (IOException e) {\n      // Check for password issue : don\u0027t want to trash file due\n      // to wrong password\n      if (isBadorWrongPassword(e)) {\n        throw e;\n      }\n    }\n    return perm;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/JavaKeyStoreProvider.java",
      "extendedDetails": {}
    },
    "5582b0f1d469e7c98811a341c4b4c78eaa64ede5": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11741. Add LOG.isDebugEnabled() guard for some LOG.debug(). Contributed by Walter Su.\n",
      "commitDate": "25/03/15 12:36 AM",
      "commitName": "5582b0f1d469e7c98811a341c4b4c78eaa64ede5",
      "commitAuthor": "Tsuyoshi Ozawa",
      "commitDateOld": "02/03/15 9:17 PM",
      "commitNameOld": "d1c6accb6f87b08975175580e15f1ff1fe29ab04",
      "commitAuthorOld": "Tsuyoshi Ozawa",
      "daysBetweenCommits": 22.1,
      "commitsBetweenForRepo": 200,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,23 @@\n   private FsPermission loadAndReturnPerm(Path pathToLoad, Path pathToDelete)\n       throws NoSuchAlgorithmException, CertificateException,\n       IOException {\n     FsPermission perm \u003d null;\n     try {\n       perm \u003d loadFromPath(pathToLoad, password);\n       renameOrFail(pathToLoad, path);\n-      LOG.debug(String.format(\"KeyStore loaded successfully from \u0027%s\u0027!!\",\n-          pathToLoad));\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(String.format(\"KeyStore loaded successfully from \u0027%s\u0027!!\",\n+            pathToLoad));\n+      }\n       if (fs.exists(pathToDelete)) {\n         fs.delete(pathToDelete, true);\n       }\n     } catch (IOException e) {\n       // Check for password issue : don\u0027t want to trash file due\n       // to wrong password\n       if (isBadorWrongPassword(e)) {\n         throw e;\n       }\n     }\n     return perm;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private FsPermission loadAndReturnPerm(Path pathToLoad, Path pathToDelete)\n      throws NoSuchAlgorithmException, CertificateException,\n      IOException {\n    FsPermission perm \u003d null;\n    try {\n      perm \u003d loadFromPath(pathToLoad, password);\n      renameOrFail(pathToLoad, path);\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(String.format(\"KeyStore loaded successfully from \u0027%s\u0027!!\",\n            pathToLoad));\n      }\n      if (fs.exists(pathToDelete)) {\n        fs.delete(pathToDelete, true);\n      }\n    } catch (IOException e) {\n      // Check for password issue : don\u0027t want to trash file due\n      // to wrong password\n      if (isBadorWrongPassword(e)) {\n        throw e;\n      }\n    }\n    return perm;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/JavaKeyStoreProvider.java",
      "extendedDetails": {}
    },
    "74fe84393d9a8c412f69bbf0cd0ad06f3cc85e85": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-10224. JavaKeyStoreProvider has to protect against corrupting underlying store. (asuresh via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1616908 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/08/14 5:00 PM",
      "commitName": "74fe84393d9a8c412f69bbf0cd0ad06f3cc85e85",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,21 @@\n+  private FsPermission loadAndReturnPerm(Path pathToLoad, Path pathToDelete)\n+      throws NoSuchAlgorithmException, CertificateException,\n+      IOException {\n+    FsPermission perm \u003d null;\n+    try {\n+      perm \u003d loadFromPath(pathToLoad, password);\n+      renameOrFail(pathToLoad, path);\n+      LOG.debug(String.format(\"KeyStore loaded successfully from \u0027%s\u0027!!\",\n+          pathToLoad));\n+      if (fs.exists(pathToDelete)) {\n+        fs.delete(pathToDelete, true);\n+      }\n+    } catch (IOException e) {\n+      // Check for password issue : don\u0027t want to trash file due\n+      // to wrong password\n+      if (isBadorWrongPassword(e)) {\n+        throw e;\n+      }\n+    }\n+    return perm;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private FsPermission loadAndReturnPerm(Path pathToLoad, Path pathToDelete)\n      throws NoSuchAlgorithmException, CertificateException,\n      IOException {\n    FsPermission perm \u003d null;\n    try {\n      perm \u003d loadFromPath(pathToLoad, password);\n      renameOrFail(pathToLoad, path);\n      LOG.debug(String.format(\"KeyStore loaded successfully from \u0027%s\u0027!!\",\n          pathToLoad));\n      if (fs.exists(pathToDelete)) {\n        fs.delete(pathToDelete, true);\n      }\n    } catch (IOException e) {\n      // Check for password issue : don\u0027t want to trash file due\n      // to wrong password\n      if (isBadorWrongPassword(e)) {\n        throw e;\n      }\n    }\n    return perm;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/JavaKeyStoreProvider.java"
    }
  }
}