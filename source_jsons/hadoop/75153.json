{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "UserGroupInformation.java",
  "functionName": "reloginFromTicketCache",
  "functionId": "reloginFromTicketCache",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java",
  "functionStartLine": 1256,
  "functionEndLine": 1265,
  "numCommitsSeen": 147,
  "timeTaken": 5464,
  "changeHistory": [
    "59cf7588779145ad5850ad63426743dfe03d8347",
    "4c26c241ad2b907dc02cecefa9846cbe2b0465ba",
    "7fc3e68a876132563aa2321519fc6941e37b2cae",
    "2e853be6577a5b98fd860e6d64f89ca6d160514a",
    "cfa8513890ec1cd7f71258ff3c3083f6d89a4fc4",
    "aea35d93e3b2349098134f285c00d9d529d3496b",
    "4a5ba3b7bd2360fd9605863630b477d362874e1e",
    "96d77c17cc1f792de4ae026f236e091156d28b53",
    "fb4a6ac9e995c79475af99aea044e0fc0558e9b6",
    "d8930feeae116fc53cb0676dad8521992762528c",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "c47d34a8660923f6f6e21e91aa48ca5780c0ff9f",
    "1a6ed79ebf6649d4f0828b8c2adff26d0f79832f"
  ],
  "changeHistoryShort": {
    "59cf7588779145ad5850ad63426743dfe03d8347": "Ymultichange(Ymodifierchange,Ybodychange)",
    "4c26c241ad2b907dc02cecefa9846cbe2b0465ba": "Ybodychange",
    "7fc3e68a876132563aa2321519fc6941e37b2cae": "Ybodychange",
    "2e853be6577a5b98fd860e6d64f89ca6d160514a": "Ybodychange",
    "cfa8513890ec1cd7f71258ff3c3083f6d89a4fc4": "Ybodychange",
    "aea35d93e3b2349098134f285c00d9d529d3496b": "Ybodychange",
    "4a5ba3b7bd2360fd9605863630b477d362874e1e": "Ybodychange",
    "96d77c17cc1f792de4ae026f236e091156d28b53": "Ybodychange",
    "fb4a6ac9e995c79475af99aea044e0fc0558e9b6": "Ybodychange",
    "d8930feeae116fc53cb0676dad8521992762528c": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "c47d34a8660923f6f6e21e91aa48ca5780c0ff9f": "Ybodychange",
    "1a6ed79ebf6649d4f0828b8c2adff26d0f79832f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "59cf7588779145ad5850ad63426743dfe03d8347": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "HADOOP-9747. Reduce unnecessary UGI synchronization. Contributed by Daryn Sharp.\n",
      "commitDate": "23/02/18 11:10 AM",
      "commitName": "59cf7588779145ad5850ad63426743dfe03d8347",
      "commitAuthor": "Kihwal Lee",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "HADOOP-9747. Reduce unnecessary UGI synchronization. Contributed by Daryn Sharp.\n",
          "commitDate": "23/02/18 11:10 AM",
          "commitName": "59cf7588779145ad5850ad63426743dfe03d8347",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "27/12/17 11:17 PM",
          "commitNameOld": "d31c9d8c495794a803fb20729b5ed6b374e23eb4",
          "commitAuthorOld": "Jitendra Pandey",
          "daysBetweenCommits": 57.5,
          "commitsBetweenForRepo": 327,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,39 +1,10 @@\n-  public synchronized void reloginFromTicketCache() throws IOException {\n-    if (!shouldRelogin() || !isKrbTkt) {\n+  public void reloginFromTicketCache() throws IOException {\n+    if (!shouldRelogin() || !isFromTicket()) {\n       return;\n     }\n-    LoginContext login \u003d getLogin();\n+    HadoopLoginContext login \u003d getLogin();\n     if (login \u003d\u003d null) {\n       throw new KerberosAuthException(MUST_FIRST_LOGIN);\n     }\n-    long now \u003d Time.now();\n-    if (!hasSufficientTimeElapsed(now)) {\n-      return;\n-    }\n-    // register most recent relogin attempt\n-    user.setLastLogin(now);\n-    try {\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Initiating logout for \" + getUserName());\n-      }\n-      //clear up the kerberos state. But the tokens are not cleared! As per \n-      //the Java kerberos login module code, only the kerberos credentials\n-      //are cleared\n-      login.logout();\n-      //login and also update the subject field of this instance to \n-      //have the new credentials (pass it to the LoginContext constructor)\n-      login \u003d \n-        newLoginContext(HadoopConfiguration.USER_KERBEROS_CONFIG_NAME, \n-            getSubject(), new HadoopConfiguration());\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Initiating re-login for \" + getUserName());\n-      }\n-      login.login();\n-      fixKerberosTicketOrder();\n-      setLogin(login);\n-    } catch (LoginException le) {\n-      KerberosAuthException kae \u003d new KerberosAuthException(LOGIN_FAILURE, le);\n-      kae.setUser(getUserName());\n-      throw kae;\n-    }\n+    relogin(login);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void reloginFromTicketCache() throws IOException {\n    if (!shouldRelogin() || !isFromTicket()) {\n      return;\n    }\n    HadoopLoginContext login \u003d getLogin();\n    if (login \u003d\u003d null) {\n      throw new KerberosAuthException(MUST_FIRST_LOGIN);\n    }\n    relogin(login);\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java",
          "extendedDetails": {
            "oldValue": "[public, synchronized]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-9747. Reduce unnecessary UGI synchronization. Contributed by Daryn Sharp.\n",
          "commitDate": "23/02/18 11:10 AM",
          "commitName": "59cf7588779145ad5850ad63426743dfe03d8347",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "27/12/17 11:17 PM",
          "commitNameOld": "d31c9d8c495794a803fb20729b5ed6b374e23eb4",
          "commitAuthorOld": "Jitendra Pandey",
          "daysBetweenCommits": 57.5,
          "commitsBetweenForRepo": 327,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,39 +1,10 @@\n-  public synchronized void reloginFromTicketCache() throws IOException {\n-    if (!shouldRelogin() || !isKrbTkt) {\n+  public void reloginFromTicketCache() throws IOException {\n+    if (!shouldRelogin() || !isFromTicket()) {\n       return;\n     }\n-    LoginContext login \u003d getLogin();\n+    HadoopLoginContext login \u003d getLogin();\n     if (login \u003d\u003d null) {\n       throw new KerberosAuthException(MUST_FIRST_LOGIN);\n     }\n-    long now \u003d Time.now();\n-    if (!hasSufficientTimeElapsed(now)) {\n-      return;\n-    }\n-    // register most recent relogin attempt\n-    user.setLastLogin(now);\n-    try {\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Initiating logout for \" + getUserName());\n-      }\n-      //clear up the kerberos state. But the tokens are not cleared! As per \n-      //the Java kerberos login module code, only the kerberos credentials\n-      //are cleared\n-      login.logout();\n-      //login and also update the subject field of this instance to \n-      //have the new credentials (pass it to the LoginContext constructor)\n-      login \u003d \n-        newLoginContext(HadoopConfiguration.USER_KERBEROS_CONFIG_NAME, \n-            getSubject(), new HadoopConfiguration());\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Initiating re-login for \" + getUserName());\n-      }\n-      login.login();\n-      fixKerberosTicketOrder();\n-      setLogin(login);\n-    } catch (LoginException le) {\n-      KerberosAuthException kae \u003d new KerberosAuthException(LOGIN_FAILURE, le);\n-      kae.setUser(getUserName());\n-      throw kae;\n-    }\n+    relogin(login);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void reloginFromTicketCache() throws IOException {\n    if (!shouldRelogin() || !isFromTicket()) {\n      return;\n    }\n    HadoopLoginContext login \u003d getLogin();\n    if (login \u003d\u003d null) {\n      throw new KerberosAuthException(MUST_FIRST_LOGIN);\n    }\n    relogin(login);\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java",
          "extendedDetails": {}
        }
      ]
    },
    "4c26c241ad2b907dc02cecefa9846cbe2b0465ba": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13805. UGI.getCurrentUser() fails if user does not have a keytab associated. Contributed by Xiao Chen, Wei-Chiu Chuang, Yongjun Zhang.\n",
      "commitDate": "17/02/17 9:18 AM",
      "commitName": "4c26c241ad2b907dc02cecefa9846cbe2b0465ba",
      "commitAuthor": "Yongjun Zhang",
      "commitDateOld": "25/01/17 1:29 PM",
      "commitNameOld": "7fc3e68a876132563aa2321519fc6941e37b2cae",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 22.83,
      "commitsBetweenForRepo": 109,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,41 +1,39 @@\n   public synchronized void reloginFromTicketCache() throws IOException {\n-    if (!isSecurityEnabled()\n-        || user.getAuthenticationMethod() !\u003d AuthenticationMethod.KERBEROS\n-        || !isKrbTkt) {\n+    if (!shouldRelogin() || !isKrbTkt) {\n       return;\n     }\n     LoginContext login \u003d getLogin();\n     if (login \u003d\u003d null) {\n       throw new KerberosAuthException(MUST_FIRST_LOGIN);\n     }\n     long now \u003d Time.now();\n     if (!hasSufficientTimeElapsed(now)) {\n       return;\n     }\n     // register most recent relogin attempt\n     user.setLastLogin(now);\n     try {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Initiating logout for \" + getUserName());\n       }\n       //clear up the kerberos state. But the tokens are not cleared! As per \n       //the Java kerberos login module code, only the kerberos credentials\n       //are cleared\n       login.logout();\n       //login and also update the subject field of this instance to \n       //have the new credentials (pass it to the LoginContext constructor)\n       login \u003d \n         newLoginContext(HadoopConfiguration.USER_KERBEROS_CONFIG_NAME, \n             getSubject(), new HadoopConfiguration());\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Initiating re-login for \" + getUserName());\n       }\n       login.login();\n       fixKerberosTicketOrder();\n       setLogin(login);\n     } catch (LoginException le) {\n       KerberosAuthException kae \u003d new KerberosAuthException(LOGIN_FAILURE, le);\n       kae.setUser(getUserName());\n       throw kae;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void reloginFromTicketCache() throws IOException {\n    if (!shouldRelogin() || !isKrbTkt) {\n      return;\n    }\n    LoginContext login \u003d getLogin();\n    if (login \u003d\u003d null) {\n      throw new KerberosAuthException(MUST_FIRST_LOGIN);\n    }\n    long now \u003d Time.now();\n    if (!hasSufficientTimeElapsed(now)) {\n      return;\n    }\n    // register most recent relogin attempt\n    user.setLastLogin(now);\n    try {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Initiating logout for \" + getUserName());\n      }\n      //clear up the kerberos state. But the tokens are not cleared! As per \n      //the Java kerberos login module code, only the kerberos credentials\n      //are cleared\n      login.logout();\n      //login and also update the subject field of this instance to \n      //have the new credentials (pass it to the LoginContext constructor)\n      login \u003d \n        newLoginContext(HadoopConfiguration.USER_KERBEROS_CONFIG_NAME, \n            getSubject(), new HadoopConfiguration());\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Initiating re-login for \" + getUserName());\n      }\n      login.login();\n      fixKerberosTicketOrder();\n      setLogin(login);\n    } catch (LoginException le) {\n      KerberosAuthException kae \u003d new KerberosAuthException(LOGIN_FAILURE, le);\n      kae.setUser(getUserName());\n      throw kae;\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java",
      "extendedDetails": {}
    },
    "7fc3e68a876132563aa2321519fc6941e37b2cae": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13433 Race in UGI.reloginFromKeytab. Contributed by Duo Zhang.\n",
      "commitDate": "25/01/17 1:29 PM",
      "commitName": "7fc3e68a876132563aa2321519fc6941e37b2cae",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "24/11/16 9:54 AM",
      "commitNameOld": "01665e456de8d79000ce273dded5ea53aa62965a",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 62.15,
      "commitsBetweenForRepo": 314,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,39 +1,41 @@\n   public synchronized void reloginFromTicketCache() throws IOException {\n-    if (!isSecurityEnabled() || \n-        user.getAuthenticationMethod() !\u003d AuthenticationMethod.KERBEROS ||\n-        !isKrbTkt)\n+    if (!isSecurityEnabled()\n+        || user.getAuthenticationMethod() !\u003d AuthenticationMethod.KERBEROS\n+        || !isKrbTkt) {\n       return;\n+    }\n     LoginContext login \u003d getLogin();\n     if (login \u003d\u003d null) {\n       throw new KerberosAuthException(MUST_FIRST_LOGIN);\n     }\n     long now \u003d Time.now();\n     if (!hasSufficientTimeElapsed(now)) {\n       return;\n     }\n     // register most recent relogin attempt\n     user.setLastLogin(now);\n     try {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Initiating logout for \" + getUserName());\n       }\n       //clear up the kerberos state. But the tokens are not cleared! As per \n       //the Java kerberos login module code, only the kerberos credentials\n       //are cleared\n       login.logout();\n       //login and also update the subject field of this instance to \n       //have the new credentials (pass it to the LoginContext constructor)\n       login \u003d \n         newLoginContext(HadoopConfiguration.USER_KERBEROS_CONFIG_NAME, \n             getSubject(), new HadoopConfiguration());\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Initiating re-login for \" + getUserName());\n       }\n       login.login();\n+      fixKerberosTicketOrder();\n       setLogin(login);\n     } catch (LoginException le) {\n       KerberosAuthException kae \u003d new KerberosAuthException(LOGIN_FAILURE, le);\n       kae.setUser(getUserName());\n       throw kae;\n-    } \n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void reloginFromTicketCache() throws IOException {\n    if (!isSecurityEnabled()\n        || user.getAuthenticationMethod() !\u003d AuthenticationMethod.KERBEROS\n        || !isKrbTkt) {\n      return;\n    }\n    LoginContext login \u003d getLogin();\n    if (login \u003d\u003d null) {\n      throw new KerberosAuthException(MUST_FIRST_LOGIN);\n    }\n    long now \u003d Time.now();\n    if (!hasSufficientTimeElapsed(now)) {\n      return;\n    }\n    // register most recent relogin attempt\n    user.setLastLogin(now);\n    try {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Initiating logout for \" + getUserName());\n      }\n      //clear up the kerberos state. But the tokens are not cleared! As per \n      //the Java kerberos login module code, only the kerberos credentials\n      //are cleared\n      login.logout();\n      //login and also update the subject field of this instance to \n      //have the new credentials (pass it to the LoginContext constructor)\n      login \u003d \n        newLoginContext(HadoopConfiguration.USER_KERBEROS_CONFIG_NAME, \n            getSubject(), new HadoopConfiguration());\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Initiating re-login for \" + getUserName());\n      }\n      login.login();\n      fixKerberosTicketOrder();\n      setLogin(login);\n    } catch (LoginException le) {\n      KerberosAuthException kae \u003d new KerberosAuthException(LOGIN_FAILURE, le);\n      kae.setUser(getUserName());\n      throw kae;\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java",
      "extendedDetails": {}
    },
    "2e853be6577a5b98fd860e6d64f89ca6d160514a": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13627. Have an explicit KerberosAuthException for UGI to throw, text from public constants. Contributed by Xiao Chen.\n",
      "commitDate": "07/10/16 1:46 PM",
      "commitName": "2e853be6577a5b98fd860e6d64f89ca6d160514a",
      "commitAuthor": "Xiao Chen",
      "commitDateOld": "05/10/16 5:36 PM",
      "commitNameOld": "c5ca2169151a5eec57152775789b6f53664e102c",
      "commitAuthorOld": "Wei-Chiu Chuang",
      "daysBetweenCommits": 1.84,
      "commitsBetweenForRepo": 21,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,39 +1,39 @@\n-  public synchronized void reloginFromTicketCache()\n-  throws IOException {\n+  public synchronized void reloginFromTicketCache() throws IOException {\n     if (!isSecurityEnabled() || \n         user.getAuthenticationMethod() !\u003d AuthenticationMethod.KERBEROS ||\n         !isKrbTkt)\n       return;\n     LoginContext login \u003d getLogin();\n     if (login \u003d\u003d null) {\n-      throw new IOException(\"login must be done first\");\n+      throw new KerberosAuthException(MUST_FIRST_LOGIN);\n     }\n     long now \u003d Time.now();\n     if (!hasSufficientTimeElapsed(now)) {\n       return;\n     }\n     // register most recent relogin attempt\n     user.setLastLogin(now);\n     try {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Initiating logout for \" + getUserName());\n       }\n       //clear up the kerberos state. But the tokens are not cleared! As per \n       //the Java kerberos login module code, only the kerberos credentials\n       //are cleared\n       login.logout();\n       //login and also update the subject field of this instance to \n       //have the new credentials (pass it to the LoginContext constructor)\n       login \u003d \n         newLoginContext(HadoopConfiguration.USER_KERBEROS_CONFIG_NAME, \n             getSubject(), new HadoopConfiguration());\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Initiating re-login for \" + getUserName());\n       }\n       login.login();\n       setLogin(login);\n     } catch (LoginException le) {\n-      throw new IOException(\"Login failure for \" + getUserName() + \": \" + le,\n-          le);\n+      KerberosAuthException kae \u003d new KerberosAuthException(LOGIN_FAILURE, le);\n+      kae.setUser(getUserName());\n+      throw kae;\n     } \n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void reloginFromTicketCache() throws IOException {\n    if (!isSecurityEnabled() || \n        user.getAuthenticationMethod() !\u003d AuthenticationMethod.KERBEROS ||\n        !isKrbTkt)\n      return;\n    LoginContext login \u003d getLogin();\n    if (login \u003d\u003d null) {\n      throw new KerberosAuthException(MUST_FIRST_LOGIN);\n    }\n    long now \u003d Time.now();\n    if (!hasSufficientTimeElapsed(now)) {\n      return;\n    }\n    // register most recent relogin attempt\n    user.setLastLogin(now);\n    try {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Initiating logout for \" + getUserName());\n      }\n      //clear up the kerberos state. But the tokens are not cleared! As per \n      //the Java kerberos login module code, only the kerberos credentials\n      //are cleared\n      login.logout();\n      //login and also update the subject field of this instance to \n      //have the new credentials (pass it to the LoginContext constructor)\n      login \u003d \n        newLoginContext(HadoopConfiguration.USER_KERBEROS_CONFIG_NAME, \n            getSubject(), new HadoopConfiguration());\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Initiating re-login for \" + getUserName());\n      }\n      login.login();\n      setLogin(login);\n    } catch (LoginException le) {\n      KerberosAuthException kae \u003d new KerberosAuthException(LOGIN_FAILURE, le);\n      kae.setUser(getUserName());\n      throw kae;\n    } \n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java",
      "extendedDetails": {}
    },
    "cfa8513890ec1cd7f71258ff3c3083f6d89a4fc4": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12426. Add Entry point for Kerberos health check. Contributed by Steve Loughran.\n",
      "commitDate": "05/02/16 3:47 PM",
      "commitName": "cfa8513890ec1cd7f71258ff3c3083f6d89a4fc4",
      "commitAuthor": "cnauroth",
      "commitDateOld": "22/01/16 12:15 PM",
      "commitNameOld": "d22c4239a40a1c7ed49c06038138f0e3f387b4a0",
      "commitAuthorOld": "Allen Wittenauer",
      "daysBetweenCommits": 14.15,
      "commitsBetweenForRepo": 98,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,39 @@\n   public synchronized void reloginFromTicketCache()\n   throws IOException {\n     if (!isSecurityEnabled() || \n         user.getAuthenticationMethod() !\u003d AuthenticationMethod.KERBEROS ||\n         !isKrbTkt)\n       return;\n     LoginContext login \u003d getLogin();\n     if (login \u003d\u003d null) {\n       throw new IOException(\"login must be done first\");\n     }\n     long now \u003d Time.now();\n     if (!hasSufficientTimeElapsed(now)) {\n       return;\n     }\n     // register most recent relogin attempt\n     user.setLastLogin(now);\n     try {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Initiating logout for \" + getUserName());\n       }\n       //clear up the kerberos state. But the tokens are not cleared! As per \n       //the Java kerberos login module code, only the kerberos credentials\n       //are cleared\n       login.logout();\n       //login and also update the subject field of this instance to \n       //have the new credentials (pass it to the LoginContext constructor)\n       login \u003d \n         newLoginContext(HadoopConfiguration.USER_KERBEROS_CONFIG_NAME, \n             getSubject(), new HadoopConfiguration());\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Initiating re-login for \" + getUserName());\n       }\n       login.login();\n       setLogin(login);\n     } catch (LoginException le) {\n-      throw new IOException(\"Login failure for \" + getUserName(), le);\n+      throw new IOException(\"Login failure for \" + getUserName() + \": \" + le,\n+          le);\n     } \n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void reloginFromTicketCache()\n  throws IOException {\n    if (!isSecurityEnabled() || \n        user.getAuthenticationMethod() !\u003d AuthenticationMethod.KERBEROS ||\n        !isKrbTkt)\n      return;\n    LoginContext login \u003d getLogin();\n    if (login \u003d\u003d null) {\n      throw new IOException(\"login must be done first\");\n    }\n    long now \u003d Time.now();\n    if (!hasSufficientTimeElapsed(now)) {\n      return;\n    }\n    // register most recent relogin attempt\n    user.setLastLogin(now);\n    try {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Initiating logout for \" + getUserName());\n      }\n      //clear up the kerberos state. But the tokens are not cleared! As per \n      //the Java kerberos login module code, only the kerberos credentials\n      //are cleared\n      login.logout();\n      //login and also update the subject field of this instance to \n      //have the new credentials (pass it to the LoginContext constructor)\n      login \u003d \n        newLoginContext(HadoopConfiguration.USER_KERBEROS_CONFIG_NAME, \n            getSubject(), new HadoopConfiguration());\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Initiating re-login for \" + getUserName());\n      }\n      login.login();\n      setLogin(login);\n    } catch (LoginException le) {\n      throw new IOException(\"Login failure for \" + getUserName() + \": \" + le,\n          le);\n    } \n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java",
      "extendedDetails": {}
    },
    "aea35d93e3b2349098134f285c00d9d529d3496b": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10466. Lower the log level in UserGroupInformation.  Contributed by Nicolas Liochon\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1585538 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/04/14 11:07 AM",
      "commitName": "aea35d93e3b2349098134f285c00d9d529d3496b",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "24/03/14 11:36 AM",
      "commitNameOld": "f89ede8d8645ee752961754ddc19bdfc72a03681",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 13.98,
      "commitsBetweenForRepo": 85,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,38 @@\n   public synchronized void reloginFromTicketCache()\n   throws IOException {\n     if (!isSecurityEnabled() || \n         user.getAuthenticationMethod() !\u003d AuthenticationMethod.KERBEROS ||\n         !isKrbTkt)\n       return;\n     LoginContext login \u003d getLogin();\n     if (login \u003d\u003d null) {\n       throw new IOException(\"login must be done first\");\n     }\n     long now \u003d Time.now();\n     if (!hasSufficientTimeElapsed(now)) {\n       return;\n     }\n     // register most recent relogin attempt\n     user.setLastLogin(now);\n     try {\n-      LOG.info(\"Initiating logout for \" + getUserName());\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"Initiating logout for \" + getUserName());\n+      }\n       //clear up the kerberos state. But the tokens are not cleared! As per \n       //the Java kerberos login module code, only the kerberos credentials\n       //are cleared\n       login.logout();\n       //login and also update the subject field of this instance to \n       //have the new credentials (pass it to the LoginContext constructor)\n       login \u003d \n         newLoginContext(HadoopConfiguration.USER_KERBEROS_CONFIG_NAME, \n             getSubject(), new HadoopConfiguration());\n-      LOG.info(\"Initiating re-login for \" + getUserName());\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"Initiating re-login for \" + getUserName());\n+      }\n       login.login();\n       setLogin(login);\n     } catch (LoginException le) {\n       throw new IOException(\"Login failure for \" + getUserName(), le);\n     } \n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void reloginFromTicketCache()\n  throws IOException {\n    if (!isSecurityEnabled() || \n        user.getAuthenticationMethod() !\u003d AuthenticationMethod.KERBEROS ||\n        !isKrbTkt)\n      return;\n    LoginContext login \u003d getLogin();\n    if (login \u003d\u003d null) {\n      throw new IOException(\"login must be done first\");\n    }\n    long now \u003d Time.now();\n    if (!hasSufficientTimeElapsed(now)) {\n      return;\n    }\n    // register most recent relogin attempt\n    user.setLastLogin(now);\n    try {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Initiating logout for \" + getUserName());\n      }\n      //clear up the kerberos state. But the tokens are not cleared! As per \n      //the Java kerberos login module code, only the kerberos credentials\n      //are cleared\n      login.logout();\n      //login and also update the subject field of this instance to \n      //have the new credentials (pass it to the LoginContext constructor)\n      login \u003d \n        newLoginContext(HadoopConfiguration.USER_KERBEROS_CONFIG_NAME, \n            getSubject(), new HadoopConfiguration());\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Initiating re-login for \" + getUserName());\n      }\n      login.login();\n      setLogin(login);\n    } catch (LoginException le) {\n      throw new IOException(\"Login failure for \" + getUserName(), le);\n    } \n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java",
      "extendedDetails": {}
    },
    "4a5ba3b7bd2360fd9605863630b477d362874e1e": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3641. Move server Util time methods to common and use now instead of System#currentTimeMillis. Contributed by Eli Collins\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1360858 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/07/12 12:01 PM",
      "commitName": "4a5ba3b7bd2360fd9605863630b477d362874e1e",
      "commitAuthor": "Eli Collins",
      "commitDateOld": "11/07/12 6:22 PM",
      "commitNameOld": "96d77c17cc1f792de4ae026f236e091156d28b53",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,34 @@\n   public synchronized void reloginFromTicketCache()\n   throws IOException {\n     if (!isSecurityEnabled() || \n         user.getAuthenticationMethod() !\u003d AuthenticationMethod.KERBEROS ||\n         !isKrbTkt)\n       return;\n     LoginContext login \u003d getLogin();\n     if (login \u003d\u003d null) {\n       throw new IOException(\"login must be done first\");\n     }\n-    long now \u003d System.currentTimeMillis();\n+    long now \u003d Time.now();\n     if (!hasSufficientTimeElapsed(now)) {\n       return;\n     }\n     // register most recent relogin attempt\n     user.setLastLogin(now);\n     try {\n       LOG.info(\"Initiating logout for \" + getUserName());\n       //clear up the kerberos state. But the tokens are not cleared! As per \n       //the Java kerberos login module code, only the kerberos credentials\n       //are cleared\n       login.logout();\n       //login and also update the subject field of this instance to \n       //have the new credentials (pass it to the LoginContext constructor)\n       login \u003d \n         newLoginContext(HadoopConfiguration.USER_KERBEROS_CONFIG_NAME, \n             getSubject(), new HadoopConfiguration());\n       LOG.info(\"Initiating re-login for \" + getUserName());\n       login.login();\n       setLogin(login);\n     } catch (LoginException le) {\n       throw new IOException(\"Login failure for \" + getUserName(), le);\n     } \n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void reloginFromTicketCache()\n  throws IOException {\n    if (!isSecurityEnabled() || \n        user.getAuthenticationMethod() !\u003d AuthenticationMethod.KERBEROS ||\n        !isKrbTkt)\n      return;\n    LoginContext login \u003d getLogin();\n    if (login \u003d\u003d null) {\n      throw new IOException(\"login must be done first\");\n    }\n    long now \u003d Time.now();\n    if (!hasSufficientTimeElapsed(now)) {\n      return;\n    }\n    // register most recent relogin attempt\n    user.setLastLogin(now);\n    try {\n      LOG.info(\"Initiating logout for \" + getUserName());\n      //clear up the kerberos state. But the tokens are not cleared! As per \n      //the Java kerberos login module code, only the kerberos credentials\n      //are cleared\n      login.logout();\n      //login and also update the subject field of this instance to \n      //have the new credentials (pass it to the LoginContext constructor)\n      login \u003d \n        newLoginContext(HadoopConfiguration.USER_KERBEROS_CONFIG_NAME, \n            getSubject(), new HadoopConfiguration());\n      LOG.info(\"Initiating re-login for \" + getUserName());\n      login.login();\n      setLogin(login);\n    } catch (LoginException le) {\n      throw new IOException(\"Login failure for \" + getUserName(), le);\n    } \n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java",
      "extendedDetails": {}
    },
    "96d77c17cc1f792de4ae026f236e091156d28b53": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-8585. Fix initialization circularity between UserGroupInformation and HadoopConfiguration. Contributed by Colin Patrick McCabe.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1360498 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/07/12 6:22 PM",
      "commitName": "96d77c17cc1f792de4ae026f236e091156d28b53",
      "commitAuthor": "Aaron Myers",
      "commitDateOld": "10/07/12 11:28 AM",
      "commitNameOld": "fb4a6ac9e995c79475af99aea044e0fc0558e9b6",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 1.29,
      "commitsBetweenForRepo": 18,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,34 @@\n   public synchronized void reloginFromTicketCache()\n   throws IOException {\n     if (!isSecurityEnabled() || \n         user.getAuthenticationMethod() !\u003d AuthenticationMethod.KERBEROS ||\n         !isKrbTkt)\n       return;\n     LoginContext login \u003d getLogin();\n     if (login \u003d\u003d null) {\n       throw new IOException(\"login must be done first\");\n     }\n     long now \u003d System.currentTimeMillis();\n     if (!hasSufficientTimeElapsed(now)) {\n       return;\n     }\n     // register most recent relogin attempt\n     user.setLastLogin(now);\n     try {\n       LOG.info(\"Initiating logout for \" + getUserName());\n       //clear up the kerberos state. But the tokens are not cleared! As per \n       //the Java kerberos login module code, only the kerberos credentials\n       //are cleared\n       login.logout();\n       //login and also update the subject field of this instance to \n       //have the new credentials (pass it to the LoginContext constructor)\n       login \u003d \n         newLoginContext(HadoopConfiguration.USER_KERBEROS_CONFIG_NAME, \n-            getSubject(), HADOOP_LOGIN_CONFIG);\n+            getSubject(), new HadoopConfiguration());\n       LOG.info(\"Initiating re-login for \" + getUserName());\n       login.login();\n       setLogin(login);\n     } catch (LoginException le) {\n       throw new IOException(\"Login failure for \" + getUserName(), le);\n     } \n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void reloginFromTicketCache()\n  throws IOException {\n    if (!isSecurityEnabled() || \n        user.getAuthenticationMethod() !\u003d AuthenticationMethod.KERBEROS ||\n        !isKrbTkt)\n      return;\n    LoginContext login \u003d getLogin();\n    if (login \u003d\u003d null) {\n      throw new IOException(\"login must be done first\");\n    }\n    long now \u003d System.currentTimeMillis();\n    if (!hasSufficientTimeElapsed(now)) {\n      return;\n    }\n    // register most recent relogin attempt\n    user.setLastLogin(now);\n    try {\n      LOG.info(\"Initiating logout for \" + getUserName());\n      //clear up the kerberos state. But the tokens are not cleared! As per \n      //the Java kerberos login module code, only the kerberos credentials\n      //are cleared\n      login.logout();\n      //login and also update the subject field of this instance to \n      //have the new credentials (pass it to the LoginContext constructor)\n      login \u003d \n        newLoginContext(HadoopConfiguration.USER_KERBEROS_CONFIG_NAME, \n            getSubject(), new HadoopConfiguration());\n      LOG.info(\"Initiating re-login for \" + getUserName());\n      login.login();\n      setLogin(login);\n    } catch (LoginException le) {\n      throw new IOException(\"Login failure for \" + getUserName(), le);\n    } \n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java",
      "extendedDetails": {}
    },
    "fb4a6ac9e995c79475af99aea044e0fc0558e9b6": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3568. fuse_dfs: add support for security. Contributed by Colin McCabe.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1359824 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/07/12 11:28 AM",
      "commitName": "fb4a6ac9e995c79475af99aea044e0fc0558e9b6",
      "commitAuthor": "Aaron Myers",
      "commitDateOld": "23/04/12 8:59 PM",
      "commitNameOld": "858887e28921393f64132cf88c3276643f3e5338",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 77.6,
      "commitsBetweenForRepo": 404,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,34 @@\n   public synchronized void reloginFromTicketCache()\n   throws IOException {\n     if (!isSecurityEnabled() || \n         user.getAuthenticationMethod() !\u003d AuthenticationMethod.KERBEROS ||\n         !isKrbTkt)\n       return;\n     LoginContext login \u003d getLogin();\n     if (login \u003d\u003d null) {\n       throw new IOException(\"login must be done first\");\n     }\n     long now \u003d System.currentTimeMillis();\n     if (!hasSufficientTimeElapsed(now)) {\n       return;\n     }\n     // register most recent relogin attempt\n     user.setLastLogin(now);\n     try {\n       LOG.info(\"Initiating logout for \" + getUserName());\n       //clear up the kerberos state. But the tokens are not cleared! As per \n       //the Java kerberos login module code, only the kerberos credentials\n       //are cleared\n       login.logout();\n       //login and also update the subject field of this instance to \n       //have the new credentials (pass it to the LoginContext constructor)\n       login \u003d \n         newLoginContext(HadoopConfiguration.USER_KERBEROS_CONFIG_NAME, \n-            getSubject());\n+            getSubject(), HADOOP_LOGIN_CONFIG);\n       LOG.info(\"Initiating re-login for \" + getUserName());\n       login.login();\n       setLogin(login);\n     } catch (LoginException le) {\n       throw new IOException(\"Login failure for \" + getUserName(), le);\n     } \n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void reloginFromTicketCache()\n  throws IOException {\n    if (!isSecurityEnabled() || \n        user.getAuthenticationMethod() !\u003d AuthenticationMethod.KERBEROS ||\n        !isKrbTkt)\n      return;\n    LoginContext login \u003d getLogin();\n    if (login \u003d\u003d null) {\n      throw new IOException(\"login must be done first\");\n    }\n    long now \u003d System.currentTimeMillis();\n    if (!hasSufficientTimeElapsed(now)) {\n      return;\n    }\n    // register most recent relogin attempt\n    user.setLastLogin(now);\n    try {\n      LOG.info(\"Initiating logout for \" + getUserName());\n      //clear up the kerberos state. But the tokens are not cleared! As per \n      //the Java kerberos login module code, only the kerberos credentials\n      //are cleared\n      login.logout();\n      //login and also update the subject field of this instance to \n      //have the new credentials (pass it to the LoginContext constructor)\n      login \u003d \n        newLoginContext(HadoopConfiguration.USER_KERBEROS_CONFIG_NAME, \n            getSubject(), HADOOP_LOGIN_CONFIG);\n      LOG.info(\"Initiating re-login for \" + getUserName());\n      login.login();\n      setLogin(login);\n    } catch (LoginException le) {\n      throw new IOException(\"Login failure for \" + getUserName(), le);\n    } \n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java",
      "extendedDetails": {}
    },
    "d8930feeae116fc53cb0676dad8521992762528c": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-7853. multiple javax security configurations cause conflicts. (daryn via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1208751 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/11/11 12:26 PM",
      "commitName": "d8930feeae116fc53cb0676dad8521992762528c",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "13/10/11 6:24 PM",
      "commitNameOld": "002dd6968b89ded6a77858ccb50c9b2df074c226",
      "commitAuthorOld": "Jitendra Nath Pandey",
      "daysBetweenCommits": 47.79,
      "commitsBetweenForRepo": 331,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,34 @@\n   public synchronized void reloginFromTicketCache()\n   throws IOException {\n     if (!isSecurityEnabled() || \n         user.getAuthenticationMethod() !\u003d AuthenticationMethod.KERBEROS ||\n         !isKrbTkt)\n       return;\n     LoginContext login \u003d getLogin();\n     if (login \u003d\u003d null) {\n       throw new IOException(\"login must be done first\");\n     }\n     long now \u003d System.currentTimeMillis();\n     if (!hasSufficientTimeElapsed(now)) {\n       return;\n     }\n     // register most recent relogin attempt\n     user.setLastLogin(now);\n     try {\n       LOG.info(\"Initiating logout for \" + getUserName());\n       //clear up the kerberos state. But the tokens are not cleared! As per \n       //the Java kerberos login module code, only the kerberos credentials\n       //are cleared\n       login.logout();\n       //login and also update the subject field of this instance to \n       //have the new credentials (pass it to the LoginContext constructor)\n       login \u003d \n-        new LoginContext(HadoopConfiguration.USER_KERBEROS_CONFIG_NAME, \n+        newLoginContext(HadoopConfiguration.USER_KERBEROS_CONFIG_NAME, \n             getSubject());\n       LOG.info(\"Initiating re-login for \" + getUserName());\n       login.login();\n       setLogin(login);\n     } catch (LoginException le) {\n       throw new IOException(\"Login failure for \" + getUserName(), le);\n     } \n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void reloginFromTicketCache()\n  throws IOException {\n    if (!isSecurityEnabled() || \n        user.getAuthenticationMethod() !\u003d AuthenticationMethod.KERBEROS ||\n        !isKrbTkt)\n      return;\n    LoginContext login \u003d getLogin();\n    if (login \u003d\u003d null) {\n      throw new IOException(\"login must be done first\");\n    }\n    long now \u003d System.currentTimeMillis();\n    if (!hasSufficientTimeElapsed(now)) {\n      return;\n    }\n    // register most recent relogin attempt\n    user.setLastLogin(now);\n    try {\n      LOG.info(\"Initiating logout for \" + getUserName());\n      //clear up the kerberos state. But the tokens are not cleared! As per \n      //the Java kerberos login module code, only the kerberos credentials\n      //are cleared\n      login.logout();\n      //login and also update the subject field of this instance to \n      //have the new credentials (pass it to the LoginContext constructor)\n      login \u003d \n        newLoginContext(HadoopConfiguration.USER_KERBEROS_CONFIG_NAME, \n            getSubject());\n      LOG.info(\"Initiating re-login for \" + getUserName());\n      login.login();\n      setLogin(login);\n    } catch (LoginException le) {\n      throw new IOException(\"Login failure for \" + getUserName(), le);\n    } \n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public synchronized void reloginFromTicketCache()\n  throws IOException {\n    if (!isSecurityEnabled() || \n        user.getAuthenticationMethod() !\u003d AuthenticationMethod.KERBEROS ||\n        !isKrbTkt)\n      return;\n    LoginContext login \u003d getLogin();\n    if (login \u003d\u003d null) {\n      throw new IOException(\"login must be done first\");\n    }\n    long now \u003d System.currentTimeMillis();\n    if (!hasSufficientTimeElapsed(now)) {\n      return;\n    }\n    // register most recent relogin attempt\n    user.setLastLogin(now);\n    try {\n      LOG.info(\"Initiating logout for \" + getUserName());\n      //clear up the kerberos state. But the tokens are not cleared! As per \n      //the Java kerberos login module code, only the kerberos credentials\n      //are cleared\n      login.logout();\n      //login and also update the subject field of this instance to \n      //have the new credentials (pass it to the LoginContext constructor)\n      login \u003d \n        new LoginContext(HadoopConfiguration.USER_KERBEROS_CONFIG_NAME, \n            getSubject());\n      LOG.info(\"Initiating re-login for \" + getUserName());\n      login.login();\n      setLogin(login);\n    } catch (LoginException le) {\n      throw new IOException(\"Login failure for \" + getUserName(), le);\n    } \n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public synchronized void reloginFromTicketCache()\n  throws IOException {\n    if (!isSecurityEnabled() || \n        user.getAuthenticationMethod() !\u003d AuthenticationMethod.KERBEROS ||\n        !isKrbTkt)\n      return;\n    LoginContext login \u003d getLogin();\n    if (login \u003d\u003d null) {\n      throw new IOException(\"login must be done first\");\n    }\n    long now \u003d System.currentTimeMillis();\n    if (!hasSufficientTimeElapsed(now)) {\n      return;\n    }\n    // register most recent relogin attempt\n    user.setLastLogin(now);\n    try {\n      LOG.info(\"Initiating logout for \" + getUserName());\n      //clear up the kerberos state. But the tokens are not cleared! As per \n      //the Java kerberos login module code, only the kerberos credentials\n      //are cleared\n      login.logout();\n      //login and also update the subject field of this instance to \n      //have the new credentials (pass it to the LoginContext constructor)\n      login \u003d \n        new LoginContext(HadoopConfiguration.USER_KERBEROS_CONFIG_NAME, \n            getSubject());\n      LOG.info(\"Initiating re-login for \" + getUserName());\n      login.login();\n      setLogin(login);\n    } catch (LoginException le) {\n      throw new IOException(\"Login failure for \" + getUserName(), le);\n    } \n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/security/UserGroupInformation.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/security/UserGroupInformation.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public synchronized void reloginFromTicketCache()\n  throws IOException {\n    if (!isSecurityEnabled() || \n        user.getAuthenticationMethod() !\u003d AuthenticationMethod.KERBEROS ||\n        !isKrbTkt)\n      return;\n    LoginContext login \u003d getLogin();\n    if (login \u003d\u003d null) {\n      throw new IOException(\"login must be done first\");\n    }\n    long now \u003d System.currentTimeMillis();\n    if (!hasSufficientTimeElapsed(now)) {\n      return;\n    }\n    // register most recent relogin attempt\n    user.setLastLogin(now);\n    try {\n      LOG.info(\"Initiating logout for \" + getUserName());\n      //clear up the kerberos state. But the tokens are not cleared! As per \n      //the Java kerberos login module code, only the kerberos credentials\n      //are cleared\n      login.logout();\n      //login and also update the subject field of this instance to \n      //have the new credentials (pass it to the LoginContext constructor)\n      login \u003d \n        new LoginContext(HadoopConfiguration.USER_KERBEROS_CONFIG_NAME, \n            getSubject());\n      LOG.info(\"Initiating re-login for \" + getUserName());\n      login.login();\n      setLogin(login);\n    } catch (LoginException le) {\n      throw new IOException(\"Login failure for \" + getUserName(), le);\n    } \n  }",
      "path": "common/src/java/org/apache/hadoop/security/UserGroupInformation.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/security/UserGroupInformation.java",
        "newPath": "common/src/java/org/apache/hadoop/security/UserGroupInformation.java"
      }
    },
    "c47d34a8660923f6f6e21e91aa48ca5780c0ff9f": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-6706. Improves the sasl failure handling due to expired tickets, and other server detected failures. Contributed by Jitendra Pandey and Devaraj Das.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@981714 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/10 5:51 PM",
      "commitName": "c47d34a8660923f6f6e21e91aa48ca5780c0ff9f",
      "commitAuthor": "Devaraj Das",
      "commitDateOld": "29/07/10 9:55 PM",
      "commitNameOld": "c15ae29a906cd2ee8ee526cc67f1cc992c673534",
      "commitAuthorOld": "Boris Shkolnik",
      "daysBetweenCommits": 3.83,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,34 @@\n   public synchronized void reloginFromTicketCache()\n   throws IOException {\n     if (!isSecurityEnabled() || \n         user.getAuthenticationMethod() !\u003d AuthenticationMethod.KERBEROS ||\n-        isKeytab)\n+        !isKrbTkt)\n       return;\n     LoginContext login \u003d getLogin();\n     if (login \u003d\u003d null) {\n       throw new IOException(\"login must be done first\");\n     }\n     long now \u003d System.currentTimeMillis();\n     if (!hasSufficientTimeElapsed(now)) {\n       return;\n     }\n     // register most recent relogin attempt\n     user.setLastLogin(now);\n     try {\n       LOG.info(\"Initiating logout for \" + getUserName());\n       //clear up the kerberos state. But the tokens are not cleared! As per \n       //the Java kerberos login module code, only the kerberos credentials\n       //are cleared\n       login.logout();\n       //login and also update the subject field of this instance to \n       //have the new credentials (pass it to the LoginContext constructor)\n       login \u003d \n         new LoginContext(HadoopConfiguration.USER_KERBEROS_CONFIG_NAME, \n             getSubject());\n       LOG.info(\"Initiating re-login for \" + getUserName());\n       login.login();\n       setLogin(login);\n     } catch (LoginException le) {\n       throw new IOException(\"Login failure for \" + getUserName(), le);\n     } \n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void reloginFromTicketCache()\n  throws IOException {\n    if (!isSecurityEnabled() || \n        user.getAuthenticationMethod() !\u003d AuthenticationMethod.KERBEROS ||\n        !isKrbTkt)\n      return;\n    LoginContext login \u003d getLogin();\n    if (login \u003d\u003d null) {\n      throw new IOException(\"login must be done first\");\n    }\n    long now \u003d System.currentTimeMillis();\n    if (!hasSufficientTimeElapsed(now)) {\n      return;\n    }\n    // register most recent relogin attempt\n    user.setLastLogin(now);\n    try {\n      LOG.info(\"Initiating logout for \" + getUserName());\n      //clear up the kerberos state. But the tokens are not cleared! As per \n      //the Java kerberos login module code, only the kerberos credentials\n      //are cleared\n      login.logout();\n      //login and also update the subject field of this instance to \n      //have the new credentials (pass it to the LoginContext constructor)\n      login \u003d \n        new LoginContext(HadoopConfiguration.USER_KERBEROS_CONFIG_NAME, \n            getSubject());\n      LOG.info(\"Initiating re-login for \" + getUserName());\n      login.login();\n      setLogin(login);\n    } catch (LoginException le) {\n      throw new IOException(\"Login failure for \" + getUserName(), le);\n    } \n  }",
      "path": "src/java/org/apache/hadoop/security/UserGroupInformation.java",
      "extendedDetails": {}
    },
    "1a6ed79ebf6649d4f0828b8c2adff26d0f79832f": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-6656. Adds a thread in the UserGroupInformation to renew TGTs periodically. Contributed by Owen O\u0027Malley and Devaraj Das.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@980518 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/07/10 10:29 AM",
      "commitName": "1a6ed79ebf6649d4f0828b8c2adff26d0f79832f",
      "commitAuthor": "Devaraj Das",
      "diff": "@@ -0,0 +1,34 @@\n+  public synchronized void reloginFromTicketCache()\n+  throws IOException {\n+    if (!isSecurityEnabled() || \n+        user.getAuthenticationMethod() !\u003d AuthenticationMethod.KERBEROS ||\n+        isKeytab)\n+      return;\n+    LoginContext login \u003d getLogin();\n+    if (login \u003d\u003d null) {\n+      throw new IOException(\"login must be done first\");\n+    }\n+    long now \u003d System.currentTimeMillis();\n+    if (!hasSufficientTimeElapsed(now)) {\n+      return;\n+    }\n+    // register most recent relogin attempt\n+    user.setLastLogin(now);\n+    try {\n+      LOG.info(\"Initiating logout for \" + getUserName());\n+      //clear up the kerberos state. But the tokens are not cleared! As per \n+      //the Java kerberos login module code, only the kerberos credentials\n+      //are cleared\n+      login.logout();\n+      //login and also update the subject field of this instance to \n+      //have the new credentials (pass it to the LoginContext constructor)\n+      login \u003d \n+        new LoginContext(HadoopConfiguration.USER_KERBEROS_CONFIG_NAME, \n+            getSubject());\n+      LOG.info(\"Initiating re-login for \" + getUserName());\n+      login.login();\n+      setLogin(login);\n+    } catch (LoginException le) {\n+      throw new IOException(\"Login failure for \" + getUserName(), le);\n+    } \n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void reloginFromTicketCache()\n  throws IOException {\n    if (!isSecurityEnabled() || \n        user.getAuthenticationMethod() !\u003d AuthenticationMethod.KERBEROS ||\n        isKeytab)\n      return;\n    LoginContext login \u003d getLogin();\n    if (login \u003d\u003d null) {\n      throw new IOException(\"login must be done first\");\n    }\n    long now \u003d System.currentTimeMillis();\n    if (!hasSufficientTimeElapsed(now)) {\n      return;\n    }\n    // register most recent relogin attempt\n    user.setLastLogin(now);\n    try {\n      LOG.info(\"Initiating logout for \" + getUserName());\n      //clear up the kerberos state. But the tokens are not cleared! As per \n      //the Java kerberos login module code, only the kerberos credentials\n      //are cleared\n      login.logout();\n      //login and also update the subject field of this instance to \n      //have the new credentials (pass it to the LoginContext constructor)\n      login \u003d \n        new LoginContext(HadoopConfiguration.USER_KERBEROS_CONFIG_NAME, \n            getSubject());\n      LOG.info(\"Initiating re-login for \" + getUserName());\n      login.login();\n      setLogin(login);\n    } catch (LoginException le) {\n      throw new IOException(\"Login failure for \" + getUserName(), le);\n    } \n  }",
      "path": "src/java/org/apache/hadoop/security/UserGroupInformation.java"
    }
  }
}