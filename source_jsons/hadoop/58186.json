{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TimelineDelegationTokenSelector.java",
  "functionName": "selectToken",
  "functionId": "selectToken___service-Text__tokens-Collection__Token__? extends TokenIdentifier____",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/security/client/TimelineDelegationTokenSelector.java",
  "functionStartLine": 41,
  "functionEndLine": 56,
  "numCommitsSeen": 4,
  "timeTaken": 1159,
  "changeHistory": [
    "2064ca015d1584263aac0cc20c60b925a3aff612",
    "b867b695565c588e8f86c867cba76397cab62848"
  ],
  "changeHistoryShort": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": "Ybodychange",
    "b867b695565c588e8f86c867cba76397cab62848": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9349.  Changed logging to use slf4j api.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "15/03/19 4:20 PM",
      "commitName": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "03/03/19 11:59 PM",
      "commitNameOld": "bd8d299ded742813cabd4b4e7ce1e33e0d1f9509",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 11.64,
      "commitsBetweenForRepo": 118,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,16 @@\n   public Token\u003cTimelineDelegationTokenIdentifier\u003e selectToken(Text service,\n       Collection\u003cToken\u003c? extends TokenIdentifier\u003e\u003e tokens) {\n     if (service \u003d\u003d null) {\n       return null;\n     }\n-    if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"Looking for a token with service \" + service.toString());\n-    }\n+    LOG.debug(\"Looking for a token with service {}\", service);\n     for (Token\u003c? extends TokenIdentifier\u003e token : tokens) {\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Token kind is \" + token.getKind().toString()\n-            + \" and the token\u0027s service name is \" + token.getService());\n-      }\n+      LOG.debug(\"Token kind is {} and the token\u0027s service name is {}\",\n+          token.getKind(), token.getService());\n       if (TimelineDelegationTokenIdentifier.KIND_NAME.equals(token.getKind())\n           \u0026\u0026 service.equals(token.getService())) {\n         return (Token\u003cTimelineDelegationTokenIdentifier\u003e) token;\n       }\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Token\u003cTimelineDelegationTokenIdentifier\u003e selectToken(Text service,\n      Collection\u003cToken\u003c? extends TokenIdentifier\u003e\u003e tokens) {\n    if (service \u003d\u003d null) {\n      return null;\n    }\n    LOG.debug(\"Looking for a token with service {}\", service);\n    for (Token\u003c? extends TokenIdentifier\u003e token : tokens) {\n      LOG.debug(\"Token kind is {} and the token\u0027s service name is {}\",\n          token.getKind(), token.getService());\n      if (TimelineDelegationTokenIdentifier.KIND_NAME.equals(token.getKind())\n          \u0026\u0026 service.equals(token.getService())) {\n        return (Token\u003cTimelineDelegationTokenIdentifier\u003e) token;\n      }\n    }\n    return null;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/security/client/TimelineDelegationTokenSelector.java",
      "extendedDetails": {}
    },
    "b867b695565c588e8f86c867cba76397cab62848": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2049. Added delegation-token support for the Timeline Server. Contributed by Zhijie Shen.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1597130 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/05/14 10:09 AM",
      "commitName": "b867b695565c588e8f86c867cba76397cab62848",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,20 @@\n+  public Token\u003cTimelineDelegationTokenIdentifier\u003e selectToken(Text service,\n+      Collection\u003cToken\u003c? extends TokenIdentifier\u003e\u003e tokens) {\n+    if (service \u003d\u003d null) {\n+      return null;\n+    }\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"Looking for a token with service \" + service.toString());\n+    }\n+    for (Token\u003c? extends TokenIdentifier\u003e token : tokens) {\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"Token kind is \" + token.getKind().toString()\n+            + \" and the token\u0027s service name is \" + token.getService());\n+      }\n+      if (TimelineDelegationTokenIdentifier.KIND_NAME.equals(token.getKind())\n+          \u0026\u0026 service.equals(token.getService())) {\n+        return (Token\u003cTimelineDelegationTokenIdentifier\u003e) token;\n+      }\n+    }\n+    return null;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Token\u003cTimelineDelegationTokenIdentifier\u003e selectToken(Text service,\n      Collection\u003cToken\u003c? extends TokenIdentifier\u003e\u003e tokens) {\n    if (service \u003d\u003d null) {\n      return null;\n    }\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Looking for a token with service \" + service.toString());\n    }\n    for (Token\u003c? extends TokenIdentifier\u003e token : tokens) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Token kind is \" + token.getKind().toString()\n            + \" and the token\u0027s service name is \" + token.getService());\n      }\n      if (TimelineDelegationTokenIdentifier.KIND_NAME.equals(token.getKind())\n          \u0026\u0026 service.equals(token.getService())) {\n        return (Token\u003cTimelineDelegationTokenIdentifier\u003e) token;\n      }\n    }\n    return null;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/security/client/TimelineDelegationTokenSelector.java"
    }
  }
}