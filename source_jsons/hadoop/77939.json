{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Count.java",
  "functionName": "processOptions",
  "functionId": "processOptions___args-LinkedList__String__",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/Count.java",
  "functionStartLine": 125,
  "functionEndLine": 178,
  "numCommitsSeen": 26,
  "timeTaken": 3012,
  "changeHistory": [
    "b89d875f7b1db4a98d37f13040eecc5afdf1a485",
    "45ff4d38e6175bc59b126633fc46927f8af9b641",
    "f0efea490e5aa9dd629d2199aae9c5b1290a17ee",
    "2fd19b9674420e025af54a5bed12eb96478f8c48",
    "18a3dad44afd8061643fffc5bbe50fa66e47b72c",
    "fb06c0083799fa5ca514447ba6b63ce564272805",
    "a34dafe325902164c04de0bf9d34eccdf6a2cd88",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "a7a3653b7006297958e79146aa46011d6060099f",
    "a65753ddac34a114c51cb0010ee39a9af48b4f9e"
  ],
  "changeHistoryShort": {
    "b89d875f7b1db4a98d37f13040eecc5afdf1a485": "Ybodychange",
    "45ff4d38e6175bc59b126633fc46927f8af9b641": "Ybodychange",
    "f0efea490e5aa9dd629d2199aae9c5b1290a17ee": "Ybodychange",
    "2fd19b9674420e025af54a5bed12eb96478f8c48": "Ybodychange",
    "18a3dad44afd8061643fffc5bbe50fa66e47b72c": "Ybodychange",
    "fb06c0083799fa5ca514447ba6b63ce564272805": "Ybodychange",
    "a34dafe325902164c04de0bf9d34eccdf6a2cd88": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "a7a3653b7006297958e79146aa46011d6060099f": "Ybodychange",
    "a65753ddac34a114c51cb0010ee39a9af48b4f9e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b89d875f7b1db4a98d37f13040eecc5afdf1a485": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16954. Add -S option in \"Count\" command to show only Snapshot Counts. Contributed by hemanthboyina.\n",
      "commitDate": "05/04/20 7:03 PM",
      "commitName": "b89d875f7b1db4a98d37f13040eecc5afdf1a485",
      "commitAuthor": "Takanobu Asanuma",
      "commitDateOld": "11/01/19 10:54 AM",
      "commitNameOld": "fb8932a727f757b2e9c1c61a18145878d0eb77bd",
      "commitAuthorOld": "Giovanni Matteo Fumarola",
      "daysBetweenCommits": 450.3,
      "commitsBetweenForRepo": 2747,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,50 +1,54 @@\n   protected void processOptions(LinkedList\u003cString\u003e args) {\n     CommandFormat cf \u003d new CommandFormat(1, Integer.MAX_VALUE,\n         OPTION_QUOTA, OPTION_HUMAN, OPTION_HEADER, OPTION_QUOTA_AND_USAGE,\n         OPTION_EXCLUDE_SNAPSHOT,\n-        OPTION_ECPOLICY);\n+        OPTION_ECPOLICY, OPTION_SNAPSHOT_COUNT);\n     cf.addOptionWithValue(OPTION_TYPE);\n     cf.parse(args);\n     if (args.isEmpty()) { // default path is the current working directory\n       args.add(\".\");\n     }\n     showQuotas \u003d cf.getOpt(OPTION_QUOTA);\n     humanReadable \u003d cf.getOpt(OPTION_HUMAN);\n     showQuotasAndUsageOnly \u003d cf.getOpt(OPTION_QUOTA_AND_USAGE);\n     excludeSnapshots \u003d cf.getOpt(OPTION_EXCLUDE_SNAPSHOT);\n     displayECPolicy \u003d cf.getOpt(OPTION_ECPOLICY);\n+    showSnapshot \u003d cf.getOpt(OPTION_SNAPSHOT_COUNT);\n \n     if (showQuotas || showQuotasAndUsageOnly) {\n       String types \u003d cf.getOptValue(OPTION_TYPE);\n \n       if (null !\u003d types) {\n         showQuotabyType \u003d true;\n         storageTypes \u003d getAndCheckStorageTypes(types);\n       } else {\n         showQuotabyType \u003d false;\n       }\n       if (excludeSnapshots) {\n         out.println(OPTION_QUOTA + \" or \" + OPTION_QUOTA_AND_USAGE + \" option \"\n             + \"is given, the -x option is ignored.\");\n         excludeSnapshots \u003d false;\n       }\n     }\n \n     if (cf.getOpt(OPTION_HEADER)) {\n       StringBuilder headString \u003d new StringBuilder();\n       if (showQuotabyType) {\n         headString.append(QuotaUsage.getStorageTypeHeader(storageTypes));\n       } else {\n         if (showQuotasAndUsageOnly) {\n           headString.append(QuotaUsage.getHeader());\n         } else {\n           headString.append(ContentSummary.getHeader(showQuotas));\n         }\n       }\n       if(displayECPolicy){\n         headString.append(\"ERASURECODING_POLICY \");\n       }\n+      if (showSnapshot) {\n+        headString.append(ContentSummary.getSnapshotHeader());\n+      }\n       headString.append(\"PATHNAME\");\n       out.println(headString.toString());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void processOptions(LinkedList\u003cString\u003e args) {\n    CommandFormat cf \u003d new CommandFormat(1, Integer.MAX_VALUE,\n        OPTION_QUOTA, OPTION_HUMAN, OPTION_HEADER, OPTION_QUOTA_AND_USAGE,\n        OPTION_EXCLUDE_SNAPSHOT,\n        OPTION_ECPOLICY, OPTION_SNAPSHOT_COUNT);\n    cf.addOptionWithValue(OPTION_TYPE);\n    cf.parse(args);\n    if (args.isEmpty()) { // default path is the current working directory\n      args.add(\".\");\n    }\n    showQuotas \u003d cf.getOpt(OPTION_QUOTA);\n    humanReadable \u003d cf.getOpt(OPTION_HUMAN);\n    showQuotasAndUsageOnly \u003d cf.getOpt(OPTION_QUOTA_AND_USAGE);\n    excludeSnapshots \u003d cf.getOpt(OPTION_EXCLUDE_SNAPSHOT);\n    displayECPolicy \u003d cf.getOpt(OPTION_ECPOLICY);\n    showSnapshot \u003d cf.getOpt(OPTION_SNAPSHOT_COUNT);\n\n    if (showQuotas || showQuotasAndUsageOnly) {\n      String types \u003d cf.getOptValue(OPTION_TYPE);\n\n      if (null !\u003d types) {\n        showQuotabyType \u003d true;\n        storageTypes \u003d getAndCheckStorageTypes(types);\n      } else {\n        showQuotabyType \u003d false;\n      }\n      if (excludeSnapshots) {\n        out.println(OPTION_QUOTA + \" or \" + OPTION_QUOTA_AND_USAGE + \" option \"\n            + \"is given, the -x option is ignored.\");\n        excludeSnapshots \u003d false;\n      }\n    }\n\n    if (cf.getOpt(OPTION_HEADER)) {\n      StringBuilder headString \u003d new StringBuilder();\n      if (showQuotabyType) {\n        headString.append(QuotaUsage.getStorageTypeHeader(storageTypes));\n      } else {\n        if (showQuotasAndUsageOnly) {\n          headString.append(QuotaUsage.getHeader());\n        } else {\n          headString.append(ContentSummary.getHeader(showQuotas));\n        }\n      }\n      if(displayECPolicy){\n        headString.append(\"ERASURECODING_POLICY \");\n      }\n      if (showSnapshot) {\n        headString.append(ContentSummary.getSnapshotHeader());\n      }\n      headString.append(\"PATHNAME\");\n      out.println(headString.toString());\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/Count.java",
      "extendedDetails": {}
    },
    "45ff4d38e6175bc59b126633fc46927f8af9b641": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11647. Add -E option in hdfs \"count\" command to show erasure policy summarization. Contributed by luhuichun.\n",
      "commitDate": "20/06/17 11:55 AM",
      "commitName": "45ff4d38e6175bc59b126633fc46927f8af9b641",
      "commitAuthor": "Lei Xu",
      "commitDateOld": "28/10/16 3:33 PM",
      "commitNameOld": "112f04eb1b771e410ffd232a46e0ee2bc7b99d06",
      "commitAuthorOld": "Wei-Chiu Chuang",
      "daysBetweenCommits": 234.85,
      "commitsBetweenForRepo": 1309,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,42 +1,50 @@\n   protected void processOptions(LinkedList\u003cString\u003e args) {\n     CommandFormat cf \u003d new CommandFormat(1, Integer.MAX_VALUE,\n         OPTION_QUOTA, OPTION_HUMAN, OPTION_HEADER, OPTION_QUOTA_AND_USAGE,\n-        OPTION_EXCLUDE_SNAPSHOT);\n+        OPTION_EXCLUDE_SNAPSHOT,\n+        OPTION_ECPOLICY);\n     cf.addOptionWithValue(OPTION_TYPE);\n     cf.parse(args);\n     if (args.isEmpty()) { // default path is the current working directory\n       args.add(\".\");\n     }\n     showQuotas \u003d cf.getOpt(OPTION_QUOTA);\n     humanReadable \u003d cf.getOpt(OPTION_HUMAN);\n     showQuotasAndUsageOnly \u003d cf.getOpt(OPTION_QUOTA_AND_USAGE);\n     excludeSnapshots \u003d cf.getOpt(OPTION_EXCLUDE_SNAPSHOT);\n+    displayECPolicy \u003d cf.getOpt(OPTION_ECPOLICY);\n \n     if (showQuotas || showQuotasAndUsageOnly) {\n       String types \u003d cf.getOptValue(OPTION_TYPE);\n \n       if (null !\u003d types) {\n         showQuotabyType \u003d true;\n         storageTypes \u003d getAndCheckStorageTypes(types);\n       } else {\n         showQuotabyType \u003d false;\n       }\n       if (excludeSnapshots) {\n         out.println(OPTION_QUOTA + \" or \" + OPTION_QUOTA_AND_USAGE + \" option \"\n             + \"is given, the -x option is ignored.\");\n         excludeSnapshots \u003d false;\n       }\n     }\n \n     if (cf.getOpt(OPTION_HEADER)) {\n+      StringBuilder headString \u003d new StringBuilder();\n       if (showQuotabyType) {\n-        out.println(QuotaUsage.getStorageTypeHeader(storageTypes) + \"PATHNAME\");\n+        headString.append(QuotaUsage.getStorageTypeHeader(storageTypes));\n       } else {\n         if (showQuotasAndUsageOnly) {\n-          out.println(QuotaUsage.getHeader() + \"PATHNAME\");\n+          headString.append(QuotaUsage.getHeader());\n         } else {\n-          out.println(ContentSummary.getHeader(showQuotas) + \"PATHNAME\");\n+          headString.append(ContentSummary.getHeader(showQuotas));\n         }\n       }\n+      if(displayECPolicy){\n+        headString.append(\"ERASURECODING_POLICY \");\n+      }\n+      headString.append(\"PATHNAME\");\n+      out.println(headString.toString());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void processOptions(LinkedList\u003cString\u003e args) {\n    CommandFormat cf \u003d new CommandFormat(1, Integer.MAX_VALUE,\n        OPTION_QUOTA, OPTION_HUMAN, OPTION_HEADER, OPTION_QUOTA_AND_USAGE,\n        OPTION_EXCLUDE_SNAPSHOT,\n        OPTION_ECPOLICY);\n    cf.addOptionWithValue(OPTION_TYPE);\n    cf.parse(args);\n    if (args.isEmpty()) { // default path is the current working directory\n      args.add(\".\");\n    }\n    showQuotas \u003d cf.getOpt(OPTION_QUOTA);\n    humanReadable \u003d cf.getOpt(OPTION_HUMAN);\n    showQuotasAndUsageOnly \u003d cf.getOpt(OPTION_QUOTA_AND_USAGE);\n    excludeSnapshots \u003d cf.getOpt(OPTION_EXCLUDE_SNAPSHOT);\n    displayECPolicy \u003d cf.getOpt(OPTION_ECPOLICY);\n\n    if (showQuotas || showQuotasAndUsageOnly) {\n      String types \u003d cf.getOptValue(OPTION_TYPE);\n\n      if (null !\u003d types) {\n        showQuotabyType \u003d true;\n        storageTypes \u003d getAndCheckStorageTypes(types);\n      } else {\n        showQuotabyType \u003d false;\n      }\n      if (excludeSnapshots) {\n        out.println(OPTION_QUOTA + \" or \" + OPTION_QUOTA_AND_USAGE + \" option \"\n            + \"is given, the -x option is ignored.\");\n        excludeSnapshots \u003d false;\n      }\n    }\n\n    if (cf.getOpt(OPTION_HEADER)) {\n      StringBuilder headString \u003d new StringBuilder();\n      if (showQuotabyType) {\n        headString.append(QuotaUsage.getStorageTypeHeader(storageTypes));\n      } else {\n        if (showQuotasAndUsageOnly) {\n          headString.append(QuotaUsage.getHeader());\n        } else {\n          headString.append(ContentSummary.getHeader(showQuotas));\n        }\n      }\n      if(displayECPolicy){\n        headString.append(\"ERASURECODING_POLICY \");\n      }\n      headString.append(\"PATHNAME\");\n      out.println(headString.toString());\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/Count.java",
      "extendedDetails": {}
    },
    "f0efea490e5aa9dd629d2199aae9c5b1290a17ee": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8986. Add option to -du to calculate directory space usage excluding snapshots. Contributed by Xiao Chen.\n",
      "commitDate": "23/08/16 4:14 AM",
      "commitName": "f0efea490e5aa9dd629d2199aae9c5b1290a17ee",
      "commitAuthor": "Wei-Chiu Chuang",
      "commitDateOld": "22/01/16 7:10 AM",
      "commitNameOld": "2fd19b9674420e025af54a5bed12eb96478f8c48",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 213.84,
      "commitsBetweenForRepo": 1526,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,42 @@\n   protected void processOptions(LinkedList\u003cString\u003e args) {\n     CommandFormat cf \u003d new CommandFormat(1, Integer.MAX_VALUE,\n-        OPTION_QUOTA, OPTION_HUMAN, OPTION_HEADER, OPTION_QUOTA_AND_USAGE);\n+        OPTION_QUOTA, OPTION_HUMAN, OPTION_HEADER, OPTION_QUOTA_AND_USAGE,\n+        OPTION_EXCLUDE_SNAPSHOT);\n     cf.addOptionWithValue(OPTION_TYPE);\n     cf.parse(args);\n     if (args.isEmpty()) { // default path is the current working directory\n       args.add(\".\");\n     }\n     showQuotas \u003d cf.getOpt(OPTION_QUOTA);\n     humanReadable \u003d cf.getOpt(OPTION_HUMAN);\n     showQuotasAndUsageOnly \u003d cf.getOpt(OPTION_QUOTA_AND_USAGE);\n+    excludeSnapshots \u003d cf.getOpt(OPTION_EXCLUDE_SNAPSHOT);\n \n     if (showQuotas || showQuotasAndUsageOnly) {\n       String types \u003d cf.getOptValue(OPTION_TYPE);\n \n       if (null !\u003d types) {\n         showQuotabyType \u003d true;\n         storageTypes \u003d getAndCheckStorageTypes(types);\n       } else {\n         showQuotabyType \u003d false;\n       }\n+      if (excludeSnapshots) {\n+        out.println(OPTION_QUOTA + \" or \" + OPTION_QUOTA_AND_USAGE + \" option \"\n+            + \"is given, the -x option is ignored.\");\n+        excludeSnapshots \u003d false;\n+      }\n     }\n \n     if (cf.getOpt(OPTION_HEADER)) {\n       if (showQuotabyType) {\n         out.println(QuotaUsage.getStorageTypeHeader(storageTypes) + \"PATHNAME\");\n       } else {\n         if (showQuotasAndUsageOnly) {\n           out.println(QuotaUsage.getHeader() + \"PATHNAME\");\n         } else {\n           out.println(ContentSummary.getHeader(showQuotas) + \"PATHNAME\");\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void processOptions(LinkedList\u003cString\u003e args) {\n    CommandFormat cf \u003d new CommandFormat(1, Integer.MAX_VALUE,\n        OPTION_QUOTA, OPTION_HUMAN, OPTION_HEADER, OPTION_QUOTA_AND_USAGE,\n        OPTION_EXCLUDE_SNAPSHOT);\n    cf.addOptionWithValue(OPTION_TYPE);\n    cf.parse(args);\n    if (args.isEmpty()) { // default path is the current working directory\n      args.add(\".\");\n    }\n    showQuotas \u003d cf.getOpt(OPTION_QUOTA);\n    humanReadable \u003d cf.getOpt(OPTION_HUMAN);\n    showQuotasAndUsageOnly \u003d cf.getOpt(OPTION_QUOTA_AND_USAGE);\n    excludeSnapshots \u003d cf.getOpt(OPTION_EXCLUDE_SNAPSHOT);\n\n    if (showQuotas || showQuotasAndUsageOnly) {\n      String types \u003d cf.getOptValue(OPTION_TYPE);\n\n      if (null !\u003d types) {\n        showQuotabyType \u003d true;\n        storageTypes \u003d getAndCheckStorageTypes(types);\n      } else {\n        showQuotabyType \u003d false;\n      }\n      if (excludeSnapshots) {\n        out.println(OPTION_QUOTA + \" or \" + OPTION_QUOTA_AND_USAGE + \" option \"\n            + \"is given, the -x option is ignored.\");\n        excludeSnapshots \u003d false;\n      }\n    }\n\n    if (cf.getOpt(OPTION_HEADER)) {\n      if (showQuotabyType) {\n        out.println(QuotaUsage.getStorageTypeHeader(storageTypes) + \"PATHNAME\");\n      } else {\n        if (showQuotasAndUsageOnly) {\n          out.println(QuotaUsage.getHeader() + \"PATHNAME\");\n        } else {\n          out.println(ContentSummary.getHeader(showQuotas) + \"PATHNAME\");\n        }\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/Count.java",
      "extendedDetails": {}
    },
    "2fd19b9674420e025af54a5bed12eb96478f8c48": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8898. Create API and command-line argument to get quota and quota usage without detailed content summary. Contributed by Ming Ma.\n",
      "commitDate": "22/01/16 7:10 AM",
      "commitName": "2fd19b9674420e025af54a5bed12eb96478f8c48",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "13/04/15 9:01 PM",
      "commitNameOld": "18a3dad44afd8061643fffc5bbe50fa66e47b72c",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 283.46,
      "commitsBetweenForRepo": 2225,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,35 @@\n   protected void processOptions(LinkedList\u003cString\u003e args) {\n     CommandFormat cf \u003d new CommandFormat(1, Integer.MAX_VALUE,\n-        OPTION_QUOTA, OPTION_HUMAN, OPTION_HEADER);\n+        OPTION_QUOTA, OPTION_HUMAN, OPTION_HEADER, OPTION_QUOTA_AND_USAGE);\n     cf.addOptionWithValue(OPTION_TYPE);\n     cf.parse(args);\n     if (args.isEmpty()) { // default path is the current working directory\n       args.add(\".\");\n     }\n     showQuotas \u003d cf.getOpt(OPTION_QUOTA);\n     humanReadable \u003d cf.getOpt(OPTION_HUMAN);\n+    showQuotasAndUsageOnly \u003d cf.getOpt(OPTION_QUOTA_AND_USAGE);\n \n-    if (showQuotas) {\n+    if (showQuotas || showQuotasAndUsageOnly) {\n       String types \u003d cf.getOptValue(OPTION_TYPE);\n \n       if (null !\u003d types) {\n         showQuotabyType \u003d true;\n         storageTypes \u003d getAndCheckStorageTypes(types);\n       } else {\n         showQuotabyType \u003d false;\n       }\n     }\n \n     if (cf.getOpt(OPTION_HEADER)) {\n       if (showQuotabyType) {\n-        out.println(ContentSummary.getStorageTypeHeader(storageTypes) + \"PATHNAME\");\n+        out.println(QuotaUsage.getStorageTypeHeader(storageTypes) + \"PATHNAME\");\n       } else {\n-        out.println(ContentSummary.getHeader(showQuotas) + \"PATHNAME\");\n+        if (showQuotasAndUsageOnly) {\n+          out.println(QuotaUsage.getHeader() + \"PATHNAME\");\n+        } else {\n+          out.println(ContentSummary.getHeader(showQuotas) + \"PATHNAME\");\n+        }\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void processOptions(LinkedList\u003cString\u003e args) {\n    CommandFormat cf \u003d new CommandFormat(1, Integer.MAX_VALUE,\n        OPTION_QUOTA, OPTION_HUMAN, OPTION_HEADER, OPTION_QUOTA_AND_USAGE);\n    cf.addOptionWithValue(OPTION_TYPE);\n    cf.parse(args);\n    if (args.isEmpty()) { // default path is the current working directory\n      args.add(\".\");\n    }\n    showQuotas \u003d cf.getOpt(OPTION_QUOTA);\n    humanReadable \u003d cf.getOpt(OPTION_HUMAN);\n    showQuotasAndUsageOnly \u003d cf.getOpt(OPTION_QUOTA_AND_USAGE);\n\n    if (showQuotas || showQuotasAndUsageOnly) {\n      String types \u003d cf.getOptValue(OPTION_TYPE);\n\n      if (null !\u003d types) {\n        showQuotabyType \u003d true;\n        storageTypes \u003d getAndCheckStorageTypes(types);\n      } else {\n        showQuotabyType \u003d false;\n      }\n    }\n\n    if (cf.getOpt(OPTION_HEADER)) {\n      if (showQuotabyType) {\n        out.println(QuotaUsage.getStorageTypeHeader(storageTypes) + \"PATHNAME\");\n      } else {\n        if (showQuotasAndUsageOnly) {\n          out.println(QuotaUsage.getHeader() + \"PATHNAME\");\n        } else {\n          out.println(ContentSummary.getHeader(showQuotas) + \"PATHNAME\");\n        }\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/Count.java",
      "extendedDetails": {}
    },
    "18a3dad44afd8061643fffc5bbe50fa66e47b72c": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7701. Support reporting per storage type quota and usage with hadoop/hdfs shell. (Contributed by Peter Shi)\n",
      "commitDate": "13/04/15 9:01 PM",
      "commitName": "18a3dad44afd8061643fffc5bbe50fa66e47b72c",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "05/02/15 7:44 AM",
      "commitNameOld": "fb06c0083799fa5ca514447ba6b63ce564272805",
      "commitAuthorOld": "Allen Wittenauer",
      "daysBetweenCommits": 67.51,
      "commitsBetweenForRepo": 635,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,30 @@\n   protected void processOptions(LinkedList\u003cString\u003e args) {\n     CommandFormat cf \u003d new CommandFormat(1, Integer.MAX_VALUE,\n         OPTION_QUOTA, OPTION_HUMAN, OPTION_HEADER);\n+    cf.addOptionWithValue(OPTION_TYPE);\n     cf.parse(args);\n     if (args.isEmpty()) { // default path is the current working directory\n       args.add(\".\");\n     }\n     showQuotas \u003d cf.getOpt(OPTION_QUOTA);\n     humanReadable \u003d cf.getOpt(OPTION_HUMAN);\n+\n+    if (showQuotas) {\n+      String types \u003d cf.getOptValue(OPTION_TYPE);\n+\n+      if (null !\u003d types) {\n+        showQuotabyType \u003d true;\n+        storageTypes \u003d getAndCheckStorageTypes(types);\n+      } else {\n+        showQuotabyType \u003d false;\n+      }\n+    }\n+\n     if (cf.getOpt(OPTION_HEADER)) {\n-      out.println(ContentSummary.getHeader(showQuotas) + \"PATHNAME\");\n+      if (showQuotabyType) {\n+        out.println(ContentSummary.getStorageTypeHeader(storageTypes) + \"PATHNAME\");\n+      } else {\n+        out.println(ContentSummary.getHeader(showQuotas) + \"PATHNAME\");\n+      }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void processOptions(LinkedList\u003cString\u003e args) {\n    CommandFormat cf \u003d new CommandFormat(1, Integer.MAX_VALUE,\n        OPTION_QUOTA, OPTION_HUMAN, OPTION_HEADER);\n    cf.addOptionWithValue(OPTION_TYPE);\n    cf.parse(args);\n    if (args.isEmpty()) { // default path is the current working directory\n      args.add(\".\");\n    }\n    showQuotas \u003d cf.getOpt(OPTION_QUOTA);\n    humanReadable \u003d cf.getOpt(OPTION_HUMAN);\n\n    if (showQuotas) {\n      String types \u003d cf.getOptValue(OPTION_TYPE);\n\n      if (null !\u003d types) {\n        showQuotabyType \u003d true;\n        storageTypes \u003d getAndCheckStorageTypes(types);\n      } else {\n        showQuotabyType \u003d false;\n      }\n    }\n\n    if (cf.getOpt(OPTION_HEADER)) {\n      if (showQuotabyType) {\n        out.println(ContentSummary.getStorageTypeHeader(storageTypes) + \"PATHNAME\");\n      } else {\n        out.println(ContentSummary.getHeader(showQuotas) + \"PATHNAME\");\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/Count.java",
      "extendedDetails": {}
    },
    "fb06c0083799fa5ca514447ba6b63ce564272805": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-7713. dfs -count -q should label output column (Jonathan Allen via aw)\n",
      "commitDate": "05/02/15 7:44 AM",
      "commitName": "fb06c0083799fa5ca514447ba6b63ce564272805",
      "commitAuthor": "Allen Wittenauer",
      "commitDateOld": "13/08/14 10:30 AM",
      "commitNameOld": "a34dafe325902164c04de0bf9d34eccdf6a2cd88",
      "commitAuthorOld": "Allen Wittenauer",
      "daysBetweenCommits": 175.93,
      "commitsBetweenForRepo": 1474,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,13 @@\n   protected void processOptions(LinkedList\u003cString\u003e args) {\n     CommandFormat cf \u003d new CommandFormat(1, Integer.MAX_VALUE,\n-      OPTION_QUOTA, OPTION_HUMAN);\n+        OPTION_QUOTA, OPTION_HUMAN, OPTION_HEADER);\n     cf.parse(args);\n     if (args.isEmpty()) { // default path is the current working directory\n       args.add(\".\");\n     }\n     showQuotas \u003d cf.getOpt(OPTION_QUOTA);\n     humanReadable \u003d cf.getOpt(OPTION_HUMAN);\n+    if (cf.getOpt(OPTION_HEADER)) {\n+      out.println(ContentSummary.getHeader(showQuotas) + \"PATHNAME\");\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void processOptions(LinkedList\u003cString\u003e args) {\n    CommandFormat cf \u003d new CommandFormat(1, Integer.MAX_VALUE,\n        OPTION_QUOTA, OPTION_HUMAN, OPTION_HEADER);\n    cf.parse(args);\n    if (args.isEmpty()) { // default path is the current working directory\n      args.add(\".\");\n    }\n    showQuotas \u003d cf.getOpt(OPTION_QUOTA);\n    humanReadable \u003d cf.getOpt(OPTION_HUMAN);\n    if (cf.getOpt(OPTION_HEADER)) {\n      out.println(ContentSummary.getHeader(showQuotas) + \"PATHNAME\");\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/Count.java",
      "extendedDetails": {}
    },
    "a34dafe325902164c04de0bf9d34eccdf6a2cd88": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-8944. Shell command fs -count should include human readable option (Jonathan Allen via aw)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1617775 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/08/14 10:30 AM",
      "commitName": "a34dafe325902164c04de0bf9d34eccdf6a2cd88",
      "commitAuthor": "Allen Wittenauer",
      "commitDateOld": "03/03/14 2:08 PM",
      "commitNameOld": "1690856b2409fba866043ef81d53cbf28f531ce3",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 162.81,
      "commitsBetweenForRepo": 1083,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,10 @@\n   protected void processOptions(LinkedList\u003cString\u003e args) {\n-    CommandFormat cf \u003d new CommandFormat(1, Integer.MAX_VALUE, \"q\");\n+    CommandFormat cf \u003d new CommandFormat(1, Integer.MAX_VALUE,\n+      OPTION_QUOTA, OPTION_HUMAN);\n     cf.parse(args);\n     if (args.isEmpty()) { // default path is the current working directory\n       args.add(\".\");\n     }\n-    showQuotas \u003d cf.getOpt(\"q\");\n+    showQuotas \u003d cf.getOpt(OPTION_QUOTA);\n+    humanReadable \u003d cf.getOpt(OPTION_HUMAN);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void processOptions(LinkedList\u003cString\u003e args) {\n    CommandFormat cf \u003d new CommandFormat(1, Integer.MAX_VALUE,\n      OPTION_QUOTA, OPTION_HUMAN);\n    cf.parse(args);\n    if (args.isEmpty()) { // default path is the current working directory\n      args.add(\".\");\n    }\n    showQuotas \u003d cf.getOpt(OPTION_QUOTA);\n    humanReadable \u003d cf.getOpt(OPTION_HUMAN);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/Count.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected void processOptions(LinkedList\u003cString\u003e args) {\n    CommandFormat cf \u003d new CommandFormat(1, Integer.MAX_VALUE, \"q\");\n    cf.parse(args);\n    if (args.isEmpty()) { // default path is the current working directory\n      args.add(\".\");\n    }\n    showQuotas \u003d cf.getOpt(\"q\");\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/Count.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/shell/Count.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/Count.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected void processOptions(LinkedList\u003cString\u003e args) {\n    CommandFormat cf \u003d new CommandFormat(1, Integer.MAX_VALUE, \"q\");\n    cf.parse(args);\n    if (args.isEmpty()) { // default path is the current working directory\n      args.add(\".\");\n    }\n    showQuotas \u003d cf.getOpt(\"q\");\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/fs/shell/Count.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/fs/shell/Count.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/shell/Count.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected void processOptions(LinkedList\u003cString\u003e args) {\n    CommandFormat cf \u003d new CommandFormat(1, Integer.MAX_VALUE, \"q\");\n    cf.parse(args);\n    if (args.isEmpty()) { // default path is the current working directory\n      args.add(\".\");\n    }\n    showQuotas \u003d cf.getOpt(\"q\");\n  }",
      "path": "common/src/java/org/apache/hadoop/fs/shell/Count.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/fs/shell/Count.java",
        "newPath": "common/src/java/org/apache/hadoop/fs/shell/Count.java"
      }
    },
    "a7a3653b7006297958e79146aa46011d6060099f": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-7341. Fix options parsing in CommandFormat. Contributed by Daryn Sharp.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1132505 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/06/11 4:42 PM",
      "commitName": "a7a3653b7006297958e79146aa46011d6060099f",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "10/05/11 2:29 PM",
      "commitNameOld": "a5290c9eca69027cff2448d05fee6983cbb54cd7",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 26.09,
      "commitsBetweenForRepo": 56,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,8 @@\n   protected void processOptions(LinkedList\u003cString\u003e args) {\n-    CommandFormat cf \u003d new CommandFormat(NAME, 1, Integer.MAX_VALUE, \"q\");\n+    CommandFormat cf \u003d new CommandFormat(1, Integer.MAX_VALUE, \"q\");\n     cf.parse(args);\n     if (args.isEmpty()) { // default path is the current working directory\n       args.add(\".\");\n     }\n     showQuotas \u003d cf.getOpt(\"q\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void processOptions(LinkedList\u003cString\u003e args) {\n    CommandFormat cf \u003d new CommandFormat(1, Integer.MAX_VALUE, \"q\");\n    cf.parse(args);\n    if (args.isEmpty()) { // default path is the current working directory\n      args.add(\".\");\n    }\n    showQuotas \u003d cf.getOpt(\"q\");\n  }",
      "path": "src/java/org/apache/hadoop/fs/shell/Count.java",
      "extendedDetails": {}
    },
    "a65753ddac34a114c51cb0010ee39a9af48b4f9e": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7202. Improve shell Command base class.  Contributed by Daryn Sharp\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1090039 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/04/11 2:59 PM",
      "commitName": "a65753ddac34a114c51cb0010ee39a9af48b4f9e",
      "commitAuthor": "Tsz-wo Sze",
      "diff": "@@ -0,0 +1,8 @@\n+  protected void processOptions(LinkedList\u003cString\u003e args) {\n+    CommandFormat cf \u003d new CommandFormat(NAME, 1, Integer.MAX_VALUE, \"q\");\n+    cf.parse(args);\n+    if (args.isEmpty()) { // default path is the current working directory\n+      args.add(\".\");\n+    }\n+    showQuotas \u003d cf.getOpt(\"q\");\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void processOptions(LinkedList\u003cString\u003e args) {\n    CommandFormat cf \u003d new CommandFormat(NAME, 1, Integer.MAX_VALUE, \"q\");\n    cf.parse(args);\n    if (args.isEmpty()) { // default path is the current working directory\n      args.add(\".\");\n    }\n    showQuotas \u003d cf.getOpt(\"q\");\n  }",
      "path": "src/java/org/apache/hadoop/fs/shell/Count.java"
    }
  }
}