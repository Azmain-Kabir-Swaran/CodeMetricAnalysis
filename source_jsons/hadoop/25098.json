{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ClientServiceDelegate.java",
  "functionName": "killTask",
  "functionId": "killTask___taskAttemptID-TaskAttemptID__fail-boolean",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ClientServiceDelegate.java",
  "functionStartLine": 463,
  "functionEndLine": 477,
  "numCommitsSeen": 51,
  "timeTaken": 7577,
  "changeHistory": [
    "97ae5b675ff675224fdc7dcf45cd06a26d79218d",
    "0d2bb0623696c2cc822cb44e431345b2c773dbff",
    "f2b91a8367a762091482074505618b570a520b19",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "97ae5b675ff675224fdc7dcf45cd06a26d79218d": "Yexceptionschange",
    "0d2bb0623696c2cc822cb44e431345b2c773dbff": "Ymodifierchange",
    "f2b91a8367a762091482074505618b570a520b19": "Ymultichange(Ymodifierchange,Ybodychange)",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "97ae5b675ff675224fdc7dcf45cd06a26d79218d": {
      "type": "Yexceptionschange",
      "commitMessage": "MAPREDUCE-4074. Client continuously retries to RM When RM goes down before launching Application Master (xieguiming via tgraves)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1327972 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/04/12 7:44 AM",
      "commitName": "97ae5b675ff675224fdc7dcf45cd06a26d79218d",
      "commitAuthor": "Thomas Graves",
      "commitDateOld": "14/03/12 3:02 PM",
      "commitNameOld": "7609243e582da9a7d008fc71569897715ced80cb",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 35.7,
      "commitsBetweenForRepo": 286,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n   public boolean killTask(TaskAttemptID taskAttemptID, boolean fail)\n-       throws YarnRemoteException {\n+       throws IOException {\n     org.apache.hadoop.mapreduce.v2.api.records.TaskAttemptId attemptID\n       \u003d TypeConverter.toYarn(taskAttemptID);\n     if (fail) {\n       FailTaskAttemptRequest failRequest \u003d recordFactory.newRecordInstance(FailTaskAttemptRequest.class);\n       failRequest.setTaskAttemptId(attemptID);\n       invoke(\"failTaskAttempt\", FailTaskAttemptRequest.class, failRequest);\n     } else {\n       KillTaskAttemptRequest killRequest \u003d recordFactory.newRecordInstance(KillTaskAttemptRequest.class);\n       killRequest.setTaskAttemptId(attemptID);\n       invoke(\"killTaskAttempt\", KillTaskAttemptRequest.class, killRequest);\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean killTask(TaskAttemptID taskAttemptID, boolean fail)\n       throws IOException {\n    org.apache.hadoop.mapreduce.v2.api.records.TaskAttemptId attemptID\n      \u003d TypeConverter.toYarn(taskAttemptID);\n    if (fail) {\n      FailTaskAttemptRequest failRequest \u003d recordFactory.newRecordInstance(FailTaskAttemptRequest.class);\n      failRequest.setTaskAttemptId(attemptID);\n      invoke(\"failTaskAttempt\", FailTaskAttemptRequest.class, failRequest);\n    } else {\n      KillTaskAttemptRequest killRequest \u003d recordFactory.newRecordInstance(KillTaskAttemptRequest.class);\n      killRequest.setTaskAttemptId(attemptID);\n      invoke(\"killTaskAttempt\", KillTaskAttemptRequest.class, killRequest);\n    }\n    return true;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ClientServiceDelegate.java",
      "extendedDetails": {
        "oldValue": "[YarnRemoteException]",
        "newValue": "[IOException]"
      }
    },
    "0d2bb0623696c2cc822cb44e431345b2c773dbff": {
      "type": "Ymodifierchange",
      "commitMessage": "MAPREDUCE-3054. Unable to kill submitted jobs. (mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1176600 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/09/11 1:30 PM",
      "commitName": "0d2bb0623696c2cc822cb44e431345b2c773dbff",
      "commitAuthor": "Mahadev Konar",
      "commitDateOld": "25/09/11 7:46 AM",
      "commitNameOld": "a5c9ede1433871fcf4e2e802ee2a65950ecd1e72",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 2.24,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n-  boolean killTask(TaskAttemptID taskAttemptID, boolean fail)\n+  public boolean killTask(TaskAttemptID taskAttemptID, boolean fail)\n        throws YarnRemoteException {\n     org.apache.hadoop.mapreduce.v2.api.records.TaskAttemptId attemptID \n       \u003d TypeConverter.toYarn(taskAttemptID);\n     if (fail) {\n       FailTaskAttemptRequest failRequest \u003d recordFactory.newRecordInstance(FailTaskAttemptRequest.class);\n       failRequest.setTaskAttemptId(attemptID);\n       invoke(\"failTaskAttempt\", FailTaskAttemptRequest.class, failRequest);\n     } else {\n       KillTaskAttemptRequest killRequest \u003d recordFactory.newRecordInstance(KillTaskAttemptRequest.class);\n       killRequest.setTaskAttemptId(attemptID);\n       invoke(\"killTaskAttempt\", KillTaskAttemptRequest.class, killRequest);\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean killTask(TaskAttemptID taskAttemptID, boolean fail)\n       throws YarnRemoteException {\n    org.apache.hadoop.mapreduce.v2.api.records.TaskAttemptId attemptID \n      \u003d TypeConverter.toYarn(taskAttemptID);\n    if (fail) {\n      FailTaskAttemptRequest failRequest \u003d recordFactory.newRecordInstance(FailTaskAttemptRequest.class);\n      failRequest.setTaskAttemptId(attemptID);\n      invoke(\"failTaskAttempt\", FailTaskAttemptRequest.class, failRequest);\n    } else {\n      KillTaskAttemptRequest killRequest \u003d recordFactory.newRecordInstance(KillTaskAttemptRequest.class);\n      killRequest.setTaskAttemptId(attemptID);\n      invoke(\"killTaskAttempt\", KillTaskAttemptRequest.class, killRequest);\n    }\n    return true;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ClientServiceDelegate.java",
      "extendedDetails": {
        "oldValue": "[]",
        "newValue": "[public]"
      }
    },
    "f2b91a8367a762091482074505618b570a520b19": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": " MAPREDUCE-2807. Fix AM restart and client redirection. Contributed by Sharad Agarwal.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161408 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 11:35 PM",
      "commitName": "f2b91a8367a762091482074505618b570a520b19",
      "commitAuthor": "Sharad Agarwal",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": " MAPREDUCE-2807. Fix AM restart and client redirection. Contributed by Sharad Agarwal.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161408 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "24/08/11 11:35 PM",
          "commitName": "f2b91a8367a762091482074505618b570a520b19",
          "commitAuthor": "Sharad Agarwal",
          "commitDateOld": "24/08/11 5:14 PM",
          "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 0.26,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,42 +1,15 @@\n-  public boolean killTask(TaskAttemptID taskAttemptID, boolean fail)\n-  throws YarnRemoteException {\n+  boolean killTask(TaskAttemptID taskAttemptID, boolean fail)\n+       throws YarnRemoteException {\n     org.apache.hadoop.mapreduce.v2.api.records.TaskAttemptId attemptID \n-    \u003d TypeConverter.toYarn(taskAttemptID);\n-    KillTaskAttemptRequest killRequest \u003d recordFactory.newRecordInstance(KillTaskAttemptRequest.class);\n-    FailTaskAttemptRequest failRequest \u003d recordFactory.newRecordInstance(FailTaskAttemptRequest.class);\n-    MRClientProtocol protocol \u003d getProxy(taskAttemptID.getJobID());\n-    if (protocol \u003d\u003d null) {\n-      return false;\n-    }\n-    try {\n-      if (fail) {\n-        failRequest.setTaskAttemptId(attemptID);\n-        getProxy(taskAttemptID.getJobID()).failTaskAttempt(failRequest);\n-      } else {\n-        killRequest.setTaskAttemptId(attemptID);\n-        getProxy(taskAttemptID.getJobID()).killTaskAttempt(killRequest);\n-      }\n-    } catch(YarnRemoteException yre) {//thrown by remote server, no need to redirect\n-      LOG.warn(RPCUtil.toString(yre));\n-      throw yre;\n-    } catch(Exception e) {\n-      LOG.debug(\"Failed to contact application master \", e);\n-      MRClientProtocol proxy \u003d getRefreshedProxy(taskAttemptID.getJobID());\n-      if (proxy \u003d\u003d null) {\n-        return false;\n-      }\n-      try {\n-        if (fail) {\n-          failRequest.setTaskAttemptId(attemptID);\n-          proxy.failTaskAttempt(failRequest);\n-        } else {\n-          killRequest.setTaskAttemptId(attemptID);\n-          proxy.killTaskAttempt(killRequest);\n-        }\n-      } catch(YarnRemoteException yre) {\n-        LOG.warn(RPCUtil.toString(yre));\n-        throw yre;\n-      }\n+      \u003d TypeConverter.toYarn(taskAttemptID);\n+    if (fail) {\n+      FailTaskAttemptRequest failRequest \u003d recordFactory.newRecordInstance(FailTaskAttemptRequest.class);\n+      failRequest.setTaskAttemptId(attemptID);\n+      invoke(\"failTaskAttempt\", FailTaskAttemptRequest.class, failRequest);\n+    } else {\n+      KillTaskAttemptRequest killRequest \u003d recordFactory.newRecordInstance(KillTaskAttemptRequest.class);\n+      killRequest.setTaskAttemptId(attemptID);\n+      invoke(\"killTaskAttempt\", KillTaskAttemptRequest.class, killRequest);\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  boolean killTask(TaskAttemptID taskAttemptID, boolean fail)\n       throws YarnRemoteException {\n    org.apache.hadoop.mapreduce.v2.api.records.TaskAttemptId attemptID \n      \u003d TypeConverter.toYarn(taskAttemptID);\n    if (fail) {\n      FailTaskAttemptRequest failRequest \u003d recordFactory.newRecordInstance(FailTaskAttemptRequest.class);\n      failRequest.setTaskAttemptId(attemptID);\n      invoke(\"failTaskAttempt\", FailTaskAttemptRequest.class, failRequest);\n    } else {\n      KillTaskAttemptRequest killRequest \u003d recordFactory.newRecordInstance(KillTaskAttemptRequest.class);\n      killRequest.setTaskAttemptId(attemptID);\n      invoke(\"killTaskAttempt\", KillTaskAttemptRequest.class, killRequest);\n    }\n    return true;\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ClientServiceDelegate.java",
          "extendedDetails": {
            "oldValue": "[public]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": " MAPREDUCE-2807. Fix AM restart and client redirection. Contributed by Sharad Agarwal.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161408 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "24/08/11 11:35 PM",
          "commitName": "f2b91a8367a762091482074505618b570a520b19",
          "commitAuthor": "Sharad Agarwal",
          "commitDateOld": "24/08/11 5:14 PM",
          "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 0.26,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,42 +1,15 @@\n-  public boolean killTask(TaskAttemptID taskAttemptID, boolean fail)\n-  throws YarnRemoteException {\n+  boolean killTask(TaskAttemptID taskAttemptID, boolean fail)\n+       throws YarnRemoteException {\n     org.apache.hadoop.mapreduce.v2.api.records.TaskAttemptId attemptID \n-    \u003d TypeConverter.toYarn(taskAttemptID);\n-    KillTaskAttemptRequest killRequest \u003d recordFactory.newRecordInstance(KillTaskAttemptRequest.class);\n-    FailTaskAttemptRequest failRequest \u003d recordFactory.newRecordInstance(FailTaskAttemptRequest.class);\n-    MRClientProtocol protocol \u003d getProxy(taskAttemptID.getJobID());\n-    if (protocol \u003d\u003d null) {\n-      return false;\n-    }\n-    try {\n-      if (fail) {\n-        failRequest.setTaskAttemptId(attemptID);\n-        getProxy(taskAttemptID.getJobID()).failTaskAttempt(failRequest);\n-      } else {\n-        killRequest.setTaskAttemptId(attemptID);\n-        getProxy(taskAttemptID.getJobID()).killTaskAttempt(killRequest);\n-      }\n-    } catch(YarnRemoteException yre) {//thrown by remote server, no need to redirect\n-      LOG.warn(RPCUtil.toString(yre));\n-      throw yre;\n-    } catch(Exception e) {\n-      LOG.debug(\"Failed to contact application master \", e);\n-      MRClientProtocol proxy \u003d getRefreshedProxy(taskAttemptID.getJobID());\n-      if (proxy \u003d\u003d null) {\n-        return false;\n-      }\n-      try {\n-        if (fail) {\n-          failRequest.setTaskAttemptId(attemptID);\n-          proxy.failTaskAttempt(failRequest);\n-        } else {\n-          killRequest.setTaskAttemptId(attemptID);\n-          proxy.killTaskAttempt(killRequest);\n-        }\n-      } catch(YarnRemoteException yre) {\n-        LOG.warn(RPCUtil.toString(yre));\n-        throw yre;\n-      }\n+      \u003d TypeConverter.toYarn(taskAttemptID);\n+    if (fail) {\n+      FailTaskAttemptRequest failRequest \u003d recordFactory.newRecordInstance(FailTaskAttemptRequest.class);\n+      failRequest.setTaskAttemptId(attemptID);\n+      invoke(\"failTaskAttempt\", FailTaskAttemptRequest.class, failRequest);\n+    } else {\n+      KillTaskAttemptRequest killRequest \u003d recordFactory.newRecordInstance(KillTaskAttemptRequest.class);\n+      killRequest.setTaskAttemptId(attemptID);\n+      invoke(\"killTaskAttempt\", KillTaskAttemptRequest.class, killRequest);\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  boolean killTask(TaskAttemptID taskAttemptID, boolean fail)\n       throws YarnRemoteException {\n    org.apache.hadoop.mapreduce.v2.api.records.TaskAttemptId attemptID \n      \u003d TypeConverter.toYarn(taskAttemptID);\n    if (fail) {\n      FailTaskAttemptRequest failRequest \u003d recordFactory.newRecordInstance(FailTaskAttemptRequest.class);\n      failRequest.setTaskAttemptId(attemptID);\n      invoke(\"failTaskAttempt\", FailTaskAttemptRequest.class, failRequest);\n    } else {\n      KillTaskAttemptRequest killRequest \u003d recordFactory.newRecordInstance(KillTaskAttemptRequest.class);\n      killRequest.setTaskAttemptId(attemptID);\n      invoke(\"killTaskAttempt\", KillTaskAttemptRequest.class, killRequest);\n    }\n    return true;\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ClientServiceDelegate.java",
          "extendedDetails": {}
        }
      ]
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public boolean killTask(TaskAttemptID taskAttemptID, boolean fail)\n  throws YarnRemoteException {\n    org.apache.hadoop.mapreduce.v2.api.records.TaskAttemptId attemptID \n    \u003d TypeConverter.toYarn(taskAttemptID);\n    KillTaskAttemptRequest killRequest \u003d recordFactory.newRecordInstance(KillTaskAttemptRequest.class);\n    FailTaskAttemptRequest failRequest \u003d recordFactory.newRecordInstance(FailTaskAttemptRequest.class);\n    MRClientProtocol protocol \u003d getProxy(taskAttemptID.getJobID());\n    if (protocol \u003d\u003d null) {\n      return false;\n    }\n    try {\n      if (fail) {\n        failRequest.setTaskAttemptId(attemptID);\n        getProxy(taskAttemptID.getJobID()).failTaskAttempt(failRequest);\n      } else {\n        killRequest.setTaskAttemptId(attemptID);\n        getProxy(taskAttemptID.getJobID()).killTaskAttempt(killRequest);\n      }\n    } catch(YarnRemoteException yre) {//thrown by remote server, no need to redirect\n      LOG.warn(RPCUtil.toString(yre));\n      throw yre;\n    } catch(Exception e) {\n      LOG.debug(\"Failed to contact application master \", e);\n      MRClientProtocol proxy \u003d getRefreshedProxy(taskAttemptID.getJobID());\n      if (proxy \u003d\u003d null) {\n        return false;\n      }\n      try {\n        if (fail) {\n          failRequest.setTaskAttemptId(attemptID);\n          proxy.failTaskAttempt(failRequest);\n        } else {\n          killRequest.setTaskAttemptId(attemptID);\n          proxy.killTaskAttempt(killRequest);\n        }\n      } catch(YarnRemoteException yre) {\n        LOG.warn(RPCUtil.toString(yre));\n        throw yre;\n      }\n    }\n    return true;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ClientServiceDelegate.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ClientServiceDelegate.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ClientServiceDelegate.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,42 @@\n+  public boolean killTask(TaskAttemptID taskAttemptID, boolean fail)\n+  throws YarnRemoteException {\n+    org.apache.hadoop.mapreduce.v2.api.records.TaskAttemptId attemptID \n+    \u003d TypeConverter.toYarn(taskAttemptID);\n+    KillTaskAttemptRequest killRequest \u003d recordFactory.newRecordInstance(KillTaskAttemptRequest.class);\n+    FailTaskAttemptRequest failRequest \u003d recordFactory.newRecordInstance(FailTaskAttemptRequest.class);\n+    MRClientProtocol protocol \u003d getProxy(taskAttemptID.getJobID());\n+    if (protocol \u003d\u003d null) {\n+      return false;\n+    }\n+    try {\n+      if (fail) {\n+        failRequest.setTaskAttemptId(attemptID);\n+        getProxy(taskAttemptID.getJobID()).failTaskAttempt(failRequest);\n+      } else {\n+        killRequest.setTaskAttemptId(attemptID);\n+        getProxy(taskAttemptID.getJobID()).killTaskAttempt(killRequest);\n+      }\n+    } catch(YarnRemoteException yre) {//thrown by remote server, no need to redirect\n+      LOG.warn(RPCUtil.toString(yre));\n+      throw yre;\n+    } catch(Exception e) {\n+      LOG.debug(\"Failed to contact application master \", e);\n+      MRClientProtocol proxy \u003d getRefreshedProxy(taskAttemptID.getJobID());\n+      if (proxy \u003d\u003d null) {\n+        return false;\n+      }\n+      try {\n+        if (fail) {\n+          failRequest.setTaskAttemptId(attemptID);\n+          proxy.failTaskAttempt(failRequest);\n+        } else {\n+          killRequest.setTaskAttemptId(attemptID);\n+          proxy.killTaskAttempt(killRequest);\n+        }\n+      } catch(YarnRemoteException yre) {\n+        LOG.warn(RPCUtil.toString(yre));\n+        throw yre;\n+      }\n+    }\n+    return true;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean killTask(TaskAttemptID taskAttemptID, boolean fail)\n  throws YarnRemoteException {\n    org.apache.hadoop.mapreduce.v2.api.records.TaskAttemptId attemptID \n    \u003d TypeConverter.toYarn(taskAttemptID);\n    KillTaskAttemptRequest killRequest \u003d recordFactory.newRecordInstance(KillTaskAttemptRequest.class);\n    FailTaskAttemptRequest failRequest \u003d recordFactory.newRecordInstance(FailTaskAttemptRequest.class);\n    MRClientProtocol protocol \u003d getProxy(taskAttemptID.getJobID());\n    if (protocol \u003d\u003d null) {\n      return false;\n    }\n    try {\n      if (fail) {\n        failRequest.setTaskAttemptId(attemptID);\n        getProxy(taskAttemptID.getJobID()).failTaskAttempt(failRequest);\n      } else {\n        killRequest.setTaskAttemptId(attemptID);\n        getProxy(taskAttemptID.getJobID()).killTaskAttempt(killRequest);\n      }\n    } catch(YarnRemoteException yre) {//thrown by remote server, no need to redirect\n      LOG.warn(RPCUtil.toString(yre));\n      throw yre;\n    } catch(Exception e) {\n      LOG.debug(\"Failed to contact application master \", e);\n      MRClientProtocol proxy \u003d getRefreshedProxy(taskAttemptID.getJobID());\n      if (proxy \u003d\u003d null) {\n        return false;\n      }\n      try {\n        if (fail) {\n          failRequest.setTaskAttemptId(attemptID);\n          proxy.failTaskAttempt(failRequest);\n        } else {\n          killRequest.setTaskAttemptId(attemptID);\n          proxy.killTaskAttempt(killRequest);\n        }\n      } catch(YarnRemoteException yre) {\n        LOG.warn(RPCUtil.toString(yre));\n        throw yre;\n      }\n    }\n    return true;\n  }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ClientServiceDelegate.java"
    }
  }
}