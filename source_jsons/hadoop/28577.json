{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LogWebService.java",
  "functionName": "getEntity",
  "functionId": "getEntity___path-String__params-MultivaluedMap__String,String__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/webapp/LogWebService.java",
  "functionStartLine": 293,
  "functionEndLine": 312,
  "numCommitsSeen": 5,
  "timeTaken": 723,
  "changeHistory": [
    "8d1981806feb8278966c02a9eff42d72541bb35e"
  ],
  "changeHistoryShort": {
    "8d1981806feb8278966c02a9eff42d72541bb35e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8d1981806feb8278966c02a9eff42d72541bb35e": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5742 Serve aggregated logs of historical apps from timeline service. Contributed by Rohith Sharma KS\n",
      "commitDate": "11/10/18 4:26 PM",
      "commitName": "8d1981806feb8278966c02a9eff42d72541bb35e",
      "commitAuthor": "Vrushali C",
      "diff": "@@ -0,0 +1,20 @@\n+  @VisibleForTesting protected TimelineEntity getEntity(String path,\n+      MultivaluedMap\u003cString, String\u003e params) throws IOException {\n+    ClientResponse resp \u003d\n+        getClient().resource(base).path(path).queryParams(params)\n+            .accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON)\n+            .get(ClientResponse.class);\n+    if (resp \u003d\u003d null\n+        || resp.getStatusInfo().getStatusCode() !\u003d ClientResponse.Status.OK\n+        .getStatusCode()) {\n+      String msg \u003d\n+          \"Response from the timeline reader server is \" + ((resp \u003d\u003d null) ?\n+              \"null\" :\n+              \"not successful,\" + \" HTTP error code: \" + resp.getStatus()\n+                  + \", Server response:\\n\" + resp.getEntity(String.class));\n+      LOG.error(msg);\n+      throw new IOException(msg);\n+    }\n+    TimelineEntity entity \u003d resp.getEntity(TimelineEntity.class);\n+    return entity;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  @VisibleForTesting protected TimelineEntity getEntity(String path,\n      MultivaluedMap\u003cString, String\u003e params) throws IOException {\n    ClientResponse resp \u003d\n        getClient().resource(base).path(path).queryParams(params)\n            .accept(MediaType.APPLICATION_JSON).type(MediaType.APPLICATION_JSON)\n            .get(ClientResponse.class);\n    if (resp \u003d\u003d null\n        || resp.getStatusInfo().getStatusCode() !\u003d ClientResponse.Status.OK\n        .getStatusCode()) {\n      String msg \u003d\n          \"Response from the timeline reader server is \" + ((resp \u003d\u003d null) ?\n              \"null\" :\n              \"not successful,\" + \" HTTP error code: \" + resp.getStatus()\n                  + \", Server response:\\n\" + resp.getEntity(String.class));\n      LOG.error(msg);\n      throw new IOException(msg);\n    }\n    TimelineEntity entity \u003d resp.getEntity(TimelineEntity.class);\n    return entity;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/webapp/LogWebService.java"
    }
  }
}