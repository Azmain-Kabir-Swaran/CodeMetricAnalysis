{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SlowPeerTracker.java",
  "functionName": "getJson",
  "functionId": "getJson",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/SlowPeerTracker.java",
  "functionStartLine": 194,
  "functionEndLine": 204,
  "numCommitsSeen": 5,
  "timeTaken": 2257,
  "changeHistory": [
    "36fb90c93982a22df7177809c3b0ddae455ebc07",
    "b57368b6f893cb27d77fc9425e116f1312f4790f"
  ],
  "changeHistoryShort": {
    "36fb90c93982a22df7177809c3b0ddae455ebc07": "Ybodychange",
    "b57368b6f893cb27d77fc9425e116f1312f4790f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "36fb90c93982a22df7177809c3b0ddae455ebc07": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12064. Reuse object mapper in HDFS. Contributed by Hanisha Koneru.\n",
      "commitDate": "23/09/17 10:11 AM",
      "commitName": "36fb90c93982a22df7177809c3b0ddae455ebc07",
      "commitAuthor": "Anu Engineer",
      "commitDateOld": "20/03/17 9:54 PM",
      "commitNameOld": "e7c8da614c37e36fb8081234f4c639d6054f6082",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 186.51,
      "commitsBetweenForRepo": 1226,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,11 @@\n   public String getJson() {\n     Collection\u003cReportForJson\u003e validReports \u003d getJsonReports(\n         MAX_NODES_TO_REPORT);\n-    ObjectMapper objectMapper \u003d new ObjectMapper();\n     try {\n-      return objectMapper.writeValueAsString(validReports);\n+      return WRITER.writeValueAsString(validReports);\n     } catch (JsonProcessingException e) {\n       // Failed to serialize. Don\u0027t log the exception call stack.\n       LOG.debug(\"Failed to serialize statistics\" + e);\n       return null;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String getJson() {\n    Collection\u003cReportForJson\u003e validReports \u003d getJsonReports(\n        MAX_NODES_TO_REPORT);\n    try {\n      return WRITER.writeValueAsString(validReports);\n    } catch (JsonProcessingException e) {\n      // Failed to serialize. Don\u0027t log the exception call stack.\n      LOG.debug(\"Failed to serialize statistics\" + e);\n      return null;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/SlowPeerTracker.java",
      "extendedDetails": {}
    },
    "b57368b6f893cb27d77fc9425e116f1312f4790f": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-11194. Maintain aggregated peer performance metrics on NameNode.\n",
      "commitDate": "24/01/17 4:58 PM",
      "commitName": "b57368b6f893cb27d77fc9425e116f1312f4790f",
      "commitAuthor": "Arpit Agarwal",
      "diff": "@@ -0,0 +1,12 @@\n+  public String getJson() {\n+    Collection\u003cReportForJson\u003e validReports \u003d getJsonReports(\n+        MAX_NODES_TO_REPORT);\n+    ObjectMapper objectMapper \u003d new ObjectMapper();\n+    try {\n+      return objectMapper.writeValueAsString(validReports);\n+    } catch (JsonProcessingException e) {\n+      // Failed to serialize. Don\u0027t log the exception call stack.\n+      LOG.debug(\"Failed to serialize statistics\" + e);\n+      return null;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public String getJson() {\n    Collection\u003cReportForJson\u003e validReports \u003d getJsonReports(\n        MAX_NODES_TO_REPORT);\n    ObjectMapper objectMapper \u003d new ObjectMapper();\n    try {\n      return objectMapper.writeValueAsString(validReports);\n    } catch (JsonProcessingException e) {\n      // Failed to serialize. Don\u0027t log the exception call stack.\n      LOG.debug(\"Failed to serialize statistics\" + e);\n      return null;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/SlowPeerTracker.java"
    }
  }
}