{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PersistentLongFile.java",
  "functionName": "writeFile",
  "functionId": "writeFile___file-File__val-long",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/util/PersistentLongFile.java",
  "functionStartLine": 77,
  "functionEndLine": 89,
  "numCommitsSeen": 6,
  "timeTaken": 987,
  "changeHistory": [
    "6449f524552f8c24d20b314ad21f6c579fa08e85",
    "8dd3148e734fa9d1db761ce65410fdc49c0fe1d5"
  ],
  "changeHistoryShort": {
    "6449f524552f8c24d20b314ad21f6c579fa08e85": "Ybodychange",
    "8dd3148e734fa9d1db761ce65410fdc49c0fe1d5": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6449f524552f8c24d20b314ad21f6c579fa08e85": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4032. Specify the charset explicitly rather than rely on the default. Contributed by Eli Collins\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1431179 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/01/13 6:30 PM",
      "commitName": "6449f524552f8c24d20b314ad21f6c579fa08e85",
      "commitAuthor": "Eli Collins",
      "commitDateOld": "19/09/12 11:52 AM",
      "commitNameOld": "663e7484c04c197eed53f10a7808140f1c955277",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 112.32,
      "commitsBetweenForRepo": 546,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n   public static void writeFile(File file, long val) throws IOException {\n     AtomicFileOutputStream fos \u003d new AtomicFileOutputStream(file);\n     try {\n-      fos.write(String.valueOf(val).getBytes());\n+      fos.write(String.valueOf(val).getBytes(Charsets.UTF_8));\n       fos.write(\u0027\\n\u0027);\n       fos.close();\n       fos \u003d null;\n     } finally {\n       if (fos !\u003d null) {\n         fos.abort();        \n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void writeFile(File file, long val) throws IOException {\n    AtomicFileOutputStream fos \u003d new AtomicFileOutputStream(file);\n    try {\n      fos.write(String.valueOf(val).getBytes(Charsets.UTF_8));\n      fos.write(\u0027\\n\u0027);\n      fos.close();\n      fos \u003d null;\n    } finally {\n      if (fos !\u003d null) {\n        fos.abort();        \n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/util/PersistentLongFile.java",
      "extendedDetails": {}
    },
    "8dd3148e734fa9d1db761ce65410fdc49c0fe1d5": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-3190. Simple refactors in existing NN code to assist QuorumJournalManager extension. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1356525 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/07/12 4:59 PM",
      "commitName": "8dd3148e734fa9d1db761ce65410fdc49c0fe1d5",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,13 @@\n+  public static void writeFile(File file, long val) throws IOException {\n+    AtomicFileOutputStream fos \u003d new AtomicFileOutputStream(file);\n+    try {\n+      fos.write(String.valueOf(val).getBytes());\n+      fos.write(\u0027\\n\u0027);\n+      fos.close();\n+      fos \u003d null;\n+    } finally {\n+      if (fos !\u003d null) {\n+        fos.abort();        \n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static void writeFile(File file, long val) throws IOException {\n    AtomicFileOutputStream fos \u003d new AtomicFileOutputStream(file);\n    try {\n      fos.write(String.valueOf(val).getBytes());\n      fos.write(\u0027\\n\u0027);\n      fos.close();\n      fos \u003d null;\n    } finally {\n      if (fos !\u003d null) {\n        fos.abort();        \n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/util/PersistentLongFile.java"
    }
  }
}