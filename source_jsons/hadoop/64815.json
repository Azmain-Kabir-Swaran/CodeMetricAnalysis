{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "InconsistentAmazonS3Client.java",
  "functionName": "maybeFail",
  "functionId": "maybeFail",
  "sourceFilePath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/InconsistentAmazonS3Client.java",
  "functionStartLine": 583,
  "functionEndLine": 585,
  "numCommitsSeen": 7,
  "timeTaken": 2293,
  "changeHistory": [
    "8110d6a0d59e7dc2ddb25fa424fab188c5e9ce35",
    "de8b6ca5ef8614de6d6277b7617e27c788b0555c"
  ],
  "changeHistoryShort": {
    "8110d6a0d59e7dc2ddb25fa424fab188c5e9ce35": "Ymultichange(Yexceptionschange,Ybodychange)",
    "de8b6ca5ef8614de6d6277b7617e27c788b0555c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8110d6a0d59e7dc2ddb25fa424fab188c5e9ce35": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "HADOOP-13761. S3Guard: implement retries for DDB failures and throttling; translate exceptions.\nContributed by Aaron Fabbri.\n",
      "commitDate": "05/03/18 6:06 AM",
      "commitName": "8110d6a0d59e7dc2ddb25fa424fab188c5e9ce35",
      "commitAuthor": "Steve Loughran",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "HADOOP-13761. S3Guard: implement retries for DDB failures and throttling; translate exceptions.\nContributed by Aaron Fabbri.\n",
          "commitDate": "05/03/18 6:06 AM",
          "commitName": "8110d6a0d59e7dc2ddb25fa424fab188c5e9ce35",
          "commitAuthor": "Steve Loughran",
          "commitDateOld": "22/11/17 7:28 AM",
          "commitNameOld": "de8b6ca5ef8614de6d6277b7617e27c788b0555c",
          "commitAuthorOld": "Steve Loughran",
          "daysBetweenCommits": 102.94,
          "commitsBetweenForRepo": 600,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,3 @@\n-  private void maybeFail() throws AmazonClientException {\n-    // code structure here is to line up for more failures later\n-    AmazonServiceException ex \u003d null;\n-    if (trueWithProbability(throttleProbability)) {\n-      // throttle the request\n-      ex \u003d new AmazonServiceException(\"throttled\"\n-          + \" count \u003d \" + (failureCounter.get() + 1), null);\n-      ex.setStatusCode(503);\n-    }\n-\n-    if (ex !\u003d null) {\n-      long count \u003d failureCounter.incrementAndGet();\n-      if (failureLimit \u003d\u003d 0\n-          || (failureLimit \u003e 0 \u0026\u0026 count \u003c failureLimit)) {\n-        throw ex;\n-      }\n-    }\n+  private void maybeFail() {\n+    maybeFail(\"throttled\", 503);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void maybeFail() {\n    maybeFail(\"throttled\", 503);\n  }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/InconsistentAmazonS3Client.java",
          "extendedDetails": {
            "oldValue": "[AmazonClientException]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-13761. S3Guard: implement retries for DDB failures and throttling; translate exceptions.\nContributed by Aaron Fabbri.\n",
          "commitDate": "05/03/18 6:06 AM",
          "commitName": "8110d6a0d59e7dc2ddb25fa424fab188c5e9ce35",
          "commitAuthor": "Steve Loughran",
          "commitDateOld": "22/11/17 7:28 AM",
          "commitNameOld": "de8b6ca5ef8614de6d6277b7617e27c788b0555c",
          "commitAuthorOld": "Steve Loughran",
          "daysBetweenCommits": 102.94,
          "commitsBetweenForRepo": 600,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,3 @@\n-  private void maybeFail() throws AmazonClientException {\n-    // code structure here is to line up for more failures later\n-    AmazonServiceException ex \u003d null;\n-    if (trueWithProbability(throttleProbability)) {\n-      // throttle the request\n-      ex \u003d new AmazonServiceException(\"throttled\"\n-          + \" count \u003d \" + (failureCounter.get() + 1), null);\n-      ex.setStatusCode(503);\n-    }\n-\n-    if (ex !\u003d null) {\n-      long count \u003d failureCounter.incrementAndGet();\n-      if (failureLimit \u003d\u003d 0\n-          || (failureLimit \u003e 0 \u0026\u0026 count \u003c failureLimit)) {\n-        throw ex;\n-      }\n-    }\n+  private void maybeFail() {\n+    maybeFail(\"throttled\", 503);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void maybeFail() {\n    maybeFail(\"throttled\", 503);\n  }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/InconsistentAmazonS3Client.java",
          "extendedDetails": {}
        }
      ]
    },
    "de8b6ca5ef8614de6d6277b7617e27c788b0555c": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-13786 Add S3A committer for zero-rename commits to S3 endpoints.\nContributed by Steve Loughran and Ryan Blue.\n",
      "commitDate": "22/11/17 7:28 AM",
      "commitName": "de8b6ca5ef8614de6d6277b7617e27c788b0555c",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,18 @@\n+  private void maybeFail() throws AmazonClientException {\n+    // code structure here is to line up for more failures later\n+    AmazonServiceException ex \u003d null;\n+    if (trueWithProbability(throttleProbability)) {\n+      // throttle the request\n+      ex \u003d new AmazonServiceException(\"throttled\"\n+          + \" count \u003d \" + (failureCounter.get() + 1), null);\n+      ex.setStatusCode(503);\n+    }\n+\n+    if (ex !\u003d null) {\n+      long count \u003d failureCounter.incrementAndGet();\n+      if (failureLimit \u003d\u003d 0\n+          || (failureLimit \u003e 0 \u0026\u0026 count \u003c failureLimit)) {\n+        throw ex;\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void maybeFail() throws AmazonClientException {\n    // code structure here is to line up for more failures later\n    AmazonServiceException ex \u003d null;\n    if (trueWithProbability(throttleProbability)) {\n      // throttle the request\n      ex \u003d new AmazonServiceException(\"throttled\"\n          + \" count \u003d \" + (failureCounter.get() + 1), null);\n      ex.setStatusCode(503);\n    }\n\n    if (ex !\u003d null) {\n      long count \u003d failureCounter.incrementAndGet();\n      if (failureLimit \u003d\u003d 0\n          || (failureLimit \u003e 0 \u0026\u0026 count \u003c failureLimit)) {\n        throw ex;\n      }\n    }\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/InconsistentAmazonS3Client.java"
    }
  }
}