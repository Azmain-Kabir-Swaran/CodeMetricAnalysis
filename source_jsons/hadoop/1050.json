{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ShortCircuitCache.java",
  "functionName": "ref",
  "functionId": "ref___replica-ShortCircuitReplica",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/shortcircuit/ShortCircuitCache.java",
  "functionStartLine": 412,
  "functionEndLine": 437,
  "numCommitsSeen": 31,
  "timeTaken": 2458,
  "changeHistory": [
    "c992bcf9c136d3df686655a80e636bb7bb0664da",
    "7caa3bc98e6880f98c5c32c486a0c539f9fd3f5f",
    "f93d99990a9a02ce693cd74466c2e5f127c1f560",
    "beb0d25d2a7ba5004c6aabd105546ba9a9fec9be"
  ],
  "changeHistoryShort": {
    "c992bcf9c136d3df686655a80e636bb7bb0664da": "Yfilerename",
    "7caa3bc98e6880f98c5c32c486a0c539f9fd3f5f": "Ybodychange",
    "f93d99990a9a02ce693cd74466c2e5f127c1f560": "Yfilerename",
    "beb0d25d2a7ba5004c6aabd105546ba9a9fec9be": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c992bcf9c136d3df686655a80e636bb7bb0664da": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-8951. Move the shortcircuit package to hdfs-client. Contributed by Mingliang Liu.\n",
      "commitDate": "26/08/15 2:02 PM",
      "commitName": "c992bcf9c136d3df686655a80e636bb7bb0664da",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "25/08/15 2:29 PM",
      "commitNameOld": "a4d9acc51d1a977bc333da17780c00c72e8546f1",
      "commitAuthorOld": "Colin Patrick Mccabe",
      "daysBetweenCommits": 0.98,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void ref(ShortCircuitReplica replica) {\n    lock.lock();\n    try {\n      Preconditions.checkArgument(replica.refCount \u003e 0,\n          \"can\u0027t ref %s because its refCount reached %d\", replica,\n          replica.refCount);\n      Long evictableTimeNs \u003d replica.getEvictableTimeNs();\n      replica.refCount++;\n      if (evictableTimeNs !\u003d null) {\n        String removedFrom \u003d removeEvictable(replica);\n        if (LOG.isTraceEnabled()) {\n          LOG.trace(this + \": \" + removedFrom +\n              \" no longer contains \" + replica + \".  refCount \" +\n              (replica.refCount - 1) + \" -\u003e \" + replica.refCount +\n              StringUtils.getStackTrace(Thread.currentThread()));\n\n        }\n      } else if (LOG.isTraceEnabled()) {\n        LOG.trace(this + \": replica  refCount \" +\n            (replica.refCount - 1) + \" -\u003e \" + replica.refCount +\n            StringUtils.getStackTrace(Thread.currentThread()));\n      }\n    } finally {\n      lock.unlock();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/shortcircuit/ShortCircuitCache.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/shortcircuit/ShortCircuitCache.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/shortcircuit/ShortCircuitCache.java"
      }
    },
    "7caa3bc98e6880f98c5c32c486a0c539f9fd3f5f": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6735. A minor optimization to avoid pread() be blocked by read() inside the same DFSInputStream (Lars Hofhansl via stack)\n",
      "commitDate": "02/12/14 8:57 PM",
      "commitName": "7caa3bc98e6880f98c5c32c486a0c539f9fd3f5f",
      "commitAuthor": "stack",
      "commitDateOld": "16/11/14 9:20 PM",
      "commitNameOld": "26d3b7e6ae867596bbced0bfddde22d3c0d976bb",
      "commitAuthorOld": "Colin Patrick Mccabe",
      "daysBetweenCommits": 15.98,
      "commitsBetweenForRepo": 95,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n   private void ref(ShortCircuitReplica replica) {\n     lock.lock();\n     try {\n       Preconditions.checkArgument(replica.refCount \u003e 0,\n-          \"can\u0027t ref \" + replica + \" because its refCount reached \" +\n+          \"can\u0027t ref %s because its refCount reached %d\", replica,\n           replica.refCount);\n       Long evictableTimeNs \u003d replica.getEvictableTimeNs();\n       replica.refCount++;\n       if (evictableTimeNs !\u003d null) {\n         String removedFrom \u003d removeEvictable(replica);\n         if (LOG.isTraceEnabled()) {\n           LOG.trace(this + \": \" + removedFrom +\n               \" no longer contains \" + replica + \".  refCount \" +\n               (replica.refCount - 1) + \" -\u003e \" + replica.refCount +\n               StringUtils.getStackTrace(Thread.currentThread()));\n \n         }\n       } else if (LOG.isTraceEnabled()) {\n         LOG.trace(this + \": replica  refCount \" +\n             (replica.refCount - 1) + \" -\u003e \" + replica.refCount +\n             StringUtils.getStackTrace(Thread.currentThread()));\n       }\n     } finally {\n       lock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void ref(ShortCircuitReplica replica) {\n    lock.lock();\n    try {\n      Preconditions.checkArgument(replica.refCount \u003e 0,\n          \"can\u0027t ref %s because its refCount reached %d\", replica,\n          replica.refCount);\n      Long evictableTimeNs \u003d replica.getEvictableTimeNs();\n      replica.refCount++;\n      if (evictableTimeNs !\u003d null) {\n        String removedFrom \u003d removeEvictable(replica);\n        if (LOG.isTraceEnabled()) {\n          LOG.trace(this + \": \" + removedFrom +\n              \" no longer contains \" + replica + \".  refCount \" +\n              (replica.refCount - 1) + \" -\u003e \" + replica.refCount +\n              StringUtils.getStackTrace(Thread.currentThread()));\n\n        }\n      } else if (LOG.isTraceEnabled()) {\n        LOG.trace(this + \": replica  refCount \" +\n            (replica.refCount - 1) + \" -\u003e \" + replica.refCount +\n            StringUtils.getStackTrace(Thread.currentThread()));\n      }\n    } finally {\n      lock.unlock();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/shortcircuit/ShortCircuitCache.java",
      "extendedDetails": {}
    },
    "f93d99990a9a02ce693cd74466c2e5f127c1f560": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-6167. Relocate the non-public API classes in the hdfs.client package.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1583878 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "01/04/14 10:09 PM",
      "commitName": "f93d99990a9a02ce693cd74466c2e5f127c1f560",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "01/04/14 6:00 PM",
      "commitNameOld": "5c7cb51775bd3d4a6e3e1bd501b3a8d747733fe3",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 0.17,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void ref(ShortCircuitReplica replica) {\n    lock.lock();\n    try {\n      Preconditions.checkArgument(replica.refCount \u003e 0,\n          \"can\u0027t ref \" + replica + \" because its refCount reached \" +\n          replica.refCount);\n      Long evictableTimeNs \u003d replica.getEvictableTimeNs();\n      replica.refCount++;\n      if (evictableTimeNs !\u003d null) {\n        String removedFrom \u003d removeEvictable(replica);\n        if (LOG.isTraceEnabled()) {\n          LOG.trace(this + \": \" + removedFrom +\n              \" no longer contains \" + replica + \".  refCount \" +\n              (replica.refCount - 1) + \" -\u003e \" + replica.refCount +\n              StringUtils.getStackTrace(Thread.currentThread()));\n\n        }\n      } else if (LOG.isTraceEnabled()) {\n        LOG.trace(this + \": replica  refCount \" +\n            (replica.refCount - 1) + \" -\u003e \" + replica.refCount +\n            StringUtils.getStackTrace(Thread.currentThread()));\n      }\n    } finally {\n      lock.unlock();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/shortcircuit/ShortCircuitCache.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/client/ShortCircuitCache.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/shortcircuit/ShortCircuitCache.java"
      }
    },
    "beb0d25d2a7ba5004c6aabd105546ba9a9fec9be": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-5810. Unify mmap cache and short-circuit file descriptor cache (cmccabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1567720 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/02/14 11:08 AM",
      "commitName": "beb0d25d2a7ba5004c6aabd105546ba9a9fec9be",
      "commitAuthor": "Colin McCabe",
      "diff": "@@ -0,0 +1,26 @@\n+  private void ref(ShortCircuitReplica replica) {\n+    lock.lock();\n+    try {\n+      Preconditions.checkArgument(replica.refCount \u003e 0,\n+          \"can\u0027t ref \" + replica + \" because its refCount reached \" +\n+          replica.refCount);\n+      Long evictableTimeNs \u003d replica.getEvictableTimeNs();\n+      replica.refCount++;\n+      if (evictableTimeNs !\u003d null) {\n+        String removedFrom \u003d removeEvictable(replica);\n+        if (LOG.isTraceEnabled()) {\n+          LOG.trace(this + \": \" + removedFrom +\n+              \" no longer contains \" + replica + \".  refCount \" +\n+              (replica.refCount - 1) + \" -\u003e \" + replica.refCount +\n+              StringUtils.getStackTrace(Thread.currentThread()));\n+\n+        }\n+      } else if (LOG.isTraceEnabled()) {\n+        LOG.trace(this + \": replica  refCount \" +\n+            (replica.refCount - 1) + \" -\u003e \" + replica.refCount +\n+            StringUtils.getStackTrace(Thread.currentThread()));\n+      }\n+    } finally {\n+      lock.unlock();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void ref(ShortCircuitReplica replica) {\n    lock.lock();\n    try {\n      Preconditions.checkArgument(replica.refCount \u003e 0,\n          \"can\u0027t ref \" + replica + \" because its refCount reached \" +\n          replica.refCount);\n      Long evictableTimeNs \u003d replica.getEvictableTimeNs();\n      replica.refCount++;\n      if (evictableTimeNs !\u003d null) {\n        String removedFrom \u003d removeEvictable(replica);\n        if (LOG.isTraceEnabled()) {\n          LOG.trace(this + \": \" + removedFrom +\n              \" no longer contains \" + replica + \".  refCount \" +\n              (replica.refCount - 1) + \" -\u003e \" + replica.refCount +\n              StringUtils.getStackTrace(Thread.currentThread()));\n\n        }\n      } else if (LOG.isTraceEnabled()) {\n        LOG.trace(this + \": replica  refCount \" +\n            (replica.refCount - 1) + \" -\u003e \" + replica.refCount +\n            StringUtils.getStackTrace(Thread.currentThread()));\n      }\n    } finally {\n      lock.unlock();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/client/ShortCircuitCache.java"
    }
  }
}