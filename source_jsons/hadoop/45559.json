{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMProxy.java",
  "functionName": "createRMProxy",
  "functionId": "createRMProxy___configuration-Configuration(modifiers-final)__protocol-Class__T__(modifiers-final)__instance-RMProxy__T__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/RMProxy.java",
  "functionStartLine": 95,
  "functionEndLine": 103,
  "numCommitsSeen": 35,
  "timeTaken": 4068,
  "changeHistory": [
    "bdfad4523f1a5a776e20773c371ce99d0c538ac1",
    "9855225a790e66835c79816712f432ffa8c599b4",
    "618bfd6ac2a5b62d39e9bed80f75362bafc0ef28",
    "4ac6799d4a8b071e0d367c2d709e84d8ea06942d",
    "2cddd21db9ce2e896e11225af3ae50d547884ca4",
    "ca125153b319a8f5d75585d25cb0f37ae717be01"
  ],
  "changeHistoryShort": {
    "bdfad4523f1a5a776e20773c371ce99d0c538ac1": "Ybodychange",
    "9855225a790e66835c79816712f432ffa8c599b4": "Yparameterchange",
    "618bfd6ac2a5b62d39e9bed80f75362bafc0ef28": "Ybodychange",
    "4ac6799d4a8b071e0d367c2d709e84d8ea06942d": "Ybodychange",
    "2cddd21db9ce2e896e11225af3ae50d547884ca4": "Ymultichange(Yparameterchange,Ybodychange)",
    "ca125153b319a8f5d75585d25cb0f37ae717be01": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bdfad4523f1a5a776e20773c371ce99d0c538ac1": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3673. Create a FailoverProxy for Federation services. Contributed by Subru Krishnan\n\n(cherry picked from commit 3307564a5f8c8abc5fe84efcd05ee0f7dfdd921c)\n",
      "commitDate": "01/08/17 5:28 PM",
      "commitName": "bdfad4523f1a5a776e20773c371ce99d0c538ac1",
      "commitAuthor": "Jian He",
      "commitDateOld": "19/05/17 3:43 PM",
      "commitNameOld": "9855225a790e66835c79816712f432ffa8c599b4",
      "commitAuthorOld": "Robert Kanter",
      "daysBetweenCommits": 74.07,
      "commitsBetweenForRepo": 371,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,9 @@\n   protected static \u003cT\u003e T createRMProxy(final Configuration configuration,\n       final Class\u003cT\u003e protocol, RMProxy\u003cT\u003e instance) throws IOException {\n     YarnConfiguration conf \u003d (configuration instanceof YarnConfiguration)\n         ? (YarnConfiguration) configuration\n         : new YarnConfiguration(configuration);\n-    RetryPolicy retryPolicy \u003d createRetryPolicy(conf, HAUtil.isHAEnabled(conf));\n+    RetryPolicy retryPolicy \u003d createRetryPolicy(conf,\n+        (HAUtil.isHAEnabled(conf) || HAUtil.isFederationFailoverEnabled(conf)));\n     return newProxyInstance(conf, protocol, instance, retryPolicy);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected static \u003cT\u003e T createRMProxy(final Configuration configuration,\n      final Class\u003cT\u003e protocol, RMProxy\u003cT\u003e instance) throws IOException {\n    YarnConfiguration conf \u003d (configuration instanceof YarnConfiguration)\n        ? (YarnConfiguration) configuration\n        : new YarnConfiguration(configuration);\n    RetryPolicy retryPolicy \u003d createRetryPolicy(conf,\n        (HAUtil.isHAEnabled(conf) || HAUtil.isFederationFailoverEnabled(conf)));\n    return newProxyInstance(conf, protocol, instance, retryPolicy);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/RMProxy.java",
      "extendedDetails": {}
    },
    "9855225a790e66835c79816712f432ffa8c599b4": {
      "type": "Yparameterchange",
      "commitMessage": "YARN-6602. Impersonation does not work if standby RM is contacted first (rkanter)\n",
      "commitDate": "19/05/17 3:43 PM",
      "commitName": "9855225a790e66835c79816712f432ffa8c599b4",
      "commitAuthor": "Robert Kanter",
      "commitDateOld": "22/01/16 6:20 PM",
      "commitNameOld": "618bfd6ac2a5b62d39e9bed80f75362bafc0ef28",
      "commitAuthorOld": "Xuan",
      "daysBetweenCommits": 482.85,
      "commitsBetweenForRepo": 3164,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,8 @@\n   protected static \u003cT\u003e T createRMProxy(final Configuration configuration,\n-      final Class\u003cT\u003e protocol, RMProxy instance) throws IOException {\n+      final Class\u003cT\u003e protocol, RMProxy\u003cT\u003e instance) throws IOException {\n     YarnConfiguration conf \u003d (configuration instanceof YarnConfiguration)\n         ? (YarnConfiguration) configuration\n         : new YarnConfiguration(configuration);\n     RetryPolicy retryPolicy \u003d createRetryPolicy(conf, HAUtil.isHAEnabled(conf));\n     return newProxyInstance(conf, protocol, instance, retryPolicy);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected static \u003cT\u003e T createRMProxy(final Configuration configuration,\n      final Class\u003cT\u003e protocol, RMProxy\u003cT\u003e instance) throws IOException {\n    YarnConfiguration conf \u003d (configuration instanceof YarnConfiguration)\n        ? (YarnConfiguration) configuration\n        : new YarnConfiguration(configuration);\n    RetryPolicy retryPolicy \u003d createRetryPolicy(conf, HAUtil.isHAEnabled(conf));\n    return newProxyInstance(conf, protocol, instance, retryPolicy);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/RMProxy.java",
      "extendedDetails": {
        "oldValue": "[configuration-Configuration(modifiers-final), protocol-Class\u003cT\u003e(modifiers-final), instance-RMProxy]",
        "newValue": "[configuration-Configuration(modifiers-final), protocol-Class\u003cT\u003e(modifiers-final), instance-RMProxy\u003cT\u003e]"
      }
    },
    "618bfd6ac2a5b62d39e9bed80f75362bafc0ef28": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4496. Improve HA ResourceManager Failover detection on the client.\nContributed by Jian He\n",
      "commitDate": "22/01/16 6:20 PM",
      "commitName": "618bfd6ac2a5b62d39e9bed80f75362bafc0ef28",
      "commitAuthor": "Xuan",
      "commitDateOld": "24/11/15 2:35 PM",
      "commitNameOld": "4ac6799d4a8b071e0d367c2d709e84d8ea06942d",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 59.16,
      "commitsBetweenForRepo": 346,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,8 @@\n   protected static \u003cT\u003e T createRMProxy(final Configuration configuration,\n       final Class\u003cT\u003e protocol, RMProxy instance) throws IOException {\n     YarnConfiguration conf \u003d (configuration instanceof YarnConfiguration)\n         ? (YarnConfiguration) configuration\n         : new YarnConfiguration(configuration);\n-    RetryPolicy retryPolicy \u003d\n-        createRetryPolicy(conf);\n-    return createRMProxy(conf, protocol, instance, retryPolicy);\n+    RetryPolicy retryPolicy \u003d createRetryPolicy(conf, HAUtil.isHAEnabled(conf));\n+    return newProxyInstance(conf, protocol, instance, retryPolicy);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected static \u003cT\u003e T createRMProxy(final Configuration configuration,\n      final Class\u003cT\u003e protocol, RMProxy instance) throws IOException {\n    YarnConfiguration conf \u003d (configuration instanceof YarnConfiguration)\n        ? (YarnConfiguration) configuration\n        : new YarnConfiguration(configuration);\n    RetryPolicy retryPolicy \u003d createRetryPolicy(conf, HAUtil.isHAEnabled(conf));\n    return newProxyInstance(conf, protocol, instance, retryPolicy);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/RMProxy.java",
      "extendedDetails": {}
    },
    "4ac6799d4a8b071e0d367c2d709e84d8ea06942d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4132. Separate configs for nodemanager to resourcemanager connection timeout and retries. Contributed by Chang Li\n",
      "commitDate": "24/11/15 2:35 PM",
      "commitName": "4ac6799d4a8b071e0d367c2d709e84d8ea06942d",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "29/10/15 12:00 AM",
      "commitNameOld": "c41699965e78ce5e87669d17923ab84e494c4188",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 26.65,
      "commitsBetweenForRepo": 195,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,9 @@\n   protected static \u003cT\u003e T createRMProxy(final Configuration configuration,\n       final Class\u003cT\u003e protocol, RMProxy instance) throws IOException {\n     YarnConfiguration conf \u003d (configuration instanceof YarnConfiguration)\n         ? (YarnConfiguration) configuration\n         : new YarnConfiguration(configuration);\n-    RetryPolicy retryPolicy \u003d createRetryPolicy(conf);\n-    if (HAUtil.isHAEnabled(conf)) {\n-      RMFailoverProxyProvider\u003cT\u003e provider \u003d\n-          instance.createRMFailoverProxyProvider(conf, protocol);\n-      return (T) RetryProxy.create(protocol, provider, retryPolicy);\n-    } else {\n-      InetSocketAddress rmAddress \u003d instance.getRMAddress(conf, protocol);\n-      LOG.info(\"Connecting to ResourceManager at \" + rmAddress);\n-      T proxy \u003d RMProxy.\u003cT\u003egetProxy(conf, protocol, rmAddress);\n-      return (T) RetryProxy.create(protocol, proxy, retryPolicy);\n-    }\n+    RetryPolicy retryPolicy \u003d\n+        createRetryPolicy(conf);\n+    return createRMProxy(conf, protocol, instance, retryPolicy);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected static \u003cT\u003e T createRMProxy(final Configuration configuration,\n      final Class\u003cT\u003e protocol, RMProxy instance) throws IOException {\n    YarnConfiguration conf \u003d (configuration instanceof YarnConfiguration)\n        ? (YarnConfiguration) configuration\n        : new YarnConfiguration(configuration);\n    RetryPolicy retryPolicy \u003d\n        createRetryPolicy(conf);\n    return createRMProxy(conf, protocol, instance, retryPolicy);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/RMProxy.java",
      "extendedDetails": {}
    },
    "2cddd21db9ce2e896e11225af3ae50d547884ca4": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-1559. Race between ServerRMProxy and ClientRMProxy setting RMProxy#INSTANCE. (kasha and vinodkv via kasha)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1555970 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/01/14 10:40 AM",
      "commitName": "2cddd21db9ce2e896e11225af3ae50d547884ca4",
      "commitAuthor": "Karthik Kambatla",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-1559. Race between ServerRMProxy and ClientRMProxy setting RMProxy#INSTANCE. (kasha and vinodkv via kasha)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1555970 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "06/01/14 10:40 AM",
          "commitName": "2cddd21db9ce2e896e11225af3ae50d547884ca4",
          "commitAuthor": "Karthik Kambatla",
          "commitDateOld": "21/12/13 8:29 AM",
          "commitNameOld": "624703ed7b6d80855d3e0567bee5c1b7659bc635",
          "commitAuthorOld": "Karthik Kambatla",
          "daysBetweenCommits": 16.09,
          "commitsBetweenForRepo": 37,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n   protected static \u003cT\u003e T createRMProxy(final Configuration configuration,\n-      final Class\u003cT\u003e protocol) throws IOException {\n+      final Class\u003cT\u003e protocol, RMProxy instance) throws IOException {\n     YarnConfiguration conf \u003d (configuration instanceof YarnConfiguration)\n         ? (YarnConfiguration) configuration\n         : new YarnConfiguration(configuration);\n     RetryPolicy retryPolicy \u003d createRetryPolicy(conf);\n     if (HAUtil.isHAEnabled(conf)) {\n       RMFailoverProxyProvider\u003cT\u003e provider \u003d\n-          INSTANCE.createRMFailoverProxyProvider(conf, protocol);\n+          instance.createRMFailoverProxyProvider(conf, protocol);\n       return (T) RetryProxy.create(protocol, provider, retryPolicy);\n     } else {\n-      InetSocketAddress rmAddress \u003d INSTANCE.getRMAddress(conf, protocol);\n+      InetSocketAddress rmAddress \u003d instance.getRMAddress(conf, protocol);\n       LOG.info(\"Connecting to ResourceManager at \" + rmAddress);\n       T proxy \u003d RMProxy.\u003cT\u003egetProxy(conf, protocol, rmAddress);\n       return (T) RetryProxy.create(protocol, proxy, retryPolicy);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected static \u003cT\u003e T createRMProxy(final Configuration configuration,\n      final Class\u003cT\u003e protocol, RMProxy instance) throws IOException {\n    YarnConfiguration conf \u003d (configuration instanceof YarnConfiguration)\n        ? (YarnConfiguration) configuration\n        : new YarnConfiguration(configuration);\n    RetryPolicy retryPolicy \u003d createRetryPolicy(conf);\n    if (HAUtil.isHAEnabled(conf)) {\n      RMFailoverProxyProvider\u003cT\u003e provider \u003d\n          instance.createRMFailoverProxyProvider(conf, protocol);\n      return (T) RetryProxy.create(protocol, provider, retryPolicy);\n    } else {\n      InetSocketAddress rmAddress \u003d instance.getRMAddress(conf, protocol);\n      LOG.info(\"Connecting to ResourceManager at \" + rmAddress);\n      T proxy \u003d RMProxy.\u003cT\u003egetProxy(conf, protocol, rmAddress);\n      return (T) RetryProxy.create(protocol, proxy, retryPolicy);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/RMProxy.java",
          "extendedDetails": {
            "oldValue": "[configuration-Configuration(modifiers-final), protocol-Class\u003cT\u003e(modifiers-final)]",
            "newValue": "[configuration-Configuration(modifiers-final), protocol-Class\u003cT\u003e(modifiers-final), instance-RMProxy]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-1559. Race between ServerRMProxy and ClientRMProxy setting RMProxy#INSTANCE. (kasha and vinodkv via kasha)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1555970 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "06/01/14 10:40 AM",
          "commitName": "2cddd21db9ce2e896e11225af3ae50d547884ca4",
          "commitAuthor": "Karthik Kambatla",
          "commitDateOld": "21/12/13 8:29 AM",
          "commitNameOld": "624703ed7b6d80855d3e0567bee5c1b7659bc635",
          "commitAuthorOld": "Karthik Kambatla",
          "daysBetweenCommits": 16.09,
          "commitsBetweenForRepo": 37,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n   protected static \u003cT\u003e T createRMProxy(final Configuration configuration,\n-      final Class\u003cT\u003e protocol) throws IOException {\n+      final Class\u003cT\u003e protocol, RMProxy instance) throws IOException {\n     YarnConfiguration conf \u003d (configuration instanceof YarnConfiguration)\n         ? (YarnConfiguration) configuration\n         : new YarnConfiguration(configuration);\n     RetryPolicy retryPolicy \u003d createRetryPolicy(conf);\n     if (HAUtil.isHAEnabled(conf)) {\n       RMFailoverProxyProvider\u003cT\u003e provider \u003d\n-          INSTANCE.createRMFailoverProxyProvider(conf, protocol);\n+          instance.createRMFailoverProxyProvider(conf, protocol);\n       return (T) RetryProxy.create(protocol, provider, retryPolicy);\n     } else {\n-      InetSocketAddress rmAddress \u003d INSTANCE.getRMAddress(conf, protocol);\n+      InetSocketAddress rmAddress \u003d instance.getRMAddress(conf, protocol);\n       LOG.info(\"Connecting to ResourceManager at \" + rmAddress);\n       T proxy \u003d RMProxy.\u003cT\u003egetProxy(conf, protocol, rmAddress);\n       return (T) RetryProxy.create(protocol, proxy, retryPolicy);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected static \u003cT\u003e T createRMProxy(final Configuration configuration,\n      final Class\u003cT\u003e protocol, RMProxy instance) throws IOException {\n    YarnConfiguration conf \u003d (configuration instanceof YarnConfiguration)\n        ? (YarnConfiguration) configuration\n        : new YarnConfiguration(configuration);\n    RetryPolicy retryPolicy \u003d createRetryPolicy(conf);\n    if (HAUtil.isHAEnabled(conf)) {\n      RMFailoverProxyProvider\u003cT\u003e provider \u003d\n          instance.createRMFailoverProxyProvider(conf, protocol);\n      return (T) RetryProxy.create(protocol, provider, retryPolicy);\n    } else {\n      InetSocketAddress rmAddress \u003d instance.getRMAddress(conf, protocol);\n      LOG.info(\"Connecting to ResourceManager at \" + rmAddress);\n      T proxy \u003d RMProxy.\u003cT\u003egetProxy(conf, protocol, rmAddress);\n      return (T) RetryProxy.create(protocol, proxy, retryPolicy);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/RMProxy.java",
          "extendedDetails": {}
        }
      ]
    },
    "ca125153b319a8f5d75585d25cb0f37ae717be01": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1028. Added FailoverProxyProvider capability to ResourceManager to help with RM failover. Contributed by Karthik Kambatla.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1551739 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/12/13 2:32 PM",
      "commitName": "ca125153b319a8f5d75585d25cb0f37ae717be01",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,17 @@\n+  protected static \u003cT\u003e T createRMProxy(final Configuration configuration,\n+      final Class\u003cT\u003e protocol) throws IOException {\n+    YarnConfiguration conf \u003d (configuration instanceof YarnConfiguration)\n+        ? (YarnConfiguration) configuration\n+        : new YarnConfiguration(configuration);\n+    RetryPolicy retryPolicy \u003d createRetryPolicy(conf);\n+    if (HAUtil.isHAEnabled(conf)) {\n+      RMFailoverProxyProvider\u003cT\u003e provider \u003d\n+          INSTANCE.createRMFailoverProxyProvider(conf, protocol);\n+      return (T) RetryProxy.create(protocol, provider, retryPolicy);\n+    } else {\n+      InetSocketAddress rmAddress \u003d INSTANCE.getRMAddress(conf, protocol);\n+      LOG.info(\"Connecting to ResourceManager at \" + rmAddress);\n+      T proxy \u003d RMProxy.\u003cT\u003egetProxy(conf, protocol, rmAddress);\n+      return (T) RetryProxy.create(protocol, proxy, retryPolicy);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected static \u003cT\u003e T createRMProxy(final Configuration configuration,\n      final Class\u003cT\u003e protocol) throws IOException {\n    YarnConfiguration conf \u003d (configuration instanceof YarnConfiguration)\n        ? (YarnConfiguration) configuration\n        : new YarnConfiguration(configuration);\n    RetryPolicy retryPolicy \u003d createRetryPolicy(conf);\n    if (HAUtil.isHAEnabled(conf)) {\n      RMFailoverProxyProvider\u003cT\u003e provider \u003d\n          INSTANCE.createRMFailoverProxyProvider(conf, protocol);\n      return (T) RetryProxy.create(protocol, provider, retryPolicy);\n    } else {\n      InetSocketAddress rmAddress \u003d INSTANCE.getRMAddress(conf, protocol);\n      LOG.info(\"Connecting to ResourceManager at \" + rmAddress);\n      T proxy \u003d RMProxy.\u003cT\u003egetProxy(conf, protocol, rmAddress);\n      return (T) RetryProxy.create(protocol, proxy, retryPolicy);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/RMProxy.java"
    }
  }
}