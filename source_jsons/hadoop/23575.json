{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HistoryServerFileSystemStateStoreService.java",
  "functionName": "storeTokenMasterKey",
  "functionId": "storeTokenMasterKey___key-DelegationKey",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryServerFileSystemStateStoreService.java",
  "functionStartLine": 177,
  "functionEndLine": 199,
  "numCommitsSeen": 6,
  "timeTaken": 1573,
  "changeHistory": [
    "ffee10b68ef1f2d75c9d0df9140c2a605f826724",
    "5af572b6443715b7a741296c1bd520a1840f9a7c",
    "7f80e142096ab21b4852635a127589e34a747bc4",
    "9579554988f82d506a32b81834f3a4fa9c698471",
    "2627e352d630d19c35b97eea9ef603342feb379f"
  ],
  "changeHistoryShort": {
    "ffee10b68ef1f2d75c9d0df9140c2a605f826724": "Ybodychange",
    "5af572b6443715b7a741296c1bd520a1840f9a7c": "Ybodychange",
    "7f80e142096ab21b4852635a127589e34a747bc4": "Ybodychange",
    "9579554988f82d506a32b81834f3a4fa9c698471": "Ybodychange",
    "2627e352d630d19c35b97eea9ef603342feb379f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ffee10b68ef1f2d75c9d0df9140c2a605f826724": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6997. Moving logging APIs over to slf4j in hadoop-mapreduce-client-hs. Contributed by Gergely Nov√°k.\n",
      "commitDate": "08/11/17 2:21 AM",
      "commitName": "ffee10b68ef1f2d75c9d0df9140c2a605f826724",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "15/11/16 10:57 AM",
      "commitNameOld": "5af572b6443715b7a741296c1bd520a1840f9a7c",
      "commitAuthorOld": "Mingliang Liu",
      "daysBetweenCommits": 357.64,
      "commitsBetweenForRepo": 2306,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   public void storeTokenMasterKey(DelegationKey key) throws IOException {\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Storing master key \" + key.getKeyId());\n     }\n \n     Path keyPath \u003d new Path(tokenKeysStatePath,\n         TOKEN_MASTER_KEY_FILE_PREFIX + key.getKeyId());\n     if (fs.exists(keyPath)) {\n       throw new FileAlreadyExistsException(keyPath + \" already exists\");\n     }\n \n     ByteArrayOutputStream memStream \u003d new ByteArrayOutputStream();\n     DataOutputStream dataStream \u003d new DataOutputStream(memStream);\n     try {\n       key.write(dataStream);\n       dataStream.close();\n       dataStream \u003d null;\n     } finally {\n-      IOUtils.cleanup(LOG, dataStream);\n+      IOUtils.cleanupWithLogger(LOG, dataStream);\n     }\n \n     createNewFile(keyPath, memStream.toByteArray());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void storeTokenMasterKey(DelegationKey key) throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Storing master key \" + key.getKeyId());\n    }\n\n    Path keyPath \u003d new Path(tokenKeysStatePath,\n        TOKEN_MASTER_KEY_FILE_PREFIX + key.getKeyId());\n    if (fs.exists(keyPath)) {\n      throw new FileAlreadyExistsException(keyPath + \" already exists\");\n    }\n\n    ByteArrayOutputStream memStream \u003d new ByteArrayOutputStream();\n    DataOutputStream dataStream \u003d new DataOutputStream(memStream);\n    try {\n      key.write(dataStream);\n      dataStream.close();\n      dataStream \u003d null;\n    } finally {\n      IOUtils.cleanupWithLogger(LOG, dataStream);\n    }\n\n    createNewFile(keyPath, memStream.toByteArray());\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryServerFileSystemStateStoreService.java",
      "extendedDetails": {}
    },
    "5af572b6443715b7a741296c1bd520a1840f9a7c": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13427. Eliminate needless uses of FileSystem#{exists(), isFile(), isDirectory()}. Contributed by Steve Loughran and Mingliang Liu\n",
      "commitDate": "15/11/16 10:57 AM",
      "commitName": "5af572b6443715b7a741296c1bd520a1840f9a7c",
      "commitAuthor": "Mingliang Liu",
      "commitDateOld": "10/09/14 3:22 PM",
      "commitNameOld": "7f80e142096ab21b4852635a127589e34a747bc4",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 796.86,
      "commitsBetweenForRepo": 6219,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   public void storeTokenMasterKey(DelegationKey key) throws IOException {\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Storing master key \" + key.getKeyId());\n     }\n \n     Path keyPath \u003d new Path(tokenKeysStatePath,\n         TOKEN_MASTER_KEY_FILE_PREFIX + key.getKeyId());\n     if (fs.exists(keyPath)) {\n-      throw new IOException(keyPath + \" already exists\");\n+      throw new FileAlreadyExistsException(keyPath + \" already exists\");\n     }\n \n     ByteArrayOutputStream memStream \u003d new ByteArrayOutputStream();\n     DataOutputStream dataStream \u003d new DataOutputStream(memStream);\n     try {\n       key.write(dataStream);\n       dataStream.close();\n       dataStream \u003d null;\n     } finally {\n       IOUtils.cleanup(LOG, dataStream);\n     }\n \n     createNewFile(keyPath, memStream.toByteArray());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void storeTokenMasterKey(DelegationKey key) throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Storing master key \" + key.getKeyId());\n    }\n\n    Path keyPath \u003d new Path(tokenKeysStatePath,\n        TOKEN_MASTER_KEY_FILE_PREFIX + key.getKeyId());\n    if (fs.exists(keyPath)) {\n      throw new FileAlreadyExistsException(keyPath + \" already exists\");\n    }\n\n    ByteArrayOutputStream memStream \u003d new ByteArrayOutputStream();\n    DataOutputStream dataStream \u003d new DataOutputStream(memStream);\n    try {\n      key.write(dataStream);\n      dataStream.close();\n      dataStream \u003d null;\n    } finally {\n      IOUtils.cleanup(LOG, dataStream);\n    }\n\n    createNewFile(keyPath, memStream.toByteArray());\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryServerFileSystemStateStoreService.java",
      "extendedDetails": {}
    },
    "7f80e142096ab21b4852635a127589e34a747bc4": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6075. HistoryServerFileSystemStateStore can create zero-length files. Contributed by Jason Lowe\n",
      "commitDate": "10/09/14 3:22 PM",
      "commitName": "7f80e142096ab21b4852635a127589e34a747bc4",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "14/08/14 8:55 AM",
      "commitNameOld": "9579554988f82d506a32b81834f3a4fa9c698471",
      "commitAuthorOld": "Jason Darrell Lowe",
      "daysBetweenCommits": 27.27,
      "commitsBetweenForRepo": 204,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,23 @@\n   public void storeTokenMasterKey(DelegationKey key) throws IOException {\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Storing master key \" + key.getKeyId());\n     }\n \n     Path keyPath \u003d new Path(tokenKeysStatePath,\n         TOKEN_MASTER_KEY_FILE_PREFIX + key.getKeyId());\n     if (fs.exists(keyPath)) {\n       throw new IOException(keyPath + \" already exists\");\n     }\n \n     ByteArrayOutputStream memStream \u003d new ByteArrayOutputStream();\n     DataOutputStream dataStream \u003d new DataOutputStream(memStream);\n     try {\n       key.write(dataStream);\n+      dataStream.close();\n+      dataStream \u003d null;\n     } finally {\n       IOUtils.cleanup(LOG, dataStream);\n     }\n \n     createNewFile(keyPath, memStream.toByteArray());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void storeTokenMasterKey(DelegationKey key) throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Storing master key \" + key.getKeyId());\n    }\n\n    Path keyPath \u003d new Path(tokenKeysStatePath,\n        TOKEN_MASTER_KEY_FILE_PREFIX + key.getKeyId());\n    if (fs.exists(keyPath)) {\n      throw new IOException(keyPath + \" already exists\");\n    }\n\n    ByteArrayOutputStream memStream \u003d new ByteArrayOutputStream();\n    DataOutputStream dataStream \u003d new DataOutputStream(memStream);\n    try {\n      key.write(dataStream);\n      dataStream.close();\n      dataStream \u003d null;\n    } finally {\n      IOUtils.cleanup(LOG, dataStream);\n    }\n\n    createNewFile(keyPath, memStream.toByteArray());\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryServerFileSystemStateStoreService.java",
      "extendedDetails": {}
    },
    "9579554988f82d506a32b81834f3a4fa9c698471": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6010. HistoryServerFileSystemStateStore fails to update tokens. Contributed by Jason Lowe\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1617984 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/08/14 8:55 AM",
      "commitName": "9579554988f82d506a32b81834f3a4fa9c698471",
      "commitAuthor": "Jason Darrell Lowe",
      "commitDateOld": "10/04/14 9:28 PM",
      "commitNameOld": "c1127d19c4233b0d9c2d5016069276c391c895b0",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 125.48,
      "commitsBetweenForRepo": 797,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n   public void storeTokenMasterKey(DelegationKey key) throws IOException {\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Storing master key \" + key.getKeyId());\n     }\n \n     Path keyPath \u003d new Path(tokenKeysStatePath,\n         TOKEN_MASTER_KEY_FILE_PREFIX + key.getKeyId());\n     if (fs.exists(keyPath)) {\n       throw new IOException(keyPath + \" already exists\");\n     }\n \n     ByteArrayOutputStream memStream \u003d new ByteArrayOutputStream();\n     DataOutputStream dataStream \u003d new DataOutputStream(memStream);\n     try {\n       key.write(dataStream);\n     } finally {\n       IOUtils.cleanup(LOG, dataStream);\n     }\n \n-    createFile(keyPath, memStream.toByteArray());\n+    createNewFile(keyPath, memStream.toByteArray());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void storeTokenMasterKey(DelegationKey key) throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Storing master key \" + key.getKeyId());\n    }\n\n    Path keyPath \u003d new Path(tokenKeysStatePath,\n        TOKEN_MASTER_KEY_FILE_PREFIX + key.getKeyId());\n    if (fs.exists(keyPath)) {\n      throw new IOException(keyPath + \" already exists\");\n    }\n\n    ByteArrayOutputStream memStream \u003d new ByteArrayOutputStream();\n    DataOutputStream dataStream \u003d new DataOutputStream(memStream);\n    try {\n      key.write(dataStream);\n    } finally {\n      IOUtils.cleanup(LOG, dataStream);\n    }\n\n    createNewFile(keyPath, memStream.toByteArray());\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryServerFileSystemStateStoreService.java",
      "extendedDetails": {}
    },
    "2627e352d630d19c35b97eea9ef603342feb379f": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-5332. Support token-preserving restart of history server. Contributed by Jason Lowe\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1527015 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/09/13 11:19 AM",
      "commitName": "2627e352d630d19c35b97eea9ef603342feb379f",
      "commitAuthor": "Jason Darrell Lowe",
      "diff": "@@ -0,0 +1,21 @@\n+  public void storeTokenMasterKey(DelegationKey key) throws IOException {\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"Storing master key \" + key.getKeyId());\n+    }\n+\n+    Path keyPath \u003d new Path(tokenKeysStatePath,\n+        TOKEN_MASTER_KEY_FILE_PREFIX + key.getKeyId());\n+    if (fs.exists(keyPath)) {\n+      throw new IOException(keyPath + \" already exists\");\n+    }\n+\n+    ByteArrayOutputStream memStream \u003d new ByteArrayOutputStream();\n+    DataOutputStream dataStream \u003d new DataOutputStream(memStream);\n+    try {\n+      key.write(dataStream);\n+    } finally {\n+      IOUtils.cleanup(LOG, dataStream);\n+    }\n+\n+    createFile(keyPath, memStream.toByteArray());\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void storeTokenMasterKey(DelegationKey key) throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Storing master key \" + key.getKeyId());\n    }\n\n    Path keyPath \u003d new Path(tokenKeysStatePath,\n        TOKEN_MASTER_KEY_FILE_PREFIX + key.getKeyId());\n    if (fs.exists(keyPath)) {\n      throw new IOException(keyPath + \" already exists\");\n    }\n\n    ByteArrayOutputStream memStream \u003d new ByteArrayOutputStream();\n    DataOutputStream dataStream \u003d new DataOutputStream(memStream);\n    try {\n      key.write(dataStream);\n    } finally {\n      IOUtils.cleanup(LOG, dataStream);\n    }\n\n    createFile(keyPath, memStream.toByteArray());\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryServerFileSystemStateStoreService.java"
    }
  }
}