{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ShuffleHandler.java",
  "functionName": "sendError",
  "functionId": "sendError___ctx-ChannelHandlerContext__msg-String__status-HttpResponseStatus__headers-Map__String,String__",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/ShuffleHandler.java",
  "functionStartLine": 1308,
  "functionEndLine": 1325,
  "numCommitsSeen": 59,
  "timeTaken": 1434,
  "changeHistory": [
    "d4725bfcb2d300219d65395a78f957afbf37b201"
  ],
  "changeHistoryShort": {
    "d4725bfcb2d300219d65395a78f957afbf37b201": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d4725bfcb2d300219d65395a78f957afbf37b201": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-6728. Give fetchers hint when ShuffleHandler rejects a shuffling connection (haibochen via rkanter)\n",
      "commitDate": "21/10/16 5:46 PM",
      "commitName": "d4725bfcb2d300219d65395a78f957afbf37b201",
      "commitAuthor": "Robert Kanter",
      "diff": "@@ -0,0 +1,18 @@\n+    protected void sendError(ChannelHandlerContext ctx, String msg,\n+        HttpResponseStatus status, Map\u003cString, String\u003e headers) {\n+      HttpResponse response \u003d new DefaultHttpResponse(HTTP_1_1, status);\n+      response.headers().set(CONTENT_TYPE, \"text/plain; charset\u003dUTF-8\");\n+      // Put shuffle version into http header\n+      response.headers().set(ShuffleHeader.HTTP_HEADER_NAME,\n+          ShuffleHeader.DEFAULT_HTTP_HEADER_NAME);\n+      response.headers().set(ShuffleHeader.HTTP_HEADER_VERSION,\n+          ShuffleHeader.DEFAULT_HTTP_HEADER_VERSION);\n+      for (Map.Entry\u003cString, String\u003e header : headers.entrySet()) {\n+        response.headers().set(header.getKey(), header.getValue());\n+      }\n+      response.setContent(\n+          ChannelBuffers.copiedBuffer(msg, CharsetUtil.UTF_8));\n+\n+      // Close the connection as soon as the error message is sent.\n+      ctx.getChannel().write(response).addListener(ChannelFutureListener.CLOSE);\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    protected void sendError(ChannelHandlerContext ctx, String msg,\n        HttpResponseStatus status, Map\u003cString, String\u003e headers) {\n      HttpResponse response \u003d new DefaultHttpResponse(HTTP_1_1, status);\n      response.headers().set(CONTENT_TYPE, \"text/plain; charset\u003dUTF-8\");\n      // Put shuffle version into http header\n      response.headers().set(ShuffleHeader.HTTP_HEADER_NAME,\n          ShuffleHeader.DEFAULT_HTTP_HEADER_NAME);\n      response.headers().set(ShuffleHeader.HTTP_HEADER_VERSION,\n          ShuffleHeader.DEFAULT_HTTP_HEADER_VERSION);\n      for (Map.Entry\u003cString, String\u003e header : headers.entrySet()) {\n        response.headers().set(header.getKey(), header.getValue());\n      }\n      response.setContent(\n          ChannelBuffers.copiedBuffer(msg, CharsetUtil.UTF_8));\n\n      // Close the connection as soon as the error message is sent.\n      ctx.getChannel().write(response).addListener(ChannelFutureListener.CLOSE);\n    }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/ShuffleHandler.java"
    }
  }
}