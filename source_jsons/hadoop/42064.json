{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMStateStore.java",
  "functionName": "transition",
  "functionId": "transition___store-RMStateStore__event-RMStateStoreEvent",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/RMStateStore.java",
  "functionStartLine": 479,
  "functionEndLine": 498,
  "numCommitsSeen": 81,
  "timeTaken": 3635,
  "changeHistory": [
    "52734134116eb4b18686e308d00e71e7e903383e",
    "9156fc60c654e9305411686878acb443f3be1e67",
    "f271d377357ad680924d19f07e6c8315e7c89bae",
    "4f18018b7abb405f38d269da096ec9fd80c81d9a",
    "5805a81efbc024024d8172489dfdc6cf77879416",
    "c4dc6853439d54076c6875e66accfc61dddf74d1",
    "c94f2cec3a4d46718aa4cd144fb32e328406b9b3"
  ],
  "changeHistoryShort": {
    "52734134116eb4b18686e308d00e71e7e903383e": "Ybodychange",
    "9156fc60c654e9305411686878acb443f3be1e67": "Ymultichange(Yreturntypechange,Ybodychange)",
    "f271d377357ad680924d19f07e6c8315e7c89bae": "Ybodychange",
    "4f18018b7abb405f38d269da096ec9fd80c81d9a": "Ybodychange",
    "5805a81efbc024024d8172489dfdc6cf77879416": "Ybodychange",
    "c4dc6853439d54076c6875e66accfc61dddf74d1": "Ybodychange",
    "c94f2cec3a4d46718aa4cd144fb32e328406b9b3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "52734134116eb4b18686e308d00e71e7e903383e": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3480. Remove attempts that are beyond max-attempt limit from state store. Contributed by Jun Gong\n",
      "commitDate": "29/12/15 3:58 PM",
      "commitName": "52734134116eb4b18686e308d00e71e7e903383e",
      "commitAuthor": "Jian He",
      "commitDateOld": "02/12/15 11:07 AM",
      "commitNameOld": "6b9a5beb2b2f9589ef86670f2d763e8488ee5e90",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 27.2,
      "commitsBetweenForRepo": 148,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,20 @@\n     public RMStateStoreState transition(RMStateStore store,\n         RMStateStoreEvent event) {\n-      if (!(event instanceof RMStateStoreStoreReservationEvent)) {\n+      if (!(event instanceof RMStateStoreRemoveAppAttemptEvent)) {\n         // should never happen\n         LOG.error(\"Illegal event type: \" + event.getClass());\n         return RMStateStoreState.ACTIVE;\n       }\n       boolean isFenced \u003d false;\n-      RMStateStoreStoreReservationEvent reservationEvent \u003d\n-          (RMStateStoreStoreReservationEvent) event;\n+      ApplicationAttemptId attemptId \u003d\n+          ((RMStateStoreRemoveAppAttemptEvent) event).getApplicationAttemptId();\n+      ApplicationId appId \u003d attemptId.getApplicationId();\n+      LOG.info(\"Removing attempt \" + attemptId + \" from app: \" + appId);\n       try {\n-        LOG.info(\"Removing reservation allocation.\" + reservationEvent\n-                .getReservationIdName());\n-        store.removeReservationState(\n-            reservationEvent.getPlanName(),\n-            reservationEvent.getReservationIdName());\n+        store.removeApplicationAttemptInternal(attemptId);\n       } catch (Exception e) {\n-        LOG.error(\"Error while removing reservation allocation.\", e);\n+        LOG.error(\"Error removing attempt: \" + attemptId, e);\n         isFenced \u003d store.notifyStoreOperationFailedInternal(e);\n       }\n       return finalState(isFenced);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public RMStateStoreState transition(RMStateStore store,\n        RMStateStoreEvent event) {\n      if (!(event instanceof RMStateStoreRemoveAppAttemptEvent)) {\n        // should never happen\n        LOG.error(\"Illegal event type: \" + event.getClass());\n        return RMStateStoreState.ACTIVE;\n      }\n      boolean isFenced \u003d false;\n      ApplicationAttemptId attemptId \u003d\n          ((RMStateStoreRemoveAppAttemptEvent) event).getApplicationAttemptId();\n      ApplicationId appId \u003d attemptId.getApplicationId();\n      LOG.info(\"Removing attempt \" + attemptId + \" from app: \" + appId);\n      try {\n        store.removeApplicationAttemptInternal(attemptId);\n      } catch (Exception e) {\n        LOG.error(\"Error removing attempt: \" + attemptId, e);\n        isFenced \u003d store.notifyStoreOperationFailedInternal(e);\n      }\n      return finalState(isFenced);\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/RMStateStore.java",
      "extendedDetails": {}
    },
    "9156fc60c654e9305411686878acb443f3be1e67": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "YARN-4209. RMStateStore FENCED state doesn’t work due to updateFencedState called by stateMachine.doTransition. (Zhihai Xu via rohithsharmaks)\n",
      "commitDate": "06/10/15 9:04 PM",
      "commitName": "9156fc60c654e9305411686878acb443f3be1e67",
      "commitAuthor": "Rohith Sharma K S",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "YARN-4209. RMStateStore FENCED state doesn’t work due to updateFencedState called by stateMachine.doTransition. (Zhihai Xu via rohithsharmaks)\n",
          "commitDate": "06/10/15 9:04 PM",
          "commitName": "9156fc60c654e9305411686878acb443f3be1e67",
          "commitAuthor": "Rohith Sharma K S",
          "commitDateOld": "07/09/15 5:45 PM",
          "commitNameOld": "9b78e6e33d8c117c1e909df414f20d9db56efe4b",
          "commitAuthorOld": "Xuan",
          "daysBetweenCommits": 29.14,
          "commitsBetweenForRepo": 215,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,22 @@\n-    public void transition(RMStateStore store, RMStateStoreEvent event) {\n+    public RMStateStoreState transition(RMStateStore store,\n+        RMStateStoreEvent event) {\n       if (!(event instanceof RMStateStoreStoreReservationEvent)) {\n         // should never happen\n         LOG.error(\"Illegal event type: \" + event.getClass());\n-        return;\n+        return RMStateStoreState.ACTIVE;\n       }\n+      boolean isFenced \u003d false;\n       RMStateStoreStoreReservationEvent reservationEvent \u003d\n           (RMStateStoreStoreReservationEvent) event;\n       try {\n         LOG.info(\"Removing reservation allocation.\" + reservationEvent\n                 .getReservationIdName());\n         store.removeReservationState(\n             reservationEvent.getPlanName(),\n             reservationEvent.getReservationIdName());\n       } catch (Exception e) {\n         LOG.error(\"Error while removing reservation allocation.\", e);\n-        store.notifyStoreOperationFailed(e);\n+        isFenced \u003d store.notifyStoreOperationFailedInternal(e);\n       }\n+      return finalState(isFenced);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public RMStateStoreState transition(RMStateStore store,\n        RMStateStoreEvent event) {\n      if (!(event instanceof RMStateStoreStoreReservationEvent)) {\n        // should never happen\n        LOG.error(\"Illegal event type: \" + event.getClass());\n        return RMStateStoreState.ACTIVE;\n      }\n      boolean isFenced \u003d false;\n      RMStateStoreStoreReservationEvent reservationEvent \u003d\n          (RMStateStoreStoreReservationEvent) event;\n      try {\n        LOG.info(\"Removing reservation allocation.\" + reservationEvent\n                .getReservationIdName());\n        store.removeReservationState(\n            reservationEvent.getPlanName(),\n            reservationEvent.getReservationIdName());\n      } catch (Exception e) {\n        LOG.error(\"Error while removing reservation allocation.\", e);\n        isFenced \u003d store.notifyStoreOperationFailedInternal(e);\n      }\n      return finalState(isFenced);\n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/RMStateStore.java",
          "extendedDetails": {
            "oldValue": "void",
            "newValue": "RMStateStoreState"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4209. RMStateStore FENCED state doesn’t work due to updateFencedState called by stateMachine.doTransition. (Zhihai Xu via rohithsharmaks)\n",
          "commitDate": "06/10/15 9:04 PM",
          "commitName": "9156fc60c654e9305411686878acb443f3be1e67",
          "commitAuthor": "Rohith Sharma K S",
          "commitDateOld": "07/09/15 5:45 PM",
          "commitNameOld": "9b78e6e33d8c117c1e909df414f20d9db56efe4b",
          "commitAuthorOld": "Xuan",
          "daysBetweenCommits": 29.14,
          "commitsBetweenForRepo": 215,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,22 @@\n-    public void transition(RMStateStore store, RMStateStoreEvent event) {\n+    public RMStateStoreState transition(RMStateStore store,\n+        RMStateStoreEvent event) {\n       if (!(event instanceof RMStateStoreStoreReservationEvent)) {\n         // should never happen\n         LOG.error(\"Illegal event type: \" + event.getClass());\n-        return;\n+        return RMStateStoreState.ACTIVE;\n       }\n+      boolean isFenced \u003d false;\n       RMStateStoreStoreReservationEvent reservationEvent \u003d\n           (RMStateStoreStoreReservationEvent) event;\n       try {\n         LOG.info(\"Removing reservation allocation.\" + reservationEvent\n                 .getReservationIdName());\n         store.removeReservationState(\n             reservationEvent.getPlanName(),\n             reservationEvent.getReservationIdName());\n       } catch (Exception e) {\n         LOG.error(\"Error while removing reservation allocation.\", e);\n-        store.notifyStoreOperationFailed(e);\n+        isFenced \u003d store.notifyStoreOperationFailedInternal(e);\n       }\n+      return finalState(isFenced);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public RMStateStoreState transition(RMStateStore store,\n        RMStateStoreEvent event) {\n      if (!(event instanceof RMStateStoreStoreReservationEvent)) {\n        // should never happen\n        LOG.error(\"Illegal event type: \" + event.getClass());\n        return RMStateStoreState.ACTIVE;\n      }\n      boolean isFenced \u003d false;\n      RMStateStoreStoreReservationEvent reservationEvent \u003d\n          (RMStateStoreStoreReservationEvent) event;\n      try {\n        LOG.info(\"Removing reservation allocation.\" + reservationEvent\n                .getReservationIdName());\n        store.removeReservationState(\n            reservationEvent.getPlanName(),\n            reservationEvent.getReservationIdName());\n      } catch (Exception e) {\n        LOG.error(\"Error while removing reservation allocation.\", e);\n        isFenced \u003d store.notifyStoreOperationFailedInternal(e);\n      }\n      return finalState(isFenced);\n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/RMStateStore.java",
          "extendedDetails": {}
        }
      ]
    },
    "f271d377357ad680924d19f07e6c8315e7c89bae": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3736. Add RMStateStore apis to store and load accepted reservations for failover (adhoot via asuresh)\n",
      "commitDate": "05/08/15 12:57 PM",
      "commitName": "f271d377357ad680924d19f07e6c8315e7c89bae",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "22/07/15 5:52 PM",
      "commitNameOld": "ee98d6354bbbcd0832d3e539ee097f837e5d0e31",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 13.79,
      "commitsBetweenForRepo": 72,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,19 @@\n     public void transition(RMStateStore store, RMStateStoreEvent event) {\n-      if (!(event instanceof RMStateStoreAMRMTokenEvent)) {\n+      if (!(event instanceof RMStateStoreStoreReservationEvent)) {\n         // should never happen\n         LOG.error(\"Illegal event type: \" + event.getClass());\n         return;\n       }\n-      RMStateStoreAMRMTokenEvent amrmEvent \u003d (RMStateStoreAMRMTokenEvent) event;\n-\n+      RMStateStoreStoreReservationEvent reservationEvent \u003d\n+          (RMStateStoreStoreReservationEvent) event;\n       try {\n-        LOG.info(\"Updating AMRMToken\");\n-        store.storeOrUpdateAMRMTokenSecretManagerState(\n-            amrmEvent.getAmrmTokenSecretManagerState(), amrmEvent.isUpdate());\n+        LOG.info(\"Removing reservation allocation.\" + reservationEvent\n+                .getReservationIdName());\n+        store.removeReservationState(\n+            reservationEvent.getPlanName(),\n+            reservationEvent.getReservationIdName());\n       } catch (Exception e) {\n-        LOG.error(\"Error storing info for AMRMTokenSecretManager\", e);\n+        LOG.error(\"Error while removing reservation allocation.\", e);\n         store.notifyStoreOperationFailed(e);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void transition(RMStateStore store, RMStateStoreEvent event) {\n      if (!(event instanceof RMStateStoreStoreReservationEvent)) {\n        // should never happen\n        LOG.error(\"Illegal event type: \" + event.getClass());\n        return;\n      }\n      RMStateStoreStoreReservationEvent reservationEvent \u003d\n          (RMStateStoreStoreReservationEvent) event;\n      try {\n        LOG.info(\"Removing reservation allocation.\" + reservationEvent\n                .getReservationIdName());\n        store.removeReservationState(\n            reservationEvent.getPlanName(),\n            reservationEvent.getReservationIdName());\n      } catch (Exception e) {\n        LOG.error(\"Error while removing reservation allocation.\", e);\n        store.notifyStoreOperationFailed(e);\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/RMStateStore.java",
      "extendedDetails": {}
    },
    "4f18018b7abb405f38d269da096ec9fd80c81d9a": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2946. Fixed potential deadlock in RMStateStore. Contributed by Rohith Sharmaks\n",
      "commitDate": "23/12/14 10:14 PM",
      "commitName": "4f18018b7abb405f38d269da096ec9fd80c81d9a",
      "commitAuthor": "Jian He",
      "commitDateOld": "19/12/14 4:56 PM",
      "commitNameOld": "808cba3821d5bc4267f69d14220757f01cd55715",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 4.22,
      "commitsBetweenForRepo": 24,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,17 @@\n     public void transition(RMStateStore store, RMStateStoreEvent event) {\n-      if (!(event instanceof RMStateUpdateAppAttemptEvent)) {\n+      if (!(event instanceof RMStateStoreAMRMTokenEvent)) {\n         // should never happen\n         LOG.error(\"Illegal event type: \" + event.getClass());\n         return;\n       }\n-      ApplicationAttemptStateData attemptState \u003d\n-          ((RMStateUpdateAppAttemptEvent) event).getAppAttemptState();\n+      RMStateStoreAMRMTokenEvent amrmEvent \u003d (RMStateStoreAMRMTokenEvent) event;\n+\n       try {\n-        if (LOG.isDebugEnabled()) {\n-          LOG.debug(\"Updating info for attempt: \" + attemptState.getAttemptId());\n-        }\n-        store.updateApplicationAttemptStateInternal(attemptState.getAttemptId(),\n-            attemptState);\n-        store.notifyApplicationAttempt(new RMAppAttemptEvent\n-               (attemptState.getAttemptId(),\n-               RMAppAttemptEventType.ATTEMPT_UPDATE_SAVED));\n+        LOG.info(\"Updating AMRMToken\");\n+        store.storeOrUpdateAMRMTokenSecretManagerState(\n+            amrmEvent.getAmrmTokenSecretManagerState(), amrmEvent.isUpdate());\n       } catch (Exception e) {\n-        LOG.error(\"Error updating appAttempt: \" + attemptState.getAttemptId(), e);\n+        LOG.error(\"Error storing info for AMRMTokenSecretManager\", e);\n         store.notifyStoreOperationFailed(e);\n       }\n-    };\n\\ No newline at end of file\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void transition(RMStateStore store, RMStateStoreEvent event) {\n      if (!(event instanceof RMStateStoreAMRMTokenEvent)) {\n        // should never happen\n        LOG.error(\"Illegal event type: \" + event.getClass());\n        return;\n      }\n      RMStateStoreAMRMTokenEvent amrmEvent \u003d (RMStateStoreAMRMTokenEvent) event;\n\n      try {\n        LOG.info(\"Updating AMRMToken\");\n        store.storeOrUpdateAMRMTokenSecretManagerState(\n            amrmEvent.getAmrmTokenSecretManagerState(), amrmEvent.isUpdate());\n      } catch (Exception e) {\n        LOG.error(\"Error storing info for AMRMTokenSecretManager\", e);\n        store.notifyStoreOperationFailed(e);\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/RMStateStore.java",
      "extendedDetails": {}
    },
    "5805a81efbc024024d8172489dfdc6cf77879416": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2404. Removed ApplicationAttemptState and ApplicationState class in RMStateStore. Contributed by Tsuyoshi OZAWA\n",
      "commitDate": "25/11/14 12:48 PM",
      "commitName": "5805a81efbc024024d8172489dfdc6cf77879416",
      "commitAuthor": "Jian He",
      "commitDateOld": "14/11/14 5:24 PM",
      "commitNameOld": "9b860661a5754e829bd8c34ef092757421589bbe",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 10.81,
      "commitsBetweenForRepo": 55,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,22 @@\n     public void transition(RMStateStore store, RMStateStoreEvent event) {\n       if (!(event instanceof RMStateUpdateAppAttemptEvent)) {\n         // should never happen\n         LOG.error(\"Illegal event type: \" + event.getClass());\n         return;\n       }\n-      ApplicationAttemptState attemptState \u003d\n+      ApplicationAttemptStateData attemptState \u003d\n           ((RMStateUpdateAppAttemptEvent) event).getAppAttemptState();\n       try {\n-        ApplicationAttemptStateData attemptStateData \u003d ApplicationAttemptStateData\n-            .newInstance(attemptState);\n         if (LOG.isDebugEnabled()) {\n           LOG.debug(\"Updating info for attempt: \" + attemptState.getAttemptId());\n         }\n         store.updateApplicationAttemptStateInternal(attemptState.getAttemptId(),\n-            attemptStateData);\n+            attemptState);\n         store.notifyApplicationAttempt(new RMAppAttemptEvent\n                (attemptState.getAttemptId(),\n                RMAppAttemptEventType.ATTEMPT_UPDATE_SAVED));\n       } catch (Exception e) {\n         LOG.error(\"Error updating appAttempt: \" + attemptState.getAttemptId(), e);\n         store.notifyStoreOperationFailed(e);\n       }\n     };\n\\ No newline at end of file\n",
      "actualSource": "    public void transition(RMStateStore store, RMStateStoreEvent event) {\n      if (!(event instanceof RMStateUpdateAppAttemptEvent)) {\n        // should never happen\n        LOG.error(\"Illegal event type: \" + event.getClass());\n        return;\n      }\n      ApplicationAttemptStateData attemptState \u003d\n          ((RMStateUpdateAppAttemptEvent) event).getAppAttemptState();\n      try {\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"Updating info for attempt: \" + attemptState.getAttemptId());\n        }\n        store.updateApplicationAttemptStateInternal(attemptState.getAttemptId(),\n            attemptState);\n        store.notifyApplicationAttempt(new RMAppAttemptEvent\n               (attemptState.getAttemptId(),\n               RMAppAttemptEventType.ATTEMPT_UPDATE_SAVED));\n      } catch (Exception e) {\n        LOG.error(\"Error updating appAttempt: \" + attemptState.getAttemptId(), e);\n        store.notifyStoreOperationFailed(e);\n      }\n    };",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/RMStateStore.java",
      "extendedDetails": {}
    },
    "c4dc6853439d54076c6875e66accfc61dddf74d1": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2138. Cleaned up notifyDone* APIs in RMStateStore. Contributed by Varun Saxena\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1617341 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/08/14 11:24 AM",
      "commitName": "c4dc6853439d54076c6875e66accfc61dddf74d1",
      "commitAuthor": "Jian He",
      "commitDateOld": "08/08/14 2:38 PM",
      "commitNameOld": "eeb4acd955802e2a84ea94cecf2e2341b83d5efb",
      "commitAuthorOld": "Xuan Gong",
      "daysBetweenCommits": 2.87,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,24 @@\n     public void transition(RMStateStore store, RMStateStoreEvent event) {\n       if (!(event instanceof RMStateUpdateAppAttemptEvent)) {\n         // should never happen\n         LOG.error(\"Illegal event type: \" + event.getClass());\n         return;\n       }\n       ApplicationAttemptState attemptState \u003d\n           ((RMStateUpdateAppAttemptEvent) event).getAppAttemptState();\n       try {\n         ApplicationAttemptStateData attemptStateData \u003d ApplicationAttemptStateData\n             .newInstance(attemptState);\n         if (LOG.isDebugEnabled()) {\n           LOG.debug(\"Updating info for attempt: \" + attemptState.getAttemptId());\n         }\n         store.updateApplicationAttemptStateInternal(attemptState.getAttemptId(),\n             attemptStateData);\n-        store.notifyDoneUpdatingApplicationAttempt(attemptState.getAttemptId(),\n-            null);\n+        store.notifyApplicationAttempt(new RMAppAttemptEvent\n+               (attemptState.getAttemptId(),\n+               RMAppAttemptEventType.ATTEMPT_UPDATE_SAVED));\n       } catch (Exception e) {\n         LOG.error(\"Error updating appAttempt: \" + attemptState.getAttemptId(), e);\n         store.notifyStoreOperationFailed(e);\n       }\n     };\n\\ No newline at end of file\n",
      "actualSource": "    public void transition(RMStateStore store, RMStateStoreEvent event) {\n      if (!(event instanceof RMStateUpdateAppAttemptEvent)) {\n        // should never happen\n        LOG.error(\"Illegal event type: \" + event.getClass());\n        return;\n      }\n      ApplicationAttemptState attemptState \u003d\n          ((RMStateUpdateAppAttemptEvent) event).getAppAttemptState();\n      try {\n        ApplicationAttemptStateData attemptStateData \u003d ApplicationAttemptStateData\n            .newInstance(attemptState);\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"Updating info for attempt: \" + attemptState.getAttemptId());\n        }\n        store.updateApplicationAttemptStateInternal(attemptState.getAttemptId(),\n            attemptStateData);\n        store.notifyApplicationAttempt(new RMAppAttemptEvent\n               (attemptState.getAttemptId(),\n               RMAppAttemptEventType.ATTEMPT_UPDATE_SAVED));\n      } catch (Exception e) {\n        LOG.error(\"Error updating appAttempt: \" + attemptState.getAttemptId(), e);\n        store.notifyStoreOperationFailed(e);\n      }\n    };",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/RMStateStore.java",
      "extendedDetails": {}
    },
    "c94f2cec3a4d46718aa4cd144fb32e328406b9b3": {
      "type": "Yintroduced",
      "commitMessage": "Augmented RMStateStore with state machine. Contributed by Binglin Chang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1601491 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/06/14 12:44 PM",
      "commitName": "c94f2cec3a4d46718aa4cd144fb32e328406b9b3",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,23 @@\n+    public void transition(RMStateStore store, RMStateStoreEvent event) {\n+      if (!(event instanceof RMStateUpdateAppAttemptEvent)) {\n+        // should never happen\n+        LOG.error(\"Illegal event type: \" + event.getClass());\n+        return;\n+      }\n+      ApplicationAttemptState attemptState \u003d\n+          ((RMStateUpdateAppAttemptEvent) event).getAppAttemptState();\n+      try {\n+        ApplicationAttemptStateData attemptStateData \u003d ApplicationAttemptStateData\n+            .newInstance(attemptState);\n+        if (LOG.isDebugEnabled()) {\n+          LOG.debug(\"Updating info for attempt: \" + attemptState.getAttemptId());\n+        }\n+        store.updateApplicationAttemptStateInternal(attemptState.getAttemptId(),\n+            attemptStateData);\n+        store.notifyDoneUpdatingApplicationAttempt(attemptState.getAttemptId(),\n+            null);\n+      } catch (Exception e) {\n+        LOG.error(\"Error updating appAttempt: \" + attemptState.getAttemptId(), e);\n+        store.notifyStoreOperationFailed(e);\n+      }\n+    };\n\\ No newline at end of file\n",
      "actualSource": "    public void transition(RMStateStore store, RMStateStoreEvent event) {\n      if (!(event instanceof RMStateUpdateAppAttemptEvent)) {\n        // should never happen\n        LOG.error(\"Illegal event type: \" + event.getClass());\n        return;\n      }\n      ApplicationAttemptState attemptState \u003d\n          ((RMStateUpdateAppAttemptEvent) event).getAppAttemptState();\n      try {\n        ApplicationAttemptStateData attemptStateData \u003d ApplicationAttemptStateData\n            .newInstance(attemptState);\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"Updating info for attempt: \" + attemptState.getAttemptId());\n        }\n        store.updateApplicationAttemptStateInternal(attemptState.getAttemptId(),\n            attemptStateData);\n        store.notifyDoneUpdatingApplicationAttempt(attemptState.getAttemptId(),\n            null);\n      } catch (Exception e) {\n        LOG.error(\"Error updating appAttempt: \" + attemptState.getAttemptId(), e);\n        store.notifyStoreOperationFailed(e);\n      }\n    };",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/RMStateStore.java"
    }
  }
}