{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DirectorySnapshottableFeature.java",
  "functionName": "removeSnapshot",
  "functionId": "removeSnapshot___reclaimContext-INode.ReclaimContext__snapshotRoot-INodeDirectory__snapshotName-String__now-long",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/DirectorySnapshottableFeature.java",
  "functionStartLine": 240,
  "functionEndLine": 257,
  "numCommitsSeen": 157,
  "timeTaken": 8316,
  "changeHistory": [
    "300505c56277982ea4369dce1a2b323b4822fe47",
    "b2c85db86c9a62b0a03ee87547265077f664970a",
    "4536399d47f6c061e149e2504600804a0f1e093d",
    "00fe1ed3a4b3ee35fe24be257ec36445d2f44d63",
    "5dae97a584d30cef3e34141edfaca49c4ec57913",
    "8cb473124c1cf1c6f68ead7bde06558ebf7ce47e",
    "76a621ffd2d66bf012a554f4400091a92a5b473e",
    "70cff9e2f0c8f78c1dc54a064182971bb2106795",
    "d46e1608626c64400d2b6c7693a4c035783c55b4",
    "0fa5cad0b27780c27a284c23101b1099d4886506",
    "92e0416ced279a910616985bf11fa3f8b1b1de9b",
    "6bda1f20ad396918edde211f709f5819a361b51e",
    "719c313be12be3afd83b97a5a13dd0585c7f5819",
    "3b3ea5c4220e674064c7603a449f63904c10bac1",
    "c7cf85ccb4ff2f58839e113f1baf903a468b606d",
    "f29fa9e820e25730d00a1a00c51c6f11028fb5a7",
    "e7db60fbfcc222b32d610ffd912683494674ad2f",
    "2d4097840c29116e9b000c158ce841d27863ad6e"
  ],
  "changeHistoryShort": {
    "300505c56277982ea4369dce1a2b323b4822fe47": "Ymultichange(Yparameterchange,Ybodychange)",
    "b2c85db86c9a62b0a03ee87547265077f664970a": "Ybodychange",
    "4536399d47f6c061e149e2504600804a0f1e093d": "Ymultichange(Yparameterchange,Ybodychange)",
    "00fe1ed3a4b3ee35fe24be257ec36445d2f44d63": "Ybodychange",
    "5dae97a584d30cef3e34141edfaca49c4ec57913": "Ymultichange(Yparameterchange,Ybodychange)",
    "8cb473124c1cf1c6f68ead7bde06558ebf7ce47e": "Ybodychange",
    "76a621ffd2d66bf012a554f4400091a92a5b473e": "Ymultichange(Yfilerename,Ymodifierchange,Ybodychange,Yparameterchange)",
    "70cff9e2f0c8f78c1dc54a064182971bb2106795": "Ybodychange",
    "d46e1608626c64400d2b6c7693a4c035783c55b4": "Ybodychange",
    "0fa5cad0b27780c27a284c23101b1099d4886506": "Ybodychange",
    "92e0416ced279a910616985bf11fa3f8b1b1de9b": "Ymultichange(Yparameterchange,Ybodychange)",
    "6bda1f20ad396918edde211f709f5819a361b51e": "Ybodychange",
    "719c313be12be3afd83b97a5a13dd0585c7f5819": "Ybodychange",
    "3b3ea5c4220e674064c7603a449f63904c10bac1": "Ybodychange",
    "c7cf85ccb4ff2f58839e113f1baf903a468b606d": "Ybodychange",
    "f29fa9e820e25730d00a1a00c51c6f11028fb5a7": "Ybodychange",
    "e7db60fbfcc222b32d610ffd912683494674ad2f": "Ybodychange",
    "2d4097840c29116e9b000c158ce841d27863ad6e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "300505c56277982ea4369dce1a2b323b4822fe47": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-15054. Delete Snapshot not updating new modification time. Contributed by hemanthboyina.\n",
      "commitDate": "24/12/19 11:12 PM",
      "commitName": "300505c56277982ea4369dce1a2b323b4822fe47",
      "commitAuthor": "Ayush Saxena",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-15054. Delete Snapshot not updating new modification time. Contributed by hemanthboyina.\n",
          "commitDate": "24/12/19 11:12 PM",
          "commitName": "300505c56277982ea4369dce1a2b323b4822fe47",
          "commitAuthor": "Ayush Saxena",
          "commitDateOld": "21/11/19 8:48 PM",
          "commitNameOld": "b25e94ce29b311a37334317d72e46373b256c111",
          "commitAuthorOld": "Takanobu Asanuma",
          "daysBetweenCommits": 33.1,
          "commitsBetweenForRepo": 111,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,18 @@\n   public Snapshot removeSnapshot(\n       INode.ReclaimContext reclaimContext, INodeDirectory snapshotRoot,\n-      String snapshotName) throws SnapshotException {\n+      String snapshotName, long now) throws SnapshotException {\n     final int i \u003d searchSnapshot(DFSUtil.string2Bytes(snapshotName));\n     if (i \u003c 0) {\n       throw new SnapshotException(\"Cannot delete snapshot \" + snapshotName\n           + \" from path \" + snapshotRoot.getFullPathName()\n           + \": the snapshot does not exist.\");\n     } else {\n       final Snapshot snapshot \u003d snapshotsByNames.get(i);\n       int prior \u003d Snapshot.findLatestSnapshot(snapshotRoot, snapshot.getId());\n       snapshotRoot.cleanSubtree(reclaimContext, snapshot.getId(), prior);\n       // remove from snapshotsByNames after successfully cleaning the subtree\n       snapshotsByNames.remove(i);\n+      snapshotRoot.updateModificationTime(now, Snapshot.CURRENT_STATE_ID);\n       return snapshot;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Snapshot removeSnapshot(\n      INode.ReclaimContext reclaimContext, INodeDirectory snapshotRoot,\n      String snapshotName, long now) throws SnapshotException {\n    final int i \u003d searchSnapshot(DFSUtil.string2Bytes(snapshotName));\n    if (i \u003c 0) {\n      throw new SnapshotException(\"Cannot delete snapshot \" + snapshotName\n          + \" from path \" + snapshotRoot.getFullPathName()\n          + \": the snapshot does not exist.\");\n    } else {\n      final Snapshot snapshot \u003d snapshotsByNames.get(i);\n      int prior \u003d Snapshot.findLatestSnapshot(snapshotRoot, snapshot.getId());\n      snapshotRoot.cleanSubtree(reclaimContext, snapshot.getId(), prior);\n      // remove from snapshotsByNames after successfully cleaning the subtree\n      snapshotsByNames.remove(i);\n      snapshotRoot.updateModificationTime(now, Snapshot.CURRENT_STATE_ID);\n      return snapshot;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/DirectorySnapshottableFeature.java",
          "extendedDetails": {
            "oldValue": "[reclaimContext-INode.ReclaimContext, snapshotRoot-INodeDirectory, snapshotName-String]",
            "newValue": "[reclaimContext-INode.ReclaimContext, snapshotRoot-INodeDirectory, snapshotName-String, now-long]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-15054. Delete Snapshot not updating new modification time. Contributed by hemanthboyina.\n",
          "commitDate": "24/12/19 11:12 PM",
          "commitName": "300505c56277982ea4369dce1a2b323b4822fe47",
          "commitAuthor": "Ayush Saxena",
          "commitDateOld": "21/11/19 8:48 PM",
          "commitNameOld": "b25e94ce29b311a37334317d72e46373b256c111",
          "commitAuthorOld": "Takanobu Asanuma",
          "daysBetweenCommits": 33.1,
          "commitsBetweenForRepo": 111,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,18 @@\n   public Snapshot removeSnapshot(\n       INode.ReclaimContext reclaimContext, INodeDirectory snapshotRoot,\n-      String snapshotName) throws SnapshotException {\n+      String snapshotName, long now) throws SnapshotException {\n     final int i \u003d searchSnapshot(DFSUtil.string2Bytes(snapshotName));\n     if (i \u003c 0) {\n       throw new SnapshotException(\"Cannot delete snapshot \" + snapshotName\n           + \" from path \" + snapshotRoot.getFullPathName()\n           + \": the snapshot does not exist.\");\n     } else {\n       final Snapshot snapshot \u003d snapshotsByNames.get(i);\n       int prior \u003d Snapshot.findLatestSnapshot(snapshotRoot, snapshot.getId());\n       snapshotRoot.cleanSubtree(reclaimContext, snapshot.getId(), prior);\n       // remove from snapshotsByNames after successfully cleaning the subtree\n       snapshotsByNames.remove(i);\n+      snapshotRoot.updateModificationTime(now, Snapshot.CURRENT_STATE_ID);\n       return snapshot;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Snapshot removeSnapshot(\n      INode.ReclaimContext reclaimContext, INodeDirectory snapshotRoot,\n      String snapshotName, long now) throws SnapshotException {\n    final int i \u003d searchSnapshot(DFSUtil.string2Bytes(snapshotName));\n    if (i \u003c 0) {\n      throw new SnapshotException(\"Cannot delete snapshot \" + snapshotName\n          + \" from path \" + snapshotRoot.getFullPathName()\n          + \": the snapshot does not exist.\");\n    } else {\n      final Snapshot snapshot \u003d snapshotsByNames.get(i);\n      int prior \u003d Snapshot.findLatestSnapshot(snapshotRoot, snapshot.getId());\n      snapshotRoot.cleanSubtree(reclaimContext, snapshot.getId(), prior);\n      // remove from snapshotsByNames after successfully cleaning the subtree\n      snapshotsByNames.remove(i);\n      snapshotRoot.updateModificationTime(now, Snapshot.CURRENT_STATE_ID);\n      return snapshot;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/DirectorySnapshottableFeature.java",
          "extendedDetails": {}
        }
      ]
    },
    "b2c85db86c9a62b0a03ee87547265077f664970a": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7728. Avoid updating quota usage while loading edits. Contributed by Jing Zhao.\n",
      "commitDate": "13/05/15 9:50 PM",
      "commitName": "b2c85db86c9a62b0a03ee87547265077f664970a",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "09/05/15 10:51 PM",
      "commitNameOld": "4536399d47f6c061e149e2504600804a0f1e093d",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 3.96,
      "commitsBetweenForRepo": 43,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,17 @@\n   public Snapshot removeSnapshot(\n       INode.ReclaimContext reclaimContext, INodeDirectory snapshotRoot,\n       String snapshotName) throws SnapshotException {\n     final int i \u003d searchSnapshot(DFSUtil.string2Bytes(snapshotName));\n     if (i \u003c 0) {\n       throw new SnapshotException(\"Cannot delete snapshot \" + snapshotName\n           + \" from path \" + snapshotRoot.getFullPathName()\n           + \": the snapshot does not exist.\");\n     } else {\n       final Snapshot snapshot \u003d snapshotsByNames.get(i);\n       int prior \u003d Snapshot.findLatestSnapshot(snapshotRoot, snapshot.getId());\n-      try {\n-        QuotaCounts counts \u003d snapshotRoot.cleanSubtree(reclaimContext,\n-            snapshot.getId(), prior);\n-        INodeDirectory parent \u003d snapshotRoot.getParent();\n-        if (parent !\u003d null) {\n-          // there will not be any WithName node corresponding to the deleted\n-          // snapshot, thus only update the quota usage in the current tree\n-          parent.addSpaceConsumed(counts.negation(), true);\n-        }\n-      } catch(QuotaExceededException e) {\n-        INode.LOG.error(\"BUG: removeSnapshot increases namespace usage.\", e);\n-      }\n+      snapshotRoot.cleanSubtree(reclaimContext, snapshot.getId(), prior);\n       // remove from snapshotsByNames after successfully cleaning the subtree\n       snapshotsByNames.remove(i);\n       return snapshot;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Snapshot removeSnapshot(\n      INode.ReclaimContext reclaimContext, INodeDirectory snapshotRoot,\n      String snapshotName) throws SnapshotException {\n    final int i \u003d searchSnapshot(DFSUtil.string2Bytes(snapshotName));\n    if (i \u003c 0) {\n      throw new SnapshotException(\"Cannot delete snapshot \" + snapshotName\n          + \" from path \" + snapshotRoot.getFullPathName()\n          + \": the snapshot does not exist.\");\n    } else {\n      final Snapshot snapshot \u003d snapshotsByNames.get(i);\n      int prior \u003d Snapshot.findLatestSnapshot(snapshotRoot, snapshot.getId());\n      snapshotRoot.cleanSubtree(reclaimContext, snapshot.getId(), prior);\n      // remove from snapshotsByNames after successfully cleaning the subtree\n      snapshotsByNames.remove(i);\n      return snapshot;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/DirectorySnapshottableFeature.java",
      "extendedDetails": {}
    },
    "4536399d47f6c061e149e2504600804a0f1e093d": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-8357. Consolidate parameters of INode.CleanSubtree() into a parameter objects. Contributed by Li Lu.\n",
      "commitDate": "09/05/15 10:51 PM",
      "commitName": "4536399d47f6c061e149e2504600804a0f1e093d",
      "commitAuthor": "Haohui Mai",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-8357. Consolidate parameters of INode.CleanSubtree() into a parameter objects. Contributed by Li Lu.\n",
          "commitDate": "09/05/15 10:51 PM",
          "commitName": "4536399d47f6c061e149e2504600804a0f1e093d",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "08/05/15 11:04 PM",
          "commitNameOld": "00fe1ed3a4b3ee35fe24be257ec36445d2f44d63",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 0.99,
          "commitsBetweenForRepo": 7,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,28 @@\n-  public Snapshot removeSnapshot(BlockStoragePolicySuite bsps, INodeDirectory snapshotRoot,\n-      String snapshotName, BlocksMapUpdateInfo collectedBlocks,\n-      final List\u003cINode\u003e removedINodes) throws SnapshotException {\n+  public Snapshot removeSnapshot(\n+      INode.ReclaimContext reclaimContext, INodeDirectory snapshotRoot,\n+      String snapshotName) throws SnapshotException {\n     final int i \u003d searchSnapshot(DFSUtil.string2Bytes(snapshotName));\n     if (i \u003c 0) {\n       throw new SnapshotException(\"Cannot delete snapshot \" + snapshotName\n           + \" from path \" + snapshotRoot.getFullPathName()\n           + \": the snapshot does not exist.\");\n     } else {\n       final Snapshot snapshot \u003d snapshotsByNames.get(i);\n       int prior \u003d Snapshot.findLatestSnapshot(snapshotRoot, snapshot.getId());\n       try {\n-        QuotaCounts counts \u003d snapshotRoot.cleanSubtree(bsps, snapshot.getId(),\n-            prior, collectedBlocks, removedINodes, null);\n+        QuotaCounts counts \u003d snapshotRoot.cleanSubtree(reclaimContext,\n+            snapshot.getId(), prior);\n         INodeDirectory parent \u003d snapshotRoot.getParent();\n         if (parent !\u003d null) {\n           // there will not be any WithName node corresponding to the deleted\n           // snapshot, thus only update the quota usage in the current tree\n           parent.addSpaceConsumed(counts.negation(), true);\n         }\n       } catch(QuotaExceededException e) {\n         INode.LOG.error(\"BUG: removeSnapshot increases namespace usage.\", e);\n       }\n       // remove from snapshotsByNames after successfully cleaning the subtree\n       snapshotsByNames.remove(i);\n       return snapshot;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Snapshot removeSnapshot(\n      INode.ReclaimContext reclaimContext, INodeDirectory snapshotRoot,\n      String snapshotName) throws SnapshotException {\n    final int i \u003d searchSnapshot(DFSUtil.string2Bytes(snapshotName));\n    if (i \u003c 0) {\n      throw new SnapshotException(\"Cannot delete snapshot \" + snapshotName\n          + \" from path \" + snapshotRoot.getFullPathName()\n          + \": the snapshot does not exist.\");\n    } else {\n      final Snapshot snapshot \u003d snapshotsByNames.get(i);\n      int prior \u003d Snapshot.findLatestSnapshot(snapshotRoot, snapshot.getId());\n      try {\n        QuotaCounts counts \u003d snapshotRoot.cleanSubtree(reclaimContext,\n            snapshot.getId(), prior);\n        INodeDirectory parent \u003d snapshotRoot.getParent();\n        if (parent !\u003d null) {\n          // there will not be any WithName node corresponding to the deleted\n          // snapshot, thus only update the quota usage in the current tree\n          parent.addSpaceConsumed(counts.negation(), true);\n        }\n      } catch(QuotaExceededException e) {\n        INode.LOG.error(\"BUG: removeSnapshot increases namespace usage.\", e);\n      }\n      // remove from snapshotsByNames after successfully cleaning the subtree\n      snapshotsByNames.remove(i);\n      return snapshot;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/DirectorySnapshottableFeature.java",
          "extendedDetails": {
            "oldValue": "[bsps-BlockStoragePolicySuite, snapshotRoot-INodeDirectory, snapshotName-String, collectedBlocks-BlocksMapUpdateInfo, removedINodes-List\u003cINode\u003e(modifiers-final)]",
            "newValue": "[reclaimContext-INode.ReclaimContext, snapshotRoot-INodeDirectory, snapshotName-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-8357. Consolidate parameters of INode.CleanSubtree() into a parameter objects. Contributed by Li Lu.\n",
          "commitDate": "09/05/15 10:51 PM",
          "commitName": "4536399d47f6c061e149e2504600804a0f1e093d",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "08/05/15 11:04 PM",
          "commitNameOld": "00fe1ed3a4b3ee35fe24be257ec36445d2f44d63",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 0.99,
          "commitsBetweenForRepo": 7,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,28 @@\n-  public Snapshot removeSnapshot(BlockStoragePolicySuite bsps, INodeDirectory snapshotRoot,\n-      String snapshotName, BlocksMapUpdateInfo collectedBlocks,\n-      final List\u003cINode\u003e removedINodes) throws SnapshotException {\n+  public Snapshot removeSnapshot(\n+      INode.ReclaimContext reclaimContext, INodeDirectory snapshotRoot,\n+      String snapshotName) throws SnapshotException {\n     final int i \u003d searchSnapshot(DFSUtil.string2Bytes(snapshotName));\n     if (i \u003c 0) {\n       throw new SnapshotException(\"Cannot delete snapshot \" + snapshotName\n           + \" from path \" + snapshotRoot.getFullPathName()\n           + \": the snapshot does not exist.\");\n     } else {\n       final Snapshot snapshot \u003d snapshotsByNames.get(i);\n       int prior \u003d Snapshot.findLatestSnapshot(snapshotRoot, snapshot.getId());\n       try {\n-        QuotaCounts counts \u003d snapshotRoot.cleanSubtree(bsps, snapshot.getId(),\n-            prior, collectedBlocks, removedINodes, null);\n+        QuotaCounts counts \u003d snapshotRoot.cleanSubtree(reclaimContext,\n+            snapshot.getId(), prior);\n         INodeDirectory parent \u003d snapshotRoot.getParent();\n         if (parent !\u003d null) {\n           // there will not be any WithName node corresponding to the deleted\n           // snapshot, thus only update the quota usage in the current tree\n           parent.addSpaceConsumed(counts.negation(), true);\n         }\n       } catch(QuotaExceededException e) {\n         INode.LOG.error(\"BUG: removeSnapshot increases namespace usage.\", e);\n       }\n       // remove from snapshotsByNames after successfully cleaning the subtree\n       snapshotsByNames.remove(i);\n       return snapshot;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Snapshot removeSnapshot(\n      INode.ReclaimContext reclaimContext, INodeDirectory snapshotRoot,\n      String snapshotName) throws SnapshotException {\n    final int i \u003d searchSnapshot(DFSUtil.string2Bytes(snapshotName));\n    if (i \u003c 0) {\n      throw new SnapshotException(\"Cannot delete snapshot \" + snapshotName\n          + \" from path \" + snapshotRoot.getFullPathName()\n          + \": the snapshot does not exist.\");\n    } else {\n      final Snapshot snapshot \u003d snapshotsByNames.get(i);\n      int prior \u003d Snapshot.findLatestSnapshot(snapshotRoot, snapshot.getId());\n      try {\n        QuotaCounts counts \u003d snapshotRoot.cleanSubtree(reclaimContext,\n            snapshot.getId(), prior);\n        INodeDirectory parent \u003d snapshotRoot.getParent();\n        if (parent !\u003d null) {\n          // there will not be any WithName node corresponding to the deleted\n          // snapshot, thus only update the quota usage in the current tree\n          parent.addSpaceConsumed(counts.negation(), true);\n        }\n      } catch(QuotaExceededException e) {\n        INode.LOG.error(\"BUG: removeSnapshot increases namespace usage.\", e);\n      }\n      // remove from snapshotsByNames after successfully cleaning the subtree\n      snapshotsByNames.remove(i);\n      return snapshot;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/DirectorySnapshottableFeature.java",
          "extendedDetails": {}
        }
      ]
    },
    "00fe1ed3a4b3ee35fe24be257ec36445d2f44d63": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6757. Simplify lease manager with INodeID. Contributed by Haohui Mai.\n",
      "commitDate": "08/05/15 11:04 PM",
      "commitName": "00fe1ed3a4b3ee35fe24be257ec36445d2f44d63",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "26/03/15 10:24 AM",
      "commitNameOld": "3d0708bdb0a75af3d87bbac9f6c4ffbcabab98ca",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 43.53,
      "commitsBetweenForRepo": 445,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,28 @@\n   public Snapshot removeSnapshot(BlockStoragePolicySuite bsps, INodeDirectory snapshotRoot,\n       String snapshotName, BlocksMapUpdateInfo collectedBlocks,\n       final List\u003cINode\u003e removedINodes) throws SnapshotException {\n     final int i \u003d searchSnapshot(DFSUtil.string2Bytes(snapshotName));\n     if (i \u003c 0) {\n       throw new SnapshotException(\"Cannot delete snapshot \" + snapshotName\n           + \" from path \" + snapshotRoot.getFullPathName()\n           + \": the snapshot does not exist.\");\n     } else {\n       final Snapshot snapshot \u003d snapshotsByNames.get(i);\n       int prior \u003d Snapshot.findLatestSnapshot(snapshotRoot, snapshot.getId());\n       try {\n         QuotaCounts counts \u003d snapshotRoot.cleanSubtree(bsps, snapshot.getId(),\n-            prior, collectedBlocks, removedINodes);\n+            prior, collectedBlocks, removedINodes, null);\n         INodeDirectory parent \u003d snapshotRoot.getParent();\n         if (parent !\u003d null) {\n           // there will not be any WithName node corresponding to the deleted\n           // snapshot, thus only update the quota usage in the current tree\n           parent.addSpaceConsumed(counts.negation(), true);\n         }\n       } catch(QuotaExceededException e) {\n         INode.LOG.error(\"BUG: removeSnapshot increases namespace usage.\", e);\n       }\n       // remove from snapshotsByNames after successfully cleaning the subtree\n       snapshotsByNames.remove(i);\n       return snapshot;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Snapshot removeSnapshot(BlockStoragePolicySuite bsps, INodeDirectory snapshotRoot,\n      String snapshotName, BlocksMapUpdateInfo collectedBlocks,\n      final List\u003cINode\u003e removedINodes) throws SnapshotException {\n    final int i \u003d searchSnapshot(DFSUtil.string2Bytes(snapshotName));\n    if (i \u003c 0) {\n      throw new SnapshotException(\"Cannot delete snapshot \" + snapshotName\n          + \" from path \" + snapshotRoot.getFullPathName()\n          + \": the snapshot does not exist.\");\n    } else {\n      final Snapshot snapshot \u003d snapshotsByNames.get(i);\n      int prior \u003d Snapshot.findLatestSnapshot(snapshotRoot, snapshot.getId());\n      try {\n        QuotaCounts counts \u003d snapshotRoot.cleanSubtree(bsps, snapshot.getId(),\n            prior, collectedBlocks, removedINodes, null);\n        INodeDirectory parent \u003d snapshotRoot.getParent();\n        if (parent !\u003d null) {\n          // there will not be any WithName node corresponding to the deleted\n          // snapshot, thus only update the quota usage in the current tree\n          parent.addSpaceConsumed(counts.negation(), true);\n        }\n      } catch(QuotaExceededException e) {\n        INode.LOG.error(\"BUG: removeSnapshot increases namespace usage.\", e);\n      }\n      // remove from snapshotsByNames after successfully cleaning the subtree\n      snapshotsByNames.remove(i);\n      return snapshot;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/DirectorySnapshottableFeature.java",
      "extendedDetails": {}
    },
    "5dae97a584d30cef3e34141edfaca49c4ec57913": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-7723. Quota By Storage Type namenode implemenation. (Contributed by Xiaoyu Yao)\n",
      "commitDate": "11/02/15 10:41 AM",
      "commitName": "5dae97a584d30cef3e34141edfaca49c4ec57913",
      "commitAuthor": "Arpit Agarwal",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-7723. Quota By Storage Type namenode implemenation. (Contributed by Xiaoyu Yao)\n",
          "commitDate": "11/02/15 10:41 AM",
          "commitName": "5dae97a584d30cef3e34141edfaca49c4ec57913",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "02/02/15 4:32 PM",
          "commitNameOld": "8cb473124c1cf1c6f68ead7bde06558ebf7ce47e",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 8.76,
          "commitsBetweenForRepo": 109,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,29 +1,28 @@\n-  public Snapshot removeSnapshot(INodeDirectory snapshotRoot,\n+  public Snapshot removeSnapshot(BlockStoragePolicySuite bsps, INodeDirectory snapshotRoot,\n       String snapshotName, BlocksMapUpdateInfo collectedBlocks,\n       final List\u003cINode\u003e removedINodes) throws SnapshotException {\n     final int i \u003d searchSnapshot(DFSUtil.string2Bytes(snapshotName));\n     if (i \u003c 0) {\n       throw new SnapshotException(\"Cannot delete snapshot \" + snapshotName\n           + \" from path \" + snapshotRoot.getFullPathName()\n           + \": the snapshot does not exist.\");\n     } else {\n       final Snapshot snapshot \u003d snapshotsByNames.get(i);\n       int prior \u003d Snapshot.findLatestSnapshot(snapshotRoot, snapshot.getId());\n       try {\n-        Quota.Counts counts \u003d snapshotRoot.cleanSubtree(snapshot.getId(),\n+        QuotaCounts counts \u003d snapshotRoot.cleanSubtree(bsps, snapshot.getId(),\n             prior, collectedBlocks, removedINodes);\n         INodeDirectory parent \u003d snapshotRoot.getParent();\n         if (parent !\u003d null) {\n           // there will not be any WithName node corresponding to the deleted\n           // snapshot, thus only update the quota usage in the current tree\n-          parent.addSpaceConsumed(-counts.get(Quota.NAMESPACE),\n-              -counts.get(Quota.DISKSPACE), true);\n+          parent.addSpaceConsumed(counts.negation(), true);\n         }\n       } catch(QuotaExceededException e) {\n         INode.LOG.error(\"BUG: removeSnapshot increases namespace usage.\", e);\n       }\n       // remove from snapshotsByNames after successfully cleaning the subtree\n       snapshotsByNames.remove(i);\n       return snapshot;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Snapshot removeSnapshot(BlockStoragePolicySuite bsps, INodeDirectory snapshotRoot,\n      String snapshotName, BlocksMapUpdateInfo collectedBlocks,\n      final List\u003cINode\u003e removedINodes) throws SnapshotException {\n    final int i \u003d searchSnapshot(DFSUtil.string2Bytes(snapshotName));\n    if (i \u003c 0) {\n      throw new SnapshotException(\"Cannot delete snapshot \" + snapshotName\n          + \" from path \" + snapshotRoot.getFullPathName()\n          + \": the snapshot does not exist.\");\n    } else {\n      final Snapshot snapshot \u003d snapshotsByNames.get(i);\n      int prior \u003d Snapshot.findLatestSnapshot(snapshotRoot, snapshot.getId());\n      try {\n        QuotaCounts counts \u003d snapshotRoot.cleanSubtree(bsps, snapshot.getId(),\n            prior, collectedBlocks, removedINodes);\n        INodeDirectory parent \u003d snapshotRoot.getParent();\n        if (parent !\u003d null) {\n          // there will not be any WithName node corresponding to the deleted\n          // snapshot, thus only update the quota usage in the current tree\n          parent.addSpaceConsumed(counts.negation(), true);\n        }\n      } catch(QuotaExceededException e) {\n        INode.LOG.error(\"BUG: removeSnapshot increases namespace usage.\", e);\n      }\n      // remove from snapshotsByNames after successfully cleaning the subtree\n      snapshotsByNames.remove(i);\n      return snapshot;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/DirectorySnapshottableFeature.java",
          "extendedDetails": {
            "oldValue": "[snapshotRoot-INodeDirectory, snapshotName-String, collectedBlocks-BlocksMapUpdateInfo, removedINodes-List\u003cINode\u003e(modifiers-final)]",
            "newValue": "[bsps-BlockStoragePolicySuite, snapshotRoot-INodeDirectory, snapshotName-String, collectedBlocks-BlocksMapUpdateInfo, removedINodes-List\u003cINode\u003e(modifiers-final)]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-7723. Quota By Storage Type namenode implemenation. (Contributed by Xiaoyu Yao)\n",
          "commitDate": "11/02/15 10:41 AM",
          "commitName": "5dae97a584d30cef3e34141edfaca49c4ec57913",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "02/02/15 4:32 PM",
          "commitNameOld": "8cb473124c1cf1c6f68ead7bde06558ebf7ce47e",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 8.76,
          "commitsBetweenForRepo": 109,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,29 +1,28 @@\n-  public Snapshot removeSnapshot(INodeDirectory snapshotRoot,\n+  public Snapshot removeSnapshot(BlockStoragePolicySuite bsps, INodeDirectory snapshotRoot,\n       String snapshotName, BlocksMapUpdateInfo collectedBlocks,\n       final List\u003cINode\u003e removedINodes) throws SnapshotException {\n     final int i \u003d searchSnapshot(DFSUtil.string2Bytes(snapshotName));\n     if (i \u003c 0) {\n       throw new SnapshotException(\"Cannot delete snapshot \" + snapshotName\n           + \" from path \" + snapshotRoot.getFullPathName()\n           + \": the snapshot does not exist.\");\n     } else {\n       final Snapshot snapshot \u003d snapshotsByNames.get(i);\n       int prior \u003d Snapshot.findLatestSnapshot(snapshotRoot, snapshot.getId());\n       try {\n-        Quota.Counts counts \u003d snapshotRoot.cleanSubtree(snapshot.getId(),\n+        QuotaCounts counts \u003d snapshotRoot.cleanSubtree(bsps, snapshot.getId(),\n             prior, collectedBlocks, removedINodes);\n         INodeDirectory parent \u003d snapshotRoot.getParent();\n         if (parent !\u003d null) {\n           // there will not be any WithName node corresponding to the deleted\n           // snapshot, thus only update the quota usage in the current tree\n-          parent.addSpaceConsumed(-counts.get(Quota.NAMESPACE),\n-              -counts.get(Quota.DISKSPACE), true);\n+          parent.addSpaceConsumed(counts.negation(), true);\n         }\n       } catch(QuotaExceededException e) {\n         INode.LOG.error(\"BUG: removeSnapshot increases namespace usage.\", e);\n       }\n       // remove from snapshotsByNames after successfully cleaning the subtree\n       snapshotsByNames.remove(i);\n       return snapshot;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Snapshot removeSnapshot(BlockStoragePolicySuite bsps, INodeDirectory snapshotRoot,\n      String snapshotName, BlocksMapUpdateInfo collectedBlocks,\n      final List\u003cINode\u003e removedINodes) throws SnapshotException {\n    final int i \u003d searchSnapshot(DFSUtil.string2Bytes(snapshotName));\n    if (i \u003c 0) {\n      throw new SnapshotException(\"Cannot delete snapshot \" + snapshotName\n          + \" from path \" + snapshotRoot.getFullPathName()\n          + \": the snapshot does not exist.\");\n    } else {\n      final Snapshot snapshot \u003d snapshotsByNames.get(i);\n      int prior \u003d Snapshot.findLatestSnapshot(snapshotRoot, snapshot.getId());\n      try {\n        QuotaCounts counts \u003d snapshotRoot.cleanSubtree(bsps, snapshot.getId(),\n            prior, collectedBlocks, removedINodes);\n        INodeDirectory parent \u003d snapshotRoot.getParent();\n        if (parent !\u003d null) {\n          // there will not be any WithName node corresponding to the deleted\n          // snapshot, thus only update the quota usage in the current tree\n          parent.addSpaceConsumed(counts.negation(), true);\n        }\n      } catch(QuotaExceededException e) {\n        INode.LOG.error(\"BUG: removeSnapshot increases namespace usage.\", e);\n      }\n      // remove from snapshotsByNames after successfully cleaning the subtree\n      snapshotsByNames.remove(i);\n      return snapshot;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/DirectorySnapshottableFeature.java",
          "extendedDetails": {}
        }
      ]
    },
    "8cb473124c1cf1c6f68ead7bde06558ebf7ce47e": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6651. Deletion failure can leak inodes permanently. Contributed by Jing Zhao.\n",
      "commitDate": "02/02/15 4:32 PM",
      "commitName": "8cb473124c1cf1c6f68ead7bde06558ebf7ce47e",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "04/09/14 4:12 PM",
      "commitNameOld": "f7df24bb1b4278d27f5c2b7fecf7b69be4302c7a",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 151.06,
      "commitsBetweenForRepo": 1231,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,29 @@\n   public Snapshot removeSnapshot(INodeDirectory snapshotRoot,\n       String snapshotName, BlocksMapUpdateInfo collectedBlocks,\n       final List\u003cINode\u003e removedINodes) throws SnapshotException {\n     final int i \u003d searchSnapshot(DFSUtil.string2Bytes(snapshotName));\n     if (i \u003c 0) {\n       throw new SnapshotException(\"Cannot delete snapshot \" + snapshotName\n           + \" from path \" + snapshotRoot.getFullPathName()\n           + \": the snapshot does not exist.\");\n     } else {\n       final Snapshot snapshot \u003d snapshotsByNames.get(i);\n       int prior \u003d Snapshot.findLatestSnapshot(snapshotRoot, snapshot.getId());\n       try {\n         Quota.Counts counts \u003d snapshotRoot.cleanSubtree(snapshot.getId(),\n-            prior, collectedBlocks, removedINodes, true);\n+            prior, collectedBlocks, removedINodes);\n         INodeDirectory parent \u003d snapshotRoot.getParent();\n         if (parent !\u003d null) {\n           // there will not be any WithName node corresponding to the deleted\n           // snapshot, thus only update the quota usage in the current tree\n           parent.addSpaceConsumed(-counts.get(Quota.NAMESPACE),\n               -counts.get(Quota.DISKSPACE), true);\n         }\n       } catch(QuotaExceededException e) {\n         INode.LOG.error(\"BUG: removeSnapshot increases namespace usage.\", e);\n       }\n       // remove from snapshotsByNames after successfully cleaning the subtree\n       snapshotsByNames.remove(i);\n       return snapshot;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Snapshot removeSnapshot(INodeDirectory snapshotRoot,\n      String snapshotName, BlocksMapUpdateInfo collectedBlocks,\n      final List\u003cINode\u003e removedINodes) throws SnapshotException {\n    final int i \u003d searchSnapshot(DFSUtil.string2Bytes(snapshotName));\n    if (i \u003c 0) {\n      throw new SnapshotException(\"Cannot delete snapshot \" + snapshotName\n          + \" from path \" + snapshotRoot.getFullPathName()\n          + \": the snapshot does not exist.\");\n    } else {\n      final Snapshot snapshot \u003d snapshotsByNames.get(i);\n      int prior \u003d Snapshot.findLatestSnapshot(snapshotRoot, snapshot.getId());\n      try {\n        Quota.Counts counts \u003d snapshotRoot.cleanSubtree(snapshot.getId(),\n            prior, collectedBlocks, removedINodes);\n        INodeDirectory parent \u003d snapshotRoot.getParent();\n        if (parent !\u003d null) {\n          // there will not be any WithName node corresponding to the deleted\n          // snapshot, thus only update the quota usage in the current tree\n          parent.addSpaceConsumed(-counts.get(Quota.NAMESPACE),\n              -counts.get(Quota.DISKSPACE), true);\n        }\n      } catch(QuotaExceededException e) {\n        INode.LOG.error(\"BUG: removeSnapshot increases namespace usage.\", e);\n      }\n      // remove from snapshotsByNames after successfully cleaning the subtree\n      snapshotsByNames.remove(i);\n      return snapshot;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/DirectorySnapshottableFeature.java",
      "extendedDetails": {}
    },
    "76a621ffd2d66bf012a554f4400091a92a5b473e": {
      "type": "Ymultichange(Yfilerename,Ymodifierchange,Ybodychange,Yparameterchange)",
      "commitMessage": "HDFS-6609. Use DirectorySnapshottableFeature to represent a snapshottable directory. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1608631 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/07/14 5:08 PM",
      "commitName": "76a621ffd2d66bf012a554f4400091a92a5b473e",
      "commitAuthor": "Haohui Mai",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "HDFS-6609. Use DirectorySnapshottableFeature to represent a snapshottable directory. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1608631 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "07/07/14 5:08 PM",
          "commitName": "76a621ffd2d66bf012a554f4400091a92a5b473e",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "07/07/14 1:14 PM",
          "commitNameOld": "4b2ded8202f9d07ba44066650dc4e5c987cbbacc",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 0.16,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,29 +1,29 @@\n-  Snapshot removeSnapshot(String snapshotName,\n-      BlocksMapUpdateInfo collectedBlocks, final List\u003cINode\u003e removedINodes)\n-      throws SnapshotException {\n+  public Snapshot removeSnapshot(INodeDirectory snapshotRoot,\n+      String snapshotName, BlocksMapUpdateInfo collectedBlocks,\n+      final List\u003cINode\u003e removedINodes) throws SnapshotException {\n     final int i \u003d searchSnapshot(DFSUtil.string2Bytes(snapshotName));\n     if (i \u003c 0) {\n       throw new SnapshotException(\"Cannot delete snapshot \" + snapshotName\n-          + \" from path \" + this.getFullPathName()\n+          + \" from path \" + snapshotRoot.getFullPathName()\n           + \": the snapshot does not exist.\");\n     } else {\n       final Snapshot snapshot \u003d snapshotsByNames.get(i);\n-      int prior \u003d Snapshot.findLatestSnapshot(this, snapshot.getId());\n+      int prior \u003d Snapshot.findLatestSnapshot(snapshotRoot, snapshot.getId());\n       try {\n-        Quota.Counts counts \u003d cleanSubtree(snapshot.getId(), prior,\n-            collectedBlocks, removedINodes, true);\n-        INodeDirectory parent \u003d getParent();\n+        Quota.Counts counts \u003d snapshotRoot.cleanSubtree(snapshot.getId(),\n+            prior, collectedBlocks, removedINodes, true);\n+        INodeDirectory parent \u003d snapshotRoot.getParent();\n         if (parent !\u003d null) {\n-          // there will not be any WithName node corresponding to the deleted \n+          // there will not be any WithName node corresponding to the deleted\n           // snapshot, thus only update the quota usage in the current tree\n           parent.addSpaceConsumed(-counts.get(Quota.NAMESPACE),\n               -counts.get(Quota.DISKSPACE), true);\n         }\n       } catch(QuotaExceededException e) {\n-        LOG.error(\"BUG: removeSnapshot increases namespace usage.\", e);\n+        INode.LOG.error(\"BUG: removeSnapshot increases namespace usage.\", e);\n       }\n       // remove from snapshotsByNames after successfully cleaning the subtree\n       snapshotsByNames.remove(i);\n       return snapshot;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Snapshot removeSnapshot(INodeDirectory snapshotRoot,\n      String snapshotName, BlocksMapUpdateInfo collectedBlocks,\n      final List\u003cINode\u003e removedINodes) throws SnapshotException {\n    final int i \u003d searchSnapshot(DFSUtil.string2Bytes(snapshotName));\n    if (i \u003c 0) {\n      throw new SnapshotException(\"Cannot delete snapshot \" + snapshotName\n          + \" from path \" + snapshotRoot.getFullPathName()\n          + \": the snapshot does not exist.\");\n    } else {\n      final Snapshot snapshot \u003d snapshotsByNames.get(i);\n      int prior \u003d Snapshot.findLatestSnapshot(snapshotRoot, snapshot.getId());\n      try {\n        Quota.Counts counts \u003d snapshotRoot.cleanSubtree(snapshot.getId(),\n            prior, collectedBlocks, removedINodes, true);\n        INodeDirectory parent \u003d snapshotRoot.getParent();\n        if (parent !\u003d null) {\n          // there will not be any WithName node corresponding to the deleted\n          // snapshot, thus only update the quota usage in the current tree\n          parent.addSpaceConsumed(-counts.get(Quota.NAMESPACE),\n              -counts.get(Quota.DISKSPACE), true);\n        }\n      } catch(QuotaExceededException e) {\n        INode.LOG.error(\"BUG: removeSnapshot increases namespace usage.\", e);\n      }\n      // remove from snapshotsByNames after successfully cleaning the subtree\n      snapshotsByNames.remove(i);\n      return snapshot;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/DirectorySnapshottableFeature.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/INodeDirectorySnapshottable.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/DirectorySnapshottableFeature.java"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-6609. Use DirectorySnapshottableFeature to represent a snapshottable directory. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1608631 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "07/07/14 5:08 PM",
          "commitName": "76a621ffd2d66bf012a554f4400091a92a5b473e",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "07/07/14 1:14 PM",
          "commitNameOld": "4b2ded8202f9d07ba44066650dc4e5c987cbbacc",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 0.16,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,29 +1,29 @@\n-  Snapshot removeSnapshot(String snapshotName,\n-      BlocksMapUpdateInfo collectedBlocks, final List\u003cINode\u003e removedINodes)\n-      throws SnapshotException {\n+  public Snapshot removeSnapshot(INodeDirectory snapshotRoot,\n+      String snapshotName, BlocksMapUpdateInfo collectedBlocks,\n+      final List\u003cINode\u003e removedINodes) throws SnapshotException {\n     final int i \u003d searchSnapshot(DFSUtil.string2Bytes(snapshotName));\n     if (i \u003c 0) {\n       throw new SnapshotException(\"Cannot delete snapshot \" + snapshotName\n-          + \" from path \" + this.getFullPathName()\n+          + \" from path \" + snapshotRoot.getFullPathName()\n           + \": the snapshot does not exist.\");\n     } else {\n       final Snapshot snapshot \u003d snapshotsByNames.get(i);\n-      int prior \u003d Snapshot.findLatestSnapshot(this, snapshot.getId());\n+      int prior \u003d Snapshot.findLatestSnapshot(snapshotRoot, snapshot.getId());\n       try {\n-        Quota.Counts counts \u003d cleanSubtree(snapshot.getId(), prior,\n-            collectedBlocks, removedINodes, true);\n-        INodeDirectory parent \u003d getParent();\n+        Quota.Counts counts \u003d snapshotRoot.cleanSubtree(snapshot.getId(),\n+            prior, collectedBlocks, removedINodes, true);\n+        INodeDirectory parent \u003d snapshotRoot.getParent();\n         if (parent !\u003d null) {\n-          // there will not be any WithName node corresponding to the deleted \n+          // there will not be any WithName node corresponding to the deleted\n           // snapshot, thus only update the quota usage in the current tree\n           parent.addSpaceConsumed(-counts.get(Quota.NAMESPACE),\n               -counts.get(Quota.DISKSPACE), true);\n         }\n       } catch(QuotaExceededException e) {\n-        LOG.error(\"BUG: removeSnapshot increases namespace usage.\", e);\n+        INode.LOG.error(\"BUG: removeSnapshot increases namespace usage.\", e);\n       }\n       // remove from snapshotsByNames after successfully cleaning the subtree\n       snapshotsByNames.remove(i);\n       return snapshot;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Snapshot removeSnapshot(INodeDirectory snapshotRoot,\n      String snapshotName, BlocksMapUpdateInfo collectedBlocks,\n      final List\u003cINode\u003e removedINodes) throws SnapshotException {\n    final int i \u003d searchSnapshot(DFSUtil.string2Bytes(snapshotName));\n    if (i \u003c 0) {\n      throw new SnapshotException(\"Cannot delete snapshot \" + snapshotName\n          + \" from path \" + snapshotRoot.getFullPathName()\n          + \": the snapshot does not exist.\");\n    } else {\n      final Snapshot snapshot \u003d snapshotsByNames.get(i);\n      int prior \u003d Snapshot.findLatestSnapshot(snapshotRoot, snapshot.getId());\n      try {\n        Quota.Counts counts \u003d snapshotRoot.cleanSubtree(snapshot.getId(),\n            prior, collectedBlocks, removedINodes, true);\n        INodeDirectory parent \u003d snapshotRoot.getParent();\n        if (parent !\u003d null) {\n          // there will not be any WithName node corresponding to the deleted\n          // snapshot, thus only update the quota usage in the current tree\n          parent.addSpaceConsumed(-counts.get(Quota.NAMESPACE),\n              -counts.get(Quota.DISKSPACE), true);\n        }\n      } catch(QuotaExceededException e) {\n        INode.LOG.error(\"BUG: removeSnapshot increases namespace usage.\", e);\n      }\n      // remove from snapshotsByNames after successfully cleaning the subtree\n      snapshotsByNames.remove(i);\n      return snapshot;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/DirectorySnapshottableFeature.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-6609. Use DirectorySnapshottableFeature to represent a snapshottable directory. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1608631 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "07/07/14 5:08 PM",
          "commitName": "76a621ffd2d66bf012a554f4400091a92a5b473e",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "07/07/14 1:14 PM",
          "commitNameOld": "4b2ded8202f9d07ba44066650dc4e5c987cbbacc",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 0.16,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,29 +1,29 @@\n-  Snapshot removeSnapshot(String snapshotName,\n-      BlocksMapUpdateInfo collectedBlocks, final List\u003cINode\u003e removedINodes)\n-      throws SnapshotException {\n+  public Snapshot removeSnapshot(INodeDirectory snapshotRoot,\n+      String snapshotName, BlocksMapUpdateInfo collectedBlocks,\n+      final List\u003cINode\u003e removedINodes) throws SnapshotException {\n     final int i \u003d searchSnapshot(DFSUtil.string2Bytes(snapshotName));\n     if (i \u003c 0) {\n       throw new SnapshotException(\"Cannot delete snapshot \" + snapshotName\n-          + \" from path \" + this.getFullPathName()\n+          + \" from path \" + snapshotRoot.getFullPathName()\n           + \": the snapshot does not exist.\");\n     } else {\n       final Snapshot snapshot \u003d snapshotsByNames.get(i);\n-      int prior \u003d Snapshot.findLatestSnapshot(this, snapshot.getId());\n+      int prior \u003d Snapshot.findLatestSnapshot(snapshotRoot, snapshot.getId());\n       try {\n-        Quota.Counts counts \u003d cleanSubtree(snapshot.getId(), prior,\n-            collectedBlocks, removedINodes, true);\n-        INodeDirectory parent \u003d getParent();\n+        Quota.Counts counts \u003d snapshotRoot.cleanSubtree(snapshot.getId(),\n+            prior, collectedBlocks, removedINodes, true);\n+        INodeDirectory parent \u003d snapshotRoot.getParent();\n         if (parent !\u003d null) {\n-          // there will not be any WithName node corresponding to the deleted \n+          // there will not be any WithName node corresponding to the deleted\n           // snapshot, thus only update the quota usage in the current tree\n           parent.addSpaceConsumed(-counts.get(Quota.NAMESPACE),\n               -counts.get(Quota.DISKSPACE), true);\n         }\n       } catch(QuotaExceededException e) {\n-        LOG.error(\"BUG: removeSnapshot increases namespace usage.\", e);\n+        INode.LOG.error(\"BUG: removeSnapshot increases namespace usage.\", e);\n       }\n       // remove from snapshotsByNames after successfully cleaning the subtree\n       snapshotsByNames.remove(i);\n       return snapshot;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Snapshot removeSnapshot(INodeDirectory snapshotRoot,\n      String snapshotName, BlocksMapUpdateInfo collectedBlocks,\n      final List\u003cINode\u003e removedINodes) throws SnapshotException {\n    final int i \u003d searchSnapshot(DFSUtil.string2Bytes(snapshotName));\n    if (i \u003c 0) {\n      throw new SnapshotException(\"Cannot delete snapshot \" + snapshotName\n          + \" from path \" + snapshotRoot.getFullPathName()\n          + \": the snapshot does not exist.\");\n    } else {\n      final Snapshot snapshot \u003d snapshotsByNames.get(i);\n      int prior \u003d Snapshot.findLatestSnapshot(snapshotRoot, snapshot.getId());\n      try {\n        Quota.Counts counts \u003d snapshotRoot.cleanSubtree(snapshot.getId(),\n            prior, collectedBlocks, removedINodes, true);\n        INodeDirectory parent \u003d snapshotRoot.getParent();\n        if (parent !\u003d null) {\n          // there will not be any WithName node corresponding to the deleted\n          // snapshot, thus only update the quota usage in the current tree\n          parent.addSpaceConsumed(-counts.get(Quota.NAMESPACE),\n              -counts.get(Quota.DISKSPACE), true);\n        }\n      } catch(QuotaExceededException e) {\n        INode.LOG.error(\"BUG: removeSnapshot increases namespace usage.\", e);\n      }\n      // remove from snapshotsByNames after successfully cleaning the subtree\n      snapshotsByNames.remove(i);\n      return snapshot;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/DirectorySnapshottableFeature.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-6609. Use DirectorySnapshottableFeature to represent a snapshottable directory. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1608631 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "07/07/14 5:08 PM",
          "commitName": "76a621ffd2d66bf012a554f4400091a92a5b473e",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "07/07/14 1:14 PM",
          "commitNameOld": "4b2ded8202f9d07ba44066650dc4e5c987cbbacc",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 0.16,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,29 +1,29 @@\n-  Snapshot removeSnapshot(String snapshotName,\n-      BlocksMapUpdateInfo collectedBlocks, final List\u003cINode\u003e removedINodes)\n-      throws SnapshotException {\n+  public Snapshot removeSnapshot(INodeDirectory snapshotRoot,\n+      String snapshotName, BlocksMapUpdateInfo collectedBlocks,\n+      final List\u003cINode\u003e removedINodes) throws SnapshotException {\n     final int i \u003d searchSnapshot(DFSUtil.string2Bytes(snapshotName));\n     if (i \u003c 0) {\n       throw new SnapshotException(\"Cannot delete snapshot \" + snapshotName\n-          + \" from path \" + this.getFullPathName()\n+          + \" from path \" + snapshotRoot.getFullPathName()\n           + \": the snapshot does not exist.\");\n     } else {\n       final Snapshot snapshot \u003d snapshotsByNames.get(i);\n-      int prior \u003d Snapshot.findLatestSnapshot(this, snapshot.getId());\n+      int prior \u003d Snapshot.findLatestSnapshot(snapshotRoot, snapshot.getId());\n       try {\n-        Quota.Counts counts \u003d cleanSubtree(snapshot.getId(), prior,\n-            collectedBlocks, removedINodes, true);\n-        INodeDirectory parent \u003d getParent();\n+        Quota.Counts counts \u003d snapshotRoot.cleanSubtree(snapshot.getId(),\n+            prior, collectedBlocks, removedINodes, true);\n+        INodeDirectory parent \u003d snapshotRoot.getParent();\n         if (parent !\u003d null) {\n-          // there will not be any WithName node corresponding to the deleted \n+          // there will not be any WithName node corresponding to the deleted\n           // snapshot, thus only update the quota usage in the current tree\n           parent.addSpaceConsumed(-counts.get(Quota.NAMESPACE),\n               -counts.get(Quota.DISKSPACE), true);\n         }\n       } catch(QuotaExceededException e) {\n-        LOG.error(\"BUG: removeSnapshot increases namespace usage.\", e);\n+        INode.LOG.error(\"BUG: removeSnapshot increases namespace usage.\", e);\n       }\n       // remove from snapshotsByNames after successfully cleaning the subtree\n       snapshotsByNames.remove(i);\n       return snapshot;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Snapshot removeSnapshot(INodeDirectory snapshotRoot,\n      String snapshotName, BlocksMapUpdateInfo collectedBlocks,\n      final List\u003cINode\u003e removedINodes) throws SnapshotException {\n    final int i \u003d searchSnapshot(DFSUtil.string2Bytes(snapshotName));\n    if (i \u003c 0) {\n      throw new SnapshotException(\"Cannot delete snapshot \" + snapshotName\n          + \" from path \" + snapshotRoot.getFullPathName()\n          + \": the snapshot does not exist.\");\n    } else {\n      final Snapshot snapshot \u003d snapshotsByNames.get(i);\n      int prior \u003d Snapshot.findLatestSnapshot(snapshotRoot, snapshot.getId());\n      try {\n        Quota.Counts counts \u003d snapshotRoot.cleanSubtree(snapshot.getId(),\n            prior, collectedBlocks, removedINodes, true);\n        INodeDirectory parent \u003d snapshotRoot.getParent();\n        if (parent !\u003d null) {\n          // there will not be any WithName node corresponding to the deleted\n          // snapshot, thus only update the quota usage in the current tree\n          parent.addSpaceConsumed(-counts.get(Quota.NAMESPACE),\n              -counts.get(Quota.DISKSPACE), true);\n        }\n      } catch(QuotaExceededException e) {\n        INode.LOG.error(\"BUG: removeSnapshot increases namespace usage.\", e);\n      }\n      // remove from snapshotsByNames after successfully cleaning the subtree\n      snapshotsByNames.remove(i);\n      return snapshot;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/DirectorySnapshottableFeature.java",
          "extendedDetails": {
            "oldValue": "[snapshotName-String, collectedBlocks-BlocksMapUpdateInfo, removedINodes-List\u003cINode\u003e(modifiers-final)]",
            "newValue": "[snapshotRoot-INodeDirectory, snapshotName-String, collectedBlocks-BlocksMapUpdateInfo, removedINodes-List\u003cINode\u003e(modifiers-final)]"
          }
        }
      ]
    },
    "70cff9e2f0c8f78c1dc54a064182971bb2106795": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5715. Use Snapshot ID to indicate the corresponding Snapshot for a FileDiff/DirectoryDiff. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1556353 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/01/14 12:52 PM",
      "commitName": "70cff9e2f0c8f78c1dc54a064182971bb2106795",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "14/12/13 2:13 AM",
      "commitNameOld": "44a6560b5da3f79d2299579a36e7a2a60a91f823",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 24.44,
      "commitsBetweenForRepo": 98,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,29 @@\n   Snapshot removeSnapshot(String snapshotName,\n       BlocksMapUpdateInfo collectedBlocks, final List\u003cINode\u003e removedINodes)\n       throws SnapshotException {\n     final int i \u003d searchSnapshot(DFSUtil.string2Bytes(snapshotName));\n     if (i \u003c 0) {\n       throw new SnapshotException(\"Cannot delete snapshot \" + snapshotName\n           + \" from path \" + this.getFullPathName()\n           + \": the snapshot does not exist.\");\n     } else {\n       final Snapshot snapshot \u003d snapshotsByNames.get(i);\n-      Snapshot prior \u003d Snapshot.findLatestSnapshot(this, snapshot);\n+      int prior \u003d Snapshot.findLatestSnapshot(this, snapshot.getId());\n       try {\n-        Quota.Counts counts \u003d cleanSubtree(snapshot, prior, collectedBlocks,\n-            removedINodes, true);\n+        Quota.Counts counts \u003d cleanSubtree(snapshot.getId(), prior,\n+            collectedBlocks, removedINodes, true);\n         INodeDirectory parent \u003d getParent();\n         if (parent !\u003d null) {\n           // there will not be any WithName node corresponding to the deleted \n           // snapshot, thus only update the quota usage in the current tree\n           parent.addSpaceConsumed(-counts.get(Quota.NAMESPACE),\n               -counts.get(Quota.DISKSPACE), true);\n         }\n       } catch(QuotaExceededException e) {\n         LOG.error(\"BUG: removeSnapshot increases namespace usage.\", e);\n       }\n       // remove from snapshotsByNames after successfully cleaning the subtree\n       snapshotsByNames.remove(i);\n       return snapshot;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  Snapshot removeSnapshot(String snapshotName,\n      BlocksMapUpdateInfo collectedBlocks, final List\u003cINode\u003e removedINodes)\n      throws SnapshotException {\n    final int i \u003d searchSnapshot(DFSUtil.string2Bytes(snapshotName));\n    if (i \u003c 0) {\n      throw new SnapshotException(\"Cannot delete snapshot \" + snapshotName\n          + \" from path \" + this.getFullPathName()\n          + \": the snapshot does not exist.\");\n    } else {\n      final Snapshot snapshot \u003d snapshotsByNames.get(i);\n      int prior \u003d Snapshot.findLatestSnapshot(this, snapshot.getId());\n      try {\n        Quota.Counts counts \u003d cleanSubtree(snapshot.getId(), prior,\n            collectedBlocks, removedINodes, true);\n        INodeDirectory parent \u003d getParent();\n        if (parent !\u003d null) {\n          // there will not be any WithName node corresponding to the deleted \n          // snapshot, thus only update the quota usage in the current tree\n          parent.addSpaceConsumed(-counts.get(Quota.NAMESPACE),\n              -counts.get(Quota.DISKSPACE), true);\n        }\n      } catch(QuotaExceededException e) {\n        LOG.error(\"BUG: removeSnapshot increases namespace usage.\", e);\n      }\n      // remove from snapshotsByNames after successfully cleaning the subtree\n      snapshotsByNames.remove(i);\n      return snapshot;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/INodeDirectorySnapshottable.java",
      "extendedDetails": {}
    },
    "d46e1608626c64400d2b6c7693a4c035783c55b4": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4877. Snapshot: fix the scenario where a directory is renamed under its prior descendant. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1490421 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/06/13 1:15 PM",
      "commitName": "d46e1608626c64400d2b6c7693a4c035783c55b4",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "06/05/13 11:48 AM",
      "commitNameOld": "424b270c94297b00a850e7a821163b9802edc7ae",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 31.06,
      "commitsBetweenForRepo": 191,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,29 @@\n   Snapshot removeSnapshot(String snapshotName,\n       BlocksMapUpdateInfo collectedBlocks, final List\u003cINode\u003e removedINodes)\n       throws SnapshotException {\n     final int i \u003d searchSnapshot(DFSUtil.string2Bytes(snapshotName));\n     if (i \u003c 0) {\n       throw new SnapshotException(\"Cannot delete snapshot \" + snapshotName\n           + \" from path \" + this.getFullPathName()\n           + \": the snapshot does not exist.\");\n     } else {\n-      final Snapshot snapshot \u003d snapshotsByNames.remove(i);\n+      final Snapshot snapshot \u003d snapshotsByNames.get(i);\n       Snapshot prior \u003d Snapshot.findLatestSnapshot(this, snapshot);\n       try {\n         Quota.Counts counts \u003d cleanSubtree(snapshot, prior, collectedBlocks,\n-            removedINodes);\n+            removedINodes, true);\n         INodeDirectory parent \u003d getParent();\n         if (parent !\u003d null) {\n           // there will not be any WithName node corresponding to the deleted \n           // snapshot, thus only update the quota usage in the current tree\n           parent.addSpaceConsumed(-counts.get(Quota.NAMESPACE),\n-              -counts.get(Quota.DISKSPACE), true, Snapshot.INVALID_ID);\n+              -counts.get(Quota.DISKSPACE), true);\n         }\n       } catch(QuotaExceededException e) {\n         LOG.error(\"BUG: removeSnapshot increases namespace usage.\", e);\n       }\n+      // remove from snapshotsByNames after successfully cleaning the subtree\n+      snapshotsByNames.remove(i);\n       return snapshot;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  Snapshot removeSnapshot(String snapshotName,\n      BlocksMapUpdateInfo collectedBlocks, final List\u003cINode\u003e removedINodes)\n      throws SnapshotException {\n    final int i \u003d searchSnapshot(DFSUtil.string2Bytes(snapshotName));\n    if (i \u003c 0) {\n      throw new SnapshotException(\"Cannot delete snapshot \" + snapshotName\n          + \" from path \" + this.getFullPathName()\n          + \": the snapshot does not exist.\");\n    } else {\n      final Snapshot snapshot \u003d snapshotsByNames.get(i);\n      Snapshot prior \u003d Snapshot.findLatestSnapshot(this, snapshot);\n      try {\n        Quota.Counts counts \u003d cleanSubtree(snapshot, prior, collectedBlocks,\n            removedINodes, true);\n        INodeDirectory parent \u003d getParent();\n        if (parent !\u003d null) {\n          // there will not be any WithName node corresponding to the deleted \n          // snapshot, thus only update the quota usage in the current tree\n          parent.addSpaceConsumed(-counts.get(Quota.NAMESPACE),\n              -counts.get(Quota.DISKSPACE), true);\n        }\n      } catch(QuotaExceededException e) {\n        LOG.error(\"BUG: removeSnapshot increases namespace usage.\", e);\n      }\n      // remove from snapshotsByNames after successfully cleaning the subtree\n      snapshotsByNames.remove(i);\n      return snapshot;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/INodeDirectorySnapshottable.java",
      "extendedDetails": {}
    },
    "0fa5cad0b27780c27a284c23101b1099d4886506": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4686. Update quota computation for rename and INodeReference.  Contributed by Jing Zhao\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1471647 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/04/13 1:31 PM",
      "commitName": "0fa5cad0b27780c27a284c23101b1099d4886506",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "22/04/13 5:00 PM",
      "commitNameOld": "92e0416ced279a910616985bf11fa3f8b1b1de9b",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 1.85,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,27 @@\n   Snapshot removeSnapshot(String snapshotName,\n       BlocksMapUpdateInfo collectedBlocks, final List\u003cINode\u003e removedINodes)\n       throws SnapshotException {\n     final int i \u003d searchSnapshot(DFSUtil.string2Bytes(snapshotName));\n     if (i \u003c 0) {\n       throw new SnapshotException(\"Cannot delete snapshot \" + snapshotName\n           + \" from path \" + this.getFullPathName()\n           + \": the snapshot does not exist.\");\n     } else {\n       final Snapshot snapshot \u003d snapshotsByNames.remove(i);\n       Snapshot prior \u003d Snapshot.findLatestSnapshot(this, snapshot);\n       try {\n         Quota.Counts counts \u003d cleanSubtree(snapshot, prior, collectedBlocks,\n             removedINodes);\n         INodeDirectory parent \u003d getParent();\n         if (parent !\u003d null) {\n+          // there will not be any WithName node corresponding to the deleted \n+          // snapshot, thus only update the quota usage in the current tree\n           parent.addSpaceConsumed(-counts.get(Quota.NAMESPACE),\n-              -counts.get(Quota.DISKSPACE), true);\n+              -counts.get(Quota.DISKSPACE), true, Snapshot.INVALID_ID);\n         }\n       } catch(QuotaExceededException e) {\n         LOG.error(\"BUG: removeSnapshot increases namespace usage.\", e);\n       }\n       return snapshot;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  Snapshot removeSnapshot(String snapshotName,\n      BlocksMapUpdateInfo collectedBlocks, final List\u003cINode\u003e removedINodes)\n      throws SnapshotException {\n    final int i \u003d searchSnapshot(DFSUtil.string2Bytes(snapshotName));\n    if (i \u003c 0) {\n      throw new SnapshotException(\"Cannot delete snapshot \" + snapshotName\n          + \" from path \" + this.getFullPathName()\n          + \": the snapshot does not exist.\");\n    } else {\n      final Snapshot snapshot \u003d snapshotsByNames.remove(i);\n      Snapshot prior \u003d Snapshot.findLatestSnapshot(this, snapshot);\n      try {\n        Quota.Counts counts \u003d cleanSubtree(snapshot, prior, collectedBlocks,\n            removedINodes);\n        INodeDirectory parent \u003d getParent();\n        if (parent !\u003d null) {\n          // there will not be any WithName node corresponding to the deleted \n          // snapshot, thus only update the quota usage in the current tree\n          parent.addSpaceConsumed(-counts.get(Quota.NAMESPACE),\n              -counts.get(Quota.DISKSPACE), true, Snapshot.INVALID_ID);\n        }\n      } catch(QuotaExceededException e) {\n        LOG.error(\"BUG: removeSnapshot increases namespace usage.\", e);\n      }\n      return snapshot;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/INodeDirectorySnapshottable.java",
      "extendedDetails": {}
    },
    "92e0416ced279a910616985bf11fa3f8b1b1de9b": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-4727. Update inodeMap after deleting files/directories/snapshots.  Contributed by Jing Zhao\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1470756 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/04/13 5:00 PM",
      "commitName": "92e0416ced279a910616985bf11fa3f8b1b1de9b",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-4727. Update inodeMap after deleting files/directories/snapshots.  Contributed by Jing Zhao\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1470756 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/04/13 5:00 PM",
          "commitName": "92e0416ced279a910616985bf11fa3f8b1b1de9b",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "17/04/13 6:39 PM",
          "commitNameOld": "419fd3999c651099272a2ae0ee241bd199165608",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 4.93,
          "commitsBetweenForRepo": 23,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,25 @@\n   Snapshot removeSnapshot(String snapshotName,\n-      BlocksMapUpdateInfo collectedBlocks) throws SnapshotException {\n+      BlocksMapUpdateInfo collectedBlocks, final List\u003cINode\u003e removedINodes)\n+      throws SnapshotException {\n     final int i \u003d searchSnapshot(DFSUtil.string2Bytes(snapshotName));\n     if (i \u003c 0) {\n       throw new SnapshotException(\"Cannot delete snapshot \" + snapshotName\n           + \" from path \" + this.getFullPathName()\n           + \": the snapshot does not exist.\");\n     } else {\n       final Snapshot snapshot \u003d snapshotsByNames.remove(i);\n       Snapshot prior \u003d Snapshot.findLatestSnapshot(this, snapshot);\n       try {\n-        Quota.Counts counts \u003d cleanSubtree(snapshot, prior, collectedBlocks);\n+        Quota.Counts counts \u003d cleanSubtree(snapshot, prior, collectedBlocks,\n+            removedINodes);\n         INodeDirectory parent \u003d getParent();\n         if (parent !\u003d null) {\n           parent.addSpaceConsumed(-counts.get(Quota.NAMESPACE),\n               -counts.get(Quota.DISKSPACE), true);\n         }\n       } catch(QuotaExceededException e) {\n         LOG.error(\"BUG: removeSnapshot increases namespace usage.\", e);\n       }\n       return snapshot;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  Snapshot removeSnapshot(String snapshotName,\n      BlocksMapUpdateInfo collectedBlocks, final List\u003cINode\u003e removedINodes)\n      throws SnapshotException {\n    final int i \u003d searchSnapshot(DFSUtil.string2Bytes(snapshotName));\n    if (i \u003c 0) {\n      throw new SnapshotException(\"Cannot delete snapshot \" + snapshotName\n          + \" from path \" + this.getFullPathName()\n          + \": the snapshot does not exist.\");\n    } else {\n      final Snapshot snapshot \u003d snapshotsByNames.remove(i);\n      Snapshot prior \u003d Snapshot.findLatestSnapshot(this, snapshot);\n      try {\n        Quota.Counts counts \u003d cleanSubtree(snapshot, prior, collectedBlocks,\n            removedINodes);\n        INodeDirectory parent \u003d getParent();\n        if (parent !\u003d null) {\n          parent.addSpaceConsumed(-counts.get(Quota.NAMESPACE),\n              -counts.get(Quota.DISKSPACE), true);\n        }\n      } catch(QuotaExceededException e) {\n        LOG.error(\"BUG: removeSnapshot increases namespace usage.\", e);\n      }\n      return snapshot;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/INodeDirectorySnapshottable.java",
          "extendedDetails": {
            "oldValue": "[snapshotName-String, collectedBlocks-BlocksMapUpdateInfo]",
            "newValue": "[snapshotName-String, collectedBlocks-BlocksMapUpdateInfo, removedINodes-List\u003cINode\u003e(modifiers-final)]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-4727. Update inodeMap after deleting files/directories/snapshots.  Contributed by Jing Zhao\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1470756 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/04/13 5:00 PM",
          "commitName": "92e0416ced279a910616985bf11fa3f8b1b1de9b",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "17/04/13 6:39 PM",
          "commitNameOld": "419fd3999c651099272a2ae0ee241bd199165608",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 4.93,
          "commitsBetweenForRepo": 23,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,25 @@\n   Snapshot removeSnapshot(String snapshotName,\n-      BlocksMapUpdateInfo collectedBlocks) throws SnapshotException {\n+      BlocksMapUpdateInfo collectedBlocks, final List\u003cINode\u003e removedINodes)\n+      throws SnapshotException {\n     final int i \u003d searchSnapshot(DFSUtil.string2Bytes(snapshotName));\n     if (i \u003c 0) {\n       throw new SnapshotException(\"Cannot delete snapshot \" + snapshotName\n           + \" from path \" + this.getFullPathName()\n           + \": the snapshot does not exist.\");\n     } else {\n       final Snapshot snapshot \u003d snapshotsByNames.remove(i);\n       Snapshot prior \u003d Snapshot.findLatestSnapshot(this, snapshot);\n       try {\n-        Quota.Counts counts \u003d cleanSubtree(snapshot, prior, collectedBlocks);\n+        Quota.Counts counts \u003d cleanSubtree(snapshot, prior, collectedBlocks,\n+            removedINodes);\n         INodeDirectory parent \u003d getParent();\n         if (parent !\u003d null) {\n           parent.addSpaceConsumed(-counts.get(Quota.NAMESPACE),\n               -counts.get(Quota.DISKSPACE), true);\n         }\n       } catch(QuotaExceededException e) {\n         LOG.error(\"BUG: removeSnapshot increases namespace usage.\", e);\n       }\n       return snapshot;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  Snapshot removeSnapshot(String snapshotName,\n      BlocksMapUpdateInfo collectedBlocks, final List\u003cINode\u003e removedINodes)\n      throws SnapshotException {\n    final int i \u003d searchSnapshot(DFSUtil.string2Bytes(snapshotName));\n    if (i \u003c 0) {\n      throw new SnapshotException(\"Cannot delete snapshot \" + snapshotName\n          + \" from path \" + this.getFullPathName()\n          + \": the snapshot does not exist.\");\n    } else {\n      final Snapshot snapshot \u003d snapshotsByNames.remove(i);\n      Snapshot prior \u003d Snapshot.findLatestSnapshot(this, snapshot);\n      try {\n        Quota.Counts counts \u003d cleanSubtree(snapshot, prior, collectedBlocks,\n            removedINodes);\n        INodeDirectory parent \u003d getParent();\n        if (parent !\u003d null) {\n          parent.addSpaceConsumed(-counts.get(Quota.NAMESPACE),\n              -counts.get(Quota.DISKSPACE), true);\n        }\n      } catch(QuotaExceededException e) {\n        LOG.error(\"BUG: removeSnapshot increases namespace usage.\", e);\n      }\n      return snapshot;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/INodeDirectorySnapshottable.java",
          "extendedDetails": {}
        }
      ]
    },
    "6bda1f20ad396918edde211f709f5819a361b51e": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4700. Fix the undo section of rename with snapshots.  Contributed by Jing Zhao\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1468632 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/04/13 3:03 PM",
      "commitName": "6bda1f20ad396918edde211f709f5819a361b51e",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "13/04/13 2:41 PM",
      "commitNameOld": "0f78c50ea7f25515f43a7570fe67a6604e8772ad",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 3.02,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   Snapshot removeSnapshot(String snapshotName,\n       BlocksMapUpdateInfo collectedBlocks) throws SnapshotException {\n     final int i \u003d searchSnapshot(DFSUtil.string2Bytes(snapshotName));\n     if (i \u003c 0) {\n       throw new SnapshotException(\"Cannot delete snapshot \" + snapshotName\n           + \" from path \" + this.getFullPathName()\n           + \": the snapshot does not exist.\");\n     } else {\n       final Snapshot snapshot \u003d snapshotsByNames.remove(i);\n       Snapshot prior \u003d Snapshot.findLatestSnapshot(this, snapshot);\n       try {\n         Quota.Counts counts \u003d cleanSubtree(snapshot, prior, collectedBlocks);\n         INodeDirectory parent \u003d getParent();\n         if (parent !\u003d null) {\n           parent.addSpaceConsumed(-counts.get(Quota.NAMESPACE),\n-              -counts.get(Quota.DISKSPACE));\n+              -counts.get(Quota.DISKSPACE), true);\n         }\n       } catch(QuotaExceededException e) {\n         LOG.error(\"BUG: removeSnapshot increases namespace usage.\", e);\n       }\n       return snapshot;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  Snapshot removeSnapshot(String snapshotName,\n      BlocksMapUpdateInfo collectedBlocks) throws SnapshotException {\n    final int i \u003d searchSnapshot(DFSUtil.string2Bytes(snapshotName));\n    if (i \u003c 0) {\n      throw new SnapshotException(\"Cannot delete snapshot \" + snapshotName\n          + \" from path \" + this.getFullPathName()\n          + \": the snapshot does not exist.\");\n    } else {\n      final Snapshot snapshot \u003d snapshotsByNames.remove(i);\n      Snapshot prior \u003d Snapshot.findLatestSnapshot(this, snapshot);\n      try {\n        Quota.Counts counts \u003d cleanSubtree(snapshot, prior, collectedBlocks);\n        INodeDirectory parent \u003d getParent();\n        if (parent !\u003d null) {\n          parent.addSpaceConsumed(-counts.get(Quota.NAMESPACE),\n              -counts.get(Quota.DISKSPACE), true);\n        }\n      } catch(QuotaExceededException e) {\n        LOG.error(\"BUG: removeSnapshot increases namespace usage.\", e);\n      }\n      return snapshot;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/INodeDirectorySnapshottable.java",
      "extendedDetails": {}
    },
    "719c313be12be3afd83b97a5a13dd0585c7f5819": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4144. Create test for all snapshot-related metrics. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1455805 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/03/13 11:05 PM",
      "commitName": "719c313be12be3afd83b97a5a13dd0585c7f5819",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "11/03/13 7:41 PM",
      "commitNameOld": "3b3ea5c4220e674064c7603a449f63904c10bac1",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 1.14,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   Snapshot removeSnapshot(String snapshotName,\n       BlocksMapUpdateInfo collectedBlocks) throws SnapshotException {\n     final int i \u003d searchSnapshot(DFSUtil.string2Bytes(snapshotName));\n     if (i \u003c 0) {\n       throw new SnapshotException(\"Cannot delete snapshot \" + snapshotName\n           + \" from path \" + this.getFullPathName()\n           + \": the snapshot does not exist.\");\n     } else {\n       final Snapshot snapshot \u003d snapshotsByNames.remove(i);\n       Snapshot prior \u003d Snapshot.findLatestSnapshot(this, snapshot);\n       try {\n         Quota.Counts counts \u003d cleanSubtree(snapshot, prior, collectedBlocks);\n         INodeDirectory parent \u003d getParent();\n         if (parent !\u003d null) {\n-          parent.addSpaceConsumed(counts.get(Quota.NAMESPACE),\n-              counts.get(Quota.DISKSPACE));\n+          parent.addSpaceConsumed(-counts.get(Quota.NAMESPACE),\n+              -counts.get(Quota.DISKSPACE));\n         }\n       } catch(QuotaExceededException e) {\n         LOG.error(\"BUG: removeSnapshot increases namespace usage.\", e);\n       }\n       return snapshot;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  Snapshot removeSnapshot(String snapshotName,\n      BlocksMapUpdateInfo collectedBlocks) throws SnapshotException {\n    final int i \u003d searchSnapshot(DFSUtil.string2Bytes(snapshotName));\n    if (i \u003c 0) {\n      throw new SnapshotException(\"Cannot delete snapshot \" + snapshotName\n          + \" from path \" + this.getFullPathName()\n          + \": the snapshot does not exist.\");\n    } else {\n      final Snapshot snapshot \u003d snapshotsByNames.remove(i);\n      Snapshot prior \u003d Snapshot.findLatestSnapshot(this, snapshot);\n      try {\n        Quota.Counts counts \u003d cleanSubtree(snapshot, prior, collectedBlocks);\n        INodeDirectory parent \u003d getParent();\n        if (parent !\u003d null) {\n          parent.addSpaceConsumed(-counts.get(Quota.NAMESPACE),\n              -counts.get(Quota.DISKSPACE));\n        }\n      } catch(QuotaExceededException e) {\n        LOG.error(\"BUG: removeSnapshot increases namespace usage.\", e);\n      }\n      return snapshot;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/INodeDirectorySnapshottable.java",
      "extendedDetails": {}
    },
    "3b3ea5c4220e674064c7603a449f63904c10bac1": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4563. Update namespace/diskspace usage after deleting snapshots.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1455396 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/03/13 7:41 PM",
      "commitName": "3b3ea5c4220e674064c7603a449f63904c10bac1",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "10/03/13 8:45 PM",
      "commitNameOld": "43f8d0b9c9e209eb503451613c2f8d3fed07c203",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 0.96,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,23 @@\n   Snapshot removeSnapshot(String snapshotName,\n       BlocksMapUpdateInfo collectedBlocks) throws SnapshotException {\n     final int i \u003d searchSnapshot(DFSUtil.string2Bytes(snapshotName));\n     if (i \u003c 0) {\n       throw new SnapshotException(\"Cannot delete snapshot \" + snapshotName\n           + \" from path \" + this.getFullPathName()\n           + \": the snapshot does not exist.\");\n     } else {\n       final Snapshot snapshot \u003d snapshotsByNames.remove(i);\n       Snapshot prior \u003d Snapshot.findLatestSnapshot(this, snapshot);\n       try {\n-        cleanSubtree(snapshot, prior, collectedBlocks);\n-      } catch(NSQuotaExceededException e) {\n+        Quota.Counts counts \u003d cleanSubtree(snapshot, prior, collectedBlocks);\n+        INodeDirectory parent \u003d getParent();\n+        if (parent !\u003d null) {\n+          parent.addSpaceConsumed(counts.get(Quota.NAMESPACE),\n+              counts.get(Quota.DISKSPACE));\n+        }\n+      } catch(QuotaExceededException e) {\n         LOG.error(\"BUG: removeSnapshot increases namespace usage.\", e);\n       }\n       return snapshot;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  Snapshot removeSnapshot(String snapshotName,\n      BlocksMapUpdateInfo collectedBlocks) throws SnapshotException {\n    final int i \u003d searchSnapshot(DFSUtil.string2Bytes(snapshotName));\n    if (i \u003c 0) {\n      throw new SnapshotException(\"Cannot delete snapshot \" + snapshotName\n          + \" from path \" + this.getFullPathName()\n          + \": the snapshot does not exist.\");\n    } else {\n      final Snapshot snapshot \u003d snapshotsByNames.remove(i);\n      Snapshot prior \u003d Snapshot.findLatestSnapshot(this, snapshot);\n      try {\n        Quota.Counts counts \u003d cleanSubtree(snapshot, prior, collectedBlocks);\n        INodeDirectory parent \u003d getParent();\n        if (parent !\u003d null) {\n          parent.addSpaceConsumed(counts.get(Quota.NAMESPACE),\n              counts.get(Quota.DISKSPACE));\n        }\n      } catch(QuotaExceededException e) {\n        LOG.error(\"BUG: removeSnapshot increases namespace usage.\", e);\n      }\n      return snapshot;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/INodeDirectorySnapshottable.java",
      "extendedDetails": {}
    },
    "c7cf85ccb4ff2f58839e113f1baf903a468b606d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4507. Update quota verification for snapshots.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1451081 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/02/13 7:08 PM",
      "commitName": "c7cf85ccb4ff2f58839e113f1baf903a468b606d",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "25/02/13 11:49 AM",
      "commitNameOld": "5ddbbd9d65b01389f44d6c0bec6f33833e603e18",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 2.3,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,18 @@\n   Snapshot removeSnapshot(String snapshotName,\n       BlocksMapUpdateInfo collectedBlocks) throws SnapshotException {\n     final int i \u003d searchSnapshot(DFSUtil.string2Bytes(snapshotName));\n     if (i \u003c 0) {\n       throw new SnapshotException(\"Cannot delete snapshot \" + snapshotName\n           + \" from path \" + this.getFullPathName()\n           + \": the snapshot does not exist.\");\n     } else {\n       final Snapshot snapshot \u003d snapshotsByNames.remove(i);\n       Snapshot prior \u003d Snapshot.findLatestSnapshot(this, snapshot);\n-      cleanSubtree(snapshot, prior, collectedBlocks);\n+      try {\n+        cleanSubtree(snapshot, prior, collectedBlocks);\n+      } catch(NSQuotaExceededException e) {\n+        LOG.error(\"BUG: removeSnapshot increases namespace usage.\", e);\n+      }\n       return snapshot;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  Snapshot removeSnapshot(String snapshotName,\n      BlocksMapUpdateInfo collectedBlocks) throws SnapshotException {\n    final int i \u003d searchSnapshot(DFSUtil.string2Bytes(snapshotName));\n    if (i \u003c 0) {\n      throw new SnapshotException(\"Cannot delete snapshot \" + snapshotName\n          + \" from path \" + this.getFullPathName()\n          + \": the snapshot does not exist.\");\n    } else {\n      final Snapshot snapshot \u003d snapshotsByNames.remove(i);\n      Snapshot prior \u003d Snapshot.findLatestSnapshot(this, snapshot);\n      try {\n        cleanSubtree(snapshot, prior, collectedBlocks);\n      } catch(NSQuotaExceededException e) {\n        LOG.error(\"BUG: removeSnapshot increases namespace usage.\", e);\n      }\n      return snapshot;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/INodeDirectorySnapshottable.java",
      "extendedDetails": {}
    },
    "f29fa9e820e25730d00a1a00c51c6f11028fb5a7": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4499. Fix file/directory/snapshot deletion for file diff.  Contributed by Jing Zhao\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1448504 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "20/02/13 7:27 PM",
      "commitName": "f29fa9e820e25730d00a1a00c51c6f11028fb5a7",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "20/02/13 12:02 PM",
      "commitNameOld": "fac3883188d9c4f1fe188d98f88cb3c83b243bbd",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 0.31,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,14 @@\n   Snapshot removeSnapshot(String snapshotName,\n       BlocksMapUpdateInfo collectedBlocks) throws SnapshotException {\n     final int i \u003d searchSnapshot(DFSUtil.string2Bytes(snapshotName));\n     if (i \u003c 0) {\n       throw new SnapshotException(\"Cannot delete snapshot \" + snapshotName\n           + \" from path \" + this.getFullPathName()\n           + \": the snapshot does not exist.\");\n     } else {\n       final Snapshot snapshot \u003d snapshotsByNames.remove(i);\n-      destroySubtreeAndCollectBlocks(snapshot, collectedBlocks);\n+      Snapshot prior \u003d Snapshot.findLatestSnapshot(this, snapshot);\n+      cleanSubtree(snapshot, prior, collectedBlocks);\n       return snapshot;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  Snapshot removeSnapshot(String snapshotName,\n      BlocksMapUpdateInfo collectedBlocks) throws SnapshotException {\n    final int i \u003d searchSnapshot(DFSUtil.string2Bytes(snapshotName));\n    if (i \u003c 0) {\n      throw new SnapshotException(\"Cannot delete snapshot \" + snapshotName\n          + \" from path \" + this.getFullPathName()\n          + \": the snapshot does not exist.\");\n    } else {\n      final Snapshot snapshot \u003d snapshotsByNames.remove(i);\n      Snapshot prior \u003d Snapshot.findLatestSnapshot(this, snapshot);\n      cleanSubtree(snapshot, prior, collectedBlocks);\n      return snapshot;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/INodeDirectorySnapshottable.java",
      "extendedDetails": {}
    },
    "e7db60fbfcc222b32d610ffd912683494674ad2f": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4464. Combine collectSubtreeBlocksAndClear with deleteDiffsForSnapshot and rename it to destroySubtreeAndCollectBlocks.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1441680 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "01/02/13 5:53 PM",
      "commitName": "e7db60fbfcc222b32d610ffd912683494674ad2f",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "29/01/13 3:25 PM",
      "commitNameOld": "6f4fe09687f9d13e3e552eaaa012399a5bf246d3",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 3.1,
      "commitsBetweenForRepo": 16,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n   Snapshot removeSnapshot(String snapshotName,\n       BlocksMapUpdateInfo collectedBlocks) throws SnapshotException {\n-    final int indexOfOld \u003d searchSnapshot(DFSUtil.string2Bytes(snapshotName));\n-    if (indexOfOld \u003c 0) {\n+    final int i \u003d searchSnapshot(DFSUtil.string2Bytes(snapshotName));\n+    if (i \u003c 0) {\n       throw new SnapshotException(\"Cannot delete snapshot \" + snapshotName\n           + \" from path \" + this.getFullPathName()\n           + \": the snapshot does not exist.\");\n     } else {\n-      Snapshot snapshot \u003d snapshotsByNames.remove(indexOfOld);\n-      deleteDiffsForSnapshot(snapshot, this, collectedBlocks);\n+      final Snapshot snapshot \u003d snapshotsByNames.remove(i);\n+      destroySubtreeAndCollectBlocks(snapshot, collectedBlocks);\n       return snapshot;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  Snapshot removeSnapshot(String snapshotName,\n      BlocksMapUpdateInfo collectedBlocks) throws SnapshotException {\n    final int i \u003d searchSnapshot(DFSUtil.string2Bytes(snapshotName));\n    if (i \u003c 0) {\n      throw new SnapshotException(\"Cannot delete snapshot \" + snapshotName\n          + \" from path \" + this.getFullPathName()\n          + \": the snapshot does not exist.\");\n    } else {\n      final Snapshot snapshot \u003d snapshotsByNames.remove(i);\n      destroySubtreeAndCollectBlocks(snapshot, collectedBlocks);\n      return snapshot;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/INodeDirectorySnapshottable.java",
      "extendedDetails": {}
    },
    "2d4097840c29116e9b000c158ce841d27863ad6e": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-4244. Support snapshot deletion.  Contributed by Jing Zhao\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1430953 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/01/13 8:44 AM",
      "commitName": "2d4097840c29116e9b000c158ce841d27863ad6e",
      "commitAuthor": "Tsz-wo Sze",
      "diff": "@@ -0,0 +1,13 @@\n+  Snapshot removeSnapshot(String snapshotName,\n+      BlocksMapUpdateInfo collectedBlocks) throws SnapshotException {\n+    final int indexOfOld \u003d searchSnapshot(DFSUtil.string2Bytes(snapshotName));\n+    if (indexOfOld \u003c 0) {\n+      throw new SnapshotException(\"Cannot delete snapshot \" + snapshotName\n+          + \" from path \" + this.getFullPathName()\n+          + \": the snapshot does not exist.\");\n+    } else {\n+      Snapshot snapshot \u003d snapshotsByNames.remove(indexOfOld);\n+      deleteDiffsForSnapshot(snapshot, this, collectedBlocks);\n+      return snapshot;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  Snapshot removeSnapshot(String snapshotName,\n      BlocksMapUpdateInfo collectedBlocks) throws SnapshotException {\n    final int indexOfOld \u003d searchSnapshot(DFSUtil.string2Bytes(snapshotName));\n    if (indexOfOld \u003c 0) {\n      throw new SnapshotException(\"Cannot delete snapshot \" + snapshotName\n          + \" from path \" + this.getFullPathName()\n          + \": the snapshot does not exist.\");\n    } else {\n      Snapshot snapshot \u003d snapshotsByNames.remove(indexOfOld);\n      deleteDiffsForSnapshot(snapshot, this, collectedBlocks);\n      return snapshot;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/INodeDirectorySnapshottable.java"
    }
  }
}