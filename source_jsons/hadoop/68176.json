{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SwiftNativeFileSystem.java",
  "functionName": "createNonRecursive",
  "functionId": "createNonRecursive___path-Path__permission-FsPermission__flags-EnumSet__CreateFlag____bufferSize-int__replication-short__blockSize-long__progress-Progressable",
  "sourceFilePath": "hadoop-tools/hadoop-openstack/src/main/java/org/apache/hadoop/fs/swift/snative/SwiftNativeFileSystem.java",
  "functionStartLine": 742,
  "functionEndLine": 759,
  "numCommitsSeen": 9,
  "timeTaken": 2100,
  "changeHistory": [
    "d4d4c37810d92c927df91d78440c3ad73f46e8a0"
  ],
  "changeHistoryShort": {
    "d4d4c37810d92c927df91d78440c3ad73f46e8a0": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d4d4c37810d92c927df91d78440c3ad73f46e8a0": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-14630 Contract Tests to verify create, mkdirs and rename under a file is forbidden\n\nContributed by Steve Loughran.\n\nNot all stores do complete validation here; in particular the S3A\nConnector does not: checking up the entire directory tree to see if a path matches\nis a file significantly slows things down.\n\nThis check does take place in S3A mkdirs(), which walks backwards up the list of\nparent paths until it finds a directory (success) or a file (failure).\nIn practice production applications invariably create destination directories\nbefore writing 1+ file into them -restricting check purely to the mkdirs()\ncall deliver significant speed up while implicitly including the checks.\n\nChange-Id: I2c9df748e92b5655232e7d888d896f1868806eb0\n",
      "commitDate": "09/03/20 7:44 AM",
      "commitName": "d4d4c37810d92c927df91d78440c3ad73f46e8a0",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,18 @@\n+  public FSDataOutputStream createNonRecursive(Path path,\n+      FsPermission permission,\n+      EnumSet\u003cCreateFlag\u003e flags,\n+      int bufferSize,\n+      short replication,\n+      long blockSize,\n+      Progressable progress) throws IOException {\n+    Path parent \u003d path.getParent();\n+    if (parent !\u003d null) {\n+      // expect this to raise an exception if there is no parent\n+      if (!getFileStatus(parent).isDirectory()) {\n+        throw new FileAlreadyExistsException(\"Not a directory: \" + parent);\n+      }\n+    }\n+    return create(path, permission,\n+        flags.contains(CreateFlag.OVERWRITE), bufferSize,\n+        replication, blockSize, progress);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public FSDataOutputStream createNonRecursive(Path path,\n      FsPermission permission,\n      EnumSet\u003cCreateFlag\u003e flags,\n      int bufferSize,\n      short replication,\n      long blockSize,\n      Progressable progress) throws IOException {\n    Path parent \u003d path.getParent();\n    if (parent !\u003d null) {\n      // expect this to raise an exception if there is no parent\n      if (!getFileStatus(parent).isDirectory()) {\n        throw new FileAlreadyExistsException(\"Not a directory: \" + parent);\n      }\n    }\n    return create(path, permission,\n        flags.contains(CreateFlag.OVERWRITE), bufferSize,\n        replication, blockSize, progress);\n  }",
      "path": "hadoop-tools/hadoop-openstack/src/main/java/org/apache/hadoop/fs/swift/snative/SwiftNativeFileSystem.java"
    }
  }
}