{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DFSClient.java",
  "functionName": "renewLease",
  "functionId": "renewLease",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
  "functionStartLine": 585,
  "functionEndLine": 607,
  "numCommitsSeen": 340,
  "timeTaken": 12051,
  "changeHistory": [
    "9b8a78d97bfd825ce840c6033371c7f10e49a5b8",
    "bf37d3d80e5179dea27e5bd5aea804a38aa9934c",
    "692b1a45ce46a76586c9c375854940454eeca306",
    "6ae2a0d048e133b43249c248a75a4d77d9abb80d",
    "d3d019c337ecc10e9c6bbefc3a97c6cd1f5283c3",
    "75ead273bea8a7dad61c4f99c3a16cab2697c498",
    "602f71a8daa0dc98d0183028935e3b10460e28a5",
    "a9974c791aef8dae9435e230021b597927992654",
    "4a5ba3b7bd2360fd9605863630b477d362874e1e",
    "0ee71adeb4b2a91d74110c0f0c1df63a1cf36014",
    "520a39ac2daf86c0d67fff1b67f5f8d63e65114c",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "9b8a78d97bfd825ce840c6033371c7f10e49a5b8": "Ybodychange",
    "bf37d3d80e5179dea27e5bd5aea804a38aa9934c": "Yfilerename",
    "692b1a45ce46a76586c9c375854940454eeca306": "Ybodychange",
    "6ae2a0d048e133b43249c248a75a4d77d9abb80d": "Ybodychange",
    "d3d019c337ecc10e9c6bbefc3a97c6cd1f5283c3": "Ymodifierchange",
    "75ead273bea8a7dad61c4f99c3a16cab2697c498": "Ybodychange",
    "602f71a8daa0dc98d0183028935e3b10460e28a5": "Ybodychange",
    "a9974c791aef8dae9435e230021b597927992654": "Ybodychange",
    "4a5ba3b7bd2360fd9605863630b477d362874e1e": "Ybodychange",
    "0ee71adeb4b2a91d74110c0f0c1df63a1cf36014": "Ybodychange",
    "520a39ac2daf86c0d67fff1b67f5f8d63e65114c": "Ymultichange(Yreturntypechange,Ybodychange)",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9b8a78d97bfd825ce840c6033371c7f10e49a5b8": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14758. Make lease hard limit configurable and reduce the default.\nContributed by hemanthboyina.\n",
      "commitDate": "11/02/20 10:40 AM",
      "commitName": "9b8a78d97bfd825ce840c6033371c7f10e49a5b8",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "24/01/20 7:15 AM",
      "commitNameOld": "d10f77e3c91225f86ed9c0f0e6a9adf2e1434674",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 18.14,
      "commitsBetweenForRepo": 49,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   public boolean renewLease() throws IOException {\n     if (clientRunning \u0026\u0026 !isFilesBeingWrittenEmpty()) {\n       try {\n         namenode.renewLease(clientName);\n         updateLastLeaseRenewal();\n         return true;\n       } catch (IOException e) {\n         // Abort if the lease has already expired.\n         final long elapsed \u003d Time.monotonicNow() - getLastLeaseRenewal();\n-        if (elapsed \u003e HdfsConstants.LEASE_HARDLIMIT_PERIOD) {\n+        if (elapsed \u003e dfsClientConf.getleaseHardLimitPeriod()) {\n           LOG.warn(\"Failed to renew lease for \" + clientName + \" for \"\n               + (elapsed/1000) + \" seconds (\u003e\u003d hard-limit \u003d\"\n-              + (HdfsConstants.LEASE_HARDLIMIT_PERIOD / 1000) + \" seconds.) \"\n+              + (dfsClientConf.getleaseHardLimitPeriod() / 1000) + \" seconds.) \"\n               + \"Closing all files being written ...\", e);\n           closeAllFilesBeingWritten(true);\n         } else {\n           // Let the lease renewer handle it and retry.\n           throw e;\n         }\n       }\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean renewLease() throws IOException {\n    if (clientRunning \u0026\u0026 !isFilesBeingWrittenEmpty()) {\n      try {\n        namenode.renewLease(clientName);\n        updateLastLeaseRenewal();\n        return true;\n      } catch (IOException e) {\n        // Abort if the lease has already expired.\n        final long elapsed \u003d Time.monotonicNow() - getLastLeaseRenewal();\n        if (elapsed \u003e dfsClientConf.getleaseHardLimitPeriod()) {\n          LOG.warn(\"Failed to renew lease for \" + clientName + \" for \"\n              + (elapsed/1000) + \" seconds (\u003e\u003d hard-limit \u003d\"\n              + (dfsClientConf.getleaseHardLimitPeriod() / 1000) + \" seconds.) \"\n              + \"Closing all files being written ...\", e);\n          closeAllFilesBeingWritten(true);\n        } else {\n          // Let the lease renewer handle it and retry.\n          throw e;\n        }\n      }\n    }\n    return false;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
      "extendedDetails": {}
    },
    "bf37d3d80e5179dea27e5bd5aea804a38aa9934c": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-8053. Move DFSIn/OutputStream and related classes to hadoop-hdfs-client. Contributed by Mingliang Liu.\n",
      "commitDate": "26/09/15 11:08 AM",
      "commitName": "bf37d3d80e5179dea27e5bd5aea804a38aa9934c",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "26/09/15 9:06 AM",
      "commitNameOld": "861b52db242f238d7e36ad75c158025be959a696",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 0.08,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public boolean renewLease() throws IOException {\n    if (clientRunning \u0026\u0026 !isFilesBeingWrittenEmpty()) {\n      try {\n        namenode.renewLease(clientName);\n        updateLastLeaseRenewal();\n        return true;\n      } catch (IOException e) {\n        // Abort if the lease has already expired. \n        final long elapsed \u003d Time.monotonicNow() - getLastLeaseRenewal();\n        if (elapsed \u003e HdfsConstants.LEASE_HARDLIMIT_PERIOD) {\n          LOG.warn(\"Failed to renew lease for \" + clientName + \" for \"\n              + (elapsed/1000) + \" seconds (\u003e\u003d hard-limit \u003d\"\n              + (HdfsConstants.LEASE_HARDLIMIT_PERIOD / 1000) + \" seconds.) \"\n              + \"Closing all files being written ...\", e);\n          closeAllFilesBeingWritten(true);\n        } else {\n          // Let the lease renewer handle it and retry.\n          throw e;\n        }\n      }\n    }\n    return false;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSClient.java"
      }
    },
    "692b1a45ce46a76586c9c375854940454eeca306": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9134. Move LEASE_{SOFTLIMIT,HARDLIMIT}_PERIOD constants from HdfsServerConstants to HdfsConstants. Contributed by Mingliang Liu.\n",
      "commitDate": "24/09/15 8:19 PM",
      "commitName": "692b1a45ce46a76586c9c375854940454eeca306",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "24/09/15 5:13 AM",
      "commitNameOld": "e52bc697f8f9c255dfc4d01b71272931153721c9",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 0.63,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   public boolean renewLease() throws IOException {\n     if (clientRunning \u0026\u0026 !isFilesBeingWrittenEmpty()) {\n       try {\n         namenode.renewLease(clientName);\n         updateLastLeaseRenewal();\n         return true;\n       } catch (IOException e) {\n         // Abort if the lease has already expired. \n         final long elapsed \u003d Time.monotonicNow() - getLastLeaseRenewal();\n-        if (elapsed \u003e HdfsServerConstants.LEASE_HARDLIMIT_PERIOD) {\n+        if (elapsed \u003e HdfsConstants.LEASE_HARDLIMIT_PERIOD) {\n           LOG.warn(\"Failed to renew lease for \" + clientName + \" for \"\n               + (elapsed/1000) + \" seconds (\u003e\u003d hard-limit \u003d\"\n-              + (HdfsServerConstants.LEASE_HARDLIMIT_PERIOD/1000) + \" seconds.) \"\n+              + (HdfsConstants.LEASE_HARDLIMIT_PERIOD / 1000) + \" seconds.) \"\n               + \"Closing all files being written ...\", e);\n           closeAllFilesBeingWritten(true);\n         } else {\n           // Let the lease renewer handle it and retry.\n           throw e;\n         }\n       }\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean renewLease() throws IOException {\n    if (clientRunning \u0026\u0026 !isFilesBeingWrittenEmpty()) {\n      try {\n        namenode.renewLease(clientName);\n        updateLastLeaseRenewal();\n        return true;\n      } catch (IOException e) {\n        // Abort if the lease has already expired. \n        final long elapsed \u003d Time.monotonicNow() - getLastLeaseRenewal();\n        if (elapsed \u003e HdfsConstants.LEASE_HARDLIMIT_PERIOD) {\n          LOG.warn(\"Failed to renew lease for \" + clientName + \" for \"\n              + (elapsed/1000) + \" seconds (\u003e\u003d hard-limit \u003d\"\n              + (HdfsConstants.LEASE_HARDLIMIT_PERIOD / 1000) + \" seconds.) \"\n              + \"Closing all files being written ...\", e);\n          closeAllFilesBeingWritten(true);\n        } else {\n          // Let the lease renewer handle it and retry.\n          throw e;\n        }\n      }\n    }\n    return false;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
      "extendedDetails": {}
    },
    "6ae2a0d048e133b43249c248a75a4d77d9abb80d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8249. Separate HdfsConstants into the client and the server side class. Contributed by Haohui Mai.\n",
      "commitDate": "02/05/15 10:03 AM",
      "commitName": "6ae2a0d048e133b43249c248a75a4d77d9abb80d",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "01/05/15 3:12 PM",
      "commitNameOld": "d3d019c337ecc10e9c6bbefc3a97c6cd1f5283c3",
      "commitAuthorOld": "Tsz-Wo Nicholas Sze",
      "daysBetweenCommits": 0.79,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   public boolean renewLease() throws IOException {\n     if (clientRunning \u0026\u0026 !isFilesBeingWrittenEmpty()) {\n       try {\n         namenode.renewLease(clientName);\n         updateLastLeaseRenewal();\n         return true;\n       } catch (IOException e) {\n         // Abort if the lease has already expired. \n         final long elapsed \u003d Time.monotonicNow() - getLastLeaseRenewal();\n-        if (elapsed \u003e HdfsConstants.LEASE_HARDLIMIT_PERIOD) {\n+        if (elapsed \u003e HdfsServerConstants.LEASE_HARDLIMIT_PERIOD) {\n           LOG.warn(\"Failed to renew lease for \" + clientName + \" for \"\n               + (elapsed/1000) + \" seconds (\u003e\u003d hard-limit \u003d\"\n-              + (HdfsConstants.LEASE_HARDLIMIT_PERIOD/1000) + \" seconds.) \"\n+              + (HdfsServerConstants.LEASE_HARDLIMIT_PERIOD/1000) + \" seconds.) \"\n               + \"Closing all files being written ...\", e);\n           closeAllFilesBeingWritten(true);\n         } else {\n           // Let the lease renewer handle it and retry.\n           throw e;\n         }\n       }\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean renewLease() throws IOException {\n    if (clientRunning \u0026\u0026 !isFilesBeingWrittenEmpty()) {\n      try {\n        namenode.renewLease(clientName);\n        updateLastLeaseRenewal();\n        return true;\n      } catch (IOException e) {\n        // Abort if the lease has already expired. \n        final long elapsed \u003d Time.monotonicNow() - getLastLeaseRenewal();\n        if (elapsed \u003e HdfsServerConstants.LEASE_HARDLIMIT_PERIOD) {\n          LOG.warn(\"Failed to renew lease for \" + clientName + \" for \"\n              + (elapsed/1000) + \" seconds (\u003e\u003d hard-limit \u003d\"\n              + (HdfsServerConstants.LEASE_HARDLIMIT_PERIOD/1000) + \" seconds.) \"\n              + \"Closing all files being written ...\", e);\n          closeAllFilesBeingWritten(true);\n        } else {\n          // Let the lease renewer handle it and retry.\n          throw e;\n        }\n      }\n    }\n    return false;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
      "extendedDetails": {}
    },
    "d3d019c337ecc10e9c6bbefc3a97c6cd1f5283c3": {
      "type": "Ymodifierchange",
      "commitMessage": "HDFS-8086. Move LeaseRenewer to the hdfs.client.impl package.  Contributed by Takanobu\n",
      "commitDate": "01/05/15 3:12 PM",
      "commitName": "d3d019c337ecc10e9c6bbefc3a97c6cd1f5283c3",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "commitDateOld": "01/05/15 11:19 AM",
      "commitNameOld": "b82567d45507c50d2f28eff4bbdf3b1a69d4bf1b",
      "commitAuthorOld": "Colin Patrick Mccabe",
      "daysBetweenCommits": 0.16,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n-  boolean renewLease() throws IOException {\n+  public boolean renewLease() throws IOException {\n     if (clientRunning \u0026\u0026 !isFilesBeingWrittenEmpty()) {\n       try {\n         namenode.renewLease(clientName);\n         updateLastLeaseRenewal();\n         return true;\n       } catch (IOException e) {\n         // Abort if the lease has already expired. \n         final long elapsed \u003d Time.monotonicNow() - getLastLeaseRenewal();\n         if (elapsed \u003e HdfsConstants.LEASE_HARDLIMIT_PERIOD) {\n           LOG.warn(\"Failed to renew lease for \" + clientName + \" for \"\n               + (elapsed/1000) + \" seconds (\u003e\u003d hard-limit \u003d\"\n               + (HdfsConstants.LEASE_HARDLIMIT_PERIOD/1000) + \" seconds.) \"\n               + \"Closing all files being written ...\", e);\n           closeAllFilesBeingWritten(true);\n         } else {\n           // Let the lease renewer handle it and retry.\n           throw e;\n         }\n       }\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean renewLease() throws IOException {\n    if (clientRunning \u0026\u0026 !isFilesBeingWrittenEmpty()) {\n      try {\n        namenode.renewLease(clientName);\n        updateLastLeaseRenewal();\n        return true;\n      } catch (IOException e) {\n        // Abort if the lease has already expired. \n        final long elapsed \u003d Time.monotonicNow() - getLastLeaseRenewal();\n        if (elapsed \u003e HdfsConstants.LEASE_HARDLIMIT_PERIOD) {\n          LOG.warn(\"Failed to renew lease for \" + clientName + \" for \"\n              + (elapsed/1000) + \" seconds (\u003e\u003d hard-limit \u003d\"\n              + (HdfsConstants.LEASE_HARDLIMIT_PERIOD/1000) + \" seconds.) \"\n              + \"Closing all files being written ...\", e);\n          closeAllFilesBeingWritten(true);\n        } else {\n          // Let the lease renewer handle it and retry.\n          throw e;\n        }\n      }\n    }\n    return false;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
      "extendedDetails": {
        "oldValue": "[]",
        "newValue": "[public]"
      }
    },
    "75ead273bea8a7dad61c4f99c3a16cab2697c498": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6841. Use Time.monotonicNow() wherever applicable instead of Time.now(). Contributed by Vinayakumar B\n",
      "commitDate": "20/03/15 12:02 PM",
      "commitName": "75ead273bea8a7dad61c4f99c3a16cab2697c498",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "20/03/15 9:12 AM",
      "commitNameOld": "15612313f578a5115f8d03885e9b0c8c376ed56e",
      "commitAuthorOld": "Yongjun Zhang",
      "daysBetweenCommits": 0.12,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   boolean renewLease() throws IOException {\n     if (clientRunning \u0026\u0026 !isFilesBeingWrittenEmpty()) {\n       try {\n         namenode.renewLease(clientName);\n         updateLastLeaseRenewal();\n         return true;\n       } catch (IOException e) {\n         // Abort if the lease has already expired. \n-        final long elapsed \u003d Time.now() - getLastLeaseRenewal();\n+        final long elapsed \u003d Time.monotonicNow() - getLastLeaseRenewal();\n         if (elapsed \u003e HdfsConstants.LEASE_HARDLIMIT_PERIOD) {\n           LOG.warn(\"Failed to renew lease for \" + clientName + \" for \"\n               + (elapsed/1000) + \" seconds (\u003e\u003d hard-limit \u003d\"\n               + (HdfsConstants.LEASE_HARDLIMIT_PERIOD/1000) + \" seconds.) \"\n               + \"Closing all files being written ...\", e);\n           closeAllFilesBeingWritten(true);\n         } else {\n           // Let the lease renewer handle it and retry.\n           throw e;\n         }\n       }\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  boolean renewLease() throws IOException {\n    if (clientRunning \u0026\u0026 !isFilesBeingWrittenEmpty()) {\n      try {\n        namenode.renewLease(clientName);\n        updateLastLeaseRenewal();\n        return true;\n      } catch (IOException e) {\n        // Abort if the lease has already expired. \n        final long elapsed \u003d Time.monotonicNow() - getLastLeaseRenewal();\n        if (elapsed \u003e HdfsConstants.LEASE_HARDLIMIT_PERIOD) {\n          LOG.warn(\"Failed to renew lease for \" + clientName + \" for \"\n              + (elapsed/1000) + \" seconds (\u003e\u003d hard-limit \u003d\"\n              + (HdfsConstants.LEASE_HARDLIMIT_PERIOD/1000) + \" seconds.) \"\n              + \"Closing all files being written ...\", e);\n          closeAllFilesBeingWritten(true);\n        } else {\n          // Let the lease renewer handle it and retry.\n          throw e;\n        }\n      }\n    }\n    return false;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
      "extendedDetails": {}
    },
    "602f71a8daa0dc98d0183028935e3b10460e28a5": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5800. Fix a typo in DFSClient.renewLease().  Contributed by Kousuke Saruta\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1559701 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "20/01/14 6:08 AM",
      "commitName": "602f71a8daa0dc98d0183028935e3b10460e28a5",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "18/12/13 9:21 PM",
      "commitNameOld": "b0947f93056939d419882c13d4acf3e935a66e62",
      "commitAuthorOld": "Michael Stack",
      "daysBetweenCommits": 32.37,
      "commitsBetweenForRepo": 126,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   boolean renewLease() throws IOException {\n     if (clientRunning \u0026\u0026 !isFilesBeingWrittenEmpty()) {\n       try {\n         namenode.renewLease(clientName);\n         updateLastLeaseRenewal();\n         return true;\n       } catch (IOException e) {\n         // Abort if the lease has already expired. \n         final long elapsed \u003d Time.now() - getLastLeaseRenewal();\n         if (elapsed \u003e HdfsConstants.LEASE_HARDLIMIT_PERIOD) {\n           LOG.warn(\"Failed to renew lease for \" + clientName + \" for \"\n-              + (elapsed/1000) + \" seconds (\u003e\u003d soft-limit \u003d\"\n+              + (elapsed/1000) + \" seconds (\u003e\u003d hard-limit \u003d\"\n               + (HdfsConstants.LEASE_HARDLIMIT_PERIOD/1000) + \" seconds.) \"\n               + \"Closing all files being written ...\", e);\n           closeAllFilesBeingWritten(true);\n         } else {\n           // Let the lease renewer handle it and retry.\n           throw e;\n         }\n       }\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  boolean renewLease() throws IOException {\n    if (clientRunning \u0026\u0026 !isFilesBeingWrittenEmpty()) {\n      try {\n        namenode.renewLease(clientName);\n        updateLastLeaseRenewal();\n        return true;\n      } catch (IOException e) {\n        // Abort if the lease has already expired. \n        final long elapsed \u003d Time.now() - getLastLeaseRenewal();\n        if (elapsed \u003e HdfsConstants.LEASE_HARDLIMIT_PERIOD) {\n          LOG.warn(\"Failed to renew lease for \" + clientName + \" for \"\n              + (elapsed/1000) + \" seconds (\u003e\u003d hard-limit \u003d\"\n              + (HdfsConstants.LEASE_HARDLIMIT_PERIOD/1000) + \" seconds.) \"\n              + \"Closing all files being written ...\", e);\n          closeAllFilesBeingWritten(true);\n        } else {\n          // Let the lease renewer handle it and retry.\n          throw e;\n        }\n      }\n    }\n    return false;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
      "extendedDetails": {}
    },
    "a9974c791aef8dae9435e230021b597927992654": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4495. Allow client-side lease renewal to be retried beyond soft-limit.  Contributed by Kihwal Lee\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1445965 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/02/13 2:51 PM",
      "commitName": "a9974c791aef8dae9435e230021b597927992654",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "21/01/13 6:59 PM",
      "commitNameOld": "cfae13306ac0fb3f3c139d5ac511bf78cede1b77",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 22.83,
      "commitsBetweenForRepo": 101,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   boolean renewLease() throws IOException {\n     if (clientRunning \u0026\u0026 !isFilesBeingWrittenEmpty()) {\n       try {\n         namenode.renewLease(clientName);\n         updateLastLeaseRenewal();\n         return true;\n       } catch (IOException e) {\n         // Abort if the lease has already expired. \n         final long elapsed \u003d Time.now() - getLastLeaseRenewal();\n-        if (elapsed \u003e HdfsConstants.LEASE_SOFTLIMIT_PERIOD) {\n+        if (elapsed \u003e HdfsConstants.LEASE_HARDLIMIT_PERIOD) {\n           LOG.warn(\"Failed to renew lease for \" + clientName + \" for \"\n               + (elapsed/1000) + \" seconds (\u003e\u003d soft-limit \u003d\"\n-              + (HdfsConstants.LEASE_SOFTLIMIT_PERIOD/1000) + \" seconds.) \"\n+              + (HdfsConstants.LEASE_HARDLIMIT_PERIOD/1000) + \" seconds.) \"\n               + \"Closing all files being written ...\", e);\n           closeAllFilesBeingWritten(true);\n         } else {\n           // Let the lease renewer handle it and retry.\n           throw e;\n         }\n       }\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  boolean renewLease() throws IOException {\n    if (clientRunning \u0026\u0026 !isFilesBeingWrittenEmpty()) {\n      try {\n        namenode.renewLease(clientName);\n        updateLastLeaseRenewal();\n        return true;\n      } catch (IOException e) {\n        // Abort if the lease has already expired. \n        final long elapsed \u003d Time.now() - getLastLeaseRenewal();\n        if (elapsed \u003e HdfsConstants.LEASE_HARDLIMIT_PERIOD) {\n          LOG.warn(\"Failed to renew lease for \" + clientName + \" for \"\n              + (elapsed/1000) + \" seconds (\u003e\u003d soft-limit \u003d\"\n              + (HdfsConstants.LEASE_HARDLIMIT_PERIOD/1000) + \" seconds.) \"\n              + \"Closing all files being written ...\", e);\n          closeAllFilesBeingWritten(true);\n        } else {\n          // Let the lease renewer handle it and retry.\n          throw e;\n        }\n      }\n    }\n    return false;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
      "extendedDetails": {}
    },
    "4a5ba3b7bd2360fd9605863630b477d362874e1e": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3641. Move server Util time methods to common and use now instead of System#currentTimeMillis. Contributed by Eli Collins\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1360858 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/07/12 12:01 PM",
      "commitName": "4a5ba3b7bd2360fd9605863630b477d362874e1e",
      "commitAuthor": "Eli Collins",
      "commitDateOld": "06/07/12 11:59 AM",
      "commitNameOld": "fb95fce24056c0b0aa5b77683c684fe1b68c4f76",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 6.0,
      "commitsBetweenForRepo": 46,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   boolean renewLease() throws IOException {\n     if (clientRunning \u0026\u0026 !isFilesBeingWrittenEmpty()) {\n       try {\n         namenode.renewLease(clientName);\n         updateLastLeaseRenewal();\n         return true;\n       } catch (IOException e) {\n         // Abort if the lease has already expired. \n-        final long elapsed \u003d System.currentTimeMillis() - getLastLeaseRenewal();\n+        final long elapsed \u003d Time.now() - getLastLeaseRenewal();\n         if (elapsed \u003e HdfsConstants.LEASE_SOFTLIMIT_PERIOD) {\n           LOG.warn(\"Failed to renew lease for \" + clientName + \" for \"\n               + (elapsed/1000) + \" seconds (\u003e\u003d soft-limit \u003d\"\n               + (HdfsConstants.LEASE_SOFTLIMIT_PERIOD/1000) + \" seconds.) \"\n               + \"Closing all files being written ...\", e);\n           closeAllFilesBeingWritten(true);\n         } else {\n           // Let the lease renewer handle it and retry.\n           throw e;\n         }\n       }\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  boolean renewLease() throws IOException {\n    if (clientRunning \u0026\u0026 !isFilesBeingWrittenEmpty()) {\n      try {\n        namenode.renewLease(clientName);\n        updateLastLeaseRenewal();\n        return true;\n      } catch (IOException e) {\n        // Abort if the lease has already expired. \n        final long elapsed \u003d Time.now() - getLastLeaseRenewal();\n        if (elapsed \u003e HdfsConstants.LEASE_SOFTLIMIT_PERIOD) {\n          LOG.warn(\"Failed to renew lease for \" + clientName + \" for \"\n              + (elapsed/1000) + \" seconds (\u003e\u003d soft-limit \u003d\"\n              + (HdfsConstants.LEASE_SOFTLIMIT_PERIOD/1000) + \" seconds.) \"\n              + \"Closing all files being written ...\", e);\n          closeAllFilesBeingWritten(true);\n        } else {\n          // Let the lease renewer handle it and retry.\n          throw e;\n        }\n      }\n    }\n    return false;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
      "extendedDetails": {}
    },
    "0ee71adeb4b2a91d74110c0f0c1df63a1cf36014": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3032. Change DFSClient.renewLease() so that it only retries up to the lease soft-limit.  Contributed by Kihwal Lee \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1297328 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/03/12 6:42 PM",
      "commitName": "0ee71adeb4b2a91d74110c0f0c1df63a1cf36014",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "29/02/12 3:47 PM",
      "commitNameOld": "1ba357553aafe30ecf33b9c7863c44c0b8021e78",
      "commitAuthorOld": "",
      "daysBetweenCommits": 5.12,
      "commitsBetweenForRepo": 37,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,23 @@\n   boolean renewLease() throws IOException {\n     if (clientRunning \u0026\u0026 !isFilesBeingWrittenEmpty()) {\n-      namenode.renewLease(clientName);\n-      return true;\n+      try {\n+        namenode.renewLease(clientName);\n+        updateLastLeaseRenewal();\n+        return true;\n+      } catch (IOException e) {\n+        // Abort if the lease has already expired. \n+        final long elapsed \u003d System.currentTimeMillis() - getLastLeaseRenewal();\n+        if (elapsed \u003e HdfsConstants.LEASE_SOFTLIMIT_PERIOD) {\n+          LOG.warn(\"Failed to renew lease for \" + clientName + \" for \"\n+              + (elapsed/1000) + \" seconds (\u003e\u003d soft-limit \u003d\"\n+              + (HdfsConstants.LEASE_SOFTLIMIT_PERIOD/1000) + \" seconds.) \"\n+              + \"Closing all files being written ...\", e);\n+          closeAllFilesBeingWritten(true);\n+        } else {\n+          // Let the lease renewer handle it and retry.\n+          throw e;\n+        }\n+      }\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  boolean renewLease() throws IOException {\n    if (clientRunning \u0026\u0026 !isFilesBeingWrittenEmpty()) {\n      try {\n        namenode.renewLease(clientName);\n        updateLastLeaseRenewal();\n        return true;\n      } catch (IOException e) {\n        // Abort if the lease has already expired. \n        final long elapsed \u003d System.currentTimeMillis() - getLastLeaseRenewal();\n        if (elapsed \u003e HdfsConstants.LEASE_SOFTLIMIT_PERIOD) {\n          LOG.warn(\"Failed to renew lease for \" + clientName + \" for \"\n              + (elapsed/1000) + \" seconds (\u003e\u003d soft-limit \u003d\"\n              + (HdfsConstants.LEASE_SOFTLIMIT_PERIOD/1000) + \" seconds.) \"\n              + \"Closing all files being written ...\", e);\n          closeAllFilesBeingWritten(true);\n        } else {\n          // Let the lease renewer handle it and retry.\n          throw e;\n        }\n      }\n    }\n    return false;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
      "extendedDetails": {}
    },
    "520a39ac2daf86c0d67fff1b67f5f8d63e65114c": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-2810. Leases not getting renewed properly by clients. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1233794 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/01/12 11:26 PM",
      "commitName": "520a39ac2daf86c0d67fff1b67f5f8d63e65114c",
      "commitAuthor": "Todd Lipcon",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-2810. Leases not getting renewed properly by clients. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1233794 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "19/01/12 11:26 PM",
          "commitName": "520a39ac2daf86c0d67fff1b67f5f8d63e65114c",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "04/01/12 6:15 AM",
          "commitNameOld": "075122690c5c17ac443a8eb3fb7387001e4907c0",
          "commitAuthorOld": "Harsh J",
          "daysBetweenCommits": 15.72,
          "commitsBetweenForRepo": 76,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,5 +1,7 @@\n-  void renewLease() throws IOException {\n+  boolean renewLease() throws IOException {\n     if (clientRunning \u0026\u0026 !isFilesBeingWrittenEmpty()) {\n       namenode.renewLease(clientName);\n+      return true;\n     }\n+    return false;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  boolean renewLease() throws IOException {\n    if (clientRunning \u0026\u0026 !isFilesBeingWrittenEmpty()) {\n      namenode.renewLease(clientName);\n      return true;\n    }\n    return false;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
          "extendedDetails": {
            "oldValue": "void",
            "newValue": "boolean"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-2810. Leases not getting renewed properly by clients. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1233794 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "19/01/12 11:26 PM",
          "commitName": "520a39ac2daf86c0d67fff1b67f5f8d63e65114c",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "04/01/12 6:15 AM",
          "commitNameOld": "075122690c5c17ac443a8eb3fb7387001e4907c0",
          "commitAuthorOld": "Harsh J",
          "daysBetweenCommits": 15.72,
          "commitsBetweenForRepo": 76,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,5 +1,7 @@\n-  void renewLease() throws IOException {\n+  boolean renewLease() throws IOException {\n     if (clientRunning \u0026\u0026 !isFilesBeingWrittenEmpty()) {\n       namenode.renewLease(clientName);\n+      return true;\n     }\n+    return false;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  boolean renewLease() throws IOException {\n    if (clientRunning \u0026\u0026 !isFilesBeingWrittenEmpty()) {\n      namenode.renewLease(clientName);\n      return true;\n    }\n    return false;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
          "extendedDetails": {}
        }
      ]
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  void renewLease() throws IOException {\n    if (clientRunning \u0026\u0026 !isFilesBeingWrittenEmpty()) {\n      namenode.renewLease(clientName);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  void renewLease() throws IOException {\n    if (clientRunning \u0026\u0026 !isFilesBeingWrittenEmpty()) {\n      namenode.renewLease(clientName);\n    }\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/DFSClient.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,5 @@\n+  void renewLease() throws IOException {\n+    if (clientRunning \u0026\u0026 !isFilesBeingWrittenEmpty()) {\n+      namenode.renewLease(clientName);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  void renewLease() throws IOException {\n    if (clientRunning \u0026\u0026 !isFilesBeingWrittenEmpty()) {\n      namenode.renewLease(clientName);\n    }\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/DFSClient.java"
    }
  }
}