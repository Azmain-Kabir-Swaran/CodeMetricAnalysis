{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ManagedParentQueue.java",
  "functionName": "initializeLeafQueueConfigs",
  "functionId": "initializeLeafQueueConfigs",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ManagedParentQueue.java",
  "functionStartLine": 154,
  "functionEndLine": 199,
  "numCommitsSeen": 9,
  "timeTaken": 5281,
  "changeHistory": [
    "450e5aa9dd49eae46a0e05151bbddc56083eafd5",
    "2fe122e322afd35dfae6e45b3e7fdaddd20a411f",
    "b38643c9a8dd2c53024ae830b9565a550d0ec39c",
    "0987a7b8cbbbb2c1e4c2095821d98a7db19644df"
  ],
  "changeHistoryShort": {
    "450e5aa9dd49eae46a0e05151bbddc56083eafd5": "Ybodychange",
    "2fe122e322afd35dfae6e45b3e7fdaddd20a411f": "Ymultichange(Yexceptionschange,Ybodychange)",
    "b38643c9a8dd2c53024ae830b9565a550d0ec39c": "Ymultichange(Yparameterchange,Yreturntypechange,Ybodychange)",
    "0987a7b8cbbbb2c1e4c2095821d98a7db19644df": "Yintroduced"
  },
  "changeHistoryDetails": {
    "450e5aa9dd49eae46a0e05151bbddc56083eafd5": {
      "type": "Ybodychange",
      "commitMessage": "YARN-10154. Addendum Patch which fixes below bugs\n\n1. RM fails to start when LeafQueueTemplate max capacity is not specified.\n2. Job stuck in ACCEPTED state with DominantResourceCalculator as Queue\n   Capacity is set to NaN during RM startup with clusterResource is zero.\n\nReviewed by Sunil G and Manikandan R.\n",
      "commitDate": "13/05/20 2:05 AM",
      "commitName": "450e5aa9dd49eae46a0e05151bbddc56083eafd5",
      "commitAuthor": "Prabhu Joseph",
      "commitDateOld": "17/04/20 6:21 AM",
      "commitNameOld": "2fe122e322afd35dfae6e45b3e7fdaddd20a411f",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 25.82,
      "commitsBetweenForRepo": 92,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,74 +1,46 @@\n   protected AutoCreatedLeafQueueConfig.Builder initializeLeafQueueConfigs() throws IOException {\n \n     AutoCreatedLeafQueueConfig.Builder builder \u003d\n         new AutoCreatedLeafQueueConfig.Builder();\n \n     String leafQueueTemplateConfPrefix \u003d getLeafQueueConfigPrefix(\n         csContext.getConfiguration());\n     //Load template configuration\n     CapacitySchedulerConfiguration conf \u003d\n         super.initializeLeafQueueConfigs(leafQueueTemplateConfPrefix);\n     builder.configuration(conf);\n \n     for (String nodeLabel : conf\n         .getConfiguredNodeLabels(csContext.getConfiguration()\n             .getAutoCreatedQueueTemplateConfPrefix(getQueuePath()))) {\n       Resource templateMinResource \u003d conf.getMinimumResourceRequirement(\n           nodeLabel, csContext.getConfiguration()\n               .getAutoCreatedQueueTemplateConfPrefix(getQueuePath()),\n           resourceTypes);\n \n       if (this.capacityConfigType.equals(CapacityConfigType.PERCENTAGE)\n           \u0026\u0026 !templateMinResource.equals(Resources.none())) {\n         throw new IOException(\"Managed Parent Queue \" + this.getQueuePath()\n             + \" config type is different from leaf queue template config type\");\n       }\n     }\n \n     //Load template capacities\n     QueueCapacities queueCapacities \u003d new QueueCapacities(false);\n     CSQueueUtils.loadUpdateAndCheckCapacities(csContext.getConfiguration()\n             .getAutoCreatedQueueTemplateConfPrefix(getQueuePath()),\n         csContext.getConfiguration(), queueCapacities, getQueueCapacities());\n \n \n     /**\n      * Populate leaf queue template (of Parent resources configured in\n      * ABSOLUTE_RESOURCE) capacities with actual values for which configured has\n      * been defined in ABSOLUTE_RESOURCE format.\n      *\n      */\n     if (this.capacityConfigType.equals(CapacityConfigType.ABSOLUTE_RESOURCE)) {\n-      for (String label : queueCapacities.getExistingNodeLabels()) {\n-        queueCapacities.setCapacity(label,\n-            this.csContext.getResourceCalculator().divide(\n-                this.csContext.getClusterResource(),\n-                this.csContext.getConfiguration().getMinimumResourceRequirement(\n-                    label,\n-                    this.csContext.getConfiguration()\n-                        .getAutoCreatedQueueTemplateConfPrefix(getQueuePath()),\n-                    resourceTypes),\n-                getQueueResourceQuotas().getConfiguredMinResource(label)));\n-\n-        queueCapacities.setMaximumCapacity(label,\n-            this.csContext.getResourceCalculator().divide(\n-                this.csContext.getClusterResource(),\n-                this.csContext.getConfiguration().getMaximumResourceRequirement(\n-                    label,\n-                    this.csContext.getConfiguration()\n-                        .getAutoCreatedQueueTemplateConfPrefix(getQueuePath()),\n-                    resourceTypes),\n-                getQueueResourceQuotas().getConfiguredMaxResource(label)));\n-\n-        queueCapacities.setAbsoluteCapacity(label,\n-            queueCapacities.getCapacity(label)\n-                * getQueueCapacities().getAbsoluteCapacity(label));\n-\n-        queueCapacities.setAbsoluteMaximumCapacity(label,\n-            queueCapacities.getMaximumCapacity(label)\n-                * getQueueCapacities().getAbsoluteMaximumCapacity(label));\n-      }\n+      updateQueueCapacities(queueCapacities);\n     }\n     builder.capacities(queueCapacities);\n     return builder;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected AutoCreatedLeafQueueConfig.Builder initializeLeafQueueConfigs() throws IOException {\n\n    AutoCreatedLeafQueueConfig.Builder builder \u003d\n        new AutoCreatedLeafQueueConfig.Builder();\n\n    String leafQueueTemplateConfPrefix \u003d getLeafQueueConfigPrefix(\n        csContext.getConfiguration());\n    //Load template configuration\n    CapacitySchedulerConfiguration conf \u003d\n        super.initializeLeafQueueConfigs(leafQueueTemplateConfPrefix);\n    builder.configuration(conf);\n\n    for (String nodeLabel : conf\n        .getConfiguredNodeLabels(csContext.getConfiguration()\n            .getAutoCreatedQueueTemplateConfPrefix(getQueuePath()))) {\n      Resource templateMinResource \u003d conf.getMinimumResourceRequirement(\n          nodeLabel, csContext.getConfiguration()\n              .getAutoCreatedQueueTemplateConfPrefix(getQueuePath()),\n          resourceTypes);\n\n      if (this.capacityConfigType.equals(CapacityConfigType.PERCENTAGE)\n          \u0026\u0026 !templateMinResource.equals(Resources.none())) {\n        throw new IOException(\"Managed Parent Queue \" + this.getQueuePath()\n            + \" config type is different from leaf queue template config type\");\n      }\n    }\n\n    //Load template capacities\n    QueueCapacities queueCapacities \u003d new QueueCapacities(false);\n    CSQueueUtils.loadUpdateAndCheckCapacities(csContext.getConfiguration()\n            .getAutoCreatedQueueTemplateConfPrefix(getQueuePath()),\n        csContext.getConfiguration(), queueCapacities, getQueueCapacities());\n\n\n    /**\n     * Populate leaf queue template (of Parent resources configured in\n     * ABSOLUTE_RESOURCE) capacities with actual values for which configured has\n     * been defined in ABSOLUTE_RESOURCE format.\n     *\n     */\n    if (this.capacityConfigType.equals(CapacityConfigType.ABSOLUTE_RESOURCE)) {\n      updateQueueCapacities(queueCapacities);\n    }\n    builder.capacities(queueCapacities);\n    return builder;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ManagedParentQueue.java",
      "extendedDetails": {}
    },
    "2fe122e322afd35dfae6e45b3e7fdaddd20a411f": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "YARN-10154. CS Dynamic Queues cannot be configured with absolute resources. Contributed by Manikandan R.\n",
      "commitDate": "17/04/20 6:21 AM",
      "commitName": "2fe122e322afd35dfae6e45b3e7fdaddd20a411f",
      "commitAuthor": "Sunil G",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "YARN-10154. CS Dynamic Queues cannot be configured with absolute resources. Contributed by Manikandan R.\n",
          "commitDate": "17/04/20 6:21 AM",
          "commitName": "2fe122e322afd35dfae6e45b3e7fdaddd20a411f",
          "commitAuthor": "Sunil G",
          "commitDateOld": "25/03/20 4:20 AM",
          "commitNameOld": "cdb2107066a2d8557270888c0a9a75f29a6853bf",
          "commitAuthorOld": "Sunil G",
          "daysBetweenCommits": 23.08,
          "commitsBetweenForRepo": 72,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,74 @@\n-  protected AutoCreatedLeafQueueConfig.Builder initializeLeafQueueConfigs() {\n+  protected AutoCreatedLeafQueueConfig.Builder initializeLeafQueueConfigs() throws IOException {\n \n     AutoCreatedLeafQueueConfig.Builder builder \u003d\n         new AutoCreatedLeafQueueConfig.Builder();\n \n     String leafQueueTemplateConfPrefix \u003d getLeafQueueConfigPrefix(\n         csContext.getConfiguration());\n     //Load template configuration\n-    builder.configuration(\n-        super.initializeLeafQueueConfigs(leafQueueTemplateConfPrefix));\n+    CapacitySchedulerConfiguration conf \u003d\n+        super.initializeLeafQueueConfigs(leafQueueTemplateConfPrefix);\n+    builder.configuration(conf);\n+\n+    for (String nodeLabel : conf\n+        .getConfiguredNodeLabels(csContext.getConfiguration()\n+            .getAutoCreatedQueueTemplateConfPrefix(getQueuePath()))) {\n+      Resource templateMinResource \u003d conf.getMinimumResourceRequirement(\n+          nodeLabel, csContext.getConfiguration()\n+              .getAutoCreatedQueueTemplateConfPrefix(getQueuePath()),\n+          resourceTypes);\n+\n+      if (this.capacityConfigType.equals(CapacityConfigType.PERCENTAGE)\n+          \u0026\u0026 !templateMinResource.equals(Resources.none())) {\n+        throw new IOException(\"Managed Parent Queue \" + this.getQueuePath()\n+            + \" config type is different from leaf queue template config type\");\n+      }\n+    }\n \n     //Load template capacities\n     QueueCapacities queueCapacities \u003d new QueueCapacities(false);\n     CSQueueUtils.loadUpdateAndCheckCapacities(csContext.getConfiguration()\n             .getAutoCreatedQueueTemplateConfPrefix(getQueuePath()),\n         csContext.getConfiguration(), queueCapacities, getQueueCapacities());\n-    builder.capacities(queueCapacities);\n \n+\n+    /**\n+     * Populate leaf queue template (of Parent resources configured in\n+     * ABSOLUTE_RESOURCE) capacities with actual values for which configured has\n+     * been defined in ABSOLUTE_RESOURCE format.\n+     *\n+     */\n+    if (this.capacityConfigType.equals(CapacityConfigType.ABSOLUTE_RESOURCE)) {\n+      for (String label : queueCapacities.getExistingNodeLabels()) {\n+        queueCapacities.setCapacity(label,\n+            this.csContext.getResourceCalculator().divide(\n+                this.csContext.getClusterResource(),\n+                this.csContext.getConfiguration().getMinimumResourceRequirement(\n+                    label,\n+                    this.csContext.getConfiguration()\n+                        .getAutoCreatedQueueTemplateConfPrefix(getQueuePath()),\n+                    resourceTypes),\n+                getQueueResourceQuotas().getConfiguredMinResource(label)));\n+\n+        queueCapacities.setMaximumCapacity(label,\n+            this.csContext.getResourceCalculator().divide(\n+                this.csContext.getClusterResource(),\n+                this.csContext.getConfiguration().getMaximumResourceRequirement(\n+                    label,\n+                    this.csContext.getConfiguration()\n+                        .getAutoCreatedQueueTemplateConfPrefix(getQueuePath()),\n+                    resourceTypes),\n+                getQueueResourceQuotas().getConfiguredMaxResource(label)));\n+\n+        queueCapacities.setAbsoluteCapacity(label,\n+            queueCapacities.getCapacity(label)\n+                * getQueueCapacities().getAbsoluteCapacity(label));\n+\n+        queueCapacities.setAbsoluteMaximumCapacity(label,\n+            queueCapacities.getMaximumCapacity(label)\n+                * getQueueCapacities().getAbsoluteMaximumCapacity(label));\n+      }\n+    }\n+    builder.capacities(queueCapacities);\n     return builder;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected AutoCreatedLeafQueueConfig.Builder initializeLeafQueueConfigs() throws IOException {\n\n    AutoCreatedLeafQueueConfig.Builder builder \u003d\n        new AutoCreatedLeafQueueConfig.Builder();\n\n    String leafQueueTemplateConfPrefix \u003d getLeafQueueConfigPrefix(\n        csContext.getConfiguration());\n    //Load template configuration\n    CapacitySchedulerConfiguration conf \u003d\n        super.initializeLeafQueueConfigs(leafQueueTemplateConfPrefix);\n    builder.configuration(conf);\n\n    for (String nodeLabel : conf\n        .getConfiguredNodeLabels(csContext.getConfiguration()\n            .getAutoCreatedQueueTemplateConfPrefix(getQueuePath()))) {\n      Resource templateMinResource \u003d conf.getMinimumResourceRequirement(\n          nodeLabel, csContext.getConfiguration()\n              .getAutoCreatedQueueTemplateConfPrefix(getQueuePath()),\n          resourceTypes);\n\n      if (this.capacityConfigType.equals(CapacityConfigType.PERCENTAGE)\n          \u0026\u0026 !templateMinResource.equals(Resources.none())) {\n        throw new IOException(\"Managed Parent Queue \" + this.getQueuePath()\n            + \" config type is different from leaf queue template config type\");\n      }\n    }\n\n    //Load template capacities\n    QueueCapacities queueCapacities \u003d new QueueCapacities(false);\n    CSQueueUtils.loadUpdateAndCheckCapacities(csContext.getConfiguration()\n            .getAutoCreatedQueueTemplateConfPrefix(getQueuePath()),\n        csContext.getConfiguration(), queueCapacities, getQueueCapacities());\n\n\n    /**\n     * Populate leaf queue template (of Parent resources configured in\n     * ABSOLUTE_RESOURCE) capacities with actual values for which configured has\n     * been defined in ABSOLUTE_RESOURCE format.\n     *\n     */\n    if (this.capacityConfigType.equals(CapacityConfigType.ABSOLUTE_RESOURCE)) {\n      for (String label : queueCapacities.getExistingNodeLabels()) {\n        queueCapacities.setCapacity(label,\n            this.csContext.getResourceCalculator().divide(\n                this.csContext.getClusterResource(),\n                this.csContext.getConfiguration().getMinimumResourceRequirement(\n                    label,\n                    this.csContext.getConfiguration()\n                        .getAutoCreatedQueueTemplateConfPrefix(getQueuePath()),\n                    resourceTypes),\n                getQueueResourceQuotas().getConfiguredMinResource(label)));\n\n        queueCapacities.setMaximumCapacity(label,\n            this.csContext.getResourceCalculator().divide(\n                this.csContext.getClusterResource(),\n                this.csContext.getConfiguration().getMaximumResourceRequirement(\n                    label,\n                    this.csContext.getConfiguration()\n                        .getAutoCreatedQueueTemplateConfPrefix(getQueuePath()),\n                    resourceTypes),\n                getQueueResourceQuotas().getConfiguredMaxResource(label)));\n\n        queueCapacities.setAbsoluteCapacity(label,\n            queueCapacities.getCapacity(label)\n                * getQueueCapacities().getAbsoluteCapacity(label));\n\n        queueCapacities.setAbsoluteMaximumCapacity(label,\n            queueCapacities.getMaximumCapacity(label)\n                * getQueueCapacities().getAbsoluteMaximumCapacity(label));\n      }\n    }\n    builder.capacities(queueCapacities);\n    return builder;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ManagedParentQueue.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[IOException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-10154. CS Dynamic Queues cannot be configured with absolute resources. Contributed by Manikandan R.\n",
          "commitDate": "17/04/20 6:21 AM",
          "commitName": "2fe122e322afd35dfae6e45b3e7fdaddd20a411f",
          "commitAuthor": "Sunil G",
          "commitDateOld": "25/03/20 4:20 AM",
          "commitNameOld": "cdb2107066a2d8557270888c0a9a75f29a6853bf",
          "commitAuthorOld": "Sunil G",
          "daysBetweenCommits": 23.08,
          "commitsBetweenForRepo": 72,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,74 @@\n-  protected AutoCreatedLeafQueueConfig.Builder initializeLeafQueueConfigs() {\n+  protected AutoCreatedLeafQueueConfig.Builder initializeLeafQueueConfigs() throws IOException {\n \n     AutoCreatedLeafQueueConfig.Builder builder \u003d\n         new AutoCreatedLeafQueueConfig.Builder();\n \n     String leafQueueTemplateConfPrefix \u003d getLeafQueueConfigPrefix(\n         csContext.getConfiguration());\n     //Load template configuration\n-    builder.configuration(\n-        super.initializeLeafQueueConfigs(leafQueueTemplateConfPrefix));\n+    CapacitySchedulerConfiguration conf \u003d\n+        super.initializeLeafQueueConfigs(leafQueueTemplateConfPrefix);\n+    builder.configuration(conf);\n+\n+    for (String nodeLabel : conf\n+        .getConfiguredNodeLabels(csContext.getConfiguration()\n+            .getAutoCreatedQueueTemplateConfPrefix(getQueuePath()))) {\n+      Resource templateMinResource \u003d conf.getMinimumResourceRequirement(\n+          nodeLabel, csContext.getConfiguration()\n+              .getAutoCreatedQueueTemplateConfPrefix(getQueuePath()),\n+          resourceTypes);\n+\n+      if (this.capacityConfigType.equals(CapacityConfigType.PERCENTAGE)\n+          \u0026\u0026 !templateMinResource.equals(Resources.none())) {\n+        throw new IOException(\"Managed Parent Queue \" + this.getQueuePath()\n+            + \" config type is different from leaf queue template config type\");\n+      }\n+    }\n \n     //Load template capacities\n     QueueCapacities queueCapacities \u003d new QueueCapacities(false);\n     CSQueueUtils.loadUpdateAndCheckCapacities(csContext.getConfiguration()\n             .getAutoCreatedQueueTemplateConfPrefix(getQueuePath()),\n         csContext.getConfiguration(), queueCapacities, getQueueCapacities());\n-    builder.capacities(queueCapacities);\n \n+\n+    /**\n+     * Populate leaf queue template (of Parent resources configured in\n+     * ABSOLUTE_RESOURCE) capacities with actual values for which configured has\n+     * been defined in ABSOLUTE_RESOURCE format.\n+     *\n+     */\n+    if (this.capacityConfigType.equals(CapacityConfigType.ABSOLUTE_RESOURCE)) {\n+      for (String label : queueCapacities.getExistingNodeLabels()) {\n+        queueCapacities.setCapacity(label,\n+            this.csContext.getResourceCalculator().divide(\n+                this.csContext.getClusterResource(),\n+                this.csContext.getConfiguration().getMinimumResourceRequirement(\n+                    label,\n+                    this.csContext.getConfiguration()\n+                        .getAutoCreatedQueueTemplateConfPrefix(getQueuePath()),\n+                    resourceTypes),\n+                getQueueResourceQuotas().getConfiguredMinResource(label)));\n+\n+        queueCapacities.setMaximumCapacity(label,\n+            this.csContext.getResourceCalculator().divide(\n+                this.csContext.getClusterResource(),\n+                this.csContext.getConfiguration().getMaximumResourceRequirement(\n+                    label,\n+                    this.csContext.getConfiguration()\n+                        .getAutoCreatedQueueTemplateConfPrefix(getQueuePath()),\n+                    resourceTypes),\n+                getQueueResourceQuotas().getConfiguredMaxResource(label)));\n+\n+        queueCapacities.setAbsoluteCapacity(label,\n+            queueCapacities.getCapacity(label)\n+                * getQueueCapacities().getAbsoluteCapacity(label));\n+\n+        queueCapacities.setAbsoluteMaximumCapacity(label,\n+            queueCapacities.getMaximumCapacity(label)\n+                * getQueueCapacities().getAbsoluteMaximumCapacity(label));\n+      }\n+    }\n+    builder.capacities(queueCapacities);\n     return builder;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected AutoCreatedLeafQueueConfig.Builder initializeLeafQueueConfigs() throws IOException {\n\n    AutoCreatedLeafQueueConfig.Builder builder \u003d\n        new AutoCreatedLeafQueueConfig.Builder();\n\n    String leafQueueTemplateConfPrefix \u003d getLeafQueueConfigPrefix(\n        csContext.getConfiguration());\n    //Load template configuration\n    CapacitySchedulerConfiguration conf \u003d\n        super.initializeLeafQueueConfigs(leafQueueTemplateConfPrefix);\n    builder.configuration(conf);\n\n    for (String nodeLabel : conf\n        .getConfiguredNodeLabels(csContext.getConfiguration()\n            .getAutoCreatedQueueTemplateConfPrefix(getQueuePath()))) {\n      Resource templateMinResource \u003d conf.getMinimumResourceRequirement(\n          nodeLabel, csContext.getConfiguration()\n              .getAutoCreatedQueueTemplateConfPrefix(getQueuePath()),\n          resourceTypes);\n\n      if (this.capacityConfigType.equals(CapacityConfigType.PERCENTAGE)\n          \u0026\u0026 !templateMinResource.equals(Resources.none())) {\n        throw new IOException(\"Managed Parent Queue \" + this.getQueuePath()\n            + \" config type is different from leaf queue template config type\");\n      }\n    }\n\n    //Load template capacities\n    QueueCapacities queueCapacities \u003d new QueueCapacities(false);\n    CSQueueUtils.loadUpdateAndCheckCapacities(csContext.getConfiguration()\n            .getAutoCreatedQueueTemplateConfPrefix(getQueuePath()),\n        csContext.getConfiguration(), queueCapacities, getQueueCapacities());\n\n\n    /**\n     * Populate leaf queue template (of Parent resources configured in\n     * ABSOLUTE_RESOURCE) capacities with actual values for which configured has\n     * been defined in ABSOLUTE_RESOURCE format.\n     *\n     */\n    if (this.capacityConfigType.equals(CapacityConfigType.ABSOLUTE_RESOURCE)) {\n      for (String label : queueCapacities.getExistingNodeLabels()) {\n        queueCapacities.setCapacity(label,\n            this.csContext.getResourceCalculator().divide(\n                this.csContext.getClusterResource(),\n                this.csContext.getConfiguration().getMinimumResourceRequirement(\n                    label,\n                    this.csContext.getConfiguration()\n                        .getAutoCreatedQueueTemplateConfPrefix(getQueuePath()),\n                    resourceTypes),\n                getQueueResourceQuotas().getConfiguredMinResource(label)));\n\n        queueCapacities.setMaximumCapacity(label,\n            this.csContext.getResourceCalculator().divide(\n                this.csContext.getClusterResource(),\n                this.csContext.getConfiguration().getMaximumResourceRequirement(\n                    label,\n                    this.csContext.getConfiguration()\n                        .getAutoCreatedQueueTemplateConfPrefix(getQueuePath()),\n                    resourceTypes),\n                getQueueResourceQuotas().getConfiguredMaxResource(label)));\n\n        queueCapacities.setAbsoluteCapacity(label,\n            queueCapacities.getCapacity(label)\n                * getQueueCapacities().getAbsoluteCapacity(label));\n\n        queueCapacities.setAbsoluteMaximumCapacity(label,\n            queueCapacities.getMaximumCapacity(label)\n                * getQueueCapacities().getAbsoluteMaximumCapacity(label));\n      }\n    }\n    builder.capacities(queueCapacities);\n    return builder;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ManagedParentQueue.java",
          "extendedDetails": {}
        }
      ]
    },
    "b38643c9a8dd2c53024ae830b9565a550d0ec39c": {
      "type": "Ymultichange(Yparameterchange,Yreturntypechange,Ybodychange)",
      "commitMessage": "YARN-7473. Implement Framework and policy for capacity management of auto created queues. (Suma Shivaprasad via wangda)\n\nChange-Id: Icca7805fe12f6f7fb335effff4b121b6f7f6337b\n",
      "commitDate": "08/12/17 3:10 PM",
      "commitName": "b38643c9a8dd2c53024ae830b9565a550d0ec39c",
      "commitAuthor": "Wangda Tan",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-7473. Implement Framework and policy for capacity management of auto created queues. (Suma Shivaprasad via wangda)\n\nChange-Id: Icca7805fe12f6f7fb335effff4b121b6f7f6337b\n",
          "commitDate": "08/12/17 3:10 PM",
          "commitName": "b38643c9a8dd2c53024ae830b9565a550d0ec39c",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "16/11/17 11:25 AM",
          "commitNameOld": "0987a7b8cbbbb2c1e4c2095821d98a7db19644df",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 22.16,
          "commitsBetweenForRepo": 110,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,20 @@\n-  protected AutoCreatedLeafQueueTemplate.Builder initializeLeafQueueConfigs(\n-      String queuePath) {\n+  protected AutoCreatedLeafQueueConfig.Builder initializeLeafQueueConfigs() {\n \n-    AutoCreatedLeafQueueTemplate.Builder leafQueueTemplate \u003d\n-        super.initializeLeafQueueConfigs(queuePath);\n+    AutoCreatedLeafQueueConfig.Builder builder \u003d\n+        new AutoCreatedLeafQueueConfig.Builder();\n \n-    CapacitySchedulerConfiguration conf \u003d csContext.getConfiguration();\n-    String leafQueueTemplateConfPrefix \u003d getLeafQueueConfigPrefix(conf);\n+    String leafQueueTemplateConfPrefix \u003d getLeafQueueConfigPrefix(\n+        csContext.getConfiguration());\n+    //Load template configuration\n+    builder.configuration(\n+        super.initializeLeafQueueConfigs(leafQueueTemplateConfPrefix));\n+\n+    //Load template capacities\n     QueueCapacities queueCapacities \u003d new QueueCapacities(false);\n-    CSQueueUtils.loadUpdateAndCheckCapacities(leafQueueTemplateConfPrefix,\n+    CSQueueUtils.loadUpdateAndCheckCapacities(csContext.getConfiguration()\n+            .getAutoCreatedQueueTemplateConfPrefix(getQueuePath()),\n         csContext.getConfiguration(), queueCapacities, getQueueCapacities());\n-    leafQueueTemplate.capacities(queueCapacities);\n+    builder.capacities(queueCapacities);\n \n-    shouldFailAutoCreationWhenGuaranteedCapacityExceeded \u003d\n-        conf.getShouldFailAutoQueueCreationWhenGuaranteedCapacityExceeded(\n-            getQueuePath());\n-\n-    return leafQueueTemplate;\n+    return builder;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected AutoCreatedLeafQueueConfig.Builder initializeLeafQueueConfigs() {\n\n    AutoCreatedLeafQueueConfig.Builder builder \u003d\n        new AutoCreatedLeafQueueConfig.Builder();\n\n    String leafQueueTemplateConfPrefix \u003d getLeafQueueConfigPrefix(\n        csContext.getConfiguration());\n    //Load template configuration\n    builder.configuration(\n        super.initializeLeafQueueConfigs(leafQueueTemplateConfPrefix));\n\n    //Load template capacities\n    QueueCapacities queueCapacities \u003d new QueueCapacities(false);\n    CSQueueUtils.loadUpdateAndCheckCapacities(csContext.getConfiguration()\n            .getAutoCreatedQueueTemplateConfPrefix(getQueuePath()),\n        csContext.getConfiguration(), queueCapacities, getQueueCapacities());\n    builder.capacities(queueCapacities);\n\n    return builder;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ManagedParentQueue.java",
          "extendedDetails": {
            "oldValue": "[queuePath-String]",
            "newValue": "[]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "YARN-7473. Implement Framework and policy for capacity management of auto created queues. (Suma Shivaprasad via wangda)\n\nChange-Id: Icca7805fe12f6f7fb335effff4b121b6f7f6337b\n",
          "commitDate": "08/12/17 3:10 PM",
          "commitName": "b38643c9a8dd2c53024ae830b9565a550d0ec39c",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "16/11/17 11:25 AM",
          "commitNameOld": "0987a7b8cbbbb2c1e4c2095821d98a7db19644df",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 22.16,
          "commitsBetweenForRepo": 110,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,20 @@\n-  protected AutoCreatedLeafQueueTemplate.Builder initializeLeafQueueConfigs(\n-      String queuePath) {\n+  protected AutoCreatedLeafQueueConfig.Builder initializeLeafQueueConfigs() {\n \n-    AutoCreatedLeafQueueTemplate.Builder leafQueueTemplate \u003d\n-        super.initializeLeafQueueConfigs(queuePath);\n+    AutoCreatedLeafQueueConfig.Builder builder \u003d\n+        new AutoCreatedLeafQueueConfig.Builder();\n \n-    CapacitySchedulerConfiguration conf \u003d csContext.getConfiguration();\n-    String leafQueueTemplateConfPrefix \u003d getLeafQueueConfigPrefix(conf);\n+    String leafQueueTemplateConfPrefix \u003d getLeafQueueConfigPrefix(\n+        csContext.getConfiguration());\n+    //Load template configuration\n+    builder.configuration(\n+        super.initializeLeafQueueConfigs(leafQueueTemplateConfPrefix));\n+\n+    //Load template capacities\n     QueueCapacities queueCapacities \u003d new QueueCapacities(false);\n-    CSQueueUtils.loadUpdateAndCheckCapacities(leafQueueTemplateConfPrefix,\n+    CSQueueUtils.loadUpdateAndCheckCapacities(csContext.getConfiguration()\n+            .getAutoCreatedQueueTemplateConfPrefix(getQueuePath()),\n         csContext.getConfiguration(), queueCapacities, getQueueCapacities());\n-    leafQueueTemplate.capacities(queueCapacities);\n+    builder.capacities(queueCapacities);\n \n-    shouldFailAutoCreationWhenGuaranteedCapacityExceeded \u003d\n-        conf.getShouldFailAutoQueueCreationWhenGuaranteedCapacityExceeded(\n-            getQueuePath());\n-\n-    return leafQueueTemplate;\n+    return builder;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected AutoCreatedLeafQueueConfig.Builder initializeLeafQueueConfigs() {\n\n    AutoCreatedLeafQueueConfig.Builder builder \u003d\n        new AutoCreatedLeafQueueConfig.Builder();\n\n    String leafQueueTemplateConfPrefix \u003d getLeafQueueConfigPrefix(\n        csContext.getConfiguration());\n    //Load template configuration\n    builder.configuration(\n        super.initializeLeafQueueConfigs(leafQueueTemplateConfPrefix));\n\n    //Load template capacities\n    QueueCapacities queueCapacities \u003d new QueueCapacities(false);\n    CSQueueUtils.loadUpdateAndCheckCapacities(csContext.getConfiguration()\n            .getAutoCreatedQueueTemplateConfPrefix(getQueuePath()),\n        csContext.getConfiguration(), queueCapacities, getQueueCapacities());\n    builder.capacities(queueCapacities);\n\n    return builder;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ManagedParentQueue.java",
          "extendedDetails": {
            "oldValue": "AutoCreatedLeafQueueTemplate.Builder",
            "newValue": "AutoCreatedLeafQueueConfig.Builder"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7473. Implement Framework and policy for capacity management of auto created queues. (Suma Shivaprasad via wangda)\n\nChange-Id: Icca7805fe12f6f7fb335effff4b121b6f7f6337b\n",
          "commitDate": "08/12/17 3:10 PM",
          "commitName": "b38643c9a8dd2c53024ae830b9565a550d0ec39c",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "16/11/17 11:25 AM",
          "commitNameOld": "0987a7b8cbbbb2c1e4c2095821d98a7db19644df",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 22.16,
          "commitsBetweenForRepo": 110,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,20 @@\n-  protected AutoCreatedLeafQueueTemplate.Builder initializeLeafQueueConfigs(\n-      String queuePath) {\n+  protected AutoCreatedLeafQueueConfig.Builder initializeLeafQueueConfigs() {\n \n-    AutoCreatedLeafQueueTemplate.Builder leafQueueTemplate \u003d\n-        super.initializeLeafQueueConfigs(queuePath);\n+    AutoCreatedLeafQueueConfig.Builder builder \u003d\n+        new AutoCreatedLeafQueueConfig.Builder();\n \n-    CapacitySchedulerConfiguration conf \u003d csContext.getConfiguration();\n-    String leafQueueTemplateConfPrefix \u003d getLeafQueueConfigPrefix(conf);\n+    String leafQueueTemplateConfPrefix \u003d getLeafQueueConfigPrefix(\n+        csContext.getConfiguration());\n+    //Load template configuration\n+    builder.configuration(\n+        super.initializeLeafQueueConfigs(leafQueueTemplateConfPrefix));\n+\n+    //Load template capacities\n     QueueCapacities queueCapacities \u003d new QueueCapacities(false);\n-    CSQueueUtils.loadUpdateAndCheckCapacities(leafQueueTemplateConfPrefix,\n+    CSQueueUtils.loadUpdateAndCheckCapacities(csContext.getConfiguration()\n+            .getAutoCreatedQueueTemplateConfPrefix(getQueuePath()),\n         csContext.getConfiguration(), queueCapacities, getQueueCapacities());\n-    leafQueueTemplate.capacities(queueCapacities);\n+    builder.capacities(queueCapacities);\n \n-    shouldFailAutoCreationWhenGuaranteedCapacityExceeded \u003d\n-        conf.getShouldFailAutoQueueCreationWhenGuaranteedCapacityExceeded(\n-            getQueuePath());\n-\n-    return leafQueueTemplate;\n+    return builder;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected AutoCreatedLeafQueueConfig.Builder initializeLeafQueueConfigs() {\n\n    AutoCreatedLeafQueueConfig.Builder builder \u003d\n        new AutoCreatedLeafQueueConfig.Builder();\n\n    String leafQueueTemplateConfPrefix \u003d getLeafQueueConfigPrefix(\n        csContext.getConfiguration());\n    //Load template configuration\n    builder.configuration(\n        super.initializeLeafQueueConfigs(leafQueueTemplateConfPrefix));\n\n    //Load template capacities\n    QueueCapacities queueCapacities \u003d new QueueCapacities(false);\n    CSQueueUtils.loadUpdateAndCheckCapacities(csContext.getConfiguration()\n            .getAutoCreatedQueueTemplateConfPrefix(getQueuePath()),\n        csContext.getConfiguration(), queueCapacities, getQueueCapacities());\n    builder.capacities(queueCapacities);\n\n    return builder;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ManagedParentQueue.java",
          "extendedDetails": {}
        }
      ]
    },
    "0987a7b8cbbbb2c1e4c2095821d98a7db19644df": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7419. CapacityScheduler: Allow auto leaf queue creation after queue mapping. (Suma Shivaprasad via wangda)\n\nChange-Id: Ia1704bb8cb5070e5b180b5a85787d7b9ca57ebc6\n",
      "commitDate": "16/11/17 11:25 AM",
      "commitName": "0987a7b8cbbbb2c1e4c2095821d98a7db19644df",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,19 @@\n+  protected AutoCreatedLeafQueueTemplate.Builder initializeLeafQueueConfigs(\n+      String queuePath) {\n+\n+    AutoCreatedLeafQueueTemplate.Builder leafQueueTemplate \u003d\n+        super.initializeLeafQueueConfigs(queuePath);\n+\n+    CapacitySchedulerConfiguration conf \u003d csContext.getConfiguration();\n+    String leafQueueTemplateConfPrefix \u003d getLeafQueueConfigPrefix(conf);\n+    QueueCapacities queueCapacities \u003d new QueueCapacities(false);\n+    CSQueueUtils.loadUpdateAndCheckCapacities(leafQueueTemplateConfPrefix,\n+        csContext.getConfiguration(), queueCapacities, getQueueCapacities());\n+    leafQueueTemplate.capacities(queueCapacities);\n+\n+    shouldFailAutoCreationWhenGuaranteedCapacityExceeded \u003d\n+        conf.getShouldFailAutoQueueCreationWhenGuaranteedCapacityExceeded(\n+            getQueuePath());\n+\n+    return leafQueueTemplate;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected AutoCreatedLeafQueueTemplate.Builder initializeLeafQueueConfigs(\n      String queuePath) {\n\n    AutoCreatedLeafQueueTemplate.Builder leafQueueTemplate \u003d\n        super.initializeLeafQueueConfigs(queuePath);\n\n    CapacitySchedulerConfiguration conf \u003d csContext.getConfiguration();\n    String leafQueueTemplateConfPrefix \u003d getLeafQueueConfigPrefix(conf);\n    QueueCapacities queueCapacities \u003d new QueueCapacities(false);\n    CSQueueUtils.loadUpdateAndCheckCapacities(leafQueueTemplateConfPrefix,\n        csContext.getConfiguration(), queueCapacities, getQueueCapacities());\n    leafQueueTemplate.capacities(queueCapacities);\n\n    shouldFailAutoCreationWhenGuaranteedCapacityExceeded \u003d\n        conf.getShouldFailAutoQueueCreationWhenGuaranteedCapacityExceeded(\n            getQueuePath());\n\n    return leafQueueTemplate;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ManagedParentQueue.java"
    }
  }
}