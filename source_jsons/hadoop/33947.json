{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DefaultOOMHandler.java",
  "functionName": "equals",
  "functionId": "equals___obj-Object",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/resources/DefaultOOMHandler.java",
  "functionStartLine": 304,
  "functionEndLine": 323,
  "numCommitsSeen": 5,
  "timeTaken": 933,
  "changeHistory": [
    "d5eca1a6a0e3939eead6711805b7a61c364d254b"
  ],
  "changeHistoryShort": {
    "d5eca1a6a0e3939eead6711805b7a61c364d254b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d5eca1a6a0e3939eead6711805b7a61c364d254b": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6677. Preempt opportunistic containers when root container cgroup goes over memory limit. Contributed by Haibo Chen.\n",
      "commitDate": "07/06/18 4:38 PM",
      "commitName": "d5eca1a6a0e3939eead6711805b7a61c364d254b",
      "commitAuthor": "Miklos Szegedi",
      "diff": "@@ -0,0 +1,20 @@\n+    public boolean equals(Object obj) {\n+      if (this \u003d\u003d obj) {\n+        return true;\n+      }\n+      if (obj \u003d\u003d null) {\n+        return false;\n+      }\n+      if (this.getClass() !\u003d obj.getClass()) {\n+        return false;\n+      }\n+      ContainerCandidate other \u003d (ContainerCandidate) obj;\n+      if (this.outOfLimit !\u003d other.outOfLimit) {\n+        return false;\n+      }\n+      if (this.container \u003d\u003d null) {\n+        return other.container \u003d\u003d null;\n+      } else {\n+        return this.container.equals(other.container);\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public boolean equals(Object obj) {\n      if (this \u003d\u003d obj) {\n        return true;\n      }\n      if (obj \u003d\u003d null) {\n        return false;\n      }\n      if (this.getClass() !\u003d obj.getClass()) {\n        return false;\n      }\n      ContainerCandidate other \u003d (ContainerCandidate) obj;\n      if (this.outOfLimit !\u003d other.outOfLimit) {\n        return false;\n      }\n      if (this.container \u003d\u003d null) {\n        return other.container \u003d\u003d null;\n      } else {\n        return this.container.equals(other.container);\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/resources/DefaultOOMHandler.java"
    }
  }
}