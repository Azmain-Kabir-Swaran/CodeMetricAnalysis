{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "OfflineImageViewerPB.java",
  "functionName": "run",
  "functionId": "run___args-String[]",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/OfflineImageViewerPB.java",
  "functionStartLine": 153,
  "functionEndLine": 258,
  "numCommitsSeen": 23,
  "timeTaken": 6063,
  "changeHistory": [
    "865021b8c96ae96940ca060faae87452b433d970",
    "fb10803dfa67394650072bdea327296f8ad2a744",
    "f069d38c8d3c0bfa91b70a60e4e556ec708fc411",
    "9654dd1f472052c4bb4a48a7412149c2e4859a10",
    "08fca508e66e8eddc5d8fd1608ec0c9cd54fc990",
    "63f594892ecd4687e37a99790288e36eb278849f",
    "700b0e4019cf483f7532609711812150b8c44742",
    "08f5de1ef55f637b3bbde0ace28b42f155e285a1",
    "61b3547c462a4e51d0a31c0a8c8ce210e2d90df8",
    "caf7298e49f646a40023af999f62d61846fde5e2",
    "b9f6d0c956f0278c8b9b83e05b523a442a730ebb",
    "675bca2968700d3627449700b827c3771827cef8",
    "71bae5cae4f758c4366d32cbc61522b8b4093a1b",
    "9d2d55e490a2092f9ff3a7f1a570b673555c43c8",
    "54c1daa580e1cceee541be86fc2b694fa1be26df",
    "146bf6c01ed56d0ab4d3ad06f6841622ff800b87"
  ],
  "changeHistoryShort": {
    "865021b8c96ae96940ca060faae87452b433d970": "Ybodychange",
    "fb10803dfa67394650072bdea327296f8ad2a744": "Ybodychange",
    "f069d38c8d3c0bfa91b70a60e4e556ec708fc411": "Ybodychange",
    "9654dd1f472052c4bb4a48a7412149c2e4859a10": "Ybodychange",
    "08fca508e66e8eddc5d8fd1608ec0c9cd54fc990": "Ybodychange",
    "63f594892ecd4687e37a99790288e36eb278849f": "Ybodychange",
    "700b0e4019cf483f7532609711812150b8c44742": "Ybodychange",
    "08f5de1ef55f637b3bbde0ace28b42f155e285a1": "Ybodychange",
    "61b3547c462a4e51d0a31c0a8c8ce210e2d90df8": "Ybodychange",
    "caf7298e49f646a40023af999f62d61846fde5e2": "Ybodychange",
    "b9f6d0c956f0278c8b9b83e05b523a442a730ebb": "Ybodychange",
    "675bca2968700d3627449700b827c3771827cef8": "Ymultichange(Yexceptionschange,Ybodychange)",
    "71bae5cae4f758c4366d32cbc61522b8b4093a1b": "Ybodychange",
    "9d2d55e490a2092f9ff3a7f1a570b673555c43c8": "Ybodychange",
    "54c1daa580e1cceee541be86fc2b694fa1be26df": "Ybodychange",
    "146bf6c01ed56d0ab4d3ad06f6841622ff800b87": "Yintroduced"
  },
  "changeHistoryDetails": {
    "865021b8c96ae96940ca060faae87452b433d970": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14195. OIV: print out storage policy id in oiv Delimited output. Contributed by Wang, Xinglong.\n",
      "commitDate": "09/08/19 3:37 PM",
      "commitName": "865021b8c96ae96940ca060faae87452b433d970",
      "commitAuthor": "Wei-Chiu Chuang",
      "commitDateOld": "03/12/18 10:34 AM",
      "commitNameOld": "fb10803dfa67394650072bdea327296f8ad2a744",
      "commitAuthorOld": "Adam Antal",
      "daysBetweenCommits": 249.17,
      "commitsBetweenForRepo": 1812,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,104 +1,106 @@\n   public static int run(String[] args) throws Exception {\n     Options options \u003d buildOptions();\n     if (args.length \u003d\u003d 0) {\n       printUsage();\n       return 0;\n     }\n     // print help and exit with zero exit code\n     if (args.length \u003d\u003d 1 \u0026\u0026 isHelpOption(args[0])) {\n       printUsage();\n       return 0;\n     }\n     CommandLineParser parser \u003d new PosixParser();\n     CommandLine cmd;\n \n     try {\n       cmd \u003d parser.parse(options, args);\n     } catch (ParseException e) {\n       System.out.println(\"Error parsing command-line options: \");\n       printUsage();\n       return -1;\n     }\n \n     if (cmd.hasOption(\"h\")) {\n       // print help and exit with non zero exit code since\n       // it is not expected to give help and other options together.\n       printUsage();\n       return -1;\n     }\n \n     String inputFile \u003d cmd.getOptionValue(\"i\");\n     String processor \u003d cmd.getOptionValue(\"p\", \"Web\");\n     String outputFile \u003d cmd.getOptionValue(\"o\", \"-\");\n     String delimiter \u003d cmd.getOptionValue(\"delimiter\",\n         PBImageTextWriter.DEFAULT_DELIMITER);\n     String tempPath \u003d cmd.getOptionValue(\"t\", \"\");\n \n     Configuration conf \u003d new Configuration();\n     PrintStream out \u003d null;\n     try {\n       out \u003d outputFile.equals(\"-\") || \"REVERSEXML\".equalsIgnoreCase(processor) ?\n         System.out : new PrintStream(outputFile, \"UTF-8\");\n       switch (StringUtils.toUpperCase(processor)) {\n       case \"FILEDISTRIBUTION\":\n         long maxSize \u003d Long.parseLong(cmd.getOptionValue(\"maxSize\", \"0\"));\n         int step \u003d Integer.parseInt(cmd.getOptionValue(\"step\", \"0\"));\n         boolean formatOutput \u003d cmd.hasOption(\"format\");\n         try (RandomAccessFile r \u003d new RandomAccessFile(inputFile, \"r\")) {\n           new FileDistributionCalculator(conf, maxSize, step, formatOutput, out)\n             .visit(r);\n         }\n         break;\n       case \"XML\":\n         try (RandomAccessFile r \u003d new RandomAccessFile(inputFile, \"r\")) {\n           new PBImageXmlWriter(conf, out).visit(r);\n         }\n         break;\n       case \"REVERSEXML\":\n         try {\n           OfflineImageReconstructor.run(inputFile, outputFile);\n         } catch (Exception e) {\n           System.err.println(\"OfflineImageReconstructor failed: \"\n               + e.getMessage());\n           e.printStackTrace(System.err);\n           ExitUtil.terminate(1);\n         }\n         break;\n       case \"WEB\":\n         String addr \u003d cmd.getOptionValue(\"addr\", \"localhost:5978\");\n         try (WebImageViewer viewer \u003d\n             new WebImageViewer(NetUtils.createSocketAddr(addr), conf)) {\n           viewer.start(inputFile);\n         }\n         break;\n       case \"DELIMITED\":\n+        boolean printStoragePolicy \u003d cmd.hasOption(\"sp\");\n         try (PBImageDelimitedTextWriter writer \u003d\n-            new PBImageDelimitedTextWriter(out, delimiter, tempPath);\n+            new PBImageDelimitedTextWriter(out, delimiter,\n+                tempPath, printStoragePolicy);\n             RandomAccessFile r \u003d new RandomAccessFile(inputFile, \"r\")) {\n           writer.visit(r);\n         }\n         break;\n       case \"DETECTCORRUPTION\":\n         try (PBImageCorruptionDetector detector \u003d\n             new PBImageCorruptionDetector(out, delimiter, tempPath)) {\n           detector.visit(new RandomAccessFile(inputFile, \"r\"));\n         }\n         break;\n       default:\n         System.err.println(\"Invalid processor specified : \" + processor);\n         printUsage();\n         return -1;\n       }\n       return 0;\n     } catch (EOFException e) {\n       System.err.println(\"Input file ended unexpectedly. Exiting\");\n     } catch (IOException e) {\n       System.err.println(\"Encountered exception.  Exiting: \" + e.getMessage());\n       e.printStackTrace(System.err);\n     } finally {\n       if (out !\u003d null \u0026\u0026 out !\u003d System.out) {\n         out.close();\n       }\n     }\n     return -1;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static int run(String[] args) throws Exception {\n    Options options \u003d buildOptions();\n    if (args.length \u003d\u003d 0) {\n      printUsage();\n      return 0;\n    }\n    // print help and exit with zero exit code\n    if (args.length \u003d\u003d 1 \u0026\u0026 isHelpOption(args[0])) {\n      printUsage();\n      return 0;\n    }\n    CommandLineParser parser \u003d new PosixParser();\n    CommandLine cmd;\n\n    try {\n      cmd \u003d parser.parse(options, args);\n    } catch (ParseException e) {\n      System.out.println(\"Error parsing command-line options: \");\n      printUsage();\n      return -1;\n    }\n\n    if (cmd.hasOption(\"h\")) {\n      // print help and exit with non zero exit code since\n      // it is not expected to give help and other options together.\n      printUsage();\n      return -1;\n    }\n\n    String inputFile \u003d cmd.getOptionValue(\"i\");\n    String processor \u003d cmd.getOptionValue(\"p\", \"Web\");\n    String outputFile \u003d cmd.getOptionValue(\"o\", \"-\");\n    String delimiter \u003d cmd.getOptionValue(\"delimiter\",\n        PBImageTextWriter.DEFAULT_DELIMITER);\n    String tempPath \u003d cmd.getOptionValue(\"t\", \"\");\n\n    Configuration conf \u003d new Configuration();\n    PrintStream out \u003d null;\n    try {\n      out \u003d outputFile.equals(\"-\") || \"REVERSEXML\".equalsIgnoreCase(processor) ?\n        System.out : new PrintStream(outputFile, \"UTF-8\");\n      switch (StringUtils.toUpperCase(processor)) {\n      case \"FILEDISTRIBUTION\":\n        long maxSize \u003d Long.parseLong(cmd.getOptionValue(\"maxSize\", \"0\"));\n        int step \u003d Integer.parseInt(cmd.getOptionValue(\"step\", \"0\"));\n        boolean formatOutput \u003d cmd.hasOption(\"format\");\n        try (RandomAccessFile r \u003d new RandomAccessFile(inputFile, \"r\")) {\n          new FileDistributionCalculator(conf, maxSize, step, formatOutput, out)\n            .visit(r);\n        }\n        break;\n      case \"XML\":\n        try (RandomAccessFile r \u003d new RandomAccessFile(inputFile, \"r\")) {\n          new PBImageXmlWriter(conf, out).visit(r);\n        }\n        break;\n      case \"REVERSEXML\":\n        try {\n          OfflineImageReconstructor.run(inputFile, outputFile);\n        } catch (Exception e) {\n          System.err.println(\"OfflineImageReconstructor failed: \"\n              + e.getMessage());\n          e.printStackTrace(System.err);\n          ExitUtil.terminate(1);\n        }\n        break;\n      case \"WEB\":\n        String addr \u003d cmd.getOptionValue(\"addr\", \"localhost:5978\");\n        try (WebImageViewer viewer \u003d\n            new WebImageViewer(NetUtils.createSocketAddr(addr), conf)) {\n          viewer.start(inputFile);\n        }\n        break;\n      case \"DELIMITED\":\n        boolean printStoragePolicy \u003d cmd.hasOption(\"sp\");\n        try (PBImageDelimitedTextWriter writer \u003d\n            new PBImageDelimitedTextWriter(out, delimiter,\n                tempPath, printStoragePolicy);\n            RandomAccessFile r \u003d new RandomAccessFile(inputFile, \"r\")) {\n          writer.visit(r);\n        }\n        break;\n      case \"DETECTCORRUPTION\":\n        try (PBImageCorruptionDetector detector \u003d\n            new PBImageCorruptionDetector(out, delimiter, tempPath)) {\n          detector.visit(new RandomAccessFile(inputFile, \"r\"));\n        }\n        break;\n      default:\n        System.err.println(\"Invalid processor specified : \" + processor);\n        printUsage();\n        return -1;\n      }\n      return 0;\n    } catch (EOFException e) {\n      System.err.println(\"Input file ended unexpectedly. Exiting\");\n    } catch (IOException e) {\n      System.err.println(\"Encountered exception.  Exiting: \" + e.getMessage());\n      e.printStackTrace(System.err);\n    } finally {\n      if (out !\u003d null \u0026\u0026 out !\u003d System.out) {\n        out.close();\n      }\n    }\n    return -1;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/OfflineImageViewerPB.java",
      "extendedDetails": {}
    },
    "fb10803dfa67394650072bdea327296f8ad2a744": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13818. Extend OIV to detect FSImage corruption. Contributed by Adam Antal.\n\nSigned-off-by: Wei-Chiu Chuang \u003cweichiu@apache.org\u003e\n",
      "commitDate": "03/12/18 10:34 AM",
      "commitName": "fb10803dfa67394650072bdea327296f8ad2a744",
      "commitAuthor": "Adam Antal",
      "commitDateOld": "19/10/18 5:16 PM",
      "commitNameOld": "f069d38c8d3c0bfa91b70a60e4e556ec708fc411",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 44.76,
      "commitsBetweenForRepo": 312,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,98 +1,104 @@\n   public static int run(String[] args) throws Exception {\n     Options options \u003d buildOptions();\n     if (args.length \u003d\u003d 0) {\n       printUsage();\n       return 0;\n     }\n     // print help and exit with zero exit code\n     if (args.length \u003d\u003d 1 \u0026\u0026 isHelpOption(args[0])) {\n       printUsage();\n       return 0;\n     }\n     CommandLineParser parser \u003d new PosixParser();\n     CommandLine cmd;\n \n     try {\n       cmd \u003d parser.parse(options, args);\n     } catch (ParseException e) {\n       System.out.println(\"Error parsing command-line options: \");\n       printUsage();\n       return -1;\n     }\n \n     if (cmd.hasOption(\"h\")) {\n       // print help and exit with non zero exit code since\n       // it is not expected to give help and other options together.\n       printUsage();\n       return -1;\n     }\n \n     String inputFile \u003d cmd.getOptionValue(\"i\");\n     String processor \u003d cmd.getOptionValue(\"p\", \"Web\");\n     String outputFile \u003d cmd.getOptionValue(\"o\", \"-\");\n     String delimiter \u003d cmd.getOptionValue(\"delimiter\",\n-        PBImageDelimitedTextWriter.DEFAULT_DELIMITER);\n+        PBImageTextWriter.DEFAULT_DELIMITER);\n     String tempPath \u003d cmd.getOptionValue(\"t\", \"\");\n \n     Configuration conf \u003d new Configuration();\n     PrintStream out \u003d null;\n     try {\n       out \u003d outputFile.equals(\"-\") || \"REVERSEXML\".equalsIgnoreCase(processor) ?\n         System.out : new PrintStream(outputFile, \"UTF-8\");\n       switch (StringUtils.toUpperCase(processor)) {\n       case \"FILEDISTRIBUTION\":\n         long maxSize \u003d Long.parseLong(cmd.getOptionValue(\"maxSize\", \"0\"));\n         int step \u003d Integer.parseInt(cmd.getOptionValue(\"step\", \"0\"));\n         boolean formatOutput \u003d cmd.hasOption(\"format\");\n         try (RandomAccessFile r \u003d new RandomAccessFile(inputFile, \"r\")) {\n           new FileDistributionCalculator(conf, maxSize, step, formatOutput, out)\n             .visit(r);\n         }\n         break;\n       case \"XML\":\n         try (RandomAccessFile r \u003d new RandomAccessFile(inputFile, \"r\")) {\n           new PBImageXmlWriter(conf, out).visit(r);\n         }\n         break;\n       case \"REVERSEXML\":\n         try {\n           OfflineImageReconstructor.run(inputFile, outputFile);\n         } catch (Exception e) {\n           System.err.println(\"OfflineImageReconstructor failed: \"\n               + e.getMessage());\n           e.printStackTrace(System.err);\n           ExitUtil.terminate(1);\n         }\n         break;\n       case \"WEB\":\n         String addr \u003d cmd.getOptionValue(\"addr\", \"localhost:5978\");\n         try (WebImageViewer viewer \u003d\n             new WebImageViewer(NetUtils.createSocketAddr(addr), conf)) {\n           viewer.start(inputFile);\n         }\n         break;\n       case \"DELIMITED\":\n         try (PBImageDelimitedTextWriter writer \u003d\n             new PBImageDelimitedTextWriter(out, delimiter, tempPath);\n             RandomAccessFile r \u003d new RandomAccessFile(inputFile, \"r\")) {\n           writer.visit(r);\n         }\n         break;\n+      case \"DETECTCORRUPTION\":\n+        try (PBImageCorruptionDetector detector \u003d\n+            new PBImageCorruptionDetector(out, delimiter, tempPath)) {\n+          detector.visit(new RandomAccessFile(inputFile, \"r\"));\n+        }\n+        break;\n       default:\n         System.err.println(\"Invalid processor specified : \" + processor);\n         printUsage();\n         return -1;\n       }\n       return 0;\n     } catch (EOFException e) {\n       System.err.println(\"Input file ended unexpectedly. Exiting\");\n     } catch (IOException e) {\n       System.err.println(\"Encountered exception.  Exiting: \" + e.getMessage());\n       e.printStackTrace(System.err);\n     } finally {\n       if (out !\u003d null \u0026\u0026 out !\u003d System.out) {\n         out.close();\n       }\n     }\n     return -1;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static int run(String[] args) throws Exception {\n    Options options \u003d buildOptions();\n    if (args.length \u003d\u003d 0) {\n      printUsage();\n      return 0;\n    }\n    // print help and exit with zero exit code\n    if (args.length \u003d\u003d 1 \u0026\u0026 isHelpOption(args[0])) {\n      printUsage();\n      return 0;\n    }\n    CommandLineParser parser \u003d new PosixParser();\n    CommandLine cmd;\n\n    try {\n      cmd \u003d parser.parse(options, args);\n    } catch (ParseException e) {\n      System.out.println(\"Error parsing command-line options: \");\n      printUsage();\n      return -1;\n    }\n\n    if (cmd.hasOption(\"h\")) {\n      // print help and exit with non zero exit code since\n      // it is not expected to give help and other options together.\n      printUsage();\n      return -1;\n    }\n\n    String inputFile \u003d cmd.getOptionValue(\"i\");\n    String processor \u003d cmd.getOptionValue(\"p\", \"Web\");\n    String outputFile \u003d cmd.getOptionValue(\"o\", \"-\");\n    String delimiter \u003d cmd.getOptionValue(\"delimiter\",\n        PBImageTextWriter.DEFAULT_DELIMITER);\n    String tempPath \u003d cmd.getOptionValue(\"t\", \"\");\n\n    Configuration conf \u003d new Configuration();\n    PrintStream out \u003d null;\n    try {\n      out \u003d outputFile.equals(\"-\") || \"REVERSEXML\".equalsIgnoreCase(processor) ?\n        System.out : new PrintStream(outputFile, \"UTF-8\");\n      switch (StringUtils.toUpperCase(processor)) {\n      case \"FILEDISTRIBUTION\":\n        long maxSize \u003d Long.parseLong(cmd.getOptionValue(\"maxSize\", \"0\"));\n        int step \u003d Integer.parseInt(cmd.getOptionValue(\"step\", \"0\"));\n        boolean formatOutput \u003d cmd.hasOption(\"format\");\n        try (RandomAccessFile r \u003d new RandomAccessFile(inputFile, \"r\")) {\n          new FileDistributionCalculator(conf, maxSize, step, formatOutput, out)\n            .visit(r);\n        }\n        break;\n      case \"XML\":\n        try (RandomAccessFile r \u003d new RandomAccessFile(inputFile, \"r\")) {\n          new PBImageXmlWriter(conf, out).visit(r);\n        }\n        break;\n      case \"REVERSEXML\":\n        try {\n          OfflineImageReconstructor.run(inputFile, outputFile);\n        } catch (Exception e) {\n          System.err.println(\"OfflineImageReconstructor failed: \"\n              + e.getMessage());\n          e.printStackTrace(System.err);\n          ExitUtil.terminate(1);\n        }\n        break;\n      case \"WEB\":\n        String addr \u003d cmd.getOptionValue(\"addr\", \"localhost:5978\");\n        try (WebImageViewer viewer \u003d\n            new WebImageViewer(NetUtils.createSocketAddr(addr), conf)) {\n          viewer.start(inputFile);\n        }\n        break;\n      case \"DELIMITED\":\n        try (PBImageDelimitedTextWriter writer \u003d\n            new PBImageDelimitedTextWriter(out, delimiter, tempPath);\n            RandomAccessFile r \u003d new RandomAccessFile(inputFile, \"r\")) {\n          writer.visit(r);\n        }\n        break;\n      case \"DETECTCORRUPTION\":\n        try (PBImageCorruptionDetector detector \u003d\n            new PBImageCorruptionDetector(out, delimiter, tempPath)) {\n          detector.visit(new RandomAccessFile(inputFile, \"r\"));\n        }\n        break;\n      default:\n        System.err.println(\"Invalid processor specified : \" + processor);\n        printUsage();\n        return -1;\n      }\n      return 0;\n    } catch (EOFException e) {\n      System.err.println(\"Input file ended unexpectedly. Exiting\");\n    } catch (IOException e) {\n      System.err.println(\"Encountered exception.  Exiting: \" + e.getMessage());\n      e.printStackTrace(System.err);\n    } finally {\n      if (out !\u003d null \u0026\u0026 out !\u003d System.out) {\n        out.close();\n      }\n    }\n    return -1;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/OfflineImageViewerPB.java",
      "extendedDetails": {}
    },
    "f069d38c8d3c0bfa91b70a60e4e556ec708fc411": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13983. TestOfflineImageViewer crashes in windows. Contributed by Vinayakumar B.\n",
      "commitDate": "19/10/18 5:16 PM",
      "commitName": "f069d38c8d3c0bfa91b70a60e4e556ec708fc411",
      "commitAuthor": "Inigo Goiri",
      "commitDateOld": "06/09/18 2:48 PM",
      "commitNameOld": "eca1a4bfe952fc184fe90dde50bac9b0e5293568",
      "commitAuthorOld": "Giovanni Matteo Fumarola",
      "daysBetweenCommits": 43.1,
      "commitsBetweenForRepo": 492,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,88 +1,98 @@\n   public static int run(String[] args) throws Exception {\n     Options options \u003d buildOptions();\n     if (args.length \u003d\u003d 0) {\n       printUsage();\n       return 0;\n     }\n     // print help and exit with zero exit code\n     if (args.length \u003d\u003d 1 \u0026\u0026 isHelpOption(args[0])) {\n       printUsage();\n       return 0;\n     }\n     CommandLineParser parser \u003d new PosixParser();\n     CommandLine cmd;\n \n     try {\n       cmd \u003d parser.parse(options, args);\n     } catch (ParseException e) {\n       System.out.println(\"Error parsing command-line options: \");\n       printUsage();\n       return -1;\n     }\n \n     if (cmd.hasOption(\"h\")) {\n       // print help and exit with non zero exit code since\n       // it is not expected to give help and other options together.\n       printUsage();\n       return -1;\n     }\n \n     String inputFile \u003d cmd.getOptionValue(\"i\");\n     String processor \u003d cmd.getOptionValue(\"p\", \"Web\");\n     String outputFile \u003d cmd.getOptionValue(\"o\", \"-\");\n     String delimiter \u003d cmd.getOptionValue(\"delimiter\",\n         PBImageDelimitedTextWriter.DEFAULT_DELIMITER);\n     String tempPath \u003d cmd.getOptionValue(\"t\", \"\");\n \n     Configuration conf \u003d new Configuration();\n-    try (PrintStream out \u003d outputFile.equals(\"-\") ?\n-        System.out : new PrintStream(outputFile, \"UTF-8\")) {\n+    PrintStream out \u003d null;\n+    try {\n+      out \u003d outputFile.equals(\"-\") || \"REVERSEXML\".equalsIgnoreCase(processor) ?\n+        System.out : new PrintStream(outputFile, \"UTF-8\");\n       switch (StringUtils.toUpperCase(processor)) {\n       case \"FILEDISTRIBUTION\":\n         long maxSize \u003d Long.parseLong(cmd.getOptionValue(\"maxSize\", \"0\"));\n         int step \u003d Integer.parseInt(cmd.getOptionValue(\"step\", \"0\"));\n         boolean formatOutput \u003d cmd.hasOption(\"format\");\n-        new FileDistributionCalculator(conf, maxSize, step, formatOutput, out)\n-            .visit(new RandomAccessFile(inputFile, \"r\"));\n+        try (RandomAccessFile r \u003d new RandomAccessFile(inputFile, \"r\")) {\n+          new FileDistributionCalculator(conf, maxSize, step, formatOutput, out)\n+            .visit(r);\n+        }\n         break;\n       case \"XML\":\n-        new PBImageXmlWriter(conf, out).visit(new RandomAccessFile(inputFile,\n-            \"r\"));\n+        try (RandomAccessFile r \u003d new RandomAccessFile(inputFile, \"r\")) {\n+          new PBImageXmlWriter(conf, out).visit(r);\n+        }\n         break;\n       case \"REVERSEXML\":\n         try {\n           OfflineImageReconstructor.run(inputFile, outputFile);\n         } catch (Exception e) {\n           System.err.println(\"OfflineImageReconstructor failed: \"\n               + e.getMessage());\n           e.printStackTrace(System.err);\n-          System.exit(1);\n+          ExitUtil.terminate(1);\n         }\n         break;\n       case \"WEB\":\n         String addr \u003d cmd.getOptionValue(\"addr\", \"localhost:5978\");\n         try (WebImageViewer viewer \u003d\n             new WebImageViewer(NetUtils.createSocketAddr(addr), conf)) {\n           viewer.start(inputFile);\n         }\n         break;\n       case \"DELIMITED\":\n         try (PBImageDelimitedTextWriter writer \u003d\n-            new PBImageDelimitedTextWriter(out, delimiter, tempPath)) {\n-          writer.visit(new RandomAccessFile(inputFile, \"r\"));\n+            new PBImageDelimitedTextWriter(out, delimiter, tempPath);\n+            RandomAccessFile r \u003d new RandomAccessFile(inputFile, \"r\")) {\n+          writer.visit(r);\n         }\n         break;\n       default:\n         System.err.println(\"Invalid processor specified : \" + processor);\n         printUsage();\n         return -1;\n       }\n       return 0;\n     } catch (EOFException e) {\n       System.err.println(\"Input file ended unexpectedly. Exiting\");\n     } catch (IOException e) {\n       System.err.println(\"Encountered exception.  Exiting: \" + e.getMessage());\n       e.printStackTrace(System.err);\n+    } finally {\n+      if (out !\u003d null \u0026\u0026 out !\u003d System.out) {\n+        out.close();\n+      }\n     }\n     return -1;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static int run(String[] args) throws Exception {\n    Options options \u003d buildOptions();\n    if (args.length \u003d\u003d 0) {\n      printUsage();\n      return 0;\n    }\n    // print help and exit with zero exit code\n    if (args.length \u003d\u003d 1 \u0026\u0026 isHelpOption(args[0])) {\n      printUsage();\n      return 0;\n    }\n    CommandLineParser parser \u003d new PosixParser();\n    CommandLine cmd;\n\n    try {\n      cmd \u003d parser.parse(options, args);\n    } catch (ParseException e) {\n      System.out.println(\"Error parsing command-line options: \");\n      printUsage();\n      return -1;\n    }\n\n    if (cmd.hasOption(\"h\")) {\n      // print help and exit with non zero exit code since\n      // it is not expected to give help and other options together.\n      printUsage();\n      return -1;\n    }\n\n    String inputFile \u003d cmd.getOptionValue(\"i\");\n    String processor \u003d cmd.getOptionValue(\"p\", \"Web\");\n    String outputFile \u003d cmd.getOptionValue(\"o\", \"-\");\n    String delimiter \u003d cmd.getOptionValue(\"delimiter\",\n        PBImageDelimitedTextWriter.DEFAULT_DELIMITER);\n    String tempPath \u003d cmd.getOptionValue(\"t\", \"\");\n\n    Configuration conf \u003d new Configuration();\n    PrintStream out \u003d null;\n    try {\n      out \u003d outputFile.equals(\"-\") || \"REVERSEXML\".equalsIgnoreCase(processor) ?\n        System.out : new PrintStream(outputFile, \"UTF-8\");\n      switch (StringUtils.toUpperCase(processor)) {\n      case \"FILEDISTRIBUTION\":\n        long maxSize \u003d Long.parseLong(cmd.getOptionValue(\"maxSize\", \"0\"));\n        int step \u003d Integer.parseInt(cmd.getOptionValue(\"step\", \"0\"));\n        boolean formatOutput \u003d cmd.hasOption(\"format\");\n        try (RandomAccessFile r \u003d new RandomAccessFile(inputFile, \"r\")) {\n          new FileDistributionCalculator(conf, maxSize, step, formatOutput, out)\n            .visit(r);\n        }\n        break;\n      case \"XML\":\n        try (RandomAccessFile r \u003d new RandomAccessFile(inputFile, \"r\")) {\n          new PBImageXmlWriter(conf, out).visit(r);\n        }\n        break;\n      case \"REVERSEXML\":\n        try {\n          OfflineImageReconstructor.run(inputFile, outputFile);\n        } catch (Exception e) {\n          System.err.println(\"OfflineImageReconstructor failed: \"\n              + e.getMessage());\n          e.printStackTrace(System.err);\n          ExitUtil.terminate(1);\n        }\n        break;\n      case \"WEB\":\n        String addr \u003d cmd.getOptionValue(\"addr\", \"localhost:5978\");\n        try (WebImageViewer viewer \u003d\n            new WebImageViewer(NetUtils.createSocketAddr(addr), conf)) {\n          viewer.start(inputFile);\n        }\n        break;\n      case \"DELIMITED\":\n        try (PBImageDelimitedTextWriter writer \u003d\n            new PBImageDelimitedTextWriter(out, delimiter, tempPath);\n            RandomAccessFile r \u003d new RandomAccessFile(inputFile, \"r\")) {\n          writer.visit(r);\n        }\n        break;\n      default:\n        System.err.println(\"Invalid processor specified : \" + processor);\n        printUsage();\n        return -1;\n      }\n      return 0;\n    } catch (EOFException e) {\n      System.err.println(\"Input file ended unexpectedly. Exiting\");\n    } catch (IOException e) {\n      System.err.println(\"Encountered exception.  Exiting: \" + e.getMessage());\n      e.printStackTrace(System.err);\n    } finally {\n      if (out !\u003d null \u0026\u0026 out !\u003d System.out) {\n        out.close();\n      }\n    }\n    return -1;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/OfflineImageViewerPB.java",
      "extendedDetails": {}
    },
    "9654dd1f472052c4bb4a48a7412149c2e4859a10": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12950. [oiv] ls will fail in secure cluster. Contributed by Wei-Chiu Chuang.\n",
      "commitDate": "06/06/18 9:46 PM",
      "commitName": "9654dd1f472052c4bb4a48a7412149c2e4859a10",
      "commitAuthor": "Brahma Reddy Battula",
      "commitDateOld": "22/09/17 9:47 AM",
      "commitNameOld": "08fca508e66e8eddc5d8fd1608ec0c9cd54fc990",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 257.5,
      "commitsBetweenForRepo": 2424,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,88 +1,88 @@\n   public static int run(String[] args) throws Exception {\n     Options options \u003d buildOptions();\n     if (args.length \u003d\u003d 0) {\n       printUsage();\n       return 0;\n     }\n     // print help and exit with zero exit code\n     if (args.length \u003d\u003d 1 \u0026\u0026 isHelpOption(args[0])) {\n       printUsage();\n       return 0;\n     }\n     CommandLineParser parser \u003d new PosixParser();\n     CommandLine cmd;\n \n     try {\n       cmd \u003d parser.parse(options, args);\n     } catch (ParseException e) {\n       System.out.println(\"Error parsing command-line options: \");\n       printUsage();\n       return -1;\n     }\n \n     if (cmd.hasOption(\"h\")) {\n       // print help and exit with non zero exit code since\n       // it is not expected to give help and other options together.\n       printUsage();\n       return -1;\n     }\n \n     String inputFile \u003d cmd.getOptionValue(\"i\");\n     String processor \u003d cmd.getOptionValue(\"p\", \"Web\");\n     String outputFile \u003d cmd.getOptionValue(\"o\", \"-\");\n     String delimiter \u003d cmd.getOptionValue(\"delimiter\",\n         PBImageDelimitedTextWriter.DEFAULT_DELIMITER);\n     String tempPath \u003d cmd.getOptionValue(\"t\", \"\");\n \n     Configuration conf \u003d new Configuration();\n     try (PrintStream out \u003d outputFile.equals(\"-\") ?\n         System.out : new PrintStream(outputFile, \"UTF-8\")) {\n       switch (StringUtils.toUpperCase(processor)) {\n       case \"FILEDISTRIBUTION\":\n         long maxSize \u003d Long.parseLong(cmd.getOptionValue(\"maxSize\", \"0\"));\n         int step \u003d Integer.parseInt(cmd.getOptionValue(\"step\", \"0\"));\n         boolean formatOutput \u003d cmd.hasOption(\"format\");\n         new FileDistributionCalculator(conf, maxSize, step, formatOutput, out)\n             .visit(new RandomAccessFile(inputFile, \"r\"));\n         break;\n       case \"XML\":\n         new PBImageXmlWriter(conf, out).visit(new RandomAccessFile(inputFile,\n             \"r\"));\n         break;\n       case \"REVERSEXML\":\n         try {\n           OfflineImageReconstructor.run(inputFile, outputFile);\n         } catch (Exception e) {\n           System.err.println(\"OfflineImageReconstructor failed: \"\n               + e.getMessage());\n           e.printStackTrace(System.err);\n           System.exit(1);\n         }\n         break;\n       case \"WEB\":\n         String addr \u003d cmd.getOptionValue(\"addr\", \"localhost:5978\");\n         try (WebImageViewer viewer \u003d\n-            new WebImageViewer(NetUtils.createSocketAddr(addr))) {\n+            new WebImageViewer(NetUtils.createSocketAddr(addr), conf)) {\n           viewer.start(inputFile);\n         }\n         break;\n       case \"DELIMITED\":\n         try (PBImageDelimitedTextWriter writer \u003d\n             new PBImageDelimitedTextWriter(out, delimiter, tempPath)) {\n           writer.visit(new RandomAccessFile(inputFile, \"r\"));\n         }\n         break;\n       default:\n         System.err.println(\"Invalid processor specified : \" + processor);\n         printUsage();\n         return -1;\n       }\n       return 0;\n     } catch (EOFException e) {\n       System.err.println(\"Input file ended unexpectedly. Exiting\");\n     } catch (IOException e) {\n       System.err.println(\"Encountered exception.  Exiting: \" + e.getMessage());\n       e.printStackTrace(System.err);\n     }\n     return -1;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static int run(String[] args) throws Exception {\n    Options options \u003d buildOptions();\n    if (args.length \u003d\u003d 0) {\n      printUsage();\n      return 0;\n    }\n    // print help and exit with zero exit code\n    if (args.length \u003d\u003d 1 \u0026\u0026 isHelpOption(args[0])) {\n      printUsage();\n      return 0;\n    }\n    CommandLineParser parser \u003d new PosixParser();\n    CommandLine cmd;\n\n    try {\n      cmd \u003d parser.parse(options, args);\n    } catch (ParseException e) {\n      System.out.println(\"Error parsing command-line options: \");\n      printUsage();\n      return -1;\n    }\n\n    if (cmd.hasOption(\"h\")) {\n      // print help and exit with non zero exit code since\n      // it is not expected to give help and other options together.\n      printUsage();\n      return -1;\n    }\n\n    String inputFile \u003d cmd.getOptionValue(\"i\");\n    String processor \u003d cmd.getOptionValue(\"p\", \"Web\");\n    String outputFile \u003d cmd.getOptionValue(\"o\", \"-\");\n    String delimiter \u003d cmd.getOptionValue(\"delimiter\",\n        PBImageDelimitedTextWriter.DEFAULT_DELIMITER);\n    String tempPath \u003d cmd.getOptionValue(\"t\", \"\");\n\n    Configuration conf \u003d new Configuration();\n    try (PrintStream out \u003d outputFile.equals(\"-\") ?\n        System.out : new PrintStream(outputFile, \"UTF-8\")) {\n      switch (StringUtils.toUpperCase(processor)) {\n      case \"FILEDISTRIBUTION\":\n        long maxSize \u003d Long.parseLong(cmd.getOptionValue(\"maxSize\", \"0\"));\n        int step \u003d Integer.parseInt(cmd.getOptionValue(\"step\", \"0\"));\n        boolean formatOutput \u003d cmd.hasOption(\"format\");\n        new FileDistributionCalculator(conf, maxSize, step, formatOutput, out)\n            .visit(new RandomAccessFile(inputFile, \"r\"));\n        break;\n      case \"XML\":\n        new PBImageXmlWriter(conf, out).visit(new RandomAccessFile(inputFile,\n            \"r\"));\n        break;\n      case \"REVERSEXML\":\n        try {\n          OfflineImageReconstructor.run(inputFile, outputFile);\n        } catch (Exception e) {\n          System.err.println(\"OfflineImageReconstructor failed: \"\n              + e.getMessage());\n          e.printStackTrace(System.err);\n          System.exit(1);\n        }\n        break;\n      case \"WEB\":\n        String addr \u003d cmd.getOptionValue(\"addr\", \"localhost:5978\");\n        try (WebImageViewer viewer \u003d\n            new WebImageViewer(NetUtils.createSocketAddr(addr), conf)) {\n          viewer.start(inputFile);\n        }\n        break;\n      case \"DELIMITED\":\n        try (PBImageDelimitedTextWriter writer \u003d\n            new PBImageDelimitedTextWriter(out, delimiter, tempPath)) {\n          writer.visit(new RandomAccessFile(inputFile, \"r\"));\n        }\n        break;\n      default:\n        System.err.println(\"Invalid processor specified : \" + processor);\n        printUsage();\n        return -1;\n      }\n      return 0;\n    } catch (EOFException e) {\n      System.err.println(\"Input file ended unexpectedly. Exiting\");\n    } catch (IOException e) {\n      System.err.println(\"Encountered exception.  Exiting: \" + e.getMessage());\n      e.printStackTrace(System.err);\n    }\n    return -1;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/OfflineImageViewerPB.java",
      "extendedDetails": {}
    },
    "08fca508e66e8eddc5d8fd1608ec0c9cd54fc990": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12530. Processor argument in Offline Image Viewer should be case insensitive. Contributed by Hanisha Koneru.\n",
      "commitDate": "22/09/17 9:47 AM",
      "commitName": "08fca508e66e8eddc5d8fd1608ec0c9cd54fc990",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "07/09/16 11:13 PM",
      "commitNameOld": "63f594892ecd4687e37a99790288e36eb278849f",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 379.44,
      "commitsBetweenForRepo": 2423,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,88 +1,88 @@\n   public static int run(String[] args) throws Exception {\n     Options options \u003d buildOptions();\n     if (args.length \u003d\u003d 0) {\n       printUsage();\n       return 0;\n     }\n     // print help and exit with zero exit code\n     if (args.length \u003d\u003d 1 \u0026\u0026 isHelpOption(args[0])) {\n       printUsage();\n       return 0;\n     }\n     CommandLineParser parser \u003d new PosixParser();\n     CommandLine cmd;\n \n     try {\n       cmd \u003d parser.parse(options, args);\n     } catch (ParseException e) {\n       System.out.println(\"Error parsing command-line options: \");\n       printUsage();\n       return -1;\n     }\n \n     if (cmd.hasOption(\"h\")) {\n       // print help and exit with non zero exit code since\n       // it is not expected to give help and other options together.\n       printUsage();\n       return -1;\n     }\n \n     String inputFile \u003d cmd.getOptionValue(\"i\");\n     String processor \u003d cmd.getOptionValue(\"p\", \"Web\");\n     String outputFile \u003d cmd.getOptionValue(\"o\", \"-\");\n     String delimiter \u003d cmd.getOptionValue(\"delimiter\",\n         PBImageDelimitedTextWriter.DEFAULT_DELIMITER);\n     String tempPath \u003d cmd.getOptionValue(\"t\", \"\");\n \n     Configuration conf \u003d new Configuration();\n     try (PrintStream out \u003d outputFile.equals(\"-\") ?\n         System.out : new PrintStream(outputFile, \"UTF-8\")) {\n-      switch (processor) {\n-      case \"FileDistribution\":\n+      switch (StringUtils.toUpperCase(processor)) {\n+      case \"FILEDISTRIBUTION\":\n         long maxSize \u003d Long.parseLong(cmd.getOptionValue(\"maxSize\", \"0\"));\n         int step \u003d Integer.parseInt(cmd.getOptionValue(\"step\", \"0\"));\n         boolean formatOutput \u003d cmd.hasOption(\"format\");\n         new FileDistributionCalculator(conf, maxSize, step, formatOutput, out)\n             .visit(new RandomAccessFile(inputFile, \"r\"));\n         break;\n       case \"XML\":\n         new PBImageXmlWriter(conf, out).visit(new RandomAccessFile(inputFile,\n             \"r\"));\n         break;\n-      case \"ReverseXML\":\n+      case \"REVERSEXML\":\n         try {\n           OfflineImageReconstructor.run(inputFile, outputFile);\n         } catch (Exception e) {\n           System.err.println(\"OfflineImageReconstructor failed: \"\n               + e.getMessage());\n           e.printStackTrace(System.err);\n           System.exit(1);\n         }\n         break;\n-      case \"Web\":\n+      case \"WEB\":\n         String addr \u003d cmd.getOptionValue(\"addr\", \"localhost:5978\");\n         try (WebImageViewer viewer \u003d\n             new WebImageViewer(NetUtils.createSocketAddr(addr))) {\n           viewer.start(inputFile);\n         }\n         break;\n-      case \"Delimited\":\n+      case \"DELIMITED\":\n         try (PBImageDelimitedTextWriter writer \u003d\n             new PBImageDelimitedTextWriter(out, delimiter, tempPath)) {\n           writer.visit(new RandomAccessFile(inputFile, \"r\"));\n         }\n         break;\n       default:\n         System.err.println(\"Invalid processor specified : \" + processor);\n         printUsage();\n         return -1;\n       }\n       return 0;\n     } catch (EOFException e) {\n       System.err.println(\"Input file ended unexpectedly. Exiting\");\n     } catch (IOException e) {\n       System.err.println(\"Encountered exception.  Exiting: \" + e.getMessage());\n       e.printStackTrace(System.err);\n     }\n     return -1;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static int run(String[] args) throws Exception {\n    Options options \u003d buildOptions();\n    if (args.length \u003d\u003d 0) {\n      printUsage();\n      return 0;\n    }\n    // print help and exit with zero exit code\n    if (args.length \u003d\u003d 1 \u0026\u0026 isHelpOption(args[0])) {\n      printUsage();\n      return 0;\n    }\n    CommandLineParser parser \u003d new PosixParser();\n    CommandLine cmd;\n\n    try {\n      cmd \u003d parser.parse(options, args);\n    } catch (ParseException e) {\n      System.out.println(\"Error parsing command-line options: \");\n      printUsage();\n      return -1;\n    }\n\n    if (cmd.hasOption(\"h\")) {\n      // print help and exit with non zero exit code since\n      // it is not expected to give help and other options together.\n      printUsage();\n      return -1;\n    }\n\n    String inputFile \u003d cmd.getOptionValue(\"i\");\n    String processor \u003d cmd.getOptionValue(\"p\", \"Web\");\n    String outputFile \u003d cmd.getOptionValue(\"o\", \"-\");\n    String delimiter \u003d cmd.getOptionValue(\"delimiter\",\n        PBImageDelimitedTextWriter.DEFAULT_DELIMITER);\n    String tempPath \u003d cmd.getOptionValue(\"t\", \"\");\n\n    Configuration conf \u003d new Configuration();\n    try (PrintStream out \u003d outputFile.equals(\"-\") ?\n        System.out : new PrintStream(outputFile, \"UTF-8\")) {\n      switch (StringUtils.toUpperCase(processor)) {\n      case \"FILEDISTRIBUTION\":\n        long maxSize \u003d Long.parseLong(cmd.getOptionValue(\"maxSize\", \"0\"));\n        int step \u003d Integer.parseInt(cmd.getOptionValue(\"step\", \"0\"));\n        boolean formatOutput \u003d cmd.hasOption(\"format\");\n        new FileDistributionCalculator(conf, maxSize, step, formatOutput, out)\n            .visit(new RandomAccessFile(inputFile, \"r\"));\n        break;\n      case \"XML\":\n        new PBImageXmlWriter(conf, out).visit(new RandomAccessFile(inputFile,\n            \"r\"));\n        break;\n      case \"REVERSEXML\":\n        try {\n          OfflineImageReconstructor.run(inputFile, outputFile);\n        } catch (Exception e) {\n          System.err.println(\"OfflineImageReconstructor failed: \"\n              + e.getMessage());\n          e.printStackTrace(System.err);\n          System.exit(1);\n        }\n        break;\n      case \"WEB\":\n        String addr \u003d cmd.getOptionValue(\"addr\", \"localhost:5978\");\n        try (WebImageViewer viewer \u003d\n            new WebImageViewer(NetUtils.createSocketAddr(addr))) {\n          viewer.start(inputFile);\n        }\n        break;\n      case \"DELIMITED\":\n        try (PBImageDelimitedTextWriter writer \u003d\n            new PBImageDelimitedTextWriter(out, delimiter, tempPath)) {\n          writer.visit(new RandomAccessFile(inputFile, \"r\"));\n        }\n        break;\n      default:\n        System.err.println(\"Invalid processor specified : \" + processor);\n        printUsage();\n        return -1;\n      }\n      return 0;\n    } catch (EOFException e) {\n      System.err.println(\"Input file ended unexpectedly. Exiting\");\n    } catch (IOException e) {\n      System.err.println(\"Encountered exception.  Exiting: \" + e.getMessage());\n      e.printStackTrace(System.err);\n    }\n    return -1;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/OfflineImageViewerPB.java",
      "extendedDetails": {}
    },
    "63f594892ecd4687e37a99790288e36eb278849f": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10778. Add -format option to make the output of FileDistribution processor human-readable in OfflineImageViewer.\n",
      "commitDate": "07/09/16 11:13 PM",
      "commitName": "63f594892ecd4687e37a99790288e36eb278849f",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "10/03/16 1:43 PM",
      "commitNameOld": "79961ecea888e0ee85b7a75e239bb6bb3335eb17",
      "commitAuthorOld": "Colin Patrick Mccabe",
      "daysBetweenCommits": 181.35,
      "commitsBetweenForRepo": 1285,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,87 +1,88 @@\n   public static int run(String[] args) throws Exception {\n     Options options \u003d buildOptions();\n     if (args.length \u003d\u003d 0) {\n       printUsage();\n       return 0;\n     }\n     // print help and exit with zero exit code\n     if (args.length \u003d\u003d 1 \u0026\u0026 isHelpOption(args[0])) {\n       printUsage();\n       return 0;\n     }\n     CommandLineParser parser \u003d new PosixParser();\n     CommandLine cmd;\n \n     try {\n       cmd \u003d parser.parse(options, args);\n     } catch (ParseException e) {\n       System.out.println(\"Error parsing command-line options: \");\n       printUsage();\n       return -1;\n     }\n \n     if (cmd.hasOption(\"h\")) {\n       // print help and exit with non zero exit code since\n       // it is not expected to give help and other options together.\n       printUsage();\n       return -1;\n     }\n \n     String inputFile \u003d cmd.getOptionValue(\"i\");\n     String processor \u003d cmd.getOptionValue(\"p\", \"Web\");\n     String outputFile \u003d cmd.getOptionValue(\"o\", \"-\");\n     String delimiter \u003d cmd.getOptionValue(\"delimiter\",\n         PBImageDelimitedTextWriter.DEFAULT_DELIMITER);\n     String tempPath \u003d cmd.getOptionValue(\"t\", \"\");\n \n     Configuration conf \u003d new Configuration();\n     try (PrintStream out \u003d outputFile.equals(\"-\") ?\n         System.out : new PrintStream(outputFile, \"UTF-8\")) {\n       switch (processor) {\n-        case \"FileDistribution\":\n-          long maxSize \u003d Long.parseLong(cmd.getOptionValue(\"maxSize\", \"0\"));\n-          int step \u003d Integer.parseInt(cmd.getOptionValue(\"step\", \"0\"));\n-          new FileDistributionCalculator(conf, maxSize, step, out).visit(\n-              new RandomAccessFile(inputFile, \"r\"));\n-          break;\n-        case \"XML\":\n-          new PBImageXmlWriter(conf, out).visit(\n-              new RandomAccessFile(inputFile, \"r\"));\n-          break;\n-        case \"ReverseXML\":\n-          try {\n-            OfflineImageReconstructor.run(inputFile, outputFile);\n-          } catch (Exception e) {\n-            System.err.println(\"OfflineImageReconstructor failed: \" +\n-                e.getMessage());\n-            e.printStackTrace(System.err);\n-            System.exit(1);\n-          }\n-          break;\n-        case \"Web\":\n-          String addr \u003d cmd.getOptionValue(\"addr\", \"localhost:5978\");\n-          try (WebImageViewer viewer \u003d new WebImageViewer(\n-              NetUtils.createSocketAddr(addr))) {\n-            viewer.start(inputFile);\n-          }\n-          break;\n-        case \"Delimited\":\n-          try (PBImageDelimitedTextWriter writer \u003d\n-              new PBImageDelimitedTextWriter(out, delimiter, tempPath)) {\n-            writer.visit(new RandomAccessFile(inputFile, \"r\"));\n-          }\n-          break;\n-        default:\n-          System.err.println(\"Invalid processor specified : \" + processor);\n-          printUsage();\n-          return -1;\n+      case \"FileDistribution\":\n+        long maxSize \u003d Long.parseLong(cmd.getOptionValue(\"maxSize\", \"0\"));\n+        int step \u003d Integer.parseInt(cmd.getOptionValue(\"step\", \"0\"));\n+        boolean formatOutput \u003d cmd.hasOption(\"format\");\n+        new FileDistributionCalculator(conf, maxSize, step, formatOutput, out)\n+            .visit(new RandomAccessFile(inputFile, \"r\"));\n+        break;\n+      case \"XML\":\n+        new PBImageXmlWriter(conf, out).visit(new RandomAccessFile(inputFile,\n+            \"r\"));\n+        break;\n+      case \"ReverseXML\":\n+        try {\n+          OfflineImageReconstructor.run(inputFile, outputFile);\n+        } catch (Exception e) {\n+          System.err.println(\"OfflineImageReconstructor failed: \"\n+              + e.getMessage());\n+          e.printStackTrace(System.err);\n+          System.exit(1);\n+        }\n+        break;\n+      case \"Web\":\n+        String addr \u003d cmd.getOptionValue(\"addr\", \"localhost:5978\");\n+        try (WebImageViewer viewer \u003d\n+            new WebImageViewer(NetUtils.createSocketAddr(addr))) {\n+          viewer.start(inputFile);\n+        }\n+        break;\n+      case \"Delimited\":\n+        try (PBImageDelimitedTextWriter writer \u003d\n+            new PBImageDelimitedTextWriter(out, delimiter, tempPath)) {\n+          writer.visit(new RandomAccessFile(inputFile, \"r\"));\n+        }\n+        break;\n+      default:\n+        System.err.println(\"Invalid processor specified : \" + processor);\n+        printUsage();\n+        return -1;\n       }\n       return 0;\n     } catch (EOFException e) {\n       System.err.println(\"Input file ended unexpectedly. Exiting\");\n     } catch (IOException e) {\n       System.err.println(\"Encountered exception.  Exiting: \" + e.getMessage());\n       e.printStackTrace(System.err);\n     }\n     return -1;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static int run(String[] args) throws Exception {\n    Options options \u003d buildOptions();\n    if (args.length \u003d\u003d 0) {\n      printUsage();\n      return 0;\n    }\n    // print help and exit with zero exit code\n    if (args.length \u003d\u003d 1 \u0026\u0026 isHelpOption(args[0])) {\n      printUsage();\n      return 0;\n    }\n    CommandLineParser parser \u003d new PosixParser();\n    CommandLine cmd;\n\n    try {\n      cmd \u003d parser.parse(options, args);\n    } catch (ParseException e) {\n      System.out.println(\"Error parsing command-line options: \");\n      printUsage();\n      return -1;\n    }\n\n    if (cmd.hasOption(\"h\")) {\n      // print help and exit with non zero exit code since\n      // it is not expected to give help and other options together.\n      printUsage();\n      return -1;\n    }\n\n    String inputFile \u003d cmd.getOptionValue(\"i\");\n    String processor \u003d cmd.getOptionValue(\"p\", \"Web\");\n    String outputFile \u003d cmd.getOptionValue(\"o\", \"-\");\n    String delimiter \u003d cmd.getOptionValue(\"delimiter\",\n        PBImageDelimitedTextWriter.DEFAULT_DELIMITER);\n    String tempPath \u003d cmd.getOptionValue(\"t\", \"\");\n\n    Configuration conf \u003d new Configuration();\n    try (PrintStream out \u003d outputFile.equals(\"-\") ?\n        System.out : new PrintStream(outputFile, \"UTF-8\")) {\n      switch (processor) {\n      case \"FileDistribution\":\n        long maxSize \u003d Long.parseLong(cmd.getOptionValue(\"maxSize\", \"0\"));\n        int step \u003d Integer.parseInt(cmd.getOptionValue(\"step\", \"0\"));\n        boolean formatOutput \u003d cmd.hasOption(\"format\");\n        new FileDistributionCalculator(conf, maxSize, step, formatOutput, out)\n            .visit(new RandomAccessFile(inputFile, \"r\"));\n        break;\n      case \"XML\":\n        new PBImageXmlWriter(conf, out).visit(new RandomAccessFile(inputFile,\n            \"r\"));\n        break;\n      case \"ReverseXML\":\n        try {\n          OfflineImageReconstructor.run(inputFile, outputFile);\n        } catch (Exception e) {\n          System.err.println(\"OfflineImageReconstructor failed: \"\n              + e.getMessage());\n          e.printStackTrace(System.err);\n          System.exit(1);\n        }\n        break;\n      case \"Web\":\n        String addr \u003d cmd.getOptionValue(\"addr\", \"localhost:5978\");\n        try (WebImageViewer viewer \u003d\n            new WebImageViewer(NetUtils.createSocketAddr(addr))) {\n          viewer.start(inputFile);\n        }\n        break;\n      case \"Delimited\":\n        try (PBImageDelimitedTextWriter writer \u003d\n            new PBImageDelimitedTextWriter(out, delimiter, tempPath)) {\n          writer.visit(new RandomAccessFile(inputFile, \"r\"));\n        }\n        break;\n      default:\n        System.err.println(\"Invalid processor specified : \" + processor);\n        printUsage();\n        return -1;\n      }\n      return 0;\n    } catch (EOFException e) {\n      System.err.println(\"Input file ended unexpectedly. Exiting\");\n    } catch (IOException e) {\n      System.err.println(\"Encountered exception.  Exiting: \" + e.getMessage());\n      e.printStackTrace(System.err);\n    }\n    return -1;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/OfflineImageViewerPB.java",
      "extendedDetails": {}
    },
    "700b0e4019cf483f7532609711812150b8c44742": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9835. OIV: add ReverseXML processor which reconstructs an fsimage from an XML file (cmccabe)\n",
      "commitDate": "02/03/16 5:56 PM",
      "commitName": "700b0e4019cf483f7532609711812150b8c44742",
      "commitAuthor": "Colin Patrick Mccabe",
      "commitDateOld": "15/10/15 5:07 AM",
      "commitNameOld": "08f5de1ef55f637b3bbde0ace28b42f155e285a1",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 139.58,
      "commitsBetweenForRepo": 952,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,76 +1,87 @@\n   public static int run(String[] args) throws Exception {\n     Options options \u003d buildOptions();\n     if (args.length \u003d\u003d 0) {\n       printUsage();\n       return 0;\n     }\n     // print help and exit with zero exit code\n     if (args.length \u003d\u003d 1 \u0026\u0026 isHelpOption(args[0])) {\n       printUsage();\n       return 0;\n     }\n     CommandLineParser parser \u003d new PosixParser();\n     CommandLine cmd;\n \n     try {\n       cmd \u003d parser.parse(options, args);\n     } catch (ParseException e) {\n       System.out.println(\"Error parsing command-line options: \");\n       printUsage();\n       return -1;\n     }\n \n     if (cmd.hasOption(\"h\")) {\n       // print help and exit with non zero exit code since\n       // it is not expected to give help and other options together.\n       printUsage();\n       return -1;\n     }\n \n     String inputFile \u003d cmd.getOptionValue(\"i\");\n     String processor \u003d cmd.getOptionValue(\"p\", \"Web\");\n     String outputFile \u003d cmd.getOptionValue(\"o\", \"-\");\n     String delimiter \u003d cmd.getOptionValue(\"delimiter\",\n         PBImageDelimitedTextWriter.DEFAULT_DELIMITER);\n     String tempPath \u003d cmd.getOptionValue(\"t\", \"\");\n \n     Configuration conf \u003d new Configuration();\n     try (PrintStream out \u003d outputFile.equals(\"-\") ?\n         System.out : new PrintStream(outputFile, \"UTF-8\")) {\n       switch (processor) {\n         case \"FileDistribution\":\n           long maxSize \u003d Long.parseLong(cmd.getOptionValue(\"maxSize\", \"0\"));\n           int step \u003d Integer.parseInt(cmd.getOptionValue(\"step\", \"0\"));\n           new FileDistributionCalculator(conf, maxSize, step, out).visit(\n               new RandomAccessFile(inputFile, \"r\"));\n           break;\n         case \"XML\":\n           new PBImageXmlWriter(conf, out).visit(\n               new RandomAccessFile(inputFile, \"r\"));\n           break;\n+        case \"ReverseXML\":\n+          try {\n+            OfflineImageReconstructor.run(inputFile, outputFile);\n+          } catch (Exception e) {\n+            System.err.println(\"OfflineImageReconstructor failed: \" +\n+                e.getMessage());\n+            e.printStackTrace(System.err);\n+            System.exit(1);\n+          }\n+          break;\n         case \"Web\":\n           String addr \u003d cmd.getOptionValue(\"addr\", \"localhost:5978\");\n           try (WebImageViewer viewer \u003d new WebImageViewer(\n               NetUtils.createSocketAddr(addr))) {\n             viewer.start(inputFile);\n           }\n           break;\n         case \"Delimited\":\n           try (PBImageDelimitedTextWriter writer \u003d\n               new PBImageDelimitedTextWriter(out, delimiter, tempPath)) {\n             writer.visit(new RandomAccessFile(inputFile, \"r\"));\n           }\n           break;\n         default:\n           System.err.println(\"Invalid processor specified : \" + processor);\n           printUsage();\n           return -1;\n       }\n       return 0;\n     } catch (EOFException e) {\n       System.err.println(\"Input file ended unexpectedly. Exiting\");\n     } catch (IOException e) {\n       System.err.println(\"Encountered exception.  Exiting: \" + e.getMessage());\n+      e.printStackTrace(System.err);\n     }\n     return -1;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static int run(String[] args) throws Exception {\n    Options options \u003d buildOptions();\n    if (args.length \u003d\u003d 0) {\n      printUsage();\n      return 0;\n    }\n    // print help and exit with zero exit code\n    if (args.length \u003d\u003d 1 \u0026\u0026 isHelpOption(args[0])) {\n      printUsage();\n      return 0;\n    }\n    CommandLineParser parser \u003d new PosixParser();\n    CommandLine cmd;\n\n    try {\n      cmd \u003d parser.parse(options, args);\n    } catch (ParseException e) {\n      System.out.println(\"Error parsing command-line options: \");\n      printUsage();\n      return -1;\n    }\n\n    if (cmd.hasOption(\"h\")) {\n      // print help and exit with non zero exit code since\n      // it is not expected to give help and other options together.\n      printUsage();\n      return -1;\n    }\n\n    String inputFile \u003d cmd.getOptionValue(\"i\");\n    String processor \u003d cmd.getOptionValue(\"p\", \"Web\");\n    String outputFile \u003d cmd.getOptionValue(\"o\", \"-\");\n    String delimiter \u003d cmd.getOptionValue(\"delimiter\",\n        PBImageDelimitedTextWriter.DEFAULT_DELIMITER);\n    String tempPath \u003d cmd.getOptionValue(\"t\", \"\");\n\n    Configuration conf \u003d new Configuration();\n    try (PrintStream out \u003d outputFile.equals(\"-\") ?\n        System.out : new PrintStream(outputFile, \"UTF-8\")) {\n      switch (processor) {\n        case \"FileDistribution\":\n          long maxSize \u003d Long.parseLong(cmd.getOptionValue(\"maxSize\", \"0\"));\n          int step \u003d Integer.parseInt(cmd.getOptionValue(\"step\", \"0\"));\n          new FileDistributionCalculator(conf, maxSize, step, out).visit(\n              new RandomAccessFile(inputFile, \"r\"));\n          break;\n        case \"XML\":\n          new PBImageXmlWriter(conf, out).visit(\n              new RandomAccessFile(inputFile, \"r\"));\n          break;\n        case \"ReverseXML\":\n          try {\n            OfflineImageReconstructor.run(inputFile, outputFile);\n          } catch (Exception e) {\n            System.err.println(\"OfflineImageReconstructor failed: \" +\n                e.getMessage());\n            e.printStackTrace(System.err);\n            System.exit(1);\n          }\n          break;\n        case \"Web\":\n          String addr \u003d cmd.getOptionValue(\"addr\", \"localhost:5978\");\n          try (WebImageViewer viewer \u003d new WebImageViewer(\n              NetUtils.createSocketAddr(addr))) {\n            viewer.start(inputFile);\n          }\n          break;\n        case \"Delimited\":\n          try (PBImageDelimitedTextWriter writer \u003d\n              new PBImageDelimitedTextWriter(out, delimiter, tempPath)) {\n            writer.visit(new RandomAccessFile(inputFile, \"r\"));\n          }\n          break;\n        default:\n          System.err.println(\"Invalid processor specified : \" + processor);\n          printUsage();\n          return -1;\n      }\n      return 0;\n    } catch (EOFException e) {\n      System.err.println(\"Input file ended unexpectedly. Exiting\");\n    } catch (IOException e) {\n      System.err.println(\"Encountered exception.  Exiting: \" + e.getMessage());\n      e.printStackTrace(System.err);\n    }\n    return -1;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/OfflineImageViewerPB.java",
      "extendedDetails": {}
    },
    "08f5de1ef55f637b3bbde0ace28b42f155e285a1": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9157. [OEV and OIV] : Unnecessary parsing for mandatory arguements if \u0027-h\u0027 option is specified as the only option (Contributed by nijel)\n",
      "commitDate": "15/10/15 5:07 AM",
      "commitName": "08f5de1ef55f637b3bbde0ace28b42f155e285a1",
      "commitAuthor": "Vinayakumar B",
      "commitDateOld": "07/10/15 1:59 AM",
      "commitNameOld": "61b3547c462a4e51d0a31c0a8c8ce210e2d90df8",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 8.13,
      "commitsBetweenForRepo": 70,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,70 +1,76 @@\n   public static int run(String[] args) throws Exception {\n     Options options \u003d buildOptions();\n     if (args.length \u003d\u003d 0) {\n       printUsage();\n       return 0;\n     }\n-\n+    // print help and exit with zero exit code\n+    if (args.length \u003d\u003d 1 \u0026\u0026 isHelpOption(args[0])) {\n+      printUsage();\n+      return 0;\n+    }\n     CommandLineParser parser \u003d new PosixParser();\n     CommandLine cmd;\n \n     try {\n       cmd \u003d parser.parse(options, args);\n     } catch (ParseException e) {\n       System.out.println(\"Error parsing command-line options: \");\n       printUsage();\n       return -1;\n     }\n \n-    if (cmd.hasOption(\"h\")) { // print help and exit\n+    if (cmd.hasOption(\"h\")) {\n+      // print help and exit with non zero exit code since\n+      // it is not expected to give help and other options together.\n       printUsage();\n-      return 0;\n+      return -1;\n     }\n \n     String inputFile \u003d cmd.getOptionValue(\"i\");\n     String processor \u003d cmd.getOptionValue(\"p\", \"Web\");\n     String outputFile \u003d cmd.getOptionValue(\"o\", \"-\");\n     String delimiter \u003d cmd.getOptionValue(\"delimiter\",\n         PBImageDelimitedTextWriter.DEFAULT_DELIMITER);\n     String tempPath \u003d cmd.getOptionValue(\"t\", \"\");\n \n     Configuration conf \u003d new Configuration();\n     try (PrintStream out \u003d outputFile.equals(\"-\") ?\n         System.out : new PrintStream(outputFile, \"UTF-8\")) {\n       switch (processor) {\n         case \"FileDistribution\":\n           long maxSize \u003d Long.parseLong(cmd.getOptionValue(\"maxSize\", \"0\"));\n           int step \u003d Integer.parseInt(cmd.getOptionValue(\"step\", \"0\"));\n           new FileDistributionCalculator(conf, maxSize, step, out).visit(\n               new RandomAccessFile(inputFile, \"r\"));\n           break;\n         case \"XML\":\n           new PBImageXmlWriter(conf, out).visit(\n               new RandomAccessFile(inputFile, \"r\"));\n           break;\n         case \"Web\":\n           String addr \u003d cmd.getOptionValue(\"addr\", \"localhost:5978\");\n           try (WebImageViewer viewer \u003d new WebImageViewer(\n               NetUtils.createSocketAddr(addr))) {\n             viewer.start(inputFile);\n           }\n           break;\n         case \"Delimited\":\n           try (PBImageDelimitedTextWriter writer \u003d\n               new PBImageDelimitedTextWriter(out, delimiter, tempPath)) {\n             writer.visit(new RandomAccessFile(inputFile, \"r\"));\n           }\n           break;\n         default:\n           System.err.println(\"Invalid processor specified : \" + processor);\n           printUsage();\n           return -1;\n       }\n       return 0;\n     } catch (EOFException e) {\n       System.err.println(\"Input file ended unexpectedly. Exiting\");\n     } catch (IOException e) {\n       System.err.println(\"Encountered exception.  Exiting: \" + e.getMessage());\n     }\n     return -1;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static int run(String[] args) throws Exception {\n    Options options \u003d buildOptions();\n    if (args.length \u003d\u003d 0) {\n      printUsage();\n      return 0;\n    }\n    // print help and exit with zero exit code\n    if (args.length \u003d\u003d 1 \u0026\u0026 isHelpOption(args[0])) {\n      printUsage();\n      return 0;\n    }\n    CommandLineParser parser \u003d new PosixParser();\n    CommandLine cmd;\n\n    try {\n      cmd \u003d parser.parse(options, args);\n    } catch (ParseException e) {\n      System.out.println(\"Error parsing command-line options: \");\n      printUsage();\n      return -1;\n    }\n\n    if (cmd.hasOption(\"h\")) {\n      // print help and exit with non zero exit code since\n      // it is not expected to give help and other options together.\n      printUsage();\n      return -1;\n    }\n\n    String inputFile \u003d cmd.getOptionValue(\"i\");\n    String processor \u003d cmd.getOptionValue(\"p\", \"Web\");\n    String outputFile \u003d cmd.getOptionValue(\"o\", \"-\");\n    String delimiter \u003d cmd.getOptionValue(\"delimiter\",\n        PBImageDelimitedTextWriter.DEFAULT_DELIMITER);\n    String tempPath \u003d cmd.getOptionValue(\"t\", \"\");\n\n    Configuration conf \u003d new Configuration();\n    try (PrintStream out \u003d outputFile.equals(\"-\") ?\n        System.out : new PrintStream(outputFile, \"UTF-8\")) {\n      switch (processor) {\n        case \"FileDistribution\":\n          long maxSize \u003d Long.parseLong(cmd.getOptionValue(\"maxSize\", \"0\"));\n          int step \u003d Integer.parseInt(cmd.getOptionValue(\"step\", \"0\"));\n          new FileDistributionCalculator(conf, maxSize, step, out).visit(\n              new RandomAccessFile(inputFile, \"r\"));\n          break;\n        case \"XML\":\n          new PBImageXmlWriter(conf, out).visit(\n              new RandomAccessFile(inputFile, \"r\"));\n          break;\n        case \"Web\":\n          String addr \u003d cmd.getOptionValue(\"addr\", \"localhost:5978\");\n          try (WebImageViewer viewer \u003d new WebImageViewer(\n              NetUtils.createSocketAddr(addr))) {\n            viewer.start(inputFile);\n          }\n          break;\n        case \"Delimited\":\n          try (PBImageDelimitedTextWriter writer \u003d\n              new PBImageDelimitedTextWriter(out, delimiter, tempPath)) {\n            writer.visit(new RandomAccessFile(inputFile, \"r\"));\n          }\n          break;\n        default:\n          System.err.println(\"Invalid processor specified : \" + processor);\n          printUsage();\n          return -1;\n      }\n      return 0;\n    } catch (EOFException e) {\n      System.err.println(\"Input file ended unexpectedly. Exiting\");\n    } catch (IOException e) {\n      System.err.println(\"Encountered exception.  Exiting: \" + e.getMessage());\n    }\n    return -1;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/OfflineImageViewerPB.java",
      "extendedDetails": {}
    },
    "61b3547c462a4e51d0a31c0a8c8ce210e2d90df8": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9159. [OIV] : return value of the command is not correct if invalid value specified in \u0027-p (processor)\u0027 option (Contributed by nijel)\n",
      "commitDate": "07/10/15 1:59 AM",
      "commitName": "61b3547c462a4e51d0a31c0a8c8ce210e2d90df8",
      "commitAuthor": "Vinayakumar B",
      "commitDateOld": "18/03/15 1:33 PM",
      "commitNameOld": "f0dea037ffa5ffdb0a3d58f806ee313f2998f781",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 202.52,
      "commitsBetweenForRepo": 1724,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,66 +1,70 @@\n   public static int run(String[] args) throws Exception {\n     Options options \u003d buildOptions();\n     if (args.length \u003d\u003d 0) {\n       printUsage();\n       return 0;\n     }\n \n     CommandLineParser parser \u003d new PosixParser();\n     CommandLine cmd;\n \n     try {\n       cmd \u003d parser.parse(options, args);\n     } catch (ParseException e) {\n       System.out.println(\"Error parsing command-line options: \");\n       printUsage();\n       return -1;\n     }\n \n     if (cmd.hasOption(\"h\")) { // print help and exit\n       printUsage();\n       return 0;\n     }\n \n     String inputFile \u003d cmd.getOptionValue(\"i\");\n     String processor \u003d cmd.getOptionValue(\"p\", \"Web\");\n     String outputFile \u003d cmd.getOptionValue(\"o\", \"-\");\n     String delimiter \u003d cmd.getOptionValue(\"delimiter\",\n         PBImageDelimitedTextWriter.DEFAULT_DELIMITER);\n     String tempPath \u003d cmd.getOptionValue(\"t\", \"\");\n \n     Configuration conf \u003d new Configuration();\n     try (PrintStream out \u003d outputFile.equals(\"-\") ?\n         System.out : new PrintStream(outputFile, \"UTF-8\")) {\n       switch (processor) {\n         case \"FileDistribution\":\n           long maxSize \u003d Long.parseLong(cmd.getOptionValue(\"maxSize\", \"0\"));\n           int step \u003d Integer.parseInt(cmd.getOptionValue(\"step\", \"0\"));\n           new FileDistributionCalculator(conf, maxSize, step, out).visit(\n               new RandomAccessFile(inputFile, \"r\"));\n           break;\n         case \"XML\":\n           new PBImageXmlWriter(conf, out).visit(\n               new RandomAccessFile(inputFile, \"r\"));\n           break;\n         case \"Web\":\n           String addr \u003d cmd.getOptionValue(\"addr\", \"localhost:5978\");\n           try (WebImageViewer viewer \u003d new WebImageViewer(\n               NetUtils.createSocketAddr(addr))) {\n             viewer.start(inputFile);\n           }\n           break;\n         case \"Delimited\":\n           try (PBImageDelimitedTextWriter writer \u003d\n               new PBImageDelimitedTextWriter(out, delimiter, tempPath)) {\n             writer.visit(new RandomAccessFile(inputFile, \"r\"));\n           }\n           break;\n+        default:\n+          System.err.println(\"Invalid processor specified : \" + processor);\n+          printUsage();\n+          return -1;\n       }\n       return 0;\n     } catch (EOFException e) {\n       System.err.println(\"Input file ended unexpectedly. Exiting\");\n     } catch (IOException e) {\n       System.err.println(\"Encountered exception.  Exiting: \" + e.getMessage());\n     }\n     return -1;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static int run(String[] args) throws Exception {\n    Options options \u003d buildOptions();\n    if (args.length \u003d\u003d 0) {\n      printUsage();\n      return 0;\n    }\n\n    CommandLineParser parser \u003d new PosixParser();\n    CommandLine cmd;\n\n    try {\n      cmd \u003d parser.parse(options, args);\n    } catch (ParseException e) {\n      System.out.println(\"Error parsing command-line options: \");\n      printUsage();\n      return -1;\n    }\n\n    if (cmd.hasOption(\"h\")) { // print help and exit\n      printUsage();\n      return 0;\n    }\n\n    String inputFile \u003d cmd.getOptionValue(\"i\");\n    String processor \u003d cmd.getOptionValue(\"p\", \"Web\");\n    String outputFile \u003d cmd.getOptionValue(\"o\", \"-\");\n    String delimiter \u003d cmd.getOptionValue(\"delimiter\",\n        PBImageDelimitedTextWriter.DEFAULT_DELIMITER);\n    String tempPath \u003d cmd.getOptionValue(\"t\", \"\");\n\n    Configuration conf \u003d new Configuration();\n    try (PrintStream out \u003d outputFile.equals(\"-\") ?\n        System.out : new PrintStream(outputFile, \"UTF-8\")) {\n      switch (processor) {\n        case \"FileDistribution\":\n          long maxSize \u003d Long.parseLong(cmd.getOptionValue(\"maxSize\", \"0\"));\n          int step \u003d Integer.parseInt(cmd.getOptionValue(\"step\", \"0\"));\n          new FileDistributionCalculator(conf, maxSize, step, out).visit(\n              new RandomAccessFile(inputFile, \"r\"));\n          break;\n        case \"XML\":\n          new PBImageXmlWriter(conf, out).visit(\n              new RandomAccessFile(inputFile, \"r\"));\n          break;\n        case \"Web\":\n          String addr \u003d cmd.getOptionValue(\"addr\", \"localhost:5978\");\n          try (WebImageViewer viewer \u003d new WebImageViewer(\n              NetUtils.createSocketAddr(addr))) {\n            viewer.start(inputFile);\n          }\n          break;\n        case \"Delimited\":\n          try (PBImageDelimitedTextWriter writer \u003d\n              new PBImageDelimitedTextWriter(out, delimiter, tempPath)) {\n            writer.visit(new RandomAccessFile(inputFile, \"r\"));\n          }\n          break;\n        default:\n          System.err.println(\"Invalid processor specified : \" + processor);\n          printUsage();\n          return -1;\n      }\n      return 0;\n    } catch (EOFException e) {\n      System.err.println(\"Input file ended unexpectedly. Exiting\");\n    } catch (IOException e) {\n      System.err.println(\"Encountered exception.  Exiting: \" + e.getMessage());\n    }\n    return -1;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/OfflineImageViewerPB.java",
      "extendedDetails": {}
    },
    "caf7298e49f646a40023af999f62d61846fde5e2": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6673. Add delimited format support to PB OIV tool. Contributed by Eddy Xu.\n",
      "commitDate": "28/01/15 12:36 PM",
      "commitName": "caf7298e49f646a40023af999f62d61846fde5e2",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "11/12/14 12:36 PM",
      "commitNameOld": "b9f6d0c956f0278c8b9b83e05b523a442a730ebb",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 48.0,
      "commitsBetweenForRepo": 276,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,57 +1,66 @@\n   public static int run(String[] args) throws Exception {\n     Options options \u003d buildOptions();\n     if (args.length \u003d\u003d 0) {\n       printUsage();\n       return 0;\n     }\n \n     CommandLineParser parser \u003d new PosixParser();\n     CommandLine cmd;\n \n     try {\n       cmd \u003d parser.parse(options, args);\n     } catch (ParseException e) {\n       System.out.println(\"Error parsing command-line options: \");\n       printUsage();\n       return -1;\n     }\n \n     if (cmd.hasOption(\"h\")) { // print help and exit\n       printUsage();\n       return 0;\n     }\n \n     String inputFile \u003d cmd.getOptionValue(\"i\");\n     String processor \u003d cmd.getOptionValue(\"p\", \"Web\");\n     String outputFile \u003d cmd.getOptionValue(\"o\", \"-\");\n+    String delimiter \u003d cmd.getOptionValue(\"delimiter\",\n+        PBImageDelimitedTextWriter.DEFAULT_DELIMITER);\n+    String tempPath \u003d cmd.getOptionValue(\"t\", \"\");\n \n     Configuration conf \u003d new Configuration();\n     try (PrintStream out \u003d outputFile.equals(\"-\") ?\n         System.out : new PrintStream(outputFile, \"UTF-8\")) {\n       switch (processor) {\n         case \"FileDistribution\":\n           long maxSize \u003d Long.parseLong(cmd.getOptionValue(\"maxSize\", \"0\"));\n           int step \u003d Integer.parseInt(cmd.getOptionValue(\"step\", \"0\"));\n           new FileDistributionCalculator(conf, maxSize, step, out).visit(\n               new RandomAccessFile(inputFile, \"r\"));\n           break;\n         case \"XML\":\n           new PBImageXmlWriter(conf, out).visit(\n               new RandomAccessFile(inputFile, \"r\"));\n           break;\n         case \"Web\":\n           String addr \u003d cmd.getOptionValue(\"addr\", \"localhost:5978\");\n           try (WebImageViewer viewer \u003d new WebImageViewer(\n               NetUtils.createSocketAddr(addr))) {\n             viewer.start(inputFile);\n           }\n           break;\n+        case \"Delimited\":\n+          try (PBImageDelimitedTextWriter writer \u003d\n+              new PBImageDelimitedTextWriter(out, delimiter, tempPath)) {\n+            writer.visit(new RandomAccessFile(inputFile, \"r\"));\n+          }\n+          break;\n       }\n       return 0;\n     } catch (EOFException e) {\n       System.err.println(\"Input file ended unexpectedly. Exiting\");\n     } catch (IOException e) {\n       System.err.println(\"Encountered exception.  Exiting: \" + e.getMessage());\n     }\n     return -1;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static int run(String[] args) throws Exception {\n    Options options \u003d buildOptions();\n    if (args.length \u003d\u003d 0) {\n      printUsage();\n      return 0;\n    }\n\n    CommandLineParser parser \u003d new PosixParser();\n    CommandLine cmd;\n\n    try {\n      cmd \u003d parser.parse(options, args);\n    } catch (ParseException e) {\n      System.out.println(\"Error parsing command-line options: \");\n      printUsage();\n      return -1;\n    }\n\n    if (cmd.hasOption(\"h\")) { // print help and exit\n      printUsage();\n      return 0;\n    }\n\n    String inputFile \u003d cmd.getOptionValue(\"i\");\n    String processor \u003d cmd.getOptionValue(\"p\", \"Web\");\n    String outputFile \u003d cmd.getOptionValue(\"o\", \"-\");\n    String delimiter \u003d cmd.getOptionValue(\"delimiter\",\n        PBImageDelimitedTextWriter.DEFAULT_DELIMITER);\n    String tempPath \u003d cmd.getOptionValue(\"t\", \"\");\n\n    Configuration conf \u003d new Configuration();\n    try (PrintStream out \u003d outputFile.equals(\"-\") ?\n        System.out : new PrintStream(outputFile, \"UTF-8\")) {\n      switch (processor) {\n        case \"FileDistribution\":\n          long maxSize \u003d Long.parseLong(cmd.getOptionValue(\"maxSize\", \"0\"));\n          int step \u003d Integer.parseInt(cmd.getOptionValue(\"step\", \"0\"));\n          new FileDistributionCalculator(conf, maxSize, step, out).visit(\n              new RandomAccessFile(inputFile, \"r\"));\n          break;\n        case \"XML\":\n          new PBImageXmlWriter(conf, out).visit(\n              new RandomAccessFile(inputFile, \"r\"));\n          break;\n        case \"Web\":\n          String addr \u003d cmd.getOptionValue(\"addr\", \"localhost:5978\");\n          try (WebImageViewer viewer \u003d new WebImageViewer(\n              NetUtils.createSocketAddr(addr))) {\n            viewer.start(inputFile);\n          }\n          break;\n        case \"Delimited\":\n          try (PBImageDelimitedTextWriter writer \u003d\n              new PBImageDelimitedTextWriter(out, delimiter, tempPath)) {\n            writer.visit(new RandomAccessFile(inputFile, \"r\"));\n          }\n          break;\n      }\n      return 0;\n    } catch (EOFException e) {\n      System.err.println(\"Input file ended unexpectedly. Exiting\");\n    } catch (IOException e) {\n      System.err.println(\"Encountered exception.  Exiting: \" + e.getMessage());\n    }\n    return -1;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/OfflineImageViewerPB.java",
      "extendedDetails": {}
    },
    "b9f6d0c956f0278c8b9b83e05b523a442a730ebb": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7515. Fix new findbugs warnings in hadoop-hdfs. Contributed by Haohui Mai.\n",
      "commitDate": "11/12/14 12:36 PM",
      "commitName": "b9f6d0c956f0278c8b9b83e05b523a442a730ebb",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "28/10/14 4:53 PM",
      "commitNameOld": "675bca2968700d3627449700b827c3771827cef8",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 43.86,
      "commitsBetweenForRepo": 364,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,60 +1,57 @@\n   public static int run(String[] args) throws Exception {\n     Options options \u003d buildOptions();\n     if (args.length \u003d\u003d 0) {\n       printUsage();\n       return 0;\n     }\n \n     CommandLineParser parser \u003d new PosixParser();\n     CommandLine cmd;\n \n     try {\n       cmd \u003d parser.parse(options, args);\n     } catch (ParseException e) {\n       System.out.println(\"Error parsing command-line options: \");\n       printUsage();\n       return -1;\n     }\n \n     if (cmd.hasOption(\"h\")) { // print help and exit\n       printUsage();\n       return 0;\n     }\n \n     String inputFile \u003d cmd.getOptionValue(\"i\");\n     String processor \u003d cmd.getOptionValue(\"p\", \"Web\");\n     String outputFile \u003d cmd.getOptionValue(\"o\", \"-\");\n \n-    PrintWriter out \u003d outputFile.equals(\"-\") ?\n-        new PrintWriter(System.out) : new PrintWriter(new File(outputFile));\n-\n     Configuration conf \u003d new Configuration();\n-    try {\n-      if (processor.equals(\"FileDistribution\")) {\n-        long maxSize \u003d Long.parseLong(cmd.getOptionValue(\"maxSize\", \"0\"));\n-        int step \u003d Integer.parseInt(cmd.getOptionValue(\"step\", \"0\"));\n-        new FileDistributionCalculator(conf, maxSize, step, out)\n-            .visit(new RandomAccessFile(inputFile, \"r\"));\n-      } else if (processor.equals(\"XML\")) {\n-        new PBImageXmlWriter(conf, out).visit(new RandomAccessFile(inputFile,\n-            \"r\"));\n-      } else if (processor.equals(\"Web\")) {\n-        String addr \u003d cmd.getOptionValue(\"addr\", \"localhost:5978\");\n-        WebImageViewer viewer \u003d new WebImageViewer(NetUtils.createSocketAddr\n-                (addr));\n-        try {\n-          viewer.start(inputFile);\n-        } finally {\n-          viewer.close();\n-        }\n+    try (PrintStream out \u003d outputFile.equals(\"-\") ?\n+        System.out : new PrintStream(outputFile, \"UTF-8\")) {\n+      switch (processor) {\n+        case \"FileDistribution\":\n+          long maxSize \u003d Long.parseLong(cmd.getOptionValue(\"maxSize\", \"0\"));\n+          int step \u003d Integer.parseInt(cmd.getOptionValue(\"step\", \"0\"));\n+          new FileDistributionCalculator(conf, maxSize, step, out).visit(\n+              new RandomAccessFile(inputFile, \"r\"));\n+          break;\n+        case \"XML\":\n+          new PBImageXmlWriter(conf, out).visit(\n+              new RandomAccessFile(inputFile, \"r\"));\n+          break;\n+        case \"Web\":\n+          String addr \u003d cmd.getOptionValue(\"addr\", \"localhost:5978\");\n+          try (WebImageViewer viewer \u003d new WebImageViewer(\n+              NetUtils.createSocketAddr(addr))) {\n+            viewer.start(inputFile);\n+          }\n+          break;\n       }\n       return 0;\n     } catch (EOFException e) {\n       System.err.println(\"Input file ended unexpectedly. Exiting\");\n     } catch (IOException e) {\n       System.err.println(\"Encountered exception.  Exiting: \" + e.getMessage());\n-    } finally {\n-      IOUtils.cleanup(null, out);\n     }\n     return -1;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static int run(String[] args) throws Exception {\n    Options options \u003d buildOptions();\n    if (args.length \u003d\u003d 0) {\n      printUsage();\n      return 0;\n    }\n\n    CommandLineParser parser \u003d new PosixParser();\n    CommandLine cmd;\n\n    try {\n      cmd \u003d parser.parse(options, args);\n    } catch (ParseException e) {\n      System.out.println(\"Error parsing command-line options: \");\n      printUsage();\n      return -1;\n    }\n\n    if (cmd.hasOption(\"h\")) { // print help and exit\n      printUsage();\n      return 0;\n    }\n\n    String inputFile \u003d cmd.getOptionValue(\"i\");\n    String processor \u003d cmd.getOptionValue(\"p\", \"Web\");\n    String outputFile \u003d cmd.getOptionValue(\"o\", \"-\");\n\n    Configuration conf \u003d new Configuration();\n    try (PrintStream out \u003d outputFile.equals(\"-\") ?\n        System.out : new PrintStream(outputFile, \"UTF-8\")) {\n      switch (processor) {\n        case \"FileDistribution\":\n          long maxSize \u003d Long.parseLong(cmd.getOptionValue(\"maxSize\", \"0\"));\n          int step \u003d Integer.parseInt(cmd.getOptionValue(\"step\", \"0\"));\n          new FileDistributionCalculator(conf, maxSize, step, out).visit(\n              new RandomAccessFile(inputFile, \"r\"));\n          break;\n        case \"XML\":\n          new PBImageXmlWriter(conf, out).visit(\n              new RandomAccessFile(inputFile, \"r\"));\n          break;\n        case \"Web\":\n          String addr \u003d cmd.getOptionValue(\"addr\", \"localhost:5978\");\n          try (WebImageViewer viewer \u003d new WebImageViewer(\n              NetUtils.createSocketAddr(addr))) {\n            viewer.start(inputFile);\n          }\n          break;\n      }\n      return 0;\n    } catch (EOFException e) {\n      System.err.println(\"Input file ended unexpectedly. Exiting\");\n    } catch (IOException e) {\n      System.err.println(\"Encountered exception.  Exiting: \" + e.getMessage());\n    }\n    return -1;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/OfflineImageViewerPB.java",
      "extendedDetails": {}
    },
    "675bca2968700d3627449700b827c3771827cef8": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "HDFS-7280. Use netty 4 in WebImageViewer. Contributed by Haohui Mai.\n",
      "commitDate": "28/10/14 4:53 PM",
      "commitName": "675bca2968700d3627449700b827c3771827cef8",
      "commitAuthor": "Haohui Mai",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "HDFS-7280. Use netty 4 in WebImageViewer. Contributed by Haohui Mai.\n",
          "commitDate": "28/10/14 4:53 PM",
          "commitName": "675bca2968700d3627449700b827c3771827cef8",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "08/09/14 1:15 PM",
          "commitNameOld": "d989ac04449dc33da5e2c32a7f24d59cc92de536",
          "commitAuthorOld": "Allen Wittenauer",
          "daysBetweenCommits": 50.15,
          "commitsBetweenForRepo": 511,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,55 +1,60 @@\n-  public static int run(String[] args) throws IOException {\n+  public static int run(String[] args) throws Exception {\n     Options options \u003d buildOptions();\n     if (args.length \u003d\u003d 0) {\n       printUsage();\n       return 0;\n     }\n \n     CommandLineParser parser \u003d new PosixParser();\n     CommandLine cmd;\n \n     try {\n       cmd \u003d parser.parse(options, args);\n     } catch (ParseException e) {\n       System.out.println(\"Error parsing command-line options: \");\n       printUsage();\n       return -1;\n     }\n \n     if (cmd.hasOption(\"h\")) { // print help and exit\n       printUsage();\n       return 0;\n     }\n \n     String inputFile \u003d cmd.getOptionValue(\"i\");\n     String processor \u003d cmd.getOptionValue(\"p\", \"Web\");\n     String outputFile \u003d cmd.getOptionValue(\"o\", \"-\");\n \n     PrintWriter out \u003d outputFile.equals(\"-\") ?\n         new PrintWriter(System.out) : new PrintWriter(new File(outputFile));\n \n     Configuration conf \u003d new Configuration();\n     try {\n       if (processor.equals(\"FileDistribution\")) {\n         long maxSize \u003d Long.parseLong(cmd.getOptionValue(\"maxSize\", \"0\"));\n         int step \u003d Integer.parseInt(cmd.getOptionValue(\"step\", \"0\"));\n         new FileDistributionCalculator(conf, maxSize, step, out)\n             .visit(new RandomAccessFile(inputFile, \"r\"));\n       } else if (processor.equals(\"XML\")) {\n         new PBImageXmlWriter(conf, out).visit(new RandomAccessFile(inputFile,\n             \"r\"));\n       } else if (processor.equals(\"Web\")) {\n         String addr \u003d cmd.getOptionValue(\"addr\", \"localhost:5978\");\n-        new WebImageViewer(NetUtils.createSocketAddr(addr))\n-            .initServerAndWait(inputFile);\n+        WebImageViewer viewer \u003d new WebImageViewer(NetUtils.createSocketAddr\n+                (addr));\n+        try {\n+          viewer.start(inputFile);\n+        } finally {\n+          viewer.close();\n+        }\n       }\n       return 0;\n     } catch (EOFException e) {\n       System.err.println(\"Input file ended unexpectedly. Exiting\");\n     } catch (IOException e) {\n       System.err.println(\"Encountered exception.  Exiting: \" + e.getMessage());\n     } finally {\n       IOUtils.cleanup(null, out);\n     }\n     return -1;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static int run(String[] args) throws Exception {\n    Options options \u003d buildOptions();\n    if (args.length \u003d\u003d 0) {\n      printUsage();\n      return 0;\n    }\n\n    CommandLineParser parser \u003d new PosixParser();\n    CommandLine cmd;\n\n    try {\n      cmd \u003d parser.parse(options, args);\n    } catch (ParseException e) {\n      System.out.println(\"Error parsing command-line options: \");\n      printUsage();\n      return -1;\n    }\n\n    if (cmd.hasOption(\"h\")) { // print help and exit\n      printUsage();\n      return 0;\n    }\n\n    String inputFile \u003d cmd.getOptionValue(\"i\");\n    String processor \u003d cmd.getOptionValue(\"p\", \"Web\");\n    String outputFile \u003d cmd.getOptionValue(\"o\", \"-\");\n\n    PrintWriter out \u003d outputFile.equals(\"-\") ?\n        new PrintWriter(System.out) : new PrintWriter(new File(outputFile));\n\n    Configuration conf \u003d new Configuration();\n    try {\n      if (processor.equals(\"FileDistribution\")) {\n        long maxSize \u003d Long.parseLong(cmd.getOptionValue(\"maxSize\", \"0\"));\n        int step \u003d Integer.parseInt(cmd.getOptionValue(\"step\", \"0\"));\n        new FileDistributionCalculator(conf, maxSize, step, out)\n            .visit(new RandomAccessFile(inputFile, \"r\"));\n      } else if (processor.equals(\"XML\")) {\n        new PBImageXmlWriter(conf, out).visit(new RandomAccessFile(inputFile,\n            \"r\"));\n      } else if (processor.equals(\"Web\")) {\n        String addr \u003d cmd.getOptionValue(\"addr\", \"localhost:5978\");\n        WebImageViewer viewer \u003d new WebImageViewer(NetUtils.createSocketAddr\n                (addr));\n        try {\n          viewer.start(inputFile);\n        } finally {\n          viewer.close();\n        }\n      }\n      return 0;\n    } catch (EOFException e) {\n      System.err.println(\"Input file ended unexpectedly. Exiting\");\n    } catch (IOException e) {\n      System.err.println(\"Encountered exception.  Exiting: \" + e.getMessage());\n    } finally {\n      IOUtils.cleanup(null, out);\n    }\n    return -1;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/OfflineImageViewerPB.java",
          "extendedDetails": {
            "oldValue": "[IOException]",
            "newValue": "[Exception]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-7280. Use netty 4 in WebImageViewer. Contributed by Haohui Mai.\n",
          "commitDate": "28/10/14 4:53 PM",
          "commitName": "675bca2968700d3627449700b827c3771827cef8",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "08/09/14 1:15 PM",
          "commitNameOld": "d989ac04449dc33da5e2c32a7f24d59cc92de536",
          "commitAuthorOld": "Allen Wittenauer",
          "daysBetweenCommits": 50.15,
          "commitsBetweenForRepo": 511,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,55 +1,60 @@\n-  public static int run(String[] args) throws IOException {\n+  public static int run(String[] args) throws Exception {\n     Options options \u003d buildOptions();\n     if (args.length \u003d\u003d 0) {\n       printUsage();\n       return 0;\n     }\n \n     CommandLineParser parser \u003d new PosixParser();\n     CommandLine cmd;\n \n     try {\n       cmd \u003d parser.parse(options, args);\n     } catch (ParseException e) {\n       System.out.println(\"Error parsing command-line options: \");\n       printUsage();\n       return -1;\n     }\n \n     if (cmd.hasOption(\"h\")) { // print help and exit\n       printUsage();\n       return 0;\n     }\n \n     String inputFile \u003d cmd.getOptionValue(\"i\");\n     String processor \u003d cmd.getOptionValue(\"p\", \"Web\");\n     String outputFile \u003d cmd.getOptionValue(\"o\", \"-\");\n \n     PrintWriter out \u003d outputFile.equals(\"-\") ?\n         new PrintWriter(System.out) : new PrintWriter(new File(outputFile));\n \n     Configuration conf \u003d new Configuration();\n     try {\n       if (processor.equals(\"FileDistribution\")) {\n         long maxSize \u003d Long.parseLong(cmd.getOptionValue(\"maxSize\", \"0\"));\n         int step \u003d Integer.parseInt(cmd.getOptionValue(\"step\", \"0\"));\n         new FileDistributionCalculator(conf, maxSize, step, out)\n             .visit(new RandomAccessFile(inputFile, \"r\"));\n       } else if (processor.equals(\"XML\")) {\n         new PBImageXmlWriter(conf, out).visit(new RandomAccessFile(inputFile,\n             \"r\"));\n       } else if (processor.equals(\"Web\")) {\n         String addr \u003d cmd.getOptionValue(\"addr\", \"localhost:5978\");\n-        new WebImageViewer(NetUtils.createSocketAddr(addr))\n-            .initServerAndWait(inputFile);\n+        WebImageViewer viewer \u003d new WebImageViewer(NetUtils.createSocketAddr\n+                (addr));\n+        try {\n+          viewer.start(inputFile);\n+        } finally {\n+          viewer.close();\n+        }\n       }\n       return 0;\n     } catch (EOFException e) {\n       System.err.println(\"Input file ended unexpectedly. Exiting\");\n     } catch (IOException e) {\n       System.err.println(\"Encountered exception.  Exiting: \" + e.getMessage());\n     } finally {\n       IOUtils.cleanup(null, out);\n     }\n     return -1;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static int run(String[] args) throws Exception {\n    Options options \u003d buildOptions();\n    if (args.length \u003d\u003d 0) {\n      printUsage();\n      return 0;\n    }\n\n    CommandLineParser parser \u003d new PosixParser();\n    CommandLine cmd;\n\n    try {\n      cmd \u003d parser.parse(options, args);\n    } catch (ParseException e) {\n      System.out.println(\"Error parsing command-line options: \");\n      printUsage();\n      return -1;\n    }\n\n    if (cmd.hasOption(\"h\")) { // print help and exit\n      printUsage();\n      return 0;\n    }\n\n    String inputFile \u003d cmd.getOptionValue(\"i\");\n    String processor \u003d cmd.getOptionValue(\"p\", \"Web\");\n    String outputFile \u003d cmd.getOptionValue(\"o\", \"-\");\n\n    PrintWriter out \u003d outputFile.equals(\"-\") ?\n        new PrintWriter(System.out) : new PrintWriter(new File(outputFile));\n\n    Configuration conf \u003d new Configuration();\n    try {\n      if (processor.equals(\"FileDistribution\")) {\n        long maxSize \u003d Long.parseLong(cmd.getOptionValue(\"maxSize\", \"0\"));\n        int step \u003d Integer.parseInt(cmd.getOptionValue(\"step\", \"0\"));\n        new FileDistributionCalculator(conf, maxSize, step, out)\n            .visit(new RandomAccessFile(inputFile, \"r\"));\n      } else if (processor.equals(\"XML\")) {\n        new PBImageXmlWriter(conf, out).visit(new RandomAccessFile(inputFile,\n            \"r\"));\n      } else if (processor.equals(\"Web\")) {\n        String addr \u003d cmd.getOptionValue(\"addr\", \"localhost:5978\");\n        WebImageViewer viewer \u003d new WebImageViewer(NetUtils.createSocketAddr\n                (addr));\n        try {\n          viewer.start(inputFile);\n        } finally {\n          viewer.close();\n        }\n      }\n      return 0;\n    } catch (EOFException e) {\n      System.err.println(\"Input file ended unexpectedly. Exiting\");\n    } catch (IOException e) {\n      System.err.println(\"Encountered exception.  Exiting: \" + e.getMessage());\n    } finally {\n      IOUtils.cleanup(null, out);\n    }\n    return -1;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/OfflineImageViewerPB.java",
          "extendedDetails": {}
        }
      ]
    },
    "71bae5cae4f758c4366d32cbc61522b8b4093a1b": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6173. Move the default processor from Ls to Web in OfflineImageViewer. Contributed by Akira Ajisaka.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1583384 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/03/14 11:05 AM",
      "commitName": "71bae5cae4f758c4366d32cbc61522b8b4093a1b",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "27/03/14 4:11 PM",
      "commitNameOld": "9d2d55e490a2092f9ff3a7f1a570b673555c43c8",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 3.79,
      "commitsBetweenForRepo": 18,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,55 +1,55 @@\n   public static int run(String[] args) throws IOException {\n     Options options \u003d buildOptions();\n     if (args.length \u003d\u003d 0) {\n       printUsage();\n       return 0;\n     }\n \n     CommandLineParser parser \u003d new PosixParser();\n     CommandLine cmd;\n \n     try {\n       cmd \u003d parser.parse(options, args);\n     } catch (ParseException e) {\n       System.out.println(\"Error parsing command-line options: \");\n       printUsage();\n       return -1;\n     }\n \n     if (cmd.hasOption(\"h\")) { // print help and exit\n       printUsage();\n       return 0;\n     }\n \n     String inputFile \u003d cmd.getOptionValue(\"i\");\n-    String processor \u003d cmd.getOptionValue(\"p\", \"Ls\");\n-    String outputFile \u003d cmd.getOptionValue(\"o\");\n+    String processor \u003d cmd.getOptionValue(\"p\", \"Web\");\n+    String outputFile \u003d cmd.getOptionValue(\"o\", \"-\");\n \n-    PrintWriter out \u003d (outputFile \u003d\u003d null || outputFile.equals(\"-\")) ? new PrintWriter(\n-        System.out) : new PrintWriter(new File(outputFile));\n+    PrintWriter out \u003d outputFile.equals(\"-\") ?\n+        new PrintWriter(System.out) : new PrintWriter(new File(outputFile));\n \n     Configuration conf \u003d new Configuration();\n     try {\n       if (processor.equals(\"FileDistribution\")) {\n         long maxSize \u003d Long.parseLong(cmd.getOptionValue(\"maxSize\", \"0\"));\n         int step \u003d Integer.parseInt(cmd.getOptionValue(\"step\", \"0\"));\n         new FileDistributionCalculator(conf, maxSize, step, out)\n             .visit(new RandomAccessFile(inputFile, \"r\"));\n       } else if (processor.equals(\"XML\")) {\n         new PBImageXmlWriter(conf, out).visit(new RandomAccessFile(inputFile,\n             \"r\"));\n       } else if (processor.equals(\"Web\")) {\n         String addr \u003d cmd.getOptionValue(\"addr\", \"localhost:5978\");\n         new WebImageViewer(NetUtils.createSocketAddr(addr))\n             .initServerAndWait(inputFile);\n       }\n       return 0;\n     } catch (EOFException e) {\n       System.err.println(\"Input file ended unexpectedly. Exiting\");\n     } catch (IOException e) {\n       System.err.println(\"Encountered exception.  Exiting: \" + e.getMessage());\n     } finally {\n       IOUtils.cleanup(null, out);\n     }\n     return -1;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static int run(String[] args) throws IOException {\n    Options options \u003d buildOptions();\n    if (args.length \u003d\u003d 0) {\n      printUsage();\n      return 0;\n    }\n\n    CommandLineParser parser \u003d new PosixParser();\n    CommandLine cmd;\n\n    try {\n      cmd \u003d parser.parse(options, args);\n    } catch (ParseException e) {\n      System.out.println(\"Error parsing command-line options: \");\n      printUsage();\n      return -1;\n    }\n\n    if (cmd.hasOption(\"h\")) { // print help and exit\n      printUsage();\n      return 0;\n    }\n\n    String inputFile \u003d cmd.getOptionValue(\"i\");\n    String processor \u003d cmd.getOptionValue(\"p\", \"Web\");\n    String outputFile \u003d cmd.getOptionValue(\"o\", \"-\");\n\n    PrintWriter out \u003d outputFile.equals(\"-\") ?\n        new PrintWriter(System.out) : new PrintWriter(new File(outputFile));\n\n    Configuration conf \u003d new Configuration();\n    try {\n      if (processor.equals(\"FileDistribution\")) {\n        long maxSize \u003d Long.parseLong(cmd.getOptionValue(\"maxSize\", \"0\"));\n        int step \u003d Integer.parseInt(cmd.getOptionValue(\"step\", \"0\"));\n        new FileDistributionCalculator(conf, maxSize, step, out)\n            .visit(new RandomAccessFile(inputFile, \"r\"));\n      } else if (processor.equals(\"XML\")) {\n        new PBImageXmlWriter(conf, out).visit(new RandomAccessFile(inputFile,\n            \"r\"));\n      } else if (processor.equals(\"Web\")) {\n        String addr \u003d cmd.getOptionValue(\"addr\", \"localhost:5978\");\n        new WebImageViewer(NetUtils.createSocketAddr(addr))\n            .initServerAndWait(inputFile);\n      }\n      return 0;\n    } catch (EOFException e) {\n      System.err.println(\"Input file ended unexpectedly. Exiting\");\n    } catch (IOException e) {\n      System.err.println(\"Encountered exception.  Exiting: \" + e.getMessage());\n    } finally {\n      IOUtils.cleanup(null, out);\n    }\n    return -1;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/OfflineImageViewerPB.java",
      "extendedDetails": {}
    },
    "9d2d55e490a2092f9ff3a7f1a570b673555c43c8": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6164. Remove lsr in OfflineImageViewer. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1582533 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/03/14 4:11 PM",
      "commitName": "9d2d55e490a2092f9ff3a7f1a570b673555c43c8",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "27/03/14 11:15 AM",
      "commitNameOld": "54c1daa580e1cceee541be86fc2b694fa1be26df",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 0.21,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,57 +1,55 @@\n   public static int run(String[] args) throws IOException {\n     Options options \u003d buildOptions();\n     if (args.length \u003d\u003d 0) {\n       printUsage();\n       return 0;\n     }\n \n     CommandLineParser parser \u003d new PosixParser();\n     CommandLine cmd;\n \n     try {\n       cmd \u003d parser.parse(options, args);\n     } catch (ParseException e) {\n       System.out.println(\"Error parsing command-line options: \");\n       printUsage();\n       return -1;\n     }\n \n     if (cmd.hasOption(\"h\")) { // print help and exit\n       printUsage();\n       return 0;\n     }\n \n     String inputFile \u003d cmd.getOptionValue(\"i\");\n     String processor \u003d cmd.getOptionValue(\"p\", \"Ls\");\n     String outputFile \u003d cmd.getOptionValue(\"o\");\n \n     PrintWriter out \u003d (outputFile \u003d\u003d null || outputFile.equals(\"-\")) ? new PrintWriter(\n         System.out) : new PrintWriter(new File(outputFile));\n \n     Configuration conf \u003d new Configuration();\n     try {\n       if (processor.equals(\"FileDistribution\")) {\n         long maxSize \u003d Long.parseLong(cmd.getOptionValue(\"maxSize\", \"0\"));\n         int step \u003d Integer.parseInt(cmd.getOptionValue(\"step\", \"0\"));\n         new FileDistributionCalculator(conf, maxSize, step, out)\n             .visit(new RandomAccessFile(inputFile, \"r\"));\n       } else if (processor.equals(\"XML\")) {\n         new PBImageXmlWriter(conf, out).visit(new RandomAccessFile(inputFile,\n             \"r\"));\n       } else if (processor.equals(\"Web\")) {\n         String addr \u003d cmd.getOptionValue(\"addr\", \"localhost:5978\");\n         new WebImageViewer(NetUtils.createSocketAddr(addr))\n             .initServerAndWait(inputFile);\n-      } else {\n-        new LsrPBImage(conf, out).visit(new RandomAccessFile(inputFile, \"r\"));\n       }\n       return 0;\n     } catch (EOFException e) {\n       System.err.println(\"Input file ended unexpectedly. Exiting\");\n     } catch (IOException e) {\n       System.err.println(\"Encountered exception.  Exiting: \" + e.getMessage());\n     } finally {\n       IOUtils.cleanup(null, out);\n     }\n     return -1;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static int run(String[] args) throws IOException {\n    Options options \u003d buildOptions();\n    if (args.length \u003d\u003d 0) {\n      printUsage();\n      return 0;\n    }\n\n    CommandLineParser parser \u003d new PosixParser();\n    CommandLine cmd;\n\n    try {\n      cmd \u003d parser.parse(options, args);\n    } catch (ParseException e) {\n      System.out.println(\"Error parsing command-line options: \");\n      printUsage();\n      return -1;\n    }\n\n    if (cmd.hasOption(\"h\")) { // print help and exit\n      printUsage();\n      return 0;\n    }\n\n    String inputFile \u003d cmd.getOptionValue(\"i\");\n    String processor \u003d cmd.getOptionValue(\"p\", \"Ls\");\n    String outputFile \u003d cmd.getOptionValue(\"o\");\n\n    PrintWriter out \u003d (outputFile \u003d\u003d null || outputFile.equals(\"-\")) ? new PrintWriter(\n        System.out) : new PrintWriter(new File(outputFile));\n\n    Configuration conf \u003d new Configuration();\n    try {\n      if (processor.equals(\"FileDistribution\")) {\n        long maxSize \u003d Long.parseLong(cmd.getOptionValue(\"maxSize\", \"0\"));\n        int step \u003d Integer.parseInt(cmd.getOptionValue(\"step\", \"0\"));\n        new FileDistributionCalculator(conf, maxSize, step, out)\n            .visit(new RandomAccessFile(inputFile, \"r\"));\n      } else if (processor.equals(\"XML\")) {\n        new PBImageXmlWriter(conf, out).visit(new RandomAccessFile(inputFile,\n            \"r\"));\n      } else if (processor.equals(\"Web\")) {\n        String addr \u003d cmd.getOptionValue(\"addr\", \"localhost:5978\");\n        new WebImageViewer(NetUtils.createSocketAddr(addr))\n            .initServerAndWait(inputFile);\n      }\n      return 0;\n    } catch (EOFException e) {\n      System.err.println(\"Input file ended unexpectedly. Exiting\");\n    } catch (IOException e) {\n      System.err.println(\"Encountered exception.  Exiting: \" + e.getMessage());\n    } finally {\n      IOUtils.cleanup(null, out);\n    }\n    return -1;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/OfflineImageViewerPB.java",
      "extendedDetails": {}
    },
    "54c1daa580e1cceee541be86fc2b694fa1be26df": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5978. Create a tool to take fsimage and expose read-only WebHDFS API. Contributed by Akira Ajisaka.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1582433 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/03/14 11:15 AM",
      "commitName": "54c1daa580e1cceee541be86fc2b694fa1be26df",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "26/03/14 7:58 PM",
      "commitNameOld": "fd3d5ab7920a22800c7c0903642a1a08a887d967",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 0.64,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,53 +1,57 @@\n   public static int run(String[] args) throws IOException {\n     Options options \u003d buildOptions();\n     if (args.length \u003d\u003d 0) {\n       printUsage();\n       return 0;\n     }\n \n     CommandLineParser parser \u003d new PosixParser();\n     CommandLine cmd;\n \n     try {\n       cmd \u003d parser.parse(options, args);\n     } catch (ParseException e) {\n       System.out.println(\"Error parsing command-line options: \");\n       printUsage();\n       return -1;\n     }\n \n     if (cmd.hasOption(\"h\")) { // print help and exit\n       printUsage();\n       return 0;\n     }\n \n     String inputFile \u003d cmd.getOptionValue(\"i\");\n     String processor \u003d cmd.getOptionValue(\"p\", \"Ls\");\n     String outputFile \u003d cmd.getOptionValue(\"o\");\n \n     PrintWriter out \u003d (outputFile \u003d\u003d null || outputFile.equals(\"-\")) ? new PrintWriter(\n         System.out) : new PrintWriter(new File(outputFile));\n \n     Configuration conf \u003d new Configuration();\n     try {\n       if (processor.equals(\"FileDistribution\")) {\n         long maxSize \u003d Long.parseLong(cmd.getOptionValue(\"maxSize\", \"0\"));\n         int step \u003d Integer.parseInt(cmd.getOptionValue(\"step\", \"0\"));\n         new FileDistributionCalculator(conf, maxSize, step, out)\n             .visit(new RandomAccessFile(inputFile, \"r\"));\n       } else if (processor.equals(\"XML\")) {\n         new PBImageXmlWriter(conf, out).visit(new RandomAccessFile(inputFile,\n             \"r\"));\n+      } else if (processor.equals(\"Web\")) {\n+        String addr \u003d cmd.getOptionValue(\"addr\", \"localhost:5978\");\n+        new WebImageViewer(NetUtils.createSocketAddr(addr))\n+            .initServerAndWait(inputFile);\n       } else {\n         new LsrPBImage(conf, out).visit(new RandomAccessFile(inputFile, \"r\"));\n       }\n       return 0;\n     } catch (EOFException e) {\n       System.err.println(\"Input file ended unexpectedly. Exiting\");\n     } catch (IOException e) {\n       System.err.println(\"Encountered exception.  Exiting: \" + e.getMessage());\n     } finally {\n       IOUtils.cleanup(null, out);\n     }\n     return -1;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static int run(String[] args) throws IOException {\n    Options options \u003d buildOptions();\n    if (args.length \u003d\u003d 0) {\n      printUsage();\n      return 0;\n    }\n\n    CommandLineParser parser \u003d new PosixParser();\n    CommandLine cmd;\n\n    try {\n      cmd \u003d parser.parse(options, args);\n    } catch (ParseException e) {\n      System.out.println(\"Error parsing command-line options: \");\n      printUsage();\n      return -1;\n    }\n\n    if (cmd.hasOption(\"h\")) { // print help and exit\n      printUsage();\n      return 0;\n    }\n\n    String inputFile \u003d cmd.getOptionValue(\"i\");\n    String processor \u003d cmd.getOptionValue(\"p\", \"Ls\");\n    String outputFile \u003d cmd.getOptionValue(\"o\");\n\n    PrintWriter out \u003d (outputFile \u003d\u003d null || outputFile.equals(\"-\")) ? new PrintWriter(\n        System.out) : new PrintWriter(new File(outputFile));\n\n    Configuration conf \u003d new Configuration();\n    try {\n      if (processor.equals(\"FileDistribution\")) {\n        long maxSize \u003d Long.parseLong(cmd.getOptionValue(\"maxSize\", \"0\"));\n        int step \u003d Integer.parseInt(cmd.getOptionValue(\"step\", \"0\"));\n        new FileDistributionCalculator(conf, maxSize, step, out)\n            .visit(new RandomAccessFile(inputFile, \"r\"));\n      } else if (processor.equals(\"XML\")) {\n        new PBImageXmlWriter(conf, out).visit(new RandomAccessFile(inputFile,\n            \"r\"));\n      } else if (processor.equals(\"Web\")) {\n        String addr \u003d cmd.getOptionValue(\"addr\", \"localhost:5978\");\n        new WebImageViewer(NetUtils.createSocketAddr(addr))\n            .initServerAndWait(inputFile);\n      } else {\n        new LsrPBImage(conf, out).visit(new RandomAccessFile(inputFile, \"r\"));\n      }\n      return 0;\n    } catch (EOFException e) {\n      System.err.println(\"Input file ended unexpectedly. Exiting\");\n    } catch (IOException e) {\n      System.err.println(\"Encountered exception.  Exiting: \" + e.getMessage());\n    } finally {\n      IOUtils.cleanup(null, out);\n    }\n    return -1;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/OfflineImageViewerPB.java",
      "extendedDetails": {}
    },
    "146bf6c01ed56d0ab4d3ad06f6841622ff800b87": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-5866. \u0027-maxSize\u0027 and \u0027-step\u0027 option fail in OfflineImageViewer. Contributed by Akira Ajisaka.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1573694 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/03/14 11:40 AM",
      "commitName": "146bf6c01ed56d0ab4d3ad06f6841622ff800b87",
      "commitAuthor": "Haohui Mai",
      "diff": "@@ -0,0 +1,53 @@\n+  public static int run(String[] args) throws IOException {\n+    Options options \u003d buildOptions();\n+    if (args.length \u003d\u003d 0) {\n+      printUsage();\n+      return 0;\n+    }\n+\n+    CommandLineParser parser \u003d new PosixParser();\n+    CommandLine cmd;\n+\n+    try {\n+      cmd \u003d parser.parse(options, args);\n+    } catch (ParseException e) {\n+      System.out.println(\"Error parsing command-line options: \");\n+      printUsage();\n+      return -1;\n+    }\n+\n+    if (cmd.hasOption(\"h\")) { // print help and exit\n+      printUsage();\n+      return 0;\n+    }\n+\n+    String inputFile \u003d cmd.getOptionValue(\"i\");\n+    String processor \u003d cmd.getOptionValue(\"p\", \"Ls\");\n+    String outputFile \u003d cmd.getOptionValue(\"o\");\n+\n+    PrintWriter out \u003d (outputFile \u003d\u003d null || outputFile.equals(\"-\")) ? new PrintWriter(\n+        System.out) : new PrintWriter(new File(outputFile));\n+\n+    Configuration conf \u003d new Configuration();\n+    try {\n+      if (processor.equals(\"FileDistribution\")) {\n+        long maxSize \u003d Long.parseLong(cmd.getOptionValue(\"maxSize\", \"0\"));\n+        int step \u003d Integer.parseInt(cmd.getOptionValue(\"step\", \"0\"));\n+        new FileDistributionCalculator(conf, maxSize, step, out)\n+            .visit(new RandomAccessFile(inputFile, \"r\"));\n+      } else if (processor.equals(\"XML\")) {\n+        new PBImageXmlWriter(conf, out).visit(new RandomAccessFile(inputFile,\n+            \"r\"));\n+      } else {\n+        new LsrPBImage(conf, out).visit(new RandomAccessFile(inputFile, \"r\"));\n+      }\n+      return 0;\n+    } catch (EOFException e) {\n+      System.err.println(\"Input file ended unexpectedly. Exiting\");\n+    } catch (IOException e) {\n+      System.err.println(\"Encountered exception.  Exiting: \" + e.getMessage());\n+    } finally {\n+      IOUtils.cleanup(null, out);\n+    }\n+    return -1;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static int run(String[] args) throws IOException {\n    Options options \u003d buildOptions();\n    if (args.length \u003d\u003d 0) {\n      printUsage();\n      return 0;\n    }\n\n    CommandLineParser parser \u003d new PosixParser();\n    CommandLine cmd;\n\n    try {\n      cmd \u003d parser.parse(options, args);\n    } catch (ParseException e) {\n      System.out.println(\"Error parsing command-line options: \");\n      printUsage();\n      return -1;\n    }\n\n    if (cmd.hasOption(\"h\")) { // print help and exit\n      printUsage();\n      return 0;\n    }\n\n    String inputFile \u003d cmd.getOptionValue(\"i\");\n    String processor \u003d cmd.getOptionValue(\"p\", \"Ls\");\n    String outputFile \u003d cmd.getOptionValue(\"o\");\n\n    PrintWriter out \u003d (outputFile \u003d\u003d null || outputFile.equals(\"-\")) ? new PrintWriter(\n        System.out) : new PrintWriter(new File(outputFile));\n\n    Configuration conf \u003d new Configuration();\n    try {\n      if (processor.equals(\"FileDistribution\")) {\n        long maxSize \u003d Long.parseLong(cmd.getOptionValue(\"maxSize\", \"0\"));\n        int step \u003d Integer.parseInt(cmd.getOptionValue(\"step\", \"0\"));\n        new FileDistributionCalculator(conf, maxSize, step, out)\n            .visit(new RandomAccessFile(inputFile, \"r\"));\n      } else if (processor.equals(\"XML\")) {\n        new PBImageXmlWriter(conf, out).visit(new RandomAccessFile(inputFile,\n            \"r\"));\n      } else {\n        new LsrPBImage(conf, out).visit(new RandomAccessFile(inputFile, \"r\"));\n      }\n      return 0;\n    } catch (EOFException e) {\n      System.err.println(\"Input file ended unexpectedly. Exiting\");\n    } catch (IOException e) {\n      System.err.println(\"Encountered exception.  Exiting: \" + e.getMessage());\n    } finally {\n      IOUtils.cleanup(null, out);\n    }\n    return -1;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/OfflineImageViewerPB.java"
    }
  }
}