{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ApplicationMasterService.java",
  "functionName": "registerAppAttempt",
  "functionId": "registerAppAttempt___attemptId-ApplicationAttemptId",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ApplicationMasterService.java",
  "functionStartLine": 475,
  "functionEndLine": 484,
  "numCommitsSeen": 119,
  "timeTaken": 9362,
  "changeHistory": [
    "3090922805699b8374a359e92323884a4177dc4e",
    "3a4e861169dc3da9df0158ba6f44a9bc8576e217",
    "8caae1d5a65bf082eef9bd03a50fd5025c290406",
    "15ce82b9c5087ac5e51f7a43eb57873c3c374ced",
    "769a0bd8314cd7317c083a9b74abf47242acb58c",
    "1bd345d6e3855ab330963efd32e0fac102e61d1a",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "f114dad5ef9b72875e245803cee150ad12ff59de",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "3090922805699b8374a359e92323884a4177dc4e": "Ybodychange",
    "3a4e861169dc3da9df0158ba6f44a9bc8576e217": "Ybodychange",
    "8caae1d5a65bf082eef9bd03a50fd5025c290406": "Ybodychange",
    "15ce82b9c5087ac5e51f7a43eb57873c3c374ced": "Ybodychange",
    "769a0bd8314cd7317c083a9b74abf47242acb58c": "Ybodychange",
    "1bd345d6e3855ab330963efd32e0fac102e61d1a": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "f114dad5ef9b72875e245803cee150ad12ff59de": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3090922805699b8374a359e92323884a4177dc4e": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8696. [AMRMProxy] FederationInterceptor upgrade: home sub-cluster heartbeat async. Contributed by Botong Huang.\n",
      "commitDate": "24/09/18 11:37 AM",
      "commitName": "3090922805699b8374a359e92323884a4177dc4e",
      "commitAuthor": "Giovanni Matteo Fumarola",
      "commitDateOld": "20/08/18 12:22 PM",
      "commitNameOld": "8736fc39ac3b3de168d2c216f3d1c0edb48fb3f9",
      "commitAuthorOld": "Giovanni Matteo Fumarola",
      "daysBetweenCommits": 34.97,
      "commitsBetweenForRepo": 317,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,10 @@\n   public void registerAppAttempt(ApplicationAttemptId attemptId) {\n     AllocateResponse response \u003d\n         recordFactory.newRecordInstance(AllocateResponse.class);\n     // set response id to -1 before application master for the following\n     // attemptID get registered\n-    response.setResponseId(PRE_REGISTER_RESPONSE_ID);\n+    response.setResponseId(AMRMClientUtils.PRE_REGISTER_RESPONSE_ID);\n     LOG.info(\"Registering app attempt : \" + attemptId);\n     responseMap.put(attemptId, new AllocateResponseLock(response));\n     rmContext.getNMTokenSecretManager().registerApplicationAttempt(attemptId);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void registerAppAttempt(ApplicationAttemptId attemptId) {\n    AllocateResponse response \u003d\n        recordFactory.newRecordInstance(AllocateResponse.class);\n    // set response id to -1 before application master for the following\n    // attemptID get registered\n    response.setResponseId(AMRMClientUtils.PRE_REGISTER_RESPONSE_ID);\n    LOG.info(\"Registering app attempt : \" + attemptId);\n    responseMap.put(attemptId, new AllocateResponseLock(response));\n    rmContext.getNMTokenSecretManager().registerApplicationAttempt(attemptId);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ApplicationMasterService.java",
      "extendedDetails": {}
    },
    "3a4e861169dc3da9df0158ba6f44a9bc8576e217": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6640. AM heartbeat stuck when responseId overflows MAX_INT. Contributed by Botong Huang\n",
      "commitDate": "25/08/17 7:16 AM",
      "commitName": "3a4e861169dc3da9df0158ba6f44a9bc8576e217",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "01/08/17 5:28 PM",
      "commitNameOld": "712e97d4cfab15bec4cf4b11cc067b8f85c8bec8",
      "commitAuthorOld": "Subru Krishnan",
      "daysBetweenCommits": 23.57,
      "commitsBetweenForRepo": 149,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,10 @@\n   public void registerAppAttempt(ApplicationAttemptId attemptId) {\n     AllocateResponse response \u003d\n         recordFactory.newRecordInstance(AllocateResponse.class);\n     // set response id to -1 before application master for the following\n     // attemptID get registered\n-    response.setResponseId(-1);\n+    response.setResponseId(PRE_REGISTER_RESPONSE_ID);\n     LOG.info(\"Registering app attempt : \" + attemptId);\n     responseMap.put(attemptId, new AllocateResponseLock(response));\n     rmContext.getNMTokenSecretManager().registerApplicationAttempt(attemptId);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void registerAppAttempt(ApplicationAttemptId attemptId) {\n    AllocateResponse response \u003d\n        recordFactory.newRecordInstance(AllocateResponse.class);\n    // set response id to -1 before application master for the following\n    // attemptID get registered\n    response.setResponseId(PRE_REGISTER_RESPONSE_ID);\n    LOG.info(\"Registering app attempt : \" + attemptId);\n    responseMap.put(attemptId, new AllocateResponseLock(response));\n    rmContext.getNMTokenSecretManager().registerApplicationAttempt(attemptId);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ApplicationMasterService.java",
      "extendedDetails": {}
    },
    "8caae1d5a65bf082eef9bd03a50fd5025c290406": {
      "type": "Ybodychange",
      "commitMessage": "YARN-744. Race condition in ApplicationMasterService.allocate .. It might process same allocate request twice resulting in additional containers getting allocated. (Omkar Vinit Joshi via bikas)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1543707 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/11/13 9:06 PM",
      "commitName": "8caae1d5a65bf082eef9bd03a50fd5025c290406",
      "commitAuthor": "Bikas Saha",
      "commitDateOld": "14/09/13 6:01 PM",
      "commitNameOld": "ec010a29362c6c5572f8681f4e7d0469176345e1",
      "commitAuthorOld": "Bikas Saha",
      "daysBetweenCommits": 66.17,
      "commitsBetweenForRepo": 434,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,10 @@\n   public void registerAppAttempt(ApplicationAttemptId attemptId) {\n     AllocateResponse response \u003d\n         recordFactory.newRecordInstance(AllocateResponse.class);\n     // set response id to -1 before application master for the following\n     // attemptID get registered\n     response.setResponseId(-1);\n     LOG.info(\"Registering app attempt : \" + attemptId);\n-    responseMap.put(attemptId, response);\n+    responseMap.put(attemptId, new AllocateResponseLock(response));\n     rmContext.getNMTokenSecretManager().registerApplicationAttempt(attemptId);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void registerAppAttempt(ApplicationAttemptId attemptId) {\n    AllocateResponse response \u003d\n        recordFactory.newRecordInstance(AllocateResponse.class);\n    // set response id to -1 before application master for the following\n    // attemptID get registered\n    response.setResponseId(-1);\n    LOG.info(\"Registering app attempt : \" + attemptId);\n    responseMap.put(attemptId, new AllocateResponseLock(response));\n    rmContext.getNMTokenSecretManager().registerApplicationAttempt(attemptId);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ApplicationMasterService.java",
      "extendedDetails": {}
    },
    "15ce82b9c5087ac5e51f7a43eb57873c3c374ced": {
      "type": "Ybodychange",
      "commitMessage": "YARN-369. Handle ( or throw a proper error when receiving) status updates from application masters that have not registered (Mayank Bansal \u0026 Abhishek Kapoor via bikas)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1501605 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/07/13 4:14 PM",
      "commitName": "15ce82b9c5087ac5e51f7a43eb57873c3c374ced",
      "commitAuthor": "Bikas Saha",
      "commitDateOld": "18/06/13 4:19 PM",
      "commitNameOld": "243bcd367ff3130d74676280233041f88aca62a5",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 21.0,
      "commitsBetweenForRepo": 88,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,10 @@\n   public void registerAppAttempt(ApplicationAttemptId attemptId) {\n     AllocateResponse response \u003d\n         recordFactory.newRecordInstance(AllocateResponse.class);\n-    response.setResponseId(0);\n+    // set response id to -1 before application master for the following\n+    // attemptID get registered\n+    response.setResponseId(-1);\n     LOG.info(\"Registering app attempt : \" + attemptId);\n     responseMap.put(attemptId, response);\n     rmContext.getNMTokenSecretManager().registerApplicationAttempt(attemptId);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void registerAppAttempt(ApplicationAttemptId attemptId) {\n    AllocateResponse response \u003d\n        recordFactory.newRecordInstance(AllocateResponse.class);\n    // set response id to -1 before application master for the following\n    // attemptID get registered\n    response.setResponseId(-1);\n    LOG.info(\"Registering app attempt : \" + attemptId);\n    responseMap.put(attemptId, response);\n    rmContext.getNMTokenSecretManager().registerApplicationAttempt(attemptId);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ApplicationMasterService.java",
      "extendedDetails": {}
    },
    "769a0bd8314cd7317c083a9b74abf47242acb58c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-693. Modified RM to send NMTokens on allocate call so that AMs can then use them for authentication with NMs. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1493448 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "15/06/13 8:11 PM",
      "commitName": "769a0bd8314cd7317c083a9b74abf47242acb58c",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "13/06/13 8:54 AM",
      "commitNameOld": "0928502029ef141759008997335ea2cd836a7154",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 2.47,
      "commitsBetweenForRepo": 26,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,8 @@\n   public void registerAppAttempt(ApplicationAttemptId attemptId) {\n     AllocateResponse response \u003d\n         recordFactory.newRecordInstance(AllocateResponse.class);\n     response.setResponseId(0);\n-    LOG.info(\"Registering \" + attemptId);\n+    LOG.info(\"Registering app attempt : \" + attemptId);\n     responseMap.put(attemptId, response);\n+    rmContext.getNMTokenSecretManager().registerApplicationAttempt(attemptId);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void registerAppAttempt(ApplicationAttemptId attemptId) {\n    AllocateResponse response \u003d\n        recordFactory.newRecordInstance(AllocateResponse.class);\n    response.setResponseId(0);\n    LOG.info(\"Registering app attempt : \" + attemptId);\n    responseMap.put(attemptId, response);\n    rmContext.getNMTokenSecretManager().registerApplicationAttempt(attemptId);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ApplicationMasterService.java",
      "extendedDetails": {}
    },
    "1bd345d6e3855ab330963efd32e0fac102e61d1a": {
      "type": "Ybodychange",
      "commitMessage": "YARN-396. Rationalize AllocateResponse in RM Scheduler API. Contributed by Zhijie Shen.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1459040 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "20/03/13 1:44 PM",
      "commitName": "1bd345d6e3855ab330963efd32e0fac102e61d1a",
      "commitAuthor": "Hitesh Shah",
      "commitDateOld": "08/01/13 9:08 PM",
      "commitNameOld": "453926397182078c65a4428eb5de5a90d6af6448",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 70.65,
      "commitsBetweenForRepo": 330,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,7 @@\n   public void registerAppAttempt(ApplicationAttemptId attemptId) {\n-    AMResponse response \u003d recordFactory.newRecordInstance(AMResponse.class);\n+    AllocateResponse response \u003d\n+        recordFactory.newRecordInstance(AllocateResponse.class);\n     response.setResponseId(0);\n     LOG.info(\"Registering \" + attemptId);\n     responseMap.put(attemptId, response);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void registerAppAttempt(ApplicationAttemptId attemptId) {\n    AllocateResponse response \u003d\n        recordFactory.newRecordInstance(AllocateResponse.class);\n    response.setResponseId(0);\n    LOG.info(\"Registering \" + attemptId);\n    responseMap.put(attemptId, response);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ApplicationMasterService.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void registerAppAttempt(ApplicationAttemptId attemptId) {\n    AMResponse response \u003d recordFactory.newRecordInstance(AMResponse.class);\n    response.setResponseId(0);\n    LOG.info(\"Registering \" + attemptId);\n    responseMap.put(attemptId, response);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ApplicationMasterService.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ApplicationMasterService.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ApplicationMasterService.java"
      }
    },
    "f114dad5ef9b72875e245803cee150ad12ff59de": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2986. Fixed MiniYARNCluster to support multiple NodeManagers. Contributed by Anupam Seth.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1189721 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/10/11 5:42 AM",
      "commitName": "f114dad5ef9b72875e245803cee150ad12ff59de",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "26/10/11 11:24 PM",
      "commitNameOld": "db8ac0ec3cbec046f9cf32644c16fd2a51dd85a2",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.26,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,5 +1,6 @@\n   public void registerAppAttempt(ApplicationAttemptId attemptId) {\n     AMResponse response \u003d recordFactory.newRecordInstance(AMResponse.class);\n     response.setResponseId(0);\n+    LOG.info(\"Registering \" + attemptId);\n     responseMap.put(attemptId, response);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void registerAppAttempt(ApplicationAttemptId attemptId) {\n    AMResponse response \u003d recordFactory.newRecordInstance(AMResponse.class);\n    response.setResponseId(0);\n    LOG.info(\"Registering \" + attemptId);\n    responseMap.put(attemptId, response);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ApplicationMasterService.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void registerAppAttempt(ApplicationAttemptId attemptId) {\n    AMResponse response \u003d recordFactory.newRecordInstance(AMResponse.class);\n    response.setResponseId(0);\n    responseMap.put(attemptId, response);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ApplicationMasterService.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ApplicationMasterService.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ApplicationMasterService.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,5 @@\n+  public void registerAppAttempt(ApplicationAttemptId attemptId) {\n+    AMResponse response \u003d recordFactory.newRecordInstance(AMResponse.class);\n+    response.setResponseId(0);\n+    responseMap.put(attemptId, response);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void registerAppAttempt(ApplicationAttemptId attemptId) {\n    AMResponse response \u003d recordFactory.newRecordInstance(AMResponse.class);\n    response.setResponseId(0);\n    responseMap.put(attemptId, response);\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ApplicationMasterService.java"
    }
  }
}