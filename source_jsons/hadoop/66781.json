{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FileName.java",
  "functionName": "anonymize",
  "functionId": "anonymize___statePool-StatePool__conf-Configuration__fState-FileNameState__fileName-String",
  "sourceFilePath": "hadoop-tools/hadoop-rumen/src/main/java/org/apache/hadoop/tools/rumen/datatypes/FileName.java",
  "functionStartLine": 125,
  "functionEndLine": 153,
  "numCommitsSeen": 2,
  "timeTaken": 1048,
  "changeHistory": [
    "10325d97329c214bb3899c8535df5a366bc86d2f",
    "a238f931ea7dce0ca620d1798156c84ff77097ff"
  ],
  "changeHistoryShort": {
    "10325d97329c214bb3899c8535df5a366bc86d2f": "Yfilerename",
    "a238f931ea7dce0ca620d1798156c84ff77097ff": "Yintroduced"
  },
  "changeHistoryDetails": {
    "10325d97329c214bb3899c8535df5a366bc86d2f": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-3582. Move successfully passing MR1 tests to MR2 maven tree.(ahmed via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1233090 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/01/12 2:10 PM",
      "commitName": "10325d97329c214bb3899c8535df5a366bc86d2f",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "18/01/12 10:20 AM",
      "commitNameOld": "8b2f6909ec7df5cffb5ef417f5c9cffdee43e38a",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.16,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private static String anonymize(StatePool statePool, Configuration conf, \n                                  FileNameState fState, String fileName) {\n    String ret \u003d null;\n    try {\n      URI uri \u003d new URI(fileName);\n      \n      // anonymize the path i.e without the authority \u0026 scheme\n      ret \u003d \n        anonymizePath(uri.getPath(), fState.getDirectoryState(), \n                      fState.getFileNameState());\n      \n      // anonymize the authority and scheme\n      String authority \u003d uri.getAuthority();\n      String scheme \u003d uri.getScheme();\n      if (scheme !\u003d null) {\n        String anonymizedAuthority \u003d \"\";\n        if (authority !\u003d null) {\n          // anonymize the authority\n          NodeName hostName \u003d new NodeName(null, uri.getHost());\n          anonymizedAuthority \u003d hostName.getAnonymizedValue(statePool, conf);\n        }\n        ret \u003d scheme + \"://\" + anonymizedAuthority + ret;\n      }\n    } catch (URISyntaxException use) {\n      throw new RuntimeException (use);\n    }\n    \n    return ret;\n  }",
      "path": "hadoop-tools/hadoop-rumen/src/main/java/org/apache/hadoop/tools/rumen/datatypes/FileName.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/src/tools/org/apache/hadoop/tools/rumen/datatypes/FileName.java",
        "newPath": "hadoop-tools/hadoop-rumen/src/main/java/org/apache/hadoop/tools/rumen/datatypes/FileName.java"
      }
    },
    "a238f931ea7dce0ca620d1798156c84ff77097ff": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-778. Rumen Anonymizer. (Amar Kamat and Chris Douglas via amarrk)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1215141 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/12/11 6:20 AM",
      "commitName": "a238f931ea7dce0ca620d1798156c84ff77097ff",
      "commitAuthor": "Amar Kamat",
      "diff": "@@ -0,0 +1,29 @@\n+  private static String anonymize(StatePool statePool, Configuration conf, \n+                                  FileNameState fState, String fileName) {\n+    String ret \u003d null;\n+    try {\n+      URI uri \u003d new URI(fileName);\n+      \n+      // anonymize the path i.e without the authority \u0026 scheme\n+      ret \u003d \n+        anonymizePath(uri.getPath(), fState.getDirectoryState(), \n+                      fState.getFileNameState());\n+      \n+      // anonymize the authority and scheme\n+      String authority \u003d uri.getAuthority();\n+      String scheme \u003d uri.getScheme();\n+      if (scheme !\u003d null) {\n+        String anonymizedAuthority \u003d \"\";\n+        if (authority !\u003d null) {\n+          // anonymize the authority\n+          NodeName hostName \u003d new NodeName(null, uri.getHost());\n+          anonymizedAuthority \u003d hostName.getAnonymizedValue(statePool, conf);\n+        }\n+        ret \u003d scheme + \"://\" + anonymizedAuthority + ret;\n+      }\n+    } catch (URISyntaxException use) {\n+      throw new RuntimeException (use);\n+    }\n+    \n+    return ret;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static String anonymize(StatePool statePool, Configuration conf, \n                                  FileNameState fState, String fileName) {\n    String ret \u003d null;\n    try {\n      URI uri \u003d new URI(fileName);\n      \n      // anonymize the path i.e without the authority \u0026 scheme\n      ret \u003d \n        anonymizePath(uri.getPath(), fState.getDirectoryState(), \n                      fState.getFileNameState());\n      \n      // anonymize the authority and scheme\n      String authority \u003d uri.getAuthority();\n      String scheme \u003d uri.getScheme();\n      if (scheme !\u003d null) {\n        String anonymizedAuthority \u003d \"\";\n        if (authority !\u003d null) {\n          // anonymize the authority\n          NodeName hostName \u003d new NodeName(null, uri.getHost());\n          anonymizedAuthority \u003d hostName.getAnonymizedValue(statePool, conf);\n        }\n        ret \u003d scheme + \"://\" + anonymizedAuthority + ret;\n      }\n    } catch (URISyntaxException use) {\n      throw new RuntimeException (use);\n    }\n    \n    return ret;\n  }",
      "path": "hadoop-mapreduce-project/src/tools/org/apache/hadoop/tools/rumen/datatypes/FileName.java"
    }
  }
}