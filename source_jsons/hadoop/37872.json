{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "UserPlacementRule.java",
  "functionName": "getPlacementForApp",
  "functionId": "getPlacementForApp___asc-ApplicationSubmissionContext__user-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/placement/UserPlacementRule.java",
  "functionStartLine": 43,
  "functionEndLine": 69,
  "numCommitsSeen": 1,
  "timeTaken": 581,
  "changeHistory": [
    "0aefe2846fbda5b3402879e343e65484355849c9"
  ],
  "changeHistoryShort": {
    "0aefe2846fbda5b3402879e343e65484355849c9": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0aefe2846fbda5b3402879e343e65484355849c9": {
      "type": "Yintroduced",
      "commitMessage": "YARN-9298. Implement FS placement rules using PlacementRule interface. Contributed by Wilfred Spiegelenburg.\n",
      "commitDate": "04/03/19 11:49 PM",
      "commitName": "0aefe2846fbda5b3402879e343e65484355849c9",
      "commitAuthor": "Yufei Gu",
      "diff": "@@ -0,0 +1,27 @@\n+  public ApplicationPlacementContext getPlacementForApp(\n+      ApplicationSubmissionContext asc, String user) throws YarnException {\n+    String queueName;\n+\n+    String cleanUser \u003d cleanName(user);\n+    PlacementRule parentRule \u003d getParentRule();\n+    if (parentRule !\u003d null) {\n+      LOG.debug(\"User rule: parent rule found: {}\", parentRule.getName());\n+      ApplicationPlacementContext parent \u003d\n+          parentRule.getPlacementForApp(asc, user);\n+      if (parent \u003d\u003d null || getQueueManager().\n+          getQueue(parent.getQueue()) instanceof FSLeafQueue) {\n+        LOG.debug(\"User rule: parent rule failed\");\n+        return null;\n+      }\n+      LOG.debug(\"User rule: parent rule result: {}\", parent.getQueue());\n+      queueName \u003d parent.getQueue() + DOT + cleanUser;\n+    } else {\n+      queueName \u003d assureRoot(cleanUser);\n+    }\n+\n+    // If we can create the queue in the rule or the queue exists return it\n+    if (createQueue || configuredQueue(queueName)) {\n+      return new ApplicationPlacementContext(queueName);\n+    }\n+    return null;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public ApplicationPlacementContext getPlacementForApp(\n      ApplicationSubmissionContext asc, String user) throws YarnException {\n    String queueName;\n\n    String cleanUser \u003d cleanName(user);\n    PlacementRule parentRule \u003d getParentRule();\n    if (parentRule !\u003d null) {\n      LOG.debug(\"User rule: parent rule found: {}\", parentRule.getName());\n      ApplicationPlacementContext parent \u003d\n          parentRule.getPlacementForApp(asc, user);\n      if (parent \u003d\u003d null || getQueueManager().\n          getQueue(parent.getQueue()) instanceof FSLeafQueue) {\n        LOG.debug(\"User rule: parent rule failed\");\n        return null;\n      }\n      LOG.debug(\"User rule: parent rule result: {}\", parent.getQueue());\n      queueName \u003d parent.getQueue() + DOT + cleanUser;\n    } else {\n      queueName \u003d assureRoot(cleanUser);\n    }\n\n    // If we can create the queue in the rule or the queue exists return it\n    if (createQueue || configuredQueue(queueName)) {\n      return new ApplicationPlacementContext(queueName);\n    }\n    return null;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/placement/UserPlacementRule.java"
    }
  }
}