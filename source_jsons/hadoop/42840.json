{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMAppImpl.java",
  "functionName": "createNewAttempt",
  "functionId": "createNewAttempt",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppImpl.java",
  "functionStartLine": 968,
  "functionEndLine": 972,
  "numCommitsSeen": 233,
  "timeTaken": 6239,
  "changeHistory": [
    "d6258b33a7428a0725ead96bc43f4dd444c7c8f1",
    "52734134116eb4b18686e308d00e71e7e903383e",
    "81df7b586a16f8226c7b01c139c1c70c060399c3",
    "f2ea555ac6c06a3f2f6559731f48711fff05d3f1",
    "b717d44b52a7ddc6586f9dd2b830422b984b5b0f",
    "d16470025aa0c51a04c530863a96108895d72ddf",
    "1393581bceda234c88cafec00dbfc0ef2a402e83",
    "a45017a5f17ec11814db7e206d1e80aaa4dd8d8f",
    "39f019f41392d9e46ea1dc86ddd5563aabbeda1e",
    "259edf8dca44de54033e96f7eb65a83aaa6096f2",
    "6a2f2551fd13f6d3c932cc9b592e2a23b616a7f5",
    "6cd0736cc57849e4f7c5d38a3986432a9717fe39",
    "c15c192ad05890547f40a43dd4d2369ff4a89626",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "8aabd3d4e67cad8dc7e46f5339981135badc7421",
    "0d2bb0623696c2cc822cb44e431345b2c773dbff",
    "f2b91a8367a762091482074505618b570a520b19"
  ],
  "changeHistoryShort": {
    "d6258b33a7428a0725ead96bc43f4dd444c7c8f1": "Ybodychange",
    "52734134116eb4b18686e308d00e71e7e903383e": "Ybodychange",
    "81df7b586a16f8226c7b01c139c1c70c060399c3": "Ybodychange",
    "f2ea555ac6c06a3f2f6559731f48711fff05d3f1": "Ybodychange",
    "b717d44b52a7ddc6586f9dd2b830422b984b5b0f": "Ybodychange",
    "d16470025aa0c51a04c530863a96108895d72ddf": "Ybodychange",
    "1393581bceda234c88cafec00dbfc0ef2a402e83": "Ymultichange(Yparameterchange,Ybodychange)",
    "a45017a5f17ec11814db7e206d1e80aaa4dd8d8f": "Ybodychange",
    "39f019f41392d9e46ea1dc86ddd5563aabbeda1e": "Ybodychange",
    "259edf8dca44de54033e96f7eb65a83aaa6096f2": "Ybodychange",
    "6a2f2551fd13f6d3c932cc9b592e2a23b616a7f5": "Ybodychange",
    "6cd0736cc57849e4f7c5d38a3986432a9717fe39": "Ymultichange(Yparameterchange,Ybodychange)",
    "c15c192ad05890547f40a43dd4d2369ff4a89626": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "8aabd3d4e67cad8dc7e46f5339981135badc7421": "Ybodychange",
    "0d2bb0623696c2cc822cb44e431345b2c773dbff": "Ybodychange",
    "f2b91a8367a762091482074505618b570a520b19": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d6258b33a7428a0725ead96bc43f4dd444c7c8f1": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4497. RM might fail to restart when recovering apps whose attempts are missing. (Jun Gong via rohithsharmaks)\n",
      "commitDate": "22/01/16 6:57 AM",
      "commitName": "d6258b33a7428a0725ead96bc43f4dd444c7c8f1",
      "commitAuthor": "rohithsharmaks",
      "commitDateOld": "21/01/16 8:44 PM",
      "commitNameOld": "e30668106dc246f68db36fbd1f2db6ec08cd96f2",
      "commitAuthorOld": "Rohith Sharma K S",
      "daysBetweenCommits": 0.43,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,5 @@\n   private void createNewAttempt() {\n     ApplicationAttemptId appAttemptId \u003d\n         ApplicationAttemptId.newInstance(applicationId, nextAttemptId++);\n-\n-    BlacklistManager currentAMBlacklist;\n-    if (currentAttempt !\u003d null) {\n-      currentAMBlacklist \u003d currentAttempt.getAMBlacklist();\n-    } else {\n-      if (amBlacklistingEnabled) {\n-        currentAMBlacklist \u003d new SimpleBlacklistManager(\n-            scheduler.getNumClusterNodes(), blacklistDisableThreshold);\n-      } else {\n-        currentAMBlacklist \u003d new DisabledBlacklistManager();\n-      }\n-    }\n-    RMAppAttempt attempt \u003d\n-        new RMAppAttemptImpl(appAttemptId, rmContext, scheduler, masterService,\n-          submissionContext, conf,\n-          // The newly created attempt maybe last attempt if (number of\n-          // previously failed attempts(which should not include Preempted,\n-          // hardware error and NM resync) + 1) equal to the max-attempt\n-          // limit.\n-          maxAppAttempts \u003d\u003d (getNumFailedAppAttempts() + 1), amReq,\n-          currentAMBlacklist);\n-    attempts.put(appAttemptId, attempt);\n-    currentAttempt \u003d attempt;\n+    createNewAttempt(appAttemptId);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void createNewAttempt() {\n    ApplicationAttemptId appAttemptId \u003d\n        ApplicationAttemptId.newInstance(applicationId, nextAttemptId++);\n    createNewAttempt(appAttemptId);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppImpl.java",
      "extendedDetails": {}
    },
    "52734134116eb4b18686e308d00e71e7e903383e": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3480. Remove attempts that are beyond max-attempt limit from state store. Contributed by Jun Gong\n",
      "commitDate": "29/12/15 3:58 PM",
      "commitName": "52734134116eb4b18686e308d00e71e7e903383e",
      "commitAuthor": "Jian He",
      "commitDateOld": "14/12/15 10:52 AM",
      "commitNameOld": "6cb0af3c39a5d49cb2f7911ee21363a9542ca2d7",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 15.21,
      "commitsBetweenForRepo": 92,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n   private void createNewAttempt() {\n     ApplicationAttemptId appAttemptId \u003d\n-        ApplicationAttemptId.newInstance(applicationId, attempts.size() + 1);\n+        ApplicationAttemptId.newInstance(applicationId, nextAttemptId++);\n \n     BlacklistManager currentAMBlacklist;\n     if (currentAttempt !\u003d null) {\n       currentAMBlacklist \u003d currentAttempt.getAMBlacklist();\n     } else {\n       if (amBlacklistingEnabled) {\n         currentAMBlacklist \u003d new SimpleBlacklistManager(\n             scheduler.getNumClusterNodes(), blacklistDisableThreshold);\n       } else {\n         currentAMBlacklist \u003d new DisabledBlacklistManager();\n       }\n     }\n     RMAppAttempt attempt \u003d\n         new RMAppAttemptImpl(appAttemptId, rmContext, scheduler, masterService,\n           submissionContext, conf,\n           // The newly created attempt maybe last attempt if (number of\n           // previously failed attempts(which should not include Preempted,\n           // hardware error and NM resync) + 1) equal to the max-attempt\n           // limit.\n           maxAppAttempts \u003d\u003d (getNumFailedAppAttempts() + 1), amReq,\n           currentAMBlacklist);\n     attempts.put(appAttemptId, attempt);\n     currentAttempt \u003d attempt;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void createNewAttempt() {\n    ApplicationAttemptId appAttemptId \u003d\n        ApplicationAttemptId.newInstance(applicationId, nextAttemptId++);\n\n    BlacklistManager currentAMBlacklist;\n    if (currentAttempt !\u003d null) {\n      currentAMBlacklist \u003d currentAttempt.getAMBlacklist();\n    } else {\n      if (amBlacklistingEnabled) {\n        currentAMBlacklist \u003d new SimpleBlacklistManager(\n            scheduler.getNumClusterNodes(), blacklistDisableThreshold);\n      } else {\n        currentAMBlacklist \u003d new DisabledBlacklistManager();\n      }\n    }\n    RMAppAttempt attempt \u003d\n        new RMAppAttemptImpl(appAttemptId, rmContext, scheduler, masterService,\n          submissionContext, conf,\n          // The newly created attempt maybe last attempt if (number of\n          // previously failed attempts(which should not include Preempted,\n          // hardware error and NM resync) + 1) equal to the max-attempt\n          // limit.\n          maxAppAttempts \u003d\u003d (getNumFailedAppAttempts() + 1), amReq,\n          currentAMBlacklist);\n    attempts.put(appAttemptId, attempt);\n    currentAttempt \u003d attempt;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppImpl.java",
      "extendedDetails": {}
    },
    "81df7b586a16f8226c7b01c139c1c70c060399c3": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2005. Blacklisting support for scheduling AMs. (Anubhav Dhoot via kasha)\n",
      "commitDate": "13/09/15 5:03 PM",
      "commitName": "81df7b586a16f8226c7b01c139c1c70c060399c3",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "18/08/15 10:53 PM",
      "commitNameOld": "22dc5fc20942a8d98333ed5470b5fb8c1d257f1a",
      "commitAuthorOld": "Xuan",
      "daysBetweenCommits": 25.76,
      "commitsBetweenForRepo": 141,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,27 @@\n   private void createNewAttempt() {\n     ApplicationAttemptId appAttemptId \u003d\n         ApplicationAttemptId.newInstance(applicationId, attempts.size() + 1);\n+\n+    BlacklistManager currentAMBlacklist;\n+    if (currentAttempt !\u003d null) {\n+      currentAMBlacklist \u003d currentAttempt.getAMBlacklist();\n+    } else {\n+      if (amBlacklistingEnabled) {\n+        currentAMBlacklist \u003d new SimpleBlacklistManager(\n+            scheduler.getNumClusterNodes(), blacklistDisableThreshold);\n+      } else {\n+        currentAMBlacklist \u003d new DisabledBlacklistManager();\n+      }\n+    }\n     RMAppAttempt attempt \u003d\n         new RMAppAttemptImpl(appAttemptId, rmContext, scheduler, masterService,\n           submissionContext, conf,\n           // The newly created attempt maybe last attempt if (number of\n           // previously failed attempts(which should not include Preempted,\n           // hardware error and NM resync) + 1) equal to the max-attempt\n           // limit.\n-          maxAppAttempts \u003d\u003d (getNumFailedAppAttempts() + 1), amReq);\n+          maxAppAttempts \u003d\u003d (getNumFailedAppAttempts() + 1), amReq,\n+          currentAMBlacklist);\n     attempts.put(appAttemptId, attempt);\n     currentAttempt \u003d attempt;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void createNewAttempt() {\n    ApplicationAttemptId appAttemptId \u003d\n        ApplicationAttemptId.newInstance(applicationId, attempts.size() + 1);\n\n    BlacklistManager currentAMBlacklist;\n    if (currentAttempt !\u003d null) {\n      currentAMBlacklist \u003d currentAttempt.getAMBlacklist();\n    } else {\n      if (amBlacklistingEnabled) {\n        currentAMBlacklist \u003d new SimpleBlacklistManager(\n            scheduler.getNumClusterNodes(), blacklistDisableThreshold);\n      } else {\n        currentAMBlacklist \u003d new DisabledBlacklistManager();\n      }\n    }\n    RMAppAttempt attempt \u003d\n        new RMAppAttemptImpl(appAttemptId, rmContext, scheduler, masterService,\n          submissionContext, conf,\n          // The newly created attempt maybe last attempt if (number of\n          // previously failed attempts(which should not include Preempted,\n          // hardware error and NM resync) + 1) equal to the max-attempt\n          // limit.\n          maxAppAttempts \u003d\u003d (getNumFailedAppAttempts() + 1), amReq,\n          currentAMBlacklist);\n    attempts.put(appAttemptId, attempt);\n    currentAttempt \u003d attempt;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppImpl.java",
      "extendedDetails": {}
    },
    "f2ea555ac6c06a3f2f6559731f48711fff05d3f1": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2496. Enhanced Capacity Scheduler to have basic support for allocating resources based on node-labels. Contributed by Wangda Tan.\nYARN-2500. Ehnaced ResourceManager to support schedulers allocating resources based on node-labels. Contributed by Wangda Tan.\n",
      "commitDate": "15/10/14 6:33 PM",
      "commitName": "f2ea555ac6c06a3f2f6559731f48711fff05d3f1",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "03/10/14 5:09 PM",
      "commitNameOld": "c8212bacb1b2a7e6ee83cc56f72297465ce99390",
      "commitAuthorOld": "Chris Douglas",
      "daysBetweenCommits": 12.06,
      "commitsBetweenForRepo": 87,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n   private void createNewAttempt() {\n     ApplicationAttemptId appAttemptId \u003d\n         ApplicationAttemptId.newInstance(applicationId, attempts.size() + 1);\n     RMAppAttempt attempt \u003d\n         new RMAppAttemptImpl(appAttemptId, rmContext, scheduler, masterService,\n           submissionContext, conf,\n           // The newly created attempt maybe last attempt if (number of\n           // previously failed attempts(which should not include Preempted,\n           // hardware error and NM resync) + 1) equal to the max-attempt\n           // limit.\n-          maxAppAttempts \u003d\u003d (getNumFailedAppAttempts() + 1));\n+          maxAppAttempts \u003d\u003d (getNumFailedAppAttempts() + 1), amReq);\n     attempts.put(appAttemptId, attempt);\n     currentAttempt \u003d attempt;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void createNewAttempt() {\n    ApplicationAttemptId appAttemptId \u003d\n        ApplicationAttemptId.newInstance(applicationId, attempts.size() + 1);\n    RMAppAttempt attempt \u003d\n        new RMAppAttemptImpl(appAttemptId, rmContext, scheduler, masterService,\n          submissionContext, conf,\n          // The newly created attempt maybe last attempt if (number of\n          // previously failed attempts(which should not include Preempted,\n          // hardware error and NM resync) + 1) equal to the max-attempt\n          // limit.\n          maxAppAttempts \u003d\u003d (getNumFailedAppAttempts() + 1), amReq);\n    attempts.put(appAttemptId, attempt);\n    currentAttempt \u003d attempt;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppImpl.java",
      "extendedDetails": {}
    },
    "b717d44b52a7ddc6586f9dd2b830422b984b5b0f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-614. Changed ResourceManager to not count disk failure, node loss and RM restart towards app failures. Contributed by Xuan Gong\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1606407 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/06/14 4:37 PM",
      "commitName": "b717d44b52a7ddc6586f9dd2b830422b984b5b0f",
      "commitAuthor": "Jian He",
      "commitDateOld": "24/06/14 8:15 AM",
      "commitNameOld": "d16470025aa0c51a04c530863a96108895d72ddf",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 4.35,
      "commitsBetweenForRepo": 37,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,14 @@\n   private void createNewAttempt() {\n     ApplicationAttemptId appAttemptId \u003d\n         ApplicationAttemptId.newInstance(applicationId, attempts.size() + 1);\n     RMAppAttempt attempt \u003d\n         new RMAppAttemptImpl(appAttemptId, rmContext, scheduler, masterService,\n           submissionContext, conf,\n           // The newly created attempt maybe last attempt if (number of\n-          // previously NonPreempted attempts + 1) equal to the max-attempt\n+          // previously failed attempts(which should not include Preempted,\n+          // hardware error and NM resync) + 1) equal to the max-attempt\n           // limit.\n-          maxAppAttempts \u003d\u003d (getNumNonPreemptedAppAttempts() + 1));\n+          maxAppAttempts \u003d\u003d (getNumFailedAppAttempts() + 1));\n     attempts.put(appAttemptId, attempt);\n     currentAttempt \u003d attempt;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void createNewAttempt() {\n    ApplicationAttemptId appAttemptId \u003d\n        ApplicationAttemptId.newInstance(applicationId, attempts.size() + 1);\n    RMAppAttempt attempt \u003d\n        new RMAppAttemptImpl(appAttemptId, rmContext, scheduler, masterService,\n          submissionContext, conf,\n          // The newly created attempt maybe last attempt if (number of\n          // previously failed attempts(which should not include Preempted,\n          // hardware error and NM resync) + 1) equal to the max-attempt\n          // limit.\n          maxAppAttempts \u003d\u003d (getNumFailedAppAttempts() + 1));\n    attempts.put(appAttemptId, attempt);\n    currentAttempt \u003d attempt;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppImpl.java",
      "extendedDetails": {}
    },
    "d16470025aa0c51a04c530863a96108895d72ddf": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2074. Changed ResourceManager to not count AM preemptions towards app failures. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1605106 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/06/14 8:15 AM",
      "commitName": "d16470025aa0c51a04c530863a96108895d72ddf",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "16/06/14 4:56 PM",
      "commitNameOld": "95897ca14b7abd7fe047fdcf150473a8a2cbb024",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 7.64,
      "commitsBetweenForRepo": 55,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,13 @@\n   private void createNewAttempt() {\n     ApplicationAttemptId appAttemptId \u003d\n         ApplicationAttemptId.newInstance(applicationId, attempts.size() + 1);\n     RMAppAttempt attempt \u003d\n         new RMAppAttemptImpl(appAttemptId, rmContext, scheduler, masterService,\n-          submissionContext, conf, maxAppAttempts \u003d\u003d attempts.size());\n+          submissionContext, conf,\n+          // The newly created attempt maybe last attempt if (number of\n+          // previously NonPreempted attempts + 1) equal to the max-attempt\n+          // limit.\n+          maxAppAttempts \u003d\u003d (getNumNonPreemptedAppAttempts() + 1));\n     attempts.put(appAttemptId, attempt);\n     currentAttempt \u003d attempt;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void createNewAttempt() {\n    ApplicationAttemptId appAttemptId \u003d\n        ApplicationAttemptId.newInstance(applicationId, attempts.size() + 1);\n    RMAppAttempt attempt \u003d\n        new RMAppAttemptImpl(appAttemptId, rmContext, scheduler, masterService,\n          submissionContext, conf,\n          // The newly created attempt maybe last attempt if (number of\n          // previously NonPreempted attempts + 1) equal to the max-attempt\n          // limit.\n          maxAppAttempts \u003d\u003d (getNumNonPreemptedAppAttempts() + 1));\n    attempts.put(appAttemptId, attempt);\n    currentAttempt \u003d attempt;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppImpl.java",
      "extendedDetails": {}
    },
    "1393581bceda234c88cafec00dbfc0ef2a402e83": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-1490. Introduced the ability to make ResourceManager optionally not kill all containers when an ApplicationMaster exits. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1557143 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/01/14 7:04 AM",
      "commitName": "1393581bceda234c88cafec00dbfc0ef2a402e83",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-1490. Introduced the ability to make ResourceManager optionally not kill all containers when an ApplicationMaster exits. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1557143 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "10/01/14 7:04 AM",
          "commitName": "1393581bceda234c88cafec00dbfc0ef2a402e83",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "02/01/14 12:19 PM",
          "commitNameOld": "a45017a5f17ec11814db7e206d1e80aaa4dd8d8f",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 7.78,
          "commitsBetweenForRepo": 34,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,9 @@\n-  private void createNewAttempt(boolean startAttempt) {\n+  private void createNewAttempt() {\n     ApplicationAttemptId appAttemptId \u003d\n         ApplicationAttemptId.newInstance(applicationId, attempts.size() + 1);\n     RMAppAttempt attempt \u003d\n         new RMAppAttemptImpl(appAttemptId, rmContext, scheduler, masterService,\n-          submissionContext, conf);\n+          submissionContext, conf, maxAppAttempts \u003d\u003d attempts.size());\n     attempts.put(appAttemptId, attempt);\n     currentAttempt \u003d attempt;\n-    if(startAttempt) {\n-      handler.handle(\n-          new RMAppAttemptEvent(appAttemptId, RMAppAttemptEventType.START));\n-    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void createNewAttempt() {\n    ApplicationAttemptId appAttemptId \u003d\n        ApplicationAttemptId.newInstance(applicationId, attempts.size() + 1);\n    RMAppAttempt attempt \u003d\n        new RMAppAttemptImpl(appAttemptId, rmContext, scheduler, masterService,\n          submissionContext, conf, maxAppAttempts \u003d\u003d attempts.size());\n    attempts.put(appAttemptId, attempt);\n    currentAttempt \u003d attempt;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppImpl.java",
          "extendedDetails": {
            "oldValue": "[startAttempt-boolean]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-1490. Introduced the ability to make ResourceManager optionally not kill all containers when an ApplicationMaster exits. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1557143 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "10/01/14 7:04 AM",
          "commitName": "1393581bceda234c88cafec00dbfc0ef2a402e83",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "02/01/14 12:19 PM",
          "commitNameOld": "a45017a5f17ec11814db7e206d1e80aaa4dd8d8f",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 7.78,
          "commitsBetweenForRepo": 34,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,9 @@\n-  private void createNewAttempt(boolean startAttempt) {\n+  private void createNewAttempt() {\n     ApplicationAttemptId appAttemptId \u003d\n         ApplicationAttemptId.newInstance(applicationId, attempts.size() + 1);\n     RMAppAttempt attempt \u003d\n         new RMAppAttemptImpl(appAttemptId, rmContext, scheduler, masterService,\n-          submissionContext, conf);\n+          submissionContext, conf, maxAppAttempts \u003d\u003d attempts.size());\n     attempts.put(appAttemptId, attempt);\n     currentAttempt \u003d attempt;\n-    if(startAttempt) {\n-      handler.handle(\n-          new RMAppAttemptEvent(appAttemptId, RMAppAttemptEventType.START));\n-    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void createNewAttempt() {\n    ApplicationAttemptId appAttemptId \u003d\n        ApplicationAttemptId.newInstance(applicationId, attempts.size() + 1);\n    RMAppAttempt attempt \u003d\n        new RMAppAttemptImpl(appAttemptId, rmContext, scheduler, masterService,\n          submissionContext, conf, maxAppAttempts \u003d\u003d attempts.size());\n    attempts.put(appAttemptId, attempt);\n    currentAttempt \u003d attempt;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "a45017a5f17ec11814db7e206d1e80aaa4dd8d8f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1493. Changed ResourceManager and Scheduler interfacing to recognize app-attempts separately from apps. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1554896 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/01/14 12:19 PM",
      "commitName": "a45017a5f17ec11814db7e206d1e80aaa4dd8d8f",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "16/12/13 6:16 PM",
      "commitNameOld": "b774d7b3de81cda4165a0e86bc2267fda8546cb5",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 16.75,
      "commitsBetweenForRepo": 63,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n   private void createNewAttempt(boolean startAttempt) {\n     ApplicationAttemptId appAttemptId \u003d\n         ApplicationAttemptId.newInstance(applicationId, attempts.size() + 1);\n     RMAppAttempt attempt \u003d\n         new RMAppAttemptImpl(appAttemptId, rmContext, scheduler, masterService,\n-          submissionContext, conf, user);\n+          submissionContext, conf);\n     attempts.put(appAttemptId, attempt);\n     currentAttempt \u003d attempt;\n     if(startAttempt) {\n       handler.handle(\n           new RMAppAttemptEvent(appAttemptId, RMAppAttemptEventType.START));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void createNewAttempt(boolean startAttempt) {\n    ApplicationAttemptId appAttemptId \u003d\n        ApplicationAttemptId.newInstance(applicationId, attempts.size() + 1);\n    RMAppAttempt attempt \u003d\n        new RMAppAttemptImpl(appAttemptId, rmContext, scheduler, masterService,\n          submissionContext, conf);\n    attempts.put(appAttemptId, attempt);\n    currentAttempt \u003d attempt;\n    if(startAttempt) {\n      handler.handle(\n          new RMAppAttemptEvent(appAttemptId, RMAppAttemptEventType.START));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppImpl.java",
      "extendedDetails": {}
    },
    "39f019f41392d9e46ea1dc86ddd5563aabbeda1e": {
      "type": "Ybodychange",
      "commitMessage": "YARN-735. Make ApplicationAttemptId, ContainerId and NodeId immutable. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1488439 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/05/13 5:14 PM",
      "commitName": "39f019f41392d9e46ea1dc86ddd5563aabbeda1e",
      "commitAuthor": "Siddharth Seth",
      "commitDateOld": "23/05/13 8:22 PM",
      "commitNameOld": "259edf8dca44de54033e96f7eb65a83aaa6096f2",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 7.87,
      "commitsBetweenForRepo": 38,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,13 @@\n   private void createNewAttempt(boolean startAttempt) {\n-    ApplicationAttemptId appAttemptId \u003d Records\n-        .newRecord(ApplicationAttemptId.class);\n-    appAttemptId.setApplicationId(applicationId);\n-    appAttemptId.setAttemptId(attempts.size() + 1);\n-\n+    ApplicationAttemptId appAttemptId \u003d\n+        ApplicationAttemptId.newInstance(applicationId, attempts.size() + 1);\n     RMAppAttempt attempt \u003d\n         new RMAppAttemptImpl(appAttemptId, rmContext, scheduler, masterService,\n           submissionContext, conf, user);\n     attempts.put(appAttemptId, attempt);\n     currentAttempt \u003d attempt;\n     if(startAttempt) {\n       handler.handle(\n           new RMAppAttemptEvent(appAttemptId, RMAppAttemptEventType.START));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void createNewAttempt(boolean startAttempt) {\n    ApplicationAttemptId appAttemptId \u003d\n        ApplicationAttemptId.newInstance(applicationId, attempts.size() + 1);\n    RMAppAttempt attempt \u003d\n        new RMAppAttemptImpl(appAttemptId, rmContext, scheduler, masterService,\n          submissionContext, conf, user);\n    attempts.put(appAttemptId, attempt);\n    currentAttempt \u003d attempt;\n    if(startAttempt) {\n      handler.handle(\n          new RMAppAttemptEvent(appAttemptId, RMAppAttemptEventType.START));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppImpl.java",
      "extendedDetails": {}
    },
    "259edf8dca44de54033e96f7eb65a83aaa6096f2": {
      "type": "Ybodychange",
      "commitMessage": "YARN-571. Remove user from ContainerLaunchContext. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1485928 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/05/13 8:22 PM",
      "commitName": "259edf8dca44de54033e96f7eb65a83aaa6096f2",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "23/05/13 11:02 AM",
      "commitNameOld": "43876770d91a374563bf3379a5ffab5c2bac2264",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 0.39,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   private void createNewAttempt(boolean startAttempt) {\n     ApplicationAttemptId appAttemptId \u003d Records\n         .newRecord(ApplicationAttemptId.class);\n     appAttemptId.setApplicationId(applicationId);\n     appAttemptId.setAttemptId(attempts.size() + 1);\n \n     RMAppAttempt attempt \u003d\n         new RMAppAttemptImpl(appAttemptId, rmContext, scheduler, masterService,\n-          submissionContext, conf);\n+          submissionContext, conf, user);\n     attempts.put(appAttemptId, attempt);\n     currentAttempt \u003d attempt;\n     if(startAttempt) {\n       handler.handle(\n           new RMAppAttemptEvent(appAttemptId, RMAppAttemptEventType.START));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void createNewAttempt(boolean startAttempt) {\n    ApplicationAttemptId appAttemptId \u003d Records\n        .newRecord(ApplicationAttemptId.class);\n    appAttemptId.setApplicationId(applicationId);\n    appAttemptId.setAttemptId(attempts.size() + 1);\n\n    RMAppAttempt attempt \u003d\n        new RMAppAttemptImpl(appAttemptId, rmContext, scheduler, masterService,\n          submissionContext, conf, user);\n    attempts.put(appAttemptId, attempt);\n    currentAttempt \u003d attempt;\n    if(startAttempt) {\n      handler.handle(\n          new RMAppAttemptEvent(appAttemptId, RMAppAttemptEventType.START));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppImpl.java",
      "extendedDetails": {}
    },
    "6a2f2551fd13f6d3c932cc9b592e2a23b616a7f5": {
      "type": "Ybodychange",
      "commitMessage": "YARN-135. Client tokens should be per app-attempt, and should be unregistered on App-finish. Contributed by Vinod Kumar Vavilapalli\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1433570 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "15/01/13 10:33 AM",
      "commitName": "6a2f2551fd13f6d3c932cc9b592e2a23b616a7f5",
      "commitAuthor": "Siddharth Seth",
      "commitDateOld": "08/01/13 9:08 PM",
      "commitNameOld": "453926397182078c65a4428eb5de5a90d6af6448",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 6.56,
      "commitsBetweenForRepo": 52,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   private void createNewAttempt(boolean startAttempt) {\n     ApplicationAttemptId appAttemptId \u003d Records\n         .newRecord(ApplicationAttemptId.class);\n     appAttemptId.setApplicationId(applicationId);\n     appAttemptId.setAttemptId(attempts.size() + 1);\n \n-    RMAppAttempt attempt \u003d new RMAppAttemptImpl(appAttemptId,\n-        clientTokenStr, rmContext, scheduler, masterService,\n-        submissionContext, conf);\n+    RMAppAttempt attempt \u003d\n+        new RMAppAttemptImpl(appAttemptId, rmContext, scheduler, masterService,\n+          submissionContext, conf);\n     attempts.put(appAttemptId, attempt);\n     currentAttempt \u003d attempt;\n     if(startAttempt) {\n       handler.handle(\n           new RMAppAttemptEvent(appAttemptId, RMAppAttemptEventType.START));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void createNewAttempt(boolean startAttempt) {\n    ApplicationAttemptId appAttemptId \u003d Records\n        .newRecord(ApplicationAttemptId.class);\n    appAttemptId.setApplicationId(applicationId);\n    appAttemptId.setAttemptId(attempts.size() + 1);\n\n    RMAppAttempt attempt \u003d\n        new RMAppAttemptImpl(appAttemptId, rmContext, scheduler, masterService,\n          submissionContext, conf);\n    attempts.put(appAttemptId, attempt);\n    currentAttempt \u003d attempt;\n    if(startAttempt) {\n      handler.handle(\n          new RMAppAttemptEvent(appAttemptId, RMAppAttemptEventType.START));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppImpl.java",
      "extendedDetails": {}
    },
    "6cd0736cc57849e4f7c5d38a3986432a9717fe39": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-230. RM Restart phase 1 - includes support for saving/restarting all applications on an RM bounce. Contributed by Bikas Saha.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1423758 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/12/12 8:21 PM",
      "commitName": "6cd0736cc57849e4f7c5d38a3986432a9717fe39",
      "commitAuthor": "Arun Murthy",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-230. RM Restart phase 1 - includes support for saving/restarting all applications on an RM bounce. Contributed by Bikas Saha.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1423758 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/12/12 8:21 PM",
          "commitName": "6cd0736cc57849e4f7c5d38a3986432a9717fe39",
          "commitAuthor": "Arun Murthy",
          "commitDateOld": "28/11/12 5:56 PM",
          "commitNameOld": "1943fdbec613715f3cdc3ca60cbd273115f28299",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 20.1,
          "commitsBetweenForRepo": 77,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,16 @@\n-  private void createNewAttempt() {\n+  private void createNewAttempt(boolean startAttempt) {\n     ApplicationAttemptId appAttemptId \u003d Records\n         .newRecord(ApplicationAttemptId.class);\n     appAttemptId.setApplicationId(applicationId);\n     appAttemptId.setAttemptId(attempts.size() + 1);\n \n     RMAppAttempt attempt \u003d new RMAppAttemptImpl(appAttemptId,\n         clientTokenStr, rmContext, scheduler, masterService,\n         submissionContext, conf);\n     attempts.put(appAttemptId, attempt);\n     currentAttempt \u003d attempt;\n-    handler.handle(\n-        new RMAppAttemptEvent(appAttemptId, RMAppAttemptEventType.START));\n+    if(startAttempt) {\n+      handler.handle(\n+          new RMAppAttemptEvent(appAttemptId, RMAppAttemptEventType.START));\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void createNewAttempt(boolean startAttempt) {\n    ApplicationAttemptId appAttemptId \u003d Records\n        .newRecord(ApplicationAttemptId.class);\n    appAttemptId.setApplicationId(applicationId);\n    appAttemptId.setAttemptId(attempts.size() + 1);\n\n    RMAppAttempt attempt \u003d new RMAppAttemptImpl(appAttemptId,\n        clientTokenStr, rmContext, scheduler, masterService,\n        submissionContext, conf);\n    attempts.put(appAttemptId, attempt);\n    currentAttempt \u003d attempt;\n    if(startAttempt) {\n      handler.handle(\n          new RMAppAttemptEvent(appAttemptId, RMAppAttemptEventType.START));\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppImpl.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[startAttempt-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-230. RM Restart phase 1 - includes support for saving/restarting all applications on an RM bounce. Contributed by Bikas Saha.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1423758 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/12/12 8:21 PM",
          "commitName": "6cd0736cc57849e4f7c5d38a3986432a9717fe39",
          "commitAuthor": "Arun Murthy",
          "commitDateOld": "28/11/12 5:56 PM",
          "commitNameOld": "1943fdbec613715f3cdc3ca60cbd273115f28299",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 20.1,
          "commitsBetweenForRepo": 77,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,16 @@\n-  private void createNewAttempt() {\n+  private void createNewAttempt(boolean startAttempt) {\n     ApplicationAttemptId appAttemptId \u003d Records\n         .newRecord(ApplicationAttemptId.class);\n     appAttemptId.setApplicationId(applicationId);\n     appAttemptId.setAttemptId(attempts.size() + 1);\n \n     RMAppAttempt attempt \u003d new RMAppAttemptImpl(appAttemptId,\n         clientTokenStr, rmContext, scheduler, masterService,\n         submissionContext, conf);\n     attempts.put(appAttemptId, attempt);\n     currentAttempt \u003d attempt;\n-    handler.handle(\n-        new RMAppAttemptEvent(appAttemptId, RMAppAttemptEventType.START));\n+    if(startAttempt) {\n+      handler.handle(\n+          new RMAppAttemptEvent(appAttemptId, RMAppAttemptEventType.START));\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void createNewAttempt(boolean startAttempt) {\n    ApplicationAttemptId appAttemptId \u003d Records\n        .newRecord(ApplicationAttemptId.class);\n    appAttemptId.setApplicationId(applicationId);\n    appAttemptId.setAttemptId(attempts.size() + 1);\n\n    RMAppAttempt attempt \u003d new RMAppAttemptImpl(appAttemptId,\n        clientTokenStr, rmContext, scheduler, masterService,\n        submissionContext, conf);\n    attempts.put(appAttemptId, attempt);\n    currentAttempt \u003d attempt;\n    if(startAttempt) {\n      handler.handle(\n          new RMAppAttemptEvent(appAttemptId, RMAppAttemptEventType.START));\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "c15c192ad05890547f40a43dd4d2369ff4a89626": {
      "type": "Ybodychange",
      "commitMessage": "YARN-165. RM should point tracking URL to RM web page for app when AM fails (jlowe via bobby)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1404211 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/10/12 8:47 AM",
      "commitName": "c15c192ad05890547f40a43dd4d2369ff4a89626",
      "commitAuthor": "Robert Joseph Evans",
      "commitDateOld": "12/09/12 5:46 PM",
      "commitNameOld": "7c491887e58bade308cea9e6d4995ea3e8acc4c0",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 48.63,
      "commitsBetweenForRepo": 268,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n   private void createNewAttempt() {\n     ApplicationAttemptId appAttemptId \u003d Records\n         .newRecord(ApplicationAttemptId.class);\n     appAttemptId.setApplicationId(applicationId);\n     appAttemptId.setAttemptId(attempts.size() + 1);\n \n     RMAppAttempt attempt \u003d new RMAppAttemptImpl(appAttemptId,\n         clientTokenStr, rmContext, scheduler, masterService,\n-        submissionContext, YarnConfiguration.getProxyHostAndPort(conf));\n+        submissionContext, conf);\n     attempts.put(appAttemptId, attempt);\n     currentAttempt \u003d attempt;\n     handler.handle(\n         new RMAppAttemptEvent(appAttemptId, RMAppAttemptEventType.START));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void createNewAttempt() {\n    ApplicationAttemptId appAttemptId \u003d Records\n        .newRecord(ApplicationAttemptId.class);\n    appAttemptId.setApplicationId(applicationId);\n    appAttemptId.setAttemptId(attempts.size() + 1);\n\n    RMAppAttempt attempt \u003d new RMAppAttemptImpl(appAttemptId,\n        clientTokenStr, rmContext, scheduler, masterService,\n        submissionContext, conf);\n    attempts.put(appAttemptId, attempt);\n    currentAttempt \u003d attempt;\n    handler.handle(\n        new RMAppAttemptEvent(appAttemptId, RMAppAttemptEventType.START));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppImpl.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void createNewAttempt() {\n    ApplicationAttemptId appAttemptId \u003d Records\n        .newRecord(ApplicationAttemptId.class);\n    appAttemptId.setApplicationId(applicationId);\n    appAttemptId.setAttemptId(attempts.size() + 1);\n\n    RMAppAttempt attempt \u003d new RMAppAttemptImpl(appAttemptId,\n        clientTokenStr, rmContext, scheduler, masterService,\n        submissionContext, YarnConfiguration.getProxyHostAndPort(conf));\n    attempts.put(appAttemptId, attempt);\n    currentAttempt \u003d attempt;\n    handler.handle(\n        new RMAppAttemptEvent(appAttemptId, RMAppAttemptEventType.START));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppImpl.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppImpl.java"
      }
    },
    "8aabd3d4e67cad8dc7e46f5339981135badc7421": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2858. Added a WebApp Proxy for applications. Contributed by Robert Evans.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1189036 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/10/11 11:29 PM",
      "commitName": "8aabd3d4e67cad8dc7e46f5339981135badc7421",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "21/10/11 11:35 AM",
      "commitNameOld": "45b2bce8714ecbcb17c6b487208a48d26eed7824",
      "commitAuthorOld": "Mahadev Konar",
      "daysBetweenCommits": 4.5,
      "commitsBetweenForRepo": 35,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n   private void createNewAttempt() {\n     ApplicationAttemptId appAttemptId \u003d Records\n         .newRecord(ApplicationAttemptId.class);\n     appAttemptId.setApplicationId(applicationId);\n     appAttemptId.setAttemptId(attempts.size() + 1);\n \n     RMAppAttempt attempt \u003d new RMAppAttemptImpl(appAttemptId,\n         clientTokenStr, rmContext, scheduler, masterService,\n-        submissionContext);\n+        submissionContext, YarnConfiguration.getProxyHostAndPort(conf));\n     attempts.put(appAttemptId, attempt);\n     currentAttempt \u003d attempt;\n     handler.handle(\n         new RMAppAttemptEvent(appAttemptId, RMAppAttemptEventType.START));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void createNewAttempt() {\n    ApplicationAttemptId appAttemptId \u003d Records\n        .newRecord(ApplicationAttemptId.class);\n    appAttemptId.setApplicationId(applicationId);\n    appAttemptId.setAttemptId(attempts.size() + 1);\n\n    RMAppAttempt attempt \u003d new RMAppAttemptImpl(appAttemptId,\n        clientTokenStr, rmContext, scheduler, masterService,\n        submissionContext, YarnConfiguration.getProxyHostAndPort(conf));\n    attempts.put(appAttemptId, attempt);\n    currentAttempt \u003d attempt;\n    handler.handle(\n        new RMAppAttemptEvent(appAttemptId, RMAppAttemptEventType.START));\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppImpl.java",
      "extendedDetails": {}
    },
    "0d2bb0623696c2cc822cb44e431345b2c773dbff": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3054. Unable to kill submitted jobs. (mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1176600 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/09/11 1:30 PM",
      "commitName": "0d2bb0623696c2cc822cb44e431345b2c773dbff",
      "commitAuthor": "Mahadev Konar",
      "commitDateOld": "25/09/11 7:46 AM",
      "commitNameOld": "a5c9ede1433871fcf4e2e802ee2a65950ecd1e72",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 2.24,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n   private void createNewAttempt() {\n     ApplicationAttemptId appAttemptId \u003d Records\n         .newRecord(ApplicationAttemptId.class);\n     appAttemptId.setApplicationId(applicationId);\n     appAttemptId.setAttemptId(attempts.size() + 1);\n \n     RMAppAttempt attempt \u003d new RMAppAttemptImpl(appAttemptId,\n         clientTokenStr, rmContext, scheduler, masterService,\n         submissionContext);\n     attempts.put(appAttemptId, attempt);\n     currentAttempt \u003d attempt;\n-    dispatcher.getEventHandler().handle(\n+    handler.handle(\n         new RMAppAttemptEvent(appAttemptId, RMAppAttemptEventType.START));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void createNewAttempt() {\n    ApplicationAttemptId appAttemptId \u003d Records\n        .newRecord(ApplicationAttemptId.class);\n    appAttemptId.setApplicationId(applicationId);\n    appAttemptId.setAttemptId(attempts.size() + 1);\n\n    RMAppAttempt attempt \u003d new RMAppAttemptImpl(appAttemptId,\n        clientTokenStr, rmContext, scheduler, masterService,\n        submissionContext);\n    attempts.put(appAttemptId, attempt);\n    currentAttempt \u003d attempt;\n    handler.handle(\n        new RMAppAttemptEvent(appAttemptId, RMAppAttemptEventType.START));\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppImpl.java",
      "extendedDetails": {}
    },
    "f2b91a8367a762091482074505618b570a520b19": {
      "type": "Yintroduced",
      "commitMessage": " MAPREDUCE-2807. Fix AM restart and client redirection. Contributed by Sharad Agarwal.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161408 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 11:35 PM",
      "commitName": "f2b91a8367a762091482074505618b570a520b19",
      "commitAuthor": "Sharad Agarwal",
      "diff": "@@ -0,0 +1,14 @@\n+  private void createNewAttempt() {\n+    ApplicationAttemptId appAttemptId \u003d Records\n+        .newRecord(ApplicationAttemptId.class);\n+    appAttemptId.setApplicationId(applicationId);\n+    appAttemptId.setAttemptId(attempts.size() + 1);\n+\n+    RMAppAttempt attempt \u003d new RMAppAttemptImpl(appAttemptId,\n+        clientTokenStr, rmContext, scheduler, masterService,\n+        submissionContext);\n+    attempts.put(appAttemptId, attempt);\n+    currentAttempt \u003d attempt;\n+    dispatcher.getEventHandler().handle(\n+        new RMAppAttemptEvent(appAttemptId, RMAppAttemptEventType.START));\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void createNewAttempt() {\n    ApplicationAttemptId appAttemptId \u003d Records\n        .newRecord(ApplicationAttemptId.class);\n    appAttemptId.setApplicationId(applicationId);\n    appAttemptId.setAttemptId(attempts.size() + 1);\n\n    RMAppAttempt attempt \u003d new RMAppAttemptImpl(appAttemptId,\n        clientTokenStr, rmContext, scheduler, masterService,\n        submissionContext);\n    attempts.put(appAttemptId, attempt);\n    currentAttempt \u003d attempt;\n    dispatcher.getEventHandler().handle(\n        new RMAppAttemptEvent(appAttemptId, RMAppAttemptEventType.START));\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppImpl.java"
    }
  }
}