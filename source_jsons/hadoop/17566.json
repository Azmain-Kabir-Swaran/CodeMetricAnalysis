{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "MembershipStatePBImpl.java",
  "functionName": "getState",
  "functionId": "getState",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/store/records/impl/pb/MembershipStatePBImpl.java",
  "functionStartLine": 274,
  "functionEndLine": 288,
  "numCommitsSeen": 7,
  "timeTaken": 4489,
  "changeHistory": [
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d",
    "55da7fd7ebe2f3fa1c1c828dda727fddc75a1b81",
    "4bf877b03f0e01c4bcedc689c66689701e62b560"
  ],
  "changeHistoryShort": {
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d": "Yfilerename",
    "55da7fd7ebe2f3fa1c1c828dda727fddc75a1b81": "Ymultichange(Ymovefromfile,Yreturntypechange,Ymodifierchange,Yexceptionschange,Ybodychange,Yrename,Yparameterchange)",
    "4bf877b03f0e01c4bcedc689c66689701e62b560": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-13215. RBF: Move Router to its own module. Contributed by Wei Yan\n",
      "commitDate": "19/03/18 10:13 PM",
      "commitName": "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d",
      "commitAuthor": "weiy",
      "commitDateOld": "19/03/18 5:19 PM",
      "commitNameOld": "e65ff1c8be48ef4f04ed96f96ac4caef4974944d",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 0.2,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public FederationNamenodeServiceState getState() {\n    FederationNamenodeServiceState ret \u003d\n        FederationNamenodeServiceState.UNAVAILABLE;\n    NamenodeMembershipRecordProtoOrBuilder proto \u003d\n        this.translator.getProtoOrBuilder();\n    if (!proto.hasState()) {\n      return null;\n    }\n    try {\n      ret \u003d FederationNamenodeServiceState.valueOf(proto.getState());\n    } catch (IllegalArgumentException e) {\n      // Ignore this error\n    }\n    return ret;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/store/records/impl/pb/MembershipStatePBImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/federation/store/records/impl/pb/MembershipStatePBImpl.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/store/records/impl/pb/MembershipStatePBImpl.java"
      }
    },
    "55da7fd7ebe2f3fa1c1c828dda727fddc75a1b81": {
      "type": "Ymultichange(Ymovefromfile,Yreturntypechange,Ymodifierchange,Yexceptionschange,Ybodychange,Yrename,Yparameterchange)",
      "commitMessage": "HDFS-10687. Federation Membership State Store internal API. Contributed by Jason Kace and Inigo Goiri.\n\n(cherry picked from commit 95cae08849d23cf12c5d280c29f90908e6a90d40)\n",
      "commitDate": "06/10/17 6:50 PM",
      "commitName": "55da7fd7ebe2f3fa1c1c828dda727fddc75a1b81",
      "commitAuthor": "Inigo Goiri",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-10687. Federation Membership State Store internal API. Contributed by Jason Kace and Inigo Goiri.\n\n(cherry picked from commit 95cae08849d23cf12c5d280c29f90908e6a90d40)\n",
          "commitDate": "06/10/17 6:50 PM",
          "commitName": "55da7fd7ebe2f3fa1c1c828dda727fddc75a1b81",
          "commitAuthor": "Inigo Goiri",
          "commitDateOld": "06/10/17 6:50 PM",
          "commitNameOld": "0ec82b8cdfaaa5f23d1a0f7f7fb8c9187c5e309b",
          "commitAuthorOld": "Inigo Goiri",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,15 @@\n-  public static StateStoreService getStateStore(\n-      Configuration configuration) throws IOException, InterruptedException {\n-\n-    StateStoreService stateStore \u003d new StateStoreService();\n-    assertNotNull(stateStore);\n-\n-    // Set unique identifier, this is normally the router address\n-    String identifier \u003d UUID.randomUUID().toString();\n-    stateStore.setIdentifier(identifier);\n-\n-    stateStore.init(configuration);\n-    stateStore.start();\n-\n-    // Wait for state store to connect\n-    waitStateStore(stateStore, TimeUnit.SECONDS.toMillis(10));\n-\n-    return stateStore;\n+  public FederationNamenodeServiceState getState() {\n+    FederationNamenodeServiceState ret \u003d\n+        FederationNamenodeServiceState.UNAVAILABLE;\n+    NamenodeMembershipRecordProtoOrBuilder proto \u003d\n+        this.translator.getProtoOrBuilder();\n+    if (!proto.hasState()) {\n+      return null;\n+    }\n+    try {\n+      ret \u003d FederationNamenodeServiceState.valueOf(proto.getState());\n+    } catch (IllegalArgumentException e) {\n+      // Ignore this error\n+    }\n+    return ret;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public FederationNamenodeServiceState getState() {\n    FederationNamenodeServiceState ret \u003d\n        FederationNamenodeServiceState.UNAVAILABLE;\n    NamenodeMembershipRecordProtoOrBuilder proto \u003d\n        this.translator.getProtoOrBuilder();\n    if (!proto.hasState()) {\n      return null;\n    }\n    try {\n      ret \u003d FederationNamenodeServiceState.valueOf(proto.getState());\n    } catch (IllegalArgumentException e) {\n      // Ignore this error\n    }\n    return ret;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/federation/store/records/impl/pb/MembershipStatePBImpl.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/federation/store/FederationStateStoreTestUtils.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/federation/store/records/impl/pb/MembershipStatePBImpl.java",
            "oldMethodName": "getStateStore",
            "newMethodName": "getState"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-10687. Federation Membership State Store internal API. Contributed by Jason Kace and Inigo Goiri.\n\n(cherry picked from commit 95cae08849d23cf12c5d280c29f90908e6a90d40)\n",
          "commitDate": "06/10/17 6:50 PM",
          "commitName": "55da7fd7ebe2f3fa1c1c828dda727fddc75a1b81",
          "commitAuthor": "Inigo Goiri",
          "commitDateOld": "06/10/17 6:50 PM",
          "commitNameOld": "0ec82b8cdfaaa5f23d1a0f7f7fb8c9187c5e309b",
          "commitAuthorOld": "Inigo Goiri",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,15 @@\n-  public static StateStoreService getStateStore(\n-      Configuration configuration) throws IOException, InterruptedException {\n-\n-    StateStoreService stateStore \u003d new StateStoreService();\n-    assertNotNull(stateStore);\n-\n-    // Set unique identifier, this is normally the router address\n-    String identifier \u003d UUID.randomUUID().toString();\n-    stateStore.setIdentifier(identifier);\n-\n-    stateStore.init(configuration);\n-    stateStore.start();\n-\n-    // Wait for state store to connect\n-    waitStateStore(stateStore, TimeUnit.SECONDS.toMillis(10));\n-\n-    return stateStore;\n+  public FederationNamenodeServiceState getState() {\n+    FederationNamenodeServiceState ret \u003d\n+        FederationNamenodeServiceState.UNAVAILABLE;\n+    NamenodeMembershipRecordProtoOrBuilder proto \u003d\n+        this.translator.getProtoOrBuilder();\n+    if (!proto.hasState()) {\n+      return null;\n+    }\n+    try {\n+      ret \u003d FederationNamenodeServiceState.valueOf(proto.getState());\n+    } catch (IllegalArgumentException e) {\n+      // Ignore this error\n+    }\n+    return ret;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public FederationNamenodeServiceState getState() {\n    FederationNamenodeServiceState ret \u003d\n        FederationNamenodeServiceState.UNAVAILABLE;\n    NamenodeMembershipRecordProtoOrBuilder proto \u003d\n        this.translator.getProtoOrBuilder();\n    if (!proto.hasState()) {\n      return null;\n    }\n    try {\n      ret \u003d FederationNamenodeServiceState.valueOf(proto.getState());\n    } catch (IllegalArgumentException e) {\n      // Ignore this error\n    }\n    return ret;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/federation/store/records/impl/pb/MembershipStatePBImpl.java",
          "extendedDetails": {
            "oldValue": "StateStoreService",
            "newValue": "FederationNamenodeServiceState"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-10687. Federation Membership State Store internal API. Contributed by Jason Kace and Inigo Goiri.\n\n(cherry picked from commit 95cae08849d23cf12c5d280c29f90908e6a90d40)\n",
          "commitDate": "06/10/17 6:50 PM",
          "commitName": "55da7fd7ebe2f3fa1c1c828dda727fddc75a1b81",
          "commitAuthor": "Inigo Goiri",
          "commitDateOld": "06/10/17 6:50 PM",
          "commitNameOld": "0ec82b8cdfaaa5f23d1a0f7f7fb8c9187c5e309b",
          "commitAuthorOld": "Inigo Goiri",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,15 @@\n-  public static StateStoreService getStateStore(\n-      Configuration configuration) throws IOException, InterruptedException {\n-\n-    StateStoreService stateStore \u003d new StateStoreService();\n-    assertNotNull(stateStore);\n-\n-    // Set unique identifier, this is normally the router address\n-    String identifier \u003d UUID.randomUUID().toString();\n-    stateStore.setIdentifier(identifier);\n-\n-    stateStore.init(configuration);\n-    stateStore.start();\n-\n-    // Wait for state store to connect\n-    waitStateStore(stateStore, TimeUnit.SECONDS.toMillis(10));\n-\n-    return stateStore;\n+  public FederationNamenodeServiceState getState() {\n+    FederationNamenodeServiceState ret \u003d\n+        FederationNamenodeServiceState.UNAVAILABLE;\n+    NamenodeMembershipRecordProtoOrBuilder proto \u003d\n+        this.translator.getProtoOrBuilder();\n+    if (!proto.hasState()) {\n+      return null;\n+    }\n+    try {\n+      ret \u003d FederationNamenodeServiceState.valueOf(proto.getState());\n+    } catch (IllegalArgumentException e) {\n+      // Ignore this error\n+    }\n+    return ret;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public FederationNamenodeServiceState getState() {\n    FederationNamenodeServiceState ret \u003d\n        FederationNamenodeServiceState.UNAVAILABLE;\n    NamenodeMembershipRecordProtoOrBuilder proto \u003d\n        this.translator.getProtoOrBuilder();\n    if (!proto.hasState()) {\n      return null;\n    }\n    try {\n      ret \u003d FederationNamenodeServiceState.valueOf(proto.getState());\n    } catch (IllegalArgumentException e) {\n      // Ignore this error\n    }\n    return ret;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/federation/store/records/impl/pb/MembershipStatePBImpl.java",
          "extendedDetails": {
            "oldValue": "[public, static]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "HDFS-10687. Federation Membership State Store internal API. Contributed by Jason Kace and Inigo Goiri.\n\n(cherry picked from commit 95cae08849d23cf12c5d280c29f90908e6a90d40)\n",
          "commitDate": "06/10/17 6:50 PM",
          "commitName": "55da7fd7ebe2f3fa1c1c828dda727fddc75a1b81",
          "commitAuthor": "Inigo Goiri",
          "commitDateOld": "06/10/17 6:50 PM",
          "commitNameOld": "0ec82b8cdfaaa5f23d1a0f7f7fb8c9187c5e309b",
          "commitAuthorOld": "Inigo Goiri",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,15 @@\n-  public static StateStoreService getStateStore(\n-      Configuration configuration) throws IOException, InterruptedException {\n-\n-    StateStoreService stateStore \u003d new StateStoreService();\n-    assertNotNull(stateStore);\n-\n-    // Set unique identifier, this is normally the router address\n-    String identifier \u003d UUID.randomUUID().toString();\n-    stateStore.setIdentifier(identifier);\n-\n-    stateStore.init(configuration);\n-    stateStore.start();\n-\n-    // Wait for state store to connect\n-    waitStateStore(stateStore, TimeUnit.SECONDS.toMillis(10));\n-\n-    return stateStore;\n+  public FederationNamenodeServiceState getState() {\n+    FederationNamenodeServiceState ret \u003d\n+        FederationNamenodeServiceState.UNAVAILABLE;\n+    NamenodeMembershipRecordProtoOrBuilder proto \u003d\n+        this.translator.getProtoOrBuilder();\n+    if (!proto.hasState()) {\n+      return null;\n+    }\n+    try {\n+      ret \u003d FederationNamenodeServiceState.valueOf(proto.getState());\n+    } catch (IllegalArgumentException e) {\n+      // Ignore this error\n+    }\n+    return ret;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public FederationNamenodeServiceState getState() {\n    FederationNamenodeServiceState ret \u003d\n        FederationNamenodeServiceState.UNAVAILABLE;\n    NamenodeMembershipRecordProtoOrBuilder proto \u003d\n        this.translator.getProtoOrBuilder();\n    if (!proto.hasState()) {\n      return null;\n    }\n    try {\n      ret \u003d FederationNamenodeServiceState.valueOf(proto.getState());\n    } catch (IllegalArgumentException e) {\n      // Ignore this error\n    }\n    return ret;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/federation/store/records/impl/pb/MembershipStatePBImpl.java",
          "extendedDetails": {
            "oldValue": "[IOException, InterruptedException]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-10687. Federation Membership State Store internal API. Contributed by Jason Kace and Inigo Goiri.\n\n(cherry picked from commit 95cae08849d23cf12c5d280c29f90908e6a90d40)\n",
          "commitDate": "06/10/17 6:50 PM",
          "commitName": "55da7fd7ebe2f3fa1c1c828dda727fddc75a1b81",
          "commitAuthor": "Inigo Goiri",
          "commitDateOld": "06/10/17 6:50 PM",
          "commitNameOld": "0ec82b8cdfaaa5f23d1a0f7f7fb8c9187c5e309b",
          "commitAuthorOld": "Inigo Goiri",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,15 @@\n-  public static StateStoreService getStateStore(\n-      Configuration configuration) throws IOException, InterruptedException {\n-\n-    StateStoreService stateStore \u003d new StateStoreService();\n-    assertNotNull(stateStore);\n-\n-    // Set unique identifier, this is normally the router address\n-    String identifier \u003d UUID.randomUUID().toString();\n-    stateStore.setIdentifier(identifier);\n-\n-    stateStore.init(configuration);\n-    stateStore.start();\n-\n-    // Wait for state store to connect\n-    waitStateStore(stateStore, TimeUnit.SECONDS.toMillis(10));\n-\n-    return stateStore;\n+  public FederationNamenodeServiceState getState() {\n+    FederationNamenodeServiceState ret \u003d\n+        FederationNamenodeServiceState.UNAVAILABLE;\n+    NamenodeMembershipRecordProtoOrBuilder proto \u003d\n+        this.translator.getProtoOrBuilder();\n+    if (!proto.hasState()) {\n+      return null;\n+    }\n+    try {\n+      ret \u003d FederationNamenodeServiceState.valueOf(proto.getState());\n+    } catch (IllegalArgumentException e) {\n+      // Ignore this error\n+    }\n+    return ret;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public FederationNamenodeServiceState getState() {\n    FederationNamenodeServiceState ret \u003d\n        FederationNamenodeServiceState.UNAVAILABLE;\n    NamenodeMembershipRecordProtoOrBuilder proto \u003d\n        this.translator.getProtoOrBuilder();\n    if (!proto.hasState()) {\n      return null;\n    }\n    try {\n      ret \u003d FederationNamenodeServiceState.valueOf(proto.getState());\n    } catch (IllegalArgumentException e) {\n      // Ignore this error\n    }\n    return ret;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/federation/store/records/impl/pb/MembershipStatePBImpl.java",
          "extendedDetails": {}
        },
        {
          "type": "Yrename",
          "commitMessage": "HDFS-10687. Federation Membership State Store internal API. Contributed by Jason Kace and Inigo Goiri.\n\n(cherry picked from commit 95cae08849d23cf12c5d280c29f90908e6a90d40)\n",
          "commitDate": "06/10/17 6:50 PM",
          "commitName": "55da7fd7ebe2f3fa1c1c828dda727fddc75a1b81",
          "commitAuthor": "Inigo Goiri",
          "commitDateOld": "06/10/17 6:50 PM",
          "commitNameOld": "0ec82b8cdfaaa5f23d1a0f7f7fb8c9187c5e309b",
          "commitAuthorOld": "Inigo Goiri",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,15 @@\n-  public static StateStoreService getStateStore(\n-      Configuration configuration) throws IOException, InterruptedException {\n-\n-    StateStoreService stateStore \u003d new StateStoreService();\n-    assertNotNull(stateStore);\n-\n-    // Set unique identifier, this is normally the router address\n-    String identifier \u003d UUID.randomUUID().toString();\n-    stateStore.setIdentifier(identifier);\n-\n-    stateStore.init(configuration);\n-    stateStore.start();\n-\n-    // Wait for state store to connect\n-    waitStateStore(stateStore, TimeUnit.SECONDS.toMillis(10));\n-\n-    return stateStore;\n+  public FederationNamenodeServiceState getState() {\n+    FederationNamenodeServiceState ret \u003d\n+        FederationNamenodeServiceState.UNAVAILABLE;\n+    NamenodeMembershipRecordProtoOrBuilder proto \u003d\n+        this.translator.getProtoOrBuilder();\n+    if (!proto.hasState()) {\n+      return null;\n+    }\n+    try {\n+      ret \u003d FederationNamenodeServiceState.valueOf(proto.getState());\n+    } catch (IllegalArgumentException e) {\n+      // Ignore this error\n+    }\n+    return ret;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public FederationNamenodeServiceState getState() {\n    FederationNamenodeServiceState ret \u003d\n        FederationNamenodeServiceState.UNAVAILABLE;\n    NamenodeMembershipRecordProtoOrBuilder proto \u003d\n        this.translator.getProtoOrBuilder();\n    if (!proto.hasState()) {\n      return null;\n    }\n    try {\n      ret \u003d FederationNamenodeServiceState.valueOf(proto.getState());\n    } catch (IllegalArgumentException e) {\n      // Ignore this error\n    }\n    return ret;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/federation/store/records/impl/pb/MembershipStatePBImpl.java",
          "extendedDetails": {
            "oldValue": "getStateStore",
            "newValue": "getState"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-10687. Federation Membership State Store internal API. Contributed by Jason Kace and Inigo Goiri.\n\n(cherry picked from commit 95cae08849d23cf12c5d280c29f90908e6a90d40)\n",
          "commitDate": "06/10/17 6:50 PM",
          "commitName": "55da7fd7ebe2f3fa1c1c828dda727fddc75a1b81",
          "commitAuthor": "Inigo Goiri",
          "commitDateOld": "06/10/17 6:50 PM",
          "commitNameOld": "0ec82b8cdfaaa5f23d1a0f7f7fb8c9187c5e309b",
          "commitAuthorOld": "Inigo Goiri",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,15 @@\n-  public static StateStoreService getStateStore(\n-      Configuration configuration) throws IOException, InterruptedException {\n-\n-    StateStoreService stateStore \u003d new StateStoreService();\n-    assertNotNull(stateStore);\n-\n-    // Set unique identifier, this is normally the router address\n-    String identifier \u003d UUID.randomUUID().toString();\n-    stateStore.setIdentifier(identifier);\n-\n-    stateStore.init(configuration);\n-    stateStore.start();\n-\n-    // Wait for state store to connect\n-    waitStateStore(stateStore, TimeUnit.SECONDS.toMillis(10));\n-\n-    return stateStore;\n+  public FederationNamenodeServiceState getState() {\n+    FederationNamenodeServiceState ret \u003d\n+        FederationNamenodeServiceState.UNAVAILABLE;\n+    NamenodeMembershipRecordProtoOrBuilder proto \u003d\n+        this.translator.getProtoOrBuilder();\n+    if (!proto.hasState()) {\n+      return null;\n+    }\n+    try {\n+      ret \u003d FederationNamenodeServiceState.valueOf(proto.getState());\n+    } catch (IllegalArgumentException e) {\n+      // Ignore this error\n+    }\n+    return ret;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public FederationNamenodeServiceState getState() {\n    FederationNamenodeServiceState ret \u003d\n        FederationNamenodeServiceState.UNAVAILABLE;\n    NamenodeMembershipRecordProtoOrBuilder proto \u003d\n        this.translator.getProtoOrBuilder();\n    if (!proto.hasState()) {\n      return null;\n    }\n    try {\n      ret \u003d FederationNamenodeServiceState.valueOf(proto.getState());\n    } catch (IllegalArgumentException e) {\n      // Ignore this error\n    }\n    return ret;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/federation/store/records/impl/pb/MembershipStatePBImpl.java",
          "extendedDetails": {
            "oldValue": "[configuration-Configuration]",
            "newValue": "[]"
          }
        }
      ]
    },
    "4bf877b03f0e01c4bcedc689c66689701e62b560": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-10630. Federation State Store FS Implementation. Contributed by Jason Kace and Inigo Goiri.\n\n(cherry picked from commit c6e0bd640cdaf83a660fa050809cad6f1d4c6f4d)\n",
      "commitDate": "06/10/17 6:50 PM",
      "commitName": "4bf877b03f0e01c4bcedc689c66689701e62b560",
      "commitAuthor": "Inigo Goiri",
      "diff": "@@ -0,0 +1,18 @@\n+  public static StateStoreService getStateStore(\n+      Configuration configuration) throws IOException, InterruptedException {\n+\n+    StateStoreService stateStore \u003d new StateStoreService();\n+    assertNotNull(stateStore);\n+\n+    // Set unique identifier, this is normally the router address\n+    String identifier \u003d UUID.randomUUID().toString();\n+    stateStore.setIdentifier(identifier);\n+\n+    stateStore.init(configuration);\n+    stateStore.start();\n+\n+    // Wait for state store to connect\n+    waitStateStore(stateStore, TimeUnit.SECONDS.toMillis(10));\n+\n+    return stateStore;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static StateStoreService getStateStore(\n      Configuration configuration) throws IOException, InterruptedException {\n\n    StateStoreService stateStore \u003d new StateStoreService();\n    assertNotNull(stateStore);\n\n    // Set unique identifier, this is normally the router address\n    String identifier \u003d UUID.randomUUID().toString();\n    stateStore.setIdentifier(identifier);\n\n    stateStore.init(configuration);\n    stateStore.start();\n\n    // Wait for state store to connect\n    waitStateStore(stateStore, TimeUnit.SECONDS.toMillis(10));\n\n    return stateStore;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/test/java/org/apache/hadoop/hdfs/server/federation/store/FederationStateStoreTestUtils.java"
    }
  }
}