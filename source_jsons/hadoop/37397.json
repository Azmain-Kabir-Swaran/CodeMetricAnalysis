{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ClientRMService.java",
  "functionName": "checkTags",
  "functionId": "checkTags___tags-Set__String__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ClientRMService.java",
  "functionStartLine": 757,
  "functionEndLine": 780,
  "numCommitsSeen": 152,
  "timeTaken": 5294,
  "changeHistory": [
    "360105482258569e5e31c49d023d2bbdc3ef38cd",
    "543aac9f281871a40473e83061f6deadc0bbdab7",
    "84ddedc0b2d58257d45c16ee5e83b15f94a7ba3a",
    "ebe0c17a95ae37d4768f2928ea193e89db34ead5"
  ],
  "changeHistoryShort": {
    "360105482258569e5e31c49d023d2bbdc3ef38cd": "Ymultichange(Ymovefromfile,Yexceptionschange,Ybodychange)",
    "543aac9f281871a40473e83061f6deadc0bbdab7": "Ybodychange",
    "84ddedc0b2d58257d45c16ee5e83b15f94a7ba3a": "Ybodychange",
    "ebe0c17a95ae37d4768f2928ea193e89db34ead5": "Yintroduced"
  },
  "changeHistoryDetails": {
    "360105482258569e5e31c49d023d2bbdc3ef38cd": {
      "type": "Ymultichange(Ymovefromfile,Yexceptionschange,Ybodychange)",
      "commitMessage": "YARN-9954. Configurable max application tags and max tag length. Contributed by Bilwa S T\n",
      "commitDate": "17/04/20 10:34 AM",
      "commitName": "360105482258569e5e31c49d023d2bbdc3ef38cd",
      "commitAuthor": "Jonathan Hung",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-9954. Configurable max application tags and max tag length. Contributed by Bilwa S T\n",
          "commitDate": "17/04/20 10:34 AM",
          "commitName": "360105482258569e5e31c49d023d2bbdc3ef38cd",
          "commitAuthor": "Jonathan Hung",
          "commitDateOld": "17/04/20 8:16 AM",
          "commitNameOld": "eca05917d60f8a06f2a04815db818a7d3afbd2ce",
          "commitAuthorOld": "belugabehr",
          "daysBetweenCommits": 0.1,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,24 @@\n-  private void checkTags(Set\u003cString\u003e tags) {\n-    if (tags.size() \u003e YarnConfiguration.APPLICATION_MAX_TAGS) {\n-      throw new IllegalArgumentException(\"Too many applicationTags, a maximum of only \"\n-          + YarnConfiguration.APPLICATION_MAX_TAGS + \" are allowed!\");\n+  private void checkTags(Set\u003cString\u003e tags) throws YarnException {\n+    int appMaxTags \u003d getConfig().getInt(\n+        YarnConfiguration.RM_APPLICATION_MAX_TAGS,\n+        YarnConfiguration.DEFAULT_RM_APPLICATION_MAX_TAGS);\n+    int appMaxTagLength \u003d getConfig().getInt(\n+        YarnConfiguration.RM_APPLICATION_MAX_TAG_LENGTH,\n+        YarnConfiguration.DEFAULT_RM_APPLICATION_MAX_TAG_LENGTH);\n+    if (tags.size() \u003e appMaxTags) {\n+      throw RPCUtil.getRemoteException(new IllegalArgumentException(\n+          \"Too many applicationTags, a maximum of only \" + appMaxTags\n+              + \" are allowed!\"));\n     }\n     for (String tag : tags) {\n-      if (tag.length() \u003e YarnConfiguration.APPLICATION_MAX_TAG_LENGTH) {\n-        throw new IllegalArgumentException(\"Tag \" + tag + \" is too long, \" +\n-            \"maximum allowed length of a tag is \" +\n-            YarnConfiguration.APPLICATION_MAX_TAG_LENGTH);\n+      if (tag.length() \u003e appMaxTagLength) {\n+        throw RPCUtil.getRemoteException(\n+            new IllegalArgumentException(\"Tag \" + tag + \" is too long, \"\n+                + \"maximum allowed length of a tag is \" + appMaxTagLength));\n       }\n       if (!org.apache.commons.lang3.StringUtils.isAsciiPrintable(tag)) {\n-        throw new IllegalArgumentException(\"A tag can only have ASCII \" +\n-            \"characters! Invalid tag - \" + tag);\n+        throw RPCUtil.getRemoteException(new IllegalArgumentException(\n+            \"A tag can only have ASCII \" + \"characters! Invalid tag - \" + tag));\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void checkTags(Set\u003cString\u003e tags) throws YarnException {\n    int appMaxTags \u003d getConfig().getInt(\n        YarnConfiguration.RM_APPLICATION_MAX_TAGS,\n        YarnConfiguration.DEFAULT_RM_APPLICATION_MAX_TAGS);\n    int appMaxTagLength \u003d getConfig().getInt(\n        YarnConfiguration.RM_APPLICATION_MAX_TAG_LENGTH,\n        YarnConfiguration.DEFAULT_RM_APPLICATION_MAX_TAG_LENGTH);\n    if (tags.size() \u003e appMaxTags) {\n      throw RPCUtil.getRemoteException(new IllegalArgumentException(\n          \"Too many applicationTags, a maximum of only \" + appMaxTags\n              + \" are allowed!\"));\n    }\n    for (String tag : tags) {\n      if (tag.length() \u003e appMaxTagLength) {\n        throw RPCUtil.getRemoteException(\n            new IllegalArgumentException(\"Tag \" + tag + \" is too long, \"\n                + \"maximum allowed length of a tag is \" + appMaxTagLength));\n      }\n      if (!org.apache.commons.lang3.StringUtils.isAsciiPrintable(tag)) {\n        throw RPCUtil.getRemoteException(new IllegalArgumentException(\n            \"A tag can only have ASCII \" + \"characters! Invalid tag - \" + tag));\n      }\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ClientRMService.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ApplicationSubmissionContextPBImpl.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ClientRMService.java",
            "oldMethodName": "checkTags",
            "newMethodName": "checkTags"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "YARN-9954. Configurable max application tags and max tag length. Contributed by Bilwa S T\n",
          "commitDate": "17/04/20 10:34 AM",
          "commitName": "360105482258569e5e31c49d023d2bbdc3ef38cd",
          "commitAuthor": "Jonathan Hung",
          "commitDateOld": "17/04/20 8:16 AM",
          "commitNameOld": "eca05917d60f8a06f2a04815db818a7d3afbd2ce",
          "commitAuthorOld": "belugabehr",
          "daysBetweenCommits": 0.1,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,24 @@\n-  private void checkTags(Set\u003cString\u003e tags) {\n-    if (tags.size() \u003e YarnConfiguration.APPLICATION_MAX_TAGS) {\n-      throw new IllegalArgumentException(\"Too many applicationTags, a maximum of only \"\n-          + YarnConfiguration.APPLICATION_MAX_TAGS + \" are allowed!\");\n+  private void checkTags(Set\u003cString\u003e tags) throws YarnException {\n+    int appMaxTags \u003d getConfig().getInt(\n+        YarnConfiguration.RM_APPLICATION_MAX_TAGS,\n+        YarnConfiguration.DEFAULT_RM_APPLICATION_MAX_TAGS);\n+    int appMaxTagLength \u003d getConfig().getInt(\n+        YarnConfiguration.RM_APPLICATION_MAX_TAG_LENGTH,\n+        YarnConfiguration.DEFAULT_RM_APPLICATION_MAX_TAG_LENGTH);\n+    if (tags.size() \u003e appMaxTags) {\n+      throw RPCUtil.getRemoteException(new IllegalArgumentException(\n+          \"Too many applicationTags, a maximum of only \" + appMaxTags\n+              + \" are allowed!\"));\n     }\n     for (String tag : tags) {\n-      if (tag.length() \u003e YarnConfiguration.APPLICATION_MAX_TAG_LENGTH) {\n-        throw new IllegalArgumentException(\"Tag \" + tag + \" is too long, \" +\n-            \"maximum allowed length of a tag is \" +\n-            YarnConfiguration.APPLICATION_MAX_TAG_LENGTH);\n+      if (tag.length() \u003e appMaxTagLength) {\n+        throw RPCUtil.getRemoteException(\n+            new IllegalArgumentException(\"Tag \" + tag + \" is too long, \"\n+                + \"maximum allowed length of a tag is \" + appMaxTagLength));\n       }\n       if (!org.apache.commons.lang3.StringUtils.isAsciiPrintable(tag)) {\n-        throw new IllegalArgumentException(\"A tag can only have ASCII \" +\n-            \"characters! Invalid tag - \" + tag);\n+        throw RPCUtil.getRemoteException(new IllegalArgumentException(\n+            \"A tag can only have ASCII \" + \"characters! Invalid tag - \" + tag));\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void checkTags(Set\u003cString\u003e tags) throws YarnException {\n    int appMaxTags \u003d getConfig().getInt(\n        YarnConfiguration.RM_APPLICATION_MAX_TAGS,\n        YarnConfiguration.DEFAULT_RM_APPLICATION_MAX_TAGS);\n    int appMaxTagLength \u003d getConfig().getInt(\n        YarnConfiguration.RM_APPLICATION_MAX_TAG_LENGTH,\n        YarnConfiguration.DEFAULT_RM_APPLICATION_MAX_TAG_LENGTH);\n    if (tags.size() \u003e appMaxTags) {\n      throw RPCUtil.getRemoteException(new IllegalArgumentException(\n          \"Too many applicationTags, a maximum of only \" + appMaxTags\n              + \" are allowed!\"));\n    }\n    for (String tag : tags) {\n      if (tag.length() \u003e appMaxTagLength) {\n        throw RPCUtil.getRemoteException(\n            new IllegalArgumentException(\"Tag \" + tag + \" is too long, \"\n                + \"maximum allowed length of a tag is \" + appMaxTagLength));\n      }\n      if (!org.apache.commons.lang3.StringUtils.isAsciiPrintable(tag)) {\n        throw RPCUtil.getRemoteException(new IllegalArgumentException(\n            \"A tag can only have ASCII \" + \"characters! Invalid tag - \" + tag));\n      }\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ClientRMService.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[YarnException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-9954. Configurable max application tags and max tag length. Contributed by Bilwa S T\n",
          "commitDate": "17/04/20 10:34 AM",
          "commitName": "360105482258569e5e31c49d023d2bbdc3ef38cd",
          "commitAuthor": "Jonathan Hung",
          "commitDateOld": "17/04/20 8:16 AM",
          "commitNameOld": "eca05917d60f8a06f2a04815db818a7d3afbd2ce",
          "commitAuthorOld": "belugabehr",
          "daysBetweenCommits": 0.1,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,24 @@\n-  private void checkTags(Set\u003cString\u003e tags) {\n-    if (tags.size() \u003e YarnConfiguration.APPLICATION_MAX_TAGS) {\n-      throw new IllegalArgumentException(\"Too many applicationTags, a maximum of only \"\n-          + YarnConfiguration.APPLICATION_MAX_TAGS + \" are allowed!\");\n+  private void checkTags(Set\u003cString\u003e tags) throws YarnException {\n+    int appMaxTags \u003d getConfig().getInt(\n+        YarnConfiguration.RM_APPLICATION_MAX_TAGS,\n+        YarnConfiguration.DEFAULT_RM_APPLICATION_MAX_TAGS);\n+    int appMaxTagLength \u003d getConfig().getInt(\n+        YarnConfiguration.RM_APPLICATION_MAX_TAG_LENGTH,\n+        YarnConfiguration.DEFAULT_RM_APPLICATION_MAX_TAG_LENGTH);\n+    if (tags.size() \u003e appMaxTags) {\n+      throw RPCUtil.getRemoteException(new IllegalArgumentException(\n+          \"Too many applicationTags, a maximum of only \" + appMaxTags\n+              + \" are allowed!\"));\n     }\n     for (String tag : tags) {\n-      if (tag.length() \u003e YarnConfiguration.APPLICATION_MAX_TAG_LENGTH) {\n-        throw new IllegalArgumentException(\"Tag \" + tag + \" is too long, \" +\n-            \"maximum allowed length of a tag is \" +\n-            YarnConfiguration.APPLICATION_MAX_TAG_LENGTH);\n+      if (tag.length() \u003e appMaxTagLength) {\n+        throw RPCUtil.getRemoteException(\n+            new IllegalArgumentException(\"Tag \" + tag + \" is too long, \"\n+                + \"maximum allowed length of a tag is \" + appMaxTagLength));\n       }\n       if (!org.apache.commons.lang3.StringUtils.isAsciiPrintable(tag)) {\n-        throw new IllegalArgumentException(\"A tag can only have ASCII \" +\n-            \"characters! Invalid tag - \" + tag);\n+        throw RPCUtil.getRemoteException(new IllegalArgumentException(\n+            \"A tag can only have ASCII \" + \"characters! Invalid tag - \" + tag));\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void checkTags(Set\u003cString\u003e tags) throws YarnException {\n    int appMaxTags \u003d getConfig().getInt(\n        YarnConfiguration.RM_APPLICATION_MAX_TAGS,\n        YarnConfiguration.DEFAULT_RM_APPLICATION_MAX_TAGS);\n    int appMaxTagLength \u003d getConfig().getInt(\n        YarnConfiguration.RM_APPLICATION_MAX_TAG_LENGTH,\n        YarnConfiguration.DEFAULT_RM_APPLICATION_MAX_TAG_LENGTH);\n    if (tags.size() \u003e appMaxTags) {\n      throw RPCUtil.getRemoteException(new IllegalArgumentException(\n          \"Too many applicationTags, a maximum of only \" + appMaxTags\n              + \" are allowed!\"));\n    }\n    for (String tag : tags) {\n      if (tag.length() \u003e appMaxTagLength) {\n        throw RPCUtil.getRemoteException(\n            new IllegalArgumentException(\"Tag \" + tag + \" is too long, \"\n                + \"maximum allowed length of a tag is \" + appMaxTagLength));\n      }\n      if (!org.apache.commons.lang3.StringUtils.isAsciiPrintable(tag)) {\n        throw RPCUtil.getRemoteException(new IllegalArgumentException(\n            \"A tag can only have ASCII \" + \"characters! Invalid tag - \" + tag));\n      }\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ClientRMService.java",
          "extendedDetails": {}
        }
      ]
    },
    "543aac9f281871a40473e83061f6deadc0bbdab7": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14386. Rewind trunk from Guava 21.0 back to Guava 11.0.2.\n",
      "commitDate": "09/05/17 9:22 AM",
      "commitName": "543aac9f281871a40473e83061f6deadc0bbdab7",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "27/03/17 5:23 PM",
      "commitNameOld": "9bae6720cb8432efd78c909dc624c00e367cedf5",
      "commitAuthorOld": "Robert Kanter",
      "daysBetweenCommits": 42.67,
      "commitsBetweenForRepo": 239,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   private void checkTags(Set\u003cString\u003e tags) {\n     if (tags.size() \u003e YarnConfiguration.APPLICATION_MAX_TAGS) {\n       throw new IllegalArgumentException(\"Too many applicationTags, a maximum of only \"\n           + YarnConfiguration.APPLICATION_MAX_TAGS + \" are allowed!\");\n     }\n     for (String tag : tags) {\n       if (tag.length() \u003e YarnConfiguration.APPLICATION_MAX_TAG_LENGTH) {\n         throw new IllegalArgumentException(\"Tag \" + tag + \" is too long, \" +\n             \"maximum allowed length of a tag is \" +\n             YarnConfiguration.APPLICATION_MAX_TAG_LENGTH);\n       }\n-      if (!CharMatcher.ascii().matchesAllOf(tag)) {\n+      if (!org.apache.commons.lang3.StringUtils.isAsciiPrintable(tag)) {\n         throw new IllegalArgumentException(\"A tag can only have ASCII \" +\n             \"characters! Invalid tag - \" + tag);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void checkTags(Set\u003cString\u003e tags) {\n    if (tags.size() \u003e YarnConfiguration.APPLICATION_MAX_TAGS) {\n      throw new IllegalArgumentException(\"Too many applicationTags, a maximum of only \"\n          + YarnConfiguration.APPLICATION_MAX_TAGS + \" are allowed!\");\n    }\n    for (String tag : tags) {\n      if (tag.length() \u003e YarnConfiguration.APPLICATION_MAX_TAG_LENGTH) {\n        throw new IllegalArgumentException(\"Tag \" + tag + \" is too long, \" +\n            \"maximum allowed length of a tag is \" +\n            YarnConfiguration.APPLICATION_MAX_TAG_LENGTH);\n      }\n      if (!org.apache.commons.lang3.StringUtils.isAsciiPrintable(tag)) {\n        throw new IllegalArgumentException(\"A tag can only have ASCII \" +\n            \"characters! Invalid tag - \" + tag);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ApplicationSubmissionContextPBImpl.java",
      "extendedDetails": {}
    },
    "84ddedc0b2d58257d45c16ee5e83b15f94a7ba3a": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10101. Update guava dependency to the latest version. (ozawa)\n",
      "commitDate": "24/03/17 6:06 PM",
      "commitName": "84ddedc0b2d58257d45c16ee5e83b15f94a7ba3a",
      "commitAuthor": "Tsuyoshi Ozawa",
      "commitDateOld": "29/09/16 7:00 AM",
      "commitNameOld": "2ae5a3a5bf5ea355370469a53eeccff0b5220081",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 176.46,
      "commitsBetweenForRepo": 1103,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   private void checkTags(Set\u003cString\u003e tags) {\n     if (tags.size() \u003e YarnConfiguration.APPLICATION_MAX_TAGS) {\n       throw new IllegalArgumentException(\"Too many applicationTags, a maximum of only \"\n           + YarnConfiguration.APPLICATION_MAX_TAGS + \" are allowed!\");\n     }\n     for (String tag : tags) {\n       if (tag.length() \u003e YarnConfiguration.APPLICATION_MAX_TAG_LENGTH) {\n         throw new IllegalArgumentException(\"Tag \" + tag + \" is too long, \" +\n             \"maximum allowed length of a tag is \" +\n             YarnConfiguration.APPLICATION_MAX_TAG_LENGTH);\n       }\n-      if (!CharMatcher.ASCII.matchesAllOf(tag)) {\n+      if (!CharMatcher.ascii().matchesAllOf(tag)) {\n         throw new IllegalArgumentException(\"A tag can only have ASCII \" +\n             \"characters! Invalid tag - \" + tag);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void checkTags(Set\u003cString\u003e tags) {\n    if (tags.size() \u003e YarnConfiguration.APPLICATION_MAX_TAGS) {\n      throw new IllegalArgumentException(\"Too many applicationTags, a maximum of only \"\n          + YarnConfiguration.APPLICATION_MAX_TAGS + \" are allowed!\");\n    }\n    for (String tag : tags) {\n      if (tag.length() \u003e YarnConfiguration.APPLICATION_MAX_TAG_LENGTH) {\n        throw new IllegalArgumentException(\"Tag \" + tag + \" is too long, \" +\n            \"maximum allowed length of a tag is \" +\n            YarnConfiguration.APPLICATION_MAX_TAG_LENGTH);\n      }\n      if (!CharMatcher.ascii().matchesAllOf(tag)) {\n        throw new IllegalArgumentException(\"A tag can only have ASCII \" +\n            \"characters! Invalid tag - \" + tag);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ApplicationSubmissionContextPBImpl.java",
      "extendedDetails": {}
    },
    "ebe0c17a95ae37d4768f2928ea193e89db34ead5": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1461. Added tags for YARN applications and changed RM to handle them. Contributed by Karthik Kambatla.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1564633 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/02/14 8:55 PM",
      "commitName": "ebe0c17a95ae37d4768f2928ea193e89db34ead5",
      "commitAuthor": "Zhijie Shen",
      "diff": "@@ -0,0 +1,17 @@\n+  private void checkTags(Set\u003cString\u003e tags) {\n+    if (tags.size() \u003e YarnConfiguration.APPLICATION_MAX_TAGS) {\n+      throw new IllegalArgumentException(\"Too many applicationTags, a maximum of only \"\n+          + YarnConfiguration.APPLICATION_MAX_TAGS + \" are allowed!\");\n+    }\n+    for (String tag : tags) {\n+      if (tag.length() \u003e YarnConfiguration.APPLICATION_MAX_TAG_LENGTH) {\n+        throw new IllegalArgumentException(\"Tag \" + tag + \" is too long, \" +\n+            \"maximum allowed length of a tag is \" +\n+            YarnConfiguration.APPLICATION_MAX_TAG_LENGTH);\n+      }\n+      if (!CharMatcher.ASCII.matchesAllOf(tag)) {\n+        throw new IllegalArgumentException(\"A tag can only have ASCII \" +\n+            \"characters! Invalid tag - \" + tag);\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void checkTags(Set\u003cString\u003e tags) {\n    if (tags.size() \u003e YarnConfiguration.APPLICATION_MAX_TAGS) {\n      throw new IllegalArgumentException(\"Too many applicationTags, a maximum of only \"\n          + YarnConfiguration.APPLICATION_MAX_TAGS + \" are allowed!\");\n    }\n    for (String tag : tags) {\n      if (tag.length() \u003e YarnConfiguration.APPLICATION_MAX_TAG_LENGTH) {\n        throw new IllegalArgumentException(\"Tag \" + tag + \" is too long, \" +\n            \"maximum allowed length of a tag is \" +\n            YarnConfiguration.APPLICATION_MAX_TAG_LENGTH);\n      }\n      if (!CharMatcher.ASCII.matchesAllOf(tag)) {\n        throw new IllegalArgumentException(\"A tag can only have ASCII \" +\n            \"characters! Invalid tag - \" + tag);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ApplicationSubmissionContextPBImpl.java"
    }
  }
}