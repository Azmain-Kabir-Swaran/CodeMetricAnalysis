{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NodeAttributesCLI.java",
  "functionName": "handleCommand",
  "functionId": "handleCommand___cliParser-CommandLine",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/NodeAttributesCLI.java",
  "functionStartLine": 563,
  "functionEndLine": 591,
  "numCommitsSeen": 4,
  "timeTaken": 1153,
  "changeHistory": [
    "eb08543c7a5d1fd97a1915dbc5a11a2ba2066ba1"
  ],
  "changeHistoryShort": {
    "eb08543c7a5d1fd97a1915dbc5a11a2ba2066ba1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "eb08543c7a5d1fd97a1915dbc5a11a2ba2066ba1": {
      "type": "Yintroduced",
      "commitMessage": "YARN-8103. Add CLI interface to query node attributes. Contributed by Bibin A Chundatt.\n",
      "commitDate": "12/09/18 3:31 AM",
      "commitName": "eb08543c7a5d1fd97a1915dbc5a11a2ba2066ba1",
      "commitAuthor": "Naganarasimha",
      "diff": "@@ -0,0 +1,29 @@\n+    public int handleCommand(CommandLine cliParser)\n+        throws IOException, YarnException {\n+      String operation \u003d null;\n+      if (cliParser.hasOption(ADD)) {\n+        operation \u003d ADD;\n+      } else if (cliParser.hasOption(REMOVE)) {\n+        operation \u003d REMOVE;\n+      } else if (cliParser.hasOption(REPLACE)) {\n+        operation \u003d REPLACE;\n+      }\n+      if (operation !\u003d null) {\n+        List\u003cNodeToAttributes\u003e buildNodeLabelsListFromStr \u003d\n+            buildNodeLabelsListFromStr(cliParser.getOptionValue(operation),\n+                !operation.equals(REPLACE), operation);\n+        NodesToAttributesMappingRequest request \u003d\n+            NodesToAttributesMappingRequest.newInstance(\n+                AttributeMappingOperationType.valueOf(operation.toUpperCase()),\n+                buildNodeLabelsListFromStr,\n+                cliParser.hasOption(FAILUNKNOWNNODES));\n+        ResourceManagerAdministrationProtocol adminProtocol \u003d\n+            createAdminProtocol();\n+        adminProtocol.mapAttributesToNodes(request);\n+      } else {\n+        // Handle case for only failOnUnknownNodes passed\n+        throw new IllegalArgumentException(\n+            getOptions().getOption(FAILUNKNOWNNODES).getDescription());\n+      }\n+      return 0;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public int handleCommand(CommandLine cliParser)\n        throws IOException, YarnException {\n      String operation \u003d null;\n      if (cliParser.hasOption(ADD)) {\n        operation \u003d ADD;\n      } else if (cliParser.hasOption(REMOVE)) {\n        operation \u003d REMOVE;\n      } else if (cliParser.hasOption(REPLACE)) {\n        operation \u003d REPLACE;\n      }\n      if (operation !\u003d null) {\n        List\u003cNodeToAttributes\u003e buildNodeLabelsListFromStr \u003d\n            buildNodeLabelsListFromStr(cliParser.getOptionValue(operation),\n                !operation.equals(REPLACE), operation);\n        NodesToAttributesMappingRequest request \u003d\n            NodesToAttributesMappingRequest.newInstance(\n                AttributeMappingOperationType.valueOf(operation.toUpperCase()),\n                buildNodeLabelsListFromStr,\n                cliParser.hasOption(FAILUNKNOWNNODES));\n        ResourceManagerAdministrationProtocol adminProtocol \u003d\n            createAdminProtocol();\n        adminProtocol.mapAttributesToNodes(request);\n      } else {\n        // Handle case for only failOnUnknownNodes passed\n        throw new IllegalArgumentException(\n            getOptions().getOption(FAILUNKNOWNNODES).getDescription());\n      }\n      return 0;\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/NodeAttributesCLI.java"
    }
  }
}