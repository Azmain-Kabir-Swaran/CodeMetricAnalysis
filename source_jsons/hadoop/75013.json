{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CredentialShell.java",
  "functionName": "validate",
  "functionId": "validate",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/alias/CredentialShell.java",
  "functionStartLine": 244,
  "functionEndLine": 273,
  "numCommitsSeen": 15,
  "timeTaken": 1539,
  "changeHistory": [
    "eebb39a56fe504672b79ea04c6040e360496b6d7",
    "acb509b2fa0bbe6e00f8a90aec37f63a09463afa",
    "5918e991512658aa9d2af45a15862a8d405590fb",
    "c79728478caadd8374bce2bc3f466db1da1e3ad1"
  ],
  "changeHistoryShort": {
    "eebb39a56fe504672b79ea04c6040e360496b6d7": "Ybodychange",
    "acb509b2fa0bbe6e00f8a90aec37f63a09463afa": "Ybodychange",
    "5918e991512658aa9d2af45a15862a8d405590fb": "Ybodychange",
    "c79728478caadd8374bce2bc3f466db1da1e3ad1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "eebb39a56fe504672b79ea04c6040e360496b6d7": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13112. Change CredentialShell to use CommandShell base class (Matthew Paduano via aw)\n",
      "commitDate": "23/05/16 1:37 PM",
      "commitName": "eebb39a56fe504672b79ea04c6040e360496b6d7",
      "commitAuthor": "Allen Wittenauer",
      "commitDateOld": "17/05/16 5:44 PM",
      "commitNameOld": "7154ace71212e9fb9dd6209a92165fb075df7806",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 5.83,
      "commitsBetweenForRepo": 35,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,26 @@\n     public boolean validate() {\n-      boolean rc \u003d true;\n+      if (alias \u003d\u003d null) {\n+        getOut().println(\"There is no alias specified. Please provide the\" +\n+            \"mandatory \u003calias\u003e. See the usage description with -help.\");\n+        return false;\n+      }\n+      if (alias.equals(\"-help\")) {\n+        return true;\n+      }\n       try {\n         provider \u003d getCredentialProvider();\n         if (provider \u003d\u003d null) {\n-          rc \u003d false;\n+          return false;\n         } else if (provider.needsPassword()) {\n           if (strict) {\n-            out.println(provider.noPasswordError());\n-            rc \u003d false;\n+            getOut().println(provider.noPasswordError());\n+            return false;\n           } else {\n-            out.println(provider.noPasswordWarning());\n+            getOut().println(provider.noPasswordWarning());\n           }\n         }\n       } catch (IOException e) {\n-        e.printStackTrace(err);\n+        e.printStackTrace(getErr());\n       }\n-      if (alias \u003d\u003d null) {\n-        out.println(\"There is no alias specified. Please provide the\" +\n-            \"mandatory \u003calias\u003e. See the usage description with -help.\");\n-        rc \u003d false;\n-      }\n-      return rc;\n+      return true;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public boolean validate() {\n      if (alias \u003d\u003d null) {\n        getOut().println(\"There is no alias specified. Please provide the\" +\n            \"mandatory \u003calias\u003e. See the usage description with -help.\");\n        return false;\n      }\n      if (alias.equals(\"-help\")) {\n        return true;\n      }\n      try {\n        provider \u003d getCredentialProvider();\n        if (provider \u003d\u003d null) {\n          return false;\n        } else if (provider.needsPassword()) {\n          if (strict) {\n            getOut().println(provider.noPasswordError());\n            return false;\n          } else {\n            getOut().println(provider.noPasswordWarning());\n          }\n        }\n      } catch (IOException e) {\n        e.printStackTrace(getErr());\n      }\n      return true;\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/alias/CredentialShell.java",
      "extendedDetails": {}
    },
    "acb509b2fa0bbe6e00f8a90aec37f63a09463afa": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12942. hadoop credential commands non-obviously use password of \"none\" (Mike Yoder via lmccay)",
      "commitDate": "11/05/16 11:30 AM",
      "commitName": "acb509b2fa0bbe6e00f8a90aec37f63a09463afa",
      "commitAuthor": "Larry McCay",
      "commitDateOld": "24/03/15 4:57 AM",
      "commitNameOld": "6e891a921e00b122390a976dfd13838472a7fcc6",
      "commitAuthorOld": "Tsuyoshi Ozawa",
      "daysBetweenCommits": 414.27,
      "commitsBetweenForRepo": 3094,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,24 @@\n     public boolean validate() {\n       boolean rc \u003d true;\n-      provider \u003d getCredentialProvider();\n-      if (provider \u003d\u003d null) {\n-        out.println(\"There are no valid CredentialProviders configured.\" +\n-        \t\t\"\\nCredential will not be created.\\n\"\n-            + \"Consider using the -provider option to indicate the provider\" +\n-            \" to use.\");\n-        rc \u003d false;\n+      try {\n+        provider \u003d getCredentialProvider();\n+        if (provider \u003d\u003d null) {\n+          rc \u003d false;\n+        } else if (provider.needsPassword()) {\n+          if (strict) {\n+            out.println(provider.noPasswordError());\n+            rc \u003d false;\n+          } else {\n+            out.println(provider.noPasswordWarning());\n+          }\n+        }\n+      } catch (IOException e) {\n+        e.printStackTrace(err);\n       }\n       if (alias \u003d\u003d null) {\n         out.println(\"There is no alias specified. Please provide the\" +\n             \"mandatory \u003calias\u003e. See the usage description with -help.\");\n         rc \u003d false;\n       }\n       return rc;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public boolean validate() {\n      boolean rc \u003d true;\n      try {\n        provider \u003d getCredentialProvider();\n        if (provider \u003d\u003d null) {\n          rc \u003d false;\n        } else if (provider.needsPassword()) {\n          if (strict) {\n            out.println(provider.noPasswordError());\n            rc \u003d false;\n          } else {\n            out.println(provider.noPasswordWarning());\n          }\n        }\n      } catch (IOException e) {\n        e.printStackTrace(err);\n      }\n      if (alias \u003d\u003d null) {\n        out.println(\"There is no alias specified. Please provide the\" +\n            \"mandatory \u003calias\u003e. See the usage description with -help.\");\n        rc \u003d false;\n      }\n      return rc;\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/alias/CredentialShell.java",
      "extendedDetails": {}
    },
    "5918e991512658aa9d2af45a15862a8d405590fb": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10900. CredentialShell args should use single-dash style. (wang)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1615177 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "01/08/14 10:43 AM",
      "commitName": "5918e991512658aa9d2af45a15862a8d405590fb",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "17/07/14 11:09 AM",
      "commitNameOld": "1e7ce76bbab08a153b285739de51c3de924e3580",
      "commitAuthorOld": "Owen O\u0027Malley",
      "daysBetweenCommits": 14.98,
      "commitsBetweenForRepo": 111,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n     public boolean validate() {\n       boolean rc \u003d true;\n       provider \u003d getCredentialProvider();\n       if (provider \u003d\u003d null) {\n         out.println(\"There are no valid CredentialProviders configured.\" +\n         \t\t\"\\nCredential will not be created.\\n\"\n-            + \"Consider using the --provider option to indicate the provider\" +\n+            + \"Consider using the -provider option to indicate the provider\" +\n             \" to use.\");\n         rc \u003d false;\n       }\n       if (alias \u003d\u003d null) {\n         out.println(\"There is no alias specified. Please provide the\" +\n-        \t\t\"mandatory \u003calias\u003e. See the usage description with --help.\");\n+            \"mandatory \u003calias\u003e. See the usage description with -help.\");\n         rc \u003d false;\n       }\n       return rc;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public boolean validate() {\n      boolean rc \u003d true;\n      provider \u003d getCredentialProvider();\n      if (provider \u003d\u003d null) {\n        out.println(\"There are no valid CredentialProviders configured.\" +\n        \t\t\"\\nCredential will not be created.\\n\"\n            + \"Consider using the -provider option to indicate the provider\" +\n            \" to use.\");\n        rc \u003d false;\n      }\n      if (alias \u003d\u003d null) {\n        out.println(\"There is no alias specified. Please provide the\" +\n            \"mandatory \u003calias\u003e. See the usage description with -help.\");\n        rc \u003d false;\n      }\n      return rc;\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/alias/CredentialShell.java",
      "extendedDetails": {}
    },
    "c79728478caadd8374bce2bc3f466db1da1e3ad1": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-10607. Create API to separate credential/password storage from\napplications. (Larry McCay via omalley)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1603491 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/06/14 8:45 AM",
      "commitName": "c79728478caadd8374bce2bc3f466db1da1e3ad1",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,17 @@\n+    public boolean validate() {\n+      boolean rc \u003d true;\n+      provider \u003d getCredentialProvider();\n+      if (provider \u003d\u003d null) {\n+        out.println(\"There are no valid CredentialProviders configured.\" +\n+        \t\t\"\\nCredential will not be created.\\n\"\n+            + \"Consider using the --provider option to indicate the provider\" +\n+            \" to use.\");\n+        rc \u003d false;\n+      }\n+      if (alias \u003d\u003d null) {\n+        out.println(\"There is no alias specified. Please provide the\" +\n+        \t\t\"mandatory \u003calias\u003e. See the usage description with --help.\");\n+        rc \u003d false;\n+      }\n+      return rc;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public boolean validate() {\n      boolean rc \u003d true;\n      provider \u003d getCredentialProvider();\n      if (provider \u003d\u003d null) {\n        out.println(\"There are no valid CredentialProviders configured.\" +\n        \t\t\"\\nCredential will not be created.\\n\"\n            + \"Consider using the --provider option to indicate the provider\" +\n            \" to use.\");\n        rc \u003d false;\n      }\n      if (alias \u003d\u003d null) {\n        out.println(\"There is no alias specified. Please provide the\" +\n        \t\t\"mandatory \u003calias\u003e. See the usage description with --help.\");\n        rc \u003d false;\n      }\n      return rc;\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/alias/CredentialShell.java"
    }
  }
}