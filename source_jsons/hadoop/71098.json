{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSTreeWalk.java",
  "functionName": "getChildren",
  "functionId": "getChildren___path-TreePath__id-long__i-TreeIterator",
  "sourceFilePath": "hadoop-tools/hadoop-fs2img/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSTreeWalk.java",
  "functionStartLine": 73,
  "functionEndLine": 91,
  "numCommitsSeen": 4,
  "timeTaken": 853,
  "changeHistory": [
    "fabd41fa480303f86bfe7b6ae0277bc0b6015f80",
    "4531588a94dcd2b4141b12828cb60ca3b953a58c",
    "8da3a6e314609f9124bd9979cd09cddbc2a10d36"
  ],
  "changeHistoryShort": {
    "fabd41fa480303f86bfe7b6ae0277bc0b6015f80": "Ybodychange",
    "4531588a94dcd2b4141b12828cb60ca3b953a58c": "Ybodychange",
    "8da3a6e314609f9124bd9979cd09cddbc2a10d36": "Yintroduced"
  },
  "changeHistoryDetails": {
    "fabd41fa480303f86bfe7b6ae0277bc0b6015f80": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14856. Fetch file ACLs while mounting external store. (#1478)\n\n",
      "commitDate": "14/10/19 9:44 AM",
      "commitName": "fabd41fa480303f86bfe7b6ae0277bc0b6015f80",
      "commitAuthor": "Ashvin",
      "commitDateOld": "15/12/17 5:51 PM",
      "commitNameOld": "4531588a94dcd2b4141b12828cb60ca3b953a58c",
      "commitAuthorOld": "Virajith Jalaparti",
      "daysBetweenCommits": 667.62,
      "commitsBetweenForRepo": 5583,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,19 @@\n   protected Iterable\u003cTreePath\u003e getChildren(TreePath path, long id,\n       TreeIterator i) {\n     // TODO symlinks\n     if (!path.getFileStatus().isDirectory()) {\n       return Collections.emptyList();\n     }\n     try {\n       ArrayList\u003cTreePath\u003e ret \u003d new ArrayList\u003c\u003e();\n       for (FileStatus s : fs.listStatus(path.getFileStatus().getPath())) {\n-        ret.add(new TreePath(s, id, i, fs));\n+        AclStatus aclStatus \u003d getAclStatus(fs, s.getPath());\n+        ret.add(new TreePath(s, id, i, fs, aclStatus));\n       }\n       return ret;\n     } catch (FileNotFoundException e) {\n       throw new ConcurrentModificationException(\"FS modified\");\n     } catch (IOException e) {\n       throw new RuntimeException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected Iterable\u003cTreePath\u003e getChildren(TreePath path, long id,\n      TreeIterator i) {\n    // TODO symlinks\n    if (!path.getFileStatus().isDirectory()) {\n      return Collections.emptyList();\n    }\n    try {\n      ArrayList\u003cTreePath\u003e ret \u003d new ArrayList\u003c\u003e();\n      for (FileStatus s : fs.listStatus(path.getFileStatus().getPath())) {\n        AclStatus aclStatus \u003d getAclStatus(fs, s.getPath());\n        ret.add(new TreePath(s, id, i, fs, aclStatus));\n      }\n      return ret;\n    } catch (FileNotFoundException e) {\n      throw new ConcurrentModificationException(\"FS modified\");\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }",
      "path": "hadoop-tools/hadoop-fs2img/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSTreeWalk.java",
      "extendedDetails": {}
    },
    "4531588a94dcd2b4141b12828cb60ca3b953a58c": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11640. [READ] Datanodes should use a unique identifier when reading from external stores\n",
      "commitDate": "15/12/17 5:51 PM",
      "commitName": "4531588a94dcd2b4141b12828cb60ca3b953a58c",
      "commitAuthor": "Virajith Jalaparti",
      "commitDateOld": "15/12/17 5:51 PM",
      "commitNameOld": "a027055dd2bf5009fe272e9ceb08305bd0a8cc31",
      "commitAuthorOld": "Virajith Jalaparti",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   protected Iterable\u003cTreePath\u003e getChildren(TreePath path, long id,\n       TreeIterator i) {\n     // TODO symlinks\n     if (!path.getFileStatus().isDirectory()) {\n       return Collections.emptyList();\n     }\n     try {\n       ArrayList\u003cTreePath\u003e ret \u003d new ArrayList\u003c\u003e();\n       for (FileStatus s : fs.listStatus(path.getFileStatus().getPath())) {\n-        ret.add(new TreePath(s, id, i));\n+        ret.add(new TreePath(s, id, i, fs));\n       }\n       return ret;\n     } catch (FileNotFoundException e) {\n       throw new ConcurrentModificationException(\"FS modified\");\n     } catch (IOException e) {\n       throw new RuntimeException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected Iterable\u003cTreePath\u003e getChildren(TreePath path, long id,\n      TreeIterator i) {\n    // TODO symlinks\n    if (!path.getFileStatus().isDirectory()) {\n      return Collections.emptyList();\n    }\n    try {\n      ArrayList\u003cTreePath\u003e ret \u003d new ArrayList\u003c\u003e();\n      for (FileStatus s : fs.listStatus(path.getFileStatus().getPath())) {\n        ret.add(new TreePath(s, id, i, fs));\n      }\n      return ret;\n    } catch (FileNotFoundException e) {\n      throw new ConcurrentModificationException(\"FS modified\");\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }",
      "path": "hadoop-tools/hadoop-fs2img/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSTreeWalk.java",
      "extendedDetails": {}
    },
    "8da3a6e314609f9124bd9979cd09cddbc2a10d36": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-10706. [READ] Add tool generating FSImage from external store\n",
      "commitDate": "15/12/17 5:51 PM",
      "commitName": "8da3a6e314609f9124bd9979cd09cddbc2a10d36",
      "commitAuthor": "Virajith Jalaparti",
      "diff": "@@ -0,0 +1,18 @@\n+  protected Iterable\u003cTreePath\u003e getChildren(TreePath path, long id,\n+      TreeIterator i) {\n+    // TODO symlinks\n+    if (!path.getFileStatus().isDirectory()) {\n+      return Collections.emptyList();\n+    }\n+    try {\n+      ArrayList\u003cTreePath\u003e ret \u003d new ArrayList\u003c\u003e();\n+      for (FileStatus s : fs.listStatus(path.getFileStatus().getPath())) {\n+        ret.add(new TreePath(s, id, i));\n+      }\n+      return ret;\n+    } catch (FileNotFoundException e) {\n+      throw new ConcurrentModificationException(\"FS modified\");\n+    } catch (IOException e) {\n+      throw new RuntimeException(e);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected Iterable\u003cTreePath\u003e getChildren(TreePath path, long id,\n      TreeIterator i) {\n    // TODO symlinks\n    if (!path.getFileStatus().isDirectory()) {\n      return Collections.emptyList();\n    }\n    try {\n      ArrayList\u003cTreePath\u003e ret \u003d new ArrayList\u003c\u003e();\n      for (FileStatus s : fs.listStatus(path.getFileStatus().getPath())) {\n        ret.add(new TreePath(s, id, i));\n      }\n      return ret;\n    } catch (FileNotFoundException e) {\n      throw new ConcurrentModificationException(\"FS modified\");\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }",
      "path": "hadoop-tools/hadoop-fs2img/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSTreeWalk.java"
    }
  }
}