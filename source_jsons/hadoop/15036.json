{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PBImageCorruptionDetector.java",
  "functionName": "getEntry",
  "functionId": "getEntry___parentPath-String__inode-FsImageProto.INodeSection.INode",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/PBImageCorruptionDetector.java",
  "functionStartLine": 207,
  "functionEndLine": 230,
  "numCommitsSeen": 1,
  "timeTaken": 779,
  "changeHistory": [
    "fb10803dfa67394650072bdea327296f8ad2a744"
  ],
  "changeHistoryShort": {
    "fb10803dfa67394650072bdea327296f8ad2a744": "Yintroduced"
  },
  "changeHistoryDetails": {
    "fb10803dfa67394650072bdea327296f8ad2a744": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-13818. Extend OIV to detect FSImage corruption. Contributed by Adam Antal.\n\nSigned-off-by: Wei-Chiu Chuang \u003cweichiu@apache.org\u003e\n",
      "commitDate": "03/12/18 10:34 AM",
      "commitName": "fb10803dfa67394650072bdea327296f8ad2a744",
      "commitAuthor": "Adam Antal",
      "diff": "@@ -0,0 +1,24 @@\n+  public String getEntry(String parentPath,\n+      FsImageProto.INodeSection.INode inode) {\n+    long id \u003d inode.getId();\n+    if (corruptionsMap.containsKey(id)) {\n+      OutputEntryBuilder entryBuilder \u003d\n+          new OutputEntryBuilder(this, false);\n+      long parentId \u003d -1;\n+      try {\n+        parentId \u003d getParentId(id);\n+      } catch (IOException ignore) {\n+      }\n+      entryBuilder.setCorruption(corruptionsMap.get(id))\n+          .setParentPath(parentPath)\n+          .setName(inode.getName().toStringUtf8())\n+          .setNodeType(corrChecker.getTypeOfId(id));\n+      if (parentId !\u003d -1) {\n+        entryBuilder.setParentId(parentId);\n+      }\n+      corruptionsMap.remove(id);\n+      return entryBuilder.build();\n+    } else {\n+      return \"\";\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public String getEntry(String parentPath,\n      FsImageProto.INodeSection.INode inode) {\n    long id \u003d inode.getId();\n    if (corruptionsMap.containsKey(id)) {\n      OutputEntryBuilder entryBuilder \u003d\n          new OutputEntryBuilder(this, false);\n      long parentId \u003d -1;\n      try {\n        parentId \u003d getParentId(id);\n      } catch (IOException ignore) {\n      }\n      entryBuilder.setCorruption(corruptionsMap.get(id))\n          .setParentPath(parentPath)\n          .setName(inode.getName().toStringUtf8())\n          .setNodeType(corrChecker.getTypeOfId(id));\n      if (parentId !\u003d -1) {\n        entryBuilder.setParentId(parentId);\n      }\n      corruptionsMap.remove(id);\n      return entryBuilder.build();\n    } else {\n      return \"\";\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/PBImageCorruptionDetector.java"
    }
  }
}