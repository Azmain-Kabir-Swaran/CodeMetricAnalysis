{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FairOrderingPolicy.java",
  "functionName": "compareDemand",
  "functionId": "compareDemand___s1-SchedulableEntity__s2-SchedulableEntity",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/policy/FairOrderingPolicy.java",
  "functionStartLine": 67,
  "functionEndLine": 81,
  "numCommitsSeen": 7,
  "timeTaken": 1642,
  "changeHistory": [
    "3d5ade1839205db1c4a11f73bd02d847187f48ca"
  ],
  "changeHistoryShort": {
    "3d5ade1839205db1c4a11f73bd02d847187f48ca": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3d5ade1839205db1c4a11f73bd02d847187f48ca": {
      "type": "Yintroduced",
      "commitMessage": "YARN-10043. FairOrderingPolicy Improvements. Contributed by Manikandan R\n",
      "commitDate": "26/03/20 5:23 AM",
      "commitName": "3d5ade1839205db1c4a11f73bd02d847187f48ca",
      "commitAuthor": "Szilard Nemeth",
      "diff": "@@ -0,0 +1,15 @@\n+    private int compareDemand(SchedulableEntity s1, SchedulableEntity s2) {\n+      int res \u003d 0;\n+      long demand1 \u003d s1.getSchedulingResourceUsage()\n+          .getCachedDemand(CommonNodeLabelsManager.ANY).getMemorySize();\n+      long demand2 \u003d s2.getSchedulingResourceUsage()\n+          .getCachedDemand(CommonNodeLabelsManager.ANY).getMemorySize();\n+\n+      if ((demand1 \u003d\u003d 0) \u0026\u0026 (demand2 \u003e 0)) {\n+        res \u003d 1;\n+      } else if ((demand2 \u003d\u003d 0) \u0026\u0026 (demand1 \u003e 0)) {\n+        res \u003d -1;\n+      }\n+\n+      return res;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private int compareDemand(SchedulableEntity s1, SchedulableEntity s2) {\n      int res \u003d 0;\n      long demand1 \u003d s1.getSchedulingResourceUsage()\n          .getCachedDemand(CommonNodeLabelsManager.ANY).getMemorySize();\n      long demand2 \u003d s2.getSchedulingResourceUsage()\n          .getCachedDemand(CommonNodeLabelsManager.ANY).getMemorySize();\n\n      if ((demand1 \u003d\u003d 0) \u0026\u0026 (demand2 \u003e 0)) {\n        res \u003d 1;\n      } else if ((demand2 \u003d\u003d 0) \u0026\u0026 (demand1 \u003e 0)) {\n        res \u003d -1;\n      }\n\n      return res;\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/policy/FairOrderingPolicy.java"
    }
  }
}