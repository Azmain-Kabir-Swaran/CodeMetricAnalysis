{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ConsistentHashRing.java",
  "functionName": "getLocation",
  "functionId": "getLocation___item-String",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/utils/ConsistentHashRing.java",
  "functionStartLine": 110,
  "functionEndLine": 131,
  "numCommitsSeen": 3,
  "timeTaken": 1539,
  "changeHistory": [
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d",
    "e71bc00a471422ddb26dd54e706f09f0fe09925c"
  ],
  "changeHistoryShort": {
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d": "Yfilerename",
    "e71bc00a471422ddb26dd54e706f09f0fe09925c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-13215. RBF: Move Router to its own module. Contributed by Wei Yan\n",
      "commitDate": "19/03/18 10:13 PM",
      "commitName": "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d",
      "commitAuthor": "weiy",
      "commitDateOld": "19/03/18 5:19 PM",
      "commitNameOld": "e65ff1c8be48ef4f04ed96f96ac4caef4974944d",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 0.2,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public String getLocation(String item) {\n    readLock.lock();\n    try {\n      if (ring.isEmpty()) {\n        return null;\n      }\n      String hash \u003d getHash(item);\n      if (!ring.containsKey(hash)) {\n        SortedMap\u003cString, String\u003e tailMap \u003d ring.tailMap(hash);\n        hash \u003d tailMap.isEmpty() ? ring.firstKey() : tailMap.firstKey();\n      }\n      String virtualNode \u003d ring.get(hash);\n      int index \u003d virtualNode.lastIndexOf(SEPERATOR);\n      if (index \u003e\u003d 0) {\n        return virtualNode.substring(0, index);\n      } else {\n        return virtualNode;\n      }\n    } finally {\n      readLock.unlock();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/utils/ConsistentHashRing.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/federation/utils/ConsistentHashRing.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/utils/ConsistentHashRing.java"
      }
    },
    "e71bc00a471422ddb26dd54e706f09f0fe09925c": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-13224. RBF: Resolvers to support mount points across multiple subclusters. Contributed by Inigo Goiri.\n",
      "commitDate": "15/03/18 10:32 AM",
      "commitName": "e71bc00a471422ddb26dd54e706f09f0fe09925c",
      "commitAuthor": "Inigo Goiri",
      "diff": "@@ -0,0 +1,22 @@\n+  public String getLocation(String item) {\n+    readLock.lock();\n+    try {\n+      if (ring.isEmpty()) {\n+        return null;\n+      }\n+      String hash \u003d getHash(item);\n+      if (!ring.containsKey(hash)) {\n+        SortedMap\u003cString, String\u003e tailMap \u003d ring.tailMap(hash);\n+        hash \u003d tailMap.isEmpty() ? ring.firstKey() : tailMap.firstKey();\n+      }\n+      String virtualNode \u003d ring.get(hash);\n+      int index \u003d virtualNode.lastIndexOf(SEPERATOR);\n+      if (index \u003e\u003d 0) {\n+        return virtualNode.substring(0, index);\n+      } else {\n+        return virtualNode;\n+      }\n+    } finally {\n+      readLock.unlock();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public String getLocation(String item) {\n    readLock.lock();\n    try {\n      if (ring.isEmpty()) {\n        return null;\n      }\n      String hash \u003d getHash(item);\n      if (!ring.containsKey(hash)) {\n        SortedMap\u003cString, String\u003e tailMap \u003d ring.tailMap(hash);\n        hash \u003d tailMap.isEmpty() ? ring.firstKey() : tailMap.firstKey();\n      }\n      String virtualNode \u003d ring.get(hash);\n      int index \u003d virtualNode.lastIndexOf(SEPERATOR);\n      if (index \u003e\u003d 0) {\n        return virtualNode.substring(0, index);\n      } else {\n        return virtualNode;\n      }\n    } finally {\n      readLock.unlock();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/federation/utils/ConsistentHashRing.java"
    }
  }
}