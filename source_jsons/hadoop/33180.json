{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "IntelFpgaOpenclPlugin.java",
  "functionName": "retrieveIPfilePath",
  "functionId": "retrieveIPfilePath___id-String__dstDir-String__localizedResources-Map__Path,List__String____",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/resourceplugin/fpga/IntelFpgaOpenclPlugin.java",
  "functionStartLine": 221,
  "functionEndLine": 251,
  "numCommitsSeen": 9,
  "timeTaken": 1922,
  "changeHistory": [
    "3f1aad05f0510d713bdf1297de6cda380c2bb078",
    "2064ca015d1584263aac0cc20c60b925a3aff612",
    "8e1539eca8175f58f836daa5b0ad598c890cbb02"
  ],
  "changeHistoryShort": {
    "3f1aad05f0510d713bdf1297de6cda380c2bb078": "Ybodychange",
    "2064ca015d1584263aac0cc20c60b925a3aff612": "Ybodychange",
    "8e1539eca8175f58f836daa5b0ad598c890cbb02": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3f1aad05f0510d713bdf1297de6cda380c2bb078": {
      "type": "Ybodychange",
      "commitMessage": "YARN-10147. FPGA plugin can\u0027t find the localized aocx file. Contributed by Peter Bacsko\n",
      "commitDate": "19/02/20 6:54 AM",
      "commitName": "3f1aad05f0510d713bdf1297de6cda380c2bb078",
      "commitAuthor": "Szilard Nemeth",
      "commitDateOld": "09/11/19 5:04 AM",
      "commitNameOld": "31f172fd96e17c038fba2edbcaf340a323c6f7ff",
      "commitAuthorOld": "Szilard Nemeth",
      "daysBetweenCommits": 102.08,
      "commitsBetweenForRepo": 354,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,31 @@\n   public String retrieveIPfilePath(String id, String dstDir,\n       Map\u003cPath, List\u003cString\u003e\u003e localizedResources) {\n     // Assume .aocx IP file is distributed by DS to local dir\n     String ipFilePath \u003d null;\n \n     LOG.info(\"Got environment: \" + id +\n         \", search IP file in localized resources\");\n     if (null \u003d\u003d id || id.isEmpty()) {\n       LOG.warn(\"IP_ID environment is empty, skip downloading\");\n       return null;\n     }\n \n     if (localizedResources !\u003d null) {\n       Optional\u003cPath\u003e aocxPath \u003d localizedResources\n           .keySet()\n           .stream()\n           .filter(path -\u003e matchesIpid(path, id))\n           .findFirst();\n \n       if (aocxPath.isPresent()) {\n-        ipFilePath \u003d aocxPath.get().toUri().toString();\n-        LOG.debug(\"Found: {}\", ipFilePath);\n+        ipFilePath \u003d aocxPath.get().toString();\n+        LOG.info(\"Found: {}\", ipFilePath);\n+      } else {\n+        LOG.warn(\"Requested IP file not found\");\n       }\n     } else {\n       LOG.warn(\"Localized resource is null!\");\n     }\n \n     return ipFilePath;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String retrieveIPfilePath(String id, String dstDir,\n      Map\u003cPath, List\u003cString\u003e\u003e localizedResources) {\n    // Assume .aocx IP file is distributed by DS to local dir\n    String ipFilePath \u003d null;\n\n    LOG.info(\"Got environment: \" + id +\n        \", search IP file in localized resources\");\n    if (null \u003d\u003d id || id.isEmpty()) {\n      LOG.warn(\"IP_ID environment is empty, skip downloading\");\n      return null;\n    }\n\n    if (localizedResources !\u003d null) {\n      Optional\u003cPath\u003e aocxPath \u003d localizedResources\n          .keySet()\n          .stream()\n          .filter(path -\u003e matchesIpid(path, id))\n          .findFirst();\n\n      if (aocxPath.isPresent()) {\n        ipFilePath \u003d aocxPath.get().toString();\n        LOG.info(\"Found: {}\", ipFilePath);\n      } else {\n        LOG.warn(\"Requested IP file not found\");\n      }\n    } else {\n      LOG.warn(\"Localized resource is null!\");\n    }\n\n    return ipFilePath;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/resourceplugin/fpga/IntelFpgaOpenclPlugin.java",
      "extendedDetails": {}
    },
    "2064ca015d1584263aac0cc20c60b925a3aff612": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9349.  Changed logging to use slf4j api.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "15/03/19 4:20 PM",
      "commitName": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "12/03/19 2:15 PM",
      "commitNameOld": "8e1539eca8175f58f836daa5b0ad598c890cbb02",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 3.09,
      "commitsBetweenForRepo": 33,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,29 @@\n   public String retrieveIPfilePath(String id, String dstDir,\n       Map\u003cPath, List\u003cString\u003e\u003e localizedResources) {\n     // Assume .aocx IP file is distributed by DS to local dir\n     String ipFilePath \u003d null;\n \n     LOG.info(\"Got environment: \" + id +\n         \", search IP file in localized resources\");\n     if (null \u003d\u003d id || id.isEmpty()) {\n       LOG.warn(\"IP_ID environment is empty, skip downloading\");\n       return null;\n     }\n \n     if (localizedResources !\u003d null) {\n       Optional\u003cPath\u003e aocxPath \u003d localizedResources\n           .keySet()\n           .stream()\n           .filter(path -\u003e matchesIpid(path, id))\n           .findFirst();\n \n       if (aocxPath.isPresent()) {\n         ipFilePath \u003d aocxPath.get().toUri().toString();\n-        LOG.debug(\"Found: \" + ipFilePath);\n+        LOG.debug(\"Found: {}\", ipFilePath);\n       }\n     } else {\n       LOG.warn(\"Localized resource is null!\");\n     }\n \n     return ipFilePath;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String retrieveIPfilePath(String id, String dstDir,\n      Map\u003cPath, List\u003cString\u003e\u003e localizedResources) {\n    // Assume .aocx IP file is distributed by DS to local dir\n    String ipFilePath \u003d null;\n\n    LOG.info(\"Got environment: \" + id +\n        \", search IP file in localized resources\");\n    if (null \u003d\u003d id || id.isEmpty()) {\n      LOG.warn(\"IP_ID environment is empty, skip downloading\");\n      return null;\n    }\n\n    if (localizedResources !\u003d null) {\n      Optional\u003cPath\u003e aocxPath \u003d localizedResources\n          .keySet()\n          .stream()\n          .filter(path -\u003e matchesIpid(path, id))\n          .findFirst();\n\n      if (aocxPath.isPresent()) {\n        ipFilePath \u003d aocxPath.get().toUri().toString();\n        LOG.debug(\"Found: {}\", ipFilePath);\n      }\n    } else {\n      LOG.warn(\"Localized resource is null!\");\n    }\n\n    return ipFilePath;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/resourceplugin/fpga/IntelFpgaOpenclPlugin.java",
      "extendedDetails": {}
    },
    "8e1539eca8175f58f836daa5b0ad598c890cbb02": {
      "type": "Yintroduced",
      "commitMessage": "YARN-9266. General improvements in IntelFpgaOpenclPlugin. Contributed by Peter Bacsko.\n",
      "commitDate": "12/03/19 2:15 PM",
      "commitName": "8e1539eca8175f58f836daa5b0ad598c890cbb02",
      "commitAuthor": "Sunil G",
      "diff": "@@ -0,0 +1,29 @@\n+  public String retrieveIPfilePath(String id, String dstDir,\n+      Map\u003cPath, List\u003cString\u003e\u003e localizedResources) {\n+    // Assume .aocx IP file is distributed by DS to local dir\n+    String ipFilePath \u003d null;\n+\n+    LOG.info(\"Got environment: \" + id +\n+        \", search IP file in localized resources\");\n+    if (null \u003d\u003d id || id.isEmpty()) {\n+      LOG.warn(\"IP_ID environment is empty, skip downloading\");\n+      return null;\n+    }\n+\n+    if (localizedResources !\u003d null) {\n+      Optional\u003cPath\u003e aocxPath \u003d localizedResources\n+          .keySet()\n+          .stream()\n+          .filter(path -\u003e matchesIpid(path, id))\n+          .findFirst();\n+\n+      if (aocxPath.isPresent()) {\n+        ipFilePath \u003d aocxPath.get().toUri().toString();\n+        LOG.debug(\"Found: \" + ipFilePath);\n+      }\n+    } else {\n+      LOG.warn(\"Localized resource is null!\");\n+    }\n+\n+    return ipFilePath;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public String retrieveIPfilePath(String id, String dstDir,\n      Map\u003cPath, List\u003cString\u003e\u003e localizedResources) {\n    // Assume .aocx IP file is distributed by DS to local dir\n    String ipFilePath \u003d null;\n\n    LOG.info(\"Got environment: \" + id +\n        \", search IP file in localized resources\");\n    if (null \u003d\u003d id || id.isEmpty()) {\n      LOG.warn(\"IP_ID environment is empty, skip downloading\");\n      return null;\n    }\n\n    if (localizedResources !\u003d null) {\n      Optional\u003cPath\u003e aocxPath \u003d localizedResources\n          .keySet()\n          .stream()\n          .filter(path -\u003e matchesIpid(path, id))\n          .findFirst();\n\n      if (aocxPath.isPresent()) {\n        ipFilePath \u003d aocxPath.get().toUri().toString();\n        LOG.debug(\"Found: \" + ipFilePath);\n      }\n    } else {\n      LOG.warn(\"Localized resource is null!\");\n    }\n\n    return ipFilePath;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/resourceplugin/fpga/IntelFpgaOpenclPlugin.java"
    }
  }
}