{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TimelineSchemaCreator.java",
  "functionName": "createTimelineSchema",
  "functionId": "createTimelineSchema___args-String[]__conf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/TimelineSchemaCreator.java",
  "functionStartLine": 58,
  "functionEndLine": 79,
  "numCommitsSeen": 12,
  "timeTaken": 2306,
  "changeHistory": [
    "713ded6b15dc0b5e4205a7812a62225377e0b32b"
  ],
  "changeHistoryShort": {
    "713ded6b15dc0b5e4205a7812a62225377e0b32b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "713ded6b15dc0b5e4205a7812a62225377e0b32b": {
      "type": "Yintroduced",
      "commitMessage": "YARN-9150 Making TimelineSchemaCreator support different backends for Timeline Schema Creation in ATSv2. Contributed by Sushil Ks\n",
      "commitDate": "15/01/19 9:28 PM",
      "commitName": "713ded6b15dc0b5e4205a7812a62225377e0b32b",
      "commitAuthor": "Vrushali C",
      "diff": "@@ -0,0 +1,22 @@\n+  int createTimelineSchema(String[] args, Configuration conf) throws Exception {\n+    String schemaCreatorClassName \u003d conf.get(\n+        YarnConfiguration.TIMELINE_SERVICE_SCHEMA_CREATOR_CLASS,\n+        YarnConfiguration.DEFAULT_TIMELINE_SERVICE_SCHEMA_CREATOR_CLASS);\n+    LOG.info(\"Using {} for creating Timeline Service Schema \",\n+        schemaCreatorClassName);\n+    try {\n+      Class\u003c?\u003e schemaCreatorClass \u003d Class.forName(schemaCreatorClassName);\n+      if (SchemaCreator.class.isAssignableFrom(schemaCreatorClass)) {\n+        SchemaCreator schemaCreator \u003d (SchemaCreator) ReflectionUtils\n+            .newInstance(schemaCreatorClass, conf);\n+        schemaCreator.createTimelineSchema(args);\n+        return 0;\n+      } else {\n+        throw new YarnRuntimeException(\"Class: \" + schemaCreatorClassName\n+            + \" not instance of \" + SchemaCreator.class.getCanonicalName());\n+      }\n+    } catch (ClassNotFoundException e) {\n+      throw new YarnRuntimeException(\"Could not instantiate TimelineReader: \"\n+          + schemaCreatorClassName, e);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  int createTimelineSchema(String[] args, Configuration conf) throws Exception {\n    String schemaCreatorClassName \u003d conf.get(\n        YarnConfiguration.TIMELINE_SERVICE_SCHEMA_CREATOR_CLASS,\n        YarnConfiguration.DEFAULT_TIMELINE_SERVICE_SCHEMA_CREATOR_CLASS);\n    LOG.info(\"Using {} for creating Timeline Service Schema \",\n        schemaCreatorClassName);\n    try {\n      Class\u003c?\u003e schemaCreatorClass \u003d Class.forName(schemaCreatorClassName);\n      if (SchemaCreator.class.isAssignableFrom(schemaCreatorClass)) {\n        SchemaCreator schemaCreator \u003d (SchemaCreator) ReflectionUtils\n            .newInstance(schemaCreatorClass, conf);\n        schemaCreator.createTimelineSchema(args);\n        return 0;\n      } else {\n        throw new YarnRuntimeException(\"Class: \" + schemaCreatorClassName\n            + \" not instance of \" + SchemaCreator.class.getCanonicalName());\n      }\n    } catch (ClassNotFoundException e) {\n      throw new YarnRuntimeException(\"Could not instantiate TimelineReader: \"\n          + schemaCreatorClassName, e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/TimelineSchemaCreator.java"
    }
  }
}