{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JobHistoryUtils.java",
  "functionName": "getDefaultFileContext",
  "functionId": "getDefaultFileContext",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common/src/main/java/org/apache/hadoop/mapreduce/v2/jobhistory/JobHistoryUtils.java",
  "functionStartLine": 258,
  "functionEndLine": 288,
  "numCommitsSeen": 24,
  "timeTaken": 1293,
  "changeHistory": [
    "84bc2fe4021be32e0ff8ba395359337904149034"
  ],
  "changeHistoryShort": {
    "84bc2fe4021be32e0ff8ba395359337904149034": "Yintroduced"
  },
  "changeHistoryDetails": {
    "84bc2fe4021be32e0ff8ba395359337904149034": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-6032. Made MR jobs write job history files on the default FS when the current contextâ€™s FS is different. Contributed by Benjamin Zhitomirsky.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1618269 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "15/08/14 1:17 PM",
      "commitName": "84bc2fe4021be32e0ff8ba395359337904149034",
      "commitAuthor": "Zhijie Shen",
      "diff": "@@ -0,0 +1,31 @@\n+  private static FileContext getDefaultFileContext() {\n+    // If FS_DEFAULT_NAME_KEY was set solely by core-default.xml then we ignore\n+    // ignore it. This prevents defaulting history paths to file system specified\n+    // by core-default.xml which would not make sense in any case. For a test\n+    // case to exploit this functionality it should create core-site.xml\n+    FileContext fc \u003d null;\n+    Configuration defaultConf \u003d new Configuration();\n+    String[] sources;\n+    sources \u003d defaultConf.getPropertySources(\n+        CommonConfigurationKeysPublic.FS_DEFAULT_NAME_KEY);\n+    if (sources !\u003d null \u0026\u0026\n+        (!Arrays.asList(sources).contains(\"core-default.xml\") ||\n+        sources.length \u003e 1)) {\n+      try {\n+        fc \u003d FileContext.getFileContext(defaultConf);\n+        LOG.info(\"Default file system [\" +\n+                  fc.getDefaultFileSystem().getUri() + \"]\");\n+      } catch (UnsupportedFileSystemException e) {\n+        LOG.error(\"Unable to create default file context [\" +\n+            defaultConf.get(CommonConfigurationKeysPublic.FS_DEFAULT_NAME_KEY) +\n+            \"]\",\n+            e);\n+      }\n+    }\n+    else {\n+      LOG.info(\"Default file system is set solely \" +\n+          \"by core-default.xml therefore -  ignoring\");\n+    }\n+\n+    return fc;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static FileContext getDefaultFileContext() {\n    // If FS_DEFAULT_NAME_KEY was set solely by core-default.xml then we ignore\n    // ignore it. This prevents defaulting history paths to file system specified\n    // by core-default.xml which would not make sense in any case. For a test\n    // case to exploit this functionality it should create core-site.xml\n    FileContext fc \u003d null;\n    Configuration defaultConf \u003d new Configuration();\n    String[] sources;\n    sources \u003d defaultConf.getPropertySources(\n        CommonConfigurationKeysPublic.FS_DEFAULT_NAME_KEY);\n    if (sources !\u003d null \u0026\u0026\n        (!Arrays.asList(sources).contains(\"core-default.xml\") ||\n        sources.length \u003e 1)) {\n      try {\n        fc \u003d FileContext.getFileContext(defaultConf);\n        LOG.info(\"Default file system [\" +\n                  fc.getDefaultFileSystem().getUri() + \"]\");\n      } catch (UnsupportedFileSystemException e) {\n        LOG.error(\"Unable to create default file context [\" +\n            defaultConf.get(CommonConfigurationKeysPublic.FS_DEFAULT_NAME_KEY) +\n            \"]\",\n            e);\n      }\n    }\n    else {\n      LOG.info(\"Default file system is set solely \" +\n          \"by core-default.xml therefore -  ignoring\");\n    }\n\n    return fc;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common/src/main/java/org/apache/hadoop/mapreduce/v2/jobhistory/JobHistoryUtils.java"
    }
  }
}