{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LinuxContainerExecutor.java",
  "functionName": "reacquireContainer",
  "functionId": "reacquireContainer___ctx-ContainerReacquisitionContext",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/LinuxContainerExecutor.java",
  "functionStartLine": 709,
  "functionEndLine": 730,
  "numCommitsSeen": 106,
  "timeTaken": 3699,
  "changeHistory": [
    "f7df55f4a89ed2d75d874b32209647ef4f448875",
    "ed9d60e888d0acfd748fda7f66249f5b79a3ed6d",
    "53fafcf061616516c24e2e2007a66a93d23d3e25",
    "a100be685cc4521e9949589948219231aa5d2733",
    "33ea5ae92b9dd3abace104903d9a94d17dd75af5",
    "3fa5f728c4d6944302621965d6a0376827af5b51"
  ],
  "changeHistoryShort": {
    "f7df55f4a89ed2d75d874b32209647ef4f448875": "Ybodychange",
    "ed9d60e888d0acfd748fda7f66249f5b79a3ed6d": "Ybodychange",
    "53fafcf061616516c24e2e2007a66a93d23d3e25": "Ymultichange(Yparameterchange,Ybodychange)",
    "a100be685cc4521e9949589948219231aa5d2733": "Ybodychange",
    "33ea5ae92b9dd3abace104903d9a94d17dd75af5": "Yexceptionschange",
    "3fa5f728c4d6944302621965d6a0376827af5b51": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f7df55f4a89ed2d75d874b32209647ef4f448875": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9602. Use logger format in Container Executor. Contributed by Abhishek Modi.\n",
      "commitDate": "11/06/19 9:59 AM",
      "commitName": "f7df55f4a89ed2d75d874b32209647ef4f448875",
      "commitAuthor": "bibinchundatt",
      "commitDateOld": "15/03/19 4:20 PM",
      "commitNameOld": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 87.73,
      "commitsBetweenForRepo": 542,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n   public int reacquireContainer(ContainerReacquisitionContext ctx)\n       throws IOException, InterruptedException {\n     ContainerId containerId \u003d ctx.getContainerId();\n \n     try {\n       //Resource handler chain needs to reacquire container state\n       //as well\n       if (resourceHandlerChain !\u003d null) {\n         try {\n           resourceHandlerChain.reacquireContainer(containerId);\n         } catch (ResourceHandlerException e) {\n           LOG.warn(\"ResourceHandlerChain.reacquireContainer failed for \" +\n-              \"containerId: \" + containerId + \" Exception: \" + e);\n+              \"containerId: {} Exception: \", containerId, e);\n         }\n       }\n \n       return super.reacquireContainer(ctx);\n     } finally {\n       resourcesHandler.postExecute(containerId);\n       postComplete(containerId);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int reacquireContainer(ContainerReacquisitionContext ctx)\n      throws IOException, InterruptedException {\n    ContainerId containerId \u003d ctx.getContainerId();\n\n    try {\n      //Resource handler chain needs to reacquire container state\n      //as well\n      if (resourceHandlerChain !\u003d null) {\n        try {\n          resourceHandlerChain.reacquireContainer(containerId);\n        } catch (ResourceHandlerException e) {\n          LOG.warn(\"ResourceHandlerChain.reacquireContainer failed for \" +\n              \"containerId: {} Exception: \", containerId, e);\n        }\n      }\n\n      return super.reacquireContainer(ctx);\n    } finally {\n      resourcesHandler.postExecute(containerId);\n      postComplete(containerId);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/LinuxContainerExecutor.java",
      "extendedDetails": {}
    },
    "ed9d60e888d0acfd748fda7f66249f5b79a3ed6d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8508.  Release GPU resource for killed container.\n            Contributed by Chandni Singh\n",
      "commitDate": "27/07/18 4:33 PM",
      "commitName": "ed9d60e888d0acfd748fda7f66249f5b79a3ed6d",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "20/04/18 10:49 AM",
      "commitNameOld": "85585f9eef26baded5b3ef7fcc3283aa37fc362d",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 98.24,
      "commitsBetweenForRepo": 1201,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,22 @@\n   public int reacquireContainer(ContainerReacquisitionContext ctx)\n       throws IOException, InterruptedException {\n     ContainerId containerId \u003d ctx.getContainerId();\n \n     try {\n       //Resource handler chain needs to reacquire container state\n       //as well\n       if (resourceHandlerChain !\u003d null) {\n         try {\n           resourceHandlerChain.reacquireContainer(containerId);\n         } catch (ResourceHandlerException e) {\n           LOG.warn(\"ResourceHandlerChain.reacquireContainer failed for \" +\n               \"containerId: \" + containerId + \" Exception: \" + e);\n         }\n       }\n \n       return super.reacquireContainer(ctx);\n     } finally {\n       resourcesHandler.postExecute(containerId);\n-      if (resourceHandlerChain !\u003d null) {\n-        try {\n-          resourceHandlerChain.postComplete(containerId);\n-        } catch (ResourceHandlerException e) {\n-          LOG.warn(\"ResourceHandlerChain.postComplete failed for \" +\n-              \"containerId: \" + containerId + \" Exception: \" + e);\n-        }\n-      }\n+      postComplete(containerId);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int reacquireContainer(ContainerReacquisitionContext ctx)\n      throws IOException, InterruptedException {\n    ContainerId containerId \u003d ctx.getContainerId();\n\n    try {\n      //Resource handler chain needs to reacquire container state\n      //as well\n      if (resourceHandlerChain !\u003d null) {\n        try {\n          resourceHandlerChain.reacquireContainer(containerId);\n        } catch (ResourceHandlerException e) {\n          LOG.warn(\"ResourceHandlerChain.reacquireContainer failed for \" +\n              \"containerId: \" + containerId + \" Exception: \" + e);\n        }\n      }\n\n      return super.reacquireContainer(ctx);\n    } finally {\n      resourcesHandler.postExecute(containerId);\n      postComplete(containerId);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/LinuxContainerExecutor.java",
      "extendedDetails": {}
    },
    "53fafcf061616516c24e2e2007a66a93d23d3e25": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-3684. Changed ContainerExecutor\u0027s primary lifecycle methods to use a more extensible mechanism of context objects. Contributed by Sidharta Seethana.\n",
      "commitDate": "21/05/15 3:50 PM",
      "commitName": "53fafcf061616516c24e2e2007a66a93d23d3e25",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-3684. Changed ContainerExecutor\u0027s primary lifecycle methods to use a more extensible mechanism of context objects. Contributed by Sidharta Seethana.\n",
          "commitDate": "21/05/15 3:50 PM",
          "commitName": "53fafcf061616516c24e2e2007a66a93d23d3e25",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "08/05/15 8:01 PM",
          "commitNameOld": "6471d18bc72bc6c83ce31a03b5c5f5737847bb6d",
          "commitAuthorOld": "Xuan",
          "daysBetweenCommits": 12.83,
          "commitsBetweenForRepo": 119,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,29 @@\n-  public int reacquireContainer(String user, ContainerId containerId)\n+  public int reacquireContainer(ContainerReacquisitionContext ctx)\n       throws IOException, InterruptedException {\n+    ContainerId containerId \u003d ctx.getContainerId();\n+\n     try {\n       //Resource handler chain needs to reacquire container state\n       //as well\n       if (resourceHandlerChain !\u003d null) {\n         try {\n           resourceHandlerChain.reacquireContainer(containerId);\n         } catch (ResourceHandlerException e) {\n           LOG.warn(\"ResourceHandlerChain.reacquireContainer failed for \" +\n               \"containerId: \" + containerId + \" Exception: \" + e);\n         }\n       }\n \n-      return super.reacquireContainer(user, containerId);\n+      return super.reacquireContainer(ctx);\n     } finally {\n       resourcesHandler.postExecute(containerId);\n       if (resourceHandlerChain !\u003d null) {\n         try {\n           resourceHandlerChain.postComplete(containerId);\n         } catch (ResourceHandlerException e) {\n           LOG.warn(\"ResourceHandlerChain.postComplete failed for \" +\n               \"containerId: \" + containerId + \" Exception: \" + e);\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public int reacquireContainer(ContainerReacquisitionContext ctx)\n      throws IOException, InterruptedException {\n    ContainerId containerId \u003d ctx.getContainerId();\n\n    try {\n      //Resource handler chain needs to reacquire container state\n      //as well\n      if (resourceHandlerChain !\u003d null) {\n        try {\n          resourceHandlerChain.reacquireContainer(containerId);\n        } catch (ResourceHandlerException e) {\n          LOG.warn(\"ResourceHandlerChain.reacquireContainer failed for \" +\n              \"containerId: \" + containerId + \" Exception: \" + e);\n        }\n      }\n\n      return super.reacquireContainer(ctx);\n    } finally {\n      resourcesHandler.postExecute(containerId);\n      if (resourceHandlerChain !\u003d null) {\n        try {\n          resourceHandlerChain.postComplete(containerId);\n        } catch (ResourceHandlerException e) {\n          LOG.warn(\"ResourceHandlerChain.postComplete failed for \" +\n              \"containerId: \" + containerId + \" Exception: \" + e);\n        }\n      }\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/LinuxContainerExecutor.java",
          "extendedDetails": {
            "oldValue": "[user-String, containerId-ContainerId]",
            "newValue": "[ctx-ContainerReacquisitionContext]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3684. Changed ContainerExecutor\u0027s primary lifecycle methods to use a more extensible mechanism of context objects. Contributed by Sidharta Seethana.\n",
          "commitDate": "21/05/15 3:50 PM",
          "commitName": "53fafcf061616516c24e2e2007a66a93d23d3e25",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "08/05/15 8:01 PM",
          "commitNameOld": "6471d18bc72bc6c83ce31a03b5c5f5737847bb6d",
          "commitAuthorOld": "Xuan",
          "daysBetweenCommits": 12.83,
          "commitsBetweenForRepo": 119,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,29 @@\n-  public int reacquireContainer(String user, ContainerId containerId)\n+  public int reacquireContainer(ContainerReacquisitionContext ctx)\n       throws IOException, InterruptedException {\n+    ContainerId containerId \u003d ctx.getContainerId();\n+\n     try {\n       //Resource handler chain needs to reacquire container state\n       //as well\n       if (resourceHandlerChain !\u003d null) {\n         try {\n           resourceHandlerChain.reacquireContainer(containerId);\n         } catch (ResourceHandlerException e) {\n           LOG.warn(\"ResourceHandlerChain.reacquireContainer failed for \" +\n               \"containerId: \" + containerId + \" Exception: \" + e);\n         }\n       }\n \n-      return super.reacquireContainer(user, containerId);\n+      return super.reacquireContainer(ctx);\n     } finally {\n       resourcesHandler.postExecute(containerId);\n       if (resourceHandlerChain !\u003d null) {\n         try {\n           resourceHandlerChain.postComplete(containerId);\n         } catch (ResourceHandlerException e) {\n           LOG.warn(\"ResourceHandlerChain.postComplete failed for \" +\n               \"containerId: \" + containerId + \" Exception: \" + e);\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public int reacquireContainer(ContainerReacquisitionContext ctx)\n      throws IOException, InterruptedException {\n    ContainerId containerId \u003d ctx.getContainerId();\n\n    try {\n      //Resource handler chain needs to reacquire container state\n      //as well\n      if (resourceHandlerChain !\u003d null) {\n        try {\n          resourceHandlerChain.reacquireContainer(containerId);\n        } catch (ResourceHandlerException e) {\n          LOG.warn(\"ResourceHandlerChain.reacquireContainer failed for \" +\n              \"containerId: \" + containerId + \" Exception: \" + e);\n        }\n      }\n\n      return super.reacquireContainer(ctx);\n    } finally {\n      resourcesHandler.postExecute(containerId);\n      if (resourceHandlerChain !\u003d null) {\n        try {\n          resourceHandlerChain.postComplete(containerId);\n        } catch (ResourceHandlerException e) {\n          LOG.warn(\"ResourceHandlerChain.postComplete failed for \" +\n              \"containerId: \" + containerId + \" Exception: \" + e);\n        }\n      }\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/LinuxContainerExecutor.java",
          "extendedDetails": {}
        }
      ]
    },
    "a100be685cc4521e9949589948219231aa5d2733": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3366. Enhanced NodeManager to support classifying/shaping outgoing network bandwidth traffic originating from YARN containers Contributed by Sidharta Seethana.\n",
      "commitDate": "22/04/15 5:26 PM",
      "commitName": "a100be685cc4521e9949589948219231aa5d2733",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "26/01/15 7:40 AM",
      "commitNameOld": "902c6ea7e4d3b49e49d9ce51ae9d12694ecfcf89",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 86.37,
      "commitsBetweenForRepo": 799,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,27 @@\n   public int reacquireContainer(String user, ContainerId containerId)\n       throws IOException, InterruptedException {\n     try {\n+      //Resource handler chain needs to reacquire container state\n+      //as well\n+      if (resourceHandlerChain !\u003d null) {\n+        try {\n+          resourceHandlerChain.reacquireContainer(containerId);\n+        } catch (ResourceHandlerException e) {\n+          LOG.warn(\"ResourceHandlerChain.reacquireContainer failed for \" +\n+              \"containerId: \" + containerId + \" Exception: \" + e);\n+        }\n+      }\n+\n       return super.reacquireContainer(user, containerId);\n     } finally {\n       resourcesHandler.postExecute(containerId);\n+      if (resourceHandlerChain !\u003d null) {\n+        try {\n+          resourceHandlerChain.postComplete(containerId);\n+        } catch (ResourceHandlerException e) {\n+          LOG.warn(\"ResourceHandlerChain.postComplete failed for \" +\n+              \"containerId: \" + containerId + \" Exception: \" + e);\n+        }\n+      }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int reacquireContainer(String user, ContainerId containerId)\n      throws IOException, InterruptedException {\n    try {\n      //Resource handler chain needs to reacquire container state\n      //as well\n      if (resourceHandlerChain !\u003d null) {\n        try {\n          resourceHandlerChain.reacquireContainer(containerId);\n        } catch (ResourceHandlerException e) {\n          LOG.warn(\"ResourceHandlerChain.reacquireContainer failed for \" +\n              \"containerId: \" + containerId + \" Exception: \" + e);\n        }\n      }\n\n      return super.reacquireContainer(user, containerId);\n    } finally {\n      resourcesHandler.postExecute(containerId);\n      if (resourceHandlerChain !\u003d null) {\n        try {\n          resourceHandlerChain.postComplete(containerId);\n        } catch (ResourceHandlerException e) {\n          LOG.warn(\"ResourceHandlerChain.postComplete failed for \" +\n              \"containerId: \" + containerId + \" Exception: \" + e);\n        }\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/LinuxContainerExecutor.java",
      "extendedDetails": {}
    },
    "33ea5ae92b9dd3abace104903d9a94d17dd75af5": {
      "type": "Yexceptionschange",
      "commitMessage": "YARN-2846. Incorrect persist exit code for running containers in reacquireContainer() that interrupted by NodeManager restart. Contributed by Junping Du\n",
      "commitDate": "13/11/14 8:11 AM",
      "commitName": "33ea5ae92b9dd3abace104903d9a94d17dd75af5",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "22/10/14 3:57 PM",
      "commitNameOld": "3b12fd6cfbf4cc91ef8e8616c7aafa9de006cde5",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 21.72,
      "commitsBetweenForRepo": 233,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,8 @@\n   public int reacquireContainer(String user, ContainerId containerId)\n-      throws IOException {\n+      throws IOException, InterruptedException {\n     try {\n       return super.reacquireContainer(user, containerId);\n     } finally {\n       resourcesHandler.postExecute(containerId);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int reacquireContainer(String user, ContainerId containerId)\n      throws IOException, InterruptedException {\n    try {\n      return super.reacquireContainer(user, containerId);\n    } finally {\n      resourcesHandler.postExecute(containerId);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/LinuxContainerExecutor.java",
      "extendedDetails": {
        "oldValue": "[IOException]",
        "newValue": "[IOException, InterruptedException]"
      }
    },
    "3fa5f728c4d6944302621965d6a0376827af5b51": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2431. NM restart: cgroup is not removed for reacquired containers. Contributed by Jason Lowe\n",
      "commitDate": "04/09/14 2:11 PM",
      "commitName": "3fa5f728c4d6944302621965d6a0376827af5b51",
      "commitAuthor": "Jason Lowe",
      "diff": "@@ -0,0 +1,8 @@\n+  public int reacquireContainer(String user, ContainerId containerId)\n+      throws IOException {\n+    try {\n+      return super.reacquireContainer(user, containerId);\n+    } finally {\n+      resourcesHandler.postExecute(containerId);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public int reacquireContainer(String user, ContainerId containerId)\n      throws IOException {\n    try {\n      return super.reacquireContainer(user, containerId);\n    } finally {\n      resourcesHandler.postExecute(containerId);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/LinuxContainerExecutor.java"
    }
  }
}