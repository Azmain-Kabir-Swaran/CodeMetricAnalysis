{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FiCaSchedulerApp.java",
  "functionName": "updateNodeInfoForAMDiagnostics",
  "functionId": "updateNodeInfoForAMDiagnostics___node-FiCaSchedulerNode",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerApp.java",
  "functionStartLine": 1060,
  "functionEndLine": 1084,
  "numCommitsSeen": 93,
  "timeTaken": 3705,
  "changeHistory": [
    "95372657fc25c02399b01793833021ccf88dada2",
    "de3b4aac561258ad242a3c5ed1c919428893fd4c",
    "f9692770a58af0ab082eb7f15da9cbdcd177605b",
    "6cb0af3c39a5d49cb2f7911ee21363a9542ca2d7"
  ],
  "changeHistoryShort": {
    "95372657fc25c02399b01793833021ccf88dada2": "Ybodychange",
    "de3b4aac561258ad242a3c5ed1c919428893fd4c": "Ybodychange",
    "f9692770a58af0ab082eb7f15da9cbdcd177605b": "Ybodychange",
    "6cb0af3c39a5d49cb2f7911ee21363a9542ca2d7": "Yintroduced"
  },
  "changeHistoryDetails": {
    "95372657fc25c02399b01793833021ccf88dada2": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9287. Consecutive StringBuilder append should be reuse. Contributed by Ayush Saxena.\n",
      "commitDate": "25/02/19 11:45 AM",
      "commitName": "95372657fc25c02399b01793833021ccf88dada2",
      "commitAuthor": "Giovanni Matteo Fumarola",
      "commitDateOld": "01/11/18 2:22 PM",
      "commitNameOld": "2ab611d48b7669b31bd2c9b918f47251da77d0f6",
      "commitAuthorOld": "Jonathan Hung",
      "daysBetweenCommits": 115.93,
      "commitsBetweenForRepo": 799,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n   public void updateNodeInfoForAMDiagnostics(FiCaSchedulerNode node) {\n     // FIXME, update AM diagnostics when global scheduling is enabled\n     if (null \u003d\u003d node) {\n       return;\n     }\n \n     if (isWaitingForAMContainer()) {\n       StringBuilder diagnosticMessageBldr \u003d new StringBuilder();\n       if (appSkipNodeDiagnostics !\u003d null) {\n         diagnosticMessageBldr.append(appSkipNodeDiagnostics);\n         appSkipNodeDiagnostics \u003d null;\n       }\n       diagnosticMessageBldr.append(\n-          CSAMContainerLaunchDiagnosticsConstants.LAST_NODE_PROCESSED_MSG);\n-      diagnosticMessageBldr.append(node.getNodeID());\n-      diagnosticMessageBldr.append(\" ( Partition : \");\n-      diagnosticMessageBldr.append(node.getLabels());\n-      diagnosticMessageBldr.append(\", Total resource : \");\n-      diagnosticMessageBldr.append(node.getTotalResource());\n-      diagnosticMessageBldr.append(\", Available resource : \");\n-      diagnosticMessageBldr.append(node.getUnallocatedResource());\n-      diagnosticMessageBldr.append(\" ).\");\n+          CSAMContainerLaunchDiagnosticsConstants.LAST_NODE_PROCESSED_MSG)\n+          .append(node.getNodeID())\n+          .append(\" ( Partition : \")\n+          .append(node.getLabels())\n+          .append(\", Total resource : \")\n+          .append(node.getTotalResource())\n+          .append(\", Available resource : \")\n+          .append(node.getUnallocatedResource())\n+          .append(\" ).\");\n       updateAMContainerDiagnostics(AMState.ACTIVATED, diagnosticMessageBldr.toString());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void updateNodeInfoForAMDiagnostics(FiCaSchedulerNode node) {\n    // FIXME, update AM diagnostics when global scheduling is enabled\n    if (null \u003d\u003d node) {\n      return;\n    }\n\n    if (isWaitingForAMContainer()) {\n      StringBuilder diagnosticMessageBldr \u003d new StringBuilder();\n      if (appSkipNodeDiagnostics !\u003d null) {\n        diagnosticMessageBldr.append(appSkipNodeDiagnostics);\n        appSkipNodeDiagnostics \u003d null;\n      }\n      diagnosticMessageBldr.append(\n          CSAMContainerLaunchDiagnosticsConstants.LAST_NODE_PROCESSED_MSG)\n          .append(node.getNodeID())\n          .append(\" ( Partition : \")\n          .append(node.getLabels())\n          .append(\", Total resource : \")\n          .append(node.getTotalResource())\n          .append(\", Available resource : \")\n          .append(node.getUnallocatedResource())\n          .append(\" ).\");\n      updateAMContainerDiagnostics(AMState.ACTIVATED, diagnosticMessageBldr.toString());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerApp.java",
      "extendedDetails": {}
    },
    "de3b4aac561258ad242a3c5ed1c919428893fd4c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5716. Add global scheduler interface definition and update CapacityScheduler to use it. Contributed by Wangda Tan\n",
      "commitDate": "07/11/16 10:14 AM",
      "commitName": "de3b4aac561258ad242a3c5ed1c919428893fd4c",
      "commitAuthor": "Jian He",
      "commitDateOld": "31/10/16 3:18 PM",
      "commitNameOld": "90dd3a8148468ac37a3f2173ad8d45e38bfcb0c9",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 6.83,
      "commitsBetweenForRepo": 84,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,25 @@\n   public void updateNodeInfoForAMDiagnostics(FiCaSchedulerNode node) {\n+    // FIXME, update AM diagnostics when global scheduling is enabled\n+    if (null \u003d\u003d node) {\n+      return;\n+    }\n+\n     if (isWaitingForAMContainer()) {\n       StringBuilder diagnosticMessageBldr \u003d new StringBuilder();\n       if (appSkipNodeDiagnostics !\u003d null) {\n         diagnosticMessageBldr.append(appSkipNodeDiagnostics);\n         appSkipNodeDiagnostics \u003d null;\n       }\n       diagnosticMessageBldr.append(\n           CSAMContainerLaunchDiagnosticsConstants.LAST_NODE_PROCESSED_MSG);\n       diagnosticMessageBldr.append(node.getNodeID());\n       diagnosticMessageBldr.append(\" ( Partition : \");\n       diagnosticMessageBldr.append(node.getLabels());\n       diagnosticMessageBldr.append(\", Total resource : \");\n       diagnosticMessageBldr.append(node.getTotalResource());\n       diagnosticMessageBldr.append(\", Available resource : \");\n       diagnosticMessageBldr.append(node.getUnallocatedResource());\n       diagnosticMessageBldr.append(\" ).\");\n       updateAMContainerDiagnostics(AMState.ACTIVATED, diagnosticMessageBldr.toString());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void updateNodeInfoForAMDiagnostics(FiCaSchedulerNode node) {\n    // FIXME, update AM diagnostics when global scheduling is enabled\n    if (null \u003d\u003d node) {\n      return;\n    }\n\n    if (isWaitingForAMContainer()) {\n      StringBuilder diagnosticMessageBldr \u003d new StringBuilder();\n      if (appSkipNodeDiagnostics !\u003d null) {\n        diagnosticMessageBldr.append(appSkipNodeDiagnostics);\n        appSkipNodeDiagnostics \u003d null;\n      }\n      diagnosticMessageBldr.append(\n          CSAMContainerLaunchDiagnosticsConstants.LAST_NODE_PROCESSED_MSG);\n      diagnosticMessageBldr.append(node.getNodeID());\n      diagnosticMessageBldr.append(\" ( Partition : \");\n      diagnosticMessageBldr.append(node.getLabels());\n      diagnosticMessageBldr.append(\", Total resource : \");\n      diagnosticMessageBldr.append(node.getTotalResource());\n      diagnosticMessageBldr.append(\", Available resource : \");\n      diagnosticMessageBldr.append(node.getUnallocatedResource());\n      diagnosticMessageBldr.append(\" ).\");\n      updateAMContainerDiagnostics(AMState.ACTIVATED, diagnosticMessageBldr.toString());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerApp.java",
      "extendedDetails": {}
    },
    "f9692770a58af0ab082eb7f15da9cbdcd177605b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4718. Rename variables in SchedulerNode to reduce ambiguity post YARN-1011. (Inigo Goiri via kasha)\n",
      "commitDate": "28/02/16 9:35 AM",
      "commitName": "f9692770a58af0ab082eb7f15da9cbdcd177605b",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "18/01/16 5:30 PM",
      "commitNameOld": "a44ce3f14fd940601f984fbf7980aa6fdc8f23b7",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 40.67,
      "commitsBetweenForRepo": 287,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   public void updateNodeInfoForAMDiagnostics(FiCaSchedulerNode node) {\n     if (isWaitingForAMContainer()) {\n       StringBuilder diagnosticMessageBldr \u003d new StringBuilder();\n       if (appSkipNodeDiagnostics !\u003d null) {\n         diagnosticMessageBldr.append(appSkipNodeDiagnostics);\n         appSkipNodeDiagnostics \u003d null;\n       }\n       diagnosticMessageBldr.append(\n           CSAMContainerLaunchDiagnosticsConstants.LAST_NODE_PROCESSED_MSG);\n       diagnosticMessageBldr.append(node.getNodeID());\n       diagnosticMessageBldr.append(\" ( Partition : \");\n       diagnosticMessageBldr.append(node.getLabels());\n       diagnosticMessageBldr.append(\", Total resource : \");\n       diagnosticMessageBldr.append(node.getTotalResource());\n       diagnosticMessageBldr.append(\", Available resource : \");\n-      diagnosticMessageBldr.append(node.getAvailableResource());\n+      diagnosticMessageBldr.append(node.getUnallocatedResource());\n       diagnosticMessageBldr.append(\" ).\");\n       updateAMContainerDiagnostics(AMState.ACTIVATED, diagnosticMessageBldr.toString());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void updateNodeInfoForAMDiagnostics(FiCaSchedulerNode node) {\n    if (isWaitingForAMContainer()) {\n      StringBuilder diagnosticMessageBldr \u003d new StringBuilder();\n      if (appSkipNodeDiagnostics !\u003d null) {\n        diagnosticMessageBldr.append(appSkipNodeDiagnostics);\n        appSkipNodeDiagnostics \u003d null;\n      }\n      diagnosticMessageBldr.append(\n          CSAMContainerLaunchDiagnosticsConstants.LAST_NODE_PROCESSED_MSG);\n      diagnosticMessageBldr.append(node.getNodeID());\n      diagnosticMessageBldr.append(\" ( Partition : \");\n      diagnosticMessageBldr.append(node.getLabels());\n      diagnosticMessageBldr.append(\", Total resource : \");\n      diagnosticMessageBldr.append(node.getTotalResource());\n      diagnosticMessageBldr.append(\", Available resource : \");\n      diagnosticMessageBldr.append(node.getUnallocatedResource());\n      diagnosticMessageBldr.append(\" ).\");\n      updateAMContainerDiagnostics(AMState.ACTIVATED, diagnosticMessageBldr.toString());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerApp.java",
      "extendedDetails": {}
    },
    "6cb0af3c39a5d49cb2f7911ee21363a9542ca2d7": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3946. Update exact reason as to why a submitted app is in ACCEPTED state to app\u0027s diagnostic message. (Naganarasimha G R via wangda)\n",
      "commitDate": "14/12/15 10:52 AM",
      "commitName": "6cb0af3c39a5d49cb2f7911ee21363a9542ca2d7",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,20 @@\n+  public void updateNodeInfoForAMDiagnostics(FiCaSchedulerNode node) {\n+    if (isWaitingForAMContainer()) {\n+      StringBuilder diagnosticMessageBldr \u003d new StringBuilder();\n+      if (appSkipNodeDiagnostics !\u003d null) {\n+        diagnosticMessageBldr.append(appSkipNodeDiagnostics);\n+        appSkipNodeDiagnostics \u003d null;\n+      }\n+      diagnosticMessageBldr.append(\n+          CSAMContainerLaunchDiagnosticsConstants.LAST_NODE_PROCESSED_MSG);\n+      diagnosticMessageBldr.append(node.getNodeID());\n+      diagnosticMessageBldr.append(\" ( Partition : \");\n+      diagnosticMessageBldr.append(node.getLabels());\n+      diagnosticMessageBldr.append(\", Total resource : \");\n+      diagnosticMessageBldr.append(node.getTotalResource());\n+      diagnosticMessageBldr.append(\", Available resource : \");\n+      diagnosticMessageBldr.append(node.getAvailableResource());\n+      diagnosticMessageBldr.append(\" ).\");\n+      updateAMContainerDiagnostics(AMState.ACTIVATED, diagnosticMessageBldr.toString());\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void updateNodeInfoForAMDiagnostics(FiCaSchedulerNode node) {\n    if (isWaitingForAMContainer()) {\n      StringBuilder diagnosticMessageBldr \u003d new StringBuilder();\n      if (appSkipNodeDiagnostics !\u003d null) {\n        diagnosticMessageBldr.append(appSkipNodeDiagnostics);\n        appSkipNodeDiagnostics \u003d null;\n      }\n      diagnosticMessageBldr.append(\n          CSAMContainerLaunchDiagnosticsConstants.LAST_NODE_PROCESSED_MSG);\n      diagnosticMessageBldr.append(node.getNodeID());\n      diagnosticMessageBldr.append(\" ( Partition : \");\n      diagnosticMessageBldr.append(node.getLabels());\n      diagnosticMessageBldr.append(\", Total resource : \");\n      diagnosticMessageBldr.append(node.getTotalResource());\n      diagnosticMessageBldr.append(\", Available resource : \");\n      diagnosticMessageBldr.append(node.getAvailableResource());\n      diagnosticMessageBldr.append(\" ).\");\n      updateAMContainerDiagnostics(AMState.ACTIVATED, diagnosticMessageBldr.toString());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerApp.java"
    }
  }
}