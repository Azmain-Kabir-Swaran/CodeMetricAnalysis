{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DistributedSchedulingAMProtocolPBServiceImpl.java",
  "functionName": "allocateForDistributedScheduling",
  "functionId": "allocateForDistributedScheduling___controller-RpcController__proto-YarnServerCommonServiceProtos.DistributedSchedulingAllocateRequestProto",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/impl/pb/service/DistributedSchedulingAMProtocolPBServiceImpl.java",
  "functionStartLine": 83,
  "functionEndLine": 99,
  "numCommitsSeen": 5,
  "timeTaken": 3621,
  "changeHistory": [
    "e5766b1dbee02ae0ef89618e172f3fb227af19e8",
    "99e5dd68d0f44109c169d74824fa45a7396a5990",
    "c282a08f3892e2e8ceb58e1e9a411062fbd1fb2b"
  ],
  "changeHistoryShort": {
    "e5766b1dbee02ae0ef89618e172f3fb227af19e8": "Ymultichange(Yfilerename,Yreturntypechange,Ybodychange,Yparameterchange)",
    "99e5dd68d0f44109c169d74824fa45a7396a5990": "Ymultichange(Yparameterchange,Ybodychange)",
    "c282a08f3892e2e8ceb58e1e9a411062fbd1fb2b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e5766b1dbee02ae0ef89618e172f3fb227af19e8": {
      "type": "Ymultichange(Yfilerename,Yreturntypechange,Ybodychange,Yparameterchange)",
      "commitMessage": "YARN-5113. Refactoring and other clean-up for distributed scheduling. (Konstantinos Karanasos via asuresh)\n",
      "commitDate": "31/07/16 11:48 AM",
      "commitName": "e5766b1dbee02ae0ef89618e172f3fb227af19e8",
      "commitAuthor": "Arun Suresh",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "YARN-5113. Refactoring and other clean-up for distributed scheduling. (Konstantinos Karanasos via asuresh)\n",
          "commitDate": "31/07/16 11:48 AM",
          "commitName": "e5766b1dbee02ae0ef89618e172f3fb227af19e8",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "30/07/16 7:29 PM",
          "commitNameOld": "3d191cc15244e1e29f837b34a9bd1d029e003064",
          "commitAuthorOld": "Akira Ajisaka",
          "daysBetweenCommits": 0.68,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,17 @@\n-  allocateForDistributedScheduling(RpcController controller,\n-      YarnServerCommonServiceProtos.DistSchedAllocateRequestProto proto)\n+      allocateForDistributedScheduling(RpcController controller,\n+      YarnServerCommonServiceProtos.\n+          DistributedSchedulingAllocateRequestProto proto)\n       throws ServiceException {\n-    DistSchedAllocateRequestPBImpl request \u003d\n-        new DistSchedAllocateRequestPBImpl(proto);\n+    DistributedSchedulingAllocateRequestPBImpl request \u003d\n+        new DistributedSchedulingAllocateRequestPBImpl(proto);\n     try {\n-      DistSchedAllocateResponse response \u003d real\n+      DistributedSchedulingAllocateResponse response \u003d real\n           .allocateForDistributedScheduling(request);\n-      return ((DistSchedAllocateResponsePBImpl) response).getProto();\n+      return ((DistributedSchedulingAllocateResponsePBImpl) response)\n+          .getProto();\n     } catch (YarnException e) {\n       throw new ServiceException(e);\n     } catch (IOException e) {\n       throw new ServiceException(e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "      allocateForDistributedScheduling(RpcController controller,\n      YarnServerCommonServiceProtos.\n          DistributedSchedulingAllocateRequestProto proto)\n      throws ServiceException {\n    DistributedSchedulingAllocateRequestPBImpl request \u003d\n        new DistributedSchedulingAllocateRequestPBImpl(proto);\n    try {\n      DistributedSchedulingAllocateResponse response \u003d real\n          .allocateForDistributedScheduling(request);\n      return ((DistributedSchedulingAllocateResponsePBImpl) response)\n          .getProto();\n    } catch (YarnException e) {\n      throw new ServiceException(e);\n    } catch (IOException e) {\n      throw new ServiceException(e);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/impl/pb/service/DistributedSchedulingAMProtocolPBServiceImpl.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/impl/pb/service/DistributedSchedulerProtocolPBServiceImpl.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/impl/pb/service/DistributedSchedulingAMProtocolPBServiceImpl.java"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "YARN-5113. Refactoring and other clean-up for distributed scheduling. (Konstantinos Karanasos via asuresh)\n",
          "commitDate": "31/07/16 11:48 AM",
          "commitName": "e5766b1dbee02ae0ef89618e172f3fb227af19e8",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "30/07/16 7:29 PM",
          "commitNameOld": "3d191cc15244e1e29f837b34a9bd1d029e003064",
          "commitAuthorOld": "Akira Ajisaka",
          "daysBetweenCommits": 0.68,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,17 @@\n-  allocateForDistributedScheduling(RpcController controller,\n-      YarnServerCommonServiceProtos.DistSchedAllocateRequestProto proto)\n+      allocateForDistributedScheduling(RpcController controller,\n+      YarnServerCommonServiceProtos.\n+          DistributedSchedulingAllocateRequestProto proto)\n       throws ServiceException {\n-    DistSchedAllocateRequestPBImpl request \u003d\n-        new DistSchedAllocateRequestPBImpl(proto);\n+    DistributedSchedulingAllocateRequestPBImpl request \u003d\n+        new DistributedSchedulingAllocateRequestPBImpl(proto);\n     try {\n-      DistSchedAllocateResponse response \u003d real\n+      DistributedSchedulingAllocateResponse response \u003d real\n           .allocateForDistributedScheduling(request);\n-      return ((DistSchedAllocateResponsePBImpl) response).getProto();\n+      return ((DistributedSchedulingAllocateResponsePBImpl) response)\n+          .getProto();\n     } catch (YarnException e) {\n       throw new ServiceException(e);\n     } catch (IOException e) {\n       throw new ServiceException(e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "      allocateForDistributedScheduling(RpcController controller,\n      YarnServerCommonServiceProtos.\n          DistributedSchedulingAllocateRequestProto proto)\n      throws ServiceException {\n    DistributedSchedulingAllocateRequestPBImpl request \u003d\n        new DistributedSchedulingAllocateRequestPBImpl(proto);\n    try {\n      DistributedSchedulingAllocateResponse response \u003d real\n          .allocateForDistributedScheduling(request);\n      return ((DistributedSchedulingAllocateResponsePBImpl) response)\n          .getProto();\n    } catch (YarnException e) {\n      throw new ServiceException(e);\n    } catch (IOException e) {\n      throw new ServiceException(e);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/impl/pb/service/DistributedSchedulingAMProtocolPBServiceImpl.java",
          "extendedDetails": {
            "oldValue": "YarnServerCommonServiceProtos.DistSchedAllocateResponseProto",
            "newValue": "YarnServerCommonServiceProtos.DistributedSchedulingAllocateResponseProto"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-5113. Refactoring and other clean-up for distributed scheduling. (Konstantinos Karanasos via asuresh)\n",
          "commitDate": "31/07/16 11:48 AM",
          "commitName": "e5766b1dbee02ae0ef89618e172f3fb227af19e8",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "30/07/16 7:29 PM",
          "commitNameOld": "3d191cc15244e1e29f837b34a9bd1d029e003064",
          "commitAuthorOld": "Akira Ajisaka",
          "daysBetweenCommits": 0.68,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,17 @@\n-  allocateForDistributedScheduling(RpcController controller,\n-      YarnServerCommonServiceProtos.DistSchedAllocateRequestProto proto)\n+      allocateForDistributedScheduling(RpcController controller,\n+      YarnServerCommonServiceProtos.\n+          DistributedSchedulingAllocateRequestProto proto)\n       throws ServiceException {\n-    DistSchedAllocateRequestPBImpl request \u003d\n-        new DistSchedAllocateRequestPBImpl(proto);\n+    DistributedSchedulingAllocateRequestPBImpl request \u003d\n+        new DistributedSchedulingAllocateRequestPBImpl(proto);\n     try {\n-      DistSchedAllocateResponse response \u003d real\n+      DistributedSchedulingAllocateResponse response \u003d real\n           .allocateForDistributedScheduling(request);\n-      return ((DistSchedAllocateResponsePBImpl) response).getProto();\n+      return ((DistributedSchedulingAllocateResponsePBImpl) response)\n+          .getProto();\n     } catch (YarnException e) {\n       throw new ServiceException(e);\n     } catch (IOException e) {\n       throw new ServiceException(e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "      allocateForDistributedScheduling(RpcController controller,\n      YarnServerCommonServiceProtos.\n          DistributedSchedulingAllocateRequestProto proto)\n      throws ServiceException {\n    DistributedSchedulingAllocateRequestPBImpl request \u003d\n        new DistributedSchedulingAllocateRequestPBImpl(proto);\n    try {\n      DistributedSchedulingAllocateResponse response \u003d real\n          .allocateForDistributedScheduling(request);\n      return ((DistributedSchedulingAllocateResponsePBImpl) response)\n          .getProto();\n    } catch (YarnException e) {\n      throw new ServiceException(e);\n    } catch (IOException e) {\n      throw new ServiceException(e);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/impl/pb/service/DistributedSchedulingAMProtocolPBServiceImpl.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-5113. Refactoring and other clean-up for distributed scheduling. (Konstantinos Karanasos via asuresh)\n",
          "commitDate": "31/07/16 11:48 AM",
          "commitName": "e5766b1dbee02ae0ef89618e172f3fb227af19e8",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "30/07/16 7:29 PM",
          "commitNameOld": "3d191cc15244e1e29f837b34a9bd1d029e003064",
          "commitAuthorOld": "Akira Ajisaka",
          "daysBetweenCommits": 0.68,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,17 @@\n-  allocateForDistributedScheduling(RpcController controller,\n-      YarnServerCommonServiceProtos.DistSchedAllocateRequestProto proto)\n+      allocateForDistributedScheduling(RpcController controller,\n+      YarnServerCommonServiceProtos.\n+          DistributedSchedulingAllocateRequestProto proto)\n       throws ServiceException {\n-    DistSchedAllocateRequestPBImpl request \u003d\n-        new DistSchedAllocateRequestPBImpl(proto);\n+    DistributedSchedulingAllocateRequestPBImpl request \u003d\n+        new DistributedSchedulingAllocateRequestPBImpl(proto);\n     try {\n-      DistSchedAllocateResponse response \u003d real\n+      DistributedSchedulingAllocateResponse response \u003d real\n           .allocateForDistributedScheduling(request);\n-      return ((DistSchedAllocateResponsePBImpl) response).getProto();\n+      return ((DistributedSchedulingAllocateResponsePBImpl) response)\n+          .getProto();\n     } catch (YarnException e) {\n       throw new ServiceException(e);\n     } catch (IOException e) {\n       throw new ServiceException(e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "      allocateForDistributedScheduling(RpcController controller,\n      YarnServerCommonServiceProtos.\n          DistributedSchedulingAllocateRequestProto proto)\n      throws ServiceException {\n    DistributedSchedulingAllocateRequestPBImpl request \u003d\n        new DistributedSchedulingAllocateRequestPBImpl(proto);\n    try {\n      DistributedSchedulingAllocateResponse response \u003d real\n          .allocateForDistributedScheduling(request);\n      return ((DistributedSchedulingAllocateResponsePBImpl) response)\n          .getProto();\n    } catch (YarnException e) {\n      throw new ServiceException(e);\n    } catch (IOException e) {\n      throw new ServiceException(e);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/impl/pb/service/DistributedSchedulingAMProtocolPBServiceImpl.java",
          "extendedDetails": {
            "oldValue": "[controller-RpcController, proto-YarnServerCommonServiceProtos.DistSchedAllocateRequestProto]",
            "newValue": "[controller-RpcController, proto-YarnServerCommonServiceProtos.DistributedSchedulingAllocateRequestProto]"
          }
        }
      ]
    },
    "99e5dd68d0f44109c169d74824fa45a7396a5990": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-5171. Extend DistributedSchedulerProtocol to notify RM of containers allocated by the Node. (Inigo Goiri via asuresh)\n",
      "commitDate": "22/06/16 7:04 PM",
      "commitName": "99e5dd68d0f44109c169d74824fa45a7396a5990",
      "commitAuthor": "Arun Suresh",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-5171. Extend DistributedSchedulerProtocol to notify RM of containers allocated by the Node. (Inigo Goiri via asuresh)\n",
          "commitDate": "22/06/16 7:04 PM",
          "commitName": "99e5dd68d0f44109c169d74824fa45a7396a5990",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "24/04/16 10:38 PM",
          "commitNameOld": "c282a08f3892e2e8ceb58e1e9a411062fbd1fb2b",
          "commitAuthorOld": "Arun Suresh",
          "daysBetweenCommits": 58.85,
          "commitsBetweenForRepo": 386,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,15 @@\n   allocateForDistributedScheduling(RpcController controller,\n-      AllocateRequestProto proto) throws ServiceException {\n-    AllocateRequestPBImpl request \u003d new AllocateRequestPBImpl(proto);\n+      YarnServerCommonServiceProtos.DistSchedAllocateRequestProto proto)\n+      throws ServiceException {\n+    DistSchedAllocateRequestPBImpl request \u003d\n+        new DistSchedAllocateRequestPBImpl(proto);\n     try {\n       DistSchedAllocateResponse response \u003d real\n           .allocateForDistributedScheduling(request);\n       return ((DistSchedAllocateResponsePBImpl) response).getProto();\n     } catch (YarnException e) {\n       throw new ServiceException(e);\n     } catch (IOException e) {\n       throw new ServiceException(e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  allocateForDistributedScheduling(RpcController controller,\n      YarnServerCommonServiceProtos.DistSchedAllocateRequestProto proto)\n      throws ServiceException {\n    DistSchedAllocateRequestPBImpl request \u003d\n        new DistSchedAllocateRequestPBImpl(proto);\n    try {\n      DistSchedAllocateResponse response \u003d real\n          .allocateForDistributedScheduling(request);\n      return ((DistSchedAllocateResponsePBImpl) response).getProto();\n    } catch (YarnException e) {\n      throw new ServiceException(e);\n    } catch (IOException e) {\n      throw new ServiceException(e);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/impl/pb/service/DistributedSchedulerProtocolPBServiceImpl.java",
          "extendedDetails": {
            "oldValue": "[controller-RpcController, proto-AllocateRequestProto]",
            "newValue": "[controller-RpcController, proto-YarnServerCommonServiceProtos.DistSchedAllocateRequestProto]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-5171. Extend DistributedSchedulerProtocol to notify RM of containers allocated by the Node. (Inigo Goiri via asuresh)\n",
          "commitDate": "22/06/16 7:04 PM",
          "commitName": "99e5dd68d0f44109c169d74824fa45a7396a5990",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "24/04/16 10:38 PM",
          "commitNameOld": "c282a08f3892e2e8ceb58e1e9a411062fbd1fb2b",
          "commitAuthorOld": "Arun Suresh",
          "daysBetweenCommits": 58.85,
          "commitsBetweenForRepo": 386,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,15 @@\n   allocateForDistributedScheduling(RpcController controller,\n-      AllocateRequestProto proto) throws ServiceException {\n-    AllocateRequestPBImpl request \u003d new AllocateRequestPBImpl(proto);\n+      YarnServerCommonServiceProtos.DistSchedAllocateRequestProto proto)\n+      throws ServiceException {\n+    DistSchedAllocateRequestPBImpl request \u003d\n+        new DistSchedAllocateRequestPBImpl(proto);\n     try {\n       DistSchedAllocateResponse response \u003d real\n           .allocateForDistributedScheduling(request);\n       return ((DistSchedAllocateResponsePBImpl) response).getProto();\n     } catch (YarnException e) {\n       throw new ServiceException(e);\n     } catch (IOException e) {\n       throw new ServiceException(e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  allocateForDistributedScheduling(RpcController controller,\n      YarnServerCommonServiceProtos.DistSchedAllocateRequestProto proto)\n      throws ServiceException {\n    DistSchedAllocateRequestPBImpl request \u003d\n        new DistSchedAllocateRequestPBImpl(proto);\n    try {\n      DistSchedAllocateResponse response \u003d real\n          .allocateForDistributedScheduling(request);\n      return ((DistSchedAllocateResponsePBImpl) response).getProto();\n    } catch (YarnException e) {\n      throw new ServiceException(e);\n    } catch (IOException e) {\n      throw new ServiceException(e);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/impl/pb/service/DistributedSchedulerProtocolPBServiceImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "c282a08f3892e2e8ceb58e1e9a411062fbd1fb2b": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2885. Create AMRMProxy request interceptor and ContainerAllocator to distribute OPPORTUNISTIC containers to appropriate Nodes (asuresh)\n\n(cherry picked from commit 2bf025278a318b0452fdc9ece4427b4c42124e39)\n",
      "commitDate": "24/04/16 10:38 PM",
      "commitName": "c282a08f3892e2e8ceb58e1e9a411062fbd1fb2b",
      "commitAuthor": "Arun Suresh",
      "diff": "@@ -0,0 +1,13 @@\n+  allocateForDistributedScheduling(RpcController controller,\n+      AllocateRequestProto proto) throws ServiceException {\n+    AllocateRequestPBImpl request \u003d new AllocateRequestPBImpl(proto);\n+    try {\n+      DistSchedAllocateResponse response \u003d real\n+          .allocateForDistributedScheduling(request);\n+      return ((DistSchedAllocateResponsePBImpl) response).getProto();\n+    } catch (YarnException e) {\n+      throw new ServiceException(e);\n+    } catch (IOException e) {\n+      throw new ServiceException(e);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  allocateForDistributedScheduling(RpcController controller,\n      AllocateRequestProto proto) throws ServiceException {\n    AllocateRequestPBImpl request \u003d new AllocateRequestPBImpl(proto);\n    try {\n      DistSchedAllocateResponse response \u003d real\n          .allocateForDistributedScheduling(request);\n      return ((DistSchedAllocateResponsePBImpl) response).getProto();\n    } catch (YarnException e) {\n      throw new ServiceException(e);\n    } catch (IOException e) {\n      throw new ServiceException(e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/impl/pb/service/DistributedSchedulerProtocolPBServiceImpl.java"
    }
  }
}