{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ServiceApiUtil.java",
  "functionName": "validateCompResourceSize",
  "functionId": "validateCompResourceSize___maxResource-org.apache.hadoop.yarn.api.records.Resource__service-Service",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/utils/ServiceApiUtil.java",
  "functionStartLine": 447,
  "functionEndLine": 466,
  "numCommitsSeen": 34,
  "timeTaken": 2331,
  "changeHistory": [
    "989c75109a619deeaee7461864e7cb3c289c9421",
    "40ab068eabe50875449d601471619a4e82fff86d",
    "1888318c89776f0bf354c1b13e3ee169e14ff638"
  ],
  "changeHistoryShort": {
    "989c75109a619deeaee7461864e7cb3c289c9421": "Ybodychange",
    "40ab068eabe50875449d601471619a4e82fff86d": "Ymultichange(Yfilerename,Ybodychange,Yparameterchange)",
    "1888318c89776f0bf354c1b13e3ee169e14ff638": "Yintroduced"
  },
  "changeHistoryDetails": {
    "989c75109a619deeaee7461864e7cb3c289c9421": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7543.  Add check for max cpu limit and missing file for YARN service.\n            (Contributed by Jian He)\n",
      "commitDate": "19/12/17 1:45 PM",
      "commitName": "989c75109a619deeaee7461864e7cb3c289c9421",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "04/12/17 12:11 PM",
      "commitNameOld": "d30d57828fddaa8667de49af879cde999907c7f6",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 15.07,
      "commitsBetweenForRepo": 141,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,20 @@\n   public static void validateCompResourceSize(\n       org.apache.hadoop.yarn.api.records.Resource maxResource,\n       Service service) throws YarnException {\n     for (Component component : service.getComponents()) {\n-      // only handle mem now.\n       long mem \u003d Long.parseLong(component.getResource().getMemory());\n       if (mem \u003e maxResource.getMemorySize()) {\n         throw new YarnException(\n-            \"Component \" + component.getName() + \" memory size (\" + mem\n-                + \") is larger than configured max container memory size (\"\n-                + maxResource.getMemorySize() + \")\");\n+            \"Component \" + component.getName() + \": specified memory size (\"\n+                + mem + \") is larger than configured max container memory \" +\n+                \"size (\" + maxResource.getMemorySize() + \")\");\n+      }\n+      int cpu \u003d component.getResource().getCpus();\n+      if (cpu \u003e maxResource.getVirtualCores()) {\n+        throw new YarnException(\n+            \"Component \" + component.getName() + \": specified number of \" +\n+                \"virtual core (\" + cpu + \") is larger than configured max \" +\n+                \"virtual core size (\" + maxResource.getVirtualCores() + \")\");\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void validateCompResourceSize(\n      org.apache.hadoop.yarn.api.records.Resource maxResource,\n      Service service) throws YarnException {\n    for (Component component : service.getComponents()) {\n      long mem \u003d Long.parseLong(component.getResource().getMemory());\n      if (mem \u003e maxResource.getMemorySize()) {\n        throw new YarnException(\n            \"Component \" + component.getName() + \": specified memory size (\"\n                + mem + \") is larger than configured max container memory \" +\n                \"size (\" + maxResource.getMemorySize() + \")\");\n      }\n      int cpu \u003d component.getResource().getCpus();\n      if (cpu \u003e maxResource.getVirtualCores()) {\n        throw new YarnException(\n            \"Component \" + component.getName() + \": specified number of \" +\n                \"virtual core (\" + cpu + \") is larger than configured max \" +\n                \"virtual core size (\" + maxResource.getVirtualCores() + \")\");\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/utils/ServiceApiUtil.java",
      "extendedDetails": {}
    },
    "40ab068eabe50875449d601471619a4e82fff86d": {
      "type": "Ymultichange(Yfilerename,Ybodychange,Yparameterchange)",
      "commitMessage": "YARN-7091. Rename application to service in yarn-native-services. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "40ab068eabe50875449d601471619a4e82fff86d",
      "commitAuthor": "Billie Rinaldi",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "YARN-7091. Rename application to service in yarn-native-services. Contributed by Jian He\n",
          "commitDate": "06/11/17 1:30 PM",
          "commitName": "40ab068eabe50875449d601471619a4e82fff86d",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "06/11/17 1:30 PM",
          "commitNameOld": "2ba38ce8ecb1cf3836fab48cdb2c5ae7e1b5427d",
          "commitAuthorOld": "Gour Saha",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,14 @@\n   public static void validateCompResourceSize(\n       org.apache.hadoop.yarn.api.records.Resource maxResource,\n-      Application application) throws YarnException {\n-    for (Component component : application.getComponents()) {\n+      Service service) throws YarnException {\n+    for (Component component : service.getComponents()) {\n       // only handle mem now.\n       long mem \u003d Long.parseLong(component.getResource().getMemory());\n       if (mem \u003e maxResource.getMemorySize()) {\n         throw new YarnException(\n             \"Component \" + component.getName() + \" memory size (\" + mem\n                 + \") is larger than configured max container memory size (\"\n                 + maxResource.getMemorySize() + \")\");\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void validateCompResourceSize(\n      org.apache.hadoop.yarn.api.records.Resource maxResource,\n      Service service) throws YarnException {\n    for (Component component : service.getComponents()) {\n      // only handle mem now.\n      long mem \u003d Long.parseLong(component.getResource().getMemory());\n      if (mem \u003e maxResource.getMemorySize()) {\n        throw new YarnException(\n            \"Component \" + component.getName() + \" memory size (\" + mem\n                + \") is larger than configured max container memory size (\"\n                + maxResource.getMemorySize() + \")\");\n      }\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/utils/ServiceApiUtil.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/utils/ServiceApiUtil.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/utils/ServiceApiUtil.java"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7091. Rename application to service in yarn-native-services. Contributed by Jian He\n",
          "commitDate": "06/11/17 1:30 PM",
          "commitName": "40ab068eabe50875449d601471619a4e82fff86d",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "06/11/17 1:30 PM",
          "commitNameOld": "2ba38ce8ecb1cf3836fab48cdb2c5ae7e1b5427d",
          "commitAuthorOld": "Gour Saha",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,14 @@\n   public static void validateCompResourceSize(\n       org.apache.hadoop.yarn.api.records.Resource maxResource,\n-      Application application) throws YarnException {\n-    for (Component component : application.getComponents()) {\n+      Service service) throws YarnException {\n+    for (Component component : service.getComponents()) {\n       // only handle mem now.\n       long mem \u003d Long.parseLong(component.getResource().getMemory());\n       if (mem \u003e maxResource.getMemorySize()) {\n         throw new YarnException(\n             \"Component \" + component.getName() + \" memory size (\" + mem\n                 + \") is larger than configured max container memory size (\"\n                 + maxResource.getMemorySize() + \")\");\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void validateCompResourceSize(\n      org.apache.hadoop.yarn.api.records.Resource maxResource,\n      Service service) throws YarnException {\n    for (Component component : service.getComponents()) {\n      // only handle mem now.\n      long mem \u003d Long.parseLong(component.getResource().getMemory());\n      if (mem \u003e maxResource.getMemorySize()) {\n        throw new YarnException(\n            \"Component \" + component.getName() + \" memory size (\" + mem\n                + \") is larger than configured max container memory size (\"\n                + maxResource.getMemorySize() + \")\");\n      }\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/utils/ServiceApiUtil.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-7091. Rename application to service in yarn-native-services. Contributed by Jian He\n",
          "commitDate": "06/11/17 1:30 PM",
          "commitName": "40ab068eabe50875449d601471619a4e82fff86d",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "06/11/17 1:30 PM",
          "commitNameOld": "2ba38ce8ecb1cf3836fab48cdb2c5ae7e1b5427d",
          "commitAuthorOld": "Gour Saha",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,14 @@\n   public static void validateCompResourceSize(\n       org.apache.hadoop.yarn.api.records.Resource maxResource,\n-      Application application) throws YarnException {\n-    for (Component component : application.getComponents()) {\n+      Service service) throws YarnException {\n+    for (Component component : service.getComponents()) {\n       // only handle mem now.\n       long mem \u003d Long.parseLong(component.getResource().getMemory());\n       if (mem \u003e maxResource.getMemorySize()) {\n         throw new YarnException(\n             \"Component \" + component.getName() + \" memory size (\" + mem\n                 + \") is larger than configured max container memory size (\"\n                 + maxResource.getMemorySize() + \")\");\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void validateCompResourceSize(\n      org.apache.hadoop.yarn.api.records.Resource maxResource,\n      Service service) throws YarnException {\n    for (Component component : service.getComponents()) {\n      // only handle mem now.\n      long mem \u003d Long.parseLong(component.getResource().getMemory());\n      if (mem \u003e maxResource.getMemorySize()) {\n        throw new YarnException(\n            \"Component \" + component.getName() + \" memory size (\" + mem\n                + \") is larger than configured max container memory size (\"\n                + maxResource.getMemorySize() + \")\");\n      }\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/utils/ServiceApiUtil.java",
          "extendedDetails": {
            "oldValue": "[maxResource-org.apache.hadoop.yarn.api.records.Resource, application-Application]",
            "newValue": "[maxResource-org.apache.hadoop.yarn.api.records.Resource, service-Service]"
          }
        }
      ]
    },
    "1888318c89776f0bf354c1b13e3ee169e14ff638": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6903. Yarn-native-service framework core rewrite. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "1888318c89776f0bf354c1b13e3ee169e14ff638",
      "commitAuthor": "Billie Rinaldi",
      "diff": "@@ -0,0 +1,14 @@\n+  public static void validateCompResourceSize(\n+      org.apache.hadoop.yarn.api.records.Resource maxResource,\n+      Application application) throws YarnException {\n+    for (Component component : application.getComponents()) {\n+      // only handle mem now.\n+      long mem \u003d Long.parseLong(component.getResource().getMemory());\n+      if (mem \u003e maxResource.getMemorySize()) {\n+        throw new YarnException(\n+            \"Component \" + component.getName() + \" memory size (\" + mem\n+                + \") is larger than configured max container memory size (\"\n+                + maxResource.getMemorySize() + \")\");\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static void validateCompResourceSize(\n      org.apache.hadoop.yarn.api.records.Resource maxResource,\n      Application application) throws YarnException {\n    for (Component component : application.getComponents()) {\n      // only handle mem now.\n      long mem \u003d Long.parseLong(component.getResource().getMemory());\n      if (mem \u003e maxResource.getMemorySize()) {\n        throw new YarnException(\n            \"Component \" + component.getName() + \" memory size (\" + mem\n                + \") is larger than configured max container memory size (\"\n                + maxResource.getMemorySize() + \")\");\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/utils/ServiceApiUtil.java"
    }
  }
}