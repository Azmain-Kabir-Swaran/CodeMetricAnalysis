{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "KMSClientProvider.java",
  "functionName": "rollNewVersionInternal",
  "functionId": "rollNewVersionInternal___name-String__material-byte[]",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/KMSClientProvider.java",
  "functionStartLine": 749,
  "functionEndLine": 765,
  "numCommitsSeen": 71,
  "timeTaken": 2054,
  "changeHistory": [
    "2007e0cf2ad371e2dbf533c367f09c1f5acd1c0b",
    "df8c84cba8512058f5097c6faeedf4b65cab3806",
    "17d4fbbf0af9b93de9502afb274e91533140d1c6"
  ],
  "changeHistoryShort": {
    "2007e0cf2ad371e2dbf533c367f09c1f5acd1c0b": "Ybodychange",
    "df8c84cba8512058f5097c6faeedf4b65cab3806": "Ybodychange",
    "17d4fbbf0af9b93de9502afb274e91533140d1c6": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2007e0cf2ad371e2dbf533c367f09c1f5acd1c0b": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11210. Enhance key rolling to guarantee new KeyVersion is returned from generateEncryptedKeys after a key is rolled.\n",
      "commitDate": "07/02/17 8:36 PM",
      "commitName": "2007e0cf2ad371e2dbf533c367f09c1f5acd1c0b",
      "commitAuthor": "Xiao Chen",
      "commitDateOld": "26/01/17 8:34 PM",
      "commitNameOld": "2034315763cd7b1eb77e96c719918fc14e2dabf6",
      "commitAuthorOld": "Xiaoyu Yao",
      "daysBetweenCommits": 12.0,
      "commitsBetweenForRepo": 35,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   private KeyVersion rollNewVersionInternal(String name, byte[] material)\n       throws NoSuchAlgorithmException, IOException {\n     checkNotEmpty(name, \"name\");\n     Map\u003cString, String\u003e jsonMaterial \u003d new HashMap\u003cString, String\u003e();\n     if (material !\u003d null) {\n       jsonMaterial.put(KMSRESTConstants.MATERIAL_FIELD,\n           Base64.encodeBase64String(material));\n     }\n     URL url \u003d createURL(KMSRESTConstants.KEY_RESOURCE, name, null, null);\n     HttpURLConnection conn \u003d createConnection(url, HTTP_POST);\n     conn.setRequestProperty(CONTENT_TYPE, APPLICATION_JSON_MIME);\n     Map response \u003d call(conn, jsonMaterial,\n         HttpURLConnection.HTTP_OK, Map.class);\n     KeyVersion keyVersion \u003d parseJSONKeyVersion(response);\n-    encKeyVersionQueue.drain(name);\n+    invalidateCache(name);\n     return keyVersion;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private KeyVersion rollNewVersionInternal(String name, byte[] material)\n      throws NoSuchAlgorithmException, IOException {\n    checkNotEmpty(name, \"name\");\n    Map\u003cString, String\u003e jsonMaterial \u003d new HashMap\u003cString, String\u003e();\n    if (material !\u003d null) {\n      jsonMaterial.put(KMSRESTConstants.MATERIAL_FIELD,\n          Base64.encodeBase64String(material));\n    }\n    URL url \u003d createURL(KMSRESTConstants.KEY_RESOURCE, name, null, null);\n    HttpURLConnection conn \u003d createConnection(url, HTTP_POST);\n    conn.setRequestProperty(CONTENT_TYPE, APPLICATION_JSON_MIME);\n    Map response \u003d call(conn, jsonMaterial,\n        HttpURLConnection.HTTP_OK, Map.class);\n    KeyVersion keyVersion \u003d parseJSONKeyVersion(response);\n    invalidateCache(name);\n    return keyVersion;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/KMSClientProvider.java",
      "extendedDetails": {}
    },
    "df8c84cba8512058f5097c6faeedf4b65cab3806": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11071. KMSClientProvider should drain the local generated EEK cache on key rollover. (tucu)\n",
      "commitDate": "08/09/14 11:31 AM",
      "commitName": "df8c84cba8512058f5097c6faeedf4b65cab3806",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "05/09/14 9:59 PM",
      "commitNameOld": "0f3c19c1bb9e341d8aed132ba3eb9e7fc7588306",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 2.56,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,17 @@\n   private KeyVersion rollNewVersionInternal(String name, byte[] material)\n       throws NoSuchAlgorithmException, IOException {\n     checkNotEmpty(name, \"name\");\n     Map\u003cString, String\u003e jsonMaterial \u003d new HashMap\u003cString, String\u003e();\n     if (material !\u003d null) {\n       jsonMaterial.put(KMSRESTConstants.MATERIAL_FIELD,\n           Base64.encodeBase64String(material));\n     }\n     URL url \u003d createURL(KMSRESTConstants.KEY_RESOURCE, name, null, null);\n     HttpURLConnection conn \u003d createConnection(url, HTTP_POST);\n     conn.setRequestProperty(CONTENT_TYPE, APPLICATION_JSON_MIME);\n     Map response \u003d call(conn, jsonMaterial,\n         HttpURLConnection.HTTP_OK, Map.class);\n-    return parseJSONKeyVersion(response);\n+    KeyVersion keyVersion \u003d parseJSONKeyVersion(response);\n+    encKeyVersionQueue.drain(name);\n+    return keyVersion;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private KeyVersion rollNewVersionInternal(String name, byte[] material)\n      throws NoSuchAlgorithmException, IOException {\n    checkNotEmpty(name, \"name\");\n    Map\u003cString, String\u003e jsonMaterial \u003d new HashMap\u003cString, String\u003e();\n    if (material !\u003d null) {\n      jsonMaterial.put(KMSRESTConstants.MATERIAL_FIELD,\n          Base64.encodeBase64String(material));\n    }\n    URL url \u003d createURL(KMSRESTConstants.KEY_RESOURCE, name, null, null);\n    HttpURLConnection conn \u003d createConnection(url, HTTP_POST);\n    conn.setRequestProperty(CONTENT_TYPE, APPLICATION_JSON_MIME);\n    Map response \u003d call(conn, jsonMaterial,\n        HttpURLConnection.HTTP_OK, Map.class);\n    KeyVersion keyVersion \u003d parseJSONKeyVersion(response);\n    encKeyVersionQueue.drain(name);\n    return keyVersion;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/KMSClientProvider.java",
      "extendedDetails": {}
    },
    "17d4fbbf0af9b93de9502afb274e91533140d1c6": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-10433. Key Management Server based on KeyProvider API. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1592637 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/05/14 2:43 PM",
      "commitName": "17d4fbbf0af9b93de9502afb274e91533140d1c6",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,15 @@\n+  private KeyVersion rollNewVersionInternal(String name, byte[] material)\n+      throws NoSuchAlgorithmException, IOException {\n+    checkNotEmpty(name, \"name\");\n+    Map\u003cString, String\u003e jsonMaterial \u003d new HashMap\u003cString, String\u003e();\n+    if (material !\u003d null) {\n+      jsonMaterial.put(KMSRESTConstants.MATERIAL_FIELD,\n+          Base64.encodeBase64String(material));\n+    }\n+    URL url \u003d createURL(KMSRESTConstants.KEY_RESOURCE, name, null, null);\n+    HttpURLConnection conn \u003d createConnection(url, HTTP_POST);\n+    conn.setRequestProperty(CONTENT_TYPE, APPLICATION_JSON_MIME);\n+    Map response \u003d call(conn, jsonMaterial,\n+        HttpURLConnection.HTTP_OK, Map.class);\n+    return parseJSONKeyVersion(response);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private KeyVersion rollNewVersionInternal(String name, byte[] material)\n      throws NoSuchAlgorithmException, IOException {\n    checkNotEmpty(name, \"name\");\n    Map\u003cString, String\u003e jsonMaterial \u003d new HashMap\u003cString, String\u003e();\n    if (material !\u003d null) {\n      jsonMaterial.put(KMSRESTConstants.MATERIAL_FIELD,\n          Base64.encodeBase64String(material));\n    }\n    URL url \u003d createURL(KMSRESTConstants.KEY_RESOURCE, name, null, null);\n    HttpURLConnection conn \u003d createConnection(url, HTTP_POST);\n    conn.setRequestProperty(CONTENT_TYPE, APPLICATION_JSON_MIME);\n    Map response \u003d call(conn, jsonMaterial,\n        HttpURLConnection.HTTP_OK, Map.class);\n    return parseJSONKeyVersion(response);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/KMSClientProvider.java"
    }
  }
}