{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RSUtil.java",
  "functionName": "getPrimitivePower",
  "functionId": "getPrimitivePower___numDataUnits-int__numParityUnits-int",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/erasurecode/rawcoder/util/RSUtil.java",
  "functionStartLine": 38,
  "functionEndLine": 45,
  "numCommitsSeen": 5,
  "timeTaken": 561,
  "changeHistory": [
    "dae27f6dd14ac3ed0b9821a3c5239569b13f6adf"
  ],
  "changeHistoryShort": {
    "dae27f6dd14ac3ed0b9821a3c5239569b13f6adf": "Yintroduced"
  },
  "changeHistoryDetails": {
    "dae27f6dd14ac3ed0b9821a3c5239569b13f6adf": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-11542. Raw Reed-Solomon coder in pure Java. Contributed by Kai Zheng\n",
      "commitDate": "26/05/15 11:07 AM",
      "commitName": "dae27f6dd14ac3ed0b9821a3c5239569b13f6adf",
      "commitAuthor": "drankye",
      "diff": "@@ -0,0 +1,8 @@\n+  public static int[] getPrimitivePower(int numDataUnits, int numParityUnits) {\n+    int[] primitivePower \u003d new int[numDataUnits + numParityUnits];\n+    // compute powers of the primitive root\n+    for (int i \u003d 0; i \u003c numDataUnits + numParityUnits; i++) {\n+      primitivePower[i] \u003d GF.power(PRIMITIVE_ROOT, i);\n+    }\n+    return primitivePower;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static int[] getPrimitivePower(int numDataUnits, int numParityUnits) {\n    int[] primitivePower \u003d new int[numDataUnits + numParityUnits];\n    // compute powers of the primitive root\n    for (int i \u003d 0; i \u003c numDataUnits + numParityUnits; i++) {\n      primitivePower[i] \u003d GF.power(PRIMITIVE_ROOT, i);\n    }\n    return primitivePower;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/erasurecode/rawcoder/util/RSUtil.java"
    }
  }
}