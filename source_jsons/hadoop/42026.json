{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ZKRMStateStore.java",
  "functionName": "removeApplicationStateInternal",
  "functionId": "removeApplicationStateInternal___appState-ApplicationStateData",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
  "functionStartLine": 977,
  "functionEndLine": 981,
  "numCommitsSeen": 116,
  "timeTaken": 4576,
  "changeHistory": [
    "2e52789edf68016e7a3f450164f8bd3d8e6cb210",
    "bcb2528a51c33e4caff8d744c5e14c1accfc47d0",
    "960b8f19ca98dbcfdd30f2f1f275b8718d2e872f",
    "4c7b9b6abe2452c9752a11214762be2e7665fb32",
    "5805a81efbc024024d8172489dfdc6cf77879416",
    "93907baa0b033c1431dc7055116746fc9db508cc",
    "305ae48136d6e201de4451e824cb7b84f94ba2e0",
    "8628c1704b7d8c1a0ac01cea679c03245d11d330"
  ],
  "changeHistoryShort": {
    "2e52789edf68016e7a3f450164f8bd3d8e6cb210": "Ybodychange",
    "bcb2528a51c33e4caff8d744c5e14c1accfc47d0": "Ymodifierchange",
    "960b8f19ca98dbcfdd30f2f1f275b8718d2e872f": "Ybodychange",
    "4c7b9b6abe2452c9752a11214762be2e7665fb32": "Ybodychange",
    "5805a81efbc024024d8172489dfdc6cf77879416": "Ymultichange(Yparameterchange,Ybodychange)",
    "93907baa0b033c1431dc7055116746fc9db508cc": "Ybodychange",
    "305ae48136d6e201de4451e824cb7b84f94ba2e0": "Ymultichange(Yrename,Ybodychange)",
    "8628c1704b7d8c1a0ac01cea679c03245d11d330": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2e52789edf68016e7a3f450164f8bd3d8e6cb210": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2962. ZKRMStateStore: Limit the number of znodes under a znode (Contributed by Varun Sexena via Daniel Templeton)\n",
      "commitDate": "28/04/17 1:30 PM",
      "commitName": "2e52789edf68016e7a3f450164f8bd3d8e6cb210",
      "commitAuthor": "Daniel Templeton",
      "commitDateOld": "30/01/17 9:44 PM",
      "commitNameOld": "87852b6ef4b9d973b7b3999974d41c8860fb1495",
      "commitAuthorOld": "Daniel Templeton",
      "daysBetweenCommits": 87.62,
      "commitsBetweenForRepo": 498,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,5 @@\n   protected synchronized void removeApplicationStateInternal(\n       ApplicationStateData appState) throws Exception {\n-    String appId \u003d appState.getApplicationSubmissionContext().getApplicationId()\n-        .toString();\n-    String appIdRemovePath \u003d getNodePath(rmAppRoot, appId);\n-\n-    if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"Removing info for app: \" + appId + \" at: \" + appIdRemovePath\n-          + \" and its attempts.\");\n-    }\n-\n-    for (ApplicationAttemptId attemptId : appState.attempts.keySet()) {\n-      String attemptRemovePath \u003d\n-          getNodePath(appIdRemovePath, attemptId.toString());\n-      safeDelete(attemptRemovePath);\n-    }\n-\n-    safeDelete(appIdRemovePath);\n+    removeApp(appState.getApplicationSubmissionContext().\n+        getApplicationId().toString(), true, appState.attempts.keySet());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected synchronized void removeApplicationStateInternal(\n      ApplicationStateData appState) throws Exception {\n    removeApp(appState.getApplicationSubmissionContext().\n        getApplicationId().toString(), true, appState.attempts.keySet());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "bcb2528a51c33e4caff8d744c5e14c1accfc47d0": {
      "type": "Ymodifierchange",
      "commitMessage": "YARN-5400. Light cleanup in ZKRMStateStore (templedf via rkanter)\n",
      "commitDate": "28/09/16 2:56 PM",
      "commitName": "bcb2528a51c33e4caff8d744c5e14c1accfc47d0",
      "commitAuthor": "Robert Kanter",
      "commitDateOld": "25/09/16 11:00 PM",
      "commitNameOld": "14a696f369f7e3802587f57c8fff3aa51b5ab576",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 2.66,
      "commitsBetweenForRepo": 26,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,19 @@\n-  public synchronized void removeApplicationStateInternal(\n-      ApplicationStateData  appState)\n-      throws Exception {\n+  protected synchronized void removeApplicationStateInternal(\n+      ApplicationStateData appState) throws Exception {\n     String appId \u003d appState.getApplicationSubmissionContext().getApplicationId()\n         .toString();\n     String appIdRemovePath \u003d getNodePath(rmAppRoot, appId);\n \n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Removing info for app: \" + appId + \" at: \" + appIdRemovePath\n           + \" and its attempts.\");\n     }\n \n     for (ApplicationAttemptId attemptId : appState.attempts.keySet()) {\n-      String attemptRemovePath \u003d getNodePath(appIdRemovePath, attemptId.toString());\n+      String attemptRemovePath \u003d\n+          getNodePath(appIdRemovePath, attemptId.toString());\n       safeDelete(attemptRemovePath);\n     }\n+\n     safeDelete(appIdRemovePath);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected synchronized void removeApplicationStateInternal(\n      ApplicationStateData appState) throws Exception {\n    String appId \u003d appState.getApplicationSubmissionContext().getApplicationId()\n        .toString();\n    String appIdRemovePath \u003d getNodePath(rmAppRoot, appId);\n\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Removing info for app: \" + appId + \" at: \" + appIdRemovePath\n          + \" and its attempts.\");\n    }\n\n    for (ApplicationAttemptId attemptId : appState.attempts.keySet()) {\n      String attemptRemovePath \u003d\n          getNodePath(appIdRemovePath, attemptId.toString());\n      safeDelete(attemptRemovePath);\n    }\n\n    safeDelete(appIdRemovePath);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {
        "oldValue": "[public, synchronized]",
        "newValue": "[protected, synchronized]"
      }
    },
    "960b8f19ca98dbcfdd30f2f1f275b8718d2e872f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2716. Refactor ZKRMStateStore retry code with Apache Curator. Contributed by Karthik Kambatla\n",
      "commitDate": "08/06/15 2:50 PM",
      "commitName": "960b8f19ca98dbcfdd30f2f1f275b8718d2e872f",
      "commitAuthor": "Jian He",
      "commitDateOld": "08/05/15 3:12 PM",
      "commitNameOld": "d0b73287c26983f32b0efe01862150e9fd28086f",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 30.99,
      "commitsBetweenForRepo": 257,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,18 @@\n   public synchronized void removeApplicationStateInternal(\n       ApplicationStateData  appState)\n       throws Exception {\n     String appId \u003d appState.getApplicationSubmissionContext().getApplicationId()\n         .toString();\n     String appIdRemovePath \u003d getNodePath(rmAppRoot, appId);\n-    ArrayList\u003cOp\u003e opList \u003d new ArrayList\u003cOp\u003e();\n-\n-    for (ApplicationAttemptId attemptId : appState.attempts.keySet()) {\n-      String attemptRemovePath \u003d getNodePath(appIdRemovePath, attemptId.toString());\n-      opList.add(Op.delete(attemptRemovePath, -1));\n-    }\n-    opList.add(Op.delete(appIdRemovePath, -1));\n \n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Removing info for app: \" + appId + \" at: \" + appIdRemovePath\n           + \" and its attempts.\");\n     }\n-    doDeleteMultiWithRetries(opList);\n+\n+    for (ApplicationAttemptId attemptId : appState.attempts.keySet()) {\n+      String attemptRemovePath \u003d getNodePath(appIdRemovePath, attemptId.toString());\n+      safeDelete(attemptRemovePath);\n+    }\n+    safeDelete(appIdRemovePath);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void removeApplicationStateInternal(\n      ApplicationStateData  appState)\n      throws Exception {\n    String appId \u003d appState.getApplicationSubmissionContext().getApplicationId()\n        .toString();\n    String appIdRemovePath \u003d getNodePath(rmAppRoot, appId);\n\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Removing info for app: \" + appId + \" at: \" + appIdRemovePath\n          + \" and its attempts.\");\n    }\n\n    for (ApplicationAttemptId attemptId : appState.attempts.keySet()) {\n      String attemptRemovePath \u003d getNodePath(appIdRemovePath, attemptId.toString());\n      safeDelete(attemptRemovePath);\n    }\n    safeDelete(appIdRemovePath);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "4c7b9b6abe2452c9752a11214762be2e7665fb32": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3385. Fixed a race-condition in ResourceManager\u0027s ZooKeeper based state-store to avoid crashing on duplicate deletes. Contributed by Zhihai Xu.\n",
      "commitDate": "06/05/15 5:51 PM",
      "commitName": "4c7b9b6abe2452c9752a11214762be2e7665fb32",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "04/05/15 4:13 PM",
      "commitNameOld": "d701acc9c67adc578ba18035edde1166eedaae98",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 2.07,
      "commitsBetweenForRepo": 28,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   public synchronized void removeApplicationStateInternal(\n       ApplicationStateData  appState)\n       throws Exception {\n     String appId \u003d appState.getApplicationSubmissionContext().getApplicationId()\n         .toString();\n     String appIdRemovePath \u003d getNodePath(rmAppRoot, appId);\n     ArrayList\u003cOp\u003e opList \u003d new ArrayList\u003cOp\u003e();\n \n     for (ApplicationAttemptId attemptId : appState.attempts.keySet()) {\n       String attemptRemovePath \u003d getNodePath(appIdRemovePath, attemptId.toString());\n       opList.add(Op.delete(attemptRemovePath, -1));\n     }\n     opList.add(Op.delete(appIdRemovePath, -1));\n \n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Removing info for app: \" + appId + \" at: \" + appIdRemovePath\n           + \" and its attempts.\");\n     }\n-    doMultiWithRetries(opList);\n+    doDeleteMultiWithRetries(opList);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void removeApplicationStateInternal(\n      ApplicationStateData  appState)\n      throws Exception {\n    String appId \u003d appState.getApplicationSubmissionContext().getApplicationId()\n        .toString();\n    String appIdRemovePath \u003d getNodePath(rmAppRoot, appId);\n    ArrayList\u003cOp\u003e opList \u003d new ArrayList\u003cOp\u003e();\n\n    for (ApplicationAttemptId attemptId : appState.attempts.keySet()) {\n      String attemptRemovePath \u003d getNodePath(appIdRemovePath, attemptId.toString());\n      opList.add(Op.delete(attemptRemovePath, -1));\n    }\n    opList.add(Op.delete(appIdRemovePath, -1));\n\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Removing info for app: \" + appId + \" at: \" + appIdRemovePath\n          + \" and its attempts.\");\n    }\n    doDeleteMultiWithRetries(opList);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "5805a81efbc024024d8172489dfdc6cf77879416": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-2404. Removed ApplicationAttemptState and ApplicationState class in RMStateStore. Contributed by Tsuyoshi OZAWA\n",
      "commitDate": "25/11/14 12:48 PM",
      "commitName": "5805a81efbc024024d8172489dfdc6cf77879416",
      "commitAuthor": "Jian He",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-2404. Removed ApplicationAttemptState and ApplicationState class in RMStateStore. Contributed by Tsuyoshi OZAWA\n",
          "commitDate": "25/11/14 12:48 PM",
          "commitName": "5805a81efbc024024d8172489dfdc6cf77879416",
          "commitAuthor": "Jian He",
          "commitDateOld": "26/10/14 11:14 AM",
          "commitNameOld": "018664550507981297fd9f91e29408e6b7801ea9",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 30.11,
          "commitsBetweenForRepo": 280,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,20 @@\n-  public synchronized void removeApplicationStateInternal(ApplicationState appState)\n+  public synchronized void removeApplicationStateInternal(\n+      ApplicationStateData  appState)\n       throws Exception {\n-    String appId \u003d appState.getAppId().toString();\n+    String appId \u003d appState.getApplicationSubmissionContext().getApplicationId()\n+        .toString();\n     String appIdRemovePath \u003d getNodePath(rmAppRoot, appId);\n     ArrayList\u003cOp\u003e opList \u003d new ArrayList\u003cOp\u003e();\n \n     for (ApplicationAttemptId attemptId : appState.attempts.keySet()) {\n       String attemptRemovePath \u003d getNodePath(appIdRemovePath, attemptId.toString());\n       opList.add(Op.delete(attemptRemovePath, -1));\n     }\n     opList.add(Op.delete(appIdRemovePath, -1));\n \n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Removing info for app: \" + appId + \" at: \" + appIdRemovePath\n           + \" and its attempts.\");\n     }\n     doMultiWithRetries(opList);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void removeApplicationStateInternal(\n      ApplicationStateData  appState)\n      throws Exception {\n    String appId \u003d appState.getApplicationSubmissionContext().getApplicationId()\n        .toString();\n    String appIdRemovePath \u003d getNodePath(rmAppRoot, appId);\n    ArrayList\u003cOp\u003e opList \u003d new ArrayList\u003cOp\u003e();\n\n    for (ApplicationAttemptId attemptId : appState.attempts.keySet()) {\n      String attemptRemovePath \u003d getNodePath(appIdRemovePath, attemptId.toString());\n      opList.add(Op.delete(attemptRemovePath, -1));\n    }\n    opList.add(Op.delete(appIdRemovePath, -1));\n\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Removing info for app: \" + appId + \" at: \" + appIdRemovePath\n          + \" and its attempts.\");\n    }\n    doMultiWithRetries(opList);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
          "extendedDetails": {
            "oldValue": "[appState-ApplicationState]",
            "newValue": "[appState-ApplicationStateData]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-2404. Removed ApplicationAttemptState and ApplicationState class in RMStateStore. Contributed by Tsuyoshi OZAWA\n",
          "commitDate": "25/11/14 12:48 PM",
          "commitName": "5805a81efbc024024d8172489dfdc6cf77879416",
          "commitAuthor": "Jian He",
          "commitDateOld": "26/10/14 11:14 AM",
          "commitNameOld": "018664550507981297fd9f91e29408e6b7801ea9",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 30.11,
          "commitsBetweenForRepo": 280,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,20 @@\n-  public synchronized void removeApplicationStateInternal(ApplicationState appState)\n+  public synchronized void removeApplicationStateInternal(\n+      ApplicationStateData  appState)\n       throws Exception {\n-    String appId \u003d appState.getAppId().toString();\n+    String appId \u003d appState.getApplicationSubmissionContext().getApplicationId()\n+        .toString();\n     String appIdRemovePath \u003d getNodePath(rmAppRoot, appId);\n     ArrayList\u003cOp\u003e opList \u003d new ArrayList\u003cOp\u003e();\n \n     for (ApplicationAttemptId attemptId : appState.attempts.keySet()) {\n       String attemptRemovePath \u003d getNodePath(appIdRemovePath, attemptId.toString());\n       opList.add(Op.delete(attemptRemovePath, -1));\n     }\n     opList.add(Op.delete(appIdRemovePath, -1));\n \n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Removing info for app: \" + appId + \" at: \" + appIdRemovePath\n           + \" and its attempts.\");\n     }\n     doMultiWithRetries(opList);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void removeApplicationStateInternal(\n      ApplicationStateData  appState)\n      throws Exception {\n    String appId \u003d appState.getApplicationSubmissionContext().getApplicationId()\n        .toString();\n    String appIdRemovePath \u003d getNodePath(rmAppRoot, appId);\n    ArrayList\u003cOp\u003e opList \u003d new ArrayList\u003cOp\u003e();\n\n    for (ApplicationAttemptId attemptId : appState.attempts.keySet()) {\n      String attemptRemovePath \u003d getNodePath(appIdRemovePath, attemptId.toString());\n      opList.add(Op.delete(attemptRemovePath, -1));\n    }\n    opList.add(Op.delete(appIdRemovePath, -1));\n\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Removing info for app: \" + appId + \" at: \" + appIdRemovePath\n          + \" and its attempts.\");\n    }\n    doMultiWithRetries(opList);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
          "extendedDetails": {}
        }
      ]
    },
    "93907baa0b033c1431dc7055116746fc9db508cc": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1307. Redesign znode structure for Zookeeper based RM state-store for better organization and scalability. Contributed by Tsuyoshi OZAWA.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1552209 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/12/13 6:33 PM",
      "commitName": "93907baa0b033c1431dc7055116746fc9db508cc",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "07/12/13 8:17 PM",
      "commitNameOld": "305ae48136d6e201de4451e824cb7b84f94ba2e0",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 10.93,
      "commitsBetweenForRepo": 69,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,18 @@\n   public synchronized void removeApplicationStateInternal(ApplicationState appState)\n       throws Exception {\n     String appId \u003d appState.getAppId().toString();\n-    String nodeRemovePath \u003d getNodePath(rmAppRoot, appId);\n+    String appIdRemovePath \u003d getNodePath(rmAppRoot, appId);\n     ArrayList\u003cOp\u003e opList \u003d new ArrayList\u003cOp\u003e();\n-    opList.add(Op.delete(nodeRemovePath, -1));\n \n     for (ApplicationAttemptId attemptId : appState.attempts.keySet()) {\n-      String attemptRemovePath \u003d getNodePath(rmAppRoot, attemptId.toString());\n+      String attemptRemovePath \u003d getNodePath(appIdRemovePath, attemptId.toString());\n       opList.add(Op.delete(attemptRemovePath, -1));\n     }\n+    opList.add(Op.delete(appIdRemovePath, -1));\n+\n     if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"Removing info for app: \" + appId + \" at: \" + nodeRemovePath\n+      LOG.debug(\"Removing info for app: \" + appId + \" at: \" + appIdRemovePath\n           + \" and its attempts.\");\n     }\n     doMultiWithRetries(opList);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void removeApplicationStateInternal(ApplicationState appState)\n      throws Exception {\n    String appId \u003d appState.getAppId().toString();\n    String appIdRemovePath \u003d getNodePath(rmAppRoot, appId);\n    ArrayList\u003cOp\u003e opList \u003d new ArrayList\u003cOp\u003e();\n\n    for (ApplicationAttemptId attemptId : appState.attempts.keySet()) {\n      String attemptRemovePath \u003d getNodePath(appIdRemovePath, attemptId.toString());\n      opList.add(Op.delete(attemptRemovePath, -1));\n    }\n    opList.add(Op.delete(appIdRemovePath, -1));\n\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Removing info for app: \" + appId + \" at: \" + appIdRemovePath\n          + \" and its attempts.\");\n    }\n    doMultiWithRetries(opList);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "305ae48136d6e201de4451e824cb7b84f94ba2e0": {
      "type": "Ymultichange(Yrename,Ybodychange)",
      "commitMessage": "YARN-1378. Implemented a cleaner of old finished applications from the RM state-store. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1548990 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/12/13 8:17 PM",
      "commitName": "305ae48136d6e201de4451e824cb7b84f94ba2e0",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-1378. Implemented a cleaner of old finished applications from the RM state-store. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1548990 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "07/12/13 8:17 PM",
          "commitName": "305ae48136d6e201de4451e824cb7b84f94ba2e0",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "03/12/13 11:28 AM",
          "commitNameOld": "9c95015bb47f362e592393f0cec899fd8fdd3b04",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 4.37,
          "commitsBetweenForRepo": 37,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n-  public synchronized void removeApplicationState(ApplicationState appState)\n+  public synchronized void removeApplicationStateInternal(ApplicationState appState)\n       throws Exception {\n     String appId \u003d appState.getAppId().toString();\n     String nodeRemovePath \u003d getNodePath(rmAppRoot, appId);\n     ArrayList\u003cOp\u003e opList \u003d new ArrayList\u003cOp\u003e();\n-    opList.add(Op.delete(nodeRemovePath, 0));\n+    opList.add(Op.delete(nodeRemovePath, -1));\n \n     for (ApplicationAttemptId attemptId : appState.attempts.keySet()) {\n       String attemptRemovePath \u003d getNodePath(rmAppRoot, attemptId.toString());\n-      opList.add(Op.delete(attemptRemovePath, 0));\n+      opList.add(Op.delete(attemptRemovePath, -1));\n     }\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Removing info for app: \" + appId + \" at: \" + nodeRemovePath\n           + \" and its attempts.\");\n     }\n     doMultiWithRetries(opList);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void removeApplicationStateInternal(ApplicationState appState)\n      throws Exception {\n    String appId \u003d appState.getAppId().toString();\n    String nodeRemovePath \u003d getNodePath(rmAppRoot, appId);\n    ArrayList\u003cOp\u003e opList \u003d new ArrayList\u003cOp\u003e();\n    opList.add(Op.delete(nodeRemovePath, -1));\n\n    for (ApplicationAttemptId attemptId : appState.attempts.keySet()) {\n      String attemptRemovePath \u003d getNodePath(rmAppRoot, attemptId.toString());\n      opList.add(Op.delete(attemptRemovePath, -1));\n    }\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Removing info for app: \" + appId + \" at: \" + nodeRemovePath\n          + \" and its attempts.\");\n    }\n    doMultiWithRetries(opList);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
          "extendedDetails": {
            "oldValue": "removeApplicationState",
            "newValue": "removeApplicationStateInternal"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-1378. Implemented a cleaner of old finished applications from the RM state-store. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1548990 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "07/12/13 8:17 PM",
          "commitName": "305ae48136d6e201de4451e824cb7b84f94ba2e0",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "03/12/13 11:28 AM",
          "commitNameOld": "9c95015bb47f362e592393f0cec899fd8fdd3b04",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 4.37,
          "commitsBetweenForRepo": 37,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n-  public synchronized void removeApplicationState(ApplicationState appState)\n+  public synchronized void removeApplicationStateInternal(ApplicationState appState)\n       throws Exception {\n     String appId \u003d appState.getAppId().toString();\n     String nodeRemovePath \u003d getNodePath(rmAppRoot, appId);\n     ArrayList\u003cOp\u003e opList \u003d new ArrayList\u003cOp\u003e();\n-    opList.add(Op.delete(nodeRemovePath, 0));\n+    opList.add(Op.delete(nodeRemovePath, -1));\n \n     for (ApplicationAttemptId attemptId : appState.attempts.keySet()) {\n       String attemptRemovePath \u003d getNodePath(rmAppRoot, attemptId.toString());\n-      opList.add(Op.delete(attemptRemovePath, 0));\n+      opList.add(Op.delete(attemptRemovePath, -1));\n     }\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Removing info for app: \" + appId + \" at: \" + nodeRemovePath\n           + \" and its attempts.\");\n     }\n     doMultiWithRetries(opList);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void removeApplicationStateInternal(ApplicationState appState)\n      throws Exception {\n    String appId \u003d appState.getAppId().toString();\n    String nodeRemovePath \u003d getNodePath(rmAppRoot, appId);\n    ArrayList\u003cOp\u003e opList \u003d new ArrayList\u003cOp\u003e();\n    opList.add(Op.delete(nodeRemovePath, -1));\n\n    for (ApplicationAttemptId attemptId : appState.attempts.keySet()) {\n      String attemptRemovePath \u003d getNodePath(rmAppRoot, attemptId.toString());\n      opList.add(Op.delete(attemptRemovePath, -1));\n    }\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Removing info for app: \" + appId + \" at: \" + nodeRemovePath\n          + \" and its attempts.\");\n    }\n    doMultiWithRetries(opList);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
          "extendedDetails": {}
        }
      ]
    },
    "8628c1704b7d8c1a0ac01cea679c03245d11d330": {
      "type": "Yintroduced",
      "commitMessage": "YARN-353. Add Zookeeper-based store implementation for RMStateStore. Contributed by Bikas Saha, Jian He and Karthik Kambatla.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1524829 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/09/13 1:39 PM",
      "commitName": "8628c1704b7d8c1a0ac01cea679c03245d11d330",
      "commitAuthor": "Hitesh Shah",
      "diff": "@@ -0,0 +1,17 @@\n+  public synchronized void removeApplicationState(ApplicationState appState)\n+      throws Exception {\n+    String appId \u003d appState.getAppId().toString();\n+    String nodeRemovePath \u003d getNodePath(rmAppRoot, appId);\n+    ArrayList\u003cOp\u003e opList \u003d new ArrayList\u003cOp\u003e();\n+    opList.add(Op.delete(nodeRemovePath, 0));\n+\n+    for (ApplicationAttemptId attemptId : appState.attempts.keySet()) {\n+      String attemptRemovePath \u003d getNodePath(rmAppRoot, attemptId.toString());\n+      opList.add(Op.delete(attemptRemovePath, 0));\n+    }\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"Removing info for app: \" + appId + \" at: \" + nodeRemovePath\n+          + \" and its attempts.\");\n+    }\n+    doMultiWithRetries(opList);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void removeApplicationState(ApplicationState appState)\n      throws Exception {\n    String appId \u003d appState.getAppId().toString();\n    String nodeRemovePath \u003d getNodePath(rmAppRoot, appId);\n    ArrayList\u003cOp\u003e opList \u003d new ArrayList\u003cOp\u003e();\n    opList.add(Op.delete(nodeRemovePath, 0));\n\n    for (ApplicationAttemptId attemptId : appState.attempts.keySet()) {\n      String attemptRemovePath \u003d getNodePath(rmAppRoot, attemptId.toString());\n      opList.add(Op.delete(attemptRemovePath, 0));\n    }\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Removing info for app: \" + appId + \" at: \" + nodeRemovePath\n          + \" and its attempts.\");\n    }\n    doMultiWithRetries(opList);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java"
    }
  }
}