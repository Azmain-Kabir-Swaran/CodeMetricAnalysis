{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HBaseTimelineSchemaCreator.java",
  "functionName": "createAllTables",
  "functionId": "createAllTables___hbaseConf-Configuration__skipExisting-boolean",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineSchemaCreator.java",
  "functionStartLine": 298,
  "functionEndLine": 376,
  "numCommitsSeen": 2,
  "timeTaken": 464,
  "changeHistory": [
    "713ded6b15dc0b5e4205a7812a62225377e0b32b"
  ],
  "changeHistoryShort": {
    "713ded6b15dc0b5e4205a7812a62225377e0b32b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "713ded6b15dc0b5e4205a7812a62225377e0b32b": {
      "type": "Yintroduced",
      "commitMessage": "YARN-9150 Making TimelineSchemaCreator support different backends for Timeline Schema Creation in ATSv2. Contributed by Sushil Ks\n",
      "commitDate": "15/01/19 9:28 PM",
      "commitName": "713ded6b15dc0b5e4205a7812a62225377e0b32b",
      "commitAuthor": "Vrushali C",
      "diff": "@@ -0,0 +1,79 @@\n+  public static void createAllTables(Configuration hbaseConf,\n+      boolean skipExisting) throws IOException {\n+\n+    Connection conn \u003d null;\n+    try {\n+      conn \u003d ConnectionFactory.createConnection(hbaseConf);\n+      Admin admin \u003d conn.getAdmin();\n+      if (admin \u003d\u003d null) {\n+        throw new IOException(\"Cannot create table since admin is null\");\n+      }\n+      try {\n+        new EntityTableRW().createTable(admin, hbaseConf);\n+      } catch (IOException e) {\n+        if (skipExisting) {\n+          LOG.warn(\"Skip and continue on: \" + e.getMessage());\n+        } else {\n+          throw e;\n+        }\n+      }\n+      try {\n+        new AppToFlowTableRW().createTable(admin, hbaseConf);\n+      } catch (IOException e) {\n+        if (skipExisting) {\n+          LOG.warn(\"Skip and continue on: \" + e.getMessage());\n+        } else {\n+          throw e;\n+        }\n+      }\n+      try {\n+        new ApplicationTableRW().createTable(admin, hbaseConf);\n+      } catch (IOException e) {\n+        if (skipExisting) {\n+          LOG.warn(\"Skip and continue on: \" + e.getMessage());\n+        } else {\n+          throw e;\n+        }\n+      }\n+      try {\n+        new FlowRunTableRW().createTable(admin, hbaseConf);\n+      } catch (IOException e) {\n+        if (skipExisting) {\n+          LOG.warn(\"Skip and continue on: \" + e.getMessage());\n+        } else {\n+          throw e;\n+        }\n+      }\n+      try {\n+        new FlowActivityTableRW().createTable(admin, hbaseConf);\n+      } catch (IOException e) {\n+        if (skipExisting) {\n+          LOG.warn(\"Skip and continue on: \" + e.getMessage());\n+        } else {\n+          throw e;\n+        }\n+      }\n+      try {\n+        new SubApplicationTableRW().createTable(admin, hbaseConf);\n+      } catch (IOException e) {\n+        if (skipExisting) {\n+          LOG.warn(\"Skip and continue on: \" + e.getMessage());\n+        } else {\n+          throw e;\n+        }\n+      }\n+      try {\n+        new DomainTableRW().createTable(admin, hbaseConf);\n+      } catch (IOException e) {\n+        if (skipExisting) {\n+          LOG.warn(\"Skip and continue on: \" + e.getMessage());\n+        } else {\n+          throw e;\n+        }\n+      }\n+    } finally {\n+      if (conn !\u003d null) {\n+        conn.close();\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static void createAllTables(Configuration hbaseConf,\n      boolean skipExisting) throws IOException {\n\n    Connection conn \u003d null;\n    try {\n      conn \u003d ConnectionFactory.createConnection(hbaseConf);\n      Admin admin \u003d conn.getAdmin();\n      if (admin \u003d\u003d null) {\n        throw new IOException(\"Cannot create table since admin is null\");\n      }\n      try {\n        new EntityTableRW().createTable(admin, hbaseConf);\n      } catch (IOException e) {\n        if (skipExisting) {\n          LOG.warn(\"Skip and continue on: \" + e.getMessage());\n        } else {\n          throw e;\n        }\n      }\n      try {\n        new AppToFlowTableRW().createTable(admin, hbaseConf);\n      } catch (IOException e) {\n        if (skipExisting) {\n          LOG.warn(\"Skip and continue on: \" + e.getMessage());\n        } else {\n          throw e;\n        }\n      }\n      try {\n        new ApplicationTableRW().createTable(admin, hbaseConf);\n      } catch (IOException e) {\n        if (skipExisting) {\n          LOG.warn(\"Skip and continue on: \" + e.getMessage());\n        } else {\n          throw e;\n        }\n      }\n      try {\n        new FlowRunTableRW().createTable(admin, hbaseConf);\n      } catch (IOException e) {\n        if (skipExisting) {\n          LOG.warn(\"Skip and continue on: \" + e.getMessage());\n        } else {\n          throw e;\n        }\n      }\n      try {\n        new FlowActivityTableRW().createTable(admin, hbaseConf);\n      } catch (IOException e) {\n        if (skipExisting) {\n          LOG.warn(\"Skip and continue on: \" + e.getMessage());\n        } else {\n          throw e;\n        }\n      }\n      try {\n        new SubApplicationTableRW().createTable(admin, hbaseConf);\n      } catch (IOException e) {\n        if (skipExisting) {\n          LOG.warn(\"Skip and continue on: \" + e.getMessage());\n        } else {\n          throw e;\n        }\n      }\n      try {\n        new DomainTableRW().createTable(admin, hbaseConf);\n      } catch (IOException e) {\n        if (skipExisting) {\n          LOG.warn(\"Skip and continue on: \" + e.getMessage());\n        } else {\n          throw e;\n        }\n      }\n    } finally {\n      if (conn !\u003d null) {\n        conn.close();\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineSchemaCreator.java"
    }
  }
}