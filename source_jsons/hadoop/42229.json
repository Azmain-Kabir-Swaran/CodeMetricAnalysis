{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ApplicationAttemptStateData.java",
  "functionName": "newInstance",
  "functionId": "newInstance___attemptId-ApplicationAttemptId__container-Container__attemptTokens-Credentials__startTime-long__finalState-RMAppAttemptState__finalTrackingUrl-String__diagnostics-String__amUnregisteredFinalStatus-FinalApplicationStatus__exitStatus-int__finishTime-long__resourceSecondsMap-Map__String,Long____preemptedResourceSecondsMap-Map__String,Long____totalAllocatedContainers-int",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/records/ApplicationAttemptStateData.java",
  "functionStartLine": 43,
  "functionEndLine": 80,
  "numCommitsSeen": 67,
  "timeTaken": 10639,
  "changeHistory": [
    "6ce189c62132706d9aaee5abf020ae4dc783ba26",
    "dae65f3bef8ffa34d02a37041f1dfdfeeee91845",
    "93eeb13164707d0e3556c2bf737bd2ee09a335c6",
    "5805a81efbc024024d8172489dfdc6cf77879416",
    "14e2639fd0d53f7e0b58f2f4744af44983d4e867",
    "83be3ad44484bf8a24cb90de4b9c26ab59d226a8",
    "d16470025aa0c51a04c530863a96108895d72ddf",
    "c94f2cec3a4d46718aa4cd144fb32e328406b9b3"
  ],
  "changeHistoryShort": {
    "6ce189c62132706d9aaee5abf020ae4dc783ba26": "Ymultichange(Yparameterchange,Ybodychange)",
    "dae65f3bef8ffa34d02a37041f1dfdfeeee91845": "Ymultichange(Yparameterchange,Ybodychange)",
    "93eeb13164707d0e3556c2bf737bd2ee09a335c6": "Ymultichange(Yparameterchange,Ybodychange)",
    "5805a81efbc024024d8172489dfdc6cf77879416": "Ymultichange(Yparameterchange,Ybodychange)",
    "14e2639fd0d53f7e0b58f2f4744af44983d4e867": "Ymultichange(Yparameterchange,Ybodychange)",
    "83be3ad44484bf8a24cb90de4b9c26ab59d226a8": "Ymultichange(Yparameterchange,Ybodychange)",
    "d16470025aa0c51a04c530863a96108895d72ddf": "Ymultichange(Yparameterchange,Ybodychange)",
    "c94f2cec3a4d46718aa4cd144fb32e328406b9b3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6ce189c62132706d9aaee5abf020ae4dc783ba26": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-10200. Add number of containers to RMAppManager summary\n",
      "commitDate": "25/03/20 10:41 AM",
      "commitName": "6ce189c62132706d9aaee5abf020ae4dc783ba26",
      "commitAuthor": "Jonathan Hung",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-10200. Add number of containers to RMAppManager summary\n",
          "commitDate": "25/03/20 10:41 AM",
          "commitName": "6ce189c62132706d9aaee5abf020ae4dc783ba26",
          "commitAuthor": "Jonathan Hung",
          "commitDateOld": "12/09/17 9:19 AM",
          "commitNameOld": "dae65f3bef8ffa34d02a37041f1dfdfeeee91845",
          "commitAuthorOld": "Sunil G",
          "daysBetweenCommits": 925.06,
          "commitsBetweenForRepo": 6943,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,36 +1,38 @@\n   public static ApplicationAttemptStateData newInstance(\n       ApplicationAttemptId attemptId, Container container,\n       Credentials attemptTokens, long startTime, RMAppAttemptState finalState,\n       String finalTrackingUrl, String diagnostics,\n       FinalApplicationStatus amUnregisteredFinalStatus, int exitStatus,\n       long finishTime, Map\u003cString, Long\u003e resourceSecondsMap,\n-      Map\u003cString, Long\u003e preemptedResourceSecondsMap) {\n+      Map\u003cString, Long\u003e preemptedResourceSecondsMap,\n+      int totalAllocatedContainers) {\n     ApplicationAttemptStateData attemptStateData \u003d\n         Records.newRecord(ApplicationAttemptStateData.class);\n     attemptStateData.setAttemptId(attemptId);\n     attemptStateData.setMasterContainer(container);\n     attemptStateData.setAppAttemptTokens(attemptTokens);\n     attemptStateData.setState(finalState);\n     attemptStateData.setFinalTrackingUrl(finalTrackingUrl);\n     attemptStateData.setDiagnostics(diagnostics \u003d\u003d null ? \"\" : diagnostics);\n     attemptStateData.setStartTime(startTime);\n     attemptStateData.setFinalApplicationStatus(amUnregisteredFinalStatus);\n     attemptStateData.setAMContainerExitStatus(exitStatus);\n     attemptStateData.setFinishTime(finishTime);\n     attemptStateData.setMemorySeconds(RMServerUtils\n         .getOrDefault(resourceSecondsMap,\n             ResourceInformation.MEMORY_MB.getName(), 0L));\n     attemptStateData.setVcoreSeconds(RMServerUtils\n         .getOrDefault(resourceSecondsMap, ResourceInformation.VCORES.getName(),\n             0L));\n     attemptStateData.setPreemptedMemorySeconds(RMServerUtils\n         .getOrDefault(preemptedResourceSecondsMap,\n             ResourceInformation.MEMORY_MB.getName(), 0L));\n     attemptStateData.setPreemptedVcoreSeconds(RMServerUtils\n         .getOrDefault(preemptedResourceSecondsMap,\n             ResourceInformation.VCORES.getName(), 0L));\n     attemptStateData.setResourceSecondsMap(resourceSecondsMap);\n     attemptStateData\n         .setPreemptedResourceSecondsMap(preemptedResourceSecondsMap);\n+    attemptStateData.setTotalAllocatedContainers(totalAllocatedContainers);\n     return attemptStateData;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static ApplicationAttemptStateData newInstance(\n      ApplicationAttemptId attemptId, Container container,\n      Credentials attemptTokens, long startTime, RMAppAttemptState finalState,\n      String finalTrackingUrl, String diagnostics,\n      FinalApplicationStatus amUnregisteredFinalStatus, int exitStatus,\n      long finishTime, Map\u003cString, Long\u003e resourceSecondsMap,\n      Map\u003cString, Long\u003e preemptedResourceSecondsMap,\n      int totalAllocatedContainers) {\n    ApplicationAttemptStateData attemptStateData \u003d\n        Records.newRecord(ApplicationAttemptStateData.class);\n    attemptStateData.setAttemptId(attemptId);\n    attemptStateData.setMasterContainer(container);\n    attemptStateData.setAppAttemptTokens(attemptTokens);\n    attemptStateData.setState(finalState);\n    attemptStateData.setFinalTrackingUrl(finalTrackingUrl);\n    attemptStateData.setDiagnostics(diagnostics \u003d\u003d null ? \"\" : diagnostics);\n    attemptStateData.setStartTime(startTime);\n    attemptStateData.setFinalApplicationStatus(amUnregisteredFinalStatus);\n    attemptStateData.setAMContainerExitStatus(exitStatus);\n    attemptStateData.setFinishTime(finishTime);\n    attemptStateData.setMemorySeconds(RMServerUtils\n        .getOrDefault(resourceSecondsMap,\n            ResourceInformation.MEMORY_MB.getName(), 0L));\n    attemptStateData.setVcoreSeconds(RMServerUtils\n        .getOrDefault(resourceSecondsMap, ResourceInformation.VCORES.getName(),\n            0L));\n    attemptStateData.setPreemptedMemorySeconds(RMServerUtils\n        .getOrDefault(preemptedResourceSecondsMap,\n            ResourceInformation.MEMORY_MB.getName(), 0L));\n    attemptStateData.setPreemptedVcoreSeconds(RMServerUtils\n        .getOrDefault(preemptedResourceSecondsMap,\n            ResourceInformation.VCORES.getName(), 0L));\n    attemptStateData.setResourceSecondsMap(resourceSecondsMap);\n    attemptStateData\n        .setPreemptedResourceSecondsMap(preemptedResourceSecondsMap);\n    attemptStateData.setTotalAllocatedContainers(totalAllocatedContainers);\n    return attemptStateData;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/records/ApplicationAttemptStateData.java",
          "extendedDetails": {
            "oldValue": "[attemptId-ApplicationAttemptId, container-Container, attemptTokens-Credentials, startTime-long, finalState-RMAppAttemptState, finalTrackingUrl-String, diagnostics-String, amUnregisteredFinalStatus-FinalApplicationStatus, exitStatus-int, finishTime-long, resourceSecondsMap-Map\u003cString,Long\u003e, preemptedResourceSecondsMap-Map\u003cString,Long\u003e]",
            "newValue": "[attemptId-ApplicationAttemptId, container-Container, attemptTokens-Credentials, startTime-long, finalState-RMAppAttemptState, finalTrackingUrl-String, diagnostics-String, amUnregisteredFinalStatus-FinalApplicationStatus, exitStatus-int, finishTime-long, resourceSecondsMap-Map\u003cString,Long\u003e, preemptedResourceSecondsMap-Map\u003cString,Long\u003e, totalAllocatedContainers-int]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-10200. Add number of containers to RMAppManager summary\n",
          "commitDate": "25/03/20 10:41 AM",
          "commitName": "6ce189c62132706d9aaee5abf020ae4dc783ba26",
          "commitAuthor": "Jonathan Hung",
          "commitDateOld": "12/09/17 9:19 AM",
          "commitNameOld": "dae65f3bef8ffa34d02a37041f1dfdfeeee91845",
          "commitAuthorOld": "Sunil G",
          "daysBetweenCommits": 925.06,
          "commitsBetweenForRepo": 6943,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,36 +1,38 @@\n   public static ApplicationAttemptStateData newInstance(\n       ApplicationAttemptId attemptId, Container container,\n       Credentials attemptTokens, long startTime, RMAppAttemptState finalState,\n       String finalTrackingUrl, String diagnostics,\n       FinalApplicationStatus amUnregisteredFinalStatus, int exitStatus,\n       long finishTime, Map\u003cString, Long\u003e resourceSecondsMap,\n-      Map\u003cString, Long\u003e preemptedResourceSecondsMap) {\n+      Map\u003cString, Long\u003e preemptedResourceSecondsMap,\n+      int totalAllocatedContainers) {\n     ApplicationAttemptStateData attemptStateData \u003d\n         Records.newRecord(ApplicationAttemptStateData.class);\n     attemptStateData.setAttemptId(attemptId);\n     attemptStateData.setMasterContainer(container);\n     attemptStateData.setAppAttemptTokens(attemptTokens);\n     attemptStateData.setState(finalState);\n     attemptStateData.setFinalTrackingUrl(finalTrackingUrl);\n     attemptStateData.setDiagnostics(diagnostics \u003d\u003d null ? \"\" : diagnostics);\n     attemptStateData.setStartTime(startTime);\n     attemptStateData.setFinalApplicationStatus(amUnregisteredFinalStatus);\n     attemptStateData.setAMContainerExitStatus(exitStatus);\n     attemptStateData.setFinishTime(finishTime);\n     attemptStateData.setMemorySeconds(RMServerUtils\n         .getOrDefault(resourceSecondsMap,\n             ResourceInformation.MEMORY_MB.getName(), 0L));\n     attemptStateData.setVcoreSeconds(RMServerUtils\n         .getOrDefault(resourceSecondsMap, ResourceInformation.VCORES.getName(),\n             0L));\n     attemptStateData.setPreemptedMemorySeconds(RMServerUtils\n         .getOrDefault(preemptedResourceSecondsMap,\n             ResourceInformation.MEMORY_MB.getName(), 0L));\n     attemptStateData.setPreemptedVcoreSeconds(RMServerUtils\n         .getOrDefault(preemptedResourceSecondsMap,\n             ResourceInformation.VCORES.getName(), 0L));\n     attemptStateData.setResourceSecondsMap(resourceSecondsMap);\n     attemptStateData\n         .setPreemptedResourceSecondsMap(preemptedResourceSecondsMap);\n+    attemptStateData.setTotalAllocatedContainers(totalAllocatedContainers);\n     return attemptStateData;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static ApplicationAttemptStateData newInstance(\n      ApplicationAttemptId attemptId, Container container,\n      Credentials attemptTokens, long startTime, RMAppAttemptState finalState,\n      String finalTrackingUrl, String diagnostics,\n      FinalApplicationStatus amUnregisteredFinalStatus, int exitStatus,\n      long finishTime, Map\u003cString, Long\u003e resourceSecondsMap,\n      Map\u003cString, Long\u003e preemptedResourceSecondsMap,\n      int totalAllocatedContainers) {\n    ApplicationAttemptStateData attemptStateData \u003d\n        Records.newRecord(ApplicationAttemptStateData.class);\n    attemptStateData.setAttemptId(attemptId);\n    attemptStateData.setMasterContainer(container);\n    attemptStateData.setAppAttemptTokens(attemptTokens);\n    attemptStateData.setState(finalState);\n    attemptStateData.setFinalTrackingUrl(finalTrackingUrl);\n    attemptStateData.setDiagnostics(diagnostics \u003d\u003d null ? \"\" : diagnostics);\n    attemptStateData.setStartTime(startTime);\n    attemptStateData.setFinalApplicationStatus(amUnregisteredFinalStatus);\n    attemptStateData.setAMContainerExitStatus(exitStatus);\n    attemptStateData.setFinishTime(finishTime);\n    attemptStateData.setMemorySeconds(RMServerUtils\n        .getOrDefault(resourceSecondsMap,\n            ResourceInformation.MEMORY_MB.getName(), 0L));\n    attemptStateData.setVcoreSeconds(RMServerUtils\n        .getOrDefault(resourceSecondsMap, ResourceInformation.VCORES.getName(),\n            0L));\n    attemptStateData.setPreemptedMemorySeconds(RMServerUtils\n        .getOrDefault(preemptedResourceSecondsMap,\n            ResourceInformation.MEMORY_MB.getName(), 0L));\n    attemptStateData.setPreemptedVcoreSeconds(RMServerUtils\n        .getOrDefault(preemptedResourceSecondsMap,\n            ResourceInformation.VCORES.getName(), 0L));\n    attemptStateData.setResourceSecondsMap(resourceSecondsMap);\n    attemptStateData\n        .setPreemptedResourceSecondsMap(preemptedResourceSecondsMap);\n    attemptStateData.setTotalAllocatedContainers(totalAllocatedContainers);\n    return attemptStateData;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/records/ApplicationAttemptStateData.java",
          "extendedDetails": {}
        }
      ]
    },
    "dae65f3bef8ffa34d02a37041f1dfdfeeee91845": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-6232. Update resource usage and preempted resource calculations to take into account all resource types. Contributed by Varun Vasudev.\n",
      "commitDate": "12/09/17 9:19 AM",
      "commitName": "dae65f3bef8ffa34d02a37041f1dfdfeeee91845",
      "commitAuthor": "Sunil G",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-6232. Update resource usage and preempted resource calculations to take into account all resource types. Contributed by Varun Vasudev.\n",
          "commitDate": "12/09/17 9:19 AM",
          "commitName": "dae65f3bef8ffa34d02a37041f1dfdfeeee91845",
          "commitAuthor": "Sunil G",
          "commitDateOld": "10/11/16 2:35 PM",
          "commitNameOld": "93eeb13164707d0e3556c2bf737bd2ee09a335c6",
          "commitAuthorOld": "Eric Payne",
          "daysBetweenCommits": 305.74,
          "commitsBetweenForRepo": 1780,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,36 @@\n   public static ApplicationAttemptStateData newInstance(\n       ApplicationAttemptId attemptId, Container container,\n       Credentials attemptTokens, long startTime, RMAppAttemptState finalState,\n       String finalTrackingUrl, String diagnostics,\n       FinalApplicationStatus amUnregisteredFinalStatus, int exitStatus,\n-      long finishTime, long memorySeconds, long vcoreSeconds,\n-      long preemptedMemorySeconds, long preemptedVcoreSeconds) {\n+      long finishTime, Map\u003cString, Long\u003e resourceSecondsMap,\n+      Map\u003cString, Long\u003e preemptedResourceSecondsMap) {\n     ApplicationAttemptStateData attemptStateData \u003d\n         Records.newRecord(ApplicationAttemptStateData.class);\n     attemptStateData.setAttemptId(attemptId);\n     attemptStateData.setMasterContainer(container);\n     attemptStateData.setAppAttemptTokens(attemptTokens);\n     attemptStateData.setState(finalState);\n     attemptStateData.setFinalTrackingUrl(finalTrackingUrl);\n     attemptStateData.setDiagnostics(diagnostics \u003d\u003d null ? \"\" : diagnostics);\n     attemptStateData.setStartTime(startTime);\n     attemptStateData.setFinalApplicationStatus(amUnregisteredFinalStatus);\n     attemptStateData.setAMContainerExitStatus(exitStatus);\n     attemptStateData.setFinishTime(finishTime);\n-    attemptStateData.setMemorySeconds(memorySeconds);\n-    attemptStateData.setVcoreSeconds(vcoreSeconds);\n-    attemptStateData.setPreemptedMemorySeconds(preemptedMemorySeconds);\n-    attemptStateData.setPreemptedVcoreSeconds(preemptedVcoreSeconds);\n+    attemptStateData.setMemorySeconds(RMServerUtils\n+        .getOrDefault(resourceSecondsMap,\n+            ResourceInformation.MEMORY_MB.getName(), 0L));\n+    attemptStateData.setVcoreSeconds(RMServerUtils\n+        .getOrDefault(resourceSecondsMap, ResourceInformation.VCORES.getName(),\n+            0L));\n+    attemptStateData.setPreemptedMemorySeconds(RMServerUtils\n+        .getOrDefault(preemptedResourceSecondsMap,\n+            ResourceInformation.MEMORY_MB.getName(), 0L));\n+    attemptStateData.setPreemptedVcoreSeconds(RMServerUtils\n+        .getOrDefault(preemptedResourceSecondsMap,\n+            ResourceInformation.VCORES.getName(), 0L));\n+    attemptStateData.setResourceSecondsMap(resourceSecondsMap);\n+    attemptStateData\n+        .setPreemptedResourceSecondsMap(preemptedResourceSecondsMap);\n     return attemptStateData;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static ApplicationAttemptStateData newInstance(\n      ApplicationAttemptId attemptId, Container container,\n      Credentials attemptTokens, long startTime, RMAppAttemptState finalState,\n      String finalTrackingUrl, String diagnostics,\n      FinalApplicationStatus amUnregisteredFinalStatus, int exitStatus,\n      long finishTime, Map\u003cString, Long\u003e resourceSecondsMap,\n      Map\u003cString, Long\u003e preemptedResourceSecondsMap) {\n    ApplicationAttemptStateData attemptStateData \u003d\n        Records.newRecord(ApplicationAttemptStateData.class);\n    attemptStateData.setAttemptId(attemptId);\n    attemptStateData.setMasterContainer(container);\n    attemptStateData.setAppAttemptTokens(attemptTokens);\n    attemptStateData.setState(finalState);\n    attemptStateData.setFinalTrackingUrl(finalTrackingUrl);\n    attemptStateData.setDiagnostics(diagnostics \u003d\u003d null ? \"\" : diagnostics);\n    attemptStateData.setStartTime(startTime);\n    attemptStateData.setFinalApplicationStatus(amUnregisteredFinalStatus);\n    attemptStateData.setAMContainerExitStatus(exitStatus);\n    attemptStateData.setFinishTime(finishTime);\n    attemptStateData.setMemorySeconds(RMServerUtils\n        .getOrDefault(resourceSecondsMap,\n            ResourceInformation.MEMORY_MB.getName(), 0L));\n    attemptStateData.setVcoreSeconds(RMServerUtils\n        .getOrDefault(resourceSecondsMap, ResourceInformation.VCORES.getName(),\n            0L));\n    attemptStateData.setPreemptedMemorySeconds(RMServerUtils\n        .getOrDefault(preemptedResourceSecondsMap,\n            ResourceInformation.MEMORY_MB.getName(), 0L));\n    attemptStateData.setPreemptedVcoreSeconds(RMServerUtils\n        .getOrDefault(preemptedResourceSecondsMap,\n            ResourceInformation.VCORES.getName(), 0L));\n    attemptStateData.setResourceSecondsMap(resourceSecondsMap);\n    attemptStateData\n        .setPreemptedResourceSecondsMap(preemptedResourceSecondsMap);\n    return attemptStateData;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/records/ApplicationAttemptStateData.java",
          "extendedDetails": {
            "oldValue": "[attemptId-ApplicationAttemptId, container-Container, attemptTokens-Credentials, startTime-long, finalState-RMAppAttemptState, finalTrackingUrl-String, diagnostics-String, amUnregisteredFinalStatus-FinalApplicationStatus, exitStatus-int, finishTime-long, memorySeconds-long, vcoreSeconds-long, preemptedMemorySeconds-long, preemptedVcoreSeconds-long]",
            "newValue": "[attemptId-ApplicationAttemptId, container-Container, attemptTokens-Credentials, startTime-long, finalState-RMAppAttemptState, finalTrackingUrl-String, diagnostics-String, amUnregisteredFinalStatus-FinalApplicationStatus, exitStatus-int, finishTime-long, resourceSecondsMap-Map\u003cString,Long\u003e, preemptedResourceSecondsMap-Map\u003cString,Long\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-6232. Update resource usage and preempted resource calculations to take into account all resource types. Contributed by Varun Vasudev.\n",
          "commitDate": "12/09/17 9:19 AM",
          "commitName": "dae65f3bef8ffa34d02a37041f1dfdfeeee91845",
          "commitAuthor": "Sunil G",
          "commitDateOld": "10/11/16 2:35 PM",
          "commitNameOld": "93eeb13164707d0e3556c2bf737bd2ee09a335c6",
          "commitAuthorOld": "Eric Payne",
          "daysBetweenCommits": 305.74,
          "commitsBetweenForRepo": 1780,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,36 @@\n   public static ApplicationAttemptStateData newInstance(\n       ApplicationAttemptId attemptId, Container container,\n       Credentials attemptTokens, long startTime, RMAppAttemptState finalState,\n       String finalTrackingUrl, String diagnostics,\n       FinalApplicationStatus amUnregisteredFinalStatus, int exitStatus,\n-      long finishTime, long memorySeconds, long vcoreSeconds,\n-      long preemptedMemorySeconds, long preemptedVcoreSeconds) {\n+      long finishTime, Map\u003cString, Long\u003e resourceSecondsMap,\n+      Map\u003cString, Long\u003e preemptedResourceSecondsMap) {\n     ApplicationAttemptStateData attemptStateData \u003d\n         Records.newRecord(ApplicationAttemptStateData.class);\n     attemptStateData.setAttemptId(attemptId);\n     attemptStateData.setMasterContainer(container);\n     attemptStateData.setAppAttemptTokens(attemptTokens);\n     attemptStateData.setState(finalState);\n     attemptStateData.setFinalTrackingUrl(finalTrackingUrl);\n     attemptStateData.setDiagnostics(diagnostics \u003d\u003d null ? \"\" : diagnostics);\n     attemptStateData.setStartTime(startTime);\n     attemptStateData.setFinalApplicationStatus(amUnregisteredFinalStatus);\n     attemptStateData.setAMContainerExitStatus(exitStatus);\n     attemptStateData.setFinishTime(finishTime);\n-    attemptStateData.setMemorySeconds(memorySeconds);\n-    attemptStateData.setVcoreSeconds(vcoreSeconds);\n-    attemptStateData.setPreemptedMemorySeconds(preemptedMemorySeconds);\n-    attemptStateData.setPreemptedVcoreSeconds(preemptedVcoreSeconds);\n+    attemptStateData.setMemorySeconds(RMServerUtils\n+        .getOrDefault(resourceSecondsMap,\n+            ResourceInformation.MEMORY_MB.getName(), 0L));\n+    attemptStateData.setVcoreSeconds(RMServerUtils\n+        .getOrDefault(resourceSecondsMap, ResourceInformation.VCORES.getName(),\n+            0L));\n+    attemptStateData.setPreemptedMemorySeconds(RMServerUtils\n+        .getOrDefault(preemptedResourceSecondsMap,\n+            ResourceInformation.MEMORY_MB.getName(), 0L));\n+    attemptStateData.setPreemptedVcoreSeconds(RMServerUtils\n+        .getOrDefault(preemptedResourceSecondsMap,\n+            ResourceInformation.VCORES.getName(), 0L));\n+    attemptStateData.setResourceSecondsMap(resourceSecondsMap);\n+    attemptStateData\n+        .setPreemptedResourceSecondsMap(preemptedResourceSecondsMap);\n     return attemptStateData;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static ApplicationAttemptStateData newInstance(\n      ApplicationAttemptId attemptId, Container container,\n      Credentials attemptTokens, long startTime, RMAppAttemptState finalState,\n      String finalTrackingUrl, String diagnostics,\n      FinalApplicationStatus amUnregisteredFinalStatus, int exitStatus,\n      long finishTime, Map\u003cString, Long\u003e resourceSecondsMap,\n      Map\u003cString, Long\u003e preemptedResourceSecondsMap) {\n    ApplicationAttemptStateData attemptStateData \u003d\n        Records.newRecord(ApplicationAttemptStateData.class);\n    attemptStateData.setAttemptId(attemptId);\n    attemptStateData.setMasterContainer(container);\n    attemptStateData.setAppAttemptTokens(attemptTokens);\n    attemptStateData.setState(finalState);\n    attemptStateData.setFinalTrackingUrl(finalTrackingUrl);\n    attemptStateData.setDiagnostics(diagnostics \u003d\u003d null ? \"\" : diagnostics);\n    attemptStateData.setStartTime(startTime);\n    attemptStateData.setFinalApplicationStatus(amUnregisteredFinalStatus);\n    attemptStateData.setAMContainerExitStatus(exitStatus);\n    attemptStateData.setFinishTime(finishTime);\n    attemptStateData.setMemorySeconds(RMServerUtils\n        .getOrDefault(resourceSecondsMap,\n            ResourceInformation.MEMORY_MB.getName(), 0L));\n    attemptStateData.setVcoreSeconds(RMServerUtils\n        .getOrDefault(resourceSecondsMap, ResourceInformation.VCORES.getName(),\n            0L));\n    attemptStateData.setPreemptedMemorySeconds(RMServerUtils\n        .getOrDefault(preemptedResourceSecondsMap,\n            ResourceInformation.MEMORY_MB.getName(), 0L));\n    attemptStateData.setPreemptedVcoreSeconds(RMServerUtils\n        .getOrDefault(preemptedResourceSecondsMap,\n            ResourceInformation.VCORES.getName(), 0L));\n    attemptStateData.setResourceSecondsMap(resourceSecondsMap);\n    attemptStateData\n        .setPreemptedResourceSecondsMap(preemptedResourceSecondsMap);\n    return attemptStateData;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/records/ApplicationAttemptStateData.java",
          "extendedDetails": {}
        }
      ]
    },
    "93eeb13164707d0e3556c2bf737bd2ee09a335c6": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-4218. Metric for resource*time that was preempted. Contributed by Chang Li.\n",
      "commitDate": "10/11/16 2:35 PM",
      "commitName": "93eeb13164707d0e3556c2bf737bd2ee09a335c6",
      "commitAuthor": "Eric Payne",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-4218. Metric for resource*time that was preempted. Contributed by Chang Li.\n",
          "commitDate": "10/11/16 2:35 PM",
          "commitName": "93eeb13164707d0e3556c2bf737bd2ee09a335c6",
          "commitAuthor": "Eric Payne",
          "commitDateOld": "25/11/14 12:48 PM",
          "commitNameOld": "5805a81efbc024024d8172489dfdc6cf77879416",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 716.07,
          "commitsBetweenForRepo": 5459,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,25 @@\n   public static ApplicationAttemptStateData newInstance(\n       ApplicationAttemptId attemptId, Container container,\n       Credentials attemptTokens, long startTime, RMAppAttemptState finalState,\n       String finalTrackingUrl, String diagnostics,\n       FinalApplicationStatus amUnregisteredFinalStatus, int exitStatus,\n-      long finishTime, long memorySeconds, long vcoreSeconds) {\n+      long finishTime, long memorySeconds, long vcoreSeconds,\n+      long preemptedMemorySeconds, long preemptedVcoreSeconds) {\n     ApplicationAttemptStateData attemptStateData \u003d\n         Records.newRecord(ApplicationAttemptStateData.class);\n     attemptStateData.setAttemptId(attemptId);\n     attemptStateData.setMasterContainer(container);\n     attemptStateData.setAppAttemptTokens(attemptTokens);\n     attemptStateData.setState(finalState);\n     attemptStateData.setFinalTrackingUrl(finalTrackingUrl);\n     attemptStateData.setDiagnostics(diagnostics \u003d\u003d null ? \"\" : diagnostics);\n     attemptStateData.setStartTime(startTime);\n     attemptStateData.setFinalApplicationStatus(amUnregisteredFinalStatus);\n     attemptStateData.setAMContainerExitStatus(exitStatus);\n     attemptStateData.setFinishTime(finishTime);\n     attemptStateData.setMemorySeconds(memorySeconds);\n     attemptStateData.setVcoreSeconds(vcoreSeconds);\n+    attemptStateData.setPreemptedMemorySeconds(preemptedMemorySeconds);\n+    attemptStateData.setPreemptedVcoreSeconds(preemptedVcoreSeconds);\n     return attemptStateData;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static ApplicationAttemptStateData newInstance(\n      ApplicationAttemptId attemptId, Container container,\n      Credentials attemptTokens, long startTime, RMAppAttemptState finalState,\n      String finalTrackingUrl, String diagnostics,\n      FinalApplicationStatus amUnregisteredFinalStatus, int exitStatus,\n      long finishTime, long memorySeconds, long vcoreSeconds,\n      long preemptedMemorySeconds, long preemptedVcoreSeconds) {\n    ApplicationAttemptStateData attemptStateData \u003d\n        Records.newRecord(ApplicationAttemptStateData.class);\n    attemptStateData.setAttemptId(attemptId);\n    attemptStateData.setMasterContainer(container);\n    attemptStateData.setAppAttemptTokens(attemptTokens);\n    attemptStateData.setState(finalState);\n    attemptStateData.setFinalTrackingUrl(finalTrackingUrl);\n    attemptStateData.setDiagnostics(diagnostics \u003d\u003d null ? \"\" : diagnostics);\n    attemptStateData.setStartTime(startTime);\n    attemptStateData.setFinalApplicationStatus(amUnregisteredFinalStatus);\n    attemptStateData.setAMContainerExitStatus(exitStatus);\n    attemptStateData.setFinishTime(finishTime);\n    attemptStateData.setMemorySeconds(memorySeconds);\n    attemptStateData.setVcoreSeconds(vcoreSeconds);\n    attemptStateData.setPreemptedMemorySeconds(preemptedMemorySeconds);\n    attemptStateData.setPreemptedVcoreSeconds(preemptedVcoreSeconds);\n    return attemptStateData;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/records/ApplicationAttemptStateData.java",
          "extendedDetails": {
            "oldValue": "[attemptId-ApplicationAttemptId, container-Container, attemptTokens-Credentials, startTime-long, finalState-RMAppAttemptState, finalTrackingUrl-String, diagnostics-String, amUnregisteredFinalStatus-FinalApplicationStatus, exitStatus-int, finishTime-long, memorySeconds-long, vcoreSeconds-long]",
            "newValue": "[attemptId-ApplicationAttemptId, container-Container, attemptTokens-Credentials, startTime-long, finalState-RMAppAttemptState, finalTrackingUrl-String, diagnostics-String, amUnregisteredFinalStatus-FinalApplicationStatus, exitStatus-int, finishTime-long, memorySeconds-long, vcoreSeconds-long, preemptedMemorySeconds-long, preemptedVcoreSeconds-long]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4218. Metric for resource*time that was preempted. Contributed by Chang Li.\n",
          "commitDate": "10/11/16 2:35 PM",
          "commitName": "93eeb13164707d0e3556c2bf737bd2ee09a335c6",
          "commitAuthor": "Eric Payne",
          "commitDateOld": "25/11/14 12:48 PM",
          "commitNameOld": "5805a81efbc024024d8172489dfdc6cf77879416",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 716.07,
          "commitsBetweenForRepo": 5459,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,25 @@\n   public static ApplicationAttemptStateData newInstance(\n       ApplicationAttemptId attemptId, Container container,\n       Credentials attemptTokens, long startTime, RMAppAttemptState finalState,\n       String finalTrackingUrl, String diagnostics,\n       FinalApplicationStatus amUnregisteredFinalStatus, int exitStatus,\n-      long finishTime, long memorySeconds, long vcoreSeconds) {\n+      long finishTime, long memorySeconds, long vcoreSeconds,\n+      long preemptedMemorySeconds, long preemptedVcoreSeconds) {\n     ApplicationAttemptStateData attemptStateData \u003d\n         Records.newRecord(ApplicationAttemptStateData.class);\n     attemptStateData.setAttemptId(attemptId);\n     attemptStateData.setMasterContainer(container);\n     attemptStateData.setAppAttemptTokens(attemptTokens);\n     attemptStateData.setState(finalState);\n     attemptStateData.setFinalTrackingUrl(finalTrackingUrl);\n     attemptStateData.setDiagnostics(diagnostics \u003d\u003d null ? \"\" : diagnostics);\n     attemptStateData.setStartTime(startTime);\n     attemptStateData.setFinalApplicationStatus(amUnregisteredFinalStatus);\n     attemptStateData.setAMContainerExitStatus(exitStatus);\n     attemptStateData.setFinishTime(finishTime);\n     attemptStateData.setMemorySeconds(memorySeconds);\n     attemptStateData.setVcoreSeconds(vcoreSeconds);\n+    attemptStateData.setPreemptedMemorySeconds(preemptedMemorySeconds);\n+    attemptStateData.setPreemptedVcoreSeconds(preemptedVcoreSeconds);\n     return attemptStateData;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static ApplicationAttemptStateData newInstance(\n      ApplicationAttemptId attemptId, Container container,\n      Credentials attemptTokens, long startTime, RMAppAttemptState finalState,\n      String finalTrackingUrl, String diagnostics,\n      FinalApplicationStatus amUnregisteredFinalStatus, int exitStatus,\n      long finishTime, long memorySeconds, long vcoreSeconds,\n      long preemptedMemorySeconds, long preemptedVcoreSeconds) {\n    ApplicationAttemptStateData attemptStateData \u003d\n        Records.newRecord(ApplicationAttemptStateData.class);\n    attemptStateData.setAttemptId(attemptId);\n    attemptStateData.setMasterContainer(container);\n    attemptStateData.setAppAttemptTokens(attemptTokens);\n    attemptStateData.setState(finalState);\n    attemptStateData.setFinalTrackingUrl(finalTrackingUrl);\n    attemptStateData.setDiagnostics(diagnostics \u003d\u003d null ? \"\" : diagnostics);\n    attemptStateData.setStartTime(startTime);\n    attemptStateData.setFinalApplicationStatus(amUnregisteredFinalStatus);\n    attemptStateData.setAMContainerExitStatus(exitStatus);\n    attemptStateData.setFinishTime(finishTime);\n    attemptStateData.setMemorySeconds(memorySeconds);\n    attemptStateData.setVcoreSeconds(vcoreSeconds);\n    attemptStateData.setPreemptedMemorySeconds(preemptedMemorySeconds);\n    attemptStateData.setPreemptedVcoreSeconds(preemptedVcoreSeconds);\n    return attemptStateData;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/records/ApplicationAttemptStateData.java",
          "extendedDetails": {}
        }
      ]
    },
    "5805a81efbc024024d8172489dfdc6cf77879416": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-2404. Removed ApplicationAttemptState and ApplicationState class in RMStateStore. Contributed by Tsuyoshi OZAWA\n",
      "commitDate": "25/11/14 12:48 PM",
      "commitName": "5805a81efbc024024d8172489dfdc6cf77879416",
      "commitAuthor": "Jian He",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-2404. Removed ApplicationAttemptState and ApplicationState class in RMStateStore. Contributed by Tsuyoshi OZAWA\n",
          "commitDate": "25/11/14 12:48 PM",
          "commitName": "5805a81efbc024024d8172489dfdc6cf77879416",
          "commitAuthor": "Jian He",
          "commitDateOld": "13/09/14 6:04 PM",
          "commitNameOld": "14e2639fd0d53f7e0b58f2f4744af44983d4e867",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 72.82,
          "commitsBetweenForRepo": 703,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,22 @@\n   public static ApplicationAttemptStateData newInstance(\n       ApplicationAttemptId attemptId, Container container,\n-      ByteBuffer attemptTokens, long startTime, RMAppAttemptState finalState,\n+      Credentials attemptTokens, long startTime, RMAppAttemptState finalState,\n       String finalTrackingUrl, String diagnostics,\n       FinalApplicationStatus amUnregisteredFinalStatus, int exitStatus,\n       long finishTime, long memorySeconds, long vcoreSeconds) {\n     ApplicationAttemptStateData attemptStateData \u003d\n         Records.newRecord(ApplicationAttemptStateData.class);\n     attemptStateData.setAttemptId(attemptId);\n     attemptStateData.setMasterContainer(container);\n     attemptStateData.setAppAttemptTokens(attemptTokens);\n     attemptStateData.setState(finalState);\n     attemptStateData.setFinalTrackingUrl(finalTrackingUrl);\n-    attemptStateData.setDiagnostics(diagnostics);\n+    attemptStateData.setDiagnostics(diagnostics \u003d\u003d null ? \"\" : diagnostics);\n     attemptStateData.setStartTime(startTime);\n     attemptStateData.setFinalApplicationStatus(amUnregisteredFinalStatus);\n     attemptStateData.setAMContainerExitStatus(exitStatus);\n     attemptStateData.setFinishTime(finishTime);\n     attemptStateData.setMemorySeconds(memorySeconds);\n     attemptStateData.setVcoreSeconds(vcoreSeconds);\n     return attemptStateData;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static ApplicationAttemptStateData newInstance(\n      ApplicationAttemptId attemptId, Container container,\n      Credentials attemptTokens, long startTime, RMAppAttemptState finalState,\n      String finalTrackingUrl, String diagnostics,\n      FinalApplicationStatus amUnregisteredFinalStatus, int exitStatus,\n      long finishTime, long memorySeconds, long vcoreSeconds) {\n    ApplicationAttemptStateData attemptStateData \u003d\n        Records.newRecord(ApplicationAttemptStateData.class);\n    attemptStateData.setAttemptId(attemptId);\n    attemptStateData.setMasterContainer(container);\n    attemptStateData.setAppAttemptTokens(attemptTokens);\n    attemptStateData.setState(finalState);\n    attemptStateData.setFinalTrackingUrl(finalTrackingUrl);\n    attemptStateData.setDiagnostics(diagnostics \u003d\u003d null ? \"\" : diagnostics);\n    attemptStateData.setStartTime(startTime);\n    attemptStateData.setFinalApplicationStatus(amUnregisteredFinalStatus);\n    attemptStateData.setAMContainerExitStatus(exitStatus);\n    attemptStateData.setFinishTime(finishTime);\n    attemptStateData.setMemorySeconds(memorySeconds);\n    attemptStateData.setVcoreSeconds(vcoreSeconds);\n    return attemptStateData;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/records/ApplicationAttemptStateData.java",
          "extendedDetails": {
            "oldValue": "[attemptId-ApplicationAttemptId, container-Container, attemptTokens-ByteBuffer, startTime-long, finalState-RMAppAttemptState, finalTrackingUrl-String, diagnostics-String, amUnregisteredFinalStatus-FinalApplicationStatus, exitStatus-int, finishTime-long, memorySeconds-long, vcoreSeconds-long]",
            "newValue": "[attemptId-ApplicationAttemptId, container-Container, attemptTokens-Credentials, startTime-long, finalState-RMAppAttemptState, finalTrackingUrl-String, diagnostics-String, amUnregisteredFinalStatus-FinalApplicationStatus, exitStatus-int, finishTime-long, memorySeconds-long, vcoreSeconds-long]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-2404. Removed ApplicationAttemptState and ApplicationState class in RMStateStore. Contributed by Tsuyoshi OZAWA\n",
          "commitDate": "25/11/14 12:48 PM",
          "commitName": "5805a81efbc024024d8172489dfdc6cf77879416",
          "commitAuthor": "Jian He",
          "commitDateOld": "13/09/14 6:04 PM",
          "commitNameOld": "14e2639fd0d53f7e0b58f2f4744af44983d4e867",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 72.82,
          "commitsBetweenForRepo": 703,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,22 @@\n   public static ApplicationAttemptStateData newInstance(\n       ApplicationAttemptId attemptId, Container container,\n-      ByteBuffer attemptTokens, long startTime, RMAppAttemptState finalState,\n+      Credentials attemptTokens, long startTime, RMAppAttemptState finalState,\n       String finalTrackingUrl, String diagnostics,\n       FinalApplicationStatus amUnregisteredFinalStatus, int exitStatus,\n       long finishTime, long memorySeconds, long vcoreSeconds) {\n     ApplicationAttemptStateData attemptStateData \u003d\n         Records.newRecord(ApplicationAttemptStateData.class);\n     attemptStateData.setAttemptId(attemptId);\n     attemptStateData.setMasterContainer(container);\n     attemptStateData.setAppAttemptTokens(attemptTokens);\n     attemptStateData.setState(finalState);\n     attemptStateData.setFinalTrackingUrl(finalTrackingUrl);\n-    attemptStateData.setDiagnostics(diagnostics);\n+    attemptStateData.setDiagnostics(diagnostics \u003d\u003d null ? \"\" : diagnostics);\n     attemptStateData.setStartTime(startTime);\n     attemptStateData.setFinalApplicationStatus(amUnregisteredFinalStatus);\n     attemptStateData.setAMContainerExitStatus(exitStatus);\n     attemptStateData.setFinishTime(finishTime);\n     attemptStateData.setMemorySeconds(memorySeconds);\n     attemptStateData.setVcoreSeconds(vcoreSeconds);\n     return attemptStateData;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static ApplicationAttemptStateData newInstance(\n      ApplicationAttemptId attemptId, Container container,\n      Credentials attemptTokens, long startTime, RMAppAttemptState finalState,\n      String finalTrackingUrl, String diagnostics,\n      FinalApplicationStatus amUnregisteredFinalStatus, int exitStatus,\n      long finishTime, long memorySeconds, long vcoreSeconds) {\n    ApplicationAttemptStateData attemptStateData \u003d\n        Records.newRecord(ApplicationAttemptStateData.class);\n    attemptStateData.setAttemptId(attemptId);\n    attemptStateData.setMasterContainer(container);\n    attemptStateData.setAppAttemptTokens(attemptTokens);\n    attemptStateData.setState(finalState);\n    attemptStateData.setFinalTrackingUrl(finalTrackingUrl);\n    attemptStateData.setDiagnostics(diagnostics \u003d\u003d null ? \"\" : diagnostics);\n    attemptStateData.setStartTime(startTime);\n    attemptStateData.setFinalApplicationStatus(amUnregisteredFinalStatus);\n    attemptStateData.setAMContainerExitStatus(exitStatus);\n    attemptStateData.setFinishTime(finishTime);\n    attemptStateData.setMemorySeconds(memorySeconds);\n    attemptStateData.setVcoreSeconds(vcoreSeconds);\n    return attemptStateData;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/records/ApplicationAttemptStateData.java",
          "extendedDetails": {}
        }
      ]
    },
    "14e2639fd0d53f7e0b58f2f4744af44983d4e867": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-611. Added an API to let apps specify an interval beyond which AM failures should be ignored towards counting max-attempts. Contributed by Xuan Gong.\n",
      "commitDate": "13/09/14 6:04 PM",
      "commitName": "14e2639fd0d53f7e0b58f2f4744af44983d4e867",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-611. Added an API to let apps specify an interval beyond which AM failures should be ignored towards counting max-attempts. Contributed by Xuan Gong.\n",
          "commitDate": "13/09/14 6:04 PM",
          "commitName": "14e2639fd0d53f7e0b58f2f4744af44983d4e867",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "10/09/14 6:20 PM",
          "commitNameOld": "83be3ad44484bf8a24cb90de4b9c26ab59d226a8",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 2.99,
          "commitsBetweenForRepo": 27,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,22 @@\n   public static ApplicationAttemptStateData newInstance(\n       ApplicationAttemptId attemptId, Container container,\n       ByteBuffer attemptTokens, long startTime, RMAppAttemptState finalState,\n       String finalTrackingUrl, String diagnostics,\n       FinalApplicationStatus amUnregisteredFinalStatus, int exitStatus,\n-      long memorySeconds, long vcoreSeconds) {\n+      long finishTime, long memorySeconds, long vcoreSeconds) {\n     ApplicationAttemptStateData attemptStateData \u003d\n         Records.newRecord(ApplicationAttemptStateData.class);\n     attemptStateData.setAttemptId(attemptId);\n     attemptStateData.setMasterContainer(container);\n     attemptStateData.setAppAttemptTokens(attemptTokens);\n     attemptStateData.setState(finalState);\n     attemptStateData.setFinalTrackingUrl(finalTrackingUrl);\n     attemptStateData.setDiagnostics(diagnostics);\n     attemptStateData.setStartTime(startTime);\n     attemptStateData.setFinalApplicationStatus(amUnregisteredFinalStatus);\n     attemptStateData.setAMContainerExitStatus(exitStatus);\n+    attemptStateData.setFinishTime(finishTime);\n     attemptStateData.setMemorySeconds(memorySeconds);\n     attemptStateData.setVcoreSeconds(vcoreSeconds);\n     return attemptStateData;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static ApplicationAttemptStateData newInstance(\n      ApplicationAttemptId attemptId, Container container,\n      ByteBuffer attemptTokens, long startTime, RMAppAttemptState finalState,\n      String finalTrackingUrl, String diagnostics,\n      FinalApplicationStatus amUnregisteredFinalStatus, int exitStatus,\n      long finishTime, long memorySeconds, long vcoreSeconds) {\n    ApplicationAttemptStateData attemptStateData \u003d\n        Records.newRecord(ApplicationAttemptStateData.class);\n    attemptStateData.setAttemptId(attemptId);\n    attemptStateData.setMasterContainer(container);\n    attemptStateData.setAppAttemptTokens(attemptTokens);\n    attemptStateData.setState(finalState);\n    attemptStateData.setFinalTrackingUrl(finalTrackingUrl);\n    attemptStateData.setDiagnostics(diagnostics);\n    attemptStateData.setStartTime(startTime);\n    attemptStateData.setFinalApplicationStatus(amUnregisteredFinalStatus);\n    attemptStateData.setAMContainerExitStatus(exitStatus);\n    attemptStateData.setFinishTime(finishTime);\n    attemptStateData.setMemorySeconds(memorySeconds);\n    attemptStateData.setVcoreSeconds(vcoreSeconds);\n    return attemptStateData;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/records/ApplicationAttemptStateData.java",
          "extendedDetails": {
            "oldValue": "[attemptId-ApplicationAttemptId, container-Container, attemptTokens-ByteBuffer, startTime-long, finalState-RMAppAttemptState, finalTrackingUrl-String, diagnostics-String, amUnregisteredFinalStatus-FinalApplicationStatus, exitStatus-int, memorySeconds-long, vcoreSeconds-long]",
            "newValue": "[attemptId-ApplicationAttemptId, container-Container, attemptTokens-ByteBuffer, startTime-long, finalState-RMAppAttemptState, finalTrackingUrl-String, diagnostics-String, amUnregisteredFinalStatus-FinalApplicationStatus, exitStatus-int, finishTime-long, memorySeconds-long, vcoreSeconds-long]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-611. Added an API to let apps specify an interval beyond which AM failures should be ignored towards counting max-attempts. Contributed by Xuan Gong.\n",
          "commitDate": "13/09/14 6:04 PM",
          "commitName": "14e2639fd0d53f7e0b58f2f4744af44983d4e867",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "10/09/14 6:20 PM",
          "commitNameOld": "83be3ad44484bf8a24cb90de4b9c26ab59d226a8",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 2.99,
          "commitsBetweenForRepo": 27,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,22 @@\n   public static ApplicationAttemptStateData newInstance(\n       ApplicationAttemptId attemptId, Container container,\n       ByteBuffer attemptTokens, long startTime, RMAppAttemptState finalState,\n       String finalTrackingUrl, String diagnostics,\n       FinalApplicationStatus amUnregisteredFinalStatus, int exitStatus,\n-      long memorySeconds, long vcoreSeconds) {\n+      long finishTime, long memorySeconds, long vcoreSeconds) {\n     ApplicationAttemptStateData attemptStateData \u003d\n         Records.newRecord(ApplicationAttemptStateData.class);\n     attemptStateData.setAttemptId(attemptId);\n     attemptStateData.setMasterContainer(container);\n     attemptStateData.setAppAttemptTokens(attemptTokens);\n     attemptStateData.setState(finalState);\n     attemptStateData.setFinalTrackingUrl(finalTrackingUrl);\n     attemptStateData.setDiagnostics(diagnostics);\n     attemptStateData.setStartTime(startTime);\n     attemptStateData.setFinalApplicationStatus(amUnregisteredFinalStatus);\n     attemptStateData.setAMContainerExitStatus(exitStatus);\n+    attemptStateData.setFinishTime(finishTime);\n     attemptStateData.setMemorySeconds(memorySeconds);\n     attemptStateData.setVcoreSeconds(vcoreSeconds);\n     return attemptStateData;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static ApplicationAttemptStateData newInstance(\n      ApplicationAttemptId attemptId, Container container,\n      ByteBuffer attemptTokens, long startTime, RMAppAttemptState finalState,\n      String finalTrackingUrl, String diagnostics,\n      FinalApplicationStatus amUnregisteredFinalStatus, int exitStatus,\n      long finishTime, long memorySeconds, long vcoreSeconds) {\n    ApplicationAttemptStateData attemptStateData \u003d\n        Records.newRecord(ApplicationAttemptStateData.class);\n    attemptStateData.setAttemptId(attemptId);\n    attemptStateData.setMasterContainer(container);\n    attemptStateData.setAppAttemptTokens(attemptTokens);\n    attemptStateData.setState(finalState);\n    attemptStateData.setFinalTrackingUrl(finalTrackingUrl);\n    attemptStateData.setDiagnostics(diagnostics);\n    attemptStateData.setStartTime(startTime);\n    attemptStateData.setFinalApplicationStatus(amUnregisteredFinalStatus);\n    attemptStateData.setAMContainerExitStatus(exitStatus);\n    attemptStateData.setFinishTime(finishTime);\n    attemptStateData.setMemorySeconds(memorySeconds);\n    attemptStateData.setVcoreSeconds(vcoreSeconds);\n    return attemptStateData;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/records/ApplicationAttemptStateData.java",
          "extendedDetails": {}
        }
      ]
    },
    "83be3ad44484bf8a24cb90de4b9c26ab59d226a8": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-415. Capture aggregate memory allocation at the app-level for chargeback. Contributed by Eric Payne \u0026 Andrey Klochkov\n",
      "commitDate": "10/09/14 6:20 PM",
      "commitName": "83be3ad44484bf8a24cb90de4b9c26ab59d226a8",
      "commitAuthor": "Jian He",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-415. Capture aggregate memory allocation at the app-level for chargeback. Contributed by Eric Payne \u0026 Andrey Klochkov\n",
          "commitDate": "10/09/14 6:20 PM",
          "commitName": "83be3ad44484bf8a24cb90de4b9c26ab59d226a8",
          "commitAuthor": "Jian He",
          "commitDateOld": "28/08/14 9:47 PM",
          "commitNameOld": "7b3e27ab7393214e35a575bc9093100e94dd8c89",
          "commitAuthorOld": "Jian",
          "daysBetweenCommits": 12.86,
          "commitsBetweenForRepo": 101,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,21 @@\n   public static ApplicationAttemptStateData newInstance(\n       ApplicationAttemptId attemptId, Container container,\n       ByteBuffer attemptTokens, long startTime, RMAppAttemptState finalState,\n       String finalTrackingUrl, String diagnostics,\n-      FinalApplicationStatus amUnregisteredFinalStatus, int exitStatus) {\n+      FinalApplicationStatus amUnregisteredFinalStatus, int exitStatus,\n+      long memorySeconds, long vcoreSeconds) {\n     ApplicationAttemptStateData attemptStateData \u003d\n         Records.newRecord(ApplicationAttemptStateData.class);\n     attemptStateData.setAttemptId(attemptId);\n     attemptStateData.setMasterContainer(container);\n     attemptStateData.setAppAttemptTokens(attemptTokens);\n     attemptStateData.setState(finalState);\n     attemptStateData.setFinalTrackingUrl(finalTrackingUrl);\n     attemptStateData.setDiagnostics(diagnostics);\n     attemptStateData.setStartTime(startTime);\n     attemptStateData.setFinalApplicationStatus(amUnregisteredFinalStatus);\n     attemptStateData.setAMContainerExitStatus(exitStatus);\n+    attemptStateData.setMemorySeconds(memorySeconds);\n+    attemptStateData.setVcoreSeconds(vcoreSeconds);\n     return attemptStateData;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static ApplicationAttemptStateData newInstance(\n      ApplicationAttemptId attemptId, Container container,\n      ByteBuffer attemptTokens, long startTime, RMAppAttemptState finalState,\n      String finalTrackingUrl, String diagnostics,\n      FinalApplicationStatus amUnregisteredFinalStatus, int exitStatus,\n      long memorySeconds, long vcoreSeconds) {\n    ApplicationAttemptStateData attemptStateData \u003d\n        Records.newRecord(ApplicationAttemptStateData.class);\n    attemptStateData.setAttemptId(attemptId);\n    attemptStateData.setMasterContainer(container);\n    attemptStateData.setAppAttemptTokens(attemptTokens);\n    attemptStateData.setState(finalState);\n    attemptStateData.setFinalTrackingUrl(finalTrackingUrl);\n    attemptStateData.setDiagnostics(diagnostics);\n    attemptStateData.setStartTime(startTime);\n    attemptStateData.setFinalApplicationStatus(amUnregisteredFinalStatus);\n    attemptStateData.setAMContainerExitStatus(exitStatus);\n    attemptStateData.setMemorySeconds(memorySeconds);\n    attemptStateData.setVcoreSeconds(vcoreSeconds);\n    return attemptStateData;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/records/ApplicationAttemptStateData.java",
          "extendedDetails": {
            "oldValue": "[attemptId-ApplicationAttemptId, container-Container, attemptTokens-ByteBuffer, startTime-long, finalState-RMAppAttemptState, finalTrackingUrl-String, diagnostics-String, amUnregisteredFinalStatus-FinalApplicationStatus, exitStatus-int]",
            "newValue": "[attemptId-ApplicationAttemptId, container-Container, attemptTokens-ByteBuffer, startTime-long, finalState-RMAppAttemptState, finalTrackingUrl-String, diagnostics-String, amUnregisteredFinalStatus-FinalApplicationStatus, exitStatus-int, memorySeconds-long, vcoreSeconds-long]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-415. Capture aggregate memory allocation at the app-level for chargeback. Contributed by Eric Payne \u0026 Andrey Klochkov\n",
          "commitDate": "10/09/14 6:20 PM",
          "commitName": "83be3ad44484bf8a24cb90de4b9c26ab59d226a8",
          "commitAuthor": "Jian He",
          "commitDateOld": "28/08/14 9:47 PM",
          "commitNameOld": "7b3e27ab7393214e35a575bc9093100e94dd8c89",
          "commitAuthorOld": "Jian",
          "daysBetweenCommits": 12.86,
          "commitsBetweenForRepo": 101,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,21 @@\n   public static ApplicationAttemptStateData newInstance(\n       ApplicationAttemptId attemptId, Container container,\n       ByteBuffer attemptTokens, long startTime, RMAppAttemptState finalState,\n       String finalTrackingUrl, String diagnostics,\n-      FinalApplicationStatus amUnregisteredFinalStatus, int exitStatus) {\n+      FinalApplicationStatus amUnregisteredFinalStatus, int exitStatus,\n+      long memorySeconds, long vcoreSeconds) {\n     ApplicationAttemptStateData attemptStateData \u003d\n         Records.newRecord(ApplicationAttemptStateData.class);\n     attemptStateData.setAttemptId(attemptId);\n     attemptStateData.setMasterContainer(container);\n     attemptStateData.setAppAttemptTokens(attemptTokens);\n     attemptStateData.setState(finalState);\n     attemptStateData.setFinalTrackingUrl(finalTrackingUrl);\n     attemptStateData.setDiagnostics(diagnostics);\n     attemptStateData.setStartTime(startTime);\n     attemptStateData.setFinalApplicationStatus(amUnregisteredFinalStatus);\n     attemptStateData.setAMContainerExitStatus(exitStatus);\n+    attemptStateData.setMemorySeconds(memorySeconds);\n+    attemptStateData.setVcoreSeconds(vcoreSeconds);\n     return attemptStateData;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static ApplicationAttemptStateData newInstance(\n      ApplicationAttemptId attemptId, Container container,\n      ByteBuffer attemptTokens, long startTime, RMAppAttemptState finalState,\n      String finalTrackingUrl, String diagnostics,\n      FinalApplicationStatus amUnregisteredFinalStatus, int exitStatus,\n      long memorySeconds, long vcoreSeconds) {\n    ApplicationAttemptStateData attemptStateData \u003d\n        Records.newRecord(ApplicationAttemptStateData.class);\n    attemptStateData.setAttemptId(attemptId);\n    attemptStateData.setMasterContainer(container);\n    attemptStateData.setAppAttemptTokens(attemptTokens);\n    attemptStateData.setState(finalState);\n    attemptStateData.setFinalTrackingUrl(finalTrackingUrl);\n    attemptStateData.setDiagnostics(diagnostics);\n    attemptStateData.setStartTime(startTime);\n    attemptStateData.setFinalApplicationStatus(amUnregisteredFinalStatus);\n    attemptStateData.setAMContainerExitStatus(exitStatus);\n    attemptStateData.setMemorySeconds(memorySeconds);\n    attemptStateData.setVcoreSeconds(vcoreSeconds);\n    return attemptStateData;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/records/ApplicationAttemptStateData.java",
          "extendedDetails": {}
        }
      ]
    },
    "d16470025aa0c51a04c530863a96108895d72ddf": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-2074. Changed ResourceManager to not count AM preemptions towards app failures. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1605106 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/06/14 8:15 AM",
      "commitName": "d16470025aa0c51a04c530863a96108895d72ddf",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-2074. Changed ResourceManager to not count AM preemptions towards app failures. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1605106 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "24/06/14 8:15 AM",
          "commitName": "d16470025aa0c51a04c530863a96108895d72ddf",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "09/06/14 12:44 PM",
          "commitNameOld": "c94f2cec3a4d46718aa4cd144fb32e328406b9b3",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 14.81,
          "commitsBetweenForRepo": 106,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,18 @@\n   public static ApplicationAttemptStateData newInstance(\n       ApplicationAttemptId attemptId, Container container,\n       ByteBuffer attemptTokens, long startTime, RMAppAttemptState finalState,\n       String finalTrackingUrl, String diagnostics,\n-      FinalApplicationStatus amUnregisteredFinalStatus) {\n+      FinalApplicationStatus amUnregisteredFinalStatus, int exitStatus) {\n     ApplicationAttemptStateData attemptStateData \u003d\n         Records.newRecord(ApplicationAttemptStateData.class);\n     attemptStateData.setAttemptId(attemptId);\n     attemptStateData.setMasterContainer(container);\n     attemptStateData.setAppAttemptTokens(attemptTokens);\n     attemptStateData.setState(finalState);\n     attemptStateData.setFinalTrackingUrl(finalTrackingUrl);\n     attemptStateData.setDiagnostics(diagnostics);\n     attemptStateData.setStartTime(startTime);\n     attemptStateData.setFinalApplicationStatus(amUnregisteredFinalStatus);\n+    attemptStateData.setAMContainerExitStatus(exitStatus);\n     return attemptStateData;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static ApplicationAttemptStateData newInstance(\n      ApplicationAttemptId attemptId, Container container,\n      ByteBuffer attemptTokens, long startTime, RMAppAttemptState finalState,\n      String finalTrackingUrl, String diagnostics,\n      FinalApplicationStatus amUnregisteredFinalStatus, int exitStatus) {\n    ApplicationAttemptStateData attemptStateData \u003d\n        Records.newRecord(ApplicationAttemptStateData.class);\n    attemptStateData.setAttemptId(attemptId);\n    attemptStateData.setMasterContainer(container);\n    attemptStateData.setAppAttemptTokens(attemptTokens);\n    attemptStateData.setState(finalState);\n    attemptStateData.setFinalTrackingUrl(finalTrackingUrl);\n    attemptStateData.setDiagnostics(diagnostics);\n    attemptStateData.setStartTime(startTime);\n    attemptStateData.setFinalApplicationStatus(amUnregisteredFinalStatus);\n    attemptStateData.setAMContainerExitStatus(exitStatus);\n    return attemptStateData;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/records/ApplicationAttemptStateData.java",
          "extendedDetails": {
            "oldValue": "[attemptId-ApplicationAttemptId, container-Container, attemptTokens-ByteBuffer, startTime-long, finalState-RMAppAttemptState, finalTrackingUrl-String, diagnostics-String, amUnregisteredFinalStatus-FinalApplicationStatus]",
            "newValue": "[attemptId-ApplicationAttemptId, container-Container, attemptTokens-ByteBuffer, startTime-long, finalState-RMAppAttemptState, finalTrackingUrl-String, diagnostics-String, amUnregisteredFinalStatus-FinalApplicationStatus, exitStatus-int]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-2074. Changed ResourceManager to not count AM preemptions towards app failures. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1605106 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "24/06/14 8:15 AM",
          "commitName": "d16470025aa0c51a04c530863a96108895d72ddf",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "09/06/14 12:44 PM",
          "commitNameOld": "c94f2cec3a4d46718aa4cd144fb32e328406b9b3",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 14.81,
          "commitsBetweenForRepo": 106,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,18 @@\n   public static ApplicationAttemptStateData newInstance(\n       ApplicationAttemptId attemptId, Container container,\n       ByteBuffer attemptTokens, long startTime, RMAppAttemptState finalState,\n       String finalTrackingUrl, String diagnostics,\n-      FinalApplicationStatus amUnregisteredFinalStatus) {\n+      FinalApplicationStatus amUnregisteredFinalStatus, int exitStatus) {\n     ApplicationAttemptStateData attemptStateData \u003d\n         Records.newRecord(ApplicationAttemptStateData.class);\n     attemptStateData.setAttemptId(attemptId);\n     attemptStateData.setMasterContainer(container);\n     attemptStateData.setAppAttemptTokens(attemptTokens);\n     attemptStateData.setState(finalState);\n     attemptStateData.setFinalTrackingUrl(finalTrackingUrl);\n     attemptStateData.setDiagnostics(diagnostics);\n     attemptStateData.setStartTime(startTime);\n     attemptStateData.setFinalApplicationStatus(amUnregisteredFinalStatus);\n+    attemptStateData.setAMContainerExitStatus(exitStatus);\n     return attemptStateData;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static ApplicationAttemptStateData newInstance(\n      ApplicationAttemptId attemptId, Container container,\n      ByteBuffer attemptTokens, long startTime, RMAppAttemptState finalState,\n      String finalTrackingUrl, String diagnostics,\n      FinalApplicationStatus amUnregisteredFinalStatus, int exitStatus) {\n    ApplicationAttemptStateData attemptStateData \u003d\n        Records.newRecord(ApplicationAttemptStateData.class);\n    attemptStateData.setAttemptId(attemptId);\n    attemptStateData.setMasterContainer(container);\n    attemptStateData.setAppAttemptTokens(attemptTokens);\n    attemptStateData.setState(finalState);\n    attemptStateData.setFinalTrackingUrl(finalTrackingUrl);\n    attemptStateData.setDiagnostics(diagnostics);\n    attemptStateData.setStartTime(startTime);\n    attemptStateData.setFinalApplicationStatus(amUnregisteredFinalStatus);\n    attemptStateData.setAMContainerExitStatus(exitStatus);\n    return attemptStateData;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/records/ApplicationAttemptStateData.java",
          "extendedDetails": {}
        }
      ]
    },
    "c94f2cec3a4d46718aa4cd144fb32e328406b9b3": {
      "type": "Yintroduced",
      "commitMessage": "Augmented RMStateStore with state machine. Contributed by Binglin Chang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1601491 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/06/14 12:44 PM",
      "commitName": "c94f2cec3a4d46718aa4cd144fb32e328406b9b3",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,17 @@\n+  public static ApplicationAttemptStateData newInstance(\n+      ApplicationAttemptId attemptId, Container container,\n+      ByteBuffer attemptTokens, long startTime, RMAppAttemptState finalState,\n+      String finalTrackingUrl, String diagnostics,\n+      FinalApplicationStatus amUnregisteredFinalStatus) {\n+    ApplicationAttemptStateData attemptStateData \u003d\n+        Records.newRecord(ApplicationAttemptStateData.class);\n+    attemptStateData.setAttemptId(attemptId);\n+    attemptStateData.setMasterContainer(container);\n+    attemptStateData.setAppAttemptTokens(attemptTokens);\n+    attemptStateData.setState(finalState);\n+    attemptStateData.setFinalTrackingUrl(finalTrackingUrl);\n+    attemptStateData.setDiagnostics(diagnostics);\n+    attemptStateData.setStartTime(startTime);\n+    attemptStateData.setFinalApplicationStatus(amUnregisteredFinalStatus);\n+    return attemptStateData;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static ApplicationAttemptStateData newInstance(\n      ApplicationAttemptId attemptId, Container container,\n      ByteBuffer attemptTokens, long startTime, RMAppAttemptState finalState,\n      String finalTrackingUrl, String diagnostics,\n      FinalApplicationStatus amUnregisteredFinalStatus) {\n    ApplicationAttemptStateData attemptStateData \u003d\n        Records.newRecord(ApplicationAttemptStateData.class);\n    attemptStateData.setAttemptId(attemptId);\n    attemptStateData.setMasterContainer(container);\n    attemptStateData.setAppAttemptTokens(attemptTokens);\n    attemptStateData.setState(finalState);\n    attemptStateData.setFinalTrackingUrl(finalTrackingUrl);\n    attemptStateData.setDiagnostics(diagnostics);\n    attemptStateData.setStartTime(startTime);\n    attemptStateData.setFinalApplicationStatus(amUnregisteredFinalStatus);\n    return attemptStateData;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/records/ApplicationAttemptStateData.java"
    }
  }
}