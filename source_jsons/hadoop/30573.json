{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "KeyValueBasedTimelineStore.java",
  "functionName": "getDomain",
  "functionId": "getDomain___domainId-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/KeyValueBasedTimelineStore.java",
  "functionStartLine": 261,
  "functionEndLine": 280,
  "numCommitsSeen": 12,
  "timeTaken": 1958,
  "changeHistory": [
    "9fab22b36673e7f1a0bb629d2c07966ac2482e99",
    "d78b452a4f413c6931a494c33df0666ce9b44973"
  ],
  "changeHistoryShort": {
    "9fab22b36673e7f1a0bb629d2c07966ac2482e99": "Ymultichange(Ymovefromfile,Ybodychange)",
    "d78b452a4f413c6931a494c33df0666ce9b44973": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9fab22b36673e7f1a0bb629d2c07966ac2482e99": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "YARN-4219. New levelDB cache storage for timeline v1.5. Contributed by\nLi Lu\n",
      "commitDate": "28/01/16 2:24 PM",
      "commitName": "9fab22b36673e7f1a0bb629d2c07966ac2482e99",
      "commitAuthor": "Xuan",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-4219. New levelDB cache storage for timeline v1.5. Contributed by\nLi Lu\n",
          "commitDate": "28/01/16 2:24 PM",
          "commitName": "9fab22b36673e7f1a0bb629d2c07966ac2482e99",
          "commitAuthor": "Xuan",
          "commitDateOld": "28/01/16 10:59 AM",
          "commitNameOld": "61382ff8fabc76b3a51f227646573cdf367fea1a",
          "commitAuthorOld": "Jason Lowe",
          "daysBetweenCommits": 0.14,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,20 @@\n   public TimelineDomain getDomain(String domainId)\n       throws IOException {\n-    TimelineDomain domain \u003d domainsById.get(domainId);\n+    if (getServiceStopped()) {\n+      LOG.info(\"Service stopped, return null for the storage\");\n+      return null;\n+    }\n+    TimelineDomain domain \u003d domainById.get(domainId);\n     if (domain \u003d\u003d null) {\n       return null;\n     } else {\n-      return createTimelineDomain(\n+      return KeyValueBasedTimelineStoreUtils.createTimelineDomain(\n           domain.getId(),\n           domain.getDescription(),\n           domain.getOwner(),\n           domain.getReaders(),\n           domain.getWriters(),\n           domain.getCreatedTime(),\n           domain.getModifiedTime());\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public TimelineDomain getDomain(String domainId)\n      throws IOException {\n    if (getServiceStopped()) {\n      LOG.info(\"Service stopped, return null for the storage\");\n      return null;\n    }\n    TimelineDomain domain \u003d domainById.get(domainId);\n    if (domain \u003d\u003d null) {\n      return null;\n    } else {\n      return KeyValueBasedTimelineStoreUtils.createTimelineDomain(\n          domain.getId(),\n          domain.getDescription(),\n          domain.getOwner(),\n          domain.getReaders(),\n          domain.getWriters(),\n          domain.getCreatedTime(),\n          domain.getModifiedTime());\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/KeyValueBasedTimelineStore.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/MemoryTimelineStore.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/KeyValueBasedTimelineStore.java",
            "oldMethodName": "getDomain",
            "newMethodName": "getDomain"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4219. New levelDB cache storage for timeline v1.5. Contributed by\nLi Lu\n",
          "commitDate": "28/01/16 2:24 PM",
          "commitName": "9fab22b36673e7f1a0bb629d2c07966ac2482e99",
          "commitAuthor": "Xuan",
          "commitDateOld": "28/01/16 10:59 AM",
          "commitNameOld": "61382ff8fabc76b3a51f227646573cdf367fea1a",
          "commitAuthorOld": "Jason Lowe",
          "daysBetweenCommits": 0.14,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,20 @@\n   public TimelineDomain getDomain(String domainId)\n       throws IOException {\n-    TimelineDomain domain \u003d domainsById.get(domainId);\n+    if (getServiceStopped()) {\n+      LOG.info(\"Service stopped, return null for the storage\");\n+      return null;\n+    }\n+    TimelineDomain domain \u003d domainById.get(domainId);\n     if (domain \u003d\u003d null) {\n       return null;\n     } else {\n-      return createTimelineDomain(\n+      return KeyValueBasedTimelineStoreUtils.createTimelineDomain(\n           domain.getId(),\n           domain.getDescription(),\n           domain.getOwner(),\n           domain.getReaders(),\n           domain.getWriters(),\n           domain.getCreatedTime(),\n           domain.getModifiedTime());\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public TimelineDomain getDomain(String domainId)\n      throws IOException {\n    if (getServiceStopped()) {\n      LOG.info(\"Service stopped, return null for the storage\");\n      return null;\n    }\n    TimelineDomain domain \u003d domainById.get(domainId);\n    if (domain \u003d\u003d null) {\n      return null;\n    } else {\n      return KeyValueBasedTimelineStoreUtils.createTimelineDomain(\n          domain.getId(),\n          domain.getDescription(),\n          domain.getOwner(),\n          domain.getReaders(),\n          domain.getWriters(),\n          domain.getCreatedTime(),\n          domain.getModifiedTime());\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/KeyValueBasedTimelineStore.java",
          "extendedDetails": {}
        }
      ]
    },
    "d78b452a4f413c6931a494c33df0666ce9b44973": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2102. Added the concept of a Timeline Domain to handle read/write ACLs on Timeline service event data. Contributed by Zhijie Shen.\n",
      "commitDate": "24/09/14 11:27 AM",
      "commitName": "d78b452a4f413c6931a494c33df0666ce9b44973",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,16 @@\n+  public TimelineDomain getDomain(String domainId)\n+      throws IOException {\n+    TimelineDomain domain \u003d domainsById.get(domainId);\n+    if (domain \u003d\u003d null) {\n+      return null;\n+    } else {\n+      return createTimelineDomain(\n+          domain.getId(),\n+          domain.getDescription(),\n+          domain.getOwner(),\n+          domain.getReaders(),\n+          domain.getWriters(),\n+          domain.getCreatedTime(),\n+          domain.getModifiedTime());\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public TimelineDomain getDomain(String domainId)\n      throws IOException {\n    TimelineDomain domain \u003d domainsById.get(domainId);\n    if (domain \u003d\u003d null) {\n      return null;\n    } else {\n      return createTimelineDomain(\n          domain.getId(),\n          domain.getDescription(),\n          domain.getOwner(),\n          domain.getReaders(),\n          domain.getWriters(),\n          domain.getCreatedTime(),\n          domain.getModifiedTime());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/MemoryTimelineStore.java"
    }
  }
}