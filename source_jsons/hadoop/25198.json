{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "YARNRunner.java",
  "functionName": "addHistoryToken",
  "functionId": "addHistoryToken___ts-Credentials",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/YARNRunner.java",
  "functionStartLine": 224,
  "functionEndLine": 242,
  "numCommitsSeen": 126,
  "timeTaken": 1673,
  "changeHistory": [
    "88245b6a41171f939b22186c533ea2bc7994f9b3",
    "e3769ea1d2d088b169a78a1a1127848b2b2b8cbd",
    "b64572b06b1282128180b9ebdd971f9b1e973e61",
    "d18cc69d4eeaf82f72c8f465321afbbf28e2a550"
  ],
  "changeHistoryShort": {
    "88245b6a41171f939b22186c533ea2bc7994f9b3": "Ybodychange",
    "e3769ea1d2d088b169a78a1a1127848b2b2b8cbd": "Ybodychange",
    "b64572b06b1282128180b9ebdd971f9b1e973e61": "Yrename",
    "d18cc69d4eeaf82f72c8f465321afbbf28e2a550": "Yintroduced"
  },
  "changeHistoryDetails": {
    "88245b6a41171f939b22186c533ea2bc7994f9b3": {
      "type": "Ybodychange",
      "commitMessage": "YARN-986. Changed client side to be able to figure out the right RM Delegation token for the right ResourceManager when HA is enabled. Contributed by Karthik Kambatla.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1574190 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/03/14 12:39 PM",
      "commitName": "88245b6a41171f939b22186c533ea2bc7994f9b3",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "03/03/14 2:02 PM",
      "commitNameOld": "a756de93effb8c4c041e79a72b6542d2e88b253f",
      "commitAuthorOld": "Jason Darrell Lowe",
      "daysBetweenCommits": 0.94,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,19 @@\n   void addHistoryToken(Credentials ts) throws IOException, InterruptedException {\n     /* check if we have a hsproxy, if not, no need */\n     MRClientProtocol hsProxy \u003d clientCache.getInitializedHSProxy();\n     if (UserGroupInformation.isSecurityEnabled() \u0026\u0026 (hsProxy !\u003d null)) {\n       /*\n        * note that get delegation token was called. Again this is hack for oozie\n        * to make sure we add history server delegation tokens to the credentials\n        */\n       RMDelegationTokenSelector tokenSelector \u003d new RMDelegationTokenSelector();\n-      Text service \u003d SecurityUtil.buildTokenService(resMgrDelegate\n-          .getConnectAddress());\n+      Text service \u003d resMgrDelegate.getRMDelegationTokenService();\n       if (tokenSelector.selectToken(service, ts.getAllTokens()) !\u003d null) {\n         Text hsService \u003d SecurityUtil.buildTokenService(hsProxy\n             .getConnectAddress());\n         if (ts.getToken(hsService) \u003d\u003d null) {\n           ts.addToken(hsService, getDelegationTokenFromHS(hsProxy));\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void addHistoryToken(Credentials ts) throws IOException, InterruptedException {\n    /* check if we have a hsproxy, if not, no need */\n    MRClientProtocol hsProxy \u003d clientCache.getInitializedHSProxy();\n    if (UserGroupInformation.isSecurityEnabled() \u0026\u0026 (hsProxy !\u003d null)) {\n      /*\n       * note that get delegation token was called. Again this is hack for oozie\n       * to make sure we add history server delegation tokens to the credentials\n       */\n      RMDelegationTokenSelector tokenSelector \u003d new RMDelegationTokenSelector();\n      Text service \u003d resMgrDelegate.getRMDelegationTokenService();\n      if (tokenSelector.selectToken(service, ts.getAllTokens()) !\u003d null) {\n        Text hsService \u003d SecurityUtil.buildTokenService(hsProxy\n            .getConnectAddress());\n        if (ts.getToken(hsService) \u003d\u003d null) {\n          ts.addToken(hsService, getDelegationTokenFromHS(hsProxy));\n        }\n      }\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/YARNRunner.java",
      "extendedDetails": {}
    },
    "e3769ea1d2d088b169a78a1a1127848b2b2b8cbd": {
      "type": "Ybodychange",
      "commitMessage": "YARN-829. Renamed RMTokenSelector to be RMDelegationTokenSelector. Contributed by Zhijie Shen.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1493577 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/06/13 1:33 PM",
      "commitName": "e3769ea1d2d088b169a78a1a1127848b2b2b8cbd",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "13/06/13 4:25 PM",
      "commitNameOld": "c0cd68d8fbf5c8cafa6d563c7d0401e7a87a2d9e",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 2.88,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   void addHistoryToken(Credentials ts) throws IOException, InterruptedException {\n     /* check if we have a hsproxy, if not, no need */\n     MRClientProtocol hsProxy \u003d clientCache.getInitializedHSProxy();\n     if (UserGroupInformation.isSecurityEnabled() \u0026\u0026 (hsProxy !\u003d null)) {\n       /*\n        * note that get delegation token was called. Again this is hack for oozie\n        * to make sure we add history server delegation tokens to the credentials\n        */\n-      RMTokenSelector tokenSelector \u003d new RMTokenSelector();\n+      RMDelegationTokenSelector tokenSelector \u003d new RMDelegationTokenSelector();\n       Text service \u003d SecurityUtil.buildTokenService(resMgrDelegate\n           .getConnectAddress());\n       if (tokenSelector.selectToken(service, ts.getAllTokens()) !\u003d null) {\n         Text hsService \u003d SecurityUtil.buildTokenService(hsProxy\n             .getConnectAddress());\n         if (ts.getToken(hsService) \u003d\u003d null) {\n           ts.addToken(hsService, getDelegationTokenFromHS(hsProxy));\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void addHistoryToken(Credentials ts) throws IOException, InterruptedException {\n    /* check if we have a hsproxy, if not, no need */\n    MRClientProtocol hsProxy \u003d clientCache.getInitializedHSProxy();\n    if (UserGroupInformation.isSecurityEnabled() \u0026\u0026 (hsProxy !\u003d null)) {\n      /*\n       * note that get delegation token was called. Again this is hack for oozie\n       * to make sure we add history server delegation tokens to the credentials\n       */\n      RMDelegationTokenSelector tokenSelector \u003d new RMDelegationTokenSelector();\n      Text service \u003d SecurityUtil.buildTokenService(resMgrDelegate\n          .getConnectAddress());\n      if (tokenSelector.selectToken(service, ts.getAllTokens()) !\u003d null) {\n        Text hsService \u003d SecurityUtil.buildTokenService(hsProxy\n            .getConnectAddress());\n        if (ts.getToken(hsService) \u003d\u003d null) {\n          ts.addToken(hsService, getDelegationTokenFromHS(hsProxy));\n        }\n      }\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/YARNRunner.java",
      "extendedDetails": {}
    },
    "b64572b06b1282128180b9ebdd971f9b1e973e61": {
      "type": "Yrename",
      "commitMessage": "MAPREDUCE-5199. Removing ApplicationTokens file as it is no longer needed. Contributed by Daryn Sharp.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492848 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/06/13 1:20 PM",
      "commitName": "b64572b06b1282128180b9ebdd971f9b1e973e61",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "03/06/13 9:05 PM",
      "commitNameOld": "a83fb61ac07c0468cbc7a38526e92683883dd932",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 9.68,
      "commitsBetweenForRepo": 64,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n-  void addHistoyToken(Credentials ts) throws IOException, InterruptedException {\n+  void addHistoryToken(Credentials ts) throws IOException, InterruptedException {\n     /* check if we have a hsproxy, if not, no need */\n     MRClientProtocol hsProxy \u003d clientCache.getInitializedHSProxy();\n     if (UserGroupInformation.isSecurityEnabled() \u0026\u0026 (hsProxy !\u003d null)) {\n       /*\n        * note that get delegation token was called. Again this is hack for oozie\n        * to make sure we add history server delegation tokens to the credentials\n        */\n       RMTokenSelector tokenSelector \u003d new RMTokenSelector();\n       Text service \u003d SecurityUtil.buildTokenService(resMgrDelegate\n           .getConnectAddress());\n       if (tokenSelector.selectToken(service, ts.getAllTokens()) !\u003d null) {\n         Text hsService \u003d SecurityUtil.buildTokenService(hsProxy\n             .getConnectAddress());\n         if (ts.getToken(hsService) \u003d\u003d null) {\n           ts.addToken(hsService, getDelegationTokenFromHS(hsProxy));\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void addHistoryToken(Credentials ts) throws IOException, InterruptedException {\n    /* check if we have a hsproxy, if not, no need */\n    MRClientProtocol hsProxy \u003d clientCache.getInitializedHSProxy();\n    if (UserGroupInformation.isSecurityEnabled() \u0026\u0026 (hsProxy !\u003d null)) {\n      /*\n       * note that get delegation token was called. Again this is hack for oozie\n       * to make sure we add history server delegation tokens to the credentials\n       */\n      RMTokenSelector tokenSelector \u003d new RMTokenSelector();\n      Text service \u003d SecurityUtil.buildTokenService(resMgrDelegate\n          .getConnectAddress());\n      if (tokenSelector.selectToken(service, ts.getAllTokens()) !\u003d null) {\n        Text hsService \u003d SecurityUtil.buildTokenService(hsProxy\n            .getConnectAddress());\n        if (ts.getToken(hsService) \u003d\u003d null) {\n          ts.addToken(hsService, getDelegationTokenFromHS(hsProxy));\n        }\n      }\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/YARNRunner.java",
      "extendedDetails": {
        "oldValue": "addHistoyToken",
        "newValue": "addHistoryToken"
      }
    },
    "d18cc69d4eeaf82f72c8f465321afbbf28e2a550": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-5088. MR Client gets an renewer token exception while Oozie is submitting a job (daryn)\n\n    merge -c1463804 from branch-2.0.4-alpha\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1464153 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/04/13 11:45 AM",
      "commitName": "d18cc69d4eeaf82f72c8f465321afbbf28e2a550",
      "commitAuthor": "Konstantin Boudnik",
      "diff": "@@ -0,0 +1,20 @@\n+  void addHistoyToken(Credentials ts) throws IOException, InterruptedException {\n+    /* check if we have a hsproxy, if not, no need */\n+    MRClientProtocol hsProxy \u003d clientCache.getInitializedHSProxy();\n+    if (UserGroupInformation.isSecurityEnabled() \u0026\u0026 (hsProxy !\u003d null)) {\n+      /*\n+       * note that get delegation token was called. Again this is hack for oozie\n+       * to make sure we add history server delegation tokens to the credentials\n+       */\n+      RMTokenSelector tokenSelector \u003d new RMTokenSelector();\n+      Text service \u003d SecurityUtil.buildTokenService(resMgrDelegate\n+          .getConnectAddress());\n+      if (tokenSelector.selectToken(service, ts.getAllTokens()) !\u003d null) {\n+        Text hsService \u003d SecurityUtil.buildTokenService(hsProxy\n+            .getConnectAddress());\n+        if (ts.getToken(hsService) \u003d\u003d null) {\n+          ts.addToken(hsService, getDelegationTokenFromHS(hsProxy));\n+        }\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  void addHistoyToken(Credentials ts) throws IOException, InterruptedException {\n    /* check if we have a hsproxy, if not, no need */\n    MRClientProtocol hsProxy \u003d clientCache.getInitializedHSProxy();\n    if (UserGroupInformation.isSecurityEnabled() \u0026\u0026 (hsProxy !\u003d null)) {\n      /*\n       * note that get delegation token was called. Again this is hack for oozie\n       * to make sure we add history server delegation tokens to the credentials\n       */\n      RMTokenSelector tokenSelector \u003d new RMTokenSelector();\n      Text service \u003d SecurityUtil.buildTokenService(resMgrDelegate\n          .getConnectAddress());\n      if (tokenSelector.selectToken(service, ts.getAllTokens()) !\u003d null) {\n        Text hsService \u003d SecurityUtil.buildTokenService(hsProxy\n            .getConnectAddress());\n        if (ts.getToken(hsService) \u003d\u003d null) {\n          ts.addToken(hsService, getDelegationTokenFromHS(hsProxy));\n        }\n      }\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/YARNRunner.java"
    }
  }
}