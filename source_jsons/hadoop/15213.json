{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DFSAdmin.java",
  "functionName": "setSafeMode",
  "functionId": "setSafeMode___argv-String[]__idx-int",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
  "functionStartLine": 646,
  "functionEndLine": 697,
  "numCommitsSeen": 118,
  "timeTaken": 7361,
  "changeHistory": [
    "86c92227fc56b6e06d879d250728e8dc8cbe98fe",
    "6f8003dc7bc9e8be7b0512c514d370c303faf003",
    "e8ca6480050e38d2fe4859baf4f9a8d22e7f9b85",
    "320c32a2895e0e63b9f4d55da8c11ffbb3e9227a",
    "525ceb99adef6bbafecc9728d406abad84958387",
    "8ae98a9d1ca4725e28783370517cb3a3ecda7324",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "86c92227fc56b6e06d879d250728e8dc8cbe98fe": "Ybodychange",
    "6f8003dc7bc9e8be7b0512c514d370c303faf003": "Ybodychange",
    "e8ca6480050e38d2fe4859baf4f9a8d22e7f9b85": "Ybodychange",
    "320c32a2895e0e63b9f4d55da8c11ffbb3e9227a": "Ybodychange",
    "525ceb99adef6bbafecc9728d406abad84958387": "Ybodychange",
    "8ae98a9d1ca4725e28783370517cb3a3ecda7324": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "86c92227fc56b6e06d879d250728e8dc8cbe98fe": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4015. Safemode should count and report orphaned blocks. (Contributed by Anu Engineer)\n",
      "commitDate": "23/10/15 6:07 PM",
      "commitName": "86c92227fc56b6e06d879d250728e8dc8cbe98fe",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "22/09/15 8:52 PM",
      "commitNameOld": "63d9f1596c92206cce3b72e3214d2fb5f6242b90",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 30.89,
      "commitsBetweenForRepo": 255,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,50 +1,52 @@\n   public void setSafeMode(String[] argv, int idx) throws IOException {\n     if (idx !\u003d argv.length - 1) {\n       printUsage(\"-safemode\");\n       return;\n     }\n     HdfsConstants.SafeModeAction action;\n     Boolean waitExitSafe \u003d false;\n \n     if (\"leave\".equalsIgnoreCase(argv[idx])) {\n       action \u003d HdfsConstants.SafeModeAction.SAFEMODE_LEAVE;\n     } else if (\"enter\".equalsIgnoreCase(argv[idx])) {\n       action \u003d HdfsConstants.SafeModeAction.SAFEMODE_ENTER;\n     } else if (\"get\".equalsIgnoreCase(argv[idx])) {\n       action \u003d HdfsConstants.SafeModeAction.SAFEMODE_GET;\n     } else if (\"wait\".equalsIgnoreCase(argv[idx])) {\n       action \u003d HdfsConstants.SafeModeAction.SAFEMODE_GET;\n       waitExitSafe \u003d true;\n+    } else if (\"forceExit\".equalsIgnoreCase(argv[idx])){\n+      action \u003d HdfsConstants.SafeModeAction.SAFEMODE_FORCE_EXIT;\n     } else {\n       printUsage(\"-safemode\");\n       return;\n     }\n \n     DistributedFileSystem dfs \u003d getDFS();\n     Configuration dfsConf \u003d dfs.getConf();\n     URI dfsUri \u003d dfs.getUri();\n     boolean isHaEnabled \u003d HAUtilClient.isLogicalUri(dfsConf, dfsUri);\n \n     if (isHaEnabled) {\n       String nsId \u003d dfsUri.getHost();\n       List\u003cProxyAndInfo\u003cClientProtocol\u003e\u003e proxies \u003d\n           HAUtil.getProxiesForAllNameNodesInNameservice(\n           dfsConf, nsId, ClientProtocol.class);\n       for (ProxyAndInfo\u003cClientProtocol\u003e proxy : proxies) {\n         ClientProtocol haNn \u003d proxy.getProxy();\n         boolean inSafeMode \u003d haNn.setSafeMode(action, false);\n         if (waitExitSafe) {\n           inSafeMode \u003d waitExitSafeMode(haNn, inSafeMode);\n         }\n         System.out.println(\"Safe mode is \" + (inSafeMode ? \"ON\" : \"OFF\")\n             + \" in \" + proxy.getAddress());\n       }\n     } else {\n       boolean inSafeMode \u003d dfs.setSafeMode(action);\n       if (waitExitSafe) {\n         inSafeMode \u003d waitExitSafeMode(dfs, inSafeMode);\n       }\n       System.out.println(\"Safe mode is \" + (inSafeMode ? \"ON\" : \"OFF\"));\n     }\n \n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setSafeMode(String[] argv, int idx) throws IOException {\n    if (idx !\u003d argv.length - 1) {\n      printUsage(\"-safemode\");\n      return;\n    }\n    HdfsConstants.SafeModeAction action;\n    Boolean waitExitSafe \u003d false;\n\n    if (\"leave\".equalsIgnoreCase(argv[idx])) {\n      action \u003d HdfsConstants.SafeModeAction.SAFEMODE_LEAVE;\n    } else if (\"enter\".equalsIgnoreCase(argv[idx])) {\n      action \u003d HdfsConstants.SafeModeAction.SAFEMODE_ENTER;\n    } else if (\"get\".equalsIgnoreCase(argv[idx])) {\n      action \u003d HdfsConstants.SafeModeAction.SAFEMODE_GET;\n    } else if (\"wait\".equalsIgnoreCase(argv[idx])) {\n      action \u003d HdfsConstants.SafeModeAction.SAFEMODE_GET;\n      waitExitSafe \u003d true;\n    } else if (\"forceExit\".equalsIgnoreCase(argv[idx])){\n      action \u003d HdfsConstants.SafeModeAction.SAFEMODE_FORCE_EXIT;\n    } else {\n      printUsage(\"-safemode\");\n      return;\n    }\n\n    DistributedFileSystem dfs \u003d getDFS();\n    Configuration dfsConf \u003d dfs.getConf();\n    URI dfsUri \u003d dfs.getUri();\n    boolean isHaEnabled \u003d HAUtilClient.isLogicalUri(dfsConf, dfsUri);\n\n    if (isHaEnabled) {\n      String nsId \u003d dfsUri.getHost();\n      List\u003cProxyAndInfo\u003cClientProtocol\u003e\u003e proxies \u003d\n          HAUtil.getProxiesForAllNameNodesInNameservice(\n          dfsConf, nsId, ClientProtocol.class);\n      for (ProxyAndInfo\u003cClientProtocol\u003e proxy : proxies) {\n        ClientProtocol haNn \u003d proxy.getProxy();\n        boolean inSafeMode \u003d haNn.setSafeMode(action, false);\n        if (waitExitSafe) {\n          inSafeMode \u003d waitExitSafeMode(haNn, inSafeMode);\n        }\n        System.out.println(\"Safe mode is \" + (inSafeMode ? \"ON\" : \"OFF\")\n            + \" in \" + proxy.getAddress());\n      }\n    } else {\n      boolean inSafeMode \u003d dfs.setSafeMode(action);\n      if (waitExitSafe) {\n        inSafeMode \u003d waitExitSafeMode(dfs, inSafeMode);\n      }\n      System.out.println(\"Safe mode is \" + (inSafeMode ? \"ON\" : \"OFF\"));\n    }\n\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "6f8003dc7bc9e8be7b0512c514d370c303faf003": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8185. Separate client related routines in HAUtil into a new class. Contributed by Haohui Mai.\n",
      "commitDate": "21/04/15 9:59 PM",
      "commitName": "6f8003dc7bc9e8be7b0512c514d370c303faf003",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "25/03/15 10:38 AM",
      "commitNameOld": "5e21e4ca377f68e030f8f3436cd93fd7a74dc5e0",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 27.47,
      "commitsBetweenForRepo": 221,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,50 +1,50 @@\n   public void setSafeMode(String[] argv, int idx) throws IOException {\n     if (idx !\u003d argv.length - 1) {\n       printUsage(\"-safemode\");\n       return;\n     }\n     HdfsConstants.SafeModeAction action;\n     Boolean waitExitSafe \u003d false;\n \n     if (\"leave\".equalsIgnoreCase(argv[idx])) {\n       action \u003d HdfsConstants.SafeModeAction.SAFEMODE_LEAVE;\n     } else if (\"enter\".equalsIgnoreCase(argv[idx])) {\n       action \u003d HdfsConstants.SafeModeAction.SAFEMODE_ENTER;\n     } else if (\"get\".equalsIgnoreCase(argv[idx])) {\n       action \u003d HdfsConstants.SafeModeAction.SAFEMODE_GET;\n     } else if (\"wait\".equalsIgnoreCase(argv[idx])) {\n       action \u003d HdfsConstants.SafeModeAction.SAFEMODE_GET;\n       waitExitSafe \u003d true;\n     } else {\n       printUsage(\"-safemode\");\n       return;\n     }\n \n     DistributedFileSystem dfs \u003d getDFS();\n     Configuration dfsConf \u003d dfs.getConf();\n     URI dfsUri \u003d dfs.getUri();\n-    boolean isHaEnabled \u003d HAUtil.isLogicalUri(dfsConf, dfsUri);\n+    boolean isHaEnabled \u003d HAUtilClient.isLogicalUri(dfsConf, dfsUri);\n \n     if (isHaEnabled) {\n       String nsId \u003d dfsUri.getHost();\n       List\u003cProxyAndInfo\u003cClientProtocol\u003e\u003e proxies \u003d\n           HAUtil.getProxiesForAllNameNodesInNameservice(\n           dfsConf, nsId, ClientProtocol.class);\n       for (ProxyAndInfo\u003cClientProtocol\u003e proxy : proxies) {\n         ClientProtocol haNn \u003d proxy.getProxy();\n         boolean inSafeMode \u003d haNn.setSafeMode(action, false);\n         if (waitExitSafe) {\n           inSafeMode \u003d waitExitSafeMode(haNn, inSafeMode);\n         }\n         System.out.println(\"Safe mode is \" + (inSafeMode ? \"ON\" : \"OFF\")\n             + \" in \" + proxy.getAddress());\n       }\n     } else {\n       boolean inSafeMode \u003d dfs.setSafeMode(action);\n       if (waitExitSafe) {\n         inSafeMode \u003d waitExitSafeMode(dfs, inSafeMode);\n       }\n       System.out.println(\"Safe mode is \" + (inSafeMode ? \"ON\" : \"OFF\"));\n     }\n \n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setSafeMode(String[] argv, int idx) throws IOException {\n    if (idx !\u003d argv.length - 1) {\n      printUsage(\"-safemode\");\n      return;\n    }\n    HdfsConstants.SafeModeAction action;\n    Boolean waitExitSafe \u003d false;\n\n    if (\"leave\".equalsIgnoreCase(argv[idx])) {\n      action \u003d HdfsConstants.SafeModeAction.SAFEMODE_LEAVE;\n    } else if (\"enter\".equalsIgnoreCase(argv[idx])) {\n      action \u003d HdfsConstants.SafeModeAction.SAFEMODE_ENTER;\n    } else if (\"get\".equalsIgnoreCase(argv[idx])) {\n      action \u003d HdfsConstants.SafeModeAction.SAFEMODE_GET;\n    } else if (\"wait\".equalsIgnoreCase(argv[idx])) {\n      action \u003d HdfsConstants.SafeModeAction.SAFEMODE_GET;\n      waitExitSafe \u003d true;\n    } else {\n      printUsage(\"-safemode\");\n      return;\n    }\n\n    DistributedFileSystem dfs \u003d getDFS();\n    Configuration dfsConf \u003d dfs.getConf();\n    URI dfsUri \u003d dfs.getUri();\n    boolean isHaEnabled \u003d HAUtilClient.isLogicalUri(dfsConf, dfsUri);\n\n    if (isHaEnabled) {\n      String nsId \u003d dfsUri.getHost();\n      List\u003cProxyAndInfo\u003cClientProtocol\u003e\u003e proxies \u003d\n          HAUtil.getProxiesForAllNameNodesInNameservice(\n          dfsConf, nsId, ClientProtocol.class);\n      for (ProxyAndInfo\u003cClientProtocol\u003e proxy : proxies) {\n        ClientProtocol haNn \u003d proxy.getProxy();\n        boolean inSafeMode \u003d haNn.setSafeMode(action, false);\n        if (waitExitSafe) {\n          inSafeMode \u003d waitExitSafeMode(haNn, inSafeMode);\n        }\n        System.out.println(\"Safe mode is \" + (inSafeMode ? \"ON\" : \"OFF\")\n            + \" in \" + proxy.getAddress());\n      }\n    } else {\n      boolean inSafeMode \u003d dfs.setSafeMode(action);\n      if (waitExitSafe) {\n        inSafeMode \u003d waitExitSafeMode(dfs, inSafeMode);\n      }\n      System.out.println(\"Safe mode is \" + (inSafeMode ? \"ON\" : \"OFF\"));\n    }\n\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "e8ca6480050e38d2fe4859baf4f9a8d22e7f9b85": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6507. Improve DFSAdmin to support HA cluster better. (Contributd by Zesheng Wu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1604692 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/06/14 10:16 PM",
      "commitName": "e8ca6480050e38d2fe4859baf4f9a8d22e7f9b85",
      "commitAuthor": "Vinayakumar B",
      "commitDateOld": "11/06/14 6:27 PM",
      "commitNameOld": "34e9173c00f7e1ae55dec365850849c793cde8e3",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 11.16,
      "commitsBetweenForRepo": 76,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,41 +1,50 @@\n   public void setSafeMode(String[] argv, int idx) throws IOException {\n     if (idx !\u003d argv.length - 1) {\n       printUsage(\"-safemode\");\n       return;\n     }\n     HdfsConstants.SafeModeAction action;\n     Boolean waitExitSafe \u003d false;\n \n     if (\"leave\".equalsIgnoreCase(argv[idx])) {\n       action \u003d HdfsConstants.SafeModeAction.SAFEMODE_LEAVE;\n     } else if (\"enter\".equalsIgnoreCase(argv[idx])) {\n       action \u003d HdfsConstants.SafeModeAction.SAFEMODE_ENTER;\n     } else if (\"get\".equalsIgnoreCase(argv[idx])) {\n       action \u003d HdfsConstants.SafeModeAction.SAFEMODE_GET;\n     } else if (\"wait\".equalsIgnoreCase(argv[idx])) {\n       action \u003d HdfsConstants.SafeModeAction.SAFEMODE_GET;\n       waitExitSafe \u003d true;\n     } else {\n       printUsage(\"-safemode\");\n       return;\n     }\n-    DistributedFileSystem dfs \u003d getDFS();\n-    boolean inSafeMode \u003d dfs.setSafeMode(action);\n \n-    //\n-    // If we are waiting for safemode to exit, then poll and\n-    // sleep till we are out of safemode.\n-    //\n-    if (waitExitSafe) {\n-      while (inSafeMode) {\n-        try {\n-          Thread.sleep(5000);\n-        } catch (java.lang.InterruptedException e) {\n-          throw new IOException(\"Wait Interrupted\");\n+    DistributedFileSystem dfs \u003d getDFS();\n+    Configuration dfsConf \u003d dfs.getConf();\n+    URI dfsUri \u003d dfs.getUri();\n+    boolean isHaEnabled \u003d HAUtil.isLogicalUri(dfsConf, dfsUri);\n+\n+    if (isHaEnabled) {\n+      String nsId \u003d dfsUri.getHost();\n+      List\u003cProxyAndInfo\u003cClientProtocol\u003e\u003e proxies \u003d\n+          HAUtil.getProxiesForAllNameNodesInNameservice(\n+          dfsConf, nsId, ClientProtocol.class);\n+      for (ProxyAndInfo\u003cClientProtocol\u003e proxy : proxies) {\n+        ClientProtocol haNn \u003d proxy.getProxy();\n+        boolean inSafeMode \u003d haNn.setSafeMode(action, false);\n+        if (waitExitSafe) {\n+          inSafeMode \u003d waitExitSafeMode(haNn, inSafeMode);\n         }\n-        inSafeMode \u003d dfs.setSafeMode(SafeModeAction.SAFEMODE_GET);\n+        System.out.println(\"Safe mode is \" + (inSafeMode ? \"ON\" : \"OFF\")\n+            + \" in \" + proxy.getAddress());\n       }\n+    } else {\n+      boolean inSafeMode \u003d dfs.setSafeMode(action);\n+      if (waitExitSafe) {\n+        inSafeMode \u003d waitExitSafeMode(dfs, inSafeMode);\n+      }\n+      System.out.println(\"Safe mode is \" + (inSafeMode ? \"ON\" : \"OFF\"));\n     }\n \n-    System.out.println(\"Safe mode is \" + (inSafeMode ? \"ON\" : \"OFF\"));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setSafeMode(String[] argv, int idx) throws IOException {\n    if (idx !\u003d argv.length - 1) {\n      printUsage(\"-safemode\");\n      return;\n    }\n    HdfsConstants.SafeModeAction action;\n    Boolean waitExitSafe \u003d false;\n\n    if (\"leave\".equalsIgnoreCase(argv[idx])) {\n      action \u003d HdfsConstants.SafeModeAction.SAFEMODE_LEAVE;\n    } else if (\"enter\".equalsIgnoreCase(argv[idx])) {\n      action \u003d HdfsConstants.SafeModeAction.SAFEMODE_ENTER;\n    } else if (\"get\".equalsIgnoreCase(argv[idx])) {\n      action \u003d HdfsConstants.SafeModeAction.SAFEMODE_GET;\n    } else if (\"wait\".equalsIgnoreCase(argv[idx])) {\n      action \u003d HdfsConstants.SafeModeAction.SAFEMODE_GET;\n      waitExitSafe \u003d true;\n    } else {\n      printUsage(\"-safemode\");\n      return;\n    }\n\n    DistributedFileSystem dfs \u003d getDFS();\n    Configuration dfsConf \u003d dfs.getConf();\n    URI dfsUri \u003d dfs.getUri();\n    boolean isHaEnabled \u003d HAUtil.isLogicalUri(dfsConf, dfsUri);\n\n    if (isHaEnabled) {\n      String nsId \u003d dfsUri.getHost();\n      List\u003cProxyAndInfo\u003cClientProtocol\u003e\u003e proxies \u003d\n          HAUtil.getProxiesForAllNameNodesInNameservice(\n          dfsConf, nsId, ClientProtocol.class);\n      for (ProxyAndInfo\u003cClientProtocol\u003e proxy : proxies) {\n        ClientProtocol haNn \u003d proxy.getProxy();\n        boolean inSafeMode \u003d haNn.setSafeMode(action, false);\n        if (waitExitSafe) {\n          inSafeMode \u003d waitExitSafeMode(haNn, inSafeMode);\n        }\n        System.out.println(\"Safe mode is \" + (inSafeMode ? \"ON\" : \"OFF\")\n            + \" in \" + proxy.getAddress());\n      }\n    } else {\n      boolean inSafeMode \u003d dfs.setSafeMode(action);\n      if (waitExitSafe) {\n        inSafeMode \u003d waitExitSafeMode(dfs, inSafeMode);\n      }\n      System.out.println(\"Safe mode is \" + (inSafeMode ? \"ON\" : \"OFF\"));\n    }\n\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "320c32a2895e0e63b9f4d55da8c11ffbb3e9227a": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3507. DFS#isInSafeMode needs to execute only on Active NameNode. Contributed by Vinay.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1410587 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/11/12 1:51 PM",
      "commitName": "320c32a2895e0e63b9f4d55da8c11ffbb3e9227a",
      "commitAuthor": "Aaron Myers",
      "commitDateOld": "05/10/12 5:13 PM",
      "commitNameOld": "353958dccc9cb9c47571b973dec46d8fcd82035d",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 41.9,
      "commitsBetweenForRepo": 254,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,41 +1,41 @@\n   public void setSafeMode(String[] argv, int idx) throws IOException {\n     if (idx !\u003d argv.length - 1) {\n       printUsage(\"-safemode\");\n       return;\n     }\n     HdfsConstants.SafeModeAction action;\n     Boolean waitExitSafe \u003d false;\n \n     if (\"leave\".equalsIgnoreCase(argv[idx])) {\n       action \u003d HdfsConstants.SafeModeAction.SAFEMODE_LEAVE;\n     } else if (\"enter\".equalsIgnoreCase(argv[idx])) {\n       action \u003d HdfsConstants.SafeModeAction.SAFEMODE_ENTER;\n     } else if (\"get\".equalsIgnoreCase(argv[idx])) {\n       action \u003d HdfsConstants.SafeModeAction.SAFEMODE_GET;\n     } else if (\"wait\".equalsIgnoreCase(argv[idx])) {\n       action \u003d HdfsConstants.SafeModeAction.SAFEMODE_GET;\n       waitExitSafe \u003d true;\n     } else {\n       printUsage(\"-safemode\");\n       return;\n     }\n     DistributedFileSystem dfs \u003d getDFS();\n     boolean inSafeMode \u003d dfs.setSafeMode(action);\n \n     //\n     // If we are waiting for safemode to exit, then poll and\n     // sleep till we are out of safemode.\n     //\n     if (waitExitSafe) {\n       while (inSafeMode) {\n         try {\n           Thread.sleep(5000);\n         } catch (java.lang.InterruptedException e) {\n           throw new IOException(\"Wait Interrupted\");\n         }\n-        inSafeMode \u003d dfs.isInSafeMode();\n+        inSafeMode \u003d dfs.setSafeMode(SafeModeAction.SAFEMODE_GET);\n       }\n     }\n \n     System.out.println(\"Safe mode is \" + (inSafeMode ? \"ON\" : \"OFF\"));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setSafeMode(String[] argv, int idx) throws IOException {\n    if (idx !\u003d argv.length - 1) {\n      printUsage(\"-safemode\");\n      return;\n    }\n    HdfsConstants.SafeModeAction action;\n    Boolean waitExitSafe \u003d false;\n\n    if (\"leave\".equalsIgnoreCase(argv[idx])) {\n      action \u003d HdfsConstants.SafeModeAction.SAFEMODE_LEAVE;\n    } else if (\"enter\".equalsIgnoreCase(argv[idx])) {\n      action \u003d HdfsConstants.SafeModeAction.SAFEMODE_ENTER;\n    } else if (\"get\".equalsIgnoreCase(argv[idx])) {\n      action \u003d HdfsConstants.SafeModeAction.SAFEMODE_GET;\n    } else if (\"wait\".equalsIgnoreCase(argv[idx])) {\n      action \u003d HdfsConstants.SafeModeAction.SAFEMODE_GET;\n      waitExitSafe \u003d true;\n    } else {\n      printUsage(\"-safemode\");\n      return;\n    }\n    DistributedFileSystem dfs \u003d getDFS();\n    boolean inSafeMode \u003d dfs.setSafeMode(action);\n\n    //\n    // If we are waiting for safemode to exit, then poll and\n    // sleep till we are out of safemode.\n    //\n    if (waitExitSafe) {\n      while (inSafeMode) {\n        try {\n          Thread.sleep(5000);\n        } catch (java.lang.InterruptedException e) {\n          throw new IOException(\"Wait Interrupted\");\n        }\n        inSafeMode \u003d dfs.setSafeMode(SafeModeAction.SAFEMODE_GET);\n      }\n    }\n\n    System.out.println(\"Safe mode is \" + (inSafeMode ? \"ON\" : \"OFF\"));\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "525ceb99adef6bbafecc9728d406abad84958387": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2413. Add an API DistributedFileSystem.isInSafeMode() and change DistributedFileSystem to @InterfaceAudience.LimitedPrivate.  Contributed by harsh\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1305632 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "26/03/12 3:18 PM",
      "commitName": "525ceb99adef6bbafecc9728d406abad84958387",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "26/03/12 10:02 AM",
      "commitNameOld": "ce1a7ec9755f17527c29b0db713d7e01750e10c9",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.22,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,41 +1,41 @@\n   public void setSafeMode(String[] argv, int idx) throws IOException {\n     if (idx !\u003d argv.length - 1) {\n       printUsage(\"-safemode\");\n       return;\n     }\n     HdfsConstants.SafeModeAction action;\n     Boolean waitExitSafe \u003d false;\n \n     if (\"leave\".equalsIgnoreCase(argv[idx])) {\n       action \u003d HdfsConstants.SafeModeAction.SAFEMODE_LEAVE;\n     } else if (\"enter\".equalsIgnoreCase(argv[idx])) {\n       action \u003d HdfsConstants.SafeModeAction.SAFEMODE_ENTER;\n     } else if (\"get\".equalsIgnoreCase(argv[idx])) {\n       action \u003d HdfsConstants.SafeModeAction.SAFEMODE_GET;\n     } else if (\"wait\".equalsIgnoreCase(argv[idx])) {\n       action \u003d HdfsConstants.SafeModeAction.SAFEMODE_GET;\n       waitExitSafe \u003d true;\n     } else {\n       printUsage(\"-safemode\");\n       return;\n     }\n     DistributedFileSystem dfs \u003d getDFS();\n     boolean inSafeMode \u003d dfs.setSafeMode(action);\n \n     //\n     // If we are waiting for safemode to exit, then poll and\n     // sleep till we are out of safemode.\n     //\n     if (waitExitSafe) {\n       while (inSafeMode) {\n         try {\n           Thread.sleep(5000);\n         } catch (java.lang.InterruptedException e) {\n           throw new IOException(\"Wait Interrupted\");\n         }\n-        inSafeMode \u003d dfs.setSafeMode(action);\n+        inSafeMode \u003d dfs.isInSafeMode();\n       }\n     }\n \n     System.out.println(\"Safe mode is \" + (inSafeMode ? \"ON\" : \"OFF\"));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setSafeMode(String[] argv, int idx) throws IOException {\n    if (idx !\u003d argv.length - 1) {\n      printUsage(\"-safemode\");\n      return;\n    }\n    HdfsConstants.SafeModeAction action;\n    Boolean waitExitSafe \u003d false;\n\n    if (\"leave\".equalsIgnoreCase(argv[idx])) {\n      action \u003d HdfsConstants.SafeModeAction.SAFEMODE_LEAVE;\n    } else if (\"enter\".equalsIgnoreCase(argv[idx])) {\n      action \u003d HdfsConstants.SafeModeAction.SAFEMODE_ENTER;\n    } else if (\"get\".equalsIgnoreCase(argv[idx])) {\n      action \u003d HdfsConstants.SafeModeAction.SAFEMODE_GET;\n    } else if (\"wait\".equalsIgnoreCase(argv[idx])) {\n      action \u003d HdfsConstants.SafeModeAction.SAFEMODE_GET;\n      waitExitSafe \u003d true;\n    } else {\n      printUsage(\"-safemode\");\n      return;\n    }\n    DistributedFileSystem dfs \u003d getDFS();\n    boolean inSafeMode \u003d dfs.setSafeMode(action);\n\n    //\n    // If we are waiting for safemode to exit, then poll and\n    // sleep till we are out of safemode.\n    //\n    if (waitExitSafe) {\n      while (inSafeMode) {\n        try {\n          Thread.sleep(5000);\n        } catch (java.lang.InterruptedException e) {\n          throw new IOException(\"Wait Interrupted\");\n        }\n        inSafeMode \u003d dfs.isInSafeMode();\n      }\n    }\n\n    System.out.println(\"Safe mode is \" + (inSafeMode ? \"ON\" : \"OFF\"));\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "8ae98a9d1ca4725e28783370517cb3a3ecda7324": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-1620. Rename HdfsConstants -\u003e HdfsServerConstants, FSConstants -\u003e HdfsConstants. (Harsh J Chouraria via atm)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1165096 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/09/11 12:30 PM",
      "commitName": "8ae98a9d1ca4725e28783370517cb3a3ecda7324",
      "commitAuthor": "Aaron Myers",
      "commitDateOld": "24/08/11 5:14 PM",
      "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 10.8,
      "commitsBetweenForRepo": 53,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,41 +1,41 @@\n   public void setSafeMode(String[] argv, int idx) throws IOException {\n     if (idx !\u003d argv.length - 1) {\n       printUsage(\"-safemode\");\n       return;\n     }\n-    FSConstants.SafeModeAction action;\n+    HdfsConstants.SafeModeAction action;\n     Boolean waitExitSafe \u003d false;\n \n     if (\"leave\".equalsIgnoreCase(argv[idx])) {\n-      action \u003d FSConstants.SafeModeAction.SAFEMODE_LEAVE;\n+      action \u003d HdfsConstants.SafeModeAction.SAFEMODE_LEAVE;\n     } else if (\"enter\".equalsIgnoreCase(argv[idx])) {\n-      action \u003d FSConstants.SafeModeAction.SAFEMODE_ENTER;\n+      action \u003d HdfsConstants.SafeModeAction.SAFEMODE_ENTER;\n     } else if (\"get\".equalsIgnoreCase(argv[idx])) {\n-      action \u003d FSConstants.SafeModeAction.SAFEMODE_GET;\n+      action \u003d HdfsConstants.SafeModeAction.SAFEMODE_GET;\n     } else if (\"wait\".equalsIgnoreCase(argv[idx])) {\n-      action \u003d FSConstants.SafeModeAction.SAFEMODE_GET;\n+      action \u003d HdfsConstants.SafeModeAction.SAFEMODE_GET;\n       waitExitSafe \u003d true;\n     } else {\n       printUsage(\"-safemode\");\n       return;\n     }\n     DistributedFileSystem dfs \u003d getDFS();\n     boolean inSafeMode \u003d dfs.setSafeMode(action);\n \n     //\n     // If we are waiting for safemode to exit, then poll and\n     // sleep till we are out of safemode.\n     //\n     if (waitExitSafe) {\n       while (inSafeMode) {\n         try {\n           Thread.sleep(5000);\n         } catch (java.lang.InterruptedException e) {\n           throw new IOException(\"Wait Interrupted\");\n         }\n         inSafeMode \u003d dfs.setSafeMode(action);\n       }\n     }\n \n     System.out.println(\"Safe mode is \" + (inSafeMode ? \"ON\" : \"OFF\"));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setSafeMode(String[] argv, int idx) throws IOException {\n    if (idx !\u003d argv.length - 1) {\n      printUsage(\"-safemode\");\n      return;\n    }\n    HdfsConstants.SafeModeAction action;\n    Boolean waitExitSafe \u003d false;\n\n    if (\"leave\".equalsIgnoreCase(argv[idx])) {\n      action \u003d HdfsConstants.SafeModeAction.SAFEMODE_LEAVE;\n    } else if (\"enter\".equalsIgnoreCase(argv[idx])) {\n      action \u003d HdfsConstants.SafeModeAction.SAFEMODE_ENTER;\n    } else if (\"get\".equalsIgnoreCase(argv[idx])) {\n      action \u003d HdfsConstants.SafeModeAction.SAFEMODE_GET;\n    } else if (\"wait\".equalsIgnoreCase(argv[idx])) {\n      action \u003d HdfsConstants.SafeModeAction.SAFEMODE_GET;\n      waitExitSafe \u003d true;\n    } else {\n      printUsage(\"-safemode\");\n      return;\n    }\n    DistributedFileSystem dfs \u003d getDFS();\n    boolean inSafeMode \u003d dfs.setSafeMode(action);\n\n    //\n    // If we are waiting for safemode to exit, then poll and\n    // sleep till we are out of safemode.\n    //\n    if (waitExitSafe) {\n      while (inSafeMode) {\n        try {\n          Thread.sleep(5000);\n        } catch (java.lang.InterruptedException e) {\n          throw new IOException(\"Wait Interrupted\");\n        }\n        inSafeMode \u003d dfs.setSafeMode(action);\n      }\n    }\n\n    System.out.println(\"Safe mode is \" + (inSafeMode ? \"ON\" : \"OFF\"));\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void setSafeMode(String[] argv, int idx) throws IOException {\n    if (idx !\u003d argv.length - 1) {\n      printUsage(\"-safemode\");\n      return;\n    }\n    FSConstants.SafeModeAction action;\n    Boolean waitExitSafe \u003d false;\n\n    if (\"leave\".equalsIgnoreCase(argv[idx])) {\n      action \u003d FSConstants.SafeModeAction.SAFEMODE_LEAVE;\n    } else if (\"enter\".equalsIgnoreCase(argv[idx])) {\n      action \u003d FSConstants.SafeModeAction.SAFEMODE_ENTER;\n    } else if (\"get\".equalsIgnoreCase(argv[idx])) {\n      action \u003d FSConstants.SafeModeAction.SAFEMODE_GET;\n    } else if (\"wait\".equalsIgnoreCase(argv[idx])) {\n      action \u003d FSConstants.SafeModeAction.SAFEMODE_GET;\n      waitExitSafe \u003d true;\n    } else {\n      printUsage(\"-safemode\");\n      return;\n    }\n    DistributedFileSystem dfs \u003d getDFS();\n    boolean inSafeMode \u003d dfs.setSafeMode(action);\n\n    //\n    // If we are waiting for safemode to exit, then poll and\n    // sleep till we are out of safemode.\n    //\n    if (waitExitSafe) {\n      while (inSafeMode) {\n        try {\n          Thread.sleep(5000);\n        } catch (java.lang.InterruptedException e) {\n          throw new IOException(\"Wait Interrupted\");\n        }\n        inSafeMode \u003d dfs.setSafeMode(action);\n      }\n    }\n\n    System.out.println(\"Safe mode is \" + (inSafeMode ? \"ON\" : \"OFF\"));\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void setSafeMode(String[] argv, int idx) throws IOException {\n    if (idx !\u003d argv.length - 1) {\n      printUsage(\"-safemode\");\n      return;\n    }\n    FSConstants.SafeModeAction action;\n    Boolean waitExitSafe \u003d false;\n\n    if (\"leave\".equalsIgnoreCase(argv[idx])) {\n      action \u003d FSConstants.SafeModeAction.SAFEMODE_LEAVE;\n    } else if (\"enter\".equalsIgnoreCase(argv[idx])) {\n      action \u003d FSConstants.SafeModeAction.SAFEMODE_ENTER;\n    } else if (\"get\".equalsIgnoreCase(argv[idx])) {\n      action \u003d FSConstants.SafeModeAction.SAFEMODE_GET;\n    } else if (\"wait\".equalsIgnoreCase(argv[idx])) {\n      action \u003d FSConstants.SafeModeAction.SAFEMODE_GET;\n      waitExitSafe \u003d true;\n    } else {\n      printUsage(\"-safemode\");\n      return;\n    }\n    DistributedFileSystem dfs \u003d getDFS();\n    boolean inSafeMode \u003d dfs.setSafeMode(action);\n\n    //\n    // If we are waiting for safemode to exit, then poll and\n    // sleep till we are out of safemode.\n    //\n    if (waitExitSafe) {\n      while (inSafeMode) {\n        try {\n          Thread.sleep(5000);\n        } catch (java.lang.InterruptedException e) {\n          throw new IOException(\"Wait Interrupted\");\n        }\n        inSafeMode \u003d dfs.setSafeMode(action);\n      }\n    }\n\n    System.out.println(\"Safe mode is \" + (inSafeMode ? \"ON\" : \"OFF\"));\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,41 @@\n+  public void setSafeMode(String[] argv, int idx) throws IOException {\n+    if (idx !\u003d argv.length - 1) {\n+      printUsage(\"-safemode\");\n+      return;\n+    }\n+    FSConstants.SafeModeAction action;\n+    Boolean waitExitSafe \u003d false;\n+\n+    if (\"leave\".equalsIgnoreCase(argv[idx])) {\n+      action \u003d FSConstants.SafeModeAction.SAFEMODE_LEAVE;\n+    } else if (\"enter\".equalsIgnoreCase(argv[idx])) {\n+      action \u003d FSConstants.SafeModeAction.SAFEMODE_ENTER;\n+    } else if (\"get\".equalsIgnoreCase(argv[idx])) {\n+      action \u003d FSConstants.SafeModeAction.SAFEMODE_GET;\n+    } else if (\"wait\".equalsIgnoreCase(argv[idx])) {\n+      action \u003d FSConstants.SafeModeAction.SAFEMODE_GET;\n+      waitExitSafe \u003d true;\n+    } else {\n+      printUsage(\"-safemode\");\n+      return;\n+    }\n+    DistributedFileSystem dfs \u003d getDFS();\n+    boolean inSafeMode \u003d dfs.setSafeMode(action);\n+\n+    //\n+    // If we are waiting for safemode to exit, then poll and\n+    // sleep till we are out of safemode.\n+    //\n+    if (waitExitSafe) {\n+      while (inSafeMode) {\n+        try {\n+          Thread.sleep(5000);\n+        } catch (java.lang.InterruptedException e) {\n+          throw new IOException(\"Wait Interrupted\");\n+        }\n+        inSafeMode \u003d dfs.setSafeMode(action);\n+      }\n+    }\n+\n+    System.out.println(\"Safe mode is \" + (inSafeMode ? \"ON\" : \"OFF\"));\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void setSafeMode(String[] argv, int idx) throws IOException {\n    if (idx !\u003d argv.length - 1) {\n      printUsage(\"-safemode\");\n      return;\n    }\n    FSConstants.SafeModeAction action;\n    Boolean waitExitSafe \u003d false;\n\n    if (\"leave\".equalsIgnoreCase(argv[idx])) {\n      action \u003d FSConstants.SafeModeAction.SAFEMODE_LEAVE;\n    } else if (\"enter\".equalsIgnoreCase(argv[idx])) {\n      action \u003d FSConstants.SafeModeAction.SAFEMODE_ENTER;\n    } else if (\"get\".equalsIgnoreCase(argv[idx])) {\n      action \u003d FSConstants.SafeModeAction.SAFEMODE_GET;\n    } else if (\"wait\".equalsIgnoreCase(argv[idx])) {\n      action \u003d FSConstants.SafeModeAction.SAFEMODE_GET;\n      waitExitSafe \u003d true;\n    } else {\n      printUsage(\"-safemode\");\n      return;\n    }\n    DistributedFileSystem dfs \u003d getDFS();\n    boolean inSafeMode \u003d dfs.setSafeMode(action);\n\n    //\n    // If we are waiting for safemode to exit, then poll and\n    // sleep till we are out of safemode.\n    //\n    if (waitExitSafe) {\n      while (inSafeMode) {\n        try {\n          Thread.sleep(5000);\n        } catch (java.lang.InterruptedException e) {\n          throw new IOException(\"Wait Interrupted\");\n        }\n        inSafeMode \u003d dfs.setSafeMode(action);\n      }\n    }\n\n    System.out.println(\"Safe mode is \" + (inSafeMode ? \"ON\" : \"OFF\"));\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java"
    }
  }
}