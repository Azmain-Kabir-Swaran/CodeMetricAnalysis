{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AppPriorityACLConfigurationParser.java",
  "functionName": "createACLStringForPriority",
  "functionId": "createACLStringForPriority___acls-List__StringBuilder__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/AppPriorityACLConfigurationParser.java",
  "functionStartLine": 166,
  "functionEndLine": 198,
  "numCommitsSeen": 2,
  "timeTaken": 1192,
  "changeHistory": [
    "287d3d6804a869723ae36605a3c2d2b3eae3941e"
  ],
  "changeHistoryShort": {
    "287d3d6804a869723ae36605a3c2d2b3eae3941e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "287d3d6804a869723ae36605a3c2d2b3eae3941e": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3955. Support for application priority ACLs in queues of CapacityScheduler. (Sunil G via wangda)\n",
      "commitDate": "09/01/17 8:40 AM",
      "commitName": "287d3d6804a869723ae36605a3c2d2b3eae3941e",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,33 @@\n+  private AccessControlList createACLStringForPriority(\n+      List\u003cStringBuilder\u003e acls) {\n+\n+    String finalACL \u003d \"\";\n+    String userACL \u003d acls.get(0).toString();\n+\n+    // If any of user/group is *, consider it as acceptable for all.\n+    // \"user\" is at index 0, and \"group\" is at index 1.\n+    if (userACL.trim().equals(ALL_ACL)) {\n+      finalACL \u003d ALL_ACL;\n+    } else if (userACL.equals(NONE_ACL)) {\n+      finalACL \u003d NONE_ACL;\n+    } else {\n+\n+      // Get USER segment\n+      if (!userACL.trim().isEmpty()) {\n+        // skip last appended \",\"\n+        finalACL \u003d acls.get(0).toString();\n+      }\n+\n+      // Get GROUP segment if any\n+      if (acls.size() \u003e 1) {\n+        String groupACL \u003d acls.get(1).toString();\n+        if (!groupACL.trim().isEmpty()) {\n+          finalACL \u003d finalACL + \" \"\n+              + acls.get(1).toString();\n+        }\n+      }\n+    }\n+\n+    // Here ACL will look like \"user1,user2 group\" in ideal cases.\n+    return new AccessControlList(finalACL.trim());\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private AccessControlList createACLStringForPriority(\n      List\u003cStringBuilder\u003e acls) {\n\n    String finalACL \u003d \"\";\n    String userACL \u003d acls.get(0).toString();\n\n    // If any of user/group is *, consider it as acceptable for all.\n    // \"user\" is at index 0, and \"group\" is at index 1.\n    if (userACL.trim().equals(ALL_ACL)) {\n      finalACL \u003d ALL_ACL;\n    } else if (userACL.equals(NONE_ACL)) {\n      finalACL \u003d NONE_ACL;\n    } else {\n\n      // Get USER segment\n      if (!userACL.trim().isEmpty()) {\n        // skip last appended \",\"\n        finalACL \u003d acls.get(0).toString();\n      }\n\n      // Get GROUP segment if any\n      if (acls.size() \u003e 1) {\n        String groupACL \u003d acls.get(1).toString();\n        if (!groupACL.trim().isEmpty()) {\n          finalACL \u003d finalACL + \" \"\n              + acls.get(1).toString();\n        }\n      }\n    }\n\n    // Here ACL will look like \"user1,user2 group\" in ideal cases.\n    return new AccessControlList(finalACL.trim());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/AppPriorityACLConfigurationParser.java"
    }
  }
}