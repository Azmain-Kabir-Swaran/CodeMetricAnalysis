{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FileContext.java",
  "functionName": "getFSofPath",
  "functionId": "getFSofPath___absOrFqPath-Path(modifiers-final)",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileContext.java",
  "functionStartLine": 320,
  "functionEndLine": 332,
  "numCommitsSeen": 94,
  "timeTaken": 2960,
  "changeHistory": [
    "6735b70b4ab618d4ebfb5a863180d14be9b8b2b2",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "625b099235cb10834738315a2e867d9bbf903956",
    "1ab5aa5279fc0ee9c27c859b57f6b017c27459bc",
    "3f371a0a644181b204111ee4e12c995fc7b5e5f5",
    "0294c49df60150bd9b363af5cfbc312222c12c69"
  ],
  "changeHistoryShort": {
    "6735b70b4ab618d4ebfb5a863180d14be9b8b2b2": "Ymultichange(Ymodifierchange,Ybodychange)",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "625b099235cb10834738315a2e867d9bbf903956": "Ymultichange(Yexceptionschange,Ybodychange)",
    "1ab5aa5279fc0ee9c27c859b57f6b017c27459bc": "Ymultichange(Yexceptionschange,Ybodychange)",
    "3f371a0a644181b204111ee4e12c995fc7b5e5f5": "Ymultichange(Yreturntypechange,Ybodychange)",
    "0294c49df60150bd9b363af5cfbc312222c12c69": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6735b70b4ab618d4ebfb5a863180d14be9b8b2b2": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "HADOOP-9414.  Refactor out FSLinkResolver and relevant helper methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1498720 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "01/07/13 3:09 PM",
      "commitName": "6735b70b4ab618d4ebfb5a863180d14be9b8b2b2",
      "commitAuthor": "Colin McCabe",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "HADOOP-9414.  Refactor out FSLinkResolver and relevant helper methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1498720 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "01/07/13 3:09 PM",
          "commitName": "6735b70b4ab618d4ebfb5a863180d14be9b8b2b2",
          "commitAuthor": "Colin McCabe",
          "commitDateOld": "03/04/13 12:43 PM",
          "commitNameOld": "0e9f61addc67e598cfcde0e9c537954ef00f311e",
          "commitAuthorOld": "Eli Collins",
          "daysBetweenCommits": 89.1,
          "commitsBetweenForRepo": 566,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,13 @@\n-  private AbstractFileSystem getFSofPath(final Path absOrFqPath)\n+  protected AbstractFileSystem getFSofPath(final Path absOrFqPath)\n       throws UnsupportedFileSystemException, IOException {\n-    checkNotSchemeWithRelative(absOrFqPath);\n-    if (!absOrFqPath.isAbsolute() \u0026\u0026 absOrFqPath.toUri().getScheme() \u003d\u003d null) {\n-      throw new HadoopIllegalArgumentException(\n-          \"FileContext Bug: path is relative\");\n-    }\n+    absOrFqPath.checkNotSchemeWithRelative();\n+    absOrFqPath.checkNotRelative();\n \n     try { \n       // Is it the default FS for this FileContext?\n       defaultFS.checkPath(absOrFqPath);\n       return defaultFS;\n     } catch (Exception e) { // it is different FileSystem\n       return getAbstractFileSystem(ugi, absOrFqPath.toUri(), conf);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected AbstractFileSystem getFSofPath(final Path absOrFqPath)\n      throws UnsupportedFileSystemException, IOException {\n    absOrFqPath.checkNotSchemeWithRelative();\n    absOrFqPath.checkNotRelative();\n\n    try { \n      // Is it the default FS for this FileContext?\n      defaultFS.checkPath(absOrFqPath);\n      return defaultFS;\n    } catch (Exception e) { // it is different FileSystem\n      return getAbstractFileSystem(ugi, absOrFqPath.toUri(), conf);\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileContext.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[protected]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-9414.  Refactor out FSLinkResolver and relevant helper methods.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1498720 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "01/07/13 3:09 PM",
          "commitName": "6735b70b4ab618d4ebfb5a863180d14be9b8b2b2",
          "commitAuthor": "Colin McCabe",
          "commitDateOld": "03/04/13 12:43 PM",
          "commitNameOld": "0e9f61addc67e598cfcde0e9c537954ef00f311e",
          "commitAuthorOld": "Eli Collins",
          "daysBetweenCommits": 89.1,
          "commitsBetweenForRepo": 566,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,13 @@\n-  private AbstractFileSystem getFSofPath(final Path absOrFqPath)\n+  protected AbstractFileSystem getFSofPath(final Path absOrFqPath)\n       throws UnsupportedFileSystemException, IOException {\n-    checkNotSchemeWithRelative(absOrFqPath);\n-    if (!absOrFqPath.isAbsolute() \u0026\u0026 absOrFqPath.toUri().getScheme() \u003d\u003d null) {\n-      throw new HadoopIllegalArgumentException(\n-          \"FileContext Bug: path is relative\");\n-    }\n+    absOrFqPath.checkNotSchemeWithRelative();\n+    absOrFqPath.checkNotRelative();\n \n     try { \n       // Is it the default FS for this FileContext?\n       defaultFS.checkPath(absOrFqPath);\n       return defaultFS;\n     } catch (Exception e) { // it is different FileSystem\n       return getAbstractFileSystem(ugi, absOrFqPath.toUri(), conf);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected AbstractFileSystem getFSofPath(final Path absOrFqPath)\n      throws UnsupportedFileSystemException, IOException {\n    absOrFqPath.checkNotSchemeWithRelative();\n    absOrFqPath.checkNotRelative();\n\n    try { \n      // Is it the default FS for this FileContext?\n      defaultFS.checkPath(absOrFqPath);\n      return defaultFS;\n    } catch (Exception e) { // it is different FileSystem\n      return getAbstractFileSystem(ugi, absOrFqPath.toUri(), conf);\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileContext.java",
          "extendedDetails": {}
        }
      ]
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private AbstractFileSystem getFSofPath(final Path absOrFqPath)\n      throws UnsupportedFileSystemException, IOException {\n    checkNotSchemeWithRelative(absOrFqPath);\n    if (!absOrFqPath.isAbsolute() \u0026\u0026 absOrFqPath.toUri().getScheme() \u003d\u003d null) {\n      throw new HadoopIllegalArgumentException(\n          \"FileContext Bug: path is relative\");\n    }\n\n    try { \n      // Is it the default FS for this FileContext?\n      defaultFS.checkPath(absOrFqPath);\n      return defaultFS;\n    } catch (Exception e) { // it is different FileSystem\n      return getAbstractFileSystem(ugi, absOrFqPath.toUri(), conf);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileContext.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/FileContext.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileContext.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private AbstractFileSystem getFSofPath(final Path absOrFqPath)\n      throws UnsupportedFileSystemException, IOException {\n    checkNotSchemeWithRelative(absOrFqPath);\n    if (!absOrFqPath.isAbsolute() \u0026\u0026 absOrFqPath.toUri().getScheme() \u003d\u003d null) {\n      throw new HadoopIllegalArgumentException(\n          \"FileContext Bug: path is relative\");\n    }\n\n    try { \n      // Is it the default FS for this FileContext?\n      defaultFS.checkPath(absOrFqPath);\n      return defaultFS;\n    } catch (Exception e) { // it is different FileSystem\n      return getAbstractFileSystem(ugi, absOrFqPath.toUri(), conf);\n    }\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/fs/FileContext.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/fs/FileContext.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/FileContext.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private AbstractFileSystem getFSofPath(final Path absOrFqPath)\n      throws UnsupportedFileSystemException, IOException {\n    checkNotSchemeWithRelative(absOrFqPath);\n    if (!absOrFqPath.isAbsolute() \u0026\u0026 absOrFqPath.toUri().getScheme() \u003d\u003d null) {\n      throw new HadoopIllegalArgumentException(\n          \"FileContext Bug: path is relative\");\n    }\n\n    try { \n      // Is it the default FS for this FileContext?\n      defaultFS.checkPath(absOrFqPath);\n      return defaultFS;\n    } catch (Exception e) { // it is different FileSystem\n      return getAbstractFileSystem(ugi, absOrFqPath.toUri(), conf);\n    }\n  }",
      "path": "common/src/java/org/apache/hadoop/fs/FileContext.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/fs/FileContext.java",
        "newPath": "common/src/java/org/apache/hadoop/fs/FileContext.java"
      }
    },
    "625b099235cb10834738315a2e867d9bbf903956": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "HADOOP-7171. Support UGI in FileContext API. Contributed by jitendra.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1092832 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "15/04/11 3:20 PM",
      "commitName": "625b099235cb10834738315a2e867d9bbf903956",
      "commitAuthor": "Jitendra Nath Pandey",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "HADOOP-7171. Support UGI in FileContext API. Contributed by jitendra.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1092832 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "15/04/11 3:20 PM",
          "commitName": "625b099235cb10834738315a2e867d9bbf903956",
          "commitAuthor": "Jitendra Nath Pandey",
          "commitDateOld": "14/04/11 6:51 PM",
          "commitNameOld": "a8dbce159679cd031f60e6151399fa2cd5ac9374",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 0.85,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,16 @@\n   private AbstractFileSystem getFSofPath(final Path absOrFqPath)\n-      throws UnsupportedFileSystemException {\n+      throws UnsupportedFileSystemException, IOException {\n     checkNotSchemeWithRelative(absOrFqPath);\n     if (!absOrFqPath.isAbsolute() \u0026\u0026 absOrFqPath.toUri().getScheme() \u003d\u003d null) {\n       throw new HadoopIllegalArgumentException(\n           \"FileContext Bug: path is relative\");\n     }\n \n     try { \n       // Is it the default FS for this FileContext?\n       defaultFS.checkPath(absOrFqPath);\n       return defaultFS;\n     } catch (Exception e) { // it is different FileSystem\n-      return AbstractFileSystem.get(absOrFqPath.toUri(), conf);\n+      return getAbstractFileSystem(ugi, absOrFqPath.toUri(), conf);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private AbstractFileSystem getFSofPath(final Path absOrFqPath)\n      throws UnsupportedFileSystemException, IOException {\n    checkNotSchemeWithRelative(absOrFqPath);\n    if (!absOrFqPath.isAbsolute() \u0026\u0026 absOrFqPath.toUri().getScheme() \u003d\u003d null) {\n      throw new HadoopIllegalArgumentException(\n          \"FileContext Bug: path is relative\");\n    }\n\n    try { \n      // Is it the default FS for this FileContext?\n      defaultFS.checkPath(absOrFqPath);\n      return defaultFS;\n    } catch (Exception e) { // it is different FileSystem\n      return getAbstractFileSystem(ugi, absOrFqPath.toUri(), conf);\n    }\n  }",
          "path": "src/java/org/apache/hadoop/fs/FileContext.java",
          "extendedDetails": {
            "oldValue": "[UnsupportedFileSystemException]",
            "newValue": "[UnsupportedFileSystemException, IOException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-7171. Support UGI in FileContext API. Contributed by jitendra.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1092832 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "15/04/11 3:20 PM",
          "commitName": "625b099235cb10834738315a2e867d9bbf903956",
          "commitAuthor": "Jitendra Nath Pandey",
          "commitDateOld": "14/04/11 6:51 PM",
          "commitNameOld": "a8dbce159679cd031f60e6151399fa2cd5ac9374",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 0.85,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,16 @@\n   private AbstractFileSystem getFSofPath(final Path absOrFqPath)\n-      throws UnsupportedFileSystemException {\n+      throws UnsupportedFileSystemException, IOException {\n     checkNotSchemeWithRelative(absOrFqPath);\n     if (!absOrFqPath.isAbsolute() \u0026\u0026 absOrFqPath.toUri().getScheme() \u003d\u003d null) {\n       throw new HadoopIllegalArgumentException(\n           \"FileContext Bug: path is relative\");\n     }\n \n     try { \n       // Is it the default FS for this FileContext?\n       defaultFS.checkPath(absOrFqPath);\n       return defaultFS;\n     } catch (Exception e) { // it is different FileSystem\n-      return AbstractFileSystem.get(absOrFqPath.toUri(), conf);\n+      return getAbstractFileSystem(ugi, absOrFqPath.toUri(), conf);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private AbstractFileSystem getFSofPath(final Path absOrFqPath)\n      throws UnsupportedFileSystemException, IOException {\n    checkNotSchemeWithRelative(absOrFqPath);\n    if (!absOrFqPath.isAbsolute() \u0026\u0026 absOrFqPath.toUri().getScheme() \u003d\u003d null) {\n      throw new HadoopIllegalArgumentException(\n          \"FileContext Bug: path is relative\");\n    }\n\n    try { \n      // Is it the default FS for this FileContext?\n      defaultFS.checkPath(absOrFqPath);\n      return defaultFS;\n    } catch (Exception e) { // it is different FileSystem\n      return getAbstractFileSystem(ugi, absOrFqPath.toUri(), conf);\n    }\n  }",
          "path": "src/java/org/apache/hadoop/fs/FileContext.java",
          "extendedDetails": {}
        }
      ]
    },
    "1ab5aa5279fc0ee9c27c859b57f6b017c27459bc": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "   HADOOP-6537 Declare more detailed exceptions in FileContext and AbstractFileSystem\n   (Suresh Srinivas via Sanjay Radia)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@918309 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/03/10 6:48 PM",
      "commitName": "1ab5aa5279fc0ee9c27c859b57f6b017c27459bc",
      "commitAuthor": "Sanjay Radia",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "   HADOOP-6537 Declare more detailed exceptions in FileContext and AbstractFileSystem\n   (Suresh Srinivas via Sanjay Radia)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@918309 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "02/03/10 6:48 PM",
          "commitName": "1ab5aa5279fc0ee9c27c859b57f6b017c27459bc",
          "commitAuthor": "Sanjay Radia",
          "commitDateOld": "16/02/10 1:43 PM",
          "commitNameOld": "ea605b8cd79163444feead75d7b55dbd4ab537a0",
          "commitAuthorOld": "Sanjay Radia",
          "daysBetweenCommits": 14.21,
          "commitsBetweenForRepo": 24,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,16 @@\n   private AbstractFileSystem getFSofPath(final Path absOrFqPath)\n-    throws IOException {\n+      throws UnsupportedFileSystemException {\n     checkNotSchemeWithRelative(absOrFqPath);\n     if (!absOrFqPath.isAbsolute() \u0026\u0026 absOrFqPath.toUri().getScheme() \u003d\u003d null) {\n-      throw new IllegalArgumentException(\n+      throw new HadoopIllegalArgumentException(\n           \"FileContext Bug: path is relative\");\n     }\n \n     try { \n       // Is it the default FS for this FileContext?\n       defaultFS.checkPath(absOrFqPath);\n       return defaultFS;\n     } catch (Exception e) { // it is different FileSystem\n       return AbstractFileSystem.get(absOrFqPath.toUri(), conf);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private AbstractFileSystem getFSofPath(final Path absOrFqPath)\n      throws UnsupportedFileSystemException {\n    checkNotSchemeWithRelative(absOrFqPath);\n    if (!absOrFqPath.isAbsolute() \u0026\u0026 absOrFqPath.toUri().getScheme() \u003d\u003d null) {\n      throw new HadoopIllegalArgumentException(\n          \"FileContext Bug: path is relative\");\n    }\n\n    try { \n      // Is it the default FS for this FileContext?\n      defaultFS.checkPath(absOrFqPath);\n      return defaultFS;\n    } catch (Exception e) { // it is different FileSystem\n      return AbstractFileSystem.get(absOrFqPath.toUri(), conf);\n    }\n  }",
          "path": "src/java/org/apache/hadoop/fs/FileContext.java",
          "extendedDetails": {
            "oldValue": "[IOException]",
            "newValue": "[UnsupportedFileSystemException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "   HADOOP-6537 Declare more detailed exceptions in FileContext and AbstractFileSystem\n   (Suresh Srinivas via Sanjay Radia)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@918309 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "02/03/10 6:48 PM",
          "commitName": "1ab5aa5279fc0ee9c27c859b57f6b017c27459bc",
          "commitAuthor": "Sanjay Radia",
          "commitDateOld": "16/02/10 1:43 PM",
          "commitNameOld": "ea605b8cd79163444feead75d7b55dbd4ab537a0",
          "commitAuthorOld": "Sanjay Radia",
          "daysBetweenCommits": 14.21,
          "commitsBetweenForRepo": 24,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,16 @@\n   private AbstractFileSystem getFSofPath(final Path absOrFqPath)\n-    throws IOException {\n+      throws UnsupportedFileSystemException {\n     checkNotSchemeWithRelative(absOrFqPath);\n     if (!absOrFqPath.isAbsolute() \u0026\u0026 absOrFqPath.toUri().getScheme() \u003d\u003d null) {\n-      throw new IllegalArgumentException(\n+      throw new HadoopIllegalArgumentException(\n           \"FileContext Bug: path is relative\");\n     }\n \n     try { \n       // Is it the default FS for this FileContext?\n       defaultFS.checkPath(absOrFqPath);\n       return defaultFS;\n     } catch (Exception e) { // it is different FileSystem\n       return AbstractFileSystem.get(absOrFqPath.toUri(), conf);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private AbstractFileSystem getFSofPath(final Path absOrFqPath)\n      throws UnsupportedFileSystemException {\n    checkNotSchemeWithRelative(absOrFqPath);\n    if (!absOrFqPath.isAbsolute() \u0026\u0026 absOrFqPath.toUri().getScheme() \u003d\u003d null) {\n      throw new HadoopIllegalArgumentException(\n          \"FileContext Bug: path is relative\");\n    }\n\n    try { \n      // Is it the default FS for this FileContext?\n      defaultFS.checkPath(absOrFqPath);\n      return defaultFS;\n    } catch (Exception e) { // it is different FileSystem\n      return AbstractFileSystem.get(absOrFqPath.toUri(), conf);\n    }\n  }",
          "path": "src/java/org/apache/hadoop/fs/FileContext.java",
          "extendedDetails": {}
        }
      ]
    },
    "3f371a0a644181b204111ee4e12c995fc7b5e5f5": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "Hadoop-6223. Add new file system interface AbstractFileSystem with implementation of some file systems that delegate to old FileSystem. Contributed by Sanjay Radia.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@831475 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/10/09 3:24 PM",
      "commitName": "3f371a0a644181b204111ee4e12c995fc7b5e5f5",
      "commitAuthor": "Suresh Srinivas",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "Hadoop-6223. Add new file system interface AbstractFileSystem with implementation of some file systems that delegate to old FileSystem. Contributed by Sanjay Radia.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@831475 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "30/10/09 3:24 PM",
          "commitName": "3f371a0a644181b204111ee4e12c995fc7b5e5f5",
          "commitAuthor": "Suresh Srinivas",
          "commitDateOld": "07/10/09 10:07 AM",
          "commitNameOld": "64f537da0a216055d5b6eae49a2a9129189cacbf",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 23.22,
          "commitsBetweenForRepo": 23,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,16 @@\n-  private FileSystem getFSofPath(final Path absOrFqPath) throws IOException {\n+  private AbstractFileSystem getFSofPath(final Path absOrFqPath)\n+    throws IOException {\n     checkNotSchemeWithRelative(absOrFqPath);\n     if (!absOrFqPath.isAbsolute() \u0026\u0026 absOrFqPath.toUri().getScheme() \u003d\u003d null) {\n       throw new IllegalArgumentException(\n           \"FileContext Bug: path is relative\");\n     }\n-    \n-    // TBD cleanup this impl once we create a new FileSystem to replace current\n-    // one - see HADOOP-6223.\n+\n     try { \n       // Is it the default FS for this FileContext?\n       defaultFS.checkPath(absOrFqPath);\n       return defaultFS;\n     } catch (Exception e) { // it is different FileSystem\n-      return FileSystem.get(absOrFqPath.toUri(), conf);\n+      return AbstractFileSystem.get(absOrFqPath.toUri(), conf);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private AbstractFileSystem getFSofPath(final Path absOrFqPath)\n    throws IOException {\n    checkNotSchemeWithRelative(absOrFqPath);\n    if (!absOrFqPath.isAbsolute() \u0026\u0026 absOrFqPath.toUri().getScheme() \u003d\u003d null) {\n      throw new IllegalArgumentException(\n          \"FileContext Bug: path is relative\");\n    }\n\n    try { \n      // Is it the default FS for this FileContext?\n      defaultFS.checkPath(absOrFqPath);\n      return defaultFS;\n    } catch (Exception e) { // it is different FileSystem\n      return AbstractFileSystem.get(absOrFqPath.toUri(), conf);\n    }\n  }",
          "path": "src/java/org/apache/hadoop/fs/FileContext.java",
          "extendedDetails": {
            "oldValue": "FileSystem",
            "newValue": "AbstractFileSystem"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Hadoop-6223. Add new file system interface AbstractFileSystem with implementation of some file systems that delegate to old FileSystem. Contributed by Sanjay Radia.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@831475 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "30/10/09 3:24 PM",
          "commitName": "3f371a0a644181b204111ee4e12c995fc7b5e5f5",
          "commitAuthor": "Suresh Srinivas",
          "commitDateOld": "07/10/09 10:07 AM",
          "commitNameOld": "64f537da0a216055d5b6eae49a2a9129189cacbf",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 23.22,
          "commitsBetweenForRepo": 23,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,16 @@\n-  private FileSystem getFSofPath(final Path absOrFqPath) throws IOException {\n+  private AbstractFileSystem getFSofPath(final Path absOrFqPath)\n+    throws IOException {\n     checkNotSchemeWithRelative(absOrFqPath);\n     if (!absOrFqPath.isAbsolute() \u0026\u0026 absOrFqPath.toUri().getScheme() \u003d\u003d null) {\n       throw new IllegalArgumentException(\n           \"FileContext Bug: path is relative\");\n     }\n-    \n-    // TBD cleanup this impl once we create a new FileSystem to replace current\n-    // one - see HADOOP-6223.\n+\n     try { \n       // Is it the default FS for this FileContext?\n       defaultFS.checkPath(absOrFqPath);\n       return defaultFS;\n     } catch (Exception e) { // it is different FileSystem\n-      return FileSystem.get(absOrFqPath.toUri(), conf);\n+      return AbstractFileSystem.get(absOrFqPath.toUri(), conf);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private AbstractFileSystem getFSofPath(final Path absOrFqPath)\n    throws IOException {\n    checkNotSchemeWithRelative(absOrFqPath);\n    if (!absOrFqPath.isAbsolute() \u0026\u0026 absOrFqPath.toUri().getScheme() \u003d\u003d null) {\n      throw new IllegalArgumentException(\n          \"FileContext Bug: path is relative\");\n    }\n\n    try { \n      // Is it the default FS for this FileContext?\n      defaultFS.checkPath(absOrFqPath);\n      return defaultFS;\n    } catch (Exception e) { // it is different FileSystem\n      return AbstractFileSystem.get(absOrFqPath.toUri(), conf);\n    }\n  }",
          "path": "src/java/org/apache/hadoop/fs/FileContext.java",
          "extendedDetails": {}
        }
      ]
    },
    "0294c49df60150bd9b363af5cfbc312222c12c69": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-4952. Add new improved file system interface FileContext for the application writer. Contributed by Sanjay Radia.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@816398 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/09/09 3:27 PM",
      "commitName": "0294c49df60150bd9b363af5cfbc312222c12c69",
      "commitAuthor": "Suresh Srinivas",
      "diff": "@@ -0,0 +1,17 @@\n+  private FileSystem getFSofPath(final Path absOrFqPath) throws IOException {\n+    checkNotSchemeWithRelative(absOrFqPath);\n+    if (!absOrFqPath.isAbsolute() \u0026\u0026 absOrFqPath.toUri().getScheme() \u003d\u003d null) {\n+      throw new IllegalArgumentException(\n+          \"FileContext Bug: path is relative\");\n+    }\n+    \n+    // TBD cleanup this impl once we create a new FileSystem to replace current\n+    // one - see HADOOP-6223.\n+    try { \n+      // Is it the default FS for this FileContext?\n+      defaultFS.checkPath(absOrFqPath);\n+      return defaultFS;\n+    } catch (Exception e) { // it is different FileSystem\n+      return FileSystem.get(absOrFqPath.toUri(), conf);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private FileSystem getFSofPath(final Path absOrFqPath) throws IOException {\n    checkNotSchemeWithRelative(absOrFqPath);\n    if (!absOrFqPath.isAbsolute() \u0026\u0026 absOrFqPath.toUri().getScheme() \u003d\u003d null) {\n      throw new IllegalArgumentException(\n          \"FileContext Bug: path is relative\");\n    }\n    \n    // TBD cleanup this impl once we create a new FileSystem to replace current\n    // one - see HADOOP-6223.\n    try { \n      // Is it the default FS for this FileContext?\n      defaultFS.checkPath(absOrFqPath);\n      return defaultFS;\n    } catch (Exception e) { // it is different FileSystem\n      return FileSystem.get(absOrFqPath.toUri(), conf);\n    }\n  }",
      "path": "src/java/org/apache/hadoop/fs/FileContext.java"
    }
  }
}