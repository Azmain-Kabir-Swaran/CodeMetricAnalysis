{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ApplicationCLI.java",
  "functionName": "addApplicationOptions",
  "functionId": "addApplicationOptions___opts-Options",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/ApplicationCLI.java",
  "functionStartLine": 792,
  "functionEndLine": 941,
  "numCommitsSeen": 72,
  "timeTaken": 1273,
  "changeHistory": [
    "206e6339469ca6d362382efbb488089ece830e98"
  ],
  "changeHistoryShort": {
    "206e6339469ca6d362382efbb488089ece830e98": "Yintroduced"
  },
  "changeHistoryDetails": {
    "206e6339469ca6d362382efbb488089ece830e98": {
      "type": "Yintroduced",
      "commitMessage": "YARN-9453. Clean up code long if-else chain in ApplicationCLI#run. Contributed by Wanqiang Ji.\n",
      "commitDate": "13/05/19 11:11 AM",
      "commitName": "206e6339469ca6d362382efbb488089ece830e98",
      "commitAuthor": "Giovanni Matteo Fumarola",
      "diff": "@@ -0,0 +1,150 @@\n+  private void addApplicationOptions(Options opts) {\n+    opts.addOption(STATUS_CMD, true, \"Prints the status of the application. \"\n+        + \"If app ID is provided, it prints the generic YARN application \"\n+        + \"status. If name is provided, it prints the application specific \"\n+        + \"status based on app\u0027s own implementation, and -appTypes option \"\n+        + \"must be specified unless it is the default yarn-service type.\");\n+    opts.addOption(LIST_CMD, false, \"List applications. Supports optional use \"\n+        + \"of -appTypes to filter applications based on application type, \"\n+        + \"-appStates to filter applications based on application state and \"\n+        + \"-appTags to filter applications based on application tag.\");\n+    opts.addOption(MOVE_TO_QUEUE_CMD, true, \"Moves the application to a \"\n+        + \"different queue. Deprecated command. Use \u0027changeQueue\u0027 instead.\");\n+    opts.addOption(QUEUE_CMD, true, \"Works with the movetoqueue command to\"\n+        + \" specify which queue to move an application to.\");\n+    opts.addOption(HELP_CMD, false, \"Displays help for all commands.\");\n+    Option appTypeOpt \u003d new Option(APP_TYPE_CMD, true, \"Works with -list to \"\n+        + \"filter applications based on input comma-separated list of \"\n+        + \"application types.\");\n+    appTypeOpt.setValueSeparator(\u0027,\u0027);\n+    appTypeOpt.setArgs(Option.UNLIMITED_VALUES);\n+    appTypeOpt.setArgName(\"Types\");\n+    opts.addOption(appTypeOpt);\n+    Option appStateOpt \u003d new Option(APP_STATE_CMD, true, \"Works with -list to \"\n+        + \"filter applications based on input comma-separated list of \"\n+        + \"application states. \" + getAllValidApplicationStates());\n+    appStateOpt.setValueSeparator(\u0027,\u0027);\n+    appStateOpt.setArgs(Option.UNLIMITED_VALUES);\n+    appStateOpt.setArgName(\"States\");\n+    opts.addOption(appStateOpt);\n+    Option appTagOpt \u003d new Option(APP_TAG_CMD, true, \"Works with -list to \"\n+        + \"filter applications based on input comma-separated list of \"\n+        + \"application tags.\");\n+    appTagOpt.setValueSeparator(\u0027,\u0027);\n+    appTagOpt.setArgs(Option.UNLIMITED_VALUES);\n+    appTagOpt.setArgName(\"Tags\");\n+    opts.addOption(appTagOpt);\n+    opts.addOption(APP_ID, true, \"Specify Application Id to be operated\");\n+    opts.addOption(UPDATE_PRIORITY, true, \"update priority of an application. \"\n+        + \"ApplicationId can be passed using \u0027appId\u0027 option.\");\n+    opts.addOption(UPDATE_LIFETIME, true, \"update timeout of an application \"\n+        + \"from NOW. ApplicationId can be passed using \u0027appId\u0027 option. Timeout \"\n+        + \"value is in seconds.\");\n+    opts.addOption(CHANGE_APPLICATION_QUEUE, true, \"Moves application to a new \"\n+        + \"queue. ApplicationId can be  passed using \u0027appId\u0027 option. \"\n+        + \"\u0027movetoqueue\u0027 command is  deprecated, this new command \"\n+        + \"\u0027changeQueue\u0027 performs same functionality.\");\n+    Option killOpt \u003d new Option(KILL_CMD, true, \"Kills the application. Set of \"\n+        + \"applications can be provided separated with space\");\n+    killOpt.setValueSeparator(\u0027 \u0027);\n+    killOpt.setArgs(Option.UNLIMITED_VALUES);\n+    killOpt.setArgName(\"Application ID\");\n+    opts.addOption(killOpt);\n+    opts.getOption(MOVE_TO_QUEUE_CMD).setArgName(\"Application ID\");\n+    opts.getOption(QUEUE_CMD).setArgName(\"Queue Name\");\n+    opts.getOption(STATUS_CMD).setArgName(\"Application Name or ID\");\n+    opts.getOption(APP_ID).setArgName(\"Application ID\");\n+    opts.getOption(UPDATE_PRIORITY).setArgName(\"Priority\");\n+    opts.getOption(UPDATE_LIFETIME).setArgName(\"Timeout\");\n+    opts.getOption(CHANGE_APPLICATION_QUEUE).setArgName(\"Queue Name\");\n+    opts.addOption(LAUNCH_CMD, true, \"Launches application from specification \"\n+        + \"file (saves specification and starts application). Options \"\n+        + \"-updateLifetime and -changeQueue can be specified to alter the \"\n+        + \"values provided in the file. Supports -appTypes option to specify \"\n+        + \"which client implementation to use.\");\n+    opts.addOption(STOP_CMD, true, \"Stops application gracefully (may be \"\n+        + \"started again later). If name is provided, appType must be \"\n+        + \"provided unless it is the default yarn-service. If ID is provided, \"\n+        + \"the appType will be looked up. Supports -appTypes option to specify \"\n+        + \"which client implementation to use.\");\n+    opts.addOption(START_CMD, true, \"Starts a previously saved application. \"\n+        + \"Supports -appTypes option to specify which client implementation \"\n+        + \"to use.\");\n+    opts.addOption(SAVE_CMD, true, \"Saves specification file for an \"\n+        + \"application. Options -updateLifetime and -changeQueue can be \"\n+        + \"specified to alter the values provided in the file. Supports \"\n+        + \"-appTypes option to specify which client implementation to use.\");\n+    opts.addOption(DESTROY_CMD, true, \"Destroys a saved application \"\n+        + \"specification and removes all application data permanently. \"\n+        + \"Supports -appTypes option to specify which client implementation \"\n+        + \"to use.\");\n+    opts.addOption(FLEX_CMD, true, \"Changes number of running containers for a \"\n+        + \"component of an application / long-running service. Requires \"\n+        + \"-component option. If name is provided, appType must be provided \"\n+        + \"unless it is the default yarn-service. If ID is provided, the \"\n+        + \"appType will be looked up. Supports -appTypes option to specify \"\n+        + \"which client implementation to use.\");\n+    opts.addOption(DECOMMISSION, true, \"Decommissions component instances for \"\n+        + \"an application / long-running service. Requires -instances option. \"\n+        + \"Supports -appTypes option to specify which client implementation to \"\n+        + \"use.\");\n+    opts.addOption(COMPONENT, true, \"Works with -flex option to change the \"\n+        + \"number of components/containers running for an application / \"\n+        + \"long-running service. Supports absolute or relative changes, such \"\n+        + \"as +1, 2, or -3.\");\n+    opts.addOption(ENABLE_FAST_LAUNCH, true, \"Uploads AM dependencies to HDFS \"\n+        + \"to make future launches faster. Supports -appTypes option to \"\n+        + \"specify which client implementation to use. Optionally a \"\n+        + \"destination folder for the tarball can be specified.\");\n+    opts.addOption(UPGRADE_CMD, true, \"Upgrades an application/long-running \"\n+        + \"service. It requires either -initiate, -instances, or -finalize \"\n+        + \"options.\");\n+    opts.addOption(UPGRADE_EXPRESS, true, \"Works with -upgrade option to \"\n+        + \"perform express upgrade.  It requires the upgraded application \"\n+        + \"specification file.\");\n+    opts.addOption(UPGRADE_INITIATE, true, \"Works with -upgrade option to \"\n+        + \"initiate the application upgrade. It requires the upgraded \"\n+        + \"application specification file.\");\n+    opts.addOption(COMPONENT_INSTS, true, \"Works with -upgrade option to \"\n+        + \"trigger the upgrade of specified component instances of the \"\n+        + \"application. Also works with -decommission option to decommission \"\n+        + \"specified component instances. Multiple instances should be \"\n+        + \"separated by commas.\");\n+    opts.addOption(COMPONENTS, true, \"Works with -upgrade option to trigger \"\n+        + \"the upgrade of specified components of the application. Multiple \"\n+        + \"components should be separated by commas.\");\n+    opts.addOption(UPGRADE_FINALIZE, false, \"Works with -upgrade option to \"\n+        + \"finalize the upgrade.\");\n+    opts.addOption(UPGRADE_AUTO_FINALIZE, false, \"Works with -upgrade and \"\n+        + \"-initiate options to initiate the upgrade of the application with \"\n+        + \"the ability to finalize the upgrade automatically.\");\n+    opts.addOption(UPGRADE_CANCEL, false, \"Works with -upgrade option to \"\n+        + \"cancel current upgrade.\");\n+    opts.addOption(CLUSTER_ID_OPTION, true, \"ClusterId. By default, it will \"\n+        + \"take default cluster id from the RM\");\n+    opts.getOption(LAUNCH_CMD).setArgName(\"Application Name\u003e \u003cFile Name\");\n+    opts.getOption(LAUNCH_CMD).setArgs(2);\n+    opts.getOption(START_CMD).setArgName(\"Application Name\");\n+    opts.getOption(STOP_CMD).setArgName(\"Application Name or ID\");\n+    opts.getOption(SAVE_CMD).setArgName(\"Application Name\u003e \u003cFile Name\");\n+    opts.getOption(SAVE_CMD).setArgs(2);\n+    opts.getOption(DESTROY_CMD).setArgName(\"Application Name\");\n+    opts.getOption(FLEX_CMD).setArgName(\"Application Name or ID\");\n+    opts.getOption(COMPONENT).setArgName(\"Component Name\u003e \u003cCount\");\n+    opts.getOption(COMPONENT).setArgs(2);\n+    opts.getOption(ENABLE_FAST_LAUNCH).setOptionalArg(true);\n+    opts.getOption(ENABLE_FAST_LAUNCH).setArgName(\"Destination Folder\");\n+    opts.getOption(UPGRADE_CMD).setArgName(\"Application Name\");\n+    opts.getOption(UPGRADE_CMD).setArgs(1);\n+    opts.getOption(UPGRADE_INITIATE).setArgName(\"File Name\");\n+    opts.getOption(UPGRADE_INITIATE).setArgs(1);\n+    opts.getOption(COMPONENT_INSTS).setArgName(\"Component Instances\");\n+    opts.getOption(COMPONENT_INSTS).setValueSeparator(\u0027,\u0027);\n+    opts.getOption(COMPONENT_INSTS).setArgs(Option.UNLIMITED_VALUES);\n+    opts.getOption(COMPONENTS).setArgName(\"Components\");\n+    opts.getOption(COMPONENTS).setValueSeparator(\u0027,\u0027);\n+    opts.getOption(COMPONENTS).setArgs(Option.UNLIMITED_VALUES);\n+    opts.getOption(DECOMMISSION).setArgName(\"Application Name\");\n+    opts.getOption(DECOMMISSION).setArgs(1);\n+    opts.getOption(CLUSTER_ID_OPTION).setArgName(\"Cluster ID\");\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void addApplicationOptions(Options opts) {\n    opts.addOption(STATUS_CMD, true, \"Prints the status of the application. \"\n        + \"If app ID is provided, it prints the generic YARN application \"\n        + \"status. If name is provided, it prints the application specific \"\n        + \"status based on app\u0027s own implementation, and -appTypes option \"\n        + \"must be specified unless it is the default yarn-service type.\");\n    opts.addOption(LIST_CMD, false, \"List applications. Supports optional use \"\n        + \"of -appTypes to filter applications based on application type, \"\n        + \"-appStates to filter applications based on application state and \"\n        + \"-appTags to filter applications based on application tag.\");\n    opts.addOption(MOVE_TO_QUEUE_CMD, true, \"Moves the application to a \"\n        + \"different queue. Deprecated command. Use \u0027changeQueue\u0027 instead.\");\n    opts.addOption(QUEUE_CMD, true, \"Works with the movetoqueue command to\"\n        + \" specify which queue to move an application to.\");\n    opts.addOption(HELP_CMD, false, \"Displays help for all commands.\");\n    Option appTypeOpt \u003d new Option(APP_TYPE_CMD, true, \"Works with -list to \"\n        + \"filter applications based on input comma-separated list of \"\n        + \"application types.\");\n    appTypeOpt.setValueSeparator(\u0027,\u0027);\n    appTypeOpt.setArgs(Option.UNLIMITED_VALUES);\n    appTypeOpt.setArgName(\"Types\");\n    opts.addOption(appTypeOpt);\n    Option appStateOpt \u003d new Option(APP_STATE_CMD, true, \"Works with -list to \"\n        + \"filter applications based on input comma-separated list of \"\n        + \"application states. \" + getAllValidApplicationStates());\n    appStateOpt.setValueSeparator(\u0027,\u0027);\n    appStateOpt.setArgs(Option.UNLIMITED_VALUES);\n    appStateOpt.setArgName(\"States\");\n    opts.addOption(appStateOpt);\n    Option appTagOpt \u003d new Option(APP_TAG_CMD, true, \"Works with -list to \"\n        + \"filter applications based on input comma-separated list of \"\n        + \"application tags.\");\n    appTagOpt.setValueSeparator(\u0027,\u0027);\n    appTagOpt.setArgs(Option.UNLIMITED_VALUES);\n    appTagOpt.setArgName(\"Tags\");\n    opts.addOption(appTagOpt);\n    opts.addOption(APP_ID, true, \"Specify Application Id to be operated\");\n    opts.addOption(UPDATE_PRIORITY, true, \"update priority of an application. \"\n        + \"ApplicationId can be passed using \u0027appId\u0027 option.\");\n    opts.addOption(UPDATE_LIFETIME, true, \"update timeout of an application \"\n        + \"from NOW. ApplicationId can be passed using \u0027appId\u0027 option. Timeout \"\n        + \"value is in seconds.\");\n    opts.addOption(CHANGE_APPLICATION_QUEUE, true, \"Moves application to a new \"\n        + \"queue. ApplicationId can be  passed using \u0027appId\u0027 option. \"\n        + \"\u0027movetoqueue\u0027 command is  deprecated, this new command \"\n        + \"\u0027changeQueue\u0027 performs same functionality.\");\n    Option killOpt \u003d new Option(KILL_CMD, true, \"Kills the application. Set of \"\n        + \"applications can be provided separated with space\");\n    killOpt.setValueSeparator(\u0027 \u0027);\n    killOpt.setArgs(Option.UNLIMITED_VALUES);\n    killOpt.setArgName(\"Application ID\");\n    opts.addOption(killOpt);\n    opts.getOption(MOVE_TO_QUEUE_CMD).setArgName(\"Application ID\");\n    opts.getOption(QUEUE_CMD).setArgName(\"Queue Name\");\n    opts.getOption(STATUS_CMD).setArgName(\"Application Name or ID\");\n    opts.getOption(APP_ID).setArgName(\"Application ID\");\n    opts.getOption(UPDATE_PRIORITY).setArgName(\"Priority\");\n    opts.getOption(UPDATE_LIFETIME).setArgName(\"Timeout\");\n    opts.getOption(CHANGE_APPLICATION_QUEUE).setArgName(\"Queue Name\");\n    opts.addOption(LAUNCH_CMD, true, \"Launches application from specification \"\n        + \"file (saves specification and starts application). Options \"\n        + \"-updateLifetime and -changeQueue can be specified to alter the \"\n        + \"values provided in the file. Supports -appTypes option to specify \"\n        + \"which client implementation to use.\");\n    opts.addOption(STOP_CMD, true, \"Stops application gracefully (may be \"\n        + \"started again later). If name is provided, appType must be \"\n        + \"provided unless it is the default yarn-service. If ID is provided, \"\n        + \"the appType will be looked up. Supports -appTypes option to specify \"\n        + \"which client implementation to use.\");\n    opts.addOption(START_CMD, true, \"Starts a previously saved application. \"\n        + \"Supports -appTypes option to specify which client implementation \"\n        + \"to use.\");\n    opts.addOption(SAVE_CMD, true, \"Saves specification file for an \"\n        + \"application. Options -updateLifetime and -changeQueue can be \"\n        + \"specified to alter the values provided in the file. Supports \"\n        + \"-appTypes option to specify which client implementation to use.\");\n    opts.addOption(DESTROY_CMD, true, \"Destroys a saved application \"\n        + \"specification and removes all application data permanently. \"\n        + \"Supports -appTypes option to specify which client implementation \"\n        + \"to use.\");\n    opts.addOption(FLEX_CMD, true, \"Changes number of running containers for a \"\n        + \"component of an application / long-running service. Requires \"\n        + \"-component option. If name is provided, appType must be provided \"\n        + \"unless it is the default yarn-service. If ID is provided, the \"\n        + \"appType will be looked up. Supports -appTypes option to specify \"\n        + \"which client implementation to use.\");\n    opts.addOption(DECOMMISSION, true, \"Decommissions component instances for \"\n        + \"an application / long-running service. Requires -instances option. \"\n        + \"Supports -appTypes option to specify which client implementation to \"\n        + \"use.\");\n    opts.addOption(COMPONENT, true, \"Works with -flex option to change the \"\n        + \"number of components/containers running for an application / \"\n        + \"long-running service. Supports absolute or relative changes, such \"\n        + \"as +1, 2, or -3.\");\n    opts.addOption(ENABLE_FAST_LAUNCH, true, \"Uploads AM dependencies to HDFS \"\n        + \"to make future launches faster. Supports -appTypes option to \"\n        + \"specify which client implementation to use. Optionally a \"\n        + \"destination folder for the tarball can be specified.\");\n    opts.addOption(UPGRADE_CMD, true, \"Upgrades an application/long-running \"\n        + \"service. It requires either -initiate, -instances, or -finalize \"\n        + \"options.\");\n    opts.addOption(UPGRADE_EXPRESS, true, \"Works with -upgrade option to \"\n        + \"perform express upgrade.  It requires the upgraded application \"\n        + \"specification file.\");\n    opts.addOption(UPGRADE_INITIATE, true, \"Works with -upgrade option to \"\n        + \"initiate the application upgrade. It requires the upgraded \"\n        + \"application specification file.\");\n    opts.addOption(COMPONENT_INSTS, true, \"Works with -upgrade option to \"\n        + \"trigger the upgrade of specified component instances of the \"\n        + \"application. Also works with -decommission option to decommission \"\n        + \"specified component instances. Multiple instances should be \"\n        + \"separated by commas.\");\n    opts.addOption(COMPONENTS, true, \"Works with -upgrade option to trigger \"\n        + \"the upgrade of specified components of the application. Multiple \"\n        + \"components should be separated by commas.\");\n    opts.addOption(UPGRADE_FINALIZE, false, \"Works with -upgrade option to \"\n        + \"finalize the upgrade.\");\n    opts.addOption(UPGRADE_AUTO_FINALIZE, false, \"Works with -upgrade and \"\n        + \"-initiate options to initiate the upgrade of the application with \"\n        + \"the ability to finalize the upgrade automatically.\");\n    opts.addOption(UPGRADE_CANCEL, false, \"Works with -upgrade option to \"\n        + \"cancel current upgrade.\");\n    opts.addOption(CLUSTER_ID_OPTION, true, \"ClusterId. By default, it will \"\n        + \"take default cluster id from the RM\");\n    opts.getOption(LAUNCH_CMD).setArgName(\"Application Name\u003e \u003cFile Name\");\n    opts.getOption(LAUNCH_CMD).setArgs(2);\n    opts.getOption(START_CMD).setArgName(\"Application Name\");\n    opts.getOption(STOP_CMD).setArgName(\"Application Name or ID\");\n    opts.getOption(SAVE_CMD).setArgName(\"Application Name\u003e \u003cFile Name\");\n    opts.getOption(SAVE_CMD).setArgs(2);\n    opts.getOption(DESTROY_CMD).setArgName(\"Application Name\");\n    opts.getOption(FLEX_CMD).setArgName(\"Application Name or ID\");\n    opts.getOption(COMPONENT).setArgName(\"Component Name\u003e \u003cCount\");\n    opts.getOption(COMPONENT).setArgs(2);\n    opts.getOption(ENABLE_FAST_LAUNCH).setOptionalArg(true);\n    opts.getOption(ENABLE_FAST_LAUNCH).setArgName(\"Destination Folder\");\n    opts.getOption(UPGRADE_CMD).setArgName(\"Application Name\");\n    opts.getOption(UPGRADE_CMD).setArgs(1);\n    opts.getOption(UPGRADE_INITIATE).setArgName(\"File Name\");\n    opts.getOption(UPGRADE_INITIATE).setArgs(1);\n    opts.getOption(COMPONENT_INSTS).setArgName(\"Component Instances\");\n    opts.getOption(COMPONENT_INSTS).setValueSeparator(\u0027,\u0027);\n    opts.getOption(COMPONENT_INSTS).setArgs(Option.UNLIMITED_VALUES);\n    opts.getOption(COMPONENTS).setArgName(\"Components\");\n    opts.getOption(COMPONENTS).setValueSeparator(\u0027,\u0027);\n    opts.getOption(COMPONENTS).setArgs(Option.UNLIMITED_VALUES);\n    opts.getOption(DECOMMISSION).setArgName(\"Application Name\");\n    opts.getOption(DECOMMISSION).setArgs(1);\n    opts.getOption(CLUSTER_ID_OPTION).setArgName(\"Cluster ID\");\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/ApplicationCLI.java"
    }
  }
}