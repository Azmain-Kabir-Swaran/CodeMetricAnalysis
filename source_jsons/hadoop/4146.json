{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ByteArrayManager.java",
  "functionName": "recycle",
  "functionId": "recycle___array-byte[]",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/util/ByteArrayManager.java",
  "functionStartLine": 194,
  "functionEndLine": 216,
  "numCommitsSeen": 8,
  "timeTaken": 2497,
  "changeHistory": [
    "9614dea71a9700741388956044c5e6fde1754e28",
    "39285e6a1978ea5e53bdc1b0aef62421382124a8",
    "6ee0539ede78b640f01c5eac18ded161182a7835",
    "d5a9a3daa0224249221ffa7b8bd5751ab2feca56",
    "3aac4758b007a56e3d66998d457b2156effca528",
    "394ba94c5d2801fbc5d95c7872eeeede28eed1eb",
    "36ccf097a95eae0761de7b657752e4808a86c094"
  ],
  "changeHistoryShort": {
    "9614dea71a9700741388956044c5e6fde1754e28": "Ybodychange",
    "39285e6a1978ea5e53bdc1b0aef62421382124a8": "Ybodychange",
    "6ee0539ede78b640f01c5eac18ded161182a7835": "Ybodychange",
    "d5a9a3daa0224249221ffa7b8bd5751ab2feca56": "Ybodychange",
    "3aac4758b007a56e3d66998d457b2156effca528": "Ymultichange(Yfilerename,Ybodychange)",
    "394ba94c5d2801fbc5d95c7872eeeede28eed1eb": "Ybodychange",
    "36ccf097a95eae0761de7b657752e4808a86c094": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9614dea71a9700741388956044c5e6fde1754e28": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9398. Make ByteArraryManager log message in one-line format.  Contributed by Mingliang Liu\n",
      "commitDate": "07/11/15 6:21 AM",
      "commitName": "9614dea71a9700741388956044c5e6fde1754e28",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "commitDateOld": "29/09/15 5:52 PM",
      "commitNameOld": "39285e6a1978ea5e53bdc1b0aef62421382124a8",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 38.56,
      "commitsBetweenForRepo": 320,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,23 @@\n     synchronized int recycle(byte[] array) {\n       Preconditions.checkNotNull(array);\n       Preconditions.checkArgument(array.length \u003d\u003d byteArrayLength);\n-      LOG.debug(\", {}\", this);\n+      if (LOG.isDebugEnabled()) {\n+        DEBUG_MESSAGE.get().append(\", \").append(this);\n+      }\n \n       notify();\n       numAllocated--;\n       if (numAllocated \u003c 0) {\n         // it is possible to drop below 0 since\n         // some byte arrays may not be created by the allocate() method.\n         numAllocated \u003d 0;\n       }\n \n       if (freeQueue.size() \u003c maxAllocated - numAllocated) {\n-        LOG.debug(\", freeQueue.offer\");\n+        if (LOG.isDebugEnabled()) {\n+          DEBUG_MESSAGE.get().append(\", freeQueue.offer\");\n+        }\n         freeQueue.offer(array);\n       }\n       return freeQueue.size();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    synchronized int recycle(byte[] array) {\n      Preconditions.checkNotNull(array);\n      Preconditions.checkArgument(array.length \u003d\u003d byteArrayLength);\n      if (LOG.isDebugEnabled()) {\n        DEBUG_MESSAGE.get().append(\", \").append(this);\n      }\n\n      notify();\n      numAllocated--;\n      if (numAllocated \u003c 0) {\n        // it is possible to drop below 0 since\n        // some byte arrays may not be created by the allocate() method.\n        numAllocated \u003d 0;\n      }\n\n      if (freeQueue.size() \u003c maxAllocated - numAllocated) {\n        if (LOG.isDebugEnabled()) {\n          DEBUG_MESSAGE.get().append(\", freeQueue.offer\");\n        }\n        freeQueue.offer(array);\n      }\n      return freeQueue.size();\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/util/ByteArrayManager.java",
      "extendedDetails": {}
    },
    "39285e6a1978ea5e53bdc1b0aef62421382124a8": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8971. Remove guards when calling LOG.debug() and LOG.trace() in client package. Contributed by Mingliang Liu.\n",
      "commitDate": "29/09/15 5:52 PM",
      "commitName": "39285e6a1978ea5e53bdc1b0aef62421382124a8",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "29/09/15 5:51 PM",
      "commitNameOld": "6ee0539ede78b640f01c5eac18ded161182a7835",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,19 @@\n     synchronized int recycle(byte[] array) {\n       Preconditions.checkNotNull(array);\n       Preconditions.checkArgument(array.length \u003d\u003d byteArrayLength);\n-      if (LOG.isDebugEnabled()) {\n-        DEBUG_MESSAGE.get().append(\", \").append(this);\n-      }\n+      LOG.debug(\", {}\", this);\n \n       notify();\n       numAllocated--;\n       if (numAllocated \u003c 0) {\n         // it is possible to drop below 0 since\n         // some byte arrays may not be created by the allocate() method.\n         numAllocated \u003d 0;\n       }\n \n       if (freeQueue.size() \u003c maxAllocated - numAllocated) {\n-        if (LOG.isDebugEnabled()) {\n-          DEBUG_MESSAGE.get().append(\", freeQueue.offer\");\n-        }\n+        LOG.debug(\", freeQueue.offer\");\n         freeQueue.offer(array);\n       }\n       return freeQueue.size();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    synchronized int recycle(byte[] array) {\n      Preconditions.checkNotNull(array);\n      Preconditions.checkArgument(array.length \u003d\u003d byteArrayLength);\n      LOG.debug(\", {}\", this);\n\n      notify();\n      numAllocated--;\n      if (numAllocated \u003c 0) {\n        // it is possible to drop below 0 since\n        // some byte arrays may not be created by the allocate() method.\n        numAllocated \u003d 0;\n      }\n\n      if (freeQueue.size() \u003c maxAllocated - numAllocated) {\n        LOG.debug(\", freeQueue.offer\");\n        freeQueue.offer(array);\n      }\n      return freeQueue.size();\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/util/ByteArrayManager.java",
      "extendedDetails": {}
    },
    "6ee0539ede78b640f01c5eac18ded161182a7835": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"HDFS-9170. Move libhdfs / fuse-dfs / libwebhdfs to hdfs-client. Contributed by Haohui Mai.\"\n\nThis reverts commit d5a9a3daa0224249221ffa7b8bd5751ab2feca56.\n",
      "commitDate": "29/09/15 5:51 PM",
      "commitName": "6ee0539ede78b640f01c5eac18ded161182a7835",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "29/09/15 5:48 PM",
      "commitNameOld": "d5a9a3daa0224249221ffa7b8bd5751ab2feca56",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,23 @@\n     synchronized int recycle(byte[] array) {\n       Preconditions.checkNotNull(array);\n       Preconditions.checkArgument(array.length \u003d\u003d byteArrayLength);\n-      LOG.debug(\", {}\", this);\n+      if (LOG.isDebugEnabled()) {\n+        DEBUG_MESSAGE.get().append(\", \").append(this);\n+      }\n \n       notify();\n       numAllocated--;\n       if (numAllocated \u003c 0) {\n         // it is possible to drop below 0 since\n         // some byte arrays may not be created by the allocate() method.\n         numAllocated \u003d 0;\n       }\n \n       if (freeQueue.size() \u003c maxAllocated - numAllocated) {\n-        LOG.debug(\", freeQueue.offer\");\n+        if (LOG.isDebugEnabled()) {\n+          DEBUG_MESSAGE.get().append(\", freeQueue.offer\");\n+        }\n         freeQueue.offer(array);\n       }\n       return freeQueue.size();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    synchronized int recycle(byte[] array) {\n      Preconditions.checkNotNull(array);\n      Preconditions.checkArgument(array.length \u003d\u003d byteArrayLength);\n      if (LOG.isDebugEnabled()) {\n        DEBUG_MESSAGE.get().append(\", \").append(this);\n      }\n\n      notify();\n      numAllocated--;\n      if (numAllocated \u003c 0) {\n        // it is possible to drop below 0 since\n        // some byte arrays may not be created by the allocate() method.\n        numAllocated \u003d 0;\n      }\n\n      if (freeQueue.size() \u003c maxAllocated - numAllocated) {\n        if (LOG.isDebugEnabled()) {\n          DEBUG_MESSAGE.get().append(\", freeQueue.offer\");\n        }\n        freeQueue.offer(array);\n      }\n      return freeQueue.size();\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/util/ByteArrayManager.java",
      "extendedDetails": {}
    },
    "d5a9a3daa0224249221ffa7b8bd5751ab2feca56": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9170. Move libhdfs / fuse-dfs / libwebhdfs to hdfs-client. Contributed by Haohui Mai.\n",
      "commitDate": "29/09/15 5:48 PM",
      "commitName": "d5a9a3daa0224249221ffa7b8bd5751ab2feca56",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "19/08/15 11:28 AM",
      "commitNameOld": "3aac4758b007a56e3d66998d457b2156effca528",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 41.26,
      "commitsBetweenForRepo": 265,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,19 @@\n     synchronized int recycle(byte[] array) {\n       Preconditions.checkNotNull(array);\n       Preconditions.checkArgument(array.length \u003d\u003d byteArrayLength);\n-      if (LOG.isDebugEnabled()) {\n-        DEBUG_MESSAGE.get().append(\", \").append(this);\n-      }\n+      LOG.debug(\", {}\", this);\n \n       notify();\n       numAllocated--;\n       if (numAllocated \u003c 0) {\n         // it is possible to drop below 0 since\n         // some byte arrays may not be created by the allocate() method.\n         numAllocated \u003d 0;\n       }\n \n       if (freeQueue.size() \u003c maxAllocated - numAllocated) {\n-        if (LOG.isDebugEnabled()) {\n-          DEBUG_MESSAGE.get().append(\", freeQueue.offer\");\n-        }\n+        LOG.debug(\", freeQueue.offer\");\n         freeQueue.offer(array);\n       }\n       return freeQueue.size();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    synchronized int recycle(byte[] array) {\n      Preconditions.checkNotNull(array);\n      Preconditions.checkArgument(array.length \u003d\u003d byteArrayLength);\n      LOG.debug(\", {}\", this);\n\n      notify();\n      numAllocated--;\n      if (numAllocated \u003c 0) {\n        // it is possible to drop below 0 since\n        // some byte arrays may not be created by the allocate() method.\n        numAllocated \u003d 0;\n      }\n\n      if (freeQueue.size() \u003c maxAllocated - numAllocated) {\n        LOG.debug(\", freeQueue.offer\");\n        freeQueue.offer(array);\n      }\n      return freeQueue.size();\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/util/ByteArrayManager.java",
      "extendedDetails": {}
    },
    "3aac4758b007a56e3d66998d457b2156effca528": {
      "type": "Ymultichange(Yfilerename,Ybodychange)",
      "commitMessage": "HDFS-8803. Move DfsClientConf to hdfs-client. Contributed by Mingliang Liu.\n",
      "commitDate": "19/08/15 11:28 AM",
      "commitName": "3aac4758b007a56e3d66998d457b2156effca528",
      "commitAuthor": "Haohui Mai",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "HDFS-8803. Move DfsClientConf to hdfs-client. Contributed by Mingliang Liu.\n",
          "commitDate": "19/08/15 11:28 AM",
          "commitName": "3aac4758b007a56e3d66998d457b2156effca528",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "19/08/15 10:36 AM",
          "commitNameOld": "f61120d964a609ae5eabeb5c4d6c9afe0a15cad8",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 0.04,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,23 @@\n     synchronized int recycle(byte[] array) {\n       Preconditions.checkNotNull(array);\n       Preconditions.checkArgument(array.length \u003d\u003d byteArrayLength);\n       if (LOG.isDebugEnabled()) {\n-        debugMessage.get().append(\", \").append(this);\n+        DEBUG_MESSAGE.get().append(\", \").append(this);\n       }\n \n       notify();\n       numAllocated--;\n       if (numAllocated \u003c 0) {\n         // it is possible to drop below 0 since\n         // some byte arrays may not be created by the allocate() method.\n         numAllocated \u003d 0;\n       }\n \n       if (freeQueue.size() \u003c maxAllocated - numAllocated) {\n         if (LOG.isDebugEnabled()) {\n-          debugMessage.get().append(\", freeQueue.offer\");\n+          DEBUG_MESSAGE.get().append(\", freeQueue.offer\");\n         }\n         freeQueue.offer(array);\n       }\n       return freeQueue.size();\n     }\n\\ No newline at end of file\n",
          "actualSource": "    synchronized int recycle(byte[] array) {\n      Preconditions.checkNotNull(array);\n      Preconditions.checkArgument(array.length \u003d\u003d byteArrayLength);\n      if (LOG.isDebugEnabled()) {\n        DEBUG_MESSAGE.get().append(\", \").append(this);\n      }\n\n      notify();\n      numAllocated--;\n      if (numAllocated \u003c 0) {\n        // it is possible to drop below 0 since\n        // some byte arrays may not be created by the allocate() method.\n        numAllocated \u003d 0;\n      }\n\n      if (freeQueue.size() \u003c maxAllocated - numAllocated) {\n        if (LOG.isDebugEnabled()) {\n          DEBUG_MESSAGE.get().append(\", freeQueue.offer\");\n        }\n        freeQueue.offer(array);\n      }\n      return freeQueue.size();\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/util/ByteArrayManager.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/util/ByteArrayManager.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/util/ByteArrayManager.java"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-8803. Move DfsClientConf to hdfs-client. Contributed by Mingliang Liu.\n",
          "commitDate": "19/08/15 11:28 AM",
          "commitName": "3aac4758b007a56e3d66998d457b2156effca528",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "19/08/15 10:36 AM",
          "commitNameOld": "f61120d964a609ae5eabeb5c4d6c9afe0a15cad8",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 0.04,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,23 @@\n     synchronized int recycle(byte[] array) {\n       Preconditions.checkNotNull(array);\n       Preconditions.checkArgument(array.length \u003d\u003d byteArrayLength);\n       if (LOG.isDebugEnabled()) {\n-        debugMessage.get().append(\", \").append(this);\n+        DEBUG_MESSAGE.get().append(\", \").append(this);\n       }\n \n       notify();\n       numAllocated--;\n       if (numAllocated \u003c 0) {\n         // it is possible to drop below 0 since\n         // some byte arrays may not be created by the allocate() method.\n         numAllocated \u003d 0;\n       }\n \n       if (freeQueue.size() \u003c maxAllocated - numAllocated) {\n         if (LOG.isDebugEnabled()) {\n-          debugMessage.get().append(\", freeQueue.offer\");\n+          DEBUG_MESSAGE.get().append(\", freeQueue.offer\");\n         }\n         freeQueue.offer(array);\n       }\n       return freeQueue.size();\n     }\n\\ No newline at end of file\n",
          "actualSource": "    synchronized int recycle(byte[] array) {\n      Preconditions.checkNotNull(array);\n      Preconditions.checkArgument(array.length \u003d\u003d byteArrayLength);\n      if (LOG.isDebugEnabled()) {\n        DEBUG_MESSAGE.get().append(\", \").append(this);\n      }\n\n      notify();\n      numAllocated--;\n      if (numAllocated \u003c 0) {\n        // it is possible to drop below 0 since\n        // some byte arrays may not be created by the allocate() method.\n        numAllocated \u003d 0;\n      }\n\n      if (freeQueue.size() \u003c maxAllocated - numAllocated) {\n        if (LOG.isDebugEnabled()) {\n          DEBUG_MESSAGE.get().append(\", freeQueue.offer\");\n        }\n        freeQueue.offer(array);\n      }\n      return freeQueue.size();\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/util/ByteArrayManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "394ba94c5d2801fbc5d95c7872eeeede28eed1eb": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7358. Clients may get stuck waiting when using ByteArrayManager.\n",
      "commitDate": "13/11/14 12:28 PM",
      "commitName": "394ba94c5d2801fbc5d95c7872eeeede28eed1eb",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "commitDateOld": "01/11/14 11:22 AM",
      "commitNameOld": "36ccf097a95eae0761de7b657752e4808a86c094",
      "commitAuthorOld": "Tsz-Wo Nicholas Sze",
      "daysBetweenCommits": 12.09,
      "commitsBetweenForRepo": 129,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,23 @@\n     synchronized int recycle(byte[] array) {\n       Preconditions.checkNotNull(array);\n       Preconditions.checkArgument(array.length \u003d\u003d byteArrayLength);\n       if (LOG.isDebugEnabled()) {\n         debugMessage.get().append(\", \").append(this);\n       }\n \n-      if (numAllocated \u003d\u003d maxAllocated) {\n-        if (LOG.isDebugEnabled()) {\n-          debugMessage.get().append(\", notifyAll\");\n-        }\n-        notifyAll();\n-      }\n+      notify();\n       numAllocated--;\n       if (numAllocated \u003c 0) {\n         // it is possible to drop below 0 since\n         // some byte arrays may not be created by the allocate() method.\n         numAllocated \u003d 0;\n       }\n \n       if (freeQueue.size() \u003c maxAllocated - numAllocated) {\n         if (LOG.isDebugEnabled()) {\n           debugMessage.get().append(\", freeQueue.offer\");\n         }\n         freeQueue.offer(array);\n       }\n       return freeQueue.size();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    synchronized int recycle(byte[] array) {\n      Preconditions.checkNotNull(array);\n      Preconditions.checkArgument(array.length \u003d\u003d byteArrayLength);\n      if (LOG.isDebugEnabled()) {\n        debugMessage.get().append(\", \").append(this);\n      }\n\n      notify();\n      numAllocated--;\n      if (numAllocated \u003c 0) {\n        // it is possible to drop below 0 since\n        // some byte arrays may not be created by the allocate() method.\n        numAllocated \u003d 0;\n      }\n\n      if (freeQueue.size() \u003c maxAllocated - numAllocated) {\n        if (LOG.isDebugEnabled()) {\n          debugMessage.get().append(\", freeQueue.offer\");\n        }\n        freeQueue.offer(array);\n      }\n      return freeQueue.size();\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/util/ByteArrayManager.java",
      "extendedDetails": {}
    },
    "36ccf097a95eae0761de7b657752e4808a86c094": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-7276. Limit the number of byte arrays used by DFSOutputStream and provide a mechanism for recycling arrays.\n",
      "commitDate": "01/11/14 11:22 AM",
      "commitName": "36ccf097a95eae0761de7b657752e4808a86c094",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "diff": "@@ -0,0 +1,28 @@\n+    synchronized int recycle(byte[] array) {\n+      Preconditions.checkNotNull(array);\n+      Preconditions.checkArgument(array.length \u003d\u003d byteArrayLength);\n+      if (LOG.isDebugEnabled()) {\n+        debugMessage.get().append(\", \").append(this);\n+      }\n+\n+      if (numAllocated \u003d\u003d maxAllocated) {\n+        if (LOG.isDebugEnabled()) {\n+          debugMessage.get().append(\", notifyAll\");\n+        }\n+        notifyAll();\n+      }\n+      numAllocated--;\n+      if (numAllocated \u003c 0) {\n+        // it is possible to drop below 0 since\n+        // some byte arrays may not be created by the allocate() method.\n+        numAllocated \u003d 0;\n+      }\n+\n+      if (freeQueue.size() \u003c maxAllocated - numAllocated) {\n+        if (LOG.isDebugEnabled()) {\n+          debugMessage.get().append(\", freeQueue.offer\");\n+        }\n+        freeQueue.offer(array);\n+      }\n+      return freeQueue.size();\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    synchronized int recycle(byte[] array) {\n      Preconditions.checkNotNull(array);\n      Preconditions.checkArgument(array.length \u003d\u003d byteArrayLength);\n      if (LOG.isDebugEnabled()) {\n        debugMessage.get().append(\", \").append(this);\n      }\n\n      if (numAllocated \u003d\u003d maxAllocated) {\n        if (LOG.isDebugEnabled()) {\n          debugMessage.get().append(\", notifyAll\");\n        }\n        notifyAll();\n      }\n      numAllocated--;\n      if (numAllocated \u003c 0) {\n        // it is possible to drop below 0 since\n        // some byte arrays may not be created by the allocate() method.\n        numAllocated \u003d 0;\n      }\n\n      if (freeQueue.size() \u003c maxAllocated - numAllocated) {\n        if (LOG.isDebugEnabled()) {\n          debugMessage.get().append(\", freeQueue.offer\");\n        }\n        freeQueue.offer(array);\n      }\n      return freeQueue.size();\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/util/ByteArrayManager.java"
    }
  }
}