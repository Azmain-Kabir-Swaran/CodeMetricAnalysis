{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "S3Guard.java",
  "functionName": "getAuthoritativePaths",
  "functionId": "getAuthoritativePaths___uri-URI(modifiers-final)__conf-Configuration(modifiers-final)__qualifyToDir-Function__Path,String__(modifiers-final)",
  "sourceFilePath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/S3Guard.java",
  "functionStartLine": 995,
  "functionEndLine": 1020,
  "numCommitsSeen": 48,
  "timeTaken": 3190,
  "changeHistory": [
    "eaaaba12b142cfb8b392fb7a02dada0f5bcdedcc",
    "34747c373f40a33d36a2e21ecb33fa791ccd939f"
  ],
  "changeHistoryShort": {
    "eaaaba12b142cfb8b392fb7a02dada0f5bcdedcc": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
    "34747c373f40a33d36a2e21ecb33fa791ccd939f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "eaaaba12b142cfb8b392fb7a02dada0f5bcdedcc": {
      "type": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
      "commitMessage": "HADOOP-16939 fs.s3a.authoritative.path should support multiple FS URIs (#1914)\n\nadd unit test, new ITest and then fix the issue: different schema, bucket \u003d\u003d skip\r\n\r\nfactored out the underlying logic for unit testing; also moved\r\nmaybeAddTrailingSlash to S3AUtils (while retaining/forwarnding existing method\r\nin S3AFS).\r\n\r\ntested: london, sole failure is\r\ntestListingDelete[auth\u003dtrue](org.apache.hadoop.fs.s3a.ITestS3GuardOutOfBandOperations)\r\n\r\nfiled HADOOP-16853\r\n\r\nChange-Id: I4b8d0024469551eda0ec70b4968cba4abed405ed",
      "commitDate": "26/03/20 11:59 AM",
      "commitName": "eaaaba12b142cfb8b392fb7a02dada0f5bcdedcc",
      "commitAuthor": "Steve Loughran",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-16939 fs.s3a.authoritative.path should support multiple FS URIs (#1914)\n\nadd unit test, new ITest and then fix the issue: different schema, bucket \u003d\u003d skip\r\n\r\nfactored out the underlying logic for unit testing; also moved\r\nmaybeAddTrailingSlash to S3AUtils (while retaining/forwarnding existing method\r\nin S3AFS).\r\n\r\ntested: london, sole failure is\r\ntestListingDelete[auth\u003dtrue](org.apache.hadoop.fs.s3a.ITestS3GuardOutOfBandOperations)\r\n\r\nfiled HADOOP-16853\r\n\r\nChange-Id: I4b8d0024469551eda0ec70b4968cba4abed405ed",
          "commitDate": "26/03/20 11:59 AM",
          "commitName": "eaaaba12b142cfb8b392fb7a02dada0f5bcdedcc",
          "commitAuthor": "Steve Loughran",
          "commitDateOld": "30/01/20 2:16 AM",
          "commitNameOld": "5977360878e6780bd04842c8a2156f9848e1d088",
          "commitAuthorOld": "Mustafa İman",
          "daysBetweenCommits": 56.36,
          "commitsBetweenForRepo": 184,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,26 @@\n-  public static Collection\u003cString\u003e getAuthoritativePaths(S3AFileSystem fs) {\n+  static Collection\u003cString\u003e getAuthoritativePaths(\n+      final URI uri,\n+      final Configuration conf,\n+      final Function\u003cPath, String\u003e qualifyToDir) {\n     String[] rawAuthoritativePaths \u003d\n-        fs.getConf().getTrimmedStrings(AUTHORITATIVE_PATH, DEFAULT_AUTHORITATIVE_PATH);\n+        conf.getTrimmedStrings(AUTHORITATIVE_PATH, DEFAULT_AUTHORITATIVE_PATH);\n     Collection\u003cString\u003e authoritativePaths \u003d new ArrayList\u003c\u003e();\n     if (rawAuthoritativePaths.length \u003e 0) {\n       for (int i \u003d 0; i \u003c rawAuthoritativePaths.length; i++) {\n-        Path qualified \u003d fs.qualify(new Path(rawAuthoritativePaths[i]));\n-        authoritativePaths.add(fs.maybeAddTrailingSlash(qualified.toString()));\n+        Path path \u003d new Path(rawAuthoritativePaths[i]);\n+        URI pathURI \u003d path.toUri();\n+        if (pathURI.getAuthority() !\u003d null \u0026\u0026\n+            !pathURI.getAuthority().equals(uri.getAuthority())) {\n+          // skip on auth\n+          continue;\n+        }\n+        if (pathURI.getScheme() !\u003d null \u0026\u0026\n+            !pathURI.getScheme().equals(uri.getScheme())) {\n+          // skip on auth\n+          continue;\n+        }\n+        authoritativePaths.add(qualifyToDir.apply(path));\n       }\n     }\n     return authoritativePaths;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static Collection\u003cString\u003e getAuthoritativePaths(\n      final URI uri,\n      final Configuration conf,\n      final Function\u003cPath, String\u003e qualifyToDir) {\n    String[] rawAuthoritativePaths \u003d\n        conf.getTrimmedStrings(AUTHORITATIVE_PATH, DEFAULT_AUTHORITATIVE_PATH);\n    Collection\u003cString\u003e authoritativePaths \u003d new ArrayList\u003c\u003e();\n    if (rawAuthoritativePaths.length \u003e 0) {\n      for (int i \u003d 0; i \u003c rawAuthoritativePaths.length; i++) {\n        Path path \u003d new Path(rawAuthoritativePaths[i]);\n        URI pathURI \u003d path.toUri();\n        if (pathURI.getAuthority() !\u003d null \u0026\u0026\n            !pathURI.getAuthority().equals(uri.getAuthority())) {\n          // skip on auth\n          continue;\n        }\n        if (pathURI.getScheme() !\u003d null \u0026\u0026\n            !pathURI.getScheme().equals(uri.getScheme())) {\n          // skip on auth\n          continue;\n        }\n        authoritativePaths.add(qualifyToDir.apply(path));\n      }\n    }\n    return authoritativePaths;\n  }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/S3Guard.java",
          "extendedDetails": {
            "oldValue": "[fs-S3AFileSystem]",
            "newValue": "[uri-URI(modifiers-final), conf-Configuration(modifiers-final), qualifyToDir-Function\u003cPath,String\u003e(modifiers-final)]"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HADOOP-16939 fs.s3a.authoritative.path should support multiple FS URIs (#1914)\n\nadd unit test, new ITest and then fix the issue: different schema, bucket \u003d\u003d skip\r\n\r\nfactored out the underlying logic for unit testing; also moved\r\nmaybeAddTrailingSlash to S3AUtils (while retaining/forwarnding existing method\r\nin S3AFS).\r\n\r\ntested: london, sole failure is\r\ntestListingDelete[auth\u003dtrue](org.apache.hadoop.fs.s3a.ITestS3GuardOutOfBandOperations)\r\n\r\nfiled HADOOP-16853\r\n\r\nChange-Id: I4b8d0024469551eda0ec70b4968cba4abed405ed",
          "commitDate": "26/03/20 11:59 AM",
          "commitName": "eaaaba12b142cfb8b392fb7a02dada0f5bcdedcc",
          "commitAuthor": "Steve Loughran",
          "commitDateOld": "30/01/20 2:16 AM",
          "commitNameOld": "5977360878e6780bd04842c8a2156f9848e1d088",
          "commitAuthorOld": "Mustafa İman",
          "daysBetweenCommits": 56.36,
          "commitsBetweenForRepo": 184,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,26 @@\n-  public static Collection\u003cString\u003e getAuthoritativePaths(S3AFileSystem fs) {\n+  static Collection\u003cString\u003e getAuthoritativePaths(\n+      final URI uri,\n+      final Configuration conf,\n+      final Function\u003cPath, String\u003e qualifyToDir) {\n     String[] rawAuthoritativePaths \u003d\n-        fs.getConf().getTrimmedStrings(AUTHORITATIVE_PATH, DEFAULT_AUTHORITATIVE_PATH);\n+        conf.getTrimmedStrings(AUTHORITATIVE_PATH, DEFAULT_AUTHORITATIVE_PATH);\n     Collection\u003cString\u003e authoritativePaths \u003d new ArrayList\u003c\u003e();\n     if (rawAuthoritativePaths.length \u003e 0) {\n       for (int i \u003d 0; i \u003c rawAuthoritativePaths.length; i++) {\n-        Path qualified \u003d fs.qualify(new Path(rawAuthoritativePaths[i]));\n-        authoritativePaths.add(fs.maybeAddTrailingSlash(qualified.toString()));\n+        Path path \u003d new Path(rawAuthoritativePaths[i]);\n+        URI pathURI \u003d path.toUri();\n+        if (pathURI.getAuthority() !\u003d null \u0026\u0026\n+            !pathURI.getAuthority().equals(uri.getAuthority())) {\n+          // skip on auth\n+          continue;\n+        }\n+        if (pathURI.getScheme() !\u003d null \u0026\u0026\n+            !pathURI.getScheme().equals(uri.getScheme())) {\n+          // skip on auth\n+          continue;\n+        }\n+        authoritativePaths.add(qualifyToDir.apply(path));\n       }\n     }\n     return authoritativePaths;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static Collection\u003cString\u003e getAuthoritativePaths(\n      final URI uri,\n      final Configuration conf,\n      final Function\u003cPath, String\u003e qualifyToDir) {\n    String[] rawAuthoritativePaths \u003d\n        conf.getTrimmedStrings(AUTHORITATIVE_PATH, DEFAULT_AUTHORITATIVE_PATH);\n    Collection\u003cString\u003e authoritativePaths \u003d new ArrayList\u003c\u003e();\n    if (rawAuthoritativePaths.length \u003e 0) {\n      for (int i \u003d 0; i \u003c rawAuthoritativePaths.length; i++) {\n        Path path \u003d new Path(rawAuthoritativePaths[i]);\n        URI pathURI \u003d path.toUri();\n        if (pathURI.getAuthority() !\u003d null \u0026\u0026\n            !pathURI.getAuthority().equals(uri.getAuthority())) {\n          // skip on auth\n          continue;\n        }\n        if (pathURI.getScheme() !\u003d null \u0026\u0026\n            !pathURI.getScheme().equals(uri.getScheme())) {\n          // skip on auth\n          continue;\n        }\n        authoritativePaths.add(qualifyToDir.apply(path));\n      }\n    }\n    return authoritativePaths;\n  }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/S3Guard.java",
          "extendedDetails": {
            "oldValue": "[public, static]",
            "newValue": "[static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-16939 fs.s3a.authoritative.path should support multiple FS URIs (#1914)\n\nadd unit test, new ITest and then fix the issue: different schema, bucket \u003d\u003d skip\r\n\r\nfactored out the underlying logic for unit testing; also moved\r\nmaybeAddTrailingSlash to S3AUtils (while retaining/forwarnding existing method\r\nin S3AFS).\r\n\r\ntested: london, sole failure is\r\ntestListingDelete[auth\u003dtrue](org.apache.hadoop.fs.s3a.ITestS3GuardOutOfBandOperations)\r\n\r\nfiled HADOOP-16853\r\n\r\nChange-Id: I4b8d0024469551eda0ec70b4968cba4abed405ed",
          "commitDate": "26/03/20 11:59 AM",
          "commitName": "eaaaba12b142cfb8b392fb7a02dada0f5bcdedcc",
          "commitAuthor": "Steve Loughran",
          "commitDateOld": "30/01/20 2:16 AM",
          "commitNameOld": "5977360878e6780bd04842c8a2156f9848e1d088",
          "commitAuthorOld": "Mustafa İman",
          "daysBetweenCommits": 56.36,
          "commitsBetweenForRepo": 184,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,26 @@\n-  public static Collection\u003cString\u003e getAuthoritativePaths(S3AFileSystem fs) {\n+  static Collection\u003cString\u003e getAuthoritativePaths(\n+      final URI uri,\n+      final Configuration conf,\n+      final Function\u003cPath, String\u003e qualifyToDir) {\n     String[] rawAuthoritativePaths \u003d\n-        fs.getConf().getTrimmedStrings(AUTHORITATIVE_PATH, DEFAULT_AUTHORITATIVE_PATH);\n+        conf.getTrimmedStrings(AUTHORITATIVE_PATH, DEFAULT_AUTHORITATIVE_PATH);\n     Collection\u003cString\u003e authoritativePaths \u003d new ArrayList\u003c\u003e();\n     if (rawAuthoritativePaths.length \u003e 0) {\n       for (int i \u003d 0; i \u003c rawAuthoritativePaths.length; i++) {\n-        Path qualified \u003d fs.qualify(new Path(rawAuthoritativePaths[i]));\n-        authoritativePaths.add(fs.maybeAddTrailingSlash(qualified.toString()));\n+        Path path \u003d new Path(rawAuthoritativePaths[i]);\n+        URI pathURI \u003d path.toUri();\n+        if (pathURI.getAuthority() !\u003d null \u0026\u0026\n+            !pathURI.getAuthority().equals(uri.getAuthority())) {\n+          // skip on auth\n+          continue;\n+        }\n+        if (pathURI.getScheme() !\u003d null \u0026\u0026\n+            !pathURI.getScheme().equals(uri.getScheme())) {\n+          // skip on auth\n+          continue;\n+        }\n+        authoritativePaths.add(qualifyToDir.apply(path));\n       }\n     }\n     return authoritativePaths;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static Collection\u003cString\u003e getAuthoritativePaths(\n      final URI uri,\n      final Configuration conf,\n      final Function\u003cPath, String\u003e qualifyToDir) {\n    String[] rawAuthoritativePaths \u003d\n        conf.getTrimmedStrings(AUTHORITATIVE_PATH, DEFAULT_AUTHORITATIVE_PATH);\n    Collection\u003cString\u003e authoritativePaths \u003d new ArrayList\u003c\u003e();\n    if (rawAuthoritativePaths.length \u003e 0) {\n      for (int i \u003d 0; i \u003c rawAuthoritativePaths.length; i++) {\n        Path path \u003d new Path(rawAuthoritativePaths[i]);\n        URI pathURI \u003d path.toUri();\n        if (pathURI.getAuthority() !\u003d null \u0026\u0026\n            !pathURI.getAuthority().equals(uri.getAuthority())) {\n          // skip on auth\n          continue;\n        }\n        if (pathURI.getScheme() !\u003d null \u0026\u0026\n            !pathURI.getScheme().equals(uri.getScheme())) {\n          // skip on auth\n          continue;\n        }\n        authoritativePaths.add(qualifyToDir.apply(path));\n      }\n    }\n    return authoritativePaths;\n  }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/S3Guard.java",
          "extendedDetails": {}
        }
      ]
    },
    "34747c373f40a33d36a2e21ecb33fa791ccd939f": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-16396. Allow authoritative mode on a subdirectory. (#1043)\n\n",
      "commitDate": "03/07/19 11:04 AM",
      "commitName": "34747c373f40a33d36a2e21ecb33fa791ccd939f",
      "commitAuthor": "Sean Mackrory",
      "diff": "@@ -0,0 +1,12 @@\n+  public static Collection\u003cString\u003e getAuthoritativePaths(S3AFileSystem fs) {\n+    String[] rawAuthoritativePaths \u003d\n+        fs.getConf().getTrimmedStrings(AUTHORITATIVE_PATH, DEFAULT_AUTHORITATIVE_PATH);\n+    Collection\u003cString\u003e authoritativePaths \u003d new ArrayList\u003c\u003e();\n+    if (rawAuthoritativePaths.length \u003e 0) {\n+      for (int i \u003d 0; i \u003c rawAuthoritativePaths.length; i++) {\n+        Path qualified \u003d fs.qualify(new Path(rawAuthoritativePaths[i]));\n+        authoritativePaths.add(fs.maybeAddTrailingSlash(qualified.toString()));\n+      }\n+    }\n+    return authoritativePaths;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static Collection\u003cString\u003e getAuthoritativePaths(S3AFileSystem fs) {\n    String[] rawAuthoritativePaths \u003d\n        fs.getConf().getTrimmedStrings(AUTHORITATIVE_PATH, DEFAULT_AUTHORITATIVE_PATH);\n    Collection\u003cString\u003e authoritativePaths \u003d new ArrayList\u003c\u003e();\n    if (rawAuthoritativePaths.length \u003e 0) {\n      for (int i \u003d 0; i \u003c rawAuthoritativePaths.length; i++) {\n        Path qualified \u003d fs.qualify(new Path(rawAuthoritativePaths[i]));\n        authoritativePaths.add(fs.maybeAddTrailingSlash(qualified.toString()));\n      }\n    }\n    return authoritativePaths;\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/S3Guard.java"
    }
  }
}