{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DistributedScheduler.java",
  "functionName": "setNodeList",
  "functionId": "setNodeList___nodeList-List__RemoteNode__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/scheduler/DistributedScheduler.java",
  "functionStartLine": 202,
  "functionEndLine": 204,
  "numCommitsSeen": 15,
  "timeTaken": 3286,
  "changeHistory": [
    "aa3cab1eb29c56368d15882d7260a994e615e8d8",
    "10be45986cdf86a89055065b752959bd6369d54f",
    "82c9e061017c32e633e0b0cbb7978749a6df4fb2",
    "e5766b1dbee02ae0ef89618e172f3fb227af19e8",
    "c282a08f3892e2e8ceb58e1e9a411062fbd1fb2b"
  ],
  "changeHistoryShort": {
    "aa3cab1eb29c56368d15882d7260a994e615e8d8": "Yparameterchange",
    "10be45986cdf86a89055065b752959bd6369d54f": "Ybodychange",
    "82c9e061017c32e633e0b0cbb7978749a6df4fb2": "Ybodychange",
    "e5766b1dbee02ae0ef89618e172f3fb227af19e8": "Yfilerename",
    "c282a08f3892e2e8ceb58e1e9a411062fbd1fb2b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "aa3cab1eb29c56368d15882d7260a994e615e8d8": {
      "type": "Yparameterchange",
      "commitMessage": "YARN-5799. Fix Opportunistic Allocation to set the correct value of Node Http Address. (asuresh)\n",
      "commitDate": "29/10/16 2:03 AM",
      "commitName": "aa3cab1eb29c56368d15882d7260a994e615e8d8",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "29/09/16 3:11 PM",
      "commitNameOld": "10be45986cdf86a89055065b752959bd6369d54f",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 29.45,
      "commitsBetweenForRepo": 258,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,3 +1,3 @@\n-  private void setNodeList(List\u003cNodeId\u003e nodeList) {\n+  private void setNodeList(List\u003cRemoteNode\u003e nodeList) {\n     oppContainerContext.updateNodeList(nodeList);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void setNodeList(List\u003cRemoteNode\u003e nodeList) {\n    oppContainerContext.updateNodeList(nodeList);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/scheduler/DistributedScheduler.java",
      "extendedDetails": {
        "oldValue": "[nodeList-List\u003cNodeId\u003e]",
        "newValue": "[nodeList-List\u003cRemoteNode\u003e]"
      }
    },
    "10be45986cdf86a89055065b752959bd6369d54f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5486. Update OpportunisticContainerAllocatorAMService::allocate method to handle OPPORTUNISTIC container requests. (Konstantinos Karanasos via asuresh)\n",
      "commitDate": "29/09/16 3:11 PM",
      "commitName": "10be45986cdf86a89055065b752959bd6369d54f",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "09/08/16 12:42 AM",
      "commitNameOld": "82c9e061017c32e633e0b0cbb7978749a6df4fb2",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 51.6,
      "commitsBetweenForRepo": 319,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,4 +1,3 @@\n   private void setNodeList(List\u003cNodeId\u003e nodeList) {\n-    oppContainerContext.getNodeMap().clear();\n-    addToNodeList(nodeList);\n+    oppContainerContext.updateNodeList(nodeList);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void setNodeList(List\u003cNodeId\u003e nodeList) {\n    oppContainerContext.updateNodeList(nodeList);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/scheduler/DistributedScheduler.java",
      "extendedDetails": {}
    },
    "82c9e061017c32e633e0b0cbb7978749a6df4fb2": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5457. Refactor DistributedScheduling framework to pull out common functionality. (asuresh)\n",
      "commitDate": "09/08/16 12:42 AM",
      "commitName": "82c9e061017c32e633e0b0cbb7978749a6df4fb2",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "31/07/16 11:48 AM",
      "commitNameOld": "e5766b1dbee02ae0ef89618e172f3fb227af19e8",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 8.54,
      "commitsBetweenForRepo": 67,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,4 +1,4 @@\n   private void setNodeList(List\u003cNodeId\u003e nodeList) {\n-    this.nodeList.clear();\n+    oppContainerContext.getNodeMap().clear();\n     addToNodeList(nodeList);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void setNodeList(List\u003cNodeId\u003e nodeList) {\n    oppContainerContext.getNodeMap().clear();\n    addToNodeList(nodeList);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/scheduler/DistributedScheduler.java",
      "extendedDetails": {}
    },
    "e5766b1dbee02ae0ef89618e172f3fb227af19e8": {
      "type": "Yfilerename",
      "commitMessage": "YARN-5113. Refactoring and other clean-up for distributed scheduling. (Konstantinos Karanasos via asuresh)\n",
      "commitDate": "31/07/16 11:48 AM",
      "commitName": "e5766b1dbee02ae0ef89618e172f3fb227af19e8",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "30/07/16 7:29 PM",
      "commitNameOld": "3d191cc15244e1e29f837b34a9bd1d029e003064",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 0.68,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void setNodeList(List\u003cNodeId\u003e nodeList) {\n    this.nodeList.clear();\n    addToNodeList(nodeList);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/scheduler/DistributedScheduler.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/scheduler/LocalScheduler.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/scheduler/DistributedScheduler.java"
      }
    },
    "c282a08f3892e2e8ceb58e1e9a411062fbd1fb2b": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2885. Create AMRMProxy request interceptor and ContainerAllocator to distribute OPPORTUNISTIC containers to appropriate Nodes (asuresh)\n\n(cherry picked from commit 2bf025278a318b0452fdc9ece4427b4c42124e39)\n",
      "commitDate": "24/04/16 10:38 PM",
      "commitName": "c282a08f3892e2e8ceb58e1e9a411062fbd1fb2b",
      "commitAuthor": "Arun Suresh",
      "diff": "@@ -0,0 +1,4 @@\n+  private void setNodeList(List\u003cNodeId\u003e nodeList) {\n+    this.nodeList.clear();\n+    addToNodeList(nodeList);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void setNodeList(List\u003cNodeId\u003e nodeList) {\n    this.nodeList.clear();\n    addToNodeList(nodeList);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/scheduler/LocalScheduler.java"
    }
  }
}