{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AsyncDispatcher.java",
  "functionName": "printEventQueueDetails",
  "functionId": "printEventQueueDetails___queue-BlockingQueue__Event__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/event/AsyncDispatcher.java",
  "functionStartLine": 271,
  "functionEndLine": 281,
  "numCommitsSeen": 33,
  "timeTaken": 1596,
  "changeHistory": [
    "172bcd8e01bd0fa58010823eb27d6e6d81609f2a"
  ],
  "changeHistoryShort": {
    "172bcd8e01bd0fa58010823eb27d6e6d81609f2a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "172bcd8e01bd0fa58010823eb27d6e6d81609f2a": {
      "type": "Yintroduced",
      "commitMessage": "YARN-8995. Log events info in AsyncDispatcher when event queue size cumulatively reaches a certain number every time. Contributed by zhuqi.\n",
      "commitDate": "05/09/19 1:20 AM",
      "commitName": "172bcd8e01bd0fa58010823eb27d6e6d81609f2a",
      "commitAuthor": "Tao Yang",
      "diff": "@@ -0,0 +1,11 @@\n+    private void printEventQueueDetails(BlockingQueue\u003cEvent\u003e queue) {\n+      Map\u003cEnum, Long\u003e counterMap \u003d eventQueue.stream().\n+              collect(Collectors.\n+                      groupingBy(e -\u003e e.getType(), Collectors.counting())\n+              );\n+      for (Map.Entry\u003cEnum, Long\u003e entry : counterMap.entrySet()) {\n+        long num \u003d entry.getValue();\n+        LOG.info(\"Event type: \" + entry.getKey()\n+                + \", Event record counter: \" + num);\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private void printEventQueueDetails(BlockingQueue\u003cEvent\u003e queue) {\n      Map\u003cEnum, Long\u003e counterMap \u003d eventQueue.stream().\n              collect(Collectors.\n                      groupingBy(e -\u003e e.getType(), Collectors.counting())\n              );\n      for (Map.Entry\u003cEnum, Long\u003e entry : counterMap.entrySet()) {\n        long num \u003d entry.getValue();\n        LOG.info(\"Event type: \" + entry.getKey()\n                + \", Event record counter: \" + num);\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/event/AsyncDispatcher.java"
    }
  }
}