{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FairSchedulerConfiguration.java",
  "functionName": "findPercentage",
  "functionId": "findPercentage___resourceValue-String__resource-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairSchedulerConfiguration.java",
  "functionStartLine": 678,
  "functionEndLine": 681,
  "numCommitsSeen": 91,
  "timeTaken": 6592,
  "changeHistory": [
    "7ab88dbfa6fceaf8fea80eff1b23ed1ac486b393",
    "64411a6ff74ef87756aae12224ff9c25f7e2a143",
    "9edc74f64a31450af3c55c0dadf352862e4b359d",
    "39ad98903a5f042573b97a2e5438bc57af7cc7a1",
    "17262470246232d0f0651d627a4961e55b1efe6a",
    "99292adcefdc6b8f280b8e100605fb39f755c38a"
  ],
  "changeHistoryShort": {
    "7ab88dbfa6fceaf8fea80eff1b23ed1ac486b393": "Ymultichange(Yparameterchange,Ybodychange)",
    "64411a6ff74ef87756aae12224ff9c25f7e2a143": "Ybodychange",
    "9edc74f64a31450af3c55c0dadf352862e4b359d": "Ybodychange",
    "39ad98903a5f042573b97a2e5438bc57af7cc7a1": "Ybodychange",
    "17262470246232d0f0651d627a4961e55b1efe6a": "Ybodychange",
    "99292adcefdc6b8f280b8e100605fb39f755c38a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7ab88dbfa6fceaf8fea80eff1b23ed1ac486b393": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-7291. Better input parsing for resource in allocation file. Contributed by Zoltan Siegl\n",
      "commitDate": "21/08/19 8:01 AM",
      "commitName": "7ab88dbfa6fceaf8fea80eff1b23ed1ac486b393",
      "commitAuthor": "Szilard Nemeth",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-7291. Better input parsing for resource in allocation file. Contributed by Zoltan Siegl\n",
          "commitDate": "21/08/19 8:01 AM",
          "commitName": "7ab88dbfa6fceaf8fea80eff1b23ed1ac486b393",
          "commitAuthor": "Szilard Nemeth",
          "commitDateOld": "04/03/19 9:10 PM",
          "commitNameOld": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
          "commitAuthorOld": "Prabhu Joseph",
          "daysBetweenCommits": 169.41,
          "commitsBetweenForRepo": 1280,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,4 @@\n-  private static double findPercentage(String val, String units)\n+  private static double findPercentage(String resourceValue, String resource)\n       throws AllocationConfigurationException {\n-    final Pattern pattern \u003d\n-        Pattern.compile(\"(-?(\\\\d+)(\\\\.\\\\d*)?)\\\\s*%\\\\s*\" + units);\n-    Matcher matcher \u003d pattern.matcher(val);\n-    if (!matcher.find()) {\n-      if (units.equals(\"\")) {\n-        throw new AllocationConfigurationException(\"Invalid percentage: \" +\n-            val);\n-      } else {\n-        throw new AllocationConfigurationException(\"Missing resource: \" +\n-            units);\n-      }\n-    }\n-    double percentage \u003d Double.parseDouble(matcher.group(1)) / 100.0;\n-\n-    if (percentage \u003c 0) {\n-      throw new AllocationConfigurationException(\"Invalid percentage: \" +\n-          val + \", percentage should not be negative!\");\n-    }\n-\n-    return percentage;\n+    return findPercentageInternal(resource, resourceValue, false);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static double findPercentage(String resourceValue, String resource)\n      throws AllocationConfigurationException {\n    return findPercentageInternal(resource, resourceValue, false);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairSchedulerConfiguration.java",
          "extendedDetails": {
            "oldValue": "[val-String, units-String]",
            "newValue": "[resourceValue-String, resource-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7291. Better input parsing for resource in allocation file. Contributed by Zoltan Siegl\n",
          "commitDate": "21/08/19 8:01 AM",
          "commitName": "7ab88dbfa6fceaf8fea80eff1b23ed1ac486b393",
          "commitAuthor": "Szilard Nemeth",
          "commitDateOld": "04/03/19 9:10 PM",
          "commitNameOld": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
          "commitAuthorOld": "Prabhu Joseph",
          "daysBetweenCommits": 169.41,
          "commitsBetweenForRepo": 1280,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,4 @@\n-  private static double findPercentage(String val, String units)\n+  private static double findPercentage(String resourceValue, String resource)\n       throws AllocationConfigurationException {\n-    final Pattern pattern \u003d\n-        Pattern.compile(\"(-?(\\\\d+)(\\\\.\\\\d*)?)\\\\s*%\\\\s*\" + units);\n-    Matcher matcher \u003d pattern.matcher(val);\n-    if (!matcher.find()) {\n-      if (units.equals(\"\")) {\n-        throw new AllocationConfigurationException(\"Invalid percentage: \" +\n-            val);\n-      } else {\n-        throw new AllocationConfigurationException(\"Missing resource: \" +\n-            units);\n-      }\n-    }\n-    double percentage \u003d Double.parseDouble(matcher.group(1)) / 100.0;\n-\n-    if (percentage \u003c 0) {\n-      throw new AllocationConfigurationException(\"Invalid percentage: \" +\n-          val + \", percentage should not be negative!\");\n-    }\n-\n-    return percentage;\n+    return findPercentageInternal(resource, resourceValue, false);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static double findPercentage(String resourceValue, String resource)\n      throws AllocationConfigurationException {\n    return findPercentageInternal(resource, resourceValue, false);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairSchedulerConfiguration.java",
          "extendedDetails": {}
        }
      ]
    },
    "64411a6ff74ef87756aae12224ff9c25f7e2a143": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8738. FairScheduler should not parse negative maxResources or minResources values as positive. (Contributed by Szilard Nemeth)\n",
      "commitDate": "10/12/18 11:06 AM",
      "commitName": "64411a6ff74ef87756aae12224ff9c25f7e2a143",
      "commitAuthor": "Haibo Chen",
      "commitDateOld": "06/07/18 11:03 AM",
      "commitNameOld": "9edc74f64a31450af3c55c0dadf352862e4b359d",
      "commitAuthorOld": "Haibo Chen",
      "daysBetweenCommits": 157.04,
      "commitsBetweenForRepo": 1295,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,23 @@\n   private static double findPercentage(String val, String units)\n       throws AllocationConfigurationException {\n     final Pattern pattern \u003d\n-        Pattern.compile(\"((\\\\d+)(\\\\.\\\\d*)?)\\\\s*%\\\\s*\" + units);\n+        Pattern.compile(\"(-?(\\\\d+)(\\\\.\\\\d*)?)\\\\s*%\\\\s*\" + units);\n     Matcher matcher \u003d pattern.matcher(val);\n     if (!matcher.find()) {\n       if (units.equals(\"\")) {\n         throw new AllocationConfigurationException(\"Invalid percentage: \" +\n             val);\n       } else {\n         throw new AllocationConfigurationException(\"Missing resource: \" +\n             units);\n       }\n     }\n-    return Double.parseDouble(matcher.group(1)) / 100.0;\n+    double percentage \u003d Double.parseDouble(matcher.group(1)) / 100.0;\n+\n+    if (percentage \u003c 0) {\n+      throw new AllocationConfigurationException(\"Invalid percentage: \" +\n+          val + \", percentage should not be negative!\");\n+    }\n+\n+    return percentage;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static double findPercentage(String val, String units)\n      throws AllocationConfigurationException {\n    final Pattern pattern \u003d\n        Pattern.compile(\"(-?(\\\\d+)(\\\\.\\\\d*)?)\\\\s*%\\\\s*\" + units);\n    Matcher matcher \u003d pattern.matcher(val);\n    if (!matcher.find()) {\n      if (units.equals(\"\")) {\n        throw new AllocationConfigurationException(\"Invalid percentage: \" +\n            val);\n      } else {\n        throw new AllocationConfigurationException(\"Missing resource: \" +\n            units);\n      }\n    }\n    double percentage \u003d Double.parseDouble(matcher.group(1)) / 100.0;\n\n    if (percentage \u003c 0) {\n      throw new AllocationConfigurationException(\"Invalid percentage: \" +\n          val + \", percentage should not be negative!\");\n    }\n\n    return percentage;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairSchedulerConfiguration.java",
      "extendedDetails": {}
    },
    "9edc74f64a31450af3c55c0dadf352862e4b359d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7556. Fair scheduler configuration should allow resource types in the minResources and maxResources properties. (Daniel Templeton and Szilard Nemeth via Haibo Chen)\n",
      "commitDate": "06/07/18 11:03 AM",
      "commitName": "9edc74f64a31450af3c55c0dadf352862e4b359d",
      "commitAuthor": "Haibo Chen",
      "commitDateOld": "05/07/18 12:22 PM",
      "commitNameOld": "39ad98903a5f042573b97a2e5438bc57af7cc7a1",
      "commitAuthorOld": "Anu Engineer",
      "daysBetweenCommits": 0.95,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   private static double findPercentage(String val, String units)\n-    throws AllocationConfigurationException {\n+      throws AllocationConfigurationException {\n     final Pattern pattern \u003d\n         Pattern.compile(\"((\\\\d+)(\\\\.\\\\d*)?)\\\\s*%\\\\s*\" + units);\n     Matcher matcher \u003d pattern.matcher(val);\n     if (!matcher.find()) {\n       if (units.equals(\"\")) {\n         throw new AllocationConfigurationException(\"Invalid percentage: \" +\n             val);\n       } else {\n         throw new AllocationConfigurationException(\"Missing resource: \" +\n             units);\n       }\n     }\n-    return Double.parseDouble(matcher.group(1));\n+    return Double.parseDouble(matcher.group(1)) / 100.0;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static double findPercentage(String val, String units)\n      throws AllocationConfigurationException {\n    final Pattern pattern \u003d\n        Pattern.compile(\"((\\\\d+)(\\\\.\\\\d*)?)\\\\s*%\\\\s*\" + units);\n    Matcher matcher \u003d pattern.matcher(val);\n    if (!matcher.find()) {\n      if (units.equals(\"\")) {\n        throw new AllocationConfigurationException(\"Invalid percentage: \" +\n            val);\n      } else {\n        throw new AllocationConfigurationException(\"Missing resource: \" +\n            units);\n      }\n    }\n    return Double.parseDouble(matcher.group(1)) / 100.0;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairSchedulerConfiguration.java",
      "extendedDetails": {}
    },
    "39ad98903a5f042573b97a2e5438bc57af7cc7a1": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"Merge branch \u0027trunk\u0027 of https://git-wip-us.apache.org/repos/asf/hadoop into trunk\"\n\nThis reverts commit c163d1797ade0f47d35b4a44381b8ef1dfec5b60, reversing\nchanges made to 0d9804dcef2eab5ebf84667d9ca49bb035d9a731.\n",
      "commitDate": "05/07/18 12:22 PM",
      "commitName": "39ad98903a5f042573b97a2e5438bc57af7cc7a1",
      "commitAuthor": "Anu Engineer",
      "commitDateOld": "05/07/18 10:42 AM",
      "commitNameOld": "17262470246232d0f0651d627a4961e55b1efe6a",
      "commitAuthorOld": "Haibo Chen",
      "daysBetweenCommits": 0.07,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   private static double findPercentage(String val, String units)\n-      throws AllocationConfigurationException {\n+    throws AllocationConfigurationException {\n     final Pattern pattern \u003d\n         Pattern.compile(\"((\\\\d+)(\\\\.\\\\d*)?)\\\\s*%\\\\s*\" + units);\n     Matcher matcher \u003d pattern.matcher(val);\n     if (!matcher.find()) {\n       if (units.equals(\"\")) {\n         throw new AllocationConfigurationException(\"Invalid percentage: \" +\n             val);\n       } else {\n         throw new AllocationConfigurationException(\"Missing resource: \" +\n             units);\n       }\n     }\n-    return Double.parseDouble(matcher.group(1)) / 100.0;\n+    return Double.parseDouble(matcher.group(1));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static double findPercentage(String val, String units)\n    throws AllocationConfigurationException {\n    final Pattern pattern \u003d\n        Pattern.compile(\"((\\\\d+)(\\\\.\\\\d*)?)\\\\s*%\\\\s*\" + units);\n    Matcher matcher \u003d pattern.matcher(val);\n    if (!matcher.find()) {\n      if (units.equals(\"\")) {\n        throw new AllocationConfigurationException(\"Invalid percentage: \" +\n            val);\n      } else {\n        throw new AllocationConfigurationException(\"Missing resource: \" +\n            units);\n      }\n    }\n    return Double.parseDouble(matcher.group(1));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairSchedulerConfiguration.java",
      "extendedDetails": {}
    },
    "17262470246232d0f0651d627a4961e55b1efe6a": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7556. Fair scheduler configuration should allow resource types in the minResources and maxResources properties. (Daniel Templeton and Szilard Nemeth via Haibo Chen)\n",
      "commitDate": "05/07/18 10:42 AM",
      "commitName": "17262470246232d0f0651d627a4961e55b1efe6a",
      "commitAuthor": "Haibo Chen",
      "commitDateOld": "22/01/18 10:30 AM",
      "commitNameOld": "22ee6f77e5affbb308287f465ae8d145fc73ff60",
      "commitAuthorOld": "Yufei Gu",
      "daysBetweenCommits": 163.97,
      "commitsBetweenForRepo": 1759,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   private static double findPercentage(String val, String units)\n-    throws AllocationConfigurationException {\n+      throws AllocationConfigurationException {\n     final Pattern pattern \u003d\n         Pattern.compile(\"((\\\\d+)(\\\\.\\\\d*)?)\\\\s*%\\\\s*\" + units);\n     Matcher matcher \u003d pattern.matcher(val);\n     if (!matcher.find()) {\n       if (units.equals(\"\")) {\n         throw new AllocationConfigurationException(\"Invalid percentage: \" +\n             val);\n       } else {\n         throw new AllocationConfigurationException(\"Missing resource: \" +\n             units);\n       }\n     }\n-    return Double.parseDouble(matcher.group(1));\n+    return Double.parseDouble(matcher.group(1)) / 100.0;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static double findPercentage(String val, String units)\n      throws AllocationConfigurationException {\n    final Pattern pattern \u003d\n        Pattern.compile(\"((\\\\d+)(\\\\.\\\\d*)?)\\\\s*%\\\\s*\" + units);\n    Matcher matcher \u003d pattern.matcher(val);\n    if (!matcher.find()) {\n      if (units.equals(\"\")) {\n        throw new AllocationConfigurationException(\"Invalid percentage: \" +\n            val);\n      } else {\n        throw new AllocationConfigurationException(\"Missing resource: \" +\n            units);\n      }\n    }\n    return Double.parseDouble(matcher.group(1)) / 100.0;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairSchedulerConfiguration.java",
      "extendedDetails": {}
    },
    "99292adcefdc6b8f280b8e100605fb39f755c38a": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2162. Add ability in Fair Scheduler to optionally configure maxResources in terms of percentage. (Yufei Gu)\n",
      "commitDate": "05/10/17 11:51 PM",
      "commitName": "99292adcefdc6b8f280b8e100605fb39f755c38a",
      "commitAuthor": "Yufei Gu",
      "diff": "@@ -0,0 +1,16 @@\n+  private static double findPercentage(String val, String units)\n+    throws AllocationConfigurationException {\n+    final Pattern pattern \u003d\n+        Pattern.compile(\"((\\\\d+)(\\\\.\\\\d*)?)\\\\s*%\\\\s*\" + units);\n+    Matcher matcher \u003d pattern.matcher(val);\n+    if (!matcher.find()) {\n+      if (units.equals(\"\")) {\n+        throw new AllocationConfigurationException(\"Invalid percentage: \" +\n+            val);\n+      } else {\n+        throw new AllocationConfigurationException(\"Missing resource: \" +\n+            units);\n+      }\n+    }\n+    return Double.parseDouble(matcher.group(1));\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static double findPercentage(String val, String units)\n    throws AllocationConfigurationException {\n    final Pattern pattern \u003d\n        Pattern.compile(\"((\\\\d+)(\\\\.\\\\d*)?)\\\\s*%\\\\s*\" + units);\n    Matcher matcher \u003d pattern.matcher(val);\n    if (!matcher.find()) {\n      if (units.equals(\"\")) {\n        throw new AllocationConfigurationException(\"Invalid percentage: \" +\n            val);\n      } else {\n        throw new AllocationConfigurationException(\"Missing resource: \" +\n            units);\n      }\n    }\n    return Double.parseDouble(matcher.group(1));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairSchedulerConfiguration.java"
    }
  }
}