{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BalanceProcedureScheduler.java",
  "functionName": "shutDownAndWait",
  "functionId": "shutDownAndWait___timeout-int",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/procedure/BalanceProcedureScheduler.java",
  "functionStartLine": 259,
  "functionEndLine": 285,
  "numCommitsSeen": 1,
  "timeTaken": 388,
  "changeHistory": [
    "1983eea62def58fb769f44c1d41dc29690274809"
  ],
  "changeHistoryShort": {
    "1983eea62def58fb769f44c1d41dc29690274809": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1983eea62def58fb769f44c1d41dc29690274809": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-15340. RBF: Implement BalanceProcedureScheduler basic framework. Contributed by Jinglun.\n",
      "commitDate": "19/05/20 7:39 PM",
      "commitName": "1983eea62def58fb769f44c1d41dc29690274809",
      "commitAuthor": "Yiqun Lin",
      "diff": "@@ -0,0 +1,27 @@\n+  public synchronized void shutDownAndWait(int timeout) {\n+    shutDown();\n+    while (readerThread.isAlive()) {\n+      try {\n+        readerThread.join();\n+      } catch (InterruptedException e) {\n+      }\n+    }\n+    while (roosterThread.isAlive()) {\n+      try {\n+        roosterThread.join();\n+      } catch (InterruptedException e) {\n+      }\n+    }\n+    while (recoverThread.isAlive()) {\n+      try {\n+        recoverThread.join();\n+      } catch (InterruptedException e) {\n+      }\n+    }\n+    while (!workersPool.isTerminated()) {\n+      try {\n+        workersPool.awaitTermination(timeout, TimeUnit.SECONDS);\n+      } catch (InterruptedException e) {\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void shutDownAndWait(int timeout) {\n    shutDown();\n    while (readerThread.isAlive()) {\n      try {\n        readerThread.join();\n      } catch (InterruptedException e) {\n      }\n    }\n    while (roosterThread.isAlive()) {\n      try {\n        roosterThread.join();\n      } catch (InterruptedException e) {\n      }\n    }\n    while (recoverThread.isAlive()) {\n      try {\n        recoverThread.join();\n      } catch (InterruptedException e) {\n      }\n    }\n    while (!workersPool.isTerminated()) {\n      try {\n        workersPool.awaitTermination(timeout, TimeUnit.SECONDS);\n      } catch (InterruptedException e) {\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/procedure/BalanceProcedureScheduler.java"
    }
  }
}