{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RawLocalFileSystem.java",
  "functionName": "setTimes",
  "functionId": "setTimes___p-Path__mtime-long__atime-long",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/RawLocalFileSystem.java",
  "functionStartLine": 881,
  "functionEndLine": 891,
  "numCommitsSeen": 53,
  "timeTaken": 2358,
  "changeHistory": [
    "deb4743b2c3bb5c23842f0e224b89e41ef2d36d4",
    "0857641f62778fad64e8158d78320efb0c8b417c",
    "6cc8e38db5b26bdd02bc6bc1c9684db2593eec25",
    "ed1e3ce482f679ae2fad43a203f6578d7af59327",
    "bfef63719d04a25d8105f82e24a77f5d66c30f58"
  ],
  "changeHistoryShort": {
    "deb4743b2c3bb5c23842f0e224b89e41ef2d36d4": "Ybodychange",
    "0857641f62778fad64e8158d78320efb0c8b417c": "Ybodychange",
    "6cc8e38db5b26bdd02bc6bc1c9684db2593eec25": "Ybodychange",
    "ed1e3ce482f679ae2fad43a203f6578d7af59327": "Ybodychange",
    "bfef63719d04a25d8105f82e24a77f5d66c30f58": "Yintroduced"
  },
  "changeHistoryDetails": {
    "deb4743b2c3bb5c23842f0e224b89e41ef2d36d4": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"HDFS-11140. Directory Scanner should log startup message time correctly. Contributed by Yiqun Lin.\"\n\nThis reverts commit 0857641f62778fad64e8158d78320efb0c8b417c.\n",
      "commitDate": "07/12/16 8:37 PM",
      "commitName": "deb4743b2c3bb5c23842f0e224b89e41ef2d36d4",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "07/12/16 8:34 PM",
      "commitNameOld": "0857641f62778fad64e8158d78320efb0c8b417c",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,11 @@\n   public void setTimes(Path p, long mtime, long atime) throws IOException {\n     try {\n       BasicFileAttributeView view \u003d Files.getFileAttributeView(\n           pathToFile(p).toPath(), BasicFileAttributeView.class);\n       FileTime fmtime \u003d (mtime \u003e\u003d 0) ? FileTime.fromMillis(mtime) : null;\n       FileTime fatime \u003d (atime \u003e\u003d 0) ? FileTime.fromMillis(atime) : null;\n-\n-      // On some macOS environment, BasicFileAttributeView.setTimes\n-      // does not set times correctly when the argument of accessTime is null.\n-      // TODO: Remove this after the issue is fixed.\n-      if (fatime \u003d\u003d null \u0026\u0026 Shell.MAC) {\n-        FileStatus f \u003d getFileStatus(p);\n-        fatime \u003d FileTime.fromMillis(f.getAccessTime());\n-      }\n-\n       view.setTimes(fmtime, fatime, null);\n     } catch (NoSuchFileException e) {\n       throw new FileNotFoundException(\"File \" + p + \" does not exist\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setTimes(Path p, long mtime, long atime) throws IOException {\n    try {\n      BasicFileAttributeView view \u003d Files.getFileAttributeView(\n          pathToFile(p).toPath(), BasicFileAttributeView.class);\n      FileTime fmtime \u003d (mtime \u003e\u003d 0) ? FileTime.fromMillis(mtime) : null;\n      FileTime fatime \u003d (atime \u003e\u003d 0) ? FileTime.fromMillis(atime) : null;\n      view.setTimes(fmtime, fatime, null);\n    } catch (NoSuchFileException e) {\n      throw new FileNotFoundException(\"File \" + p + \" does not exist\");\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/RawLocalFileSystem.java",
      "extendedDetails": {}
    },
    "0857641f62778fad64e8158d78320efb0c8b417c": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11140. Directory Scanner should log startup message time correctly. Contributed by Yiqun Lin.\n",
      "commitDate": "07/12/16 8:34 PM",
      "commitName": "0857641f62778fad64e8158d78320efb0c8b417c",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "15/11/16 10:57 AM",
      "commitNameOld": "5af572b6443715b7a741296c1bd520a1840f9a7c",
      "commitAuthorOld": "Mingliang Liu",
      "daysBetweenCommits": 22.4,
      "commitsBetweenForRepo": 143,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,20 @@\n   public void setTimes(Path p, long mtime, long atime) throws IOException {\n     try {\n       BasicFileAttributeView view \u003d Files.getFileAttributeView(\n           pathToFile(p).toPath(), BasicFileAttributeView.class);\n       FileTime fmtime \u003d (mtime \u003e\u003d 0) ? FileTime.fromMillis(mtime) : null;\n       FileTime fatime \u003d (atime \u003e\u003d 0) ? FileTime.fromMillis(atime) : null;\n+\n+      // On some macOS environment, BasicFileAttributeView.setTimes\n+      // does not set times correctly when the argument of accessTime is null.\n+      // TODO: Remove this after the issue is fixed.\n+      if (fatime \u003d\u003d null \u0026\u0026 Shell.MAC) {\n+        FileStatus f \u003d getFileStatus(p);\n+        fatime \u003d FileTime.fromMillis(f.getAccessTime());\n+      }\n+\n       view.setTimes(fmtime, fatime, null);\n     } catch (NoSuchFileException e) {\n       throw new FileNotFoundException(\"File \" + p + \" does not exist\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setTimes(Path p, long mtime, long atime) throws IOException {\n    try {\n      BasicFileAttributeView view \u003d Files.getFileAttributeView(\n          pathToFile(p).toPath(), BasicFileAttributeView.class);\n      FileTime fmtime \u003d (mtime \u003e\u003d 0) ? FileTime.fromMillis(mtime) : null;\n      FileTime fatime \u003d (atime \u003e\u003d 0) ? FileTime.fromMillis(atime) : null;\n\n      // On some macOS environment, BasicFileAttributeView.setTimes\n      // does not set times correctly when the argument of accessTime is null.\n      // TODO: Remove this after the issue is fixed.\n      if (fatime \u003d\u003d null \u0026\u0026 Shell.MAC) {\n        FileStatus f \u003d getFileStatus(p);\n        fatime \u003d FileTime.fromMillis(f.getAccessTime());\n      }\n\n      view.setTimes(fmtime, fatime, null);\n    } catch (NoSuchFileException e) {\n      throw new FileNotFoundException(\"File \" + p + \" does not exist\");\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/RawLocalFileSystem.java",
      "extendedDetails": {}
    },
    "6cc8e38db5b26bdd02bc6bc1c9684db2593eec25": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12258. Need translate java.nio.file.NoSuchFileException to FileNotFoundException to avoid regression. Contributed by Zhihai Xu.\n",
      "commitDate": "12/08/15 4:44 PM",
      "commitName": "6cc8e38db5b26bdd02bc6bc1c9684db2593eec25",
      "commitAuthor": "cnauroth",
      "commitDateOld": "16/07/15 3:21 PM",
      "commitNameOld": "d96bbe152cf536304208f2e8f35deb3b2aa91d2b",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 27.06,
      "commitsBetweenForRepo": 142,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,11 @@\n   public void setTimes(Path p, long mtime, long atime) throws IOException {\n-    BasicFileAttributeView view \u003d Files.getFileAttributeView(\n-        pathToFile(p).toPath(), BasicFileAttributeView.class);\n-    FileTime fmtime \u003d (mtime \u003e\u003d 0) ? FileTime.fromMillis(mtime) : null;\n-    FileTime fatime \u003d (atime \u003e\u003d 0) ? FileTime.fromMillis(atime) : null;\n-    view.setTimes(fmtime, fatime, null);\n+    try {\n+      BasicFileAttributeView view \u003d Files.getFileAttributeView(\n+          pathToFile(p).toPath(), BasicFileAttributeView.class);\n+      FileTime fmtime \u003d (mtime \u003e\u003d 0) ? FileTime.fromMillis(mtime) : null;\n+      FileTime fatime \u003d (atime \u003e\u003d 0) ? FileTime.fromMillis(atime) : null;\n+      view.setTimes(fmtime, fatime, null);\n+    } catch (NoSuchFileException e) {\n+      throw new FileNotFoundException(\"File \" + p + \" does not exist\");\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setTimes(Path p, long mtime, long atime) throws IOException {\n    try {\n      BasicFileAttributeView view \u003d Files.getFileAttributeView(\n          pathToFile(p).toPath(), BasicFileAttributeView.class);\n      FileTime fmtime \u003d (mtime \u003e\u003d 0) ? FileTime.fromMillis(mtime) : null;\n      FileTime fatime \u003d (atime \u003e\u003d 0) ? FileTime.fromMillis(atime) : null;\n      view.setTimes(fmtime, fatime, null);\n    } catch (NoSuchFileException e) {\n      throw new FileNotFoundException(\"File \" + p + \" does not exist\");\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/RawLocalFileSystem.java",
      "extendedDetails": {}
    },
    "ed1e3ce482f679ae2fad43a203f6578d7af59327": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12045. Enable LocalFileSystem#setTimes to change atime. Contributed by Kazuho Fujii.\n",
      "commitDate": "06/07/15 1:40 PM",
      "commitName": "ed1e3ce482f679ae2fad43a203f6578d7af59327",
      "commitAuthor": "cnauroth",
      "commitDateOld": "09/06/15 10:35 PM",
      "commitNameOld": "48ca23def1d1c28448a65238814070e79c8f4c4e",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 26.63,
      "commitsBetweenForRepo": 164,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,7 @@\n   public void setTimes(Path p, long mtime, long atime) throws IOException {\n-    File f \u003d pathToFile(p);\n-    if(mtime \u003e\u003d 0) {\n-      if(!f.setLastModified(mtime)) {\n-        throw new IOException(\n-          \"couldn\u0027t set last-modified time to \" +\n-          mtime +\n-          \" for \" +\n-          f.getAbsolutePath());\n-      }\n-    }\n+    BasicFileAttributeView view \u003d Files.getFileAttributeView(\n+        pathToFile(p).toPath(), BasicFileAttributeView.class);\n+    FileTime fmtime \u003d (mtime \u003e\u003d 0) ? FileTime.fromMillis(mtime) : null;\n+    FileTime fatime \u003d (atime \u003e\u003d 0) ? FileTime.fromMillis(atime) : null;\n+    view.setTimes(fmtime, fatime, null);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setTimes(Path p, long mtime, long atime) throws IOException {\n    BasicFileAttributeView view \u003d Files.getFileAttributeView(\n        pathToFile(p).toPath(), BasicFileAttributeView.class);\n    FileTime fmtime \u003d (mtime \u003e\u003d 0) ? FileTime.fromMillis(mtime) : null;\n    FileTime fatime \u003d (atime \u003e\u003d 0) ? FileTime.fromMillis(atime) : null;\n    view.setTimes(fmtime, fatime, null);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/RawLocalFileSystem.java",
      "extendedDetails": {}
    },
    "bfef63719d04a25d8105f82e24a77f5d66c30f58": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-9338. FsShell Copy Commands Should Optionally Preserve File Attributes. Contributed by Nick White.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1477714 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/04/13 9:27 AM",
      "commitName": "bfef63719d04a25d8105f82e24a77f5d66c30f58",
      "commitAuthor": "Aaron Myers",
      "diff": "@@ -0,0 +1,12 @@\n+  public void setTimes(Path p, long mtime, long atime) throws IOException {\n+    File f \u003d pathToFile(p);\n+    if(mtime \u003e\u003d 0) {\n+      if(!f.setLastModified(mtime)) {\n+        throw new IOException(\n+          \"couldn\u0027t set last-modified time to \" +\n+          mtime +\n+          \" for \" +\n+          f.getAbsolutePath());\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void setTimes(Path p, long mtime, long atime) throws IOException {\n    File f \u003d pathToFile(p);\n    if(mtime \u003e\u003d 0) {\n      if(!f.setLastModified(mtime)) {\n        throw new IOException(\n          \"couldn\u0027t set last-modified time to \" +\n          mtime +\n          \" for \" +\n          f.getAbsolutePath());\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/RawLocalFileSystem.java"
    }
  }
}