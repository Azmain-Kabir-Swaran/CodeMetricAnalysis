{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DeviceResourceDockerRuntimePluginImpl.java",
  "functionName": "getRuntimeSpec",
  "functionId": "getRuntimeSpec___container-Container",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/resourceplugin/deviceframework/DeviceResourceDockerRuntimePluginImpl.java",
  "functionStartLine": 191,
  "functionEndLine": 216,
  "numCommitsSeen": 2,
  "timeTaken": 689,
  "changeHistory": [
    "db4d1a1e2fd5931df9a866c97c581bdbc280f6e0"
  ],
  "changeHistoryShort": {
    "db4d1a1e2fd5931df9a866c97c581bdbc280f6e0": "Yintroduced"
  },
  "changeHistoryDetails": {
    "db4d1a1e2fd5931df9a866c97c581bdbc280f6e0": {
      "type": "Yintroduced",
      "commitMessage": "YARN-9060. [YARN-8851] Phase 1 - Support device isolation and use the Nvidia GPU plugin as an example. Contributed by Zhankun Tang.\n",
      "commitDate": "18/02/19 2:28 AM",
      "commitName": "db4d1a1e2fd5931df9a866c97c581bdbc280f6e0",
      "commitAuthor": "Sunil G",
      "diff": "@@ -0,0 +1,26 @@\n+  public synchronized DeviceRuntimeSpec getRuntimeSpec(Container container) {\n+    ContainerId containerId \u003d container.getContainerId();\n+    DeviceRuntimeSpec deviceRuntimeSpec \u003d cachedSpec.get(containerId);\n+    if (deviceRuntimeSpec \u003d\u003d null) {\n+      Set\u003cDevice\u003e allocated \u003d getAllocatedDevices(container);\n+      if (allocated \u003d\u003d null || allocated.size() \u003d\u003d 0) {\n+        LOG.error(\"Cannot get allocation for container:\" + containerId);\n+        return null;\n+      }\n+      try {\n+        deviceRuntimeSpec \u003d devicePlugin.onDevicesAllocated(allocated,\n+            YarnRuntimeType.RUNTIME_DOCKER);\n+      } catch (Exception e) {\n+        LOG.error(\"Exception thrown in onDeviceAllocated of \"\n+            + devicePlugin.getClass() + \" for container: \" + containerId, e);\n+      }\n+      if (deviceRuntimeSpec \u003d\u003d null) {\n+        LOG.error(\"Null DeviceRuntimeSpec value got from \"\n+            + devicePlugin.getClass() + \" for container: \"\n+            + containerId + \", please check plugin logic\");\n+        return null;\n+      }\n+      cachedSpec.put(containerId, deviceRuntimeSpec);\n+    }\n+    return deviceRuntimeSpec;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized DeviceRuntimeSpec getRuntimeSpec(Container container) {\n    ContainerId containerId \u003d container.getContainerId();\n    DeviceRuntimeSpec deviceRuntimeSpec \u003d cachedSpec.get(containerId);\n    if (deviceRuntimeSpec \u003d\u003d null) {\n      Set\u003cDevice\u003e allocated \u003d getAllocatedDevices(container);\n      if (allocated \u003d\u003d null || allocated.size() \u003d\u003d 0) {\n        LOG.error(\"Cannot get allocation for container:\" + containerId);\n        return null;\n      }\n      try {\n        deviceRuntimeSpec \u003d devicePlugin.onDevicesAllocated(allocated,\n            YarnRuntimeType.RUNTIME_DOCKER);\n      } catch (Exception e) {\n        LOG.error(\"Exception thrown in onDeviceAllocated of \"\n            + devicePlugin.getClass() + \" for container: \" + containerId, e);\n      }\n      if (deviceRuntimeSpec \u003d\u003d null) {\n        LOG.error(\"Null DeviceRuntimeSpec value got from \"\n            + devicePlugin.getClass() + \" for container: \"\n            + containerId + \", please check plugin logic\");\n        return null;\n      }\n      cachedSpec.put(containerId, deviceRuntimeSpec);\n    }\n    return deviceRuntimeSpec;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/resourceplugin/deviceframework/DeviceResourceDockerRuntimePluginImpl.java"
    }
  }
}