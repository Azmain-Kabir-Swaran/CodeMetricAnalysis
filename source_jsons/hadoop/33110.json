{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DeviceMappingManager.java",
  "functionName": "recoverAssignedDevices",
  "functionId": "recoverAssignedDevices___resourceName-String__containerId-ContainerId",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/resourceplugin/deviceframework/DeviceMappingManager.java",
  "functionStartLine": 216,
  "functionEndLine": 257,
  "numCommitsSeen": 5,
  "timeTaken": 653,
  "changeHistory": [
    "579ef4be063745c5211127eca83a393ceddc8b79"
  ],
  "changeHistoryShort": {
    "579ef4be063745c5211127eca83a393ceddc8b79": "Yintroduced"
  },
  "changeHistoryDetails": {
    "579ef4be063745c5211127eca83a393ceddc8b79": {
      "type": "Yintroduced",
      "commitMessage": "YARN-8882. [YARN-8851] Add a shared device mapping manager (scheduler) for device plugins. (Zhankun Tang via wangda)\n\nChange-Id: I9435136642c3d556971a357bf687f69df90bb45e\n",
      "commitDate": "28/11/18 2:09 PM",
      "commitName": "579ef4be063745c5211127eca83a393ceddc8b79",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,42 @@\n+  public synchronized void recoverAssignedDevices(String resourceName,\n+      ContainerId containerId)\n+      throws ResourceHandlerException {\n+    Container c \u003d nmContext.getContainers().get(containerId);\n+    Map\u003cDevice, ContainerId\u003e usedDevices \u003d allUsedDevices.get(resourceName);\n+    Set\u003cDevice\u003e allowedDevices \u003d allAllowedDevices.get(resourceName);\n+    if (null \u003d\u003d c) {\n+      throw new ResourceHandlerException(\n+          \"This shouldn\u0027t happen, cannot find container with id\u003d\"\n+              + containerId);\n+    }\n+\n+    for (Serializable deviceSerializable : c.getResourceMappings()\n+        .getAssignedResources(resourceName)) {\n+      if (!(deviceSerializable instanceof Device)) {\n+        throw new ResourceHandlerException(\n+            \"Trying to recover device id, however it\"\n+                + \" is not Device instance, this shouldn\u0027t happen\");\n+      }\n+\n+      Device device \u003d (Device) deviceSerializable;\n+\n+      // Make sure it is in allowed device.\n+      if (!allowedDevices.contains(device)) {\n+        throw new ResourceHandlerException(\n+            \"Try to recover device \u003d \" + device\n+                + \" however it is not in allowed device list:\" + StringUtils\n+                .join(\",\", allowedDevices));\n+      }\n+\n+      // Make sure it is not occupied by anybody else\n+      if (usedDevices.containsKey(device)) {\n+        throw new ResourceHandlerException(\n+            \"Try to recover device id \u003d \" + device\n+                + \" however it is already assigned to container\u003d\"\n+                + usedDevices.get(device)\n+                + \", please double check what happened.\");\n+      }\n+\n+      usedDevices.put(device, containerId);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void recoverAssignedDevices(String resourceName,\n      ContainerId containerId)\n      throws ResourceHandlerException {\n    Container c \u003d nmContext.getContainers().get(containerId);\n    Map\u003cDevice, ContainerId\u003e usedDevices \u003d allUsedDevices.get(resourceName);\n    Set\u003cDevice\u003e allowedDevices \u003d allAllowedDevices.get(resourceName);\n    if (null \u003d\u003d c) {\n      throw new ResourceHandlerException(\n          \"This shouldn\u0027t happen, cannot find container with id\u003d\"\n              + containerId);\n    }\n\n    for (Serializable deviceSerializable : c.getResourceMappings()\n        .getAssignedResources(resourceName)) {\n      if (!(deviceSerializable instanceof Device)) {\n        throw new ResourceHandlerException(\n            \"Trying to recover device id, however it\"\n                + \" is not Device instance, this shouldn\u0027t happen\");\n      }\n\n      Device device \u003d (Device) deviceSerializable;\n\n      // Make sure it is in allowed device.\n      if (!allowedDevices.contains(device)) {\n        throw new ResourceHandlerException(\n            \"Try to recover device \u003d \" + device\n                + \" however it is not in allowed device list:\" + StringUtils\n                .join(\",\", allowedDevices));\n      }\n\n      // Make sure it is not occupied by anybody else\n      if (usedDevices.containsKey(device)) {\n        throw new ResourceHandlerException(\n            \"Try to recover device id \u003d \" + device\n                + \" however it is already assigned to container\u003d\"\n                + usedDevices.get(device)\n                + \", please double check what happened.\");\n      }\n\n      usedDevices.put(device, containerId);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/resourceplugin/deviceframework/DeviceMappingManager.java"
    }
  }
}