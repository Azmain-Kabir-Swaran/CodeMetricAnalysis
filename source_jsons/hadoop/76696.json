{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RawErasureEncoder.java",
  "functionName": "encode",
  "functionId": "encode___inputs-byte[][]__outputs-byte[][]",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/erasurecode/rawcoder/RawErasureEncoder.java",
  "functionStartLine": 115,
  "functionEndLine": 125,
  "numCommitsSeen": 7,
  "timeTaken": 1434,
  "changeHistory": [
    "31ebccc96238136560f4210bdf6766fe18e0650c",
    "77202fa1035a54496d11d07472fbc399148ff630"
  ],
  "changeHistoryShort": {
    "31ebccc96238136560f4210bdf6766fe18e0650c": "Yexceptionschange",
    "77202fa1035a54496d11d07472fbc399148ff630": "Yintroduced"
  },
  "changeHistoryDetails": {
    "31ebccc96238136560f4210bdf6766fe18e0650c": {
      "type": "Yexceptionschange",
      "commitMessage": "HDFS-12613. Native EC coder should implement release() as idempotent function. (Lei (Eddy) Xu)\n",
      "commitDate": "16/10/17 7:44 PM",
      "commitName": "31ebccc96238136560f4210bdf6766fe18e0650c",
      "commitAuthor": "Lei Xu",
      "commitDateOld": "26/05/16 10:23 PM",
      "commitNameOld": "77202fa1035a54496d11d07472fbc399148ff630",
      "commitAuthorOld": "Kai Zheng",
      "daysBetweenCommits": 507.89,
      "commitsBetweenForRepo": 3419,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n-  public void encode(byte[][] inputs, byte[][] outputs) {\n+  public void encode(byte[][] inputs, byte[][] outputs) throws IOException {\n     ByteArrayEncodingState baeState \u003d new ByteArrayEncodingState(\n         this, inputs, outputs);\n \n     int dataLen \u003d baeState.encodeLength;\n     if (dataLen \u003d\u003d 0) {\n       return;\n     }\n \n     doEncode(baeState);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void encode(byte[][] inputs, byte[][] outputs) throws IOException {\n    ByteArrayEncodingState baeState \u003d new ByteArrayEncodingState(\n        this, inputs, outputs);\n\n    int dataLen \u003d baeState.encodeLength;\n    if (dataLen \u003d\u003d 0) {\n      return;\n    }\n\n    doEncode(baeState);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/erasurecode/rawcoder/RawErasureEncoder.java",
      "extendedDetails": {
        "oldValue": "[]",
        "newValue": "[IOException]"
      }
    },
    "77202fa1035a54496d11d07472fbc399148ff630": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-13010. Refactor raw erasure coders. Contributed by Kai Zheng\n",
      "commitDate": "26/05/16 10:23 PM",
      "commitName": "77202fa1035a54496d11d07472fbc399148ff630",
      "commitAuthor": "Kai Zheng",
      "diff": "@@ -0,0 +1,11 @@\n+  public void encode(byte[][] inputs, byte[][] outputs) {\n+    ByteArrayEncodingState baeState \u003d new ByteArrayEncodingState(\n+        this, inputs, outputs);\n+\n+    int dataLen \u003d baeState.encodeLength;\n+    if (dataLen \u003d\u003d 0) {\n+      return;\n+    }\n+\n+    doEncode(baeState);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void encode(byte[][] inputs, byte[][] outputs) {\n    ByteArrayEncodingState baeState \u003d new ByteArrayEncodingState(\n        this, inputs, outputs);\n\n    int dataLen \u003d baeState.encodeLength;\n    if (dataLen \u003d\u003d 0) {\n      return;\n    }\n\n    doEncode(baeState);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/erasurecode/rawcoder/RawErasureEncoder.java"
    }
  }
}