{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NMTimelinePublisher.java",
  "functionName": "serviceInit",
  "functionId": "serviceInit___conf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/timelineservice/NMTimelinePublisher.java",
  "functionStartLine": 104,
  "functionEndLine": 124,
  "numCommitsSeen": 28,
  "timeTaken": 2831,
  "changeHistory": [
    "e3ec18b0c4fb93bd00c12d90057c2b982ca8a676",
    "2d00a0c71b5dde31e2cf8fcb96d9d541d41fb879",
    "7fc09c4f7255645025ddf902dff70a17092ea039",
    "443523f9c0fcc4ba2503791090b1879c6031759b",
    "b664569586db39647f15340ce82ccc0f0869897e",
    "a59df15757fac7f917cb96fc8fcfeb7017475e4f",
    "84c35ac6c4a76c31d9bf9c87b87ed29394564611",
    "89e5c44f9e891a3579384c3fa3766937cd4970f1",
    "477a30f536277bf95d7181bf1b2fdda52d83bf51"
  ],
  "changeHistoryShort": {
    "e3ec18b0c4fb93bd00c12d90057c2b982ca8a676": "Ybodychange",
    "2d00a0c71b5dde31e2cf8fcb96d9d541d41fb879": "Ybodychange",
    "7fc09c4f7255645025ddf902dff70a17092ea039": "Ybodychange",
    "443523f9c0fcc4ba2503791090b1879c6031759b": "Ybodychange",
    "b664569586db39647f15340ce82ccc0f0869897e": "Ybodychange",
    "a59df15757fac7f917cb96fc8fcfeb7017475e4f": "Ybodychange",
    "84c35ac6c4a76c31d9bf9c87b87ed29394564611": "Ybodychange",
    "89e5c44f9e891a3579384c3fa3766937cd4970f1": "Ybodychange",
    "477a30f536277bf95d7181bf1b2fdda52d83bf51": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e3ec18b0c4fb93bd00c12d90057c2b982ca8a676": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6735. Have a way to turn off container metrics from NMs. Contributed by Abhishek Modi.\n",
      "commitDate": "05/02/19 12:18 AM",
      "commitName": "e3ec18b0c4fb93bd00c12d90057c2b982ca8a676",
      "commitAuthor": "Rohith Sharma K S",
      "commitDateOld": "14/06/18 12:08 AM",
      "commitNameOld": "9119b3cf8f883aa2d5df534afc0c50249fed03c6",
      "commitAuthorOld": "Rohith Sharma K S",
      "daysBetweenCommits": 236.05,
      "commitsBetweenForRepo": 1785,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,21 @@\n   protected void serviceInit(Configuration conf) throws Exception {\n     dispatcher \u003d createDispatcher();\n     dispatcher.register(NMTimelineEventType.class,\n         new ForwardingEventHandler());\n     addIfService(dispatcher);\n     this.nmLoginUGI \u003d  UserGroupInformation.isSecurityEnabled() ?\n         UserGroupInformation.getLoginUser() :\n         UserGroupInformation.getCurrentUser();\n     LOG.info(\"Initialized NMTimelinePublisher UGI to \" + nmLoginUGI);\n \n     String webAppURLWithoutScheme \u003d\n         WebAppUtils.getNMWebAppURLWithoutScheme(conf);\n     if (webAppURLWithoutScheme.contains(\":\")) {\n       httpPort \u003d webAppURLWithoutScheme.split(\":\")[1];\n     }\n+\n+    publishNMContainerEvents \u003d conf.getBoolean(\n+        YarnConfiguration.NM_PUBLISH_CONTAINER_EVENTS_ENABLED,\n+        YarnConfiguration.DEFAULT_NM_PUBLISH_CONTAINER_EVENTS_ENABLED);\n     super.serviceInit(conf);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    dispatcher \u003d createDispatcher();\n    dispatcher.register(NMTimelineEventType.class,\n        new ForwardingEventHandler());\n    addIfService(dispatcher);\n    this.nmLoginUGI \u003d  UserGroupInformation.isSecurityEnabled() ?\n        UserGroupInformation.getLoginUser() :\n        UserGroupInformation.getCurrentUser();\n    LOG.info(\"Initialized NMTimelinePublisher UGI to \" + nmLoginUGI);\n\n    String webAppURLWithoutScheme \u003d\n        WebAppUtils.getNMWebAppURLWithoutScheme(conf);\n    if (webAppURLWithoutScheme.contains(\":\")) {\n      httpPort \u003d webAppURLWithoutScheme.split(\":\")[1];\n    }\n\n    publishNMContainerEvents \u003d conf.getBoolean(\n        YarnConfiguration.NM_PUBLISH_CONTAINER_EVENTS_ENABLED,\n        YarnConfiguration.DEFAULT_NM_PUBLISH_CONTAINER_EVENTS_ENABLED);\n    super.serviceInit(conf);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/timelineservice/NMTimelinePublisher.java",
      "extendedDetails": {}
    },
    "2d00a0c71b5dde31e2cf8fcb96d9d541d41fb879": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8130 Race condition when container events are published for KILLED applications. (Rohith Sharma K S via Haibo Chen)\n",
      "commitDate": "14/05/18 11:08 AM",
      "commitName": "2d00a0c71b5dde31e2cf8fcb96d9d541d41fb879",
      "commitAuthor": "Haibo Chen",
      "commitDateOld": "26/04/18 10:03 PM",
      "commitNameOld": "7fc09c4f7255645025ddf902dff70a17092ea039",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 17.55,
      "commitsBetweenForRepo": 127,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   protected void serviceInit(Configuration conf) throws Exception {\n-    dispatcher \u003d new AsyncDispatcher(\"NM Timeline dispatcher\");\n+    dispatcher \u003d createDispatcher();\n     dispatcher.register(NMTimelineEventType.class,\n         new ForwardingEventHandler());\n     addIfService(dispatcher);\n     this.nmLoginUGI \u003d  UserGroupInformation.isSecurityEnabled() ?\n         UserGroupInformation.getLoginUser() :\n         UserGroupInformation.getCurrentUser();\n     LOG.info(\"Initialized NMTimelinePublisher UGI to \" + nmLoginUGI);\n \n     String webAppURLWithoutScheme \u003d\n         WebAppUtils.getNMWebAppURLWithoutScheme(conf);\n     if (webAppURLWithoutScheme.contains(\":\")) {\n       httpPort \u003d webAppURLWithoutScheme.split(\":\")[1];\n     }\n     super.serviceInit(conf);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    dispatcher \u003d createDispatcher();\n    dispatcher.register(NMTimelineEventType.class,\n        new ForwardingEventHandler());\n    addIfService(dispatcher);\n    this.nmLoginUGI \u003d  UserGroupInformation.isSecurityEnabled() ?\n        UserGroupInformation.getLoginUser() :\n        UserGroupInformation.getCurrentUser();\n    LOG.info(\"Initialized NMTimelinePublisher UGI to \" + nmLoginUGI);\n\n    String webAppURLWithoutScheme \u003d\n        WebAppUtils.getNMWebAppURLWithoutScheme(conf);\n    if (webAppURLWithoutScheme.contains(\":\")) {\n      httpPort \u003d webAppURLWithoutScheme.split(\":\")[1];\n    }\n    super.serviceInit(conf);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/timelineservice/NMTimelinePublisher.java",
      "extendedDetails": {}
    },
    "7fc09c4f7255645025ddf902dff70a17092ea039": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8215. ATS v2 returns invalid YARN_CONTAINER_ALLOCATED_HOST_HTTP_ADDRESS from NM. Contributed by Rohith Sharma K S.\n",
      "commitDate": "26/04/18 10:03 PM",
      "commitName": "7fc09c4f7255645025ddf902dff70a17092ea039",
      "commitAuthor": "Sunil G",
      "commitDateOld": "27/01/18 10:18 PM",
      "commitNameOld": "443523f9c0fcc4ba2503791090b1879c6031759b",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 88.95,
      "commitsBetweenForRepo": 1236,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,17 @@\n   protected void serviceInit(Configuration conf) throws Exception {\n     dispatcher \u003d new AsyncDispatcher(\"NM Timeline dispatcher\");\n     dispatcher.register(NMTimelineEventType.class,\n         new ForwardingEventHandler());\n     addIfService(dispatcher);\n     this.nmLoginUGI \u003d  UserGroupInformation.isSecurityEnabled() ?\n         UserGroupInformation.getLoginUser() :\n         UserGroupInformation.getCurrentUser();\n     LOG.info(\"Initialized NMTimelinePublisher UGI to \" + nmLoginUGI);\n+\n+    String webAppURLWithoutScheme \u003d\n+        WebAppUtils.getNMWebAppURLWithoutScheme(conf);\n+    if (webAppURLWithoutScheme.contains(\":\")) {\n+      httpPort \u003d webAppURLWithoutScheme.split(\":\")[1];\n+    }\n     super.serviceInit(conf);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    dispatcher \u003d new AsyncDispatcher(\"NM Timeline dispatcher\");\n    dispatcher.register(NMTimelineEventType.class,\n        new ForwardingEventHandler());\n    addIfService(dispatcher);\n    this.nmLoginUGI \u003d  UserGroupInformation.isSecurityEnabled() ?\n        UserGroupInformation.getLoginUser() :\n        UserGroupInformation.getCurrentUser();\n    LOG.info(\"Initialized NMTimelinePublisher UGI to \" + nmLoginUGI);\n\n    String webAppURLWithoutScheme \u003d\n        WebAppUtils.getNMWebAppURLWithoutScheme(conf);\n    if (webAppURLWithoutScheme.contains(\":\")) {\n      httpPort \u003d webAppURLWithoutScheme.split(\":\")[1];\n    }\n    super.serviceInit(conf);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/timelineservice/NMTimelinePublisher.java",
      "extendedDetails": {}
    },
    "443523f9c0fcc4ba2503791090b1879c6031759b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7765. Fixed an issue that kerberos tgt not found when NM posting timeline events. Contributed by Rohith Sharma K S\n",
      "commitDate": "27/01/18 10:18 PM",
      "commitName": "443523f9c0fcc4ba2503791090b1879c6031759b",
      "commitAuthor": "Jian He",
      "commitDateOld": "29/08/17 10:59 PM",
      "commitNameOld": "08f40bcc7f4174857bb1fc7c8eb1108d5caaafb3",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 151.01,
      "commitsBetweenForRepo": 1097,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,11 @@\n   protected void serviceInit(Configuration conf) throws Exception {\n     dispatcher \u003d new AsyncDispatcher(\"NM Timeline dispatcher\");\n     dispatcher.register(NMTimelineEventType.class,\n         new ForwardingEventHandler());\n     addIfService(dispatcher);\n     this.nmLoginUGI \u003d  UserGroupInformation.isSecurityEnabled() ?\n         UserGroupInformation.getLoginUser() :\n         UserGroupInformation.getCurrentUser();\n+    LOG.info(\"Initialized NMTimelinePublisher UGI to \" + nmLoginUGI);\n     super.serviceInit(conf);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    dispatcher \u003d new AsyncDispatcher(\"NM Timeline dispatcher\");\n    dispatcher.register(NMTimelineEventType.class,\n        new ForwardingEventHandler());\n    addIfService(dispatcher);\n    this.nmLoginUGI \u003d  UserGroupInformation.isSecurityEnabled() ?\n        UserGroupInformation.getLoginUser() :\n        UserGroupInformation.getCurrentUser();\n    LOG.info(\"Initialized NMTimelinePublisher UGI to \" + nmLoginUGI);\n    super.serviceInit(conf);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/timelineservice/NMTimelinePublisher.java",
      "extendedDetails": {}
    },
    "b664569586db39647f15340ce82ccc0f0869897e": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7006. [ATSv2 Security] Changes for authentication for CollectorNodemanagerProtocol. Contributed by Varun Saxena\n",
      "commitDate": "29/08/17 10:59 PM",
      "commitName": "b664569586db39647f15340ce82ccc0f0869897e",
      "commitAuthor": "Jian He",
      "commitDateOld": "29/08/17 10:59 PM",
      "commitNameOld": "092fead5d9875fb3760206bcdd76cdafec5e9481",
      "commitAuthorOld": "Sangjin Lee",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 36,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,10 @@\n   protected void serviceInit(Configuration conf) throws Exception {\n     dispatcher \u003d new AsyncDispatcher(\"NM Timeline dispatcher\");\n     dispatcher.register(NMTimelineEventType.class,\n         new ForwardingEventHandler());\n     addIfService(dispatcher);\n+    this.nmLoginUGI \u003d  UserGroupInformation.isSecurityEnabled() ?\n+        UserGroupInformation.getLoginUser() :\n+        UserGroupInformation.getCurrentUser();\n     super.serviceInit(conf);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    dispatcher \u003d new AsyncDispatcher(\"NM Timeline dispatcher\");\n    dispatcher.register(NMTimelineEventType.class,\n        new ForwardingEventHandler());\n    addIfService(dispatcher);\n    this.nmLoginUGI \u003d  UserGroupInformation.isSecurityEnabled() ?\n        UserGroupInformation.getLoginUser() :\n        UserGroupInformation.getCurrentUser();\n    super.serviceInit(conf);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/timelineservice/NMTimelinePublisher.java",
      "extendedDetails": {}
    },
    "a59df15757fac7f917cb96fc8fcfeb7017475e4f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6015. AsyncDispatcher thread name can be set to improved debugging. Contributed by Ajith S.\n",
      "commitDate": "06/01/17 6:41 PM",
      "commitName": "a59df15757fac7f917cb96fc8fcfeb7017475e4f",
      "commitAuthor": "Naganarasimha",
      "commitDateOld": "15/10/16 1:54 PM",
      "commitNameOld": "1f304b0c7f261369dd68839507bb609a949965ad",
      "commitAuthorOld": "Sangjin Lee",
      "daysBetweenCommits": 83.24,
      "commitsBetweenForRepo": 562,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,7 @@\n   protected void serviceInit(Configuration conf) throws Exception {\n-    dispatcher \u003d new AsyncDispatcher();\n+    dispatcher \u003d new AsyncDispatcher(\"NM Timeline dispatcher\");\n     dispatcher.register(NMTimelineEventType.class,\n         new ForwardingEventHandler());\n     addIfService(dispatcher);\n     super.serviceInit(conf);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    dispatcher \u003d new AsyncDispatcher(\"NM Timeline dispatcher\");\n    dispatcher.register(NMTimelineEventType.class,\n        new ForwardingEventHandler());\n    addIfService(dispatcher);\n    super.serviceInit(conf);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/timelineservice/NMTimelinePublisher.java",
      "extendedDetails": {}
    },
    "84c35ac6c4a76c31d9bf9c87b87ed29394564611": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4711. NM is going down with NPE\u0027s due to single thread processing of events by Timeline client (Naganarasimha G R via sjlee)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "84c35ac6c4a76c31d9bf9c87b87ed29394564611",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "6f6cc647d6e77f6cc4c66e0534f8c73bc1612a1b",
      "commitAuthorOld": "Varun Saxena",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,7 @@\n   protected void serviceInit(Configuration conf) throws Exception {\n     dispatcher \u003d new AsyncDispatcher();\n     dispatcher.register(NMTimelineEventType.class,\n         new ForwardingEventHandler());\n-    dispatcher\n-        .register(ContainerEventType.class, new ContainerEventHandler());\n-    dispatcher.register(ApplicationEventType.class,\n-        new ApplicationEventHandler());\n-    dispatcher.register(LocalizationEventType.class,\n-        new LocalizationEventDispatcher());\n     addIfService(dispatcher);\n     super.serviceInit(conf);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    dispatcher \u003d new AsyncDispatcher();\n    dispatcher.register(NMTimelineEventType.class,\n        new ForwardingEventHandler());\n    addIfService(dispatcher);\n    super.serviceInit(conf);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/timelineservice/NMTimelinePublisher.java",
      "extendedDetails": {}
    },
    "89e5c44f9e891a3579384c3fa3766937cd4970f1": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4356. Ensure the timeline service v.2 is disabled cleanly and has no\nimpact when it\u0027s turned off. Contributed by Sangjin Lee.\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "89e5c44f9e891a3579384c3fa3766937cd4970f1",
      "commitAuthor": "Li Lu",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "477a30f536277bf95d7181bf1b2fdda52d83bf51",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 21,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,13 @@\n   protected void serviceInit(Configuration conf) throws Exception {\n-    publishSystemMetrics \u003d\n-        YarnConfiguration.systemMetricsPublisherEnabled(conf);\n-\n-    if (publishSystemMetrics) {\n-      dispatcher \u003d new AsyncDispatcher();\n-      dispatcher.register(NMTimelineEventType.class,\n-          new ForwardingEventHandler());\n-      dispatcher\n-          .register(ContainerEventType.class, new ContainerEventHandler());\n-      dispatcher.register(ApplicationEventType.class,\n-          new ApplicationEventHandler());\n-      dispatcher.register(LocalizationEventType.class,\n-          new LocalizationEventDispatcher());\n-      addIfService(dispatcher);\n-      LOG.info(\"YARN system metrics publishing service is enabled\");\n-    } else {\n-      LOG.info(\"YARN system metrics publishing service is not enabled\");\n-    }\n+    dispatcher \u003d new AsyncDispatcher();\n+    dispatcher.register(NMTimelineEventType.class,\n+        new ForwardingEventHandler());\n+    dispatcher\n+        .register(ContainerEventType.class, new ContainerEventHandler());\n+    dispatcher.register(ApplicationEventType.class,\n+        new ApplicationEventHandler());\n+    dispatcher.register(LocalizationEventType.class,\n+        new LocalizationEventDispatcher());\n+    addIfService(dispatcher);\n     super.serviceInit(conf);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    dispatcher \u003d new AsyncDispatcher();\n    dispatcher.register(NMTimelineEventType.class,\n        new ForwardingEventHandler());\n    dispatcher\n        .register(ContainerEventType.class, new ContainerEventHandler());\n    dispatcher.register(ApplicationEventType.class,\n        new ApplicationEventHandler());\n    dispatcher.register(LocalizationEventType.class,\n        new LocalizationEventDispatcher());\n    addIfService(dispatcher);\n    super.serviceInit(conf);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/timelineservice/NMTimelinePublisher.java",
      "extendedDetails": {}
    },
    "477a30f536277bf95d7181bf1b2fdda52d83bf51": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3045. Implement NM writing container lifecycle events to Timeline Service v2. Contributed by Naganarasimha G R.\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "477a30f536277bf95d7181bf1b2fdda52d83bf51",
      "commitAuthor": "Junping Du",
      "diff": "@@ -0,0 +1,21 @@\n+  protected void serviceInit(Configuration conf) throws Exception {\n+    publishSystemMetrics \u003d\n+        YarnConfiguration.systemMetricsPublisherEnabled(conf);\n+\n+    if (publishSystemMetrics) {\n+      dispatcher \u003d new AsyncDispatcher();\n+      dispatcher.register(NMTimelineEventType.class,\n+          new ForwardingEventHandler());\n+      dispatcher\n+          .register(ContainerEventType.class, new ContainerEventHandler());\n+      dispatcher.register(ApplicationEventType.class,\n+          new ApplicationEventHandler());\n+      dispatcher.register(LocalizationEventType.class,\n+          new LocalizationEventDispatcher());\n+      addIfService(dispatcher);\n+      LOG.info(\"YARN system metrics publishing service is enabled\");\n+    } else {\n+      LOG.info(\"YARN system metrics publishing service is not enabled\");\n+    }\n+    super.serviceInit(conf);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    publishSystemMetrics \u003d\n        YarnConfiguration.systemMetricsPublisherEnabled(conf);\n\n    if (publishSystemMetrics) {\n      dispatcher \u003d new AsyncDispatcher();\n      dispatcher.register(NMTimelineEventType.class,\n          new ForwardingEventHandler());\n      dispatcher\n          .register(ContainerEventType.class, new ContainerEventHandler());\n      dispatcher.register(ApplicationEventType.class,\n          new ApplicationEventHandler());\n      dispatcher.register(LocalizationEventType.class,\n          new LocalizationEventDispatcher());\n      addIfService(dispatcher);\n      LOG.info(\"YARN system metrics publishing service is enabled\");\n    } else {\n      LOG.info(\"YARN system metrics publishing service is not enabled\");\n    }\n    super.serviceInit(conf);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/timelineservice/NMTimelinePublisher.java"
    }
  }
}