{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Lz4Compressor.java",
  "functionName": "setInput",
  "functionId": "setInput___b-byte[]__off-int__len-int",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/compress/lz4/Lz4Compressor.java",
  "functionStartLine": 110,
  "functionEndLine": 130,
  "numCommitsSeen": 5,
  "timeTaken": 817,
  "changeHistory": [
    "191b56d802b78b8d5ca43e43544b5ecef674a09c"
  ],
  "changeHistoryShort": {
    "191b56d802b78b8d5ca43e43544b5ecef674a09c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "191b56d802b78b8d5ca43e43544b5ecef674a09c": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7657. Add support for LZ4 compression. Contributed by Binglin Chang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1220314 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/12/11 4:54 PM",
      "commitName": "191b56d802b78b8d5ca43e43544b5ecef674a09c",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,21 @@\n+  public synchronized void setInput(byte[] b, int off, int len) {\n+    if (b \u003d\u003d null) {\n+      throw new NullPointerException();\n+    }\n+    if (off \u003c 0 || len \u003c 0 || off \u003e b.length - len) {\n+      throw new ArrayIndexOutOfBoundsException();\n+    }\n+    finished \u003d false;\n+\n+    if (len \u003e uncompressedDirectBuf.remaining()) {\n+      // save data; now !needsInput\n+      this.userBuf \u003d b;\n+      this.userBufOff \u003d off;\n+      this.userBufLen \u003d len;\n+    } else {\n+      ((ByteBuffer) uncompressedDirectBuf).put(b, off, len);\n+      uncompressedDirectBufLen \u003d uncompressedDirectBuf.position();\n+    }\n+\n+    bytesRead +\u003d len;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void setInput(byte[] b, int off, int len) {\n    if (b \u003d\u003d null) {\n      throw new NullPointerException();\n    }\n    if (off \u003c 0 || len \u003c 0 || off \u003e b.length - len) {\n      throw new ArrayIndexOutOfBoundsException();\n    }\n    finished \u003d false;\n\n    if (len \u003e uncompressedDirectBuf.remaining()) {\n      // save data; now !needsInput\n      this.userBuf \u003d b;\n      this.userBufOff \u003d off;\n      this.userBufLen \u003d len;\n    } else {\n      ((ByteBuffer) uncompressedDirectBuf).put(b, off, len);\n      uncompressedDirectBufLen \u003d uncompressedDirectBuf.position();\n    }\n\n    bytesRead +\u003d len;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/compress/lz4/Lz4Compressor.java"
    }
  }
}