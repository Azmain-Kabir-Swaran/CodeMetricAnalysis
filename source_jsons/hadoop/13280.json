{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DatanodeManager.java",
  "functionName": "getDatanode",
  "functionId": "getDatanode___nodeID-DatanodeID",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeManager.java",
  "functionStartLine": 670,
  "functionEndLine": 683,
  "numCommitsSeen": 197,
  "timeTaken": 7901,
  "changeHistory": [
    "3ae38ec7dfa1aaf451cf889cec6cf862379af32a",
    "4551da302d94cffea0313eac79479ab6f9b7cb34",
    "be7dd8333a7e56e732171db0781786987de03195",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "969a263188f7015261719fe45fa1505121ebb80e",
    "233a7aa34f37350bf7bcdd9c84b97d613e7344c9",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "3ae38ec7dfa1aaf451cf889cec6cf862379af32a": "Ybodychange",
    "4551da302d94cffea0313eac79479ab6f9b7cb34": "Ybodychange",
    "be7dd8333a7e56e732171db0781786987de03195": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "969a263188f7015261719fe45fa1505121ebb80e": "Ymultichange(Ymovefromfile,Ybodychange)",
    "233a7aa34f37350bf7bcdd9c84b97d613e7344c9": "Yexceptionschange",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3ae38ec7dfa1aaf451cf889cec6cf862379af32a": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7712. Switch blockStateChangeLog to use slf4j.\n",
      "commitDate": "03/02/15 3:01 PM",
      "commitName": "3ae38ec7dfa1aaf451cf889cec6cf862379af32a",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "13/01/15 12:24 AM",
      "commitNameOld": "08ac06283a3e9bf0d49d873823aabd419b08e41f",
      "commitAuthorOld": "Konstantin V Shvachko",
      "daysBetweenCommits": 21.61,
      "commitsBetweenForRepo": 160,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n   public DatanodeDescriptor getDatanode(DatanodeID nodeID\n       ) throws UnregisteredNodeException {\n     final DatanodeDescriptor node \u003d getDatanode(nodeID.getDatanodeUuid());\n     if (node \u003d\u003d null) \n       return null;\n     if (!node.getXferAddr().equals(nodeID.getXferAddr())) {\n       final UnregisteredNodeException e \u003d new UnregisteredNodeException(\n           nodeID, node);\n-      NameNode.stateChangeLog.fatal(\"BLOCK* NameSystem.getDatanode: \"\n+      NameNode.stateChangeLog.error(\"BLOCK* NameSystem.getDatanode: \"\n                                     + e.getLocalizedMessage());\n       throw e;\n     }\n     return node;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public DatanodeDescriptor getDatanode(DatanodeID nodeID\n      ) throws UnregisteredNodeException {\n    final DatanodeDescriptor node \u003d getDatanode(nodeID.getDatanodeUuid());\n    if (node \u003d\u003d null) \n      return null;\n    if (!node.getXferAddr().equals(nodeID.getXferAddr())) {\n      final UnregisteredNodeException e \u003d new UnregisteredNodeException(\n          nodeID, node);\n      NameNode.stateChangeLog.error(\"BLOCK* NameSystem.getDatanode: \"\n                                    + e.getLocalizedMessage());\n      throw e;\n    }\n    return node;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeManager.java",
      "extendedDetails": {}
    },
    "4551da302d94cffea0313eac79479ab6f9b7cb34": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5233. Use Datanode UUID to identify Datanodes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2832@1525407 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/09/13 11:03 AM",
      "commitName": "4551da302d94cffea0313eac79479ab6f9b7cb34",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "08/09/13 3:53 PM",
      "commitNameOld": "282be1b38e5cd141ed7e2b2194bfb67a7c2f7f15",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 13.8,
      "commitsBetweenForRepo": 61,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n   public DatanodeDescriptor getDatanode(DatanodeID nodeID\n       ) throws UnregisteredNodeException {\n-    final DatanodeDescriptor node \u003d getDatanode(nodeID.getStorageID());\n+    final DatanodeDescriptor node \u003d getDatanode(nodeID.getDatanodeUuid());\n     if (node \u003d\u003d null) \n       return null;\n     if (!node.getXferAddr().equals(nodeID.getXferAddr())) {\n       final UnregisteredNodeException e \u003d new UnregisteredNodeException(\n           nodeID, node);\n       NameNode.stateChangeLog.fatal(\"BLOCK* NameSystem.getDatanode: \"\n                                     + e.getLocalizedMessage());\n       throw e;\n     }\n     return node;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public DatanodeDescriptor getDatanode(DatanodeID nodeID\n      ) throws UnregisteredNodeException {\n    final DatanodeDescriptor node \u003d getDatanode(nodeID.getDatanodeUuid());\n    if (node \u003d\u003d null) \n      return null;\n    if (!node.getXferAddr().equals(nodeID.getXferAddr())) {\n      final UnregisteredNodeException e \u003d new UnregisteredNodeException(\n          nodeID, node);\n      NameNode.stateChangeLog.fatal(\"BLOCK* NameSystem.getDatanode: \"\n                                    + e.getLocalizedMessage());\n      throw e;\n    }\n    return node;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeManager.java",
      "extendedDetails": {}
    },
    "be7dd8333a7e56e732171db0781786987de03195": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3144. Refactor DatanodeID#getName by use. Contributed by Eli Collins\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1308205 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "01/04/12 3:12 PM",
      "commitName": "be7dd8333a7e56e732171db0781786987de03195",
      "commitAuthor": "Eli Collins",
      "commitDateOld": "31/03/12 8:41 PM",
      "commitNameOld": "0663dbaac0a19719ddf9cd4290ba893bfca69da2",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.77,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n   public DatanodeDescriptor getDatanode(DatanodeID nodeID\n       ) throws UnregisteredNodeException {\n     final DatanodeDescriptor node \u003d getDatanode(nodeID.getStorageID());\n     if (node \u003d\u003d null) \n       return null;\n-    if (!node.getName().equals(nodeID.getName())) {\n+    if (!node.getXferAddr().equals(nodeID.getXferAddr())) {\n       final UnregisteredNodeException e \u003d new UnregisteredNodeException(\n           nodeID, node);\n       NameNode.stateChangeLog.fatal(\"BLOCK* NameSystem.getDatanode: \"\n                                     + e.getLocalizedMessage());\n       throw e;\n     }\n     return node;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public DatanodeDescriptor getDatanode(DatanodeID nodeID\n      ) throws UnregisteredNodeException {\n    final DatanodeDescriptor node \u003d getDatanode(nodeID.getStorageID());\n    if (node \u003d\u003d null) \n      return null;\n    if (!node.getXferAddr().equals(nodeID.getXferAddr())) {\n      final UnregisteredNodeException e \u003d new UnregisteredNodeException(\n          nodeID, node);\n      NameNode.stateChangeLog.fatal(\"BLOCK* NameSystem.getDatanode: \"\n                                    + e.getLocalizedMessage());\n      throw e;\n    }\n    return node;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeManager.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public DatanodeDescriptor getDatanode(DatanodeID nodeID\n      ) throws UnregisteredNodeException {\n    final DatanodeDescriptor node \u003d getDatanode(nodeID.getStorageID());\n    if (node \u003d\u003d null) \n      return null;\n    if (!node.getName().equals(nodeID.getName())) {\n      final UnregisteredNodeException e \u003d new UnregisteredNodeException(\n          nodeID, node);\n      NameNode.stateChangeLog.fatal(\"BLOCK* NameSystem.getDatanode: \"\n                                    + e.getLocalizedMessage());\n      throw e;\n    }\n    return node;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeManager.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeManager.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeManager.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public DatanodeDescriptor getDatanode(DatanodeID nodeID\n      ) throws UnregisteredNodeException {\n    final DatanodeDescriptor node \u003d getDatanode(nodeID.getStorageID());\n    if (node \u003d\u003d null) \n      return null;\n    if (!node.getName().equals(nodeID.getName())) {\n      final UnregisteredNodeException e \u003d new UnregisteredNodeException(\n          nodeID, node);\n      NameNode.stateChangeLog.fatal(\"BLOCK* NameSystem.getDatanode: \"\n                                    + e.getLocalizedMessage());\n      throw e;\n    }\n    return node;\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeManager.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeManager.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeManager.java"
      }
    },
    "969a263188f7015261719fe45fa1505121ebb80e": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "HDFS-2191.  Move datanodeMap from FSNamesystem to DatanodeManager.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1151339 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "26/07/11 10:46 PM",
      "commitName": "969a263188f7015261719fe45fa1505121ebb80e",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-2191.  Move datanodeMap from FSNamesystem to DatanodeManager.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1151339 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "26/07/11 10:46 PM",
          "commitName": "969a263188f7015261719fe45fa1505121ebb80e",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "26/07/11 1:46 PM",
          "commitNameOld": "438c32aaf9fb0c63f55044cf5ef1b2e0adcf7fea",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.37,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,14 @@\n   public DatanodeDescriptor getDatanode(DatanodeID nodeID\n       ) throws UnregisteredNodeException {\n-    assert hasReadOrWriteLock();\n-    UnregisteredNodeException e \u003d null;\n-    DatanodeDescriptor node \u003d datanodeMap.get(nodeID.getStorageID());\n+    final DatanodeDescriptor node \u003d getDatanode(nodeID.getStorageID());\n     if (node \u003d\u003d null) \n       return null;\n     if (!node.getName().equals(nodeID.getName())) {\n-      e \u003d new UnregisteredNodeException(nodeID, node);\n+      final UnregisteredNodeException e \u003d new UnregisteredNodeException(\n+          nodeID, node);\n       NameNode.stateChangeLog.fatal(\"BLOCK* NameSystem.getDatanode: \"\n                                     + e.getLocalizedMessage());\n       throw e;\n     }\n     return node;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public DatanodeDescriptor getDatanode(DatanodeID nodeID\n      ) throws UnregisteredNodeException {\n    final DatanodeDescriptor node \u003d getDatanode(nodeID.getStorageID());\n    if (node \u003d\u003d null) \n      return null;\n    if (!node.getName().equals(nodeID.getName())) {\n      final UnregisteredNodeException e \u003d new UnregisteredNodeException(\n          nodeID, node);\n      NameNode.stateChangeLog.fatal(\"BLOCK* NameSystem.getDatanode: \"\n                                    + e.getLocalizedMessage());\n      throw e;\n    }\n    return node;\n  }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeManager.java",
          "extendedDetails": {
            "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
            "newPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeManager.java",
            "oldMethodName": "getDatanode",
            "newMethodName": "getDatanode"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-2191.  Move datanodeMap from FSNamesystem to DatanodeManager.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1151339 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "26/07/11 10:46 PM",
          "commitName": "969a263188f7015261719fe45fa1505121ebb80e",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "26/07/11 1:46 PM",
          "commitNameOld": "438c32aaf9fb0c63f55044cf5ef1b2e0adcf7fea",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.37,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,14 @@\n   public DatanodeDescriptor getDatanode(DatanodeID nodeID\n       ) throws UnregisteredNodeException {\n-    assert hasReadOrWriteLock();\n-    UnregisteredNodeException e \u003d null;\n-    DatanodeDescriptor node \u003d datanodeMap.get(nodeID.getStorageID());\n+    final DatanodeDescriptor node \u003d getDatanode(nodeID.getStorageID());\n     if (node \u003d\u003d null) \n       return null;\n     if (!node.getName().equals(nodeID.getName())) {\n-      e \u003d new UnregisteredNodeException(nodeID, node);\n+      final UnregisteredNodeException e \u003d new UnregisteredNodeException(\n+          nodeID, node);\n       NameNode.stateChangeLog.fatal(\"BLOCK* NameSystem.getDatanode: \"\n                                     + e.getLocalizedMessage());\n       throw e;\n     }\n     return node;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public DatanodeDescriptor getDatanode(DatanodeID nodeID\n      ) throws UnregisteredNodeException {\n    final DatanodeDescriptor node \u003d getDatanode(nodeID.getStorageID());\n    if (node \u003d\u003d null) \n      return null;\n    if (!node.getName().equals(nodeID.getName())) {\n      final UnregisteredNodeException e \u003d new UnregisteredNodeException(\n          nodeID, node);\n      NameNode.stateChangeLog.fatal(\"BLOCK* NameSystem.getDatanode: \"\n                                    + e.getLocalizedMessage());\n      throw e;\n    }\n    return node;\n  }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "233a7aa34f37350bf7bcdd9c84b97d613e7344c9": {
      "type": "Yexceptionschange",
      "commitMessage": "HDFS-2167.  Move dnsToSwitchMapping and hostsReader from FSNamesystem to DatanodeManager.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1149455 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/07/11 9:20 PM",
      "commitName": "233a7aa34f37350bf7bcdd9c84b97d613e7344c9",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "20/07/11 4:35 PM",
      "commitNameOld": "08928d067bb9e1d38b5e7db9e23fcf20fe161435",
      "commitAuthorOld": "Matthew Foley",
      "daysBetweenCommits": 1.2,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,15 @@\n-  public DatanodeDescriptor getDatanode(DatanodeID nodeID) throws IOException {\n+  public DatanodeDescriptor getDatanode(DatanodeID nodeID\n+      ) throws UnregisteredNodeException {\n     assert hasReadOrWriteLock();\n     UnregisteredNodeException e \u003d null;\n     DatanodeDescriptor node \u003d datanodeMap.get(nodeID.getStorageID());\n     if (node \u003d\u003d null) \n       return null;\n     if (!node.getName().equals(nodeID.getName())) {\n       e \u003d new UnregisteredNodeException(nodeID, node);\n       NameNode.stateChangeLog.fatal(\"BLOCK* NameSystem.getDatanode: \"\n                                     + e.getLocalizedMessage());\n       throw e;\n     }\n     return node;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public DatanodeDescriptor getDatanode(DatanodeID nodeID\n      ) throws UnregisteredNodeException {\n    assert hasReadOrWriteLock();\n    UnregisteredNodeException e \u003d null;\n    DatanodeDescriptor node \u003d datanodeMap.get(nodeID.getStorageID());\n    if (node \u003d\u003d null) \n      return null;\n    if (!node.getName().equals(nodeID.getName())) {\n      e \u003d new UnregisteredNodeException(nodeID, node);\n      NameNode.stateChangeLog.fatal(\"BLOCK* NameSystem.getDatanode: \"\n                                    + e.getLocalizedMessage());\n      throw e;\n    }\n    return node;\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {
        "oldValue": "[IOException]",
        "newValue": "[UnregisteredNodeException]"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,14 @@\n+  public DatanodeDescriptor getDatanode(DatanodeID nodeID) throws IOException {\n+    assert hasReadOrWriteLock();\n+    UnregisteredNodeException e \u003d null;\n+    DatanodeDescriptor node \u003d datanodeMap.get(nodeID.getStorageID());\n+    if (node \u003d\u003d null) \n+      return null;\n+    if (!node.getName().equals(nodeID.getName())) {\n+      e \u003d new UnregisteredNodeException(nodeID, node);\n+      NameNode.stateChangeLog.fatal(\"BLOCK* NameSystem.getDatanode: \"\n+                                    + e.getLocalizedMessage());\n+      throw e;\n+    }\n+    return node;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public DatanodeDescriptor getDatanode(DatanodeID nodeID) throws IOException {\n    assert hasReadOrWriteLock();\n    UnregisteredNodeException e \u003d null;\n    DatanodeDescriptor node \u003d datanodeMap.get(nodeID.getStorageID());\n    if (node \u003d\u003d null) \n      return null;\n    if (!node.getName().equals(nodeID.getName())) {\n      e \u003d new UnregisteredNodeException(nodeID, node);\n      NameNode.stateChangeLog.fatal(\"BLOCK* NameSystem.getDatanode: \"\n                                    + e.getLocalizedMessage());\n      throw e;\n    }\n    return node;\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java"
    }
  }
}