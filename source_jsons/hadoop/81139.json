{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NetworkTopologyWithNodeGroup.java",
  "functionName": "getNodeGroup",
  "functionId": "getNodeGroup___loc-String",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/NetworkTopologyWithNodeGroup.java",
  "functionStartLine": 90,
  "functionEndLine": 118,
  "numCommitsSeen": 16,
  "timeTaken": 1270,
  "changeHistory": [
    "003ae00693d079799c4dcf02705379bcf34b8c79",
    "49e176c29f95c179c0f6b07d4d582e6a771a96bd",
    "ed7040f07b75a8eb15df90cc8b57e534c7ebf114"
  ],
  "changeHistoryShort": {
    "003ae00693d079799c4dcf02705379bcf34b8c79": "Ybodychange",
    "49e176c29f95c179c0f6b07d4d582e6a771a96bd": "Ybodychange",
    "ed7040f07b75a8eb15df90cc8b57e534c7ebf114": "Yintroduced"
  },
  "changeHistoryDetails": {
    "003ae00693d079799c4dcf02705379bcf34b8c79": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11430. Separate class InnerNode from class NetworkTopology and make it extendable. Contributed by Tsz Wo Nicholas Sze\n",
      "commitDate": "21/02/17 3:32 PM",
      "commitName": "003ae00693d079799c4dcf02705379bcf34b8c79",
      "commitAuthor": "Mingliang Liu",
      "commitDateOld": "05/02/16 1:47 PM",
      "commitNameOld": "49e176c29f95c179c0f6b07d4d582e6a771a96bd",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 382.07,
      "commitsBetweenForRepo": 2561,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,29 @@\n   public String getNodeGroup(String loc) {\n     netlock.readLock().lock();\n     try {\n-      loc \u003d InnerNode.normalize(loc);\n+      loc \u003d NodeBase.normalize(loc);\n       Node locNode \u003d getNode(loc);\n       if (locNode instanceof InnerNodeWithNodeGroup) {\n         InnerNodeWithNodeGroup node \u003d (InnerNodeWithNodeGroup) locNode;\n         if (node.isNodeGroup()) {\n           return loc;\n         } else if (node.isRack()) {\n           // not sure the node group for a rack\n           return null;\n         } else {\n           // may be a leaf node\n           if(!(node.getNetworkLocation() \u003d\u003d null ||\n               node.getNetworkLocation().isEmpty())) {\n             return getNodeGroup(node.getNetworkLocation());\n           } else {\n             return NodeBase.ROOT;\n           }\n         }\n       } else {\n         // not in cluster map, don\u0027t handle it\n         return loc;\n       }\n     } finally {\n       netlock.readLock().unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String getNodeGroup(String loc) {\n    netlock.readLock().lock();\n    try {\n      loc \u003d NodeBase.normalize(loc);\n      Node locNode \u003d getNode(loc);\n      if (locNode instanceof InnerNodeWithNodeGroup) {\n        InnerNodeWithNodeGroup node \u003d (InnerNodeWithNodeGroup) locNode;\n        if (node.isNodeGroup()) {\n          return loc;\n        } else if (node.isRack()) {\n          // not sure the node group for a rack\n          return null;\n        } else {\n          // may be a leaf node\n          if(!(node.getNetworkLocation() \u003d\u003d null ||\n              node.getNetworkLocation().isEmpty())) {\n            return getNodeGroup(node.getNetworkLocation());\n          } else {\n            return NodeBase.ROOT;\n          }\n        }\n      } else {\n        // not in cluster map, don\u0027t handle it\n        return loc;\n      }\n    } finally {\n      netlock.readLock().unlock();\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/NetworkTopologyWithNodeGroup.java",
      "extendedDetails": {}
    },
    "49e176c29f95c179c0f6b07d4d582e6a771a96bd": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12772. NetworkTopologyWithNodeGroup.getNodeGroup() can loop infinitely for invalid \u0027loc\u0027 values. Contributed by Kuhu Shukla.\n",
      "commitDate": "05/02/16 1:47 PM",
      "commitName": "49e176c29f95c179c0f6b07d4d582e6a771a96bd",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "21/10/15 8:06 AM",
      "commitNameOld": "e27c2ae8bafc94f18eb38f5d839dcef5652d424e",
      "commitAuthorOld": "Ming Ma",
      "daysBetweenCommits": 107.28,
      "commitsBetweenForRepo": 729,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,29 @@\n   public String getNodeGroup(String loc) {\n     netlock.readLock().lock();\n     try {\n       loc \u003d InnerNode.normalize(loc);\n       Node locNode \u003d getNode(loc);\n       if (locNode instanceof InnerNodeWithNodeGroup) {\n         InnerNodeWithNodeGroup node \u003d (InnerNodeWithNodeGroup) locNode;\n         if (node.isNodeGroup()) {\n           return loc;\n         } else if (node.isRack()) {\n           // not sure the node group for a rack\n           return null;\n         } else {\n           // may be a leaf node\n-          return getNodeGroup(node.getNetworkLocation());\n+          if(!(node.getNetworkLocation() \u003d\u003d null ||\n+              node.getNetworkLocation().isEmpty())) {\n+            return getNodeGroup(node.getNetworkLocation());\n+          } else {\n+            return NodeBase.ROOT;\n+          }\n         }\n       } else {\n         // not in cluster map, don\u0027t handle it\n         return loc;\n       }\n     } finally {\n       netlock.readLock().unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String getNodeGroup(String loc) {\n    netlock.readLock().lock();\n    try {\n      loc \u003d InnerNode.normalize(loc);\n      Node locNode \u003d getNode(loc);\n      if (locNode instanceof InnerNodeWithNodeGroup) {\n        InnerNodeWithNodeGroup node \u003d (InnerNodeWithNodeGroup) locNode;\n        if (node.isNodeGroup()) {\n          return loc;\n        } else if (node.isRack()) {\n          // not sure the node group for a rack\n          return null;\n        } else {\n          // may be a leaf node\n          if(!(node.getNetworkLocation() \u003d\u003d null ||\n              node.getNetworkLocation().isEmpty())) {\n            return getNodeGroup(node.getNetworkLocation());\n          } else {\n            return NodeBase.ROOT;\n          }\n        }\n      } else {\n        // not in cluster map, don\u0027t handle it\n        return loc;\n      }\n    } finally {\n      netlock.readLock().unlock();\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/NetworkTopologyWithNodeGroup.java",
      "extendedDetails": {}
    },
    "ed7040f07b75a8eb15df90cc8b57e534c7ebf114": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-8470. Add NetworkTopologyWithNodeGroup, a 4-layer implementation of NetworkTopology.  Contributed by Junping Du\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1351445 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/06/12 11:23 AM",
      "commitName": "ed7040f07b75a8eb15df90cc8b57e534c7ebf114",
      "commitAuthor": "Tsz-wo Sze",
      "diff": "@@ -0,0 +1,24 @@\n+  public String getNodeGroup(String loc) {\n+    netlock.readLock().lock();\n+    try {\n+      loc \u003d InnerNode.normalize(loc);\n+      Node locNode \u003d getNode(loc);\n+      if (locNode instanceof InnerNodeWithNodeGroup) {\n+        InnerNodeWithNodeGroup node \u003d (InnerNodeWithNodeGroup) locNode;\n+        if (node.isNodeGroup()) {\n+          return loc;\n+        } else if (node.isRack()) {\n+          // not sure the node group for a rack\n+          return null;\n+        } else {\n+          // may be a leaf node\n+          return getNodeGroup(node.getNetworkLocation());\n+        }\n+      } else {\n+        // not in cluster map, don\u0027t handle it\n+        return loc;\n+      }\n+    } finally {\n+      netlock.readLock().unlock();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public String getNodeGroup(String loc) {\n    netlock.readLock().lock();\n    try {\n      loc \u003d InnerNode.normalize(loc);\n      Node locNode \u003d getNode(loc);\n      if (locNode instanceof InnerNodeWithNodeGroup) {\n        InnerNodeWithNodeGroup node \u003d (InnerNodeWithNodeGroup) locNode;\n        if (node.isNodeGroup()) {\n          return loc;\n        } else if (node.isRack()) {\n          // not sure the node group for a rack\n          return null;\n        } else {\n          // may be a leaf node\n          return getNodeGroup(node.getNetworkLocation());\n        }\n      } else {\n        // not in cluster map, don\u0027t handle it\n        return loc;\n      }\n    } finally {\n      netlock.readLock().unlock();\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/NetworkTopologyWithNodeGroup.java"
    }
  }
}