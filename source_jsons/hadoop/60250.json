{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ContainerPBImpl.java",
  "functionName": "mergeLocalToBuilder",
  "functionId": "mergeLocalToBuilder",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ContainerPBImpl.java",
  "functionStartLine": 94,
  "functionEndLine": 127,
  "numCommitsSeen": 22,
  "timeTaken": 8553,
  "changeHistory": [
    "f82922dcfae0b7e3e68ce970c441d8b7edc59acf",
    "a5c1fc881e21ebf43da7ead5f3852808fce25492",
    "a062374c396ba2bddbbe4d3806cc2896293b4e0b",
    "2fd7f2823074cbfbcc083a6f66edff62c7a131f0",
    "a2c42330047bf955a6a585dcddf798920d4c8640",
    "1fd462b118664b302c67bcc9543cdccdaaec30e9",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "1e6dfa7472ad78a252d05c8ebffe086d938b61fa",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "f82922dcfae0b7e3e68ce970c441d8b7edc59acf": "Ybodychange",
    "a5c1fc881e21ebf43da7ead5f3852808fce25492": "Ybodychange",
    "a062374c396ba2bddbbe4d3806cc2896293b4e0b": "Ybodychange",
    "2fd7f2823074cbfbcc083a6f66edff62c7a131f0": "Yfilerename",
    "a2c42330047bf955a6a585dcddf798920d4c8640": "Ybodychange",
    "1fd462b118664b302c67bcc9543cdccdaaec30e9": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "1e6dfa7472ad78a252d05c8ebffe086d938b61fa": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f82922dcfae0b7e3e68ce970c441d8b7edc59acf": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5168. Added exposed port information for Docker container.\n           Contributed by Xun Liu\n",
      "commitDate": "21/12/18 4:44 PM",
      "commitName": "f82922dcfae0b7e3e68ce970c441d8b7edc59acf",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "31/01/18 1:30 AM",
      "commitNameOld": "a5c1fc881e21ebf43da7ead5f3852808fce25492",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 324.63,
      "commitsBetweenForRepo": 3086,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,34 @@\n   private void mergeLocalToBuilder() {\n     if (this.containerId !\u003d null\n         \u0026\u0026 !((ContainerIdPBImpl) containerId).getProto().equals(\n             builder.getId())) {\n       builder.setId(convertToProtoFormat(this.containerId));\n     }\n     if (this.nodeId !\u003d null\n         \u0026\u0026 !((NodeIdPBImpl) nodeId).getProto().equals(\n             builder.getNodeId())) {\n       builder.setNodeId(convertToProtoFormat(this.nodeId));\n     }\n     if (this.resource !\u003d null) {\n       builder.setResource(convertToProtoFormat(this.resource));\n     }\n     if (this.priority !\u003d null \u0026\u0026 \n         !((PriorityPBImpl) this.priority).getProto().equals(\n             builder.getPriority())) {\n       builder.setPriority(convertToProtoFormat(this.priority));\n     }\n     if (this.containerToken !\u003d null\n         \u0026\u0026 !((TokenPBImpl) this.containerToken).getProto().equals(\n             builder.getContainerToken())) {\n       builder.setContainerToken(convertToProtoFormat(this.containerToken));\n     }\n     if (this.allocationTags !\u003d null) {\n       builder.clearAllocationTags();\n       builder.addAllAllocationTags(this.allocationTags);\n     }\n+    if (this.exposedPorts !\u003d null) {\n+      Gson gson \u003d new Gson();\n+      String strExposedPorts \u003d gson.toJson(this.exposedPorts);\n+      builder.setExposedPorts(strExposedPorts);\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.containerId !\u003d null\n        \u0026\u0026 !((ContainerIdPBImpl) containerId).getProto().equals(\n            builder.getId())) {\n      builder.setId(convertToProtoFormat(this.containerId));\n    }\n    if (this.nodeId !\u003d null\n        \u0026\u0026 !((NodeIdPBImpl) nodeId).getProto().equals(\n            builder.getNodeId())) {\n      builder.setNodeId(convertToProtoFormat(this.nodeId));\n    }\n    if (this.resource !\u003d null) {\n      builder.setResource(convertToProtoFormat(this.resource));\n    }\n    if (this.priority !\u003d null \u0026\u0026 \n        !((PriorityPBImpl) this.priority).getProto().equals(\n            builder.getPriority())) {\n      builder.setPriority(convertToProtoFormat(this.priority));\n    }\n    if (this.containerToken !\u003d null\n        \u0026\u0026 !((TokenPBImpl) this.containerToken).getProto().equals(\n            builder.getContainerToken())) {\n      builder.setContainerToken(convertToProtoFormat(this.containerToken));\n    }\n    if (this.allocationTags !\u003d null) {\n      builder.clearAllocationTags();\n      builder.addAllAllocationTags(this.allocationTags);\n    }\n    if (this.exposedPorts !\u003d null) {\n      Gson gson \u003d new Gson();\n      String strExposedPorts \u003d gson.toJson(this.exposedPorts);\n      builder.setExposedPorts(strExposedPorts);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ContainerPBImpl.java",
      "extendedDetails": {}
    },
    "a5c1fc881e21ebf43da7ead5f3852808fce25492": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7696. Add container tags to ContainerTokenIdentifier, api.Container and NMContainerStatus to handle all recovery cases. (asuresh)\n",
      "commitDate": "31/01/18 1:30 AM",
      "commitName": "a5c1fc881e21ebf43da7ead5f3852808fce25492",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "09/11/17 12:12 PM",
      "commitNameOld": "a2c150a7369cc629bbfaa2dfa3a8495b6f9c42e2",
      "commitAuthorOld": "Robert Kanter",
      "daysBetweenCommits": 82.55,
      "commitsBetweenForRepo": 452,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,29 @@\n   private void mergeLocalToBuilder() {\n     if (this.containerId !\u003d null\n         \u0026\u0026 !((ContainerIdPBImpl) containerId).getProto().equals(\n             builder.getId())) {\n       builder.setId(convertToProtoFormat(this.containerId));\n     }\n     if (this.nodeId !\u003d null\n         \u0026\u0026 !((NodeIdPBImpl) nodeId).getProto().equals(\n             builder.getNodeId())) {\n       builder.setNodeId(convertToProtoFormat(this.nodeId));\n     }\n     if (this.resource !\u003d null) {\n       builder.setResource(convertToProtoFormat(this.resource));\n     }\n     if (this.priority !\u003d null \u0026\u0026 \n         !((PriorityPBImpl) this.priority).getProto().equals(\n             builder.getPriority())) {\n       builder.setPriority(convertToProtoFormat(this.priority));\n     }\n     if (this.containerToken !\u003d null\n         \u0026\u0026 !((TokenPBImpl) this.containerToken).getProto().equals(\n             builder.getContainerToken())) {\n       builder.setContainerToken(convertToProtoFormat(this.containerToken));\n     }\n+    if (this.allocationTags !\u003d null) {\n+      builder.clearAllocationTags();\n+      builder.addAllAllocationTags(this.allocationTags);\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.containerId !\u003d null\n        \u0026\u0026 !((ContainerIdPBImpl) containerId).getProto().equals(\n            builder.getId())) {\n      builder.setId(convertToProtoFormat(this.containerId));\n    }\n    if (this.nodeId !\u003d null\n        \u0026\u0026 !((NodeIdPBImpl) nodeId).getProto().equals(\n            builder.getNodeId())) {\n      builder.setNodeId(convertToProtoFormat(this.nodeId));\n    }\n    if (this.resource !\u003d null) {\n      builder.setResource(convertToProtoFormat(this.resource));\n    }\n    if (this.priority !\u003d null \u0026\u0026 \n        !((PriorityPBImpl) this.priority).getProto().equals(\n            builder.getPriority())) {\n      builder.setPriority(convertToProtoFormat(this.priority));\n    }\n    if (this.containerToken !\u003d null\n        \u0026\u0026 !((TokenPBImpl) this.containerToken).getProto().equals(\n            builder.getContainerToken())) {\n      builder.setContainerToken(convertToProtoFormat(this.containerToken));\n    }\n    if (this.allocationTags !\u003d null) {\n      builder.clearAllocationTags();\n      builder.addAllAllocationTags(this.allocationTags);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ContainerPBImpl.java",
      "extendedDetails": {}
    },
    "a062374c396ba2bddbbe4d3806cc2896293b4e0b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6679. Reduce Resource instance overhead via non-PBImpl\n(Contributed by Daryn Sharp via Daniel Templeton)\n",
      "commitDate": "08/06/17 10:08 AM",
      "commitName": "a062374c396ba2bddbbe4d3806cc2896293b4e0b",
      "commitAuthor": "Daniel Templeton",
      "commitDateOld": "30/08/16 3:52 PM",
      "commitNameOld": "d6d9cff21b7b6141ed88359652cf22e8973c0661",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 281.76,
      "commitsBetweenForRepo": 1687,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,25 @@\n   private void mergeLocalToBuilder() {\n     if (this.containerId !\u003d null\n         \u0026\u0026 !((ContainerIdPBImpl) containerId).getProto().equals(\n             builder.getId())) {\n       builder.setId(convertToProtoFormat(this.containerId));\n     }\n     if (this.nodeId !\u003d null\n         \u0026\u0026 !((NodeIdPBImpl) nodeId).getProto().equals(\n             builder.getNodeId())) {\n       builder.setNodeId(convertToProtoFormat(this.nodeId));\n     }\n-    if (this.resource !\u003d null\n-        \u0026\u0026 !((ResourcePBImpl) this.resource).getProto().equals(\n-            builder.getResource())) {\n+    if (this.resource !\u003d null) {\n       builder.setResource(convertToProtoFormat(this.resource));\n     }\n     if (this.priority !\u003d null \u0026\u0026 \n         !((PriorityPBImpl) this.priority).getProto().equals(\n             builder.getPriority())) {\n       builder.setPriority(convertToProtoFormat(this.priority));\n     }\n     if (this.containerToken !\u003d null\n         \u0026\u0026 !((TokenPBImpl) this.containerToken).getProto().equals(\n             builder.getContainerToken())) {\n       builder.setContainerToken(convertToProtoFormat(this.containerToken));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.containerId !\u003d null\n        \u0026\u0026 !((ContainerIdPBImpl) containerId).getProto().equals(\n            builder.getId())) {\n      builder.setId(convertToProtoFormat(this.containerId));\n    }\n    if (this.nodeId !\u003d null\n        \u0026\u0026 !((NodeIdPBImpl) nodeId).getProto().equals(\n            builder.getNodeId())) {\n      builder.setNodeId(convertToProtoFormat(this.nodeId));\n    }\n    if (this.resource !\u003d null) {\n      builder.setResource(convertToProtoFormat(this.resource));\n    }\n    if (this.priority !\u003d null \u0026\u0026 \n        !((PriorityPBImpl) this.priority).getProto().equals(\n            builder.getPriority())) {\n      builder.setPriority(convertToProtoFormat(this.priority));\n    }\n    if (this.containerToken !\u003d null\n        \u0026\u0026 !((TokenPBImpl) this.containerToken).getProto().equals(\n            builder.getContainerToken())) {\n      builder.setContainerToken(convertToProtoFormat(this.containerToken));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ContainerPBImpl.java",
      "extendedDetails": {}
    },
    "2fd7f2823074cbfbcc083a6f66edff62c7a131f0": {
      "type": "Yfilerename",
      "commitMessage": "YARN-846.  Move pb Impl classes from yarn-api to yarn-common. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1494052 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/06/13 12:36 AM",
      "commitName": "2fd7f2823074cbfbcc083a6f66edff62c7a131f0",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/06/13 11:34 PM",
      "commitNameOld": "6451288704922576e75dd1597f5fd0ef09ab4f26",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.containerId !\u003d null\n        \u0026\u0026 !((ContainerIdPBImpl) containerId).getProto().equals(\n            builder.getId())) {\n      builder.setId(convertToProtoFormat(this.containerId));\n    }\n    if (this.nodeId !\u003d null\n        \u0026\u0026 !((NodeIdPBImpl) nodeId).getProto().equals(\n            builder.getNodeId())) {\n      builder.setNodeId(convertToProtoFormat(this.nodeId));\n    }\n    if (this.resource !\u003d null\n        \u0026\u0026 !((ResourcePBImpl) this.resource).getProto().equals(\n            builder.getResource())) {\n      builder.setResource(convertToProtoFormat(this.resource));\n    }\n    if (this.priority !\u003d null \u0026\u0026 \n        !((PriorityPBImpl) this.priority).getProto().equals(\n            builder.getPriority())) {\n      builder.setPriority(convertToProtoFormat(this.priority));\n    }\n    if (this.containerToken !\u003d null\n        \u0026\u0026 !((TokenPBImpl) this.containerToken).getProto().equals(\n            builder.getContainerToken())) {\n      builder.setContainerToken(convertToProtoFormat(this.containerToken));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ContainerPBImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ContainerPBImpl.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ContainerPBImpl.java"
      }
    },
    "a2c42330047bf955a6a585dcddf798920d4c8640": {
      "type": "Ybodychange",
      "commitMessage": "YARN-717. Put object creation factories for Token in the class itself and remove useless derivations for specific tokens. Contributed by Jian He.\nMAPREDUCE-5289. Updated MR App to use Token directly after YARN-717. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1488616 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "01/06/13 2:43 PM",
      "commitName": "a2c42330047bf955a6a585dcddf798920d4c8640",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "29/05/13 9:59 PM",
      "commitNameOld": "b16c5638b5190c56f9d854d873589cb5c11c8b32",
      "commitAuthorOld": "Siddharth Seth",
      "daysBetweenCommits": 2.7,
      "commitsBetweenForRepo": 21,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n   private void mergeLocalToBuilder() {\n     if (this.containerId !\u003d null\n         \u0026\u0026 !((ContainerIdPBImpl) containerId).getProto().equals(\n             builder.getId())) {\n       builder.setId(convertToProtoFormat(this.containerId));\n     }\n     if (this.nodeId !\u003d null\n         \u0026\u0026 !((NodeIdPBImpl) nodeId).getProto().equals(\n             builder.getNodeId())) {\n       builder.setNodeId(convertToProtoFormat(this.nodeId));\n     }\n     if (this.resource !\u003d null\n         \u0026\u0026 !((ResourcePBImpl) this.resource).getProto().equals(\n             builder.getResource())) {\n       builder.setResource(convertToProtoFormat(this.resource));\n     }\n     if (this.priority !\u003d null \u0026\u0026 \n         !((PriorityPBImpl) this.priority).getProto().equals(\n             builder.getPriority())) {\n       builder.setPriority(convertToProtoFormat(this.priority));\n     }\n     if (this.containerToken !\u003d null\n-        \u0026\u0026 !((ContainerTokenPBImpl) this.containerToken).getProto().equals(\n+        \u0026\u0026 !((TokenPBImpl) this.containerToken).getProto().equals(\n             builder.getContainerToken())) {\n       builder.setContainerToken(convertToProtoFormat(this.containerToken));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.containerId !\u003d null\n        \u0026\u0026 !((ContainerIdPBImpl) containerId).getProto().equals(\n            builder.getId())) {\n      builder.setId(convertToProtoFormat(this.containerId));\n    }\n    if (this.nodeId !\u003d null\n        \u0026\u0026 !((NodeIdPBImpl) nodeId).getProto().equals(\n            builder.getNodeId())) {\n      builder.setNodeId(convertToProtoFormat(this.nodeId));\n    }\n    if (this.resource !\u003d null\n        \u0026\u0026 !((ResourcePBImpl) this.resource).getProto().equals(\n            builder.getResource())) {\n      builder.setResource(convertToProtoFormat(this.resource));\n    }\n    if (this.priority !\u003d null \u0026\u0026 \n        !((PriorityPBImpl) this.priority).getProto().equals(\n            builder.getPriority())) {\n      builder.setPriority(convertToProtoFormat(this.priority));\n    }\n    if (this.containerToken !\u003d null\n        \u0026\u0026 !((TokenPBImpl) this.containerToken).getProto().equals(\n            builder.getContainerToken())) {\n      builder.setContainerToken(convertToProtoFormat(this.containerToken));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ContainerPBImpl.java",
      "extendedDetails": {}
    },
    "1fd462b118664b302c67bcc9543cdccdaaec30e9": {
      "type": "Ybodychange",
      "commitMessage": "YARN-536. Removed the unused objects ContainerStatus and ContainerStatus from Container which also don\u0027t belong to the container. Contributed by Xuan Gong.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1464271 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/04/13 8:41 PM",
      "commitName": "1fd462b118664b302c67bcc9543cdccdaaec30e9",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "15/01/13 10:33 AM",
      "commitNameOld": "6a2f2551fd13f6d3c932cc9b592e2a23b616a7f5",
      "commitAuthorOld": "Siddharth Seth",
      "daysBetweenCommits": 78.38,
      "commitsBetweenForRepo": 364,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,27 @@\n   private void mergeLocalToBuilder() {\n     if (this.containerId !\u003d null\n         \u0026\u0026 !((ContainerIdPBImpl) containerId).getProto().equals(\n             builder.getId())) {\n       builder.setId(convertToProtoFormat(this.containerId));\n     }\n     if (this.nodeId !\u003d null\n         \u0026\u0026 !((NodeIdPBImpl) nodeId).getProto().equals(\n             builder.getNodeId())) {\n       builder.setNodeId(convertToProtoFormat(this.nodeId));\n     }\n     if (this.resource !\u003d null\n         \u0026\u0026 !((ResourcePBImpl) this.resource).getProto().equals(\n             builder.getResource())) {\n       builder.setResource(convertToProtoFormat(this.resource));\n     }\n     if (this.priority !\u003d null \u0026\u0026 \n         !((PriorityPBImpl) this.priority).getProto().equals(\n             builder.getPriority())) {\n       builder.setPriority(convertToProtoFormat(this.priority));\n     }\n     if (this.containerToken !\u003d null\n         \u0026\u0026 !((ContainerTokenPBImpl) this.containerToken).getProto().equals(\n             builder.getContainerToken())) {\n       builder.setContainerToken(convertToProtoFormat(this.containerToken));\n     }\n-    if (this.containerStatus !\u003d null\n-        \u0026\u0026 !((ContainerStatusPBImpl) this.containerStatus).getProto().equals(\n-            builder.getContainerStatus())) {\n-      builder.setContainerStatus(convertToProtoFormat(this.containerStatus));\n-    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.containerId !\u003d null\n        \u0026\u0026 !((ContainerIdPBImpl) containerId).getProto().equals(\n            builder.getId())) {\n      builder.setId(convertToProtoFormat(this.containerId));\n    }\n    if (this.nodeId !\u003d null\n        \u0026\u0026 !((NodeIdPBImpl) nodeId).getProto().equals(\n            builder.getNodeId())) {\n      builder.setNodeId(convertToProtoFormat(this.nodeId));\n    }\n    if (this.resource !\u003d null\n        \u0026\u0026 !((ResourcePBImpl) this.resource).getProto().equals(\n            builder.getResource())) {\n      builder.setResource(convertToProtoFormat(this.resource));\n    }\n    if (this.priority !\u003d null \u0026\u0026 \n        !((PriorityPBImpl) this.priority).getProto().equals(\n            builder.getPriority())) {\n      builder.setPriority(convertToProtoFormat(this.priority));\n    }\n    if (this.containerToken !\u003d null\n        \u0026\u0026 !((ContainerTokenPBImpl) this.containerToken).getProto().equals(\n            builder.getContainerToken())) {\n      builder.setContainerToken(convertToProtoFormat(this.containerToken));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ContainerPBImpl.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.containerId !\u003d null\n        \u0026\u0026 !((ContainerIdPBImpl) containerId).getProto().equals(\n            builder.getId())) {\n      builder.setId(convertToProtoFormat(this.containerId));\n    }\n    if (this.nodeId !\u003d null\n        \u0026\u0026 !((NodeIdPBImpl) nodeId).getProto().equals(\n            builder.getNodeId())) {\n      builder.setNodeId(convertToProtoFormat(this.nodeId));\n    }\n    if (this.resource !\u003d null\n        \u0026\u0026 !((ResourcePBImpl) this.resource).getProto().equals(\n            builder.getResource())) {\n      builder.setResource(convertToProtoFormat(this.resource));\n    }\n    if (this.priority !\u003d null \u0026\u0026 \n        !((PriorityPBImpl) this.priority).getProto().equals(\n            builder.getPriority())) {\n      builder.setPriority(convertToProtoFormat(this.priority));\n    }\n    if (this.containerToken !\u003d null\n        \u0026\u0026 !((ContainerTokenPBImpl) this.containerToken).getProto().equals(\n            builder.getContainerToken())) {\n      builder.setContainerToken(convertToProtoFormat(this.containerToken));\n    }\n    if (this.containerStatus !\u003d null\n        \u0026\u0026 !((ContainerStatusPBImpl) this.containerStatus).getProto().equals(\n            builder.getContainerStatus())) {\n      builder.setContainerStatus(convertToProtoFormat(this.containerStatus));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ContainerPBImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ContainerPBImpl.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ContainerPBImpl.java"
      }
    },
    "1e6dfa7472ad78a252d05c8ebffe086d938b61fa": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2646. Fixed AMRMProtocol to return containers based on priority. Contributed by Sharad Agarwal and Arun C Murthy.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1175859 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "26/09/11 6:25 AM",
      "commitName": "1e6dfa7472ad78a252d05c8ebffe086d938b61fa",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "24/08/11 5:14 PM",
      "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 32.55,
      "commitsBetweenForRepo": 195,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,32 @@\n   private void mergeLocalToBuilder() {\n     if (this.containerId !\u003d null\n         \u0026\u0026 !((ContainerIdPBImpl) containerId).getProto().equals(\n             builder.getId())) {\n       builder.setId(convertToProtoFormat(this.containerId));\n     }\n     if (this.nodeId !\u003d null\n         \u0026\u0026 !((NodeIdPBImpl) nodeId).getProto().equals(\n             builder.getNodeId())) {\n       builder.setNodeId(convertToProtoFormat(this.nodeId));\n     }\n     if (this.resource !\u003d null\n         \u0026\u0026 !((ResourcePBImpl) this.resource).getProto().equals(\n             builder.getResource())) {\n       builder.setResource(convertToProtoFormat(this.resource));\n     }\n+    if (this.priority !\u003d null \u0026\u0026 \n+        !((PriorityPBImpl) this.priority).getProto().equals(\n+            builder.getPriority())) {\n+      builder.setPriority(convertToProtoFormat(this.priority));\n+    }\n     if (this.containerToken !\u003d null\n         \u0026\u0026 !((ContainerTokenPBImpl) this.containerToken).getProto().equals(\n             builder.getContainerToken())) {\n       builder.setContainerToken(convertToProtoFormat(this.containerToken));\n     }\n     if (this.containerStatus !\u003d null\n         \u0026\u0026 !((ContainerStatusPBImpl) this.containerStatus).getProto().equals(\n             builder.getContainerStatus())) {\n       builder.setContainerStatus(convertToProtoFormat(this.containerStatus));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.containerId !\u003d null\n        \u0026\u0026 !((ContainerIdPBImpl) containerId).getProto().equals(\n            builder.getId())) {\n      builder.setId(convertToProtoFormat(this.containerId));\n    }\n    if (this.nodeId !\u003d null\n        \u0026\u0026 !((NodeIdPBImpl) nodeId).getProto().equals(\n            builder.getNodeId())) {\n      builder.setNodeId(convertToProtoFormat(this.nodeId));\n    }\n    if (this.resource !\u003d null\n        \u0026\u0026 !((ResourcePBImpl) this.resource).getProto().equals(\n            builder.getResource())) {\n      builder.setResource(convertToProtoFormat(this.resource));\n    }\n    if (this.priority !\u003d null \u0026\u0026 \n        !((PriorityPBImpl) this.priority).getProto().equals(\n            builder.getPriority())) {\n      builder.setPriority(convertToProtoFormat(this.priority));\n    }\n    if (this.containerToken !\u003d null\n        \u0026\u0026 !((ContainerTokenPBImpl) this.containerToken).getProto().equals(\n            builder.getContainerToken())) {\n      builder.setContainerToken(convertToProtoFormat(this.containerToken));\n    }\n    if (this.containerStatus !\u003d null\n        \u0026\u0026 !((ContainerStatusPBImpl) this.containerStatus).getProto().equals(\n            builder.getContainerStatus())) {\n      builder.setContainerStatus(convertToProtoFormat(this.containerStatus));\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ContainerPBImpl.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.containerId !\u003d null\n        \u0026\u0026 !((ContainerIdPBImpl) containerId).getProto().equals(\n            builder.getId())) {\n      builder.setId(convertToProtoFormat(this.containerId));\n    }\n    if (this.nodeId !\u003d null\n        \u0026\u0026 !((NodeIdPBImpl) nodeId).getProto().equals(\n            builder.getNodeId())) {\n      builder.setNodeId(convertToProtoFormat(this.nodeId));\n    }\n    if (this.resource !\u003d null\n        \u0026\u0026 !((ResourcePBImpl) this.resource).getProto().equals(\n            builder.getResource())) {\n      builder.setResource(convertToProtoFormat(this.resource));\n    }\n    if (this.containerToken !\u003d null\n        \u0026\u0026 !((ContainerTokenPBImpl) this.containerToken).getProto().equals(\n            builder.getContainerToken())) {\n      builder.setContainerToken(convertToProtoFormat(this.containerToken));\n    }\n    if (this.containerStatus !\u003d null\n        \u0026\u0026 !((ContainerStatusPBImpl) this.containerStatus).getProto().equals(\n            builder.getContainerStatus())) {\n      builder.setContainerStatus(convertToProtoFormat(this.containerStatus));\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ContainerPBImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ContainerPBImpl.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ContainerPBImpl.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,27 @@\n+  private void mergeLocalToBuilder() {\n+    if (this.containerId !\u003d null\n+        \u0026\u0026 !((ContainerIdPBImpl) containerId).getProto().equals(\n+            builder.getId())) {\n+      builder.setId(convertToProtoFormat(this.containerId));\n+    }\n+    if (this.nodeId !\u003d null\n+        \u0026\u0026 !((NodeIdPBImpl) nodeId).getProto().equals(\n+            builder.getNodeId())) {\n+      builder.setNodeId(convertToProtoFormat(this.nodeId));\n+    }\n+    if (this.resource !\u003d null\n+        \u0026\u0026 !((ResourcePBImpl) this.resource).getProto().equals(\n+            builder.getResource())) {\n+      builder.setResource(convertToProtoFormat(this.resource));\n+    }\n+    if (this.containerToken !\u003d null\n+        \u0026\u0026 !((ContainerTokenPBImpl) this.containerToken).getProto().equals(\n+            builder.getContainerToken())) {\n+      builder.setContainerToken(convertToProtoFormat(this.containerToken));\n+    }\n+    if (this.containerStatus !\u003d null\n+        \u0026\u0026 !((ContainerStatusPBImpl) this.containerStatus).getProto().equals(\n+            builder.getContainerStatus())) {\n+      builder.setContainerStatus(convertToProtoFormat(this.containerStatus));\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.containerId !\u003d null\n        \u0026\u0026 !((ContainerIdPBImpl) containerId).getProto().equals(\n            builder.getId())) {\n      builder.setId(convertToProtoFormat(this.containerId));\n    }\n    if (this.nodeId !\u003d null\n        \u0026\u0026 !((NodeIdPBImpl) nodeId).getProto().equals(\n            builder.getNodeId())) {\n      builder.setNodeId(convertToProtoFormat(this.nodeId));\n    }\n    if (this.resource !\u003d null\n        \u0026\u0026 !((ResourcePBImpl) this.resource).getProto().equals(\n            builder.getResource())) {\n      builder.setResource(convertToProtoFormat(this.resource));\n    }\n    if (this.containerToken !\u003d null\n        \u0026\u0026 !((ContainerTokenPBImpl) this.containerToken).getProto().equals(\n            builder.getContainerToken())) {\n      builder.setContainerToken(convertToProtoFormat(this.containerToken));\n    }\n    if (this.containerStatus !\u003d null\n        \u0026\u0026 !((ContainerStatusPBImpl) this.containerStatus).getProto().equals(\n            builder.getContainerStatus())) {\n      builder.setContainerStatus(convertToProtoFormat(this.containerStatus));\n    }\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/impl/pb/ContainerPBImpl.java"
    }
  }
}