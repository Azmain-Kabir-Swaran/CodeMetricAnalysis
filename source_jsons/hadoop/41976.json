{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ApplicationMasterService.java",
  "functionName": "initializeProcessingChain",
  "functionId": "initializeProcessingChain___conf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ApplicationMasterService.java",
  "functionStartLine": 152,
  "functionEndLine": 173,
  "numCommitsSeen": 100,
  "timeTaken": 2190,
  "changeHistory": [
    "0b489e564ce5a50324a530e29c18aa8a75276c50",
    "f9af15d659f59fd0cf564fe1ecc8e06c6429ba68"
  ],
  "changeHistoryShort": {
    "0b489e564ce5a50324a530e29c18aa8a75276c50": "Ybodychange",
    "f9af15d659f59fd0cf564fe1ecc8e06c6429ba68": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0b489e564ce5a50324a530e29c18aa8a75276c50": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7920. Simplify configuration for PlacementConstraints. Contributed by Wangda Tan.\n",
      "commitDate": "15/02/18 2:23 PM",
      "commitName": "0b489e564ce5a50324a530e29c18aa8a75276c50",
      "commitAuthor": "Konstantinos Karanasos",
      "commitDateOld": "31/01/18 1:30 AM",
      "commitNameOld": "f9af15d659f59fd0cf564fe1ecc8e06c6429ba68",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 15.54,
      "commitsBetweenForRepo": 109,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,22 @@\n   private void initializeProcessingChain(Configuration conf) {\n     amsProcessingChain.init(rmContext, null);\n-    boolean enablePlacementConstraints \u003d conf.getBoolean(\n-        YarnConfiguration.RM_PLACEMENT_CONSTRAINTS_ENABLED,\n-        YarnConfiguration.DEFAULT_RM_PLACEMENT_CONSTRAINTS_ENABLED);\n-    if (enablePlacementConstraints) {\n-      amsProcessingChain.addProcessor(new PlacementProcessor());\n-    }\n+    addPlacementConstraintHandler(conf);\n+\n     List\u003cApplicationMasterServiceProcessor\u003e processors \u003d getProcessorList(conf);\n     if (processors !\u003d null) {\n       Collections.reverse(processors);\n       for (ApplicationMasterServiceProcessor p : processors) {\n         // Ensure only single instance of PlacementProcessor is included\n-        if (enablePlacementConstraints \u0026\u0026 p instanceof PlacementProcessor) {\n+        if (p instanceof AbstractPlacementProcessor) {\n+          LOG.warn(\"Found PlacementProcessor\u003d\" + p.getClass().getCanonicalName()\n+              + \" defined in \"\n+              + YarnConfiguration.RM_APPLICATION_MASTER_SERVICE_PROCESSORS\n+              + \", however PlacementProcessor handler should be configured \"\n+              + \"by using \" + YarnConfiguration.RM_PLACEMENT_CONSTRAINTS_HANDLER\n+              + \", this processor will be ignored.\");\n           continue;\n         }\n         this.amsProcessingChain.addProcessor(p);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void initializeProcessingChain(Configuration conf) {\n    amsProcessingChain.init(rmContext, null);\n    addPlacementConstraintHandler(conf);\n\n    List\u003cApplicationMasterServiceProcessor\u003e processors \u003d getProcessorList(conf);\n    if (processors !\u003d null) {\n      Collections.reverse(processors);\n      for (ApplicationMasterServiceProcessor p : processors) {\n        // Ensure only single instance of PlacementProcessor is included\n        if (p instanceof AbstractPlacementProcessor) {\n          LOG.warn(\"Found PlacementProcessor\u003d\" + p.getClass().getCanonicalName()\n              + \" defined in \"\n              + YarnConfiguration.RM_APPLICATION_MASTER_SERVICE_PROCESSORS\n              + \", however PlacementProcessor handler should be configured \"\n              + \"by using \" + YarnConfiguration.RM_PLACEMENT_CONSTRAINTS_HANDLER\n              + \", this processor will be ignored.\");\n          continue;\n        }\n        this.amsProcessingChain.addProcessor(p);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ApplicationMasterService.java",
      "extendedDetails": {}
    },
    "f9af15d659f59fd0cf564fe1ecc8e06c6429ba68": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7612. Add Processor Framework for Rich Placement Constraints. (asuresh)\n",
      "commitDate": "31/01/18 1:30 AM",
      "commitName": "f9af15d659f59fd0cf564fe1ecc8e06c6429ba68",
      "commitAuthor": "Arun Suresh",
      "diff": "@@ -0,0 +1,20 @@\n+  private void initializeProcessingChain(Configuration conf) {\n+    amsProcessingChain.init(rmContext, null);\n+    boolean enablePlacementConstraints \u003d conf.getBoolean(\n+        YarnConfiguration.RM_PLACEMENT_CONSTRAINTS_ENABLED,\n+        YarnConfiguration.DEFAULT_RM_PLACEMENT_CONSTRAINTS_ENABLED);\n+    if (enablePlacementConstraints) {\n+      amsProcessingChain.addProcessor(new PlacementProcessor());\n+    }\n+    List\u003cApplicationMasterServiceProcessor\u003e processors \u003d getProcessorList(conf);\n+    if (processors !\u003d null) {\n+      Collections.reverse(processors);\n+      for (ApplicationMasterServiceProcessor p : processors) {\n+        // Ensure only single instance of PlacementProcessor is included\n+        if (enablePlacementConstraints \u0026\u0026 p instanceof PlacementProcessor) {\n+          continue;\n+        }\n+        this.amsProcessingChain.addProcessor(p);\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void initializeProcessingChain(Configuration conf) {\n    amsProcessingChain.init(rmContext, null);\n    boolean enablePlacementConstraints \u003d conf.getBoolean(\n        YarnConfiguration.RM_PLACEMENT_CONSTRAINTS_ENABLED,\n        YarnConfiguration.DEFAULT_RM_PLACEMENT_CONSTRAINTS_ENABLED);\n    if (enablePlacementConstraints) {\n      amsProcessingChain.addProcessor(new PlacementProcessor());\n    }\n    List\u003cApplicationMasterServiceProcessor\u003e processors \u003d getProcessorList(conf);\n    if (processors !\u003d null) {\n      Collections.reverse(processors);\n      for (ApplicationMasterServiceProcessor p : processors) {\n        // Ensure only single instance of PlacementProcessor is included\n        if (enablePlacementConstraints \u0026\u0026 p instanceof PlacementProcessor) {\n          continue;\n        }\n        this.amsProcessingChain.addProcessor(p);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ApplicationMasterService.java"
    }
  }
}