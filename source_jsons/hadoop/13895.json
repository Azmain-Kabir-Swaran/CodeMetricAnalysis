{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BlockManager.java",
  "functionName": "isExcess",
  "functionId": "isExcess___dn-DatanodeDescriptor__blk-BlockInfo",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
  "functionStartLine": 4453,
  "functionEndLine": 4455,
  "numCommitsSeen": 798,
  "timeTaken": 9125,
  "changeHistory": [
    "5865fe2bf01284993572ea60b3ec3bf8b4492818",
    "6979cbfc1f4c28440816b56f5624765872b0be49",
    "47b92f2b6f2dafc129a41b247f35e77c8e47ffba"
  ],
  "changeHistoryShort": {
    "5865fe2bf01284993572ea60b3ec3bf8b4492818": "Ybodychange",
    "6979cbfc1f4c28440816b56f5624765872b0be49": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
    "47b92f2b6f2dafc129a41b247f35e77c8e47ffba": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5865fe2bf01284993572ea60b3ec3bf8b4492818": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9869. Erasure Coding: Rename replication-based names in BlockManager to more generic [part-2]. Contributed by Rakesh R.\n",
      "commitDate": "25/04/16 10:01 PM",
      "commitName": "5865fe2bf01284993572ea60b3ec3bf8b4492818",
      "commitAuthor": "Zhe Zhang",
      "commitDateOld": "17/04/16 6:28 PM",
      "commitNameOld": "67523ffcf491f4f2db5335899c00a174d0caaa9b",
      "commitAuthorOld": "Walter Su",
      "daysBetweenCommits": 8.15,
      "commitsBetweenForRepo": 47,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,3 +1,3 @@\n   public boolean isExcess(DatanodeDescriptor dn, BlockInfo blk) {\n-    return excessReplicas.contains(dn, blk);\n+    return excessRedundancyMap.contains(dn, blk);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean isExcess(DatanodeDescriptor dn, BlockInfo blk) {\n    return excessRedundancyMap.contains(dn, blk);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "extendedDetails": {}
    },
    "6979cbfc1f4c28440816b56f5624765872b0be49": {
      "type": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
      "commitMessage": "HDFS-9838. Refactor the excessReplicateMap to a class.\n",
      "commitDate": "24/02/16 7:42 PM",
      "commitName": "6979cbfc1f4c28440816b56f5624765872b0be49",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-9838. Refactor the excessReplicateMap to a class.\n",
          "commitDate": "24/02/16 7:42 PM",
          "commitName": "6979cbfc1f4c28440816b56f5624765872b0be49",
          "commitAuthor": "Tsz-Wo Nicholas Sze",
          "commitDateOld": "24/02/16 3:13 PM",
          "commitNameOld": "47b92f2b6f2dafc129a41b247f35e77c8e47ffba",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 0.19,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,5 +1,3 @@\n-  private boolean isExcess(DatanodeDescriptor node, BlockInfo block) {\n-    LightWeightHashSet\u003cBlockInfo\u003e blocksExcess \u003d excessReplicateMap.get(\n-        node.getDatanodeUuid());\n-    return blocksExcess !\u003d null \u0026\u0026 blocksExcess.contains(block);\n+  public boolean isExcess(DatanodeDescriptor dn, BlockInfo blk) {\n+    return excessReplicas.contains(dn, blk);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean isExcess(DatanodeDescriptor dn, BlockInfo blk) {\n    return excessReplicas.contains(dn, blk);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
          "extendedDetails": {
            "oldValue": "[node-DatanodeDescriptor, block-BlockInfo]",
            "newValue": "[dn-DatanodeDescriptor, blk-BlockInfo]"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-9838. Refactor the excessReplicateMap to a class.\n",
          "commitDate": "24/02/16 7:42 PM",
          "commitName": "6979cbfc1f4c28440816b56f5624765872b0be49",
          "commitAuthor": "Tsz-Wo Nicholas Sze",
          "commitDateOld": "24/02/16 3:13 PM",
          "commitNameOld": "47b92f2b6f2dafc129a41b247f35e77c8e47ffba",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 0.19,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,5 +1,3 @@\n-  private boolean isExcess(DatanodeDescriptor node, BlockInfo block) {\n-    LightWeightHashSet\u003cBlockInfo\u003e blocksExcess \u003d excessReplicateMap.get(\n-        node.getDatanodeUuid());\n-    return blocksExcess !\u003d null \u0026\u0026 blocksExcess.contains(block);\n+  public boolean isExcess(DatanodeDescriptor dn, BlockInfo blk) {\n+    return excessReplicas.contains(dn, blk);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean isExcess(DatanodeDescriptor dn, BlockInfo blk) {\n    return excessReplicas.contains(dn, blk);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-9838. Refactor the excessReplicateMap to a class.\n",
          "commitDate": "24/02/16 7:42 PM",
          "commitName": "6979cbfc1f4c28440816b56f5624765872b0be49",
          "commitAuthor": "Tsz-Wo Nicholas Sze",
          "commitDateOld": "24/02/16 3:13 PM",
          "commitNameOld": "47b92f2b6f2dafc129a41b247f35e77c8e47ffba",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 0.19,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,5 +1,3 @@\n-  private boolean isExcess(DatanodeDescriptor node, BlockInfo block) {\n-    LightWeightHashSet\u003cBlockInfo\u003e blocksExcess \u003d excessReplicateMap.get(\n-        node.getDatanodeUuid());\n-    return blocksExcess !\u003d null \u0026\u0026 blocksExcess.contains(block);\n+  public boolean isExcess(DatanodeDescriptor dn, BlockInfo blk) {\n+    return excessReplicas.contains(dn, blk);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean isExcess(DatanodeDescriptor dn, BlockInfo blk) {\n    return excessReplicas.contains(dn, blk);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "47b92f2b6f2dafc129a41b247f35e77c8e47ffba": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-9837. BlockManager#countNodes should be able to detect duplicated internal blocks. Contributed by Jing Zhao.\n",
      "commitDate": "24/02/16 3:13 PM",
      "commitName": "47b92f2b6f2dafc129a41b247f35e77c8e47ffba",
      "commitAuthor": "Jing Zhao",
      "diff": "@@ -0,0 +1,5 @@\n+  private boolean isExcess(DatanodeDescriptor node, BlockInfo block) {\n+    LightWeightHashSet\u003cBlockInfo\u003e blocksExcess \u003d excessReplicateMap.get(\n+        node.getDatanodeUuid());\n+    return blocksExcess !\u003d null \u0026\u0026 blocksExcess.contains(block);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean isExcess(DatanodeDescriptor node, BlockInfo block) {\n    LightWeightHashSet\u003cBlockInfo\u003e blocksExcess \u003d excessReplicateMap.get(\n        node.getDatanodeUuid());\n    return blocksExcess !\u003d null \u0026\u0026 blocksExcess.contains(block);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java"
    }
  }
}