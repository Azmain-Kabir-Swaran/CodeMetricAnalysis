{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ServiceApiUtil.java",
  "functionName": "validateAndResolveCompsUpgrade",
  "functionId": "validateAndResolveCompsUpgrade___liveService-Service__compNames-Collection__String__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/utils/ServiceApiUtil.java",
  "functionStartLine": 622,
  "functionEndLine": 642,
  "numCommitsSeen": 32,
  "timeTaken": 1273,
  "changeHistory": [
    "913f87dada27776c539dfb352400ecf8d40e7943",
    "8d3b39de89809f5eed06f85f00ab223e2f75e49c"
  ],
  "changeHistoryShort": {
    "913f87dada27776c539dfb352400ecf8d40e7943": "Ybodychange",
    "8d3b39de89809f5eed06f85f00ab223e2f75e49c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "913f87dada27776c539dfb352400ecf8d40e7943": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8665.  Added Yarn service cancel upgrade option.\n            Contributed by Chandni Singh\n",
      "commitDate": "26/09/18 11:51 AM",
      "commitName": "913f87dada27776c539dfb352400ecf8d40e7943",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "21/08/18 4:49 PM",
      "commitNameOld": "e557c6bd8de2811a561210f672f47b4d07a9d5c6",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 35.79,
      "commitsBetweenForRepo": 332,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n   public static List\u003cContainer\u003e validateAndResolveCompsUpgrade(\n       Service liveService, Collection\u003cString\u003e compNames) throws YarnException {\n     Preconditions.checkNotNull(compNames);\n     HashSet\u003cString\u003e requestedComps \u003d Sets.newHashSet(compNames);\n     List\u003cContainer\u003e containerNeedUpgrade \u003d new ArrayList\u003c\u003e();\n     for (Component liveComp : liveService.getComponents()) {\n       if (requestedComps.contains(liveComp.getName())) {\n         if (!liveComp.getState().equals(ComponentState.NEEDS_UPGRADE)) {\n           // Nothing to upgrade\n           throw new YarnException(String.format(\n               ERROR_COMP_DOES_NOT_NEED_UPGRADE, liveComp.getName()));\n         }\n         liveComp.getContainers().forEach(liveContainer -\u003e {\n-          if (liveContainer.getState().equals(ContainerState.NEEDS_UPGRADE)) {\n+          if (isUpgradable(liveContainer)) {\n             containerNeedUpgrade.add(liveContainer);\n           }\n         });\n       }\n     }\n     return containerNeedUpgrade;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static List\u003cContainer\u003e validateAndResolveCompsUpgrade(\n      Service liveService, Collection\u003cString\u003e compNames) throws YarnException {\n    Preconditions.checkNotNull(compNames);\n    HashSet\u003cString\u003e requestedComps \u003d Sets.newHashSet(compNames);\n    List\u003cContainer\u003e containerNeedUpgrade \u003d new ArrayList\u003c\u003e();\n    for (Component liveComp : liveService.getComponents()) {\n      if (requestedComps.contains(liveComp.getName())) {\n        if (!liveComp.getState().equals(ComponentState.NEEDS_UPGRADE)) {\n          // Nothing to upgrade\n          throw new YarnException(String.format(\n              ERROR_COMP_DOES_NOT_NEED_UPGRADE, liveComp.getName()));\n        }\n        liveComp.getContainers().forEach(liveContainer -\u003e {\n          if (isUpgradable(liveContainer)) {\n            containerNeedUpgrade.add(liveContainer);\n          }\n        });\n      }\n    }\n    return containerNeedUpgrade;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/utils/ServiceApiUtil.java",
      "extendedDetails": {}
    },
    "8d3b39de89809f5eed06f85f00ab223e2f75e49c": {
      "type": "Yintroduced",
      "commitMessage": "YARN-8081.  Add support to upgrade a component.\n            Contributed by Chandni Singh\n",
      "commitDate": "15/05/18 5:40 PM",
      "commitName": "8d3b39de89809f5eed06f85f00ab223e2f75e49c",
      "commitAuthor": "Eric Yang",
      "diff": "@@ -0,0 +1,21 @@\n+  public static List\u003cContainer\u003e validateAndResolveCompsUpgrade(\n+      Service liveService, Collection\u003cString\u003e compNames) throws YarnException {\n+    Preconditions.checkNotNull(compNames);\n+    HashSet\u003cString\u003e requestedComps \u003d Sets.newHashSet(compNames);\n+    List\u003cContainer\u003e containerNeedUpgrade \u003d new ArrayList\u003c\u003e();\n+    for (Component liveComp : liveService.getComponents()) {\n+      if (requestedComps.contains(liveComp.getName())) {\n+        if (!liveComp.getState().equals(ComponentState.NEEDS_UPGRADE)) {\n+          // Nothing to upgrade\n+          throw new YarnException(String.format(\n+              ERROR_COMP_DOES_NOT_NEED_UPGRADE, liveComp.getName()));\n+        }\n+        liveComp.getContainers().forEach(liveContainer -\u003e {\n+          if (liveContainer.getState().equals(ContainerState.NEEDS_UPGRADE)) {\n+            containerNeedUpgrade.add(liveContainer);\n+          }\n+        });\n+      }\n+    }\n+    return containerNeedUpgrade;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static List\u003cContainer\u003e validateAndResolveCompsUpgrade(\n      Service liveService, Collection\u003cString\u003e compNames) throws YarnException {\n    Preconditions.checkNotNull(compNames);\n    HashSet\u003cString\u003e requestedComps \u003d Sets.newHashSet(compNames);\n    List\u003cContainer\u003e containerNeedUpgrade \u003d new ArrayList\u003c\u003e();\n    for (Component liveComp : liveService.getComponents()) {\n      if (requestedComps.contains(liveComp.getName())) {\n        if (!liveComp.getState().equals(ComponentState.NEEDS_UPGRADE)) {\n          // Nothing to upgrade\n          throw new YarnException(String.format(\n              ERROR_COMP_DOES_NOT_NEED_UPGRADE, liveComp.getName()));\n        }\n        liveComp.getContainers().forEach(liveContainer -\u003e {\n          if (liveContainer.getState().equals(ContainerState.NEEDS_UPGRADE)) {\n            containerNeedUpgrade.add(liveContainer);\n          }\n        });\n      }\n    }\n    return containerNeedUpgrade;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/utils/ServiceApiUtil.java"
    }
  }
}