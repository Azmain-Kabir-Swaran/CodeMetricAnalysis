{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DocumentStoreUtils.java",
  "functionName": "isFilterNotMatching",
  "functionId": "isFilterNotMatching___filters-TimelineEntityFilters__timelineEntity-TimelineEntity",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-documentstore/src/main/java/org/apache/hadoop/yarn/server/timelineservice/documentstore/DocumentStoreUtils.java",
  "functionStartLine": 278,
  "functionEndLine": 325,
  "numCommitsSeen": 2,
  "timeTaken": 484,
  "changeHistory": [
    "f235a942d5b7cab86f0cb4f5ba285f07cd939a40"
  ],
  "changeHistoryShort": {
    "f235a942d5b7cab86f0cb4f5ba285f07cd939a40": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f235a942d5b7cab86f0cb4f5ba285f07cd939a40": {
      "type": "Yintroduced",
      "commitMessage": "YARN-9016 DocumentStore as a backend for ATSv2. Contributed by Sushil Ks.\n",
      "commitDate": "13/03/19 4:45 PM",
      "commitName": "f235a942d5b7cab86f0cb4f5ba285f07cd939a40",
      "commitAuthor": "Vrushali C",
      "diff": "@@ -0,0 +1,48 @@\n+  static boolean isFilterNotMatching(TimelineEntityFilters filters,\n+      TimelineEntity timelineEntity) throws IOException {\n+    if (timelineEntity.getCreatedTime() !\u003d null \u0026\u0026 !isTimeInRange(timelineEntity\n+        .getCreatedTime(), filters.getCreatedTimeBegin(),\n+        filters.getCreatedTimeEnd())) {\n+      return true;\n+    }\n+\n+    if (filters.getRelatesTo() !\u003d null \u0026\u0026\n+        !filters.getRelatesTo().getFilterList().isEmpty() \u0026\u0026\n+        !TimelineStorageUtils.matchRelatesTo(timelineEntity,\n+            filters.getRelatesTo())) {\n+      return true;\n+    }\n+\n+    if (filters.getIsRelatedTo() !\u003d null \u0026\u0026\n+        !filters.getIsRelatedTo().getFilterList().isEmpty() \u0026\u0026\n+        !TimelineStorageUtils.matchIsRelatedTo(timelineEntity,\n+            filters.getIsRelatedTo())) {\n+      return true;\n+    }\n+\n+    if (filters.getInfoFilters() !\u003d null \u0026\u0026\n+        !filters.getInfoFilters().getFilterList().isEmpty() \u0026\u0026\n+        !TimelineStorageUtils.matchInfoFilters(timelineEntity,\n+            filters.getInfoFilters())) {\n+      return true;\n+    }\n+\n+    if (filters.getConfigFilters() !\u003d null \u0026\u0026\n+        !filters.getConfigFilters().getFilterList().isEmpty() \u0026\u0026\n+        !TimelineStorageUtils.matchConfigFilters(timelineEntity,\n+            filters.getConfigFilters())) {\n+      return true;\n+    }\n+\n+    if (filters.getMetricFilters() !\u003d null \u0026\u0026\n+        !filters.getMetricFilters().getFilterList().isEmpty() \u0026\u0026\n+        !TimelineStorageUtils.matchMetricFilters(timelineEntity,\n+            filters.getMetricFilters())) {\n+      return true;\n+    }\n+\n+    return filters.getEventFilters() !\u003d null \u0026\u0026\n+        !filters.getEventFilters().getFilterList().isEmpty() \u0026\u0026\n+        !TimelineStorageUtils.matchEventFilters(timelineEntity,\n+            filters.getEventFilters());\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  static boolean isFilterNotMatching(TimelineEntityFilters filters,\n      TimelineEntity timelineEntity) throws IOException {\n    if (timelineEntity.getCreatedTime() !\u003d null \u0026\u0026 !isTimeInRange(timelineEntity\n        .getCreatedTime(), filters.getCreatedTimeBegin(),\n        filters.getCreatedTimeEnd())) {\n      return true;\n    }\n\n    if (filters.getRelatesTo() !\u003d null \u0026\u0026\n        !filters.getRelatesTo().getFilterList().isEmpty() \u0026\u0026\n        !TimelineStorageUtils.matchRelatesTo(timelineEntity,\n            filters.getRelatesTo())) {\n      return true;\n    }\n\n    if (filters.getIsRelatedTo() !\u003d null \u0026\u0026\n        !filters.getIsRelatedTo().getFilterList().isEmpty() \u0026\u0026\n        !TimelineStorageUtils.matchIsRelatedTo(timelineEntity,\n            filters.getIsRelatedTo())) {\n      return true;\n    }\n\n    if (filters.getInfoFilters() !\u003d null \u0026\u0026\n        !filters.getInfoFilters().getFilterList().isEmpty() \u0026\u0026\n        !TimelineStorageUtils.matchInfoFilters(timelineEntity,\n            filters.getInfoFilters())) {\n      return true;\n    }\n\n    if (filters.getConfigFilters() !\u003d null \u0026\u0026\n        !filters.getConfigFilters().getFilterList().isEmpty() \u0026\u0026\n        !TimelineStorageUtils.matchConfigFilters(timelineEntity,\n            filters.getConfigFilters())) {\n      return true;\n    }\n\n    if (filters.getMetricFilters() !\u003d null \u0026\u0026\n        !filters.getMetricFilters().getFilterList().isEmpty() \u0026\u0026\n        !TimelineStorageUtils.matchMetricFilters(timelineEntity,\n            filters.getMetricFilters())) {\n      return true;\n    }\n\n    return filters.getEventFilters() !\u003d null \u0026\u0026\n        !filters.getEventFilters().getFilterList().isEmpty() \u0026\u0026\n        !TimelineStorageUtils.matchEventFilters(timelineEntity,\n            filters.getEventFilters());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-documentstore/src/main/java/org/apache/hadoop/yarn/server/timelineservice/documentstore/DocumentStoreUtils.java"
    }
  }
}