{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TaskAttemptImpl.java",
  "functionName": "addExternalShuffleProviders",
  "functionId": "addExternalShuffleProviders___conf-Configuration__serviceData-Map__String,ByteBuffer__",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java",
  "functionStartLine": 1065,
  "functionEndLine": 1098,
  "numCommitsSeen": 108,
  "timeTaken": 1624,
  "changeHistory": [
    "845529b3ab338e759665a687eb525fb2cccde7bf"
  ],
  "changeHistoryShort": {
    "845529b3ab338e759665a687eb525fb2cccde7bf": "Yintroduced"
  },
  "changeHistoryDetails": {
    "845529b3ab338e759665a687eb525fb2cccde7bf": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-6824. TaskAttemptImpl#createCommonContainerLaunchContext is longer than 150 lines. Contributed by Chris Trezzo.\n",
      "commitDate": "02/04/17 9:06 PM",
      "commitName": "845529b3ab338e759665a687eb525fb2cccde7bf",
      "commitAuthor": "Akira Ajisaka",
      "diff": "@@ -0,0 +1,34 @@\n+  private static void addExternalShuffleProviders(Configuration conf,\n+      Map\u003cString, ByteBuffer\u003e serviceData) {\n+    // add external shuffle-providers - if any\n+    Collection\u003cString\u003e shuffleProviders \u003d conf.getStringCollection(\n+        MRJobConfig.MAPREDUCE_JOB_SHUFFLE_PROVIDER_SERVICES);\n+    if (!shuffleProviders.isEmpty()) {\n+      Collection\u003cString\u003e auxNames \u003d\n+          conf.getStringCollection(YarnConfiguration.NM_AUX_SERVICES);\n+\n+      for (final String shuffleProvider : shuffleProviders) {\n+        if (shuffleProvider\n+            .equals(ShuffleHandler.MAPREDUCE_SHUFFLE_SERVICEID)) {\n+          continue; // skip built-in shuffle-provider that was already inserted\n+                    // with shuffle secret key\n+        }\n+        if (auxNames.contains(shuffleProvider)) {\n+          LOG.info(\"Adding ShuffleProvider Service: \" + shuffleProvider\n+              + \" to serviceData\");\n+          // This only serves for INIT_APP notifications\n+          // The shuffle service needs to be able to work with the host:port\n+          // information provided by the AM\n+          // (i.e. shuffle services which require custom location / other\n+          // configuration are not supported)\n+          serviceData.put(shuffleProvider, ByteBuffer.allocate(0));\n+        } else {\n+          throw new YarnRuntimeException(\"ShuffleProvider Service: \"\n+              + shuffleProvider\n+              + \" was NOT found in the list of aux-services that are \"\n+              + \"available in this NM. You may need to specify this \"\n+              + \"ShuffleProvider as an aux-service in your yarn-site.xml\");\n+        }\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static void addExternalShuffleProviders(Configuration conf,\n      Map\u003cString, ByteBuffer\u003e serviceData) {\n    // add external shuffle-providers - if any\n    Collection\u003cString\u003e shuffleProviders \u003d conf.getStringCollection(\n        MRJobConfig.MAPREDUCE_JOB_SHUFFLE_PROVIDER_SERVICES);\n    if (!shuffleProviders.isEmpty()) {\n      Collection\u003cString\u003e auxNames \u003d\n          conf.getStringCollection(YarnConfiguration.NM_AUX_SERVICES);\n\n      for (final String shuffleProvider : shuffleProviders) {\n        if (shuffleProvider\n            .equals(ShuffleHandler.MAPREDUCE_SHUFFLE_SERVICEID)) {\n          continue; // skip built-in shuffle-provider that was already inserted\n                    // with shuffle secret key\n        }\n        if (auxNames.contains(shuffleProvider)) {\n          LOG.info(\"Adding ShuffleProvider Service: \" + shuffleProvider\n              + \" to serviceData\");\n          // This only serves for INIT_APP notifications\n          // The shuffle service needs to be able to work with the host:port\n          // information provided by the AM\n          // (i.e. shuffle services which require custom location / other\n          // configuration are not supported)\n          serviceData.put(shuffleProvider, ByteBuffer.allocate(0));\n        } else {\n          throw new YarnRuntimeException(\"ShuffleProvider Service: \"\n              + shuffleProvider\n              + \" was NOT found in the list of aux-services that are \"\n              + \"available in this NM. You may need to specify this \"\n              + \"ShuffleProvider as an aux-service in your yarn-site.xml\");\n        }\n      }\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java"
    }
  }
}