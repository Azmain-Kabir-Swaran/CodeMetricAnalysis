{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PBHelperClient.java",
  "functionName": "convert",
  "functionId": "convert___proto-CachePoolInfoProto",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelperClient.java",
  "functionStartLine": 1402,
  "functionEndLine": 1426,
  "numCommitsSeen": 226,
  "timeTaken": 6071,
  "changeHistory": [
    "5f6b4157a40e974ccc6a56c39dbd35c54f393fbd",
    "06022b8fdc40e50eaac63758246353058e8cfa6d",
    "b9ae3087c0f83bfeeea47ded8e19932b46fd2350",
    "991c453ca3ac141a3f286f74af8401f83c38b230",
    "ce35e0950cef9250ce2ceffb3b8bfcff533c6b92"
  ],
  "changeHistoryShort": {
    "5f6b4157a40e974ccc6a56c39dbd35c54f393fbd": "Ybodychange",
    "06022b8fdc40e50eaac63758246353058e8cfa6d": "Ymovefromfile",
    "b9ae3087c0f83bfeeea47ded8e19932b46fd2350": "Ybodychange",
    "991c453ca3ac141a3f286f74af8401f83c38b230": "Ybodychange",
    "ce35e0950cef9250ce2ceffb3b8bfcff533c6b92": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5f6b4157a40e974ccc6a56c39dbd35c54f393fbd": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10328. Add per-cache-pool default replication num configuration (xupeng via cmccabe)\n",
      "commitDate": "20/06/16 10:42 AM",
      "commitName": "5f6b4157a40e974ccc6a56c39dbd35c54f393fbd",
      "commitAuthor": "Colin Patrick Mccabe",
      "commitDateOld": "01/06/16 9:56 PM",
      "commitNameOld": "d749cf65e1ab0e0daf5be86931507183f189e855",
      "commitAuthorOld": "Kai Zheng",
      "daysBetweenCommits": 18.53,
      "commitsBetweenForRepo": 116,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,25 @@\n   public static CachePoolInfo convert (CachePoolInfoProto proto) {\n     // Pool name is a required field, the rest are optional\n     String poolName \u003d Preconditions.checkNotNull(proto.getPoolName());\n     CachePoolInfo info \u003d new CachePoolInfo(poolName);\n     if (proto.hasOwnerName()) {\n       info.setOwnerName(proto.getOwnerName());\n     }\n     if (proto.hasGroupName()) {\n       info.setGroupName(proto.getGroupName());\n     }\n     if (proto.hasMode()) {\n       info.setMode(new FsPermission((short)proto.getMode()));\n     }\n     if (proto.hasLimit())  {\n       info.setLimit(proto.getLimit());\n     }\n+    if (proto.hasDefaultReplication()) {\n+      info.setDefaultReplication(Shorts.checkedCast(\n+          proto.getDefaultReplication()));\n+    }\n     if (proto.hasMaxRelativeExpiry()) {\n       info.setMaxRelativeExpiryMs(proto.getMaxRelativeExpiry());\n     }\n     return info;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static CachePoolInfo convert (CachePoolInfoProto proto) {\n    // Pool name is a required field, the rest are optional\n    String poolName \u003d Preconditions.checkNotNull(proto.getPoolName());\n    CachePoolInfo info \u003d new CachePoolInfo(poolName);\n    if (proto.hasOwnerName()) {\n      info.setOwnerName(proto.getOwnerName());\n    }\n    if (proto.hasGroupName()) {\n      info.setGroupName(proto.getGroupName());\n    }\n    if (proto.hasMode()) {\n      info.setMode(new FsPermission((short)proto.getMode()));\n    }\n    if (proto.hasLimit())  {\n      info.setLimit(proto.getLimit());\n    }\n    if (proto.hasDefaultReplication()) {\n      info.setDefaultReplication(Shorts.checkedCast(\n          proto.getDefaultReplication()));\n    }\n    if (proto.hasMaxRelativeExpiry()) {\n      info.setMaxRelativeExpiryMs(proto.getMaxRelativeExpiry());\n    }\n    return info;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelperClient.java",
      "extendedDetails": {}
    },
    "06022b8fdc40e50eaac63758246353058e8cfa6d": {
      "type": "Ymovefromfile",
      "commitMessage": "HDFS-9111. Move hdfs-client protobuf convert methods from PBHelper to PBHelperClient. Contributed by Mingliang Liu.\n",
      "commitDate": "21/09/15 6:53 PM",
      "commitName": "06022b8fdc40e50eaac63758246353058e8cfa6d",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "21/09/15 5:51 PM",
      "commitNameOld": "8e01b0d97ac3d74b049a801dfa1cc6e77d8f680a",
      "commitAuthorOld": "Chris Douglas",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static CachePoolInfo convert (CachePoolInfoProto proto) {\n    // Pool name is a required field, the rest are optional\n    String poolName \u003d checkNotNull(proto.getPoolName());\n    CachePoolInfo info \u003d new CachePoolInfo(poolName);\n    if (proto.hasOwnerName()) {\n        info.setOwnerName(proto.getOwnerName());\n    }\n    if (proto.hasGroupName()) {\n      info.setGroupName(proto.getGroupName());\n    }\n    if (proto.hasMode()) {\n      info.setMode(new FsPermission((short)proto.getMode()));\n    }\n    if (proto.hasLimit())  {\n      info.setLimit(proto.getLimit());\n    }\n    if (proto.hasMaxRelativeExpiry()) {\n      info.setMaxRelativeExpiryMs(proto.getMaxRelativeExpiry());\n    }\n    return info;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelperClient.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelperClient.java",
        "oldMethodName": "convert",
        "newMethodName": "convert"
      }
    },
    "b9ae3087c0f83bfeeea47ded8e19932b46fd2350": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5636. Enforce a max TTL per cache pool (awang via cmccabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1552841 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "20/12/13 3:27 PM",
      "commitName": "b9ae3087c0f83bfeeea47ded8e19932b46fd2350",
      "commitAuthor": "Colin McCabe",
      "commitDateOld": "17/12/13 10:47 AM",
      "commitNameOld": "991c453ca3ac141a3f286f74af8401f83c38b230",
      "commitAuthorOld": "Colin McCabe",
      "daysBetweenCommits": 3.19,
      "commitsBetweenForRepo": 31,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,21 @@\n   public static CachePoolInfo convert (CachePoolInfoProto proto) {\n     // Pool name is a required field, the rest are optional\n     String poolName \u003d checkNotNull(proto.getPoolName());\n     CachePoolInfo info \u003d new CachePoolInfo(poolName);\n     if (proto.hasOwnerName()) {\n         info.setOwnerName(proto.getOwnerName());\n     }\n     if (proto.hasGroupName()) {\n       info.setGroupName(proto.getGroupName());\n     }\n     if (proto.hasMode()) {\n       info.setMode(new FsPermission((short)proto.getMode()));\n     }\n     if (proto.hasLimit())  {\n       info.setLimit(proto.getLimit());\n     }\n+    if (proto.hasMaxRelativeExpiry()) {\n+      info.setMaxRelativeExpiryMs(proto.getMaxRelativeExpiry());\n+    }\n     return info;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static CachePoolInfo convert (CachePoolInfoProto proto) {\n    // Pool name is a required field, the rest are optional\n    String poolName \u003d checkNotNull(proto.getPoolName());\n    CachePoolInfo info \u003d new CachePoolInfo(poolName);\n    if (proto.hasOwnerName()) {\n        info.setOwnerName(proto.getOwnerName());\n    }\n    if (proto.hasGroupName()) {\n      info.setGroupName(proto.getGroupName());\n    }\n    if (proto.hasMode()) {\n      info.setMode(new FsPermission((short)proto.getMode()));\n    }\n    if (proto.hasLimit())  {\n      info.setLimit(proto.getLimit());\n    }\n    if (proto.hasMaxRelativeExpiry()) {\n      info.setMaxRelativeExpiryMs(proto.getMaxRelativeExpiry());\n    }\n    return info;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java",
      "extendedDetails": {}
    },
    "991c453ca3ac141a3f286f74af8401f83c38b230": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5431. Support cachepool-based limit management in path-based caching. (awang via cmccabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1551651 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/12/13 10:47 AM",
      "commitName": "991c453ca3ac141a3f286f74af8401f83c38b230",
      "commitAuthor": "Colin McCabe",
      "commitDateOld": "05/12/13 3:41 PM",
      "commitNameOld": "00718c2ffaa11cbdabac6f5ef4b2de5dcf9d6859",
      "commitAuthorOld": "",
      "daysBetweenCommits": 11.8,
      "commitsBetweenForRepo": 65,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   public static CachePoolInfo convert (CachePoolInfoProto proto) {\n     // Pool name is a required field, the rest are optional\n     String poolName \u003d checkNotNull(proto.getPoolName());\n     CachePoolInfo info \u003d new CachePoolInfo(poolName);\n     if (proto.hasOwnerName()) {\n         info.setOwnerName(proto.getOwnerName());\n     }\n     if (proto.hasGroupName()) {\n       info.setGroupName(proto.getGroupName());\n     }\n     if (proto.hasMode()) {\n       info.setMode(new FsPermission((short)proto.getMode()));\n     }\n-    if (proto.hasWeight()) {\n-      info.setWeight(proto.getWeight());\n+    if (proto.hasLimit())  {\n+      info.setLimit(proto.getLimit());\n     }\n     return info;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static CachePoolInfo convert (CachePoolInfoProto proto) {\n    // Pool name is a required field, the rest are optional\n    String poolName \u003d checkNotNull(proto.getPoolName());\n    CachePoolInfo info \u003d new CachePoolInfo(poolName);\n    if (proto.hasOwnerName()) {\n        info.setOwnerName(proto.getOwnerName());\n    }\n    if (proto.hasGroupName()) {\n      info.setGroupName(proto.getGroupName());\n    }\n    if (proto.hasMode()) {\n      info.setMode(new FsPermission((short)proto.getMode()));\n    }\n    if (proto.hasLimit())  {\n      info.setLimit(proto.getLimit());\n    }\n    return info;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java",
      "extendedDetails": {}
    },
    "ce35e0950cef9250ce2ceffb3b8bfcff533c6b92": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-5471. CacheAdmin -listPools fails when user lacks permissions to view all pools (Andrew Wang via Colin Patrick McCabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1541323 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/11/13 3:52 PM",
      "commitName": "ce35e0950cef9250ce2ceffb3b8bfcff533c6b92",
      "commitAuthor": "Colin McCabe",
      "diff": "@@ -0,0 +1,18 @@\n+  public static CachePoolInfo convert (CachePoolInfoProto proto) {\n+    // Pool name is a required field, the rest are optional\n+    String poolName \u003d checkNotNull(proto.getPoolName());\n+    CachePoolInfo info \u003d new CachePoolInfo(poolName);\n+    if (proto.hasOwnerName()) {\n+        info.setOwnerName(proto.getOwnerName());\n+    }\n+    if (proto.hasGroupName()) {\n+      info.setGroupName(proto.getGroupName());\n+    }\n+    if (proto.hasMode()) {\n+      info.setMode(new FsPermission((short)proto.getMode()));\n+    }\n+    if (proto.hasWeight()) {\n+      info.setWeight(proto.getWeight());\n+    }\n+    return info;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static CachePoolInfo convert (CachePoolInfoProto proto) {\n    // Pool name is a required field, the rest are optional\n    String poolName \u003d checkNotNull(proto.getPoolName());\n    CachePoolInfo info \u003d new CachePoolInfo(poolName);\n    if (proto.hasOwnerName()) {\n        info.setOwnerName(proto.getOwnerName());\n    }\n    if (proto.hasGroupName()) {\n      info.setGroupName(proto.getGroupName());\n    }\n    if (proto.hasMode()) {\n      info.setMode(new FsPermission((short)proto.getMode()));\n    }\n    if (proto.hasWeight()) {\n      info.setWeight(proto.getWeight());\n    }\n    return info;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java"
    }
  }
}