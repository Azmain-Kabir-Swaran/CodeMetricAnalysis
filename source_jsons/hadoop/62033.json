{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HAUtil.java",
  "functionName": "checkAndSetRMRPCAddress",
  "functionId": "checkAndSetRMRPCAddress___prefix-String__RMId-String__conf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/conf/HAUtil.java",
  "functionStartLine": 333,
  "functionEndLine": 357,
  "numCommitsSeen": 19,
  "timeTaken": 945,
  "changeHistory": [
    "990cffdcfa9349fff0cee144b1d0e5267c40f63d",
    "8b2336fcefa906a5bfe7f6dcf36c18fb34f377f5"
  ],
  "changeHistoryShort": {
    "990cffdcfa9349fff0cee144b1d0e5267c40f63d": "Ybodychange",
    "8b2336fcefa906a5bfe7f6dcf36c18fb34f377f5": "Yintroduced"
  },
  "changeHistoryDetails": {
    "990cffdcfa9349fff0cee144b1d0e5267c40f63d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1553. Modified YARN and MR to stop using HttpConfig.isSecure() and\ninstead rely on the http policy framework. And also fix some bugs related\nto https handling in YARN web-apps. Contributed by Haohui Mai.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1568501 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/02/14 12:01 PM",
      "commitName": "990cffdcfa9349fff0cee144b1d0e5267c40f63d",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "06/02/14 7:18 PM",
      "commitNameOld": "8b2336fcefa906a5bfe7f6dcf36c18fb34f377f5",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 7.7,
      "commitsBetweenForRepo": 54,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n   private static void checkAndSetRMRPCAddress(String prefix, String RMId,\n       Configuration conf) {\n     String rpcAddressConfKey \u003d null;\n     try {\n       rpcAddressConfKey \u003d addSuffix(prefix, RMId);\n       if (conf.getTrimmed(rpcAddressConfKey) \u003d\u003d null) {\n         String hostNameConfKey \u003d addSuffix(YarnConfiguration.RM_HOSTNAME, RMId);\n         String confVal \u003d conf.getTrimmed(hostNameConfKey);\n         if (confVal \u003d\u003d null) {\n           throwBadConfigurationException(getNeedToSetValueMessage(\n               hostNameConfKey + \" or \" + addSuffix(prefix, RMId)));\n         } else {\n           conf.set(addSuffix(prefix, RMId), confVal + \":\"\n-              + YarnConfiguration.getRMDefaultPortNumber(prefix));\n+              + YarnConfiguration.getRMDefaultPortNumber(prefix, conf));\n         }\n       }\n     } catch (IllegalArgumentException iae) {\n       String errmsg \u003d iae.getMessage();\n       if (rpcAddressConfKey \u003d\u003d null) {\n         // Error at addSuffix\n         errmsg \u003d getInvalidValueMessage(YarnConfiguration.RM_HA_ID, RMId);\n       }\n       throwBadConfigurationException(errmsg);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void checkAndSetRMRPCAddress(String prefix, String RMId,\n      Configuration conf) {\n    String rpcAddressConfKey \u003d null;\n    try {\n      rpcAddressConfKey \u003d addSuffix(prefix, RMId);\n      if (conf.getTrimmed(rpcAddressConfKey) \u003d\u003d null) {\n        String hostNameConfKey \u003d addSuffix(YarnConfiguration.RM_HOSTNAME, RMId);\n        String confVal \u003d conf.getTrimmed(hostNameConfKey);\n        if (confVal \u003d\u003d null) {\n          throwBadConfigurationException(getNeedToSetValueMessage(\n              hostNameConfKey + \" or \" + addSuffix(prefix, RMId)));\n        } else {\n          conf.set(addSuffix(prefix, RMId), confVal + \":\"\n              + YarnConfiguration.getRMDefaultPortNumber(prefix, conf));\n        }\n      }\n    } catch (IllegalArgumentException iae) {\n      String errmsg \u003d iae.getMessage();\n      if (rpcAddressConfKey \u003d\u003d null) {\n        // Error at addSuffix\n        errmsg \u003d getInvalidValueMessage(YarnConfiguration.RM_HA_ID, RMId);\n      }\n      throwBadConfigurationException(errmsg);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/conf/HAUtil.java",
      "extendedDetails": {}
    },
    "8b2336fcefa906a5bfe7f6dcf36c18fb34f377f5": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1660. Simplified the RM HA configuration to accept and be able to simply depend just on\nconfiguration properties of the form yarn.resourcemanager.hostname.RMID and use the default\nports for all service addresses. Contributed by Xuan Gong.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1565523 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/02/14 7:18 PM",
      "commitName": "8b2336fcefa906a5bfe7f6dcf36c18fb34f377f5",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,25 @@\n+  private static void checkAndSetRMRPCAddress(String prefix, String RMId,\n+      Configuration conf) {\n+    String rpcAddressConfKey \u003d null;\n+    try {\n+      rpcAddressConfKey \u003d addSuffix(prefix, RMId);\n+      if (conf.getTrimmed(rpcAddressConfKey) \u003d\u003d null) {\n+        String hostNameConfKey \u003d addSuffix(YarnConfiguration.RM_HOSTNAME, RMId);\n+        String confVal \u003d conf.getTrimmed(hostNameConfKey);\n+        if (confVal \u003d\u003d null) {\n+          throwBadConfigurationException(getNeedToSetValueMessage(\n+              hostNameConfKey + \" or \" + addSuffix(prefix, RMId)));\n+        } else {\n+          conf.set(addSuffix(prefix, RMId), confVal + \":\"\n+              + YarnConfiguration.getRMDefaultPortNumber(prefix));\n+        }\n+      }\n+    } catch (IllegalArgumentException iae) {\n+      String errmsg \u003d iae.getMessage();\n+      if (rpcAddressConfKey \u003d\u003d null) {\n+        // Error at addSuffix\n+        errmsg \u003d getInvalidValueMessage(YarnConfiguration.RM_HA_ID, RMId);\n+      }\n+      throwBadConfigurationException(errmsg);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static void checkAndSetRMRPCAddress(String prefix, String RMId,\n      Configuration conf) {\n    String rpcAddressConfKey \u003d null;\n    try {\n      rpcAddressConfKey \u003d addSuffix(prefix, RMId);\n      if (conf.getTrimmed(rpcAddressConfKey) \u003d\u003d null) {\n        String hostNameConfKey \u003d addSuffix(YarnConfiguration.RM_HOSTNAME, RMId);\n        String confVal \u003d conf.getTrimmed(hostNameConfKey);\n        if (confVal \u003d\u003d null) {\n          throwBadConfigurationException(getNeedToSetValueMessage(\n              hostNameConfKey + \" or \" + addSuffix(prefix, RMId)));\n        } else {\n          conf.set(addSuffix(prefix, RMId), confVal + \":\"\n              + YarnConfiguration.getRMDefaultPortNumber(prefix));\n        }\n      }\n    } catch (IllegalArgumentException iae) {\n      String errmsg \u003d iae.getMessage();\n      if (rpcAddressConfKey \u003d\u003d null) {\n        // Error at addSuffix\n        errmsg \u003d getInvalidValueMessage(YarnConfiguration.RM_HA_ID, RMId);\n      }\n      throwBadConfigurationException(errmsg);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/conf/HAUtil.java"
    }
  }
}