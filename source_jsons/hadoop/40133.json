{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CapacitySchedulerConfiguration.java",
  "functionName": "getConfiguredNodeLabels",
  "functionId": "getConfiguredNodeLabels___queuePath-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacitySchedulerConfiguration.java",
  "functionStartLine": 1340,
  "functionEndLine": 1366,
  "numCommitsSeen": 90,
  "timeTaken": 2204,
  "changeHistory": [
    "f489a4ec969f3727d03c8e85d51af1018fc0b2a1"
  ],
  "changeHistoryShort": {
    "f489a4ec969f3727d03c8e85d51af1018fc0b2a1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f489a4ec969f3727d03c8e85d51af1018fc0b2a1": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2918. RM should not fail on startup if queue\u0027s configured labels do not exist in cluster-node-labels. Contributed by Wangda Tan\n",
      "commitDate": "07/05/15 5:35 PM",
      "commitName": "f489a4ec969f3727d03c8e85d51af1018fc0b2a1",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,27 @@\n+  public Set\u003cString\u003e getConfiguredNodeLabels(String queuePath) {\n+    Set\u003cString\u003e configuredNodeLabels \u003d new HashSet\u003cString\u003e();\n+    Entry\u003cString, String\u003e e \u003d null;\n+    \n+    Iterator\u003cEntry\u003cString, String\u003e\u003e iter \u003d iterator();\n+    while (iter.hasNext()) {\n+      e \u003d iter.next();\n+      String key \u003d e.getKey();\n+\n+      if (key.startsWith(getQueuePrefix(queuePath) + ACCESSIBLE_NODE_LABELS\n+          + DOT)) {\n+        // Find \u003clabel-name\u003e in\n+        // \u003cqueue-path\u003e.accessible-node-labels.\u003clabel-name\u003e.property\n+        int labelStartIdx \u003d\n+            key.indexOf(ACCESSIBLE_NODE_LABELS)\n+                + ACCESSIBLE_NODE_LABELS.length() + 1;\n+        int labelEndIndx \u003d key.indexOf(\u0027.\u0027, labelStartIdx);\n+        String labelName \u003d key.substring(labelStartIdx, labelEndIndx);\n+        configuredNodeLabels.add(labelName);\n+      }\n+    }\n+    \n+    // always add NO_LABEL\n+    configuredNodeLabels.add(RMNodeLabelsManager.NO_LABEL);\n+    \n+    return configuredNodeLabels;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Set\u003cString\u003e getConfiguredNodeLabels(String queuePath) {\n    Set\u003cString\u003e configuredNodeLabels \u003d new HashSet\u003cString\u003e();\n    Entry\u003cString, String\u003e e \u003d null;\n    \n    Iterator\u003cEntry\u003cString, String\u003e\u003e iter \u003d iterator();\n    while (iter.hasNext()) {\n      e \u003d iter.next();\n      String key \u003d e.getKey();\n\n      if (key.startsWith(getQueuePrefix(queuePath) + ACCESSIBLE_NODE_LABELS\n          + DOT)) {\n        // Find \u003clabel-name\u003e in\n        // \u003cqueue-path\u003e.accessible-node-labels.\u003clabel-name\u003e.property\n        int labelStartIdx \u003d\n            key.indexOf(ACCESSIBLE_NODE_LABELS)\n                + ACCESSIBLE_NODE_LABELS.length() + 1;\n        int labelEndIndx \u003d key.indexOf(\u0027.\u0027, labelStartIdx);\n        String labelName \u003d key.substring(labelStartIdx, labelEndIndx);\n        configuredNodeLabels.add(labelName);\n      }\n    }\n    \n    // always add NO_LABEL\n    configuredNodeLabels.add(RMNodeLabelsManager.NO_LABEL);\n    \n    return configuredNodeLabels;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacitySchedulerConfiguration.java"
    }
  }
}