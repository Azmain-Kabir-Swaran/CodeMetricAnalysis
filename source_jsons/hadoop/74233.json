{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LdapGroupsMapping.java",
  "functionName": "initializeBindUsers",
  "functionId": "initializeBindUsers",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/LdapGroupsMapping.java",
  "functionStartLine": 876,
  "functionEndLine": 901,
  "numCommitsSeen": 29,
  "timeTaken": 740,
  "changeHistory": [
    "ba4e7bd1928a73d21a3dc5afb95f0d35d5b63000"
  ],
  "changeHistoryShort": {
    "ba4e7bd1928a73d21a3dc5afb95f0d35d5b63000": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ba4e7bd1928a73d21a3dc5afb95f0d35d5b63000": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-16125. Support multiple bind users in LdapGroupsMapping. Contributed by Lukas Majercak.\n",
      "commitDate": "25/02/19 1:39 PM",
      "commitName": "ba4e7bd1928a73d21a3dc5afb95f0d35d5b63000",
      "commitAuthor": "Inigo Goiri",
      "diff": "@@ -0,0 +1,26 @@\n+  private void initializeBindUsers() {\n+    List\u003cBindUserInfo\u003e bindUsersConfigured \u003d new ArrayList\u003c\u003e();\n+\n+    String[] bindUserAliases \u003d conf.getStrings(BIND_USERS_KEY);\n+    if (bindUserAliases !\u003d null \u0026\u0026 bindUserAliases.length \u003e 0) {\n+\n+      for (String bindUserAlias : bindUserAliases) {\n+        String userConfPrefix \u003d BIND_USERS_KEY + \".\" + bindUserAlias;\n+        String bindUsername \u003d conf.get(userConfPrefix + BIND_USER_SUFFIX);\n+        String bindPassword \u003d getPasswordForBindUser(userConfPrefix);\n+\n+        if (bindUsername \u003d\u003d null || bindPassword \u003d\u003d null) {\n+          throw new RuntimeException(\"Bind username or password not \" +\n+              \"configured for user: \" + bindUserAlias);\n+        }\n+        bindUsersConfigured.add(new BindUserInfo(bindUsername, bindPassword));\n+      }\n+    } else {\n+      String bindUsername \u003d conf.get(BIND_USER_KEY, BIND_USER_DEFAULT);\n+      String bindPassword \u003d getPasswordForBindUser(LDAP_CONFIG_PREFIX);\n+      bindUsersConfigured.add(new BindUserInfo(bindUsername, bindPassword));\n+    }\n+\n+    this.bindUsers \u003d Iterators.cycle(bindUsersConfigured);\n+    this.currentBindUser \u003d this.bindUsers.next();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void initializeBindUsers() {\n    List\u003cBindUserInfo\u003e bindUsersConfigured \u003d new ArrayList\u003c\u003e();\n\n    String[] bindUserAliases \u003d conf.getStrings(BIND_USERS_KEY);\n    if (bindUserAliases !\u003d null \u0026\u0026 bindUserAliases.length \u003e 0) {\n\n      for (String bindUserAlias : bindUserAliases) {\n        String userConfPrefix \u003d BIND_USERS_KEY + \".\" + bindUserAlias;\n        String bindUsername \u003d conf.get(userConfPrefix + BIND_USER_SUFFIX);\n        String bindPassword \u003d getPasswordForBindUser(userConfPrefix);\n\n        if (bindUsername \u003d\u003d null || bindPassword \u003d\u003d null) {\n          throw new RuntimeException(\"Bind username or password not \" +\n              \"configured for user: \" + bindUserAlias);\n        }\n        bindUsersConfigured.add(new BindUserInfo(bindUsername, bindPassword));\n      }\n    } else {\n      String bindUsername \u003d conf.get(BIND_USER_KEY, BIND_USER_DEFAULT);\n      String bindPassword \u003d getPasswordForBindUser(LDAP_CONFIG_PREFIX);\n      bindUsersConfigured.add(new BindUserInfo(bindUsername, bindPassword));\n    }\n\n    this.bindUsers \u003d Iterators.cycle(bindUsersConfigured);\n    this.currentBindUser \u003d this.bindUsers.next();\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/LdapGroupsMapping.java"
    }
  }
}