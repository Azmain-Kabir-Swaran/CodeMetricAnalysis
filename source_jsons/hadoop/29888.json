{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "EntityGroupFSTimelineStore.java",
  "functionName": "serviceStop",
  "functionId": "serviceStop",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timeline-pluginstorage/src/main/java/org/apache/hadoop/yarn/server/timeline/EntityGroupFSTimelineStore.java",
  "functionStartLine": 327,
  "functionEndLine": 350,
  "numCommitsSeen": 17,
  "timeTaken": 1490,
  "changeHistory": [
    "e0cb426758b3d716ff143f723fc16ef2f1e4971b",
    "d49cfb350454c2dfa2f3eb70f79b6d5030ce7bec",
    "02f597c5db36ded385413958bdee793ad7eda40e"
  ],
  "changeHistoryShort": {
    "e0cb426758b3d716ff143f723fc16ef2f1e4971b": "Ybodychange",
    "d49cfb350454c2dfa2f3eb70f79b6d5030ce7bec": "Ybodychange",
    "02f597c5db36ded385413958bdee793ad7eda40e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e0cb426758b3d716ff143f723fc16ef2f1e4971b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4886. Add HDFS caller context for EntityGroupFSTimelineStore. Contributed by Li Lu\n",
      "commitDate": "13/04/16 10:38 AM",
      "commitName": "e0cb426758b3d716ff143f723fc16ef2f1e4971b",
      "commitAuthor": "Xuan",
      "commitDateOld": "10/03/16 10:51 AM",
      "commitNameOld": "d49cfb350454c2dfa2f3eb70f79b6d5030ce7bec",
      "commitAuthorOld": "Li Lu",
      "daysBetweenCommits": 33.95,
      "commitsBetweenForRepo": 194,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,24 @@\n   protected void serviceStop() throws Exception {\n     LOG.info(\"Stopping {}\", getName());\n     stopExecutors.set(true);\n     if (executor !\u003d null) {\n       executor.shutdown();\n       if (executor.isTerminating()) {\n         LOG.info(\"Waiting for executor to terminate\");\n         boolean terminated \u003d executor.awaitTermination(10, TimeUnit.SECONDS);\n         if (terminated) {\n           LOG.info(\"Executor terminated\");\n         } else {\n           LOG.warn(\"Executor did not terminate\");\n           executor.shutdownNow();\n         }\n       }\n     }\n     synchronized (cachedLogs) {\n       for (EntityCacheItem cacheItem : cachedLogs.values()) {\n         ServiceOperations.stopQuietly(cacheItem.getStore());\n       }\n     }\n+    CallerContext.setCurrent(null);\n     super.serviceStop();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceStop() throws Exception {\n    LOG.info(\"Stopping {}\", getName());\n    stopExecutors.set(true);\n    if (executor !\u003d null) {\n      executor.shutdown();\n      if (executor.isTerminating()) {\n        LOG.info(\"Waiting for executor to terminate\");\n        boolean terminated \u003d executor.awaitTermination(10, TimeUnit.SECONDS);\n        if (terminated) {\n          LOG.info(\"Executor terminated\");\n        } else {\n          LOG.warn(\"Executor did not terminate\");\n          executor.shutdownNow();\n        }\n      }\n    }\n    synchronized (cachedLogs) {\n      for (EntityCacheItem cacheItem : cachedLogs.values()) {\n        ServiceOperations.stopQuietly(cacheItem.getStore());\n      }\n    }\n    CallerContext.setCurrent(null);\n    super.serviceStop();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timeline-pluginstorage/src/main/java/org/apache/hadoop/yarn/server/timeline/EntityGroupFSTimelineStore.java",
      "extendedDetails": {}
    },
    "d49cfb350454c2dfa2f3eb70f79b6d5030ce7bec": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4696. Improving EntityGroupFSTimelineStore on exception handling, test setup, and concurrency. (Steve Loughran via gtcarrera9)\n",
      "commitDate": "10/03/16 10:51 AM",
      "commitName": "d49cfb350454c2dfa2f3eb70f79b6d5030ce7bec",
      "commitAuthor": "Li Lu",
      "commitDateOld": "17/01/16 5:37 PM",
      "commitNameOld": "02f597c5db36ded385413958bdee793ad7eda40e",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 52.72,
      "commitsBetweenForRepo": 371,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,23 @@\n   protected void serviceStop() throws Exception {\n     LOG.info(\"Stopping {}\", getName());\n+    stopExecutors.set(true);\n     if (executor !\u003d null) {\n       executor.shutdown();\n       if (executor.isTerminating()) {\n         LOG.info(\"Waiting for executor to terminate\");\n         boolean terminated \u003d executor.awaitTermination(10, TimeUnit.SECONDS);\n         if (terminated) {\n           LOG.info(\"Executor terminated\");\n         } else {\n           LOG.warn(\"Executor did not terminate\");\n           executor.shutdownNow();\n         }\n       }\n     }\n-    if (summaryTdm !\u003d null) {\n-      summaryTdm.stop();\n-    }\n-    if (summaryStore !\u003d null) {\n-      summaryStore.stop();\n-    }\n-    if (yarnClient !\u003d null) {\n-      yarnClient.stop();\n-    }\n     synchronized (cachedLogs) {\n       for (EntityCacheItem cacheItem : cachedLogs.values()) {\n-        cacheItem.getStore().close();\n+        ServiceOperations.stopQuietly(cacheItem.getStore());\n       }\n     }\n     super.serviceStop();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceStop() throws Exception {\n    LOG.info(\"Stopping {}\", getName());\n    stopExecutors.set(true);\n    if (executor !\u003d null) {\n      executor.shutdown();\n      if (executor.isTerminating()) {\n        LOG.info(\"Waiting for executor to terminate\");\n        boolean terminated \u003d executor.awaitTermination(10, TimeUnit.SECONDS);\n        if (terminated) {\n          LOG.info(\"Executor terminated\");\n        } else {\n          LOG.warn(\"Executor did not terminate\");\n          executor.shutdownNow();\n        }\n      }\n    }\n    synchronized (cachedLogs) {\n      for (EntityCacheItem cacheItem : cachedLogs.values()) {\n        ServiceOperations.stopQuietly(cacheItem.getStore());\n      }\n    }\n    super.serviceStop();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timeline-pluginstorage/src/main/java/org/apache/hadoop/yarn/server/timeline/EntityGroupFSTimelineStore.java",
      "extendedDetails": {}
    },
    "02f597c5db36ded385413958bdee793ad7eda40e": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4265. Provide new timeline plugin storage to support fine-grained entity caching. Contributed by Li Lu and Jason Lowe\n",
      "commitDate": "17/01/16 5:37 PM",
      "commitName": "02f597c5db36ded385413958bdee793ad7eda40e",
      "commitAuthor": "Junping Du",
      "diff": "@@ -0,0 +1,31 @@\n+  protected void serviceStop() throws Exception {\n+    LOG.info(\"Stopping {}\", getName());\n+    if (executor !\u003d null) {\n+      executor.shutdown();\n+      if (executor.isTerminating()) {\n+        LOG.info(\"Waiting for executor to terminate\");\n+        boolean terminated \u003d executor.awaitTermination(10, TimeUnit.SECONDS);\n+        if (terminated) {\n+          LOG.info(\"Executor terminated\");\n+        } else {\n+          LOG.warn(\"Executor did not terminate\");\n+          executor.shutdownNow();\n+        }\n+      }\n+    }\n+    if (summaryTdm !\u003d null) {\n+      summaryTdm.stop();\n+    }\n+    if (summaryStore !\u003d null) {\n+      summaryStore.stop();\n+    }\n+    if (yarnClient !\u003d null) {\n+      yarnClient.stop();\n+    }\n+    synchronized (cachedLogs) {\n+      for (EntityCacheItem cacheItem : cachedLogs.values()) {\n+        cacheItem.getStore().close();\n+      }\n+    }\n+    super.serviceStop();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceStop() throws Exception {\n    LOG.info(\"Stopping {}\", getName());\n    if (executor !\u003d null) {\n      executor.shutdown();\n      if (executor.isTerminating()) {\n        LOG.info(\"Waiting for executor to terminate\");\n        boolean terminated \u003d executor.awaitTermination(10, TimeUnit.SECONDS);\n        if (terminated) {\n          LOG.info(\"Executor terminated\");\n        } else {\n          LOG.warn(\"Executor did not terminate\");\n          executor.shutdownNow();\n        }\n      }\n    }\n    if (summaryTdm !\u003d null) {\n      summaryTdm.stop();\n    }\n    if (summaryStore !\u003d null) {\n      summaryStore.stop();\n    }\n    if (yarnClient !\u003d null) {\n      yarnClient.stop();\n    }\n    synchronized (cachedLogs) {\n      for (EntityCacheItem cacheItem : cachedLogs.values()) {\n        cacheItem.getStore().close();\n      }\n    }\n    super.serviceStop();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timeline-pluginstorage/src/main/java/org/apache/hadoop/yarn/server/timeline/EntityGroupFSTimelineStore.java"
    }
  }
}