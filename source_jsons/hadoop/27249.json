{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TimelineParserForCompareExpr.java",
  "functionName": "parseOp",
  "functionId": "parseOp___closingBracket-boolean",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/reader/TimelineParserForCompareExpr.java",
  "functionStartLine": 215,
  "functionEndLine": 240,
  "numCommitsSeen": 2,
  "timeTaken": 623,
  "changeHistory": [
    "089caf49fe968cf4cd3fd4f9637da89ee143991a"
  ],
  "changeHistoryShort": {
    "089caf49fe968cf4cd3fd4f9637da89ee143991a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "089caf49fe968cf4cd3fd4f9637da89ee143991a": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4447. Provide a mechanism to represent complex filters and parse them at the REST layer (Varun Saxena via sjlee)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "089caf49fe968cf4cd3fd4f9637da89ee143991a",
      "commitAuthor": "Sangjin Lee",
      "diff": "@@ -0,0 +1,26 @@\n+  private void parseOp(boolean closingBracket) throws TimelineParseException {\n+    Operator operator \u003d null;\n+    if (exprInLowerCase.startsWith(\"or \", offset)) {\n+      operator \u003d Operator.OR;\n+      offset \u003d offset + 3;\n+    } else if (exprInLowerCase.startsWith(\"and \", offset)) {\n+      operator \u003d Operator.AND;\n+      offset \u003d offset + 4;\n+    }\n+    if (operator \u003d\u003d null) {\n+      throw new TimelineParseException(\"Operator cannot be parsed for \" +\n+          exprName + \".\");\n+    }\n+    if (filterList \u003d\u003d null) {\n+      filterList \u003d new TimelineFilterList(operator);\n+    }\n+    if (currentFilter !\u003d null) {\n+      filterList.addFilter(currentFilter);\n+    }\n+    if (closingBracket || filterList.getOperator() !\u003d operator) {\n+      filterList \u003d new TimelineFilterList(operator, filterList);\n+    }\n+    currentFilter \u003d null;\n+    kvStartOffset \u003d offset;\n+    currentParseState \u003d ParseState.PARSING_KEY;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void parseOp(boolean closingBracket) throws TimelineParseException {\n    Operator operator \u003d null;\n    if (exprInLowerCase.startsWith(\"or \", offset)) {\n      operator \u003d Operator.OR;\n      offset \u003d offset + 3;\n    } else if (exprInLowerCase.startsWith(\"and \", offset)) {\n      operator \u003d Operator.AND;\n      offset \u003d offset + 4;\n    }\n    if (operator \u003d\u003d null) {\n      throw new TimelineParseException(\"Operator cannot be parsed for \" +\n          exprName + \".\");\n    }\n    if (filterList \u003d\u003d null) {\n      filterList \u003d new TimelineFilterList(operator);\n    }\n    if (currentFilter !\u003d null) {\n      filterList.addFilter(currentFilter);\n    }\n    if (closingBracket || filterList.getOperator() !\u003d operator) {\n      filterList \u003d new TimelineFilterList(operator, filterList);\n    }\n    currentFilter \u003d null;\n    kvStartOffset \u003d offset;\n    currentParseState \u003d ParseState.PARSING_KEY;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/reader/TimelineParserForCompareExpr.java"
    }
  }
}