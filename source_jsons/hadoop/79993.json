{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HardLink.java",
  "functionName": "createHardLink",
  "functionId": "createHardLink___file-File__linkName-File",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/HardLink.java",
  "functionStartLine": 160,
  "functionEndLine": 171,
  "numCommitsSeen": 24,
  "timeTaken": 1557,
  "changeHistory": [
    "db51548f706ccd2d0200745ab89e27610c6d10bc",
    "b34b7db2155d3ff070b8443c4396f7230f7e57c6",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "527bac7e2265548d8611723109f7f91b629079ed",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36"
  ],
  "changeHistoryShort": {
    "db51548f706ccd2d0200745ab89e27610c6d10bc": "Ybodychange",
    "b34b7db2155d3ff070b8443c4396f7230f7e57c6": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "527bac7e2265548d8611723109f7f91b629079ed": "Ymultichange(Ymovefromfile,Ybodychange,Yparameterchange)",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": "Yintroduced"
  },
  "changeHistoryDetails": {
    "db51548f706ccd2d0200745ab89e27610c6d10bc": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11483. HardLink.java should use the jdk7 createLink method\n",
      "commitDate": "15/01/15 3:54 AM",
      "commitName": "db51548f706ccd2d0200745ab89e27610c6d10bc",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "24/04/14 8:08 PM",
      "commitNameOld": "b34b7db2155d3ff070b8443c4396f7230f7e57c6",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 265.37,
      "commitsBetweenForRepo": 2080,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,12 @@\n   public static void createHardLink(File file, File linkName) \n-  throws IOException {\n+      throws IOException {\n     if (file \u003d\u003d null) {\n       throw new IOException(\n           \"invalid arguments to createHardLink: source file is null\");\n     }\n     if (linkName \u003d\u003d null) {\n       throw new IOException(\n           \"invalid arguments to createHardLink: link name is null\");\n     }\n-\t  // construct and execute shell command\n-    String[] hardLinkCommand \u003d getHardLinkCommand.linkOne(file, linkName);\n-    ShellCommandExecutor shexec \u003d new ShellCommandExecutor(hardLinkCommand);\n-    try {\n-      shexec.execute();\n-    } catch (ExitCodeException e) {\n-      throw new IOException(\"Failed to execute command \" +\n-          Arrays.toString(hardLinkCommand) +\n-          \"; command output: \\\"\" + shexec.getOutput() + \"\\\"\" +\n-          \"; WrappedException: \\\"\" + e.getMessage() + \"\\\"\");\n-    }\n+    createLink(linkName.toPath(), file.toPath());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void createHardLink(File file, File linkName) \n      throws IOException {\n    if (file \u003d\u003d null) {\n      throw new IOException(\n          \"invalid arguments to createHardLink: source file is null\");\n    }\n    if (linkName \u003d\u003d null) {\n      throw new IOException(\n          \"invalid arguments to createHardLink: link name is null\");\n    }\n    createLink(linkName.toPath(), file.toPath());\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/HardLink.java",
      "extendedDetails": {}
    },
    "b34b7db2155d3ff070b8443c4396f7230f7e57c6": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10540. Datanode upgrade in Windows fails with hardlink error. (Contributed by Chris Nauroth and Arpit Agarwal)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1589923 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/04/14 8:08 PM",
      "commitName": "b34b7db2155d3ff070b8443c4396f7230f7e57c6",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "14/08/13 4:12 PM",
      "commitNameOld": "fdba5fac263f9bf79fccf566c36bbc42ef67e875",
      "commitAuthorOld": "Colin McCabe",
      "daysBetweenCommits": 253.16,
      "commitsBetweenForRepo": 1758,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,22 @@\n   public static void createHardLink(File file, File linkName) \n   throws IOException {\n     if (file \u003d\u003d null) {\n       throw new IOException(\n           \"invalid arguments to createHardLink: source file is null\");\n     }\n     if (linkName \u003d\u003d null) {\n       throw new IOException(\n           \"invalid arguments to createHardLink: link name is null\");\n     }\n \t  // construct and execute shell command\n     String[] hardLinkCommand \u003d getHardLinkCommand.linkOne(file, linkName);\n-    Process process \u003d Runtime.getRuntime().exec(hardLinkCommand);\n+    ShellCommandExecutor shexec \u003d new ShellCommandExecutor(hardLinkCommand);\n     try {\n-      if (process.waitFor() !\u003d 0) {\n-        String errMsg \u003d new BufferedReader(new InputStreamReader(\n-            process.getInputStream())).readLine();\n-        if (errMsg \u003d\u003d null)  errMsg \u003d \"\";\n-        String inpMsg \u003d new BufferedReader(new InputStreamReader(\n-            process.getErrorStream())).readLine();\n-        if (inpMsg \u003d\u003d null)  inpMsg \u003d \"\";\n-        throw new IOException(errMsg + inpMsg);\n-      }\n-    } catch (InterruptedException e) {\n-      throw new IOException(e);\n-    } finally {\n-      process.destroy();\n+      shexec.execute();\n+    } catch (ExitCodeException e) {\n+      throw new IOException(\"Failed to execute command \" +\n+          Arrays.toString(hardLinkCommand) +\n+          \"; command output: \\\"\" + shexec.getOutput() + \"\\\"\" +\n+          \"; WrappedException: \\\"\" + e.getMessage() + \"\\\"\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void createHardLink(File file, File linkName) \n  throws IOException {\n    if (file \u003d\u003d null) {\n      throw new IOException(\n          \"invalid arguments to createHardLink: source file is null\");\n    }\n    if (linkName \u003d\u003d null) {\n      throw new IOException(\n          \"invalid arguments to createHardLink: link name is null\");\n    }\n\t  // construct and execute shell command\n    String[] hardLinkCommand \u003d getHardLinkCommand.linkOne(file, linkName);\n    ShellCommandExecutor shexec \u003d new ShellCommandExecutor(hardLinkCommand);\n    try {\n      shexec.execute();\n    } catch (ExitCodeException e) {\n      throw new IOException(\"Failed to execute command \" +\n          Arrays.toString(hardLinkCommand) +\n          \"; command output: \\\"\" + shexec.getOutput() + \"\\\"\" +\n          \"; WrappedException: \\\"\" + e.getMessage() + \"\\\"\");\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/HardLink.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static void createHardLink(File file, File linkName) \n  throws IOException {\n    if (file \u003d\u003d null) {\n      throw new IOException(\n          \"invalid arguments to createHardLink: source file is null\");\n    }\n    if (linkName \u003d\u003d null) {\n      throw new IOException(\n          \"invalid arguments to createHardLink: link name is null\");\n    }\n\t  // construct and execute shell command\n    String[] hardLinkCommand \u003d getHardLinkCommand.linkOne(file, linkName);\n    Process process \u003d Runtime.getRuntime().exec(hardLinkCommand);\n    try {\n      if (process.waitFor() !\u003d 0) {\n        String errMsg \u003d new BufferedReader(new InputStreamReader(\n            process.getInputStream())).readLine();\n        if (errMsg \u003d\u003d null)  errMsg \u003d \"\";\n        String inpMsg \u003d new BufferedReader(new InputStreamReader(\n            process.getErrorStream())).readLine();\n        if (inpMsg \u003d\u003d null)  inpMsg \u003d \"\";\n        throw new IOException(errMsg + inpMsg);\n      }\n    } catch (InterruptedException e) {\n      throw new IOException(e);\n    } finally {\n      process.destroy();\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/HardLink.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/HardLink.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/HardLink.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static void createHardLink(File file, File linkName) \n  throws IOException {\n    if (file \u003d\u003d null) {\n      throw new IOException(\n          \"invalid arguments to createHardLink: source file is null\");\n    }\n    if (linkName \u003d\u003d null) {\n      throw new IOException(\n          \"invalid arguments to createHardLink: link name is null\");\n    }\n\t  // construct and execute shell command\n    String[] hardLinkCommand \u003d getHardLinkCommand.linkOne(file, linkName);\n    Process process \u003d Runtime.getRuntime().exec(hardLinkCommand);\n    try {\n      if (process.waitFor() !\u003d 0) {\n        String errMsg \u003d new BufferedReader(new InputStreamReader(\n            process.getInputStream())).readLine();\n        if (errMsg \u003d\u003d null)  errMsg \u003d \"\";\n        String inpMsg \u003d new BufferedReader(new InputStreamReader(\n            process.getErrorStream())).readLine();\n        if (inpMsg \u003d\u003d null)  inpMsg \u003d \"\";\n        throw new IOException(errMsg + inpMsg);\n      }\n    } catch (InterruptedException e) {\n      throw new IOException(e);\n    } finally {\n      process.destroy();\n    }\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/fs/HardLink.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/fs/HardLink.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/HardLink.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static void createHardLink(File file, File linkName) \n  throws IOException {\n    if (file \u003d\u003d null) {\n      throw new IOException(\n          \"invalid arguments to createHardLink: source file is null\");\n    }\n    if (linkName \u003d\u003d null) {\n      throw new IOException(\n          \"invalid arguments to createHardLink: link name is null\");\n    }\n\t  // construct and execute shell command\n    String[] hardLinkCommand \u003d getHardLinkCommand.linkOne(file, linkName);\n    Process process \u003d Runtime.getRuntime().exec(hardLinkCommand);\n    try {\n      if (process.waitFor() !\u003d 0) {\n        String errMsg \u003d new BufferedReader(new InputStreamReader(\n            process.getInputStream())).readLine();\n        if (errMsg \u003d\u003d null)  errMsg \u003d \"\";\n        String inpMsg \u003d new BufferedReader(new InputStreamReader(\n            process.getErrorStream())).readLine();\n        if (inpMsg \u003d\u003d null)  inpMsg \u003d \"\";\n        throw new IOException(errMsg + inpMsg);\n      }\n    } catch (InterruptedException e) {\n      throw new IOException(e);\n    } finally {\n      process.destroy();\n    }\n  }",
      "path": "common/src/java/org/apache/hadoop/fs/HardLink.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/fs/HardLink.java",
        "newPath": "common/src/java/org/apache/hadoop/fs/HardLink.java"
      }
    },
    "527bac7e2265548d8611723109f7f91b629079ed": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange,Yparameterchange)",
      "commitMessage": "HADOOP-7133. Batch the calls in DataStorage to FileUtil.createHardLink().  Contributed by Matt Foley.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1080396 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/03/11 3:33 PM",
      "commitName": "527bac7e2265548d8611723109f7f91b629079ed",
      "commitAuthor": "Jakob Homan",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HADOOP-7133. Batch the calls in DataStorage to FileUtil.createHardLink().  Contributed by Matt Foley.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1080396 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "10/03/11 3:33 PM",
          "commitName": "527bac7e2265548d8611723109f7f91b629079ed",
          "commitAuthor": "Jakob Homan",
          "commitDateOld": "08/03/11 3:51 PM",
          "commitNameOld": "ad459690e0032bf0387b2e40ff7f21e932048590",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 1.99,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,29 @@\n-    public static void createHardLink(File target, \n-                                      File linkName) throws IOException {\n-      int len \u003d hardLinkCommand.length;\n-      if (osType \u003d\u003d OSType.OS_TYPE_WINXP) {\n-       hardLinkCommand[len-1] \u003d target.getCanonicalPath();\n-       hardLinkCommand[len-2] \u003d linkName.getCanonicalPath();\n-      } else {\n-       hardLinkCommand[len-2] \u003d makeShellPath(target, true);\n-       hardLinkCommand[len-1] \u003d makeShellPath(linkName, true);\n+  public static void createHardLink(File file, File linkName) \n+  throws IOException {\n+    if (file \u003d\u003d null) {\n+      throw new IOException(\n+          \"invalid arguments to createHardLink: source file is null\");\n+    }\n+    if (linkName \u003d\u003d null) {\n+      throw new IOException(\n+          \"invalid arguments to createHardLink: link name is null\");\n+    }\n+\t  // construct and execute shell command\n+    String[] hardLinkCommand \u003d getHardLinkCommand.linkOne(file, linkName);\n+    Process process \u003d Runtime.getRuntime().exec(hardLinkCommand);\n+    try {\n+      if (process.waitFor() !\u003d 0) {\n+        String errMsg \u003d new BufferedReader(new InputStreamReader(\n+            process.getInputStream())).readLine();\n+        if (errMsg \u003d\u003d null)  errMsg \u003d \"\";\n+        String inpMsg \u003d new BufferedReader(new InputStreamReader(\n+            process.getErrorStream())).readLine();\n+        if (inpMsg \u003d\u003d null)  inpMsg \u003d \"\";\n+        throw new IOException(errMsg + inpMsg);\n       }\n-      // execute shell command\n-      Process process \u003d Runtime.getRuntime().exec(hardLinkCommand);\n-      try {\n-        if (process.waitFor() !\u003d 0) {\n-          String errMsg \u003d new BufferedReader(new InputStreamReader(\n-                                                                   process.getInputStream())).readLine();\n-          if (errMsg \u003d\u003d null)  errMsg \u003d \"\";\n-          String inpMsg \u003d new BufferedReader(new InputStreamReader(\n-                                                                   process.getErrorStream())).readLine();\n-          if (inpMsg \u003d\u003d null)  inpMsg \u003d \"\";\n-          throw new IOException(errMsg + inpMsg);\n-        }\n-      } catch (InterruptedException e) {\n-        throw new IOException(StringUtils.stringifyException(e));\n-      } finally {\n-        process.destroy();\n-      }\n-    }\n\\ No newline at end of file\n+    } catch (InterruptedException e) {\n+      throw new IOException(e);\n+    } finally {\n+      process.destroy();\n+    }\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  public static void createHardLink(File file, File linkName) \n  throws IOException {\n    if (file \u003d\u003d null) {\n      throw new IOException(\n          \"invalid arguments to createHardLink: source file is null\");\n    }\n    if (linkName \u003d\u003d null) {\n      throw new IOException(\n          \"invalid arguments to createHardLink: link name is null\");\n    }\n\t  // construct and execute shell command\n    String[] hardLinkCommand \u003d getHardLinkCommand.linkOne(file, linkName);\n    Process process \u003d Runtime.getRuntime().exec(hardLinkCommand);\n    try {\n      if (process.waitFor() !\u003d 0) {\n        String errMsg \u003d new BufferedReader(new InputStreamReader(\n            process.getInputStream())).readLine();\n        if (errMsg \u003d\u003d null)  errMsg \u003d \"\";\n        String inpMsg \u003d new BufferedReader(new InputStreamReader(\n            process.getErrorStream())).readLine();\n        if (inpMsg \u003d\u003d null)  inpMsg \u003d \"\";\n        throw new IOException(errMsg + inpMsg);\n      }\n    } catch (InterruptedException e) {\n      throw new IOException(e);\n    } finally {\n      process.destroy();\n    }\n  }",
          "path": "src/java/org/apache/hadoop/fs/HardLink.java",
          "extendedDetails": {
            "oldPath": "src/java/org/apache/hadoop/fs/FileUtil.java",
            "newPath": "src/java/org/apache/hadoop/fs/HardLink.java",
            "oldMethodName": "createHardLink",
            "newMethodName": "createHardLink"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-7133. Batch the calls in DataStorage to FileUtil.createHardLink().  Contributed by Matt Foley.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1080396 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "10/03/11 3:33 PM",
          "commitName": "527bac7e2265548d8611723109f7f91b629079ed",
          "commitAuthor": "Jakob Homan",
          "commitDateOld": "08/03/11 3:51 PM",
          "commitNameOld": "ad459690e0032bf0387b2e40ff7f21e932048590",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 1.99,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,29 @@\n-    public static void createHardLink(File target, \n-                                      File linkName) throws IOException {\n-      int len \u003d hardLinkCommand.length;\n-      if (osType \u003d\u003d OSType.OS_TYPE_WINXP) {\n-       hardLinkCommand[len-1] \u003d target.getCanonicalPath();\n-       hardLinkCommand[len-2] \u003d linkName.getCanonicalPath();\n-      } else {\n-       hardLinkCommand[len-2] \u003d makeShellPath(target, true);\n-       hardLinkCommand[len-1] \u003d makeShellPath(linkName, true);\n+  public static void createHardLink(File file, File linkName) \n+  throws IOException {\n+    if (file \u003d\u003d null) {\n+      throw new IOException(\n+          \"invalid arguments to createHardLink: source file is null\");\n+    }\n+    if (linkName \u003d\u003d null) {\n+      throw new IOException(\n+          \"invalid arguments to createHardLink: link name is null\");\n+    }\n+\t  // construct and execute shell command\n+    String[] hardLinkCommand \u003d getHardLinkCommand.linkOne(file, linkName);\n+    Process process \u003d Runtime.getRuntime().exec(hardLinkCommand);\n+    try {\n+      if (process.waitFor() !\u003d 0) {\n+        String errMsg \u003d new BufferedReader(new InputStreamReader(\n+            process.getInputStream())).readLine();\n+        if (errMsg \u003d\u003d null)  errMsg \u003d \"\";\n+        String inpMsg \u003d new BufferedReader(new InputStreamReader(\n+            process.getErrorStream())).readLine();\n+        if (inpMsg \u003d\u003d null)  inpMsg \u003d \"\";\n+        throw new IOException(errMsg + inpMsg);\n       }\n-      // execute shell command\n-      Process process \u003d Runtime.getRuntime().exec(hardLinkCommand);\n-      try {\n-        if (process.waitFor() !\u003d 0) {\n-          String errMsg \u003d new BufferedReader(new InputStreamReader(\n-                                                                   process.getInputStream())).readLine();\n-          if (errMsg \u003d\u003d null)  errMsg \u003d \"\";\n-          String inpMsg \u003d new BufferedReader(new InputStreamReader(\n-                                                                   process.getErrorStream())).readLine();\n-          if (inpMsg \u003d\u003d null)  inpMsg \u003d \"\";\n-          throw new IOException(errMsg + inpMsg);\n-        }\n-      } catch (InterruptedException e) {\n-        throw new IOException(StringUtils.stringifyException(e));\n-      } finally {\n-        process.destroy();\n-      }\n-    }\n\\ No newline at end of file\n+    } catch (InterruptedException e) {\n+      throw new IOException(e);\n+    } finally {\n+      process.destroy();\n+    }\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  public static void createHardLink(File file, File linkName) \n  throws IOException {\n    if (file \u003d\u003d null) {\n      throw new IOException(\n          \"invalid arguments to createHardLink: source file is null\");\n    }\n    if (linkName \u003d\u003d null) {\n      throw new IOException(\n          \"invalid arguments to createHardLink: link name is null\");\n    }\n\t  // construct and execute shell command\n    String[] hardLinkCommand \u003d getHardLinkCommand.linkOne(file, linkName);\n    Process process \u003d Runtime.getRuntime().exec(hardLinkCommand);\n    try {\n      if (process.waitFor() !\u003d 0) {\n        String errMsg \u003d new BufferedReader(new InputStreamReader(\n            process.getInputStream())).readLine();\n        if (errMsg \u003d\u003d null)  errMsg \u003d \"\";\n        String inpMsg \u003d new BufferedReader(new InputStreamReader(\n            process.getErrorStream())).readLine();\n        if (inpMsg \u003d\u003d null)  inpMsg \u003d \"\";\n        throw new IOException(errMsg + inpMsg);\n      }\n    } catch (InterruptedException e) {\n      throw new IOException(e);\n    } finally {\n      process.destroy();\n    }\n  }",
          "path": "src/java/org/apache/hadoop/fs/HardLink.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-7133. Batch the calls in DataStorage to FileUtil.createHardLink().  Contributed by Matt Foley.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1080396 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "10/03/11 3:33 PM",
          "commitName": "527bac7e2265548d8611723109f7f91b629079ed",
          "commitAuthor": "Jakob Homan",
          "commitDateOld": "08/03/11 3:51 PM",
          "commitNameOld": "ad459690e0032bf0387b2e40ff7f21e932048590",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 1.99,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,29 @@\n-    public static void createHardLink(File target, \n-                                      File linkName) throws IOException {\n-      int len \u003d hardLinkCommand.length;\n-      if (osType \u003d\u003d OSType.OS_TYPE_WINXP) {\n-       hardLinkCommand[len-1] \u003d target.getCanonicalPath();\n-       hardLinkCommand[len-2] \u003d linkName.getCanonicalPath();\n-      } else {\n-       hardLinkCommand[len-2] \u003d makeShellPath(target, true);\n-       hardLinkCommand[len-1] \u003d makeShellPath(linkName, true);\n+  public static void createHardLink(File file, File linkName) \n+  throws IOException {\n+    if (file \u003d\u003d null) {\n+      throw new IOException(\n+          \"invalid arguments to createHardLink: source file is null\");\n+    }\n+    if (linkName \u003d\u003d null) {\n+      throw new IOException(\n+          \"invalid arguments to createHardLink: link name is null\");\n+    }\n+\t  // construct and execute shell command\n+    String[] hardLinkCommand \u003d getHardLinkCommand.linkOne(file, linkName);\n+    Process process \u003d Runtime.getRuntime().exec(hardLinkCommand);\n+    try {\n+      if (process.waitFor() !\u003d 0) {\n+        String errMsg \u003d new BufferedReader(new InputStreamReader(\n+            process.getInputStream())).readLine();\n+        if (errMsg \u003d\u003d null)  errMsg \u003d \"\";\n+        String inpMsg \u003d new BufferedReader(new InputStreamReader(\n+            process.getErrorStream())).readLine();\n+        if (inpMsg \u003d\u003d null)  inpMsg \u003d \"\";\n+        throw new IOException(errMsg + inpMsg);\n       }\n-      // execute shell command\n-      Process process \u003d Runtime.getRuntime().exec(hardLinkCommand);\n-      try {\n-        if (process.waitFor() !\u003d 0) {\n-          String errMsg \u003d new BufferedReader(new InputStreamReader(\n-                                                                   process.getInputStream())).readLine();\n-          if (errMsg \u003d\u003d null)  errMsg \u003d \"\";\n-          String inpMsg \u003d new BufferedReader(new InputStreamReader(\n-                                                                   process.getErrorStream())).readLine();\n-          if (inpMsg \u003d\u003d null)  inpMsg \u003d \"\";\n-          throw new IOException(errMsg + inpMsg);\n-        }\n-      } catch (InterruptedException e) {\n-        throw new IOException(StringUtils.stringifyException(e));\n-      } finally {\n-        process.destroy();\n-      }\n-    }\n\\ No newline at end of file\n+    } catch (InterruptedException e) {\n+      throw new IOException(e);\n+    } finally {\n+      process.destroy();\n+    }\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  public static void createHardLink(File file, File linkName) \n  throws IOException {\n    if (file \u003d\u003d null) {\n      throw new IOException(\n          \"invalid arguments to createHardLink: source file is null\");\n    }\n    if (linkName \u003d\u003d null) {\n      throw new IOException(\n          \"invalid arguments to createHardLink: link name is null\");\n    }\n\t  // construct and execute shell command\n    String[] hardLinkCommand \u003d getHardLinkCommand.linkOne(file, linkName);\n    Process process \u003d Runtime.getRuntime().exec(hardLinkCommand);\n    try {\n      if (process.waitFor() !\u003d 0) {\n        String errMsg \u003d new BufferedReader(new InputStreamReader(\n            process.getInputStream())).readLine();\n        if (errMsg \u003d\u003d null)  errMsg \u003d \"\";\n        String inpMsg \u003d new BufferedReader(new InputStreamReader(\n            process.getErrorStream())).readLine();\n        if (inpMsg \u003d\u003d null)  inpMsg \u003d \"\";\n        throw new IOException(errMsg + inpMsg);\n      }\n    } catch (InterruptedException e) {\n      throw new IOException(e);\n    } finally {\n      process.destroy();\n    }\n  }",
          "path": "src/java/org/apache/hadoop/fs/HardLink.java",
          "extendedDetails": {
            "oldValue": "[target-File, linkName-File]",
            "newValue": "[file-File, linkName-File]"
          }
        }
      ]
    },
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-4687 Moving src directories on branch\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/core/branches/HADOOP-4687/core@776174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/05/09 9:20 PM",
      "commitName": "5128a9a453d64bfe1ed978cf9ffed27985eeef36",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,28 @@\n+    public static void createHardLink(File target, \n+                                      File linkName) throws IOException {\n+      int len \u003d hardLinkCommand.length;\n+      if (osType \u003d\u003d OSType.OS_TYPE_WINXP) {\n+       hardLinkCommand[len-1] \u003d target.getCanonicalPath();\n+       hardLinkCommand[len-2] \u003d linkName.getCanonicalPath();\n+      } else {\n+       hardLinkCommand[len-2] \u003d makeShellPath(target, true);\n+       hardLinkCommand[len-1] \u003d makeShellPath(linkName, true);\n+      }\n+      // execute shell command\n+      Process process \u003d Runtime.getRuntime().exec(hardLinkCommand);\n+      try {\n+        if (process.waitFor() !\u003d 0) {\n+          String errMsg \u003d new BufferedReader(new InputStreamReader(\n+                                                                   process.getInputStream())).readLine();\n+          if (errMsg \u003d\u003d null)  errMsg \u003d \"\";\n+          String inpMsg \u003d new BufferedReader(new InputStreamReader(\n+                                                                   process.getErrorStream())).readLine();\n+          if (inpMsg \u003d\u003d null)  inpMsg \u003d \"\";\n+          throw new IOException(errMsg + inpMsg);\n+        }\n+      } catch (InterruptedException e) {\n+        throw new IOException(StringUtils.stringifyException(e));\n+      } finally {\n+        process.destroy();\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public static void createHardLink(File target, \n                                      File linkName) throws IOException {\n      int len \u003d hardLinkCommand.length;\n      if (osType \u003d\u003d OSType.OS_TYPE_WINXP) {\n       hardLinkCommand[len-1] \u003d target.getCanonicalPath();\n       hardLinkCommand[len-2] \u003d linkName.getCanonicalPath();\n      } else {\n       hardLinkCommand[len-2] \u003d makeShellPath(target, true);\n       hardLinkCommand[len-1] \u003d makeShellPath(linkName, true);\n      }\n      // execute shell command\n      Process process \u003d Runtime.getRuntime().exec(hardLinkCommand);\n      try {\n        if (process.waitFor() !\u003d 0) {\n          String errMsg \u003d new BufferedReader(new InputStreamReader(\n                                                                   process.getInputStream())).readLine();\n          if (errMsg \u003d\u003d null)  errMsg \u003d \"\";\n          String inpMsg \u003d new BufferedReader(new InputStreamReader(\n                                                                   process.getErrorStream())).readLine();\n          if (inpMsg \u003d\u003d null)  inpMsg \u003d \"\";\n          throw new IOException(errMsg + inpMsg);\n        }\n      } catch (InterruptedException e) {\n        throw new IOException(StringUtils.stringifyException(e));\n      } finally {\n        process.destroy();\n      }\n    }",
      "path": "src/java/org/apache/hadoop/fs/FileUtil.java"
    }
  }
}