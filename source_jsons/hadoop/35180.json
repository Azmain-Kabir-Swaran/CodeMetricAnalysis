{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NMLeveldbStateStoreService.java",
  "functionName": "removeContainer",
  "functionId": "removeContainer___containerId-ContainerId",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/recovery/NMLeveldbStateStoreService.java",
  "functionStartLine": 687,
  "functionEndLine": 722,
  "numCommitsSeen": 43,
  "timeTaken": 4748,
  "changeHistory": [
    "2064ca015d1584263aac0cc20c60b925a3aff612",
    "3d586841aba99c7df98b2b4d3e48ec0144bad086",
    "7f515f57ede74dae787994f37bfafd5d20c9aa4c",
    "a50be1b8f432f50c940b66d12c7de87b95ea47c0",
    "66ca0a65408521d5f9b080dd16b353b49fb8eaea",
    "a33ce45e35ce77dbf297df618aec3106eafda68c",
    "d464f4d1c4dec483852fc8c0496787cba0af8f57",
    "1cd55e0c171f7c4dec6f843931285557d59cd5ea",
    "c2febdcbaa12078db42403fe8fd74180fb58a84b"
  ],
  "changeHistoryShort": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": "Ybodychange",
    "3d586841aba99c7df98b2b4d3e48ec0144bad086": "Ybodychange",
    "7f515f57ede74dae787994f37bfafd5d20c9aa4c": "Ybodychange",
    "a50be1b8f432f50c940b66d12c7de87b95ea47c0": "Ybodychange",
    "66ca0a65408521d5f9b080dd16b353b49fb8eaea": "Ybodychange",
    "a33ce45e35ce77dbf297df618aec3106eafda68c": "Ybodychange",
    "d464f4d1c4dec483852fc8c0496787cba0af8f57": "Ybodychange",
    "1cd55e0c171f7c4dec6f843931285557d59cd5ea": "Ybodychange",
    "c2febdcbaa12078db42403fe8fd74180fb58a84b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9349.  Changed logging to use slf4j api.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "15/03/19 4:20 PM",
      "commitName": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "13/09/18 11:28 AM",
      "commitNameOld": "250b50018e8c94d8ca83ff981b01f26bb68c0842",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 183.2,
      "commitsBetweenForRepo": 1474,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,36 @@\n   public void removeContainer(ContainerId containerId)\n       throws IOException {\n-    if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"removeContainer: containerId\u003d\" + containerId);\n-    }\n+    LOG.debug(\"removeContainer: containerId\u003d{}\", containerId);\n \n     String keyPrefix \u003d CONTAINERS_KEY_PREFIX + containerId.toString();\n     try {\n       WriteBatch batch \u003d db.createWriteBatch();\n       try {\n         batch.delete(bytes(keyPrefix + CONTAINER_REQUEST_KEY_SUFFIX));\n         batch.delete(bytes(keyPrefix + CONTAINER_DIAGS_KEY_SUFFIX));\n         batch.delete(bytes(keyPrefix + CONTAINER_LAUNCHED_KEY_SUFFIX));\n         batch.delete(bytes(keyPrefix + CONTAINER_QUEUED_KEY_SUFFIX));\n         batch.delete(bytes(keyPrefix + CONTAINER_PAUSED_KEY_SUFFIX));\n         batch.delete(bytes(keyPrefix + CONTAINER_KILLED_KEY_SUFFIX));\n         batch.delete(bytes(keyPrefix + CONTAINER_EXIT_CODE_KEY_SUFFIX));\n         batch.delete(bytes(keyPrefix + CONTAINER_UPDATE_TOKEN_SUFFIX));\n         batch.delete(bytes(keyPrefix + CONTAINER_START_TIME_KEY_SUFFIX));\n         batch.delete(bytes(keyPrefix + CONTAINER_LOG_DIR_KEY_SUFFIX));\n         batch.delete(bytes(keyPrefix + CONTAINER_VERSION_KEY_SUFFIX));\n         batch.delete(bytes(keyPrefix + CONTAINER_REMAIN_RETRIES_KEY_SUFFIX));\n         batch.delete(bytes(keyPrefix + CONTAINER_RESTART_TIMES_SUFFIX));\n         batch.delete(bytes(keyPrefix + CONTAINER_WORK_DIR_KEY_SUFFIX));\n         List\u003cString\u003e unknownKeysForContainer \u003d containerUnknownKeySuffixes\n             .removeAll(containerId);\n         for (String unknownKeySuffix : unknownKeysForContainer) {\n           batch.delete(bytes(keyPrefix + unknownKeySuffix));\n         }\n         db.write(batch);\n       } finally {\n         batch.close();\n       }\n     } catch (DBException e) {\n       markStoreUnHealthy(e);\n       throw new IOException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void removeContainer(ContainerId containerId)\n      throws IOException {\n    LOG.debug(\"removeContainer: containerId\u003d{}\", containerId);\n\n    String keyPrefix \u003d CONTAINERS_KEY_PREFIX + containerId.toString();\n    try {\n      WriteBatch batch \u003d db.createWriteBatch();\n      try {\n        batch.delete(bytes(keyPrefix + CONTAINER_REQUEST_KEY_SUFFIX));\n        batch.delete(bytes(keyPrefix + CONTAINER_DIAGS_KEY_SUFFIX));\n        batch.delete(bytes(keyPrefix + CONTAINER_LAUNCHED_KEY_SUFFIX));\n        batch.delete(bytes(keyPrefix + CONTAINER_QUEUED_KEY_SUFFIX));\n        batch.delete(bytes(keyPrefix + CONTAINER_PAUSED_KEY_SUFFIX));\n        batch.delete(bytes(keyPrefix + CONTAINER_KILLED_KEY_SUFFIX));\n        batch.delete(bytes(keyPrefix + CONTAINER_EXIT_CODE_KEY_SUFFIX));\n        batch.delete(bytes(keyPrefix + CONTAINER_UPDATE_TOKEN_SUFFIX));\n        batch.delete(bytes(keyPrefix + CONTAINER_START_TIME_KEY_SUFFIX));\n        batch.delete(bytes(keyPrefix + CONTAINER_LOG_DIR_KEY_SUFFIX));\n        batch.delete(bytes(keyPrefix + CONTAINER_VERSION_KEY_SUFFIX));\n        batch.delete(bytes(keyPrefix + CONTAINER_REMAIN_RETRIES_KEY_SUFFIX));\n        batch.delete(bytes(keyPrefix + CONTAINER_RESTART_TIMES_SUFFIX));\n        batch.delete(bytes(keyPrefix + CONTAINER_WORK_DIR_KEY_SUFFIX));\n        List\u003cString\u003e unknownKeysForContainer \u003d containerUnknownKeySuffixes\n            .removeAll(containerId);\n        for (String unknownKeySuffix : unknownKeysForContainer) {\n          batch.delete(bytes(keyPrefix + unknownKeySuffix));\n        }\n        db.write(batch);\n      } finally {\n        batch.close();\n      }\n    } catch (DBException e) {\n      markStoreUnHealthy(e);\n      throw new IOException(e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/recovery/NMLeveldbStateStoreService.java",
      "extendedDetails": {}
    },
    "3d586841aba99c7df98b2b4d3e48ec0144bad086": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8558. NM recovery level db not cleaned up properly on container finish. Contributed by Bibin A Chundatt.\n",
      "commitDate": "28/07/18 8:22 AM",
      "commitName": "3d586841aba99c7df98b2b4d3e48ec0144bad086",
      "commitAuthor": "bibinchundatt",
      "commitDateOld": "23/07/18 11:07 AM",
      "commitNameOld": "9d3c39e9dd88b8f32223c01328581bb68507d415",
      "commitAuthorOld": "Haibo Chen",
      "daysBetweenCommits": 4.89,
      "commitsBetweenForRepo": 44,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,38 @@\n   public void removeContainer(ContainerId containerId)\n       throws IOException {\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"removeContainer: containerId\u003d\" + containerId);\n     }\n \n     String keyPrefix \u003d CONTAINERS_KEY_PREFIX + containerId.toString();\n     try {\n       WriteBatch batch \u003d db.createWriteBatch();\n       try {\n         batch.delete(bytes(keyPrefix + CONTAINER_REQUEST_KEY_SUFFIX));\n         batch.delete(bytes(keyPrefix + CONTAINER_DIAGS_KEY_SUFFIX));\n         batch.delete(bytes(keyPrefix + CONTAINER_LAUNCHED_KEY_SUFFIX));\n         batch.delete(bytes(keyPrefix + CONTAINER_QUEUED_KEY_SUFFIX));\n         batch.delete(bytes(keyPrefix + CONTAINER_PAUSED_KEY_SUFFIX));\n         batch.delete(bytes(keyPrefix + CONTAINER_KILLED_KEY_SUFFIX));\n         batch.delete(bytes(keyPrefix + CONTAINER_EXIT_CODE_KEY_SUFFIX));\n         batch.delete(bytes(keyPrefix + CONTAINER_UPDATE_TOKEN_SUFFIX));\n+        batch.delete(bytes(keyPrefix + CONTAINER_START_TIME_KEY_SUFFIX));\n+        batch.delete(bytes(keyPrefix + CONTAINER_LOG_DIR_KEY_SUFFIX));\n+        batch.delete(bytes(keyPrefix + CONTAINER_VERSION_KEY_SUFFIX));\n+        batch.delete(bytes(keyPrefix + CONTAINER_REMAIN_RETRIES_KEY_SUFFIX));\n+        batch.delete(bytes(keyPrefix + CONTAINER_RESTART_TIMES_SUFFIX));\n+        batch.delete(bytes(keyPrefix + CONTAINER_WORK_DIR_KEY_SUFFIX));\n         List\u003cString\u003e unknownKeysForContainer \u003d containerUnknownKeySuffixes\n             .removeAll(containerId);\n         for (String unknownKeySuffix : unknownKeysForContainer) {\n           batch.delete(bytes(keyPrefix + unknownKeySuffix));\n         }\n         db.write(batch);\n       } finally {\n         batch.close();\n       }\n     } catch (DBException e) {\n       markStoreUnHealthy(e);\n       throw new IOException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void removeContainer(ContainerId containerId)\n      throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"removeContainer: containerId\u003d\" + containerId);\n    }\n\n    String keyPrefix \u003d CONTAINERS_KEY_PREFIX + containerId.toString();\n    try {\n      WriteBatch batch \u003d db.createWriteBatch();\n      try {\n        batch.delete(bytes(keyPrefix + CONTAINER_REQUEST_KEY_SUFFIX));\n        batch.delete(bytes(keyPrefix + CONTAINER_DIAGS_KEY_SUFFIX));\n        batch.delete(bytes(keyPrefix + CONTAINER_LAUNCHED_KEY_SUFFIX));\n        batch.delete(bytes(keyPrefix + CONTAINER_QUEUED_KEY_SUFFIX));\n        batch.delete(bytes(keyPrefix + CONTAINER_PAUSED_KEY_SUFFIX));\n        batch.delete(bytes(keyPrefix + CONTAINER_KILLED_KEY_SUFFIX));\n        batch.delete(bytes(keyPrefix + CONTAINER_EXIT_CODE_KEY_SUFFIX));\n        batch.delete(bytes(keyPrefix + CONTAINER_UPDATE_TOKEN_SUFFIX));\n        batch.delete(bytes(keyPrefix + CONTAINER_START_TIME_KEY_SUFFIX));\n        batch.delete(bytes(keyPrefix + CONTAINER_LOG_DIR_KEY_SUFFIX));\n        batch.delete(bytes(keyPrefix + CONTAINER_VERSION_KEY_SUFFIX));\n        batch.delete(bytes(keyPrefix + CONTAINER_REMAIN_RETRIES_KEY_SUFFIX));\n        batch.delete(bytes(keyPrefix + CONTAINER_RESTART_TIMES_SUFFIX));\n        batch.delete(bytes(keyPrefix + CONTAINER_WORK_DIR_KEY_SUFFIX));\n        List\u003cString\u003e unknownKeysForContainer \u003d containerUnknownKeySuffixes\n            .removeAll(containerId);\n        for (String unknownKeySuffix : unknownKeysForContainer) {\n          batch.delete(bytes(keyPrefix + unknownKeySuffix));\n        }\n        db.write(batch);\n      } finally {\n        batch.close();\n      }\n    } catch (DBException e) {\n      markStoreUnHealthy(e);\n      throw new IOException(e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/recovery/NMLeveldbStateStoreService.java",
      "extendedDetails": {}
    },
    "7f515f57ede74dae787994f37bfafd5d20c9aa4c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7585. NodeManager should go unhealthy when state store throws DBException. Contributed by Wilfred Spiegelenburg.\n",
      "commitDate": "02/01/18 6:03 PM",
      "commitName": "7f515f57ede74dae787994f37bfafd5d20c9aa4c",
      "commitAuthor": "Miklos Szegedi",
      "commitDateOld": "28/10/17 10:38 PM",
      "commitNameOld": "9114d7a5a0159bbe70e9c289dbe1fc5db9101db5",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 65.85,
      "commitsBetweenForRepo": 464,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,32 @@\n   public void removeContainer(ContainerId containerId)\n       throws IOException {\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"removeContainer: containerId\u003d\" + containerId);\n     }\n \n     String keyPrefix \u003d CONTAINERS_KEY_PREFIX + containerId.toString();\n     try {\n       WriteBatch batch \u003d db.createWriteBatch();\n       try {\n         batch.delete(bytes(keyPrefix + CONTAINER_REQUEST_KEY_SUFFIX));\n         batch.delete(bytes(keyPrefix + CONTAINER_DIAGS_KEY_SUFFIX));\n         batch.delete(bytes(keyPrefix + CONTAINER_LAUNCHED_KEY_SUFFIX));\n         batch.delete(bytes(keyPrefix + CONTAINER_QUEUED_KEY_SUFFIX));\n         batch.delete(bytes(keyPrefix + CONTAINER_PAUSED_KEY_SUFFIX));\n         batch.delete(bytes(keyPrefix + CONTAINER_KILLED_KEY_SUFFIX));\n         batch.delete(bytes(keyPrefix + CONTAINER_EXIT_CODE_KEY_SUFFIX));\n         batch.delete(bytes(keyPrefix + CONTAINER_UPDATE_TOKEN_SUFFIX));\n         List\u003cString\u003e unknownKeysForContainer \u003d containerUnknownKeySuffixes\n             .removeAll(containerId);\n         for (String unknownKeySuffix : unknownKeysForContainer) {\n           batch.delete(bytes(keyPrefix + unknownKeySuffix));\n         }\n         db.write(batch);\n       } finally {\n         batch.close();\n       }\n     } catch (DBException e) {\n+      markStoreUnHealthy(e);\n       throw new IOException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void removeContainer(ContainerId containerId)\n      throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"removeContainer: containerId\u003d\" + containerId);\n    }\n\n    String keyPrefix \u003d CONTAINERS_KEY_PREFIX + containerId.toString();\n    try {\n      WriteBatch batch \u003d db.createWriteBatch();\n      try {\n        batch.delete(bytes(keyPrefix + CONTAINER_REQUEST_KEY_SUFFIX));\n        batch.delete(bytes(keyPrefix + CONTAINER_DIAGS_KEY_SUFFIX));\n        batch.delete(bytes(keyPrefix + CONTAINER_LAUNCHED_KEY_SUFFIX));\n        batch.delete(bytes(keyPrefix + CONTAINER_QUEUED_KEY_SUFFIX));\n        batch.delete(bytes(keyPrefix + CONTAINER_PAUSED_KEY_SUFFIX));\n        batch.delete(bytes(keyPrefix + CONTAINER_KILLED_KEY_SUFFIX));\n        batch.delete(bytes(keyPrefix + CONTAINER_EXIT_CODE_KEY_SUFFIX));\n        batch.delete(bytes(keyPrefix + CONTAINER_UPDATE_TOKEN_SUFFIX));\n        List\u003cString\u003e unknownKeysForContainer \u003d containerUnknownKeySuffixes\n            .removeAll(containerId);\n        for (String unknownKeySuffix : unknownKeysForContainer) {\n          batch.delete(bytes(keyPrefix + unknownKeySuffix));\n        }\n        db.write(batch);\n      } finally {\n        batch.close();\n      }\n    } catch (DBException e) {\n      markStoreUnHealthy(e);\n      throw new IOException(e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/recovery/NMLeveldbStateStoreService.java",
      "extendedDetails": {}
    },
    "a50be1b8f432f50c940b66d12c7de87b95ea47c0": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7275. NM Statestore cleanup for Container updates. (Kartheek Muthyala via asuresh)\n",
      "commitDate": "16/10/17 1:12 PM",
      "commitName": "a50be1b8f432f50c940b66d12c7de87b95ea47c0",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "14/09/17 8:51 AM",
      "commitNameOld": "66ca0a65408521d5f9b080dd16b353b49fb8eaea",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 32.18,
      "commitsBetweenForRepo": 252,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,31 @@\n   public void removeContainer(ContainerId containerId)\n       throws IOException {\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"removeContainer: containerId\u003d\" + containerId);\n     }\n \n     String keyPrefix \u003d CONTAINERS_KEY_PREFIX + containerId.toString();\n     try {\n       WriteBatch batch \u003d db.createWriteBatch();\n       try {\n         batch.delete(bytes(keyPrefix + CONTAINER_REQUEST_KEY_SUFFIX));\n         batch.delete(bytes(keyPrefix + CONTAINER_DIAGS_KEY_SUFFIX));\n         batch.delete(bytes(keyPrefix + CONTAINER_LAUNCHED_KEY_SUFFIX));\n         batch.delete(bytes(keyPrefix + CONTAINER_QUEUED_KEY_SUFFIX));\n         batch.delete(bytes(keyPrefix + CONTAINER_PAUSED_KEY_SUFFIX));\n         batch.delete(bytes(keyPrefix + CONTAINER_KILLED_KEY_SUFFIX));\n         batch.delete(bytes(keyPrefix + CONTAINER_EXIT_CODE_KEY_SUFFIX));\n+        batch.delete(bytes(keyPrefix + CONTAINER_UPDATE_TOKEN_SUFFIX));\n         List\u003cString\u003e unknownKeysForContainer \u003d containerUnknownKeySuffixes\n             .removeAll(containerId);\n         for (String unknownKeySuffix : unknownKeysForContainer) {\n           batch.delete(bytes(keyPrefix + unknownKeySuffix));\n         }\n         db.write(batch);\n       } finally {\n         batch.close();\n       }\n     } catch (DBException e) {\n       throw new IOException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void removeContainer(ContainerId containerId)\n      throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"removeContainer: containerId\u003d\" + containerId);\n    }\n\n    String keyPrefix \u003d CONTAINERS_KEY_PREFIX + containerId.toString();\n    try {\n      WriteBatch batch \u003d db.createWriteBatch();\n      try {\n        batch.delete(bytes(keyPrefix + CONTAINER_REQUEST_KEY_SUFFIX));\n        batch.delete(bytes(keyPrefix + CONTAINER_DIAGS_KEY_SUFFIX));\n        batch.delete(bytes(keyPrefix + CONTAINER_LAUNCHED_KEY_SUFFIX));\n        batch.delete(bytes(keyPrefix + CONTAINER_QUEUED_KEY_SUFFIX));\n        batch.delete(bytes(keyPrefix + CONTAINER_PAUSED_KEY_SUFFIX));\n        batch.delete(bytes(keyPrefix + CONTAINER_KILLED_KEY_SUFFIX));\n        batch.delete(bytes(keyPrefix + CONTAINER_EXIT_CODE_KEY_SUFFIX));\n        batch.delete(bytes(keyPrefix + CONTAINER_UPDATE_TOKEN_SUFFIX));\n        List\u003cString\u003e unknownKeysForContainer \u003d containerUnknownKeySuffixes\n            .removeAll(containerId);\n        for (String unknownKeySuffix : unknownKeysForContainer) {\n          batch.delete(bytes(keyPrefix + unknownKeySuffix));\n        }\n        db.write(batch);\n      } finally {\n        batch.close();\n      }\n    } catch (DBException e) {\n      throw new IOException(e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/recovery/NMLeveldbStateStoreService.java",
      "extendedDetails": {}
    },
    "66ca0a65408521d5f9b080dd16b353b49fb8eaea": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6059. Update paused container state in the NM state store. (Hitesh Sharma via asuresh)\n",
      "commitDate": "14/09/17 8:51 AM",
      "commitName": "66ca0a65408521d5f9b080dd16b353b49fb8eaea",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "07/09/17 2:13 PM",
      "commitNameOld": "f155ab7cfa64e822171708040cb49889338961ce",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 6.78,
      "commitsBetweenForRepo": 102,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,30 @@\n   public void removeContainer(ContainerId containerId)\n       throws IOException {\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"removeContainer: containerId\u003d\" + containerId);\n     }\n \n     String keyPrefix \u003d CONTAINERS_KEY_PREFIX + containerId.toString();\n     try {\n       WriteBatch batch \u003d db.createWriteBatch();\n       try {\n         batch.delete(bytes(keyPrefix + CONTAINER_REQUEST_KEY_SUFFIX));\n         batch.delete(bytes(keyPrefix + CONTAINER_DIAGS_KEY_SUFFIX));\n         batch.delete(bytes(keyPrefix + CONTAINER_LAUNCHED_KEY_SUFFIX));\n         batch.delete(bytes(keyPrefix + CONTAINER_QUEUED_KEY_SUFFIX));\n+        batch.delete(bytes(keyPrefix + CONTAINER_PAUSED_KEY_SUFFIX));\n         batch.delete(bytes(keyPrefix + CONTAINER_KILLED_KEY_SUFFIX));\n         batch.delete(bytes(keyPrefix + CONTAINER_EXIT_CODE_KEY_SUFFIX));\n         List\u003cString\u003e unknownKeysForContainer \u003d containerUnknownKeySuffixes\n             .removeAll(containerId);\n         for (String unknownKeySuffix : unknownKeysForContainer) {\n           batch.delete(bytes(keyPrefix + unknownKeySuffix));\n         }\n         db.write(batch);\n       } finally {\n         batch.close();\n       }\n     } catch (DBException e) {\n       throw new IOException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void removeContainer(ContainerId containerId)\n      throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"removeContainer: containerId\u003d\" + containerId);\n    }\n\n    String keyPrefix \u003d CONTAINERS_KEY_PREFIX + containerId.toString();\n    try {\n      WriteBatch batch \u003d db.createWriteBatch();\n      try {\n        batch.delete(bytes(keyPrefix + CONTAINER_REQUEST_KEY_SUFFIX));\n        batch.delete(bytes(keyPrefix + CONTAINER_DIAGS_KEY_SUFFIX));\n        batch.delete(bytes(keyPrefix + CONTAINER_LAUNCHED_KEY_SUFFIX));\n        batch.delete(bytes(keyPrefix + CONTAINER_QUEUED_KEY_SUFFIX));\n        batch.delete(bytes(keyPrefix + CONTAINER_PAUSED_KEY_SUFFIX));\n        batch.delete(bytes(keyPrefix + CONTAINER_KILLED_KEY_SUFFIX));\n        batch.delete(bytes(keyPrefix + CONTAINER_EXIT_CODE_KEY_SUFFIX));\n        List\u003cString\u003e unknownKeysForContainer \u003d containerUnknownKeySuffixes\n            .removeAll(containerId);\n        for (String unknownKeySuffix : unknownKeysForContainer) {\n          batch.delete(bytes(keyPrefix + unknownKeySuffix));\n        }\n        db.write(batch);\n      } finally {\n        batch.close();\n      }\n    } catch (DBException e) {\n      throw new IOException(e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/recovery/NMLeveldbStateStoreService.java",
      "extendedDetails": {}
    },
    "a33ce45e35ce77dbf297df618aec3106eafda68c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5547. NMLeveldbStateStore should be more tolerant of unknown keys. Contributed by Ajith S\n",
      "commitDate": "24/01/17 8:17 AM",
      "commitName": "a33ce45e35ce77dbf297df618aec3106eafda68c",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "13/09/16 7:41 AM",
      "commitNameOld": "e7933097354a246b080b46f1a4ca2ef0f39f3b38",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 133.07,
      "commitsBetweenForRepo": 880,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,29 @@\n   public void removeContainer(ContainerId containerId)\n       throws IOException {\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"removeContainer: containerId\u003d\" + containerId);\n     }\n \n     String keyPrefix \u003d CONTAINERS_KEY_PREFIX + containerId.toString();\n     try {\n       WriteBatch batch \u003d db.createWriteBatch();\n       try {\n         batch.delete(bytes(keyPrefix + CONTAINER_REQUEST_KEY_SUFFIX));\n         batch.delete(bytes(keyPrefix + CONTAINER_DIAGS_KEY_SUFFIX));\n         batch.delete(bytes(keyPrefix + CONTAINER_LAUNCHED_KEY_SUFFIX));\n         batch.delete(bytes(keyPrefix + CONTAINER_QUEUED_KEY_SUFFIX));\n         batch.delete(bytes(keyPrefix + CONTAINER_KILLED_KEY_SUFFIX));\n         batch.delete(bytes(keyPrefix + CONTAINER_EXIT_CODE_KEY_SUFFIX));\n+        List\u003cString\u003e unknownKeysForContainer \u003d containerUnknownKeySuffixes\n+            .removeAll(containerId);\n+        for (String unknownKeySuffix : unknownKeysForContainer) {\n+          batch.delete(bytes(keyPrefix + unknownKeySuffix));\n+        }\n         db.write(batch);\n       } finally {\n         batch.close();\n       }\n     } catch (DBException e) {\n       throw new IOException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void removeContainer(ContainerId containerId)\n      throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"removeContainer: containerId\u003d\" + containerId);\n    }\n\n    String keyPrefix \u003d CONTAINERS_KEY_PREFIX + containerId.toString();\n    try {\n      WriteBatch batch \u003d db.createWriteBatch();\n      try {\n        batch.delete(bytes(keyPrefix + CONTAINER_REQUEST_KEY_SUFFIX));\n        batch.delete(bytes(keyPrefix + CONTAINER_DIAGS_KEY_SUFFIX));\n        batch.delete(bytes(keyPrefix + CONTAINER_LAUNCHED_KEY_SUFFIX));\n        batch.delete(bytes(keyPrefix + CONTAINER_QUEUED_KEY_SUFFIX));\n        batch.delete(bytes(keyPrefix + CONTAINER_KILLED_KEY_SUFFIX));\n        batch.delete(bytes(keyPrefix + CONTAINER_EXIT_CODE_KEY_SUFFIX));\n        List\u003cString\u003e unknownKeysForContainer \u003d containerUnknownKeySuffixes\n            .removeAll(containerId);\n        for (String unknownKeySuffix : unknownKeysForContainer) {\n          batch.delete(bytes(keyPrefix + unknownKeySuffix));\n        }\n        db.write(batch);\n      } finally {\n        batch.close();\n      }\n    } catch (DBException e) {\n      throw new IOException(e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/recovery/NMLeveldbStateStoreService.java",
      "extendedDetails": {}
    },
    "d464f4d1c4dec483852fc8c0496787cba0af8f57": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5049. Extend NMStateStore to save queued container information. (Konstantinos Karanasos via asuresh)\n",
      "commitDate": "11/05/16 7:10 PM",
      "commitName": "d464f4d1c4dec483852fc8c0496787cba0af8f57",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "29/04/16 3:39 AM",
      "commitNameOld": "0f25a1bb52bc56661fd020a6ba82df99f8c6ef1f",
      "commitAuthorOld": "Varun Vasudev",
      "daysBetweenCommits": 12.65,
      "commitsBetweenForRepo": 73,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,24 @@\n   public void removeContainer(ContainerId containerId)\n       throws IOException {\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"removeContainer: containerId\u003d\" + containerId);\n     }\n \n     String keyPrefix \u003d CONTAINERS_KEY_PREFIX + containerId.toString();\n     try {\n       WriteBatch batch \u003d db.createWriteBatch();\n       try {\n         batch.delete(bytes(keyPrefix + CONTAINER_REQUEST_KEY_SUFFIX));\n         batch.delete(bytes(keyPrefix + CONTAINER_DIAGS_KEY_SUFFIX));\n         batch.delete(bytes(keyPrefix + CONTAINER_LAUNCHED_KEY_SUFFIX));\n+        batch.delete(bytes(keyPrefix + CONTAINER_QUEUED_KEY_SUFFIX));\n         batch.delete(bytes(keyPrefix + CONTAINER_KILLED_KEY_SUFFIX));\n         batch.delete(bytes(keyPrefix + CONTAINER_EXIT_CODE_KEY_SUFFIX));\n         db.write(batch);\n       } finally {\n         batch.close();\n       }\n     } catch (DBException e) {\n       throw new IOException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void removeContainer(ContainerId containerId)\n      throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"removeContainer: containerId\u003d\" + containerId);\n    }\n\n    String keyPrefix \u003d CONTAINERS_KEY_PREFIX + containerId.toString();\n    try {\n      WriteBatch batch \u003d db.createWriteBatch();\n      try {\n        batch.delete(bytes(keyPrefix + CONTAINER_REQUEST_KEY_SUFFIX));\n        batch.delete(bytes(keyPrefix + CONTAINER_DIAGS_KEY_SUFFIX));\n        batch.delete(bytes(keyPrefix + CONTAINER_LAUNCHED_KEY_SUFFIX));\n        batch.delete(bytes(keyPrefix + CONTAINER_QUEUED_KEY_SUFFIX));\n        batch.delete(bytes(keyPrefix + CONTAINER_KILLED_KEY_SUFFIX));\n        batch.delete(bytes(keyPrefix + CONTAINER_EXIT_CODE_KEY_SUFFIX));\n        db.write(batch);\n      } finally {\n        batch.close();\n      }\n    } catch (DBException e) {\n      throw new IOException(e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/recovery/NMLeveldbStateStoreService.java",
      "extendedDetails": {}
    },
    "1cd55e0c171f7c4dec6f843931285557d59cd5ea": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4649. Add additional logging to some NM state store operations. Contributed by Sidharta Seethana\n",
      "commitDate": "01/02/16 7:55 PM",
      "commitName": "1cd55e0c171f7c4dec6f843931285557d59cd5ea",
      "commitAuthor": "Varun Vasudev",
      "commitDateOld": "23/09/15 1:29 PM",
      "commitNameOld": "c57eac5dfe277845ab4522a1188023a73ee41539",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 131.31,
      "commitsBetweenForRepo": 904,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,23 @@\n   public void removeContainer(ContainerId containerId)\n       throws IOException {\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"removeContainer: containerId\u003d\" + containerId);\n+    }\n+\n     String keyPrefix \u003d CONTAINERS_KEY_PREFIX + containerId.toString();\n     try {\n       WriteBatch batch \u003d db.createWriteBatch();\n       try {\n         batch.delete(bytes(keyPrefix + CONTAINER_REQUEST_KEY_SUFFIX));\n         batch.delete(bytes(keyPrefix + CONTAINER_DIAGS_KEY_SUFFIX));\n         batch.delete(bytes(keyPrefix + CONTAINER_LAUNCHED_KEY_SUFFIX));\n         batch.delete(bytes(keyPrefix + CONTAINER_KILLED_KEY_SUFFIX));\n         batch.delete(bytes(keyPrefix + CONTAINER_EXIT_CODE_KEY_SUFFIX));\n         db.write(batch);\n       } finally {\n         batch.close();\n       }\n     } catch (DBException e) {\n       throw new IOException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void removeContainer(ContainerId containerId)\n      throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"removeContainer: containerId\u003d\" + containerId);\n    }\n\n    String keyPrefix \u003d CONTAINERS_KEY_PREFIX + containerId.toString();\n    try {\n      WriteBatch batch \u003d db.createWriteBatch();\n      try {\n        batch.delete(bytes(keyPrefix + CONTAINER_REQUEST_KEY_SUFFIX));\n        batch.delete(bytes(keyPrefix + CONTAINER_DIAGS_KEY_SUFFIX));\n        batch.delete(bytes(keyPrefix + CONTAINER_LAUNCHED_KEY_SUFFIX));\n        batch.delete(bytes(keyPrefix + CONTAINER_KILLED_KEY_SUFFIX));\n        batch.delete(bytes(keyPrefix + CONTAINER_EXIT_CODE_KEY_SUFFIX));\n        db.write(batch);\n      } finally {\n        batch.close();\n      }\n    } catch (DBException e) {\n      throw new IOException(e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/recovery/NMLeveldbStateStoreService.java",
      "extendedDetails": {}
    },
    "c2febdcbaa12078db42403fe8fd74180fb58a84b": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1337. Recover containers upon nodemanager restart. (Contributed by Jason Lowe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1617448 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/08/14 3:56 AM",
      "commitName": "c2febdcbaa12078db42403fe8fd74180fb58a84b",
      "commitAuthor": "Junping Du",
      "diff": "@@ -0,0 +1,19 @@\n+  public void removeContainer(ContainerId containerId)\n+      throws IOException {\n+    String keyPrefix \u003d CONTAINERS_KEY_PREFIX + containerId.toString();\n+    try {\n+      WriteBatch batch \u003d db.createWriteBatch();\n+      try {\n+        batch.delete(bytes(keyPrefix + CONTAINER_REQUEST_KEY_SUFFIX));\n+        batch.delete(bytes(keyPrefix + CONTAINER_DIAGS_KEY_SUFFIX));\n+        batch.delete(bytes(keyPrefix + CONTAINER_LAUNCHED_KEY_SUFFIX));\n+        batch.delete(bytes(keyPrefix + CONTAINER_KILLED_KEY_SUFFIX));\n+        batch.delete(bytes(keyPrefix + CONTAINER_EXIT_CODE_KEY_SUFFIX));\n+        db.write(batch);\n+      } finally {\n+        batch.close();\n+      }\n+    } catch (DBException e) {\n+      throw new IOException(e);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void removeContainer(ContainerId containerId)\n      throws IOException {\n    String keyPrefix \u003d CONTAINERS_KEY_PREFIX + containerId.toString();\n    try {\n      WriteBatch batch \u003d db.createWriteBatch();\n      try {\n        batch.delete(bytes(keyPrefix + CONTAINER_REQUEST_KEY_SUFFIX));\n        batch.delete(bytes(keyPrefix + CONTAINER_DIAGS_KEY_SUFFIX));\n        batch.delete(bytes(keyPrefix + CONTAINER_LAUNCHED_KEY_SUFFIX));\n        batch.delete(bytes(keyPrefix + CONTAINER_KILLED_KEY_SUFFIX));\n        batch.delete(bytes(keyPrefix + CONTAINER_EXIT_CODE_KEY_SUFFIX));\n        db.write(batch);\n      } finally {\n        batch.close();\n      }\n    } catch (DBException e) {\n      throw new IOException(e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/recovery/NMLeveldbStateStoreService.java"
    }
  }
}