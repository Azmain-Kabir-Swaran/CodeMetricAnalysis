{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "StripedWriter.java",
  "functionName": "updateRealTargetBuffers",
  "functionId": "updateRealTargetBuffers___toReconstructLen-int",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/erasurecode/StripedWriter.java",
  "functionStartLine": 244,
  "functionEndLine": 256,
  "numCommitsSeen": 5,
  "timeTaken": 840,
  "changeHistory": [
    "3c18a53cbd2efabb2ad108d63a0b0b558424115f"
  ],
  "changeHistoryShort": {
    "3c18a53cbd2efabb2ad108d63a0b0b558424115f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3c18a53cbd2efabb2ad108d63a0b0b558424115f": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-9719. Refactoring ErasureCodingWorker into smaller reusable constructs. Contributed by Kai Zheng.\n",
      "commitDate": "06/04/16 10:50 PM",
      "commitName": "3c18a53cbd2efabb2ad108d63a0b0b558424115f",
      "commitAuthor": "Uma Maheswara Rao G",
      "diff": "@@ -0,0 +1,13 @@\n+  void updateRealTargetBuffers(int toReconstructLen) {\n+    for (int i \u003d 0; i \u003c targets.length; i++) {\n+      if (targetsStatus[i]) {\n+        long blockLen \u003d reconstructor.getBlockLen(targetIndices[i]);\n+        long remaining \u003d blockLen - reconstructor.getPositionInBlock();\n+        if (remaining \u003c\u003d 0) {\n+          writers[i].getTargetBuffer().limit(0);\n+        } else if (remaining \u003c toReconstructLen) {\n+          writers[i].getTargetBuffer().limit((int)remaining);\n+        }\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  void updateRealTargetBuffers(int toReconstructLen) {\n    for (int i \u003d 0; i \u003c targets.length; i++) {\n      if (targetsStatus[i]) {\n        long blockLen \u003d reconstructor.getBlockLen(targetIndices[i]);\n        long remaining \u003d blockLen - reconstructor.getPositionInBlock();\n        if (remaining \u003c\u003d 0) {\n          writers[i].getTargetBuffer().limit(0);\n        } else if (remaining \u003c toReconstructLen) {\n          writers[i].getTargetBuffer().limit((int)remaining);\n        }\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/erasurecode/StripedWriter.java"
    }
  }
}