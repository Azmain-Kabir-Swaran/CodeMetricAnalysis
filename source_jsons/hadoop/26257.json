{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "StartEndTimesBase.java",
  "functionName": "updateAttempt",
  "functionId": "updateAttempt___status-TaskAttemptStatus__timestamp-long",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/speculate/StartEndTimesBase.java",
  "functionStartLine": 159,
  "functionEndLine": 209,
  "numCommitsSeen": 4,
  "timeTaken": 6732,
  "changeHistory": [
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void updateAttempt(TaskAttemptStatus status, long timestamp) {\n\n    TaskAttemptId attemptID \u003d status.id;\n    TaskId taskID \u003d attemptID.getTaskId();\n    JobId jobID \u003d taskID.getJobId();\n    Job job \u003d context.getJob(jobID);\n\n    if (job \u003d\u003d null) {\n      return;\n    }\n\n    Task task \u003d job.getTask(taskID);\n\n    if (task \u003d\u003d null) {\n      return;\n    }\n\n    Long boxedStart \u003d startTimes.get(attemptID);\n    long start \u003d boxedStart \u003d\u003d null ? Long.MIN_VALUE : boxedStart;\n    \n    TaskAttempt taskAttempt \u003d task.getAttempt(attemptID);\n\n    if (taskAttempt.getState() \u003d\u003d TaskAttemptState.SUCCEEDED) {\n      boolean isNew \u003d false;\n      // is this  a new success?\n      synchronized (doneTasks) {\n        if (!doneTasks.contains(task)) {\n          doneTasks.add(task);\n          isNew \u003d true;\n        }\n      }\n\n      // It\u0027s a new completion\n      // Note that if a task completes twice [because of a previous speculation\n      //  and a race, or a success followed by loss of the machine with the\n      //  local data] we only count the first one.\n      if (isNew) {\n        long finish \u003d timestamp;\n        if (start \u003e 1L \u0026\u0026 finish \u003e 1L \u0026\u0026 start \u003c\u003d finish) {\n          long duration \u003d finish - start;\n\n          DataStatistics statistics\n          \u003d dataStatisticsForTask(taskID);\n\n          if (statistics !\u003d null) {\n            statistics.add(duration);\n          }\n        }\n      }\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/speculate/StartEndTimesBase.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/speculate/StartEndTimesBase.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/speculate/StartEndTimesBase.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,51 @@\n+  public void updateAttempt(TaskAttemptStatus status, long timestamp) {\n+\n+    TaskAttemptId attemptID \u003d status.id;\n+    TaskId taskID \u003d attemptID.getTaskId();\n+    JobId jobID \u003d taskID.getJobId();\n+    Job job \u003d context.getJob(jobID);\n+\n+    if (job \u003d\u003d null) {\n+      return;\n+    }\n+\n+    Task task \u003d job.getTask(taskID);\n+\n+    if (task \u003d\u003d null) {\n+      return;\n+    }\n+\n+    Long boxedStart \u003d startTimes.get(attemptID);\n+    long start \u003d boxedStart \u003d\u003d null ? Long.MIN_VALUE : boxedStart;\n+    \n+    TaskAttempt taskAttempt \u003d task.getAttempt(attemptID);\n+\n+    if (taskAttempt.getState() \u003d\u003d TaskAttemptState.SUCCEEDED) {\n+      boolean isNew \u003d false;\n+      // is this  a new success?\n+      synchronized (doneTasks) {\n+        if (!doneTasks.contains(task)) {\n+          doneTasks.add(task);\n+          isNew \u003d true;\n+        }\n+      }\n+\n+      // It\u0027s a new completion\n+      // Note that if a task completes twice [because of a previous speculation\n+      //  and a race, or a success followed by loss of the machine with the\n+      //  local data] we only count the first one.\n+      if (isNew) {\n+        long finish \u003d timestamp;\n+        if (start \u003e 1L \u0026\u0026 finish \u003e 1L \u0026\u0026 start \u003c\u003d finish) {\n+          long duration \u003d finish - start;\n+\n+          DataStatistics statistics\n+          \u003d dataStatisticsForTask(taskID);\n+\n+          if (statistics !\u003d null) {\n+            statistics.add(duration);\n+          }\n+        }\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void updateAttempt(TaskAttemptStatus status, long timestamp) {\n\n    TaskAttemptId attemptID \u003d status.id;\n    TaskId taskID \u003d attemptID.getTaskId();\n    JobId jobID \u003d taskID.getJobId();\n    Job job \u003d context.getJob(jobID);\n\n    if (job \u003d\u003d null) {\n      return;\n    }\n\n    Task task \u003d job.getTask(taskID);\n\n    if (task \u003d\u003d null) {\n      return;\n    }\n\n    Long boxedStart \u003d startTimes.get(attemptID);\n    long start \u003d boxedStart \u003d\u003d null ? Long.MIN_VALUE : boxedStart;\n    \n    TaskAttempt taskAttempt \u003d task.getAttempt(attemptID);\n\n    if (taskAttempt.getState() \u003d\u003d TaskAttemptState.SUCCEEDED) {\n      boolean isNew \u003d false;\n      // is this  a new success?\n      synchronized (doneTasks) {\n        if (!doneTasks.contains(task)) {\n          doneTasks.add(task);\n          isNew \u003d true;\n        }\n      }\n\n      // It\u0027s a new completion\n      // Note that if a task completes twice [because of a previous speculation\n      //  and a race, or a success followed by loss of the machine with the\n      //  local data] we only count the first one.\n      if (isNew) {\n        long finish \u003d timestamp;\n        if (start \u003e 1L \u0026\u0026 finish \u003e 1L \u0026\u0026 start \u003c\u003d finish) {\n          long duration \u003d finish - start;\n\n          DataStatistics statistics\n          \u003d dataStatisticsForTask(taskID);\n\n          if (statistics !\u003d null) {\n            statistics.add(duration);\n          }\n        }\n      }\n    }\n  }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/speculate/StartEndTimesBase.java"
    }
  }
}