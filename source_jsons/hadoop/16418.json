{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RouterClientProtocol.java",
  "functionName": "getListingInt",
  "functionId": "getListingInt___src-String__startAfter-byte[]__needLocation-boolean",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterClientProtocol.java",
  "functionStartLine": 2112,
  "functionEndLine": 2132,
  "numCommitsSeen": 40,
  "timeTaken": 1162,
  "changeHistory": [
    "375224edebb1c937afe4bbea8fe884499ca8ece5"
  ],
  "changeHistoryShort": {
    "375224edebb1c937afe4bbea8fe884499ca8ece5": "Yintroduced"
  },
  "changeHistoryDetails": {
    "375224edebb1c937afe4bbea8fe884499ca8ece5": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-14739. RBF: LS command for mount point shows wrong owner and permission information. Contributed by Jinglun.\n",
      "commitDate": "16/10/19 6:56 AM",
      "commitName": "375224edebb1c937afe4bbea8fe884499ca8ece5",
      "commitAuthor": "Ayush Saxena",
      "diff": "@@ -0,0 +1,21 @@\n+  private List\u003cRemoteResult\u003cRemoteLocation, DirectoryListing\u003e\u003e getListingInt(\n+      String src, byte[] startAfter, boolean needLocation) throws IOException {\n+    try {\n+      List\u003cRemoteLocation\u003e locations \u003d\n+          rpcServer.getLocationsForPath(src, false, false);\n+      // Locate the dir and fetch the listing.\n+      if (locations.isEmpty()) {\n+        return new ArrayList\u003c\u003e();\n+      }\n+      RemoteMethod method \u003d new RemoteMethod(\"getListing\",\n+          new Class\u003c?\u003e[] {String.class, startAfter.getClass(), boolean.class},\n+          new RemoteParam(), startAfter, needLocation);\n+      List\u003cRemoteResult\u003cRemoteLocation, DirectoryListing\u003e\u003e listings \u003d rpcClient\n+          .invokeConcurrent(locations, method, false, -1,\n+              DirectoryListing.class);\n+      return listings;\n+    } catch (RouterResolveException e) {\n+      LOG.debug(\"Cannot get locations for {}, {}.\", src, e.getMessage());\n+      return new ArrayList\u003c\u003e();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private List\u003cRemoteResult\u003cRemoteLocation, DirectoryListing\u003e\u003e getListingInt(\n      String src, byte[] startAfter, boolean needLocation) throws IOException {\n    try {\n      List\u003cRemoteLocation\u003e locations \u003d\n          rpcServer.getLocationsForPath(src, false, false);\n      // Locate the dir and fetch the listing.\n      if (locations.isEmpty()) {\n        return new ArrayList\u003c\u003e();\n      }\n      RemoteMethod method \u003d new RemoteMethod(\"getListing\",\n          new Class\u003c?\u003e[] {String.class, startAfter.getClass(), boolean.class},\n          new RemoteParam(), startAfter, needLocation);\n      List\u003cRemoteResult\u003cRemoteLocation, DirectoryListing\u003e\u003e listings \u003d rpcClient\n          .invokeConcurrent(locations, method, false, -1,\n              DirectoryListing.class);\n      return listings;\n    } catch (RouterResolveException e) {\n      LOG.debug(\"Cannot get locations for {}, {}.\", src, e.getMessage());\n      return new ArrayList\u003c\u003e();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterClientProtocol.java"
    }
  }
}