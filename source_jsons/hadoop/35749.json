{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CuratorBasedElectorService.java",
  "functionName": "serviceInit",
  "functionId": "serviceInit___conf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/CuratorBasedElectorService.java",
  "functionStartLine": 58,
  "functionEndLine": 68,
  "numCommitsSeen": 5,
  "timeTaken": 1764,
  "changeHistory": [
    "a6410a542e59acd9827457df4a257a843f785c29",
    "890a2ebd1af51d24ccbbc5d1d65d17b24ad8ab9b",
    "89022f8d4bac0e9d0b848fd91e9c4d700fe1cdbe"
  ],
  "changeHistoryShort": {
    "a6410a542e59acd9827457df4a257a843f785c29": "Yfilerename",
    "890a2ebd1af51d24ccbbc5d1d65d17b24ad8ab9b": "Ybodychange",
    "89022f8d4bac0e9d0b848fd91e9c4d700fe1cdbe": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a6410a542e59acd9827457df4a257a843f785c29": {
      "type": "Yfilerename",
      "commitMessage": "YARN-5709. Cleanup leader election configs and pluggability. Contribtued by Karthik Kambatla\n",
      "commitDate": "09/12/16 5:00 PM",
      "commitName": "a6410a542e59acd9827457df4a257a843f785c29",
      "commitAuthor": "Jian He",
      "commitDateOld": "09/12/16 4:41 PM",
      "commitNameOld": "b0aace21b1ef3436ba9d516186208fee9a9ceef2",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    rmId \u003d HAUtil.getRMHAId(conf);\n    String clusterId \u003d YarnConfiguration.getClusterId(conf);\n    String zkBasePath \u003d conf.get(\n        YarnConfiguration.AUTO_FAILOVER_ZK_BASE_PATH,\n        YarnConfiguration.DEFAULT_AUTO_FAILOVER_ZK_BASE_PATH);\n    latchPath \u003d zkBasePath + \"/\" + clusterId;\n    curator \u003d rm.getCurator();\n    initAndStartLeaderLatch();\n    super.serviceInit(conf);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/CuratorBasedElectorService.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/LeaderElectorService.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/CuratorBasedElectorService.java"
      }
    },
    "890a2ebd1af51d24ccbbc5d1d65d17b24ad8ab9b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4559. Make leader elector and zk store share the same curator\nclient. Contributed by Jian He\n",
      "commitDate": "20/01/16 2:48 PM",
      "commitName": "890a2ebd1af51d24ccbbc5d1d65d17b24ad8ab9b",
      "commitAuthor": "Xuan",
      "commitDateOld": "07/01/16 2:33 PM",
      "commitNameOld": "89022f8d4bac0e9d0b848fd91e9c4d700fe1cdbe",
      "commitAuthorOld": "Xuan",
      "daysBetweenCommits": 13.01,
      "commitsBetweenForRepo": 86,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,11 @@\n   protected void serviceInit(Configuration conf) throws Exception {\n-    String zkHostPort \u003d conf.get(YarnConfiguration.RM_ZK_ADDRESS);\n-    Preconditions.checkNotNull(zkHostPort,\n-        YarnConfiguration.RM_ZK_ADDRESS + \" is not set\");\n-\n     rmId \u003d HAUtil.getRMHAId(conf);\n     String clusterId \u003d YarnConfiguration.getClusterId(conf);\n-\n-    int zkSessionTimeout \u003d conf.getInt(YarnConfiguration.RM_ZK_TIMEOUT_MS,\n-        YarnConfiguration.DEFAULT_RM_ZK_TIMEOUT_MS);\n-    int maxRetryNum \u003d conf.getInt(YarnConfiguration.RM_ZK_NUM_RETRIES,\n-        YarnConfiguration.DEFAULT_ZK_RM_NUM_RETRIES);\n-\n     String zkBasePath \u003d conf.get(\n         YarnConfiguration.AUTO_FAILOVER_ZK_BASE_PATH,\n         YarnConfiguration.DEFAULT_AUTO_FAILOVER_ZK_BASE_PATH);\n     latchPath \u003d zkBasePath + \"/\" + clusterId;\n-\n-    curator \u003d CuratorFrameworkFactory.builder().connectString(zkHostPort)\n-        .retryPolicy(new RetryNTimes(maxRetryNum, zkSessionTimeout)).build();\n-    curator.start();\n+    curator \u003d rm.getCurator();\n     initAndStartLeaderLatch();\n     super.serviceInit(conf);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    rmId \u003d HAUtil.getRMHAId(conf);\n    String clusterId \u003d YarnConfiguration.getClusterId(conf);\n    String zkBasePath \u003d conf.get(\n        YarnConfiguration.AUTO_FAILOVER_ZK_BASE_PATH,\n        YarnConfiguration.DEFAULT_AUTO_FAILOVER_ZK_BASE_PATH);\n    latchPath \u003d zkBasePath + \"/\" + clusterId;\n    curator \u003d rm.getCurator();\n    initAndStartLeaderLatch();\n    super.serviceInit(conf);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/LeaderElectorService.java",
      "extendedDetails": {}
    },
    "89022f8d4bac0e9d0b848fd91e9c4d700fe1cdbe": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4438. Implement RM leader election with curator. Contributed by Jian He\n",
      "commitDate": "07/01/16 2:33 PM",
      "commitName": "89022f8d4bac0e9d0b848fd91e9c4d700fe1cdbe",
      "commitAuthor": "Xuan",
      "diff": "@@ -0,0 +1,24 @@\n+  protected void serviceInit(Configuration conf) throws Exception {\n+    String zkHostPort \u003d conf.get(YarnConfiguration.RM_ZK_ADDRESS);\n+    Preconditions.checkNotNull(zkHostPort,\n+        YarnConfiguration.RM_ZK_ADDRESS + \" is not set\");\n+\n+    rmId \u003d HAUtil.getRMHAId(conf);\n+    String clusterId \u003d YarnConfiguration.getClusterId(conf);\n+\n+    int zkSessionTimeout \u003d conf.getInt(YarnConfiguration.RM_ZK_TIMEOUT_MS,\n+        YarnConfiguration.DEFAULT_RM_ZK_TIMEOUT_MS);\n+    int maxRetryNum \u003d conf.getInt(YarnConfiguration.RM_ZK_NUM_RETRIES,\n+        YarnConfiguration.DEFAULT_ZK_RM_NUM_RETRIES);\n+\n+    String zkBasePath \u003d conf.get(\n+        YarnConfiguration.AUTO_FAILOVER_ZK_BASE_PATH,\n+        YarnConfiguration.DEFAULT_AUTO_FAILOVER_ZK_BASE_PATH);\n+    latchPath \u003d zkBasePath + \"/\" + clusterId;\n+\n+    curator \u003d CuratorFrameworkFactory.builder().connectString(zkHostPort)\n+        .retryPolicy(new RetryNTimes(maxRetryNum, zkSessionTimeout)).build();\n+    curator.start();\n+    initAndStartLeaderLatch();\n+    super.serviceInit(conf);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    String zkHostPort \u003d conf.get(YarnConfiguration.RM_ZK_ADDRESS);\n    Preconditions.checkNotNull(zkHostPort,\n        YarnConfiguration.RM_ZK_ADDRESS + \" is not set\");\n\n    rmId \u003d HAUtil.getRMHAId(conf);\n    String clusterId \u003d YarnConfiguration.getClusterId(conf);\n\n    int zkSessionTimeout \u003d conf.getInt(YarnConfiguration.RM_ZK_TIMEOUT_MS,\n        YarnConfiguration.DEFAULT_RM_ZK_TIMEOUT_MS);\n    int maxRetryNum \u003d conf.getInt(YarnConfiguration.RM_ZK_NUM_RETRIES,\n        YarnConfiguration.DEFAULT_ZK_RM_NUM_RETRIES);\n\n    String zkBasePath \u003d conf.get(\n        YarnConfiguration.AUTO_FAILOVER_ZK_BASE_PATH,\n        YarnConfiguration.DEFAULT_AUTO_FAILOVER_ZK_BASE_PATH);\n    latchPath \u003d zkBasePath + \"/\" + clusterId;\n\n    curator \u003d CuratorFrameworkFactory.builder().connectString(zkHostPort)\n        .retryPolicy(new RetryNTimes(maxRetryNum, zkSessionTimeout)).build();\n    curator.start();\n    initAndStartLeaderLatch();\n    super.serviceInit(conf);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/LeaderElectorService.java"
    }
  }
}