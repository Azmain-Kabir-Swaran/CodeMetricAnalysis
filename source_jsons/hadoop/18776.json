{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FrameworkUploader.java",
  "functionName": "expandEnvironmentVariables",
  "functionId": "expandEnvironmentVariables___innerInput-String__env-Map__String,String__",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-uploader/src/main/java/org/apache/hadoop/mapred/uploader/FrameworkUploader.java",
  "functionStartLine": 382,
  "functionEndLine": 406,
  "numCommitsSeen": 12,
  "timeTaken": 763,
  "changeHistory": [
    "3b78607a02f3a81ad730975ecdfa35967413271d"
  ],
  "changeHistoryShort": {
    "3b78607a02f3a81ad730975ecdfa35967413271d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3b78607a02f3a81ad730975ecdfa35967413271d": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-6994. Uploader tool for Distributed Cache Deploy code changes  (miklos.szegedi@cloudera.com via rkanter)\n",
      "commitDate": "01/12/17 12:12 PM",
      "commitName": "3b78607a02f3a81ad730975ecdfa35967413271d",
      "commitAuthor": "Robert Kanter",
      "diff": "@@ -0,0 +1,25 @@\n+  String expandEnvironmentVariables(String innerInput, Map\u003cString, String\u003e env)\n+      throws UploaderException {\n+    boolean found;\n+    do {\n+      found \u003d false;\n+      Matcher matcher \u003d VAR_SUBBER.matcher(innerInput);\n+      StringBuffer stringBuffer \u003d new StringBuffer();\n+      while (matcher.find()) {\n+        found \u003d true;\n+        String var \u003d matcher.group(1);\n+        // replace $env with the child\u0027s env constructed by tt\u0027s\n+        String replace \u003d env.get(var);\n+        // the env key is not present anywhere .. simply set it\n+        if (replace \u003d\u003d null) {\n+          throw new UploaderException(\"Environment variable does not exist \" +\n+              var);\n+        }\n+        matcher.appendReplacement(\n+            stringBuffer, Matcher.quoteReplacement(replace));\n+      }\n+      matcher.appendTail(stringBuffer);\n+      innerInput \u003d stringBuffer.toString();\n+    } while (found);\n+    return innerInput;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  String expandEnvironmentVariables(String innerInput, Map\u003cString, String\u003e env)\n      throws UploaderException {\n    boolean found;\n    do {\n      found \u003d false;\n      Matcher matcher \u003d VAR_SUBBER.matcher(innerInput);\n      StringBuffer stringBuffer \u003d new StringBuffer();\n      while (matcher.find()) {\n        found \u003d true;\n        String var \u003d matcher.group(1);\n        // replace $env with the child\u0027s env constructed by tt\u0027s\n        String replace \u003d env.get(var);\n        // the env key is not present anywhere .. simply set it\n        if (replace \u003d\u003d null) {\n          throw new UploaderException(\"Environment variable does not exist \" +\n              var);\n        }\n        matcher.appendReplacement(\n            stringBuffer, Matcher.quoteReplacement(replace));\n      }\n      matcher.appendTail(stringBuffer);\n      innerInput \u003d stringBuffer.toString();\n    } while (found);\n    return innerInput;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-uploader/src/main/java/org/apache/hadoop/mapred/uploader/FrameworkUploader.java"
    }
  }
}