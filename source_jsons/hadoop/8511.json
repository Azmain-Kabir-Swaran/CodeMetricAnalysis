{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSImage.java",
  "functionName": "initEditLog",
  "functionId": "initEditLog___startOpt-StartupOption",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImage.java",
  "functionStartLine": 829,
  "functionEndLine": 860,
  "numCommitsSeen": 174,
  "timeTaken": 3859,
  "changeHistory": [
    "5f9e52f7459d3dc4ac3a5febd1dc6e00829d30ed",
    "98983b2788508936ad489e61ff61cacfe73ab1b9",
    "377424e36a25ab34bba9aaed5feaae9d293eb57f",
    "edb6dc5f303093c2604cd07b0c0dacf12dbce5de",
    "7accbabdee0b7619ff83514c173e815d290b33bf"
  ],
  "changeHistoryShort": {
    "5f9e52f7459d3dc4ac3a5febd1dc6e00829d30ed": "Ybodychange",
    "98983b2788508936ad489e61ff61cacfe73ab1b9": "Ybodychange",
    "377424e36a25ab34bba9aaed5feaae9d293eb57f": "Ybodychange",
    "edb6dc5f303093c2604cd07b0c0dacf12dbce5de": "Ymultichange(Yparameterchange,Yexceptionschange,Ybodychange)",
    "7accbabdee0b7619ff83514c173e815d290b33bf": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5f9e52f7459d3dc4ac3a5febd1dc6e00829d30ed": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6597. Add a new option to NN upgrade to terminate the process after upgrade on NN is completed. Contributed by Danilo Vunjak.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1611723 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/07/14 10:14 AM",
      "commitName": "5f9e52f7459d3dc4ac3a5febd1dc6e00829d30ed",
      "commitAuthor": "Chris Nauroth",
      "commitDateOld": "28/06/14 8:21 AM",
      "commitNameOld": "94a1462bd55ad5c71d776d22b9150003fe9ae30d",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 20.08,
      "commitsBetweenForRepo": 133,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,32 @@\n   public void initEditLog(StartupOption startOpt) throws IOException {\n     Preconditions.checkState(getNamespaceID() !\u003d 0,\n         \"Must know namespace ID before initting edit log\");\n     String nameserviceId \u003d DFSUtil.getNamenodeNameServiceId(conf);\n     if (!HAUtil.isHAEnabled(conf, nameserviceId)) {\n       // If this NN is not HA\n       editLog.initJournalsForWrite();\n       editLog.recoverUnclosedStreams();\n     } else if (HAUtil.isHAEnabled(conf, nameserviceId)\n         \u0026\u0026 (startOpt \u003d\u003d StartupOption.UPGRADE\n+            || startOpt \u003d\u003d StartupOption.UPGRADEONLY\n             || RollingUpgradeStartupOption.ROLLBACK.matches(startOpt))) {\n       // This NN is HA, but we\u0027re doing an upgrade or a rollback of rolling\n       // upgrade so init the edit log for write.\n       editLog.initJournalsForWrite();\n-      if (startOpt \u003d\u003d StartupOption.UPGRADE) {\n+      if (startOpt \u003d\u003d StartupOption.UPGRADE\n+          || startOpt \u003d\u003d StartupOption.UPGRADEONLY) {\n         long sharedLogCTime \u003d editLog.getSharedLogCTime();\n         if (this.storage.getCTime() \u003c sharedLogCTime) {\n           throw new IOException(\"It looks like the shared log is already \" +\n               \"being upgraded but this NN has not been upgraded yet. You \" +\n               \"should restart this NameNode with the \u0027\" +\n               StartupOption.BOOTSTRAPSTANDBY.getName() + \"\u0027 option to bring \" +\n               \"this NN in sync with the other.\");\n         }\n       }\n       editLog.recoverUnclosedStreams();\n     } else {\n       // This NN is HA and we\u0027re not doing an upgrade.\n       editLog.initSharedJournalsForRead();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void initEditLog(StartupOption startOpt) throws IOException {\n    Preconditions.checkState(getNamespaceID() !\u003d 0,\n        \"Must know namespace ID before initting edit log\");\n    String nameserviceId \u003d DFSUtil.getNamenodeNameServiceId(conf);\n    if (!HAUtil.isHAEnabled(conf, nameserviceId)) {\n      // If this NN is not HA\n      editLog.initJournalsForWrite();\n      editLog.recoverUnclosedStreams();\n    } else if (HAUtil.isHAEnabled(conf, nameserviceId)\n        \u0026\u0026 (startOpt \u003d\u003d StartupOption.UPGRADE\n            || startOpt \u003d\u003d StartupOption.UPGRADEONLY\n            || RollingUpgradeStartupOption.ROLLBACK.matches(startOpt))) {\n      // This NN is HA, but we\u0027re doing an upgrade or a rollback of rolling\n      // upgrade so init the edit log for write.\n      editLog.initJournalsForWrite();\n      if (startOpt \u003d\u003d StartupOption.UPGRADE\n          || startOpt \u003d\u003d StartupOption.UPGRADEONLY) {\n        long sharedLogCTime \u003d editLog.getSharedLogCTime();\n        if (this.storage.getCTime() \u003c sharedLogCTime) {\n          throw new IOException(\"It looks like the shared log is already \" +\n              \"being upgraded but this NN has not been upgraded yet. You \" +\n              \"should restart this NameNode with the \u0027\" +\n              StartupOption.BOOTSTRAPSTANDBY.getName() + \"\u0027 option to bring \" +\n              \"this NN in sync with the other.\");\n        }\n      }\n      editLog.recoverUnclosedStreams();\n    } else {\n      // This NN is HA and we\u0027re not doing an upgrade.\n      editLog.initSharedJournalsForRead();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImage.java",
      "extendedDetails": {}
    },
    "98983b2788508936ad489e61ff61cacfe73ab1b9": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6042. Fix rolling upgrade documentation and error messages. (Contributed by szetszwo)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-5535@1573785 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/03/14 2:31 PM",
      "commitName": "98983b2788508936ad489e61ff61cacfe73ab1b9",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "28/02/14 11:33 AM",
      "commitNameOld": "1bab14bb49ec2b1a93f7d0763fb823b2ac715174",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 3.12,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,30 @@\n   public void initEditLog(StartupOption startOpt) throws IOException {\n     Preconditions.checkState(getNamespaceID() !\u003d 0,\n         \"Must know namespace ID before initting edit log\");\n     String nameserviceId \u003d DFSUtil.getNamenodeNameServiceId(conf);\n     if (!HAUtil.isHAEnabled(conf, nameserviceId)) {\n       // If this NN is not HA\n       editLog.initJournalsForWrite();\n       editLog.recoverUnclosedStreams();\n     } else if (HAUtil.isHAEnabled(conf, nameserviceId)\n-        \u0026\u0026 (startOpt \u003d\u003d StartupOption.UPGRADE || StartupOption\n-            .isRollingUpgradeRollback(startOpt))) {\n+        \u0026\u0026 (startOpt \u003d\u003d StartupOption.UPGRADE\n+            || RollingUpgradeStartupOption.ROLLBACK.matches(startOpt))) {\n       // This NN is HA, but we\u0027re doing an upgrade or a rollback of rolling\n       // upgrade so init the edit log for write.\n       editLog.initJournalsForWrite();\n       if (startOpt \u003d\u003d StartupOption.UPGRADE) {\n         long sharedLogCTime \u003d editLog.getSharedLogCTime();\n         if (this.storage.getCTime() \u003c sharedLogCTime) {\n           throw new IOException(\"It looks like the shared log is already \" +\n               \"being upgraded but this NN has not been upgraded yet. You \" +\n               \"should restart this NameNode with the \u0027\" +\n               StartupOption.BOOTSTRAPSTANDBY.getName() + \"\u0027 option to bring \" +\n               \"this NN in sync with the other.\");\n         }\n       }\n       editLog.recoverUnclosedStreams();\n     } else {\n       // This NN is HA and we\u0027re not doing an upgrade.\n       editLog.initSharedJournalsForRead();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void initEditLog(StartupOption startOpt) throws IOException {\n    Preconditions.checkState(getNamespaceID() !\u003d 0,\n        \"Must know namespace ID before initting edit log\");\n    String nameserviceId \u003d DFSUtil.getNamenodeNameServiceId(conf);\n    if (!HAUtil.isHAEnabled(conf, nameserviceId)) {\n      // If this NN is not HA\n      editLog.initJournalsForWrite();\n      editLog.recoverUnclosedStreams();\n    } else if (HAUtil.isHAEnabled(conf, nameserviceId)\n        \u0026\u0026 (startOpt \u003d\u003d StartupOption.UPGRADE\n            || RollingUpgradeStartupOption.ROLLBACK.matches(startOpt))) {\n      // This NN is HA, but we\u0027re doing an upgrade or a rollback of rolling\n      // upgrade so init the edit log for write.\n      editLog.initJournalsForWrite();\n      if (startOpt \u003d\u003d StartupOption.UPGRADE) {\n        long sharedLogCTime \u003d editLog.getSharedLogCTime();\n        if (this.storage.getCTime() \u003c sharedLogCTime) {\n          throw new IOException(\"It looks like the shared log is already \" +\n              \"being upgraded but this NN has not been upgraded yet. You \" +\n              \"should restart this NameNode with the \u0027\" +\n              StartupOption.BOOTSTRAPSTANDBY.getName() + \"\u0027 option to bring \" +\n              \"this NN in sync with the other.\");\n        }\n      }\n      editLog.recoverUnclosedStreams();\n    } else {\n      // This NN is HA and we\u0027re not doing an upgrade.\n      editLog.initSharedJournalsForRead();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImage.java",
      "extendedDetails": {}
    },
    "377424e36a25ab34bba9aaed5feaae9d293eb57f": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5966. Fix rollback of rolling upgrade in NameNode HA setup.  Contributed by jing9\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-5535@1569885 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/02/14 11:41 AM",
      "commitName": "377424e36a25ab34bba9aaed5feaae9d293eb57f",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "18/02/14 12:12 PM",
      "commitNameOld": "bc962d6df470e3de18df3a4fd9f8a9853953bda1",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 0.98,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,30 @@\n   public void initEditLog(StartupOption startOpt) throws IOException {\n     Preconditions.checkState(getNamespaceID() !\u003d 0,\n         \"Must know namespace ID before initting edit log\");\n     String nameserviceId \u003d DFSUtil.getNamenodeNameServiceId(conf);\n     if (!HAUtil.isHAEnabled(conf, nameserviceId)) {\n       // If this NN is not HA\n       editLog.initJournalsForWrite();\n       editLog.recoverUnclosedStreams();\n-    } else if (HAUtil.isHAEnabled(conf, nameserviceId) \u0026\u0026\n-        startOpt \u003d\u003d StartupOption.UPGRADE) {\n-      // This NN is HA, but we\u0027re doing an upgrade so init the edit log for\n-      // write.\n+    } else if (HAUtil.isHAEnabled(conf, nameserviceId)\n+        \u0026\u0026 (startOpt \u003d\u003d StartupOption.UPGRADE || StartupOption\n+            .isRollingUpgradeRollback(startOpt))) {\n+      // This NN is HA, but we\u0027re doing an upgrade or a rollback of rolling\n+      // upgrade so init the edit log for write.\n       editLog.initJournalsForWrite();\n-      long sharedLogCTime \u003d editLog.getSharedLogCTime();\n-      if (this.storage.getCTime() \u003c sharedLogCTime) {\n-        throw new IOException(\"It looks like the shared log is already \" +\n-            \"being upgraded but this NN has not been upgraded yet. You \" +\n-            \"should restart this NameNode with the \u0027\" +\n-            StartupOption.BOOTSTRAPSTANDBY.getName() + \"\u0027 option to bring \" +\n-            \"this NN in sync with the other.\");\n+      if (startOpt \u003d\u003d StartupOption.UPGRADE) {\n+        long sharedLogCTime \u003d editLog.getSharedLogCTime();\n+        if (this.storage.getCTime() \u003c sharedLogCTime) {\n+          throw new IOException(\"It looks like the shared log is already \" +\n+              \"being upgraded but this NN has not been upgraded yet. You \" +\n+              \"should restart this NameNode with the \u0027\" +\n+              StartupOption.BOOTSTRAPSTANDBY.getName() + \"\u0027 option to bring \" +\n+              \"this NN in sync with the other.\");\n+        }\n       }\n       editLog.recoverUnclosedStreams();\n     } else {\n       // This NN is HA and we\u0027re not doing an upgrade.\n       editLog.initSharedJournalsForRead();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void initEditLog(StartupOption startOpt) throws IOException {\n    Preconditions.checkState(getNamespaceID() !\u003d 0,\n        \"Must know namespace ID before initting edit log\");\n    String nameserviceId \u003d DFSUtil.getNamenodeNameServiceId(conf);\n    if (!HAUtil.isHAEnabled(conf, nameserviceId)) {\n      // If this NN is not HA\n      editLog.initJournalsForWrite();\n      editLog.recoverUnclosedStreams();\n    } else if (HAUtil.isHAEnabled(conf, nameserviceId)\n        \u0026\u0026 (startOpt \u003d\u003d StartupOption.UPGRADE || StartupOption\n            .isRollingUpgradeRollback(startOpt))) {\n      // This NN is HA, but we\u0027re doing an upgrade or a rollback of rolling\n      // upgrade so init the edit log for write.\n      editLog.initJournalsForWrite();\n      if (startOpt \u003d\u003d StartupOption.UPGRADE) {\n        long sharedLogCTime \u003d editLog.getSharedLogCTime();\n        if (this.storage.getCTime() \u003c sharedLogCTime) {\n          throw new IOException(\"It looks like the shared log is already \" +\n              \"being upgraded but this NN has not been upgraded yet. You \" +\n              \"should restart this NameNode with the \u0027\" +\n              StartupOption.BOOTSTRAPSTANDBY.getName() + \"\u0027 option to bring \" +\n              \"this NN in sync with the other.\");\n        }\n      }\n      editLog.recoverUnclosedStreams();\n    } else {\n      // This NN is HA and we\u0027re not doing an upgrade.\n      editLog.initSharedJournalsForRead();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImage.java",
      "extendedDetails": {}
    },
    "edb6dc5f303093c2604cd07b0c0dacf12dbce5de": {
      "type": "Ymultichange(Yparameterchange,Yexceptionschange,Ybodychange)",
      "commitMessage": "HDFS-5138. Support HDFS upgrade in HA. Contributed by Aaron T. Myers.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1561381 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/01/14 12:01 PM",
      "commitName": "edb6dc5f303093c2604cd07b0c0dacf12dbce5de",
      "commitAuthor": "Todd Lipcon",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-5138. Support HDFS upgrade in HA. Contributed by Aaron T. Myers.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1561381 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "25/01/14 12:01 PM",
          "commitName": "edb6dc5f303093c2604cd07b0c0dacf12dbce5de",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "07/01/14 12:52 PM",
          "commitNameOld": "70cff9e2f0c8f78c1dc54a064182971bb2106795",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 17.96,
          "commitsBetweenForRepo": 91,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,27 @@\n-  public void initEditLog() {\n+  public void initEditLog(StartupOption startOpt) throws IOException {\n     Preconditions.checkState(getNamespaceID() !\u003d 0,\n         \"Must know namespace ID before initting edit log\");\n     String nameserviceId \u003d DFSUtil.getNamenodeNameServiceId(conf);\n     if (!HAUtil.isHAEnabled(conf, nameserviceId)) {\n+      // If this NN is not HA\n       editLog.initJournalsForWrite();\n       editLog.recoverUnclosedStreams();\n+    } else if (HAUtil.isHAEnabled(conf, nameserviceId) \u0026\u0026\n+        startOpt \u003d\u003d StartupOption.UPGRADE) {\n+      // This NN is HA, but we\u0027re doing an upgrade so init the edit log for\n+      // write.\n+      editLog.initJournalsForWrite();\n+      long sharedLogCTime \u003d editLog.getSharedLogCTime();\n+      if (this.storage.getCTime() \u003c sharedLogCTime) {\n+        throw new IOException(\"It looks like the shared log is already \" +\n+            \"being upgraded but this NN has not been upgraded yet. You \" +\n+            \"should restart this NameNode with the \u0027\" +\n+            StartupOption.BOOTSTRAPSTANDBY.getName() + \"\u0027 option to bring \" +\n+            \"this NN in sync with the other.\");\n+      }\n+      editLog.recoverUnclosedStreams();\n     } else {\n+      // This NN is HA and we\u0027re not doing an upgrade.\n       editLog.initSharedJournalsForRead();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void initEditLog(StartupOption startOpt) throws IOException {\n    Preconditions.checkState(getNamespaceID() !\u003d 0,\n        \"Must know namespace ID before initting edit log\");\n    String nameserviceId \u003d DFSUtil.getNamenodeNameServiceId(conf);\n    if (!HAUtil.isHAEnabled(conf, nameserviceId)) {\n      // If this NN is not HA\n      editLog.initJournalsForWrite();\n      editLog.recoverUnclosedStreams();\n    } else if (HAUtil.isHAEnabled(conf, nameserviceId) \u0026\u0026\n        startOpt \u003d\u003d StartupOption.UPGRADE) {\n      // This NN is HA, but we\u0027re doing an upgrade so init the edit log for\n      // write.\n      editLog.initJournalsForWrite();\n      long sharedLogCTime \u003d editLog.getSharedLogCTime();\n      if (this.storage.getCTime() \u003c sharedLogCTime) {\n        throw new IOException(\"It looks like the shared log is already \" +\n            \"being upgraded but this NN has not been upgraded yet. You \" +\n            \"should restart this NameNode with the \u0027\" +\n            StartupOption.BOOTSTRAPSTANDBY.getName() + \"\u0027 option to bring \" +\n            \"this NN in sync with the other.\");\n      }\n      editLog.recoverUnclosedStreams();\n    } else {\n      // This NN is HA and we\u0027re not doing an upgrade.\n      editLog.initSharedJournalsForRead();\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImage.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[startOpt-StartupOption]"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "HDFS-5138. Support HDFS upgrade in HA. Contributed by Aaron T. Myers.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1561381 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "25/01/14 12:01 PM",
          "commitName": "edb6dc5f303093c2604cd07b0c0dacf12dbce5de",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "07/01/14 12:52 PM",
          "commitNameOld": "70cff9e2f0c8f78c1dc54a064182971bb2106795",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 17.96,
          "commitsBetweenForRepo": 91,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,27 @@\n-  public void initEditLog() {\n+  public void initEditLog(StartupOption startOpt) throws IOException {\n     Preconditions.checkState(getNamespaceID() !\u003d 0,\n         \"Must know namespace ID before initting edit log\");\n     String nameserviceId \u003d DFSUtil.getNamenodeNameServiceId(conf);\n     if (!HAUtil.isHAEnabled(conf, nameserviceId)) {\n+      // If this NN is not HA\n       editLog.initJournalsForWrite();\n       editLog.recoverUnclosedStreams();\n+    } else if (HAUtil.isHAEnabled(conf, nameserviceId) \u0026\u0026\n+        startOpt \u003d\u003d StartupOption.UPGRADE) {\n+      // This NN is HA, but we\u0027re doing an upgrade so init the edit log for\n+      // write.\n+      editLog.initJournalsForWrite();\n+      long sharedLogCTime \u003d editLog.getSharedLogCTime();\n+      if (this.storage.getCTime() \u003c sharedLogCTime) {\n+        throw new IOException(\"It looks like the shared log is already \" +\n+            \"being upgraded but this NN has not been upgraded yet. You \" +\n+            \"should restart this NameNode with the \u0027\" +\n+            StartupOption.BOOTSTRAPSTANDBY.getName() + \"\u0027 option to bring \" +\n+            \"this NN in sync with the other.\");\n+      }\n+      editLog.recoverUnclosedStreams();\n     } else {\n+      // This NN is HA and we\u0027re not doing an upgrade.\n       editLog.initSharedJournalsForRead();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void initEditLog(StartupOption startOpt) throws IOException {\n    Preconditions.checkState(getNamespaceID() !\u003d 0,\n        \"Must know namespace ID before initting edit log\");\n    String nameserviceId \u003d DFSUtil.getNamenodeNameServiceId(conf);\n    if (!HAUtil.isHAEnabled(conf, nameserviceId)) {\n      // If this NN is not HA\n      editLog.initJournalsForWrite();\n      editLog.recoverUnclosedStreams();\n    } else if (HAUtil.isHAEnabled(conf, nameserviceId) \u0026\u0026\n        startOpt \u003d\u003d StartupOption.UPGRADE) {\n      // This NN is HA, but we\u0027re doing an upgrade so init the edit log for\n      // write.\n      editLog.initJournalsForWrite();\n      long sharedLogCTime \u003d editLog.getSharedLogCTime();\n      if (this.storage.getCTime() \u003c sharedLogCTime) {\n        throw new IOException(\"It looks like the shared log is already \" +\n            \"being upgraded but this NN has not been upgraded yet. You \" +\n            \"should restart this NameNode with the \u0027\" +\n            StartupOption.BOOTSTRAPSTANDBY.getName() + \"\u0027 option to bring \" +\n            \"this NN in sync with the other.\");\n      }\n      editLog.recoverUnclosedStreams();\n    } else {\n      // This NN is HA and we\u0027re not doing an upgrade.\n      editLog.initSharedJournalsForRead();\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImage.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[IOException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-5138. Support HDFS upgrade in HA. Contributed by Aaron T. Myers.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1561381 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "25/01/14 12:01 PM",
          "commitName": "edb6dc5f303093c2604cd07b0c0dacf12dbce5de",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "07/01/14 12:52 PM",
          "commitNameOld": "70cff9e2f0c8f78c1dc54a064182971bb2106795",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 17.96,
          "commitsBetweenForRepo": 91,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,27 @@\n-  public void initEditLog() {\n+  public void initEditLog(StartupOption startOpt) throws IOException {\n     Preconditions.checkState(getNamespaceID() !\u003d 0,\n         \"Must know namespace ID before initting edit log\");\n     String nameserviceId \u003d DFSUtil.getNamenodeNameServiceId(conf);\n     if (!HAUtil.isHAEnabled(conf, nameserviceId)) {\n+      // If this NN is not HA\n       editLog.initJournalsForWrite();\n       editLog.recoverUnclosedStreams();\n+    } else if (HAUtil.isHAEnabled(conf, nameserviceId) \u0026\u0026\n+        startOpt \u003d\u003d StartupOption.UPGRADE) {\n+      // This NN is HA, but we\u0027re doing an upgrade so init the edit log for\n+      // write.\n+      editLog.initJournalsForWrite();\n+      long sharedLogCTime \u003d editLog.getSharedLogCTime();\n+      if (this.storage.getCTime() \u003c sharedLogCTime) {\n+        throw new IOException(\"It looks like the shared log is already \" +\n+            \"being upgraded but this NN has not been upgraded yet. You \" +\n+            \"should restart this NameNode with the \u0027\" +\n+            StartupOption.BOOTSTRAPSTANDBY.getName() + \"\u0027 option to bring \" +\n+            \"this NN in sync with the other.\");\n+      }\n+      editLog.recoverUnclosedStreams();\n     } else {\n+      // This NN is HA and we\u0027re not doing an upgrade.\n       editLog.initSharedJournalsForRead();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void initEditLog(StartupOption startOpt) throws IOException {\n    Preconditions.checkState(getNamespaceID() !\u003d 0,\n        \"Must know namespace ID before initting edit log\");\n    String nameserviceId \u003d DFSUtil.getNamenodeNameServiceId(conf);\n    if (!HAUtil.isHAEnabled(conf, nameserviceId)) {\n      // If this NN is not HA\n      editLog.initJournalsForWrite();\n      editLog.recoverUnclosedStreams();\n    } else if (HAUtil.isHAEnabled(conf, nameserviceId) \u0026\u0026\n        startOpt \u003d\u003d StartupOption.UPGRADE) {\n      // This NN is HA, but we\u0027re doing an upgrade so init the edit log for\n      // write.\n      editLog.initJournalsForWrite();\n      long sharedLogCTime \u003d editLog.getSharedLogCTime();\n      if (this.storage.getCTime() \u003c sharedLogCTime) {\n        throw new IOException(\"It looks like the shared log is already \" +\n            \"being upgraded but this NN has not been upgraded yet. You \" +\n            \"should restart this NameNode with the \u0027\" +\n            StartupOption.BOOTSTRAPSTANDBY.getName() + \"\u0027 option to bring \" +\n            \"this NN in sync with the other.\");\n      }\n      editLog.recoverUnclosedStreams();\n    } else {\n      // This NN is HA and we\u0027re not doing an upgrade.\n      editLog.initSharedJournalsForRead();\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImage.java",
          "extendedDetails": {}
        }
      ]
    },
    "7accbabdee0b7619ff83514c173e815d290b33bf": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-3573. Supply NamespaceInfo when instantiating JournalManagers. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1356388 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/07/12 11:21 AM",
      "commitName": "7accbabdee0b7619ff83514c173e815d290b33bf",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,11 @@\n+  public void initEditLog() {\n+    Preconditions.checkState(getNamespaceID() !\u003d 0,\n+        \"Must know namespace ID before initting edit log\");\n+    String nameserviceId \u003d DFSUtil.getNamenodeNameServiceId(conf);\n+    if (!HAUtil.isHAEnabled(conf, nameserviceId)) {\n+      editLog.initJournalsForWrite();\n+      editLog.recoverUnclosedStreams();\n+    } else {\n+      editLog.initSharedJournalsForRead();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void initEditLog() {\n    Preconditions.checkState(getNamespaceID() !\u003d 0,\n        \"Must know namespace ID before initting edit log\");\n    String nameserviceId \u003d DFSUtil.getNamenodeNameServiceId(conf);\n    if (!HAUtil.isHAEnabled(conf, nameserviceId)) {\n      editLog.initJournalsForWrite();\n      editLog.recoverUnclosedStreams();\n    } else {\n      editLog.initSharedJournalsForRead();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImage.java"
    }
  }
}