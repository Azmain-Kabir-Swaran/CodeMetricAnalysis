{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "MetricsInvariantChecker.java",
  "functionName": "editSchedule",
  "functionId": "editSchedule",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/invariants/MetricsInvariantChecker.java",
  "functionStartLine": 148,
  "functionEndLine": 182,
  "numCommitsSeen": 3,
  "timeTaken": 585,
  "changeHistory": [
    "af8e9842d2ca566528e09d905b609f1cf160d367"
  ],
  "changeHistoryShort": {
    "af8e9842d2ca566528e09d905b609f1cf160d367": "Yintroduced"
  },
  "changeHistoryDetails": {
    "af8e9842d2ca566528e09d905b609f1cf160d367": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6451. Add RM monitor validating metrics invariants. Contributed by Carlo Curino\n",
      "commitDate": "18/04/17 10:29 AM",
      "commitName": "af8e9842d2ca566528e09d905b609f1cf160d367",
      "commitAuthor": "Chris Douglas",
      "diff": "@@ -0,0 +1,35 @@\n+  public void editSchedule() {\n+    // grab all changed metrics and update bindings\n+    collector.clear();\n+    queueMetrics.getMetrics(collector, false);\n+    jvmMetrics.getMetrics(collector, false);\n+\n+    for (MetricsRecord record : collector.getRecords()) {\n+      for (AbstractMetric am : record.metrics()) {\n+        bindings.put(am.name().replace(\u0027 \u0027, \u0027_\u0027), am.value());\n+      }\n+    }\n+\n+    // evaluate all invariants with new bindings\n+    try {\n+\n+      // fastpath check all invariants at once (much faster)\n+      boolean allInvHold \u003d (boolean) combinedInvariants.eval(bindings);\n+\n+      // if any fails, check individually to produce more insightful log\n+      if (!allInvHold) {\n+        for (Map.Entry\u003cString, CompiledScript\u003e e : invariants.entrySet()) {\n+          boolean invariantsHold \u003d (boolean) e.getValue().eval(bindings);\n+          if (!invariantsHold) {\n+            // filter bindings to produce minimal set\n+            Map\u003cString, Object\u003e matchingBindings \u003d\n+                extractMatchingBindings(e.getKey(), bindings);\n+            logOrThrow(\"Invariant \\\"\" + e.getKey()\n+                + \"\\\" is NOT holding, with bindings: \" + matchingBindings);\n+          }\n+        }\n+      }\n+    } catch (ScriptException e) {\n+      logOrThrow(e.getMessage());\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void editSchedule() {\n    // grab all changed metrics and update bindings\n    collector.clear();\n    queueMetrics.getMetrics(collector, false);\n    jvmMetrics.getMetrics(collector, false);\n\n    for (MetricsRecord record : collector.getRecords()) {\n      for (AbstractMetric am : record.metrics()) {\n        bindings.put(am.name().replace(\u0027 \u0027, \u0027_\u0027), am.value());\n      }\n    }\n\n    // evaluate all invariants with new bindings\n    try {\n\n      // fastpath check all invariants at once (much faster)\n      boolean allInvHold \u003d (boolean) combinedInvariants.eval(bindings);\n\n      // if any fails, check individually to produce more insightful log\n      if (!allInvHold) {\n        for (Map.Entry\u003cString, CompiledScript\u003e e : invariants.entrySet()) {\n          boolean invariantsHold \u003d (boolean) e.getValue().eval(bindings);\n          if (!invariantsHold) {\n            // filter bindings to produce minimal set\n            Map\u003cString, Object\u003e matchingBindings \u003d\n                extractMatchingBindings(e.getKey(), bindings);\n            logOrThrow(\"Invariant \\\"\" + e.getKey()\n                + \"\\\" is NOT holding, with bindings: \" + matchingBindings);\n          }\n        }\n      }\n    } catch (ScriptException e) {\n      logOrThrow(e.getMessage());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/invariants/MetricsInvariantChecker.java"
    }
  }
}