{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LocalReplica.java",
  "functionName": "getDataInputStream",
  "functionId": "getDataInputStream___f-File__seekOffset-long",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/LocalReplica.java",
  "functionStartLine": 423,
  "functionEndLine": 439,
  "numCommitsSeen": 10,
  "timeTaken": 1966,
  "changeHistory": [
    "6ba9587d370fbf39c129c08c00ebbb894ccc1389",
    "df983b524ab68ea0c70cee9033bfff2d28052cbf"
  ],
  "changeHistoryShort": {
    "6ba9587d370fbf39c129c08c00ebbb894ccc1389": "Ybodychange",
    "df983b524ab68ea0c70cee9033bfff2d28052cbf": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6ba9587d370fbf39c129c08c00ebbb894ccc1389": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10958. Add instrumentation hooks around Datanode disk IO.\n",
      "commitDate": "14/12/16 11:18 AM",
      "commitName": "6ba9587d370fbf39c129c08c00ebbb894ccc1389",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "06/12/16 11:05 AM",
      "commitNameOld": "df983b524ab68ea0c70cee9033bfff2d28052cbf",
      "commitAuthorOld": "Xiaoyu Yao",
      "daysBetweenCommits": 8.01,
      "commitsBetweenForRepo": 51,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,17 @@\n   private FileInputStream getDataInputStream(File f, long seekOffset)\n       throws IOException {\n     FileInputStream fis;\n+    final FileIoProvider fileIoProvider \u003d getFileIoProvider();\n     if (NativeIO.isAvailable()) {\n-      fis \u003d NativeIO.getShareDeleteFileInputStream(f, seekOffset);\n+      fis \u003d fileIoProvider.getShareDeleteFileInputStream(\n+          getVolume(), f, seekOffset);\n     } else {\n       try {\n-        fis \u003d FsDatasetUtil.openAndSeek(f, seekOffset);\n+        fis \u003d fileIoProvider.openAndSeek(getVolume(), f, seekOffset);\n       } catch (FileNotFoundException fnfe) {\n         throw new IOException(\"Expected block file at \" + f +\n             \" does not exist.\");\n       }\n     }\n     return fis;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private FileInputStream getDataInputStream(File f, long seekOffset)\n      throws IOException {\n    FileInputStream fis;\n    final FileIoProvider fileIoProvider \u003d getFileIoProvider();\n    if (NativeIO.isAvailable()) {\n      fis \u003d fileIoProvider.getShareDeleteFileInputStream(\n          getVolume(), f, seekOffset);\n    } else {\n      try {\n        fis \u003d fileIoProvider.openAndSeek(getVolume(), f, seekOffset);\n      } catch (FileNotFoundException fnfe) {\n        throw new IOException(\"Expected block file at \" + f +\n            \" does not exist.\");\n      }\n    }\n    return fis;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/LocalReplica.java",
      "extendedDetails": {}
    },
    "df983b524ab68ea0c70cee9033bfff2d28052cbf": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-10930. Refactor: Wrap Datanode IO related operations. Contributed by Xiaoyu Yao.\n",
      "commitDate": "06/12/16 11:05 AM",
      "commitName": "df983b524ab68ea0c70cee9033bfff2d28052cbf",
      "commitAuthor": "Xiaoyu Yao",
      "diff": "@@ -0,0 +1,15 @@\n+  private FileInputStream getDataInputStream(File f, long seekOffset)\n+      throws IOException {\n+    FileInputStream fis;\n+    if (NativeIO.isAvailable()) {\n+      fis \u003d NativeIO.getShareDeleteFileInputStream(f, seekOffset);\n+    } else {\n+      try {\n+        fis \u003d FsDatasetUtil.openAndSeek(f, seekOffset);\n+      } catch (FileNotFoundException fnfe) {\n+        throw new IOException(\"Expected block file at \" + f +\n+            \" does not exist.\");\n+      }\n+    }\n+    return fis;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private FileInputStream getDataInputStream(File f, long seekOffset)\n      throws IOException {\n    FileInputStream fis;\n    if (NativeIO.isAvailable()) {\n      fis \u003d NativeIO.getShareDeleteFileInputStream(f, seekOffset);\n    } else {\n      try {\n        fis \u003d FsDatasetUtil.openAndSeek(f, seekOffset);\n      } catch (FileNotFoundException fnfe) {\n        throw new IOException(\"Expected block file at \" + f +\n            \" does not exist.\");\n      }\n    }\n    return fis;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/LocalReplica.java"
    }
  }
}