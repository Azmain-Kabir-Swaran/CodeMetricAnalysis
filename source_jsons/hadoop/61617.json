{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DominantResourceCalculator.java",
  "functionName": "calculateShare",
  "functionId": "calculateShare___clusterRes-ResourceInformation__res-ResourceInformation",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/resource/DominantResourceCalculator.java",
  "functionStartLine": 307,
  "functionEndLine": 313,
  "numCommitsSeen": 37,
  "timeTaken": 1819,
  "changeHistory": [
    "bb26514ba9e8a038749c4acd592a47d5cd5bf92a",
    "12a095a496dd59066d73a7a6c24129b5b6a9d650",
    "a0030c8c6f5489d8285632a651394b2b2320255c"
  ],
  "changeHistoryShort": {
    "bb26514ba9e8a038749c4acd592a47d5cd5bf92a": "Ybodychange",
    "12a095a496dd59066d73a7a6c24129b5b6a9d650": "Ybodychange",
    "a0030c8c6f5489d8285632a651394b2b2320255c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bb26514ba9e8a038749c4acd592a47d5cd5bf92a": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9785. Fix DominantResourceCalculator when one resource is zero. Contributed by Bibin A Chundatt, Sunil Govindan, Bilwa S T.\n",
      "commitDate": "02/09/19 11:55 PM",
      "commitName": "bb26514ba9e8a038749c4acd592a47d5cd5bf92a",
      "commitAuthor": "Zhankun Tang",
      "commitDateOld": "06/05/19 5:00 AM",
      "commitNameOld": "12b7059ddc8d8f67dd7131565f03a0e09cb92ca7",
      "commitAuthorOld": "Weiwei Yang",
      "daysBetweenCommits": 119.79,
      "commitsBetweenForRepo": 980,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,4 +1,7 @@\n   private double calculateShare(ResourceInformation clusterRes,\n       ResourceInformation res) {\n+    if(clusterRes.getValue() \u003d\u003d 0) {\n+      return Float.POSITIVE_INFINITY;\n+    }\n     return (double) res.getValue() / clusterRes.getValue();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private double calculateShare(ResourceInformation clusterRes,\n      ResourceInformation res) {\n    if(clusterRes.getValue() \u003d\u003d 0) {\n      return Float.POSITIVE_INFINITY;\n    }\n    return (double) res.getValue() / clusterRes.getValue();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/resource/DominantResourceCalculator.java",
      "extendedDetails": {}
    },
    "12a095a496dd59066d73a7a6c24129b5b6a9d650": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7159. Normalize unit of resource objects in RM to avoid unit conversion in critical path. Contributed by Manikandan R.\n",
      "commitDate": "02/08/18 9:59 AM",
      "commitName": "12a095a496dd59066d73a7a6c24129b5b6a9d650",
      "commitAuthor": "Sunil G",
      "commitDateOld": "25/05/18 9:06 AM",
      "commitNameOld": "8d5509c68156faaa6641f4e747fc9ff80adccf88",
      "commitAuthorOld": "Eric E Payne",
      "daysBetweenCommits": 69.04,
      "commitsBetweenForRepo": 466,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,4 @@\n   private double calculateShare(ResourceInformation clusterRes,\n       ResourceInformation res) {\n-      // Convert the resources\u0027 units into the cluster resource\u0027s units\n-    long value \u003d UnitsConversionUtil.convert(res.getUnits(),\n-          clusterRes.getUnits(), res.getValue());\n-\n-    return (double) value / clusterRes.getValue();\n+    return (double) res.getValue() / clusterRes.getValue();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private double calculateShare(ResourceInformation clusterRes,\n      ResourceInformation res) {\n    return (double) res.getValue() / clusterRes.getValue();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/resource/DominantResourceCalculator.java",
      "extendedDetails": {}
    },
    "a0030c8c6f5489d8285632a651394b2b2320255c": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6610. [YARN-3926] DominantResourceCalculator#getResourceAsValue dominant param is updated to handle multiple resources. Contributed by Daniel Templeton.\n",
      "commitDate": "12/09/17 9:19 AM",
      "commitName": "a0030c8c6f5489d8285632a651394b2b2320255c",
      "commitAuthor": "Sunil G",
      "diff": "@@ -0,0 +1,8 @@\n+  private double calculateShare(ResourceInformation clusterRes,\n+      ResourceInformation res) {\n+      // Convert the resources\u0027 units into the cluster resource\u0027s units\n+    long value \u003d UnitsConversionUtil.convert(res.getUnits(),\n+          clusterRes.getUnits(), res.getValue());\n+\n+    return (double) value / clusterRes.getValue();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private double calculateShare(ResourceInformation clusterRes,\n      ResourceInformation res) {\n      // Convert the resources\u0027 units into the cluster resource\u0027s units\n    long value \u003d UnitsConversionUtil.convert(res.getUnits(),\n          clusterRes.getUnits(), res.getValue());\n\n    return (double) value / clusterRes.getValue();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/resource/DominantResourceCalculator.java"
    }
  }
}