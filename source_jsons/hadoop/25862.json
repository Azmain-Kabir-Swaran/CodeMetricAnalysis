{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMContainerAllocator.java",
  "functionName": "preemptReduce",
  "functionId": "preemptReduce___toPreempt-int",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerAllocator.java",
  "functionStartLine": 1521,
  "functionEndLine": 1541,
  "numCommitsSeen": 83,
  "timeTaken": 7838,
  "changeHistory": [
    "26421dd7dc6e8b4bfbae00861f727437e37dd021",
    "914a9709b91dbbedf251e8c135019741e6ed01b2",
    "fffdf661e30afd10331d2153ff052c141b7ebe4b",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "26421dd7dc6e8b4bfbae00861f727437e37dd021": "Ybodychange",
    "914a9709b91dbbedf251e8c135019741e6ed01b2": "Ybodychange",
    "fffdf661e30afd10331d2153ff052c141b7ebe4b": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "26421dd7dc6e8b4bfbae00861f727437e37dd021": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5825. Provide diagnostics for reducers killed during ramp down. Contributed by Gera Shegalov\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1586479 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/04/14 3:02 PM",
      "commitName": "26421dd7dc6e8b4bfbae00861f727437e37dd021",
      "commitAuthor": "Jason Darrell Lowe",
      "commitDateOld": "06/02/14 3:27 PM",
      "commitNameOld": "914a9709b91dbbedf251e8c135019741e6ed01b2",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 62.94,
      "commitsBetweenForRepo": 533,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n     void preemptReduce(int toPreempt) {\n       List\u003cTaskAttemptId\u003e reduceList \u003d new ArrayList\u003cTaskAttemptId\u003e\n         (reduces.keySet());\n       //sort reduces on progress\n       Collections.sort(reduceList,\n           new Comparator\u003cTaskAttemptId\u003e() {\n         @Override\n         public int compare(TaskAttemptId o1, TaskAttemptId o2) {\n           return Float.compare(\n               getJob().getTask(o1.getTaskId()).getAttempt(o1).getProgress(),\n               getJob().getTask(o2.getTaskId()).getAttempt(o2).getProgress());\n         }\n       });\n       \n       for (int i \u003d 0; i \u003c toPreempt \u0026\u0026 reduceList.size() \u003e 0; i++) {\n         TaskAttemptId id \u003d reduceList.remove(0);//remove the one on top\n         LOG.info(\"Preempting \" + id);\n         preemptionWaitingReduces.add(id);\n-        eventHandler.handle(new TaskAttemptEvent(id, TaskAttemptEventType.TA_KILL));\n+        eventHandler.handle(new TaskAttemptKillEvent(id, RAMPDOWN_DIAGNOSTIC));\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    void preemptReduce(int toPreempt) {\n      List\u003cTaskAttemptId\u003e reduceList \u003d new ArrayList\u003cTaskAttemptId\u003e\n        (reduces.keySet());\n      //sort reduces on progress\n      Collections.sort(reduceList,\n          new Comparator\u003cTaskAttemptId\u003e() {\n        @Override\n        public int compare(TaskAttemptId o1, TaskAttemptId o2) {\n          return Float.compare(\n              getJob().getTask(o1.getTaskId()).getAttempt(o1).getProgress(),\n              getJob().getTask(o2.getTaskId()).getAttempt(o2).getProgress());\n        }\n      });\n      \n      for (int i \u003d 0; i \u003c toPreempt \u0026\u0026 reduceList.size() \u003e 0; i++) {\n        TaskAttemptId id \u003d reduceList.remove(0);//remove the one on top\n        LOG.info(\"Preempting \" + id);\n        preemptionWaitingReduces.add(id);\n        eventHandler.handle(new TaskAttemptKillEvent(id, RAMPDOWN_DIAGNOSTIC));\n      }\n    }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerAllocator.java",
      "extendedDetails": {}
    },
    "914a9709b91dbbedf251e8c135019741e6ed01b2": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5744. Job hangs because RMContainerAllocator.preemptReduce() violates the comparator contract (Gera Shegalov via kasha)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1565478 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/02/14 3:27 PM",
      "commitName": "914a9709b91dbbedf251e8c135019741e6ed01b2",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "03/01/14 9:27 AM",
      "commitNameOld": "1a8781f1f9d4916369be8090690fd97131443159",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 34.25,
      "commitsBetweenForRepo": 211,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n     void preemptReduce(int toPreempt) {\n       List\u003cTaskAttemptId\u003e reduceList \u003d new ArrayList\u003cTaskAttemptId\u003e\n         (reduces.keySet());\n       //sort reduces on progress\n       Collections.sort(reduceList,\n           new Comparator\u003cTaskAttemptId\u003e() {\n         @Override\n         public int compare(TaskAttemptId o1, TaskAttemptId o2) {\n-          float p \u003d getJob().getTask(o1.getTaskId()).getAttempt(o1).getProgress() -\n-              getJob().getTask(o2.getTaskId()).getAttempt(o2).getProgress();\n-          return p \u003e\u003d 0 ? 1 : -1;\n+          return Float.compare(\n+              getJob().getTask(o1.getTaskId()).getAttempt(o1).getProgress(),\n+              getJob().getTask(o2.getTaskId()).getAttempt(o2).getProgress());\n         }\n       });\n       \n       for (int i \u003d 0; i \u003c toPreempt \u0026\u0026 reduceList.size() \u003e 0; i++) {\n         TaskAttemptId id \u003d reduceList.remove(0);//remove the one on top\n         LOG.info(\"Preempting \" + id);\n         preemptionWaitingReduces.add(id);\n         eventHandler.handle(new TaskAttemptEvent(id, TaskAttemptEventType.TA_KILL));\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    void preemptReduce(int toPreempt) {\n      List\u003cTaskAttemptId\u003e reduceList \u003d new ArrayList\u003cTaskAttemptId\u003e\n        (reduces.keySet());\n      //sort reduces on progress\n      Collections.sort(reduceList,\n          new Comparator\u003cTaskAttemptId\u003e() {\n        @Override\n        public int compare(TaskAttemptId o1, TaskAttemptId o2) {\n          return Float.compare(\n              getJob().getTask(o1.getTaskId()).getAttempt(o1).getProgress(),\n              getJob().getTask(o2.getTaskId()).getAttempt(o2).getProgress());\n        }\n      });\n      \n      for (int i \u003d 0; i \u003c toPreempt \u0026\u0026 reduceList.size() \u003e 0; i++) {\n        TaskAttemptId id \u003d reduceList.remove(0);//remove the one on top\n        LOG.info(\"Preempting \" + id);\n        preemptionWaitingReduces.add(id);\n        eventHandler.handle(new TaskAttemptEvent(id, TaskAttemptEventType.TA_KILL));\n      }\n    }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerAllocator.java",
      "extendedDetails": {}
    },
    "fffdf661e30afd10331d2153ff052c141b7ebe4b": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2821. Added missing fields (resourcePerMap \u0026 resourcePerReduce) to JobSummary logs. Contributed by Mahadev Konar.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1188528 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/10/11 11:26 PM",
      "commitName": "fffdf661e30afd10331d2153ff052c141b7ebe4b",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "20/10/11 4:45 AM",
      "commitNameOld": "df2991c0cbc3f35c2640b93680667507c4f810dd",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 4.78,
      "commitsBetweenForRepo": 35,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,21 @@\n     void preemptReduce(int toPreempt) {\n-      List\u003cTaskAttemptId\u003e reduceList \u003d new ArrayList(reduces.keySet());\n+      List\u003cTaskAttemptId\u003e reduceList \u003d new ArrayList\u003cTaskAttemptId\u003e\n+        (reduces.keySet());\n       //sort reduces on progress\n       Collections.sort(reduceList,\n           new Comparator\u003cTaskAttemptId\u003e() {\n         @Override\n         public int compare(TaskAttemptId o1, TaskAttemptId o2) {\n           float p \u003d getJob().getTask(o1.getTaskId()).getAttempt(o1).getProgress() -\n               getJob().getTask(o2.getTaskId()).getAttempt(o2).getProgress();\n           return p \u003e\u003d 0 ? 1 : -1;\n         }\n       });\n       \n       for (int i \u003d 0; i \u003c toPreempt \u0026\u0026 reduceList.size() \u003e 0; i++) {\n         TaskAttemptId id \u003d reduceList.remove(0);//remove the one on top\n         LOG.info(\"Preempting \" + id);\n         preemptionWaitingReduces.add(id);\n         eventHandler.handle(new TaskAttemptEvent(id, TaskAttemptEventType.TA_KILL));\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    void preemptReduce(int toPreempt) {\n      List\u003cTaskAttemptId\u003e reduceList \u003d new ArrayList\u003cTaskAttemptId\u003e\n        (reduces.keySet());\n      //sort reduces on progress\n      Collections.sort(reduceList,\n          new Comparator\u003cTaskAttemptId\u003e() {\n        @Override\n        public int compare(TaskAttemptId o1, TaskAttemptId o2) {\n          float p \u003d getJob().getTask(o1.getTaskId()).getAttempt(o1).getProgress() -\n              getJob().getTask(o2.getTaskId()).getAttempt(o2).getProgress();\n          return p \u003e\u003d 0 ? 1 : -1;\n        }\n      });\n      \n      for (int i \u003d 0; i \u003c toPreempt \u0026\u0026 reduceList.size() \u003e 0; i++) {\n        TaskAttemptId id \u003d reduceList.remove(0);//remove the one on top\n        LOG.info(\"Preempting \" + id);\n        preemptionWaitingReduces.add(id);\n        eventHandler.handle(new TaskAttemptEvent(id, TaskAttemptEventType.TA_KILL));\n      }\n    }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerAllocator.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    void preemptReduce(int toPreempt) {\n      List\u003cTaskAttemptId\u003e reduceList \u003d new ArrayList(reduces.keySet());\n      //sort reduces on progress\n      Collections.sort(reduceList,\n          new Comparator\u003cTaskAttemptId\u003e() {\n        @Override\n        public int compare(TaskAttemptId o1, TaskAttemptId o2) {\n          float p \u003d getJob().getTask(o1.getTaskId()).getAttempt(o1).getProgress() -\n              getJob().getTask(o2.getTaskId()).getAttempt(o2).getProgress();\n          return p \u003e\u003d 0 ? 1 : -1;\n        }\n      });\n      \n      for (int i \u003d 0; i \u003c toPreempt \u0026\u0026 reduceList.size() \u003e 0; i++) {\n        TaskAttemptId id \u003d reduceList.remove(0);//remove the one on top\n        LOG.info(\"Preempting \" + id);\n        preemptionWaitingReduces.add(id);\n        eventHandler.handle(new TaskAttemptEvent(id, TaskAttemptEventType.TA_KILL));\n      }\n    }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerAllocator.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerAllocator.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerAllocator.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,20 @@\n+    void preemptReduce(int toPreempt) {\n+      List\u003cTaskAttemptId\u003e reduceList \u003d new ArrayList(reduces.keySet());\n+      //sort reduces on progress\n+      Collections.sort(reduceList,\n+          new Comparator\u003cTaskAttemptId\u003e() {\n+        @Override\n+        public int compare(TaskAttemptId o1, TaskAttemptId o2) {\n+          float p \u003d getJob().getTask(o1.getTaskId()).getAttempt(o1).getProgress() -\n+              getJob().getTask(o2.getTaskId()).getAttempt(o2).getProgress();\n+          return p \u003e\u003d 0 ? 1 : -1;\n+        }\n+      });\n+      \n+      for (int i \u003d 0; i \u003c toPreempt \u0026\u0026 reduceList.size() \u003e 0; i++) {\n+        TaskAttemptId id \u003d reduceList.remove(0);//remove the one on top\n+        LOG.info(\"Preempting \" + id);\n+        preemptionWaitingReduces.add(id);\n+        eventHandler.handle(new TaskAttemptEvent(id, TaskAttemptEventType.TA_KILL));\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    void preemptReduce(int toPreempt) {\n      List\u003cTaskAttemptId\u003e reduceList \u003d new ArrayList(reduces.keySet());\n      //sort reduces on progress\n      Collections.sort(reduceList,\n          new Comparator\u003cTaskAttemptId\u003e() {\n        @Override\n        public int compare(TaskAttemptId o1, TaskAttemptId o2) {\n          float p \u003d getJob().getTask(o1.getTaskId()).getAttempt(o1).getProgress() -\n              getJob().getTask(o2.getTaskId()).getAttempt(o2).getProgress();\n          return p \u003e\u003d 0 ? 1 : -1;\n        }\n      });\n      \n      for (int i \u003d 0; i \u003c toPreempt \u0026\u0026 reduceList.size() \u003e 0; i++) {\n        TaskAttemptId id \u003d reduceList.remove(0);//remove the one on top\n        LOG.info(\"Preempting \" + id);\n        preemptionWaitingReduces.add(id);\n        eventHandler.handle(new TaskAttemptEvent(id, TaskAttemptEventType.TA_KILL));\n      }\n    }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerAllocator.java"
    }
  }
}