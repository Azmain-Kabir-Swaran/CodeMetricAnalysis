{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SchedulerMetrics.java",
  "functionName": "addAMRuntime",
  "functionId": "addAMRuntime___appId-ApplicationId__traceStartTimeMS-long__traceEndTimeMS-long__simulateStartTimeMS-long__simulateEndTimeMS-long",
  "sourceFilePath": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/SchedulerMetrics.java",
  "functionStartLine": 661,
  "functionEndLine": 674,
  "numCommitsSeen": 21,
  "timeTaken": 1949,
  "changeHistory": [
    "6a5516c2381f107d96b8326939514de3c6e53d3d",
    "b0c2c856192e71145c012504511fad172436131b",
    "e07f3c87cd3542760efcf713f909375b69eec00f"
  ],
  "changeHistoryShort": {
    "6a5516c2381f107d96b8326939514de3c6e53d3d": "Ymultichange(Ymovefromfile,Ybodychange)",
    "b0c2c856192e71145c012504511fad172436131b": "Ybodychange",
    "e07f3c87cd3542760efcf713f909375b69eec00f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6a5516c2381f107d96b8326939514de3c6e53d3d": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "YARN-5654. Not be able to run SLS with FairScheduler (yufeigu via rkanter)\n",
      "commitDate": "29/03/17 4:18 PM",
      "commitName": "6a5516c2381f107d96b8326939514de3c6e53d3d",
      "commitAuthor": "Robert Kanter",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-5654. Not be able to run SLS with FairScheduler (yufeigu via rkanter)\n",
          "commitDate": "29/03/17 4:18 PM",
          "commitName": "6a5516c2381f107d96b8326939514de3c6e53d3d",
          "commitAuthor": "Robert Kanter",
          "commitDateOld": "29/03/17 2:37 PM",
          "commitNameOld": "4966a6e26e45d7dc36e0b270066ff7c87bcd00cc",
          "commitAuthorOld": "Andrew Wang",
          "daysBetweenCommits": 0.07,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,14 @@\n-  public void addAMRuntime(ApplicationId appId,\n-                           long traceStartTimeMS, long traceEndTimeMS,\n-                           long simulateStartTimeMS, long simulateEndTimeMS) {\n-\n-    if (metricsON) {\n-      try {\n-        // write job runtime information\n-        StringBuilder sb \u003d new StringBuilder();\n-        sb.append(appId).append(\",\").append(traceStartTimeMS).append(\",\")\n-            .append(traceEndTimeMS).append(\",\").append(simulateStartTimeMS)\n-            .append(\",\").append(simulateEndTimeMS);\n-        jobRuntimeLogBW.write(sb.toString() + EOL);\n-        jobRuntimeLogBW.flush();\n-      } catch (IOException e) {\n-        e.printStackTrace();\n-      }\n+  public void addAMRuntime(ApplicationId appId, long traceStartTimeMS,\n+      long traceEndTimeMS, long simulateStartTimeMS, long simulateEndTimeMS) {\n+    try {\n+      // write job runtime information\n+      StringBuilder sb \u003d new StringBuilder();\n+      sb.append(appId).append(\",\").append(traceStartTimeMS).append(\",\")\n+          .append(traceEndTimeMS).append(\",\").append(simulateStartTimeMS)\n+          .append(\",\").append(simulateEndTimeMS);\n+      jobRuntimeLogBW.write(sb.toString() + EOL);\n+      jobRuntimeLogBW.flush();\n+    } catch (IOException e) {\n+      LOG.info(e.getMessage());\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void addAMRuntime(ApplicationId appId, long traceStartTimeMS,\n      long traceEndTimeMS, long simulateStartTimeMS, long simulateEndTimeMS) {\n    try {\n      // write job runtime information\n      StringBuilder sb \u003d new StringBuilder();\n      sb.append(appId).append(\",\").append(traceStartTimeMS).append(\",\")\n          .append(traceEndTimeMS).append(\",\").append(simulateStartTimeMS)\n          .append(\",\").append(simulateEndTimeMS);\n      jobRuntimeLogBW.write(sb.toString() + EOL);\n      jobRuntimeLogBW.flush();\n    } catch (IOException e) {\n      LOG.info(e.getMessage());\n    }\n  }",
          "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/SchedulerMetrics.java",
          "extendedDetails": {
            "oldPath": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/SLSCapacityScheduler.java",
            "newPath": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/SchedulerMetrics.java",
            "oldMethodName": "addAMRuntime",
            "newMethodName": "addAMRuntime"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-5654. Not be able to run SLS with FairScheduler (yufeigu via rkanter)\n",
          "commitDate": "29/03/17 4:18 PM",
          "commitName": "6a5516c2381f107d96b8326939514de3c6e53d3d",
          "commitAuthor": "Robert Kanter",
          "commitDateOld": "29/03/17 2:37 PM",
          "commitNameOld": "4966a6e26e45d7dc36e0b270066ff7c87bcd00cc",
          "commitAuthorOld": "Andrew Wang",
          "daysBetweenCommits": 0.07,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,14 @@\n-  public void addAMRuntime(ApplicationId appId,\n-                           long traceStartTimeMS, long traceEndTimeMS,\n-                           long simulateStartTimeMS, long simulateEndTimeMS) {\n-\n-    if (metricsON) {\n-      try {\n-        // write job runtime information\n-        StringBuilder sb \u003d new StringBuilder();\n-        sb.append(appId).append(\",\").append(traceStartTimeMS).append(\",\")\n-            .append(traceEndTimeMS).append(\",\").append(simulateStartTimeMS)\n-            .append(\",\").append(simulateEndTimeMS);\n-        jobRuntimeLogBW.write(sb.toString() + EOL);\n-        jobRuntimeLogBW.flush();\n-      } catch (IOException e) {\n-        e.printStackTrace();\n-      }\n+  public void addAMRuntime(ApplicationId appId, long traceStartTimeMS,\n+      long traceEndTimeMS, long simulateStartTimeMS, long simulateEndTimeMS) {\n+    try {\n+      // write job runtime information\n+      StringBuilder sb \u003d new StringBuilder();\n+      sb.append(appId).append(\",\").append(traceStartTimeMS).append(\",\")\n+          .append(traceEndTimeMS).append(\",\").append(simulateStartTimeMS)\n+          .append(\",\").append(simulateEndTimeMS);\n+      jobRuntimeLogBW.write(sb.toString() + EOL);\n+      jobRuntimeLogBW.flush();\n+    } catch (IOException e) {\n+      LOG.info(e.getMessage());\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void addAMRuntime(ApplicationId appId, long traceStartTimeMS,\n      long traceEndTimeMS, long simulateStartTimeMS, long simulateEndTimeMS) {\n    try {\n      // write job runtime information\n      StringBuilder sb \u003d new StringBuilder();\n      sb.append(appId).append(\",\").append(traceStartTimeMS).append(\",\")\n          .append(traceEndTimeMS).append(\",\").append(simulateStartTimeMS)\n          .append(\",\").append(simulateEndTimeMS);\n      jobRuntimeLogBW.write(sb.toString() + EOL);\n      jobRuntimeLogBW.flush();\n    } catch (IOException e) {\n      LOG.info(e.getMessage());\n    }\n  }",
          "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/SchedulerMetrics.java",
          "extendedDetails": {}
        }
      ]
    },
    "b0c2c856192e71145c012504511fad172436131b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1726. ResourceSchedulerWrapper broken due to AbstractYarnScheduler. (Wei Yan via kasha)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1613547 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/07/14 6:29 PM",
      "commitName": "b0c2c856192e71145c012504511fad172436131b",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "25/07/14 10:12 AM",
      "commitNameOld": "77363b9d839e47bef2325b8682eabe00d4c83354",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 0.35,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,18 @@\n   public void addAMRuntime(ApplicationId appId,\n                            long traceStartTimeMS, long traceEndTimeMS,\n                            long simulateStartTimeMS, long simulateEndTimeMS) {\n \n-    try {\n-      // write job runtime information\n-      StringBuilder sb \u003d new StringBuilder();\n-      sb.append(appId).append(\",\").append(traceStartTimeMS).append(\",\")\n-              .append(traceEndTimeMS).append(\",\").append(simulateStartTimeMS)\n-              .append(\",\").append(simulateEndTimeMS);\n-      jobRuntimeLogBW.write(sb.toString() + EOL);\n-      jobRuntimeLogBW.flush();\n-    } catch (IOException e) {\n-      e.printStackTrace();\n+    if (metricsON) {\n+      try {\n+        // write job runtime information\n+        StringBuilder sb \u003d new StringBuilder();\n+        sb.append(appId).append(\",\").append(traceStartTimeMS).append(\",\")\n+            .append(traceEndTimeMS).append(\",\").append(simulateStartTimeMS)\n+            .append(\",\").append(simulateEndTimeMS);\n+        jobRuntimeLogBW.write(sb.toString() + EOL);\n+        jobRuntimeLogBW.flush();\n+      } catch (IOException e) {\n+        e.printStackTrace();\n+      }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void addAMRuntime(ApplicationId appId,\n                           long traceStartTimeMS, long traceEndTimeMS,\n                           long simulateStartTimeMS, long simulateEndTimeMS) {\n\n    if (metricsON) {\n      try {\n        // write job runtime information\n        StringBuilder sb \u003d new StringBuilder();\n        sb.append(appId).append(\",\").append(traceStartTimeMS).append(\",\")\n            .append(traceEndTimeMS).append(\",\").append(simulateStartTimeMS)\n            .append(\",\").append(simulateEndTimeMS);\n        jobRuntimeLogBW.write(sb.toString() + EOL);\n        jobRuntimeLogBW.flush();\n      } catch (IOException e) {\n        e.printStackTrace();\n      }\n    }\n  }",
      "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/SLSCapacityScheduler.java",
      "extendedDetails": {}
    },
    "e07f3c87cd3542760efcf713f909375b69eec00f": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1471. Preserve scheduler typeinfo in simulator to work with resource monitors.\nContributed by Carlo Curino.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1552173 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/12/13 4:07 PM",
      "commitName": "e07f3c87cd3542760efcf713f909375b69eec00f",
      "commitAuthor": "Christopher Douglas",
      "diff": "@@ -0,0 +1,16 @@\n+  public void addAMRuntime(ApplicationId appId,\n+                           long traceStartTimeMS, long traceEndTimeMS,\n+                           long simulateStartTimeMS, long simulateEndTimeMS) {\n+\n+    try {\n+      // write job runtime information\n+      StringBuilder sb \u003d new StringBuilder();\n+      sb.append(appId).append(\",\").append(traceStartTimeMS).append(\",\")\n+              .append(traceEndTimeMS).append(\",\").append(simulateStartTimeMS)\n+              .append(\",\").append(simulateEndTimeMS);\n+      jobRuntimeLogBW.write(sb.toString() + EOL);\n+      jobRuntimeLogBW.flush();\n+    } catch (IOException e) {\n+      e.printStackTrace();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void addAMRuntime(ApplicationId appId,\n                           long traceStartTimeMS, long traceEndTimeMS,\n                           long simulateStartTimeMS, long simulateEndTimeMS) {\n\n    try {\n      // write job runtime information\n      StringBuilder sb \u003d new StringBuilder();\n      sb.append(appId).append(\",\").append(traceStartTimeMS).append(\",\")\n              .append(traceEndTimeMS).append(\",\").append(simulateStartTimeMS)\n              .append(\",\").append(simulateEndTimeMS);\n      jobRuntimeLogBW.write(sb.toString() + EOL);\n      jobRuntimeLogBW.flush();\n    } catch (IOException e) {\n      e.printStackTrace();\n    }\n  }",
      "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/SLSCapacityScheduler.java"
    }
  }
}