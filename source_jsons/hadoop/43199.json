{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ServiceClient.java",
  "functionName": "addAMEnv",
  "functionId": "addAMEnv",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
  "functionStartLine": 1261,
  "functionEndLine": 1286,
  "numCommitsSeen": 62,
  "timeTaken": 5017,
  "changeHistory": [
    "24c53e057a237f78e1433d724df5ffe7961579a5",
    "2064ca015d1584263aac0cc20c60b925a3aff612",
    "a127f7b0fbde3942ca4329d5463bb8fe421daf7b",
    "a6c4bd74b636d0715ffb4c1aca9ef4e49201aa02",
    "40ab068eabe50875449d601471619a4e82fff86d",
    "2191f5b533c6b4763f5d443d21127f1f8552ce64",
    "1888318c89776f0bf354c1b13e3ee169e14ff638"
  ],
  "changeHistoryShort": {
    "24c53e057a237f78e1433d724df5ffe7961579a5": "Ymultichange(Ymodifierchange,Ybodychange)",
    "2064ca015d1584263aac0cc20c60b925a3aff612": "Ybodychange",
    "a127f7b0fbde3942ca4329d5463bb8fe421daf7b": "Ybodychange",
    "a6c4bd74b636d0715ffb4c1aca9ef4e49201aa02": "Yparameterchange",
    "40ab068eabe50875449d601471619a4e82fff86d": "Yfilerename",
    "2191f5b533c6b4763f5d443d21127f1f8552ce64": "Ybodychange",
    "1888318c89776f0bf354c1b13e3ee169e14ff638": "Yintroduced"
  },
  "changeHistoryDetails": {
    "24c53e057a237f78e1433d724df5ffe7961579a5": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-9546. Add configuration option for YARN Native services AM classpath. Contributed by Gergely Pollak.\n",
      "commitDate": "20/05/19 7:53 AM",
      "commitName": "24c53e057a237f78e1433d724df5ffe7961579a5",
      "commitAuthor": "Sunil G",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-9546. Add configuration option for YARN Native services AM classpath. Contributed by Gergely Pollak.\n",
          "commitDate": "20/05/19 7:53 AM",
          "commitName": "24c53e057a237f78e1433d724df5ffe7961579a5",
          "commitAuthor": "Sunil G",
          "commitDateOld": "15/03/19 4:20 PM",
          "commitNameOld": "2064ca015d1584263aac0cc20c60b925a3aff612",
          "commitAuthorOld": "Eric Yang",
          "daysBetweenCommits": 65.65,
          "commitsBetweenForRepo": 381,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,26 @@\n-  private Map\u003cString, String\u003e addAMEnv() throws IOException {\n+  protected Map\u003cString, String\u003e addAMEnv() throws IOException {\n     Map\u003cString, String\u003e env \u003d new HashMap\u003c\u003e();\n-    ClasspathConstructor classpath \u003d\n-        buildClasspath(YarnServiceConstants.SUBMITTED_CONF_DIR, \"lib\", fs, getConfig()\n-            .getBoolean(YarnConfiguration.IS_MINI_YARN_CLUSTER, false));\n+    ClasspathConstructor classpath \u003d buildClasspath(\n+        YarnServiceConstants.SUBMITTED_CONF_DIR,\n+        \"lib\",\n+        fs,\n+        getConfig().get(YarnServiceConf.YARN_SERVICE_CLASSPATH, \"\"),\n+        getConfig().getBoolean(YarnConfiguration.IS_MINI_YARN_CLUSTER, false));\n     env.put(\"CLASSPATH\", classpath.buildClasspath());\n     env.put(\"LANG\", \"en_US.UTF-8\");\n     env.put(\"LC_ALL\", \"en_US.UTF-8\");\n     env.put(\"LANGUAGE\", \"en_US.UTF-8\");\n     String jaas \u003d System.getenv(\"HADOOP_JAAS_DEBUG\");\n     if (jaas !\u003d null) {\n       env.put(\"HADOOP_JAAS_DEBUG\", jaas);\n     }\n     if (!UserGroupInformation.isSecurityEnabled()) {\n       String userName \u003d UserGroupInformation.getCurrentUser().getUserName();\n       LOG.debug(\"Run as user {}\", userName);\n       // HADOOP_USER_NAME env is used by UserGroupInformation when log in\n       // This env makes AM run as this user\n       env.put(\"HADOOP_USER_NAME\", userName);\n     }\n     LOG.debug(\"AM env: \\n{}\", stringifyMap(env));\n     return env;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected Map\u003cString, String\u003e addAMEnv() throws IOException {\n    Map\u003cString, String\u003e env \u003d new HashMap\u003c\u003e();\n    ClasspathConstructor classpath \u003d buildClasspath(\n        YarnServiceConstants.SUBMITTED_CONF_DIR,\n        \"lib\",\n        fs,\n        getConfig().get(YarnServiceConf.YARN_SERVICE_CLASSPATH, \"\"),\n        getConfig().getBoolean(YarnConfiguration.IS_MINI_YARN_CLUSTER, false));\n    env.put(\"CLASSPATH\", classpath.buildClasspath());\n    env.put(\"LANG\", \"en_US.UTF-8\");\n    env.put(\"LC_ALL\", \"en_US.UTF-8\");\n    env.put(\"LANGUAGE\", \"en_US.UTF-8\");\n    String jaas \u003d System.getenv(\"HADOOP_JAAS_DEBUG\");\n    if (jaas !\u003d null) {\n      env.put(\"HADOOP_JAAS_DEBUG\", jaas);\n    }\n    if (!UserGroupInformation.isSecurityEnabled()) {\n      String userName \u003d UserGroupInformation.getCurrentUser().getUserName();\n      LOG.debug(\"Run as user {}\", userName);\n      // HADOOP_USER_NAME env is used by UserGroupInformation when log in\n      // This env makes AM run as this user\n      env.put(\"HADOOP_USER_NAME\", userName);\n    }\n    LOG.debug(\"AM env: \\n{}\", stringifyMap(env));\n    return env;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[protected]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-9546. Add configuration option for YARN Native services AM classpath. Contributed by Gergely Pollak.\n",
          "commitDate": "20/05/19 7:53 AM",
          "commitName": "24c53e057a237f78e1433d724df5ffe7961579a5",
          "commitAuthor": "Sunil G",
          "commitDateOld": "15/03/19 4:20 PM",
          "commitNameOld": "2064ca015d1584263aac0cc20c60b925a3aff612",
          "commitAuthorOld": "Eric Yang",
          "daysBetweenCommits": 65.65,
          "commitsBetweenForRepo": 381,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,26 @@\n-  private Map\u003cString, String\u003e addAMEnv() throws IOException {\n+  protected Map\u003cString, String\u003e addAMEnv() throws IOException {\n     Map\u003cString, String\u003e env \u003d new HashMap\u003c\u003e();\n-    ClasspathConstructor classpath \u003d\n-        buildClasspath(YarnServiceConstants.SUBMITTED_CONF_DIR, \"lib\", fs, getConfig()\n-            .getBoolean(YarnConfiguration.IS_MINI_YARN_CLUSTER, false));\n+    ClasspathConstructor classpath \u003d buildClasspath(\n+        YarnServiceConstants.SUBMITTED_CONF_DIR,\n+        \"lib\",\n+        fs,\n+        getConfig().get(YarnServiceConf.YARN_SERVICE_CLASSPATH, \"\"),\n+        getConfig().getBoolean(YarnConfiguration.IS_MINI_YARN_CLUSTER, false));\n     env.put(\"CLASSPATH\", classpath.buildClasspath());\n     env.put(\"LANG\", \"en_US.UTF-8\");\n     env.put(\"LC_ALL\", \"en_US.UTF-8\");\n     env.put(\"LANGUAGE\", \"en_US.UTF-8\");\n     String jaas \u003d System.getenv(\"HADOOP_JAAS_DEBUG\");\n     if (jaas !\u003d null) {\n       env.put(\"HADOOP_JAAS_DEBUG\", jaas);\n     }\n     if (!UserGroupInformation.isSecurityEnabled()) {\n       String userName \u003d UserGroupInformation.getCurrentUser().getUserName();\n       LOG.debug(\"Run as user {}\", userName);\n       // HADOOP_USER_NAME env is used by UserGroupInformation when log in\n       // This env makes AM run as this user\n       env.put(\"HADOOP_USER_NAME\", userName);\n     }\n     LOG.debug(\"AM env: \\n{}\", stringifyMap(env));\n     return env;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected Map\u003cString, String\u003e addAMEnv() throws IOException {\n    Map\u003cString, String\u003e env \u003d new HashMap\u003c\u003e();\n    ClasspathConstructor classpath \u003d buildClasspath(\n        YarnServiceConstants.SUBMITTED_CONF_DIR,\n        \"lib\",\n        fs,\n        getConfig().get(YarnServiceConf.YARN_SERVICE_CLASSPATH, \"\"),\n        getConfig().getBoolean(YarnConfiguration.IS_MINI_YARN_CLUSTER, false));\n    env.put(\"CLASSPATH\", classpath.buildClasspath());\n    env.put(\"LANG\", \"en_US.UTF-8\");\n    env.put(\"LC_ALL\", \"en_US.UTF-8\");\n    env.put(\"LANGUAGE\", \"en_US.UTF-8\");\n    String jaas \u003d System.getenv(\"HADOOP_JAAS_DEBUG\");\n    if (jaas !\u003d null) {\n      env.put(\"HADOOP_JAAS_DEBUG\", jaas);\n    }\n    if (!UserGroupInformation.isSecurityEnabled()) {\n      String userName \u003d UserGroupInformation.getCurrentUser().getUserName();\n      LOG.debug(\"Run as user {}\", userName);\n      // HADOOP_USER_NAME env is used by UserGroupInformation when log in\n      // This env makes AM run as this user\n      env.put(\"HADOOP_USER_NAME\", userName);\n    }\n    LOG.debug(\"AM env: \\n{}\", stringifyMap(env));\n    return env;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
          "extendedDetails": {}
        }
      ]
    },
    "2064ca015d1584263aac0cc20c60b925a3aff612": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9349.  Changed logging to use slf4j api.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "15/03/19 4:20 PM",
      "commitName": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "28/11/18 5:34 PM",
      "commitNameOld": "efc4d91cbeab8a13f6d61cb0e56443adb2d77559",
      "commitAuthorOld": "Weiwei Yang",
      "daysBetweenCommits": 106.91,
      "commitsBetweenForRepo": 783,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   private Map\u003cString, String\u003e addAMEnv() throws IOException {\n     Map\u003cString, String\u003e env \u003d new HashMap\u003c\u003e();\n     ClasspathConstructor classpath \u003d\n         buildClasspath(YarnServiceConstants.SUBMITTED_CONF_DIR, \"lib\", fs, getConfig()\n             .getBoolean(YarnConfiguration.IS_MINI_YARN_CLUSTER, false));\n     env.put(\"CLASSPATH\", classpath.buildClasspath());\n     env.put(\"LANG\", \"en_US.UTF-8\");\n     env.put(\"LC_ALL\", \"en_US.UTF-8\");\n     env.put(\"LANGUAGE\", \"en_US.UTF-8\");\n     String jaas \u003d System.getenv(\"HADOOP_JAAS_DEBUG\");\n     if (jaas !\u003d null) {\n       env.put(\"HADOOP_JAAS_DEBUG\", jaas);\n     }\n     if (!UserGroupInformation.isSecurityEnabled()) {\n       String userName \u003d UserGroupInformation.getCurrentUser().getUserName();\n-      LOG.debug(\"Run as user \" + userName);\n+      LOG.debug(\"Run as user {}\", userName);\n       // HADOOP_USER_NAME env is used by UserGroupInformation when log in\n       // This env makes AM run as this user\n       env.put(\"HADOOP_USER_NAME\", userName);\n     }\n     LOG.debug(\"AM env: \\n{}\", stringifyMap(env));\n     return env;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private Map\u003cString, String\u003e addAMEnv() throws IOException {\n    Map\u003cString, String\u003e env \u003d new HashMap\u003c\u003e();\n    ClasspathConstructor classpath \u003d\n        buildClasspath(YarnServiceConstants.SUBMITTED_CONF_DIR, \"lib\", fs, getConfig()\n            .getBoolean(YarnConfiguration.IS_MINI_YARN_CLUSTER, false));\n    env.put(\"CLASSPATH\", classpath.buildClasspath());\n    env.put(\"LANG\", \"en_US.UTF-8\");\n    env.put(\"LC_ALL\", \"en_US.UTF-8\");\n    env.put(\"LANGUAGE\", \"en_US.UTF-8\");\n    String jaas \u003d System.getenv(\"HADOOP_JAAS_DEBUG\");\n    if (jaas !\u003d null) {\n      env.put(\"HADOOP_JAAS_DEBUG\", jaas);\n    }\n    if (!UserGroupInformation.isSecurityEnabled()) {\n      String userName \u003d UserGroupInformation.getCurrentUser().getUserName();\n      LOG.debug(\"Run as user {}\", userName);\n      // HADOOP_USER_NAME env is used by UserGroupInformation when log in\n      // This env makes AM run as this user\n      env.put(\"HADOOP_USER_NAME\", userName);\n    }\n    LOG.debug(\"AM env: \\n{}\", stringifyMap(env));\n    return env;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
      "extendedDetails": {}
    },
    "a127f7b0fbde3942ca4329d5463bb8fe421daf7b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7423. Improve service client loggings. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "a127f7b0fbde3942ca4329d5463bb8fe421daf7b",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "a6c4bd74b636d0715ffb4c1aca9ef4e49201aa02",
      "commitAuthorOld": "Billie Rinaldi",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   private Map\u003cString, String\u003e addAMEnv() throws IOException {\n     Map\u003cString, String\u003e env \u003d new HashMap\u003c\u003e();\n     ClasspathConstructor classpath \u003d\n         buildClasspath(YarnServiceConstants.SUBMITTED_CONF_DIR, \"lib\", fs, getConfig()\n             .getBoolean(YarnConfiguration.IS_MINI_YARN_CLUSTER, false));\n     env.put(\"CLASSPATH\", classpath.buildClasspath());\n     env.put(\"LANG\", \"en_US.UTF-8\");\n     env.put(\"LC_ALL\", \"en_US.UTF-8\");\n     env.put(\"LANGUAGE\", \"en_US.UTF-8\");\n     String jaas \u003d System.getenv(\"HADOOP_JAAS_DEBUG\");\n     if (jaas !\u003d null) {\n       env.put(\"HADOOP_JAAS_DEBUG\", jaas);\n     }\n     if (!UserGroupInformation.isSecurityEnabled()) {\n       String userName \u003d UserGroupInformation.getCurrentUser().getUserName();\n-      LOG.info(\"Run as user \" + userName);\n+      LOG.debug(\"Run as user \" + userName);\n       // HADOOP_USER_NAME env is used by UserGroupInformation when log in\n       // This env makes AM run as this user\n       env.put(\"HADOOP_USER_NAME\", userName);\n     }\n-    LOG.info(\"AM env: \\n{}\", stringifyMap(env));\n+    LOG.debug(\"AM env: \\n{}\", stringifyMap(env));\n     return env;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private Map\u003cString, String\u003e addAMEnv() throws IOException {\n    Map\u003cString, String\u003e env \u003d new HashMap\u003c\u003e();\n    ClasspathConstructor classpath \u003d\n        buildClasspath(YarnServiceConstants.SUBMITTED_CONF_DIR, \"lib\", fs, getConfig()\n            .getBoolean(YarnConfiguration.IS_MINI_YARN_CLUSTER, false));\n    env.put(\"CLASSPATH\", classpath.buildClasspath());\n    env.put(\"LANG\", \"en_US.UTF-8\");\n    env.put(\"LC_ALL\", \"en_US.UTF-8\");\n    env.put(\"LANGUAGE\", \"en_US.UTF-8\");\n    String jaas \u003d System.getenv(\"HADOOP_JAAS_DEBUG\");\n    if (jaas !\u003d null) {\n      env.put(\"HADOOP_JAAS_DEBUG\", jaas);\n    }\n    if (!UserGroupInformation.isSecurityEnabled()) {\n      String userName \u003d UserGroupInformation.getCurrentUser().getUserName();\n      LOG.debug(\"Run as user \" + userName);\n      // HADOOP_USER_NAME env is used by UserGroupInformation when log in\n      // This env makes AM run as this user\n      env.put(\"HADOOP_USER_NAME\", userName);\n    }\n    LOG.debug(\"AM env: \\n{}\", stringifyMap(env));\n    return env;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
      "extendedDetails": {}
    },
    "a6c4bd74b636d0715ffb4c1aca9ef4e49201aa02": {
      "type": "Yparameterchange",
      "commitMessage": "YARN-6394. Support specifying YARN related params in the service REST API. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "a6c4bd74b636d0715ffb4c1aca9ef4e49201aa02",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "ba7ed7b66a48c61086ea837f39ff0f22ffe31eca",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n-  private Map\u003cString, String\u003e addAMEnv(Configuration conf) throws IOException {\n+  private Map\u003cString, String\u003e addAMEnv() throws IOException {\n     Map\u003cString, String\u003e env \u003d new HashMap\u003c\u003e();\n     ClasspathConstructor classpath \u003d\n         buildClasspath(YarnServiceConstants.SUBMITTED_CONF_DIR, \"lib\", fs, getConfig()\n             .getBoolean(YarnConfiguration.IS_MINI_YARN_CLUSTER, false));\n     env.put(\"CLASSPATH\", classpath.buildClasspath());\n     env.put(\"LANG\", \"en_US.UTF-8\");\n     env.put(\"LC_ALL\", \"en_US.UTF-8\");\n     env.put(\"LANGUAGE\", \"en_US.UTF-8\");\n     String jaas \u003d System.getenv(\"HADOOP_JAAS_DEBUG\");\n     if (jaas !\u003d null) {\n       env.put(\"HADOOP_JAAS_DEBUG\", jaas);\n     }\n     if (!UserGroupInformation.isSecurityEnabled()) {\n       String userName \u003d UserGroupInformation.getCurrentUser().getUserName();\n       LOG.info(\"Run as user \" + userName);\n       // HADOOP_USER_NAME env is used by UserGroupInformation when log in\n       // This env makes AM run as this user\n       env.put(\"HADOOP_USER_NAME\", userName);\n     }\n     LOG.info(\"AM env: \\n{}\", stringifyMap(env));\n     return env;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private Map\u003cString, String\u003e addAMEnv() throws IOException {\n    Map\u003cString, String\u003e env \u003d new HashMap\u003c\u003e();\n    ClasspathConstructor classpath \u003d\n        buildClasspath(YarnServiceConstants.SUBMITTED_CONF_DIR, \"lib\", fs, getConfig()\n            .getBoolean(YarnConfiguration.IS_MINI_YARN_CLUSTER, false));\n    env.put(\"CLASSPATH\", classpath.buildClasspath());\n    env.put(\"LANG\", \"en_US.UTF-8\");\n    env.put(\"LC_ALL\", \"en_US.UTF-8\");\n    env.put(\"LANGUAGE\", \"en_US.UTF-8\");\n    String jaas \u003d System.getenv(\"HADOOP_JAAS_DEBUG\");\n    if (jaas !\u003d null) {\n      env.put(\"HADOOP_JAAS_DEBUG\", jaas);\n    }\n    if (!UserGroupInformation.isSecurityEnabled()) {\n      String userName \u003d UserGroupInformation.getCurrentUser().getUserName();\n      LOG.info(\"Run as user \" + userName);\n      // HADOOP_USER_NAME env is used by UserGroupInformation when log in\n      // This env makes AM run as this user\n      env.put(\"HADOOP_USER_NAME\", userName);\n    }\n    LOG.info(\"AM env: \\n{}\", stringifyMap(env));\n    return env;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
      "extendedDetails": {
        "oldValue": "[conf-Configuration]",
        "newValue": "[]"
      }
    },
    "40ab068eabe50875449d601471619a4e82fff86d": {
      "type": "Yfilerename",
      "commitMessage": "YARN-7091. Rename application to service in yarn-native-services. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "40ab068eabe50875449d601471619a4e82fff86d",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "2ba38ce8ecb1cf3836fab48cdb2c5ae7e1b5427d",
      "commitAuthorOld": "Gour Saha",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private Map\u003cString, String\u003e addAMEnv(Configuration conf) throws IOException {\n    Map\u003cString, String\u003e env \u003d new HashMap\u003c\u003e();\n    ClasspathConstructor classpath \u003d\n        buildClasspath(YarnServiceConstants.SUBMITTED_CONF_DIR, \"lib\", fs, getConfig()\n            .getBoolean(YarnConfiguration.IS_MINI_YARN_CLUSTER, false));\n    env.put(\"CLASSPATH\", classpath.buildClasspath());\n    env.put(\"LANG\", \"en_US.UTF-8\");\n    env.put(\"LC_ALL\", \"en_US.UTF-8\");\n    env.put(\"LANGUAGE\", \"en_US.UTF-8\");\n    String jaas \u003d System.getenv(\"HADOOP_JAAS_DEBUG\");\n    if (jaas !\u003d null) {\n      env.put(\"HADOOP_JAAS_DEBUG\", jaas);\n    }\n    if (!UserGroupInformation.isSecurityEnabled()) {\n      String userName \u003d UserGroupInformation.getCurrentUser().getUserName();\n      LOG.info(\"Run as user \" + userName);\n      // HADOOP_USER_NAME env is used by UserGroupInformation when log in\n      // This env makes AM run as this user\n      env.put(\"HADOOP_USER_NAME\", userName);\n    }\n    LOG.info(\"AM env: \\n{}\", stringifyMap(env));\n    return env;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java"
      }
    },
    "2191f5b533c6b4763f5d443d21127f1f8552ce64": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7050. Post cleanup after YARN-6903, removal of org.apache.slider package. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "2191f5b533c6b4763f5d443d21127f1f8552ce64",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "79bf5c084d4a063f1a933cae498af23edfd46792",
      "commitAuthorOld": "Billie Rinaldi",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   private Map\u003cString, String\u003e addAMEnv(Configuration conf) throws IOException {\n     Map\u003cString, String\u003e env \u003d new HashMap\u003c\u003e();\n     ClasspathConstructor classpath \u003d\n-        buildClasspath(SliderKeys.SUBMITTED_CONF_DIR, \"lib\", fs, getConfig()\n+        buildClasspath(YarnServiceConstants.SUBMITTED_CONF_DIR, \"lib\", fs, getConfig()\n             .getBoolean(YarnConfiguration.IS_MINI_YARN_CLUSTER, false));\n     env.put(\"CLASSPATH\", classpath.buildClasspath());\n     env.put(\"LANG\", \"en_US.UTF-8\");\n     env.put(\"LC_ALL\", \"en_US.UTF-8\");\n     env.put(\"LANGUAGE\", \"en_US.UTF-8\");\n-    String jaas \u003d System.getenv(HADOOP_JAAS_DEBUG);\n+    String jaas \u003d System.getenv(\"HADOOP_JAAS_DEBUG\");\n     if (jaas !\u003d null) {\n-      env.put(HADOOP_JAAS_DEBUG, jaas);\n+      env.put(\"HADOOP_JAAS_DEBUG\", jaas);\n     }\n     if (!UserGroupInformation.isSecurityEnabled()) {\n       String userName \u003d UserGroupInformation.getCurrentUser().getUserName();\n       LOG.info(\"Run as user \" + userName);\n       // HADOOP_USER_NAME env is used by UserGroupInformation when log in\n       // This env makes AM run as this user\n       env.put(\"HADOOP_USER_NAME\", userName);\n     }\n     LOG.info(\"AM env: \\n{}\", stringifyMap(env));\n     return env;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private Map\u003cString, String\u003e addAMEnv(Configuration conf) throws IOException {\n    Map\u003cString, String\u003e env \u003d new HashMap\u003c\u003e();\n    ClasspathConstructor classpath \u003d\n        buildClasspath(YarnServiceConstants.SUBMITTED_CONF_DIR, \"lib\", fs, getConfig()\n            .getBoolean(YarnConfiguration.IS_MINI_YARN_CLUSTER, false));\n    env.put(\"CLASSPATH\", classpath.buildClasspath());\n    env.put(\"LANG\", \"en_US.UTF-8\");\n    env.put(\"LC_ALL\", \"en_US.UTF-8\");\n    env.put(\"LANGUAGE\", \"en_US.UTF-8\");\n    String jaas \u003d System.getenv(\"HADOOP_JAAS_DEBUG\");\n    if (jaas !\u003d null) {\n      env.put(\"HADOOP_JAAS_DEBUG\", jaas);\n    }\n    if (!UserGroupInformation.isSecurityEnabled()) {\n      String userName \u003d UserGroupInformation.getCurrentUser().getUserName();\n      LOG.info(\"Run as user \" + userName);\n      // HADOOP_USER_NAME env is used by UserGroupInformation when log in\n      // This env makes AM run as this user\n      env.put(\"HADOOP_USER_NAME\", userName);\n    }\n    LOG.info(\"AM env: \\n{}\", stringifyMap(env));\n    return env;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
      "extendedDetails": {}
    },
    "1888318c89776f0bf354c1b13e3ee169e14ff638": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6903. Yarn-native-service framework core rewrite. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "1888318c89776f0bf354c1b13e3ee169e14ff638",
      "commitAuthor": "Billie Rinaldi",
      "diff": "@@ -0,0 +1,23 @@\n+  private Map\u003cString, String\u003e addAMEnv(Configuration conf) throws IOException {\n+    Map\u003cString, String\u003e env \u003d new HashMap\u003c\u003e();\n+    ClasspathConstructor classpath \u003d\n+        buildClasspath(SliderKeys.SUBMITTED_CONF_DIR, \"lib\", fs, getConfig()\n+            .getBoolean(YarnConfiguration.IS_MINI_YARN_CLUSTER, false));\n+    env.put(\"CLASSPATH\", classpath.buildClasspath());\n+    env.put(\"LANG\", \"en_US.UTF-8\");\n+    env.put(\"LC_ALL\", \"en_US.UTF-8\");\n+    env.put(\"LANGUAGE\", \"en_US.UTF-8\");\n+    String jaas \u003d System.getenv(HADOOP_JAAS_DEBUG);\n+    if (jaas !\u003d null) {\n+      env.put(HADOOP_JAAS_DEBUG, jaas);\n+    }\n+    if (!UserGroupInformation.isSecurityEnabled()) {\n+      String userName \u003d UserGroupInformation.getCurrentUser().getUserName();\n+      LOG.info(\"Run as user \" + userName);\n+      // HADOOP_USER_NAME env is used by UserGroupInformation when log in\n+      // This env makes AM run as this user\n+      env.put(\"HADOOP_USER_NAME\", userName);\n+    }\n+    LOG.info(\"AM env: \\n{}\", stringifyMap(env));\n+    return env;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private Map\u003cString, String\u003e addAMEnv(Configuration conf) throws IOException {\n    Map\u003cString, String\u003e env \u003d new HashMap\u003c\u003e();\n    ClasspathConstructor classpath \u003d\n        buildClasspath(SliderKeys.SUBMITTED_CONF_DIR, \"lib\", fs, getConfig()\n            .getBoolean(YarnConfiguration.IS_MINI_YARN_CLUSTER, false));\n    env.put(\"CLASSPATH\", classpath.buildClasspath());\n    env.put(\"LANG\", \"en_US.UTF-8\");\n    env.put(\"LC_ALL\", \"en_US.UTF-8\");\n    env.put(\"LANGUAGE\", \"en_US.UTF-8\");\n    String jaas \u003d System.getenv(HADOOP_JAAS_DEBUG);\n    if (jaas !\u003d null) {\n      env.put(HADOOP_JAAS_DEBUG, jaas);\n    }\n    if (!UserGroupInformation.isSecurityEnabled()) {\n      String userName \u003d UserGroupInformation.getCurrentUser().getUserName();\n      LOG.info(\"Run as user \" + userName);\n      // HADOOP_USER_NAME env is used by UserGroupInformation when log in\n      // This env makes AM run as this user\n      env.put(\"HADOOP_USER_NAME\", userName);\n    }\n    LOG.info(\"AM env: \\n{}\", stringifyMap(env));\n    return env;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java"
    }
  }
}