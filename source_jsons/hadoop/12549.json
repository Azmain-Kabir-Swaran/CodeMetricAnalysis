{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Balancer.java",
  "functionName": "chooseStorageGroups",
  "functionId": "chooseStorageGroups",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java",
  "functionStartLine": 470,
  "functionEndLine": 482,
  "numCommitsSeen": 148,
  "timeTaken": 7295,
  "changeHistory": [
    "c3cf331dc91e2beef2afeed11105084843b02858",
    "83b9933db3349e6a6faf23bce35c9d4ce3f7bcf2",
    "b8597e6a10b2e8df1bee4e8ce0c8be345f7e007d",
    "907fb15ee8c150e5ecc0560b7374441c57a84122",
    "1ba58e2e2c7778d7c44ba6cd72ac4aa0f288ded8",
    "1f4b135b1f9c6aff1dab4fe749126ec814f8387b",
    "1634e980af422c0af2f7c9c7280a77f2fbddc9c0",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "c3cf331dc91e2beef2afeed11105084843b02858": "Ybodychange",
    "83b9933db3349e6a6faf23bce35c9d4ce3f7bcf2": "Ybodychange",
    "b8597e6a10b2e8df1bee4e8ce0c8be345f7e007d": "Ymultichange(Yrename,Ybodychange)",
    "907fb15ee8c150e5ecc0560b7374441c57a84122": "Ybodychange",
    "1ba58e2e2c7778d7c44ba6cd72ac4aa0f288ded8": "Ybodychange",
    "1f4b135b1f9c6aff1dab4fe749126ec814f8387b": "Ybodychange",
    "1634e980af422c0af2f7c9c7280a77f2fbddc9c0": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c3cf331dc91e2beef2afeed11105084843b02858": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6828. Separate block replica dispatching from Balancer. Contributed by Tsz Wo Nicholas Sze.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1616889 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/08/14 2:33 PM",
      "commitName": "c3cf331dc91e2beef2afeed11105084843b02858",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "07/08/14 12:18 AM",
      "commitNameOld": "83b9933db3349e6a6faf23bce35c9d4ce3f7bcf2",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 1.59,
      "commitsBetweenForRepo": 22,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,13 @@\n   private long chooseStorageGroups() {\n     // First, match nodes on the same node group if cluster is node group aware\n-    if (cluster.isNodeGroupAware()) {\n+    if (dispatcher.getCluster().isNodeGroupAware()) {\n       chooseStorageGroups(Matcher.SAME_NODE_GROUP);\n     }\n     \n     // Then, match nodes on the same rack\n     chooseStorageGroups(Matcher.SAME_RACK);\n     // At last, match all remaining nodes\n     chooseStorageGroups(Matcher.ANY_OTHER);\n     \n-    Preconditions.checkState(storageGroupMap.size() \u003e\u003d sources.size() + targets.size(),\n-        \"Mismatched number of datanodes (\" + storageGroupMap.size() + \" \u003c \"\n-            + sources.size() + \" sources, \" + targets.size() + \" targets)\");\n-\n-    long bytesToMove \u003d 0L;\n-    for (Source src : sources) {\n-      bytesToMove +\u003d src.getScheduledSize();\n-    }\n-    return bytesToMove;\n+    return dispatcher.bytesToMove();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private long chooseStorageGroups() {\n    // First, match nodes on the same node group if cluster is node group aware\n    if (dispatcher.getCluster().isNodeGroupAware()) {\n      chooseStorageGroups(Matcher.SAME_NODE_GROUP);\n    }\n    \n    // Then, match nodes on the same rack\n    chooseStorageGroups(Matcher.SAME_RACK);\n    // At last, match all remaining nodes\n    chooseStorageGroups(Matcher.ANY_OTHER);\n    \n    return dispatcher.bytesToMove();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java",
      "extendedDetails": {}
    },
    "83b9933db3349e6a6faf23bce35c9d4ce3f7bcf2": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6809. Move Balancer\u0027s inner classes MovedBlocks and Matcher as to standalone classes and separates KeyManager from NameNodeConnector.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1616422 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/14 12:18 AM",
      "commitName": "83b9933db3349e6a6faf23bce35c9d4ce3f7bcf2",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "01/08/14 7:12 AM",
      "commitNameOld": "7e12b1912f8cdbe6d88ac0b8eb71d7c4dc1bf78e",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 5.71,
      "commitsBetweenForRepo": 41,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n   private long chooseStorageGroups() {\n     // First, match nodes on the same node group if cluster is node group aware\n     if (cluster.isNodeGroupAware()) {\n-      chooseStorageGroups(SAME_NODE_GROUP);\n+      chooseStorageGroups(Matcher.SAME_NODE_GROUP);\n     }\n     \n     // Then, match nodes on the same rack\n-    chooseStorageGroups(SAME_RACK);\n+    chooseStorageGroups(Matcher.SAME_RACK);\n     // At last, match all remaining nodes\n-    chooseStorageGroups(ANY_OTHER);\n+    chooseStorageGroups(Matcher.ANY_OTHER);\n     \n     Preconditions.checkState(storageGroupMap.size() \u003e\u003d sources.size() + targets.size(),\n         \"Mismatched number of datanodes (\" + storageGroupMap.size() + \" \u003c \"\n             + sources.size() + \" sources, \" + targets.size() + \" targets)\");\n \n     long bytesToMove \u003d 0L;\n     for (Source src : sources) {\n       bytesToMove +\u003d src.getScheduledSize();\n     }\n     return bytesToMove;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private long chooseStorageGroups() {\n    // First, match nodes on the same node group if cluster is node group aware\n    if (cluster.isNodeGroupAware()) {\n      chooseStorageGroups(Matcher.SAME_NODE_GROUP);\n    }\n    \n    // Then, match nodes on the same rack\n    chooseStorageGroups(Matcher.SAME_RACK);\n    // At last, match all remaining nodes\n    chooseStorageGroups(Matcher.ANY_OTHER);\n    \n    Preconditions.checkState(storageGroupMap.size() \u003e\u003d sources.size() + targets.size(),\n        \"Mismatched number of datanodes (\" + storageGroupMap.size() + \" \u003c \"\n            + sources.size() + \" sources, \" + targets.size() + \" targets)\");\n\n    long bytesToMove \u003d 0L;\n    for (Source src : sources) {\n      bytesToMove +\u003d src.getScheduledSize();\n    }\n    return bytesToMove;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java",
      "extendedDetails": {}
    },
    "b8597e6a10b2e8df1bee4e8ce0c8be345f7e007d": {
      "type": "Ymultichange(Yrename,Ybodychange)",
      "commitMessage": "HDFS-6685. Balancer should preserve storage type of replicas.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1615015 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/07/14 6:05 PM",
      "commitName": "b8597e6a10b2e8df1bee4e8ce0c8be345f7e007d",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "HDFS-6685. Balancer should preserve storage type of replicas.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1615015 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "31/07/14 6:05 PM",
          "commitName": "b8597e6a10b2e8df1bee4e8ce0c8be345f7e007d",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "30/07/14 11:02 PM",
          "commitNameOld": "b8b8f3f5e7214d6fcfc30e1b94ff097e52868f4f",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 0.79,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,21 @@\n-  private long chooseNodes() {\n+  private long chooseStorageGroups() {\n     // First, match nodes on the same node group if cluster is node group aware\n     if (cluster.isNodeGroupAware()) {\n-      chooseNodes(SAME_NODE_GROUP);\n+      chooseStorageGroups(SAME_NODE_GROUP);\n     }\n     \n     // Then, match nodes on the same rack\n-    chooseNodes(SAME_RACK);\n+    chooseStorageGroups(SAME_RACK);\n     // At last, match all remaining nodes\n-    chooseNodes(ANY_OTHER);\n+    chooseStorageGroups(ANY_OTHER);\n     \n-    assert (datanodeMap.size() \u003e\u003d sources.size()+targets.size())\n-      : \"Mismatched number of datanodes (\" +\n-      datanodeMap.size() + \" total, \" +\n-      sources.size() + \" sources, \" +\n-      targets.size() + \" targets)\";\n+    Preconditions.checkState(storageGroupMap.size() \u003e\u003d sources.size() + targets.size(),\n+        \"Mismatched number of datanodes (\" + storageGroupMap.size() + \" \u003c \"\n+            + sources.size() + \" sources, \" + targets.size() + \" targets)\");\n \n     long bytesToMove \u003d 0L;\n     for (Source src : sources) {\n       bytesToMove +\u003d src.getScheduledSize();\n     }\n     return bytesToMove;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private long chooseStorageGroups() {\n    // First, match nodes on the same node group if cluster is node group aware\n    if (cluster.isNodeGroupAware()) {\n      chooseStorageGroups(SAME_NODE_GROUP);\n    }\n    \n    // Then, match nodes on the same rack\n    chooseStorageGroups(SAME_RACK);\n    // At last, match all remaining nodes\n    chooseStorageGroups(ANY_OTHER);\n    \n    Preconditions.checkState(storageGroupMap.size() \u003e\u003d sources.size() + targets.size(),\n        \"Mismatched number of datanodes (\" + storageGroupMap.size() + \" \u003c \"\n            + sources.size() + \" sources, \" + targets.size() + \" targets)\");\n\n    long bytesToMove \u003d 0L;\n    for (Source src : sources) {\n      bytesToMove +\u003d src.getScheduledSize();\n    }\n    return bytesToMove;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java",
          "extendedDetails": {
            "oldValue": "chooseNodes",
            "newValue": "chooseStorageGroups"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-6685. Balancer should preserve storage type of replicas.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1615015 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "31/07/14 6:05 PM",
          "commitName": "b8597e6a10b2e8df1bee4e8ce0c8be345f7e007d",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "30/07/14 11:02 PM",
          "commitNameOld": "b8b8f3f5e7214d6fcfc30e1b94ff097e52868f4f",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 0.79,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,21 @@\n-  private long chooseNodes() {\n+  private long chooseStorageGroups() {\n     // First, match nodes on the same node group if cluster is node group aware\n     if (cluster.isNodeGroupAware()) {\n-      chooseNodes(SAME_NODE_GROUP);\n+      chooseStorageGroups(SAME_NODE_GROUP);\n     }\n     \n     // Then, match nodes on the same rack\n-    chooseNodes(SAME_RACK);\n+    chooseStorageGroups(SAME_RACK);\n     // At last, match all remaining nodes\n-    chooseNodes(ANY_OTHER);\n+    chooseStorageGroups(ANY_OTHER);\n     \n-    assert (datanodeMap.size() \u003e\u003d sources.size()+targets.size())\n-      : \"Mismatched number of datanodes (\" +\n-      datanodeMap.size() + \" total, \" +\n-      sources.size() + \" sources, \" +\n-      targets.size() + \" targets)\";\n+    Preconditions.checkState(storageGroupMap.size() \u003e\u003d sources.size() + targets.size(),\n+        \"Mismatched number of datanodes (\" + storageGroupMap.size() + \" \u003c \"\n+            + sources.size() + \" sources, \" + targets.size() + \" targets)\");\n \n     long bytesToMove \u003d 0L;\n     for (Source src : sources) {\n       bytesToMove +\u003d src.getScheduledSize();\n     }\n     return bytesToMove;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private long chooseStorageGroups() {\n    // First, match nodes on the same node group if cluster is node group aware\n    if (cluster.isNodeGroupAware()) {\n      chooseStorageGroups(SAME_NODE_GROUP);\n    }\n    \n    // Then, match nodes on the same rack\n    chooseStorageGroups(SAME_RACK);\n    // At last, match all remaining nodes\n    chooseStorageGroups(ANY_OTHER);\n    \n    Preconditions.checkState(storageGroupMap.size() \u003e\u003d sources.size() + targets.size(),\n        \"Mismatched number of datanodes (\" + storageGroupMap.size() + \" \u003c \"\n            + sources.size() + \" sources, \" + targets.size() + \" targets)\");\n\n    long bytesToMove \u003d 0L;\n    for (Source src : sources) {\n      bytesToMove +\u003d src.getScheduledSize();\n    }\n    return bytesToMove;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java",
          "extendedDetails": {}
        }
      ]
    },
    "907fb15ee8c150e5ecc0560b7374441c57a84122": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5480. Update Balancer for HDFS-2832. (Contributed by szetszwo)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2832@1540547 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/11/13 12:59 PM",
      "commitName": "907fb15ee8c150e5ecc0560b7374441c57a84122",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "17/10/13 11:54 AM",
      "commitNameOld": "f8d5755a69d7b4f230adbbfd88ea73df7a83b4f0",
      "commitAuthorOld": "",
      "daysBetweenCommits": 24.09,
      "commitsBetweenForRepo": 121,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   private long chooseNodes() {\n     // First, match nodes on the same node group if cluster is node group aware\n     if (cluster.isNodeGroupAware()) {\n       chooseNodes(SAME_NODE_GROUP);\n     }\n     \n     // Then, match nodes on the same rack\n     chooseNodes(SAME_RACK);\n     // At last, match all remaining nodes\n     chooseNodes(ANY_OTHER);\n     \n-    assert (datanodes.size() \u003e\u003d sources.size()+targets.size())\n+    assert (datanodeMap.size() \u003e\u003d sources.size()+targets.size())\n       : \"Mismatched number of datanodes (\" +\n-      datanodes.size() + \" total, \" +\n+      datanodeMap.size() + \" total, \" +\n       sources.size() + \" sources, \" +\n       targets.size() + \" targets)\";\n \n     long bytesToMove \u003d 0L;\n     for (Source src : sources) {\n       bytesToMove +\u003d src.getScheduledSize();\n     }\n     return bytesToMove;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private long chooseNodes() {\n    // First, match nodes on the same node group if cluster is node group aware\n    if (cluster.isNodeGroupAware()) {\n      chooseNodes(SAME_NODE_GROUP);\n    }\n    \n    // Then, match nodes on the same rack\n    chooseNodes(SAME_RACK);\n    // At last, match all remaining nodes\n    chooseNodes(ANY_OTHER);\n    \n    assert (datanodeMap.size() \u003e\u003d sources.size()+targets.size())\n      : \"Mismatched number of datanodes (\" +\n      datanodeMap.size() + \" total, \" +\n      sources.size() + \" sources, \" +\n      targets.size() + \" targets)\";\n\n    long bytesToMove \u003d 0L;\n    for (Source src : sources) {\n      bytesToMove +\u003d src.getScheduledSize();\n    }\n    return bytesToMove;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java",
      "extendedDetails": {}
    },
    "1ba58e2e2c7778d7c44ba6cd72ac4aa0f288ded8": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4376. Fix race conditions in Balancer.  Contributed by Junping Du\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1532932 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/10/13 4:06 PM",
      "commitName": "1ba58e2e2c7778d7c44ba6cd72ac4aa0f288ded8",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "16/07/13 7:04 AM",
      "commitNameOld": "2d6049f1d683529c9e6372f33ee9b91fcfdbd3bd",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 92.38,
      "commitsBetweenForRepo": 584,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   private long chooseNodes() {\n     // First, match nodes on the same node group if cluster is node group aware\n     if (cluster.isNodeGroupAware()) {\n       chooseNodes(SAME_NODE_GROUP);\n     }\n     \n     // Then, match nodes on the same rack\n     chooseNodes(SAME_RACK);\n     // At last, match all remaining nodes\n     chooseNodes(ANY_OTHER);\n     \n     assert (datanodes.size() \u003e\u003d sources.size()+targets.size())\n       : \"Mismatched number of datanodes (\" +\n       datanodes.size() + \" total, \" +\n       sources.size() + \" sources, \" +\n       targets.size() + \" targets)\";\n \n     long bytesToMove \u003d 0L;\n     for (Source src : sources) {\n-      bytesToMove +\u003d src.scheduledSize;\n+      bytesToMove +\u003d src.getScheduledSize();\n     }\n     return bytesToMove;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private long chooseNodes() {\n    // First, match nodes on the same node group if cluster is node group aware\n    if (cluster.isNodeGroupAware()) {\n      chooseNodes(SAME_NODE_GROUP);\n    }\n    \n    // Then, match nodes on the same rack\n    chooseNodes(SAME_RACK);\n    // At last, match all remaining nodes\n    chooseNodes(ANY_OTHER);\n    \n    assert (datanodes.size() \u003e\u003d sources.size()+targets.size())\n      : \"Mismatched number of datanodes (\" +\n      datanodes.size() + \" total, \" +\n      sources.size() + \" sources, \" +\n      targets.size() + \" targets)\";\n\n    long bytesToMove \u003d 0L;\n    for (Source src : sources) {\n      bytesToMove +\u003d src.getScheduledSize();\n    }\n    return bytesToMove;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java",
      "extendedDetails": {}
    },
    "1f4b135b1f9c6aff1dab4fe749126ec814f8387b": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4234. Use generic code for choosing datanode in Balancer.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1417130 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/12/12 11:22 AM",
      "commitName": "1f4b135b1f9c6aff1dab4fe749126ec814f8387b",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "28/11/12 11:19 AM",
      "commitNameOld": "1634e980af422c0af2f7c9c7280a77f2fbddc9c0",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 6.0,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,23 @@\n   private long chooseNodes() {\n-    // First, match nodes on the same node group if cluster has nodegroup\n-    // awareness\n+    // First, match nodes on the same node group if cluster is node group aware\n     if (cluster.isNodeGroupAware()) {\n-      chooseNodesOnSameNodeGroup();\n+      chooseNodes(SAME_NODE_GROUP);\n     }\n     \n     // Then, match nodes on the same rack\n-    chooseNodes(true);\n-    // At last, match nodes on different racks\n-    chooseNodes(false);\n+    chooseNodes(SAME_RACK);\n+    // At last, match all remaining nodes\n+    chooseNodes(ANY_OTHER);\n     \n     assert (datanodes.size() \u003e\u003d sources.size()+targets.size())\n       : \"Mismatched number of datanodes (\" +\n       datanodes.size() + \" total, \" +\n       sources.size() + \" sources, \" +\n       targets.size() + \" targets)\";\n \n     long bytesToMove \u003d 0L;\n     for (Source src : sources) {\n       bytesToMove +\u003d src.scheduledSize;\n     }\n     return bytesToMove;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private long chooseNodes() {\n    // First, match nodes on the same node group if cluster is node group aware\n    if (cluster.isNodeGroupAware()) {\n      chooseNodes(SAME_NODE_GROUP);\n    }\n    \n    // Then, match nodes on the same rack\n    chooseNodes(SAME_RACK);\n    // At last, match all remaining nodes\n    chooseNodes(ANY_OTHER);\n    \n    assert (datanodes.size() \u003e\u003d sources.size()+targets.size())\n      : \"Mismatched number of datanodes (\" +\n      datanodes.size() + \" total, \" +\n      sources.size() + \" sources, \" +\n      targets.size() + \" targets)\";\n\n    long bytesToMove \u003d 0L;\n    for (Source src : sources) {\n      bytesToMove +\u003d src.scheduledSize;\n    }\n    return bytesToMove;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java",
      "extendedDetails": {}
    },
    "1634e980af422c0af2f7c9c7280a77f2fbddc9c0": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3495. Update Balancer to support new NetworkTopology with NodeGroup.  Contributed by Junping Du\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1414874 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/11/12 11:19 AM",
      "commitName": "1634e980af422c0af2f7c9c7280a77f2fbddc9c0",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "14/08/12 5:28 PM",
      "commitNameOld": "28e87740c5797e87a9038d7f151c8b21a5b04592",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 105.79,
      "commitsBetweenForRepo": 628,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,24 @@\n   private long chooseNodes() {\n-    // Match nodes on the same rack first\n+    // First, match nodes on the same node group if cluster has nodegroup\n+    // awareness\n+    if (cluster.isNodeGroupAware()) {\n+      chooseNodesOnSameNodeGroup();\n+    }\n+    \n+    // Then, match nodes on the same rack\n     chooseNodes(true);\n-    // Then match nodes on different racks\n+    // At last, match nodes on different racks\n     chooseNodes(false);\n     \n     assert (datanodes.size() \u003e\u003d sources.size()+targets.size())\n       : \"Mismatched number of datanodes (\" +\n       datanodes.size() + \" total, \" +\n       sources.size() + \" sources, \" +\n       targets.size() + \" targets)\";\n \n     long bytesToMove \u003d 0L;\n     for (Source src : sources) {\n       bytesToMove +\u003d src.scheduledSize;\n     }\n     return bytesToMove;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private long chooseNodes() {\n    // First, match nodes on the same node group if cluster has nodegroup\n    // awareness\n    if (cluster.isNodeGroupAware()) {\n      chooseNodesOnSameNodeGroup();\n    }\n    \n    // Then, match nodes on the same rack\n    chooseNodes(true);\n    // At last, match nodes on different racks\n    chooseNodes(false);\n    \n    assert (datanodes.size() \u003e\u003d sources.size()+targets.size())\n      : \"Mismatched number of datanodes (\" +\n      datanodes.size() + \" total, \" +\n      sources.size() + \" sources, \" +\n      targets.size() + \" targets)\";\n\n    long bytesToMove \u003d 0L;\n    for (Source src : sources) {\n      bytesToMove +\u003d src.scheduledSize;\n    }\n    return bytesToMove;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private long chooseNodes() {\n    // Match nodes on the same rack first\n    chooseNodes(true);\n    // Then match nodes on different racks\n    chooseNodes(false);\n    \n    assert (datanodes.size() \u003e\u003d sources.size()+targets.size())\n      : \"Mismatched number of datanodes (\" +\n      datanodes.size() + \" total, \" +\n      sources.size() + \" sources, \" +\n      targets.size() + \" targets)\";\n\n    long bytesToMove \u003d 0L;\n    for (Source src : sources) {\n      bytesToMove +\u003d src.scheduledSize;\n    }\n    return bytesToMove;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private long chooseNodes() {\n    // Match nodes on the same rack first\n    chooseNodes(true);\n    // Then match nodes on different racks\n    chooseNodes(false);\n    \n    assert (datanodes.size() \u003e\u003d sources.size()+targets.size())\n      : \"Mismatched number of datanodes (\" +\n      datanodes.size() + \" total, \" +\n      sources.size() + \" sources, \" +\n      targets.size() + \" targets)\";\n\n    long bytesToMove \u003d 0L;\n    for (Source src : sources) {\n      bytesToMove +\u003d src.scheduledSize;\n    }\n    return bytesToMove;\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,18 @@\n+  private long chooseNodes() {\n+    // Match nodes on the same rack first\n+    chooseNodes(true);\n+    // Then match nodes on different racks\n+    chooseNodes(false);\n+    \n+    assert (datanodes.size() \u003e\u003d sources.size()+targets.size())\n+      : \"Mismatched number of datanodes (\" +\n+      datanodes.size() + \" total, \" +\n+      sources.size() + \" sources, \" +\n+      targets.size() + \" targets)\";\n+\n+    long bytesToMove \u003d 0L;\n+    for (Source src : sources) {\n+      bytesToMove +\u003d src.scheduledSize;\n+    }\n+    return bytesToMove;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private long chooseNodes() {\n    // Match nodes on the same rack first\n    chooseNodes(true);\n    // Then match nodes on different racks\n    chooseNodes(false);\n    \n    assert (datanodes.size() \u003e\u003d sources.size()+targets.size())\n      : \"Mismatched number of datanodes (\" +\n      datanodes.size() + \" total, \" +\n      sources.size() + \" sources, \" +\n      targets.size() + \" targets)\";\n\n    long bytesToMove \u003d 0L;\n    for (Source src : sources) {\n      bytesToMove +\u003d src.scheduledSize;\n    }\n    return bytesToMove;\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java"
    }
  }
}