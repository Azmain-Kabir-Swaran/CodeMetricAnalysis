{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSConfigToCSConfigRuleHandler.java",
  "functionName": "setActionForProperty",
  "functionId": "setActionForProperty___property-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/converter/FSConfigToCSConfigRuleHandler.java",
  "functionStartLine": 258,
  "functionEndLine": 273,
  "numCommitsSeen": 7,
  "timeTaken": 1001,
  "changeHistory": [
    "5cc7873a4723a6c8e8e001d008fcd522eec0433d"
  ],
  "changeHistoryShort": {
    "5cc7873a4723a6c8e8e001d008fcd522eec0433d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5cc7873a4723a6c8e8e001d008fcd522eec0433d": {
      "type": "Yintroduced",
      "commitMessage": "YARN-9699. Migration tool that help to generate CS config based on FS config [Phase 1]. Contributed by Peter Bacsko\n",
      "commitDate": "14/10/19 8:19 AM",
      "commitName": "5cc7873a4723a6c8e8e001d008fcd522eec0433d",
      "commitAuthor": "Szilard Nemeth",
      "diff": "@@ -0,0 +1,16 @@\n+  private void setActionForProperty(String property) {\n+    String action \u003d properties.getProperty(property);\n+\n+    if (action \u003d\u003d null) {\n+      LOG.info(\"No rule set for {}, defaulting to WARNING\", property);\n+      actions.put(property, RuleAction.WARNING);\n+    } else if (action.equalsIgnoreCase(\"warning\")) {\n+      actions.put(property, RuleAction.WARNING);\n+    } else if (action.equalsIgnoreCase(\"abort\")) {\n+      actions.put(property, RuleAction.ABORT);\n+    } else {\n+      LOG.warn(\"Unknown action {} set for rule {}, defaulting to WARNING\",\n+          action, property);\n+      actions.put(property, RuleAction.WARNING);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void setActionForProperty(String property) {\n    String action \u003d properties.getProperty(property);\n\n    if (action \u003d\u003d null) {\n      LOG.info(\"No rule set for {}, defaulting to WARNING\", property);\n      actions.put(property, RuleAction.WARNING);\n    } else if (action.equalsIgnoreCase(\"warning\")) {\n      actions.put(property, RuleAction.WARNING);\n    } else if (action.equalsIgnoreCase(\"abort\")) {\n      actions.put(property, RuleAction.ABORT);\n    } else {\n      LOG.warn(\"Unknown action {} set for rule {}, defaulting to WARNING\",\n          action, property);\n      actions.put(property, RuleAction.WARNING);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/converter/FSConfigToCSConfigRuleHandler.java"
    }
  }
}