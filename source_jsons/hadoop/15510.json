{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Diff.java",
  "functionName": "apply2Previous",
  "functionId": "apply2Previous___previous-List__E__(modifiers-final)__clist-List__E__(modifiers-final)__dlist-List__E__(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/util/Diff.java",
  "functionStartLine": 418,
  "functionEndLine": 466,
  "numCommitsSeen": 31,
  "timeTaken": 2316,
  "changeHistory": [
    "41312abe841e9be79f3dba0957bc7261c880cf8f",
    "424b270c94297b00a850e7a821163b9802edc7ae",
    "43f8d0b9c9e209eb503451613c2f8d3fed07c203",
    "a3bf2083867db5d848ea14f145d120f02b820af2",
    "e5a7b3d4307951f0574c2341178e3cd95e69f7b7"
  ],
  "changeHistoryShort": {
    "41312abe841e9be79f3dba0957bc7261c880cf8f": "Ybodychange",
    "424b270c94297b00a850e7a821163b9802edc7ae": "Ybodychange",
    "43f8d0b9c9e209eb503451613c2f8d3fed07c203": "Yfilerename",
    "a3bf2083867db5d848ea14f145d120f02b820af2": "Ymultichange(Ymovefromfile,Yreturntypechange,Ybodychange,Yparameterchange)",
    "e5a7b3d4307951f0574c2341178e3cd95e69f7b7": "Yintroduced"
  },
  "changeHistoryDetails": {
    "41312abe841e9be79f3dba0957bc7261c880cf8f": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4802. Disallowing snapshot on / twice should throw SnapshotException but not IllegalStateException.  Contributed by Jing Zhao\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1480015 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/05/13 11:45 AM",
      "commitName": "41312abe841e9be79f3dba0957bc7261c880cf8f",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "06/05/13 11:48 AM",
      "commitNameOld": "424b270c94297b00a850e7a821163b9802edc7ae",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 1.0,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,49 +1,49 @@\n   private static \u003cK, E extends Diff.Element\u003cK\u003e\u003e List\u003cE\u003e apply2Previous(\n       final List\u003cE\u003e previous, final List\u003cE\u003e clist, final List\u003cE\u003e dlist) {\n     // Assumptions:\n     // (A1) All lists are sorted.\n     // (A2) All elements in dlist must be in previous.\n     // (A3) All elements in clist must be not in tmp \u003d previous - dlist.\n-    final List\u003cE\u003e tmp \u003d new ArrayList\u003cE\u003e();\n+    final List\u003cE\u003e tmp \u003d new ArrayList\u003cE\u003e(previous.size() - dlist.size());\n     {\n       // tmp \u003d previous - dlist\n       final Iterator\u003cE\u003e i \u003d previous.iterator();\n       for(E deleted : dlist) {\n         E e \u003d i.next(); //since dlist is non-empty, e must exist by (A2).\n         int cmp \u003d 0;\n         for(; (cmp \u003d e.compareTo(deleted.getKey())) \u003c 0; e \u003d i.next()) {\n           tmp.add(e);\n         }\n         Preconditions.checkState(cmp \u003d\u003d 0); // check (A2)\n       }\n       for(; i.hasNext(); ) {\n         tmp.add(i.next());\n       }\n     }\n \n-    final List\u003cE\u003e current \u003d new ArrayList\u003cE\u003e();\n+    final List\u003cE\u003e current \u003d new ArrayList\u003cE\u003e(tmp.size() + clist.size());\n     {\n       // current \u003d tmp + clist\n       final Iterator\u003cE\u003e tmpIterator \u003d tmp.iterator();\n       final Iterator\u003cE\u003e cIterator \u003d clist.iterator();\n \n       E t \u003d tmpIterator.hasNext()? tmpIterator.next(): null;\n       E c \u003d cIterator.hasNext()? cIterator.next(): null;\n       for(; t !\u003d null || c !\u003d null; ) {\n         final int cmp \u003d c \u003d\u003d null? 1\n             : t \u003d\u003d null? -1\n             : c.compareTo(t.getKey());\n \n         if (cmp \u003c 0) {\n           current.add(c);\n           c \u003d cIterator.hasNext()? cIterator.next(): null;\n         } else if (cmp \u003e 0) {\n           current.add(t);\n           t \u003d tmpIterator.hasNext()? tmpIterator.next(): null;\n         } else {\n           throw new AssertionError(\"Violated assumption (A3).\");\n         }\n       }\n     }\n     return current;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static \u003cK, E extends Diff.Element\u003cK\u003e\u003e List\u003cE\u003e apply2Previous(\n      final List\u003cE\u003e previous, final List\u003cE\u003e clist, final List\u003cE\u003e dlist) {\n    // Assumptions:\n    // (A1) All lists are sorted.\n    // (A2) All elements in dlist must be in previous.\n    // (A3) All elements in clist must be not in tmp \u003d previous - dlist.\n    final List\u003cE\u003e tmp \u003d new ArrayList\u003cE\u003e(previous.size() - dlist.size());\n    {\n      // tmp \u003d previous - dlist\n      final Iterator\u003cE\u003e i \u003d previous.iterator();\n      for(E deleted : dlist) {\n        E e \u003d i.next(); //since dlist is non-empty, e must exist by (A2).\n        int cmp \u003d 0;\n        for(; (cmp \u003d e.compareTo(deleted.getKey())) \u003c 0; e \u003d i.next()) {\n          tmp.add(e);\n        }\n        Preconditions.checkState(cmp \u003d\u003d 0); // check (A2)\n      }\n      for(; i.hasNext(); ) {\n        tmp.add(i.next());\n      }\n    }\n\n    final List\u003cE\u003e current \u003d new ArrayList\u003cE\u003e(tmp.size() + clist.size());\n    {\n      // current \u003d tmp + clist\n      final Iterator\u003cE\u003e tmpIterator \u003d tmp.iterator();\n      final Iterator\u003cE\u003e cIterator \u003d clist.iterator();\n\n      E t \u003d tmpIterator.hasNext()? tmpIterator.next(): null;\n      E c \u003d cIterator.hasNext()? cIterator.next(): null;\n      for(; t !\u003d null || c !\u003d null; ) {\n        final int cmp \u003d c \u003d\u003d null? 1\n            : t \u003d\u003d null? -1\n            : c.compareTo(t.getKey());\n\n        if (cmp \u003c 0) {\n          current.add(c);\n          c \u003d cIterator.hasNext()? cIterator.next(): null;\n        } else if (cmp \u003e 0) {\n          current.add(t);\n          t \u003d tmpIterator.hasNext()? tmpIterator.next(): null;\n        } else {\n          throw new AssertionError(\"Violated assumption (A3).\");\n        }\n      }\n    }\n    return current;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/util/Diff.java",
      "extendedDetails": {}
    },
    "424b270c94297b00a850e7a821163b9802edc7ae": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4798. Update computeContentSummary() for the reference nodes in snapshots.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1479671 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/05/13 11:48 AM",
      "commitName": "424b270c94297b00a850e7a821163b9802edc7ae",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "23/04/13 7:11 PM",
      "commitNameOld": "3a812e9f3ae66cfa525faceb5af9085a4cc37232",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 12.69,
      "commitsBetweenForRepo": 69,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,49 @@\n   private static \u003cK, E extends Diff.Element\u003cK\u003e\u003e List\u003cE\u003e apply2Previous(\n       final List\u003cE\u003e previous, final List\u003cE\u003e clist, final List\u003cE\u003e dlist) {\n-    final List\u003cE\u003e current \u003d new ArrayList\u003cE\u003e(previous);\n-    for(E d : dlist) {\n-      current.remove(d);\n+    // Assumptions:\n+    // (A1) All lists are sorted.\n+    // (A2) All elements in dlist must be in previous.\n+    // (A3) All elements in clist must be not in tmp \u003d previous - dlist.\n+    final List\u003cE\u003e tmp \u003d new ArrayList\u003cE\u003e();\n+    {\n+      // tmp \u003d previous - dlist\n+      final Iterator\u003cE\u003e i \u003d previous.iterator();\n+      for(E deleted : dlist) {\n+        E e \u003d i.next(); //since dlist is non-empty, e must exist by (A2).\n+        int cmp \u003d 0;\n+        for(; (cmp \u003d e.compareTo(deleted.getKey())) \u003c 0; e \u003d i.next()) {\n+          tmp.add(e);\n+        }\n+        Preconditions.checkState(cmp \u003d\u003d 0); // check (A2)\n+      }\n+      for(; i.hasNext(); ) {\n+        tmp.add(i.next());\n+      }\n     }\n-    for(E c : clist) {\n-      final int i \u003d search(current, c.getKey());\n-      current.add(-i - 1, c);\n+\n+    final List\u003cE\u003e current \u003d new ArrayList\u003cE\u003e();\n+    {\n+      // current \u003d tmp + clist\n+      final Iterator\u003cE\u003e tmpIterator \u003d tmp.iterator();\n+      final Iterator\u003cE\u003e cIterator \u003d clist.iterator();\n+\n+      E t \u003d tmpIterator.hasNext()? tmpIterator.next(): null;\n+      E c \u003d cIterator.hasNext()? cIterator.next(): null;\n+      for(; t !\u003d null || c !\u003d null; ) {\n+        final int cmp \u003d c \u003d\u003d null? 1\n+            : t \u003d\u003d null? -1\n+            : c.compareTo(t.getKey());\n+\n+        if (cmp \u003c 0) {\n+          current.add(c);\n+          c \u003d cIterator.hasNext()? cIterator.next(): null;\n+        } else if (cmp \u003e 0) {\n+          current.add(t);\n+          t \u003d tmpIterator.hasNext()? tmpIterator.next(): null;\n+        } else {\n+          throw new AssertionError(\"Violated assumption (A3).\");\n+        }\n+      }\n     }\n     return current;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static \u003cK, E extends Diff.Element\u003cK\u003e\u003e List\u003cE\u003e apply2Previous(\n      final List\u003cE\u003e previous, final List\u003cE\u003e clist, final List\u003cE\u003e dlist) {\n    // Assumptions:\n    // (A1) All lists are sorted.\n    // (A2) All elements in dlist must be in previous.\n    // (A3) All elements in clist must be not in tmp \u003d previous - dlist.\n    final List\u003cE\u003e tmp \u003d new ArrayList\u003cE\u003e();\n    {\n      // tmp \u003d previous - dlist\n      final Iterator\u003cE\u003e i \u003d previous.iterator();\n      for(E deleted : dlist) {\n        E e \u003d i.next(); //since dlist is non-empty, e must exist by (A2).\n        int cmp \u003d 0;\n        for(; (cmp \u003d e.compareTo(deleted.getKey())) \u003c 0; e \u003d i.next()) {\n          tmp.add(e);\n        }\n        Preconditions.checkState(cmp \u003d\u003d 0); // check (A2)\n      }\n      for(; i.hasNext(); ) {\n        tmp.add(i.next());\n      }\n    }\n\n    final List\u003cE\u003e current \u003d new ArrayList\u003cE\u003e();\n    {\n      // current \u003d tmp + clist\n      final Iterator\u003cE\u003e tmpIterator \u003d tmp.iterator();\n      final Iterator\u003cE\u003e cIterator \u003d clist.iterator();\n\n      E t \u003d tmpIterator.hasNext()? tmpIterator.next(): null;\n      E c \u003d cIterator.hasNext()? cIterator.next(): null;\n      for(; t !\u003d null || c !\u003d null; ) {\n        final int cmp \u003d c \u003d\u003d null? 1\n            : t \u003d\u003d null? -1\n            : c.compareTo(t.getKey());\n\n        if (cmp \u003c 0) {\n          current.add(c);\n          c \u003d cIterator.hasNext()? cIterator.next(): null;\n        } else if (cmp \u003e 0) {\n          current.add(t);\n          t \u003d tmpIterator.hasNext()? tmpIterator.next(): null;\n        } else {\n          throw new AssertionError(\"Violated assumption (A3).\");\n        }\n      }\n    }\n    return current;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/util/Diff.java",
      "extendedDetails": {}
    },
    "43f8d0b9c9e209eb503451613c2f8d3fed07c203": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-4574. Move Diff to the util package.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1454988 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/03/13 8:45 PM",
      "commitName": "43f8d0b9c9e209eb503451613c2f8d3fed07c203",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "09/03/13 10:14 AM",
      "commitNameOld": "d32fb8a62b323a21228d864ce0e859464fb1f160",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 1.4,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private static \u003cK, E extends Diff.Element\u003cK\u003e\u003e List\u003cE\u003e apply2Previous(\n      final List\u003cE\u003e previous, final List\u003cE\u003e clist, final List\u003cE\u003e dlist) {\n    final List\u003cE\u003e current \u003d new ArrayList\u003cE\u003e(previous);\n    for(E d : dlist) {\n      current.remove(d);\n    }\n    for(E c : clist) {\n      final int i \u003d search(current, c.getKey());\n      current.add(-i - 1, c);\n    }\n    return current;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/util/Diff.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/diff/Diff.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/util/Diff.java"
      }
    },
    "a3bf2083867db5d848ea14f145d120f02b820af2": {
      "type": "Ymultichange(Ymovefromfile,Yreturntypechange,Ybodychange,Yparameterchange)",
      "commitMessage": "HDFS-4441. Move INodeDirectoryWithSnapshot.Diff and the related classes to a package.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1438782 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/01/13 4:01 PM",
      "commitName": "a3bf2083867db5d848ea14f145d120f02b820af2",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-4441. Move INodeDirectoryWithSnapshot.Diff and the related classes to a package.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1438782 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "25/01/13 4:01 PM",
          "commitName": "a3bf2083867db5d848ea14f145d120f02b820af2",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "24/01/13 7:13 PM",
          "commitNameOld": "569d63d36cfc1744288b9ad756c0ff7d762f1549",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 0.87,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,12 @@\n-    private static List\u003cINode\u003e apply2Previous(final List\u003cINode\u003e previous,\n-        final List\u003cINode\u003e clist, final List\u003cINode\u003e dlist) {\n-      final List\u003cINode\u003e current \u003d new ArrayList\u003cINode\u003e(previous);\n-      if (dlist !\u003d null) {\n-        for(INode d : dlist) {\n-          current.remove(d);\n-        }\n-      }\n-      if (clist !\u003d null) {\n-        for(INode c : clist) {\n-          final int i \u003d search(current, c);\n-          current.add(-i - 1, c);\n-        }\n-      }\n-      return current;\n-    }\n\\ No newline at end of file\n+  private static \u003cK, E extends Diff.Element\u003cK\u003e\u003e List\u003cE\u003e apply2Previous(\n+      final List\u003cE\u003e previous, final List\u003cE\u003e clist, final List\u003cE\u003e dlist) {\n+    final List\u003cE\u003e current \u003d new ArrayList\u003cE\u003e(previous);\n+    for(E d : dlist) {\n+      current.remove(d);\n+    }\n+    for(E c : clist) {\n+      final int i \u003d search(current, c.getKey());\n+      current.add(-i - 1, c);\n+    }\n+    return current;\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  private static \u003cK, E extends Diff.Element\u003cK\u003e\u003e List\u003cE\u003e apply2Previous(\n      final List\u003cE\u003e previous, final List\u003cE\u003e clist, final List\u003cE\u003e dlist) {\n    final List\u003cE\u003e current \u003d new ArrayList\u003cE\u003e(previous);\n    for(E d : dlist) {\n      current.remove(d);\n    }\n    for(E c : clist) {\n      final int i \u003d search(current, c.getKey());\n      current.add(-i - 1, c);\n    }\n    return current;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/diff/Diff.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/INodeDirectoryWithSnapshot.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/diff/Diff.java",
            "oldMethodName": "apply2Previous",
            "newMethodName": "apply2Previous"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-4441. Move INodeDirectoryWithSnapshot.Diff and the related classes to a package.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1438782 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "25/01/13 4:01 PM",
          "commitName": "a3bf2083867db5d848ea14f145d120f02b820af2",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "24/01/13 7:13 PM",
          "commitNameOld": "569d63d36cfc1744288b9ad756c0ff7d762f1549",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 0.87,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,12 @@\n-    private static List\u003cINode\u003e apply2Previous(final List\u003cINode\u003e previous,\n-        final List\u003cINode\u003e clist, final List\u003cINode\u003e dlist) {\n-      final List\u003cINode\u003e current \u003d new ArrayList\u003cINode\u003e(previous);\n-      if (dlist !\u003d null) {\n-        for(INode d : dlist) {\n-          current.remove(d);\n-        }\n-      }\n-      if (clist !\u003d null) {\n-        for(INode c : clist) {\n-          final int i \u003d search(current, c);\n-          current.add(-i - 1, c);\n-        }\n-      }\n-      return current;\n-    }\n\\ No newline at end of file\n+  private static \u003cK, E extends Diff.Element\u003cK\u003e\u003e List\u003cE\u003e apply2Previous(\n+      final List\u003cE\u003e previous, final List\u003cE\u003e clist, final List\u003cE\u003e dlist) {\n+    final List\u003cE\u003e current \u003d new ArrayList\u003cE\u003e(previous);\n+    for(E d : dlist) {\n+      current.remove(d);\n+    }\n+    for(E c : clist) {\n+      final int i \u003d search(current, c.getKey());\n+      current.add(-i - 1, c);\n+    }\n+    return current;\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  private static \u003cK, E extends Diff.Element\u003cK\u003e\u003e List\u003cE\u003e apply2Previous(\n      final List\u003cE\u003e previous, final List\u003cE\u003e clist, final List\u003cE\u003e dlist) {\n    final List\u003cE\u003e current \u003d new ArrayList\u003cE\u003e(previous);\n    for(E d : dlist) {\n      current.remove(d);\n    }\n    for(E c : clist) {\n      final int i \u003d search(current, c.getKey());\n      current.add(-i - 1, c);\n    }\n    return current;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/diff/Diff.java",
          "extendedDetails": {
            "oldValue": "List\u003cINode\u003e",
            "newValue": "List\u003cE\u003e"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-4441. Move INodeDirectoryWithSnapshot.Diff and the related classes to a package.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1438782 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "25/01/13 4:01 PM",
          "commitName": "a3bf2083867db5d848ea14f145d120f02b820af2",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "24/01/13 7:13 PM",
          "commitNameOld": "569d63d36cfc1744288b9ad756c0ff7d762f1549",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 0.87,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,12 @@\n-    private static List\u003cINode\u003e apply2Previous(final List\u003cINode\u003e previous,\n-        final List\u003cINode\u003e clist, final List\u003cINode\u003e dlist) {\n-      final List\u003cINode\u003e current \u003d new ArrayList\u003cINode\u003e(previous);\n-      if (dlist !\u003d null) {\n-        for(INode d : dlist) {\n-          current.remove(d);\n-        }\n-      }\n-      if (clist !\u003d null) {\n-        for(INode c : clist) {\n-          final int i \u003d search(current, c);\n-          current.add(-i - 1, c);\n-        }\n-      }\n-      return current;\n-    }\n\\ No newline at end of file\n+  private static \u003cK, E extends Diff.Element\u003cK\u003e\u003e List\u003cE\u003e apply2Previous(\n+      final List\u003cE\u003e previous, final List\u003cE\u003e clist, final List\u003cE\u003e dlist) {\n+    final List\u003cE\u003e current \u003d new ArrayList\u003cE\u003e(previous);\n+    for(E d : dlist) {\n+      current.remove(d);\n+    }\n+    for(E c : clist) {\n+      final int i \u003d search(current, c.getKey());\n+      current.add(-i - 1, c);\n+    }\n+    return current;\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  private static \u003cK, E extends Diff.Element\u003cK\u003e\u003e List\u003cE\u003e apply2Previous(\n      final List\u003cE\u003e previous, final List\u003cE\u003e clist, final List\u003cE\u003e dlist) {\n    final List\u003cE\u003e current \u003d new ArrayList\u003cE\u003e(previous);\n    for(E d : dlist) {\n      current.remove(d);\n    }\n    for(E c : clist) {\n      final int i \u003d search(current, c.getKey());\n      current.add(-i - 1, c);\n    }\n    return current;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/diff/Diff.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-4441. Move INodeDirectoryWithSnapshot.Diff and the related classes to a package.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1438782 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "25/01/13 4:01 PM",
          "commitName": "a3bf2083867db5d848ea14f145d120f02b820af2",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "24/01/13 7:13 PM",
          "commitNameOld": "569d63d36cfc1744288b9ad756c0ff7d762f1549",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 0.87,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,12 @@\n-    private static List\u003cINode\u003e apply2Previous(final List\u003cINode\u003e previous,\n-        final List\u003cINode\u003e clist, final List\u003cINode\u003e dlist) {\n-      final List\u003cINode\u003e current \u003d new ArrayList\u003cINode\u003e(previous);\n-      if (dlist !\u003d null) {\n-        for(INode d : dlist) {\n-          current.remove(d);\n-        }\n-      }\n-      if (clist !\u003d null) {\n-        for(INode c : clist) {\n-          final int i \u003d search(current, c);\n-          current.add(-i - 1, c);\n-        }\n-      }\n-      return current;\n-    }\n\\ No newline at end of file\n+  private static \u003cK, E extends Diff.Element\u003cK\u003e\u003e List\u003cE\u003e apply2Previous(\n+      final List\u003cE\u003e previous, final List\u003cE\u003e clist, final List\u003cE\u003e dlist) {\n+    final List\u003cE\u003e current \u003d new ArrayList\u003cE\u003e(previous);\n+    for(E d : dlist) {\n+      current.remove(d);\n+    }\n+    for(E c : clist) {\n+      final int i \u003d search(current, c.getKey());\n+      current.add(-i - 1, c);\n+    }\n+    return current;\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  private static \u003cK, E extends Diff.Element\u003cK\u003e\u003e List\u003cE\u003e apply2Previous(\n      final List\u003cE\u003e previous, final List\u003cE\u003e clist, final List\u003cE\u003e dlist) {\n    final List\u003cE\u003e current \u003d new ArrayList\u003cE\u003e(previous);\n    for(E d : dlist) {\n      current.remove(d);\n    }\n    for(E c : clist) {\n      final int i \u003d search(current, c.getKey());\n      current.add(-i - 1, c);\n    }\n    return current;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/diff/Diff.java",
          "extendedDetails": {
            "oldValue": "[previous-List\u003cINode\u003e(modifiers-final), clist-List\u003cINode\u003e(modifiers-final), dlist-List\u003cINode\u003e(modifiers-final)]",
            "newValue": "[previous-List\u003cE\u003e(modifiers-final), clist-List\u003cE\u003e(modifiers-final), dlist-List\u003cE\u003e(modifiers-final)]"
          }
        }
      ]
    },
    "e5a7b3d4307951f0574c2341178e3cd95e69f7b7": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-4141. Support directory diff - the difference between the current state and a previous snapshot of an INodeDirectory.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1405250 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/11/12 6:31 PM",
      "commitName": "e5a7b3d4307951f0574c2341178e3cd95e69f7b7",
      "commitAuthor": "Tsz-wo Sze",
      "diff": "@@ -0,0 +1,16 @@\n+    private static List\u003cINode\u003e apply2Previous(final List\u003cINode\u003e previous,\n+        final List\u003cINode\u003e clist, final List\u003cINode\u003e dlist) {\n+      final List\u003cINode\u003e current \u003d new ArrayList\u003cINode\u003e(previous);\n+      if (dlist !\u003d null) {\n+        for(INode d : dlist) {\n+          current.remove(d);\n+        }\n+      }\n+      if (clist !\u003d null) {\n+        for(INode c : clist) {\n+          final int i \u003d search(current, c);\n+          current.add(-i - 1, c);\n+        }\n+      }\n+      return current;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private static List\u003cINode\u003e apply2Previous(final List\u003cINode\u003e previous,\n        final List\u003cINode\u003e clist, final List\u003cINode\u003e dlist) {\n      final List\u003cINode\u003e current \u003d new ArrayList\u003cINode\u003e(previous);\n      if (dlist !\u003d null) {\n        for(INode d : dlist) {\n          current.remove(d);\n        }\n      }\n      if (clist !\u003d null) {\n        for(INode c : clist) {\n          final int i \u003d search(current, c);\n          current.add(-i - 1, c);\n        }\n      }\n      return current;\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/INodeDirectoryWithSnapshot.java"
    }
  }
}