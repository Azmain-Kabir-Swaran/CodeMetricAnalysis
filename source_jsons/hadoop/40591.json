{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LocalAllocationTagsManager.java",
  "functionName": "addTempTags",
  "functionId": "addTempTags___nodeId-NodeId__applicationId-ApplicationId__allocationTags-Set__String__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/constraint/algorithm/LocalAllocationTagsManager.java",
  "functionStartLine": 54,
  "functionEndLine": 69,
  "numCommitsSeen": 4,
  "timeTaken": 723,
  "changeHistory": [
    "adbe87abf8b2814e0e2988d09ef8a8569190c80e"
  ],
  "changeHistoryShort": {
    "adbe87abf8b2814e0e2988d09ef8a8569190c80e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "adbe87abf8b2814e0e2988d09ef8a8569190c80e": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7788. Factor out management of temp tags from AllocationTagsManager. (Arun Suresh via kkaranasos)\n",
      "commitDate": "31/01/18 1:30 AM",
      "commitName": "adbe87abf8b2814e0e2988d09ef8a8569190c80e",
      "commitAuthor": "Konstantinos Karanasos",
      "diff": "@@ -0,0 +1,16 @@\n+  void addTempTags(NodeId nodeId,\n+      ApplicationId applicationId, Set\u003cString\u003e allocationTags) {\n+    Map\u003cNodeId, Map\u003cString, AtomicInteger\u003e\u003e appTempMapping \u003d\n+        appTempMappings.computeIfAbsent(applicationId, k -\u003e new HashMap\u003c\u003e());\n+    Map\u003cString, AtomicInteger\u003e containerTempMapping \u003d\n+        appTempMapping.computeIfAbsent(nodeId, k -\u003e new HashMap\u003c\u003e());\n+    for (String tag : allocationTags) {\n+      containerTempMapping.computeIfAbsent(tag,\n+          k -\u003e new AtomicInteger(0)).incrementAndGet();\n+    }\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"Added TEMP container with tags\u003d[\"\n+          + StringUtils.join(allocationTags, \",\") + \"]\");\n+    }\n+    tagsManager.addTags(nodeId, applicationId, allocationTags);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  void addTempTags(NodeId nodeId,\n      ApplicationId applicationId, Set\u003cString\u003e allocationTags) {\n    Map\u003cNodeId, Map\u003cString, AtomicInteger\u003e\u003e appTempMapping \u003d\n        appTempMappings.computeIfAbsent(applicationId, k -\u003e new HashMap\u003c\u003e());\n    Map\u003cString, AtomicInteger\u003e containerTempMapping \u003d\n        appTempMapping.computeIfAbsent(nodeId, k -\u003e new HashMap\u003c\u003e());\n    for (String tag : allocationTags) {\n      containerTempMapping.computeIfAbsent(tag,\n          k -\u003e new AtomicInteger(0)).incrementAndGet();\n    }\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Added TEMP container with tags\u003d[\"\n          + StringUtils.join(allocationTags, \",\") + \"]\");\n    }\n    tagsManager.addTags(nodeId, applicationId, allocationTags);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/constraint/algorithm/LocalAllocationTagsManager.java"
    }
  }
}