{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ManagedParentQueue.java",
  "functionName": "validateQueueManagementChanges",
  "functionId": "validateQueueManagementChanges___queueManagementChanges-List__QueueManagementChange__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ManagedParentQueue.java",
  "functionStartLine": 387,
  "functionEndLine": 420,
  "numCommitsSeen": 8,
  "timeTaken": 2357,
  "changeHistory": [
    "cdb2107066a2d8557270888c0a9a75f29a6853bf",
    "b38643c9a8dd2c53024ae830b9565a550d0ec39c"
  ],
  "changeHistoryShort": {
    "cdb2107066a2d8557270888c0a9a75f29a6853bf": "Ybodychange",
    "b38643c9a8dd2c53024ae830b9565a550d0ec39c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cdb2107066a2d8557270888c0a9a75f29a6853bf": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9879. Allow multiple leaf queues with the same name in CapacityScheduler. Contributed by Gergely Pollak.\n",
      "commitDate": "25/03/20 4:20 AM",
      "commitName": "cdb2107066a2d8557270888c0a9a75f29a6853bf",
      "commitAuthor": "Sunil G",
      "commitDateOld": "07/03/19 1:47 PM",
      "commitNameOld": "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 383.56,
      "commitsBetweenForRepo": 2259,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,34 @@\n   public void validateQueueManagementChanges(\n       List\u003cQueueManagementChange\u003e queueManagementChanges)\n       throws SchedulerDynamicEditException {\n \n     for (QueueManagementChange queueManagementChange : queueManagementChanges) {\n \n       CSQueue childQueue \u003d queueManagementChange.getQueue();\n \n       if (!(childQueue instanceof AutoCreatedLeafQueue)) {\n         throw new SchedulerDynamicEditException(\n             \"queue should be \" + \"AutoCreatedLeafQueue. Found \" + childQueue\n                 .getClass());\n       }\n \n       if (!(AbstractManagedParentQueue.class.\n           isAssignableFrom(childQueue.getParent().getClass()))) {\n-        LOG.error(\"Queue \" + getQueueName()\n+        LOG.error(\"Queue \" + getQueuePath()\n             + \" is not an instance of PlanQueue or ManagedParentQueue.\" + \" \"\n             + \"Ignoring update \" + queueManagementChanges);\n         throw new SchedulerDynamicEditException(\n-            \"Queue \" + getQueueName() + \" is not a AutoEnabledParentQueue.\"\n+            \"Queue \" + getQueuePath() + \" is not a AutoEnabledParentQueue.\"\n                 + \" Ignoring update \" + queueManagementChanges);\n       }\n \n       switch (queueManagementChange.getQueueAction()){\n       case UPDATE_QUEUE:\n         AutoCreatedLeafQueueConfig template \u003d\n             queueManagementChange.getUpdatedQueueTemplate();\n         ((AutoCreatedLeafQueue) childQueue).validateConfigurations(template);\n         break;\n       }\n \n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void validateQueueManagementChanges(\n      List\u003cQueueManagementChange\u003e queueManagementChanges)\n      throws SchedulerDynamicEditException {\n\n    for (QueueManagementChange queueManagementChange : queueManagementChanges) {\n\n      CSQueue childQueue \u003d queueManagementChange.getQueue();\n\n      if (!(childQueue instanceof AutoCreatedLeafQueue)) {\n        throw new SchedulerDynamicEditException(\n            \"queue should be \" + \"AutoCreatedLeafQueue. Found \" + childQueue\n                .getClass());\n      }\n\n      if (!(AbstractManagedParentQueue.class.\n          isAssignableFrom(childQueue.getParent().getClass()))) {\n        LOG.error(\"Queue \" + getQueuePath()\n            + \" is not an instance of PlanQueue or ManagedParentQueue.\" + \" \"\n            + \"Ignoring update \" + queueManagementChanges);\n        throw new SchedulerDynamicEditException(\n            \"Queue \" + getQueuePath() + \" is not a AutoEnabledParentQueue.\"\n                + \" Ignoring update \" + queueManagementChanges);\n      }\n\n      switch (queueManagementChange.getQueueAction()){\n      case UPDATE_QUEUE:\n        AutoCreatedLeafQueueConfig template \u003d\n            queueManagementChange.getUpdatedQueueTemplate();\n        ((AutoCreatedLeafQueue) childQueue).validateConfigurations(template);\n        break;\n      }\n\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ManagedParentQueue.java",
      "extendedDetails": {}
    },
    "b38643c9a8dd2c53024ae830b9565a550d0ec39c": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7473. Implement Framework and policy for capacity management of auto created queues. (Suma Shivaprasad via wangda)\n\nChange-Id: Icca7805fe12f6f7fb335effff4b121b6f7f6337b\n",
      "commitDate": "08/12/17 3:10 PM",
      "commitName": "b38643c9a8dd2c53024ae830b9565a550d0ec39c",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,33 @@\n+  public void validateQueueManagementChanges(\n+      List\u003cQueueManagementChange\u003e queueManagementChanges)\n+      throws SchedulerDynamicEditException {\n+\n+    for (QueueManagementChange queueManagementChange : queueManagementChanges) {\n+\n+      CSQueue childQueue \u003d queueManagementChange.getQueue();\n+\n+      if (!(childQueue instanceof AutoCreatedLeafQueue)) {\n+        throw new SchedulerDynamicEditException(\n+            \"queue should be \" + \"AutoCreatedLeafQueue. Found \" + childQueue\n+                .getClass());\n+      }\n+\n+      if (!(AbstractManagedParentQueue.class.\n+          isAssignableFrom(childQueue.getParent().getClass()))) {\n+        LOG.error(\"Queue \" + getQueueName()\n+            + \" is not an instance of PlanQueue or ManagedParentQueue.\" + \" \"\n+            + \"Ignoring update \" + queueManagementChanges);\n+        throw new SchedulerDynamicEditException(\n+            \"Queue \" + getQueueName() + \" is not a AutoEnabledParentQueue.\"\n+                + \" Ignoring update \" + queueManagementChanges);\n+      }\n+\n+      switch (queueManagementChange.getQueueAction()){\n+      case UPDATE_QUEUE:\n+        AutoCreatedLeafQueueConfig template \u003d\n+            queueManagementChange.getUpdatedQueueTemplate();\n+        ((AutoCreatedLeafQueue) childQueue).validateConfigurations(template);\n+        break;\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void validateQueueManagementChanges(\n      List\u003cQueueManagementChange\u003e queueManagementChanges)\n      throws SchedulerDynamicEditException {\n\n    for (QueueManagementChange queueManagementChange : queueManagementChanges) {\n\n      CSQueue childQueue \u003d queueManagementChange.getQueue();\n\n      if (!(childQueue instanceof AutoCreatedLeafQueue)) {\n        throw new SchedulerDynamicEditException(\n            \"queue should be \" + \"AutoCreatedLeafQueue. Found \" + childQueue\n                .getClass());\n      }\n\n      if (!(AbstractManagedParentQueue.class.\n          isAssignableFrom(childQueue.getParent().getClass()))) {\n        LOG.error(\"Queue \" + getQueueName()\n            + \" is not an instance of PlanQueue or ManagedParentQueue.\" + \" \"\n            + \"Ignoring update \" + queueManagementChanges);\n        throw new SchedulerDynamicEditException(\n            \"Queue \" + getQueueName() + \" is not a AutoEnabledParentQueue.\"\n                + \" Ignoring update \" + queueManagementChanges);\n      }\n\n      switch (queueManagementChange.getQueueAction()){\n      case UPDATE_QUEUE:\n        AutoCreatedLeafQueueConfig template \u003d\n            queueManagementChange.getUpdatedQueueTemplate();\n        ((AutoCreatedLeafQueue) childQueue).validateConfigurations(template);\n        break;\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ManagedParentQueue.java"
    }
  }
}