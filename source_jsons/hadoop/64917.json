{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DefaultS3ClientFactory.java",
  "functionName": "configureAmazonS3Client",
  "functionId": "configureAmazonS3Client___s3-AmazonS3__conf-Configuration",
  "sourceFilePath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/DefaultS3ClientFactory.java",
  "functionStartLine": 101,
  "functionEndLine": 115,
  "numCommitsSeen": 80,
  "timeTaken": 7348,
  "changeHistory": [
    "da9a39eed138210de29b59b90c449b28da1c04f9",
    "621b43e254afaff708cd6fc4698b29628f6abc33",
    "d152557cf7f4d2288524c222fcbaf152bdc038b0",
    "757050ff355d40bc28f9dbfd0c0083c5f337d270",
    "df18b6e9849c53c51a3d317f1254298edd8b17d1",
    "76fab26c5c02cef38924d04136407489fd9457d9"
  ],
  "changeHistoryShort": {
    "da9a39eed138210de29b59b90c449b28da1c04f9": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
    "621b43e254afaff708cd6fc4698b29628f6abc33": "Ymultichange(Ymovefromfile,Ybodychange,Yparameterchange)",
    "d152557cf7f4d2288524c222fcbaf152bdc038b0": "Ymultichange(Ymovefromfile,Yreturntypechange,Ymodifierchange,Ybodychange,Yrename)",
    "757050ff355d40bc28f9dbfd0c0083c5f337d270": "Yparameterchange",
    "df18b6e9849c53c51a3d317f1254298edd8b17d1": "Ybodychange",
    "76fab26c5c02cef38924d04136407489fd9457d9": "Yintroduced"
  },
  "changeHistoryDetails": {
    "da9a39eed138210de29b59b90c449b28da1c04f9": {
      "type": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-15583. Stabilize S3A Assumed Role support.\nContributed by Steve Loughran.\n",
      "commitDate": "08/08/18 10:57 PM",
      "commitName": "da9a39eed138210de29b59b90c449b28da1c04f9",
      "commitAuthor": "Steve Loughran",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "HADOOP-15583. Stabilize S3A Assumed Role support.\nContributed by Steve Loughran.\n",
          "commitDate": "08/08/18 10:57 PM",
          "commitName": "da9a39eed138210de29b59b90c449b28da1c04f9",
          "commitAuthor": "Steve Loughran",
          "commitDateOld": "01/09/17 6:13 AM",
          "commitNameOld": "621b43e254afaff708cd6fc4698b29628f6abc33",
          "commitAuthorOld": "Steve Loughran",
          "daysBetweenCommits": 341.7,
          "commitsBetweenForRepo": 3035,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,15 @@\n-  private static AmazonS3 createAmazonS3Client(AmazonS3 s3, Configuration conf,\n-      AWSCredentialsProvider credentials, ClientConfiguration awsConf)\n+  private static AmazonS3 configureAmazonS3Client(AmazonS3 s3,\n+      Configuration conf)\n       throws IllegalArgumentException {\n     String endPoint \u003d conf.getTrimmed(ENDPOINT, \"\");\n     if (!endPoint.isEmpty()) {\n       try {\n         s3.setEndpoint(endPoint);\n       } catch (IllegalArgumentException e) {\n         String msg \u003d \"Incorrect endpoint: \"  + e.getMessage();\n         LOG.error(msg);\n         throw new IllegalArgumentException(msg, e);\n       }\n     }\n-    enablePathStyleAccessIfRequired(s3, conf);\n-    return s3;\n+    return applyS3ClientOptions(s3, conf);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static AmazonS3 configureAmazonS3Client(AmazonS3 s3,\n      Configuration conf)\n      throws IllegalArgumentException {\n    String endPoint \u003d conf.getTrimmed(ENDPOINT, \"\");\n    if (!endPoint.isEmpty()) {\n      try {\n        s3.setEndpoint(endPoint);\n      } catch (IllegalArgumentException e) {\n        String msg \u003d \"Incorrect endpoint: \"  + e.getMessage();\n        LOG.error(msg);\n        throw new IllegalArgumentException(msg, e);\n      }\n    }\n    return applyS3ClientOptions(s3, conf);\n  }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/DefaultS3ClientFactory.java",
          "extendedDetails": {
            "oldValue": "createAmazonS3Client",
            "newValue": "configureAmazonS3Client"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-15583. Stabilize S3A Assumed Role support.\nContributed by Steve Loughran.\n",
          "commitDate": "08/08/18 10:57 PM",
          "commitName": "da9a39eed138210de29b59b90c449b28da1c04f9",
          "commitAuthor": "Steve Loughran",
          "commitDateOld": "01/09/17 6:13 AM",
          "commitNameOld": "621b43e254afaff708cd6fc4698b29628f6abc33",
          "commitAuthorOld": "Steve Loughran",
          "daysBetweenCommits": 341.7,
          "commitsBetweenForRepo": 3035,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,15 @@\n-  private static AmazonS3 createAmazonS3Client(AmazonS3 s3, Configuration conf,\n-      AWSCredentialsProvider credentials, ClientConfiguration awsConf)\n+  private static AmazonS3 configureAmazonS3Client(AmazonS3 s3,\n+      Configuration conf)\n       throws IllegalArgumentException {\n     String endPoint \u003d conf.getTrimmed(ENDPOINT, \"\");\n     if (!endPoint.isEmpty()) {\n       try {\n         s3.setEndpoint(endPoint);\n       } catch (IllegalArgumentException e) {\n         String msg \u003d \"Incorrect endpoint: \"  + e.getMessage();\n         LOG.error(msg);\n         throw new IllegalArgumentException(msg, e);\n       }\n     }\n-    enablePathStyleAccessIfRequired(s3, conf);\n-    return s3;\n+    return applyS3ClientOptions(s3, conf);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static AmazonS3 configureAmazonS3Client(AmazonS3 s3,\n      Configuration conf)\n      throws IllegalArgumentException {\n    String endPoint \u003d conf.getTrimmed(ENDPOINT, \"\");\n    if (!endPoint.isEmpty()) {\n      try {\n        s3.setEndpoint(endPoint);\n      } catch (IllegalArgumentException e) {\n        String msg \u003d \"Incorrect endpoint: \"  + e.getMessage();\n        LOG.error(msg);\n        throw new IllegalArgumentException(msg, e);\n      }\n    }\n    return applyS3ClientOptions(s3, conf);\n  }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/DefaultS3ClientFactory.java",
          "extendedDetails": {
            "oldValue": "[s3-AmazonS3, conf-Configuration, credentials-AWSCredentialsProvider, awsConf-ClientConfiguration]",
            "newValue": "[s3-AmazonS3, conf-Configuration]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-15583. Stabilize S3A Assumed Role support.\nContributed by Steve Loughran.\n",
          "commitDate": "08/08/18 10:57 PM",
          "commitName": "da9a39eed138210de29b59b90c449b28da1c04f9",
          "commitAuthor": "Steve Loughran",
          "commitDateOld": "01/09/17 6:13 AM",
          "commitNameOld": "621b43e254afaff708cd6fc4698b29628f6abc33",
          "commitAuthorOld": "Steve Loughran",
          "daysBetweenCommits": 341.7,
          "commitsBetweenForRepo": 3035,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,15 @@\n-  private static AmazonS3 createAmazonS3Client(AmazonS3 s3, Configuration conf,\n-      AWSCredentialsProvider credentials, ClientConfiguration awsConf)\n+  private static AmazonS3 configureAmazonS3Client(AmazonS3 s3,\n+      Configuration conf)\n       throws IllegalArgumentException {\n     String endPoint \u003d conf.getTrimmed(ENDPOINT, \"\");\n     if (!endPoint.isEmpty()) {\n       try {\n         s3.setEndpoint(endPoint);\n       } catch (IllegalArgumentException e) {\n         String msg \u003d \"Incorrect endpoint: \"  + e.getMessage();\n         LOG.error(msg);\n         throw new IllegalArgumentException(msg, e);\n       }\n     }\n-    enablePathStyleAccessIfRequired(s3, conf);\n-    return s3;\n+    return applyS3ClientOptions(s3, conf);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static AmazonS3 configureAmazonS3Client(AmazonS3 s3,\n      Configuration conf)\n      throws IllegalArgumentException {\n    String endPoint \u003d conf.getTrimmed(ENDPOINT, \"\");\n    if (!endPoint.isEmpty()) {\n      try {\n        s3.setEndpoint(endPoint);\n      } catch (IllegalArgumentException e) {\n        String msg \u003d \"Incorrect endpoint: \"  + e.getMessage();\n        LOG.error(msg);\n        throw new IllegalArgumentException(msg, e);\n      }\n    }\n    return applyS3ClientOptions(s3, conf);\n  }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/DefaultS3ClientFactory.java",
          "extendedDetails": {}
        }
      ]
    },
    "621b43e254afaff708cd6fc4698b29628f6abc33": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange,Yparameterchange)",
      "commitMessage": "HADOOP-13345 HS3Guard: Improved Consistency for S3A.\nContributed by: Chris Nauroth, Aaron Fabbri, Mingliang Liu, Lei (Eddy) Xu,\nSean Mackrory, Steve Loughran and others.\n",
      "commitDate": "01/09/17 6:13 AM",
      "commitName": "621b43e254afaff708cd6fc4698b29628f6abc33",
      "commitAuthor": "Steve Loughran",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HADOOP-13345 HS3Guard: Improved Consistency for S3A.\nContributed by: Chris Nauroth, Aaron Fabbri, Mingliang Liu, Lei (Eddy) Xu,\nSean Mackrory, Steve Loughran and others.\n",
          "commitDate": "01/09/17 6:13 AM",
          "commitName": "621b43e254afaff708cd6fc4698b29628f6abc33",
          "commitAuthor": "Steve Loughran",
          "commitDateOld": "01/09/17 2:48 AM",
          "commitNameOld": "7a96033b15580a01a2867fa3cab9c1e409dbaafd",
          "commitAuthorOld": "Kai Zheng",
          "daysBetweenCommits": 0.14,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,16 @@\n-    private static AmazonS3 createAmazonS3Client(Configuration conf,\n-        AWSCredentialsProvider credentials, ClientConfiguration awsConf)\n-        throws IllegalArgumentException {\n-      AmazonS3 s3 \u003d new AmazonS3Client(credentials, awsConf);\n-      String endPoint \u003d conf.getTrimmed(ENDPOINT, \"\");\n-      if (!endPoint.isEmpty()) {\n-        try {\n-          s3.setEndpoint(endPoint);\n-        } catch (IllegalArgumentException e) {\n-          String msg \u003d \"Incorrect endpoint: \"  + e.getMessage();\n-          LOG.error(msg);\n-          throw new IllegalArgumentException(msg, e);\n-        }\n+  private static AmazonS3 createAmazonS3Client(AmazonS3 s3, Configuration conf,\n+      AWSCredentialsProvider credentials, ClientConfiguration awsConf)\n+      throws IllegalArgumentException {\n+    String endPoint \u003d conf.getTrimmed(ENDPOINT, \"\");\n+    if (!endPoint.isEmpty()) {\n+      try {\n+        s3.setEndpoint(endPoint);\n+      } catch (IllegalArgumentException e) {\n+        String msg \u003d \"Incorrect endpoint: \"  + e.getMessage();\n+        LOG.error(msg);\n+        throw new IllegalArgumentException(msg, e);\n       }\n-      enablePathStyleAccessIfRequired(s3, conf);\n-      return s3;\n-    }\n\\ No newline at end of file\n+    }\n+    enablePathStyleAccessIfRequired(s3, conf);\n+    return s3;\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  private static AmazonS3 createAmazonS3Client(AmazonS3 s3, Configuration conf,\n      AWSCredentialsProvider credentials, ClientConfiguration awsConf)\n      throws IllegalArgumentException {\n    String endPoint \u003d conf.getTrimmed(ENDPOINT, \"\");\n    if (!endPoint.isEmpty()) {\n      try {\n        s3.setEndpoint(endPoint);\n      } catch (IllegalArgumentException e) {\n        String msg \u003d \"Incorrect endpoint: \"  + e.getMessage();\n        LOG.error(msg);\n        throw new IllegalArgumentException(msg, e);\n      }\n    }\n    enablePathStyleAccessIfRequired(s3, conf);\n    return s3;\n  }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/DefaultS3ClientFactory.java",
          "extendedDetails": {
            "oldPath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3ClientFactory.java",
            "newPath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/DefaultS3ClientFactory.java",
            "oldMethodName": "createAmazonS3Client",
            "newMethodName": "createAmazonS3Client"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-13345 HS3Guard: Improved Consistency for S3A.\nContributed by: Chris Nauroth, Aaron Fabbri, Mingliang Liu, Lei (Eddy) Xu,\nSean Mackrory, Steve Loughran and others.\n",
          "commitDate": "01/09/17 6:13 AM",
          "commitName": "621b43e254afaff708cd6fc4698b29628f6abc33",
          "commitAuthor": "Steve Loughran",
          "commitDateOld": "01/09/17 2:48 AM",
          "commitNameOld": "7a96033b15580a01a2867fa3cab9c1e409dbaafd",
          "commitAuthorOld": "Kai Zheng",
          "daysBetweenCommits": 0.14,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,16 @@\n-    private static AmazonS3 createAmazonS3Client(Configuration conf,\n-        AWSCredentialsProvider credentials, ClientConfiguration awsConf)\n-        throws IllegalArgumentException {\n-      AmazonS3 s3 \u003d new AmazonS3Client(credentials, awsConf);\n-      String endPoint \u003d conf.getTrimmed(ENDPOINT, \"\");\n-      if (!endPoint.isEmpty()) {\n-        try {\n-          s3.setEndpoint(endPoint);\n-        } catch (IllegalArgumentException e) {\n-          String msg \u003d \"Incorrect endpoint: \"  + e.getMessage();\n-          LOG.error(msg);\n-          throw new IllegalArgumentException(msg, e);\n-        }\n+  private static AmazonS3 createAmazonS3Client(AmazonS3 s3, Configuration conf,\n+      AWSCredentialsProvider credentials, ClientConfiguration awsConf)\n+      throws IllegalArgumentException {\n+    String endPoint \u003d conf.getTrimmed(ENDPOINT, \"\");\n+    if (!endPoint.isEmpty()) {\n+      try {\n+        s3.setEndpoint(endPoint);\n+      } catch (IllegalArgumentException e) {\n+        String msg \u003d \"Incorrect endpoint: \"  + e.getMessage();\n+        LOG.error(msg);\n+        throw new IllegalArgumentException(msg, e);\n       }\n-      enablePathStyleAccessIfRequired(s3, conf);\n-      return s3;\n-    }\n\\ No newline at end of file\n+    }\n+    enablePathStyleAccessIfRequired(s3, conf);\n+    return s3;\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  private static AmazonS3 createAmazonS3Client(AmazonS3 s3, Configuration conf,\n      AWSCredentialsProvider credentials, ClientConfiguration awsConf)\n      throws IllegalArgumentException {\n    String endPoint \u003d conf.getTrimmed(ENDPOINT, \"\");\n    if (!endPoint.isEmpty()) {\n      try {\n        s3.setEndpoint(endPoint);\n      } catch (IllegalArgumentException e) {\n        String msg \u003d \"Incorrect endpoint: \"  + e.getMessage();\n        LOG.error(msg);\n        throw new IllegalArgumentException(msg, e);\n      }\n    }\n    enablePathStyleAccessIfRequired(s3, conf);\n    return s3;\n  }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/DefaultS3ClientFactory.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-13345 HS3Guard: Improved Consistency for S3A.\nContributed by: Chris Nauroth, Aaron Fabbri, Mingliang Liu, Lei (Eddy) Xu,\nSean Mackrory, Steve Loughran and others.\n",
          "commitDate": "01/09/17 6:13 AM",
          "commitName": "621b43e254afaff708cd6fc4698b29628f6abc33",
          "commitAuthor": "Steve Loughran",
          "commitDateOld": "01/09/17 2:48 AM",
          "commitNameOld": "7a96033b15580a01a2867fa3cab9c1e409dbaafd",
          "commitAuthorOld": "Kai Zheng",
          "daysBetweenCommits": 0.14,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,16 @@\n-    private static AmazonS3 createAmazonS3Client(Configuration conf,\n-        AWSCredentialsProvider credentials, ClientConfiguration awsConf)\n-        throws IllegalArgumentException {\n-      AmazonS3 s3 \u003d new AmazonS3Client(credentials, awsConf);\n-      String endPoint \u003d conf.getTrimmed(ENDPOINT, \"\");\n-      if (!endPoint.isEmpty()) {\n-        try {\n-          s3.setEndpoint(endPoint);\n-        } catch (IllegalArgumentException e) {\n-          String msg \u003d \"Incorrect endpoint: \"  + e.getMessage();\n-          LOG.error(msg);\n-          throw new IllegalArgumentException(msg, e);\n-        }\n+  private static AmazonS3 createAmazonS3Client(AmazonS3 s3, Configuration conf,\n+      AWSCredentialsProvider credentials, ClientConfiguration awsConf)\n+      throws IllegalArgumentException {\n+    String endPoint \u003d conf.getTrimmed(ENDPOINT, \"\");\n+    if (!endPoint.isEmpty()) {\n+      try {\n+        s3.setEndpoint(endPoint);\n+      } catch (IllegalArgumentException e) {\n+        String msg \u003d \"Incorrect endpoint: \"  + e.getMessage();\n+        LOG.error(msg);\n+        throw new IllegalArgumentException(msg, e);\n       }\n-      enablePathStyleAccessIfRequired(s3, conf);\n-      return s3;\n-    }\n\\ No newline at end of file\n+    }\n+    enablePathStyleAccessIfRequired(s3, conf);\n+    return s3;\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  private static AmazonS3 createAmazonS3Client(AmazonS3 s3, Configuration conf,\n      AWSCredentialsProvider credentials, ClientConfiguration awsConf)\n      throws IllegalArgumentException {\n    String endPoint \u003d conf.getTrimmed(ENDPOINT, \"\");\n    if (!endPoint.isEmpty()) {\n      try {\n        s3.setEndpoint(endPoint);\n      } catch (IllegalArgumentException e) {\n        String msg \u003d \"Incorrect endpoint: \"  + e.getMessage();\n        LOG.error(msg);\n        throw new IllegalArgumentException(msg, e);\n      }\n    }\n    enablePathStyleAccessIfRequired(s3, conf);\n    return s3;\n  }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/DefaultS3ClientFactory.java",
          "extendedDetails": {
            "oldValue": "[conf-Configuration, credentials-AWSCredentialsProvider, awsConf-ClientConfiguration]",
            "newValue": "[s3-AmazonS3, conf-Configuration, credentials-AWSCredentialsProvider, awsConf-ClientConfiguration]"
          }
        }
      ]
    },
    "d152557cf7f4d2288524c222fcbaf152bdc038b0": {
      "type": "Ymultichange(Ymovefromfile,Yreturntypechange,Ymodifierchange,Ybodychange,Yrename)",
      "commitMessage": "HADOOP-13447. Refactor S3AFileSystem to support introduction of separate metadata repository and tests. Contributed by Chris Nauroth.\n",
      "commitDate": "06/09/16 9:36 AM",
      "commitName": "d152557cf7f4d2288524c222fcbaf152bdc038b0",
      "commitAuthor": "Chris Nauroth",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HADOOP-13447. Refactor S3AFileSystem to support introduction of separate metadata repository and tests. Contributed by Chris Nauroth.\n",
          "commitDate": "06/09/16 9:36 AM",
          "commitName": "d152557cf7f4d2288524c222fcbaf152bdc038b0",
          "commitAuthor": "Chris Nauroth",
          "commitDateOld": "06/09/16 8:02 AM",
          "commitNameOld": "39d1b1d747b1e325792b897b3264272f32b756a9",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 0.07,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,17 @@\n-  private void initAmazonS3Client(Configuration conf,\n-      AWSCredentialsProvider credentials, ClientConfiguration awsConf)\n-      throws IllegalArgumentException {\n-    s3 \u003d new AmazonS3Client(credentials, awsConf);\n-    String endPoint \u003d conf.getTrimmed(ENDPOINT, \"\");\n-    if (!endPoint.isEmpty()) {\n-      try {\n-        s3.setEndpoint(endPoint);\n-      } catch (IllegalArgumentException e) {\n-        String msg \u003d \"Incorrect endpoint: \"  + e.getMessage();\n-        LOG.error(msg);\n-        throw new IllegalArgumentException(msg, e);\n+    private static AmazonS3 createAmazonS3Client(Configuration conf,\n+        AWSCredentialsProvider credentials, ClientConfiguration awsConf)\n+        throws IllegalArgumentException {\n+      AmazonS3 s3 \u003d new AmazonS3Client(credentials, awsConf);\n+      String endPoint \u003d conf.getTrimmed(ENDPOINT, \"\");\n+      if (!endPoint.isEmpty()) {\n+        try {\n+          s3.setEndpoint(endPoint);\n+        } catch (IllegalArgumentException e) {\n+          String msg \u003d \"Incorrect endpoint: \"  + e.getMessage();\n+          LOG.error(msg);\n+          throw new IllegalArgumentException(msg, e);\n+        }\n       }\n-    }\n-    enablePathStyleAccessIfRequired(conf);\n-  }\n\\ No newline at end of file\n+      enablePathStyleAccessIfRequired(s3, conf);\n+      return s3;\n+    }\n\\ No newline at end of file\n",
          "actualSource": "    private static AmazonS3 createAmazonS3Client(Configuration conf,\n        AWSCredentialsProvider credentials, ClientConfiguration awsConf)\n        throws IllegalArgumentException {\n      AmazonS3 s3 \u003d new AmazonS3Client(credentials, awsConf);\n      String endPoint \u003d conf.getTrimmed(ENDPOINT, \"\");\n      if (!endPoint.isEmpty()) {\n        try {\n          s3.setEndpoint(endPoint);\n        } catch (IllegalArgumentException e) {\n          String msg \u003d \"Incorrect endpoint: \"  + e.getMessage();\n          LOG.error(msg);\n          throw new IllegalArgumentException(msg, e);\n        }\n      }\n      enablePathStyleAccessIfRequired(s3, conf);\n      return s3;\n    }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3ClientFactory.java",
          "extendedDetails": {
            "oldPath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java",
            "newPath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3ClientFactory.java",
            "oldMethodName": "initAmazonS3Client",
            "newMethodName": "createAmazonS3Client"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "HADOOP-13447. Refactor S3AFileSystem to support introduction of separate metadata repository and tests. Contributed by Chris Nauroth.\n",
          "commitDate": "06/09/16 9:36 AM",
          "commitName": "d152557cf7f4d2288524c222fcbaf152bdc038b0",
          "commitAuthor": "Chris Nauroth",
          "commitDateOld": "06/09/16 8:02 AM",
          "commitNameOld": "39d1b1d747b1e325792b897b3264272f32b756a9",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 0.07,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,17 @@\n-  private void initAmazonS3Client(Configuration conf,\n-      AWSCredentialsProvider credentials, ClientConfiguration awsConf)\n-      throws IllegalArgumentException {\n-    s3 \u003d new AmazonS3Client(credentials, awsConf);\n-    String endPoint \u003d conf.getTrimmed(ENDPOINT, \"\");\n-    if (!endPoint.isEmpty()) {\n-      try {\n-        s3.setEndpoint(endPoint);\n-      } catch (IllegalArgumentException e) {\n-        String msg \u003d \"Incorrect endpoint: \"  + e.getMessage();\n-        LOG.error(msg);\n-        throw new IllegalArgumentException(msg, e);\n+    private static AmazonS3 createAmazonS3Client(Configuration conf,\n+        AWSCredentialsProvider credentials, ClientConfiguration awsConf)\n+        throws IllegalArgumentException {\n+      AmazonS3 s3 \u003d new AmazonS3Client(credentials, awsConf);\n+      String endPoint \u003d conf.getTrimmed(ENDPOINT, \"\");\n+      if (!endPoint.isEmpty()) {\n+        try {\n+          s3.setEndpoint(endPoint);\n+        } catch (IllegalArgumentException e) {\n+          String msg \u003d \"Incorrect endpoint: \"  + e.getMessage();\n+          LOG.error(msg);\n+          throw new IllegalArgumentException(msg, e);\n+        }\n       }\n-    }\n-    enablePathStyleAccessIfRequired(conf);\n-  }\n\\ No newline at end of file\n+      enablePathStyleAccessIfRequired(s3, conf);\n+      return s3;\n+    }\n\\ No newline at end of file\n",
          "actualSource": "    private static AmazonS3 createAmazonS3Client(Configuration conf,\n        AWSCredentialsProvider credentials, ClientConfiguration awsConf)\n        throws IllegalArgumentException {\n      AmazonS3 s3 \u003d new AmazonS3Client(credentials, awsConf);\n      String endPoint \u003d conf.getTrimmed(ENDPOINT, \"\");\n      if (!endPoint.isEmpty()) {\n        try {\n          s3.setEndpoint(endPoint);\n        } catch (IllegalArgumentException e) {\n          String msg \u003d \"Incorrect endpoint: \"  + e.getMessage();\n          LOG.error(msg);\n          throw new IllegalArgumentException(msg, e);\n        }\n      }\n      enablePathStyleAccessIfRequired(s3, conf);\n      return s3;\n    }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3ClientFactory.java",
          "extendedDetails": {
            "oldValue": "void",
            "newValue": "AmazonS3"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HADOOP-13447. Refactor S3AFileSystem to support introduction of separate metadata repository and tests. Contributed by Chris Nauroth.\n",
          "commitDate": "06/09/16 9:36 AM",
          "commitName": "d152557cf7f4d2288524c222fcbaf152bdc038b0",
          "commitAuthor": "Chris Nauroth",
          "commitDateOld": "06/09/16 8:02 AM",
          "commitNameOld": "39d1b1d747b1e325792b897b3264272f32b756a9",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 0.07,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,17 @@\n-  private void initAmazonS3Client(Configuration conf,\n-      AWSCredentialsProvider credentials, ClientConfiguration awsConf)\n-      throws IllegalArgumentException {\n-    s3 \u003d new AmazonS3Client(credentials, awsConf);\n-    String endPoint \u003d conf.getTrimmed(ENDPOINT, \"\");\n-    if (!endPoint.isEmpty()) {\n-      try {\n-        s3.setEndpoint(endPoint);\n-      } catch (IllegalArgumentException e) {\n-        String msg \u003d \"Incorrect endpoint: \"  + e.getMessage();\n-        LOG.error(msg);\n-        throw new IllegalArgumentException(msg, e);\n+    private static AmazonS3 createAmazonS3Client(Configuration conf,\n+        AWSCredentialsProvider credentials, ClientConfiguration awsConf)\n+        throws IllegalArgumentException {\n+      AmazonS3 s3 \u003d new AmazonS3Client(credentials, awsConf);\n+      String endPoint \u003d conf.getTrimmed(ENDPOINT, \"\");\n+      if (!endPoint.isEmpty()) {\n+        try {\n+          s3.setEndpoint(endPoint);\n+        } catch (IllegalArgumentException e) {\n+          String msg \u003d \"Incorrect endpoint: \"  + e.getMessage();\n+          LOG.error(msg);\n+          throw new IllegalArgumentException(msg, e);\n+        }\n       }\n-    }\n-    enablePathStyleAccessIfRequired(conf);\n-  }\n\\ No newline at end of file\n+      enablePathStyleAccessIfRequired(s3, conf);\n+      return s3;\n+    }\n\\ No newline at end of file\n",
          "actualSource": "    private static AmazonS3 createAmazonS3Client(Configuration conf,\n        AWSCredentialsProvider credentials, ClientConfiguration awsConf)\n        throws IllegalArgumentException {\n      AmazonS3 s3 \u003d new AmazonS3Client(credentials, awsConf);\n      String endPoint \u003d conf.getTrimmed(ENDPOINT, \"\");\n      if (!endPoint.isEmpty()) {\n        try {\n          s3.setEndpoint(endPoint);\n        } catch (IllegalArgumentException e) {\n          String msg \u003d \"Incorrect endpoint: \"  + e.getMessage();\n          LOG.error(msg);\n          throw new IllegalArgumentException(msg, e);\n        }\n      }\n      enablePathStyleAccessIfRequired(s3, conf);\n      return s3;\n    }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3ClientFactory.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[private, static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-13447. Refactor S3AFileSystem to support introduction of separate metadata repository and tests. Contributed by Chris Nauroth.\n",
          "commitDate": "06/09/16 9:36 AM",
          "commitName": "d152557cf7f4d2288524c222fcbaf152bdc038b0",
          "commitAuthor": "Chris Nauroth",
          "commitDateOld": "06/09/16 8:02 AM",
          "commitNameOld": "39d1b1d747b1e325792b897b3264272f32b756a9",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 0.07,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,17 @@\n-  private void initAmazonS3Client(Configuration conf,\n-      AWSCredentialsProvider credentials, ClientConfiguration awsConf)\n-      throws IllegalArgumentException {\n-    s3 \u003d new AmazonS3Client(credentials, awsConf);\n-    String endPoint \u003d conf.getTrimmed(ENDPOINT, \"\");\n-    if (!endPoint.isEmpty()) {\n-      try {\n-        s3.setEndpoint(endPoint);\n-      } catch (IllegalArgumentException e) {\n-        String msg \u003d \"Incorrect endpoint: \"  + e.getMessage();\n-        LOG.error(msg);\n-        throw new IllegalArgumentException(msg, e);\n+    private static AmazonS3 createAmazonS3Client(Configuration conf,\n+        AWSCredentialsProvider credentials, ClientConfiguration awsConf)\n+        throws IllegalArgumentException {\n+      AmazonS3 s3 \u003d new AmazonS3Client(credentials, awsConf);\n+      String endPoint \u003d conf.getTrimmed(ENDPOINT, \"\");\n+      if (!endPoint.isEmpty()) {\n+        try {\n+          s3.setEndpoint(endPoint);\n+        } catch (IllegalArgumentException e) {\n+          String msg \u003d \"Incorrect endpoint: \"  + e.getMessage();\n+          LOG.error(msg);\n+          throw new IllegalArgumentException(msg, e);\n+        }\n       }\n-    }\n-    enablePathStyleAccessIfRequired(conf);\n-  }\n\\ No newline at end of file\n+      enablePathStyleAccessIfRequired(s3, conf);\n+      return s3;\n+    }\n\\ No newline at end of file\n",
          "actualSource": "    private static AmazonS3 createAmazonS3Client(Configuration conf,\n        AWSCredentialsProvider credentials, ClientConfiguration awsConf)\n        throws IllegalArgumentException {\n      AmazonS3 s3 \u003d new AmazonS3Client(credentials, awsConf);\n      String endPoint \u003d conf.getTrimmed(ENDPOINT, \"\");\n      if (!endPoint.isEmpty()) {\n        try {\n          s3.setEndpoint(endPoint);\n        } catch (IllegalArgumentException e) {\n          String msg \u003d \"Incorrect endpoint: \"  + e.getMessage();\n          LOG.error(msg);\n          throw new IllegalArgumentException(msg, e);\n        }\n      }\n      enablePathStyleAccessIfRequired(s3, conf);\n      return s3;\n    }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3ClientFactory.java",
          "extendedDetails": {}
        },
        {
          "type": "Yrename",
          "commitMessage": "HADOOP-13447. Refactor S3AFileSystem to support introduction of separate metadata repository and tests. Contributed by Chris Nauroth.\n",
          "commitDate": "06/09/16 9:36 AM",
          "commitName": "d152557cf7f4d2288524c222fcbaf152bdc038b0",
          "commitAuthor": "Chris Nauroth",
          "commitDateOld": "06/09/16 8:02 AM",
          "commitNameOld": "39d1b1d747b1e325792b897b3264272f32b756a9",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 0.07,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,17 @@\n-  private void initAmazonS3Client(Configuration conf,\n-      AWSCredentialsProvider credentials, ClientConfiguration awsConf)\n-      throws IllegalArgumentException {\n-    s3 \u003d new AmazonS3Client(credentials, awsConf);\n-    String endPoint \u003d conf.getTrimmed(ENDPOINT, \"\");\n-    if (!endPoint.isEmpty()) {\n-      try {\n-        s3.setEndpoint(endPoint);\n-      } catch (IllegalArgumentException e) {\n-        String msg \u003d \"Incorrect endpoint: \"  + e.getMessage();\n-        LOG.error(msg);\n-        throw new IllegalArgumentException(msg, e);\n+    private static AmazonS3 createAmazonS3Client(Configuration conf,\n+        AWSCredentialsProvider credentials, ClientConfiguration awsConf)\n+        throws IllegalArgumentException {\n+      AmazonS3 s3 \u003d new AmazonS3Client(credentials, awsConf);\n+      String endPoint \u003d conf.getTrimmed(ENDPOINT, \"\");\n+      if (!endPoint.isEmpty()) {\n+        try {\n+          s3.setEndpoint(endPoint);\n+        } catch (IllegalArgumentException e) {\n+          String msg \u003d \"Incorrect endpoint: \"  + e.getMessage();\n+          LOG.error(msg);\n+          throw new IllegalArgumentException(msg, e);\n+        }\n       }\n-    }\n-    enablePathStyleAccessIfRequired(conf);\n-  }\n\\ No newline at end of file\n+      enablePathStyleAccessIfRequired(s3, conf);\n+      return s3;\n+    }\n\\ No newline at end of file\n",
          "actualSource": "    private static AmazonS3 createAmazonS3Client(Configuration conf,\n        AWSCredentialsProvider credentials, ClientConfiguration awsConf)\n        throws IllegalArgumentException {\n      AmazonS3 s3 \u003d new AmazonS3Client(credentials, awsConf);\n      String endPoint \u003d conf.getTrimmed(ENDPOINT, \"\");\n      if (!endPoint.isEmpty()) {\n        try {\n          s3.setEndpoint(endPoint);\n        } catch (IllegalArgumentException e) {\n          String msg \u003d \"Incorrect endpoint: \"  + e.getMessage();\n          LOG.error(msg);\n          throw new IllegalArgumentException(msg, e);\n        }\n      }\n      enablePathStyleAccessIfRequired(s3, conf);\n      return s3;\n    }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3ClientFactory.java",
          "extendedDetails": {
            "oldValue": "initAmazonS3Client",
            "newValue": "createAmazonS3Client"
          }
        }
      ]
    },
    "757050ff355d40bc28f9dbfd0c0083c5f337d270": {
      "type": "Yparameterchange",
      "commitMessage": "HADOOP-12723 S3A: Add ability to plug in any AWSCredentialsProvider. Contributed by Steven Wong.\n",
      "commitDate": "20/05/16 5:52 AM",
      "commitName": "757050ff355d40bc28f9dbfd0c0083c5f337d270",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "17/05/16 5:19 AM",
      "commitNameOld": "08ea07f1b8edbc38c99015c81a62ca127a247bf7",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 3.02,
      "commitsBetweenForRepo": 39,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   private void initAmazonS3Client(Configuration conf,\n-      AWSCredentialsProviderChain credentials, ClientConfiguration awsConf)\n+      AWSCredentialsProvider credentials, ClientConfiguration awsConf)\n       throws IllegalArgumentException {\n     s3 \u003d new AmazonS3Client(credentials, awsConf);\n     String endPoint \u003d conf.getTrimmed(ENDPOINT, \"\");\n     if (!endPoint.isEmpty()) {\n       try {\n         s3.setEndpoint(endPoint);\n       } catch (IllegalArgumentException e) {\n         String msg \u003d \"Incorrect endpoint: \"  + e.getMessage();\n         LOG.error(msg);\n         throw new IllegalArgumentException(msg, e);\n       }\n     }\n     enablePathStyleAccessIfRequired(conf);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void initAmazonS3Client(Configuration conf,\n      AWSCredentialsProvider credentials, ClientConfiguration awsConf)\n      throws IllegalArgumentException {\n    s3 \u003d new AmazonS3Client(credentials, awsConf);\n    String endPoint \u003d conf.getTrimmed(ENDPOINT, \"\");\n    if (!endPoint.isEmpty()) {\n      try {\n        s3.setEndpoint(endPoint);\n      } catch (IllegalArgumentException e) {\n        String msg \u003d \"Incorrect endpoint: \"  + e.getMessage();\n        LOG.error(msg);\n        throw new IllegalArgumentException(msg, e);\n      }\n    }\n    enablePathStyleAccessIfRequired(conf);\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java",
      "extendedDetails": {
        "oldValue": "[conf-Configuration, credentials-AWSCredentialsProviderChain, awsConf-ClientConfiguration]",
        "newValue": "[conf-Configuration, credentials-AWSCredentialsProvider, awsConf-ClientConfiguration]"
      }
    },
    "df18b6e9849c53c51a3d317f1254298edd8b17d1": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12963 Allow using path style addressing for accessing the s3 endpoint. (Stephen Montgomery via stevel)\n",
      "commitDate": "14/04/16 4:44 AM",
      "commitName": "df18b6e9849c53c51a3d317f1254298edd8b17d1",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "03/04/16 8:40 AM",
      "commitNameOld": "0ecdd4cffa51e34997321c384496efc249e3d8ff",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 10.84,
      "commitsBetweenForRepo": 76,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,16 @@\n   private void initAmazonS3Client(Configuration conf,\n       AWSCredentialsProviderChain credentials, ClientConfiguration awsConf)\n       throws IllegalArgumentException {\n     s3 \u003d new AmazonS3Client(credentials, awsConf);\n     String endPoint \u003d conf.getTrimmed(ENDPOINT,\"\");\n     if (!endPoint.isEmpty()) {\n       try {\n         s3.setEndpoint(endPoint);\n       } catch (IllegalArgumentException e) {\n         String msg \u003d \"Incorrect endpoint: \"  + e.getMessage();\n         LOG.error(msg);\n         throw new IllegalArgumentException(msg, e);\n       }\n     }\n+    enablePathStyleAccessIfRequired(conf);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void initAmazonS3Client(Configuration conf,\n      AWSCredentialsProviderChain credentials, ClientConfiguration awsConf)\n      throws IllegalArgumentException {\n    s3 \u003d new AmazonS3Client(credentials, awsConf);\n    String endPoint \u003d conf.getTrimmed(ENDPOINT,\"\");\n    if (!endPoint.isEmpty()) {\n      try {\n        s3.setEndpoint(endPoint);\n      } catch (IllegalArgumentException e) {\n        String msg \u003d \"Incorrect endpoint: \"  + e.getMessage();\n        LOG.error(msg);\n        throw new IllegalArgumentException(msg, e);\n      }\n    }\n    enablePathStyleAccessIfRequired(conf);\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java",
      "extendedDetails": {}
    },
    "76fab26c5c02cef38924d04136407489fd9457d9": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-12548. Read s3a creds from a Credential Provider. Contributed by Larry McCay.\n",
      "commitDate": "17/02/16 12:19 PM",
      "commitName": "76fab26c5c02cef38924d04136407489fd9457d9",
      "commitAuthor": "cnauroth",
      "diff": "@@ -0,0 +1,15 @@\n+  private void initAmazonS3Client(Configuration conf,\n+      AWSCredentialsProviderChain credentials, ClientConfiguration awsConf)\n+      throws IllegalArgumentException {\n+    s3 \u003d new AmazonS3Client(credentials, awsConf);\n+    String endPoint \u003d conf.getTrimmed(ENDPOINT,\"\");\n+    if (!endPoint.isEmpty()) {\n+      try {\n+        s3.setEndpoint(endPoint);\n+      } catch (IllegalArgumentException e) {\n+        String msg \u003d \"Incorrect endpoint: \"  + e.getMessage();\n+        LOG.error(msg);\n+        throw new IllegalArgumentException(msg, e);\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void initAmazonS3Client(Configuration conf,\n      AWSCredentialsProviderChain credentials, ClientConfiguration awsConf)\n      throws IllegalArgumentException {\n    s3 \u003d new AmazonS3Client(credentials, awsConf);\n    String endPoint \u003d conf.getTrimmed(ENDPOINT,\"\");\n    if (!endPoint.isEmpty()) {\n      try {\n        s3.setEndpoint(endPoint);\n      } catch (IllegalArgumentException e) {\n        String msg \u003d \"Incorrect endpoint: \"  + e.getMessage();\n        LOG.error(msg);\n        throw new IllegalArgumentException(msg, e);\n      }\n    }\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java"
    }
  }
}