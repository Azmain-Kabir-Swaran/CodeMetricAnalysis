{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "EncryptionZoneManager.java",
  "functionName": "reencryptEncryptionZone",
  "functionId": "reencryptEncryptionZone___zoneIIP-INodesInPath(modifiers-final)__keyVersionName-String(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/EncryptionZoneManager.java",
  "functionStartLine": 651,
  "functionEndLine": 673,
  "numCommitsSeen": 42,
  "timeTaken": 2855,
  "changeHistory": [
    "0ba8ff4b77db11fb68111f20fb077cffddd24f17",
    "1000a2af04b24c123a3b08168f36b4e90420cab7"
  ],
  "changeHistoryShort": {
    "0ba8ff4b77db11fb68111f20fb077cffddd24f17": "Ymultichange(Yreturntypechange,Ybodychange)",
    "1000a2af04b24c123a3b08168f36b4e90420cab7": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0ba8ff4b77db11fb68111f20fb077cffddd24f17": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-12359. Re-encryption should operate with minimum KMS ACL requirements.\n",
      "commitDate": "05/09/17 10:08 AM",
      "commitName": "0ba8ff4b77db11fb68111f20fb077cffddd24f17",
      "commitAuthor": "Xiao Chen",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-12359. Re-encryption should operate with minimum KMS ACL requirements.\n",
          "commitDate": "05/09/17 10:08 AM",
          "commitName": "0ba8ff4b77db11fb68111f20fb077cffddd24f17",
          "commitAuthor": "Xiao Chen",
          "commitDateOld": "29/08/17 9:30 PM",
          "commitNameOld": "f3661fd08e03440d02452b46ba3ae3cff2b75ba7",
          "commitAuthorOld": "Xiao Chen",
          "daysBetweenCommits": 6.53,
          "commitsBetweenForRepo": 95,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,23 @@\n-  XAttr reencryptEncryptionZone(final INodesInPath zoneIIP,\n+  List\u003cXAttr\u003e reencryptEncryptionZone(final INodesInPath zoneIIP,\n       final String keyVersionName) throws IOException {\n     assert dir.hasWriteLock();\n     if (reencryptionHandler \u003d\u003d null) {\n       throw new IOException(\"No key provider configured, re-encryption \"\n           + \"operation is rejected\");\n     }\n+    final List\u003cXAttr\u003e xAttrs \u003d Lists.newArrayListWithCapacity(1);\n     final INode inode \u003d zoneIIP.getLastINode();\n     final String zoneName \u003d zoneIIP.getPath();\n     checkEncryptionZoneRoot(inode, zoneName);\n     if (getReencryptionStatus().hasRunningZone(inode.getId())) {\n       throw new IOException(\"Zone \" + zoneName\n           + \" is already submitted for re-encryption.\");\n     }\n     LOG.info(\"Zone {}({}) is submitted for re-encryption.\", zoneName,\n         inode.getId());\n-    XAttr ret \u003d FSDirEncryptionZoneOp\n+    final XAttr xattr \u003d FSDirEncryptionZoneOp\n         .updateReencryptionSubmitted(dir, zoneIIP, keyVersionName);\n+    xAttrs.add(xattr);\n     reencryptionHandler.notifyNewSubmission();\n-    return ret;\n+    return xAttrs;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  List\u003cXAttr\u003e reencryptEncryptionZone(final INodesInPath zoneIIP,\n      final String keyVersionName) throws IOException {\n    assert dir.hasWriteLock();\n    if (reencryptionHandler \u003d\u003d null) {\n      throw new IOException(\"No key provider configured, re-encryption \"\n          + \"operation is rejected\");\n    }\n    final List\u003cXAttr\u003e xAttrs \u003d Lists.newArrayListWithCapacity(1);\n    final INode inode \u003d zoneIIP.getLastINode();\n    final String zoneName \u003d zoneIIP.getPath();\n    checkEncryptionZoneRoot(inode, zoneName);\n    if (getReencryptionStatus().hasRunningZone(inode.getId())) {\n      throw new IOException(\"Zone \" + zoneName\n          + \" is already submitted for re-encryption.\");\n    }\n    LOG.info(\"Zone {}({}) is submitted for re-encryption.\", zoneName,\n        inode.getId());\n    final XAttr xattr \u003d FSDirEncryptionZoneOp\n        .updateReencryptionSubmitted(dir, zoneIIP, keyVersionName);\n    xAttrs.add(xattr);\n    reencryptionHandler.notifyNewSubmission();\n    return xAttrs;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/EncryptionZoneManager.java",
          "extendedDetails": {
            "oldValue": "XAttr",
            "newValue": "List\u003cXAttr\u003e"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-12359. Re-encryption should operate with minimum KMS ACL requirements.\n",
          "commitDate": "05/09/17 10:08 AM",
          "commitName": "0ba8ff4b77db11fb68111f20fb077cffddd24f17",
          "commitAuthor": "Xiao Chen",
          "commitDateOld": "29/08/17 9:30 PM",
          "commitNameOld": "f3661fd08e03440d02452b46ba3ae3cff2b75ba7",
          "commitAuthorOld": "Xiao Chen",
          "daysBetweenCommits": 6.53,
          "commitsBetweenForRepo": 95,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,23 @@\n-  XAttr reencryptEncryptionZone(final INodesInPath zoneIIP,\n+  List\u003cXAttr\u003e reencryptEncryptionZone(final INodesInPath zoneIIP,\n       final String keyVersionName) throws IOException {\n     assert dir.hasWriteLock();\n     if (reencryptionHandler \u003d\u003d null) {\n       throw new IOException(\"No key provider configured, re-encryption \"\n           + \"operation is rejected\");\n     }\n+    final List\u003cXAttr\u003e xAttrs \u003d Lists.newArrayListWithCapacity(1);\n     final INode inode \u003d zoneIIP.getLastINode();\n     final String zoneName \u003d zoneIIP.getPath();\n     checkEncryptionZoneRoot(inode, zoneName);\n     if (getReencryptionStatus().hasRunningZone(inode.getId())) {\n       throw new IOException(\"Zone \" + zoneName\n           + \" is already submitted for re-encryption.\");\n     }\n     LOG.info(\"Zone {}({}) is submitted for re-encryption.\", zoneName,\n         inode.getId());\n-    XAttr ret \u003d FSDirEncryptionZoneOp\n+    final XAttr xattr \u003d FSDirEncryptionZoneOp\n         .updateReencryptionSubmitted(dir, zoneIIP, keyVersionName);\n+    xAttrs.add(xattr);\n     reencryptionHandler.notifyNewSubmission();\n-    return ret;\n+    return xAttrs;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  List\u003cXAttr\u003e reencryptEncryptionZone(final INodesInPath zoneIIP,\n      final String keyVersionName) throws IOException {\n    assert dir.hasWriteLock();\n    if (reencryptionHandler \u003d\u003d null) {\n      throw new IOException(\"No key provider configured, re-encryption \"\n          + \"operation is rejected\");\n    }\n    final List\u003cXAttr\u003e xAttrs \u003d Lists.newArrayListWithCapacity(1);\n    final INode inode \u003d zoneIIP.getLastINode();\n    final String zoneName \u003d zoneIIP.getPath();\n    checkEncryptionZoneRoot(inode, zoneName);\n    if (getReencryptionStatus().hasRunningZone(inode.getId())) {\n      throw new IOException(\"Zone \" + zoneName\n          + \" is already submitted for re-encryption.\");\n    }\n    LOG.info(\"Zone {}({}) is submitted for re-encryption.\", zoneName,\n        inode.getId());\n    final XAttr xattr \u003d FSDirEncryptionZoneOp\n        .updateReencryptionSubmitted(dir, zoneIIP, keyVersionName);\n    xAttrs.add(xattr);\n    reencryptionHandler.notifyNewSubmission();\n    return xAttrs;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/EncryptionZoneManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "1000a2af04b24c123a3b08168f36b4e90420cab7": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-10899. Add functionality to re-encrypt EDEKs.\n",
      "commitDate": "23/08/17 5:06 PM",
      "commitName": "1000a2af04b24c123a3b08168f36b4e90420cab7",
      "commitAuthor": "Xiao Chen",
      "diff": "@@ -0,0 +1,21 @@\n+  XAttr reencryptEncryptionZone(final INodesInPath zoneIIP,\n+      final String keyVersionName) throws IOException {\n+    assert dir.hasWriteLock();\n+    if (reencryptionHandler \u003d\u003d null) {\n+      throw new IOException(\"No key provider configured, re-encryption \"\n+          + \"operation is rejected\");\n+    }\n+    final INode inode \u003d zoneIIP.getLastINode();\n+    final String zoneName \u003d zoneIIP.getPath();\n+    checkEncryptionZoneRoot(inode, zoneName);\n+    if (getReencryptionStatus().hasRunningZone(inode.getId())) {\n+      throw new IOException(\"Zone \" + zoneName\n+          + \" is already submitted for re-encryption.\");\n+    }\n+    LOG.info(\"Zone {}({}) is submitted for re-encryption.\", zoneName,\n+        inode.getId());\n+    XAttr ret \u003d FSDirEncryptionZoneOp\n+        .updateReencryptionSubmitted(dir, zoneIIP, keyVersionName);\n+    reencryptionHandler.notifyNewSubmission();\n+    return ret;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  XAttr reencryptEncryptionZone(final INodesInPath zoneIIP,\n      final String keyVersionName) throws IOException {\n    assert dir.hasWriteLock();\n    if (reencryptionHandler \u003d\u003d null) {\n      throw new IOException(\"No key provider configured, re-encryption \"\n          + \"operation is rejected\");\n    }\n    final INode inode \u003d zoneIIP.getLastINode();\n    final String zoneName \u003d zoneIIP.getPath();\n    checkEncryptionZoneRoot(inode, zoneName);\n    if (getReencryptionStatus().hasRunningZone(inode.getId())) {\n      throw new IOException(\"Zone \" + zoneName\n          + \" is already submitted for re-encryption.\");\n    }\n    LOG.info(\"Zone {}({}) is submitted for re-encryption.\", zoneName,\n        inode.getId());\n    XAttr ret \u003d FSDirEncryptionZoneOp\n        .updateReencryptionSubmitted(dir, zoneIIP, keyVersionName);\n    reencryptionHandler.notifyNewSubmission();\n    return ret;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/EncryptionZoneManager.java"
    }
  }
}