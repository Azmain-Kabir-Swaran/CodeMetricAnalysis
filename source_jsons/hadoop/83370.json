{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ServiceLauncher.java",
  "functionName": "createOptions",
  "functionId": "createOptions",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/service/launcher/ServiceLauncher.java",
  "functionStartLine": 368,
  "functionEndLine": 391,
  "numCommitsSeen": 3,
  "timeTaken": 713,
  "changeHistory": [
    "373bb4931fb392e3ca6bfd78992887e5a405e186"
  ],
  "changeHistoryShort": {
    "373bb4931fb392e3ca6bfd78992887e5a405e186": "Yintroduced"
  },
  "changeHistoryDetails": {
    "373bb4931fb392e3ca6bfd78992887e5a405e186": {
      "type": "Yintroduced",
      "commitMessage": "YARN-679. Add an entry point that can start any Yarn service. Contributed by Steve Loughran.\n",
      "commitDate": "28/04/17 10:45 AM",
      "commitName": "373bb4931fb392e3ca6bfd78992887e5a405e186",
      "commitAuthor": "Junping Du",
      "diff": "@@ -0,0 +1,24 @@\n+  protected Options createOptions() {\n+    synchronized (OptionBuilder.class) {\n+      Options options \u003d new Options();\n+      Option oconf \u003d OptionBuilder.withArgName(\"configuration file\")\n+          .hasArg()\n+          .withDescription(\"specify an application configuration file\")\n+          .withLongOpt(ARG_CONF)\n+          .create(ARG_CONF_SHORT);\n+      Option confclass \u003d OptionBuilder.withArgName(\"configuration classname\")\n+          .hasArg()\n+          .withDescription(\n+              \"Classname of a Hadoop Configuration subclass to load\")\n+          .withLongOpt(ARG_CONFCLASS)\n+          .create(ARG_CONFCLASS_SHORT);\n+      Option property \u003d OptionBuilder.withArgName(\"property\u003dvalue\")\n+          .hasArg()\n+          .withDescription(\"use value for given property\")\n+          .create(\u0027D\u0027);\n+      options.addOption(oconf);\n+      options.addOption(property);\n+      options.addOption(confclass);\n+      return options;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected Options createOptions() {\n    synchronized (OptionBuilder.class) {\n      Options options \u003d new Options();\n      Option oconf \u003d OptionBuilder.withArgName(\"configuration file\")\n          .hasArg()\n          .withDescription(\"specify an application configuration file\")\n          .withLongOpt(ARG_CONF)\n          .create(ARG_CONF_SHORT);\n      Option confclass \u003d OptionBuilder.withArgName(\"configuration classname\")\n          .hasArg()\n          .withDescription(\n              \"Classname of a Hadoop Configuration subclass to load\")\n          .withLongOpt(ARG_CONFCLASS)\n          .create(ARG_CONFCLASS_SHORT);\n      Option property \u003d OptionBuilder.withArgName(\"property\u003dvalue\")\n          .hasArg()\n          .withDescription(\"use value for given property\")\n          .create(\u0027D\u0027);\n      options.addOption(oconf);\n      options.addOption(property);\n      options.addOption(confclass);\n      return options;\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/service/launcher/ServiceLauncher.java"
    }
  }
}