{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FileSystemTimelineWriter.java",
  "functionName": "writeEntityLogs",
  "functionId": "writeEntityLogs___fs-FileSystem__logPath-Path__objMapper-ObjectMapper__attemptId-ApplicationAttemptId__groupId-TimelineEntityGroupId__entities-List__TimelineEntity____isAppendSupported-boolean__logFDs-Map__ApplicationAttemptId,HashMap__TimelineEntityGroupId,EntityLogFD____",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/api/impl/FileSystemTimelineWriter.java",
  "functionStartLine": 771,
  "functionEndLine": 798,
  "numCommitsSeen": 19,
  "timeTaken": 1499,
  "changeHistory": [
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
    "882f2f04644a13cadb93070d5545f7a4f8691fde"
  ],
  "changeHistoryShort": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": "Ybodychange",
    "882f2f04644a13cadb93070d5545f7a4f8691fde": "Yintroduced"
  },
  "changeHistoryDetails": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9341.  Fixed enentrant lock usage in YARN project.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "07/03/19 1:47 PM",
      "commitName": "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "03/03/19 11:59 PM",
      "commitNameOld": "bd8d299ded742813cabd4b4e7ce1e33e0d1f9509",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 3.58,
      "commitsBetweenForRepo": 49,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,28 @@\n     private void writeEntityLogs(FileSystem fs, Path logPath,\n         ObjectMapper objMapper, ApplicationAttemptId attemptId,\n         TimelineEntityGroupId groupId, List\u003cTimelineEntity\u003e entities,\n         boolean isAppendSupported, Map\u003cApplicationAttemptId, HashMap\u003c\n             TimelineEntityGroupId, EntityLogFD\u003e\u003e logFDs) throws IOException {\n       HashMap\u003cTimelineEntityGroupId, EntityLogFD\u003elogMapFD\n           \u003d logFDs.get(attemptId);\n       if (logMapFD !\u003d null) {\n         EntityLogFD logFD \u003d logMapFD.get(groupId);\n         if (logFD !\u003d null) {\n+          logFD.lock();\n           try {\n-            logFD.lock();\n             if (serviceStopped) {\n               return;\n             }\n             logFD.writeEntities(entities);\n           } finally {\n             logFD.unlock();\n           }\n         } else {\n           createEntityFDandWrite(fs, logPath, objMapper, attemptId, groupId,\n               entities, isAppendSupported, logFDs);\n         }\n       } else {\n         createEntityFDandWrite(fs, logPath, objMapper, attemptId, groupId,\n             entities, isAppendSupported, logFDs);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void writeEntityLogs(FileSystem fs, Path logPath,\n        ObjectMapper objMapper, ApplicationAttemptId attemptId,\n        TimelineEntityGroupId groupId, List\u003cTimelineEntity\u003e entities,\n        boolean isAppendSupported, Map\u003cApplicationAttemptId, HashMap\u003c\n            TimelineEntityGroupId, EntityLogFD\u003e\u003e logFDs) throws IOException {\n      HashMap\u003cTimelineEntityGroupId, EntityLogFD\u003elogMapFD\n          \u003d logFDs.get(attemptId);\n      if (logMapFD !\u003d null) {\n        EntityLogFD logFD \u003d logMapFD.get(groupId);\n        if (logFD !\u003d null) {\n          logFD.lock();\n          try {\n            if (serviceStopped) {\n              return;\n            }\n            logFD.writeEntities(entities);\n          } finally {\n            logFD.unlock();\n          }\n        } else {\n          createEntityFDandWrite(fs, logPath, objMapper, attemptId, groupId,\n              entities, isAppendSupported, logFDs);\n        }\n      } else {\n        createEntityFDandWrite(fs, logPath, objMapper, attemptId, groupId,\n            entities, isAppendSupported, logFDs);\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/api/impl/FileSystemTimelineWriter.java",
      "extendedDetails": {}
    },
    "882f2f04644a13cadb93070d5545f7a4f8691fde": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4234. New put APIs in TimelineClient for ats v1.5. Contributed by Xuan Gong.\n",
      "commitDate": "23/12/15 5:26 AM",
      "commitName": "882f2f04644a13cadb93070d5545f7a4f8691fde",
      "commitAuthor": "Junping Du",
      "diff": "@@ -0,0 +1,28 @@\n+    private void writeEntityLogs(FileSystem fs, Path logPath,\n+        ObjectMapper objMapper, ApplicationAttemptId attemptId,\n+        TimelineEntityGroupId groupId, List\u003cTimelineEntity\u003e entities,\n+        boolean isAppendSupported, Map\u003cApplicationAttemptId, HashMap\u003c\n+            TimelineEntityGroupId, EntityLogFD\u003e\u003e logFDs) throws IOException {\n+      HashMap\u003cTimelineEntityGroupId, EntityLogFD\u003elogMapFD\n+          \u003d logFDs.get(attemptId);\n+      if (logMapFD !\u003d null) {\n+        EntityLogFD logFD \u003d logMapFD.get(groupId);\n+        if (logFD !\u003d null) {\n+          try {\n+            logFD.lock();\n+            if (serviceStopped) {\n+              return;\n+            }\n+            logFD.writeEntities(entities);\n+          } finally {\n+            logFD.unlock();\n+          }\n+        } else {\n+          createEntityFDandWrite(fs, logPath, objMapper, attemptId, groupId,\n+              entities, isAppendSupported, logFDs);\n+        }\n+      } else {\n+        createEntityFDandWrite(fs, logPath, objMapper, attemptId, groupId,\n+            entities, isAppendSupported, logFDs);\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private void writeEntityLogs(FileSystem fs, Path logPath,\n        ObjectMapper objMapper, ApplicationAttemptId attemptId,\n        TimelineEntityGroupId groupId, List\u003cTimelineEntity\u003e entities,\n        boolean isAppendSupported, Map\u003cApplicationAttemptId, HashMap\u003c\n            TimelineEntityGroupId, EntityLogFD\u003e\u003e logFDs) throws IOException {\n      HashMap\u003cTimelineEntityGroupId, EntityLogFD\u003elogMapFD\n          \u003d logFDs.get(attemptId);\n      if (logMapFD !\u003d null) {\n        EntityLogFD logFD \u003d logMapFD.get(groupId);\n        if (logFD !\u003d null) {\n          try {\n            logFD.lock();\n            if (serviceStopped) {\n              return;\n            }\n            logFD.writeEntities(entities);\n          } finally {\n            logFD.unlock();\n          }\n        } else {\n          createEntityFDandWrite(fs, logPath, objMapper, attemptId, groupId,\n              entities, isAppendSupported, logFDs);\n        }\n      } else {\n        createEntityFDandWrite(fs, logPath, objMapper, attemptId, groupId,\n            entities, isAppendSupported, logFDs);\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/api/impl/FileSystemTimelineWriter.java"
    }
  }
}