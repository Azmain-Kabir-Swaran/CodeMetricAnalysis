{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AsyncDispatcher.java",
  "functionName": "run",
  "functionId": "run",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/event/AsyncDispatcher.java",
  "functionStartLine": 348,
  "functionEndLine": 351,
  "numCommitsSeen": 45,
  "timeTaken": 9891,
  "changeHistory": [
    "614b6afea450ebb897fbb2519c6f02e13b9bd12d",
    "460ac8cb50e024b60e02a96c2ab27368dfe0944d",
    "e28015ed1b40278028cfb70c4c87d9bc95a2b6a6",
    "614a743fea5ab5181b2b7989bba84146e81039de",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "8fa0a3c737f27ff9d12fb657a7b22865754a5fd8",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "614b6afea450ebb897fbb2519c6f02e13b9bd12d": "Ybodychange",
    "460ac8cb50e024b60e02a96c2ab27368dfe0944d": "Ybodychange",
    "e28015ed1b40278028cfb70c4c87d9bc95a2b6a6": "Ybodychange",
    "614a743fea5ab5181b2b7989bba84146e81039de": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "8fa0a3c737f27ff9d12fb657a7b22865754a5fd8": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Ymultichange(Ymovefromfile,Ybodychange)",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "614b6afea450ebb897fbb2519c6f02e13b9bd12d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2917. Fixed potential deadlock when system.exit is called in AsyncDispatcher. Contributed by Rohith Sharmaks\n",
      "commitDate": "11/12/14 11:17 AM",
      "commitName": "614b6afea450ebb897fbb2519c6f02e13b9bd12d",
      "commitAuthor": "Jian He",
      "commitDateOld": "17/03/14 3:17 PM",
      "commitNameOld": "81a456e6386e1241c14b3b6b62dc2e5d445f5ee7",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 268.88,
      "commitsBetweenForRepo": 2170,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,4 @@\n       public void run() {\n-        while (!stopped \u0026\u0026 !Thread.currentThread().isInterrupted()) {\n-          drained \u003d eventQueue.isEmpty();\n-          // blockNewEvents is only set when dispatcher is draining to stop,\n-          // adding this check is to avoid the overhead of acquiring the lock\n-          // and calling notify every time in the normal run of the loop.\n-          if (blockNewEvents) {\n-            synchronized (waitForDrained) {\n-              if (drained) {\n-                waitForDrained.notify();\n-              }\n-            }\n-          }\n-          Event event;\n-          try {\n-            event \u003d eventQueue.take();\n-          } catch(InterruptedException ie) {\n-            if (!stopped) {\n-              LOG.warn(\"AsyncDispatcher thread interrupted\", ie);\n-            }\n-            return;\n-          }\n-          if (event !\u003d null) {\n-            dispatch(event);\n-          }\n-        }\n+        LOG.info(\"Exiting, bbye..\");\n+        System.exit(-1);\n       }\n\\ No newline at end of file\n",
      "actualSource": "      public void run() {\n        LOG.info(\"Exiting, bbye..\");\n        System.exit(-1);\n      }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/event/AsyncDispatcher.java",
      "extendedDetails": {}
    },
    "460ac8cb50e024b60e02a96c2ab27368dfe0944d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1121. Addendum patch. Fixed AsyncDispatcher hang issue during stop due to a race condition caused by the previous patch. Contributed by Jian He. \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1554344 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/12/13 5:10 PM",
      "commitName": "460ac8cb50e024b60e02a96c2ab27368dfe0944d",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "08/11/13 4:55 PM",
      "commitNameOld": "e28015ed1b40278028cfb70c4c87d9bc95a2b6a6",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 52.01,
      "commitsBetweenForRepo": 292,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,27 @@\n       public void run() {\n         while (!stopped \u0026\u0026 !Thread.currentThread().isInterrupted()) {\n           drained \u003d eventQueue.isEmpty();\n+          // blockNewEvents is only set when dispatcher is draining to stop,\n+          // adding this check is to avoid the overhead of acquiring the lock\n+          // and calling notify every time in the normal run of the loop.\n+          if (blockNewEvents) {\n+            synchronized (waitForDrained) {\n+              if (drained) {\n+                waitForDrained.notify();\n+              }\n+            }\n+          }\n           Event event;\n           try {\n             event \u003d eventQueue.take();\n           } catch(InterruptedException ie) {\n             if (!stopped) {\n               LOG.warn(\"AsyncDispatcher thread interrupted\", ie);\n             }\n             return;\n           }\n           if (event !\u003d null) {\n             dispatch(event);\n           }\n         }\n       }\n\\ No newline at end of file\n",
      "actualSource": "      public void run() {\n        while (!stopped \u0026\u0026 !Thread.currentThread().isInterrupted()) {\n          drained \u003d eventQueue.isEmpty();\n          // blockNewEvents is only set when dispatcher is draining to stop,\n          // adding this check is to avoid the overhead of acquiring the lock\n          // and calling notify every time in the normal run of the loop.\n          if (blockNewEvents) {\n            synchronized (waitForDrained) {\n              if (drained) {\n                waitForDrained.notify();\n              }\n            }\n          }\n          Event event;\n          try {\n            event \u003d eventQueue.take();\n          } catch(InterruptedException ie) {\n            if (!stopped) {\n              LOG.warn(\"AsyncDispatcher thread interrupted\", ie);\n            }\n            return;\n          }\n          if (event !\u003d null) {\n            dispatch(event);\n          }\n        }\n      }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/event/AsyncDispatcher.java",
      "extendedDetails": {}
    },
    "e28015ed1b40278028cfb70c4c87d9bc95a2b6a6": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1121. Changed ResourceManager\u0027s state-store to drain all events on shut-down. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1540232 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/11/13 4:55 PM",
      "commitName": "e28015ed1b40278028cfb70c4c87d9bc95a2b6a6",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "16/06/13 11:39 PM",
      "commitNameOld": "b9efe6bd4a1277b4067ecde715a7713a85968886",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 144.76,
      "commitsBetweenForRepo": 881,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,17 @@\n       public void run() {\n         while (!stopped \u0026\u0026 !Thread.currentThread().isInterrupted()) {\n+          drained \u003d eventQueue.isEmpty();\n           Event event;\n           try {\n             event \u003d eventQueue.take();\n           } catch(InterruptedException ie) {\n             if (!stopped) {\n               LOG.warn(\"AsyncDispatcher thread interrupted\", ie);\n             }\n             return;\n           }\n           if (event !\u003d null) {\n             dispatch(event);\n           }\n         }\n       }\n\\ No newline at end of file\n",
      "actualSource": "      public void run() {\n        while (!stopped \u0026\u0026 !Thread.currentThread().isInterrupted()) {\n          drained \u003d eventQueue.isEmpty();\n          Event event;\n          try {\n            event \u003d eventQueue.take();\n          } catch(InterruptedException ie) {\n            if (!stopped) {\n              LOG.warn(\"AsyncDispatcher thread interrupted\", ie);\n            }\n            return;\n          }\n          if (event !\u003d null) {\n            dispatch(event);\n          }\n        }\n      }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/event/AsyncDispatcher.java",
      "extendedDetails": {}
    },
    "614a743fea5ab5181b2b7989bba84146e81039de": {
      "type": "Ybodychange",
      "commitMessage": "YARN-139. Interrupted Exception within AsyncDispatcher leads to user confusion. Contributed by Vinod Kumar Vavilapalli\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1401726 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/10/12 8:20 AM",
      "commitName": "614a743fea5ab5181b2b7989bba84146e81039de",
      "commitAuthor": "Jason Darrell Lowe",
      "commitDateOld": "07/08/12 10:22 PM",
      "commitNameOld": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 77.42,
      "commitsBetweenForRepo": 491,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,16 @@\n       public void run() {\n         while (!stopped \u0026\u0026 !Thread.currentThread().isInterrupted()) {\n           Event event;\n           try {\n             event \u003d eventQueue.take();\n           } catch(InterruptedException ie) {\n-            LOG.warn(\"AsyncDispatcher thread interrupted\", ie);\n+            if (!stopped) {\n+              LOG.warn(\"AsyncDispatcher thread interrupted\", ie);\n+            }\n             return;\n           }\n           if (event !\u003d null) {\n             dispatch(event);\n           }\n         }\n       }\n\\ No newline at end of file\n",
      "actualSource": "      public void run() {\n        while (!stopped \u0026\u0026 !Thread.currentThread().isInterrupted()) {\n          Event event;\n          try {\n            event \u003d eventQueue.take();\n          } catch(InterruptedException ie) {\n            if (!stopped) {\n              LOG.warn(\"AsyncDispatcher thread interrupted\", ie);\n            }\n            return;\n          }\n          if (event !\u003d null) {\n            dispatch(event);\n          }\n        }\n      }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/event/AsyncDispatcher.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "      public void run() {\n        while (!stopped \u0026\u0026 !Thread.currentThread().isInterrupted()) {\n          Event event;\n          try {\n            event \u003d eventQueue.take();\n          } catch(InterruptedException ie) {\n            LOG.warn(\"AsyncDispatcher thread interrupted\", ie);\n            return;\n          }\n          if (event !\u003d null) {\n            dispatch(event);\n          }\n        }\n      }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/event/AsyncDispatcher.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/event/AsyncDispatcher.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/event/AsyncDispatcher.java"
      }
    },
    "8fa0a3c737f27ff9d12fb657a7b22865754a5fd8": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3567. Extraneous JobConf objects in AM heap. Contributed by Vinod Kumar Vavilapalli)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1222498 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/12/11 2:34 PM",
      "commitName": "8fa0a3c737f27ff9d12fb657a7b22865754a5fd8",
      "commitAuthor": "Siddharth Seth",
      "commitDateOld": "01/12/11 12:35 AM",
      "commitNameOld": "08da8ea5db5359fc04010be486b842a5d2e6b9c2",
      "commitAuthorOld": "Mahadev Konar",
      "daysBetweenCommits": 21.58,
      "commitsBetweenForRepo": 134,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n       public void run() {\n         while (!stopped \u0026\u0026 !Thread.currentThread().isInterrupted()) {\n           Event event;\n           try {\n             event \u003d eventQueue.take();\n           } catch(InterruptedException ie) {\n-            LOG.info(\"AsyncDispatcher thread interrupted\", ie);\n+            LOG.warn(\"AsyncDispatcher thread interrupted\", ie);\n             return;\n           }\n           if (event !\u003d null) {\n             dispatch(event);\n           }\n         }\n       }\n\\ No newline at end of file\n",
      "actualSource": "      public void run() {\n        while (!stopped \u0026\u0026 !Thread.currentThread().isInterrupted()) {\n          Event event;\n          try {\n            event \u003d eventQueue.take();\n          } catch(InterruptedException ie) {\n            LOG.warn(\"AsyncDispatcher thread interrupted\", ie);\n            return;\n          }\n          if (event !\u003d null) {\n            dispatch(event);\n          }\n        }\n      }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/event/AsyncDispatcher.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "      public void run() {\n        while (!stopped \u0026\u0026 !Thread.currentThread().isInterrupted()) {\n          Event event;\n          try {\n            event \u003d eventQueue.take();\n          } catch(InterruptedException ie) {\n            LOG.info(\"AsyncDispatcher thread interrupted\", ie);\n            return;\n          }\n          if (event !\u003d null) {\n            dispatch(event);\n          }\n        }\n      }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/event/AsyncDispatcher.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/event/AsyncDispatcher.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/event/AsyncDispatcher.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/08/11 4:07 AM",
          "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "17/08/11 8:02 PM",
          "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.34,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,14 @@\n-        public void run() {\n-          while (true) {\n-            try {\n-              TaskTrackerAction action \u003d tasksToCleanup.take();\n-              if (action instanceof KillJobAction) {\n-                purgeJob((KillJobAction) action);\n-              } else if (action instanceof KillTaskAction) {\n-                processKillTaskAction((KillTaskAction) action);\n-              } else {\n-                LOG.error(\"Non-delete action given to cleanup thread: \"\n-                          + action);\n-              }\n-            } catch (Throwable except) {\n-              LOG.warn(StringUtils.stringifyException(except));\n-            }\n+      public void run() {\n+        while (!stopped \u0026\u0026 !Thread.currentThread().isInterrupted()) {\n+          Event event;\n+          try {\n+            event \u003d eventQueue.take();\n+          } catch(InterruptedException ie) {\n+            LOG.info(\"AsyncDispatcher thread interrupted\", ie);\n+            return;\n           }\n-        }\n\\ No newline at end of file\n+          if (event !\u003d null) {\n+            dispatch(event);\n+          }\n+        }\n+      }\n\\ No newline at end of file\n",
          "actualSource": "      public void run() {\n        while (!stopped \u0026\u0026 !Thread.currentThread().isInterrupted()) {\n          Event event;\n          try {\n            event \u003d eventQueue.take();\n          } catch(InterruptedException ie) {\n            LOG.info(\"AsyncDispatcher thread interrupted\", ie);\n            return;\n          }\n          if (event !\u003d null) {\n            dispatch(event);\n          }\n        }\n      }",
          "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/event/AsyncDispatcher.java",
          "extendedDetails": {
            "oldPath": "mapreduce/src/java/org/apache/hadoop/mapred/TaskTracker.java",
            "newPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/event/AsyncDispatcher.java",
            "oldMethodName": "run",
            "newMethodName": "run"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/08/11 4:07 AM",
          "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "17/08/11 8:02 PM",
          "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.34,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,14 @@\n-        public void run() {\n-          while (true) {\n-            try {\n-              TaskTrackerAction action \u003d tasksToCleanup.take();\n-              if (action instanceof KillJobAction) {\n-                purgeJob((KillJobAction) action);\n-              } else if (action instanceof KillTaskAction) {\n-                processKillTaskAction((KillTaskAction) action);\n-              } else {\n-                LOG.error(\"Non-delete action given to cleanup thread: \"\n-                          + action);\n-              }\n-            } catch (Throwable except) {\n-              LOG.warn(StringUtils.stringifyException(except));\n-            }\n+      public void run() {\n+        while (!stopped \u0026\u0026 !Thread.currentThread().isInterrupted()) {\n+          Event event;\n+          try {\n+            event \u003d eventQueue.take();\n+          } catch(InterruptedException ie) {\n+            LOG.info(\"AsyncDispatcher thread interrupted\", ie);\n+            return;\n           }\n-        }\n\\ No newline at end of file\n+          if (event !\u003d null) {\n+            dispatch(event);\n+          }\n+        }\n+      }\n\\ No newline at end of file\n",
          "actualSource": "      public void run() {\n        while (!stopped \u0026\u0026 !Thread.currentThread().isInterrupted()) {\n          Event event;\n          try {\n            event \u003d eventQueue.take();\n          } catch(InterruptedException ie) {\n            LOG.info(\"AsyncDispatcher thread interrupted\", ie);\n            return;\n          }\n          if (event !\u003d null) {\n            dispatch(event);\n          }\n        }\n      }",
          "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/event/AsyncDispatcher.java",
          "extendedDetails": {}
        }
      ]
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,48 @@\n+  public void run() {\n+    try {\n+      startCleanupThreads();\n+      boolean denied \u003d false;\n+      while (running \u0026\u0026 !shuttingDown \u0026\u0026 !denied) {\n+        boolean staleState \u003d false;\n+        try {\n+          // This while-loop attempts reconnects if we get network errors\n+          while (running \u0026\u0026 !staleState \u0026\u0026 !shuttingDown \u0026\u0026 !denied) {\n+            try {\n+              State osState \u003d offerService();\n+              if (osState \u003d\u003d State.STALE) {\n+                staleState \u003d true;\n+              } else if (osState \u003d\u003d State.DENIED) {\n+                denied \u003d true;\n+              }\n+            } catch (Exception ex) {\n+              if (!shuttingDown) {\n+                LOG.info(\"Lost connection to JobTracker [\" +\n+                         jobTrackAddr + \"].  Retrying...\", ex);\n+                try {\n+                  Thread.sleep(5000);\n+                } catch (InterruptedException ie) {\n+                }\n+              }\n+            }\n+          }\n+        } finally {\n+          close();\n+        }\n+        if (shuttingDown) { return; }\n+        LOG.warn(\"Reinitializing local state\");\n+        initialize();\n+      }\n+      if (denied) {\n+        shutdown();\n+      }\n+    } catch (IOException iex) {\n+      LOG.error(\"Got fatal exception while reinitializing TaskTracker: \" +\n+                StringUtils.stringifyException(iex));\n+      return;\n+    }\n+    catch (InterruptedException i) {\n+      LOG.error(\"Got interrupted while reinitializing TaskTracker: \" + \n+          i.getMessage());\n+      return;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void run() {\n    try {\n      startCleanupThreads();\n      boolean denied \u003d false;\n      while (running \u0026\u0026 !shuttingDown \u0026\u0026 !denied) {\n        boolean staleState \u003d false;\n        try {\n          // This while-loop attempts reconnects if we get network errors\n          while (running \u0026\u0026 !staleState \u0026\u0026 !shuttingDown \u0026\u0026 !denied) {\n            try {\n              State osState \u003d offerService();\n              if (osState \u003d\u003d State.STALE) {\n                staleState \u003d true;\n              } else if (osState \u003d\u003d State.DENIED) {\n                denied \u003d true;\n              }\n            } catch (Exception ex) {\n              if (!shuttingDown) {\n                LOG.info(\"Lost connection to JobTracker [\" +\n                         jobTrackAddr + \"].  Retrying...\", ex);\n                try {\n                  Thread.sleep(5000);\n                } catch (InterruptedException ie) {\n                }\n              }\n            }\n          }\n        } finally {\n          close();\n        }\n        if (shuttingDown) { return; }\n        LOG.warn(\"Reinitializing local state\");\n        initialize();\n      }\n      if (denied) {\n        shutdown();\n      }\n    } catch (IOException iex) {\n      LOG.error(\"Got fatal exception while reinitializing TaskTracker: \" +\n                StringUtils.stringifyException(iex));\n      return;\n    }\n    catch (InterruptedException i) {\n      LOG.error(\"Got interrupted while reinitializing TaskTracker: \" + \n          i.getMessage());\n      return;\n    }\n  }",
      "path": "mapreduce/src/java/org/apache/hadoop/mapred/TaskTracker.java"
    }
  }
}