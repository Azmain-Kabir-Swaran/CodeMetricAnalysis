{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TaskAttemptImpl.java",
  "functionName": "notifyTaskAttemptFailed",
  "functionId": "notifyTaskAttemptFailed___taskAttempt-TaskAttemptImpl__fastFail-boolean",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java",
  "functionStartLine": 2454,
  "functionEndLine": 2472,
  "numCommitsSeen": 209,
  "timeTaken": 3469,
  "changeHistory": [
    "a37e7f0ad8b68c7ed16c242bedf62f4cde48d6fd",
    "ee4ee6af6a5a6299d27462adb6944206039bbbae",
    "444836b3dcd3ee28238af7b5e753d644e8095788"
  ],
  "changeHistoryShort": {
    "a37e7f0ad8b68c7ed16c242bedf62f4cde48d6fd": "Ymultichange(Yparameterchange,Ybodychange)",
    "ee4ee6af6a5a6299d27462adb6944206039bbbae": "Ybodychange",
    "444836b3dcd3ee28238af7b5e753d644e8095788": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a37e7f0ad8b68c7ed16c242bedf62f4cde48d6fd": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "MAPREDUCE-7022. Fast fail rogue jobs based on task scratch dir size. Contributed by Johan Gustavsson\n",
      "commitDate": "26/01/18 12:36 PM",
      "commitName": "a37e7f0ad8b68c7ed16c242bedf62f4cde48d6fd",
      "commitAuthor": "Jason Lowe",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "MAPREDUCE-7022. Fast fail rogue jobs based on task scratch dir size. Contributed by Johan Gustavsson\n",
          "commitDate": "26/01/18 12:36 PM",
          "commitName": "a37e7f0ad8b68c7ed16c242bedf62f4cde48d6fd",
          "commitAuthor": "Jason Lowe",
          "commitDateOld": "01/12/17 12:04 PM",
          "commitNameOld": "21d36273551fa45c4130e5523b6724358cf34b1e",
          "commitAuthorOld": "Jason Lowe",
          "daysBetweenCommits": 56.02,
          "commitsBetweenForRepo": 315,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,19 @@\n-  private static void notifyTaskAttemptFailed(TaskAttemptImpl taskAttempt) {\n+  private static void notifyTaskAttemptFailed(TaskAttemptImpl taskAttempt,\n+      boolean fastFail) {\n     if (taskAttempt.getLaunchTime() \u003d\u003d 0) {\n       sendJHStartEventForAssignedFailTask(taskAttempt);\n     }\n     // set the finish time\n     taskAttempt.setFinishTime();\n     taskAttempt.eventHandler\n         .handle(createJobCounterUpdateEventTAFailed(taskAttempt, false));\n     TaskAttemptUnsuccessfulCompletionEvent tauce \u003d\n         createTaskAttemptUnsuccessfulCompletionEvent(taskAttempt,\n             TaskAttemptStateInternal.FAILED);\n     taskAttempt.eventHandler.handle(new JobHistoryEvent(\n         taskAttempt.attemptId.getTaskId().getJobId(), tauce));\n \n-    taskAttempt.eventHandler.handle(new TaskTAttemptEvent(\n-        taskAttempt.attemptId, TaskEventType.T_ATTEMPT_FAILED));\n+    taskAttempt.eventHandler.handle(new TaskTAttemptFailedEvent(\n+        taskAttempt.attemptId, fastFail));\n \n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void notifyTaskAttemptFailed(TaskAttemptImpl taskAttempt,\n      boolean fastFail) {\n    if (taskAttempt.getLaunchTime() \u003d\u003d 0) {\n      sendJHStartEventForAssignedFailTask(taskAttempt);\n    }\n    // set the finish time\n    taskAttempt.setFinishTime();\n    taskAttempt.eventHandler\n        .handle(createJobCounterUpdateEventTAFailed(taskAttempt, false));\n    TaskAttemptUnsuccessfulCompletionEvent tauce \u003d\n        createTaskAttemptUnsuccessfulCompletionEvent(taskAttempt,\n            TaskAttemptStateInternal.FAILED);\n    taskAttempt.eventHandler.handle(new JobHistoryEvent(\n        taskAttempt.attemptId.getTaskId().getJobId(), tauce));\n\n    taskAttempt.eventHandler.handle(new TaskTAttemptFailedEvent(\n        taskAttempt.attemptId, fastFail));\n\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java",
          "extendedDetails": {
            "oldValue": "[taskAttempt-TaskAttemptImpl]",
            "newValue": "[taskAttempt-TaskAttemptImpl, fastFail-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-7022. Fast fail rogue jobs based on task scratch dir size. Contributed by Johan Gustavsson\n",
          "commitDate": "26/01/18 12:36 PM",
          "commitName": "a37e7f0ad8b68c7ed16c242bedf62f4cde48d6fd",
          "commitAuthor": "Jason Lowe",
          "commitDateOld": "01/12/17 12:04 PM",
          "commitNameOld": "21d36273551fa45c4130e5523b6724358cf34b1e",
          "commitAuthorOld": "Jason Lowe",
          "daysBetweenCommits": 56.02,
          "commitsBetweenForRepo": 315,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,19 @@\n-  private static void notifyTaskAttemptFailed(TaskAttemptImpl taskAttempt) {\n+  private static void notifyTaskAttemptFailed(TaskAttemptImpl taskAttempt,\n+      boolean fastFail) {\n     if (taskAttempt.getLaunchTime() \u003d\u003d 0) {\n       sendJHStartEventForAssignedFailTask(taskAttempt);\n     }\n     // set the finish time\n     taskAttempt.setFinishTime();\n     taskAttempt.eventHandler\n         .handle(createJobCounterUpdateEventTAFailed(taskAttempt, false));\n     TaskAttemptUnsuccessfulCompletionEvent tauce \u003d\n         createTaskAttemptUnsuccessfulCompletionEvent(taskAttempt,\n             TaskAttemptStateInternal.FAILED);\n     taskAttempt.eventHandler.handle(new JobHistoryEvent(\n         taskAttempt.attemptId.getTaskId().getJobId(), tauce));\n \n-    taskAttempt.eventHandler.handle(new TaskTAttemptEvent(\n-        taskAttempt.attemptId, TaskEventType.T_ATTEMPT_FAILED));\n+    taskAttempt.eventHandler.handle(new TaskTAttemptFailedEvent(\n+        taskAttempt.attemptId, fastFail));\n \n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void notifyTaskAttemptFailed(TaskAttemptImpl taskAttempt,\n      boolean fastFail) {\n    if (taskAttempt.getLaunchTime() \u003d\u003d 0) {\n      sendJHStartEventForAssignedFailTask(taskAttempt);\n    }\n    // set the finish time\n    taskAttempt.setFinishTime();\n    taskAttempt.eventHandler\n        .handle(createJobCounterUpdateEventTAFailed(taskAttempt, false));\n    TaskAttemptUnsuccessfulCompletionEvent tauce \u003d\n        createTaskAttemptUnsuccessfulCompletionEvent(taskAttempt,\n            TaskAttemptStateInternal.FAILED);\n    taskAttempt.eventHandler.handle(new JobHistoryEvent(\n        taskAttempt.attemptId.getTaskId().getJobId(), tauce));\n\n    taskAttempt.eventHandler.handle(new TaskTAttemptFailedEvent(\n        taskAttempt.attemptId, fastFail));\n\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "ee4ee6af6a5a6299d27462adb6944206039bbbae": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5982. Task attempts that fail from the ASSIGNED state can disappear. Contributed by Chang Li\n",
      "commitDate": "17/09/15 2:37 PM",
      "commitName": "ee4ee6af6a5a6299d27462adb6944206039bbbae",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "13/07/15 1:52 AM",
      "commitNameOld": "19295b36d90e26616accee73b1f7743aab5df692",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 66.53,
      "commitsBetweenForRepo": 380,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,18 @@\n   private static void notifyTaskAttemptFailed(TaskAttemptImpl taskAttempt) {\n+    if (taskAttempt.getLaunchTime() \u003d\u003d 0) {\n+      sendJHStartEventForAssignedFailTask(taskAttempt);\n+    }\n     // set the finish time\n     taskAttempt.setFinishTime();\n+    taskAttempt.eventHandler\n+        .handle(createJobCounterUpdateEventTAFailed(taskAttempt, false));\n+    TaskAttemptUnsuccessfulCompletionEvent tauce \u003d\n+        createTaskAttemptUnsuccessfulCompletionEvent(taskAttempt,\n+            TaskAttemptStateInternal.FAILED);\n+    taskAttempt.eventHandler.handle(new JobHistoryEvent(\n+        taskAttempt.attemptId.getTaskId().getJobId(), tauce));\n \n-    if (taskAttempt.getLaunchTime() !\u003d 0) {\n-      taskAttempt.eventHandler\n-          .handle(createJobCounterUpdateEventTAFailed(taskAttempt, false));\n-      TaskAttemptUnsuccessfulCompletionEvent tauce \u003d\n-          createTaskAttemptUnsuccessfulCompletionEvent(taskAttempt,\n-              TaskAttemptStateInternal.FAILED);\n-      taskAttempt.eventHandler.handle(new JobHistoryEvent(\n-          taskAttempt.attemptId.getTaskId().getJobId(), tauce));\n-      // taskAttempt.logAttemptFinishedEvent(TaskAttemptStateInternal.FAILED); Not\n-      // handling failed map/reduce events.\n-    }else {\n-      LOG.debug(\"Not generating HistoryFinish event since start event not \" +\n-          \"generated for taskAttempt: \" + taskAttempt.getID());\n-    }\n     taskAttempt.eventHandler.handle(new TaskTAttemptEvent(\n         taskAttempt.attemptId, TaskEventType.T_ATTEMPT_FAILED));\n \n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void notifyTaskAttemptFailed(TaskAttemptImpl taskAttempt) {\n    if (taskAttempt.getLaunchTime() \u003d\u003d 0) {\n      sendJHStartEventForAssignedFailTask(taskAttempt);\n    }\n    // set the finish time\n    taskAttempt.setFinishTime();\n    taskAttempt.eventHandler\n        .handle(createJobCounterUpdateEventTAFailed(taskAttempt, false));\n    TaskAttemptUnsuccessfulCompletionEvent tauce \u003d\n        createTaskAttemptUnsuccessfulCompletionEvent(taskAttempt,\n            TaskAttemptStateInternal.FAILED);\n    taskAttempt.eventHandler.handle(new JobHistoryEvent(\n        taskAttempt.attemptId.getTaskId().getJobId(), tauce));\n\n    taskAttempt.eventHandler.handle(new TaskTAttemptEvent(\n        taskAttempt.attemptId, TaskEventType.T_ATTEMPT_FAILED));\n\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java",
      "extendedDetails": {}
    },
    "444836b3dcd3ee28238af7b5e753d644e8095788": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-5465. Tasks are often killed before they exit on their own. Contributed by Ming Ma\n",
      "commitDate": "11/05/15 3:37 PM",
      "commitName": "444836b3dcd3ee28238af7b5e753d644e8095788",
      "commitAuthor": "Jason Lowe",
      "diff": "@@ -0,0 +1,22 @@\n+  private static void notifyTaskAttemptFailed(TaskAttemptImpl taskAttempt) {\n+    // set the finish time\n+    taskAttempt.setFinishTime();\n+\n+    if (taskAttempt.getLaunchTime() !\u003d 0) {\n+      taskAttempt.eventHandler\n+          .handle(createJobCounterUpdateEventTAFailed(taskAttempt, false));\n+      TaskAttemptUnsuccessfulCompletionEvent tauce \u003d\n+          createTaskAttemptUnsuccessfulCompletionEvent(taskAttempt,\n+              TaskAttemptStateInternal.FAILED);\n+      taskAttempt.eventHandler.handle(new JobHistoryEvent(\n+          taskAttempt.attemptId.getTaskId().getJobId(), tauce));\n+      // taskAttempt.logAttemptFinishedEvent(TaskAttemptStateInternal.FAILED); Not\n+      // handling failed map/reduce events.\n+    }else {\n+      LOG.debug(\"Not generating HistoryFinish event since start event not \" +\n+          \"generated for taskAttempt: \" + taskAttempt.getID());\n+    }\n+    taskAttempt.eventHandler.handle(new TaskTAttemptEvent(\n+        taskAttempt.attemptId, TaskEventType.T_ATTEMPT_FAILED));\n+\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static void notifyTaskAttemptFailed(TaskAttemptImpl taskAttempt) {\n    // set the finish time\n    taskAttempt.setFinishTime();\n\n    if (taskAttempt.getLaunchTime() !\u003d 0) {\n      taskAttempt.eventHandler\n          .handle(createJobCounterUpdateEventTAFailed(taskAttempt, false));\n      TaskAttemptUnsuccessfulCompletionEvent tauce \u003d\n          createTaskAttemptUnsuccessfulCompletionEvent(taskAttempt,\n              TaskAttemptStateInternal.FAILED);\n      taskAttempt.eventHandler.handle(new JobHistoryEvent(\n          taskAttempt.attemptId.getTaskId().getJobId(), tauce));\n      // taskAttempt.logAttemptFinishedEvent(TaskAttemptStateInternal.FAILED); Not\n      // handling failed map/reduce events.\n    }else {\n      LOG.debug(\"Not generating HistoryFinish event since start event not \" +\n          \"generated for taskAttempt: \" + taskAttempt.getID());\n    }\n    taskAttempt.eventHandler.handle(new TaskTAttemptEvent(\n        taskAttempt.attemptId, TaskEventType.T_ATTEMPT_FAILED));\n\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java"
    }
  }
}