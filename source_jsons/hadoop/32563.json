{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ContainerLogsPage.java",
  "functionName": "printAggregatedLogFileDirectory",
  "functionId": "printAggregatedLogFileDirectory___html-Block__containersLogMeta-List__ContainerLogMeta__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ContainerLogsPage.java",
  "functionStartLine": 277,
  "functionEndLine": 316,
  "numCommitsSeen": 12,
  "timeTaken": 1558,
  "changeHistory": [
    "631b5c2db733b0733a779e843b8035f68d0fcdf3"
  ],
  "changeHistoryShort": {
    "631b5c2db733b0733a779e843b8035f68d0fcdf3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "631b5c2db733b0733a779e843b8035f68d0fcdf3": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5418. When partial log aggregation is enabled, display the list of aggregated files on the container log page. (Xuan Gong via wangda)\n\nChange-Id: I1befb0bbaeb89fb315bafe3e2f3379663f8cf1ec\n",
      "commitDate": "15/12/17 3:38 PM",
      "commitName": "631b5c2db733b0733a779e843b8035f68d0fcdf3",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,40 @@\n+    private void printAggregatedLogFileDirectory(Block html,\n+        List\u003cContainerLogMeta\u003e containersLogMeta) throws ParseException {\n+      List\u003cContainerLogFileInfo\u003e filesInfo \u003d new ArrayList\u003c\u003e();\n+      for (ContainerLogMeta logMeta : containersLogMeta) {\n+        filesInfo.addAll(logMeta.getContainerLogMeta());\n+      }\n+\n+      //sort the list, so we could list the log file in order.\n+      Collections.sort(filesInfo, new Comparator\u003cContainerLogFileInfo\u003e() {\n+        @Override\n+        public int compare(ContainerLogFileInfo o1,\n+            ContainerLogFileInfo o2) {\n+          return createAggregatedLogFileName(o1.getFileName(),\n+              o1.getLastModifiedTime()).compareTo(\n+                  createAggregatedLogFileName(o2.getFileName(),\n+                      o2.getLastModifiedTime()));\n+        }\n+      });\n+\n+      boolean foundLogFile \u003d false;\n+      for (ContainerLogFileInfo fileInfo : filesInfo) {\n+        long timestamp \u003d convertDateToTimeStamp(fileInfo.getLastModifiedTime());\n+        foundLogFile \u003d true;\n+        String fileName \u003d createAggregatedLogFileName(fileInfo.getFileName(),\n+            fileInfo.getLastModifiedTime());\n+        html.p().a(url(\"containerlogs\", $(CONTAINER_ID), $(APP_OWNER),\n+            fileInfo.getFileName(),\n+            \"?start\u003d-4096\u0026\" + LOG_AGGREGATION_TYPE + \"\u003d\"\n+                + LOG_AGGREGATION_REMOTE_TYPE + \"\u0026start.time\u003d\"\n+                + (timestamp - 1000) + \"\u0026end.time\u003d\" + (timestamp + 1000)),\n+            fileName + \" : Total file length is \"\n+                + fileInfo.getFileSize() + \" bytes.\").__();\n+      }\n+\n+      if (!foundLogFile) {\n+        html.h4(\"No aggregated logs available for container \"\n+            + $(CONTAINER_ID));\n+        return;\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private void printAggregatedLogFileDirectory(Block html,\n        List\u003cContainerLogMeta\u003e containersLogMeta) throws ParseException {\n      List\u003cContainerLogFileInfo\u003e filesInfo \u003d new ArrayList\u003c\u003e();\n      for (ContainerLogMeta logMeta : containersLogMeta) {\n        filesInfo.addAll(logMeta.getContainerLogMeta());\n      }\n\n      //sort the list, so we could list the log file in order.\n      Collections.sort(filesInfo, new Comparator\u003cContainerLogFileInfo\u003e() {\n        @Override\n        public int compare(ContainerLogFileInfo o1,\n            ContainerLogFileInfo o2) {\n          return createAggregatedLogFileName(o1.getFileName(),\n              o1.getLastModifiedTime()).compareTo(\n                  createAggregatedLogFileName(o2.getFileName(),\n                      o2.getLastModifiedTime()));\n        }\n      });\n\n      boolean foundLogFile \u003d false;\n      for (ContainerLogFileInfo fileInfo : filesInfo) {\n        long timestamp \u003d convertDateToTimeStamp(fileInfo.getLastModifiedTime());\n        foundLogFile \u003d true;\n        String fileName \u003d createAggregatedLogFileName(fileInfo.getFileName(),\n            fileInfo.getLastModifiedTime());\n        html.p().a(url(\"containerlogs\", $(CONTAINER_ID), $(APP_OWNER),\n            fileInfo.getFileName(),\n            \"?start\u003d-4096\u0026\" + LOG_AGGREGATION_TYPE + \"\u003d\"\n                + LOG_AGGREGATION_REMOTE_TYPE + \"\u0026start.time\u003d\"\n                + (timestamp - 1000) + \"\u0026end.time\u003d\" + (timestamp + 1000)),\n            fileName + \" : Total file length is \"\n                + fileInfo.getFileSize() + \" bytes.\").__();\n      }\n\n      if (!foundLogFile) {\n        html.h4(\"No aggregated logs available for container \"\n            + $(CONTAINER_ID));\n        return;\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ContainerLogsPage.java"
    }
  }
}