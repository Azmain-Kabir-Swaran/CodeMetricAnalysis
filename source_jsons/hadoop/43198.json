{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ServiceClient.java",
  "functionName": "buildCommandLine",
  "functionId": "buildCommandLine___app-Service__conf-Configuration__appRootDir-Path__hasSliderAMLog4j-boolean",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
  "functionStartLine": 1215,
  "functionEndLine": 1258,
  "numCommitsSeen": 65,
  "timeTaken": 6299,
  "changeHistory": [
    "2e2e5401f297545181323b126a69eaa2239afb02",
    "7dd26d5378483cdbce1dc594e8650a96c2976281",
    "53b3e594732e7a567dda4e08b9a8af5f87a4472a",
    "6bf2c301924a3acae5a7510b8473f6292a5a471b",
    "a127f7b0fbde3942ca4329d5463bb8fe421daf7b",
    "ba7ed7b66a48c61086ea837f39ff0f22ffe31eca",
    "541b64c7985db425c5ce8bd5f71a2d5980809708",
    "40ab068eabe50875449d601471619a4e82fff86d",
    "2191f5b533c6b4763f5d443d21127f1f8552ce64",
    "1888318c89776f0bf354c1b13e3ee169e14ff638"
  ],
  "changeHistoryShort": {
    "2e2e5401f297545181323b126a69eaa2239afb02": "Ybodychange",
    "7dd26d5378483cdbce1dc594e8650a96c2976281": "Ybodychange",
    "53b3e594732e7a567dda4e08b9a8af5f87a4472a": "Ybodychange",
    "6bf2c301924a3acae5a7510b8473f6292a5a471b": "Ymultichange(Yparameterchange,Ybodychange)",
    "a127f7b0fbde3942ca4329d5463bb8fe421daf7b": "Ybodychange",
    "ba7ed7b66a48c61086ea837f39ff0f22ffe31eca": "Ybodychange",
    "541b64c7985db425c5ce8bd5f71a2d5980809708": "Ybodychange",
    "40ab068eabe50875449d601471619a4e82fff86d": "Ymultichange(Yfilerename,Ybodychange,Yparameterchange)",
    "2191f5b533c6b4763f5d443d21127f1f8552ce64": "Ybodychange",
    "1888318c89776f0bf354c1b13e3ee169e14ff638": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2e2e5401f297545181323b126a69eaa2239afb02": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9718. Fixed yarn.service.am.java.opts shell injection. Contributed by Eric Yang\n",
      "commitDate": "05/09/19 12:49 PM",
      "commitName": "2e2e5401f297545181323b126a69eaa2239afb02",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "12/08/19 3:24 PM",
      "commitNameOld": "201dc667e9e27de601b2c30956e7c9f9f285281a",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 23.89,
      "commitsBetweenForRepo": 240,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,41 +1,44 @@\n   private String buildCommandLine(Service app, Configuration conf,\n       Path appRootDir, boolean hasSliderAMLog4j) throws BadConfigException {\n     JavaCommandLineBuilder CLI \u003d new JavaCommandLineBuilder();\n     CLI.forceIPv4().headless();\n     String jvmOpts \u003d YarnServiceConf\n         .get(YarnServiceConf.JVM_OPTS, \"\", app.getConfiguration(), conf);\n     if (!jvmOpts.contains(\"-Xmx\")) {\n       jvmOpts +\u003d DEFAULT_AM_JVM_XMX;\n     }\n \n+    // validate possible command injection.\n+    ServiceApiUtil.validateJvmOpts(jvmOpts);\n+\n     CLI.setJVMOpts(jvmOpts);\n     if (hasSliderAMLog4j) {\n       CLI.sysprop(SYSPROP_LOG4J_CONFIGURATION, YARN_SERVICE_LOG4J_FILENAME);\n       CLI.sysprop(SYSPROP_LOG_DIR, ApplicationConstants.LOG_DIR_EXPANSION_VAR);\n     }\n     CLI.add(ServiceMaster.class.getCanonicalName());\n     //TODO debugAM CLI.add(Arguments.ARG_DEBUG)\n     CLI.add(\"-\" + ServiceMaster.YARNFILE_OPTION, new Path(appRootDir,\n         app.getName() + \".json\"));\n     CLI.add(\"-\" + ServiceMaster.SERVICE_NAME_OPTION, app.getName());\n     if (app.getKerberosPrincipal() !\u003d null) {\n       if (!StringUtils.isEmpty(app.getKerberosPrincipal().getKeytab())) {\n         CLI.add(\"-\" + ServiceMaster.KEYTAB_OPTION,\n             app.getKerberosPrincipal().getKeytab());\n       }\n       if (!StringUtils.isEmpty(app.getKerberosPrincipal().getPrincipalName())) {\n         CLI.add(\"-\" + ServiceMaster.PRINCIPAL_NAME_OPTION,\n             app.getKerberosPrincipal().getPrincipalName());\n       }\n     }\n     // pass the registry binding\n     CLI.addConfOptionToCLI(conf, RegistryConstants.KEY_REGISTRY_ZK_ROOT,\n         RegistryConstants.DEFAULT_ZK_REGISTRY_ROOT);\n     CLI.addMandatoryConfOption(conf, RegistryConstants.KEY_REGISTRY_ZK_QUORUM);\n \n     // write out the path output\n     CLI.addOutAndErrFiles(STDOUT_AM, STDERR_AM);\n     String cmdStr \u003d CLI.build();\n     LOG.debug(\"AM launch command: {}\", cmdStr);\n     return cmdStr;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private String buildCommandLine(Service app, Configuration conf,\n      Path appRootDir, boolean hasSliderAMLog4j) throws BadConfigException {\n    JavaCommandLineBuilder CLI \u003d new JavaCommandLineBuilder();\n    CLI.forceIPv4().headless();\n    String jvmOpts \u003d YarnServiceConf\n        .get(YarnServiceConf.JVM_OPTS, \"\", app.getConfiguration(), conf);\n    if (!jvmOpts.contains(\"-Xmx\")) {\n      jvmOpts +\u003d DEFAULT_AM_JVM_XMX;\n    }\n\n    // validate possible command injection.\n    ServiceApiUtil.validateJvmOpts(jvmOpts);\n\n    CLI.setJVMOpts(jvmOpts);\n    if (hasSliderAMLog4j) {\n      CLI.sysprop(SYSPROP_LOG4J_CONFIGURATION, YARN_SERVICE_LOG4J_FILENAME);\n      CLI.sysprop(SYSPROP_LOG_DIR, ApplicationConstants.LOG_DIR_EXPANSION_VAR);\n    }\n    CLI.add(ServiceMaster.class.getCanonicalName());\n    //TODO debugAM CLI.add(Arguments.ARG_DEBUG)\n    CLI.add(\"-\" + ServiceMaster.YARNFILE_OPTION, new Path(appRootDir,\n        app.getName() + \".json\"));\n    CLI.add(\"-\" + ServiceMaster.SERVICE_NAME_OPTION, app.getName());\n    if (app.getKerberosPrincipal() !\u003d null) {\n      if (!StringUtils.isEmpty(app.getKerberosPrincipal().getKeytab())) {\n        CLI.add(\"-\" + ServiceMaster.KEYTAB_OPTION,\n            app.getKerberosPrincipal().getKeytab());\n      }\n      if (!StringUtils.isEmpty(app.getKerberosPrincipal().getPrincipalName())) {\n        CLI.add(\"-\" + ServiceMaster.PRINCIPAL_NAME_OPTION,\n            app.getKerberosPrincipal().getPrincipalName());\n      }\n    }\n    // pass the registry binding\n    CLI.addConfOptionToCLI(conf, RegistryConstants.KEY_REGISTRY_ZK_ROOT,\n        RegistryConstants.DEFAULT_ZK_REGISTRY_ROOT);\n    CLI.addMandatoryConfOption(conf, RegistryConstants.KEY_REGISTRY_ZK_QUORUM);\n\n    // write out the path output\n    CLI.addOutAndErrFiles(STDOUT_AM, STDERR_AM);\n    String cmdStr \u003d CLI.build();\n    LOG.debug(\"AM launch command: {}\", cmdStr);\n    return cmdStr;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
      "extendedDetails": {}
    },
    "7dd26d5378483cdbce1dc594e8650a96c2976281": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8308.  Fixed YARN Service AM failure with HDFS token renewal.\n            Contributed by Gour Saha\n",
      "commitDate": "31/05/18 6:09 PM",
      "commitName": "7dd26d5378483cdbce1dc594e8650a96c2976281",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "30/05/18 12:37 PM",
      "commitNameOld": "96eefcc84aacc4cc82ad7e3e72c5bdad56f4a7b7",
      "commitAuthorOld": "Billie Rinaldi",
      "daysBetweenCommits": 1.23,
      "commitsBetweenForRepo": 16,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,41 @@\n   private String buildCommandLine(Service app, Configuration conf,\n       Path appRootDir, boolean hasSliderAMLog4j) throws BadConfigException {\n     JavaCommandLineBuilder CLI \u003d new JavaCommandLineBuilder();\n     CLI.forceIPv4().headless();\n     String jvmOpts \u003d YarnServiceConf\n         .get(YarnServiceConf.JVM_OPTS, \"\", app.getConfiguration(), conf);\n     if (!jvmOpts.contains(\"-Xmx\")) {\n       jvmOpts +\u003d DEFAULT_AM_JVM_XMX;\n     }\n \n     CLI.setJVMOpts(jvmOpts);\n     if (hasSliderAMLog4j) {\n       CLI.sysprop(SYSPROP_LOG4J_CONFIGURATION, YARN_SERVICE_LOG4J_FILENAME);\n       CLI.sysprop(SYSPROP_LOG_DIR, ApplicationConstants.LOG_DIR_EXPANSION_VAR);\n     }\n     CLI.add(ServiceMaster.class.getCanonicalName());\n     //TODO debugAM CLI.add(Arguments.ARG_DEBUG)\n     CLI.add(\"-\" + ServiceMaster.YARNFILE_OPTION, new Path(appRootDir,\n         app.getName() + \".json\"));\n+    CLI.add(\"-\" + ServiceMaster.SERVICE_NAME_OPTION, app.getName());\n+    if (app.getKerberosPrincipal() !\u003d null) {\n+      if (!StringUtils.isEmpty(app.getKerberosPrincipal().getKeytab())) {\n+        CLI.add(\"-\" + ServiceMaster.KEYTAB_OPTION,\n+            app.getKerberosPrincipal().getKeytab());\n+      }\n+      if (!StringUtils.isEmpty(app.getKerberosPrincipal().getPrincipalName())) {\n+        CLI.add(\"-\" + ServiceMaster.PRINCIPAL_NAME_OPTION,\n+            app.getKerberosPrincipal().getPrincipalName());\n+      }\n+    }\n     // pass the registry binding\n     CLI.addConfOptionToCLI(conf, RegistryConstants.KEY_REGISTRY_ZK_ROOT,\n         RegistryConstants.DEFAULT_ZK_REGISTRY_ROOT);\n     CLI.addMandatoryConfOption(conf, RegistryConstants.KEY_REGISTRY_ZK_QUORUM);\n \n     // write out the path output\n     CLI.addOutAndErrFiles(STDOUT_AM, STDERR_AM);\n     String cmdStr \u003d CLI.build();\n     LOG.debug(\"AM launch command: {}\", cmdStr);\n     return cmdStr;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private String buildCommandLine(Service app, Configuration conf,\n      Path appRootDir, boolean hasSliderAMLog4j) throws BadConfigException {\n    JavaCommandLineBuilder CLI \u003d new JavaCommandLineBuilder();\n    CLI.forceIPv4().headless();\n    String jvmOpts \u003d YarnServiceConf\n        .get(YarnServiceConf.JVM_OPTS, \"\", app.getConfiguration(), conf);\n    if (!jvmOpts.contains(\"-Xmx\")) {\n      jvmOpts +\u003d DEFAULT_AM_JVM_XMX;\n    }\n\n    CLI.setJVMOpts(jvmOpts);\n    if (hasSliderAMLog4j) {\n      CLI.sysprop(SYSPROP_LOG4J_CONFIGURATION, YARN_SERVICE_LOG4J_FILENAME);\n      CLI.sysprop(SYSPROP_LOG_DIR, ApplicationConstants.LOG_DIR_EXPANSION_VAR);\n    }\n    CLI.add(ServiceMaster.class.getCanonicalName());\n    //TODO debugAM CLI.add(Arguments.ARG_DEBUG)\n    CLI.add(\"-\" + ServiceMaster.YARNFILE_OPTION, new Path(appRootDir,\n        app.getName() + \".json\"));\n    CLI.add(\"-\" + ServiceMaster.SERVICE_NAME_OPTION, app.getName());\n    if (app.getKerberosPrincipal() !\u003d null) {\n      if (!StringUtils.isEmpty(app.getKerberosPrincipal().getKeytab())) {\n        CLI.add(\"-\" + ServiceMaster.KEYTAB_OPTION,\n            app.getKerberosPrincipal().getKeytab());\n      }\n      if (!StringUtils.isEmpty(app.getKerberosPrincipal().getPrincipalName())) {\n        CLI.add(\"-\" + ServiceMaster.PRINCIPAL_NAME_OPTION,\n            app.getKerberosPrincipal().getPrincipalName());\n      }\n    }\n    // pass the registry binding\n    CLI.addConfOptionToCLI(conf, RegistryConstants.KEY_REGISTRY_ZK_ROOT,\n        RegistryConstants.DEFAULT_ZK_REGISTRY_ROOT);\n    CLI.addMandatoryConfOption(conf, RegistryConstants.KEY_REGISTRY_ZK_QUORUM);\n\n    // write out the path output\n    CLI.addOutAndErrFiles(STDOUT_AM, STDERR_AM);\n    String cmdStr \u003d CLI.build();\n    LOG.debug(\"AM launch command: {}\", cmdStr);\n    return cmdStr;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
      "extendedDetails": {}
    },
    "53b3e594732e7a567dda4e08b9a8af5f87a4472a": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7936. Add default service AM Xmx. Contributed by Jian He\n",
      "commitDate": "12/04/18 12:38 PM",
      "commitName": "53b3e594732e7a567dda4e08b9a8af5f87a4472a",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "10/04/18 2:40 PM",
      "commitNameOld": "d553799030a5a64df328319aceb35734d0b2de20",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 1.91,
      "commitsBetweenForRepo": 28,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,30 @@\n   private String buildCommandLine(Service app, Configuration conf,\n       Path appRootDir, boolean hasSliderAMLog4j) throws BadConfigException {\n     JavaCommandLineBuilder CLI \u003d new JavaCommandLineBuilder();\n     CLI.forceIPv4().headless();\n-    CLI.setJVMOpts(YarnServiceConf.get(YarnServiceConf.JVM_OPTS, null,\n-        app.getConfiguration(), conf));\n+    String jvmOpts \u003d YarnServiceConf\n+        .get(YarnServiceConf.JVM_OPTS, \"\", app.getConfiguration(), conf);\n+    if (!jvmOpts.contains(\"-Xmx\")) {\n+      jvmOpts +\u003d DEFAULT_AM_JVM_XMX;\n+    }\n+\n+    CLI.setJVMOpts(jvmOpts);\n     if (hasSliderAMLog4j) {\n       CLI.sysprop(SYSPROP_LOG4J_CONFIGURATION, YARN_SERVICE_LOG4J_FILENAME);\n       CLI.sysprop(SYSPROP_LOG_DIR, ApplicationConstants.LOG_DIR_EXPANSION_VAR);\n     }\n     CLI.add(ServiceMaster.class.getCanonicalName());\n     //TODO debugAM CLI.add(Arguments.ARG_DEBUG)\n     CLI.add(\"-\" + ServiceMaster.YARNFILE_OPTION, new Path(appRootDir,\n         app.getName() + \".json\"));\n     // pass the registry binding\n     CLI.addConfOptionToCLI(conf, RegistryConstants.KEY_REGISTRY_ZK_ROOT,\n         RegistryConstants.DEFAULT_ZK_REGISTRY_ROOT);\n     CLI.addMandatoryConfOption(conf, RegistryConstants.KEY_REGISTRY_ZK_QUORUM);\n \n     // write out the path output\n     CLI.addOutAndErrFiles(STDOUT_AM, STDERR_AM);\n     String cmdStr \u003d CLI.build();\n     LOG.debug(\"AM launch command: {}\", cmdStr);\n     return cmdStr;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private String buildCommandLine(Service app, Configuration conf,\n      Path appRootDir, boolean hasSliderAMLog4j) throws BadConfigException {\n    JavaCommandLineBuilder CLI \u003d new JavaCommandLineBuilder();\n    CLI.forceIPv4().headless();\n    String jvmOpts \u003d YarnServiceConf\n        .get(YarnServiceConf.JVM_OPTS, \"\", app.getConfiguration(), conf);\n    if (!jvmOpts.contains(\"-Xmx\")) {\n      jvmOpts +\u003d DEFAULT_AM_JVM_XMX;\n    }\n\n    CLI.setJVMOpts(jvmOpts);\n    if (hasSliderAMLog4j) {\n      CLI.sysprop(SYSPROP_LOG4J_CONFIGURATION, YARN_SERVICE_LOG4J_FILENAME);\n      CLI.sysprop(SYSPROP_LOG_DIR, ApplicationConstants.LOG_DIR_EXPANSION_VAR);\n    }\n    CLI.add(ServiceMaster.class.getCanonicalName());\n    //TODO debugAM CLI.add(Arguments.ARG_DEBUG)\n    CLI.add(\"-\" + ServiceMaster.YARNFILE_OPTION, new Path(appRootDir,\n        app.getName() + \".json\"));\n    // pass the registry binding\n    CLI.addConfOptionToCLI(conf, RegistryConstants.KEY_REGISTRY_ZK_ROOT,\n        RegistryConstants.DEFAULT_ZK_REGISTRY_ROOT);\n    CLI.addMandatoryConfOption(conf, RegistryConstants.KEY_REGISTRY_ZK_QUORUM);\n\n    // write out the path output\n    CLI.addOutAndErrFiles(STDOUT_AM, STDERR_AM);\n    String cmdStr \u003d CLI.build();\n    LOG.debug(\"AM launch command: {}\", cmdStr);\n    return cmdStr;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
      "extendedDetails": {}
    },
    "6bf2c301924a3acae5a7510b8473f6292a5a471b": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-7503. Configurable heap size / JVM opts in service AM. Contributed by Jonathan Hung\n",
      "commitDate": "16/11/17 10:53 AM",
      "commitName": "6bf2c301924a3acae5a7510b8473f6292a5a471b",
      "commitAuthor": "Jian He",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-7503. Configurable heap size / JVM opts in service AM. Contributed by Jonathan Hung\n",
          "commitDate": "16/11/17 10:53 AM",
          "commitName": "6bf2c301924a3acae5a7510b8473f6292a5a471b",
          "commitAuthor": "Jian He",
          "commitDateOld": "13/11/17 6:57 PM",
          "commitNameOld": "4f40cd314ab14f735a465fb9dff2dc1bf118e703",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 2.66,
          "commitsBetweenForRepo": 15,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,25 @@\n-  private String buildCommandLine(String serviceName, Configuration conf,\n+  private String buildCommandLine(Service app, Configuration conf,\n       Path appRootDir, boolean hasSliderAMLog4j) throws BadConfigException {\n     JavaCommandLineBuilder CLI \u003d new JavaCommandLineBuilder();\n     CLI.forceIPv4().headless();\n-    //TODO CLI.setJVMHeap\n-    //TODO CLI.addJVMOPTS\n+    CLI.setJVMOpts(YarnServiceConf.get(YarnServiceConf.JVM_OPTS, null,\n+        app.getConfiguration(), conf));\n     if (hasSliderAMLog4j) {\n       CLI.sysprop(SYSPROP_LOG4J_CONFIGURATION, YARN_SERVICE_LOG4J_FILENAME);\n       CLI.sysprop(SYSPROP_LOG_DIR, ApplicationConstants.LOG_DIR_EXPANSION_VAR);\n     }\n     CLI.add(ServiceMaster.class.getCanonicalName());\n     //TODO debugAM CLI.add(Arguments.ARG_DEBUG)\n     CLI.add(\"-\" + ServiceMaster.YARNFILE_OPTION, new Path(appRootDir,\n-        serviceName + \".json\"));\n+        app.getName() + \".json\"));\n     // pass the registry binding\n     CLI.addConfOptionToCLI(conf, RegistryConstants.KEY_REGISTRY_ZK_ROOT,\n         RegistryConstants.DEFAULT_ZK_REGISTRY_ROOT);\n     CLI.addMandatoryConfOption(conf, RegistryConstants.KEY_REGISTRY_ZK_QUORUM);\n \n     // write out the path output\n     CLI.addOutAndErrFiles(STDOUT_AM, STDERR_AM);\n     String cmdStr \u003d CLI.build();\n     LOG.debug(\"AM launch command: {}\", cmdStr);\n     return cmdStr;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private String buildCommandLine(Service app, Configuration conf,\n      Path appRootDir, boolean hasSliderAMLog4j) throws BadConfigException {\n    JavaCommandLineBuilder CLI \u003d new JavaCommandLineBuilder();\n    CLI.forceIPv4().headless();\n    CLI.setJVMOpts(YarnServiceConf.get(YarnServiceConf.JVM_OPTS, null,\n        app.getConfiguration(), conf));\n    if (hasSliderAMLog4j) {\n      CLI.sysprop(SYSPROP_LOG4J_CONFIGURATION, YARN_SERVICE_LOG4J_FILENAME);\n      CLI.sysprop(SYSPROP_LOG_DIR, ApplicationConstants.LOG_DIR_EXPANSION_VAR);\n    }\n    CLI.add(ServiceMaster.class.getCanonicalName());\n    //TODO debugAM CLI.add(Arguments.ARG_DEBUG)\n    CLI.add(\"-\" + ServiceMaster.YARNFILE_OPTION, new Path(appRootDir,\n        app.getName() + \".json\"));\n    // pass the registry binding\n    CLI.addConfOptionToCLI(conf, RegistryConstants.KEY_REGISTRY_ZK_ROOT,\n        RegistryConstants.DEFAULT_ZK_REGISTRY_ROOT);\n    CLI.addMandatoryConfOption(conf, RegistryConstants.KEY_REGISTRY_ZK_QUORUM);\n\n    // write out the path output\n    CLI.addOutAndErrFiles(STDOUT_AM, STDERR_AM);\n    String cmdStr \u003d CLI.build();\n    LOG.debug(\"AM launch command: {}\", cmdStr);\n    return cmdStr;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
          "extendedDetails": {
            "oldValue": "[serviceName-String, conf-Configuration, appRootDir-Path, hasSliderAMLog4j-boolean]",
            "newValue": "[app-Service, conf-Configuration, appRootDir-Path, hasSliderAMLog4j-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7503. Configurable heap size / JVM opts in service AM. Contributed by Jonathan Hung\n",
          "commitDate": "16/11/17 10:53 AM",
          "commitName": "6bf2c301924a3acae5a7510b8473f6292a5a471b",
          "commitAuthor": "Jian He",
          "commitDateOld": "13/11/17 6:57 PM",
          "commitNameOld": "4f40cd314ab14f735a465fb9dff2dc1bf118e703",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 2.66,
          "commitsBetweenForRepo": 15,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,25 @@\n-  private String buildCommandLine(String serviceName, Configuration conf,\n+  private String buildCommandLine(Service app, Configuration conf,\n       Path appRootDir, boolean hasSliderAMLog4j) throws BadConfigException {\n     JavaCommandLineBuilder CLI \u003d new JavaCommandLineBuilder();\n     CLI.forceIPv4().headless();\n-    //TODO CLI.setJVMHeap\n-    //TODO CLI.addJVMOPTS\n+    CLI.setJVMOpts(YarnServiceConf.get(YarnServiceConf.JVM_OPTS, null,\n+        app.getConfiguration(), conf));\n     if (hasSliderAMLog4j) {\n       CLI.sysprop(SYSPROP_LOG4J_CONFIGURATION, YARN_SERVICE_LOG4J_FILENAME);\n       CLI.sysprop(SYSPROP_LOG_DIR, ApplicationConstants.LOG_DIR_EXPANSION_VAR);\n     }\n     CLI.add(ServiceMaster.class.getCanonicalName());\n     //TODO debugAM CLI.add(Arguments.ARG_DEBUG)\n     CLI.add(\"-\" + ServiceMaster.YARNFILE_OPTION, new Path(appRootDir,\n-        serviceName + \".json\"));\n+        app.getName() + \".json\"));\n     // pass the registry binding\n     CLI.addConfOptionToCLI(conf, RegistryConstants.KEY_REGISTRY_ZK_ROOT,\n         RegistryConstants.DEFAULT_ZK_REGISTRY_ROOT);\n     CLI.addMandatoryConfOption(conf, RegistryConstants.KEY_REGISTRY_ZK_QUORUM);\n \n     // write out the path output\n     CLI.addOutAndErrFiles(STDOUT_AM, STDERR_AM);\n     String cmdStr \u003d CLI.build();\n     LOG.debug(\"AM launch command: {}\", cmdStr);\n     return cmdStr;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private String buildCommandLine(Service app, Configuration conf,\n      Path appRootDir, boolean hasSliderAMLog4j) throws BadConfigException {\n    JavaCommandLineBuilder CLI \u003d new JavaCommandLineBuilder();\n    CLI.forceIPv4().headless();\n    CLI.setJVMOpts(YarnServiceConf.get(YarnServiceConf.JVM_OPTS, null,\n        app.getConfiguration(), conf));\n    if (hasSliderAMLog4j) {\n      CLI.sysprop(SYSPROP_LOG4J_CONFIGURATION, YARN_SERVICE_LOG4J_FILENAME);\n      CLI.sysprop(SYSPROP_LOG_DIR, ApplicationConstants.LOG_DIR_EXPANSION_VAR);\n    }\n    CLI.add(ServiceMaster.class.getCanonicalName());\n    //TODO debugAM CLI.add(Arguments.ARG_DEBUG)\n    CLI.add(\"-\" + ServiceMaster.YARNFILE_OPTION, new Path(appRootDir,\n        app.getName() + \".json\"));\n    // pass the registry binding\n    CLI.addConfOptionToCLI(conf, RegistryConstants.KEY_REGISTRY_ZK_ROOT,\n        RegistryConstants.DEFAULT_ZK_REGISTRY_ROOT);\n    CLI.addMandatoryConfOption(conf, RegistryConstants.KEY_REGISTRY_ZK_QUORUM);\n\n    // write out the path output\n    CLI.addOutAndErrFiles(STDOUT_AM, STDERR_AM);\n    String cmdStr \u003d CLI.build();\n    LOG.debug(\"AM launch command: {}\", cmdStr);\n    return cmdStr;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
          "extendedDetails": {}
        }
      ]
    },
    "a127f7b0fbde3942ca4329d5463bb8fe421daf7b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7423. Improve service client loggings. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "a127f7b0fbde3942ca4329d5463bb8fe421daf7b",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "a6c4bd74b636d0715ffb4c1aca9ef4e49201aa02",
      "commitAuthorOld": "Billie Rinaldi",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n   private String buildCommandLine(String serviceName, Configuration conf,\n       Path appRootDir, boolean hasSliderAMLog4j) throws BadConfigException {\n     JavaCommandLineBuilder CLI \u003d new JavaCommandLineBuilder();\n     CLI.forceIPv4().headless();\n     //TODO CLI.setJVMHeap\n     //TODO CLI.addJVMOPTS\n     if (hasSliderAMLog4j) {\n       CLI.sysprop(SYSPROP_LOG4J_CONFIGURATION, YARN_SERVICE_LOG4J_FILENAME);\n       CLI.sysprop(SYSPROP_LOG_DIR, ApplicationConstants.LOG_DIR_EXPANSION_VAR);\n     }\n     CLI.add(ServiceMaster.class.getCanonicalName());\n     //TODO debugAM CLI.add(Arguments.ARG_DEBUG)\n     CLI.add(\"-\" + ServiceMaster.YARNFILE_OPTION, new Path(appRootDir,\n         serviceName + \".json\"));\n     // pass the registry binding\n     CLI.addConfOptionToCLI(conf, RegistryConstants.KEY_REGISTRY_ZK_ROOT,\n         RegistryConstants.DEFAULT_ZK_REGISTRY_ROOT);\n     CLI.addMandatoryConfOption(conf, RegistryConstants.KEY_REGISTRY_ZK_QUORUM);\n \n     // write out the path output\n     CLI.addOutAndErrFiles(STDOUT_AM, STDERR_AM);\n     String cmdStr \u003d CLI.build();\n-    LOG.info(\"AM launch command: {}\", cmdStr);\n+    LOG.debug(\"AM launch command: {}\", cmdStr);\n     return cmdStr;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private String buildCommandLine(String serviceName, Configuration conf,\n      Path appRootDir, boolean hasSliderAMLog4j) throws BadConfigException {\n    JavaCommandLineBuilder CLI \u003d new JavaCommandLineBuilder();\n    CLI.forceIPv4().headless();\n    //TODO CLI.setJVMHeap\n    //TODO CLI.addJVMOPTS\n    if (hasSliderAMLog4j) {\n      CLI.sysprop(SYSPROP_LOG4J_CONFIGURATION, YARN_SERVICE_LOG4J_FILENAME);\n      CLI.sysprop(SYSPROP_LOG_DIR, ApplicationConstants.LOG_DIR_EXPANSION_VAR);\n    }\n    CLI.add(ServiceMaster.class.getCanonicalName());\n    //TODO debugAM CLI.add(Arguments.ARG_DEBUG)\n    CLI.add(\"-\" + ServiceMaster.YARNFILE_OPTION, new Path(appRootDir,\n        serviceName + \".json\"));\n    // pass the registry binding\n    CLI.addConfOptionToCLI(conf, RegistryConstants.KEY_REGISTRY_ZK_ROOT,\n        RegistryConstants.DEFAULT_ZK_REGISTRY_ROOT);\n    CLI.addMandatoryConfOption(conf, RegistryConstants.KEY_REGISTRY_ZK_QUORUM);\n\n    // write out the path output\n    CLI.addOutAndErrFiles(STDOUT_AM, STDERR_AM);\n    String cmdStr \u003d CLI.build();\n    LOG.debug(\"AM launch command: {}\", cmdStr);\n    return cmdStr;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
      "extendedDetails": {}
    },
    "ba7ed7b66a48c61086ea837f39ff0f22ffe31eca": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7384. Remove apiserver cmd and merge service cmd into application cmd. Contributed by Billie Rinaldi\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "ba7ed7b66a48c61086ea837f39ff0f22ffe31eca",
      "commitAuthor": "Jian He",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "68acd88dcbfe03a0134c60b5398dfaa31ad2b786",
      "commitAuthorOld": "Billie Rinaldi",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n   private String buildCommandLine(String serviceName, Configuration conf,\n       Path appRootDir, boolean hasSliderAMLog4j) throws BadConfigException {\n     JavaCommandLineBuilder CLI \u003d new JavaCommandLineBuilder();\n     CLI.forceIPv4().headless();\n     //TODO CLI.setJVMHeap\n     //TODO CLI.addJVMOPTS\n     if (hasSliderAMLog4j) {\n       CLI.sysprop(SYSPROP_LOG4J_CONFIGURATION, YARN_SERVICE_LOG4J_FILENAME);\n       CLI.sysprop(SYSPROP_LOG_DIR, ApplicationConstants.LOG_DIR_EXPANSION_VAR);\n     }\n     CLI.add(ServiceMaster.class.getCanonicalName());\n-    CLI.add(ACTION_CREATE, serviceName);\n     //TODO debugAM CLI.add(Arguments.ARG_DEBUG)\n-    CLI.add(Arguments.ARG_SERVICE_DEF_PATH, new Path(appRootDir, serviceName + \".json\"));\n+    CLI.add(\"-\" + ServiceMaster.YARNFILE_OPTION, new Path(appRootDir,\n+        serviceName + \".json\"));\n     // pass the registry binding\n     CLI.addConfOptionToCLI(conf, RegistryConstants.KEY_REGISTRY_ZK_ROOT,\n         RegistryConstants.DEFAULT_ZK_REGISTRY_ROOT);\n     CLI.addMandatoryConfOption(conf, RegistryConstants.KEY_REGISTRY_ZK_QUORUM);\n \n     // write out the path output\n     CLI.addOutAndErrFiles(STDOUT_AM, STDERR_AM);\n     String cmdStr \u003d CLI.build();\n     LOG.info(\"AM launch command: {}\", cmdStr);\n     return cmdStr;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private String buildCommandLine(String serviceName, Configuration conf,\n      Path appRootDir, boolean hasSliderAMLog4j) throws BadConfigException {\n    JavaCommandLineBuilder CLI \u003d new JavaCommandLineBuilder();\n    CLI.forceIPv4().headless();\n    //TODO CLI.setJVMHeap\n    //TODO CLI.addJVMOPTS\n    if (hasSliderAMLog4j) {\n      CLI.sysprop(SYSPROP_LOG4J_CONFIGURATION, YARN_SERVICE_LOG4J_FILENAME);\n      CLI.sysprop(SYSPROP_LOG_DIR, ApplicationConstants.LOG_DIR_EXPANSION_VAR);\n    }\n    CLI.add(ServiceMaster.class.getCanonicalName());\n    //TODO debugAM CLI.add(Arguments.ARG_DEBUG)\n    CLI.add(\"-\" + ServiceMaster.YARNFILE_OPTION, new Path(appRootDir,\n        serviceName + \".json\"));\n    // pass the registry binding\n    CLI.addConfOptionToCLI(conf, RegistryConstants.KEY_REGISTRY_ZK_ROOT,\n        RegistryConstants.DEFAULT_ZK_REGISTRY_ROOT);\n    CLI.addMandatoryConfOption(conf, RegistryConstants.KEY_REGISTRY_ZK_QUORUM);\n\n    // write out the path output\n    CLI.addOutAndErrFiles(STDOUT_AM, STDERR_AM);\n    String cmdStr \u003d CLI.build();\n    LOG.info(\"AM launch command: {}\", cmdStr);\n    return cmdStr;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
      "extendedDetails": {}
    },
    "541b64c7985db425c5ce8bd5f71a2d5980809708": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7165. Miscellaneous fixes in yarn-native-services. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "541b64c7985db425c5ce8bd5f71a2d5980809708",
      "commitAuthor": "Gour Saha",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "40ab068eabe50875449d601471619a4e82fff86d",
      "commitAuthorOld": "Billie Rinaldi",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n   private String buildCommandLine(String serviceName, Configuration conf,\n       Path appRootDir, boolean hasSliderAMLog4j) throws BadConfigException {\n     JavaCommandLineBuilder CLI \u003d new JavaCommandLineBuilder();\n     CLI.forceIPv4().headless();\n     //TODO CLI.setJVMHeap\n     //TODO CLI.addJVMOPTS\n     if (hasSliderAMLog4j) {\n       CLI.sysprop(SYSPROP_LOG4J_CONFIGURATION, YARN_SERVICE_LOG4J_FILENAME);\n       CLI.sysprop(SYSPROP_LOG_DIR, ApplicationConstants.LOG_DIR_EXPANSION_VAR);\n     }\n     CLI.add(ServiceMaster.class.getCanonicalName());\n     CLI.add(ACTION_CREATE, serviceName);\n     //TODO debugAM CLI.add(Arguments.ARG_DEBUG)\n-    CLI.add(Arguments.ARG_CLUSTER_URI, new Path(appRootDir, serviceName + \".json\"));\n+    CLI.add(Arguments.ARG_SERVICE_DEF_PATH, new Path(appRootDir, serviceName + \".json\"));\n     // pass the registry binding\n     CLI.addConfOptionToCLI(conf, RegistryConstants.KEY_REGISTRY_ZK_ROOT,\n         RegistryConstants.DEFAULT_ZK_REGISTRY_ROOT);\n     CLI.addMandatoryConfOption(conf, RegistryConstants.KEY_REGISTRY_ZK_QUORUM);\n \n     // write out the path output\n     CLI.addOutAndErrFiles(STDOUT_AM, STDERR_AM);\n     String cmdStr \u003d CLI.build();\n     LOG.info(\"AM launch command: {}\", cmdStr);\n     return cmdStr;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private String buildCommandLine(String serviceName, Configuration conf,\n      Path appRootDir, boolean hasSliderAMLog4j) throws BadConfigException {\n    JavaCommandLineBuilder CLI \u003d new JavaCommandLineBuilder();\n    CLI.forceIPv4().headless();\n    //TODO CLI.setJVMHeap\n    //TODO CLI.addJVMOPTS\n    if (hasSliderAMLog4j) {\n      CLI.sysprop(SYSPROP_LOG4J_CONFIGURATION, YARN_SERVICE_LOG4J_FILENAME);\n      CLI.sysprop(SYSPROP_LOG_DIR, ApplicationConstants.LOG_DIR_EXPANSION_VAR);\n    }\n    CLI.add(ServiceMaster.class.getCanonicalName());\n    CLI.add(ACTION_CREATE, serviceName);\n    //TODO debugAM CLI.add(Arguments.ARG_DEBUG)\n    CLI.add(Arguments.ARG_SERVICE_DEF_PATH, new Path(appRootDir, serviceName + \".json\"));\n    // pass the registry binding\n    CLI.addConfOptionToCLI(conf, RegistryConstants.KEY_REGISTRY_ZK_ROOT,\n        RegistryConstants.DEFAULT_ZK_REGISTRY_ROOT);\n    CLI.addMandatoryConfOption(conf, RegistryConstants.KEY_REGISTRY_ZK_QUORUM);\n\n    // write out the path output\n    CLI.addOutAndErrFiles(STDOUT_AM, STDERR_AM);\n    String cmdStr \u003d CLI.build();\n    LOG.info(\"AM launch command: {}\", cmdStr);\n    return cmdStr;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
      "extendedDetails": {}
    },
    "40ab068eabe50875449d601471619a4e82fff86d": {
      "type": "Ymultichange(Yfilerename,Ybodychange,Yparameterchange)",
      "commitMessage": "YARN-7091. Rename application to service in yarn-native-services. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "40ab068eabe50875449d601471619a4e82fff86d",
      "commitAuthor": "Billie Rinaldi",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "YARN-7091. Rename application to service in yarn-native-services. Contributed by Jian He\n",
          "commitDate": "06/11/17 1:30 PM",
          "commitName": "40ab068eabe50875449d601471619a4e82fff86d",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "06/11/17 1:30 PM",
          "commitNameOld": "2ba38ce8ecb1cf3836fab48cdb2c5ae7e1b5427d",
          "commitAuthorOld": "Gour Saha",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,25 @@\n-  private String buildCommandLine(String appName, Configuration conf,\n+  private String buildCommandLine(String serviceName, Configuration conf,\n       Path appRootDir, boolean hasSliderAMLog4j) throws BadConfigException {\n     JavaCommandLineBuilder CLI \u003d new JavaCommandLineBuilder();\n     CLI.forceIPv4().headless();\n     //TODO CLI.setJVMHeap\n     //TODO CLI.addJVMOPTS\n     if (hasSliderAMLog4j) {\n       CLI.sysprop(SYSPROP_LOG4J_CONFIGURATION, YARN_SERVICE_LOG4J_FILENAME);\n       CLI.sysprop(SYSPROP_LOG_DIR, ApplicationConstants.LOG_DIR_EXPANSION_VAR);\n     }\n     CLI.add(ServiceMaster.class.getCanonicalName());\n-    CLI.add(ACTION_CREATE, appName);\n+    CLI.add(ACTION_CREATE, serviceName);\n     //TODO debugAM CLI.add(Arguments.ARG_DEBUG)\n-    CLI.add(Arguments.ARG_CLUSTER_URI, new Path(appRootDir, appName + \".json\"));\n+    CLI.add(Arguments.ARG_CLUSTER_URI, new Path(appRootDir, serviceName + \".json\"));\n     // pass the registry binding\n     CLI.addConfOptionToCLI(conf, RegistryConstants.KEY_REGISTRY_ZK_ROOT,\n         RegistryConstants.DEFAULT_ZK_REGISTRY_ROOT);\n     CLI.addMandatoryConfOption(conf, RegistryConstants.KEY_REGISTRY_ZK_QUORUM);\n \n     // write out the path output\n     CLI.addOutAndErrFiles(STDOUT_AM, STDERR_AM);\n     String cmdStr \u003d CLI.build();\n     LOG.info(\"AM launch command: {}\", cmdStr);\n     return cmdStr;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private String buildCommandLine(String serviceName, Configuration conf,\n      Path appRootDir, boolean hasSliderAMLog4j) throws BadConfigException {\n    JavaCommandLineBuilder CLI \u003d new JavaCommandLineBuilder();\n    CLI.forceIPv4().headless();\n    //TODO CLI.setJVMHeap\n    //TODO CLI.addJVMOPTS\n    if (hasSliderAMLog4j) {\n      CLI.sysprop(SYSPROP_LOG4J_CONFIGURATION, YARN_SERVICE_LOG4J_FILENAME);\n      CLI.sysprop(SYSPROP_LOG_DIR, ApplicationConstants.LOG_DIR_EXPANSION_VAR);\n    }\n    CLI.add(ServiceMaster.class.getCanonicalName());\n    CLI.add(ACTION_CREATE, serviceName);\n    //TODO debugAM CLI.add(Arguments.ARG_DEBUG)\n    CLI.add(Arguments.ARG_CLUSTER_URI, new Path(appRootDir, serviceName + \".json\"));\n    // pass the registry binding\n    CLI.addConfOptionToCLI(conf, RegistryConstants.KEY_REGISTRY_ZK_ROOT,\n        RegistryConstants.DEFAULT_ZK_REGISTRY_ROOT);\n    CLI.addMandatoryConfOption(conf, RegistryConstants.KEY_REGISTRY_ZK_QUORUM);\n\n    // write out the path output\n    CLI.addOutAndErrFiles(STDOUT_AM, STDERR_AM);\n    String cmdStr \u003d CLI.build();\n    LOG.info(\"AM launch command: {}\", cmdStr);\n    return cmdStr;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7091. Rename application to service in yarn-native-services. Contributed by Jian He\n",
          "commitDate": "06/11/17 1:30 PM",
          "commitName": "40ab068eabe50875449d601471619a4e82fff86d",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "06/11/17 1:30 PM",
          "commitNameOld": "2ba38ce8ecb1cf3836fab48cdb2c5ae7e1b5427d",
          "commitAuthorOld": "Gour Saha",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,25 @@\n-  private String buildCommandLine(String appName, Configuration conf,\n+  private String buildCommandLine(String serviceName, Configuration conf,\n       Path appRootDir, boolean hasSliderAMLog4j) throws BadConfigException {\n     JavaCommandLineBuilder CLI \u003d new JavaCommandLineBuilder();\n     CLI.forceIPv4().headless();\n     //TODO CLI.setJVMHeap\n     //TODO CLI.addJVMOPTS\n     if (hasSliderAMLog4j) {\n       CLI.sysprop(SYSPROP_LOG4J_CONFIGURATION, YARN_SERVICE_LOG4J_FILENAME);\n       CLI.sysprop(SYSPROP_LOG_DIR, ApplicationConstants.LOG_DIR_EXPANSION_VAR);\n     }\n     CLI.add(ServiceMaster.class.getCanonicalName());\n-    CLI.add(ACTION_CREATE, appName);\n+    CLI.add(ACTION_CREATE, serviceName);\n     //TODO debugAM CLI.add(Arguments.ARG_DEBUG)\n-    CLI.add(Arguments.ARG_CLUSTER_URI, new Path(appRootDir, appName + \".json\"));\n+    CLI.add(Arguments.ARG_CLUSTER_URI, new Path(appRootDir, serviceName + \".json\"));\n     // pass the registry binding\n     CLI.addConfOptionToCLI(conf, RegistryConstants.KEY_REGISTRY_ZK_ROOT,\n         RegistryConstants.DEFAULT_ZK_REGISTRY_ROOT);\n     CLI.addMandatoryConfOption(conf, RegistryConstants.KEY_REGISTRY_ZK_QUORUM);\n \n     // write out the path output\n     CLI.addOutAndErrFiles(STDOUT_AM, STDERR_AM);\n     String cmdStr \u003d CLI.build();\n     LOG.info(\"AM launch command: {}\", cmdStr);\n     return cmdStr;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private String buildCommandLine(String serviceName, Configuration conf,\n      Path appRootDir, boolean hasSliderAMLog4j) throws BadConfigException {\n    JavaCommandLineBuilder CLI \u003d new JavaCommandLineBuilder();\n    CLI.forceIPv4().headless();\n    //TODO CLI.setJVMHeap\n    //TODO CLI.addJVMOPTS\n    if (hasSliderAMLog4j) {\n      CLI.sysprop(SYSPROP_LOG4J_CONFIGURATION, YARN_SERVICE_LOG4J_FILENAME);\n      CLI.sysprop(SYSPROP_LOG_DIR, ApplicationConstants.LOG_DIR_EXPANSION_VAR);\n    }\n    CLI.add(ServiceMaster.class.getCanonicalName());\n    CLI.add(ACTION_CREATE, serviceName);\n    //TODO debugAM CLI.add(Arguments.ARG_DEBUG)\n    CLI.add(Arguments.ARG_CLUSTER_URI, new Path(appRootDir, serviceName + \".json\"));\n    // pass the registry binding\n    CLI.addConfOptionToCLI(conf, RegistryConstants.KEY_REGISTRY_ZK_ROOT,\n        RegistryConstants.DEFAULT_ZK_REGISTRY_ROOT);\n    CLI.addMandatoryConfOption(conf, RegistryConstants.KEY_REGISTRY_ZK_QUORUM);\n\n    // write out the path output\n    CLI.addOutAndErrFiles(STDOUT_AM, STDERR_AM);\n    String cmdStr \u003d CLI.build();\n    LOG.info(\"AM launch command: {}\", cmdStr);\n    return cmdStr;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-7091. Rename application to service in yarn-native-services. Contributed by Jian He\n",
          "commitDate": "06/11/17 1:30 PM",
          "commitName": "40ab068eabe50875449d601471619a4e82fff86d",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "06/11/17 1:30 PM",
          "commitNameOld": "2ba38ce8ecb1cf3836fab48cdb2c5ae7e1b5427d",
          "commitAuthorOld": "Gour Saha",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,25 @@\n-  private String buildCommandLine(String appName, Configuration conf,\n+  private String buildCommandLine(String serviceName, Configuration conf,\n       Path appRootDir, boolean hasSliderAMLog4j) throws BadConfigException {\n     JavaCommandLineBuilder CLI \u003d new JavaCommandLineBuilder();\n     CLI.forceIPv4().headless();\n     //TODO CLI.setJVMHeap\n     //TODO CLI.addJVMOPTS\n     if (hasSliderAMLog4j) {\n       CLI.sysprop(SYSPROP_LOG4J_CONFIGURATION, YARN_SERVICE_LOG4J_FILENAME);\n       CLI.sysprop(SYSPROP_LOG_DIR, ApplicationConstants.LOG_DIR_EXPANSION_VAR);\n     }\n     CLI.add(ServiceMaster.class.getCanonicalName());\n-    CLI.add(ACTION_CREATE, appName);\n+    CLI.add(ACTION_CREATE, serviceName);\n     //TODO debugAM CLI.add(Arguments.ARG_DEBUG)\n-    CLI.add(Arguments.ARG_CLUSTER_URI, new Path(appRootDir, appName + \".json\"));\n+    CLI.add(Arguments.ARG_CLUSTER_URI, new Path(appRootDir, serviceName + \".json\"));\n     // pass the registry binding\n     CLI.addConfOptionToCLI(conf, RegistryConstants.KEY_REGISTRY_ZK_ROOT,\n         RegistryConstants.DEFAULT_ZK_REGISTRY_ROOT);\n     CLI.addMandatoryConfOption(conf, RegistryConstants.KEY_REGISTRY_ZK_QUORUM);\n \n     // write out the path output\n     CLI.addOutAndErrFiles(STDOUT_AM, STDERR_AM);\n     String cmdStr \u003d CLI.build();\n     LOG.info(\"AM launch command: {}\", cmdStr);\n     return cmdStr;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private String buildCommandLine(String serviceName, Configuration conf,\n      Path appRootDir, boolean hasSliderAMLog4j) throws BadConfigException {\n    JavaCommandLineBuilder CLI \u003d new JavaCommandLineBuilder();\n    CLI.forceIPv4().headless();\n    //TODO CLI.setJVMHeap\n    //TODO CLI.addJVMOPTS\n    if (hasSliderAMLog4j) {\n      CLI.sysprop(SYSPROP_LOG4J_CONFIGURATION, YARN_SERVICE_LOG4J_FILENAME);\n      CLI.sysprop(SYSPROP_LOG_DIR, ApplicationConstants.LOG_DIR_EXPANSION_VAR);\n    }\n    CLI.add(ServiceMaster.class.getCanonicalName());\n    CLI.add(ACTION_CREATE, serviceName);\n    //TODO debugAM CLI.add(Arguments.ARG_DEBUG)\n    CLI.add(Arguments.ARG_CLUSTER_URI, new Path(appRootDir, serviceName + \".json\"));\n    // pass the registry binding\n    CLI.addConfOptionToCLI(conf, RegistryConstants.KEY_REGISTRY_ZK_ROOT,\n        RegistryConstants.DEFAULT_ZK_REGISTRY_ROOT);\n    CLI.addMandatoryConfOption(conf, RegistryConstants.KEY_REGISTRY_ZK_QUORUM);\n\n    // write out the path output\n    CLI.addOutAndErrFiles(STDOUT_AM, STDERR_AM);\n    String cmdStr \u003d CLI.build();\n    LOG.info(\"AM launch command: {}\", cmdStr);\n    return cmdStr;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
          "extendedDetails": {
            "oldValue": "[appName-String, conf-Configuration, appRootDir-Path, hasSliderAMLog4j-boolean]",
            "newValue": "[serviceName-String, conf-Configuration, appRootDir-Path, hasSliderAMLog4j-boolean]"
          }
        }
      ]
    },
    "2191f5b533c6b4763f5d443d21127f1f8552ce64": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7050. Post cleanup after YARN-6903, removal of org.apache.slider package. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "2191f5b533c6b4763f5d443d21127f1f8552ce64",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "79bf5c084d4a063f1a933cae498af23edfd46792",
      "commitAuthorOld": "Billie Rinaldi",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n   private String buildCommandLine(String appName, Configuration conf,\n       Path appRootDir, boolean hasSliderAMLog4j) throws BadConfigException {\n     JavaCommandLineBuilder CLI \u003d new JavaCommandLineBuilder();\n     CLI.forceIPv4().headless();\n     //TODO CLI.setJVMHeap\n     //TODO CLI.addJVMOPTS\n     if (hasSliderAMLog4j) {\n-      CLI.sysprop(SYSPROP_LOG4J_CONFIGURATION, LOG4J_SERVER_PROP_FILENAME);\n+      CLI.sysprop(SYSPROP_LOG4J_CONFIGURATION, YARN_SERVICE_LOG4J_FILENAME);\n       CLI.sysprop(SYSPROP_LOG_DIR, ApplicationConstants.LOG_DIR_EXPANSION_VAR);\n     }\n     CLI.add(ServiceMaster.class.getCanonicalName());\n     CLI.add(ACTION_CREATE, appName);\n     //TODO debugAM CLI.add(Arguments.ARG_DEBUG)\n     CLI.add(Arguments.ARG_CLUSTER_URI, new Path(appRootDir, appName + \".json\"));\n     // pass the registry binding\n     CLI.addConfOptionToCLI(conf, RegistryConstants.KEY_REGISTRY_ZK_ROOT,\n         RegistryConstants.DEFAULT_ZK_REGISTRY_ROOT);\n     CLI.addMandatoryConfOption(conf, RegistryConstants.KEY_REGISTRY_ZK_QUORUM);\n \n     // write out the path output\n     CLI.addOutAndErrFiles(STDOUT_AM, STDERR_AM);\n     String cmdStr \u003d CLI.build();\n     LOG.info(\"AM launch command: {}\", cmdStr);\n     return cmdStr;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private String buildCommandLine(String appName, Configuration conf,\n      Path appRootDir, boolean hasSliderAMLog4j) throws BadConfigException {\n    JavaCommandLineBuilder CLI \u003d new JavaCommandLineBuilder();\n    CLI.forceIPv4().headless();\n    //TODO CLI.setJVMHeap\n    //TODO CLI.addJVMOPTS\n    if (hasSliderAMLog4j) {\n      CLI.sysprop(SYSPROP_LOG4J_CONFIGURATION, YARN_SERVICE_LOG4J_FILENAME);\n      CLI.sysprop(SYSPROP_LOG_DIR, ApplicationConstants.LOG_DIR_EXPANSION_VAR);\n    }\n    CLI.add(ServiceMaster.class.getCanonicalName());\n    CLI.add(ACTION_CREATE, appName);\n    //TODO debugAM CLI.add(Arguments.ARG_DEBUG)\n    CLI.add(Arguments.ARG_CLUSTER_URI, new Path(appRootDir, appName + \".json\"));\n    // pass the registry binding\n    CLI.addConfOptionToCLI(conf, RegistryConstants.KEY_REGISTRY_ZK_ROOT,\n        RegistryConstants.DEFAULT_ZK_REGISTRY_ROOT);\n    CLI.addMandatoryConfOption(conf, RegistryConstants.KEY_REGISTRY_ZK_QUORUM);\n\n    // write out the path output\n    CLI.addOutAndErrFiles(STDOUT_AM, STDERR_AM);\n    String cmdStr \u003d CLI.build();\n    LOG.info(\"AM launch command: {}\", cmdStr);\n    return cmdStr;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
      "extendedDetails": {}
    },
    "1888318c89776f0bf354c1b13e3ee169e14ff638": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6903. Yarn-native-service framework core rewrite. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "1888318c89776f0bf354c1b13e3ee169e14ff638",
      "commitAuthor": "Billie Rinaldi",
      "diff": "@@ -0,0 +1,25 @@\n+  private String buildCommandLine(String appName, Configuration conf,\n+      Path appRootDir, boolean hasSliderAMLog4j) throws BadConfigException {\n+    JavaCommandLineBuilder CLI \u003d new JavaCommandLineBuilder();\n+    CLI.forceIPv4().headless();\n+    //TODO CLI.setJVMHeap\n+    //TODO CLI.addJVMOPTS\n+    if (hasSliderAMLog4j) {\n+      CLI.sysprop(SYSPROP_LOG4J_CONFIGURATION, LOG4J_SERVER_PROP_FILENAME);\n+      CLI.sysprop(SYSPROP_LOG_DIR, ApplicationConstants.LOG_DIR_EXPANSION_VAR);\n+    }\n+    CLI.add(ServiceMaster.class.getCanonicalName());\n+    CLI.add(ACTION_CREATE, appName);\n+    //TODO debugAM CLI.add(Arguments.ARG_DEBUG)\n+    CLI.add(Arguments.ARG_CLUSTER_URI, new Path(appRootDir, appName + \".json\"));\n+    // pass the registry binding\n+    CLI.addConfOptionToCLI(conf, RegistryConstants.KEY_REGISTRY_ZK_ROOT,\n+        RegistryConstants.DEFAULT_ZK_REGISTRY_ROOT);\n+    CLI.addMandatoryConfOption(conf, RegistryConstants.KEY_REGISTRY_ZK_QUORUM);\n+\n+    // write out the path output\n+    CLI.addOutAndErrFiles(STDOUT_AM, STDERR_AM);\n+    String cmdStr \u003d CLI.build();\n+    LOG.info(\"AM launch command: {}\", cmdStr);\n+    return cmdStr;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private String buildCommandLine(String appName, Configuration conf,\n      Path appRootDir, boolean hasSliderAMLog4j) throws BadConfigException {\n    JavaCommandLineBuilder CLI \u003d new JavaCommandLineBuilder();\n    CLI.forceIPv4().headless();\n    //TODO CLI.setJVMHeap\n    //TODO CLI.addJVMOPTS\n    if (hasSliderAMLog4j) {\n      CLI.sysprop(SYSPROP_LOG4J_CONFIGURATION, LOG4J_SERVER_PROP_FILENAME);\n      CLI.sysprop(SYSPROP_LOG_DIR, ApplicationConstants.LOG_DIR_EXPANSION_VAR);\n    }\n    CLI.add(ServiceMaster.class.getCanonicalName());\n    CLI.add(ACTION_CREATE, appName);\n    //TODO debugAM CLI.add(Arguments.ARG_DEBUG)\n    CLI.add(Arguments.ARG_CLUSTER_URI, new Path(appRootDir, appName + \".json\"));\n    // pass the registry binding\n    CLI.addConfOptionToCLI(conf, RegistryConstants.KEY_REGISTRY_ZK_ROOT,\n        RegistryConstants.DEFAULT_ZK_REGISTRY_ROOT);\n    CLI.addMandatoryConfOption(conf, RegistryConstants.KEY_REGISTRY_ZK_QUORUM);\n\n    // write out the path output\n    CLI.addOutAndErrFiles(STDOUT_AM, STDERR_AM);\n    String cmdStr \u003d CLI.build();\n    LOG.info(\"AM launch command: {}\", cmdStr);\n    return cmdStr;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java"
    }
  }
}