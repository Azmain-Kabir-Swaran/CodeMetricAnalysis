{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BlockScanner.java",
  "functionName": "doGet",
  "functionId": "doGet___request-HttpServletRequest__response-HttpServletResponse",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockScanner.java",
  "functionStartLine": 360,
  "functionEndLine": 380,
  "numCommitsSeen": 28,
  "timeTaken": 6842,
  "changeHistory": [
    "6e62a1a6728b1f782f64065424f92b292c3f163a",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "6e62a1a6728b1f782f64065424f92b292c3f163a": "Ymultichange(Ymovefromfile,Ybodychange)",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6e62a1a6728b1f782f64065424f92b292c3f163a": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "HDFS-7430. Refactor the BlockScanner to use O(1) memory and use multiple threads (cmccabe)\n",
      "commitDate": "21/01/15 7:00 PM",
      "commitName": "6e62a1a6728b1f782f64065424f92b292c3f163a",
      "commitAuthor": "Colin Patrick Mccabe",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-7430. Refactor the BlockScanner to use O(1) memory and use multiple threads (cmccabe)\n",
          "commitDate": "21/01/15 7:00 PM",
          "commitName": "6e62a1a6728b1f782f64065424f92b292c3f163a",
          "commitAuthor": "Colin Patrick Mccabe",
          "commitDateOld": "21/01/15 6:42 PM",
          "commitNameOld": "a003f71cacd35834a1abbc2ffb5446a1166caf73",
          "commitAuthorOld": "Gera Shegalov",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,21 @@\n-    public void doGet(HttpServletRequest request, \n+    public void doGet(HttpServletRequest request,\n                       HttpServletResponse response) throws IOException {\n       response.setContentType(\"text/plain\");\n-      \n-      DataNode datanode \u003d (DataNode) getServletContext().getAttribute(\"datanode\");\n-      DataBlockScanner blockScanner \u003d datanode.blockScanner;\n-      \n-      boolean summary \u003d (request.getParameter(\"listblocks\") \u003d\u003d null);\n-      \n-      StringBuilder buffer \u003d new StringBuilder(8*1024);\n-      if (blockScanner \u003d\u003d null) {\n+\n+      DataNode datanode \u003d (DataNode)\n+          getServletContext().getAttribute(\"datanode\");\n+      BlockScanner blockScanner \u003d datanode.getBlockScanner();\n+\n+      StringBuilder buffer \u003d new StringBuilder(8 * 1024);\n+      if (!blockScanner.isEnabled()) {\n         LOG.warn(\"Periodic block scanner is not running\");\n         buffer.append(\"Periodic block scanner is not running. \" +\n-                      \"Please check the datanode log if this is unexpected.\");\n+            \"Please check the datanode log if this is unexpected.\");\n       } else {\n-        blockScanner.printBlockReport(buffer, summary);\n+        buffer.append(\"Block Scanner Statistics\\n\\n\");\n+        blockScanner.printStats(buffer);\n       }\n-      response.getWriter().write(buffer.toString()); // extra copy!\n+      String resp \u003d buffer.toString();\n+      LOG.trace(\"Returned Servlet info {}\", resp);\n+      response.getWriter().write(resp);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void doGet(HttpServletRequest request,\n                      HttpServletResponse response) throws IOException {\n      response.setContentType(\"text/plain\");\n\n      DataNode datanode \u003d (DataNode)\n          getServletContext().getAttribute(\"datanode\");\n      BlockScanner blockScanner \u003d datanode.getBlockScanner();\n\n      StringBuilder buffer \u003d new StringBuilder(8 * 1024);\n      if (!blockScanner.isEnabled()) {\n        LOG.warn(\"Periodic block scanner is not running\");\n        buffer.append(\"Periodic block scanner is not running. \" +\n            \"Please check the datanode log if this is unexpected.\");\n      } else {\n        buffer.append(\"Block Scanner Statistics\\n\\n\");\n        blockScanner.printStats(buffer);\n      }\n      String resp \u003d buffer.toString();\n      LOG.trace(\"Returned Servlet info {}\", resp);\n      response.getWriter().write(resp);\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockScanner.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataBlockScanner.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockScanner.java",
            "oldMethodName": "doGet",
            "newMethodName": "doGet"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-7430. Refactor the BlockScanner to use O(1) memory and use multiple threads (cmccabe)\n",
          "commitDate": "21/01/15 7:00 PM",
          "commitName": "6e62a1a6728b1f782f64065424f92b292c3f163a",
          "commitAuthor": "Colin Patrick Mccabe",
          "commitDateOld": "21/01/15 6:42 PM",
          "commitNameOld": "a003f71cacd35834a1abbc2ffb5446a1166caf73",
          "commitAuthorOld": "Gera Shegalov",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,21 @@\n-    public void doGet(HttpServletRequest request, \n+    public void doGet(HttpServletRequest request,\n                       HttpServletResponse response) throws IOException {\n       response.setContentType(\"text/plain\");\n-      \n-      DataNode datanode \u003d (DataNode) getServletContext().getAttribute(\"datanode\");\n-      DataBlockScanner blockScanner \u003d datanode.blockScanner;\n-      \n-      boolean summary \u003d (request.getParameter(\"listblocks\") \u003d\u003d null);\n-      \n-      StringBuilder buffer \u003d new StringBuilder(8*1024);\n-      if (blockScanner \u003d\u003d null) {\n+\n+      DataNode datanode \u003d (DataNode)\n+          getServletContext().getAttribute(\"datanode\");\n+      BlockScanner blockScanner \u003d datanode.getBlockScanner();\n+\n+      StringBuilder buffer \u003d new StringBuilder(8 * 1024);\n+      if (!blockScanner.isEnabled()) {\n         LOG.warn(\"Periodic block scanner is not running\");\n         buffer.append(\"Periodic block scanner is not running. \" +\n-                      \"Please check the datanode log if this is unexpected.\");\n+            \"Please check the datanode log if this is unexpected.\");\n       } else {\n-        blockScanner.printBlockReport(buffer, summary);\n+        buffer.append(\"Block Scanner Statistics\\n\\n\");\n+        blockScanner.printStats(buffer);\n       }\n-      response.getWriter().write(buffer.toString()); // extra copy!\n+      String resp \u003d buffer.toString();\n+      LOG.trace(\"Returned Servlet info {}\", resp);\n+      response.getWriter().write(resp);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void doGet(HttpServletRequest request,\n                      HttpServletResponse response) throws IOException {\n      response.setContentType(\"text/plain\");\n\n      DataNode datanode \u003d (DataNode)\n          getServletContext().getAttribute(\"datanode\");\n      BlockScanner blockScanner \u003d datanode.getBlockScanner();\n\n      StringBuilder buffer \u003d new StringBuilder(8 * 1024);\n      if (!blockScanner.isEnabled()) {\n        LOG.warn(\"Periodic block scanner is not running\");\n        buffer.append(\"Periodic block scanner is not running. \" +\n            \"Please check the datanode log if this is unexpected.\");\n      } else {\n        buffer.append(\"Block Scanner Statistics\\n\\n\");\n        blockScanner.printStats(buffer);\n      }\n      String resp \u003d buffer.toString();\n      LOG.trace(\"Returned Servlet info {}\", resp);\n      response.getWriter().write(resp);\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockScanner.java",
          "extendedDetails": {}
        }
      ]
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public void doGet(HttpServletRequest request, \n                      HttpServletResponse response) throws IOException {\n      response.setContentType(\"text/plain\");\n      \n      DataNode datanode \u003d (DataNode) getServletContext().getAttribute(\"datanode\");\n      DataBlockScanner blockScanner \u003d datanode.blockScanner;\n      \n      boolean summary \u003d (request.getParameter(\"listblocks\") \u003d\u003d null);\n      \n      StringBuilder buffer \u003d new StringBuilder(8*1024);\n      if (blockScanner \u003d\u003d null) {\n        LOG.warn(\"Periodic block scanner is not running\");\n        buffer.append(\"Periodic block scanner is not running. \" +\n                      \"Please check the datanode log if this is unexpected.\");\n      } else {\n        blockScanner.printBlockReport(buffer, summary);\n      }\n      response.getWriter().write(buffer.toString()); // extra copy!\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataBlockScanner.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataBlockScanner.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataBlockScanner.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public void doGet(HttpServletRequest request, \n                      HttpServletResponse response) throws IOException {\n      response.setContentType(\"text/plain\");\n      \n      DataNode datanode \u003d (DataNode) getServletContext().getAttribute(\"datanode\");\n      DataBlockScanner blockScanner \u003d datanode.blockScanner;\n      \n      boolean summary \u003d (request.getParameter(\"listblocks\") \u003d\u003d null);\n      \n      StringBuilder buffer \u003d new StringBuilder(8*1024);\n      if (blockScanner \u003d\u003d null) {\n        LOG.warn(\"Periodic block scanner is not running\");\n        buffer.append(\"Periodic block scanner is not running. \" +\n                      \"Please check the datanode log if this is unexpected.\");\n      } else {\n        blockScanner.printBlockReport(buffer, summary);\n      }\n      response.getWriter().write(buffer.toString()); // extra copy!\n    }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataBlockScanner.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/datanode/DataBlockScanner.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataBlockScanner.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,19 @@\n+    public void doGet(HttpServletRequest request, \n+                      HttpServletResponse response) throws IOException {\n+      response.setContentType(\"text/plain\");\n+      \n+      DataNode datanode \u003d (DataNode) getServletContext().getAttribute(\"datanode\");\n+      DataBlockScanner blockScanner \u003d datanode.blockScanner;\n+      \n+      boolean summary \u003d (request.getParameter(\"listblocks\") \u003d\u003d null);\n+      \n+      StringBuilder buffer \u003d new StringBuilder(8*1024);\n+      if (blockScanner \u003d\u003d null) {\n+        LOG.warn(\"Periodic block scanner is not running\");\n+        buffer.append(\"Periodic block scanner is not running. \" +\n+                      \"Please check the datanode log if this is unexpected.\");\n+      } else {\n+        blockScanner.printBlockReport(buffer, summary);\n+      }\n+      response.getWriter().write(buffer.toString()); // extra copy!\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void doGet(HttpServletRequest request, \n                      HttpServletResponse response) throws IOException {\n      response.setContentType(\"text/plain\");\n      \n      DataNode datanode \u003d (DataNode) getServletContext().getAttribute(\"datanode\");\n      DataBlockScanner blockScanner \u003d datanode.blockScanner;\n      \n      boolean summary \u003d (request.getParameter(\"listblocks\") \u003d\u003d null);\n      \n      StringBuilder buffer \u003d new StringBuilder(8*1024);\n      if (blockScanner \u003d\u003d null) {\n        LOG.warn(\"Periodic block scanner is not running\");\n        buffer.append(\"Periodic block scanner is not running. \" +\n                      \"Please check the datanode log if this is unexpected.\");\n      } else {\n        blockScanner.printBlockReport(buffer, summary);\n      }\n      response.getWriter().write(buffer.toString()); // extra copy!\n    }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/datanode/DataBlockScanner.java"
    }
  }
}