{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NMTimelinePublisher.java",
  "functionName": "publishContainerFinishedEvent",
  "functionId": "publishContainerFinishedEvent___containerStatus-ContainerStatus__containerFinishTime-long__containerStartTime-long",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/timelineservice/NMTimelinePublisher.java",
  "functionStartLine": 336,
  "functionEndLine": 361,
  "numCommitsSeen": 44,
  "timeTaken": 2887,
  "changeHistory": [
    "332cab5518ba9c70a5f191883db8c4d22e8e48b7",
    "e3ec18b0c4fb93bd00c12d90057c2b982ca8a676",
    "092fead5d9875fb3760206bcdd76cdafec5e9481",
    "1f304b0c7f261369dd68839507bb609a949965ad",
    "84c35ac6c4a76c31d9bf9c87b87ed29394564611",
    "477a30f536277bf95d7181bf1b2fdda52d83bf51"
  ],
  "changeHistoryShort": {
    "332cab5518ba9c70a5f191883db8c4d22e8e48b7": "Ybodychange",
    "e3ec18b0c4fb93bd00c12d90057c2b982ca8a676": "Ybodychange",
    "092fead5d9875fb3760206bcdd76cdafec5e9481": "Ymultichange(Yparameterchange,Ybodychange)",
    "1f304b0c7f261369dd68839507bb609a949965ad": "Ybodychange",
    "84c35ac6c4a76c31d9bf9c87b87ed29394564611": "Ybodychange",
    "477a30f536277bf95d7181bf1b2fdda52d83bf51": "Yintroduced"
  },
  "changeHistoryDetails": {
    "332cab5518ba9c70a5f191883db8c4d22e8e48b7": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9418. ATSV2 /apps//entities/YARN_CONTAINER rest api does not show metrics. Contributed by Prabhu Joseph.\n",
      "commitDate": "01/04/19 11:06 AM",
      "commitName": "332cab5518ba9c70a5f191883db8c4d22e8e48b7",
      "commitAuthor": "Giovanni Matteo Fumarola",
      "commitDateOld": "15/03/19 4:20 PM",
      "commitNameOld": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 16.78,
      "commitsBetweenForRepo": 107,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,26 @@\n   private void publishContainerFinishedEvent(ContainerStatus containerStatus,\n       long containerFinishTime, long containerStartTime) {\n     if (publishNMContainerEvents) {\n       ContainerId containerId \u003d containerStatus.getContainerId();\n       TimelineEntity entity \u003d createContainerEntity(containerId);\n \n       Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n       entityInfo.put(ContainerMetricsConstants.DIAGNOSTICS_INFO,\n           containerStatus.getDiagnostics());\n       entityInfo.put(ContainerMetricsConstants.EXIT_STATUS_INFO,\n           containerStatus.getExitStatus());\n       entityInfo.put(ContainerMetricsConstants.STATE_INFO,\n           ContainerState.COMPLETE.toString());\n       entityInfo.put(ContainerMetricsConstants.CONTAINER_FINISHED_TIME,\n           containerFinishTime);\n       entity.setInfo(entityInfo);\n \n       TimelineEvent tEvent \u003d new TimelineEvent();\n       tEvent.setId(ContainerMetricsConstants.FINISHED_EVENT_TYPE);\n       tEvent.setTimestamp(containerFinishTime);\n       entity.addEvent(tEvent);\n-      entity.setIdPrefix(TimelineServiceHelper.invertLong(containerStartTime));\n \n       dispatcher.getEventHandler().handle(new TimelinePublishEvent(entity,\n           containerId.getApplicationAttemptId().getApplicationId()));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void publishContainerFinishedEvent(ContainerStatus containerStatus,\n      long containerFinishTime, long containerStartTime) {\n    if (publishNMContainerEvents) {\n      ContainerId containerId \u003d containerStatus.getContainerId();\n      TimelineEntity entity \u003d createContainerEntity(containerId);\n\n      Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n      entityInfo.put(ContainerMetricsConstants.DIAGNOSTICS_INFO,\n          containerStatus.getDiagnostics());\n      entityInfo.put(ContainerMetricsConstants.EXIT_STATUS_INFO,\n          containerStatus.getExitStatus());\n      entityInfo.put(ContainerMetricsConstants.STATE_INFO,\n          ContainerState.COMPLETE.toString());\n      entityInfo.put(ContainerMetricsConstants.CONTAINER_FINISHED_TIME,\n          containerFinishTime);\n      entity.setInfo(entityInfo);\n\n      TimelineEvent tEvent \u003d new TimelineEvent();\n      tEvent.setId(ContainerMetricsConstants.FINISHED_EVENT_TYPE);\n      tEvent.setTimestamp(containerFinishTime);\n      entity.addEvent(tEvent);\n\n      dispatcher.getEventHandler().handle(new TimelinePublishEvent(entity,\n          containerId.getApplicationAttemptId().getApplicationId()));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/timelineservice/NMTimelinePublisher.java",
      "extendedDetails": {}
    },
    "e3ec18b0c4fb93bd00c12d90057c2b982ca8a676": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6735. Have a way to turn off container metrics from NMs. Contributed by Abhishek Modi.\n",
      "commitDate": "05/02/19 12:18 AM",
      "commitName": "e3ec18b0c4fb93bd00c12d90057c2b982ca8a676",
      "commitAuthor": "Rohith Sharma K S",
      "commitDateOld": "14/06/18 12:08 AM",
      "commitNameOld": "9119b3cf8f883aa2d5df534afc0c50249fed03c6",
      "commitAuthorOld": "Rohith Sharma K S",
      "daysBetweenCommits": 236.05,
      "commitsBetweenForRepo": 1785,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,27 @@\n   private void publishContainerFinishedEvent(ContainerStatus containerStatus,\n       long containerFinishTime, long containerStartTime) {\n-    ContainerId containerId \u003d containerStatus.getContainerId();\n-    TimelineEntity entity \u003d createContainerEntity(containerId);\n+    if (publishNMContainerEvents) {\n+      ContainerId containerId \u003d containerStatus.getContainerId();\n+      TimelineEntity entity \u003d createContainerEntity(containerId);\n \n-    Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n-    entityInfo.put(ContainerMetricsConstants.DIAGNOSTICS_INFO,\n-        containerStatus.getDiagnostics());\n-    entityInfo.put(ContainerMetricsConstants.EXIT_STATUS_INFO,\n-        containerStatus.getExitStatus());\n-    entityInfo.put(ContainerMetricsConstants.STATE_INFO,\n-        ContainerState.COMPLETE.toString());\n-    entityInfo.put(ContainerMetricsConstants.CONTAINER_FINISHED_TIME,\n-        containerFinishTime);\n-    entity.setInfo(entityInfo);\n+      Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n+      entityInfo.put(ContainerMetricsConstants.DIAGNOSTICS_INFO,\n+          containerStatus.getDiagnostics());\n+      entityInfo.put(ContainerMetricsConstants.EXIT_STATUS_INFO,\n+          containerStatus.getExitStatus());\n+      entityInfo.put(ContainerMetricsConstants.STATE_INFO,\n+          ContainerState.COMPLETE.toString());\n+      entityInfo.put(ContainerMetricsConstants.CONTAINER_FINISHED_TIME,\n+          containerFinishTime);\n+      entity.setInfo(entityInfo);\n \n-    TimelineEvent tEvent \u003d new TimelineEvent();\n-    tEvent.setId(ContainerMetricsConstants.FINISHED_EVENT_TYPE);\n-    tEvent.setTimestamp(containerFinishTime);\n-    entity.addEvent(tEvent);\n-    entity.setIdPrefix(TimelineServiceHelper.invertLong(containerStartTime));\n+      TimelineEvent tEvent \u003d new TimelineEvent();\n+      tEvent.setId(ContainerMetricsConstants.FINISHED_EVENT_TYPE);\n+      tEvent.setTimestamp(containerFinishTime);\n+      entity.addEvent(tEvent);\n+      entity.setIdPrefix(TimelineServiceHelper.invertLong(containerStartTime));\n \n-    dispatcher.getEventHandler().handle(new TimelinePublishEvent(entity,\n-        containerId.getApplicationAttemptId().getApplicationId()));\n+      dispatcher.getEventHandler().handle(new TimelinePublishEvent(entity,\n+          containerId.getApplicationAttemptId().getApplicationId()));\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void publishContainerFinishedEvent(ContainerStatus containerStatus,\n      long containerFinishTime, long containerStartTime) {\n    if (publishNMContainerEvents) {\n      ContainerId containerId \u003d containerStatus.getContainerId();\n      TimelineEntity entity \u003d createContainerEntity(containerId);\n\n      Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n      entityInfo.put(ContainerMetricsConstants.DIAGNOSTICS_INFO,\n          containerStatus.getDiagnostics());\n      entityInfo.put(ContainerMetricsConstants.EXIT_STATUS_INFO,\n          containerStatus.getExitStatus());\n      entityInfo.put(ContainerMetricsConstants.STATE_INFO,\n          ContainerState.COMPLETE.toString());\n      entityInfo.put(ContainerMetricsConstants.CONTAINER_FINISHED_TIME,\n          containerFinishTime);\n      entity.setInfo(entityInfo);\n\n      TimelineEvent tEvent \u003d new TimelineEvent();\n      tEvent.setId(ContainerMetricsConstants.FINISHED_EVENT_TYPE);\n      tEvent.setTimestamp(containerFinishTime);\n      entity.addEvent(tEvent);\n      entity.setIdPrefix(TimelineServiceHelper.invertLong(containerStartTime));\n\n      dispatcher.getEventHandler().handle(new TimelinePublishEvent(entity,\n          containerId.getApplicationAttemptId().getApplicationId()));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/timelineservice/NMTimelinePublisher.java",
      "extendedDetails": {}
    },
    "092fead5d9875fb3760206bcdd76cdafec5e9481": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-5792. Adopt the id prefix for YARN, MR, and DS entities. Contributed by Varun Saxena.\n",
      "commitDate": "29/08/17 10:59 PM",
      "commitName": "092fead5d9875fb3760206bcdd76cdafec5e9481",
      "commitAuthor": "Sangjin Lee",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-5792. Adopt the id prefix for YARN, MR, and DS entities. Contributed by Varun Saxena.\n",
          "commitDate": "29/08/17 10:59 PM",
          "commitName": "092fead5d9875fb3760206bcdd76cdafec5e9481",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "29/08/17 10:59 PM",
          "commitNameOld": "278bd6fcff8d084acfd85b91a6f4ca7e189e742d",
          "commitAuthorOld": "Sangjin Lee",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 8,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,25 @@\n   private void publishContainerFinishedEvent(ContainerStatus containerStatus,\n-      long timeStamp) {\n+      long containerFinishTime, long containerStartTime) {\n     ContainerId containerId \u003d containerStatus.getContainerId();\n     TimelineEntity entity \u003d createContainerEntity(containerId);\n \n     Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n     entityInfo.put(ContainerMetricsConstants.DIAGNOSTICS_INFO,\n         containerStatus.getDiagnostics());\n     entityInfo.put(ContainerMetricsConstants.EXIT_STATUS_INFO,\n         containerStatus.getExitStatus());\n     entityInfo.put(ContainerMetricsConstants.STATE_INFO,\n         ContainerState.COMPLETE.toString());\n     entityInfo.put(ContainerMetricsConstants.CONTAINER_FINISHED_TIME,\n-        timeStamp);\n+        containerFinishTime);\n     entity.setInfo(entityInfo);\n \n     TimelineEvent tEvent \u003d new TimelineEvent();\n     tEvent.setId(ContainerMetricsConstants.FINISHED_EVENT_TYPE);\n-    tEvent.setTimestamp(timeStamp);\n+    tEvent.setTimestamp(containerFinishTime);\n     entity.addEvent(tEvent);\n+    entity.setIdPrefix(TimelineServiceHelper.invertLong(containerStartTime));\n \n     dispatcher.getEventHandler().handle(new TimelinePublishEvent(entity,\n         containerId.getApplicationAttemptId().getApplicationId()));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void publishContainerFinishedEvent(ContainerStatus containerStatus,\n      long containerFinishTime, long containerStartTime) {\n    ContainerId containerId \u003d containerStatus.getContainerId();\n    TimelineEntity entity \u003d createContainerEntity(containerId);\n\n    Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n    entityInfo.put(ContainerMetricsConstants.DIAGNOSTICS_INFO,\n        containerStatus.getDiagnostics());\n    entityInfo.put(ContainerMetricsConstants.EXIT_STATUS_INFO,\n        containerStatus.getExitStatus());\n    entityInfo.put(ContainerMetricsConstants.STATE_INFO,\n        ContainerState.COMPLETE.toString());\n    entityInfo.put(ContainerMetricsConstants.CONTAINER_FINISHED_TIME,\n        containerFinishTime);\n    entity.setInfo(entityInfo);\n\n    TimelineEvent tEvent \u003d new TimelineEvent();\n    tEvent.setId(ContainerMetricsConstants.FINISHED_EVENT_TYPE);\n    tEvent.setTimestamp(containerFinishTime);\n    entity.addEvent(tEvent);\n    entity.setIdPrefix(TimelineServiceHelper.invertLong(containerStartTime));\n\n    dispatcher.getEventHandler().handle(new TimelinePublishEvent(entity,\n        containerId.getApplicationAttemptId().getApplicationId()));\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/timelineservice/NMTimelinePublisher.java",
          "extendedDetails": {
            "oldValue": "[containerStatus-ContainerStatus, timeStamp-long]",
            "newValue": "[containerStatus-ContainerStatus, containerFinishTime-long, containerStartTime-long]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-5792. Adopt the id prefix for YARN, MR, and DS entities. Contributed by Varun Saxena.\n",
          "commitDate": "29/08/17 10:59 PM",
          "commitName": "092fead5d9875fb3760206bcdd76cdafec5e9481",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "29/08/17 10:59 PM",
          "commitNameOld": "278bd6fcff8d084acfd85b91a6f4ca7e189e742d",
          "commitAuthorOld": "Sangjin Lee",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 8,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,25 @@\n   private void publishContainerFinishedEvent(ContainerStatus containerStatus,\n-      long timeStamp) {\n+      long containerFinishTime, long containerStartTime) {\n     ContainerId containerId \u003d containerStatus.getContainerId();\n     TimelineEntity entity \u003d createContainerEntity(containerId);\n \n     Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n     entityInfo.put(ContainerMetricsConstants.DIAGNOSTICS_INFO,\n         containerStatus.getDiagnostics());\n     entityInfo.put(ContainerMetricsConstants.EXIT_STATUS_INFO,\n         containerStatus.getExitStatus());\n     entityInfo.put(ContainerMetricsConstants.STATE_INFO,\n         ContainerState.COMPLETE.toString());\n     entityInfo.put(ContainerMetricsConstants.CONTAINER_FINISHED_TIME,\n-        timeStamp);\n+        containerFinishTime);\n     entity.setInfo(entityInfo);\n \n     TimelineEvent tEvent \u003d new TimelineEvent();\n     tEvent.setId(ContainerMetricsConstants.FINISHED_EVENT_TYPE);\n-    tEvent.setTimestamp(timeStamp);\n+    tEvent.setTimestamp(containerFinishTime);\n     entity.addEvent(tEvent);\n+    entity.setIdPrefix(TimelineServiceHelper.invertLong(containerStartTime));\n \n     dispatcher.getEventHandler().handle(new TimelinePublishEvent(entity,\n         containerId.getApplicationAttemptId().getApplicationId()));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void publishContainerFinishedEvent(ContainerStatus containerStatus,\n      long containerFinishTime, long containerStartTime) {\n    ContainerId containerId \u003d containerStatus.getContainerId();\n    TimelineEntity entity \u003d createContainerEntity(containerId);\n\n    Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n    entityInfo.put(ContainerMetricsConstants.DIAGNOSTICS_INFO,\n        containerStatus.getDiagnostics());\n    entityInfo.put(ContainerMetricsConstants.EXIT_STATUS_INFO,\n        containerStatus.getExitStatus());\n    entityInfo.put(ContainerMetricsConstants.STATE_INFO,\n        ContainerState.COMPLETE.toString());\n    entityInfo.put(ContainerMetricsConstants.CONTAINER_FINISHED_TIME,\n        containerFinishTime);\n    entity.setInfo(entityInfo);\n\n    TimelineEvent tEvent \u003d new TimelineEvent();\n    tEvent.setId(ContainerMetricsConstants.FINISHED_EVENT_TYPE);\n    tEvent.setTimestamp(containerFinishTime);\n    entity.addEvent(tEvent);\n    entity.setIdPrefix(TimelineServiceHelper.invertLong(containerStartTime));\n\n    dispatcher.getEventHandler().handle(new TimelinePublishEvent(entity,\n        containerId.getApplicationAttemptId().getApplicationId()));\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/timelineservice/NMTimelinePublisher.java",
          "extendedDetails": {}
        }
      ]
    },
    "1f304b0c7f261369dd68839507bb609a949965ad": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5699. Retrospect yarn entity fields which are publishing in events info fields. Contributed by Rohith Sharma K S.\n",
      "commitDate": "15/10/16 1:54 PM",
      "commitName": "1f304b0c7f261369dd68839507bb609a949965ad",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "06/09/16 7:31 AM",
      "commitNameOld": "e6fcfe28e304062c7d09231db757acb2953703ce",
      "commitAuthorOld": "Varun Vasudev",
      "daysBetweenCommits": 39.27,
      "commitsBetweenForRepo": 274,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,24 @@\n   private void publishContainerFinishedEvent(ContainerStatus containerStatus,\n       long timeStamp) {\n     ContainerId containerId \u003d containerStatus.getContainerId();\n     TimelineEntity entity \u003d createContainerEntity(containerId);\n \n-    Map\u003cString, Object\u003e eventInfo \u003d new HashMap\u003cString, Object\u003e();\n-    eventInfo.put(ContainerMetricsConstants.DIAGNOSTICS_INFO_EVENT_INFO,\n+    Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n+    entityInfo.put(ContainerMetricsConstants.DIAGNOSTICS_INFO,\n         containerStatus.getDiagnostics());\n-    eventInfo.put(ContainerMetricsConstants.EXIT_STATUS_EVENT_INFO,\n+    entityInfo.put(ContainerMetricsConstants.EXIT_STATUS_INFO,\n         containerStatus.getExitStatus());\n-    eventInfo.put(ContainerMetricsConstants.STATE_EVENT_INFO, containerStatus\n-        .getState().toString());\n+    entityInfo.put(ContainerMetricsConstants.STATE_INFO,\n+        ContainerState.COMPLETE.toString());\n+    entityInfo.put(ContainerMetricsConstants.CONTAINER_FINISHED_TIME,\n+        timeStamp);\n+    entity.setInfo(entityInfo);\n \n     TimelineEvent tEvent \u003d new TimelineEvent();\n     tEvent.setId(ContainerMetricsConstants.FINISHED_EVENT_TYPE);\n     tEvent.setTimestamp(timeStamp);\n-    tEvent.setInfo(eventInfo);\n-\n     entity.addEvent(tEvent);\n \n     dispatcher.getEventHandler().handle(new TimelinePublishEvent(entity,\n         containerId.getApplicationAttemptId().getApplicationId()));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void publishContainerFinishedEvent(ContainerStatus containerStatus,\n      long timeStamp) {\n    ContainerId containerId \u003d containerStatus.getContainerId();\n    TimelineEntity entity \u003d createContainerEntity(containerId);\n\n    Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n    entityInfo.put(ContainerMetricsConstants.DIAGNOSTICS_INFO,\n        containerStatus.getDiagnostics());\n    entityInfo.put(ContainerMetricsConstants.EXIT_STATUS_INFO,\n        containerStatus.getExitStatus());\n    entityInfo.put(ContainerMetricsConstants.STATE_INFO,\n        ContainerState.COMPLETE.toString());\n    entityInfo.put(ContainerMetricsConstants.CONTAINER_FINISHED_TIME,\n        timeStamp);\n    entity.setInfo(entityInfo);\n\n    TimelineEvent tEvent \u003d new TimelineEvent();\n    tEvent.setId(ContainerMetricsConstants.FINISHED_EVENT_TYPE);\n    tEvent.setTimestamp(timeStamp);\n    entity.addEvent(tEvent);\n\n    dispatcher.getEventHandler().handle(new TimelinePublishEvent(entity,\n        containerId.getApplicationAttemptId().getApplicationId()));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/timelineservice/NMTimelinePublisher.java",
      "extendedDetails": {}
    },
    "84c35ac6c4a76c31d9bf9c87b87ed29394564611": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4711. NM is going down with NPE\u0027s due to single thread processing of events by Timeline client (Naganarasimha G R via sjlee)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "84c35ac6c4a76c31d9bf9c87b87ed29394564611",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "6f6cc647d6e77f6cc4c66e0534f8c73bc1612a1b",
      "commitAuthorOld": "Varun Saxena",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,23 @@\n   private void publishContainerFinishedEvent(ContainerStatus containerStatus,\n       long timeStamp) {\n     ContainerId containerId \u003d containerStatus.getContainerId();\n     TimelineEntity entity \u003d createContainerEntity(containerId);\n \n     Map\u003cString, Object\u003e eventInfo \u003d new HashMap\u003cString, Object\u003e();\n     eventInfo.put(ContainerMetricsConstants.DIAGNOSTICS_INFO_EVENT_INFO,\n         containerStatus.getDiagnostics());\n     eventInfo.put(ContainerMetricsConstants.EXIT_STATUS_EVENT_INFO,\n         containerStatus.getExitStatus());\n     eventInfo.put(ContainerMetricsConstants.STATE_EVENT_INFO, containerStatus\n         .getState().toString());\n \n     TimelineEvent tEvent \u003d new TimelineEvent();\n     tEvent.setId(ContainerMetricsConstants.FINISHED_EVENT_TYPE);\n     tEvent.setTimestamp(timeStamp);\n     tEvent.setInfo(eventInfo);\n \n     entity.addEvent(tEvent);\n-    putEntity(entity, containerId.getApplicationAttemptId().getApplicationId());\n+\n+    dispatcher.getEventHandler().handle(new TimelinePublishEvent(entity,\n+        containerId.getApplicationAttemptId().getApplicationId()));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void publishContainerFinishedEvent(ContainerStatus containerStatus,\n      long timeStamp) {\n    ContainerId containerId \u003d containerStatus.getContainerId();\n    TimelineEntity entity \u003d createContainerEntity(containerId);\n\n    Map\u003cString, Object\u003e eventInfo \u003d new HashMap\u003cString, Object\u003e();\n    eventInfo.put(ContainerMetricsConstants.DIAGNOSTICS_INFO_EVENT_INFO,\n        containerStatus.getDiagnostics());\n    eventInfo.put(ContainerMetricsConstants.EXIT_STATUS_EVENT_INFO,\n        containerStatus.getExitStatus());\n    eventInfo.put(ContainerMetricsConstants.STATE_EVENT_INFO, containerStatus\n        .getState().toString());\n\n    TimelineEvent tEvent \u003d new TimelineEvent();\n    tEvent.setId(ContainerMetricsConstants.FINISHED_EVENT_TYPE);\n    tEvent.setTimestamp(timeStamp);\n    tEvent.setInfo(eventInfo);\n\n    entity.addEvent(tEvent);\n\n    dispatcher.getEventHandler().handle(new TimelinePublishEvent(entity,\n        containerId.getApplicationAttemptId().getApplicationId()));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/timelineservice/NMTimelinePublisher.java",
      "extendedDetails": {}
    },
    "477a30f536277bf95d7181bf1b2fdda52d83bf51": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3045. Implement NM writing container lifecycle events to Timeline Service v2. Contributed by Naganarasimha G R.\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "477a30f536277bf95d7181bf1b2fdda52d83bf51",
      "commitAuthor": "Junping Du",
      "diff": "@@ -0,0 +1,21 @@\n+  private void publishContainerFinishedEvent(ContainerStatus containerStatus,\n+      long timeStamp) {\n+    ContainerId containerId \u003d containerStatus.getContainerId();\n+    TimelineEntity entity \u003d createContainerEntity(containerId);\n+\n+    Map\u003cString, Object\u003e eventInfo \u003d new HashMap\u003cString, Object\u003e();\n+    eventInfo.put(ContainerMetricsConstants.DIAGNOSTICS_INFO_EVENT_INFO,\n+        containerStatus.getDiagnostics());\n+    eventInfo.put(ContainerMetricsConstants.EXIT_STATUS_EVENT_INFO,\n+        containerStatus.getExitStatus());\n+    eventInfo.put(ContainerMetricsConstants.STATE_EVENT_INFO, containerStatus\n+        .getState().toString());\n+\n+    TimelineEvent tEvent \u003d new TimelineEvent();\n+    tEvent.setId(ContainerMetricsConstants.FINISHED_EVENT_TYPE);\n+    tEvent.setTimestamp(timeStamp);\n+    tEvent.setInfo(eventInfo);\n+\n+    entity.addEvent(tEvent);\n+    putEntity(entity, containerId.getApplicationAttemptId().getApplicationId());\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void publishContainerFinishedEvent(ContainerStatus containerStatus,\n      long timeStamp) {\n    ContainerId containerId \u003d containerStatus.getContainerId();\n    TimelineEntity entity \u003d createContainerEntity(containerId);\n\n    Map\u003cString, Object\u003e eventInfo \u003d new HashMap\u003cString, Object\u003e();\n    eventInfo.put(ContainerMetricsConstants.DIAGNOSTICS_INFO_EVENT_INFO,\n        containerStatus.getDiagnostics());\n    eventInfo.put(ContainerMetricsConstants.EXIT_STATUS_EVENT_INFO,\n        containerStatus.getExitStatus());\n    eventInfo.put(ContainerMetricsConstants.STATE_EVENT_INFO, containerStatus\n        .getState().toString());\n\n    TimelineEvent tEvent \u003d new TimelineEvent();\n    tEvent.setId(ContainerMetricsConstants.FINISHED_EVENT_TYPE);\n    tEvent.setTimestamp(timeStamp);\n    tEvent.setInfo(eventInfo);\n\n    entity.addEvent(tEvent);\n    putEntity(entity, containerId.getApplicationAttemptId().getApplicationId());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/timelineservice/NMTimelinePublisher.java"
    }
  }
}