{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DataJoinReducerBase.java",
  "functionName": "regroup",
  "functionId": "regroup___key-Object__arg1-Iterator__reporter-Reporter",
  "sourceFilePath": "hadoop-tools/hadoop-datajoin/src/main/java/org/apache/hadoop/contrib/utils/join/DataJoinReducerBase.java",
  "functionStartLine": 92,
  "functionEndLine": 121,
  "numCommitsSeen": 4,
  "timeTaken": 4275,
  "changeHistory": [
    "f35294eb95b67e62cd323703595c7f18e4c9281f",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "f35294eb95b67e62cd323703595c7f18e4c9281f": "Yfilerename",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f35294eb95b67e62cd323703595c7f18e4c9281f": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-4238. mavenize data_join. (tgraves)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1338835 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "15/05/12 12:09 PM",
      "commitName": "f35294eb95b67e62cd323703595c7f18e4c9281f",
      "commitAuthor": "Thomas Graves",
      "commitDateOld": "15/05/12 12:03 PM",
      "commitNameOld": "7428aeca8666aeaf5f6682efbdb5349f44d1753e",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private SortedMap\u003cObject, ResetableIterator\u003e regroup(Object key,\n                                                       Iterator arg1, Reporter reporter) throws IOException {\n    this.numOfValues \u003d 0;\n    SortedMap\u003cObject, ResetableIterator\u003e retv \u003d new TreeMap\u003cObject, ResetableIterator\u003e();\n    TaggedMapOutput aRecord \u003d null;\n    while (arg1.hasNext()) {\n      this.numOfValues +\u003d 1;\n      if (this.numOfValues % 100 \u003d\u003d 0) {\n        reporter.setStatus(\"key: \" + key.toString() + \" numOfValues: \"\n                           + this.numOfValues);\n      }\n      if (this.numOfValues \u003e this.maxNumOfValuesPerGroup) {\n        continue;\n      }\n      aRecord \u003d ((TaggedMapOutput) arg1.next()).clone(job);\n      Text tag \u003d aRecord.getTag();\n      ResetableIterator data \u003d retv.get(tag);\n      if (data \u003d\u003d null) {\n        data \u003d createResetableIterator();\n        retv.put(tag, data);\n      }\n      data.add(aRecord);\n    }\n    if (this.numOfValues \u003e this.largestNumOfValues) {\n      this.largestNumOfValues \u003d numOfValues;\n      LOG.info(\"key: \" + key.toString() + \" this.largestNumOfValues: \"\n               + this.largestNumOfValues);\n    }\n    return retv;\n  }",
      "path": "hadoop-tools/hadoop-datajoin/src/main/java/org/apache/hadoop/contrib/utils/join/DataJoinReducerBase.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/src/contrib/data_join/src/java/org/apache/hadoop/contrib/utils/join/DataJoinReducerBase.java",
        "newPath": "hadoop-tools/hadoop-datajoin/src/main/java/org/apache/hadoop/contrib/utils/join/DataJoinReducerBase.java"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private SortedMap\u003cObject, ResetableIterator\u003e regroup(Object key,\n                                                       Iterator arg1, Reporter reporter) throws IOException {\n    this.numOfValues \u003d 0;\n    SortedMap\u003cObject, ResetableIterator\u003e retv \u003d new TreeMap\u003cObject, ResetableIterator\u003e();\n    TaggedMapOutput aRecord \u003d null;\n    while (arg1.hasNext()) {\n      this.numOfValues +\u003d 1;\n      if (this.numOfValues % 100 \u003d\u003d 0) {\n        reporter.setStatus(\"key: \" + key.toString() + \" numOfValues: \"\n                           + this.numOfValues);\n      }\n      if (this.numOfValues \u003e this.maxNumOfValuesPerGroup) {\n        continue;\n      }\n      aRecord \u003d ((TaggedMapOutput) arg1.next()).clone(job);\n      Text tag \u003d aRecord.getTag();\n      ResetableIterator data \u003d retv.get(tag);\n      if (data \u003d\u003d null) {\n        data \u003d createResetableIterator();\n        retv.put(tag, data);\n      }\n      data.add(aRecord);\n    }\n    if (this.numOfValues \u003e this.largestNumOfValues) {\n      this.largestNumOfValues \u003d numOfValues;\n      LOG.info(\"key: \" + key.toString() + \" this.largestNumOfValues: \"\n               + this.largestNumOfValues);\n    }\n    return retv;\n  }",
      "path": "hadoop-mapreduce-project/src/contrib/data_join/src/java/org/apache/hadoop/contrib/utils/join/DataJoinReducerBase.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/src/contrib/data_join/src/java/org/apache/hadoop/contrib/utils/join/DataJoinReducerBase.java",
        "newPath": "hadoop-mapreduce-project/src/contrib/data_join/src/java/org/apache/hadoop/contrib/utils/join/DataJoinReducerBase.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private SortedMap\u003cObject, ResetableIterator\u003e regroup(Object key,\n                                                       Iterator arg1, Reporter reporter) throws IOException {\n    this.numOfValues \u003d 0;\n    SortedMap\u003cObject, ResetableIterator\u003e retv \u003d new TreeMap\u003cObject, ResetableIterator\u003e();\n    TaggedMapOutput aRecord \u003d null;\n    while (arg1.hasNext()) {\n      this.numOfValues +\u003d 1;\n      if (this.numOfValues % 100 \u003d\u003d 0) {\n        reporter.setStatus(\"key: \" + key.toString() + \" numOfValues: \"\n                           + this.numOfValues);\n      }\n      if (this.numOfValues \u003e this.maxNumOfValuesPerGroup) {\n        continue;\n      }\n      aRecord \u003d ((TaggedMapOutput) arg1.next()).clone(job);\n      Text tag \u003d aRecord.getTag();\n      ResetableIterator data \u003d retv.get(tag);\n      if (data \u003d\u003d null) {\n        data \u003d createResetableIterator();\n        retv.put(tag, data);\n      }\n      data.add(aRecord);\n    }\n    if (this.numOfValues \u003e this.largestNumOfValues) {\n      this.largestNumOfValues \u003d numOfValues;\n      LOG.info(\"key: \" + key.toString() + \" this.largestNumOfValues: \"\n               + this.largestNumOfValues);\n    }\n    return retv;\n  }",
      "path": "hadoop-mapreduce/src/contrib/data_join/src/java/org/apache/hadoop/contrib/utils/join/DataJoinReducerBase.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/contrib/data_join/src/java/org/apache/hadoop/contrib/utils/join/DataJoinReducerBase.java",
        "newPath": "hadoop-mapreduce/src/contrib/data_join/src/java/org/apache/hadoop/contrib/utils/join/DataJoinReducerBase.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,30 @@\n+  private SortedMap\u003cObject, ResetableIterator\u003e regroup(Object key,\n+                                                       Iterator arg1, Reporter reporter) throws IOException {\n+    this.numOfValues \u003d 0;\n+    SortedMap\u003cObject, ResetableIterator\u003e retv \u003d new TreeMap\u003cObject, ResetableIterator\u003e();\n+    TaggedMapOutput aRecord \u003d null;\n+    while (arg1.hasNext()) {\n+      this.numOfValues +\u003d 1;\n+      if (this.numOfValues % 100 \u003d\u003d 0) {\n+        reporter.setStatus(\"key: \" + key.toString() + \" numOfValues: \"\n+                           + this.numOfValues);\n+      }\n+      if (this.numOfValues \u003e this.maxNumOfValuesPerGroup) {\n+        continue;\n+      }\n+      aRecord \u003d ((TaggedMapOutput) arg1.next()).clone(job);\n+      Text tag \u003d aRecord.getTag();\n+      ResetableIterator data \u003d retv.get(tag);\n+      if (data \u003d\u003d null) {\n+        data \u003d createResetableIterator();\n+        retv.put(tag, data);\n+      }\n+      data.add(aRecord);\n+    }\n+    if (this.numOfValues \u003e this.largestNumOfValues) {\n+      this.largestNumOfValues \u003d numOfValues;\n+      LOG.info(\"key: \" + key.toString() + \" this.largestNumOfValues: \"\n+               + this.largestNumOfValues);\n+    }\n+    return retv;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private SortedMap\u003cObject, ResetableIterator\u003e regroup(Object key,\n                                                       Iterator arg1, Reporter reporter) throws IOException {\n    this.numOfValues \u003d 0;\n    SortedMap\u003cObject, ResetableIterator\u003e retv \u003d new TreeMap\u003cObject, ResetableIterator\u003e();\n    TaggedMapOutput aRecord \u003d null;\n    while (arg1.hasNext()) {\n      this.numOfValues +\u003d 1;\n      if (this.numOfValues % 100 \u003d\u003d 0) {\n        reporter.setStatus(\"key: \" + key.toString() + \" numOfValues: \"\n                           + this.numOfValues);\n      }\n      if (this.numOfValues \u003e this.maxNumOfValuesPerGroup) {\n        continue;\n      }\n      aRecord \u003d ((TaggedMapOutput) arg1.next()).clone(job);\n      Text tag \u003d aRecord.getTag();\n      ResetableIterator data \u003d retv.get(tag);\n      if (data \u003d\u003d null) {\n        data \u003d createResetableIterator();\n        retv.put(tag, data);\n      }\n      data.add(aRecord);\n    }\n    if (this.numOfValues \u003e this.largestNumOfValues) {\n      this.largestNumOfValues \u003d numOfValues;\n      LOG.info(\"key: \" + key.toString() + \" this.largestNumOfValues: \"\n               + this.largestNumOfValues);\n    }\n    return retv;\n  }",
      "path": "mapreduce/src/contrib/data_join/src/java/org/apache/hadoop/contrib/utils/join/DataJoinReducerBase.java"
    }
  }
}