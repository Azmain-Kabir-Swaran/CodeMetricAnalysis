{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LinuxContainerExecutor.java",
  "functionName": "getResourcesHandler",
  "functionId": "getResourcesHandler___conf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/LinuxContainerExecutor.java",
  "functionStartLine": 221,
  "functionEndLine": 236,
  "numCommitsSeen": 84,
  "timeTaken": 1720,
  "changeHistory": [
    "2085e60a9655b59aa2ba8917acdc511ab71ff6e4"
  ],
  "changeHistoryShort": {
    "2085e60a9655b59aa2ba8917acdc511ab71ff6e4": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2085e60a9655b59aa2ba8917acdc511ab71ff6e4": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3542. Refactored existing CPU cgroups support to use the newer and integrated ResourceHandler mechanism, and also deprecated the old LCEResourceHandler inteface hierarchy. Contributed by Varun Vasudev.\n",
      "commitDate": "25/01/16 4:19 PM",
      "commitName": "2085e60a9655b59aa2ba8917acdc511ab71ff6e4",
      "commitAuthor": "Vinod Kumar Vavilapalli (I am also known as @tshooter.)",
      "diff": "@@ -0,0 +1,16 @@\n+  private LCEResourcesHandler getResourcesHandler(Configuration conf) {\n+    LCEResourcesHandler handler \u003d ReflectionUtils.newInstance(\n+        conf.getClass(YarnConfiguration.NM_LINUX_CONTAINER_RESOURCES_HANDLER,\n+            DefaultLCEResourcesHandler.class, LCEResourcesHandler.class), conf);\n+\n+    // Stop using CgroupsLCEResourcesHandler\n+    // use the resource handler chain instead\n+    // ResourceHandlerModule will create the cgroup cpu module if\n+    // CgroupsLCEResourcesHandler is set\n+    if (handler instanceof CgroupsLCEResourcesHandler) {\n+      handler \u003d\n+          ReflectionUtils.newInstance(DefaultLCEResourcesHandler.class, conf);\n+    }\n+    handler.setConf(conf);\n+    return handler;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private LCEResourcesHandler getResourcesHandler(Configuration conf) {\n    LCEResourcesHandler handler \u003d ReflectionUtils.newInstance(\n        conf.getClass(YarnConfiguration.NM_LINUX_CONTAINER_RESOURCES_HANDLER,\n            DefaultLCEResourcesHandler.class, LCEResourcesHandler.class), conf);\n\n    // Stop using CgroupsLCEResourcesHandler\n    // use the resource handler chain instead\n    // ResourceHandlerModule will create the cgroup cpu module if\n    // CgroupsLCEResourcesHandler is set\n    if (handler instanceof CgroupsLCEResourcesHandler) {\n      handler \u003d\n          ReflectionUtils.newInstance(DefaultLCEResourcesHandler.class, conf);\n    }\n    handler.setConf(conf);\n    return handler;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/LinuxContainerExecutor.java"
    }
  }
}