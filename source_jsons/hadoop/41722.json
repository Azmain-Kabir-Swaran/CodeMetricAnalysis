{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AbstractYarnScheduler.java",
  "functionName": "clearPendingContainerCache",
  "functionId": "clearPendingContainerCache",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AbstractYarnScheduler.java",
  "functionStartLine": 675,
  "functionEndLine": 690,
  "numCommitsSeen": 115,
  "timeTaken": 3202,
  "changeHistory": [
    "31f8da22d0b8d2dcce5fbc8e45d832f40acf056f",
    "ed54f5f1ff7862f8216f77d5ea8f9ccea674ccd1",
    "80a68d60560e505b5f8e01969dc3c168a1e5a7f3"
  ],
  "changeHistoryShort": {
    "31f8da22d0b8d2dcce5fbc8e45d832f40acf056f": "Ybodychange",
    "ed54f5f1ff7862f8216f77d5ea8f9ccea674ccd1": "Ybodychange",
    "80a68d60560e505b5f8e01969dc3c168a1e5a7f3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "31f8da22d0b8d2dcce5fbc8e45d832f40acf056f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3139. Improve locks in AbstractYarnScheduler/CapacityScheduler/FairScheduler. Contributed by Wangda Tan\n",
      "commitDate": "04/10/16 5:23 PM",
      "commitName": "31f8da22d0b8d2dcce5fbc8e45d832f40acf056f",
      "commitAuthor": "Jian He",
      "commitDateOld": "30/08/16 3:52 PM",
      "commitNameOld": "d6d9cff21b7b6141ed88359652cf22e8973c0661",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 35.06,
      "commitsBetweenForRepo": 195,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,16 @@\n   public void clearPendingContainerCache() {\n     for (SchedulerApplication\u003cT\u003e app : applications.values()) {\n       T attempt \u003d app.getCurrentAppAttempt();\n       if (attempt !\u003d null) {\n-        synchronized (attempt) {\n-          for (ContainerId containerId : attempt.getPendingRelease()) {\n-            RMAuditLogger.logFailure(app.getUser(),\n-                AuditConstants.RELEASE_CONTAINER,\n-                \"Unauthorized access or invalid container\", \"Scheduler\",\n-                \"Trying to release container not owned by app \"\n-                    + \"or with invalid id.\", attempt.getApplicationId(),\n-                containerId, null);\n-          }\n-          attempt.getPendingRelease().clear();\n+        for (ContainerId containerId : attempt.getPendingRelease()) {\n+          RMAuditLogger.logFailure(app.getUser(),\n+              AuditConstants.RELEASE_CONTAINER,\n+              \"Unauthorized access or invalid container\", \"Scheduler\",\n+              \"Trying to release container not owned by app \"\n+                  + \"or with invalid id.\", attempt.getApplicationId(),\n+              containerId, null);\n         }\n+        attempt.getPendingRelease().clear();\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void clearPendingContainerCache() {\n    for (SchedulerApplication\u003cT\u003e app : applications.values()) {\n      T attempt \u003d app.getCurrentAppAttempt();\n      if (attempt !\u003d null) {\n        for (ContainerId containerId : attempt.getPendingRelease()) {\n          RMAuditLogger.logFailure(app.getUser(),\n              AuditConstants.RELEASE_CONTAINER,\n              \"Unauthorized access or invalid container\", \"Scheduler\",\n              \"Trying to release container not owned by app \"\n                  + \"or with invalid id.\", attempt.getApplicationId(),\n              containerId, null);\n        }\n        attempt.getPendingRelease().clear();\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AbstractYarnScheduler.java",
      "extendedDetails": {}
    },
    "ed54f5f1ff7862f8216f77d5ea8f9ccea674ccd1": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5003. Add container resource to RM audit log. Contributed by Nathan Roberts\n",
      "commitDate": "03/05/16 1:03 PM",
      "commitName": "ed54f5f1ff7862f8216f77d5ea8f9ccea674ccd1",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "14/03/16 2:19 PM",
      "commitNameOld": "20d389ce61eaacb5ddfb329015f50e96ad894f8d",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 49.95,
      "commitsBetweenForRepo": 297,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   public void clearPendingContainerCache() {\n     for (SchedulerApplication\u003cT\u003e app : applications.values()) {\n       T attempt \u003d app.getCurrentAppAttempt();\n       if (attempt !\u003d null) {\n         synchronized (attempt) {\n           for (ContainerId containerId : attempt.getPendingRelease()) {\n             RMAuditLogger.logFailure(app.getUser(),\n                 AuditConstants.RELEASE_CONTAINER,\n                 \"Unauthorized access or invalid container\", \"Scheduler\",\n                 \"Trying to release container not owned by app \"\n                     + \"or with invalid id.\", attempt.getApplicationId(),\n-                containerId);\n+                containerId, null);\n           }\n           attempt.getPendingRelease().clear();\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void clearPendingContainerCache() {\n    for (SchedulerApplication\u003cT\u003e app : applications.values()) {\n      T attempt \u003d app.getCurrentAppAttempt();\n      if (attempt !\u003d null) {\n        synchronized (attempt) {\n          for (ContainerId containerId : attempt.getPendingRelease()) {\n            RMAuditLogger.logFailure(app.getUser(),\n                AuditConstants.RELEASE_CONTAINER,\n                \"Unauthorized access or invalid container\", \"Scheduler\",\n                \"Trying to release container not owned by app \"\n                    + \"or with invalid id.\", attempt.getApplicationId(),\n                containerId, null);\n          }\n          attempt.getPendingRelease().clear();\n        }\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AbstractYarnScheduler.java",
      "extendedDetails": {}
    },
    "80a68d60560e505b5f8e01969dc3c168a1e5a7f3": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3830. AbstractYarnScheduler.createReleaseCache may try to clean a\nnull attempt. Contributed by nijel.\n",
      "commitDate": "01/07/15 6:33 AM",
      "commitName": "80a68d60560e505b5f8e01969dc3c168a1e5a7f3",
      "commitAuthor": "Devaraj K",
      "diff": "@@ -0,0 +1,18 @@\n+  public void clearPendingContainerCache() {\n+    for (SchedulerApplication\u003cT\u003e app : applications.values()) {\n+      T attempt \u003d app.getCurrentAppAttempt();\n+      if (attempt !\u003d null) {\n+        synchronized (attempt) {\n+          for (ContainerId containerId : attempt.getPendingRelease()) {\n+            RMAuditLogger.logFailure(app.getUser(),\n+                AuditConstants.RELEASE_CONTAINER,\n+                \"Unauthorized access or invalid container\", \"Scheduler\",\n+                \"Trying to release container not owned by app \"\n+                    + \"or with invalid id.\", attempt.getApplicationId(),\n+                containerId);\n+          }\n+          attempt.getPendingRelease().clear();\n+        }\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void clearPendingContainerCache() {\n    for (SchedulerApplication\u003cT\u003e app : applications.values()) {\n      T attempt \u003d app.getCurrentAppAttempt();\n      if (attempt !\u003d null) {\n        synchronized (attempt) {\n          for (ContainerId containerId : attempt.getPendingRelease()) {\n            RMAuditLogger.logFailure(app.getUser(),\n                AuditConstants.RELEASE_CONTAINER,\n                \"Unauthorized access or invalid container\", \"Scheduler\",\n                \"Trying to release container not owned by app \"\n                    + \"or with invalid id.\", attempt.getApplicationId(),\n                containerId);\n          }\n          attempt.getPendingRelease().clear();\n        }\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AbstractYarnScheduler.java"
    }
  }
}