{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ResourceRequestSet.java",
  "functionName": "setNumContainers",
  "functionId": "setNumContainers___newValue-int",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/scheduler/ResourceRequestSet.java",
  "functionStartLine": 154,
  "functionEndLine": 183,
  "numCommitsSeen": 2,
  "timeTaken": 1222,
  "changeHistory": [
    "99948565cb5d5706241d7a8fc591e1617c499e03",
    "3159bffce23abf35754da2d7d51de7d8c2631ae3"
  ],
  "changeHistoryShort": {
    "99948565cb5d5706241d7a8fc591e1617c499e03": "Ybodychange",
    "3159bffce23abf35754da2d7d51de7d8c2631ae3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "99948565cb5d5706241d7a8fc591e1617c499e03": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8412. Move ResourceRequest.clone logic everywhere into a proper API. Contributed by Botong Huang.\n",
      "commitDate": "21/06/18 6:24 PM",
      "commitName": "99948565cb5d5706241d7a8fc591e1617c499e03",
      "commitAuthor": "Inigo Goiri",
      "commitDateOld": "17/05/18 8:00 PM",
      "commitNameOld": "3159bffce23abf35754da2d7d51de7d8c2631ae3",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 34.93,
      "commitsBetweenForRepo": 251,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,30 @@\n   public void setNumContainers(int newValue) throws YarnException {\n     if (this.numContainers \u003d\u003d 0) {\n       throw new YarnException(\"should not set numContainers to \" + newValue\n           + \" for a cancel requestSet: \" + toString());\n     }\n \n     // Clone the ResourceRequest object whenever we need to change it\n     int oldValue \u003d this.numContainers;\n     this.numContainers \u003d newValue;\n     if (this.key.getExeType().equals(ExecutionType.OPPORTUNISTIC)) {\n       // The assumption we made about O asks is that all RR in a requestSet has\n       // the same numContainers value\n       Map\u003cString, ResourceRequest\u003e newAsks \u003d new HashMap\u003c\u003e();\n       for (ResourceRequest rr : this.asks.values()) {\n-        ResourceRequest clone \u003d cloneResourceRequest(rr);\n+        ResourceRequest clone \u003d ResourceRequest.clone(rr);\n         clone.setNumContainers(newValue);\n         newAsks.put(clone.getResourceName(), clone);\n       }\n       this.asks \u003d newAsks;\n     } else {\n       ResourceRequest rr \u003d this.asks.get(ResourceRequest.ANY);\n       if (rr \u003d\u003d null) {\n         throw new YarnException(\n             \"No ANY RR found in requestSet with numContainers\u003d\" + oldValue);\n       }\n-      ResourceRequest clone \u003d cloneResourceRequest(rr);\n+      ResourceRequest clone \u003d ResourceRequest.clone(rr);\n       clone.setNumContainers(newValue);\n       this.asks.put(ResourceRequest.ANY, clone);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setNumContainers(int newValue) throws YarnException {\n    if (this.numContainers \u003d\u003d 0) {\n      throw new YarnException(\"should not set numContainers to \" + newValue\n          + \" for a cancel requestSet: \" + toString());\n    }\n\n    // Clone the ResourceRequest object whenever we need to change it\n    int oldValue \u003d this.numContainers;\n    this.numContainers \u003d newValue;\n    if (this.key.getExeType().equals(ExecutionType.OPPORTUNISTIC)) {\n      // The assumption we made about O asks is that all RR in a requestSet has\n      // the same numContainers value\n      Map\u003cString, ResourceRequest\u003e newAsks \u003d new HashMap\u003c\u003e();\n      for (ResourceRequest rr : this.asks.values()) {\n        ResourceRequest clone \u003d ResourceRequest.clone(rr);\n        clone.setNumContainers(newValue);\n        newAsks.put(clone.getResourceName(), clone);\n      }\n      this.asks \u003d newAsks;\n    } else {\n      ResourceRequest rr \u003d this.asks.get(ResourceRequest.ANY);\n      if (rr \u003d\u003d null) {\n        throw new YarnException(\n            \"No ANY RR found in requestSet with numContainers\u003d\" + oldValue);\n      }\n      ResourceRequest clone \u003d ResourceRequest.clone(rr);\n      clone.setNumContainers(newValue);\n      this.asks.put(ResourceRequest.ANY, clone);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/scheduler/ResourceRequestSet.java",
      "extendedDetails": {}
    },
    "3159bffce23abf35754da2d7d51de7d8c2631ae3": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7900. [AMRMProxy] AMRMClientRelayer for stateful FederationInterceptor. (Botong Huang via asuresh)\n",
      "commitDate": "17/05/18 8:00 PM",
      "commitName": "3159bffce23abf35754da2d7d51de7d8c2631ae3",
      "commitAuthor": "Arun Suresh",
      "diff": "@@ -0,0 +1,30 @@\n+  public void setNumContainers(int newValue) throws YarnException {\n+    if (this.numContainers \u003d\u003d 0) {\n+      throw new YarnException(\"should not set numContainers to \" + newValue\n+          + \" for a cancel requestSet: \" + toString());\n+    }\n+\n+    // Clone the ResourceRequest object whenever we need to change it\n+    int oldValue \u003d this.numContainers;\n+    this.numContainers \u003d newValue;\n+    if (this.key.getExeType().equals(ExecutionType.OPPORTUNISTIC)) {\n+      // The assumption we made about O asks is that all RR in a requestSet has\n+      // the same numContainers value\n+      Map\u003cString, ResourceRequest\u003e newAsks \u003d new HashMap\u003c\u003e();\n+      for (ResourceRequest rr : this.asks.values()) {\n+        ResourceRequest clone \u003d cloneResourceRequest(rr);\n+        clone.setNumContainers(newValue);\n+        newAsks.put(clone.getResourceName(), clone);\n+      }\n+      this.asks \u003d newAsks;\n+    } else {\n+      ResourceRequest rr \u003d this.asks.get(ResourceRequest.ANY);\n+      if (rr \u003d\u003d null) {\n+        throw new YarnException(\n+            \"No ANY RR found in requestSet with numContainers\u003d\" + oldValue);\n+      }\n+      ResourceRequest clone \u003d cloneResourceRequest(rr);\n+      clone.setNumContainers(newValue);\n+      this.asks.put(ResourceRequest.ANY, clone);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void setNumContainers(int newValue) throws YarnException {\n    if (this.numContainers \u003d\u003d 0) {\n      throw new YarnException(\"should not set numContainers to \" + newValue\n          + \" for a cancel requestSet: \" + toString());\n    }\n\n    // Clone the ResourceRequest object whenever we need to change it\n    int oldValue \u003d this.numContainers;\n    this.numContainers \u003d newValue;\n    if (this.key.getExeType().equals(ExecutionType.OPPORTUNISTIC)) {\n      // The assumption we made about O asks is that all RR in a requestSet has\n      // the same numContainers value\n      Map\u003cString, ResourceRequest\u003e newAsks \u003d new HashMap\u003c\u003e();\n      for (ResourceRequest rr : this.asks.values()) {\n        ResourceRequest clone \u003d cloneResourceRequest(rr);\n        clone.setNumContainers(newValue);\n        newAsks.put(clone.getResourceName(), clone);\n      }\n      this.asks \u003d newAsks;\n    } else {\n      ResourceRequest rr \u003d this.asks.get(ResourceRequest.ANY);\n      if (rr \u003d\u003d null) {\n        throw new YarnException(\n            \"No ANY RR found in requestSet with numContainers\u003d\" + oldValue);\n      }\n      ResourceRequest clone \u003d cloneResourceRequest(rr);\n      clone.setNumContainers(newValue);\n      this.asks.put(ResourceRequest.ANY, clone);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/scheduler/ResourceRequestSet.java"
    }
  }
}