{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CapacityScheduler.java",
  "functionName": "serviceStop",
  "functionId": "serviceStop",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
  "functionStartLine": 430,
  "functionEndLine": 450,
  "numCommitsSeen": 239,
  "timeTaken": 7312,
  "changeHistory": [
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
    "6310c0d17d6422a595f856a55b4f1fb82be43739",
    "d6622daaa3c95a5040d06f91dc0c793bafa70f95",
    "de3b4aac561258ad242a3c5ed1c919428893fd4c",
    "31f8da22d0b8d2dcce5fbc8e45d832f40acf056f",
    "a4ba451802c6c61a0c804809740d46dd76059f25"
  ],
  "changeHistoryShort": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": "Ybodychange",
    "6310c0d17d6422a595f856a55b4f1fb82be43739": "Ybodychange",
    "d6622daaa3c95a5040d06f91dc0c793bafa70f95": "Ybodychange",
    "de3b4aac561258ad242a3c5ed1c919428893fd4c": "Ybodychange",
    "31f8da22d0b8d2dcce5fbc8e45d832f40acf056f": "Ybodychange",
    "a4ba451802c6c61a0c804809740d46dd76059f25": "Yintroduced"
  },
  "changeHistoryDetails": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9341.  Fixed enentrant lock usage in YARN project.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "07/03/19 1:47 PM",
      "commitName": "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "04/03/19 9:10 PM",
      "commitNameOld": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
      "commitAuthorOld": "Prabhu Joseph",
      "daysBetweenCommits": 2.69,
      "commitsBetweenForRepo": 39,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n   public void serviceStop() throws Exception {\n+    writeLock.lock();\n     try {\n-      writeLock.lock();\n       this.activitiesManager.stop();\n       if (scheduleAsynchronously \u0026\u0026 asyncSchedulerThreads !\u003d null) {\n         for (Thread t : asyncSchedulerThreads) {\n           t.interrupt();\n           t.join(THREAD_JOIN_TIMEOUT_MS);\n         }\n         resourceCommitterService.interrupt();\n         resourceCommitterService.join(THREAD_JOIN_TIMEOUT_MS);\n       }\n     } finally {\n       writeLock.unlock();\n     }\n \n     if (isConfigurationMutable()) {\n       ((MutableConfigurationProvider) csConfProvider).close();\n     }\n     super.serviceStop();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void serviceStop() throws Exception {\n    writeLock.lock();\n    try {\n      this.activitiesManager.stop();\n      if (scheduleAsynchronously \u0026\u0026 asyncSchedulerThreads !\u003d null) {\n        for (Thread t : asyncSchedulerThreads) {\n          t.interrupt();\n          t.join(THREAD_JOIN_TIMEOUT_MS);\n        }\n        resourceCommitterService.interrupt();\n        resourceCommitterService.join(THREAD_JOIN_TIMEOUT_MS);\n      }\n    } finally {\n      writeLock.unlock();\n    }\n\n    if (isConfigurationMutable()) {\n      ((MutableConfigurationProvider) csConfProvider).close();\n    }\n    super.serviceStop();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
      "extendedDetails": {}
    },
    "6310c0d17d6422a595f856a55b4f1fb82be43739": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8397. Potential thread leak in ActivitiesManager. Contributed by Rohith Sharma K S.\n",
      "commitDate": "31/07/18 8:03 PM",
      "commitName": "6310c0d17d6422a595f856a55b4f1fb82be43739",
      "commitAuthor": "Sunil G",
      "commitDateOld": "03/07/18 9:59 AM",
      "commitNameOld": "51654a3962bcd0482c0e1dd32765e9533e3f9158",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 28.42,
      "commitsBetweenForRepo": 181,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,21 @@\n   public void serviceStop() throws Exception {\n     try {\n       writeLock.lock();\n+      this.activitiesManager.stop();\n       if (scheduleAsynchronously \u0026\u0026 asyncSchedulerThreads !\u003d null) {\n         for (Thread t : asyncSchedulerThreads) {\n           t.interrupt();\n           t.join(THREAD_JOIN_TIMEOUT_MS);\n         }\n         resourceCommitterService.interrupt();\n         resourceCommitterService.join(THREAD_JOIN_TIMEOUT_MS);\n       }\n     } finally {\n       writeLock.unlock();\n     }\n \n     if (isConfigurationMutable()) {\n       ((MutableConfigurationProvider) csConfProvider).close();\n     }\n     super.serviceStop();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void serviceStop() throws Exception {\n    try {\n      writeLock.lock();\n      this.activitiesManager.stop();\n      if (scheduleAsynchronously \u0026\u0026 asyncSchedulerThreads !\u003d null) {\n        for (Thread t : asyncSchedulerThreads) {\n          t.interrupt();\n          t.join(THREAD_JOIN_TIMEOUT_MS);\n        }\n        resourceCommitterService.interrupt();\n        resourceCommitterService.join(THREAD_JOIN_TIMEOUT_MS);\n      }\n    } finally {\n      writeLock.unlock();\n    }\n\n    if (isConfigurationMutable()) {\n      ((MutableConfigurationProvider) csConfProvider).close();\n    }\n    super.serviceStop();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
      "extendedDetails": {}
    },
    "d6622daaa3c95a5040d06f91dc0c793bafa70f95": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7046. Add closing logic to configuration store\n",
      "commitDate": "09/10/17 11:11 AM",
      "commitName": "d6622daaa3c95a5040d06f91dc0c793bafa70f95",
      "commitAuthor": "Jonathan Hung",
      "commitDateOld": "09/10/17 11:11 AM",
      "commitNameOld": "ff39c0de206a4fce1f0e8a416357a7a8261f8634",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,20 @@\n   public void serviceStop() throws Exception {\n     try {\n       writeLock.lock();\n       if (scheduleAsynchronously \u0026\u0026 asyncSchedulerThreads !\u003d null) {\n         for (Thread t : asyncSchedulerThreads) {\n           t.interrupt();\n           t.join(THREAD_JOIN_TIMEOUT_MS);\n         }\n         resourceCommitterService.interrupt();\n         resourceCommitterService.join(THREAD_JOIN_TIMEOUT_MS);\n       }\n     } finally {\n       writeLock.unlock();\n     }\n \n+    if (isConfigurationMutable()) {\n+      ((MutableConfigurationProvider) csConfProvider).close();\n+    }\n     super.serviceStop();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void serviceStop() throws Exception {\n    try {\n      writeLock.lock();\n      if (scheduleAsynchronously \u0026\u0026 asyncSchedulerThreads !\u003d null) {\n        for (Thread t : asyncSchedulerThreads) {\n          t.interrupt();\n          t.join(THREAD_JOIN_TIMEOUT_MS);\n        }\n        resourceCommitterService.interrupt();\n        resourceCommitterService.join(THREAD_JOIN_TIMEOUT_MS);\n      }\n    } finally {\n      writeLock.unlock();\n    }\n\n    if (isConfigurationMutable()) {\n      ((MutableConfigurationProvider) csConfProvider).close();\n    }\n    super.serviceStop();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
      "extendedDetails": {}
    },
    "de3b4aac561258ad242a3c5ed1c919428893fd4c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5716. Add global scheduler interface definition and update CapacityScheduler to use it. Contributed by Wangda Tan\n",
      "commitDate": "07/11/16 10:14 AM",
      "commitName": "de3b4aac561258ad242a3c5ed1c919428893fd4c",
      "commitAuthor": "Jian He",
      "commitDateOld": "01/11/16 3:02 AM",
      "commitNameOld": "7d2d8d25ba0cb10a3c6192d4123f27ede5ef2ba6",
      "commitAuthorOld": "Varun Saxena",
      "daysBetweenCommits": 6.34,
      "commitsBetweenForRepo": 78,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,17 @@\n   public void serviceStop() throws Exception {\n     try {\n       writeLock.lock();\n-      if (scheduleAsynchronously \u0026\u0026 asyncSchedulerThread !\u003d null) {\n-        asyncSchedulerThread.interrupt();\n-        asyncSchedulerThread.join(THREAD_JOIN_TIMEOUT_MS);\n+      if (scheduleAsynchronously \u0026\u0026 asyncSchedulerThreads !\u003d null) {\n+        for (Thread t : asyncSchedulerThreads) {\n+          t.interrupt();\n+          t.join(THREAD_JOIN_TIMEOUT_MS);\n+        }\n+        resourceCommitterService.interrupt();\n+        resourceCommitterService.join(THREAD_JOIN_TIMEOUT_MS);\n       }\n     } finally {\n       writeLock.unlock();\n     }\n \n     super.serviceStop();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void serviceStop() throws Exception {\n    try {\n      writeLock.lock();\n      if (scheduleAsynchronously \u0026\u0026 asyncSchedulerThreads !\u003d null) {\n        for (Thread t : asyncSchedulerThreads) {\n          t.interrupt();\n          t.join(THREAD_JOIN_TIMEOUT_MS);\n        }\n        resourceCommitterService.interrupt();\n        resourceCommitterService.join(THREAD_JOIN_TIMEOUT_MS);\n      }\n    } finally {\n      writeLock.unlock();\n    }\n\n    super.serviceStop();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
      "extendedDetails": {}
    },
    "31f8da22d0b8d2dcce5fbc8e45d832f40acf056f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3139. Improve locks in AbstractYarnScheduler/CapacityScheduler/FairScheduler. Contributed by Wangda Tan\n",
      "commitDate": "04/10/16 5:23 PM",
      "commitName": "31f8da22d0b8d2dcce5fbc8e45d832f40acf056f",
      "commitAuthor": "Jian He",
      "commitDateOld": "30/08/16 3:52 PM",
      "commitNameOld": "d6d9cff21b7b6141ed88359652cf22e8973c0661",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 35.06,
      "commitsBetweenForRepo": 195,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,13 @@\n   public void serviceStop() throws Exception {\n-    synchronized (this) {\n+    try {\n+      writeLock.lock();\n       if (scheduleAsynchronously \u0026\u0026 asyncSchedulerThread !\u003d null) {\n         asyncSchedulerThread.interrupt();\n         asyncSchedulerThread.join(THREAD_JOIN_TIMEOUT_MS);\n       }\n+    } finally {\n+      writeLock.unlock();\n     }\n+\n     super.serviceStop();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void serviceStop() throws Exception {\n    try {\n      writeLock.lock();\n      if (scheduleAsynchronously \u0026\u0026 asyncSchedulerThread !\u003d null) {\n        asyncSchedulerThread.interrupt();\n        asyncSchedulerThread.join(THREAD_JOIN_TIMEOUT_MS);\n      }\n    } finally {\n      writeLock.unlock();\n    }\n\n    super.serviceStop();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
      "extendedDetails": {}
    },
    "a4ba451802c6c61a0c804809740d46dd76059f25": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1474. Make schedulers services. (Tsuyoshi Ozawa via kasha)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1598908 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/05/14 12:33 PM",
      "commitName": "a4ba451802c6c61a0c804809740d46dd76059f25",
      "commitAuthor": "Karthik Kambatla",
      "diff": "@@ -0,0 +1,9 @@\n+  public void serviceStop() throws Exception {\n+    synchronized (this) {\n+      if (scheduleAsynchronously \u0026\u0026 asyncSchedulerThread !\u003d null) {\n+        asyncSchedulerThread.interrupt();\n+        asyncSchedulerThread.join(THREAD_JOIN_TIMEOUT_MS);\n+      }\n+    }\n+    super.serviceStop();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void serviceStop() throws Exception {\n    synchronized (this) {\n      if (scheduleAsynchronously \u0026\u0026 asyncSchedulerThread !\u003d null) {\n        asyncSchedulerThread.interrupt();\n        asyncSchedulerThread.join(THREAD_JOIN_TIMEOUT_MS);\n      }\n    }\n    super.serviceStop();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java"
    }
  }
}