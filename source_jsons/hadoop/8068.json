{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "EditLogFileInputStream.java",
  "functionName": "scanEditLog",
  "functionId": "scanEditLog___file-File__maxTxIdToScan-long__verifyVersion-boolean",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/EditLogFileInputStream.java",
  "functionStartLine": 339,
  "functionEndLine": 359,
  "numCommitsSeen": 66,
  "timeTaken": 2894,
  "changeHistory": [
    "53bad4eb008ec553dcdbe01e7ae975dcecde6590",
    "6ae2a0d048e133b43249c248a75a4d77d9abb80d",
    "9dab514b22f49322738935cfd915c2b4eba50b88"
  ],
  "changeHistoryShort": {
    "53bad4eb008ec553dcdbe01e7ae975dcecde6590": "Ymultichange(Yparameterchange,Ybodychange)",
    "6ae2a0d048e133b43249c248a75a4d77d9abb80d": "Ybodychange",
    "9dab514b22f49322738935cfd915c2b4eba50b88": "Yintroduced"
  },
  "changeHistoryDetails": {
    "53bad4eb008ec553dcdbe01e7ae975dcecde6590": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-8996. Consolidate validateLog and scanLog in FJM#EditLogFile (Zhe Zhang via Colin P. McCabe)\n",
      "commitDate": "14/09/15 3:22 PM",
      "commitName": "53bad4eb008ec553dcdbe01e7ae975dcecde6590",
      "commitAuthor": "Colin Patrick Mccabe",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-8996. Consolidate validateLog and scanLog in FJM#EditLogFile (Zhe Zhang via Colin P. McCabe)\n",
          "commitDate": "14/09/15 3:22 PM",
          "commitName": "53bad4eb008ec553dcdbe01e7ae975dcecde6590",
          "commitAuthor": "Colin Patrick Mccabe",
          "commitDateOld": "03/09/15 11:22 AM",
          "commitNameOld": "53c38cc89ab979ec47557dcfa7affbad20578c0a",
          "commitAuthorOld": "Colin Patrick Mccabe",
          "daysBetweenCommits": 11.17,
          "commitsBetweenForRepo": 55,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,44 +1,21 @@\n-  static FSEditLogLoader.EditLogValidation scanEditLog(File file)\n+  static FSEditLogLoader.EditLogValidation scanEditLog(File file,\n+      long maxTxIdToScan, boolean verifyVersion)\n       throws IOException {\n     EditLogFileInputStream in;\n     try {\n       in \u003d new EditLogFileInputStream(file);\n       // read the header, initialize the inputstream, but do not check the\n       // layoutversion\n-      in.getVersion(false);\n+      in.getVersion(verifyVersion);\n     } catch (LogHeaderCorruptException e) {\n       LOG.warn(\"Log file \" + file + \" has no valid header\", e);\n       return new FSEditLogLoader.EditLogValidation(0,\n           HdfsServerConstants.INVALID_TXID, true);\n     }\n \n-    long lastPos \u003d 0;\n-    long lastTxId \u003d HdfsServerConstants.INVALID_TXID;\n-    long numValid \u003d 0;\n     try {\n-      while (true) {\n-        long txid \u003d HdfsServerConstants.INVALID_TXID;\n-        lastPos \u003d in.getPosition();\n-        try {\n-          if ((txid \u003d in.scanNextOp()) \u003d\u003d HdfsServerConstants.INVALID_TXID) {\n-            break;\n-          }\n-        } catch (Throwable t) {\n-          FSImage.LOG.warn(\"Caught exception after scanning through \"\n-              + numValid + \" ops from \" + in\n-              + \" while determining its valid length. Position was \"\n-              + lastPos, t);\n-          in.resync();\n-          FSImage.LOG.warn(\"After resync, position is \" + in.getPosition());\n-          continue;\n-        }\n-        if (lastTxId \u003d\u003d HdfsServerConstants.INVALID_TXID || txid \u003e lastTxId) {\n-          lastTxId \u003d txid;\n-        }\n-        numValid++;\n-      }\n-      return new EditLogValidation(lastPos, lastTxId, false);\n+      return FSEditLogLoader.scanEditLog(in, maxTxIdToScan);\n     } finally {\n       IOUtils.closeStream(in);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static FSEditLogLoader.EditLogValidation scanEditLog(File file,\n      long maxTxIdToScan, boolean verifyVersion)\n      throws IOException {\n    EditLogFileInputStream in;\n    try {\n      in \u003d new EditLogFileInputStream(file);\n      // read the header, initialize the inputstream, but do not check the\n      // layoutversion\n      in.getVersion(verifyVersion);\n    } catch (LogHeaderCorruptException e) {\n      LOG.warn(\"Log file \" + file + \" has no valid header\", e);\n      return new FSEditLogLoader.EditLogValidation(0,\n          HdfsServerConstants.INVALID_TXID, true);\n    }\n\n    try {\n      return FSEditLogLoader.scanEditLog(in, maxTxIdToScan);\n    } finally {\n      IOUtils.closeStream(in);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/EditLogFileInputStream.java",
          "extendedDetails": {
            "oldValue": "[file-File]",
            "newValue": "[file-File, maxTxIdToScan-long, verifyVersion-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-8996. Consolidate validateLog and scanLog in FJM#EditLogFile (Zhe Zhang via Colin P. McCabe)\n",
          "commitDate": "14/09/15 3:22 PM",
          "commitName": "53bad4eb008ec553dcdbe01e7ae975dcecde6590",
          "commitAuthor": "Colin Patrick Mccabe",
          "commitDateOld": "03/09/15 11:22 AM",
          "commitNameOld": "53c38cc89ab979ec47557dcfa7affbad20578c0a",
          "commitAuthorOld": "Colin Patrick Mccabe",
          "daysBetweenCommits": 11.17,
          "commitsBetweenForRepo": 55,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,44 +1,21 @@\n-  static FSEditLogLoader.EditLogValidation scanEditLog(File file)\n+  static FSEditLogLoader.EditLogValidation scanEditLog(File file,\n+      long maxTxIdToScan, boolean verifyVersion)\n       throws IOException {\n     EditLogFileInputStream in;\n     try {\n       in \u003d new EditLogFileInputStream(file);\n       // read the header, initialize the inputstream, but do not check the\n       // layoutversion\n-      in.getVersion(false);\n+      in.getVersion(verifyVersion);\n     } catch (LogHeaderCorruptException e) {\n       LOG.warn(\"Log file \" + file + \" has no valid header\", e);\n       return new FSEditLogLoader.EditLogValidation(0,\n           HdfsServerConstants.INVALID_TXID, true);\n     }\n \n-    long lastPos \u003d 0;\n-    long lastTxId \u003d HdfsServerConstants.INVALID_TXID;\n-    long numValid \u003d 0;\n     try {\n-      while (true) {\n-        long txid \u003d HdfsServerConstants.INVALID_TXID;\n-        lastPos \u003d in.getPosition();\n-        try {\n-          if ((txid \u003d in.scanNextOp()) \u003d\u003d HdfsServerConstants.INVALID_TXID) {\n-            break;\n-          }\n-        } catch (Throwable t) {\n-          FSImage.LOG.warn(\"Caught exception after scanning through \"\n-              + numValid + \" ops from \" + in\n-              + \" while determining its valid length. Position was \"\n-              + lastPos, t);\n-          in.resync();\n-          FSImage.LOG.warn(\"After resync, position is \" + in.getPosition());\n-          continue;\n-        }\n-        if (lastTxId \u003d\u003d HdfsServerConstants.INVALID_TXID || txid \u003e lastTxId) {\n-          lastTxId \u003d txid;\n-        }\n-        numValid++;\n-      }\n-      return new EditLogValidation(lastPos, lastTxId, false);\n+      return FSEditLogLoader.scanEditLog(in, maxTxIdToScan);\n     } finally {\n       IOUtils.closeStream(in);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static FSEditLogLoader.EditLogValidation scanEditLog(File file,\n      long maxTxIdToScan, boolean verifyVersion)\n      throws IOException {\n    EditLogFileInputStream in;\n    try {\n      in \u003d new EditLogFileInputStream(file);\n      // read the header, initialize the inputstream, but do not check the\n      // layoutversion\n      in.getVersion(verifyVersion);\n    } catch (LogHeaderCorruptException e) {\n      LOG.warn(\"Log file \" + file + \" has no valid header\", e);\n      return new FSEditLogLoader.EditLogValidation(0,\n          HdfsServerConstants.INVALID_TXID, true);\n    }\n\n    try {\n      return FSEditLogLoader.scanEditLog(in, maxTxIdToScan);\n    } finally {\n      IOUtils.closeStream(in);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/EditLogFileInputStream.java",
          "extendedDetails": {}
        }
      ]
    },
    "6ae2a0d048e133b43249c248a75a4d77d9abb80d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8249. Separate HdfsConstants into the client and the server side class. Contributed by Haohui Mai.\n",
      "commitDate": "02/05/15 10:03 AM",
      "commitName": "6ae2a0d048e133b43249c248a75a4d77d9abb80d",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "02/09/14 2:02 PM",
      "commitNameOld": "faa4455be512e070fa420084be8d1be5c72f3b08",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 241.83,
      "commitsBetweenForRepo": 2090,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,44 +1,44 @@\n   static FSEditLogLoader.EditLogValidation scanEditLog(File file)\n       throws IOException {\n     EditLogFileInputStream in;\n     try {\n       in \u003d new EditLogFileInputStream(file);\n       // read the header, initialize the inputstream, but do not check the\n       // layoutversion\n       in.getVersion(false);\n     } catch (LogHeaderCorruptException e) {\n       LOG.warn(\"Log file \" + file + \" has no valid header\", e);\n       return new FSEditLogLoader.EditLogValidation(0,\n-          HdfsConstants.INVALID_TXID, true);\n+          HdfsServerConstants.INVALID_TXID, true);\n     }\n \n     long lastPos \u003d 0;\n-    long lastTxId \u003d HdfsConstants.INVALID_TXID;\n+    long lastTxId \u003d HdfsServerConstants.INVALID_TXID;\n     long numValid \u003d 0;\n     try {\n       while (true) {\n-        long txid \u003d HdfsConstants.INVALID_TXID;\n+        long txid \u003d HdfsServerConstants.INVALID_TXID;\n         lastPos \u003d in.getPosition();\n         try {\n-          if ((txid \u003d in.scanNextOp()) \u003d\u003d HdfsConstants.INVALID_TXID) {\n+          if ((txid \u003d in.scanNextOp()) \u003d\u003d HdfsServerConstants.INVALID_TXID) {\n             break;\n           }\n         } catch (Throwable t) {\n           FSImage.LOG.warn(\"Caught exception after scanning through \"\n               + numValid + \" ops from \" + in\n               + \" while determining its valid length. Position was \"\n               + lastPos, t);\n           in.resync();\n           FSImage.LOG.warn(\"After resync, position is \" + in.getPosition());\n           continue;\n         }\n-        if (lastTxId \u003d\u003d HdfsConstants.INVALID_TXID || txid \u003e lastTxId) {\n+        if (lastTxId \u003d\u003d HdfsServerConstants.INVALID_TXID || txid \u003e lastTxId) {\n           lastTxId \u003d txid;\n         }\n         numValid++;\n       }\n       return new EditLogValidation(lastPos, lastTxId, false);\n     } finally {\n       IOUtils.closeStream(in);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static FSEditLogLoader.EditLogValidation scanEditLog(File file)\n      throws IOException {\n    EditLogFileInputStream in;\n    try {\n      in \u003d new EditLogFileInputStream(file);\n      // read the header, initialize the inputstream, but do not check the\n      // layoutversion\n      in.getVersion(false);\n    } catch (LogHeaderCorruptException e) {\n      LOG.warn(\"Log file \" + file + \" has no valid header\", e);\n      return new FSEditLogLoader.EditLogValidation(0,\n          HdfsServerConstants.INVALID_TXID, true);\n    }\n\n    long lastPos \u003d 0;\n    long lastTxId \u003d HdfsServerConstants.INVALID_TXID;\n    long numValid \u003d 0;\n    try {\n      while (true) {\n        long txid \u003d HdfsServerConstants.INVALID_TXID;\n        lastPos \u003d in.getPosition();\n        try {\n          if ((txid \u003d in.scanNextOp()) \u003d\u003d HdfsServerConstants.INVALID_TXID) {\n            break;\n          }\n        } catch (Throwable t) {\n          FSImage.LOG.warn(\"Caught exception after scanning through \"\n              + numValid + \" ops from \" + in\n              + \" while determining its valid length. Position was \"\n              + lastPos, t);\n          in.resync();\n          FSImage.LOG.warn(\"After resync, position is \" + in.getPosition());\n          continue;\n        }\n        if (lastTxId \u003d\u003d HdfsServerConstants.INVALID_TXID || txid \u003e lastTxId) {\n          lastTxId \u003d txid;\n        }\n        numValid++;\n      }\n      return new EditLogValidation(lastPos, lastTxId, false);\n    } finally {\n      IOUtils.closeStream(in);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/EditLogFileInputStream.java",
      "extendedDetails": {}
    },
    "9dab514b22f49322738935cfd915c2b4eba50b88": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-6038. Allow JournalNode to handle editlog produced by new release with future layoutversion. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1579813 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "20/03/14 4:06 PM",
      "commitName": "9dab514b22f49322738935cfd915c2b4eba50b88",
      "commitAuthor": "Jing Zhao",
      "diff": "@@ -0,0 +1,44 @@\n+  static FSEditLogLoader.EditLogValidation scanEditLog(File file)\n+      throws IOException {\n+    EditLogFileInputStream in;\n+    try {\n+      in \u003d new EditLogFileInputStream(file);\n+      // read the header, initialize the inputstream, but do not check the\n+      // layoutversion\n+      in.getVersion(false);\n+    } catch (LogHeaderCorruptException e) {\n+      LOG.warn(\"Log file \" + file + \" has no valid header\", e);\n+      return new FSEditLogLoader.EditLogValidation(0,\n+          HdfsConstants.INVALID_TXID, true);\n+    }\n+\n+    long lastPos \u003d 0;\n+    long lastTxId \u003d HdfsConstants.INVALID_TXID;\n+    long numValid \u003d 0;\n+    try {\n+      while (true) {\n+        long txid \u003d HdfsConstants.INVALID_TXID;\n+        lastPos \u003d in.getPosition();\n+        try {\n+          if ((txid \u003d in.scanNextOp()) \u003d\u003d HdfsConstants.INVALID_TXID) {\n+            break;\n+          }\n+        } catch (Throwable t) {\n+          FSImage.LOG.warn(\"Caught exception after scanning through \"\n+              + numValid + \" ops from \" + in\n+              + \" while determining its valid length. Position was \"\n+              + lastPos, t);\n+          in.resync();\n+          FSImage.LOG.warn(\"After resync, position is \" + in.getPosition());\n+          continue;\n+        }\n+        if (lastTxId \u003d\u003d HdfsConstants.INVALID_TXID || txid \u003e lastTxId) {\n+          lastTxId \u003d txid;\n+        }\n+        numValid++;\n+      }\n+      return new EditLogValidation(lastPos, lastTxId, false);\n+    } finally {\n+      IOUtils.closeStream(in);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  static FSEditLogLoader.EditLogValidation scanEditLog(File file)\n      throws IOException {\n    EditLogFileInputStream in;\n    try {\n      in \u003d new EditLogFileInputStream(file);\n      // read the header, initialize the inputstream, but do not check the\n      // layoutversion\n      in.getVersion(false);\n    } catch (LogHeaderCorruptException e) {\n      LOG.warn(\"Log file \" + file + \" has no valid header\", e);\n      return new FSEditLogLoader.EditLogValidation(0,\n          HdfsConstants.INVALID_TXID, true);\n    }\n\n    long lastPos \u003d 0;\n    long lastTxId \u003d HdfsConstants.INVALID_TXID;\n    long numValid \u003d 0;\n    try {\n      while (true) {\n        long txid \u003d HdfsConstants.INVALID_TXID;\n        lastPos \u003d in.getPosition();\n        try {\n          if ((txid \u003d in.scanNextOp()) \u003d\u003d HdfsConstants.INVALID_TXID) {\n            break;\n          }\n        } catch (Throwable t) {\n          FSImage.LOG.warn(\"Caught exception after scanning through \"\n              + numValid + \" ops from \" + in\n              + \" while determining its valid length. Position was \"\n              + lastPos, t);\n          in.resync();\n          FSImage.LOG.warn(\"After resync, position is \" + in.getPosition());\n          continue;\n        }\n        if (lastTxId \u003d\u003d HdfsConstants.INVALID_TXID || txid \u003e lastTxId) {\n          lastTxId \u003d txid;\n        }\n        numValid++;\n      }\n      return new EditLogValidation(lastPos, lastTxId, false);\n    } finally {\n      IOUtils.closeStream(in);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/EditLogFileInputStream.java"
    }
  }
}