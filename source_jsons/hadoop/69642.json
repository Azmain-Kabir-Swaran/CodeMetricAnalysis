{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AzureBlobFileSystem.java",
  "functionName": "setPermission",
  "functionId": "setPermission___path-Path(modifiers-final)__permission-FsPermission(modifiers-final)",
  "sourceFilePath": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/AzureBlobFileSystem.java",
  "functionStartLine": 708,
  "functionEndLine": 728,
  "numCommitsSeen": 34,
  "timeTaken": 2635,
  "changeHistory": [
    "791270a2e5e31546ff5c1ef4fa8bad6852b906dc",
    "e8b8604314a2ea894b1f24939c42e782b83335aa",
    "d5da9928c99073abdd27b66f794fe4312434ff96",
    "6801b3073317000d5a9c24764aa93918955c27a6",
    "9c1e4e81399913f180131f4faa95604087c6d962"
  ],
  "changeHistoryShort": {
    "791270a2e5e31546ff5c1ef4fa8bad6852b906dc": "Ybodychange",
    "e8b8604314a2ea894b1f24939c42e782b83335aa": "Ybodychange",
    "d5da9928c99073abdd27b66f794fe4312434ff96": "Ybodychange",
    "6801b3073317000d5a9c24764aa93918955c27a6": "Ybodychange",
    "9c1e4e81399913f180131f4faa95604087c6d962": "Yintroduced"
  },
  "changeHistoryDetails": {
    "791270a2e5e31546ff5c1ef4fa8bad6852b906dc": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16730: ABFS: Support for Shared Access Signatures (SAS). Contributed by Sneha Vijayarajan.\n",
      "commitDate": "27/02/20 10:27 AM",
      "commitName": "791270a2e5e31546ff5c1ef4fa8bad6852b906dc",
      "commitAuthor": "Sneha Vijayarajan",
      "commitDateOld": "14/01/20 5:28 PM",
      "commitNameOld": "c36f09deb91454c086926c01f872d8ca4419aee0",
      "commitAuthorOld": "Clemens Wolff",
      "daysBetweenCommits": 43.71,
      "commitsBetweenForRepo": 144,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,21 @@\n   public void setPermission(final Path path, final FsPermission permission)\n       throws IOException {\n     LOG.debug(\"AzureBlobFileSystem.setPermission path: {}\", path);\n     if (!getIsNamespaceEnabled()) {\n       super.setPermission(path, permission);\n       return;\n     }\n \n     if (permission \u003d\u003d null) {\n       throw new IllegalArgumentException(\"The permission can\u0027t be null\");\n     }\n \n     Path qualifiedPath \u003d makeQualified(path);\n-    performAbfsAuthCheck(FsAction.WRITE, qualifiedPath);\n \n     try {\n       abfsStore.setPermission(qualifiedPath,\n               permission);\n     } catch (AzureBlobFileSystemException ex) {\n       checkException(path, ex);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setPermission(final Path path, final FsPermission permission)\n      throws IOException {\n    LOG.debug(\"AzureBlobFileSystem.setPermission path: {}\", path);\n    if (!getIsNamespaceEnabled()) {\n      super.setPermission(path, permission);\n      return;\n    }\n\n    if (permission \u003d\u003d null) {\n      throw new IllegalArgumentException(\"The permission can\u0027t be null\");\n    }\n\n    Path qualifiedPath \u003d makeQualified(path);\n\n    try {\n      abfsStore.setPermission(qualifiedPath,\n              permission);\n    } catch (AzureBlobFileSystemException ex) {\n      checkException(path, ex);\n    }\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/AzureBlobFileSystem.java",
      "extendedDetails": {}
    },
    "e8b8604314a2ea894b1f24939c42e782b83335aa": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15792. typo in AzureBlobFileSystem.getIsNamespaceEnabeld.\nContributed by Abhishek Modi.\n",
      "commitDate": "02/10/18 10:57 AM",
      "commitName": "e8b8604314a2ea894b1f24939c42e782b83335aa",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "25/09/18 11:13 AM",
      "commitNameOld": "d5da9928c99073abdd27b66f794fe4312434ff96",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 6.99,
      "commitsBetweenForRepo": 44,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n   public void setPermission(final Path path, final FsPermission permission)\n       throws IOException {\n     LOG.debug(\"AzureBlobFileSystem.setPermission path: {}\", path);\n-    if (!getIsNamespaceEnabeld()) {\n+    if (!getIsNamespaceEnabled()) {\n       super.setPermission(path, permission);\n       return;\n     }\n \n     if (permission \u003d\u003d null) {\n       throw new IllegalArgumentException(\"The permission can\u0027t be null\");\n     }\n \n     Path qualifiedPath \u003d makeQualified(path);\n     performAbfsAuthCheck(FsAction.WRITE, qualifiedPath);\n \n     try {\n       abfsStore.setPermission(qualifiedPath,\n               permission);\n     } catch (AzureBlobFileSystemException ex) {\n       checkException(path, ex);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setPermission(final Path path, final FsPermission permission)\n      throws IOException {\n    LOG.debug(\"AzureBlobFileSystem.setPermission path: {}\", path);\n    if (!getIsNamespaceEnabled()) {\n      super.setPermission(path, permission);\n      return;\n    }\n\n    if (permission \u003d\u003d null) {\n      throw new IllegalArgumentException(\"The permission can\u0027t be null\");\n    }\n\n    Path qualifiedPath \u003d makeQualified(path);\n    performAbfsAuthCheck(FsAction.WRITE, qualifiedPath);\n\n    try {\n      abfsStore.setPermission(qualifiedPath,\n              permission);\n    } catch (AzureBlobFileSystemException ex) {\n      checkException(path, ex);\n    }\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/AzureBlobFileSystem.java",
      "extendedDetails": {}
    },
    "d5da9928c99073abdd27b66f794fe4312434ff96": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15723. ABFS: Ranger Support.\nContributed by Yuan Gao.\n",
      "commitDate": "25/09/18 11:13 AM",
      "commitName": "d5da9928c99073abdd27b66f794fe4312434ff96",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "19/09/18 3:56 PM",
      "commitNameOld": "8e831ba458ab5ebe9c919c76d66615bbef63f82e",
      "commitAuthorOld": "Sean Mackrory",
      "daysBetweenCommits": 5.8,
      "commitsBetweenForRepo": 30,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,22 @@\n   public void setPermission(final Path path, final FsPermission permission)\n       throws IOException {\n     LOG.debug(\"AzureBlobFileSystem.setPermission path: {}\", path);\n     if (!getIsNamespaceEnabeld()) {\n       super.setPermission(path, permission);\n       return;\n     }\n \n     if (permission \u003d\u003d null) {\n       throw new IllegalArgumentException(\"The permission can\u0027t be null\");\n     }\n \n+    Path qualifiedPath \u003d makeQualified(path);\n+    performAbfsAuthCheck(FsAction.WRITE, qualifiedPath);\n+\n     try {\n-      abfsStore.setPermission(makeQualified(path),\n+      abfsStore.setPermission(qualifiedPath,\n               permission);\n     } catch (AzureBlobFileSystemException ex) {\n       checkException(path, ex);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setPermission(final Path path, final FsPermission permission)\n      throws IOException {\n    LOG.debug(\"AzureBlobFileSystem.setPermission path: {}\", path);\n    if (!getIsNamespaceEnabeld()) {\n      super.setPermission(path, permission);\n      return;\n    }\n\n    if (permission \u003d\u003d null) {\n      throw new IllegalArgumentException(\"The permission can\u0027t be null\");\n    }\n\n    Path qualifiedPath \u003d makeQualified(path);\n    performAbfsAuthCheck(FsAction.WRITE, qualifiedPath);\n\n    try {\n      abfsStore.setPermission(qualifiedPath,\n              permission);\n    } catch (AzureBlobFileSystemException ex) {\n      checkException(path, ex);\n    }\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/AzureBlobFileSystem.java",
      "extendedDetails": {}
    },
    "6801b3073317000d5a9c24764aa93918955c27a6": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15728. ABFS: Add backward compatibility to handle Unsupported Operation\nfor storage account with no namespace feature.\n\nContributed by Da Zhou.\n",
      "commitDate": "17/09/18 12:54 PM",
      "commitName": "6801b3073317000d5a9c24764aa93918955c27a6",
      "commitAuthor": "Thomas Marquardt",
      "commitDateOld": "17/09/18 12:54 PM",
      "commitNameOld": "97f06b3fc70ad509e601076c015bc244daa1243f",
      "commitAuthorOld": "Thomas Marquardt",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,19 @@\n   public void setPermission(final Path path, final FsPermission permission)\n       throws IOException {\n     LOG.debug(\"AzureBlobFileSystem.setPermission path: {}\", path);\n+    if (!getIsNamespaceEnabeld()) {\n+      super.setPermission(path, permission);\n+      return;\n+    }\n \n     if (permission \u003d\u003d null) {\n       throw new IllegalArgumentException(\"The permission can\u0027t be null\");\n     }\n \n     try {\n       abfsStore.setPermission(makeQualified(path),\n               permission);\n     } catch (AzureBlobFileSystemException ex) {\n       checkException(path, ex);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setPermission(final Path path, final FsPermission permission)\n      throws IOException {\n    LOG.debug(\"AzureBlobFileSystem.setPermission path: {}\", path);\n    if (!getIsNamespaceEnabeld()) {\n      super.setPermission(path, permission);\n      return;\n    }\n\n    if (permission \u003d\u003d null) {\n      throw new IllegalArgumentException(\"The permission can\u0027t be null\");\n    }\n\n    try {\n      abfsStore.setPermission(makeQualified(path),\n              permission);\n    } catch (AzureBlobFileSystemException ex) {\n      checkException(path, ex);\n    }\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/AzureBlobFileSystem.java",
      "extendedDetails": {}
    },
    "9c1e4e81399913f180131f4faa95604087c6d962": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-15661. ABFS: Add support for ACL.\nContributed by Junhua Gu and Da Zhou.\n",
      "commitDate": "17/09/18 12:54 PM",
      "commitName": "9c1e4e81399913f180131f4faa95604087c6d962",
      "commitAuthor": "Thomas Marquardt",
      "diff": "@@ -0,0 +1,15 @@\n+  public void setPermission(final Path path, final FsPermission permission)\n+      throws IOException {\n+    LOG.debug(\"AzureBlobFileSystem.setPermission path: {}\", path);\n+\n+    if (permission \u003d\u003d null) {\n+      throw new IllegalArgumentException(\"The permission can\u0027t be null\");\n+    }\n+\n+    try {\n+      abfsStore.setPermission(makeQualified(path),\n+              permission);\n+    } catch (AzureBlobFileSystemException ex) {\n+      checkException(path, ex);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void setPermission(final Path path, final FsPermission permission)\n      throws IOException {\n    LOG.debug(\"AzureBlobFileSystem.setPermission path: {}\", path);\n\n    if (permission \u003d\u003d null) {\n      throw new IllegalArgumentException(\"The permission can\u0027t be null\");\n    }\n\n    try {\n      abfsStore.setPermission(makeQualified(path),\n              permission);\n    } catch (AzureBlobFileSystemException ex) {\n      checkException(path, ex);\n    }\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/AzureBlobFileSystem.java"
    }
  }
}