{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CapacitySchedulerPreemptionUtils.java",
  "functionName": "getResToObtainByPartitionForLeafQueue",
  "functionId": "getResToObtainByPartitionForLeafQueue___context-CapacitySchedulerPreemptionContext__queueName-String__clusterResource-Resource",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/CapacitySchedulerPreemptionUtils.java",
  "functionStartLine": 37,
  "functionEndLine": 57,
  "numCommitsSeen": 9,
  "timeTaken": 1709,
  "changeHistory": [
    "90dd3a8148468ac37a3f2173ad8d45e38bfcb0c9",
    "bb62e0592566b2fcae7136b30972aad2d3ac55b0",
    "60e4116bf1d00afed91010e57357fe54057e4e39"
  ],
  "changeHistoryShort": {
    "90dd3a8148468ac37a3f2173ad8d45e38bfcb0c9": "Ybodychange",
    "bb62e0592566b2fcae7136b30972aad2d3ac55b0": "Ybodychange",
    "60e4116bf1d00afed91010e57357fe54057e4e39": "Yintroduced"
  },
  "changeHistoryDetails": {
    "90dd3a8148468ac37a3f2173ad8d45e38bfcb0c9": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2009. CapacityScheduler: Add intra-queue preemption for app priority support. (Sunil G via wangda)\n",
      "commitDate": "31/10/16 3:18 PM",
      "commitName": "90dd3a8148468ac37a3f2173ad8d45e38bfcb0c9",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "05/05/16 12:56 PM",
      "commitNameOld": "bb62e0592566b2fcae7136b30972aad2d3ac55b0",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 179.1,
      "commitsBetweenForRepo": 1369,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,21 @@\n   public static Map\u003cString, Resource\u003e getResToObtainByPartitionForLeafQueue(\n       CapacitySchedulerPreemptionContext context, String queueName,\n       Resource clusterResource) {\n     Map\u003cString, Resource\u003e resToObtainByPartition \u003d new HashMap\u003c\u003e();\n     // compute resToObtainByPartition considered inter-queue preemption\n     for (TempQueuePerPartition qT : context.getQueuePartitions(queueName)) {\n       if (qT.preemptionDisabled) {\n         continue;\n       }\n \n-      //  Only add resToObtainByPartition when actuallyToBePreempted resource \u003e\u003d 0\n+      // Only add resToObtainByPartition when actuallyToBePreempted resource \u003e\u003d\n+      // 0\n       if (Resources.greaterThan(context.getResourceCalculator(),\n           clusterResource, qT.getActuallyToBePreempted(), Resources.none())) {\n         resToObtainByPartition.put(qT.partition,\n             Resources.clone(qT.getActuallyToBePreempted()));\n       }\n     }\n \n     return resToObtainByPartition;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static Map\u003cString, Resource\u003e getResToObtainByPartitionForLeafQueue(\n      CapacitySchedulerPreemptionContext context, String queueName,\n      Resource clusterResource) {\n    Map\u003cString, Resource\u003e resToObtainByPartition \u003d new HashMap\u003c\u003e();\n    // compute resToObtainByPartition considered inter-queue preemption\n    for (TempQueuePerPartition qT : context.getQueuePartitions(queueName)) {\n      if (qT.preemptionDisabled) {\n        continue;\n      }\n\n      // Only add resToObtainByPartition when actuallyToBePreempted resource \u003e\u003d\n      // 0\n      if (Resources.greaterThan(context.getResourceCalculator(),\n          clusterResource, qT.getActuallyToBePreempted(), Resources.none())) {\n        resToObtainByPartition.put(qT.partition,\n            Resources.clone(qT.getActuallyToBePreempted()));\n      }\n    }\n\n    return resToObtainByPartition;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/CapacitySchedulerPreemptionUtils.java",
      "extendedDetails": {}
    },
    "bb62e0592566b2fcae7136b30972aad2d3ac55b0": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4390. Do surgical preemption based on reserved container in CapacityScheduler. Contributed by Wangda Tan\n",
      "commitDate": "05/05/16 12:56 PM",
      "commitName": "bb62e0592566b2fcae7136b30972aad2d3ac55b0",
      "commitAuthor": "Jian He",
      "commitDateOld": "30/03/16 12:43 PM",
      "commitNameOld": "60e4116bf1d00afed91010e57357fe54057e4e39",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 36.01,
      "commitsBetweenForRepo": 225,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   public static Map\u003cString, Resource\u003e getResToObtainByPartitionForLeafQueue(\n       CapacitySchedulerPreemptionContext context, String queueName,\n       Resource clusterResource) {\n     Map\u003cString, Resource\u003e resToObtainByPartition \u003d new HashMap\u003c\u003e();\n     // compute resToObtainByPartition considered inter-queue preemption\n     for (TempQueuePerPartition qT : context.getQueuePartitions(queueName)) {\n       if (qT.preemptionDisabled) {\n         continue;\n       }\n \n       //  Only add resToObtainByPartition when actuallyToBePreempted resource \u003e\u003d 0\n       if (Resources.greaterThan(context.getResourceCalculator(),\n-          clusterResource, qT.actuallyToBePreempted, Resources.none())) {\n+          clusterResource, qT.getActuallyToBePreempted(), Resources.none())) {\n         resToObtainByPartition.put(qT.partition,\n-            Resources.clone(qT.actuallyToBePreempted));\n+            Resources.clone(qT.getActuallyToBePreempted()));\n       }\n     }\n \n     return resToObtainByPartition;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static Map\u003cString, Resource\u003e getResToObtainByPartitionForLeafQueue(\n      CapacitySchedulerPreemptionContext context, String queueName,\n      Resource clusterResource) {\n    Map\u003cString, Resource\u003e resToObtainByPartition \u003d new HashMap\u003c\u003e();\n    // compute resToObtainByPartition considered inter-queue preemption\n    for (TempQueuePerPartition qT : context.getQueuePartitions(queueName)) {\n      if (qT.preemptionDisabled) {\n        continue;\n      }\n\n      //  Only add resToObtainByPartition when actuallyToBePreempted resource \u003e\u003d 0\n      if (Resources.greaterThan(context.getResourceCalculator(),\n          clusterResource, qT.getActuallyToBePreempted(), Resources.none())) {\n        resToObtainByPartition.put(qT.partition,\n            Resources.clone(qT.getActuallyToBePreempted()));\n      }\n    }\n\n    return resToObtainByPartition;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/CapacitySchedulerPreemptionUtils.java",
      "extendedDetails": {}
    },
    "60e4116bf1d00afed91010e57357fe54057e4e39": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4822. Refactor existing Preemption Policy of CS for easier adding new approach to select preemption candidates. Contributed by Wangda Tan\n",
      "commitDate": "30/03/16 12:43 PM",
      "commitName": "60e4116bf1d00afed91010e57357fe54057e4e39",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,20 @@\n+  public static Map\u003cString, Resource\u003e getResToObtainByPartitionForLeafQueue(\n+      CapacitySchedulerPreemptionContext context, String queueName,\n+      Resource clusterResource) {\n+    Map\u003cString, Resource\u003e resToObtainByPartition \u003d new HashMap\u003c\u003e();\n+    // compute resToObtainByPartition considered inter-queue preemption\n+    for (TempQueuePerPartition qT : context.getQueuePartitions(queueName)) {\n+      if (qT.preemptionDisabled) {\n+        continue;\n+      }\n+\n+      //  Only add resToObtainByPartition when actuallyToBePreempted resource \u003e\u003d 0\n+      if (Resources.greaterThan(context.getResourceCalculator(),\n+          clusterResource, qT.actuallyToBePreempted, Resources.none())) {\n+        resToObtainByPartition.put(qT.partition,\n+            Resources.clone(qT.actuallyToBePreempted));\n+      }\n+    }\n+\n+    return resToObtainByPartition;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static Map\u003cString, Resource\u003e getResToObtainByPartitionForLeafQueue(\n      CapacitySchedulerPreemptionContext context, String queueName,\n      Resource clusterResource) {\n    Map\u003cString, Resource\u003e resToObtainByPartition \u003d new HashMap\u003c\u003e();\n    // compute resToObtainByPartition considered inter-queue preemption\n    for (TempQueuePerPartition qT : context.getQueuePartitions(queueName)) {\n      if (qT.preemptionDisabled) {\n        continue;\n      }\n\n      //  Only add resToObtainByPartition when actuallyToBePreempted resource \u003e\u003d 0\n      if (Resources.greaterThan(context.getResourceCalculator(),\n          clusterResource, qT.actuallyToBePreempted, Resources.none())) {\n        resToObtainByPartition.put(qT.partition,\n            Resources.clone(qT.actuallyToBePreempted));\n      }\n    }\n\n    return resToObtainByPartition;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/CapacitySchedulerPreemptionUtils.java"
    }
  }
}