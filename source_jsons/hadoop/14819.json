{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "OfflineEditsViewer.java",
  "functionName": "go",
  "functionId": "go___inputFileName-String__outputFileName-String__processor-String__flags-Flags__visitor-OfflineEditsVisitor",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineEditsViewer/OfflineEditsViewer.java",
  "functionStartLine": 131,
  "functionEndLine": 165,
  "numCommitsSeen": 14,
  "timeTaken": 7489,
  "changeHistory": [
    "4416a07c9c57af01ffbd2e43afcde2a1ba94c736",
    "2fc2b50534c2052ed3f6f38f30d29d98d99fd10a",
    "6702d5dbd4f8d778daa0bcefdf7db7fb469a771e",
    "4f6e0a5a659064e0af3bec315e7c25d5e43b47f5",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "4416a07c9c57af01ffbd2e43afcde2a1ba94c736": "Ybodychange",
    "2fc2b50534c2052ed3f6f38f30d29d98d99fd10a": "Ybodychange",
    "6702d5dbd4f8d778daa0bcefdf7db7fb469a771e": "Ymultichange(Yparameterchange,Ybodychange)",
    "4f6e0a5a659064e0af3bec315e7c25d5e43b47f5": "Ymultichange(Yparameterchange,Yreturntypechange,Yexceptionschange,Ybodychange)",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4416a07c9c57af01ffbd2e43afcde2a1ba94c736": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11420. Edit file should not be processed by the same type processor in OfflineEditsViewer. Contributed by Yiqun Lin.\n",
      "commitDate": "15/03/17 3:05 AM",
      "commitName": "4416a07c9c57af01ffbd2e43afcde2a1ba94c736",
      "commitAuthor": "Yiqun Lin",
      "commitDateOld": "15/10/15 5:07 AM",
      "commitNameOld": "08f5de1ef55f637b3bbde0ace28b42f155e285a1",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 516.92,
      "commitsBetweenForRepo": 3469,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,35 @@\n   public int go(String inputFileName, String outputFileName, String processor,\n       Flags flags, OfflineEditsVisitor visitor)\n   {\n     if (flags.getPrintToScreen()) {\n       System.out.println(\"input  [\" + inputFileName  + \"]\");\n       System.out.println(\"output [\" + outputFileName + \"]\");\n     }\n+\n+    boolean xmlInput \u003d StringUtils.toLowerCase(inputFileName).endsWith(\".xml\");\n+    if (xmlInput \u0026\u0026 StringUtils.equalsIgnoreCase(\"xml\", processor)) {\n+      System.err.println(\"XML format input file is not allowed\"\n+          + \" to be processed by XML processor.\");\n+      return -1;\n+    } else if(!xmlInput \u0026\u0026 StringUtils.equalsIgnoreCase(\"binary\", processor)) {\n+      System.err.println(\"Binary format input file is not allowed\"\n+          + \" to be processed by Binary processor.\");\n+      return -1;\n+    }\n+\n     try {\n       if (visitor \u003d\u003d null) {\n         visitor \u003d OfflineEditsVisitorFactory.getEditsVisitor(\n             outputFileName, processor, flags.getPrintToScreen());\n       }\n-      boolean xmlInput \u003d inputFileName.toLowerCase().endsWith(\".xml\");\n+\n       OfflineEditsLoader loader \u003d OfflineEditsLoaderFactory.\n           createLoader(visitor, inputFileName, xmlInput, flags);\n       loader.loadEdits();\n     } catch(Exception e) {\n       System.err.println(\"Encountered exception. Exiting: \" + e.getMessage());\n       e.printStackTrace(System.err);\n       return -1;\n     }\n     return 0;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int go(String inputFileName, String outputFileName, String processor,\n      Flags flags, OfflineEditsVisitor visitor)\n  {\n    if (flags.getPrintToScreen()) {\n      System.out.println(\"input  [\" + inputFileName  + \"]\");\n      System.out.println(\"output [\" + outputFileName + \"]\");\n    }\n\n    boolean xmlInput \u003d StringUtils.toLowerCase(inputFileName).endsWith(\".xml\");\n    if (xmlInput \u0026\u0026 StringUtils.equalsIgnoreCase(\"xml\", processor)) {\n      System.err.println(\"XML format input file is not allowed\"\n          + \" to be processed by XML processor.\");\n      return -1;\n    } else if(!xmlInput \u0026\u0026 StringUtils.equalsIgnoreCase(\"binary\", processor)) {\n      System.err.println(\"Binary format input file is not allowed\"\n          + \" to be processed by Binary processor.\");\n      return -1;\n    }\n\n    try {\n      if (visitor \u003d\u003d null) {\n        visitor \u003d OfflineEditsVisitorFactory.getEditsVisitor(\n            outputFileName, processor, flags.getPrintToScreen());\n      }\n\n      OfflineEditsLoader loader \u003d OfflineEditsLoaderFactory.\n          createLoader(visitor, inputFileName, xmlInput, flags);\n      loader.loadEdits();\n    } catch(Exception e) {\n      System.err.println(\"Encountered exception. Exiting: \" + e.getMessage());\n      e.printStackTrace(System.err);\n      return -1;\n    }\n    return 0;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineEditsViewer/OfflineEditsViewer.java",
      "extendedDetails": {}
    },
    "2fc2b50534c2052ed3f6f38f30d29d98d99fd10a": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9155. OEV should treat .XML files as XML even when the file name extension is uppercase (nijel via cmccabe)\n",
      "commitDate": "05/10/15 12:53 PM",
      "commitName": "2fc2b50534c2052ed3f6f38f30d29d98d99fd10a",
      "commitAuthor": "Colin Patrick Mccabe",
      "commitDateOld": "05/10/15 5:53 AM",
      "commitNameOld": "b925cf100662e155c9efeff06523b09303817394",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 0.29,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   public int go(String inputFileName, String outputFileName, String processor,\n       Flags flags, OfflineEditsVisitor visitor)\n   {\n     if (flags.getPrintToScreen()) {\n       System.out.println(\"input  [\" + inputFileName  + \"]\");\n       System.out.println(\"output [\" + outputFileName + \"]\");\n     }\n     try {\n       if (visitor \u003d\u003d null) {\n         visitor \u003d OfflineEditsVisitorFactory.getEditsVisitor(\n             outputFileName, processor, flags.getPrintToScreen());\n       }\n-      boolean xmlInput \u003d inputFileName.endsWith(\".xml\");\n+      boolean xmlInput \u003d inputFileName.toLowerCase().endsWith(\".xml\");\n       OfflineEditsLoader loader \u003d OfflineEditsLoaderFactory.\n           createLoader(visitor, inputFileName, xmlInput, flags);\n       loader.loadEdits();\n     } catch(Exception e) {\n       System.err.println(\"Encountered exception. Exiting: \" + e.getMessage());\n       e.printStackTrace(System.err);\n       return -1;\n     }\n     return 0;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int go(String inputFileName, String outputFileName, String processor,\n      Flags flags, OfflineEditsVisitor visitor)\n  {\n    if (flags.getPrintToScreen()) {\n      System.out.println(\"input  [\" + inputFileName  + \"]\");\n      System.out.println(\"output [\" + outputFileName + \"]\");\n    }\n    try {\n      if (visitor \u003d\u003d null) {\n        visitor \u003d OfflineEditsVisitorFactory.getEditsVisitor(\n            outputFileName, processor, flags.getPrintToScreen());\n      }\n      boolean xmlInput \u003d inputFileName.toLowerCase().endsWith(\".xml\");\n      OfflineEditsLoader loader \u003d OfflineEditsLoaderFactory.\n          createLoader(visitor, inputFileName, xmlInput, flags);\n      loader.loadEdits();\n    } catch(Exception e) {\n      System.err.println(\"Encountered exception. Exiting: \" + e.getMessage());\n      e.printStackTrace(System.err);\n      return -1;\n    }\n    return 0;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineEditsViewer/OfflineEditsViewer.java",
      "extendedDetails": {}
    },
    "6702d5dbd4f8d778daa0bcefdf7db7fb469a771e": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-3372. offlineEditsViewer should be able to read a binary edits file with recovery mode. Contributed by Colin Patrick McCabe\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1349628 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/12 8:31 PM",
      "commitName": "6702d5dbd4f8d778daa0bcefdf7db7fb469a771e",
      "commitAuthor": "Eli Collins",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-3372. offlineEditsViewer should be able to read a binary edits file with recovery mode. Contributed by Colin Patrick McCabe\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1349628 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "12/06/12 8:31 PM",
          "commitName": "6702d5dbd4f8d778daa0bcefdf7db7fb469a771e",
          "commitAuthor": "Eli Collins",
          "commitDateOld": "04/04/12 5:02 PM",
          "commitNameOld": "4f6e0a5a659064e0af3bec315e7c25d5e43b47f5",
          "commitAuthorOld": "Eli Collins",
          "daysBetweenCommits": 69.15,
          "commitsBetweenForRepo": 441,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,23 @@\n   public int go(String inputFileName, String outputFileName, String processor,\n-      boolean printToScreen, boolean fixTxIds, OfflineEditsVisitor visitor)\n+      Flags flags, OfflineEditsVisitor visitor)\n   {\n-    if (printToScreen) {\n+    if (flags.getPrintToScreen()) {\n       System.out.println(\"input  [\" + inputFileName  + \"]\");\n       System.out.println(\"output [\" + outputFileName + \"]\");\n     }\n     try {\n       if (visitor \u003d\u003d null) {\n         visitor \u003d OfflineEditsVisitorFactory.getEditsVisitor(\n-            outputFileName, processor, printToScreen);\n+            outputFileName, processor, flags.getPrintToScreen());\n       }\n       boolean xmlInput \u003d inputFileName.endsWith(\".xml\");\n       OfflineEditsLoader loader \u003d OfflineEditsLoaderFactory.\n-          createLoader(visitor, inputFileName, xmlInput);\n-      if (fixTxIds) {\n-        loader.setFixTxIds();\n-      }\n+          createLoader(visitor, inputFileName, xmlInput, flags);\n       loader.loadEdits();\n     } catch(Exception e) {\n       System.err.println(\"Encountered exception. Exiting: \" + e.getMessage());\n       e.printStackTrace(System.err);\n       return -1;\n     }\n     return 0;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public int go(String inputFileName, String outputFileName, String processor,\n      Flags flags, OfflineEditsVisitor visitor)\n  {\n    if (flags.getPrintToScreen()) {\n      System.out.println(\"input  [\" + inputFileName  + \"]\");\n      System.out.println(\"output [\" + outputFileName + \"]\");\n    }\n    try {\n      if (visitor \u003d\u003d null) {\n        visitor \u003d OfflineEditsVisitorFactory.getEditsVisitor(\n            outputFileName, processor, flags.getPrintToScreen());\n      }\n      boolean xmlInput \u003d inputFileName.endsWith(\".xml\");\n      OfflineEditsLoader loader \u003d OfflineEditsLoaderFactory.\n          createLoader(visitor, inputFileName, xmlInput, flags);\n      loader.loadEdits();\n    } catch(Exception e) {\n      System.err.println(\"Encountered exception. Exiting: \" + e.getMessage());\n      e.printStackTrace(System.err);\n      return -1;\n    }\n    return 0;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineEditsViewer/OfflineEditsViewer.java",
          "extendedDetails": {
            "oldValue": "[inputFileName-String, outputFileName-String, processor-String, printToScreen-boolean, fixTxIds-boolean, visitor-OfflineEditsVisitor]",
            "newValue": "[inputFileName-String, outputFileName-String, processor-String, flags-Flags, visitor-OfflineEditsVisitor]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-3372. offlineEditsViewer should be able to read a binary edits file with recovery mode. Contributed by Colin Patrick McCabe\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1349628 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "12/06/12 8:31 PM",
          "commitName": "6702d5dbd4f8d778daa0bcefdf7db7fb469a771e",
          "commitAuthor": "Eli Collins",
          "commitDateOld": "04/04/12 5:02 PM",
          "commitNameOld": "4f6e0a5a659064e0af3bec315e7c25d5e43b47f5",
          "commitAuthorOld": "Eli Collins",
          "daysBetweenCommits": 69.15,
          "commitsBetweenForRepo": 441,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,23 @@\n   public int go(String inputFileName, String outputFileName, String processor,\n-      boolean printToScreen, boolean fixTxIds, OfflineEditsVisitor visitor)\n+      Flags flags, OfflineEditsVisitor visitor)\n   {\n-    if (printToScreen) {\n+    if (flags.getPrintToScreen()) {\n       System.out.println(\"input  [\" + inputFileName  + \"]\");\n       System.out.println(\"output [\" + outputFileName + \"]\");\n     }\n     try {\n       if (visitor \u003d\u003d null) {\n         visitor \u003d OfflineEditsVisitorFactory.getEditsVisitor(\n-            outputFileName, processor, printToScreen);\n+            outputFileName, processor, flags.getPrintToScreen());\n       }\n       boolean xmlInput \u003d inputFileName.endsWith(\".xml\");\n       OfflineEditsLoader loader \u003d OfflineEditsLoaderFactory.\n-          createLoader(visitor, inputFileName, xmlInput);\n-      if (fixTxIds) {\n-        loader.setFixTxIds();\n-      }\n+          createLoader(visitor, inputFileName, xmlInput, flags);\n       loader.loadEdits();\n     } catch(Exception e) {\n       System.err.println(\"Encountered exception. Exiting: \" + e.getMessage());\n       e.printStackTrace(System.err);\n       return -1;\n     }\n     return 0;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public int go(String inputFileName, String outputFileName, String processor,\n      Flags flags, OfflineEditsVisitor visitor)\n  {\n    if (flags.getPrintToScreen()) {\n      System.out.println(\"input  [\" + inputFileName  + \"]\");\n      System.out.println(\"output [\" + outputFileName + \"]\");\n    }\n    try {\n      if (visitor \u003d\u003d null) {\n        visitor \u003d OfflineEditsVisitorFactory.getEditsVisitor(\n            outputFileName, processor, flags.getPrintToScreen());\n      }\n      boolean xmlInput \u003d inputFileName.endsWith(\".xml\");\n      OfflineEditsLoader loader \u003d OfflineEditsLoaderFactory.\n          createLoader(visitor, inputFileName, xmlInput, flags);\n      loader.loadEdits();\n    } catch(Exception e) {\n      System.err.println(\"Encountered exception. Exiting: \" + e.getMessage());\n      e.printStackTrace(System.err);\n      return -1;\n    }\n    return 0;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineEditsViewer/OfflineEditsViewer.java",
          "extendedDetails": {}
        }
      ]
    },
    "4f6e0a5a659064e0af3bec315e7c25d5e43b47f5": {
      "type": "Ymultichange(Yparameterchange,Yreturntypechange,Yexceptionschange,Ybodychange)",
      "commitMessage": "HDFS-3050. rework OEV to share more code with the NameNode. Contributed by Colin Patrick McCabe\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1309629 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/04/12 5:02 PM",
      "commitName": "4f6e0a5a659064e0af3bec315e7c25d5e43b47f5",
      "commitAuthor": "Eli Collins",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-3050. rework OEV to share more code with the NameNode. Contributed by Colin Patrick McCabe\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1309629 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "04/04/12 5:02 PM",
          "commitName": "4f6e0a5a659064e0af3bec315e7c25d5e43b47f5",
          "commitAuthor": "Eli Collins",
          "commitDateOld": "24/08/11 5:14 PM",
          "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 223.99,
          "commitsBetweenForRepo": 1600,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,4 +1,26 @@\n-  public void go(EditsVisitor visitor) throws IOException  {\n-    setEditsLoader(EditsLoader.LoaderFactory.getLoader(visitor));\n-    editsLoader.loadEdits();\n+  public int go(String inputFileName, String outputFileName, String processor,\n+      boolean printToScreen, boolean fixTxIds, OfflineEditsVisitor visitor)\n+  {\n+    if (printToScreen) {\n+      System.out.println(\"input  [\" + inputFileName  + \"]\");\n+      System.out.println(\"output [\" + outputFileName + \"]\");\n+    }\n+    try {\n+      if (visitor \u003d\u003d null) {\n+        visitor \u003d OfflineEditsVisitorFactory.getEditsVisitor(\n+            outputFileName, processor, printToScreen);\n+      }\n+      boolean xmlInput \u003d inputFileName.endsWith(\".xml\");\n+      OfflineEditsLoader loader \u003d OfflineEditsLoaderFactory.\n+          createLoader(visitor, inputFileName, xmlInput);\n+      if (fixTxIds) {\n+        loader.setFixTxIds();\n+      }\n+      loader.loadEdits();\n+    } catch(Exception e) {\n+      System.err.println(\"Encountered exception. Exiting: \" + e.getMessage());\n+      e.printStackTrace(System.err);\n+      return -1;\n+    }\n+    return 0;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public int go(String inputFileName, String outputFileName, String processor,\n      boolean printToScreen, boolean fixTxIds, OfflineEditsVisitor visitor)\n  {\n    if (printToScreen) {\n      System.out.println(\"input  [\" + inputFileName  + \"]\");\n      System.out.println(\"output [\" + outputFileName + \"]\");\n    }\n    try {\n      if (visitor \u003d\u003d null) {\n        visitor \u003d OfflineEditsVisitorFactory.getEditsVisitor(\n            outputFileName, processor, printToScreen);\n      }\n      boolean xmlInput \u003d inputFileName.endsWith(\".xml\");\n      OfflineEditsLoader loader \u003d OfflineEditsLoaderFactory.\n          createLoader(visitor, inputFileName, xmlInput);\n      if (fixTxIds) {\n        loader.setFixTxIds();\n      }\n      loader.loadEdits();\n    } catch(Exception e) {\n      System.err.println(\"Encountered exception. Exiting: \" + e.getMessage());\n      e.printStackTrace(System.err);\n      return -1;\n    }\n    return 0;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineEditsViewer/OfflineEditsViewer.java",
          "extendedDetails": {
            "oldValue": "[visitor-EditsVisitor]",
            "newValue": "[inputFileName-String, outputFileName-String, processor-String, printToScreen-boolean, fixTxIds-boolean, visitor-OfflineEditsVisitor]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-3050. rework OEV to share more code with the NameNode. Contributed by Colin Patrick McCabe\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1309629 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "04/04/12 5:02 PM",
          "commitName": "4f6e0a5a659064e0af3bec315e7c25d5e43b47f5",
          "commitAuthor": "Eli Collins",
          "commitDateOld": "24/08/11 5:14 PM",
          "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 223.99,
          "commitsBetweenForRepo": 1600,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,4 +1,26 @@\n-  public void go(EditsVisitor visitor) throws IOException  {\n-    setEditsLoader(EditsLoader.LoaderFactory.getLoader(visitor));\n-    editsLoader.loadEdits();\n+  public int go(String inputFileName, String outputFileName, String processor,\n+      boolean printToScreen, boolean fixTxIds, OfflineEditsVisitor visitor)\n+  {\n+    if (printToScreen) {\n+      System.out.println(\"input  [\" + inputFileName  + \"]\");\n+      System.out.println(\"output [\" + outputFileName + \"]\");\n+    }\n+    try {\n+      if (visitor \u003d\u003d null) {\n+        visitor \u003d OfflineEditsVisitorFactory.getEditsVisitor(\n+            outputFileName, processor, printToScreen);\n+      }\n+      boolean xmlInput \u003d inputFileName.endsWith(\".xml\");\n+      OfflineEditsLoader loader \u003d OfflineEditsLoaderFactory.\n+          createLoader(visitor, inputFileName, xmlInput);\n+      if (fixTxIds) {\n+        loader.setFixTxIds();\n+      }\n+      loader.loadEdits();\n+    } catch(Exception e) {\n+      System.err.println(\"Encountered exception. Exiting: \" + e.getMessage());\n+      e.printStackTrace(System.err);\n+      return -1;\n+    }\n+    return 0;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public int go(String inputFileName, String outputFileName, String processor,\n      boolean printToScreen, boolean fixTxIds, OfflineEditsVisitor visitor)\n  {\n    if (printToScreen) {\n      System.out.println(\"input  [\" + inputFileName  + \"]\");\n      System.out.println(\"output [\" + outputFileName + \"]\");\n    }\n    try {\n      if (visitor \u003d\u003d null) {\n        visitor \u003d OfflineEditsVisitorFactory.getEditsVisitor(\n            outputFileName, processor, printToScreen);\n      }\n      boolean xmlInput \u003d inputFileName.endsWith(\".xml\");\n      OfflineEditsLoader loader \u003d OfflineEditsLoaderFactory.\n          createLoader(visitor, inputFileName, xmlInput);\n      if (fixTxIds) {\n        loader.setFixTxIds();\n      }\n      loader.loadEdits();\n    } catch(Exception e) {\n      System.err.println(\"Encountered exception. Exiting: \" + e.getMessage());\n      e.printStackTrace(System.err);\n      return -1;\n    }\n    return 0;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineEditsViewer/OfflineEditsViewer.java",
          "extendedDetails": {
            "oldValue": "void",
            "newValue": "int"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "HDFS-3050. rework OEV to share more code with the NameNode. Contributed by Colin Patrick McCabe\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1309629 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "04/04/12 5:02 PM",
          "commitName": "4f6e0a5a659064e0af3bec315e7c25d5e43b47f5",
          "commitAuthor": "Eli Collins",
          "commitDateOld": "24/08/11 5:14 PM",
          "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 223.99,
          "commitsBetweenForRepo": 1600,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,4 +1,26 @@\n-  public void go(EditsVisitor visitor) throws IOException  {\n-    setEditsLoader(EditsLoader.LoaderFactory.getLoader(visitor));\n-    editsLoader.loadEdits();\n+  public int go(String inputFileName, String outputFileName, String processor,\n+      boolean printToScreen, boolean fixTxIds, OfflineEditsVisitor visitor)\n+  {\n+    if (printToScreen) {\n+      System.out.println(\"input  [\" + inputFileName  + \"]\");\n+      System.out.println(\"output [\" + outputFileName + \"]\");\n+    }\n+    try {\n+      if (visitor \u003d\u003d null) {\n+        visitor \u003d OfflineEditsVisitorFactory.getEditsVisitor(\n+            outputFileName, processor, printToScreen);\n+      }\n+      boolean xmlInput \u003d inputFileName.endsWith(\".xml\");\n+      OfflineEditsLoader loader \u003d OfflineEditsLoaderFactory.\n+          createLoader(visitor, inputFileName, xmlInput);\n+      if (fixTxIds) {\n+        loader.setFixTxIds();\n+      }\n+      loader.loadEdits();\n+    } catch(Exception e) {\n+      System.err.println(\"Encountered exception. Exiting: \" + e.getMessage());\n+      e.printStackTrace(System.err);\n+      return -1;\n+    }\n+    return 0;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public int go(String inputFileName, String outputFileName, String processor,\n      boolean printToScreen, boolean fixTxIds, OfflineEditsVisitor visitor)\n  {\n    if (printToScreen) {\n      System.out.println(\"input  [\" + inputFileName  + \"]\");\n      System.out.println(\"output [\" + outputFileName + \"]\");\n    }\n    try {\n      if (visitor \u003d\u003d null) {\n        visitor \u003d OfflineEditsVisitorFactory.getEditsVisitor(\n            outputFileName, processor, printToScreen);\n      }\n      boolean xmlInput \u003d inputFileName.endsWith(\".xml\");\n      OfflineEditsLoader loader \u003d OfflineEditsLoaderFactory.\n          createLoader(visitor, inputFileName, xmlInput);\n      if (fixTxIds) {\n        loader.setFixTxIds();\n      }\n      loader.loadEdits();\n    } catch(Exception e) {\n      System.err.println(\"Encountered exception. Exiting: \" + e.getMessage());\n      e.printStackTrace(System.err);\n      return -1;\n    }\n    return 0;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineEditsViewer/OfflineEditsViewer.java",
          "extendedDetails": {
            "oldValue": "[IOException]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-3050. rework OEV to share more code with the NameNode. Contributed by Colin Patrick McCabe\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1309629 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "04/04/12 5:02 PM",
          "commitName": "4f6e0a5a659064e0af3bec315e7c25d5e43b47f5",
          "commitAuthor": "Eli Collins",
          "commitDateOld": "24/08/11 5:14 PM",
          "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 223.99,
          "commitsBetweenForRepo": 1600,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,4 +1,26 @@\n-  public void go(EditsVisitor visitor) throws IOException  {\n-    setEditsLoader(EditsLoader.LoaderFactory.getLoader(visitor));\n-    editsLoader.loadEdits();\n+  public int go(String inputFileName, String outputFileName, String processor,\n+      boolean printToScreen, boolean fixTxIds, OfflineEditsVisitor visitor)\n+  {\n+    if (printToScreen) {\n+      System.out.println(\"input  [\" + inputFileName  + \"]\");\n+      System.out.println(\"output [\" + outputFileName + \"]\");\n+    }\n+    try {\n+      if (visitor \u003d\u003d null) {\n+        visitor \u003d OfflineEditsVisitorFactory.getEditsVisitor(\n+            outputFileName, processor, printToScreen);\n+      }\n+      boolean xmlInput \u003d inputFileName.endsWith(\".xml\");\n+      OfflineEditsLoader loader \u003d OfflineEditsLoaderFactory.\n+          createLoader(visitor, inputFileName, xmlInput);\n+      if (fixTxIds) {\n+        loader.setFixTxIds();\n+      }\n+      loader.loadEdits();\n+    } catch(Exception e) {\n+      System.err.println(\"Encountered exception. Exiting: \" + e.getMessage());\n+      e.printStackTrace(System.err);\n+      return -1;\n+    }\n+    return 0;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public int go(String inputFileName, String outputFileName, String processor,\n      boolean printToScreen, boolean fixTxIds, OfflineEditsVisitor visitor)\n  {\n    if (printToScreen) {\n      System.out.println(\"input  [\" + inputFileName  + \"]\");\n      System.out.println(\"output [\" + outputFileName + \"]\");\n    }\n    try {\n      if (visitor \u003d\u003d null) {\n        visitor \u003d OfflineEditsVisitorFactory.getEditsVisitor(\n            outputFileName, processor, printToScreen);\n      }\n      boolean xmlInput \u003d inputFileName.endsWith(\".xml\");\n      OfflineEditsLoader loader \u003d OfflineEditsLoaderFactory.\n          createLoader(visitor, inputFileName, xmlInput);\n      if (fixTxIds) {\n        loader.setFixTxIds();\n      }\n      loader.loadEdits();\n    } catch(Exception e) {\n      System.err.println(\"Encountered exception. Exiting: \" + e.getMessage());\n      e.printStackTrace(System.err);\n      return -1;\n    }\n    return 0;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineEditsViewer/OfflineEditsViewer.java",
          "extendedDetails": {}
        }
      ]
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void go(EditsVisitor visitor) throws IOException  {\n    setEditsLoader(EditsLoader.LoaderFactory.getLoader(visitor));\n    editsLoader.loadEdits();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineEditsViewer/OfflineEditsViewer.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineEditsViewer/OfflineEditsViewer.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineEditsViewer/OfflineEditsViewer.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void go(EditsVisitor visitor) throws IOException  {\n    setEditsLoader(EditsLoader.LoaderFactory.getLoader(visitor));\n    editsLoader.loadEdits();\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineEditsViewer/OfflineEditsViewer.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/tools/offlineEditsViewer/OfflineEditsViewer.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineEditsViewer/OfflineEditsViewer.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,4 @@\n+  public void go(EditsVisitor visitor) throws IOException  {\n+    setEditsLoader(EditsLoader.LoaderFactory.getLoader(visitor));\n+    editsLoader.loadEdits();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void go(EditsVisitor visitor) throws IOException  {\n    setEditsLoader(EditsLoader.LoaderFactory.getLoader(visitor));\n    editsLoader.loadEdits();\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/tools/offlineEditsViewer/OfflineEditsViewer.java"
    }
  }
}