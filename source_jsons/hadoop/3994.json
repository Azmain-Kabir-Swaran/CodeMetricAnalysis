{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DistributedFileSystem.java",
  "functionName": "snapshotDiffReportListingRemoteIterator",
  "functionId": "snapshotDiffReportListingRemoteIterator___snapshotDir-Path(modifiers-final)__fromSnapshot-String(modifiers-final)__toSnapshot-String(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
  "functionStartLine": 2178,
  "functionEndLine": 2205,
  "numCommitsSeen": 96,
  "timeTaken": 2281,
  "changeHistory": [
    "55c77bf722f2b6fcde135c0f71454647a8d2a3db",
    "83e2bb98eea45ddcb598080f68a2f69de1f04485"
  ],
  "changeHistoryShort": {
    "55c77bf722f2b6fcde135c0f71454647a8d2a3db": "Ybodychange",
    "83e2bb98eea45ddcb598080f68a2f69de1f04485": "Yintroduced"
  },
  "changeHistoryDetails": {
    "55c77bf722f2b6fcde135c0f71454647a8d2a3db": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13143. SnapshotDiff - snapshotDiffReport might be inconsistent if the snapshotDiff calculation happens between a snapshot and the current tree.  Contributed by Shashikant Banerjee\n",
      "commitDate": "27/02/18 3:28 PM",
      "commitName": "55c77bf722f2b6fcde135c0f71454647a8d2a3db",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "commitDateOld": "18/02/18 7:42 PM",
      "commitNameOld": "83e2bb98eea45ddcb598080f68a2f69de1f04485",
      "commitAuthorOld": "Tsz-Wo Nicholas Sze",
      "daysBetweenCommits": 8.82,
      "commitsBetweenForRepo": 54,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,28 @@\n       \u003cSnapshotDiffReportListing\u003e snapshotDiffReportListingRemoteIterator(\n       final Path snapshotDir, final String fromSnapshot,\n       final String toSnapshot) throws IOException {\n     Path absF \u003d fixRelativePart(snapshotDir);\n     return new FileSystemLinkResolver\n         \u003cRemoteIterator\u003cSnapshotDiffReportListing\u003e\u003e() {\n       @Override\n       public RemoteIterator\u003cSnapshotDiffReportListing\u003e doCall(final Path p)\n           throws IOException {\n-        return new SnapshotDiffReportListingIterator(\n-            getPathName(p), fromSnapshot, toSnapshot);\n+        if (!isValidSnapshotName(fromSnapshot) || !isValidSnapshotName(\n+            toSnapshot)) {\n+          throw new UnsupportedOperationException(\"Remote Iterator is\"\n+              + \"supported for snapshotDiffReport between two snapshots\");\n+        }\n+        return new SnapshotDiffReportListingIterator(getPathName(p),\n+            fromSnapshot, toSnapshot);\n       }\n \n       @Override\n       public RemoteIterator\u003cSnapshotDiffReportListing\u003e next(final FileSystem fs,\n           final Path p) throws IOException {\n         return ((DistributedFileSystem) fs)\n             .snapshotDiffReportListingRemoteIterator(p, fromSnapshot,\n                 toSnapshot);\n       }\n     }.resolve(this, absF);\n \n   }\n\\ No newline at end of file\n",
      "actualSource": "      \u003cSnapshotDiffReportListing\u003e snapshotDiffReportListingRemoteIterator(\n      final Path snapshotDir, final String fromSnapshot,\n      final String toSnapshot) throws IOException {\n    Path absF \u003d fixRelativePart(snapshotDir);\n    return new FileSystemLinkResolver\n        \u003cRemoteIterator\u003cSnapshotDiffReportListing\u003e\u003e() {\n      @Override\n      public RemoteIterator\u003cSnapshotDiffReportListing\u003e doCall(final Path p)\n          throws IOException {\n        if (!isValidSnapshotName(fromSnapshot) || !isValidSnapshotName(\n            toSnapshot)) {\n          throw new UnsupportedOperationException(\"Remote Iterator is\"\n              + \"supported for snapshotDiffReport between two snapshots\");\n        }\n        return new SnapshotDiffReportListingIterator(getPathName(p),\n            fromSnapshot, toSnapshot);\n      }\n\n      @Override\n      public RemoteIterator\u003cSnapshotDiffReportListing\u003e next(final FileSystem fs,\n          final Path p) throws IOException {\n        return ((DistributedFileSystem) fs)\n            .snapshotDiffReportListingRemoteIterator(p, fromSnapshot,\n                toSnapshot);\n      }\n    }.resolve(this, absF);\n\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
      "extendedDetails": {}
    },
    "83e2bb98eea45ddcb598080f68a2f69de1f04485": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-12998. SnapshotDiff - Provide an iterator-based listing API for calculating snapshotDiff. Contributed by Shashikant Banerjee\n",
      "commitDate": "18/02/18 7:42 PM",
      "commitName": "83e2bb98eea45ddcb598080f68a2f69de1f04485",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "diff": "@@ -0,0 +1,23 @@\n+      \u003cSnapshotDiffReportListing\u003e snapshotDiffReportListingRemoteIterator(\n+      final Path snapshotDir, final String fromSnapshot,\n+      final String toSnapshot) throws IOException {\n+    Path absF \u003d fixRelativePart(snapshotDir);\n+    return new FileSystemLinkResolver\n+        \u003cRemoteIterator\u003cSnapshotDiffReportListing\u003e\u003e() {\n+      @Override\n+      public RemoteIterator\u003cSnapshotDiffReportListing\u003e doCall(final Path p)\n+          throws IOException {\n+        return new SnapshotDiffReportListingIterator(\n+            getPathName(p), fromSnapshot, toSnapshot);\n+      }\n+\n+      @Override\n+      public RemoteIterator\u003cSnapshotDiffReportListing\u003e next(final FileSystem fs,\n+          final Path p) throws IOException {\n+        return ((DistributedFileSystem) fs)\n+            .snapshotDiffReportListingRemoteIterator(p, fromSnapshot,\n+                toSnapshot);\n+      }\n+    }.resolve(this, absF);\n+\n+  }\n\\ No newline at end of file\n",
      "actualSource": "      \u003cSnapshotDiffReportListing\u003e snapshotDiffReportListingRemoteIterator(\n      final Path snapshotDir, final String fromSnapshot,\n      final String toSnapshot) throws IOException {\n    Path absF \u003d fixRelativePart(snapshotDir);\n    return new FileSystemLinkResolver\n        \u003cRemoteIterator\u003cSnapshotDiffReportListing\u003e\u003e() {\n      @Override\n      public RemoteIterator\u003cSnapshotDiffReportListing\u003e doCall(final Path p)\n          throws IOException {\n        return new SnapshotDiffReportListingIterator(\n            getPathName(p), fromSnapshot, toSnapshot);\n      }\n\n      @Override\n      public RemoteIterator\u003cSnapshotDiffReportListing\u003e next(final FileSystem fs,\n          final Path p) throws IOException {\n        return ((DistributedFileSystem) fs)\n            .snapshotDiffReportListingRemoteIterator(p, fromSnapshot,\n                toSnapshot);\n      }\n    }.resolve(this, absF);\n\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java"
    }
  }
}