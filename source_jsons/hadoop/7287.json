{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "EditLogTailer.java",
  "functionName": "catchupDuringFailover",
  "functionId": "catchupDuringFailover",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/EditLogTailer.java",
  "functionStartLine": 291,
  "functionEndLine": 321,
  "numCommitsSeen": 51,
  "timeTaken": 2564,
  "changeHistory": [
    "ebb878bab991c242b5089a18881aa10abf318ea0",
    "f43a20c529ac3f104add95b222de6580757b3763",
    "c859e87d1efdc48b9a7f6d2b41151094825d881e",
    "36d1c49486587c2dbb193e8538b1d4510c462fa6",
    "2481474bd9c50a23e4fd2eea67ac2dea11ca1f58"
  ],
  "changeHistoryShort": {
    "ebb878bab991c242b5089a18881aa10abf318ea0": "Ybodychange",
    "f43a20c529ac3f104add95b222de6580757b3763": "Ybodychange",
    "c859e87d1efdc48b9a7f6d2b41151094825d881e": "Ybodychange",
    "36d1c49486587c2dbb193e8538b1d4510c462fa6": "Ybodychange",
    "2481474bd9c50a23e4fd2eea67ac2dea11ca1f58": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ebb878bab991c242b5089a18881aa10abf318ea0": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-15323. StandbyNode fails transition to active due to insufficient transaction tailing. Contributed by Konstantin V Shvachko.",
      "commitDate": "04/05/20 10:29 AM",
      "commitName": "ebb878bab991c242b5089a18881aa10abf318ea0",
      "commitAuthor": "Konstantin V Shvachko",
      "commitDateOld": "21/08/19 1:55 PM",
      "commitNameOld": "0f598aed13d0fc55908bab3f1653f20084153299",
      "commitAuthorOld": "Ayush Saxena",
      "daysBetweenCommits": 256.86,
      "commitsBetweenForRepo": 1140,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,31 @@\n   public void catchupDuringFailover() throws IOException {\n     Preconditions.checkState(tailerThread \u003d\u003d null ||\n         !tailerThread.isAlive(),\n         \"Tailer thread should not be running once failover starts\");\n     // Important to do tailing as the login user, in case the shared\n     // edits storage is implemented by a JournalManager that depends\n     // on security credentials to access the logs (eg QuorumJournalManager).\n     SecurityUtil.doAsLoginUser(new PrivilegedExceptionAction\u003cVoid\u003e() {\n       @Override\n       public Void run() throws Exception {\n-        try {\n-          // It is already under the full name system lock and the checkpointer\n-          // thread is already stopped. No need to acqure any other lock.\n-          doTailEdits();\n-        } catch (InterruptedException e) {\n-          throw new IOException(e);\n-        }\n+        long editsTailed \u003d 0;\n+        // Fully tail the journal to the end\n+        do {\n+          long startTime \u003d Time.monotonicNow();\n+          try {\n+            NameNode.getNameNodeMetrics().addEditLogTailInterval(\n+                startTime - lastLoadTimeMs);\n+            // It is already under the name system lock and the checkpointer\n+            // thread is already stopped. No need to acquire any other lock.\n+            editsTailed \u003d doTailEdits();\n+          } catch (InterruptedException e) {\n+            throw new IOException(e);\n+          } finally {\n+            NameNode.getNameNodeMetrics().addEditLogTailTime(\n+                Time.monotonicNow() - startTime);\n+          }\n+        } while(editsTailed \u003e 0);\n         return null;\n       }\n     });\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void catchupDuringFailover() throws IOException {\n    Preconditions.checkState(tailerThread \u003d\u003d null ||\n        !tailerThread.isAlive(),\n        \"Tailer thread should not be running once failover starts\");\n    // Important to do tailing as the login user, in case the shared\n    // edits storage is implemented by a JournalManager that depends\n    // on security credentials to access the logs (eg QuorumJournalManager).\n    SecurityUtil.doAsLoginUser(new PrivilegedExceptionAction\u003cVoid\u003e() {\n      @Override\n      public Void run() throws Exception {\n        long editsTailed \u003d 0;\n        // Fully tail the journal to the end\n        do {\n          long startTime \u003d Time.monotonicNow();\n          try {\n            NameNode.getNameNodeMetrics().addEditLogTailInterval(\n                startTime - lastLoadTimeMs);\n            // It is already under the name system lock and the checkpointer\n            // thread is already stopped. No need to acquire any other lock.\n            editsTailed \u003d doTailEdits();\n          } catch (InterruptedException e) {\n            throw new IOException(e);\n          } finally {\n            NameNode.getNameNodeMetrics().addEditLogTailTime(\n                Time.monotonicNow() - startTime);\n          }\n        } while(editsTailed \u003e 0);\n        return null;\n      }\n    });\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/EditLogTailer.java",
      "extendedDetails": {}
    },
    "f43a20c529ac3f104add95b222de6580757b3763": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7097. Allow block reports to be processed during checkpointing on standby name node. (kihwal via wang)\n",
      "commitDate": "25/11/14 3:37 PM",
      "commitName": "f43a20c529ac3f104add95b222de6580757b3763",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "24/03/14 4:32 PM",
      "commitNameOld": "c2ef7e239eb0e81cf8a3e971378e9e696202de67",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 246.0,
      "commitsBetweenForRepo": 2003,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,21 @@\n   public void catchupDuringFailover() throws IOException {\n     Preconditions.checkState(tailerThread \u003d\u003d null ||\n         !tailerThread.isAlive(),\n         \"Tailer thread should not be running once failover starts\");\n     // Important to do tailing as the login user, in case the shared\n     // edits storage is implemented by a JournalManager that depends\n     // on security credentials to access the logs (eg QuorumJournalManager).\n     SecurityUtil.doAsLoginUser(new PrivilegedExceptionAction\u003cVoid\u003e() {\n       @Override\n       public Void run() throws Exception {\n         try {\n+          // It is already under the full name system lock and the checkpointer\n+          // thread is already stopped. No need to acqure any other lock.\n           doTailEdits();\n         } catch (InterruptedException e) {\n           throw new IOException(e);\n         }\n         return null;\n       }\n     });\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void catchupDuringFailover() throws IOException {\n    Preconditions.checkState(tailerThread \u003d\u003d null ||\n        !tailerThread.isAlive(),\n        \"Tailer thread should not be running once failover starts\");\n    // Important to do tailing as the login user, in case the shared\n    // edits storage is implemented by a JournalManager that depends\n    // on security credentials to access the logs (eg QuorumJournalManager).\n    SecurityUtil.doAsLoginUser(new PrivilegedExceptionAction\u003cVoid\u003e() {\n      @Override\n      public Void run() throws Exception {\n        try {\n          // It is already under the full name system lock and the checkpointer\n          // thread is already stopped. No need to acqure any other lock.\n          doTailEdits();\n        } catch (InterruptedException e) {\n          throw new IOException(e);\n        }\n        return null;\n      }\n    });\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/EditLogTailer.java",
      "extendedDetails": {}
    },
    "c859e87d1efdc48b9a7f6d2b41151094825d881e": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3915. QJM: Failover fails with auth error in secure cluster. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3077@1383242 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/09/12 9:53 PM",
      "commitName": "c859e87d1efdc48b9a7f6d2b41151094825d881e",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "18/07/12 4:42 PM",
      "commitNameOld": "23b6ed973e1ff5ace1e3a97cded008908e8daa55",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 54.22,
      "commitsBetweenForRepo": 325,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,19 @@\n   public void catchupDuringFailover() throws IOException {\n     Preconditions.checkState(tailerThread \u003d\u003d null ||\n         !tailerThread.isAlive(),\n         \"Tailer thread should not be running once failover starts\");\n-    try {\n-      doTailEdits();\n-    } catch (InterruptedException e) {\n-      throw new IOException(e);\n-    }\n+    // Important to do tailing as the login user, in case the shared\n+    // edits storage is implemented by a JournalManager that depends\n+    // on security credentials to access the logs (eg QuorumJournalManager).\n+    SecurityUtil.doAsLoginUser(new PrivilegedExceptionAction\u003cVoid\u003e() {\n+      @Override\n+      public Void run() throws Exception {\n+        try {\n+          doTailEdits();\n+        } catch (InterruptedException e) {\n+          throw new IOException(e);\n+        }\n+        return null;\n+      }\n+    });\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void catchupDuringFailover() throws IOException {\n    Preconditions.checkState(tailerThread \u003d\u003d null ||\n        !tailerThread.isAlive(),\n        \"Tailer thread should not be running once failover starts\");\n    // Important to do tailing as the login user, in case the shared\n    // edits storage is implemented by a JournalManager that depends\n    // on security credentials to access the logs (eg QuorumJournalManager).\n    SecurityUtil.doAsLoginUser(new PrivilegedExceptionAction\u003cVoid\u003e() {\n      @Override\n      public Void run() throws Exception {\n        try {\n          doTailEdits();\n        } catch (InterruptedException e) {\n          throw new IOException(e);\n        }\n        return null;\n      }\n    });\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/EditLogTailer.java",
      "extendedDetails": {}
    },
    "36d1c49486587c2dbb193e8538b1d4510c462fa6": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2693. Fix synchronization issues around state transition. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1221582 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "20/12/11 7:03 PM",
      "commitName": "36d1c49486587c2dbb193e8538b1d4510c462fa6",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "15/12/11 8:18 PM",
      "commitNameOld": "71071b904d0c9aec7b3713d41740f24182e81c36",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 4.95,
      "commitsBetweenForRepo": 24,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,10 @@\n   public void catchupDuringFailover() throws IOException {\n     Preconditions.checkState(tailerThread \u003d\u003d null ||\n         !tailerThread.isAlive(),\n         \"Tailer thread should not be running once failover starts\");\n-    doTailEdits();\n+    try {\n+      doTailEdits();\n+    } catch (InterruptedException e) {\n+      throw new IOException(e);\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void catchupDuringFailover() throws IOException {\n    Preconditions.checkState(tailerThread \u003d\u003d null ||\n        !tailerThread.isAlive(),\n        \"Tailer thread should not be running once failover starts\");\n    try {\n      doTailEdits();\n    } catch (InterruptedException e) {\n      throw new IOException(e);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/EditLogTailer.java",
      "extendedDetails": {}
    },
    "2481474bd9c50a23e4fd2eea67ac2dea11ca1f58": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-2634. Standby needs to ingest latest edit logs before transitioning to active. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1212187 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/12/11 3:55 PM",
      "commitName": "2481474bd9c50a23e4fd2eea67ac2dea11ca1f58",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,6 @@\n+  public void catchupDuringFailover() throws IOException {\n+    Preconditions.checkState(tailerThread \u003d\u003d null ||\n+        !tailerThread.isAlive(),\n+        \"Tailer thread should not be running once failover starts\");\n+    doTailEdits();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void catchupDuringFailover() throws IOException {\n    Preconditions.checkState(tailerThread \u003d\u003d null ||\n        !tailerThread.isAlive(),\n        \"Tailer thread should not be running once failover starts\");\n    doTailEdits();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/EditLogTailer.java"
    }
  }
}