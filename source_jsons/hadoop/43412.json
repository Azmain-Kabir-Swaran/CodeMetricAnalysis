{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ComponentInstance.java",
  "functionName": "updateContainerStatus",
  "functionId": "updateContainerStatus___status-ContainerStatus",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/component/instance/ComponentInstance.java",
  "functionStartLine": 867,
  "functionEndLine": 899,
  "numCommitsSeen": 35,
  "timeTaken": 4463,
  "changeHistory": [
    "f82922dcfae0b7e3e68ce970c441d8b7edc59acf",
    "ccdd982e51f4413bc2e98d03e0a05b1133042a31",
    "1b790f4dd1f682423d5dbb8e70c6225cbddce989",
    "0ff94563b9b62d0426d475dc0f84152b68f1ff0d",
    "f4d5d20286eb05449f6fd7cd6ff0554228205fe2",
    "a6c4bd74b636d0715ffb4c1aca9ef4e49201aa02",
    "40ab068eabe50875449d601471619a4e82fff86d",
    "2191f5b533c6b4763f5d443d21127f1f8552ce64",
    "1888318c89776f0bf354c1b13e3ee169e14ff638"
  ],
  "changeHistoryShort": {
    "f82922dcfae0b7e3e68ce970c441d8b7edc59acf": "Ybodychange",
    "ccdd982e51f4413bc2e98d03e0a05b1133042a31": "Ybodychange",
    "1b790f4dd1f682423d5dbb8e70c6225cbddce989": "Ybodychange",
    "0ff94563b9b62d0426d475dc0f84152b68f1ff0d": "Ybodychange",
    "f4d5d20286eb05449f6fd7cd6ff0554228205fe2": "Ybodychange",
    "a6c4bd74b636d0715ffb4c1aca9ef4e49201aa02": "Ybodychange",
    "40ab068eabe50875449d601471619a4e82fff86d": "Yfilerename",
    "2191f5b533c6b4763f5d443d21127f1f8552ce64": "Ybodychange",
    "1888318c89776f0bf354c1b13e3ee169e14ff638": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f82922dcfae0b7e3e68ce970c441d8b7edc59acf": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5168. Added exposed port information for Docker container.\n           Contributed by Xun Liu\n",
      "commitDate": "21/12/18 4:44 PM",
      "commitName": "f82922dcfae0b7e3e68ce970c441d8b7edc59acf",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "18/12/18 3:02 PM",
      "commitNameOld": "ccdd982e51f4413bc2e98d03e0a05b1133042a31",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 3.07,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,33 @@\n   public void updateContainerStatus(ContainerStatus status) {\n     org.apache.hadoop.yarn.service.api.records.Container containerRec \u003d\n         getCompSpec().getContainer(status.getContainerId().toString());\n     boolean doRegistryUpdate \u003d true;\n     if (containerRec !\u003d null) {\n       String existingIP \u003d containerRec.getIp();\n       String newIP \u003d StringUtils.join(\",\", status.getIPs());\n       if (existingIP !\u003d null \u0026\u0026 newIP.equals(existingIP)) {\n         doRegistryUpdate \u003d false;\n       }\n     }\n+    ObjectMapper mapper \u003d new ObjectMapper();\n+    try {\n+      Map\u003cString, List\u003cMap\u003cString, String\u003e\u003e\u003e ports \u003d null;\n+      ports \u003d mapper.readValue(status.getExposedPorts(),\n+          new TypeReference\u003cMap\u003cString, List\u003cMap\u003cString, String\u003e\u003e\u003e\u003e(){});\n+      container.setExposedPorts(ports);\n+    } catch (IOException e) {\n+      LOG.warn(\"Unable to process container ports mapping: {}\", e);\n+    }\n     setContainerStatus(status.getContainerId(), status);\n     if (containerRec !\u003d null \u0026\u0026 timelineServiceEnabled \u0026\u0026 doRegistryUpdate) {\n       serviceTimelinePublisher.componentInstanceIPHostUpdated(containerRec);\n     }\n \n     if (doRegistryUpdate) {\n       cleanupRegistry(status.getContainerId());\n       LOG.info(\n           getCompInstanceId() + \" new IP \u003d \" + status.getIPs() + \", host \u003d \"\n               + status.getHost() + \", updating registry\");\n       updateServiceRecord(yarnRegistryOperations, status);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void updateContainerStatus(ContainerStatus status) {\n    org.apache.hadoop.yarn.service.api.records.Container containerRec \u003d\n        getCompSpec().getContainer(status.getContainerId().toString());\n    boolean doRegistryUpdate \u003d true;\n    if (containerRec !\u003d null) {\n      String existingIP \u003d containerRec.getIp();\n      String newIP \u003d StringUtils.join(\",\", status.getIPs());\n      if (existingIP !\u003d null \u0026\u0026 newIP.equals(existingIP)) {\n        doRegistryUpdate \u003d false;\n      }\n    }\n    ObjectMapper mapper \u003d new ObjectMapper();\n    try {\n      Map\u003cString, List\u003cMap\u003cString, String\u003e\u003e\u003e ports \u003d null;\n      ports \u003d mapper.readValue(status.getExposedPorts(),\n          new TypeReference\u003cMap\u003cString, List\u003cMap\u003cString, String\u003e\u003e\u003e\u003e(){});\n      container.setExposedPorts(ports);\n    } catch (IOException e) {\n      LOG.warn(\"Unable to process container ports mapping: {}\", e);\n    }\n    setContainerStatus(status.getContainerId(), status);\n    if (containerRec !\u003d null \u0026\u0026 timelineServiceEnabled \u0026\u0026 doRegistryUpdate) {\n      serviceTimelinePublisher.componentInstanceIPHostUpdated(containerRec);\n    }\n\n    if (doRegistryUpdate) {\n      cleanupRegistry(status.getContainerId());\n      LOG.info(\n          getCompInstanceId() + \" new IP \u003d \" + status.getIPs() + \", host \u003d \"\n              + status.getHost() + \", updating registry\");\n      updateServiceRecord(yarnRegistryOperations, status);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/component/instance/ComponentInstance.java",
      "extendedDetails": {}
    },
    "ccdd982e51f4413bc2e98d03e0a05b1133042a31": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9084.  Reset container state and defer readiness check for upgrade.\n            Contributed by Chandni Singh\n",
      "commitDate": "18/12/18 3:02 PM",
      "commitName": "ccdd982e51f4413bc2e98d03e0a05b1133042a31",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "05/12/18 2:00 PM",
      "commitNameOld": "1b790f4dd1f682423d5dbb8e70c6225cbddce989",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 13.04,
      "commitsBetweenForRepo": 73,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,24 @@\n   public void updateContainerStatus(ContainerStatus status) {\n-    setContainerStatus(status);\n-    org.apache.hadoop.yarn.service.api.records.Container container \u003d\n+    org.apache.hadoop.yarn.service.api.records.Container containerRec \u003d\n         getCompSpec().getContainer(status.getContainerId().toString());\n     boolean doRegistryUpdate \u003d true;\n-    if (container !\u003d null) {\n-      String existingIP \u003d container.getIp();\n+    if (containerRec !\u003d null) {\n+      String existingIP \u003d containerRec.getIp();\n       String newIP \u003d StringUtils.join(\",\", status.getIPs());\n-      container.setIp(newIP);\n-      container.setHostname(status.getHost());\n       if (existingIP !\u003d null \u0026\u0026 newIP.equals(existingIP)) {\n         doRegistryUpdate \u003d false;\n       }\n-      if (timelineServiceEnabled \u0026\u0026 doRegistryUpdate) {\n-        serviceTimelinePublisher.componentInstanceIPHostUpdated(container);\n-      }\n     }\n+    setContainerStatus(status.getContainerId(), status);\n+    if (containerRec !\u003d null \u0026\u0026 timelineServiceEnabled \u0026\u0026 doRegistryUpdate) {\n+      serviceTimelinePublisher.componentInstanceIPHostUpdated(containerRec);\n+    }\n+\n     if (doRegistryUpdate) {\n       cleanupRegistry(status.getContainerId());\n       LOG.info(\n           getCompInstanceId() + \" new IP \u003d \" + status.getIPs() + \", host \u003d \"\n               + status.getHost() + \", updating registry\");\n       updateServiceRecord(yarnRegistryOperations, status);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void updateContainerStatus(ContainerStatus status) {\n    org.apache.hadoop.yarn.service.api.records.Container containerRec \u003d\n        getCompSpec().getContainer(status.getContainerId().toString());\n    boolean doRegistryUpdate \u003d true;\n    if (containerRec !\u003d null) {\n      String existingIP \u003d containerRec.getIp();\n      String newIP \u003d StringUtils.join(\",\", status.getIPs());\n      if (existingIP !\u003d null \u0026\u0026 newIP.equals(existingIP)) {\n        doRegistryUpdate \u003d false;\n      }\n    }\n    setContainerStatus(status.getContainerId(), status);\n    if (containerRec !\u003d null \u0026\u0026 timelineServiceEnabled \u0026\u0026 doRegistryUpdate) {\n      serviceTimelinePublisher.componentInstanceIPHostUpdated(containerRec);\n    }\n\n    if (doRegistryUpdate) {\n      cleanupRegistry(status.getContainerId());\n      LOG.info(\n          getCompInstanceId() + \" new IP \u003d \" + status.getIPs() + \", host \u003d \"\n              + status.getHost() + \", updating registry\");\n      updateServiceRecord(yarnRegistryOperations, status);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/component/instance/ComponentInstance.java",
      "extendedDetails": {}
    },
    "1b790f4dd1f682423d5dbb8e70c6225cbddce989": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9071.  Improved status update for reinitialized containers.\n            Contributed by Chandni Singh\n",
      "commitDate": "05/12/18 2:00 PM",
      "commitName": "1b790f4dd1f682423d5dbb8e70c6225cbddce989",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "27/11/18 3:36 PM",
      "commitNameOld": "f657a2a661ed7470915fa33ea4bbda2f4980c8b2",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 7.93,
      "commitsBetweenForRepo": 61,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n   public void updateContainerStatus(ContainerStatus status) {\n-    this.status \u003d status;\n+    setContainerStatus(status);\n     org.apache.hadoop.yarn.service.api.records.Container container \u003d\n         getCompSpec().getContainer(status.getContainerId().toString());\n     boolean doRegistryUpdate \u003d true;\n     if (container !\u003d null) {\n       String existingIP \u003d container.getIp();\n       String newIP \u003d StringUtils.join(\",\", status.getIPs());\n       container.setIp(newIP);\n       container.setHostname(status.getHost());\n       if (existingIP !\u003d null \u0026\u0026 newIP.equals(existingIP)) {\n         doRegistryUpdate \u003d false;\n       }\n       if (timelineServiceEnabled \u0026\u0026 doRegistryUpdate) {\n         serviceTimelinePublisher.componentInstanceIPHostUpdated(container);\n       }\n     }\n     if (doRegistryUpdate) {\n       cleanupRegistry(status.getContainerId());\n       LOG.info(\n           getCompInstanceId() + \" new IP \u003d \" + status.getIPs() + \", host \u003d \"\n               + status.getHost() + \", updating registry\");\n       updateServiceRecord(yarnRegistryOperations, status);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void updateContainerStatus(ContainerStatus status) {\n    setContainerStatus(status);\n    org.apache.hadoop.yarn.service.api.records.Container container \u003d\n        getCompSpec().getContainer(status.getContainerId().toString());\n    boolean doRegistryUpdate \u003d true;\n    if (container !\u003d null) {\n      String existingIP \u003d container.getIp();\n      String newIP \u003d StringUtils.join(\",\", status.getIPs());\n      container.setIp(newIP);\n      container.setHostname(status.getHost());\n      if (existingIP !\u003d null \u0026\u0026 newIP.equals(existingIP)) {\n        doRegistryUpdate \u003d false;\n      }\n      if (timelineServiceEnabled \u0026\u0026 doRegistryUpdate) {\n        serviceTimelinePublisher.componentInstanceIPHostUpdated(container);\n      }\n    }\n    if (doRegistryUpdate) {\n      cleanupRegistry(status.getContainerId());\n      LOG.info(\n          getCompInstanceId() + \" new IP \u003d \" + status.getIPs() + \", host \u003d \"\n              + status.getHost() + \", updating registry\");\n      updateServiceRecord(yarnRegistryOperations, status);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/component/instance/ComponentInstance.java",
      "extendedDetails": {}
    },
    "0ff94563b9b62d0426d475dc0f84152b68f1ff0d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8265.  Improve DNS handling on docker IP changes.\n            Contributed by Billie Rinaldi\n",
      "commitDate": "11/05/18 10:37 PM",
      "commitName": "0ff94563b9b62d0426d475dc0f84152b68f1ff0d",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "11/05/18 12:49 PM",
      "commitNameOld": "ca612e353fc3e3766868ec0816de035e48b1f5b4",
      "commitAuthorOld": "Billie Rinaldi",
      "daysBetweenCommits": 0.41,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,25 @@\n   public void updateContainerStatus(ContainerStatus status) {\n     this.status \u003d status;\n     org.apache.hadoop.yarn.service.api.records.Container container \u003d\n         getCompSpec().getContainer(status.getContainerId().toString());\n+    boolean doRegistryUpdate \u003d true;\n     if (container !\u003d null) {\n-      container.setIp(StringUtils.join(\",\", status.getIPs()));\n+      String existingIP \u003d container.getIp();\n+      String newIP \u003d StringUtils.join(\",\", status.getIPs());\n+      container.setIp(newIP);\n       container.setHostname(status.getHost());\n-      if (timelineServiceEnabled) {\n+      if (existingIP !\u003d null \u0026\u0026 newIP.equals(existingIP)) {\n+        doRegistryUpdate \u003d false;\n+      }\n+      if (timelineServiceEnabled \u0026\u0026 doRegistryUpdate) {\n         serviceTimelinePublisher.componentInstanceIPHostUpdated(container);\n       }\n     }\n-    updateServiceRecord(yarnRegistryOperations, status);\n+    if (doRegistryUpdate) {\n+      cleanupRegistry(status.getContainerId());\n+      LOG.info(\n+          getCompInstanceId() + \" new IP \u003d \" + status.getIPs() + \", host \u003d \"\n+              + status.getHost() + \", updating registry\");\n+      updateServiceRecord(yarnRegistryOperations, status);\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void updateContainerStatus(ContainerStatus status) {\n    this.status \u003d status;\n    org.apache.hadoop.yarn.service.api.records.Container container \u003d\n        getCompSpec().getContainer(status.getContainerId().toString());\n    boolean doRegistryUpdate \u003d true;\n    if (container !\u003d null) {\n      String existingIP \u003d container.getIp();\n      String newIP \u003d StringUtils.join(\",\", status.getIPs());\n      container.setIp(newIP);\n      container.setHostname(status.getHost());\n      if (existingIP !\u003d null \u0026\u0026 newIP.equals(existingIP)) {\n        doRegistryUpdate \u003d false;\n      }\n      if (timelineServiceEnabled \u0026\u0026 doRegistryUpdate) {\n        serviceTimelinePublisher.componentInstanceIPHostUpdated(container);\n      }\n    }\n    if (doRegistryUpdate) {\n      cleanupRegistry(status.getContainerId());\n      LOG.info(\n          getCompInstanceId() + \" new IP \u003d \" + status.getIPs() + \", host \u003d \"\n              + status.getHost() + \", updating registry\");\n      updateServiceRecord(yarnRegistryOperations, status);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/component/instance/ComponentInstance.java",
      "extendedDetails": {}
    },
    "f4d5d20286eb05449f6fd7cd6ff0554228205fe2": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7486. Race condition in service AM that can cause NPE. Contributed by Jian He\n",
      "commitDate": "16/11/17 7:58 AM",
      "commitName": "f4d5d20286eb05449f6fd7cd6ff0554228205fe2",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "a127f7b0fbde3942ca4329d5463bb8fe421daf7b",
      "commitAuthorOld": "Billie Rinaldi",
      "daysBetweenCommits": 9.77,
      "commitsBetweenForRepo": 61,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n   public void updateContainerStatus(ContainerStatus status) {\n     this.status \u003d status;\n     org.apache.hadoop.yarn.service.api.records.Container container \u003d\n-        getCompSpec().getContainer(getContainerId().toString());\n+        getCompSpec().getContainer(status.getContainerId().toString());\n     if (container !\u003d null) {\n       container.setIp(StringUtils.join(\",\", status.getIPs()));\n       container.setHostname(status.getHost());\n       if (timelineServiceEnabled) {\n         serviceTimelinePublisher.componentInstanceIPHostUpdated(container);\n       }\n     }\n     updateServiceRecord(yarnRegistryOperations, status);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void updateContainerStatus(ContainerStatus status) {\n    this.status \u003d status;\n    org.apache.hadoop.yarn.service.api.records.Container container \u003d\n        getCompSpec().getContainer(status.getContainerId().toString());\n    if (container !\u003d null) {\n      container.setIp(StringUtils.join(\",\", status.getIPs()));\n      container.setHostname(status.getHost());\n      if (timelineServiceEnabled) {\n        serviceTimelinePublisher.componentInstanceIPHostUpdated(container);\n      }\n    }\n    updateServiceRecord(yarnRegistryOperations, status);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/component/instance/ComponentInstance.java",
      "extendedDetails": {}
    },
    "a6c4bd74b636d0715ffb4c1aca9ef4e49201aa02": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6394. Support specifying YARN related params in the service REST API. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "a6c4bd74b636d0715ffb4c1aca9ef4e49201aa02",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "68acd88dcbfe03a0134c60b5398dfaa31ad2b786",
      "commitAuthorOld": "Billie Rinaldi",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n   public void updateContainerStatus(ContainerStatus status) {\n     this.status \u003d status;\n     org.apache.hadoop.yarn.service.api.records.Container container \u003d\n         getCompSpec().getContainer(getContainerId().toString());\n     if (container !\u003d null) {\n       container.setIp(StringUtils.join(\",\", status.getIPs()));\n       container.setHostname(status.getHost());\n       if (timelineServiceEnabled) {\n-        serviceTimelinePublisher.componentInstanceUpdated(container);\n+        serviceTimelinePublisher.componentInstanceIPHostUpdated(container);\n       }\n     }\n     updateServiceRecord(yarnRegistryOperations, status);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void updateContainerStatus(ContainerStatus status) {\n    this.status \u003d status;\n    org.apache.hadoop.yarn.service.api.records.Container container \u003d\n        getCompSpec().getContainer(getContainerId().toString());\n    if (container !\u003d null) {\n      container.setIp(StringUtils.join(\",\", status.getIPs()));\n      container.setHostname(status.getHost());\n      if (timelineServiceEnabled) {\n        serviceTimelinePublisher.componentInstanceIPHostUpdated(container);\n      }\n    }\n    updateServiceRecord(yarnRegistryOperations, status);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/component/instance/ComponentInstance.java",
      "extendedDetails": {}
    },
    "40ab068eabe50875449d601471619a4e82fff86d": {
      "type": "Yfilerename",
      "commitMessage": "YARN-7091. Rename application to service in yarn-native-services. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "40ab068eabe50875449d601471619a4e82fff86d",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "2ba38ce8ecb1cf3836fab48cdb2c5ae7e1b5427d",
      "commitAuthorOld": "Gour Saha",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void updateContainerStatus(ContainerStatus status) {\n    this.status \u003d status;\n    org.apache.hadoop.yarn.service.api.records.Container container \u003d\n        getCompSpec().getContainer(getContainerId().toString());\n    if (container !\u003d null) {\n      container.setIp(StringUtils.join(\",\", status.getIPs()));\n      container.setHostname(status.getHost());\n      if (timelineServiceEnabled) {\n        serviceTimelinePublisher.componentInstanceUpdated(container);\n      }\n    }\n    updateServiceRecord(yarnRegistryOperations, status);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/component/instance/ComponentInstance.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/compinstance/ComponentInstance.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/component/instance/ComponentInstance.java"
      }
    },
    "2191f5b533c6b4763f5d443d21127f1f8552ce64": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7050. Post cleanup after YARN-6903, removal of org.apache.slider package. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "2191f5b533c6b4763f5d443d21127f1f8552ce64",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "79bf5c084d4a063f1a933cae498af23edfd46792",
      "commitAuthorOld": "Billie Rinaldi",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n   public void updateContainerStatus(ContainerStatus status) {\n     this.status \u003d status;\n-    org.apache.slider.api.resource.Container container \u003d\n+    org.apache.hadoop.yarn.service.api.records.Container container \u003d\n         getCompSpec().getContainer(getContainerId().toString());\n     if (container !\u003d null) {\n       container.setIp(StringUtils.join(\",\", status.getIPs()));\n       container.setHostname(status.getHost());\n       if (timelineServiceEnabled) {\n         serviceTimelinePublisher.componentInstanceUpdated(container);\n       }\n     }\n     updateServiceRecord(yarnRegistryOperations, status);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void updateContainerStatus(ContainerStatus status) {\n    this.status \u003d status;\n    org.apache.hadoop.yarn.service.api.records.Container container \u003d\n        getCompSpec().getContainer(getContainerId().toString());\n    if (container !\u003d null) {\n      container.setIp(StringUtils.join(\",\", status.getIPs()));\n      container.setHostname(status.getHost());\n      if (timelineServiceEnabled) {\n        serviceTimelinePublisher.componentInstanceUpdated(container);\n      }\n    }\n    updateServiceRecord(yarnRegistryOperations, status);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/compinstance/ComponentInstance.java",
      "extendedDetails": {}
    },
    "1888318c89776f0bf354c1b13e3ee169e14ff638": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6903. Yarn-native-service framework core rewrite. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "1888318c89776f0bf354c1b13e3ee169e14ff638",
      "commitAuthor": "Billie Rinaldi",
      "diff": "@@ -0,0 +1,13 @@\n+  public void updateContainerStatus(ContainerStatus status) {\n+    this.status \u003d status;\n+    org.apache.slider.api.resource.Container container \u003d\n+        getCompSpec().getContainer(getContainerId().toString());\n+    if (container !\u003d null) {\n+      container.setIp(StringUtils.join(\",\", status.getIPs()));\n+      container.setHostname(status.getHost());\n+      if (timelineServiceEnabled) {\n+        serviceTimelinePublisher.componentInstanceUpdated(container);\n+      }\n+    }\n+    updateServiceRecord(yarnRegistryOperations, status);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void updateContainerStatus(ContainerStatus status) {\n    this.status \u003d status;\n    org.apache.slider.api.resource.Container container \u003d\n        getCompSpec().getContainer(getContainerId().toString());\n    if (container !\u003d null) {\n      container.setIp(StringUtils.join(\",\", status.getIPs()));\n      container.setHostname(status.getHost());\n      if (timelineServiceEnabled) {\n        serviceTimelinePublisher.componentInstanceUpdated(container);\n      }\n    }\n    updateServiceRecord(yarnRegistryOperations, status);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/compinstance/ComponentInstance.java"
    }
  }
}