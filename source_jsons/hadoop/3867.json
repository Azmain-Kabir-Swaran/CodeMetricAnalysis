{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DistributedFileSystem.java",
  "functionName": "concat",
  "functionId": "concat___trg-Path__psrcs-Path[]",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
  "functionStartLine": 851,
  "functionEndLine": 891,
  "numCommitsSeen": 214,
  "timeTaken": 8298,
  "changeHistory": [
    "687233f20d24c29041929dd0a99d963cec54b6df",
    "ac1aa6c8197268ea83f44747199d560be9e299ae",
    "1c030c6e58dc83152f933323bb7743ad47f5af27",
    "8767e4cde172b6e6070e3fd45325ede617b99343",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "687233f20d24c29041929dd0a99d963cec54b6df": "Ybodychange",
    "ac1aa6c8197268ea83f44747199d560be9e299ae": "Ybodychange",
    "1c030c6e58dc83152f933323bb7743ad47f5af27": "Yfilerename",
    "8767e4cde172b6e6070e3fd45325ede617b99343": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "687233f20d24c29041929dd0a99d963cec54b6df": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13065. Add a new interface for retrieving FS and FC Statistics (Mingliang Liu via cmccabe)\n",
      "commitDate": "11/05/16 1:45 PM",
      "commitName": "687233f20d24c29041929dd0a99d963cec54b6df",
      "commitAuthor": "Colin Patrick Mccabe",
      "commitDateOld": "02/05/16 7:30 PM",
      "commitNameOld": "45a753ccf79d334513c7bc8f2b81c89a4697075d",
      "commitAuthorOld": "Xiaoyu Yao",
      "daysBetweenCommits": 8.76,
      "commitsBetweenForRepo": 55,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,41 @@\n   public void concat(Path trg, Path [] psrcs) throws IOException {\n     statistics.incrementWriteOps(1);\n+    storageStatistics.incrementOpCounter(OpType.CONCAT);\n     // Make target absolute\n     Path absF \u003d fixRelativePart(trg);\n     // Make all srcs absolute\n     Path[] srcs \u003d new Path[psrcs.length];\n     for (int i\u003d0; i\u003cpsrcs.length; i++) {\n       srcs[i] \u003d fixRelativePart(psrcs[i]);\n     }\n     // Try the concat without resolving any links\n     String[] srcsStr \u003d new String[psrcs.length];\n     try {\n       for (int i\u003d0; i\u003cpsrcs.length; i++) {\n         srcsStr[i] \u003d getPathName(srcs[i]);\n       }\n       dfs.concat(getPathName(absF), srcsStr);\n     } catch (UnresolvedLinkException e) {\n       // Exception could be from trg or any src.\n       // Fully resolve trg and srcs. Fail if any of them are a symlink.\n       FileStatus stat \u003d getFileLinkStatus(absF);\n       if (stat.isSymlink()) {\n         throw new IOException(\"Cannot concat with a symlink target: \"\n             + trg + \" -\u003e \" + stat.getPath());\n       }\n       absF \u003d fixRelativePart(stat.getPath());\n       for (int i\u003d0; i\u003cpsrcs.length; i++) {\n         stat \u003d getFileLinkStatus(srcs[i]);\n         if (stat.isSymlink()) {\n           throw new IOException(\"Cannot concat with a symlink src: \"\n               + psrcs[i] + \" -\u003e \" + stat.getPath());\n         }\n         srcs[i] \u003d fixRelativePart(stat.getPath());\n       }\n       // Try concat again. Can still race with another symlink.\n       for (int i\u003d0; i\u003cpsrcs.length; i++) {\n         srcsStr[i] \u003d getPathName(srcs[i]);\n       }\n       dfs.concat(getPathName(absF), srcsStr);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void concat(Path trg, Path [] psrcs) throws IOException {\n    statistics.incrementWriteOps(1);\n    storageStatistics.incrementOpCounter(OpType.CONCAT);\n    // Make target absolute\n    Path absF \u003d fixRelativePart(trg);\n    // Make all srcs absolute\n    Path[] srcs \u003d new Path[psrcs.length];\n    for (int i\u003d0; i\u003cpsrcs.length; i++) {\n      srcs[i] \u003d fixRelativePart(psrcs[i]);\n    }\n    // Try the concat without resolving any links\n    String[] srcsStr \u003d new String[psrcs.length];\n    try {\n      for (int i\u003d0; i\u003cpsrcs.length; i++) {\n        srcsStr[i] \u003d getPathName(srcs[i]);\n      }\n      dfs.concat(getPathName(absF), srcsStr);\n    } catch (UnresolvedLinkException e) {\n      // Exception could be from trg or any src.\n      // Fully resolve trg and srcs. Fail if any of them are a symlink.\n      FileStatus stat \u003d getFileLinkStatus(absF);\n      if (stat.isSymlink()) {\n        throw new IOException(\"Cannot concat with a symlink target: \"\n            + trg + \" -\u003e \" + stat.getPath());\n      }\n      absF \u003d fixRelativePart(stat.getPath());\n      for (int i\u003d0; i\u003cpsrcs.length; i++) {\n        stat \u003d getFileLinkStatus(srcs[i]);\n        if (stat.isSymlink()) {\n          throw new IOException(\"Cannot concat with a symlink src: \"\n              + psrcs[i] + \" -\u003e \" + stat.getPath());\n        }\n        srcs[i] \u003d fixRelativePart(stat.getPath());\n      }\n      // Try concat again. Can still race with another symlink.\n      for (int i\u003d0; i\u003cpsrcs.length; i++) {\n        srcsStr[i] \u003d getPathName(srcs[i]);\n      }\n      dfs.concat(getPathName(absF), srcsStr);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
      "extendedDetails": {}
    },
    "ac1aa6c8197268ea83f44747199d560be9e299ae": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9431. DistributedFileSystem#concat fails if the target path is relative. Contributed by Kazuho Fujii.\n",
      "commitDate": "19/11/15 3:55 AM",
      "commitName": "ac1aa6c8197268ea83f44747199d560be9e299ae",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "23/10/15 6:07 PM",
      "commitNameOld": "86c92227fc56b6e06d879d250728e8dc8cbe98fe",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 26.45,
      "commitsBetweenForRepo": 192,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,40 @@\n   public void concat(Path trg, Path [] psrcs) throws IOException {\n     statistics.incrementWriteOps(1);\n     // Make target absolute\n     Path absF \u003d fixRelativePart(trg);\n     // Make all srcs absolute\n     Path[] srcs \u003d new Path[psrcs.length];\n     for (int i\u003d0; i\u003cpsrcs.length; i++) {\n       srcs[i] \u003d fixRelativePart(psrcs[i]);\n     }\n     // Try the concat without resolving any links\n     String[] srcsStr \u003d new String[psrcs.length];\n     try {\n       for (int i\u003d0; i\u003cpsrcs.length; i++) {\n         srcsStr[i] \u003d getPathName(srcs[i]);\n       }\n-      dfs.concat(getPathName(trg), srcsStr);\n+      dfs.concat(getPathName(absF), srcsStr);\n     } catch (UnresolvedLinkException e) {\n       // Exception could be from trg or any src.\n       // Fully resolve trg and srcs. Fail if any of them are a symlink.\n       FileStatus stat \u003d getFileLinkStatus(absF);\n       if (stat.isSymlink()) {\n         throw new IOException(\"Cannot concat with a symlink target: \"\n             + trg + \" -\u003e \" + stat.getPath());\n       }\n       absF \u003d fixRelativePart(stat.getPath());\n       for (int i\u003d0; i\u003cpsrcs.length; i++) {\n         stat \u003d getFileLinkStatus(srcs[i]);\n         if (stat.isSymlink()) {\n           throw new IOException(\"Cannot concat with a symlink src: \"\n               + psrcs[i] + \" -\u003e \" + stat.getPath());\n         }\n         srcs[i] \u003d fixRelativePart(stat.getPath());\n       }\n       // Try concat again. Can still race with another symlink.\n       for (int i\u003d0; i\u003cpsrcs.length; i++) {\n         srcsStr[i] \u003d getPathName(srcs[i]);\n       }\n       dfs.concat(getPathName(absF), srcsStr);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void concat(Path trg, Path [] psrcs) throws IOException {\n    statistics.incrementWriteOps(1);\n    // Make target absolute\n    Path absF \u003d fixRelativePart(trg);\n    // Make all srcs absolute\n    Path[] srcs \u003d new Path[psrcs.length];\n    for (int i\u003d0; i\u003cpsrcs.length; i++) {\n      srcs[i] \u003d fixRelativePart(psrcs[i]);\n    }\n    // Try the concat without resolving any links\n    String[] srcsStr \u003d new String[psrcs.length];\n    try {\n      for (int i\u003d0; i\u003cpsrcs.length; i++) {\n        srcsStr[i] \u003d getPathName(srcs[i]);\n      }\n      dfs.concat(getPathName(absF), srcsStr);\n    } catch (UnresolvedLinkException e) {\n      // Exception could be from trg or any src.\n      // Fully resolve trg and srcs. Fail if any of them are a symlink.\n      FileStatus stat \u003d getFileLinkStatus(absF);\n      if (stat.isSymlink()) {\n        throw new IOException(\"Cannot concat with a symlink target: \"\n            + trg + \" -\u003e \" + stat.getPath());\n      }\n      absF \u003d fixRelativePart(stat.getPath());\n      for (int i\u003d0; i\u003cpsrcs.length; i++) {\n        stat \u003d getFileLinkStatus(srcs[i]);\n        if (stat.isSymlink()) {\n          throw new IOException(\"Cannot concat with a symlink src: \"\n              + psrcs[i] + \" -\u003e \" + stat.getPath());\n        }\n        srcs[i] \u003d fixRelativePart(stat.getPath());\n      }\n      // Try concat again. Can still race with another symlink.\n      for (int i\u003d0; i\u003cpsrcs.length; i++) {\n        srcsStr[i] \u003d getPathName(srcs[i]);\n      }\n      dfs.concat(getPathName(absF), srcsStr);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
      "extendedDetails": {}
    },
    "1c030c6e58dc83152f933323bb7743ad47f5af27": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-8740. Move DistributedFileSystem to hadoop-hdfs-client. Contributed by Mingliang Liu.\n",
      "commitDate": "27/09/15 10:54 AM",
      "commitName": "1c030c6e58dc83152f933323bb7743ad47f5af27",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "27/09/15 1:42 AM",
      "commitNameOld": "f0f984e4e63d0dbafe93062a122ee051330db301",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 0.38,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void concat(Path trg, Path [] psrcs) throws IOException {\n    statistics.incrementWriteOps(1);\n    // Make target absolute\n    Path absF \u003d fixRelativePart(trg);\n    // Make all srcs absolute\n    Path[] srcs \u003d new Path[psrcs.length];\n    for (int i\u003d0; i\u003cpsrcs.length; i++) {\n      srcs[i] \u003d fixRelativePart(psrcs[i]);\n    }\n    // Try the concat without resolving any links\n    String[] srcsStr \u003d new String[psrcs.length];\n    try {\n      for (int i\u003d0; i\u003cpsrcs.length; i++) {\n        srcsStr[i] \u003d getPathName(srcs[i]);\n      }\n      dfs.concat(getPathName(trg), srcsStr);\n    } catch (UnresolvedLinkException e) {\n      // Exception could be from trg or any src.\n      // Fully resolve trg and srcs. Fail if any of them are a symlink.\n      FileStatus stat \u003d getFileLinkStatus(absF);\n      if (stat.isSymlink()) {\n        throw new IOException(\"Cannot concat with a symlink target: \"\n            + trg + \" -\u003e \" + stat.getPath());\n      }\n      absF \u003d fixRelativePart(stat.getPath());\n      for (int i\u003d0; i\u003cpsrcs.length; i++) {\n        stat \u003d getFileLinkStatus(srcs[i]);\n        if (stat.isSymlink()) {\n          throw new IOException(\"Cannot concat with a symlink src: \"\n              + psrcs[i] + \" -\u003e \" + stat.getPath());\n        }\n        srcs[i] \u003d fixRelativePart(stat.getPath());\n      }\n      // Try concat again. Can still race with another symlink.\n      for (int i\u003d0; i\u003cpsrcs.length; i++) {\n        srcsStr[i] \u003d getPathName(srcs[i]);\n      }\n      dfs.concat(getPathName(absF), srcsStr);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java"
      }
    },
    "8767e4cde172b6e6070e3fd45325ede617b99343": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-9418.  Add symlink support to DistributedFileSystem (Andrew Wang via Colin Patrick McCabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1502373 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/07/13 2:31 PM",
      "commitName": "8767e4cde172b6e6070e3fd45325ede617b99343",
      "commitAuthor": "Colin McCabe",
      "commitDateOld": "13/06/13 11:11 AM",
      "commitNameOld": "7e1744ccf9a9b5b035afbb182aad123a1d1d357f",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 28.14,
      "commitsBetweenForRepo": 172,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,40 @@\n   public void concat(Path trg, Path [] psrcs) throws IOException {\n-    String [] srcs \u003d new String [psrcs.length];\n-    for(int i\u003d0; i\u003cpsrcs.length; i++) {\n-      srcs[i] \u003d getPathName(psrcs[i]);\n-    }\n     statistics.incrementWriteOps(1);\n-    dfs.concat(getPathName(trg), srcs);\n+    // Make target absolute\n+    Path absF \u003d fixRelativePart(trg);\n+    // Make all srcs absolute\n+    Path[] srcs \u003d new Path[psrcs.length];\n+    for (int i\u003d0; i\u003cpsrcs.length; i++) {\n+      srcs[i] \u003d fixRelativePart(psrcs[i]);\n+    }\n+    // Try the concat without resolving any links\n+    String[] srcsStr \u003d new String[psrcs.length];\n+    try {\n+      for (int i\u003d0; i\u003cpsrcs.length; i++) {\n+        srcsStr[i] \u003d getPathName(srcs[i]);\n+      }\n+      dfs.concat(getPathName(trg), srcsStr);\n+    } catch (UnresolvedLinkException e) {\n+      // Exception could be from trg or any src.\n+      // Fully resolve trg and srcs. Fail if any of them are a symlink.\n+      FileStatus stat \u003d getFileLinkStatus(absF);\n+      if (stat.isSymlink()) {\n+        throw new IOException(\"Cannot concat with a symlink target: \"\n+            + trg + \" -\u003e \" + stat.getPath());\n+      }\n+      absF \u003d fixRelativePart(stat.getPath());\n+      for (int i\u003d0; i\u003cpsrcs.length; i++) {\n+        stat \u003d getFileLinkStatus(srcs[i]);\n+        if (stat.isSymlink()) {\n+          throw new IOException(\"Cannot concat with a symlink src: \"\n+              + psrcs[i] + \" -\u003e \" + stat.getPath());\n+        }\n+        srcs[i] \u003d fixRelativePart(stat.getPath());\n+      }\n+      // Try concat again. Can still race with another symlink.\n+      for (int i\u003d0; i\u003cpsrcs.length; i++) {\n+        srcsStr[i] \u003d getPathName(srcs[i]);\n+      }\n+      dfs.concat(getPathName(absF), srcsStr);\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void concat(Path trg, Path [] psrcs) throws IOException {\n    statistics.incrementWriteOps(1);\n    // Make target absolute\n    Path absF \u003d fixRelativePart(trg);\n    // Make all srcs absolute\n    Path[] srcs \u003d new Path[psrcs.length];\n    for (int i\u003d0; i\u003cpsrcs.length; i++) {\n      srcs[i] \u003d fixRelativePart(psrcs[i]);\n    }\n    // Try the concat without resolving any links\n    String[] srcsStr \u003d new String[psrcs.length];\n    try {\n      for (int i\u003d0; i\u003cpsrcs.length; i++) {\n        srcsStr[i] \u003d getPathName(srcs[i]);\n      }\n      dfs.concat(getPathName(trg), srcsStr);\n    } catch (UnresolvedLinkException e) {\n      // Exception could be from trg or any src.\n      // Fully resolve trg and srcs. Fail if any of them are a symlink.\n      FileStatus stat \u003d getFileLinkStatus(absF);\n      if (stat.isSymlink()) {\n        throw new IOException(\"Cannot concat with a symlink target: \"\n            + trg + \" -\u003e \" + stat.getPath());\n      }\n      absF \u003d fixRelativePart(stat.getPath());\n      for (int i\u003d0; i\u003cpsrcs.length; i++) {\n        stat \u003d getFileLinkStatus(srcs[i]);\n        if (stat.isSymlink()) {\n          throw new IOException(\"Cannot concat with a symlink src: \"\n              + psrcs[i] + \" -\u003e \" + stat.getPath());\n        }\n        srcs[i] \u003d fixRelativePart(stat.getPath());\n      }\n      // Try concat again. Can still race with another symlink.\n      for (int i\u003d0; i\u003cpsrcs.length; i++) {\n        srcsStr[i] \u003d getPathName(srcs[i]);\n      }\n      dfs.concat(getPathName(absF), srcsStr);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void concat(Path trg, Path [] psrcs) throws IOException {\n    String [] srcs \u003d new String [psrcs.length];\n    for(int i\u003d0; i\u003cpsrcs.length; i++) {\n      srcs[i] \u003d getPathName(psrcs[i]);\n    }\n    statistics.incrementWriteOps(1);\n    dfs.concat(getPathName(trg), srcs);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void concat(Path trg, Path [] psrcs) throws IOException {\n    String [] srcs \u003d new String [psrcs.length];\n    for(int i\u003d0; i\u003cpsrcs.length; i++) {\n      srcs[i] \u003d getPathName(psrcs[i]);\n    }\n    statistics.incrementWriteOps(1);\n    dfs.concat(getPathName(trg), srcs);\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,8 @@\n+  public void concat(Path trg, Path [] psrcs) throws IOException {\n+    String [] srcs \u003d new String [psrcs.length];\n+    for(int i\u003d0; i\u003cpsrcs.length; i++) {\n+      srcs[i] \u003d getPathName(psrcs[i]);\n+    }\n+    statistics.incrementWriteOps(1);\n+    dfs.concat(getPathName(trg), srcs);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void concat(Path trg, Path [] psrcs) throws IOException {\n    String [] srcs \u003d new String [psrcs.length];\n    for(int i\u003d0; i\u003cpsrcs.length; i++) {\n      srcs[i] \u003d getPathName(psrcs[i]);\n    }\n    statistics.incrementWriteOps(1);\n    dfs.concat(getPathName(trg), srcs);\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/DistributedFileSystem.java"
    }
  }
}