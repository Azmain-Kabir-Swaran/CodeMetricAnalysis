{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSImageLoader.java",
  "functionName": "fillDirSummary",
  "functionId": "fillDirSummary___id-long__data-long[]",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/FSImageLoader.java",
  "functionStartLine": 380,
  "functionEndLine": 407,
  "numCommitsSeen": 22,
  "timeTaken": 959,
  "changeHistory": [
    "40f815131e822f5b7a8e6a6827f4b85b31220c43"
  ],
  "changeHistoryShort": {
    "40f815131e822f5b7a8e6a6827f4b85b31220c43": "Yintroduced"
  },
  "changeHistoryDetails": {
    "40f815131e822f5b7a8e6a6827f4b85b31220c43": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-8622. Implement GETCONTENTSUMMARY operation for WebImageViewer. Contributed by Jagadesh Kiran N.\n",
      "commitDate": "12/08/15 7:31 PM",
      "commitName": "40f815131e822f5b7a8e6a6827f4b85b31220c43",
      "commitAuthor": "Akira Ajisaka",
      "diff": "@@ -0,0 +1,28 @@\n+  private void fillDirSummary(long id, long[] data) throws IOException {\n+    data[0]++;\n+    long[] children \u003d dirmap.get(id);\n+    if (children \u003d\u003d null) {\n+      return;\n+    }\n+\n+    for (long cid : children) {\n+      INode node \u003d fromINodeId(cid);\n+      switch (node.getType()) {\n+      case DIRECTORY:\n+        fillDirSummary(cid, data);\n+        break;\n+      case FILE:\n+        FsImageProto.INodeSection.INodeFile f \u003d node.getFile();\n+        long curLength \u003d getFileSize(f);\n+        data[1]++;\n+        data[2] +\u003d curLength;\n+        data[3] +\u003d (curLength) * (f.getReplication());\n+        break;\n+      case SYMLINK:\n+        data[1]++;\n+        break;\n+      default:\n+        break;\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void fillDirSummary(long id, long[] data) throws IOException {\n    data[0]++;\n    long[] children \u003d dirmap.get(id);\n    if (children \u003d\u003d null) {\n      return;\n    }\n\n    for (long cid : children) {\n      INode node \u003d fromINodeId(cid);\n      switch (node.getType()) {\n      case DIRECTORY:\n        fillDirSummary(cid, data);\n        break;\n      case FILE:\n        FsImageProto.INodeSection.INodeFile f \u003d node.getFile();\n        long curLength \u003d getFileSize(f);\n        data[1]++;\n        data[2] +\u003d curLength;\n        data[3] +\u003d (curLength) * (f.getReplication());\n        break;\n      case SYMLINK:\n        data[1]++;\n        break;\n      default:\n        break;\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/FSImageLoader.java"
    }
  }
}