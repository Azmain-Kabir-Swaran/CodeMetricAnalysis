{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSInputChecker.java",
  "functionName": "verifySums",
  "functionId": "verifySums___b-byte[](modifiers-final)__off-int(modifiers-final)__read-int",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FSInputChecker.java",
  "functionStartLine": 331,
  "functionEndLine": 354,
  "numCommitsSeen": 17,
  "timeTaken": 985,
  "changeHistory": [
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "ae91b5d0f4b18b939025ef374d971d7ada179473",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36"
  ],
  "changeHistoryShort": {
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "ae91b5d0f4b18b939025ef374d971d7ada179473": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void verifySums(final byte b[], final int off, int read)\n    throws ChecksumException\n  {\n    int leftToVerify \u003d read;\n    int verifyOff \u003d 0;\n    checksumInts.rewind();\n    checksumInts.limit((read - 1)/maxChunkSize + 1);\n\n    while (leftToVerify \u003e 0) {\n      sum.update(b, off + verifyOff, Math.min(leftToVerify, maxChunkSize));\n      int expected \u003d checksumInts.get();\n      int calculated \u003d (int)sum.getValue();\n      sum.reset();\n\n      if (expected !\u003d calculated) {\n        long errPos \u003d chunkPos + verifyOff;\n        throw new ChecksumException(\n          \"Checksum error: \"+file+\" at \"+ errPos +\n          \" exp: \" + expected + \" got: \" + calculated, errPos);\n      }\n      leftToVerify -\u003d maxChunkSize;\n      verifyOff +\u003d maxChunkSize;\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FSInputChecker.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/FSInputChecker.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FSInputChecker.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void verifySums(final byte b[], final int off, int read)\n    throws ChecksumException\n  {\n    int leftToVerify \u003d read;\n    int verifyOff \u003d 0;\n    checksumInts.rewind();\n    checksumInts.limit((read - 1)/maxChunkSize + 1);\n\n    while (leftToVerify \u003e 0) {\n      sum.update(b, off + verifyOff, Math.min(leftToVerify, maxChunkSize));\n      int expected \u003d checksumInts.get();\n      int calculated \u003d (int)sum.getValue();\n      sum.reset();\n\n      if (expected !\u003d calculated) {\n        long errPos \u003d chunkPos + verifyOff;\n        throw new ChecksumException(\n          \"Checksum error: \"+file+\" at \"+ errPos +\n          \" exp: \" + expected + \" got: \" + calculated, errPos);\n      }\n      leftToVerify -\u003d maxChunkSize;\n      verifyOff +\u003d maxChunkSize;\n    }\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/fs/FSInputChecker.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/fs/FSInputChecker.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/FSInputChecker.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void verifySums(final byte b[], final int off, int read)\n    throws ChecksumException\n  {\n    int leftToVerify \u003d read;\n    int verifyOff \u003d 0;\n    checksumInts.rewind();\n    checksumInts.limit((read - 1)/maxChunkSize + 1);\n\n    while (leftToVerify \u003e 0) {\n      sum.update(b, off + verifyOff, Math.min(leftToVerify, maxChunkSize));\n      int expected \u003d checksumInts.get();\n      int calculated \u003d (int)sum.getValue();\n      sum.reset();\n\n      if (expected !\u003d calculated) {\n        long errPos \u003d chunkPos + verifyOff;\n        throw new ChecksumException(\n          \"Checksum error: \"+file+\" at \"+ errPos +\n          \" exp: \" + expected + \" got: \" + calculated, errPos);\n      }\n      leftToVerify -\u003d maxChunkSize;\n      verifyOff +\u003d maxChunkSize;\n    }\n  }",
      "path": "common/src/java/org/apache/hadoop/fs/FSInputChecker.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/fs/FSInputChecker.java",
        "newPath": "common/src/java/org/apache/hadoop/fs/FSInputChecker.java"
      }
    },
    "ae91b5d0f4b18b939025ef374d971d7ada179473": {
      "type": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-3205. Read multiple chunks directly from FSInputChecker subclass into user buffers. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@896243 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/01/10 2:14 PM",
      "commitName": "ae91b5d0f4b18b939025ef374d971d7ada179473",
      "commitAuthor": "Thomas White",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "HADOOP-3205. Read multiple chunks directly from FSInputChecker subclass into user buffers. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@896243 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "05/01/10 2:14 PM",
          "commitName": "ae91b5d0f4b18b939025ef374d971d7ada179473",
          "commitAuthor": "Thomas White",
          "commitDateOld": "10/09/09 1:51 PM",
          "commitNameOld": "86724941c5144a06113090d40c50c289e7ebd290",
          "commitAuthorOld": "Christopher Douglas",
          "daysBetweenCommits": 117.06,
          "commitsBetweenForRepo": 106,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,24 @@\n-  private void verifySum(long errPos) throws ChecksumException {\n-    long crc \u003d getChecksum();\n-    long sumValue \u003d sum.getValue();\n-    sum.reset();\n-    if (crc !\u003d sumValue) {\n-      throw new ChecksumException(\n-          \"Checksum error: \"+file+\" at \"+errPos, errPos);\n+  private void verifySums(final byte b[], final int off, int read)\n+    throws ChecksumException\n+  {\n+    int leftToVerify \u003d read;\n+    int verifyOff \u003d 0;\n+    checksumInts.rewind();\n+    checksumInts.limit((read - 1)/maxChunkSize + 1);\n+\n+    while (leftToVerify \u003e 0) {\n+      sum.update(b, off + verifyOff, Math.min(leftToVerify, maxChunkSize));\n+      int expected \u003d checksumInts.get();\n+      int calculated \u003d (int)sum.getValue();\n+      sum.reset();\n+\n+      if (expected !\u003d calculated) {\n+        long errPos \u003d chunkPos + verifyOff;\n+        throw new ChecksumException(\n+          \"Checksum error: \"+file+\" at \"+ errPos +\n+          \" exp: \" + expected + \" got: \" + calculated, errPos);\n+      }\n+      leftToVerify -\u003d maxChunkSize;\n+      verifyOff +\u003d maxChunkSize;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void verifySums(final byte b[], final int off, int read)\n    throws ChecksumException\n  {\n    int leftToVerify \u003d read;\n    int verifyOff \u003d 0;\n    checksumInts.rewind();\n    checksumInts.limit((read - 1)/maxChunkSize + 1);\n\n    while (leftToVerify \u003e 0) {\n      sum.update(b, off + verifyOff, Math.min(leftToVerify, maxChunkSize));\n      int expected \u003d checksumInts.get();\n      int calculated \u003d (int)sum.getValue();\n      sum.reset();\n\n      if (expected !\u003d calculated) {\n        long errPos \u003d chunkPos + verifyOff;\n        throw new ChecksumException(\n          \"Checksum error: \"+file+\" at \"+ errPos +\n          \" exp: \" + expected + \" got: \" + calculated, errPos);\n      }\n      leftToVerify -\u003d maxChunkSize;\n      verifyOff +\u003d maxChunkSize;\n    }\n  }",
          "path": "src/java/org/apache/hadoop/fs/FSInputChecker.java",
          "extendedDetails": {
            "oldValue": "verifySum",
            "newValue": "verifySums"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-3205. Read multiple chunks directly from FSInputChecker subclass into user buffers. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@896243 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "05/01/10 2:14 PM",
          "commitName": "ae91b5d0f4b18b939025ef374d971d7ada179473",
          "commitAuthor": "Thomas White",
          "commitDateOld": "10/09/09 1:51 PM",
          "commitNameOld": "86724941c5144a06113090d40c50c289e7ebd290",
          "commitAuthorOld": "Christopher Douglas",
          "daysBetweenCommits": 117.06,
          "commitsBetweenForRepo": 106,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,24 @@\n-  private void verifySum(long errPos) throws ChecksumException {\n-    long crc \u003d getChecksum();\n-    long sumValue \u003d sum.getValue();\n-    sum.reset();\n-    if (crc !\u003d sumValue) {\n-      throw new ChecksumException(\n-          \"Checksum error: \"+file+\" at \"+errPos, errPos);\n+  private void verifySums(final byte b[], final int off, int read)\n+    throws ChecksumException\n+  {\n+    int leftToVerify \u003d read;\n+    int verifyOff \u003d 0;\n+    checksumInts.rewind();\n+    checksumInts.limit((read - 1)/maxChunkSize + 1);\n+\n+    while (leftToVerify \u003e 0) {\n+      sum.update(b, off + verifyOff, Math.min(leftToVerify, maxChunkSize));\n+      int expected \u003d checksumInts.get();\n+      int calculated \u003d (int)sum.getValue();\n+      sum.reset();\n+\n+      if (expected !\u003d calculated) {\n+        long errPos \u003d chunkPos + verifyOff;\n+        throw new ChecksumException(\n+          \"Checksum error: \"+file+\" at \"+ errPos +\n+          \" exp: \" + expected + \" got: \" + calculated, errPos);\n+      }\n+      leftToVerify -\u003d maxChunkSize;\n+      verifyOff +\u003d maxChunkSize;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void verifySums(final byte b[], final int off, int read)\n    throws ChecksumException\n  {\n    int leftToVerify \u003d read;\n    int verifyOff \u003d 0;\n    checksumInts.rewind();\n    checksumInts.limit((read - 1)/maxChunkSize + 1);\n\n    while (leftToVerify \u003e 0) {\n      sum.update(b, off + verifyOff, Math.min(leftToVerify, maxChunkSize));\n      int expected \u003d checksumInts.get();\n      int calculated \u003d (int)sum.getValue();\n      sum.reset();\n\n      if (expected !\u003d calculated) {\n        long errPos \u003d chunkPos + verifyOff;\n        throw new ChecksumException(\n          \"Checksum error: \"+file+\" at \"+ errPos +\n          \" exp: \" + expected + \" got: \" + calculated, errPos);\n      }\n      leftToVerify -\u003d maxChunkSize;\n      verifyOff +\u003d maxChunkSize;\n    }\n  }",
          "path": "src/java/org/apache/hadoop/fs/FSInputChecker.java",
          "extendedDetails": {
            "oldValue": "[errPos-long]",
            "newValue": "[b-byte[](modifiers-final), off-int(modifiers-final), read-int]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-3205. Read multiple chunks directly from FSInputChecker subclass into user buffers. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@896243 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "05/01/10 2:14 PM",
          "commitName": "ae91b5d0f4b18b939025ef374d971d7ada179473",
          "commitAuthor": "Thomas White",
          "commitDateOld": "10/09/09 1:51 PM",
          "commitNameOld": "86724941c5144a06113090d40c50c289e7ebd290",
          "commitAuthorOld": "Christopher Douglas",
          "daysBetweenCommits": 117.06,
          "commitsBetweenForRepo": 106,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,24 @@\n-  private void verifySum(long errPos) throws ChecksumException {\n-    long crc \u003d getChecksum();\n-    long sumValue \u003d sum.getValue();\n-    sum.reset();\n-    if (crc !\u003d sumValue) {\n-      throw new ChecksumException(\n-          \"Checksum error: \"+file+\" at \"+errPos, errPos);\n+  private void verifySums(final byte b[], final int off, int read)\n+    throws ChecksumException\n+  {\n+    int leftToVerify \u003d read;\n+    int verifyOff \u003d 0;\n+    checksumInts.rewind();\n+    checksumInts.limit((read - 1)/maxChunkSize + 1);\n+\n+    while (leftToVerify \u003e 0) {\n+      sum.update(b, off + verifyOff, Math.min(leftToVerify, maxChunkSize));\n+      int expected \u003d checksumInts.get();\n+      int calculated \u003d (int)sum.getValue();\n+      sum.reset();\n+\n+      if (expected !\u003d calculated) {\n+        long errPos \u003d chunkPos + verifyOff;\n+        throw new ChecksumException(\n+          \"Checksum error: \"+file+\" at \"+ errPos +\n+          \" exp: \" + expected + \" got: \" + calculated, errPos);\n+      }\n+      leftToVerify -\u003d maxChunkSize;\n+      verifyOff +\u003d maxChunkSize;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void verifySums(final byte b[], final int off, int read)\n    throws ChecksumException\n  {\n    int leftToVerify \u003d read;\n    int verifyOff \u003d 0;\n    checksumInts.rewind();\n    checksumInts.limit((read - 1)/maxChunkSize + 1);\n\n    while (leftToVerify \u003e 0) {\n      sum.update(b, off + verifyOff, Math.min(leftToVerify, maxChunkSize));\n      int expected \u003d checksumInts.get();\n      int calculated \u003d (int)sum.getValue();\n      sum.reset();\n\n      if (expected !\u003d calculated) {\n        long errPos \u003d chunkPos + verifyOff;\n        throw new ChecksumException(\n          \"Checksum error: \"+file+\" at \"+ errPos +\n          \" exp: \" + expected + \" got: \" + calculated, errPos);\n      }\n      leftToVerify -\u003d maxChunkSize;\n      verifyOff +\u003d maxChunkSize;\n    }\n  }",
          "path": "src/java/org/apache/hadoop/fs/FSInputChecker.java",
          "extendedDetails": {}
        }
      ]
    },
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-4687 Moving src directories on branch\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/core/branches/HADOOP-4687/core@776174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/05/09 9:20 PM",
      "commitName": "5128a9a453d64bfe1ed978cf9ffed27985eeef36",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,9 @@\n+  private void verifySum(long errPos) throws ChecksumException {\n+    long crc \u003d getChecksum();\n+    long sumValue \u003d sum.getValue();\n+    sum.reset();\n+    if (crc !\u003d sumValue) {\n+      throw new ChecksumException(\n+          \"Checksum error: \"+file+\" at \"+errPos, errPos);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void verifySum(long errPos) throws ChecksumException {\n    long crc \u003d getChecksum();\n    long sumValue \u003d sum.getValue();\n    sum.reset();\n    if (crc !\u003d sumValue) {\n      throw new ChecksumException(\n          \"Checksum error: \"+file+\" at \"+errPos, errPos);\n    }\n  }",
      "path": "src/java/org/apache/hadoop/fs/FSInputChecker.java"
    }
  }
}