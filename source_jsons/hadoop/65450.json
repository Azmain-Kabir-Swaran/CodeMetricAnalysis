{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "S3GuardTool.java",
  "functionName": "parseDynamoDBRegion",
  "functionId": "parseDynamoDBRegion___paths-List__String__",
  "sourceFilePath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/S3GuardTool.java",
  "functionStartLine": 205,
  "functionEndLine": 241,
  "numCommitsSeen": 42,
  "timeTaken": 2911,
  "changeHistory": [
    "f365957c6326f88734bc0a5d01cfb7eac713db20",
    "47011d7dd300b0c74bb6cfe25b918c479d718f4f",
    "621b43e254afaff708cd6fc4698b29628f6abc33"
  ],
  "changeHistoryShort": {
    "f365957c6326f88734bc0a5d01cfb7eac713db20": "Ymodifierchange",
    "47011d7dd300b0c74bb6cfe25b918c479d718f4f": "Ymultichange(Yreturntypechange,Ybodychange)",
    "621b43e254afaff708cd6fc4698b29628f6abc33": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f365957c6326f88734bc0a5d01cfb7eac713db20": {
      "type": "Ymodifierchange",
      "commitMessage": "HADOOP-15229. Add FileSystem builder-based openFile() API to match createFile();\nS3A to implement S3 Select through this API.\n\nThe new openFile() API is asynchronous, and implemented across FileSystem and FileContext.\n\nThe MapReduce V2 inputs are moved to this API, and you can actually set must/may\noptions to pass in.\n\nThis is more useful for setting things like s3a seek policy than for S3 select,\nas the existing input format/record readers can\u0027t handle S3 select output where\nthe stream is shorter than the file length, and splitting plain text is suboptimal.\nFuture work is needed there.\n\nIn the meantime, any/all filesystem connectors are now free to add their own filesystem-specific\nconfiguration parameters which can be set in jobs and used to set filesystem input stream\noptions (seek policy, retry, encryption secrets, etc).\n\nContributed by Steve Loughran\n",
      "commitDate": "05/02/19 3:51 AM",
      "commitName": "f365957c6326f88734bc0a5d01cfb7eac713db20",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "14/01/19 9:59 AM",
      "commitNameOld": "6d0bffe17eadedd60d4599427248b0db4a7c5502",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 21.74,
      "commitsBetweenForRepo": 167,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,37 @@\n-  void parseDynamoDBRegion(List\u003cString\u003e paths) throws IOException {\n+  protected void parseDynamoDBRegion(List\u003cString\u003e paths) throws IOException {\n     Configuration conf \u003d getConf();\n     String fromCli \u003d getCommandFormat().getOptValue(REGION_FLAG);\n     String fromConf \u003d conf.get(S3GUARD_DDB_REGION_KEY);\n     boolean hasS3Path \u003d !paths.isEmpty();\n \n     if (fromCli !\u003d null) {\n       if (fromCli.isEmpty()) {\n         throw invalidArgs(\"No region provided with -\" + REGION_FLAG + \" flag\");\n       }\n       if (hasS3Path) {\n         throw invalidArgs(\"Providing both an S3 path and the\"\n             + \" -\" + REGION_FLAG\n             + \" flag is not supported. If you need to specify a different \"\n             + \"region than the S3 bucket, configure \" + S3GUARD_DDB_REGION_KEY);\n       }\n       conf.set(S3GUARD_DDB_REGION_KEY, fromCli);\n       return;\n     }\n \n     if (fromConf !\u003d null) {\n       if (fromConf.isEmpty()) {\n         throw invalidArgs(\"No region provided with config %s\",\n             S3GUARD_DDB_REGION_KEY);\n       }\n       return;\n     }\n \n     if (hasS3Path) {\n       String s3Path \u003d paths.get(0);\n       initS3AFileSystem(s3Path);\n       return;\n     }\n \n     throw invalidArgs(\"No region found from -\" + REGION_FLAG + \" flag, \" +\n         \"config, or S3 bucket\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void parseDynamoDBRegion(List\u003cString\u003e paths) throws IOException {\n    Configuration conf \u003d getConf();\n    String fromCli \u003d getCommandFormat().getOptValue(REGION_FLAG);\n    String fromConf \u003d conf.get(S3GUARD_DDB_REGION_KEY);\n    boolean hasS3Path \u003d !paths.isEmpty();\n\n    if (fromCli !\u003d null) {\n      if (fromCli.isEmpty()) {\n        throw invalidArgs(\"No region provided with -\" + REGION_FLAG + \" flag\");\n      }\n      if (hasS3Path) {\n        throw invalidArgs(\"Providing both an S3 path and the\"\n            + \" -\" + REGION_FLAG\n            + \" flag is not supported. If you need to specify a different \"\n            + \"region than the S3 bucket, configure \" + S3GUARD_DDB_REGION_KEY);\n      }\n      conf.set(S3GUARD_DDB_REGION_KEY, fromCli);\n      return;\n    }\n\n    if (fromConf !\u003d null) {\n      if (fromConf.isEmpty()) {\n        throw invalidArgs(\"No region provided with config %s\",\n            S3GUARD_DDB_REGION_KEY);\n      }\n      return;\n    }\n\n    if (hasS3Path) {\n      String s3Path \u003d paths.get(0);\n      initS3AFileSystem(s3Path);\n      return;\n    }\n\n    throw invalidArgs(\"No region found from -\" + REGION_FLAG + \" flag, \" +\n        \"config, or S3 bucket\");\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/S3GuardTool.java",
      "extendedDetails": {
        "oldValue": "[]",
        "newValue": "[protected]"
      }
    },
    "47011d7dd300b0c74bb6cfe25b918c479d718f4f": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "HADOOP-14220 Enhance S3GuardTool with bucket-info and set-capacity commands, tests. Contributed by Steve Loughran\n",
      "commitDate": "25/09/17 3:59 PM",
      "commitName": "47011d7dd300b0c74bb6cfe25b918c479d718f4f",
      "commitAuthor": "Aaron Fabbri",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "HADOOP-14220 Enhance S3GuardTool with bucket-info and set-capacity commands, tests. Contributed by Steve Loughran\n",
          "commitDate": "25/09/17 3:59 PM",
          "commitName": "47011d7dd300b0c74bb6cfe25b918c479d718f4f",
          "commitAuthor": "Aaron Fabbri",
          "commitDateOld": "01/09/17 6:13 AM",
          "commitNameOld": "621b43e254afaff708cd6fc4698b29628f6abc33",
          "commitAuthorOld": "Steve Loughran",
          "daysBetweenCommits": 24.41,
          "commitsBetweenForRepo": 233,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,40 +1,37 @@\n-  boolean parseDynamoDBRegion(List\u003cString\u003e paths) throws IOException {\n+  void parseDynamoDBRegion(List\u003cString\u003e paths) throws IOException {\n     Configuration conf \u003d getConf();\n     String fromCli \u003d getCommandFormat().getOptValue(REGION_FLAG);\n     String fromConf \u003d conf.get(S3GUARD_DDB_REGION_KEY);\n     boolean hasS3Path \u003d !paths.isEmpty();\n \n     if (fromCli !\u003d null) {\n       if (fromCli.isEmpty()) {\n-        System.err.println(\"No region provided with -\" + REGION_FLAG + \" flag\");\n-        return false;\n+        throw invalidArgs(\"No region provided with -\" + REGION_FLAG + \" flag\");\n       }\n       if (hasS3Path) {\n-        System.err.println(\"Providing both an S3 path and the -\" + REGION_FLAG\n+        throw invalidArgs(\"Providing both an S3 path and the\"\n+            + \" -\" + REGION_FLAG\n             + \" flag is not supported. If you need to specify a different \"\n             + \"region than the S3 bucket, configure \" + S3GUARD_DDB_REGION_KEY);\n-        return false;\n       }\n       conf.set(S3GUARD_DDB_REGION_KEY, fromCli);\n-      return true;\n+      return;\n     }\n \n     if (fromConf !\u003d null) {\n       if (fromConf.isEmpty()) {\n-        System.err.printf(\"No region provided with config %s, %n\",\n+        throw invalidArgs(\"No region provided with config %s\",\n             S3GUARD_DDB_REGION_KEY);\n-        return false;\n       }\n-      return true;\n+      return;\n     }\n \n     if (hasS3Path) {\n       String s3Path \u003d paths.get(0);\n       initS3AFileSystem(s3Path);\n-      return true;\n+      return;\n     }\n \n-    System.err.println(\"No region found from -\" + REGION_FLAG + \" flag, \" +\n+    throw invalidArgs(\"No region found from -\" + REGION_FLAG + \" flag, \" +\n         \"config, or S3 bucket\");\n-    return false;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void parseDynamoDBRegion(List\u003cString\u003e paths) throws IOException {\n    Configuration conf \u003d getConf();\n    String fromCli \u003d getCommandFormat().getOptValue(REGION_FLAG);\n    String fromConf \u003d conf.get(S3GUARD_DDB_REGION_KEY);\n    boolean hasS3Path \u003d !paths.isEmpty();\n\n    if (fromCli !\u003d null) {\n      if (fromCli.isEmpty()) {\n        throw invalidArgs(\"No region provided with -\" + REGION_FLAG + \" flag\");\n      }\n      if (hasS3Path) {\n        throw invalidArgs(\"Providing both an S3 path and the\"\n            + \" -\" + REGION_FLAG\n            + \" flag is not supported. If you need to specify a different \"\n            + \"region than the S3 bucket, configure \" + S3GUARD_DDB_REGION_KEY);\n      }\n      conf.set(S3GUARD_DDB_REGION_KEY, fromCli);\n      return;\n    }\n\n    if (fromConf !\u003d null) {\n      if (fromConf.isEmpty()) {\n        throw invalidArgs(\"No region provided with config %s\",\n            S3GUARD_DDB_REGION_KEY);\n      }\n      return;\n    }\n\n    if (hasS3Path) {\n      String s3Path \u003d paths.get(0);\n      initS3AFileSystem(s3Path);\n      return;\n    }\n\n    throw invalidArgs(\"No region found from -\" + REGION_FLAG + \" flag, \" +\n        \"config, or S3 bucket\");\n  }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/S3GuardTool.java",
          "extendedDetails": {
            "oldValue": "boolean",
            "newValue": "void"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-14220 Enhance S3GuardTool with bucket-info and set-capacity commands, tests. Contributed by Steve Loughran\n",
          "commitDate": "25/09/17 3:59 PM",
          "commitName": "47011d7dd300b0c74bb6cfe25b918c479d718f4f",
          "commitAuthor": "Aaron Fabbri",
          "commitDateOld": "01/09/17 6:13 AM",
          "commitNameOld": "621b43e254afaff708cd6fc4698b29628f6abc33",
          "commitAuthorOld": "Steve Loughran",
          "daysBetweenCommits": 24.41,
          "commitsBetweenForRepo": 233,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,40 +1,37 @@\n-  boolean parseDynamoDBRegion(List\u003cString\u003e paths) throws IOException {\n+  void parseDynamoDBRegion(List\u003cString\u003e paths) throws IOException {\n     Configuration conf \u003d getConf();\n     String fromCli \u003d getCommandFormat().getOptValue(REGION_FLAG);\n     String fromConf \u003d conf.get(S3GUARD_DDB_REGION_KEY);\n     boolean hasS3Path \u003d !paths.isEmpty();\n \n     if (fromCli !\u003d null) {\n       if (fromCli.isEmpty()) {\n-        System.err.println(\"No region provided with -\" + REGION_FLAG + \" flag\");\n-        return false;\n+        throw invalidArgs(\"No region provided with -\" + REGION_FLAG + \" flag\");\n       }\n       if (hasS3Path) {\n-        System.err.println(\"Providing both an S3 path and the -\" + REGION_FLAG\n+        throw invalidArgs(\"Providing both an S3 path and the\"\n+            + \" -\" + REGION_FLAG\n             + \" flag is not supported. If you need to specify a different \"\n             + \"region than the S3 bucket, configure \" + S3GUARD_DDB_REGION_KEY);\n-        return false;\n       }\n       conf.set(S3GUARD_DDB_REGION_KEY, fromCli);\n-      return true;\n+      return;\n     }\n \n     if (fromConf !\u003d null) {\n       if (fromConf.isEmpty()) {\n-        System.err.printf(\"No region provided with config %s, %n\",\n+        throw invalidArgs(\"No region provided with config %s\",\n             S3GUARD_DDB_REGION_KEY);\n-        return false;\n       }\n-      return true;\n+      return;\n     }\n \n     if (hasS3Path) {\n       String s3Path \u003d paths.get(0);\n       initS3AFileSystem(s3Path);\n-      return true;\n+      return;\n     }\n \n-    System.err.println(\"No region found from -\" + REGION_FLAG + \" flag, \" +\n+    throw invalidArgs(\"No region found from -\" + REGION_FLAG + \" flag, \" +\n         \"config, or S3 bucket\");\n-    return false;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void parseDynamoDBRegion(List\u003cString\u003e paths) throws IOException {\n    Configuration conf \u003d getConf();\n    String fromCli \u003d getCommandFormat().getOptValue(REGION_FLAG);\n    String fromConf \u003d conf.get(S3GUARD_DDB_REGION_KEY);\n    boolean hasS3Path \u003d !paths.isEmpty();\n\n    if (fromCli !\u003d null) {\n      if (fromCli.isEmpty()) {\n        throw invalidArgs(\"No region provided with -\" + REGION_FLAG + \" flag\");\n      }\n      if (hasS3Path) {\n        throw invalidArgs(\"Providing both an S3 path and the\"\n            + \" -\" + REGION_FLAG\n            + \" flag is not supported. If you need to specify a different \"\n            + \"region than the S3 bucket, configure \" + S3GUARD_DDB_REGION_KEY);\n      }\n      conf.set(S3GUARD_DDB_REGION_KEY, fromCli);\n      return;\n    }\n\n    if (fromConf !\u003d null) {\n      if (fromConf.isEmpty()) {\n        throw invalidArgs(\"No region provided with config %s\",\n            S3GUARD_DDB_REGION_KEY);\n      }\n      return;\n    }\n\n    if (hasS3Path) {\n      String s3Path \u003d paths.get(0);\n      initS3AFileSystem(s3Path);\n      return;\n    }\n\n    throw invalidArgs(\"No region found from -\" + REGION_FLAG + \" flag, \" +\n        \"config, or S3 bucket\");\n  }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/S3GuardTool.java",
          "extendedDetails": {}
        }
      ]
    },
    "621b43e254afaff708cd6fc4698b29628f6abc33": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-13345 HS3Guard: Improved Consistency for S3A.\nContributed by: Chris Nauroth, Aaron Fabbri, Mingliang Liu, Lei (Eddy) Xu,\nSean Mackrory, Steve Loughran and others.\n",
      "commitDate": "01/09/17 6:13 AM",
      "commitName": "621b43e254afaff708cd6fc4698b29628f6abc33",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,40 @@\n+  boolean parseDynamoDBRegion(List\u003cString\u003e paths) throws IOException {\n+    Configuration conf \u003d getConf();\n+    String fromCli \u003d getCommandFormat().getOptValue(REGION_FLAG);\n+    String fromConf \u003d conf.get(S3GUARD_DDB_REGION_KEY);\n+    boolean hasS3Path \u003d !paths.isEmpty();\n+\n+    if (fromCli !\u003d null) {\n+      if (fromCli.isEmpty()) {\n+        System.err.println(\"No region provided with -\" + REGION_FLAG + \" flag\");\n+        return false;\n+      }\n+      if (hasS3Path) {\n+        System.err.println(\"Providing both an S3 path and the -\" + REGION_FLAG\n+            + \" flag is not supported. If you need to specify a different \"\n+            + \"region than the S3 bucket, configure \" + S3GUARD_DDB_REGION_KEY);\n+        return false;\n+      }\n+      conf.set(S3GUARD_DDB_REGION_KEY, fromCli);\n+      return true;\n+    }\n+\n+    if (fromConf !\u003d null) {\n+      if (fromConf.isEmpty()) {\n+        System.err.printf(\"No region provided with config %s, %n\",\n+            S3GUARD_DDB_REGION_KEY);\n+        return false;\n+      }\n+      return true;\n+    }\n+\n+    if (hasS3Path) {\n+      String s3Path \u003d paths.get(0);\n+      initS3AFileSystem(s3Path);\n+      return true;\n+    }\n+\n+    System.err.println(\"No region found from -\" + REGION_FLAG + \" flag, \" +\n+        \"config, or S3 bucket\");\n+    return false;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  boolean parseDynamoDBRegion(List\u003cString\u003e paths) throws IOException {\n    Configuration conf \u003d getConf();\n    String fromCli \u003d getCommandFormat().getOptValue(REGION_FLAG);\n    String fromConf \u003d conf.get(S3GUARD_DDB_REGION_KEY);\n    boolean hasS3Path \u003d !paths.isEmpty();\n\n    if (fromCli !\u003d null) {\n      if (fromCli.isEmpty()) {\n        System.err.println(\"No region provided with -\" + REGION_FLAG + \" flag\");\n        return false;\n      }\n      if (hasS3Path) {\n        System.err.println(\"Providing both an S3 path and the -\" + REGION_FLAG\n            + \" flag is not supported. If you need to specify a different \"\n            + \"region than the S3 bucket, configure \" + S3GUARD_DDB_REGION_KEY);\n        return false;\n      }\n      conf.set(S3GUARD_DDB_REGION_KEY, fromCli);\n      return true;\n    }\n\n    if (fromConf !\u003d null) {\n      if (fromConf.isEmpty()) {\n        System.err.printf(\"No region provided with config %s, %n\",\n            S3GUARD_DDB_REGION_KEY);\n        return false;\n      }\n      return true;\n    }\n\n    if (hasS3Path) {\n      String s3Path \u003d paths.get(0);\n      initS3AFileSystem(s3Path);\n      return true;\n    }\n\n    System.err.println(\"No region found from -\" + REGION_FLAG + \" flag, \" +\n        \"config, or S3 bucket\");\n    return false;\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/S3GuardTool.java"
    }
  }
}