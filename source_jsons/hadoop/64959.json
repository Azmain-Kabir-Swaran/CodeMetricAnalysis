{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AbstractS3ACommitter.java",
  "functionName": "commitPendingUploads",
  "functionId": "commitPendingUploads___context-JobContext(modifiers-final)__pending-ActiveCommit(modifiers-final)",
  "sourceFilePath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/commit/AbstractS3ACommitter.java",
  "functionStartLine": 461,
  "functionEndLine": 483,
  "numCommitsSeen": 11,
  "timeTaken": 3805,
  "changeHistory": [
    "6574f27fa348542411bff888b184cd7ce34e5d9e",
    "e02eb24e0a9139418120027b694492e0738df20a",
    "de8b6ca5ef8614de6d6277b7617e27c788b0555c"
  ],
  "changeHistoryShort": {
    "6574f27fa348542411bff888b184cd7ce34e5d9e": "Ymultichange(Yparameterchange,Ybodychange,Yparametermetachange)",
    "e02eb24e0a9139418120027b694492e0738df20a": "Ybodychange",
    "de8b6ca5ef8614de6d6277b7617e27c788b0555c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6574f27fa348542411bff888b184cd7ce34e5d9e": {
      "type": "Ymultichange(Yparameterchange,Ybodychange,Yparametermetachange)",
      "commitMessage": "HADOOP-16570. S3A committers encounter scale issues.\n\nContributed by Steve Loughran.\n\nThis addresses two scale issues which has surfaced in large scale benchmarks\nof the S3A Committers.\n\n* Thread pools are not cleaned up.\n  This now happens, with tests.\n\n* OOM on job commit for jobs with many thousands of tasks,\n  each generating tens of (very large) files.\n\nInstead of loading all pending commits into memory as a single list, the list\nof files to load is the sole list which is passed around; .pendingset files are\nloaded and processed in isolation -and reloaded if necessary for any\nabort/rollback operation.\n\nThe parallel commit/abort/revert operations now work at the .pendingset level,\nrather than that of individual pending commit files. The existing parallelized\nTasks API is still used to commit those files, but with a null thread pool, so\nas to serialize the operations.\n\nChange-Id: I5c8240cd31800eaa83d112358770ca0eb2bca797\n",
      "commitDate": "04/10/19 10:54 AM",
      "commitName": "6574f27fa348542411bff888b184cd7ce34e5d9e",
      "commitAuthor": "Steve Loughran",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-16570. S3A committers encounter scale issues.\n\nContributed by Steve Loughran.\n\nThis addresses two scale issues which has surfaced in large scale benchmarks\nof the S3A Committers.\n\n* Thread pools are not cleaned up.\n  This now happens, with tests.\n\n* OOM on job commit for jobs with many thousands of tasks,\n  each generating tens of (very large) files.\n\nInstead of loading all pending commits into memory as a single list, the list\nof files to load is the sole list which is passed around; .pendingset files are\nloaded and processed in isolation -and reloaded if necessary for any\nabort/rollback operation.\n\nThe parallel commit/abort/revert operations now work at the .pendingset level,\nrather than that of individual pending commit files. The existing parallelized\nTasks API is still used to commit those files, but with a null thread pool, so\nas to serialize the operations.\n\nChange-Id: I5c8240cd31800eaa83d112358770ca0eb2bca797\n",
          "commitDate": "04/10/19 10:54 AM",
          "commitName": "6574f27fa348542411bff888b184cd7ce34e5d9e",
          "commitAuthor": "Steve Loughran",
          "commitDateOld": "20/06/19 1:56 AM",
          "commitNameOld": "e02eb24e0a9139418120027b694492e0738df20a",
          "commitAuthorOld": "Steve Loughran",
          "daysBetweenCommits": 106.37,
          "commitsBetweenForRepo": 952,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,23 @@\n-  protected void commitPendingUploads(JobContext context,\n-      List\u003cSinglePendingCommit\u003e pending) throws IOException {\n+  protected void commitPendingUploads(\n+      final JobContext context,\n+      final ActiveCommit pending) throws IOException {\n     if (pending.isEmpty()) {\n       LOG.warn(\"{}: No pending uploads to commit\", getRole());\n     }\n-    LOG.debug(\"{}: committing the output of {} task(s)\",\n-        getRole(), pending.size());\n-    try(CommitOperations.CommitContext commitContext\n+    try (DurationInfo ignored \u003d new DurationInfo(LOG,\n+        \"committing the output of %s task(s)\", pending.size());\n+        CommitOperations.CommitContext commitContext\n             \u003d initiateCommitOperation()) {\n-      Tasks.foreach(pending)\n+\n+      Tasks.foreach(pending.getSourceFiles())\n           .stopOnFailure()\n+          .suppressExceptions(false)\n           .executeWith(buildThreadPool(context))\n-          .onFailure((commit, exception) -\u003e\n-              commitContext.abortSingleCommit(commit))\n-          .abortWith(commitContext::abortSingleCommit)\n-          .revertWith(commitContext::revertCommit)\n-          .run(commitContext::commitOrFail);\n+          .abortWith(path -\u003e\n+              loadAndAbort(commitContext, pending, path, true, false))\n+          .revertWith(path -\u003e\n+              loadAndRevert(commitContext, pending, path))\n+          .run(path -\u003e\n+              loadAndCommit(commitContext, pending, path));\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void commitPendingUploads(\n      final JobContext context,\n      final ActiveCommit pending) throws IOException {\n    if (pending.isEmpty()) {\n      LOG.warn(\"{}: No pending uploads to commit\", getRole());\n    }\n    try (DurationInfo ignored \u003d new DurationInfo(LOG,\n        \"committing the output of %s task(s)\", pending.size());\n        CommitOperations.CommitContext commitContext\n            \u003d initiateCommitOperation()) {\n\n      Tasks.foreach(pending.getSourceFiles())\n          .stopOnFailure()\n          .suppressExceptions(false)\n          .executeWith(buildThreadPool(context))\n          .abortWith(path -\u003e\n              loadAndAbort(commitContext, pending, path, true, false))\n          .revertWith(path -\u003e\n              loadAndRevert(commitContext, pending, path))\n          .run(path -\u003e\n              loadAndCommit(commitContext, pending, path));\n    }\n  }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/commit/AbstractS3ACommitter.java",
          "extendedDetails": {
            "oldValue": "[context-JobContext, pending-List\u003cSinglePendingCommit\u003e]",
            "newValue": "[context-JobContext(modifiers-final), pending-ActiveCommit(modifiers-final)]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-16570. S3A committers encounter scale issues.\n\nContributed by Steve Loughran.\n\nThis addresses two scale issues which has surfaced in large scale benchmarks\nof the S3A Committers.\n\n* Thread pools are not cleaned up.\n  This now happens, with tests.\n\n* OOM on job commit for jobs with many thousands of tasks,\n  each generating tens of (very large) files.\n\nInstead of loading all pending commits into memory as a single list, the list\nof files to load is the sole list which is passed around; .pendingset files are\nloaded and processed in isolation -and reloaded if necessary for any\nabort/rollback operation.\n\nThe parallel commit/abort/revert operations now work at the .pendingset level,\nrather than that of individual pending commit files. The existing parallelized\nTasks API is still used to commit those files, but with a null thread pool, so\nas to serialize the operations.\n\nChange-Id: I5c8240cd31800eaa83d112358770ca0eb2bca797\n",
          "commitDate": "04/10/19 10:54 AM",
          "commitName": "6574f27fa348542411bff888b184cd7ce34e5d9e",
          "commitAuthor": "Steve Loughran",
          "commitDateOld": "20/06/19 1:56 AM",
          "commitNameOld": "e02eb24e0a9139418120027b694492e0738df20a",
          "commitAuthorOld": "Steve Loughran",
          "daysBetweenCommits": 106.37,
          "commitsBetweenForRepo": 952,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,23 @@\n-  protected void commitPendingUploads(JobContext context,\n-      List\u003cSinglePendingCommit\u003e pending) throws IOException {\n+  protected void commitPendingUploads(\n+      final JobContext context,\n+      final ActiveCommit pending) throws IOException {\n     if (pending.isEmpty()) {\n       LOG.warn(\"{}: No pending uploads to commit\", getRole());\n     }\n-    LOG.debug(\"{}: committing the output of {} task(s)\",\n-        getRole(), pending.size());\n-    try(CommitOperations.CommitContext commitContext\n+    try (DurationInfo ignored \u003d new DurationInfo(LOG,\n+        \"committing the output of %s task(s)\", pending.size());\n+        CommitOperations.CommitContext commitContext\n             \u003d initiateCommitOperation()) {\n-      Tasks.foreach(pending)\n+\n+      Tasks.foreach(pending.getSourceFiles())\n           .stopOnFailure()\n+          .suppressExceptions(false)\n           .executeWith(buildThreadPool(context))\n-          .onFailure((commit, exception) -\u003e\n-              commitContext.abortSingleCommit(commit))\n-          .abortWith(commitContext::abortSingleCommit)\n-          .revertWith(commitContext::revertCommit)\n-          .run(commitContext::commitOrFail);\n+          .abortWith(path -\u003e\n+              loadAndAbort(commitContext, pending, path, true, false))\n+          .revertWith(path -\u003e\n+              loadAndRevert(commitContext, pending, path))\n+          .run(path -\u003e\n+              loadAndCommit(commitContext, pending, path));\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void commitPendingUploads(\n      final JobContext context,\n      final ActiveCommit pending) throws IOException {\n    if (pending.isEmpty()) {\n      LOG.warn(\"{}: No pending uploads to commit\", getRole());\n    }\n    try (DurationInfo ignored \u003d new DurationInfo(LOG,\n        \"committing the output of %s task(s)\", pending.size());\n        CommitOperations.CommitContext commitContext\n            \u003d initiateCommitOperation()) {\n\n      Tasks.foreach(pending.getSourceFiles())\n          .stopOnFailure()\n          .suppressExceptions(false)\n          .executeWith(buildThreadPool(context))\n          .abortWith(path -\u003e\n              loadAndAbort(commitContext, pending, path, true, false))\n          .revertWith(path -\u003e\n              loadAndRevert(commitContext, pending, path))\n          .run(path -\u003e\n              loadAndCommit(commitContext, pending, path));\n    }\n  }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/commit/AbstractS3ACommitter.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparametermetachange",
          "commitMessage": "HADOOP-16570. S3A committers encounter scale issues.\n\nContributed by Steve Loughran.\n\nThis addresses two scale issues which has surfaced in large scale benchmarks\nof the S3A Committers.\n\n* Thread pools are not cleaned up.\n  This now happens, with tests.\n\n* OOM on job commit for jobs with many thousands of tasks,\n  each generating tens of (very large) files.\n\nInstead of loading all pending commits into memory as a single list, the list\nof files to load is the sole list which is passed around; .pendingset files are\nloaded and processed in isolation -and reloaded if necessary for any\nabort/rollback operation.\n\nThe parallel commit/abort/revert operations now work at the .pendingset level,\nrather than that of individual pending commit files. The existing parallelized\nTasks API is still used to commit those files, but with a null thread pool, so\nas to serialize the operations.\n\nChange-Id: I5c8240cd31800eaa83d112358770ca0eb2bca797\n",
          "commitDate": "04/10/19 10:54 AM",
          "commitName": "6574f27fa348542411bff888b184cd7ce34e5d9e",
          "commitAuthor": "Steve Loughran",
          "commitDateOld": "20/06/19 1:56 AM",
          "commitNameOld": "e02eb24e0a9139418120027b694492e0738df20a",
          "commitAuthorOld": "Steve Loughran",
          "daysBetweenCommits": 106.37,
          "commitsBetweenForRepo": 952,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,23 @@\n-  protected void commitPendingUploads(JobContext context,\n-      List\u003cSinglePendingCommit\u003e pending) throws IOException {\n+  protected void commitPendingUploads(\n+      final JobContext context,\n+      final ActiveCommit pending) throws IOException {\n     if (pending.isEmpty()) {\n       LOG.warn(\"{}: No pending uploads to commit\", getRole());\n     }\n-    LOG.debug(\"{}: committing the output of {} task(s)\",\n-        getRole(), pending.size());\n-    try(CommitOperations.CommitContext commitContext\n+    try (DurationInfo ignored \u003d new DurationInfo(LOG,\n+        \"committing the output of %s task(s)\", pending.size());\n+        CommitOperations.CommitContext commitContext\n             \u003d initiateCommitOperation()) {\n-      Tasks.foreach(pending)\n+\n+      Tasks.foreach(pending.getSourceFiles())\n           .stopOnFailure()\n+          .suppressExceptions(false)\n           .executeWith(buildThreadPool(context))\n-          .onFailure((commit, exception) -\u003e\n-              commitContext.abortSingleCommit(commit))\n-          .abortWith(commitContext::abortSingleCommit)\n-          .revertWith(commitContext::revertCommit)\n-          .run(commitContext::commitOrFail);\n+          .abortWith(path -\u003e\n+              loadAndAbort(commitContext, pending, path, true, false))\n+          .revertWith(path -\u003e\n+              loadAndRevert(commitContext, pending, path))\n+          .run(path -\u003e\n+              loadAndCommit(commitContext, pending, path));\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void commitPendingUploads(\n      final JobContext context,\n      final ActiveCommit pending) throws IOException {\n    if (pending.isEmpty()) {\n      LOG.warn(\"{}: No pending uploads to commit\", getRole());\n    }\n    try (DurationInfo ignored \u003d new DurationInfo(LOG,\n        \"committing the output of %s task(s)\", pending.size());\n        CommitOperations.CommitContext commitContext\n            \u003d initiateCommitOperation()) {\n\n      Tasks.foreach(pending.getSourceFiles())\n          .stopOnFailure()\n          .suppressExceptions(false)\n          .executeWith(buildThreadPool(context))\n          .abortWith(path -\u003e\n              loadAndAbort(commitContext, pending, path, true, false))\n          .revertWith(path -\u003e\n              loadAndRevert(commitContext, pending, path))\n          .run(path -\u003e\n              loadAndCommit(commitContext, pending, path));\n    }\n  }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/commit/AbstractS3ACommitter.java",
          "extendedDetails": {
            "oldValue": "[context-JobContext, pending-List\u003cSinglePendingCommit\u003e]",
            "newValue": "[context-JobContext(modifiers-final), pending-ActiveCommit(modifiers-final)]"
          }
        }
      ]
    },
    "e02eb24e0a9139418120027b694492e0738df20a": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15183. S3Guard store becomes inconsistent after partial failure of rename.\n\nContributed by Steve Loughran.\n\nChange-Id: I825b0bc36be960475d2d259b1cdab45ae1bb78eb\n",
      "commitDate": "20/06/19 1:56 AM",
      "commitName": "e02eb24e0a9139418120027b694492e0738df20a",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "26/02/19 9:10 AM",
      "commitNameOld": "52b2eab575d0b4d8ce7fa57661aaca6b8a123cc2",
      "commitAuthorOld": "Abhishek Modi",
      "daysBetweenCommits": 113.66,
      "commitsBetweenForRepo": 786,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,19 @@\n   protected void commitPendingUploads(JobContext context,\n       List\u003cSinglePendingCommit\u003e pending) throws IOException {\n     if (pending.isEmpty()) {\n       LOG.warn(\"{}: No pending uploads to commit\", getRole());\n     }\n     LOG.debug(\"{}: committing the output of {} task(s)\",\n         getRole(), pending.size());\n-    Tasks.foreach(pending)\n-        .stopOnFailure()\n-        .executeWith(buildThreadPool(context))\n-        .onFailure((commit, exception) -\u003e\n-                getCommitOperations().abortSingleCommit(commit))\n-        .abortWith(commit -\u003e getCommitOperations().abortSingleCommit(commit))\n-        .revertWith(commit -\u003e getCommitOperations().revertCommit(commit))\n-        .run(commit -\u003e getCommitOperations().commitOrFail(commit));\n+    try(CommitOperations.CommitContext commitContext\n+            \u003d initiateCommitOperation()) {\n+      Tasks.foreach(pending)\n+          .stopOnFailure()\n+          .executeWith(buildThreadPool(context))\n+          .onFailure((commit, exception) -\u003e\n+              commitContext.abortSingleCommit(commit))\n+          .abortWith(commitContext::abortSingleCommit)\n+          .revertWith(commitContext::revertCommit)\n+          .run(commitContext::commitOrFail);\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void commitPendingUploads(JobContext context,\n      List\u003cSinglePendingCommit\u003e pending) throws IOException {\n    if (pending.isEmpty()) {\n      LOG.warn(\"{}: No pending uploads to commit\", getRole());\n    }\n    LOG.debug(\"{}: committing the output of {} task(s)\",\n        getRole(), pending.size());\n    try(CommitOperations.CommitContext commitContext\n            \u003d initiateCommitOperation()) {\n      Tasks.foreach(pending)\n          .stopOnFailure()\n          .executeWith(buildThreadPool(context))\n          .onFailure((commit, exception) -\u003e\n              commitContext.abortSingleCommit(commit))\n          .abortWith(commitContext::abortSingleCommit)\n          .revertWith(commitContext::revertCommit)\n          .run(commitContext::commitOrFail);\n    }\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/commit/AbstractS3ACommitter.java",
      "extendedDetails": {}
    },
    "de8b6ca5ef8614de6d6277b7617e27c788b0555c": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-13786 Add S3A committer for zero-rename commits to S3 endpoints.\nContributed by Steve Loughran and Ryan Blue.\n",
      "commitDate": "22/11/17 7:28 AM",
      "commitName": "de8b6ca5ef8614de6d6277b7617e27c788b0555c",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,16 @@\n+  protected void commitPendingUploads(JobContext context,\n+      List\u003cSinglePendingCommit\u003e pending) throws IOException {\n+    if (pending.isEmpty()) {\n+      LOG.warn(\"{}: No pending uploads to commit\", getRole());\n+    }\n+    LOG.debug(\"{}: committing the output of {} task(s)\",\n+        getRole(), pending.size());\n+    Tasks.foreach(pending)\n+        .stopOnFailure()\n+        .executeWith(buildThreadPool(context))\n+        .onFailure((commit, exception) -\u003e\n+                getCommitOperations().abortSingleCommit(commit))\n+        .abortWith(commit -\u003e getCommitOperations().abortSingleCommit(commit))\n+        .revertWith(commit -\u003e getCommitOperations().revertCommit(commit))\n+        .run(commit -\u003e getCommitOperations().commitOrFail(commit));\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void commitPendingUploads(JobContext context,\n      List\u003cSinglePendingCommit\u003e pending) throws IOException {\n    if (pending.isEmpty()) {\n      LOG.warn(\"{}: No pending uploads to commit\", getRole());\n    }\n    LOG.debug(\"{}: committing the output of {} task(s)\",\n        getRole(), pending.size());\n    Tasks.foreach(pending)\n        .stopOnFailure()\n        .executeWith(buildThreadPool(context))\n        .onFailure((commit, exception) -\u003e\n                getCommitOperations().abortSingleCommit(commit))\n        .abortWith(commit -\u003e getCommitOperations().abortSingleCommit(commit))\n        .revertWith(commit -\u003e getCommitOperations().revertCommit(commit))\n        .run(commit -\u003e getCommitOperations().commitOrFail(commit));\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/commit/AbstractS3ACommitter.java"
    }
  }
}