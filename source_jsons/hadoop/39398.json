{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AutoCreatedLeafQueue.java",
  "functionName": "mergeCapacities",
  "functionId": "mergeCapacities___capacities-QueueCapacities",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/AutoCreatedLeafQueue.java",
  "functionStartLine": 107,
  "functionEndLine": 127,
  "numCommitsSeen": 8,
  "timeTaken": 2882,
  "changeHistory": [
    "2fe122e322afd35dfae6e45b3e7fdaddd20a411f",
    "312ceebde8ef8881fc43d82a096fb852f833a206",
    "b38643c9a8dd2c53024ae830b9565a550d0ec39c"
  ],
  "changeHistoryShort": {
    "2fe122e322afd35dfae6e45b3e7fdaddd20a411f": "Ymodifierchange",
    "312ceebde8ef8881fc43d82a096fb852f833a206": "Ybodychange",
    "b38643c9a8dd2c53024ae830b9565a550d0ec39c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2fe122e322afd35dfae6e45b3e7fdaddd20a411f": {
      "type": "Ymodifierchange",
      "commitMessage": "YARN-10154. CS Dynamic Queues cannot be configured with absolute resources. Contributed by Manikandan R.\n",
      "commitDate": "17/04/20 6:21 AM",
      "commitName": "2fe122e322afd35dfae6e45b3e7fdaddd20a411f",
      "commitAuthor": "Sunil G",
      "commitDateOld": "25/03/20 4:20 AM",
      "commitNameOld": "cdb2107066a2d8557270888c0a9a75f29a6853bf",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 23.08,
      "commitsBetweenForRepo": 72,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n-  private void mergeCapacities(QueueCapacities capacities) {\n+  public void mergeCapacities(QueueCapacities capacities) {\n     for ( String nodeLabel : capacities.getExistingNodeLabels()) {\n       queueCapacities.setCapacity(nodeLabel,\n           capacities.getCapacity(nodeLabel));\n       queueCapacities.setAbsoluteCapacity(nodeLabel, capacities\n           .getAbsoluteCapacity(nodeLabel));\n       queueCapacities.setMaximumCapacity(nodeLabel, capacities\n           .getMaximumCapacity(nodeLabel));\n       queueCapacities.setAbsoluteMaximumCapacity(nodeLabel, capacities\n           .getAbsoluteMaximumCapacity(nodeLabel));\n \n       Resource resourceByLabel \u003d labelManager.getResourceByLabel(nodeLabel,\n           csContext.getClusterResource());\n       getQueueResourceQuotas().setEffectiveMinResource(nodeLabel,\n           Resources.multiply(resourceByLabel,\n               queueCapacities.getAbsoluteCapacity(nodeLabel)));\n       getQueueResourceQuotas().setEffectiveMaxResource(nodeLabel,\n           Resources.multiply(resourceByLabel, queueCapacities\n               .getAbsoluteMaximumCapacity(nodeLabel)));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void mergeCapacities(QueueCapacities capacities) {\n    for ( String nodeLabel : capacities.getExistingNodeLabels()) {\n      queueCapacities.setCapacity(nodeLabel,\n          capacities.getCapacity(nodeLabel));\n      queueCapacities.setAbsoluteCapacity(nodeLabel, capacities\n          .getAbsoluteCapacity(nodeLabel));\n      queueCapacities.setMaximumCapacity(nodeLabel, capacities\n          .getMaximumCapacity(nodeLabel));\n      queueCapacities.setAbsoluteMaximumCapacity(nodeLabel, capacities\n          .getAbsoluteMaximumCapacity(nodeLabel));\n\n      Resource resourceByLabel \u003d labelManager.getResourceByLabel(nodeLabel,\n          csContext.getClusterResource());\n      getQueueResourceQuotas().setEffectiveMinResource(nodeLabel,\n          Resources.multiply(resourceByLabel,\n              queueCapacities.getAbsoluteCapacity(nodeLabel)));\n      getQueueResourceQuotas().setEffectiveMaxResource(nodeLabel,\n          Resources.multiply(resourceByLabel, queueCapacities\n              .getAbsoluteMaximumCapacity(nodeLabel)));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/AutoCreatedLeafQueue.java",
      "extendedDetails": {
        "oldValue": "[private]",
        "newValue": "[public]"
      }
    },
    "312ceebde8ef8881fc43d82a096fb852f833a206": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7632. Effective min and max resource need to be set for auto created leaf queues upon creation and capacity management. Contributed by Suma Shivaprasad.\n",
      "commitDate": "11/12/17 5:50 AM",
      "commitName": "312ceebde8ef8881fc43d82a096fb852f833a206",
      "commitAuthor": "Sunil G",
      "commitDateOld": "08/12/17 3:10 PM",
      "commitNameOld": "b38643c9a8dd2c53024ae830b9565a550d0ec39c",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 2.61,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,21 @@\n   private void mergeCapacities(QueueCapacities capacities) {\n     for ( String nodeLabel : capacities.getExistingNodeLabels()) {\n-      this.queueCapacities.setCapacity(nodeLabel,\n+      queueCapacities.setCapacity(nodeLabel,\n           capacities.getCapacity(nodeLabel));\n-      this.queueCapacities.setAbsoluteCapacity(nodeLabel, capacities\n+      queueCapacities.setAbsoluteCapacity(nodeLabel, capacities\n           .getAbsoluteCapacity(nodeLabel));\n-      this.queueCapacities.setMaximumCapacity(nodeLabel, capacities\n+      queueCapacities.setMaximumCapacity(nodeLabel, capacities\n           .getMaximumCapacity(nodeLabel));\n-      this.queueCapacities.setAbsoluteMaximumCapacity(nodeLabel, capacities\n+      queueCapacities.setAbsoluteMaximumCapacity(nodeLabel, capacities\n           .getAbsoluteMaximumCapacity(nodeLabel));\n+\n+      Resource resourceByLabel \u003d labelManager.getResourceByLabel(nodeLabel,\n+          csContext.getClusterResource());\n+      getQueueResourceQuotas().setEffectiveMinResource(nodeLabel,\n+          Resources.multiply(resourceByLabel,\n+              queueCapacities.getAbsoluteCapacity(nodeLabel)));\n+      getQueueResourceQuotas().setEffectiveMaxResource(nodeLabel,\n+          Resources.multiply(resourceByLabel, queueCapacities\n+              .getAbsoluteMaximumCapacity(nodeLabel)));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeCapacities(QueueCapacities capacities) {\n    for ( String nodeLabel : capacities.getExistingNodeLabels()) {\n      queueCapacities.setCapacity(nodeLabel,\n          capacities.getCapacity(nodeLabel));\n      queueCapacities.setAbsoluteCapacity(nodeLabel, capacities\n          .getAbsoluteCapacity(nodeLabel));\n      queueCapacities.setMaximumCapacity(nodeLabel, capacities\n          .getMaximumCapacity(nodeLabel));\n      queueCapacities.setAbsoluteMaximumCapacity(nodeLabel, capacities\n          .getAbsoluteMaximumCapacity(nodeLabel));\n\n      Resource resourceByLabel \u003d labelManager.getResourceByLabel(nodeLabel,\n          csContext.getClusterResource());\n      getQueueResourceQuotas().setEffectiveMinResource(nodeLabel,\n          Resources.multiply(resourceByLabel,\n              queueCapacities.getAbsoluteCapacity(nodeLabel)));\n      getQueueResourceQuotas().setEffectiveMaxResource(nodeLabel,\n          Resources.multiply(resourceByLabel, queueCapacities\n              .getAbsoluteMaximumCapacity(nodeLabel)));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/AutoCreatedLeafQueue.java",
      "extendedDetails": {}
    },
    "b38643c9a8dd2c53024ae830b9565a550d0ec39c": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7473. Implement Framework and policy for capacity management of auto created queues. (Suma Shivaprasad via wangda)\n\nChange-Id: Icca7805fe12f6f7fb335effff4b121b6f7f6337b\n",
      "commitDate": "08/12/17 3:10 PM",
      "commitName": "b38643c9a8dd2c53024ae830b9565a550d0ec39c",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,12 @@\n+  private void mergeCapacities(QueueCapacities capacities) {\n+    for ( String nodeLabel : capacities.getExistingNodeLabels()) {\n+      this.queueCapacities.setCapacity(nodeLabel,\n+          capacities.getCapacity(nodeLabel));\n+      this.queueCapacities.setAbsoluteCapacity(nodeLabel, capacities\n+          .getAbsoluteCapacity(nodeLabel));\n+      this.queueCapacities.setMaximumCapacity(nodeLabel, capacities\n+          .getMaximumCapacity(nodeLabel));\n+      this.queueCapacities.setAbsoluteMaximumCapacity(nodeLabel, capacities\n+          .getAbsoluteMaximumCapacity(nodeLabel));\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeCapacities(QueueCapacities capacities) {\n    for ( String nodeLabel : capacities.getExistingNodeLabels()) {\n      this.queueCapacities.setCapacity(nodeLabel,\n          capacities.getCapacity(nodeLabel));\n      this.queueCapacities.setAbsoluteCapacity(nodeLabel, capacities\n          .getAbsoluteCapacity(nodeLabel));\n      this.queueCapacities.setMaximumCapacity(nodeLabel, capacities\n          .getMaximumCapacity(nodeLabel));\n      this.queueCapacities.setAbsoluteMaximumCapacity(nodeLabel, capacities\n          .getAbsoluteMaximumCapacity(nodeLabel));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/AutoCreatedLeafQueue.java"
    }
  }
}