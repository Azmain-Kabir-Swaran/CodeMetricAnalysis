{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "QueueConfigurationParser.java",
  "functionName": "getQueueElement",
  "functionId": "getQueueElement___document-Document__jqi-JobQueueInfo",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/QueueConfigurationParser.java",
  "functionStartLine": 427,
  "functionEndLine": 469,
  "numCommitsSeen": 5,
  "timeTaken": 4431,
  "changeHistory": [
    "7555b4df74628c2aee78bd9f1f1c3f57e9fe3a9d",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "7555b4df74628c2aee78bd9f1f1c3f57e9fe3a9d": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7555b4df74628c2aee78bd9f1f1c3f57e9fe3a9d": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-4846. Some JobQueueInfo methods are public in MR1 but protected in MR2. Contributed by Sandy Ryza.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1448597 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/02/13 3:34 AM",
      "commitName": "7555b4df74628c2aee78bd9f1f1c3f57e9fe3a9d",
      "commitAuthor": "Thomas White",
      "commitDateOld": "24/08/11 5:14 PM",
      "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 546.47,
      "commitsBetweenForRepo": 3340,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,43 +1,43 @@\n   static Element getQueueElement(Document document, JobQueueInfo jqi) {\n \n     // Queue\n     Element q \u003d document.createElement(QUEUE_TAG);\n \n     // Queue-name\n     Element qName \u003d document.createElement(QUEUE_NAME_TAG);\n     qName.setTextContent(getSimpleQueueName(jqi.getQueueName()));\n     q.appendChild(qName);\n \n     // Queue-properties\n     Properties props \u003d jqi.getProperties();\n     Element propsElement \u003d document.createElement(PROPERTIES_TAG);\n     if (props !\u003d null) {\n       Set\u003cString\u003e propList \u003d props.stringPropertyNames();\n       for (String prop : propList) {\n         Element propertyElement \u003d document.createElement(PROPERTY_TAG);\n         propertyElement.setAttribute(KEY_TAG, prop);\n         propertyElement.setAttribute(VALUE_TAG, (String) props.get(prop));\n         propsElement.appendChild(propertyElement);\n       }\n     }\n     q.appendChild(propsElement);\n \n     // Queue-state\n-    String queueState \u003d jqi.getQueueState();\n+    String queueState \u003d jqi.getState().getStateName();\n     if (queueState !\u003d null\n         \u0026\u0026 !queueState.equals(QueueState.UNDEFINED.getStateName())) {\n       Element qStateElement \u003d document.createElement(STATE_TAG);\n       qStateElement.setTextContent(queueState);\n       q.appendChild(qStateElement);\n     }\n \n     // Queue-children\n     List\u003cJobQueueInfo\u003e children \u003d jqi.getChildren();\n     if (children !\u003d null) {\n       for (JobQueueInfo child : children) {\n         q.appendChild(getQueueElement(document, child));\n       }\n     }\n \n     return q;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static Element getQueueElement(Document document, JobQueueInfo jqi) {\n\n    // Queue\n    Element q \u003d document.createElement(QUEUE_TAG);\n\n    // Queue-name\n    Element qName \u003d document.createElement(QUEUE_NAME_TAG);\n    qName.setTextContent(getSimpleQueueName(jqi.getQueueName()));\n    q.appendChild(qName);\n\n    // Queue-properties\n    Properties props \u003d jqi.getProperties();\n    Element propsElement \u003d document.createElement(PROPERTIES_TAG);\n    if (props !\u003d null) {\n      Set\u003cString\u003e propList \u003d props.stringPropertyNames();\n      for (String prop : propList) {\n        Element propertyElement \u003d document.createElement(PROPERTY_TAG);\n        propertyElement.setAttribute(KEY_TAG, prop);\n        propertyElement.setAttribute(VALUE_TAG, (String) props.get(prop));\n        propsElement.appendChild(propertyElement);\n      }\n    }\n    q.appendChild(propsElement);\n\n    // Queue-state\n    String queueState \u003d jqi.getState().getStateName();\n    if (queueState !\u003d null\n        \u0026\u0026 !queueState.equals(QueueState.UNDEFINED.getStateName())) {\n      Element qStateElement \u003d document.createElement(STATE_TAG);\n      qStateElement.setTextContent(queueState);\n      q.appendChild(qStateElement);\n    }\n\n    // Queue-children\n    List\u003cJobQueueInfo\u003e children \u003d jqi.getChildren();\n    if (children !\u003d null) {\n      for (JobQueueInfo child : children) {\n        q.appendChild(getQueueElement(document, child));\n      }\n    }\n\n    return q;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/QueueConfigurationParser.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  static Element getQueueElement(Document document, JobQueueInfo jqi) {\n\n    // Queue\n    Element q \u003d document.createElement(QUEUE_TAG);\n\n    // Queue-name\n    Element qName \u003d document.createElement(QUEUE_NAME_TAG);\n    qName.setTextContent(getSimpleQueueName(jqi.getQueueName()));\n    q.appendChild(qName);\n\n    // Queue-properties\n    Properties props \u003d jqi.getProperties();\n    Element propsElement \u003d document.createElement(PROPERTIES_TAG);\n    if (props !\u003d null) {\n      Set\u003cString\u003e propList \u003d props.stringPropertyNames();\n      for (String prop : propList) {\n        Element propertyElement \u003d document.createElement(PROPERTY_TAG);\n        propertyElement.setAttribute(KEY_TAG, prop);\n        propertyElement.setAttribute(VALUE_TAG, (String) props.get(prop));\n        propsElement.appendChild(propertyElement);\n      }\n    }\n    q.appendChild(propsElement);\n\n    // Queue-state\n    String queueState \u003d jqi.getQueueState();\n    if (queueState !\u003d null\n        \u0026\u0026 !queueState.equals(QueueState.UNDEFINED.getStateName())) {\n      Element qStateElement \u003d document.createElement(STATE_TAG);\n      qStateElement.setTextContent(queueState);\n      q.appendChild(qStateElement);\n    }\n\n    // Queue-children\n    List\u003cJobQueueInfo\u003e children \u003d jqi.getChildren();\n    if (children !\u003d null) {\n      for (JobQueueInfo child : children) {\n        q.appendChild(getQueueElement(document, child));\n      }\n    }\n\n    return q;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/QueueConfigurationParser.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/QueueConfigurationParser.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/QueueConfigurationParser.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  static Element getQueueElement(Document document, JobQueueInfo jqi) {\n\n    // Queue\n    Element q \u003d document.createElement(QUEUE_TAG);\n\n    // Queue-name\n    Element qName \u003d document.createElement(QUEUE_NAME_TAG);\n    qName.setTextContent(getSimpleQueueName(jqi.getQueueName()));\n    q.appendChild(qName);\n\n    // Queue-properties\n    Properties props \u003d jqi.getProperties();\n    Element propsElement \u003d document.createElement(PROPERTIES_TAG);\n    if (props !\u003d null) {\n      Set\u003cString\u003e propList \u003d props.stringPropertyNames();\n      for (String prop : propList) {\n        Element propertyElement \u003d document.createElement(PROPERTY_TAG);\n        propertyElement.setAttribute(KEY_TAG, prop);\n        propertyElement.setAttribute(VALUE_TAG, (String) props.get(prop));\n        propsElement.appendChild(propertyElement);\n      }\n    }\n    q.appendChild(propsElement);\n\n    // Queue-state\n    String queueState \u003d jqi.getQueueState();\n    if (queueState !\u003d null\n        \u0026\u0026 !queueState.equals(QueueState.UNDEFINED.getStateName())) {\n      Element qStateElement \u003d document.createElement(STATE_TAG);\n      qStateElement.setTextContent(queueState);\n      q.appendChild(qStateElement);\n    }\n\n    // Queue-children\n    List\u003cJobQueueInfo\u003e children \u003d jqi.getChildren();\n    if (children !\u003d null) {\n      for (JobQueueInfo child : children) {\n        q.appendChild(getQueueElement(document, child));\n      }\n    }\n\n    return q;\n  }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/QueueConfigurationParser.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/java/org/apache/hadoop/mapred/QueueConfigurationParser.java",
        "newPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/QueueConfigurationParser.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,43 @@\n+  static Element getQueueElement(Document document, JobQueueInfo jqi) {\n+\n+    // Queue\n+    Element q \u003d document.createElement(QUEUE_TAG);\n+\n+    // Queue-name\n+    Element qName \u003d document.createElement(QUEUE_NAME_TAG);\n+    qName.setTextContent(getSimpleQueueName(jqi.getQueueName()));\n+    q.appendChild(qName);\n+\n+    // Queue-properties\n+    Properties props \u003d jqi.getProperties();\n+    Element propsElement \u003d document.createElement(PROPERTIES_TAG);\n+    if (props !\u003d null) {\n+      Set\u003cString\u003e propList \u003d props.stringPropertyNames();\n+      for (String prop : propList) {\n+        Element propertyElement \u003d document.createElement(PROPERTY_TAG);\n+        propertyElement.setAttribute(KEY_TAG, prop);\n+        propertyElement.setAttribute(VALUE_TAG, (String) props.get(prop));\n+        propsElement.appendChild(propertyElement);\n+      }\n+    }\n+    q.appendChild(propsElement);\n+\n+    // Queue-state\n+    String queueState \u003d jqi.getQueueState();\n+    if (queueState !\u003d null\n+        \u0026\u0026 !queueState.equals(QueueState.UNDEFINED.getStateName())) {\n+      Element qStateElement \u003d document.createElement(STATE_TAG);\n+      qStateElement.setTextContent(queueState);\n+      q.appendChild(qStateElement);\n+    }\n+\n+    // Queue-children\n+    List\u003cJobQueueInfo\u003e children \u003d jqi.getChildren();\n+    if (children !\u003d null) {\n+      for (JobQueueInfo child : children) {\n+        q.appendChild(getQueueElement(document, child));\n+      }\n+    }\n+\n+    return q;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  static Element getQueueElement(Document document, JobQueueInfo jqi) {\n\n    // Queue\n    Element q \u003d document.createElement(QUEUE_TAG);\n\n    // Queue-name\n    Element qName \u003d document.createElement(QUEUE_NAME_TAG);\n    qName.setTextContent(getSimpleQueueName(jqi.getQueueName()));\n    q.appendChild(qName);\n\n    // Queue-properties\n    Properties props \u003d jqi.getProperties();\n    Element propsElement \u003d document.createElement(PROPERTIES_TAG);\n    if (props !\u003d null) {\n      Set\u003cString\u003e propList \u003d props.stringPropertyNames();\n      for (String prop : propList) {\n        Element propertyElement \u003d document.createElement(PROPERTY_TAG);\n        propertyElement.setAttribute(KEY_TAG, prop);\n        propertyElement.setAttribute(VALUE_TAG, (String) props.get(prop));\n        propsElement.appendChild(propertyElement);\n      }\n    }\n    q.appendChild(propsElement);\n\n    // Queue-state\n    String queueState \u003d jqi.getQueueState();\n    if (queueState !\u003d null\n        \u0026\u0026 !queueState.equals(QueueState.UNDEFINED.getStateName())) {\n      Element qStateElement \u003d document.createElement(STATE_TAG);\n      qStateElement.setTextContent(queueState);\n      q.appendChild(qStateElement);\n    }\n\n    // Queue-children\n    List\u003cJobQueueInfo\u003e children \u003d jqi.getChildren();\n    if (children !\u003d null) {\n      for (JobQueueInfo child : children) {\n        q.appendChild(getQueueElement(document, child));\n      }\n    }\n\n    return q;\n  }",
      "path": "mapreduce/src/java/org/apache/hadoop/mapred/QueueConfigurationParser.java"
    }
  }
}