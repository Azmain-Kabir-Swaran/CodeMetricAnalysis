{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "XORRawDecoder.java",
  "functionName": "doDecode",
  "functionId": "doDecode___decodingState-ByteArrayDecodingState",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/erasurecode/rawcoder/XORRawDecoder.java",
  "functionStartLine": 65,
  "functionEndLine": 86,
  "numCommitsSeen": 18,
  "timeTaken": 2629,
  "changeHistory": [
    "77202fa1035a54496d11d07472fbc399148ff630",
    "343c0e76fcd95ac739ca7cd6742c9d617e19fc37",
    "09c3a375bafa481e88d1317388a73c46950164c9",
    "17f7cdc04764524c091bb0e9eb43399f88ac0e6b",
    "b29f3bde4d2fd2f2c4abd6d7b5f97a81bb50efb2"
  ],
  "changeHistoryShort": {
    "77202fa1035a54496d11d07472fbc399148ff630": "Ymultichange(Yparameterchange,Ybodychange)",
    "343c0e76fcd95ac739ca7cd6742c9d617e19fc37": "Ymultichange(Yparameterchange,Ybodychange)",
    "09c3a375bafa481e88d1317388a73c46950164c9": "Ybodychange",
    "17f7cdc04764524c091bb0e9eb43399f88ac0e6b": "Yfilerename",
    "b29f3bde4d2fd2f2c4abd6d7b5f97a81bb50efb2": "Yintroduced"
  },
  "changeHistoryDetails": {
    "77202fa1035a54496d11d07472fbc399148ff630": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-13010. Refactor raw erasure coders. Contributed by Kai Zheng\n",
      "commitDate": "26/05/16 10:23 PM",
      "commitName": "77202fa1035a54496d11d07472fbc399148ff630",
      "commitAuthor": "Kai Zheng",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-13010. Refactor raw erasure coders. Contributed by Kai Zheng\n",
          "commitDate": "26/05/16 10:23 PM",
          "commitName": "77202fa1035a54496d11d07472fbc399148ff630",
          "commitAuthor": "Kai Zheng",
          "commitDateOld": "29/10/15 12:04 AM",
          "commitNameOld": "5eca6dece67620f990f3306b6caaf09f317b38f6",
          "commitAuthorOld": "Walter Su",
          "daysBetweenCommits": 210.93,
          "commitsBetweenForRepo": 1340,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,22 @@\n-  protected void doDecode(byte[][] inputs, int[] inputOffsets, int dataLen,\n-                          int[] erasedIndexes, byte[][] outputs,\n-                          int[] outputOffsets) {\n-    byte[] output \u003d outputs[0];\n-    resetBuffer(output, outputOffsets[0], dataLen);\n-\n-    int erasedIdx \u003d erasedIndexes[0];\n+  protected void doDecode(ByteArrayDecodingState decodingState) {\n+    byte[] output \u003d decodingState.outputs[0];\n+    int dataLen \u003d decodingState.decodeLength;\n+    CoderUtil.resetOutputBuffers(decodingState.outputs,\n+        decodingState.outputOffsets, dataLen);\n+    int erasedIdx \u003d decodingState.erasedIndexes[0];\n \n     // Process the inputs.\n     int iIdx, oIdx;\n-    for (int i \u003d 0; i \u003c inputs.length; i++) {\n+    for (int i \u003d 0; i \u003c decodingState.inputs.length; i++) {\n       // Skip the erased location.\n       if (i \u003d\u003d erasedIdx) {\n         continue;\n       }\n \n-      for (iIdx \u003d inputOffsets[i], oIdx \u003d outputOffsets[0];\n-           iIdx \u003c inputOffsets[i] + dataLen; iIdx++, oIdx++) {\n-        output[oIdx] ^\u003d inputs[i][iIdx];\n+      for (iIdx \u003d decodingState.inputOffsets[i],\n+               oIdx \u003d decodingState.outputOffsets[0];\n+           iIdx \u003c decodingState.inputOffsets[i] + dataLen; iIdx++, oIdx++) {\n+        output[oIdx] ^\u003d decodingState.inputs[i][iIdx];\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void doDecode(ByteArrayDecodingState decodingState) {\n    byte[] output \u003d decodingState.outputs[0];\n    int dataLen \u003d decodingState.decodeLength;\n    CoderUtil.resetOutputBuffers(decodingState.outputs,\n        decodingState.outputOffsets, dataLen);\n    int erasedIdx \u003d decodingState.erasedIndexes[0];\n\n    // Process the inputs.\n    int iIdx, oIdx;\n    for (int i \u003d 0; i \u003c decodingState.inputs.length; i++) {\n      // Skip the erased location.\n      if (i \u003d\u003d erasedIdx) {\n        continue;\n      }\n\n      for (iIdx \u003d decodingState.inputOffsets[i],\n               oIdx \u003d decodingState.outputOffsets[0];\n           iIdx \u003c decodingState.inputOffsets[i] + dataLen; iIdx++, oIdx++) {\n        output[oIdx] ^\u003d decodingState.inputs[i][iIdx];\n      }\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/erasurecode/rawcoder/XORRawDecoder.java",
          "extendedDetails": {
            "oldValue": "[inputs-byte[][], inputOffsets-int[], dataLen-int, erasedIndexes-int[], outputs-byte[][], outputOffsets-int[]]",
            "newValue": "[decodingState-ByteArrayDecodingState]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-13010. Refactor raw erasure coders. Contributed by Kai Zheng\n",
          "commitDate": "26/05/16 10:23 PM",
          "commitName": "77202fa1035a54496d11d07472fbc399148ff630",
          "commitAuthor": "Kai Zheng",
          "commitDateOld": "29/10/15 12:04 AM",
          "commitNameOld": "5eca6dece67620f990f3306b6caaf09f317b38f6",
          "commitAuthorOld": "Walter Su",
          "daysBetweenCommits": 210.93,
          "commitsBetweenForRepo": 1340,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,22 @@\n-  protected void doDecode(byte[][] inputs, int[] inputOffsets, int dataLen,\n-                          int[] erasedIndexes, byte[][] outputs,\n-                          int[] outputOffsets) {\n-    byte[] output \u003d outputs[0];\n-    resetBuffer(output, outputOffsets[0], dataLen);\n-\n-    int erasedIdx \u003d erasedIndexes[0];\n+  protected void doDecode(ByteArrayDecodingState decodingState) {\n+    byte[] output \u003d decodingState.outputs[0];\n+    int dataLen \u003d decodingState.decodeLength;\n+    CoderUtil.resetOutputBuffers(decodingState.outputs,\n+        decodingState.outputOffsets, dataLen);\n+    int erasedIdx \u003d decodingState.erasedIndexes[0];\n \n     // Process the inputs.\n     int iIdx, oIdx;\n-    for (int i \u003d 0; i \u003c inputs.length; i++) {\n+    for (int i \u003d 0; i \u003c decodingState.inputs.length; i++) {\n       // Skip the erased location.\n       if (i \u003d\u003d erasedIdx) {\n         continue;\n       }\n \n-      for (iIdx \u003d inputOffsets[i], oIdx \u003d outputOffsets[0];\n-           iIdx \u003c inputOffsets[i] + dataLen; iIdx++, oIdx++) {\n-        output[oIdx] ^\u003d inputs[i][iIdx];\n+      for (iIdx \u003d decodingState.inputOffsets[i],\n+               oIdx \u003d decodingState.outputOffsets[0];\n+           iIdx \u003c decodingState.inputOffsets[i] + dataLen; iIdx++, oIdx++) {\n+        output[oIdx] ^\u003d decodingState.inputs[i][iIdx];\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void doDecode(ByteArrayDecodingState decodingState) {\n    byte[] output \u003d decodingState.outputs[0];\n    int dataLen \u003d decodingState.decodeLength;\n    CoderUtil.resetOutputBuffers(decodingState.outputs,\n        decodingState.outputOffsets, dataLen);\n    int erasedIdx \u003d decodingState.erasedIndexes[0];\n\n    // Process the inputs.\n    int iIdx, oIdx;\n    for (int i \u003d 0; i \u003c decodingState.inputs.length; i++) {\n      // Skip the erased location.\n      if (i \u003d\u003d erasedIdx) {\n        continue;\n      }\n\n      for (iIdx \u003d decodingState.inputOffsets[i],\n               oIdx \u003d decodingState.outputOffsets[0];\n           iIdx \u003c decodingState.inputOffsets[i] + dataLen; iIdx++, oIdx++) {\n        output[oIdx] ^\u003d decodingState.inputs[i][iIdx];\n      }\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/erasurecode/rawcoder/XORRawDecoder.java",
          "extendedDetails": {}
        }
      ]
    },
    "343c0e76fcd95ac739ca7cd6742c9d617e19fc37": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-11938. Enhance ByteBuffer version encode/decode API of raw erasure coder. Contributed by Kai Zheng.\n",
      "commitDate": "26/05/15 12:02 PM",
      "commitName": "343c0e76fcd95ac739ca7cd6742c9d617e19fc37",
      "commitAuthor": "Zhe Zhang",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-11938. Enhance ByteBuffer version encode/decode API of raw erasure coder. Contributed by Kai Zheng.\n",
          "commitDate": "26/05/15 12:02 PM",
          "commitName": "343c0e76fcd95ac739ca7cd6742c9d617e19fc37",
          "commitAuthor": "Zhe Zhang",
          "commitDateOld": "26/05/15 12:02 PM",
          "commitNameOld": "09c3a375bafa481e88d1317388a73c46950164c9",
          "commitAuthorOld": "Zhe Zhang",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,22 @@\n-  protected void doDecode(byte[][] inputs,\n-                          int[] erasedIndexes, byte[][] outputs) {\n-    resetBuffer(outputs[0]);\n+  protected void doDecode(byte[][] inputs, int[] inputOffsets, int dataLen,\n+                          int[] erasedIndexes, byte[][] outputs,\n+                          int[] outputOffsets) {\n+    byte[] output \u003d outputs[0];\n+    resetBuffer(output, outputOffsets[0], dataLen);\n \n-    int bufSize \u003d getChunkSize();\n     int erasedIdx \u003d erasedIndexes[0];\n \n     // Process the inputs.\n+    int iIdx, oIdx;\n     for (int i \u003d 0; i \u003c inputs.length; i++) {\n       // Skip the erased location.\n       if (i \u003d\u003d erasedIdx) {\n         continue;\n       }\n \n-      for (int j \u003d 0; j \u003c bufSize; j++) {\n-        outputs[0][j] ^\u003d inputs[i][j];\n+      for (iIdx \u003d inputOffsets[i], oIdx \u003d outputOffsets[0];\n+           iIdx \u003c inputOffsets[i] + dataLen; iIdx++, oIdx++) {\n+        output[oIdx] ^\u003d inputs[i][iIdx];\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void doDecode(byte[][] inputs, int[] inputOffsets, int dataLen,\n                          int[] erasedIndexes, byte[][] outputs,\n                          int[] outputOffsets) {\n    byte[] output \u003d outputs[0];\n    resetBuffer(output, outputOffsets[0], dataLen);\n\n    int erasedIdx \u003d erasedIndexes[0];\n\n    // Process the inputs.\n    int iIdx, oIdx;\n    for (int i \u003d 0; i \u003c inputs.length; i++) {\n      // Skip the erased location.\n      if (i \u003d\u003d erasedIdx) {\n        continue;\n      }\n\n      for (iIdx \u003d inputOffsets[i], oIdx \u003d outputOffsets[0];\n           iIdx \u003c inputOffsets[i] + dataLen; iIdx++, oIdx++) {\n        output[oIdx] ^\u003d inputs[i][iIdx];\n      }\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/erasurecode/rawcoder/XORRawDecoder.java",
          "extendedDetails": {
            "oldValue": "[inputs-byte[][], erasedIndexes-int[], outputs-byte[][]]",
            "newValue": "[inputs-byte[][], inputOffsets-int[], dataLen-int, erasedIndexes-int[], outputs-byte[][], outputOffsets-int[]]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-11938. Enhance ByteBuffer version encode/decode API of raw erasure coder. Contributed by Kai Zheng.\n",
          "commitDate": "26/05/15 12:02 PM",
          "commitName": "343c0e76fcd95ac739ca7cd6742c9d617e19fc37",
          "commitAuthor": "Zhe Zhang",
          "commitDateOld": "26/05/15 12:02 PM",
          "commitNameOld": "09c3a375bafa481e88d1317388a73c46950164c9",
          "commitAuthorOld": "Zhe Zhang",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,22 @@\n-  protected void doDecode(byte[][] inputs,\n-                          int[] erasedIndexes, byte[][] outputs) {\n-    resetBuffer(outputs[0]);\n+  protected void doDecode(byte[][] inputs, int[] inputOffsets, int dataLen,\n+                          int[] erasedIndexes, byte[][] outputs,\n+                          int[] outputOffsets) {\n+    byte[] output \u003d outputs[0];\n+    resetBuffer(output, outputOffsets[0], dataLen);\n \n-    int bufSize \u003d getChunkSize();\n     int erasedIdx \u003d erasedIndexes[0];\n \n     // Process the inputs.\n+    int iIdx, oIdx;\n     for (int i \u003d 0; i \u003c inputs.length; i++) {\n       // Skip the erased location.\n       if (i \u003d\u003d erasedIdx) {\n         continue;\n       }\n \n-      for (int j \u003d 0; j \u003c bufSize; j++) {\n-        outputs[0][j] ^\u003d inputs[i][j];\n+      for (iIdx \u003d inputOffsets[i], oIdx \u003d outputOffsets[0];\n+           iIdx \u003c inputOffsets[i] + dataLen; iIdx++, oIdx++) {\n+        output[oIdx] ^\u003d inputs[i][iIdx];\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void doDecode(byte[][] inputs, int[] inputOffsets, int dataLen,\n                          int[] erasedIndexes, byte[][] outputs,\n                          int[] outputOffsets) {\n    byte[] output \u003d outputs[0];\n    resetBuffer(output, outputOffsets[0], dataLen);\n\n    int erasedIdx \u003d erasedIndexes[0];\n\n    // Process the inputs.\n    int iIdx, oIdx;\n    for (int i \u003d 0; i \u003c inputs.length; i++) {\n      // Skip the erased location.\n      if (i \u003d\u003d erasedIdx) {\n        continue;\n      }\n\n      for (iIdx \u003d inputOffsets[i], oIdx \u003d outputOffsets[0];\n           iIdx \u003c inputOffsets[i] + dataLen; iIdx++, oIdx++) {\n        output[oIdx] ^\u003d inputs[i][iIdx];\n      }\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/erasurecode/rawcoder/XORRawDecoder.java",
          "extendedDetails": {}
        }
      ]
    },
    "09c3a375bafa481e88d1317388a73c46950164c9": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11920. Refactor some codes for erasure coders. Contributed by Kai Zheng.\n",
      "commitDate": "26/05/15 12:02 PM",
      "commitName": "09c3a375bafa481e88d1317388a73c46950164c9",
      "commitAuthor": "Zhe Zhang",
      "commitDateOld": "26/05/15 11:55 AM",
      "commitNameOld": "17f7cdc04764524c091bb0e9eb43399f88ac0e6b",
      "commitAuthorOld": "Kai Zheng",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 74,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,19 @@\n-  protected void doDecode(byte[][] inputs, int[] erasedIndexes,\n-                          byte[][] outputs) {\n-    assert(erasedIndexes.length \u003d\u003d outputs.length);\n-    assert(erasedIndexes.length \u003c\u003d 1);\n+  protected void doDecode(byte[][] inputs,\n+                          int[] erasedIndexes, byte[][] outputs) {\n+    resetBuffer(outputs[0]);\n \n-    int bufSize \u003d inputs[0].length;\n+    int bufSize \u003d getChunkSize();\n     int erasedIdx \u003d erasedIndexes[0];\n \n-    // Set the output to zeros.\n-    for (int j \u003d 0; j \u003c bufSize; j++) {\n-      outputs[0][j] \u003d 0;\n-    }\n-\n     // Process the inputs.\n     for (int i \u003d 0; i \u003c inputs.length; i++) {\n       // Skip the erased location.\n       if (i \u003d\u003d erasedIdx) {\n         continue;\n       }\n \n       for (int j \u003d 0; j \u003c bufSize; j++) {\n         outputs[0][j] ^\u003d inputs[i][j];\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void doDecode(byte[][] inputs,\n                          int[] erasedIndexes, byte[][] outputs) {\n    resetBuffer(outputs[0]);\n\n    int bufSize \u003d getChunkSize();\n    int erasedIdx \u003d erasedIndexes[0];\n\n    // Process the inputs.\n    for (int i \u003d 0; i \u003c inputs.length; i++) {\n      // Skip the erased location.\n      if (i \u003d\u003d erasedIdx) {\n        continue;\n      }\n\n      for (int j \u003d 0; j \u003c bufSize; j++) {\n        outputs[0][j] ^\u003d inputs[i][j];\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/erasurecode/rawcoder/XORRawDecoder.java",
      "extendedDetails": {}
    },
    "17f7cdc04764524c091bb0e9eb43399f88ac0e6b": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-11805 Better to rename some raw erasure coders. Contributed by Kai Zheng\n",
      "commitDate": "26/05/15 11:55 AM",
      "commitName": "17f7cdc04764524c091bb0e9eb43399f88ac0e6b",
      "commitAuthor": "Kai Zheng",
      "commitDateOld": "26/05/15 11:55 AM",
      "commitNameOld": "146ce7a9784e52432b76164009336a4b2cf2860e",
      "commitAuthorOld": "Zhe Zhang",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected void doDecode(byte[][] inputs, int[] erasedIndexes,\n                          byte[][] outputs) {\n    assert(erasedIndexes.length \u003d\u003d outputs.length);\n    assert(erasedIndexes.length \u003c\u003d 1);\n\n    int bufSize \u003d inputs[0].length;\n    int erasedIdx \u003d erasedIndexes[0];\n\n    // Set the output to zeros.\n    for (int j \u003d 0; j \u003c bufSize; j++) {\n      outputs[0][j] \u003d 0;\n    }\n\n    // Process the inputs.\n    for (int i \u003d 0; i \u003c inputs.length; i++) {\n      // Skip the erased location.\n      if (i \u003d\u003d erasedIdx) {\n        continue;\n      }\n\n      for (int j \u003d 0; j \u003c bufSize; j++) {\n        outputs[0][j] ^\u003d inputs[i][j];\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/erasurecode/rawcoder/XORRawDecoder.java",
      "extendedDetails": {
        "oldPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/erasurecode/rawcoder/XorRawDecoder.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/erasurecode/rawcoder/XORRawDecoder.java"
      }
    },
    "b29f3bde4d2fd2f2c4abd6d7b5f97a81bb50efb2": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-11541. Raw XOR coder\n",
      "commitDate": "26/05/15 11:03 AM",
      "commitName": "b29f3bde4d2fd2f2c4abd6d7b5f97a81bb50efb2",
      "commitAuthor": "Kai Zheng",
      "diff": "@@ -0,0 +1,25 @@\n+  protected void doDecode(byte[][] inputs, int[] erasedIndexes,\n+                          byte[][] outputs) {\n+    assert(erasedIndexes.length \u003d\u003d outputs.length);\n+    assert(erasedIndexes.length \u003c\u003d 1);\n+\n+    int bufSize \u003d inputs[0].length;\n+    int erasedIdx \u003d erasedIndexes[0];\n+\n+    // Set the output to zeros.\n+    for (int j \u003d 0; j \u003c bufSize; j++) {\n+      outputs[0][j] \u003d 0;\n+    }\n+\n+    // Process the inputs.\n+    for (int i \u003d 0; i \u003c inputs.length; i++) {\n+      // Skip the erased location.\n+      if (i \u003d\u003d erasedIdx) {\n+        continue;\n+      }\n+\n+      for (int j \u003d 0; j \u003c bufSize; j++) {\n+        outputs[0][j] ^\u003d inputs[i][j];\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void doDecode(byte[][] inputs, int[] erasedIndexes,\n                          byte[][] outputs) {\n    assert(erasedIndexes.length \u003d\u003d outputs.length);\n    assert(erasedIndexes.length \u003c\u003d 1);\n\n    int bufSize \u003d inputs[0].length;\n    int erasedIdx \u003d erasedIndexes[0];\n\n    // Set the output to zeros.\n    for (int j \u003d 0; j \u003c bufSize; j++) {\n      outputs[0][j] \u003d 0;\n    }\n\n    // Process the inputs.\n    for (int i \u003d 0; i \u003c inputs.length; i++) {\n      // Skip the erased location.\n      if (i \u003d\u003d erasedIdx) {\n        continue;\n      }\n\n      for (int j \u003d 0; j \u003c bufSize; j++) {\n        outputs[0][j] ^\u003d inputs[i][j];\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/erasurecode/rawcoder/XorRawDecoder.java"
    }
  }
}