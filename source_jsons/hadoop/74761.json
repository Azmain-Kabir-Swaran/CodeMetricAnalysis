{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ZKDelegationTokenSecretManager.java",
  "functionName": "getTokenInfoFromZK",
  "functionId": "getTokenInfoFromZK___ident-TokenIdent",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/ZKDelegationTokenSecretManager.java",
  "functionStartLine": 695,
  "functionEndLine": 698,
  "numCommitsSeen": 16,
  "timeTaken": 1192,
  "changeHistory": [
    "db45f047ab6b19d8a3e7752bb2cde10827cd8dad",
    "db890eef3208cc557476fa510f7a253ba22bc68a"
  ],
  "changeHistoryShort": {
    "db45f047ab6b19d8a3e7752bb2cde10827cd8dad": "Ybodychange",
    "db890eef3208cc557476fa510f7a253ba22bc68a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "db45f047ab6b19d8a3e7752bb2cde10827cd8dad": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11170. ZKDelegationTokenSecretManager fails to renewToken created by a peer. (Arun Suresh and Gregory Chanan via kasha)\n",
      "commitDate": "23/10/14 5:04 PM",
      "commitName": "db45f047ab6b19d8a3e7752bb2cde10827cd8dad",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "22/10/14 2:26 PM",
      "commitNameOld": "70719e5c62f32836914bea88e1ddd99c0ed009e1",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 1.11,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,4 @@\n   private DelegationTokenInformation getTokenInfoFromZK(TokenIdent ident)\n       throws IOException {\n-    String nodePath \u003d\n-        getNodePath(ZK_DTSM_TOKENS_ROOT,\n-            DELEGATION_TOKEN_PREFIX + ident.getSequenceNumber());\n-    try {\n-      byte[] data \u003d zkClient.getData().forPath(nodePath);\n-      if ((data \u003d\u003d null) || (data.length \u003d\u003d 0)) {\n-        return null;\n-      }\n-      ByteArrayInputStream bin \u003d new ByteArrayInputStream(data);\n-      DataInputStream din \u003d new DataInputStream(bin);\n-      createIdentifier().readFields(din);\n-      long renewDate \u003d din.readLong();\n-      int pwdLen \u003d din.readInt();\n-      byte[] password \u003d new byte[pwdLen];\n-      int numRead \u003d din.read(password, 0, pwdLen);\n-      if (numRead \u003e -1) {\n-        DelegationTokenInformation tokenInfo \u003d\n-            new DelegationTokenInformation(renewDate, password);\n-        return tokenInfo;\n-      }\n-    } catch (KeeperException.NoNodeException e) {\n-      LOG.error(\"No node in path [\" + nodePath + \"]\");\n-    } catch (Exception ex) {\n-      throw new IOException(ex);\n-    }\n-    return null;\n+    return getTokenInfoFromZK(ident, false);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private DelegationTokenInformation getTokenInfoFromZK(TokenIdent ident)\n      throws IOException {\n    return getTokenInfoFromZK(ident, false);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/ZKDelegationTokenSecretManager.java",
      "extendedDetails": {}
    },
    "db890eef3208cc557476fa510f7a253ba22bc68a": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-11017. KMS delegation token secret manager should be able to use zookeeper as store. (asuresh via tucu)\n",
      "commitDate": "20/09/14 8:21 AM",
      "commitName": "db890eef3208cc557476fa510f7a253ba22bc68a",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,29 @@\n+  private DelegationTokenInformation getTokenInfoFromZK(TokenIdent ident)\n+      throws IOException {\n+    String nodePath \u003d\n+        getNodePath(ZK_DTSM_TOKENS_ROOT,\n+            DELEGATION_TOKEN_PREFIX + ident.getSequenceNumber());\n+    try {\n+      byte[] data \u003d zkClient.getData().forPath(nodePath);\n+      if ((data \u003d\u003d null) || (data.length \u003d\u003d 0)) {\n+        return null;\n+      }\n+      ByteArrayInputStream bin \u003d new ByteArrayInputStream(data);\n+      DataInputStream din \u003d new DataInputStream(bin);\n+      createIdentifier().readFields(din);\n+      long renewDate \u003d din.readLong();\n+      int pwdLen \u003d din.readInt();\n+      byte[] password \u003d new byte[pwdLen];\n+      int numRead \u003d din.read(password, 0, pwdLen);\n+      if (numRead \u003e -1) {\n+        DelegationTokenInformation tokenInfo \u003d\n+            new DelegationTokenInformation(renewDate, password);\n+        return tokenInfo;\n+      }\n+    } catch (KeeperException.NoNodeException e) {\n+      LOG.error(\"No node in path [\" + nodePath + \"]\");\n+    } catch (Exception ex) {\n+      throw new IOException(ex);\n+    }\n+    return null;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private DelegationTokenInformation getTokenInfoFromZK(TokenIdent ident)\n      throws IOException {\n    String nodePath \u003d\n        getNodePath(ZK_DTSM_TOKENS_ROOT,\n            DELEGATION_TOKEN_PREFIX + ident.getSequenceNumber());\n    try {\n      byte[] data \u003d zkClient.getData().forPath(nodePath);\n      if ((data \u003d\u003d null) || (data.length \u003d\u003d 0)) {\n        return null;\n      }\n      ByteArrayInputStream bin \u003d new ByteArrayInputStream(data);\n      DataInputStream din \u003d new DataInputStream(bin);\n      createIdentifier().readFields(din);\n      long renewDate \u003d din.readLong();\n      int pwdLen \u003d din.readInt();\n      byte[] password \u003d new byte[pwdLen];\n      int numRead \u003d din.read(password, 0, pwdLen);\n      if (numRead \u003e -1) {\n        DelegationTokenInformation tokenInfo \u003d\n            new DelegationTokenInformation(renewDate, password);\n        return tokenInfo;\n      }\n    } catch (KeeperException.NoNodeException e) {\n      LOG.error(\"No node in path [\" + nodePath + \"]\");\n    } catch (Exception ex) {\n      throw new IOException(ex);\n    }\n    return null;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/ZKDelegationTokenSecretManager.java"
    }
  }
}