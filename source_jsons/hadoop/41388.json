{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSLeafQueue.java",
  "functionName": "dumpStateInternal",
  "functionId": "dumpStateInternal___sb-StringBuilder",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSLeafQueue.java",
  "functionStartLine": 639,
  "functionEndLine": 657,
  "numCommitsSeen": 69,
  "timeTaken": 1694,
  "changeHistory": [
    "99292adcefdc6b8f280b8e100605fb39f755c38a",
    "4db9cc70d0178703fb28f451eb84d97f2bf63af8"
  ],
  "changeHistoryShort": {
    "99292adcefdc6b8f280b8e100605fb39f755c38a": "Ybodychange",
    "4db9cc70d0178703fb28f451eb84d97f2bf63af8": "Yintroduced"
  },
  "changeHistoryDetails": {
    "99292adcefdc6b8f280b8e100605fb39f755c38a": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2162. Add ability in Fair Scheduler to optionally configure maxResources in terms of percentage. (Yufei Gu)\n",
      "commitDate": "05/10/17 11:51 PM",
      "commitName": "99292adcefdc6b8f280b8e100605fb39f755c38a",
      "commitAuthor": "Yufei Gu",
      "commitDateOld": "21/09/17 12:31 PM",
      "commitNameOld": "a92ef030a2707182e90acee644e47c8ef7e1fd8d",
      "commitAuthorOld": "Yufei Gu",
      "daysBetweenCommits": 14.47,
      "commitsBetweenForRepo": 98,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n   protected void dumpStateInternal(StringBuilder sb) {\n     sb.append(\"{Name: \" + getName() +\n         \", Weight: \" + weights +\n         \", Policy: \" + policy.getName() +\n         \", FairShare: \" + getFairShare() +\n         \", SteadyFairShare: \" + getSteadyFairShare() +\n-        \", MaxShare: \" + maxShare +\n+        \", MaxShare: \" + getMaxShare() +\n         \", MinShare: \" + minShare +\n         \", ResourceUsage: \" + getResourceUsage() +\n         \", Demand: \" + getDemand() +\n         \", Runnable: \" + getNumRunnableApps() +\n         \", NumPendingApps: \" + getNumPendingApps() +\n         \", NonRunnable: \" + getNumNonRunnableApps() +\n         \", MaxAMShare: \" + maxAMShare +\n         \", MaxAMResource: \" + computeMaxAMResource() +\n         \", AMResourceUsage: \" + getAmResourceUsage() +\n         \", LastTimeAtMinShare: \" + lastTimeAtMinShare +\n         \"}\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void dumpStateInternal(StringBuilder sb) {\n    sb.append(\"{Name: \" + getName() +\n        \", Weight: \" + weights +\n        \", Policy: \" + policy.getName() +\n        \", FairShare: \" + getFairShare() +\n        \", SteadyFairShare: \" + getSteadyFairShare() +\n        \", MaxShare: \" + getMaxShare() +\n        \", MinShare: \" + minShare +\n        \", ResourceUsage: \" + getResourceUsage() +\n        \", Demand: \" + getDemand() +\n        \", Runnable: \" + getNumRunnableApps() +\n        \", NumPendingApps: \" + getNumPendingApps() +\n        \", NonRunnable: \" + getNumNonRunnableApps() +\n        \", MaxAMShare: \" + maxAMShare +\n        \", MaxAMResource: \" + computeMaxAMResource() +\n        \", AMResourceUsage: \" + getAmResourceUsage() +\n        \", LastTimeAtMinShare: \" + lastTimeAtMinShare +\n        \"}\");\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSLeafQueue.java",
      "extendedDetails": {}
    },
    "4db9cc70d0178703fb28f451eb84d97f2bf63af8": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6042. Dump scheduler and queue state information into FairScheduler DEBUG log. (Yufei Gu via rchiang)\n",
      "commitDate": "10/03/17 4:13 PM",
      "commitName": "4db9cc70d0178703fb28f451eb84d97f2bf63af8",
      "commitAuthor": "Ray Chiang",
      "diff": "@@ -0,0 +1,19 @@\n+  protected void dumpStateInternal(StringBuilder sb) {\n+    sb.append(\"{Name: \" + getName() +\n+        \", Weight: \" + weights +\n+        \", Policy: \" + policy.getName() +\n+        \", FairShare: \" + getFairShare() +\n+        \", SteadyFairShare: \" + getSteadyFairShare() +\n+        \", MaxShare: \" + maxShare +\n+        \", MinShare: \" + minShare +\n+        \", ResourceUsage: \" + getResourceUsage() +\n+        \", Demand: \" + getDemand() +\n+        \", Runnable: \" + getNumRunnableApps() +\n+        \", NumPendingApps: \" + getNumPendingApps() +\n+        \", NonRunnable: \" + getNumNonRunnableApps() +\n+        \", MaxAMShare: \" + maxAMShare +\n+        \", MaxAMResource: \" + computeMaxAMResource() +\n+        \", AMResourceUsage: \" + getAmResourceUsage() +\n+        \", LastTimeAtMinShare: \" + lastTimeAtMinShare +\n+        \"}\");\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void dumpStateInternal(StringBuilder sb) {\n    sb.append(\"{Name: \" + getName() +\n        \", Weight: \" + weights +\n        \", Policy: \" + policy.getName() +\n        \", FairShare: \" + getFairShare() +\n        \", SteadyFairShare: \" + getSteadyFairShare() +\n        \", MaxShare: \" + maxShare +\n        \", MinShare: \" + minShare +\n        \", ResourceUsage: \" + getResourceUsage() +\n        \", Demand: \" + getDemand() +\n        \", Runnable: \" + getNumRunnableApps() +\n        \", NumPendingApps: \" + getNumPendingApps() +\n        \", NonRunnable: \" + getNumNonRunnableApps() +\n        \", MaxAMShare: \" + maxAMShare +\n        \", MaxAMResource: \" + computeMaxAMResource() +\n        \", AMResourceUsage: \" + getAmResourceUsage() +\n        \", LastTimeAtMinShare: \" + lastTimeAtMinShare +\n        \"}\");\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSLeafQueue.java"
    }
  }
}