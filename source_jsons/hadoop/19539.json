{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "QueueManager.java",
  "functionName": "getQueueAcls",
  "functionId": "getQueueAcls___ugi-UserGroupInformation",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/QueueManager.java",
  "functionStartLine": 459,
  "functionEndLine": 487,
  "numCommitsSeen": 8,
  "timeTaken": 8898,
  "changeHistory": [
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Ymovefromfile",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  synchronized QueueAclsInfo[] getQueueAcls(UserGroupInformation ugi)\n    throws IOException {\n    //List of all QueueAclsInfo objects , this list is returned\n    ArrayList\u003cQueueAclsInfo\u003e queueAclsInfolist \u003d\n      new ArrayList\u003cQueueAclsInfo\u003e();\n    QueueACL[] qAcls \u003d QueueACL.values();\n    for (String queueName : leafQueues.keySet()) {\n      QueueAclsInfo queueAclsInfo \u003d null;\n      ArrayList\u003cString\u003e operationsAllowed \u003d null;\n      for (QueueACL qAcl : qAcls) {\n        if (hasAccess(queueName, qAcl, ugi)) {\n          if (operationsAllowed \u003d\u003d null) {\n            operationsAllowed \u003d new ArrayList\u003cString\u003e();\n          }\n          operationsAllowed.add(qAcl.getAclName());\n        }\n      }\n      if (operationsAllowed !\u003d null) {\n        //There is atleast 1 operation supported for queue \u003cqueueName\u003e\n        //, hence initialize queueAclsInfo\n        queueAclsInfo \u003d new QueueAclsInfo(\n          queueName, operationsAllowed.toArray\n            (new String[operationsAllowed.size()]));\n        queueAclsInfolist.add(queueAclsInfo);\n      }\n    }\n    return queueAclsInfolist.toArray(\n      new QueueAclsInfo[queueAclsInfolist.size()]);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/QueueManager.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/QueueManager.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/QueueManager.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Ymovefromfile",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  synchronized QueueAclsInfo[] getQueueAcls(UserGroupInformation ugi)\n    throws IOException {\n    //List of all QueueAclsInfo objects , this list is returned\n    ArrayList\u003cQueueAclsInfo\u003e queueAclsInfolist \u003d\n      new ArrayList\u003cQueueAclsInfo\u003e();\n    QueueACL[] qAcls \u003d QueueACL.values();\n    for (String queueName : leafQueues.keySet()) {\n      QueueAclsInfo queueAclsInfo \u003d null;\n      ArrayList\u003cString\u003e operationsAllowed \u003d null;\n      for (QueueACL qAcl : qAcls) {\n        if (hasAccess(queueName, qAcl, ugi)) {\n          if (operationsAllowed \u003d\u003d null) {\n            operationsAllowed \u003d new ArrayList\u003cString\u003e();\n          }\n          operationsAllowed.add(qAcl.getAclName());\n        }\n      }\n      if (operationsAllowed !\u003d null) {\n        //There is atleast 1 operation supported for queue \u003cqueueName\u003e\n        //, hence initialize queueAclsInfo\n        queueAclsInfo \u003d new QueueAclsInfo(\n          queueName, operationsAllowed.toArray\n            (new String[operationsAllowed.size()]));\n        queueAclsInfolist.add(queueAclsInfo);\n      }\n    }\n    return queueAclsInfolist.toArray(\n      new QueueAclsInfo[queueAclsInfolist.size()]);\n  }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/QueueManager.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/java/org/apache/hadoop/mapred/QueueManager.java",
        "newPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/QueueManager.java",
        "oldMethodName": "getQueueAcls",
        "newMethodName": "getQueueAcls"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,29 @@\n+  synchronized QueueAclsInfo[] getQueueAcls(UserGroupInformation ugi)\n+    throws IOException {\n+    //List of all QueueAclsInfo objects , this list is returned\n+    ArrayList\u003cQueueAclsInfo\u003e queueAclsInfolist \u003d\n+      new ArrayList\u003cQueueAclsInfo\u003e();\n+    QueueACL[] qAcls \u003d QueueACL.values();\n+    for (String queueName : leafQueues.keySet()) {\n+      QueueAclsInfo queueAclsInfo \u003d null;\n+      ArrayList\u003cString\u003e operationsAllowed \u003d null;\n+      for (QueueACL qAcl : qAcls) {\n+        if (hasAccess(queueName, qAcl, ugi)) {\n+          if (operationsAllowed \u003d\u003d null) {\n+            operationsAllowed \u003d new ArrayList\u003cString\u003e();\n+          }\n+          operationsAllowed.add(qAcl.getAclName());\n+        }\n+      }\n+      if (operationsAllowed !\u003d null) {\n+        //There is atleast 1 operation supported for queue \u003cqueueName\u003e\n+        //, hence initialize queueAclsInfo\n+        queueAclsInfo \u003d new QueueAclsInfo(\n+          queueName, operationsAllowed.toArray\n+            (new String[operationsAllowed.size()]));\n+        queueAclsInfolist.add(queueAclsInfo);\n+      }\n+    }\n+    return queueAclsInfolist.toArray(\n+      new QueueAclsInfo[queueAclsInfolist.size()]);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized QueueAclsInfo[] getQueueAcls(UserGroupInformation ugi)\n    throws IOException {\n    //List of all QueueAclsInfo objects , this list is returned\n    ArrayList\u003cQueueAclsInfo\u003e queueAclsInfolist \u003d\n      new ArrayList\u003cQueueAclsInfo\u003e();\n    QueueACL[] qAcls \u003d QueueACL.values();\n    for (String queueName : leafQueues.keySet()) {\n      QueueAclsInfo queueAclsInfo \u003d null;\n      ArrayList\u003cString\u003e operationsAllowed \u003d null;\n      for (QueueACL qAcl : qAcls) {\n        if (hasAccess(queueName, qAcl, ugi)) {\n          if (operationsAllowed \u003d\u003d null) {\n            operationsAllowed \u003d new ArrayList\u003cString\u003e();\n          }\n          operationsAllowed.add(qAcl.getAclName());\n        }\n      }\n      if (operationsAllowed !\u003d null) {\n        //There is atleast 1 operation supported for queue \u003cqueueName\u003e\n        //, hence initialize queueAclsInfo\n        queueAclsInfo \u003d new QueueAclsInfo(\n          queueName, operationsAllowed.toArray\n            (new String[operationsAllowed.size()]));\n        queueAclsInfolist.add(queueAclsInfo);\n      }\n    }\n    return queueAclsInfolist.toArray(\n      new QueueAclsInfo[queueAclsInfolist.size()]);\n  }",
      "path": "mapreduce/src/java/org/apache/hadoop/mapred/QueueManager.java"
    }
  }
}