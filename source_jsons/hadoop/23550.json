{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HistoryClientService.java",
  "functionName": "verifyAndGetJob",
  "functionId": "verifyAndGetJob___jobID-JobId(modifiers-final)__exceptionThrow-boolean",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryClientService.java",
  "functionStartLine": 222,
  "functionEndLine": 249,
  "numCommitsSeen": 69,
  "timeTaken": 8531,
  "changeHistory": [
    "0c588904f8b68cad219d2bd8e33081d5cae656e5",
    "7359dc32d3781d5318efee4cf6185616c7c00c18",
    "7609243e582da9a7d008fc71569897715ced80cb",
    "3cbb9d20d0bf9d4f28c64bd56c5b9c7dd70ed801",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "0c588904f8b68cad219d2bd8e33081d5cae656e5": "Ymultichange(Yparameterchange,Ybodychange)",
    "7359dc32d3781d5318efee4cf6185616c7c00c18": "Ymultichange(Yexceptionschange,Ybodychange)",
    "7609243e582da9a7d008fc71569897715ced80cb": "Ybodychange",
    "3cbb9d20d0bf9d4f28c64bd56c5b9c7dd70ed801": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0c588904f8b68cad219d2bd8e33081d5cae656e5": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "MAPREDUCE-6160. Potential NullPointerException in MRClientProtocol interface implementation. Contributed by Rohith\n",
      "commitDate": "01/12/14 2:39 PM",
      "commitName": "0c588904f8b68cad219d2bd8e33081d5cae656e5",
      "commitAuthor": "Jason Lowe",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "MAPREDUCE-6160. Potential NullPointerException in MRClientProtocol interface implementation. Contributed by Rohith\n",
          "commitDate": "01/12/14 2:39 PM",
          "commitName": "0c588904f8b68cad219d2bd8e33081d5cae656e5",
          "commitAuthor": "Jason Lowe",
          "commitDateOld": "31/07/14 1:06 PM",
          "commitNameOld": "e52f67e3897a67a0b6d29e557a31cfa881738821",
          "commitAuthorOld": "Xuan Gong",
          "daysBetweenCommits": 123.11,
          "commitsBetweenForRepo": 1148,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,28 @@\n-    private Job verifyAndGetJob(final JobId jobID) throws IOException {\n+    private Job verifyAndGetJob(final JobId jobID, boolean exceptionThrow)\n+        throws IOException {\n       UserGroupInformation loginUgi \u003d null;\n       Job job \u003d null;\n       try {\n         loginUgi \u003d UserGroupInformation.getLoginUser();\n         job \u003d loginUgi.doAs(new PrivilegedExceptionAction\u003cJob\u003e() {\n \n           @Override\n           public Job run() throws Exception {\n             Job job \u003d history.getJob(jobID);\n             return job;\n           }\n         });\n       } catch (InterruptedException e) {\n         throw new IOException(e);\n       }\n+\n+      if (job \u003d\u003d null \u0026\u0026 exceptionThrow) {\n+        throw new IOException(\"Unknown Job \" + jobID);\n+      }\n+\n       if (job !\u003d null) {\n         JobACL operation \u003d JobACL.VIEW_JOB;\n         checkAccess(job, operation);\n       }\n       return job;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private Job verifyAndGetJob(final JobId jobID, boolean exceptionThrow)\n        throws IOException {\n      UserGroupInformation loginUgi \u003d null;\n      Job job \u003d null;\n      try {\n        loginUgi \u003d UserGroupInformation.getLoginUser();\n        job \u003d loginUgi.doAs(new PrivilegedExceptionAction\u003cJob\u003e() {\n\n          @Override\n          public Job run() throws Exception {\n            Job job \u003d history.getJob(jobID);\n            return job;\n          }\n        });\n      } catch (InterruptedException e) {\n        throw new IOException(e);\n      }\n\n      if (job \u003d\u003d null \u0026\u0026 exceptionThrow) {\n        throw new IOException(\"Unknown Job \" + jobID);\n      }\n\n      if (job !\u003d null) {\n        JobACL operation \u003d JobACL.VIEW_JOB;\n        checkAccess(job, operation);\n      }\n      return job;\n    }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryClientService.java",
          "extendedDetails": {
            "oldValue": "[jobID-JobId(modifiers-final)]",
            "newValue": "[jobID-JobId(modifiers-final), exceptionThrow-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-6160. Potential NullPointerException in MRClientProtocol interface implementation. Contributed by Rohith\n",
          "commitDate": "01/12/14 2:39 PM",
          "commitName": "0c588904f8b68cad219d2bd8e33081d5cae656e5",
          "commitAuthor": "Jason Lowe",
          "commitDateOld": "31/07/14 1:06 PM",
          "commitNameOld": "e52f67e3897a67a0b6d29e557a31cfa881738821",
          "commitAuthorOld": "Xuan Gong",
          "daysBetweenCommits": 123.11,
          "commitsBetweenForRepo": 1148,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,28 @@\n-    private Job verifyAndGetJob(final JobId jobID) throws IOException {\n+    private Job verifyAndGetJob(final JobId jobID, boolean exceptionThrow)\n+        throws IOException {\n       UserGroupInformation loginUgi \u003d null;\n       Job job \u003d null;\n       try {\n         loginUgi \u003d UserGroupInformation.getLoginUser();\n         job \u003d loginUgi.doAs(new PrivilegedExceptionAction\u003cJob\u003e() {\n \n           @Override\n           public Job run() throws Exception {\n             Job job \u003d history.getJob(jobID);\n             return job;\n           }\n         });\n       } catch (InterruptedException e) {\n         throw new IOException(e);\n       }\n+\n+      if (job \u003d\u003d null \u0026\u0026 exceptionThrow) {\n+        throw new IOException(\"Unknown Job \" + jobID);\n+      }\n+\n       if (job !\u003d null) {\n         JobACL operation \u003d JobACL.VIEW_JOB;\n         checkAccess(job, operation);\n       }\n       return job;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private Job verifyAndGetJob(final JobId jobID, boolean exceptionThrow)\n        throws IOException {\n      UserGroupInformation loginUgi \u003d null;\n      Job job \u003d null;\n      try {\n        loginUgi \u003d UserGroupInformation.getLoginUser();\n        job \u003d loginUgi.doAs(new PrivilegedExceptionAction\u003cJob\u003e() {\n\n          @Override\n          public Job run() throws Exception {\n            Job job \u003d history.getJob(jobID);\n            return job;\n          }\n        });\n      } catch (InterruptedException e) {\n        throw new IOException(e);\n      }\n\n      if (job \u003d\u003d null \u0026\u0026 exceptionThrow) {\n        throw new IOException(\"Unknown Job \" + jobID);\n      }\n\n      if (job !\u003d null) {\n        JobACL operation \u003d JobACL.VIEW_JOB;\n        checkAccess(job, operation);\n      }\n      return job;\n    }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryClientService.java",
          "extendedDetails": {}
        }
      ]
    },
    "7359dc32d3781d5318efee4cf6185616c7c00c18": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "MAPREDUCE-4067. Changed MRClientProtocol api to throw IOException only (Xuan Gong via vinodkv)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1481695 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/05/13 8:34 PM",
      "commitName": "7359dc32d3781d5318efee4cf6185616c7c00c18",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "MAPREDUCE-4067. Changed MRClientProtocol api to throw IOException only (Xuan Gong via vinodkv)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1481695 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "12/05/13 8:34 PM",
          "commitName": "7359dc32d3781d5318efee4cf6185616c7c00c18",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "04/01/13 12:15 PM",
          "commitNameOld": "e17cecf5505dddb92e2212147505c7c900184431",
          "commitAuthorOld": "Thomas Graves",
          "daysBetweenCommits": 128.3,
          "commitsBetweenForRepo": 767,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,22 @@\n-    private Job verifyAndGetJob(final JobId jobID) throws YarnRemoteException {\n+    private Job verifyAndGetJob(final JobId jobID) throws IOException {\n       UserGroupInformation loginUgi \u003d null;\n       Job job \u003d null;\n       try {\n         loginUgi \u003d UserGroupInformation.getLoginUser();\n         job \u003d loginUgi.doAs(new PrivilegedExceptionAction\u003cJob\u003e() {\n \n           @Override\n           public Job run() throws Exception {\n             Job job \u003d history.getJob(jobID);\n             return job;\n           }\n         });\n-      } catch (IOException e) {\n-        throw RPCUtil.getRemoteException(e);\n       } catch (InterruptedException e) {\n-        throw RPCUtil.getRemoteException(e);\n+        throw new IOException(e);\n       }\n       if (job !\u003d null) {\n         JobACL operation \u003d JobACL.VIEW_JOB;\n         checkAccess(job, operation);\n       }\n       return job;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private Job verifyAndGetJob(final JobId jobID) throws IOException {\n      UserGroupInformation loginUgi \u003d null;\n      Job job \u003d null;\n      try {\n        loginUgi \u003d UserGroupInformation.getLoginUser();\n        job \u003d loginUgi.doAs(new PrivilegedExceptionAction\u003cJob\u003e() {\n\n          @Override\n          public Job run() throws Exception {\n            Job job \u003d history.getJob(jobID);\n            return job;\n          }\n        });\n      } catch (InterruptedException e) {\n        throw new IOException(e);\n      }\n      if (job !\u003d null) {\n        JobACL operation \u003d JobACL.VIEW_JOB;\n        checkAccess(job, operation);\n      }\n      return job;\n    }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryClientService.java",
          "extendedDetails": {
            "oldValue": "[YarnRemoteException]",
            "newValue": "[IOException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-4067. Changed MRClientProtocol api to throw IOException only (Xuan Gong via vinodkv)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1481695 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "12/05/13 8:34 PM",
          "commitName": "7359dc32d3781d5318efee4cf6185616c7c00c18",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "04/01/13 12:15 PM",
          "commitNameOld": "e17cecf5505dddb92e2212147505c7c900184431",
          "commitAuthorOld": "Thomas Graves",
          "daysBetweenCommits": 128.3,
          "commitsBetweenForRepo": 767,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,22 @@\n-    private Job verifyAndGetJob(final JobId jobID) throws YarnRemoteException {\n+    private Job verifyAndGetJob(final JobId jobID) throws IOException {\n       UserGroupInformation loginUgi \u003d null;\n       Job job \u003d null;\n       try {\n         loginUgi \u003d UserGroupInformation.getLoginUser();\n         job \u003d loginUgi.doAs(new PrivilegedExceptionAction\u003cJob\u003e() {\n \n           @Override\n           public Job run() throws Exception {\n             Job job \u003d history.getJob(jobID);\n             return job;\n           }\n         });\n-      } catch (IOException e) {\n-        throw RPCUtil.getRemoteException(e);\n       } catch (InterruptedException e) {\n-        throw RPCUtil.getRemoteException(e);\n+        throw new IOException(e);\n       }\n       if (job !\u003d null) {\n         JobACL operation \u003d JobACL.VIEW_JOB;\n         checkAccess(job, operation);\n       }\n       return job;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private Job verifyAndGetJob(final JobId jobID) throws IOException {\n      UserGroupInformation loginUgi \u003d null;\n      Job job \u003d null;\n      try {\n        loginUgi \u003d UserGroupInformation.getLoginUser();\n        job \u003d loginUgi.doAs(new PrivilegedExceptionAction\u003cJob\u003e() {\n\n          @Override\n          public Job run() throws Exception {\n            Job job \u003d history.getJob(jobID);\n            return job;\n          }\n        });\n      } catch (InterruptedException e) {\n        throw new IOException(e);\n      }\n      if (job !\u003d null) {\n        JobACL operation \u003d JobACL.VIEW_JOB;\n        checkAccess(job, operation);\n      }\n      return job;\n    }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryClientService.java",
          "extendedDetails": {}
        }
      ]
    },
    "7609243e582da9a7d008fc71569897715ced80cb": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-4007. JobClient getJob(JobID) should return NULL if the job does not exist (for backwards compatibility) (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1300750 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/03/12 3:02 PM",
      "commitName": "7609243e582da9a7d008fc71569897715ced80cb",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "02/03/12 11:28 AM",
      "commitNameOld": "99bf2902b29c4ab910d5043fe7091f7df04c21fe",
      "commitAuthorOld": "Siddharth Seth",
      "daysBetweenCommits": 12.11,
      "commitsBetweenForRepo": 61,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,24 @@\n     private Job verifyAndGetJob(final JobId jobID) throws YarnRemoteException {\n       UserGroupInformation loginUgi \u003d null;\n       Job job \u003d null;\n       try {\n         loginUgi \u003d UserGroupInformation.getLoginUser();\n         job \u003d loginUgi.doAs(new PrivilegedExceptionAction\u003cJob\u003e() {\n \n           @Override\n           public Job run() throws Exception {\n             Job job \u003d history.getJob(jobID);\n             return job;\n           }\n         });\n       } catch (IOException e) {\n         throw RPCUtil.getRemoteException(e);\n       } catch (InterruptedException e) {\n         throw RPCUtil.getRemoteException(e);\n       }\n-      if (job \u003d\u003d null) {\n-        throw RPCUtil.getRemoteException(\"Unknown job \" + jobID);\n+      if (job !\u003d null) {\n+        JobACL operation \u003d JobACL.VIEW_JOB;\n+        checkAccess(job, operation);\n       }\n-      JobACL operation \u003d JobACL.VIEW_JOB;\n-      checkAccess(job, operation);\n       return job;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private Job verifyAndGetJob(final JobId jobID) throws YarnRemoteException {\n      UserGroupInformation loginUgi \u003d null;\n      Job job \u003d null;\n      try {\n        loginUgi \u003d UserGroupInformation.getLoginUser();\n        job \u003d loginUgi.doAs(new PrivilegedExceptionAction\u003cJob\u003e() {\n\n          @Override\n          public Job run() throws Exception {\n            Job job \u003d history.getJob(jobID);\n            return job;\n          }\n        });\n      } catch (IOException e) {\n        throw RPCUtil.getRemoteException(e);\n      } catch (InterruptedException e) {\n        throw RPCUtil.getRemoteException(e);\n      }\n      if (job !\u003d null) {\n        JobACL operation \u003d JobACL.VIEW_JOB;\n        checkAccess(job, operation);\n      }\n      return job;\n    }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryClientService.java",
      "extendedDetails": {}
    },
    "3cbb9d20d0bf9d4f28c64bd56c5b9c7dd70ed801": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3903. Add support for mapreduce admin users. (Contributed by Thomas Graves)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1295262 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/02/12 12:48 PM",
      "commitName": "3cbb9d20d0bf9d4f28c64bd56c5b9c7dd70ed801",
      "commitAuthor": "Siddharth Seth",
      "commitDateOld": "20/01/12 12:44 PM",
      "commitNameOld": "c6923061d0384cc22d459ee570f3626d98b3ef69",
      "commitAuthorOld": "Mahadev Konar",
      "daysBetweenCommits": 40.0,
      "commitsBetweenForRepo": 285,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,25 @@\n     private Job verifyAndGetJob(final JobId jobID) throws YarnRemoteException {\n       UserGroupInformation loginUgi \u003d null;\n       Job job \u003d null;\n       try {\n         loginUgi \u003d UserGroupInformation.getLoginUser();\n         job \u003d loginUgi.doAs(new PrivilegedExceptionAction\u003cJob\u003e() {\n \n           @Override\n           public Job run() throws Exception {\n             Job job \u003d history.getJob(jobID);\n             return job;\n           }\n         });\n       } catch (IOException e) {\n         throw RPCUtil.getRemoteException(e);\n       } catch (InterruptedException e) {\n         throw RPCUtil.getRemoteException(e);\n       }\n       if (job \u003d\u003d null) {\n         throw RPCUtil.getRemoteException(\"Unknown job \" + jobID);\n       }\n       JobACL operation \u003d JobACL.VIEW_JOB;\n-      //TODO disable check access for now.\n       checkAccess(job, operation);\n       return job;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private Job verifyAndGetJob(final JobId jobID) throws YarnRemoteException {\n      UserGroupInformation loginUgi \u003d null;\n      Job job \u003d null;\n      try {\n        loginUgi \u003d UserGroupInformation.getLoginUser();\n        job \u003d loginUgi.doAs(new PrivilegedExceptionAction\u003cJob\u003e() {\n\n          @Override\n          public Job run() throws Exception {\n            Job job \u003d history.getJob(jobID);\n            return job;\n          }\n        });\n      } catch (IOException e) {\n        throw RPCUtil.getRemoteException(e);\n      } catch (InterruptedException e) {\n        throw RPCUtil.getRemoteException(e);\n      }\n      if (job \u003d\u003d null) {\n        throw RPCUtil.getRemoteException(\"Unknown job \" + jobID);\n      }\n      JobACL operation \u003d JobACL.VIEW_JOB;\n      checkAccess(job, operation);\n      return job;\n    }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryClientService.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private Job verifyAndGetJob(final JobId jobID) throws YarnRemoteException {\n      UserGroupInformation loginUgi \u003d null;\n      Job job \u003d null;\n      try {\n        loginUgi \u003d UserGroupInformation.getLoginUser();\n        job \u003d loginUgi.doAs(new PrivilegedExceptionAction\u003cJob\u003e() {\n\n          @Override\n          public Job run() throws Exception {\n            Job job \u003d history.getJob(jobID);\n            return job;\n          }\n        });\n      } catch (IOException e) {\n        throw RPCUtil.getRemoteException(e);\n      } catch (InterruptedException e) {\n        throw RPCUtil.getRemoteException(e);\n      }\n      if (job \u003d\u003d null) {\n        throw RPCUtil.getRemoteException(\"Unknown job \" + jobID);\n      }\n      JobACL operation \u003d JobACL.VIEW_JOB;\n      //TODO disable check access for now.\n      checkAccess(job, operation);\n      return job;\n    }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryClientService.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryClientService.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryClientService.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,26 @@\n+    private Job verifyAndGetJob(final JobId jobID) throws YarnRemoteException {\n+      UserGroupInformation loginUgi \u003d null;\n+      Job job \u003d null;\n+      try {\n+        loginUgi \u003d UserGroupInformation.getLoginUser();\n+        job \u003d loginUgi.doAs(new PrivilegedExceptionAction\u003cJob\u003e() {\n+\n+          @Override\n+          public Job run() throws Exception {\n+            Job job \u003d history.getJob(jobID);\n+            return job;\n+          }\n+        });\n+      } catch (IOException e) {\n+        throw RPCUtil.getRemoteException(e);\n+      } catch (InterruptedException e) {\n+        throw RPCUtil.getRemoteException(e);\n+      }\n+      if (job \u003d\u003d null) {\n+        throw RPCUtil.getRemoteException(\"Unknown job \" + jobID);\n+      }\n+      JobACL operation \u003d JobACL.VIEW_JOB;\n+      //TODO disable check access for now.\n+      checkAccess(job, operation);\n+      return job;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private Job verifyAndGetJob(final JobId jobID) throws YarnRemoteException {\n      UserGroupInformation loginUgi \u003d null;\n      Job job \u003d null;\n      try {\n        loginUgi \u003d UserGroupInformation.getLoginUser();\n        job \u003d loginUgi.doAs(new PrivilegedExceptionAction\u003cJob\u003e() {\n\n          @Override\n          public Job run() throws Exception {\n            Job job \u003d history.getJob(jobID);\n            return job;\n          }\n        });\n      } catch (IOException e) {\n        throw RPCUtil.getRemoteException(e);\n      } catch (InterruptedException e) {\n        throw RPCUtil.getRemoteException(e);\n      }\n      if (job \u003d\u003d null) {\n        throw RPCUtil.getRemoteException(\"Unknown job \" + jobID);\n      }\n      JobACL operation \u003d JobACL.VIEW_JOB;\n      //TODO disable check access for now.\n      checkAccess(job, operation);\n      return job;\n    }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/HistoryClientService.java"
    }
  }
}