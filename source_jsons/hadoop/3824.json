{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DistributedFileSystem.java",
  "functionName": "open",
  "functionId": "open___f-Path__bufferSize-int(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
  "functionStartLine": 324,
  "functionEndLine": 347,
  "numCommitsSeen": 214,
  "timeTaken": 9315,
  "changeHistory": [
    "0dd8956f2e4bd7cd2315ef23703e4b2da1a0d073",
    "687233f20d24c29041929dd0a99d963cec54b6df",
    "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93",
    "1c030c6e58dc83152f933323bb7743ad47f5af27",
    "2efea952139b30dd1c881eed0b443ffa72be6dce",
    "8767e4cde172b6e6070e3fd45325ede617b99343",
    "c6d3537d337d71a3e566bcae824cc2377e9a9ed2",
    "6c3b59505b863f03629da52a1e9b886fe9b496d0",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "0dd8956f2e4bd7cd2315ef23703e4b2da1a0d073": "Ybodychange",
    "687233f20d24c29041929dd0a99d963cec54b6df": "Ybodychange",
    "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93": "Ybodychange",
    "1c030c6e58dc83152f933323bb7743ad47f5af27": "Yfilerename",
    "2efea952139b30dd1c881eed0b443ffa72be6dce": "Ybodychange",
    "8767e4cde172b6e6070e3fd45325ede617b99343": "Ymultichange(Yreturntypechange,Ybodychange,Yparametermetachange)",
    "c6d3537d337d71a3e566bcae824cc2377e9a9ed2": "Yreturntypechange",
    "6c3b59505b863f03629da52a1e9b886fe9b496d0": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0dd8956f2e4bd7cd2315ef23703e4b2da1a0d073": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16885. Encryption zone file copy failure leaks a temp file\n\n\r\nContributed by Xiaoyu Yao.\r\n\r\nContains HDFS-14892. Close the output stream if createWrappedOutputStream() fails\r\n\r\nCopying file through the FsShell command into an HDFS encryption zone where\r\nthe caller lacks permissions is leaks a temp ._COPYING file\r\nand potentially a wrapped stream unclosed.\r\n\r\nThis is a convergence of a fix for S3 meeting an issue in HDFS.\r\n\r\nS3: a HEAD against a file can cache a 404, \r\n -you must not do any existence checks, including deleteOnExit(),\r\n  until the file is written. \r\n\r\nHence: HADOOP-16490, only register files for deletion the create worked\r\nand the upload is not direct. \r\n\r\nHDFS-14892. HDFS doesn\u0027t close wrapped streams when IOEs are raised on\r\ncreate() failures. Which means that an entry is retained on the NN.\r\n-you need to register a file with deleteOnExit() even if the file wasn\u0027t\r\ncreated.\r\n\r\nThis patch:\r\n\r\n* Moves the deleteOnExit to ensure the created file get deleted cleanly.\r\n* Fixes HDFS to close the wrapped stream on failures.\r\n\r\n\r\n",
      "commitDate": "02/03/20 5:22 AM",
      "commitName": "0dd8956f2e4bd7cd2315ef23703e4b2da1a0d073",
      "commitAuthor": "Xiaoyu Yao",
      "commitDateOld": "20/02/20 6:56 PM",
      "commitNameOld": "2338d25dc7150d75fbda84cc95422380b5622224",
      "commitAuthorOld": "Masatake Iwasaki",
      "daysBetweenCommits": 10.43,
      "commitsBetweenForRepo": 42,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,24 @@\n   public FSDataInputStream open(Path f, final int bufferSize)\n       throws IOException {\n     statistics.incrementReadOps(1);\n     storageStatistics.incrementOpCounter(OpType.OPEN);\n     Path absF \u003d fixRelativePart(f);\n     return new FileSystemLinkResolver\u003cFSDataInputStream\u003e() {\n       @Override\n       public FSDataInputStream doCall(final Path p) throws IOException {\n         final DFSInputStream dfsis \u003d\n             dfs.open(getPathName(p), bufferSize, verifyChecksum);\n-        return dfs.createWrappedInputStream(dfsis);\n+        try {\n+          return dfs.createWrappedInputStream(dfsis);\n+        } catch (IOException ex){\n+          dfsis.close();\n+          throw ex;\n+        }\n       }\n       @Override\n       public FSDataInputStream next(final FileSystem fs, final Path p)\n           throws IOException {\n         return fs.open(p, bufferSize);\n       }\n     }.resolve(this, absF);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public FSDataInputStream open(Path f, final int bufferSize)\n      throws IOException {\n    statistics.incrementReadOps(1);\n    storageStatistics.incrementOpCounter(OpType.OPEN);\n    Path absF \u003d fixRelativePart(f);\n    return new FileSystemLinkResolver\u003cFSDataInputStream\u003e() {\n      @Override\n      public FSDataInputStream doCall(final Path p) throws IOException {\n        final DFSInputStream dfsis \u003d\n            dfs.open(getPathName(p), bufferSize, verifyChecksum);\n        try {\n          return dfs.createWrappedInputStream(dfsis);\n        } catch (IOException ex){\n          dfsis.close();\n          throw ex;\n        }\n      }\n      @Override\n      public FSDataInputStream next(final FileSystem fs, final Path p)\n          throws IOException {\n        return fs.open(p, bufferSize);\n      }\n    }.resolve(this, absF);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
      "extendedDetails": {}
    },
    "687233f20d24c29041929dd0a99d963cec54b6df": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13065. Add a new interface for retrieving FS and FC Statistics (Mingliang Liu via cmccabe)\n",
      "commitDate": "11/05/16 1:45 PM",
      "commitName": "687233f20d24c29041929dd0a99d963cec54b6df",
      "commitAuthor": "Colin Patrick Mccabe",
      "commitDateOld": "02/05/16 7:30 PM",
      "commitNameOld": "45a753ccf79d334513c7bc8f2b81c89a4697075d",
      "commitAuthorOld": "Xiaoyu Yao",
      "daysBetweenCommits": 8.76,
      "commitsBetweenForRepo": 55,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,19 @@\n   public FSDataInputStream open(Path f, final int bufferSize)\n       throws IOException {\n     statistics.incrementReadOps(1);\n+    storageStatistics.incrementOpCounter(OpType.OPEN);\n     Path absF \u003d fixRelativePart(f);\n     return new FileSystemLinkResolver\u003cFSDataInputStream\u003e() {\n       @Override\n       public FSDataInputStream doCall(final Path p) throws IOException {\n         final DFSInputStream dfsis \u003d\n             dfs.open(getPathName(p), bufferSize, verifyChecksum);\n         return dfs.createWrappedInputStream(dfsis);\n       }\n       @Override\n       public FSDataInputStream next(final FileSystem fs, final Path p)\n           throws IOException {\n         return fs.open(p, bufferSize);\n       }\n     }.resolve(this, absF);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public FSDataInputStream open(Path f, final int bufferSize)\n      throws IOException {\n    statistics.incrementReadOps(1);\n    storageStatistics.incrementOpCounter(OpType.OPEN);\n    Path absF \u003d fixRelativePart(f);\n    return new FileSystemLinkResolver\u003cFSDataInputStream\u003e() {\n      @Override\n      public FSDataInputStream doCall(final Path p) throws IOException {\n        final DFSInputStream dfsis \u003d\n            dfs.open(getPathName(p), bufferSize, verifyChecksum);\n        return dfs.createWrappedInputStream(dfsis);\n      }\n      @Override\n      public FSDataInputStream next(final FileSystem fs, final Path p)\n          throws IOException {\n        return fs.open(p, bufferSize);\n      }\n    }.resolve(this, absF);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
      "extendedDetails": {}
    },
    "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8979. Clean up checkstyle warnings in hadoop-hdfs-client module. Contributed by Mingliang Liu.\n",
      "commitDate": "03/10/15 11:38 AM",
      "commitName": "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "29/09/15 1:39 AM",
      "commitNameOld": "8fd55202468b28422b0df888641c9b08906fe4a7",
      "commitAuthorOld": "",
      "daysBetweenCommits": 4.42,
      "commitsBetweenForRepo": 29,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,18 @@\n   public FSDataInputStream open(Path f, final int bufferSize)\n       throws IOException {\n     statistics.incrementReadOps(1);\n     Path absF \u003d fixRelativePart(f);\n     return new FileSystemLinkResolver\u003cFSDataInputStream\u003e() {\n       @Override\n-      public FSDataInputStream doCall(final Path p)\n-          throws IOException, UnresolvedLinkException {\n+      public FSDataInputStream doCall(final Path p) throws IOException {\n         final DFSInputStream dfsis \u003d\n-          dfs.open(getPathName(p), bufferSize, verifyChecksum);\n+            dfs.open(getPathName(p), bufferSize, verifyChecksum);\n         return dfs.createWrappedInputStream(dfsis);\n       }\n       @Override\n       public FSDataInputStream next(final FileSystem fs, final Path p)\n           throws IOException {\n         return fs.open(p, bufferSize);\n       }\n     }.resolve(this, absF);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public FSDataInputStream open(Path f, final int bufferSize)\n      throws IOException {\n    statistics.incrementReadOps(1);\n    Path absF \u003d fixRelativePart(f);\n    return new FileSystemLinkResolver\u003cFSDataInputStream\u003e() {\n      @Override\n      public FSDataInputStream doCall(final Path p) throws IOException {\n        final DFSInputStream dfsis \u003d\n            dfs.open(getPathName(p), bufferSize, verifyChecksum);\n        return dfs.createWrappedInputStream(dfsis);\n      }\n      @Override\n      public FSDataInputStream next(final FileSystem fs, final Path p)\n          throws IOException {\n        return fs.open(p, bufferSize);\n      }\n    }.resolve(this, absF);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
      "extendedDetails": {}
    },
    "1c030c6e58dc83152f933323bb7743ad47f5af27": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-8740. Move DistributedFileSystem to hadoop-hdfs-client. Contributed by Mingliang Liu.\n",
      "commitDate": "27/09/15 10:54 AM",
      "commitName": "1c030c6e58dc83152f933323bb7743ad47f5af27",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "27/09/15 1:42 AM",
      "commitNameOld": "f0f984e4e63d0dbafe93062a122ee051330db301",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 0.38,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public FSDataInputStream open(Path f, final int bufferSize)\n      throws IOException {\n    statistics.incrementReadOps(1);\n    Path absF \u003d fixRelativePart(f);\n    return new FileSystemLinkResolver\u003cFSDataInputStream\u003e() {\n      @Override\n      public FSDataInputStream doCall(final Path p)\n          throws IOException, UnresolvedLinkException {\n        final DFSInputStream dfsis \u003d\n          dfs.open(getPathName(p), bufferSize, verifyChecksum);\n        return dfs.createWrappedInputStream(dfsis);\n      }\n      @Override\n      public FSDataInputStream next(final FileSystem fs, final Path p)\n          throws IOException {\n        return fs.open(p, bufferSize);\n      }\n    }.resolve(this, absF);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java"
      }
    },
    "2efea952139b30dd1c881eed0b443ffa72be6dce": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6391. Get the Key/IV from the NameNode for encrypted files in DFSClient. Contributed by Charles Lamb and Andrew Wang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1606220 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/06/14 1:43 PM",
      "commitName": "2efea952139b30dd1c881eed0b443ffa72be6dce",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "16/06/14 11:13 AM",
      "commitNameOld": "c5b7236d9c3240f6cefc1782bc7926a678d104f4",
      "commitAuthorOld": "",
      "daysBetweenCommits": 11.1,
      "commitsBetweenForRepo": 39,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,19 @@\n   public FSDataInputStream open(Path f, final int bufferSize)\n       throws IOException {\n     statistics.incrementReadOps(1);\n     Path absF \u003d fixRelativePart(f);\n     return new FileSystemLinkResolver\u003cFSDataInputStream\u003e() {\n       @Override\n       public FSDataInputStream doCall(final Path p)\n           throws IOException, UnresolvedLinkException {\n-        return new HdfsDataInputStream(\n-            dfs.open(getPathName(p), bufferSize, verifyChecksum));\n+        final DFSInputStream dfsis \u003d\n+          dfs.open(getPathName(p), bufferSize, verifyChecksum);\n+        return dfs.createWrappedInputStream(dfsis);\n       }\n       @Override\n       public FSDataInputStream next(final FileSystem fs, final Path p)\n           throws IOException {\n         return fs.open(p, bufferSize);\n       }\n     }.resolve(this, absF);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public FSDataInputStream open(Path f, final int bufferSize)\n      throws IOException {\n    statistics.incrementReadOps(1);\n    Path absF \u003d fixRelativePart(f);\n    return new FileSystemLinkResolver\u003cFSDataInputStream\u003e() {\n      @Override\n      public FSDataInputStream doCall(final Path p)\n          throws IOException, UnresolvedLinkException {\n        final DFSInputStream dfsis \u003d\n          dfs.open(getPathName(p), bufferSize, verifyChecksum);\n        return dfs.createWrappedInputStream(dfsis);\n      }\n      @Override\n      public FSDataInputStream next(final FileSystem fs, final Path p)\n          throws IOException {\n        return fs.open(p, bufferSize);\n      }\n    }.resolve(this, absF);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
      "extendedDetails": {}
    },
    "8767e4cde172b6e6070e3fd45325ede617b99343": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange,Yparametermetachange)",
      "commitMessage": "HADOOP-9418.  Add symlink support to DistributedFileSystem (Andrew Wang via Colin Patrick McCabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1502373 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/07/13 2:31 PM",
      "commitName": "8767e4cde172b6e6070e3fd45325ede617b99343",
      "commitAuthor": "Colin McCabe",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "HADOOP-9418.  Add symlink support to DistributedFileSystem (Andrew Wang via Colin Patrick McCabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1502373 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "11/07/13 2:31 PM",
          "commitName": "8767e4cde172b6e6070e3fd45325ede617b99343",
          "commitAuthor": "Colin McCabe",
          "commitDateOld": "13/06/13 11:11 AM",
          "commitNameOld": "7e1744ccf9a9b5b035afbb182aad123a1d1d357f",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 28.14,
          "commitsBetweenForRepo": 172,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,5 +1,18 @@\n-  public HdfsDataInputStream open(Path f, int bufferSize) throws IOException {\n+  public FSDataInputStream open(Path f, final int bufferSize)\n+      throws IOException {\n     statistics.incrementReadOps(1);\n-    return new DFSClient.DFSDataInputStream(\n-          dfs.open(getPathName(f), bufferSize, verifyChecksum));\n+    Path absF \u003d fixRelativePart(f);\n+    return new FileSystemLinkResolver\u003cFSDataInputStream\u003e() {\n+      @Override\n+      public FSDataInputStream doCall(final Path p)\n+          throws IOException, UnresolvedLinkException {\n+        return new HdfsDataInputStream(\n+            dfs.open(getPathName(p), bufferSize, verifyChecksum));\n+      }\n+      @Override\n+      public FSDataInputStream next(final FileSystem fs, final Path p)\n+          throws IOException {\n+        return fs.open(p, bufferSize);\n+      }\n+    }.resolve(this, absF);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public FSDataInputStream open(Path f, final int bufferSize)\n      throws IOException {\n    statistics.incrementReadOps(1);\n    Path absF \u003d fixRelativePart(f);\n    return new FileSystemLinkResolver\u003cFSDataInputStream\u003e() {\n      @Override\n      public FSDataInputStream doCall(final Path p)\n          throws IOException, UnresolvedLinkException {\n        return new HdfsDataInputStream(\n            dfs.open(getPathName(p), bufferSize, verifyChecksum));\n      }\n      @Override\n      public FSDataInputStream next(final FileSystem fs, final Path p)\n          throws IOException {\n        return fs.open(p, bufferSize);\n      }\n    }.resolve(this, absF);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
          "extendedDetails": {
            "oldValue": "HdfsDataInputStream",
            "newValue": "FSDataInputStream"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-9418.  Add symlink support to DistributedFileSystem (Andrew Wang via Colin Patrick McCabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1502373 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "11/07/13 2:31 PM",
          "commitName": "8767e4cde172b6e6070e3fd45325ede617b99343",
          "commitAuthor": "Colin McCabe",
          "commitDateOld": "13/06/13 11:11 AM",
          "commitNameOld": "7e1744ccf9a9b5b035afbb182aad123a1d1d357f",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 28.14,
          "commitsBetweenForRepo": 172,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,5 +1,18 @@\n-  public HdfsDataInputStream open(Path f, int bufferSize) throws IOException {\n+  public FSDataInputStream open(Path f, final int bufferSize)\n+      throws IOException {\n     statistics.incrementReadOps(1);\n-    return new DFSClient.DFSDataInputStream(\n-          dfs.open(getPathName(f), bufferSize, verifyChecksum));\n+    Path absF \u003d fixRelativePart(f);\n+    return new FileSystemLinkResolver\u003cFSDataInputStream\u003e() {\n+      @Override\n+      public FSDataInputStream doCall(final Path p)\n+          throws IOException, UnresolvedLinkException {\n+        return new HdfsDataInputStream(\n+            dfs.open(getPathName(p), bufferSize, verifyChecksum));\n+      }\n+      @Override\n+      public FSDataInputStream next(final FileSystem fs, final Path p)\n+          throws IOException {\n+        return fs.open(p, bufferSize);\n+      }\n+    }.resolve(this, absF);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public FSDataInputStream open(Path f, final int bufferSize)\n      throws IOException {\n    statistics.incrementReadOps(1);\n    Path absF \u003d fixRelativePart(f);\n    return new FileSystemLinkResolver\u003cFSDataInputStream\u003e() {\n      @Override\n      public FSDataInputStream doCall(final Path p)\n          throws IOException, UnresolvedLinkException {\n        return new HdfsDataInputStream(\n            dfs.open(getPathName(p), bufferSize, verifyChecksum));\n      }\n      @Override\n      public FSDataInputStream next(final FileSystem fs, final Path p)\n          throws IOException {\n        return fs.open(p, bufferSize);\n      }\n    }.resolve(this, absF);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparametermetachange",
          "commitMessage": "HADOOP-9418.  Add symlink support to DistributedFileSystem (Andrew Wang via Colin Patrick McCabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1502373 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "11/07/13 2:31 PM",
          "commitName": "8767e4cde172b6e6070e3fd45325ede617b99343",
          "commitAuthor": "Colin McCabe",
          "commitDateOld": "13/06/13 11:11 AM",
          "commitNameOld": "7e1744ccf9a9b5b035afbb182aad123a1d1d357f",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 28.14,
          "commitsBetweenForRepo": 172,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,5 +1,18 @@\n-  public HdfsDataInputStream open(Path f, int bufferSize) throws IOException {\n+  public FSDataInputStream open(Path f, final int bufferSize)\n+      throws IOException {\n     statistics.incrementReadOps(1);\n-    return new DFSClient.DFSDataInputStream(\n-          dfs.open(getPathName(f), bufferSize, verifyChecksum));\n+    Path absF \u003d fixRelativePart(f);\n+    return new FileSystemLinkResolver\u003cFSDataInputStream\u003e() {\n+      @Override\n+      public FSDataInputStream doCall(final Path p)\n+          throws IOException, UnresolvedLinkException {\n+        return new HdfsDataInputStream(\n+            dfs.open(getPathName(p), bufferSize, verifyChecksum));\n+      }\n+      @Override\n+      public FSDataInputStream next(final FileSystem fs, final Path p)\n+          throws IOException {\n+        return fs.open(p, bufferSize);\n+      }\n+    }.resolve(this, absF);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public FSDataInputStream open(Path f, final int bufferSize)\n      throws IOException {\n    statistics.incrementReadOps(1);\n    Path absF \u003d fixRelativePart(f);\n    return new FileSystemLinkResolver\u003cFSDataInputStream\u003e() {\n      @Override\n      public FSDataInputStream doCall(final Path p)\n          throws IOException, UnresolvedLinkException {\n        return new HdfsDataInputStream(\n            dfs.open(getPathName(p), bufferSize, verifyChecksum));\n      }\n      @Override\n      public FSDataInputStream next(final FileSystem fs, final Path p)\n          throws IOException {\n        return fs.open(p, bufferSize);\n      }\n    }.resolve(this, absF);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
          "extendedDetails": {
            "oldValue": "[f-Path, bufferSize-int]",
            "newValue": "[f-Path, bufferSize-int(modifiers-final)]"
          }
        }
      ]
    },
    "c6d3537d337d71a3e566bcae824cc2377e9a9ed2": {
      "type": "Yreturntypechange",
      "commitMessage": "HDFS-3282. Expose getFileLength API. Contributed by Uma Maheswara Rao G.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1327788 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/04/12 7:34 PM",
      "commitName": "c6d3537d337d71a3e566bcae824cc2377e9a9ed2",
      "commitAuthor": "Uma Maheswara Rao G",
      "commitDateOld": "18/04/12 1:21 PM",
      "commitNameOld": "2bf8be3c72c548e71a6af7b4bf4cf3b58fd62994",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 0.26,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,5 +1,5 @@\n-  public FSDataInputStream open(Path f, int bufferSize) throws IOException {\n+  public HdfsDataInputStream open(Path f, int bufferSize) throws IOException {\n     statistics.incrementReadOps(1);\n     return new DFSClient.DFSDataInputStream(\n           dfs.open(getPathName(f), bufferSize, verifyChecksum));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public HdfsDataInputStream open(Path f, int bufferSize) throws IOException {\n    statistics.incrementReadOps(1);\n    return new DFSClient.DFSDataInputStream(\n          dfs.open(getPathName(f), bufferSize, verifyChecksum));\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
      "extendedDetails": {
        "oldValue": "FSDataInputStream",
        "newValue": "HdfsDataInputStream"
      }
    },
    "6c3b59505b863f03629da52a1e9b886fe9b496d0": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2317. Support read access to HDFS in webhdfs.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1170085 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/09/11 1:34 AM",
      "commitName": "6c3b59505b863f03629da52a1e9b886fe9b496d0",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "04/09/11 12:30 PM",
      "commitNameOld": "8ae98a9d1ca4725e28783370517cb3a3ecda7324",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 8.54,
      "commitsBetweenForRepo": 61,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,5 +1,5 @@\n   public FSDataInputStream open(Path f, int bufferSize) throws IOException {\n     statistics.incrementReadOps(1);\n     return new DFSClient.DFSDataInputStream(\n-          dfs.open(getPathName(f), bufferSize, verifyChecksum, statistics));\n+          dfs.open(getPathName(f), bufferSize, verifyChecksum));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public FSDataInputStream open(Path f, int bufferSize) throws IOException {\n    statistics.incrementReadOps(1);\n    return new DFSClient.DFSDataInputStream(\n          dfs.open(getPathName(f), bufferSize, verifyChecksum));\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public FSDataInputStream open(Path f, int bufferSize) throws IOException {\n    statistics.incrementReadOps(1);\n    return new DFSClient.DFSDataInputStream(\n          dfs.open(getPathName(f), bufferSize, verifyChecksum, statistics));\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public FSDataInputStream open(Path f, int bufferSize) throws IOException {\n    statistics.incrementReadOps(1);\n    return new DFSClient.DFSDataInputStream(\n          dfs.open(getPathName(f), bufferSize, verifyChecksum, statistics));\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,5 @@\n+  public FSDataInputStream open(Path f, int bufferSize) throws IOException {\n+    statistics.incrementReadOps(1);\n+    return new DFSClient.DFSDataInputStream(\n+          dfs.open(getPathName(f), bufferSize, verifyChecksum, statistics));\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public FSDataInputStream open(Path f, int bufferSize) throws IOException {\n    statistics.incrementReadOps(1);\n    return new DFSClient.DFSDataInputStream(\n          dfs.open(getPathName(f), bufferSize, verifyChecksum, statistics));\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/DistributedFileSystem.java"
    }
  }
}