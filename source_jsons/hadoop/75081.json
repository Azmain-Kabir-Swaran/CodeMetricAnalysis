{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AbstractJavaKeyStoreProvider.java",
  "functionName": "deleteCredentialEntry",
  "functionId": "deleteCredentialEntry___name-String",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/alias/AbstractJavaKeyStoreProvider.java",
  "functionStartLine": 243,
  "functionEndLine": 260,
  "numCommitsSeen": 13,
  "timeTaken": 1465,
  "changeHistory": [
    "fbf55dcaf45285e1795cb107e7846799e4042b0b",
    "860b8373c3a851386b8cd2d4265dd35e5aabc941",
    "c79728478caadd8374bce2bc3f466db1da1e3ad1"
  ],
  "changeHistoryShort": {
    "fbf55dcaf45285e1795cb107e7846799e4042b0b": "Ybodychange",
    "860b8373c3a851386b8cd2d4265dd35e5aabc941": "Ymovefromfile",
    "c79728478caadd8374bce2bc3f466db1da1e3ad1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "fbf55dcaf45285e1795cb107e7846799e4042b0b": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12076. Incomplete Cache Mechanism in CredentialProvider API. Contributed by Larry McCay.\n",
      "commitDate": "16/06/15 2:44 PM",
      "commitName": "fbf55dcaf45285e1795cb107e7846799e4042b0b",
      "commitAuthor": "cnauroth",
      "commitDateOld": "05/06/15 1:11 PM",
      "commitNameOld": "2dbc40e6086026ef02747223982aa68f2d328ade",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 11.06,
      "commitsBetweenForRepo": 63,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,18 @@\n   public void deleteCredentialEntry(String name) throws IOException {\n     writeLock.lock();\n     try {\n       try {\n         if (keyStore.containsAlias(name)) {\n           keyStore.deleteEntry(name);\n         } else {\n           throw new IOException(\"Credential \" + name + \" does not exist in \"\n               + this);\n         }\n       } catch (KeyStoreException e) {\n         throw new IOException(\"Problem removing \" + name + \" from \" + this, e);\n       }\n-      cache.remove(name);\n       changed \u003d true;\n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void deleteCredentialEntry(String name) throws IOException {\n    writeLock.lock();\n    try {\n      try {\n        if (keyStore.containsAlias(name)) {\n          keyStore.deleteEntry(name);\n        } else {\n          throw new IOException(\"Credential \" + name + \" does not exist in \"\n              + this);\n        }\n      } catch (KeyStoreException e) {\n        throw new IOException(\"Problem removing \" + name + \" from \" + this, e);\n      }\n      changed \u003d true;\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/alias/AbstractJavaKeyStoreProvider.java",
      "extendedDetails": {}
    },
    "860b8373c3a851386b8cd2d4265dd35e5aabc941": {
      "type": "Ymovefromfile",
      "commitMessage": "HADOOP-11934. Use of JavaKeyStoreProvider in LdapGroupsMapping causes infinite loop. Contributed by Larry McCay.\n",
      "commitDate": "28/05/15 3:01 PM",
      "commitName": "860b8373c3a851386b8cd2d4265dd35e5aabc941",
      "commitAuthor": "cnauroth",
      "commitDateOld": "28/05/15 1:24 PM",
      "commitNameOld": "ae1454342064c71f414d20ad0885e60a335c7420",
      "commitAuthorOld": "Allen Wittenauer",
      "daysBetweenCommits": 0.07,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,19 @@\n   public void deleteCredentialEntry(String name) throws IOException {\n     writeLock.lock();\n     try {\n       try {\n         if (keyStore.containsAlias(name)) {\n           keyStore.deleteEntry(name);\n-        }\n-        else {\n-          throw new IOException(\"Credential \" + name + \" does not exist in \" + this);\n+        } else {\n+          throw new IOException(\"Credential \" + name + \" does not exist in \"\n+              + this);\n         }\n       } catch (KeyStoreException e) {\n-        throw new IOException(\"Problem removing \" + name + \" from \" +\n-            this, e);\n+        throw new IOException(\"Problem removing \" + name + \" from \" + this, e);\n       }\n       cache.remove(name);\n       changed \u003d true;\n-    }\n-    finally {\n+    } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void deleteCredentialEntry(String name) throws IOException {\n    writeLock.lock();\n    try {\n      try {\n        if (keyStore.containsAlias(name)) {\n          keyStore.deleteEntry(name);\n        } else {\n          throw new IOException(\"Credential \" + name + \" does not exist in \"\n              + this);\n        }\n      } catch (KeyStoreException e) {\n        throw new IOException(\"Problem removing \" + name + \" from \" + this, e);\n      }\n      cache.remove(name);\n      changed \u003d true;\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/alias/AbstractJavaKeyStoreProvider.java",
      "extendedDetails": {
        "oldPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/alias/JavaKeyStoreProvider.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/alias/AbstractJavaKeyStoreProvider.java",
        "oldMethodName": "deleteCredentialEntry",
        "newMethodName": "deleteCredentialEntry"
      }
    },
    "c79728478caadd8374bce2bc3f466db1da1e3ad1": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-10607. Create API to separate credential/password storage from\napplications. (Larry McCay via omalley)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1603491 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/06/14 8:45 AM",
      "commitName": "c79728478caadd8374bce2bc3f466db1da1e3ad1",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,21 @@\n+  public void deleteCredentialEntry(String name) throws IOException {\n+    writeLock.lock();\n+    try {\n+      try {\n+        if (keyStore.containsAlias(name)) {\n+          keyStore.deleteEntry(name);\n+        }\n+        else {\n+          throw new IOException(\"Credential \" + name + \" does not exist in \" + this);\n+        }\n+      } catch (KeyStoreException e) {\n+        throw new IOException(\"Problem removing \" + name + \" from \" +\n+            this, e);\n+      }\n+      cache.remove(name);\n+      changed \u003d true;\n+    }\n+    finally {\n+      writeLock.unlock();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void deleteCredentialEntry(String name) throws IOException {\n    writeLock.lock();\n    try {\n      try {\n        if (keyStore.containsAlias(name)) {\n          keyStore.deleteEntry(name);\n        }\n        else {\n          throw new IOException(\"Credential \" + name + \" does not exist in \" + this);\n        }\n      } catch (KeyStoreException e) {\n        throw new IOException(\"Problem removing \" + name + \" from \" +\n            this, e);\n      }\n      cache.remove(name);\n      changed \u003d true;\n    }\n    finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/alias/JavaKeyStoreProvider.java"
    }
  }
}