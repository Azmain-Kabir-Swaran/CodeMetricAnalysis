{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BalanceJob.java",
  "functionName": "readFields",
  "functionId": "readFields___in-DataInput",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/procedure/BalanceJob.java",
  "functionStartLine": 262,
  "functionEndLine": 295,
  "numCommitsSeen": 1,
  "timeTaken": 387,
  "changeHistory": [
    "1983eea62def58fb769f44c1d41dc29690274809"
  ],
  "changeHistoryShort": {
    "1983eea62def58fb769f44c1d41dc29690274809": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1983eea62def58fb769f44c1d41dc29690274809": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-15340. RBF: Implement BalanceProcedureScheduler basic framework. Contributed by Jinglun.\n",
      "commitDate": "19/05/20 7:39 PM",
      "commitName": "1983eea62def58fb769f44c1d41dc29690274809",
      "commitAuthor": "Yiqun Lin",
      "diff": "@@ -0,0 +1,34 @@\n+  public void readFields(DataInput in) throws IOException {\n+    this.id \u003d Text.readString(in);\n+    procedureTable \u003d new HashMap\u003c\u003e();\n+    int taskTableSize \u003d in.readInt();\n+    for (int i \u003d 0; i \u003c taskTableSize; i++) {\n+      String className \u003d Text.readString(in);\n+      try {\n+        T p \u003d (T) ReflectionUtils.newInstance(Class.forName(className), null);\n+        p.readFields(in);\n+        procedureTable.put(p.name(), p);\n+      } catch (Exception e) {\n+        LOG.error(\"Failed reading Procedure.\", e);\n+        throw new IOException(e);\n+      }\n+    }\n+    String firstProcedureName \u003d Text.readString(in);\n+    if (firstProcedureName.equals(NEXT_PROCEDURE_NONE)) {\n+      firstProcedure \u003d null;\n+    } else {\n+      firstProcedure \u003d procedureTable.get(firstProcedureName);\n+    }\n+    String currentProcedureName \u003d Text.readString(in);\n+    if (currentProcedureName.equals(NEXT_PROCEDURE_NONE)) {\n+      curProcedure \u003d null;\n+    } else {\n+      curProcedure \u003d procedureTable.get(currentProcedureName);\n+    }\n+    String lastProcedureName \u003d Text.readString(in);\n+    if (lastProcedureName.equals(NEXT_PROCEDURE_NONE)) {\n+      lastProcedure \u003d null;\n+    } else {\n+      lastProcedure \u003d procedureTable.get(lastProcedureName);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void readFields(DataInput in) throws IOException {\n    this.id \u003d Text.readString(in);\n    procedureTable \u003d new HashMap\u003c\u003e();\n    int taskTableSize \u003d in.readInt();\n    for (int i \u003d 0; i \u003c taskTableSize; i++) {\n      String className \u003d Text.readString(in);\n      try {\n        T p \u003d (T) ReflectionUtils.newInstance(Class.forName(className), null);\n        p.readFields(in);\n        procedureTable.put(p.name(), p);\n      } catch (Exception e) {\n        LOG.error(\"Failed reading Procedure.\", e);\n        throw new IOException(e);\n      }\n    }\n    String firstProcedureName \u003d Text.readString(in);\n    if (firstProcedureName.equals(NEXT_PROCEDURE_NONE)) {\n      firstProcedure \u003d null;\n    } else {\n      firstProcedure \u003d procedureTable.get(firstProcedureName);\n    }\n    String currentProcedureName \u003d Text.readString(in);\n    if (currentProcedureName.equals(NEXT_PROCEDURE_NONE)) {\n      curProcedure \u003d null;\n    } else {\n      curProcedure \u003d procedureTable.get(currentProcedureName);\n    }\n    String lastProcedureName \u003d Text.readString(in);\n    if (lastProcedureName.equals(NEXT_PROCEDURE_NONE)) {\n      lastProcedure \u003d null;\n    } else {\n      lastProcedure \u003d procedureTable.get(lastProcedureName);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/procedure/BalanceJob.java"
    }
  }
}