{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMWebServices.java",
  "functionName": "renewDelegationToken",
  "functionId": "renewDelegationToken___tokenData-DelegationToken__hsr-HttpServletRequest__callerUGI-UserGroupInformation",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
  "functionStartLine": 1916,
  "functionEndLine": 1962,
  "numCommitsSeen": 106,
  "timeTaken": 3477,
  "changeHistory": [
    "547cb53e8ae2f19b55f9de7670b91b009d8f3bdd",
    "030580387a4d8d97560a93da2fd7494b4366e3b6"
  ],
  "changeHistoryShort": {
    "547cb53e8ae2f19b55f9de7670b91b009d8f3bdd": "Ybodychange",
    "030580387a4d8d97560a93da2fd7494b4366e3b6": "Yintroduced"
  },
  "changeHistoryDetails": {
    "547cb53e8ae2f19b55f9de7670b91b009d8f3bdd": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6634. [API] Refactor ResourceManager WebServices to make API explicit. (Giovanni Matteo Fumarola via curino)\n",
      "commitDate": "07/06/17 1:41 PM",
      "commitName": "547cb53e8ae2f19b55f9de7670b91b009d8f3bdd",
      "commitAuthor": "Carlo Curino",
      "commitDateOld": "08/12/16 2:23 AM",
      "commitNameOld": "74d0066d3392169bec872f438a0818e2f5323010",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 181.43,
      "commitsBetweenForRepo": 954,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,48 +1,47 @@\n   private Response renewDelegationToken(DelegationToken tokenData,\n       HttpServletRequest hsr, UserGroupInformation callerUGI)\n       throws AuthorizationException, IOException, InterruptedException,\n       Exception {\n \n     Token\u003cRMDelegationTokenIdentifier\u003e token \u003d\n         extractToken(tokenData.getToken());\n \n-    org.apache.hadoop.yarn.api.records.Token dToken \u003d\n-        BuilderUtils.newDelegationToken(token.getIdentifier(), token.getKind()\n-          .toString(), token.getPassword(), token.getService().toString());\n+    org.apache.hadoop.yarn.api.records.Token dToken \u003d BuilderUtils\n+        .newDelegationToken(token.getIdentifier(), token.getKind().toString(),\n+            token.getPassword(), token.getService().toString());\n     final RenewDelegationTokenRequest req \u003d\n         RenewDelegationTokenRequest.newInstance(dToken);\n \n     RenewDelegationTokenResponse resp;\n     try {\n-      resp \u003d\n-          callerUGI\n-            .doAs(new PrivilegedExceptionAction\u003cRenewDelegationTokenResponse\u003e() {\n-              @Override\n-              public RenewDelegationTokenResponse run() throws IOException,\n-                  YarnException {\n-                return rm.getClientRMService().renewDelegationToken(req);\n-              }\n-            });\n+      resp \u003d callerUGI\n+          .doAs(new PrivilegedExceptionAction\u003cRenewDelegationTokenResponse\u003e() {\n+            @Override\n+            public RenewDelegationTokenResponse run() throws YarnException {\n+              return rm.getClientRMService().renewDelegationToken(req);\n+            }\n+          });\n     } catch (UndeclaredThrowableException ue) {\n       if (ue.getCause() instanceof YarnException) {\n         if (ue.getCause().getCause() instanceof InvalidToken) {\n           throw new BadRequestException(ue.getCause().getCause().getMessage());\n-        } else if (ue.getCause().getCause() instanceof org.apache.hadoop.security.AccessControlException) {\n+        } else if (ue.getCause()\n+            .getCause() instanceof org.apache.hadoop.security.AccessControlException) {\n           return Response.status(Status.FORBIDDEN)\n-            .entity(ue.getCause().getCause().getMessage()).build();\n+              .entity(ue.getCause().getCause().getMessage()).build();\n         }\n         LOG.info(\"Renew delegation token request failed\", ue);\n         throw ue;\n       }\n       LOG.info(\"Renew delegation token request failed\", ue);\n       throw ue;\n     } catch (Exception e) {\n       LOG.info(\"Renew delegation token request failed\", e);\n       throw e;\n     }\n     long renewTime \u003d resp.getNextExpirationTime();\n \n     DelegationToken respToken \u003d new DelegationToken();\n     respToken.setNextExpirationTime(renewTime);\n     return Response.status(Status.OK).entity(respToken).build();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private Response renewDelegationToken(DelegationToken tokenData,\n      HttpServletRequest hsr, UserGroupInformation callerUGI)\n      throws AuthorizationException, IOException, InterruptedException,\n      Exception {\n\n    Token\u003cRMDelegationTokenIdentifier\u003e token \u003d\n        extractToken(tokenData.getToken());\n\n    org.apache.hadoop.yarn.api.records.Token dToken \u003d BuilderUtils\n        .newDelegationToken(token.getIdentifier(), token.getKind().toString(),\n            token.getPassword(), token.getService().toString());\n    final RenewDelegationTokenRequest req \u003d\n        RenewDelegationTokenRequest.newInstance(dToken);\n\n    RenewDelegationTokenResponse resp;\n    try {\n      resp \u003d callerUGI\n          .doAs(new PrivilegedExceptionAction\u003cRenewDelegationTokenResponse\u003e() {\n            @Override\n            public RenewDelegationTokenResponse run() throws YarnException {\n              return rm.getClientRMService().renewDelegationToken(req);\n            }\n          });\n    } catch (UndeclaredThrowableException ue) {\n      if (ue.getCause() instanceof YarnException) {\n        if (ue.getCause().getCause() instanceof InvalidToken) {\n          throw new BadRequestException(ue.getCause().getCause().getMessage());\n        } else if (ue.getCause()\n            .getCause() instanceof org.apache.hadoop.security.AccessControlException) {\n          return Response.status(Status.FORBIDDEN)\n              .entity(ue.getCause().getCause().getMessage()).build();\n        }\n        LOG.info(\"Renew delegation token request failed\", ue);\n        throw ue;\n      }\n      LOG.info(\"Renew delegation token request failed\", ue);\n      throw ue;\n    } catch (Exception e) {\n      LOG.info(\"Renew delegation token request failed\", e);\n      throw e;\n    }\n    long renewTime \u003d resp.getNextExpirationTime();\n\n    DelegationToken respToken \u003d new DelegationToken();\n    respToken.setNextExpirationTime(renewTime);\n    return Response.status(Status.OK).entity(respToken).build();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
      "extendedDetails": {}
    },
    "030580387a4d8d97560a93da2fd7494b4366e3b6": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2233. Implemented ResourceManager web-services to create, renew and cancel delegation tokens. Contributed by Varun Vasudev.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1610876 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "15/07/14 4:00 PM",
      "commitName": "030580387a4d8d97560a93da2fd7494b4366e3b6",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,48 @@\n+  private Response renewDelegationToken(DelegationToken tokenData,\n+      HttpServletRequest hsr, UserGroupInformation callerUGI)\n+      throws AuthorizationException, IOException, InterruptedException,\n+      Exception {\n+\n+    Token\u003cRMDelegationTokenIdentifier\u003e token \u003d\n+        extractToken(tokenData.getToken());\n+\n+    org.apache.hadoop.yarn.api.records.Token dToken \u003d\n+        BuilderUtils.newDelegationToken(token.getIdentifier(), token.getKind()\n+          .toString(), token.getPassword(), token.getService().toString());\n+    final RenewDelegationTokenRequest req \u003d\n+        RenewDelegationTokenRequest.newInstance(dToken);\n+\n+    RenewDelegationTokenResponse resp;\n+    try {\n+      resp \u003d\n+          callerUGI\n+            .doAs(new PrivilegedExceptionAction\u003cRenewDelegationTokenResponse\u003e() {\n+              @Override\n+              public RenewDelegationTokenResponse run() throws IOException,\n+                  YarnException {\n+                return rm.getClientRMService().renewDelegationToken(req);\n+              }\n+            });\n+    } catch (UndeclaredThrowableException ue) {\n+      if (ue.getCause() instanceof YarnException) {\n+        if (ue.getCause().getCause() instanceof InvalidToken) {\n+          throw new BadRequestException(ue.getCause().getCause().getMessage());\n+        } else if (ue.getCause().getCause() instanceof org.apache.hadoop.security.AccessControlException) {\n+          return Response.status(Status.FORBIDDEN)\n+            .entity(ue.getCause().getCause().getMessage()).build();\n+        }\n+        LOG.info(\"Renew delegation token request failed\", ue);\n+        throw ue;\n+      }\n+      LOG.info(\"Renew delegation token request failed\", ue);\n+      throw ue;\n+    } catch (Exception e) {\n+      LOG.info(\"Renew delegation token request failed\", e);\n+      throw e;\n+    }\n+    long renewTime \u003d resp.getNextExpirationTime();\n+\n+    DelegationToken respToken \u003d new DelegationToken();\n+    respToken.setNextExpirationTime(renewTime);\n+    return Response.status(Status.OK).entity(respToken).build();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private Response renewDelegationToken(DelegationToken tokenData,\n      HttpServletRequest hsr, UserGroupInformation callerUGI)\n      throws AuthorizationException, IOException, InterruptedException,\n      Exception {\n\n    Token\u003cRMDelegationTokenIdentifier\u003e token \u003d\n        extractToken(tokenData.getToken());\n\n    org.apache.hadoop.yarn.api.records.Token dToken \u003d\n        BuilderUtils.newDelegationToken(token.getIdentifier(), token.getKind()\n          .toString(), token.getPassword(), token.getService().toString());\n    final RenewDelegationTokenRequest req \u003d\n        RenewDelegationTokenRequest.newInstance(dToken);\n\n    RenewDelegationTokenResponse resp;\n    try {\n      resp \u003d\n          callerUGI\n            .doAs(new PrivilegedExceptionAction\u003cRenewDelegationTokenResponse\u003e() {\n              @Override\n              public RenewDelegationTokenResponse run() throws IOException,\n                  YarnException {\n                return rm.getClientRMService().renewDelegationToken(req);\n              }\n            });\n    } catch (UndeclaredThrowableException ue) {\n      if (ue.getCause() instanceof YarnException) {\n        if (ue.getCause().getCause() instanceof InvalidToken) {\n          throw new BadRequestException(ue.getCause().getCause().getMessage());\n        } else if (ue.getCause().getCause() instanceof org.apache.hadoop.security.AccessControlException) {\n          return Response.status(Status.FORBIDDEN)\n            .entity(ue.getCause().getCause().getMessage()).build();\n        }\n        LOG.info(\"Renew delegation token request failed\", ue);\n        throw ue;\n      }\n      LOG.info(\"Renew delegation token request failed\", ue);\n      throw ue;\n    } catch (Exception e) {\n      LOG.info(\"Renew delegation token request failed\", e);\n      throw e;\n    }\n    long renewTime \u003d resp.getNextExpirationTime();\n\n    DelegationToken respToken \u003d new DelegationToken();\n    respToken.setNextExpirationTime(renewTime);\n    return Response.status(Status.OK).entity(respToken).build();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java"
    }
  }
}