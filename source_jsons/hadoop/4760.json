{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SnapshotDiffListingInfo.java",
  "functionName": "addDirDiff",
  "functionId": "addDirDiff___dirId-long__parent-byte[][]__diff-ChildrenDiff",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/SnapshotDiffListingInfo.java",
  "functionStartLine": 85,
  "functionEndLine": 140,
  "numCommitsSeen": 2,
  "timeTaken": 2365,
  "changeHistory": [
    "ba0da2785d251745969f88a50d33ce61876d91aa",
    "b1c7654ee40b372ed777525a42981c7cf55b5c72"
  ],
  "changeHistoryShort": {
    "ba0da2785d251745969f88a50d33ce61876d91aa": "Ybodychange",
    "b1c7654ee40b372ed777525a42981c7cf55b5c72": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ba0da2785d251745969f88a50d33ce61876d91aa": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13252. Code refactoring: Remove Diff.ListType.\n",
      "commitDate": "09/03/18 3:50 PM",
      "commitName": "ba0da2785d251745969f88a50d33ce61876d91aa",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "commitDateOld": "30/11/17 12:18 PM",
      "commitNameOld": "b1c7654ee40b372ed777525a42981c7cf55b5c72",
      "commitAuthorOld": "Tsz-Wo Nicholas Sze",
      "daysBetweenCommits": 99.15,
      "commitsBetweenForRepo": 611,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,56 +1,56 @@\n   boolean addDirDiff(long dirId, byte[][] parent, ChildrenDiff diff) {\n     final Snapshot laterSnapshot \u003d getLater();\n     if (lastIndex \u003d\u003d -1) {\n       if (getTotalEntries() \u003c maxEntries) {\n         modifiedList.add(new DiffReportListingEntry(\n             dirId, dirId, parent, true, null));\n       } else {\n         setLastPath(parent);\n         setLastIndex(-1);\n         return false;\n       }\n     }\n \n-    if (lastIndex \u003d\u003d -1 || lastIndex \u003c diff.getList(ListType.CREATED).size()) {\n+    final List\u003cINode\u003e clist \u003d  diff.getCreatedUnmodifiable();\n+    if (lastIndex \u003d\u003d -1 || lastIndex \u003c clist.size()) {\n       ListIterator\u003cINode\u003e iterator \u003d lastIndex !\u003d -1 ?\n-          diff.getList(ListType.CREATED).listIterator(lastIndex)\n-          : diff.getList(ListType.CREATED).listIterator();\n+          clist.listIterator(lastIndex): clist.listIterator();\n       while (iterator.hasNext()) {\n         if (getTotalEntries() \u003c maxEntries) {\n           INode created \u003d iterator.next();\n           byte[][] path \u003d newPath(parent, created.getLocalNameBytes());\n           createdList.add(new DiffReportListingEntry(dirId, created.getId(),\n               path, created.isReference(), null));\n         } else {\n           setLastPath(parent);\n           setLastIndex(iterator.nextIndex());\n           return false;\n         }\n       }\n       setLastIndex(-1);\n     }\n \n-    if (lastIndex \u003d\u003d -1 || lastIndex \u003e\u003d diff.getList(ListType.CREATED).size()) {\n-      int size \u003d diff.getList(ListType.DELETED).size();\n+    if (lastIndex \u003d\u003d -1 || lastIndex \u003e\u003d clist.size()) {\n+      final List\u003cINode\u003e dlist \u003d  diff.getDeletedUnmodifiable();\n+      int size \u003d dlist.size();\n       ListIterator\u003cINode\u003e iterator \u003d lastIndex !\u003d -1 ?\n-          diff.getList(ListType.DELETED).listIterator(lastIndex - size)\n-          : diff.getList(ListType.DELETED).listIterator();\n+          dlist.listIterator(lastIndex - size): dlist.listIterator();\n       while (iterator.hasNext()) {\n         if (getTotalEntries() \u003c maxEntries) {\n           final INode d \u003d iterator.next();\n           byte[][] path \u003d newPath(parent, d.getLocalNameBytes());\n           byte[][] target \u003d findRenameTargetPath(d, laterSnapshot);\n           final DiffReportListingEntry e \u003d target !\u003d null ?\n               new DiffReportListingEntry(dirId, d.getId(), path, true, target) :\n               new DiffReportListingEntry(dirId, d.getId(), path, false, null);\n           deletedList.add(e);\n         } else {\n           setLastPath(parent);\n           setLastIndex(size + iterator.nextIndex());\n           return false;\n         }\n       }\n       setLastIndex(-1);\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  boolean addDirDiff(long dirId, byte[][] parent, ChildrenDiff diff) {\n    final Snapshot laterSnapshot \u003d getLater();\n    if (lastIndex \u003d\u003d -1) {\n      if (getTotalEntries() \u003c maxEntries) {\n        modifiedList.add(new DiffReportListingEntry(\n            dirId, dirId, parent, true, null));\n      } else {\n        setLastPath(parent);\n        setLastIndex(-1);\n        return false;\n      }\n    }\n\n    final List\u003cINode\u003e clist \u003d  diff.getCreatedUnmodifiable();\n    if (lastIndex \u003d\u003d -1 || lastIndex \u003c clist.size()) {\n      ListIterator\u003cINode\u003e iterator \u003d lastIndex !\u003d -1 ?\n          clist.listIterator(lastIndex): clist.listIterator();\n      while (iterator.hasNext()) {\n        if (getTotalEntries() \u003c maxEntries) {\n          INode created \u003d iterator.next();\n          byte[][] path \u003d newPath(parent, created.getLocalNameBytes());\n          createdList.add(new DiffReportListingEntry(dirId, created.getId(),\n              path, created.isReference(), null));\n        } else {\n          setLastPath(parent);\n          setLastIndex(iterator.nextIndex());\n          return false;\n        }\n      }\n      setLastIndex(-1);\n    }\n\n    if (lastIndex \u003d\u003d -1 || lastIndex \u003e\u003d clist.size()) {\n      final List\u003cINode\u003e dlist \u003d  diff.getDeletedUnmodifiable();\n      int size \u003d dlist.size();\n      ListIterator\u003cINode\u003e iterator \u003d lastIndex !\u003d -1 ?\n          dlist.listIterator(lastIndex - size): dlist.listIterator();\n      while (iterator.hasNext()) {\n        if (getTotalEntries() \u003c maxEntries) {\n          final INode d \u003d iterator.next();\n          byte[][] path \u003d newPath(parent, d.getLocalNameBytes());\n          byte[][] target \u003d findRenameTargetPath(d, laterSnapshot);\n          final DiffReportListingEntry e \u003d target !\u003d null ?\n              new DiffReportListingEntry(dirId, d.getId(), path, true, target) :\n              new DiffReportListingEntry(dirId, d.getId(), path, false, null);\n          deletedList.add(e);\n        } else {\n          setLastPath(parent);\n          setLastIndex(size + iterator.nextIndex());\n          return false;\n        }\n      }\n      setLastIndex(-1);\n    }\n    return true;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/SnapshotDiffListingInfo.java",
      "extendedDetails": {}
    },
    "b1c7654ee40b372ed777525a42981c7cf55b5c72": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-12594. snapshotDiff fails if the report exceeds the RPC response limit. Contributed by Shashikant Banerjee\n",
      "commitDate": "30/11/17 12:18 PM",
      "commitName": "b1c7654ee40b372ed777525a42981c7cf55b5c72",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "diff": "@@ -0,0 +1,56 @@\n+  boolean addDirDiff(long dirId, byte[][] parent, ChildrenDiff diff) {\n+    final Snapshot laterSnapshot \u003d getLater();\n+    if (lastIndex \u003d\u003d -1) {\n+      if (getTotalEntries() \u003c maxEntries) {\n+        modifiedList.add(new DiffReportListingEntry(\n+            dirId, dirId, parent, true, null));\n+      } else {\n+        setLastPath(parent);\n+        setLastIndex(-1);\n+        return false;\n+      }\n+    }\n+\n+    if (lastIndex \u003d\u003d -1 || lastIndex \u003c diff.getList(ListType.CREATED).size()) {\n+      ListIterator\u003cINode\u003e iterator \u003d lastIndex !\u003d -1 ?\n+          diff.getList(ListType.CREATED).listIterator(lastIndex)\n+          : diff.getList(ListType.CREATED).listIterator();\n+      while (iterator.hasNext()) {\n+        if (getTotalEntries() \u003c maxEntries) {\n+          INode created \u003d iterator.next();\n+          byte[][] path \u003d newPath(parent, created.getLocalNameBytes());\n+          createdList.add(new DiffReportListingEntry(dirId, created.getId(),\n+              path, created.isReference(), null));\n+        } else {\n+          setLastPath(parent);\n+          setLastIndex(iterator.nextIndex());\n+          return false;\n+        }\n+      }\n+      setLastIndex(-1);\n+    }\n+\n+    if (lastIndex \u003d\u003d -1 || lastIndex \u003e\u003d diff.getList(ListType.CREATED).size()) {\n+      int size \u003d diff.getList(ListType.DELETED).size();\n+      ListIterator\u003cINode\u003e iterator \u003d lastIndex !\u003d -1 ?\n+          diff.getList(ListType.DELETED).listIterator(lastIndex - size)\n+          : diff.getList(ListType.DELETED).listIterator();\n+      while (iterator.hasNext()) {\n+        if (getTotalEntries() \u003c maxEntries) {\n+          final INode d \u003d iterator.next();\n+          byte[][] path \u003d newPath(parent, d.getLocalNameBytes());\n+          byte[][] target \u003d findRenameTargetPath(d, laterSnapshot);\n+          final DiffReportListingEntry e \u003d target !\u003d null ?\n+              new DiffReportListingEntry(dirId, d.getId(), path, true, target) :\n+              new DiffReportListingEntry(dirId, d.getId(), path, false, null);\n+          deletedList.add(e);\n+        } else {\n+          setLastPath(parent);\n+          setLastIndex(size + iterator.nextIndex());\n+          return false;\n+        }\n+      }\n+      setLastIndex(-1);\n+    }\n+    return true;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  boolean addDirDiff(long dirId, byte[][] parent, ChildrenDiff diff) {\n    final Snapshot laterSnapshot \u003d getLater();\n    if (lastIndex \u003d\u003d -1) {\n      if (getTotalEntries() \u003c maxEntries) {\n        modifiedList.add(new DiffReportListingEntry(\n            dirId, dirId, parent, true, null));\n      } else {\n        setLastPath(parent);\n        setLastIndex(-1);\n        return false;\n      }\n    }\n\n    if (lastIndex \u003d\u003d -1 || lastIndex \u003c diff.getList(ListType.CREATED).size()) {\n      ListIterator\u003cINode\u003e iterator \u003d lastIndex !\u003d -1 ?\n          diff.getList(ListType.CREATED).listIterator(lastIndex)\n          : diff.getList(ListType.CREATED).listIterator();\n      while (iterator.hasNext()) {\n        if (getTotalEntries() \u003c maxEntries) {\n          INode created \u003d iterator.next();\n          byte[][] path \u003d newPath(parent, created.getLocalNameBytes());\n          createdList.add(new DiffReportListingEntry(dirId, created.getId(),\n              path, created.isReference(), null));\n        } else {\n          setLastPath(parent);\n          setLastIndex(iterator.nextIndex());\n          return false;\n        }\n      }\n      setLastIndex(-1);\n    }\n\n    if (lastIndex \u003d\u003d -1 || lastIndex \u003e\u003d diff.getList(ListType.CREATED).size()) {\n      int size \u003d diff.getList(ListType.DELETED).size();\n      ListIterator\u003cINode\u003e iterator \u003d lastIndex !\u003d -1 ?\n          diff.getList(ListType.DELETED).listIterator(lastIndex - size)\n          : diff.getList(ListType.DELETED).listIterator();\n      while (iterator.hasNext()) {\n        if (getTotalEntries() \u003c maxEntries) {\n          final INode d \u003d iterator.next();\n          byte[][] path \u003d newPath(parent, d.getLocalNameBytes());\n          byte[][] target \u003d findRenameTargetPath(d, laterSnapshot);\n          final DiffReportListingEntry e \u003d target !\u003d null ?\n              new DiffReportListingEntry(dirId, d.getId(), path, true, target) :\n              new DiffReportListingEntry(dirId, d.getId(), path, false, null);\n          deletedList.add(e);\n        } else {\n          setLastPath(parent);\n          setLastIndex(size + iterator.nextIndex());\n          return false;\n        }\n      }\n      setLastIndex(-1);\n    }\n    return true;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/SnapshotDiffListingInfo.java"
    }
  }
}