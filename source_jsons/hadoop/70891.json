{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AliyunOSSFileSystemStore.java",
  "functionName": "uploadPart",
  "functionId": "uploadPart___file-File__key-String__uploadId-String__idx-int",
  "sourceFilePath": "hadoop-tools/hadoop-aliyun/src/main/java/org/apache/hadoop/fs/aliyun/oss/AliyunOSSFileSystemStore.java",
  "functionStartLine": 597,
  "functionEndLine": 631,
  "numCommitsSeen": 19,
  "timeTaken": 2305,
  "changeHistory": [
    "be0708c6eb3c759e43639e0f8df7c9910308fb97",
    "3fade865ce84dcf68bcd7de5a5ed1c7d904796e9",
    "6542d17ea460ec222137c4b275b13daf15d3fca3"
  ],
  "changeHistoryShort": {
    "be0708c6eb3c759e43639e0f8df7c9910308fb97": "Ybodychange",
    "3fade865ce84dcf68bcd7de5a5ed1c7d904796e9": "Ybodychange",
    "6542d17ea460ec222137c4b275b13daf15d3fca3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "be0708c6eb3c759e43639e0f8df7c9910308fb97": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15919. AliyunOSS: Enable Yarn to use OSS. Contributed by wujinhu.\n",
      "commitDate": "18/11/18 10:00 PM",
      "commitName": "be0708c6eb3c759e43639e0f8df7c9910308fb97",
      "commitAuthor": "Weiwei Yang",
      "commitDateOld": "13/11/18 8:58 PM",
      "commitNameOld": "3fade865ce84dcf68bcd7de5a5ed1c7d904796e9",
      "commitAuthorOld": "Sammi Chen",
      "daysBetweenCommits": 5.04,
      "commitsBetweenForRepo": 33,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,35 @@\n   public PartETag uploadPart(File file, String key, String uploadId, int idx)\n       throws IOException {\n     InputStream instream \u003d null;\n     Exception caught \u003d null;\n     int tries \u003d 3;\n     while (tries \u003e 0) {\n       try {\n         instream \u003d new FileInputStream(file);\n         UploadPartRequest uploadRequest \u003d new UploadPartRequest();\n         uploadRequest.setBucketName(bucketName);\n         uploadRequest.setKey(key);\n         uploadRequest.setUploadId(uploadId);\n         uploadRequest.setInputStream(instream);\n         uploadRequest.setPartSize(file.length());\n         uploadRequest.setPartNumber(idx);\n         UploadPartResult uploadResult \u003d ossClient.uploadPart(uploadRequest);\n         statistics.incrementWriteOps(1);\n-        statistics.incrementBytesWritten(file.length());\n         return uploadResult.getPartETag();\n       } catch (Exception e) {\n         LOG.debug(\"Failed to upload \"+ file.getPath() +\", \" +\n             \"try again.\", e);\n         caught \u003d e;\n       } finally {\n         if (instream !\u003d null) {\n           instream.close();\n           instream \u003d null;\n         }\n       }\n       tries--;\n     }\n \n     assert (caught !\u003d null);\n     throw new IOException(\"Failed to upload \" + file.getPath() +\n         \" for 3 times.\", caught);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public PartETag uploadPart(File file, String key, String uploadId, int idx)\n      throws IOException {\n    InputStream instream \u003d null;\n    Exception caught \u003d null;\n    int tries \u003d 3;\n    while (tries \u003e 0) {\n      try {\n        instream \u003d new FileInputStream(file);\n        UploadPartRequest uploadRequest \u003d new UploadPartRequest();\n        uploadRequest.setBucketName(bucketName);\n        uploadRequest.setKey(key);\n        uploadRequest.setUploadId(uploadId);\n        uploadRequest.setInputStream(instream);\n        uploadRequest.setPartSize(file.length());\n        uploadRequest.setPartNumber(idx);\n        UploadPartResult uploadResult \u003d ossClient.uploadPart(uploadRequest);\n        statistics.incrementWriteOps(1);\n        return uploadResult.getPartETag();\n      } catch (Exception e) {\n        LOG.debug(\"Failed to upload \"+ file.getPath() +\", \" +\n            \"try again.\", e);\n        caught \u003d e;\n      } finally {\n        if (instream !\u003d null) {\n          instream.close();\n          instream \u003d null;\n        }\n      }\n      tries--;\n    }\n\n    assert (caught !\u003d null);\n    throw new IOException(\"Failed to upload \" + file.getPath() +\n        \" for 3 times.\", caught);\n  }",
      "path": "hadoop-tools/hadoop-aliyun/src/main/java/org/apache/hadoop/fs/aliyun/oss/AliyunOSSFileSystemStore.java",
      "extendedDetails": {}
    },
    "3fade865ce84dcf68bcd7de5a5ed1c7d904796e9": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15917. AliyunOSS: fix incorrect ReadOps and WriteOps in statistics. Contributed by Jinhu Wu.\n",
      "commitDate": "13/11/18 8:58 PM",
      "commitName": "3fade865ce84dcf68bcd7de5a5ed1c7d904796e9",
      "commitAuthor": "Sammi Chen",
      "commitDateOld": "25/09/18 4:48 AM",
      "commitNameOld": "2b635125fb059fc204ed35bc0e264c42dd3a9fe9",
      "commitAuthorOld": "Sammi Chen",
      "daysBetweenCommits": 49.72,
      "commitsBetweenForRepo": 442,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,36 @@\n   public PartETag uploadPart(File file, String key, String uploadId, int idx)\n       throws IOException {\n     InputStream instream \u003d null;\n     Exception caught \u003d null;\n     int tries \u003d 3;\n     while (tries \u003e 0) {\n       try {\n         instream \u003d new FileInputStream(file);\n         UploadPartRequest uploadRequest \u003d new UploadPartRequest();\n         uploadRequest.setBucketName(bucketName);\n         uploadRequest.setKey(key);\n         uploadRequest.setUploadId(uploadId);\n         uploadRequest.setInputStream(instream);\n         uploadRequest.setPartSize(file.length());\n         uploadRequest.setPartNumber(idx);\n         UploadPartResult uploadResult \u003d ossClient.uploadPart(uploadRequest);\n+        statistics.incrementWriteOps(1);\n+        statistics.incrementBytesWritten(file.length());\n         return uploadResult.getPartETag();\n       } catch (Exception e) {\n         LOG.debug(\"Failed to upload \"+ file.getPath() +\", \" +\n             \"try again.\", e);\n         caught \u003d e;\n       } finally {\n         if (instream !\u003d null) {\n           instream.close();\n           instream \u003d null;\n         }\n       }\n       tries--;\n     }\n \n     assert (caught !\u003d null);\n     throw new IOException(\"Failed to upload \" + file.getPath() +\n         \" for 3 times.\", caught);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public PartETag uploadPart(File file, String key, String uploadId, int idx)\n      throws IOException {\n    InputStream instream \u003d null;\n    Exception caught \u003d null;\n    int tries \u003d 3;\n    while (tries \u003e 0) {\n      try {\n        instream \u003d new FileInputStream(file);\n        UploadPartRequest uploadRequest \u003d new UploadPartRequest();\n        uploadRequest.setBucketName(bucketName);\n        uploadRequest.setKey(key);\n        uploadRequest.setUploadId(uploadId);\n        uploadRequest.setInputStream(instream);\n        uploadRequest.setPartSize(file.length());\n        uploadRequest.setPartNumber(idx);\n        UploadPartResult uploadResult \u003d ossClient.uploadPart(uploadRequest);\n        statistics.incrementWriteOps(1);\n        statistics.incrementBytesWritten(file.length());\n        return uploadResult.getPartETag();\n      } catch (Exception e) {\n        LOG.debug(\"Failed to upload \"+ file.getPath() +\", \" +\n            \"try again.\", e);\n        caught \u003d e;\n      } finally {\n        if (instream !\u003d null) {\n          instream.close();\n          instream \u003d null;\n        }\n      }\n      tries--;\n    }\n\n    assert (caught !\u003d null);\n    throw new IOException(\"Failed to upload \" + file.getPath() +\n        \" for 3 times.\", caught);\n  }",
      "path": "hadoop-tools/hadoop-aliyun/src/main/java/org/apache/hadoop/fs/aliyun/oss/AliyunOSSFileSystemStore.java",
      "extendedDetails": {}
    },
    "6542d17ea460ec222137c4b275b13daf15d3fca3": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-14999. AliyunOSS: provide one asynchronous multi-part based uploading mechanism. Contributed by Genmao Yu.\n",
      "commitDate": "30/03/18 5:23 AM",
      "commitName": "6542d17ea460ec222137c4b275b13daf15d3fca3",
      "commitAuthor": "Sammi Chen",
      "diff": "@@ -0,0 +1,34 @@\n+  public PartETag uploadPart(File file, String key, String uploadId, int idx)\n+      throws IOException {\n+    InputStream instream \u003d null;\n+    Exception caught \u003d null;\n+    int tries \u003d 3;\n+    while (tries \u003e 0) {\n+      try {\n+        instream \u003d new FileInputStream(file);\n+        UploadPartRequest uploadRequest \u003d new UploadPartRequest();\n+        uploadRequest.setBucketName(bucketName);\n+        uploadRequest.setKey(key);\n+        uploadRequest.setUploadId(uploadId);\n+        uploadRequest.setInputStream(instream);\n+        uploadRequest.setPartSize(file.length());\n+        uploadRequest.setPartNumber(idx);\n+        UploadPartResult uploadResult \u003d ossClient.uploadPart(uploadRequest);\n+        return uploadResult.getPartETag();\n+      } catch (Exception e) {\n+        LOG.debug(\"Failed to upload \"+ file.getPath() +\", \" +\n+            \"try again.\", e);\n+        caught \u003d e;\n+      } finally {\n+        if (instream !\u003d null) {\n+          instream.close();\n+          instream \u003d null;\n+        }\n+      }\n+      tries--;\n+    }\n+\n+    assert (caught !\u003d null);\n+    throw new IOException(\"Failed to upload \" + file.getPath() +\n+        \" for 3 times.\", caught);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public PartETag uploadPart(File file, String key, String uploadId, int idx)\n      throws IOException {\n    InputStream instream \u003d null;\n    Exception caught \u003d null;\n    int tries \u003d 3;\n    while (tries \u003e 0) {\n      try {\n        instream \u003d new FileInputStream(file);\n        UploadPartRequest uploadRequest \u003d new UploadPartRequest();\n        uploadRequest.setBucketName(bucketName);\n        uploadRequest.setKey(key);\n        uploadRequest.setUploadId(uploadId);\n        uploadRequest.setInputStream(instream);\n        uploadRequest.setPartSize(file.length());\n        uploadRequest.setPartNumber(idx);\n        UploadPartResult uploadResult \u003d ossClient.uploadPart(uploadRequest);\n        return uploadResult.getPartETag();\n      } catch (Exception e) {\n        LOG.debug(\"Failed to upload \"+ file.getPath() +\", \" +\n            \"try again.\", e);\n        caught \u003d e;\n      } finally {\n        if (instream !\u003d null) {\n          instream.close();\n          instream \u003d null;\n        }\n      }\n      tries--;\n    }\n\n    assert (caught !\u003d null);\n    throw new IOException(\"Failed to upload \" + file.getPath() +\n        \" for 3 times.\", caught);\n  }",
      "path": "hadoop-tools/hadoop-aliyun/src/main/java/org/apache/hadoop/fs/aliyun/oss/AliyunOSSFileSystemStore.java"
    }
  }
}