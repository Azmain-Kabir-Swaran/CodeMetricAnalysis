{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RouterUserProtocol.java",
  "functionName": "getGroupsForUser",
  "functionId": "getGroupsForUser___user-String",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterUserProtocol.java",
  "functionStartLine": 90,
  "functionEndLine": 103,
  "numCommitsSeen": 1,
  "timeTaken": 726,
  "changeHistory": [
    "719d57bf46765121550831189591fd420d2b078d"
  ],
  "changeHistoryShort": {
    "719d57bf46765121550831189591fd420d2b078d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "719d57bf46765121550831189591fd420d2b078d": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-14545. RBF: Router should support GetUserMappingsProtocol. Contributed by Ayush Saxena.\n",
      "commitDate": "24/06/19 9:33 AM",
      "commitName": "719d57bf46765121550831189591fd420d2b078d",
      "commitAuthor": "Inigo Goiri",
      "diff": "@@ -0,0 +1,14 @@\n+  public String[] getGroupsForUser(String user) throws IOException {\n+    LOG.debug(\"Getting groups for user {}\", user);\n+    rpcServer.checkOperation(OperationCategory.UNCHECKED);\n+    Set\u003cFederationNamespaceInfo\u003e nss \u003d namenodeResolver.getNamespaces();\n+    if (nss.isEmpty()) {\n+      return UserGroupInformation.createRemoteUser(user).getGroupNames();\n+    } else {\n+      RemoteMethod method \u003d new RemoteMethod(GetUserMappingsProtocol.class,\n+          \"getGroupsForUser\", new Class\u003c?\u003e[] {String.class}, user);\n+      Map\u003cFederationNamespaceInfo, String[]\u003e results \u003d\n+          rpcClient.invokeConcurrent(nss, method, String[].class);\n+      return merge(results, String.class);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public String[] getGroupsForUser(String user) throws IOException {\n    LOG.debug(\"Getting groups for user {}\", user);\n    rpcServer.checkOperation(OperationCategory.UNCHECKED);\n    Set\u003cFederationNamespaceInfo\u003e nss \u003d namenodeResolver.getNamespaces();\n    if (nss.isEmpty()) {\n      return UserGroupInformation.createRemoteUser(user).getGroupNames();\n    } else {\n      RemoteMethod method \u003d new RemoteMethod(GetUserMappingsProtocol.class,\n          \"getGroupsForUser\", new Class\u003c?\u003e[] {String.class}, user);\n      Map\u003cFederationNamespaceInfo, String[]\u003e results \u003d\n          rpcClient.invokeConcurrent(nss, method, String[].class);\n      return merge(results, String.class);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterUserProtocol.java"
    }
  }
}