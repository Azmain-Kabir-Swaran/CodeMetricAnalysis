{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TaskAttemptImpl.java",
  "functionName": "sendLaunchedEvents",
  "functionId": "sendLaunchedEvents",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java",
  "functionStartLine": 1723,
  "functionEndLine": 1740,
  "numCommitsSeen": 108,
  "timeTaken": 2516,
  "changeHistory": [
    "cb78a65a152a4f576a3255df3676c3b788c84eb5",
    "6a1c41111edcdc58c846fc50e53554fbba230171"
  ],
  "changeHistoryShort": {
    "cb78a65a152a4f576a3255df3676c3b788c84eb5": "Ybodychange",
    "6a1c41111edcdc58c846fc50e53554fbba230171": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cb78a65a152a4f576a3255df3676c3b788c84eb5": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5152. Make MR App to simply pass through the container from RM instead of extracting and populating information itself to start any container. Contributed by Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1469544 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/04/13 1:13 PM",
      "commitName": "cb78a65a152a4f576a3255df3676c3b788c84eb5",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "11/04/13 12:28 PM",
      "commitNameOld": "e4c55e17fea55e2fcbef182bb2b0c4b22686f38c",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 7.03,
      "commitsBetweenForRepo": 35,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   private void sendLaunchedEvents() {\n     JobCounterUpdateEvent jce \u003d new JobCounterUpdateEvent(attemptId.getTaskId()\n         .getJobId());\n     jce.addCounterUpdate(attemptId.getTaskId().getTaskType() \u003d\u003d TaskType.MAP ?\n         JobCounter.TOTAL_LAUNCHED_MAPS : JobCounter.TOTAL_LAUNCHED_REDUCES, 1);\n     eventHandler.handle(jce);\n \n     LOG.info(\"TaskAttempt: [\" + attemptId\n-        + \"] using containerId: [\" + containerID + \" on NM: [\"\n-        + containerMgrAddress + \"]\");\n+        + \"] using containerId: [\" + container.getId() + \" on NM: [\"\n+        + StringInterner.weakIntern(container.getNodeId().toString()) + \"]\");\n     TaskAttemptStartedEvent tase \u003d\n       new TaskAttemptStartedEvent(TypeConverter.fromYarn(attemptId),\n           TypeConverter.fromYarn(attemptId.getTaskId().getTaskType()),\n-          launchTime, trackerName, httpPort, shufflePort, containerID,\n+          launchTime, trackerName, httpPort, shufflePort, container.getId(),\n           locality.toString(), avataar.toString());\n     eventHandler.handle(\n         new JobHistoryEvent(attemptId.getTaskId().getJobId(), tase));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void sendLaunchedEvents() {\n    JobCounterUpdateEvent jce \u003d new JobCounterUpdateEvent(attemptId.getTaskId()\n        .getJobId());\n    jce.addCounterUpdate(attemptId.getTaskId().getTaskType() \u003d\u003d TaskType.MAP ?\n        JobCounter.TOTAL_LAUNCHED_MAPS : JobCounter.TOTAL_LAUNCHED_REDUCES, 1);\n    eventHandler.handle(jce);\n\n    LOG.info(\"TaskAttempt: [\" + attemptId\n        + \"] using containerId: [\" + container.getId() + \" on NM: [\"\n        + StringInterner.weakIntern(container.getNodeId().toString()) + \"]\");\n    TaskAttemptStartedEvent tase \u003d\n      new TaskAttemptStartedEvent(TypeConverter.fromYarn(attemptId),\n          TypeConverter.fromYarn(attemptId.getTaskId().getTaskType()),\n          launchTime, trackerName, httpPort, shufflePort, container.getId(),\n          locality.toString(), avataar.toString());\n    eventHandler.handle(\n        new JobHistoryEvent(attemptId.getTaskId().getJobId(), tase));\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java",
      "extendedDetails": {}
    },
    "6a1c41111edcdc58c846fc50e53554fbba230171": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-5079. Changes job recovery to restore state directly from job history, instaed of simulating state machine events. Contributed by Jason Lowe and Robert Parker.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1466767 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/04/13 9:52 PM",
      "commitName": "6a1c41111edcdc58c846fc50e53554fbba230171",
      "commitAuthor": "Siddharth Seth",
      "diff": "@@ -0,0 +1,18 @@\n+  private void sendLaunchedEvents() {\n+    JobCounterUpdateEvent jce \u003d new JobCounterUpdateEvent(attemptId.getTaskId()\n+        .getJobId());\n+    jce.addCounterUpdate(attemptId.getTaskId().getTaskType() \u003d\u003d TaskType.MAP ?\n+        JobCounter.TOTAL_LAUNCHED_MAPS : JobCounter.TOTAL_LAUNCHED_REDUCES, 1);\n+    eventHandler.handle(jce);\n+\n+    LOG.info(\"TaskAttempt: [\" + attemptId\n+        + \"] using containerId: [\" + containerID + \" on NM: [\"\n+        + containerMgrAddress + \"]\");\n+    TaskAttemptStartedEvent tase \u003d\n+      new TaskAttemptStartedEvent(TypeConverter.fromYarn(attemptId),\n+          TypeConverter.fromYarn(attemptId.getTaskId().getTaskType()),\n+          launchTime, trackerName, httpPort, shufflePort, containerID,\n+          locality.toString(), avataar.toString());\n+    eventHandler.handle(\n+        new JobHistoryEvent(attemptId.getTaskId().getJobId(), tase));\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void sendLaunchedEvents() {\n    JobCounterUpdateEvent jce \u003d new JobCounterUpdateEvent(attemptId.getTaskId()\n        .getJobId());\n    jce.addCounterUpdate(attemptId.getTaskId().getTaskType() \u003d\u003d TaskType.MAP ?\n        JobCounter.TOTAL_LAUNCHED_MAPS : JobCounter.TOTAL_LAUNCHED_REDUCES, 1);\n    eventHandler.handle(jce);\n\n    LOG.info(\"TaskAttempt: [\" + attemptId\n        + \"] using containerId: [\" + containerID + \" on NM: [\"\n        + containerMgrAddress + \"]\");\n    TaskAttemptStartedEvent tase \u003d\n      new TaskAttemptStartedEvent(TypeConverter.fromYarn(attemptId),\n          TypeConverter.fromYarn(attemptId.getTaskId().getTaskType()),\n          launchTime, trackerName, httpPort, shufflePort, containerID,\n          locality.toString(), avataar.toString());\n    eventHandler.handle(\n        new JobHistoryEvent(attemptId.getTaskId().getJobId(), tase));\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java"
    }
  }
}