{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AbstractFuture.java",
  "functionName": "clearListeners",
  "functionId": "clearListeners___onto-Listener",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/checker/AbstractFuture.java",
  "functionStartLine": 966,
  "functionEndLine": 985,
  "numCommitsSeen": 4,
  "timeTaken": 758,
  "changeHistory": [
    "d69a82c89c1e857a2a86ff614ae11fb5df993614"
  ],
  "changeHistoryShort": {
    "d69a82c89c1e857a2a86ff614ae11fb5df993614": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d69a82c89c1e857a2a86ff614ae11fb5df993614": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-11511. Support Timeout when checking single disk. Contributed by Hanisha Koneru.\n",
      "commitDate": "15/03/17 6:01 PM",
      "commitName": "d69a82c89c1e857a2a86ff614ae11fb5df993614",
      "commitAuthor": "Hanisha Koneru",
      "diff": "@@ -0,0 +1,20 @@\n+  private Listener clearListeners(Listener onto) {\n+    // We need to\n+    // 1. atomically swap the listeners with TOMBSTONE, this is because\n+    // addListener uses that to to synchronize with us\n+    // 2. reverse the linked list, because despite our rather clear contract,\n+    // people depend on us executing listeners in the order they were added\n+    // 3. push all the items onto \u0027onto\u0027 and return the new head of the stack\n+    Listener head;\n+    do {\n+      head \u003d listeners;\n+    } while (!ATOMIC_HELPER.casListeners(this, head, Listener.TOMBSTONE));\n+    Listener reversedList \u003d onto;\n+    while (head !\u003d null) {\n+      Listener tmp \u003d head;\n+      head \u003d head.next;\n+      tmp.next \u003d reversedList;\n+      reversedList \u003d tmp;\n+    }\n+    return reversedList;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private Listener clearListeners(Listener onto) {\n    // We need to\n    // 1. atomically swap the listeners with TOMBSTONE, this is because\n    // addListener uses that to to synchronize with us\n    // 2. reverse the linked list, because despite our rather clear contract,\n    // people depend on us executing listeners in the order they were added\n    // 3. push all the items onto \u0027onto\u0027 and return the new head of the stack\n    Listener head;\n    do {\n      head \u003d listeners;\n    } while (!ATOMIC_HELPER.casListeners(this, head, Listener.TOMBSTONE));\n    Listener reversedList \u003d onto;\n    while (head !\u003d null) {\n      Listener tmp \u003d head;\n      head \u003d head.next;\n      tmp.next \u003d reversedList;\n      reversedList \u003d tmp;\n    }\n    return reversedList;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/checker/AbstractFuture.java"
    }
  }
}