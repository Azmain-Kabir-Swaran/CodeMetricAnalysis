{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "VolumeProvisioningTask.java",
  "functionName": "call",
  "functionId": "call",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/volume/csi/provisioner/VolumeProvisioningTask.java",
  "functionStartLine": 50,
  "functionEndLine": 65,
  "numCommitsSeen": 1,
  "timeTaken": 767,
  "changeHistory": [
    "4e7284443e6cf8dac3cd5d2581730c87ae6ffb55"
  ],
  "changeHistoryShort": {
    "4e7284443e6cf8dac3cd5d2581730c87ae6ffb55": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4e7284443e6cf8dac3cd5d2581730c87ae6ffb55": {
      "type": "Yintroduced",
      "commitMessage": "YARN-8902. [CSI] Add volume manager that manages CSI volume lifecycle. Contributed by Weiwei Yang.\n",
      "commitDate": "11/11/18 10:27 PM",
      "commitName": "4e7284443e6cf8dac3cd5d2581730c87ae6ffb55",
      "commitAuthor": "Sunil G",
      "diff": "@@ -0,0 +1,16 @@\n+  public VolumeProvisioningResults call() throws Exception {\n+    VolumeProvisioningResults vpr \u003d new VolumeProvisioningResults();\n+\n+    // Wait all volumes are reaching expected state\n+    for (Volume vs : volumes) {\n+      LOG.info(\"Provisioning volume : {}\", vs.getVolumeId().toString());\n+      vs.handle(new ValidateVolumeEvent(vs));\n+      vs.handle(new ControllerPublishVolumeEvent(vs));\n+    }\n+\n+    // collect results\n+    volumes.stream().forEach(v -\u003e\n+        vpr.addResult(v.getVolumeId(), v.getVolumeState()));\n+\n+    return vpr;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public VolumeProvisioningResults call() throws Exception {\n    VolumeProvisioningResults vpr \u003d new VolumeProvisioningResults();\n\n    // Wait all volumes are reaching expected state\n    for (Volume vs : volumes) {\n      LOG.info(\"Provisioning volume : {}\", vs.getVolumeId().toString());\n      vs.handle(new ValidateVolumeEvent(vs));\n      vs.handle(new ControllerPublishVolumeEvent(vs));\n    }\n\n    // collect results\n    volumes.stream().forEach(v -\u003e\n        vpr.addResult(v.getVolumeId(), v.getVolumeState()));\n\n    return vpr;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/volume/csi/provisioner/VolumeProvisioningTask.java"
    }
  }
}