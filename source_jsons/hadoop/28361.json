{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "MemoryFederationStateStore.java",
  "functionName": "subClusterHeartbeat",
  "functionId": "subClusterHeartbeat___request-SubClusterHeartbeatRequest",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/store/impl/MemoryFederationStateStore.java",
  "functionStartLine": 138,
  "functionEndLine": 159,
  "numCommitsSeen": 8,
  "timeTaken": 1545,
  "changeHistory": [
    "5272af8c7eab76d779c621eb0208bf29ffa25613",
    "e1da8f0667589dd660e6fcd776cc87f1b8ef6db9",
    "cfafd173bd854d59effb9256cd4e7b79f6beab5b",
    "dcf8c52d80118edce70e310da4fc05045b4cf175"
  ],
  "changeHistoryShort": {
    "5272af8c7eab76d779c621eb0208bf29ffa25613": "Ybodychange",
    "e1da8f0667589dd660e6fcd776cc87f1b8ef6db9": "Ybodychange",
    "cfafd173bd854d59effb9256cd4e7b79f6beab5b": "Ybodychange",
    "dcf8c52d80118edce70e310da4fc05045b4cf175": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5272af8c7eab76d779c621eb0208bf29ffa25613": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3663. Federation State and Policy Store (DBMS implementation). (Giovanni Matteo Fumarola via curino).\n\n(cherry picked from commit be99c1fe2eb150fabd69902118d65941f82971f6)\n",
      "commitDate": "01/08/17 5:28 PM",
      "commitName": "5272af8c7eab76d779c621eb0208bf29ffa25613",
      "commitAuthor": "Carlo Curino",
      "commitDateOld": "01/08/17 5:28 PM",
      "commitNameOld": "e1da8f0667589dd660e6fcd776cc87f1b8ef6db9",
      "commitAuthorOld": "Subru Krishnan",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n   public SubClusterHeartbeatResponse subClusterHeartbeat(\n       SubClusterHeartbeatRequest request) throws YarnException {\n \n-    FederationMembershipStateStoreInputValidator\n-        .validateSubClusterHeartbeatRequest(request);\n+    FederationMembershipStateStoreInputValidator.validate(request);\n     SubClusterId subClusterId \u003d request.getSubClusterId();\n     SubClusterInfo subClusterInfo \u003d membership.get(subClusterId);\n \n     if (subClusterInfo \u003d\u003d null) {\n-      String errMsg \u003d \"Subcluster \" + subClusterId.toString()\n+      String errMsg \u003d \"SubCluster \" + subClusterId.toString()\n           + \" does not exist; cannot heartbeat\";\n-      FederationStateStoreUtils.logAndThrowStoreException(LOG,\n-          FederationStateStoreErrorCode.MEMBERSHIP_UPDATE_HEARTBEAT_FAIL,\n-          errMsg);\n+      FederationStateStoreUtils.logAndThrowStoreException(LOG, errMsg);\n     }\n \n-    subClusterInfo.setLastHeartBeat(clock.getTime());\n+    long currentTime \u003d\n+        Calendar.getInstance(TimeZone.getTimeZone(\"UTC\")).getTimeInMillis();\n+\n+    subClusterInfo.setLastHeartBeat(currentTime);\n     subClusterInfo.setState(request.getState());\n     subClusterInfo.setCapability(request.getCapability());\n \n     return SubClusterHeartbeatResponse.newInstance();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public SubClusterHeartbeatResponse subClusterHeartbeat(\n      SubClusterHeartbeatRequest request) throws YarnException {\n\n    FederationMembershipStateStoreInputValidator.validate(request);\n    SubClusterId subClusterId \u003d request.getSubClusterId();\n    SubClusterInfo subClusterInfo \u003d membership.get(subClusterId);\n\n    if (subClusterInfo \u003d\u003d null) {\n      String errMsg \u003d \"SubCluster \" + subClusterId.toString()\n          + \" does not exist; cannot heartbeat\";\n      FederationStateStoreUtils.logAndThrowStoreException(LOG, errMsg);\n    }\n\n    long currentTime \u003d\n        Calendar.getInstance(TimeZone.getTimeZone(\"UTC\")).getTimeInMillis();\n\n    subClusterInfo.setLastHeartBeat(currentTime);\n    subClusterInfo.setState(request.getState());\n    subClusterInfo.setCapability(request.getCapability());\n\n    return SubClusterHeartbeatResponse.newInstance();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/store/impl/MemoryFederationStateStore.java",
      "extendedDetails": {}
    },
    "e1da8f0667589dd660e6fcd776cc87f1b8ef6db9": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5602. Utils for Federation State and Policy Store. (Giovanni Matteo Fumarola via Subru).\n\n(cherry picked from commit 326a2e6bde1cf266ecc7d3b513cdaac6abcebbe4)\n",
      "commitDate": "01/08/17 5:28 PM",
      "commitName": "e1da8f0667589dd660e6fcd776cc87f1b8ef6db9",
      "commitAuthor": "Subru Krishnan",
      "commitDateOld": "01/08/17 5:28 PM",
      "commitNameOld": "cfafd173bd854d59effb9256cd4e7b79f6beab5b",
      "commitAuthorOld": "Subru Krishnan",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 18,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,22 @@\n   public SubClusterHeartbeatResponse subClusterHeartbeat(\n       SubClusterHeartbeatRequest request) throws YarnException {\n \n     FederationMembershipStateStoreInputValidator\n         .validateSubClusterHeartbeatRequest(request);\n     SubClusterId subClusterId \u003d request.getSubClusterId();\n     SubClusterInfo subClusterInfo \u003d membership.get(subClusterId);\n \n     if (subClusterInfo \u003d\u003d null) {\n-      throw new YarnException(\"Subcluster \" + subClusterId.toString()\n-          + \" does not exist; cannot heartbeat\");\n+      String errMsg \u003d \"Subcluster \" + subClusterId.toString()\n+          + \" does not exist; cannot heartbeat\";\n+      FederationStateStoreUtils.logAndThrowStoreException(LOG,\n+          FederationStateStoreErrorCode.MEMBERSHIP_UPDATE_HEARTBEAT_FAIL,\n+          errMsg);\n     }\n \n     subClusterInfo.setLastHeartBeat(clock.getTime());\n     subClusterInfo.setState(request.getState());\n     subClusterInfo.setCapability(request.getCapability());\n \n     return SubClusterHeartbeatResponse.newInstance();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public SubClusterHeartbeatResponse subClusterHeartbeat(\n      SubClusterHeartbeatRequest request) throws YarnException {\n\n    FederationMembershipStateStoreInputValidator\n        .validateSubClusterHeartbeatRequest(request);\n    SubClusterId subClusterId \u003d request.getSubClusterId();\n    SubClusterInfo subClusterInfo \u003d membership.get(subClusterId);\n\n    if (subClusterInfo \u003d\u003d null) {\n      String errMsg \u003d \"Subcluster \" + subClusterId.toString()\n          + \" does not exist; cannot heartbeat\";\n      FederationStateStoreUtils.logAndThrowStoreException(LOG,\n          FederationStateStoreErrorCode.MEMBERSHIP_UPDATE_HEARTBEAT_FAIL,\n          errMsg);\n    }\n\n    subClusterInfo.setLastHeartBeat(clock.getTime());\n    subClusterInfo.setState(request.getState());\n    subClusterInfo.setCapability(request.getCapability());\n\n    return SubClusterHeartbeatResponse.newInstance();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/store/impl/MemoryFederationStateStore.java",
      "extendedDetails": {}
    },
    "cfafd173bd854d59effb9256cd4e7b79f6beab5b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5467. InputValidator for the FederationStateStore internal APIs. (Giovanni Matteo Fumarola via Subru)\n\n(cherry picked from commit bd44182e70c273ad3371a6f9b458fe0f8a7a6abc)\n",
      "commitDate": "01/08/17 5:28 PM",
      "commitName": "cfafd173bd854d59effb9256cd4e7b79f6beab5b",
      "commitAuthor": "Subru Krishnan",
      "commitDateOld": "01/08/17 5:28 PM",
      "commitNameOld": "52558df6204954456fc27cf762e5495513928cbe",
      "commitAuthorOld": "Subru Krishnan",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,19 @@\n   public SubClusterHeartbeatResponse subClusterHeartbeat(\n       SubClusterHeartbeatRequest request) throws YarnException {\n \n+    FederationMembershipStateStoreInputValidator\n+        .validateSubClusterHeartbeatRequest(request);\n     SubClusterId subClusterId \u003d request.getSubClusterId();\n     SubClusterInfo subClusterInfo \u003d membership.get(subClusterId);\n \n     if (subClusterInfo \u003d\u003d null) {\n       throw new YarnException(\"Subcluster \" + subClusterId.toString()\n           + \" does not exist; cannot heartbeat\");\n     }\n \n     subClusterInfo.setLastHeartBeat(clock.getTime());\n     subClusterInfo.setState(request.getState());\n     subClusterInfo.setCapability(request.getCapability());\n \n     return SubClusterHeartbeatResponse.newInstance();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public SubClusterHeartbeatResponse subClusterHeartbeat(\n      SubClusterHeartbeatRequest request) throws YarnException {\n\n    FederationMembershipStateStoreInputValidator\n        .validateSubClusterHeartbeatRequest(request);\n    SubClusterId subClusterId \u003d request.getSubClusterId();\n    SubClusterInfo subClusterInfo \u003d membership.get(subClusterId);\n\n    if (subClusterInfo \u003d\u003d null) {\n      throw new YarnException(\"Subcluster \" + subClusterId.toString()\n          + \" does not exist; cannot heartbeat\");\n    }\n\n    subClusterInfo.setLastHeartBeat(clock.getTime());\n    subClusterInfo.setState(request.getState());\n    subClusterInfo.setCapability(request.getCapability());\n\n    return SubClusterHeartbeatResponse.newInstance();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/store/impl/MemoryFederationStateStore.java",
      "extendedDetails": {}
    },
    "dcf8c52d80118edce70e310da4fc05045b4cf175": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5406. In-memory based implementation of the FederationMembershipStateStore. Contributed by Ellen Hui.\n\n(cherry picked from commit 20d1d2be91bf841e0fee32522ee7b560a6f2598f)\n",
      "commitDate": "01/08/17 5:28 PM",
      "commitName": "dcf8c52d80118edce70e310da4fc05045b4cf175",
      "commitAuthor": "Subru Krishnan",
      "diff": "@@ -0,0 +1,17 @@\n+  public SubClusterHeartbeatResponse subClusterHeartbeat(\n+      SubClusterHeartbeatRequest request) throws YarnException {\n+\n+    SubClusterId subClusterId \u003d request.getSubClusterId();\n+    SubClusterInfo subClusterInfo \u003d membership.get(subClusterId);\n+\n+    if (subClusterInfo \u003d\u003d null) {\n+      throw new YarnException(\"Subcluster \" + subClusterId.toString()\n+          + \" does not exist; cannot heartbeat\");\n+    }\n+\n+    subClusterInfo.setLastHeartBeat(clock.getTime());\n+    subClusterInfo.setState(request.getState());\n+    subClusterInfo.setCapability(request.getCapability());\n+\n+    return SubClusterHeartbeatResponse.newInstance();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public SubClusterHeartbeatResponse subClusterHeartbeat(\n      SubClusterHeartbeatRequest request) throws YarnException {\n\n    SubClusterId subClusterId \u003d request.getSubClusterId();\n    SubClusterInfo subClusterInfo \u003d membership.get(subClusterId);\n\n    if (subClusterInfo \u003d\u003d null) {\n      throw new YarnException(\"Subcluster \" + subClusterId.toString()\n          + \" does not exist; cannot heartbeat\");\n    }\n\n    subClusterInfo.setLastHeartBeat(clock.getTime());\n    subClusterInfo.setState(request.getState());\n    subClusterInfo.setCapability(request.getCapability());\n\n    return SubClusterHeartbeatResponse.newInstance();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/store/impl/MemoryFederationStateStore.java"
    }
  }
}