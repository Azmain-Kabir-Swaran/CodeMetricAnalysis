{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SharedCacheUtil.java",
  "functionName": "getCacheEntryPath",
  "functionId": "getCacheEntryPath___cacheDepth-int__cacheRoot-String__checksum-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/sharedcache/SharedCacheUtil.java",
  "functionStartLine": 57,
  "functionEndLine": 80,
  "numCommitsSeen": 5,
  "timeTaken": 1362,
  "changeHistory": [
    "95372657fc25c02399b01793833021ccf88dada2",
    "4f426fe2232ed90d8fdf8619fbdeae28d788b5c8",
    "17d1202c35a1992eab66ea05dfd2baf219a17aec"
  ],
  "changeHistoryShort": {
    "95372657fc25c02399b01793833021ccf88dada2": "Ybodychange",
    "4f426fe2232ed90d8fdf8619fbdeae28d788b5c8": "Yfilerename",
    "17d1202c35a1992eab66ea05dfd2baf219a17aec": "Yintroduced"
  },
  "changeHistoryDetails": {
    "95372657fc25c02399b01793833021ccf88dada2": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9287. Consecutive StringBuilder append should be reuse. Contributed by Ayush Saxena.\n",
      "commitDate": "25/02/19 11:45 AM",
      "commitName": "95372657fc25c02399b01793833021ccf88dada2",
      "commitAuthor": "Giovanni Matteo Fumarola",
      "commitDateOld": "03/10/17 2:06 PM",
      "commitNameOld": "4a877737182808fe3392a116762ba59973a477a6",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 509.94,
      "commitsBetweenForRepo": 4379,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n   public static String getCacheEntryPath(int cacheDepth, String cacheRoot,\n       String checksum) {\n \n     if (cacheDepth \u003c\u003d 0) {\n       throw new IllegalArgumentException(\n           \"The cache depth must be greater than 0. Passed value: \" + cacheDepth);\n     }\n     if (checksum.length() \u003c cacheDepth) {\n       throw new IllegalArgumentException(\"The checksum passed was too short: \"\n           + checksum);\n     }\n \n     // Build the cache entry path to the specified depth. For example, if the\n     // depth is 3 and the checksum is 3c4f, the path would be:\n     // SHARED_CACHE_ROOT/3/c/4/3c4f\n     StringBuilder sb \u003d new StringBuilder(cacheRoot);\n     for (int i \u003d 0; i \u003c cacheDepth; i++) {\n-      sb.append(Path.SEPARATOR_CHAR);\n-      sb.append(checksum.charAt(i));\n+      sb.append(Path.SEPARATOR_CHAR)\n+          .append(checksum.charAt(i));\n     }\n     sb.append(Path.SEPARATOR_CHAR).append(checksum);\n \n     return sb.toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static String getCacheEntryPath(int cacheDepth, String cacheRoot,\n      String checksum) {\n\n    if (cacheDepth \u003c\u003d 0) {\n      throw new IllegalArgumentException(\n          \"The cache depth must be greater than 0. Passed value: \" + cacheDepth);\n    }\n    if (checksum.length() \u003c cacheDepth) {\n      throw new IllegalArgumentException(\"The checksum passed was too short: \"\n          + checksum);\n    }\n\n    // Build the cache entry path to the specified depth. For example, if the\n    // depth is 3 and the checksum is 3c4f, the path would be:\n    // SHARED_CACHE_ROOT/3/c/4/3c4f\n    StringBuilder sb \u003d new StringBuilder(cacheRoot);\n    for (int i \u003d 0; i \u003c cacheDepth; i++) {\n      sb.append(Path.SEPARATOR_CHAR)\n          .append(checksum.charAt(i));\n    }\n    sb.append(Path.SEPARATOR_CHAR).append(checksum);\n\n    return sb.toString();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/sharedcache/SharedCacheUtil.java",
      "extendedDetails": {}
    },
    "4f426fe2232ed90d8fdf8619fbdeae28d788b5c8": {
      "type": "Yfilerename",
      "commitMessage": "YARN-2180. [YARN-1492] In-memory backing store for cache manager. (Chris Trezzo via kasha)\n",
      "commitDate": "09/10/14 5:16 PM",
      "commitName": "4f426fe2232ed90d8fdf8619fbdeae28d788b5c8",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "09/10/14 5:05 PM",
      "commitNameOld": "d8d628d1e0c42a32e2079ed430e8817996bbe4c4",
      "commitAuthorOld": "Colin Patrick Mccabe",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static String getCacheEntryPath(int cacheDepth, String cacheRoot,\n      String checksum) {\n\n    if (cacheDepth \u003c\u003d 0) {\n      throw new IllegalArgumentException(\n          \"The cache depth must be greater than 0. Passed value: \" + cacheDepth);\n    }\n    if (checksum.length() \u003c cacheDepth) {\n      throw new IllegalArgumentException(\"The checksum passed was too short: \"\n          + checksum);\n    }\n\n    // Build the cache entry path to the specified depth. For example, if the\n    // depth is 3 and the checksum is 3c4f, the path would be:\n    // SHARED_CACHE_ROOT/3/c/4/3c4f\n    StringBuilder sb \u003d new StringBuilder(cacheRoot);\n    for (int i \u003d 0; i \u003c cacheDepth; i++) {\n      sb.append(Path.SEPARATOR_CHAR);\n      sb.append(checksum.charAt(i));\n    }\n    sb.append(Path.SEPARATOR_CHAR).append(checksum);\n\n    return sb.toString();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/sharedcache/SharedCacheUtil.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/sharedcache/SharedCacheStructureUtil.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/sharedcache/SharedCacheUtil.java"
      }
    },
    "17d1202c35a1992eab66ea05dfd2baf219a17aec": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2179. [YARN-1492] Initial cache manager structure and context. (Chris Trezzo via kasha)\n",
      "commitDate": "30/09/14 7:01 PM",
      "commitName": "17d1202c35a1992eab66ea05dfd2baf219a17aec",
      "commitAuthor": "Karthik Kambatla",
      "diff": "@@ -0,0 +1,24 @@\n+  public static String getCacheEntryPath(int cacheDepth, String cacheRoot,\n+      String checksum) {\n+\n+    if (cacheDepth \u003c\u003d 0) {\n+      throw new IllegalArgumentException(\n+          \"The cache depth must be greater than 0. Passed value: \" + cacheDepth);\n+    }\n+    if (checksum.length() \u003c cacheDepth) {\n+      throw new IllegalArgumentException(\"The checksum passed was too short: \"\n+          + checksum);\n+    }\n+\n+    // Build the cache entry path to the specified depth. For example, if the\n+    // depth is 3 and the checksum is 3c4f, the path would be:\n+    // SHARED_CACHE_ROOT/3/c/4/3c4f\n+    StringBuilder sb \u003d new StringBuilder(cacheRoot);\n+    for (int i \u003d 0; i \u003c cacheDepth; i++) {\n+      sb.append(Path.SEPARATOR_CHAR);\n+      sb.append(checksum.charAt(i));\n+    }\n+    sb.append(Path.SEPARATOR_CHAR).append(checksum);\n+\n+    return sb.toString();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static String getCacheEntryPath(int cacheDepth, String cacheRoot,\n      String checksum) {\n\n    if (cacheDepth \u003c\u003d 0) {\n      throw new IllegalArgumentException(\n          \"The cache depth must be greater than 0. Passed value: \" + cacheDepth);\n    }\n    if (checksum.length() \u003c cacheDepth) {\n      throw new IllegalArgumentException(\"The checksum passed was too short: \"\n          + checksum);\n    }\n\n    // Build the cache entry path to the specified depth. For example, if the\n    // depth is 3 and the checksum is 3c4f, the path would be:\n    // SHARED_CACHE_ROOT/3/c/4/3c4f\n    StringBuilder sb \u003d new StringBuilder(cacheRoot);\n    for (int i \u003d 0; i \u003c cacheDepth; i++) {\n      sb.append(Path.SEPARATOR_CHAR);\n      sb.append(checksum.charAt(i));\n    }\n    sb.append(Path.SEPARATOR_CHAR).append(checksum);\n\n    return sb.toString();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/sharedcache/SharedCacheStructureUtil.java"
    }
  }
}