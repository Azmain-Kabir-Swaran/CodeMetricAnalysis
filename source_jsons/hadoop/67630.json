{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DistCp.java",
  "functionName": "createAndSubmitJob",
  "functionId": "createAndSubmitJob",
  "sourceFilePath": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCp.java",
  "functionStartLine": 194,
  "functionEndLine": 220,
  "numCommitsSeen": 42,
  "timeTaken": 3734,
  "changeHistory": [
    "26172a94d6431e70d7fe15d66be9a7e195f79f60",
    "8650cc84f20e7d8c32dcdcd91c94372d476e2276",
    "0bc6d37f3c1e7c2a8682dffa95461a884bd6ba17",
    "412c4c9a342b73bf1c1a7f43ea91245cbf94d02d",
    "959a28dd1216dfac78d05b438828e8503108d963",
    "0bc15cb6e60dc60885234e01dec1c7cb4557a926",
    "ed70fa142cabdbc1065e4dbbc95e99c8850c4751",
    "5af693fde26755b6f175bd65f93cf4a80de0d1e0",
    "723ef662a9aba08f6d164d3275337f233372f901",
    "a9808de0d9a73a99c10a3e4290ec20778fed4f24",
    "d06948002fb0cabf72cc0d46bf2fa67d45370f67"
  ],
  "changeHistoryShort": {
    "26172a94d6431e70d7fe15d66be9a7e195f79f60": "Ybodychange",
    "8650cc84f20e7d8c32dcdcd91c94372d476e2276": "Ybodychange",
    "0bc6d37f3c1e7c2a8682dffa95461a884bd6ba17": "Ybodychange",
    "412c4c9a342b73bf1c1a7f43ea91245cbf94d02d": "Ybodychange",
    "959a28dd1216dfac78d05b438828e8503108d963": "Ybodychange",
    "0bc15cb6e60dc60885234e01dec1c7cb4557a926": "Ybodychange",
    "ed70fa142cabdbc1065e4dbbc95e99c8850c4751": "Ybodychange",
    "5af693fde26755b6f175bd65f93cf4a80de0d1e0": "Ymultichange(Yrename,Ybodychange)",
    "723ef662a9aba08f6d164d3275337f233372f901": "Ybodychange",
    "a9808de0d9a73a99c10a3e4290ec20778fed4f24": "Ybodychange",
    "d06948002fb0cabf72cc0d46bf2fa67d45370f67": "Yintroduced"
  },
  "changeHistoryDetails": {
    "26172a94d6431e70d7fe15d66be9a7e195f79f60": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14267. Make DistCpOptions immutable. Contributed by Mingliang Liu\n",
      "commitDate": "31/03/17 8:04 PM",
      "commitName": "26172a94d6431e70d7fe15d66be9a7e195f79f60",
      "commitAuthor": "Mingliang Liu",
      "commitDateOld": "30/03/17 5:38 PM",
      "commitNameOld": "bf3fb585aaf2b179836e139c041fc87920a3c886",
      "commitAuthorOld": "Yongjun Zhang",
      "daysBetweenCommits": 1.1,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n   public Job createAndSubmitJob() throws Exception {\n-    assert inputOptions !\u003d null;\n+    assert context !\u003d null;\n     assert getConf() !\u003d null;\n     Job job \u003d null;\n     try {\n       synchronized(this) {\n         //Don\u0027t cleanup while we are setting up.\n         metaFolder \u003d createMetaFolderPath();\n         jobFS \u003d metaFolder.getFileSystem(getConf());\n         job \u003d createJob();\n       }\n       prepareFileListing(job);\n       job.submit();\n       submitted \u003d true;\n     } finally {\n       if (!submitted) {\n         cleanup();\n       }\n     }\n \n     String jobID \u003d job.getJobID().toString();\n     job.getConfiguration().set(DistCpConstants.CONF_LABEL_DISTCP_JOB_ID,\n         jobID);\n     LOG.info(\"DistCp job-id: \" + jobID);\n \n     return job;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Job createAndSubmitJob() throws Exception {\n    assert context !\u003d null;\n    assert getConf() !\u003d null;\n    Job job \u003d null;\n    try {\n      synchronized(this) {\n        //Don\u0027t cleanup while we are setting up.\n        metaFolder \u003d createMetaFolderPath();\n        jobFS \u003d metaFolder.getFileSystem(getConf());\n        job \u003d createJob();\n      }\n      prepareFileListing(job);\n      job.submit();\n      submitted \u003d true;\n    } finally {\n      if (!submitted) {\n        cleanup();\n      }\n    }\n\n    String jobID \u003d job.getJobID().toString();\n    job.getConfiguration().set(DistCpConstants.CONF_LABEL_DISTCP_JOB_ID,\n        jobID);\n    LOG.info(\"DistCp job-id: \" + jobID);\n\n    return job;\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCp.java",
      "extendedDetails": {}
    },
    "8650cc84f20e7d8c32dcdcd91c94372d476e2276": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9820. Improve distcp to support efficient restore to an earlier snapshot. Contributed by Yongjun Zhang.\n",
      "commitDate": "19/10/16 5:37 PM",
      "commitName": "8650cc84f20e7d8c32dcdcd91c94372d476e2276",
      "commitAuthor": "Yongjun Zhang",
      "commitDateOld": "17/10/16 10:47 PM",
      "commitNameOld": "0bc6d37f3c1e7c2a8682dffa95461a884bd6ba17",
      "commitAuthorOld": "Yongjun Zhang",
      "daysBetweenCommits": 1.78,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,27 @@\n   public Job createAndSubmitJob() throws Exception {\n     assert inputOptions !\u003d null;\n     assert getConf() !\u003d null;\n     Job job \u003d null;\n     try {\n       synchronized(this) {\n         //Don\u0027t cleanup while we are setting up.\n         metaFolder \u003d createMetaFolderPath();\n         jobFS \u003d metaFolder.getFileSystem(getConf());\n         job \u003d createJob();\n       }\n-      if (inputOptions.shouldUseDiff()) {\n-        DistCpSync distCpSync \u003d new DistCpSync(inputOptions, getConf());\n-        if (distCpSync.sync()) {\n-          createInputFileListingWithDiff(job, distCpSync);\n-        } else {\n-          throw new Exception(\"DistCp sync failed, input options: \"\n-              + inputOptions);\n-        }\n-      }\n-\n-      // Fallback to default DistCp if without \"diff\" option or sync failed.\n-      if (!inputOptions.shouldUseDiff()) {\n-        createInputFileListing(job);\n-      }\n-\n+      prepareFileListing(job);\n       job.submit();\n       submitted \u003d true;\n     } finally {\n       if (!submitted) {\n         cleanup();\n       }\n     }\n \n     String jobID \u003d job.getJobID().toString();\n-    job.getConfiguration().set(DistCpConstants.CONF_LABEL_DISTCP_JOB_ID, jobID);\n+    job.getConfiguration().set(DistCpConstants.CONF_LABEL_DISTCP_JOB_ID,\n+        jobID);\n     LOG.info(\"DistCp job-id: \" + jobID);\n \n     return job;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Job createAndSubmitJob() throws Exception {\n    assert inputOptions !\u003d null;\n    assert getConf() !\u003d null;\n    Job job \u003d null;\n    try {\n      synchronized(this) {\n        //Don\u0027t cleanup while we are setting up.\n        metaFolder \u003d createMetaFolderPath();\n        jobFS \u003d metaFolder.getFileSystem(getConf());\n        job \u003d createJob();\n      }\n      prepareFileListing(job);\n      job.submit();\n      submitted \u003d true;\n    } finally {\n      if (!submitted) {\n        cleanup();\n      }\n    }\n\n    String jobID \u003d job.getJobID().toString();\n    job.getConfiguration().set(DistCpConstants.CONF_LABEL_DISTCP_JOB_ID,\n        jobID);\n    LOG.info(\"DistCp job-id: \" + jobID);\n\n    return job;\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCp.java",
      "extendedDetails": {}
    },
    "0bc6d37f3c1e7c2a8682dffa95461a884bd6ba17": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"HDFS-9820. Improve distcp to support efficient restore to an earlier snapshot. Contributed by Yongjun Zhang.\"\n\nThis reverts commit 412c4c9a342b73bf1c1a7f43ea91245cbf94d02d.\n",
      "commitDate": "17/10/16 10:47 PM",
      "commitName": "0bc6d37f3c1e7c2a8682dffa95461a884bd6ba17",
      "commitAuthor": "Yongjun Zhang",
      "commitDateOld": "17/10/16 11:04 AM",
      "commitNameOld": "412c4c9a342b73bf1c1a7f43ea91245cbf94d02d",
      "commitAuthorOld": "Yongjun Zhang",
      "daysBetweenCommits": 0.49,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,40 @@\n   public Job createAndSubmitJob() throws Exception {\n     assert inputOptions !\u003d null;\n     assert getConf() !\u003d null;\n     Job job \u003d null;\n     try {\n       synchronized(this) {\n         //Don\u0027t cleanup while we are setting up.\n         metaFolder \u003d createMetaFolderPath();\n         jobFS \u003d metaFolder.getFileSystem(getConf());\n         job \u003d createJob();\n       }\n-      prepareFileListing(job);\n+      if (inputOptions.shouldUseDiff()) {\n+        DistCpSync distCpSync \u003d new DistCpSync(inputOptions, getConf());\n+        if (distCpSync.sync()) {\n+          createInputFileListingWithDiff(job, distCpSync);\n+        } else {\n+          throw new Exception(\"DistCp sync failed, input options: \"\n+              + inputOptions);\n+        }\n+      }\n+\n+      // Fallback to default DistCp if without \"diff\" option or sync failed.\n+      if (!inputOptions.shouldUseDiff()) {\n+        createInputFileListing(job);\n+      }\n+\n       job.submit();\n       submitted \u003d true;\n     } finally {\n       if (!submitted) {\n         cleanup();\n       }\n     }\n \n     String jobID \u003d job.getJobID().toString();\n-    job.getConfiguration().set(DistCpConstants.CONF_LABEL_DISTCP_JOB_ID,\n-        jobID);\n+    job.getConfiguration().set(DistCpConstants.CONF_LABEL_DISTCP_JOB_ID, jobID);\n     LOG.info(\"DistCp job-id: \" + jobID);\n \n     return job;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Job createAndSubmitJob() throws Exception {\n    assert inputOptions !\u003d null;\n    assert getConf() !\u003d null;\n    Job job \u003d null;\n    try {\n      synchronized(this) {\n        //Don\u0027t cleanup while we are setting up.\n        metaFolder \u003d createMetaFolderPath();\n        jobFS \u003d metaFolder.getFileSystem(getConf());\n        job \u003d createJob();\n      }\n      if (inputOptions.shouldUseDiff()) {\n        DistCpSync distCpSync \u003d new DistCpSync(inputOptions, getConf());\n        if (distCpSync.sync()) {\n          createInputFileListingWithDiff(job, distCpSync);\n        } else {\n          throw new Exception(\"DistCp sync failed, input options: \"\n              + inputOptions);\n        }\n      }\n\n      // Fallback to default DistCp if without \"diff\" option or sync failed.\n      if (!inputOptions.shouldUseDiff()) {\n        createInputFileListing(job);\n      }\n\n      job.submit();\n      submitted \u003d true;\n    } finally {\n      if (!submitted) {\n        cleanup();\n      }\n    }\n\n    String jobID \u003d job.getJobID().toString();\n    job.getConfiguration().set(DistCpConstants.CONF_LABEL_DISTCP_JOB_ID, jobID);\n    LOG.info(\"DistCp job-id: \" + jobID);\n\n    return job;\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCp.java",
      "extendedDetails": {}
    },
    "412c4c9a342b73bf1c1a7f43ea91245cbf94d02d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9820. Improve distcp to support efficient restore to an earlier snapshot. Contributed by Yongjun Zhang.\n",
      "commitDate": "17/10/16 11:04 AM",
      "commitName": "412c4c9a342b73bf1c1a7f43ea91245cbf94d02d",
      "commitAuthor": "Yongjun Zhang",
      "commitDateOld": "12/09/16 8:26 AM",
      "commitNameOld": "9faccd104672dfef123735ca8ada178fc3a6196f",
      "commitAuthorOld": "Ravi Prakash",
      "daysBetweenCommits": 35.11,
      "commitsBetweenForRepo": 236,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,27 @@\n   public Job createAndSubmitJob() throws Exception {\n     assert inputOptions !\u003d null;\n     assert getConf() !\u003d null;\n     Job job \u003d null;\n     try {\n       synchronized(this) {\n         //Don\u0027t cleanup while we are setting up.\n         metaFolder \u003d createMetaFolderPath();\n         jobFS \u003d metaFolder.getFileSystem(getConf());\n         job \u003d createJob();\n       }\n-      if (inputOptions.shouldUseDiff()) {\n-        DistCpSync distCpSync \u003d new DistCpSync(inputOptions, getConf());\n-        if (distCpSync.sync()) {\n-          createInputFileListingWithDiff(job, distCpSync);\n-        } else {\n-          throw new Exception(\"DistCp sync failed, input options: \"\n-              + inputOptions);\n-        }\n-      }\n-\n-      // Fallback to default DistCp if without \"diff\" option or sync failed.\n-      if (!inputOptions.shouldUseDiff()) {\n-        createInputFileListing(job);\n-      }\n-\n+      prepareFileListing(job);\n       job.submit();\n       submitted \u003d true;\n     } finally {\n       if (!submitted) {\n         cleanup();\n       }\n     }\n \n     String jobID \u003d job.getJobID().toString();\n-    job.getConfiguration().set(DistCpConstants.CONF_LABEL_DISTCP_JOB_ID, jobID);\n+    job.getConfiguration().set(DistCpConstants.CONF_LABEL_DISTCP_JOB_ID,\n+        jobID);\n     LOG.info(\"DistCp job-id: \" + jobID);\n \n     return job;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Job createAndSubmitJob() throws Exception {\n    assert inputOptions !\u003d null;\n    assert getConf() !\u003d null;\n    Job job \u003d null;\n    try {\n      synchronized(this) {\n        //Don\u0027t cleanup while we are setting up.\n        metaFolder \u003d createMetaFolderPath();\n        jobFS \u003d metaFolder.getFileSystem(getConf());\n        job \u003d createJob();\n      }\n      prepareFileListing(job);\n      job.submit();\n      submitted \u003d true;\n    } finally {\n      if (!submitted) {\n        cleanup();\n      }\n    }\n\n    String jobID \u003d job.getJobID().toString();\n    job.getConfiguration().set(DistCpConstants.CONF_LABEL_DISTCP_JOB_ID,\n        jobID);\n    LOG.info(\"DistCp job-id: \" + jobID);\n\n    return job;\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCp.java",
      "extendedDetails": {}
    },
    "959a28dd1216dfac78d05b438828e8503108d963": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10313. Distcp need to enforce the order of snapshot names passed to -diff. (Lin Yiqun via Yongjun Zhang)\n",
      "commitDate": "26/04/16 4:08 PM",
      "commitName": "959a28dd1216dfac78d05b438828e8503108d963",
      "commitAuthor": "Yongjun Zhang",
      "commitDateOld": "27/03/16 11:32 PM",
      "commitNameOld": "18c7e582839ea0b550463569b18b5827d23f8849",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 29.69,
      "commitsBetweenForRepo": 194,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,39 +1,40 @@\n   public Job createAndSubmitJob() throws Exception {\n     assert inputOptions !\u003d null;\n     assert getConf() !\u003d null;\n     Job job \u003d null;\n     try {\n       synchronized(this) {\n         //Don\u0027t cleanup while we are setting up.\n         metaFolder \u003d createMetaFolderPath();\n         jobFS \u003d metaFolder.getFileSystem(getConf());\n         job \u003d createJob();\n       }\n       if (inputOptions.shouldUseDiff()) {\n         DistCpSync distCpSync \u003d new DistCpSync(inputOptions, getConf());\n         if (distCpSync.sync()) {\n           createInputFileListingWithDiff(job, distCpSync);\n         } else {\n-          inputOptions.disableUsingDiff();\n+          throw new Exception(\"DistCp sync failed, input options: \"\n+              + inputOptions);\n         }\n       }\n \n       // Fallback to default DistCp if without \"diff\" option or sync failed.\n       if (!inputOptions.shouldUseDiff()) {\n         createInputFileListing(job);\n       }\n \n       job.submit();\n       submitted \u003d true;\n     } finally {\n       if (!submitted) {\n         cleanup();\n       }\n     }\n \n     String jobID \u003d job.getJobID().toString();\n     job.getConfiguration().set(DistCpConstants.CONF_LABEL_DISTCP_JOB_ID, jobID);\n     LOG.info(\"DistCp job-id: \" + jobID);\n \n     return job;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Job createAndSubmitJob() throws Exception {\n    assert inputOptions !\u003d null;\n    assert getConf() !\u003d null;\n    Job job \u003d null;\n    try {\n      synchronized(this) {\n        //Don\u0027t cleanup while we are setting up.\n        metaFolder \u003d createMetaFolderPath();\n        jobFS \u003d metaFolder.getFileSystem(getConf());\n        job \u003d createJob();\n      }\n      if (inputOptions.shouldUseDiff()) {\n        DistCpSync distCpSync \u003d new DistCpSync(inputOptions, getConf());\n        if (distCpSync.sync()) {\n          createInputFileListingWithDiff(job, distCpSync);\n        } else {\n          throw new Exception(\"DistCp sync failed, input options: \"\n              + inputOptions);\n        }\n      }\n\n      // Fallback to default DistCp if without \"diff\" option or sync failed.\n      if (!inputOptions.shouldUseDiff()) {\n        createInputFileListing(job);\n      }\n\n      job.submit();\n      submitted \u003d true;\n    } finally {\n      if (!submitted) {\n        cleanup();\n      }\n    }\n\n    String jobID \u003d job.getJobID().toString();\n    job.getConfiguration().set(DistCpConstants.CONF_LABEL_DISTCP_JOB_ID, jobID);\n    LOG.info(\"DistCp job-id: \" + jobID);\n\n    return job;\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCp.java",
      "extendedDetails": {}
    },
    "0bc15cb6e60dc60885234e01dec1c7cb4557a926": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8828. Utilize Snapshot diff report to build diff copy list in distcp. (Yufei Gu via Yongjun Zhang)\n",
      "commitDate": "20/08/15 8:02 AM",
      "commitName": "0bc15cb6e60dc60885234e01dec1c7cb4557a926",
      "commitAuthor": "Yongjun Zhang",
      "commitDateOld": "30/06/15 4:49 PM",
      "commitNameOld": "aaafa0b2ee64f6cfb7fdc717500e1c483b9df8cc",
      "commitAuthorOld": "Robert Kanter",
      "daysBetweenCommits": 50.63,
      "commitsBetweenForRepo": 284,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,39 @@\n   public Job createAndSubmitJob() throws Exception {\n     assert inputOptions !\u003d null;\n     assert getConf() !\u003d null;\n     Job job \u003d null;\n     try {\n       synchronized(this) {\n         //Don\u0027t cleanup while we are setting up.\n         metaFolder \u003d createMetaFolderPath();\n         jobFS \u003d metaFolder.getFileSystem(getConf());\n         job \u003d createJob();\n       }\n       if (inputOptions.shouldUseDiff()) {\n-        if (!DistCpSync.sync(inputOptions, getConf())) {\n+        DistCpSync distCpSync \u003d new DistCpSync(inputOptions, getConf());\n+        if (distCpSync.sync()) {\n+          createInputFileListingWithDiff(job, distCpSync);\n+        } else {\n           inputOptions.disableUsingDiff();\n         }\n       }\n-      createInputFileListing(job);\n+\n+      // Fallback to default DistCp if without \"diff\" option or sync failed.\n+      if (!inputOptions.shouldUseDiff()) {\n+        createInputFileListing(job);\n+      }\n \n       job.submit();\n       submitted \u003d true;\n     } finally {\n       if (!submitted) {\n         cleanup();\n       }\n     }\n \n     String jobID \u003d job.getJobID().toString();\n     job.getConfiguration().set(DistCpConstants.CONF_LABEL_DISTCP_JOB_ID, jobID);\n     LOG.info(\"DistCp job-id: \" + jobID);\n \n     return job;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Job createAndSubmitJob() throws Exception {\n    assert inputOptions !\u003d null;\n    assert getConf() !\u003d null;\n    Job job \u003d null;\n    try {\n      synchronized(this) {\n        //Don\u0027t cleanup while we are setting up.\n        metaFolder \u003d createMetaFolderPath();\n        jobFS \u003d metaFolder.getFileSystem(getConf());\n        job \u003d createJob();\n      }\n      if (inputOptions.shouldUseDiff()) {\n        DistCpSync distCpSync \u003d new DistCpSync(inputOptions, getConf());\n        if (distCpSync.sync()) {\n          createInputFileListingWithDiff(job, distCpSync);\n        } else {\n          inputOptions.disableUsingDiff();\n        }\n      }\n\n      // Fallback to default DistCp if without \"diff\" option or sync failed.\n      if (!inputOptions.shouldUseDiff()) {\n        createInputFileListing(job);\n      }\n\n      job.submit();\n      submitted \u003d true;\n    } finally {\n      if (!submitted) {\n        cleanup();\n      }\n    }\n\n    String jobID \u003d job.getJobID().toString();\n    job.getConfiguration().set(DistCpConstants.CONF_LABEL_DISTCP_JOB_ID, jobID);\n    LOG.info(\"DistCp job-id: \" + jobID);\n\n    return job;\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCp.java",
      "extendedDetails": {}
    },
    "ed70fa142cabdbc1065e4dbbc95e99c8850c4751": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7535. Utilize Snapshot diff report for distcp. Contributed by Jing Zhao.\n",
      "commitDate": "04/03/15 10:30 AM",
      "commitName": "ed70fa142cabdbc1065e4dbbc95e99c8850c4751",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "03/03/15 4:28 PM",
      "commitNameOld": "5af693fde26755b6f175bd65f93cf4a80de0d1e0",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 0.75,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,32 @@\n   public Job createAndSubmitJob() throws Exception {\n     assert inputOptions !\u003d null;\n     assert getConf() !\u003d null;\n     Job job \u003d null;\n     try {\n       synchronized(this) {\n         //Don\u0027t cleanup while we are setting up.\n         metaFolder \u003d createMetaFolderPath();\n         jobFS \u003d metaFolder.getFileSystem(getConf());\n-\n         job \u003d createJob();\n       }\n+      if (inputOptions.shouldUseDiff()) {\n+        if (!DistCpSync.sync(inputOptions, getConf())) {\n+          inputOptions.disableUsingDiff();\n+        }\n+      }\n       createInputFileListing(job);\n \n       job.submit();\n       submitted \u003d true;\n     } finally {\n       if (!submitted) {\n         cleanup();\n       }\n     }\n \n     String jobID \u003d job.getJobID().toString();\n     job.getConfiguration().set(DistCpConstants.CONF_LABEL_DISTCP_JOB_ID, jobID);\n     LOG.info(\"DistCp job-id: \" + jobID);\n \n     return job;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Job createAndSubmitJob() throws Exception {\n    assert inputOptions !\u003d null;\n    assert getConf() !\u003d null;\n    Job job \u003d null;\n    try {\n      synchronized(this) {\n        //Don\u0027t cleanup while we are setting up.\n        metaFolder \u003d createMetaFolderPath();\n        jobFS \u003d metaFolder.getFileSystem(getConf());\n        job \u003d createJob();\n      }\n      if (inputOptions.shouldUseDiff()) {\n        if (!DistCpSync.sync(inputOptions, getConf())) {\n          inputOptions.disableUsingDiff();\n        }\n      }\n      createInputFileListing(job);\n\n      job.submit();\n      submitted \u003d true;\n    } finally {\n      if (!submitted) {\n        cleanup();\n      }\n    }\n\n    String jobID \u003d job.getJobID().toString();\n    job.getConfiguration().set(DistCpConstants.CONF_LABEL_DISTCP_JOB_ID, jobID);\n    LOG.info(\"DistCp job-id: \" + jobID);\n\n    return job;\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCp.java",
      "extendedDetails": {}
    },
    "5af693fde26755b6f175bd65f93cf4a80de0d1e0": {
      "type": "Ymultichange(Yrename,Ybodychange)",
      "commitMessage": "MAPREDUCE-6248. Exposed the internal MapReduce job\u0027s information as a public API in DistCp. Contributed by Jing Zhao.\n",
      "commitDate": "03/03/15 4:28 PM",
      "commitName": "5af693fde26755b6f175bd65f93cf4a80de0d1e0",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "MAPREDUCE-6248. Exposed the internal MapReduce job\u0027s information as a public API in DistCp. Contributed by Jing Zhao.\n",
          "commitDate": "03/03/15 4:28 PM",
          "commitName": "5af693fde26755b6f175bd65f93cf4a80de0d1e0",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "03/03/15 1:06 AM",
          "commitNameOld": "9ae7f9eb7baeb244e1b95aabc93ad8124870b9a9",
          "commitAuthorOld": "Tsuyoshi Ozawa",
          "daysBetweenCommits": 0.64,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,33 +1,28 @@\n-  public Job execute() throws Exception {\n+  public Job createAndSubmitJob() throws Exception {\n     assert inputOptions !\u003d null;\n     assert getConf() !\u003d null;\n-\n     Job job \u003d null;\n     try {\n       synchronized(this) {\n         //Don\u0027t cleanup while we are setting up.\n         metaFolder \u003d createMetaFolderPath();\n         jobFS \u003d metaFolder.getFileSystem(getConf());\n \n         job \u003d createJob();\n       }\n       createInputFileListing(job);\n \n       job.submit();\n       submitted \u003d true;\n     } finally {\n       if (!submitted) {\n         cleanup();\n       }\n     }\n \n     String jobID \u003d job.getJobID().toString();\n     job.getConfiguration().set(DistCpConstants.CONF_LABEL_DISTCP_JOB_ID, jobID);\n-    \n     LOG.info(\"DistCp job-id: \" + jobID);\n-    if (inputOptions.shouldBlock() \u0026\u0026 !job.waitForCompletion(true)) {\n-      throw new IOException(\"DistCp failure: Job \" + jobID + \" has failed: \"\n-          + job.getStatus().getFailureInfo());\n-    }\n+\n     return job;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Job createAndSubmitJob() throws Exception {\n    assert inputOptions !\u003d null;\n    assert getConf() !\u003d null;\n    Job job \u003d null;\n    try {\n      synchronized(this) {\n        //Don\u0027t cleanup while we are setting up.\n        metaFolder \u003d createMetaFolderPath();\n        jobFS \u003d metaFolder.getFileSystem(getConf());\n\n        job \u003d createJob();\n      }\n      createInputFileListing(job);\n\n      job.submit();\n      submitted \u003d true;\n    } finally {\n      if (!submitted) {\n        cleanup();\n      }\n    }\n\n    String jobID \u003d job.getJobID().toString();\n    job.getConfiguration().set(DistCpConstants.CONF_LABEL_DISTCP_JOB_ID, jobID);\n    LOG.info(\"DistCp job-id: \" + jobID);\n\n    return job;\n  }",
          "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCp.java",
          "extendedDetails": {
            "oldValue": "execute",
            "newValue": "createAndSubmitJob"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-6248. Exposed the internal MapReduce job\u0027s information as a public API in DistCp. Contributed by Jing Zhao.\n",
          "commitDate": "03/03/15 4:28 PM",
          "commitName": "5af693fde26755b6f175bd65f93cf4a80de0d1e0",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "03/03/15 1:06 AM",
          "commitNameOld": "9ae7f9eb7baeb244e1b95aabc93ad8124870b9a9",
          "commitAuthorOld": "Tsuyoshi Ozawa",
          "daysBetweenCommits": 0.64,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,33 +1,28 @@\n-  public Job execute() throws Exception {\n+  public Job createAndSubmitJob() throws Exception {\n     assert inputOptions !\u003d null;\n     assert getConf() !\u003d null;\n-\n     Job job \u003d null;\n     try {\n       synchronized(this) {\n         //Don\u0027t cleanup while we are setting up.\n         metaFolder \u003d createMetaFolderPath();\n         jobFS \u003d metaFolder.getFileSystem(getConf());\n \n         job \u003d createJob();\n       }\n       createInputFileListing(job);\n \n       job.submit();\n       submitted \u003d true;\n     } finally {\n       if (!submitted) {\n         cleanup();\n       }\n     }\n \n     String jobID \u003d job.getJobID().toString();\n     job.getConfiguration().set(DistCpConstants.CONF_LABEL_DISTCP_JOB_ID, jobID);\n-    \n     LOG.info(\"DistCp job-id: \" + jobID);\n-    if (inputOptions.shouldBlock() \u0026\u0026 !job.waitForCompletion(true)) {\n-      throw new IOException(\"DistCp failure: Job \" + jobID + \" has failed: \"\n-          + job.getStatus().getFailureInfo());\n-    }\n+\n     return job;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Job createAndSubmitJob() throws Exception {\n    assert inputOptions !\u003d null;\n    assert getConf() !\u003d null;\n    Job job \u003d null;\n    try {\n      synchronized(this) {\n        //Don\u0027t cleanup while we are setting up.\n        metaFolder \u003d createMetaFolderPath();\n        jobFS \u003d metaFolder.getFileSystem(getConf());\n\n        job \u003d createJob();\n      }\n      createInputFileListing(job);\n\n      job.submit();\n      submitted \u003d true;\n    } finally {\n      if (!submitted) {\n        cleanup();\n      }\n    }\n\n    String jobID \u003d job.getJobID().toString();\n    job.getConfiguration().set(DistCpConstants.CONF_LABEL_DISTCP_JOB_ID, jobID);\n    LOG.info(\"DistCp job-id: \" + jobID);\n\n    return job;\n  }",
          "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCp.java",
          "extendedDetails": {}
        }
      ]
    },
    "723ef662a9aba08f6d164d3275337f233372f901": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5315.  DistCp reports success even on failure. (mithun and jlowe via daryn)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1491914 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/06/13 12:22 PM",
      "commitName": "723ef662a9aba08f6d164d3275337f233372f901",
      "commitAuthor": "Daryn Sharp",
      "commitDateOld": "22/03/13 3:09 AM",
      "commitNameOld": "6f92ad9868b008eb523ae3279e05004de31a08ce",
      "commitAuthorOld": "Amareshwari Sri Ramadasu",
      "daysBetweenCommits": 81.38,
      "commitsBetweenForRepo": 500,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,33 @@\n   public Job execute() throws Exception {\n     assert inputOptions !\u003d null;\n     assert getConf() !\u003d null;\n \n     Job job \u003d null;\n     try {\n       synchronized(this) {\n         //Don\u0027t cleanup while we are setting up.\n         metaFolder \u003d createMetaFolderPath();\n         jobFS \u003d metaFolder.getFileSystem(getConf());\n \n         job \u003d createJob();\n       }\n       createInputFileListing(job);\n \n       job.submit();\n       submitted \u003d true;\n     } finally {\n       if (!submitted) {\n         cleanup();\n       }\n     }\n \n     String jobID \u003d job.getJobID().toString();\n     job.getConfiguration().set(DistCpConstants.CONF_LABEL_DISTCP_JOB_ID, jobID);\n     \n     LOG.info(\"DistCp job-id: \" + jobID);\n-    if (inputOptions.shouldBlock()) {\n-      job.waitForCompletion(true);\n+    if (inputOptions.shouldBlock() \u0026\u0026 !job.waitForCompletion(true)) {\n+      throw new IOException(\"DistCp failure: Job \" + jobID + \" has failed: \"\n+          + job.getStatus().getFailureInfo());\n     }\n     return job;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Job execute() throws Exception {\n    assert inputOptions !\u003d null;\n    assert getConf() !\u003d null;\n\n    Job job \u003d null;\n    try {\n      synchronized(this) {\n        //Don\u0027t cleanup while we are setting up.\n        metaFolder \u003d createMetaFolderPath();\n        jobFS \u003d metaFolder.getFileSystem(getConf());\n\n        job \u003d createJob();\n      }\n      createInputFileListing(job);\n\n      job.submit();\n      submitted \u003d true;\n    } finally {\n      if (!submitted) {\n        cleanup();\n      }\n    }\n\n    String jobID \u003d job.getJobID().toString();\n    job.getConfiguration().set(DistCpConstants.CONF_LABEL_DISTCP_JOB_ID, jobID);\n    \n    LOG.info(\"DistCp job-id: \" + jobID);\n    if (inputOptions.shouldBlock() \u0026\u0026 !job.waitForCompletion(true)) {\n      throw new IOException(\"DistCp failure: Job \" + jobID + \" has failed: \"\n          + job.getStatus().getFailureInfo());\n    }\n    return job;\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCp.java",
      "extendedDetails": {}
    },
    "a9808de0d9a73a99c10a3e4290ec20778fed4f24": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-8341. Fix or filter findbugs issues in hadoop-tools (bobby)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1335505 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/05/12 6:20 AM",
      "commitName": "a9808de0d9a73a99c10a3e4290ec20778fed4f24",
      "commitAuthor": "Robert Joseph Evans",
      "commitDateOld": "03/05/12 8:20 PM",
      "commitNameOld": "0fca4fbaf35ad6b48c57125a9389aaf45a2c88a5",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 4.42,
      "commitsBetweenForRepo": 20,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,32 @@\n   public Job execute() throws Exception {\n     assert inputOptions !\u003d null;\n     assert getConf() !\u003d null;\n \n     Job job \u003d null;\n     try {\n-      metaFolder \u003d createMetaFolderPath();\n-      jobFS \u003d metaFolder.getFileSystem(getConf());\n+      synchronized(this) {\n+        //Don\u0027t cleanup while we are setting up.\n+        metaFolder \u003d createMetaFolderPath();\n+        jobFS \u003d metaFolder.getFileSystem(getConf());\n \n-      job \u003d createJob();\n+        job \u003d createJob();\n+      }\n       createInputFileListing(job);\n \n       job.submit();\n       submitted \u003d true;\n     } finally {\n       if (!submitted) {\n         cleanup();\n       }\n     }\n \n     String jobID \u003d job.getJobID().toString();\n     job.getConfiguration().set(DistCpConstants.CONF_LABEL_DISTCP_JOB_ID, jobID);\n     \n     LOG.info(\"DistCp job-id: \" + jobID);\n     if (inputOptions.shouldBlock()) {\n       job.waitForCompletion(true);\n     }\n     return job;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Job execute() throws Exception {\n    assert inputOptions !\u003d null;\n    assert getConf() !\u003d null;\n\n    Job job \u003d null;\n    try {\n      synchronized(this) {\n        //Don\u0027t cleanup while we are setting up.\n        metaFolder \u003d createMetaFolderPath();\n        jobFS \u003d metaFolder.getFileSystem(getConf());\n\n        job \u003d createJob();\n      }\n      createInputFileListing(job);\n\n      job.submit();\n      submitted \u003d true;\n    } finally {\n      if (!submitted) {\n        cleanup();\n      }\n    }\n\n    String jobID \u003d job.getJobID().toString();\n    job.getConfiguration().set(DistCpConstants.CONF_LABEL_DISTCP_JOB_ID, jobID);\n    \n    LOG.info(\"DistCp job-id: \" + jobID);\n    if (inputOptions.shouldBlock()) {\n      job.waitForCompletion(true);\n    }\n    return job;\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCp.java",
      "extendedDetails": {}
    },
    "d06948002fb0cabf72cc0d46bf2fa67d45370f67": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-2765. DistCp Rewrite. (Mithun Radhakrishnan via mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1236045 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/01/12 10:36 PM",
      "commitName": "d06948002fb0cabf72cc0d46bf2fa67d45370f67",
      "commitAuthor": "Mahadev Konar",
      "diff": "@@ -0,0 +1,29 @@\n+  public Job execute() throws Exception {\n+    assert inputOptions !\u003d null;\n+    assert getConf() !\u003d null;\n+\n+    Job job \u003d null;\n+    try {\n+      metaFolder \u003d createMetaFolderPath();\n+      jobFS \u003d metaFolder.getFileSystem(getConf());\n+\n+      job \u003d createJob();\n+      createInputFileListing(job);\n+\n+      job.submit();\n+      submitted \u003d true;\n+    } finally {\n+      if (!submitted) {\n+        cleanup();\n+      }\n+    }\n+\n+    String jobID \u003d job.getJobID().toString();\n+    job.getConfiguration().set(DistCpConstants.CONF_LABEL_DISTCP_JOB_ID, jobID);\n+    \n+    LOG.info(\"DistCp job-id: \" + jobID);\n+    if (inputOptions.shouldBlock()) {\n+      job.waitForCompletion(true);\n+    }\n+    return job;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Job execute() throws Exception {\n    assert inputOptions !\u003d null;\n    assert getConf() !\u003d null;\n\n    Job job \u003d null;\n    try {\n      metaFolder \u003d createMetaFolderPath();\n      jobFS \u003d metaFolder.getFileSystem(getConf());\n\n      job \u003d createJob();\n      createInputFileListing(job);\n\n      job.submit();\n      submitted \u003d true;\n    } finally {\n      if (!submitted) {\n        cleanup();\n      }\n    }\n\n    String jobID \u003d job.getJobID().toString();\n    job.getConfiguration().set(DistCpConstants.CONF_LABEL_DISTCP_JOB_ID, jobID);\n    \n    LOG.info(\"DistCp job-id: \" + jobID);\n    if (inputOptions.shouldBlock()) {\n      job.waitForCompletion(true);\n    }\n    return job;\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCp.java"
    }
  }
}