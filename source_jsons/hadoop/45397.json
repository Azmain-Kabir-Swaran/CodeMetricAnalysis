{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AppAdminClient.java",
  "functionName": "createAppAdminClient",
  "functionId": "createAppAdminClient___appType-String__conf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/api/AppAdminClient.java",
  "functionStartLine": 65,
  "functionEndLine": 93,
  "numCommitsSeen": 15,
  "timeTaken": 1927,
  "changeHistory": [
    "ff583d3fa3325029bc691ec22d817aee37e5e85d",
    "e307edcb472207a39d1cbe4be6f7fcddc7b4fd6d",
    "836e3c45e8232fc4c8c795c0f93d2f3d7353f392",
    "438c1d333ebc0a3071bb556532ed959a4bd1e6d6",
    "ba7ed7b66a48c61086ea837f39ff0f22ffe31eca"
  ],
  "changeHistoryShort": {
    "ff583d3fa3325029bc691ec22d817aee37e5e85d": "Yfilerename",
    "e307edcb472207a39d1cbe4be6f7fcddc7b4fd6d": "Ybodychange",
    "836e3c45e8232fc4c8c795c0f93d2f3d7353f392": "Ybodychange",
    "438c1d333ebc0a3071bb556532ed959a4bd1e6d6": "Ybodychange",
    "ba7ed7b66a48c61086ea837f39ff0f22ffe31eca": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ff583d3fa3325029bc691ec22d817aee37e5e85d": {
      "type": "Yfilerename",
      "commitMessage": "YARN-8349. Remove YARN registry entries when a service is killed by the RM. (Billie Rinaldi via wangda)\n\nChange-Id: Ia58db3637789a8921482f564aa9bdf99c45cc36c\n",
      "commitDate": "01/06/18 2:49 PM",
      "commitName": "ff583d3fa3325029bc691ec22d817aee37e5e85d",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "01/06/18 2:49 PM",
      "commitNameOld": "8956e5b8db3059e0872e49f59adc6affc76e2274",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static AppAdminClient createAppAdminClient(String appType,\n      Configuration conf) {\n    Map\u003cString, String\u003e clientClassMap \u003d\n        conf.getPropsWithPrefix(YARN_APP_ADMIN_CLIENT_PREFIX);\n    if (!clientClassMap.containsKey(DEFAULT_TYPE)) {\n      clientClassMap.put(DEFAULT_TYPE, DEFAULT_CLASS_NAME);\n    }\n    if (!clientClassMap.containsKey(UNIT_TEST_TYPE)) {\n      clientClassMap.put(UNIT_TEST_TYPE, UNIT_TEST_CLASS_NAME);\n    }\n    if (!clientClassMap.containsKey(appType)) {\n      throw new IllegalArgumentException(\"App admin client class name not \" +\n          \"specified for type \" + appType);\n    }\n    String clientClassName \u003d clientClassMap.get(appType);\n    Class\u003c? extends AppAdminClient\u003e clientClass;\n    try {\n      clientClass \u003d (Class\u003c? extends AppAdminClient\u003e) Class.forName(\n          clientClassName);\n    } catch (ClassNotFoundException e) {\n      throw new YarnRuntimeException(\"Invalid app admin client class\", e);\n    }\n\n    AppAdminClient appAdminClient \u003d ReflectionUtils.newInstance(clientClass,\n        conf);\n    appAdminClient.init(conf);\n    appAdminClient.start();\n    return appAdminClient;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/api/AppAdminClient.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/AppAdminClient.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/api/AppAdminClient.java"
      }
    },
    "e307edcb472207a39d1cbe4be6f7fcddc7b4fd6d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7540 and YARN-7605. Convert yarn app cli to call yarn api services and implement doAs for Api Service REST API. Contributed by Eric Yang and Jian He\n",
      "commitDate": "23/01/18 5:54 PM",
      "commitName": "e307edcb472207a39d1cbe4be6f7fcddc7b4fd6d",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "23/01/18 10:53 AM",
      "commitNameOld": "a72cdcc47a1b3a4fcadbc9e12bd1bae2bbf04d83",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 0.29,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,29 @@\n   public static AppAdminClient createAppAdminClient(String appType,\n       Configuration conf) {\n     Map\u003cString, String\u003e clientClassMap \u003d\n         conf.getPropsWithPrefix(YARN_APP_ADMIN_CLIENT_PREFIX);\n     if (!clientClassMap.containsKey(DEFAULT_TYPE)) {\n       clientClassMap.put(DEFAULT_TYPE, DEFAULT_CLASS_NAME);\n     }\n+    if (!clientClassMap.containsKey(UNIT_TEST_TYPE)) {\n+      clientClassMap.put(UNIT_TEST_TYPE, UNIT_TEST_CLASS_NAME);\n+    }\n     if (!clientClassMap.containsKey(appType)) {\n       throw new IllegalArgumentException(\"App admin client class name not \" +\n           \"specified for type \" + appType);\n     }\n     String clientClassName \u003d clientClassMap.get(appType);\n     Class\u003c? extends AppAdminClient\u003e clientClass;\n     try {\n       clientClass \u003d (Class\u003c? extends AppAdminClient\u003e) Class.forName(\n           clientClassName);\n     } catch (ClassNotFoundException e) {\n       throw new YarnRuntimeException(\"Invalid app admin client class\", e);\n     }\n \n     AppAdminClient appAdminClient \u003d ReflectionUtils.newInstance(clientClass,\n         conf);\n     appAdminClient.init(conf);\n     appAdminClient.start();\n     return appAdminClient;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static AppAdminClient createAppAdminClient(String appType,\n      Configuration conf) {\n    Map\u003cString, String\u003e clientClassMap \u003d\n        conf.getPropsWithPrefix(YARN_APP_ADMIN_CLIENT_PREFIX);\n    if (!clientClassMap.containsKey(DEFAULT_TYPE)) {\n      clientClassMap.put(DEFAULT_TYPE, DEFAULT_CLASS_NAME);\n    }\n    if (!clientClassMap.containsKey(UNIT_TEST_TYPE)) {\n      clientClassMap.put(UNIT_TEST_TYPE, UNIT_TEST_CLASS_NAME);\n    }\n    if (!clientClassMap.containsKey(appType)) {\n      throw new IllegalArgumentException(\"App admin client class name not \" +\n          \"specified for type \" + appType);\n    }\n    String clientClassName \u003d clientClassMap.get(appType);\n    Class\u003c? extends AppAdminClient\u003e clientClass;\n    try {\n      clientClass \u003d (Class\u003c? extends AppAdminClient\u003e) Class.forName(\n          clientClassName);\n    } catch (ClassNotFoundException e) {\n      throw new YarnRuntimeException(\"Invalid app admin client class\", e);\n    }\n\n    AppAdminClient appAdminClient \u003d ReflectionUtils.newInstance(clientClass,\n        conf);\n    appAdminClient.init(conf);\n    appAdminClient.start();\n    return appAdminClient;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/AppAdminClient.java",
      "extendedDetails": {}
    },
    "836e3c45e8232fc4c8c795c0f93d2f3d7353f392": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"YARN-7540.  Route YARN service CLI function through YARN Service API. (Contributed by Eric Yang)\"\n\nThis reverts commit 438c1d333ebc0a3071bb556532ed959a4bd1e6d6.\n",
      "commitDate": "05/01/18 6:25 PM",
      "commitName": "836e3c45e8232fc4c8c795c0f93d2f3d7353f392",
      "commitAuthor": "Jian He",
      "commitDateOld": "13/12/17 4:29 PM",
      "commitNameOld": "438c1d333ebc0a3071bb556532ed959a4bd1e6d6",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 23.08,
      "commitsBetweenForRepo": 127,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,26 @@\n   public static AppAdminClient createAppAdminClient(String appType,\n       Configuration conf) {\n     Map\u003cString, String\u003e clientClassMap \u003d\n         conf.getPropsWithPrefix(YARN_APP_ADMIN_CLIENT_PREFIX);\n     if (!clientClassMap.containsKey(DEFAULT_TYPE)) {\n       clientClassMap.put(DEFAULT_TYPE, DEFAULT_CLASS_NAME);\n     }\n-    if (!clientClassMap.containsKey(UNIT_TEST_TYPE)) {\n-      clientClassMap.put(UNIT_TEST_TYPE, UNIT_TEST_CLASS_NAME);\n-    }\n     if (!clientClassMap.containsKey(appType)) {\n       throw new IllegalArgumentException(\"App admin client class name not \" +\n           \"specified for type \" + appType);\n     }\n     String clientClassName \u003d clientClassMap.get(appType);\n     Class\u003c? extends AppAdminClient\u003e clientClass;\n     try {\n       clientClass \u003d (Class\u003c? extends AppAdminClient\u003e) Class.forName(\n           clientClassName);\n     } catch (ClassNotFoundException e) {\n       throw new YarnRuntimeException(\"Invalid app admin client class\", e);\n     }\n \n     AppAdminClient appAdminClient \u003d ReflectionUtils.newInstance(clientClass,\n         conf);\n     appAdminClient.init(conf);\n     appAdminClient.start();\n     return appAdminClient;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static AppAdminClient createAppAdminClient(String appType,\n      Configuration conf) {\n    Map\u003cString, String\u003e clientClassMap \u003d\n        conf.getPropsWithPrefix(YARN_APP_ADMIN_CLIENT_PREFIX);\n    if (!clientClassMap.containsKey(DEFAULT_TYPE)) {\n      clientClassMap.put(DEFAULT_TYPE, DEFAULT_CLASS_NAME);\n    }\n    if (!clientClassMap.containsKey(appType)) {\n      throw new IllegalArgumentException(\"App admin client class name not \" +\n          \"specified for type \" + appType);\n    }\n    String clientClassName \u003d clientClassMap.get(appType);\n    Class\u003c? extends AppAdminClient\u003e clientClass;\n    try {\n      clientClass \u003d (Class\u003c? extends AppAdminClient\u003e) Class.forName(\n          clientClassName);\n    } catch (ClassNotFoundException e) {\n      throw new YarnRuntimeException(\"Invalid app admin client class\", e);\n    }\n\n    AppAdminClient appAdminClient \u003d ReflectionUtils.newInstance(clientClass,\n        conf);\n    appAdminClient.init(conf);\n    appAdminClient.start();\n    return appAdminClient;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/AppAdminClient.java",
      "extendedDetails": {}
    },
    "438c1d333ebc0a3071bb556532ed959a4bd1e6d6": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7540.  Route YARN service CLI function through YARN Service API. (Contributed by Eric Yang)\n",
      "commitDate": "13/12/17 4:29 PM",
      "commitName": "438c1d333ebc0a3071bb556532ed959a4bd1e6d6",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "ba7ed7b66a48c61086ea837f39ff0f22ffe31eca",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 37.12,
      "commitsBetweenForRepo": 204,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,29 @@\n   public static AppAdminClient createAppAdminClient(String appType,\n       Configuration conf) {\n     Map\u003cString, String\u003e clientClassMap \u003d\n         conf.getPropsWithPrefix(YARN_APP_ADMIN_CLIENT_PREFIX);\n     if (!clientClassMap.containsKey(DEFAULT_TYPE)) {\n       clientClassMap.put(DEFAULT_TYPE, DEFAULT_CLASS_NAME);\n     }\n+    if (!clientClassMap.containsKey(UNIT_TEST_TYPE)) {\n+      clientClassMap.put(UNIT_TEST_TYPE, UNIT_TEST_CLASS_NAME);\n+    }\n     if (!clientClassMap.containsKey(appType)) {\n       throw new IllegalArgumentException(\"App admin client class name not \" +\n           \"specified for type \" + appType);\n     }\n     String clientClassName \u003d clientClassMap.get(appType);\n     Class\u003c? extends AppAdminClient\u003e clientClass;\n     try {\n       clientClass \u003d (Class\u003c? extends AppAdminClient\u003e) Class.forName(\n           clientClassName);\n     } catch (ClassNotFoundException e) {\n       throw new YarnRuntimeException(\"Invalid app admin client class\", e);\n     }\n \n     AppAdminClient appAdminClient \u003d ReflectionUtils.newInstance(clientClass,\n         conf);\n     appAdminClient.init(conf);\n     appAdminClient.start();\n     return appAdminClient;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static AppAdminClient createAppAdminClient(String appType,\n      Configuration conf) {\n    Map\u003cString, String\u003e clientClassMap \u003d\n        conf.getPropsWithPrefix(YARN_APP_ADMIN_CLIENT_PREFIX);\n    if (!clientClassMap.containsKey(DEFAULT_TYPE)) {\n      clientClassMap.put(DEFAULT_TYPE, DEFAULT_CLASS_NAME);\n    }\n    if (!clientClassMap.containsKey(UNIT_TEST_TYPE)) {\n      clientClassMap.put(UNIT_TEST_TYPE, UNIT_TEST_CLASS_NAME);\n    }\n    if (!clientClassMap.containsKey(appType)) {\n      throw new IllegalArgumentException(\"App admin client class name not \" +\n          \"specified for type \" + appType);\n    }\n    String clientClassName \u003d clientClassMap.get(appType);\n    Class\u003c? extends AppAdminClient\u003e clientClass;\n    try {\n      clientClass \u003d (Class\u003c? extends AppAdminClient\u003e) Class.forName(\n          clientClassName);\n    } catch (ClassNotFoundException e) {\n      throw new YarnRuntimeException(\"Invalid app admin client class\", e);\n    }\n\n    AppAdminClient appAdminClient \u003d ReflectionUtils.newInstance(clientClass,\n        conf);\n    appAdminClient.init(conf);\n    appAdminClient.start();\n    return appAdminClient;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/AppAdminClient.java",
      "extendedDetails": {}
    },
    "ba7ed7b66a48c61086ea837f39ff0f22ffe31eca": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7384. Remove apiserver cmd and merge service cmd into application cmd. Contributed by Billie Rinaldi\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "ba7ed7b66a48c61086ea837f39ff0f22ffe31eca",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,26 @@\n+  public static AppAdminClient createAppAdminClient(String appType,\n+      Configuration conf) {\n+    Map\u003cString, String\u003e clientClassMap \u003d\n+        conf.getPropsWithPrefix(YARN_APP_ADMIN_CLIENT_PREFIX);\n+    if (!clientClassMap.containsKey(DEFAULT_TYPE)) {\n+      clientClassMap.put(DEFAULT_TYPE, DEFAULT_CLASS_NAME);\n+    }\n+    if (!clientClassMap.containsKey(appType)) {\n+      throw new IllegalArgumentException(\"App admin client class name not \" +\n+          \"specified for type \" + appType);\n+    }\n+    String clientClassName \u003d clientClassMap.get(appType);\n+    Class\u003c? extends AppAdminClient\u003e clientClass;\n+    try {\n+      clientClass \u003d (Class\u003c? extends AppAdminClient\u003e) Class.forName(\n+          clientClassName);\n+    } catch (ClassNotFoundException e) {\n+      throw new YarnRuntimeException(\"Invalid app admin client class\", e);\n+    }\n+\n+    AppAdminClient appAdminClient \u003d ReflectionUtils.newInstance(clientClass,\n+        conf);\n+    appAdminClient.init(conf);\n+    appAdminClient.start();\n+    return appAdminClient;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static AppAdminClient createAppAdminClient(String appType,\n      Configuration conf) {\n    Map\u003cString, String\u003e clientClassMap \u003d\n        conf.getPropsWithPrefix(YARN_APP_ADMIN_CLIENT_PREFIX);\n    if (!clientClassMap.containsKey(DEFAULT_TYPE)) {\n      clientClassMap.put(DEFAULT_TYPE, DEFAULT_CLASS_NAME);\n    }\n    if (!clientClassMap.containsKey(appType)) {\n      throw new IllegalArgumentException(\"App admin client class name not \" +\n          \"specified for type \" + appType);\n    }\n    String clientClassName \u003d clientClassMap.get(appType);\n    Class\u003c? extends AppAdminClient\u003e clientClass;\n    try {\n      clientClass \u003d (Class\u003c? extends AppAdminClient\u003e) Class.forName(\n          clientClassName);\n    } catch (ClassNotFoundException e) {\n      throw new YarnRuntimeException(\"Invalid app admin client class\", e);\n    }\n\n    AppAdminClient appAdminClient \u003d ReflectionUtils.newInstance(clientClass,\n        conf);\n    appAdminClient.init(conf);\n    appAdminClient.start();\n    return appAdminClient;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/AppAdminClient.java"
    }
  }
}