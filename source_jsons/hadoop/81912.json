{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ZKCuratorManager.java",
  "functionName": "getZKAcls",
  "functionId": "getZKAcls___conf-Configuration",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/curator/ZKCuratorManager.java",
  "functionStartLine": 85,
  "functionEndLine": 97,
  "numCommitsSeen": 9,
  "timeTaken": 3194,
  "changeHistory": [
    "bbbf0e2a4136b30cad9dfd36ef138650a1adea60",
    "bcb2528a51c33e4caff8d744c5e14c1accfc47d0",
    "1ba26e3e68bd3bc8d55c18553777c5ba7b97aa4b"
  ],
  "changeHistoryShort": {
    "bbbf0e2a4136b30cad9dfd36ef138650a1adea60": "Ymultichange(Ymovefromfile,Ybodychange)",
    "bcb2528a51c33e4caff8d744c5e14c1accfc47d0": "Ymultichange(Yexceptionschange,Ybodychange)",
    "1ba26e3e68bd3bc8d55c18553777c5ba7b97aa4b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bbbf0e2a4136b30cad9dfd36ef138650a1adea60": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "HADOOP-14741. Refactor curator based ZooKeeper communication into common library. (Íñigo Goiri via Subru).\n",
      "commitDate": "11/08/17 1:58 PM",
      "commitName": "bbbf0e2a4136b30cad9dfd36ef138650a1adea60",
      "commitAuthor": "Subru Krishnan",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HADOOP-14741. Refactor curator based ZooKeeper communication into common library. (Íñigo Goiri via Subru).\n",
          "commitDate": "11/08/17 1:58 PM",
          "commitName": "bbbf0e2a4136b30cad9dfd36ef138650a1adea60",
          "commitAuthor": "Subru Krishnan",
          "commitDateOld": "11/08/17 12:15 PM",
          "commitNameOld": "8c4b6d16a526610a03ccc85665744ad071e37400",
          "commitAuthorOld": "Karthik Kambatla",
          "daysBetweenCommits": 0.07,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,13 @@\n   public static List\u003cACL\u003e getZKAcls(Configuration conf) throws IOException {\n     // Parse authentication from configuration.\n-    String zkAclConf \u003d\n-        conf.get(YarnConfiguration.RM_ZK_ACL,\n-            YarnConfiguration.DEFAULT_RM_ZK_ACL);\n+    String zkAclConf \u003d conf.get(CommonConfigurationKeys.ZK_ACL,\n+        CommonConfigurationKeys.ZK_ACL_DEFAULT);\n     try {\n       zkAclConf \u003d ZKUtil.resolveConfIndirection(zkAclConf);\n       return ZKUtil.parseACLs(zkAclConf);\n     } catch (IOException | ZKUtil.BadAclFormatException e) {\n-      LOG.error(\"Couldn\u0027t read ACLs based on \" + YarnConfiguration.RM_ZK_ACL);\n+      LOG.error(\"Couldn\u0027t read ACLs based on {}\",\n+          CommonConfigurationKeys.ZK_ACL);\n       throw e;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static List\u003cACL\u003e getZKAcls(Configuration conf) throws IOException {\n    // Parse authentication from configuration.\n    String zkAclConf \u003d conf.get(CommonConfigurationKeys.ZK_ACL,\n        CommonConfigurationKeys.ZK_ACL_DEFAULT);\n    try {\n      zkAclConf \u003d ZKUtil.resolveConfIndirection(zkAclConf);\n      return ZKUtil.parseACLs(zkAclConf);\n    } catch (IOException | ZKUtil.BadAclFormatException e) {\n      LOG.error(\"Couldn\u0027t read ACLs based on {}\",\n          CommonConfigurationKeys.ZK_ACL);\n      throw e;\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/curator/ZKCuratorManager.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMZKUtils.java",
            "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/curator/ZKCuratorManager.java",
            "oldMethodName": "getZKAcls",
            "newMethodName": "getZKAcls"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-14741. Refactor curator based ZooKeeper communication into common library. (Íñigo Goiri via Subru).\n",
          "commitDate": "11/08/17 1:58 PM",
          "commitName": "bbbf0e2a4136b30cad9dfd36ef138650a1adea60",
          "commitAuthor": "Subru Krishnan",
          "commitDateOld": "11/08/17 12:15 PM",
          "commitNameOld": "8c4b6d16a526610a03ccc85665744ad071e37400",
          "commitAuthorOld": "Karthik Kambatla",
          "daysBetweenCommits": 0.07,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,13 @@\n   public static List\u003cACL\u003e getZKAcls(Configuration conf) throws IOException {\n     // Parse authentication from configuration.\n-    String zkAclConf \u003d\n-        conf.get(YarnConfiguration.RM_ZK_ACL,\n-            YarnConfiguration.DEFAULT_RM_ZK_ACL);\n+    String zkAclConf \u003d conf.get(CommonConfigurationKeys.ZK_ACL,\n+        CommonConfigurationKeys.ZK_ACL_DEFAULT);\n     try {\n       zkAclConf \u003d ZKUtil.resolveConfIndirection(zkAclConf);\n       return ZKUtil.parseACLs(zkAclConf);\n     } catch (IOException | ZKUtil.BadAclFormatException e) {\n-      LOG.error(\"Couldn\u0027t read ACLs based on \" + YarnConfiguration.RM_ZK_ACL);\n+      LOG.error(\"Couldn\u0027t read ACLs based on {}\",\n+          CommonConfigurationKeys.ZK_ACL);\n       throw e;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static List\u003cACL\u003e getZKAcls(Configuration conf) throws IOException {\n    // Parse authentication from configuration.\n    String zkAclConf \u003d conf.get(CommonConfigurationKeys.ZK_ACL,\n        CommonConfigurationKeys.ZK_ACL_DEFAULT);\n    try {\n      zkAclConf \u003d ZKUtil.resolveConfIndirection(zkAclConf);\n      return ZKUtil.parseACLs(zkAclConf);\n    } catch (IOException | ZKUtil.BadAclFormatException e) {\n      LOG.error(\"Couldn\u0027t read ACLs based on {}\",\n          CommonConfigurationKeys.ZK_ACL);\n      throw e;\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/curator/ZKCuratorManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "bcb2528a51c33e4caff8d744c5e14c1accfc47d0": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "YARN-5400. Light cleanup in ZKRMStateStore (templedf via rkanter)\n",
      "commitDate": "28/09/16 2:56 PM",
      "commitName": "bcb2528a51c33e4caff8d744c5e14c1accfc47d0",
      "commitAuthor": "Robert Kanter",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "YARN-5400. Light cleanup in ZKRMStateStore (templedf via rkanter)\n",
          "commitDate": "28/09/16 2:56 PM",
          "commitName": "bcb2528a51c33e4caff8d744c5e14c1accfc47d0",
          "commitAuthor": "Robert Kanter",
          "commitDateOld": "28/02/14 9:34 AM",
          "commitNameOld": "1ba26e3e68bd3bc8d55c18553777c5ba7b97aa4b",
          "commitAuthorOld": "Karthik Kambatla",
          "daysBetweenCommits": 943.18,
          "commitsBetweenForRepo": 7256,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,13 @@\n-  public static List\u003cACL\u003e getZKAcls(Configuration conf) throws Exception {\n+  public static List\u003cACL\u003e getZKAcls(Configuration conf) throws IOException {\n     // Parse authentication from configuration.\n     String zkAclConf \u003d\n         conf.get(YarnConfiguration.RM_ZK_ACL,\n             YarnConfiguration.DEFAULT_RM_ZK_ACL);\n     try {\n       zkAclConf \u003d ZKUtil.resolveConfIndirection(zkAclConf);\n       return ZKUtil.parseACLs(zkAclConf);\n-    } catch (Exception e) {\n+    } catch (IOException | ZKUtil.BadAclFormatException e) {\n       LOG.error(\"Couldn\u0027t read ACLs based on \" + YarnConfiguration.RM_ZK_ACL);\n       throw e;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static List\u003cACL\u003e getZKAcls(Configuration conf) throws IOException {\n    // Parse authentication from configuration.\n    String zkAclConf \u003d\n        conf.get(YarnConfiguration.RM_ZK_ACL,\n            YarnConfiguration.DEFAULT_RM_ZK_ACL);\n    try {\n      zkAclConf \u003d ZKUtil.resolveConfIndirection(zkAclConf);\n      return ZKUtil.parseACLs(zkAclConf);\n    } catch (IOException | ZKUtil.BadAclFormatException e) {\n      LOG.error(\"Couldn\u0027t read ACLs based on \" + YarnConfiguration.RM_ZK_ACL);\n      throw e;\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMZKUtils.java",
          "extendedDetails": {
            "oldValue": "[Exception]",
            "newValue": "[IOException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-5400. Light cleanup in ZKRMStateStore (templedf via rkanter)\n",
          "commitDate": "28/09/16 2:56 PM",
          "commitName": "bcb2528a51c33e4caff8d744c5e14c1accfc47d0",
          "commitAuthor": "Robert Kanter",
          "commitDateOld": "28/02/14 9:34 AM",
          "commitNameOld": "1ba26e3e68bd3bc8d55c18553777c5ba7b97aa4b",
          "commitAuthorOld": "Karthik Kambatla",
          "daysBetweenCommits": 943.18,
          "commitsBetweenForRepo": 7256,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,13 @@\n-  public static List\u003cACL\u003e getZKAcls(Configuration conf) throws Exception {\n+  public static List\u003cACL\u003e getZKAcls(Configuration conf) throws IOException {\n     // Parse authentication from configuration.\n     String zkAclConf \u003d\n         conf.get(YarnConfiguration.RM_ZK_ACL,\n             YarnConfiguration.DEFAULT_RM_ZK_ACL);\n     try {\n       zkAclConf \u003d ZKUtil.resolveConfIndirection(zkAclConf);\n       return ZKUtil.parseACLs(zkAclConf);\n-    } catch (Exception e) {\n+    } catch (IOException | ZKUtil.BadAclFormatException e) {\n       LOG.error(\"Couldn\u0027t read ACLs based on \" + YarnConfiguration.RM_ZK_ACL);\n       throw e;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static List\u003cACL\u003e getZKAcls(Configuration conf) throws IOException {\n    // Parse authentication from configuration.\n    String zkAclConf \u003d\n        conf.get(YarnConfiguration.RM_ZK_ACL,\n            YarnConfiguration.DEFAULT_RM_ZK_ACL);\n    try {\n      zkAclConf \u003d ZKUtil.resolveConfIndirection(zkAclConf);\n      return ZKUtil.parseACLs(zkAclConf);\n    } catch (IOException | ZKUtil.BadAclFormatException e) {\n      LOG.error(\"Couldn\u0027t read ACLs based on \" + YarnConfiguration.RM_ZK_ACL);\n      throw e;\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMZKUtils.java",
          "extendedDetails": {}
        }
      ]
    },
    "1ba26e3e68bd3bc8d55c18553777c5ba7b97aa4b": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1528. Allow setting auth for ZK connections. (kasha)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1573014 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/02/14 9:34 AM",
      "commitName": "1ba26e3e68bd3bc8d55c18553777c5ba7b97aa4b",
      "commitAuthor": "Karthik Kambatla",
      "diff": "@@ -0,0 +1,13 @@\n+  public static List\u003cACL\u003e getZKAcls(Configuration conf) throws Exception {\n+    // Parse authentication from configuration.\n+    String zkAclConf \u003d\n+        conf.get(YarnConfiguration.RM_ZK_ACL,\n+            YarnConfiguration.DEFAULT_RM_ZK_ACL);\n+    try {\n+      zkAclConf \u003d ZKUtil.resolveConfIndirection(zkAclConf);\n+      return ZKUtil.parseACLs(zkAclConf);\n+    } catch (Exception e) {\n+      LOG.error(\"Couldn\u0027t read ACLs based on \" + YarnConfiguration.RM_ZK_ACL);\n+      throw e;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static List\u003cACL\u003e getZKAcls(Configuration conf) throws Exception {\n    // Parse authentication from configuration.\n    String zkAclConf \u003d\n        conf.get(YarnConfiguration.RM_ZK_ACL,\n            YarnConfiguration.DEFAULT_RM_ZK_ACL);\n    try {\n      zkAclConf \u003d ZKUtil.resolveConfIndirection(zkAclConf);\n      return ZKUtil.parseACLs(zkAclConf);\n    } catch (Exception e) {\n      LOG.error(\"Couldn\u0027t read ACLs based on \" + YarnConfiguration.RM_ZK_ACL);\n      throw e;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMZKUtils.java"
    }
  }
}