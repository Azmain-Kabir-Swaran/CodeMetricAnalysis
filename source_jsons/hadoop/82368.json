{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BlockingThreadPoolExecutorService.java",
  "functionName": "newInstance",
  "functionId": "newInstance___activeTasks-int__waitingTasks-int__keepAliveTime-long__unit-TimeUnit__prefixName-String",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/BlockingThreadPoolExecutorService.java",
  "functionStartLine": 124,
  "functionEndLine": 150,
  "numCommitsSeen": 9,
  "timeTaken": 2875,
  "changeHistory": [
    "f86c81d923ecce9d1c9fb691bbc78e93b4a65ae7",
    "6c348c56918973fd988b110e79231324a8befe12"
  ],
  "changeHistoryShort": {
    "f86c81d923ecce9d1c9fb691bbc78e93b4a65ae7": "Yfilerename",
    "6c348c56918973fd988b110e79231324a8befe12": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f86c81d923ecce9d1c9fb691bbc78e93b4a65ae7": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-15039. Move SemaphoredDelegatingExecutor to hadoop-common. Contributed by Genmao Yu\n",
      "commitDate": "13/12/17 7:14 PM",
      "commitName": "f86c81d923ecce9d1c9fb691bbc78e93b4a65ae7",
      "commitAuthor": "Kai Zheng",
      "commitDateOld": "13/12/17 7:05 PM",
      "commitNameOld": "28792b6b7f137df1db58496f27de23bbe99cdfd6",
      "commitAuthorOld": "Kai Zheng",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static BlockingThreadPoolExecutorService newInstance(\n      int activeTasks,\n      int waitingTasks,\n      long keepAliveTime, TimeUnit unit,\n      String prefixName) {\n\n    /* Although we generally only expect up to waitingTasks tasks in the\n    queue, we need to be able to buffer all tasks in case dequeueing is\n    slower than enqueueing. */\n    final BlockingQueue\u003cRunnable\u003e workQueue \u003d\n        new LinkedBlockingQueue\u003c\u003e(waitingTasks + activeTasks);\n    ThreadPoolExecutor eventProcessingExecutor \u003d\n        new ThreadPoolExecutor(activeTasks, activeTasks, keepAliveTime, unit,\n            workQueue, newDaemonThreadFactory(prefixName),\n            new RejectedExecutionHandler() {\n              @Override\n              public void rejectedExecution(Runnable r,\n                  ThreadPoolExecutor executor) {\n                // This is not expected to happen.\n                LOG.error(\"Could not submit task to executor {}\",\n                    executor.toString());\n              }\n            });\n    eventProcessingExecutor.allowCoreThreadTimeOut(true);\n    return new BlockingThreadPoolExecutorService(waitingTasks + activeTasks,\n        eventProcessingExecutor);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/BlockingThreadPoolExecutorService.java",
      "extendedDetails": {
        "oldPath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/BlockingThreadPoolExecutorService.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/BlockingThreadPoolExecutorService.java"
      }
    },
    "6c348c56918973fd988b110e79231324a8befe12": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-13560. S3ABlockOutputStream to support huge (many GB) file writes. Contributed by Steve Loughran\n",
      "commitDate": "18/10/16 1:16 PM",
      "commitName": "6c348c56918973fd988b110e79231324a8befe12",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,27 @@\n+  public static BlockingThreadPoolExecutorService newInstance(\n+      int activeTasks,\n+      int waitingTasks,\n+      long keepAliveTime, TimeUnit unit,\n+      String prefixName) {\n+\n+    /* Although we generally only expect up to waitingTasks tasks in the\n+    queue, we need to be able to buffer all tasks in case dequeueing is\n+    slower than enqueueing. */\n+    final BlockingQueue\u003cRunnable\u003e workQueue \u003d\n+        new LinkedBlockingQueue\u003c\u003e(waitingTasks + activeTasks);\n+    ThreadPoolExecutor eventProcessingExecutor \u003d\n+        new ThreadPoolExecutor(activeTasks, activeTasks, keepAliveTime, unit,\n+            workQueue, newDaemonThreadFactory(prefixName),\n+            new RejectedExecutionHandler() {\n+              @Override\n+              public void rejectedExecution(Runnable r,\n+                  ThreadPoolExecutor executor) {\n+                // This is not expected to happen.\n+                LOG.error(\"Could not submit task to executor {}\",\n+                    executor.toString());\n+              }\n+            });\n+    eventProcessingExecutor.allowCoreThreadTimeOut(true);\n+    return new BlockingThreadPoolExecutorService(waitingTasks + activeTasks,\n+        eventProcessingExecutor);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static BlockingThreadPoolExecutorService newInstance(\n      int activeTasks,\n      int waitingTasks,\n      long keepAliveTime, TimeUnit unit,\n      String prefixName) {\n\n    /* Although we generally only expect up to waitingTasks tasks in the\n    queue, we need to be able to buffer all tasks in case dequeueing is\n    slower than enqueueing. */\n    final BlockingQueue\u003cRunnable\u003e workQueue \u003d\n        new LinkedBlockingQueue\u003c\u003e(waitingTasks + activeTasks);\n    ThreadPoolExecutor eventProcessingExecutor \u003d\n        new ThreadPoolExecutor(activeTasks, activeTasks, keepAliveTime, unit,\n            workQueue, newDaemonThreadFactory(prefixName),\n            new RejectedExecutionHandler() {\n              @Override\n              public void rejectedExecution(Runnable r,\n                  ThreadPoolExecutor executor) {\n                // This is not expected to happen.\n                LOG.error(\"Could not submit task to executor {}\",\n                    executor.toString());\n              }\n            });\n    eventProcessingExecutor.allowCoreThreadTimeOut(true);\n    return new BlockingThreadPoolExecutorService(waitingTasks + activeTasks,\n        eventProcessingExecutor);\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/BlockingThreadPoolExecutorService.java"
    }
  }
}