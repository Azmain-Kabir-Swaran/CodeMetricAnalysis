{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LeafQueue.java",
  "functionName": "updateSchedulerHealthForCompletedContainer",
  "functionId": "updateSchedulerHealthForCompletedContainer___rmContainer-RMContainer__containerStatus-ContainerStatus",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
  "functionStartLine": 1581,
  "functionEndLine": 1599,
  "numCommitsSeen": 176,
  "timeTaken": 3186,
  "changeHistory": [
    "ae14e5d07f1b6702a5160637438028bb03d9387e"
  ],
  "changeHistoryShort": {
    "ae14e5d07f1b6702a5160637438028bb03d9387e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ae14e5d07f1b6702a5160637438028bb03d9387e": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4108. CapacityScheduler: Improve preemption to only kill containers that would satisfy the incoming request. (Wangda Tan)\n\n(cherry picked from commit 7e8c9beb4156dcaeb3a11e60aaa06d2370626913)\n",
      "commitDate": "16/03/16 5:02 PM",
      "commitName": "ae14e5d07f1b6702a5160637438028bb03d9387e",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,19 @@\n+  private void updateSchedulerHealthForCompletedContainer(\n+      RMContainer rmContainer, ContainerStatus containerStatus) {\n+    // Update SchedulerHealth for released / preempted container\n+    SchedulerHealth schedulerHealth \u003d csContext.getSchedulerHealth();\n+    if (null \u003d\u003d schedulerHealth) {\n+      // Only do update if we have schedulerHealth\n+      return;\n+    }\n+\n+    if (containerStatus.getExitStatus() \u003d\u003d ContainerExitStatus.PREEMPTED) {\n+      schedulerHealth.updatePreemption(Time.now(), rmContainer.getAllocatedNode(),\n+          rmContainer.getContainerId(), getQueuePath());\n+      schedulerHealth.updateSchedulerPreemptionCounts(1);\n+    } else {\n+      schedulerHealth.updateRelease(csContext.getLastNodeUpdateTime(),\n+          rmContainer.getAllocatedNode(), rmContainer.getContainerId(),\n+          getQueuePath());\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void updateSchedulerHealthForCompletedContainer(\n      RMContainer rmContainer, ContainerStatus containerStatus) {\n    // Update SchedulerHealth for released / preempted container\n    SchedulerHealth schedulerHealth \u003d csContext.getSchedulerHealth();\n    if (null \u003d\u003d schedulerHealth) {\n      // Only do update if we have schedulerHealth\n      return;\n    }\n\n    if (containerStatus.getExitStatus() \u003d\u003d ContainerExitStatus.PREEMPTED) {\n      schedulerHealth.updatePreemption(Time.now(), rmContainer.getAllocatedNode(),\n          rmContainer.getContainerId(), getQueuePath());\n      schedulerHealth.updateSchedulerPreemptionCounts(1);\n    } else {\n      schedulerHealth.updateRelease(csContext.getLastNodeUpdateTime(),\n          rmContainer.getAllocatedNode(), rmContainer.getContainerId(),\n          getQueuePath());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java"
    }
  }
}