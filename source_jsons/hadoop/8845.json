{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ErasureCodingPolicyManager.java",
  "functionName": "enablePolicy",
  "functionId": "enablePolicy___name-String",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ErasureCodingPolicyManager.java",
  "functionStartLine": 429,
  "functionEndLine": 453,
  "numCommitsSeen": 34,
  "timeTaken": 4343,
  "changeHistory": [
    "8d99648c203004045a9339ad27258092969145d6",
    "770d9d9bb686bacef601ec8c4f884dc5afa9d4e2",
    "e565b5277d5b890dad107fe85e295a3907e4bfc1",
    "2adf8bed712e6d770a0d53eea198d8911ae1a258",
    "200b11368d3954138a9bce128c8fa763b4a503a1",
    "f99b6d19de77c6e730fed8444f8848a7e63d6130"
  ],
  "changeHistoryShort": {
    "8d99648c203004045a9339ad27258092969145d6": "Ybodychange",
    "770d9d9bb686bacef601ec8c4f884dc5afa9d4e2": "Ymultichange(Yreturntypechange,Ybodychange)",
    "e565b5277d5b890dad107fe85e295a3907e4bfc1": "Ybodychange",
    "2adf8bed712e6d770a0d53eea198d8911ae1a258": "Ybodychange",
    "200b11368d3954138a9bce128c8fa763b4a503a1": "Ybodychange",
    "f99b6d19de77c6e730fed8444f8848a7e63d6130": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8d99648c203004045a9339ad27258092969145d6": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14039. ec -listPolicies doesn\u0027t show correct state for the default policy when the default is not RS(6,3). Contributed by Kitti Nanasi.\n\nSigned-off-by: Xiao Chen \u003cxiao@apache.org\u003e\n",
      "commitDate": "08/11/18 10:01 AM",
      "commitName": "8d99648c203004045a9339ad27258092969145d6",
      "commitAuthor": "Kitti Nanasi",
      "commitDateOld": "28/09/18 8:53 AM",
      "commitNameOld": "e2113500df2479dd2d8f1d8a37fdb2bb16463181",
      "commitAuthorOld": "Takanobu Asanuma",
      "daysBetweenCommits": 41.09,
      "commitsBetweenForRepo": 385,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,25 @@\n   public synchronized boolean enablePolicy(String name) {\n     final ErasureCodingPolicyInfo info \u003d policiesByName.get(name);\n     if (info \u003d\u003d null) {\n       throw new HadoopIllegalArgumentException(\"The policy name \" +\n           name + \" does not exist\");\n     }\n     if (enabledPoliciesByName.containsKey(name)) {\n+      if (defaultPolicyName.equals(name)) {\n+        allPersistedPolicies.put(info.getPolicy().getId(),\n+            createPolicyInfo(info.getPolicy(),\n+                ErasureCodingPolicyState.ENABLED));\n+        return true;\n+      }\n       return false;\n     }\n     final ErasureCodingPolicy ecPolicy \u003d info.getPolicy();\n     enabledPoliciesByName.put(name, ecPolicy);\n     info.setState(ErasureCodingPolicyState.ENABLED);\n     enabledPolicies \u003d\n         enabledPoliciesByName.values().toArray(new ErasureCodingPolicy[0]);\n+    allPersistedPolicies.put(ecPolicy.getId(),\n+        createPolicyInfo(info.getPolicy(), ErasureCodingPolicyState.ENABLED));\n     LOG.info(\"Enable the erasure coding policy \" + name);\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized boolean enablePolicy(String name) {\n    final ErasureCodingPolicyInfo info \u003d policiesByName.get(name);\n    if (info \u003d\u003d null) {\n      throw new HadoopIllegalArgumentException(\"The policy name \" +\n          name + \" does not exist\");\n    }\n    if (enabledPoliciesByName.containsKey(name)) {\n      if (defaultPolicyName.equals(name)) {\n        allPersistedPolicies.put(info.getPolicy().getId(),\n            createPolicyInfo(info.getPolicy(),\n                ErasureCodingPolicyState.ENABLED));\n        return true;\n      }\n      return false;\n    }\n    final ErasureCodingPolicy ecPolicy \u003d info.getPolicy();\n    enabledPoliciesByName.put(name, ecPolicy);\n    info.setState(ErasureCodingPolicyState.ENABLED);\n    enabledPolicies \u003d\n        enabledPoliciesByName.values().toArray(new ErasureCodingPolicy[0]);\n    allPersistedPolicies.put(ecPolicy.getId(),\n        createPolicyInfo(info.getPolicy(), ErasureCodingPolicyState.ENABLED));\n    LOG.info(\"Enable the erasure coding policy \" + name);\n    return true;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ErasureCodingPolicyManager.java",
      "extendedDetails": {}
    },
    "770d9d9bb686bacef601ec8c4f884dc5afa9d4e2": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-13772. Erasure coding: Unnecessary NameNode Logs displaying for Enabling/Disabling Erasure coding policies which are already enabled/disabled. Contributed by Ayush Saxena\n",
      "commitDate": "20/08/18 9:03 PM",
      "commitName": "770d9d9bb686bacef601ec8c4f884dc5afa9d4e2",
      "commitAuthor": "Vinayakumar B",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-13772. Erasure coding: Unnecessary NameNode Logs displaying for Enabling/Disabling Erasure coding policies which are already enabled/disabled. Contributed by Ayush Saxena\n",
          "commitDate": "20/08/18 9:03 PM",
          "commitName": "770d9d9bb686bacef601ec8c4f884dc5afa9d4e2",
          "commitAuthor": "Vinayakumar B",
          "commitDateOld": "02/11/17 9:27 PM",
          "commitNameOld": "e565b5277d5b890dad107fe85e295a3907e4bfc1",
          "commitAuthorOld": "Xiao Chen",
          "daysBetweenCommits": 290.98,
          "commitsBetweenForRepo": 2665,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,17 @@\n-  public synchronized void enablePolicy(String name) {\n+  public synchronized boolean enablePolicy(String name) {\n     final ErasureCodingPolicyInfo info \u003d policiesByName.get(name);\n     if (info \u003d\u003d null) {\n       throw new HadoopIllegalArgumentException(\"The policy name \" +\n           name + \" does not exist\");\n     }\n-\n+    if (enabledPoliciesByName.containsKey(name)) {\n+      return false;\n+    }\n     final ErasureCodingPolicy ecPolicy \u003d info.getPolicy();\n     enabledPoliciesByName.put(name, ecPolicy);\n     info.setState(ErasureCodingPolicyState.ENABLED);\n     enabledPolicies \u003d\n         enabledPoliciesByName.values().toArray(new ErasureCodingPolicy[0]);\n     LOG.info(\"Enable the erasure coding policy \" + name);\n+    return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized boolean enablePolicy(String name) {\n    final ErasureCodingPolicyInfo info \u003d policiesByName.get(name);\n    if (info \u003d\u003d null) {\n      throw new HadoopIllegalArgumentException(\"The policy name \" +\n          name + \" does not exist\");\n    }\n    if (enabledPoliciesByName.containsKey(name)) {\n      return false;\n    }\n    final ErasureCodingPolicy ecPolicy \u003d info.getPolicy();\n    enabledPoliciesByName.put(name, ecPolicy);\n    info.setState(ErasureCodingPolicyState.ENABLED);\n    enabledPolicies \u003d\n        enabledPoliciesByName.values().toArray(new ErasureCodingPolicy[0]);\n    LOG.info(\"Enable the erasure coding policy \" + name);\n    return true;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ErasureCodingPolicyManager.java",
          "extendedDetails": {
            "oldValue": "void",
            "newValue": "boolean"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-13772. Erasure coding: Unnecessary NameNode Logs displaying for Enabling/Disabling Erasure coding policies which are already enabled/disabled. Contributed by Ayush Saxena\n",
          "commitDate": "20/08/18 9:03 PM",
          "commitName": "770d9d9bb686bacef601ec8c4f884dc5afa9d4e2",
          "commitAuthor": "Vinayakumar B",
          "commitDateOld": "02/11/17 9:27 PM",
          "commitNameOld": "e565b5277d5b890dad107fe85e295a3907e4bfc1",
          "commitAuthorOld": "Xiao Chen",
          "daysBetweenCommits": 290.98,
          "commitsBetweenForRepo": 2665,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,17 @@\n-  public synchronized void enablePolicy(String name) {\n+  public synchronized boolean enablePolicy(String name) {\n     final ErasureCodingPolicyInfo info \u003d policiesByName.get(name);\n     if (info \u003d\u003d null) {\n       throw new HadoopIllegalArgumentException(\"The policy name \" +\n           name + \" does not exist\");\n     }\n-\n+    if (enabledPoliciesByName.containsKey(name)) {\n+      return false;\n+    }\n     final ErasureCodingPolicy ecPolicy \u003d info.getPolicy();\n     enabledPoliciesByName.put(name, ecPolicy);\n     info.setState(ErasureCodingPolicyState.ENABLED);\n     enabledPolicies \u003d\n         enabledPoliciesByName.values().toArray(new ErasureCodingPolicy[0]);\n     LOG.info(\"Enable the erasure coding policy \" + name);\n+    return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized boolean enablePolicy(String name) {\n    final ErasureCodingPolicyInfo info \u003d policiesByName.get(name);\n    if (info \u003d\u003d null) {\n      throw new HadoopIllegalArgumentException(\"The policy name \" +\n          name + \" does not exist\");\n    }\n    if (enabledPoliciesByName.containsKey(name)) {\n      return false;\n    }\n    final ErasureCodingPolicy ecPolicy \u003d info.getPolicy();\n    enabledPoliciesByName.put(name, ecPolicy);\n    info.setState(ErasureCodingPolicyState.ENABLED);\n    enabledPolicies \u003d\n        enabledPoliciesByName.values().toArray(new ErasureCodingPolicy[0]);\n    LOG.info(\"Enable the erasure coding policy \" + name);\n    return true;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ErasureCodingPolicyManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "e565b5277d5b890dad107fe85e295a3907e4bfc1": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12682. ECAdmin -listPolicies will always show SystemErasureCodingPolicies state as DISABLED.\n",
      "commitDate": "02/11/17 9:27 PM",
      "commitName": "e565b5277d5b890dad107fe85e295a3907e4bfc1",
      "commitAuthor": "Xiao Chen",
      "commitDateOld": "19/10/17 6:42 PM",
      "commitNameOld": "ce7cf66e5ed74c124afdb5a6902fbf297211cc04",
      "commitAuthorOld": "Kai Zheng",
      "daysBetweenCommits": 14.11,
      "commitsBetweenForRepo": 94,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,14 @@\n   public synchronized void enablePolicy(String name) {\n-    ErasureCodingPolicy ecPolicy \u003d policiesByName.get(name);\n-    if (ecPolicy \u003d\u003d null) {\n+    final ErasureCodingPolicyInfo info \u003d policiesByName.get(name);\n+    if (info \u003d\u003d null) {\n       throw new HadoopIllegalArgumentException(\"The policy name \" +\n           name + \" does not exist\");\n     }\n \n+    final ErasureCodingPolicy ecPolicy \u003d info.getPolicy();\n     enabledPoliciesByName.put(name, ecPolicy);\n-    ecPolicy.setState(ErasureCodingPolicyState.ENABLED);\n+    info.setState(ErasureCodingPolicyState.ENABLED);\n     enabledPolicies \u003d\n         enabledPoliciesByName.values().toArray(new ErasureCodingPolicy[0]);\n     LOG.info(\"Enable the erasure coding policy \" + name);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void enablePolicy(String name) {\n    final ErasureCodingPolicyInfo info \u003d policiesByName.get(name);\n    if (info \u003d\u003d null) {\n      throw new HadoopIllegalArgumentException(\"The policy name \" +\n          name + \" does not exist\");\n    }\n\n    final ErasureCodingPolicy ecPolicy \u003d info.getPolicy();\n    enabledPoliciesByName.put(name, ecPolicy);\n    info.setState(ErasureCodingPolicyState.ENABLED);\n    enabledPolicies \u003d\n        enabledPoliciesByName.values().toArray(new ErasureCodingPolicy[0]);\n    LOG.info(\"Enable the erasure coding policy \" + name);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ErasureCodingPolicyManager.java",
      "extendedDetails": {}
    },
    "2adf8bed712e6d770a0d53eea198d8911ae1a258": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12402. Refactor ErasureCodingPolicyManager and related codes. Contributed by Sammi Chen\n",
      "commitDate": "07/09/17 5:38 AM",
      "commitName": "2adf8bed712e6d770a0d53eea198d8911ae1a258",
      "commitAuthor": "Kai Zheng",
      "commitDateOld": "30/08/17 12:28 AM",
      "commitNameOld": "200b11368d3954138a9bce128c8fa763b4a503a1",
      "commitAuthorOld": "Rakesh Radhakrishnan",
      "daysBetweenCommits": 8.21,
      "commitsBetweenForRepo": 53,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n   public synchronized void enablePolicy(String name) {\n     ErasureCodingPolicy ecPolicy \u003d policiesByName.get(name);\n     if (ecPolicy \u003d\u003d null) {\n-      throw new IllegalArgumentException(\"The policy name \" +\n-          name + \" does not exists\");\n+      throw new HadoopIllegalArgumentException(\"The policy name \" +\n+          name + \" does not exist\");\n     }\n \n     enabledPoliciesByName.put(name, ecPolicy);\n     ecPolicy.setState(ErasureCodingPolicyState.ENABLED);\n     enabledPolicies \u003d\n         enabledPoliciesByName.values().toArray(new ErasureCodingPolicy[0]);\n     LOG.info(\"Enable the erasure coding policy \" + name);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void enablePolicy(String name) {\n    ErasureCodingPolicy ecPolicy \u003d policiesByName.get(name);\n    if (ecPolicy \u003d\u003d null) {\n      throw new HadoopIllegalArgumentException(\"The policy name \" +\n          name + \" does not exist\");\n    }\n\n    enabledPoliciesByName.put(name, ecPolicy);\n    ecPolicy.setState(ErasureCodingPolicyState.ENABLED);\n    enabledPolicies \u003d\n        enabledPoliciesByName.values().toArray(new ErasureCodingPolicy[0]);\n    LOG.info(\"Enable the erasure coding policy \" + name);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ErasureCodingPolicyManager.java",
      "extendedDetails": {}
    },
    "200b11368d3954138a9bce128c8fa763b4a503a1": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12258. ec -listPolicies should list all policies in system, no matter it\u0027s enabled or disabled. Contributed by Wei Zhou.\n",
      "commitDate": "30/08/17 12:28 AM",
      "commitName": "200b11368d3954138a9bce128c8fa763b4a503a1",
      "commitAuthor": "Rakesh Radhakrishnan",
      "commitDateOld": "16/08/17 10:17 PM",
      "commitNameOld": "96b3a6b9721e922d33fadc2459b561a85dbf9b8e",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 13.09,
      "commitsBetweenForRepo": 125,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,13 @@\n   public synchronized void enablePolicy(String name) {\n-    ErasureCodingPolicy sysEcPolicy \u003d SystemErasureCodingPolicies\n-        .getByName(name);\n-    ErasureCodingPolicy userEcPolicy \u003d userPoliciesByName.get(name);\n-    LOG.info(\"Enable the erasure coding policy \" + name);\n-    if (sysEcPolicy \u003d\u003d null \u0026\u0026\n-        userEcPolicy \u003d\u003d null) {\n+    ErasureCodingPolicy ecPolicy \u003d policiesByName.get(name);\n+    if (ecPolicy \u003d\u003d null) {\n       throw new IllegalArgumentException(\"The policy name \" +\n           name + \" does not exists\");\n     }\n \n-    if(sysEcPolicy !\u003d null){\n-      enabledPoliciesByName.put(name, sysEcPolicy);\n-      removedPoliciesByName.remove(name);\n-    }\n-    if(userEcPolicy !\u003d null) {\n-      enabledPoliciesByName.put(name, userEcPolicy);\n-      removedPoliciesByName.remove(name);\n-    }\n+    enabledPoliciesByName.put(name, ecPolicy);\n+    ecPolicy.setState(ErasureCodingPolicyState.ENABLED);\n+    enabledPolicies \u003d\n+        enabledPoliciesByName.values().toArray(new ErasureCodingPolicy[0]);\n+    LOG.info(\"Enable the erasure coding policy \" + name);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void enablePolicy(String name) {\n    ErasureCodingPolicy ecPolicy \u003d policiesByName.get(name);\n    if (ecPolicy \u003d\u003d null) {\n      throw new IllegalArgumentException(\"The policy name \" +\n          name + \" does not exists\");\n    }\n\n    enabledPoliciesByName.put(name, ecPolicy);\n    ecPolicy.setState(ErasureCodingPolicyState.ENABLED);\n    enabledPolicies \u003d\n        enabledPoliciesByName.values().toArray(new ErasureCodingPolicy[0]);\n    LOG.info(\"Enable the erasure coding policy \" + name);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ErasureCodingPolicyManager.java",
      "extendedDetails": {}
    },
    "f99b6d19de77c6e730fed8444f8848a7e63d6130": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-11870. Add CLI cmd to enable/disable an erasure code policy. Contributed by lufei.\n",
      "commitDate": "28/06/17 10:54 AM",
      "commitName": "f99b6d19de77c6e730fed8444f8848a7e63d6130",
      "commitAuthor": "Wei-Chiu Chuang",
      "diff": "@@ -0,0 +1,20 @@\n+  public synchronized void enablePolicy(String name) {\n+    ErasureCodingPolicy sysEcPolicy \u003d SystemErasureCodingPolicies\n+        .getByName(name);\n+    ErasureCodingPolicy userEcPolicy \u003d userPoliciesByName.get(name);\n+    LOG.info(\"Enable the erasure coding policy \" + name);\n+    if (sysEcPolicy \u003d\u003d null \u0026\u0026\n+        userEcPolicy \u003d\u003d null) {\n+      throw new IllegalArgumentException(\"The policy name \" +\n+          name + \" does not exists\");\n+    }\n+\n+    if(sysEcPolicy !\u003d null){\n+      enabledPoliciesByName.put(name, sysEcPolicy);\n+      removedPoliciesByName.remove(name);\n+    }\n+    if(userEcPolicy !\u003d null) {\n+      enabledPoliciesByName.put(name, userEcPolicy);\n+      removedPoliciesByName.remove(name);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void enablePolicy(String name) {\n    ErasureCodingPolicy sysEcPolicy \u003d SystemErasureCodingPolicies\n        .getByName(name);\n    ErasureCodingPolicy userEcPolicy \u003d userPoliciesByName.get(name);\n    LOG.info(\"Enable the erasure coding policy \" + name);\n    if (sysEcPolicy \u003d\u003d null \u0026\u0026\n        userEcPolicy \u003d\u003d null) {\n      throw new IllegalArgumentException(\"The policy name \" +\n          name + \" does not exists\");\n    }\n\n    if(sysEcPolicy !\u003d null){\n      enabledPoliciesByName.put(name, sysEcPolicy);\n      removedPoliciesByName.remove(name);\n    }\n    if(userEcPolicy !\u003d null) {\n      enabledPoliciesByName.put(name, userEcPolicy);\n      removedPoliciesByName.remove(name);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ErasureCodingPolicyManager.java"
    }
  }
}