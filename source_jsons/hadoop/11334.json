{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AvailableSpaceVolumeChoosingPolicy.java",
  "functionName": "areAllVolumesWithinFreeSpaceThreshold",
  "functionId": "areAllVolumesWithinFreeSpaceThreshold",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/AvailableSpaceVolumeChoosingPolicy.java",
  "functionStartLine": 206,
  "functionEndLine": 214,
  "numCommitsSeen": 12,
  "timeTaken": 869,
  "changeHistory": [
    "a9d515aed870535ea80500c6dac7612720774cda"
  ],
  "changeHistoryShort": {
    "a9d515aed870535ea80500c6dac7612720774cda": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a9d515aed870535ea80500c6dac7612720774cda": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-1804. Add a new block-volume device choosing policy that looks at free space. Contributed by Aaron T. Myers.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1465183 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/04/13 9:08 PM",
      "commitName": "a9d515aed870535ea80500c6dac7612720774cda",
      "commitAuthor": "Aaron Myers",
      "diff": "@@ -0,0 +1,9 @@\n+    public boolean areAllVolumesWithinFreeSpaceThreshold() {\n+      long leastAvailable \u003d Long.MAX_VALUE;\n+      long mostAvailable \u003d 0;\n+      for (AvailableSpaceVolumePair volume : volumes) {\n+        leastAvailable \u003d Math.min(leastAvailable, volume.getAvailable());\n+        mostAvailable \u003d Math.max(mostAvailable, volume.getAvailable());\n+      }\n+      return (mostAvailable - leastAvailable) \u003c balancedSpaceThreshold;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public boolean areAllVolumesWithinFreeSpaceThreshold() {\n      long leastAvailable \u003d Long.MAX_VALUE;\n      long mostAvailable \u003d 0;\n      for (AvailableSpaceVolumePair volume : volumes) {\n        leastAvailable \u003d Math.min(leastAvailable, volume.getAvailable());\n        mostAvailable \u003d Math.max(mostAvailable, volume.getAvailable());\n      }\n      return (mostAvailable - leastAvailable) \u003c balancedSpaceThreshold;\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/AvailableSpaceVolumeChoosingPolicy.java"
    }
  }
}