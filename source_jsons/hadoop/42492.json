{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LeveldbRMStateStore.java",
  "functionName": "storeOrUpdateRMDT",
  "functionId": "storeOrUpdateRMDT___tokenId-RMDelegationTokenIdentifier__renewDate-Long__isUpdate-boolean",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/LeveldbRMStateStore.java",
  "functionStartLine": 647,
  "functionEndLine": 670,
  "numCommitsSeen": 21,
  "timeTaken": 3133,
  "changeHistory": [
    "76900b4f5b7ad8d11baf505abc43f7b24d364071",
    "2064ca015d1584263aac0cc20c60b925a3aff612",
    "562a701945be3a672f9cb5a52cc6db2c1589ba2b",
    "a7fba0bc28764e0fb36c335ea60cc58079fe007f"
  ],
  "changeHistoryShort": {
    "76900b4f5b7ad8d11baf505abc43f7b24d364071": "Ybodychange",
    "2064ca015d1584263aac0cc20c60b925a3aff612": "Ybodychange",
    "562a701945be3a672f9cb5a52cc6db2c1589ba2b": "Ymultichange(Yrename,Yparameterchange,Ymodifierchange,Ybodychange)",
    "a7fba0bc28764e0fb36c335ea60cc58079fe007f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "76900b4f5b7ad8d11baf505abc43f7b24d364071": {
      "type": "Ybodychange",
      "commitMessage": "YARN-10189. Code cleanup in LeveldbRMStateStore. Contributed by Benjamin Teke\n",
      "commitDate": "18/04/20 12:57 AM",
      "commitName": "76900b4f5b7ad8d11baf505abc43f7b24d364071",
      "commitAuthor": "Szilard Nemeth",
      "commitDateOld": "15/03/19 4:20 PM",
      "commitNameOld": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 399.36,
      "commitsBetweenForRepo": 2266,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,24 @@\n   private void storeOrUpdateRMDT(RMDelegationTokenIdentifier tokenId,\n       Long renewDate, boolean isUpdate) throws IOException {\n     String tokenKey \u003d getRMDTTokenNodeKey(tokenId);\n     RMDelegationTokenIdentifierData tokenData \u003d\n         new RMDelegationTokenIdentifierData(tokenId, renewDate);\n     LOG.debug(\"Storing token to {}\", tokenKey);\n     try {\n-      WriteBatch batch \u003d db.createWriteBatch();\n-      try {\n+      try (WriteBatch batch \u003d db.createWriteBatch()) {\n         batch.put(bytes(tokenKey), tokenData.toByteArray());\n-        if(!isUpdate) {\n+        if (!isUpdate) {\n           ByteArrayOutputStream bs \u003d new ByteArrayOutputStream();\n           try (DataOutputStream ds \u003d new DataOutputStream(bs)) {\n             ds.writeInt(tokenId.getSequenceNumber());\n           }\n           LOG.debug(\"Storing {} to {}\", tokenId.getSequenceNumber(),\n               RM_DT_SEQUENCE_NUMBER_KEY);\n           batch.put(bytes(RM_DT_SEQUENCE_NUMBER_KEY), bs.toByteArray());\n         }\n         db.write(batch);\n-      } finally {\n-        batch.close();\n       }\n     } catch (DBException e) {\n       throw new IOException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void storeOrUpdateRMDT(RMDelegationTokenIdentifier tokenId,\n      Long renewDate, boolean isUpdate) throws IOException {\n    String tokenKey \u003d getRMDTTokenNodeKey(tokenId);\n    RMDelegationTokenIdentifierData tokenData \u003d\n        new RMDelegationTokenIdentifierData(tokenId, renewDate);\n    LOG.debug(\"Storing token to {}\", tokenKey);\n    try {\n      try (WriteBatch batch \u003d db.createWriteBatch()) {\n        batch.put(bytes(tokenKey), tokenData.toByteArray());\n        if (!isUpdate) {\n          ByteArrayOutputStream bs \u003d new ByteArrayOutputStream();\n          try (DataOutputStream ds \u003d new DataOutputStream(bs)) {\n            ds.writeInt(tokenId.getSequenceNumber());\n          }\n          LOG.debug(\"Storing {} to {}\", tokenId.getSequenceNumber(),\n              RM_DT_SEQUENCE_NUMBER_KEY);\n          batch.put(bytes(RM_DT_SEQUENCE_NUMBER_KEY), bs.toByteArray());\n        }\n        db.write(batch);\n      }\n    } catch (DBException e) {\n      throw new IOException(e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/LeveldbRMStateStore.java",
      "extendedDetails": {}
    },
    "2064ca015d1584263aac0cc20c60b925a3aff612": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9349.  Changed logging to use slf4j api.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "15/03/19 4:20 PM",
      "commitName": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "04/03/19 9:10 PM",
      "commitNameOld": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
      "commitAuthorOld": "Prabhu Joseph",
      "daysBetweenCommits": 10.76,
      "commitsBetweenForRepo": 108,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,27 @@\n   private void storeOrUpdateRMDT(RMDelegationTokenIdentifier tokenId,\n       Long renewDate, boolean isUpdate) throws IOException {\n     String tokenKey \u003d getRMDTTokenNodeKey(tokenId);\n     RMDelegationTokenIdentifierData tokenData \u003d\n         new RMDelegationTokenIdentifierData(tokenId, renewDate);\n-    if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"Storing token to \" + tokenKey);\n-    }\n+    LOG.debug(\"Storing token to {}\", tokenKey);\n     try {\n       WriteBatch batch \u003d db.createWriteBatch();\n       try {\n         batch.put(bytes(tokenKey), tokenData.toByteArray());\n         if(!isUpdate) {\n           ByteArrayOutputStream bs \u003d new ByteArrayOutputStream();\n           try (DataOutputStream ds \u003d new DataOutputStream(bs)) {\n             ds.writeInt(tokenId.getSequenceNumber());\n           }\n-          if (LOG.isDebugEnabled()) {\n-            LOG.debug(\"Storing \" + tokenId.getSequenceNumber() + \" to \"\n-                + RM_DT_SEQUENCE_NUMBER_KEY);   \n-          }\n+          LOG.debug(\"Storing {} to {}\", tokenId.getSequenceNumber(),\n+              RM_DT_SEQUENCE_NUMBER_KEY);\n           batch.put(bytes(RM_DT_SEQUENCE_NUMBER_KEY), bs.toByteArray());\n         }\n         db.write(batch);\n       } finally {\n         batch.close();\n       }\n     } catch (DBException e) {\n       throw new IOException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void storeOrUpdateRMDT(RMDelegationTokenIdentifier tokenId,\n      Long renewDate, boolean isUpdate) throws IOException {\n    String tokenKey \u003d getRMDTTokenNodeKey(tokenId);\n    RMDelegationTokenIdentifierData tokenData \u003d\n        new RMDelegationTokenIdentifierData(tokenId, renewDate);\n    LOG.debug(\"Storing token to {}\", tokenKey);\n    try {\n      WriteBatch batch \u003d db.createWriteBatch();\n      try {\n        batch.put(bytes(tokenKey), tokenData.toByteArray());\n        if(!isUpdate) {\n          ByteArrayOutputStream bs \u003d new ByteArrayOutputStream();\n          try (DataOutputStream ds \u003d new DataOutputStream(bs)) {\n            ds.writeInt(tokenId.getSequenceNumber());\n          }\n          LOG.debug(\"Storing {} to {}\", tokenId.getSequenceNumber(),\n              RM_DT_SEQUENCE_NUMBER_KEY);\n          batch.put(bytes(RM_DT_SEQUENCE_NUMBER_KEY), bs.toByteArray());\n        }\n        db.write(batch);\n      } finally {\n        batch.close();\n      }\n    } catch (DBException e) {\n      throw new IOException(e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/LeveldbRMStateStore.java",
      "extendedDetails": {}
    },
    "562a701945be3a672f9cb5a52cc6db2c1589ba2b": {
      "type": "Ymultichange(Yrename,Yparameterchange,Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-2958. Made RMStateStore not update the last sequence number when updating the delegation token. Contributed by Varun Saxena.\n",
      "commitDate": "05/01/15 1:33 PM",
      "commitName": "562a701945be3a672f9cb5a52cc6db2c1589ba2b",
      "commitAuthor": "Zhijie Shen",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-2958. Made RMStateStore not update the last sequence number when updating the delegation token. Contributed by Varun Saxena.\n",
          "commitDate": "05/01/15 1:33 PM",
          "commitName": "562a701945be3a672f9cb5a52cc6db2c1589ba2b",
          "commitAuthor": "Zhijie Shen",
          "commitDateOld": "23/12/14 10:14 PM",
          "commitNameOld": "4f18018b7abb405f38d269da096ec9fd80c81d9a",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 12.64,
          "commitsBetweenForRepo": 22,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,31 +1,31 @@\n-  protected void storeRMDelegationTokenAndSequenceNumberState(\n-      RMDelegationTokenIdentifier tokenId, Long renewDate,\n-      int latestSequenceNumber) throws IOException {\n+  private void storeOrUpdateRMDT(RMDelegationTokenIdentifier tokenId,\n+      Long renewDate, boolean isUpdate) throws IOException {\n     String tokenKey \u003d getRMDTTokenNodeKey(tokenId);\n     RMDelegationTokenIdentifierData tokenData \u003d\n         new RMDelegationTokenIdentifierData(tokenId, renewDate);\n-    ByteArrayOutputStream bs \u003d new ByteArrayOutputStream();\n-    DataOutputStream ds \u003d new DataOutputStream(bs);\n-    try {\n-      ds.writeInt(latestSequenceNumber);\n-    } finally {\n-      ds.close();\n-    }\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Storing token to \" + tokenKey);\n-      LOG.debug(\"Storing \" + latestSequenceNumber + \" to \"\n-          + RM_DT_SEQUENCE_NUMBER_KEY);\n     }\n     try {\n       WriteBatch batch \u003d db.createWriteBatch();\n       try {\n         batch.put(bytes(tokenKey), tokenData.toByteArray());\n-        batch.put(bytes(RM_DT_SEQUENCE_NUMBER_KEY), bs.toByteArray());\n+        if(!isUpdate) {\n+          ByteArrayOutputStream bs \u003d new ByteArrayOutputStream();\n+          try (DataOutputStream ds \u003d new DataOutputStream(bs)) {\n+            ds.writeInt(tokenId.getSequenceNumber());\n+          }\n+          if (LOG.isDebugEnabled()) {\n+            LOG.debug(\"Storing \" + tokenId.getSequenceNumber() + \" to \"\n+                + RM_DT_SEQUENCE_NUMBER_KEY);   \n+          }\n+          batch.put(bytes(RM_DT_SEQUENCE_NUMBER_KEY), bs.toByteArray());\n+        }\n         db.write(batch);\n       } finally {\n         batch.close();\n       }\n     } catch (DBException e) {\n       throw new IOException(e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void storeOrUpdateRMDT(RMDelegationTokenIdentifier tokenId,\n      Long renewDate, boolean isUpdate) throws IOException {\n    String tokenKey \u003d getRMDTTokenNodeKey(tokenId);\n    RMDelegationTokenIdentifierData tokenData \u003d\n        new RMDelegationTokenIdentifierData(tokenId, renewDate);\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Storing token to \" + tokenKey);\n    }\n    try {\n      WriteBatch batch \u003d db.createWriteBatch();\n      try {\n        batch.put(bytes(tokenKey), tokenData.toByteArray());\n        if(!isUpdate) {\n          ByteArrayOutputStream bs \u003d new ByteArrayOutputStream();\n          try (DataOutputStream ds \u003d new DataOutputStream(bs)) {\n            ds.writeInt(tokenId.getSequenceNumber());\n          }\n          if (LOG.isDebugEnabled()) {\n            LOG.debug(\"Storing \" + tokenId.getSequenceNumber() + \" to \"\n                + RM_DT_SEQUENCE_NUMBER_KEY);   \n          }\n          batch.put(bytes(RM_DT_SEQUENCE_NUMBER_KEY), bs.toByteArray());\n        }\n        db.write(batch);\n      } finally {\n        batch.close();\n      }\n    } catch (DBException e) {\n      throw new IOException(e);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/LeveldbRMStateStore.java",
          "extendedDetails": {
            "oldValue": "storeRMDelegationTokenAndSequenceNumberState",
            "newValue": "storeOrUpdateRMDT"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-2958. Made RMStateStore not update the last sequence number when updating the delegation token. Contributed by Varun Saxena.\n",
          "commitDate": "05/01/15 1:33 PM",
          "commitName": "562a701945be3a672f9cb5a52cc6db2c1589ba2b",
          "commitAuthor": "Zhijie Shen",
          "commitDateOld": "23/12/14 10:14 PM",
          "commitNameOld": "4f18018b7abb405f38d269da096ec9fd80c81d9a",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 12.64,
          "commitsBetweenForRepo": 22,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,31 +1,31 @@\n-  protected void storeRMDelegationTokenAndSequenceNumberState(\n-      RMDelegationTokenIdentifier tokenId, Long renewDate,\n-      int latestSequenceNumber) throws IOException {\n+  private void storeOrUpdateRMDT(RMDelegationTokenIdentifier tokenId,\n+      Long renewDate, boolean isUpdate) throws IOException {\n     String tokenKey \u003d getRMDTTokenNodeKey(tokenId);\n     RMDelegationTokenIdentifierData tokenData \u003d\n         new RMDelegationTokenIdentifierData(tokenId, renewDate);\n-    ByteArrayOutputStream bs \u003d new ByteArrayOutputStream();\n-    DataOutputStream ds \u003d new DataOutputStream(bs);\n-    try {\n-      ds.writeInt(latestSequenceNumber);\n-    } finally {\n-      ds.close();\n-    }\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Storing token to \" + tokenKey);\n-      LOG.debug(\"Storing \" + latestSequenceNumber + \" to \"\n-          + RM_DT_SEQUENCE_NUMBER_KEY);\n     }\n     try {\n       WriteBatch batch \u003d db.createWriteBatch();\n       try {\n         batch.put(bytes(tokenKey), tokenData.toByteArray());\n-        batch.put(bytes(RM_DT_SEQUENCE_NUMBER_KEY), bs.toByteArray());\n+        if(!isUpdate) {\n+          ByteArrayOutputStream bs \u003d new ByteArrayOutputStream();\n+          try (DataOutputStream ds \u003d new DataOutputStream(bs)) {\n+            ds.writeInt(tokenId.getSequenceNumber());\n+          }\n+          if (LOG.isDebugEnabled()) {\n+            LOG.debug(\"Storing \" + tokenId.getSequenceNumber() + \" to \"\n+                + RM_DT_SEQUENCE_NUMBER_KEY);   \n+          }\n+          batch.put(bytes(RM_DT_SEQUENCE_NUMBER_KEY), bs.toByteArray());\n+        }\n         db.write(batch);\n       } finally {\n         batch.close();\n       }\n     } catch (DBException e) {\n       throw new IOException(e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void storeOrUpdateRMDT(RMDelegationTokenIdentifier tokenId,\n      Long renewDate, boolean isUpdate) throws IOException {\n    String tokenKey \u003d getRMDTTokenNodeKey(tokenId);\n    RMDelegationTokenIdentifierData tokenData \u003d\n        new RMDelegationTokenIdentifierData(tokenId, renewDate);\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Storing token to \" + tokenKey);\n    }\n    try {\n      WriteBatch batch \u003d db.createWriteBatch();\n      try {\n        batch.put(bytes(tokenKey), tokenData.toByteArray());\n        if(!isUpdate) {\n          ByteArrayOutputStream bs \u003d new ByteArrayOutputStream();\n          try (DataOutputStream ds \u003d new DataOutputStream(bs)) {\n            ds.writeInt(tokenId.getSequenceNumber());\n          }\n          if (LOG.isDebugEnabled()) {\n            LOG.debug(\"Storing \" + tokenId.getSequenceNumber() + \" to \"\n                + RM_DT_SEQUENCE_NUMBER_KEY);   \n          }\n          batch.put(bytes(RM_DT_SEQUENCE_NUMBER_KEY), bs.toByteArray());\n        }\n        db.write(batch);\n      } finally {\n        batch.close();\n      }\n    } catch (DBException e) {\n      throw new IOException(e);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/LeveldbRMStateStore.java",
          "extendedDetails": {
            "oldValue": "[tokenId-RMDelegationTokenIdentifier, renewDate-Long, latestSequenceNumber-int]",
            "newValue": "[tokenId-RMDelegationTokenIdentifier, renewDate-Long, isUpdate-boolean]"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-2958. Made RMStateStore not update the last sequence number when updating the delegation token. Contributed by Varun Saxena.\n",
          "commitDate": "05/01/15 1:33 PM",
          "commitName": "562a701945be3a672f9cb5a52cc6db2c1589ba2b",
          "commitAuthor": "Zhijie Shen",
          "commitDateOld": "23/12/14 10:14 PM",
          "commitNameOld": "4f18018b7abb405f38d269da096ec9fd80c81d9a",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 12.64,
          "commitsBetweenForRepo": 22,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,31 +1,31 @@\n-  protected void storeRMDelegationTokenAndSequenceNumberState(\n-      RMDelegationTokenIdentifier tokenId, Long renewDate,\n-      int latestSequenceNumber) throws IOException {\n+  private void storeOrUpdateRMDT(RMDelegationTokenIdentifier tokenId,\n+      Long renewDate, boolean isUpdate) throws IOException {\n     String tokenKey \u003d getRMDTTokenNodeKey(tokenId);\n     RMDelegationTokenIdentifierData tokenData \u003d\n         new RMDelegationTokenIdentifierData(tokenId, renewDate);\n-    ByteArrayOutputStream bs \u003d new ByteArrayOutputStream();\n-    DataOutputStream ds \u003d new DataOutputStream(bs);\n-    try {\n-      ds.writeInt(latestSequenceNumber);\n-    } finally {\n-      ds.close();\n-    }\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Storing token to \" + tokenKey);\n-      LOG.debug(\"Storing \" + latestSequenceNumber + \" to \"\n-          + RM_DT_SEQUENCE_NUMBER_KEY);\n     }\n     try {\n       WriteBatch batch \u003d db.createWriteBatch();\n       try {\n         batch.put(bytes(tokenKey), tokenData.toByteArray());\n-        batch.put(bytes(RM_DT_SEQUENCE_NUMBER_KEY), bs.toByteArray());\n+        if(!isUpdate) {\n+          ByteArrayOutputStream bs \u003d new ByteArrayOutputStream();\n+          try (DataOutputStream ds \u003d new DataOutputStream(bs)) {\n+            ds.writeInt(tokenId.getSequenceNumber());\n+          }\n+          if (LOG.isDebugEnabled()) {\n+            LOG.debug(\"Storing \" + tokenId.getSequenceNumber() + \" to \"\n+                + RM_DT_SEQUENCE_NUMBER_KEY);   \n+          }\n+          batch.put(bytes(RM_DT_SEQUENCE_NUMBER_KEY), bs.toByteArray());\n+        }\n         db.write(batch);\n       } finally {\n         batch.close();\n       }\n     } catch (DBException e) {\n       throw new IOException(e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void storeOrUpdateRMDT(RMDelegationTokenIdentifier tokenId,\n      Long renewDate, boolean isUpdate) throws IOException {\n    String tokenKey \u003d getRMDTTokenNodeKey(tokenId);\n    RMDelegationTokenIdentifierData tokenData \u003d\n        new RMDelegationTokenIdentifierData(tokenId, renewDate);\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Storing token to \" + tokenKey);\n    }\n    try {\n      WriteBatch batch \u003d db.createWriteBatch();\n      try {\n        batch.put(bytes(tokenKey), tokenData.toByteArray());\n        if(!isUpdate) {\n          ByteArrayOutputStream bs \u003d new ByteArrayOutputStream();\n          try (DataOutputStream ds \u003d new DataOutputStream(bs)) {\n            ds.writeInt(tokenId.getSequenceNumber());\n          }\n          if (LOG.isDebugEnabled()) {\n            LOG.debug(\"Storing \" + tokenId.getSequenceNumber() + \" to \"\n                + RM_DT_SEQUENCE_NUMBER_KEY);   \n          }\n          batch.put(bytes(RM_DT_SEQUENCE_NUMBER_KEY), bs.toByteArray());\n        }\n        db.write(batch);\n      } finally {\n        batch.close();\n      }\n    } catch (DBException e) {\n      throw new IOException(e);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/LeveldbRMStateStore.java",
          "extendedDetails": {
            "oldValue": "[protected]",
            "newValue": "[private]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-2958. Made RMStateStore not update the last sequence number when updating the delegation token. Contributed by Varun Saxena.\n",
          "commitDate": "05/01/15 1:33 PM",
          "commitName": "562a701945be3a672f9cb5a52cc6db2c1589ba2b",
          "commitAuthor": "Zhijie Shen",
          "commitDateOld": "23/12/14 10:14 PM",
          "commitNameOld": "4f18018b7abb405f38d269da096ec9fd80c81d9a",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 12.64,
          "commitsBetweenForRepo": 22,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,31 +1,31 @@\n-  protected void storeRMDelegationTokenAndSequenceNumberState(\n-      RMDelegationTokenIdentifier tokenId, Long renewDate,\n-      int latestSequenceNumber) throws IOException {\n+  private void storeOrUpdateRMDT(RMDelegationTokenIdentifier tokenId,\n+      Long renewDate, boolean isUpdate) throws IOException {\n     String tokenKey \u003d getRMDTTokenNodeKey(tokenId);\n     RMDelegationTokenIdentifierData tokenData \u003d\n         new RMDelegationTokenIdentifierData(tokenId, renewDate);\n-    ByteArrayOutputStream bs \u003d new ByteArrayOutputStream();\n-    DataOutputStream ds \u003d new DataOutputStream(bs);\n-    try {\n-      ds.writeInt(latestSequenceNumber);\n-    } finally {\n-      ds.close();\n-    }\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Storing token to \" + tokenKey);\n-      LOG.debug(\"Storing \" + latestSequenceNumber + \" to \"\n-          + RM_DT_SEQUENCE_NUMBER_KEY);\n     }\n     try {\n       WriteBatch batch \u003d db.createWriteBatch();\n       try {\n         batch.put(bytes(tokenKey), tokenData.toByteArray());\n-        batch.put(bytes(RM_DT_SEQUENCE_NUMBER_KEY), bs.toByteArray());\n+        if(!isUpdate) {\n+          ByteArrayOutputStream bs \u003d new ByteArrayOutputStream();\n+          try (DataOutputStream ds \u003d new DataOutputStream(bs)) {\n+            ds.writeInt(tokenId.getSequenceNumber());\n+          }\n+          if (LOG.isDebugEnabled()) {\n+            LOG.debug(\"Storing \" + tokenId.getSequenceNumber() + \" to \"\n+                + RM_DT_SEQUENCE_NUMBER_KEY);   \n+          }\n+          batch.put(bytes(RM_DT_SEQUENCE_NUMBER_KEY), bs.toByteArray());\n+        }\n         db.write(batch);\n       } finally {\n         batch.close();\n       }\n     } catch (DBException e) {\n       throw new IOException(e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void storeOrUpdateRMDT(RMDelegationTokenIdentifier tokenId,\n      Long renewDate, boolean isUpdate) throws IOException {\n    String tokenKey \u003d getRMDTTokenNodeKey(tokenId);\n    RMDelegationTokenIdentifierData tokenData \u003d\n        new RMDelegationTokenIdentifierData(tokenId, renewDate);\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Storing token to \" + tokenKey);\n    }\n    try {\n      WriteBatch batch \u003d db.createWriteBatch();\n      try {\n        batch.put(bytes(tokenKey), tokenData.toByteArray());\n        if(!isUpdate) {\n          ByteArrayOutputStream bs \u003d new ByteArrayOutputStream();\n          try (DataOutputStream ds \u003d new DataOutputStream(bs)) {\n            ds.writeInt(tokenId.getSequenceNumber());\n          }\n          if (LOG.isDebugEnabled()) {\n            LOG.debug(\"Storing \" + tokenId.getSequenceNumber() + \" to \"\n                + RM_DT_SEQUENCE_NUMBER_KEY);   \n          }\n          batch.put(bytes(RM_DT_SEQUENCE_NUMBER_KEY), bs.toByteArray());\n        }\n        db.write(batch);\n      } finally {\n        batch.close();\n      }\n    } catch (DBException e) {\n      throw new IOException(e);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/LeveldbRMStateStore.java",
          "extendedDetails": {}
        }
      ]
    },
    "a7fba0bc28764e0fb36c335ea60cc58079fe007f": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2765. Added leveldb-based implementation for RMStateStore. Contributed by Jason Lowe\n",
      "commitDate": "01/12/14 4:38 PM",
      "commitName": "a7fba0bc28764e0fb36c335ea60cc58079fe007f",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,31 @@\n+  protected void storeRMDelegationTokenAndSequenceNumberState(\n+      RMDelegationTokenIdentifier tokenId, Long renewDate,\n+      int latestSequenceNumber) throws IOException {\n+    String tokenKey \u003d getRMDTTokenNodeKey(tokenId);\n+    RMDelegationTokenIdentifierData tokenData \u003d\n+        new RMDelegationTokenIdentifierData(tokenId, renewDate);\n+    ByteArrayOutputStream bs \u003d new ByteArrayOutputStream();\n+    DataOutputStream ds \u003d new DataOutputStream(bs);\n+    try {\n+      ds.writeInt(latestSequenceNumber);\n+    } finally {\n+      ds.close();\n+    }\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"Storing token to \" + tokenKey);\n+      LOG.debug(\"Storing \" + latestSequenceNumber + \" to \"\n+          + RM_DT_SEQUENCE_NUMBER_KEY);\n+    }\n+    try {\n+      WriteBatch batch \u003d db.createWriteBatch();\n+      try {\n+        batch.put(bytes(tokenKey), tokenData.toByteArray());\n+        batch.put(bytes(RM_DT_SEQUENCE_NUMBER_KEY), bs.toByteArray());\n+        db.write(batch);\n+      } finally {\n+        batch.close();\n+      }\n+    } catch (DBException e) {\n+      throw new IOException(e);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void storeRMDelegationTokenAndSequenceNumberState(\n      RMDelegationTokenIdentifier tokenId, Long renewDate,\n      int latestSequenceNumber) throws IOException {\n    String tokenKey \u003d getRMDTTokenNodeKey(tokenId);\n    RMDelegationTokenIdentifierData tokenData \u003d\n        new RMDelegationTokenIdentifierData(tokenId, renewDate);\n    ByteArrayOutputStream bs \u003d new ByteArrayOutputStream();\n    DataOutputStream ds \u003d new DataOutputStream(bs);\n    try {\n      ds.writeInt(latestSequenceNumber);\n    } finally {\n      ds.close();\n    }\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Storing token to \" + tokenKey);\n      LOG.debug(\"Storing \" + latestSequenceNumber + \" to \"\n          + RM_DT_SEQUENCE_NUMBER_KEY);\n    }\n    try {\n      WriteBatch batch \u003d db.createWriteBatch();\n      try {\n        batch.put(bytes(tokenKey), tokenData.toByteArray());\n        batch.put(bytes(RM_DT_SEQUENCE_NUMBER_KEY), bs.toByteArray());\n        db.write(batch);\n      } finally {\n        batch.close();\n      }\n    } catch (DBException e) {\n      throw new IOException(e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/LeveldbRMStateStore.java"
    }
  }
}