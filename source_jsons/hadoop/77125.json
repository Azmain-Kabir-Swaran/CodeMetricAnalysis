{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "IOUtils.java",
  "functionName": "listDirectory",
  "functionId": "listDirectory___dir-File__filter-FilenameFilter",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/IOUtils.java",
  "functionStartLine": 384,
  "functionEndLine": 402,
  "numCommitsSeen": 25,
  "timeTaken": 1188,
  "changeHistory": [
    "092ebdf885468a2bf79cbfb168286b7cddc4a0db",
    "9937eef7f7f04a7dd3d504ae7ec5852d488a1f6a"
  ],
  "changeHistoryShort": {
    "092ebdf885468a2bf79cbfb168286b7cddc4a0db": "Ybodychange",
    "9937eef7f7f04a7dd3d504ae7ec5852d488a1f6a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "092ebdf885468a2bf79cbfb168286b7cddc4a0db": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12940. Fix warnings from Spotbugs in hadoop-common.\n",
      "commitDate": "22/06/17 6:28 PM",
      "commitName": "092ebdf885468a2bf79cbfb168286b7cddc4a0db",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "22/06/17 1:42 AM",
      "commitNameOld": "b64951905e64f6fed581c28634be6ed15c190633",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 0.7,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,19 @@\n   public static List\u003cString\u003e listDirectory(File dir, FilenameFilter filter)\n       throws IOException {\n     ArrayList\u003cString\u003e list \u003d new ArrayList\u003cString\u003e ();\n     try (DirectoryStream\u003cPath\u003e stream \u003d\n              Files.newDirectoryStream(dir.toPath())) {\n       for (Path entry: stream) {\n-        String fileName \u003d entry.getFileName().toString();\n-        if ((filter \u003d\u003d null) || filter.accept(dir, fileName)) {\n-          list.add(fileName);\n+        Path fileName \u003d entry.getFileName();\n+        if (fileName !\u003d null) {\n+          String fileNameStr \u003d fileName.toString();\n+          if ((filter \u003d\u003d null) || filter.accept(dir, fileNameStr)) {\n+            list.add(fileNameStr);\n+          }\n         }\n       }\n     } catch (DirectoryIteratorException e) {\n       throw e.getCause();\n     }\n     return list;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static List\u003cString\u003e listDirectory(File dir, FilenameFilter filter)\n      throws IOException {\n    ArrayList\u003cString\u003e list \u003d new ArrayList\u003cString\u003e ();\n    try (DirectoryStream\u003cPath\u003e stream \u003d\n             Files.newDirectoryStream(dir.toPath())) {\n      for (Path entry: stream) {\n        Path fileName \u003d entry.getFileName();\n        if (fileName !\u003d null) {\n          String fileNameStr \u003d fileName.toString();\n          if ((filter \u003d\u003d null) || filter.accept(dir, fileNameStr)) {\n            list.add(fileNameStr);\n          }\n        }\n      }\n    } catch (DirectoryIteratorException e) {\n      throw e.getCause();\n    }\n    return list;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/IOUtils.java",
      "extendedDetails": {}
    },
    "9937eef7f7f04a7dd3d504ae7ec5852d488a1f6a": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-11421. Add IOUtils#listDirectory (cmccabe)\n",
      "commitDate": "17/12/14 3:18 PM",
      "commitName": "9937eef7f7f04a7dd3d504ae7ec5852d488a1f6a",
      "commitAuthor": "Colin Patrick Mccabe",
      "diff": "@@ -0,0 +1,16 @@\n+  public static List\u003cString\u003e listDirectory(File dir, FilenameFilter filter)\n+      throws IOException {\n+    ArrayList\u003cString\u003e list \u003d new ArrayList\u003cString\u003e ();\n+    try (DirectoryStream\u003cPath\u003e stream \u003d\n+             Files.newDirectoryStream(dir.toPath())) {\n+      for (Path entry: stream) {\n+        String fileName \u003d entry.getFileName().toString();\n+        if ((filter \u003d\u003d null) || filter.accept(dir, fileName)) {\n+          list.add(fileName);\n+        }\n+      }\n+    } catch (DirectoryIteratorException e) {\n+      throw e.getCause();\n+    }\n+    return list;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static List\u003cString\u003e listDirectory(File dir, FilenameFilter filter)\n      throws IOException {\n    ArrayList\u003cString\u003e list \u003d new ArrayList\u003cString\u003e ();\n    try (DirectoryStream\u003cPath\u003e stream \u003d\n             Files.newDirectoryStream(dir.toPath())) {\n      for (Path entry: stream) {\n        String fileName \u003d entry.getFileName().toString();\n        if ((filter \u003d\u003d null) || filter.accept(dir, fileName)) {\n          list.add(fileName);\n        }\n      }\n    } catch (DirectoryIteratorException e) {\n      throw e.getCause();\n    }\n    return list;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/IOUtils.java"
    }
  }
}