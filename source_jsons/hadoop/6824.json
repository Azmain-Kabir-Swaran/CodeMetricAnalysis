{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSImageSerialization.java",
  "functionName": "readCacheDirectiveInfo",
  "functionId": "readCacheDirectiveInfo___in-DataInput",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageSerialization.java",
  "functionStartLine": 545,
  "functionEndLine": 569,
  "numCommitsSeen": 62,
  "timeTaken": 2113,
  "changeHistory": [
    "991c453ca3ac141a3f286f74af8401f83c38b230"
  ],
  "changeHistoryShort": {
    "991c453ca3ac141a3f286f74af8401f83c38b230": "Yintroduced"
  },
  "changeHistoryDetails": {
    "991c453ca3ac141a3f286f74af8401f83c38b230": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-5431. Support cachepool-based limit management in path-based caching. (awang via cmccabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1551651 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/12/13 10:47 AM",
      "commitName": "991c453ca3ac141a3f286f74af8401f83c38b230",
      "commitAuthor": "Colin McCabe",
      "diff": "@@ -0,0 +1,25 @@\n+  public static CacheDirectiveInfo readCacheDirectiveInfo(DataInput in)\n+      throws IOException {\n+    CacheDirectiveInfo.Builder builder \u003d\n+        new CacheDirectiveInfo.Builder();\n+    builder.setId(readLong(in));\n+    int flags \u003d in.readInt();\n+    if ((flags \u0026 0x1) !\u003d 0) {\n+      builder.setPath(new Path(readString(in)));\n+    }\n+    if ((flags \u0026 0x2) !\u003d 0) {\n+      builder.setReplication(readShort(in));\n+    }\n+    if ((flags \u0026 0x4) !\u003d 0) {\n+      builder.setPool(readString(in));\n+    }\n+    if ((flags \u0026 0x8) !\u003d 0) {\n+      builder.setExpiration(\n+          CacheDirectiveInfo.Expiration.newAbsolute(readLong(in)));\n+    }\n+    if ((flags \u0026 ~0xF) !\u003d 0) {\n+      throw new IOException(\"unknown flags set in \" +\n+          \"ModifyCacheDirectiveInfoOp: \" + flags);\n+    }\n+    return builder.build();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static CacheDirectiveInfo readCacheDirectiveInfo(DataInput in)\n      throws IOException {\n    CacheDirectiveInfo.Builder builder \u003d\n        new CacheDirectiveInfo.Builder();\n    builder.setId(readLong(in));\n    int flags \u003d in.readInt();\n    if ((flags \u0026 0x1) !\u003d 0) {\n      builder.setPath(new Path(readString(in)));\n    }\n    if ((flags \u0026 0x2) !\u003d 0) {\n      builder.setReplication(readShort(in));\n    }\n    if ((flags \u0026 0x4) !\u003d 0) {\n      builder.setPool(readString(in));\n    }\n    if ((flags \u0026 0x8) !\u003d 0) {\n      builder.setExpiration(\n          CacheDirectiveInfo.Expiration.newAbsolute(readLong(in)));\n    }\n    if ((flags \u0026 ~0xF) !\u003d 0) {\n      throw new IOException(\"unknown flags set in \" +\n          \"ModifyCacheDirectiveInfoOp: \" + flags);\n    }\n    return builder.build();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageSerialization.java"
    }
  }
}