{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSImageFormat.java",
  "functionName": "loadINodeDirectoryAttributes",
  "functionId": "loadINodeDirectoryAttributes___in-DataInput",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormat.java",
  "functionStartLine": 905,
  "functionEndLine": 929,
  "numCommitsSeen": 127,
  "timeTaken": 3739,
  "changeHistory": [
    "f2231cebcddc80f0b753c4a7cb45ee4040846951",
    "5dae97a584d30cef3e34141edfaca49c4ec57913",
    "ac23a55547716df29b3e25c98a113399e184d9d1",
    "d03acc756094a332f98167426a39db8faf38f450",
    "14f1f76bf609704d36a1699c05fa85750cefe917",
    "00067895a01c66d53715b50bbcb3605efd6425f2",
    "c02953dbc344b39e0eb0d13fe2d899cdcdc46380"
  ],
  "changeHistoryShort": {
    "f2231cebcddc80f0b753c4a7cb45ee4040846951": "Ybodychange",
    "5dae97a584d30cef3e34141edfaca49c4ec57913": "Ybodychange",
    "ac23a55547716df29b3e25c98a113399e184d9d1": "Ybodychange",
    "d03acc756094a332f98167426a39db8faf38f450": "Ybodychange",
    "14f1f76bf609704d36a1699c05fa85750cefe917": "Ybodychange",
    "00067895a01c66d53715b50bbcb3605efd6425f2": "Ybodychange",
    "c02953dbc344b39e0eb0d13fe2d899cdcdc46380": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f2231cebcddc80f0b753c4a7cb45ee4040846951": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7775. Use consistent naming for NN-internal quota related types and functions. (Contributed bu Xiaoyu Yao)\n",
      "commitDate": "13/02/15 9:01 PM",
      "commitName": "f2231cebcddc80f0b753c4a7cb45ee4040846951",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "11/02/15 10:41 AM",
      "commitNameOld": "5dae97a584d30cef3e34141edfaca49c4ec57913",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 2.43,
      "commitsBetweenForRepo": 58,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,25 @@\n     public INodeDirectoryAttributes loadINodeDirectoryAttributes(DataInput in)\n         throws IOException {\n       final int layoutVersion \u003d getLayoutVersion();\n       \n       if (!NameNodeLayoutVersion.supports(\n           LayoutVersion.Feature.OPTIMIZE_SNAPSHOT_INODES, layoutVersion)) {\n         return loadINodeWithLocalName(true, in, false).asDirectory();\n       }\n   \n       final byte[] name \u003d FSImageSerialization.readLocalName(in);\n       final PermissionStatus permissions \u003d PermissionStatus.read(in);\n       final long modificationTime \u003d in.readLong();\n       \n-      //read quotas\n+      // Read quotas: quota by storage type does not need to be processed below.\n+      // It is handled only in protobuf based FsImagePBINode class for newer\n+      // fsImages. Tools using this class such as legacy-mode of offline image viewer\n+      // should only load legacy FSImages without newer features.\n       final long nsQuota \u003d in.readLong();\n       final long dsQuota \u003d in.readLong();\n \n       return nsQuota \u003d\u003d -1L \u0026\u0026 dsQuota \u003d\u003d -1L ? new INodeDirectoryAttributes.SnapshotCopy(\n           name, permissions, null, modificationTime, null)\n         : new INodeDirectoryAttributes.CopyWithQuota(name, permissions,\n             null, modificationTime, nsQuota, dsQuota, null, null);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public INodeDirectoryAttributes loadINodeDirectoryAttributes(DataInput in)\n        throws IOException {\n      final int layoutVersion \u003d getLayoutVersion();\n      \n      if (!NameNodeLayoutVersion.supports(\n          LayoutVersion.Feature.OPTIMIZE_SNAPSHOT_INODES, layoutVersion)) {\n        return loadINodeWithLocalName(true, in, false).asDirectory();\n      }\n  \n      final byte[] name \u003d FSImageSerialization.readLocalName(in);\n      final PermissionStatus permissions \u003d PermissionStatus.read(in);\n      final long modificationTime \u003d in.readLong();\n      \n      // Read quotas: quota by storage type does not need to be processed below.\n      // It is handled only in protobuf based FsImagePBINode class for newer\n      // fsImages. Tools using this class such as legacy-mode of offline image viewer\n      // should only load legacy FSImages without newer features.\n      final long nsQuota \u003d in.readLong();\n      final long dsQuota \u003d in.readLong();\n\n      return nsQuota \u003d\u003d -1L \u0026\u0026 dsQuota \u003d\u003d -1L ? new INodeDirectoryAttributes.SnapshotCopy(\n          name, permissions, null, modificationTime, null)\n        : new INodeDirectoryAttributes.CopyWithQuota(name, permissions,\n            null, modificationTime, nsQuota, dsQuota, null, null);\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormat.java",
      "extendedDetails": {}
    },
    "5dae97a584d30cef3e34141edfaca49c4ec57913": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7723. Quota By Storage Type namenode implemenation. (Contributed by Xiaoyu Yao)\n",
      "commitDate": "11/02/15 10:41 AM",
      "commitName": "5dae97a584d30cef3e34141edfaca49c4ec57913",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "08/02/15 11:51 AM",
      "commitNameOld": "1382ae525c67bf95d8f3a436b547dbc72cfbb177",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 2.95,
      "commitsBetweenForRepo": 40,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n     public INodeDirectoryAttributes loadINodeDirectoryAttributes(DataInput in)\n         throws IOException {\n       final int layoutVersion \u003d getLayoutVersion();\n       \n       if (!NameNodeLayoutVersion.supports(\n           LayoutVersion.Feature.OPTIMIZE_SNAPSHOT_INODES, layoutVersion)) {\n         return loadINodeWithLocalName(true, in, false).asDirectory();\n       }\n   \n       final byte[] name \u003d FSImageSerialization.readLocalName(in);\n       final PermissionStatus permissions \u003d PermissionStatus.read(in);\n       final long modificationTime \u003d in.readLong();\n       \n       //read quotas\n       final long nsQuota \u003d in.readLong();\n       final long dsQuota \u003d in.readLong();\n-  \n+\n       return nsQuota \u003d\u003d -1L \u0026\u0026 dsQuota \u003d\u003d -1L ? new INodeDirectoryAttributes.SnapshotCopy(\n           name, permissions, null, modificationTime, null)\n         : new INodeDirectoryAttributes.CopyWithQuota(name, permissions,\n-            null, modificationTime, nsQuota, dsQuota, null);\n+            null, modificationTime, nsQuota, dsQuota, null, null);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public INodeDirectoryAttributes loadINodeDirectoryAttributes(DataInput in)\n        throws IOException {\n      final int layoutVersion \u003d getLayoutVersion();\n      \n      if (!NameNodeLayoutVersion.supports(\n          LayoutVersion.Feature.OPTIMIZE_SNAPSHOT_INODES, layoutVersion)) {\n        return loadINodeWithLocalName(true, in, false).asDirectory();\n      }\n  \n      final byte[] name \u003d FSImageSerialization.readLocalName(in);\n      final PermissionStatus permissions \u003d PermissionStatus.read(in);\n      final long modificationTime \u003d in.readLong();\n      \n      //read quotas\n      final long nsQuota \u003d in.readLong();\n      final long dsQuota \u003d in.readLong();\n\n      return nsQuota \u003d\u003d -1L \u0026\u0026 dsQuota \u003d\u003d -1L ? new INodeDirectoryAttributes.SnapshotCopy(\n          name, permissions, null, modificationTime, null)\n        : new INodeDirectoryAttributes.CopyWithQuota(name, permissions,\n            null, modificationTime, nsQuota, dsQuota, null, null);\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormat.java",
      "extendedDetails": {}
    },
    "ac23a55547716df29b3e25c98a113399e184d9d1": {
      "type": "Ybodychange",
      "commitMessage": "Merge HDFS-2006 HDFS XAttrs branch to Trunk\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1596575 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/05/14 6:57 AM",
      "commitName": "ac23a55547716df29b3e25c98a113399e184d9d1",
      "commitAuthor": "Uma Maheswara Rao G",
      "commitDateOld": "13/05/14 6:15 PM",
      "commitNameOld": "97f58955a6045b373ab73653bf26ab5922b00cf3",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 7.53,
      "commitsBetweenForRepo": 42,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n     public INodeDirectoryAttributes loadINodeDirectoryAttributes(DataInput in)\n         throws IOException {\n       final int layoutVersion \u003d getLayoutVersion();\n       \n       if (!NameNodeLayoutVersion.supports(\n           LayoutVersion.Feature.OPTIMIZE_SNAPSHOT_INODES, layoutVersion)) {\n         return loadINodeWithLocalName(true, in, false).asDirectory();\n       }\n   \n       final byte[] name \u003d FSImageSerialization.readLocalName(in);\n       final PermissionStatus permissions \u003d PermissionStatus.read(in);\n       final long modificationTime \u003d in.readLong();\n       \n       //read quotas\n       final long nsQuota \u003d in.readLong();\n       final long dsQuota \u003d in.readLong();\n   \n-      return nsQuota \u003d\u003d -1L \u0026\u0026 dsQuota \u003d\u003d -1L?\n-          new INodeDirectoryAttributes.SnapshotCopy(name, permissions, null, modificationTime)\n+      return nsQuota \u003d\u003d -1L \u0026\u0026 dsQuota \u003d\u003d -1L ? new INodeDirectoryAttributes.SnapshotCopy(\n+          name, permissions, null, modificationTime, null)\n         : new INodeDirectoryAttributes.CopyWithQuota(name, permissions,\n-            null, modificationTime, nsQuota, dsQuota);\n+            null, modificationTime, nsQuota, dsQuota, null);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public INodeDirectoryAttributes loadINodeDirectoryAttributes(DataInput in)\n        throws IOException {\n      final int layoutVersion \u003d getLayoutVersion();\n      \n      if (!NameNodeLayoutVersion.supports(\n          LayoutVersion.Feature.OPTIMIZE_SNAPSHOT_INODES, layoutVersion)) {\n        return loadINodeWithLocalName(true, in, false).asDirectory();\n      }\n  \n      final byte[] name \u003d FSImageSerialization.readLocalName(in);\n      final PermissionStatus permissions \u003d PermissionStatus.read(in);\n      final long modificationTime \u003d in.readLong();\n      \n      //read quotas\n      final long nsQuota \u003d in.readLong();\n      final long dsQuota \u003d in.readLong();\n  \n      return nsQuota \u003d\u003d -1L \u0026\u0026 dsQuota \u003d\u003d -1L ? new INodeDirectoryAttributes.SnapshotCopy(\n          name, permissions, null, modificationTime, null)\n        : new INodeDirectoryAttributes.CopyWithQuota(name, permissions,\n            null, modificationTime, nsQuota, dsQuota, null);\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormat.java",
      "extendedDetails": {}
    },
    "d03acc756094a332f98167426a39db8faf38f450": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5914. Incorporate ACLs with the changes from HDFS-5698. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4685@1566991 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/02/14 10:25 PM",
      "commitName": "d03acc756094a332f98167426a39db8faf38f450",
      "commitAuthor": "Chris Nauroth",
      "commitDateOld": "09/02/14 11:45 AM",
      "commitNameOld": "2ed075e1bb085a2897fbefda53b1c1db54c81d92",
      "commitAuthorOld": "",
      "daysBetweenCommits": 1.44,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,21 @@\n     public INodeDirectoryAttributes loadINodeDirectoryAttributes(DataInput in)\n         throws IOException {\n       final int layoutVersion \u003d getLayoutVersion();\n       \n       if (!LayoutVersion.supports(Feature.OPTIMIZE_SNAPSHOT_INODES, layoutVersion)) {\n         return loadINodeWithLocalName(true, in, false).asDirectory();\n       }\n   \n       final byte[] name \u003d FSImageSerialization.readLocalName(in);\n       final PermissionStatus permissions \u003d PermissionStatus.read(in);\n       final long modificationTime \u003d in.readLong();\n       \n       //read quotas\n       final long nsQuota \u003d in.readLong();\n       final long dsQuota \u003d in.readLong();\n-      AclFeature aclFeature \u003d permissions.getPermission().getAclBit() ?\n-          loadAclFeature(in, layoutVersion) : null;\n   \n       return nsQuota \u003d\u003d -1L \u0026\u0026 dsQuota \u003d\u003d -1L?\n-          new INodeDirectoryAttributes.SnapshotCopy(name, permissions,\n-            aclFeature, modificationTime)\n+          new INodeDirectoryAttributes.SnapshotCopy(name, permissions, null, modificationTime)\n         : new INodeDirectoryAttributes.CopyWithQuota(name, permissions,\n-            aclFeature, modificationTime, nsQuota, dsQuota);\n+            null, modificationTime, nsQuota, dsQuota);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public INodeDirectoryAttributes loadINodeDirectoryAttributes(DataInput in)\n        throws IOException {\n      final int layoutVersion \u003d getLayoutVersion();\n      \n      if (!LayoutVersion.supports(Feature.OPTIMIZE_SNAPSHOT_INODES, layoutVersion)) {\n        return loadINodeWithLocalName(true, in, false).asDirectory();\n      }\n  \n      final byte[] name \u003d FSImageSerialization.readLocalName(in);\n      final PermissionStatus permissions \u003d PermissionStatus.read(in);\n      final long modificationTime \u003d in.readLong();\n      \n      //read quotas\n      final long nsQuota \u003d in.readLong();\n      final long dsQuota \u003d in.readLong();\n  \n      return nsQuota \u003d\u003d -1L \u0026\u0026 dsQuota \u003d\u003d -1L?\n          new INodeDirectoryAttributes.SnapshotCopy(name, permissions, null, modificationTime)\n        : new INodeDirectoryAttributes.CopyWithQuota(name, permissions,\n            null, modificationTime, nsQuota, dsQuota);\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormat.java",
      "extendedDetails": {}
    },
    "14f1f76bf609704d36a1699c05fa85750cefe917": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5614. NameNode: implement handling of ACLs in combination with snapshots. Contributed by Chris Nauroth.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4685@1563304 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/01/14 2:21 PM",
      "commitName": "14f1f76bf609704d36a1699c05fa85750cefe917",
      "commitAuthor": "Chris Nauroth",
      "commitDateOld": "17/01/14 10:50 PM",
      "commitNameOld": "8a9a6dbd7e8da2fff7e769b8f6a0aa220faad28f",
      "commitAuthorOld": "",
      "daysBetweenCommits": 13.65,
      "commitsBetweenForRepo": 75,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,24 @@\n     public INodeDirectoryAttributes loadINodeDirectoryAttributes(DataInput in)\n         throws IOException {\n       final int layoutVersion \u003d getLayoutVersion();\n       \n       if (!LayoutVersion.supports(Feature.OPTIMIZE_SNAPSHOT_INODES, layoutVersion)) {\n         return loadINodeWithLocalName(true, in, false).asDirectory();\n       }\n   \n       final byte[] name \u003d FSImageSerialization.readLocalName(in);\n       final PermissionStatus permissions \u003d PermissionStatus.read(in);\n       final long modificationTime \u003d in.readLong();\n       \n       //read quotas\n       final long nsQuota \u003d in.readLong();\n       final long dsQuota \u003d in.readLong();\n+      AclFeature aclFeature \u003d permissions.getPermission().getAclBit() ?\n+          loadAclFeature(in, layoutVersion) : null;\n   \n       return nsQuota \u003d\u003d -1L \u0026\u0026 dsQuota \u003d\u003d -1L?\n-          new INodeDirectoryAttributes.SnapshotCopy(name, permissions, modificationTime)\n+          new INodeDirectoryAttributes.SnapshotCopy(name, permissions,\n+            aclFeature, modificationTime)\n         : new INodeDirectoryAttributes.CopyWithQuota(name, permissions,\n-            modificationTime, nsQuota, dsQuota);\n+            aclFeature, modificationTime, nsQuota, dsQuota);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public INodeDirectoryAttributes loadINodeDirectoryAttributes(DataInput in)\n        throws IOException {\n      final int layoutVersion \u003d getLayoutVersion();\n      \n      if (!LayoutVersion.supports(Feature.OPTIMIZE_SNAPSHOT_INODES, layoutVersion)) {\n        return loadINodeWithLocalName(true, in, false).asDirectory();\n      }\n  \n      final byte[] name \u003d FSImageSerialization.readLocalName(in);\n      final PermissionStatus permissions \u003d PermissionStatus.read(in);\n      final long modificationTime \u003d in.readLong();\n      \n      //read quotas\n      final long nsQuota \u003d in.readLong();\n      final long dsQuota \u003d in.readLong();\n      AclFeature aclFeature \u003d permissions.getPermission().getAclBit() ?\n          loadAclFeature(in, layoutVersion) : null;\n  \n      return nsQuota \u003d\u003d -1L \u0026\u0026 dsQuota \u003d\u003d -1L?\n          new INodeDirectoryAttributes.SnapshotCopy(name, permissions,\n            aclFeature, modificationTime)\n        : new INodeDirectoryAttributes.CopyWithQuota(name, permissions,\n            aclFeature, modificationTime, nsQuota, dsQuota);\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormat.java",
      "extendedDetails": {}
    },
    "00067895a01c66d53715b50bbcb3605efd6425f2": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5754. Split LayoutVerion into NameNodeLayoutVersion and DataNodeLayoutVersion. Contributed by Brandon Li\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-5535@1563041 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/01/14 7:21 PM",
      "commitName": "00067895a01c66d53715b50bbcb3605efd6425f2",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "16/01/14 5:32 PM",
      "commitNameOld": "a7ec44d41b0ad1fa133408a10caaae32a27ea569",
      "commitAuthorOld": "Colin McCabe",
      "daysBetweenCommits": 14.08,
      "commitsBetweenForRepo": 56,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,22 @@\n     public INodeDirectoryAttributes loadINodeDirectoryAttributes(DataInput in)\n         throws IOException {\n       final int layoutVersion \u003d getLayoutVersion();\n       \n-      if (!LayoutVersion.supports(Feature.OPTIMIZE_SNAPSHOT_INODES, layoutVersion)) {\n+      if (!NameNodeLayoutVersion.supports(\n+          LayoutVersion.Feature.OPTIMIZE_SNAPSHOT_INODES, layoutVersion)) {\n         return loadINodeWithLocalName(true, in, false).asDirectory();\n       }\n   \n       final byte[] name \u003d FSImageSerialization.readLocalName(in);\n       final PermissionStatus permissions \u003d PermissionStatus.read(in);\n       final long modificationTime \u003d in.readLong();\n       \n       //read quotas\n       final long nsQuota \u003d in.readLong();\n       final long dsQuota \u003d in.readLong();\n   \n       return nsQuota \u003d\u003d -1L \u0026\u0026 dsQuota \u003d\u003d -1L?\n           new INodeDirectoryAttributes.SnapshotCopy(name, permissions, modificationTime)\n         : new INodeDirectoryAttributes.CopyWithQuota(name, permissions,\n             modificationTime, nsQuota, dsQuota);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public INodeDirectoryAttributes loadINodeDirectoryAttributes(DataInput in)\n        throws IOException {\n      final int layoutVersion \u003d getLayoutVersion();\n      \n      if (!NameNodeLayoutVersion.supports(\n          LayoutVersion.Feature.OPTIMIZE_SNAPSHOT_INODES, layoutVersion)) {\n        return loadINodeWithLocalName(true, in, false).asDirectory();\n      }\n  \n      final byte[] name \u003d FSImageSerialization.readLocalName(in);\n      final PermissionStatus permissions \u003d PermissionStatus.read(in);\n      final long modificationTime \u003d in.readLong();\n      \n      //read quotas\n      final long nsQuota \u003d in.readLong();\n      final long dsQuota \u003d in.readLong();\n  \n      return nsQuota \u003d\u003d -1L \u0026\u0026 dsQuota \u003d\u003d -1L?\n          new INodeDirectoryAttributes.SnapshotCopy(name, permissions, modificationTime)\n        : new INodeDirectoryAttributes.CopyWithQuota(name, permissions,\n            modificationTime, nsQuota, dsQuota);\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormat.java",
      "extendedDetails": {}
    },
    "c02953dbc344b39e0eb0d13fe2d899cdcdc46380": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-4908. Reduce snapshot inode memory usage.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1494858 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/06/13 10:10 PM",
      "commitName": "c02953dbc344b39e0eb0d13fe2d899cdcdc46380",
      "commitAuthor": "Tsz-wo Sze",
      "diff": "@@ -0,0 +1,21 @@\n+    public INodeDirectoryAttributes loadINodeDirectoryAttributes(DataInput in)\n+        throws IOException {\n+      final int layoutVersion \u003d getLayoutVersion();\n+      \n+      if (!LayoutVersion.supports(Feature.OPTIMIZE_SNAPSHOT_INODES, layoutVersion)) {\n+        return loadINodeWithLocalName(true, in, false).asDirectory();\n+      }\n+  \n+      final byte[] name \u003d FSImageSerialization.readLocalName(in);\n+      final PermissionStatus permissions \u003d PermissionStatus.read(in);\n+      final long modificationTime \u003d in.readLong();\n+      \n+      //read quotas\n+      final long nsQuota \u003d in.readLong();\n+      final long dsQuota \u003d in.readLong();\n+  \n+      return nsQuota \u003d\u003d -1L \u0026\u0026 dsQuota \u003d\u003d -1L?\n+          new INodeDirectoryAttributes.SnapshotCopy(name, permissions, modificationTime)\n+        : new INodeDirectoryAttributes.CopyWithQuota(name, permissions,\n+            modificationTime, nsQuota, dsQuota);\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public INodeDirectoryAttributes loadINodeDirectoryAttributes(DataInput in)\n        throws IOException {\n      final int layoutVersion \u003d getLayoutVersion();\n      \n      if (!LayoutVersion.supports(Feature.OPTIMIZE_SNAPSHOT_INODES, layoutVersion)) {\n        return loadINodeWithLocalName(true, in, false).asDirectory();\n      }\n  \n      final byte[] name \u003d FSImageSerialization.readLocalName(in);\n      final PermissionStatus permissions \u003d PermissionStatus.read(in);\n      final long modificationTime \u003d in.readLong();\n      \n      //read quotas\n      final long nsQuota \u003d in.readLong();\n      final long dsQuota \u003d in.readLong();\n  \n      return nsQuota \u003d\u003d -1L \u0026\u0026 dsQuota \u003d\u003d -1L?\n          new INodeDirectoryAttributes.SnapshotCopy(name, permissions, modificationTime)\n        : new INodeDirectoryAttributes.CopyWithQuota(name, permissions,\n            modificationTime, nsQuota, dsQuota);\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormat.java"
    }
  }
}