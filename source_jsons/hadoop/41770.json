{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AbstractYarnScheduler.java",
  "functionName": "run",
  "functionId": "run",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AbstractYarnScheduler.java",
  "functionStartLine": 1565,
  "functionEndLine": 1579,
  "numCommitsSeen": 115,
  "timeTaken": 3080,
  "changeHistory": [
    "bb34ae955496c1aa595dc1186153d605a41f5378",
    "80a68d60560e505b5f8e01969dc3c168a1e5a7f3",
    "f6a778c3725bcdaba1e1de43786af17dd44deb78"
  ],
  "changeHistoryShort": {
    "bb34ae955496c1aa595dc1186153d605a41f5378": "Ybodychange",
    "80a68d60560e505b5f8e01969dc3c168a1e5a7f3": "Ybodychange",
    "f6a778c3725bcdaba1e1de43786af17dd44deb78": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bb34ae955496c1aa595dc1186153d605a41f5378": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7146. Many RM unit tests failing with FairScheduler (rkanter)\n",
      "commitDate": "13/09/17 3:44 PM",
      "commitName": "bb34ae955496c1aa595dc1186153d605a41f5378",
      "commitAuthor": "Robert Kanter",
      "commitDateOld": "12/09/17 9:19 AM",
      "commitNameOld": "39240b61a163b127eec385decd30ffd96e694c28",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 1.27,
      "commitsBetweenForRepo": 32,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,4 +1,15 @@\n-      public void run() {\n-        clearPendingContainerCache();\n-        LOG.info(\"Release request cache is cleaned up\");\n-      }\n\\ No newline at end of file\n+    public void run() {\n+      while (!Thread.currentThread().isInterrupted()) {\n+        try {\n+          synchronized (updateThreadMonitor) {\n+            updateThreadMonitor.wait(updateInterval);\n+          }\n+          update();\n+        } catch (InterruptedException ie) {\n+          LOG.warn(\"Scheduler UpdateThread interrupted. Exiting.\");\n+          return;\n+        } catch (Exception e) {\n+          LOG.error(\"Exception in scheduler UpdateThread\", e);\n+        }\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      while (!Thread.currentThread().isInterrupted()) {\n        try {\n          synchronized (updateThreadMonitor) {\n            updateThreadMonitor.wait(updateInterval);\n          }\n          update();\n        } catch (InterruptedException ie) {\n          LOG.warn(\"Scheduler UpdateThread interrupted. Exiting.\");\n          return;\n        } catch (Exception e) {\n          LOG.error(\"Exception in scheduler UpdateThread\", e);\n        }\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AbstractYarnScheduler.java",
      "extendedDetails": {}
    },
    "80a68d60560e505b5f8e01969dc3c168a1e5a7f3": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3830. AbstractYarnScheduler.createReleaseCache may try to clean a\nnull attempt. Contributed by nijel.\n",
      "commitDate": "01/07/15 6:33 AM",
      "commitName": "80a68d60560e505b5f8e01969dc3c168a1e5a7f3",
      "commitAuthor": "Devaraj K",
      "commitDateOld": "18/04/15 12:46 PM",
      "commitNameOld": "497c86b485b1bb8a2eba52308646d8e1ee76bce3",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 73.74,
      "commitsBetweenForRepo": 659,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,4 @@\n       public void run() {\n-        for (SchedulerApplication\u003cT\u003e app : applications.values()) {\n-\n-          T attempt \u003d app.getCurrentAppAttempt();\n-          synchronized (attempt) {\n-            for (ContainerId containerId : attempt.getPendingRelease()) {\n-              RMAuditLogger.logFailure(\n-                app.getUser(),\n-                AuditConstants.RELEASE_CONTAINER,\n-                \"Unauthorized access or invalid container\",\n-                \"Scheduler\",\n-                \"Trying to release container not owned by app or with invalid id.\",\n-                attempt.getApplicationId(), containerId);\n-            }\n-            attempt.getPendingRelease().clear();\n-          }\n-        }\n+        clearPendingContainerCache();\n         LOG.info(\"Release request cache is cleaned up\");\n       }\n\\ No newline at end of file\n",
      "actualSource": "      public void run() {\n        clearPendingContainerCache();\n        LOG.info(\"Release request cache is cleaned up\");\n      }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AbstractYarnScheduler.java",
      "extendedDetails": {}
    },
    "f6a778c3725bcdaba1e1de43786af17dd44deb78": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2249. Avoided AM release requests being lost on work preserving RM restart. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1618972 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/14 1:33 PM",
      "commitName": "f6a778c3725bcdaba1e1de43786af17dd44deb78",
      "commitAuthor": "Zhijie Shen",
      "diff": "@@ -0,0 +1,19 @@\n+      public void run() {\n+        for (SchedulerApplication\u003cT\u003e app : applications.values()) {\n+\n+          T attempt \u003d app.getCurrentAppAttempt();\n+          synchronized (attempt) {\n+            for (ContainerId containerId : attempt.getPendingRelease()) {\n+              RMAuditLogger.logFailure(\n+                app.getUser(),\n+                AuditConstants.RELEASE_CONTAINER,\n+                \"Unauthorized access or invalid container\",\n+                \"Scheduler\",\n+                \"Trying to release container not owned by app or with invalid id.\",\n+                attempt.getApplicationId(), containerId);\n+            }\n+            attempt.getPendingRelease().clear();\n+          }\n+        }\n+        LOG.info(\"Release request cache is cleaned up\");\n+      }\n\\ No newline at end of file\n",
      "actualSource": "      public void run() {\n        for (SchedulerApplication\u003cT\u003e app : applications.values()) {\n\n          T attempt \u003d app.getCurrentAppAttempt();\n          synchronized (attempt) {\n            for (ContainerId containerId : attempt.getPendingRelease()) {\n              RMAuditLogger.logFailure(\n                app.getUser(),\n                AuditConstants.RELEASE_CONTAINER,\n                \"Unauthorized access or invalid container\",\n                \"Scheduler\",\n                \"Trying to release container not owned by app or with invalid id.\",\n                attempt.getApplicationId(), containerId);\n            }\n            attempt.getPendingRelease().clear();\n          }\n        }\n        LOG.info(\"Release request cache is cleaned up\");\n      }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AbstractYarnScheduler.java"
    }
  }
}