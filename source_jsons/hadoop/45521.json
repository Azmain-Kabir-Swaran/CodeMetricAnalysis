{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TimelineReaderClientImpl.java",
  "functionName": "serviceInit",
  "functionId": "serviceInit___conf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/api/impl/TimelineReaderClientImpl.java",
  "functionStartLine": 70,
  "functionEndLine": 100,
  "numCommitsSeen": 3,
  "timeTaken": 1025,
  "changeHistory": [
    "7dc272199ffea28c8597151e17d4606928a7f9f3",
    "a3edfddcf7822ea13bdf4858672eb82cea5e0b5f"
  ],
  "changeHistoryShort": {
    "7dc272199ffea28c8597151e17d4606928a7f9f3": "Ybodychange",
    "a3edfddcf7822ea13bdf4858672eb82cea5e0b5f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7dc272199ffea28c8597151e17d4606928a7f9f3": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9034. ApplicationCLI should have option to take clusterId. Contributed by Rohith Sharma K S.\n",
      "commitDate": "28/11/18 12:42 AM",
      "commitName": "7dc272199ffea28c8597151e17d4606928a7f9f3",
      "commitAuthor": "Suma Shivaprasad",
      "commitDateOld": "11/10/18 8:21 PM",
      "commitNameOld": "a3edfddcf7822ea13bdf4858672eb82cea5e0b5f",
      "commitAuthorOld": "Vrushali C",
      "daysBetweenCommits": 47.22,
      "commitsBetweenForRepo": 381,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,31 @@\n   protected void serviceInit(Configuration conf) throws Exception {\n     if (!YarnConfiguration.timelineServiceV2Enabled(conf)) {\n       throw new IOException(\"Timeline V2 client is not properly configured. \"\n           + \"Either timeline service is not enabled or version is not set to\"\n           + \" 2\");\n     }\n     UserGroupInformation ugi \u003d UserGroupInformation.getCurrentUser();\n     UserGroupInformation realUgi \u003d ugi.getRealUser();\n     String doAsUser;\n     UserGroupInformation authUgi;\n     if (realUgi !\u003d null) {\n       authUgi \u003d realUgi;\n       doAsUser \u003d ugi.getShortUserName();\n     } else {\n       authUgi \u003d ugi;\n       doAsUser \u003d null;\n     }\n     DelegationTokenAuthenticatedURL.Token token \u003d\n         new DelegationTokenAuthenticatedURL.Token();\n     connector \u003d new TimelineConnector(false, authUgi, doAsUser, token);\n     addIfService(connector);\n     String timelineReaderWebAppAddress \u003d\n         WebAppUtils.getTimelineReaderWebAppURLWithoutScheme(conf);\n     baseUri \u003d TimelineConnector.constructResURI(\n         conf, timelineReaderWebAppAddress, RESOURCE_URI_STR_V2);\n     clusterId \u003d conf.get(YarnConfiguration.RM_CLUSTER_ID,\n         YarnConfiguration.DEFAULT_RM_CLUSTER_ID);\n+    LOG.info(\"Initialized TimelineReader URI\u003d\" + baseUri + \", clusterId\u003d\"\n+        + clusterId);\n     super.serviceInit(conf);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    if (!YarnConfiguration.timelineServiceV2Enabled(conf)) {\n      throw new IOException(\"Timeline V2 client is not properly configured. \"\n          + \"Either timeline service is not enabled or version is not set to\"\n          + \" 2\");\n    }\n    UserGroupInformation ugi \u003d UserGroupInformation.getCurrentUser();\n    UserGroupInformation realUgi \u003d ugi.getRealUser();\n    String doAsUser;\n    UserGroupInformation authUgi;\n    if (realUgi !\u003d null) {\n      authUgi \u003d realUgi;\n      doAsUser \u003d ugi.getShortUserName();\n    } else {\n      authUgi \u003d ugi;\n      doAsUser \u003d null;\n    }\n    DelegationTokenAuthenticatedURL.Token token \u003d\n        new DelegationTokenAuthenticatedURL.Token();\n    connector \u003d new TimelineConnector(false, authUgi, doAsUser, token);\n    addIfService(connector);\n    String timelineReaderWebAppAddress \u003d\n        WebAppUtils.getTimelineReaderWebAppURLWithoutScheme(conf);\n    baseUri \u003d TimelineConnector.constructResURI(\n        conf, timelineReaderWebAppAddress, RESOURCE_URI_STR_V2);\n    clusterId \u003d conf.get(YarnConfiguration.RM_CLUSTER_ID,\n        YarnConfiguration.DEFAULT_RM_CLUSTER_ID);\n    LOG.info(\"Initialized TimelineReader URI\u003d\" + baseUri + \", clusterId\u003d\"\n        + clusterId);\n    super.serviceInit(conf);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/api/impl/TimelineReaderClientImpl.java",
      "extendedDetails": {}
    },
    "a3edfddcf7822ea13bdf4858672eb82cea5e0b5f": {
      "type": "Yintroduced",
      "commitMessage": "YARN-8834 Provide Java client for fetching Yarn specific entities from TimelineReader. Contributed by Abhishek Modi\n",
      "commitDate": "11/10/18 8:21 PM",
      "commitName": "a3edfddcf7822ea13bdf4858672eb82cea5e0b5f",
      "commitAuthor": "Vrushali C",
      "diff": "@@ -0,0 +1,29 @@\n+  protected void serviceInit(Configuration conf) throws Exception {\n+    if (!YarnConfiguration.timelineServiceV2Enabled(conf)) {\n+      throw new IOException(\"Timeline V2 client is not properly configured. \"\n+          + \"Either timeline service is not enabled or version is not set to\"\n+          + \" 2\");\n+    }\n+    UserGroupInformation ugi \u003d UserGroupInformation.getCurrentUser();\n+    UserGroupInformation realUgi \u003d ugi.getRealUser();\n+    String doAsUser;\n+    UserGroupInformation authUgi;\n+    if (realUgi !\u003d null) {\n+      authUgi \u003d realUgi;\n+      doAsUser \u003d ugi.getShortUserName();\n+    } else {\n+      authUgi \u003d ugi;\n+      doAsUser \u003d null;\n+    }\n+    DelegationTokenAuthenticatedURL.Token token \u003d\n+        new DelegationTokenAuthenticatedURL.Token();\n+    connector \u003d new TimelineConnector(false, authUgi, doAsUser, token);\n+    addIfService(connector);\n+    String timelineReaderWebAppAddress \u003d\n+        WebAppUtils.getTimelineReaderWebAppURLWithoutScheme(conf);\n+    baseUri \u003d TimelineConnector.constructResURI(\n+        conf, timelineReaderWebAppAddress, RESOURCE_URI_STR_V2);\n+    clusterId \u003d conf.get(YarnConfiguration.RM_CLUSTER_ID,\n+        YarnConfiguration.DEFAULT_RM_CLUSTER_ID);\n+    super.serviceInit(conf);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    if (!YarnConfiguration.timelineServiceV2Enabled(conf)) {\n      throw new IOException(\"Timeline V2 client is not properly configured. \"\n          + \"Either timeline service is not enabled or version is not set to\"\n          + \" 2\");\n    }\n    UserGroupInformation ugi \u003d UserGroupInformation.getCurrentUser();\n    UserGroupInformation realUgi \u003d ugi.getRealUser();\n    String doAsUser;\n    UserGroupInformation authUgi;\n    if (realUgi !\u003d null) {\n      authUgi \u003d realUgi;\n      doAsUser \u003d ugi.getShortUserName();\n    } else {\n      authUgi \u003d ugi;\n      doAsUser \u003d null;\n    }\n    DelegationTokenAuthenticatedURL.Token token \u003d\n        new DelegationTokenAuthenticatedURL.Token();\n    connector \u003d new TimelineConnector(false, authUgi, doAsUser, token);\n    addIfService(connector);\n    String timelineReaderWebAppAddress \u003d\n        WebAppUtils.getTimelineReaderWebAppURLWithoutScheme(conf);\n    baseUri \u003d TimelineConnector.constructResURI(\n        conf, timelineReaderWebAppAddress, RESOURCE_URI_STR_V2);\n    clusterId \u003d conf.get(YarnConfiguration.RM_CLUSTER_ID,\n        YarnConfiguration.DEFAULT_RM_CLUSTER_ID);\n    super.serviceInit(conf);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/api/impl/TimelineReaderClientImpl.java"
    }
  }
}