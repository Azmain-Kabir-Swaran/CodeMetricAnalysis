{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RouterWebServiceUtil.java",
  "functionName": "genericForward",
  "functionId": "genericForward___webApp-String(modifiers-final)__hsr-HttpServletRequest(modifiers-final)__returnType-Class__T__(modifiers-final)__method-HTTPMethods(modifiers-final)__targetPath-String(modifiers-final)__formParam-Object(modifiers-final)__additionalParam-Map__String,String[]__(modifiers-final)__conf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-router/src/main/java/org/apache/hadoop/yarn/server/router/webapp/RouterWebServiceUtil.java",
  "functionStartLine": 97,
  "functionEndLine": 160,
  "numCommitsSeen": 19,
  "timeTaken": 5034,
  "changeHistory": [
    "25361b077bd34606259dac5a00c41faddd2dfc7d",
    "8be5707067509b78bde5fcf60072ae988d5a9f32",
    "acda6b96a4e92e432bd1d97fa14004a11e70387e"
  ],
  "changeHistoryShort": {
    "25361b077bd34606259dac5a00c41faddd2dfc7d": "Ymultichange(Yparameterchange,Ybodychange)",
    "8be5707067509b78bde5fcf60072ae988d5a9f32": "Ymultichange(Ybodychange,Yparametermetachange)",
    "acda6b96a4e92e432bd1d97fa14004a11e70387e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "25361b077bd34606259dac5a00c41faddd2dfc7d": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-10120. Https Support in Router WebServiceClient.\n\nContributed by Bilwa S T.\n",
      "commitDate": "02/04/20 5:41 AM",
      "commitName": "25361b077bd34606259dac5a00c41faddd2dfc7d",
      "commitAuthor": "Prabhu Joseph",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-10120. Https Support in Router WebServiceClient.\n\nContributed by Bilwa S T.\n",
          "commitDate": "02/04/20 5:41 AM",
          "commitName": "25361b077bd34606259dac5a00c41faddd2dfc7d",
          "commitAuthor": "Prabhu Joseph",
          "commitDateOld": "27/10/17 4:46 PM",
          "commitNameOld": "8be5707067509b78bde5fcf60072ae988d5a9f32",
          "commitAuthorOld": "Inigo Goiri",
          "daysBetweenCommits": 887.54,
          "commitsBetweenForRepo": 6584,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,64 +1,64 @@\n   protected static \u003cT\u003e T genericForward(\n       final String webApp, final HttpServletRequest hsr,\n       final Class\u003cT\u003e returnType, final HTTPMethods method,\n       final String targetPath, final Object formParam,\n-      final Map\u003cString, String[]\u003e additionalParam) {\n+      final Map\u003cString, String[]\u003e additionalParam, Configuration conf) {\n \n     UserGroupInformation callerUGI \u003d null;\n \n     if (hsr !\u003d null) {\n       callerUGI \u003d RMWebAppUtil.getCallerUserGroupInformation(hsr, true);\n     } else {\n       // user not required\n       callerUGI \u003d UserGroupInformation.createRemoteUser(user);\n \n     }\n \n     if (callerUGI \u003d\u003d null) {\n       LOG.error(\"Unable to obtain user name, user not authenticated\");\n       return null;\n     }\n \n     try {\n       return callerUGI.doAs(new PrivilegedExceptionAction\u003cT\u003e() {\n         @SuppressWarnings(\"unchecked\")\n         @Override\n         public T run() {\n \n           Map\u003cString, String[]\u003e paramMap \u003d null;\n \n           // We can have hsr or additionalParam. There are no case with both.\n           if (hsr !\u003d null) {\n             paramMap \u003d hsr.getParameterMap();\n           } else if (additionalParam !\u003d null) {\n             paramMap \u003d additionalParam;\n           }\n \n           ClientResponse response \u003d RouterWebServiceUtil.invokeRMWebService(\n               webApp, targetPath, method,\n               (hsr \u003d\u003d null) ? null : hsr.getPathInfo(), paramMap, formParam,\n-              getMediaTypeFromHttpServletRequest(hsr, returnType));\n+              getMediaTypeFromHttpServletRequest(hsr, returnType), conf);\n           if (Response.class.equals(returnType)) {\n             return (T) RouterWebServiceUtil.clientResponseToResponse(response);\n           }\n           // YARN RM can answer with Status.OK or it throws an exception\n           if (response.getStatus() \u003d\u003d SC_OK) {\n             return response.getEntity(returnType);\n           }\n           if (response.getStatus() \u003d\u003d SC_NO_CONTENT) {\n             try {\n               return returnType.getConstructor().newInstance();\n             } catch (RuntimeException | ReflectiveOperationException e) {\n               LOG.error(\"Cannot create empty entity for {}\", returnType, e);\n             }\n           }\n           RouterWebServiceUtil.retrieveException(response);\n           return null;\n         }\n       });\n     } catch (InterruptedException e) {\n       return null;\n     } catch (IOException e) {\n       return null;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected static \u003cT\u003e T genericForward(\n      final String webApp, final HttpServletRequest hsr,\n      final Class\u003cT\u003e returnType, final HTTPMethods method,\n      final String targetPath, final Object formParam,\n      final Map\u003cString, String[]\u003e additionalParam, Configuration conf) {\n\n    UserGroupInformation callerUGI \u003d null;\n\n    if (hsr !\u003d null) {\n      callerUGI \u003d RMWebAppUtil.getCallerUserGroupInformation(hsr, true);\n    } else {\n      // user not required\n      callerUGI \u003d UserGroupInformation.createRemoteUser(user);\n\n    }\n\n    if (callerUGI \u003d\u003d null) {\n      LOG.error(\"Unable to obtain user name, user not authenticated\");\n      return null;\n    }\n\n    try {\n      return callerUGI.doAs(new PrivilegedExceptionAction\u003cT\u003e() {\n        @SuppressWarnings(\"unchecked\")\n        @Override\n        public T run() {\n\n          Map\u003cString, String[]\u003e paramMap \u003d null;\n\n          // We can have hsr or additionalParam. There are no case with both.\n          if (hsr !\u003d null) {\n            paramMap \u003d hsr.getParameterMap();\n          } else if (additionalParam !\u003d null) {\n            paramMap \u003d additionalParam;\n          }\n\n          ClientResponse response \u003d RouterWebServiceUtil.invokeRMWebService(\n              webApp, targetPath, method,\n              (hsr \u003d\u003d null) ? null : hsr.getPathInfo(), paramMap, formParam,\n              getMediaTypeFromHttpServletRequest(hsr, returnType), conf);\n          if (Response.class.equals(returnType)) {\n            return (T) RouterWebServiceUtil.clientResponseToResponse(response);\n          }\n          // YARN RM can answer with Status.OK or it throws an exception\n          if (response.getStatus() \u003d\u003d SC_OK) {\n            return response.getEntity(returnType);\n          }\n          if (response.getStatus() \u003d\u003d SC_NO_CONTENT) {\n            try {\n              return returnType.getConstructor().newInstance();\n            } catch (RuntimeException | ReflectiveOperationException e) {\n              LOG.error(\"Cannot create empty entity for {}\", returnType, e);\n            }\n          }\n          RouterWebServiceUtil.retrieveException(response);\n          return null;\n        }\n      });\n    } catch (InterruptedException e) {\n      return null;\n    } catch (IOException e) {\n      return null;\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-router/src/main/java/org/apache/hadoop/yarn/server/router/webapp/RouterWebServiceUtil.java",
          "extendedDetails": {
            "oldValue": "[webApp-String(modifiers-final), hsr-HttpServletRequest(modifiers-final), returnType-Class\u003cT\u003e(modifiers-final), method-HTTPMethods(modifiers-final), targetPath-String(modifiers-final), formParam-Object(modifiers-final), additionalParam-Map\u003cString,String[]\u003e(modifiers-final)]",
            "newValue": "[webApp-String(modifiers-final), hsr-HttpServletRequest(modifiers-final), returnType-Class\u003cT\u003e(modifiers-final), method-HTTPMethods(modifiers-final), targetPath-String(modifiers-final), formParam-Object(modifiers-final), additionalParam-Map\u003cString,String[]\u003e(modifiers-final), conf-Configuration]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-10120. Https Support in Router WebServiceClient.\n\nContributed by Bilwa S T.\n",
          "commitDate": "02/04/20 5:41 AM",
          "commitName": "25361b077bd34606259dac5a00c41faddd2dfc7d",
          "commitAuthor": "Prabhu Joseph",
          "commitDateOld": "27/10/17 4:46 PM",
          "commitNameOld": "8be5707067509b78bde5fcf60072ae988d5a9f32",
          "commitAuthorOld": "Inigo Goiri",
          "daysBetweenCommits": 887.54,
          "commitsBetweenForRepo": 6584,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,64 +1,64 @@\n   protected static \u003cT\u003e T genericForward(\n       final String webApp, final HttpServletRequest hsr,\n       final Class\u003cT\u003e returnType, final HTTPMethods method,\n       final String targetPath, final Object formParam,\n-      final Map\u003cString, String[]\u003e additionalParam) {\n+      final Map\u003cString, String[]\u003e additionalParam, Configuration conf) {\n \n     UserGroupInformation callerUGI \u003d null;\n \n     if (hsr !\u003d null) {\n       callerUGI \u003d RMWebAppUtil.getCallerUserGroupInformation(hsr, true);\n     } else {\n       // user not required\n       callerUGI \u003d UserGroupInformation.createRemoteUser(user);\n \n     }\n \n     if (callerUGI \u003d\u003d null) {\n       LOG.error(\"Unable to obtain user name, user not authenticated\");\n       return null;\n     }\n \n     try {\n       return callerUGI.doAs(new PrivilegedExceptionAction\u003cT\u003e() {\n         @SuppressWarnings(\"unchecked\")\n         @Override\n         public T run() {\n \n           Map\u003cString, String[]\u003e paramMap \u003d null;\n \n           // We can have hsr or additionalParam. There are no case with both.\n           if (hsr !\u003d null) {\n             paramMap \u003d hsr.getParameterMap();\n           } else if (additionalParam !\u003d null) {\n             paramMap \u003d additionalParam;\n           }\n \n           ClientResponse response \u003d RouterWebServiceUtil.invokeRMWebService(\n               webApp, targetPath, method,\n               (hsr \u003d\u003d null) ? null : hsr.getPathInfo(), paramMap, formParam,\n-              getMediaTypeFromHttpServletRequest(hsr, returnType));\n+              getMediaTypeFromHttpServletRequest(hsr, returnType), conf);\n           if (Response.class.equals(returnType)) {\n             return (T) RouterWebServiceUtil.clientResponseToResponse(response);\n           }\n           // YARN RM can answer with Status.OK or it throws an exception\n           if (response.getStatus() \u003d\u003d SC_OK) {\n             return response.getEntity(returnType);\n           }\n           if (response.getStatus() \u003d\u003d SC_NO_CONTENT) {\n             try {\n               return returnType.getConstructor().newInstance();\n             } catch (RuntimeException | ReflectiveOperationException e) {\n               LOG.error(\"Cannot create empty entity for {}\", returnType, e);\n             }\n           }\n           RouterWebServiceUtil.retrieveException(response);\n           return null;\n         }\n       });\n     } catch (InterruptedException e) {\n       return null;\n     } catch (IOException e) {\n       return null;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected static \u003cT\u003e T genericForward(\n      final String webApp, final HttpServletRequest hsr,\n      final Class\u003cT\u003e returnType, final HTTPMethods method,\n      final String targetPath, final Object formParam,\n      final Map\u003cString, String[]\u003e additionalParam, Configuration conf) {\n\n    UserGroupInformation callerUGI \u003d null;\n\n    if (hsr !\u003d null) {\n      callerUGI \u003d RMWebAppUtil.getCallerUserGroupInformation(hsr, true);\n    } else {\n      // user not required\n      callerUGI \u003d UserGroupInformation.createRemoteUser(user);\n\n    }\n\n    if (callerUGI \u003d\u003d null) {\n      LOG.error(\"Unable to obtain user name, user not authenticated\");\n      return null;\n    }\n\n    try {\n      return callerUGI.doAs(new PrivilegedExceptionAction\u003cT\u003e() {\n        @SuppressWarnings(\"unchecked\")\n        @Override\n        public T run() {\n\n          Map\u003cString, String[]\u003e paramMap \u003d null;\n\n          // We can have hsr or additionalParam. There are no case with both.\n          if (hsr !\u003d null) {\n            paramMap \u003d hsr.getParameterMap();\n          } else if (additionalParam !\u003d null) {\n            paramMap \u003d additionalParam;\n          }\n\n          ClientResponse response \u003d RouterWebServiceUtil.invokeRMWebService(\n              webApp, targetPath, method,\n              (hsr \u003d\u003d null) ? null : hsr.getPathInfo(), paramMap, formParam,\n              getMediaTypeFromHttpServletRequest(hsr, returnType), conf);\n          if (Response.class.equals(returnType)) {\n            return (T) RouterWebServiceUtil.clientResponseToResponse(response);\n          }\n          // YARN RM can answer with Status.OK or it throws an exception\n          if (response.getStatus() \u003d\u003d SC_OK) {\n            return response.getEntity(returnType);\n          }\n          if (response.getStatus() \u003d\u003d SC_NO_CONTENT) {\n            try {\n              return returnType.getConstructor().newInstance();\n            } catch (RuntimeException | ReflectiveOperationException e) {\n              LOG.error(\"Cannot create empty entity for {}\", returnType, e);\n            }\n          }\n          RouterWebServiceUtil.retrieveException(response);\n          return null;\n        }\n      });\n    } catch (InterruptedException e) {\n      return null;\n    } catch (IOException e) {\n      return null;\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-router/src/main/java/org/apache/hadoop/yarn/server/router/webapp/RouterWebServiceUtil.java",
          "extendedDetails": {}
        }
      ]
    },
    "8be5707067509b78bde5fcf60072ae988d5a9f32": {
      "type": "Ymultichange(Ybodychange,Yparametermetachange)",
      "commitMessage": "YARN-7276. Federation Router Web Service fixes. Contributed by Inigo Goiri.\n",
      "commitDate": "27/10/17 4:46 PM",
      "commitName": "8be5707067509b78bde5fcf60072ae988d5a9f32",
      "commitAuthor": "Inigo Goiri",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7276. Federation Router Web Service fixes. Contributed by Inigo Goiri.\n",
          "commitDate": "27/10/17 4:46 PM",
          "commitName": "8be5707067509b78bde5fcf60072ae988d5a9f32",
          "commitAuthor": "Inigo Goiri",
          "commitDateOld": "17/10/17 10:15 AM",
          "commitNameOld": "acabc657ff5433f36ce1b238cecd3a3b5bbe87ae",
          "commitAuthorOld": "Haibo Chen",
          "daysBetweenCommits": 10.27,
          "commitsBetweenForRepo": 68,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,54 +1,64 @@\n-  protected static \u003cT\u003e T genericForward(String webApp, HttpServletRequest hsr,\n-      final Class\u003cT\u003e returnType, HTTPMethods method, String targetPath,\n-      Object formParam, Map\u003cString, String[]\u003e additionalParam) {\n+  protected static \u003cT\u003e T genericForward(\n+      final String webApp, final HttpServletRequest hsr,\n+      final Class\u003cT\u003e returnType, final HTTPMethods method,\n+      final String targetPath, final Object formParam,\n+      final Map\u003cString, String[]\u003e additionalParam) {\n \n     UserGroupInformation callerUGI \u003d null;\n \n     if (hsr !\u003d null) {\n       callerUGI \u003d RMWebAppUtil.getCallerUserGroupInformation(hsr, true);\n     } else {\n       // user not required\n       callerUGI \u003d UserGroupInformation.createRemoteUser(user);\n \n     }\n \n     if (callerUGI \u003d\u003d null) {\n       LOG.error(\"Unable to obtain user name, user not authenticated\");\n       return null;\n     }\n \n     try {\n       return callerUGI.doAs(new PrivilegedExceptionAction\u003cT\u003e() {\n         @SuppressWarnings(\"unchecked\")\n         @Override\n         public T run() {\n \n           Map\u003cString, String[]\u003e paramMap \u003d null;\n \n           // We can have hsr or additionalParam. There are no case with both.\n           if (hsr !\u003d null) {\n             paramMap \u003d hsr.getParameterMap();\n           } else if (additionalParam !\u003d null) {\n             paramMap \u003d additionalParam;\n           }\n \n           ClientResponse response \u003d RouterWebServiceUtil.invokeRMWebService(\n               webApp, targetPath, method,\n-              (hsr \u003d\u003d null) ? null : hsr.getPathInfo(), paramMap, formParam);\n+              (hsr \u003d\u003d null) ? null : hsr.getPathInfo(), paramMap, formParam,\n+              getMediaTypeFromHttpServletRequest(hsr, returnType));\n           if (Response.class.equals(returnType)) {\n             return (T) RouterWebServiceUtil.clientResponseToResponse(response);\n           }\n           // YARN RM can answer with Status.OK or it throws an exception\n-          if (response.getStatus() \u003d\u003d 200) {\n+          if (response.getStatus() \u003d\u003d SC_OK) {\n             return response.getEntity(returnType);\n           }\n+          if (response.getStatus() \u003d\u003d SC_NO_CONTENT) {\n+            try {\n+              return returnType.getConstructor().newInstance();\n+            } catch (RuntimeException | ReflectiveOperationException e) {\n+              LOG.error(\"Cannot create empty entity for {}\", returnType, e);\n+            }\n+          }\n           RouterWebServiceUtil.retrieveException(response);\n           return null;\n         }\n       });\n     } catch (InterruptedException e) {\n       return null;\n     } catch (IOException e) {\n       return null;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected static \u003cT\u003e T genericForward(\n      final String webApp, final HttpServletRequest hsr,\n      final Class\u003cT\u003e returnType, final HTTPMethods method,\n      final String targetPath, final Object formParam,\n      final Map\u003cString, String[]\u003e additionalParam) {\n\n    UserGroupInformation callerUGI \u003d null;\n\n    if (hsr !\u003d null) {\n      callerUGI \u003d RMWebAppUtil.getCallerUserGroupInformation(hsr, true);\n    } else {\n      // user not required\n      callerUGI \u003d UserGroupInformation.createRemoteUser(user);\n\n    }\n\n    if (callerUGI \u003d\u003d null) {\n      LOG.error(\"Unable to obtain user name, user not authenticated\");\n      return null;\n    }\n\n    try {\n      return callerUGI.doAs(new PrivilegedExceptionAction\u003cT\u003e() {\n        @SuppressWarnings(\"unchecked\")\n        @Override\n        public T run() {\n\n          Map\u003cString, String[]\u003e paramMap \u003d null;\n\n          // We can have hsr or additionalParam. There are no case with both.\n          if (hsr !\u003d null) {\n            paramMap \u003d hsr.getParameterMap();\n          } else if (additionalParam !\u003d null) {\n            paramMap \u003d additionalParam;\n          }\n\n          ClientResponse response \u003d RouterWebServiceUtil.invokeRMWebService(\n              webApp, targetPath, method,\n              (hsr \u003d\u003d null) ? null : hsr.getPathInfo(), paramMap, formParam,\n              getMediaTypeFromHttpServletRequest(hsr, returnType));\n          if (Response.class.equals(returnType)) {\n            return (T) RouterWebServiceUtil.clientResponseToResponse(response);\n          }\n          // YARN RM can answer with Status.OK or it throws an exception\n          if (response.getStatus() \u003d\u003d SC_OK) {\n            return response.getEntity(returnType);\n          }\n          if (response.getStatus() \u003d\u003d SC_NO_CONTENT) {\n            try {\n              return returnType.getConstructor().newInstance();\n            } catch (RuntimeException | ReflectiveOperationException e) {\n              LOG.error(\"Cannot create empty entity for {}\", returnType, e);\n            }\n          }\n          RouterWebServiceUtil.retrieveException(response);\n          return null;\n        }\n      });\n    } catch (InterruptedException e) {\n      return null;\n    } catch (IOException e) {\n      return null;\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-router/src/main/java/org/apache/hadoop/yarn/server/router/webapp/RouterWebServiceUtil.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparametermetachange",
          "commitMessage": "YARN-7276. Federation Router Web Service fixes. Contributed by Inigo Goiri.\n",
          "commitDate": "27/10/17 4:46 PM",
          "commitName": "8be5707067509b78bde5fcf60072ae988d5a9f32",
          "commitAuthor": "Inigo Goiri",
          "commitDateOld": "17/10/17 10:15 AM",
          "commitNameOld": "acabc657ff5433f36ce1b238cecd3a3b5bbe87ae",
          "commitAuthorOld": "Haibo Chen",
          "daysBetweenCommits": 10.27,
          "commitsBetweenForRepo": 68,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,54 +1,64 @@\n-  protected static \u003cT\u003e T genericForward(String webApp, HttpServletRequest hsr,\n-      final Class\u003cT\u003e returnType, HTTPMethods method, String targetPath,\n-      Object formParam, Map\u003cString, String[]\u003e additionalParam) {\n+  protected static \u003cT\u003e T genericForward(\n+      final String webApp, final HttpServletRequest hsr,\n+      final Class\u003cT\u003e returnType, final HTTPMethods method,\n+      final String targetPath, final Object formParam,\n+      final Map\u003cString, String[]\u003e additionalParam) {\n \n     UserGroupInformation callerUGI \u003d null;\n \n     if (hsr !\u003d null) {\n       callerUGI \u003d RMWebAppUtil.getCallerUserGroupInformation(hsr, true);\n     } else {\n       // user not required\n       callerUGI \u003d UserGroupInformation.createRemoteUser(user);\n \n     }\n \n     if (callerUGI \u003d\u003d null) {\n       LOG.error(\"Unable to obtain user name, user not authenticated\");\n       return null;\n     }\n \n     try {\n       return callerUGI.doAs(new PrivilegedExceptionAction\u003cT\u003e() {\n         @SuppressWarnings(\"unchecked\")\n         @Override\n         public T run() {\n \n           Map\u003cString, String[]\u003e paramMap \u003d null;\n \n           // We can have hsr or additionalParam. There are no case with both.\n           if (hsr !\u003d null) {\n             paramMap \u003d hsr.getParameterMap();\n           } else if (additionalParam !\u003d null) {\n             paramMap \u003d additionalParam;\n           }\n \n           ClientResponse response \u003d RouterWebServiceUtil.invokeRMWebService(\n               webApp, targetPath, method,\n-              (hsr \u003d\u003d null) ? null : hsr.getPathInfo(), paramMap, formParam);\n+              (hsr \u003d\u003d null) ? null : hsr.getPathInfo(), paramMap, formParam,\n+              getMediaTypeFromHttpServletRequest(hsr, returnType));\n           if (Response.class.equals(returnType)) {\n             return (T) RouterWebServiceUtil.clientResponseToResponse(response);\n           }\n           // YARN RM can answer with Status.OK or it throws an exception\n-          if (response.getStatus() \u003d\u003d 200) {\n+          if (response.getStatus() \u003d\u003d SC_OK) {\n             return response.getEntity(returnType);\n           }\n+          if (response.getStatus() \u003d\u003d SC_NO_CONTENT) {\n+            try {\n+              return returnType.getConstructor().newInstance();\n+            } catch (RuntimeException | ReflectiveOperationException e) {\n+              LOG.error(\"Cannot create empty entity for {}\", returnType, e);\n+            }\n+          }\n           RouterWebServiceUtil.retrieveException(response);\n           return null;\n         }\n       });\n     } catch (InterruptedException e) {\n       return null;\n     } catch (IOException e) {\n       return null;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected static \u003cT\u003e T genericForward(\n      final String webApp, final HttpServletRequest hsr,\n      final Class\u003cT\u003e returnType, final HTTPMethods method,\n      final String targetPath, final Object formParam,\n      final Map\u003cString, String[]\u003e additionalParam) {\n\n    UserGroupInformation callerUGI \u003d null;\n\n    if (hsr !\u003d null) {\n      callerUGI \u003d RMWebAppUtil.getCallerUserGroupInformation(hsr, true);\n    } else {\n      // user not required\n      callerUGI \u003d UserGroupInformation.createRemoteUser(user);\n\n    }\n\n    if (callerUGI \u003d\u003d null) {\n      LOG.error(\"Unable to obtain user name, user not authenticated\");\n      return null;\n    }\n\n    try {\n      return callerUGI.doAs(new PrivilegedExceptionAction\u003cT\u003e() {\n        @SuppressWarnings(\"unchecked\")\n        @Override\n        public T run() {\n\n          Map\u003cString, String[]\u003e paramMap \u003d null;\n\n          // We can have hsr or additionalParam. There are no case with both.\n          if (hsr !\u003d null) {\n            paramMap \u003d hsr.getParameterMap();\n          } else if (additionalParam !\u003d null) {\n            paramMap \u003d additionalParam;\n          }\n\n          ClientResponse response \u003d RouterWebServiceUtil.invokeRMWebService(\n              webApp, targetPath, method,\n              (hsr \u003d\u003d null) ? null : hsr.getPathInfo(), paramMap, formParam,\n              getMediaTypeFromHttpServletRequest(hsr, returnType));\n          if (Response.class.equals(returnType)) {\n            return (T) RouterWebServiceUtil.clientResponseToResponse(response);\n          }\n          // YARN RM can answer with Status.OK or it throws an exception\n          if (response.getStatus() \u003d\u003d SC_OK) {\n            return response.getEntity(returnType);\n          }\n          if (response.getStatus() \u003d\u003d SC_NO_CONTENT) {\n            try {\n              return returnType.getConstructor().newInstance();\n            } catch (RuntimeException | ReflectiveOperationException e) {\n              LOG.error(\"Cannot create empty entity for {}\", returnType, e);\n            }\n          }\n          RouterWebServiceUtil.retrieveException(response);\n          return null;\n        }\n      });\n    } catch (InterruptedException e) {\n      return null;\n    } catch (IOException e) {\n      return null;\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-router/src/main/java/org/apache/hadoop/yarn/server/router/webapp/RouterWebServiceUtil.java",
          "extendedDetails": {
            "oldValue": "[webApp-String, hsr-HttpServletRequest, returnType-Class\u003cT\u003e(modifiers-final), method-HTTPMethods, targetPath-String, formParam-Object, additionalParam-Map\u003cString,String[]\u003e]",
            "newValue": "[webApp-String(modifiers-final), hsr-HttpServletRequest(modifiers-final), returnType-Class\u003cT\u003e(modifiers-final), method-HTTPMethods(modifiers-final), targetPath-String(modifiers-final), formParam-Object(modifiers-final), additionalParam-Map\u003cString,String[]\u003e(modifiers-final)]"
          }
        }
      ]
    },
    "acda6b96a4e92e432bd1d97fa14004a11e70387e": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5412. Create a proxy chain for ResourceManager REST API in the Router. (Contributed by Giovanni Matteo Fumarola via curino)\n\n(cherry picked from commit b6240b92abf453affc5fd64e1eedf2d29842aa75)\n",
      "commitDate": "01/08/17 5:28 PM",
      "commitName": "acda6b96a4e92e432bd1d97fa14004a11e70387e",
      "commitAuthor": "Carlo Curino",
      "diff": "@@ -0,0 +1,54 @@\n+  protected static \u003cT\u003e T genericForward(String webApp, HttpServletRequest hsr,\n+      final Class\u003cT\u003e returnType, HTTPMethods method, String targetPath,\n+      Object formParam, Map\u003cString, String[]\u003e additionalParam) {\n+\n+    UserGroupInformation callerUGI \u003d null;\n+\n+    if (hsr !\u003d null) {\n+      callerUGI \u003d RMWebAppUtil.getCallerUserGroupInformation(hsr, true);\n+    } else {\n+      // user not required\n+      callerUGI \u003d UserGroupInformation.createRemoteUser(user);\n+\n+    }\n+\n+    if (callerUGI \u003d\u003d null) {\n+      LOG.error(\"Unable to obtain user name, user not authenticated\");\n+      return null;\n+    }\n+\n+    try {\n+      return callerUGI.doAs(new PrivilegedExceptionAction\u003cT\u003e() {\n+        @SuppressWarnings(\"unchecked\")\n+        @Override\n+        public T run() {\n+\n+          Map\u003cString, String[]\u003e paramMap \u003d null;\n+\n+          // We can have hsr or additionalParam. There are no case with both.\n+          if (hsr !\u003d null) {\n+            paramMap \u003d hsr.getParameterMap();\n+          } else if (additionalParam !\u003d null) {\n+            paramMap \u003d additionalParam;\n+          }\n+\n+          ClientResponse response \u003d RouterWebServiceUtil.invokeRMWebService(\n+              webApp, targetPath, method,\n+              (hsr \u003d\u003d null) ? null : hsr.getPathInfo(), paramMap, formParam);\n+          if (Response.class.equals(returnType)) {\n+            return (T) RouterWebServiceUtil.clientResponseToResponse(response);\n+          }\n+          // YARN RM can answer with Status.OK or it throws an exception\n+          if (response.getStatus() \u003d\u003d 200) {\n+            return response.getEntity(returnType);\n+          }\n+          RouterWebServiceUtil.retrieveException(response);\n+          return null;\n+        }\n+      });\n+    } catch (InterruptedException e) {\n+      return null;\n+    } catch (IOException e) {\n+      return null;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected static \u003cT\u003e T genericForward(String webApp, HttpServletRequest hsr,\n      final Class\u003cT\u003e returnType, HTTPMethods method, String targetPath,\n      Object formParam, Map\u003cString, String[]\u003e additionalParam) {\n\n    UserGroupInformation callerUGI \u003d null;\n\n    if (hsr !\u003d null) {\n      callerUGI \u003d RMWebAppUtil.getCallerUserGroupInformation(hsr, true);\n    } else {\n      // user not required\n      callerUGI \u003d UserGroupInformation.createRemoteUser(user);\n\n    }\n\n    if (callerUGI \u003d\u003d null) {\n      LOG.error(\"Unable to obtain user name, user not authenticated\");\n      return null;\n    }\n\n    try {\n      return callerUGI.doAs(new PrivilegedExceptionAction\u003cT\u003e() {\n        @SuppressWarnings(\"unchecked\")\n        @Override\n        public T run() {\n\n          Map\u003cString, String[]\u003e paramMap \u003d null;\n\n          // We can have hsr or additionalParam. There are no case with both.\n          if (hsr !\u003d null) {\n            paramMap \u003d hsr.getParameterMap();\n          } else if (additionalParam !\u003d null) {\n            paramMap \u003d additionalParam;\n          }\n\n          ClientResponse response \u003d RouterWebServiceUtil.invokeRMWebService(\n              webApp, targetPath, method,\n              (hsr \u003d\u003d null) ? null : hsr.getPathInfo(), paramMap, formParam);\n          if (Response.class.equals(returnType)) {\n            return (T) RouterWebServiceUtil.clientResponseToResponse(response);\n          }\n          // YARN RM can answer with Status.OK or it throws an exception\n          if (response.getStatus() \u003d\u003d 200) {\n            return response.getEntity(returnType);\n          }\n          RouterWebServiceUtil.retrieveException(response);\n          return null;\n        }\n      });\n    } catch (InterruptedException e) {\n      return null;\n    } catch (IOException e) {\n      return null;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-router/src/main/java/org/apache/hadoop/yarn/server/router/webapp/RouterWebServiceUtil.java"
    }
  }
}