{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FairSchedulerMetrics.java",
  "functionName": "registerQueueMetrics",
  "functionId": "registerQueueMetrics___queue-FSQueue__metric-Metric",
  "sourceFilePath": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/FairSchedulerMetrics.java",
  "functionStartLine": 148,
  "functionEndLine": 167,
  "numCommitsSeen": 7,
  "timeTaken": 1331,
  "changeHistory": [
    "cc938e99ec0904824c8072184eff75619fcaf040"
  ],
  "changeHistoryShort": {
    "cc938e99ec0904824c8072184eff75619fcaf040": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cc938e99ec0904824c8072184eff75619fcaf040": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6326. Shouldn\u0027t use AppAttemptIds to fetch applications while AM Simulator tracks app in SLS (yufeigu via rkanter)\n",
      "commitDate": "21/03/17 3:21 PM",
      "commitName": "cc938e99ec0904824c8072184eff75619fcaf040",
      "commitAuthor": "Robert Kanter",
      "diff": "@@ -0,0 +1,20 @@\n+  private void registerQueueMetrics(FSQueue queue, Metric metric) {\n+    metrics.register(\n+        \"variable.queue.\" + queue.getName() + \".\" + metric.value + \".memory\",\n+        new Gauge\u003cLong\u003e() {\n+          @Override\n+          public Long getValue() {\n+            return getMemorySize(queue, metric);\n+          }\n+        }\n+    );\n+    metrics.register(\n+        \"variable.queue.\" + queue.getName() + \".\" + metric.value + \".vcores\",\n+        new Gauge\u003cInteger\u003e() {\n+          @Override\n+          public Integer getValue() {\n+            return getVirtualCores(queue, metric);\n+          }\n+        }\n+    );\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void registerQueueMetrics(FSQueue queue, Metric metric) {\n    metrics.register(\n        \"variable.queue.\" + queue.getName() + \".\" + metric.value + \".memory\",\n        new Gauge\u003cLong\u003e() {\n          @Override\n          public Long getValue() {\n            return getMemorySize(queue, metric);\n          }\n        }\n    );\n    metrics.register(\n        \"variable.queue.\" + queue.getName() + \".\" + metric.value + \".vcores\",\n        new Gauge\u003cInteger\u003e() {\n          @Override\n          public Integer getValue() {\n            return getVirtualCores(queue, metric);\n          }\n        }\n    );\n  }",
      "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/FairSchedulerMetrics.java"
    }
  }
}