{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AdlFileSystem.java",
  "functionName": "getAccessTokenProvider",
  "functionId": "getAccessTokenProvider___config-Configuration",
  "sourceFilePath": "hadoop-tools/hadoop-azure-datalake/src/main/java/org/apache/hadoop/fs/adl/AdlFileSystem.java",
  "functionStartLine": 269,
  "functionEndLine": 299,
  "numCommitsSeen": 22,
  "timeTaken": 3333,
  "changeHistory": [
    "7769e9614956283a86eda9e4e69aaa592c0ca960",
    "56e81f2a204d5e65d29222df1b2ba4d892f9c0d5",
    "e015b563197a475e354bf84fd27e7bbcc67e00a4",
    "5c61ad24887f76dfc5a5935b2c5dceb6bfd99417"
  ],
  "changeHistoryShort": {
    "7769e9614956283a86eda9e4e69aaa592c0ca960": "Ybodychange",
    "56e81f2a204d5e65d29222df1b2ba4d892f9c0d5": "Ybodychange",
    "e015b563197a475e354bf84fd27e7bbcc67e00a4": "Ymultichange(Yparameterchange,Ybodychange)",
    "5c61ad24887f76dfc5a5935b2c5dceb6bfd99417": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7769e9614956283a86eda9e4e69aaa592c0ca960": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14627. Support MSI and DeviceCode token provider in ADLS. Contributed by Atul Sikaria.\n",
      "commitDate": "13/08/17 12:22 AM",
      "commitName": "7769e9614956283a86eda9e4e69aaa592c0ca960",
      "commitAuthor": "John Zhuge",
      "commitDateOld": "07/08/17 9:31 PM",
      "commitNameOld": "55a181f845adcdcc9b008e9906ade1544fc220e4",
      "commitAuthorOld": "Chris Douglas",
      "daysBetweenCommits": 5.12,
      "commitsBetweenForRepo": 41,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,31 @@\n   private AccessTokenProvider getAccessTokenProvider(Configuration config)\n       throws IOException {\n     Configuration conf \u003d ProviderUtils.excludeIncompatibleCredentialProviders(\n         config, AdlFileSystem.class);\n     TokenProviderType type \u003d conf.getEnum(\n         AdlConfKeys.AZURE_AD_TOKEN_PROVIDER_TYPE_KEY,\n         AdlConfKeys.AZURE_AD_TOKEN_PROVIDER_TYPE_DEFAULT);\n \n     switch (type) {\n     case RefreshToken:\n       tokenProvider \u003d getConfRefreshTokenBasedTokenProvider(conf);\n       break;\n     case ClientCredential:\n       tokenProvider \u003d getConfCredentialBasedTokenProvider(conf);\n       break;\n+    case MSI:\n+      tokenProvider \u003d getMsiBasedTokenProvider(conf);\n+      break;\n+    case DeviceCode:\n+      tokenProvider \u003d getDeviceCodeTokenProvider(conf);\n+      break;\n     case Custom:\n     default:\n       AzureADTokenProvider azureADTokenProvider \u003d getCustomAccessTokenProvider(\n           conf);\n       tokenProvider \u003d new SdkTokenProviderAdapter(azureADTokenProvider);\n       break;\n     }\n \n     return tokenProvider;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private AccessTokenProvider getAccessTokenProvider(Configuration config)\n      throws IOException {\n    Configuration conf \u003d ProviderUtils.excludeIncompatibleCredentialProviders(\n        config, AdlFileSystem.class);\n    TokenProviderType type \u003d conf.getEnum(\n        AdlConfKeys.AZURE_AD_TOKEN_PROVIDER_TYPE_KEY,\n        AdlConfKeys.AZURE_AD_TOKEN_PROVIDER_TYPE_DEFAULT);\n\n    switch (type) {\n    case RefreshToken:\n      tokenProvider \u003d getConfRefreshTokenBasedTokenProvider(conf);\n      break;\n    case ClientCredential:\n      tokenProvider \u003d getConfCredentialBasedTokenProvider(conf);\n      break;\n    case MSI:\n      tokenProvider \u003d getMsiBasedTokenProvider(conf);\n      break;\n    case DeviceCode:\n      tokenProvider \u003d getDeviceCodeTokenProvider(conf);\n      break;\n    case Custom:\n    default:\n      AzureADTokenProvider azureADTokenProvider \u003d getCustomAccessTokenProvider(\n          conf);\n      tokenProvider \u003d new SdkTokenProviderAdapter(azureADTokenProvider);\n      break;\n    }\n\n    return tokenProvider;\n  }",
      "path": "hadoop-tools/hadoop-azure-datalake/src/main/java/org/apache/hadoop/fs/adl/AdlFileSystem.java",
      "extendedDetails": {}
    },
    "56e81f2a204d5e65d29222df1b2ba4d892f9c0d5": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14174. Set default ADLS access token provider type to ClientCredential. Contributed by John Zhuge.\n\nSigned-off-by: John Zhuge \u003cjzhuge@apache.org\u003e\n",
      "commitDate": "07/04/17 12:04 PM",
      "commitName": "56e81f2a204d5e65d29222df1b2ba4d892f9c0d5",
      "commitAuthor": "John Zhuge",
      "commitDateOld": "27/03/17 11:05 PM",
      "commitNameOld": "253e3e78abb9ebe0e8103d25538ff07875b33c84",
      "commitAuthorOld": "John Zhuge",
      "daysBetweenCommits": 10.54,
      "commitsBetweenForRepo": 72,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,25 @@\n   private AccessTokenProvider getAccessTokenProvider(Configuration config)\n       throws IOException {\n     Configuration conf \u003d ProviderUtils.excludeIncompatibleCredentialProviders(\n         config, AdlFileSystem.class);\n     TokenProviderType type \u003d conf.getEnum(\n-        AdlConfKeys.AZURE_AD_TOKEN_PROVIDER_TYPE_KEY, TokenProviderType.Custom);\n+        AdlConfKeys.AZURE_AD_TOKEN_PROVIDER_TYPE_KEY,\n+        AdlConfKeys.AZURE_AD_TOKEN_PROVIDER_TYPE_DEFAULT);\n \n     switch (type) {\n     case RefreshToken:\n       tokenProvider \u003d getConfRefreshTokenBasedTokenProvider(conf);\n       break;\n     case ClientCredential:\n       tokenProvider \u003d getConfCredentialBasedTokenProvider(conf);\n       break;\n     case Custom:\n     default:\n       AzureADTokenProvider azureADTokenProvider \u003d getCustomAccessTokenProvider(\n           conf);\n       tokenProvider \u003d new SdkTokenProviderAdapter(azureADTokenProvider);\n       break;\n     }\n \n     return tokenProvider;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private AccessTokenProvider getAccessTokenProvider(Configuration config)\n      throws IOException {\n    Configuration conf \u003d ProviderUtils.excludeIncompatibleCredentialProviders(\n        config, AdlFileSystem.class);\n    TokenProviderType type \u003d conf.getEnum(\n        AdlConfKeys.AZURE_AD_TOKEN_PROVIDER_TYPE_KEY,\n        AdlConfKeys.AZURE_AD_TOKEN_PROVIDER_TYPE_DEFAULT);\n\n    switch (type) {\n    case RefreshToken:\n      tokenProvider \u003d getConfRefreshTokenBasedTokenProvider(conf);\n      break;\n    case ClientCredential:\n      tokenProvider \u003d getConfCredentialBasedTokenProvider(conf);\n      break;\n    case Custom:\n    default:\n      AzureADTokenProvider azureADTokenProvider \u003d getCustomAccessTokenProvider(\n          conf);\n      tokenProvider \u003d new SdkTokenProviderAdapter(azureADTokenProvider);\n      break;\n    }\n\n    return tokenProvider;\n  }",
      "path": "hadoop-tools/hadoop-azure-datalake/src/main/java/org/apache/hadoop/fs/adl/AdlFileSystem.java",
      "extendedDetails": {}
    },
    "e015b563197a475e354bf84fd27e7bbcc67e00a4": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-13956. Read ADLS credentials from Credential Provider. (John Zhuge via lei)\n",
      "commitDate": "19/01/17 10:48 PM",
      "commitName": "e015b563197a475e354bf84fd27e7bbcc67e00a4",
      "commitAuthor": "Lei Xu",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-13956. Read ADLS credentials from Credential Provider. (John Zhuge via lei)\n",
          "commitDate": "19/01/17 10:48 PM",
          "commitName": "e015b563197a475e354bf84fd27e7bbcc67e00a4",
          "commitAuthor": "Lei Xu",
          "commitDateOld": "02/12/16 3:54 PM",
          "commitNameOld": "4113ec5fa5ca049ebaba039b1faf3911c6a34f7b",
          "commitAuthorOld": "Mingliang Liu",
          "daysBetweenCommits": 48.29,
          "commitsBetweenForRepo": 243,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,24 @@\n-  private AccessTokenProvider getAccessTokenProvider(Configuration conf)\n+  private AccessTokenProvider getAccessTokenProvider(Configuration config)\n       throws IOException {\n+    Configuration conf \u003d ProviderUtils.excludeIncompatibleCredentialProviders(\n+        config, AdlFileSystem.class);\n     TokenProviderType type \u003d conf.getEnum(\n         AdlConfKeys.AZURE_AD_TOKEN_PROVIDER_TYPE_KEY, TokenProviderType.Custom);\n \n     switch (type) {\n     case RefreshToken:\n       tokenProvider \u003d getConfRefreshTokenBasedTokenProvider(conf);\n       break;\n     case ClientCredential:\n       tokenProvider \u003d getConfCredentialBasedTokenProvider(conf);\n       break;\n     case Custom:\n     default:\n       AzureADTokenProvider azureADTokenProvider \u003d getCustomAccessTokenProvider(\n           conf);\n       tokenProvider \u003d new SdkTokenProviderAdapter(azureADTokenProvider);\n       break;\n     }\n \n     return tokenProvider;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private AccessTokenProvider getAccessTokenProvider(Configuration config)\n      throws IOException {\n    Configuration conf \u003d ProviderUtils.excludeIncompatibleCredentialProviders(\n        config, AdlFileSystem.class);\n    TokenProviderType type \u003d conf.getEnum(\n        AdlConfKeys.AZURE_AD_TOKEN_PROVIDER_TYPE_KEY, TokenProviderType.Custom);\n\n    switch (type) {\n    case RefreshToken:\n      tokenProvider \u003d getConfRefreshTokenBasedTokenProvider(conf);\n      break;\n    case ClientCredential:\n      tokenProvider \u003d getConfCredentialBasedTokenProvider(conf);\n      break;\n    case Custom:\n    default:\n      AzureADTokenProvider azureADTokenProvider \u003d getCustomAccessTokenProvider(\n          conf);\n      tokenProvider \u003d new SdkTokenProviderAdapter(azureADTokenProvider);\n      break;\n    }\n\n    return tokenProvider;\n  }",
          "path": "hadoop-tools/hadoop-azure-datalake/src/main/java/org/apache/hadoop/fs/adl/AdlFileSystem.java",
          "extendedDetails": {
            "oldValue": "[conf-Configuration]",
            "newValue": "[config-Configuration]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-13956. Read ADLS credentials from Credential Provider. (John Zhuge via lei)\n",
          "commitDate": "19/01/17 10:48 PM",
          "commitName": "e015b563197a475e354bf84fd27e7bbcc67e00a4",
          "commitAuthor": "Lei Xu",
          "commitDateOld": "02/12/16 3:54 PM",
          "commitNameOld": "4113ec5fa5ca049ebaba039b1faf3911c6a34f7b",
          "commitAuthorOld": "Mingliang Liu",
          "daysBetweenCommits": 48.29,
          "commitsBetweenForRepo": 243,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,24 @@\n-  private AccessTokenProvider getAccessTokenProvider(Configuration conf)\n+  private AccessTokenProvider getAccessTokenProvider(Configuration config)\n       throws IOException {\n+    Configuration conf \u003d ProviderUtils.excludeIncompatibleCredentialProviders(\n+        config, AdlFileSystem.class);\n     TokenProviderType type \u003d conf.getEnum(\n         AdlConfKeys.AZURE_AD_TOKEN_PROVIDER_TYPE_KEY, TokenProviderType.Custom);\n \n     switch (type) {\n     case RefreshToken:\n       tokenProvider \u003d getConfRefreshTokenBasedTokenProvider(conf);\n       break;\n     case ClientCredential:\n       tokenProvider \u003d getConfCredentialBasedTokenProvider(conf);\n       break;\n     case Custom:\n     default:\n       AzureADTokenProvider azureADTokenProvider \u003d getCustomAccessTokenProvider(\n           conf);\n       tokenProvider \u003d new SdkTokenProviderAdapter(azureADTokenProvider);\n       break;\n     }\n \n     return tokenProvider;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private AccessTokenProvider getAccessTokenProvider(Configuration config)\n      throws IOException {\n    Configuration conf \u003d ProviderUtils.excludeIncompatibleCredentialProviders(\n        config, AdlFileSystem.class);\n    TokenProviderType type \u003d conf.getEnum(\n        AdlConfKeys.AZURE_AD_TOKEN_PROVIDER_TYPE_KEY, TokenProviderType.Custom);\n\n    switch (type) {\n    case RefreshToken:\n      tokenProvider \u003d getConfRefreshTokenBasedTokenProvider(conf);\n      break;\n    case ClientCredential:\n      tokenProvider \u003d getConfCredentialBasedTokenProvider(conf);\n      break;\n    case Custom:\n    default:\n      AzureADTokenProvider azureADTokenProvider \u003d getCustomAccessTokenProvider(\n          conf);\n      tokenProvider \u003d new SdkTokenProviderAdapter(azureADTokenProvider);\n      break;\n    }\n\n    return tokenProvider;\n  }",
          "path": "hadoop-tools/hadoop-azure-datalake/src/main/java/org/apache/hadoop/fs/adl/AdlFileSystem.java",
          "extendedDetails": {}
        }
      ]
    },
    "5c61ad24887f76dfc5a5935b2c5dceb6bfd99417": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-13037. Refactor Azure Data Lake Store as an independent FileSystem. Contributed by Vishwajeet Dusane\n",
      "commitDate": "11/11/16 11:15 AM",
      "commitName": "5c61ad24887f76dfc5a5935b2c5dceb6bfd99417",
      "commitAuthor": "Chris Douglas",
      "diff": "@@ -0,0 +1,22 @@\n+  private AccessTokenProvider getAccessTokenProvider(Configuration conf)\n+      throws IOException {\n+    TokenProviderType type \u003d conf.getEnum(\n+        AdlConfKeys.AZURE_AD_TOKEN_PROVIDER_TYPE_KEY, TokenProviderType.Custom);\n+\n+    switch (type) {\n+    case RefreshToken:\n+      tokenProvider \u003d getConfRefreshTokenBasedTokenProvider(conf);\n+      break;\n+    case ClientCredential:\n+      tokenProvider \u003d getConfCredentialBasedTokenProvider(conf);\n+      break;\n+    case Custom:\n+    default:\n+      AzureADTokenProvider azureADTokenProvider \u003d getCustomAccessTokenProvider(\n+          conf);\n+      tokenProvider \u003d new SdkTokenProviderAdapter(azureADTokenProvider);\n+      break;\n+    }\n+\n+    return tokenProvider;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private AccessTokenProvider getAccessTokenProvider(Configuration conf)\n      throws IOException {\n    TokenProviderType type \u003d conf.getEnum(\n        AdlConfKeys.AZURE_AD_TOKEN_PROVIDER_TYPE_KEY, TokenProviderType.Custom);\n\n    switch (type) {\n    case RefreshToken:\n      tokenProvider \u003d getConfRefreshTokenBasedTokenProvider(conf);\n      break;\n    case ClientCredential:\n      tokenProvider \u003d getConfCredentialBasedTokenProvider(conf);\n      break;\n    case Custom:\n    default:\n      AzureADTokenProvider azureADTokenProvider \u003d getCustomAccessTokenProvider(\n          conf);\n      tokenProvider \u003d new SdkTokenProviderAdapter(azureADTokenProvider);\n      break;\n    }\n\n    return tokenProvider;\n  }",
      "path": "hadoop-tools/hadoop-azure-datalake/src/main/java/org/apache/hadoop/fs/adl/AdlFileSystem.java"
    }
  }
}