{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ServiceManager.java",
  "functionName": "handle",
  "functionId": "handle___event-ServiceEvent",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/ServiceManager.java",
  "functionStartLine": 119,
  "functionEndLine": 137,
  "numCommitsSeen": 8,
  "timeTaken": 1740,
  "changeHistory": [
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
    "4a7369b09547a78f532af66c763c6994a38b5d68",
    "27d60a16342fd39973d43b61008f54a8815a6237"
  ],
  "changeHistoryShort": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": "Ybodychange",
    "4a7369b09547a78f532af66c763c6994a38b5d68": "Ybodychange",
    "27d60a16342fd39973d43b61008f54a8815a6237": "Yintroduced"
  },
  "changeHistoryDetails": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9341.  Fixed enentrant lock usage in YARN project.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "07/03/19 1:47 PM",
      "commitName": "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "28/09/18 9:40 AM",
      "commitNameOld": "d1c1dde3097eea6a46a39d0312f94949f6884002",
      "commitAuthorOld": "Billie Rinaldi",
      "daysBetweenCommits": 160.21,
      "commitsBetweenForRepo": 1241,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n   public void handle(ServiceEvent event) {\n+    writeLock.lock();\n     try {\n-      writeLock.lock();\n       State oldState \u003d getState();\n       try {\n         stateMachine.doTransition(event.getType(), event);\n       } catch (InvalidStateTransitionException e) {\n         LOG.error(MessageFormat.format(\n             \"[SERVICE]: Invalid event {1} at {2}.\", event.getType(),\n             oldState), e);\n       }\n       if (oldState !\u003d getState()) {\n         LOG.info(\"[SERVICE] Transitioned from {} to {} on {} event.\",\n             oldState, getState(), event.getType());\n       }\n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void handle(ServiceEvent event) {\n    writeLock.lock();\n    try {\n      State oldState \u003d getState();\n      try {\n        stateMachine.doTransition(event.getType(), event);\n      } catch (InvalidStateTransitionException e) {\n        LOG.error(MessageFormat.format(\n            \"[SERVICE]: Invalid event {1} at {2}.\", event.getType(),\n            oldState), e);\n      }\n      if (oldState !\u003d getState()) {\n        LOG.info(\"[SERVICE] Transitioned from {} to {} on {} event.\",\n            oldState, getState(), event.getType());\n      }\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/ServiceManager.java",
      "extendedDetails": {}
    },
    "4a7369b09547a78f532af66c763c6994a38b5d68": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7939.  Added support to upgrade a component instance.\n            Contributed by Chandni Singh\n",
      "commitDate": "26/04/18 1:54 PM",
      "commitName": "4a7369b09547a78f532af66c763c6994a38b5d68",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "26/03/18 3:46 PM",
      "commitNameOld": "27d60a16342fd39973d43b61008f54a8815a6237",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 30.92,
      "commitsBetweenForRepo": 699,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n   public void handle(ServiceEvent event) {\n     try {\n       writeLock.lock();\n       State oldState \u003d getState();\n       try {\n         stateMachine.doTransition(event.getType(), event);\n       } catch (InvalidStateTransitionException e) {\n         LOG.error(MessageFormat.format(\n-            \"[SERVICE]: Invalid event {0} at {1}.\", event.getType(),\n+            \"[SERVICE]: Invalid event {1} at {2}.\", event.getType(),\n             oldState), e);\n       }\n       if (oldState !\u003d getState()) {\n         LOG.info(\"[SERVICE] Transitioned from {} to {} on {} event.\",\n             oldState, getState(), event.getType());\n       }\n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void handle(ServiceEvent event) {\n    try {\n      writeLock.lock();\n      State oldState \u003d getState();\n      try {\n        stateMachine.doTransition(event.getType(), event);\n      } catch (InvalidStateTransitionException e) {\n        LOG.error(MessageFormat.format(\n            \"[SERVICE]: Invalid event {1} at {2}.\", event.getType(),\n            oldState), e);\n      }\n      if (oldState !\u003d getState()) {\n        LOG.info(\"[SERVICE] Transitioned from {} to {} on {} event.\",\n            oldState, getState(), event.getType());\n      }\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/ServiceManager.java",
      "extendedDetails": {}
    },
    "27d60a16342fd39973d43b61008f54a8815a6237": {
      "type": "Yintroduced",
      "commitMessage": "YARN-8018.  Added support for initiating yarn service upgrade.\n            Contributed by Chandni Singh\n",
      "commitDate": "26/03/18 3:46 PM",
      "commitName": "27d60a16342fd39973d43b61008f54a8815a6237",
      "commitAuthor": "Eric Yang",
      "diff": "@@ -0,0 +1,19 @@\n+  public void handle(ServiceEvent event) {\n+    try {\n+      writeLock.lock();\n+      State oldState \u003d getState();\n+      try {\n+        stateMachine.doTransition(event.getType(), event);\n+      } catch (InvalidStateTransitionException e) {\n+        LOG.error(MessageFormat.format(\n+            \"[SERVICE]: Invalid event {0} at {1}.\", event.getType(),\n+            oldState), e);\n+      }\n+      if (oldState !\u003d getState()) {\n+        LOG.info(\"[SERVICE] Transitioned from {} to {} on {} event.\",\n+            oldState, getState(), event.getType());\n+      }\n+    } finally {\n+      writeLock.unlock();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void handle(ServiceEvent event) {\n    try {\n      writeLock.lock();\n      State oldState \u003d getState();\n      try {\n        stateMachine.doTransition(event.getType(), event);\n      } catch (InvalidStateTransitionException e) {\n        LOG.error(MessageFormat.format(\n            \"[SERVICE]: Invalid event {0} at {1}.\", event.getType(),\n            oldState), e);\n      }\n      if (oldState !\u003d getState()) {\n        LOG.info(\"[SERVICE] Transitioned from {} to {} on {} event.\",\n            oldState, getState(), event.getType());\n      }\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/ServiceManager.java"
    }
  }
}