{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AdminService.java",
  "functionName": "transitionToStandby",
  "functionId": "transitionToStandby___reqInfo-HAServiceProtocol.StateChangeRequestInfo",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
  "functionStartLine": 342,
  "functionEndLine": 364,
  "numCommitsSeen": 83,
  "timeTaken": 3400,
  "changeHistory": [
    "89022f8d4bac0e9d0b848fd91e9c4d700fe1cdbe",
    "23bf6c72071782e3fd5a628e21495d6b974c7a9e",
    "ad70f26b1fe6579166a042fec2e9f21ec56464cb",
    "c3cc855d27470edca7ca0bdc0aa8907b544b636e",
    "94e2e78ab751d1da775d0acf6e5ee6c0694ed746",
    "c58ae266e9fa336ef5b515f540c8ce8bb2f76df8",
    "03510d00f48137fe4273c3e694e87fc0e660a706",
    "ead3dcc3dea0d5b6d3248c1e1a6300f0714a8456"
  ],
  "changeHistoryShort": {
    "89022f8d4bac0e9d0b848fd91e9c4d700fe1cdbe": "Ybodychange",
    "23bf6c72071782e3fd5a628e21495d6b974c7a9e": "Ybodychange",
    "ad70f26b1fe6579166a042fec2e9f21ec56464cb": "Ybodychange",
    "c3cc855d27470edca7ca0bdc0aa8907b544b636e": "Ybodychange",
    "94e2e78ab751d1da775d0acf6e5ee6c0694ed746": "Ybodychange",
    "c58ae266e9fa336ef5b515f540c8ce8bb2f76df8": "Ymultichange(Ymovefromfile,Yparameterchange)",
    "03510d00f48137fe4273c3e694e87fc0e660a706": "Ymultichange(Yexceptionschange,Ybodychange)",
    "ead3dcc3dea0d5b6d3248c1e1a6300f0714a8456": "Yintroduced"
  },
  "changeHistoryDetails": {
    "89022f8d4bac0e9d0b848fd91e9c4d700fe1cdbe": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4438. Implement RM leader election with curator. Contributed by Jian He\n",
      "commitDate": "07/01/16 2:33 PM",
      "commitName": "89022f8d4bac0e9d0b848fd91e9c4d700fe1cdbe",
      "commitAuthor": "Xuan",
      "commitDateOld": "10/10/15 10:51 PM",
      "commitNameOld": "db9304788187c700647c4d84caeb3b5ad6d868d8",
      "commitAuthorOld": "Devaraj K",
      "daysBetweenCommits": 88.7,
      "commitsBetweenForRepo": 600,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   public synchronized void transitionToStandby(\n       HAServiceProtocol.StateChangeRequestInfo reqInfo) throws IOException {\n     // call refreshAdminAcls before HA state transition\n     // for the case that adminAcls have been updated in previous active RM\n     try {\n       refreshAdminAcls(false);\n     } catch (YarnException ex) {\n       throw new ServiceFailedException(\"Can not execute refreshAdminAcls\", ex);\n     }\n     UserGroupInformation user \u003d checkAccess(\"transitionToStandby\");\n     checkHaStateChange(reqInfo);\n     try {\n       rm.transitionToStandby(true);\n       RMAuditLogger.logSuccess(user.getShortUserName(),\n-          \"transitionToStandby\", \"RMHAProtocolService\");\n+          \"transitionToStandby\", \"RM\");\n     } catch (Exception e) {\n       RMAuditLogger.logFailure(user.getShortUserName(), \"transitionToStandby\",\n-          \"\", \"RMHAProtocolService\",\n+          \"\", \"RM\",\n           \"Exception transitioning to standby\");\n       throw new ServiceFailedException(\n           \"Error when transitioning to Standby mode\", e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void transitionToStandby(\n      HAServiceProtocol.StateChangeRequestInfo reqInfo) throws IOException {\n    // call refreshAdminAcls before HA state transition\n    // for the case that adminAcls have been updated in previous active RM\n    try {\n      refreshAdminAcls(false);\n    } catch (YarnException ex) {\n      throw new ServiceFailedException(\"Can not execute refreshAdminAcls\", ex);\n    }\n    UserGroupInformation user \u003d checkAccess(\"transitionToStandby\");\n    checkHaStateChange(reqInfo);\n    try {\n      rm.transitionToStandby(true);\n      RMAuditLogger.logSuccess(user.getShortUserName(),\n          \"transitionToStandby\", \"RM\");\n    } catch (Exception e) {\n      RMAuditLogger.logFailure(user.getShortUserName(), \"transitionToStandby\",\n          \"\", \"RM\",\n          \"Exception transitioning to standby\");\n      throw new ServiceFailedException(\n          \"Error when transitioning to Standby mode\", e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {}
    },
    "23bf6c72071782e3fd5a628e21495d6b974c7a9e": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3100. Made YARN authorization pluggable. Contributed by Jian He.\n",
      "commitDate": "09/02/15 8:34 PM",
      "commitName": "23bf6c72071782e3fd5a628e21495d6b974c7a9e",
      "commitAuthor": "Zhijie Shen",
      "commitDateOld": "26/12/14 6:59 AM",
      "commitNameOld": "40ee4bff65b2bfdabfd16ee7d9be3382a0476565",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 45.57,
      "commitsBetweenForRepo": 302,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   public synchronized void transitionToStandby(\n       HAServiceProtocol.StateChangeRequestInfo reqInfo) throws IOException {\n     // call refreshAdminAcls before HA state transition\n     // for the case that adminAcls have been updated in previous active RM\n     try {\n       refreshAdminAcls(false);\n     } catch (YarnException ex) {\n       throw new ServiceFailedException(\"Can not execute refreshAdminAcls\", ex);\n     }\n     UserGroupInformation user \u003d checkAccess(\"transitionToStandby\");\n     checkHaStateChange(reqInfo);\n     try {\n       rm.transitionToStandby(true);\n       RMAuditLogger.logSuccess(user.getShortUserName(),\n           \"transitionToStandby\", \"RMHAProtocolService\");\n     } catch (Exception e) {\n       RMAuditLogger.logFailure(user.getShortUserName(), \"transitionToStandby\",\n-          adminAcl.toString(), \"RMHAProtocolService\",\n+          \"\", \"RMHAProtocolService\",\n           \"Exception transitioning to standby\");\n       throw new ServiceFailedException(\n           \"Error when transitioning to Standby mode\", e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void transitionToStandby(\n      HAServiceProtocol.StateChangeRequestInfo reqInfo) throws IOException {\n    // call refreshAdminAcls before HA state transition\n    // for the case that adminAcls have been updated in previous active RM\n    try {\n      refreshAdminAcls(false);\n    } catch (YarnException ex) {\n      throw new ServiceFailedException(\"Can not execute refreshAdminAcls\", ex);\n    }\n    UserGroupInformation user \u003d checkAccess(\"transitionToStandby\");\n    checkHaStateChange(reqInfo);\n    try {\n      rm.transitionToStandby(true);\n      RMAuditLogger.logSuccess(user.getShortUserName(),\n          \"transitionToStandby\", \"RMHAProtocolService\");\n    } catch (Exception e) {\n      RMAuditLogger.logFailure(user.getShortUserName(), \"transitionToStandby\",\n          \"\", \"RMHAProtocolService\",\n          \"Exception transitioning to standby\");\n      throw new ServiceFailedException(\n          \"Error when transitioning to Standby mode\", e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {}
    },
    "ad70f26b1fe6579166a042fec2e9f21ec56464cb": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1734. Fixed ResourceManager to update the configurations when it transits from standby to active mode so as to assimilate any changes that happened while it was in standby mode. Contributed by Xuan Gong.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1571539 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/02/14 6:07 PM",
      "commitName": "ad70f26b1fe6579166a042fec2e9f21ec56464cb",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "19/02/14 9:52 AM",
      "commitNameOld": "9da9f7d4d8f1dce210995a06863a8836c23d7c3a",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 5.34,
      "commitsBetweenForRepo": 43,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,23 @@\n   public synchronized void transitionToStandby(\n       HAServiceProtocol.StateChangeRequestInfo reqInfo) throws IOException {\n+    // call refreshAdminAcls before HA state transition\n+    // for the case that adminAcls have been updated in previous active RM\n+    try {\n+      refreshAdminAcls(false);\n+    } catch (YarnException ex) {\n+      throw new ServiceFailedException(\"Can not execute refreshAdminAcls\", ex);\n+    }\n     UserGroupInformation user \u003d checkAccess(\"transitionToStandby\");\n     checkHaStateChange(reqInfo);\n     try {\n       rm.transitionToStandby(true);\n       RMAuditLogger.logSuccess(user.getShortUserName(),\n           \"transitionToStandby\", \"RMHAProtocolService\");\n     } catch (Exception e) {\n       RMAuditLogger.logFailure(user.getShortUserName(), \"transitionToStandby\",\n           adminAcl.toString(), \"RMHAProtocolService\",\n           \"Exception transitioning to standby\");\n       throw new ServiceFailedException(\n           \"Error when transitioning to Standby mode\", e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void transitionToStandby(\n      HAServiceProtocol.StateChangeRequestInfo reqInfo) throws IOException {\n    // call refreshAdminAcls before HA state transition\n    // for the case that adminAcls have been updated in previous active RM\n    try {\n      refreshAdminAcls(false);\n    } catch (YarnException ex) {\n      throw new ServiceFailedException(\"Can not execute refreshAdminAcls\", ex);\n    }\n    UserGroupInformation user \u003d checkAccess(\"transitionToStandby\");\n    checkHaStateChange(reqInfo);\n    try {\n      rm.transitionToStandby(true);\n      RMAuditLogger.logSuccess(user.getShortUserName(),\n          \"transitionToStandby\", \"RMHAProtocolService\");\n    } catch (Exception e) {\n      RMAuditLogger.logFailure(user.getShortUserName(), \"transitionToStandby\",\n          adminAcl.toString(), \"RMHAProtocolService\",\n          \"Exception transitioning to standby\");\n      throw new ServiceFailedException(\n          \"Error when transitioning to Standby mode\", e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {}
    },
    "c3cc855d27470edca7ca0bdc0aa8907b544b636e": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1029. Added embedded leader election in the ResourceManager. Contributed by Karthik Kambatla.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1556103 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/01/14 5:56 PM",
      "commitName": "c3cc855d27470edca7ca0bdc0aa8907b544b636e",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "28/12/13 9:43 PM",
      "commitNameOld": "e7120079bd1dd8c87267e126dac58cbc70b8d827",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 8.84,
      "commitsBetweenForRepo": 33,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,16 @@\n   public synchronized void transitionToStandby(\n       HAServiceProtocol.StateChangeRequestInfo reqInfo) throws IOException {\n     UserGroupInformation user \u003d checkAccess(\"transitionToStandby\");\n-    // TODO (YARN-1177): When automatic failover is enabled,\n-    // check if transition should be allowed for this request\n+    checkHaStateChange(reqInfo);\n     try {\n       rm.transitionToStandby(true);\n       RMAuditLogger.logSuccess(user.getShortUserName(),\n           \"transitionToStandby\", \"RMHAProtocolService\");\n     } catch (Exception e) {\n       RMAuditLogger.logFailure(user.getShortUserName(), \"transitionToStandby\",\n           adminAcl.toString(), \"RMHAProtocolService\",\n           \"Exception transitioning to standby\");\n       throw new ServiceFailedException(\n           \"Error when transitioning to Standby mode\", e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void transitionToStandby(\n      HAServiceProtocol.StateChangeRequestInfo reqInfo) throws IOException {\n    UserGroupInformation user \u003d checkAccess(\"transitionToStandby\");\n    checkHaStateChange(reqInfo);\n    try {\n      rm.transitionToStandby(true);\n      RMAuditLogger.logSuccess(user.getShortUserName(),\n          \"transitionToStandby\", \"RMHAProtocolService\");\n    } catch (Exception e) {\n      RMAuditLogger.logFailure(user.getShortUserName(), \"transitionToStandby\",\n          adminAcl.toString(), \"RMHAProtocolService\",\n          \"Exception transitioning to standby\");\n      throw new ServiceFailedException(\n          \"Error when transitioning to Standby mode\", e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {}
    },
    "94e2e78ab751d1da775d0acf6e5ee6c0694ed746": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1481. Move internal services logic from AdminService to ResourceManager. (vinodkv via kasha)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1550167 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/12/13 7:13 AM",
      "commitName": "94e2e78ab751d1da775d0acf6e5ee6c0694ed746",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "02/12/13 2:18 PM",
      "commitNameOld": "c58ae266e9fa336ef5b515f540c8ce8bb2f76df8",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 8.7,
      "commitsBetweenForRepo": 52,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n-  public synchronized void transitionToStandby(HAServiceProtocol.StateChangeRequestInfo reqInfo)\n-      throws IOException {\n+  public synchronized void transitionToStandby(\n+      HAServiceProtocol.StateChangeRequestInfo reqInfo) throws IOException {\n     UserGroupInformation user \u003d checkAccess(\"transitionToStandby\");\n     // TODO (YARN-1177): When automatic failover is enabled,\n     // check if transition should be allowed for this request\n     try {\n-      transitionToStandby(true);\n+      rm.transitionToStandby(true);\n       RMAuditLogger.logSuccess(user.getShortUserName(),\n           \"transitionToStandby\", \"RMHAProtocolService\");\n     } catch (Exception e) {\n       RMAuditLogger.logFailure(user.getShortUserName(), \"transitionToStandby\",\n           adminAcl.toString(), \"RMHAProtocolService\",\n           \"Exception transitioning to standby\");\n       throw new ServiceFailedException(\n           \"Error when transitioning to Standby mode\", e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void transitionToStandby(\n      HAServiceProtocol.StateChangeRequestInfo reqInfo) throws IOException {\n    UserGroupInformation user \u003d checkAccess(\"transitionToStandby\");\n    // TODO (YARN-1177): When automatic failover is enabled,\n    // check if transition should be allowed for this request\n    try {\n      rm.transitionToStandby(true);\n      RMAuditLogger.logSuccess(user.getShortUserName(),\n          \"transitionToStandby\", \"RMHAProtocolService\");\n    } catch (Exception e) {\n      RMAuditLogger.logFailure(user.getShortUserName(), \"transitionToStandby\",\n          adminAcl.toString(), \"RMHAProtocolService\",\n          \"Exception transitioning to standby\");\n      throw new ServiceFailedException(\n          \"Error when transitioning to Standby mode\", e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {}
    },
    "c58ae266e9fa336ef5b515f540c8ce8bb2f76df8": {
      "type": "Ymultichange(Ymovefromfile,Yparameterchange)",
      "commitMessage": "YARN-1318. Promoted AdminService to an Always-On service and merged it into RMHAProtocolService. Contributed by Karthik Kambatla.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1547212 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/12/13 2:18 PM",
      "commitName": "c58ae266e9fa336ef5b515f540c8ce8bb2f76df8",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-1318. Promoted AdminService to an Always-On service and merged it into RMHAProtocolService. Contributed by Karthik Kambatla.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1547212 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "02/12/13 2:18 PM",
          "commitName": "c58ae266e9fa336ef5b515f540c8ce8bb2f76df8",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "02/12/13 12:18 PM",
          "commitNameOld": "38a04a3042c5af455605bd3477358893700e2a9d",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 0.08,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n-  public synchronized void transitionToStandby(StateChangeRequestInfo reqInfo)\n+  public synchronized void transitionToStandby(HAServiceProtocol.StateChangeRequestInfo reqInfo)\n       throws IOException {\n     UserGroupInformation user \u003d checkAccess(\"transitionToStandby\");\n     // TODO (YARN-1177): When automatic failover is enabled,\n     // check if transition should be allowed for this request\n     try {\n       transitionToStandby(true);\n       RMAuditLogger.logSuccess(user.getShortUserName(),\n           \"transitionToStandby\", \"RMHAProtocolService\");\n     } catch (Exception e) {\n       RMAuditLogger.logFailure(user.getShortUserName(), \"transitionToStandby\",\n           adminAcl.toString(), \"RMHAProtocolService\",\n           \"Exception transitioning to standby\");\n       throw new ServiceFailedException(\n           \"Error when transitioning to Standby mode\", e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void transitionToStandby(HAServiceProtocol.StateChangeRequestInfo reqInfo)\n      throws IOException {\n    UserGroupInformation user \u003d checkAccess(\"transitionToStandby\");\n    // TODO (YARN-1177): When automatic failover is enabled,\n    // check if transition should be allowed for this request\n    try {\n      transitionToStandby(true);\n      RMAuditLogger.logSuccess(user.getShortUserName(),\n          \"transitionToStandby\", \"RMHAProtocolService\");\n    } catch (Exception e) {\n      RMAuditLogger.logFailure(user.getShortUserName(), \"transitionToStandby\",\n          adminAcl.toString(), \"RMHAProtocolService\",\n          \"Exception transitioning to standby\");\n      throw new ServiceFailedException(\n          \"Error when transitioning to Standby mode\", e);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMHAProtocolService.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
            "oldMethodName": "transitionToStandby",
            "newMethodName": "transitionToStandby"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-1318. Promoted AdminService to an Always-On service and merged it into RMHAProtocolService. Contributed by Karthik Kambatla.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1547212 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "02/12/13 2:18 PM",
          "commitName": "c58ae266e9fa336ef5b515f540c8ce8bb2f76df8",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "02/12/13 12:18 PM",
          "commitNameOld": "38a04a3042c5af455605bd3477358893700e2a9d",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 0.08,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n-  public synchronized void transitionToStandby(StateChangeRequestInfo reqInfo)\n+  public synchronized void transitionToStandby(HAServiceProtocol.StateChangeRequestInfo reqInfo)\n       throws IOException {\n     UserGroupInformation user \u003d checkAccess(\"transitionToStandby\");\n     // TODO (YARN-1177): When automatic failover is enabled,\n     // check if transition should be allowed for this request\n     try {\n       transitionToStandby(true);\n       RMAuditLogger.logSuccess(user.getShortUserName(),\n           \"transitionToStandby\", \"RMHAProtocolService\");\n     } catch (Exception e) {\n       RMAuditLogger.logFailure(user.getShortUserName(), \"transitionToStandby\",\n           adminAcl.toString(), \"RMHAProtocolService\",\n           \"Exception transitioning to standby\");\n       throw new ServiceFailedException(\n           \"Error when transitioning to Standby mode\", e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void transitionToStandby(HAServiceProtocol.StateChangeRequestInfo reqInfo)\n      throws IOException {\n    UserGroupInformation user \u003d checkAccess(\"transitionToStandby\");\n    // TODO (YARN-1177): When automatic failover is enabled,\n    // check if transition should be allowed for this request\n    try {\n      transitionToStandby(true);\n      RMAuditLogger.logSuccess(user.getShortUserName(),\n          \"transitionToStandby\", \"RMHAProtocolService\");\n    } catch (Exception e) {\n      RMAuditLogger.logFailure(user.getShortUserName(), \"transitionToStandby\",\n          adminAcl.toString(), \"RMHAProtocolService\",\n          \"Exception transitioning to standby\");\n      throw new ServiceFailedException(\n          \"Error when transitioning to Standby mode\", e);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
          "extendedDetails": {
            "oldValue": "[reqInfo-StateChangeRequestInfo]",
            "newValue": "[reqInfo-HAServiceProtocol.StateChangeRequestInfo]"
          }
        }
      ]
    },
    "03510d00f48137fe4273c3e694e87fc0e660a706": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "YARN-1068. Add admin support for HA operations (Karthik Kambatla via bikas)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1536888 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/10/13 2:03 PM",
      "commitName": "03510d00f48137fe4273c3e694e87fc0e660a706",
      "commitAuthor": "Bikas Saha",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "YARN-1068. Add admin support for HA operations (Karthik Kambatla via bikas)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1536888 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "29/10/13 2:03 PM",
          "commitName": "03510d00f48137fe4273c3e694e87fc0e660a706",
          "commitAuthor": "Bikas Saha",
          "commitDateOld": "22/10/13 6:10 PM",
          "commitNameOld": "116b459d2299f933ae028fbcb6d71d338d4d3e94",
          "commitAuthorOld": "Bikas Saha",
          "daysBetweenCommits": 6.83,
          "commitsBetweenForRepo": 24,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,17 @@\n-  public synchronized void transitionToStandby(StateChangeRequestInfo reqInfo) {\n+  public synchronized void transitionToStandby(StateChangeRequestInfo reqInfo)\n+      throws IOException {\n+    UserGroupInformation user \u003d checkAccess(\"transitionToStandby\");\n     // TODO (YARN-1177): When automatic failover is enabled,\n     // check if transition should be allowed for this request\n     try {\n       transitionToStandby(true);\n+      RMAuditLogger.logSuccess(user.getShortUserName(),\n+          \"transitionToStandby\", \"RMHAProtocolService\");\n     } catch (Exception e) {\n-      LOG.error(\"Error when transitioning to Standby mode\", e);\n-      throw new YarnRuntimeException(e);\n+      RMAuditLogger.logFailure(user.getShortUserName(), \"transitionToStandby\",\n+          adminAcl.toString(), \"RMHAProtocolService\",\n+          \"Exception transitioning to standby\");\n+      throw new ServiceFailedException(\n+          \"Error when transitioning to Standby mode\", e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void transitionToStandby(StateChangeRequestInfo reqInfo)\n      throws IOException {\n    UserGroupInformation user \u003d checkAccess(\"transitionToStandby\");\n    // TODO (YARN-1177): When automatic failover is enabled,\n    // check if transition should be allowed for this request\n    try {\n      transitionToStandby(true);\n      RMAuditLogger.logSuccess(user.getShortUserName(),\n          \"transitionToStandby\", \"RMHAProtocolService\");\n    } catch (Exception e) {\n      RMAuditLogger.logFailure(user.getShortUserName(), \"transitionToStandby\",\n          adminAcl.toString(), \"RMHAProtocolService\",\n          \"Exception transitioning to standby\");\n      throw new ServiceFailedException(\n          \"Error when transitioning to Standby mode\", e);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMHAProtocolService.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[IOException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-1068. Add admin support for HA operations (Karthik Kambatla via bikas)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1536888 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "29/10/13 2:03 PM",
          "commitName": "03510d00f48137fe4273c3e694e87fc0e660a706",
          "commitAuthor": "Bikas Saha",
          "commitDateOld": "22/10/13 6:10 PM",
          "commitNameOld": "116b459d2299f933ae028fbcb6d71d338d4d3e94",
          "commitAuthorOld": "Bikas Saha",
          "daysBetweenCommits": 6.83,
          "commitsBetweenForRepo": 24,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,17 @@\n-  public synchronized void transitionToStandby(StateChangeRequestInfo reqInfo) {\n+  public synchronized void transitionToStandby(StateChangeRequestInfo reqInfo)\n+      throws IOException {\n+    UserGroupInformation user \u003d checkAccess(\"transitionToStandby\");\n     // TODO (YARN-1177): When automatic failover is enabled,\n     // check if transition should be allowed for this request\n     try {\n       transitionToStandby(true);\n+      RMAuditLogger.logSuccess(user.getShortUserName(),\n+          \"transitionToStandby\", \"RMHAProtocolService\");\n     } catch (Exception e) {\n-      LOG.error(\"Error when transitioning to Standby mode\", e);\n-      throw new YarnRuntimeException(e);\n+      RMAuditLogger.logFailure(user.getShortUserName(), \"transitionToStandby\",\n+          adminAcl.toString(), \"RMHAProtocolService\",\n+          \"Exception transitioning to standby\");\n+      throw new ServiceFailedException(\n+          \"Error when transitioning to Standby mode\", e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void transitionToStandby(StateChangeRequestInfo reqInfo)\n      throws IOException {\n    UserGroupInformation user \u003d checkAccess(\"transitionToStandby\");\n    // TODO (YARN-1177): When automatic failover is enabled,\n    // check if transition should be allowed for this request\n    try {\n      transitionToStandby(true);\n      RMAuditLogger.logSuccess(user.getShortUserName(),\n          \"transitionToStandby\", \"RMHAProtocolService\");\n    } catch (Exception e) {\n      RMAuditLogger.logFailure(user.getShortUserName(), \"transitionToStandby\",\n          adminAcl.toString(), \"RMHAProtocolService\",\n          \"Exception transitioning to standby\");\n      throw new ServiceFailedException(\n          \"Error when transitioning to Standby mode\", e);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMHAProtocolService.java",
          "extendedDetails": {}
        }
      ]
    },
    "ead3dcc3dea0d5b6d3248c1e1a6300f0714a8456": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1027. Implement RMHAProtocolService (Karthik Kambatla via bikas)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1523750 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/09/13 11:33 AM",
      "commitName": "ead3dcc3dea0d5b6d3248c1e1a6300f0714a8456",
      "commitAuthor": "Bikas Saha",
      "diff": "@@ -0,0 +1,10 @@\n+  public synchronized void transitionToStandby(StateChangeRequestInfo reqInfo) {\n+    // TODO (YARN-1177): When automatic failover is enabled,\n+    // check if transition should be allowed for this request\n+    try {\n+      transitionToStandby(true);\n+    } catch (Exception e) {\n+      LOG.error(\"Error when transitioning to Standby mode\", e);\n+      throw new YarnRuntimeException(e);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void transitionToStandby(StateChangeRequestInfo reqInfo) {\n    // TODO (YARN-1177): When automatic failover is enabled,\n    // check if transition should be allowed for this request\n    try {\n      transitionToStandby(true);\n    } catch (Exception e) {\n      LOG.error(\"Error when transitioning to Standby mode\", e);\n      throw new YarnRuntimeException(e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMHAProtocolService.java"
    }
  }
}