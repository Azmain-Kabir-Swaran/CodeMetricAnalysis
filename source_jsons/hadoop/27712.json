{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FederationPolicyInitializationContextValidator.java",
  "functionName": "validate",
  "functionId": "validate___policyContext-FederationPolicyInitializationContext__myType-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/policies/FederationPolicyInitializationContextValidator.java",
  "functionStartLine": 31,
  "functionEndLine": 74,
  "numCommitsSeen": 5,
  "timeTaken": 1955,
  "changeHistory": [
    "43a97174fe49aa0c25d03b8a970a46d4bebf1aa8",
    "083a05bc1420d6d6aa30d98ab48c2ed8ead5b810",
    "1dadd0b45a6a605da72eb304808edb49fc66da45",
    "81472778d7ef013ea6b2714bc734bc6fc3ca32fa"
  ],
  "changeHistoryShort": {
    "43a97174fe49aa0c25d03b8a970a46d4bebf1aa8": "Ybodychange",
    "083a05bc1420d6d6aa30d98ab48c2ed8ead5b810": "Ybodychange",
    "1dadd0b45a6a605da72eb304808edb49fc66da45": "Ymultichange(Yparameterchange,Ybodychange)",
    "81472778d7ef013ea6b2714bc734bc6fc3ca32fa": "Yintroduced"
  },
  "changeHistoryDetails": {
    "43a97174fe49aa0c25d03b8a970a46d4bebf1aa8": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3659. Federation: routing client invocations transparently to multiple RMs. (Giovanni Matteo Fumarola via Subru).\n\n(cherry picked from commit 52daa6d971ae408d121b3737ea8c0575e7e8516d)\n",
      "commitDate": "01/08/17 5:28 PM",
      "commitName": "43a97174fe49aa0c25d03b8a970a46d4bebf1aa8",
      "commitAuthor": "Subru Krishnan",
      "commitDateOld": "01/08/17 5:28 PM",
      "commitNameOld": "083a05bc1420d6d6aa30d98ab48c2ed8ead5b810",
      "commitAuthorOld": "Subru Krishnan",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 22,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,44 +1,44 @@\n   public static void validate(\n       FederationPolicyInitializationContext policyContext, String myType)\n       throws FederationPolicyInitializationException {\n \n     if (myType \u003d\u003d null) {\n       throw new FederationPolicyInitializationException(\n           \"The myType parameter\" + \" should not be null.\");\n     }\n \n     if (policyContext \u003d\u003d null) {\n       throw new FederationPolicyInitializationException(\n           \"The FederationPolicyInitializationContext provided is null. Cannot\"\n               + \" reinitalize \" + \"successfully.\");\n     }\n \n     if (policyContext.getFederationStateStoreFacade() \u003d\u003d null) {\n       throw new FederationPolicyInitializationException(\n           \"The FederationStateStoreFacade provided is null. Cannot\"\n               + \" reinitalize successfully.\");\n     }\n \n     if (policyContext.getFederationSubclusterResolver() \u003d\u003d null) {\n       throw new FederationPolicyInitializationException(\n-          \"The FederationStateStoreFacase provided is null. Cannot\"\n+          \"The FederationSubclusterResolver provided is null. Cannot\"\n               + \" reinitalize successfully.\");\n     }\n \n     if (policyContext.getSubClusterPolicyConfiguration() \u003d\u003d null) {\n       throw new FederationPolicyInitializationException(\n           \"The SubClusterPolicyConfiguration provided is null. Cannot \"\n               + \"reinitalize successfully.\");\n     }\n \n     String intendedType \u003d\n         policyContext.getSubClusterPolicyConfiguration().getType();\n \n     if (!myType.equals(intendedType)) {\n       throw new FederationPolicyInitializationException(\n           \"The FederationPolicyConfiguration carries a type (\" + intendedType\n               + \") different then mine (\" + myType\n               + \"). Cannot reinitialize successfully.\");\n     }\n \n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void validate(\n      FederationPolicyInitializationContext policyContext, String myType)\n      throws FederationPolicyInitializationException {\n\n    if (myType \u003d\u003d null) {\n      throw new FederationPolicyInitializationException(\n          \"The myType parameter\" + \" should not be null.\");\n    }\n\n    if (policyContext \u003d\u003d null) {\n      throw new FederationPolicyInitializationException(\n          \"The FederationPolicyInitializationContext provided is null. Cannot\"\n              + \" reinitalize \" + \"successfully.\");\n    }\n\n    if (policyContext.getFederationStateStoreFacade() \u003d\u003d null) {\n      throw new FederationPolicyInitializationException(\n          \"The FederationStateStoreFacade provided is null. Cannot\"\n              + \" reinitalize successfully.\");\n    }\n\n    if (policyContext.getFederationSubclusterResolver() \u003d\u003d null) {\n      throw new FederationPolicyInitializationException(\n          \"The FederationSubclusterResolver provided is null. Cannot\"\n              + \" reinitalize successfully.\");\n    }\n\n    if (policyContext.getSubClusterPolicyConfiguration() \u003d\u003d null) {\n      throw new FederationPolicyInitializationException(\n          \"The SubClusterPolicyConfiguration provided is null. Cannot \"\n              + \"reinitalize successfully.\");\n    }\n\n    String intendedType \u003d\n        policyContext.getSubClusterPolicyConfiguration().getType();\n\n    if (!myType.equals(intendedType)) {\n      throw new FederationPolicyInitializationException(\n          \"The FederationPolicyConfiguration carries a type (\" + intendedType\n              + \") different then mine (\" + myType\n              + \"). Cannot reinitialize successfully.\");\n    }\n\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/policies/FederationPolicyInitializationContextValidator.java",
      "extendedDetails": {}
    },
    "083a05bc1420d6d6aa30d98ab48c2ed8ead5b810": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5634. Simplify initialization/use of RouterPolicy via a RouterPolicyFacade. (Carlo Curino via Subru).\n\n(cherry picked from commit d7672ce2bddb40fbaa77d3f6fec8c99f5589177f)\n",
      "commitDate": "01/08/17 5:28 PM",
      "commitName": "083a05bc1420d6d6aa30d98ab48c2ed8ead5b810",
      "commitAuthor": "Subru Krishnan",
      "commitDateOld": "01/08/17 5:28 PM",
      "commitNameOld": "1dadd0b45a6a605da72eb304808edb49fc66da45",
      "commitAuthorOld": "Subru Krishnan",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,44 +1,44 @@\n   public static void validate(\n       FederationPolicyInitializationContext policyContext, String myType)\n       throws FederationPolicyInitializationException {\n \n     if (myType \u003d\u003d null) {\n       throw new FederationPolicyInitializationException(\n           \"The myType parameter\" + \" should not be null.\");\n     }\n \n     if (policyContext \u003d\u003d null) {\n       throw new FederationPolicyInitializationException(\n           \"The FederationPolicyInitializationContext provided is null. Cannot\"\n               + \" reinitalize \" + \"successfully.\");\n     }\n \n     if (policyContext.getFederationStateStoreFacade() \u003d\u003d null) {\n       throw new FederationPolicyInitializationException(\n           \"The FederationStateStoreFacade provided is null. Cannot\"\n               + \" reinitalize successfully.\");\n     }\n \n     if (policyContext.getFederationSubclusterResolver() \u003d\u003d null) {\n       throw new FederationPolicyInitializationException(\n           \"The FederationStateStoreFacase provided is null. Cannot\"\n               + \" reinitalize successfully.\");\n     }\n \n     if (policyContext.getSubClusterPolicyConfiguration() \u003d\u003d null) {\n       throw new FederationPolicyInitializationException(\n-          \"The FederationSubclusterResolver provided is null. Cannot \"\n+          \"The SubClusterPolicyConfiguration provided is null. Cannot \"\n               + \"reinitalize successfully.\");\n     }\n \n     String intendedType \u003d\n         policyContext.getSubClusterPolicyConfiguration().getType();\n \n     if (!myType.equals(intendedType)) {\n       throw new FederationPolicyInitializationException(\n           \"The FederationPolicyConfiguration carries a type (\" + intendedType\n               + \") different then mine (\" + myType\n               + \"). Cannot reinitialize successfully.\");\n     }\n \n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void validate(\n      FederationPolicyInitializationContext policyContext, String myType)\n      throws FederationPolicyInitializationException {\n\n    if (myType \u003d\u003d null) {\n      throw new FederationPolicyInitializationException(\n          \"The myType parameter\" + \" should not be null.\");\n    }\n\n    if (policyContext \u003d\u003d null) {\n      throw new FederationPolicyInitializationException(\n          \"The FederationPolicyInitializationContext provided is null. Cannot\"\n              + \" reinitalize \" + \"successfully.\");\n    }\n\n    if (policyContext.getFederationStateStoreFacade() \u003d\u003d null) {\n      throw new FederationPolicyInitializationException(\n          \"The FederationStateStoreFacade provided is null. Cannot\"\n              + \" reinitalize successfully.\");\n    }\n\n    if (policyContext.getFederationSubclusterResolver() \u003d\u003d null) {\n      throw new FederationPolicyInitializationException(\n          \"The FederationStateStoreFacase provided is null. Cannot\"\n              + \" reinitalize successfully.\");\n    }\n\n    if (policyContext.getSubClusterPolicyConfiguration() \u003d\u003d null) {\n      throw new FederationPolicyInitializationException(\n          \"The SubClusterPolicyConfiguration provided is null. Cannot \"\n              + \"reinitalize successfully.\");\n    }\n\n    String intendedType \u003d\n        policyContext.getSubClusterPolicyConfiguration().getType();\n\n    if (!myType.equals(intendedType)) {\n      throw new FederationPolicyInitializationException(\n          \"The FederationPolicyConfiguration carries a type (\" + intendedType\n              + \") different then mine (\" + myType\n              + \"). Cannot reinitialize successfully.\");\n    }\n\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/policies/FederationPolicyInitializationContextValidator.java",
      "extendedDetails": {}
    },
    "1dadd0b45a6a605da72eb304808edb49fc66da45": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-5325. Stateless ARMRMProxy policies implementation. (Carlo Curino via Subru).\n\n(cherry picked from commit 11c5336522d3504598fb94eee288d54df73418c6)\n",
      "commitDate": "01/08/17 5:28 PM",
      "commitName": "1dadd0b45a6a605da72eb304808edb49fc66da45",
      "commitAuthor": "Subru Krishnan",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-5325. Stateless ARMRMProxy policies implementation. (Carlo Curino via Subru).\n\n(cherry picked from commit 11c5336522d3504598fb94eee288d54df73418c6)\n",
          "commitDate": "01/08/17 5:28 PM",
          "commitName": "1dadd0b45a6a605da72eb304808edb49fc66da45",
          "commitAuthor": "Subru Krishnan",
          "commitDateOld": "01/08/17 5:28 PM",
          "commitNameOld": "81472778d7ef013ea6b2714bc734bc6fc3ca32fa",
          "commitAuthorOld": "Subru Krishnan",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,50 +1,44 @@\n   public static void validate(\n-      FederationPolicyInitializationContext\n-          federationPolicyInitializationContext,\n-      String myType) throws FederationPolicyInitializationException {\n+      FederationPolicyInitializationContext policyContext, String myType)\n+      throws FederationPolicyInitializationException {\n \n     if (myType \u003d\u003d null) {\n-      throw new FederationPolicyInitializationException(\"The myType parameter\"\n-          + \" should not be null.\");\n+      throw new FederationPolicyInitializationException(\n+          \"The myType parameter\" + \" should not be null.\");\n     }\n \n-    if (federationPolicyInitializationContext \u003d\u003d null) {\n+    if (policyContext \u003d\u003d null) {\n       throw new FederationPolicyInitializationException(\n           \"The FederationPolicyInitializationContext provided is null. Cannot\"\n-              + \" reinitalize \"\n-              + \"successfully.\");\n+              + \" reinitalize \" + \"successfully.\");\n     }\n \n-    if (federationPolicyInitializationContext.getFederationStateStoreFacade()\n-        \u003d\u003d null) {\n+    if (policyContext.getFederationStateStoreFacade() \u003d\u003d null) {\n       throw new FederationPolicyInitializationException(\n           \"The FederationStateStoreFacade provided is null. Cannot\"\n               + \" reinitalize successfully.\");\n     }\n \n-    if (federationPolicyInitializationContext.getFederationSubclusterResolver()\n-        \u003d\u003d null) {\n+    if (policyContext.getFederationSubclusterResolver() \u003d\u003d null) {\n       throw new FederationPolicyInitializationException(\n           \"The FederationStateStoreFacase provided is null. Cannot\"\n               + \" reinitalize successfully.\");\n     }\n \n-    if (federationPolicyInitializationContext.getSubClusterPolicyConfiguration()\n-        \u003d\u003d null) {\n+    if (policyContext.getSubClusterPolicyConfiguration() \u003d\u003d null) {\n       throw new FederationPolicyInitializationException(\n           \"The FederationSubclusterResolver provided is null. Cannot \"\n               + \"reinitalize successfully.\");\n     }\n \n     String intendedType \u003d\n-        federationPolicyInitializationContext.getSubClusterPolicyConfiguration()\n-            .getType();\n+        policyContext.getSubClusterPolicyConfiguration().getType();\n \n     if (!myType.equals(intendedType)) {\n       throw new FederationPolicyInitializationException(\n           \"The FederationPolicyConfiguration carries a type (\" + intendedType\n               + \") different then mine (\" + myType\n               + \"). Cannot reinitialize successfully.\");\n     }\n \n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void validate(\n      FederationPolicyInitializationContext policyContext, String myType)\n      throws FederationPolicyInitializationException {\n\n    if (myType \u003d\u003d null) {\n      throw new FederationPolicyInitializationException(\n          \"The myType parameter\" + \" should not be null.\");\n    }\n\n    if (policyContext \u003d\u003d null) {\n      throw new FederationPolicyInitializationException(\n          \"The FederationPolicyInitializationContext provided is null. Cannot\"\n              + \" reinitalize \" + \"successfully.\");\n    }\n\n    if (policyContext.getFederationStateStoreFacade() \u003d\u003d null) {\n      throw new FederationPolicyInitializationException(\n          \"The FederationStateStoreFacade provided is null. Cannot\"\n              + \" reinitalize successfully.\");\n    }\n\n    if (policyContext.getFederationSubclusterResolver() \u003d\u003d null) {\n      throw new FederationPolicyInitializationException(\n          \"The FederationStateStoreFacase provided is null. Cannot\"\n              + \" reinitalize successfully.\");\n    }\n\n    if (policyContext.getSubClusterPolicyConfiguration() \u003d\u003d null) {\n      throw new FederationPolicyInitializationException(\n          \"The FederationSubclusterResolver provided is null. Cannot \"\n              + \"reinitalize successfully.\");\n    }\n\n    String intendedType \u003d\n        policyContext.getSubClusterPolicyConfiguration().getType();\n\n    if (!myType.equals(intendedType)) {\n      throw new FederationPolicyInitializationException(\n          \"The FederationPolicyConfiguration carries a type (\" + intendedType\n              + \") different then mine (\" + myType\n              + \"). Cannot reinitialize successfully.\");\n    }\n\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/policies/FederationPolicyInitializationContextValidator.java",
          "extendedDetails": {
            "oldValue": "[federationPolicyInitializationContext-FederationPolicyInitializationContext, myType-String]",
            "newValue": "[policyContext-FederationPolicyInitializationContext, myType-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-5325. Stateless ARMRMProxy policies implementation. (Carlo Curino via Subru).\n\n(cherry picked from commit 11c5336522d3504598fb94eee288d54df73418c6)\n",
          "commitDate": "01/08/17 5:28 PM",
          "commitName": "1dadd0b45a6a605da72eb304808edb49fc66da45",
          "commitAuthor": "Subru Krishnan",
          "commitDateOld": "01/08/17 5:28 PM",
          "commitNameOld": "81472778d7ef013ea6b2714bc734bc6fc3ca32fa",
          "commitAuthorOld": "Subru Krishnan",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,50 +1,44 @@\n   public static void validate(\n-      FederationPolicyInitializationContext\n-          federationPolicyInitializationContext,\n-      String myType) throws FederationPolicyInitializationException {\n+      FederationPolicyInitializationContext policyContext, String myType)\n+      throws FederationPolicyInitializationException {\n \n     if (myType \u003d\u003d null) {\n-      throw new FederationPolicyInitializationException(\"The myType parameter\"\n-          + \" should not be null.\");\n+      throw new FederationPolicyInitializationException(\n+          \"The myType parameter\" + \" should not be null.\");\n     }\n \n-    if (federationPolicyInitializationContext \u003d\u003d null) {\n+    if (policyContext \u003d\u003d null) {\n       throw new FederationPolicyInitializationException(\n           \"The FederationPolicyInitializationContext provided is null. Cannot\"\n-              + \" reinitalize \"\n-              + \"successfully.\");\n+              + \" reinitalize \" + \"successfully.\");\n     }\n \n-    if (federationPolicyInitializationContext.getFederationStateStoreFacade()\n-        \u003d\u003d null) {\n+    if (policyContext.getFederationStateStoreFacade() \u003d\u003d null) {\n       throw new FederationPolicyInitializationException(\n           \"The FederationStateStoreFacade provided is null. Cannot\"\n               + \" reinitalize successfully.\");\n     }\n \n-    if (federationPolicyInitializationContext.getFederationSubclusterResolver()\n-        \u003d\u003d null) {\n+    if (policyContext.getFederationSubclusterResolver() \u003d\u003d null) {\n       throw new FederationPolicyInitializationException(\n           \"The FederationStateStoreFacase provided is null. Cannot\"\n               + \" reinitalize successfully.\");\n     }\n \n-    if (federationPolicyInitializationContext.getSubClusterPolicyConfiguration()\n-        \u003d\u003d null) {\n+    if (policyContext.getSubClusterPolicyConfiguration() \u003d\u003d null) {\n       throw new FederationPolicyInitializationException(\n           \"The FederationSubclusterResolver provided is null. Cannot \"\n               + \"reinitalize successfully.\");\n     }\n \n     String intendedType \u003d\n-        federationPolicyInitializationContext.getSubClusterPolicyConfiguration()\n-            .getType();\n+        policyContext.getSubClusterPolicyConfiguration().getType();\n \n     if (!myType.equals(intendedType)) {\n       throw new FederationPolicyInitializationException(\n           \"The FederationPolicyConfiguration carries a type (\" + intendedType\n               + \") different then mine (\" + myType\n               + \"). Cannot reinitialize successfully.\");\n     }\n \n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void validate(\n      FederationPolicyInitializationContext policyContext, String myType)\n      throws FederationPolicyInitializationException {\n\n    if (myType \u003d\u003d null) {\n      throw new FederationPolicyInitializationException(\n          \"The myType parameter\" + \" should not be null.\");\n    }\n\n    if (policyContext \u003d\u003d null) {\n      throw new FederationPolicyInitializationException(\n          \"The FederationPolicyInitializationContext provided is null. Cannot\"\n              + \" reinitalize \" + \"successfully.\");\n    }\n\n    if (policyContext.getFederationStateStoreFacade() \u003d\u003d null) {\n      throw new FederationPolicyInitializationException(\n          \"The FederationStateStoreFacade provided is null. Cannot\"\n              + \" reinitalize successfully.\");\n    }\n\n    if (policyContext.getFederationSubclusterResolver() \u003d\u003d null) {\n      throw new FederationPolicyInitializationException(\n          \"The FederationStateStoreFacase provided is null. Cannot\"\n              + \" reinitalize successfully.\");\n    }\n\n    if (policyContext.getSubClusterPolicyConfiguration() \u003d\u003d null) {\n      throw new FederationPolicyInitializationException(\n          \"The FederationSubclusterResolver provided is null. Cannot \"\n              + \"reinitalize successfully.\");\n    }\n\n    String intendedType \u003d\n        policyContext.getSubClusterPolicyConfiguration().getType();\n\n    if (!myType.equals(intendedType)) {\n      throw new FederationPolicyInitializationException(\n          \"The FederationPolicyConfiguration carries a type (\" + intendedType\n              + \") different then mine (\" + myType\n              + \"). Cannot reinitialize successfully.\");\n    }\n\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/policies/FederationPolicyInitializationContextValidator.java",
          "extendedDetails": {}
        }
      ]
    },
    "81472778d7ef013ea6b2714bc734bc6fc3ca32fa": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5323. Policies APIs for Federation Router and AMRMProxy policies. (Carlo Curino via Subru).\n\n(cherry picked from commit f8208fe0b536f29aa65af71d20c3b3e3765679fd)\n",
      "commitDate": "01/08/17 5:28 PM",
      "commitName": "81472778d7ef013ea6b2714bc734bc6fc3ca32fa",
      "commitAuthor": "Subru Krishnan",
      "diff": "@@ -0,0 +1,50 @@\n+  public static void validate(\n+      FederationPolicyInitializationContext\n+          federationPolicyInitializationContext,\n+      String myType) throws FederationPolicyInitializationException {\n+\n+    if (myType \u003d\u003d null) {\n+      throw new FederationPolicyInitializationException(\"The myType parameter\"\n+          + \" should not be null.\");\n+    }\n+\n+    if (federationPolicyInitializationContext \u003d\u003d null) {\n+      throw new FederationPolicyInitializationException(\n+          \"The FederationPolicyInitializationContext provided is null. Cannot\"\n+              + \" reinitalize \"\n+              + \"successfully.\");\n+    }\n+\n+    if (federationPolicyInitializationContext.getFederationStateStoreFacade()\n+        \u003d\u003d null) {\n+      throw new FederationPolicyInitializationException(\n+          \"The FederationStateStoreFacade provided is null. Cannot\"\n+              + \" reinitalize successfully.\");\n+    }\n+\n+    if (federationPolicyInitializationContext.getFederationSubclusterResolver()\n+        \u003d\u003d null) {\n+      throw new FederationPolicyInitializationException(\n+          \"The FederationStateStoreFacase provided is null. Cannot\"\n+              + \" reinitalize successfully.\");\n+    }\n+\n+    if (federationPolicyInitializationContext.getSubClusterPolicyConfiguration()\n+        \u003d\u003d null) {\n+      throw new FederationPolicyInitializationException(\n+          \"The FederationSubclusterResolver provided is null. Cannot \"\n+              + \"reinitalize successfully.\");\n+    }\n+\n+    String intendedType \u003d\n+        federationPolicyInitializationContext.getSubClusterPolicyConfiguration()\n+            .getType();\n+\n+    if (!myType.equals(intendedType)) {\n+      throw new FederationPolicyInitializationException(\n+          \"The FederationPolicyConfiguration carries a type (\" + intendedType\n+              + \") different then mine (\" + myType\n+              + \"). Cannot reinitialize successfully.\");\n+    }\n+\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static void validate(\n      FederationPolicyInitializationContext\n          federationPolicyInitializationContext,\n      String myType) throws FederationPolicyInitializationException {\n\n    if (myType \u003d\u003d null) {\n      throw new FederationPolicyInitializationException(\"The myType parameter\"\n          + \" should not be null.\");\n    }\n\n    if (federationPolicyInitializationContext \u003d\u003d null) {\n      throw new FederationPolicyInitializationException(\n          \"The FederationPolicyInitializationContext provided is null. Cannot\"\n              + \" reinitalize \"\n              + \"successfully.\");\n    }\n\n    if (federationPolicyInitializationContext.getFederationStateStoreFacade()\n        \u003d\u003d null) {\n      throw new FederationPolicyInitializationException(\n          \"The FederationStateStoreFacade provided is null. Cannot\"\n              + \" reinitalize successfully.\");\n    }\n\n    if (federationPolicyInitializationContext.getFederationSubclusterResolver()\n        \u003d\u003d null) {\n      throw new FederationPolicyInitializationException(\n          \"The FederationStateStoreFacase provided is null. Cannot\"\n              + \" reinitalize successfully.\");\n    }\n\n    if (federationPolicyInitializationContext.getSubClusterPolicyConfiguration()\n        \u003d\u003d null) {\n      throw new FederationPolicyInitializationException(\n          \"The FederationSubclusterResolver provided is null. Cannot \"\n              + \"reinitalize successfully.\");\n    }\n\n    String intendedType \u003d\n        federationPolicyInitializationContext.getSubClusterPolicyConfiguration()\n            .getType();\n\n    if (!myType.equals(intendedType)) {\n      throw new FederationPolicyInitializationException(\n          \"The FederationPolicyConfiguration carries a type (\" + intendedType\n              + \") different then mine (\" + myType\n              + \"). Cannot reinitialize successfully.\");\n    }\n\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/policies/FederationPolicyInitializationContextValidator.java"
    }
  }
}