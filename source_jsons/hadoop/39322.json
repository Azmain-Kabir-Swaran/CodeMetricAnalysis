{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CapacityScheduler.java",
  "functionName": "addQueue",
  "functionId": "addQueue___queue-Queue",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
  "functionStartLine": 2393,
  "functionEndLine": 2428,
  "numCommitsSeen": 239,
  "timeTaken": 8630,
  "changeHistory": [
    "cdb2107066a2d8557270888c0a9a75f29a6853bf",
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
    "cb87e4dc927731e32b0bbcf678bb5600835ff28d",
    "b38643c9a8dd2c53024ae830b9565a550d0ec39c",
    "13fa2d4e3e55a849dcd7e472750f3e0422cc2ac9",
    "69fb70c31aa277f7fb14b05c0185ddc5cd90793d",
    "31f8da22d0b8d2dcce5fbc8e45d832f40acf056f",
    "eb3e40b833b9d82c1556843f960194dc42e482f3"
  ],
  "changeHistoryShort": {
    "cdb2107066a2d8557270888c0a9a75f29a6853bf": "Ybodychange",
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": "Ybodychange",
    "cb87e4dc927731e32b0bbcf678bb5600835ff28d": "Ybodychange",
    "b38643c9a8dd2c53024ae830b9565a550d0ec39c": "Ymultichange(Yexceptionschange,Ybodychange)",
    "13fa2d4e3e55a849dcd7e472750f3e0422cc2ac9": "Ybodychange",
    "69fb70c31aa277f7fb14b05c0185ddc5cd90793d": "Ybodychange",
    "31f8da22d0b8d2dcce5fbc8e45d832f40acf056f": "Ymultichange(Ymodifierchange,Ybodychange)",
    "eb3e40b833b9d82c1556843f960194dc42e482f3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cdb2107066a2d8557270888c0a9a75f29a6853bf": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9879. Allow multiple leaf queues with the same name in CapacityScheduler. Contributed by Gergely Pollak.\n",
      "commitDate": "25/03/20 4:20 AM",
      "commitName": "cdb2107066a2d8557270888c0a9a75f29a6853bf",
      "commitAuthor": "Sunil G",
      "commitDateOld": "19/03/20 12:25 AM",
      "commitNameOld": "f2d3ac2a3f27a849e00f529c5c2df6ef0bd82911",
      "commitAuthorOld": "Prabhu Joseph",
      "daysBetweenCommits": 6.16,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,36 @@\n   public void addQueue(Queue queue)\n       throws SchedulerDynamicEditException, IOException {\n     writeLock.lock();\n     try {\n       if (queue \u003d\u003d null) {\n         throw new SchedulerDynamicEditException(\n             \"Queue specified is null. Should be an implementation of \"\n                 + \"AbstractAutoCreatedLeafQueue\");\n       } else if (!(AbstractAutoCreatedLeafQueue.class\n           .isAssignableFrom(queue.getClass()))) {\n         throw new SchedulerDynamicEditException(\n             \"Queue is not an implementation of \"\n                 + \"AbstractAutoCreatedLeafQueue : \" + queue.getClass());\n       }\n \n       AbstractAutoCreatedLeafQueue newQueue \u003d\n           (AbstractAutoCreatedLeafQueue) queue;\n \n       if (newQueue.getParent() \u003d\u003d null || !(AbstractManagedParentQueue.class.\n           isAssignableFrom(newQueue.getParent().getClass()))) {\n         throw new SchedulerDynamicEditException(\n             \"ParentQueue for \" + newQueue + \" is not properly set\"\n                 + \" (should be set and be a PlanQueue or ManagedParentQueue)\");\n       }\n \n       AbstractManagedParentQueue parent \u003d\n           (AbstractManagedParentQueue) newQueue.getParent();\n-      String queuename \u003d newQueue.getQueueName();\n+      String queuePath \u003d newQueue.getQueuePath();\n       parent.addChildQueue(newQueue);\n-      this.queueManager.addQueue(queuename, newQueue);\n+      this.queueManager.addQueue(queuePath, newQueue);\n \n       LOG.info(\"Creation of AutoCreatedLeafQueue \" + newQueue + \" succeeded\");\n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void addQueue(Queue queue)\n      throws SchedulerDynamicEditException, IOException {\n    writeLock.lock();\n    try {\n      if (queue \u003d\u003d null) {\n        throw new SchedulerDynamicEditException(\n            \"Queue specified is null. Should be an implementation of \"\n                + \"AbstractAutoCreatedLeafQueue\");\n      } else if (!(AbstractAutoCreatedLeafQueue.class\n          .isAssignableFrom(queue.getClass()))) {\n        throw new SchedulerDynamicEditException(\n            \"Queue is not an implementation of \"\n                + \"AbstractAutoCreatedLeafQueue : \" + queue.getClass());\n      }\n\n      AbstractAutoCreatedLeafQueue newQueue \u003d\n          (AbstractAutoCreatedLeafQueue) queue;\n\n      if (newQueue.getParent() \u003d\u003d null || !(AbstractManagedParentQueue.class.\n          isAssignableFrom(newQueue.getParent().getClass()))) {\n        throw new SchedulerDynamicEditException(\n            \"ParentQueue for \" + newQueue + \" is not properly set\"\n                + \" (should be set and be a PlanQueue or ManagedParentQueue)\");\n      }\n\n      AbstractManagedParentQueue parent \u003d\n          (AbstractManagedParentQueue) newQueue.getParent();\n      String queuePath \u003d newQueue.getQueuePath();\n      parent.addChildQueue(newQueue);\n      this.queueManager.addQueue(queuePath, newQueue);\n\n      LOG.info(\"Creation of AutoCreatedLeafQueue \" + newQueue + \" succeeded\");\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
      "extendedDetails": {}
    },
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9341.  Fixed enentrant lock usage in YARN project.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "07/03/19 1:47 PM",
      "commitName": "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "04/03/19 9:10 PM",
      "commitNameOld": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
      "commitAuthorOld": "Prabhu Joseph",
      "daysBetweenCommits": 2.69,
      "commitsBetweenForRepo": 39,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,36 @@\n   public void addQueue(Queue queue)\n       throws SchedulerDynamicEditException, IOException {\n+    writeLock.lock();\n     try {\n-      writeLock.lock();\n       if (queue \u003d\u003d null) {\n         throw new SchedulerDynamicEditException(\n             \"Queue specified is null. Should be an implementation of \"\n                 + \"AbstractAutoCreatedLeafQueue\");\n       } else if (!(AbstractAutoCreatedLeafQueue.class\n           .isAssignableFrom(queue.getClass()))) {\n         throw new SchedulerDynamicEditException(\n             \"Queue is not an implementation of \"\n                 + \"AbstractAutoCreatedLeafQueue : \" + queue.getClass());\n       }\n \n       AbstractAutoCreatedLeafQueue newQueue \u003d\n           (AbstractAutoCreatedLeafQueue) queue;\n \n       if (newQueue.getParent() \u003d\u003d null || !(AbstractManagedParentQueue.class.\n           isAssignableFrom(newQueue.getParent().getClass()))) {\n         throw new SchedulerDynamicEditException(\n             \"ParentQueue for \" + newQueue + \" is not properly set\"\n                 + \" (should be set and be a PlanQueue or ManagedParentQueue)\");\n       }\n \n       AbstractManagedParentQueue parent \u003d\n           (AbstractManagedParentQueue) newQueue.getParent();\n       String queuename \u003d newQueue.getQueueName();\n       parent.addChildQueue(newQueue);\n       this.queueManager.addQueue(queuename, newQueue);\n \n       LOG.info(\"Creation of AutoCreatedLeafQueue \" + newQueue + \" succeeded\");\n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void addQueue(Queue queue)\n      throws SchedulerDynamicEditException, IOException {\n    writeLock.lock();\n    try {\n      if (queue \u003d\u003d null) {\n        throw new SchedulerDynamicEditException(\n            \"Queue specified is null. Should be an implementation of \"\n                + \"AbstractAutoCreatedLeafQueue\");\n      } else if (!(AbstractAutoCreatedLeafQueue.class\n          .isAssignableFrom(queue.getClass()))) {\n        throw new SchedulerDynamicEditException(\n            \"Queue is not an implementation of \"\n                + \"AbstractAutoCreatedLeafQueue : \" + queue.getClass());\n      }\n\n      AbstractAutoCreatedLeafQueue newQueue \u003d\n          (AbstractAutoCreatedLeafQueue) queue;\n\n      if (newQueue.getParent() \u003d\u003d null || !(AbstractManagedParentQueue.class.\n          isAssignableFrom(newQueue.getParent().getClass()))) {\n        throw new SchedulerDynamicEditException(\n            \"ParentQueue for \" + newQueue + \" is not properly set\"\n                + \" (should be set and be a PlanQueue or ManagedParentQueue)\");\n      }\n\n      AbstractManagedParentQueue parent \u003d\n          (AbstractManagedParentQueue) newQueue.getParent();\n      String queuename \u003d newQueue.getQueueName();\n      parent.addChildQueue(newQueue);\n      this.queueManager.addQueue(queuename, newQueue);\n\n      LOG.info(\"Creation of AutoCreatedLeafQueue \" + newQueue + \" succeeded\");\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
      "extendedDetails": {}
    },
    "cb87e4dc927731e32b0bbcf678bb5600835ff28d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7643. Handle recovery of applications in case of auto-created leaf queue mapping. Contributed by Suma Shivaprasad.\n",
      "commitDate": "13/12/17 9:19 AM",
      "commitName": "cb87e4dc927731e32b0bbcf678bb5600835ff28d",
      "commitAuthor": "Sunil G",
      "commitDateOld": "08/12/17 3:17 PM",
      "commitNameOld": "adca1a72e4eca2ea634551e9fb8e9b878c36cb5c",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 4.75,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,36 @@\n   public void addQueue(Queue queue)\n       throws SchedulerDynamicEditException, IOException {\n     try {\n       writeLock.lock();\n       if (queue \u003d\u003d null) {\n         throw new SchedulerDynamicEditException(\n             \"Queue specified is null. Should be an implementation of \"\n                 + \"AbstractAutoCreatedLeafQueue\");\n       } else if (!(AbstractAutoCreatedLeafQueue.class\n           .isAssignableFrom(queue.getClass()))) {\n         throw new SchedulerDynamicEditException(\n             \"Queue is not an implementation of \"\n                 + \"AbstractAutoCreatedLeafQueue : \" + queue.getClass());\n       }\n \n       AbstractAutoCreatedLeafQueue newQueue \u003d\n           (AbstractAutoCreatedLeafQueue) queue;\n \n       if (newQueue.getParent() \u003d\u003d null || !(AbstractManagedParentQueue.class.\n           isAssignableFrom(newQueue.getParent().getClass()))) {\n         throw new SchedulerDynamicEditException(\n             \"ParentQueue for \" + newQueue + \" is not properly set\"\n                 + \" (should be set and be a PlanQueue or ManagedParentQueue)\");\n       }\n \n-      AbstractManagedParentQueue parentPlan \u003d\n+      AbstractManagedParentQueue parent \u003d\n           (AbstractManagedParentQueue) newQueue.getParent();\n       String queuename \u003d newQueue.getQueueName();\n-      parentPlan.addChildQueue(newQueue);\n+      parent.addChildQueue(newQueue);\n       this.queueManager.addQueue(queuename, newQueue);\n \n       LOG.info(\"Creation of AutoCreatedLeafQueue \" + newQueue + \" succeeded\");\n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void addQueue(Queue queue)\n      throws SchedulerDynamicEditException, IOException {\n    try {\n      writeLock.lock();\n      if (queue \u003d\u003d null) {\n        throw new SchedulerDynamicEditException(\n            \"Queue specified is null. Should be an implementation of \"\n                + \"AbstractAutoCreatedLeafQueue\");\n      } else if (!(AbstractAutoCreatedLeafQueue.class\n          .isAssignableFrom(queue.getClass()))) {\n        throw new SchedulerDynamicEditException(\n            \"Queue is not an implementation of \"\n                + \"AbstractAutoCreatedLeafQueue : \" + queue.getClass());\n      }\n\n      AbstractAutoCreatedLeafQueue newQueue \u003d\n          (AbstractAutoCreatedLeafQueue) queue;\n\n      if (newQueue.getParent() \u003d\u003d null || !(AbstractManagedParentQueue.class.\n          isAssignableFrom(newQueue.getParent().getClass()))) {\n        throw new SchedulerDynamicEditException(\n            \"ParentQueue for \" + newQueue + \" is not properly set\"\n                + \" (should be set and be a PlanQueue or ManagedParentQueue)\");\n      }\n\n      AbstractManagedParentQueue parent \u003d\n          (AbstractManagedParentQueue) newQueue.getParent();\n      String queuename \u003d newQueue.getQueueName();\n      parent.addChildQueue(newQueue);\n      this.queueManager.addQueue(queuename, newQueue);\n\n      LOG.info(\"Creation of AutoCreatedLeafQueue \" + newQueue + \" succeeded\");\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
      "extendedDetails": {}
    },
    "b38643c9a8dd2c53024ae830b9565a550d0ec39c": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "YARN-7473. Implement Framework and policy for capacity management of auto created queues. (Suma Shivaprasad via wangda)\n\nChange-Id: Icca7805fe12f6f7fb335effff4b121b6f7f6337b\n",
      "commitDate": "08/12/17 3:10 PM",
      "commitName": "b38643c9a8dd2c53024ae830b9565a550d0ec39c",
      "commitAuthor": "Wangda Tan",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "YARN-7473. Implement Framework and policy for capacity management of auto created queues. (Suma Shivaprasad via wangda)\n\nChange-Id: Icca7805fe12f6f7fb335effff4b121b6f7f6337b\n",
          "commitDate": "08/12/17 3:10 PM",
          "commitName": "b38643c9a8dd2c53024ae830b9565a550d0ec39c",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "30/11/17 3:57 PM",
          "commitNameOld": "a63d19d36520fa55bf523483f14329756f6eadd3",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 7.97,
          "commitsBetweenForRepo": 60,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,30 +1,36 @@\n   public void addQueue(Queue queue)\n-      throws SchedulerDynamicEditException {\n+      throws SchedulerDynamicEditException, IOException {\n     try {\n       writeLock.lock();\n-      if (!(queue instanceof AutoCreatedLeafQueue)) {\n+      if (queue \u003d\u003d null) {\n         throw new SchedulerDynamicEditException(\n-            \"Queue \" + queue.getQueueName() + \" is not a AutoCreatedLeafQueue\");\n+            \"Queue specified is null. Should be an implementation of \"\n+                + \"AbstractAutoCreatedLeafQueue\");\n+      } else if (!(AbstractAutoCreatedLeafQueue.class\n+          .isAssignableFrom(queue.getClass()))) {\n+        throw new SchedulerDynamicEditException(\n+            \"Queue is not an implementation of \"\n+                + \"AbstractAutoCreatedLeafQueue : \" + queue.getClass());\n       }\n \n-      AutoCreatedLeafQueue newQueue \u003d (AutoCreatedLeafQueue) queue;\n+      AbstractAutoCreatedLeafQueue newQueue \u003d\n+          (AbstractAutoCreatedLeafQueue) queue;\n \n-      if (newQueue.getParent() \u003d\u003d null\n-          || !(AbstractManagedParentQueue.class.\n+      if (newQueue.getParent() \u003d\u003d null || !(AbstractManagedParentQueue.class.\n           isAssignableFrom(newQueue.getParent().getClass()))) {\n         throw new SchedulerDynamicEditException(\n-            \"ParentQueue for \" + newQueue.getQueueName()\n-                + \" is not properly set\"\n+            \"ParentQueue for \" + newQueue + \" is not properly set\"\n                 + \" (should be set and be a PlanQueue or ManagedParentQueue)\");\n       }\n \n       AbstractManagedParentQueue parentPlan \u003d\n           (AbstractManagedParentQueue) newQueue.getParent();\n       String queuename \u003d newQueue.getQueueName();\n       parentPlan.addChildQueue(newQueue);\n       this.queueManager.addQueue(queuename, newQueue);\n+\n       LOG.info(\"Creation of AutoCreatedLeafQueue \" + newQueue + \" succeeded\");\n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void addQueue(Queue queue)\n      throws SchedulerDynamicEditException, IOException {\n    try {\n      writeLock.lock();\n      if (queue \u003d\u003d null) {\n        throw new SchedulerDynamicEditException(\n            \"Queue specified is null. Should be an implementation of \"\n                + \"AbstractAutoCreatedLeafQueue\");\n      } else if (!(AbstractAutoCreatedLeafQueue.class\n          .isAssignableFrom(queue.getClass()))) {\n        throw new SchedulerDynamicEditException(\n            \"Queue is not an implementation of \"\n                + \"AbstractAutoCreatedLeafQueue : \" + queue.getClass());\n      }\n\n      AbstractAutoCreatedLeafQueue newQueue \u003d\n          (AbstractAutoCreatedLeafQueue) queue;\n\n      if (newQueue.getParent() \u003d\u003d null || !(AbstractManagedParentQueue.class.\n          isAssignableFrom(newQueue.getParent().getClass()))) {\n        throw new SchedulerDynamicEditException(\n            \"ParentQueue for \" + newQueue + \" is not properly set\"\n                + \" (should be set and be a PlanQueue or ManagedParentQueue)\");\n      }\n\n      AbstractManagedParentQueue parentPlan \u003d\n          (AbstractManagedParentQueue) newQueue.getParent();\n      String queuename \u003d newQueue.getQueueName();\n      parentPlan.addChildQueue(newQueue);\n      this.queueManager.addQueue(queuename, newQueue);\n\n      LOG.info(\"Creation of AutoCreatedLeafQueue \" + newQueue + \" succeeded\");\n    } finally {\n      writeLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
          "extendedDetails": {
            "oldValue": "[SchedulerDynamicEditException]",
            "newValue": "[SchedulerDynamicEditException, IOException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7473. Implement Framework and policy for capacity management of auto created queues. (Suma Shivaprasad via wangda)\n\nChange-Id: Icca7805fe12f6f7fb335effff4b121b6f7f6337b\n",
          "commitDate": "08/12/17 3:10 PM",
          "commitName": "b38643c9a8dd2c53024ae830b9565a550d0ec39c",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "30/11/17 3:57 PM",
          "commitNameOld": "a63d19d36520fa55bf523483f14329756f6eadd3",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 7.97,
          "commitsBetweenForRepo": 60,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,30 +1,36 @@\n   public void addQueue(Queue queue)\n-      throws SchedulerDynamicEditException {\n+      throws SchedulerDynamicEditException, IOException {\n     try {\n       writeLock.lock();\n-      if (!(queue instanceof AutoCreatedLeafQueue)) {\n+      if (queue \u003d\u003d null) {\n         throw new SchedulerDynamicEditException(\n-            \"Queue \" + queue.getQueueName() + \" is not a AutoCreatedLeafQueue\");\n+            \"Queue specified is null. Should be an implementation of \"\n+                + \"AbstractAutoCreatedLeafQueue\");\n+      } else if (!(AbstractAutoCreatedLeafQueue.class\n+          .isAssignableFrom(queue.getClass()))) {\n+        throw new SchedulerDynamicEditException(\n+            \"Queue is not an implementation of \"\n+                + \"AbstractAutoCreatedLeafQueue : \" + queue.getClass());\n       }\n \n-      AutoCreatedLeafQueue newQueue \u003d (AutoCreatedLeafQueue) queue;\n+      AbstractAutoCreatedLeafQueue newQueue \u003d\n+          (AbstractAutoCreatedLeafQueue) queue;\n \n-      if (newQueue.getParent() \u003d\u003d null\n-          || !(AbstractManagedParentQueue.class.\n+      if (newQueue.getParent() \u003d\u003d null || !(AbstractManagedParentQueue.class.\n           isAssignableFrom(newQueue.getParent().getClass()))) {\n         throw new SchedulerDynamicEditException(\n-            \"ParentQueue for \" + newQueue.getQueueName()\n-                + \" is not properly set\"\n+            \"ParentQueue for \" + newQueue + \" is not properly set\"\n                 + \" (should be set and be a PlanQueue or ManagedParentQueue)\");\n       }\n \n       AbstractManagedParentQueue parentPlan \u003d\n           (AbstractManagedParentQueue) newQueue.getParent();\n       String queuename \u003d newQueue.getQueueName();\n       parentPlan.addChildQueue(newQueue);\n       this.queueManager.addQueue(queuename, newQueue);\n+\n       LOG.info(\"Creation of AutoCreatedLeafQueue \" + newQueue + \" succeeded\");\n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void addQueue(Queue queue)\n      throws SchedulerDynamicEditException, IOException {\n    try {\n      writeLock.lock();\n      if (queue \u003d\u003d null) {\n        throw new SchedulerDynamicEditException(\n            \"Queue specified is null. Should be an implementation of \"\n                + \"AbstractAutoCreatedLeafQueue\");\n      } else if (!(AbstractAutoCreatedLeafQueue.class\n          .isAssignableFrom(queue.getClass()))) {\n        throw new SchedulerDynamicEditException(\n            \"Queue is not an implementation of \"\n                + \"AbstractAutoCreatedLeafQueue : \" + queue.getClass());\n      }\n\n      AbstractAutoCreatedLeafQueue newQueue \u003d\n          (AbstractAutoCreatedLeafQueue) queue;\n\n      if (newQueue.getParent() \u003d\u003d null || !(AbstractManagedParentQueue.class.\n          isAssignableFrom(newQueue.getParent().getClass()))) {\n        throw new SchedulerDynamicEditException(\n            \"ParentQueue for \" + newQueue + \" is not properly set\"\n                + \" (should be set and be a PlanQueue or ManagedParentQueue)\");\n      }\n\n      AbstractManagedParentQueue parentPlan \u003d\n          (AbstractManagedParentQueue) newQueue.getParent();\n      String queuename \u003d newQueue.getQueueName();\n      parentPlan.addChildQueue(newQueue);\n      this.queueManager.addQueue(queuename, newQueue);\n\n      LOG.info(\"Creation of AutoCreatedLeafQueue \" + newQueue + \" succeeded\");\n    } finally {\n      writeLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
          "extendedDetails": {}
        }
      ]
    },
    "13fa2d4e3e55a849dcd7e472750f3e0422cc2ac9": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7394. Merge code paths for Reservation/Plan queues and Auto Created queues. (Suma Shivaprasad via wangda)\n",
      "commitDate": "06/11/17 9:38 PM",
      "commitName": "13fa2d4e3e55a849dcd7e472750f3e0422cc2ac9",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "02/11/17 1:25 AM",
      "commitNameOld": "940ffe3f9ce74286a8863e3743faf88a33c817a3",
      "commitAuthorOld": "Rohith Sharma K S",
      "daysBetweenCommits": 4.88,
      "commitsBetweenForRepo": 130,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,30 @@\n   public void addQueue(Queue queue)\n       throws SchedulerDynamicEditException {\n     try {\n       writeLock.lock();\n-      if (!(queue instanceof ReservationQueue)) {\n+      if (!(queue instanceof AutoCreatedLeafQueue)) {\n         throw new SchedulerDynamicEditException(\n-            \"Queue \" + queue.getQueueName() + \" is not a ReservationQueue\");\n+            \"Queue \" + queue.getQueueName() + \" is not a AutoCreatedLeafQueue\");\n       }\n \n-      ReservationQueue newQueue \u003d (ReservationQueue) queue;\n+      AutoCreatedLeafQueue newQueue \u003d (AutoCreatedLeafQueue) queue;\n \n-      if (newQueue.getParent() \u003d\u003d null || !(newQueue\n-          .getParent() instanceof PlanQueue)) {\n+      if (newQueue.getParent() \u003d\u003d null\n+          || !(AbstractManagedParentQueue.class.\n+          isAssignableFrom(newQueue.getParent().getClass()))) {\n         throw new SchedulerDynamicEditException(\n             \"ParentQueue for \" + newQueue.getQueueName()\n-                + \" is not properly set (should be set and be a PlanQueue)\");\n+                + \" is not properly set\"\n+                + \" (should be set and be a PlanQueue or ManagedParentQueue)\");\n       }\n \n-      PlanQueue parentPlan \u003d (PlanQueue) newQueue.getParent();\n+      AbstractManagedParentQueue parentPlan \u003d\n+          (AbstractManagedParentQueue) newQueue.getParent();\n       String queuename \u003d newQueue.getQueueName();\n       parentPlan.addChildQueue(newQueue);\n       this.queueManager.addQueue(queuename, newQueue);\n-      LOG.info(\"Creation of ReservationQueue \" + newQueue + \" succeeded\");\n+      LOG.info(\"Creation of AutoCreatedLeafQueue \" + newQueue + \" succeeded\");\n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void addQueue(Queue queue)\n      throws SchedulerDynamicEditException {\n    try {\n      writeLock.lock();\n      if (!(queue instanceof AutoCreatedLeafQueue)) {\n        throw new SchedulerDynamicEditException(\n            \"Queue \" + queue.getQueueName() + \" is not a AutoCreatedLeafQueue\");\n      }\n\n      AutoCreatedLeafQueue newQueue \u003d (AutoCreatedLeafQueue) queue;\n\n      if (newQueue.getParent() \u003d\u003d null\n          || !(AbstractManagedParentQueue.class.\n          isAssignableFrom(newQueue.getParent().getClass()))) {\n        throw new SchedulerDynamicEditException(\n            \"ParentQueue for \" + newQueue.getQueueName()\n                + \" is not properly set\"\n                + \" (should be set and be a PlanQueue or ManagedParentQueue)\");\n      }\n\n      AbstractManagedParentQueue parentPlan \u003d\n          (AbstractManagedParentQueue) newQueue.getParent();\n      String queuename \u003d newQueue.getQueueName();\n      parentPlan.addChildQueue(newQueue);\n      this.queueManager.addQueue(queuename, newQueue);\n      LOG.info(\"Creation of AutoCreatedLeafQueue \" + newQueue + \" succeeded\");\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
      "extendedDetails": {}
    },
    "69fb70c31aa277f7fb14b05c0185ddc5cd90793d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5761. Separate QueueManager from Scheduler. (Xuan Gong via gtcarrera9)\n",
      "commitDate": "30/11/16 1:38 PM",
      "commitName": "69fb70c31aa277f7fb14b05c0185ddc5cd90793d",
      "commitAuthor": "Li Lu",
      "commitDateOld": "29/11/16 9:40 AM",
      "commitNameOld": "25f9872be63423ada6a18481eaad2888e731fdac",
      "commitAuthorOld": "Daniel Templeton",
      "daysBetweenCommits": 1.17,
      "commitsBetweenForRepo": 16,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n   public void addQueue(Queue queue)\n       throws SchedulerDynamicEditException {\n     try {\n       writeLock.lock();\n       if (!(queue instanceof ReservationQueue)) {\n         throw new SchedulerDynamicEditException(\n             \"Queue \" + queue.getQueueName() + \" is not a ReservationQueue\");\n       }\n \n       ReservationQueue newQueue \u003d (ReservationQueue) queue;\n \n       if (newQueue.getParent() \u003d\u003d null || !(newQueue\n           .getParent() instanceof PlanQueue)) {\n         throw new SchedulerDynamicEditException(\n             \"ParentQueue for \" + newQueue.getQueueName()\n                 + \" is not properly set (should be set and be a PlanQueue)\");\n       }\n \n       PlanQueue parentPlan \u003d (PlanQueue) newQueue.getParent();\n       String queuename \u003d newQueue.getQueueName();\n       parentPlan.addChildQueue(newQueue);\n-      this.queues.put(queuename, newQueue);\n+      this.queueManager.addQueue(queuename, newQueue);\n       LOG.info(\"Creation of ReservationQueue \" + newQueue + \" succeeded\");\n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void addQueue(Queue queue)\n      throws SchedulerDynamicEditException {\n    try {\n      writeLock.lock();\n      if (!(queue instanceof ReservationQueue)) {\n        throw new SchedulerDynamicEditException(\n            \"Queue \" + queue.getQueueName() + \" is not a ReservationQueue\");\n      }\n\n      ReservationQueue newQueue \u003d (ReservationQueue) queue;\n\n      if (newQueue.getParent() \u003d\u003d null || !(newQueue\n          .getParent() instanceof PlanQueue)) {\n        throw new SchedulerDynamicEditException(\n            \"ParentQueue for \" + newQueue.getQueueName()\n                + \" is not properly set (should be set and be a PlanQueue)\");\n      }\n\n      PlanQueue parentPlan \u003d (PlanQueue) newQueue.getParent();\n      String queuename \u003d newQueue.getQueueName();\n      parentPlan.addChildQueue(newQueue);\n      this.queueManager.addQueue(queuename, newQueue);\n      LOG.info(\"Creation of ReservationQueue \" + newQueue + \" succeeded\");\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
      "extendedDetails": {}
    },
    "31f8da22d0b8d2dcce5fbc8e45d832f40acf056f": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-3139. Improve locks in AbstractYarnScheduler/CapacityScheduler/FairScheduler. Contributed by Wangda Tan\n",
      "commitDate": "04/10/16 5:23 PM",
      "commitName": "31f8da22d0b8d2dcce5fbc8e45d832f40acf056f",
      "commitAuthor": "Jian He",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-3139. Improve locks in AbstractYarnScheduler/CapacityScheduler/FairScheduler. Contributed by Wangda Tan\n",
          "commitDate": "04/10/16 5:23 PM",
          "commitName": "31f8da22d0b8d2dcce5fbc8e45d832f40acf056f",
          "commitAuthor": "Jian He",
          "commitDateOld": "30/08/16 3:52 PM",
          "commitNameOld": "d6d9cff21b7b6141ed88359652cf22e8973c0661",
          "commitAuthorOld": "Arun Suresh",
          "daysBetweenCommits": 35.06,
          "commitsBetweenForRepo": 195,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,27 @@\n-  public synchronized void addQueue(Queue queue)\n+  public void addQueue(Queue queue)\n       throws SchedulerDynamicEditException {\n+    try {\n+      writeLock.lock();\n+      if (!(queue instanceof ReservationQueue)) {\n+        throw new SchedulerDynamicEditException(\n+            \"Queue \" + queue.getQueueName() + \" is not a ReservationQueue\");\n+      }\n \n-    if (!(queue instanceof ReservationQueue)) {\n-      throw new SchedulerDynamicEditException(\"Queue \" + queue.getQueueName()\n-          + \" is not a ReservationQueue\");\n+      ReservationQueue newQueue \u003d (ReservationQueue) queue;\n+\n+      if (newQueue.getParent() \u003d\u003d null || !(newQueue\n+          .getParent() instanceof PlanQueue)) {\n+        throw new SchedulerDynamicEditException(\n+            \"ParentQueue for \" + newQueue.getQueueName()\n+                + \" is not properly set (should be set and be a PlanQueue)\");\n+      }\n+\n+      PlanQueue parentPlan \u003d (PlanQueue) newQueue.getParent();\n+      String queuename \u003d newQueue.getQueueName();\n+      parentPlan.addChildQueue(newQueue);\n+      this.queues.put(queuename, newQueue);\n+      LOG.info(\"Creation of ReservationQueue \" + newQueue + \" succeeded\");\n+    } finally {\n+      writeLock.unlock();\n     }\n-\n-    ReservationQueue newQueue \u003d (ReservationQueue) queue;\n-\n-    if (newQueue.getParent() \u003d\u003d null\n-        || !(newQueue.getParent() instanceof PlanQueue)) {\n-      throw new SchedulerDynamicEditException(\"ParentQueue for \"\n-          + newQueue.getQueueName()\n-          + \" is not properly set (should be set and be a PlanQueue)\");\n-    }\n-\n-    PlanQueue parentPlan \u003d (PlanQueue) newQueue.getParent();\n-    String queuename \u003d newQueue.getQueueName();\n-    parentPlan.addChildQueue(newQueue);\n-    this.queues.put(queuename, newQueue);\n-    LOG.info(\"Creation of ReservationQueue \" + newQueue + \" succeeded\");\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void addQueue(Queue queue)\n      throws SchedulerDynamicEditException {\n    try {\n      writeLock.lock();\n      if (!(queue instanceof ReservationQueue)) {\n        throw new SchedulerDynamicEditException(\n            \"Queue \" + queue.getQueueName() + \" is not a ReservationQueue\");\n      }\n\n      ReservationQueue newQueue \u003d (ReservationQueue) queue;\n\n      if (newQueue.getParent() \u003d\u003d null || !(newQueue\n          .getParent() instanceof PlanQueue)) {\n        throw new SchedulerDynamicEditException(\n            \"ParentQueue for \" + newQueue.getQueueName()\n                + \" is not properly set (should be set and be a PlanQueue)\");\n      }\n\n      PlanQueue parentPlan \u003d (PlanQueue) newQueue.getParent();\n      String queuename \u003d newQueue.getQueueName();\n      parentPlan.addChildQueue(newQueue);\n      this.queues.put(queuename, newQueue);\n      LOG.info(\"Creation of ReservationQueue \" + newQueue + \" succeeded\");\n    } finally {\n      writeLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
          "extendedDetails": {
            "oldValue": "[public, synchronized]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3139. Improve locks in AbstractYarnScheduler/CapacityScheduler/FairScheduler. Contributed by Wangda Tan\n",
          "commitDate": "04/10/16 5:23 PM",
          "commitName": "31f8da22d0b8d2dcce5fbc8e45d832f40acf056f",
          "commitAuthor": "Jian He",
          "commitDateOld": "30/08/16 3:52 PM",
          "commitNameOld": "d6d9cff21b7b6141ed88359652cf22e8973c0661",
          "commitAuthorOld": "Arun Suresh",
          "daysBetweenCommits": 35.06,
          "commitsBetweenForRepo": 195,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,27 @@\n-  public synchronized void addQueue(Queue queue)\n+  public void addQueue(Queue queue)\n       throws SchedulerDynamicEditException {\n+    try {\n+      writeLock.lock();\n+      if (!(queue instanceof ReservationQueue)) {\n+        throw new SchedulerDynamicEditException(\n+            \"Queue \" + queue.getQueueName() + \" is not a ReservationQueue\");\n+      }\n \n-    if (!(queue instanceof ReservationQueue)) {\n-      throw new SchedulerDynamicEditException(\"Queue \" + queue.getQueueName()\n-          + \" is not a ReservationQueue\");\n+      ReservationQueue newQueue \u003d (ReservationQueue) queue;\n+\n+      if (newQueue.getParent() \u003d\u003d null || !(newQueue\n+          .getParent() instanceof PlanQueue)) {\n+        throw new SchedulerDynamicEditException(\n+            \"ParentQueue for \" + newQueue.getQueueName()\n+                + \" is not properly set (should be set and be a PlanQueue)\");\n+      }\n+\n+      PlanQueue parentPlan \u003d (PlanQueue) newQueue.getParent();\n+      String queuename \u003d newQueue.getQueueName();\n+      parentPlan.addChildQueue(newQueue);\n+      this.queues.put(queuename, newQueue);\n+      LOG.info(\"Creation of ReservationQueue \" + newQueue + \" succeeded\");\n+    } finally {\n+      writeLock.unlock();\n     }\n-\n-    ReservationQueue newQueue \u003d (ReservationQueue) queue;\n-\n-    if (newQueue.getParent() \u003d\u003d null\n-        || !(newQueue.getParent() instanceof PlanQueue)) {\n-      throw new SchedulerDynamicEditException(\"ParentQueue for \"\n-          + newQueue.getQueueName()\n-          + \" is not properly set (should be set and be a PlanQueue)\");\n-    }\n-\n-    PlanQueue parentPlan \u003d (PlanQueue) newQueue.getParent();\n-    String queuename \u003d newQueue.getQueueName();\n-    parentPlan.addChildQueue(newQueue);\n-    this.queues.put(queuename, newQueue);\n-    LOG.info(\"Creation of ReservationQueue \" + newQueue + \" succeeded\");\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void addQueue(Queue queue)\n      throws SchedulerDynamicEditException {\n    try {\n      writeLock.lock();\n      if (!(queue instanceof ReservationQueue)) {\n        throw new SchedulerDynamicEditException(\n            \"Queue \" + queue.getQueueName() + \" is not a ReservationQueue\");\n      }\n\n      ReservationQueue newQueue \u003d (ReservationQueue) queue;\n\n      if (newQueue.getParent() \u003d\u003d null || !(newQueue\n          .getParent() instanceof PlanQueue)) {\n        throw new SchedulerDynamicEditException(\n            \"ParentQueue for \" + newQueue.getQueueName()\n                + \" is not properly set (should be set and be a PlanQueue)\");\n      }\n\n      PlanQueue parentPlan \u003d (PlanQueue) newQueue.getParent();\n      String queuename \u003d newQueue.getQueueName();\n      parentPlan.addChildQueue(newQueue);\n      this.queues.put(queuename, newQueue);\n      LOG.info(\"Creation of ReservationQueue \" + newQueue + \" succeeded\");\n    } finally {\n      writeLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
          "extendedDetails": {}
        }
      ]
    },
    "eb3e40b833b9d82c1556843f960194dc42e482f3": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1707. Introduce APIs to add/remove/resize queues in the CapacityScheduler. Contributed by Carlo Curino and Subru Krishnan\n(cherry picked from commit aac47fda7fecda9fc18ade34d633eca895865a70)\n\nConflicts:\n\thadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java\n",
      "commitDate": "03/10/14 3:41 PM",
      "commitName": "eb3e40b833b9d82c1556843f960194dc42e482f3",
      "commitAuthor": "carlo curino",
      "diff": "@@ -0,0 +1,23 @@\n+  public synchronized void addQueue(Queue queue)\n+      throws SchedulerDynamicEditException {\n+\n+    if (!(queue instanceof ReservationQueue)) {\n+      throw new SchedulerDynamicEditException(\"Queue \" + queue.getQueueName()\n+          + \" is not a ReservationQueue\");\n+    }\n+\n+    ReservationQueue newQueue \u003d (ReservationQueue) queue;\n+\n+    if (newQueue.getParent() \u003d\u003d null\n+        || !(newQueue.getParent() instanceof PlanQueue)) {\n+      throw new SchedulerDynamicEditException(\"ParentQueue for \"\n+          + newQueue.getQueueName()\n+          + \" is not properly set (should be set and be a PlanQueue)\");\n+    }\n+\n+    PlanQueue parentPlan \u003d (PlanQueue) newQueue.getParent();\n+    String queuename \u003d newQueue.getQueueName();\n+    parentPlan.addChildQueue(newQueue);\n+    this.queues.put(queuename, newQueue);\n+    LOG.info(\"Creation of ReservationQueue \" + newQueue + \" succeeded\");\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void addQueue(Queue queue)\n      throws SchedulerDynamicEditException {\n\n    if (!(queue instanceof ReservationQueue)) {\n      throw new SchedulerDynamicEditException(\"Queue \" + queue.getQueueName()\n          + \" is not a ReservationQueue\");\n    }\n\n    ReservationQueue newQueue \u003d (ReservationQueue) queue;\n\n    if (newQueue.getParent() \u003d\u003d null\n        || !(newQueue.getParent() instanceof PlanQueue)) {\n      throw new SchedulerDynamicEditException(\"ParentQueue for \"\n          + newQueue.getQueueName()\n          + \" is not properly set (should be set and be a PlanQueue)\");\n    }\n\n    PlanQueue parentPlan \u003d (PlanQueue) newQueue.getParent();\n    String queuename \u003d newQueue.getQueueName();\n    parentPlan.addChildQueue(newQueue);\n    this.queues.put(queuename, newQueue);\n    LOG.info(\"Creation of ReservationQueue \" + newQueue + \" succeeded\");\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java"
    }
  }
}