{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ReservationInputValidator.java",
  "functionName": "validateReservationSubmissionRequest",
  "functionId": "validateReservationSubmissionRequest___reservationSystem-ReservationSystem__request-ReservationSubmissionRequest__reservationId-ReservationId",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/reservation/ReservationInputValidator.java",
  "functionStartLine": 227,
  "functionEndLine": 245,
  "numCommitsSeen": 11,
  "timeTaken": 2928,
  "changeHistory": [
    "b6e7d1369690eaf50ce9ea7968f91a72ecb74de0",
    "e3345e985bff93c6c74a76747e45376c6027f42c",
    "7996eca7dcfaa1bdf970e32022274f2699bef8a1",
    "013532a95e63d7c53e601be530021d6d5a15ab7f",
    "9875325d5c63f343809907d06bf48a298035a611",
    "6261f7cc69a0eb3eebc9898c7599c7c20f432b4e"
  ],
  "changeHistoryShort": {
    "b6e7d1369690eaf50ce9ea7968f91a72ecb74de0": "Ybodychange",
    "e3345e985bff93c6c74a76747e45376c6027f42c": "Ybodychange",
    "7996eca7dcfaa1bdf970e32022274f2699bef8a1": "Ybodychange",
    "013532a95e63d7c53e601be530021d6d5a15ab7f": "Ybodychange",
    "9875325d5c63f343809907d06bf48a298035a611": "Ybodychange",
    "6261f7cc69a0eb3eebc9898c7599c7c20f432b4e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b6e7d1369690eaf50ce9ea7968f91a72ecb74de0": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5328. Plan/ResourceAllocation data structure enhancements required to support recurring reservations in ReservationSystem.\n",
      "commitDate": "06/09/17 4:46 PM",
      "commitName": "b6e7d1369690eaf50ce9ea7968f91a72ecb74de0",
      "commitAuthor": "Subru Krishnan",
      "commitDateOld": "06/09/17 4:39 PM",
      "commitNameOld": "e3345e985bff93c6c74a76747e45376c6027f42c",
      "commitAuthorOld": "Subru Krishnan",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,19 @@\n   public Plan validateReservationSubmissionRequest(\n-      ReservationSystem reservationSystem,\n-      ReservationSubmissionRequest request, ReservationId reservationId)\n-      throws YarnException {\n+      ReservationSystem reservationSystem, ReservationSubmissionRequest request,\n+      ReservationId reservationId) throws YarnException {\n     String message;\n     if (reservationId \u003d\u003d null) {\n-      message \u003d \"Reservation id cannot be null. Please try again \" +\n-        \"specifying a valid reservation id by creating a new reservation id.\";\n+      message \u003d \"Reservation id cannot be null. Please try again specifying \"\n+          + \" a valid reservation id by creating a new reservation id.\";\n       throw RPCUtil.getRemoteException(message);\n     }\n     // Check if it is a managed queue\n     String queue \u003d request.getQueue();\n     Plan plan \u003d getPlanFromQueue(reservationSystem, queue,\n-            AuditConstants.SUBMIT_RESERVATION_REQUEST);\n+        AuditConstants.SUBMIT_RESERVATION_REQUEST);\n \n     validateReservationDefinition(reservationId,\n         request.getReservationDefinition(), plan,\n         AuditConstants.SUBMIT_RESERVATION_REQUEST);\n     return plan;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Plan validateReservationSubmissionRequest(\n      ReservationSystem reservationSystem, ReservationSubmissionRequest request,\n      ReservationId reservationId) throws YarnException {\n    String message;\n    if (reservationId \u003d\u003d null) {\n      message \u003d \"Reservation id cannot be null. Please try again specifying \"\n          + \" a valid reservation id by creating a new reservation id.\";\n      throw RPCUtil.getRemoteException(message);\n    }\n    // Check if it is a managed queue\n    String queue \u003d request.getQueue();\n    Plan plan \u003d getPlanFromQueue(reservationSystem, queue,\n        AuditConstants.SUBMIT_RESERVATION_REQUEST);\n\n    validateReservationDefinition(reservationId,\n        request.getReservationDefinition(), plan,\n        AuditConstants.SUBMIT_RESERVATION_REQUEST);\n    return plan;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/reservation/ReservationInputValidator.java",
      "extendedDetails": {}
    },
    "e3345e985bff93c6c74a76747e45376c6027f42c": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"Plan/ResourceAllocation data structure enhancements required to support recurring reservations in ReservationSystem.\"\n\nThis reverts commit 7996eca7dcfaa1bdf970e32022274f2699bef8a1.\n",
      "commitDate": "06/09/17 4:39 PM",
      "commitName": "e3345e985bff93c6c74a76747e45376c6027f42c",
      "commitAuthor": "Subru Krishnan",
      "commitDateOld": "01/09/17 3:16 PM",
      "commitNameOld": "7996eca7dcfaa1bdf970e32022274f2699bef8a1",
      "commitAuthorOld": "Subru Krishnan",
      "daysBetweenCommits": 5.06,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,20 @@\n   public Plan validateReservationSubmissionRequest(\n-      ReservationSystem reservationSystem, ReservationSubmissionRequest request,\n-      ReservationId reservationId) throws YarnException {\n+      ReservationSystem reservationSystem,\n+      ReservationSubmissionRequest request, ReservationId reservationId)\n+      throws YarnException {\n     String message;\n     if (reservationId \u003d\u003d null) {\n-      message \u003d \"Reservation id cannot be null. Please try again specifying \"\n-          + \" a valid reservation id by creating a new reservation id.\";\n+      message \u003d \"Reservation id cannot be null. Please try again \" +\n+        \"specifying a valid reservation id by creating a new reservation id.\";\n       throw RPCUtil.getRemoteException(message);\n     }\n     // Check if it is a managed queue\n     String queue \u003d request.getQueue();\n     Plan plan \u003d getPlanFromQueue(reservationSystem, queue,\n-        AuditConstants.SUBMIT_RESERVATION_REQUEST);\n+            AuditConstants.SUBMIT_RESERVATION_REQUEST);\n \n     validateReservationDefinition(reservationId,\n         request.getReservationDefinition(), plan,\n         AuditConstants.SUBMIT_RESERVATION_REQUEST);\n     return plan;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Plan validateReservationSubmissionRequest(\n      ReservationSystem reservationSystem,\n      ReservationSubmissionRequest request, ReservationId reservationId)\n      throws YarnException {\n    String message;\n    if (reservationId \u003d\u003d null) {\n      message \u003d \"Reservation id cannot be null. Please try again \" +\n        \"specifying a valid reservation id by creating a new reservation id.\";\n      throw RPCUtil.getRemoteException(message);\n    }\n    // Check if it is a managed queue\n    String queue \u003d request.getQueue();\n    Plan plan \u003d getPlanFromQueue(reservationSystem, queue,\n            AuditConstants.SUBMIT_RESERVATION_REQUEST);\n\n    validateReservationDefinition(reservationId,\n        request.getReservationDefinition(), plan,\n        AuditConstants.SUBMIT_RESERVATION_REQUEST);\n    return plan;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/reservation/ReservationInputValidator.java",
      "extendedDetails": {}
    },
    "7996eca7dcfaa1bdf970e32022274f2699bef8a1": {
      "type": "Ybodychange",
      "commitMessage": "Plan/ResourceAllocation data structure enhancements required to support recurring reservations in ReservationSystem.\n",
      "commitDate": "01/09/17 3:16 PM",
      "commitName": "7996eca7dcfaa1bdf970e32022274f2699bef8a1",
      "commitAuthor": "Subru Krishnan",
      "commitDateOld": "11/08/17 4:58 PM",
      "commitNameOld": "28d97b79b69bb2be02d9320105e155eeed6f9e78",
      "commitAuthorOld": "Carlo Curino",
      "daysBetweenCommits": 20.93,
      "commitsBetweenForRepo": 185,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,19 @@\n   public Plan validateReservationSubmissionRequest(\n-      ReservationSystem reservationSystem,\n-      ReservationSubmissionRequest request, ReservationId reservationId)\n-      throws YarnException {\n+      ReservationSystem reservationSystem, ReservationSubmissionRequest request,\n+      ReservationId reservationId) throws YarnException {\n     String message;\n     if (reservationId \u003d\u003d null) {\n-      message \u003d \"Reservation id cannot be null. Please try again \" +\n-        \"specifying a valid reservation id by creating a new reservation id.\";\n+      message \u003d \"Reservation id cannot be null. Please try again specifying \"\n+          + \" a valid reservation id by creating a new reservation id.\";\n       throw RPCUtil.getRemoteException(message);\n     }\n     // Check if it is a managed queue\n     String queue \u003d request.getQueue();\n     Plan plan \u003d getPlanFromQueue(reservationSystem, queue,\n-            AuditConstants.SUBMIT_RESERVATION_REQUEST);\n+        AuditConstants.SUBMIT_RESERVATION_REQUEST);\n \n     validateReservationDefinition(reservationId,\n         request.getReservationDefinition(), plan,\n         AuditConstants.SUBMIT_RESERVATION_REQUEST);\n     return plan;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Plan validateReservationSubmissionRequest(\n      ReservationSystem reservationSystem, ReservationSubmissionRequest request,\n      ReservationId reservationId) throws YarnException {\n    String message;\n    if (reservationId \u003d\u003d null) {\n      message \u003d \"Reservation id cannot be null. Please try again specifying \"\n          + \" a valid reservation id by creating a new reservation id.\";\n      throw RPCUtil.getRemoteException(message);\n    }\n    // Check if it is a managed queue\n    String queue \u003d request.getQueue();\n    Plan plan \u003d getPlanFromQueue(reservationSystem, queue,\n        AuditConstants.SUBMIT_RESERVATION_REQUEST);\n\n    validateReservationDefinition(reservationId,\n        request.getReservationDefinition(), plan,\n        AuditConstants.SUBMIT_RESERVATION_REQUEST);\n    return plan;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/reservation/ReservationInputValidator.java",
      "extendedDetails": {}
    },
    "013532a95e63d7c53e601be530021d6d5a15ab7f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4957. Add getNewReservation in ApplicationClientProtocol (Sean Po via curino)\n",
      "commitDate": "25/05/16 4:55 PM",
      "commitName": "013532a95e63d7c53e601be530021d6d5a15ab7f",
      "commitAuthor": "Carlo Curino",
      "commitDateOld": "01/02/16 6:17 PM",
      "commitNameOld": "9875325d5c63f343809907d06bf48a298035a611",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 113.9,
      "commitsBetweenForRepo": 740,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,20 @@\n   public Plan validateReservationSubmissionRequest(\n       ReservationSystem reservationSystem,\n       ReservationSubmissionRequest request, ReservationId reservationId)\n       throws YarnException {\n+    String message;\n+    if (reservationId \u003d\u003d null) {\n+      message \u003d \"Reservation id cannot be null. Please try again \" +\n+        \"specifying a valid reservation id by creating a new reservation id.\";\n+      throw RPCUtil.getRemoteException(message);\n+    }\n     // Check if it is a managed queue\n     String queue \u003d request.getQueue();\n     Plan plan \u003d getPlanFromQueue(reservationSystem, queue,\n             AuditConstants.SUBMIT_RESERVATION_REQUEST);\n+\n     validateReservationDefinition(reservationId,\n         request.getReservationDefinition(), plan,\n         AuditConstants.SUBMIT_RESERVATION_REQUEST);\n     return plan;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Plan validateReservationSubmissionRequest(\n      ReservationSystem reservationSystem,\n      ReservationSubmissionRequest request, ReservationId reservationId)\n      throws YarnException {\n    String message;\n    if (reservationId \u003d\u003d null) {\n      message \u003d \"Reservation id cannot be null. Please try again \" +\n        \"specifying a valid reservation id by creating a new reservation id.\";\n      throw RPCUtil.getRemoteException(message);\n    }\n    // Check if it is a managed queue\n    String queue \u003d request.getQueue();\n    Plan plan \u003d getPlanFromQueue(reservationSystem, queue,\n            AuditConstants.SUBMIT_RESERVATION_REQUEST);\n\n    validateReservationDefinition(reservationId,\n        request.getReservationDefinition(), plan,\n        AuditConstants.SUBMIT_RESERVATION_REQUEST);\n    return plan;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/reservation/ReservationInputValidator.java",
      "extendedDetails": {}
    },
    "9875325d5c63f343809907d06bf48a298035a611": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4340. Add list API to reservation system. (Sean Po via wangda)\n",
      "commitDate": "01/02/16 6:17 PM",
      "commitName": "9875325d5c63f343809907d06bf48a298035a611",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "03/10/14 3:43 PM",
      "commitNameOld": "5e10a13bb4759984494c6a870c7f08fb6693c9c0",
      "commitAuthorOld": "subru",
      "daysBetweenCommits": 486.15,
      "commitsBetweenForRepo": 3837,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,13 @@\n   public Plan validateReservationSubmissionRequest(\n       ReservationSystem reservationSystem,\n       ReservationSubmissionRequest request, ReservationId reservationId)\n       throws YarnException {\n     // Check if it is a managed queue\n-    String queueName \u003d request.getQueue();\n-    if (queueName \u003d\u003d null || queueName.isEmpty()) {\n-      String errMsg \u003d\n-          \"The queue to submit is not specified.\"\n-              + \" Please try again with a valid reservable queue.\";\n-      RMAuditLogger.logFailure(\"UNKNOWN\",\n-          AuditConstants.SUBMIT_RESERVATION_REQUEST,\n-          \"validate reservation input\", \"ClientRMService\", errMsg);\n-      throw RPCUtil.getRemoteException(errMsg);\n-    }\n-    Plan plan \u003d reservationSystem.getPlan(queueName);\n-    if (plan \u003d\u003d null) {\n-      String errMsg \u003d\n-          \"The specified queue: \" + queueName\n-              + \" is not managed by reservation system.\"\n-              + \" Please try again with a valid reservable queue.\";\n-      RMAuditLogger.logFailure(\"UNKNOWN\",\n-          AuditConstants.SUBMIT_RESERVATION_REQUEST,\n-          \"validate reservation input\", \"ClientRMService\", errMsg);\n-      throw RPCUtil.getRemoteException(errMsg);\n-    }\n+    String queue \u003d request.getQueue();\n+    Plan plan \u003d getPlanFromQueue(reservationSystem, queue,\n+            AuditConstants.SUBMIT_RESERVATION_REQUEST);\n     validateReservationDefinition(reservationId,\n         request.getReservationDefinition(), plan,\n         AuditConstants.SUBMIT_RESERVATION_REQUEST);\n     return plan;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Plan validateReservationSubmissionRequest(\n      ReservationSystem reservationSystem,\n      ReservationSubmissionRequest request, ReservationId reservationId)\n      throws YarnException {\n    // Check if it is a managed queue\n    String queue \u003d request.getQueue();\n    Plan plan \u003d getPlanFromQueue(reservationSystem, queue,\n            AuditConstants.SUBMIT_RESERVATION_REQUEST);\n    validateReservationDefinition(reservationId,\n        request.getReservationDefinition(), plan,\n        AuditConstants.SUBMIT_RESERVATION_REQUEST);\n    return plan;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/reservation/ReservationInputValidator.java",
      "extendedDetails": {}
    },
    "6261f7cc69a0eb3eebc9898c7599c7c20f432b4e": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2080. Integrating reservation system with ResourceManager and client-RM protocol. Contributed by Subru Krishnan and Carlo Curino.\n(cherry picked from commit 8baeaead8532898163f1006276b731a237b1a559)\n\nConflicts:\n\thadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppImpl.java\n",
      "commitDate": "03/10/14 3:42 PM",
      "commitName": "6261f7cc69a0eb3eebc9898c7599c7c20f432b4e",
      "commitAuthor": "subru",
      "diff": "@@ -0,0 +1,31 @@\n+  public Plan validateReservationSubmissionRequest(\n+      ReservationSystem reservationSystem,\n+      ReservationSubmissionRequest request, ReservationId reservationId)\n+      throws YarnException {\n+    // Check if it is a managed queue\n+    String queueName \u003d request.getQueue();\n+    if (queueName \u003d\u003d null || queueName.isEmpty()) {\n+      String errMsg \u003d\n+          \"The queue to submit is not specified.\"\n+              + \" Please try again with a valid reservable queue.\";\n+      RMAuditLogger.logFailure(\"UNKNOWN\",\n+          AuditConstants.SUBMIT_RESERVATION_REQUEST,\n+          \"validate reservation input\", \"ClientRMService\", errMsg);\n+      throw RPCUtil.getRemoteException(errMsg);\n+    }\n+    Plan plan \u003d reservationSystem.getPlan(queueName);\n+    if (plan \u003d\u003d null) {\n+      String errMsg \u003d\n+          \"The specified queue: \" + queueName\n+              + \" is not managed by reservation system.\"\n+              + \" Please try again with a valid reservable queue.\";\n+      RMAuditLogger.logFailure(\"UNKNOWN\",\n+          AuditConstants.SUBMIT_RESERVATION_REQUEST,\n+          \"validate reservation input\", \"ClientRMService\", errMsg);\n+      throw RPCUtil.getRemoteException(errMsg);\n+    }\n+    validateReservationDefinition(reservationId,\n+        request.getReservationDefinition(), plan,\n+        AuditConstants.SUBMIT_RESERVATION_REQUEST);\n+    return plan;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Plan validateReservationSubmissionRequest(\n      ReservationSystem reservationSystem,\n      ReservationSubmissionRequest request, ReservationId reservationId)\n      throws YarnException {\n    // Check if it is a managed queue\n    String queueName \u003d request.getQueue();\n    if (queueName \u003d\u003d null || queueName.isEmpty()) {\n      String errMsg \u003d\n          \"The queue to submit is not specified.\"\n              + \" Please try again with a valid reservable queue.\";\n      RMAuditLogger.logFailure(\"UNKNOWN\",\n          AuditConstants.SUBMIT_RESERVATION_REQUEST,\n          \"validate reservation input\", \"ClientRMService\", errMsg);\n      throw RPCUtil.getRemoteException(errMsg);\n    }\n    Plan plan \u003d reservationSystem.getPlan(queueName);\n    if (plan \u003d\u003d null) {\n      String errMsg \u003d\n          \"The specified queue: \" + queueName\n              + \" is not managed by reservation system.\"\n              + \" Please try again with a valid reservable queue.\";\n      RMAuditLogger.logFailure(\"UNKNOWN\",\n          AuditConstants.SUBMIT_RESERVATION_REQUEST,\n          \"validate reservation input\", \"ClientRMService\", errMsg);\n      throw RPCUtil.getRemoteException(errMsg);\n    }\n    validateReservationDefinition(reservationId,\n        request.getReservationDefinition(), plan,\n        AuditConstants.SUBMIT_RESERVATION_REQUEST);\n    return plan;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/reservation/ReservationInputValidator.java"
    }
  }
}