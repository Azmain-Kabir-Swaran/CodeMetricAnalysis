{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AMRMProxyTokenSecretManager.java",
  "functionName": "start",
  "functionId": "start",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/amrmproxy/AMRMProxyTokenSecretManager.java",
  "functionStartLine": 105,
  "functionEndLine": 119,
  "numCommitsSeen": 4,
  "timeTaken": 1138,
  "changeHistory": [
    "49aa60e50d20f8c18ed6f00fa8966244536fe7da",
    "6f72f1e6003ab11679bebeb96f27f1f62b3b3e02"
  ],
  "changeHistoryShort": {
    "49aa60e50d20f8c18ed6f00fa8966244536fe7da": "Ybodychange",
    "6f72f1e6003ab11679bebeb96f27f1f62b3b3e02": "Yintroduced"
  },
  "changeHistoryDetails": {
    "49aa60e50d20f8c18ed6f00fa8966244536fe7da": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6127. Add support for work preserving NM restart when AMRMProxy is enabled. (Botong Huang via asuresh).\n",
      "commitDate": "22/06/17 11:27 AM",
      "commitName": "49aa60e50d20f8c18ed6f00fa8966244536fe7da",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "07/09/15 6:35 PM",
      "commitNameOld": "6f72f1e6003ab11679bebeb96f27f1f62b3b3e02",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 653.7,
      "commitsBetweenForRepo": 4288,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,15 @@\n   public void start() {\n     if (this.currentMasterKey \u003d\u003d null) {\n       this.currentMasterKey \u003d createNewMasterKey();\n+      if (this.nmStateStore !\u003d null) {\n+        try {\n+          this.nmStateStore.storeAMRMProxyCurrentMasterKey(\n+              this.currentMasterKey.getMasterKey());\n+        } catch (IOException e) {\n+          LOG.error(\"Unable to update current master key in state store\", e);\n+        }\n+      }\n     }\n     this.timer.scheduleAtFixedRate(new MasterKeyRoller(), rollingInterval,\n         rollingInterval);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void start() {\n    if (this.currentMasterKey \u003d\u003d null) {\n      this.currentMasterKey \u003d createNewMasterKey();\n      if (this.nmStateStore !\u003d null) {\n        try {\n          this.nmStateStore.storeAMRMProxyCurrentMasterKey(\n              this.currentMasterKey.getMasterKey());\n        } catch (IOException e) {\n          LOG.error(\"Unable to update current master key in state store\", e);\n        }\n      }\n    }\n    this.timer.scheduleAtFixedRate(new MasterKeyRoller(), rollingInterval,\n        rollingInterval);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/amrmproxy/AMRMProxyTokenSecretManager.java",
      "extendedDetails": {}
    },
    "6f72f1e6003ab11679bebeb96f27f1f62b3b3e02": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2884. Added a proxy service in NM to proxy the the communication between AM and RM. Contributed by Kishore Chaliparambil\n",
      "commitDate": "07/09/15 6:35 PM",
      "commitName": "6f72f1e6003ab11679bebeb96f27f1f62b3b3e02",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,7 @@\n+  public void start() {\n+    if (this.currentMasterKey \u003d\u003d null) {\n+      this.currentMasterKey \u003d createNewMasterKey();\n+    }\n+    this.timer.scheduleAtFixedRate(new MasterKeyRoller(), rollingInterval,\n+        rollingInterval);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void start() {\n    if (this.currentMasterKey \u003d\u003d null) {\n      this.currentMasterKey \u003d createNewMasterKey();\n    }\n    this.timer.scheduleAtFixedRate(new MasterKeyRoller(), rollingInterval,\n        rollingInterval);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/amrmproxy/AMRMProxyTokenSecretManager.java"
    }
  }
}