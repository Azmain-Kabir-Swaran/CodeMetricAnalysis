{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AppCatalogSolrClient.java",
  "functionName": "search",
  "functionId": "search___keyword-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-catalog/hadoop-yarn-applications-catalog-webapp/src/main/java/org/apache/hadoop/yarn/appcatalog/application/AppCatalogSolrClient.java",
  "functionStartLine": 114,
  "functionEndLine": 145,
  "numCommitsSeen": 7,
  "timeTaken": 1334,
  "changeHistory": [
    "35b0a381e7bc8bbf74adfa51feee1d54d8675c06",
    "7ee32a2eb187d43f1c8d7c6416eebc13d461ee1e"
  ],
  "changeHistoryShort": {
    "35b0a381e7bc8bbf74adfa51feee1d54d8675c06": "Ybodychange",
    "7ee32a2eb187d43f1c8d7c6416eebc13d461ee1e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "35b0a381e7bc8bbf74adfa51feee1d54d8675c06": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9255. Improve recommend applications order and fix findbugs warnings. Contributed by Eric Yang\n",
      "commitDate": "01/04/19 9:21 AM",
      "commitName": "35b0a381e7bc8bbf74adfa51feee1d54d8675c06",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "29/03/19 1:51 PM",
      "commitNameOld": "7ee32a2eb187d43f1c8d7c6416eebc13d461ee1e",
      "commitAuthorOld": "Billie Rinaldi",
      "daysBetweenCommits": 2.81,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,32 @@\n   public List\u003cAppStoreEntry\u003e search(String keyword) {\n     List\u003cAppStoreEntry\u003e apps \u003d new ArrayList\u003cAppStoreEntry\u003e();\n     SolrClient solr \u003d getSolrClient();\n     SolrQuery query \u003d new SolrQuery();\n     if (keyword.length()\u003d\u003d0) {\n       query.setQuery(\"*:*\");\n       query.setFilterQueries(\"type_s:AppStoreEntry\");\n     } else {\n       query.setQuery(keyword);\n       query.setFilterQueries(\"type_s:AppStoreEntry\");\n     }\n     query.setRows(40);\n     QueryResponse response;\n     try {\n       response \u003d solr.query(query);\n       Iterator\u003cSolrDocument\u003e list \u003d response.getResults().listIterator();\n       while (list.hasNext()) {\n         SolrDocument d \u003d list.next();\n         AppStoreEntry entry \u003d new AppStoreEntry();\n         entry.setId(d.get(\"id\").toString());\n         entry.setOrg(d.get(\"org_s\").toString());\n         entry.setName(d.get(\"name_s\").toString());\n         entry.setDesc(d.get(\"desc_s\").toString());\n-        entry.setLike(Integer.valueOf(d.get(\"like_i\").toString()));\n-        entry.setDownload(Integer.valueOf(d.get(\"download_i\").toString()));\n+        entry.setLike(Integer.parseInt(d.get(\"like_i\").toString()));\n+        entry.setDownload(Integer.parseInt(d.get(\"download_i\").toString()));\n         apps.add(entry);\n       }\n     } catch (SolrServerException | IOException e) {\n       LOG.error(\"Error in searching for applications: \", e);\n     }\n     return apps;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public List\u003cAppStoreEntry\u003e search(String keyword) {\n    List\u003cAppStoreEntry\u003e apps \u003d new ArrayList\u003cAppStoreEntry\u003e();\n    SolrClient solr \u003d getSolrClient();\n    SolrQuery query \u003d new SolrQuery();\n    if (keyword.length()\u003d\u003d0) {\n      query.setQuery(\"*:*\");\n      query.setFilterQueries(\"type_s:AppStoreEntry\");\n    } else {\n      query.setQuery(keyword);\n      query.setFilterQueries(\"type_s:AppStoreEntry\");\n    }\n    query.setRows(40);\n    QueryResponse response;\n    try {\n      response \u003d solr.query(query);\n      Iterator\u003cSolrDocument\u003e list \u003d response.getResults().listIterator();\n      while (list.hasNext()) {\n        SolrDocument d \u003d list.next();\n        AppStoreEntry entry \u003d new AppStoreEntry();\n        entry.setId(d.get(\"id\").toString());\n        entry.setOrg(d.get(\"org_s\").toString());\n        entry.setName(d.get(\"name_s\").toString());\n        entry.setDesc(d.get(\"desc_s\").toString());\n        entry.setLike(Integer.parseInt(d.get(\"like_i\").toString()));\n        entry.setDownload(Integer.parseInt(d.get(\"download_i\").toString()));\n        apps.add(entry);\n      }\n    } catch (SolrServerException | IOException e) {\n      LOG.error(\"Error in searching for applications: \", e);\n    }\n    return apps;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-catalog/hadoop-yarn-applications-catalog-webapp/src/main/java/org/apache/hadoop/yarn/appcatalog/application/AppCatalogSolrClient.java",
      "extendedDetails": {}
    },
    "7ee32a2eb187d43f1c8d7c6416eebc13d461ee1e": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7129. Application Catalog for YARN applications. Contributed by Eric Yang\n",
      "commitDate": "29/03/19 1:51 PM",
      "commitName": "7ee32a2eb187d43f1c8d7c6416eebc13d461ee1e",
      "commitAuthor": "Billie Rinaldi",
      "diff": "@@ -0,0 +1,32 @@\n+  public List\u003cAppStoreEntry\u003e search(String keyword) {\n+    List\u003cAppStoreEntry\u003e apps \u003d new ArrayList\u003cAppStoreEntry\u003e();\n+    SolrClient solr \u003d getSolrClient();\n+    SolrQuery query \u003d new SolrQuery();\n+    if (keyword.length()\u003d\u003d0) {\n+      query.setQuery(\"*:*\");\n+      query.setFilterQueries(\"type_s:AppStoreEntry\");\n+    } else {\n+      query.setQuery(keyword);\n+      query.setFilterQueries(\"type_s:AppStoreEntry\");\n+    }\n+    query.setRows(40);\n+    QueryResponse response;\n+    try {\n+      response \u003d solr.query(query);\n+      Iterator\u003cSolrDocument\u003e list \u003d response.getResults().listIterator();\n+      while (list.hasNext()) {\n+        SolrDocument d \u003d list.next();\n+        AppStoreEntry entry \u003d new AppStoreEntry();\n+        entry.setId(d.get(\"id\").toString());\n+        entry.setOrg(d.get(\"org_s\").toString());\n+        entry.setName(d.get(\"name_s\").toString());\n+        entry.setDesc(d.get(\"desc_s\").toString());\n+        entry.setLike(Integer.valueOf(d.get(\"like_i\").toString()));\n+        entry.setDownload(Integer.valueOf(d.get(\"download_i\").toString()));\n+        apps.add(entry);\n+      }\n+    } catch (SolrServerException | IOException e) {\n+      LOG.error(\"Error in searching for applications: \", e);\n+    }\n+    return apps;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public List\u003cAppStoreEntry\u003e search(String keyword) {\n    List\u003cAppStoreEntry\u003e apps \u003d new ArrayList\u003cAppStoreEntry\u003e();\n    SolrClient solr \u003d getSolrClient();\n    SolrQuery query \u003d new SolrQuery();\n    if (keyword.length()\u003d\u003d0) {\n      query.setQuery(\"*:*\");\n      query.setFilterQueries(\"type_s:AppStoreEntry\");\n    } else {\n      query.setQuery(keyword);\n      query.setFilterQueries(\"type_s:AppStoreEntry\");\n    }\n    query.setRows(40);\n    QueryResponse response;\n    try {\n      response \u003d solr.query(query);\n      Iterator\u003cSolrDocument\u003e list \u003d response.getResults().listIterator();\n      while (list.hasNext()) {\n        SolrDocument d \u003d list.next();\n        AppStoreEntry entry \u003d new AppStoreEntry();\n        entry.setId(d.get(\"id\").toString());\n        entry.setOrg(d.get(\"org_s\").toString());\n        entry.setName(d.get(\"name_s\").toString());\n        entry.setDesc(d.get(\"desc_s\").toString());\n        entry.setLike(Integer.valueOf(d.get(\"like_i\").toString()));\n        entry.setDownload(Integer.valueOf(d.get(\"download_i\").toString()));\n        apps.add(entry);\n      }\n    } catch (SolrServerException | IOException e) {\n      LOG.error(\"Error in searching for applications: \", e);\n    }\n    return apps;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-catalog/hadoop-yarn-applications-catalog-webapp/src/main/java/org/apache/hadoop/yarn/appcatalog/application/AppCatalogSolrClient.java"
    }
  }
}