{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ApplicationHistoryManagerOnTimelineStore.java",
  "functionName": "getApplications",
  "functionId": "getApplications___appsNum-long__appStartedTimeBegin-long__appStartedTimeEnd-long",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/ApplicationHistoryManagerOnTimelineStore.java",
  "functionStartLine": 113,
  "functionEndLine": 137,
  "numCommitsSeen": 69,
  "timeTaken": 3737,
  "changeHistory": [
    "8d0ef3163287d811381e94cc0101dbc9847ee2db",
    "54504133f41e36eaea6bb06c7b9ddb249468ecd7",
    "455b3acf0e82b214e06bd7b538968252945cd3c4",
    "3648cb57c9f018a3a339c26f5a0ca2779485521a",
    "90a0c03f0a696d32e871a5da4560828edea8cfa9",
    "6b8b1608e64e300e4e1d23c60476febaca29ca38"
  ],
  "changeHistoryShort": {
    "8d0ef3163287d811381e94cc0101dbc9847ee2db": "Ymultichange(Yparameterchange,Ybodychange)",
    "54504133f41e36eaea6bb06c7b9ddb249468ecd7": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
    "455b3acf0e82b214e06bd7b538968252945cd3c4": "Ybodychange",
    "3648cb57c9f018a3a339c26f5a0ca2779485521a": "Ybodychange",
    "90a0c03f0a696d32e871a5da4560828edea8cfa9": "Ybodychange",
    "6b8b1608e64e300e4e1d23c60476febaca29ca38": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8d0ef3163287d811381e94cc0101dbc9847ee2db": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-3787. Allowed generic history service to load a number of applications whose started time is within the given range. Contributed by Xuan Gong.\n",
      "commitDate": "08/06/15 11:14 PM",
      "commitName": "8d0ef3163287d811381e94cc0101dbc9847ee2db",
      "commitAuthor": "Zhijie Shen",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-3787. Allowed generic history service to load a number of applications whose started time is within the given range. Contributed by Xuan Gong.\n",
          "commitDate": "08/06/15 11:14 PM",
          "commitName": "8d0ef3163287d811381e94cc0101dbc9847ee2db",
          "commitAuthor": "Zhijie Shen",
          "commitDateOld": "05/06/15 12:48 PM",
          "commitNameOld": "3e000a919fede85230fcfb06309a1f1d5e0c479c",
          "commitAuthorOld": "Xuan",
          "daysBetweenCommits": 3.43,
          "commitsBetweenForRepo": 24,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,25 @@\n-  public Map\u003cApplicationId, ApplicationReport\u003e getApplications(long appsNum)\n-      throws YarnException, IOException {\n-    TimelineEntities entities \u003d timelineDataManager.getEntities(\n-        ApplicationMetricsConstants.ENTITY_TYPE, null, null, null, null, null,\n-        null, appsNum \u003d\u003d Long.MAX_VALUE ? this.maxLoadedApplications : appsNum,\n-        EnumSet.allOf(Field.class), UserGroupInformation.getLoginUser());\n+  public Map\u003cApplicationId, ApplicationReport\u003e getApplications(long appsNum,\n+      long appStartedTimeBegin, long appStartedTimeEnd) throws YarnException,\n+      IOException {\n+    TimelineEntities entities \u003d\n+        timelineDataManager.getEntities(\n+          ApplicationMetricsConstants.ENTITY_TYPE, null, null,\n+          appStartedTimeBegin, appStartedTimeEnd, null, null,\n+          appsNum \u003d\u003d Long.MAX_VALUE ? this.maxLoadedApplications : appsNum,\n+          EnumSet.allOf(Field.class), UserGroupInformation.getLoginUser());\n     Map\u003cApplicationId, ApplicationReport\u003e apps \u003d\n         new LinkedHashMap\u003cApplicationId, ApplicationReport\u003e();\n     if (entities !\u003d null \u0026\u0026 entities.getEntities() !\u003d null) {\n       for (TimelineEntity entity : entities.getEntities()) {\n         try {\n           ApplicationReportExt app \u003d\n               generateApplicationReport(entity, ApplicationReportField.ALL);\n           apps.put(app.appReport.getApplicationId(), app.appReport);\n         } catch (Exception e) {\n           LOG.error(\"Error on generating application report for \" +\n               entity.getEntityId(), e);\n         }\n       }\n     }\n     return apps;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Map\u003cApplicationId, ApplicationReport\u003e getApplications(long appsNum,\n      long appStartedTimeBegin, long appStartedTimeEnd) throws YarnException,\n      IOException {\n    TimelineEntities entities \u003d\n        timelineDataManager.getEntities(\n          ApplicationMetricsConstants.ENTITY_TYPE, null, null,\n          appStartedTimeBegin, appStartedTimeEnd, null, null,\n          appsNum \u003d\u003d Long.MAX_VALUE ? this.maxLoadedApplications : appsNum,\n          EnumSet.allOf(Field.class), UserGroupInformation.getLoginUser());\n    Map\u003cApplicationId, ApplicationReport\u003e apps \u003d\n        new LinkedHashMap\u003cApplicationId, ApplicationReport\u003e();\n    if (entities !\u003d null \u0026\u0026 entities.getEntities() !\u003d null) {\n      for (TimelineEntity entity : entities.getEntities()) {\n        try {\n          ApplicationReportExt app \u003d\n              generateApplicationReport(entity, ApplicationReportField.ALL);\n          apps.put(app.appReport.getApplicationId(), app.appReport);\n        } catch (Exception e) {\n          LOG.error(\"Error on generating application report for \" +\n              entity.getEntityId(), e);\n        }\n      }\n    }\n    return apps;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/ApplicationHistoryManagerOnTimelineStore.java",
          "extendedDetails": {
            "oldValue": "[appsNum-long]",
            "newValue": "[appsNum-long, appStartedTimeBegin-long, appStartedTimeEnd-long]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3787. Allowed generic history service to load a number of applications whose started time is within the given range. Contributed by Xuan Gong.\n",
          "commitDate": "08/06/15 11:14 PM",
          "commitName": "8d0ef3163287d811381e94cc0101dbc9847ee2db",
          "commitAuthor": "Zhijie Shen",
          "commitDateOld": "05/06/15 12:48 PM",
          "commitNameOld": "3e000a919fede85230fcfb06309a1f1d5e0c479c",
          "commitAuthorOld": "Xuan",
          "daysBetweenCommits": 3.43,
          "commitsBetweenForRepo": 24,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,25 @@\n-  public Map\u003cApplicationId, ApplicationReport\u003e getApplications(long appsNum)\n-      throws YarnException, IOException {\n-    TimelineEntities entities \u003d timelineDataManager.getEntities(\n-        ApplicationMetricsConstants.ENTITY_TYPE, null, null, null, null, null,\n-        null, appsNum \u003d\u003d Long.MAX_VALUE ? this.maxLoadedApplications : appsNum,\n-        EnumSet.allOf(Field.class), UserGroupInformation.getLoginUser());\n+  public Map\u003cApplicationId, ApplicationReport\u003e getApplications(long appsNum,\n+      long appStartedTimeBegin, long appStartedTimeEnd) throws YarnException,\n+      IOException {\n+    TimelineEntities entities \u003d\n+        timelineDataManager.getEntities(\n+          ApplicationMetricsConstants.ENTITY_TYPE, null, null,\n+          appStartedTimeBegin, appStartedTimeEnd, null, null,\n+          appsNum \u003d\u003d Long.MAX_VALUE ? this.maxLoadedApplications : appsNum,\n+          EnumSet.allOf(Field.class), UserGroupInformation.getLoginUser());\n     Map\u003cApplicationId, ApplicationReport\u003e apps \u003d\n         new LinkedHashMap\u003cApplicationId, ApplicationReport\u003e();\n     if (entities !\u003d null \u0026\u0026 entities.getEntities() !\u003d null) {\n       for (TimelineEntity entity : entities.getEntities()) {\n         try {\n           ApplicationReportExt app \u003d\n               generateApplicationReport(entity, ApplicationReportField.ALL);\n           apps.put(app.appReport.getApplicationId(), app.appReport);\n         } catch (Exception e) {\n           LOG.error(\"Error on generating application report for \" +\n               entity.getEntityId(), e);\n         }\n       }\n     }\n     return apps;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Map\u003cApplicationId, ApplicationReport\u003e getApplications(long appsNum,\n      long appStartedTimeBegin, long appStartedTimeEnd) throws YarnException,\n      IOException {\n    TimelineEntities entities \u003d\n        timelineDataManager.getEntities(\n          ApplicationMetricsConstants.ENTITY_TYPE, null, null,\n          appStartedTimeBegin, appStartedTimeEnd, null, null,\n          appsNum \u003d\u003d Long.MAX_VALUE ? this.maxLoadedApplications : appsNum,\n          EnumSet.allOf(Field.class), UserGroupInformation.getLoginUser());\n    Map\u003cApplicationId, ApplicationReport\u003e apps \u003d\n        new LinkedHashMap\u003cApplicationId, ApplicationReport\u003e();\n    if (entities !\u003d null \u0026\u0026 entities.getEntities() !\u003d null) {\n      for (TimelineEntity entity : entities.getEntities()) {\n        try {\n          ApplicationReportExt app \u003d\n              generateApplicationReport(entity, ApplicationReportField.ALL);\n          apps.put(app.appReport.getApplicationId(), app.appReport);\n        } catch (Exception e) {\n          LOG.error(\"Error on generating application report for \" +\n              entity.getEntityId(), e);\n        }\n      }\n    }\n    return apps;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/ApplicationHistoryManagerOnTimelineStore.java",
          "extendedDetails": {}
        }
      ]
    },
    "54504133f41e36eaea6bb06c7b9ddb249468ecd7": {
      "type": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-3700. Made generic history service load a number of latest applications according to the parameter or the configuration. Contributed by Xuan Gong.\n",
      "commitDate": "27/05/15 4:52 PM",
      "commitName": "54504133f41e36eaea6bb06c7b9ddb249468ecd7",
      "commitAuthor": "Zhijie Shen",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-3700. Made generic history service load a number of latest applications according to the parameter or the configuration. Contributed by Xuan Gong.\n",
          "commitDate": "27/05/15 4:52 PM",
          "commitName": "54504133f41e36eaea6bb06c7b9ddb249468ecd7",
          "commitAuthor": "Zhijie Shen",
          "commitDateOld": "22/05/15 2:34 PM",
          "commitNameOld": "455b3acf0e82b214e06bd7b538968252945cd3c4",
          "commitAuthorOld": "Xuan",
          "daysBetweenCommits": 5.1,
          "commitsBetweenForRepo": 22,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,22 @@\n-  public Map\u003cApplicationId, ApplicationReport\u003e getAllApplications()\n+  public Map\u003cApplicationId, ApplicationReport\u003e getApplications(long appsNum)\n       throws YarnException, IOException {\n     TimelineEntities entities \u003d timelineDataManager.getEntities(\n-        ApplicationMetricsConstants.ENTITY_TYPE, null, null, null, null,\n-        null, null, Long.MAX_VALUE, EnumSet.allOf(Field.class),\n-        UserGroupInformation.getLoginUser());\n+        ApplicationMetricsConstants.ENTITY_TYPE, null, null, null, null, null,\n+        null, appsNum \u003d\u003d Long.MAX_VALUE ? this.maxLoadedApplications : appsNum,\n+        EnumSet.allOf(Field.class), UserGroupInformation.getLoginUser());\n     Map\u003cApplicationId, ApplicationReport\u003e apps \u003d\n         new LinkedHashMap\u003cApplicationId, ApplicationReport\u003e();\n     if (entities !\u003d null \u0026\u0026 entities.getEntities() !\u003d null) {\n       for (TimelineEntity entity : entities.getEntities()) {\n         try {\n           ApplicationReportExt app \u003d\n               generateApplicationReport(entity, ApplicationReportField.ALL);\n           apps.put(app.appReport.getApplicationId(), app.appReport);\n         } catch (Exception e) {\n           LOG.error(\"Error on generating application report for \" +\n               entity.getEntityId(), e);\n         }\n       }\n     }\n     return apps;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Map\u003cApplicationId, ApplicationReport\u003e getApplications(long appsNum)\n      throws YarnException, IOException {\n    TimelineEntities entities \u003d timelineDataManager.getEntities(\n        ApplicationMetricsConstants.ENTITY_TYPE, null, null, null, null, null,\n        null, appsNum \u003d\u003d Long.MAX_VALUE ? this.maxLoadedApplications : appsNum,\n        EnumSet.allOf(Field.class), UserGroupInformation.getLoginUser());\n    Map\u003cApplicationId, ApplicationReport\u003e apps \u003d\n        new LinkedHashMap\u003cApplicationId, ApplicationReport\u003e();\n    if (entities !\u003d null \u0026\u0026 entities.getEntities() !\u003d null) {\n      for (TimelineEntity entity : entities.getEntities()) {\n        try {\n          ApplicationReportExt app \u003d\n              generateApplicationReport(entity, ApplicationReportField.ALL);\n          apps.put(app.appReport.getApplicationId(), app.appReport);\n        } catch (Exception e) {\n          LOG.error(\"Error on generating application report for \" +\n              entity.getEntityId(), e);\n        }\n      }\n    }\n    return apps;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/ApplicationHistoryManagerOnTimelineStore.java",
          "extendedDetails": {
            "oldValue": "getAllApplications",
            "newValue": "getApplications"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-3700. Made generic history service load a number of latest applications according to the parameter or the configuration. Contributed by Xuan Gong.\n",
          "commitDate": "27/05/15 4:52 PM",
          "commitName": "54504133f41e36eaea6bb06c7b9ddb249468ecd7",
          "commitAuthor": "Zhijie Shen",
          "commitDateOld": "22/05/15 2:34 PM",
          "commitNameOld": "455b3acf0e82b214e06bd7b538968252945cd3c4",
          "commitAuthorOld": "Xuan",
          "daysBetweenCommits": 5.1,
          "commitsBetweenForRepo": 22,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,22 @@\n-  public Map\u003cApplicationId, ApplicationReport\u003e getAllApplications()\n+  public Map\u003cApplicationId, ApplicationReport\u003e getApplications(long appsNum)\n       throws YarnException, IOException {\n     TimelineEntities entities \u003d timelineDataManager.getEntities(\n-        ApplicationMetricsConstants.ENTITY_TYPE, null, null, null, null,\n-        null, null, Long.MAX_VALUE, EnumSet.allOf(Field.class),\n-        UserGroupInformation.getLoginUser());\n+        ApplicationMetricsConstants.ENTITY_TYPE, null, null, null, null, null,\n+        null, appsNum \u003d\u003d Long.MAX_VALUE ? this.maxLoadedApplications : appsNum,\n+        EnumSet.allOf(Field.class), UserGroupInformation.getLoginUser());\n     Map\u003cApplicationId, ApplicationReport\u003e apps \u003d\n         new LinkedHashMap\u003cApplicationId, ApplicationReport\u003e();\n     if (entities !\u003d null \u0026\u0026 entities.getEntities() !\u003d null) {\n       for (TimelineEntity entity : entities.getEntities()) {\n         try {\n           ApplicationReportExt app \u003d\n               generateApplicationReport(entity, ApplicationReportField.ALL);\n           apps.put(app.appReport.getApplicationId(), app.appReport);\n         } catch (Exception e) {\n           LOG.error(\"Error on generating application report for \" +\n               entity.getEntityId(), e);\n         }\n       }\n     }\n     return apps;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Map\u003cApplicationId, ApplicationReport\u003e getApplications(long appsNum)\n      throws YarnException, IOException {\n    TimelineEntities entities \u003d timelineDataManager.getEntities(\n        ApplicationMetricsConstants.ENTITY_TYPE, null, null, null, null, null,\n        null, appsNum \u003d\u003d Long.MAX_VALUE ? this.maxLoadedApplications : appsNum,\n        EnumSet.allOf(Field.class), UserGroupInformation.getLoginUser());\n    Map\u003cApplicationId, ApplicationReport\u003e apps \u003d\n        new LinkedHashMap\u003cApplicationId, ApplicationReport\u003e();\n    if (entities !\u003d null \u0026\u0026 entities.getEntities() !\u003d null) {\n      for (TimelineEntity entity : entities.getEntities()) {\n        try {\n          ApplicationReportExt app \u003d\n              generateApplicationReport(entity, ApplicationReportField.ALL);\n          apps.put(app.appReport.getApplicationId(), app.appReport);\n        } catch (Exception e) {\n          LOG.error(\"Error on generating application report for \" +\n              entity.getEntityId(), e);\n        }\n      }\n    }\n    return apps;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/ApplicationHistoryManagerOnTimelineStore.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[appsNum-long]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3700. Made generic history service load a number of latest applications according to the parameter or the configuration. Contributed by Xuan Gong.\n",
          "commitDate": "27/05/15 4:52 PM",
          "commitName": "54504133f41e36eaea6bb06c7b9ddb249468ecd7",
          "commitAuthor": "Zhijie Shen",
          "commitDateOld": "22/05/15 2:34 PM",
          "commitNameOld": "455b3acf0e82b214e06bd7b538968252945cd3c4",
          "commitAuthorOld": "Xuan",
          "daysBetweenCommits": 5.1,
          "commitsBetweenForRepo": 22,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,22 @@\n-  public Map\u003cApplicationId, ApplicationReport\u003e getAllApplications()\n+  public Map\u003cApplicationId, ApplicationReport\u003e getApplications(long appsNum)\n       throws YarnException, IOException {\n     TimelineEntities entities \u003d timelineDataManager.getEntities(\n-        ApplicationMetricsConstants.ENTITY_TYPE, null, null, null, null,\n-        null, null, Long.MAX_VALUE, EnumSet.allOf(Field.class),\n-        UserGroupInformation.getLoginUser());\n+        ApplicationMetricsConstants.ENTITY_TYPE, null, null, null, null, null,\n+        null, appsNum \u003d\u003d Long.MAX_VALUE ? this.maxLoadedApplications : appsNum,\n+        EnumSet.allOf(Field.class), UserGroupInformation.getLoginUser());\n     Map\u003cApplicationId, ApplicationReport\u003e apps \u003d\n         new LinkedHashMap\u003cApplicationId, ApplicationReport\u003e();\n     if (entities !\u003d null \u0026\u0026 entities.getEntities() !\u003d null) {\n       for (TimelineEntity entity : entities.getEntities()) {\n         try {\n           ApplicationReportExt app \u003d\n               generateApplicationReport(entity, ApplicationReportField.ALL);\n           apps.put(app.appReport.getApplicationId(), app.appReport);\n         } catch (Exception e) {\n           LOG.error(\"Error on generating application report for \" +\n               entity.getEntityId(), e);\n         }\n       }\n     }\n     return apps;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Map\u003cApplicationId, ApplicationReport\u003e getApplications(long appsNum)\n      throws YarnException, IOException {\n    TimelineEntities entities \u003d timelineDataManager.getEntities(\n        ApplicationMetricsConstants.ENTITY_TYPE, null, null, null, null, null,\n        null, appsNum \u003d\u003d Long.MAX_VALUE ? this.maxLoadedApplications : appsNum,\n        EnumSet.allOf(Field.class), UserGroupInformation.getLoginUser());\n    Map\u003cApplicationId, ApplicationReport\u003e apps \u003d\n        new LinkedHashMap\u003cApplicationId, ApplicationReport\u003e();\n    if (entities !\u003d null \u0026\u0026 entities.getEntities() !\u003d null) {\n      for (TimelineEntity entity : entities.getEntities()) {\n        try {\n          ApplicationReportExt app \u003d\n              generateApplicationReport(entity, ApplicationReportField.ALL);\n          apps.put(app.appReport.getApplicationId(), app.appReport);\n        } catch (Exception e) {\n          LOG.error(\"Error on generating application report for \" +\n              entity.getEntityId(), e);\n        }\n      }\n    }\n    return apps;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/ApplicationHistoryManagerOnTimelineStore.java",
          "extendedDetails": {}
        }
      ]
    },
    "455b3acf0e82b214e06bd7b538968252945cd3c4": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3701. Isolating the error of generating a single app report when\ngetting all apps from generic history service. Contributed by Zhijie\nShen\n",
      "commitDate": "22/05/15 2:34 PM",
      "commitName": "455b3acf0e82b214e06bd7b538968252945cd3c4",
      "commitAuthor": "Xuan",
      "commitDateOld": "07/04/15 8:22 AM",
      "commitNameOld": "19a4feaf6fcf42ebbfe98b8a7153ade96d37fb14",
      "commitAuthorOld": "Xuan",
      "daysBetweenCommits": 45.26,
      "commitsBetweenForRepo": 486,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,22 @@\n   public Map\u003cApplicationId, ApplicationReport\u003e getAllApplications()\n       throws YarnException, IOException {\n     TimelineEntities entities \u003d timelineDataManager.getEntities(\n         ApplicationMetricsConstants.ENTITY_TYPE, null, null, null, null,\n         null, null, Long.MAX_VALUE, EnumSet.allOf(Field.class),\n         UserGroupInformation.getLoginUser());\n     Map\u003cApplicationId, ApplicationReport\u003e apps \u003d\n         new LinkedHashMap\u003cApplicationId, ApplicationReport\u003e();\n     if (entities !\u003d null \u0026\u0026 entities.getEntities() !\u003d null) {\n       for (TimelineEntity entity : entities.getEntities()) {\n-        ApplicationReportExt app \u003d\n-            generateApplicationReport(entity, ApplicationReportField.ALL);\n-        apps.put(app.appReport.getApplicationId(), app.appReport);\n+        try {\n+          ApplicationReportExt app \u003d\n+              generateApplicationReport(entity, ApplicationReportField.ALL);\n+          apps.put(app.appReport.getApplicationId(), app.appReport);\n+        } catch (Exception e) {\n+          LOG.error(\"Error on generating application report for \" +\n+              entity.getEntityId(), e);\n+        }\n       }\n     }\n     return apps;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Map\u003cApplicationId, ApplicationReport\u003e getAllApplications()\n      throws YarnException, IOException {\n    TimelineEntities entities \u003d timelineDataManager.getEntities(\n        ApplicationMetricsConstants.ENTITY_TYPE, null, null, null, null,\n        null, null, Long.MAX_VALUE, EnumSet.allOf(Field.class),\n        UserGroupInformation.getLoginUser());\n    Map\u003cApplicationId, ApplicationReport\u003e apps \u003d\n        new LinkedHashMap\u003cApplicationId, ApplicationReport\u003e();\n    if (entities !\u003d null \u0026\u0026 entities.getEntities() !\u003d null) {\n      for (TimelineEntity entity : entities.getEntities()) {\n        try {\n          ApplicationReportExt app \u003d\n              generateApplicationReport(entity, ApplicationReportField.ALL);\n          apps.put(app.appReport.getApplicationId(), app.appReport);\n        } catch (Exception e) {\n          LOG.error(\"Error on generating application report for \" +\n              entity.getEntityId(), e);\n        }\n      }\n    }\n    return apps;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/ApplicationHistoryManagerOnTimelineStore.java",
      "extendedDetails": {}
    },
    "3648cb57c9f018a3a339c26f5a0ca2779485521a": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2766. Made ApplicationHistoryManager return a sorted list of apps, attempts and containers. Contributed by Robert Kanter.\n",
      "commitDate": "13/11/14 1:47 PM",
      "commitName": "3648cb57c9f018a3a339c26f5a0ca2779485521a",
      "commitAuthor": "Zhijie Shen",
      "commitDateOld": "27/10/14 10:45 AM",
      "commitNameOld": "c05b581a5522eed499d3ba16af9fa6dc694563f6",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 17.17,
      "commitsBetweenForRepo": 205,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   public Map\u003cApplicationId, ApplicationReport\u003e getAllApplications()\n       throws YarnException, IOException {\n     TimelineEntities entities \u003d timelineDataManager.getEntities(\n         ApplicationMetricsConstants.ENTITY_TYPE, null, null, null, null,\n         null, null, Long.MAX_VALUE, EnumSet.allOf(Field.class),\n         UserGroupInformation.getLoginUser());\n     Map\u003cApplicationId, ApplicationReport\u003e apps \u003d\n-        new HashMap\u003cApplicationId, ApplicationReport\u003e();\n+        new LinkedHashMap\u003cApplicationId, ApplicationReport\u003e();\n     if (entities !\u003d null \u0026\u0026 entities.getEntities() !\u003d null) {\n       for (TimelineEntity entity : entities.getEntities()) {\n         ApplicationReportExt app \u003d\n             generateApplicationReport(entity, ApplicationReportField.ALL);\n         apps.put(app.appReport.getApplicationId(), app.appReport);\n       }\n     }\n     return apps;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Map\u003cApplicationId, ApplicationReport\u003e getAllApplications()\n      throws YarnException, IOException {\n    TimelineEntities entities \u003d timelineDataManager.getEntities(\n        ApplicationMetricsConstants.ENTITY_TYPE, null, null, null, null,\n        null, null, Long.MAX_VALUE, EnumSet.allOf(Field.class),\n        UserGroupInformation.getLoginUser());\n    Map\u003cApplicationId, ApplicationReport\u003e apps \u003d\n        new LinkedHashMap\u003cApplicationId, ApplicationReport\u003e();\n    if (entities !\u003d null \u0026\u0026 entities.getEntities() !\u003d null) {\n      for (TimelineEntity entity : entities.getEntities()) {\n        ApplicationReportExt app \u003d\n            generateApplicationReport(entity, ApplicationReportField.ALL);\n        apps.put(app.appReport.getApplicationId(), app.appReport);\n      }\n    }\n    return apps;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/ApplicationHistoryManagerOnTimelineStore.java",
      "extendedDetails": {}
    },
    "90a0c03f0a696d32e871a5da4560828edea8cfa9": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1250. Generic history service should support application-acls. (Contributed by Zhijie Shen)\n",
      "commitDate": "16/09/14 6:20 PM",
      "commitName": "90a0c03f0a696d32e871a5da4560828edea8cfa9",
      "commitAuthor": "junping_du",
      "commitDateOld": "11/09/14 7:04 PM",
      "commitNameOld": "6b8b1608e64e300e4e1d23c60476febaca29ca38",
      "commitAuthorOld": "junping_du",
      "daysBetweenCommits": 4.97,
      "commitsBetweenForRepo": 36,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   public Map\u003cApplicationId, ApplicationReport\u003e getAllApplications()\n       throws YarnException, IOException {\n     TimelineEntities entities \u003d timelineDataManager.getEntities(\n         ApplicationMetricsConstants.ENTITY_TYPE, null, null, null, null,\n         null, null, Long.MAX_VALUE, EnumSet.allOf(Field.class),\n         UserGroupInformation.getLoginUser());\n     Map\u003cApplicationId, ApplicationReport\u003e apps \u003d\n         new HashMap\u003cApplicationId, ApplicationReport\u003e();\n     if (entities !\u003d null \u0026\u0026 entities.getEntities() !\u003d null) {\n       for (TimelineEntity entity : entities.getEntities()) {\n-        ApplicationReport app \u003d\n+        ApplicationReportExt app \u003d\n             generateApplicationReport(entity, ApplicationReportField.ALL);\n-        apps.put(app.getApplicationId(), app);\n+        apps.put(app.appReport.getApplicationId(), app.appReport);\n       }\n     }\n     return apps;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Map\u003cApplicationId, ApplicationReport\u003e getAllApplications()\n      throws YarnException, IOException {\n    TimelineEntities entities \u003d timelineDataManager.getEntities(\n        ApplicationMetricsConstants.ENTITY_TYPE, null, null, null, null,\n        null, null, Long.MAX_VALUE, EnumSet.allOf(Field.class),\n        UserGroupInformation.getLoginUser());\n    Map\u003cApplicationId, ApplicationReport\u003e apps \u003d\n        new HashMap\u003cApplicationId, ApplicationReport\u003e();\n    if (entities !\u003d null \u0026\u0026 entities.getEntities() !\u003d null) {\n      for (TimelineEntity entity : entities.getEntities()) {\n        ApplicationReportExt app \u003d\n            generateApplicationReport(entity, ApplicationReportField.ALL);\n        apps.put(app.appReport.getApplicationId(), app.appReport);\n      }\n    }\n    return apps;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/ApplicationHistoryManagerOnTimelineStore.java",
      "extendedDetails": {}
    },
    "6b8b1608e64e300e4e1d23c60476febaca29ca38": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2033. Merging generic-history into the Timeline Store (Contributed by Zhijie Shen)\n",
      "commitDate": "11/09/14 7:04 PM",
      "commitName": "6b8b1608e64e300e4e1d23c60476febaca29ca38",
      "commitAuthor": "junping_du",
      "diff": "@@ -0,0 +1,17 @@\n+  public Map\u003cApplicationId, ApplicationReport\u003e getAllApplications()\n+      throws YarnException, IOException {\n+    TimelineEntities entities \u003d timelineDataManager.getEntities(\n+        ApplicationMetricsConstants.ENTITY_TYPE, null, null, null, null,\n+        null, null, Long.MAX_VALUE, EnumSet.allOf(Field.class),\n+        UserGroupInformation.getLoginUser());\n+    Map\u003cApplicationId, ApplicationReport\u003e apps \u003d\n+        new HashMap\u003cApplicationId, ApplicationReport\u003e();\n+    if (entities !\u003d null \u0026\u0026 entities.getEntities() !\u003d null) {\n+      for (TimelineEntity entity : entities.getEntities()) {\n+        ApplicationReport app \u003d\n+            generateApplicationReport(entity, ApplicationReportField.ALL);\n+        apps.put(app.getApplicationId(), app);\n+      }\n+    }\n+    return apps;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Map\u003cApplicationId, ApplicationReport\u003e getAllApplications()\n      throws YarnException, IOException {\n    TimelineEntities entities \u003d timelineDataManager.getEntities(\n        ApplicationMetricsConstants.ENTITY_TYPE, null, null, null, null,\n        null, null, Long.MAX_VALUE, EnumSet.allOf(Field.class),\n        UserGroupInformation.getLoginUser());\n    Map\u003cApplicationId, ApplicationReport\u003e apps \u003d\n        new HashMap\u003cApplicationId, ApplicationReport\u003e();\n    if (entities !\u003d null \u0026\u0026 entities.getEntities() !\u003d null) {\n      for (TimelineEntity entity : entities.getEntities()) {\n        ApplicationReport app \u003d\n            generateApplicationReport(entity, ApplicationReportField.ALL);\n        apps.put(app.getApplicationId(), app);\n      }\n    }\n    return apps;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/ApplicationHistoryManagerOnTimelineStore.java"
    }
  }
}