{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FileUtil.java",
  "functionName": "unTar",
  "functionId": "unTar___inFile-File__untarDir-File",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileUtil.java",
  "functionStartLine": 852,
  "functionEndLine": 870,
  "numCommitsSeen": 68,
  "timeTaken": 2006,
  "changeHistory": [
    "71a57ded39a605166d616fe68f36017cdb0abe3e",
    "b04586e7ebfad28034931739b3980756c63e54d1",
    "e6ef76999f0c560bab619ad002a2758e19176fc2",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "0485fe23ba76f7d96a198aed00f392fd571124bc",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36"
  ],
  "changeHistoryShort": {
    "71a57ded39a605166d616fe68f36017cdb0abe3e": "Ybodychange",
    "b04586e7ebfad28034931739b3980756c63e54d1": "Ybodychange",
    "e6ef76999f0c560bab619ad002a2758e19176fc2": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "0485fe23ba76f7d96a198aed00f392fd571124bc": "Ybodychange",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": "Yintroduced"
  },
  "changeHistoryDetails": {
    "71a57ded39a605166d616fe68f36017cdb0abe3e": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-9264. Port change to use Java untar API on Windows from branch-1-win to trunk. Contributed by Chris Nauroth.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1441172 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/01/13 12:13 PM",
      "commitName": "71a57ded39a605166d616fe68f36017cdb0abe3e",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "31/01/13 11:49 AM",
      "commitNameOld": "b04586e7ebfad28034931739b3980756c63e54d1",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,19 @@\n   public static void unTar(File inFile, File untarDir) throws IOException {\n-    if (!untarDir.mkdirs()) {           \n+    if (!untarDir.mkdirs()) {\n       if (!untarDir.isDirectory()) {\n         throw new IOException(\"Mkdirs failed to create \" + untarDir);\n       }\n     }\n \n-    StringBuilder untarCommand \u003d new StringBuilder();\n     boolean gzipped \u003d inFile.toString().endsWith(\"gz\");\n-    if (gzipped) {\n-      untarCommand.append(\" gzip -dc \u0027\");\n-      untarCommand.append(FileUtil.makeShellPath(inFile));\n-      untarCommand.append(\"\u0027 | (\");\n-    } \n-    untarCommand.append(\"cd \u0027\");\n-    untarCommand.append(FileUtil.makeShellPath(untarDir)); \n-    untarCommand.append(\"\u0027 ; \");\n-    untarCommand.append(\"tar -xf \");\n-    \n-    if (gzipped) {\n-      untarCommand.append(\" -)\");\n-    } else {\n-      untarCommand.append(FileUtil.makeShellPath(inFile));\n+    if(Shell.WINDOWS) {\n+      // Tar is not native to Windows. Use simple Java based implementation for \n+      // tests and simple tar archives\n+      unTarUsingJava(inFile, untarDir, gzipped);\n     }\n-    String[] shellCmd \u003d { \"bash\", \"-c\", untarCommand.toString() };\n-    ShellCommandExecutor shexec \u003d new ShellCommandExecutor(shellCmd);\n-    shexec.execute();\n-    int exitcode \u003d shexec.getExitCode();\n-    if (exitcode !\u003d 0) {\n-      throw new IOException(\"Error untarring file \" + inFile + \n-                  \". Tar process exited with exit code \" + exitcode);\n+    else {\n+      // spawn tar utility to untar archive for full fledged unix behavior such \n+      // as resolving symlinks in tar archives\n+      unTarUsingTar(inFile, untarDir, gzipped);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void unTar(File inFile, File untarDir) throws IOException {\n    if (!untarDir.mkdirs()) {\n      if (!untarDir.isDirectory()) {\n        throw new IOException(\"Mkdirs failed to create \" + untarDir);\n      }\n    }\n\n    boolean gzipped \u003d inFile.toString().endsWith(\"gz\");\n    if(Shell.WINDOWS) {\n      // Tar is not native to Windows. Use simple Java based implementation for \n      // tests and simple tar archives\n      unTarUsingJava(inFile, untarDir, gzipped);\n    }\n    else {\n      // spawn tar utility to untar archive for full fledged unix behavior such \n      // as resolving symlinks in tar archives\n      unTarUsingTar(inFile, untarDir, gzipped);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileUtil.java",
      "extendedDetails": {}
    },
    "b04586e7ebfad28034931739b3980756c63e54d1": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-9264. Reverting r1441164 and wait for Jenkins results before committing the patch.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1441166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/01/13 11:49 AM",
      "commitName": "b04586e7ebfad28034931739b3980756c63e54d1",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "31/01/13 11:45 AM",
      "commitNameOld": "e6ef76999f0c560bab619ad002a2758e19176fc2",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,33 @@\n   public static void unTar(File inFile, File untarDir) throws IOException {\n-    if (!untarDir.mkdirs()) {\n+    if (!untarDir.mkdirs()) {           \n       if (!untarDir.isDirectory()) {\n         throw new IOException(\"Mkdirs failed to create \" + untarDir);\n       }\n     }\n \n+    StringBuilder untarCommand \u003d new StringBuilder();\n     boolean gzipped \u003d inFile.toString().endsWith(\"gz\");\n-    if(Shell.WINDOWS) {\n-      // Tar is not native to Windows. Use simple Java based implementation for \n-      // tests and simple tar archives\n-      unTarUsingJava(inFile, untarDir, gzipped);\n+    if (gzipped) {\n+      untarCommand.append(\" gzip -dc \u0027\");\n+      untarCommand.append(FileUtil.makeShellPath(inFile));\n+      untarCommand.append(\"\u0027 | (\");\n+    } \n+    untarCommand.append(\"cd \u0027\");\n+    untarCommand.append(FileUtil.makeShellPath(untarDir)); \n+    untarCommand.append(\"\u0027 ; \");\n+    untarCommand.append(\"tar -xf \");\n+    \n+    if (gzipped) {\n+      untarCommand.append(\" -)\");\n+    } else {\n+      untarCommand.append(FileUtil.makeShellPath(inFile));\n     }\n-    else {\n-      // spawn tar utility to untar archive for full fledged unix behavior such \n-      // as resolving symlinks in tar archives\n-      unTarUsingTar(inFile, untarDir, gzipped);\n+    String[] shellCmd \u003d { \"bash\", \"-c\", untarCommand.toString() };\n+    ShellCommandExecutor shexec \u003d new ShellCommandExecutor(shellCmd);\n+    shexec.execute();\n+    int exitcode \u003d shexec.getExitCode();\n+    if (exitcode !\u003d 0) {\n+      throw new IOException(\"Error untarring file \" + inFile + \n+                  \". Tar process exited with exit code \" + exitcode);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void unTar(File inFile, File untarDir) throws IOException {\n    if (!untarDir.mkdirs()) {           \n      if (!untarDir.isDirectory()) {\n        throw new IOException(\"Mkdirs failed to create \" + untarDir);\n      }\n    }\n\n    StringBuilder untarCommand \u003d new StringBuilder();\n    boolean gzipped \u003d inFile.toString().endsWith(\"gz\");\n    if (gzipped) {\n      untarCommand.append(\" gzip -dc \u0027\");\n      untarCommand.append(FileUtil.makeShellPath(inFile));\n      untarCommand.append(\"\u0027 | (\");\n    } \n    untarCommand.append(\"cd \u0027\");\n    untarCommand.append(FileUtil.makeShellPath(untarDir)); \n    untarCommand.append(\"\u0027 ; \");\n    untarCommand.append(\"tar -xf \");\n    \n    if (gzipped) {\n      untarCommand.append(\" -)\");\n    } else {\n      untarCommand.append(FileUtil.makeShellPath(inFile));\n    }\n    String[] shellCmd \u003d { \"bash\", \"-c\", untarCommand.toString() };\n    ShellCommandExecutor shexec \u003d new ShellCommandExecutor(shellCmd);\n    shexec.execute();\n    int exitcode \u003d shexec.getExitCode();\n    if (exitcode !\u003d 0) {\n      throw new IOException(\"Error untarring file \" + inFile + \n                  \". Tar process exited with exit code \" + exitcode);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileUtil.java",
      "extendedDetails": {}
    },
    "e6ef76999f0c560bab619ad002a2758e19176fc2": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-9264. Port change to use Java untar API on Windows from branch-1-win to trunk. Contributed by Chris Nauroth.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1441164 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/01/13 11:45 AM",
      "commitName": "e6ef76999f0c560bab619ad002a2758e19176fc2",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "17/01/13 11:19 AM",
      "commitNameOld": "5c5e6ed13a6095edfb53ceb2314b64cf83f3f01e",
      "commitAuthorOld": "Robert Joseph Evans",
      "daysBetweenCommits": 14.02,
      "commitsBetweenForRepo": 57,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,19 @@\n   public static void unTar(File inFile, File untarDir) throws IOException {\n-    if (!untarDir.mkdirs()) {           \n+    if (!untarDir.mkdirs()) {\n       if (!untarDir.isDirectory()) {\n         throw new IOException(\"Mkdirs failed to create \" + untarDir);\n       }\n     }\n \n-    StringBuilder untarCommand \u003d new StringBuilder();\n     boolean gzipped \u003d inFile.toString().endsWith(\"gz\");\n-    if (gzipped) {\n-      untarCommand.append(\" gzip -dc \u0027\");\n-      untarCommand.append(FileUtil.makeShellPath(inFile));\n-      untarCommand.append(\"\u0027 | (\");\n-    } \n-    untarCommand.append(\"cd \u0027\");\n-    untarCommand.append(FileUtil.makeShellPath(untarDir)); \n-    untarCommand.append(\"\u0027 ; \");\n-    untarCommand.append(\"tar -xf \");\n-    \n-    if (gzipped) {\n-      untarCommand.append(\" -)\");\n-    } else {\n-      untarCommand.append(FileUtil.makeShellPath(inFile));\n+    if(Shell.WINDOWS) {\n+      // Tar is not native to Windows. Use simple Java based implementation for \n+      // tests and simple tar archives\n+      unTarUsingJava(inFile, untarDir, gzipped);\n     }\n-    String[] shellCmd \u003d { \"bash\", \"-c\", untarCommand.toString() };\n-    ShellCommandExecutor shexec \u003d new ShellCommandExecutor(shellCmd);\n-    shexec.execute();\n-    int exitcode \u003d shexec.getExitCode();\n-    if (exitcode !\u003d 0) {\n-      throw new IOException(\"Error untarring file \" + inFile + \n-                  \". Tar process exited with exit code \" + exitcode);\n+    else {\n+      // spawn tar utility to untar archive for full fledged unix behavior such \n+      // as resolving symlinks in tar archives\n+      unTarUsingTar(inFile, untarDir, gzipped);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void unTar(File inFile, File untarDir) throws IOException {\n    if (!untarDir.mkdirs()) {\n      if (!untarDir.isDirectory()) {\n        throw new IOException(\"Mkdirs failed to create \" + untarDir);\n      }\n    }\n\n    boolean gzipped \u003d inFile.toString().endsWith(\"gz\");\n    if(Shell.WINDOWS) {\n      // Tar is not native to Windows. Use simple Java based implementation for \n      // tests and simple tar archives\n      unTarUsingJava(inFile, untarDir, gzipped);\n    }\n    else {\n      // spawn tar utility to untar archive for full fledged unix behavior such \n      // as resolving symlinks in tar archives\n      unTarUsingTar(inFile, untarDir, gzipped);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileUtil.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static void unTar(File inFile, File untarDir) throws IOException {\n    if (!untarDir.mkdirs()) {           \n      if (!untarDir.isDirectory()) {\n        throw new IOException(\"Mkdirs failed to create \" + untarDir);\n      }\n    }\n\n    StringBuilder untarCommand \u003d new StringBuilder();\n    boolean gzipped \u003d inFile.toString().endsWith(\"gz\");\n    if (gzipped) {\n      untarCommand.append(\" gzip -dc \u0027\");\n      untarCommand.append(FileUtil.makeShellPath(inFile));\n      untarCommand.append(\"\u0027 | (\");\n    } \n    untarCommand.append(\"cd \u0027\");\n    untarCommand.append(FileUtil.makeShellPath(untarDir)); \n    untarCommand.append(\"\u0027 ; \");\n    untarCommand.append(\"tar -xf \");\n    \n    if (gzipped) {\n      untarCommand.append(\" -)\");\n    } else {\n      untarCommand.append(FileUtil.makeShellPath(inFile));\n    }\n    String[] shellCmd \u003d { \"bash\", \"-c\", untarCommand.toString() };\n    ShellCommandExecutor shexec \u003d new ShellCommandExecutor(shellCmd);\n    shexec.execute();\n    int exitcode \u003d shexec.getExitCode();\n    if (exitcode !\u003d 0) {\n      throw new IOException(\"Error untarring file \" + inFile + \n                  \". Tar process exited with exit code \" + exitcode);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileUtil.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/FileUtil.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileUtil.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static void unTar(File inFile, File untarDir) throws IOException {\n    if (!untarDir.mkdirs()) {           \n      if (!untarDir.isDirectory()) {\n        throw new IOException(\"Mkdirs failed to create \" + untarDir);\n      }\n    }\n\n    StringBuilder untarCommand \u003d new StringBuilder();\n    boolean gzipped \u003d inFile.toString().endsWith(\"gz\");\n    if (gzipped) {\n      untarCommand.append(\" gzip -dc \u0027\");\n      untarCommand.append(FileUtil.makeShellPath(inFile));\n      untarCommand.append(\"\u0027 | (\");\n    } \n    untarCommand.append(\"cd \u0027\");\n    untarCommand.append(FileUtil.makeShellPath(untarDir)); \n    untarCommand.append(\"\u0027 ; \");\n    untarCommand.append(\"tar -xf \");\n    \n    if (gzipped) {\n      untarCommand.append(\" -)\");\n    } else {\n      untarCommand.append(FileUtil.makeShellPath(inFile));\n    }\n    String[] shellCmd \u003d { \"bash\", \"-c\", untarCommand.toString() };\n    ShellCommandExecutor shexec \u003d new ShellCommandExecutor(shellCmd);\n    shexec.execute();\n    int exitcode \u003d shexec.getExitCode();\n    if (exitcode !\u003d 0) {\n      throw new IOException(\"Error untarring file \" + inFile + \n                  \". Tar process exited with exit code \" + exitcode);\n    }\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/fs/FileUtil.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/fs/FileUtil.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/FileUtil.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static void unTar(File inFile, File untarDir) throws IOException {\n    if (!untarDir.mkdirs()) {           \n      if (!untarDir.isDirectory()) {\n        throw new IOException(\"Mkdirs failed to create \" + untarDir);\n      }\n    }\n\n    StringBuilder untarCommand \u003d new StringBuilder();\n    boolean gzipped \u003d inFile.toString().endsWith(\"gz\");\n    if (gzipped) {\n      untarCommand.append(\" gzip -dc \u0027\");\n      untarCommand.append(FileUtil.makeShellPath(inFile));\n      untarCommand.append(\"\u0027 | (\");\n    } \n    untarCommand.append(\"cd \u0027\");\n    untarCommand.append(FileUtil.makeShellPath(untarDir)); \n    untarCommand.append(\"\u0027 ; \");\n    untarCommand.append(\"tar -xf \");\n    \n    if (gzipped) {\n      untarCommand.append(\" -)\");\n    } else {\n      untarCommand.append(FileUtil.makeShellPath(inFile));\n    }\n    String[] shellCmd \u003d { \"bash\", \"-c\", untarCommand.toString() };\n    ShellCommandExecutor shexec \u003d new ShellCommandExecutor(shellCmd);\n    shexec.execute();\n    int exitcode \u003d shexec.getExitCode();\n    if (exitcode !\u003d 0) {\n      throw new IOException(\"Error untarring file \" + inFile + \n                  \". Tar process exited with exit code \" + exitcode);\n    }\n  }",
      "path": "common/src/java/org/apache/hadoop/fs/FileUtil.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/fs/FileUtil.java",
        "newPath": "common/src/java/org/apache/hadoop/fs/FileUtil.java"
      }
    },
    "0485fe23ba76f7d96a198aed00f392fd571124bc": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-6471. StringBuffer -\u003e StringBuilder - conversion of references as necessary. Contributed by Kay Kay.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@926256 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/03/10 12:08 PM",
      "commitName": "0485fe23ba76f7d96a198aed00f392fd571124bc",
      "commitAuthor": "Thomas White",
      "commitDateOld": "13/02/10 4:21 AM",
      "commitNameOld": "fc83909c3f697e725790874a1773707a8ff6b2b4",
      "commitAuthorOld": "Christopher Douglas",
      "daysBetweenCommits": 37.28,
      "commitsBetweenForRepo": 40,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,33 @@\n   public static void unTar(File inFile, File untarDir) throws IOException {\n     if (!untarDir.mkdirs()) {           \n       if (!untarDir.isDirectory()) {\n         throw new IOException(\"Mkdirs failed to create \" + untarDir);\n       }\n     }\n \n-    StringBuffer untarCommand \u003d new StringBuffer();\n+    StringBuilder untarCommand \u003d new StringBuilder();\n     boolean gzipped \u003d inFile.toString().endsWith(\"gz\");\n     if (gzipped) {\n       untarCommand.append(\" gzip -dc \u0027\");\n       untarCommand.append(FileUtil.makeShellPath(inFile));\n       untarCommand.append(\"\u0027 | (\");\n     } \n     untarCommand.append(\"cd \u0027\");\n     untarCommand.append(FileUtil.makeShellPath(untarDir)); \n     untarCommand.append(\"\u0027 ; \");\n     untarCommand.append(\"tar -xf \");\n     \n     if (gzipped) {\n       untarCommand.append(\" -)\");\n     } else {\n       untarCommand.append(FileUtil.makeShellPath(inFile));\n     }\n     String[] shellCmd \u003d { \"bash\", \"-c\", untarCommand.toString() };\n     ShellCommandExecutor shexec \u003d new ShellCommandExecutor(shellCmd);\n     shexec.execute();\n     int exitcode \u003d shexec.getExitCode();\n     if (exitcode !\u003d 0) {\n       throw new IOException(\"Error untarring file \" + inFile + \n                   \". Tar process exited with exit code \" + exitcode);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void unTar(File inFile, File untarDir) throws IOException {\n    if (!untarDir.mkdirs()) {           \n      if (!untarDir.isDirectory()) {\n        throw new IOException(\"Mkdirs failed to create \" + untarDir);\n      }\n    }\n\n    StringBuilder untarCommand \u003d new StringBuilder();\n    boolean gzipped \u003d inFile.toString().endsWith(\"gz\");\n    if (gzipped) {\n      untarCommand.append(\" gzip -dc \u0027\");\n      untarCommand.append(FileUtil.makeShellPath(inFile));\n      untarCommand.append(\"\u0027 | (\");\n    } \n    untarCommand.append(\"cd \u0027\");\n    untarCommand.append(FileUtil.makeShellPath(untarDir)); \n    untarCommand.append(\"\u0027 ; \");\n    untarCommand.append(\"tar -xf \");\n    \n    if (gzipped) {\n      untarCommand.append(\" -)\");\n    } else {\n      untarCommand.append(FileUtil.makeShellPath(inFile));\n    }\n    String[] shellCmd \u003d { \"bash\", \"-c\", untarCommand.toString() };\n    ShellCommandExecutor shexec \u003d new ShellCommandExecutor(shellCmd);\n    shexec.execute();\n    int exitcode \u003d shexec.getExitCode();\n    if (exitcode !\u003d 0) {\n      throw new IOException(\"Error untarring file \" + inFile + \n                  \". Tar process exited with exit code \" + exitcode);\n    }\n  }",
      "path": "src/java/org/apache/hadoop/fs/FileUtil.java",
      "extendedDetails": {}
    },
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-4687 Moving src directories on branch\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/core/branches/HADOOP-4687/core@776174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/05/09 9:20 PM",
      "commitName": "5128a9a453d64bfe1ed978cf9ffed27985eeef36",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,33 @@\n+  public static void unTar(File inFile, File untarDir) throws IOException {\n+    if (!untarDir.mkdirs()) {           \n+      if (!untarDir.isDirectory()) {\n+        throw new IOException(\"Mkdirs failed to create \" + untarDir);\n+      }\n+    }\n+\n+    StringBuffer untarCommand \u003d new StringBuffer();\n+    boolean gzipped \u003d inFile.toString().endsWith(\"gz\");\n+    if (gzipped) {\n+      untarCommand.append(\" gzip -dc \u0027\");\n+      untarCommand.append(FileUtil.makeShellPath(inFile));\n+      untarCommand.append(\"\u0027 | (\");\n+    } \n+    untarCommand.append(\"cd \u0027\");\n+    untarCommand.append(FileUtil.makeShellPath(untarDir)); \n+    untarCommand.append(\"\u0027 ; \");\n+    untarCommand.append(\"tar -xf \");\n+    \n+    if (gzipped) {\n+      untarCommand.append(\" -)\");\n+    } else {\n+      untarCommand.append(FileUtil.makeShellPath(inFile));\n+    }\n+    String[] shellCmd \u003d { \"bash\", \"-c\", untarCommand.toString() };\n+    ShellCommandExecutor shexec \u003d new ShellCommandExecutor(shellCmd);\n+    shexec.execute();\n+    int exitcode \u003d shexec.getExitCode();\n+    if (exitcode !\u003d 0) {\n+      throw new IOException(\"Error untarring file \" + inFile + \n+                  \". Tar process exited with exit code \" + exitcode);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static void unTar(File inFile, File untarDir) throws IOException {\n    if (!untarDir.mkdirs()) {           \n      if (!untarDir.isDirectory()) {\n        throw new IOException(\"Mkdirs failed to create \" + untarDir);\n      }\n    }\n\n    StringBuffer untarCommand \u003d new StringBuffer();\n    boolean gzipped \u003d inFile.toString().endsWith(\"gz\");\n    if (gzipped) {\n      untarCommand.append(\" gzip -dc \u0027\");\n      untarCommand.append(FileUtil.makeShellPath(inFile));\n      untarCommand.append(\"\u0027 | (\");\n    } \n    untarCommand.append(\"cd \u0027\");\n    untarCommand.append(FileUtil.makeShellPath(untarDir)); \n    untarCommand.append(\"\u0027 ; \");\n    untarCommand.append(\"tar -xf \");\n    \n    if (gzipped) {\n      untarCommand.append(\" -)\");\n    } else {\n      untarCommand.append(FileUtil.makeShellPath(inFile));\n    }\n    String[] shellCmd \u003d { \"bash\", \"-c\", untarCommand.toString() };\n    ShellCommandExecutor shexec \u003d new ShellCommandExecutor(shellCmd);\n    shexec.execute();\n    int exitcode \u003d shexec.getExitCode();\n    if (exitcode !\u003d 0) {\n      throw new IOException(\"Error untarring file \" + inFile + \n                  \". Tar process exited with exit code \" + exitcode);\n    }\n  }",
      "path": "src/java/org/apache/hadoop/fs/FileUtil.java"
    }
  }
}