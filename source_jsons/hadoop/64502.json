{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "S3AUtils.java",
  "functionName": "createAwsConf",
  "functionId": "createAwsConf___conf-Configuration__bucket-String__awsServiceIdentifier-String",
  "sourceFilePath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AUtils.java",
  "functionStartLine": 1243,
  "functionEndLine": 1275,
  "numCommitsSeen": 51,
  "timeTaken": 1150,
  "changeHistory": [
    "e02b1023c2f42b6792d2941c1f987ae06259b021"
  ],
  "changeHistoryShort": {
    "e02b1023c2f42b6792d2941c1f987ae06259b021": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e02b1023c2f42b6792d2941c1f987ae06259b021": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-16445. Allow separate custom signing algorithms for S3 and DDB (#1332)\n\n",
      "commitDate": "20/09/19 11:20 PM",
      "commitName": "e02b1023c2f42b6792d2941c1f987ae06259b021",
      "commitAuthor": "Siddharth Seth",
      "diff": "@@ -0,0 +1,33 @@\n+  public static ClientConfiguration createAwsConf(Configuration conf,\n+      String bucket, String awsServiceIdentifier)\n+      throws IOException {\n+    final ClientConfiguration awsConf \u003d new ClientConfiguration();\n+    initConnectionSettings(conf, awsConf);\n+    initProxySupport(conf, bucket, awsConf);\n+    initUserAgent(conf, awsConf);\n+    if (StringUtils.isNotEmpty(awsServiceIdentifier)) {\n+      String configKey \u003d null;\n+      switch (awsServiceIdentifier) {\n+      case AWS_SERVICE_IDENTIFIER_S3:\n+        configKey \u003d SIGNING_ALGORITHM_S3;\n+        break;\n+      case AWS_SERVICE_IDENTIFIER_DDB:\n+        configKey \u003d SIGNING_ALGORITHM_DDB;\n+        break;\n+      case AWS_SERVICE_IDENTIFIER_STS:\n+        configKey \u003d SIGNING_ALGORITHM_STS;\n+        break;\n+      default:\n+        // Nothing to do. The original signer override is already setup\n+      }\n+      if (configKey !\u003d null) {\n+        String signerOverride \u003d conf.getTrimmed(configKey, \"\");\n+        if (!signerOverride.isEmpty()) {\n+          LOG.debug(\"Signer override for {}} \u003d {}\", awsServiceIdentifier,\n+              signerOverride);\n+          awsConf.setSignerOverride(signerOverride);\n+        }\n+      }\n+    }\n+    return awsConf;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static ClientConfiguration createAwsConf(Configuration conf,\n      String bucket, String awsServiceIdentifier)\n      throws IOException {\n    final ClientConfiguration awsConf \u003d new ClientConfiguration();\n    initConnectionSettings(conf, awsConf);\n    initProxySupport(conf, bucket, awsConf);\n    initUserAgent(conf, awsConf);\n    if (StringUtils.isNotEmpty(awsServiceIdentifier)) {\n      String configKey \u003d null;\n      switch (awsServiceIdentifier) {\n      case AWS_SERVICE_IDENTIFIER_S3:\n        configKey \u003d SIGNING_ALGORITHM_S3;\n        break;\n      case AWS_SERVICE_IDENTIFIER_DDB:\n        configKey \u003d SIGNING_ALGORITHM_DDB;\n        break;\n      case AWS_SERVICE_IDENTIFIER_STS:\n        configKey \u003d SIGNING_ALGORITHM_STS;\n        break;\n      default:\n        // Nothing to do. The original signer override is already setup\n      }\n      if (configKey !\u003d null) {\n        String signerOverride \u003d conf.getTrimmed(configKey, \"\");\n        if (!signerOverride.isEmpty()) {\n          LOG.debug(\"Signer override for {}} \u003d {}\", awsServiceIdentifier,\n              signerOverride);\n          awsConf.setSignerOverride(signerOverride);\n        }\n      }\n    }\n    return awsConf;\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AUtils.java"
    }
  }
}