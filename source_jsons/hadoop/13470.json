{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BlockStoragePolicySuite.java",
  "functionName": "createDefaultSuite",
  "functionId": "createDefaultSuite",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockStoragePolicySuite.java",
  "functionStartLine": 49,
  "functionEndLine": 51,
  "numCommitsSeen": 26,
  "timeTaken": 5287,
  "changeHistory": [
    "f4901d07781faee657f5ac2c605183ef34fe7c1a",
    "d65df0f27395792c6e25f5e03b6ba1765e2ba925",
    "15a557fcfec5eceedde9f1597385d5d3b01b2cd7",
    "50887e5b07b6abb20c0edd74211e5612dc7b16da",
    "6ae2a0d048e133b43249c248a75a4d77d9abb80d",
    "7dcad84143a9eef059688570cd0f9cf73747f2de",
    "bb84f1fccb18c6c7373851e05d2451d55e908242",
    "073bbd805c6680f47bbfcc6e8efd708ad729bca4",
    "867f0f141cc935c1f67680533cc22f25b804f720"
  ],
  "changeHistoryShort": {
    "f4901d07781faee657f5ac2c605183ef34fe7c1a": "Ybodychange",
    "d65df0f27395792c6e25f5e03b6ba1765e2ba925": "Ybodychange",
    "15a557fcfec5eceedde9f1597385d5d3b01b2cd7": "Ybodychange",
    "50887e5b07b6abb20c0edd74211e5612dc7b16da": "Ybodychange",
    "6ae2a0d048e133b43249c248a75a4d77d9abb80d": "Ybodychange",
    "7dcad84143a9eef059688570cd0f9cf73747f2de": "Ybodychange",
    "bb84f1fccb18c6c7373851e05d2451d55e908242": "Ybodychange",
    "073bbd805c6680f47bbfcc6e8efd708ad729bca4": "Ymultichange(Ymovefromfile,Yreturntypechange,Ymodifierchange,Ybodychange)",
    "867f0f141cc935c1f67680533cc22f25b804f720": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f4901d07781faee657f5ac2c605183ef34fe7c1a": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-15355. Make the default block storage policy ID configurable. Contributed by Yang Yun.\n",
      "commitDate": "24/05/20 5:29 AM",
      "commitName": "f4901d07781faee657f5ac2c605183ef34fe7c1a",
      "commitAuthor": "Ayush Saxena",
      "commitDateOld": "09/08/19 3:37 PM",
      "commitNameOld": "865021b8c96ae96940ca060faae87452b433d970",
      "commitAuthorOld": "Wei-Chiu Chuang",
      "daysBetweenCommits": 288.58,
      "commitsBetweenForRepo": 1343,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,46 +1,3 @@\n   public static BlockStoragePolicySuite createDefaultSuite() {\n-    final BlockStoragePolicy[] policies \u003d\n-        new BlockStoragePolicy[1 \u003c\u003c ID_BIT_LENGTH];\n-    final byte lazyPersistId \u003d HdfsConstants.MEMORY_STORAGE_POLICY_ID;\n-    policies[lazyPersistId] \u003d new BlockStoragePolicy(lazyPersistId,\n-        HdfsConstants.MEMORY_STORAGE_POLICY_NAME,\n-        new StorageType[]{StorageType.RAM_DISK, StorageType.DISK},\n-        new StorageType[]{StorageType.DISK},\n-        new StorageType[]{StorageType.DISK},\n-        true);    // Cannot be changed on regular files, but inherited.\n-    final byte allssdId \u003d HdfsConstants.ALLSSD_STORAGE_POLICY_ID;\n-    policies[allssdId] \u003d new BlockStoragePolicy(allssdId,\n-        HdfsConstants.ALLSSD_STORAGE_POLICY_NAME,\n-        new StorageType[]{StorageType.SSD},\n-        new StorageType[]{StorageType.DISK},\n-        new StorageType[]{StorageType.DISK});\n-    final byte onessdId \u003d HdfsConstants.ONESSD_STORAGE_POLICY_ID;\n-    policies[onessdId] \u003d new BlockStoragePolicy(onessdId,\n-        HdfsConstants.ONESSD_STORAGE_POLICY_NAME,\n-        new StorageType[]{StorageType.SSD, StorageType.DISK},\n-        new StorageType[]{StorageType.SSD, StorageType.DISK},\n-        new StorageType[]{StorageType.SSD, StorageType.DISK});\n-    final byte hotId \u003d HdfsConstants.HOT_STORAGE_POLICY_ID;\n-    policies[hotId] \u003d new BlockStoragePolicy(hotId,\n-        HdfsConstants.HOT_STORAGE_POLICY_NAME,\n-        new StorageType[]{StorageType.DISK}, StorageType.EMPTY_ARRAY,\n-        new StorageType[]{StorageType.ARCHIVE});\n-    final byte warmId \u003d HdfsConstants.WARM_STORAGE_POLICY_ID;\n-    policies[warmId] \u003d new BlockStoragePolicy(warmId,\n-        HdfsConstants.WARM_STORAGE_POLICY_NAME,\n-        new StorageType[]{StorageType.DISK, StorageType.ARCHIVE},\n-        new StorageType[]{StorageType.DISK, StorageType.ARCHIVE},\n-        new StorageType[]{StorageType.DISK, StorageType.ARCHIVE});\n-    final byte coldId \u003d HdfsConstants.COLD_STORAGE_POLICY_ID;\n-    policies[coldId] \u003d new BlockStoragePolicy(coldId,\n-        HdfsConstants.COLD_STORAGE_POLICY_NAME,\n-        new StorageType[]{StorageType.ARCHIVE}, StorageType.EMPTY_ARRAY,\n-        StorageType.EMPTY_ARRAY);\n-    final byte providedId \u003d HdfsConstants.PROVIDED_STORAGE_POLICY_ID;\n-    policies[providedId] \u003d new BlockStoragePolicy(providedId,\n-      HdfsConstants.PROVIDED_STORAGE_POLICY_NAME,\n-      new StorageType[]{StorageType.PROVIDED, StorageType.DISK},\n-      new StorageType[]{StorageType.PROVIDED, StorageType.DISK},\n-      new StorageType[]{StorageType.PROVIDED, StorageType.DISK});\n-    return new BlockStoragePolicySuite(hotId, policies);\n+    return createDefaultSuite(null);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static BlockStoragePolicySuite createDefaultSuite() {\n    return createDefaultSuite(null);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockStoragePolicySuite.java",
      "extendedDetails": {}
    },
    "d65df0f27395792c6e25f5e03b6ba1765e2ba925": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11190. [READ] Namenode support for data stored in external stores.\n",
      "commitDate": "15/12/17 5:51 PM",
      "commitName": "d65df0f27395792c6e25f5e03b6ba1765e2ba925",
      "commitAuthor": "Virajith Jalaparti",
      "commitDateOld": "11/09/15 10:11 AM",
      "commitNameOld": "15a557fcfec5eceedde9f1597385d5d3b01b2cd7",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 826.36,
      "commitsBetweenForRepo": 5621,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,46 @@\n   public static BlockStoragePolicySuite createDefaultSuite() {\n     final BlockStoragePolicy[] policies \u003d\n         new BlockStoragePolicy[1 \u003c\u003c ID_BIT_LENGTH];\n     final byte lazyPersistId \u003d HdfsConstants.MEMORY_STORAGE_POLICY_ID;\n     policies[lazyPersistId] \u003d new BlockStoragePolicy(lazyPersistId,\n         HdfsConstants.MEMORY_STORAGE_POLICY_NAME,\n         new StorageType[]{StorageType.RAM_DISK, StorageType.DISK},\n         new StorageType[]{StorageType.DISK},\n         new StorageType[]{StorageType.DISK},\n         true);    // Cannot be changed on regular files, but inherited.\n     final byte allssdId \u003d HdfsConstants.ALLSSD_STORAGE_POLICY_ID;\n     policies[allssdId] \u003d new BlockStoragePolicy(allssdId,\n         HdfsConstants.ALLSSD_STORAGE_POLICY_NAME,\n         new StorageType[]{StorageType.SSD},\n         new StorageType[]{StorageType.DISK},\n         new StorageType[]{StorageType.DISK});\n     final byte onessdId \u003d HdfsConstants.ONESSD_STORAGE_POLICY_ID;\n     policies[onessdId] \u003d new BlockStoragePolicy(onessdId,\n         HdfsConstants.ONESSD_STORAGE_POLICY_NAME,\n         new StorageType[]{StorageType.SSD, StorageType.DISK},\n         new StorageType[]{StorageType.SSD, StorageType.DISK},\n         new StorageType[]{StorageType.SSD, StorageType.DISK});\n     final byte hotId \u003d HdfsConstants.HOT_STORAGE_POLICY_ID;\n     policies[hotId] \u003d new BlockStoragePolicy(hotId,\n         HdfsConstants.HOT_STORAGE_POLICY_NAME,\n         new StorageType[]{StorageType.DISK}, StorageType.EMPTY_ARRAY,\n         new StorageType[]{StorageType.ARCHIVE});\n     final byte warmId \u003d HdfsConstants.WARM_STORAGE_POLICY_ID;\n     policies[warmId] \u003d new BlockStoragePolicy(warmId,\n         HdfsConstants.WARM_STORAGE_POLICY_NAME,\n         new StorageType[]{StorageType.DISK, StorageType.ARCHIVE},\n         new StorageType[]{StorageType.DISK, StorageType.ARCHIVE},\n         new StorageType[]{StorageType.DISK, StorageType.ARCHIVE});\n     final byte coldId \u003d HdfsConstants.COLD_STORAGE_POLICY_ID;\n     policies[coldId] \u003d new BlockStoragePolicy(coldId,\n         HdfsConstants.COLD_STORAGE_POLICY_NAME,\n         new StorageType[]{StorageType.ARCHIVE}, StorageType.EMPTY_ARRAY,\n         StorageType.EMPTY_ARRAY);\n+    final byte providedId \u003d HdfsConstants.PROVIDED_STORAGE_POLICY_ID;\n+    policies[providedId] \u003d new BlockStoragePolicy(providedId,\n+      HdfsConstants.PROVIDED_STORAGE_POLICY_NAME,\n+      new StorageType[]{StorageType.PROVIDED, StorageType.DISK},\n+      new StorageType[]{StorageType.PROVIDED, StorageType.DISK},\n+      new StorageType[]{StorageType.PROVIDED, StorageType.DISK});\n     return new BlockStoragePolicySuite(hotId, policies);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static BlockStoragePolicySuite createDefaultSuite() {\n    final BlockStoragePolicy[] policies \u003d\n        new BlockStoragePolicy[1 \u003c\u003c ID_BIT_LENGTH];\n    final byte lazyPersistId \u003d HdfsConstants.MEMORY_STORAGE_POLICY_ID;\n    policies[lazyPersistId] \u003d new BlockStoragePolicy(lazyPersistId,\n        HdfsConstants.MEMORY_STORAGE_POLICY_NAME,\n        new StorageType[]{StorageType.RAM_DISK, StorageType.DISK},\n        new StorageType[]{StorageType.DISK},\n        new StorageType[]{StorageType.DISK},\n        true);    // Cannot be changed on regular files, but inherited.\n    final byte allssdId \u003d HdfsConstants.ALLSSD_STORAGE_POLICY_ID;\n    policies[allssdId] \u003d new BlockStoragePolicy(allssdId,\n        HdfsConstants.ALLSSD_STORAGE_POLICY_NAME,\n        new StorageType[]{StorageType.SSD},\n        new StorageType[]{StorageType.DISK},\n        new StorageType[]{StorageType.DISK});\n    final byte onessdId \u003d HdfsConstants.ONESSD_STORAGE_POLICY_ID;\n    policies[onessdId] \u003d new BlockStoragePolicy(onessdId,\n        HdfsConstants.ONESSD_STORAGE_POLICY_NAME,\n        new StorageType[]{StorageType.SSD, StorageType.DISK},\n        new StorageType[]{StorageType.SSD, StorageType.DISK},\n        new StorageType[]{StorageType.SSD, StorageType.DISK});\n    final byte hotId \u003d HdfsConstants.HOT_STORAGE_POLICY_ID;\n    policies[hotId] \u003d new BlockStoragePolicy(hotId,\n        HdfsConstants.HOT_STORAGE_POLICY_NAME,\n        new StorageType[]{StorageType.DISK}, StorageType.EMPTY_ARRAY,\n        new StorageType[]{StorageType.ARCHIVE});\n    final byte warmId \u003d HdfsConstants.WARM_STORAGE_POLICY_ID;\n    policies[warmId] \u003d new BlockStoragePolicy(warmId,\n        HdfsConstants.WARM_STORAGE_POLICY_NAME,\n        new StorageType[]{StorageType.DISK, StorageType.ARCHIVE},\n        new StorageType[]{StorageType.DISK, StorageType.ARCHIVE},\n        new StorageType[]{StorageType.DISK, StorageType.ARCHIVE});\n    final byte coldId \u003d HdfsConstants.COLD_STORAGE_POLICY_ID;\n    policies[coldId] \u003d new BlockStoragePolicy(coldId,\n        HdfsConstants.COLD_STORAGE_POLICY_NAME,\n        new StorageType[]{StorageType.ARCHIVE}, StorageType.EMPTY_ARRAY,\n        StorageType.EMPTY_ARRAY);\n    final byte providedId \u003d HdfsConstants.PROVIDED_STORAGE_POLICY_ID;\n    policies[providedId] \u003d new BlockStoragePolicy(providedId,\n      HdfsConstants.PROVIDED_STORAGE_POLICY_NAME,\n      new StorageType[]{StorageType.PROVIDED, StorageType.DISK},\n      new StorageType[]{StorageType.PROVIDED, StorageType.DISK},\n      new StorageType[]{StorageType.PROVIDED, StorageType.DISK});\n    return new BlockStoragePolicySuite(hotId, policies);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockStoragePolicySuite.java",
      "extendedDetails": {}
    },
    "15a557fcfec5eceedde9f1597385d5d3b01b2cd7": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9027. Refactor o.a.h.hdfs.DataStreamer#isLazyPersist() method. (Contributed by Mingliang Liu)\n",
      "commitDate": "11/09/15 10:11 AM",
      "commitName": "15a557fcfec5eceedde9f1597385d5d3b01b2cd7",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "25/08/15 1:16 AM",
      "commitNameOld": "eee0d4563c62647cfaaed6605ee713aaf69add78",
      "commitAuthorOld": "yliu",
      "daysBetweenCommits": 17.37,
      "commitsBetweenForRepo": 95,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,40 @@\n   public static BlockStoragePolicySuite createDefaultSuite() {\n     final BlockStoragePolicy[] policies \u003d\n         new BlockStoragePolicy[1 \u003c\u003c ID_BIT_LENGTH];\n-    final byte lazyPersistId \u003d HdfsServerConstants.MEMORY_STORAGE_POLICY_ID;\n+    final byte lazyPersistId \u003d HdfsConstants.MEMORY_STORAGE_POLICY_ID;\n     policies[lazyPersistId] \u003d new BlockStoragePolicy(lazyPersistId,\n         HdfsConstants.MEMORY_STORAGE_POLICY_NAME,\n         new StorageType[]{StorageType.RAM_DISK, StorageType.DISK},\n         new StorageType[]{StorageType.DISK},\n         new StorageType[]{StorageType.DISK},\n         true);    // Cannot be changed on regular files, but inherited.\n-    final byte allssdId \u003d HdfsServerConstants.ALLSSD_STORAGE_POLICY_ID;\n+    final byte allssdId \u003d HdfsConstants.ALLSSD_STORAGE_POLICY_ID;\n     policies[allssdId] \u003d new BlockStoragePolicy(allssdId,\n         HdfsConstants.ALLSSD_STORAGE_POLICY_NAME,\n         new StorageType[]{StorageType.SSD},\n         new StorageType[]{StorageType.DISK},\n         new StorageType[]{StorageType.DISK});\n-    final byte onessdId \u003d HdfsServerConstants.ONESSD_STORAGE_POLICY_ID;\n+    final byte onessdId \u003d HdfsConstants.ONESSD_STORAGE_POLICY_ID;\n     policies[onessdId] \u003d new BlockStoragePolicy(onessdId,\n         HdfsConstants.ONESSD_STORAGE_POLICY_NAME,\n         new StorageType[]{StorageType.SSD, StorageType.DISK},\n         new StorageType[]{StorageType.SSD, StorageType.DISK},\n         new StorageType[]{StorageType.SSD, StorageType.DISK});\n-    final byte hotId \u003d HdfsServerConstants.HOT_STORAGE_POLICY_ID;\n+    final byte hotId \u003d HdfsConstants.HOT_STORAGE_POLICY_ID;\n     policies[hotId] \u003d new BlockStoragePolicy(hotId,\n         HdfsConstants.HOT_STORAGE_POLICY_NAME,\n         new StorageType[]{StorageType.DISK}, StorageType.EMPTY_ARRAY,\n         new StorageType[]{StorageType.ARCHIVE});\n-    final byte warmId \u003d HdfsServerConstants.WARM_STORAGE_POLICY_ID;\n+    final byte warmId \u003d HdfsConstants.WARM_STORAGE_POLICY_ID;\n     policies[warmId] \u003d new BlockStoragePolicy(warmId,\n         HdfsConstants.WARM_STORAGE_POLICY_NAME,\n         new StorageType[]{StorageType.DISK, StorageType.ARCHIVE},\n         new StorageType[]{StorageType.DISK, StorageType.ARCHIVE},\n         new StorageType[]{StorageType.DISK, StorageType.ARCHIVE});\n-    final byte coldId \u003d HdfsServerConstants.COLD_STORAGE_POLICY_ID;\n+    final byte coldId \u003d HdfsConstants.COLD_STORAGE_POLICY_ID;\n     policies[coldId] \u003d new BlockStoragePolicy(coldId,\n         HdfsConstants.COLD_STORAGE_POLICY_NAME,\n         new StorageType[]{StorageType.ARCHIVE}, StorageType.EMPTY_ARRAY,\n         StorageType.EMPTY_ARRAY);\n     return new BlockStoragePolicySuite(hotId, policies);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static BlockStoragePolicySuite createDefaultSuite() {\n    final BlockStoragePolicy[] policies \u003d\n        new BlockStoragePolicy[1 \u003c\u003c ID_BIT_LENGTH];\n    final byte lazyPersistId \u003d HdfsConstants.MEMORY_STORAGE_POLICY_ID;\n    policies[lazyPersistId] \u003d new BlockStoragePolicy(lazyPersistId,\n        HdfsConstants.MEMORY_STORAGE_POLICY_NAME,\n        new StorageType[]{StorageType.RAM_DISK, StorageType.DISK},\n        new StorageType[]{StorageType.DISK},\n        new StorageType[]{StorageType.DISK},\n        true);    // Cannot be changed on regular files, but inherited.\n    final byte allssdId \u003d HdfsConstants.ALLSSD_STORAGE_POLICY_ID;\n    policies[allssdId] \u003d new BlockStoragePolicy(allssdId,\n        HdfsConstants.ALLSSD_STORAGE_POLICY_NAME,\n        new StorageType[]{StorageType.SSD},\n        new StorageType[]{StorageType.DISK},\n        new StorageType[]{StorageType.DISK});\n    final byte onessdId \u003d HdfsConstants.ONESSD_STORAGE_POLICY_ID;\n    policies[onessdId] \u003d new BlockStoragePolicy(onessdId,\n        HdfsConstants.ONESSD_STORAGE_POLICY_NAME,\n        new StorageType[]{StorageType.SSD, StorageType.DISK},\n        new StorageType[]{StorageType.SSD, StorageType.DISK},\n        new StorageType[]{StorageType.SSD, StorageType.DISK});\n    final byte hotId \u003d HdfsConstants.HOT_STORAGE_POLICY_ID;\n    policies[hotId] \u003d new BlockStoragePolicy(hotId,\n        HdfsConstants.HOT_STORAGE_POLICY_NAME,\n        new StorageType[]{StorageType.DISK}, StorageType.EMPTY_ARRAY,\n        new StorageType[]{StorageType.ARCHIVE});\n    final byte warmId \u003d HdfsConstants.WARM_STORAGE_POLICY_ID;\n    policies[warmId] \u003d new BlockStoragePolicy(warmId,\n        HdfsConstants.WARM_STORAGE_POLICY_NAME,\n        new StorageType[]{StorageType.DISK, StorageType.ARCHIVE},\n        new StorageType[]{StorageType.DISK, StorageType.ARCHIVE},\n        new StorageType[]{StorageType.DISK, StorageType.ARCHIVE});\n    final byte coldId \u003d HdfsConstants.COLD_STORAGE_POLICY_ID;\n    policies[coldId] \u003d new BlockStoragePolicy(coldId,\n        HdfsConstants.COLD_STORAGE_POLICY_NAME,\n        new StorageType[]{StorageType.ARCHIVE}, StorageType.EMPTY_ARRAY,\n        StorageType.EMPTY_ARRAY);\n    return new BlockStoragePolicySuite(hotId, policies);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockStoragePolicySuite.java",
      "extendedDetails": {}
    },
    "50887e5b07b6abb20c0edd74211e5612dc7b16da": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8811. Move BlockStoragePolicy name\u0027s constants from HdfsServerConstants.java to HdfsConstants.java (Contributed by Vinayakumar B)\n",
      "commitDate": "28/07/15 11:15 PM",
      "commitName": "50887e5b07b6abb20c0edd74211e5612dc7b16da",
      "commitAuthor": "Vinayakumar B",
      "commitDateOld": "02/05/15 10:03 AM",
      "commitNameOld": "6ae2a0d048e133b43249c248a75a4d77d9abb80d",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 87.55,
      "commitsBetweenForRepo": 691,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,40 @@\n   public static BlockStoragePolicySuite createDefaultSuite() {\n     final BlockStoragePolicy[] policies \u003d\n         new BlockStoragePolicy[1 \u003c\u003c ID_BIT_LENGTH];\n     final byte lazyPersistId \u003d HdfsServerConstants.MEMORY_STORAGE_POLICY_ID;\n     policies[lazyPersistId] \u003d new BlockStoragePolicy(lazyPersistId,\n         HdfsConstants.MEMORY_STORAGE_POLICY_NAME,\n         new StorageType[]{StorageType.RAM_DISK, StorageType.DISK},\n         new StorageType[]{StorageType.DISK},\n         new StorageType[]{StorageType.DISK},\n         true);    // Cannot be changed on regular files, but inherited.\n     final byte allssdId \u003d HdfsServerConstants.ALLSSD_STORAGE_POLICY_ID;\n     policies[allssdId] \u003d new BlockStoragePolicy(allssdId,\n         HdfsConstants.ALLSSD_STORAGE_POLICY_NAME,\n         new StorageType[]{StorageType.SSD},\n         new StorageType[]{StorageType.DISK},\n         new StorageType[]{StorageType.DISK});\n     final byte onessdId \u003d HdfsServerConstants.ONESSD_STORAGE_POLICY_ID;\n     policies[onessdId] \u003d new BlockStoragePolicy(onessdId,\n         HdfsConstants.ONESSD_STORAGE_POLICY_NAME,\n         new StorageType[]{StorageType.SSD, StorageType.DISK},\n         new StorageType[]{StorageType.SSD, StorageType.DISK},\n         new StorageType[]{StorageType.SSD, StorageType.DISK});\n     final byte hotId \u003d HdfsServerConstants.HOT_STORAGE_POLICY_ID;\n     policies[hotId] \u003d new BlockStoragePolicy(hotId,\n-        HdfsServerConstants.HOT_STORAGE_POLICY_NAME,\n+        HdfsConstants.HOT_STORAGE_POLICY_NAME,\n         new StorageType[]{StorageType.DISK}, StorageType.EMPTY_ARRAY,\n         new StorageType[]{StorageType.ARCHIVE});\n     final byte warmId \u003d HdfsServerConstants.WARM_STORAGE_POLICY_ID;\n     policies[warmId] \u003d new BlockStoragePolicy(warmId,\n-        HdfsServerConstants.WARM_STORAGE_POLICY_NAME,\n+        HdfsConstants.WARM_STORAGE_POLICY_NAME,\n         new StorageType[]{StorageType.DISK, StorageType.ARCHIVE},\n         new StorageType[]{StorageType.DISK, StorageType.ARCHIVE},\n         new StorageType[]{StorageType.DISK, StorageType.ARCHIVE});\n     final byte coldId \u003d HdfsServerConstants.COLD_STORAGE_POLICY_ID;\n     policies[coldId] \u003d new BlockStoragePolicy(coldId,\n-        HdfsServerConstants.COLD_STORAGE_POLICY_NAME,\n+        HdfsConstants.COLD_STORAGE_POLICY_NAME,\n         new StorageType[]{StorageType.ARCHIVE}, StorageType.EMPTY_ARRAY,\n         StorageType.EMPTY_ARRAY);\n     return new BlockStoragePolicySuite(hotId, policies);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static BlockStoragePolicySuite createDefaultSuite() {\n    final BlockStoragePolicy[] policies \u003d\n        new BlockStoragePolicy[1 \u003c\u003c ID_BIT_LENGTH];\n    final byte lazyPersistId \u003d HdfsServerConstants.MEMORY_STORAGE_POLICY_ID;\n    policies[lazyPersistId] \u003d new BlockStoragePolicy(lazyPersistId,\n        HdfsConstants.MEMORY_STORAGE_POLICY_NAME,\n        new StorageType[]{StorageType.RAM_DISK, StorageType.DISK},\n        new StorageType[]{StorageType.DISK},\n        new StorageType[]{StorageType.DISK},\n        true);    // Cannot be changed on regular files, but inherited.\n    final byte allssdId \u003d HdfsServerConstants.ALLSSD_STORAGE_POLICY_ID;\n    policies[allssdId] \u003d new BlockStoragePolicy(allssdId,\n        HdfsConstants.ALLSSD_STORAGE_POLICY_NAME,\n        new StorageType[]{StorageType.SSD},\n        new StorageType[]{StorageType.DISK},\n        new StorageType[]{StorageType.DISK});\n    final byte onessdId \u003d HdfsServerConstants.ONESSD_STORAGE_POLICY_ID;\n    policies[onessdId] \u003d new BlockStoragePolicy(onessdId,\n        HdfsConstants.ONESSD_STORAGE_POLICY_NAME,\n        new StorageType[]{StorageType.SSD, StorageType.DISK},\n        new StorageType[]{StorageType.SSD, StorageType.DISK},\n        new StorageType[]{StorageType.SSD, StorageType.DISK});\n    final byte hotId \u003d HdfsServerConstants.HOT_STORAGE_POLICY_ID;\n    policies[hotId] \u003d new BlockStoragePolicy(hotId,\n        HdfsConstants.HOT_STORAGE_POLICY_NAME,\n        new StorageType[]{StorageType.DISK}, StorageType.EMPTY_ARRAY,\n        new StorageType[]{StorageType.ARCHIVE});\n    final byte warmId \u003d HdfsServerConstants.WARM_STORAGE_POLICY_ID;\n    policies[warmId] \u003d new BlockStoragePolicy(warmId,\n        HdfsConstants.WARM_STORAGE_POLICY_NAME,\n        new StorageType[]{StorageType.DISK, StorageType.ARCHIVE},\n        new StorageType[]{StorageType.DISK, StorageType.ARCHIVE},\n        new StorageType[]{StorageType.DISK, StorageType.ARCHIVE});\n    final byte coldId \u003d HdfsServerConstants.COLD_STORAGE_POLICY_ID;\n    policies[coldId] \u003d new BlockStoragePolicy(coldId,\n        HdfsConstants.COLD_STORAGE_POLICY_NAME,\n        new StorageType[]{StorageType.ARCHIVE}, StorageType.EMPTY_ARRAY,\n        StorageType.EMPTY_ARRAY);\n    return new BlockStoragePolicySuite(hotId, policies);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockStoragePolicySuite.java",
      "extendedDetails": {}
    },
    "6ae2a0d048e133b43249c248a75a4d77d9abb80d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8249. Separate HdfsConstants into the client and the server side class. Contributed by Haohui Mai.\n",
      "commitDate": "02/05/15 10:03 AM",
      "commitName": "6ae2a0d048e133b43249c248a75a4d77d9abb80d",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "20/04/15 12:36 AM",
      "commitNameOld": "5c97db07fb306842f49d73a67a90cecec19a7833",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 12.39,
      "commitsBetweenForRepo": 126,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,40 @@\n   public static BlockStoragePolicySuite createDefaultSuite() {\n     final BlockStoragePolicy[] policies \u003d\n         new BlockStoragePolicy[1 \u003c\u003c ID_BIT_LENGTH];\n-    final byte lazyPersistId \u003d HdfsConstants.MEMORY_STORAGE_POLICY_ID;\n+    final byte lazyPersistId \u003d HdfsServerConstants.MEMORY_STORAGE_POLICY_ID;\n     policies[lazyPersistId] \u003d new BlockStoragePolicy(lazyPersistId,\n         HdfsConstants.MEMORY_STORAGE_POLICY_NAME,\n         new StorageType[]{StorageType.RAM_DISK, StorageType.DISK},\n         new StorageType[]{StorageType.DISK},\n         new StorageType[]{StorageType.DISK},\n         true);    // Cannot be changed on regular files, but inherited.\n-    final byte allssdId \u003d HdfsConstants.ALLSSD_STORAGE_POLICY_ID;\n+    final byte allssdId \u003d HdfsServerConstants.ALLSSD_STORAGE_POLICY_ID;\n     policies[allssdId] \u003d new BlockStoragePolicy(allssdId,\n         HdfsConstants.ALLSSD_STORAGE_POLICY_NAME,\n         new StorageType[]{StorageType.SSD},\n         new StorageType[]{StorageType.DISK},\n         new StorageType[]{StorageType.DISK});\n-    final byte onessdId \u003d HdfsConstants.ONESSD_STORAGE_POLICY_ID;\n+    final byte onessdId \u003d HdfsServerConstants.ONESSD_STORAGE_POLICY_ID;\n     policies[onessdId] \u003d new BlockStoragePolicy(onessdId,\n         HdfsConstants.ONESSD_STORAGE_POLICY_NAME,\n         new StorageType[]{StorageType.SSD, StorageType.DISK},\n         new StorageType[]{StorageType.SSD, StorageType.DISK},\n         new StorageType[]{StorageType.SSD, StorageType.DISK});\n-    final byte hotId \u003d HdfsConstants.HOT_STORAGE_POLICY_ID;\n+    final byte hotId \u003d HdfsServerConstants.HOT_STORAGE_POLICY_ID;\n     policies[hotId] \u003d new BlockStoragePolicy(hotId,\n-        HdfsConstants.HOT_STORAGE_POLICY_NAME,\n+        HdfsServerConstants.HOT_STORAGE_POLICY_NAME,\n         new StorageType[]{StorageType.DISK}, StorageType.EMPTY_ARRAY,\n         new StorageType[]{StorageType.ARCHIVE});\n-    final byte warmId \u003d HdfsConstants.WARM_STORAGE_POLICY_ID;\n+    final byte warmId \u003d HdfsServerConstants.WARM_STORAGE_POLICY_ID;\n     policies[warmId] \u003d new BlockStoragePolicy(warmId,\n-        HdfsConstants.WARM_STORAGE_POLICY_NAME,\n+        HdfsServerConstants.WARM_STORAGE_POLICY_NAME,\n         new StorageType[]{StorageType.DISK, StorageType.ARCHIVE},\n         new StorageType[]{StorageType.DISK, StorageType.ARCHIVE},\n         new StorageType[]{StorageType.DISK, StorageType.ARCHIVE});\n-    final byte coldId \u003d HdfsConstants.COLD_STORAGE_POLICY_ID;\n+    final byte coldId \u003d HdfsServerConstants.COLD_STORAGE_POLICY_ID;\n     policies[coldId] \u003d new BlockStoragePolicy(coldId,\n-        HdfsConstants.COLD_STORAGE_POLICY_NAME,\n+        HdfsServerConstants.COLD_STORAGE_POLICY_NAME,\n         new StorageType[]{StorageType.ARCHIVE}, StorageType.EMPTY_ARRAY,\n         StorageType.EMPTY_ARRAY);\n     return new BlockStoragePolicySuite(hotId, policies);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static BlockStoragePolicySuite createDefaultSuite() {\n    final BlockStoragePolicy[] policies \u003d\n        new BlockStoragePolicy[1 \u003c\u003c ID_BIT_LENGTH];\n    final byte lazyPersistId \u003d HdfsServerConstants.MEMORY_STORAGE_POLICY_ID;\n    policies[lazyPersistId] \u003d new BlockStoragePolicy(lazyPersistId,\n        HdfsConstants.MEMORY_STORAGE_POLICY_NAME,\n        new StorageType[]{StorageType.RAM_DISK, StorageType.DISK},\n        new StorageType[]{StorageType.DISK},\n        new StorageType[]{StorageType.DISK},\n        true);    // Cannot be changed on regular files, but inherited.\n    final byte allssdId \u003d HdfsServerConstants.ALLSSD_STORAGE_POLICY_ID;\n    policies[allssdId] \u003d new BlockStoragePolicy(allssdId,\n        HdfsConstants.ALLSSD_STORAGE_POLICY_NAME,\n        new StorageType[]{StorageType.SSD},\n        new StorageType[]{StorageType.DISK},\n        new StorageType[]{StorageType.DISK});\n    final byte onessdId \u003d HdfsServerConstants.ONESSD_STORAGE_POLICY_ID;\n    policies[onessdId] \u003d new BlockStoragePolicy(onessdId,\n        HdfsConstants.ONESSD_STORAGE_POLICY_NAME,\n        new StorageType[]{StorageType.SSD, StorageType.DISK},\n        new StorageType[]{StorageType.SSD, StorageType.DISK},\n        new StorageType[]{StorageType.SSD, StorageType.DISK});\n    final byte hotId \u003d HdfsServerConstants.HOT_STORAGE_POLICY_ID;\n    policies[hotId] \u003d new BlockStoragePolicy(hotId,\n        HdfsServerConstants.HOT_STORAGE_POLICY_NAME,\n        new StorageType[]{StorageType.DISK}, StorageType.EMPTY_ARRAY,\n        new StorageType[]{StorageType.ARCHIVE});\n    final byte warmId \u003d HdfsServerConstants.WARM_STORAGE_POLICY_ID;\n    policies[warmId] \u003d new BlockStoragePolicy(warmId,\n        HdfsServerConstants.WARM_STORAGE_POLICY_NAME,\n        new StorageType[]{StorageType.DISK, StorageType.ARCHIVE},\n        new StorageType[]{StorageType.DISK, StorageType.ARCHIVE},\n        new StorageType[]{StorageType.DISK, StorageType.ARCHIVE});\n    final byte coldId \u003d HdfsServerConstants.COLD_STORAGE_POLICY_ID;\n    policies[coldId] \u003d new BlockStoragePolicy(coldId,\n        HdfsServerConstants.COLD_STORAGE_POLICY_NAME,\n        new StorageType[]{StorageType.ARCHIVE}, StorageType.EMPTY_ARRAY,\n        StorageType.EMPTY_ARRAY);\n    return new BlockStoragePolicySuite(hotId, policies);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockStoragePolicySuite.java",
      "extendedDetails": {}
    },
    "7dcad84143a9eef059688570cd0f9cf73747f2de": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7228. Add an SSD policy into the default BlockStoragePolicySuite. Contributed by Jing Zhao.\n",
      "commitDate": "14/10/14 10:22 AM",
      "commitName": "7dcad84143a9eef059688570cd0f9cf73747f2de",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "29/09/14 10:27 PM",
      "commitNameOld": "bb84f1fccb18c6c7373851e05d2451d55e908242",
      "commitAuthorOld": "arp",
      "daysBetweenCommits": 14.5,
      "commitsBetweenForRepo": 134,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,40 @@\n   public static BlockStoragePolicySuite createDefaultSuite() {\n     final BlockStoragePolicy[] policies \u003d\n         new BlockStoragePolicy[1 \u003c\u003c ID_BIT_LENGTH];\n-    final byte lazyPersistId \u003d 15;\n-    policies[lazyPersistId] \u003d new BlockStoragePolicy(lazyPersistId, \"LAZY_PERSIST\",\n+    final byte lazyPersistId \u003d HdfsConstants.MEMORY_STORAGE_POLICY_ID;\n+    policies[lazyPersistId] \u003d new BlockStoragePolicy(lazyPersistId,\n+        HdfsConstants.MEMORY_STORAGE_POLICY_NAME,\n         new StorageType[]{StorageType.RAM_DISK, StorageType.DISK},\n         new StorageType[]{StorageType.DISK},\n         new StorageType[]{StorageType.DISK},\n         true);    // Cannot be changed on regular files, but inherited.\n-    final byte hotId \u003d 12;\n-    policies[hotId] \u003d new BlockStoragePolicy(hotId, \"HOT\",\n+    final byte allssdId \u003d HdfsConstants.ALLSSD_STORAGE_POLICY_ID;\n+    policies[allssdId] \u003d new BlockStoragePolicy(allssdId,\n+        HdfsConstants.ALLSSD_STORAGE_POLICY_NAME,\n+        new StorageType[]{StorageType.SSD},\n+        new StorageType[]{StorageType.DISK},\n+        new StorageType[]{StorageType.DISK});\n+    final byte onessdId \u003d HdfsConstants.ONESSD_STORAGE_POLICY_ID;\n+    policies[onessdId] \u003d new BlockStoragePolicy(onessdId,\n+        HdfsConstants.ONESSD_STORAGE_POLICY_NAME,\n+        new StorageType[]{StorageType.SSD, StorageType.DISK},\n+        new StorageType[]{StorageType.SSD, StorageType.DISK},\n+        new StorageType[]{StorageType.SSD, StorageType.DISK});\n+    final byte hotId \u003d HdfsConstants.HOT_STORAGE_POLICY_ID;\n+    policies[hotId] \u003d new BlockStoragePolicy(hotId,\n+        HdfsConstants.HOT_STORAGE_POLICY_NAME,\n         new StorageType[]{StorageType.DISK}, StorageType.EMPTY_ARRAY,\n         new StorageType[]{StorageType.ARCHIVE});\n-    final byte warmId \u003d 8;\n-    policies[warmId] \u003d new BlockStoragePolicy(warmId, \"WARM\",\n+    final byte warmId \u003d HdfsConstants.WARM_STORAGE_POLICY_ID;\n+    policies[warmId] \u003d new BlockStoragePolicy(warmId,\n+        HdfsConstants.WARM_STORAGE_POLICY_NAME,\n         new StorageType[]{StorageType.DISK, StorageType.ARCHIVE},\n         new StorageType[]{StorageType.DISK, StorageType.ARCHIVE},\n         new StorageType[]{StorageType.DISK, StorageType.ARCHIVE});\n-    final byte coldId \u003d 4;\n-    policies[coldId] \u003d new BlockStoragePolicy(coldId, \"COLD\",\n+    final byte coldId \u003d HdfsConstants.COLD_STORAGE_POLICY_ID;\n+    policies[coldId] \u003d new BlockStoragePolicy(coldId,\n+        HdfsConstants.COLD_STORAGE_POLICY_NAME,\n         new StorageType[]{StorageType.ARCHIVE}, StorageType.EMPTY_ARRAY,\n         StorageType.EMPTY_ARRAY);\n     return new BlockStoragePolicySuite(hotId, policies);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static BlockStoragePolicySuite createDefaultSuite() {\n    final BlockStoragePolicy[] policies \u003d\n        new BlockStoragePolicy[1 \u003c\u003c ID_BIT_LENGTH];\n    final byte lazyPersistId \u003d HdfsConstants.MEMORY_STORAGE_POLICY_ID;\n    policies[lazyPersistId] \u003d new BlockStoragePolicy(lazyPersistId,\n        HdfsConstants.MEMORY_STORAGE_POLICY_NAME,\n        new StorageType[]{StorageType.RAM_DISK, StorageType.DISK},\n        new StorageType[]{StorageType.DISK},\n        new StorageType[]{StorageType.DISK},\n        true);    // Cannot be changed on regular files, but inherited.\n    final byte allssdId \u003d HdfsConstants.ALLSSD_STORAGE_POLICY_ID;\n    policies[allssdId] \u003d new BlockStoragePolicy(allssdId,\n        HdfsConstants.ALLSSD_STORAGE_POLICY_NAME,\n        new StorageType[]{StorageType.SSD},\n        new StorageType[]{StorageType.DISK},\n        new StorageType[]{StorageType.DISK});\n    final byte onessdId \u003d HdfsConstants.ONESSD_STORAGE_POLICY_ID;\n    policies[onessdId] \u003d new BlockStoragePolicy(onessdId,\n        HdfsConstants.ONESSD_STORAGE_POLICY_NAME,\n        new StorageType[]{StorageType.SSD, StorageType.DISK},\n        new StorageType[]{StorageType.SSD, StorageType.DISK},\n        new StorageType[]{StorageType.SSD, StorageType.DISK});\n    final byte hotId \u003d HdfsConstants.HOT_STORAGE_POLICY_ID;\n    policies[hotId] \u003d new BlockStoragePolicy(hotId,\n        HdfsConstants.HOT_STORAGE_POLICY_NAME,\n        new StorageType[]{StorageType.DISK}, StorageType.EMPTY_ARRAY,\n        new StorageType[]{StorageType.ARCHIVE});\n    final byte warmId \u003d HdfsConstants.WARM_STORAGE_POLICY_ID;\n    policies[warmId] \u003d new BlockStoragePolicy(warmId,\n        HdfsConstants.WARM_STORAGE_POLICY_NAME,\n        new StorageType[]{StorageType.DISK, StorageType.ARCHIVE},\n        new StorageType[]{StorageType.DISK, StorageType.ARCHIVE},\n        new StorageType[]{StorageType.DISK, StorageType.ARCHIVE});\n    final byte coldId \u003d HdfsConstants.COLD_STORAGE_POLICY_ID;\n    policies[coldId] \u003d new BlockStoragePolicy(coldId,\n        HdfsConstants.COLD_STORAGE_POLICY_NAME,\n        new StorageType[]{StorageType.ARCHIVE}, StorageType.EMPTY_ARRAY,\n        StorageType.EMPTY_ARRAY);\n    return new BlockStoragePolicySuite(hotId, policies);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockStoragePolicySuite.java",
      "extendedDetails": {}
    },
    "bb84f1fccb18c6c7373851e05d2451d55e908242": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7159. Use block storage policy to set lazy persist preference. (Arpit Agarwal)\n",
      "commitDate": "29/09/14 10:27 PM",
      "commitName": "bb84f1fccb18c6c7373851e05d2451d55e908242",
      "commitAuthor": "arp",
      "commitDateOld": "24/09/14 10:05 AM",
      "commitNameOld": "073bbd805c6680f47bbfcc6e8efd708ad729bca4",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 5.52,
      "commitsBetweenForRepo": 69,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,24 @@\n   public static BlockStoragePolicySuite createDefaultSuite() {\n     final BlockStoragePolicy[] policies \u003d\n         new BlockStoragePolicy[1 \u003c\u003c ID_BIT_LENGTH];\n+    final byte lazyPersistId \u003d 15;\n+    policies[lazyPersistId] \u003d new BlockStoragePolicy(lazyPersistId, \"LAZY_PERSIST\",\n+        new StorageType[]{StorageType.RAM_DISK, StorageType.DISK},\n+        new StorageType[]{StorageType.DISK},\n+        new StorageType[]{StorageType.DISK},\n+        true);    // Cannot be changed on regular files, but inherited.\n     final byte hotId \u003d 12;\n     policies[hotId] \u003d new BlockStoragePolicy(hotId, \"HOT\",\n         new StorageType[]{StorageType.DISK}, StorageType.EMPTY_ARRAY,\n         new StorageType[]{StorageType.ARCHIVE});\n     final byte warmId \u003d 8;\n     policies[warmId] \u003d new BlockStoragePolicy(warmId, \"WARM\",\n         new StorageType[]{StorageType.DISK, StorageType.ARCHIVE},\n         new StorageType[]{StorageType.DISK, StorageType.ARCHIVE},\n         new StorageType[]{StorageType.DISK, StorageType.ARCHIVE});\n     final byte coldId \u003d 4;\n     policies[coldId] \u003d new BlockStoragePolicy(coldId, \"COLD\",\n         new StorageType[]{StorageType.ARCHIVE}, StorageType.EMPTY_ARRAY,\n         StorageType.EMPTY_ARRAY);\n     return new BlockStoragePolicySuite(hotId, policies);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static BlockStoragePolicySuite createDefaultSuite() {\n    final BlockStoragePolicy[] policies \u003d\n        new BlockStoragePolicy[1 \u003c\u003c ID_BIT_LENGTH];\n    final byte lazyPersistId \u003d 15;\n    policies[lazyPersistId] \u003d new BlockStoragePolicy(lazyPersistId, \"LAZY_PERSIST\",\n        new StorageType[]{StorageType.RAM_DISK, StorageType.DISK},\n        new StorageType[]{StorageType.DISK},\n        new StorageType[]{StorageType.DISK},\n        true);    // Cannot be changed on regular files, but inherited.\n    final byte hotId \u003d 12;\n    policies[hotId] \u003d new BlockStoragePolicy(hotId, \"HOT\",\n        new StorageType[]{StorageType.DISK}, StorageType.EMPTY_ARRAY,\n        new StorageType[]{StorageType.ARCHIVE});\n    final byte warmId \u003d 8;\n    policies[warmId] \u003d new BlockStoragePolicy(warmId, \"WARM\",\n        new StorageType[]{StorageType.DISK, StorageType.ARCHIVE},\n        new StorageType[]{StorageType.DISK, StorageType.ARCHIVE},\n        new StorageType[]{StorageType.DISK, StorageType.ARCHIVE});\n    final byte coldId \u003d 4;\n    policies[coldId] \u003d new BlockStoragePolicy(coldId, \"COLD\",\n        new StorageType[]{StorageType.ARCHIVE}, StorageType.EMPTY_ARRAY,\n        StorageType.EMPTY_ARRAY);\n    return new BlockStoragePolicySuite(hotId, policies);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockStoragePolicySuite.java",
      "extendedDetails": {}
    },
    "073bbd805c6680f47bbfcc6e8efd708ad729bca4": {
      "type": "Ymultichange(Ymovefromfile,Yreturntypechange,Ymodifierchange,Ybodychange)",
      "commitMessage": "HDFS-7081. Add new DistributedFileSystem API for getting all the existing storage policies. Contributed by Jing Zhao.\n",
      "commitDate": "24/09/14 10:05 AM",
      "commitName": "073bbd805c6680f47bbfcc6e8efd708ad729bca4",
      "commitAuthor": "Jing Zhao",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-7081. Add new DistributedFileSystem API for getting all the existing storage policies. Contributed by Jing Zhao.\n",
          "commitDate": "24/09/14 10:05 AM",
          "commitName": "073bbd805c6680f47bbfcc6e8efd708ad729bca4",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "24/09/14 9:09 AM",
          "commitNameOld": "7af4c3888bf7be0822dc880170e5e3d09e9280f1",
          "commitAuthorOld": "Jason Lowe",
          "daysBetweenCommits": 0.04,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,18 @@\n-  private static Suite createDefaultSuite() {\n-    final BlockStoragePolicy[] policies \u003d new BlockStoragePolicy[1 \u003c\u003c ID_BIT_LENGTH];\n-    final StorageType[] storageTypes \u003d {StorageType.DISK};\n-    final byte defaultPolicyId \u003d 12;\n-    policies[defaultPolicyId] \u003d new BlockStoragePolicy(defaultPolicyId, \"HOT\",\n-        storageTypes, StorageType.EMPTY_ARRAY, StorageType.EMPTY_ARRAY);\n-    return new Suite(defaultPolicyId, policies);\n+  public static BlockStoragePolicySuite createDefaultSuite() {\n+    final BlockStoragePolicy[] policies \u003d\n+        new BlockStoragePolicy[1 \u003c\u003c ID_BIT_LENGTH];\n+    final byte hotId \u003d 12;\n+    policies[hotId] \u003d new BlockStoragePolicy(hotId, \"HOT\",\n+        new StorageType[]{StorageType.DISK}, StorageType.EMPTY_ARRAY,\n+        new StorageType[]{StorageType.ARCHIVE});\n+    final byte warmId \u003d 8;\n+    policies[warmId] \u003d new BlockStoragePolicy(warmId, \"WARM\",\n+        new StorageType[]{StorageType.DISK, StorageType.ARCHIVE},\n+        new StorageType[]{StorageType.DISK, StorageType.ARCHIVE},\n+        new StorageType[]{StorageType.DISK, StorageType.ARCHIVE});\n+    final byte coldId \u003d 4;\n+    policies[coldId] \u003d new BlockStoragePolicy(coldId, \"COLD\",\n+        new StorageType[]{StorageType.ARCHIVE}, StorageType.EMPTY_ARRAY,\n+        StorageType.EMPTY_ARRAY);\n+    return new BlockStoragePolicySuite(hotId, policies);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static BlockStoragePolicySuite createDefaultSuite() {\n    final BlockStoragePolicy[] policies \u003d\n        new BlockStoragePolicy[1 \u003c\u003c ID_BIT_LENGTH];\n    final byte hotId \u003d 12;\n    policies[hotId] \u003d new BlockStoragePolicy(hotId, \"HOT\",\n        new StorageType[]{StorageType.DISK}, StorageType.EMPTY_ARRAY,\n        new StorageType[]{StorageType.ARCHIVE});\n    final byte warmId \u003d 8;\n    policies[warmId] \u003d new BlockStoragePolicy(warmId, \"WARM\",\n        new StorageType[]{StorageType.DISK, StorageType.ARCHIVE},\n        new StorageType[]{StorageType.DISK, StorageType.ARCHIVE},\n        new StorageType[]{StorageType.DISK, StorageType.ARCHIVE});\n    final byte coldId \u003d 4;\n    policies[coldId] \u003d new BlockStoragePolicy(coldId, \"COLD\",\n        new StorageType[]{StorageType.ARCHIVE}, StorageType.EMPTY_ARRAY,\n        StorageType.EMPTY_ARRAY);\n    return new BlockStoragePolicySuite(hotId, policies);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockStoragePolicySuite.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/BlockStoragePolicy.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockStoragePolicySuite.java",
            "oldMethodName": "createDefaultSuite",
            "newMethodName": "createDefaultSuite"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-7081. Add new DistributedFileSystem API for getting all the existing storage policies. Contributed by Jing Zhao.\n",
          "commitDate": "24/09/14 10:05 AM",
          "commitName": "073bbd805c6680f47bbfcc6e8efd708ad729bca4",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "24/09/14 9:09 AM",
          "commitNameOld": "7af4c3888bf7be0822dc880170e5e3d09e9280f1",
          "commitAuthorOld": "Jason Lowe",
          "daysBetweenCommits": 0.04,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,18 @@\n-  private static Suite createDefaultSuite() {\n-    final BlockStoragePolicy[] policies \u003d new BlockStoragePolicy[1 \u003c\u003c ID_BIT_LENGTH];\n-    final StorageType[] storageTypes \u003d {StorageType.DISK};\n-    final byte defaultPolicyId \u003d 12;\n-    policies[defaultPolicyId] \u003d new BlockStoragePolicy(defaultPolicyId, \"HOT\",\n-        storageTypes, StorageType.EMPTY_ARRAY, StorageType.EMPTY_ARRAY);\n-    return new Suite(defaultPolicyId, policies);\n+  public static BlockStoragePolicySuite createDefaultSuite() {\n+    final BlockStoragePolicy[] policies \u003d\n+        new BlockStoragePolicy[1 \u003c\u003c ID_BIT_LENGTH];\n+    final byte hotId \u003d 12;\n+    policies[hotId] \u003d new BlockStoragePolicy(hotId, \"HOT\",\n+        new StorageType[]{StorageType.DISK}, StorageType.EMPTY_ARRAY,\n+        new StorageType[]{StorageType.ARCHIVE});\n+    final byte warmId \u003d 8;\n+    policies[warmId] \u003d new BlockStoragePolicy(warmId, \"WARM\",\n+        new StorageType[]{StorageType.DISK, StorageType.ARCHIVE},\n+        new StorageType[]{StorageType.DISK, StorageType.ARCHIVE},\n+        new StorageType[]{StorageType.DISK, StorageType.ARCHIVE});\n+    final byte coldId \u003d 4;\n+    policies[coldId] \u003d new BlockStoragePolicy(coldId, \"COLD\",\n+        new StorageType[]{StorageType.ARCHIVE}, StorageType.EMPTY_ARRAY,\n+        StorageType.EMPTY_ARRAY);\n+    return new BlockStoragePolicySuite(hotId, policies);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static BlockStoragePolicySuite createDefaultSuite() {\n    final BlockStoragePolicy[] policies \u003d\n        new BlockStoragePolicy[1 \u003c\u003c ID_BIT_LENGTH];\n    final byte hotId \u003d 12;\n    policies[hotId] \u003d new BlockStoragePolicy(hotId, \"HOT\",\n        new StorageType[]{StorageType.DISK}, StorageType.EMPTY_ARRAY,\n        new StorageType[]{StorageType.ARCHIVE});\n    final byte warmId \u003d 8;\n    policies[warmId] \u003d new BlockStoragePolicy(warmId, \"WARM\",\n        new StorageType[]{StorageType.DISK, StorageType.ARCHIVE},\n        new StorageType[]{StorageType.DISK, StorageType.ARCHIVE},\n        new StorageType[]{StorageType.DISK, StorageType.ARCHIVE});\n    final byte coldId \u003d 4;\n    policies[coldId] \u003d new BlockStoragePolicy(coldId, \"COLD\",\n        new StorageType[]{StorageType.ARCHIVE}, StorageType.EMPTY_ARRAY,\n        StorageType.EMPTY_ARRAY);\n    return new BlockStoragePolicySuite(hotId, policies);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockStoragePolicySuite.java",
          "extendedDetails": {
            "oldValue": "Suite",
            "newValue": "BlockStoragePolicySuite"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-7081. Add new DistributedFileSystem API for getting all the existing storage policies. Contributed by Jing Zhao.\n",
          "commitDate": "24/09/14 10:05 AM",
          "commitName": "073bbd805c6680f47bbfcc6e8efd708ad729bca4",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "24/09/14 9:09 AM",
          "commitNameOld": "7af4c3888bf7be0822dc880170e5e3d09e9280f1",
          "commitAuthorOld": "Jason Lowe",
          "daysBetweenCommits": 0.04,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,18 @@\n-  private static Suite createDefaultSuite() {\n-    final BlockStoragePolicy[] policies \u003d new BlockStoragePolicy[1 \u003c\u003c ID_BIT_LENGTH];\n-    final StorageType[] storageTypes \u003d {StorageType.DISK};\n-    final byte defaultPolicyId \u003d 12;\n-    policies[defaultPolicyId] \u003d new BlockStoragePolicy(defaultPolicyId, \"HOT\",\n-        storageTypes, StorageType.EMPTY_ARRAY, StorageType.EMPTY_ARRAY);\n-    return new Suite(defaultPolicyId, policies);\n+  public static BlockStoragePolicySuite createDefaultSuite() {\n+    final BlockStoragePolicy[] policies \u003d\n+        new BlockStoragePolicy[1 \u003c\u003c ID_BIT_LENGTH];\n+    final byte hotId \u003d 12;\n+    policies[hotId] \u003d new BlockStoragePolicy(hotId, \"HOT\",\n+        new StorageType[]{StorageType.DISK}, StorageType.EMPTY_ARRAY,\n+        new StorageType[]{StorageType.ARCHIVE});\n+    final byte warmId \u003d 8;\n+    policies[warmId] \u003d new BlockStoragePolicy(warmId, \"WARM\",\n+        new StorageType[]{StorageType.DISK, StorageType.ARCHIVE},\n+        new StorageType[]{StorageType.DISK, StorageType.ARCHIVE},\n+        new StorageType[]{StorageType.DISK, StorageType.ARCHIVE});\n+    final byte coldId \u003d 4;\n+    policies[coldId] \u003d new BlockStoragePolicy(coldId, \"COLD\",\n+        new StorageType[]{StorageType.ARCHIVE}, StorageType.EMPTY_ARRAY,\n+        StorageType.EMPTY_ARRAY);\n+    return new BlockStoragePolicySuite(hotId, policies);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static BlockStoragePolicySuite createDefaultSuite() {\n    final BlockStoragePolicy[] policies \u003d\n        new BlockStoragePolicy[1 \u003c\u003c ID_BIT_LENGTH];\n    final byte hotId \u003d 12;\n    policies[hotId] \u003d new BlockStoragePolicy(hotId, \"HOT\",\n        new StorageType[]{StorageType.DISK}, StorageType.EMPTY_ARRAY,\n        new StorageType[]{StorageType.ARCHIVE});\n    final byte warmId \u003d 8;\n    policies[warmId] \u003d new BlockStoragePolicy(warmId, \"WARM\",\n        new StorageType[]{StorageType.DISK, StorageType.ARCHIVE},\n        new StorageType[]{StorageType.DISK, StorageType.ARCHIVE},\n        new StorageType[]{StorageType.DISK, StorageType.ARCHIVE});\n    final byte coldId \u003d 4;\n    policies[coldId] \u003d new BlockStoragePolicy(coldId, \"COLD\",\n        new StorageType[]{StorageType.ARCHIVE}, StorageType.EMPTY_ARRAY,\n        StorageType.EMPTY_ARRAY);\n    return new BlockStoragePolicySuite(hotId, policies);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockStoragePolicySuite.java",
          "extendedDetails": {
            "oldValue": "[private, static]",
            "newValue": "[public, static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-7081. Add new DistributedFileSystem API for getting all the existing storage policies. Contributed by Jing Zhao.\n",
          "commitDate": "24/09/14 10:05 AM",
          "commitName": "073bbd805c6680f47bbfcc6e8efd708ad729bca4",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "24/09/14 9:09 AM",
          "commitNameOld": "7af4c3888bf7be0822dc880170e5e3d09e9280f1",
          "commitAuthorOld": "Jason Lowe",
          "daysBetweenCommits": 0.04,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,18 @@\n-  private static Suite createDefaultSuite() {\n-    final BlockStoragePolicy[] policies \u003d new BlockStoragePolicy[1 \u003c\u003c ID_BIT_LENGTH];\n-    final StorageType[] storageTypes \u003d {StorageType.DISK};\n-    final byte defaultPolicyId \u003d 12;\n-    policies[defaultPolicyId] \u003d new BlockStoragePolicy(defaultPolicyId, \"HOT\",\n-        storageTypes, StorageType.EMPTY_ARRAY, StorageType.EMPTY_ARRAY);\n-    return new Suite(defaultPolicyId, policies);\n+  public static BlockStoragePolicySuite createDefaultSuite() {\n+    final BlockStoragePolicy[] policies \u003d\n+        new BlockStoragePolicy[1 \u003c\u003c ID_BIT_LENGTH];\n+    final byte hotId \u003d 12;\n+    policies[hotId] \u003d new BlockStoragePolicy(hotId, \"HOT\",\n+        new StorageType[]{StorageType.DISK}, StorageType.EMPTY_ARRAY,\n+        new StorageType[]{StorageType.ARCHIVE});\n+    final byte warmId \u003d 8;\n+    policies[warmId] \u003d new BlockStoragePolicy(warmId, \"WARM\",\n+        new StorageType[]{StorageType.DISK, StorageType.ARCHIVE},\n+        new StorageType[]{StorageType.DISK, StorageType.ARCHIVE},\n+        new StorageType[]{StorageType.DISK, StorageType.ARCHIVE});\n+    final byte coldId \u003d 4;\n+    policies[coldId] \u003d new BlockStoragePolicy(coldId, \"COLD\",\n+        new StorageType[]{StorageType.ARCHIVE}, StorageType.EMPTY_ARRAY,\n+        StorageType.EMPTY_ARRAY);\n+    return new BlockStoragePolicySuite(hotId, policies);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static BlockStoragePolicySuite createDefaultSuite() {\n    final BlockStoragePolicy[] policies \u003d\n        new BlockStoragePolicy[1 \u003c\u003c ID_BIT_LENGTH];\n    final byte hotId \u003d 12;\n    policies[hotId] \u003d new BlockStoragePolicy(hotId, \"HOT\",\n        new StorageType[]{StorageType.DISK}, StorageType.EMPTY_ARRAY,\n        new StorageType[]{StorageType.ARCHIVE});\n    final byte warmId \u003d 8;\n    policies[warmId] \u003d new BlockStoragePolicy(warmId, \"WARM\",\n        new StorageType[]{StorageType.DISK, StorageType.ARCHIVE},\n        new StorageType[]{StorageType.DISK, StorageType.ARCHIVE},\n        new StorageType[]{StorageType.DISK, StorageType.ARCHIVE});\n    final byte coldId \u003d 4;\n    policies[coldId] \u003d new BlockStoragePolicy(coldId, \"COLD\",\n        new StorageType[]{StorageType.ARCHIVE}, StorageType.EMPTY_ARRAY,\n        StorageType.EMPTY_ARRAY);\n    return new BlockStoragePolicySuite(hotId, policies);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockStoragePolicySuite.java",
          "extendedDetails": {}
        }
      ]
    },
    "867f0f141cc935c1f67680533cc22f25b804f720": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-7029. Archival Storage: fix TestDFSInotifyEventInputStream and TestDistributedFileSystem. Contributed by Tsz Wo Nicholas Sze.\n",
      "commitDate": "08/09/14 2:57 PM",
      "commitName": "867f0f141cc935c1f67680533cc22f25b804f720",
      "commitAuthor": "Jing Zhao",
      "diff": "@@ -0,0 +1,8 @@\n+  private static Suite createDefaultSuite() {\n+    final BlockStoragePolicy[] policies \u003d new BlockStoragePolicy[1 \u003c\u003c ID_BIT_LENGTH];\n+    final StorageType[] storageTypes \u003d {StorageType.DISK};\n+    final byte defaultPolicyId \u003d 12;\n+    policies[defaultPolicyId] \u003d new BlockStoragePolicy(defaultPolicyId, \"HOT\",\n+        storageTypes, StorageType.EMPTY_ARRAY, StorageType.EMPTY_ARRAY);\n+    return new Suite(defaultPolicyId, policies);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static Suite createDefaultSuite() {\n    final BlockStoragePolicy[] policies \u003d new BlockStoragePolicy[1 \u003c\u003c ID_BIT_LENGTH];\n    final StorageType[] storageTypes \u003d {StorageType.DISK};\n    final byte defaultPolicyId \u003d 12;\n    policies[defaultPolicyId] \u003d new BlockStoragePolicy(defaultPolicyId, \"HOT\",\n        storageTypes, StorageType.EMPTY_ARRAY, StorageType.EMPTY_ARRAY);\n    return new Suite(defaultPolicyId, policies);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/BlockStoragePolicy.java"
    }
  }
}