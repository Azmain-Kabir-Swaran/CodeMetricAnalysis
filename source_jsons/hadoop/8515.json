{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSImage.java",
  "functionName": "loadFSImage",
  "functionId": "loadFSImage___imageFile-File__target-FSNamesystem__recovery-MetaRecoveryContext__requireSameLayoutVersion-boolean",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImage.java",
  "functionStartLine": 940,
  "functionEndLine": 950,
  "numCommitsSeen": 240,
  "timeTaken": 7192,
  "changeHistory": [
    "18620649f96d9e378fb7ea40de216284a9d525c7",
    "706394d03992b394e9f907aff2155df493e4ea4e",
    "06e84a1bca19bd01568a3095e33944d4d6387fd3",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "28e6a4e44a3e920dcaf858f9a74a6358226b3a63",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "18620649f96d9e378fb7ea40de216284a9d525c7": "Ymultichange(Yparameterchange,Ybodychange)",
    "706394d03992b394e9f907aff2155df493e4ea4e": "Ymultichange(Yparameterchange,Ybodychange)",
    "06e84a1bca19bd01568a3095e33944d4d6387fd3": "Ymultichange(Yparameterchange,Ybodychange)",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "28e6a4e44a3e920dcaf858f9a74a6358226b3a63": "Ymultichange(Yparameterchange,Yreturntypechange,Ymodifierchange,Ybodychange)",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "18620649f96d9e378fb7ea40de216284a9d525c7": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-7185. The active NameNode will not accept an fsimage sent from the standby during rolling upgrade. Contributed by Jing Zhao.\n",
      "commitDate": "15/10/14 10:27 AM",
      "commitName": "18620649f96d9e378fb7ea40de216284a9d525c7",
      "commitAuthor": "Jing Zhao",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-7185. The active NameNode will not accept an fsimage sent from the standby during rolling upgrade. Contributed by Jing Zhao.\n",
          "commitDate": "15/10/14 10:27 AM",
          "commitName": "18620649f96d9e378fb7ea40de216284a9d525c7",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "18/07/14 10:14 AM",
          "commitNameOld": "5f9e52f7459d3dc4ac3a5febd1dc6e00829d30ed",
          "commitAuthorOld": "Chris Nauroth",
          "daysBetweenCommits": 89.01,
          "commitsBetweenForRepo": 875,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,11 @@\n   private void loadFSImage(File imageFile, FSNamesystem target,\n-      MetaRecoveryContext recovery) throws IOException {\n+      MetaRecoveryContext recovery, boolean requireSameLayoutVersion)\n+      throws IOException {\n     MD5Hash expectedMD5 \u003d MD5FileUtils.readStoredMd5ForFile(imageFile);\n     if (expectedMD5 \u003d\u003d null) {\n       throw new IOException(\"No MD5 file found corresponding to image file \"\n           + imageFile);\n     }\n-    loadFSImage(imageFile, expectedMD5, target, recovery);\n+    loadFSImage(imageFile, expectedMD5, target, recovery,\n+        requireSameLayoutVersion);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void loadFSImage(File imageFile, FSNamesystem target,\n      MetaRecoveryContext recovery, boolean requireSameLayoutVersion)\n      throws IOException {\n    MD5Hash expectedMD5 \u003d MD5FileUtils.readStoredMd5ForFile(imageFile);\n    if (expectedMD5 \u003d\u003d null) {\n      throw new IOException(\"No MD5 file found corresponding to image file \"\n          + imageFile);\n    }\n    loadFSImage(imageFile, expectedMD5, target, recovery,\n        requireSameLayoutVersion);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImage.java",
          "extendedDetails": {
            "oldValue": "[imageFile-File, target-FSNamesystem, recovery-MetaRecoveryContext]",
            "newValue": "[imageFile-File, target-FSNamesystem, recovery-MetaRecoveryContext, requireSameLayoutVersion-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-7185. The active NameNode will not accept an fsimage sent from the standby during rolling upgrade. Contributed by Jing Zhao.\n",
          "commitDate": "15/10/14 10:27 AM",
          "commitName": "18620649f96d9e378fb7ea40de216284a9d525c7",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "18/07/14 10:14 AM",
          "commitNameOld": "5f9e52f7459d3dc4ac3a5febd1dc6e00829d30ed",
          "commitAuthorOld": "Chris Nauroth",
          "daysBetweenCommits": 89.01,
          "commitsBetweenForRepo": 875,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,11 @@\n   private void loadFSImage(File imageFile, FSNamesystem target,\n-      MetaRecoveryContext recovery) throws IOException {\n+      MetaRecoveryContext recovery, boolean requireSameLayoutVersion)\n+      throws IOException {\n     MD5Hash expectedMD5 \u003d MD5FileUtils.readStoredMd5ForFile(imageFile);\n     if (expectedMD5 \u003d\u003d null) {\n       throw new IOException(\"No MD5 file found corresponding to image file \"\n           + imageFile);\n     }\n-    loadFSImage(imageFile, expectedMD5, target, recovery);\n+    loadFSImage(imageFile, expectedMD5, target, recovery,\n+        requireSameLayoutVersion);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void loadFSImage(File imageFile, FSNamesystem target,\n      MetaRecoveryContext recovery, boolean requireSameLayoutVersion)\n      throws IOException {\n    MD5Hash expectedMD5 \u003d MD5FileUtils.readStoredMd5ForFile(imageFile);\n    if (expectedMD5 \u003d\u003d null) {\n      throw new IOException(\"No MD5 file found corresponding to image file \"\n          + imageFile);\n    }\n    loadFSImage(imageFile, expectedMD5, target, recovery,\n        requireSameLayoutVersion);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImage.java",
          "extendedDetails": {}
        }
      ]
    },
    "706394d03992b394e9f907aff2155df493e4ea4e": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-3004. Implement Recovery Mode. Contributed by Colin Patrick McCabe\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1311394 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/04/12 12:39 PM",
      "commitName": "706394d03992b394e9f907aff2155df493e4ea4e",
      "commitAuthor": "Eli Collins",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-3004. Implement Recovery Mode. Contributed by Colin Patrick McCabe\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1311394 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "09/04/12 12:39 PM",
          "commitName": "706394d03992b394e9f907aff2155df493e4ea4e",
          "commitAuthor": "Eli Collins",
          "commitDateOld": "12/03/12 12:41 PM",
          "commitNameOld": "1a75ec82885e45baf4d5cd56d6c738d8e68d8bc7",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 28.0,
          "commitsBetweenForRepo": 204,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,9 @@\n-  private void loadFSImage(File imageFile, FSNamesystem target)\n-      throws IOException {\n+  private void loadFSImage(File imageFile, FSNamesystem target,\n+      MetaRecoveryContext recovery) throws IOException {\n     MD5Hash expectedMD5 \u003d MD5FileUtils.readStoredMd5ForFile(imageFile);\n     if (expectedMD5 \u003d\u003d null) {\n       throw new IOException(\"No MD5 file found corresponding to image file \"\n           + imageFile);\n     }\n-    loadFSImage(imageFile, expectedMD5, target);\n+    loadFSImage(imageFile, expectedMD5, target, recovery);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void loadFSImage(File imageFile, FSNamesystem target,\n      MetaRecoveryContext recovery) throws IOException {\n    MD5Hash expectedMD5 \u003d MD5FileUtils.readStoredMd5ForFile(imageFile);\n    if (expectedMD5 \u003d\u003d null) {\n      throw new IOException(\"No MD5 file found corresponding to image file \"\n          + imageFile);\n    }\n    loadFSImage(imageFile, expectedMD5, target, recovery);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImage.java",
          "extendedDetails": {
            "oldValue": "[imageFile-File, target-FSNamesystem]",
            "newValue": "[imageFile-File, target-FSNamesystem, recovery-MetaRecoveryContext]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-3004. Implement Recovery Mode. Contributed by Colin Patrick McCabe\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1311394 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "09/04/12 12:39 PM",
          "commitName": "706394d03992b394e9f907aff2155df493e4ea4e",
          "commitAuthor": "Eli Collins",
          "commitDateOld": "12/03/12 12:41 PM",
          "commitNameOld": "1a75ec82885e45baf4d5cd56d6c738d8e68d8bc7",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 28.0,
          "commitsBetweenForRepo": 204,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,9 @@\n-  private void loadFSImage(File imageFile, FSNamesystem target)\n-      throws IOException {\n+  private void loadFSImage(File imageFile, FSNamesystem target,\n+      MetaRecoveryContext recovery) throws IOException {\n     MD5Hash expectedMD5 \u003d MD5FileUtils.readStoredMd5ForFile(imageFile);\n     if (expectedMD5 \u003d\u003d null) {\n       throw new IOException(\"No MD5 file found corresponding to image file \"\n           + imageFile);\n     }\n-    loadFSImage(imageFile, expectedMD5, target);\n+    loadFSImage(imageFile, expectedMD5, target, recovery);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void loadFSImage(File imageFile, FSNamesystem target,\n      MetaRecoveryContext recovery) throws IOException {\n    MD5Hash expectedMD5 \u003d MD5FileUtils.readStoredMd5ForFile(imageFile);\n    if (expectedMD5 \u003d\u003d null) {\n      throw new IOException(\"No MD5 file found corresponding to image file \"\n          + imageFile);\n    }\n    loadFSImage(imageFile, expectedMD5, target, recovery);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImage.java",
          "extendedDetails": {}
        }
      ]
    },
    "06e84a1bca19bd01568a3095e33944d4d6387fd3": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-2223. Untangle depencencies between NN components. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1166466 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/09/11 4:23 PM",
      "commitName": "06e84a1bca19bd01568a3095e33944d4d6387fd3",
      "commitAuthor": "Todd Lipcon",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-2223. Untangle depencencies between NN components. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1166466 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "07/09/11 4:23 PM",
          "commitName": "06e84a1bca19bd01568a3095e33944d4d6387fd3",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "06/09/11 1:27 PM",
          "commitNameOld": "bdc3720d5b67a1c8fc2dfb29be16e4155c0e7f15",
          "commitAuthorOld": "Jitendra Nath Pandey",
          "daysBetweenCommits": 1.12,
          "commitsBetweenForRepo": 13,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,9 @@\n-  private void loadFSImage(File imageFile) throws IOException {\n+  private void loadFSImage(File imageFile, FSNamesystem target)\n+      throws IOException {\n     MD5Hash expectedMD5 \u003d MD5FileUtils.readStoredMd5ForFile(imageFile);\n     if (expectedMD5 \u003d\u003d null) {\n       throw new IOException(\"No MD5 file found corresponding to image file \"\n           + imageFile);\n     }\n-    loadFSImage(imageFile, expectedMD5);\n+    loadFSImage(imageFile, expectedMD5, target);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void loadFSImage(File imageFile, FSNamesystem target)\n      throws IOException {\n    MD5Hash expectedMD5 \u003d MD5FileUtils.readStoredMd5ForFile(imageFile);\n    if (expectedMD5 \u003d\u003d null) {\n      throw new IOException(\"No MD5 file found corresponding to image file \"\n          + imageFile);\n    }\n    loadFSImage(imageFile, expectedMD5, target);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImage.java",
          "extendedDetails": {
            "oldValue": "[imageFile-File]",
            "newValue": "[imageFile-File, target-FSNamesystem]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-2223. Untangle depencencies between NN components. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1166466 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "07/09/11 4:23 PM",
          "commitName": "06e84a1bca19bd01568a3095e33944d4d6387fd3",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "06/09/11 1:27 PM",
          "commitNameOld": "bdc3720d5b67a1c8fc2dfb29be16e4155c0e7f15",
          "commitAuthorOld": "Jitendra Nath Pandey",
          "daysBetweenCommits": 1.12,
          "commitsBetweenForRepo": 13,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,9 @@\n-  private void loadFSImage(File imageFile) throws IOException {\n+  private void loadFSImage(File imageFile, FSNamesystem target)\n+      throws IOException {\n     MD5Hash expectedMD5 \u003d MD5FileUtils.readStoredMd5ForFile(imageFile);\n     if (expectedMD5 \u003d\u003d null) {\n       throw new IOException(\"No MD5 file found corresponding to image file \"\n           + imageFile);\n     }\n-    loadFSImage(imageFile, expectedMD5);\n+    loadFSImage(imageFile, expectedMD5, target);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void loadFSImage(File imageFile, FSNamesystem target)\n      throws IOException {\n    MD5Hash expectedMD5 \u003d MD5FileUtils.readStoredMd5ForFile(imageFile);\n    if (expectedMD5 \u003d\u003d null) {\n      throw new IOException(\"No MD5 file found corresponding to image file \"\n          + imageFile);\n    }\n    loadFSImage(imageFile, expectedMD5, target);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImage.java",
          "extendedDetails": {}
        }
      ]
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void loadFSImage(File imageFile) throws IOException {\n    MD5Hash expectedMD5 \u003d MD5FileUtils.readStoredMd5ForFile(imageFile);\n    if (expectedMD5 \u003d\u003d null) {\n      throw new IOException(\"No MD5 file found corresponding to image file \"\n          + imageFile);\n    }\n    loadFSImage(imageFile, expectedMD5);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImage.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImage.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImage.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void loadFSImage(File imageFile) throws IOException {\n    MD5Hash expectedMD5 \u003d MD5FileUtils.readStoredMd5ForFile(imageFile);\n    if (expectedMD5 \u003d\u003d null) {\n      throw new IOException(\"No MD5 file found corresponding to image file \"\n          + imageFile);\n    }\n    loadFSImage(imageFile, expectedMD5);\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImage.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FSImage.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImage.java"
      }
    },
    "28e6a4e44a3e920dcaf858f9a74a6358226b3a63": {
      "type": "Ymultichange(Yparameterchange,Yreturntypechange,Ymodifierchange,Ybodychange)",
      "commitMessage": "HDFS-1073. Redesign the NameNode\u0027s storage layout for image checkpoints and edit logs to introduce transaction IDs and be more robust. Contributed by Todd Lipcon and Ivan Kelly.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1152295 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/07/11 9:28 AM",
      "commitName": "28e6a4e44a3e920dcaf858f9a74a6358226b3a63",
      "commitAuthor": "Todd Lipcon",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-1073. Redesign the NameNode\u0027s storage layout for image checkpoints and edit logs to introduce transaction IDs and be more robust. Contributed by Todd Lipcon and Ivan Kelly.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1152295 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "29/07/11 9:28 AM",
          "commitName": "28e6a4e44a3e920dcaf858f9a74a6358226b3a63",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "27/07/11 8:19 PM",
          "commitNameOld": "ffbe9e5972bf3eee9037e2602c1330e0dc744646",
          "commitAuthorOld": "Eli Collins",
          "daysBetweenCommits": 1.55,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,8 @@\n-  boolean loadFSImage(File curFile) throws IOException {\n-    FSImageFormat.Loader loader \u003d new FSImageFormat.Loader(\n-        conf, getFSNamesystem());\n-    loader.load(curFile);\n-    namesystem.setBlockPoolId(this.getBlockPoolID());\n-\n-    // Check that the image digest we loaded matches up with what\n-    // we expected\n-    MD5Hash readImageMd5 \u003d loader.getLoadedImageMd5();\n-    if (storage.getImageDigest() \u003d\u003d null) {\n-      storage.setImageDigest(readImageMd5); // set this fsimage\u0027s checksum\n-    } else if (!storage.getImageDigest().equals(readImageMd5)) {\n-      throw new IOException(\"Image file \" + curFile +\n-          \" is corrupt with MD5 checksum of \" + readImageMd5 +\n-          \" but expecting \" + storage.getImageDigest());\n+  private void loadFSImage(File imageFile) throws IOException {\n+    MD5Hash expectedMD5 \u003d MD5FileUtils.readStoredMd5ForFile(imageFile);\n+    if (expectedMD5 \u003d\u003d null) {\n+      throw new IOException(\"No MD5 file found corresponding to image file \"\n+          + imageFile);\n     }\n-\n-    storage.namespaceID \u003d loader.getLoadedNamespaceID();\n-    storage.layoutVersion \u003d loader.getLoadedImageVersion();\n-\n-    boolean needToSave \u003d\n-      loader.getLoadedImageVersion() !\u003d FSConstants.LAYOUT_VERSION;\n-    return needToSave;\n+    loadFSImage(imageFile, expectedMD5);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void loadFSImage(File imageFile) throws IOException {\n    MD5Hash expectedMD5 \u003d MD5FileUtils.readStoredMd5ForFile(imageFile);\n    if (expectedMD5 \u003d\u003d null) {\n      throw new IOException(\"No MD5 file found corresponding to image file \"\n          + imageFile);\n    }\n    loadFSImage(imageFile, expectedMD5);\n  }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FSImage.java",
          "extendedDetails": {
            "oldValue": "[curFile-File]",
            "newValue": "[imageFile-File]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-1073. Redesign the NameNode\u0027s storage layout for image checkpoints and edit logs to introduce transaction IDs and be more robust. Contributed by Todd Lipcon and Ivan Kelly.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1152295 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "29/07/11 9:28 AM",
          "commitName": "28e6a4e44a3e920dcaf858f9a74a6358226b3a63",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "27/07/11 8:19 PM",
          "commitNameOld": "ffbe9e5972bf3eee9037e2602c1330e0dc744646",
          "commitAuthorOld": "Eli Collins",
          "daysBetweenCommits": 1.55,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,8 @@\n-  boolean loadFSImage(File curFile) throws IOException {\n-    FSImageFormat.Loader loader \u003d new FSImageFormat.Loader(\n-        conf, getFSNamesystem());\n-    loader.load(curFile);\n-    namesystem.setBlockPoolId(this.getBlockPoolID());\n-\n-    // Check that the image digest we loaded matches up with what\n-    // we expected\n-    MD5Hash readImageMd5 \u003d loader.getLoadedImageMd5();\n-    if (storage.getImageDigest() \u003d\u003d null) {\n-      storage.setImageDigest(readImageMd5); // set this fsimage\u0027s checksum\n-    } else if (!storage.getImageDigest().equals(readImageMd5)) {\n-      throw new IOException(\"Image file \" + curFile +\n-          \" is corrupt with MD5 checksum of \" + readImageMd5 +\n-          \" but expecting \" + storage.getImageDigest());\n+  private void loadFSImage(File imageFile) throws IOException {\n+    MD5Hash expectedMD5 \u003d MD5FileUtils.readStoredMd5ForFile(imageFile);\n+    if (expectedMD5 \u003d\u003d null) {\n+      throw new IOException(\"No MD5 file found corresponding to image file \"\n+          + imageFile);\n     }\n-\n-    storage.namespaceID \u003d loader.getLoadedNamespaceID();\n-    storage.layoutVersion \u003d loader.getLoadedImageVersion();\n-\n-    boolean needToSave \u003d\n-      loader.getLoadedImageVersion() !\u003d FSConstants.LAYOUT_VERSION;\n-    return needToSave;\n+    loadFSImage(imageFile, expectedMD5);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void loadFSImage(File imageFile) throws IOException {\n    MD5Hash expectedMD5 \u003d MD5FileUtils.readStoredMd5ForFile(imageFile);\n    if (expectedMD5 \u003d\u003d null) {\n      throw new IOException(\"No MD5 file found corresponding to image file \"\n          + imageFile);\n    }\n    loadFSImage(imageFile, expectedMD5);\n  }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FSImage.java",
          "extendedDetails": {
            "oldValue": "boolean",
            "newValue": "void"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-1073. Redesign the NameNode\u0027s storage layout for image checkpoints and edit logs to introduce transaction IDs and be more robust. Contributed by Todd Lipcon and Ivan Kelly.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1152295 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "29/07/11 9:28 AM",
          "commitName": "28e6a4e44a3e920dcaf858f9a74a6358226b3a63",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "27/07/11 8:19 PM",
          "commitNameOld": "ffbe9e5972bf3eee9037e2602c1330e0dc744646",
          "commitAuthorOld": "Eli Collins",
          "daysBetweenCommits": 1.55,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,8 @@\n-  boolean loadFSImage(File curFile) throws IOException {\n-    FSImageFormat.Loader loader \u003d new FSImageFormat.Loader(\n-        conf, getFSNamesystem());\n-    loader.load(curFile);\n-    namesystem.setBlockPoolId(this.getBlockPoolID());\n-\n-    // Check that the image digest we loaded matches up with what\n-    // we expected\n-    MD5Hash readImageMd5 \u003d loader.getLoadedImageMd5();\n-    if (storage.getImageDigest() \u003d\u003d null) {\n-      storage.setImageDigest(readImageMd5); // set this fsimage\u0027s checksum\n-    } else if (!storage.getImageDigest().equals(readImageMd5)) {\n-      throw new IOException(\"Image file \" + curFile +\n-          \" is corrupt with MD5 checksum of \" + readImageMd5 +\n-          \" but expecting \" + storage.getImageDigest());\n+  private void loadFSImage(File imageFile) throws IOException {\n+    MD5Hash expectedMD5 \u003d MD5FileUtils.readStoredMd5ForFile(imageFile);\n+    if (expectedMD5 \u003d\u003d null) {\n+      throw new IOException(\"No MD5 file found corresponding to image file \"\n+          + imageFile);\n     }\n-\n-    storage.namespaceID \u003d loader.getLoadedNamespaceID();\n-    storage.layoutVersion \u003d loader.getLoadedImageVersion();\n-\n-    boolean needToSave \u003d\n-      loader.getLoadedImageVersion() !\u003d FSConstants.LAYOUT_VERSION;\n-    return needToSave;\n+    loadFSImage(imageFile, expectedMD5);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void loadFSImage(File imageFile) throws IOException {\n    MD5Hash expectedMD5 \u003d MD5FileUtils.readStoredMd5ForFile(imageFile);\n    if (expectedMD5 \u003d\u003d null) {\n      throw new IOException(\"No MD5 file found corresponding to image file \"\n          + imageFile);\n    }\n    loadFSImage(imageFile, expectedMD5);\n  }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FSImage.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[private]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-1073. Redesign the NameNode\u0027s storage layout for image checkpoints and edit logs to introduce transaction IDs and be more robust. Contributed by Todd Lipcon and Ivan Kelly.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1152295 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "29/07/11 9:28 AM",
          "commitName": "28e6a4e44a3e920dcaf858f9a74a6358226b3a63",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "27/07/11 8:19 PM",
          "commitNameOld": "ffbe9e5972bf3eee9037e2602c1330e0dc744646",
          "commitAuthorOld": "Eli Collins",
          "daysBetweenCommits": 1.55,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,8 @@\n-  boolean loadFSImage(File curFile) throws IOException {\n-    FSImageFormat.Loader loader \u003d new FSImageFormat.Loader(\n-        conf, getFSNamesystem());\n-    loader.load(curFile);\n-    namesystem.setBlockPoolId(this.getBlockPoolID());\n-\n-    // Check that the image digest we loaded matches up with what\n-    // we expected\n-    MD5Hash readImageMd5 \u003d loader.getLoadedImageMd5();\n-    if (storage.getImageDigest() \u003d\u003d null) {\n-      storage.setImageDigest(readImageMd5); // set this fsimage\u0027s checksum\n-    } else if (!storage.getImageDigest().equals(readImageMd5)) {\n-      throw new IOException(\"Image file \" + curFile +\n-          \" is corrupt with MD5 checksum of \" + readImageMd5 +\n-          \" but expecting \" + storage.getImageDigest());\n+  private void loadFSImage(File imageFile) throws IOException {\n+    MD5Hash expectedMD5 \u003d MD5FileUtils.readStoredMd5ForFile(imageFile);\n+    if (expectedMD5 \u003d\u003d null) {\n+      throw new IOException(\"No MD5 file found corresponding to image file \"\n+          + imageFile);\n     }\n-\n-    storage.namespaceID \u003d loader.getLoadedNamespaceID();\n-    storage.layoutVersion \u003d loader.getLoadedImageVersion();\n-\n-    boolean needToSave \u003d\n-      loader.getLoadedImageVersion() !\u003d FSConstants.LAYOUT_VERSION;\n-    return needToSave;\n+    loadFSImage(imageFile, expectedMD5);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void loadFSImage(File imageFile) throws IOException {\n    MD5Hash expectedMD5 \u003d MD5FileUtils.readStoredMd5ForFile(imageFile);\n    if (expectedMD5 \u003d\u003d null) {\n      throw new IOException(\"No MD5 file found corresponding to image file \"\n          + imageFile);\n    }\n    loadFSImage(imageFile, expectedMD5);\n  }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FSImage.java",
          "extendedDetails": {}
        }
      ]
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,24 @@\n+  boolean loadFSImage(File curFile) throws IOException {\n+    FSImageFormat.Loader loader \u003d new FSImageFormat.Loader(\n+        conf, getFSNamesystem());\n+    loader.load(curFile);\n+    namesystem.setBlockPoolId(this.getBlockPoolID());\n+\n+    // Check that the image digest we loaded matches up with what\n+    // we expected\n+    MD5Hash readImageMd5 \u003d loader.getLoadedImageMd5();\n+    if (storage.getImageDigest() \u003d\u003d null) {\n+      storage.setImageDigest(readImageMd5); // set this fsimage\u0027s checksum\n+    } else if (!storage.getImageDigest().equals(readImageMd5)) {\n+      throw new IOException(\"Image file \" + curFile +\n+          \" is corrupt with MD5 checksum of \" + readImageMd5 +\n+          \" but expecting \" + storage.getImageDigest());\n+    }\n+\n+    storage.namespaceID \u003d loader.getLoadedNamespaceID();\n+    storage.layoutVersion \u003d loader.getLoadedImageVersion();\n+\n+    boolean needToSave \u003d\n+      loader.getLoadedImageVersion() !\u003d FSConstants.LAYOUT_VERSION;\n+    return needToSave;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  boolean loadFSImage(File curFile) throws IOException {\n    FSImageFormat.Loader loader \u003d new FSImageFormat.Loader(\n        conf, getFSNamesystem());\n    loader.load(curFile);\n    namesystem.setBlockPoolId(this.getBlockPoolID());\n\n    // Check that the image digest we loaded matches up with what\n    // we expected\n    MD5Hash readImageMd5 \u003d loader.getLoadedImageMd5();\n    if (storage.getImageDigest() \u003d\u003d null) {\n      storage.setImageDigest(readImageMd5); // set this fsimage\u0027s checksum\n    } else if (!storage.getImageDigest().equals(readImageMd5)) {\n      throw new IOException(\"Image file \" + curFile +\n          \" is corrupt with MD5 checksum of \" + readImageMd5 +\n          \" but expecting \" + storage.getImageDigest());\n    }\n\n    storage.namespaceID \u003d loader.getLoadedNamespaceID();\n    storage.layoutVersion \u003d loader.getLoadedImageVersion();\n\n    boolean needToSave \u003d\n      loader.getLoadedImageVersion() !\u003d FSConstants.LAYOUT_VERSION;\n    return needToSave;\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FSImage.java"
    }
  }
}