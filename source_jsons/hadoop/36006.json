{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AdminService.java",
  "functionName": "loadNewConfiguration",
  "functionId": "loadNewConfiguration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
  "functionStartLine": 418,
  "functionEndLine": 433,
  "numCommitsSeen": 78,
  "timeTaken": 3233,
  "changeHistory": [
    "06cceba1cb07340c412c4467439c16ea6812e685",
    "a63d19d36520fa55bf523483f14329756f6eadd3"
  ],
  "changeHistoryShort": {
    "06cceba1cb07340c412c4467439c16ea6812e685": "Ybodychange",
    "a63d19d36520fa55bf523483f14329756f6eadd3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "06cceba1cb07340c412c4467439c16ea6812e685": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7738. CapacityScheduler: Support refresh maximum allocation for multiple resource types. Contributed by Wangda Tan.\n",
      "commitDate": "18/01/18 5:35 AM",
      "commitName": "06cceba1cb07340c412c4467439c16ea6812e685",
      "commitAuthor": "Sunil G",
      "commitDateOld": "30/11/17 3:57 PM",
      "commitNameOld": "a63d19d36520fa55bf523483f14329756f6eadd3",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 48.57,
      "commitsBetweenForRepo": 273,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,16 @@\n   protected Configuration loadNewConfiguration()\n       throws IOException, YarnException {\n     // Retrieve yarn-site.xml in order to refresh scheduling monitor properties.\n     Configuration conf \u003d getConfiguration(new Configuration(false),\n-        YarnConfiguration.YARN_SITE_CONFIGURATION_FILE);\n+        YarnConfiguration.YARN_SITE_CONFIGURATION_FILE,\n+        YarnConfiguration.RESOURCE_TYPES_CONFIGURATION_FILE);\n     // The reason we call Configuration#size() is because when getConfiguration\n     // been called, it invokes Configuration#addResouce, which invokes\n     // Configuration#reloadConfiguration which triggers the reload process in a\n     // lazy way, the properties will only be reload when it\u0027s needed rather than\n     // reload it right after getConfiguration been called. So here we call\n     // Configuration#size() to force the Configuration#getProps been called to\n     // reload all the properties.\n     conf.size();\n     return conf;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected Configuration loadNewConfiguration()\n      throws IOException, YarnException {\n    // Retrieve yarn-site.xml in order to refresh scheduling monitor properties.\n    Configuration conf \u003d getConfiguration(new Configuration(false),\n        YarnConfiguration.YARN_SITE_CONFIGURATION_FILE,\n        YarnConfiguration.RESOURCE_TYPES_CONFIGURATION_FILE);\n    // The reason we call Configuration#size() is because when getConfiguration\n    // been called, it invokes Configuration#addResouce, which invokes\n    // Configuration#reloadConfiguration which triggers the reload process in a\n    // lazy way, the properties will only be reload when it\u0027s needed rather than\n    // reload it right after getConfiguration been called. So here we call\n    // Configuration#size() to force the Configuration#getProps been called to\n    // reload all the properties.\n    conf.size();\n    return conf;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
      "extendedDetails": {}
    },
    "a63d19d36520fa55bf523483f14329756f6eadd3": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6124. Make SchedulingEditPolicy can be enabled / disabled / updated with RMAdmin -refreshQueues. (Zian Chen via wangda)\n\nChange-Id: Id93656f3af7dcd78cafa94e33663c78d410d43c2\n",
      "commitDate": "30/11/17 3:57 PM",
      "commitName": "a63d19d36520fa55bf523483f14329756f6eadd3",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,15 @@\n+  protected Configuration loadNewConfiguration()\n+      throws IOException, YarnException {\n+    // Retrieve yarn-site.xml in order to refresh scheduling monitor properties.\n+    Configuration conf \u003d getConfiguration(new Configuration(false),\n+        YarnConfiguration.YARN_SITE_CONFIGURATION_FILE);\n+    // The reason we call Configuration#size() is because when getConfiguration\n+    // been called, it invokes Configuration#addResouce, which invokes\n+    // Configuration#reloadConfiguration which triggers the reload process in a\n+    // lazy way, the properties will only be reload when it\u0027s needed rather than\n+    // reload it right after getConfiguration been called. So here we call\n+    // Configuration#size() to force the Configuration#getProps been called to\n+    // reload all the properties.\n+    conf.size();\n+    return conf;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected Configuration loadNewConfiguration()\n      throws IOException, YarnException {\n    // Retrieve yarn-site.xml in order to refresh scheduling monitor properties.\n    Configuration conf \u003d getConfiguration(new Configuration(false),\n        YarnConfiguration.YARN_SITE_CONFIGURATION_FILE);\n    // The reason we call Configuration#size() is because when getConfiguration\n    // been called, it invokes Configuration#addResouce, which invokes\n    // Configuration#reloadConfiguration which triggers the reload process in a\n    // lazy way, the properties will only be reload when it\u0027s needed rather than\n    // reload it right after getConfiguration been called. So here we call\n    // Configuration#size() to force the Configuration#getProps been called to\n    // reload all the properties.\n    conf.size();\n    return conf;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java"
    }
  }
}