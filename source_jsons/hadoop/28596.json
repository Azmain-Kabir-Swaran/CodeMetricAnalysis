{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "WebPageUtils.java",
  "functionName": "appsTableInit",
  "functionId": "appsTableInit___isFairSchedulerPage-boolean__isResourceManager-boolean",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/webapp/WebPageUtils.java",
  "functionStartLine": 34,
  "functionEndLine": 48,
  "numCommitsSeen": 39,
  "timeTaken": 10090,
  "changeHistory": [
    "ef59ffd362b9a91be08cbdbaa15aafdf08f00bdc",
    "4a3dabd94fc3dddd9d7604b826065c23859d565f",
    "95bfd087dc89e57a93340604cc8b96042fa1a05a",
    "618fa6cd59386b560755b485a760e1f734e3edb3",
    "2d1237cbb07489fae49a4b3048341b1cc873364c",
    "a23e8b092912998ede1865ec612adb4b7dcca460",
    "9f55dd3a543570daad0ebc195ee29a07419c28c4",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "d3599de399e641b8f1ca657edd5c19dade5e6702",
    "d6170f00b12c0d2737f71da8e93dfffdbc1b2d34",
    "c7007a8a3508a24a6f023302516fe8fbe270eab1",
    "cc4a468113831e502b26c571d04e31b475bca5c1",
    "9a4e890f4aadc921fa468fd1292d215704429b61",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "ef59ffd362b9a91be08cbdbaa15aafdf08f00bdc": "Ybodychange",
    "4a3dabd94fc3dddd9d7604b826065c23859d565f": "Ymultichange(Yparameterchange,Ybodychange)",
    "95bfd087dc89e57a93340604cc8b96042fa1a05a": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yparameterchange)",
    "618fa6cd59386b560755b485a760e1f734e3edb3": "Ybodychange",
    "2d1237cbb07489fae49a4b3048341b1cc873364c": "Ybodychange",
    "a23e8b092912998ede1865ec612adb4b7dcca460": "Ybodychange",
    "9f55dd3a543570daad0ebc195ee29a07419c28c4": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "d3599de399e641b8f1ca657edd5c19dade5e6702": "Ybodychange",
    "d6170f00b12c0d2737f71da8e93dfffdbc1b2d34": "Ybodychange",
    "c7007a8a3508a24a6f023302516fe8fbe270eab1": "Ybodychange",
    "cc4a468113831e502b26c571d04e31b475bca5c1": "Ybodychange",
    "9a4e890f4aadc921fa468fd1292d215704429b61": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ef59ffd362b9a91be08cbdbaa15aafdf08f00bdc": {
      "type": "Ybodychange",
      "commitMessage": "YARN-10038. [UI] Finish Time is not correctly parsed in the RM Apps page. Contributed by Inigo Goiri.\n",
      "commitDate": "19/12/19 11:37 AM",
      "commitName": "ef59ffd362b9a91be08cbdbaa15aafdf08f00bdc",
      "commitAuthor": "Giovanni Matteo Fumarola",
      "commitDateOld": "02/05/19 12:39 PM",
      "commitNameOld": "b094b94d43a46af9ddb910da24f792b95f614b08",
      "commitAuthorOld": "Eric E Payne",
      "daysBetweenCommits": 231.0,
      "commitsBetweenForRepo": 1575,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,15 @@\n   public static String appsTableInit(\n       boolean isFairSchedulerPage, boolean isResourceManager) {\n-    // id, user, name, queue, starttime, finishtime, state, status, progress, ui\n+    // id, user, name, app type, app tags, queue, priority,\n+    // starttime, launchtime, finishtime, state, status, progress, ui\n     // FairSchedulerPage\u0027s table is a bit different\n+    // This is define in RMAppsBlock.COLUMNS for the RM\n     return tableInit()\n       .append(\", \u0027aaData\u0027: appsTableData\")\n       .append(\", bDeferRender: true\")\n       .append(\", bProcessing: true\")\n       .append(\"\\n, aoColumnDefs: \")\n       .append(getAppsTableColumnDefs(isFairSchedulerPage, isResourceManager))\n       // Sort by id upon page load\n       .append(\", aaSorting: [[0, \u0027desc\u0027]]}\").toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static String appsTableInit(\n      boolean isFairSchedulerPage, boolean isResourceManager) {\n    // id, user, name, app type, app tags, queue, priority,\n    // starttime, launchtime, finishtime, state, status, progress, ui\n    // FairSchedulerPage\u0027s table is a bit different\n    // This is define in RMAppsBlock.COLUMNS for the RM\n    return tableInit()\n      .append(\", \u0027aaData\u0027: appsTableData\")\n      .append(\", bDeferRender: true\")\n      .append(\", bProcessing: true\")\n      .append(\"\\n, aoColumnDefs: \")\n      .append(getAppsTableColumnDefs(isFairSchedulerPage, isResourceManager))\n      // Sort by id upon page load\n      .append(\", aaSorting: [[0, \u0027desc\u0027]]}\").toString();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/webapp/WebPageUtils.java",
      "extendedDetails": {}
    },
    "4a3dabd94fc3dddd9d7604b826065c23859d565f": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-3406. Display count of running containers in the RM\u0027s Web UI. Contributed by Ryu Kobayashi.\n",
      "commitDate": "24/04/15 3:17 PM",
      "commitName": "4a3dabd94fc3dddd9d7604b826065c23859d565f",
      "commitAuthor": "Tsuyoshi Ozawa",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-3406. Display count of running containers in the RM\u0027s Web UI. Contributed by Ryu Kobayashi.\n",
          "commitDate": "24/04/15 3:17 PM",
          "commitName": "4a3dabd94fc3dddd9d7604b826065c23859d565f",
          "commitAuthor": "Tsuyoshi Ozawa",
          "commitDateOld": "15/03/15 8:26 PM",
          "commitNameOld": "3ff1ba2a7b00fdf06270d00b2193bde4b56b06b3",
          "commitAuthorOld": "Xuan",
          "daysBetweenCommits": 39.79,
          "commitsBetweenForRepo": 377,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,13 @@\n-  public static String appsTableInit(boolean isFairSchedulerPage) {\n+  public static String appsTableInit(\n+      boolean isFairSchedulerPage, boolean isResourceManager) {\n     // id, user, name, queue, starttime, finishtime, state, status, progress, ui\n     // FairSchedulerPage\u0027s table is a bit different\n     return tableInit()\n       .append(\", \u0027aaData\u0027: appsTableData\")\n       .append(\", bDeferRender: true\")\n       .append(\", bProcessing: true\")\n       .append(\"\\n, aoColumnDefs: \")\n-      .append(getAppsTableColumnDefs(isFairSchedulerPage))\n+      .append(getAppsTableColumnDefs(isFairSchedulerPage, isResourceManager))\n       // Sort by id upon page load\n       .append(\", aaSorting: [[0, \u0027desc\u0027]]}\").toString();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static String appsTableInit(\n      boolean isFairSchedulerPage, boolean isResourceManager) {\n    // id, user, name, queue, starttime, finishtime, state, status, progress, ui\n    // FairSchedulerPage\u0027s table is a bit different\n    return tableInit()\n      .append(\", \u0027aaData\u0027: appsTableData\")\n      .append(\", bDeferRender: true\")\n      .append(\", bProcessing: true\")\n      .append(\"\\n, aoColumnDefs: \")\n      .append(getAppsTableColumnDefs(isFairSchedulerPage, isResourceManager))\n      // Sort by id upon page load\n      .append(\", aaSorting: [[0, \u0027desc\u0027]]}\").toString();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/webapp/WebPageUtils.java",
          "extendedDetails": {
            "oldValue": "[isFairSchedulerPage-boolean]",
            "newValue": "[isFairSchedulerPage-boolean, isResourceManager-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3406. Display count of running containers in the RM\u0027s Web UI. Contributed by Ryu Kobayashi.\n",
          "commitDate": "24/04/15 3:17 PM",
          "commitName": "4a3dabd94fc3dddd9d7604b826065c23859d565f",
          "commitAuthor": "Tsuyoshi Ozawa",
          "commitDateOld": "15/03/15 8:26 PM",
          "commitNameOld": "3ff1ba2a7b00fdf06270d00b2193bde4b56b06b3",
          "commitAuthorOld": "Xuan",
          "daysBetweenCommits": 39.79,
          "commitsBetweenForRepo": 377,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,13 @@\n-  public static String appsTableInit(boolean isFairSchedulerPage) {\n+  public static String appsTableInit(\n+      boolean isFairSchedulerPage, boolean isResourceManager) {\n     // id, user, name, queue, starttime, finishtime, state, status, progress, ui\n     // FairSchedulerPage\u0027s table is a bit different\n     return tableInit()\n       .append(\", \u0027aaData\u0027: appsTableData\")\n       .append(\", bDeferRender: true\")\n       .append(\", bProcessing: true\")\n       .append(\"\\n, aoColumnDefs: \")\n-      .append(getAppsTableColumnDefs(isFairSchedulerPage))\n+      .append(getAppsTableColumnDefs(isFairSchedulerPage, isResourceManager))\n       // Sort by id upon page load\n       .append(\", aaSorting: [[0, \u0027desc\u0027]]}\").toString();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static String appsTableInit(\n      boolean isFairSchedulerPage, boolean isResourceManager) {\n    // id, user, name, queue, starttime, finishtime, state, status, progress, ui\n    // FairSchedulerPage\u0027s table is a bit different\n    return tableInit()\n      .append(\", \u0027aaData\u0027: appsTableData\")\n      .append(\", bDeferRender: true\")\n      .append(\", bProcessing: true\")\n      .append(\"\\n, aoColumnDefs: \")\n      .append(getAppsTableColumnDefs(isFairSchedulerPage, isResourceManager))\n      // Sort by id upon page load\n      .append(\", aaSorting: [[0, \u0027desc\u0027]]}\").toString();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/webapp/WebPageUtils.java",
          "extendedDetails": {}
        }
      ]
    },
    "95bfd087dc89e57a93340604cc8b96042fa1a05a": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yparameterchange)",
      "commitMessage": "YARN-1809. Synchronize RM and TimeLineServer Web-UIs. Contributed by Zhijie Shen and Xuan Gong\n",
      "commitDate": "05/03/15 9:20 PM",
      "commitName": "95bfd087dc89e57a93340604cc8b96042fa1a05a",
      "commitAuthor": "Jian He",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-1809. Synchronize RM and TimeLineServer Web-UIs. Contributed by Zhijie Shen and Xuan Gong\n",
          "commitDate": "05/03/15 9:20 PM",
          "commitName": "95bfd087dc89e57a93340604cc8b96042fa1a05a",
          "commitAuthor": "Jian He",
          "commitDateOld": "05/03/15 10:58 AM",
          "commitNameOld": "952640fa4cbdc23fe8781e5627c2e8eab565c535",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 0.43,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,12 @@\n-  private String appsTableInit() {\n+  public static String appsTableInit(boolean isFairSchedulerPage) {\n     // id, user, name, queue, starttime, finishtime, state, status, progress, ui\n+    // FairSchedulerPage\u0027s table is a bit different\n     return tableInit()\n       .append(\", \u0027aaData\u0027: appsTableData\")\n       .append(\", bDeferRender: true\")\n       .append(\", bProcessing: true\")\n-\n       .append(\"\\n, aoColumnDefs: \")\n-      .append(getAppsTableColumnDefs())\n-\n+      .append(getAppsTableColumnDefs(isFairSchedulerPage))\n       // Sort by id upon page load\n       .append(\", aaSorting: [[0, \u0027desc\u0027]]}\").toString();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static String appsTableInit(boolean isFairSchedulerPage) {\n    // id, user, name, queue, starttime, finishtime, state, status, progress, ui\n    // FairSchedulerPage\u0027s table is a bit different\n    return tableInit()\n      .append(\", \u0027aaData\u0027: appsTableData\")\n      .append(\", bDeferRender: true\")\n      .append(\", bProcessing: true\")\n      .append(\"\\n, aoColumnDefs: \")\n      .append(getAppsTableColumnDefs(isFairSchedulerPage))\n      // Sort by id upon page load\n      .append(\", aaSorting: [[0, \u0027desc\u0027]]}\").toString();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/webapp/WebPageUtils.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RmView.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/webapp/WebPageUtils.java",
            "oldMethodName": "appsTableInit",
            "newMethodName": "appsTableInit"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-1809. Synchronize RM and TimeLineServer Web-UIs. Contributed by Zhijie Shen and Xuan Gong\n",
          "commitDate": "05/03/15 9:20 PM",
          "commitName": "95bfd087dc89e57a93340604cc8b96042fa1a05a",
          "commitAuthor": "Jian He",
          "commitDateOld": "05/03/15 10:58 AM",
          "commitNameOld": "952640fa4cbdc23fe8781e5627c2e8eab565c535",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 0.43,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,12 @@\n-  private String appsTableInit() {\n+  public static String appsTableInit(boolean isFairSchedulerPage) {\n     // id, user, name, queue, starttime, finishtime, state, status, progress, ui\n+    // FairSchedulerPage\u0027s table is a bit different\n     return tableInit()\n       .append(\", \u0027aaData\u0027: appsTableData\")\n       .append(\", bDeferRender: true\")\n       .append(\", bProcessing: true\")\n-\n       .append(\"\\n, aoColumnDefs: \")\n-      .append(getAppsTableColumnDefs())\n-\n+      .append(getAppsTableColumnDefs(isFairSchedulerPage))\n       // Sort by id upon page load\n       .append(\", aaSorting: [[0, \u0027desc\u0027]]}\").toString();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static String appsTableInit(boolean isFairSchedulerPage) {\n    // id, user, name, queue, starttime, finishtime, state, status, progress, ui\n    // FairSchedulerPage\u0027s table is a bit different\n    return tableInit()\n      .append(\", \u0027aaData\u0027: appsTableData\")\n      .append(\", bDeferRender: true\")\n      .append(\", bProcessing: true\")\n      .append(\"\\n, aoColumnDefs: \")\n      .append(getAppsTableColumnDefs(isFairSchedulerPage))\n      // Sort by id upon page load\n      .append(\", aaSorting: [[0, \u0027desc\u0027]]}\").toString();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/webapp/WebPageUtils.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[public, static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-1809. Synchronize RM and TimeLineServer Web-UIs. Contributed by Zhijie Shen and Xuan Gong\n",
          "commitDate": "05/03/15 9:20 PM",
          "commitName": "95bfd087dc89e57a93340604cc8b96042fa1a05a",
          "commitAuthor": "Jian He",
          "commitDateOld": "05/03/15 10:58 AM",
          "commitNameOld": "952640fa4cbdc23fe8781e5627c2e8eab565c535",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 0.43,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,12 @@\n-  private String appsTableInit() {\n+  public static String appsTableInit(boolean isFairSchedulerPage) {\n     // id, user, name, queue, starttime, finishtime, state, status, progress, ui\n+    // FairSchedulerPage\u0027s table is a bit different\n     return tableInit()\n       .append(\", \u0027aaData\u0027: appsTableData\")\n       .append(\", bDeferRender: true\")\n       .append(\", bProcessing: true\")\n-\n       .append(\"\\n, aoColumnDefs: \")\n-      .append(getAppsTableColumnDefs())\n-\n+      .append(getAppsTableColumnDefs(isFairSchedulerPage))\n       // Sort by id upon page load\n       .append(\", aaSorting: [[0, \u0027desc\u0027]]}\").toString();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static String appsTableInit(boolean isFairSchedulerPage) {\n    // id, user, name, queue, starttime, finishtime, state, status, progress, ui\n    // FairSchedulerPage\u0027s table is a bit different\n    return tableInit()\n      .append(\", \u0027aaData\u0027: appsTableData\")\n      .append(\", bDeferRender: true\")\n      .append(\", bProcessing: true\")\n      .append(\"\\n, aoColumnDefs: \")\n      .append(getAppsTableColumnDefs(isFairSchedulerPage))\n      // Sort by id upon page load\n      .append(\", aaSorting: [[0, \u0027desc\u0027]]}\").toString();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/webapp/WebPageUtils.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-1809. Synchronize RM and TimeLineServer Web-UIs. Contributed by Zhijie Shen and Xuan Gong\n",
          "commitDate": "05/03/15 9:20 PM",
          "commitName": "95bfd087dc89e57a93340604cc8b96042fa1a05a",
          "commitAuthor": "Jian He",
          "commitDateOld": "05/03/15 10:58 AM",
          "commitNameOld": "952640fa4cbdc23fe8781e5627c2e8eab565c535",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 0.43,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,12 @@\n-  private String appsTableInit() {\n+  public static String appsTableInit(boolean isFairSchedulerPage) {\n     // id, user, name, queue, starttime, finishtime, state, status, progress, ui\n+    // FairSchedulerPage\u0027s table is a bit different\n     return tableInit()\n       .append(\", \u0027aaData\u0027: appsTableData\")\n       .append(\", bDeferRender: true\")\n       .append(\", bProcessing: true\")\n-\n       .append(\"\\n, aoColumnDefs: \")\n-      .append(getAppsTableColumnDefs())\n-\n+      .append(getAppsTableColumnDefs(isFairSchedulerPage))\n       // Sort by id upon page load\n       .append(\", aaSorting: [[0, \u0027desc\u0027]]}\").toString();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static String appsTableInit(boolean isFairSchedulerPage) {\n    // id, user, name, queue, starttime, finishtime, state, status, progress, ui\n    // FairSchedulerPage\u0027s table is a bit different\n    return tableInit()\n      .append(\", \u0027aaData\u0027: appsTableData\")\n      .append(\", bDeferRender: true\")\n      .append(\", bProcessing: true\")\n      .append(\"\\n, aoColumnDefs: \")\n      .append(getAppsTableColumnDefs(isFairSchedulerPage))\n      // Sort by id upon page load\n      .append(\", aaSorting: [[0, \u0027desc\u0027]]}\").toString();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/webapp/WebPageUtils.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[isFairSchedulerPage-boolean]"
          }
        }
      ]
    },
    "618fa6cd59386b560755b485a760e1f734e3edb3": {
      "type": "Ybodychange",
      "commitMessage": "YARN-267. Fix fair scheduler web UI. Contributed by Sandy Ryza.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1420704 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/12/12 6:35 AM",
      "commitName": "618fa6cd59386b560755b485a760e1f734e3edb3",
      "commitAuthor": "Thomas White",
      "commitDateOld": "06/12/12 7:39 AM",
      "commitNameOld": "2d1237cbb07489fae49a4b3048341b1cc873364c",
      "commitAuthorOld": "Jason Darrell Lowe",
      "daysBetweenCommits": 5.96,
      "commitsBetweenForRepo": 28,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,13 @@\n   private String appsTableInit() {\n     // id, user, name, queue, starttime, finishtime, state, status, progress, ui\n     return tableInit()\n       .append(\", \u0027aaData\u0027: appsTableData\")\n       .append(\", bDeferRender: true\")\n       .append(\", bProcessing: true\")\n \n-      .append(\"\\n, aoColumnDefs: [\\n\")\n-      .append(\"{\u0027sType\u0027:\u0027numeric\u0027, \u0027aTargets\u0027: [0]\")\n-      .append(\", \u0027mRender\u0027: parseHadoopID }\")\n-\n-      .append(\"\\n, {\u0027sType\u0027:\u0027numeric\u0027, \u0027aTargets\u0027: [4, 5]\")\n-      .append(\", \u0027mRender\u0027: renderHadoopDate }\")\n-\n-      .append(\"\\n, {\u0027sType\u0027:\u0027numeric\u0027, bSearchable:false, \u0027aTargets\u0027: [8]\")\n-      .append(\", \u0027mRender\u0027: parseHadoopProgress }]\")\n+      .append(\"\\n, aoColumnDefs: \")\n+      .append(getAppsTableColumnDefs())\n \n       // Sort by id upon page load\n       .append(\", aaSorting: [[0, \u0027desc\u0027]]}\").toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private String appsTableInit() {\n    // id, user, name, queue, starttime, finishtime, state, status, progress, ui\n    return tableInit()\n      .append(\", \u0027aaData\u0027: appsTableData\")\n      .append(\", bDeferRender: true\")\n      .append(\", bProcessing: true\")\n\n      .append(\"\\n, aoColumnDefs: \")\n      .append(getAppsTableColumnDefs())\n\n      // Sort by id upon page load\n      .append(\", aaSorting: [[0, \u0027desc\u0027]]}\").toString();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RmView.java",
      "extendedDetails": {}
    },
    "2d1237cbb07489fae49a4b3048341b1cc873364c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-258. RM web page UI shows Invalid Date for start and finish times. Contributed by Ravi Prakash\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1417948 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/12/12 7:39 AM",
      "commitName": "2d1237cbb07489fae49a4b3048341b1cc873364c",
      "commitAuthor": "Jason Darrell Lowe",
      "commitDateOld": "16/11/12 12:56 PM",
      "commitNameOld": "a23e8b092912998ede1865ec612adb4b7dcca460",
      "commitAuthorOld": "Robert Joseph Evans",
      "daysBetweenCommits": 19.78,
      "commitsBetweenForRepo": 63,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,20 @@\n   private String appsTableInit() {\n-    AppsList list \u003d getInstance(AppsList.class);\n     // id, user, name, queue, starttime, finishtime, state, status, progress, ui\n-    StringBuilder init \u003d tableInit()\n+    return tableInit()\n       .append(\", \u0027aaData\u0027: appsTableData\")\n       .append(\", bDeferRender: true\")\n       .append(\", bProcessing: true\")\n \n       .append(\"\\n, aoColumnDefs: [\\n\")\n       .append(\"{\u0027sType\u0027:\u0027numeric\u0027, \u0027aTargets\u0027: [0]\")\n       .append(\", \u0027mRender\u0027: parseHadoopID }\")\n \n       .append(\"\\n, {\u0027sType\u0027:\u0027numeric\u0027, \u0027aTargets\u0027: [4, 5]\")\n       .append(\", \u0027mRender\u0027: renderHadoopDate }\")\n \n       .append(\"\\n, {\u0027sType\u0027:\u0027numeric\u0027, bSearchable:false, \u0027aTargets\u0027: [8]\")\n       .append(\", \u0027mRender\u0027: parseHadoopProgress }]\")\n \n       // Sort by id upon page load\n-      .append(\", aaSorting: [[0, \u0027desc\u0027]]\");\n-\n-    String rows \u003d $(\"rowlimit\");\n-    int rowLimit \u003d rows.isEmpty() ? MAX_DISPLAY_ROWS : Integer.parseInt(rows);\n-    if (list.apps.size() \u003c rowLimit) {\n-      list.rendering \u003d Render.HTML;\n-      return init.append(\u0027}\u0027).toString();\n-    }\n-    if (list.apps.size() \u003e MAX_FAST_ROWS) {\n-      tableInitProgress(init, list.apps.size() * 6);\n-    }\n-    list.rendering \u003d Render.JS_ARRAY;\n-    return init.append(\", aaData:appsData}\").toString();\n+      .append(\", aaSorting: [[0, \u0027desc\u0027]]}\").toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private String appsTableInit() {\n    // id, user, name, queue, starttime, finishtime, state, status, progress, ui\n    return tableInit()\n      .append(\", \u0027aaData\u0027: appsTableData\")\n      .append(\", bDeferRender: true\")\n      .append(\", bProcessing: true\")\n\n      .append(\"\\n, aoColumnDefs: [\\n\")\n      .append(\"{\u0027sType\u0027:\u0027numeric\u0027, \u0027aTargets\u0027: [0]\")\n      .append(\", \u0027mRender\u0027: parseHadoopID }\")\n\n      .append(\"\\n, {\u0027sType\u0027:\u0027numeric\u0027, \u0027aTargets\u0027: [4, 5]\")\n      .append(\", \u0027mRender\u0027: renderHadoopDate }\")\n\n      .append(\"\\n, {\u0027sType\u0027:\u0027numeric\u0027, bSearchable:false, \u0027aTargets\u0027: [8]\")\n      .append(\", \u0027mRender\u0027: parseHadoopProgress }]\")\n\n      // Sort by id upon page load\n      .append(\", aaSorting: [[0, \u0027desc\u0027]]}\").toString();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RmView.java",
      "extendedDetails": {}
    },
    "a23e8b092912998ede1865ec612adb4b7dcca460": {
      "type": "Ybodychange",
      "commitMessage": "YARN-151. Browser thinks RM main page JS is taking too long (Ravi Prakash via bobby)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1410564 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/11/12 12:56 PM",
      "commitName": "a23e8b092912998ede1865ec612adb4b7dcca460",
      "commitAuthor": "Robert Joseph Evans",
      "commitDateOld": "14/11/12 11:22 AM",
      "commitNameOld": "397c261433fdc3748050905f748d4fc7f5474b46",
      "commitAuthorOld": "Jason Darrell Lowe",
      "daysBetweenCommits": 2.07,
      "commitsBetweenForRepo": 17,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,33 @@\n   private String appsTableInit() {\n     AppsList list \u003d getInstance(AppsList.class);\n     // id, user, name, queue, starttime, finishtime, state, status, progress, ui\n-    StringBuilder init \u003d tableInit().\n-        append(\", aoColumns:[{sType:\u0027title-numeric\u0027}, null, null, null, \").\n-        append(\"{sType:\u0027title-numeric\u0027}, {sType:\u0027title-numeric\u0027} , null, \").\n-        append(\"null,{sType:\u0027title-numeric\u0027, bSearchable:false}, null]\");\n+    StringBuilder init \u003d tableInit()\n+      .append(\", \u0027aaData\u0027: appsTableData\")\n+      .append(\", bDeferRender: true\")\n+      .append(\", bProcessing: true\")\n \n-    // Sort by id upon page load\n-    init.append(\", aaSorting: [[0, \u0027desc\u0027]]\");\n+      .append(\"\\n, aoColumnDefs: [\\n\")\n+      .append(\"{\u0027sType\u0027:\u0027numeric\u0027, \u0027aTargets\u0027: [0]\")\n+      .append(\", \u0027mRender\u0027: parseHadoopID }\")\n+\n+      .append(\"\\n, {\u0027sType\u0027:\u0027numeric\u0027, \u0027aTargets\u0027: [4, 5]\")\n+      .append(\", \u0027mRender\u0027: renderHadoopDate }\")\n+\n+      .append(\"\\n, {\u0027sType\u0027:\u0027numeric\u0027, bSearchable:false, \u0027aTargets\u0027: [8]\")\n+      .append(\", \u0027mRender\u0027: parseHadoopProgress }]\")\n+\n+      // Sort by id upon page load\n+      .append(\", aaSorting: [[0, \u0027desc\u0027]]\");\n \n     String rows \u003d $(\"rowlimit\");\n     int rowLimit \u003d rows.isEmpty() ? MAX_DISPLAY_ROWS : Integer.parseInt(rows);\n     if (list.apps.size() \u003c rowLimit) {\n       list.rendering \u003d Render.HTML;\n       return init.append(\u0027}\u0027).toString();\n     }\n     if (list.apps.size() \u003e MAX_FAST_ROWS) {\n       tableInitProgress(init, list.apps.size() * 6);\n     }\n     list.rendering \u003d Render.JS_ARRAY;\n     return init.append(\", aaData:appsData}\").toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private String appsTableInit() {\n    AppsList list \u003d getInstance(AppsList.class);\n    // id, user, name, queue, starttime, finishtime, state, status, progress, ui\n    StringBuilder init \u003d tableInit()\n      .append(\", \u0027aaData\u0027: appsTableData\")\n      .append(\", bDeferRender: true\")\n      .append(\", bProcessing: true\")\n\n      .append(\"\\n, aoColumnDefs: [\\n\")\n      .append(\"{\u0027sType\u0027:\u0027numeric\u0027, \u0027aTargets\u0027: [0]\")\n      .append(\", \u0027mRender\u0027: parseHadoopID }\")\n\n      .append(\"\\n, {\u0027sType\u0027:\u0027numeric\u0027, \u0027aTargets\u0027: [4, 5]\")\n      .append(\", \u0027mRender\u0027: renderHadoopDate }\")\n\n      .append(\"\\n, {\u0027sType\u0027:\u0027numeric\u0027, bSearchable:false, \u0027aTargets\u0027: [8]\")\n      .append(\", \u0027mRender\u0027: parseHadoopProgress }]\")\n\n      // Sort by id upon page load\n      .append(\", aaSorting: [[0, \u0027desc\u0027]]\");\n\n    String rows \u003d $(\"rowlimit\");\n    int rowLimit \u003d rows.isEmpty() ? MAX_DISPLAY_ROWS : Integer.parseInt(rows);\n    if (list.apps.size() \u003c rowLimit) {\n      list.rendering \u003d Render.HTML;\n      return init.append(\u0027}\u0027).toString();\n    }\n    if (list.apps.size() \u003e MAX_FAST_ROWS) {\n      tableInitProgress(init, list.apps.size() * 6);\n    }\n    list.rendering \u003d Render.JS_ARRAY;\n    return init.append(\", aaData:appsData}\").toString();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RmView.java",
      "extendedDetails": {}
    },
    "9f55dd3a543570daad0ebc195ee29a07419c28c4": {
      "type": "Ybodychange",
      "commitMessage": "YARN-159. RM web ui applications page should be sorted to display last app first (tgraves via bobby)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1404228 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/10/12 9:22 AM",
      "commitName": "9f55dd3a543570daad0ebc195ee29a07419c28c4",
      "commitAuthor": "Robert Joseph Evans",
      "commitDateOld": "07/08/12 10:22 PM",
      "commitNameOld": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 84.46,
      "commitsBetweenForRepo": 524,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   private String appsTableInit() {\n     AppsList list \u003d getInstance(AppsList.class);\n     // id, user, name, queue, starttime, finishtime, state, status, progress, ui\n     StringBuilder init \u003d tableInit().\n         append(\", aoColumns:[{sType:\u0027title-numeric\u0027}, null, null, null, \").\n         append(\"{sType:\u0027title-numeric\u0027}, {sType:\u0027title-numeric\u0027} , null, \").\n         append(\"null,{sType:\u0027title-numeric\u0027, bSearchable:false}, null]\");\n \n     // Sort by id upon page load\n-    init.append(\", aaSorting: [[0, \u0027asc\u0027]]\");\n+    init.append(\", aaSorting: [[0, \u0027desc\u0027]]\");\n \n     String rows \u003d $(\"rowlimit\");\n     int rowLimit \u003d rows.isEmpty() ? MAX_DISPLAY_ROWS : Integer.parseInt(rows);\n     if (list.apps.size() \u003c rowLimit) {\n       list.rendering \u003d Render.HTML;\n       return init.append(\u0027}\u0027).toString();\n     }\n     if (list.apps.size() \u003e MAX_FAST_ROWS) {\n       tableInitProgress(init, list.apps.size() * 6);\n     }\n     list.rendering \u003d Render.JS_ARRAY;\n     return init.append(\", aaData:appsData}\").toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private String appsTableInit() {\n    AppsList list \u003d getInstance(AppsList.class);\n    // id, user, name, queue, starttime, finishtime, state, status, progress, ui\n    StringBuilder init \u003d tableInit().\n        append(\", aoColumns:[{sType:\u0027title-numeric\u0027}, null, null, null, \").\n        append(\"{sType:\u0027title-numeric\u0027}, {sType:\u0027title-numeric\u0027} , null, \").\n        append(\"null,{sType:\u0027title-numeric\u0027, bSearchable:false}, null]\");\n\n    // Sort by id upon page load\n    init.append(\", aaSorting: [[0, \u0027desc\u0027]]\");\n\n    String rows \u003d $(\"rowlimit\");\n    int rowLimit \u003d rows.isEmpty() ? MAX_DISPLAY_ROWS : Integer.parseInt(rows);\n    if (list.apps.size() \u003c rowLimit) {\n      list.rendering \u003d Render.HTML;\n      return init.append(\u0027}\u0027).toString();\n    }\n    if (list.apps.size() \u003e MAX_FAST_ROWS) {\n      tableInitProgress(init, list.apps.size() * 6);\n    }\n    list.rendering \u003d Render.JS_ARRAY;\n    return init.append(\", aaData:appsData}\").toString();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RmView.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private String appsTableInit() {\n    AppsList list \u003d getInstance(AppsList.class);\n    // id, user, name, queue, starttime, finishtime, state, status, progress, ui\n    StringBuilder init \u003d tableInit().\n        append(\", aoColumns:[{sType:\u0027title-numeric\u0027}, null, null, null, \").\n        append(\"{sType:\u0027title-numeric\u0027}, {sType:\u0027title-numeric\u0027} , null, \").\n        append(\"null,{sType:\u0027title-numeric\u0027, bSearchable:false}, null]\");\n\n    // Sort by id upon page load\n    init.append(\", aaSorting: [[0, \u0027asc\u0027]]\");\n\n    String rows \u003d $(\"rowlimit\");\n    int rowLimit \u003d rows.isEmpty() ? MAX_DISPLAY_ROWS : Integer.parseInt(rows);\n    if (list.apps.size() \u003c rowLimit) {\n      list.rendering \u003d Render.HTML;\n      return init.append(\u0027}\u0027).toString();\n    }\n    if (list.apps.size() \u003e MAX_FAST_ROWS) {\n      tableInitProgress(init, list.apps.size() * 6);\n    }\n    list.rendering \u003d Render.JS_ARRAY;\n    return init.append(\", aaData:appsData}\").toString();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RmView.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RmView.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RmView.java"
      }
    },
    "d3599de399e641b8f1ca657edd5c19dade5e6702": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-4220. RM apps page starttime/endtime sorts are incorrect (Jonathan Eagles via bobby)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1335096 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/05/12 9:18 AM",
      "commitName": "d3599de399e641b8f1ca657edd5c19dade5e6702",
      "commitAuthor": "Robert Joseph Evans",
      "commitDateOld": "27/02/12 8:44 AM",
      "commitNameOld": "d6170f00b12c0d2737f71da8e93dfffdbc1b2d34",
      "commitAuthorOld": "Thomas Graves",
      "daysBetweenCommits": 69.98,
      "commitsBetweenForRepo": 509,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   private String appsTableInit() {\n     AppsList list \u003d getInstance(AppsList.class);\n-    // id, user, name, queue, starttime, finishtime, state, progress, ui\n+    // id, user, name, queue, starttime, finishtime, state, status, progress, ui\n     StringBuilder init \u003d tableInit().\n         append(\", aoColumns:[{sType:\u0027title-numeric\u0027}, null, null, null, \").\n-        append(\"null, null , null, \").\n+        append(\"{sType:\u0027title-numeric\u0027}, {sType:\u0027title-numeric\u0027} , null, \").\n         append(\"null,{sType:\u0027title-numeric\u0027, bSearchable:false}, null]\");\n \n     // Sort by id upon page load\n     init.append(\", aaSorting: [[0, \u0027asc\u0027]]\");\n \n     String rows \u003d $(\"rowlimit\");\n     int rowLimit \u003d rows.isEmpty() ? MAX_DISPLAY_ROWS : Integer.parseInt(rows);\n     if (list.apps.size() \u003c rowLimit) {\n       list.rendering \u003d Render.HTML;\n       return init.append(\u0027}\u0027).toString();\n     }\n     if (list.apps.size() \u003e MAX_FAST_ROWS) {\n       tableInitProgress(init, list.apps.size() * 6);\n     }\n     list.rendering \u003d Render.JS_ARRAY;\n     return init.append(\", aaData:appsData}\").toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private String appsTableInit() {\n    AppsList list \u003d getInstance(AppsList.class);\n    // id, user, name, queue, starttime, finishtime, state, status, progress, ui\n    StringBuilder init \u003d tableInit().\n        append(\", aoColumns:[{sType:\u0027title-numeric\u0027}, null, null, null, \").\n        append(\"{sType:\u0027title-numeric\u0027}, {sType:\u0027title-numeric\u0027} , null, \").\n        append(\"null,{sType:\u0027title-numeric\u0027, bSearchable:false}, null]\");\n\n    // Sort by id upon page load\n    init.append(\", aaSorting: [[0, \u0027asc\u0027]]\");\n\n    String rows \u003d $(\"rowlimit\");\n    int rowLimit \u003d rows.isEmpty() ? MAX_DISPLAY_ROWS : Integer.parseInt(rows);\n    if (list.apps.size() \u003c rowLimit) {\n      list.rendering \u003d Render.HTML;\n      return init.append(\u0027}\u0027).toString();\n    }\n    if (list.apps.size() \u003e MAX_FAST_ROWS) {\n      tableInitProgress(init, list.apps.size() * 6);\n    }\n    list.rendering \u003d Render.JS_ARRAY;\n    return init.append(\", aaData:appsData}\").toString();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RmView.java",
      "extendedDetails": {}
    },
    "d6170f00b12c0d2737f71da8e93dfffdbc1b2d34": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3913. RM application webpage is unresponsive after 2000 jobs (Jason Lowe via tgraves)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1294207 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/02/12 8:44 AM",
      "commitName": "d6170f00b12c0d2737f71da8e93dfffdbc1b2d34",
      "commitAuthor": "Thomas Graves",
      "commitDateOld": "05/02/12 7:38 PM",
      "commitNameOld": "c7007a8a3508a24a6f023302516fe8fbe270eab1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 21.55,
      "commitsBetweenForRepo": 137,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,23 @@\n   private String appsTableInit() {\n     AppsList list \u003d getInstance(AppsList.class);\n     // id, user, name, queue, starttime, finishtime, state, progress, ui\n     StringBuilder init \u003d tableInit().\n         append(\", aoColumns:[{sType:\u0027title-numeric\u0027}, null, null, null, \").\n         append(\"null, null , null, \").\n         append(\"null,{sType:\u0027title-numeric\u0027, bSearchable:false}, null]\");\n \n     // Sort by id upon page load\n     init.append(\", aaSorting: [[0, \u0027asc\u0027]]\");\n \n     String rows \u003d $(\"rowlimit\");\n     int rowLimit \u003d rows.isEmpty() ? MAX_DISPLAY_ROWS : Integer.parseInt(rows);\n     if (list.apps.size() \u003c rowLimit) {\n       list.rendering \u003d Render.HTML;\n       return init.append(\u0027}\u0027).toString();\n     }\n     if (list.apps.size() \u003e MAX_FAST_ROWS) {\n       tableInitProgress(init, list.apps.size() * 6);\n     }\n-    if (list.apps.size() \u003e MAX_INLINE_ROWS) {\n-      list.rendering \u003d Render.JS_LOAD;\n-      return init.append(\", sAjaxSource:\u0027\").append(url(\"apps\", \"json\")).\n-          append(\"\u0027}\").toString();\n-    }\n     list.rendering \u003d Render.JS_ARRAY;\n     return init.append(\", aaData:appsData}\").toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private String appsTableInit() {\n    AppsList list \u003d getInstance(AppsList.class);\n    // id, user, name, queue, starttime, finishtime, state, progress, ui\n    StringBuilder init \u003d tableInit().\n        append(\", aoColumns:[{sType:\u0027title-numeric\u0027}, null, null, null, \").\n        append(\"null, null , null, \").\n        append(\"null,{sType:\u0027title-numeric\u0027, bSearchable:false}, null]\");\n\n    // Sort by id upon page load\n    init.append(\", aaSorting: [[0, \u0027asc\u0027]]\");\n\n    String rows \u003d $(\"rowlimit\");\n    int rowLimit \u003d rows.isEmpty() ? MAX_DISPLAY_ROWS : Integer.parseInt(rows);\n    if (list.apps.size() \u003c rowLimit) {\n      list.rendering \u003d Render.HTML;\n      return init.append(\u0027}\u0027).toString();\n    }\n    if (list.apps.size() \u003e MAX_FAST_ROWS) {\n      tableInitProgress(init, list.apps.size() * 6);\n    }\n    list.rendering \u003d Render.JS_ARRAY;\n    return init.append(\", aaData:appsData}\").toString();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RmView.java",
      "extendedDetails": {}
    },
    "c7007a8a3508a24a6f023302516fe8fbe270eab1": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3747. Initialize queue metrics upfront and added start/finish time to RM Web-UI. \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1240886 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/02/12 7:38 PM",
      "commitName": "c7007a8a3508a24a6f023302516fe8fbe270eab1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "31/01/12 4:51 PM",
      "commitNameOld": "d1f805f942def3f7d62cba222e764095cbe0cfd0",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 5.12,
      "commitsBetweenForRepo": 42,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,28 @@\n   private String appsTableInit() {\n     AppsList list \u003d getInstance(AppsList.class);\n-    // id, user, name, queue, state, progress, ui, note\n+    // id, user, name, queue, starttime, finishtime, state, progress, ui\n     StringBuilder init \u003d tableInit().\n-        append(\", aoColumns:[{sType:\u0027title-numeric\u0027}, null, null, null, null,\").\n-        append(\"null,{sType:\u0027title-numeric\u0027, bSearchable:false}, null, null]\");\n+        append(\", aoColumns:[{sType:\u0027title-numeric\u0027}, null, null, null, \").\n+        append(\"null, null , null, \").\n+        append(\"null,{sType:\u0027title-numeric\u0027, bSearchable:false}, null]\");\n \n     // Sort by id upon page load\n     init.append(\", aaSorting: [[0, \u0027asc\u0027]]\");\n \n     String rows \u003d $(\"rowlimit\");\n     int rowLimit \u003d rows.isEmpty() ? MAX_DISPLAY_ROWS : Integer.parseInt(rows);\n     if (list.apps.size() \u003c rowLimit) {\n       list.rendering \u003d Render.HTML;\n       return init.append(\u0027}\u0027).toString();\n     }\n     if (list.apps.size() \u003e MAX_FAST_ROWS) {\n       tableInitProgress(init, list.apps.size() * 6);\n     }\n     if (list.apps.size() \u003e MAX_INLINE_ROWS) {\n       list.rendering \u003d Render.JS_LOAD;\n       return init.append(\", sAjaxSource:\u0027\").append(url(\"apps\", \"json\")).\n           append(\"\u0027}\").toString();\n     }\n     list.rendering \u003d Render.JS_ARRAY;\n     return init.append(\", aaData:appsData}\").toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private String appsTableInit() {\n    AppsList list \u003d getInstance(AppsList.class);\n    // id, user, name, queue, starttime, finishtime, state, progress, ui\n    StringBuilder init \u003d tableInit().\n        append(\", aoColumns:[{sType:\u0027title-numeric\u0027}, null, null, null, \").\n        append(\"null, null , null, \").\n        append(\"null,{sType:\u0027title-numeric\u0027, bSearchable:false}, null]\");\n\n    // Sort by id upon page load\n    init.append(\", aaSorting: [[0, \u0027asc\u0027]]\");\n\n    String rows \u003d $(\"rowlimit\");\n    int rowLimit \u003d rows.isEmpty() ? MAX_DISPLAY_ROWS : Integer.parseInt(rows);\n    if (list.apps.size() \u003c rowLimit) {\n      list.rendering \u003d Render.HTML;\n      return init.append(\u0027}\u0027).toString();\n    }\n    if (list.apps.size() \u003e MAX_FAST_ROWS) {\n      tableInitProgress(init, list.apps.size() * 6);\n    }\n    if (list.apps.size() \u003e MAX_INLINE_ROWS) {\n      list.rendering \u003d Render.JS_LOAD;\n      return init.append(\", sAjaxSource:\u0027\").append(url(\"apps\", \"json\")).\n          append(\"\u0027}\").toString();\n    }\n    list.rendering \u003d Render.JS_ARRAY;\n    return init.append(\", aaData:appsData}\").toString();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RmView.java",
      "extendedDetails": {}
    },
    "cc4a468113831e502b26c571d04e31b475bca5c1": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3413. RM web ui applications not sorted in any order by default. (Jonathan Eagles via mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1206926 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/11/11 3:56 PM",
      "commitName": "cc4a468113831e502b26c571d04e31b475bca5c1",
      "commitAuthor": "Mahadev Konar",
      "commitDateOld": "05/10/11 7:01 AM",
      "commitNameOld": "9a4e890f4aadc921fa468fd1292d215704429b61",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 53.41,
      "commitsBetweenForRepo": 382,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,27 @@\n   private String appsTableInit() {\n     AppsList list \u003d getInstance(AppsList.class);\n     // id, user, name, queue, state, progress, ui, note\n     StringBuilder init \u003d tableInit().\n         append(\", aoColumns:[{sType:\u0027title-numeric\u0027}, null, null, null, null,\").\n         append(\"null,{sType:\u0027title-numeric\u0027, bSearchable:false}, null, null]\");\n+\n+    // Sort by id upon page load\n+    init.append(\", aaSorting: [[0, \u0027asc\u0027]]\");\n+\n     String rows \u003d $(\"rowlimit\");\n     int rowLimit \u003d rows.isEmpty() ? MAX_DISPLAY_ROWS : Integer.parseInt(rows);\n     if (list.apps.size() \u003c rowLimit) {\n       list.rendering \u003d Render.HTML;\n       return init.append(\u0027}\u0027).toString();\n     }\n     if (list.apps.size() \u003e MAX_FAST_ROWS) {\n       tableInitProgress(init, list.apps.size() * 6);\n     }\n     if (list.apps.size() \u003e MAX_INLINE_ROWS) {\n       list.rendering \u003d Render.JS_LOAD;\n       return init.append(\", sAjaxSource:\u0027\").append(url(\"apps\", \"json\")).\n           append(\"\u0027}\").toString();\n     }\n     list.rendering \u003d Render.JS_ARRAY;\n     return init.append(\", aaData:appsData}\").toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private String appsTableInit() {\n    AppsList list \u003d getInstance(AppsList.class);\n    // id, user, name, queue, state, progress, ui, note\n    StringBuilder init \u003d tableInit().\n        append(\", aoColumns:[{sType:\u0027title-numeric\u0027}, null, null, null, null,\").\n        append(\"null,{sType:\u0027title-numeric\u0027, bSearchable:false}, null, null]\");\n\n    // Sort by id upon page load\n    init.append(\", aaSorting: [[0, \u0027asc\u0027]]\");\n\n    String rows \u003d $(\"rowlimit\");\n    int rowLimit \u003d rows.isEmpty() ? MAX_DISPLAY_ROWS : Integer.parseInt(rows);\n    if (list.apps.size() \u003c rowLimit) {\n      list.rendering \u003d Render.HTML;\n      return init.append(\u0027}\u0027).toString();\n    }\n    if (list.apps.size() \u003e MAX_FAST_ROWS) {\n      tableInitProgress(init, list.apps.size() * 6);\n    }\n    if (list.apps.size() \u003e MAX_INLINE_ROWS) {\n      list.rendering \u003d Render.JS_LOAD;\n      return init.append(\", sAjaxSource:\u0027\").append(url(\"apps\", \"json\")).\n          append(\"\u0027}\").toString();\n    }\n    list.rendering \u003d Render.JS_ARRAY;\n    return init.append(\", aaData:appsData}\").toString();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RmView.java",
      "extendedDetails": {}
    },
    "9a4e890f4aadc921fa468fd1292d215704429b61": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2738. Added the missing cluster level statisticss on the RM web UI. Contributed by Robert Joseph Evans.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1179229 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/10/11 7:01 AM",
      "commitName": "9a4e890f4aadc921fa468fd1292d215704429b61",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "24/08/11 5:14 PM",
      "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 41.57,
      "commitsBetweenForRepo": 271,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   private String appsTableInit() {\n     AppsList list \u003d getInstance(AppsList.class);\n     // id, user, name, queue, state, progress, ui, note\n     StringBuilder init \u003d tableInit().\n         append(\", aoColumns:[{sType:\u0027title-numeric\u0027}, null, null, null, null,\").\n-        append(\"{sType:\u0027title-numeric\u0027, bSearchable:false}, null, null]\");\n+        append(\"null,{sType:\u0027title-numeric\u0027, bSearchable:false}, null, null]\");\n     String rows \u003d $(\"rowlimit\");\n     int rowLimit \u003d rows.isEmpty() ? MAX_DISPLAY_ROWS : Integer.parseInt(rows);\n     if (list.apps.size() \u003c rowLimit) {\n       list.rendering \u003d Render.HTML;\n       return init.append(\u0027}\u0027).toString();\n     }\n     if (list.apps.size() \u003e MAX_FAST_ROWS) {\n       tableInitProgress(init, list.apps.size() * 6);\n     }\n     if (list.apps.size() \u003e MAX_INLINE_ROWS) {\n       list.rendering \u003d Render.JS_LOAD;\n       return init.append(\", sAjaxSource:\u0027\").append(url(\"apps\", \"json\")).\n           append(\"\u0027}\").toString();\n     }\n     list.rendering \u003d Render.JS_ARRAY;\n     return init.append(\", aaData:appsData}\").toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private String appsTableInit() {\n    AppsList list \u003d getInstance(AppsList.class);\n    // id, user, name, queue, state, progress, ui, note\n    StringBuilder init \u003d tableInit().\n        append(\", aoColumns:[{sType:\u0027title-numeric\u0027}, null, null, null, null,\").\n        append(\"null,{sType:\u0027title-numeric\u0027, bSearchable:false}, null, null]\");\n    String rows \u003d $(\"rowlimit\");\n    int rowLimit \u003d rows.isEmpty() ? MAX_DISPLAY_ROWS : Integer.parseInt(rows);\n    if (list.apps.size() \u003c rowLimit) {\n      list.rendering \u003d Render.HTML;\n      return init.append(\u0027}\u0027).toString();\n    }\n    if (list.apps.size() \u003e MAX_FAST_ROWS) {\n      tableInitProgress(init, list.apps.size() * 6);\n    }\n    if (list.apps.size() \u003e MAX_INLINE_ROWS) {\n      list.rendering \u003d Render.JS_LOAD;\n      return init.append(\", sAjaxSource:\u0027\").append(url(\"apps\", \"json\")).\n          append(\"\u0027}\").toString();\n    }\n    list.rendering \u003d Render.JS_ARRAY;\n    return init.append(\", aaData:appsData}\").toString();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RmView.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private String appsTableInit() {\n    AppsList list \u003d getInstance(AppsList.class);\n    // id, user, name, queue, state, progress, ui, note\n    StringBuilder init \u003d tableInit().\n        append(\", aoColumns:[{sType:\u0027title-numeric\u0027}, null, null, null, null,\").\n        append(\"{sType:\u0027title-numeric\u0027, bSearchable:false}, null, null]\");\n    String rows \u003d $(\"rowlimit\");\n    int rowLimit \u003d rows.isEmpty() ? MAX_DISPLAY_ROWS : Integer.parseInt(rows);\n    if (list.apps.size() \u003c rowLimit) {\n      list.rendering \u003d Render.HTML;\n      return init.append(\u0027}\u0027).toString();\n    }\n    if (list.apps.size() \u003e MAX_FAST_ROWS) {\n      tableInitProgress(init, list.apps.size() * 6);\n    }\n    if (list.apps.size() \u003e MAX_INLINE_ROWS) {\n      list.rendering \u003d Render.JS_LOAD;\n      return init.append(\", sAjaxSource:\u0027\").append(url(\"apps\", \"json\")).\n          append(\"\u0027}\").toString();\n    }\n    list.rendering \u003d Render.JS_ARRAY;\n    return init.append(\", aaData:appsData}\").toString();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RmView.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RmView.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RmView.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,23 @@\n+  private String appsTableInit() {\n+    AppsList list \u003d getInstance(AppsList.class);\n+    // id, user, name, queue, state, progress, ui, note\n+    StringBuilder init \u003d tableInit().\n+        append(\", aoColumns:[{sType:\u0027title-numeric\u0027}, null, null, null, null,\").\n+        append(\"{sType:\u0027title-numeric\u0027, bSearchable:false}, null, null]\");\n+    String rows \u003d $(\"rowlimit\");\n+    int rowLimit \u003d rows.isEmpty() ? MAX_DISPLAY_ROWS : Integer.parseInt(rows);\n+    if (list.apps.size() \u003c rowLimit) {\n+      list.rendering \u003d Render.HTML;\n+      return init.append(\u0027}\u0027).toString();\n+    }\n+    if (list.apps.size() \u003e MAX_FAST_ROWS) {\n+      tableInitProgress(init, list.apps.size() * 6);\n+    }\n+    if (list.apps.size() \u003e MAX_INLINE_ROWS) {\n+      list.rendering \u003d Render.JS_LOAD;\n+      return init.append(\", sAjaxSource:\u0027\").append(url(\"apps\", \"json\")).\n+          append(\"\u0027}\").toString();\n+    }\n+    list.rendering \u003d Render.JS_ARRAY;\n+    return init.append(\", aaData:appsData}\").toString();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private String appsTableInit() {\n    AppsList list \u003d getInstance(AppsList.class);\n    // id, user, name, queue, state, progress, ui, note\n    StringBuilder init \u003d tableInit().\n        append(\", aoColumns:[{sType:\u0027title-numeric\u0027}, null, null, null, null,\").\n        append(\"{sType:\u0027title-numeric\u0027, bSearchable:false}, null, null]\");\n    String rows \u003d $(\"rowlimit\");\n    int rowLimit \u003d rows.isEmpty() ? MAX_DISPLAY_ROWS : Integer.parseInt(rows);\n    if (list.apps.size() \u003c rowLimit) {\n      list.rendering \u003d Render.HTML;\n      return init.append(\u0027}\u0027).toString();\n    }\n    if (list.apps.size() \u003e MAX_FAST_ROWS) {\n      tableInitProgress(init, list.apps.size() * 6);\n    }\n    if (list.apps.size() \u003e MAX_INLINE_ROWS) {\n      list.rendering \u003d Render.JS_LOAD;\n      return init.append(\", sAjaxSource:\u0027\").append(url(\"apps\", \"json\")).\n          append(\"\u0027}\").toString();\n    }\n    list.rendering \u003d Render.JS_ARRAY;\n    return init.append(\", aaData:appsData}\").toString();\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RmView.java"
    }
  }
}