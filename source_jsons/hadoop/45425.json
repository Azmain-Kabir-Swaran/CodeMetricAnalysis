{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TimelineConnector.java",
  "functionName": "operateDelegationToken",
  "functionId": "operateDelegationToken___action-PrivilegedExceptionAction__?__(modifiers-final)",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/api/impl/TimelineConnector.java",
  "functionStartLine": 215,
  "functionEndLine": 223,
  "numCommitsSeen": 50,
  "timeTaken": 3830,
  "changeHistory": [
    "4fa1afdb883dab8786d2fb5c72a195dd2e87d711",
    "477003730e6a7c7eff11892f5cedf74073ca867b",
    "d6e05c5ee26feefc17267b7c9db1e2a3dbdef117",
    "d1abc5d4fc00bb1b226066684556ba16ace71744",
    "1b4be918664b09272b120bc42de3e5fc02d79047"
  ],
  "changeHistoryShort": {
    "4fa1afdb883dab8786d2fb5c72a195dd2e87d711": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange)",
    "477003730e6a7c7eff11892f5cedf74073ca867b": "Ybodychange",
    "d6e05c5ee26feefc17267b7c9db1e2a3dbdef117": "Ybodychange",
    "d1abc5d4fc00bb1b226066684556ba16ace71744": "Ybodychange",
    "1b4be918664b09272b120bc42de3e5fc02d79047": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4fa1afdb883dab8786d2fb5c72a195dd2e87d711": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-4675. Reorganize TimelineClient and TimelineClientImpl into separate classes for ATSv1.x and ATSv2. Contributed by Naganarasimha G R.\n",
      "commitDate": "16/02/17 11:41 AM",
      "commitName": "4fa1afdb883dab8786d2fb5c72a195dd2e87d711",
      "commitAuthor": "Sangjin Lee",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-4675. Reorganize TimelineClient and TimelineClientImpl into separate classes for ATSv1.x and ATSv2. Contributed by Naganarasimha G R.\n",
          "commitDate": "16/02/17 11:41 AM",
          "commitName": "4fa1afdb883dab8786d2fb5c72a195dd2e87d711",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "16/02/17 5:39 AM",
          "commitNameOld": "5690b51ef7c708c0a71162ddaff04466bc71cdcc",
          "commitAuthorOld": "Wei-Chiu Chuang",
          "daysBetweenCommits": 0.25,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,9 @@\n-  private Object operateDelegationToken(\n+  public Object operateDelegationToken(\n       final PrivilegedExceptionAction\u003c?\u003e action)\n       throws IOException, YarnException {\n     // Set up the retry operation\n     TimelineClientRetryOp tokenRetryOp \u003d\n-        createTimelineClientRetryOpForOperateDelegationToken(action);\n+        createRetryOpForOperateDelegationToken(action);\n \n     return connectionRetry.retryOn(tokenRetryOp);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Object operateDelegationToken(\n      final PrivilegedExceptionAction\u003c?\u003e action)\n      throws IOException, YarnException {\n    // Set up the retry operation\n    TimelineClientRetryOp tokenRetryOp \u003d\n        createRetryOpForOperateDelegationToken(action);\n\n    return connectionRetry.retryOn(tokenRetryOp);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/api/impl/TimelineConnector.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/api/impl/TimelineClientImpl.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/api/impl/TimelineConnector.java",
            "oldMethodName": "operateDelegationToken",
            "newMethodName": "operateDelegationToken"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-4675. Reorganize TimelineClient and TimelineClientImpl into separate classes for ATSv1.x and ATSv2. Contributed by Naganarasimha G R.\n",
          "commitDate": "16/02/17 11:41 AM",
          "commitName": "4fa1afdb883dab8786d2fb5c72a195dd2e87d711",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "16/02/17 5:39 AM",
          "commitNameOld": "5690b51ef7c708c0a71162ddaff04466bc71cdcc",
          "commitAuthorOld": "Wei-Chiu Chuang",
          "daysBetweenCommits": 0.25,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,9 @@\n-  private Object operateDelegationToken(\n+  public Object operateDelegationToken(\n       final PrivilegedExceptionAction\u003c?\u003e action)\n       throws IOException, YarnException {\n     // Set up the retry operation\n     TimelineClientRetryOp tokenRetryOp \u003d\n-        createTimelineClientRetryOpForOperateDelegationToken(action);\n+        createRetryOpForOperateDelegationToken(action);\n \n     return connectionRetry.retryOn(tokenRetryOp);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Object operateDelegationToken(\n      final PrivilegedExceptionAction\u003c?\u003e action)\n      throws IOException, YarnException {\n    // Set up the retry operation\n    TimelineClientRetryOp tokenRetryOp \u003d\n        createRetryOpForOperateDelegationToken(action);\n\n    return connectionRetry.retryOn(tokenRetryOp);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/api/impl/TimelineConnector.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4675. Reorganize TimelineClient and TimelineClientImpl into separate classes for ATSv1.x and ATSv2. Contributed by Naganarasimha G R.\n",
          "commitDate": "16/02/17 11:41 AM",
          "commitName": "4fa1afdb883dab8786d2fb5c72a195dd2e87d711",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "16/02/17 5:39 AM",
          "commitNameOld": "5690b51ef7c708c0a71162ddaff04466bc71cdcc",
          "commitAuthorOld": "Wei-Chiu Chuang",
          "daysBetweenCommits": 0.25,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,9 @@\n-  private Object operateDelegationToken(\n+  public Object operateDelegationToken(\n       final PrivilegedExceptionAction\u003c?\u003e action)\n       throws IOException, YarnException {\n     // Set up the retry operation\n     TimelineClientRetryOp tokenRetryOp \u003d\n-        createTimelineClientRetryOpForOperateDelegationToken(action);\n+        createRetryOpForOperateDelegationToken(action);\n \n     return connectionRetry.retryOn(tokenRetryOp);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Object operateDelegationToken(\n      final PrivilegedExceptionAction\u003c?\u003e action)\n      throws IOException, YarnException {\n    // Set up the retry operation\n    TimelineClientRetryOp tokenRetryOp \u003d\n        createRetryOpForOperateDelegationToken(action);\n\n    return connectionRetry.retryOn(tokenRetryOp);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/api/impl/TimelineConnector.java",
          "extendedDetails": {}
        }
      ]
    },
    "477003730e6a7c7eff11892f5cedf74073ca867b": {
      "type": "Ybodychange",
      "commitMessage": "Fixed TimelineClient to retry SocketTimeoutException too. Contributed by Xuan Gong.\n",
      "commitDate": "18/04/16 11:47 AM",
      "commitName": "477003730e6a7c7eff11892f5cedf74073ca867b",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "10/03/16 10:51 AM",
      "commitNameOld": "d49cfb350454c2dfa2f3eb70f79b6d5030ce7bec",
      "commitAuthorOld": "Li Lu",
      "daysBetweenCommits": 39.0,
      "commitsBetweenForRepo": 226,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,9 @@\n   private Object operateDelegationToken(\n       final PrivilegedExceptionAction\u003c?\u003e action)\n       throws IOException, YarnException {\n     // Set up the retry operation\n-    TimelineClientRetryOp tokenRetryOp \u003d new TimelineClientRetryOp() {\n-\n-      @Override\n-      public Object run() throws IOException {\n-        // Try pass the request, if fail, keep retrying\n-        authUgi.checkTGTAndReloginFromKeytab();\n-        try {\n-          return authUgi.doAs(action);\n-        } catch (UndeclaredThrowableException e) {\n-          throw new IOException(e.getCause());\n-        } catch (InterruptedException e) {\n-          throw new IOException(e);\n-        }\n-      }\n-\n-      @Override\n-      public boolean shouldRetryOn(Exception e) {\n-        // Only retry on connection exceptions\n-        return (e instanceof ConnectException);\n-      }\n-    };\n+    TimelineClientRetryOp tokenRetryOp \u003d\n+        createTimelineClientRetryOpForOperateDelegationToken(action);\n \n     return connectionRetry.retryOn(tokenRetryOp);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private Object operateDelegationToken(\n      final PrivilegedExceptionAction\u003c?\u003e action)\n      throws IOException, YarnException {\n    // Set up the retry operation\n    TimelineClientRetryOp tokenRetryOp \u003d\n        createTimelineClientRetryOpForOperateDelegationToken(action);\n\n    return connectionRetry.retryOn(tokenRetryOp);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/api/impl/TimelineClientImpl.java",
      "extendedDetails": {}
    },
    "d6e05c5ee26feefc17267b7c9db1e2a3dbdef117": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3287. Made TimelineClient put methods do as the correct login context. Contributed by Daryn Sharp and Jonathan Eagles.\n",
      "commitDate": "09/03/15 1:54 PM",
      "commitName": "d6e05c5ee26feefc17267b7c9db1e2a3dbdef117",
      "commitAuthor": "Zhijie Shen",
      "commitDateOld": "06/03/15 1:32 PM",
      "commitNameOld": "d1abc5d4fc00bb1b226066684556ba16ace71744",
      "commitAuthorOld": "Xuan",
      "daysBetweenCommits": 2.97,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,28 @@\n   private Object operateDelegationToken(\n       final PrivilegedExceptionAction\u003c?\u003e action)\n       throws IOException, YarnException {\n     // Set up the retry operation\n     TimelineClientRetryOp tokenRetryOp \u003d new TimelineClientRetryOp() {\n \n       @Override\n       public Object run() throws IOException {\n         // Try pass the request, if fail, keep retrying\n-        boolean isProxyAccess \u003d\n-            UserGroupInformation.getCurrentUser().getAuthenticationMethod()\n-            \u003d\u003d UserGroupInformation.AuthenticationMethod.PROXY;\n-        UserGroupInformation callerUGI \u003d isProxyAccess ?\n-            UserGroupInformation.getCurrentUser().getRealUser()\n-            : UserGroupInformation.getCurrentUser();\n-        callerUGI.checkTGTAndReloginFromKeytab();\n+        authUgi.checkTGTAndReloginFromKeytab();\n         try {\n-          return callerUGI.doAs(action);\n+          return authUgi.doAs(action);\n         } catch (UndeclaredThrowableException e) {\n           throw new IOException(e.getCause());\n         } catch (InterruptedException e) {\n           throw new IOException(e);\n         }\n       }\n \n       @Override\n       public boolean shouldRetryOn(Exception e) {\n         // Only retry on connection exceptions\n         return (e instanceof ConnectException);\n       }\n     };\n \n     return connectionRetry.retryOn(tokenRetryOp);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private Object operateDelegationToken(\n      final PrivilegedExceptionAction\u003c?\u003e action)\n      throws IOException, YarnException {\n    // Set up the retry operation\n    TimelineClientRetryOp tokenRetryOp \u003d new TimelineClientRetryOp() {\n\n      @Override\n      public Object run() throws IOException {\n        // Try pass the request, if fail, keep retrying\n        authUgi.checkTGTAndReloginFromKeytab();\n        try {\n          return authUgi.doAs(action);\n        } catch (UndeclaredThrowableException e) {\n          throw new IOException(e.getCause());\n        } catch (InterruptedException e) {\n          throw new IOException(e);\n        }\n      }\n\n      @Override\n      public boolean shouldRetryOn(Exception e) {\n        // Only retry on connection exceptions\n        return (e instanceof ConnectException);\n      }\n    };\n\n    return connectionRetry.retryOn(tokenRetryOp);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/api/impl/TimelineClientImpl.java",
      "extendedDetails": {}
    },
    "d1abc5d4fc00bb1b226066684556ba16ace71744": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3227. Timeline renew delegation token fails when RM user\u0027s TGT is\nexpired. Contributed by Zhijie Shen\n",
      "commitDate": "06/03/15 1:32 PM",
      "commitName": "d1abc5d4fc00bb1b226066684556ba16ace71744",
      "commitAuthor": "Xuan",
      "commitDateOld": "09/02/15 5:20 PM",
      "commitNameOld": "00a748d24a565bce0cc8cfa2bdcf165778cea395",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 24.84,
      "commitsBetweenForRepo": 250,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,34 @@\n   private Object operateDelegationToken(\n       final PrivilegedExceptionAction\u003c?\u003e action)\n       throws IOException, YarnException {\n     // Set up the retry operation\n     TimelineClientRetryOp tokenRetryOp \u003d new TimelineClientRetryOp() {\n \n       @Override\n       public Object run() throws IOException {\n         // Try pass the request, if fail, keep retrying\n         boolean isProxyAccess \u003d\n             UserGroupInformation.getCurrentUser().getAuthenticationMethod()\n             \u003d\u003d UserGroupInformation.AuthenticationMethod.PROXY;\n         UserGroupInformation callerUGI \u003d isProxyAccess ?\n             UserGroupInformation.getCurrentUser().getRealUser()\n             : UserGroupInformation.getCurrentUser();\n+        callerUGI.checkTGTAndReloginFromKeytab();\n         try {\n           return callerUGI.doAs(action);\n         } catch (UndeclaredThrowableException e) {\n           throw new IOException(e.getCause());\n         } catch (InterruptedException e) {\n           throw new IOException(e);\n         }\n       }\n \n       @Override\n       public boolean shouldRetryOn(Exception e) {\n         // Only retry on connection exceptions\n         return (e instanceof ConnectException);\n       }\n     };\n \n     return connectionRetry.retryOn(tokenRetryOp);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private Object operateDelegationToken(\n      final PrivilegedExceptionAction\u003c?\u003e action)\n      throws IOException, YarnException {\n    // Set up the retry operation\n    TimelineClientRetryOp tokenRetryOp \u003d new TimelineClientRetryOp() {\n\n      @Override\n      public Object run() throws IOException {\n        // Try pass the request, if fail, keep retrying\n        boolean isProxyAccess \u003d\n            UserGroupInformation.getCurrentUser().getAuthenticationMethod()\n            \u003d\u003d UserGroupInformation.AuthenticationMethod.PROXY;\n        UserGroupInformation callerUGI \u003d isProxyAccess ?\n            UserGroupInformation.getCurrentUser().getRealUser()\n            : UserGroupInformation.getCurrentUser();\n        callerUGI.checkTGTAndReloginFromKeytab();\n        try {\n          return callerUGI.doAs(action);\n        } catch (UndeclaredThrowableException e) {\n          throw new IOException(e.getCause());\n        } catch (InterruptedException e) {\n          throw new IOException(e);\n        }\n      }\n\n      @Override\n      public boolean shouldRetryOn(Exception e) {\n        // Only retry on connection exceptions\n        return (e instanceof ConnectException);\n      }\n    };\n\n    return connectionRetry.retryOn(tokenRetryOp);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/api/impl/TimelineClientImpl.java",
      "extendedDetails": {}
    },
    "1b4be918664b09272b120bc42de3e5fc02d79047": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2770. Added functionality to renew/cancel TimeLineDelegationToken. Contributed by Zhijie Shen\n",
      "commitDate": "31/10/14 1:16 PM",
      "commitName": "1b4be918664b09272b120bc42de3e5fc02d79047",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,33 @@\n+  private Object operateDelegationToken(\n+      final PrivilegedExceptionAction\u003c?\u003e action)\n+      throws IOException, YarnException {\n+    // Set up the retry operation\n+    TimelineClientRetryOp tokenRetryOp \u003d new TimelineClientRetryOp() {\n+\n+      @Override\n+      public Object run() throws IOException {\n+        // Try pass the request, if fail, keep retrying\n+        boolean isProxyAccess \u003d\n+            UserGroupInformation.getCurrentUser().getAuthenticationMethod()\n+            \u003d\u003d UserGroupInformation.AuthenticationMethod.PROXY;\n+        UserGroupInformation callerUGI \u003d isProxyAccess ?\n+            UserGroupInformation.getCurrentUser().getRealUser()\n+            : UserGroupInformation.getCurrentUser();\n+        try {\n+          return callerUGI.doAs(action);\n+        } catch (UndeclaredThrowableException e) {\n+          throw new IOException(e.getCause());\n+        } catch (InterruptedException e) {\n+          throw new IOException(e);\n+        }\n+      }\n+\n+      @Override\n+      public boolean shouldRetryOn(Exception e) {\n+        // Only retry on connection exceptions\n+        return (e instanceof ConnectException);\n+      }\n+    };\n+\n+    return connectionRetry.retryOn(tokenRetryOp);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private Object operateDelegationToken(\n      final PrivilegedExceptionAction\u003c?\u003e action)\n      throws IOException, YarnException {\n    // Set up the retry operation\n    TimelineClientRetryOp tokenRetryOp \u003d new TimelineClientRetryOp() {\n\n      @Override\n      public Object run() throws IOException {\n        // Try pass the request, if fail, keep retrying\n        boolean isProxyAccess \u003d\n            UserGroupInformation.getCurrentUser().getAuthenticationMethod()\n            \u003d\u003d UserGroupInformation.AuthenticationMethod.PROXY;\n        UserGroupInformation callerUGI \u003d isProxyAccess ?\n            UserGroupInformation.getCurrentUser().getRealUser()\n            : UserGroupInformation.getCurrentUser();\n        try {\n          return callerUGI.doAs(action);\n        } catch (UndeclaredThrowableException e) {\n          throw new IOException(e.getCause());\n        } catch (InterruptedException e) {\n          throw new IOException(e);\n        }\n      }\n\n      @Override\n      public boolean shouldRetryOn(Exception e) {\n        // Only retry on connection exceptions\n        return (e instanceof ConnectException);\n      }\n    };\n\n    return connectionRetry.retryOn(tokenRetryOp);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/api/impl/TimelineClientImpl.java"
    }
  }
}