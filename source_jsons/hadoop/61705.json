{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSDownload.java",
  "functionName": "isPublic",
  "functionId": "isPublic___fs-FileSystem__current-Path__sStat-FileStatus__statCache-LoadingCache__Path,Future__FileStatus____",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/FSDownload.java",
  "functionStartLine": 146,
  "functionEndLine": 164,
  "numCommitsSeen": 34,
  "timeTaken": 2471,
  "changeHistory": [
    "a04143039e7fe310d807f40584633096181cfada",
    "cde7b175664cf2e43087524562044d76d8471bec",
    "53790d33000cb5804779a56ac3891d0e0e5a904d",
    "05b6dc647ec8bac1885dc6b89144719c653387d3"
  ],
  "changeHistoryShort": {
    "a04143039e7fe310d807f40584633096181cfada": "Ymodifierchange",
    "cde7b175664cf2e43087524562044d76d8471bec": "Ybodychange",
    "53790d33000cb5804779a56ac3891d0e0e5a904d": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
    "05b6dc647ec8bac1885dc6b89144719c653387d3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a04143039e7fe310d807f40584633096181cfada": {
      "type": "Ymodifierchange",
      "commitMessage": "YARN-2236. [YARN-1492] Shared Cache uploader service on the Node Manager. (Chris Trezzo and Sanjin Lee via kasha)\n",
      "commitDate": "12/11/14 9:31 AM",
      "commitName": "a04143039e7fe310d807f40584633096181cfada",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "09/11/14 7:03 PM",
      "commitNameOld": "b31b4bf029acdceaf6723e40ee29224bb5d38895",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 2.6,
      "commitsBetweenForRepo": 17,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n-  static boolean isPublic(FileSystem fs, Path current, FileStatus sStat,\n+  public static boolean isPublic(FileSystem fs, Path current, FileStatus sStat,\n       LoadingCache\u003cPath,Future\u003cFileStatus\u003e\u003e statCache) throws IOException {\n     current \u003d fs.makeQualified(current);\n     //the leaf level file should be readable by others\n     if (!checkPublicPermsForAll(fs, sStat, FsAction.READ_EXECUTE, FsAction.READ)) {\n       return false;\n     }\n \n     if (Shell.WINDOWS \u0026\u0026 fs instanceof LocalFileSystem) {\n       // Relax the requirement for public cache on LFS on Windows since default\n       // permissions are \"700\" all the way up to the drive letter. In this\n       // model, the only requirement for a user is to give EVERYONE group\n       // permission on the file and the file will be considered public.\n       // This code path is only hit when fs.default.name is file:/// (mainly\n       // in tests).\n       return true;\n     }\n     return ancestorsHaveExecutePermissions(fs, current.getParent(), statCache);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static boolean isPublic(FileSystem fs, Path current, FileStatus sStat,\n      LoadingCache\u003cPath,Future\u003cFileStatus\u003e\u003e statCache) throws IOException {\n    current \u003d fs.makeQualified(current);\n    //the leaf level file should be readable by others\n    if (!checkPublicPermsForAll(fs, sStat, FsAction.READ_EXECUTE, FsAction.READ)) {\n      return false;\n    }\n\n    if (Shell.WINDOWS \u0026\u0026 fs instanceof LocalFileSystem) {\n      // Relax the requirement for public cache on LFS on Windows since default\n      // permissions are \"700\" all the way up to the drive letter. In this\n      // model, the only requirement for a user is to give EVERYONE group\n      // permission on the file and the file will be considered public.\n      // This code path is only hit when fs.default.name is file:/// (mainly\n      // in tests).\n      return true;\n    }\n    return ancestorsHaveExecutePermissions(fs, current.getParent(), statCache);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/FSDownload.java",
      "extendedDetails": {
        "oldValue": "[static]",
        "newValue": "[public, static]"
      }
    },
    "cde7b175664cf2e43087524562044d76d8471bec": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1914. Fixed resource-download on NodeManagers to skip permission verification of public cache files in Windows+local file-system environment. Contribued by Varun Vasudev.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1586434 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/04/14 12:28 PM",
      "commitName": "cde7b175664cf2e43087524562044d76d8471bec",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "13/03/14 5:30 PM",
      "commitNameOld": "53790d33000cb5804779a56ac3891d0e0e5a904d",
      "commitAuthorOld": "Christopher Douglas",
      "daysBetweenCommits": 27.79,
      "commitsBetweenForRepo": 198,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,19 @@\n   static boolean isPublic(FileSystem fs, Path current, FileStatus sStat,\n       LoadingCache\u003cPath,Future\u003cFileStatus\u003e\u003e statCache) throws IOException {\n     current \u003d fs.makeQualified(current);\n     //the leaf level file should be readable by others\n     if (!checkPublicPermsForAll(fs, sStat, FsAction.READ_EXECUTE, FsAction.READ)) {\n       return false;\n     }\n+\n+    if (Shell.WINDOWS \u0026\u0026 fs instanceof LocalFileSystem) {\n+      // Relax the requirement for public cache on LFS on Windows since default\n+      // permissions are \"700\" all the way up to the drive letter. In this\n+      // model, the only requirement for a user is to give EVERYONE group\n+      // permission on the file and the file will be considered public.\n+      // This code path is only hit when fs.default.name is file:/// (mainly\n+      // in tests).\n+      return true;\n+    }\n     return ancestorsHaveExecutePermissions(fs, current.getParent(), statCache);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static boolean isPublic(FileSystem fs, Path current, FileStatus sStat,\n      LoadingCache\u003cPath,Future\u003cFileStatus\u003e\u003e statCache) throws IOException {\n    current \u003d fs.makeQualified(current);\n    //the leaf level file should be readable by others\n    if (!checkPublicPermsForAll(fs, sStat, FsAction.READ_EXECUTE, FsAction.READ)) {\n      return false;\n    }\n\n    if (Shell.WINDOWS \u0026\u0026 fs instanceof LocalFileSystem) {\n      // Relax the requirement for public cache on LFS on Windows since default\n      // permissions are \"700\" all the way up to the drive letter. In this\n      // model, the only requirement for a user is to give EVERYONE group\n      // permission on the file and the file will be considered public.\n      // This code path is only hit when fs.default.name is file:/// (mainly\n      // in tests).\n      return true;\n    }\n    return ancestorsHaveExecutePermissions(fs, current.getParent(), statCache);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/FSDownload.java",
      "extendedDetails": {}
    },
    "53790d33000cb5804779a56ac3891d0e0e5a904d": {
      "type": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-1771. Reduce the number of NameNode operations during localization of\npublic resources using a cache. Contributed by Sangjin Lee\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1577391 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/03/14 5:30 PM",
      "commitName": "53790d33000cb5804779a56ac3891d0e0e5a904d",
      "commitAuthor": "Christopher Douglas",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-1771. Reduce the number of NameNode operations during localization of\npublic resources using a cache. Contributed by Sangjin Lee\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1577391 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/03/14 5:30 PM",
          "commitName": "53790d33000cb5804779a56ac3891d0e0e5a904d",
          "commitAuthor": "Christopher Douglas",
          "commitDateOld": "03/10/13 10:59 PM",
          "commitNameOld": "6be30a7799fadb75bfe58ebbfba1ecffd0c95462",
          "commitAuthorOld": "Chris Nauroth",
          "daysBetweenCommits": 160.77,
          "commitsBetweenForRepo": 1126,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,9 @@\n-  private static boolean isPublic(FileSystem fs, Path current) throws IOException {\n+  static boolean isPublic(FileSystem fs, Path current, FileStatus sStat,\n+      LoadingCache\u003cPath,Future\u003cFileStatus\u003e\u003e statCache) throws IOException {\n     current \u003d fs.makeQualified(current);\n     //the leaf level file should be readable by others\n-    if (!checkPublicPermsForAll(fs, current, FsAction.READ_EXECUTE, FsAction.READ)) {\n+    if (!checkPublicPermsForAll(fs, sStat, FsAction.READ_EXECUTE, FsAction.READ)) {\n       return false;\n     }\n-    return ancestorsHaveExecutePermissions(fs, current.getParent());\n+    return ancestorsHaveExecutePermissions(fs, current.getParent(), statCache);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static boolean isPublic(FileSystem fs, Path current, FileStatus sStat,\n      LoadingCache\u003cPath,Future\u003cFileStatus\u003e\u003e statCache) throws IOException {\n    current \u003d fs.makeQualified(current);\n    //the leaf level file should be readable by others\n    if (!checkPublicPermsForAll(fs, sStat, FsAction.READ_EXECUTE, FsAction.READ)) {\n      return false;\n    }\n    return ancestorsHaveExecutePermissions(fs, current.getParent(), statCache);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/FSDownload.java",
          "extendedDetails": {
            "oldValue": "[fs-FileSystem, current-Path]",
            "newValue": "[fs-FileSystem, current-Path, sStat-FileStatus, statCache-LoadingCache\u003cPath,Future\u003cFileStatus\u003e\u003e]"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-1771. Reduce the number of NameNode operations during localization of\npublic resources using a cache. Contributed by Sangjin Lee\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1577391 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/03/14 5:30 PM",
          "commitName": "53790d33000cb5804779a56ac3891d0e0e5a904d",
          "commitAuthor": "Christopher Douglas",
          "commitDateOld": "03/10/13 10:59 PM",
          "commitNameOld": "6be30a7799fadb75bfe58ebbfba1ecffd0c95462",
          "commitAuthorOld": "Chris Nauroth",
          "daysBetweenCommits": 160.77,
          "commitsBetweenForRepo": 1126,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,9 @@\n-  private static boolean isPublic(FileSystem fs, Path current) throws IOException {\n+  static boolean isPublic(FileSystem fs, Path current, FileStatus sStat,\n+      LoadingCache\u003cPath,Future\u003cFileStatus\u003e\u003e statCache) throws IOException {\n     current \u003d fs.makeQualified(current);\n     //the leaf level file should be readable by others\n-    if (!checkPublicPermsForAll(fs, current, FsAction.READ_EXECUTE, FsAction.READ)) {\n+    if (!checkPublicPermsForAll(fs, sStat, FsAction.READ_EXECUTE, FsAction.READ)) {\n       return false;\n     }\n-    return ancestorsHaveExecutePermissions(fs, current.getParent());\n+    return ancestorsHaveExecutePermissions(fs, current.getParent(), statCache);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static boolean isPublic(FileSystem fs, Path current, FileStatus sStat,\n      LoadingCache\u003cPath,Future\u003cFileStatus\u003e\u003e statCache) throws IOException {\n    current \u003d fs.makeQualified(current);\n    //the leaf level file should be readable by others\n    if (!checkPublicPermsForAll(fs, sStat, FsAction.READ_EXECUTE, FsAction.READ)) {\n      return false;\n    }\n    return ancestorsHaveExecutePermissions(fs, current.getParent(), statCache);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/FSDownload.java",
          "extendedDetails": {
            "oldValue": "[private, static]",
            "newValue": "[static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-1771. Reduce the number of NameNode operations during localization of\npublic resources using a cache. Contributed by Sangjin Lee\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1577391 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/03/14 5:30 PM",
          "commitName": "53790d33000cb5804779a56ac3891d0e0e5a904d",
          "commitAuthor": "Christopher Douglas",
          "commitDateOld": "03/10/13 10:59 PM",
          "commitNameOld": "6be30a7799fadb75bfe58ebbfba1ecffd0c95462",
          "commitAuthorOld": "Chris Nauroth",
          "daysBetweenCommits": 160.77,
          "commitsBetweenForRepo": 1126,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,9 @@\n-  private static boolean isPublic(FileSystem fs, Path current) throws IOException {\n+  static boolean isPublic(FileSystem fs, Path current, FileStatus sStat,\n+      LoadingCache\u003cPath,Future\u003cFileStatus\u003e\u003e statCache) throws IOException {\n     current \u003d fs.makeQualified(current);\n     //the leaf level file should be readable by others\n-    if (!checkPublicPermsForAll(fs, current, FsAction.READ_EXECUTE, FsAction.READ)) {\n+    if (!checkPublicPermsForAll(fs, sStat, FsAction.READ_EXECUTE, FsAction.READ)) {\n       return false;\n     }\n-    return ancestorsHaveExecutePermissions(fs, current.getParent());\n+    return ancestorsHaveExecutePermissions(fs, current.getParent(), statCache);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static boolean isPublic(FileSystem fs, Path current, FileStatus sStat,\n      LoadingCache\u003cPath,Future\u003cFileStatus\u003e\u003e statCache) throws IOException {\n    current \u003d fs.makeQualified(current);\n    //the leaf level file should be readable by others\n    if (!checkPublicPermsForAll(fs, sStat, FsAction.READ_EXECUTE, FsAction.READ)) {\n      return false;\n    }\n    return ancestorsHaveExecutePermissions(fs, current.getParent(), statCache);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/FSDownload.java",
          "extendedDetails": {}
        }
      ]
    },
    "05b6dc647ec8bac1885dc6b89144719c653387d3": {
      "type": "Yintroduced",
      "commitMessage": "Localization update\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1405846 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/11/12 7:43 AM",
      "commitName": "05b6dc647ec8bac1885dc6b89144719c653387d3",
      "commitAuthor": "Robert Joseph Evans",
      "diff": "@@ -0,0 +1,8 @@\n+  private static boolean isPublic(FileSystem fs, Path current) throws IOException {\n+    current \u003d fs.makeQualified(current);\n+    //the leaf level file should be readable by others\n+    if (!checkPublicPermsForAll(fs, current, FsAction.READ_EXECUTE, FsAction.READ)) {\n+      return false;\n+    }\n+    return ancestorsHaveExecutePermissions(fs, current.getParent());\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static boolean isPublic(FileSystem fs, Path current) throws IOException {\n    current \u003d fs.makeQualified(current);\n    //the leaf level file should be readable by others\n    if (!checkPublicPermsForAll(fs, current, FsAction.READ_EXECUTE, FsAction.READ)) {\n      return false;\n    }\n    return ancestorsHaveExecutePermissions(fs, current.getParent());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/FSDownload.java"
    }
  }
}