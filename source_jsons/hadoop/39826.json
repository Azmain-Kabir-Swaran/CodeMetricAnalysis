{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "MutableCSConfigurationProvider.java",
  "functionName": "logAndApplyMutation",
  "functionId": "logAndApplyMutation___user-UserGroupInformation__confUpdate-SchedConfUpdateInfo",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/conf/MutableCSConfigurationProvider.java",
  "functionStartLine": 131,
  "functionEndLine": 143,
  "numCommitsSeen": 23,
  "timeTaken": 3335,
  "changeHistory": [
    "1ab9c692fa9107f10c0d8fbfbb9e74f54bddc960",
    "1c51f36be79924489ca4a2e5ca7e96ac75a6ec18",
    "ff39c0de206a4fce1f0e8a416357a7a8261f8634"
  ],
  "changeHistoryShort": {
    "1ab9c692fa9107f10c0d8fbfbb9e74f54bddc960": "Ybodychange",
    "1c51f36be79924489ca4a2e5ca7e96ac75a6ec18": "Ymultichange(Yreturntypechange,Ybodychange)",
    "ff39c0de206a4fce1f0e8a416357a7a8261f8634": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1ab9c692fa9107f10c0d8fbfbb9e74f54bddc960": {
      "type": "Ybodychange",
      "commitMessage": "YARN-10022. RM Rest API to validate the CapacityScheduler Configuration change\n\nContributed by Kinga Marton.\n",
      "commitDate": "28/01/20 9:46 AM",
      "commitName": "1ab9c692fa9107f10c0d8fbfbb9e74f54bddc960",
      "commitAuthor": "Prabhu Joseph",
      "commitDateOld": "14/01/20 3:26 AM",
      "commitNameOld": "1c51f36be79924489ca4a2e5ca7e96ac75a6ec18",
      "commitAuthorOld": "Szilard Nemeth",
      "daysBetweenCommits": 14.26,
      "commitsBetweenForRepo": 46,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,13 @@\n   public LogMutation logAndApplyMutation(UserGroupInformation user,\n       SchedConfUpdateInfo confUpdate) throws Exception {\n     oldConf \u003d new Configuration(schedConf);\n-    Map\u003cString, String\u003e kvUpdate \u003d constructKeyValueConfUpdate(confUpdate);\n+    CapacitySchedulerConfiguration proposedConf \u003d\n+            new CapacitySchedulerConfiguration(schedConf, false);\n+    Map\u003cString, String\u003e kvUpdate\n+            \u003d constructKeyValueConfUpdate(proposedConf, confUpdate);\n     LogMutation log \u003d new LogMutation(kvUpdate, user.getShortUserName());\n     confStore.logMutation(log);\n-    for (Map.Entry\u003cString, String\u003e kv : kvUpdate.entrySet()) {\n-      if (kv.getValue() \u003d\u003d null) {\n-        schedConf.unset(kv.getKey());\n-      } else {\n-        schedConf.set(kv.getKey(), kv.getValue());\n-      }\n-    }\n+    applyMutation(proposedConf, kvUpdate);\n+    schedConf \u003d proposedConf;\n     return log;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public LogMutation logAndApplyMutation(UserGroupInformation user,\n      SchedConfUpdateInfo confUpdate) throws Exception {\n    oldConf \u003d new Configuration(schedConf);\n    CapacitySchedulerConfiguration proposedConf \u003d\n            new CapacitySchedulerConfiguration(schedConf, false);\n    Map\u003cString, String\u003e kvUpdate\n            \u003d constructKeyValueConfUpdate(proposedConf, confUpdate);\n    LogMutation log \u003d new LogMutation(kvUpdate, user.getShortUserName());\n    confStore.logMutation(log);\n    applyMutation(proposedConf, kvUpdate);\n    schedConf \u003d proposedConf;\n    return log;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/conf/MutableCSConfigurationProvider.java",
      "extendedDetails": {}
    },
    "1c51f36be79924489ca4a2e5ca7e96ac75a6ec18": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "YARN-9788. Queue Management API does not support parallel updates. Contributed by Prabhu Joseph\n",
      "commitDate": "14/01/20 3:26 AM",
      "commitName": "1c51f36be79924489ca4a2e5ca7e96ac75a6ec18",
      "commitAuthor": "Szilard Nemeth",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "YARN-9788. Queue Management API does not support parallel updates. Contributed by Prabhu Joseph\n",
          "commitDate": "14/01/20 3:26 AM",
          "commitName": "1c51f36be79924489ca4a2e5ca7e96ac75a6ec18",
          "commitAuthor": "Szilard Nemeth",
          "commitDateOld": "04/11/19 9:57 AM",
          "commitNameOld": "51e7d1b37eb06165657befdae82c015055c58334",
          "commitAuthorOld": "Sunil G",
          "daysBetweenCommits": 70.73,
          "commitsBetweenForRepo": 262,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,15 @@\n-  public void logAndApplyMutation(UserGroupInformation user,\n+  public LogMutation logAndApplyMutation(UserGroupInformation user,\n       SchedConfUpdateInfo confUpdate) throws Exception {\n     oldConf \u003d new Configuration(schedConf);\n     Map\u003cString, String\u003e kvUpdate \u003d constructKeyValueConfUpdate(confUpdate);\n     LogMutation log \u003d new LogMutation(kvUpdate, user.getShortUserName());\n     confStore.logMutation(log);\n     for (Map.Entry\u003cString, String\u003e kv : kvUpdate.entrySet()) {\n       if (kv.getValue() \u003d\u003d null) {\n         schedConf.unset(kv.getKey());\n       } else {\n         schedConf.set(kv.getKey(), kv.getValue());\n       }\n     }\n+    return log;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public LogMutation logAndApplyMutation(UserGroupInformation user,\n      SchedConfUpdateInfo confUpdate) throws Exception {\n    oldConf \u003d new Configuration(schedConf);\n    Map\u003cString, String\u003e kvUpdate \u003d constructKeyValueConfUpdate(confUpdate);\n    LogMutation log \u003d new LogMutation(kvUpdate, user.getShortUserName());\n    confStore.logMutation(log);\n    for (Map.Entry\u003cString, String\u003e kv : kvUpdate.entrySet()) {\n      if (kv.getValue() \u003d\u003d null) {\n        schedConf.unset(kv.getKey());\n      } else {\n        schedConf.set(kv.getKey(), kv.getValue());\n      }\n    }\n    return log;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/conf/MutableCSConfigurationProvider.java",
          "extendedDetails": {
            "oldValue": "void",
            "newValue": "LogMutation"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-9788. Queue Management API does not support parallel updates. Contributed by Prabhu Joseph\n",
          "commitDate": "14/01/20 3:26 AM",
          "commitName": "1c51f36be79924489ca4a2e5ca7e96ac75a6ec18",
          "commitAuthor": "Szilard Nemeth",
          "commitDateOld": "04/11/19 9:57 AM",
          "commitNameOld": "51e7d1b37eb06165657befdae82c015055c58334",
          "commitAuthorOld": "Sunil G",
          "daysBetweenCommits": 70.73,
          "commitsBetweenForRepo": 262,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,15 @@\n-  public void logAndApplyMutation(UserGroupInformation user,\n+  public LogMutation logAndApplyMutation(UserGroupInformation user,\n       SchedConfUpdateInfo confUpdate) throws Exception {\n     oldConf \u003d new Configuration(schedConf);\n     Map\u003cString, String\u003e kvUpdate \u003d constructKeyValueConfUpdate(confUpdate);\n     LogMutation log \u003d new LogMutation(kvUpdate, user.getShortUserName());\n     confStore.logMutation(log);\n     for (Map.Entry\u003cString, String\u003e kv : kvUpdate.entrySet()) {\n       if (kv.getValue() \u003d\u003d null) {\n         schedConf.unset(kv.getKey());\n       } else {\n         schedConf.set(kv.getKey(), kv.getValue());\n       }\n     }\n+    return log;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public LogMutation logAndApplyMutation(UserGroupInformation user,\n      SchedConfUpdateInfo confUpdate) throws Exception {\n    oldConf \u003d new Configuration(schedConf);\n    Map\u003cString, String\u003e kvUpdate \u003d constructKeyValueConfUpdate(confUpdate);\n    LogMutation log \u003d new LogMutation(kvUpdate, user.getShortUserName());\n    confStore.logMutation(log);\n    for (Map.Entry\u003cString, String\u003e kv : kvUpdate.entrySet()) {\n      if (kv.getValue() \u003d\u003d null) {\n        schedConf.unset(kv.getKey());\n      } else {\n        schedConf.set(kv.getKey(), kv.getValue());\n      }\n    }\n    return log;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/conf/MutableCSConfigurationProvider.java",
          "extendedDetails": {}
        }
      ]
    },
    "ff39c0de206a4fce1f0e8a416357a7a8261f8634": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6840. Implement zookeeper based store for scheduler configuration updates. (Jonathan Hung via wangda)\n\nChange-Id: I9debea674fe8c7e4109d4ca136965a1ea4c48bcc\n",
      "commitDate": "09/10/17 11:11 AM",
      "commitName": "ff39c0de206a4fce1f0e8a416357a7a8261f8634",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,14 @@\n+  public void logAndApplyMutation(UserGroupInformation user,\n+      SchedConfUpdateInfo confUpdate) throws Exception {\n+    oldConf \u003d new Configuration(schedConf);\n+    Map\u003cString, String\u003e kvUpdate \u003d constructKeyValueConfUpdate(confUpdate);\n+    LogMutation log \u003d new LogMutation(kvUpdate, user.getShortUserName());\n+    confStore.logMutation(log);\n+    for (Map.Entry\u003cString, String\u003e kv : kvUpdate.entrySet()) {\n+      if (kv.getValue() \u003d\u003d null) {\n+        schedConf.unset(kv.getKey());\n+      } else {\n+        schedConf.set(kv.getKey(), kv.getValue());\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void logAndApplyMutation(UserGroupInformation user,\n      SchedConfUpdateInfo confUpdate) throws Exception {\n    oldConf \u003d new Configuration(schedConf);\n    Map\u003cString, String\u003e kvUpdate \u003d constructKeyValueConfUpdate(confUpdate);\n    LogMutation log \u003d new LogMutation(kvUpdate, user.getShortUserName());\n    confStore.logMutation(log);\n    for (Map.Entry\u003cString, String\u003e kv : kvUpdate.entrySet()) {\n      if (kv.getValue() \u003d\u003d null) {\n        schedConf.unset(kv.getKey());\n      } else {\n        schedConf.set(kv.getKey(), kv.getValue());\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/conf/MutableCSConfigurationProvider.java"
    }
  }
}