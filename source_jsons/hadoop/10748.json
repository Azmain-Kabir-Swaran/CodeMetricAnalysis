{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BlockPoolSliceStorage.java",
  "functionName": "loadBpStorageDirectories",
  "functionId": "loadBpStorageDirectories___nsInfo-NamespaceInfo__location-StorageLocation__startOpt-StartupOption__callables-List__Callable__StorageDirectory______conf-Configuration",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockPoolSliceStorage.java",
  "functionStartLine": 216,
  "functionEndLine": 236,
  "numCommitsSeen": 148,
  "timeTaken": 5969,
  "changeHistory": [
    "b3ae11d59790bb08b81848e9f944db7d3afbbd8a",
    "f209e93566b159c22054dcb276e45f23a2b7b7d1",
    "96b12662ea76e3ded4ef13944fc8df206cfb4613",
    "66289a3bf403f307844ea0b6ceed35b603d12c0b",
    "662e17b46a0f41ade6a304e12925b70b5d09fc2f",
    "a9331fe9b071fdcdae0c6c747d7b6b306142e671"
  ],
  "changeHistoryShort": {
    "b3ae11d59790bb08b81848e9f944db7d3afbbd8a": "Ybodychange",
    "f209e93566b159c22054dcb276e45f23a2b7b7d1": "Ymultichange(Yparameterchange,Ybodychange)",
    "96b12662ea76e3ded4ef13944fc8df206cfb4613": "Ymultichange(Yparameterchange,Ybodychange)",
    "66289a3bf403f307844ea0b6ceed35b603d12c0b": "Ymultichange(Yparameterchange,Ybodychange)",
    "662e17b46a0f41ade6a304e12925b70b5d09fc2f": "Ymultichange(Yparameterchange,Ybodychange)",
    "a9331fe9b071fdcdae0c6c747d7b6b306142e671": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b3ae11d59790bb08b81848e9f944db7d3afbbd8a": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12997. Move logging to slf4j in BlockPoolSliceStorage and Storage. Contributed by Ajay Kumar.\n",
      "commitDate": "01/02/18 10:45 AM",
      "commitName": "b3ae11d59790bb08b81848e9f944db7d3afbbd8a",
      "commitAuthor": "Xiaoyu Yao",
      "commitDateOld": "15/12/17 5:51 PM",
      "commitNameOld": "8239e3afb31d3c4485817d4b8b8b195b554acbe7",
      "commitAuthorOld": "Virajith Jalaparti",
      "daysBetweenCommits": 47.7,
      "commitsBetweenForRepo": 240,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n   List\u003cStorageDirectory\u003e loadBpStorageDirectories(NamespaceInfo nsInfo,\n       StorageLocation location, StartupOption startOpt,\n       List\u003cCallable\u003cStorageDirectory\u003e\u003e callables, Configuration conf)\n           throws IOException {\n     List\u003cStorageDirectory\u003e succeedDirs \u003d Lists.newArrayList();\n     try {\n       if (containsStorageDir(location, nsInfo.getBlockPoolID())) {\n         throw new IOException(\n             \"BlockPoolSliceStorage.recoverTransitionRead: \" +\n                 \"attempt to load an used block storage: \" + location);\n       }\n       final StorageDirectory sd \u003d loadStorageDirectory(\n           nsInfo, location, startOpt, callables, conf);\n       succeedDirs.add(sd);\n     } catch (IOException e) {\n-      LOG.warn(\"Failed to analyze storage directories for block pool \"\n-          + nsInfo.getBlockPoolID(), e);\n+      LOG.warn(\"Failed to analyze storage directories for block pool {}\",\n+          nsInfo.getBlockPoolID(), e);\n       throw e;\n     }\n     return succeedDirs;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  List\u003cStorageDirectory\u003e loadBpStorageDirectories(NamespaceInfo nsInfo,\n      StorageLocation location, StartupOption startOpt,\n      List\u003cCallable\u003cStorageDirectory\u003e\u003e callables, Configuration conf)\n          throws IOException {\n    List\u003cStorageDirectory\u003e succeedDirs \u003d Lists.newArrayList();\n    try {\n      if (containsStorageDir(location, nsInfo.getBlockPoolID())) {\n        throw new IOException(\n            \"BlockPoolSliceStorage.recoverTransitionRead: \" +\n                \"attempt to load an used block storage: \" + location);\n      }\n      final StorageDirectory sd \u003d loadStorageDirectory(\n          nsInfo, location, startOpt, callables, conf);\n      succeedDirs.add(sd);\n    } catch (IOException e) {\n      LOG.warn(\"Failed to analyze storage directories for block pool {}\",\n          nsInfo.getBlockPoolID(), e);\n      throw e;\n    }\n    return succeedDirs;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockPoolSliceStorage.java",
      "extendedDetails": {}
    },
    "f209e93566b159c22054dcb276e45f23a2b7b7d1": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-10638. Modifications to remove the assumption that StorageLocation is associated with java.io.File in Datanode. (Virajith Jalaparti via lei)\n",
      "commitDate": "26/10/16 10:32 AM",
      "commitName": "f209e93566b159c22054dcb276e45f23a2b7b7d1",
      "commitAuthor": "Lei Xu",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-10638. Modifications to remove the assumption that StorageLocation is associated with java.io.File in Datanode. (Virajith Jalaparti via lei)\n",
          "commitDate": "26/10/16 10:32 AM",
          "commitName": "f209e93566b159c22054dcb276e45f23a2b7b7d1",
          "commitAuthor": "Lei Xu",
          "commitDateOld": "10/10/16 3:30 PM",
          "commitNameOld": "96b12662ea76e3ded4ef13944fc8df206cfb4613",
          "commitAuthorOld": "Lei Xu",
          "daysBetweenCommits": 15.79,
          "commitsBetweenForRepo": 122,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,21 @@\n   List\u003cStorageDirectory\u003e loadBpStorageDirectories(NamespaceInfo nsInfo,\n-      Collection\u003cFile\u003e dataDirs, StorageLocation location,\n-      StartupOption startOpt, List\u003cCallable\u003cStorageDirectory\u003e\u003e callables,\n-      Configuration conf) throws IOException {\n+      StorageLocation location, StartupOption startOpt,\n+      List\u003cCallable\u003cStorageDirectory\u003e\u003e callables, Configuration conf)\n+          throws IOException {\n     List\u003cStorageDirectory\u003e succeedDirs \u003d Lists.newArrayList();\n     try {\n-      for (File dataDir : dataDirs) {\n-        if (containsStorageDir(dataDir)) {\n-          throw new IOException(\n-              \"BlockPoolSliceStorage.recoverTransitionRead: \" +\n-                  \"attempt to load an used block storage: \" + dataDir);\n-        }\n-        final StorageDirectory sd \u003d loadStorageDirectory(\n-            nsInfo, dataDir, location, startOpt, callables, conf);\n-        succeedDirs.add(sd);\n+      if (containsStorageDir(location, nsInfo.getBlockPoolID())) {\n+        throw new IOException(\n+            \"BlockPoolSliceStorage.recoverTransitionRead: \" +\n+                \"attempt to load an used block storage: \" + location);\n       }\n+      final StorageDirectory sd \u003d loadStorageDirectory(\n+          nsInfo, location, startOpt, callables, conf);\n+      succeedDirs.add(sd);\n     } catch (IOException e) {\n       LOG.warn(\"Failed to analyze storage directories for block pool \"\n           + nsInfo.getBlockPoolID(), e);\n       throw e;\n     }\n     return succeedDirs;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  List\u003cStorageDirectory\u003e loadBpStorageDirectories(NamespaceInfo nsInfo,\n      StorageLocation location, StartupOption startOpt,\n      List\u003cCallable\u003cStorageDirectory\u003e\u003e callables, Configuration conf)\n          throws IOException {\n    List\u003cStorageDirectory\u003e succeedDirs \u003d Lists.newArrayList();\n    try {\n      if (containsStorageDir(location, nsInfo.getBlockPoolID())) {\n        throw new IOException(\n            \"BlockPoolSliceStorage.recoverTransitionRead: \" +\n                \"attempt to load an used block storage: \" + location);\n      }\n      final StorageDirectory sd \u003d loadStorageDirectory(\n          nsInfo, location, startOpt, callables, conf);\n      succeedDirs.add(sd);\n    } catch (IOException e) {\n      LOG.warn(\"Failed to analyze storage directories for block pool \"\n          + nsInfo.getBlockPoolID(), e);\n      throw e;\n    }\n    return succeedDirs;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockPoolSliceStorage.java",
          "extendedDetails": {
            "oldValue": "[nsInfo-NamespaceInfo, dataDirs-Collection\u003cFile\u003e, location-StorageLocation, startOpt-StartupOption, callables-List\u003cCallable\u003cStorageDirectory\u003e\u003e, conf-Configuration]",
            "newValue": "[nsInfo-NamespaceInfo, location-StorageLocation, startOpt-StartupOption, callables-List\u003cCallable\u003cStorageDirectory\u003e\u003e, conf-Configuration]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-10638. Modifications to remove the assumption that StorageLocation is associated with java.io.File in Datanode. (Virajith Jalaparti via lei)\n",
          "commitDate": "26/10/16 10:32 AM",
          "commitName": "f209e93566b159c22054dcb276e45f23a2b7b7d1",
          "commitAuthor": "Lei Xu",
          "commitDateOld": "10/10/16 3:30 PM",
          "commitNameOld": "96b12662ea76e3ded4ef13944fc8df206cfb4613",
          "commitAuthorOld": "Lei Xu",
          "daysBetweenCommits": 15.79,
          "commitsBetweenForRepo": 122,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,21 @@\n   List\u003cStorageDirectory\u003e loadBpStorageDirectories(NamespaceInfo nsInfo,\n-      Collection\u003cFile\u003e dataDirs, StorageLocation location,\n-      StartupOption startOpt, List\u003cCallable\u003cStorageDirectory\u003e\u003e callables,\n-      Configuration conf) throws IOException {\n+      StorageLocation location, StartupOption startOpt,\n+      List\u003cCallable\u003cStorageDirectory\u003e\u003e callables, Configuration conf)\n+          throws IOException {\n     List\u003cStorageDirectory\u003e succeedDirs \u003d Lists.newArrayList();\n     try {\n-      for (File dataDir : dataDirs) {\n-        if (containsStorageDir(dataDir)) {\n-          throw new IOException(\n-              \"BlockPoolSliceStorage.recoverTransitionRead: \" +\n-                  \"attempt to load an used block storage: \" + dataDir);\n-        }\n-        final StorageDirectory sd \u003d loadStorageDirectory(\n-            nsInfo, dataDir, location, startOpt, callables, conf);\n-        succeedDirs.add(sd);\n+      if (containsStorageDir(location, nsInfo.getBlockPoolID())) {\n+        throw new IOException(\n+            \"BlockPoolSliceStorage.recoverTransitionRead: \" +\n+                \"attempt to load an used block storage: \" + location);\n       }\n+      final StorageDirectory sd \u003d loadStorageDirectory(\n+          nsInfo, location, startOpt, callables, conf);\n+      succeedDirs.add(sd);\n     } catch (IOException e) {\n       LOG.warn(\"Failed to analyze storage directories for block pool \"\n           + nsInfo.getBlockPoolID(), e);\n       throw e;\n     }\n     return succeedDirs;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  List\u003cStorageDirectory\u003e loadBpStorageDirectories(NamespaceInfo nsInfo,\n      StorageLocation location, StartupOption startOpt,\n      List\u003cCallable\u003cStorageDirectory\u003e\u003e callables, Configuration conf)\n          throws IOException {\n    List\u003cStorageDirectory\u003e succeedDirs \u003d Lists.newArrayList();\n    try {\n      if (containsStorageDir(location, nsInfo.getBlockPoolID())) {\n        throw new IOException(\n            \"BlockPoolSliceStorage.recoverTransitionRead: \" +\n                \"attempt to load an used block storage: \" + location);\n      }\n      final StorageDirectory sd \u003d loadStorageDirectory(\n          nsInfo, location, startOpt, callables, conf);\n      succeedDirs.add(sd);\n    } catch (IOException e) {\n      LOG.warn(\"Failed to analyze storage directories for block pool \"\n          + nsInfo.getBlockPoolID(), e);\n      throw e;\n    }\n    return succeedDirs;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockPoolSliceStorage.java",
          "extendedDetails": {}
        }
      ]
    },
    "96b12662ea76e3ded4ef13944fc8df206cfb4613": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-10637. Modifications to remove the assumption that FsVolumes are backed by java.io.File. (Virajith Jalaparti via lei)\n",
      "commitDate": "10/10/16 3:30 PM",
      "commitName": "96b12662ea76e3ded4ef13944fc8df206cfb4613",
      "commitAuthor": "Lei Xu",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-10637. Modifications to remove the assumption that FsVolumes are backed by java.io.File. (Virajith Jalaparti via lei)\n",
          "commitDate": "10/10/16 3:30 PM",
          "commitName": "96b12662ea76e3ded4ef13944fc8df206cfb4613",
          "commitAuthor": "Lei Xu",
          "commitDateOld": "13/09/16 12:54 PM",
          "commitNameOld": "86c9862bec0248d671e657aa56094a2919b8ac14",
          "commitAuthorOld": "Lei Xu",
          "daysBetweenCommits": 27.11,
          "commitsBetweenForRepo": 180,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,23 @@\n   List\u003cStorageDirectory\u003e loadBpStorageDirectories(NamespaceInfo nsInfo,\n-      Collection\u003cFile\u003e dataDirs, StartupOption startOpt,\n-      List\u003cCallable\u003cStorageDirectory\u003e\u003e callables, Configuration conf)\n-          throws IOException {\n+      Collection\u003cFile\u003e dataDirs, StorageLocation location,\n+      StartupOption startOpt, List\u003cCallable\u003cStorageDirectory\u003e\u003e callables,\n+      Configuration conf) throws IOException {\n     List\u003cStorageDirectory\u003e succeedDirs \u003d Lists.newArrayList();\n     try {\n       for (File dataDir : dataDirs) {\n         if (containsStorageDir(dataDir)) {\n           throw new IOException(\n               \"BlockPoolSliceStorage.recoverTransitionRead: \" +\n                   \"attempt to load an used block storage: \" + dataDir);\n         }\n         final StorageDirectory sd \u003d loadStorageDirectory(\n-            nsInfo, dataDir, startOpt, callables, conf);\n+            nsInfo, dataDir, location, startOpt, callables, conf);\n         succeedDirs.add(sd);\n       }\n     } catch (IOException e) {\n       LOG.warn(\"Failed to analyze storage directories for block pool \"\n           + nsInfo.getBlockPoolID(), e);\n       throw e;\n     }\n     return succeedDirs;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  List\u003cStorageDirectory\u003e loadBpStorageDirectories(NamespaceInfo nsInfo,\n      Collection\u003cFile\u003e dataDirs, StorageLocation location,\n      StartupOption startOpt, List\u003cCallable\u003cStorageDirectory\u003e\u003e callables,\n      Configuration conf) throws IOException {\n    List\u003cStorageDirectory\u003e succeedDirs \u003d Lists.newArrayList();\n    try {\n      for (File dataDir : dataDirs) {\n        if (containsStorageDir(dataDir)) {\n          throw new IOException(\n              \"BlockPoolSliceStorage.recoverTransitionRead: \" +\n                  \"attempt to load an used block storage: \" + dataDir);\n        }\n        final StorageDirectory sd \u003d loadStorageDirectory(\n            nsInfo, dataDir, location, startOpt, callables, conf);\n        succeedDirs.add(sd);\n      }\n    } catch (IOException e) {\n      LOG.warn(\"Failed to analyze storage directories for block pool \"\n          + nsInfo.getBlockPoolID(), e);\n      throw e;\n    }\n    return succeedDirs;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockPoolSliceStorage.java",
          "extendedDetails": {
            "oldValue": "[nsInfo-NamespaceInfo, dataDirs-Collection\u003cFile\u003e, startOpt-StartupOption, callables-List\u003cCallable\u003cStorageDirectory\u003e\u003e, conf-Configuration]",
            "newValue": "[nsInfo-NamespaceInfo, dataDirs-Collection\u003cFile\u003e, location-StorageLocation, startOpt-StartupOption, callables-List\u003cCallable\u003cStorageDirectory\u003e\u003e, conf-Configuration]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-10637. Modifications to remove the assumption that FsVolumes are backed by java.io.File. (Virajith Jalaparti via lei)\n",
          "commitDate": "10/10/16 3:30 PM",
          "commitName": "96b12662ea76e3ded4ef13944fc8df206cfb4613",
          "commitAuthor": "Lei Xu",
          "commitDateOld": "13/09/16 12:54 PM",
          "commitNameOld": "86c9862bec0248d671e657aa56094a2919b8ac14",
          "commitAuthorOld": "Lei Xu",
          "daysBetweenCommits": 27.11,
          "commitsBetweenForRepo": 180,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,23 @@\n   List\u003cStorageDirectory\u003e loadBpStorageDirectories(NamespaceInfo nsInfo,\n-      Collection\u003cFile\u003e dataDirs, StartupOption startOpt,\n-      List\u003cCallable\u003cStorageDirectory\u003e\u003e callables, Configuration conf)\n-          throws IOException {\n+      Collection\u003cFile\u003e dataDirs, StorageLocation location,\n+      StartupOption startOpt, List\u003cCallable\u003cStorageDirectory\u003e\u003e callables,\n+      Configuration conf) throws IOException {\n     List\u003cStorageDirectory\u003e succeedDirs \u003d Lists.newArrayList();\n     try {\n       for (File dataDir : dataDirs) {\n         if (containsStorageDir(dataDir)) {\n           throw new IOException(\n               \"BlockPoolSliceStorage.recoverTransitionRead: \" +\n                   \"attempt to load an used block storage: \" + dataDir);\n         }\n         final StorageDirectory sd \u003d loadStorageDirectory(\n-            nsInfo, dataDir, startOpt, callables, conf);\n+            nsInfo, dataDir, location, startOpt, callables, conf);\n         succeedDirs.add(sd);\n       }\n     } catch (IOException e) {\n       LOG.warn(\"Failed to analyze storage directories for block pool \"\n           + nsInfo.getBlockPoolID(), e);\n       throw e;\n     }\n     return succeedDirs;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  List\u003cStorageDirectory\u003e loadBpStorageDirectories(NamespaceInfo nsInfo,\n      Collection\u003cFile\u003e dataDirs, StorageLocation location,\n      StartupOption startOpt, List\u003cCallable\u003cStorageDirectory\u003e\u003e callables,\n      Configuration conf) throws IOException {\n    List\u003cStorageDirectory\u003e succeedDirs \u003d Lists.newArrayList();\n    try {\n      for (File dataDir : dataDirs) {\n        if (containsStorageDir(dataDir)) {\n          throw new IOException(\n              \"BlockPoolSliceStorage.recoverTransitionRead: \" +\n                  \"attempt to load an used block storage: \" + dataDir);\n        }\n        final StorageDirectory sd \u003d loadStorageDirectory(\n            nsInfo, dataDir, location, startOpt, callables, conf);\n        succeedDirs.add(sd);\n      }\n    } catch (IOException e) {\n      LOG.warn(\"Failed to analyze storage directories for block pool \"\n          + nsInfo.getBlockPoolID(), e);\n      throw e;\n    }\n    return succeedDirs;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockPoolSliceStorage.java",
          "extendedDetails": {}
        }
      ]
    },
    "66289a3bf403f307844ea0b6ceed35b603d12c0b": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-8578. On upgrade, Datanode should process all storage/data dirs in parallel.  Contributed by vinayakumarb and szetszwo\n",
      "commitDate": "22/02/16 3:01 PM",
      "commitName": "66289a3bf403f307844ea0b6ceed35b603d12c0b",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-8578. On upgrade, Datanode should process all storage/data dirs in parallel.  Contributed by vinayakumarb and szetszwo\n",
          "commitDate": "22/02/16 3:01 PM",
          "commitName": "66289a3bf403f307844ea0b6ceed35b603d12c0b",
          "commitAuthor": "Tsz-Wo Nicholas Sze",
          "commitDateOld": "27/01/16 6:58 PM",
          "commitNameOld": "662e17b46a0f41ade6a304e12925b70b5d09fc2f",
          "commitAuthorOld": "Tsz-Wo Nicholas Sze",
          "daysBetweenCommits": 25.84,
          "commitsBetweenForRepo": 173,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,23 @@\n   List\u003cStorageDirectory\u003e loadBpStorageDirectories(NamespaceInfo nsInfo,\n       Collection\u003cFile\u003e dataDirs, StartupOption startOpt,\n-      Configuration conf) throws IOException {\n+      List\u003cCallable\u003cStorageDirectory\u003e\u003e callables, Configuration conf)\n+          throws IOException {\n     List\u003cStorageDirectory\u003e succeedDirs \u003d Lists.newArrayList();\n     try {\n       for (File dataDir : dataDirs) {\n         if (containsStorageDir(dataDir)) {\n           throw new IOException(\n               \"BlockPoolSliceStorage.recoverTransitionRead: \" +\n                   \"attempt to load an used block storage: \" + dataDir);\n         }\n         final StorageDirectory sd \u003d loadStorageDirectory(\n-            nsInfo, dataDir, startOpt, conf);\n+            nsInfo, dataDir, startOpt, callables, conf);\n         succeedDirs.add(sd);\n       }\n     } catch (IOException e) {\n       LOG.warn(\"Failed to analyze storage directories for block pool \"\n           + nsInfo.getBlockPoolID(), e);\n       throw e;\n     }\n     return succeedDirs;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  List\u003cStorageDirectory\u003e loadBpStorageDirectories(NamespaceInfo nsInfo,\n      Collection\u003cFile\u003e dataDirs, StartupOption startOpt,\n      List\u003cCallable\u003cStorageDirectory\u003e\u003e callables, Configuration conf)\n          throws IOException {\n    List\u003cStorageDirectory\u003e succeedDirs \u003d Lists.newArrayList();\n    try {\n      for (File dataDir : dataDirs) {\n        if (containsStorageDir(dataDir)) {\n          throw new IOException(\n              \"BlockPoolSliceStorage.recoverTransitionRead: \" +\n                  \"attempt to load an used block storage: \" + dataDir);\n        }\n        final StorageDirectory sd \u003d loadStorageDirectory(\n            nsInfo, dataDir, startOpt, callables, conf);\n        succeedDirs.add(sd);\n      }\n    } catch (IOException e) {\n      LOG.warn(\"Failed to analyze storage directories for block pool \"\n          + nsInfo.getBlockPoolID(), e);\n      throw e;\n    }\n    return succeedDirs;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockPoolSliceStorage.java",
          "extendedDetails": {
            "oldValue": "[nsInfo-NamespaceInfo, dataDirs-Collection\u003cFile\u003e, startOpt-StartupOption, conf-Configuration]",
            "newValue": "[nsInfo-NamespaceInfo, dataDirs-Collection\u003cFile\u003e, startOpt-StartupOption, callables-List\u003cCallable\u003cStorageDirectory\u003e\u003e, conf-Configuration]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-8578. On upgrade, Datanode should process all storage/data dirs in parallel.  Contributed by vinayakumarb and szetszwo\n",
          "commitDate": "22/02/16 3:01 PM",
          "commitName": "66289a3bf403f307844ea0b6ceed35b603d12c0b",
          "commitAuthor": "Tsz-Wo Nicholas Sze",
          "commitDateOld": "27/01/16 6:58 PM",
          "commitNameOld": "662e17b46a0f41ade6a304e12925b70b5d09fc2f",
          "commitAuthorOld": "Tsz-Wo Nicholas Sze",
          "daysBetweenCommits": 25.84,
          "commitsBetweenForRepo": 173,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,23 @@\n   List\u003cStorageDirectory\u003e loadBpStorageDirectories(NamespaceInfo nsInfo,\n       Collection\u003cFile\u003e dataDirs, StartupOption startOpt,\n-      Configuration conf) throws IOException {\n+      List\u003cCallable\u003cStorageDirectory\u003e\u003e callables, Configuration conf)\n+          throws IOException {\n     List\u003cStorageDirectory\u003e succeedDirs \u003d Lists.newArrayList();\n     try {\n       for (File dataDir : dataDirs) {\n         if (containsStorageDir(dataDir)) {\n           throw new IOException(\n               \"BlockPoolSliceStorage.recoverTransitionRead: \" +\n                   \"attempt to load an used block storage: \" + dataDir);\n         }\n         final StorageDirectory sd \u003d loadStorageDirectory(\n-            nsInfo, dataDir, startOpt, conf);\n+            nsInfo, dataDir, startOpt, callables, conf);\n         succeedDirs.add(sd);\n       }\n     } catch (IOException e) {\n       LOG.warn(\"Failed to analyze storage directories for block pool \"\n           + nsInfo.getBlockPoolID(), e);\n       throw e;\n     }\n     return succeedDirs;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  List\u003cStorageDirectory\u003e loadBpStorageDirectories(NamespaceInfo nsInfo,\n      Collection\u003cFile\u003e dataDirs, StartupOption startOpt,\n      List\u003cCallable\u003cStorageDirectory\u003e\u003e callables, Configuration conf)\n          throws IOException {\n    List\u003cStorageDirectory\u003e succeedDirs \u003d Lists.newArrayList();\n    try {\n      for (File dataDir : dataDirs) {\n        if (containsStorageDir(dataDir)) {\n          throw new IOException(\n              \"BlockPoolSliceStorage.recoverTransitionRead: \" +\n                  \"attempt to load an used block storage: \" + dataDir);\n        }\n        final StorageDirectory sd \u003d loadStorageDirectory(\n            nsInfo, dataDir, startOpt, callables, conf);\n        succeedDirs.add(sd);\n      }\n    } catch (IOException e) {\n      LOG.warn(\"Failed to analyze storage directories for block pool \"\n          + nsInfo.getBlockPoolID(), e);\n      throw e;\n    }\n    return succeedDirs;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockPoolSliceStorage.java",
          "extendedDetails": {}
        }
      ]
    },
    "662e17b46a0f41ade6a304e12925b70b5d09fc2f": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-9654. Code refactoring for HDFS-8578.\n",
      "commitDate": "27/01/16 6:58 PM",
      "commitName": "662e17b46a0f41ade6a304e12925b70b5d09fc2f",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-9654. Code refactoring for HDFS-8578.\n",
          "commitDate": "27/01/16 6:58 PM",
          "commitName": "662e17b46a0f41ade6a304e12925b70b5d09fc2f",
          "commitAuthor": "Tsz-Wo Nicholas Sze",
          "commitDateOld": "13/10/15 8:04 AM",
          "commitNameOld": "5b43db47a313decccdcca8f45c5708aab46396df",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 106.5,
          "commitsBetweenForRepo": 736,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,22 @@\n-  List\u003cStorageDirectory\u003e loadBpStorageDirectories(\n-      DataNode datanode, NamespaceInfo nsInfo,\n-      Collection\u003cFile\u003e dataDirs, StartupOption startOpt) throws IOException {\n+  List\u003cStorageDirectory\u003e loadBpStorageDirectories(NamespaceInfo nsInfo,\n+      Collection\u003cFile\u003e dataDirs, StartupOption startOpt,\n+      Configuration conf) throws IOException {\n     List\u003cStorageDirectory\u003e succeedDirs \u003d Lists.newArrayList();\n     try {\n       for (File dataDir : dataDirs) {\n         if (containsStorageDir(dataDir)) {\n           throw new IOException(\n               \"BlockPoolSliceStorage.recoverTransitionRead: \" +\n                   \"attempt to load an used block storage: \" + dataDir);\n         }\n-        StorageDirectory sd \u003d\n-            loadStorageDirectory(datanode, nsInfo, dataDir, startOpt);\n+        final StorageDirectory sd \u003d loadStorageDirectory(\n+            nsInfo, dataDir, startOpt, conf);\n         succeedDirs.add(sd);\n       }\n     } catch (IOException e) {\n       LOG.warn(\"Failed to analyze storage directories for block pool \"\n           + nsInfo.getBlockPoolID(), e);\n       throw e;\n     }\n     return succeedDirs;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  List\u003cStorageDirectory\u003e loadBpStorageDirectories(NamespaceInfo nsInfo,\n      Collection\u003cFile\u003e dataDirs, StartupOption startOpt,\n      Configuration conf) throws IOException {\n    List\u003cStorageDirectory\u003e succeedDirs \u003d Lists.newArrayList();\n    try {\n      for (File dataDir : dataDirs) {\n        if (containsStorageDir(dataDir)) {\n          throw new IOException(\n              \"BlockPoolSliceStorage.recoverTransitionRead: \" +\n                  \"attempt to load an used block storage: \" + dataDir);\n        }\n        final StorageDirectory sd \u003d loadStorageDirectory(\n            nsInfo, dataDir, startOpt, conf);\n        succeedDirs.add(sd);\n      }\n    } catch (IOException e) {\n      LOG.warn(\"Failed to analyze storage directories for block pool \"\n          + nsInfo.getBlockPoolID(), e);\n      throw e;\n    }\n    return succeedDirs;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockPoolSliceStorage.java",
          "extendedDetails": {
            "oldValue": "[datanode-DataNode, nsInfo-NamespaceInfo, dataDirs-Collection\u003cFile\u003e, startOpt-StartupOption]",
            "newValue": "[nsInfo-NamespaceInfo, dataDirs-Collection\u003cFile\u003e, startOpt-StartupOption, conf-Configuration]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-9654. Code refactoring for HDFS-8578.\n",
          "commitDate": "27/01/16 6:58 PM",
          "commitName": "662e17b46a0f41ade6a304e12925b70b5d09fc2f",
          "commitAuthor": "Tsz-Wo Nicholas Sze",
          "commitDateOld": "13/10/15 8:04 AM",
          "commitNameOld": "5b43db47a313decccdcca8f45c5708aab46396df",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 106.5,
          "commitsBetweenForRepo": 736,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,22 @@\n-  List\u003cStorageDirectory\u003e loadBpStorageDirectories(\n-      DataNode datanode, NamespaceInfo nsInfo,\n-      Collection\u003cFile\u003e dataDirs, StartupOption startOpt) throws IOException {\n+  List\u003cStorageDirectory\u003e loadBpStorageDirectories(NamespaceInfo nsInfo,\n+      Collection\u003cFile\u003e dataDirs, StartupOption startOpt,\n+      Configuration conf) throws IOException {\n     List\u003cStorageDirectory\u003e succeedDirs \u003d Lists.newArrayList();\n     try {\n       for (File dataDir : dataDirs) {\n         if (containsStorageDir(dataDir)) {\n           throw new IOException(\n               \"BlockPoolSliceStorage.recoverTransitionRead: \" +\n                   \"attempt to load an used block storage: \" + dataDir);\n         }\n-        StorageDirectory sd \u003d\n-            loadStorageDirectory(datanode, nsInfo, dataDir, startOpt);\n+        final StorageDirectory sd \u003d loadStorageDirectory(\n+            nsInfo, dataDir, startOpt, conf);\n         succeedDirs.add(sd);\n       }\n     } catch (IOException e) {\n       LOG.warn(\"Failed to analyze storage directories for block pool \"\n           + nsInfo.getBlockPoolID(), e);\n       throw e;\n     }\n     return succeedDirs;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  List\u003cStorageDirectory\u003e loadBpStorageDirectories(NamespaceInfo nsInfo,\n      Collection\u003cFile\u003e dataDirs, StartupOption startOpt,\n      Configuration conf) throws IOException {\n    List\u003cStorageDirectory\u003e succeedDirs \u003d Lists.newArrayList();\n    try {\n      for (File dataDir : dataDirs) {\n        if (containsStorageDir(dataDir)) {\n          throw new IOException(\n              \"BlockPoolSliceStorage.recoverTransitionRead: \" +\n                  \"attempt to load an used block storage: \" + dataDir);\n        }\n        final StorageDirectory sd \u003d loadStorageDirectory(\n            nsInfo, dataDir, startOpt, conf);\n        succeedDirs.add(sd);\n      }\n    } catch (IOException e) {\n      LOG.warn(\"Failed to analyze storage directories for block pool \"\n          + nsInfo.getBlockPoolID(), e);\n      throw e;\n    }\n    return succeedDirs;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockPoolSliceStorage.java",
          "extendedDetails": {}
        }
      ]
    },
    "a9331fe9b071fdcdae0c6c747d7b6b306142e671": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-7035. Make adding a new data directory to the DataNode an atomic operation and improve error handling (Lei Xu via Colin P. McCabe)\n",
      "commitDate": "30/10/14 5:31 PM",
      "commitName": "a9331fe9b071fdcdae0c6c747d7b6b306142e671",
      "commitAuthor": "Colin Patrick Mccabe",
      "diff": "@@ -0,0 +1,22 @@\n+  List\u003cStorageDirectory\u003e loadBpStorageDirectories(\n+      DataNode datanode, NamespaceInfo nsInfo,\n+      Collection\u003cFile\u003e dataDirs, StartupOption startOpt) throws IOException {\n+    List\u003cStorageDirectory\u003e succeedDirs \u003d Lists.newArrayList();\n+    try {\n+      for (File dataDir : dataDirs) {\n+        if (containsStorageDir(dataDir)) {\n+          throw new IOException(\n+              \"BlockPoolSliceStorage.recoverTransitionRead: \" +\n+                  \"attempt to load an used block storage: \" + dataDir);\n+        }\n+        StorageDirectory sd \u003d\n+            loadStorageDirectory(datanode, nsInfo, dataDir, startOpt);\n+        succeedDirs.add(sd);\n+      }\n+    } catch (IOException e) {\n+      LOG.warn(\"Failed to analyze storage directories for block pool \"\n+          + nsInfo.getBlockPoolID(), e);\n+      throw e;\n+    }\n+    return succeedDirs;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  List\u003cStorageDirectory\u003e loadBpStorageDirectories(\n      DataNode datanode, NamespaceInfo nsInfo,\n      Collection\u003cFile\u003e dataDirs, StartupOption startOpt) throws IOException {\n    List\u003cStorageDirectory\u003e succeedDirs \u003d Lists.newArrayList();\n    try {\n      for (File dataDir : dataDirs) {\n        if (containsStorageDir(dataDir)) {\n          throw new IOException(\n              \"BlockPoolSliceStorage.recoverTransitionRead: \" +\n                  \"attempt to load an used block storage: \" + dataDir);\n        }\n        StorageDirectory sd \u003d\n            loadStorageDirectory(datanode, nsInfo, dataDir, startOpt);\n        succeedDirs.add(sd);\n      }\n    } catch (IOException e) {\n      LOG.warn(\"Failed to analyze storage directories for block pool \"\n          + nsInfo.getBlockPoolID(), e);\n      throw e;\n    }\n    return succeedDirs;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BlockPoolSliceStorage.java"
    }
  }
}