{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ZKDelegationTokenSecretManager.java",
  "functionName": "updateToken",
  "functionId": "updateToken___ident-TokenIdent__tokenInfo-DelegationTokenInformation",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/ZKDelegationTokenSecretManager.java",
  "functionStartLine": 818,
  "functionEndLine": 834,
  "numCommitsSeen": 16,
  "timeTaken": 1426,
  "changeHistory": [
    "bd8196e85e49d44de57237a59bcd7ceae4332c2e",
    "db45f047ab6b19d8a3e7752bb2cde10827cd8dad",
    "db890eef3208cc557476fa510f7a253ba22bc68a"
  ],
  "changeHistoryShort": {
    "bd8196e85e49d44de57237a59bcd7ceae4332c2e": "Ybodychange",
    "db45f047ab6b19d8a3e7752bb2cde10827cd8dad": "Ybodychange",
    "db890eef3208cc557476fa510f7a253ba22bc68a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bd8196e85e49d44de57237a59bcd7ceae4332c2e": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11157. ZKDelegationTokenSecretManager never shuts down listenerThreadPool. Contributed by Arun Suresh.\n",
      "commitDate": "17/11/14 1:02 PM",
      "commitName": "bd8196e85e49d44de57237a59bcd7ceae4332c2e",
      "commitAuthor": "Aaron T. Myers",
      "commitDateOld": "05/11/14 5:47 PM",
      "commitNameOld": "8a261e68e4177b47be01ceae7310ea56aeb7ca38",
      "commitAuthorOld": "Aaron T. Myers",
      "daysBetweenCommits": 11.8,
      "commitsBetweenForRepo": 105,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,17 @@\n   protected void updateToken(TokenIdent ident,\n       DelegationTokenInformation tokenInfo) throws IOException {\n-    currentTokens.put(ident, tokenInfo);\n     String nodeRemovePath \u003d\n         getNodePath(ZK_DTSM_TOKENS_ROOT, DELEGATION_TOKEN_PREFIX\n             + ident.getSequenceNumber());\n     try {\n       if (zkClient.checkExists().forPath(nodeRemovePath) !\u003d null) {\n         addOrUpdateToken(ident, tokenInfo, true);\n       } else {\n         addOrUpdateToken(ident, tokenInfo, false);\n         LOG.debug(\"Attempted to update a non-existing znode \" + nodeRemovePath);\n       }\n     } catch (Exception e) {\n       throw new RuntimeException(\"Could not update Stored Token ZKDTSMDelegationToken_\"\n           + ident.getSequenceNumber(), e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void updateToken(TokenIdent ident,\n      DelegationTokenInformation tokenInfo) throws IOException {\n    String nodeRemovePath \u003d\n        getNodePath(ZK_DTSM_TOKENS_ROOT, DELEGATION_TOKEN_PREFIX\n            + ident.getSequenceNumber());\n    try {\n      if (zkClient.checkExists().forPath(nodeRemovePath) !\u003d null) {\n        addOrUpdateToken(ident, tokenInfo, true);\n      } else {\n        addOrUpdateToken(ident, tokenInfo, false);\n        LOG.debug(\"Attempted to update a non-existing znode \" + nodeRemovePath);\n      }\n    } catch (Exception e) {\n      throw new RuntimeException(\"Could not update Stored Token ZKDTSMDelegationToken_\"\n          + ident.getSequenceNumber(), e);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/ZKDelegationTokenSecretManager.java",
      "extendedDetails": {}
    },
    "db45f047ab6b19d8a3e7752bb2cde10827cd8dad": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11170. ZKDelegationTokenSecretManager fails to renewToken created by a peer. (Arun Suresh and Gregory Chanan via kasha)\n",
      "commitDate": "23/10/14 5:04 PM",
      "commitName": "db45f047ab6b19d8a3e7752bb2cde10827cd8dad",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "22/10/14 2:26 PM",
      "commitNameOld": "70719e5c62f32836914bea88e1ddd99c0ed009e1",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 1.11,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   protected void updateToken(TokenIdent ident,\n       DelegationTokenInformation tokenInfo) throws IOException {\n     currentTokens.put(ident, tokenInfo);\n     String nodeRemovePath \u003d\n         getNodePath(ZK_DTSM_TOKENS_ROOT, DELEGATION_TOKEN_PREFIX\n             + ident.getSequenceNumber());\n     try {\n       if (zkClient.checkExists().forPath(nodeRemovePath) !\u003d null) {\n+        addOrUpdateToken(ident, tokenInfo, true);\n+      } else {\n         addOrUpdateToken(ident, tokenInfo, false);\n         LOG.debug(\"Attempted to update a non-existing znode \" + nodeRemovePath);\n-      } else {\n-        addOrUpdateToken(ident, tokenInfo, true);\n       }\n     } catch (Exception e) {\n       throw new RuntimeException(\"Could not update Stored Token ZKDTSMDelegationToken_\"\n           + ident.getSequenceNumber(), e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void updateToken(TokenIdent ident,\n      DelegationTokenInformation tokenInfo) throws IOException {\n    currentTokens.put(ident, tokenInfo);\n    String nodeRemovePath \u003d\n        getNodePath(ZK_DTSM_TOKENS_ROOT, DELEGATION_TOKEN_PREFIX\n            + ident.getSequenceNumber());\n    try {\n      if (zkClient.checkExists().forPath(nodeRemovePath) !\u003d null) {\n        addOrUpdateToken(ident, tokenInfo, true);\n      } else {\n        addOrUpdateToken(ident, tokenInfo, false);\n        LOG.debug(\"Attempted to update a non-existing znode \" + nodeRemovePath);\n      }\n    } catch (Exception e) {\n      throw new RuntimeException(\"Could not update Stored Token ZKDTSMDelegationToken_\"\n          + ident.getSequenceNumber(), e);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/ZKDelegationTokenSecretManager.java",
      "extendedDetails": {}
    },
    "db890eef3208cc557476fa510f7a253ba22bc68a": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-11017. KMS delegation token secret manager should be able to use zookeeper as store. (asuresh via tucu)\n",
      "commitDate": "20/09/14 8:21 AM",
      "commitName": "db890eef3208cc557476fa510f7a253ba22bc68a",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,18 @@\n+  protected void updateToken(TokenIdent ident,\n+      DelegationTokenInformation tokenInfo) throws IOException {\n+    currentTokens.put(ident, tokenInfo);\n+    String nodeRemovePath \u003d\n+        getNodePath(ZK_DTSM_TOKENS_ROOT, DELEGATION_TOKEN_PREFIX\n+            + ident.getSequenceNumber());\n+    try {\n+      if (zkClient.checkExists().forPath(nodeRemovePath) !\u003d null) {\n+        addOrUpdateToken(ident, tokenInfo, false);\n+        LOG.debug(\"Attempted to update a non-existing znode \" + nodeRemovePath);\n+      } else {\n+        addOrUpdateToken(ident, tokenInfo, true);\n+      }\n+    } catch (Exception e) {\n+      throw new RuntimeException(\"Could not update Stored Token ZKDTSMDelegationToken_\"\n+          + ident.getSequenceNumber(), e);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void updateToken(TokenIdent ident,\n      DelegationTokenInformation tokenInfo) throws IOException {\n    currentTokens.put(ident, tokenInfo);\n    String nodeRemovePath \u003d\n        getNodePath(ZK_DTSM_TOKENS_ROOT, DELEGATION_TOKEN_PREFIX\n            + ident.getSequenceNumber());\n    try {\n      if (zkClient.checkExists().forPath(nodeRemovePath) !\u003d null) {\n        addOrUpdateToken(ident, tokenInfo, false);\n        LOG.debug(\"Attempted to update a non-existing znode \" + nodeRemovePath);\n      } else {\n        addOrUpdateToken(ident, tokenInfo, true);\n      }\n    } catch (Exception e) {\n      throw new RuntimeException(\"Could not update Stored Token ZKDTSMDelegationToken_\"\n          + ident.getSequenceNumber(), e);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/ZKDelegationTokenSecretManager.java"
    }
  }
}