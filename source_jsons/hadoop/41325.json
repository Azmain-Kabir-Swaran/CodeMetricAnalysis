{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSAppAttempt.java",
  "functionName": "isUsageBelowShare",
  "functionId": "isUsageBelowShare___usage-Resource__share-Resource",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSAppAttempt.java",
  "functionStartLine": 1187,
  "functionEndLine": 1190,
  "numCommitsSeen": 76,
  "timeTaken": 1924,
  "changeHistory": [
    "90cb5b4635b7a0849912458afad052f569131a59",
    "718ad9f6ee93d4145f2bb19b7582ce4e1174feaf"
  ],
  "changeHistoryShort": {
    "90cb5b4635b7a0849912458afad052f569131a59": "Ybodychange",
    "718ad9f6ee93d4145f2bb19b7582ce4e1174feaf": "Yintroduced"
  },
  "changeHistoryDetails": {
    "90cb5b4635b7a0849912458afad052f569131a59": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6380. FSAppAttempt keeps redundant copy of the queue\n",
      "commitDate": "11/05/17 1:47 PM",
      "commitName": "90cb5b4635b7a0849912458afad052f569131a59",
      "commitAuthor": "Daniel Templeton",
      "commitDateOld": "12/04/17 2:21 PM",
      "commitNameOld": "c3375175d616e0380560f89d491b6b9753a8f3e1",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 28.98,
      "commitsBetweenForRepo": 155,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,4 +1,4 @@\n   private boolean isUsageBelowShare(Resource usage, Resource share) {\n-    return fsQueue.getPolicy().getResourceCalculator().compare(\n+    return getQueue().getPolicy().getResourceCalculator().compare(\n         scheduler.getClusterResource(), usage, share, true) \u003c 0;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean isUsageBelowShare(Resource usage, Resource share) {\n    return getQueue().getPolicy().getResourceCalculator().compare(\n        scheduler.getClusterResource(), usage, share, true) \u003c 0;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSAppAttempt.java",
      "extendedDetails": {}
    },
    "718ad9f6ee93d4145f2bb19b7582ce4e1174feaf": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6210. FairScheduler: Node reservations can interfere with preemption. (kasha)\n",
      "commitDate": "22/02/17 3:46 PM",
      "commitName": "718ad9f6ee93d4145f2bb19b7582ce4e1174feaf",
      "commitAuthor": "Karthik Kambatla",
      "diff": "@@ -0,0 +1,4 @@\n+  private boolean isUsageBelowShare(Resource usage, Resource share) {\n+    return fsQueue.getPolicy().getResourceCalculator().compare(\n+        scheduler.getClusterResource(), usage, share, true) \u003c 0;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean isUsageBelowShare(Resource usage, Resource share) {\n    return fsQueue.getPolicy().getResourceCalculator().compare(\n        scheduler.getClusterResource(), usage, share, true) \u003c 0;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSAppAttempt.java"
    }
  }
}