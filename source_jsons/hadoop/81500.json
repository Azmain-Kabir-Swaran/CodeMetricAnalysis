{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LogLevel.java",
  "functionName": "process",
  "functionId": "process___urlString-String",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/log/LogLevel.java",
  "functionStartLine": 289,
  "functionEndLine": 308,
  "numCommitsSeen": 24,
  "timeTaken": 2224,
  "changeHistory": [
    "34cc21f6d1a293d92613defba38e8ae810db4c71",
    "5b9fcedb4d116d91d70aaad6cbf59093eeee36df",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36"
  ],
  "changeHistoryShort": {
    "34cc21f6d1a293d92613defba38e8ae810db4c71": "Ymultichange(Yparameterchange,Ymodifierchange,Yexceptionschange,Ybodychange)",
    "5b9fcedb4d116d91d70aaad6cbf59093eeee36df": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": "Yintroduced"
  },
  "changeHistoryDetails": {
    "34cc21f6d1a293d92613defba38e8ae810db4c71": {
      "type": "Ymultichange(Yparameterchange,Ymodifierchange,Yexceptionschange,Ybodychange)",
      "commitMessage": "HADOOP-12847. hadoop daemonlog should support https and SPNEGO for Kerberized cluster. (Wei-Chiu Chuang via Yongjun Zhang)\n",
      "commitDate": "26/05/16 10:43 PM",
      "commitName": "34cc21f6d1a293d92613defba38e8ae810db4c71",
      "commitAuthor": "Yongjun Zhang",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-12847. hadoop daemonlog should support https and SPNEGO for Kerberized cluster. (Wei-Chiu Chuang via Yongjun Zhang)\n",
          "commitDate": "26/05/16 10:43 PM",
          "commitName": "34cc21f6d1a293d92613defba38e8ae810db4c71",
          "commitAuthor": "Yongjun Zhang",
          "commitDateOld": "05/05/16 5:56 PM",
          "commitNameOld": "4e5e87ddd4a47dbea2b23387782e7cd47dec560e",
          "commitAuthorOld": "Xiaoyu Yao",
          "daysBetweenCommits": 21.2,
          "commitsBetweenForRepo": 157,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,20 @@\n-  private static void process(String urlstring) {\n-    try {\n-      URL url \u003d new URL(urlstring);\n+    private void process(String urlString) throws Exception {\n+      URL url \u003d new URL(urlString);\n       System.out.println(\"Connecting to \" + url);\n-      URLConnection connection \u003d url.openConnection();\n-      connection.connect();\n \n-      BufferedReader in \u003d new BufferedReader(new InputStreamReader(\n-          connection.getInputStream(), Charsets.UTF_8));\n-      for(String line; (line \u003d in.readLine()) !\u003d null; )\n+      URLConnection connection \u003d connect(url);\n+\n+      // read from the servlet\n+      BufferedReader in \u003d new BufferedReader(\n+          new InputStreamReader(connection.getInputStream(), Charsets.UTF_8));\n+      for (String line;;) {\n+        line \u003d in.readLine();\n+        if (line \u003d\u003d null) {\n+          break;\n+        }\n         if (line.startsWith(MARKER)) {\n           System.out.println(TAG.matcher(line).replaceAll(\"\"));\n         }\n+      }\n       in.close();\n-    } catch (IOException ioe) {\n-      System.err.println(\"\" + ioe);\n-    }\n-  }\n\\ No newline at end of file\n+    }\n\\ No newline at end of file\n",
          "actualSource": "    private void process(String urlString) throws Exception {\n      URL url \u003d new URL(urlString);\n      System.out.println(\"Connecting to \" + url);\n\n      URLConnection connection \u003d connect(url);\n\n      // read from the servlet\n      BufferedReader in \u003d new BufferedReader(\n          new InputStreamReader(connection.getInputStream(), Charsets.UTF_8));\n      for (String line;;) {\n        line \u003d in.readLine();\n        if (line \u003d\u003d null) {\n          break;\n        }\n        if (line.startsWith(MARKER)) {\n          System.out.println(TAG.matcher(line).replaceAll(\"\"));\n        }\n      }\n      in.close();\n    }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/log/LogLevel.java",
          "extendedDetails": {
            "oldValue": "[urlstring-String]",
            "newValue": "[urlString-String]"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HADOOP-12847. hadoop daemonlog should support https and SPNEGO for Kerberized cluster. (Wei-Chiu Chuang via Yongjun Zhang)\n",
          "commitDate": "26/05/16 10:43 PM",
          "commitName": "34cc21f6d1a293d92613defba38e8ae810db4c71",
          "commitAuthor": "Yongjun Zhang",
          "commitDateOld": "05/05/16 5:56 PM",
          "commitNameOld": "4e5e87ddd4a47dbea2b23387782e7cd47dec560e",
          "commitAuthorOld": "Xiaoyu Yao",
          "daysBetweenCommits": 21.2,
          "commitsBetweenForRepo": 157,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,20 @@\n-  private static void process(String urlstring) {\n-    try {\n-      URL url \u003d new URL(urlstring);\n+    private void process(String urlString) throws Exception {\n+      URL url \u003d new URL(urlString);\n       System.out.println(\"Connecting to \" + url);\n-      URLConnection connection \u003d url.openConnection();\n-      connection.connect();\n \n-      BufferedReader in \u003d new BufferedReader(new InputStreamReader(\n-          connection.getInputStream(), Charsets.UTF_8));\n-      for(String line; (line \u003d in.readLine()) !\u003d null; )\n+      URLConnection connection \u003d connect(url);\n+\n+      // read from the servlet\n+      BufferedReader in \u003d new BufferedReader(\n+          new InputStreamReader(connection.getInputStream(), Charsets.UTF_8));\n+      for (String line;;) {\n+        line \u003d in.readLine();\n+        if (line \u003d\u003d null) {\n+          break;\n+        }\n         if (line.startsWith(MARKER)) {\n           System.out.println(TAG.matcher(line).replaceAll(\"\"));\n         }\n+      }\n       in.close();\n-    } catch (IOException ioe) {\n-      System.err.println(\"\" + ioe);\n-    }\n-  }\n\\ No newline at end of file\n+    }\n\\ No newline at end of file\n",
          "actualSource": "    private void process(String urlString) throws Exception {\n      URL url \u003d new URL(urlString);\n      System.out.println(\"Connecting to \" + url);\n\n      URLConnection connection \u003d connect(url);\n\n      // read from the servlet\n      BufferedReader in \u003d new BufferedReader(\n          new InputStreamReader(connection.getInputStream(), Charsets.UTF_8));\n      for (String line;;) {\n        line \u003d in.readLine();\n        if (line \u003d\u003d null) {\n          break;\n        }\n        if (line.startsWith(MARKER)) {\n          System.out.println(TAG.matcher(line).replaceAll(\"\"));\n        }\n      }\n      in.close();\n    }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/log/LogLevel.java",
          "extendedDetails": {
            "oldValue": "[private, static]",
            "newValue": "[private]"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "HADOOP-12847. hadoop daemonlog should support https and SPNEGO for Kerberized cluster. (Wei-Chiu Chuang via Yongjun Zhang)\n",
          "commitDate": "26/05/16 10:43 PM",
          "commitName": "34cc21f6d1a293d92613defba38e8ae810db4c71",
          "commitAuthor": "Yongjun Zhang",
          "commitDateOld": "05/05/16 5:56 PM",
          "commitNameOld": "4e5e87ddd4a47dbea2b23387782e7cd47dec560e",
          "commitAuthorOld": "Xiaoyu Yao",
          "daysBetweenCommits": 21.2,
          "commitsBetweenForRepo": 157,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,20 @@\n-  private static void process(String urlstring) {\n-    try {\n-      URL url \u003d new URL(urlstring);\n+    private void process(String urlString) throws Exception {\n+      URL url \u003d new URL(urlString);\n       System.out.println(\"Connecting to \" + url);\n-      URLConnection connection \u003d url.openConnection();\n-      connection.connect();\n \n-      BufferedReader in \u003d new BufferedReader(new InputStreamReader(\n-          connection.getInputStream(), Charsets.UTF_8));\n-      for(String line; (line \u003d in.readLine()) !\u003d null; )\n+      URLConnection connection \u003d connect(url);\n+\n+      // read from the servlet\n+      BufferedReader in \u003d new BufferedReader(\n+          new InputStreamReader(connection.getInputStream(), Charsets.UTF_8));\n+      for (String line;;) {\n+        line \u003d in.readLine();\n+        if (line \u003d\u003d null) {\n+          break;\n+        }\n         if (line.startsWith(MARKER)) {\n           System.out.println(TAG.matcher(line).replaceAll(\"\"));\n         }\n+      }\n       in.close();\n-    } catch (IOException ioe) {\n-      System.err.println(\"\" + ioe);\n-    }\n-  }\n\\ No newline at end of file\n+    }\n\\ No newline at end of file\n",
          "actualSource": "    private void process(String urlString) throws Exception {\n      URL url \u003d new URL(urlString);\n      System.out.println(\"Connecting to \" + url);\n\n      URLConnection connection \u003d connect(url);\n\n      // read from the servlet\n      BufferedReader in \u003d new BufferedReader(\n          new InputStreamReader(connection.getInputStream(), Charsets.UTF_8));\n      for (String line;;) {\n        line \u003d in.readLine();\n        if (line \u003d\u003d null) {\n          break;\n        }\n        if (line.startsWith(MARKER)) {\n          System.out.println(TAG.matcher(line).replaceAll(\"\"));\n        }\n      }\n      in.close();\n    }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/log/LogLevel.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[Exception]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-12847. hadoop daemonlog should support https and SPNEGO for Kerberized cluster. (Wei-Chiu Chuang via Yongjun Zhang)\n",
          "commitDate": "26/05/16 10:43 PM",
          "commitName": "34cc21f6d1a293d92613defba38e8ae810db4c71",
          "commitAuthor": "Yongjun Zhang",
          "commitDateOld": "05/05/16 5:56 PM",
          "commitNameOld": "4e5e87ddd4a47dbea2b23387782e7cd47dec560e",
          "commitAuthorOld": "Xiaoyu Yao",
          "daysBetweenCommits": 21.2,
          "commitsBetweenForRepo": 157,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,20 @@\n-  private static void process(String urlstring) {\n-    try {\n-      URL url \u003d new URL(urlstring);\n+    private void process(String urlString) throws Exception {\n+      URL url \u003d new URL(urlString);\n       System.out.println(\"Connecting to \" + url);\n-      URLConnection connection \u003d url.openConnection();\n-      connection.connect();\n \n-      BufferedReader in \u003d new BufferedReader(new InputStreamReader(\n-          connection.getInputStream(), Charsets.UTF_8));\n-      for(String line; (line \u003d in.readLine()) !\u003d null; )\n+      URLConnection connection \u003d connect(url);\n+\n+      // read from the servlet\n+      BufferedReader in \u003d new BufferedReader(\n+          new InputStreamReader(connection.getInputStream(), Charsets.UTF_8));\n+      for (String line;;) {\n+        line \u003d in.readLine();\n+        if (line \u003d\u003d null) {\n+          break;\n+        }\n         if (line.startsWith(MARKER)) {\n           System.out.println(TAG.matcher(line).replaceAll(\"\"));\n         }\n+      }\n       in.close();\n-    } catch (IOException ioe) {\n-      System.err.println(\"\" + ioe);\n-    }\n-  }\n\\ No newline at end of file\n+    }\n\\ No newline at end of file\n",
          "actualSource": "    private void process(String urlString) throws Exception {\n      URL url \u003d new URL(urlString);\n      System.out.println(\"Connecting to \" + url);\n\n      URLConnection connection \u003d connect(url);\n\n      // read from the servlet\n      BufferedReader in \u003d new BufferedReader(\n          new InputStreamReader(connection.getInputStream(), Charsets.UTF_8));\n      for (String line;;) {\n        line \u003d in.readLine();\n        if (line \u003d\u003d null) {\n          break;\n        }\n        if (line.startsWith(MARKER)) {\n          System.out.println(TAG.matcher(line).replaceAll(\"\"));\n        }\n      }\n      in.close();\n    }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/log/LogLevel.java",
          "extendedDetails": {}
        }
      ]
    },
    "5b9fcedb4d116d91d70aaad6cbf59093eeee36df": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11389. Clean up byte to string encoding issues in hadoop-common. Contributed by Haohui Mai.\n",
      "commitDate": "11/12/14 4:42 PM",
      "commitName": "5b9fcedb4d116d91d70aaad6cbf59093eeee36df",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "27/01/14 11:32 PM",
      "commitNameOld": "33a47743a5f4263bc21b345587370c5ecf43f5b4",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 317.72,
      "commitsBetweenForRepo": 2628,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   private static void process(String urlstring) {\n     try {\n       URL url \u003d new URL(urlstring);\n       System.out.println(\"Connecting to \" + url);\n       URLConnection connection \u003d url.openConnection();\n       connection.connect();\n \n       BufferedReader in \u003d new BufferedReader(new InputStreamReader(\n-          connection.getInputStream()));\n+          connection.getInputStream(), Charsets.UTF_8));\n       for(String line; (line \u003d in.readLine()) !\u003d null; )\n         if (line.startsWith(MARKER)) {\n           System.out.println(TAG.matcher(line).replaceAll(\"\"));\n         }\n       in.close();\n     } catch (IOException ioe) {\n       System.err.println(\"\" + ioe);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void process(String urlstring) {\n    try {\n      URL url \u003d new URL(urlstring);\n      System.out.println(\"Connecting to \" + url);\n      URLConnection connection \u003d url.openConnection();\n      connection.connect();\n\n      BufferedReader in \u003d new BufferedReader(new InputStreamReader(\n          connection.getInputStream(), Charsets.UTF_8));\n      for(String line; (line \u003d in.readLine()) !\u003d null; )\n        if (line.startsWith(MARKER)) {\n          System.out.println(TAG.matcher(line).replaceAll(\"\"));\n        }\n      in.close();\n    } catch (IOException ioe) {\n      System.err.println(\"\" + ioe);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/log/LogLevel.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private static void process(String urlstring) {\n    try {\n      URL url \u003d new URL(urlstring);\n      System.out.println(\"Connecting to \" + url);\n      URLConnection connection \u003d url.openConnection();\n      connection.connect();\n\n      BufferedReader in \u003d new BufferedReader(new InputStreamReader(\n          connection.getInputStream()));\n      for(String line; (line \u003d in.readLine()) !\u003d null; )\n        if (line.startsWith(MARKER)) {\n          System.out.println(TAG.matcher(line).replaceAll(\"\"));\n        }\n      in.close();\n    } catch (IOException ioe) {\n      System.err.println(\"\" + ioe);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/log/LogLevel.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/log/LogLevel.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/log/LogLevel.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private static void process(String urlstring) {\n    try {\n      URL url \u003d new URL(urlstring);\n      System.out.println(\"Connecting to \" + url);\n      URLConnection connection \u003d url.openConnection();\n      connection.connect();\n\n      BufferedReader in \u003d new BufferedReader(new InputStreamReader(\n          connection.getInputStream()));\n      for(String line; (line \u003d in.readLine()) !\u003d null; )\n        if (line.startsWith(MARKER)) {\n          System.out.println(TAG.matcher(line).replaceAll(\"\"));\n        }\n      in.close();\n    } catch (IOException ioe) {\n      System.err.println(\"\" + ioe);\n    }\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/log/LogLevel.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/log/LogLevel.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/log/LogLevel.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private static void process(String urlstring) {\n    try {\n      URL url \u003d new URL(urlstring);\n      System.out.println(\"Connecting to \" + url);\n      URLConnection connection \u003d url.openConnection();\n      connection.connect();\n\n      BufferedReader in \u003d new BufferedReader(new InputStreamReader(\n          connection.getInputStream()));\n      for(String line; (line \u003d in.readLine()) !\u003d null; )\n        if (line.startsWith(MARKER)) {\n          System.out.println(TAG.matcher(line).replaceAll(\"\"));\n        }\n      in.close();\n    } catch (IOException ioe) {\n      System.err.println(\"\" + ioe);\n    }\n  }",
      "path": "common/src/java/org/apache/hadoop/log/LogLevel.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/log/LogLevel.java",
        "newPath": "common/src/java/org/apache/hadoop/log/LogLevel.java"
      }
    },
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-4687 Moving src directories on branch\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/core/branches/HADOOP-4687/core@776174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/05/09 9:20 PM",
      "commitName": "5128a9a453d64bfe1ed978cf9ffed27985eeef36",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,18 @@\n+  private static void process(String urlstring) {\n+    try {\n+      URL url \u003d new URL(urlstring);\n+      System.out.println(\"Connecting to \" + url);\n+      URLConnection connection \u003d url.openConnection();\n+      connection.connect();\n+\n+      BufferedReader in \u003d new BufferedReader(new InputStreamReader(\n+          connection.getInputStream()));\n+      for(String line; (line \u003d in.readLine()) !\u003d null; )\n+        if (line.startsWith(MARKER)) {\n+          System.out.println(TAG.matcher(line).replaceAll(\"\"));\n+        }\n+      in.close();\n+    } catch (IOException ioe) {\n+      System.err.println(\"\" + ioe);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static void process(String urlstring) {\n    try {\n      URL url \u003d new URL(urlstring);\n      System.out.println(\"Connecting to \" + url);\n      URLConnection connection \u003d url.openConnection();\n      connection.connect();\n\n      BufferedReader in \u003d new BufferedReader(new InputStreamReader(\n          connection.getInputStream()));\n      for(String line; (line \u003d in.readLine()) !\u003d null; )\n        if (line.startsWith(MARKER)) {\n          System.out.println(TAG.matcher(line).replaceAll(\"\"));\n        }\n      in.close();\n    } catch (IOException ioe) {\n      System.err.println(\"\" + ioe);\n    }\n  }",
      "path": "src/java/org/apache/hadoop/log/LogLevel.java"
    }
  }
}