{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BPServiceActor.java",
  "functionName": "reRegister",
  "functionId": "reRegister",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPServiceActor.java",
  "functionStartLine": 912,
  "functionEndLine": 929,
  "numCommitsSeen": 125,
  "timeTaken": 4368,
  "changeHistory": [
    "e9955bb8ff44396eb478f709307d647ca884de99",
    "091ad974cd29fae0cf8fbc98ab84900a1a324839",
    "818d6b799eead13a17a0214172df60a269b046fb",
    "dfc1c4c303cf15afc6c3361ed9d3238562f73cbd",
    "d324164a51a43d72c02567248bd9f0f12b244a40",
    "d3a2fe280775e9320181b671d5951f06837bddad",
    "1e346aa829519f8a2aa830e76d9856f914861805"
  ],
  "changeHistoryShort": {
    "e9955bb8ff44396eb478f709307d647ca884de99": "Ybodychange",
    "091ad974cd29fae0cf8fbc98ab84900a1a324839": "Ybodychange",
    "818d6b799eead13a17a0214172df60a269b046fb": "Ybodychange",
    "dfc1c4c303cf15afc6c3361ed9d3238562f73cbd": "Ybodychange",
    "d324164a51a43d72c02567248bd9f0f12b244a40": "Ybodychange",
    "d3a2fe280775e9320181b671d5951f06837bddad": "Ybodychange",
    "1e346aa829519f8a2aa830e76d9856f914861805": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e9955bb8ff44396eb478f709307d647ca884de99": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-15113. Missing IBR when NameNode restart if open processCommand async feature. Contributed by Xiaoqiao He.\n\nSigned-off-by: Wei-Chiu Chuang \u003cweichiu@apache.org\u003e\nReviewed-by: Brahma Reddy Battula \u003cbrahma@apache.org\u003e\nReviewed-by: Inigo Goiri \u003cinigoiri@apache.org\u003e\n",
      "commitDate": "13/03/20 6:55 PM",
      "commitName": "e9955bb8ff44396eb478f709307d647ca884de99",
      "commitAuthor": "He Xiaoqiao",
      "commitDateOld": "27/02/20 12:38 AM",
      "commitNameOld": "2059f255d39510cddbb954b21ed4871a737bd2dc",
      "commitAuthorOld": "Surendra Singh Lilhore",
      "daysBetweenCommits": 15.72,
      "commitsBetweenForRepo": 56,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,18 @@\n   void reRegister() throws IOException {\n     if (shouldRun()) {\n       // re-retrieve namespace info to make sure that, if the NN\n       // was restarted, we still match its version (HDFS-2120)\n       NamespaceInfo nsInfo \u003d retrieveNamespaceInfo();\n-      // and re-register\n-      register(nsInfo);\n-      scheduler.scheduleHeartbeat();\n       // HDFS-9917,Standby NN IBR can be very huge if standby namenode is down\n       // for sometime.\n       if (state \u003d\u003d HAServiceState.STANDBY || state \u003d\u003d HAServiceState.OBSERVER) {\n         ibrManager.clearIBRs();\n       }\n+      // HDFS-15113, register and trigger FBR after clean IBR to avoid missing\n+      // some blocks report to Standby util next FBR.\n+      // and re-register\n+      register(nsInfo);\n+      scheduler.scheduleHeartbeat();\n+      DataNodeFaultInjector.get().blockUtilSendFullBlockReport();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void reRegister() throws IOException {\n    if (shouldRun()) {\n      // re-retrieve namespace info to make sure that, if the NN\n      // was restarted, we still match its version (HDFS-2120)\n      NamespaceInfo nsInfo \u003d retrieveNamespaceInfo();\n      // HDFS-9917,Standby NN IBR can be very huge if standby namenode is down\n      // for sometime.\n      if (state \u003d\u003d HAServiceState.STANDBY || state \u003d\u003d HAServiceState.OBSERVER) {\n        ibrManager.clearIBRs();\n      }\n      // HDFS-15113, register and trigger FBR after clean IBR to avoid missing\n      // some blocks report to Standby util next FBR.\n      // and re-register\n      register(nsInfo);\n      scheduler.scheduleHeartbeat();\n      DataNodeFaultInjector.get().blockUtilSendFullBlockReport();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPServiceActor.java",
      "extendedDetails": {}
    },
    "091ad974cd29fae0cf8fbc98ab84900a1a324839": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13286. [SBN read] Add haadmin commands to transition between standby and observer. Contributed by Chao Sun.\n",
      "commitDate": "24/12/18 9:33 AM",
      "commitName": "091ad974cd29fae0cf8fbc98ab84900a1a324839",
      "commitAuthor": "Erik Krogen",
      "commitDateOld": "15/11/18 10:58 AM",
      "commitNameOld": "460a94a10f9c314b77a25e14efbf7c4dc3f5d9aa",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 38.94,
      "commitsBetweenForRepo": 239,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n   void reRegister() throws IOException {\n     if (shouldRun()) {\n       // re-retrieve namespace info to make sure that, if the NN\n       // was restarted, we still match its version (HDFS-2120)\n       NamespaceInfo nsInfo \u003d retrieveNamespaceInfo();\n       // and re-register\n       register(nsInfo);\n       scheduler.scheduleHeartbeat();\n       // HDFS-9917,Standby NN IBR can be very huge if standby namenode is down\n       // for sometime.\n-      if (state \u003d\u003d HAServiceState.STANDBY) {\n+      if (state \u003d\u003d HAServiceState.STANDBY || state \u003d\u003d HAServiceState.OBSERVER) {\n         ibrManager.clearIBRs();\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void reRegister() throws IOException {\n    if (shouldRun()) {\n      // re-retrieve namespace info to make sure that, if the NN\n      // was restarted, we still match its version (HDFS-2120)\n      NamespaceInfo nsInfo \u003d retrieveNamespaceInfo();\n      // and re-register\n      register(nsInfo);\n      scheduler.scheduleHeartbeat();\n      // HDFS-9917,Standby NN IBR can be very huge if standby namenode is down\n      // for sometime.\n      if (state \u003d\u003d HAServiceState.STANDBY || state \u003d\u003d HAServiceState.OBSERVER) {\n        ibrManager.clearIBRs();\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPServiceActor.java",
      "extendedDetails": {}
    },
    "818d6b799eead13a17a0214172df60a269b046fb": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9917. IBR accumulate more objects when SNN was down for sometime. (Contributed by Brahma Reddy Battula)\n",
      "commitDate": "04/04/16 6:49 PM",
      "commitName": "818d6b799eead13a17a0214172df60a269b046fb",
      "commitAuthor": "Vinayakumar B",
      "commitDateOld": "07/03/16 9:10 PM",
      "commitNameOld": "c2140d05efaf18b41caae8c61d9f6d668ab0e874",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 27.86,
      "commitsBetweenForRepo": 152,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,15 @@\n   void reRegister() throws IOException {\n     if (shouldRun()) {\n       // re-retrieve namespace info to make sure that, if the NN\n       // was restarted, we still match its version (HDFS-2120)\n       NamespaceInfo nsInfo \u003d retrieveNamespaceInfo();\n       // and re-register\n       register(nsInfo);\n       scheduler.scheduleHeartbeat();\n+      // HDFS-9917,Standby NN IBR can be very huge if standby namenode is down\n+      // for sometime.\n+      if (state \u003d\u003d HAServiceState.STANDBY) {\n+        ibrManager.clearIBRs();\n+      }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void reRegister() throws IOException {\n    if (shouldRun()) {\n      // re-retrieve namespace info to make sure that, if the NN\n      // was restarted, we still match its version (HDFS-2120)\n      NamespaceInfo nsInfo \u003d retrieveNamespaceInfo();\n      // and re-register\n      register(nsInfo);\n      scheduler.scheduleHeartbeat();\n      // HDFS-9917,Standby NN IBR can be very huge if standby namenode is down\n      // for sometime.\n      if (state \u003d\u003d HAServiceState.STANDBY) {\n        ibrManager.clearIBRs();\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPServiceActor.java",
      "extendedDetails": {}
    },
    "dfc1c4c303cf15afc6c3361ed9d3238562f73cbd": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8163. Using monotonicNow for block report scheduling causes test failures on recently restarted systems. (Arpit Agarwal)\n",
      "commitDate": "21/04/15 10:58 AM",
      "commitName": "dfc1c4c303cf15afc6c3361ed9d3238562f73cbd",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "08/04/15 9:43 PM",
      "commitNameOld": "b1e059089d6a5b2b7006d7d384c6df81ed268bd9",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 12.55,
      "commitsBetweenForRepo": 85,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,10 @@\n   void reRegister() throws IOException {\n     if (shouldRun()) {\n       // re-retrieve namespace info to make sure that, if the NN\n       // was restarted, we still match its version (HDFS-2120)\n       NamespaceInfo nsInfo \u003d retrieveNamespaceInfo();\n       // and re-register\n       register(nsInfo);\n-      scheduleHeartbeat();\n+      scheduler.scheduleHeartbeat();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void reRegister() throws IOException {\n    if (shouldRun()) {\n      // re-retrieve namespace info to make sure that, if the NN\n      // was restarted, we still match its version (HDFS-2120)\n      NamespaceInfo nsInfo \u003d retrieveNamespaceInfo();\n      // and re-register\n      register(nsInfo);\n      scheduler.scheduleHeartbeat();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPServiceActor.java",
      "extendedDetails": {}
    },
    "d324164a51a43d72c02567248bd9f0f12b244a40": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7435. PB encoding of block reports is very inefficient. Contributed by Daryn Sharp.\n",
      "commitDate": "13/03/15 12:23 PM",
      "commitName": "d324164a51a43d72c02567248bd9f0f12b244a40",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "11/03/15 2:11 PM",
      "commitNameOld": "fb34f45727e63ea55377fe90241328025307d818",
      "commitAuthorOld": "cnauroth",
      "daysBetweenCommits": 1.93,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,10 @@\n   void reRegister() throws IOException {\n     if (shouldRun()) {\n       // re-retrieve namespace info to make sure that, if the NN\n       // was restarted, we still match its version (HDFS-2120)\n-      retrieveNamespaceInfo();\n+      NamespaceInfo nsInfo \u003d retrieveNamespaceInfo();\n       // and re-register\n-      register();\n+      register(nsInfo);\n       scheduleHeartbeat();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void reRegister() throws IOException {\n    if (shouldRun()) {\n      // re-retrieve namespace info to make sure that, if the NN\n      // was restarted, we still match its version (HDFS-2120)\n      NamespaceInfo nsInfo \u003d retrieveNamespaceInfo();\n      // and re-register\n      register(nsInfo);\n      scheduleHeartbeat();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPServiceActor.java",
      "extendedDetails": {}
    },
    "d3a2fe280775e9320181b671d5951f06837bddad": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6772. Get DN storages out of blockContentsStale state faster after NN restarts. (Contributed by Ming Ma)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1616680 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/14 10:41 PM",
      "commitName": "d3a2fe280775e9320181b671d5951f06837bddad",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "29/04/14 3:27 AM",
      "commitNameOld": "9d21180c1a625295bb9da0d9d5d8c55740944008",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 100.8,
      "commitsBetweenForRepo": 641,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,10 @@\n   void reRegister() throws IOException {\n     if (shouldRun()) {\n       // re-retrieve namespace info to make sure that, if the NN\n       // was restarted, we still match its version (HDFS-2120)\n       retrieveNamespaceInfo();\n       // and re-register\n       register();\n+      scheduleHeartbeat();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void reRegister() throws IOException {\n    if (shouldRun()) {\n      // re-retrieve namespace info to make sure that, if the NN\n      // was restarted, we still match its version (HDFS-2120)\n      retrieveNamespaceInfo();\n      // and re-register\n      register();\n      scheduleHeartbeat();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPServiceActor.java",
      "extendedDetails": {}
    },
    "1e346aa829519f8a2aa830e76d9856f914861805": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-1971. Send block report from datanode to both active and standby namenodes. (sanjay, todd via suresh)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1208925 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/11/11 5:10 PM",
      "commitName": "1e346aa829519f8a2aa830e76d9856f914861805",
      "commitAuthor": "Suresh Srinivas",
      "diff": "@@ -0,0 +1,9 @@\n+  void reRegister() throws IOException {\n+    if (shouldRun()) {\n+      // re-retrieve namespace info to make sure that, if the NN\n+      // was restarted, we still match its version (HDFS-2120)\n+      retrieveNamespaceInfo();\n+      // and re-register\n+      register();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  void reRegister() throws IOException {\n    if (shouldRun()) {\n      // re-retrieve namespace info to make sure that, if the NN\n      // was restarted, we still match its version (HDFS-2120)\n      retrieveNamespaceInfo();\n      // and re-register\n      register();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPServiceActor.java"
    }
  }
}