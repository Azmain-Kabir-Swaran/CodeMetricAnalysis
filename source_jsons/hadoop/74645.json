{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DtFileOperations.java",
  "functionName": "doFormattedWrite",
  "functionId": "doFormattedWrite___f-File__format-String__creds-Credentials__conf-Configuration",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/DtFileOperations.java",
  "functionStartLine": 104,
  "functionEndLine": 114,
  "numCommitsSeen": 9,
  "timeTaken": 1311,
  "changeHistory": [
    "f19638333b11da6dcab9a964e73a49947b8390fd",
    "2753185a010e70f8d9539f42151c79177781122d"
  ],
  "changeHistoryShort": {
    "f19638333b11da6dcab9a964e73a49947b8390fd": "Ybodychange",
    "2753185a010e70f8d9539f42151c79177781122d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f19638333b11da6dcab9a964e73a49947b8390fd": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15059. Undoing the switch of Credentials to PB format as default - done via HADOOP-12563 for supporting 2.x to 3.x upgrades.\n",
      "commitDate": "08/12/17 8:00 AM",
      "commitName": "f19638333b11da6dcab9a964e73a49947b8390fd",
      "commitAuthor": "Vinod Kumar Vavilapalli (I am also known as @tshooter.)",
      "commitDateOld": "17/07/17 9:32 PM",
      "commitNameOld": "ccaf036662e22da14583942054898c99fa51dae5",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 143.48,
      "commitsBetweenForRepo": 1187,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,11 @@\n   public static void doFormattedWrite(\n       File f, String format, Credentials creds, Configuration conf)\n       throws IOException {\n-    if (format \u003d\u003d null || format.equals(FORMAT_PB)) {\n-      creds.writeTokenStorageFile(fileToPath(f), conf);\n-    } else { // if (format !\u003d null \u0026\u0026 format.equals(FORMAT_JAVA)) {\n-      creds.writeLegacyTokenStorageLocalFile(f);\n+    // default to oldest supported format for compatibility\n+    Credentials.SerializedFormat credsFormat \u003d\n+        Credentials.SerializedFormat.WRITABLE;\n+    if (format.equals(FORMAT_PB)) {\n+      credsFormat \u003d Credentials.SerializedFormat.PROTOBUF;\n     }\n+    creds.writeTokenStorageFile(fileToPath(f), conf, credsFormat);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void doFormattedWrite(\n      File f, String format, Credentials creds, Configuration conf)\n      throws IOException {\n    // default to oldest supported format for compatibility\n    Credentials.SerializedFormat credsFormat \u003d\n        Credentials.SerializedFormat.WRITABLE;\n    if (format.equals(FORMAT_PB)) {\n      credsFormat \u003d Credentials.SerializedFormat.PROTOBUF;\n    }\n    creds.writeTokenStorageFile(fileToPath(f), conf, credsFormat);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/DtFileOperations.java",
      "extendedDetails": {}
    },
    "2753185a010e70f8d9539f42151c79177781122d": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-12563. Updated utility (dtutil) to create/modify token files. Contributed by Matthew Paduano\n",
      "commitDate": "29/04/16 10:32 PM",
      "commitName": "2753185a010e70f8d9539f42151c79177781122d",
      "commitAuthor": "Ravi Prakash",
      "diff": "@@ -0,0 +1,9 @@\n+  public static void doFormattedWrite(\n+      File f, String format, Credentials creds, Configuration conf)\n+      throws IOException {\n+    if (format \u003d\u003d null || format.equals(FORMAT_PB)) {\n+      creds.writeTokenStorageFile(fileToPath(f), conf);\n+    } else { // if (format !\u003d null \u0026\u0026 format.equals(FORMAT_JAVA)) {\n+      creds.writeLegacyTokenStorageLocalFile(f);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static void doFormattedWrite(\n      File f, String format, Credentials creds, Configuration conf)\n      throws IOException {\n    if (format \u003d\u003d null || format.equals(FORMAT_PB)) {\n      creds.writeTokenStorageFile(fileToPath(f), conf);\n    } else { // if (format !\u003d null \u0026\u0026 format.equals(FORMAT_JAVA)) {\n      creds.writeLegacyTokenStorageLocalFile(f);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/DtFileOperations.java"
    }
  }
}