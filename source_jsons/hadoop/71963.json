{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AuthenticatedURL.java",
  "functionName": "extractToken",
  "functionId": "extractToken___conn-HttpURLConnection__token-Token",
  "sourceFilePath": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/client/AuthenticatedURL.java",
  "functionStartLine": 385,
  "functionEndLine": 406,
  "numCommitsSeen": 13,
  "timeTaken": 1839,
  "changeHistory": [
    "c3793102121767c46091805eae65ef3919a5f368",
    "0202480742b8539aa7aa1e94dc9cab75d863cc4e",
    "9a79b738c582bd84727831987b845535625d75fe",
    "2d8e6e2c4a52a4ba815b23d6d1ac21be4df23d9e",
    "3dd40a70ca7861d349f5750a2f865ffdfb464aaa",
    "2b016dac8232e0f5c43293adcbdf7164f5fca74c",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "a0f120ce68dddb0cb31b64c89f3224313f3cb5af"
  ],
  "changeHistoryShort": {
    "c3793102121767c46091805eae65ef3919a5f368": "Ybodychange",
    "0202480742b8539aa7aa1e94dc9cab75d863cc4e": "Ybodychange",
    "9a79b738c582bd84727831987b845535625d75fe": "Ybodychange",
    "2d8e6e2c4a52a4ba815b23d6d1ac21be4df23d9e": "Ybodychange",
    "3dd40a70ca7861d349f5750a2f865ffdfb464aaa": "Ybodychange",
    "2b016dac8232e0f5c43293adcbdf7164f5fca74c": "Yfilerename",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "a0f120ce68dddb0cb31b64c89f3224313f3cb5af": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c3793102121767c46091805eae65ef3919a5f368": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14687. AuthenticatedURL will reuse bad/expired session cookies. Contributed by Daryn Sharp\n",
      "commitDate": "22/08/17 2:50 PM",
      "commitName": "c3793102121767c46091805eae65ef3919a5f368",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "08/06/17 9:34 PM",
      "commitNameOld": "0202480742b8539aa7aa1e94dc9cab75d863cc4e",
      "commitAuthorOld": "Xiao Chen",
      "daysBetweenCommits": 74.72,
      "commitsBetweenForRepo": 442,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,22 @@\n   public static void extractToken(HttpURLConnection conn, Token token) throws IOException, AuthenticationException {\n     int respCode \u003d conn.getResponseCode();\n     if (respCode \u003d\u003d HttpURLConnection.HTTP_OK\n         || respCode \u003d\u003d HttpURLConnection.HTTP_CREATED\n         || respCode \u003d\u003d HttpURLConnection.HTTP_ACCEPTED) {\n-      Map\u003cString, List\u003cString\u003e\u003e headers \u003d conn.getHeaderFields();\n-      List\u003cString\u003e cookies \u003d headers.get(\"Set-Cookie\");\n-      if (cookies !\u003d null) {\n-        for (String cookie : cookies) {\n-          if (cookie.startsWith(AUTH_COOKIE_EQ)) {\n-            String value \u003d cookie.substring(AUTH_COOKIE_EQ.length());\n-            int separator \u003d value.indexOf(\";\");\n-            if (separator \u003e -1) {\n-              value \u003d value.substring(0, separator);\n-            }\n-            if (value.length() \u003e 0) {\n-              LOG.trace(\"Setting token value to {} ({}), resp\u003d{}\", value,\n-                  token, respCode);\n-              token.set(value);\n-            }\n-          }\n-        }\n-      }\n+      // cookie handler should have already extracted the token.  try again\n+      // for backwards compatibility if this method is called on a connection\n+      // not opened via this instance.\n+      token.cookieHandler.put(null, conn.getHeaderFields());\n     } else if (respCode \u003d\u003d HttpURLConnection.HTTP_NOT_FOUND) {\n       LOG.trace(\"Setting token value to null ({}), resp\u003d{}\", token, respCode);\n       token.set(null);\n       throw new FileNotFoundException(conn.getURL().toString());\n     } else {\n       LOG.trace(\"Setting token value to null ({}), resp\u003d{}\", token, respCode);\n       token.set(null);\n       throw new AuthenticationException(\"Authentication failed\" +\n           \", URL: \" + conn.getURL() +\n           \", status: \" + conn.getResponseCode() +\n           \", message: \" + conn.getResponseMessage());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void extractToken(HttpURLConnection conn, Token token) throws IOException, AuthenticationException {\n    int respCode \u003d conn.getResponseCode();\n    if (respCode \u003d\u003d HttpURLConnection.HTTP_OK\n        || respCode \u003d\u003d HttpURLConnection.HTTP_CREATED\n        || respCode \u003d\u003d HttpURLConnection.HTTP_ACCEPTED) {\n      // cookie handler should have already extracted the token.  try again\n      // for backwards compatibility if this method is called on a connection\n      // not opened via this instance.\n      token.cookieHandler.put(null, conn.getHeaderFields());\n    } else if (respCode \u003d\u003d HttpURLConnection.HTTP_NOT_FOUND) {\n      LOG.trace(\"Setting token value to null ({}), resp\u003d{}\", token, respCode);\n      token.set(null);\n      throw new FileNotFoundException(conn.getURL().toString());\n    } else {\n      LOG.trace(\"Setting token value to null ({}), resp\u003d{}\", token, respCode);\n      token.set(null);\n      throw new AuthenticationException(\"Authentication failed\" +\n          \", URL: \" + conn.getURL() +\n          \", status: \" + conn.getResponseCode() +\n          \", message: \" + conn.getResponseMessage());\n    }\n  }",
      "path": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/client/AuthenticatedURL.java",
      "extendedDetails": {}
    },
    "0202480742b8539aa7aa1e94dc9cab75d863cc4e": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13174. Add more debug logs for delegation tokens and authentication.\n",
      "commitDate": "08/06/17 9:34 PM",
      "commitName": "0202480742b8539aa7aa1e94dc9cab75d863cc4e",
      "commitAuthor": "Xiao Chen",
      "commitDateOld": "10/06/16 11:32 AM",
      "commitNameOld": "8a1dcceccea5cfe9fb0c94daa2517cd64a16b3c0",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 363.42,
      "commitsBetweenForRepo": 2361,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,36 @@\n   public static void extractToken(HttpURLConnection conn, Token token) throws IOException, AuthenticationException {\n     int respCode \u003d conn.getResponseCode();\n     if (respCode \u003d\u003d HttpURLConnection.HTTP_OK\n         || respCode \u003d\u003d HttpURLConnection.HTTP_CREATED\n         || respCode \u003d\u003d HttpURLConnection.HTTP_ACCEPTED) {\n       Map\u003cString, List\u003cString\u003e\u003e headers \u003d conn.getHeaderFields();\n       List\u003cString\u003e cookies \u003d headers.get(\"Set-Cookie\");\n       if (cookies !\u003d null) {\n         for (String cookie : cookies) {\n           if (cookie.startsWith(AUTH_COOKIE_EQ)) {\n             String value \u003d cookie.substring(AUTH_COOKIE_EQ.length());\n             int separator \u003d value.indexOf(\";\");\n             if (separator \u003e -1) {\n               value \u003d value.substring(0, separator);\n             }\n             if (value.length() \u003e 0) {\n+              LOG.trace(\"Setting token value to {} ({}), resp\u003d{}\", value,\n+                  token, respCode);\n               token.set(value);\n             }\n           }\n         }\n       }\n     } else if (respCode \u003d\u003d HttpURLConnection.HTTP_NOT_FOUND) {\n+      LOG.trace(\"Setting token value to null ({}), resp\u003d{}\", token, respCode);\n       token.set(null);\n       throw new FileNotFoundException(conn.getURL().toString());\n     } else {\n+      LOG.trace(\"Setting token value to null ({}), resp\u003d{}\", token, respCode);\n       token.set(null);\n       throw new AuthenticationException(\"Authentication failed\" +\n           \", URL: \" + conn.getURL() +\n           \", status: \" + conn.getResponseCode() +\n           \", message: \" + conn.getResponseMessage());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void extractToken(HttpURLConnection conn, Token token) throws IOException, AuthenticationException {\n    int respCode \u003d conn.getResponseCode();\n    if (respCode \u003d\u003d HttpURLConnection.HTTP_OK\n        || respCode \u003d\u003d HttpURLConnection.HTTP_CREATED\n        || respCode \u003d\u003d HttpURLConnection.HTTP_ACCEPTED) {\n      Map\u003cString, List\u003cString\u003e\u003e headers \u003d conn.getHeaderFields();\n      List\u003cString\u003e cookies \u003d headers.get(\"Set-Cookie\");\n      if (cookies !\u003d null) {\n        for (String cookie : cookies) {\n          if (cookie.startsWith(AUTH_COOKIE_EQ)) {\n            String value \u003d cookie.substring(AUTH_COOKIE_EQ.length());\n            int separator \u003d value.indexOf(\";\");\n            if (separator \u003e -1) {\n              value \u003d value.substring(0, separator);\n            }\n            if (value.length() \u003e 0) {\n              LOG.trace(\"Setting token value to {} ({}), resp\u003d{}\", value,\n                  token, respCode);\n              token.set(value);\n            }\n          }\n        }\n      }\n    } else if (respCode \u003d\u003d HttpURLConnection.HTTP_NOT_FOUND) {\n      LOG.trace(\"Setting token value to null ({}), resp\u003d{}\", token, respCode);\n      token.set(null);\n      throw new FileNotFoundException(conn.getURL().toString());\n    } else {\n      LOG.trace(\"Setting token value to null ({}), resp\u003d{}\", token, respCode);\n      token.set(null);\n      throw new AuthenticationException(\"Authentication failed\" +\n          \", URL: \" + conn.getURL() +\n          \", status: \" + conn.getResponseCode() +\n          \", message: \" + conn.getResponseMessage());\n    }\n  }",
      "path": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/client/AuthenticatedURL.java",
      "extendedDetails": {}
    },
    "9a79b738c582bd84727831987b845535625d75fe": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12906. AuthenticatedURL should convert a 404/Not Found into an FileNotFoundException. (Steve Loughran via gtcarrera9)\n",
      "commitDate": "10/03/16 11:38 AM",
      "commitName": "9a79b738c582bd84727831987b845535625d75fe",
      "commitAuthor": "Li Lu",
      "commitDateOld": "09/12/14 3:15 AM",
      "commitNameOld": "f71eb51ab8109c14e8e921751dd5de603bdf2bde",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 457.35,
      "commitsBetweenForRepo": 3565,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,32 @@\n   public static void extractToken(HttpURLConnection conn, Token token) throws IOException, AuthenticationException {\n     int respCode \u003d conn.getResponseCode();\n     if (respCode \u003d\u003d HttpURLConnection.HTTP_OK\n         || respCode \u003d\u003d HttpURLConnection.HTTP_CREATED\n         || respCode \u003d\u003d HttpURLConnection.HTTP_ACCEPTED) {\n       Map\u003cString, List\u003cString\u003e\u003e headers \u003d conn.getHeaderFields();\n       List\u003cString\u003e cookies \u003d headers.get(\"Set-Cookie\");\n       if (cookies !\u003d null) {\n         for (String cookie : cookies) {\n           if (cookie.startsWith(AUTH_COOKIE_EQ)) {\n             String value \u003d cookie.substring(AUTH_COOKIE_EQ.length());\n             int separator \u003d value.indexOf(\";\");\n             if (separator \u003e -1) {\n               value \u003d value.substring(0, separator);\n             }\n             if (value.length() \u003e 0) {\n               token.set(value);\n             }\n           }\n         }\n       }\n+    } else if (respCode \u003d\u003d HttpURLConnection.HTTP_NOT_FOUND) {\n+      token.set(null);\n+      throw new FileNotFoundException(conn.getURL().toString());\n     } else {\n       token.set(null);\n-      throw new AuthenticationException(\"Authentication failed, status: \" + conn.getResponseCode() +\n-                                        \", message: \" + conn.getResponseMessage());\n+      throw new AuthenticationException(\"Authentication failed\" +\n+          \", URL: \" + conn.getURL() +\n+          \", status: \" + conn.getResponseCode() +\n+          \", message: \" + conn.getResponseMessage());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void extractToken(HttpURLConnection conn, Token token) throws IOException, AuthenticationException {\n    int respCode \u003d conn.getResponseCode();\n    if (respCode \u003d\u003d HttpURLConnection.HTTP_OK\n        || respCode \u003d\u003d HttpURLConnection.HTTP_CREATED\n        || respCode \u003d\u003d HttpURLConnection.HTTP_ACCEPTED) {\n      Map\u003cString, List\u003cString\u003e\u003e headers \u003d conn.getHeaderFields();\n      List\u003cString\u003e cookies \u003d headers.get(\"Set-Cookie\");\n      if (cookies !\u003d null) {\n        for (String cookie : cookies) {\n          if (cookie.startsWith(AUTH_COOKIE_EQ)) {\n            String value \u003d cookie.substring(AUTH_COOKIE_EQ.length());\n            int separator \u003d value.indexOf(\";\");\n            if (separator \u003e -1) {\n              value \u003d value.substring(0, separator);\n            }\n            if (value.length() \u003e 0) {\n              token.set(value);\n            }\n          }\n        }\n      }\n    } else if (respCode \u003d\u003d HttpURLConnection.HTTP_NOT_FOUND) {\n      token.set(null);\n      throw new FileNotFoundException(conn.getURL().toString());\n    } else {\n      token.set(null);\n      throw new AuthenticationException(\"Authentication failed\" +\n          \", URL: \" + conn.getURL() +\n          \", status: \" + conn.getResponseCode() +\n          \", message: \" + conn.getResponseMessage());\n    }\n  }",
      "path": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/client/AuthenticatedURL.java",
      "extendedDetails": {}
    },
    "2d8e6e2c4a52a4ba815b23d6d1ac21be4df23d9e": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11151. Automatically refresh auth token and retry on auth failure. Contributed by Arun Suresh.\n",
      "commitDate": "02/10/14 7:54 PM",
      "commitName": "2d8e6e2c4a52a4ba815b23d6d1ac21be4df23d9e",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "07/08/14 9:58 PM",
      "commitNameOld": "be9c67930b57c516723d566625f9036a88a84055",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 55.91,
      "commitsBetweenForRepo": 588,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,27 @@\n   public static void extractToken(HttpURLConnection conn, Token token) throws IOException, AuthenticationException {\n-    if (conn.getResponseCode() \u003d\u003d HttpURLConnection.HTTP_OK) {\n+    int respCode \u003d conn.getResponseCode();\n+    if (respCode \u003d\u003d HttpURLConnection.HTTP_OK\n+        || respCode \u003d\u003d HttpURLConnection.HTTP_CREATED\n+        || respCode \u003d\u003d HttpURLConnection.HTTP_ACCEPTED) {\n       Map\u003cString, List\u003cString\u003e\u003e headers \u003d conn.getHeaderFields();\n       List\u003cString\u003e cookies \u003d headers.get(\"Set-Cookie\");\n       if (cookies !\u003d null) {\n         for (String cookie : cookies) {\n           if (cookie.startsWith(AUTH_COOKIE_EQ)) {\n             String value \u003d cookie.substring(AUTH_COOKIE_EQ.length());\n             int separator \u003d value.indexOf(\";\");\n             if (separator \u003e -1) {\n               value \u003d value.substring(0, separator);\n             }\n             if (value.length() \u003e 0) {\n               token.set(value);\n             }\n           }\n         }\n       }\n     } else {\n       token.set(null);\n       throw new AuthenticationException(\"Authentication failed, status: \" + conn.getResponseCode() +\n                                         \", message: \" + conn.getResponseMessage());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void extractToken(HttpURLConnection conn, Token token) throws IOException, AuthenticationException {\n    int respCode \u003d conn.getResponseCode();\n    if (respCode \u003d\u003d HttpURLConnection.HTTP_OK\n        || respCode \u003d\u003d HttpURLConnection.HTTP_CREATED\n        || respCode \u003d\u003d HttpURLConnection.HTTP_ACCEPTED) {\n      Map\u003cString, List\u003cString\u003e\u003e headers \u003d conn.getHeaderFields();\n      List\u003cString\u003e cookies \u003d headers.get(\"Set-Cookie\");\n      if (cookies !\u003d null) {\n        for (String cookie : cookies) {\n          if (cookie.startsWith(AUTH_COOKIE_EQ)) {\n            String value \u003d cookie.substring(AUTH_COOKIE_EQ.length());\n            int separator \u003d value.indexOf(\";\");\n            if (separator \u003e -1) {\n              value \u003d value.substring(0, separator);\n            }\n            if (value.length() \u003e 0) {\n              token.set(value);\n            }\n          }\n        }\n      }\n    } else {\n      token.set(null);\n      throw new AuthenticationException(\"Authentication failed, status: \" + conn.getResponseCode() +\n                                        \", message: \" + conn.getResponseMessage());\n    }\n  }",
      "path": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/client/AuthenticatedURL.java",
      "extendedDetails": {}
    },
    "3dd40a70ca7861d349f5750a2f865ffdfb464aaa": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-8512. AuthenticatedURL should reset the Token when the server returns other than OK on authentication (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1351408 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/06/12 9:28 AM",
      "commitName": "3dd40a70ca7861d349f5750a2f865ffdfb464aaa",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "31/08/11 3:40 PM",
      "commitNameOld": "2b016dac8232e0f5c43293adcbdf7164f5fca74c",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 291.74,
      "commitsBetweenForRepo": 2019,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,24 @@\n   public static void extractToken(HttpURLConnection conn, Token token) throws IOException, AuthenticationException {\n     if (conn.getResponseCode() \u003d\u003d HttpURLConnection.HTTP_OK) {\n       Map\u003cString, List\u003cString\u003e\u003e headers \u003d conn.getHeaderFields();\n       List\u003cString\u003e cookies \u003d headers.get(\"Set-Cookie\");\n       if (cookies !\u003d null) {\n         for (String cookie : cookies) {\n           if (cookie.startsWith(AUTH_COOKIE_EQ)) {\n             String value \u003d cookie.substring(AUTH_COOKIE_EQ.length());\n             int separator \u003d value.indexOf(\";\");\n             if (separator \u003e -1) {\n               value \u003d value.substring(0, separator);\n             }\n             if (value.length() \u003e 0) {\n               token.set(value);\n             }\n           }\n         }\n       }\n     } else {\n+      token.set(null);\n       throw new AuthenticationException(\"Authentication failed, status: \" + conn.getResponseCode() +\n                                         \", message: \" + conn.getResponseMessage());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void extractToken(HttpURLConnection conn, Token token) throws IOException, AuthenticationException {\n    if (conn.getResponseCode() \u003d\u003d HttpURLConnection.HTTP_OK) {\n      Map\u003cString, List\u003cString\u003e\u003e headers \u003d conn.getHeaderFields();\n      List\u003cString\u003e cookies \u003d headers.get(\"Set-Cookie\");\n      if (cookies !\u003d null) {\n        for (String cookie : cookies) {\n          if (cookie.startsWith(AUTH_COOKIE_EQ)) {\n            String value \u003d cookie.substring(AUTH_COOKIE_EQ.length());\n            int separator \u003d value.indexOf(\";\");\n            if (separator \u003e -1) {\n              value \u003d value.substring(0, separator);\n            }\n            if (value.length() \u003e 0) {\n              token.set(value);\n            }\n          }\n        }\n      }\n    } else {\n      token.set(null);\n      throw new AuthenticationException(\"Authentication failed, status: \" + conn.getResponseCode() +\n                                        \", message: \" + conn.getResponseMessage());\n    }\n  }",
      "path": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/client/AuthenticatedURL.java",
      "extendedDetails": {}
    },
    "2b016dac8232e0f5c43293adcbdf7164f5fca74c": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7579. Rename package names from alfredo to auth.  Contributed by Alejandro Abdelnur\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1163852 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/08/11 3:40 PM",
      "commitName": "2b016dac8232e0f5c43293adcbdf7164f5fca74c",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "31/08/11 2:18 PM",
      "commitNameOld": "4f1a0e36fab1f18e6e2c5fcc72cd9a7634967fcd",
      "commitAuthorOld": "Konstantin Shvachko",
      "daysBetweenCommits": 0.06,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static void extractToken(HttpURLConnection conn, Token token) throws IOException, AuthenticationException {\n    if (conn.getResponseCode() \u003d\u003d HttpURLConnection.HTTP_OK) {\n      Map\u003cString, List\u003cString\u003e\u003e headers \u003d conn.getHeaderFields();\n      List\u003cString\u003e cookies \u003d headers.get(\"Set-Cookie\");\n      if (cookies !\u003d null) {\n        for (String cookie : cookies) {\n          if (cookie.startsWith(AUTH_COOKIE_EQ)) {\n            String value \u003d cookie.substring(AUTH_COOKIE_EQ.length());\n            int separator \u003d value.indexOf(\";\");\n            if (separator \u003e -1) {\n              value \u003d value.substring(0, separator);\n            }\n            if (value.length() \u003e 0) {\n              token.set(value);\n            }\n          }\n        }\n      }\n    } else {\n      throw new AuthenticationException(\"Authentication failed, status: \" + conn.getResponseCode() +\n                                        \", message: \" + conn.getResponseMessage());\n    }\n  }",
      "path": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/client/AuthenticatedURL.java",
      "extendedDetails": {
        "oldPath": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/alfredo/client/AuthenticatedURL.java",
        "newPath": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/client/AuthenticatedURL.java"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static void extractToken(HttpURLConnection conn, Token token) throws IOException, AuthenticationException {\n    if (conn.getResponseCode() \u003d\u003d HttpURLConnection.HTTP_OK) {\n      Map\u003cString, List\u003cString\u003e\u003e headers \u003d conn.getHeaderFields();\n      List\u003cString\u003e cookies \u003d headers.get(\"Set-Cookie\");\n      if (cookies !\u003d null) {\n        for (String cookie : cookies) {\n          if (cookie.startsWith(AUTH_COOKIE_EQ)) {\n            String value \u003d cookie.substring(AUTH_COOKIE_EQ.length());\n            int separator \u003d value.indexOf(\";\");\n            if (separator \u003e -1) {\n              value \u003d value.substring(0, separator);\n            }\n            if (value.length() \u003e 0) {\n              token.set(value);\n            }\n          }\n        }\n      }\n    } else {\n      throw new AuthenticationException(\"Authentication failed, status: \" + conn.getResponseCode() +\n                                        \", message: \" + conn.getResponseMessage());\n    }\n  }",
      "path": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/alfredo/client/AuthenticatedURL.java",
      "extendedDetails": {
        "oldPath": "hadoop-alfredo/src/main/java/org/apache/hadoop/alfredo/client/AuthenticatedURL.java",
        "newPath": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/alfredo/client/AuthenticatedURL.java"
      }
    },
    "a0f120ce68dddb0cb31b64c89f3224313f3cb5af": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7119. add Kerberos HTTP SPNEGO authentication support to Hadoop JT/NN/DN/TT web-consoles. (Alejandro Abdelnur via atm)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159804 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 3:31 PM",
      "commitName": "a0f120ce68dddb0cb31b64c89f3224313f3cb5af",
      "commitAuthor": "Aaron Myers",
      "diff": "@@ -0,0 +1,23 @@\n+  public static void extractToken(HttpURLConnection conn, Token token) throws IOException, AuthenticationException {\n+    if (conn.getResponseCode() \u003d\u003d HttpURLConnection.HTTP_OK) {\n+      Map\u003cString, List\u003cString\u003e\u003e headers \u003d conn.getHeaderFields();\n+      List\u003cString\u003e cookies \u003d headers.get(\"Set-Cookie\");\n+      if (cookies !\u003d null) {\n+        for (String cookie : cookies) {\n+          if (cookie.startsWith(AUTH_COOKIE_EQ)) {\n+            String value \u003d cookie.substring(AUTH_COOKIE_EQ.length());\n+            int separator \u003d value.indexOf(\";\");\n+            if (separator \u003e -1) {\n+              value \u003d value.substring(0, separator);\n+            }\n+            if (value.length() \u003e 0) {\n+              token.set(value);\n+            }\n+          }\n+        }\n+      }\n+    } else {\n+      throw new AuthenticationException(\"Authentication failed, status: \" + conn.getResponseCode() +\n+                                        \", message: \" + conn.getResponseMessage());\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static void extractToken(HttpURLConnection conn, Token token) throws IOException, AuthenticationException {\n    if (conn.getResponseCode() \u003d\u003d HttpURLConnection.HTTP_OK) {\n      Map\u003cString, List\u003cString\u003e\u003e headers \u003d conn.getHeaderFields();\n      List\u003cString\u003e cookies \u003d headers.get(\"Set-Cookie\");\n      if (cookies !\u003d null) {\n        for (String cookie : cookies) {\n          if (cookie.startsWith(AUTH_COOKIE_EQ)) {\n            String value \u003d cookie.substring(AUTH_COOKIE_EQ.length());\n            int separator \u003d value.indexOf(\";\");\n            if (separator \u003e -1) {\n              value \u003d value.substring(0, separator);\n            }\n            if (value.length() \u003e 0) {\n              token.set(value);\n            }\n          }\n        }\n      }\n    } else {\n      throw new AuthenticationException(\"Authentication failed, status: \" + conn.getResponseCode() +\n                                        \", message: \" + conn.getResponseMessage());\n    }\n  }",
      "path": "hadoop-alfredo/src/main/java/org/apache/hadoop/alfredo/client/AuthenticatedURL.java"
    }
  }
}