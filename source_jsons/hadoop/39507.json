{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AbstractCSQueue.java",
  "functionName": "getNodeLabelsForQueue",
  "functionId": "getNodeLabelsForQueue",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/AbstractCSQueue.java",
  "functionStartLine": 1249,
  "functionEndLine": 1268,
  "numCommitsSeen": 76,
  "timeTaken": 1774,
  "changeHistory": [
    "b08ecf5c7589b055e93b2907413213f36097724d"
  ],
  "changeHistoryShort": {
    "b08ecf5c7589b055e93b2907413213f36097724d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b08ecf5c7589b055e93b2907413213f36097724d": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4304. AM max resource configuration per partition to be displayed/updated correctly in UI and in various partition related metrics. (Sunil G via wangda)\n",
      "commitDate": "17/01/16 7:11 PM",
      "commitName": "b08ecf5c7589b055e93b2907413213f36097724d",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,21 @@\n+  public Set\u003cString\u003e getNodeLabelsForQueue() {\n+    // if queue\u0027s label is *, queue can access any labels. Instead of\n+    // considering all labels in cluster, only those labels which are\n+    // use some resource of this queue can be considered.\n+    Set\u003cString\u003e nodeLabels \u003d new HashSet\u003cString\u003e();\n+    if (this.getAccessibleNodeLabels() !\u003d null\n+        \u0026\u0026 this.getAccessibleNodeLabels().contains(RMNodeLabelsManager.ANY)) {\n+      nodeLabels.addAll(Sets.union(this.getQueueCapacities()\n+          .getNodePartitionsSet(), this.getQueueResourceUsage()\n+          .getNodePartitionsSet()));\n+    } else {\n+      nodeLabels.addAll(this.getAccessibleNodeLabels());\n+    }\n+\n+    // Add NO_LABEL also to this list as NO_LABEL also can be granted with\n+    // resource in many general cases.\n+    if (!nodeLabels.contains(RMNodeLabelsManager.NO_LABEL)) {\n+      nodeLabels.add(RMNodeLabelsManager.NO_LABEL);\n+    }\n+    return nodeLabels;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Set\u003cString\u003e getNodeLabelsForQueue() {\n    // if queue\u0027s label is *, queue can access any labels. Instead of\n    // considering all labels in cluster, only those labels which are\n    // use some resource of this queue can be considered.\n    Set\u003cString\u003e nodeLabels \u003d new HashSet\u003cString\u003e();\n    if (this.getAccessibleNodeLabels() !\u003d null\n        \u0026\u0026 this.getAccessibleNodeLabels().contains(RMNodeLabelsManager.ANY)) {\n      nodeLabels.addAll(Sets.union(this.getQueueCapacities()\n          .getNodePartitionsSet(), this.getQueueResourceUsage()\n          .getNodePartitionsSet()));\n    } else {\n      nodeLabels.addAll(this.getAccessibleNodeLabels());\n    }\n\n    // Add NO_LABEL also to this list as NO_LABEL also can be granted with\n    // resource in many general cases.\n    if (!nodeLabels.contains(RMNodeLabelsManager.NO_LABEL)) {\n      nodeLabels.add(RMNodeLabelsManager.NO_LABEL);\n    }\n    return nodeLabels;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/AbstractCSQueue.java"
    }
  }
}