{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HttpFSFileSystem.java",
  "functionName": "uploadData",
  "functionId": "uploadData___method-String__f-Path__params-Map__String,String____bufferSize-int__expectedStatus-int",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/fs/http/client/HttpFSFileSystem.java",
  "functionStartLine": 544,
  "functionEndLine": 580,
  "numCommitsSeen": 51,
  "timeTaken": 1657,
  "changeHistory": [
    "70b218748badf079c859c3af2b468a0b7b49c333",
    "4d4560189adccb941a3dc5eee7add134adbf6519",
    "6b4f40cbf913c048fb33da6c5d8271cd77766d0a",
    "3334306512b5dc932814fded31a89ba1ee97cd9f"
  ],
  "changeHistoryShort": {
    "70b218748badf079c859c3af2b468a0b7b49c333": "Ybodychange",
    "4d4560189adccb941a3dc5eee7add134adbf6519": "Ybodychange",
    "6b4f40cbf913c048fb33da6c5d8271cd77766d0a": "Ybodychange",
    "3334306512b5dc932814fded31a89ba1ee97cd9f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "70b218748badf079c859c3af2b468a0b7b49c333": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11015. Http server/client utils to propagate and recreate Exceptions from server to client. (tucu)\n",
      "commitDate": "04/09/14 9:11 AM",
      "commitName": "70b218748badf079c859c3af2b468a0b7b49c333",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "07/08/14 9:58 PM",
      "commitNameOld": "be9c67930b57c516723d566625f9036a88a84055",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 27.47,
      "commitsBetweenForRepo": 206,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,37 @@\n   private FSDataOutputStream uploadData(String method, Path f, Map\u003cString, String\u003e params,\n                                         int bufferSize, int expectedStatus) throws IOException {\n     HttpURLConnection conn \u003d getConnection(method, params, f, true);\n     conn.setInstanceFollowRedirects(false);\n     boolean exceptionAlreadyHandled \u003d false;\n     try {\n       if (conn.getResponseCode() \u003d\u003d HTTP_TEMPORARY_REDIRECT) {\n         exceptionAlreadyHandled \u003d true;\n         String location \u003d conn.getHeaderField(\"Location\");\n         if (location !\u003d null) {\n           conn \u003d getConnection(new URL(location), method);\n           conn.setRequestProperty(\"Content-Type\", UPLOAD_CONTENT_TYPE);\n           try {\n             OutputStream os \u003d new BufferedOutputStream(conn.getOutputStream(), bufferSize);\n             return new HttpFSDataOutputStream(conn, os, expectedStatus, statistics);\n           } catch (IOException ex) {\n-            HttpFSUtils.validateResponse(conn, expectedStatus);\n+            HttpExceptionUtils.validateResponse(conn, expectedStatus);\n             throw ex;\n           }\n         } else {\n-          HttpFSUtils.validateResponse(conn, HTTP_TEMPORARY_REDIRECT);\n+          HttpExceptionUtils.validateResponse(conn, HTTP_TEMPORARY_REDIRECT);\n           throw new IOException(\"Missing HTTP \u0027Location\u0027 header for [\" + conn.getURL() + \"]\");\n         }\n       } else {\n         throw new IOException(\n           MessageFormat.format(\"Expected HTTP status was [307], received [{0}]\",\n                                conn.getResponseCode()));\n       }\n     } catch (IOException ex) {\n       if (exceptionAlreadyHandled) {\n         throw ex;\n       } else {\n-        HttpFSUtils.validateResponse(conn, HTTP_TEMPORARY_REDIRECT);\n+        HttpExceptionUtils.validateResponse(conn, HTTP_TEMPORARY_REDIRECT);\n         throw ex;\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private FSDataOutputStream uploadData(String method, Path f, Map\u003cString, String\u003e params,\n                                        int bufferSize, int expectedStatus) throws IOException {\n    HttpURLConnection conn \u003d getConnection(method, params, f, true);\n    conn.setInstanceFollowRedirects(false);\n    boolean exceptionAlreadyHandled \u003d false;\n    try {\n      if (conn.getResponseCode() \u003d\u003d HTTP_TEMPORARY_REDIRECT) {\n        exceptionAlreadyHandled \u003d true;\n        String location \u003d conn.getHeaderField(\"Location\");\n        if (location !\u003d null) {\n          conn \u003d getConnection(new URL(location), method);\n          conn.setRequestProperty(\"Content-Type\", UPLOAD_CONTENT_TYPE);\n          try {\n            OutputStream os \u003d new BufferedOutputStream(conn.getOutputStream(), bufferSize);\n            return new HttpFSDataOutputStream(conn, os, expectedStatus, statistics);\n          } catch (IOException ex) {\n            HttpExceptionUtils.validateResponse(conn, expectedStatus);\n            throw ex;\n          }\n        } else {\n          HttpExceptionUtils.validateResponse(conn, HTTP_TEMPORARY_REDIRECT);\n          throw new IOException(\"Missing HTTP \u0027Location\u0027 header for [\" + conn.getURL() + \"]\");\n        }\n      } else {\n        throw new IOException(\n          MessageFormat.format(\"Expected HTTP status was [307], received [{0}]\",\n                               conn.getResponseCode()));\n      }\n    } catch (IOException ex) {\n      if (exceptionAlreadyHandled) {\n        throw ex;\n      } else {\n        HttpExceptionUtils.validateResponse(conn, HTTP_TEMPORARY_REDIRECT);\n        throw ex;\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/fs/http/client/HttpFSFileSystem.java",
      "extendedDetails": {}
    },
    "4d4560189adccb941a3dc5eee7add134adbf6519": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3113. httpfs does not support delegation tokens. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1365988 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "26/07/12 6:39 AM",
      "commitName": "4d4560189adccb941a3dc5eee7add134adbf6519",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "29/06/12 1:59 PM",
      "commitNameOld": "34605c9594770b204b28a809d8dbc0dae11ff0d1",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 26.69,
      "commitsBetweenForRepo": 161,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,37 @@\n   private FSDataOutputStream uploadData(String method, Path f, Map\u003cString, String\u003e params,\n                                         int bufferSize, int expectedStatus) throws IOException {\n     HttpURLConnection conn \u003d getConnection(method, params, f, true);\n     conn.setInstanceFollowRedirects(false);\n     boolean exceptionAlreadyHandled \u003d false;\n     try {\n       if (conn.getResponseCode() \u003d\u003d HTTP_TEMPORARY_REDIRECT) {\n         exceptionAlreadyHandled \u003d true;\n         String location \u003d conn.getHeaderField(\"Location\");\n         if (location !\u003d null) {\n           conn \u003d getConnection(new URL(location), method);\n           conn.setRequestProperty(\"Content-Type\", UPLOAD_CONTENT_TYPE);\n           try {\n             OutputStream os \u003d new BufferedOutputStream(conn.getOutputStream(), bufferSize);\n             return new HttpFSDataOutputStream(conn, os, expectedStatus, statistics);\n           } catch (IOException ex) {\n-            validateResponse(conn, expectedStatus);\n+            HttpFSUtils.validateResponse(conn, expectedStatus);\n             throw ex;\n           }\n         } else {\n-          validateResponse(conn, HTTP_TEMPORARY_REDIRECT);\n+          HttpFSUtils.validateResponse(conn, HTTP_TEMPORARY_REDIRECT);\n           throw new IOException(\"Missing HTTP \u0027Location\u0027 header for [\" + conn.getURL() + \"]\");\n         }\n       } else {\n         throw new IOException(\n           MessageFormat.format(\"Expected HTTP status was [307], received [{0}]\",\n                                conn.getResponseCode()));\n       }\n     } catch (IOException ex) {\n       if (exceptionAlreadyHandled) {\n         throw ex;\n       } else {\n-        validateResponse(conn, HTTP_TEMPORARY_REDIRECT);\n+        HttpFSUtils.validateResponse(conn, HTTP_TEMPORARY_REDIRECT);\n         throw ex;\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private FSDataOutputStream uploadData(String method, Path f, Map\u003cString, String\u003e params,\n                                        int bufferSize, int expectedStatus) throws IOException {\n    HttpURLConnection conn \u003d getConnection(method, params, f, true);\n    conn.setInstanceFollowRedirects(false);\n    boolean exceptionAlreadyHandled \u003d false;\n    try {\n      if (conn.getResponseCode() \u003d\u003d HTTP_TEMPORARY_REDIRECT) {\n        exceptionAlreadyHandled \u003d true;\n        String location \u003d conn.getHeaderField(\"Location\");\n        if (location !\u003d null) {\n          conn \u003d getConnection(new URL(location), method);\n          conn.setRequestProperty(\"Content-Type\", UPLOAD_CONTENT_TYPE);\n          try {\n            OutputStream os \u003d new BufferedOutputStream(conn.getOutputStream(), bufferSize);\n            return new HttpFSDataOutputStream(conn, os, expectedStatus, statistics);\n          } catch (IOException ex) {\n            HttpFSUtils.validateResponse(conn, expectedStatus);\n            throw ex;\n          }\n        } else {\n          HttpFSUtils.validateResponse(conn, HTTP_TEMPORARY_REDIRECT);\n          throw new IOException(\"Missing HTTP \u0027Location\u0027 header for [\" + conn.getURL() + \"]\");\n        }\n      } else {\n        throw new IOException(\n          MessageFormat.format(\"Expected HTTP status was [307], received [{0}]\",\n                               conn.getResponseCode()));\n      }\n    } catch (IOException ex) {\n      if (exceptionAlreadyHandled) {\n        throw ex;\n      } else {\n        HttpFSUtils.validateResponse(conn, HTTP_TEMPORARY_REDIRECT);\n        throw ex;\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/fs/http/client/HttpFSFileSystem.java",
      "extendedDetails": {}
    },
    "6b4f40cbf913c048fb33da6c5d8271cd77766d0a": {
      "type": "Ybodychange",
      "commitMessage": "HttpFS server should check that upload requests have correct content-type. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1221616 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "20/12/11 9:26 PM",
      "commitName": "6b4f40cbf913c048fb33da6c5d8271cd77766d0a",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "08/12/11 11:25 AM",
      "commitNameOld": "3334306512b5dc932814fded31a89ba1ee97cd9f",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 12.42,
      "commitsBetweenForRepo": 97,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,37 @@\n   private FSDataOutputStream uploadData(String method, Path f, Map\u003cString, String\u003e params,\n                                         int bufferSize, int expectedStatus) throws IOException {\n     HttpURLConnection conn \u003d getConnection(method, params, f, true);\n     conn.setInstanceFollowRedirects(false);\n     boolean exceptionAlreadyHandled \u003d false;\n     try {\n       if (conn.getResponseCode() \u003d\u003d HTTP_TEMPORARY_REDIRECT) {\n         exceptionAlreadyHandled \u003d true;\n         String location \u003d conn.getHeaderField(\"Location\");\n         if (location !\u003d null) {\n           conn \u003d getConnection(new URL(location), method);\n-          conn.setRequestProperty(\"Content-Type\", \"application/octet-stream\");\n+          conn.setRequestProperty(\"Content-Type\", UPLOAD_CONTENT_TYPE);\n           try {\n             OutputStream os \u003d new BufferedOutputStream(conn.getOutputStream(), bufferSize);\n             return new HttpFSDataOutputStream(conn, os, expectedStatus, statistics);\n           } catch (IOException ex) {\n             validateResponse(conn, expectedStatus);\n             throw ex;\n           }\n         } else {\n           validateResponse(conn, HTTP_TEMPORARY_REDIRECT);\n           throw new IOException(\"Missing HTTP \u0027Location\u0027 header for [\" + conn.getURL() + \"]\");\n         }\n       } else {\n         throw new IOException(\n           MessageFormat.format(\"Expected HTTP status was [307], received [{0}]\",\n                                conn.getResponseCode()));\n       }\n     } catch (IOException ex) {\n       if (exceptionAlreadyHandled) {\n         throw ex;\n       } else {\n         validateResponse(conn, HTTP_TEMPORARY_REDIRECT);\n         throw ex;\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private FSDataOutputStream uploadData(String method, Path f, Map\u003cString, String\u003e params,\n                                        int bufferSize, int expectedStatus) throws IOException {\n    HttpURLConnection conn \u003d getConnection(method, params, f, true);\n    conn.setInstanceFollowRedirects(false);\n    boolean exceptionAlreadyHandled \u003d false;\n    try {\n      if (conn.getResponseCode() \u003d\u003d HTTP_TEMPORARY_REDIRECT) {\n        exceptionAlreadyHandled \u003d true;\n        String location \u003d conn.getHeaderField(\"Location\");\n        if (location !\u003d null) {\n          conn \u003d getConnection(new URL(location), method);\n          conn.setRequestProperty(\"Content-Type\", UPLOAD_CONTENT_TYPE);\n          try {\n            OutputStream os \u003d new BufferedOutputStream(conn.getOutputStream(), bufferSize);\n            return new HttpFSDataOutputStream(conn, os, expectedStatus, statistics);\n          } catch (IOException ex) {\n            validateResponse(conn, expectedStatus);\n            throw ex;\n          }\n        } else {\n          validateResponse(conn, HTTP_TEMPORARY_REDIRECT);\n          throw new IOException(\"Missing HTTP \u0027Location\u0027 header for [\" + conn.getURL() + \"]\");\n        }\n      } else {\n        throw new IOException(\n          MessageFormat.format(\"Expected HTTP status was [307], received [{0}]\",\n                               conn.getResponseCode()));\n      }\n    } catch (IOException ex) {\n      if (exceptionAlreadyHandled) {\n        throw ex;\n      } else {\n        validateResponse(conn, HTTP_TEMPORARY_REDIRECT);\n        throw ex;\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/fs/http/client/HttpFSFileSystem.java",
      "extendedDetails": {}
    },
    "3334306512b5dc932814fded31a89ba1ee97cd9f": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-2178. Contributing Hoop to HDFS, replacement for HDFS proxy with read/write capabilities. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1212060 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/12/11 11:25 AM",
      "commitName": "3334306512b5dc932814fded31a89ba1ee97cd9f",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,37 @@\n+  private FSDataOutputStream uploadData(String method, Path f, Map\u003cString, String\u003e params,\n+                                        int bufferSize, int expectedStatus) throws IOException {\n+    HttpURLConnection conn \u003d getConnection(method, params, f, true);\n+    conn.setInstanceFollowRedirects(false);\n+    boolean exceptionAlreadyHandled \u003d false;\n+    try {\n+      if (conn.getResponseCode() \u003d\u003d HTTP_TEMPORARY_REDIRECT) {\n+        exceptionAlreadyHandled \u003d true;\n+        String location \u003d conn.getHeaderField(\"Location\");\n+        if (location !\u003d null) {\n+          conn \u003d getConnection(new URL(location), method);\n+          conn.setRequestProperty(\"Content-Type\", \"application/octet-stream\");\n+          try {\n+            OutputStream os \u003d new BufferedOutputStream(conn.getOutputStream(), bufferSize);\n+            return new HttpFSDataOutputStream(conn, os, expectedStatus, statistics);\n+          } catch (IOException ex) {\n+            validateResponse(conn, expectedStatus);\n+            throw ex;\n+          }\n+        } else {\n+          validateResponse(conn, HTTP_TEMPORARY_REDIRECT);\n+          throw new IOException(\"Missing HTTP \u0027Location\u0027 header for [\" + conn.getURL() + \"]\");\n+        }\n+      } else {\n+        throw new IOException(\n+          MessageFormat.format(\"Expected HTTP status was [307], received [{0}]\",\n+                               conn.getResponseCode()));\n+      }\n+    } catch (IOException ex) {\n+      if (exceptionAlreadyHandled) {\n+        throw ex;\n+      } else {\n+        validateResponse(conn, HTTP_TEMPORARY_REDIRECT);\n+        throw ex;\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private FSDataOutputStream uploadData(String method, Path f, Map\u003cString, String\u003e params,\n                                        int bufferSize, int expectedStatus) throws IOException {\n    HttpURLConnection conn \u003d getConnection(method, params, f, true);\n    conn.setInstanceFollowRedirects(false);\n    boolean exceptionAlreadyHandled \u003d false;\n    try {\n      if (conn.getResponseCode() \u003d\u003d HTTP_TEMPORARY_REDIRECT) {\n        exceptionAlreadyHandled \u003d true;\n        String location \u003d conn.getHeaderField(\"Location\");\n        if (location !\u003d null) {\n          conn \u003d getConnection(new URL(location), method);\n          conn.setRequestProperty(\"Content-Type\", \"application/octet-stream\");\n          try {\n            OutputStream os \u003d new BufferedOutputStream(conn.getOutputStream(), bufferSize);\n            return new HttpFSDataOutputStream(conn, os, expectedStatus, statistics);\n          } catch (IOException ex) {\n            validateResponse(conn, expectedStatus);\n            throw ex;\n          }\n        } else {\n          validateResponse(conn, HTTP_TEMPORARY_REDIRECT);\n          throw new IOException(\"Missing HTTP \u0027Location\u0027 header for [\" + conn.getURL() + \"]\");\n        }\n      } else {\n        throw new IOException(\n          MessageFormat.format(\"Expected HTTP status was [307], received [{0}]\",\n                               conn.getResponseCode()));\n      }\n    } catch (IOException ex) {\n      if (exceptionAlreadyHandled) {\n        throw ex;\n      } else {\n        validateResponse(conn, HTTP_TEMPORARY_REDIRECT);\n        throw ex;\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/fs/http/client/HttpFSFileSystem.java"
    }
  }
}