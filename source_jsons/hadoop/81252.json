{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NetworkTopology.java",
  "functionName": "getWeight",
  "functionId": "getWeight___reader-Node__node-Node",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/NetworkTopology.java",
  "functionStartLine": 755,
  "functionEndLine": 786,
  "numCommitsSeen": 49,
  "timeTaken": 2139,
  "changeHistory": [
    "c73e08a6dad46cad14b38a4a586a5cda1622b206",
    "ab934e85947dcf2092050023909dd81ae274ff45",
    "02fcb6b6bae7c3fe2a10b00b2a563e4098ff225e"
  ],
  "changeHistoryShort": {
    "c73e08a6dad46cad14b38a4a586a5cda1622b206": "Ybodychange",
    "ab934e85947dcf2092050023909dd81ae274ff45": "Ybodychange",
    "02fcb6b6bae7c3fe2a10b00b2a563e4098ff225e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c73e08a6dad46cad14b38a4a586a5cda1622b206": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10206. Datanodes not sorted properly by distance when the reader isn\u0027t a datanode. (Nandakumar via mingma)\n",
      "commitDate": "07/12/16 8:26 AM",
      "commitName": "c73e08a6dad46cad14b38a4a586a5cda1622b206",
      "commitAuthor": "Ming Ma",
      "commitDateOld": "05/12/16 11:18 PM",
      "commitNameOld": "7b988e88992528a0cac2ca8893652c5d4a90c6b9",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 1.38,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,32 @@\n   protected int getWeight(Node reader, Node node) {\n-    // 0 is local, 1 is same rack, 2 is off rack\n-    // Start off by initializing to off rack\n-    int weight \u003d 2;\n-    if (reader !\u003d null) {\n-      if (reader.equals(node)) {\n-        weight \u003d 0;\n-      } else if (isOnSameRack(reader, node)) {\n-        weight \u003d 1;\n+    // 0 is local, 2 is same rack, and each level on each node increases the\n+    //weight by 1\n+    //Start off by initializing to Integer.MAX_VALUE\n+    int weight \u003d Integer.MAX_VALUE;\n+    if (reader !\u003d null \u0026\u0026 node !\u003d null) {\n+      if(reader.equals(node)) {\n+        return 0;\n+      }\n+      int maxReaderLevel \u003d reader.getLevel();\n+      int maxNodeLevel \u003d node.getLevel();\n+      int currentLevelToCompare \u003d maxReaderLevel \u003e maxNodeLevel ?\n+          maxNodeLevel : maxReaderLevel;\n+      Node r \u003d reader;\n+      Node n \u003d node;\n+      weight \u003d 0;\n+      while(r !\u003d null \u0026\u0026 r.getLevel() \u003e currentLevelToCompare) {\n+        r \u003d r.getParent();\n+        weight++;\n+      }\n+      while(n !\u003d null \u0026\u0026 n.getLevel() \u003e currentLevelToCompare) {\n+        n \u003d n.getParent();\n+        weight++;\n+      }\n+      while(r !\u003d null \u0026\u0026 n !\u003d null \u0026\u0026 !r.equals(n)) {\n+        r \u003d r.getParent();\n+        n \u003d n.getParent();\n+        weight+\u003d2;\n       }\n     }\n     return weight;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected int getWeight(Node reader, Node node) {\n    // 0 is local, 2 is same rack, and each level on each node increases the\n    //weight by 1\n    //Start off by initializing to Integer.MAX_VALUE\n    int weight \u003d Integer.MAX_VALUE;\n    if (reader !\u003d null \u0026\u0026 node !\u003d null) {\n      if(reader.equals(node)) {\n        return 0;\n      }\n      int maxReaderLevel \u003d reader.getLevel();\n      int maxNodeLevel \u003d node.getLevel();\n      int currentLevelToCompare \u003d maxReaderLevel \u003e maxNodeLevel ?\n          maxNodeLevel : maxReaderLevel;\n      Node r \u003d reader;\n      Node n \u003d node;\n      weight \u003d 0;\n      while(r !\u003d null \u0026\u0026 r.getLevel() \u003e currentLevelToCompare) {\n        r \u003d r.getParent();\n        weight++;\n      }\n      while(n !\u003d null \u0026\u0026 n.getLevel() \u003e currentLevelToCompare) {\n        n \u003d n.getParent();\n        weight++;\n      }\n      while(r !\u003d null \u0026\u0026 n !\u003d null \u0026\u0026 !r.equals(n)) {\n        r \u003d r.getParent();\n        n \u003d n.getParent();\n        weight+\u003d2;\n      }\n    }\n    return weight;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/NetworkTopology.java",
      "extendedDetails": {}
    },
    "ab934e85947dcf2092050023909dd81ae274ff45": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7647. DatanodeManager.sortLocatedBlocks sorts DatanodeInfos but not StorageIDs. (Contributed by Milan Desai)\n",
      "commitDate": "09/02/15 12:17 PM",
      "commitName": "ab934e85947dcf2092050023909dd81ae274ff45",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "29/09/14 3:00 PM",
      "commitNameOld": "c6c3247dc0dcb8c72ea00f3fb14a0879fcf49c56",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 132.93,
      "commitsBetweenForRepo": 1009,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n   protected int getWeight(Node reader, Node node) {\n     // 0 is local, 1 is same rack, 2 is off rack\n     // Start off by initializing to off rack\n     int weight \u003d 2;\n     if (reader !\u003d null) {\n-      if (reader \u003d\u003d node) {\n+      if (reader.equals(node)) {\n         weight \u003d 0;\n       } else if (isOnSameRack(reader, node)) {\n         weight \u003d 1;\n       }\n     }\n     return weight;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected int getWeight(Node reader, Node node) {\n    // 0 is local, 1 is same rack, 2 is off rack\n    // Start off by initializing to off rack\n    int weight \u003d 2;\n    if (reader !\u003d null) {\n      if (reader.equals(node)) {\n        weight \u003d 0;\n      } else if (isOnSameRack(reader, node)) {\n        weight \u003d 1;\n      }\n    }\n    return weight;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/NetworkTopology.java",
      "extendedDetails": {}
    },
    "02fcb6b6bae7c3fe2a10b00b2a563e4098ff225e": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-6268. Better sorting in NetworkTopology#pseudoSortByDistance when no local node is found. (wang)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1599734 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/06/14 11:33 AM",
      "commitName": "02fcb6b6bae7c3fe2a10b00b2a563e4098ff225e",
      "commitAuthor": "Andrew Wang",
      "diff": "@@ -0,0 +1,13 @@\n+  protected int getWeight(Node reader, Node node) {\n+    // 0 is local, 1 is same rack, 2 is off rack\n+    // Start off by initializing to off rack\n+    int weight \u003d 2;\n+    if (reader !\u003d null) {\n+      if (reader \u003d\u003d node) {\n+        weight \u003d 0;\n+      } else if (isOnSameRack(reader, node)) {\n+        weight \u003d 1;\n+      }\n+    }\n+    return weight;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected int getWeight(Node reader, Node node) {\n    // 0 is local, 1 is same rack, 2 is off rack\n    // Start off by initializing to off rack\n    int weight \u003d 2;\n    if (reader !\u003d null) {\n      if (reader \u003d\u003d node) {\n        weight \u003d 0;\n      } else if (isOnSameRack(reader, node)) {\n        weight \u003d 1;\n      }\n    }\n    return weight;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/NetworkTopology.java"
    }
  }
}