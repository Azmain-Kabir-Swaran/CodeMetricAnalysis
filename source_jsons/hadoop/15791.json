{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HttpFSFileSystem.java",
  "functionName": "hasPathCapability",
  "functionId": "hasPathCapability___path-Path(modifiers-final)__capability-String(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/fs/http/client/HttpFSFileSystem.java",
  "functionStartLine": 1592,
  "functionEndLine": 1610,
  "numCommitsSeen": 51,
  "timeTaken": 2011,
  "changeHistory": [
    "e346e3638c595a512cd582739ff51fb64c3b4950"
  ],
  "changeHistoryShort": {
    "e346e3638c595a512cd582739ff51fb64c3b4950": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e346e3638c595a512cd582739ff51fb64c3b4950": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-15691 Add PathCapabilities to FileSystem and FileContext.\n\nContributed by Steve Loughran.\n\nThis complements the StreamCapabilities Interface by allowing applications to probe for a specific path on a specific instance of a FileSystem client\nto offer a specific capability.\n\nThis is intended to allow applications to determine\n\n* Whether a method is implemented before calling it and dealing with UnsupportedOperationException.\n* Whether a specific feature is believed to be available in the remote store.\n\nAs well as a common set of capabilities defined in CommonPathCapabilities,\nfile systems are free to add their own capabilities, prefixed with\n fs. + schema + .\n\nThe plan is to identify and document more capabilities -and for file systems which add new features, for a declaration of the availability of the feature to always be available.\n\nNote\n\n* The remote store is not expected to be checked for the feature;\n  It is more a check of client API and the client\u0027s configuration/knowledge\n  of the state of the remote system.\n* Permissions are not checked.\n\nChange-Id: I80bfebe94f4a8bdad8f3ac055495735b824968f5\n",
      "commitDate": "25/09/19 4:16 AM",
      "commitName": "e346e3638c595a512cd582739ff51fb64c3b4950",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,19 @@\n+  public boolean hasPathCapability(final Path path, final String capability)\n+      throws IOException {\n+    // query the superclass, which triggers argument validation.\n+    final Path p \u003d makeQualified(path);\n+    switch (validatePathCapabilityArgs(p, capability)) {\n+    case CommonPathCapabilities.FS_ACLS:\n+    case CommonPathCapabilities.FS_APPEND:\n+    case CommonPathCapabilities.FS_CONCAT:\n+    case CommonPathCapabilities.FS_PERMISSIONS:\n+    case CommonPathCapabilities.FS_SNAPSHOTS:\n+    case CommonPathCapabilities.FS_STORAGEPOLICY:\n+    case CommonPathCapabilities.FS_XATTRS:\n+      return true;\n+    case CommonPathCapabilities.FS_SYMLINKS:\n+      return false;\n+    default:\n+      return super.hasPathCapability(p, capability);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean hasPathCapability(final Path path, final String capability)\n      throws IOException {\n    // query the superclass, which triggers argument validation.\n    final Path p \u003d makeQualified(path);\n    switch (validatePathCapabilityArgs(p, capability)) {\n    case CommonPathCapabilities.FS_ACLS:\n    case CommonPathCapabilities.FS_APPEND:\n    case CommonPathCapabilities.FS_CONCAT:\n    case CommonPathCapabilities.FS_PERMISSIONS:\n    case CommonPathCapabilities.FS_SNAPSHOTS:\n    case CommonPathCapabilities.FS_STORAGEPOLICY:\n    case CommonPathCapabilities.FS_XATTRS:\n      return true;\n    case CommonPathCapabilities.FS_SYMLINKS:\n      return false;\n    default:\n      return super.hasPathCapability(p, capability);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/fs/http/client/HttpFSFileSystem.java"
    }
  }
}