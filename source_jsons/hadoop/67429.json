{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AdlFileSystem.java",
  "functionName": "getCustomAccessTokenProvider",
  "functionId": "getCustomAccessTokenProvider___conf-Configuration",
  "sourceFilePath": "hadoop-tools/hadoop-azure-datalake/src/main/java/org/apache/hadoop/fs/adl/AdlFileSystem.java",
  "functionStartLine": 247,
  "functionEndLine": 267,
  "numCommitsSeen": 19,
  "timeTaken": 1707,
  "changeHistory": [
    "5c61ad24887f76dfc5a5935b2c5dceb6bfd99417"
  ],
  "changeHistoryShort": {
    "5c61ad24887f76dfc5a5935b2c5dceb6bfd99417": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5c61ad24887f76dfc5a5935b2c5dceb6bfd99417": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-13037. Refactor Azure Data Lake Store as an independent FileSystem. Contributed by Vishwajeet Dusane\n",
      "commitDate": "11/11/16 11:15 AM",
      "commitName": "5c61ad24887f76dfc5a5935b2c5dceb6bfd99417",
      "commitAuthor": "Chris Douglas",
      "diff": "@@ -0,0 +1,21 @@\n+  protected synchronized AzureADTokenProvider getCustomAccessTokenProvider(\n+      Configuration conf) throws IOException {\n+    String className \u003d getNonEmptyVal(conf, AZURE_AD_TOKEN_PROVIDER_CLASS_KEY);\n+\n+    Class\u003c? extends AzureADTokenProvider\u003e azureADTokenProviderClass \u003d\n+        conf.getClass(AZURE_AD_TOKEN_PROVIDER_CLASS_KEY, null,\n+            AzureADTokenProvider.class);\n+    if (azureADTokenProviderClass \u003d\u003d null) {\n+      throw new IllegalArgumentException(\n+          \"Configuration  \" + className + \" \" + \"not defined/accessible.\");\n+    }\n+\n+    azureTokenProvider \u003d ReflectionUtils\n+        .newInstance(azureADTokenProviderClass, conf);\n+    if (azureTokenProvider \u003d\u003d null) {\n+      throw new IllegalArgumentException(\"Failed to initialize \" + className);\n+    }\n+\n+    azureTokenProvider.initialize(conf);\n+    return azureTokenProvider;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected synchronized AzureADTokenProvider getCustomAccessTokenProvider(\n      Configuration conf) throws IOException {\n    String className \u003d getNonEmptyVal(conf, AZURE_AD_TOKEN_PROVIDER_CLASS_KEY);\n\n    Class\u003c? extends AzureADTokenProvider\u003e azureADTokenProviderClass \u003d\n        conf.getClass(AZURE_AD_TOKEN_PROVIDER_CLASS_KEY, null,\n            AzureADTokenProvider.class);\n    if (azureADTokenProviderClass \u003d\u003d null) {\n      throw new IllegalArgumentException(\n          \"Configuration  \" + className + \" \" + \"not defined/accessible.\");\n    }\n\n    azureTokenProvider \u003d ReflectionUtils\n        .newInstance(azureADTokenProviderClass, conf);\n    if (azureTokenProvider \u003d\u003d null) {\n      throw new IllegalArgumentException(\"Failed to initialize \" + className);\n    }\n\n    azureTokenProvider.initialize(conf);\n    return azureTokenProvider;\n  }",
      "path": "hadoop-tools/hadoop-azure-datalake/src/main/java/org/apache/hadoop/fs/adl/AdlFileSystem.java"
    }
  }
}