{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSImageLoader.java",
  "functionName": "getContentSummaryMap",
  "functionId": "getContentSummaryMap___path-String",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/FSImageLoader.java",
  "functionStartLine": 332,
  "functionEndLine": 366,
  "numCommitsSeen": 22,
  "timeTaken": 951,
  "changeHistory": [
    "40f815131e822f5b7a8e6a6827f4b85b31220c43"
  ],
  "changeHistoryShort": {
    "40f815131e822f5b7a8e6a6827f4b85b31220c43": "Yintroduced"
  },
  "changeHistoryDetails": {
    "40f815131e822f5b7a8e6a6827f4b85b31220c43": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-8622. Implement GETCONTENTSUMMARY operation for WebImageViewer. Contributed by Jagadesh Kiran N.\n",
      "commitDate": "12/08/15 7:31 PM",
      "commitName": "40f815131e822f5b7a8e6a6827f4b85b31220c43",
      "commitAuthor": "Akira Ajisaka",
      "diff": "@@ -0,0 +1,35 @@\n+  private Map\u003cString, Object\u003e getContentSummaryMap(String path)\n+      throws IOException {\n+    long id \u003d lookup(path);\n+    INode inode \u003d fromINodeId(id);\n+    long spaceQuota \u003d 0;\n+    long nsQuota \u003d 0;\n+    long[] data \u003d new long[4];\n+    FsImageProto.INodeSection.INodeFile f \u003d inode.getFile();\n+    switch (inode.getType()) {\n+    case FILE:\n+      data[0] \u003d 0;\n+      data[1] \u003d 1;\n+      data[2] \u003d getFileSize(f);\n+      nsQuota \u003d -1;\n+      data[3] \u003d data[2] * f.getReplication();\n+      spaceQuota \u003d -1;\n+      return fillSummaryMap(spaceQuota, nsQuota, data);\n+    case DIRECTORY:\n+      fillDirSummary(id, data);\n+      nsQuota \u003d inode.getDirectory().getNsQuota();\n+      spaceQuota \u003d inode.getDirectory().getDsQuota();\n+      return fillSummaryMap(spaceQuota, nsQuota, data);\n+    case SYMLINK:\n+      data[0] \u003d 0;\n+      data[1] \u003d 1;\n+      data[2] \u003d 0;\n+      nsQuota \u003d -1;\n+      data[3] \u003d 0;\n+      spaceQuota \u003d -1;\n+      return fillSummaryMap(spaceQuota, nsQuota, data);\n+    default:\n+      return null;\n+    }\n+\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private Map\u003cString, Object\u003e getContentSummaryMap(String path)\n      throws IOException {\n    long id \u003d lookup(path);\n    INode inode \u003d fromINodeId(id);\n    long spaceQuota \u003d 0;\n    long nsQuota \u003d 0;\n    long[] data \u003d new long[4];\n    FsImageProto.INodeSection.INodeFile f \u003d inode.getFile();\n    switch (inode.getType()) {\n    case FILE:\n      data[0] \u003d 0;\n      data[1] \u003d 1;\n      data[2] \u003d getFileSize(f);\n      nsQuota \u003d -1;\n      data[3] \u003d data[2] * f.getReplication();\n      spaceQuota \u003d -1;\n      return fillSummaryMap(spaceQuota, nsQuota, data);\n    case DIRECTORY:\n      fillDirSummary(id, data);\n      nsQuota \u003d inode.getDirectory().getNsQuota();\n      spaceQuota \u003d inode.getDirectory().getDsQuota();\n      return fillSummaryMap(spaceQuota, nsQuota, data);\n    case SYMLINK:\n      data[0] \u003d 0;\n      data[1] \u003d 1;\n      data[2] \u003d 0;\n      nsQuota \u003d -1;\n      data[3] \u003d 0;\n      spaceQuota \u003d -1;\n      return fillSummaryMap(spaceQuota, nsQuota, data);\n    default:\n      return null;\n    }\n\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/FSImageLoader.java"
    }
  }
}