{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LocalityAppPlacementAllocator.java",
  "functionName": "precheckNode",
  "functionId": "precheckNode___schedulerNode-SchedulerNode__schedulingMode-SchedulingMode__dcOpt-Optional__DiagnosticsCollector__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/placement/LocalityAppPlacementAllocator.java",
  "functionStartLine": 398,
  "functionEndLine": 418,
  "numCommitsSeen": 30,
  "timeTaken": 7164,
  "changeHistory": [
    "12b7059ddc8d8f67dd7131565f03a0e09cb92ca7",
    "5f6e22516668ff94a76737ad5e2cdcb2ff9f6dfd",
    "67ae81f0e0ac7f107261ee15f2eb4d189e3b1983",
    "38af23796971193fa529c3d08ffde8fcd6e607b6",
    "ac4d2b1081d8836a21bc70e77f4e6cd2071a9949",
    "2977bc6a141041ef7579efc416e93fc55e0c2a1a"
  ],
  "changeHistoryShort": {
    "12b7059ddc8d8f67dd7131565f03a0e09cb92ca7": "Ymultichange(Yparameterchange,Ybodychange)",
    "5f6e22516668ff94a76737ad5e2cdcb2ff9f6dfd": "Ybodychange",
    "67ae81f0e0ac7f107261ee15f2eb4d189e3b1983": "Ybodychange",
    "38af23796971193fa529c3d08ffde8fcd6e607b6": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
    "ac4d2b1081d8836a21bc70e77f4e6cd2071a9949": "Yfilerename",
    "2977bc6a141041ef7579efc416e93fc55e0c2a1a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "12b7059ddc8d8f67dd7131565f03a0e09cb92ca7": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-9440. Improve diagnostics for scheduler and app activities. Contributed by Tao Yang.\n",
      "commitDate": "06/05/19 5:00 AM",
      "commitName": "12b7059ddc8d8f67dd7131565f03a0e09cb92ca7",
      "commitAuthor": "Weiwei Yang",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-9440. Improve diagnostics for scheduler and app activities. Contributed by Tao Yang.\n",
          "commitDate": "06/05/19 5:00 AM",
          "commitName": "12b7059ddc8d8f67dd7131565f03a0e09cb92ca7",
          "commitAuthor": "Weiwei Yang",
          "commitDateOld": "18/03/19 10:57 AM",
          "commitNameOld": "5f6e22516668ff94a76737ad5e2cdcb2ff9f6dfd",
          "commitAuthorOld": "Eric Yang",
          "daysBetweenCommits": 48.75,
          "commitsBetweenForRepo": 303,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,21 @@\n   public boolean precheckNode(SchedulerNode schedulerNode,\n-      SchedulingMode schedulingMode) {\n+      SchedulingMode schedulingMode,\n+      Optional\u003cDiagnosticsCollector\u003e dcOpt) {\n     // We will only look at node label \u003d nodeLabelToLookAt according to\n     // schedulingMode and partition of node.\n     LOG.debug(\"precheckNode is invoked for {},{}\", schedulerNode.getNodeID(),\n         schedulingMode);\n     String nodePartitionToLookAt;\n     if (schedulingMode \u003d\u003d SchedulingMode.RESPECT_PARTITION_EXCLUSIVITY) {\n       nodePartitionToLookAt \u003d schedulerNode.getPartition();\n     } else {\n       nodePartitionToLookAt \u003d RMNodeLabelsManager.NO_LABEL;\n     }\n \n-    return primaryRequestedPartition.equals(nodePartitionToLookAt);\n+    boolean rst \u003d primaryRequestedPartition.equals(nodePartitionToLookAt);\n+    if (!rst \u0026\u0026 dcOpt.isPresent()) {\n+      dcOpt.get().collectPartitionDiagnostics(primaryRequestedPartition,\n+          nodePartitionToLookAt);\n+    }\n+    return rst;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean precheckNode(SchedulerNode schedulerNode,\n      SchedulingMode schedulingMode,\n      Optional\u003cDiagnosticsCollector\u003e dcOpt) {\n    // We will only look at node label \u003d nodeLabelToLookAt according to\n    // schedulingMode and partition of node.\n    LOG.debug(\"precheckNode is invoked for {},{}\", schedulerNode.getNodeID(),\n        schedulingMode);\n    String nodePartitionToLookAt;\n    if (schedulingMode \u003d\u003d SchedulingMode.RESPECT_PARTITION_EXCLUSIVITY) {\n      nodePartitionToLookAt \u003d schedulerNode.getPartition();\n    } else {\n      nodePartitionToLookAt \u003d RMNodeLabelsManager.NO_LABEL;\n    }\n\n    boolean rst \u003d primaryRequestedPartition.equals(nodePartitionToLookAt);\n    if (!rst \u0026\u0026 dcOpt.isPresent()) {\n      dcOpt.get().collectPartitionDiagnostics(primaryRequestedPartition,\n          nodePartitionToLookAt);\n    }\n    return rst;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/placement/LocalityAppPlacementAllocator.java",
          "extendedDetails": {
            "oldValue": "[schedulerNode-SchedulerNode, schedulingMode-SchedulingMode]",
            "newValue": "[schedulerNode-SchedulerNode, schedulingMode-SchedulingMode, dcOpt-Optional\u003cDiagnosticsCollector\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-9440. Improve diagnostics for scheduler and app activities. Contributed by Tao Yang.\n",
          "commitDate": "06/05/19 5:00 AM",
          "commitName": "12b7059ddc8d8f67dd7131565f03a0e09cb92ca7",
          "commitAuthor": "Weiwei Yang",
          "commitDateOld": "18/03/19 10:57 AM",
          "commitNameOld": "5f6e22516668ff94a76737ad5e2cdcb2ff9f6dfd",
          "commitAuthorOld": "Eric Yang",
          "daysBetweenCommits": 48.75,
          "commitsBetweenForRepo": 303,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,21 @@\n   public boolean precheckNode(SchedulerNode schedulerNode,\n-      SchedulingMode schedulingMode) {\n+      SchedulingMode schedulingMode,\n+      Optional\u003cDiagnosticsCollector\u003e dcOpt) {\n     // We will only look at node label \u003d nodeLabelToLookAt according to\n     // schedulingMode and partition of node.\n     LOG.debug(\"precheckNode is invoked for {},{}\", schedulerNode.getNodeID(),\n         schedulingMode);\n     String nodePartitionToLookAt;\n     if (schedulingMode \u003d\u003d SchedulingMode.RESPECT_PARTITION_EXCLUSIVITY) {\n       nodePartitionToLookAt \u003d schedulerNode.getPartition();\n     } else {\n       nodePartitionToLookAt \u003d RMNodeLabelsManager.NO_LABEL;\n     }\n \n-    return primaryRequestedPartition.equals(nodePartitionToLookAt);\n+    boolean rst \u003d primaryRequestedPartition.equals(nodePartitionToLookAt);\n+    if (!rst \u0026\u0026 dcOpt.isPresent()) {\n+      dcOpt.get().collectPartitionDiagnostics(primaryRequestedPartition,\n+          nodePartitionToLookAt);\n+    }\n+    return rst;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean precheckNode(SchedulerNode schedulerNode,\n      SchedulingMode schedulingMode,\n      Optional\u003cDiagnosticsCollector\u003e dcOpt) {\n    // We will only look at node label \u003d nodeLabelToLookAt according to\n    // schedulingMode and partition of node.\n    LOG.debug(\"precheckNode is invoked for {},{}\", schedulerNode.getNodeID(),\n        schedulingMode);\n    String nodePartitionToLookAt;\n    if (schedulingMode \u003d\u003d SchedulingMode.RESPECT_PARTITION_EXCLUSIVITY) {\n      nodePartitionToLookAt \u003d schedulerNode.getPartition();\n    } else {\n      nodePartitionToLookAt \u003d RMNodeLabelsManager.NO_LABEL;\n    }\n\n    boolean rst \u003d primaryRequestedPartition.equals(nodePartitionToLookAt);\n    if (!rst \u0026\u0026 dcOpt.isPresent()) {\n      dcOpt.get().collectPartitionDiagnostics(primaryRequestedPartition,\n          nodePartitionToLookAt);\n    }\n    return rst;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/placement/LocalityAppPlacementAllocator.java",
          "extendedDetails": {}
        }
      ]
    },
    "5f6e22516668ff94a76737ad5e2cdcb2ff9f6dfd": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9363.  Replaced debug logging with SLF4J parameterized log message.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "18/03/19 10:57 AM",
      "commitName": "5f6e22516668ff94a76737ad5e2cdcb2ff9f6dfd",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "07/03/19 1:47 PM",
      "commitNameOld": "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 10.84,
      "commitsBetweenForRepo": 80,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,15 @@\n   public boolean precheckNode(SchedulerNode schedulerNode,\n       SchedulingMode schedulingMode) {\n     // We will only look at node label \u003d nodeLabelToLookAt according to\n     // schedulingMode and partition of node.\n-    if(LOG.isDebugEnabled()) {\n-      LOG.debug(\"precheckNode is invoked for \" + schedulerNode.getNodeID() + \",\"\n-          + schedulingMode);\n-    }\n+    LOG.debug(\"precheckNode is invoked for {},{}\", schedulerNode.getNodeID(),\n+        schedulingMode);\n     String nodePartitionToLookAt;\n     if (schedulingMode \u003d\u003d SchedulingMode.RESPECT_PARTITION_EXCLUSIVITY) {\n       nodePartitionToLookAt \u003d schedulerNode.getPartition();\n     } else {\n       nodePartitionToLookAt \u003d RMNodeLabelsManager.NO_LABEL;\n     }\n \n     return primaryRequestedPartition.equals(nodePartitionToLookAt);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean precheckNode(SchedulerNode schedulerNode,\n      SchedulingMode schedulingMode) {\n    // We will only look at node label \u003d nodeLabelToLookAt according to\n    // schedulingMode and partition of node.\n    LOG.debug(\"precheckNode is invoked for {},{}\", schedulerNode.getNodeID(),\n        schedulingMode);\n    String nodePartitionToLookAt;\n    if (schedulingMode \u003d\u003d SchedulingMode.RESPECT_PARTITION_EXCLUSIVITY) {\n      nodePartitionToLookAt \u003d schedulerNode.getPartition();\n    } else {\n      nodePartitionToLookAt \u003d RMNodeLabelsManager.NO_LABEL;\n    }\n\n    return primaryRequestedPartition.equals(nodePartitionToLookAt);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/placement/LocalityAppPlacementAllocator.java",
      "extendedDetails": {}
    },
    "67ae81f0e0ac7f107261ee15f2eb4d189e3b1983": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7863. Modify placement constraints to support node attributes. Contributed by Sunil Govindan.\n",
      "commitDate": "12/09/18 3:31 AM",
      "commitName": "67ae81f0e0ac7f107261ee15f2eb4d189e3b1983",
      "commitAuthor": "Naganarasimha",
      "commitDateOld": "21/08/18 7:42 AM",
      "commitNameOld": "9c3fc3ef2865164aa5f121793ac914cfeb21a181",
      "commitAuthorOld": "Weiwei Yang",
      "daysBetweenCommits": 21.83,
      "commitsBetweenForRepo": 158,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,17 @@\n   public boolean precheckNode(SchedulerNode schedulerNode,\n       SchedulingMode schedulingMode) {\n     // We will only look at node label \u003d nodeLabelToLookAt according to\n     // schedulingMode and partition of node.\n+    if(LOG.isDebugEnabled()) {\n+      LOG.debug(\"precheckNode is invoked for \" + schedulerNode.getNodeID() + \",\"\n+          + schedulingMode);\n+    }\n     String nodePartitionToLookAt;\n     if (schedulingMode \u003d\u003d SchedulingMode.RESPECT_PARTITION_EXCLUSIVITY) {\n       nodePartitionToLookAt \u003d schedulerNode.getPartition();\n     } else {\n       nodePartitionToLookAt \u003d RMNodeLabelsManager.NO_LABEL;\n     }\n \n     return primaryRequestedPartition.equals(nodePartitionToLookAt);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean precheckNode(SchedulerNode schedulerNode,\n      SchedulingMode schedulingMode) {\n    // We will only look at node label \u003d nodeLabelToLookAt according to\n    // schedulingMode and partition of node.\n    if(LOG.isDebugEnabled()) {\n      LOG.debug(\"precheckNode is invoked for \" + schedulerNode.getNodeID() + \",\"\n          + schedulingMode);\n    }\n    String nodePartitionToLookAt;\n    if (schedulingMode \u003d\u003d SchedulingMode.RESPECT_PARTITION_EXCLUSIVITY) {\n      nodePartitionToLookAt \u003d schedulerNode.getPartition();\n    } else {\n      nodePartitionToLookAt \u003d RMNodeLabelsManager.NO_LABEL;\n    }\n\n    return primaryRequestedPartition.equals(nodePartitionToLookAt);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/placement/LocalityAppPlacementAllocator.java",
      "extendedDetails": {}
    },
    "38af23796971193fa529c3d08ffde8fcd6e607b6": {
      "type": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-6599. Support anti-affinity constraint via AppPlacementAllocator. (Wangda Tan via asuresh)\n",
      "commitDate": "31/01/18 1:30 AM",
      "commitName": "38af23796971193fa529c3d08ffde8fcd6e607b6",
      "commitAuthor": "Arun Suresh",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-6599. Support anti-affinity constraint via AppPlacementAllocator. (Wangda Tan via asuresh)\n",
          "commitDate": "31/01/18 1:30 AM",
          "commitName": "38af23796971193fa529c3d08ffde8fcd6e607b6",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "05/01/18 3:12 PM",
          "commitNameOld": "a81144daa012e13590725f67f53e35ef84a6f1ec",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 25.43,
          "commitsBetweenForRepo": 150,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,13 @@\n-  public boolean acceptNodePartition(String nodePartition,\n+  public boolean precheckNode(SchedulerNode schedulerNode,\n       SchedulingMode schedulingMode) {\n     // We will only look at node label \u003d nodeLabelToLookAt according to\n     // schedulingMode and partition of node.\n     String nodePartitionToLookAt;\n     if (schedulingMode \u003d\u003d SchedulingMode.RESPECT_PARTITION_EXCLUSIVITY) {\n-      nodePartitionToLookAt \u003d nodePartition;\n+      nodePartitionToLookAt \u003d schedulerNode.getPartition();\n     } else {\n       nodePartitionToLookAt \u003d RMNodeLabelsManager.NO_LABEL;\n     }\n \n     return primaryRequestedPartition.equals(nodePartitionToLookAt);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean precheckNode(SchedulerNode schedulerNode,\n      SchedulingMode schedulingMode) {\n    // We will only look at node label \u003d nodeLabelToLookAt according to\n    // schedulingMode and partition of node.\n    String nodePartitionToLookAt;\n    if (schedulingMode \u003d\u003d SchedulingMode.RESPECT_PARTITION_EXCLUSIVITY) {\n      nodePartitionToLookAt \u003d schedulerNode.getPartition();\n    } else {\n      nodePartitionToLookAt \u003d RMNodeLabelsManager.NO_LABEL;\n    }\n\n    return primaryRequestedPartition.equals(nodePartitionToLookAt);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/placement/LocalityAppPlacementAllocator.java",
          "extendedDetails": {
            "oldValue": "acceptNodePartition",
            "newValue": "precheckNode"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-6599. Support anti-affinity constraint via AppPlacementAllocator. (Wangda Tan via asuresh)\n",
          "commitDate": "31/01/18 1:30 AM",
          "commitName": "38af23796971193fa529c3d08ffde8fcd6e607b6",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "05/01/18 3:12 PM",
          "commitNameOld": "a81144daa012e13590725f67f53e35ef84a6f1ec",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 25.43,
          "commitsBetweenForRepo": 150,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,13 @@\n-  public boolean acceptNodePartition(String nodePartition,\n+  public boolean precheckNode(SchedulerNode schedulerNode,\n       SchedulingMode schedulingMode) {\n     // We will only look at node label \u003d nodeLabelToLookAt according to\n     // schedulingMode and partition of node.\n     String nodePartitionToLookAt;\n     if (schedulingMode \u003d\u003d SchedulingMode.RESPECT_PARTITION_EXCLUSIVITY) {\n-      nodePartitionToLookAt \u003d nodePartition;\n+      nodePartitionToLookAt \u003d schedulerNode.getPartition();\n     } else {\n       nodePartitionToLookAt \u003d RMNodeLabelsManager.NO_LABEL;\n     }\n \n     return primaryRequestedPartition.equals(nodePartitionToLookAt);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean precheckNode(SchedulerNode schedulerNode,\n      SchedulingMode schedulingMode) {\n    // We will only look at node label \u003d nodeLabelToLookAt according to\n    // schedulingMode and partition of node.\n    String nodePartitionToLookAt;\n    if (schedulingMode \u003d\u003d SchedulingMode.RESPECT_PARTITION_EXCLUSIVITY) {\n      nodePartitionToLookAt \u003d schedulerNode.getPartition();\n    } else {\n      nodePartitionToLookAt \u003d RMNodeLabelsManager.NO_LABEL;\n    }\n\n    return primaryRequestedPartition.equals(nodePartitionToLookAt);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/placement/LocalityAppPlacementAllocator.java",
          "extendedDetails": {
            "oldValue": "[nodePartition-String, schedulingMode-SchedulingMode]",
            "newValue": "[schedulerNode-SchedulerNode, schedulingMode-SchedulingMode]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-6599. Support anti-affinity constraint via AppPlacementAllocator. (Wangda Tan via asuresh)\n",
          "commitDate": "31/01/18 1:30 AM",
          "commitName": "38af23796971193fa529c3d08ffde8fcd6e607b6",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "05/01/18 3:12 PM",
          "commitNameOld": "a81144daa012e13590725f67f53e35ef84a6f1ec",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 25.43,
          "commitsBetweenForRepo": 150,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,13 @@\n-  public boolean acceptNodePartition(String nodePartition,\n+  public boolean precheckNode(SchedulerNode schedulerNode,\n       SchedulingMode schedulingMode) {\n     // We will only look at node label \u003d nodeLabelToLookAt according to\n     // schedulingMode and partition of node.\n     String nodePartitionToLookAt;\n     if (schedulingMode \u003d\u003d SchedulingMode.RESPECT_PARTITION_EXCLUSIVITY) {\n-      nodePartitionToLookAt \u003d nodePartition;\n+      nodePartitionToLookAt \u003d schedulerNode.getPartition();\n     } else {\n       nodePartitionToLookAt \u003d RMNodeLabelsManager.NO_LABEL;\n     }\n \n     return primaryRequestedPartition.equals(nodePartitionToLookAt);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean precheckNode(SchedulerNode schedulerNode,\n      SchedulingMode schedulingMode) {\n    // We will only look at node label \u003d nodeLabelToLookAt according to\n    // schedulingMode and partition of node.\n    String nodePartitionToLookAt;\n    if (schedulingMode \u003d\u003d SchedulingMode.RESPECT_PARTITION_EXCLUSIVITY) {\n      nodePartitionToLookAt \u003d schedulerNode.getPartition();\n    } else {\n      nodePartitionToLookAt \u003d RMNodeLabelsManager.NO_LABEL;\n    }\n\n    return primaryRequestedPartition.equals(nodePartitionToLookAt);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/placement/LocalityAppPlacementAllocator.java",
          "extendedDetails": {}
        }
      ]
    },
    "ac4d2b1081d8836a21bc70e77f4e6cd2071a9949": {
      "type": "Yfilerename",
      "commitMessage": "YARN-7437. Rename PlacementSet and SchedulingPlacementSet. (Wangda Tan via kkaranasos)\n",
      "commitDate": "09/11/17 1:01 PM",
      "commitName": "ac4d2b1081d8836a21bc70e77f4e6cd2071a9949",
      "commitAuthor": "Konstantinos Karanasos",
      "commitDateOld": "09/11/17 12:12 PM",
      "commitNameOld": "a2c150a7369cc629bbfaa2dfa3a8495b6f9c42e2",
      "commitAuthorOld": "Robert Kanter",
      "daysBetweenCommits": 0.03,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public boolean acceptNodePartition(String nodePartition,\n      SchedulingMode schedulingMode) {\n    // We will only look at node label \u003d nodeLabelToLookAt according to\n    // schedulingMode and partition of node.\n    String nodePartitionToLookAt;\n    if (schedulingMode \u003d\u003d SchedulingMode.RESPECT_PARTITION_EXCLUSIVITY) {\n      nodePartitionToLookAt \u003d nodePartition;\n    } else {\n      nodePartitionToLookAt \u003d RMNodeLabelsManager.NO_LABEL;\n    }\n\n    return primaryRequestedPartition.equals(nodePartitionToLookAt);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/placement/LocalityAppPlacementAllocator.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/placement/LocalitySchedulingPlacementSet.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/placement/LocalityAppPlacementAllocator.java"
      }
    },
    "2977bc6a141041ef7579efc416e93fc55e0c2a1a": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6040. Introduce api independent PendingAsk to replace usage of ResourceRequest within Scheduler classes. (Wangda Tan via asuresh)\n",
      "commitDate": "06/01/17 9:59 AM",
      "commitName": "2977bc6a141041ef7579efc416e93fc55e0c2a1a",
      "commitAuthor": "Arun Suresh",
      "diff": "@@ -0,0 +1,13 @@\n+  public boolean acceptNodePartition(String nodePartition,\n+      SchedulingMode schedulingMode) {\n+    // We will only look at node label \u003d nodeLabelToLookAt according to\n+    // schedulingMode and partition of node.\n+    String nodePartitionToLookAt;\n+    if (schedulingMode \u003d\u003d SchedulingMode.RESPECT_PARTITION_EXCLUSIVITY) {\n+      nodePartitionToLookAt \u003d nodePartition;\n+    } else {\n+      nodePartitionToLookAt \u003d RMNodeLabelsManager.NO_LABEL;\n+    }\n+\n+    return primaryRequestedPartition.equals(nodePartitionToLookAt);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean acceptNodePartition(String nodePartition,\n      SchedulingMode schedulingMode) {\n    // We will only look at node label \u003d nodeLabelToLookAt according to\n    // schedulingMode and partition of node.\n    String nodePartitionToLookAt;\n    if (schedulingMode \u003d\u003d SchedulingMode.RESPECT_PARTITION_EXCLUSIVITY) {\n      nodePartitionToLookAt \u003d nodePartition;\n    } else {\n      nodePartitionToLookAt \u003d RMNodeLabelsManager.NO_LABEL;\n    }\n\n    return primaryRequestedPartition.equals(nodePartitionToLookAt);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/placement/LocalitySchedulingPlacementSet.java"
    }
  }
}