{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BlockManagerSafeMode.java",
  "functionName": "getSafeModeTip",
  "functionId": "getSafeModeTip",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManagerSafeMode.java",
  "functionStartLine": 296,
  "functionEndLine": 356,
  "numCommitsSeen": 14,
  "timeTaken": 2435,
  "changeHistory": [
    "993dc8726b7d40ac832ae3e23b64e8541b62c4bd",
    "67c9780609f707c11626f05028ddfd28f1b878f1",
    "a49cc74b4c72195dee1dfb6f9548e5e411dff553"
  ],
  "changeHistoryShort": {
    "993dc8726b7d40ac832ae3e23b64e8541b62c4bd": "Ybodychange",
    "67c9780609f707c11626f05028ddfd28f1b878f1": "Ybodychange",
    "a49cc74b4c72195dee1dfb6f9548e5e411dff553": "Yintroduced"
  },
  "changeHistoryDetails": {
    "993dc8726b7d40ac832ae3e23b64e8541b62c4bd": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14632. Reduce useless #getNumLiveDataNodes call in SafeModeMonitor. Contributed by He Xiaoqiao.\n",
      "commitDate": "09/07/19 7:53 PM",
      "commitName": "993dc8726b7d40ac832ae3e23b64e8541b62c4bd",
      "commitAuthor": "Yiqun Lin",
      "commitDateOld": "28/12/18 10:34 AM",
      "commitNameOld": "e9a005dfcf4d2249235aeff4da85b321dddc1ca9",
      "commitAuthorOld": "Wei-Chiu Chuang",
      "daysBetweenCommits": 193.35,
      "commitsBetweenForRepo": 1378,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,57 +1,61 @@\n   String getSafeModeTip() {\n     String msg \u003d \"\";\n \n     synchronized (this) {\n       if (blockSafe \u003c blockThreshold) {\n         msg +\u003d String.format(\n             \"The reported blocks %d needs additional %d\"\n                 + \" blocks to reach the threshold %.4f of total blocks %d.%n\",\n             blockSafe, (blockThreshold - blockSafe), threshold, blockTotal);\n       } else {\n         msg +\u003d String.format(\"The reported blocks %d has reached the threshold\"\n             + \" %.4f of total blocks %d. \", blockSafe, threshold, blockTotal);\n       }\n     }\n \n-    int numLive \u003d blockManager.getDatanodeManager().getNumLiveDataNodes();\n-    if (numLive \u003c datanodeThreshold) {\n-      msg +\u003d String.format(\n-          \"The number of live datanodes %d needs an additional %d live \"\n-              + \"datanodes to reach the minimum number %d.%n\",\n-          numLive, (datanodeThreshold - numLive), datanodeThreshold);\n+    if (datanodeThreshold \u003e 0) {\n+      int numLive \u003d blockManager.getDatanodeManager().getNumLiveDataNodes();\n+      if (numLive \u003c datanodeThreshold) {\n+        msg +\u003d String.format(\n+            \"The number of live datanodes %d needs an additional %d live \"\n+                + \"datanodes to reach the minimum number %d.%n\",\n+            numLive, (datanodeThreshold - numLive), datanodeThreshold);\n+      } else {\n+        msg +\u003d String.format(\"The number of live datanodes %d has reached \"\n+                + \"the minimum number %d. \",\n+            numLive, datanodeThreshold);\n+      }\n     } else {\n-      msg +\u003d String.format(\"The number of live datanodes %d has reached \"\n-              + \"the minimum number %d. \",\n-          numLive, datanodeThreshold);\n+      msg +\u003d \"The minimum number of live datanodes is not required. \";\n     }\n \n     if (getBytesInFuture() \u003e 0) {\n       msg +\u003d \"Name node detected blocks with generation stamps \" +\n           \"in future. This means that Name node metadata is inconsistent. \" +\n           \"This can happen if Name node metadata files have been manually \" +\n           \"replaced. Exiting safe mode will cause loss of \" +\n           getBytesInFuture() + \" byte(s). Please restart name node with \" +\n           \"right metadata or use \\\"hdfs dfsadmin -safemode forceExit\\\" \" +\n           \"if you are certain that the NameNode was started with the \" +\n           \"correct FsImage and edit logs. If you encountered this during \" +\n           \"a rollback, it is safe to exit with -safemode forceExit.\";\n       return msg;\n     }\n \n     final String turnOffTip \u003d \"Safe mode will be turned off automatically \";\n     switch(status) {\n     case PENDING_THRESHOLD:\n       msg +\u003d turnOffTip + \"once the thresholds have been reached.\";\n       break;\n     case EXTENSION:\n       msg +\u003d \"In safe mode extension. \"+ turnOffTip + \"in \" +\n           timeToLeaveExtension() / 1000 + \" seconds.\";\n       break;\n     case OFF:\n       msg +\u003d turnOffTip + \"soon.\";\n       break;\n     default:\n       assert false : \"Non-recognized block manager safe mode status: \" + status;\n     }\n     return msg;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  String getSafeModeTip() {\n    String msg \u003d \"\";\n\n    synchronized (this) {\n      if (blockSafe \u003c blockThreshold) {\n        msg +\u003d String.format(\n            \"The reported blocks %d needs additional %d\"\n                + \" blocks to reach the threshold %.4f of total blocks %d.%n\",\n            blockSafe, (blockThreshold - blockSafe), threshold, blockTotal);\n      } else {\n        msg +\u003d String.format(\"The reported blocks %d has reached the threshold\"\n            + \" %.4f of total blocks %d. \", blockSafe, threshold, blockTotal);\n      }\n    }\n\n    if (datanodeThreshold \u003e 0) {\n      int numLive \u003d blockManager.getDatanodeManager().getNumLiveDataNodes();\n      if (numLive \u003c datanodeThreshold) {\n        msg +\u003d String.format(\n            \"The number of live datanodes %d needs an additional %d live \"\n                + \"datanodes to reach the minimum number %d.%n\",\n            numLive, (datanodeThreshold - numLive), datanodeThreshold);\n      } else {\n        msg +\u003d String.format(\"The number of live datanodes %d has reached \"\n                + \"the minimum number %d. \",\n            numLive, datanodeThreshold);\n      }\n    } else {\n      msg +\u003d \"The minimum number of live datanodes is not required. \";\n    }\n\n    if (getBytesInFuture() \u003e 0) {\n      msg +\u003d \"Name node detected blocks with generation stamps \" +\n          \"in future. This means that Name node metadata is inconsistent. \" +\n          \"This can happen if Name node metadata files have been manually \" +\n          \"replaced. Exiting safe mode will cause loss of \" +\n          getBytesInFuture() + \" byte(s). Please restart name node with \" +\n          \"right metadata or use \\\"hdfs dfsadmin -safemode forceExit\\\" \" +\n          \"if you are certain that the NameNode was started with the \" +\n          \"correct FsImage and edit logs. If you encountered this during \" +\n          \"a rollback, it is safe to exit with -safemode forceExit.\";\n      return msg;\n    }\n\n    final String turnOffTip \u003d \"Safe mode will be turned off automatically \";\n    switch(status) {\n    case PENDING_THRESHOLD:\n      msg +\u003d turnOffTip + \"once the thresholds have been reached.\";\n      break;\n    case EXTENSION:\n      msg +\u003d \"In safe mode extension. \"+ turnOffTip + \"in \" +\n          timeToLeaveExtension() / 1000 + \" seconds.\";\n      break;\n    case OFF:\n      msg +\u003d turnOffTip + \"soon.\";\n      break;\n    default:\n      assert false : \"Non-recognized block manager safe mode status: \" + status;\n    }\n    return msg;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManagerSafeMode.java",
      "extendedDetails": {}
    },
    "67c9780609f707c11626f05028ddfd28f1b878f1": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9498. Move code that tracks blocks with future generation stamps to BlockManagerSafeMode. (Contributed by Mingliang Liu)\n",
      "commitDate": "06/01/16 10:30 AM",
      "commitName": "67c9780609f707c11626f05028ddfd28f1b878f1",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "01/12/15 4:09 PM",
      "commitNameOld": "a49cc74b4c72195dee1dfb6f9548e5e411dff553",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 35.77,
      "commitsBetweenForRepo": 175,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,57 +1,57 @@\n   String getSafeModeTip() {\n     String msg \u003d \"\";\n \n     synchronized (this) {\n       if (blockSafe \u003c blockThreshold) {\n         msg +\u003d String.format(\n             \"The reported blocks %d needs additional %d\"\n                 + \" blocks to reach the threshold %.4f of total blocks %d.%n\",\n             blockSafe, (blockThreshold - blockSafe), threshold, blockTotal);\n       } else {\n         msg +\u003d String.format(\"The reported blocks %d has reached the threshold\"\n             + \" %.4f of total blocks %d. \", blockSafe, threshold, blockTotal);\n       }\n     }\n \n     int numLive \u003d blockManager.getDatanodeManager().getNumLiveDataNodes();\n     if (numLive \u003c datanodeThreshold) {\n       msg +\u003d String.format(\n           \"The number of live datanodes %d needs an additional %d live \"\n               + \"datanodes to reach the minimum number %d.%n\",\n           numLive, (datanodeThreshold - numLive), datanodeThreshold);\n     } else {\n       msg +\u003d String.format(\"The number of live datanodes %d has reached \"\n               + \"the minimum number %d. \",\n           numLive, datanodeThreshold);\n     }\n \n-    if (blockManager.getBytesInFuture() \u003e 0) {\n+    if (getBytesInFuture() \u003e 0) {\n       msg +\u003d \"Name node detected blocks with generation stamps \" +\n-          \"in future. This means that Name node metadata is inconsistent.\" +\n+          \"in future. This means that Name node metadata is inconsistent. \" +\n           \"This can happen if Name node metadata files have been manually \" +\n-          \"replaced. Exiting safe mode will cause loss of \" + blockManager\n-          .getBytesInFuture() + \" byte(s). Please restart name node with \" +\n-          \"right metadata or use \\\"hdfs dfsadmin -safemode forceExit\" +\n-          \"if you are certain that the NameNode was started with the\" +\n-          \"correct FsImage and edit logs. If you encountered this during\" +\n+          \"replaced. Exiting safe mode will cause loss of \" +\n+          getBytesInFuture() + \" byte(s). Please restart name node with \" +\n+          \"right metadata or use \\\"hdfs dfsadmin -safemode forceExit\\\" \" +\n+          \"if you are certain that the NameNode was started with the \" +\n+          \"correct FsImage and edit logs. If you encountered this during \" +\n           \"a rollback, it is safe to exit with -safemode forceExit.\";\n       return msg;\n     }\n \n     final String turnOffTip \u003d \"Safe mode will be turned off automatically \";\n     switch(status) {\n     case PENDING_THRESHOLD:\n       msg +\u003d turnOffTip + \"once the thresholds have been reached.\";\n       break;\n     case EXTENSION:\n       msg +\u003d \"In safe mode extension. \"+ turnOffTip + \"in \" +\n           timeToLeaveExtension() / 1000 + \" seconds.\";\n       break;\n     case OFF:\n       msg +\u003d turnOffTip + \"soon.\";\n       break;\n     default:\n       assert false : \"Non-recognized block manager safe mode status: \" + status;\n     }\n     return msg;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  String getSafeModeTip() {\n    String msg \u003d \"\";\n\n    synchronized (this) {\n      if (blockSafe \u003c blockThreshold) {\n        msg +\u003d String.format(\n            \"The reported blocks %d needs additional %d\"\n                + \" blocks to reach the threshold %.4f of total blocks %d.%n\",\n            blockSafe, (blockThreshold - blockSafe), threshold, blockTotal);\n      } else {\n        msg +\u003d String.format(\"The reported blocks %d has reached the threshold\"\n            + \" %.4f of total blocks %d. \", blockSafe, threshold, blockTotal);\n      }\n    }\n\n    int numLive \u003d blockManager.getDatanodeManager().getNumLiveDataNodes();\n    if (numLive \u003c datanodeThreshold) {\n      msg +\u003d String.format(\n          \"The number of live datanodes %d needs an additional %d live \"\n              + \"datanodes to reach the minimum number %d.%n\",\n          numLive, (datanodeThreshold - numLive), datanodeThreshold);\n    } else {\n      msg +\u003d String.format(\"The number of live datanodes %d has reached \"\n              + \"the minimum number %d. \",\n          numLive, datanodeThreshold);\n    }\n\n    if (getBytesInFuture() \u003e 0) {\n      msg +\u003d \"Name node detected blocks with generation stamps \" +\n          \"in future. This means that Name node metadata is inconsistent. \" +\n          \"This can happen if Name node metadata files have been manually \" +\n          \"replaced. Exiting safe mode will cause loss of \" +\n          getBytesInFuture() + \" byte(s). Please restart name node with \" +\n          \"right metadata or use \\\"hdfs dfsadmin -safemode forceExit\\\" \" +\n          \"if you are certain that the NameNode was started with the \" +\n          \"correct FsImage and edit logs. If you encountered this during \" +\n          \"a rollback, it is safe to exit with -safemode forceExit.\";\n      return msg;\n    }\n\n    final String turnOffTip \u003d \"Safe mode will be turned off automatically \";\n    switch(status) {\n    case PENDING_THRESHOLD:\n      msg +\u003d turnOffTip + \"once the thresholds have been reached.\";\n      break;\n    case EXTENSION:\n      msg +\u003d \"In safe mode extension. \"+ turnOffTip + \"in \" +\n          timeToLeaveExtension() / 1000 + \" seconds.\";\n      break;\n    case OFF:\n      msg +\u003d turnOffTip + \"soon.\";\n      break;\n    default:\n      assert false : \"Non-recognized block manager safe mode status: \" + status;\n    }\n    return msg;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManagerSafeMode.java",
      "extendedDetails": {}
    },
    "a49cc74b4c72195dee1dfb6f9548e5e411dff553": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-9129. Move the safemode block count into BlockManager. Contributed by Mingliang Liu.\n",
      "commitDate": "01/12/15 4:09 PM",
      "commitName": "a49cc74b4c72195dee1dfb6f9548e5e411dff553",
      "commitAuthor": "Jing Zhao",
      "diff": "@@ -0,0 +1,57 @@\n+  String getSafeModeTip() {\n+    String msg \u003d \"\";\n+\n+    synchronized (this) {\n+      if (blockSafe \u003c blockThreshold) {\n+        msg +\u003d String.format(\n+            \"The reported blocks %d needs additional %d\"\n+                + \" blocks to reach the threshold %.4f of total blocks %d.%n\",\n+            blockSafe, (blockThreshold - blockSafe), threshold, blockTotal);\n+      } else {\n+        msg +\u003d String.format(\"The reported blocks %d has reached the threshold\"\n+            + \" %.4f of total blocks %d. \", blockSafe, threshold, blockTotal);\n+      }\n+    }\n+\n+    int numLive \u003d blockManager.getDatanodeManager().getNumLiveDataNodes();\n+    if (numLive \u003c datanodeThreshold) {\n+      msg +\u003d String.format(\n+          \"The number of live datanodes %d needs an additional %d live \"\n+              + \"datanodes to reach the minimum number %d.%n\",\n+          numLive, (datanodeThreshold - numLive), datanodeThreshold);\n+    } else {\n+      msg +\u003d String.format(\"The number of live datanodes %d has reached \"\n+              + \"the minimum number %d. \",\n+          numLive, datanodeThreshold);\n+    }\n+\n+    if (blockManager.getBytesInFuture() \u003e 0) {\n+      msg +\u003d \"Name node detected blocks with generation stamps \" +\n+          \"in future. This means that Name node metadata is inconsistent.\" +\n+          \"This can happen if Name node metadata files have been manually \" +\n+          \"replaced. Exiting safe mode will cause loss of \" + blockManager\n+          .getBytesInFuture() + \" byte(s). Please restart name node with \" +\n+          \"right metadata or use \\\"hdfs dfsadmin -safemode forceExit\" +\n+          \"if you are certain that the NameNode was started with the\" +\n+          \"correct FsImage and edit logs. If you encountered this during\" +\n+          \"a rollback, it is safe to exit with -safemode forceExit.\";\n+      return msg;\n+    }\n+\n+    final String turnOffTip \u003d \"Safe mode will be turned off automatically \";\n+    switch(status) {\n+    case PENDING_THRESHOLD:\n+      msg +\u003d turnOffTip + \"once the thresholds have been reached.\";\n+      break;\n+    case EXTENSION:\n+      msg +\u003d \"In safe mode extension. \"+ turnOffTip + \"in \" +\n+          timeToLeaveExtension() / 1000 + \" seconds.\";\n+      break;\n+    case OFF:\n+      msg +\u003d turnOffTip + \"soon.\";\n+      break;\n+    default:\n+      assert false : \"Non-recognized block manager safe mode status: \" + status;\n+    }\n+    return msg;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  String getSafeModeTip() {\n    String msg \u003d \"\";\n\n    synchronized (this) {\n      if (blockSafe \u003c blockThreshold) {\n        msg +\u003d String.format(\n            \"The reported blocks %d needs additional %d\"\n                + \" blocks to reach the threshold %.4f of total blocks %d.%n\",\n            blockSafe, (blockThreshold - blockSafe), threshold, blockTotal);\n      } else {\n        msg +\u003d String.format(\"The reported blocks %d has reached the threshold\"\n            + \" %.4f of total blocks %d. \", blockSafe, threshold, blockTotal);\n      }\n    }\n\n    int numLive \u003d blockManager.getDatanodeManager().getNumLiveDataNodes();\n    if (numLive \u003c datanodeThreshold) {\n      msg +\u003d String.format(\n          \"The number of live datanodes %d needs an additional %d live \"\n              + \"datanodes to reach the minimum number %d.%n\",\n          numLive, (datanodeThreshold - numLive), datanodeThreshold);\n    } else {\n      msg +\u003d String.format(\"The number of live datanodes %d has reached \"\n              + \"the minimum number %d. \",\n          numLive, datanodeThreshold);\n    }\n\n    if (blockManager.getBytesInFuture() \u003e 0) {\n      msg +\u003d \"Name node detected blocks with generation stamps \" +\n          \"in future. This means that Name node metadata is inconsistent.\" +\n          \"This can happen if Name node metadata files have been manually \" +\n          \"replaced. Exiting safe mode will cause loss of \" + blockManager\n          .getBytesInFuture() + \" byte(s). Please restart name node with \" +\n          \"right metadata or use \\\"hdfs dfsadmin -safemode forceExit\" +\n          \"if you are certain that the NameNode was started with the\" +\n          \"correct FsImage and edit logs. If you encountered this during\" +\n          \"a rollback, it is safe to exit with -safemode forceExit.\";\n      return msg;\n    }\n\n    final String turnOffTip \u003d \"Safe mode will be turned off automatically \";\n    switch(status) {\n    case PENDING_THRESHOLD:\n      msg +\u003d turnOffTip + \"once the thresholds have been reached.\";\n      break;\n    case EXTENSION:\n      msg +\u003d \"In safe mode extension. \"+ turnOffTip + \"in \" +\n          timeToLeaveExtension() / 1000 + \" seconds.\";\n      break;\n    case OFF:\n      msg +\u003d turnOffTip + \"soon.\";\n      break;\n    default:\n      assert false : \"Non-recognized block manager safe mode status: \" + status;\n    }\n    return msg;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManagerSafeMode.java"
    }
  }
}