{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CapacityScheduler.java",
  "functionName": "updateSchedulerHealth",
  "functionId": "updateSchedulerHealth___now-long__nodeId-NodeId__assignment-CSAssignment",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
  "functionStartLine": 1420,
  "functionEndLine": 1452,
  "numCommitsSeen": 371,
  "timeTaken": 6725,
  "changeHistory": [
    "9c3fc3ef2865164aa5f121793ac914cfeb21a181",
    "de3b4aac561258ad242a3c5ed1c919428893fd4c",
    "afa5d4715a3aea2a6e93380b014c7bb8f0880383"
  ],
  "changeHistoryShort": {
    "9c3fc3ef2865164aa5f121793ac914cfeb21a181": "Ybodychange",
    "de3b4aac561258ad242a3c5ed1c919428893fd4c": "Ymultichange(Yparameterchange,Ybodychange)",
    "afa5d4715a3aea2a6e93380b014c7bb8f0880383": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9c3fc3ef2865164aa5f121793ac914cfeb21a181": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7494. Add muti-node lookup mechanism and pluggable nodes sorting policies to optimize placement decision. Contributed by Sunil Govindan.\n",
      "commitDate": "21/08/18 7:42 AM",
      "commitName": "9c3fc3ef2865164aa5f121793ac914cfeb21a181",
      "commitAuthor": "Weiwei Yang",
      "commitDateOld": "31/07/18 8:03 PM",
      "commitNameOld": "6310c0d17d6422a595f856a55b4f1fb82be43739",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 20.49,
      "commitsBetweenForRepo": 195,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,33 @@\n   private void updateSchedulerHealth(long now, NodeId nodeId,\n       CSAssignment assignment) {\n     List\u003cAssignmentInformation.AssignmentDetails\u003e allocations \u003d\n         assignment.getAssignmentInformation().getAllocationDetails();\n     List\u003cAssignmentInformation.AssignmentDetails\u003e reservations \u003d\n         assignment.getAssignmentInformation().getReservationDetails();\n+    // Get nodeId from allocated container if incoming argument is null.\n+    NodeId updatedNodeid \u003d (nodeId \u003d\u003d null)\n+        ? allocations.get(allocations.size() - 1).rmContainer.getNodeId()\n+        : nodeId;\n+\n     if (!allocations.isEmpty()) {\n       ContainerId allocatedContainerId \u003d\n           allocations.get(allocations.size() - 1).containerId;\n       String allocatedQueue \u003d allocations.get(allocations.size() - 1).queue;\n-      schedulerHealth.updateAllocation(now, nodeId, allocatedContainerId,\n+      schedulerHealth.updateAllocation(now, updatedNodeid, allocatedContainerId,\n         allocatedQueue);\n     }\n     if (!reservations.isEmpty()) {\n       ContainerId reservedContainerId \u003d\n           reservations.get(reservations.size() - 1).containerId;\n       String reservedQueue \u003d reservations.get(reservations.size() - 1).queue;\n-      schedulerHealth.updateReservation(now, nodeId, reservedContainerId,\n+      schedulerHealth.updateReservation(now, updatedNodeid, reservedContainerId,\n         reservedQueue);\n     }\n     schedulerHealth.updateSchedulerReservationCounts(assignment\n       .getAssignmentInformation().getNumReservations());\n     schedulerHealth.updateSchedulerAllocationCounts(assignment\n       .getAssignmentInformation().getNumAllocations());\n     schedulerHealth.updateSchedulerRunDetails(now, assignment\n       .getAssignmentInformation().getAllocated(), assignment\n       .getAssignmentInformation().getReserved());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void updateSchedulerHealth(long now, NodeId nodeId,\n      CSAssignment assignment) {\n    List\u003cAssignmentInformation.AssignmentDetails\u003e allocations \u003d\n        assignment.getAssignmentInformation().getAllocationDetails();\n    List\u003cAssignmentInformation.AssignmentDetails\u003e reservations \u003d\n        assignment.getAssignmentInformation().getReservationDetails();\n    // Get nodeId from allocated container if incoming argument is null.\n    NodeId updatedNodeid \u003d (nodeId \u003d\u003d null)\n        ? allocations.get(allocations.size() - 1).rmContainer.getNodeId()\n        : nodeId;\n\n    if (!allocations.isEmpty()) {\n      ContainerId allocatedContainerId \u003d\n          allocations.get(allocations.size() - 1).containerId;\n      String allocatedQueue \u003d allocations.get(allocations.size() - 1).queue;\n      schedulerHealth.updateAllocation(now, updatedNodeid, allocatedContainerId,\n        allocatedQueue);\n    }\n    if (!reservations.isEmpty()) {\n      ContainerId reservedContainerId \u003d\n          reservations.get(reservations.size() - 1).containerId;\n      String reservedQueue \u003d reservations.get(reservations.size() - 1).queue;\n      schedulerHealth.updateReservation(now, updatedNodeid, reservedContainerId,\n        reservedQueue);\n    }\n    schedulerHealth.updateSchedulerReservationCounts(assignment\n      .getAssignmentInformation().getNumReservations());\n    schedulerHealth.updateSchedulerAllocationCounts(assignment\n      .getAssignmentInformation().getNumAllocations());\n    schedulerHealth.updateSchedulerRunDetails(now, assignment\n      .getAssignmentInformation().getAllocated(), assignment\n      .getAssignmentInformation().getReserved());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
      "extendedDetails": {}
    },
    "de3b4aac561258ad242a3c5ed1c919428893fd4c": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-5716. Add global scheduler interface definition and update CapacityScheduler to use it. Contributed by Wangda Tan\n",
      "commitDate": "07/11/16 10:14 AM",
      "commitName": "de3b4aac561258ad242a3c5ed1c919428893fd4c",
      "commitAuthor": "Jian He",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-5716. Add global scheduler interface definition and update CapacityScheduler to use it. Contributed by Wangda Tan\n",
          "commitDate": "07/11/16 10:14 AM",
          "commitName": "de3b4aac561258ad242a3c5ed1c919428893fd4c",
          "commitAuthor": "Jian He",
          "commitDateOld": "01/11/16 3:02 AM",
          "commitNameOld": "7d2d8d25ba0cb10a3c6192d4123f27ede5ef2ba6",
          "commitAuthorOld": "Varun Saxena",
          "daysBetweenCommits": 6.34,
          "commitsBetweenForRepo": 78,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,30 +1,28 @@\n-  private void updateSchedulerHealth(long now, FiCaSchedulerNode node,\n+  private void updateSchedulerHealth(long now, NodeId nodeId,\n       CSAssignment assignment) {\n-\n-    NodeId nodeId \u003d node.getNodeID();\n     List\u003cAssignmentInformation.AssignmentDetails\u003e allocations \u003d\n         assignment.getAssignmentInformation().getAllocationDetails();\n     List\u003cAssignmentInformation.AssignmentDetails\u003e reservations \u003d\n         assignment.getAssignmentInformation().getReservationDetails();\n     if (!allocations.isEmpty()) {\n       ContainerId allocatedContainerId \u003d\n           allocations.get(allocations.size() - 1).containerId;\n       String allocatedQueue \u003d allocations.get(allocations.size() - 1).queue;\n       schedulerHealth.updateAllocation(now, nodeId, allocatedContainerId,\n         allocatedQueue);\n     }\n     if (!reservations.isEmpty()) {\n       ContainerId reservedContainerId \u003d\n           reservations.get(reservations.size() - 1).containerId;\n       String reservedQueue \u003d reservations.get(reservations.size() - 1).queue;\n       schedulerHealth.updateReservation(now, nodeId, reservedContainerId,\n         reservedQueue);\n     }\n     schedulerHealth.updateSchedulerReservationCounts(assignment\n       .getAssignmentInformation().getNumReservations());\n     schedulerHealth.updateSchedulerAllocationCounts(assignment\n       .getAssignmentInformation().getNumAllocations());\n     schedulerHealth.updateSchedulerRunDetails(now, assignment\n       .getAssignmentInformation().getAllocated(), assignment\n       .getAssignmentInformation().getReserved());\n- }\n\\ No newline at end of file\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  private void updateSchedulerHealth(long now, NodeId nodeId,\n      CSAssignment assignment) {\n    List\u003cAssignmentInformation.AssignmentDetails\u003e allocations \u003d\n        assignment.getAssignmentInformation().getAllocationDetails();\n    List\u003cAssignmentInformation.AssignmentDetails\u003e reservations \u003d\n        assignment.getAssignmentInformation().getReservationDetails();\n    if (!allocations.isEmpty()) {\n      ContainerId allocatedContainerId \u003d\n          allocations.get(allocations.size() - 1).containerId;\n      String allocatedQueue \u003d allocations.get(allocations.size() - 1).queue;\n      schedulerHealth.updateAllocation(now, nodeId, allocatedContainerId,\n        allocatedQueue);\n    }\n    if (!reservations.isEmpty()) {\n      ContainerId reservedContainerId \u003d\n          reservations.get(reservations.size() - 1).containerId;\n      String reservedQueue \u003d reservations.get(reservations.size() - 1).queue;\n      schedulerHealth.updateReservation(now, nodeId, reservedContainerId,\n        reservedQueue);\n    }\n    schedulerHealth.updateSchedulerReservationCounts(assignment\n      .getAssignmentInformation().getNumReservations());\n    schedulerHealth.updateSchedulerAllocationCounts(assignment\n      .getAssignmentInformation().getNumAllocations());\n    schedulerHealth.updateSchedulerRunDetails(now, assignment\n      .getAssignmentInformation().getAllocated(), assignment\n      .getAssignmentInformation().getReserved());\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
          "extendedDetails": {
            "oldValue": "[now-long, node-FiCaSchedulerNode, assignment-CSAssignment]",
            "newValue": "[now-long, nodeId-NodeId, assignment-CSAssignment]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-5716. Add global scheduler interface definition and update CapacityScheduler to use it. Contributed by Wangda Tan\n",
          "commitDate": "07/11/16 10:14 AM",
          "commitName": "de3b4aac561258ad242a3c5ed1c919428893fd4c",
          "commitAuthor": "Jian He",
          "commitDateOld": "01/11/16 3:02 AM",
          "commitNameOld": "7d2d8d25ba0cb10a3c6192d4123f27ede5ef2ba6",
          "commitAuthorOld": "Varun Saxena",
          "daysBetweenCommits": 6.34,
          "commitsBetweenForRepo": 78,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,30 +1,28 @@\n-  private void updateSchedulerHealth(long now, FiCaSchedulerNode node,\n+  private void updateSchedulerHealth(long now, NodeId nodeId,\n       CSAssignment assignment) {\n-\n-    NodeId nodeId \u003d node.getNodeID();\n     List\u003cAssignmentInformation.AssignmentDetails\u003e allocations \u003d\n         assignment.getAssignmentInformation().getAllocationDetails();\n     List\u003cAssignmentInformation.AssignmentDetails\u003e reservations \u003d\n         assignment.getAssignmentInformation().getReservationDetails();\n     if (!allocations.isEmpty()) {\n       ContainerId allocatedContainerId \u003d\n           allocations.get(allocations.size() - 1).containerId;\n       String allocatedQueue \u003d allocations.get(allocations.size() - 1).queue;\n       schedulerHealth.updateAllocation(now, nodeId, allocatedContainerId,\n         allocatedQueue);\n     }\n     if (!reservations.isEmpty()) {\n       ContainerId reservedContainerId \u003d\n           reservations.get(reservations.size() - 1).containerId;\n       String reservedQueue \u003d reservations.get(reservations.size() - 1).queue;\n       schedulerHealth.updateReservation(now, nodeId, reservedContainerId,\n         reservedQueue);\n     }\n     schedulerHealth.updateSchedulerReservationCounts(assignment\n       .getAssignmentInformation().getNumReservations());\n     schedulerHealth.updateSchedulerAllocationCounts(assignment\n       .getAssignmentInformation().getNumAllocations());\n     schedulerHealth.updateSchedulerRunDetails(now, assignment\n       .getAssignmentInformation().getAllocated(), assignment\n       .getAssignmentInformation().getReserved());\n- }\n\\ No newline at end of file\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  private void updateSchedulerHealth(long now, NodeId nodeId,\n      CSAssignment assignment) {\n    List\u003cAssignmentInformation.AssignmentDetails\u003e allocations \u003d\n        assignment.getAssignmentInformation().getAllocationDetails();\n    List\u003cAssignmentInformation.AssignmentDetails\u003e reservations \u003d\n        assignment.getAssignmentInformation().getReservationDetails();\n    if (!allocations.isEmpty()) {\n      ContainerId allocatedContainerId \u003d\n          allocations.get(allocations.size() - 1).containerId;\n      String allocatedQueue \u003d allocations.get(allocations.size() - 1).queue;\n      schedulerHealth.updateAllocation(now, nodeId, allocatedContainerId,\n        allocatedQueue);\n    }\n    if (!reservations.isEmpty()) {\n      ContainerId reservedContainerId \u003d\n          reservations.get(reservations.size() - 1).containerId;\n      String reservedQueue \u003d reservations.get(reservations.size() - 1).queue;\n      schedulerHealth.updateReservation(now, nodeId, reservedContainerId,\n        reservedQueue);\n    }\n    schedulerHealth.updateSchedulerReservationCounts(assignment\n      .getAssignmentInformation().getNumReservations());\n    schedulerHealth.updateSchedulerAllocationCounts(assignment\n      .getAssignmentInformation().getNumAllocations());\n    schedulerHealth.updateSchedulerRunDetails(now, assignment\n      .getAssignmentInformation().getAllocated(), assignment\n      .getAssignmentInformation().getReserved());\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
          "extendedDetails": {}
        }
      ]
    },
    "afa5d4715a3aea2a6e93380b014c7bb8f0880383": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3293. Track and display capacity scheduler health metrics in web\nUI. Contributed by Varun Vasudev\n",
      "commitDate": "09/04/15 11:38 PM",
      "commitName": "afa5d4715a3aea2a6e93380b014c7bb8f0880383",
      "commitAuthor": "Xuan",
      "diff": "@@ -0,0 +1,30 @@\n+  private void updateSchedulerHealth(long now, FiCaSchedulerNode node,\n+      CSAssignment assignment) {\n+\n+    NodeId nodeId \u003d node.getNodeID();\n+    List\u003cAssignmentInformation.AssignmentDetails\u003e allocations \u003d\n+        assignment.getAssignmentInformation().getAllocationDetails();\n+    List\u003cAssignmentInformation.AssignmentDetails\u003e reservations \u003d\n+        assignment.getAssignmentInformation().getReservationDetails();\n+    if (!allocations.isEmpty()) {\n+      ContainerId allocatedContainerId \u003d\n+          allocations.get(allocations.size() - 1).containerId;\n+      String allocatedQueue \u003d allocations.get(allocations.size() - 1).queue;\n+      schedulerHealth.updateAllocation(now, nodeId, allocatedContainerId,\n+        allocatedQueue);\n+    }\n+    if (!reservations.isEmpty()) {\n+      ContainerId reservedContainerId \u003d\n+          reservations.get(reservations.size() - 1).containerId;\n+      String reservedQueue \u003d reservations.get(reservations.size() - 1).queue;\n+      schedulerHealth.updateReservation(now, nodeId, reservedContainerId,\n+        reservedQueue);\n+    }\n+    schedulerHealth.updateSchedulerReservationCounts(assignment\n+      .getAssignmentInformation().getNumReservations());\n+    schedulerHealth.updateSchedulerAllocationCounts(assignment\n+      .getAssignmentInformation().getNumAllocations());\n+    schedulerHealth.updateSchedulerRunDetails(now, assignment\n+      .getAssignmentInformation().getAllocated(), assignment\n+      .getAssignmentInformation().getReserved());\n+ }\n\\ No newline at end of file\n",
      "actualSource": "  private void updateSchedulerHealth(long now, FiCaSchedulerNode node,\n      CSAssignment assignment) {\n\n    NodeId nodeId \u003d node.getNodeID();\n    List\u003cAssignmentInformation.AssignmentDetails\u003e allocations \u003d\n        assignment.getAssignmentInformation().getAllocationDetails();\n    List\u003cAssignmentInformation.AssignmentDetails\u003e reservations \u003d\n        assignment.getAssignmentInformation().getReservationDetails();\n    if (!allocations.isEmpty()) {\n      ContainerId allocatedContainerId \u003d\n          allocations.get(allocations.size() - 1).containerId;\n      String allocatedQueue \u003d allocations.get(allocations.size() - 1).queue;\n      schedulerHealth.updateAllocation(now, nodeId, allocatedContainerId,\n        allocatedQueue);\n    }\n    if (!reservations.isEmpty()) {\n      ContainerId reservedContainerId \u003d\n          reservations.get(reservations.size() - 1).containerId;\n      String reservedQueue \u003d reservations.get(reservations.size() - 1).queue;\n      schedulerHealth.updateReservation(now, nodeId, reservedContainerId,\n        reservedQueue);\n    }\n    schedulerHealth.updateSchedulerReservationCounts(assignment\n      .getAssignmentInformation().getNumReservations());\n    schedulerHealth.updateSchedulerAllocationCounts(assignment\n      .getAssignmentInformation().getNumAllocations());\n    schedulerHealth.updateSchedulerRunDetails(now, assignment\n      .getAssignmentInformation().getAllocated(), assignment\n      .getAssignmentInformation().getReserved());\n }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java"
    }
  }
}