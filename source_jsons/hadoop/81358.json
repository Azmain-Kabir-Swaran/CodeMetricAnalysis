{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NetUtils.java",
  "functionName": "canonicalizeHost",
  "functionId": "canonicalizeHost___host-String",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/NetUtils.java",
  "functionStartLine": 285,
  "functionEndLine": 300,
  "numCommitsSeen": 39,
  "timeTaken": 2009,
  "changeHistory": [
    "2b94e51a8f17548e5ef6af8e1e934a94031bb1dc",
    "9803ae374f69942aec82ec6eeeb9722523a1ade0",
    "8f83a2355bc6224a92fb7ba24890ddf3ab317ae6",
    "4bb572d3366c478924fa95e513858e8a8c793774"
  ],
  "changeHistoryShort": {
    "2b94e51a8f17548e5ef6af8e1e934a94031bb1dc": "Ybodychange",
    "9803ae374f69942aec82ec6eeeb9722523a1ade0": "Ybodychange",
    "8f83a2355bc6224a92fb7ba24890ddf3ab317ae6": "Ybodychange",
    "4bb572d3366c478924fa95e513858e8a8c793774": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2b94e51a8f17548e5ef6af8e1e934a94031bb1dc": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16114. NetUtils#canonicalizeHost gives different value for same host.\n\nAuthor:    Praveen Krishna \u003cpraveenkrishna@tutanota.com\u003e\n",
      "commitDate": "07/03/19 3:06 AM",
      "commitName": "2b94e51a8f17548e5ef6af8e1e934a94031bb1dc",
      "commitAuthor": "Praveen Krishna",
      "commitDateOld": "11/01/19 10:54 AM",
      "commitNameOld": "fb8932a727f757b2e9c1c61a18145878d0eb77bd",
      "commitAuthorOld": "Giovanni Matteo Fumarola",
      "daysBetweenCommits": 54.67,
      "commitsBetweenForRepo": 450,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,16 @@\n   private static String canonicalizeHost(String host) {\n     // check if the host has already been canonicalized\n     String fqHost \u003d canonicalizedHostCache.get(host);\n     if (fqHost \u003d\u003d null) {\n       try {\n         fqHost \u003d SecurityUtil.getByName(host).getHostName();\n-        // slight race condition, but won\u0027t hurt\n         canonicalizedHostCache.putIfAbsent(host, fqHost);\n+        // ensures that we won\u0027t return a canonicalized stale (non-cached)\n+        // host name for a given host\n+        fqHost \u003d canonicalizedHostCache.get(host);\n       } catch (UnknownHostException e) {\n         fqHost \u003d host;\n       }\n     }\n     return fqHost;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static String canonicalizeHost(String host) {\n    // check if the host has already been canonicalized\n    String fqHost \u003d canonicalizedHostCache.get(host);\n    if (fqHost \u003d\u003d null) {\n      try {\n        fqHost \u003d SecurityUtil.getByName(host).getHostName();\n        canonicalizedHostCache.putIfAbsent(host, fqHost);\n        // ensures that we won\u0027t return a canonicalized stale (non-cached)\n        // host name for a given host\n        fqHost \u003d canonicalizedHostCache.get(host);\n      } catch (UnknownHostException e) {\n        fqHost \u003d host;\n      }\n    }\n    return fqHost;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/NetUtils.java",
      "extendedDetails": {}
    },
    "9803ae374f69942aec82ec6eeeb9722523a1ade0": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11459. Fix recent findbugs in ActiveStandbyElector, NetUtils and ShellBasedIdMapping (Contributed by Vinayakumar B)\n",
      "commitDate": "05/01/15 7:45 PM",
      "commitName": "9803ae374f69942aec82ec6eeeb9722523a1ade0",
      "commitAuthor": "Vinayakumar B",
      "commitDateOld": "10/12/14 12:44 PM",
      "commitNameOld": "bbd6a3277678a60d472e76a207f25a916220946c",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 26.29,
      "commitsBetweenForRepo": 133,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n   private static String canonicalizeHost(String host) {\n     // check if the host has already been canonicalized\n     String fqHost \u003d canonicalizedHostCache.get(host);\n     if (fqHost \u003d\u003d null) {\n       try {\n         fqHost \u003d SecurityUtil.getByName(host).getHostName();\n         // slight race condition, but won\u0027t hurt\n-        canonicalizedHostCache.put(host, fqHost);\n+        canonicalizedHostCache.putIfAbsent(host, fqHost);\n       } catch (UnknownHostException e) {\n         fqHost \u003d host;\n       }\n     }\n     return fqHost;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static String canonicalizeHost(String host) {\n    // check if the host has already been canonicalized\n    String fqHost \u003d canonicalizedHostCache.get(host);\n    if (fqHost \u003d\u003d null) {\n      try {\n        fqHost \u003d SecurityUtil.getByName(host).getHostName();\n        // slight race condition, but won\u0027t hurt\n        canonicalizedHostCache.putIfAbsent(host, fqHost);\n      } catch (UnknownHostException e) {\n        fqHost \u003d host;\n      }\n    }\n    return fqHost;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/NetUtils.java",
      "extendedDetails": {}
    },
    "8f83a2355bc6224a92fb7ba24890ddf3ab317ae6": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-7964. Deadlock in NetUtils and SecurityUtil class initialization. Contributed by Daryn Sharp.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1230249 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/01/12 1:02 PM",
      "commitName": "8f83a2355bc6224a92fb7ba24890ddf3ab317ae6",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "05/01/12 10:41 AM",
      "commitNameOld": "4bb572d3366c478924fa95e513858e8a8c793774",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 6.1,
      "commitsBetweenForRepo": 32,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n   private static String canonicalizeHost(String host) {\n     // check if the host has already been canonicalized\n     String fqHost \u003d canonicalizedHostCache.get(host);\n     if (fqHost \u003d\u003d null) {\n       try {\n-        fqHost \u003d hostResolver.getByName(host).getHostName();\n+        fqHost \u003d SecurityUtil.getByName(host).getHostName();\n         // slight race condition, but won\u0027t hurt \n         canonicalizedHostCache.put(host, fqHost);\n       } catch (UnknownHostException e) {\n         fqHost \u003d host;\n       }\n     }\n     return fqHost;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static String canonicalizeHost(String host) {\n    // check if the host has already been canonicalized\n    String fqHost \u003d canonicalizedHostCache.get(host);\n    if (fqHost \u003d\u003d null) {\n      try {\n        fqHost \u003d SecurityUtil.getByName(host).getHostName();\n        // slight race condition, but won\u0027t hurt \n        canonicalizedHostCache.put(host, fqHost);\n      } catch (UnknownHostException e) {\n        fqHost \u003d host;\n      }\n    }\n    return fqHost;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/NetUtils.java",
      "extendedDetails": {}
    },
    "4bb572d3366c478924fa95e513858e8a8c793774": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7808. Port HADOOP-7510 - Add configurable option to use original hostname in token instead of IP to allow server IP change. Contributed by Daryn Sharp.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1227737 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/01/12 10:41 AM",
      "commitName": "4bb572d3366c478924fa95e513858e8a8c793774",
      "commitAuthor": "Suresh Srinivas",
      "diff": "@@ -0,0 +1,14 @@\n+  private static String canonicalizeHost(String host) {\n+    // check if the host has already been canonicalized\n+    String fqHost \u003d canonicalizedHostCache.get(host);\n+    if (fqHost \u003d\u003d null) {\n+      try {\n+        fqHost \u003d hostResolver.getByName(host).getHostName();\n+        // slight race condition, but won\u0027t hurt \n+        canonicalizedHostCache.put(host, fqHost);\n+      } catch (UnknownHostException e) {\n+        fqHost \u003d host;\n+      }\n+    }\n+    return fqHost;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static String canonicalizeHost(String host) {\n    // check if the host has already been canonicalized\n    String fqHost \u003d canonicalizedHostCache.get(host);\n    if (fqHost \u003d\u003d null) {\n      try {\n        fqHost \u003d hostResolver.getByName(host).getHostName();\n        // slight race condition, but won\u0027t hurt \n        canonicalizedHostCache.put(host, fqHost);\n      } catch (UnknownHostException e) {\n        fqHost \u003d host;\n      }\n    }\n    return fqHost;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/NetUtils.java"
    }
  }
}