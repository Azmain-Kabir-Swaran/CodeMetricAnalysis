{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Client.java",
  "functionName": "prepareTimelineDomain",
  "functionId": "prepareTimelineDomain",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/Client.java",
  "functionStartLine": 1232,
  "functionEndLine": 1261,
  "numCommitsSeen": 73,
  "timeTaken": 1553,
  "changeHistory": [
    "1d4612f5ad9678c952b416e798dccd20c88f96ef"
  ],
  "changeHistoryShort": {
    "1d4612f5ad9678c952b416e798dccd20c88f96ef": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1d4612f5ad9678c952b416e798dccd20c88f96ef": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2629. Made the distributed shell use the domain-based timeline ACLs. Contributed by Zhijie Shen.\n",
      "commitDate": "09/10/14 12:59 PM",
      "commitName": "1d4612f5ad9678c952b416e798dccd20c88f96ef",
      "commitAuthor": "Zhijie Shen",
      "diff": "@@ -0,0 +1,30 @@\n+  private void prepareTimelineDomain() {\n+    TimelineClient timelineClient \u003d null;\n+    if (conf.getBoolean(YarnConfiguration.TIMELINE_SERVICE_ENABLED,\n+        YarnConfiguration.DEFAULT_TIMELINE_SERVICE_ENABLED)) {\n+      timelineClient \u003d TimelineClient.createTimelineClient();\n+      timelineClient.init(conf);\n+      timelineClient.start();\n+    } else {\n+      LOG.warn(\"Cannot put the domain \" + domainId +\n+          \" because the timeline service is not enabled\");\n+      return;\n+    }\n+    try {\n+      //TODO: we need to check and combine the existing timeline domain ACLs,\n+      //but let\u0027s do it once we have client java library to query domains.\n+      TimelineDomain domain \u003d new TimelineDomain();\n+      domain.setId(domainId);\n+      domain.setReaders(\n+          viewACLs !\u003d null \u0026\u0026 viewACLs.length() \u003e 0 ? viewACLs : \" \");\n+      domain.setWriters(\n+          modifyACLs !\u003d null \u0026\u0026 modifyACLs.length() \u003e 0 ? modifyACLs : \" \");\n+      timelineClient.putDomain(domain);\n+      LOG.info(\"Put the timeline domain: \" +\n+          TimelineUtils.dumpTimelineRecordtoJSON(domain));\n+    } catch (Exception e) {\n+      LOG.error(\"Error when putting the timeline domain\", e);\n+    } finally {\n+      timelineClient.stop();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void prepareTimelineDomain() {\n    TimelineClient timelineClient \u003d null;\n    if (conf.getBoolean(YarnConfiguration.TIMELINE_SERVICE_ENABLED,\n        YarnConfiguration.DEFAULT_TIMELINE_SERVICE_ENABLED)) {\n      timelineClient \u003d TimelineClient.createTimelineClient();\n      timelineClient.init(conf);\n      timelineClient.start();\n    } else {\n      LOG.warn(\"Cannot put the domain \" + domainId +\n          \" because the timeline service is not enabled\");\n      return;\n    }\n    try {\n      //TODO: we need to check and combine the existing timeline domain ACLs,\n      //but let\u0027s do it once we have client java library to query domains.\n      TimelineDomain domain \u003d new TimelineDomain();\n      domain.setId(domainId);\n      domain.setReaders(\n          viewACLs !\u003d null \u0026\u0026 viewACLs.length() \u003e 0 ? viewACLs : \" \");\n      domain.setWriters(\n          modifyACLs !\u003d null \u0026\u0026 modifyACLs.length() \u003e 0 ? modifyACLs : \" \");\n      timelineClient.putDomain(domain);\n      LOG.info(\"Put the timeline domain: \" +\n          TimelineUtils.dumpTimelineRecordtoJSON(domain));\n    } catch (Exception e) {\n      LOG.error(\"Error when putting the timeline domain\", e);\n    } finally {\n      timelineClient.stop();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/Client.java"
    }
  }
}