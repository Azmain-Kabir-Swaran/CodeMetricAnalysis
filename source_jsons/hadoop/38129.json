{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FifoIntraQueuePreemptionPlugin.java",
  "functionName": "getResourceDemandFromAppsPerQueue",
  "functionId": "getResourceDemandFromAppsPerQueue___queueName-String__partition-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/FifoIntraQueuePreemptionPlugin.java",
  "functionStartLine": 91,
  "functionEndLine": 114,
  "numCommitsSeen": 11,
  "timeTaken": 1554,
  "changeHistory": [
    "2064ca015d1584263aac0cc20c60b925a3aff612",
    "90dd3a8148468ac37a3f2173ad8d45e38bfcb0c9"
  ],
  "changeHistoryShort": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": "Ybodychange",
    "90dd3a8148468ac37a3f2173ad8d45e38bfcb0c9": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9349.  Changed logging to use slf4j api.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "15/03/19 4:20 PM",
      "commitName": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "04/03/19 9:10 PM",
      "commitNameOld": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
      "commitAuthorOld": "Prabhu Joseph",
      "daysBetweenCommits": 10.76,
      "commitsBetweenForRepo": 108,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,24 @@\n   public Map\u003cString, Resource\u003e getResourceDemandFromAppsPerQueue(\n       String queueName, String partition) {\n \n     Map\u003cString, Resource\u003e resToObtainByPartition \u003d new HashMap\u003c\u003e();\n     TempQueuePerPartition tq \u003d context\n         .getQueueByPartition(queueName, partition);\n \n     Collection\u003cTempAppPerPartition\u003e appsOrderedByPriority \u003d tq.getApps();\n     Resource actualPreemptNeeded \u003d resToObtainByPartition.get(partition);\n \n     // Updating pending resource per-partition level.\n     if (actualPreemptNeeded \u003d\u003d null) {\n       actualPreemptNeeded \u003d Resources.createResource(0, 0);\n       resToObtainByPartition.put(partition, actualPreemptNeeded);\n     }\n \n     for (TempAppPerPartition a1 : appsOrderedByPriority) {\n       Resources.addTo(actualPreemptNeeded, a1.getActuallyToBePreempted());\n     }\n \n-    if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"Selected to preempt \" + actualPreemptNeeded\n-          + \" resource from partition:\" + partition);\n-    }\n+    LOG.debug(\"Selected to preempt {} resource from partition:{}\",\n+        actualPreemptNeeded, partition);\n     return resToObtainByPartition;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Map\u003cString, Resource\u003e getResourceDemandFromAppsPerQueue(\n      String queueName, String partition) {\n\n    Map\u003cString, Resource\u003e resToObtainByPartition \u003d new HashMap\u003c\u003e();\n    TempQueuePerPartition tq \u003d context\n        .getQueueByPartition(queueName, partition);\n\n    Collection\u003cTempAppPerPartition\u003e appsOrderedByPriority \u003d tq.getApps();\n    Resource actualPreemptNeeded \u003d resToObtainByPartition.get(partition);\n\n    // Updating pending resource per-partition level.\n    if (actualPreemptNeeded \u003d\u003d null) {\n      actualPreemptNeeded \u003d Resources.createResource(0, 0);\n      resToObtainByPartition.put(partition, actualPreemptNeeded);\n    }\n\n    for (TempAppPerPartition a1 : appsOrderedByPriority) {\n      Resources.addTo(actualPreemptNeeded, a1.getActuallyToBePreempted());\n    }\n\n    LOG.debug(\"Selected to preempt {} resource from partition:{}\",\n        actualPreemptNeeded, partition);\n    return resToObtainByPartition;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/FifoIntraQueuePreemptionPlugin.java",
      "extendedDetails": {}
    },
    "90dd3a8148468ac37a3f2173ad8d45e38bfcb0c9": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2009. CapacityScheduler: Add intra-queue preemption for app priority support. (Sunil G via wangda)\n",
      "commitDate": "31/10/16 3:18 PM",
      "commitName": "90dd3a8148468ac37a3f2173ad8d45e38bfcb0c9",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,26 @@\n+  public Map\u003cString, Resource\u003e getResourceDemandFromAppsPerQueue(\n+      String queueName, String partition) {\n+\n+    Map\u003cString, Resource\u003e resToObtainByPartition \u003d new HashMap\u003c\u003e();\n+    TempQueuePerPartition tq \u003d context\n+        .getQueueByPartition(queueName, partition);\n+\n+    Collection\u003cTempAppPerPartition\u003e appsOrderedByPriority \u003d tq.getApps();\n+    Resource actualPreemptNeeded \u003d resToObtainByPartition.get(partition);\n+\n+    // Updating pending resource per-partition level.\n+    if (actualPreemptNeeded \u003d\u003d null) {\n+      actualPreemptNeeded \u003d Resources.createResource(0, 0);\n+      resToObtainByPartition.put(partition, actualPreemptNeeded);\n+    }\n+\n+    for (TempAppPerPartition a1 : appsOrderedByPriority) {\n+      Resources.addTo(actualPreemptNeeded, a1.getActuallyToBePreempted());\n+    }\n+\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"Selected to preempt \" + actualPreemptNeeded\n+          + \" resource from partition:\" + partition);\n+    }\n+    return resToObtainByPartition;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Map\u003cString, Resource\u003e getResourceDemandFromAppsPerQueue(\n      String queueName, String partition) {\n\n    Map\u003cString, Resource\u003e resToObtainByPartition \u003d new HashMap\u003c\u003e();\n    TempQueuePerPartition tq \u003d context\n        .getQueueByPartition(queueName, partition);\n\n    Collection\u003cTempAppPerPartition\u003e appsOrderedByPriority \u003d tq.getApps();\n    Resource actualPreemptNeeded \u003d resToObtainByPartition.get(partition);\n\n    // Updating pending resource per-partition level.\n    if (actualPreemptNeeded \u003d\u003d null) {\n      actualPreemptNeeded \u003d Resources.createResource(0, 0);\n      resToObtainByPartition.put(partition, actualPreemptNeeded);\n    }\n\n    for (TempAppPerPartition a1 : appsOrderedByPriority) {\n      Resources.addTo(actualPreemptNeeded, a1.getActuallyToBePreempted());\n    }\n\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Selected to preempt \" + actualPreemptNeeded\n          + \" resource from partition:\" + partition);\n    }\n    return resToObtainByPartition;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/FifoIntraQueuePreemptionPlugin.java"
    }
  }
}