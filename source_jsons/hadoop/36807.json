{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMWebServices.java",
  "functionName": "replaceLabelsOnNode",
  "functionId": "replaceLabelsOnNode___newNodeLabelsName-Set__String__(annotations-@QueryParam(\"labels\"))__hsr-HttpServletRequest(annotations-@Context)__nodeId-String(annotations-@PathParam(\"nodeId\"))",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
  "functionStartLine": 1282,
  "functionEndLine": 1296,
  "numCommitsSeen": 142,
  "timeTaken": 4850,
  "changeHistory": [
    "d76fbbc9b82e720d7d5188f9ae2f56a8d78f3a98",
    "7f19e7a2549a098236d06b29b7076bb037533f05",
    "db1b674b50ddecf2774f4092d677c412722bdcb1",
    "9a4e0d343e9e891c10ef6682e7b2231a59e69ade"
  ],
  "changeHistoryShort": {
    "d76fbbc9b82e720d7d5188f9ae2f56a8d78f3a98": "Ybodychange",
    "7f19e7a2549a098236d06b29b7076bb037533f05": "Ymultichange(Yparameterchange,Ybodychange)",
    "db1b674b50ddecf2774f4092d677c412722bdcb1": "Ybodychange",
    "9a4e0d343e9e891c10ef6682e7b2231a59e69ade": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d76fbbc9b82e720d7d5188f9ae2f56a8d78f3a98": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8249. Fixed few REST APIs in RMWebServices to have static-user check. Contributed by Sunil Govindan.\n",
      "commitDate": "10/05/18 7:05 PM",
      "commitName": "d76fbbc9b82e720d7d5188f9ae2f56a8d78f3a98",
      "commitAuthor": "Vinod Kumar Vavilapalli (I am also known as @tshooter.)",
      "commitDateOld": "27/04/18 10:28 AM",
      "commitNameOld": "ef3ecc308dbea41c6a88bd4d16739c7bbc10cdda",
      "commitAuthorOld": "Rohith Sharma K S",
      "daysBetweenCommits": 13.36,
      "commitsBetweenForRepo": 87,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,15 @@\n   public Response replaceLabelsOnNode(\n       @QueryParam(\"labels\") Set\u003cString\u003e newNodeLabelsName,\n       @Context HttpServletRequest hsr, @PathParam(\"nodeId\") String nodeId)\n       throws Exception {\n+    UserGroupInformation callerUGI \u003d getCallerUserGroupInformation(hsr, true);\n+    initForWritableEndpoints(callerUGI, false);\n+\n     NodeId nid \u003d ConverterUtils.toNodeIdWithDefaultPort(nodeId);\n     Map\u003cNodeId, Set\u003cString\u003e\u003e newLabelsForNode \u003d\n         new HashMap\u003cNodeId, Set\u003cString\u003e\u003e();\n     newLabelsForNode.put(nid, new HashSet\u003cString\u003e(newNodeLabelsName));\n \n     return replaceLabelsOnNode(newLabelsForNode, hsr,\n         \"/nodes/nodeid/replace-labels\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Response replaceLabelsOnNode(\n      @QueryParam(\"labels\") Set\u003cString\u003e newNodeLabelsName,\n      @Context HttpServletRequest hsr, @PathParam(\"nodeId\") String nodeId)\n      throws Exception {\n    UserGroupInformation callerUGI \u003d getCallerUserGroupInformation(hsr, true);\n    initForWritableEndpoints(callerUGI, false);\n\n    NodeId nid \u003d ConverterUtils.toNodeIdWithDefaultPort(nodeId);\n    Map\u003cNodeId, Set\u003cString\u003e\u003e newLabelsForNode \u003d\n        new HashMap\u003cNodeId, Set\u003cString\u003e\u003e();\n    newLabelsForNode.put(nid, new HashSet\u003cString\u003e(newNodeLabelsName));\n\n    return replaceLabelsOnNode(newLabelsForNode, hsr,\n        \"/nodes/nodeid/replace-labels\");\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
      "extendedDetails": {}
    },
    "7f19e7a2549a098236d06b29b7076bb037533f05": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-3521. Support return structured NodeLabel objects in REST API (Sunil G via wangda)\n",
      "commitDate": "13/05/15 1:43 PM",
      "commitName": "7f19e7a2549a098236d06b29b7076bb037533f05",
      "commitAuthor": "Wangda Tan",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-3521. Support return structured NodeLabel objects in REST API (Sunil G via wangda)\n",
          "commitDate": "13/05/15 1:43 PM",
          "commitName": "7f19e7a2549a098236d06b29b7076bb037533f05",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "29/04/15 2:25 PM",
          "commitNameOld": "2e215484bd05cd5e3b7a81d3558c6879a05dd2d2",
          "commitAuthorOld": "tgraves",
          "daysBetweenCommits": 13.97,
          "commitsBetweenForRepo": 201,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,13 @@\n-  public Response replaceLabelsOnNode(NodeLabelsInfo newNodeLabelsInfo,\n+  public Response replaceLabelsOnNode(\n+      @QueryParam(\"labels\") Set\u003cString\u003e newNodeLabelsName,\n       @Context HttpServletRequest hsr, @PathParam(\"nodeId\") String nodeId)\n       throws Exception {\n     NodeId nid \u003d ConverterUtils.toNodeIdWithDefaultPort(nodeId);\n     Map\u003cNodeId, Set\u003cString\u003e\u003e newLabelsForNode \u003d\n         new HashMap\u003cNodeId, Set\u003cString\u003e\u003e();\n     newLabelsForNode.put(nid,\n-        new HashSet\u003cString\u003e(newNodeLabelsInfo.getNodeLabels()));\n+        new HashSet\u003cString\u003e(newNodeLabelsName));\n \n-    return replaceLabelsOnNode(newLabelsForNode, hsr, \"/nodes/nodeid/replace-labels\");\n+    return replaceLabelsOnNode(newLabelsForNode, hsr,\n+        \"/nodes/nodeid/replace-labels\");\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Response replaceLabelsOnNode(\n      @QueryParam(\"labels\") Set\u003cString\u003e newNodeLabelsName,\n      @Context HttpServletRequest hsr, @PathParam(\"nodeId\") String nodeId)\n      throws Exception {\n    NodeId nid \u003d ConverterUtils.toNodeIdWithDefaultPort(nodeId);\n    Map\u003cNodeId, Set\u003cString\u003e\u003e newLabelsForNode \u003d\n        new HashMap\u003cNodeId, Set\u003cString\u003e\u003e();\n    newLabelsForNode.put(nid,\n        new HashSet\u003cString\u003e(newNodeLabelsName));\n\n    return replaceLabelsOnNode(newLabelsForNode, hsr,\n        \"/nodes/nodeid/replace-labels\");\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
          "extendedDetails": {
            "oldValue": "[newNodeLabelsInfo-NodeLabelsInfo, hsr-HttpServletRequest(annotations-@Context), nodeId-String(annotations-@PathParam(\"nodeId\"))]",
            "newValue": "[newNodeLabelsName-Set\u003cString\u003e(annotations-@QueryParam(\"labels\")), hsr-HttpServletRequest(annotations-@Context), nodeId-String(annotations-@PathParam(\"nodeId\"))]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3521. Support return structured NodeLabel objects in REST API (Sunil G via wangda)\n",
          "commitDate": "13/05/15 1:43 PM",
          "commitName": "7f19e7a2549a098236d06b29b7076bb037533f05",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "29/04/15 2:25 PM",
          "commitNameOld": "2e215484bd05cd5e3b7a81d3558c6879a05dd2d2",
          "commitAuthorOld": "tgraves",
          "daysBetweenCommits": 13.97,
          "commitsBetweenForRepo": 201,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,13 @@\n-  public Response replaceLabelsOnNode(NodeLabelsInfo newNodeLabelsInfo,\n+  public Response replaceLabelsOnNode(\n+      @QueryParam(\"labels\") Set\u003cString\u003e newNodeLabelsName,\n       @Context HttpServletRequest hsr, @PathParam(\"nodeId\") String nodeId)\n       throws Exception {\n     NodeId nid \u003d ConverterUtils.toNodeIdWithDefaultPort(nodeId);\n     Map\u003cNodeId, Set\u003cString\u003e\u003e newLabelsForNode \u003d\n         new HashMap\u003cNodeId, Set\u003cString\u003e\u003e();\n     newLabelsForNode.put(nid,\n-        new HashSet\u003cString\u003e(newNodeLabelsInfo.getNodeLabels()));\n+        new HashSet\u003cString\u003e(newNodeLabelsName));\n \n-    return replaceLabelsOnNode(newLabelsForNode, hsr, \"/nodes/nodeid/replace-labels\");\n+    return replaceLabelsOnNode(newLabelsForNode, hsr,\n+        \"/nodes/nodeid/replace-labels\");\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Response replaceLabelsOnNode(\n      @QueryParam(\"labels\") Set\u003cString\u003e newNodeLabelsName,\n      @Context HttpServletRequest hsr, @PathParam(\"nodeId\") String nodeId)\n      throws Exception {\n    NodeId nid \u003d ConverterUtils.toNodeIdWithDefaultPort(nodeId);\n    Map\u003cNodeId, Set\u003cString\u003e\u003e newLabelsForNode \u003d\n        new HashMap\u003cNodeId, Set\u003cString\u003e\u003e();\n    newLabelsForNode.put(nid,\n        new HashSet\u003cString\u003e(newNodeLabelsName));\n\n    return replaceLabelsOnNode(newLabelsForNode, hsr,\n        \"/nodes/nodeid/replace-labels\");\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
          "extendedDetails": {}
        }
      ]
    },
    "db1b674b50ddecf2774f4092d677c412722bdcb1": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2740. Fix NodeLabelsManager to properly handle node label modifications when distributed node label configuration enabled. (Naganarasimha G R via wangda)\n",
      "commitDate": "27/04/15 4:24 PM",
      "commitName": "db1b674b50ddecf2774f4092d677c412722bdcb1",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "23/04/15 11:19 AM",
      "commitNameOld": "f5fe35e297ed4a00a1ba93d090207ef67cebcc9d",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 4.21,
      "commitsBetweenForRepo": 44,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,11 @@\n   public Response replaceLabelsOnNode(NodeLabelsInfo newNodeLabelsInfo,\n       @Context HttpServletRequest hsr, @PathParam(\"nodeId\") String nodeId)\n       throws Exception {\n-    init();\n-    \n-    UserGroupInformation callerUGI \u003d getCallerUserGroupInformation(hsr, true);\n-    if (callerUGI \u003d\u003d null) {\n-      String msg \u003d \"Unable to obtain user name, user not authenticated for\"\n-        + \" post to .../nodes/nodeid/replace-labels\";\n-      throw new AuthorizationException(msg);\n-    }\n-\n-    if (!rm.getRMContext().getNodeLabelManager().checkAccess(callerUGI)) {\n-      String msg \u003d \"User \" + callerUGI.getShortUserName() + \" not authorized\"\n-        + \" for post to .../nodes/nodeid/replace-labels\";\n-      throw new AuthorizationException(msg);\n-    }\n-    \n     NodeId nid \u003d ConverterUtils.toNodeIdWithDefaultPort(nodeId);\n-    \n-    Map\u003cNodeId, Set\u003cString\u003e\u003e newLabelsForNode \u003d new HashMap\u003cNodeId,\n-      Set\u003cString\u003e\u003e();\n-    \n-    newLabelsForNode.put(nid, new HashSet\u003cString\u003e(newNodeLabelsInfo.getNodeLabels()));\n-    \n-    rm.getRMContext().getNodeLabelManager().replaceLabelsOnNode(newLabelsForNode);\n-    \n-    return Response.status(Status.OK).build();\n+    Map\u003cNodeId, Set\u003cString\u003e\u003e newLabelsForNode \u003d\n+        new HashMap\u003cNodeId, Set\u003cString\u003e\u003e();\n+    newLabelsForNode.put(nid,\n+        new HashSet\u003cString\u003e(newNodeLabelsInfo.getNodeLabels()));\n \n+    return replaceLabelsOnNode(newLabelsForNode, hsr, \"/nodes/nodeid/replace-labels\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Response replaceLabelsOnNode(NodeLabelsInfo newNodeLabelsInfo,\n      @Context HttpServletRequest hsr, @PathParam(\"nodeId\") String nodeId)\n      throws Exception {\n    NodeId nid \u003d ConverterUtils.toNodeIdWithDefaultPort(nodeId);\n    Map\u003cNodeId, Set\u003cString\u003e\u003e newLabelsForNode \u003d\n        new HashMap\u003cNodeId, Set\u003cString\u003e\u003e();\n    newLabelsForNode.put(nid,\n        new HashSet\u003cString\u003e(newNodeLabelsInfo.getNodeLabels()));\n\n    return replaceLabelsOnNode(newLabelsForNode, hsr, \"/nodes/nodeid/replace-labels\");\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
      "extendedDetails": {}
    },
    "9a4e0d343e9e891c10ef6682e7b2231a59e69ade": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2505. Supported get/add/remove/change labels in RM REST API. Contributed by Craig Welch.\n",
      "commitDate": "07/11/14 8:35 PM",
      "commitName": "9a4e0d343e9e891c10ef6682e7b2231a59e69ade",
      "commitAuthor": "Zhijie Shen",
      "diff": "@@ -0,0 +1,30 @@\n+  public Response replaceLabelsOnNode(NodeLabelsInfo newNodeLabelsInfo,\n+      @Context HttpServletRequest hsr, @PathParam(\"nodeId\") String nodeId)\n+      throws Exception {\n+    init();\n+    \n+    UserGroupInformation callerUGI \u003d getCallerUserGroupInformation(hsr, true);\n+    if (callerUGI \u003d\u003d null) {\n+      String msg \u003d \"Unable to obtain user name, user not authenticated for\"\n+        + \" post to .../nodes/nodeid/replace-labels\";\n+      throw new AuthorizationException(msg);\n+    }\n+\n+    if (!rm.getRMContext().getNodeLabelManager().checkAccess(callerUGI)) {\n+      String msg \u003d \"User \" + callerUGI.getShortUserName() + \" not authorized\"\n+        + \" for post to .../nodes/nodeid/replace-labels\";\n+      throw new AuthorizationException(msg);\n+    }\n+    \n+    NodeId nid \u003d ConverterUtils.toNodeIdWithDefaultPort(nodeId);\n+    \n+    Map\u003cNodeId, Set\u003cString\u003e\u003e newLabelsForNode \u003d new HashMap\u003cNodeId,\n+      Set\u003cString\u003e\u003e();\n+    \n+    newLabelsForNode.put(nid, new HashSet\u003cString\u003e(newNodeLabelsInfo.getNodeLabels()));\n+    \n+    rm.getRMContext().getNodeLabelManager().replaceLabelsOnNode(newLabelsForNode);\n+    \n+    return Response.status(Status.OK).build();\n+\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Response replaceLabelsOnNode(NodeLabelsInfo newNodeLabelsInfo,\n      @Context HttpServletRequest hsr, @PathParam(\"nodeId\") String nodeId)\n      throws Exception {\n    init();\n    \n    UserGroupInformation callerUGI \u003d getCallerUserGroupInformation(hsr, true);\n    if (callerUGI \u003d\u003d null) {\n      String msg \u003d \"Unable to obtain user name, user not authenticated for\"\n        + \" post to .../nodes/nodeid/replace-labels\";\n      throw new AuthorizationException(msg);\n    }\n\n    if (!rm.getRMContext().getNodeLabelManager().checkAccess(callerUGI)) {\n      String msg \u003d \"User \" + callerUGI.getShortUserName() + \" not authorized\"\n        + \" for post to .../nodes/nodeid/replace-labels\";\n      throw new AuthorizationException(msg);\n    }\n    \n    NodeId nid \u003d ConverterUtils.toNodeIdWithDefaultPort(nodeId);\n    \n    Map\u003cNodeId, Set\u003cString\u003e\u003e newLabelsForNode \u003d new HashMap\u003cNodeId,\n      Set\u003cString\u003e\u003e();\n    \n    newLabelsForNode.put(nid, new HashSet\u003cString\u003e(newNodeLabelsInfo.getNodeLabels()));\n    \n    rm.getRMContext().getNodeLabelManager().replaceLabelsOnNode(newLabelsForNode);\n    \n    return Response.status(Status.OK).build();\n\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java"
    }
  }
}