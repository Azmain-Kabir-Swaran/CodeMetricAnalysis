{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSNamesystem.java",
  "functionName": "checkAccess",
  "functionId": "checkAccess___src-String__mode-FsAction",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
  "functionStartLine": 8398,
  "functionEndLine": 8424,
  "numCommitsSeen": 873,
  "timeTaken": 33601,
  "changeHistory": [
    "1824aee9da4056de0fb638906b2172e486bbebe7",
    "4b95c242eca540455a4d5d0899aaf73b6064b5ea",
    "5527d79adb9b1e2f2779c283f81d6a3d5447babc",
    "f600fbb6c4987c69292faea6b5abf022bb213ffd",
    "84a1321f6aa0af6895564a7c47f8f264656f0294",
    "ff0b99eafeda035ebe0dc82cfe689808047a8893",
    "9d175853b0170683ad5f21d9bcdeaac49fe89e04",
    "869393643de23dcb010cc33091c8eb398de0fd6c",
    "03dea65e0b17ca2f9460bb6110f6ab3a321b8bf2",
    "5776a41da08af653206bb94d7c76c9c4dcce059a",
    "475c6b4978045d55d1ebcea69cc9a2f24355aca2"
  ],
  "changeHistoryShort": {
    "1824aee9da4056de0fb638906b2172e486bbebe7": "Ybodychange",
    "4b95c242eca540455a4d5d0899aaf73b6064b5ea": "Ybodychange",
    "5527d79adb9b1e2f2779c283f81d6a3d5447babc": "Ybodychange",
    "f600fbb6c4987c69292faea6b5abf022bb213ffd": "Ybodychange",
    "84a1321f6aa0af6895564a7c47f8f264656f0294": "Ybodychange",
    "ff0b99eafeda035ebe0dc82cfe689808047a8893": "Ybodychange",
    "9d175853b0170683ad5f21d9bcdeaac49fe89e04": "Ybodychange",
    "869393643de23dcb010cc33091c8eb398de0fd6c": "Ybodychange",
    "03dea65e0b17ca2f9460bb6110f6ab3a321b8bf2": "Ybodychange",
    "5776a41da08af653206bb94d7c76c9c4dcce059a": "Ybodychange",
    "475c6b4978045d55d1ebcea69cc9a2f24355aca2": "Ymultichange(Yexceptionschange,Ybodychange)"
  },
  "changeHistoryDetails": {
    "1824aee9da4056de0fb638906b2172e486bbebe7": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-15217 Add more information to longest write/read lock held log\n\n",
      "commitDate": "18/04/20 1:52 PM",
      "commitName": "1824aee9da4056de0fb638906b2172e486bbebe7",
      "commitAuthor": "Toshihiro Suzuki",
      "commitDateOld": "25/03/20 10:28 AM",
      "commitNameOld": "a700803a18fb957d2799001a2ce1dcb70f75c080",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 24.14,
      "commitsBetweenForRepo": 78,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n   void checkAccess(String src, FsAction mode) throws IOException {\n     final String operationName \u003d \"checkAccess\";\n     checkOperation(OperationCategory.READ);\n     final FSPermissionChecker pc \u003d getPermissionChecker();\n     FSPermissionChecker.setOperationType(operationName);\n     try {\n       readLock();\n       try {\n         checkOperation(OperationCategory.READ);\n         final INodesInPath iip \u003d dir.resolvePath(pc, src, DirOp.READ);\n         src \u003d iip.getPath();\n         INode inode \u003d iip.getLastINode();\n         if (inode \u003d\u003d null) {\n           throw new FileNotFoundException(\"Path not found\");\n         }\n         if (isPermissionEnabled) {\n           dir.checkPathAccess(pc, iip, mode);\n         }\n       } finally {\n-        readUnlock(operationName);\n+        readUnlock(operationName, getLockReportInfoSupplier(src));\n       }\n     } catch (AccessControlException e) {\n       logAuditEvent(false, operationName, src);\n       throw e;\n     }\n     logAuditEvent(true, operationName, src);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void checkAccess(String src, FsAction mode) throws IOException {\n    final String operationName \u003d \"checkAccess\";\n    checkOperation(OperationCategory.READ);\n    final FSPermissionChecker pc \u003d getPermissionChecker();\n    FSPermissionChecker.setOperationType(operationName);\n    try {\n      readLock();\n      try {\n        checkOperation(OperationCategory.READ);\n        final INodesInPath iip \u003d dir.resolvePath(pc, src, DirOp.READ);\n        src \u003d iip.getPath();\n        INode inode \u003d iip.getLastINode();\n        if (inode \u003d\u003d null) {\n          throw new FileNotFoundException(\"Path not found\");\n        }\n        if (isPermissionEnabled) {\n          dir.checkPathAccess(pc, iip, mode);\n        }\n      } finally {\n        readUnlock(operationName, getLockReportInfoSupplier(src));\n      }\n    } catch (AccessControlException e) {\n      logAuditEvent(false, operationName, src);\n      throw e;\n    }\n    logAuditEvent(true, operationName, src);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "4b95c242eca540455a4d5d0899aaf73b6064b5ea": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14743. Enhance INodeAttributeProvider/ AccessControlEnforcer Interface in HDFS to support Authorization of mkdir, rm, rmdir, copy, move etc... (#1829)\n\nReviewed-by: Xiaoyu Yao \u003cxyao@apache.org\u003e",
      "commitDate": "13/03/20 11:29 AM",
      "commitName": "4b95c242eca540455a4d5d0899aaf73b6064b5ea",
      "commitAuthor": "Wei-Chiu Chuang",
      "commitDateOld": "27/02/20 8:49 AM",
      "commitNameOld": "cd2c6b1aac470991b9b90339ce2721ba179e7c48",
      "commitAuthorOld": "Ayush Saxena",
      "daysBetweenCommits": 15.07,
      "commitsBetweenForRepo": 51,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,27 @@\n   void checkAccess(String src, FsAction mode) throws IOException {\n     final String operationName \u003d \"checkAccess\";\n     checkOperation(OperationCategory.READ);\n     final FSPermissionChecker pc \u003d getPermissionChecker();\n+    FSPermissionChecker.setOperationType(operationName);\n     try {\n       readLock();\n       try {\n         checkOperation(OperationCategory.READ);\n         final INodesInPath iip \u003d dir.resolvePath(pc, src, DirOp.READ);\n         src \u003d iip.getPath();\n         INode inode \u003d iip.getLastINode();\n         if (inode \u003d\u003d null) {\n           throw new FileNotFoundException(\"Path not found\");\n         }\n         if (isPermissionEnabled) {\n           dir.checkPathAccess(pc, iip, mode);\n         }\n       } finally {\n         readUnlock(operationName);\n       }\n     } catch (AccessControlException e) {\n       logAuditEvent(false, operationName, src);\n       throw e;\n     }\n     logAuditEvent(true, operationName, src);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void checkAccess(String src, FsAction mode) throws IOException {\n    final String operationName \u003d \"checkAccess\";\n    checkOperation(OperationCategory.READ);\n    final FSPermissionChecker pc \u003d getPermissionChecker();\n    FSPermissionChecker.setOperationType(operationName);\n    try {\n      readLock();\n      try {\n        checkOperation(OperationCategory.READ);\n        final INodesInPath iip \u003d dir.resolvePath(pc, src, DirOp.READ);\n        src \u003d iip.getPath();\n        INode inode \u003d iip.getLastINode();\n        if (inode \u003d\u003d null) {\n          throw new FileNotFoundException(\"Path not found\");\n        }\n        if (isPermissionEnabled) {\n          dir.checkPathAccess(pc, iip, mode);\n        }\n      } finally {\n        readUnlock(operationName);\n      }\n    } catch (AccessControlException e) {\n      logAuditEvent(false, operationName, src);\n      throw e;\n    }\n    logAuditEvent(true, operationName, src);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "5527d79adb9b1e2f2779c283f81d6a3d5447babc": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14810. Review FSNameSystem editlog sync. Contributed by Xiaoqiao He.\n",
      "commitDate": "17/10/19 9:26 AM",
      "commitName": "5527d79adb9b1e2f2779c283f81d6a3d5447babc",
      "commitAuthor": "Ayush Saxena",
      "commitDateOld": "06/09/19 5:42 AM",
      "commitNameOld": "d98c54816d21d59c4d877ae4b1917b22268ffcef",
      "commitAuthorOld": "Surendra Singh Lilhore",
      "daysBetweenCommits": 41.16,
      "commitsBetweenForRepo": 321,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,26 @@\n   void checkAccess(String src, FsAction mode) throws IOException {\n     final String operationName \u003d \"checkAccess\";\n     checkOperation(OperationCategory.READ);\n     final FSPermissionChecker pc \u003d getPermissionChecker();\n     try {\n       readLock();\n       try {\n         checkOperation(OperationCategory.READ);\n         final INodesInPath iip \u003d dir.resolvePath(pc, src, DirOp.READ);\n         src \u003d iip.getPath();\n         INode inode \u003d iip.getLastINode();\n         if (inode \u003d\u003d null) {\n           throw new FileNotFoundException(\"Path not found\");\n         }\n         if (isPermissionEnabled) {\n           dir.checkPathAccess(pc, iip, mode);\n         }\n       } finally {\n         readUnlock(operationName);\n       }\n     } catch (AccessControlException e) {\n       logAuditEvent(false, operationName, src);\n       throw e;\n     }\n+    logAuditEvent(true, operationName, src);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void checkAccess(String src, FsAction mode) throws IOException {\n    final String operationName \u003d \"checkAccess\";\n    checkOperation(OperationCategory.READ);\n    final FSPermissionChecker pc \u003d getPermissionChecker();\n    try {\n      readLock();\n      try {\n        checkOperation(OperationCategory.READ);\n        final INodesInPath iip \u003d dir.resolvePath(pc, src, DirOp.READ);\n        src \u003d iip.getPath();\n        INode inode \u003d iip.getLastINode();\n        if (inode \u003d\u003d null) {\n          throw new FileNotFoundException(\"Path not found\");\n        }\n        if (isPermissionEnabled) {\n          dir.checkPathAccess(pc, iip, mode);\n        }\n      } finally {\n        readUnlock(operationName);\n      }\n    } catch (AccessControlException e) {\n      logAuditEvent(false, operationName, src);\n      throw e;\n    }\n    logAuditEvent(true, operationName, src);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "f600fbb6c4987c69292faea6b5abf022bb213ffd": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11246. FSNameSystem#logAuditEvent should be called outside the read or write locks. Contributed by He Xiaoqiao, Kuhu Shukla.\n\nSigned-off-by: Wei-Chiu Chuang \u003cweichiu@apache.org\u003e\nCo-authored-by: Kuhu Shukla \u003ckshukla@apache.org\u003e\n",
      "commitDate": "29/08/19 10:10 AM",
      "commitName": "f600fbb6c4987c69292faea6b5abf022bb213ffd",
      "commitAuthor": "He Xiaoqiao",
      "commitDateOld": "27/08/19 3:26 PM",
      "commitNameOld": "dde9399b37bffb77da17c025f0b9b673d7088bc6",
      "commitAuthorOld": "He Xiaoqiao",
      "daysBetweenCommits": 1.78,
      "commitsBetweenForRepo": 27,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,25 @@\n   void checkAccess(String src, FsAction mode) throws IOException {\n     final String operationName \u003d \"checkAccess\";\n     checkOperation(OperationCategory.READ);\n     final FSPermissionChecker pc \u003d getPermissionChecker();\n-    readLock();\n     try {\n-      checkOperation(OperationCategory.READ);\n-      final INodesInPath iip \u003d dir.resolvePath(pc, src, DirOp.READ);\n-      src \u003d iip.getPath();\n-      INode inode \u003d iip.getLastINode();\n-      if (inode \u003d\u003d null) {\n-        throw new FileNotFoundException(\"Path not found\");\n-      }\n-      if (isPermissionEnabled) {\n-        dir.checkPathAccess(pc, iip, mode);\n+      readLock();\n+      try {\n+        checkOperation(OperationCategory.READ);\n+        final INodesInPath iip \u003d dir.resolvePath(pc, src, DirOp.READ);\n+        src \u003d iip.getPath();\n+        INode inode \u003d iip.getLastINode();\n+        if (inode \u003d\u003d null) {\n+          throw new FileNotFoundException(\"Path not found\");\n+        }\n+        if (isPermissionEnabled) {\n+          dir.checkPathAccess(pc, iip, mode);\n+        }\n+      } finally {\n+        readUnlock(operationName);\n       }\n     } catch (AccessControlException e) {\n       logAuditEvent(false, operationName, src);\n       throw e;\n-    } finally {\n-      readUnlock(operationName);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void checkAccess(String src, FsAction mode) throws IOException {\n    final String operationName \u003d \"checkAccess\";\n    checkOperation(OperationCategory.READ);\n    final FSPermissionChecker pc \u003d getPermissionChecker();\n    try {\n      readLock();\n      try {\n        checkOperation(OperationCategory.READ);\n        final INodesInPath iip \u003d dir.resolvePath(pc, src, DirOp.READ);\n        src \u003d iip.getPath();\n        INode inode \u003d iip.getLastINode();\n        if (inode \u003d\u003d null) {\n          throw new FileNotFoundException(\"Path not found\");\n        }\n        if (isPermissionEnabled) {\n          dir.checkPathAccess(pc, iip, mode);\n        }\n      } finally {\n        readUnlock(operationName);\n      }\n    } catch (AccessControlException e) {\n      logAuditEvent(false, operationName, src);\n      throw e;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "84a1321f6aa0af6895564a7c47f8f264656f0294": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13136. Avoid taking FSN lock while doing group member lookup for FSD permission check. Contributed by Xiaoyu Yao.\n",
      "commitDate": "22/02/18 11:32 AM",
      "commitName": "84a1321f6aa0af6895564a7c47f8f264656f0294",
      "commitAuthor": "Xiaoyu Yao",
      "commitDateOld": "15/02/18 1:32 PM",
      "commitNameOld": "47473952e56b0380147d42f4110ad03c2276c961",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 6.92,
      "commitsBetweenForRepo": 36,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   void checkAccess(String src, FsAction mode) throws IOException {\n     final String operationName \u003d \"checkAccess\";\n     checkOperation(OperationCategory.READ);\n-    FSPermissionChecker pc \u003d getPermissionChecker();\n+    final FSPermissionChecker pc \u003d getPermissionChecker();\n     readLock();\n     try {\n       checkOperation(OperationCategory.READ);\n       final INodesInPath iip \u003d dir.resolvePath(pc, src, DirOp.READ);\n       src \u003d iip.getPath();\n       INode inode \u003d iip.getLastINode();\n       if (inode \u003d\u003d null) {\n         throw new FileNotFoundException(\"Path not found\");\n       }\n       if (isPermissionEnabled) {\n         dir.checkPathAccess(pc, iip, mode);\n       }\n     } catch (AccessControlException e) {\n       logAuditEvent(false, operationName, src);\n       throw e;\n     } finally {\n       readUnlock(operationName);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void checkAccess(String src, FsAction mode) throws IOException {\n    final String operationName \u003d \"checkAccess\";\n    checkOperation(OperationCategory.READ);\n    final FSPermissionChecker pc \u003d getPermissionChecker();\n    readLock();\n    try {\n      checkOperation(OperationCategory.READ);\n      final INodesInPath iip \u003d dir.resolvePath(pc, src, DirOp.READ);\n      src \u003d iip.getPath();\n      INode inode \u003d iip.getLastINode();\n      if (inode \u003d\u003d null) {\n        throw new FileNotFoundException(\"Path not found\");\n      }\n      if (isPermissionEnabled) {\n        dir.checkPathAccess(pc, iip, mode);\n      }\n    } catch (AccessControlException e) {\n      logAuditEvent(false, operationName, src);\n      throw e;\n    } finally {\n      readUnlock(operationName);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "ff0b99eafeda035ebe0dc82cfe689808047a8893": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10872. Add MutableRate metrics for FSNamesystemLock operations. Contributed by Erik Krogen.\n",
      "commitDate": "14/11/16 11:05 AM",
      "commitName": "ff0b99eafeda035ebe0dc82cfe689808047a8893",
      "commitAuthor": "Zhe Zhang",
      "commitDateOld": "08/11/16 6:17 PM",
      "commitNameOld": "ed0bebabaaf27cd730f7f8eb002d92c9c7db327d",
      "commitAuthorOld": "Brahma Reddy Battula",
      "daysBetweenCommits": 5.7,
      "commitsBetweenForRepo": 36,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,23 @@\n   void checkAccess(String src, FsAction mode) throws IOException {\n+    final String operationName \u003d \"checkAccess\";\n     checkOperation(OperationCategory.READ);\n     FSPermissionChecker pc \u003d getPermissionChecker();\n     readLock();\n     try {\n       checkOperation(OperationCategory.READ);\n       final INodesInPath iip \u003d dir.resolvePath(pc, src, DirOp.READ);\n       src \u003d iip.getPath();\n       INode inode \u003d iip.getLastINode();\n       if (inode \u003d\u003d null) {\n         throw new FileNotFoundException(\"Path not found\");\n       }\n       if (isPermissionEnabled) {\n         dir.checkPathAccess(pc, iip, mode);\n       }\n     } catch (AccessControlException e) {\n-      logAuditEvent(false, \"checkAccess\", src);\n+      logAuditEvent(false, operationName, src);\n       throw e;\n     } finally {\n-      readUnlock();\n+      readUnlock(operationName);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void checkAccess(String src, FsAction mode) throws IOException {\n    final String operationName \u003d \"checkAccess\";\n    checkOperation(OperationCategory.READ);\n    FSPermissionChecker pc \u003d getPermissionChecker();\n    readLock();\n    try {\n      checkOperation(OperationCategory.READ);\n      final INodesInPath iip \u003d dir.resolvePath(pc, src, DirOp.READ);\n      src \u003d iip.getPath();\n      INode inode \u003d iip.getLastINode();\n      if (inode \u003d\u003d null) {\n        throw new FileNotFoundException(\"Path not found\");\n      }\n      if (isPermissionEnabled) {\n        dir.checkPathAccess(pc, iip, mode);\n      }\n    } catch (AccessControlException e) {\n      logAuditEvent(false, operationName, src);\n      throw e;\n    } finally {\n      readUnlock(operationName);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "9d175853b0170683ad5f21d9bcdeaac49fe89e04": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10997. Reduce number of path resolving methods. Contributed by Daryn Sharp.\n",
      "commitDate": "24/10/16 3:14 PM",
      "commitName": "9d175853b0170683ad5f21d9bcdeaac49fe89e04",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "17/10/16 5:45 PM",
      "commitNameOld": "b61fb267b92b2736920b4bd0c673d31e7632ebb9",
      "commitAuthorOld": "Ming Ma",
      "daysBetweenCommits": 6.9,
      "commitsBetweenForRepo": 44,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n   void checkAccess(String src, FsAction mode) throws IOException {\n     checkOperation(OperationCategory.READ);\n     FSPermissionChecker pc \u003d getPermissionChecker();\n     readLock();\n     try {\n       checkOperation(OperationCategory.READ);\n-      final INodesInPath iip \u003d dir.resolvePath(pc, src);\n+      final INodesInPath iip \u003d dir.resolvePath(pc, src, DirOp.READ);\n       src \u003d iip.getPath();\n       INode inode \u003d iip.getLastINode();\n       if (inode \u003d\u003d null) {\n         throw new FileNotFoundException(\"Path not found\");\n       }\n       if (isPermissionEnabled) {\n         dir.checkPathAccess(pc, iip, mode);\n       }\n     } catch (AccessControlException e) {\n       logAuditEvent(false, \"checkAccess\", src);\n       throw e;\n     } finally {\n       readUnlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void checkAccess(String src, FsAction mode) throws IOException {\n    checkOperation(OperationCategory.READ);\n    FSPermissionChecker pc \u003d getPermissionChecker();\n    readLock();\n    try {\n      checkOperation(OperationCategory.READ);\n      final INodesInPath iip \u003d dir.resolvePath(pc, src, DirOp.READ);\n      src \u003d iip.getPath();\n      INode inode \u003d iip.getLastINode();\n      if (inode \u003d\u003d null) {\n        throw new FileNotFoundException(\"Path not found\");\n      }\n      if (isPermissionEnabled) {\n        dir.checkPathAccess(pc, iip, mode);\n      }\n    } catch (AccessControlException e) {\n      logAuditEvent(false, \"checkAccess\", src);\n      throw e;\n    } finally {\n      readUnlock();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "869393643de23dcb010cc33091c8eb398de0fd6c": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10745. Directly resolve paths into INodesInPath. Contributed by Daryn Sharp.\n",
      "commitDate": "17/08/16 1:53 PM",
      "commitName": "869393643de23dcb010cc33091c8eb398de0fd6c",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "15/08/16 3:28 PM",
      "commitNameOld": "864f878d5912c82f3204f1582cfb7eb7c9f1a1da",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 1.93,
      "commitsBetweenForRepo": 22,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n   void checkAccess(String src, FsAction mode) throws IOException {\n     checkOperation(OperationCategory.READ);\n+    FSPermissionChecker pc \u003d getPermissionChecker();\n     readLock();\n     try {\n       checkOperation(OperationCategory.READ);\n-      src \u003d FSDirectory.resolvePath(src, dir);\n-      final INodesInPath iip \u003d dir.getINodesInPath(src, true);\n+      final INodesInPath iip \u003d dir.resolvePath(pc, src);\n+      src \u003d iip.getPath();\n       INode inode \u003d iip.getLastINode();\n       if (inode \u003d\u003d null) {\n         throw new FileNotFoundException(\"Path not found\");\n       }\n       if (isPermissionEnabled) {\n-        FSPermissionChecker pc \u003d getPermissionChecker();\n         dir.checkPathAccess(pc, iip, mode);\n       }\n     } catch (AccessControlException e) {\n       logAuditEvent(false, \"checkAccess\", src);\n       throw e;\n     } finally {\n       readUnlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void checkAccess(String src, FsAction mode) throws IOException {\n    checkOperation(OperationCategory.READ);\n    FSPermissionChecker pc \u003d getPermissionChecker();\n    readLock();\n    try {\n      checkOperation(OperationCategory.READ);\n      final INodesInPath iip \u003d dir.resolvePath(pc, src);\n      src \u003d iip.getPath();\n      INode inode \u003d iip.getLastINode();\n      if (inode \u003d\u003d null) {\n        throw new FileNotFoundException(\"Path not found\");\n      }\n      if (isPermissionEnabled) {\n        dir.checkPathAccess(pc, iip, mode);\n      }\n    } catch (AccessControlException e) {\n      logAuditEvent(false, \"checkAccess\", src);\n      throw e;\n    } finally {\n      readUnlock();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "03dea65e0b17ca2f9460bb6110f6ab3a321b8bf2": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10744. Internally optimize path component resolution. Contributed by Daryn Sharp.\n",
      "commitDate": "15/08/16 2:45 PM",
      "commitName": "03dea65e0b17ca2f9460bb6110f6ab3a321b8bf2",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "03/08/16 11:12 AM",
      "commitNameOld": "22ef5286bc8511ddee9594b7cecc598bf41a850b",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 12.15,
      "commitsBetweenForRepo": 86,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,22 @@\n   void checkAccess(String src, FsAction mode) throws IOException {\n     checkOperation(OperationCategory.READ);\n-    byte[][] pathComponents \u003d FSDirectory.getPathComponentsForReservedPath(src);\n     readLock();\n     try {\n       checkOperation(OperationCategory.READ);\n-      src \u003d FSDirectory.resolvePath(src, pathComponents, dir);\n+      src \u003d FSDirectory.resolvePath(src, dir);\n       final INodesInPath iip \u003d dir.getINodesInPath(src, true);\n       INode inode \u003d iip.getLastINode();\n       if (inode \u003d\u003d null) {\n         throw new FileNotFoundException(\"Path not found\");\n       }\n       if (isPermissionEnabled) {\n         FSPermissionChecker pc \u003d getPermissionChecker();\n         dir.checkPathAccess(pc, iip, mode);\n       }\n     } catch (AccessControlException e) {\n       logAuditEvent(false, \"checkAccess\", src);\n       throw e;\n     } finally {\n       readUnlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void checkAccess(String src, FsAction mode) throws IOException {\n    checkOperation(OperationCategory.READ);\n    readLock();\n    try {\n      checkOperation(OperationCategory.READ);\n      src \u003d FSDirectory.resolvePath(src, dir);\n      final INodesInPath iip \u003d dir.getINodesInPath(src, true);\n      INode inode \u003d iip.getLastINode();\n      if (inode \u003d\u003d null) {\n        throw new FileNotFoundException(\"Path not found\");\n      }\n      if (isPermissionEnabled) {\n        FSPermissionChecker pc \u003d getPermissionChecker();\n        dir.checkPathAccess(pc, iip, mode);\n      }\n    } catch (AccessControlException e) {\n      logAuditEvent(false, \"checkAccess\", src);\n      throw e;\n    } finally {\n      readUnlock();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "5776a41da08af653206bb94d7c76c9c4dcce059a": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7498. Simplify the logic in INodesInPath. Contributed by Jing Zhao.\n",
      "commitDate": "09/12/14 11:37 AM",
      "commitName": "5776a41da08af653206bb94d7c76c9c4dcce059a",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "08/12/14 11:52 AM",
      "commitNameOld": "6c5bbd7a42d1e8b4416fd8870fd60c67867b35c9",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 0.99,
      "commitsBetweenForRepo": 14,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   void checkAccess(String src, FsAction mode) throws IOException {\n     checkOperation(OperationCategory.READ);\n     byte[][] pathComponents \u003d FSDirectory.getPathComponentsForReservedPath(src);\n     readLock();\n     try {\n       checkOperation(OperationCategory.READ);\n       src \u003d FSDirectory.resolvePath(src, pathComponents, dir);\n       final INodesInPath iip \u003d dir.getINodesInPath(src, true);\n-      INode[] inodes \u003d iip.getINodes();\n-      if (inodes[inodes.length - 1] \u003d\u003d null) {\n+      INode inode \u003d iip.getLastINode();\n+      if (inode \u003d\u003d null) {\n         throw new FileNotFoundException(\"Path not found\");\n       }\n       if (isPermissionEnabled) {\n         FSPermissionChecker pc \u003d getPermissionChecker();\n         dir.checkPathAccess(pc, iip, mode);\n       }\n     } catch (AccessControlException e) {\n       logAuditEvent(false, \"checkAccess\", src);\n       throw e;\n     } finally {\n       readUnlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void checkAccess(String src, FsAction mode) throws IOException {\n    checkOperation(OperationCategory.READ);\n    byte[][] pathComponents \u003d FSDirectory.getPathComponentsForReservedPath(src);\n    readLock();\n    try {\n      checkOperation(OperationCategory.READ);\n      src \u003d FSDirectory.resolvePath(src, pathComponents, dir);\n      final INodesInPath iip \u003d dir.getINodesInPath(src, true);\n      INode inode \u003d iip.getLastINode();\n      if (inode \u003d\u003d null) {\n        throw new FileNotFoundException(\"Path not found\");\n      }\n      if (isPermissionEnabled) {\n        FSPermissionChecker pc \u003d getPermissionChecker();\n        dir.checkPathAccess(pc, iip, mode);\n      }\n    } catch (AccessControlException e) {\n      logAuditEvent(false, \"checkAccess\", src);\n      throw e;\n    } finally {\n      readUnlock();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "475c6b4978045d55d1ebcea69cc9a2f24355aca2": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "HDFS-7474. Avoid resolving path in FSPermissionChecker. Contributed by Jing Zhao.\n",
      "commitDate": "05/12/14 2:17 PM",
      "commitName": "475c6b4978045d55d1ebcea69cc9a2f24355aca2",
      "commitAuthor": "Jing Zhao",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "HDFS-7474. Avoid resolving path in FSPermissionChecker. Contributed by Jing Zhao.\n",
          "commitDate": "05/12/14 2:17 PM",
          "commitName": "475c6b4978045d55d1ebcea69cc9a2f24355aca2",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "05/12/14 10:55 AM",
          "commitNameOld": "6a5596e3b4443462fc86f800b3c2eb839d44c3bd",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 0.14,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,23 @@\n-  void checkAccess(String src, FsAction mode) throws AccessControlException,\n-      FileNotFoundException, UnresolvedLinkException, IOException {\n+  void checkAccess(String src, FsAction mode) throws IOException {\n     checkOperation(OperationCategory.READ);\n     byte[][] pathComponents \u003d FSDirectory.getPathComponentsForReservedPath(src);\n     readLock();\n     try {\n       checkOperation(OperationCategory.READ);\n       src \u003d FSDirectory.resolvePath(src, pathComponents, dir);\n-      if (dir.getINode(src) \u003d\u003d null) {\n+      final INodesInPath iip \u003d dir.getINodesInPath(src, true);\n+      INode[] inodes \u003d iip.getINodes();\n+      if (inodes[inodes.length - 1] \u003d\u003d null) {\n         throw new FileNotFoundException(\"Path not found\");\n       }\n       if (isPermissionEnabled) {\n         FSPermissionChecker pc \u003d getPermissionChecker();\n-        checkPathAccess(pc, src, mode);\n+        dir.checkPathAccess(pc, iip, mode);\n       }\n     } catch (AccessControlException e) {\n       logAuditEvent(false, \"checkAccess\", src);\n       throw e;\n     } finally {\n       readUnlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void checkAccess(String src, FsAction mode) throws IOException {\n    checkOperation(OperationCategory.READ);\n    byte[][] pathComponents \u003d FSDirectory.getPathComponentsForReservedPath(src);\n    readLock();\n    try {\n      checkOperation(OperationCategory.READ);\n      src \u003d FSDirectory.resolvePath(src, pathComponents, dir);\n      final INodesInPath iip \u003d dir.getINodesInPath(src, true);\n      INode[] inodes \u003d iip.getINodes();\n      if (inodes[inodes.length - 1] \u003d\u003d null) {\n        throw new FileNotFoundException(\"Path not found\");\n      }\n      if (isPermissionEnabled) {\n        FSPermissionChecker pc \u003d getPermissionChecker();\n        dir.checkPathAccess(pc, iip, mode);\n      }\n    } catch (AccessControlException e) {\n      logAuditEvent(false, \"checkAccess\", src);\n      throw e;\n    } finally {\n      readUnlock();\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
          "extendedDetails": {
            "oldValue": "[AccessControlException, FileNotFoundException, UnresolvedLinkException, IOException]",
            "newValue": "[IOException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-7474. Avoid resolving path in FSPermissionChecker. Contributed by Jing Zhao.\n",
          "commitDate": "05/12/14 2:17 PM",
          "commitName": "475c6b4978045d55d1ebcea69cc9a2f24355aca2",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "05/12/14 10:55 AM",
          "commitNameOld": "6a5596e3b4443462fc86f800b3c2eb839d44c3bd",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 0.14,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,23 @@\n-  void checkAccess(String src, FsAction mode) throws AccessControlException,\n-      FileNotFoundException, UnresolvedLinkException, IOException {\n+  void checkAccess(String src, FsAction mode) throws IOException {\n     checkOperation(OperationCategory.READ);\n     byte[][] pathComponents \u003d FSDirectory.getPathComponentsForReservedPath(src);\n     readLock();\n     try {\n       checkOperation(OperationCategory.READ);\n       src \u003d FSDirectory.resolvePath(src, pathComponents, dir);\n-      if (dir.getINode(src) \u003d\u003d null) {\n+      final INodesInPath iip \u003d dir.getINodesInPath(src, true);\n+      INode[] inodes \u003d iip.getINodes();\n+      if (inodes[inodes.length - 1] \u003d\u003d null) {\n         throw new FileNotFoundException(\"Path not found\");\n       }\n       if (isPermissionEnabled) {\n         FSPermissionChecker pc \u003d getPermissionChecker();\n-        checkPathAccess(pc, src, mode);\n+        dir.checkPathAccess(pc, iip, mode);\n       }\n     } catch (AccessControlException e) {\n       logAuditEvent(false, \"checkAccess\", src);\n       throw e;\n     } finally {\n       readUnlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void checkAccess(String src, FsAction mode) throws IOException {\n    checkOperation(OperationCategory.READ);\n    byte[][] pathComponents \u003d FSDirectory.getPathComponentsForReservedPath(src);\n    readLock();\n    try {\n      checkOperation(OperationCategory.READ);\n      src \u003d FSDirectory.resolvePath(src, pathComponents, dir);\n      final INodesInPath iip \u003d dir.getINodesInPath(src, true);\n      INode[] inodes \u003d iip.getINodes();\n      if (inodes[inodes.length - 1] \u003d\u003d null) {\n        throw new FileNotFoundException(\"Path not found\");\n      }\n      if (isPermissionEnabled) {\n        FSPermissionChecker pc \u003d getPermissionChecker();\n        dir.checkPathAccess(pc, iip, mode);\n      }\n    } catch (AccessControlException e) {\n      logAuditEvent(false, \"checkAccess\", src);\n      throw e;\n    } finally {\n      readUnlock();\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
          "extendedDetails": {}
        }
      ]
    }
  }
}