{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BlockManager.java",
  "functionName": "processIncrementalBlockReport",
  "functionId": "processIncrementalBlockReport___node-DatanodeDescriptor(modifiers-final)__srdb-StorageReceivedDeletedBlocks(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
  "functionStartLine": 4281,
  "functionEndLine": 4327,
  "numCommitsSeen": 477,
  "timeTaken": 7982,
  "changeHistory": [
    "f741476146574550a1a208d58ef8be76639e5ddc"
  ],
  "changeHistoryShort": {
    "f741476146574550a1a208d58ef8be76639e5ddc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f741476146574550a1a208d58ef8be76639e5ddc": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-9198. Coalesce IBR processing in the NN. (Daryn Sharp via umamahesh)\n",
      "commitDate": "16/12/15 6:16 PM",
      "commitName": "f741476146574550a1a208d58ef8be76639e5ddc",
      "commitAuthor": "Uma Mahesh",
      "diff": "@@ -0,0 +1,47 @@\n+  private void processIncrementalBlockReport(final DatanodeDescriptor node,\n+      final StorageReceivedDeletedBlocks srdb) throws IOException {\n+    DatanodeStorageInfo storageInfo \u003d\n+        node.getStorageInfo(srdb.getStorage().getStorageID());\n+    if (storageInfo \u003d\u003d null) {\n+      // The DataNode is reporting an unknown storage. Usually the NN learns\n+      // about new storages from heartbeats but during NN restart we may\n+      // receive a block report or incremental report before the heartbeat.\n+      // We must handle this for protocol compatibility. This issue was\n+      // uncovered by HDFS-6094.\n+      storageInfo \u003d node.updateStorage(srdb.getStorage());\n+    }\n+\n+    int received \u003d 0;\n+    int deleted \u003d 0;\n+    int receiving \u003d 0;\n+\n+    for (ReceivedDeletedBlockInfo rdbi : srdb.getBlocks()) {\n+      switch (rdbi.getStatus()) {\n+      case DELETED_BLOCK:\n+        removeStoredBlock(storageInfo, rdbi.getBlock(), node);\n+        deleted++;\n+        break;\n+      case RECEIVED_BLOCK:\n+        addBlock(storageInfo, rdbi.getBlock(), rdbi.getDelHints());\n+        received++;\n+        break;\n+      case RECEIVING_BLOCK:\n+        receiving++;\n+        processAndHandleReportedBlock(storageInfo, rdbi.getBlock(),\n+                                      ReplicaState.RBW, null);\n+        break;\n+      default:\n+        String msg \u003d \n+          \"Unknown block status code reported by \" + node +\n+          \": \" + rdbi;\n+        blockLog.warn(msg);\n+        assert false : msg; // if assertions are enabled, throw.\n+        break;\n+      }\n+      blockLog.debug(\"BLOCK* block {}: {} is received from {}\",\n+          rdbi.getStatus(), rdbi.getBlock(), node);\n+    }\n+    blockLog.debug(\"*BLOCK* NameNode.processIncrementalBlockReport: from \"\n+            + \"{} receiving: {}, received: {}, deleted: {}\", node, receiving,\n+        received, deleted);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void processIncrementalBlockReport(final DatanodeDescriptor node,\n      final StorageReceivedDeletedBlocks srdb) throws IOException {\n    DatanodeStorageInfo storageInfo \u003d\n        node.getStorageInfo(srdb.getStorage().getStorageID());\n    if (storageInfo \u003d\u003d null) {\n      // The DataNode is reporting an unknown storage. Usually the NN learns\n      // about new storages from heartbeats but during NN restart we may\n      // receive a block report or incremental report before the heartbeat.\n      // We must handle this for protocol compatibility. This issue was\n      // uncovered by HDFS-6094.\n      storageInfo \u003d node.updateStorage(srdb.getStorage());\n    }\n\n    int received \u003d 0;\n    int deleted \u003d 0;\n    int receiving \u003d 0;\n\n    for (ReceivedDeletedBlockInfo rdbi : srdb.getBlocks()) {\n      switch (rdbi.getStatus()) {\n      case DELETED_BLOCK:\n        removeStoredBlock(storageInfo, rdbi.getBlock(), node);\n        deleted++;\n        break;\n      case RECEIVED_BLOCK:\n        addBlock(storageInfo, rdbi.getBlock(), rdbi.getDelHints());\n        received++;\n        break;\n      case RECEIVING_BLOCK:\n        receiving++;\n        processAndHandleReportedBlock(storageInfo, rdbi.getBlock(),\n                                      ReplicaState.RBW, null);\n        break;\n      default:\n        String msg \u003d \n          \"Unknown block status code reported by \" + node +\n          \": \" + rdbi;\n        blockLog.warn(msg);\n        assert false : msg; // if assertions are enabled, throw.\n        break;\n      }\n      blockLog.debug(\"BLOCK* block {}: {} is received from {}\",\n          rdbi.getStatus(), rdbi.getBlock(), node);\n    }\n    blockLog.debug(\"*BLOCK* NameNode.processIncrementalBlockReport: from \"\n            + \"{} receiving: {}, received: {}, deleted: {}\", node, receiving,\n        received, deleted);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java"
    }
  }
}