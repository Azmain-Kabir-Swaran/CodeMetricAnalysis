{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FileUtil.java",
  "functionName": "copy",
  "functionId": "copy___srcFS-FileSystem__srcs-Path[]__dstFS-FileSystem__dst-Path__deleteSource-boolean__overwrite-boolean__conf-Configuration",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileUtil.java",
  "functionStartLine": 343,
  "functionEndLine": 381,
  "numCommitsSeen": 68,
  "timeTaken": 2628,
  "changeHistory": [
    "fb8932a727f757b2e9c1c61a18145878d0eb77bd",
    "5af572b6443715b7a741296c1bd520a1840f9a7c",
    "e408d9904b1105b7eebd952cba0d61efe8802b22",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "7578282edce0eba3f24c96355c944c02156ece79",
    "0485fe23ba76f7d96a198aed00f392fd571124bc",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36"
  ],
  "changeHistoryShort": {
    "fb8932a727f757b2e9c1c61a18145878d0eb77bd": "Ybodychange",
    "5af572b6443715b7a741296c1bd520a1840f9a7c": "Ybodychange",
    "e408d9904b1105b7eebd952cba0d61efe8802b22": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "7578282edce0eba3f24c96355c944c02156ece79": "Ybodychange",
    "0485fe23ba76f7d96a198aed00f392fd571124bc": "Ybodychange",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": "Yintroduced"
  },
  "changeHistoryDetails": {
    "fb8932a727f757b2e9c1c61a18145878d0eb77bd": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16029. Consecutive StringBuilder.append can be reused. Contributed by Ayush Saxena.\n",
      "commitDate": "11/01/19 10:54 AM",
      "commitName": "fb8932a727f757b2e9c1c61a18145878d0eb77bd",
      "commitAuthor": "Giovanni Matteo Fumarola",
      "commitDateOld": "27/12/18 10:38 PM",
      "commitNameOld": "57198bc51122a36db8cb4788fcb7b55edc788b3b",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 14.51,
      "commitsBetweenForRepo": 72,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,39 +1,39 @@\n   public static boolean copy(FileSystem srcFS, Path[] srcs,\n                              FileSystem dstFS, Path dst,\n                              boolean deleteSource,\n                              boolean overwrite, Configuration conf)\n                              throws IOException {\n     boolean gotException \u003d false;\n     boolean returnVal \u003d true;\n     StringBuilder exceptions \u003d new StringBuilder();\n \n     if (srcs.length \u003d\u003d 1)\n       return copy(srcFS, srcs[0], dstFS, dst, deleteSource, overwrite, conf);\n \n     // Check if dest is directory\n     try {\n       FileStatus sdst \u003d dstFS.getFileStatus(dst);\n       if (!sdst.isDirectory())\n         throw new IOException(\"copying multiple files, but last argument `\" +\n                               dst + \"\u0027 is not a directory\");\n     } catch (FileNotFoundException e) {\n       throw new IOException(\n           \"`\" + dst + \"\u0027: specified destination directory \" +\n               \"does not exist\", e);\n     }\n \n     for (Path src : srcs) {\n       try {\n         if (!copy(srcFS, src, dstFS, dst, deleteSource, overwrite, conf))\n           returnVal \u003d false;\n       } catch (IOException e) {\n         gotException \u003d true;\n-        exceptions.append(e.getMessage());\n-        exceptions.append(\"\\n\");\n+        exceptions.append(e.getMessage())\n+            .append(\"\\n\");\n       }\n     }\n     if (gotException) {\n       throw new IOException(exceptions.toString());\n     }\n     return returnVal;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static boolean copy(FileSystem srcFS, Path[] srcs,\n                             FileSystem dstFS, Path dst,\n                             boolean deleteSource,\n                             boolean overwrite, Configuration conf)\n                             throws IOException {\n    boolean gotException \u003d false;\n    boolean returnVal \u003d true;\n    StringBuilder exceptions \u003d new StringBuilder();\n\n    if (srcs.length \u003d\u003d 1)\n      return copy(srcFS, srcs[0], dstFS, dst, deleteSource, overwrite, conf);\n\n    // Check if dest is directory\n    try {\n      FileStatus sdst \u003d dstFS.getFileStatus(dst);\n      if (!sdst.isDirectory())\n        throw new IOException(\"copying multiple files, but last argument `\" +\n                              dst + \"\u0027 is not a directory\");\n    } catch (FileNotFoundException e) {\n      throw new IOException(\n          \"`\" + dst + \"\u0027: specified destination directory \" +\n              \"does not exist\", e);\n    }\n\n    for (Path src : srcs) {\n      try {\n        if (!copy(srcFS, src, dstFS, dst, deleteSource, overwrite, conf))\n          returnVal \u003d false;\n      } catch (IOException e) {\n        gotException \u003d true;\n        exceptions.append(e.getMessage())\n            .append(\"\\n\");\n      }\n    }\n    if (gotException) {\n      throw new IOException(exceptions.toString());\n    }\n    return returnVal;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileUtil.java",
      "extendedDetails": {}
    },
    "5af572b6443715b7a741296c1bd520a1840f9a7c": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13427. Eliminate needless uses of FileSystem#{exists(), isFile(), isDirectory()}. Contributed by Steve Loughran and Mingliang Liu\n",
      "commitDate": "15/11/16 10:57 AM",
      "commitName": "5af572b6443715b7a741296c1bd520a1840f9a7c",
      "commitAuthor": "Mingliang Liu",
      "commitDateOld": "10/11/16 10:38 PM",
      "commitNameOld": "470bdaa27a771467fcd44dfa9c9c951501642ac6",
      "commitAuthorOld": "Yongjun Zhang",
      "daysBetweenCommits": 4.51,
      "commitsBetweenForRepo": 23,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,39 @@\n   public static boolean copy(FileSystem srcFS, Path[] srcs,\n                              FileSystem dstFS, Path dst,\n                              boolean deleteSource,\n                              boolean overwrite, Configuration conf)\n                              throws IOException {\n     boolean gotException \u003d false;\n     boolean returnVal \u003d true;\n     StringBuilder exceptions \u003d new StringBuilder();\n \n     if (srcs.length \u003d\u003d 1)\n       return copy(srcFS, srcs[0], dstFS, dst, deleteSource, overwrite, conf);\n \n     // Check if dest is directory\n-    if (!dstFS.exists(dst)) {\n-      throw new IOException(\"`\" + dst +\"\u0027: specified destination directory \" +\n-                            \"does not exist\");\n-    } else {\n+    try {\n       FileStatus sdst \u003d dstFS.getFileStatus(dst);\n       if (!sdst.isDirectory())\n         throw new IOException(\"copying multiple files, but last argument `\" +\n                               dst + \"\u0027 is not a directory\");\n+    } catch (FileNotFoundException e) {\n+      throw new IOException(\n+          \"`\" + dst + \"\u0027: specified destination directory \" +\n+              \"does not exist\", e);\n     }\n \n     for (Path src : srcs) {\n       try {\n         if (!copy(srcFS, src, dstFS, dst, deleteSource, overwrite, conf))\n           returnVal \u003d false;\n       } catch (IOException e) {\n         gotException \u003d true;\n         exceptions.append(e.getMessage());\n         exceptions.append(\"\\n\");\n       }\n     }\n     if (gotException) {\n       throw new IOException(exceptions.toString());\n     }\n     return returnVal;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static boolean copy(FileSystem srcFS, Path[] srcs,\n                             FileSystem dstFS, Path dst,\n                             boolean deleteSource,\n                             boolean overwrite, Configuration conf)\n                             throws IOException {\n    boolean gotException \u003d false;\n    boolean returnVal \u003d true;\n    StringBuilder exceptions \u003d new StringBuilder();\n\n    if (srcs.length \u003d\u003d 1)\n      return copy(srcFS, srcs[0], dstFS, dst, deleteSource, overwrite, conf);\n\n    // Check if dest is directory\n    try {\n      FileStatus sdst \u003d dstFS.getFileStatus(dst);\n      if (!sdst.isDirectory())\n        throw new IOException(\"copying multiple files, but last argument `\" +\n                              dst + \"\u0027 is not a directory\");\n    } catch (FileNotFoundException e) {\n      throw new IOException(\n          \"`\" + dst + \"\u0027: specified destination directory \" +\n              \"does not exist\", e);\n    }\n\n    for (Path src : srcs) {\n      try {\n        if (!copy(srcFS, src, dstFS, dst, deleteSource, overwrite, conf))\n          returnVal \u003d false;\n      } catch (IOException e) {\n        gotException \u003d true;\n        exceptions.append(e.getMessage());\n        exceptions.append(\"\\n\");\n      }\n    }\n    if (gotException) {\n      throw new IOException(exceptions.toString());\n    }\n    return returnVal;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileUtil.java",
      "extendedDetails": {}
    },
    "e408d9904b1105b7eebd952cba0d61efe8802b22": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-9473. Typo in FileUtil copy() method. Contributed by Glen Mazza.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1467694 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/04/13 1:22 PM",
      "commitName": "e408d9904b1105b7eebd952cba0d61efe8802b22",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "06/03/13 11:15 AM",
      "commitNameOld": "638801cce16fc1dc3259c541dc30a599faaddda1",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 38.05,
      "commitsBetweenForRepo": 225,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,38 @@\n   public static boolean copy(FileSystem srcFS, Path[] srcs, \n                              FileSystem dstFS, Path dst,\n                              boolean deleteSource, \n                              boolean overwrite, Configuration conf)\n                              throws IOException {\n     boolean gotException \u003d false;\n     boolean returnVal \u003d true;\n     StringBuilder exceptions \u003d new StringBuilder();\n \n     if (srcs.length \u003d\u003d 1)\n       return copy(srcFS, srcs[0], dstFS, dst, deleteSource, overwrite, conf);\n \n     // Check if dest is directory\n     if (!dstFS.exists(dst)) {\n       throw new IOException(\"`\" + dst +\"\u0027: specified destination directory \" +\n-                            \"doest not exist\");\n+                            \"does not exist\");\n     } else {\n       FileStatus sdst \u003d dstFS.getFileStatus(dst);\n       if (!sdst.isDirectory()) \n         throw new IOException(\"copying multiple files, but last argument `\" +\n                               dst + \"\u0027 is not a directory\");\n     }\n \n     for (Path src : srcs) {\n       try {\n         if (!copy(srcFS, src, dstFS, dst, deleteSource, overwrite, conf))\n           returnVal \u003d false;\n       } catch (IOException e) {\n         gotException \u003d true;\n         exceptions.append(e.getMessage());\n         exceptions.append(\"\\n\");\n       }\n     }\n     if (gotException) {\n       throw new IOException(exceptions.toString());\n     }\n     return returnVal;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static boolean copy(FileSystem srcFS, Path[] srcs, \n                             FileSystem dstFS, Path dst,\n                             boolean deleteSource, \n                             boolean overwrite, Configuration conf)\n                             throws IOException {\n    boolean gotException \u003d false;\n    boolean returnVal \u003d true;\n    StringBuilder exceptions \u003d new StringBuilder();\n\n    if (srcs.length \u003d\u003d 1)\n      return copy(srcFS, srcs[0], dstFS, dst, deleteSource, overwrite, conf);\n\n    // Check if dest is directory\n    if (!dstFS.exists(dst)) {\n      throw new IOException(\"`\" + dst +\"\u0027: specified destination directory \" +\n                            \"does not exist\");\n    } else {\n      FileStatus sdst \u003d dstFS.getFileStatus(dst);\n      if (!sdst.isDirectory()) \n        throw new IOException(\"copying multiple files, but last argument `\" +\n                              dst + \"\u0027 is not a directory\");\n    }\n\n    for (Path src : srcs) {\n      try {\n        if (!copy(srcFS, src, dstFS, dst, deleteSource, overwrite, conf))\n          returnVal \u003d false;\n      } catch (IOException e) {\n        gotException \u003d true;\n        exceptions.append(e.getMessage());\n        exceptions.append(\"\\n\");\n      }\n    }\n    if (gotException) {\n      throw new IOException(exceptions.toString());\n    }\n    return returnVal;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileUtil.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static boolean copy(FileSystem srcFS, Path[] srcs, \n                             FileSystem dstFS, Path dst,\n                             boolean deleteSource, \n                             boolean overwrite, Configuration conf)\n                             throws IOException {\n    boolean gotException \u003d false;\n    boolean returnVal \u003d true;\n    StringBuilder exceptions \u003d new StringBuilder();\n\n    if (srcs.length \u003d\u003d 1)\n      return copy(srcFS, srcs[0], dstFS, dst, deleteSource, overwrite, conf);\n\n    // Check if dest is directory\n    if (!dstFS.exists(dst)) {\n      throw new IOException(\"`\" + dst +\"\u0027: specified destination directory \" +\n                            \"doest not exist\");\n    } else {\n      FileStatus sdst \u003d dstFS.getFileStatus(dst);\n      if (!sdst.isDirectory()) \n        throw new IOException(\"copying multiple files, but last argument `\" +\n                              dst + \"\u0027 is not a directory\");\n    }\n\n    for (Path src : srcs) {\n      try {\n        if (!copy(srcFS, src, dstFS, dst, deleteSource, overwrite, conf))\n          returnVal \u003d false;\n      } catch (IOException e) {\n        gotException \u003d true;\n        exceptions.append(e.getMessage());\n        exceptions.append(\"\\n\");\n      }\n    }\n    if (gotException) {\n      throw new IOException(exceptions.toString());\n    }\n    return returnVal;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileUtil.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/FileUtil.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileUtil.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static boolean copy(FileSystem srcFS, Path[] srcs, \n                             FileSystem dstFS, Path dst,\n                             boolean deleteSource, \n                             boolean overwrite, Configuration conf)\n                             throws IOException {\n    boolean gotException \u003d false;\n    boolean returnVal \u003d true;\n    StringBuilder exceptions \u003d new StringBuilder();\n\n    if (srcs.length \u003d\u003d 1)\n      return copy(srcFS, srcs[0], dstFS, dst, deleteSource, overwrite, conf);\n\n    // Check if dest is directory\n    if (!dstFS.exists(dst)) {\n      throw new IOException(\"`\" + dst +\"\u0027: specified destination directory \" +\n                            \"doest not exist\");\n    } else {\n      FileStatus sdst \u003d dstFS.getFileStatus(dst);\n      if (!sdst.isDirectory()) \n        throw new IOException(\"copying multiple files, but last argument `\" +\n                              dst + \"\u0027 is not a directory\");\n    }\n\n    for (Path src : srcs) {\n      try {\n        if (!copy(srcFS, src, dstFS, dst, deleteSource, overwrite, conf))\n          returnVal \u003d false;\n      } catch (IOException e) {\n        gotException \u003d true;\n        exceptions.append(e.getMessage());\n        exceptions.append(\"\\n\");\n      }\n    }\n    if (gotException) {\n      throw new IOException(exceptions.toString());\n    }\n    return returnVal;\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/fs/FileUtil.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/fs/FileUtil.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/FileUtil.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static boolean copy(FileSystem srcFS, Path[] srcs, \n                             FileSystem dstFS, Path dst,\n                             boolean deleteSource, \n                             boolean overwrite, Configuration conf)\n                             throws IOException {\n    boolean gotException \u003d false;\n    boolean returnVal \u003d true;\n    StringBuilder exceptions \u003d new StringBuilder();\n\n    if (srcs.length \u003d\u003d 1)\n      return copy(srcFS, srcs[0], dstFS, dst, deleteSource, overwrite, conf);\n\n    // Check if dest is directory\n    if (!dstFS.exists(dst)) {\n      throw new IOException(\"`\" + dst +\"\u0027: specified destination directory \" +\n                            \"doest not exist\");\n    } else {\n      FileStatus sdst \u003d dstFS.getFileStatus(dst);\n      if (!sdst.isDirectory()) \n        throw new IOException(\"copying multiple files, but last argument `\" +\n                              dst + \"\u0027 is not a directory\");\n    }\n\n    for (Path src : srcs) {\n      try {\n        if (!copy(srcFS, src, dstFS, dst, deleteSource, overwrite, conf))\n          returnVal \u003d false;\n      } catch (IOException e) {\n        gotException \u003d true;\n        exceptions.append(e.getMessage());\n        exceptions.append(\"\\n\");\n      }\n    }\n    if (gotException) {\n      throw new IOException(exceptions.toString());\n    }\n    return returnVal;\n  }",
      "path": "common/src/java/org/apache/hadoop/fs/FileUtil.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/fs/FileUtil.java",
        "newPath": "common/src/java/org/apache/hadoop/fs/FileUtil.java"
      }
    },
    "7578282edce0eba3f24c96355c944c02156ece79": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-6585.  Add FileStatus#isDirectory and isFile.  Contributed by Eli Collins.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@949658 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/05/10 8:14 PM",
      "commitName": "7578282edce0eba3f24c96355c944c02156ece79",
      "commitAuthor": "Thomas White",
      "commitDateOld": "06/05/10 4:18 AM",
      "commitNameOld": "44ebf5db23ac5c22e347458fcc75389d78e4249d",
      "commitAuthorOld": "Sharad Agarwal",
      "daysBetweenCommits": 24.66,
      "commitsBetweenForRepo": 26,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,38 @@\n   public static boolean copy(FileSystem srcFS, Path[] srcs, \n                              FileSystem dstFS, Path dst,\n                              boolean deleteSource, \n                              boolean overwrite, Configuration conf)\n                              throws IOException {\n     boolean gotException \u003d false;\n     boolean returnVal \u003d true;\n     StringBuilder exceptions \u003d new StringBuilder();\n \n     if (srcs.length \u003d\u003d 1)\n       return copy(srcFS, srcs[0], dstFS, dst, deleteSource, overwrite, conf);\n \n     // Check if dest is directory\n     if (!dstFS.exists(dst)) {\n       throw new IOException(\"`\" + dst +\"\u0027: specified destination directory \" +\n                             \"doest not exist\");\n     } else {\n       FileStatus sdst \u003d dstFS.getFileStatus(dst);\n-      if (!sdst.isDir()) \n+      if (!sdst.isDirectory()) \n         throw new IOException(\"copying multiple files, but last argument `\" +\n                               dst + \"\u0027 is not a directory\");\n     }\n \n     for (Path src : srcs) {\n       try {\n         if (!copy(srcFS, src, dstFS, dst, deleteSource, overwrite, conf))\n           returnVal \u003d false;\n       } catch (IOException e) {\n         gotException \u003d true;\n         exceptions.append(e.getMessage());\n         exceptions.append(\"\\n\");\n       }\n     }\n     if (gotException) {\n       throw new IOException(exceptions.toString());\n     }\n     return returnVal;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static boolean copy(FileSystem srcFS, Path[] srcs, \n                             FileSystem dstFS, Path dst,\n                             boolean deleteSource, \n                             boolean overwrite, Configuration conf)\n                             throws IOException {\n    boolean gotException \u003d false;\n    boolean returnVal \u003d true;\n    StringBuilder exceptions \u003d new StringBuilder();\n\n    if (srcs.length \u003d\u003d 1)\n      return copy(srcFS, srcs[0], dstFS, dst, deleteSource, overwrite, conf);\n\n    // Check if dest is directory\n    if (!dstFS.exists(dst)) {\n      throw new IOException(\"`\" + dst +\"\u0027: specified destination directory \" +\n                            \"doest not exist\");\n    } else {\n      FileStatus sdst \u003d dstFS.getFileStatus(dst);\n      if (!sdst.isDirectory()) \n        throw new IOException(\"copying multiple files, but last argument `\" +\n                              dst + \"\u0027 is not a directory\");\n    }\n\n    for (Path src : srcs) {\n      try {\n        if (!copy(srcFS, src, dstFS, dst, deleteSource, overwrite, conf))\n          returnVal \u003d false;\n      } catch (IOException e) {\n        gotException \u003d true;\n        exceptions.append(e.getMessage());\n        exceptions.append(\"\\n\");\n      }\n    }\n    if (gotException) {\n      throw new IOException(exceptions.toString());\n    }\n    return returnVal;\n  }",
      "path": "src/java/org/apache/hadoop/fs/FileUtil.java",
      "extendedDetails": {}
    },
    "0485fe23ba76f7d96a198aed00f392fd571124bc": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-6471. StringBuffer -\u003e StringBuilder - conversion of references as necessary. Contributed by Kay Kay.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@926256 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/03/10 12:08 PM",
      "commitName": "0485fe23ba76f7d96a198aed00f392fd571124bc",
      "commitAuthor": "Thomas White",
      "commitDateOld": "13/02/10 4:21 AM",
      "commitNameOld": "fc83909c3f697e725790874a1773707a8ff6b2b4",
      "commitAuthorOld": "Christopher Douglas",
      "daysBetweenCommits": 37.28,
      "commitsBetweenForRepo": 40,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,38 @@\n   public static boolean copy(FileSystem srcFS, Path[] srcs, \n                              FileSystem dstFS, Path dst,\n                              boolean deleteSource, \n                              boolean overwrite, Configuration conf)\n                              throws IOException {\n     boolean gotException \u003d false;\n     boolean returnVal \u003d true;\n-    StringBuffer exceptions \u003d new StringBuffer();\n+    StringBuilder exceptions \u003d new StringBuilder();\n \n     if (srcs.length \u003d\u003d 1)\n       return copy(srcFS, srcs[0], dstFS, dst, deleteSource, overwrite, conf);\n \n     // Check if dest is directory\n     if (!dstFS.exists(dst)) {\n       throw new IOException(\"`\" + dst +\"\u0027: specified destination directory \" +\n                             \"doest not exist\");\n     } else {\n       FileStatus sdst \u003d dstFS.getFileStatus(dst);\n       if (!sdst.isDir()) \n         throw new IOException(\"copying multiple files, but last argument `\" +\n                               dst + \"\u0027 is not a directory\");\n     }\n \n     for (Path src : srcs) {\n       try {\n         if (!copy(srcFS, src, dstFS, dst, deleteSource, overwrite, conf))\n           returnVal \u003d false;\n       } catch (IOException e) {\n         gotException \u003d true;\n         exceptions.append(e.getMessage());\n         exceptions.append(\"\\n\");\n       }\n     }\n     if (gotException) {\n       throw new IOException(exceptions.toString());\n     }\n     return returnVal;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static boolean copy(FileSystem srcFS, Path[] srcs, \n                             FileSystem dstFS, Path dst,\n                             boolean deleteSource, \n                             boolean overwrite, Configuration conf)\n                             throws IOException {\n    boolean gotException \u003d false;\n    boolean returnVal \u003d true;\n    StringBuilder exceptions \u003d new StringBuilder();\n\n    if (srcs.length \u003d\u003d 1)\n      return copy(srcFS, srcs[0], dstFS, dst, deleteSource, overwrite, conf);\n\n    // Check if dest is directory\n    if (!dstFS.exists(dst)) {\n      throw new IOException(\"`\" + dst +\"\u0027: specified destination directory \" +\n                            \"doest not exist\");\n    } else {\n      FileStatus sdst \u003d dstFS.getFileStatus(dst);\n      if (!sdst.isDir()) \n        throw new IOException(\"copying multiple files, but last argument `\" +\n                              dst + \"\u0027 is not a directory\");\n    }\n\n    for (Path src : srcs) {\n      try {\n        if (!copy(srcFS, src, dstFS, dst, deleteSource, overwrite, conf))\n          returnVal \u003d false;\n      } catch (IOException e) {\n        gotException \u003d true;\n        exceptions.append(e.getMessage());\n        exceptions.append(\"\\n\");\n      }\n    }\n    if (gotException) {\n      throw new IOException(exceptions.toString());\n    }\n    return returnVal;\n  }",
      "path": "src/java/org/apache/hadoop/fs/FileUtil.java",
      "extendedDetails": {}
    },
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-4687 Moving src directories on branch\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/core/branches/HADOOP-4687/core@776174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/05/09 9:20 PM",
      "commitName": "5128a9a453d64bfe1ed978cf9ffed27985eeef36",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,38 @@\n+  public static boolean copy(FileSystem srcFS, Path[] srcs, \n+                             FileSystem dstFS, Path dst,\n+                             boolean deleteSource, \n+                             boolean overwrite, Configuration conf)\n+                             throws IOException {\n+    boolean gotException \u003d false;\n+    boolean returnVal \u003d true;\n+    StringBuffer exceptions \u003d new StringBuffer();\n+\n+    if (srcs.length \u003d\u003d 1)\n+      return copy(srcFS, srcs[0], dstFS, dst, deleteSource, overwrite, conf);\n+\n+    // Check if dest is directory\n+    if (!dstFS.exists(dst)) {\n+      throw new IOException(\"`\" + dst +\"\u0027: specified destination directory \" +\n+                            \"doest not exist\");\n+    } else {\n+      FileStatus sdst \u003d dstFS.getFileStatus(dst);\n+      if (!sdst.isDir()) \n+        throw new IOException(\"copying multiple files, but last argument `\" +\n+                              dst + \"\u0027 is not a directory\");\n+    }\n+\n+    for (Path src : srcs) {\n+      try {\n+        if (!copy(srcFS, src, dstFS, dst, deleteSource, overwrite, conf))\n+          returnVal \u003d false;\n+      } catch (IOException e) {\n+        gotException \u003d true;\n+        exceptions.append(e.getMessage());\n+        exceptions.append(\"\\n\");\n+      }\n+    }\n+    if (gotException) {\n+      throw new IOException(exceptions.toString());\n+    }\n+    return returnVal;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static boolean copy(FileSystem srcFS, Path[] srcs, \n                             FileSystem dstFS, Path dst,\n                             boolean deleteSource, \n                             boolean overwrite, Configuration conf)\n                             throws IOException {\n    boolean gotException \u003d false;\n    boolean returnVal \u003d true;\n    StringBuffer exceptions \u003d new StringBuffer();\n\n    if (srcs.length \u003d\u003d 1)\n      return copy(srcFS, srcs[0], dstFS, dst, deleteSource, overwrite, conf);\n\n    // Check if dest is directory\n    if (!dstFS.exists(dst)) {\n      throw new IOException(\"`\" + dst +\"\u0027: specified destination directory \" +\n                            \"doest not exist\");\n    } else {\n      FileStatus sdst \u003d dstFS.getFileStatus(dst);\n      if (!sdst.isDir()) \n        throw new IOException(\"copying multiple files, but last argument `\" +\n                              dst + \"\u0027 is not a directory\");\n    }\n\n    for (Path src : srcs) {\n      try {\n        if (!copy(srcFS, src, dstFS, dst, deleteSource, overwrite, conf))\n          returnVal \u003d false;\n      } catch (IOException e) {\n        gotException \u003d true;\n        exceptions.append(e.getMessage());\n        exceptions.append(\"\\n\");\n      }\n    }\n    if (gotException) {\n      throw new IOException(exceptions.toString());\n    }\n    return returnVal;\n  }",
      "path": "src/java/org/apache/hadoop/fs/FileUtil.java"
    }
  }
}