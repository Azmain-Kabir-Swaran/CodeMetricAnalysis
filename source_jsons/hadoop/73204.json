{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HttpServer2.java",
  "functionName": "addInternalServlet",
  "functionId": "addInternalServlet___name-String__pathSpec-String__clazz-Class__? extends HttpServlet____params-Map__String,String__",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer2.java",
  "functionStartLine": 977,
  "functionEndLine": 1002,
  "numCommitsSeen": 55,
  "timeTaken": 1391,
  "changeHistory": [
    "e307edcb472207a39d1cbe4be6f7fcddc7b4fd6d"
  ],
  "changeHistoryShort": {
    "e307edcb472207a39d1cbe4be6f7fcddc7b4fd6d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e307edcb472207a39d1cbe4be6f7fcddc7b4fd6d": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7540 and YARN-7605. Convert yarn app cli to call yarn api services and implement doAs for Api Service REST API. Contributed by Eric Yang and Jian He\n",
      "commitDate": "23/01/18 5:54 PM",
      "commitName": "e307edcb472207a39d1cbe4be6f7fcddc7b4fd6d",
      "commitAuthor": "Billie Rinaldi",
      "diff": "@@ -0,0 +1,26 @@\n+  public void addInternalServlet(String name, String pathSpec,\n+      Class\u003c? extends HttpServlet\u003e clazz, Map\u003cString, String\u003e params) {\n+    // Jetty doesn\u0027t like the same path spec mapping to different servlets, so\n+    // if there\u0027s already a mapping for this pathSpec, remove it and assume that\n+    // the newest one is the one we want\n+    final ServletHolder sh \u003d new ServletHolder(clazz);\n+    sh.setName(name);\n+    sh.setInitParameters(params);\n+    final ServletMapping[] servletMappings \u003d\n+        webAppContext.getServletHandler().getServletMappings();\n+    for (int i \u003d 0; i \u003c servletMappings.length; i++) {\n+      if (servletMappings[i].containsPathSpec(pathSpec)) {\n+        if (LOG.isDebugEnabled()) {\n+          LOG.debug(\"Found existing \" + servletMappings[i].getServletName() +\n+              \" servlet at path \" + pathSpec + \"; will replace mapping\" +\n+              \" with \" + sh.getName() + \" servlet\");\n+        }\n+        ServletMapping[] newServletMappings \u003d\n+            ArrayUtil.removeFromArray(servletMappings, servletMappings[i]);\n+        webAppContext.getServletHandler()\n+            .setServletMappings(newServletMappings);\n+        break;\n+      }\n+    }\n+    webAppContext.addServlet(sh, pathSpec);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void addInternalServlet(String name, String pathSpec,\n      Class\u003c? extends HttpServlet\u003e clazz, Map\u003cString, String\u003e params) {\n    // Jetty doesn\u0027t like the same path spec mapping to different servlets, so\n    // if there\u0027s already a mapping for this pathSpec, remove it and assume that\n    // the newest one is the one we want\n    final ServletHolder sh \u003d new ServletHolder(clazz);\n    sh.setName(name);\n    sh.setInitParameters(params);\n    final ServletMapping[] servletMappings \u003d\n        webAppContext.getServletHandler().getServletMappings();\n    for (int i \u003d 0; i \u003c servletMappings.length; i++) {\n      if (servletMappings[i].containsPathSpec(pathSpec)) {\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"Found existing \" + servletMappings[i].getServletName() +\n              \" servlet at path \" + pathSpec + \"; will replace mapping\" +\n              \" with \" + sh.getName() + \" servlet\");\n        }\n        ServletMapping[] newServletMappings \u003d\n            ArrayUtil.removeFromArray(servletMappings, servletMappings[i]);\n        webAppContext.getServletHandler()\n            .setServletMappings(newServletMappings);\n        break;\n      }\n    }\n    webAppContext.addServlet(sh, pathSpec);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer2.java"
    }
  }
}