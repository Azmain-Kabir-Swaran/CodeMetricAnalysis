{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ColumnRWHelper.java",
  "functionName": "store",
  "functionId": "store___rowKey-byte[]__tableMutator-TypedBufferedMutator__?____columnFamilyBytes-byte[]__columnQualifier-byte[]__timestamp-Long__supplementTs-boolean__inputValue-Object__converter-ValueConverter__attributes-Attribute",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/common/ColumnRWHelper.java",
  "functionStartLine": 137,
  "functionEndLine": 154,
  "numCommitsSeen": 21,
  "timeTaken": 6070,
  "changeHistory": [
    "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2",
    "b01514f65bc6090a50a583f67d1ecb5d74b6d276",
    "51254a6b5133c8abfec4b7d2ac9477d112b3ccfa",
    "a68e3839218523403f42acd7bdd7ce1da59a5e60",
    "92d90c3a243134177f192d1d473dd606c79a91fc",
    "5a4278ccbd22b50ea1e80d28c3eea1777ffc2875"
  ],
  "changeHistoryShort": {
    "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yparameterchange)",
    "b01514f65bc6090a50a583f67d1ecb5d74b6d276": "Yfilerename",
    "51254a6b5133c8abfec4b7d2ac9477d112b3ccfa": "Ybodychange",
    "a68e3839218523403f42acd7bdd7ce1da59a5e60": "Ymultichange(Yparameterchange,Ybodychange)",
    "92d90c3a243134177f192d1d473dd606c79a91fc": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yparameterchange)",
    "5a4278ccbd22b50ea1e80d28c3eea1777ffc2875": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yparameterchange)",
      "commitMessage": "YARN-7919. Refactor timelineservice-hbase module into submodules. Contributed by Haibo Chen.\n",
      "commitDate": "17/02/18 7:00 AM",
      "commitName": "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2",
      "commitAuthor": "Rohith Sharma K S",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-7919. Refactor timelineservice-hbase module into submodules. Contributed by Haibo Chen.\n",
          "commitDate": "17/02/18 7:00 AM",
          "commitName": "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2",
          "commitAuthor": "Rohith Sharma K S",
          "commitDateOld": "17/02/18 3:24 AM",
          "commitNameOld": "a1e56a62863d8d494af309ec5f476c4b7e4d5ef9",
          "commitAuthorOld": "Arun Suresh",
          "daysBetweenCommits": 0.15,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,18 @@\n-  public void store(byte[] rowKey, TypedBufferedMutator\u003c?\u003e tableMutator,\n-      byte[] columnQualifier, Long timestamp, Object inputValue,\n+  public static void store(byte[] rowKey, TypedBufferedMutator\u003c?\u003e tableMutator,\n+      byte[] columnFamilyBytes, byte[] columnQualifier, Long timestamp,\n+      boolean supplementTs, Object inputValue, ValueConverter converter,\n       Attribute... attributes) throws IOException {\n     if ((rowKey \u003d\u003d null) || (columnQualifier \u003d\u003d null) || (inputValue \u003d\u003d null)) {\n       return;\n     }\n     Put p \u003d new Put(rowKey);\n-    timestamp \u003d getPutTimestamp(timestamp, attributes);\n+    timestamp \u003d getPutTimestamp(timestamp, supplementTs, attributes);\n     p.addColumn(columnFamilyBytes, columnQualifier, timestamp,\n         converter.encodeValue(inputValue));\n     if ((attributes !\u003d null) \u0026\u0026 (attributes.length \u003e 0)) {\n       for (Attribute attribute : attributes) {\n         p.setAttribute(attribute.getName(), attribute.getValue());\n       }\n     }\n     tableMutator.mutate(p);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void store(byte[] rowKey, TypedBufferedMutator\u003c?\u003e tableMutator,\n      byte[] columnFamilyBytes, byte[] columnQualifier, Long timestamp,\n      boolean supplementTs, Object inputValue, ValueConverter converter,\n      Attribute... attributes) throws IOException {\n    if ((rowKey \u003d\u003d null) || (columnQualifier \u003d\u003d null) || (inputValue \u003d\u003d null)) {\n      return;\n    }\n    Put p \u003d new Put(rowKey);\n    timestamp \u003d getPutTimestamp(timestamp, supplementTs, attributes);\n    p.addColumn(columnFamilyBytes, columnQualifier, timestamp,\n        converter.encodeValue(inputValue));\n    if ((attributes !\u003d null) \u0026\u0026 (attributes.length \u003e 0)) {\n      for (Attribute attribute : attributes) {\n        p.setAttribute(attribute.getName(), attribute.getValue());\n      }\n    }\n    tableMutator.mutate(p);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/common/ColumnRWHelper.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/common/ColumnHelper.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/common/ColumnRWHelper.java",
            "oldMethodName": "store",
            "newMethodName": "store"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-7919. Refactor timelineservice-hbase module into submodules. Contributed by Haibo Chen.\n",
          "commitDate": "17/02/18 7:00 AM",
          "commitName": "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2",
          "commitAuthor": "Rohith Sharma K S",
          "commitDateOld": "17/02/18 3:24 AM",
          "commitNameOld": "a1e56a62863d8d494af309ec5f476c4b7e4d5ef9",
          "commitAuthorOld": "Arun Suresh",
          "daysBetweenCommits": 0.15,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,18 @@\n-  public void store(byte[] rowKey, TypedBufferedMutator\u003c?\u003e tableMutator,\n-      byte[] columnQualifier, Long timestamp, Object inputValue,\n+  public static void store(byte[] rowKey, TypedBufferedMutator\u003c?\u003e tableMutator,\n+      byte[] columnFamilyBytes, byte[] columnQualifier, Long timestamp,\n+      boolean supplementTs, Object inputValue, ValueConverter converter,\n       Attribute... attributes) throws IOException {\n     if ((rowKey \u003d\u003d null) || (columnQualifier \u003d\u003d null) || (inputValue \u003d\u003d null)) {\n       return;\n     }\n     Put p \u003d new Put(rowKey);\n-    timestamp \u003d getPutTimestamp(timestamp, attributes);\n+    timestamp \u003d getPutTimestamp(timestamp, supplementTs, attributes);\n     p.addColumn(columnFamilyBytes, columnQualifier, timestamp,\n         converter.encodeValue(inputValue));\n     if ((attributes !\u003d null) \u0026\u0026 (attributes.length \u003e 0)) {\n       for (Attribute attribute : attributes) {\n         p.setAttribute(attribute.getName(), attribute.getValue());\n       }\n     }\n     tableMutator.mutate(p);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void store(byte[] rowKey, TypedBufferedMutator\u003c?\u003e tableMutator,\n      byte[] columnFamilyBytes, byte[] columnQualifier, Long timestamp,\n      boolean supplementTs, Object inputValue, ValueConverter converter,\n      Attribute... attributes) throws IOException {\n    if ((rowKey \u003d\u003d null) || (columnQualifier \u003d\u003d null) || (inputValue \u003d\u003d null)) {\n      return;\n    }\n    Put p \u003d new Put(rowKey);\n    timestamp \u003d getPutTimestamp(timestamp, supplementTs, attributes);\n    p.addColumn(columnFamilyBytes, columnQualifier, timestamp,\n        converter.encodeValue(inputValue));\n    if ((attributes !\u003d null) \u0026\u0026 (attributes.length \u003e 0)) {\n      for (Attribute attribute : attributes) {\n        p.setAttribute(attribute.getName(), attribute.getValue());\n      }\n    }\n    tableMutator.mutate(p);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/common/ColumnRWHelper.java",
          "extendedDetails": {
            "oldValue": "[public]",
            "newValue": "[public, static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7919. Refactor timelineservice-hbase module into submodules. Contributed by Haibo Chen.\n",
          "commitDate": "17/02/18 7:00 AM",
          "commitName": "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2",
          "commitAuthor": "Rohith Sharma K S",
          "commitDateOld": "17/02/18 3:24 AM",
          "commitNameOld": "a1e56a62863d8d494af309ec5f476c4b7e4d5ef9",
          "commitAuthorOld": "Arun Suresh",
          "daysBetweenCommits": 0.15,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,18 @@\n-  public void store(byte[] rowKey, TypedBufferedMutator\u003c?\u003e tableMutator,\n-      byte[] columnQualifier, Long timestamp, Object inputValue,\n+  public static void store(byte[] rowKey, TypedBufferedMutator\u003c?\u003e tableMutator,\n+      byte[] columnFamilyBytes, byte[] columnQualifier, Long timestamp,\n+      boolean supplementTs, Object inputValue, ValueConverter converter,\n       Attribute... attributes) throws IOException {\n     if ((rowKey \u003d\u003d null) || (columnQualifier \u003d\u003d null) || (inputValue \u003d\u003d null)) {\n       return;\n     }\n     Put p \u003d new Put(rowKey);\n-    timestamp \u003d getPutTimestamp(timestamp, attributes);\n+    timestamp \u003d getPutTimestamp(timestamp, supplementTs, attributes);\n     p.addColumn(columnFamilyBytes, columnQualifier, timestamp,\n         converter.encodeValue(inputValue));\n     if ((attributes !\u003d null) \u0026\u0026 (attributes.length \u003e 0)) {\n       for (Attribute attribute : attributes) {\n         p.setAttribute(attribute.getName(), attribute.getValue());\n       }\n     }\n     tableMutator.mutate(p);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void store(byte[] rowKey, TypedBufferedMutator\u003c?\u003e tableMutator,\n      byte[] columnFamilyBytes, byte[] columnQualifier, Long timestamp,\n      boolean supplementTs, Object inputValue, ValueConverter converter,\n      Attribute... attributes) throws IOException {\n    if ((rowKey \u003d\u003d null) || (columnQualifier \u003d\u003d null) || (inputValue \u003d\u003d null)) {\n      return;\n    }\n    Put p \u003d new Put(rowKey);\n    timestamp \u003d getPutTimestamp(timestamp, supplementTs, attributes);\n    p.addColumn(columnFamilyBytes, columnQualifier, timestamp,\n        converter.encodeValue(inputValue));\n    if ((attributes !\u003d null) \u0026\u0026 (attributes.length \u003e 0)) {\n      for (Attribute attribute : attributes) {\n        p.setAttribute(attribute.getName(), attribute.getValue());\n      }\n    }\n    tableMutator.mutate(p);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/common/ColumnRWHelper.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-7919. Refactor timelineservice-hbase module into submodules. Contributed by Haibo Chen.\n",
          "commitDate": "17/02/18 7:00 AM",
          "commitName": "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2",
          "commitAuthor": "Rohith Sharma K S",
          "commitDateOld": "17/02/18 3:24 AM",
          "commitNameOld": "a1e56a62863d8d494af309ec5f476c4b7e4d5ef9",
          "commitAuthorOld": "Arun Suresh",
          "daysBetweenCommits": 0.15,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,18 @@\n-  public void store(byte[] rowKey, TypedBufferedMutator\u003c?\u003e tableMutator,\n-      byte[] columnQualifier, Long timestamp, Object inputValue,\n+  public static void store(byte[] rowKey, TypedBufferedMutator\u003c?\u003e tableMutator,\n+      byte[] columnFamilyBytes, byte[] columnQualifier, Long timestamp,\n+      boolean supplementTs, Object inputValue, ValueConverter converter,\n       Attribute... attributes) throws IOException {\n     if ((rowKey \u003d\u003d null) || (columnQualifier \u003d\u003d null) || (inputValue \u003d\u003d null)) {\n       return;\n     }\n     Put p \u003d new Put(rowKey);\n-    timestamp \u003d getPutTimestamp(timestamp, attributes);\n+    timestamp \u003d getPutTimestamp(timestamp, supplementTs, attributes);\n     p.addColumn(columnFamilyBytes, columnQualifier, timestamp,\n         converter.encodeValue(inputValue));\n     if ((attributes !\u003d null) \u0026\u0026 (attributes.length \u003e 0)) {\n       for (Attribute attribute : attributes) {\n         p.setAttribute(attribute.getName(), attribute.getValue());\n       }\n     }\n     tableMutator.mutate(p);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void store(byte[] rowKey, TypedBufferedMutator\u003c?\u003e tableMutator,\n      byte[] columnFamilyBytes, byte[] columnQualifier, Long timestamp,\n      boolean supplementTs, Object inputValue, ValueConverter converter,\n      Attribute... attributes) throws IOException {\n    if ((rowKey \u003d\u003d null) || (columnQualifier \u003d\u003d null) || (inputValue \u003d\u003d null)) {\n      return;\n    }\n    Put p \u003d new Put(rowKey);\n    timestamp \u003d getPutTimestamp(timestamp, supplementTs, attributes);\n    p.addColumn(columnFamilyBytes, columnQualifier, timestamp,\n        converter.encodeValue(inputValue));\n    if ((attributes !\u003d null) \u0026\u0026 (attributes.length \u003e 0)) {\n      for (Attribute attribute : attributes) {\n        p.setAttribute(attribute.getName(), attribute.getValue());\n      }\n    }\n    tableMutator.mutate(p);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/common/ColumnRWHelper.java",
          "extendedDetails": {
            "oldValue": "[rowKey-byte[], tableMutator-TypedBufferedMutator\u003c?\u003e, columnQualifier-byte[], timestamp-Long, inputValue-Object, attributes-Attribute]",
            "newValue": "[rowKey-byte[], tableMutator-TypedBufferedMutator\u003c?\u003e, columnFamilyBytes-byte[], columnQualifier-byte[], timestamp-Long, supplementTs-boolean, inputValue-Object, converter-ValueConverter, attributes-Attribute]"
          }
        }
      ]
    },
    "b01514f65bc6090a50a583f67d1ecb5d74b6d276": {
      "type": "Yfilerename",
      "commitMessage": "YARN-5928. Move ATSv2 HBase backend code into a new module that is only dependent at runtime by yarn servers. Contributed by Haibo Chen.\n",
      "commitDate": "19/01/17 8:52 PM",
      "commitName": "b01514f65bc6090a50a583f67d1ecb5d74b6d276",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "19/01/17 5:32 PM",
      "commitNameOld": "60865c8ea08053f3d6ac23f81c3376a3de3ca996",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 0.14,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void store(byte[] rowKey, TypedBufferedMutator\u003c?\u003e tableMutator,\n      byte[] columnQualifier, Long timestamp, Object inputValue,\n      Attribute... attributes) throws IOException {\n    if ((rowKey \u003d\u003d null) || (columnQualifier \u003d\u003d null) || (inputValue \u003d\u003d null)) {\n      return;\n    }\n    Put p \u003d new Put(rowKey);\n    timestamp \u003d getPutTimestamp(timestamp, attributes);\n    p.addColumn(columnFamilyBytes, columnQualifier, timestamp,\n        converter.encodeValue(inputValue));\n    if ((attributes !\u003d null) \u0026\u0026 (attributes.length \u003e 0)) {\n      for (Attribute attribute : attributes) {\n        p.setAttribute(attribute.getName(), attribute.getValue());\n      }\n    }\n    tableMutator.mutate(p);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/common/ColumnHelper.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/common/ColumnHelper.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/common/ColumnHelper.java"
      }
    },
    "51254a6b5133c8abfec4b7d2ac9477d112b3ccfa": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4053. Change the way metric values are stored in HBase Storage (Varun Saxena via sjlee)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "51254a6b5133c8abfec4b7d2ac9477d112b3ccfa",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "a68e3839218523403f42acd7bdd7ce1da59a5e60",
      "commitAuthorOld": "Sangjin Lee",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   public void store(byte[] rowKey, TypedBufferedMutator\u003c?\u003e tableMutator,\n       byte[] columnQualifier, Long timestamp, Object inputValue,\n       Attribute... attributes) throws IOException {\n     if ((rowKey \u003d\u003d null) || (columnQualifier \u003d\u003d null) || (inputValue \u003d\u003d null)) {\n       return;\n     }\n     Put p \u003d new Put(rowKey);\n     timestamp \u003d getPutTimestamp(timestamp, attributes);\n     p.addColumn(columnFamilyBytes, columnQualifier, timestamp,\n-        GenericObjectMapper.write(inputValue));\n+        converter.encodeValue(inputValue));\n     if ((attributes !\u003d null) \u0026\u0026 (attributes.length \u003e 0)) {\n       for (Attribute attribute : attributes) {\n         p.setAttribute(attribute.getName(), attribute.getValue());\n       }\n     }\n     tableMutator.mutate(p);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void store(byte[] rowKey, TypedBufferedMutator\u003c?\u003e tableMutator,\n      byte[] columnQualifier, Long timestamp, Object inputValue,\n      Attribute... attributes) throws IOException {\n    if ((rowKey \u003d\u003d null) || (columnQualifier \u003d\u003d null) || (inputValue \u003d\u003d null)) {\n      return;\n    }\n    Put p \u003d new Put(rowKey);\n    timestamp \u003d getPutTimestamp(timestamp, attributes);\n    p.addColumn(columnFamilyBytes, columnQualifier, timestamp,\n        converter.encodeValue(inputValue));\n    if ((attributes !\u003d null) \u0026\u0026 (attributes.length \u003e 0)) {\n      for (Attribute attribute : attributes) {\n        p.setAttribute(attribute.getName(), attribute.getValue());\n      }\n    }\n    tableMutator.mutate(p);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/common/ColumnHelper.java",
      "extendedDetails": {}
    },
    "a68e3839218523403f42acd7bdd7ce1da59a5e60": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-3901. Populate flow run data in the flow_run \u0026 flow activity tables (Vrushali C via sjlee)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "a68e3839218523403f42acd7bdd7ce1da59a5e60",
      "commitAuthor": "Sangjin Lee",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-3901. Populate flow run data in the flow_run \u0026 flow activity tables (Vrushali C via sjlee)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "a68e3839218523403f42acd7bdd7ce1da59a5e60",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "7a41b5501ea76f94f15f53f6380b3c63f14b5a78",
          "commitAuthorOld": "Junping Du",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n   public void store(byte[] rowKey, TypedBufferedMutator\u003c?\u003e tableMutator,\n-      byte[] columnQualifier, Long timestamp, Object inputValue)\n-      throws IOException {\n+      byte[] columnQualifier, Long timestamp, Object inputValue,\n+      Attribute... attributes) throws IOException {\n     if ((rowKey \u003d\u003d null) || (columnQualifier \u003d\u003d null) || (inputValue \u003d\u003d null)) {\n       return;\n     }\n     Put p \u003d new Put(rowKey);\n-\n-    if (timestamp \u003d\u003d null) {\n-      p.addColumn(columnFamilyBytes, columnQualifier,\n-          GenericObjectMapper.write(inputValue));\n-    } else {\n-      p.addColumn(columnFamilyBytes, columnQualifier, timestamp,\n-          GenericObjectMapper.write(inputValue));\n+    timestamp \u003d getPutTimestamp(timestamp, attributes);\n+    p.addColumn(columnFamilyBytes, columnQualifier, timestamp,\n+        GenericObjectMapper.write(inputValue));\n+    if ((attributes !\u003d null) \u0026\u0026 (attributes.length \u003e 0)) {\n+      for (Attribute attribute : attributes) {\n+        p.setAttribute(attribute.getName(), attribute.getValue());\n+      }\n     }\n     tableMutator.mutate(p);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void store(byte[] rowKey, TypedBufferedMutator\u003c?\u003e tableMutator,\n      byte[] columnQualifier, Long timestamp, Object inputValue,\n      Attribute... attributes) throws IOException {\n    if ((rowKey \u003d\u003d null) || (columnQualifier \u003d\u003d null) || (inputValue \u003d\u003d null)) {\n      return;\n    }\n    Put p \u003d new Put(rowKey);\n    timestamp \u003d getPutTimestamp(timestamp, attributes);\n    p.addColumn(columnFamilyBytes, columnQualifier, timestamp,\n        GenericObjectMapper.write(inputValue));\n    if ((attributes !\u003d null) \u0026\u0026 (attributes.length \u003e 0)) {\n      for (Attribute attribute : attributes) {\n        p.setAttribute(attribute.getName(), attribute.getValue());\n      }\n    }\n    tableMutator.mutate(p);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/common/ColumnHelper.java",
          "extendedDetails": {
            "oldValue": "[rowKey-byte[], tableMutator-TypedBufferedMutator\u003c?\u003e, columnQualifier-byte[], timestamp-Long, inputValue-Object]",
            "newValue": "[rowKey-byte[], tableMutator-TypedBufferedMutator\u003c?\u003e, columnQualifier-byte[], timestamp-Long, inputValue-Object, attributes-Attribute]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3901. Populate flow run data in the flow_run \u0026 flow activity tables (Vrushali C via sjlee)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "a68e3839218523403f42acd7bdd7ce1da59a5e60",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "7a41b5501ea76f94f15f53f6380b3c63f14b5a78",
          "commitAuthorOld": "Junping Du",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n   public void store(byte[] rowKey, TypedBufferedMutator\u003c?\u003e tableMutator,\n-      byte[] columnQualifier, Long timestamp, Object inputValue)\n-      throws IOException {\n+      byte[] columnQualifier, Long timestamp, Object inputValue,\n+      Attribute... attributes) throws IOException {\n     if ((rowKey \u003d\u003d null) || (columnQualifier \u003d\u003d null) || (inputValue \u003d\u003d null)) {\n       return;\n     }\n     Put p \u003d new Put(rowKey);\n-\n-    if (timestamp \u003d\u003d null) {\n-      p.addColumn(columnFamilyBytes, columnQualifier,\n-          GenericObjectMapper.write(inputValue));\n-    } else {\n-      p.addColumn(columnFamilyBytes, columnQualifier, timestamp,\n-          GenericObjectMapper.write(inputValue));\n+    timestamp \u003d getPutTimestamp(timestamp, attributes);\n+    p.addColumn(columnFamilyBytes, columnQualifier, timestamp,\n+        GenericObjectMapper.write(inputValue));\n+    if ((attributes !\u003d null) \u0026\u0026 (attributes.length \u003e 0)) {\n+      for (Attribute attribute : attributes) {\n+        p.setAttribute(attribute.getName(), attribute.getValue());\n+      }\n     }\n     tableMutator.mutate(p);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void store(byte[] rowKey, TypedBufferedMutator\u003c?\u003e tableMutator,\n      byte[] columnQualifier, Long timestamp, Object inputValue,\n      Attribute... attributes) throws IOException {\n    if ((rowKey \u003d\u003d null) || (columnQualifier \u003d\u003d null) || (inputValue \u003d\u003d null)) {\n      return;\n    }\n    Put p \u003d new Put(rowKey);\n    timestamp \u003d getPutTimestamp(timestamp, attributes);\n    p.addColumn(columnFamilyBytes, columnQualifier, timestamp,\n        GenericObjectMapper.write(inputValue));\n    if ((attributes !\u003d null) \u0026\u0026 (attributes.length \u003e 0)) {\n      for (Attribute attribute : attributes) {\n        p.setAttribute(attribute.getName(), attribute.getValue());\n      }\n    }\n    tableMutator.mutate(p);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/common/ColumnHelper.java",
          "extendedDetails": {}
        }
      ]
    },
    "92d90c3a243134177f192d1d473dd606c79a91fc": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yparameterchange)",
      "commitMessage": "YARN-3706. Generalize native HBase writer for additional tables (Joep Rottinghuis via sjlee)\n\n(cherry picked from commit 9137aeae0dec83f9eff40d12cae712dfd508c0c5)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "92d90c3a243134177f192d1d473dd606c79a91fc",
      "commitAuthor": "Sangjin Lee",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-3706. Generalize native HBase writer for additional tables (Joep Rottinghuis via sjlee)\n\n(cherry picked from commit 9137aeae0dec83f9eff40d12cae712dfd508c0c5)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "92d90c3a243134177f192d1d473dd606c79a91fc",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "6b445a5ccb9826ab9f72ce187c3f93aadfd8b0c0",
          "commitAuthorOld": "Sangjin Lee",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,40 +1,17 @@\n-  public static void store(byte[] rowKey, BufferedMutator table, byte[] columnFamily,\n-      byte[] columnPrefix, byte[] columnQualifier, Object inputValue,\n-      Long cellTimeStamp) throws IOException {\n-    if ((rowKey \u003d\u003d null) || (table \u003d\u003d null) || (columnFamily \u003d\u003d null)\n-        || (columnQualifier \u003d\u003d null) || (inputValue \u003d\u003d null)) {\n+  public void store(byte[] rowKey, TypedBufferedMutator\u003c?\u003e tableMutator,\n+      byte[] columnQualifier, Long timestamp, Object inputValue)\n+      throws IOException {\n+    if ((rowKey \u003d\u003d null) || (columnQualifier \u003d\u003d null) || (inputValue \u003d\u003d null)) {\n       return;\n     }\n+    Put p \u003d new Put(rowKey);\n \n-    Put p \u003d null;\n-    if (cellTimeStamp \u003d\u003d null) {\n-      if (columnPrefix !\u003d null) {\n-        // store with prefix\n-        p \u003d new Put(rowKey);\n-        p.addColumn(\n-            columnFamily,\n-            join(TimelineEntitySchemaConstants.ROW_KEY_SEPARATOR_BYTES,\n-                columnPrefix, columnQualifier), GenericObjectMapper\n-                .write(inputValue));\n-      } else {\n-        // store without prefix\n-        p \u003d new Put(rowKey);\n-        p.addColumn(columnFamily, columnQualifier,\n-            GenericObjectMapper.write(inputValue));\n-      }\n-    } else {\n-      // store with cell timestamp\n-      Cell cell \u003d CellUtil.createCell(rowKey, columnFamily, columnQualifier,\n-          // set the cell timestamp\n-          cellTimeStamp,\n-          // KeyValue Type minimum\n-          TimelineEntitySchemaConstants.ZERO_BYTES,\n+    if (timestamp \u003d\u003d null) {\n+      p.addColumn(columnFamilyBytes, columnQualifier,\n           GenericObjectMapper.write(inputValue));\n-      p \u003d new Put(rowKey);\n-      p.add(cell);\n+    } else {\n+      p.addColumn(columnFamilyBytes, columnQualifier, timestamp,\n+          GenericObjectMapper.write(inputValue));\n     }\n-    if (p !\u003d null) {\n-      table.mutate(p);\n-    }\n-\n+    tableMutator.mutate(p);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void store(byte[] rowKey, TypedBufferedMutator\u003c?\u003e tableMutator,\n      byte[] columnQualifier, Long timestamp, Object inputValue)\n      throws IOException {\n    if ((rowKey \u003d\u003d null) || (columnQualifier \u003d\u003d null) || (inputValue \u003d\u003d null)) {\n      return;\n    }\n    Put p \u003d new Put(rowKey);\n\n    if (timestamp \u003d\u003d null) {\n      p.addColumn(columnFamilyBytes, columnQualifier,\n          GenericObjectMapper.write(inputValue));\n    } else {\n      p.addColumn(columnFamilyBytes, columnQualifier, timestamp,\n          GenericObjectMapper.write(inputValue));\n    }\n    tableMutator.mutate(p);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/common/ColumnHelper.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/TimelineWriterUtils.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/common/ColumnHelper.java",
            "oldMethodName": "store",
            "newMethodName": "store"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-3706. Generalize native HBase writer for additional tables (Joep Rottinghuis via sjlee)\n\n(cherry picked from commit 9137aeae0dec83f9eff40d12cae712dfd508c0c5)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "92d90c3a243134177f192d1d473dd606c79a91fc",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "6b445a5ccb9826ab9f72ce187c3f93aadfd8b0c0",
          "commitAuthorOld": "Sangjin Lee",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,40 +1,17 @@\n-  public static void store(byte[] rowKey, BufferedMutator table, byte[] columnFamily,\n-      byte[] columnPrefix, byte[] columnQualifier, Object inputValue,\n-      Long cellTimeStamp) throws IOException {\n-    if ((rowKey \u003d\u003d null) || (table \u003d\u003d null) || (columnFamily \u003d\u003d null)\n-        || (columnQualifier \u003d\u003d null) || (inputValue \u003d\u003d null)) {\n+  public void store(byte[] rowKey, TypedBufferedMutator\u003c?\u003e tableMutator,\n+      byte[] columnQualifier, Long timestamp, Object inputValue)\n+      throws IOException {\n+    if ((rowKey \u003d\u003d null) || (columnQualifier \u003d\u003d null) || (inputValue \u003d\u003d null)) {\n       return;\n     }\n+    Put p \u003d new Put(rowKey);\n \n-    Put p \u003d null;\n-    if (cellTimeStamp \u003d\u003d null) {\n-      if (columnPrefix !\u003d null) {\n-        // store with prefix\n-        p \u003d new Put(rowKey);\n-        p.addColumn(\n-            columnFamily,\n-            join(TimelineEntitySchemaConstants.ROW_KEY_SEPARATOR_BYTES,\n-                columnPrefix, columnQualifier), GenericObjectMapper\n-                .write(inputValue));\n-      } else {\n-        // store without prefix\n-        p \u003d new Put(rowKey);\n-        p.addColumn(columnFamily, columnQualifier,\n-            GenericObjectMapper.write(inputValue));\n-      }\n-    } else {\n-      // store with cell timestamp\n-      Cell cell \u003d CellUtil.createCell(rowKey, columnFamily, columnQualifier,\n-          // set the cell timestamp\n-          cellTimeStamp,\n-          // KeyValue Type minimum\n-          TimelineEntitySchemaConstants.ZERO_BYTES,\n+    if (timestamp \u003d\u003d null) {\n+      p.addColumn(columnFamilyBytes, columnQualifier,\n           GenericObjectMapper.write(inputValue));\n-      p \u003d new Put(rowKey);\n-      p.add(cell);\n+    } else {\n+      p.addColumn(columnFamilyBytes, columnQualifier, timestamp,\n+          GenericObjectMapper.write(inputValue));\n     }\n-    if (p !\u003d null) {\n-      table.mutate(p);\n-    }\n-\n+    tableMutator.mutate(p);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void store(byte[] rowKey, TypedBufferedMutator\u003c?\u003e tableMutator,\n      byte[] columnQualifier, Long timestamp, Object inputValue)\n      throws IOException {\n    if ((rowKey \u003d\u003d null) || (columnQualifier \u003d\u003d null) || (inputValue \u003d\u003d null)) {\n      return;\n    }\n    Put p \u003d new Put(rowKey);\n\n    if (timestamp \u003d\u003d null) {\n      p.addColumn(columnFamilyBytes, columnQualifier,\n          GenericObjectMapper.write(inputValue));\n    } else {\n      p.addColumn(columnFamilyBytes, columnQualifier, timestamp,\n          GenericObjectMapper.write(inputValue));\n    }\n    tableMutator.mutate(p);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/common/ColumnHelper.java",
          "extendedDetails": {
            "oldValue": "[public, static]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3706. Generalize native HBase writer for additional tables (Joep Rottinghuis via sjlee)\n\n(cherry picked from commit 9137aeae0dec83f9eff40d12cae712dfd508c0c5)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "92d90c3a243134177f192d1d473dd606c79a91fc",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "6b445a5ccb9826ab9f72ce187c3f93aadfd8b0c0",
          "commitAuthorOld": "Sangjin Lee",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,40 +1,17 @@\n-  public static void store(byte[] rowKey, BufferedMutator table, byte[] columnFamily,\n-      byte[] columnPrefix, byte[] columnQualifier, Object inputValue,\n-      Long cellTimeStamp) throws IOException {\n-    if ((rowKey \u003d\u003d null) || (table \u003d\u003d null) || (columnFamily \u003d\u003d null)\n-        || (columnQualifier \u003d\u003d null) || (inputValue \u003d\u003d null)) {\n+  public void store(byte[] rowKey, TypedBufferedMutator\u003c?\u003e tableMutator,\n+      byte[] columnQualifier, Long timestamp, Object inputValue)\n+      throws IOException {\n+    if ((rowKey \u003d\u003d null) || (columnQualifier \u003d\u003d null) || (inputValue \u003d\u003d null)) {\n       return;\n     }\n+    Put p \u003d new Put(rowKey);\n \n-    Put p \u003d null;\n-    if (cellTimeStamp \u003d\u003d null) {\n-      if (columnPrefix !\u003d null) {\n-        // store with prefix\n-        p \u003d new Put(rowKey);\n-        p.addColumn(\n-            columnFamily,\n-            join(TimelineEntitySchemaConstants.ROW_KEY_SEPARATOR_BYTES,\n-                columnPrefix, columnQualifier), GenericObjectMapper\n-                .write(inputValue));\n-      } else {\n-        // store without prefix\n-        p \u003d new Put(rowKey);\n-        p.addColumn(columnFamily, columnQualifier,\n-            GenericObjectMapper.write(inputValue));\n-      }\n-    } else {\n-      // store with cell timestamp\n-      Cell cell \u003d CellUtil.createCell(rowKey, columnFamily, columnQualifier,\n-          // set the cell timestamp\n-          cellTimeStamp,\n-          // KeyValue Type minimum\n-          TimelineEntitySchemaConstants.ZERO_BYTES,\n+    if (timestamp \u003d\u003d null) {\n+      p.addColumn(columnFamilyBytes, columnQualifier,\n           GenericObjectMapper.write(inputValue));\n-      p \u003d new Put(rowKey);\n-      p.add(cell);\n+    } else {\n+      p.addColumn(columnFamilyBytes, columnQualifier, timestamp,\n+          GenericObjectMapper.write(inputValue));\n     }\n-    if (p !\u003d null) {\n-      table.mutate(p);\n-    }\n-\n+    tableMutator.mutate(p);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void store(byte[] rowKey, TypedBufferedMutator\u003c?\u003e tableMutator,\n      byte[] columnQualifier, Long timestamp, Object inputValue)\n      throws IOException {\n    if ((rowKey \u003d\u003d null) || (columnQualifier \u003d\u003d null) || (inputValue \u003d\u003d null)) {\n      return;\n    }\n    Put p \u003d new Put(rowKey);\n\n    if (timestamp \u003d\u003d null) {\n      p.addColumn(columnFamilyBytes, columnQualifier,\n          GenericObjectMapper.write(inputValue));\n    } else {\n      p.addColumn(columnFamilyBytes, columnQualifier, timestamp,\n          GenericObjectMapper.write(inputValue));\n    }\n    tableMutator.mutate(p);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/common/ColumnHelper.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-3706. Generalize native HBase writer for additional tables (Joep Rottinghuis via sjlee)\n\n(cherry picked from commit 9137aeae0dec83f9eff40d12cae712dfd508c0c5)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "92d90c3a243134177f192d1d473dd606c79a91fc",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "6b445a5ccb9826ab9f72ce187c3f93aadfd8b0c0",
          "commitAuthorOld": "Sangjin Lee",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,40 +1,17 @@\n-  public static void store(byte[] rowKey, BufferedMutator table, byte[] columnFamily,\n-      byte[] columnPrefix, byte[] columnQualifier, Object inputValue,\n-      Long cellTimeStamp) throws IOException {\n-    if ((rowKey \u003d\u003d null) || (table \u003d\u003d null) || (columnFamily \u003d\u003d null)\n-        || (columnQualifier \u003d\u003d null) || (inputValue \u003d\u003d null)) {\n+  public void store(byte[] rowKey, TypedBufferedMutator\u003c?\u003e tableMutator,\n+      byte[] columnQualifier, Long timestamp, Object inputValue)\n+      throws IOException {\n+    if ((rowKey \u003d\u003d null) || (columnQualifier \u003d\u003d null) || (inputValue \u003d\u003d null)) {\n       return;\n     }\n+    Put p \u003d new Put(rowKey);\n \n-    Put p \u003d null;\n-    if (cellTimeStamp \u003d\u003d null) {\n-      if (columnPrefix !\u003d null) {\n-        // store with prefix\n-        p \u003d new Put(rowKey);\n-        p.addColumn(\n-            columnFamily,\n-            join(TimelineEntitySchemaConstants.ROW_KEY_SEPARATOR_BYTES,\n-                columnPrefix, columnQualifier), GenericObjectMapper\n-                .write(inputValue));\n-      } else {\n-        // store without prefix\n-        p \u003d new Put(rowKey);\n-        p.addColumn(columnFamily, columnQualifier,\n-            GenericObjectMapper.write(inputValue));\n-      }\n-    } else {\n-      // store with cell timestamp\n-      Cell cell \u003d CellUtil.createCell(rowKey, columnFamily, columnQualifier,\n-          // set the cell timestamp\n-          cellTimeStamp,\n-          // KeyValue Type minimum\n-          TimelineEntitySchemaConstants.ZERO_BYTES,\n+    if (timestamp \u003d\u003d null) {\n+      p.addColumn(columnFamilyBytes, columnQualifier,\n           GenericObjectMapper.write(inputValue));\n-      p \u003d new Put(rowKey);\n-      p.add(cell);\n+    } else {\n+      p.addColumn(columnFamilyBytes, columnQualifier, timestamp,\n+          GenericObjectMapper.write(inputValue));\n     }\n-    if (p !\u003d null) {\n-      table.mutate(p);\n-    }\n-\n+    tableMutator.mutate(p);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void store(byte[] rowKey, TypedBufferedMutator\u003c?\u003e tableMutator,\n      byte[] columnQualifier, Long timestamp, Object inputValue)\n      throws IOException {\n    if ((rowKey \u003d\u003d null) || (columnQualifier \u003d\u003d null) || (inputValue \u003d\u003d null)) {\n      return;\n    }\n    Put p \u003d new Put(rowKey);\n\n    if (timestamp \u003d\u003d null) {\n      p.addColumn(columnFamilyBytes, columnQualifier,\n          GenericObjectMapper.write(inputValue));\n    } else {\n      p.addColumn(columnFamilyBytes, columnQualifier, timestamp,\n          GenericObjectMapper.write(inputValue));\n    }\n    tableMutator.mutate(p);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/common/ColumnHelper.java",
          "extendedDetails": {
            "oldValue": "[rowKey-byte[], table-BufferedMutator, columnFamily-byte[], columnPrefix-byte[], columnQualifier-byte[], inputValue-Object, cellTimeStamp-Long]",
            "newValue": "[rowKey-byte[], tableMutator-TypedBufferedMutator\u003c?\u003e, columnQualifier-byte[], timestamp-Long, inputValue-Object]"
          }
        }
      ]
    },
    "5a4278ccbd22b50ea1e80d28c3eea1777ffc2875": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3411. [Storage implementation] explore the native HBase write schema for storage (Vrushali C via sjlee)\n\n(cherry picked from commit 7a3068854d27eadae1c57545988f5b2029bf119a)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "5a4278ccbd22b50ea1e80d28c3eea1777ffc2875",
      "commitAuthor": "Sangjin Lee",
      "diff": "@@ -0,0 +1,40 @@\n+  public static void store(byte[] rowKey, BufferedMutator table, byte[] columnFamily,\n+      byte[] columnPrefix, byte[] columnQualifier, Object inputValue,\n+      Long cellTimeStamp) throws IOException {\n+    if ((rowKey \u003d\u003d null) || (table \u003d\u003d null) || (columnFamily \u003d\u003d null)\n+        || (columnQualifier \u003d\u003d null) || (inputValue \u003d\u003d null)) {\n+      return;\n+    }\n+\n+    Put p \u003d null;\n+    if (cellTimeStamp \u003d\u003d null) {\n+      if (columnPrefix !\u003d null) {\n+        // store with prefix\n+        p \u003d new Put(rowKey);\n+        p.addColumn(\n+            columnFamily,\n+            join(TimelineEntitySchemaConstants.ROW_KEY_SEPARATOR_BYTES,\n+                columnPrefix, columnQualifier), GenericObjectMapper\n+                .write(inputValue));\n+      } else {\n+        // store without prefix\n+        p \u003d new Put(rowKey);\n+        p.addColumn(columnFamily, columnQualifier,\n+            GenericObjectMapper.write(inputValue));\n+      }\n+    } else {\n+      // store with cell timestamp\n+      Cell cell \u003d CellUtil.createCell(rowKey, columnFamily, columnQualifier,\n+          // set the cell timestamp\n+          cellTimeStamp,\n+          // KeyValue Type minimum\n+          TimelineEntitySchemaConstants.ZERO_BYTES,\n+          GenericObjectMapper.write(inputValue));\n+      p \u003d new Put(rowKey);\n+      p.add(cell);\n+    }\n+    if (p !\u003d null) {\n+      table.mutate(p);\n+    }\n+\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static void store(byte[] rowKey, BufferedMutator table, byte[] columnFamily,\n      byte[] columnPrefix, byte[] columnQualifier, Object inputValue,\n      Long cellTimeStamp) throws IOException {\n    if ((rowKey \u003d\u003d null) || (table \u003d\u003d null) || (columnFamily \u003d\u003d null)\n        || (columnQualifier \u003d\u003d null) || (inputValue \u003d\u003d null)) {\n      return;\n    }\n\n    Put p \u003d null;\n    if (cellTimeStamp \u003d\u003d null) {\n      if (columnPrefix !\u003d null) {\n        // store with prefix\n        p \u003d new Put(rowKey);\n        p.addColumn(\n            columnFamily,\n            join(TimelineEntitySchemaConstants.ROW_KEY_SEPARATOR_BYTES,\n                columnPrefix, columnQualifier), GenericObjectMapper\n                .write(inputValue));\n      } else {\n        // store without prefix\n        p \u003d new Put(rowKey);\n        p.addColumn(columnFamily, columnQualifier,\n            GenericObjectMapper.write(inputValue));\n      }\n    } else {\n      // store with cell timestamp\n      Cell cell \u003d CellUtil.createCell(rowKey, columnFamily, columnQualifier,\n          // set the cell timestamp\n          cellTimeStamp,\n          // KeyValue Type minimum\n          TimelineEntitySchemaConstants.ZERO_BYTES,\n          GenericObjectMapper.write(inputValue));\n      p \u003d new Put(rowKey);\n      p.add(cell);\n    }\n    if (p !\u003d null) {\n      table.mutate(p);\n    }\n\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/TimelineWriterUtils.java"
    }
  }
}