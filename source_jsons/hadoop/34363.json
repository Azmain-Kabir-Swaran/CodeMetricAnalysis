{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LocalResourcesTrackerImpl.java",
  "functionName": "isResourcePresent",
  "functionId": "isResourcePresent___rsrc-LocalizedResource",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/LocalResourcesTrackerImpl.java",
  "functionStartLine": 335,
  "functionEndLine": 347,
  "numCommitsSeen": 22,
  "timeTaken": 1847,
  "changeHistory": [
    "1dbd8e34a7d97c4d8586da79c980d8f2e0aad61d",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "e217a05255497fcf243ad7b379553db7fd0a2493"
  ],
  "changeHistoryShort": {
    "1dbd8e34a7d97c4d8586da79c980d8f2e0aad61d": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "e217a05255497fcf243ad7b379553db7fd0a2493": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1dbd8e34a7d97c4d8586da79c980d8f2e0aad61d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3591. Resource localization on a bad disk causes subsequent containers failure. Contributed by Lavkesh Lahngir.\n",
      "commitDate": "06/09/15 11:02 PM",
      "commitName": "1dbd8e34a7d97c4d8586da79c980d8f2e0aad61d",
      "commitAuthor": "Varun Vasudev",
      "commitDateOld": "30/05/14 8:37 AM",
      "commitNameOld": "66598697a6e777615334ebde5ba7738135da83ae",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 464.6,
      "commitsBetweenForRepo": 3759,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,13 @@\n   public boolean isResourcePresent(LocalizedResource rsrc) {\n     boolean ret \u003d true;\n     if (rsrc.getState() \u003d\u003d ResourceState.LOCALIZED) {\n       File file \u003d new File(rsrc.getLocalPath().toUri().getRawPath().\n         toString());\n       if (!file.exists()) {\n         ret \u003d false;\n+      } else if (dirsHandler !\u003d null) {\n+        ret \u003d checkLocalResource(rsrc);\n       }\n     }\n     return ret;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean isResourcePresent(LocalizedResource rsrc) {\n    boolean ret \u003d true;\n    if (rsrc.getState() \u003d\u003d ResourceState.LOCALIZED) {\n      File file \u003d new File(rsrc.getLocalPath().toUri().getRawPath().\n        toString());\n      if (!file.exists()) {\n        ret \u003d false;\n      } else if (dirsHandler !\u003d null) {\n        ret \u003d checkLocalResource(rsrc);\n      }\n    }\n    return ret;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/LocalResourcesTrackerImpl.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public boolean isResourcePresent(LocalizedResource rsrc) {\n    boolean ret \u003d true;\n    if (rsrc.getState() \u003d\u003d ResourceState.LOCALIZED) {\n      File file \u003d new File(rsrc.getLocalPath().toUri().getRawPath().toString());\n      if (!file.exists()) {\n        ret \u003d false;\n      }\n    }\n    return ret;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/LocalResourcesTrackerImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/LocalResourcesTrackerImpl.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/LocalResourcesTrackerImpl.java"
      }
    },
    "e217a05255497fcf243ad7b379553db7fd0a2493": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-4342. Distributed Cache gives inconsistent result if cache files get deleted from tasktracker. (mayank_bansal via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1367352 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/07/12 3:56 PM",
      "commitName": "e217a05255497fcf243ad7b379553db7fd0a2493",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,10 @@\n+  public boolean isResourcePresent(LocalizedResource rsrc) {\n+    boolean ret \u003d true;\n+    if (rsrc.getState() \u003d\u003d ResourceState.LOCALIZED) {\n+      File file \u003d new File(rsrc.getLocalPath().toUri().getRawPath().toString());\n+      if (!file.exists()) {\n+        ret \u003d false;\n+      }\n+    }\n+    return ret;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean isResourcePresent(LocalizedResource rsrc) {\n    boolean ret \u003d true;\n    if (rsrc.getState() \u003d\u003d ResourceState.LOCALIZED) {\n      File file \u003d new File(rsrc.getLocalPath().toUri().getRawPath().toString());\n      if (!file.exists()) {\n        ret \u003d false;\n      }\n    }\n    return ret;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/LocalResourcesTrackerImpl.java"
    }
  }
}