{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HamletGen.java",
  "functionName": "genCurElementMethod",
  "functionId": "genCurElementMethod___className-String__method-Method__indent-int",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/hamlet/HamletGen.java",
  "functionStartLine": 284,
  "functionEndLine": 385,
  "numCommitsSeen": 8,
  "timeTaken": 7058,
  "changeHistory": [
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  void genCurElementMethod(String className, Method method, int indent) {\n    String methodName \u003d method.getName();\n    Class\u003c?\u003e[] params \u003d method.getParameterTypes();\n    if (topMode || params.length \u003e 0) {\n      echo(indent, \"\\n\",\n         \"@Override\\n\",\n         \"public \", className, topMode ? \" \" : \"\u003cT\u003e \", methodName, \"(\");\n    }\n    if (params.length \u003d\u003d 0) {\n      if (topMode) {\n        puts(0, \") {\");\n        puts(indent, \"  return this;\\n\", \"}\");\n      }\n    } else if (params.length \u003d\u003d 1) {\n      if (methodName.equals(\"base\")) {\n        puts(0, \"String href) {\");\n        puts(indent,\n             \"  return base().$href(href)._();\\n\", \"}\");\n      } else if (methodName.equals(\"script\")) {\n        puts(0, \"String src) {\");\n        puts(indent,\n             \"  return setScriptSrc(script(), src)._();\\n\", \"}\");\n      } else if (methodName.equals(\"style\")) {\n        puts(0, \"Object... lines) {\");\n        puts(indent,\n             \"  return style().$type(\\\"text/css\\\")._(lines)._();\\n\", \"}\");\n      } else if (methodName.equals(\"img\")) {\n        puts(0, \"String src) {\");\n        puts(indent,\n             \"  return \", methodName, \"().$src(src)._();\\n\", \"}\");\n      } else if (methodName.equals(\"br\") || methodName.equals(\"hr\") ||\n                 methodName.equals(\"col\")) {\n        puts(0, \"String selector) {\");\n        puts(indent,\n             \"  return setSelector(\", methodName, \"(), selector)._();\\n\", \"}\");\n      }  else if (methodName.equals(\"link\")) {\n        puts(0, \"String href) {\");\n        puts(indent,\n             \"  return setLinkHref(\", methodName, \"(), href)._();\\n\", \"}\");\n      } else if (methodName.equals(\"_\")) {\n        if (params[0].getSimpleName().equals(\"Class\")) {\n          puts(0, \"Class\u003c? extends SubView\u003e cls) {\");\n          puts(indent,\n               \"  \", topMode ? \"subView\" : \"_v\", \"(cls);\\n\",\n               \"  return this;\\n\", \"}\");\n        } else {\n          puts(0, \"Object... lines) {\");\n          puts(indent,\n               \"  _p(\", needsEscaping(className), \", lines);\\n\",\n               \"  return this;\\n\", \"}\");\n        }\n      } else if (methodName.equals(\"_r\")) {\n        puts(0, \"Object... lines) {\");\n        puts(indent,\n             \"  _p(false, lines);\\n\",\n             \"  return this;\\n\", \"}\");\n      } else {\n        puts(0, \"String cdata) {\");\n        puts(indent,\n             \"  return \", methodName, \"()._(cdata)._();\\n\", \"}\");\n      }\n    } else if (params.length \u003d\u003d 2) {\n      if (methodName.equals(\"meta\")) {\n        puts(0, \"String name, String content) {\");\n        puts(indent,\n             \"  return meta().$name(name).$content(content)._();\\n\", \"}\");\n      } else if (methodName.equals(\"meta_http\")) {\n        puts(0, \"String header, String content) {\");\n        puts(indent,\n             \"  return meta().$http_equiv(header).$content(content)._();\\n\",\n             \"}\");\n      } else if (methodName.equals(\"a\")) {\n        puts(0, \"String href, String anchorText) {\");\n        puts(indent,\n             \"  return a().$href(href)._(anchorText)._();\\n\", \"}\");\n      } else if (methodName.equals(\"bdo\")) {\n        puts(0, \"Dir dir, String cdata) {\");\n        puts(indent, \"  return bdo().$dir(dir)._(cdata)._();\\n\", \"}\");\n      } else if (methodName.equals(\"label\")) {\n        puts(0, \"String forId, String cdata) {\");\n        puts(indent, \"  return label().$for(forId)._(cdata)._();\\n\", \"}\");\n      } else if (methodName.equals(\"param\")) {\n        puts(0, \"String name, String value) {\");\n        puts(indent,\n             \"  return param().$name(name).$value(value)._();\\n\", \"}\");\n      } else {\n        puts(0, \"String selector, String cdata) {\");\n        puts(indent,\n             \"  return setSelector(\", methodName,\n             \"(), selector)._(cdata)._();\\n\", \"}\");\n      } \n    } else if (params.length \u003d\u003d 3) {\n      if (methodName.equals(\"a\")) {\n        puts(0, \"String selector, String href, String anchorText) {\");\n        puts(indent,\n             \"  return setSelector(a(), selector)\",\n             \".$href(href)._(anchorText)._();\\n\", \"}\");\n      }\n    } else {\n      throwUnhandled(className, method);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/hamlet/HamletGen.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/hamlet/HamletGen.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/hamlet/HamletGen.java"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  void genCurElementMethod(String className, Method method, int indent) {\n    String methodName \u003d method.getName();\n    Class\u003c?\u003e[] params \u003d method.getParameterTypes();\n    if (topMode || params.length \u003e 0) {\n      echo(indent, \"\\n\",\n         \"@Override\\n\",\n         \"public \", className, topMode ? \" \" : \"\u003cT\u003e \", methodName, \"(\");\n    }\n    if (params.length \u003d\u003d 0) {\n      if (topMode) {\n        puts(0, \") {\");\n        puts(indent, \"  return this;\\n\", \"}\");\n      }\n    } else if (params.length \u003d\u003d 1) {\n      if (methodName.equals(\"base\")) {\n        puts(0, \"String href) {\");\n        puts(indent,\n             \"  return base().$href(href)._();\\n\", \"}\");\n      } else if (methodName.equals(\"script\")) {\n        puts(0, \"String src) {\");\n        puts(indent,\n             \"  return setScriptSrc(script(), src)._();\\n\", \"}\");\n      } else if (methodName.equals(\"style\")) {\n        puts(0, \"Object... lines) {\");\n        puts(indent,\n             \"  return style().$type(\\\"text/css\\\")._(lines)._();\\n\", \"}\");\n      } else if (methodName.equals(\"img\")) {\n        puts(0, \"String src) {\");\n        puts(indent,\n             \"  return \", methodName, \"().$src(src)._();\\n\", \"}\");\n      } else if (methodName.equals(\"br\") || methodName.equals(\"hr\") ||\n                 methodName.equals(\"col\")) {\n        puts(0, \"String selector) {\");\n        puts(indent,\n             \"  return setSelector(\", methodName, \"(), selector)._();\\n\", \"}\");\n      }  else if (methodName.equals(\"link\")) {\n        puts(0, \"String href) {\");\n        puts(indent,\n             \"  return setLinkHref(\", methodName, \"(), href)._();\\n\", \"}\");\n      } else if (methodName.equals(\"_\")) {\n        if (params[0].getSimpleName().equals(\"Class\")) {\n          puts(0, \"Class\u003c? extends SubView\u003e cls) {\");\n          puts(indent,\n               \"  \", topMode ? \"subView\" : \"_v\", \"(cls);\\n\",\n               \"  return this;\\n\", \"}\");\n        } else {\n          puts(0, \"Object... lines) {\");\n          puts(indent,\n               \"  _p(\", needsEscaping(className), \", lines);\\n\",\n               \"  return this;\\n\", \"}\");\n        }\n      } else if (methodName.equals(\"_r\")) {\n        puts(0, \"Object... lines) {\");\n        puts(indent,\n             \"  _p(false, lines);\\n\",\n             \"  return this;\\n\", \"}\");\n      } else {\n        puts(0, \"String cdata) {\");\n        puts(indent,\n             \"  return \", methodName, \"()._(cdata)._();\\n\", \"}\");\n      }\n    } else if (params.length \u003d\u003d 2) {\n      if (methodName.equals(\"meta\")) {\n        puts(0, \"String name, String content) {\");\n        puts(indent,\n             \"  return meta().$name(name).$content(content)._();\\n\", \"}\");\n      } else if (methodName.equals(\"meta_http\")) {\n        puts(0, \"String header, String content) {\");\n        puts(indent,\n             \"  return meta().$http_equiv(header).$content(content)._();\\n\",\n             \"}\");\n      } else if (methodName.equals(\"a\")) {\n        puts(0, \"String href, String anchorText) {\");\n        puts(indent,\n             \"  return a().$href(href)._(anchorText)._();\\n\", \"}\");\n      } else if (methodName.equals(\"bdo\")) {\n        puts(0, \"Dir dir, String cdata) {\");\n        puts(indent, \"  return bdo().$dir(dir)._(cdata)._();\\n\", \"}\");\n      } else if (methodName.equals(\"label\")) {\n        puts(0, \"String forId, String cdata) {\");\n        puts(indent, \"  return label().$for(forId)._(cdata)._();\\n\", \"}\");\n      } else if (methodName.equals(\"param\")) {\n        puts(0, \"String name, String value) {\");\n        puts(indent,\n             \"  return param().$name(name).$value(value)._();\\n\", \"}\");\n      } else {\n        puts(0, \"String selector, String cdata) {\");\n        puts(indent,\n             \"  return setSelector(\", methodName,\n             \"(), selector)._(cdata)._();\\n\", \"}\");\n      } \n    } else if (params.length \u003d\u003d 3) {\n      if (methodName.equals(\"a\")) {\n        puts(0, \"String selector, String href, String anchorText) {\");\n        puts(indent,\n             \"  return setSelector(a(), selector)\",\n             \".$href(href)._(anchorText)._();\\n\", \"}\");\n      }\n    } else {\n      throwUnhandled(className, method);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/hamlet/HamletGen.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/hamlet/HamletGen.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/hamlet/HamletGen.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,102 @@\n+  void genCurElementMethod(String className, Method method, int indent) {\n+    String methodName \u003d method.getName();\n+    Class\u003c?\u003e[] params \u003d method.getParameterTypes();\n+    if (topMode || params.length \u003e 0) {\n+      echo(indent, \"\\n\",\n+         \"@Override\\n\",\n+         \"public \", className, topMode ? \" \" : \"\u003cT\u003e \", methodName, \"(\");\n+    }\n+    if (params.length \u003d\u003d 0) {\n+      if (topMode) {\n+        puts(0, \") {\");\n+        puts(indent, \"  return this;\\n\", \"}\");\n+      }\n+    } else if (params.length \u003d\u003d 1) {\n+      if (methodName.equals(\"base\")) {\n+        puts(0, \"String href) {\");\n+        puts(indent,\n+             \"  return base().$href(href)._();\\n\", \"}\");\n+      } else if (methodName.equals(\"script\")) {\n+        puts(0, \"String src) {\");\n+        puts(indent,\n+             \"  return setScriptSrc(script(), src)._();\\n\", \"}\");\n+      } else if (methodName.equals(\"style\")) {\n+        puts(0, \"Object... lines) {\");\n+        puts(indent,\n+             \"  return style().$type(\\\"text/css\\\")._(lines)._();\\n\", \"}\");\n+      } else if (methodName.equals(\"img\")) {\n+        puts(0, \"String src) {\");\n+        puts(indent,\n+             \"  return \", methodName, \"().$src(src)._();\\n\", \"}\");\n+      } else if (methodName.equals(\"br\") || methodName.equals(\"hr\") ||\n+                 methodName.equals(\"col\")) {\n+        puts(0, \"String selector) {\");\n+        puts(indent,\n+             \"  return setSelector(\", methodName, \"(), selector)._();\\n\", \"}\");\n+      }  else if (methodName.equals(\"link\")) {\n+        puts(0, \"String href) {\");\n+        puts(indent,\n+             \"  return setLinkHref(\", methodName, \"(), href)._();\\n\", \"}\");\n+      } else if (methodName.equals(\"_\")) {\n+        if (params[0].getSimpleName().equals(\"Class\")) {\n+          puts(0, \"Class\u003c? extends SubView\u003e cls) {\");\n+          puts(indent,\n+               \"  \", topMode ? \"subView\" : \"_v\", \"(cls);\\n\",\n+               \"  return this;\\n\", \"}\");\n+        } else {\n+          puts(0, \"Object... lines) {\");\n+          puts(indent,\n+               \"  _p(\", needsEscaping(className), \", lines);\\n\",\n+               \"  return this;\\n\", \"}\");\n+        }\n+      } else if (methodName.equals(\"_r\")) {\n+        puts(0, \"Object... lines) {\");\n+        puts(indent,\n+             \"  _p(false, lines);\\n\",\n+             \"  return this;\\n\", \"}\");\n+      } else {\n+        puts(0, \"String cdata) {\");\n+        puts(indent,\n+             \"  return \", methodName, \"()._(cdata)._();\\n\", \"}\");\n+      }\n+    } else if (params.length \u003d\u003d 2) {\n+      if (methodName.equals(\"meta\")) {\n+        puts(0, \"String name, String content) {\");\n+        puts(indent,\n+             \"  return meta().$name(name).$content(content)._();\\n\", \"}\");\n+      } else if (methodName.equals(\"meta_http\")) {\n+        puts(0, \"String header, String content) {\");\n+        puts(indent,\n+             \"  return meta().$http_equiv(header).$content(content)._();\\n\",\n+             \"}\");\n+      } else if (methodName.equals(\"a\")) {\n+        puts(0, \"String href, String anchorText) {\");\n+        puts(indent,\n+             \"  return a().$href(href)._(anchorText)._();\\n\", \"}\");\n+      } else if (methodName.equals(\"bdo\")) {\n+        puts(0, \"Dir dir, String cdata) {\");\n+        puts(indent, \"  return bdo().$dir(dir)._(cdata)._();\\n\", \"}\");\n+      } else if (methodName.equals(\"label\")) {\n+        puts(0, \"String forId, String cdata) {\");\n+        puts(indent, \"  return label().$for(forId)._(cdata)._();\\n\", \"}\");\n+      } else if (methodName.equals(\"param\")) {\n+        puts(0, \"String name, String value) {\");\n+        puts(indent,\n+             \"  return param().$name(name).$value(value)._();\\n\", \"}\");\n+      } else {\n+        puts(0, \"String selector, String cdata) {\");\n+        puts(indent,\n+             \"  return setSelector(\", methodName,\n+             \"(), selector)._(cdata)._();\\n\", \"}\");\n+      } \n+    } else if (params.length \u003d\u003d 3) {\n+      if (methodName.equals(\"a\")) {\n+        puts(0, \"String selector, String href, String anchorText) {\");\n+        puts(indent,\n+             \"  return setSelector(a(), selector)\",\n+             \".$href(href)._(anchorText)._();\\n\", \"}\");\n+      }\n+    } else {\n+      throwUnhandled(className, method);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  void genCurElementMethod(String className, Method method, int indent) {\n    String methodName \u003d method.getName();\n    Class\u003c?\u003e[] params \u003d method.getParameterTypes();\n    if (topMode || params.length \u003e 0) {\n      echo(indent, \"\\n\",\n         \"@Override\\n\",\n         \"public \", className, topMode ? \" \" : \"\u003cT\u003e \", methodName, \"(\");\n    }\n    if (params.length \u003d\u003d 0) {\n      if (topMode) {\n        puts(0, \") {\");\n        puts(indent, \"  return this;\\n\", \"}\");\n      }\n    } else if (params.length \u003d\u003d 1) {\n      if (methodName.equals(\"base\")) {\n        puts(0, \"String href) {\");\n        puts(indent,\n             \"  return base().$href(href)._();\\n\", \"}\");\n      } else if (methodName.equals(\"script\")) {\n        puts(0, \"String src) {\");\n        puts(indent,\n             \"  return setScriptSrc(script(), src)._();\\n\", \"}\");\n      } else if (methodName.equals(\"style\")) {\n        puts(0, \"Object... lines) {\");\n        puts(indent,\n             \"  return style().$type(\\\"text/css\\\")._(lines)._();\\n\", \"}\");\n      } else if (methodName.equals(\"img\")) {\n        puts(0, \"String src) {\");\n        puts(indent,\n             \"  return \", methodName, \"().$src(src)._();\\n\", \"}\");\n      } else if (methodName.equals(\"br\") || methodName.equals(\"hr\") ||\n                 methodName.equals(\"col\")) {\n        puts(0, \"String selector) {\");\n        puts(indent,\n             \"  return setSelector(\", methodName, \"(), selector)._();\\n\", \"}\");\n      }  else if (methodName.equals(\"link\")) {\n        puts(0, \"String href) {\");\n        puts(indent,\n             \"  return setLinkHref(\", methodName, \"(), href)._();\\n\", \"}\");\n      } else if (methodName.equals(\"_\")) {\n        if (params[0].getSimpleName().equals(\"Class\")) {\n          puts(0, \"Class\u003c? extends SubView\u003e cls) {\");\n          puts(indent,\n               \"  \", topMode ? \"subView\" : \"_v\", \"(cls);\\n\",\n               \"  return this;\\n\", \"}\");\n        } else {\n          puts(0, \"Object... lines) {\");\n          puts(indent,\n               \"  _p(\", needsEscaping(className), \", lines);\\n\",\n               \"  return this;\\n\", \"}\");\n        }\n      } else if (methodName.equals(\"_r\")) {\n        puts(0, \"Object... lines) {\");\n        puts(indent,\n             \"  _p(false, lines);\\n\",\n             \"  return this;\\n\", \"}\");\n      } else {\n        puts(0, \"String cdata) {\");\n        puts(indent,\n             \"  return \", methodName, \"()._(cdata)._();\\n\", \"}\");\n      }\n    } else if (params.length \u003d\u003d 2) {\n      if (methodName.equals(\"meta\")) {\n        puts(0, \"String name, String content) {\");\n        puts(indent,\n             \"  return meta().$name(name).$content(content)._();\\n\", \"}\");\n      } else if (methodName.equals(\"meta_http\")) {\n        puts(0, \"String header, String content) {\");\n        puts(indent,\n             \"  return meta().$http_equiv(header).$content(content)._();\\n\",\n             \"}\");\n      } else if (methodName.equals(\"a\")) {\n        puts(0, \"String href, String anchorText) {\");\n        puts(indent,\n             \"  return a().$href(href)._(anchorText)._();\\n\", \"}\");\n      } else if (methodName.equals(\"bdo\")) {\n        puts(0, \"Dir dir, String cdata) {\");\n        puts(indent, \"  return bdo().$dir(dir)._(cdata)._();\\n\", \"}\");\n      } else if (methodName.equals(\"label\")) {\n        puts(0, \"String forId, String cdata) {\");\n        puts(indent, \"  return label().$for(forId)._(cdata)._();\\n\", \"}\");\n      } else if (methodName.equals(\"param\")) {\n        puts(0, \"String name, String value) {\");\n        puts(indent,\n             \"  return param().$name(name).$value(value)._();\\n\", \"}\");\n      } else {\n        puts(0, \"String selector, String cdata) {\");\n        puts(indent,\n             \"  return setSelector(\", methodName,\n             \"(), selector)._(cdata)._();\\n\", \"}\");\n      } \n    } else if (params.length \u003d\u003d 3) {\n      if (methodName.equals(\"a\")) {\n        puts(0, \"String selector, String href, String anchorText) {\");\n        puts(indent,\n             \"  return setSelector(a(), selector)\",\n             \".$href(href)._(anchorText)._();\\n\", \"}\");\n      }\n    } else {\n      throwUnhandled(className, method);\n    }\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/hamlet/HamletGen.java"
    }
  }
}