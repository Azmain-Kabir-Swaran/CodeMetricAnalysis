{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SnappyDecompressor.java",
  "functionName": "decompress",
  "functionId": "decompress___b-byte[]__off-int__len-int",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/compress/snappy/SnappyDecompressor.java",
  "functionStartLine": 348,
  "functionEndLine": 351,
  "numCommitsSeen": 12,
  "timeTaken": 1256,
  "changeHistory": [
    "8f9ab998e273259c1e7a3ed53ba37d767e02b6bb",
    "d9ba056bdb851138d0d25185d45c9f894080de24",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "8014dfa1dba66ae11a055e1e12099d0f6df94448"
  ],
  "changeHistoryShort": {
    "8f9ab998e273259c1e7a3ed53ba37d767e02b6bb": "Ymodifierchange",
    "d9ba056bdb851138d0d25185d45c9f894080de24": "Ymultichange(Yexceptionschange,Ybodychange)",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "8014dfa1dba66ae11a055e1e12099d0f6df94448": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8f9ab998e273259c1e7a3ed53ba37d767e02b6bb": {
      "type": "Ymodifierchange",
      "commitMessage": "HADOOP-10681. Remove unnecessary synchronization from Snappy \u0026 Zlib codecs. Contributed by Gopal Vijayaraghavan.\n",
      "commitDate": "05/10/14 7:38 AM",
      "commitName": "8f9ab998e273259c1e7a3ed53ba37d767e02b6bb",
      "commitAuthor": "Arun C. Murthy",
      "commitDateOld": "19/11/13 11:29 AM",
      "commitNameOld": "d9ba056bdb851138d0d25185d45c9f894080de24",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 319.8,
      "commitsBetweenForRepo": 2444,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,4 +1,4 @@\n-    public synchronized int decompress(byte[] b, int off, int len) {\n+    public int decompress(byte[] b, int off, int len) {\n       throw new UnsupportedOperationException(\n           \"byte[] arrays are not supported for DirectDecompressor\");\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public int decompress(byte[] b, int off, int len) {\n      throw new UnsupportedOperationException(\n          \"byte[] arrays are not supported for DirectDecompressor\");\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/compress/snappy/SnappyDecompressor.java",
      "extendedDetails": {
        "oldValue": "[public, synchronized]",
        "newValue": "[public]"
      }
    },
    "d9ba056bdb851138d0d25185d45c9f894080de24": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "HADOOP-10047. Add a direct-buffer based apis for compression. Contributed by Gopal V.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1543542 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/11/13 11:29 AM",
      "commitName": "d9ba056bdb851138d0d25185d45c9f894080de24",
      "commitAuthor": "Arun Murthy",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "HADOOP-10047. Add a direct-buffer based apis for compression. Contributed by Gopal V.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1543542 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "19/11/13 11:29 AM",
          "commitName": "d9ba056bdb851138d0d25185d45c9f894080de24",
          "commitAuthor": "Arun Murthy",
          "commitDateOld": "02/10/12 5:06 PM",
          "commitNameOld": "fc54f57c59693ff6f3870fa7a28aa6160c63773a",
          "commitAuthorOld": "Eli Collins",
          "daysBetweenCommits": 412.81,
          "commitsBetweenForRepo": 2428,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,38 +1,4 @@\n-  public synchronized int decompress(byte[] b, int off, int len)\n-      throws IOException {\n-    if (b \u003d\u003d null) {\n-      throw new NullPointerException();\n-    }\n-    if (off \u003c 0 || len \u003c 0 || off \u003e b.length - len) {\n-      throw new ArrayIndexOutOfBoundsException();\n-    }\n-\n-    int n \u003d 0;\n-\n-    // Check if there is uncompressed data\n-    n \u003d uncompressedDirectBuf.remaining();\n-    if (n \u003e 0) {\n-      n \u003d Math.min(n, len);\n-      ((ByteBuffer) uncompressedDirectBuf).get(b, off, n);\n-      return n;\n-    }\n-    if (compressedDirectBufLen \u003e 0) {\n-      // Re-initialize the snappy\u0027s output direct buffer\n-      uncompressedDirectBuf.rewind();\n-      uncompressedDirectBuf.limit(directBufferSize);\n-\n-      // Decompress data\n-      n \u003d decompressBytesDirect();\n-      uncompressedDirectBuf.limit(n);\n-\n-      if (userBufLen \u003c\u003d 0) {\n-        finished \u003d true;\n-      }\n-\n-      // Get atmost \u0027len\u0027 bytes\n-      n \u003d Math.min(n, len);\n-      ((ByteBuffer) uncompressedDirectBuf).get(b, off, n);\n-    }\n-\n-    return n;\n-  }\n\\ No newline at end of file\n+    public synchronized int decompress(byte[] b, int off, int len) {\n+      throw new UnsupportedOperationException(\n+          \"byte[] arrays are not supported for DirectDecompressor\");\n+    }\n\\ No newline at end of file\n",
          "actualSource": "    public synchronized int decompress(byte[] b, int off, int len) {\n      throw new UnsupportedOperationException(\n          \"byte[] arrays are not supported for DirectDecompressor\");\n    }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/compress/snappy/SnappyDecompressor.java",
          "extendedDetails": {
            "oldValue": "[IOException]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-10047. Add a direct-buffer based apis for compression. Contributed by Gopal V.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1543542 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "19/11/13 11:29 AM",
          "commitName": "d9ba056bdb851138d0d25185d45c9f894080de24",
          "commitAuthor": "Arun Murthy",
          "commitDateOld": "02/10/12 5:06 PM",
          "commitNameOld": "fc54f57c59693ff6f3870fa7a28aa6160c63773a",
          "commitAuthorOld": "Eli Collins",
          "daysBetweenCommits": 412.81,
          "commitsBetweenForRepo": 2428,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,38 +1,4 @@\n-  public synchronized int decompress(byte[] b, int off, int len)\n-      throws IOException {\n-    if (b \u003d\u003d null) {\n-      throw new NullPointerException();\n-    }\n-    if (off \u003c 0 || len \u003c 0 || off \u003e b.length - len) {\n-      throw new ArrayIndexOutOfBoundsException();\n-    }\n-\n-    int n \u003d 0;\n-\n-    // Check if there is uncompressed data\n-    n \u003d uncompressedDirectBuf.remaining();\n-    if (n \u003e 0) {\n-      n \u003d Math.min(n, len);\n-      ((ByteBuffer) uncompressedDirectBuf).get(b, off, n);\n-      return n;\n-    }\n-    if (compressedDirectBufLen \u003e 0) {\n-      // Re-initialize the snappy\u0027s output direct buffer\n-      uncompressedDirectBuf.rewind();\n-      uncompressedDirectBuf.limit(directBufferSize);\n-\n-      // Decompress data\n-      n \u003d decompressBytesDirect();\n-      uncompressedDirectBuf.limit(n);\n-\n-      if (userBufLen \u003c\u003d 0) {\n-        finished \u003d true;\n-      }\n-\n-      // Get atmost \u0027len\u0027 bytes\n-      n \u003d Math.min(n, len);\n-      ((ByteBuffer) uncompressedDirectBuf).get(b, off, n);\n-    }\n-\n-    return n;\n-  }\n\\ No newline at end of file\n+    public synchronized int decompress(byte[] b, int off, int len) {\n+      throw new UnsupportedOperationException(\n+          \"byte[] arrays are not supported for DirectDecompressor\");\n+    }\n\\ No newline at end of file\n",
          "actualSource": "    public synchronized int decompress(byte[] b, int off, int len) {\n      throw new UnsupportedOperationException(\n          \"byte[] arrays are not supported for DirectDecompressor\");\n    }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/compress/snappy/SnappyDecompressor.java",
          "extendedDetails": {}
        }
      ]
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public synchronized int decompress(byte[] b, int off, int len)\n      throws IOException {\n    if (b \u003d\u003d null) {\n      throw new NullPointerException();\n    }\n    if (off \u003c 0 || len \u003c 0 || off \u003e b.length - len) {\n      throw new ArrayIndexOutOfBoundsException();\n    }\n\n    int n \u003d 0;\n\n    // Check if there is uncompressed data\n    n \u003d uncompressedDirectBuf.remaining();\n    if (n \u003e 0) {\n      n \u003d Math.min(n, len);\n      ((ByteBuffer) uncompressedDirectBuf).get(b, off, n);\n      return n;\n    }\n    if (compressedDirectBufLen \u003e 0) {\n      // Re-initialize the snappy\u0027s output direct buffer\n      uncompressedDirectBuf.rewind();\n      uncompressedDirectBuf.limit(directBufferSize);\n\n      // Decompress data\n      n \u003d decompressBytesDirect();\n      uncompressedDirectBuf.limit(n);\n\n      if (userBufLen \u003c\u003d 0) {\n        finished \u003d true;\n      }\n\n      // Get atmost \u0027len\u0027 bytes\n      n \u003d Math.min(n, len);\n      ((ByteBuffer) uncompressedDirectBuf).get(b, off, n);\n    }\n\n    return n;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/compress/snappy/SnappyDecompressor.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/io/compress/snappy/SnappyDecompressor.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/compress/snappy/SnappyDecompressor.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public synchronized int decompress(byte[] b, int off, int len)\n      throws IOException {\n    if (b \u003d\u003d null) {\n      throw new NullPointerException();\n    }\n    if (off \u003c 0 || len \u003c 0 || off \u003e b.length - len) {\n      throw new ArrayIndexOutOfBoundsException();\n    }\n\n    int n \u003d 0;\n\n    // Check if there is uncompressed data\n    n \u003d uncompressedDirectBuf.remaining();\n    if (n \u003e 0) {\n      n \u003d Math.min(n, len);\n      ((ByteBuffer) uncompressedDirectBuf).get(b, off, n);\n      return n;\n    }\n    if (compressedDirectBufLen \u003e 0) {\n      // Re-initialize the snappy\u0027s output direct buffer\n      uncompressedDirectBuf.rewind();\n      uncompressedDirectBuf.limit(directBufferSize);\n\n      // Decompress data\n      n \u003d decompressBytesDirect();\n      uncompressedDirectBuf.limit(n);\n\n      if (userBufLen \u003c\u003d 0) {\n        finished \u003d true;\n      }\n\n      // Get atmost \u0027len\u0027 bytes\n      n \u003d Math.min(n, len);\n      ((ByteBuffer) uncompressedDirectBuf).get(b, off, n);\n    }\n\n    return n;\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/io/compress/snappy/SnappyDecompressor.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/io/compress/snappy/SnappyDecompressor.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/io/compress/snappy/SnappyDecompressor.java"
      }
    },
    "8014dfa1dba66ae11a055e1e12099d0f6df94448": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7206. Support Snappy compression. Contributed by Issei Yoshida and Alejandro Abdelnur\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1139476 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/06/11 6:02 PM",
      "commitName": "8014dfa1dba66ae11a055e1e12099d0f6df94448",
      "commitAuthor": "Eli Collins",
      "diff": "@@ -0,0 +1,38 @@\n+  public synchronized int decompress(byte[] b, int off, int len)\n+      throws IOException {\n+    if (b \u003d\u003d null) {\n+      throw new NullPointerException();\n+    }\n+    if (off \u003c 0 || len \u003c 0 || off \u003e b.length - len) {\n+      throw new ArrayIndexOutOfBoundsException();\n+    }\n+\n+    int n \u003d 0;\n+\n+    // Check if there is uncompressed data\n+    n \u003d uncompressedDirectBuf.remaining();\n+    if (n \u003e 0) {\n+      n \u003d Math.min(n, len);\n+      ((ByteBuffer) uncompressedDirectBuf).get(b, off, n);\n+      return n;\n+    }\n+    if (compressedDirectBufLen \u003e 0) {\n+      // Re-initialize the snappy\u0027s output direct buffer\n+      uncompressedDirectBuf.rewind();\n+      uncompressedDirectBuf.limit(directBufferSize);\n+\n+      // Decompress data\n+      n \u003d decompressBytesDirect();\n+      uncompressedDirectBuf.limit(n);\n+\n+      if (userBufLen \u003c\u003d 0) {\n+        finished \u003d true;\n+      }\n+\n+      // Get atmost \u0027len\u0027 bytes\n+      n \u003d Math.min(n, len);\n+      ((ByteBuffer) uncompressedDirectBuf).get(b, off, n);\n+    }\n+\n+    return n;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized int decompress(byte[] b, int off, int len)\n      throws IOException {\n    if (b \u003d\u003d null) {\n      throw new NullPointerException();\n    }\n    if (off \u003c 0 || len \u003c 0 || off \u003e b.length - len) {\n      throw new ArrayIndexOutOfBoundsException();\n    }\n\n    int n \u003d 0;\n\n    // Check if there is uncompressed data\n    n \u003d uncompressedDirectBuf.remaining();\n    if (n \u003e 0) {\n      n \u003d Math.min(n, len);\n      ((ByteBuffer) uncompressedDirectBuf).get(b, off, n);\n      return n;\n    }\n    if (compressedDirectBufLen \u003e 0) {\n      // Re-initialize the snappy\u0027s output direct buffer\n      uncompressedDirectBuf.rewind();\n      uncompressedDirectBuf.limit(directBufferSize);\n\n      // Decompress data\n      n \u003d decompressBytesDirect();\n      uncompressedDirectBuf.limit(n);\n\n      if (userBufLen \u003c\u003d 0) {\n        finished \u003d true;\n      }\n\n      // Get atmost \u0027len\u0027 bytes\n      n \u003d Math.min(n, len);\n      ((ByteBuffer) uncompressedDirectBuf).get(b, off, n);\n    }\n\n    return n;\n  }",
      "path": "common/src/java/org/apache/hadoop/io/compress/snappy/SnappyDecompressor.java"
    }
  }
}