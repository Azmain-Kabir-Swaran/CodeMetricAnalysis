{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "UnmanagedAMPoolManager.java",
  "functionName": "createAndRegisterNewUAM",
  "functionId": "createAndRegisterNewUAM___registerRequest-RegisterApplicationMasterRequest__conf-Configuration__queueName-String__submitter-String__appNameSuffix-String__keepContainersAcrossApplicationAttempts-boolean__rmName-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/uam/UnmanagedAMPoolManager.java",
  "functionStartLine": 160,
  "functionEndLine": 194,
  "numCommitsSeen": 12,
  "timeTaken": 3765,
  "changeHistory": [
    "02b9bfdf9e4bd0b3c05ca5fd75399dedcb656e09",
    "d5f66888b8d767ee6706fab9950c194a1bf26d32",
    "859aa1f9d621d07693825e610bdc0149f7a2770a"
  ],
  "changeHistoryShort": {
    "02b9bfdf9e4bd0b3c05ca5fd75399dedcb656e09": "Ymultichange(Yparameterchange,Ybodychange)",
    "d5f66888b8d767ee6706fab9950c194a1bf26d32": "Ymultichange(Yparameterchange,Ybodychange)",
    "859aa1f9d621d07693825e610bdc0149f7a2770a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "02b9bfdf9e4bd0b3c05ca5fd75399dedcb656e09": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-8658. [AMRMProxy] Metrics for AMRMClientRelayer inside FederationInterceptor. Contributed by Young Chen.\n",
      "commitDate": "12/09/18 11:46 AM",
      "commitName": "02b9bfdf9e4bd0b3c05ca5fd75399dedcb656e09",
      "commitAuthor": "Giovanni Matteo Fumarola",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-8658. [AMRMProxy] Metrics for AMRMClientRelayer inside FederationInterceptor. Contributed by Young Chen.\n",
          "commitDate": "12/09/18 11:46 AM",
          "commitName": "02b9bfdf9e4bd0b3c05ca5fd75399dedcb656e09",
          "commitAuthor": "Giovanni Matteo Fumarola",
          "commitDateOld": "09/07/18 12:27 PM",
          "commitNameOld": "ea9b608237e7f2cf9b1e36b0f78c9674ec84096f",
          "commitAuthorOld": "Giovanni Matteo Fumarola",
          "daysBetweenCommits": 64.97,
          "commitsBetweenForRepo": 511,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,35 +1,35 @@\n   public String createAndRegisterNewUAM(\n       RegisterApplicationMasterRequest registerRequest, Configuration conf,\n       String queueName, String submitter, String appNameSuffix,\n-      boolean keepContainersAcrossApplicationAttempts)\n+      boolean keepContainersAcrossApplicationAttempts, String rmName)\n       throws YarnException, IOException {\n     ApplicationId appId \u003d null;\n     ApplicationClientProtocol rmClient;\n     try {\n       UserGroupInformation appSubmitter \u003d\n           UserGroupInformation.createRemoteUser(submitter);\n       rmClient \u003d AMRMClientUtils.createRMProxy(conf,\n           ApplicationClientProtocol.class, appSubmitter, null);\n \n       // Get a new appId from RM\n       GetNewApplicationResponse response \u003d\n           rmClient.getNewApplication(GetNewApplicationRequest.newInstance());\n       if (response \u003d\u003d null) {\n         throw new YarnException(\"getNewApplication got null response\");\n       }\n       appId \u003d response.getApplicationId();\n       LOG.info(\"Received new application ID {} from RM\", appId);\n     } finally {\n       rmClient \u003d null;\n     }\n \n     // Launch the UAM in RM\n     launchUAM(appId.toString(), conf, appId, queueName, submitter,\n-        appNameSuffix, keepContainersAcrossApplicationAttempts);\n+        appNameSuffix, keepContainersAcrossApplicationAttempts, rmName);\n \n     // Register the UAM application\n     registerApplicationMaster(appId.toString(), registerRequest);\n \n     // Returns the appId as uamId\n     return appId.toString();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public String createAndRegisterNewUAM(\n      RegisterApplicationMasterRequest registerRequest, Configuration conf,\n      String queueName, String submitter, String appNameSuffix,\n      boolean keepContainersAcrossApplicationAttempts, String rmName)\n      throws YarnException, IOException {\n    ApplicationId appId \u003d null;\n    ApplicationClientProtocol rmClient;\n    try {\n      UserGroupInformation appSubmitter \u003d\n          UserGroupInformation.createRemoteUser(submitter);\n      rmClient \u003d AMRMClientUtils.createRMProxy(conf,\n          ApplicationClientProtocol.class, appSubmitter, null);\n\n      // Get a new appId from RM\n      GetNewApplicationResponse response \u003d\n          rmClient.getNewApplication(GetNewApplicationRequest.newInstance());\n      if (response \u003d\u003d null) {\n        throw new YarnException(\"getNewApplication got null response\");\n      }\n      appId \u003d response.getApplicationId();\n      LOG.info(\"Received new application ID {} from RM\", appId);\n    } finally {\n      rmClient \u003d null;\n    }\n\n    // Launch the UAM in RM\n    launchUAM(appId.toString(), conf, appId, queueName, submitter,\n        appNameSuffix, keepContainersAcrossApplicationAttempts, rmName);\n\n    // Register the UAM application\n    registerApplicationMaster(appId.toString(), registerRequest);\n\n    // Returns the appId as uamId\n    return appId.toString();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/uam/UnmanagedAMPoolManager.java",
          "extendedDetails": {
            "oldValue": "[registerRequest-RegisterApplicationMasterRequest, conf-Configuration, queueName-String, submitter-String, appNameSuffix-String, keepContainersAcrossApplicationAttempts-boolean]",
            "newValue": "[registerRequest-RegisterApplicationMasterRequest, conf-Configuration, queueName-String, submitter-String, appNameSuffix-String, keepContainersAcrossApplicationAttempts-boolean, rmName-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-8658. [AMRMProxy] Metrics for AMRMClientRelayer inside FederationInterceptor. Contributed by Young Chen.\n",
          "commitDate": "12/09/18 11:46 AM",
          "commitName": "02b9bfdf9e4bd0b3c05ca5fd75399dedcb656e09",
          "commitAuthor": "Giovanni Matteo Fumarola",
          "commitDateOld": "09/07/18 12:27 PM",
          "commitNameOld": "ea9b608237e7f2cf9b1e36b0f78c9674ec84096f",
          "commitAuthorOld": "Giovanni Matteo Fumarola",
          "daysBetweenCommits": 64.97,
          "commitsBetweenForRepo": 511,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,35 +1,35 @@\n   public String createAndRegisterNewUAM(\n       RegisterApplicationMasterRequest registerRequest, Configuration conf,\n       String queueName, String submitter, String appNameSuffix,\n-      boolean keepContainersAcrossApplicationAttempts)\n+      boolean keepContainersAcrossApplicationAttempts, String rmName)\n       throws YarnException, IOException {\n     ApplicationId appId \u003d null;\n     ApplicationClientProtocol rmClient;\n     try {\n       UserGroupInformation appSubmitter \u003d\n           UserGroupInformation.createRemoteUser(submitter);\n       rmClient \u003d AMRMClientUtils.createRMProxy(conf,\n           ApplicationClientProtocol.class, appSubmitter, null);\n \n       // Get a new appId from RM\n       GetNewApplicationResponse response \u003d\n           rmClient.getNewApplication(GetNewApplicationRequest.newInstance());\n       if (response \u003d\u003d null) {\n         throw new YarnException(\"getNewApplication got null response\");\n       }\n       appId \u003d response.getApplicationId();\n       LOG.info(\"Received new application ID {} from RM\", appId);\n     } finally {\n       rmClient \u003d null;\n     }\n \n     // Launch the UAM in RM\n     launchUAM(appId.toString(), conf, appId, queueName, submitter,\n-        appNameSuffix, keepContainersAcrossApplicationAttempts);\n+        appNameSuffix, keepContainersAcrossApplicationAttempts, rmName);\n \n     // Register the UAM application\n     registerApplicationMaster(appId.toString(), registerRequest);\n \n     // Returns the appId as uamId\n     return appId.toString();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public String createAndRegisterNewUAM(\n      RegisterApplicationMasterRequest registerRequest, Configuration conf,\n      String queueName, String submitter, String appNameSuffix,\n      boolean keepContainersAcrossApplicationAttempts, String rmName)\n      throws YarnException, IOException {\n    ApplicationId appId \u003d null;\n    ApplicationClientProtocol rmClient;\n    try {\n      UserGroupInformation appSubmitter \u003d\n          UserGroupInformation.createRemoteUser(submitter);\n      rmClient \u003d AMRMClientUtils.createRMProxy(conf,\n          ApplicationClientProtocol.class, appSubmitter, null);\n\n      // Get a new appId from RM\n      GetNewApplicationResponse response \u003d\n          rmClient.getNewApplication(GetNewApplicationRequest.newInstance());\n      if (response \u003d\u003d null) {\n        throw new YarnException(\"getNewApplication got null response\");\n      }\n      appId \u003d response.getApplicationId();\n      LOG.info(\"Received new application ID {} from RM\", appId);\n    } finally {\n      rmClient \u003d null;\n    }\n\n    // Launch the UAM in RM\n    launchUAM(appId.toString(), conf, appId, queueName, submitter,\n        appNameSuffix, keepContainersAcrossApplicationAttempts, rmName);\n\n    // Register the UAM application\n    registerApplicationMaster(appId.toString(), registerRequest);\n\n    // Returns the appId as uamId\n    return appId.toString();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/uam/UnmanagedAMPoolManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "d5f66888b8d767ee6706fab9950c194a1bf26d32": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-6128. Add support for AMRMProxy HA. (Botong Huang via Subru).\n",
      "commitDate": "17/11/17 5:39 PM",
      "commitName": "d5f66888b8d767ee6706fab9950c194a1bf26d32",
      "commitAuthor": "Subru Krishnan",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-6128. Add support for AMRMProxy HA. (Botong Huang via Subru).\n",
          "commitDate": "17/11/17 5:39 PM",
          "commitName": "d5f66888b8d767ee6706fab9950c194a1bf26d32",
          "commitAuthor": "Subru Krishnan",
          "commitDateOld": "01/08/17 5:28 PM",
          "commitNameOld": "859aa1f9d621d07693825e610bdc0149f7a2770a",
          "commitAuthorOld": "Subru Krishnan",
          "daysBetweenCommits": 108.05,
          "commitsBetweenForRepo": 968,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,35 @@\n   public String createAndRegisterNewUAM(\n       RegisterApplicationMasterRequest registerRequest, Configuration conf,\n-      String queueName, String submitter, String appNameSuffix)\n+      String queueName, String submitter, String appNameSuffix,\n+      boolean keepContainersAcrossApplicationAttempts)\n       throws YarnException, IOException {\n     ApplicationId appId \u003d null;\n     ApplicationClientProtocol rmClient;\n     try {\n       UserGroupInformation appSubmitter \u003d\n           UserGroupInformation.createRemoteUser(submitter);\n       rmClient \u003d AMRMClientUtils.createRMProxy(conf,\n           ApplicationClientProtocol.class, appSubmitter, null);\n \n       // Get a new appId from RM\n       GetNewApplicationResponse response \u003d\n           rmClient.getNewApplication(GetNewApplicationRequest.newInstance());\n       if (response \u003d\u003d null) {\n         throw new YarnException(\"getNewApplication got null response\");\n       }\n       appId \u003d response.getApplicationId();\n       LOG.info(\"Received new application ID {} from RM\", appId);\n     } finally {\n       rmClient \u003d null;\n     }\n \n-    createAndRegisterNewUAM(appId.toString(), registerRequest, conf, appId,\n-        queueName, submitter, appNameSuffix);\n+    // Launch the UAM in RM\n+    launchUAM(appId.toString(), conf, appId, queueName, submitter,\n+        appNameSuffix, keepContainersAcrossApplicationAttempts);\n+\n+    // Register the UAM application\n+    registerApplicationMaster(appId.toString(), registerRequest);\n+\n+    // Returns the appId as uamId\n     return appId.toString();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public String createAndRegisterNewUAM(\n      RegisterApplicationMasterRequest registerRequest, Configuration conf,\n      String queueName, String submitter, String appNameSuffix,\n      boolean keepContainersAcrossApplicationAttempts)\n      throws YarnException, IOException {\n    ApplicationId appId \u003d null;\n    ApplicationClientProtocol rmClient;\n    try {\n      UserGroupInformation appSubmitter \u003d\n          UserGroupInformation.createRemoteUser(submitter);\n      rmClient \u003d AMRMClientUtils.createRMProxy(conf,\n          ApplicationClientProtocol.class, appSubmitter, null);\n\n      // Get a new appId from RM\n      GetNewApplicationResponse response \u003d\n          rmClient.getNewApplication(GetNewApplicationRequest.newInstance());\n      if (response \u003d\u003d null) {\n        throw new YarnException(\"getNewApplication got null response\");\n      }\n      appId \u003d response.getApplicationId();\n      LOG.info(\"Received new application ID {} from RM\", appId);\n    } finally {\n      rmClient \u003d null;\n    }\n\n    // Launch the UAM in RM\n    launchUAM(appId.toString(), conf, appId, queueName, submitter,\n        appNameSuffix, keepContainersAcrossApplicationAttempts);\n\n    // Register the UAM application\n    registerApplicationMaster(appId.toString(), registerRequest);\n\n    // Returns the appId as uamId\n    return appId.toString();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/uam/UnmanagedAMPoolManager.java",
          "extendedDetails": {
            "oldValue": "[registerRequest-RegisterApplicationMasterRequest, conf-Configuration, queueName-String, submitter-String, appNameSuffix-String]",
            "newValue": "[registerRequest-RegisterApplicationMasterRequest, conf-Configuration, queueName-String, submitter-String, appNameSuffix-String, keepContainersAcrossApplicationAttempts-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-6128. Add support for AMRMProxy HA. (Botong Huang via Subru).\n",
          "commitDate": "17/11/17 5:39 PM",
          "commitName": "d5f66888b8d767ee6706fab9950c194a1bf26d32",
          "commitAuthor": "Subru Krishnan",
          "commitDateOld": "01/08/17 5:28 PM",
          "commitNameOld": "859aa1f9d621d07693825e610bdc0149f7a2770a",
          "commitAuthorOld": "Subru Krishnan",
          "daysBetweenCommits": 108.05,
          "commitsBetweenForRepo": 968,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,35 @@\n   public String createAndRegisterNewUAM(\n       RegisterApplicationMasterRequest registerRequest, Configuration conf,\n-      String queueName, String submitter, String appNameSuffix)\n+      String queueName, String submitter, String appNameSuffix,\n+      boolean keepContainersAcrossApplicationAttempts)\n       throws YarnException, IOException {\n     ApplicationId appId \u003d null;\n     ApplicationClientProtocol rmClient;\n     try {\n       UserGroupInformation appSubmitter \u003d\n           UserGroupInformation.createRemoteUser(submitter);\n       rmClient \u003d AMRMClientUtils.createRMProxy(conf,\n           ApplicationClientProtocol.class, appSubmitter, null);\n \n       // Get a new appId from RM\n       GetNewApplicationResponse response \u003d\n           rmClient.getNewApplication(GetNewApplicationRequest.newInstance());\n       if (response \u003d\u003d null) {\n         throw new YarnException(\"getNewApplication got null response\");\n       }\n       appId \u003d response.getApplicationId();\n       LOG.info(\"Received new application ID {} from RM\", appId);\n     } finally {\n       rmClient \u003d null;\n     }\n \n-    createAndRegisterNewUAM(appId.toString(), registerRequest, conf, appId,\n-        queueName, submitter, appNameSuffix);\n+    // Launch the UAM in RM\n+    launchUAM(appId.toString(), conf, appId, queueName, submitter,\n+        appNameSuffix, keepContainersAcrossApplicationAttempts);\n+\n+    // Register the UAM application\n+    registerApplicationMaster(appId.toString(), registerRequest);\n+\n+    // Returns the appId as uamId\n     return appId.toString();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public String createAndRegisterNewUAM(\n      RegisterApplicationMasterRequest registerRequest, Configuration conf,\n      String queueName, String submitter, String appNameSuffix,\n      boolean keepContainersAcrossApplicationAttempts)\n      throws YarnException, IOException {\n    ApplicationId appId \u003d null;\n    ApplicationClientProtocol rmClient;\n    try {\n      UserGroupInformation appSubmitter \u003d\n          UserGroupInformation.createRemoteUser(submitter);\n      rmClient \u003d AMRMClientUtils.createRMProxy(conf,\n          ApplicationClientProtocol.class, appSubmitter, null);\n\n      // Get a new appId from RM\n      GetNewApplicationResponse response \u003d\n          rmClient.getNewApplication(GetNewApplicationRequest.newInstance());\n      if (response \u003d\u003d null) {\n        throw new YarnException(\"getNewApplication got null response\");\n      }\n      appId \u003d response.getApplicationId();\n      LOG.info(\"Received new application ID {} from RM\", appId);\n    } finally {\n      rmClient \u003d null;\n    }\n\n    // Launch the UAM in RM\n    launchUAM(appId.toString(), conf, appId, queueName, submitter,\n        appNameSuffix, keepContainersAcrossApplicationAttempts);\n\n    // Register the UAM application\n    registerApplicationMaster(appId.toString(), registerRequest);\n\n    // Returns the appId as uamId\n    return appId.toString();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/uam/UnmanagedAMPoolManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "859aa1f9d621d07693825e610bdc0149f7a2770a": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5531. UnmanagedAM pool manager for federating application across clusters. (Botong Huang via Subru).\n\n(cherry picked from commit 73bb2102ce4b82b3a3bed91319f7c8f067ddc3e8)\n",
      "commitDate": "01/08/17 5:28 PM",
      "commitName": "859aa1f9d621d07693825e610bdc0149f7a2770a",
      "commitAuthor": "Subru Krishnan",
      "diff": "@@ -0,0 +1,28 @@\n+  public String createAndRegisterNewUAM(\n+      RegisterApplicationMasterRequest registerRequest, Configuration conf,\n+      String queueName, String submitter, String appNameSuffix)\n+      throws YarnException, IOException {\n+    ApplicationId appId \u003d null;\n+    ApplicationClientProtocol rmClient;\n+    try {\n+      UserGroupInformation appSubmitter \u003d\n+          UserGroupInformation.createRemoteUser(submitter);\n+      rmClient \u003d AMRMClientUtils.createRMProxy(conf,\n+          ApplicationClientProtocol.class, appSubmitter, null);\n+\n+      // Get a new appId from RM\n+      GetNewApplicationResponse response \u003d\n+          rmClient.getNewApplication(GetNewApplicationRequest.newInstance());\n+      if (response \u003d\u003d null) {\n+        throw new YarnException(\"getNewApplication got null response\");\n+      }\n+      appId \u003d response.getApplicationId();\n+      LOG.info(\"Received new application ID {} from RM\", appId);\n+    } finally {\n+      rmClient \u003d null;\n+    }\n+\n+    createAndRegisterNewUAM(appId.toString(), registerRequest, conf, appId,\n+        queueName, submitter, appNameSuffix);\n+    return appId.toString();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public String createAndRegisterNewUAM(\n      RegisterApplicationMasterRequest registerRequest, Configuration conf,\n      String queueName, String submitter, String appNameSuffix)\n      throws YarnException, IOException {\n    ApplicationId appId \u003d null;\n    ApplicationClientProtocol rmClient;\n    try {\n      UserGroupInformation appSubmitter \u003d\n          UserGroupInformation.createRemoteUser(submitter);\n      rmClient \u003d AMRMClientUtils.createRMProxy(conf,\n          ApplicationClientProtocol.class, appSubmitter, null);\n\n      // Get a new appId from RM\n      GetNewApplicationResponse response \u003d\n          rmClient.getNewApplication(GetNewApplicationRequest.newInstance());\n      if (response \u003d\u003d null) {\n        throw new YarnException(\"getNewApplication got null response\");\n      }\n      appId \u003d response.getApplicationId();\n      LOG.info(\"Received new application ID {} from RM\", appId);\n    } finally {\n      rmClient \u003d null;\n    }\n\n    createAndRegisterNewUAM(appId.toString(), registerRequest, conf, appId,\n        queueName, submitter, appNameSuffix);\n    return appId.toString();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/uam/UnmanagedAMPoolManager.java"
    }
  }
}