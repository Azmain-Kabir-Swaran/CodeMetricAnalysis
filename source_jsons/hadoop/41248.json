{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "MaxRunningAppsEnforcer.java",
  "functionName": "canAppBeRunnable",
  "functionId": "canAppBeRunnable___queue-FSQueue__attempt-FSAppAttempt",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/MaxRunningAppsEnforcer.java",
  "functionStartLine": 64,
  "functionEndLine": 79,
  "numCommitsSeen": 19,
  "timeTaken": 2519,
  "changeHistory": [
    "59ee8b7a88603e94b5661a8d5d088f7aa99fe049",
    "f6ea9be5473ab66798b0536317d2f32c5348eb57",
    "6d5f8ebed60e59d772e0dcee0b069f8db95f6ccc",
    "61b6ed73f8a5a75951c7b355c673459874eef7c3"
  ],
  "changeHistoryShort": {
    "59ee8b7a88603e94b5661a8d5d088f7aa99fe049": "Ymultichange(Yparameterchange,Ybodychange)",
    "f6ea9be5473ab66798b0536317d2f32c5348eb57": "Ybodychange",
    "6d5f8ebed60e59d772e0dcee0b069f8db95f6ccc": "Ybodychange",
    "61b6ed73f8a5a75951c7b355c673459874eef7c3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "59ee8b7a88603e94b5661a8d5d088f7aa99fe049": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-4329. [YARN-5437] Allow fetching exact reason as to why a submitted app\nis in ACCEPTED state in Fair Scheduler (Contributed by Yufei Gu)\n",
      "commitDate": "09/11/16 1:11 PM",
      "commitName": "59ee8b7a88603e94b5661a8d5d088f7aa99fe049",
      "commitAuthor": "Daniel Templeton",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-4329. [YARN-5437] Allow fetching exact reason as to why a submitted app\nis in ACCEPTED state in Fair Scheduler (Contributed by Yufei Gu)\n",
          "commitDate": "09/11/16 1:11 PM",
          "commitName": "59ee8b7a88603e94b5661a8d5d088f7aa99fe049",
          "commitAuthor": "Daniel Templeton",
          "commitDateOld": "02/09/16 2:56 PM",
          "commitNameOld": "f6ea9be5473ab66798b0536317d2f32c5348eb57",
          "commitAuthorOld": "Karthik Kambatla",
          "daysBetweenCommits": 67.97,
          "commitsBetweenForRepo": 531,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,16 @@\n-  public boolean canAppBeRunnable(FSQueue queue, String user) {\n-    AllocationConfiguration allocConf \u003d scheduler.getAllocationConfiguration();\n-    Integer userNumRunnable \u003d usersNumRunnableApps.get(user);\n-    if (userNumRunnable \u003d\u003d null) {\n-      userNumRunnable \u003d 0;\n-    }\n-    if (userNumRunnable \u003e\u003d allocConf.getUserMaxApps(user)) {\n-      return false;\n-    }\n-    // Check queue and all parent queues\n-    while (queue !\u003d null) {\n-      if (queue.getNumRunnableApps() \u003e\u003d queue.getMaxRunningApps()) {\n-        return false;\n-      }\n-      queue \u003d queue.getParent();\n+  public boolean canAppBeRunnable(FSQueue queue, FSAppAttempt attempt) {\n+    boolean ret \u003d true;\n+    if (exceedUserMaxApps(attempt.getUser())) {\n+      attempt.updateAMContainerDiagnostics(AMState.INACTIVATED,\n+          \"The user \\\"\" + attempt.getUser() + \"\\\" has reached the maximum limit\"\n+              + \" of runnable applications.\");\n+      ret \u003d false;\n+    } else if (exceedQueueMaxRunningApps(queue)) {\n+      attempt.updateAMContainerDiagnostics(AMState.INACTIVATED,\n+          \"The queue \\\"\" + queue.getName() + \"\\\" has reached the maximum limit\"\n+              + \" of runnable applications.\");\n+      ret \u003d false;\n     }\n \n-    return true;\n+    return ret;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean canAppBeRunnable(FSQueue queue, FSAppAttempt attempt) {\n    boolean ret \u003d true;\n    if (exceedUserMaxApps(attempt.getUser())) {\n      attempt.updateAMContainerDiagnostics(AMState.INACTIVATED,\n          \"The user \\\"\" + attempt.getUser() + \"\\\" has reached the maximum limit\"\n              + \" of runnable applications.\");\n      ret \u003d false;\n    } else if (exceedQueueMaxRunningApps(queue)) {\n      attempt.updateAMContainerDiagnostics(AMState.INACTIVATED,\n          \"The queue \\\"\" + queue.getName() + \"\\\" has reached the maximum limit\"\n              + \" of runnable applications.\");\n      ret \u003d false;\n    }\n\n    return ret;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/MaxRunningAppsEnforcer.java",
          "extendedDetails": {
            "oldValue": "[queue-FSQueue, user-String]",
            "newValue": "[queue-FSQueue, attempt-FSAppAttempt]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4329. [YARN-5437] Allow fetching exact reason as to why a submitted app\nis in ACCEPTED state in Fair Scheduler (Contributed by Yufei Gu)\n",
          "commitDate": "09/11/16 1:11 PM",
          "commitName": "59ee8b7a88603e94b5661a8d5d088f7aa99fe049",
          "commitAuthor": "Daniel Templeton",
          "commitDateOld": "02/09/16 2:56 PM",
          "commitNameOld": "f6ea9be5473ab66798b0536317d2f32c5348eb57",
          "commitAuthorOld": "Karthik Kambatla",
          "daysBetweenCommits": 67.97,
          "commitsBetweenForRepo": 531,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,16 @@\n-  public boolean canAppBeRunnable(FSQueue queue, String user) {\n-    AllocationConfiguration allocConf \u003d scheduler.getAllocationConfiguration();\n-    Integer userNumRunnable \u003d usersNumRunnableApps.get(user);\n-    if (userNumRunnable \u003d\u003d null) {\n-      userNumRunnable \u003d 0;\n-    }\n-    if (userNumRunnable \u003e\u003d allocConf.getUserMaxApps(user)) {\n-      return false;\n-    }\n-    // Check queue and all parent queues\n-    while (queue !\u003d null) {\n-      if (queue.getNumRunnableApps() \u003e\u003d queue.getMaxRunningApps()) {\n-        return false;\n-      }\n-      queue \u003d queue.getParent();\n+  public boolean canAppBeRunnable(FSQueue queue, FSAppAttempt attempt) {\n+    boolean ret \u003d true;\n+    if (exceedUserMaxApps(attempt.getUser())) {\n+      attempt.updateAMContainerDiagnostics(AMState.INACTIVATED,\n+          \"The user \\\"\" + attempt.getUser() + \"\\\" has reached the maximum limit\"\n+              + \" of runnable applications.\");\n+      ret \u003d false;\n+    } else if (exceedQueueMaxRunningApps(queue)) {\n+      attempt.updateAMContainerDiagnostics(AMState.INACTIVATED,\n+          \"The queue \\\"\" + queue.getName() + \"\\\" has reached the maximum limit\"\n+              + \" of runnable applications.\");\n+      ret \u003d false;\n     }\n \n-    return true;\n+    return ret;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean canAppBeRunnable(FSQueue queue, FSAppAttempt attempt) {\n    boolean ret \u003d true;\n    if (exceedUserMaxApps(attempt.getUser())) {\n      attempt.updateAMContainerDiagnostics(AMState.INACTIVATED,\n          \"The user \\\"\" + attempt.getUser() + \"\\\" has reached the maximum limit\"\n              + \" of runnable applications.\");\n      ret \u003d false;\n    } else if (exceedQueueMaxRunningApps(queue)) {\n      attempt.updateAMContainerDiagnostics(AMState.INACTIVATED,\n          \"The queue \\\"\" + queue.getName() + \"\\\" has reached the maximum limit\"\n              + \" of runnable applications.\");\n      ret \u003d false;\n    }\n\n    return ret;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/MaxRunningAppsEnforcer.java",
          "extendedDetails": {}
        }
      ]
    },
    "f6ea9be5473ab66798b0536317d2f32c5348eb57": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5264. Store all queue-specific information in FSQueue. (Yufei Gu via kasha)\n",
      "commitDate": "02/09/16 2:56 PM",
      "commitName": "f6ea9be5473ab66798b0536317d2f32c5348eb57",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "04/03/15 6:06 PM",
      "commitNameOld": "22426a1c9f4bd616558089b6862fd34ab42d19a7",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 547.83,
      "commitsBetweenForRepo": 4165,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,19 @@\n   public boolean canAppBeRunnable(FSQueue queue, String user) {\n     AllocationConfiguration allocConf \u003d scheduler.getAllocationConfiguration();\n     Integer userNumRunnable \u003d usersNumRunnableApps.get(user);\n     if (userNumRunnable \u003d\u003d null) {\n       userNumRunnable \u003d 0;\n     }\n     if (userNumRunnable \u003e\u003d allocConf.getUserMaxApps(user)) {\n       return false;\n     }\n     // Check queue and all parent queues\n     while (queue !\u003d null) {\n-      int queueMaxApps \u003d allocConf.getQueueMaxApps(queue.getName());\n-      if (queue.getNumRunnableApps() \u003e\u003d queueMaxApps) {\n+      if (queue.getNumRunnableApps() \u003e\u003d queue.getMaxRunningApps()) {\n         return false;\n       }\n       queue \u003d queue.getParent();\n     }\n \n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean canAppBeRunnable(FSQueue queue, String user) {\n    AllocationConfiguration allocConf \u003d scheduler.getAllocationConfiguration();\n    Integer userNumRunnable \u003d usersNumRunnableApps.get(user);\n    if (userNumRunnable \u003d\u003d null) {\n      userNumRunnable \u003d 0;\n    }\n    if (userNumRunnable \u003e\u003d allocConf.getUserMaxApps(user)) {\n      return false;\n    }\n    // Check queue and all parent queues\n    while (queue !\u003d null) {\n      if (queue.getNumRunnableApps() \u003e\u003d queue.getMaxRunningApps()) {\n        return false;\n      }\n      queue \u003d queue.getParent();\n    }\n\n    return true;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/MaxRunningAppsEnforcer.java",
      "extendedDetails": {}
    },
    "6d5f8ebed60e59d772e0dcee0b069f8db95f6ccc": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1403. Separate out configuration loading from QueueManager in the Fair Scheduler (Sandy Ryza)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1548006 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/12/13 7:26 PM",
      "commitName": "6d5f8ebed60e59d772e0dcee0b069f8db95f6ccc",
      "commitAuthor": "Sanford Ryza",
      "commitDateOld": "29/11/13 11:08 AM",
      "commitNameOld": "61b6ed73f8a5a75951c7b355c673459874eef7c3",
      "commitAuthorOld": "Sanford Ryza",
      "daysBetweenCommits": 5.35,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,20 @@\n   public boolean canAppBeRunnable(FSQueue queue, String user) {\n+    AllocationConfiguration allocConf \u003d scheduler.getAllocationConfiguration();\n     Integer userNumRunnable \u003d usersNumRunnableApps.get(user);\n     if (userNumRunnable \u003d\u003d null) {\n       userNumRunnable \u003d 0;\n     }\n-    if (userNumRunnable \u003e\u003d queueMgr.getUserMaxApps(user)) {\n+    if (userNumRunnable \u003e\u003d allocConf.getUserMaxApps(user)) {\n       return false;\n     }\n     // Check queue and all parent queues\n     while (queue !\u003d null) {\n-      int queueMaxApps \u003d queueMgr.getQueueMaxApps(queue.getName());\n+      int queueMaxApps \u003d allocConf.getQueueMaxApps(queue.getName());\n       if (queue.getNumRunnableApps() \u003e\u003d queueMaxApps) {\n         return false;\n       }\n       queue \u003d queue.getParent();\n     }\n \n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean canAppBeRunnable(FSQueue queue, String user) {\n    AllocationConfiguration allocConf \u003d scheduler.getAllocationConfiguration();\n    Integer userNumRunnable \u003d usersNumRunnableApps.get(user);\n    if (userNumRunnable \u003d\u003d null) {\n      userNumRunnable \u003d 0;\n    }\n    if (userNumRunnable \u003e\u003d allocConf.getUserMaxApps(user)) {\n      return false;\n    }\n    // Check queue and all parent queues\n    while (queue !\u003d null) {\n      int queueMaxApps \u003d allocConf.getQueueMaxApps(queue.getName());\n      if (queue.getNumRunnableApps() \u003e\u003d queueMaxApps) {\n        return false;\n      }\n      queue \u003d queue.getParent();\n    }\n\n    return true;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/MaxRunningAppsEnforcer.java",
      "extendedDetails": {}
    },
    "61b6ed73f8a5a75951c7b355c673459874eef7c3": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1241: Include missing files\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1546625 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/11/13 11:08 AM",
      "commitName": "61b6ed73f8a5a75951c7b355c673459874eef7c3",
      "commitAuthor": "Sanford Ryza",
      "diff": "@@ -0,0 +1,19 @@\n+  public boolean canAppBeRunnable(FSQueue queue, String user) {\n+    Integer userNumRunnable \u003d usersNumRunnableApps.get(user);\n+    if (userNumRunnable \u003d\u003d null) {\n+      userNumRunnable \u003d 0;\n+    }\n+    if (userNumRunnable \u003e\u003d queueMgr.getUserMaxApps(user)) {\n+      return false;\n+    }\n+    // Check queue and all parent queues\n+    while (queue !\u003d null) {\n+      int queueMaxApps \u003d queueMgr.getQueueMaxApps(queue.getName());\n+      if (queue.getNumRunnableApps() \u003e\u003d queueMaxApps) {\n+        return false;\n+      }\n+      queue \u003d queue.getParent();\n+    }\n+\n+    return true;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean canAppBeRunnable(FSQueue queue, String user) {\n    Integer userNumRunnable \u003d usersNumRunnableApps.get(user);\n    if (userNumRunnable \u003d\u003d null) {\n      userNumRunnable \u003d 0;\n    }\n    if (userNumRunnable \u003e\u003d queueMgr.getUserMaxApps(user)) {\n      return false;\n    }\n    // Check queue and all parent queues\n    while (queue !\u003d null) {\n      int queueMaxApps \u003d queueMgr.getQueueMaxApps(queue.getName());\n      if (queue.getNumRunnableApps() \u003e\u003d queueMaxApps) {\n        return false;\n      }\n      queue \u003d queue.getParent();\n    }\n\n    return true;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/MaxRunningAppsEnforcer.java"
    }
  }
}