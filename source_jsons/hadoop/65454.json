{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "S3GuardTool.java",
  "functionName": "checkIfS3BucketIsGuarded",
  "functionId": "checkIfS3BucketIsGuarded___paths-List__String__",
  "sourceFilePath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/S3GuardTool.java",
  "functionStartLine": 273,
  "functionEndLine": 293,
  "numCommitsSeen": 57,
  "timeTaken": 2348,
  "changeHistory": [
    "1a25bbe9ec7155712a82b157a8379826f8c79d4b",
    "7eb0d3a32435da110dc9e6004dba8c5c9b082c35"
  ],
  "changeHistoryShort": {
    "1a25bbe9ec7155712a82b157a8379826f8c79d4b": "Yrename",
    "7eb0d3a32435da110dc9e6004dba8c5c9b082c35": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1a25bbe9ec7155712a82b157a8379826f8c79d4b": {
      "type": "Yrename",
      "commitMessage": "HADOOP-15845. Require explicit URI on CLI for s3guard init and destroy. Contributed by Gabor Bota.\n",
      "commitDate": "11/12/18 7:33 AM",
      "commitName": "1a25bbe9ec7155712a82b157a8379826f8c79d4b",
      "commitAuthor": "Sean Mackrory",
      "commitDateOld": "10/12/18 1:03 PM",
      "commitNameOld": "3ff8580f2289664a54f369b500ad77f31a07c326",
      "commitAuthorOld": "Sean Mackrory",
      "daysBetweenCommits": 0.77,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,21 @@\n-  protected void checkMetadataStoreUri(List\u003cString\u003e paths) throws IOException {\n+  protected void checkIfS3BucketIsGuarded(List\u003cString\u003e paths)\n+      throws IOException {\n     // be sure that path is provided in params, so there\u0027s no IOoBE\n     String s3Path \u003d \"\";\n     if(!paths.isEmpty()) {\n       s3Path \u003d paths.get(0);\n     }\n \n     // Check if DynamoDB url is set from arguments.\n     String metadataStoreUri \u003d getCommandFormat().getOptValue(META_FLAG);\n     if(metadataStoreUri \u003d\u003d null || metadataStoreUri.isEmpty()) {\n       // If not set, check if filesystem is guarded by creating an\n       // S3AFileSystem and check if hasMetadataStore is true\n       try (S3AFileSystem s3AFileSystem \u003d (S3AFileSystem)\n           S3AFileSystem.newInstance(toUri(s3Path), getConf())){\n         Preconditions.checkState(s3AFileSystem.hasMetadataStore(),\n             \"The S3 bucket is unguarded. \" + getName()\n                 + \" can not be used on an unguarded bucket.\");\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void checkIfS3BucketIsGuarded(List\u003cString\u003e paths)\n      throws IOException {\n    // be sure that path is provided in params, so there\u0027s no IOoBE\n    String s3Path \u003d \"\";\n    if(!paths.isEmpty()) {\n      s3Path \u003d paths.get(0);\n    }\n\n    // Check if DynamoDB url is set from arguments.\n    String metadataStoreUri \u003d getCommandFormat().getOptValue(META_FLAG);\n    if(metadataStoreUri \u003d\u003d null || metadataStoreUri.isEmpty()) {\n      // If not set, check if filesystem is guarded by creating an\n      // S3AFileSystem and check if hasMetadataStore is true\n      try (S3AFileSystem s3AFileSystem \u003d (S3AFileSystem)\n          S3AFileSystem.newInstance(toUri(s3Path), getConf())){\n        Preconditions.checkState(s3AFileSystem.hasMetadataStore(),\n            \"The S3 bucket is unguarded. \" + getName()\n                + \" can not be used on an unguarded bucket.\");\n      }\n    }\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/S3GuardTool.java",
      "extendedDetails": {
        "oldValue": "checkMetadataStoreUri",
        "newValue": "checkIfS3BucketIsGuarded"
      }
    },
    "7eb0d3a32435da110dc9e6004dba8c5c9b082c35": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-14927. ITestS3GuardTool failures in testDestroyNoBucket(). Contributed by Gabor Bota.\n",
      "commitDate": "29/11/18 8:36 AM",
      "commitName": "7eb0d3a32435da110dc9e6004dba8c5c9b082c35",
      "commitAuthor": "Sean Mackrory",
      "diff": "@@ -0,0 +1,20 @@\n+  protected void checkMetadataStoreUri(List\u003cString\u003e paths) throws IOException {\n+    // be sure that path is provided in params, so there\u0027s no IOoBE\n+    String s3Path \u003d \"\";\n+    if(!paths.isEmpty()) {\n+      s3Path \u003d paths.get(0);\n+    }\n+\n+    // Check if DynamoDB url is set from arguments.\n+    String metadataStoreUri \u003d getCommandFormat().getOptValue(META_FLAG);\n+    if(metadataStoreUri \u003d\u003d null || metadataStoreUri.isEmpty()) {\n+      // If not set, check if filesystem is guarded by creating an\n+      // S3AFileSystem and check if hasMetadataStore is true\n+      try (S3AFileSystem s3AFileSystem \u003d (S3AFileSystem)\n+          S3AFileSystem.newInstance(toUri(s3Path), getConf())){\n+        Preconditions.checkState(s3AFileSystem.hasMetadataStore(),\n+            \"The S3 bucket is unguarded. \" + getName()\n+                + \" can not be used on an unguarded bucket.\");\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void checkMetadataStoreUri(List\u003cString\u003e paths) throws IOException {\n    // be sure that path is provided in params, so there\u0027s no IOoBE\n    String s3Path \u003d \"\";\n    if(!paths.isEmpty()) {\n      s3Path \u003d paths.get(0);\n    }\n\n    // Check if DynamoDB url is set from arguments.\n    String metadataStoreUri \u003d getCommandFormat().getOptValue(META_FLAG);\n    if(metadataStoreUri \u003d\u003d null || metadataStoreUri.isEmpty()) {\n      // If not set, check if filesystem is guarded by creating an\n      // S3AFileSystem and check if hasMetadataStore is true\n      try (S3AFileSystem s3AFileSystem \u003d (S3AFileSystem)\n          S3AFileSystem.newInstance(toUri(s3Path), getConf())){\n        Preconditions.checkState(s3AFileSystem.hasMetadataStore(),\n            \"The S3 bucket is unguarded. \" + getName()\n                + \" can not be used on an unguarded bucket.\");\n      }\n    }\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/S3GuardTool.java"
    }
  }
}