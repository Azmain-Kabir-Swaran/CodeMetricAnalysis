{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ShortCircuitRegistry.java",
  "functionName": "createNewMemorySegment",
  "functionId": "createNewMemorySegment___clientName-String__sock-DomainSocket",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/ShortCircuitRegistry.java",
  "functionStartLine": 303,
  "functionEndLine": 338,
  "numCommitsSeen": 18,
  "timeTaken": 953,
  "changeHistory": [
    "cad14aa9168112ef1ceae80b94d9aae3ba293578",
    "6465b0b55f263c06f4d37800db951adba314a9fd"
  ],
  "changeHistoryShort": {
    "cad14aa9168112ef1ceae80b94d9aae3ba293578": "Ybodychange",
    "6465b0b55f263c06f4d37800db951adba314a9fd": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cad14aa9168112ef1ceae80b94d9aae3ba293578": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6036. Forcibly timeout misbehaving DFSClients that try to do no-checksum reads that extend too long.  (cmccabe)\n",
      "commitDate": "08/09/14 12:51 PM",
      "commitName": "cad14aa9168112ef1ceae80b94d9aae3ba293578",
      "commitAuthor": "Colin Patrick Mccabe",
      "commitDateOld": "25/07/14 4:56 PM",
      "commitNameOld": "e85a3fecc68b48a3dc9af5daa466a24f3b39545b",
      "commitAuthorOld": "Colin McCabe",
      "daysBetweenCommits": 44.83,
      "commitsBetweenForRepo": 339,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,36 @@\n   public NewShmInfo createNewMemorySegment(String clientName,\n       DomainSocket sock) throws IOException {\n     NewShmInfo info \u003d null;\n     RegisteredShm shm \u003d null;\n     ShmId shmId \u003d null;\n     synchronized (this) {\n       if (!enabled) {\n         if (LOG.isTraceEnabled()) {\n           LOG.trace(\"createNewMemorySegment: ShortCircuitRegistry is \" +\n               \"not enabled.\");\n         }\n         throw new UnsupportedOperationException();\n       }\n       FileInputStream fis \u003d null;\n       try {\n         do {\n           shmId \u003d ShmId.createRandom();\n         } while (segments.containsKey(shmId));\n         fis \u003d shmFactory.createDescriptor(clientName, SHM_LENGTH);\n-        shm \u003d new RegisteredShm(shmId, fis, this);\n+        shm \u003d new RegisteredShm(clientName, shmId, fis, this);\n       } finally {\n         if (shm \u003d\u003d null) {\n           IOUtils.closeQuietly(fis);\n         }\n       }\n       info \u003d new NewShmInfo(shmId, fis);\n       segments.put(shmId, shm);\n     }\n     // Drop the registry lock to prevent deadlock.\n     // After this point, RegisteredShm#handle may be called at any time.\n     watcher.add(sock, shm);\n     if (LOG.isTraceEnabled()) {\n       LOG.trace(\"createNewMemorySegment: created \" + info.shmId);\n     }\n     return info;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public NewShmInfo createNewMemorySegment(String clientName,\n      DomainSocket sock) throws IOException {\n    NewShmInfo info \u003d null;\n    RegisteredShm shm \u003d null;\n    ShmId shmId \u003d null;\n    synchronized (this) {\n      if (!enabled) {\n        if (LOG.isTraceEnabled()) {\n          LOG.trace(\"createNewMemorySegment: ShortCircuitRegistry is \" +\n              \"not enabled.\");\n        }\n        throw new UnsupportedOperationException();\n      }\n      FileInputStream fis \u003d null;\n      try {\n        do {\n          shmId \u003d ShmId.createRandom();\n        } while (segments.containsKey(shmId));\n        fis \u003d shmFactory.createDescriptor(clientName, SHM_LENGTH);\n        shm \u003d new RegisteredShm(clientName, shmId, fis, this);\n      } finally {\n        if (shm \u003d\u003d null) {\n          IOUtils.closeQuietly(fis);\n        }\n      }\n      info \u003d new NewShmInfo(shmId, fis);\n      segments.put(shmId, shm);\n    }\n    // Drop the registry lock to prevent deadlock.\n    // After this point, RegisteredShm#handle may be called at any time.\n    watcher.add(sock, shm);\n    if (LOG.isTraceEnabled()) {\n      LOG.trace(\"createNewMemorySegment: created \" + info.shmId);\n    }\n    return info;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/ShortCircuitRegistry.java",
      "extendedDetails": {}
    },
    "6465b0b55f263c06f4d37800db951adba314a9fd": {
      "type": "Yintroduced",
      "commitMessage": "add missing file for HDFS-5950\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1573434 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/03/14 8:01 PM",
      "commitName": "6465b0b55f263c06f4d37800db951adba314a9fd",
      "commitAuthor": "Colin McCabe",
      "diff": "@@ -0,0 +1,36 @@\n+  public NewShmInfo createNewMemorySegment(String clientName,\n+      DomainSocket sock) throws IOException {\n+    NewShmInfo info \u003d null;\n+    RegisteredShm shm \u003d null;\n+    ShmId shmId \u003d null;\n+    synchronized (this) {\n+      if (!enabled) {\n+        if (LOG.isTraceEnabled()) {\n+          LOG.trace(\"createNewMemorySegment: ShortCircuitRegistry is \" +\n+              \"not enabled.\");\n+        }\n+        throw new UnsupportedOperationException();\n+      }\n+      FileInputStream fis \u003d null;\n+      try {\n+        do {\n+          shmId \u003d ShmId.createRandom();\n+        } while (segments.containsKey(shmId));\n+        fis \u003d shmFactory.createDescriptor(clientName, SHM_LENGTH);\n+        shm \u003d new RegisteredShm(shmId, fis, this);\n+      } finally {\n+        if (shm \u003d\u003d null) {\n+          IOUtils.closeQuietly(fis);\n+        }\n+      }\n+      info \u003d new NewShmInfo(shmId, fis);\n+      segments.put(shmId, shm);\n+    }\n+    // Drop the registry lock to prevent deadlock.\n+    // After this point, RegisteredShm#handle may be called at any time.\n+    watcher.add(sock, shm);\n+    if (LOG.isTraceEnabled()) {\n+      LOG.trace(\"createNewMemorySegment: created \" + info.shmId);\n+    }\n+    return info;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public NewShmInfo createNewMemorySegment(String clientName,\n      DomainSocket sock) throws IOException {\n    NewShmInfo info \u003d null;\n    RegisteredShm shm \u003d null;\n    ShmId shmId \u003d null;\n    synchronized (this) {\n      if (!enabled) {\n        if (LOG.isTraceEnabled()) {\n          LOG.trace(\"createNewMemorySegment: ShortCircuitRegistry is \" +\n              \"not enabled.\");\n        }\n        throw new UnsupportedOperationException();\n      }\n      FileInputStream fis \u003d null;\n      try {\n        do {\n          shmId \u003d ShmId.createRandom();\n        } while (segments.containsKey(shmId));\n        fis \u003d shmFactory.createDescriptor(clientName, SHM_LENGTH);\n        shm \u003d new RegisteredShm(shmId, fis, this);\n      } finally {\n        if (shm \u003d\u003d null) {\n          IOUtils.closeQuietly(fis);\n        }\n      }\n      info \u003d new NewShmInfo(shmId, fis);\n      segments.put(shmId, shm);\n    }\n    // Drop the registry lock to prevent deadlock.\n    // After this point, RegisteredShm#handle may be called at any time.\n    watcher.add(sock, shm);\n    if (LOG.isTraceEnabled()) {\n      LOG.trace(\"createNewMemorySegment: created \" + info.shmId);\n    }\n    return info;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/ShortCircuitRegistry.java"
    }
  }
}