{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "OfflineImageReconstructor.java",
  "functionName": "readVersion",
  "functionId": "readVersion",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/OfflineImageReconstructor.java",
  "functionStartLine": 1673,
  "functionEndLine": 1713,
  "numCommitsSeen": 15,
  "timeTaken": 1906,
  "changeHistory": [
    "96e2ab81444f7f87e0df2e1567ae7a26534cd1ab",
    "bd49354c6d6387620b0de2219eab1714ec2d64f8",
    "700b0e4019cf483f7532609711812150b8c44742"
  ],
  "changeHistoryShort": {
    "96e2ab81444f7f87e0df2e1567ae7a26534cd1ab": "Ybodychange",
    "bd49354c6d6387620b0de2219eab1714ec2d64f8": "Ybodychange",
    "700b0e4019cf483f7532609711812150b8c44742": "Yintroduced"
  },
  "changeHistoryDetails": {
    "96e2ab81444f7f87e0df2e1567ae7a26534cd1ab": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11555. Fix typos in class OfflineImageReconstructor. Contributed by Yiqun Lin.\n",
      "commitDate": "27/03/17 4:23 AM",
      "commitName": "96e2ab81444f7f87e0df2e1567ae7a26534cd1ab",
      "commitAuthor": "Yiqun Lin",
      "commitDateOld": "08/03/17 3:36 PM",
      "commitNameOld": "5ca6ef0c268b1acb3abf12505b9ead6fe7e38a23",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 18.49,
      "commitsBetweenForRepo": 100,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,41 +1,41 @@\n   private void readVersion() throws IOException {\n     try {\n       expectTag(\"version\", false);\n     } catch (IOException e) {\n       // Handle the case where \u003cversion\u003e does not exist.\n       // Note: fsimage XML files which are missing \u003cversion\u003e are also missing\n-      // many other fields that ovi needs to accurately reconstruct the\n+      // many other fields that oiv needs to accurately reconstruct the\n       // fsimage.\n       throw new IOException(\"No \u003cversion\u003e section found at the top of \" +\n           \"the fsimage XML.  This XML file is too old to be processed \" +\n-          \"by ovi.\", e);\n+          \"by oiv.\", e);\n     }\n     Node version \u003d new Node();\n     loadNodeChildren(version, \"version fields\");\n     Integer onDiskVersion \u003d version.removeChildInt(\"onDiskVersion\");\n     if (onDiskVersion \u003d\u003d null) {\n       throw new IOException(\"The \u003cversion\u003e section doesn\u0027t contain \" +\n           \"the onDiskVersion.\");\n     }\n     Integer layoutVersion \u003d version.removeChildInt(\"layoutVersion\");\n     if (layoutVersion \u003d\u003d null) {\n       throw new IOException(\"The \u003cversion\u003e section doesn\u0027t contain \" +\n           \"the layoutVersion.\");\n     }\n     if (layoutVersion.intValue() !\u003d\n         NameNodeLayoutVersion.CURRENT_LAYOUT_VERSION) {\n       throw new IOException(\"Layout version mismatch.  This oiv tool \" +\n           \"handles layout version \" +\n           NameNodeLayoutVersion.CURRENT_LAYOUT_VERSION + \", but the \" +\n           \"XML file has \u003clayoutVersion\u003e \" + layoutVersion + \".  Please \" +\n           \"either re-generate the XML file with the proper layout version, \" +\n           \"or manually edit the XML file to be usable with this version \" +\n           \"of the oiv tool.\");\n     }\n     fileSummaryBld.setOndiskVersion(onDiskVersion);\n     fileSummaryBld.setLayoutVersion(layoutVersion);\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Loaded \u003cversion\u003e with onDiskVersion\u003d\" + onDiskVersion +\n           \", layoutVersion\u003d\" + layoutVersion + \".\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void readVersion() throws IOException {\n    try {\n      expectTag(\"version\", false);\n    } catch (IOException e) {\n      // Handle the case where \u003cversion\u003e does not exist.\n      // Note: fsimage XML files which are missing \u003cversion\u003e are also missing\n      // many other fields that oiv needs to accurately reconstruct the\n      // fsimage.\n      throw new IOException(\"No \u003cversion\u003e section found at the top of \" +\n          \"the fsimage XML.  This XML file is too old to be processed \" +\n          \"by oiv.\", e);\n    }\n    Node version \u003d new Node();\n    loadNodeChildren(version, \"version fields\");\n    Integer onDiskVersion \u003d version.removeChildInt(\"onDiskVersion\");\n    if (onDiskVersion \u003d\u003d null) {\n      throw new IOException(\"The \u003cversion\u003e section doesn\u0027t contain \" +\n          \"the onDiskVersion.\");\n    }\n    Integer layoutVersion \u003d version.removeChildInt(\"layoutVersion\");\n    if (layoutVersion \u003d\u003d null) {\n      throw new IOException(\"The \u003cversion\u003e section doesn\u0027t contain \" +\n          \"the layoutVersion.\");\n    }\n    if (layoutVersion.intValue() !\u003d\n        NameNodeLayoutVersion.CURRENT_LAYOUT_VERSION) {\n      throw new IOException(\"Layout version mismatch.  This oiv tool \" +\n          \"handles layout version \" +\n          NameNodeLayoutVersion.CURRENT_LAYOUT_VERSION + \", but the \" +\n          \"XML file has \u003clayoutVersion\u003e \" + layoutVersion + \".  Please \" +\n          \"either re-generate the XML file with the proper layout version, \" +\n          \"or manually edit the XML file to be usable with this version \" +\n          \"of the oiv tool.\");\n    }\n    fileSummaryBld.setOndiskVersion(onDiskVersion);\n    fileSummaryBld.setLayoutVersion(layoutVersion);\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Loaded \u003cversion\u003e with onDiskVersion\u003d\" + onDiskVersion +\n          \", layoutVersion\u003d\" + layoutVersion + \".\");\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/OfflineImageReconstructor.java",
      "extendedDetails": {}
    },
    "bd49354c6d6387620b0de2219eab1714ec2d64f8": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9934. ReverseXML oiv processor should bail out if the XML file\u0027s layoutVersion doesn\u0027t match oiv\u0027s (cmccabe)\n",
      "commitDate": "10/03/16 1:41 PM",
      "commitName": "bd49354c6d6387620b0de2219eab1714ec2d64f8",
      "commitAuthor": "Colin Patrick Mccabe",
      "commitDateOld": "02/03/16 5:56 PM",
      "commitNameOld": "700b0e4019cf483f7532609711812150b8c44742",
      "commitAuthorOld": "Colin Patrick Mccabe",
      "daysBetweenCommits": 7.82,
      "commitsBetweenForRepo": 46,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,41 @@\n   private void readVersion() throws IOException {\n     try {\n       expectTag(\"version\", false);\n     } catch (IOException e) {\n       // Handle the case where \u003cversion\u003e does not exist.\n       // Note: fsimage XML files which are missing \u003cversion\u003e are also missing\n       // many other fields that ovi needs to accurately reconstruct the\n       // fsimage.\n       throw new IOException(\"No \u003cversion\u003e section found at the top of \" +\n           \"the fsimage XML.  This XML file is too old to be processed \" +\n           \"by ovi.\", e);\n     }\n     Node version \u003d new Node();\n     loadNodeChildren(version, \"version fields\");\n     Integer onDiskVersion \u003d version.removeChildInt(\"onDiskVersion\");\n     if (onDiskVersion \u003d\u003d null) {\n       throw new IOException(\"The \u003cversion\u003e section doesn\u0027t contain \" +\n           \"the onDiskVersion.\");\n     }\n     Integer layoutVersion \u003d version.removeChildInt(\"layoutVersion\");\n     if (layoutVersion \u003d\u003d null) {\n       throw new IOException(\"The \u003cversion\u003e section doesn\u0027t contain \" +\n           \"the layoutVersion.\");\n     }\n+    if (layoutVersion.intValue() !\u003d\n+        NameNodeLayoutVersion.CURRENT_LAYOUT_VERSION) {\n+      throw new IOException(\"Layout version mismatch.  This oiv tool \" +\n+          \"handles layout version \" +\n+          NameNodeLayoutVersion.CURRENT_LAYOUT_VERSION + \", but the \" +\n+          \"XML file has \u003clayoutVersion\u003e \" + layoutVersion + \".  Please \" +\n+          \"either re-generate the XML file with the proper layout version, \" +\n+          \"or manually edit the XML file to be usable with this version \" +\n+          \"of the oiv tool.\");\n+    }\n     fileSummaryBld.setOndiskVersion(onDiskVersion);\n     fileSummaryBld.setLayoutVersion(layoutVersion);\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Loaded \u003cversion\u003e with onDiskVersion\u003d\" + onDiskVersion +\n           \", layoutVersion\u003d\" + layoutVersion + \".\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void readVersion() throws IOException {\n    try {\n      expectTag(\"version\", false);\n    } catch (IOException e) {\n      // Handle the case where \u003cversion\u003e does not exist.\n      // Note: fsimage XML files which are missing \u003cversion\u003e are also missing\n      // many other fields that ovi needs to accurately reconstruct the\n      // fsimage.\n      throw new IOException(\"No \u003cversion\u003e section found at the top of \" +\n          \"the fsimage XML.  This XML file is too old to be processed \" +\n          \"by ovi.\", e);\n    }\n    Node version \u003d new Node();\n    loadNodeChildren(version, \"version fields\");\n    Integer onDiskVersion \u003d version.removeChildInt(\"onDiskVersion\");\n    if (onDiskVersion \u003d\u003d null) {\n      throw new IOException(\"The \u003cversion\u003e section doesn\u0027t contain \" +\n          \"the onDiskVersion.\");\n    }\n    Integer layoutVersion \u003d version.removeChildInt(\"layoutVersion\");\n    if (layoutVersion \u003d\u003d null) {\n      throw new IOException(\"The \u003cversion\u003e section doesn\u0027t contain \" +\n          \"the layoutVersion.\");\n    }\n    if (layoutVersion.intValue() !\u003d\n        NameNodeLayoutVersion.CURRENT_LAYOUT_VERSION) {\n      throw new IOException(\"Layout version mismatch.  This oiv tool \" +\n          \"handles layout version \" +\n          NameNodeLayoutVersion.CURRENT_LAYOUT_VERSION + \", but the \" +\n          \"XML file has \u003clayoutVersion\u003e \" + layoutVersion + \".  Please \" +\n          \"either re-generate the XML file with the proper layout version, \" +\n          \"or manually edit the XML file to be usable with this version \" +\n          \"of the oiv tool.\");\n    }\n    fileSummaryBld.setOndiskVersion(onDiskVersion);\n    fileSummaryBld.setLayoutVersion(layoutVersion);\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Loaded \u003cversion\u003e with onDiskVersion\u003d\" + onDiskVersion +\n          \", layoutVersion\u003d\" + layoutVersion + \".\");\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/OfflineImageReconstructor.java",
      "extendedDetails": {}
    },
    "700b0e4019cf483f7532609711812150b8c44742": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-9835. OIV: add ReverseXML processor which reconstructs an fsimage from an XML file (cmccabe)\n",
      "commitDate": "02/03/16 5:56 PM",
      "commitName": "700b0e4019cf483f7532609711812150b8c44742",
      "commitAuthor": "Colin Patrick Mccabe",
      "diff": "@@ -0,0 +1,31 @@\n+  private void readVersion() throws IOException {\n+    try {\n+      expectTag(\"version\", false);\n+    } catch (IOException e) {\n+      // Handle the case where \u003cversion\u003e does not exist.\n+      // Note: fsimage XML files which are missing \u003cversion\u003e are also missing\n+      // many other fields that ovi needs to accurately reconstruct the\n+      // fsimage.\n+      throw new IOException(\"No \u003cversion\u003e section found at the top of \" +\n+          \"the fsimage XML.  This XML file is too old to be processed \" +\n+          \"by ovi.\", e);\n+    }\n+    Node version \u003d new Node();\n+    loadNodeChildren(version, \"version fields\");\n+    Integer onDiskVersion \u003d version.removeChildInt(\"onDiskVersion\");\n+    if (onDiskVersion \u003d\u003d null) {\n+      throw new IOException(\"The \u003cversion\u003e section doesn\u0027t contain \" +\n+          \"the onDiskVersion.\");\n+    }\n+    Integer layoutVersion \u003d version.removeChildInt(\"layoutVersion\");\n+    if (layoutVersion \u003d\u003d null) {\n+      throw new IOException(\"The \u003cversion\u003e section doesn\u0027t contain \" +\n+          \"the layoutVersion.\");\n+    }\n+    fileSummaryBld.setOndiskVersion(onDiskVersion);\n+    fileSummaryBld.setLayoutVersion(layoutVersion);\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"Loaded \u003cversion\u003e with onDiskVersion\u003d\" + onDiskVersion +\n+          \", layoutVersion\u003d\" + layoutVersion + \".\");\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void readVersion() throws IOException {\n    try {\n      expectTag(\"version\", false);\n    } catch (IOException e) {\n      // Handle the case where \u003cversion\u003e does not exist.\n      // Note: fsimage XML files which are missing \u003cversion\u003e are also missing\n      // many other fields that ovi needs to accurately reconstruct the\n      // fsimage.\n      throw new IOException(\"No \u003cversion\u003e section found at the top of \" +\n          \"the fsimage XML.  This XML file is too old to be processed \" +\n          \"by ovi.\", e);\n    }\n    Node version \u003d new Node();\n    loadNodeChildren(version, \"version fields\");\n    Integer onDiskVersion \u003d version.removeChildInt(\"onDiskVersion\");\n    if (onDiskVersion \u003d\u003d null) {\n      throw new IOException(\"The \u003cversion\u003e section doesn\u0027t contain \" +\n          \"the onDiskVersion.\");\n    }\n    Integer layoutVersion \u003d version.removeChildInt(\"layoutVersion\");\n    if (layoutVersion \u003d\u003d null) {\n      throw new IOException(\"The \u003cversion\u003e section doesn\u0027t contain \" +\n          \"the layoutVersion.\");\n    }\n    fileSummaryBld.setOndiskVersion(onDiskVersion);\n    fileSummaryBld.setLayoutVersion(layoutVersion);\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Loaded \u003cversion\u003e with onDiskVersion\u003d\" + onDiskVersion +\n          \", layoutVersion\u003d\" + layoutVersion + \".\");\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/OfflineImageReconstructor.java"
    }
  }
}