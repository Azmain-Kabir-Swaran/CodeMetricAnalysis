{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BlockManager.java",
  "functionName": "createSPSManager",
  "functionId": "createSPSManager___conf-Configuration(modifiers-final)__spsMode-String(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
  "functionStartLine": 5409,
  "functionEndLine": 5429,
  "numCommitsSeen": 477,
  "timeTaken": 5486,
  "changeHistory": [
    "39ed3a66dbb01383ed16b141183fc48bfd2e613d",
    "db3f227d8aeeea8b5bb473fed9ca4f6a17b0fca5",
    "2acc50b826fa8b00f2b09d9546c4b3215b89d46d"
  ],
  "changeHistoryShort": {
    "39ed3a66dbb01383ed16b141183fc48bfd2e613d": "Ybodychange",
    "db3f227d8aeeea8b5bb473fed9ca4f6a17b0fca5": "Ybodychange",
    "2acc50b826fa8b00f2b09d9546c4b3215b89d46d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "39ed3a66dbb01383ed16b141183fc48bfd2e613d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13076: [SPS]: Cleanup work for HDFS-10285 merge. Contributed by Rakesh R.\n",
      "commitDate": "12/08/18 3:06 AM",
      "commitName": "39ed3a66dbb01383ed16b141183fc48bfd2e613d",
      "commitAuthor": "Uma Maheswara Rao G",
      "commitDateOld": "12/08/18 3:06 AM",
      "commitNameOld": "db3f227d8aeeea8b5bb473fed9ca4f6a17b0fca5",
      "commitAuthorOld": "Rakesh Radhakrishnan",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n   public boolean createSPSManager(final Configuration conf,\n       final String spsMode) {\n     // sps manager manages the user invoked sps paths and does the movement.\n     // StoragePolicySatisfier(SPS) configs\n     boolean storagePolicyEnabled \u003d conf.getBoolean(\n         DFSConfigKeys.DFS_STORAGE_POLICY_ENABLED_KEY,\n         DFSConfigKeys.DFS_STORAGE_POLICY_ENABLED_DEFAULT);\n     String modeVal \u003d spsMode;\n     if (org.apache.commons.lang3.StringUtils.isBlank(modeVal)) {\n       modeVal \u003d conf.get(DFSConfigKeys.DFS_STORAGE_POLICY_SATISFIER_MODE_KEY,\n           DFSConfigKeys.DFS_STORAGE_POLICY_SATISFIER_MODE_DEFAULT);\n     }\n     StoragePolicySatisfierMode mode \u003d StoragePolicySatisfierMode\n         .fromString(modeVal);\n     if (!storagePolicyEnabled || mode \u003d\u003d StoragePolicySatisfierMode.NONE) {\n       LOG.info(\"Storage policy satisfier is disabled\");\n       return false;\n     }\n-    spsManager \u003d new StoragePolicySatisfyManager(conf, namesystem, this);\n+    spsManager \u003d new StoragePolicySatisfyManager(conf, namesystem);\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean createSPSManager(final Configuration conf,\n      final String spsMode) {\n    // sps manager manages the user invoked sps paths and does the movement.\n    // StoragePolicySatisfier(SPS) configs\n    boolean storagePolicyEnabled \u003d conf.getBoolean(\n        DFSConfigKeys.DFS_STORAGE_POLICY_ENABLED_KEY,\n        DFSConfigKeys.DFS_STORAGE_POLICY_ENABLED_DEFAULT);\n    String modeVal \u003d spsMode;\n    if (org.apache.commons.lang3.StringUtils.isBlank(modeVal)) {\n      modeVal \u003d conf.get(DFSConfigKeys.DFS_STORAGE_POLICY_SATISFIER_MODE_KEY,\n          DFSConfigKeys.DFS_STORAGE_POLICY_SATISFIER_MODE_DEFAULT);\n    }\n    StoragePolicySatisfierMode mode \u003d StoragePolicySatisfierMode\n        .fromString(modeVal);\n    if (!storagePolicyEnabled || mode \u003d\u003d StoragePolicySatisfierMode.NONE) {\n      LOG.info(\"Storage policy satisfier is disabled\");\n      return false;\n    }\n    spsManager \u003d new StoragePolicySatisfyManager(conf, namesystem);\n    return true;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "extendedDetails": {}
    },
    "db3f227d8aeeea8b5bb473fed9ca4f6a17b0fca5": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13076: [SPS]: Resolve conflicts after rebasing HDFS-10285 branch to trunk. Contributed by Rakesh R.\n",
      "commitDate": "12/08/18 3:06 AM",
      "commitName": "db3f227d8aeeea8b5bb473fed9ca4f6a17b0fca5",
      "commitAuthor": "Rakesh Radhakrishnan",
      "commitDateOld": "12/08/18 3:06 AM",
      "commitNameOld": "66e8f9b31529226309c924226a53dead3e6fcf11",
      "commitAuthorOld": "Uma Maheswara Rao G",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n   public boolean createSPSManager(final Configuration conf,\n       final String spsMode) {\n     // sps manager manages the user invoked sps paths and does the movement.\n     // StoragePolicySatisfier(SPS) configs\n     boolean storagePolicyEnabled \u003d conf.getBoolean(\n         DFSConfigKeys.DFS_STORAGE_POLICY_ENABLED_KEY,\n         DFSConfigKeys.DFS_STORAGE_POLICY_ENABLED_DEFAULT);\n     String modeVal \u003d spsMode;\n-    if (org.apache.commons.lang.StringUtils.isBlank(modeVal)) {\n+    if (org.apache.commons.lang3.StringUtils.isBlank(modeVal)) {\n       modeVal \u003d conf.get(DFSConfigKeys.DFS_STORAGE_POLICY_SATISFIER_MODE_KEY,\n           DFSConfigKeys.DFS_STORAGE_POLICY_SATISFIER_MODE_DEFAULT);\n     }\n     StoragePolicySatisfierMode mode \u003d StoragePolicySatisfierMode\n         .fromString(modeVal);\n     if (!storagePolicyEnabled || mode \u003d\u003d StoragePolicySatisfierMode.NONE) {\n       LOG.info(\"Storage policy satisfier is disabled\");\n       return false;\n     }\n     spsManager \u003d new StoragePolicySatisfyManager(conf, namesystem, this);\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean createSPSManager(final Configuration conf,\n      final String spsMode) {\n    // sps manager manages the user invoked sps paths and does the movement.\n    // StoragePolicySatisfier(SPS) configs\n    boolean storagePolicyEnabled \u003d conf.getBoolean(\n        DFSConfigKeys.DFS_STORAGE_POLICY_ENABLED_KEY,\n        DFSConfigKeys.DFS_STORAGE_POLICY_ENABLED_DEFAULT);\n    String modeVal \u003d spsMode;\n    if (org.apache.commons.lang3.StringUtils.isBlank(modeVal)) {\n      modeVal \u003d conf.get(DFSConfigKeys.DFS_STORAGE_POLICY_SATISFIER_MODE_KEY,\n          DFSConfigKeys.DFS_STORAGE_POLICY_SATISFIER_MODE_DEFAULT);\n    }\n    StoragePolicySatisfierMode mode \u003d StoragePolicySatisfierMode\n        .fromString(modeVal);\n    if (!storagePolicyEnabled || mode \u003d\u003d StoragePolicySatisfierMode.NONE) {\n      LOG.info(\"Storage policy satisfier is disabled\");\n      return false;\n    }\n    spsManager \u003d new StoragePolicySatisfyManager(conf, namesystem, this);\n    return true;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "extendedDetails": {}
    },
    "2acc50b826fa8b00f2b09d9546c4b3215b89d46d": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-13165: [SPS]: Collects successfully moved block details via IBR. Contributed by Rakesh R.\n",
      "commitDate": "12/08/18 3:06 AM",
      "commitName": "2acc50b826fa8b00f2b09d9546c4b3215b89d46d",
      "commitAuthor": "Rakesh Radhakrishnan",
      "diff": "@@ -0,0 +1,21 @@\n+  public boolean createSPSManager(final Configuration conf,\n+      final String spsMode) {\n+    // sps manager manages the user invoked sps paths and does the movement.\n+    // StoragePolicySatisfier(SPS) configs\n+    boolean storagePolicyEnabled \u003d conf.getBoolean(\n+        DFSConfigKeys.DFS_STORAGE_POLICY_ENABLED_KEY,\n+        DFSConfigKeys.DFS_STORAGE_POLICY_ENABLED_DEFAULT);\n+    String modeVal \u003d spsMode;\n+    if (org.apache.commons.lang.StringUtils.isBlank(modeVal)) {\n+      modeVal \u003d conf.get(DFSConfigKeys.DFS_STORAGE_POLICY_SATISFIER_MODE_KEY,\n+          DFSConfigKeys.DFS_STORAGE_POLICY_SATISFIER_MODE_DEFAULT);\n+    }\n+    StoragePolicySatisfierMode mode \u003d StoragePolicySatisfierMode\n+        .fromString(modeVal);\n+    if (!storagePolicyEnabled || mode \u003d\u003d StoragePolicySatisfierMode.NONE) {\n+      LOG.info(\"Storage policy satisfier is disabled\");\n+      return false;\n+    }\n+    spsManager \u003d new StoragePolicySatisfyManager(conf, namesystem, this);\n+    return true;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean createSPSManager(final Configuration conf,\n      final String spsMode) {\n    // sps manager manages the user invoked sps paths and does the movement.\n    // StoragePolicySatisfier(SPS) configs\n    boolean storagePolicyEnabled \u003d conf.getBoolean(\n        DFSConfigKeys.DFS_STORAGE_POLICY_ENABLED_KEY,\n        DFSConfigKeys.DFS_STORAGE_POLICY_ENABLED_DEFAULT);\n    String modeVal \u003d spsMode;\n    if (org.apache.commons.lang.StringUtils.isBlank(modeVal)) {\n      modeVal \u003d conf.get(DFSConfigKeys.DFS_STORAGE_POLICY_SATISFIER_MODE_KEY,\n          DFSConfigKeys.DFS_STORAGE_POLICY_SATISFIER_MODE_DEFAULT);\n    }\n    StoragePolicySatisfierMode mode \u003d StoragePolicySatisfierMode\n        .fromString(modeVal);\n    if (!storagePolicyEnabled || mode \u003d\u003d StoragePolicySatisfierMode.NONE) {\n      LOG.info(\"Storage policy satisfier is disabled\");\n      return false;\n    }\n    spsManager \u003d new StoragePolicySatisfyManager(conf, namesystem, this);\n    return true;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java"
    }
  }
}