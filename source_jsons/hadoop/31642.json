{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "EntityRowKey.java",
  "functionName": "decode",
  "functionId": "decode___rowKey-byte[]",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-common/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/entity/EntityRowKey.java",
  "functionStartLine": 241,
  "functionEndLine": 271,
  "numCommitsSeen": 16,
  "timeTaken": 4081,
  "changeHistory": [
    "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2",
    "02a9710a099fc9572122d87dd3e90c78522f5836",
    "05ff04439e2edeef0460bc9e21034535b8b6eb9e",
    "b01514f65bc6090a50a583f67d1ecb5d74b6d276",
    "892b193bd77c15932b4c084c1d525b7017def0d4",
    "7b8cfa5c2ff62005c8b78867fedd64b48e50383d"
  ],
  "changeHistoryShort": {
    "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2": "Yfilerename",
    "02a9710a099fc9572122d87dd3e90c78522f5836": "Ybodychange",
    "05ff04439e2edeef0460bc9e21034535b8b6eb9e": "Ybodychange",
    "b01514f65bc6090a50a583f67d1ecb5d74b6d276": "Yfilerename",
    "892b193bd77c15932b4c084c1d525b7017def0d4": "Ymultichange(Ymovefromfile,Yreturntypechange,Ybodychange)",
    "7b8cfa5c2ff62005c8b78867fedd64b48e50383d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2": {
      "type": "Yfilerename",
      "commitMessage": "YARN-7919. Refactor timelineservice-hbase module into submodules. Contributed by Haibo Chen.\n",
      "commitDate": "17/02/18 7:00 AM",
      "commitName": "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2",
      "commitAuthor": "Rohith Sharma K S",
      "commitDateOld": "17/02/18 3:24 AM",
      "commitNameOld": "a1e56a62863d8d494af309ec5f476c4b7e4d5ef9",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 0.15,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public EntityRowKey decode(byte[] rowKey) {\n      byte[][] rowKeyComponents \u003d\n          Separator.QUALIFIERS.split(rowKey, SEGMENT_SIZES);\n      if (rowKeyComponents.length !\u003d 8) {\n        throw new IllegalArgumentException(\"the row key is not valid for \"\n            + \"an entity\");\n      }\n      String userId \u003d\n          Separator.decode(Bytes.toString(rowKeyComponents[0]),\n              Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n      String clusterId \u003d\n          Separator.decode(Bytes.toString(rowKeyComponents[1]),\n              Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n      String flowName \u003d\n          Separator.decode(Bytes.toString(rowKeyComponents[2]),\n              Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n      Long flowRunId \u003d\n          LongConverter.invertLong(Bytes.toLong(rowKeyComponents[3]));\n      String appId \u003d appIDKeyConverter.decode(rowKeyComponents[4]);\n      String entityType \u003d\n          Separator.decode(Bytes.toString(rowKeyComponents[5]),\n              Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n\n      Long entityPrefixId \u003d Bytes.toLong(rowKeyComponents[6]);\n\n      String entityId \u003d\n          Separator.decode(Bytes.toString(rowKeyComponents[7]),\n              Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n      return new EntityRowKey(clusterId, userId, flowName, flowRunId, appId,\n          entityType, entityPrefixId, entityId);\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-common/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/entity/EntityRowKey.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/entity/EntityRowKey.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-common/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/entity/EntityRowKey.java"
      }
    },
    "02a9710a099fc9572122d87dd3e90c78522f5836": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5585. [Atsv2] Reader side changes for entity prefix and support for pagination via additional filters (Rohith Sharma K S via Varun Saxena)\n",
      "commitDate": "29/08/17 10:59 PM",
      "commitName": "02a9710a099fc9572122d87dd3e90c78522f5836",
      "commitAuthor": "Varun Saxena",
      "commitDateOld": "29/08/17 10:59 PM",
      "commitNameOld": "05ff04439e2edeef0460bc9e21034535b8b6eb9e",
      "commitAuthorOld": "Sangjin Lee",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,31 @@\n     public EntityRowKey decode(byte[] rowKey) {\n       byte[][] rowKeyComponents \u003d\n           Separator.QUALIFIERS.split(rowKey, SEGMENT_SIZES);\n       if (rowKeyComponents.length !\u003d 8) {\n         throw new IllegalArgumentException(\"the row key is not valid for \"\n             + \"an entity\");\n       }\n       String userId \u003d\n           Separator.decode(Bytes.toString(rowKeyComponents[0]),\n               Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n       String clusterId \u003d\n           Separator.decode(Bytes.toString(rowKeyComponents[1]),\n               Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n       String flowName \u003d\n           Separator.decode(Bytes.toString(rowKeyComponents[2]),\n               Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n       Long flowRunId \u003d\n           LongConverter.invertLong(Bytes.toLong(rowKeyComponents[3]));\n       String appId \u003d appIDKeyConverter.decode(rowKeyComponents[4]);\n       String entityType \u003d\n           Separator.decode(Bytes.toString(rowKeyComponents[5]),\n               Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n \n-      long entityPrefixId \u003d Bytes.toLong(rowKeyComponents[6]);\n+      Long entityPrefixId \u003d Bytes.toLong(rowKeyComponents[6]);\n \n       String entityId \u003d\n           Separator.decode(Bytes.toString(rowKeyComponents[7]),\n               Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n       return new EntityRowKey(clusterId, userId, flowName, flowRunId, appId,\n           entityType, entityPrefixId, entityId);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public EntityRowKey decode(byte[] rowKey) {\n      byte[][] rowKeyComponents \u003d\n          Separator.QUALIFIERS.split(rowKey, SEGMENT_SIZES);\n      if (rowKeyComponents.length !\u003d 8) {\n        throw new IllegalArgumentException(\"the row key is not valid for \"\n            + \"an entity\");\n      }\n      String userId \u003d\n          Separator.decode(Bytes.toString(rowKeyComponents[0]),\n              Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n      String clusterId \u003d\n          Separator.decode(Bytes.toString(rowKeyComponents[1]),\n              Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n      String flowName \u003d\n          Separator.decode(Bytes.toString(rowKeyComponents[2]),\n              Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n      Long flowRunId \u003d\n          LongConverter.invertLong(Bytes.toLong(rowKeyComponents[3]));\n      String appId \u003d appIDKeyConverter.decode(rowKeyComponents[4]);\n      String entityType \u003d\n          Separator.decode(Bytes.toString(rowKeyComponents[5]),\n              Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n\n      Long entityPrefixId \u003d Bytes.toLong(rowKeyComponents[6]);\n\n      String entityId \u003d\n          Separator.decode(Bytes.toString(rowKeyComponents[7]),\n              Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n      return new EntityRowKey(clusterId, userId, flowName, flowRunId, appId,\n          entityType, entityPrefixId, entityId);\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/entity/EntityRowKey.java",
      "extendedDetails": {}
    },
    "05ff04439e2edeef0460bc9e21034535b8b6eb9e": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5715. Introduce entity prefix for return and sort order. Contributed by Rohith Sharma K S.\n",
      "commitDate": "29/08/17 10:59 PM",
      "commitName": "05ff04439e2edeef0460bc9e21034535b8b6eb9e",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "19/01/17 8:52 PM",
      "commitNameOld": "b01514f65bc6090a50a583f67d1ecb5d74b6d276",
      "commitAuthorOld": "Sangjin Lee",
      "daysBetweenCommits": 222.05,
      "commitsBetweenForRepo": 1248,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,31 @@\n     public EntityRowKey decode(byte[] rowKey) {\n       byte[][] rowKeyComponents \u003d\n           Separator.QUALIFIERS.split(rowKey, SEGMENT_SIZES);\n-      if (rowKeyComponents.length !\u003d 7) {\n+      if (rowKeyComponents.length !\u003d 8) {\n         throw new IllegalArgumentException(\"the row key is not valid for \"\n             + \"an entity\");\n       }\n       String userId \u003d\n           Separator.decode(Bytes.toString(rowKeyComponents[0]),\n               Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n       String clusterId \u003d\n           Separator.decode(Bytes.toString(rowKeyComponents[1]),\n               Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n       String flowName \u003d\n           Separator.decode(Bytes.toString(rowKeyComponents[2]),\n               Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n       Long flowRunId \u003d\n           LongConverter.invertLong(Bytes.toLong(rowKeyComponents[3]));\n       String appId \u003d appIDKeyConverter.decode(rowKeyComponents[4]);\n       String entityType \u003d\n           Separator.decode(Bytes.toString(rowKeyComponents[5]),\n               Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n+\n+      long entityPrefixId \u003d Bytes.toLong(rowKeyComponents[6]);\n+\n       String entityId \u003d\n-          Separator.decode(Bytes.toString(rowKeyComponents[6]),\n+          Separator.decode(Bytes.toString(rowKeyComponents[7]),\n               Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n       return new EntityRowKey(clusterId, userId, flowName, flowRunId, appId,\n-          entityType, entityId);\n+          entityType, entityPrefixId, entityId);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public EntityRowKey decode(byte[] rowKey) {\n      byte[][] rowKeyComponents \u003d\n          Separator.QUALIFIERS.split(rowKey, SEGMENT_SIZES);\n      if (rowKeyComponents.length !\u003d 8) {\n        throw new IllegalArgumentException(\"the row key is not valid for \"\n            + \"an entity\");\n      }\n      String userId \u003d\n          Separator.decode(Bytes.toString(rowKeyComponents[0]),\n              Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n      String clusterId \u003d\n          Separator.decode(Bytes.toString(rowKeyComponents[1]),\n              Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n      String flowName \u003d\n          Separator.decode(Bytes.toString(rowKeyComponents[2]),\n              Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n      Long flowRunId \u003d\n          LongConverter.invertLong(Bytes.toLong(rowKeyComponents[3]));\n      String appId \u003d appIDKeyConverter.decode(rowKeyComponents[4]);\n      String entityType \u003d\n          Separator.decode(Bytes.toString(rowKeyComponents[5]),\n              Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n\n      long entityPrefixId \u003d Bytes.toLong(rowKeyComponents[6]);\n\n      String entityId \u003d\n          Separator.decode(Bytes.toString(rowKeyComponents[7]),\n              Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n      return new EntityRowKey(clusterId, userId, flowName, flowRunId, appId,\n          entityType, entityPrefixId, entityId);\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/entity/EntityRowKey.java",
      "extendedDetails": {}
    },
    "b01514f65bc6090a50a583f67d1ecb5d74b6d276": {
      "type": "Yfilerename",
      "commitMessage": "YARN-5928. Move ATSv2 HBase backend code into a new module that is only dependent at runtime by yarn servers. Contributed by Haibo Chen.\n",
      "commitDate": "19/01/17 8:52 PM",
      "commitName": "b01514f65bc6090a50a583f67d1ecb5d74b6d276",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "19/01/17 5:32 PM",
      "commitNameOld": "60865c8ea08053f3d6ac23f81c3376a3de3ca996",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 0.14,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public EntityRowKey decode(byte[] rowKey) {\n      byte[][] rowKeyComponents \u003d\n          Separator.QUALIFIERS.split(rowKey, SEGMENT_SIZES);\n      if (rowKeyComponents.length !\u003d 7) {\n        throw new IllegalArgumentException(\"the row key is not valid for \"\n            + \"an entity\");\n      }\n      String userId \u003d\n          Separator.decode(Bytes.toString(rowKeyComponents[0]),\n              Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n      String clusterId \u003d\n          Separator.decode(Bytes.toString(rowKeyComponents[1]),\n              Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n      String flowName \u003d\n          Separator.decode(Bytes.toString(rowKeyComponents[2]),\n              Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n      Long flowRunId \u003d\n          LongConverter.invertLong(Bytes.toLong(rowKeyComponents[3]));\n      String appId \u003d appIDKeyConverter.decode(rowKeyComponents[4]);\n      String entityType \u003d\n          Separator.decode(Bytes.toString(rowKeyComponents[5]),\n              Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n      String entityId \u003d\n          Separator.decode(Bytes.toString(rowKeyComponents[6]),\n              Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n      return new EntityRowKey(clusterId, userId, flowName, flowRunId, appId,\n          entityType, entityId);\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/entity/EntityRowKey.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/entity/EntityRowKey.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/entity/EntityRowKey.java"
      }
    },
    "892b193bd77c15932b4c084c1d525b7017def0d4": {
      "type": "Ymultichange(Ymovefromfile,Yreturntypechange,Ybodychange)",
      "commitMessage": "YARN-5170. Eliminate singleton converters and static method access. (Joep Rottinghuis via Varun Saxena)\n",
      "commitDate": "10/07/16 8:46 AM",
      "commitName": "892b193bd77c15932b4c084c1d525b7017def0d4",
      "commitAuthor": "Varun Saxena",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-5170. Eliminate singleton converters and static method access. (Joep Rottinghuis via Varun Saxena)\n",
          "commitDate": "10/07/16 8:46 AM",
          "commitName": "892b193bd77c15932b4c084c1d525b7017def0d4",
          "commitAuthor": "Varun Saxena",
          "commitDateOld": "10/07/16 8:46 AM",
          "commitNameOld": "3832795e3c3ea9dcf5c70f348f894882b2ace98e",
          "commitAuthorOld": "Vrushali Channapattan",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,28 @@\n-  public FlowActivityRowKey decode(byte[] rowKey) {\n-    byte[][] rowKeyComponents \u003d\n-        Separator.QUALIFIERS.split(rowKey, SEGMENT_SIZES);\n-    if (rowKeyComponents.length !\u003d 4) {\n-      throw new IllegalArgumentException(\"the row key is not valid for \"\n-          + \"a flow activity\");\n-    }\n-    String clusterId \u003d Separator.decode(Bytes.toString(rowKeyComponents[0]),\n-        Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n-    Long dayTs \u003d\n-        TimelineStorageUtils.invertLong(Bytes.toLong(rowKeyComponents[1]));\n-    String userId \u003d Separator.decode(Bytes.toString(rowKeyComponents[2]),\n-        Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n-    String flowName \u003d Separator.decode(Bytes.toString(rowKeyComponents[3]),\n-        Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n-    return new FlowActivityRowKey(clusterId, dayTs, userId, flowName);\n-  }\n\\ No newline at end of file\n+    public EntityRowKey decode(byte[] rowKey) {\n+      byte[][] rowKeyComponents \u003d\n+          Separator.QUALIFIERS.split(rowKey, SEGMENT_SIZES);\n+      if (rowKeyComponents.length !\u003d 7) {\n+        throw new IllegalArgumentException(\"the row key is not valid for \"\n+            + \"an entity\");\n+      }\n+      String userId \u003d\n+          Separator.decode(Bytes.toString(rowKeyComponents[0]),\n+              Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n+      String clusterId \u003d\n+          Separator.decode(Bytes.toString(rowKeyComponents[1]),\n+              Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n+      String flowName \u003d\n+          Separator.decode(Bytes.toString(rowKeyComponents[2]),\n+              Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n+      Long flowRunId \u003d\n+          LongConverter.invertLong(Bytes.toLong(rowKeyComponents[3]));\n+      String appId \u003d appIDKeyConverter.decode(rowKeyComponents[4]);\n+      String entityType \u003d\n+          Separator.decode(Bytes.toString(rowKeyComponents[5]),\n+              Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n+      String entityId \u003d\n+          Separator.decode(Bytes.toString(rowKeyComponents[6]),\n+              Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n+      return new EntityRowKey(clusterId, userId, flowName, flowRunId, appId,\n+          entityType, entityId);\n+    }\n\\ No newline at end of file\n",
          "actualSource": "    public EntityRowKey decode(byte[] rowKey) {\n      byte[][] rowKeyComponents \u003d\n          Separator.QUALIFIERS.split(rowKey, SEGMENT_SIZES);\n      if (rowKeyComponents.length !\u003d 7) {\n        throw new IllegalArgumentException(\"the row key is not valid for \"\n            + \"an entity\");\n      }\n      String userId \u003d\n          Separator.decode(Bytes.toString(rowKeyComponents[0]),\n              Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n      String clusterId \u003d\n          Separator.decode(Bytes.toString(rowKeyComponents[1]),\n              Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n      String flowName \u003d\n          Separator.decode(Bytes.toString(rowKeyComponents[2]),\n              Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n      Long flowRunId \u003d\n          LongConverter.invertLong(Bytes.toLong(rowKeyComponents[3]));\n      String appId \u003d appIDKeyConverter.decode(rowKeyComponents[4]);\n      String entityType \u003d\n          Separator.decode(Bytes.toString(rowKeyComponents[5]),\n              Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n      String entityId \u003d\n          Separator.decode(Bytes.toString(rowKeyComponents[6]),\n              Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n      return new EntityRowKey(clusterId, userId, flowName, flowRunId, appId,\n          entityType, entityId);\n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/entity/EntityRowKey.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowActivityRowKeyConverter.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/entity/EntityRowKey.java",
            "oldMethodName": "decode",
            "newMethodName": "decode"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "YARN-5170. Eliminate singleton converters and static method access. (Joep Rottinghuis via Varun Saxena)\n",
          "commitDate": "10/07/16 8:46 AM",
          "commitName": "892b193bd77c15932b4c084c1d525b7017def0d4",
          "commitAuthor": "Varun Saxena",
          "commitDateOld": "10/07/16 8:46 AM",
          "commitNameOld": "3832795e3c3ea9dcf5c70f348f894882b2ace98e",
          "commitAuthorOld": "Vrushali Channapattan",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,28 @@\n-  public FlowActivityRowKey decode(byte[] rowKey) {\n-    byte[][] rowKeyComponents \u003d\n-        Separator.QUALIFIERS.split(rowKey, SEGMENT_SIZES);\n-    if (rowKeyComponents.length !\u003d 4) {\n-      throw new IllegalArgumentException(\"the row key is not valid for \"\n-          + \"a flow activity\");\n-    }\n-    String clusterId \u003d Separator.decode(Bytes.toString(rowKeyComponents[0]),\n-        Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n-    Long dayTs \u003d\n-        TimelineStorageUtils.invertLong(Bytes.toLong(rowKeyComponents[1]));\n-    String userId \u003d Separator.decode(Bytes.toString(rowKeyComponents[2]),\n-        Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n-    String flowName \u003d Separator.decode(Bytes.toString(rowKeyComponents[3]),\n-        Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n-    return new FlowActivityRowKey(clusterId, dayTs, userId, flowName);\n-  }\n\\ No newline at end of file\n+    public EntityRowKey decode(byte[] rowKey) {\n+      byte[][] rowKeyComponents \u003d\n+          Separator.QUALIFIERS.split(rowKey, SEGMENT_SIZES);\n+      if (rowKeyComponents.length !\u003d 7) {\n+        throw new IllegalArgumentException(\"the row key is not valid for \"\n+            + \"an entity\");\n+      }\n+      String userId \u003d\n+          Separator.decode(Bytes.toString(rowKeyComponents[0]),\n+              Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n+      String clusterId \u003d\n+          Separator.decode(Bytes.toString(rowKeyComponents[1]),\n+              Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n+      String flowName \u003d\n+          Separator.decode(Bytes.toString(rowKeyComponents[2]),\n+              Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n+      Long flowRunId \u003d\n+          LongConverter.invertLong(Bytes.toLong(rowKeyComponents[3]));\n+      String appId \u003d appIDKeyConverter.decode(rowKeyComponents[4]);\n+      String entityType \u003d\n+          Separator.decode(Bytes.toString(rowKeyComponents[5]),\n+              Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n+      String entityId \u003d\n+          Separator.decode(Bytes.toString(rowKeyComponents[6]),\n+              Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n+      return new EntityRowKey(clusterId, userId, flowName, flowRunId, appId,\n+          entityType, entityId);\n+    }\n\\ No newline at end of file\n",
          "actualSource": "    public EntityRowKey decode(byte[] rowKey) {\n      byte[][] rowKeyComponents \u003d\n          Separator.QUALIFIERS.split(rowKey, SEGMENT_SIZES);\n      if (rowKeyComponents.length !\u003d 7) {\n        throw new IllegalArgumentException(\"the row key is not valid for \"\n            + \"an entity\");\n      }\n      String userId \u003d\n          Separator.decode(Bytes.toString(rowKeyComponents[0]),\n              Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n      String clusterId \u003d\n          Separator.decode(Bytes.toString(rowKeyComponents[1]),\n              Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n      String flowName \u003d\n          Separator.decode(Bytes.toString(rowKeyComponents[2]),\n              Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n      Long flowRunId \u003d\n          LongConverter.invertLong(Bytes.toLong(rowKeyComponents[3]));\n      String appId \u003d appIDKeyConverter.decode(rowKeyComponents[4]);\n      String entityType \u003d\n          Separator.decode(Bytes.toString(rowKeyComponents[5]),\n              Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n      String entityId \u003d\n          Separator.decode(Bytes.toString(rowKeyComponents[6]),\n              Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n      return new EntityRowKey(clusterId, userId, flowName, flowRunId, appId,\n          entityType, entityId);\n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/entity/EntityRowKey.java",
          "extendedDetails": {
            "oldValue": "FlowActivityRowKey",
            "newValue": "EntityRowKey"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-5170. Eliminate singleton converters and static method access. (Joep Rottinghuis via Varun Saxena)\n",
          "commitDate": "10/07/16 8:46 AM",
          "commitName": "892b193bd77c15932b4c084c1d525b7017def0d4",
          "commitAuthor": "Varun Saxena",
          "commitDateOld": "10/07/16 8:46 AM",
          "commitNameOld": "3832795e3c3ea9dcf5c70f348f894882b2ace98e",
          "commitAuthorOld": "Vrushali Channapattan",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,28 @@\n-  public FlowActivityRowKey decode(byte[] rowKey) {\n-    byte[][] rowKeyComponents \u003d\n-        Separator.QUALIFIERS.split(rowKey, SEGMENT_SIZES);\n-    if (rowKeyComponents.length !\u003d 4) {\n-      throw new IllegalArgumentException(\"the row key is not valid for \"\n-          + \"a flow activity\");\n-    }\n-    String clusterId \u003d Separator.decode(Bytes.toString(rowKeyComponents[0]),\n-        Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n-    Long dayTs \u003d\n-        TimelineStorageUtils.invertLong(Bytes.toLong(rowKeyComponents[1]));\n-    String userId \u003d Separator.decode(Bytes.toString(rowKeyComponents[2]),\n-        Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n-    String flowName \u003d Separator.decode(Bytes.toString(rowKeyComponents[3]),\n-        Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n-    return new FlowActivityRowKey(clusterId, dayTs, userId, flowName);\n-  }\n\\ No newline at end of file\n+    public EntityRowKey decode(byte[] rowKey) {\n+      byte[][] rowKeyComponents \u003d\n+          Separator.QUALIFIERS.split(rowKey, SEGMENT_SIZES);\n+      if (rowKeyComponents.length !\u003d 7) {\n+        throw new IllegalArgumentException(\"the row key is not valid for \"\n+            + \"an entity\");\n+      }\n+      String userId \u003d\n+          Separator.decode(Bytes.toString(rowKeyComponents[0]),\n+              Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n+      String clusterId \u003d\n+          Separator.decode(Bytes.toString(rowKeyComponents[1]),\n+              Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n+      String flowName \u003d\n+          Separator.decode(Bytes.toString(rowKeyComponents[2]),\n+              Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n+      Long flowRunId \u003d\n+          LongConverter.invertLong(Bytes.toLong(rowKeyComponents[3]));\n+      String appId \u003d appIDKeyConverter.decode(rowKeyComponents[4]);\n+      String entityType \u003d\n+          Separator.decode(Bytes.toString(rowKeyComponents[5]),\n+              Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n+      String entityId \u003d\n+          Separator.decode(Bytes.toString(rowKeyComponents[6]),\n+              Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n+      return new EntityRowKey(clusterId, userId, flowName, flowRunId, appId,\n+          entityType, entityId);\n+    }\n\\ No newline at end of file\n",
          "actualSource": "    public EntityRowKey decode(byte[] rowKey) {\n      byte[][] rowKeyComponents \u003d\n          Separator.QUALIFIERS.split(rowKey, SEGMENT_SIZES);\n      if (rowKeyComponents.length !\u003d 7) {\n        throw new IllegalArgumentException(\"the row key is not valid for \"\n            + \"an entity\");\n      }\n      String userId \u003d\n          Separator.decode(Bytes.toString(rowKeyComponents[0]),\n              Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n      String clusterId \u003d\n          Separator.decode(Bytes.toString(rowKeyComponents[1]),\n              Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n      String flowName \u003d\n          Separator.decode(Bytes.toString(rowKeyComponents[2]),\n              Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n      Long flowRunId \u003d\n          LongConverter.invertLong(Bytes.toLong(rowKeyComponents[3]));\n      String appId \u003d appIDKeyConverter.decode(rowKeyComponents[4]);\n      String entityType \u003d\n          Separator.decode(Bytes.toString(rowKeyComponents[5]),\n              Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n      String entityId \u003d\n          Separator.decode(Bytes.toString(rowKeyComponents[6]),\n              Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n      return new EntityRowKey(clusterId, userId, flowName, flowRunId, appId,\n          entityType, entityId);\n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/entity/EntityRowKey.java",
          "extendedDetails": {}
        }
      ]
    },
    "7b8cfa5c2ff62005c8b78867fedd64b48e50383d": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5109. timestamps are stored unencoded causing parse errors (Varun Saxena via sjlee)\n",
      "commitDate": "10/07/16 8:46 AM",
      "commitName": "7b8cfa5c2ff62005c8b78867fedd64b48e50383d",
      "commitAuthor": "Sangjin Lee",
      "diff": "@@ -0,0 +1,17 @@\n+  public FlowActivityRowKey decode(byte[] rowKey) {\n+    byte[][] rowKeyComponents \u003d\n+        Separator.QUALIFIERS.split(rowKey, SEGMENT_SIZES);\n+    if (rowKeyComponents.length !\u003d 4) {\n+      throw new IllegalArgumentException(\"the row key is not valid for \"\n+          + \"a flow activity\");\n+    }\n+    String clusterId \u003d Separator.decode(Bytes.toString(rowKeyComponents[0]),\n+        Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n+    Long dayTs \u003d\n+        TimelineStorageUtils.invertLong(Bytes.toLong(rowKeyComponents[1]));\n+    String userId \u003d Separator.decode(Bytes.toString(rowKeyComponents[2]),\n+        Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n+    String flowName \u003d Separator.decode(Bytes.toString(rowKeyComponents[3]),\n+        Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n+    return new FlowActivityRowKey(clusterId, dayTs, userId, flowName);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public FlowActivityRowKey decode(byte[] rowKey) {\n    byte[][] rowKeyComponents \u003d\n        Separator.QUALIFIERS.split(rowKey, SEGMENT_SIZES);\n    if (rowKeyComponents.length !\u003d 4) {\n      throw new IllegalArgumentException(\"the row key is not valid for \"\n          + \"a flow activity\");\n    }\n    String clusterId \u003d Separator.decode(Bytes.toString(rowKeyComponents[0]),\n        Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n    Long dayTs \u003d\n        TimelineStorageUtils.invertLong(Bytes.toLong(rowKeyComponents[1]));\n    String userId \u003d Separator.decode(Bytes.toString(rowKeyComponents[2]),\n        Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n    String flowName \u003d Separator.decode(Bytes.toString(rowKeyComponents[3]),\n        Separator.QUALIFIERS, Separator.TAB, Separator.SPACE);\n    return new FlowActivityRowKey(clusterId, dayTs, userId, flowName);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowActivityRowKeyConverter.java"
    }
  }
}