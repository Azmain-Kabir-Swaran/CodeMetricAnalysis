{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FlowRunEntityReader.java",
  "functionName": "validateParams",
  "functionId": "validateParams",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/reader/FlowRunEntityReader.java",
  "functionStartLine": 88,
  "functionEndLine": 111,
  "numCommitsSeen": 23,
  "timeTaken": 5392,
  "changeHistory": [
    "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2",
    "b01514f65bc6090a50a583f67d1ecb5d74b6d276",
    "c81a2e1d197b9995103797348cb5cc4bcf9a015b",
    "c2efdc415a13496da43a9a8d13c73d88ca8565a1",
    "960af7d4717b8a8949d0b2e43949e7daab45aa88",
    "9cb1287e9b8425f91de925f411c3c2a8fa9fe2a3",
    "88f02941144824187b70fa2aaf0c6d90bcb77d8f",
    "8ef546c1ee9fce0b171813547253374d268566ba",
    "d014f2ffd24c1aaebda7503ce0e5a81334a5f266",
    "10fa6da7d8a6013698767c6136ae20f0e04415e9",
    "9e5155be363c6610ccf41fe08b7f1394f353ea65"
  ],
  "changeHistoryShort": {
    "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2": "Yfilerename",
    "b01514f65bc6090a50a583f67d1ecb5d74b6d276": "Yfilerename",
    "c81a2e1d197b9995103797348cb5cc4bcf9a015b": "Ybodychange",
    "c2efdc415a13496da43a9a8d13c73d88ca8565a1": "Ybodychange",
    "960af7d4717b8a8949d0b2e43949e7daab45aa88": "Ybodychange",
    "9cb1287e9b8425f91de925f411c3c2a8fa9fe2a3": "Ybodychange",
    "88f02941144824187b70fa2aaf0c6d90bcb77d8f": "Yfilerename",
    "8ef546c1ee9fce0b171813547253374d268566ba": "Ybodychange",
    "d014f2ffd24c1aaebda7503ce0e5a81334a5f266": "Ybodychange",
    "10fa6da7d8a6013698767c6136ae20f0e04415e9": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yparameterchange)",
    "9e5155be363c6610ccf41fe08b7f1394f353ea65": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2": {
      "type": "Yfilerename",
      "commitMessage": "YARN-7919. Refactor timelineservice-hbase module into submodules. Contributed by Haibo Chen.\n",
      "commitDate": "17/02/18 7:00 AM",
      "commitName": "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2",
      "commitAuthor": "Rohith Sharma K S",
      "commitDateOld": "17/02/18 3:24 AM",
      "commitNameOld": "a1e56a62863d8d494af309ec5f476c4b7e4d5ef9",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 0.15,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected void validateParams() {\n    Preconditions.checkNotNull(getContext(), \"context shouldn\u0027t be null\");\n    Preconditions.checkNotNull(getDataToRetrieve(),\n        \"data to retrieve shouldn\u0027t be null\");\n    Preconditions.checkNotNull(getContext().getClusterId(),\n        \"clusterId shouldn\u0027t be null\");\n    Preconditions.checkNotNull(getContext().getUserId(),\n        \"userId shouldn\u0027t be null\");\n    Preconditions.checkNotNull(getContext().getFlowName(),\n        \"flowName shouldn\u0027t be null\");\n    if (isSingleEntityRead()) {\n      Preconditions.checkNotNull(getContext().getFlowRunId(),\n          \"flowRunId shouldn\u0027t be null\");\n    }\n    EnumSet\u003cField\u003e fieldsToRetrieve \u003d getDataToRetrieve().getFieldsToRetrieve();\n    if (!isSingleEntityRead() \u0026\u0026 fieldsToRetrieve !\u003d null) {\n      for (Field field : fieldsToRetrieve) {\n        if (field !\u003d Field.ALL \u0026\u0026 field !\u003d Field.METRICS) {\n          throw new BadRequestException(\"Invalid field \" + field\n              + \" specified while querying flow runs.\");\n        }\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/reader/FlowRunEntityReader.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/reader/FlowRunEntityReader.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/reader/FlowRunEntityReader.java"
      }
    },
    "b01514f65bc6090a50a583f67d1ecb5d74b6d276": {
      "type": "Yfilerename",
      "commitMessage": "YARN-5928. Move ATSv2 HBase backend code into a new module that is only dependent at runtime by yarn servers. Contributed by Haibo Chen.\n",
      "commitDate": "19/01/17 8:52 PM",
      "commitName": "b01514f65bc6090a50a583f67d1ecb5d74b6d276",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "19/01/17 5:32 PM",
      "commitNameOld": "60865c8ea08053f3d6ac23f81c3376a3de3ca996",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 0.14,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected void validateParams() {\n    Preconditions.checkNotNull(getContext(), \"context shouldn\u0027t be null\");\n    Preconditions.checkNotNull(getDataToRetrieve(),\n        \"data to retrieve shouldn\u0027t be null\");\n    Preconditions.checkNotNull(getContext().getClusterId(),\n        \"clusterId shouldn\u0027t be null\");\n    Preconditions.checkNotNull(getContext().getUserId(),\n        \"userId shouldn\u0027t be null\");\n    Preconditions.checkNotNull(getContext().getFlowName(),\n        \"flowName shouldn\u0027t be null\");\n    if (isSingleEntityRead()) {\n      Preconditions.checkNotNull(getContext().getFlowRunId(),\n          \"flowRunId shouldn\u0027t be null\");\n    }\n    EnumSet\u003cField\u003e fieldsToRetrieve \u003d getDataToRetrieve().getFieldsToRetrieve();\n    if (!isSingleEntityRead() \u0026\u0026 fieldsToRetrieve !\u003d null) {\n      for (Field field : fieldsToRetrieve) {\n        if (field !\u003d Field.ALL \u0026\u0026 field !\u003d Field.METRICS) {\n          throw new BadRequestException(\"Invalid field \" + field\n              + \" specified while querying flow runs.\");\n        }\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/reader/FlowRunEntityReader.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/reader/FlowRunEntityReader.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/reader/FlowRunEntityReader.java"
      }
    },
    "c81a2e1d197b9995103797348cb5cc4bcf9a015b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5015. entire time series is returned for YARN container system metrics (CPU and memory) (Varun Saxena via sjlee)\n",
      "commitDate": "10/07/16 8:46 AM",
      "commitName": "c81a2e1d197b9995103797348cb5cc4bcf9a015b",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "c2efdc415a13496da43a9a8d13c73d88ca8565a1",
      "commitAuthorOld": "Sangjin Lee",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 20,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,24 @@\n   protected void validateParams() {\n     Preconditions.checkNotNull(getContext(), \"context shouldn\u0027t be null\");\n     Preconditions.checkNotNull(\n         getDataToRetrieve(), \"data to retrieve shouldn\u0027t be null\");\n     Preconditions.checkNotNull(getContext().getClusterId(),\n         \"clusterId shouldn\u0027t be null\");\n     Preconditions.checkNotNull(getContext().getUserId(),\n         \"userId shouldn\u0027t be null\");\n     Preconditions.checkNotNull(getContext().getFlowName(),\n         \"flowName shouldn\u0027t be null\");\n     if (isSingleEntityRead()) {\n       Preconditions.checkNotNull(getContext().getFlowRunId(),\n           \"flowRunId shouldn\u0027t be null\");\n     }\n+    EnumSet\u003cField\u003e fieldsToRetrieve \u003d getDataToRetrieve().getFieldsToRetrieve();\n+    if (!isSingleEntityRead() \u0026\u0026 fieldsToRetrieve !\u003d null) {\n+      for (Field field : fieldsToRetrieve) {\n+        if (field !\u003d Field.ALL \u0026\u0026 field !\u003d Field.METRICS) {\n+          throw new BadRequestException(\"Invalid field \" + field +\n+              \" specified while querying flow runs.\");\n+        }\n+      }\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void validateParams() {\n    Preconditions.checkNotNull(getContext(), \"context shouldn\u0027t be null\");\n    Preconditions.checkNotNull(\n        getDataToRetrieve(), \"data to retrieve shouldn\u0027t be null\");\n    Preconditions.checkNotNull(getContext().getClusterId(),\n        \"clusterId shouldn\u0027t be null\");\n    Preconditions.checkNotNull(getContext().getUserId(),\n        \"userId shouldn\u0027t be null\");\n    Preconditions.checkNotNull(getContext().getFlowName(),\n        \"flowName shouldn\u0027t be null\");\n    if (isSingleEntityRead()) {\n      Preconditions.checkNotNull(getContext().getFlowRunId(),\n          \"flowRunId shouldn\u0027t be null\");\n    }\n    EnumSet\u003cField\u003e fieldsToRetrieve \u003d getDataToRetrieve().getFieldsToRetrieve();\n    if (!isSingleEntityRead() \u0026\u0026 fieldsToRetrieve !\u003d null) {\n      for (Field field : fieldsToRetrieve) {\n        if (field !\u003d Field.ALL \u0026\u0026 field !\u003d Field.METRICS) {\n          throw new BadRequestException(\"Invalid field \" + field +\n              \" specified while querying flow runs.\");\n        }\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/reader/FlowRunEntityReader.java",
      "extendedDetails": {}
    },
    "c2efdc415a13496da43a9a8d13c73d88ca8565a1": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3863. Support complex filters in TimelineReader (Varun Saxena via sjlee)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "c2efdc415a13496da43a9a8d13c73d88ca8565a1",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "960af7d4717b8a8949d0b2e43949e7daab45aa88",
      "commitAuthorOld": "Sangjin Lee",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,15 @@\n   protected void validateParams() {\n+    Preconditions.checkNotNull(getContext(), \"context shouldn\u0027t be null\");\n+    Preconditions.checkNotNull(\n+        getDataToRetrieve(), \"data to retrieve shouldn\u0027t be null\");\n     Preconditions.checkNotNull(getContext().getClusterId(),\n         \"clusterId shouldn\u0027t be null\");\n     Preconditions.checkNotNull(getContext().getUserId(),\n         \"userId shouldn\u0027t be null\");\n     Preconditions.checkNotNull(getContext().getFlowName(),\n         \"flowName shouldn\u0027t be null\");\n     if (isSingleEntityRead()) {\n       Preconditions.checkNotNull(getContext().getFlowRunId(),\n           \"flowRunId shouldn\u0027t be null\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void validateParams() {\n    Preconditions.checkNotNull(getContext(), \"context shouldn\u0027t be null\");\n    Preconditions.checkNotNull(\n        getDataToRetrieve(), \"data to retrieve shouldn\u0027t be null\");\n    Preconditions.checkNotNull(getContext().getClusterId(),\n        \"clusterId shouldn\u0027t be null\");\n    Preconditions.checkNotNull(getContext().getUserId(),\n        \"userId shouldn\u0027t be null\");\n    Preconditions.checkNotNull(getContext().getFlowName(),\n        \"flowName shouldn\u0027t be null\");\n    if (isSingleEntityRead()) {\n      Preconditions.checkNotNull(getContext().getFlowRunId(),\n          \"flowRunId shouldn\u0027t be null\");\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/reader/FlowRunEntityReader.java",
      "extendedDetails": {}
    },
    "960af7d4717b8a8949d0b2e43949e7daab45aa88": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4409. Fix javadoc and checkstyle issues in timelineservice code (Varun Saxena via sjlee)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "960af7d4717b8a8949d0b2e43949e7daab45aa88",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "9cb1287e9b8425f91de925f411c3c2a8fa9fe2a3",
      "commitAuthorOld": "Sangjin Lee",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n   protected void validateParams() {\n     Preconditions.checkNotNull(getContext().getClusterId(),\n         \"clusterId shouldn\u0027t be null\");\n     Preconditions.checkNotNull(getContext().getUserId(),\n         \"userId shouldn\u0027t be null\");\n     Preconditions.checkNotNull(getContext().getFlowName(),\n         \"flowName shouldn\u0027t be null\");\n-    if (singleEntityRead) {\n+    if (isSingleEntityRead()) {\n       Preconditions.checkNotNull(getContext().getFlowRunId(),\n           \"flowRunId shouldn\u0027t be null\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void validateParams() {\n    Preconditions.checkNotNull(getContext().getClusterId(),\n        \"clusterId shouldn\u0027t be null\");\n    Preconditions.checkNotNull(getContext().getUserId(),\n        \"userId shouldn\u0027t be null\");\n    Preconditions.checkNotNull(getContext().getFlowName(),\n        \"flowName shouldn\u0027t be null\");\n    if (isSingleEntityRead()) {\n      Preconditions.checkNotNull(getContext().getFlowRunId(),\n          \"flowRunId shouldn\u0027t be null\");\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/reader/FlowRunEntityReader.java",
      "extendedDetails": {}
    },
    "9cb1287e9b8425f91de925f411c3c2a8fa9fe2a3": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4446. Refactor reader API for better extensibility (Varun Saxena via sjlee)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "9cb1287e9b8425f91de925f411c3c2a8fa9fe2a3",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "6934b05c7117a12286fb2ba7a47f75e227cacb22",
      "commitAuthorOld": "Naganarasimha",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,12 @@\n   protected void validateParams() {\n-    Preconditions.checkNotNull(clusterId, \"clusterId shouldn\u0027t be null\");\n-    Preconditions.checkNotNull(userId, \"userId shouldn\u0027t be null\");\n-    Preconditions.checkNotNull(flowName, \"flowName shouldn\u0027t be null\");\n+    Preconditions.checkNotNull(getContext().getClusterId(),\n+        \"clusterId shouldn\u0027t be null\");\n+    Preconditions.checkNotNull(getContext().getUserId(),\n+        \"userId shouldn\u0027t be null\");\n+    Preconditions.checkNotNull(getContext().getFlowName(),\n+        \"flowName shouldn\u0027t be null\");\n     if (singleEntityRead) {\n-      Preconditions.checkNotNull(flowRunId, \"flowRunId shouldn\u0027t be null\");\n+      Preconditions.checkNotNull(getContext().getFlowRunId(),\n+          \"flowRunId shouldn\u0027t be null\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void validateParams() {\n    Preconditions.checkNotNull(getContext().getClusterId(),\n        \"clusterId shouldn\u0027t be null\");\n    Preconditions.checkNotNull(getContext().getUserId(),\n        \"userId shouldn\u0027t be null\");\n    Preconditions.checkNotNull(getContext().getFlowName(),\n        \"flowName shouldn\u0027t be null\");\n    if (singleEntityRead) {\n      Preconditions.checkNotNull(getContext().getFlowRunId(),\n          \"flowRunId shouldn\u0027t be null\");\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/reader/FlowRunEntityReader.java",
      "extendedDetails": {}
    },
    "88f02941144824187b70fa2aaf0c6d90bcb77d8f": {
      "type": "Yfilerename",
      "commitMessage": "YARN-4200. Refactor reader classes in storage to nest under hbase\nspecific package name. Contributed by Li Lu.\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "88f02941144824187b70fa2aaf0c6d90bcb77d8f",
      "commitAuthor": "Li Lu",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "cc16683cefe2611cf4de7819496aa54854f5394c",
      "commitAuthorOld": "Sangjin Lee",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected void validateParams() {\n    Preconditions.checkNotNull(clusterId, \"clusterId shouldn\u0027t be null\");\n    Preconditions.checkNotNull(userId, \"userId shouldn\u0027t be null\");\n    Preconditions.checkNotNull(flowName, \"flowName shouldn\u0027t be null\");\n    if (singleEntityRead) {\n      Preconditions.checkNotNull(flowRunId, \"flowRunId shouldn\u0027t be null\");\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/reader/FlowRunEntityReader.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/FlowRunEntityReader.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/reader/FlowRunEntityReader.java"
      }
    },
    "8ef546c1ee9fce0b171813547253374d268566ba": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4445. Unify the term flowId and flowName in timeline v2 codebase.\nContributed by Zhan Zhang.\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "8ef546c1ee9fce0b171813547253374d268566ba",
      "commitAuthor": "Li Lu",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "1f710484e5b8ab4d5c67379c012004e8a4242d15",
      "commitAuthorOld": "Sangjin Lee",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,8 @@\n   protected void validateParams() {\n     Preconditions.checkNotNull(clusterId, \"clusterId shouldn\u0027t be null\");\n     Preconditions.checkNotNull(userId, \"userId shouldn\u0027t be null\");\n-    Preconditions.checkNotNull(flowId, \"flowId shouldn\u0027t be null\");\n+    Preconditions.checkNotNull(flowName, \"flowName shouldn\u0027t be null\");\n     if (singleEntityRead) {\n       Preconditions.checkNotNull(flowRunId, \"flowRunId shouldn\u0027t be null\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void validateParams() {\n    Preconditions.checkNotNull(clusterId, \"clusterId shouldn\u0027t be null\");\n    Preconditions.checkNotNull(userId, \"userId shouldn\u0027t be null\");\n    Preconditions.checkNotNull(flowName, \"flowName shouldn\u0027t be null\");\n    if (singleEntityRead) {\n      Preconditions.checkNotNull(flowRunId, \"flowRunId shouldn\u0027t be null\");\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/FlowRunEntityReader.java",
      "extendedDetails": {}
    },
    "d014f2ffd24c1aaebda7503ce0e5a81334a5f266": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4237 Support additional queries for ATSv2 Web UI. Contributed by\nVarun Saxena.\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "d014f2ffd24c1aaebda7503ce0e5a81334a5f266",
      "commitAuthor": "Li Lu",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "0f44b5508d2ffcae08f130b6535a9832d37e2b38",
      "commitAuthorOld": "Sangjin Lee",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,8 @@\n   protected void validateParams() {\n     Preconditions.checkNotNull(clusterId, \"clusterId shouldn\u0027t be null\");\n     Preconditions.checkNotNull(userId, \"userId shouldn\u0027t be null\");\n     Preconditions.checkNotNull(flowId, \"flowId shouldn\u0027t be null\");\n-    Preconditions.checkNotNull(flowRunId, \"flowRunId shouldn\u0027t be null\");\n+    if (singleEntityRead) {\n+      Preconditions.checkNotNull(flowRunId, \"flowRunId shouldn\u0027t be null\");\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void validateParams() {\n    Preconditions.checkNotNull(clusterId, \"clusterId shouldn\u0027t be null\");\n    Preconditions.checkNotNull(userId, \"userId shouldn\u0027t be null\");\n    Preconditions.checkNotNull(flowId, \"flowId shouldn\u0027t be null\");\n    if (singleEntityRead) {\n      Preconditions.checkNotNull(flowRunId, \"flowRunId shouldn\u0027t be null\");\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/FlowRunEntityReader.java",
      "extendedDetails": {}
    },
    "10fa6da7d8a6013698767c6136ae20f0e04415e9": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yparameterchange)",
      "commitMessage": "YARN-4074. [timeline reader] implement support for querying for flows and flow runs (sjlee via vrushali)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "10fa6da7d8a6013698767c6136ae20f0e04415e9",
      "commitAuthor": "Vrushali",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-4074. [timeline reader] implement support for querying for flows and flow runs (sjlee via vrushali)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "10fa6da7d8a6013698767c6136ae20f0e04415e9",
          "commitAuthor": "Vrushali",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "a68e3839218523403f42acd7bdd7ce1da59a5e60",
          "commitAuthorOld": "Sangjin Lee",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,6 @@\n-  private static void validateParams(String userId, String clusterId,\n-      String appId, String entityType, String entityId, boolean checkEntityId) {\n-    Preconditions.checkNotNull(userId, \"userId shouldn\u0027t be null\");\n+  protected void validateParams() {\n     Preconditions.checkNotNull(clusterId, \"clusterId shouldn\u0027t be null\");\n-    Preconditions.checkNotNull(appId, \"appId shouldn\u0027t be null\");\n-    Preconditions.checkNotNull(entityType, \"entityType shouldn\u0027t be null\");\n-    if (checkEntityId) {\n-      Preconditions.checkNotNull(entityId, \"entityId shouldn\u0027t be null\");\n-    }\n+    Preconditions.checkNotNull(userId, \"userId shouldn\u0027t be null\");\n+    Preconditions.checkNotNull(flowId, \"flowId shouldn\u0027t be null\");\n+    Preconditions.checkNotNull(flowRunId, \"flowRunId shouldn\u0027t be null\");\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void validateParams() {\n    Preconditions.checkNotNull(clusterId, \"clusterId shouldn\u0027t be null\");\n    Preconditions.checkNotNull(userId, \"userId shouldn\u0027t be null\");\n    Preconditions.checkNotNull(flowId, \"flowId shouldn\u0027t be null\");\n    Preconditions.checkNotNull(flowRunId, \"flowRunId shouldn\u0027t be null\");\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/FlowRunEntityReader.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineReaderImpl.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/FlowRunEntityReader.java",
            "oldMethodName": "validateParams",
            "newMethodName": "validateParams"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-4074. [timeline reader] implement support for querying for flows and flow runs (sjlee via vrushali)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "10fa6da7d8a6013698767c6136ae20f0e04415e9",
          "commitAuthor": "Vrushali",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "a68e3839218523403f42acd7bdd7ce1da59a5e60",
          "commitAuthorOld": "Sangjin Lee",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,6 @@\n-  private static void validateParams(String userId, String clusterId,\n-      String appId, String entityType, String entityId, boolean checkEntityId) {\n-    Preconditions.checkNotNull(userId, \"userId shouldn\u0027t be null\");\n+  protected void validateParams() {\n     Preconditions.checkNotNull(clusterId, \"clusterId shouldn\u0027t be null\");\n-    Preconditions.checkNotNull(appId, \"appId shouldn\u0027t be null\");\n-    Preconditions.checkNotNull(entityType, \"entityType shouldn\u0027t be null\");\n-    if (checkEntityId) {\n-      Preconditions.checkNotNull(entityId, \"entityId shouldn\u0027t be null\");\n-    }\n+    Preconditions.checkNotNull(userId, \"userId shouldn\u0027t be null\");\n+    Preconditions.checkNotNull(flowId, \"flowId shouldn\u0027t be null\");\n+    Preconditions.checkNotNull(flowRunId, \"flowRunId shouldn\u0027t be null\");\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void validateParams() {\n    Preconditions.checkNotNull(clusterId, \"clusterId shouldn\u0027t be null\");\n    Preconditions.checkNotNull(userId, \"userId shouldn\u0027t be null\");\n    Preconditions.checkNotNull(flowId, \"flowId shouldn\u0027t be null\");\n    Preconditions.checkNotNull(flowRunId, \"flowRunId shouldn\u0027t be null\");\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/FlowRunEntityReader.java",
          "extendedDetails": {
            "oldValue": "[private, static]",
            "newValue": "[protected]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4074. [timeline reader] implement support for querying for flows and flow runs (sjlee via vrushali)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "10fa6da7d8a6013698767c6136ae20f0e04415e9",
          "commitAuthor": "Vrushali",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "a68e3839218523403f42acd7bdd7ce1da59a5e60",
          "commitAuthorOld": "Sangjin Lee",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,6 @@\n-  private static void validateParams(String userId, String clusterId,\n-      String appId, String entityType, String entityId, boolean checkEntityId) {\n-    Preconditions.checkNotNull(userId, \"userId shouldn\u0027t be null\");\n+  protected void validateParams() {\n     Preconditions.checkNotNull(clusterId, \"clusterId shouldn\u0027t be null\");\n-    Preconditions.checkNotNull(appId, \"appId shouldn\u0027t be null\");\n-    Preconditions.checkNotNull(entityType, \"entityType shouldn\u0027t be null\");\n-    if (checkEntityId) {\n-      Preconditions.checkNotNull(entityId, \"entityId shouldn\u0027t be null\");\n-    }\n+    Preconditions.checkNotNull(userId, \"userId shouldn\u0027t be null\");\n+    Preconditions.checkNotNull(flowId, \"flowId shouldn\u0027t be null\");\n+    Preconditions.checkNotNull(flowRunId, \"flowRunId shouldn\u0027t be null\");\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void validateParams() {\n    Preconditions.checkNotNull(clusterId, \"clusterId shouldn\u0027t be null\");\n    Preconditions.checkNotNull(userId, \"userId shouldn\u0027t be null\");\n    Preconditions.checkNotNull(flowId, \"flowId shouldn\u0027t be null\");\n    Preconditions.checkNotNull(flowRunId, \"flowRunId shouldn\u0027t be null\");\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/FlowRunEntityReader.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-4074. [timeline reader] implement support for querying for flows and flow runs (sjlee via vrushali)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "10fa6da7d8a6013698767c6136ae20f0e04415e9",
          "commitAuthor": "Vrushali",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "a68e3839218523403f42acd7bdd7ce1da59a5e60",
          "commitAuthorOld": "Sangjin Lee",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,6 @@\n-  private static void validateParams(String userId, String clusterId,\n-      String appId, String entityType, String entityId, boolean checkEntityId) {\n-    Preconditions.checkNotNull(userId, \"userId shouldn\u0027t be null\");\n+  protected void validateParams() {\n     Preconditions.checkNotNull(clusterId, \"clusterId shouldn\u0027t be null\");\n-    Preconditions.checkNotNull(appId, \"appId shouldn\u0027t be null\");\n-    Preconditions.checkNotNull(entityType, \"entityType shouldn\u0027t be null\");\n-    if (checkEntityId) {\n-      Preconditions.checkNotNull(entityId, \"entityId shouldn\u0027t be null\");\n-    }\n+    Preconditions.checkNotNull(userId, \"userId shouldn\u0027t be null\");\n+    Preconditions.checkNotNull(flowId, \"flowId shouldn\u0027t be null\");\n+    Preconditions.checkNotNull(flowRunId, \"flowRunId shouldn\u0027t be null\");\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void validateParams() {\n    Preconditions.checkNotNull(clusterId, \"clusterId shouldn\u0027t be null\");\n    Preconditions.checkNotNull(userId, \"userId shouldn\u0027t be null\");\n    Preconditions.checkNotNull(flowId, \"flowId shouldn\u0027t be null\");\n    Preconditions.checkNotNull(flowRunId, \"flowRunId shouldn\u0027t be null\");\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/FlowRunEntityReader.java",
          "extendedDetails": {
            "oldValue": "[userId-String, clusterId-String, appId-String, entityType-String, entityId-String, checkEntityId-boolean]",
            "newValue": "[]"
          }
        }
      ]
    },
    "9e5155be363c6610ccf41fe08b7f1394f353ea65": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3049. [Storage Implementation] Implement storage reader interface to fetch raw data from HBase backend (Zhijie Shen via sjlee)\n\n(cherry picked from commit 07433c2ad52df9e844dbd90020c277d3df844dcd)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "9e5155be363c6610ccf41fe08b7f1394f353ea65",
      "commitAuthor": "Sangjin Lee",
      "diff": "@@ -0,0 +1,10 @@\n+  private static void validateParams(String userId, String clusterId,\n+      String appId, String entityType, String entityId, boolean checkEntityId) {\n+    Preconditions.checkNotNull(userId, \"userId shouldn\u0027t be null\");\n+    Preconditions.checkNotNull(clusterId, \"clusterId shouldn\u0027t be null\");\n+    Preconditions.checkNotNull(appId, \"appId shouldn\u0027t be null\");\n+    Preconditions.checkNotNull(entityType, \"entityType shouldn\u0027t be null\");\n+    if (checkEntityId) {\n+      Preconditions.checkNotNull(entityId, \"entityId shouldn\u0027t be null\");\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static void validateParams(String userId, String clusterId,\n      String appId, String entityType, String entityId, boolean checkEntityId) {\n    Preconditions.checkNotNull(userId, \"userId shouldn\u0027t be null\");\n    Preconditions.checkNotNull(clusterId, \"clusterId shouldn\u0027t be null\");\n    Preconditions.checkNotNull(appId, \"appId shouldn\u0027t be null\");\n    Preconditions.checkNotNull(entityType, \"entityType shouldn\u0027t be null\");\n    if (checkEntityId) {\n      Preconditions.checkNotNull(entityId, \"entityId shouldn\u0027t be null\");\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseTimelineReaderImpl.java"
    }
  }
}