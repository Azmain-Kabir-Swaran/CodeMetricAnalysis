{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DefaultRequestInterceptor.java",
  "functionName": "allocate",
  "functionId": "allocate___request-AllocateRequest(modifiers-final)",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/amrmproxy/DefaultRequestInterceptor.java",
  "functionStartLine": 130,
  "functionEndLine": 140,
  "numCommitsSeen": 9,
  "timeTaken": 1697,
  "changeHistory": [
    "2064ca015d1584263aac0cc20c60b925a3aff612",
    "859aa1f9d621d07693825e610bdc0149f7a2770a",
    "6f72f1e6003ab11679bebeb96f27f1f62b3b3e02"
  ],
  "changeHistoryShort": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": "Ybodychange",
    "859aa1f9d621d07693825e610bdc0149f7a2770a": "Ybodychange",
    "6f72f1e6003ab11679bebeb96f27f1f62b3b3e02": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9349.  Changed logging to use slf4j api.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "15/03/19 4:20 PM",
      "commitName": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "01/08/17 5:28 PM",
      "commitNameOld": "859aa1f9d621d07693825e610bdc0149f7a2770a",
      "commitAuthorOld": "Subru Krishnan",
      "daysBetweenCommits": 590.95,
      "commitsBetweenForRepo": 5104,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,11 @@\n   public AllocateResponse allocate(final AllocateRequest request)\n       throws YarnException, IOException {\n-    if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"Forwarding allocate request to the real YARN RM\");\n-    }\n+    LOG.debug(\"Forwarding allocate request to the real YARN RM\");\n     AllocateResponse allocateResponse \u003d rmClient.allocate(request);\n     if (allocateResponse.getAMRMToken() !\u003d null) {\n       YarnServerSecurityUtils.updateAMRMToken(allocateResponse.getAMRMToken(),\n           this.user, getConf());\n     }\n \n     return allocateResponse;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public AllocateResponse allocate(final AllocateRequest request)\n      throws YarnException, IOException {\n    LOG.debug(\"Forwarding allocate request to the real YARN RM\");\n    AllocateResponse allocateResponse \u003d rmClient.allocate(request);\n    if (allocateResponse.getAMRMToken() !\u003d null) {\n      YarnServerSecurityUtils.updateAMRMToken(allocateResponse.getAMRMToken(),\n          this.user, getConf());\n    }\n\n    return allocateResponse;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/amrmproxy/DefaultRequestInterceptor.java",
      "extendedDetails": {}
    },
    "859aa1f9d621d07693825e610bdc0149f7a2770a": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5531. UnmanagedAM pool manager for federating application across clusters. (Botong Huang via Subru).\n\n(cherry picked from commit 73bb2102ce4b82b3a3bed91319f7c8f067ddc3e8)\n",
      "commitDate": "01/08/17 5:28 PM",
      "commitName": "859aa1f9d621d07693825e610bdc0149f7a2770a",
      "commitAuthor": "Subru Krishnan",
      "commitDateOld": "29/09/16 3:11 PM",
      "commitNameOld": "10be45986cdf86a89055065b752959bd6369d54f",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 306.09,
      "commitsBetweenForRepo": 1808,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,13 @@\n   public AllocateResponse allocate(final AllocateRequest request)\n       throws YarnException, IOException {\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Forwarding allocate request to the real YARN RM\");\n     }\n     AllocateResponse allocateResponse \u003d rmClient.allocate(request);\n     if (allocateResponse.getAMRMToken() !\u003d null) {\n-      updateAMRMToken(allocateResponse.getAMRMToken());\n+      YarnServerSecurityUtils.updateAMRMToken(allocateResponse.getAMRMToken(),\n+          this.user, getConf());\n     }\n \n     return allocateResponse;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public AllocateResponse allocate(final AllocateRequest request)\n      throws YarnException, IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Forwarding allocate request to the real YARN RM\");\n    }\n    AllocateResponse allocateResponse \u003d rmClient.allocate(request);\n    if (allocateResponse.getAMRMToken() !\u003d null) {\n      YarnServerSecurityUtils.updateAMRMToken(allocateResponse.getAMRMToken(),\n          this.user, getConf());\n    }\n\n    return allocateResponse;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/amrmproxy/DefaultRequestInterceptor.java",
      "extendedDetails": {}
    },
    "6f72f1e6003ab11679bebeb96f27f1f62b3b3e02": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2884. Added a proxy service in NM to proxy the the communication between AM and RM. Contributed by Kishore Chaliparambil\n",
      "commitDate": "07/09/15 6:35 PM",
      "commitName": "6f72f1e6003ab11679bebeb96f27f1f62b3b3e02",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,12 @@\n+  public AllocateResponse allocate(final AllocateRequest request)\n+      throws YarnException, IOException {\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"Forwarding allocate request to the real YARN RM\");\n+    }\n+    AllocateResponse allocateResponse \u003d rmClient.allocate(request);\n+    if (allocateResponse.getAMRMToken() !\u003d null) {\n+      updateAMRMToken(allocateResponse.getAMRMToken());\n+    }\n+\n+    return allocateResponse;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public AllocateResponse allocate(final AllocateRequest request)\n      throws YarnException, IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Forwarding allocate request to the real YARN RM\");\n    }\n    AllocateResponse allocateResponse \u003d rmClient.allocate(request);\n    if (allocateResponse.getAMRMToken() !\u003d null) {\n      updateAMRMToken(allocateResponse.getAMRMToken());\n    }\n\n    return allocateResponse;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/amrmproxy/DefaultRequestInterceptor.java"
    }
  }
}