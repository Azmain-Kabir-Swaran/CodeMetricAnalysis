{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CodecUtil.java",
  "functionName": "createRawCoderFactory",
  "functionId": "createRawCoderFactory___coderName-String__codecName-String",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/erasurecode/CodecUtil.java",
  "functionStartLine": 147,
  "functionEndLine": 154,
  "numCommitsSeen": 78,
  "timeTaken": 7449,
  "changeHistory": [
    "bbf8cac14d8b1a0e919b57cb7f081edce45acd5b",
    "ddaeb3e4979338551573285f219a2d361f502950",
    "872088c6e7e78534a8ffd1ea6e57b86faea3d6e1",
    "77202fa1035a54496d11d07472fbc399148ff630",
    "b5d4c7dc76ddb3e0af95d792c2cbc0f99353a42a",
    "e299fe86b889968a0093f9f9b097dd71b4f49e88",
    "b30e96bfb4b8ce5537671c97f0c9c56cd195bfdc",
    "09c3a375bafa481e88d1317388a73c46950164c9",
    "014d8675c59d44ad68dec36db6afe3f3666a3f15",
    "df297245a74be1a1baa1a34740dcd856eef22ea4"
  ],
  "changeHistoryShort": {
    "bbf8cac14d8b1a0e919b57cb7f081edce45acd5b": "Ymultichange(Yparameterchange,Ybodychange)",
    "ddaeb3e4979338551573285f219a2d361f502950": "Ymultichange(Yparameterchange,Ybodychange)",
    "872088c6e7e78534a8ffd1ea6e57b86faea3d6e1": "Ymultichange(Yparameterchange,Ybodychange)",
    "77202fa1035a54496d11d07472fbc399148ff630": "Ymultichange(Yrename,Yparameterchange,Yreturntypechange,Ymodifierchange,Ybodychange)",
    "b5d4c7dc76ddb3e0af95d792c2cbc0f99353a42a": "Ymultichange(Yparameterchange,Ybodychange)",
    "e299fe86b889968a0093f9f9b097dd71b4f49e88": "Ymovefromfile",
    "b30e96bfb4b8ce5537671c97f0c9c56cd195bfdc": "Ymultichange(Yparameterchange,Ybodychange)",
    "09c3a375bafa481e88d1317388a73c46950164c9": "Ybodychange",
    "014d8675c59d44ad68dec36db6afe3f3666a3f15": "Ymodifierchange",
    "df297245a74be1a1baa1a34740dcd856eef22ea4": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bbf8cac14d8b1a0e919b57cb7f081edce45acd5b": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-13200. Implement customizable and configurable erasure coders. Contributed by Tim Yao.\n",
      "commitDate": "27/04/17 12:39 PM",
      "commitName": "bbf8cac14d8b1a0e919b57cb7f081edce45acd5b",
      "commitAuthor": "Wei-Chiu Chuang",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-13200. Implement customizable and configurable erasure coders. Contributed by Tim Yao.\n",
          "commitDate": "27/04/17 12:39 PM",
          "commitName": "bbf8cac14d8b1a0e919b57cb7f081edce45acd5b",
          "commitAuthor": "Wei-Chiu Chuang",
          "commitDateOld": "27/04/17 12:25 PM",
          "commitNameOld": "ddaeb3e4979338551573285f219a2d361f502950",
          "commitAuthorOld": "Wei-Chiu Chuang",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,8 @@\n   private static RawErasureCoderFactory createRawCoderFactory(\n-      Configuration conf, String rawCoderFactoryKey) {\n+      String coderName, String codecName) {\n     RawErasureCoderFactory fact;\n-    try {\n-      Class\u003c? extends RawErasureCoderFactory\u003e factClass \u003d conf.getClassByName(\n-          rawCoderFactoryKey).asSubclass(RawErasureCoderFactory.class);\n-      fact \u003d factClass.newInstance();\n-    } catch (ClassNotFoundException | InstantiationException |\n-        IllegalAccessException e) {\n-      throw new RuntimeException(\"Failed to create raw coder factory\", e);\n-    }\n-\n-    if (fact \u003d\u003d null) {\n-      throw new RuntimeException(\"Failed to create raw coder factory\");\n-    }\n+    fact \u003d CodecRegistry.getInstance().\n+            getCoderByName(codecName, coderName);\n \n     return fact;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static RawErasureCoderFactory createRawCoderFactory(\n      String coderName, String codecName) {\n    RawErasureCoderFactory fact;\n    fact \u003d CodecRegistry.getInstance().\n            getCoderByName(codecName, coderName);\n\n    return fact;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/erasurecode/CodecUtil.java",
          "extendedDetails": {
            "oldValue": "[conf-Configuration, rawCoderFactoryKey-String]",
            "newValue": "[coderName-String, codecName-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-13200. Implement customizable and configurable erasure coders. Contributed by Tim Yao.\n",
          "commitDate": "27/04/17 12:39 PM",
          "commitName": "bbf8cac14d8b1a0e919b57cb7f081edce45acd5b",
          "commitAuthor": "Wei-Chiu Chuang",
          "commitDateOld": "27/04/17 12:25 PM",
          "commitNameOld": "ddaeb3e4979338551573285f219a2d361f502950",
          "commitAuthorOld": "Wei-Chiu Chuang",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,8 @@\n   private static RawErasureCoderFactory createRawCoderFactory(\n-      Configuration conf, String rawCoderFactoryKey) {\n+      String coderName, String codecName) {\n     RawErasureCoderFactory fact;\n-    try {\n-      Class\u003c? extends RawErasureCoderFactory\u003e factClass \u003d conf.getClassByName(\n-          rawCoderFactoryKey).asSubclass(RawErasureCoderFactory.class);\n-      fact \u003d factClass.newInstance();\n-    } catch (ClassNotFoundException | InstantiationException |\n-        IllegalAccessException e) {\n-      throw new RuntimeException(\"Failed to create raw coder factory\", e);\n-    }\n-\n-    if (fact \u003d\u003d null) {\n-      throw new RuntimeException(\"Failed to create raw coder factory\");\n-    }\n+    fact \u003d CodecRegistry.getInstance().\n+            getCoderByName(codecName, coderName);\n \n     return fact;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static RawErasureCoderFactory createRawCoderFactory(\n      String coderName, String codecName) {\n    RawErasureCoderFactory fact;\n    fact \u003d CodecRegistry.getInstance().\n            getCoderByName(codecName, coderName);\n\n    return fact;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/erasurecode/CodecUtil.java",
          "extendedDetails": {}
        }
      ]
    },
    "ddaeb3e4979338551573285f219a2d361f502950": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Revert \"HADOOP-13200. Implement customizable and configurable erasure coders. Contributed by Tim Yao.\"\n\nThis reverts commit 872088c6e7e78534a8ffd1ea6e57b86faea3d6e1.\n",
      "commitDate": "27/04/17 12:25 PM",
      "commitName": "ddaeb3e4979338551573285f219a2d361f502950",
      "commitAuthor": "Wei-Chiu Chuang",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Revert \"HADOOP-13200. Implement customizable and configurable erasure coders. Contributed by Tim Yao.\"\n\nThis reverts commit 872088c6e7e78534a8ffd1ea6e57b86faea3d6e1.\n",
          "commitDate": "27/04/17 12:25 PM",
          "commitName": "ddaeb3e4979338551573285f219a2d361f502950",
          "commitAuthor": "Wei-Chiu Chuang",
          "commitDateOld": "27/04/17 11:59 AM",
          "commitNameOld": "872088c6e7e78534a8ffd1ea6e57b86faea3d6e1",
          "commitAuthorOld": "Wei-Chiu Chuang",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,18 @@\n   private static RawErasureCoderFactory createRawCoderFactory(\n-      String coderName, String codecName) {\n+      Configuration conf, String rawCoderFactoryKey) {\n     RawErasureCoderFactory fact;\n-    fact \u003d CodecRegistry.getInstance().\n-            getCoderByName(codecName, coderName);\n+    try {\n+      Class\u003c? extends RawErasureCoderFactory\u003e factClass \u003d conf.getClassByName(\n+          rawCoderFactoryKey).asSubclass(RawErasureCoderFactory.class);\n+      fact \u003d factClass.newInstance();\n+    } catch (ClassNotFoundException | InstantiationException |\n+        IllegalAccessException e) {\n+      throw new RuntimeException(\"Failed to create raw coder factory\", e);\n+    }\n+\n+    if (fact \u003d\u003d null) {\n+      throw new RuntimeException(\"Failed to create raw coder factory\");\n+    }\n \n     return fact;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static RawErasureCoderFactory createRawCoderFactory(\n      Configuration conf, String rawCoderFactoryKey) {\n    RawErasureCoderFactory fact;\n    try {\n      Class\u003c? extends RawErasureCoderFactory\u003e factClass \u003d conf.getClassByName(\n          rawCoderFactoryKey).asSubclass(RawErasureCoderFactory.class);\n      fact \u003d factClass.newInstance();\n    } catch (ClassNotFoundException | InstantiationException |\n        IllegalAccessException e) {\n      throw new RuntimeException(\"Failed to create raw coder factory\", e);\n    }\n\n    if (fact \u003d\u003d null) {\n      throw new RuntimeException(\"Failed to create raw coder factory\");\n    }\n\n    return fact;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/erasurecode/CodecUtil.java",
          "extendedDetails": {
            "oldValue": "[coderName-String, codecName-String]",
            "newValue": "[conf-Configuration, rawCoderFactoryKey-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Revert \"HADOOP-13200. Implement customizable and configurable erasure coders. Contributed by Tim Yao.\"\n\nThis reverts commit 872088c6e7e78534a8ffd1ea6e57b86faea3d6e1.\n",
          "commitDate": "27/04/17 12:25 PM",
          "commitName": "ddaeb3e4979338551573285f219a2d361f502950",
          "commitAuthor": "Wei-Chiu Chuang",
          "commitDateOld": "27/04/17 11:59 AM",
          "commitNameOld": "872088c6e7e78534a8ffd1ea6e57b86faea3d6e1",
          "commitAuthorOld": "Wei-Chiu Chuang",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,18 @@\n   private static RawErasureCoderFactory createRawCoderFactory(\n-      String coderName, String codecName) {\n+      Configuration conf, String rawCoderFactoryKey) {\n     RawErasureCoderFactory fact;\n-    fact \u003d CodecRegistry.getInstance().\n-            getCoderByName(codecName, coderName);\n+    try {\n+      Class\u003c? extends RawErasureCoderFactory\u003e factClass \u003d conf.getClassByName(\n+          rawCoderFactoryKey).asSubclass(RawErasureCoderFactory.class);\n+      fact \u003d factClass.newInstance();\n+    } catch (ClassNotFoundException | InstantiationException |\n+        IllegalAccessException e) {\n+      throw new RuntimeException(\"Failed to create raw coder factory\", e);\n+    }\n+\n+    if (fact \u003d\u003d null) {\n+      throw new RuntimeException(\"Failed to create raw coder factory\");\n+    }\n \n     return fact;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static RawErasureCoderFactory createRawCoderFactory(\n      Configuration conf, String rawCoderFactoryKey) {\n    RawErasureCoderFactory fact;\n    try {\n      Class\u003c? extends RawErasureCoderFactory\u003e factClass \u003d conf.getClassByName(\n          rawCoderFactoryKey).asSubclass(RawErasureCoderFactory.class);\n      fact \u003d factClass.newInstance();\n    } catch (ClassNotFoundException | InstantiationException |\n        IllegalAccessException e) {\n      throw new RuntimeException(\"Failed to create raw coder factory\", e);\n    }\n\n    if (fact \u003d\u003d null) {\n      throw new RuntimeException(\"Failed to create raw coder factory\");\n    }\n\n    return fact;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/erasurecode/CodecUtil.java",
          "extendedDetails": {}
        }
      ]
    },
    "872088c6e7e78534a8ffd1ea6e57b86faea3d6e1": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-13200. Implement customizable and configurable erasure coders. Contributed by Tim Yao.\n",
      "commitDate": "27/04/17 11:59 AM",
      "commitName": "872088c6e7e78534a8ffd1ea6e57b86faea3d6e1",
      "commitAuthor": "Wei-Chiu Chuang",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-13200. Implement customizable and configurable erasure coders. Contributed by Tim Yao.\n",
          "commitDate": "27/04/17 11:59 AM",
          "commitName": "872088c6e7e78534a8ffd1ea6e57b86faea3d6e1",
          "commitAuthor": "Wei-Chiu Chuang",
          "commitDateOld": "21/04/17 11:35 AM",
          "commitNameOld": "a22fe02fba66280a8e994282e9ead23d9e20669a",
          "commitAuthorOld": "Andrew Wang",
          "daysBetweenCommits": 6.02,
          "commitsBetweenForRepo": 29,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,8 @@\n   private static RawErasureCoderFactory createRawCoderFactory(\n-      Configuration conf, String rawCoderFactoryKey) {\n+      String coderName, String codecName) {\n     RawErasureCoderFactory fact;\n-    try {\n-      Class\u003c? extends RawErasureCoderFactory\u003e factClass \u003d conf.getClassByName(\n-          rawCoderFactoryKey).asSubclass(RawErasureCoderFactory.class);\n-      fact \u003d factClass.newInstance();\n-    } catch (ClassNotFoundException | InstantiationException |\n-        IllegalAccessException e) {\n-      throw new RuntimeException(\"Failed to create raw coder factory\", e);\n-    }\n-\n-    if (fact \u003d\u003d null) {\n-      throw new RuntimeException(\"Failed to create raw coder factory\");\n-    }\n+    fact \u003d CodecRegistry.getInstance().\n+            getCoderByName(codecName, coderName);\n \n     return fact;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static RawErasureCoderFactory createRawCoderFactory(\n      String coderName, String codecName) {\n    RawErasureCoderFactory fact;\n    fact \u003d CodecRegistry.getInstance().\n            getCoderByName(codecName, coderName);\n\n    return fact;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/erasurecode/CodecUtil.java",
          "extendedDetails": {
            "oldValue": "[conf-Configuration, rawCoderFactoryKey-String]",
            "newValue": "[coderName-String, codecName-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-13200. Implement customizable and configurable erasure coders. Contributed by Tim Yao.\n",
          "commitDate": "27/04/17 11:59 AM",
          "commitName": "872088c6e7e78534a8ffd1ea6e57b86faea3d6e1",
          "commitAuthor": "Wei-Chiu Chuang",
          "commitDateOld": "21/04/17 11:35 AM",
          "commitNameOld": "a22fe02fba66280a8e994282e9ead23d9e20669a",
          "commitAuthorOld": "Andrew Wang",
          "daysBetweenCommits": 6.02,
          "commitsBetweenForRepo": 29,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,8 @@\n   private static RawErasureCoderFactory createRawCoderFactory(\n-      Configuration conf, String rawCoderFactoryKey) {\n+      String coderName, String codecName) {\n     RawErasureCoderFactory fact;\n-    try {\n-      Class\u003c? extends RawErasureCoderFactory\u003e factClass \u003d conf.getClassByName(\n-          rawCoderFactoryKey).asSubclass(RawErasureCoderFactory.class);\n-      fact \u003d factClass.newInstance();\n-    } catch (ClassNotFoundException | InstantiationException |\n-        IllegalAccessException e) {\n-      throw new RuntimeException(\"Failed to create raw coder factory\", e);\n-    }\n-\n-    if (fact \u003d\u003d null) {\n-      throw new RuntimeException(\"Failed to create raw coder factory\");\n-    }\n+    fact \u003d CodecRegistry.getInstance().\n+            getCoderByName(codecName, coderName);\n \n     return fact;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static RawErasureCoderFactory createRawCoderFactory(\n      String coderName, String codecName) {\n    RawErasureCoderFactory fact;\n    fact \u003d CodecRegistry.getInstance().\n            getCoderByName(codecName, coderName);\n\n    return fact;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/erasurecode/CodecUtil.java",
          "extendedDetails": {}
        }
      ]
    },
    "77202fa1035a54496d11d07472fbc399148ff630": {
      "type": "Ymultichange(Yrename,Yparameterchange,Yreturntypechange,Ymodifierchange,Ybodychange)",
      "commitMessage": "HADOOP-13010. Refactor raw erasure coders. Contributed by Kai Zheng\n",
      "commitDate": "26/05/16 10:23 PM",
      "commitName": "77202fa1035a54496d11d07472fbc399148ff630",
      "commitAuthor": "Kai Zheng",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "HADOOP-13010. Refactor raw erasure coders. Contributed by Kai Zheng\n",
          "commitDate": "26/05/16 10:23 PM",
          "commitName": "77202fa1035a54496d11d07472fbc399148ff630",
          "commitAuthor": "Kai Zheng",
          "commitDateOld": "20/04/16 12:47 AM",
          "commitNameOld": "b5d4c7dc76ddb3e0af95d792c2cbc0f99353a42a",
          "commitAuthorOld": "Kai Zheng",
          "daysBetweenCommits": 36.9,
          "commitsBetweenForRepo": 248,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,18 @@\n-  public static RawErasureCoder createRawCoder(Configuration conf,\n-      String rawCoderFactory, boolean isEncoder, int numDataUnits,\n-                                               int numParityUnits) {\n-\n+  private static RawErasureCoderFactory createRawCoderFactory(\n+      Configuration conf, String rawCoderFactoryKey) {\n     RawErasureCoderFactory fact;\n     try {\n       Class\u003c? extends RawErasureCoderFactory\u003e factClass \u003d conf.getClassByName(\n-          rawCoderFactory).asSubclass(RawErasureCoderFactory.class);\n+          rawCoderFactoryKey).asSubclass(RawErasureCoderFactory.class);\n       fact \u003d factClass.newInstance();\n     } catch (ClassNotFoundException | InstantiationException |\n         IllegalAccessException e) {\n-      throw new RuntimeException(\"Failed to create raw coder\", e);\n+      throw new RuntimeException(\"Failed to create raw coder factory\", e);\n     }\n \n-    return isEncoder ? fact.createEncoder(numDataUnits, numParityUnits) :\n-            fact.createDecoder(numDataUnits, numParityUnits);\n+    if (fact \u003d\u003d null) {\n+      throw new RuntimeException(\"Failed to create raw coder factory\");\n+    }\n+\n+    return fact;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static RawErasureCoderFactory createRawCoderFactory(\n      Configuration conf, String rawCoderFactoryKey) {\n    RawErasureCoderFactory fact;\n    try {\n      Class\u003c? extends RawErasureCoderFactory\u003e factClass \u003d conf.getClassByName(\n          rawCoderFactoryKey).asSubclass(RawErasureCoderFactory.class);\n      fact \u003d factClass.newInstance();\n    } catch (ClassNotFoundException | InstantiationException |\n        IllegalAccessException e) {\n      throw new RuntimeException(\"Failed to create raw coder factory\", e);\n    }\n\n    if (fact \u003d\u003d null) {\n      throw new RuntimeException(\"Failed to create raw coder factory\");\n    }\n\n    return fact;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/erasurecode/CodecUtil.java",
          "extendedDetails": {
            "oldValue": "createRawCoder",
            "newValue": "createRawCoderFactory"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-13010. Refactor raw erasure coders. Contributed by Kai Zheng\n",
          "commitDate": "26/05/16 10:23 PM",
          "commitName": "77202fa1035a54496d11d07472fbc399148ff630",
          "commitAuthor": "Kai Zheng",
          "commitDateOld": "20/04/16 12:47 AM",
          "commitNameOld": "b5d4c7dc76ddb3e0af95d792c2cbc0f99353a42a",
          "commitAuthorOld": "Kai Zheng",
          "daysBetweenCommits": 36.9,
          "commitsBetweenForRepo": 248,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,18 @@\n-  public static RawErasureCoder createRawCoder(Configuration conf,\n-      String rawCoderFactory, boolean isEncoder, int numDataUnits,\n-                                               int numParityUnits) {\n-\n+  private static RawErasureCoderFactory createRawCoderFactory(\n+      Configuration conf, String rawCoderFactoryKey) {\n     RawErasureCoderFactory fact;\n     try {\n       Class\u003c? extends RawErasureCoderFactory\u003e factClass \u003d conf.getClassByName(\n-          rawCoderFactory).asSubclass(RawErasureCoderFactory.class);\n+          rawCoderFactoryKey).asSubclass(RawErasureCoderFactory.class);\n       fact \u003d factClass.newInstance();\n     } catch (ClassNotFoundException | InstantiationException |\n         IllegalAccessException e) {\n-      throw new RuntimeException(\"Failed to create raw coder\", e);\n+      throw new RuntimeException(\"Failed to create raw coder factory\", e);\n     }\n \n-    return isEncoder ? fact.createEncoder(numDataUnits, numParityUnits) :\n-            fact.createDecoder(numDataUnits, numParityUnits);\n+    if (fact \u003d\u003d null) {\n+      throw new RuntimeException(\"Failed to create raw coder factory\");\n+    }\n+\n+    return fact;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static RawErasureCoderFactory createRawCoderFactory(\n      Configuration conf, String rawCoderFactoryKey) {\n    RawErasureCoderFactory fact;\n    try {\n      Class\u003c? extends RawErasureCoderFactory\u003e factClass \u003d conf.getClassByName(\n          rawCoderFactoryKey).asSubclass(RawErasureCoderFactory.class);\n      fact \u003d factClass.newInstance();\n    } catch (ClassNotFoundException | InstantiationException |\n        IllegalAccessException e) {\n      throw new RuntimeException(\"Failed to create raw coder factory\", e);\n    }\n\n    if (fact \u003d\u003d null) {\n      throw new RuntimeException(\"Failed to create raw coder factory\");\n    }\n\n    return fact;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/erasurecode/CodecUtil.java",
          "extendedDetails": {
            "oldValue": "[conf-Configuration, rawCoderFactory-String, isEncoder-boolean, numDataUnits-int, numParityUnits-int]",
            "newValue": "[conf-Configuration, rawCoderFactoryKey-String]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "HADOOP-13010. Refactor raw erasure coders. Contributed by Kai Zheng\n",
          "commitDate": "26/05/16 10:23 PM",
          "commitName": "77202fa1035a54496d11d07472fbc399148ff630",
          "commitAuthor": "Kai Zheng",
          "commitDateOld": "20/04/16 12:47 AM",
          "commitNameOld": "b5d4c7dc76ddb3e0af95d792c2cbc0f99353a42a",
          "commitAuthorOld": "Kai Zheng",
          "daysBetweenCommits": 36.9,
          "commitsBetweenForRepo": 248,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,18 @@\n-  public static RawErasureCoder createRawCoder(Configuration conf,\n-      String rawCoderFactory, boolean isEncoder, int numDataUnits,\n-                                               int numParityUnits) {\n-\n+  private static RawErasureCoderFactory createRawCoderFactory(\n+      Configuration conf, String rawCoderFactoryKey) {\n     RawErasureCoderFactory fact;\n     try {\n       Class\u003c? extends RawErasureCoderFactory\u003e factClass \u003d conf.getClassByName(\n-          rawCoderFactory).asSubclass(RawErasureCoderFactory.class);\n+          rawCoderFactoryKey).asSubclass(RawErasureCoderFactory.class);\n       fact \u003d factClass.newInstance();\n     } catch (ClassNotFoundException | InstantiationException |\n         IllegalAccessException e) {\n-      throw new RuntimeException(\"Failed to create raw coder\", e);\n+      throw new RuntimeException(\"Failed to create raw coder factory\", e);\n     }\n \n-    return isEncoder ? fact.createEncoder(numDataUnits, numParityUnits) :\n-            fact.createDecoder(numDataUnits, numParityUnits);\n+    if (fact \u003d\u003d null) {\n+      throw new RuntimeException(\"Failed to create raw coder factory\");\n+    }\n+\n+    return fact;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static RawErasureCoderFactory createRawCoderFactory(\n      Configuration conf, String rawCoderFactoryKey) {\n    RawErasureCoderFactory fact;\n    try {\n      Class\u003c? extends RawErasureCoderFactory\u003e factClass \u003d conf.getClassByName(\n          rawCoderFactoryKey).asSubclass(RawErasureCoderFactory.class);\n      fact \u003d factClass.newInstance();\n    } catch (ClassNotFoundException | InstantiationException |\n        IllegalAccessException e) {\n      throw new RuntimeException(\"Failed to create raw coder factory\", e);\n    }\n\n    if (fact \u003d\u003d null) {\n      throw new RuntimeException(\"Failed to create raw coder factory\");\n    }\n\n    return fact;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/erasurecode/CodecUtil.java",
          "extendedDetails": {
            "oldValue": "RawErasureCoder",
            "newValue": "RawErasureCoderFactory"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HADOOP-13010. Refactor raw erasure coders. Contributed by Kai Zheng\n",
          "commitDate": "26/05/16 10:23 PM",
          "commitName": "77202fa1035a54496d11d07472fbc399148ff630",
          "commitAuthor": "Kai Zheng",
          "commitDateOld": "20/04/16 12:47 AM",
          "commitNameOld": "b5d4c7dc76ddb3e0af95d792c2cbc0f99353a42a",
          "commitAuthorOld": "Kai Zheng",
          "daysBetweenCommits": 36.9,
          "commitsBetweenForRepo": 248,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,18 @@\n-  public static RawErasureCoder createRawCoder(Configuration conf,\n-      String rawCoderFactory, boolean isEncoder, int numDataUnits,\n-                                               int numParityUnits) {\n-\n+  private static RawErasureCoderFactory createRawCoderFactory(\n+      Configuration conf, String rawCoderFactoryKey) {\n     RawErasureCoderFactory fact;\n     try {\n       Class\u003c? extends RawErasureCoderFactory\u003e factClass \u003d conf.getClassByName(\n-          rawCoderFactory).asSubclass(RawErasureCoderFactory.class);\n+          rawCoderFactoryKey).asSubclass(RawErasureCoderFactory.class);\n       fact \u003d factClass.newInstance();\n     } catch (ClassNotFoundException | InstantiationException |\n         IllegalAccessException e) {\n-      throw new RuntimeException(\"Failed to create raw coder\", e);\n+      throw new RuntimeException(\"Failed to create raw coder factory\", e);\n     }\n \n-    return isEncoder ? fact.createEncoder(numDataUnits, numParityUnits) :\n-            fact.createDecoder(numDataUnits, numParityUnits);\n+    if (fact \u003d\u003d null) {\n+      throw new RuntimeException(\"Failed to create raw coder factory\");\n+    }\n+\n+    return fact;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static RawErasureCoderFactory createRawCoderFactory(\n      Configuration conf, String rawCoderFactoryKey) {\n    RawErasureCoderFactory fact;\n    try {\n      Class\u003c? extends RawErasureCoderFactory\u003e factClass \u003d conf.getClassByName(\n          rawCoderFactoryKey).asSubclass(RawErasureCoderFactory.class);\n      fact \u003d factClass.newInstance();\n    } catch (ClassNotFoundException | InstantiationException |\n        IllegalAccessException e) {\n      throw new RuntimeException(\"Failed to create raw coder factory\", e);\n    }\n\n    if (fact \u003d\u003d null) {\n      throw new RuntimeException(\"Failed to create raw coder factory\");\n    }\n\n    return fact;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/erasurecode/CodecUtil.java",
          "extendedDetails": {
            "oldValue": "[public, static]",
            "newValue": "[private, static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-13010. Refactor raw erasure coders. Contributed by Kai Zheng\n",
          "commitDate": "26/05/16 10:23 PM",
          "commitName": "77202fa1035a54496d11d07472fbc399148ff630",
          "commitAuthor": "Kai Zheng",
          "commitDateOld": "20/04/16 12:47 AM",
          "commitNameOld": "b5d4c7dc76ddb3e0af95d792c2cbc0f99353a42a",
          "commitAuthorOld": "Kai Zheng",
          "daysBetweenCommits": 36.9,
          "commitsBetweenForRepo": 248,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,18 @@\n-  public static RawErasureCoder createRawCoder(Configuration conf,\n-      String rawCoderFactory, boolean isEncoder, int numDataUnits,\n-                                               int numParityUnits) {\n-\n+  private static RawErasureCoderFactory createRawCoderFactory(\n+      Configuration conf, String rawCoderFactoryKey) {\n     RawErasureCoderFactory fact;\n     try {\n       Class\u003c? extends RawErasureCoderFactory\u003e factClass \u003d conf.getClassByName(\n-          rawCoderFactory).asSubclass(RawErasureCoderFactory.class);\n+          rawCoderFactoryKey).asSubclass(RawErasureCoderFactory.class);\n       fact \u003d factClass.newInstance();\n     } catch (ClassNotFoundException | InstantiationException |\n         IllegalAccessException e) {\n-      throw new RuntimeException(\"Failed to create raw coder\", e);\n+      throw new RuntimeException(\"Failed to create raw coder factory\", e);\n     }\n \n-    return isEncoder ? fact.createEncoder(numDataUnits, numParityUnits) :\n-            fact.createDecoder(numDataUnits, numParityUnits);\n+    if (fact \u003d\u003d null) {\n+      throw new RuntimeException(\"Failed to create raw coder factory\");\n+    }\n+\n+    return fact;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static RawErasureCoderFactory createRawCoderFactory(\n      Configuration conf, String rawCoderFactoryKey) {\n    RawErasureCoderFactory fact;\n    try {\n      Class\u003c? extends RawErasureCoderFactory\u003e factClass \u003d conf.getClassByName(\n          rawCoderFactoryKey).asSubclass(RawErasureCoderFactory.class);\n      fact \u003d factClass.newInstance();\n    } catch (ClassNotFoundException | InstantiationException |\n        IllegalAccessException e) {\n      throw new RuntimeException(\"Failed to create raw coder factory\", e);\n    }\n\n    if (fact \u003d\u003d null) {\n      throw new RuntimeException(\"Failed to create raw coder factory\");\n    }\n\n    return fact;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/erasurecode/CodecUtil.java",
          "extendedDetails": {}
        }
      ]
    },
    "b5d4c7dc76ddb3e0af95d792c2cbc0f99353a42a": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-12924. Configure raw erasure coders for supported codecs. Contributed by Rui Li.\n",
      "commitDate": "20/04/16 12:47 AM",
      "commitName": "b5d4c7dc76ddb3e0af95d792c2cbc0f99353a42a",
      "commitAuthor": "Kai Zheng",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-12924. Configure raw erasure coders for supported codecs. Contributed by Rui Li.\n",
          "commitDate": "20/04/16 12:47 AM",
          "commitName": "b5d4c7dc76ddb3e0af95d792c2cbc0f99353a42a",
          "commitAuthor": "Kai Zheng",
          "commitDateOld": "14/03/16 4:45 PM",
          "commitNameOld": "19e8f076919932b17f24ec4090df1926677651e7",
          "commitAuthorOld": "Zhe Zhang",
          "daysBetweenCommits": 36.33,
          "commitsBetweenForRepo": 208,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,17 @@\n   public static RawErasureCoder createRawCoder(Configuration conf,\n-      String rawCoderFactoryKey, boolean isEncoder, int numDataUnits,\n+      String rawCoderFactory, boolean isEncoder, int numDataUnits,\n                                                int numParityUnits) {\n \n-    if (conf \u003d\u003d null) {\n-      return null;\n-    }\n-\n-    Class\u003c? extends RawErasureCoderFactory\u003e factClass \u003d null;\n-    factClass \u003d conf.getClass(rawCoderFactoryKey,\n-        factClass, RawErasureCoderFactory.class);\n-\n-    if (factClass \u003d\u003d null) {\n-      return null;\n-    }\n-\n     RawErasureCoderFactory fact;\n     try {\n+      Class\u003c? extends RawErasureCoderFactory\u003e factClass \u003d conf.getClassByName(\n+          rawCoderFactory).asSubclass(RawErasureCoderFactory.class);\n       fact \u003d factClass.newInstance();\n-    } catch (InstantiationException e) {\n-      throw new RuntimeException(\"Failed to create raw coder\", e);\n-    } catch (IllegalAccessException e) {\n+    } catch (ClassNotFoundException | InstantiationException |\n+        IllegalAccessException e) {\n       throw new RuntimeException(\"Failed to create raw coder\", e);\n     }\n \n     return isEncoder ? fact.createEncoder(numDataUnits, numParityUnits) :\n             fact.createDecoder(numDataUnits, numParityUnits);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static RawErasureCoder createRawCoder(Configuration conf,\n      String rawCoderFactory, boolean isEncoder, int numDataUnits,\n                                               int numParityUnits) {\n\n    RawErasureCoderFactory fact;\n    try {\n      Class\u003c? extends RawErasureCoderFactory\u003e factClass \u003d conf.getClassByName(\n          rawCoderFactory).asSubclass(RawErasureCoderFactory.class);\n      fact \u003d factClass.newInstance();\n    } catch (ClassNotFoundException | InstantiationException |\n        IllegalAccessException e) {\n      throw new RuntimeException(\"Failed to create raw coder\", e);\n    }\n\n    return isEncoder ? fact.createEncoder(numDataUnits, numParityUnits) :\n            fact.createDecoder(numDataUnits, numParityUnits);\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/erasurecode/CodecUtil.java",
          "extendedDetails": {
            "oldValue": "[conf-Configuration, rawCoderFactoryKey-String, isEncoder-boolean, numDataUnits-int, numParityUnits-int]",
            "newValue": "[conf-Configuration, rawCoderFactory-String, isEncoder-boolean, numDataUnits-int, numParityUnits-int]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-12924. Configure raw erasure coders for supported codecs. Contributed by Rui Li.\n",
          "commitDate": "20/04/16 12:47 AM",
          "commitName": "b5d4c7dc76ddb3e0af95d792c2cbc0f99353a42a",
          "commitAuthor": "Kai Zheng",
          "commitDateOld": "14/03/16 4:45 PM",
          "commitNameOld": "19e8f076919932b17f24ec4090df1926677651e7",
          "commitAuthorOld": "Zhe Zhang",
          "daysBetweenCommits": 36.33,
          "commitsBetweenForRepo": 208,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,17 @@\n   public static RawErasureCoder createRawCoder(Configuration conf,\n-      String rawCoderFactoryKey, boolean isEncoder, int numDataUnits,\n+      String rawCoderFactory, boolean isEncoder, int numDataUnits,\n                                                int numParityUnits) {\n \n-    if (conf \u003d\u003d null) {\n-      return null;\n-    }\n-\n-    Class\u003c? extends RawErasureCoderFactory\u003e factClass \u003d null;\n-    factClass \u003d conf.getClass(rawCoderFactoryKey,\n-        factClass, RawErasureCoderFactory.class);\n-\n-    if (factClass \u003d\u003d null) {\n-      return null;\n-    }\n-\n     RawErasureCoderFactory fact;\n     try {\n+      Class\u003c? extends RawErasureCoderFactory\u003e factClass \u003d conf.getClassByName(\n+          rawCoderFactory).asSubclass(RawErasureCoderFactory.class);\n       fact \u003d factClass.newInstance();\n-    } catch (InstantiationException e) {\n-      throw new RuntimeException(\"Failed to create raw coder\", e);\n-    } catch (IllegalAccessException e) {\n+    } catch (ClassNotFoundException | InstantiationException |\n+        IllegalAccessException e) {\n       throw new RuntimeException(\"Failed to create raw coder\", e);\n     }\n \n     return isEncoder ? fact.createEncoder(numDataUnits, numParityUnits) :\n             fact.createDecoder(numDataUnits, numParityUnits);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static RawErasureCoder createRawCoder(Configuration conf,\n      String rawCoderFactory, boolean isEncoder, int numDataUnits,\n                                               int numParityUnits) {\n\n    RawErasureCoderFactory fact;\n    try {\n      Class\u003c? extends RawErasureCoderFactory\u003e factClass \u003d conf.getClassByName(\n          rawCoderFactory).asSubclass(RawErasureCoderFactory.class);\n      fact \u003d factClass.newInstance();\n    } catch (ClassNotFoundException | InstantiationException |\n        IllegalAccessException e) {\n      throw new RuntimeException(\"Failed to create raw coder\", e);\n    }\n\n    return isEncoder ? fact.createEncoder(numDataUnits, numParityUnits) :\n            fact.createDecoder(numDataUnits, numParityUnits);\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/erasurecode/CodecUtil.java",
          "extendedDetails": {}
        }
      ]
    },
    "e299fe86b889968a0093f9f9b097dd71b4f49e88": {
      "type": "Ymovefromfile",
      "commitMessage": "HDFS-8557 Allow to configure RS and XOR raw coders. Contributed by Kai Zheng\n",
      "commitDate": "10/06/15 12:35 AM",
      "commitName": "e299fe86b889968a0093f9f9b097dd71b4f49e88",
      "commitAuthor": "Kai Zheng",
      "commitDateOld": "08/06/15 5:24 AM",
      "commitNameOld": "c41b02cc0058239657263d45d969e71b14e6a589",
      "commitAuthorOld": "Kai Zheng",
      "daysBetweenCommits": 1.8,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static RawErasureCoder createRawCoder(Configuration conf,\n      String rawCoderFactoryKey, boolean isEncoder, int numDataUnits,\n                                               int numParityUnits) {\n\n    if (conf \u003d\u003d null) {\n      return null;\n    }\n\n    Class\u003c? extends RawErasureCoderFactory\u003e factClass \u003d null;\n    factClass \u003d conf.getClass(rawCoderFactoryKey,\n        factClass, RawErasureCoderFactory.class);\n\n    if (factClass \u003d\u003d null) {\n      return null;\n    }\n\n    RawErasureCoderFactory fact;\n    try {\n      fact \u003d factClass.newInstance();\n    } catch (InstantiationException e) {\n      throw new RuntimeException(\"Failed to create raw coder\", e);\n    } catch (IllegalAccessException e) {\n      throw new RuntimeException(\"Failed to create raw coder\", e);\n    }\n\n    return isEncoder ? fact.createEncoder(numDataUnits, numParityUnits) :\n            fact.createDecoder(numDataUnits, numParityUnits);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/erasurecode/CodecUtil.java",
      "extendedDetails": {
        "oldPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/erasurecode/coder/AbstractErasureCoder.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/erasurecode/CodecUtil.java",
        "oldMethodName": "createRawCoder",
        "newMethodName": "createRawCoder"
      }
    },
    "b30e96bfb4b8ce5537671c97f0c9c56cd195bfdc": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-8382 Remove chunkSize and initialize from erasure coder. Contributed by Kai Zheng\n",
      "commitDate": "26/05/15 12:07 PM",
      "commitName": "b30e96bfb4b8ce5537671c97f0c9c56cd195bfdc",
      "commitAuthor": "Kai Zheng",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-8382 Remove chunkSize and initialize from erasure coder. Contributed by Kai Zheng\n",
          "commitDate": "26/05/15 12:07 PM",
          "commitName": "b30e96bfb4b8ce5537671c97f0c9c56cd195bfdc",
          "commitAuthor": "Kai Zheng",
          "commitDateOld": "26/05/15 12:02 PM",
          "commitNameOld": "09c3a375bafa481e88d1317388a73c46950164c9",
          "commitAuthorOld": "Zhe Zhang",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 17,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,28 @@\n   public static RawErasureCoder createRawCoder(Configuration conf,\n-      String rawCoderFactoryKey, boolean isEncoder) {\n+      String rawCoderFactoryKey, boolean isEncoder, int numDataUnits,\n+                                               int numParityUnits) {\n \n     if (conf \u003d\u003d null) {\n       return null;\n     }\n \n     Class\u003c? extends RawErasureCoderFactory\u003e factClass \u003d null;\n     factClass \u003d conf.getClass(rawCoderFactoryKey,\n         factClass, RawErasureCoderFactory.class);\n \n     if (factClass \u003d\u003d null) {\n       return null;\n     }\n \n     RawErasureCoderFactory fact;\n     try {\n       fact \u003d factClass.newInstance();\n     } catch (InstantiationException e) {\n       throw new RuntimeException(\"Failed to create raw coder\", e);\n     } catch (IllegalAccessException e) {\n       throw new RuntimeException(\"Failed to create raw coder\", e);\n     }\n \n-    return isEncoder ? fact.createEncoder() : fact.createDecoder();\n+    return isEncoder ? fact.createEncoder(numDataUnits, numParityUnits) :\n+            fact.createDecoder(numDataUnits, numParityUnits);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static RawErasureCoder createRawCoder(Configuration conf,\n      String rawCoderFactoryKey, boolean isEncoder, int numDataUnits,\n                                               int numParityUnits) {\n\n    if (conf \u003d\u003d null) {\n      return null;\n    }\n\n    Class\u003c? extends RawErasureCoderFactory\u003e factClass \u003d null;\n    factClass \u003d conf.getClass(rawCoderFactoryKey,\n        factClass, RawErasureCoderFactory.class);\n\n    if (factClass \u003d\u003d null) {\n      return null;\n    }\n\n    RawErasureCoderFactory fact;\n    try {\n      fact \u003d factClass.newInstance();\n    } catch (InstantiationException e) {\n      throw new RuntimeException(\"Failed to create raw coder\", e);\n    } catch (IllegalAccessException e) {\n      throw new RuntimeException(\"Failed to create raw coder\", e);\n    }\n\n    return isEncoder ? fact.createEncoder(numDataUnits, numParityUnits) :\n            fact.createDecoder(numDataUnits, numParityUnits);\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/erasurecode/coder/AbstractErasureCoder.java",
          "extendedDetails": {
            "oldValue": "[conf-Configuration, rawCoderFactoryKey-String, isEncoder-boolean]",
            "newValue": "[conf-Configuration, rawCoderFactoryKey-String, isEncoder-boolean, numDataUnits-int, numParityUnits-int]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-8382 Remove chunkSize and initialize from erasure coder. Contributed by Kai Zheng\n",
          "commitDate": "26/05/15 12:07 PM",
          "commitName": "b30e96bfb4b8ce5537671c97f0c9c56cd195bfdc",
          "commitAuthor": "Kai Zheng",
          "commitDateOld": "26/05/15 12:02 PM",
          "commitNameOld": "09c3a375bafa481e88d1317388a73c46950164c9",
          "commitAuthorOld": "Zhe Zhang",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 17,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,28 @@\n   public static RawErasureCoder createRawCoder(Configuration conf,\n-      String rawCoderFactoryKey, boolean isEncoder) {\n+      String rawCoderFactoryKey, boolean isEncoder, int numDataUnits,\n+                                               int numParityUnits) {\n \n     if (conf \u003d\u003d null) {\n       return null;\n     }\n \n     Class\u003c? extends RawErasureCoderFactory\u003e factClass \u003d null;\n     factClass \u003d conf.getClass(rawCoderFactoryKey,\n         factClass, RawErasureCoderFactory.class);\n \n     if (factClass \u003d\u003d null) {\n       return null;\n     }\n \n     RawErasureCoderFactory fact;\n     try {\n       fact \u003d factClass.newInstance();\n     } catch (InstantiationException e) {\n       throw new RuntimeException(\"Failed to create raw coder\", e);\n     } catch (IllegalAccessException e) {\n       throw new RuntimeException(\"Failed to create raw coder\", e);\n     }\n \n-    return isEncoder ? fact.createEncoder() : fact.createDecoder();\n+    return isEncoder ? fact.createEncoder(numDataUnits, numParityUnits) :\n+            fact.createDecoder(numDataUnits, numParityUnits);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static RawErasureCoder createRawCoder(Configuration conf,\n      String rawCoderFactoryKey, boolean isEncoder, int numDataUnits,\n                                               int numParityUnits) {\n\n    if (conf \u003d\u003d null) {\n      return null;\n    }\n\n    Class\u003c? extends RawErasureCoderFactory\u003e factClass \u003d null;\n    factClass \u003d conf.getClass(rawCoderFactoryKey,\n        factClass, RawErasureCoderFactory.class);\n\n    if (factClass \u003d\u003d null) {\n      return null;\n    }\n\n    RawErasureCoderFactory fact;\n    try {\n      fact \u003d factClass.newInstance();\n    } catch (InstantiationException e) {\n      throw new RuntimeException(\"Failed to create raw coder\", e);\n    } catch (IllegalAccessException e) {\n      throw new RuntimeException(\"Failed to create raw coder\", e);\n    }\n\n    return isEncoder ? fact.createEncoder(numDataUnits, numParityUnits) :\n            fact.createDecoder(numDataUnits, numParityUnits);\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/erasurecode/coder/AbstractErasureCoder.java",
          "extendedDetails": {}
        }
      ]
    },
    "09c3a375bafa481e88d1317388a73c46950164c9": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11920. Refactor some codes for erasure coders. Contributed by Kai Zheng.\n",
      "commitDate": "26/05/15 12:02 PM",
      "commitName": "09c3a375bafa481e88d1317388a73c46950164c9",
      "commitAuthor": "Zhe Zhang",
      "commitDateOld": "26/05/15 11:59 AM",
      "commitNameOld": "014d8675c59d44ad68dec36db6afe3f3666a3f15",
      "commitAuthorOld": "Uma Maheswara Rao G",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 40,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,26 @@\n   public static RawErasureCoder createRawCoder(Configuration conf,\n       String rawCoderFactoryKey, boolean isEncoder) {\n \n     if (conf \u003d\u003d null) {\n       return null;\n     }\n \n     Class\u003c? extends RawErasureCoderFactory\u003e factClass \u003d null;\n     factClass \u003d conf.getClass(rawCoderFactoryKey,\n         factClass, RawErasureCoderFactory.class);\n \n     if (factClass \u003d\u003d null) {\n       return null;\n     }\n \n     RawErasureCoderFactory fact;\n     try {\n       fact \u003d factClass.newInstance();\n     } catch (InstantiationException e) {\n       throw new RuntimeException(\"Failed to create raw coder\", e);\n     } catch (IllegalAccessException e) {\n       throw new RuntimeException(\"Failed to create raw coder\", e);\n     }\n \n-    if (fact !\u003d null) {\n-      return isEncoder ? fact.createEncoder() : fact.createDecoder();\n-    }\n-\n-    return null;\n+    return isEncoder ? fact.createEncoder() : fact.createDecoder();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static RawErasureCoder createRawCoder(Configuration conf,\n      String rawCoderFactoryKey, boolean isEncoder) {\n\n    if (conf \u003d\u003d null) {\n      return null;\n    }\n\n    Class\u003c? extends RawErasureCoderFactory\u003e factClass \u003d null;\n    factClass \u003d conf.getClass(rawCoderFactoryKey,\n        factClass, RawErasureCoderFactory.class);\n\n    if (factClass \u003d\u003d null) {\n      return null;\n    }\n\n    RawErasureCoderFactory fact;\n    try {\n      fact \u003d factClass.newInstance();\n    } catch (InstantiationException e) {\n      throw new RuntimeException(\"Failed to create raw coder\", e);\n    } catch (IllegalAccessException e) {\n      throw new RuntimeException(\"Failed to create raw coder\", e);\n    }\n\n    return isEncoder ? fact.createEncoder() : fact.createDecoder();\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/erasurecode/coder/AbstractErasureCoder.java",
      "extendedDetails": {}
    },
    "014d8675c59d44ad68dec36db6afe3f3666a3f15": {
      "type": "Ymodifierchange",
      "commitMessage": "HDFS-8024. Erasure Coding: ECworker frame, basics, bootstraping and configuration. (Contributed by Uma Maheswara Rao G)\n",
      "commitDate": "26/05/15 11:59 AM",
      "commitName": "014d8675c59d44ad68dec36db6afe3f3666a3f15",
      "commitAuthor": "Uma Maheswara Rao G",
      "commitDateOld": "26/05/15 11:55 AM",
      "commitNameOld": "99502cbbe28425fa4eaf42630218b775df1a54f7",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 30,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,30 @@\n-  protected static RawErasureCoder createRawCoder(Configuration conf,\n+  public static RawErasureCoder createRawCoder(Configuration conf,\n       String rawCoderFactoryKey, boolean isEncoder) {\n \n     if (conf \u003d\u003d null) {\n       return null;\n     }\n \n     Class\u003c? extends RawErasureCoderFactory\u003e factClass \u003d null;\n     factClass \u003d conf.getClass(rawCoderFactoryKey,\n         factClass, RawErasureCoderFactory.class);\n \n     if (factClass \u003d\u003d null) {\n       return null;\n     }\n \n     RawErasureCoderFactory fact;\n     try {\n       fact \u003d factClass.newInstance();\n     } catch (InstantiationException e) {\n       throw new RuntimeException(\"Failed to create raw coder\", e);\n     } catch (IllegalAccessException e) {\n       throw new RuntimeException(\"Failed to create raw coder\", e);\n     }\n \n     if (fact !\u003d null) {\n       return isEncoder ? fact.createEncoder() : fact.createDecoder();\n     }\n \n     return null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static RawErasureCoder createRawCoder(Configuration conf,\n      String rawCoderFactoryKey, boolean isEncoder) {\n\n    if (conf \u003d\u003d null) {\n      return null;\n    }\n\n    Class\u003c? extends RawErasureCoderFactory\u003e factClass \u003d null;\n    factClass \u003d conf.getClass(rawCoderFactoryKey,\n        factClass, RawErasureCoderFactory.class);\n\n    if (factClass \u003d\u003d null) {\n      return null;\n    }\n\n    RawErasureCoderFactory fact;\n    try {\n      fact \u003d factClass.newInstance();\n    } catch (InstantiationException e) {\n      throw new RuntimeException(\"Failed to create raw coder\", e);\n    } catch (IllegalAccessException e) {\n      throw new RuntimeException(\"Failed to create raw coder\", e);\n    }\n\n    if (fact !\u003d null) {\n      return isEncoder ? fact.createEncoder() : fact.createDecoder();\n    }\n\n    return null;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/erasurecode/coder/AbstractErasureCoder.java",
      "extendedDetails": {
        "oldValue": "[protected, static]",
        "newValue": "[public, static]"
      }
    },
    "df297245a74be1a1baa1a34740dcd856eef22ea4": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-11647. Reed-Solomon ErasureCoder. Contributed by Kai Zheng\n",
      "commitDate": "26/05/15 11:43 AM",
      "commitName": "df297245a74be1a1baa1a34740dcd856eef22ea4",
      "commitAuthor": "Kai Zheng",
      "diff": "@@ -0,0 +1,30 @@\n+  protected static RawErasureCoder createRawCoder(Configuration conf,\n+      String rawCoderFactoryKey, boolean isEncoder) {\n+\n+    if (conf \u003d\u003d null) {\n+      return null;\n+    }\n+\n+    Class\u003c? extends RawErasureCoderFactory\u003e factClass \u003d null;\n+    factClass \u003d conf.getClass(rawCoderFactoryKey,\n+        factClass, RawErasureCoderFactory.class);\n+\n+    if (factClass \u003d\u003d null) {\n+      return null;\n+    }\n+\n+    RawErasureCoderFactory fact;\n+    try {\n+      fact \u003d factClass.newInstance();\n+    } catch (InstantiationException e) {\n+      throw new RuntimeException(\"Failed to create raw coder\", e);\n+    } catch (IllegalAccessException e) {\n+      throw new RuntimeException(\"Failed to create raw coder\", e);\n+    }\n+\n+    if (fact !\u003d null) {\n+      return isEncoder ? fact.createEncoder() : fact.createDecoder();\n+    }\n+\n+    return null;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected static RawErasureCoder createRawCoder(Configuration conf,\n      String rawCoderFactoryKey, boolean isEncoder) {\n\n    if (conf \u003d\u003d null) {\n      return null;\n    }\n\n    Class\u003c? extends RawErasureCoderFactory\u003e factClass \u003d null;\n    factClass \u003d conf.getClass(rawCoderFactoryKey,\n        factClass, RawErasureCoderFactory.class);\n\n    if (factClass \u003d\u003d null) {\n      return null;\n    }\n\n    RawErasureCoderFactory fact;\n    try {\n      fact \u003d factClass.newInstance();\n    } catch (InstantiationException e) {\n      throw new RuntimeException(\"Failed to create raw coder\", e);\n    } catch (IllegalAccessException e) {\n      throw new RuntimeException(\"Failed to create raw coder\", e);\n    }\n\n    if (fact !\u003d null) {\n      return isEncoder ? fact.createEncoder() : fact.createDecoder();\n    }\n\n    return null;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/erasurecode/coder/AbstractErasureCoder.java"
    }
  }
}