{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Server.java",
  "functionName": "getAuthMethods",
  "functionId": "getAuthMethods___secretManager-SecretManager__?____conf-Configuration",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Server.java",
  "functionStartLine": 3171,
  "functionEndLine": 3191,
  "numCommitsSeen": 162,
  "timeTaken": 4720,
  "changeHistory": [
    "5f9b4c14a175873b4f82654513e289c657c694eb",
    "4755ef989ac771ad3c2c40f9914455725c931447"
  ],
  "changeHistoryShort": {
    "5f9b4c14a175873b4f82654513e289c657c694eb": "Ymultichange(Yreturntypechange,Ybodychange)",
    "4755ef989ac771ad3c2c40f9914455725c931447": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5f9b4c14a175873b4f82654513e289c657c694eb": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "HADOOP-9421. [RPC v9] Convert SASL to use ProtoBuf and provide negotiation capabilities (daryn)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1495577 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/06/13 1:09 PM",
      "commitName": "5f9b4c14a175873b4f82654513e289c657c694eb",
      "commitAuthor": "Daryn Sharp",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "HADOOP-9421. [RPC v9] Convert SASL to use ProtoBuf and provide negotiation capabilities (daryn)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1495577 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "21/06/13 1:09 PM",
          "commitName": "5f9b4c14a175873b4f82654513e289c657c694eb",
          "commitAuthor": "Daryn Sharp",
          "commitDateOld": "10/06/13 8:30 PM",
          "commitNameOld": "a841be808a780db0653b17bb702037f422c5b1ec",
          "commitAuthorOld": "Luke Lu",
          "daysBetweenCommits": 10.69,
          "commitsBetweenForRepo": 113,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n-  private EnumSet\u003cAuthMethod\u003e getAuthMethods(SecretManager\u003c?\u003e secretManager,\n+  private List\u003cAuthMethod\u003e getAuthMethods(SecretManager\u003c?\u003e secretManager,\n                                              Configuration conf) {\n     AuthenticationMethod confAuthenticationMethod \u003d\n         SecurityUtil.getAuthenticationMethod(conf);        \n-    EnumSet\u003cAuthMethod\u003e authMethods \u003d\n-        EnumSet.of(confAuthenticationMethod.getAuthMethod()); \n-        \n+    List\u003cAuthMethod\u003e authMethods \u003d new ArrayList\u003cAuthMethod\u003e();\n     if (confAuthenticationMethod \u003d\u003d AuthenticationMethod.TOKEN) {\n       if (secretManager \u003d\u003d null) {\n         throw new IllegalArgumentException(AuthenticationMethod.TOKEN +\n             \" authentication requires a secret manager\");\n       } \n     } else if (secretManager !\u003d null) {\n       LOG.debug(AuthenticationMethod.TOKEN +\n           \" authentication enabled for secret manager\");\n+      // most preferred, go to the front of the line!\n       authMethods.add(AuthenticationMethod.TOKEN.getAuthMethod());\n     }\n+    authMethods.add(confAuthenticationMethod.getAuthMethod());        \n     \n     LOG.debug(\"Server accepts auth methods:\" + authMethods);\n     return authMethods;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private List\u003cAuthMethod\u003e getAuthMethods(SecretManager\u003c?\u003e secretManager,\n                                             Configuration conf) {\n    AuthenticationMethod confAuthenticationMethod \u003d\n        SecurityUtil.getAuthenticationMethod(conf);        \n    List\u003cAuthMethod\u003e authMethods \u003d new ArrayList\u003cAuthMethod\u003e();\n    if (confAuthenticationMethod \u003d\u003d AuthenticationMethod.TOKEN) {\n      if (secretManager \u003d\u003d null) {\n        throw new IllegalArgumentException(AuthenticationMethod.TOKEN +\n            \" authentication requires a secret manager\");\n      } \n    } else if (secretManager !\u003d null) {\n      LOG.debug(AuthenticationMethod.TOKEN +\n          \" authentication enabled for secret manager\");\n      // most preferred, go to the front of the line!\n      authMethods.add(AuthenticationMethod.TOKEN.getAuthMethod());\n    }\n    authMethods.add(confAuthenticationMethod.getAuthMethod());        \n    \n    LOG.debug(\"Server accepts auth methods:\" + authMethods);\n    return authMethods;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Server.java",
          "extendedDetails": {
            "oldValue": "EnumSet\u003cAuthMethod\u003e",
            "newValue": "List\u003cAuthMethod\u003e"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-9421. [RPC v9] Convert SASL to use ProtoBuf and provide negotiation capabilities (daryn)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1495577 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "21/06/13 1:09 PM",
          "commitName": "5f9b4c14a175873b4f82654513e289c657c694eb",
          "commitAuthor": "Daryn Sharp",
          "commitDateOld": "10/06/13 8:30 PM",
          "commitNameOld": "a841be808a780db0653b17bb702037f422c5b1ec",
          "commitAuthorOld": "Luke Lu",
          "daysBetweenCommits": 10.69,
          "commitsBetweenForRepo": 113,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n-  private EnumSet\u003cAuthMethod\u003e getAuthMethods(SecretManager\u003c?\u003e secretManager,\n+  private List\u003cAuthMethod\u003e getAuthMethods(SecretManager\u003c?\u003e secretManager,\n                                              Configuration conf) {\n     AuthenticationMethod confAuthenticationMethod \u003d\n         SecurityUtil.getAuthenticationMethod(conf);        \n-    EnumSet\u003cAuthMethod\u003e authMethods \u003d\n-        EnumSet.of(confAuthenticationMethod.getAuthMethod()); \n-        \n+    List\u003cAuthMethod\u003e authMethods \u003d new ArrayList\u003cAuthMethod\u003e();\n     if (confAuthenticationMethod \u003d\u003d AuthenticationMethod.TOKEN) {\n       if (secretManager \u003d\u003d null) {\n         throw new IllegalArgumentException(AuthenticationMethod.TOKEN +\n             \" authentication requires a secret manager\");\n       } \n     } else if (secretManager !\u003d null) {\n       LOG.debug(AuthenticationMethod.TOKEN +\n           \" authentication enabled for secret manager\");\n+      // most preferred, go to the front of the line!\n       authMethods.add(AuthenticationMethod.TOKEN.getAuthMethod());\n     }\n+    authMethods.add(confAuthenticationMethod.getAuthMethod());        \n     \n     LOG.debug(\"Server accepts auth methods:\" + authMethods);\n     return authMethods;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private List\u003cAuthMethod\u003e getAuthMethods(SecretManager\u003c?\u003e secretManager,\n                                             Configuration conf) {\n    AuthenticationMethod confAuthenticationMethod \u003d\n        SecurityUtil.getAuthenticationMethod(conf);        \n    List\u003cAuthMethod\u003e authMethods \u003d new ArrayList\u003cAuthMethod\u003e();\n    if (confAuthenticationMethod \u003d\u003d AuthenticationMethod.TOKEN) {\n      if (secretManager \u003d\u003d null) {\n        throw new IllegalArgumentException(AuthenticationMethod.TOKEN +\n            \" authentication requires a secret manager\");\n      } \n    } else if (secretManager !\u003d null) {\n      LOG.debug(AuthenticationMethod.TOKEN +\n          \" authentication enabled for secret manager\");\n      // most preferred, go to the front of the line!\n      authMethods.add(AuthenticationMethod.TOKEN.getAuthMethod());\n    }\n    authMethods.add(confAuthenticationMethod.getAuthMethod());        \n    \n    LOG.debug(\"Server accepts auth methods:\" + authMethods);\n    return authMethods;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Server.java",
          "extendedDetails": {}
        }
      ]
    },
    "4755ef989ac771ad3c2c40f9914455725c931447": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-9021. Enforce configured SASL method on the server (daryn via bobby)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1408473 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/11/12 2:13 PM",
      "commitName": "4755ef989ac771ad3c2c40f9914455725c931447",
      "commitAuthor": "Robert Joseph Evans",
      "diff": "@@ -0,0 +1,21 @@\n+  private EnumSet\u003cAuthMethod\u003e getAuthMethods(SecretManager\u003c?\u003e secretManager,\n+                                             Configuration conf) {\n+    AuthenticationMethod confAuthenticationMethod \u003d\n+        SecurityUtil.getAuthenticationMethod(conf);        \n+    EnumSet\u003cAuthMethod\u003e authMethods \u003d\n+        EnumSet.of(confAuthenticationMethod.getAuthMethod()); \n+        \n+    if (confAuthenticationMethod \u003d\u003d AuthenticationMethod.TOKEN) {\n+      if (secretManager \u003d\u003d null) {\n+        throw new IllegalArgumentException(AuthenticationMethod.TOKEN +\n+            \" authentication requires a secret manager\");\n+      } \n+    } else if (secretManager !\u003d null) {\n+      LOG.debug(AuthenticationMethod.TOKEN +\n+          \" authentication enabled for secret manager\");\n+      authMethods.add(AuthenticationMethod.TOKEN.getAuthMethod());\n+    }\n+    \n+    LOG.debug(\"Server accepts auth methods:\" + authMethods);\n+    return authMethods;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private EnumSet\u003cAuthMethod\u003e getAuthMethods(SecretManager\u003c?\u003e secretManager,\n                                             Configuration conf) {\n    AuthenticationMethod confAuthenticationMethod \u003d\n        SecurityUtil.getAuthenticationMethod(conf);        \n    EnumSet\u003cAuthMethod\u003e authMethods \u003d\n        EnumSet.of(confAuthenticationMethod.getAuthMethod()); \n        \n    if (confAuthenticationMethod \u003d\u003d AuthenticationMethod.TOKEN) {\n      if (secretManager \u003d\u003d null) {\n        throw new IllegalArgumentException(AuthenticationMethod.TOKEN +\n            \" authentication requires a secret manager\");\n      } \n    } else if (secretManager !\u003d null) {\n      LOG.debug(AuthenticationMethod.TOKEN +\n          \" authentication enabled for secret manager\");\n      authMethods.add(AuthenticationMethod.TOKEN.getAuthMethod());\n    }\n    \n    LOG.debug(\"Server accepts auth methods:\" + authMethods);\n    return authMethods;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Server.java"
    }
  }
}