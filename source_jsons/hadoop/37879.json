{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "QueuePlacementRuleUtils.java",
  "functionName": "getPlacementContext",
  "functionId": "getPlacementContext___mapping-QueueMappingEntity__leafQueueName-String__queueManager-CapacitySchedulerQueueManager",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/placement/QueuePlacementRuleUtils.java",
  "functionStartLine": 134,
  "functionEndLine": 150,
  "numCommitsSeen": 11,
  "timeTaken": 4289,
  "changeHistory": [
    "cdb2107066a2d8557270888c0a9a75f29a6853bf",
    "652bcbb3e4950758e61ce123ecc1798ae2b60a7f",
    "a90471b3e65326cc18ed31fe21aef654833b5883"
  ],
  "changeHistoryShort": {
    "cdb2107066a2d8557270888c0a9a75f29a6853bf": "Ymultichange(Yparameterchange,Yexceptionschange,Ybodychange)",
    "652bcbb3e4950758e61ce123ecc1798ae2b60a7f": "Ybodychange",
    "a90471b3e65326cc18ed31fe21aef654833b5883": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cdb2107066a2d8557270888c0a9a75f29a6853bf": {
      "type": "Ymultichange(Yparameterchange,Yexceptionschange,Ybodychange)",
      "commitMessage": "YARN-9879. Allow multiple leaf queues with the same name in CapacityScheduler. Contributed by Gergely Pollak.\n",
      "commitDate": "25/03/20 4:20 AM",
      "commitName": "cdb2107066a2d8557270888c0a9a75f29a6853bf",
      "commitAuthor": "Sunil G",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-9879. Allow multiple leaf queues with the same name in CapacityScheduler. Contributed by Gergely Pollak.\n",
          "commitDate": "25/03/20 4:20 AM",
          "commitName": "cdb2107066a2d8557270888c0a9a75f29a6853bf",
          "commitAuthor": "Sunil G",
          "commitDateOld": "24/11/19 10:28 PM",
          "commitNameOld": "f8e36e03b4e65f173bf2330715dceafdb6111190",
          "commitAuthorOld": "HUAN-PING SU",
          "daysBetweenCommits": 121.2,
          "commitsBetweenForRepo": 405,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,17 @@\n   public static ApplicationPlacementContext getPlacementContext(\n-      QueueMappingEntity mapping, String leafQueueName) {\n+      QueueMappingEntity mapping, String leafQueueName,\n+      CapacitySchedulerQueueManager queueManager) throws IOException {\n+\n+    //leafQueue name no longer identifies a queue uniquely checking ambiguity\n+    if (!mapping.hasParentQueue() \u0026\u0026 queueManager.isAmbiguous(leafQueueName)) {\n+      throw new IOException(\"mapping contains ambiguous leaf queue reference \" +\n+          leafQueueName);\n+    }\n+\n     if (!org.apache.commons.lang3.StringUtils.isEmpty(mapping.getParentQueue())) {\n       return new ApplicationPlacementContext(leafQueueName,\n           mapping.getParentQueue());\n     } else{\n       return new ApplicationPlacementContext(leafQueueName);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static ApplicationPlacementContext getPlacementContext(\n      QueueMappingEntity mapping, String leafQueueName,\n      CapacitySchedulerQueueManager queueManager) throws IOException {\n\n    //leafQueue name no longer identifies a queue uniquely checking ambiguity\n    if (!mapping.hasParentQueue() \u0026\u0026 queueManager.isAmbiguous(leafQueueName)) {\n      throw new IOException(\"mapping contains ambiguous leaf queue reference \" +\n          leafQueueName);\n    }\n\n    if (!org.apache.commons.lang3.StringUtils.isEmpty(mapping.getParentQueue())) {\n      return new ApplicationPlacementContext(leafQueueName,\n          mapping.getParentQueue());\n    } else{\n      return new ApplicationPlacementContext(leafQueueName);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/placement/QueuePlacementRuleUtils.java",
          "extendedDetails": {
            "oldValue": "[mapping-QueueMappingEntity, leafQueueName-String]",
            "newValue": "[mapping-QueueMappingEntity, leafQueueName-String, queueManager-CapacitySchedulerQueueManager]"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "YARN-9879. Allow multiple leaf queues with the same name in CapacityScheduler. Contributed by Gergely Pollak.\n",
          "commitDate": "25/03/20 4:20 AM",
          "commitName": "cdb2107066a2d8557270888c0a9a75f29a6853bf",
          "commitAuthor": "Sunil G",
          "commitDateOld": "24/11/19 10:28 PM",
          "commitNameOld": "f8e36e03b4e65f173bf2330715dceafdb6111190",
          "commitAuthorOld": "HUAN-PING SU",
          "daysBetweenCommits": 121.2,
          "commitsBetweenForRepo": 405,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,17 @@\n   public static ApplicationPlacementContext getPlacementContext(\n-      QueueMappingEntity mapping, String leafQueueName) {\n+      QueueMappingEntity mapping, String leafQueueName,\n+      CapacitySchedulerQueueManager queueManager) throws IOException {\n+\n+    //leafQueue name no longer identifies a queue uniquely checking ambiguity\n+    if (!mapping.hasParentQueue() \u0026\u0026 queueManager.isAmbiguous(leafQueueName)) {\n+      throw new IOException(\"mapping contains ambiguous leaf queue reference \" +\n+          leafQueueName);\n+    }\n+\n     if (!org.apache.commons.lang3.StringUtils.isEmpty(mapping.getParentQueue())) {\n       return new ApplicationPlacementContext(leafQueueName,\n           mapping.getParentQueue());\n     } else{\n       return new ApplicationPlacementContext(leafQueueName);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static ApplicationPlacementContext getPlacementContext(\n      QueueMappingEntity mapping, String leafQueueName,\n      CapacitySchedulerQueueManager queueManager) throws IOException {\n\n    //leafQueue name no longer identifies a queue uniquely checking ambiguity\n    if (!mapping.hasParentQueue() \u0026\u0026 queueManager.isAmbiguous(leafQueueName)) {\n      throw new IOException(\"mapping contains ambiguous leaf queue reference \" +\n          leafQueueName);\n    }\n\n    if (!org.apache.commons.lang3.StringUtils.isEmpty(mapping.getParentQueue())) {\n      return new ApplicationPlacementContext(leafQueueName,\n          mapping.getParentQueue());\n    } else{\n      return new ApplicationPlacementContext(leafQueueName);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/placement/QueuePlacementRuleUtils.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[IOException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-9879. Allow multiple leaf queues with the same name in CapacityScheduler. Contributed by Gergely Pollak.\n",
          "commitDate": "25/03/20 4:20 AM",
          "commitName": "cdb2107066a2d8557270888c0a9a75f29a6853bf",
          "commitAuthor": "Sunil G",
          "commitDateOld": "24/11/19 10:28 PM",
          "commitNameOld": "f8e36e03b4e65f173bf2330715dceafdb6111190",
          "commitAuthorOld": "HUAN-PING SU",
          "daysBetweenCommits": 121.2,
          "commitsBetweenForRepo": 405,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,17 @@\n   public static ApplicationPlacementContext getPlacementContext(\n-      QueueMappingEntity mapping, String leafQueueName) {\n+      QueueMappingEntity mapping, String leafQueueName,\n+      CapacitySchedulerQueueManager queueManager) throws IOException {\n+\n+    //leafQueue name no longer identifies a queue uniquely checking ambiguity\n+    if (!mapping.hasParentQueue() \u0026\u0026 queueManager.isAmbiguous(leafQueueName)) {\n+      throw new IOException(\"mapping contains ambiguous leaf queue reference \" +\n+          leafQueueName);\n+    }\n+\n     if (!org.apache.commons.lang3.StringUtils.isEmpty(mapping.getParentQueue())) {\n       return new ApplicationPlacementContext(leafQueueName,\n           mapping.getParentQueue());\n     } else{\n       return new ApplicationPlacementContext(leafQueueName);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static ApplicationPlacementContext getPlacementContext(\n      QueueMappingEntity mapping, String leafQueueName,\n      CapacitySchedulerQueueManager queueManager) throws IOException {\n\n    //leafQueue name no longer identifies a queue uniquely checking ambiguity\n    if (!mapping.hasParentQueue() \u0026\u0026 queueManager.isAmbiguous(leafQueueName)) {\n      throw new IOException(\"mapping contains ambiguous leaf queue reference \" +\n          leafQueueName);\n    }\n\n    if (!org.apache.commons.lang3.StringUtils.isEmpty(mapping.getParentQueue())) {\n      return new ApplicationPlacementContext(leafQueueName,\n          mapping.getParentQueue());\n    } else{\n      return new ApplicationPlacementContext(leafQueueName);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/placement/QueuePlacementRuleUtils.java",
          "extendedDetails": {}
        }
      ]
    },
    "652bcbb3e4950758e61ce123ecc1798ae2b60a7f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8363. Upgrade commons-lang version to 3.7 in hadoop-yarn-project. Contributed by Takanobu Asanuma.\n",
      "commitDate": "12/06/18 8:35 AM",
      "commitName": "652bcbb3e4950758e61ce123ecc1798ae2b60a7f",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "23/03/18 4:43 PM",
      "commitNameOld": "a90471b3e65326cc18ed31fe21aef654833b5883",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 80.66,
      "commitsBetweenForRepo": 1082,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n   public static ApplicationPlacementContext getPlacementContext(\n       QueueMappingEntity mapping, String leafQueueName) {\n-    if (!org.apache.commons.lang.StringUtils.isEmpty(mapping.getParentQueue())) {\n+    if (!org.apache.commons.lang3.StringUtils.isEmpty(mapping.getParentQueue())) {\n       return new ApplicationPlacementContext(leafQueueName,\n           mapping.getParentQueue());\n     } else{\n       return new ApplicationPlacementContext(leafQueueName);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static ApplicationPlacementContext getPlacementContext(\n      QueueMappingEntity mapping, String leafQueueName) {\n    if (!org.apache.commons.lang3.StringUtils.isEmpty(mapping.getParentQueue())) {\n      return new ApplicationPlacementContext(leafQueueName,\n          mapping.getParentQueue());\n    } else{\n      return new ApplicationPlacementContext(leafQueueName);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/placement/QueuePlacementRuleUtils.java",
      "extendedDetails": {}
    },
    "a90471b3e65326cc18ed31fe21aef654833b5883": {
      "type": "Yintroduced",
      "commitMessage": "YARN-8016. Refine PlacementRule interface and add a app-name queue mapping rule as an example. (Zian Chen via wangda)\n\nChange-Id: I35caf1480e0f76f5f3a53528af09312e39414bbb\n",
      "commitDate": "23/03/18 4:43 PM",
      "commitName": "a90471b3e65326cc18ed31fe21aef654833b5883",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,9 @@\n+  public static ApplicationPlacementContext getPlacementContext(\n+      QueueMappingEntity mapping, String leafQueueName) {\n+    if (!org.apache.commons.lang.StringUtils.isEmpty(mapping.getParentQueue())) {\n+      return new ApplicationPlacementContext(leafQueueName,\n+          mapping.getParentQueue());\n+    } else{\n+      return new ApplicationPlacementContext(leafQueueName);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static ApplicationPlacementContext getPlacementContext(\n      QueueMappingEntity mapping, String leafQueueName) {\n    if (!org.apache.commons.lang.StringUtils.isEmpty(mapping.getParentQueue())) {\n      return new ApplicationPlacementContext(leafQueueName,\n          mapping.getParentQueue());\n    } else{\n      return new ApplicationPlacementContext(leafQueueName);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/placement/QueuePlacementRuleUtils.java"
    }
  }
}