{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSAppAttempt.java",
  "functionName": "assignContainer",
  "functionId": "assignContainer___node-FSSchedulerNode",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSAppAttempt.java",
  "functionStartLine": 1370,
  "functionEndLine": 1383,
  "numCommitsSeen": 76,
  "timeTaken": 3378,
  "changeHistory": [
    "4db9cc70d0178703fb28f451eb84d97f2bf63af8",
    "2977bc6a141041ef7579efc416e93fc55e0c2a1a",
    "59ee8b7a88603e94b5661a8d5d088f7aa99fe049",
    "bd69ea408f8fdd8293836ce1089fe9b01616f2f7",
    "486e718fc1f5befd231494e2ec06bb360484f191"
  ],
  "changeHistoryShort": {
    "4db9cc70d0178703fb28f451eb84d97f2bf63af8": "Ybodychange",
    "2977bc6a141041ef7579efc416e93fc55e0c2a1a": "Ybodychange",
    "59ee8b7a88603e94b5661a8d5d088f7aa99fe049": "Ybodychange",
    "bd69ea408f8fdd8293836ce1089fe9b01616f2f7": "Ybodychange",
    "486e718fc1f5befd231494e2ec06bb360484f191": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4db9cc70d0178703fb28f451eb84d97f2bf63af8": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6042. Dump scheduler and queue state information into FairScheduler DEBUG log. (Yufei Gu via rchiang)\n",
      "commitDate": "10/03/17 4:13 PM",
      "commitName": "4db9cc70d0178703fb28f451eb84d97f2bf63af8",
      "commitAuthor": "Ray Chiang",
      "commitDateOld": "09/03/17 5:51 PM",
      "commitNameOld": "846a0cd678fba743220f28cef844ac9011a3f934",
      "commitAuthorOld": "Daniel Templeton",
      "daysBetweenCommits": 0.93,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,14 @@\n   public Resource assignContainer(FSSchedulerNode node) {\n     if (isOverAMShareLimit()) {\n-      if (isWaitingForAMContainer()) {\n-        PendingAsk amAsk \u003d appSchedulingInfo.getNextPendingAsk();\n-        updateAMDiagnosticMsg(amAsk.getPerAllocationResource(),\n-            \" exceeds maximum AM resource allowed).\");\n-      }\n-\n+      PendingAsk amAsk \u003d appSchedulingInfo.getNextPendingAsk();\n+      updateAMDiagnosticMsg(amAsk.getPerAllocationResource(),\n+          \" exceeds maximum AM resource allowed).\");\n       if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Skipping allocation because maxAMShare limit would \" +\n-            \"be exceeded\");\n+        LOG.debug(\"AM resource request: \" + amAsk.getPerAllocationResource()\n+            + \" exceeds maximum AM resource allowed, \"\n+            + getQueue().dumpState());\n       }\n       return Resources.none();\n     }\n     return assignContainer(node, false);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Resource assignContainer(FSSchedulerNode node) {\n    if (isOverAMShareLimit()) {\n      PendingAsk amAsk \u003d appSchedulingInfo.getNextPendingAsk();\n      updateAMDiagnosticMsg(amAsk.getPerAllocationResource(),\n          \" exceeds maximum AM resource allowed).\");\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"AM resource request: \" + amAsk.getPerAllocationResource()\n            + \" exceeds maximum AM resource allowed, \"\n            + getQueue().dumpState());\n      }\n      return Resources.none();\n    }\n    return assignContainer(node, false);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSAppAttempt.java",
      "extendedDetails": {}
    },
    "2977bc6a141041ef7579efc416e93fc55e0c2a1a": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6040. Introduce api independent PendingAsk to replace usage of ResourceRequest within Scheduler classes. (Wangda Tan via asuresh)\n",
      "commitDate": "06/01/17 9:59 AM",
      "commitName": "2977bc6a141041ef7579efc416e93fc55e0c2a1a",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "05/01/17 10:31 AM",
      "commitNameOld": "0a55bd841ec0f2eb89a0383f4c589526e8b138d4",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 0.98,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   public Resource assignContainer(FSSchedulerNode node) {\n     if (isOverAMShareLimit()) {\n       if (isWaitingForAMContainer()) {\n-        List\u003cResourceRequest\u003e ask \u003d appSchedulingInfo.getAllResourceRequests();\n-        updateAMDiagnosticMsg(ask.get(0).getCapability(), \" exceeds maximum \"\n-            + \"AM resource allowed).\");\n+        PendingAsk amAsk \u003d appSchedulingInfo.getNextPendingAsk();\n+        updateAMDiagnosticMsg(amAsk.getPerAllocationResource(),\n+            \" exceeds maximum AM resource allowed).\");\n       }\n \n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Skipping allocation because maxAMShare limit would \" +\n             \"be exceeded\");\n       }\n       return Resources.none();\n     }\n     return assignContainer(node, false);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Resource assignContainer(FSSchedulerNode node) {\n    if (isOverAMShareLimit()) {\n      if (isWaitingForAMContainer()) {\n        PendingAsk amAsk \u003d appSchedulingInfo.getNextPendingAsk();\n        updateAMDiagnosticMsg(amAsk.getPerAllocationResource(),\n            \" exceeds maximum AM resource allowed).\");\n      }\n\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Skipping allocation because maxAMShare limit would \" +\n            \"be exceeded\");\n      }\n      return Resources.none();\n    }\n    return assignContainer(node, false);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSAppAttempt.java",
      "extendedDetails": {}
    },
    "59ee8b7a88603e94b5661a8d5d088f7aa99fe049": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4329. [YARN-5437] Allow fetching exact reason as to why a submitted app\nis in ACCEPTED state in Fair Scheduler (Contributed by Yufei Gu)\n",
      "commitDate": "09/11/16 1:11 PM",
      "commitName": "59ee8b7a88603e94b5661a8d5d088f7aa99fe049",
      "commitAuthor": "Daniel Templeton",
      "commitDateOld": "31/10/16 1:34 PM",
      "commitNameOld": "2528bea67ff80fae597f10e26c5f70d601af9fb1",
      "commitAuthorOld": "Daniel Templeton",
      "daysBetweenCommits": 9.03,
      "commitsBetweenForRepo": 108,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,16 @@\n   public Resource assignContainer(FSSchedulerNode node) {\n     if (isOverAMShareLimit()) {\n+      if (isWaitingForAMContainer()) {\n+        List\u003cResourceRequest\u003e ask \u003d appSchedulingInfo.getAllResourceRequests();\n+        updateAMDiagnosticMsg(ask.get(0).getCapability(), \" exceeds maximum \"\n+            + \"AM resource allowed).\");\n+      }\n+\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Skipping allocation because maxAMShare limit would \" +\n             \"be exceeded\");\n       }\n       return Resources.none();\n     }\n     return assignContainer(node, false);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Resource assignContainer(FSSchedulerNode node) {\n    if (isOverAMShareLimit()) {\n      if (isWaitingForAMContainer()) {\n        List\u003cResourceRequest\u003e ask \u003d appSchedulingInfo.getAllResourceRequests();\n        updateAMDiagnosticMsg(ask.get(0).getCapability(), \" exceeds maximum \"\n            + \"AM resource allowed).\");\n      }\n\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Skipping allocation because maxAMShare limit would \" +\n            \"be exceeded\");\n      }\n      return Resources.none();\n    }\n    return assignContainer(node, false);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSAppAttempt.java",
      "extendedDetails": {}
    },
    "bd69ea408f8fdd8293836ce1089fe9b01616f2f7": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3655. FairScheduler: potential livelock due to maxAMShare limitation and container reservation. (Zhihai Xu via kasha)\n",
      "commitDate": "07/06/15 11:37 AM",
      "commitName": "bd69ea408f8fdd8293836ce1089fe9b01616f2f7",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "28/04/15 9:00 PM",
      "commitNameOld": "8f82970e0c247b37b2bf33aa21f6a39afa07efde",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 39.61,
      "commitsBetweenForRepo": 397,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,3 +1,10 @@\n   public Resource assignContainer(FSSchedulerNode node) {\n+    if (isOverAMShareLimit()) {\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"Skipping allocation because maxAMShare limit would \" +\n+            \"be exceeded\");\n+      }\n+      return Resources.none();\n+    }\n     return assignContainer(node, false);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Resource assignContainer(FSSchedulerNode node) {\n    if (isOverAMShareLimit()) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Skipping allocation because maxAMShare limit would \" +\n            \"be exceeded\");\n      }\n      return Resources.none();\n    }\n    return assignContainer(node, false);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSAppAttempt.java",
      "extendedDetails": {}
    },
    "486e718fc1f5befd231494e2ec06bb360484f191": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2399. FairScheduler: Merge AppSchedulable and FSSchedulerApp into FSAppAttempt. (kasha)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1617600 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/08/14 2:43 PM",
      "commitName": "486e718fc1f5befd231494e2ec06bb360484f191",
      "commitAuthor": "Karthik Kambatla",
      "diff": "@@ -0,0 +1,3 @@\n+  public Resource assignContainer(FSSchedulerNode node) {\n+    return assignContainer(node, false);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Resource assignContainer(FSSchedulerNode node) {\n    return assignContainer(node, false);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSAppAttempt.java"
    }
  }
}