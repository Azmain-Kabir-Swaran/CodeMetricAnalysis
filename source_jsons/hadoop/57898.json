{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "WebApp.java",
  "functionName": "configureWebAppServlets",
  "functionId": "configureWebAppServlets",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/WebApp.java",
  "functionStartLine": 172,
  "functionEndLine": 193,
  "numCommitsSeen": 15,
  "timeTaken": 1500,
  "changeHistory": [
    "d9cdcb9474528733c488d4a5c73d2e4abb1af6fb",
    "9b15c5b11a565251f85b7cb67be6ee0deee6e0d6"
  ],
  "changeHistoryShort": {
    "d9cdcb9474528733c488d4a5c73d2e4abb1af6fb": "Ymultichange(Yrename,Ybodychange)",
    "9b15c5b11a565251f85b7cb67be6ee0deee6e0d6": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d9cdcb9474528733c488d4a5c73d2e4abb1af6fb": {
      "type": "Ymultichange(Yrename,Ybodychange)",
      "commitMessage": "YARN-1658. Modified web-app framework to let standby RMs redirect web-service calls to the active RM. Contributed by Cindy Li.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1577408 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/03/14 7:39 PM",
      "commitName": "d9cdcb9474528733c488d4a5c73d2e4abb1af6fb",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-1658. Modified web-app framework to let standby RMs redirect web-service calls to the active RM. Contributed by Cindy Li.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1577408 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/03/14 7:39 PM",
          "commitName": "d9cdcb9474528733c488d4a5c73d2e4abb1af6fb",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "06/03/14 8:34 PM",
          "commitNameOld": "9b15c5b11a565251f85b7cb67be6ee0deee6e0d6",
          "commitAuthorOld": "Karthik Kambatla",
          "daysBetweenCommits": 6.92,
          "commitsBetweenForRepo": 62,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,22 @@\n-  protected void configureRSServlets() {\n+  protected void configureWebAppServlets() {\n     // Add in the web services filters/serves if app has them.\n     // Using Jersey/guice integration module. If user has web services\n     // they must have also bound a default one in their webapp code.\n     if (this.wsName !\u003d null) {\n       // There seems to be an issue with the guice/jersey integration\n       // where we have to list the stuff we don\u0027t want it to serve\n       // through the guicecontainer. In this case its everything except\n       // the the web services api prefix. We can\u0027t just change the filter\n       // from /* below - that doesn\u0027t work.\n       String regex \u003d \"(?!/\" + this.wsName + \")\";\n       serveRegex(regex).with(DefaultWrapperServlet.class);\n \n       Map\u003cString, String\u003e params \u003d new HashMap\u003cString, String\u003e();\n       params.put(ResourceConfig.FEATURE_IMPLICIT_VIEWABLES, \"true\");\n       params.put(ServletContainer.FEATURE_FILTER_FORWARD_ON_404, \"true\");\n       params.put(FeaturesAndProperties.FEATURE_XMLROOTELEMENT_PROCESSING, \"true\");\n       params.put(ResourceConfig.PROPERTY_CONTAINER_REQUEST_FILTERS, GZIPContentEncodingFilter.class.getName());\n       params.put(ResourceConfig.PROPERTY_CONTAINER_RESPONSE_FILTERS, GZIPContentEncodingFilter.class.getName());\n-      filter(\"/*\").through(GuiceContainer.class, params);\n+      filter(\"/*\").through(getWebAppFilterClass(), params);\n     }\n-\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void configureWebAppServlets() {\n    // Add in the web services filters/serves if app has them.\n    // Using Jersey/guice integration module. If user has web services\n    // they must have also bound a default one in their webapp code.\n    if (this.wsName !\u003d null) {\n      // There seems to be an issue with the guice/jersey integration\n      // where we have to list the stuff we don\u0027t want it to serve\n      // through the guicecontainer. In this case its everything except\n      // the the web services api prefix. We can\u0027t just change the filter\n      // from /* below - that doesn\u0027t work.\n      String regex \u003d \"(?!/\" + this.wsName + \")\";\n      serveRegex(regex).with(DefaultWrapperServlet.class);\n\n      Map\u003cString, String\u003e params \u003d new HashMap\u003cString, String\u003e();\n      params.put(ResourceConfig.FEATURE_IMPLICIT_VIEWABLES, \"true\");\n      params.put(ServletContainer.FEATURE_FILTER_FORWARD_ON_404, \"true\");\n      params.put(FeaturesAndProperties.FEATURE_XMLROOTELEMENT_PROCESSING, \"true\");\n      params.put(ResourceConfig.PROPERTY_CONTAINER_REQUEST_FILTERS, GZIPContentEncodingFilter.class.getName());\n      params.put(ResourceConfig.PROPERTY_CONTAINER_RESPONSE_FILTERS, GZIPContentEncodingFilter.class.getName());\n      filter(\"/*\").through(getWebAppFilterClass(), params);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/WebApp.java",
          "extendedDetails": {
            "oldValue": "configureRSServlets",
            "newValue": "configureWebAppServlets"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-1658. Modified web-app framework to let standby RMs redirect web-service calls to the active RM. Contributed by Cindy Li.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1577408 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/03/14 7:39 PM",
          "commitName": "d9cdcb9474528733c488d4a5c73d2e4abb1af6fb",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "06/03/14 8:34 PM",
          "commitNameOld": "9b15c5b11a565251f85b7cb67be6ee0deee6e0d6",
          "commitAuthorOld": "Karthik Kambatla",
          "daysBetweenCommits": 6.92,
          "commitsBetweenForRepo": 62,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,22 @@\n-  protected void configureRSServlets() {\n+  protected void configureWebAppServlets() {\n     // Add in the web services filters/serves if app has them.\n     // Using Jersey/guice integration module. If user has web services\n     // they must have also bound a default one in their webapp code.\n     if (this.wsName !\u003d null) {\n       // There seems to be an issue with the guice/jersey integration\n       // where we have to list the stuff we don\u0027t want it to serve\n       // through the guicecontainer. In this case its everything except\n       // the the web services api prefix. We can\u0027t just change the filter\n       // from /* below - that doesn\u0027t work.\n       String regex \u003d \"(?!/\" + this.wsName + \")\";\n       serveRegex(regex).with(DefaultWrapperServlet.class);\n \n       Map\u003cString, String\u003e params \u003d new HashMap\u003cString, String\u003e();\n       params.put(ResourceConfig.FEATURE_IMPLICIT_VIEWABLES, \"true\");\n       params.put(ServletContainer.FEATURE_FILTER_FORWARD_ON_404, \"true\");\n       params.put(FeaturesAndProperties.FEATURE_XMLROOTELEMENT_PROCESSING, \"true\");\n       params.put(ResourceConfig.PROPERTY_CONTAINER_REQUEST_FILTERS, GZIPContentEncodingFilter.class.getName());\n       params.put(ResourceConfig.PROPERTY_CONTAINER_RESPONSE_FILTERS, GZIPContentEncodingFilter.class.getName());\n-      filter(\"/*\").through(GuiceContainer.class, params);\n+      filter(\"/*\").through(getWebAppFilterClass(), params);\n     }\n-\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void configureWebAppServlets() {\n    // Add in the web services filters/serves if app has them.\n    // Using Jersey/guice integration module. If user has web services\n    // they must have also bound a default one in their webapp code.\n    if (this.wsName !\u003d null) {\n      // There seems to be an issue with the guice/jersey integration\n      // where we have to list the stuff we don\u0027t want it to serve\n      // through the guicecontainer. In this case its everything except\n      // the the web services api prefix. We can\u0027t just change the filter\n      // from /* below - that doesn\u0027t work.\n      String regex \u003d \"(?!/\" + this.wsName + \")\";\n      serveRegex(regex).with(DefaultWrapperServlet.class);\n\n      Map\u003cString, String\u003e params \u003d new HashMap\u003cString, String\u003e();\n      params.put(ResourceConfig.FEATURE_IMPLICIT_VIEWABLES, \"true\");\n      params.put(ServletContainer.FEATURE_FILTER_FORWARD_ON_404, \"true\");\n      params.put(FeaturesAndProperties.FEATURE_XMLROOTELEMENT_PROCESSING, \"true\");\n      params.put(ResourceConfig.PROPERTY_CONTAINER_REQUEST_FILTERS, GZIPContentEncodingFilter.class.getName());\n      params.put(ResourceConfig.PROPERTY_CONTAINER_RESPONSE_FILTERS, GZIPContentEncodingFilter.class.getName());\n      filter(\"/*\").through(getWebAppFilterClass(), params);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/WebApp.java",
          "extendedDetails": {}
        }
      ]
    },
    "9b15c5b11a565251f85b7cb67be6ee0deee6e0d6": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1525. Web UI should redirect to active RM when HA is enabled. (Cindy Li via kasha)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1575166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/03/14 8:34 PM",
      "commitName": "9b15c5b11a565251f85b7cb67be6ee0deee6e0d6",
      "commitAuthor": "Karthik Kambatla",
      "diff": "@@ -0,0 +1,23 @@\n+  protected void configureRSServlets() {\n+    // Add in the web services filters/serves if app has them.\n+    // Using Jersey/guice integration module. If user has web services\n+    // they must have also bound a default one in their webapp code.\n+    if (this.wsName !\u003d null) {\n+      // There seems to be an issue with the guice/jersey integration\n+      // where we have to list the stuff we don\u0027t want it to serve\n+      // through the guicecontainer. In this case its everything except\n+      // the the web services api prefix. We can\u0027t just change the filter\n+      // from /* below - that doesn\u0027t work.\n+      String regex \u003d \"(?!/\" + this.wsName + \")\";\n+      serveRegex(regex).with(DefaultWrapperServlet.class);\n+\n+      Map\u003cString, String\u003e params \u003d new HashMap\u003cString, String\u003e();\n+      params.put(ResourceConfig.FEATURE_IMPLICIT_VIEWABLES, \"true\");\n+      params.put(ServletContainer.FEATURE_FILTER_FORWARD_ON_404, \"true\");\n+      params.put(FeaturesAndProperties.FEATURE_XMLROOTELEMENT_PROCESSING, \"true\");\n+      params.put(ResourceConfig.PROPERTY_CONTAINER_REQUEST_FILTERS, GZIPContentEncodingFilter.class.getName());\n+      params.put(ResourceConfig.PROPERTY_CONTAINER_RESPONSE_FILTERS, GZIPContentEncodingFilter.class.getName());\n+      filter(\"/*\").through(GuiceContainer.class, params);\n+    }\n+\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void configureRSServlets() {\n    // Add in the web services filters/serves if app has them.\n    // Using Jersey/guice integration module. If user has web services\n    // they must have also bound a default one in their webapp code.\n    if (this.wsName !\u003d null) {\n      // There seems to be an issue with the guice/jersey integration\n      // where we have to list the stuff we don\u0027t want it to serve\n      // through the guicecontainer. In this case its everything except\n      // the the web services api prefix. We can\u0027t just change the filter\n      // from /* below - that doesn\u0027t work.\n      String regex \u003d \"(?!/\" + this.wsName + \")\";\n      serveRegex(regex).with(DefaultWrapperServlet.class);\n\n      Map\u003cString, String\u003e params \u003d new HashMap\u003cString, String\u003e();\n      params.put(ResourceConfig.FEATURE_IMPLICIT_VIEWABLES, \"true\");\n      params.put(ServletContainer.FEATURE_FILTER_FORWARD_ON_404, \"true\");\n      params.put(FeaturesAndProperties.FEATURE_XMLROOTELEMENT_PROCESSING, \"true\");\n      params.put(ResourceConfig.PROPERTY_CONTAINER_REQUEST_FILTERS, GZIPContentEncodingFilter.class.getName());\n      params.put(ResourceConfig.PROPERTY_CONTAINER_RESPONSE_FILTERS, GZIPContentEncodingFilter.class.getName());\n      filter(\"/*\").through(GuiceContainer.class, params);\n    }\n\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/WebApp.java"
    }
  }
}