{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JNStorage.java",
  "functionName": "checkConsistentNamespace",
  "functionId": "checkConsistentNamespace___nsInfo-NamespaceInfo",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/server/JNStorage.java",
  "functionStartLine": 266,
  "functionEndLine": 280,
  "numCommitsSeen": 21,
  "timeTaken": 1117,
  "changeHistory": [
    "f765fdb65701e61887daedb2b369af4be12cb432",
    "74d4573a23db5586c6e47ff2277aa7c35237da34"
  ],
  "changeHistoryShort": {
    "f765fdb65701e61887daedb2b369af4be12cb432": "Ymodifierchange",
    "74d4573a23db5586c6e47ff2277aa7c35237da34": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f765fdb65701e61887daedb2b369af4be12cb432": {
      "type": "Ymodifierchange",
      "commitMessage": "HDFS-3793. Implement genericized format() in QJM. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3077@1373177 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/08/12 5:48 PM",
      "commitName": "f765fdb65701e61887daedb2b369af4be12cb432",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "25/07/12 2:47 PM",
      "commitNameOld": "b17018e4b821ec860144d8bd38bc1fcb0d7eeaa5",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 20.13,
      "commitsBetweenForRepo": 82,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n-  private void checkConsistentNamespace(NamespaceInfo nsInfo)\n+  void checkConsistentNamespace(NamespaceInfo nsInfo)\n       throws IOException {\n     if (nsInfo.getNamespaceID() !\u003d getNamespaceID()) {\n       throw new IOException(\"Incompatible namespaceID for journal \" +\n           this.sd + \": NameNode has nsId \" + nsInfo.getNamespaceID() +\n           \" but storage has nsId \" + getNamespaceID());\n     }\n     \n     if (!nsInfo.getClusterID().equals(getClusterID())) {\n       throw new IOException(\"Incompatible clusterID for journal \" +\n           this.sd + \": NameNode has clusterId \u0027\" + nsInfo.getClusterID() +\n           \"\u0027 but storage has clusterId \u0027\" + getClusterID() + \"\u0027\");\n       \n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void checkConsistentNamespace(NamespaceInfo nsInfo)\n      throws IOException {\n    if (nsInfo.getNamespaceID() !\u003d getNamespaceID()) {\n      throw new IOException(\"Incompatible namespaceID for journal \" +\n          this.sd + \": NameNode has nsId \" + nsInfo.getNamespaceID() +\n          \" but storage has nsId \" + getNamespaceID());\n    }\n    \n    if (!nsInfo.getClusterID().equals(getClusterID())) {\n      throw new IOException(\"Incompatible clusterID for journal \" +\n          this.sd + \": NameNode has clusterId \u0027\" + nsInfo.getClusterID() +\n          \"\u0027 but storage has clusterId \u0027\" + getClusterID() + \"\u0027\");\n      \n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/server/JNStorage.java",
      "extendedDetails": {
        "oldValue": "[private]",
        "newValue": "[]"
      }
    },
    "74d4573a23db5586c6e47ff2277aa7c35237da34": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-3077. Quorum-based protocol for reading and writing edit logs. Contributed by Todd Lipcon based on initial work from Brandon Li and Hari Mankude.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3077@1363596 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/07/12 5:25 PM",
      "commitName": "74d4573a23db5586c6e47ff2277aa7c35237da34",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,15 @@\n+  private void checkConsistentNamespace(NamespaceInfo nsInfo)\n+      throws IOException {\n+    if (nsInfo.getNamespaceID() !\u003d getNamespaceID()) {\n+      throw new IOException(\"Incompatible namespaceID for journal \" +\n+          this.sd + \": NameNode has nsId \" + nsInfo.getNamespaceID() +\n+          \" but storage has nsId \" + getNamespaceID());\n+    }\n+    \n+    if (!nsInfo.getClusterID().equals(getClusterID())) {\n+      throw new IOException(\"Incompatible clusterID for journal \" +\n+          this.sd + \": NameNode has clusterId \u0027\" + nsInfo.getClusterID() +\n+          \"\u0027 but storage has clusterId \u0027\" + getClusterID() + \"\u0027\");\n+      \n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void checkConsistentNamespace(NamespaceInfo nsInfo)\n      throws IOException {\n    if (nsInfo.getNamespaceID() !\u003d getNamespaceID()) {\n      throw new IOException(\"Incompatible namespaceID for journal \" +\n          this.sd + \": NameNode has nsId \" + nsInfo.getNamespaceID() +\n          \" but storage has nsId \" + getNamespaceID());\n    }\n    \n    if (!nsInfo.getClusterID().equals(getClusterID())) {\n      throw new IOException(\"Incompatible clusterID for journal \" +\n          this.sd + \": NameNode has clusterId \u0027\" + nsInfo.getClusterID() +\n          \"\u0027 but storage has clusterId \u0027\" + getClusterID() + \"\u0027\");\n      \n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/server/JNStorage.java"
    }
  }
}