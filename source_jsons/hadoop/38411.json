{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMNodeLabelsManager.java",
  "functionName": "cloneNodeMap",
  "functionId": "cloneNodeMap___nodesToCopy-Set__NodeId__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/nodelabels/RMNodeLabelsManager.java",
  "functionStartLine": 396,
  "functionEndLine": 423,
  "numCommitsSeen": 22,
  "timeTaken": 918,
  "changeHistory": [
    "db7f1653198b950e89567c06898d64f6b930a0ee"
  ],
  "changeHistoryShort": {
    "db7f1653198b950e89567c06898d64f6b930a0ee": "Yintroduced"
  },
  "changeHistoryDetails": {
    "db7f1653198b950e89567c06898d64f6b930a0ee": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2494. Added NodeLabels Manager internal API and implementation. Contributed by Wangda Tan.\n",
      "commitDate": "10/10/14 11:44 AM",
      "commitName": "db7f1653198b950e89567c06898d64f6b930a0ee",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,28 @@\n+  private Map\u003cString, Host\u003e cloneNodeMap(Set\u003cNodeId\u003e nodesToCopy) {\n+    Map\u003cString, Host\u003e map \u003d new HashMap\u003cString, Host\u003e();\n+    for (NodeId nodeId : nodesToCopy) {\n+      if (!map.containsKey(nodeId.getHost())) {\n+        Host originalN \u003d nodeCollections.get(nodeId.getHost());\n+        if (null \u003d\u003d originalN) {\n+          continue;\n+        }\n+        Host n \u003d originalN.copy();\n+        n.nms.clear();\n+        map.put(nodeId.getHost(), n);\n+      }\n+\n+      Host n \u003d map.get(nodeId.getHost());\n+      if (WILDCARD_PORT \u003d\u003d nodeId.getPort()) {\n+        for (Entry\u003cNodeId, Node\u003e entry : nodeCollections\n+            .get(nodeId.getHost()).nms.entrySet()) {\n+          n.nms.put(entry.getKey(), entry.getValue().copy());\n+        }\n+      } else {\n+        Node nm \u003d getNMInNodeSet(nodeId);\n+        if (null !\u003d nm) {\n+          n.nms.put(nodeId, nm.copy());\n+        }\n+      }\n+    }\n+    return map;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private Map\u003cString, Host\u003e cloneNodeMap(Set\u003cNodeId\u003e nodesToCopy) {\n    Map\u003cString, Host\u003e map \u003d new HashMap\u003cString, Host\u003e();\n    for (NodeId nodeId : nodesToCopy) {\n      if (!map.containsKey(nodeId.getHost())) {\n        Host originalN \u003d nodeCollections.get(nodeId.getHost());\n        if (null \u003d\u003d originalN) {\n          continue;\n        }\n        Host n \u003d originalN.copy();\n        n.nms.clear();\n        map.put(nodeId.getHost(), n);\n      }\n\n      Host n \u003d map.get(nodeId.getHost());\n      if (WILDCARD_PORT \u003d\u003d nodeId.getPort()) {\n        for (Entry\u003cNodeId, Node\u003e entry : nodeCollections\n            .get(nodeId.getHost()).nms.entrySet()) {\n          n.nms.put(entry.getKey(), entry.getValue().copy());\n        }\n      } else {\n        Node nm \u003d getNMInNodeSet(nodeId);\n        if (null !\u003d nm) {\n          n.nms.put(nodeId, nm.copy());\n        }\n      }\n    }\n    return map;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/nodelabels/RMNodeLabelsManager.java"
    }
  }
}