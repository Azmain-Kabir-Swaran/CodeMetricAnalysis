{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ClusterStatus.java",
  "functionName": "write",
  "functionId": "write___out-DataOutput",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/ClusterStatus.java",
  "functionStartLine": 511,
  "functionEndLine": 540,
  "numCommitsSeen": 10,
  "timeTaken": 5624,
  "changeHistory": [
    "a77030abdc2b5e7b9434e3b87fef29c8c378cbf2",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "a77030abdc2b5e7b9434e3b87fef29c8c378cbf2": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a77030abdc2b5e7b9434e3b87fef29c8c378cbf2": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5280. Bring back removed constructor and a method in mapreduce ClusterMetrics for binary compatibility with 1.x APIs. Contributed by Mayank Bansal.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1488458 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/05/13 8:57 PM",
      "commitName": "a77030abdc2b5e7b9434e3b87fef29c8c378cbf2",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "28/05/13 5:43 PM",
      "commitNameOld": "0edae7a96a06513f6abcbf5693598ee14eca4ddc",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 3.14,
      "commitsBetweenForRepo": 32,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,30 @@\n   public void write(DataOutput out) throws IOException {\n     if (activeTrackers.size() \u003d\u003d 0) {\n       out.writeInt(numActiveTrackers);\n       out.writeInt(0);\n     } else {\n       out.writeInt(activeTrackers.size());\n       out.writeInt(activeTrackers.size());\n       for (String tracker : activeTrackers) {\n         Text.writeString(out, tracker);\n       }\n     }\n     if (blacklistedTrackersInfo.size() \u003d\u003d 0) {\n       out.writeInt(numBlacklistedTrackers);\n       out.writeInt(blacklistedTrackersInfo.size());\n     } else {\n       out.writeInt(blacklistedTrackersInfo.size());\n       out.writeInt(blacklistedTrackersInfo.size());\n       for (BlackListInfo tracker : blacklistedTrackersInfo) {\n         tracker.write(out);\n       }\n     }\n     out.writeInt(numExcludedNodes);\n     out.writeLong(ttExpiryInterval);\n     out.writeInt(map_tasks);\n     out.writeInt(reduce_tasks);\n     out.writeInt(max_map_tasks);\n     out.writeInt(max_reduce_tasks);\n     WritableUtils.writeEnum(out, status);\n+    out.writeInt(grayListedTrackers);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void write(DataOutput out) throws IOException {\n    if (activeTrackers.size() \u003d\u003d 0) {\n      out.writeInt(numActiveTrackers);\n      out.writeInt(0);\n    } else {\n      out.writeInt(activeTrackers.size());\n      out.writeInt(activeTrackers.size());\n      for (String tracker : activeTrackers) {\n        Text.writeString(out, tracker);\n      }\n    }\n    if (blacklistedTrackersInfo.size() \u003d\u003d 0) {\n      out.writeInt(numBlacklistedTrackers);\n      out.writeInt(blacklistedTrackersInfo.size());\n    } else {\n      out.writeInt(blacklistedTrackersInfo.size());\n      out.writeInt(blacklistedTrackersInfo.size());\n      for (BlackListInfo tracker : blacklistedTrackersInfo) {\n        tracker.write(out);\n      }\n    }\n    out.writeInt(numExcludedNodes);\n    out.writeLong(ttExpiryInterval);\n    out.writeInt(map_tasks);\n    out.writeInt(reduce_tasks);\n    out.writeInt(max_map_tasks);\n    out.writeInt(max_reduce_tasks);\n    WritableUtils.writeEnum(out, status);\n    out.writeInt(grayListedTrackers);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/ClusterStatus.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void write(DataOutput out) throws IOException {\n    if (activeTrackers.size() \u003d\u003d 0) {\n      out.writeInt(numActiveTrackers);\n      out.writeInt(0);\n    } else {\n      out.writeInt(activeTrackers.size());\n      out.writeInt(activeTrackers.size());\n      for (String tracker : activeTrackers) {\n        Text.writeString(out, tracker);\n      }\n    }\n    if (blacklistedTrackersInfo.size() \u003d\u003d 0) {\n      out.writeInt(numBlacklistedTrackers);\n      out.writeInt(blacklistedTrackersInfo.size());\n    } else {\n      out.writeInt(blacklistedTrackersInfo.size());\n      out.writeInt(blacklistedTrackersInfo.size());\n      for (BlackListInfo tracker : blacklistedTrackersInfo) {\n        tracker.write(out);\n      }\n    }\n    out.writeInt(numExcludedNodes);\n    out.writeLong(ttExpiryInterval);\n    out.writeInt(map_tasks);\n    out.writeInt(reduce_tasks);\n    out.writeInt(max_map_tasks);\n    out.writeInt(max_reduce_tasks);\n    WritableUtils.writeEnum(out, status);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/ClusterStatus.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/ClusterStatus.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/ClusterStatus.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void write(DataOutput out) throws IOException {\n    if (activeTrackers.size() \u003d\u003d 0) {\n      out.writeInt(numActiveTrackers);\n      out.writeInt(0);\n    } else {\n      out.writeInt(activeTrackers.size());\n      out.writeInt(activeTrackers.size());\n      for (String tracker : activeTrackers) {\n        Text.writeString(out, tracker);\n      }\n    }\n    if (blacklistedTrackersInfo.size() \u003d\u003d 0) {\n      out.writeInt(numBlacklistedTrackers);\n      out.writeInt(blacklistedTrackersInfo.size());\n    } else {\n      out.writeInt(blacklistedTrackersInfo.size());\n      out.writeInt(blacklistedTrackersInfo.size());\n      for (BlackListInfo tracker : blacklistedTrackersInfo) {\n        tracker.write(out);\n      }\n    }\n    out.writeInt(numExcludedNodes);\n    out.writeLong(ttExpiryInterval);\n    out.writeInt(map_tasks);\n    out.writeInt(reduce_tasks);\n    out.writeInt(max_map_tasks);\n    out.writeInt(max_reduce_tasks);\n    WritableUtils.writeEnum(out, status);\n  }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/ClusterStatus.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/java/org/apache/hadoop/mapred/ClusterStatus.java",
        "newPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/ClusterStatus.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,29 @@\n+  public void write(DataOutput out) throws IOException {\n+    if (activeTrackers.size() \u003d\u003d 0) {\n+      out.writeInt(numActiveTrackers);\n+      out.writeInt(0);\n+    } else {\n+      out.writeInt(activeTrackers.size());\n+      out.writeInt(activeTrackers.size());\n+      for (String tracker : activeTrackers) {\n+        Text.writeString(out, tracker);\n+      }\n+    }\n+    if (blacklistedTrackersInfo.size() \u003d\u003d 0) {\n+      out.writeInt(numBlacklistedTrackers);\n+      out.writeInt(blacklistedTrackersInfo.size());\n+    } else {\n+      out.writeInt(blacklistedTrackersInfo.size());\n+      out.writeInt(blacklistedTrackersInfo.size());\n+      for (BlackListInfo tracker : blacklistedTrackersInfo) {\n+        tracker.write(out);\n+      }\n+    }\n+    out.writeInt(numExcludedNodes);\n+    out.writeLong(ttExpiryInterval);\n+    out.writeInt(map_tasks);\n+    out.writeInt(reduce_tasks);\n+    out.writeInt(max_map_tasks);\n+    out.writeInt(max_reduce_tasks);\n+    WritableUtils.writeEnum(out, status);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void write(DataOutput out) throws IOException {\n    if (activeTrackers.size() \u003d\u003d 0) {\n      out.writeInt(numActiveTrackers);\n      out.writeInt(0);\n    } else {\n      out.writeInt(activeTrackers.size());\n      out.writeInt(activeTrackers.size());\n      for (String tracker : activeTrackers) {\n        Text.writeString(out, tracker);\n      }\n    }\n    if (blacklistedTrackersInfo.size() \u003d\u003d 0) {\n      out.writeInt(numBlacklistedTrackers);\n      out.writeInt(blacklistedTrackersInfo.size());\n    } else {\n      out.writeInt(blacklistedTrackersInfo.size());\n      out.writeInt(blacklistedTrackersInfo.size());\n      for (BlackListInfo tracker : blacklistedTrackersInfo) {\n        tracker.write(out);\n      }\n    }\n    out.writeInt(numExcludedNodes);\n    out.writeLong(ttExpiryInterval);\n    out.writeInt(map_tasks);\n    out.writeInt(reduce_tasks);\n    out.writeInt(max_map_tasks);\n    out.writeInt(max_reduce_tasks);\n    WritableUtils.writeEnum(out, status);\n  }",
      "path": "mapreduce/src/java/org/apache/hadoop/mapred/ClusterStatus.java"
    }
  }
}