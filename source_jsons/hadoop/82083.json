{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HostsFileReader.java",
  "functionName": "getHostDetails",
  "functionId": "getHostDetails___includes-Set__String____excludes-Set__String__",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/HostsFileReader.java",
  "functionStartLine": 279,
  "functionEndLine": 283,
  "numCommitsSeen": 16,
  "timeTaken": 1386,
  "changeHistory": [
    "d87a63a9019d74a1c338c724e050952843a153e5",
    "0da69c324dee9baab0f0b9700db1cc5b623f8421",
    "feb90ffcca536e7deac50976b8a8774450fe089f"
  ],
  "changeHistoryShort": {
    "d87a63a9019d74a1c338c724e050952843a153e5": "Ybodychange",
    "0da69c324dee9baab0f0b9700db1cc5b623f8421": "Ybodychange",
    "feb90ffcca536e7deac50976b8a8774450fe089f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d87a63a9019d74a1c338c724e050952843a153e5": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14412. HostsFileReader#getHostDetails is very expensive on large clusters. Contributed by Jason Lowe.\n",
      "commitDate": "16/05/17 7:57 PM",
      "commitName": "d87a63a9019d74a1c338c724e050952843a153e5",
      "commitAuthor": "Rohith Sharma K S",
      "commitDateOld": "18/08/16 7:27 AM",
      "commitNameOld": "0da69c324dee9baab0f0b9700db1cc5b623f8421",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 271.52,
      "commitsBetweenForRepo": 1655,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,5 @@\n   public void getHostDetails(Set\u003cString\u003e includes, Set\u003cString\u003e excludes) {\n-    this.readLock.lock();\n-    try {\n-      includes.addAll(this.includes);\n-      excludes.addAll(this.excludes.keySet());\n-    } finally {\n-      this.readLock.unlock();\n-    }\n+    HostDetails hostDetails \u003d current.get();\n+    includes.addAll(hostDetails.getIncludedHosts());\n+    excludes.addAll(hostDetails.getExcludedHosts());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void getHostDetails(Set\u003cString\u003e includes, Set\u003cString\u003e excludes) {\n    HostDetails hostDetails \u003d current.get();\n    includes.addAll(hostDetails.getIncludedHosts());\n    excludes.addAll(hostDetails.getExcludedHosts());\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/HostsFileReader.java",
      "extendedDetails": {}
    },
    "0da69c324dee9baab0f0b9700db1cc5b623f8421": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4676. Automatic and Asynchronous Decommissioning Nodes Status Tracking. Contributed by Diniel Zhi.\n(cherry picked from commit d464483bf7f0b3e3be3ba32cd6c3eee546747ab5)\n\nConflicts:\n\n\thadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceTrackerService.java\n\thadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmnode/RMNode.java\n\thadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmnode/RMNodeImpl.java\n",
      "commitDate": "18/08/16 7:27 AM",
      "commitName": "0da69c324dee9baab0f0b9700db1cc5b623f8421",
      "commitAuthor": "Junping Du",
      "commitDateOld": "01/08/16 1:35 AM",
      "commitNameOld": "770b5eb2db686275df445be9280e76cc3710ffdc",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 17.24,
      "commitsBetweenForRepo": 137,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n   public void getHostDetails(Set\u003cString\u003e includes, Set\u003cString\u003e excludes) {\n     this.readLock.lock();\n     try {\n       includes.addAll(this.includes);\n-      excludes.addAll(this.excludes);\n+      excludes.addAll(this.excludes.keySet());\n     } finally {\n       this.readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void getHostDetails(Set\u003cString\u003e includes, Set\u003cString\u003e excludes) {\n    this.readLock.lock();\n    try {\n      includes.addAll(this.includes);\n      excludes.addAll(this.excludes.keySet());\n    } finally {\n      this.readLock.unlock();\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/HostsFileReader.java",
      "extendedDetails": {}
    },
    "feb90ffcca536e7deac50976b8a8774450fe089f": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4002. Make ResourceTrackerService#nodeHeartbeat more concurrent. Contributed by Rohith Sharma K S \u0026 Zhiguo Hong\n",
      "commitDate": "19/05/16 1:01 PM",
      "commitName": "feb90ffcca536e7deac50976b8a8774450fe089f",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,9 @@\n+  public void getHostDetails(Set\u003cString\u003e includes, Set\u003cString\u003e excludes) {\n+    this.readLock.lock();\n+    try {\n+      includes.addAll(this.includes);\n+      excludes.addAll(this.excludes);\n+    } finally {\n+      this.readLock.unlock();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void getHostDetails(Set\u003cString\u003e includes, Set\u003cString\u003e excludes) {\n    this.readLock.lock();\n    try {\n      includes.addAll(this.includes);\n      excludes.addAll(this.excludes);\n    } finally {\n      this.readLock.unlock();\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/HostsFileReader.java"
    }
  }
}