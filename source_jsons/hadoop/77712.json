{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Text.java",
  "functionName": "writeString",
  "functionId": "writeString___out-DataOutput__s-String__maxLength-int",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/Text.java",
  "functionStartLine": 503,
  "functionEndLine": 515,
  "numCommitsSeen": 16,
  "timeTaken": 912,
  "changeHistory": [
    "0199fe97636625da5f33b01c376df0f656c6843f",
    "032216a3a79ddec3298eccd2e37d95af1c144b38"
  ],
  "changeHistoryShort": {
    "0199fe97636625da5f33b01c376df0f656c6843f": "Ybodychange",
    "032216a3a79ddec3298eccd2e37d95af1c144b38": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0199fe97636625da5f33b01c376df0f656c6843f": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-8507. Avoid OOM while deserializing DelegationTokenIdentifer. Contributed by Colin Patrick McCabe\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1349561 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/12 3:10 PM",
      "commitName": "0199fe97636625da5f33b01c376df0f656c6843f",
      "commitAuthor": "Eli Collins",
      "commitDateOld": "24/05/12 11:38 PM",
      "commitNameOld": "e62a76a40cb7a0d008bdc324cc3b096b0796295d",
      "commitAuthorOld": "Harsh J",
      "daysBetweenCommits": 18.65,
      "commitsBetweenForRepo": 84,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n   public static int writeString(DataOutput out, String s, int maxLength)\n       throws IOException {\n     ByteBuffer bytes \u003d encode(s);\n     int length \u003d bytes.limit();\n-    if (length \u003e\u003d maxLength) {\n+    if (length \u003e maxLength) {\n       throw new IOException(\"string was too long to write!  Expected \" +\n-          \"less than \" + maxLength + \" bytes, but got \" +\n+          \"less than or equal to \" + maxLength + \" bytes, but got \" +\n           length + \" bytes.\");\n     }\n     WritableUtils.writeVInt(out, length);\n     out.write(bytes.array(), 0, length);\n     return length;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static int writeString(DataOutput out, String s, int maxLength)\n      throws IOException {\n    ByteBuffer bytes \u003d encode(s);\n    int length \u003d bytes.limit();\n    if (length \u003e maxLength) {\n      throw new IOException(\"string was too long to write!  Expected \" +\n          \"less than or equal to \" + maxLength + \" bytes, but got \" +\n          length + \" bytes.\");\n    }\n    WritableUtils.writeVInt(out, length);\n    out.write(bytes.array(), 0, length);\n    return length;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/Text.java",
      "extendedDetails": {}
    },
    "032216a3a79ddec3298eccd2e37d95af1c144b38": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-8361. Avoid out-of-memory problems when deserializing strings. Contributed by Colin Patrick McCabe\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1336945 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/05/12 4:15 PM",
      "commitName": "032216a3a79ddec3298eccd2e37d95af1c144b38",
      "commitAuthor": "Eli Collins",
      "diff": "@@ -0,0 +1,13 @@\n+  public static int writeString(DataOutput out, String s, int maxLength)\n+      throws IOException {\n+    ByteBuffer bytes \u003d encode(s);\n+    int length \u003d bytes.limit();\n+    if (length \u003e\u003d maxLength) {\n+      throw new IOException(\"string was too long to write!  Expected \" +\n+          \"less than \" + maxLength + \" bytes, but got \" +\n+          length + \" bytes.\");\n+    }\n+    WritableUtils.writeVInt(out, length);\n+    out.write(bytes.array(), 0, length);\n+    return length;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static int writeString(DataOutput out, String s, int maxLength)\n      throws IOException {\n    ByteBuffer bytes \u003d encode(s);\n    int length \u003d bytes.limit();\n    if (length \u003e\u003d maxLength) {\n      throw new IOException(\"string was too long to write!  Expected \" +\n          \"less than \" + maxLength + \" bytes, but got \" +\n          length + \" bytes.\");\n    }\n    WritableUtils.writeVInt(out, length);\n    out.write(bytes.array(), 0, length);\n    return length;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/Text.java"
    }
  }
}