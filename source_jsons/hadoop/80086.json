{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PermissionParser.java",
  "functionName": "applyOctalPattern",
  "functionId": "applyOctalPattern___matcher-Matcher(modifiers-final)",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/permission/PermissionParser.java",
  "functionStartLine": 152,
  "functionEndLine": 173,
  "numCommitsSeen": 9,
  "timeTaken": 2646,
  "changeHistory": [
    "a3d0cba81071977ffc22a42f60b2ca07da25ae15",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "cdbb724edbe093a02d4e2c24523001dcdff0ffd5",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36"
  ],
  "changeHistoryShort": {
    "a3d0cba81071977ffc22a42f60b2ca07da25ae15": "Ymultichange(Yparameterchange,Ybodychange,Yparametermetachange)",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "cdbb724edbe093a02d4e2c24523001dcdff0ffd5": "Ymovefromfile",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a3d0cba81071977ffc22a42f60b2ca07da25ae15": {
      "type": "Ymultichange(Yparameterchange,Ybodychange,Yparametermetachange)",
      "commitMessage": "HDFS-10689.  Hdfs dfs chmod should reset sticky bit permission when the bit is omitted in the octal mode. (Manoj Govindassamy via Lei Xu)\n",
      "commitDate": "28/07/16 1:52 PM",
      "commitName": "a3d0cba81071977ffc22a42f60b2ca07da25ae15",
      "commitAuthor": "Lei Xu",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-10689.  Hdfs dfs chmod should reset sticky bit permission when the bit is omitted in the octal mode. (Manoj Govindassamy via Lei Xu)\n",
          "commitDate": "28/07/16 1:52 PM",
          "commitName": "a3d0cba81071977ffc22a42f60b2ca07da25ae15",
          "commitAuthor": "Lei Xu",
          "commitDateOld": "24/08/11 5:14 PM",
          "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 1799.86,
          "commitsBetweenForRepo": 12716,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,22 @@\n-  private void applyOctalPattern(String modeStr, Matcher matcher) {\n-    userType \u003d groupType \u003d othersType \u003d \u0027\u003d\u0027;\n+  private void applyOctalPattern(final Matcher matcher) {\n+    // Matcher groups: 1: [01]  2: [0-7]{3}\n+    final char typeApply \u003d \u0027\u003d\u0027;\n+    stickyBitType \u003d typeApply;\n+    userType \u003d typeApply;\n+    groupType \u003d typeApply;\n+    othersType \u003d typeApply;\n \n-    // Check if sticky bit is specified\n+    // If sticky bit is specified get the bit, else\n+    // default to reset for apply condition\n     String sb \u003d matcher.group(1);\n     if (!sb.isEmpty()) {\n       stickyMode \u003d Short.valueOf(sb.substring(0, 1));\n-      stickyBitType \u003d \u0027\u003d\u0027;\n+    } else {\n+      stickyMode \u003d 0;\n     }\n \n     String str \u003d matcher.group(2);\n     userMode \u003d Short.valueOf(str.substring(0, 1));\n     groupMode \u003d Short.valueOf(str.substring(1, 2));\n     othersMode \u003d Short.valueOf(str.substring(2, 3));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void applyOctalPattern(final Matcher matcher) {\n    // Matcher groups: 1: [01]  2: [0-7]{3}\n    final char typeApply \u003d \u0027\u003d\u0027;\n    stickyBitType \u003d typeApply;\n    userType \u003d typeApply;\n    groupType \u003d typeApply;\n    othersType \u003d typeApply;\n\n    // If sticky bit is specified get the bit, else\n    // default to reset for apply condition\n    String sb \u003d matcher.group(1);\n    if (!sb.isEmpty()) {\n      stickyMode \u003d Short.valueOf(sb.substring(0, 1));\n    } else {\n      stickyMode \u003d 0;\n    }\n\n    String str \u003d matcher.group(2);\n    userMode \u003d Short.valueOf(str.substring(0, 1));\n    groupMode \u003d Short.valueOf(str.substring(1, 2));\n    othersMode \u003d Short.valueOf(str.substring(2, 3));\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/permission/PermissionParser.java",
          "extendedDetails": {
            "oldValue": "[modeStr-String, matcher-Matcher]",
            "newValue": "[matcher-Matcher(modifiers-final)]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-10689.  Hdfs dfs chmod should reset sticky bit permission when the bit is omitted in the octal mode. (Manoj Govindassamy via Lei Xu)\n",
          "commitDate": "28/07/16 1:52 PM",
          "commitName": "a3d0cba81071977ffc22a42f60b2ca07da25ae15",
          "commitAuthor": "Lei Xu",
          "commitDateOld": "24/08/11 5:14 PM",
          "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 1799.86,
          "commitsBetweenForRepo": 12716,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,22 @@\n-  private void applyOctalPattern(String modeStr, Matcher matcher) {\n-    userType \u003d groupType \u003d othersType \u003d \u0027\u003d\u0027;\n+  private void applyOctalPattern(final Matcher matcher) {\n+    // Matcher groups: 1: [01]  2: [0-7]{3}\n+    final char typeApply \u003d \u0027\u003d\u0027;\n+    stickyBitType \u003d typeApply;\n+    userType \u003d typeApply;\n+    groupType \u003d typeApply;\n+    othersType \u003d typeApply;\n \n-    // Check if sticky bit is specified\n+    // If sticky bit is specified get the bit, else\n+    // default to reset for apply condition\n     String sb \u003d matcher.group(1);\n     if (!sb.isEmpty()) {\n       stickyMode \u003d Short.valueOf(sb.substring(0, 1));\n-      stickyBitType \u003d \u0027\u003d\u0027;\n+    } else {\n+      stickyMode \u003d 0;\n     }\n \n     String str \u003d matcher.group(2);\n     userMode \u003d Short.valueOf(str.substring(0, 1));\n     groupMode \u003d Short.valueOf(str.substring(1, 2));\n     othersMode \u003d Short.valueOf(str.substring(2, 3));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void applyOctalPattern(final Matcher matcher) {\n    // Matcher groups: 1: [01]  2: [0-7]{3}\n    final char typeApply \u003d \u0027\u003d\u0027;\n    stickyBitType \u003d typeApply;\n    userType \u003d typeApply;\n    groupType \u003d typeApply;\n    othersType \u003d typeApply;\n\n    // If sticky bit is specified get the bit, else\n    // default to reset for apply condition\n    String sb \u003d matcher.group(1);\n    if (!sb.isEmpty()) {\n      stickyMode \u003d Short.valueOf(sb.substring(0, 1));\n    } else {\n      stickyMode \u003d 0;\n    }\n\n    String str \u003d matcher.group(2);\n    userMode \u003d Short.valueOf(str.substring(0, 1));\n    groupMode \u003d Short.valueOf(str.substring(1, 2));\n    othersMode \u003d Short.valueOf(str.substring(2, 3));\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/permission/PermissionParser.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparametermetachange",
          "commitMessage": "HDFS-10689.  Hdfs dfs chmod should reset sticky bit permission when the bit is omitted in the octal mode. (Manoj Govindassamy via Lei Xu)\n",
          "commitDate": "28/07/16 1:52 PM",
          "commitName": "a3d0cba81071977ffc22a42f60b2ca07da25ae15",
          "commitAuthor": "Lei Xu",
          "commitDateOld": "24/08/11 5:14 PM",
          "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 1799.86,
          "commitsBetweenForRepo": 12716,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,22 @@\n-  private void applyOctalPattern(String modeStr, Matcher matcher) {\n-    userType \u003d groupType \u003d othersType \u003d \u0027\u003d\u0027;\n+  private void applyOctalPattern(final Matcher matcher) {\n+    // Matcher groups: 1: [01]  2: [0-7]{3}\n+    final char typeApply \u003d \u0027\u003d\u0027;\n+    stickyBitType \u003d typeApply;\n+    userType \u003d typeApply;\n+    groupType \u003d typeApply;\n+    othersType \u003d typeApply;\n \n-    // Check if sticky bit is specified\n+    // If sticky bit is specified get the bit, else\n+    // default to reset for apply condition\n     String sb \u003d matcher.group(1);\n     if (!sb.isEmpty()) {\n       stickyMode \u003d Short.valueOf(sb.substring(0, 1));\n-      stickyBitType \u003d \u0027\u003d\u0027;\n+    } else {\n+      stickyMode \u003d 0;\n     }\n \n     String str \u003d matcher.group(2);\n     userMode \u003d Short.valueOf(str.substring(0, 1));\n     groupMode \u003d Short.valueOf(str.substring(1, 2));\n     othersMode \u003d Short.valueOf(str.substring(2, 3));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void applyOctalPattern(final Matcher matcher) {\n    // Matcher groups: 1: [01]  2: [0-7]{3}\n    final char typeApply \u003d \u0027\u003d\u0027;\n    stickyBitType \u003d typeApply;\n    userType \u003d typeApply;\n    groupType \u003d typeApply;\n    othersType \u003d typeApply;\n\n    // If sticky bit is specified get the bit, else\n    // default to reset for apply condition\n    String sb \u003d matcher.group(1);\n    if (!sb.isEmpty()) {\n      stickyMode \u003d Short.valueOf(sb.substring(0, 1));\n    } else {\n      stickyMode \u003d 0;\n    }\n\n    String str \u003d matcher.group(2);\n    userMode \u003d Short.valueOf(str.substring(0, 1));\n    groupMode \u003d Short.valueOf(str.substring(1, 2));\n    othersMode \u003d Short.valueOf(str.substring(2, 3));\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/permission/PermissionParser.java",
          "extendedDetails": {
            "oldValue": "[modeStr-String, matcher-Matcher]",
            "newValue": "[matcher-Matcher(modifiers-final)]"
          }
        }
      ]
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void applyOctalPattern(String modeStr, Matcher matcher) {\n    userType \u003d groupType \u003d othersType \u003d \u0027\u003d\u0027;\n\n    // Check if sticky bit is specified\n    String sb \u003d matcher.group(1);\n    if (!sb.isEmpty()) {\n      stickyMode \u003d Short.valueOf(sb.substring(0, 1));\n      stickyBitType \u003d \u0027\u003d\u0027;\n    }\n\n    String str \u003d matcher.group(2);\n    userMode \u003d Short.valueOf(str.substring(0, 1));\n    groupMode \u003d Short.valueOf(str.substring(1, 2));\n    othersMode \u003d Short.valueOf(str.substring(2, 3));\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/permission/PermissionParser.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/permission/PermissionParser.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/permission/PermissionParser.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void applyOctalPattern(String modeStr, Matcher matcher) {\n    userType \u003d groupType \u003d othersType \u003d \u0027\u003d\u0027;\n\n    // Check if sticky bit is specified\n    String sb \u003d matcher.group(1);\n    if (!sb.isEmpty()) {\n      stickyMode \u003d Short.valueOf(sb.substring(0, 1));\n      stickyBitType \u003d \u0027\u003d\u0027;\n    }\n\n    String str \u003d matcher.group(2);\n    userMode \u003d Short.valueOf(str.substring(0, 1));\n    groupMode \u003d Short.valueOf(str.substring(1, 2));\n    othersMode \u003d Short.valueOf(str.substring(2, 3));\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/fs/permission/PermissionParser.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/fs/permission/PermissionParser.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/permission/PermissionParser.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void applyOctalPattern(String modeStr, Matcher matcher) {\n    userType \u003d groupType \u003d othersType \u003d \u0027\u003d\u0027;\n\n    // Check if sticky bit is specified\n    String sb \u003d matcher.group(1);\n    if (!sb.isEmpty()) {\n      stickyMode \u003d Short.valueOf(sb.substring(0, 1));\n      stickyBitType \u003d \u0027\u003d\u0027;\n    }\n\n    String str \u003d matcher.group(2);\n    userMode \u003d Short.valueOf(str.substring(0, 1));\n    groupMode \u003d Short.valueOf(str.substring(1, 2));\n    othersMode \u003d Short.valueOf(str.substring(2, 3));\n  }",
      "path": "common/src/java/org/apache/hadoop/fs/permission/PermissionParser.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/fs/permission/PermissionParser.java",
        "newPath": "common/src/java/org/apache/hadoop/fs/permission/PermissionParser.java"
      }
    },
    "cdbb724edbe093a02d4e2c24523001dcdff0ffd5": {
      "type": "Ymovefromfile",
      "commitMessage": "HADOOP-6234. Add new option dfs.umaskmode to set umask in configuration to use octal or symbolic instead of decimal. Contributed by Jakob Homan.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@812652 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/09/09 12:08 PM",
      "commitName": "cdbb724edbe093a02d4e2c24523001dcdff0ffd5",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "08/09/09 10:54 AM",
      "commitNameOld": "3f384b42d2272ffed8e71409505f391cdbf1ec64",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 0.05,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n-    private void applyOctalPattern(String modeStr, Matcher matcher) {\n-      userType \u003d groupType \u003d othersType \u003d \u0027\u003d\u0027;\n+  private void applyOctalPattern(String modeStr, Matcher matcher) {\n+    userType \u003d groupType \u003d othersType \u003d \u0027\u003d\u0027;\n \n-      // Check if sticky bit is specified\n-      String sb \u003d matcher.group(1);\n-      if(!sb.isEmpty()) {\n-        stickyMode \u003d Short.valueOf(sb.substring(0, 1));\n-        stickyBitType \u003d \u0027\u003d\u0027;\n-      }\n+    // Check if sticky bit is specified\n+    String sb \u003d matcher.group(1);\n+    if (!sb.isEmpty()) {\n+      stickyMode \u003d Short.valueOf(sb.substring(0, 1));\n+      stickyBitType \u003d \u0027\u003d\u0027;\n+    }\n \n-      String str \u003d matcher.group(2);\n-      userMode \u003d Short.valueOf(str.substring(0, 1));\n-      groupMode \u003d Short.valueOf(str.substring(1, 2));\n-      othersMode \u003d Short.valueOf(str.substring(2, 3));      \n-    }\n\\ No newline at end of file\n+    String str \u003d matcher.group(2);\n+    userMode \u003d Short.valueOf(str.substring(0, 1));\n+    groupMode \u003d Short.valueOf(str.substring(1, 2));\n+    othersMode \u003d Short.valueOf(str.substring(2, 3));\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void applyOctalPattern(String modeStr, Matcher matcher) {\n    userType \u003d groupType \u003d othersType \u003d \u0027\u003d\u0027;\n\n    // Check if sticky bit is specified\n    String sb \u003d matcher.group(1);\n    if (!sb.isEmpty()) {\n      stickyMode \u003d Short.valueOf(sb.substring(0, 1));\n      stickyBitType \u003d \u0027\u003d\u0027;\n    }\n\n    String str \u003d matcher.group(2);\n    userMode \u003d Short.valueOf(str.substring(0, 1));\n    groupMode \u003d Short.valueOf(str.substring(1, 2));\n    othersMode \u003d Short.valueOf(str.substring(2, 3));\n  }",
      "path": "src/java/org/apache/hadoop/fs/permission/PermissionParser.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/fs/FsShellPermissions.java",
        "newPath": "src/java/org/apache/hadoop/fs/permission/PermissionParser.java",
        "oldMethodName": "applyOctalPattern",
        "newMethodName": "applyOctalPattern"
      }
    },
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-4687 Moving src directories on branch\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/core/branches/HADOOP-4687/core@776174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/05/09 9:20 PM",
      "commitName": "5128a9a453d64bfe1ed978cf9ffed27985eeef36",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,15 @@\n+    private void applyOctalPattern(String modeStr, Matcher matcher) {\n+      userType \u003d groupType \u003d othersType \u003d \u0027\u003d\u0027;\n+\n+      // Check if sticky bit is specified\n+      String sb \u003d matcher.group(1);\n+      if(!sb.isEmpty()) {\n+        stickyMode \u003d Short.valueOf(sb.substring(0, 1));\n+        stickyBitType \u003d \u0027\u003d\u0027;\n+      }\n+\n+      String str \u003d matcher.group(2);\n+      userMode \u003d Short.valueOf(str.substring(0, 1));\n+      groupMode \u003d Short.valueOf(str.substring(1, 2));\n+      othersMode \u003d Short.valueOf(str.substring(2, 3));      \n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private void applyOctalPattern(String modeStr, Matcher matcher) {\n      userType \u003d groupType \u003d othersType \u003d \u0027\u003d\u0027;\n\n      // Check if sticky bit is specified\n      String sb \u003d matcher.group(1);\n      if(!sb.isEmpty()) {\n        stickyMode \u003d Short.valueOf(sb.substring(0, 1));\n        stickyBitType \u003d \u0027\u003d\u0027;\n      }\n\n      String str \u003d matcher.group(2);\n      userMode \u003d Short.valueOf(str.substring(0, 1));\n      groupMode \u003d Short.valueOf(str.substring(1, 2));\n      othersMode \u003d Short.valueOf(str.substring(2, 3));      \n    }",
      "path": "src/java/org/apache/hadoop/fs/FsShellPermissions.java"
    }
  }
}