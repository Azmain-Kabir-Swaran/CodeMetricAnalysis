{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BlockInfoContiguous.java",
  "functionName": "ensureCapacity",
  "functionId": "ensureCapacity___num-int",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockInfoContiguous.java",
  "functionStartLine": 44,
  "functionEndLine": 56,
  "numCommitsSeen": 109,
  "timeTaken": 11108,
  "changeHistory": [
    "dd9ebf6eedfd4ff8b3486eae2a446de6b0c7fa8a",
    "f4c523b69ba55b1fd35e8995c3011a9f546ac835",
    "c17439c2ddd921b63b1635e6f1cba634b8da8557",
    "cdc13efb1af54d931585d25c5ba696a012412828",
    "4928f5473394981829e5ffd4b16ea0801baf5c45",
    "1382ae525c67bf95d8f3a436b547dbc72cfbb177",
    "8e8203f3c5a49ed85a81d53c50a78a2d7f4edef3",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "09b6f98de431628c80bc8a6faf0070eeaf72ff2a",
    "97b6ca4dd7d1233e8f8c90b1c01e47228c044e13",
    "1bcfe45e47775b98cce5541f328c4fd46e5eb13d",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "dd9ebf6eedfd4ff8b3486eae2a446de6b0c7fa8a": "Ybodychange",
    "f4c523b69ba55b1fd35e8995c3011a9f546ac835": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yparameterchange)",
    "c17439c2ddd921b63b1635e6f1cba634b8da8557": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yparameterchange)",
    "cdc13efb1af54d931585d25c5ba696a012412828": "Ymultichange(Ymovefromfile,Ybodychange)",
    "4928f5473394981829e5ffd4b16ea0801baf5c45": "Ymultichange(Yfilerename,Ybodychange)",
    "1382ae525c67bf95d8f3a436b547dbc72cfbb177": "Yfilerename",
    "8e8203f3c5a49ed85a81d53c50a78a2d7f4edef3": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "09b6f98de431628c80bc8a6faf0070eeaf72ff2a": "Yfilerename",
    "97b6ca4dd7d1233e8f8c90b1c01e47228c044e13": "Yfilerename",
    "1bcfe45e47775b98cce5541f328c4fd46e5eb13d": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "dd9ebf6eedfd4ff8b3486eae2a446de6b0c7fa8a": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9260. Improve the performance and GC friendliness of NameNode startup and full block reports (Staffan Friberg via cmccabe)\n",
      "commitDate": "02/02/16 11:23 AM",
      "commitName": "dd9ebf6eedfd4ff8b3486eae2a446de6b0c7fa8a",
      "commitAuthor": "Colin Patrick Mccabe",
      "commitDateOld": "01/09/15 2:48 PM",
      "commitNameOld": "53358fe680a11c1b66a7f60733d11c1f4efe0232",
      "commitAuthorOld": "",
      "daysBetweenCommits": 153.9,
      "commitsBetweenForRepo": 1065,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n   private int ensureCapacity(int num) {\n-    assert this.triplets !\u003d null : \"BlockInfo is not initialized\";\n+    assert this.storages !\u003d null : \"BlockInfo is not initialized\";\n     int last \u003d numNodes();\n-    if (triplets.length \u003e\u003d (last+num)*3) {\n+    if (storages.length \u003e\u003d (last+num)) {\n       return last;\n     }\n     /* Not enough space left. Create a new array. Should normally\n      * happen only when replication is manually increased by the user. */\n-    Object[] old \u003d triplets;\n-    triplets \u003d new Object[(last+num)*3];\n-    System.arraycopy(old, 0, triplets, 0, last * 3);\n+    DatanodeStorageInfo[] old \u003d storages;\n+    storages \u003d new DatanodeStorageInfo[(last+num)];\n+    System.arraycopy(old, 0, storages, 0, last);\n     return last;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private int ensureCapacity(int num) {\n    assert this.storages !\u003d null : \"BlockInfo is not initialized\";\n    int last \u003d numNodes();\n    if (storages.length \u003e\u003d (last+num)) {\n      return last;\n    }\n    /* Not enough space left. Create a new array. Should normally\n     * happen only when replication is manually increased by the user. */\n    DatanodeStorageInfo[] old \u003d storages;\n    storages \u003d new DatanodeStorageInfo[(last+num)];\n    System.arraycopy(old, 0, storages, 0, last);\n    return last;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockInfoContiguous.java",
      "extendedDetails": {}
    },
    "f4c523b69ba55b1fd35e8995c3011a9f546ac835": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yparameterchange)",
      "commitMessage": "Revert \"HDFS-8499. Refactor BlockInfo class hierarchy with static helper class. Contributed by Zhe Zhang.\"\n\nThis reverts commit c17439c2ddd921b63b1635e6f1cba634b8da8557.\n",
      "commitDate": "06/08/15 10:21 AM",
      "commitName": "f4c523b69ba55b1fd35e8995c3011a9f546ac835",
      "commitAuthor": "Jing Zhao",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "Revert \"HDFS-8499. Refactor BlockInfo class hierarchy with static helper class. Contributed by Zhe Zhang.\"\n\nThis reverts commit c17439c2ddd921b63b1635e6f1cba634b8da8557.\n",
          "commitDate": "06/08/15 10:21 AM",
          "commitName": "f4c523b69ba55b1fd35e8995c3011a9f546ac835",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "06/08/15 10:21 AM",
          "commitNameOld": "663eba0ab1c73b45f98e46ffc87ad8fd91584046",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,13 @@\n-  private static int ensureCapacity(BlockInfo b, int num) {\n-    Preconditions.checkArgument(b.triplets !\u003d null,\n-        \"BlockInfo is not initialized\");\n-    int last \u003d b.numNodes();\n-    if (b.triplets.length \u003e\u003d (last+num)*3) {\n+  private int ensureCapacity(int num) {\n+    assert this.triplets !\u003d null : \"BlockInfo is not initialized\";\n+    int last \u003d numNodes();\n+    if (triplets.length \u003e\u003d (last+num)*3) {\n       return last;\n     }\n     /* Not enough space left. Create a new array. Should normally\n      * happen only when replication is manually increased by the user. */\n-    Object[] old \u003d b.triplets;\n-    b.triplets \u003d new Object[(last+num)*3];\n-    System.arraycopy(old, 0, b.triplets, 0, last * 3);\n+    Object[] old \u003d triplets;\n+    triplets \u003d new Object[(last+num)*3];\n+    System.arraycopy(old, 0, triplets, 0, last * 3);\n     return last;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private int ensureCapacity(int num) {\n    assert this.triplets !\u003d null : \"BlockInfo is not initialized\";\n    int last \u003d numNodes();\n    if (triplets.length \u003e\u003d (last+num)*3) {\n      return last;\n    }\n    /* Not enough space left. Create a new array. Should normally\n     * happen only when replication is manually increased by the user. */\n    Object[] old \u003d triplets;\n    triplets \u003d new Object[(last+num)*3];\n    System.arraycopy(old, 0, triplets, 0, last * 3);\n    return last;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockInfoContiguous.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/ContiguousBlockStorageOp.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockInfoContiguous.java",
            "oldMethodName": "ensureCapacity",
            "newMethodName": "ensureCapacity"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "Revert \"HDFS-8499. Refactor BlockInfo class hierarchy with static helper class. Contributed by Zhe Zhang.\"\n\nThis reverts commit c17439c2ddd921b63b1635e6f1cba634b8da8557.\n",
          "commitDate": "06/08/15 10:21 AM",
          "commitName": "f4c523b69ba55b1fd35e8995c3011a9f546ac835",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "06/08/15 10:21 AM",
          "commitNameOld": "663eba0ab1c73b45f98e46ffc87ad8fd91584046",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,13 @@\n-  private static int ensureCapacity(BlockInfo b, int num) {\n-    Preconditions.checkArgument(b.triplets !\u003d null,\n-        \"BlockInfo is not initialized\");\n-    int last \u003d b.numNodes();\n-    if (b.triplets.length \u003e\u003d (last+num)*3) {\n+  private int ensureCapacity(int num) {\n+    assert this.triplets !\u003d null : \"BlockInfo is not initialized\";\n+    int last \u003d numNodes();\n+    if (triplets.length \u003e\u003d (last+num)*3) {\n       return last;\n     }\n     /* Not enough space left. Create a new array. Should normally\n      * happen only when replication is manually increased by the user. */\n-    Object[] old \u003d b.triplets;\n-    b.triplets \u003d new Object[(last+num)*3];\n-    System.arraycopy(old, 0, b.triplets, 0, last * 3);\n+    Object[] old \u003d triplets;\n+    triplets \u003d new Object[(last+num)*3];\n+    System.arraycopy(old, 0, triplets, 0, last * 3);\n     return last;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private int ensureCapacity(int num) {\n    assert this.triplets !\u003d null : \"BlockInfo is not initialized\";\n    int last \u003d numNodes();\n    if (triplets.length \u003e\u003d (last+num)*3) {\n      return last;\n    }\n    /* Not enough space left. Create a new array. Should normally\n     * happen only when replication is manually increased by the user. */\n    Object[] old \u003d triplets;\n    triplets \u003d new Object[(last+num)*3];\n    System.arraycopy(old, 0, triplets, 0, last * 3);\n    return last;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockInfoContiguous.java",
          "extendedDetails": {
            "oldValue": "[private, static]",
            "newValue": "[private]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Revert \"HDFS-8499. Refactor BlockInfo class hierarchy with static helper class. Contributed by Zhe Zhang.\"\n\nThis reverts commit c17439c2ddd921b63b1635e6f1cba634b8da8557.\n",
          "commitDate": "06/08/15 10:21 AM",
          "commitName": "f4c523b69ba55b1fd35e8995c3011a9f546ac835",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "06/08/15 10:21 AM",
          "commitNameOld": "663eba0ab1c73b45f98e46ffc87ad8fd91584046",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,13 @@\n-  private static int ensureCapacity(BlockInfo b, int num) {\n-    Preconditions.checkArgument(b.triplets !\u003d null,\n-        \"BlockInfo is not initialized\");\n-    int last \u003d b.numNodes();\n-    if (b.triplets.length \u003e\u003d (last+num)*3) {\n+  private int ensureCapacity(int num) {\n+    assert this.triplets !\u003d null : \"BlockInfo is not initialized\";\n+    int last \u003d numNodes();\n+    if (triplets.length \u003e\u003d (last+num)*3) {\n       return last;\n     }\n     /* Not enough space left. Create a new array. Should normally\n      * happen only when replication is manually increased by the user. */\n-    Object[] old \u003d b.triplets;\n-    b.triplets \u003d new Object[(last+num)*3];\n-    System.arraycopy(old, 0, b.triplets, 0, last * 3);\n+    Object[] old \u003d triplets;\n+    triplets \u003d new Object[(last+num)*3];\n+    System.arraycopy(old, 0, triplets, 0, last * 3);\n     return last;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private int ensureCapacity(int num) {\n    assert this.triplets !\u003d null : \"BlockInfo is not initialized\";\n    int last \u003d numNodes();\n    if (triplets.length \u003e\u003d (last+num)*3) {\n      return last;\n    }\n    /* Not enough space left. Create a new array. Should normally\n     * happen only when replication is manually increased by the user. */\n    Object[] old \u003d triplets;\n    triplets \u003d new Object[(last+num)*3];\n    System.arraycopy(old, 0, triplets, 0, last * 3);\n    return last;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockInfoContiguous.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "Revert \"HDFS-8499. Refactor BlockInfo class hierarchy with static helper class. Contributed by Zhe Zhang.\"\n\nThis reverts commit c17439c2ddd921b63b1635e6f1cba634b8da8557.\n",
          "commitDate": "06/08/15 10:21 AM",
          "commitName": "f4c523b69ba55b1fd35e8995c3011a9f546ac835",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "06/08/15 10:21 AM",
          "commitNameOld": "663eba0ab1c73b45f98e46ffc87ad8fd91584046",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,13 @@\n-  private static int ensureCapacity(BlockInfo b, int num) {\n-    Preconditions.checkArgument(b.triplets !\u003d null,\n-        \"BlockInfo is not initialized\");\n-    int last \u003d b.numNodes();\n-    if (b.triplets.length \u003e\u003d (last+num)*3) {\n+  private int ensureCapacity(int num) {\n+    assert this.triplets !\u003d null : \"BlockInfo is not initialized\";\n+    int last \u003d numNodes();\n+    if (triplets.length \u003e\u003d (last+num)*3) {\n       return last;\n     }\n     /* Not enough space left. Create a new array. Should normally\n      * happen only when replication is manually increased by the user. */\n-    Object[] old \u003d b.triplets;\n-    b.triplets \u003d new Object[(last+num)*3];\n-    System.arraycopy(old, 0, b.triplets, 0, last * 3);\n+    Object[] old \u003d triplets;\n+    triplets \u003d new Object[(last+num)*3];\n+    System.arraycopy(old, 0, triplets, 0, last * 3);\n     return last;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private int ensureCapacity(int num) {\n    assert this.triplets !\u003d null : \"BlockInfo is not initialized\";\n    int last \u003d numNodes();\n    if (triplets.length \u003e\u003d (last+num)*3) {\n      return last;\n    }\n    /* Not enough space left. Create a new array. Should normally\n     * happen only when replication is manually increased by the user. */\n    Object[] old \u003d triplets;\n    triplets \u003d new Object[(last+num)*3];\n    System.arraycopy(old, 0, triplets, 0, last * 3);\n    return last;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockInfoContiguous.java",
          "extendedDetails": {
            "oldValue": "[b-BlockInfo, num-int]",
            "newValue": "[num-int]"
          }
        }
      ]
    },
    "c17439c2ddd921b63b1635e6f1cba634b8da8557": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yparameterchange)",
      "commitMessage": "HDFS-8499. Refactor BlockInfo class hierarchy with static helper class. Contributed by Zhe Zhang.\n",
      "commitDate": "12/06/15 11:38 AM",
      "commitName": "c17439c2ddd921b63b1635e6f1cba634b8da8557",
      "commitAuthor": "Andrew Wang",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-8499. Refactor BlockInfo class hierarchy with static helper class. Contributed by Zhe Zhang.\n",
          "commitDate": "12/06/15 11:38 AM",
          "commitName": "c17439c2ddd921b63b1635e6f1cba634b8da8557",
          "commitAuthor": "Andrew Wang",
          "commitDateOld": "12/06/15 11:28 AM",
          "commitNameOld": "46b0b4179c1ef1a1510eb04e40b11968a24df485",
          "commitAuthorOld": "Colin Patrick Mccabe",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,14 @@\n-  private int ensureCapacity(int num) {\n-    assert this.triplets !\u003d null : \"BlockInfo is not initialized\";\n-    int last \u003d numNodes();\n-    if (triplets.length \u003e\u003d (last+num)*3) {\n+  private static int ensureCapacity(BlockInfo b, int num) {\n+    Preconditions.checkArgument(b.triplets !\u003d null,\n+        \"BlockInfo is not initialized\");\n+    int last \u003d b.numNodes();\n+    if (b.triplets.length \u003e\u003d (last+num)*3) {\n       return last;\n     }\n     /* Not enough space left. Create a new array. Should normally\n      * happen only when replication is manually increased by the user. */\n-    Object[] old \u003d triplets;\n-    triplets \u003d new Object[(last+num)*3];\n-    System.arraycopy(old, 0, triplets, 0, last * 3);\n+    Object[] old \u003d b.triplets;\n+    b.triplets \u003d new Object[(last+num)*3];\n+    System.arraycopy(old, 0, b.triplets, 0, last * 3);\n     return last;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static int ensureCapacity(BlockInfo b, int num) {\n    Preconditions.checkArgument(b.triplets !\u003d null,\n        \"BlockInfo is not initialized\");\n    int last \u003d b.numNodes();\n    if (b.triplets.length \u003e\u003d (last+num)*3) {\n      return last;\n    }\n    /* Not enough space left. Create a new array. Should normally\n     * happen only when replication is manually increased by the user. */\n    Object[] old \u003d b.triplets;\n    b.triplets \u003d new Object[(last+num)*3];\n    System.arraycopy(old, 0, b.triplets, 0, last * 3);\n    return last;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/ContiguousBlockStorageOp.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockInfoContiguous.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/ContiguousBlockStorageOp.java",
            "oldMethodName": "ensureCapacity",
            "newMethodName": "ensureCapacity"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-8499. Refactor BlockInfo class hierarchy with static helper class. Contributed by Zhe Zhang.\n",
          "commitDate": "12/06/15 11:38 AM",
          "commitName": "c17439c2ddd921b63b1635e6f1cba634b8da8557",
          "commitAuthor": "Andrew Wang",
          "commitDateOld": "12/06/15 11:28 AM",
          "commitNameOld": "46b0b4179c1ef1a1510eb04e40b11968a24df485",
          "commitAuthorOld": "Colin Patrick Mccabe",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,14 @@\n-  private int ensureCapacity(int num) {\n-    assert this.triplets !\u003d null : \"BlockInfo is not initialized\";\n-    int last \u003d numNodes();\n-    if (triplets.length \u003e\u003d (last+num)*3) {\n+  private static int ensureCapacity(BlockInfo b, int num) {\n+    Preconditions.checkArgument(b.triplets !\u003d null,\n+        \"BlockInfo is not initialized\");\n+    int last \u003d b.numNodes();\n+    if (b.triplets.length \u003e\u003d (last+num)*3) {\n       return last;\n     }\n     /* Not enough space left. Create a new array. Should normally\n      * happen only when replication is manually increased by the user. */\n-    Object[] old \u003d triplets;\n-    triplets \u003d new Object[(last+num)*3];\n-    System.arraycopy(old, 0, triplets, 0, last * 3);\n+    Object[] old \u003d b.triplets;\n+    b.triplets \u003d new Object[(last+num)*3];\n+    System.arraycopy(old, 0, b.triplets, 0, last * 3);\n     return last;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static int ensureCapacity(BlockInfo b, int num) {\n    Preconditions.checkArgument(b.triplets !\u003d null,\n        \"BlockInfo is not initialized\");\n    int last \u003d b.numNodes();\n    if (b.triplets.length \u003e\u003d (last+num)*3) {\n      return last;\n    }\n    /* Not enough space left. Create a new array. Should normally\n     * happen only when replication is manually increased by the user. */\n    Object[] old \u003d b.triplets;\n    b.triplets \u003d new Object[(last+num)*3];\n    System.arraycopy(old, 0, b.triplets, 0, last * 3);\n    return last;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/ContiguousBlockStorageOp.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[private, static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-8499. Refactor BlockInfo class hierarchy with static helper class. Contributed by Zhe Zhang.\n",
          "commitDate": "12/06/15 11:38 AM",
          "commitName": "c17439c2ddd921b63b1635e6f1cba634b8da8557",
          "commitAuthor": "Andrew Wang",
          "commitDateOld": "12/06/15 11:28 AM",
          "commitNameOld": "46b0b4179c1ef1a1510eb04e40b11968a24df485",
          "commitAuthorOld": "Colin Patrick Mccabe",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,14 @@\n-  private int ensureCapacity(int num) {\n-    assert this.triplets !\u003d null : \"BlockInfo is not initialized\";\n-    int last \u003d numNodes();\n-    if (triplets.length \u003e\u003d (last+num)*3) {\n+  private static int ensureCapacity(BlockInfo b, int num) {\n+    Preconditions.checkArgument(b.triplets !\u003d null,\n+        \"BlockInfo is not initialized\");\n+    int last \u003d b.numNodes();\n+    if (b.triplets.length \u003e\u003d (last+num)*3) {\n       return last;\n     }\n     /* Not enough space left. Create a new array. Should normally\n      * happen only when replication is manually increased by the user. */\n-    Object[] old \u003d triplets;\n-    triplets \u003d new Object[(last+num)*3];\n-    System.arraycopy(old, 0, triplets, 0, last * 3);\n+    Object[] old \u003d b.triplets;\n+    b.triplets \u003d new Object[(last+num)*3];\n+    System.arraycopy(old, 0, b.triplets, 0, last * 3);\n     return last;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static int ensureCapacity(BlockInfo b, int num) {\n    Preconditions.checkArgument(b.triplets !\u003d null,\n        \"BlockInfo is not initialized\");\n    int last \u003d b.numNodes();\n    if (b.triplets.length \u003e\u003d (last+num)*3) {\n      return last;\n    }\n    /* Not enough space left. Create a new array. Should normally\n     * happen only when replication is manually increased by the user. */\n    Object[] old \u003d b.triplets;\n    b.triplets \u003d new Object[(last+num)*3];\n    System.arraycopy(old, 0, b.triplets, 0, last * 3);\n    return last;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/ContiguousBlockStorageOp.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-8499. Refactor BlockInfo class hierarchy with static helper class. Contributed by Zhe Zhang.\n",
          "commitDate": "12/06/15 11:38 AM",
          "commitName": "c17439c2ddd921b63b1635e6f1cba634b8da8557",
          "commitAuthor": "Andrew Wang",
          "commitDateOld": "12/06/15 11:28 AM",
          "commitNameOld": "46b0b4179c1ef1a1510eb04e40b11968a24df485",
          "commitAuthorOld": "Colin Patrick Mccabe",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,14 @@\n-  private int ensureCapacity(int num) {\n-    assert this.triplets !\u003d null : \"BlockInfo is not initialized\";\n-    int last \u003d numNodes();\n-    if (triplets.length \u003e\u003d (last+num)*3) {\n+  private static int ensureCapacity(BlockInfo b, int num) {\n+    Preconditions.checkArgument(b.triplets !\u003d null,\n+        \"BlockInfo is not initialized\");\n+    int last \u003d b.numNodes();\n+    if (b.triplets.length \u003e\u003d (last+num)*3) {\n       return last;\n     }\n     /* Not enough space left. Create a new array. Should normally\n      * happen only when replication is manually increased by the user. */\n-    Object[] old \u003d triplets;\n-    triplets \u003d new Object[(last+num)*3];\n-    System.arraycopy(old, 0, triplets, 0, last * 3);\n+    Object[] old \u003d b.triplets;\n+    b.triplets \u003d new Object[(last+num)*3];\n+    System.arraycopy(old, 0, b.triplets, 0, last * 3);\n     return last;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static int ensureCapacity(BlockInfo b, int num) {\n    Preconditions.checkArgument(b.triplets !\u003d null,\n        \"BlockInfo is not initialized\");\n    int last \u003d b.numNodes();\n    if (b.triplets.length \u003e\u003d (last+num)*3) {\n      return last;\n    }\n    /* Not enough space left. Create a new array. Should normally\n     * happen only when replication is manually increased by the user. */\n    Object[] old \u003d b.triplets;\n    b.triplets \u003d new Object[(last+num)*3];\n    System.arraycopy(old, 0, b.triplets, 0, last * 3);\n    return last;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/ContiguousBlockStorageOp.java",
          "extendedDetails": {
            "oldValue": "[num-int]",
            "newValue": "[b-BlockInfo, num-int]"
          }
        }
      ]
    },
    "cdc13efb1af54d931585d25c5ba696a012412828": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "HDFS-8489. Subclass BlockInfo to represent contiguous blocks. Contributed by Zhe Zhang.\n",
      "commitDate": "01/06/15 11:42 AM",
      "commitName": "cdc13efb1af54d931585d25c5ba696a012412828",
      "commitAuthor": "Jing Zhao",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-8489. Subclass BlockInfo to represent contiguous blocks. Contributed by Zhe Zhang.\n",
          "commitDate": "01/06/15 11:42 AM",
          "commitName": "cdc13efb1af54d931585d25c5ba696a012412828",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "01/06/15 11:39 AM",
          "commitNameOld": "0b5cfacde638bc25cc010cd9236369237b4e51a8",
          "commitAuthorOld": "Xuan",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,13 @@\n   private int ensureCapacity(int num) {\n     assert this.triplets !\u003d null : \"BlockInfo is not initialized\";\n     int last \u003d numNodes();\n-    if(triplets.length \u003e\u003d (last+num)*3)\n+    if (triplets.length \u003e\u003d (last+num)*3) {\n       return last;\n+    }\n     /* Not enough space left. Create a new array. Should normally\n      * happen only when replication is manually increased by the user. */\n     Object[] old \u003d triplets;\n     triplets \u003d new Object[(last+num)*3];\n-    System.arraycopy(old, 0, triplets, 0, last*3);\n+    System.arraycopy(old, 0, triplets, 0, last * 3);\n     return last;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private int ensureCapacity(int num) {\n    assert this.triplets !\u003d null : \"BlockInfo is not initialized\";\n    int last \u003d numNodes();\n    if (triplets.length \u003e\u003d (last+num)*3) {\n      return last;\n    }\n    /* Not enough space left. Create a new array. Should normally\n     * happen only when replication is manually increased by the user. */\n    Object[] old \u003d triplets;\n    triplets \u003d new Object[(last+num)*3];\n    System.arraycopy(old, 0, triplets, 0, last * 3);\n    return last;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockInfoContiguous.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockInfo.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockInfoContiguous.java",
            "oldMethodName": "ensureCapacity",
            "newMethodName": "ensureCapacity"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-8489. Subclass BlockInfo to represent contiguous blocks. Contributed by Zhe Zhang.\n",
          "commitDate": "01/06/15 11:42 AM",
          "commitName": "cdc13efb1af54d931585d25c5ba696a012412828",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "01/06/15 11:39 AM",
          "commitNameOld": "0b5cfacde638bc25cc010cd9236369237b4e51a8",
          "commitAuthorOld": "Xuan",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,13 @@\n   private int ensureCapacity(int num) {\n     assert this.triplets !\u003d null : \"BlockInfo is not initialized\";\n     int last \u003d numNodes();\n-    if(triplets.length \u003e\u003d (last+num)*3)\n+    if (triplets.length \u003e\u003d (last+num)*3) {\n       return last;\n+    }\n     /* Not enough space left. Create a new array. Should normally\n      * happen only when replication is manually increased by the user. */\n     Object[] old \u003d triplets;\n     triplets \u003d new Object[(last+num)*3];\n-    System.arraycopy(old, 0, triplets, 0, last*3);\n+    System.arraycopy(old, 0, triplets, 0, last * 3);\n     return last;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private int ensureCapacity(int num) {\n    assert this.triplets !\u003d null : \"BlockInfo is not initialized\";\n    int last \u003d numNodes();\n    if (triplets.length \u003e\u003d (last+num)*3) {\n      return last;\n    }\n    /* Not enough space left. Create a new array. Should normally\n     * happen only when replication is manually increased by the user. */\n    Object[] old \u003d triplets;\n    triplets \u003d new Object[(last+num)*3];\n    System.arraycopy(old, 0, triplets, 0, last * 3);\n    return last;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockInfoContiguous.java",
          "extendedDetails": {}
        }
      ]
    },
    "4928f5473394981829e5ffd4b16ea0801baf5c45": {
      "type": "Ymultichange(Yfilerename,Ybodychange)",
      "commitMessage": "HDFS-8482. Rename BlockInfoContiguous to BlockInfo. Contributed by Zhe Zhang.\n",
      "commitDate": "27/05/15 3:42 PM",
      "commitName": "4928f5473394981829e5ffd4b16ea0801baf5c45",
      "commitAuthor": "Andrew Wang",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "HDFS-8482. Rename BlockInfoContiguous to BlockInfo. Contributed by Zhe Zhang.\n",
          "commitDate": "27/05/15 3:42 PM",
          "commitName": "4928f5473394981829e5ffd4b16ea0801baf5c45",
          "commitAuthor": "Andrew Wang",
          "commitDateOld": "27/05/15 3:34 PM",
          "commitNameOld": "cab7674e54c4fe56838668462de99a6787841309",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,12 @@\n   private int ensureCapacity(int num) {\n     assert this.triplets !\u003d null : \"BlockInfo is not initialized\";\n     int last \u003d numNodes();\n     if(triplets.length \u003e\u003d (last+num)*3)\n       return last;\n-    /* Not enough space left. Create a new array. Should normally \n+    /* Not enough space left. Create a new array. Should normally\n      * happen only when replication is manually increased by the user. */\n     Object[] old \u003d triplets;\n     triplets \u003d new Object[(last+num)*3];\n     System.arraycopy(old, 0, triplets, 0, last*3);\n     return last;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private int ensureCapacity(int num) {\n    assert this.triplets !\u003d null : \"BlockInfo is not initialized\";\n    int last \u003d numNodes();\n    if(triplets.length \u003e\u003d (last+num)*3)\n      return last;\n    /* Not enough space left. Create a new array. Should normally\n     * happen only when replication is manually increased by the user. */\n    Object[] old \u003d triplets;\n    triplets \u003d new Object[(last+num)*3];\n    System.arraycopy(old, 0, triplets, 0, last*3);\n    return last;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockInfo.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockInfoContiguous.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockInfo.java"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-8482. Rename BlockInfoContiguous to BlockInfo. Contributed by Zhe Zhang.\n",
          "commitDate": "27/05/15 3:42 PM",
          "commitName": "4928f5473394981829e5ffd4b16ea0801baf5c45",
          "commitAuthor": "Andrew Wang",
          "commitDateOld": "27/05/15 3:34 PM",
          "commitNameOld": "cab7674e54c4fe56838668462de99a6787841309",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,12 @@\n   private int ensureCapacity(int num) {\n     assert this.triplets !\u003d null : \"BlockInfo is not initialized\";\n     int last \u003d numNodes();\n     if(triplets.length \u003e\u003d (last+num)*3)\n       return last;\n-    /* Not enough space left. Create a new array. Should normally \n+    /* Not enough space left. Create a new array. Should normally\n      * happen only when replication is manually increased by the user. */\n     Object[] old \u003d triplets;\n     triplets \u003d new Object[(last+num)*3];\n     System.arraycopy(old, 0, triplets, 0, last*3);\n     return last;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private int ensureCapacity(int num) {\n    assert this.triplets !\u003d null : \"BlockInfo is not initialized\";\n    int last \u003d numNodes();\n    if(triplets.length \u003e\u003d (last+num)*3)\n      return last;\n    /* Not enough space left. Create a new array. Should normally\n     * happen only when replication is manually increased by the user. */\n    Object[] old \u003d triplets;\n    triplets \u003d new Object[(last+num)*3];\n    System.arraycopy(old, 0, triplets, 0, last*3);\n    return last;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockInfo.java",
          "extendedDetails": {}
        }
      ]
    },
    "1382ae525c67bf95d8f3a436b547dbc72cfbb177": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-7743. Code cleanup of BlockInfo and rename BlockInfo to BlockInfoContiguous. Contributed by Jing Zhao.\n",
      "commitDate": "08/02/15 11:51 AM",
      "commitName": "1382ae525c67bf95d8f3a436b547dbc72cfbb177",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "07/02/15 10:43 AM",
      "commitNameOld": "ef01768333ec0e59e7d747864183835e756a7bf6",
      "commitAuthorOld": "yliu",
      "daysBetweenCommits": 1.05,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private int ensureCapacity(int num) {\n    assert this.triplets !\u003d null : \"BlockInfo is not initialized\";\n    int last \u003d numNodes();\n    if(triplets.length \u003e\u003d (last+num)*3)\n      return last;\n    /* Not enough space left. Create a new array. Should normally \n     * happen only when replication is manually increased by the user. */\n    Object[] old \u003d triplets;\n    triplets \u003d new Object[(last+num)*3];\n    System.arraycopy(old, 0, triplets, 0, last*3);\n    return last;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockInfoContiguous.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockInfo.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockInfoContiguous.java"
      }
    },
    "8e8203f3c5a49ed85a81d53c50a78a2d7f4edef3": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-554. Use System.arraycopy in BlockInfo.ensureCapacity. (harsh)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1226239 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "01/01/12 4:06 AM",
      "commitName": "8e8203f3c5a49ed85a81d53c50a78a2d7f4edef3",
      "commitAuthor": "Harsh J",
      "commitDateOld": "02/11/11 9:31 AM",
      "commitNameOld": "a4baabe4a41fb50bd86205cdecf977a17d4324fe",
      "commitAuthorOld": "Hairong Kuang",
      "daysBetweenCommits": 59.82,
      "commitsBetweenForRepo": 288,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,12 @@\n   private int ensureCapacity(int num) {\n     assert this.triplets !\u003d null : \"BlockInfo is not initialized\";\n     int last \u003d numNodes();\n     if(triplets.length \u003e\u003d (last+num)*3)\n       return last;\n     /* Not enough space left. Create a new array. Should normally \n      * happen only when replication is manually increased by the user. */\n     Object[] old \u003d triplets;\n     triplets \u003d new Object[(last+num)*3];\n-    for(int i\u003d0; i \u003c last*3; i++) {\n-      triplets[i] \u003d old[i];\n-    }\n+    System.arraycopy(old, 0, triplets, 0, last*3);\n     return last;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private int ensureCapacity(int num) {\n    assert this.triplets !\u003d null : \"BlockInfo is not initialized\";\n    int last \u003d numNodes();\n    if(triplets.length \u003e\u003d (last+num)*3)\n      return last;\n    /* Not enough space left. Create a new array. Should normally \n     * happen only when replication is manually increased by the user. */\n    Object[] old \u003d triplets;\n    triplets \u003d new Object[(last+num)*3];\n    System.arraycopy(old, 0, triplets, 0, last*3);\n    return last;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockInfo.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private int ensureCapacity(int num) {\n    assert this.triplets !\u003d null : \"BlockInfo is not initialized\";\n    int last \u003d numNodes();\n    if(triplets.length \u003e\u003d (last+num)*3)\n      return last;\n    /* Not enough space left. Create a new array. Should normally \n     * happen only when replication is manually increased by the user. */\n    Object[] old \u003d triplets;\n    triplets \u003d new Object[(last+num)*3];\n    for(int i\u003d0; i \u003c last*3; i++) {\n      triplets[i] \u003d old[i];\n    }\n    return last;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockInfo.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockInfo.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockInfo.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private int ensureCapacity(int num) {\n    assert this.triplets !\u003d null : \"BlockInfo is not initialized\";\n    int last \u003d numNodes();\n    if(triplets.length \u003e\u003d (last+num)*3)\n      return last;\n    /* Not enough space left. Create a new array. Should normally \n     * happen only when replication is manually increased by the user. */\n    Object[] old \u003d triplets;\n    triplets \u003d new Object[(last+num)*3];\n    for(int i\u003d0; i \u003c last*3; i++) {\n      triplets[i] \u003d old[i];\n    }\n    return last;\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockInfo.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockInfo.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockInfo.java"
      }
    },
    "09b6f98de431628c80bc8a6faf0070eeaf72ff2a": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2107. Move block management code from o.a.h.h.s.namenode to a new package o.a.h.h.s.blockmanagement.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1140939 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/06/11 6:31 PM",
      "commitName": "09b6f98de431628c80bc8a6faf0070eeaf72ff2a",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "28/06/11 5:26 PM",
      "commitNameOld": "97b6ca4dd7d1233e8f8c90b1c01e47228c044e13",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private int ensureCapacity(int num) {\n    assert this.triplets !\u003d null : \"BlockInfo is not initialized\";\n    int last \u003d numNodes();\n    if(triplets.length \u003e\u003d (last+num)*3)\n      return last;\n    /* Not enough space left. Create a new array. Should normally \n     * happen only when replication is manually increased by the user. */\n    Object[] old \u003d triplets;\n    triplets \u003d new Object[(last+num)*3];\n    for(int i\u003d0; i \u003c last*3; i++) {\n      triplets[i] \u003d old[i];\n    }\n    return last;\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockInfo.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/BlockInfo.java",
        "newPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockInfo.java"
      }
    },
    "97b6ca4dd7d1233e8f8c90b1c01e47228c044e13": {
      "type": "Yfilerename",
      "commitMessage": "Revert 1140913 and 1140909 for HDFS-2107.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1140920 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/06/11 5:26 PM",
      "commitName": "97b6ca4dd7d1233e8f8c90b1c01e47228c044e13",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "28/06/11 4:57 PM",
      "commitNameOld": "d58e3efe9269efe00c309ed0e9726d2f94bcd03a",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private int ensureCapacity(int num) {\n    assert this.triplets !\u003d null : \"BlockInfo is not initialized\";\n    int last \u003d numNodes();\n    if(triplets.length \u003e\u003d (last+num)*3)\n      return last;\n    /* Not enough space left. Create a new array. Should normally \n     * happen only when replication is manually increased by the user. */\n    Object[] old \u003d triplets;\n    triplets \u003d new Object[(last+num)*3];\n    for(int i\u003d0; i \u003c last*3; i++) {\n      triplets[i] \u003d old[i];\n    }\n    return last;\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/BlockInfo.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockInfo.java",
        "newPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/BlockInfo.java"
      }
    },
    "1bcfe45e47775b98cce5541f328c4fd46e5eb13d": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2106. Move block management code from o.a.h.h.s.namenode to a new package o.a.h.h.s.blockmanagement.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1140909 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/06/11 4:43 PM",
      "commitName": "1bcfe45e47775b98cce5541f328c4fd46e5eb13d",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "28/06/11 9:21 AM",
      "commitNameOld": "1834fb99f516b2f2cd5e0ab1f89d407f98a7237a",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.31,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private int ensureCapacity(int num) {\n    assert this.triplets !\u003d null : \"BlockInfo is not initialized\";\n    int last \u003d numNodes();\n    if(triplets.length \u003e\u003d (last+num)*3)\n      return last;\n    /* Not enough space left. Create a new array. Should normally \n     * happen only when replication is manually increased by the user. */\n    Object[] old \u003d triplets;\n    triplets \u003d new Object[(last+num)*3];\n    for(int i\u003d0; i \u003c last*3; i++) {\n      triplets[i] \u003d old[i];\n    }\n    return last;\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockInfo.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/BlockInfo.java",
        "newPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockInfo.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,14 @@\n+  private int ensureCapacity(int num) {\n+    assert this.triplets !\u003d null : \"BlockInfo is not initialized\";\n+    int last \u003d numNodes();\n+    if(triplets.length \u003e\u003d (last+num)*3)\n+      return last;\n+    /* Not enough space left. Create a new array. Should normally \n+     * happen only when replication is manually increased by the user. */\n+    Object[] old \u003d triplets;\n+    triplets \u003d new Object[(last+num)*3];\n+    for(int i\u003d0; i \u003c last*3; i++) {\n+      triplets[i] \u003d old[i];\n+    }\n+    return last;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private int ensureCapacity(int num) {\n    assert this.triplets !\u003d null : \"BlockInfo is not initialized\";\n    int last \u003d numNodes();\n    if(triplets.length \u003e\u003d (last+num)*3)\n      return last;\n    /* Not enough space left. Create a new array. Should normally \n     * happen only when replication is manually increased by the user. */\n    Object[] old \u003d triplets;\n    triplets \u003d new Object[(last+num)*3];\n    for(int i\u003d0; i \u003c last*3; i++) {\n      triplets[i] \u003d old[i];\n    }\n    return last;\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/BlockInfo.java"
    }
  }
}