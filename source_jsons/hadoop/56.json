{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DFSClientCache.java",
  "functionName": "getDfsClient",
  "functionId": "getDfsClient___userName-String__namenodeId-int",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-nfs/src/main/java/org/apache/hadoop/hdfs/nfs/nfs3/DFSClientCache.java",
  "functionStartLine": 324,
  "functionEndLine": 332,
  "numCommitsSeen": 29,
  "timeTaken": 2841,
  "changeHistory": [
    "f20dc0d5770d3876954faf0a6e8dcce6539ffc23",
    "d6602b5f39833611b4afa4581552f6c4c37e23a8",
    "05f35518f19d48890770128727289582cca3457b",
    "e4154fc83a5cf5207861f58f9e06f49f383aef43",
    "37f587563a943a827fbff865f5302bac6d202415"
  ],
  "changeHistoryShort": {
    "f20dc0d5770d3876954faf0a6e8dcce6539ffc23": "Ybodychange",
    "d6602b5f39833611b4afa4581552f6c4c37e23a8": "Ymultichange(Yparameterchange,Ybodychange)",
    "05f35518f19d48890770128727289582cca3457b": "Yrename",
    "e4154fc83a5cf5207861f58f9e06f49f383aef43": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
    "37f587563a943a827fbff865f5302bac6d202415": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f20dc0d5770d3876954faf0a6e8dcce6539ffc23": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10571. Use Log.*(Object, Throwable) overload to log exceptions.\nContributed by Andras Bokor.\n",
      "commitDate": "14/02/18 8:20 AM",
      "commitName": "f20dc0d5770d3876954faf0a6e8dcce6539ffc23",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "10/10/17 10:38 AM",
      "commitNameOld": "d6602b5f39833611b4afa4581552f6c4c37e23a8",
      "commitAuthorOld": "Jitendra Pandey",
      "daysBetweenCommits": 126.95,
      "commitsBetweenForRepo": 833,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,9 @@\n   DFSClient getDfsClient(String userName, int namenodeId) {\n     DFSClient client \u003d null;\n     try {\n       client \u003d clientCache.get(new DfsClientKey(userName, namenodeId));\n     } catch (ExecutionException e) {\n-      LOG.error(\"Failed to create DFSClient for user:\" + userName + \" Cause:\"\n-          + e);\n+      LOG.error(\"Failed to create DFSClient for user: {}\", userName, e);\n     }\n     return client;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  DFSClient getDfsClient(String userName, int namenodeId) {\n    DFSClient client \u003d null;\n    try {\n      client \u003d clientCache.get(new DfsClientKey(userName, namenodeId));\n    } catch (ExecutionException e) {\n      LOG.error(\"Failed to create DFSClient for user: {}\", userName, e);\n    }\n    return client;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-nfs/src/main/java/org/apache/hadoop/hdfs/nfs/nfs3/DFSClientCache.java",
      "extendedDetails": {}
    },
    "d6602b5f39833611b4afa4581552f6c4c37e23a8": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-11575. Supporting HDFS NFS gateway with Federated HDFS. Contributed by Mukul Kumar Singh.\n",
      "commitDate": "10/10/17 10:38 AM",
      "commitName": "d6602b5f39833611b4afa4581552f6c4c37e23a8",
      "commitAuthor": "Jitendra Pandey",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-11575. Supporting HDFS NFS gateway with Federated HDFS. Contributed by Mukul Kumar Singh.\n",
          "commitDate": "10/10/17 10:38 AM",
          "commitName": "d6602b5f39833611b4afa4581552f6c4c37e23a8",
          "commitAuthor": "Jitendra Pandey",
          "commitDateOld": "17/09/15 2:18 PM",
          "commitNameOld": "9eee97508f350ed4629abb04e7781514ffa04070",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 753.85,
          "commitsBetweenForRepo": 5078,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,10 @@\n-  DFSClient getDfsClient(String userName) {\n+  DFSClient getDfsClient(String userName, int namenodeId) {\n     DFSClient client \u003d null;\n     try {\n-      client \u003d clientCache.get(userName);\n+      client \u003d clientCache.get(new DfsClientKey(userName, namenodeId));\n     } catch (ExecutionException e) {\n       LOG.error(\"Failed to create DFSClient for user:\" + userName + \" Cause:\"\n           + e);\n     }\n     return client;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  DFSClient getDfsClient(String userName, int namenodeId) {\n    DFSClient client \u003d null;\n    try {\n      client \u003d clientCache.get(new DfsClientKey(userName, namenodeId));\n    } catch (ExecutionException e) {\n      LOG.error(\"Failed to create DFSClient for user:\" + userName + \" Cause:\"\n          + e);\n    }\n    return client;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-nfs/src/main/java/org/apache/hadoop/hdfs/nfs/nfs3/DFSClientCache.java",
          "extendedDetails": {
            "oldValue": "[userName-String]",
            "newValue": "[userName-String, namenodeId-int]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-11575. Supporting HDFS NFS gateway with Federated HDFS. Contributed by Mukul Kumar Singh.\n",
          "commitDate": "10/10/17 10:38 AM",
          "commitName": "d6602b5f39833611b4afa4581552f6c4c37e23a8",
          "commitAuthor": "Jitendra Pandey",
          "commitDateOld": "17/09/15 2:18 PM",
          "commitNameOld": "9eee97508f350ed4629abb04e7781514ffa04070",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 753.85,
          "commitsBetweenForRepo": 5078,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,10 @@\n-  DFSClient getDfsClient(String userName) {\n+  DFSClient getDfsClient(String userName, int namenodeId) {\n     DFSClient client \u003d null;\n     try {\n-      client \u003d clientCache.get(userName);\n+      client \u003d clientCache.get(new DfsClientKey(userName, namenodeId));\n     } catch (ExecutionException e) {\n       LOG.error(\"Failed to create DFSClient for user:\" + userName + \" Cause:\"\n           + e);\n     }\n     return client;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  DFSClient getDfsClient(String userName, int namenodeId) {\n    DFSClient client \u003d null;\n    try {\n      client \u003d clientCache.get(new DfsClientKey(userName, namenodeId));\n    } catch (ExecutionException e) {\n      LOG.error(\"Failed to create DFSClient for user:\" + userName + \" Cause:\"\n          + e);\n    }\n    return client;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-nfs/src/main/java/org/apache/hadoop/hdfs/nfs/nfs3/DFSClientCache.java",
          "extendedDetails": {}
        }
      ]
    },
    "05f35518f19d48890770128727289582cca3457b": {
      "type": "Yrename",
      "commitMessage": "HDFS-5171. NFS should create input stream for a file and try to share it with multiple read requests. Contributed by Haohui Mai\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1535586 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/10/13 4:40 PM",
      "commitName": "05f35518f19d48890770128727289582cca3457b",
      "commitAuthor": "Brandon Li",
      "commitDateOld": "29/09/13 11:06 PM",
      "commitNameOld": "e4154fc83a5cf5207861f58f9e06f49f383aef43",
      "commitAuthorOld": "Brandon Li",
      "daysBetweenCommits": 24.73,
      "commitsBetweenForRepo": 180,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,10 @@\n-  DFSClient get(String userName) {\n+  DFSClient getDfsClient(String userName) {\n     DFSClient client \u003d null;\n     try {\n       client \u003d clientCache.get(userName);\n     } catch (ExecutionException e) {\n       LOG.error(\"Failed to create DFSClient for user:\" + userName + \" Cause:\"\n           + e);\n     }\n     return client;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  DFSClient getDfsClient(String userName) {\n    DFSClient client \u003d null;\n    try {\n      client \u003d clientCache.get(userName);\n    } catch (ExecutionException e) {\n      LOG.error(\"Failed to create DFSClient for user:\" + userName + \" Cause:\"\n          + e);\n    }\n    return client;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-nfs/src/main/java/org/apache/hadoop/hdfs/nfs/nfs3/DFSClientCache.java",
      "extendedDetails": {
        "oldValue": "get",
        "newValue": "getDfsClient"
      }
    },
    "e4154fc83a5cf5207861f58f9e06f49f383aef43": {
      "type": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
      "commitMessage": "HDFS-5256. Use guava LoadingCache to implement DFSClientCache. Contributed by Haohui Mai\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1527452 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/09/13 11:06 PM",
      "commitName": "e4154fc83a5cf5207861f58f9e06f49f383aef43",
      "commitAuthor": "Brandon Li",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-5256. Use guava LoadingCache to implement DFSClientCache. Contributed by Haohui Mai\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1527452 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "29/09/13 11:06 PM",
          "commitName": "e4154fc83a5cf5207861f58f9e06f49f383aef43",
          "commitAuthor": "Brandon Li",
          "commitDateOld": "02/07/13 10:31 AM",
          "commitNameOld": "37f587563a943a827fbff865f5302bac6d202415",
          "commitAuthorOld": "Brandon Li",
          "daysBetweenCommits": 89.52,
          "commitsBetweenForRepo": 508,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,10 @@\n-  synchronized public DFSClient get(String uname) {\n-    DFSClient client \u003d lruTable.get(uname);\n-    if (client !\u003d null) {\n-      return client;\n-    }\n-\n-    // Not in table, create one.\n+  DFSClient get(String userName) {\n+    DFSClient client \u003d null;\n     try {\n-      UserGroupInformation ugi \u003d UserGroupInformation.createRemoteUser(uname);\n-      client \u003d ugi.doAs(new PrivilegedExceptionAction\u003cDFSClient\u003e() {\n-        public DFSClient run() throws IOException {\n-          return new DFSClient(NameNode.getAddress(config), config);\n-        }\n-      });\n-    } catch (IOException e) {\n-      LOG.error(\"Create DFSClient failed for user:\" + uname);\n-      e.printStackTrace();\n-\n-    } catch (InterruptedException e) {\n-      e.printStackTrace();\n+      client \u003d clientCache.get(userName);\n+    } catch (ExecutionException e) {\n+      LOG.error(\"Failed to create DFSClient for user:\" + userName + \" Cause:\"\n+          + e);\n     }\n-    // Add new entry\n-    lruTable.put(uname, client);\n     return client;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  DFSClient get(String userName) {\n    DFSClient client \u003d null;\n    try {\n      client \u003d clientCache.get(userName);\n    } catch (ExecutionException e) {\n      LOG.error(\"Failed to create DFSClient for user:\" + userName + \" Cause:\"\n          + e);\n    }\n    return client;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-nfs/src/main/java/org/apache/hadoop/hdfs/nfs/nfs3/DFSClientCache.java",
          "extendedDetails": {
            "oldValue": "[uname-String]",
            "newValue": "[userName-String]"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-5256. Use guava LoadingCache to implement DFSClientCache. Contributed by Haohui Mai\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1527452 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "29/09/13 11:06 PM",
          "commitName": "e4154fc83a5cf5207861f58f9e06f49f383aef43",
          "commitAuthor": "Brandon Li",
          "commitDateOld": "02/07/13 10:31 AM",
          "commitNameOld": "37f587563a943a827fbff865f5302bac6d202415",
          "commitAuthorOld": "Brandon Li",
          "daysBetweenCommits": 89.52,
          "commitsBetweenForRepo": 508,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,10 @@\n-  synchronized public DFSClient get(String uname) {\n-    DFSClient client \u003d lruTable.get(uname);\n-    if (client !\u003d null) {\n-      return client;\n-    }\n-\n-    // Not in table, create one.\n+  DFSClient get(String userName) {\n+    DFSClient client \u003d null;\n     try {\n-      UserGroupInformation ugi \u003d UserGroupInformation.createRemoteUser(uname);\n-      client \u003d ugi.doAs(new PrivilegedExceptionAction\u003cDFSClient\u003e() {\n-        public DFSClient run() throws IOException {\n-          return new DFSClient(NameNode.getAddress(config), config);\n-        }\n-      });\n-    } catch (IOException e) {\n-      LOG.error(\"Create DFSClient failed for user:\" + uname);\n-      e.printStackTrace();\n-\n-    } catch (InterruptedException e) {\n-      e.printStackTrace();\n+      client \u003d clientCache.get(userName);\n+    } catch (ExecutionException e) {\n+      LOG.error(\"Failed to create DFSClient for user:\" + userName + \" Cause:\"\n+          + e);\n     }\n-    // Add new entry\n-    lruTable.put(uname, client);\n     return client;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  DFSClient get(String userName) {\n    DFSClient client \u003d null;\n    try {\n      client \u003d clientCache.get(userName);\n    } catch (ExecutionException e) {\n      LOG.error(\"Failed to create DFSClient for user:\" + userName + \" Cause:\"\n          + e);\n    }\n    return client;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-nfs/src/main/java/org/apache/hadoop/hdfs/nfs/nfs3/DFSClientCache.java",
          "extendedDetails": {
            "oldValue": "[public, synchronized]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-5256. Use guava LoadingCache to implement DFSClientCache. Contributed by Haohui Mai\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1527452 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "29/09/13 11:06 PM",
          "commitName": "e4154fc83a5cf5207861f58f9e06f49f383aef43",
          "commitAuthor": "Brandon Li",
          "commitDateOld": "02/07/13 10:31 AM",
          "commitNameOld": "37f587563a943a827fbff865f5302bac6d202415",
          "commitAuthorOld": "Brandon Li",
          "daysBetweenCommits": 89.52,
          "commitsBetweenForRepo": 508,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,10 @@\n-  synchronized public DFSClient get(String uname) {\n-    DFSClient client \u003d lruTable.get(uname);\n-    if (client !\u003d null) {\n-      return client;\n-    }\n-\n-    // Not in table, create one.\n+  DFSClient get(String userName) {\n+    DFSClient client \u003d null;\n     try {\n-      UserGroupInformation ugi \u003d UserGroupInformation.createRemoteUser(uname);\n-      client \u003d ugi.doAs(new PrivilegedExceptionAction\u003cDFSClient\u003e() {\n-        public DFSClient run() throws IOException {\n-          return new DFSClient(NameNode.getAddress(config), config);\n-        }\n-      });\n-    } catch (IOException e) {\n-      LOG.error(\"Create DFSClient failed for user:\" + uname);\n-      e.printStackTrace();\n-\n-    } catch (InterruptedException e) {\n-      e.printStackTrace();\n+      client \u003d clientCache.get(userName);\n+    } catch (ExecutionException e) {\n+      LOG.error(\"Failed to create DFSClient for user:\" + userName + \" Cause:\"\n+          + e);\n     }\n-    // Add new entry\n-    lruTable.put(uname, client);\n     return client;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  DFSClient get(String userName) {\n    DFSClient client \u003d null;\n    try {\n      client \u003d clientCache.get(userName);\n    } catch (ExecutionException e) {\n      LOG.error(\"Failed to create DFSClient for user:\" + userName + \" Cause:\"\n          + e);\n    }\n    return client;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-nfs/src/main/java/org/apache/hadoop/hdfs/nfs/nfs3/DFSClientCache.java",
          "extendedDetails": {}
        }
      ]
    },
    "37f587563a943a827fbff865f5302bac6d202415": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-4762 Provide HDFS based NFSv3 and Mountd implementation. Contributed by Brandon Li\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1499029 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/07/13 10:31 AM",
      "commitName": "37f587563a943a827fbff865f5302bac6d202415",
      "commitAuthor": "Brandon Li",
      "diff": "@@ -0,0 +1,25 @@\n+  synchronized public DFSClient get(String uname) {\n+    DFSClient client \u003d lruTable.get(uname);\n+    if (client !\u003d null) {\n+      return client;\n+    }\n+\n+    // Not in table, create one.\n+    try {\n+      UserGroupInformation ugi \u003d UserGroupInformation.createRemoteUser(uname);\n+      client \u003d ugi.doAs(new PrivilegedExceptionAction\u003cDFSClient\u003e() {\n+        public DFSClient run() throws IOException {\n+          return new DFSClient(NameNode.getAddress(config), config);\n+        }\n+      });\n+    } catch (IOException e) {\n+      LOG.error(\"Create DFSClient failed for user:\" + uname);\n+      e.printStackTrace();\n+\n+    } catch (InterruptedException e) {\n+      e.printStackTrace();\n+    }\n+    // Add new entry\n+    lruTable.put(uname, client);\n+    return client;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized public DFSClient get(String uname) {\n    DFSClient client \u003d lruTable.get(uname);\n    if (client !\u003d null) {\n      return client;\n    }\n\n    // Not in table, create one.\n    try {\n      UserGroupInformation ugi \u003d UserGroupInformation.createRemoteUser(uname);\n      client \u003d ugi.doAs(new PrivilegedExceptionAction\u003cDFSClient\u003e() {\n        public DFSClient run() throws IOException {\n          return new DFSClient(NameNode.getAddress(config), config);\n        }\n      });\n    } catch (IOException e) {\n      LOG.error(\"Create DFSClient failed for user:\" + uname);\n      e.printStackTrace();\n\n    } catch (InterruptedException e) {\n      e.printStackTrace();\n    }\n    // Add new entry\n    lruTable.put(uname, client);\n    return client;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-nfs/src/main/java/org/apache/hadoop/hdfs/nfs/nfs3/DFSClientCache.java"
    }
  }
}