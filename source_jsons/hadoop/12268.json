{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DataNode.java",
  "functionName": "initOOBTimeout",
  "functionId": "initOOBTimeout",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataNode.java",
  "functionStartLine": 3569,
  "functionEndLine": 3580,
  "numCommitsSeen": 358,
  "timeTaken": 2120,
  "changeHistory": [
    "dfcb331ba3516264398121c9f23af3a79c0509cc"
  ],
  "changeHistoryShort": {
    "dfcb331ba3516264398121c9f23af3a79c0509cc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "dfcb331ba3516264398121c9f23af3a79c0509cc": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-13076: [SPS]: Addendum. Resolve conflicts after rebasing branch to trunk. Contributed by Rakesh R.\n",
      "commitDate": "12/08/18 3:06 AM",
      "commitName": "dfcb331ba3516264398121c9f23af3a79c0509cc",
      "commitAuthor": "Rakesh Radhakrishnan",
      "diff": "@@ -0,0 +1,12 @@\n+  private void initOOBTimeout() {\n+    final int oobStart \u003d Status.OOB_RESTART_VALUE; // the first OOB type\n+    final int oobEnd \u003d Status.OOB_RESERVED3_VALUE; // the last OOB type\n+    final int numOobTypes \u003d oobEnd - oobStart + 1;\n+    oobTimeouts \u003d new long[numOobTypes];\n+\n+    final String[] ele \u003d getConf().get(DFS_DATANODE_OOB_TIMEOUT_KEY,\n+        DFS_DATANODE_OOB_TIMEOUT_DEFAULT).split(\",\");\n+    for (int i \u003d 0; i \u003c numOobTypes; i++) {\n+      oobTimeouts[i] \u003d (i \u003c ele.length) ? Long.parseLong(ele[i]) : 0;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void initOOBTimeout() {\n    final int oobStart \u003d Status.OOB_RESTART_VALUE; // the first OOB type\n    final int oobEnd \u003d Status.OOB_RESERVED3_VALUE; // the last OOB type\n    final int numOobTypes \u003d oobEnd - oobStart + 1;\n    oobTimeouts \u003d new long[numOobTypes];\n\n    final String[] ele \u003d getConf().get(DFS_DATANODE_OOB_TIMEOUT_KEY,\n        DFS_DATANODE_OOB_TIMEOUT_DEFAULT).split(\",\");\n    for (int i \u003d 0; i \u003c numOobTypes; i++) {\n      oobTimeouts[i] \u003d (i \u003c ele.length) ? Long.parseLong(ele[i]) : 0;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataNode.java"
    }
  }
}