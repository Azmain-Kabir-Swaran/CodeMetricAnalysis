{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ZKRMStateStore.java",
  "functionName": "constructZkRootNodeACL",
  "functionId": "constructZkRootNodeACL___conf-Configuration__sourceACLs-List__ACL__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
  "functionStartLine": 277,
  "functionEndLine": 296,
  "numCommitsSeen": 77,
  "timeTaken": 3162,
  "changeHistory": [
    "bcb2528a51c33e4caff8d744c5e14c1accfc47d0",
    "890a2ebd1af51d24ccbbc5d1d65d17b24ad8ab9b",
    "960b8f19ca98dbcfdd30f2f1f275b8718d2e872f",
    "482993ac5351b532bb3ea9ceccf95e25087b823a",
    "797159bbd4f80c92d8bfe6979b4dd91ce51d0afc"
  ],
  "changeHistoryShort": {
    "bcb2528a51c33e4caff8d744c5e14c1accfc47d0": "Ybodychange",
    "890a2ebd1af51d24ccbbc5d1d65d17b24ad8ab9b": "Ybodychange",
    "960b8f19ca98dbcfdd30f2f1f275b8718d2e872f": "Ybodychange",
    "482993ac5351b532bb3ea9ceccf95e25087b823a": "Ybodychange",
    "797159bbd4f80c92d8bfe6979b4dd91ce51d0afc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bcb2528a51c33e4caff8d744c5e14c1accfc47d0": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5400. Light cleanup in ZKRMStateStore (templedf via rkanter)\n",
      "commitDate": "28/09/16 2:56 PM",
      "commitName": "bcb2528a51c33e4caff8d744c5e14c1accfc47d0",
      "commitAuthor": "Robert Kanter",
      "commitDateOld": "25/09/16 11:00 PM",
      "commitNameOld": "14a696f369f7e3802587f57c8fff3aa51b5ab576",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 2.66,
      "commitsBetweenForRepo": 26,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,20 @@\n-  protected List\u003cACL\u003e constructZkRootNodeACL(\n-      Configuration conf, List\u003cACL\u003e sourceACLs) throws NoSuchAlgorithmException {\n-    List\u003cACL\u003e zkRootNodeAcl \u003d new ArrayList\u003c\u003e();\n+  protected List\u003cACL\u003e constructZkRootNodeACL(Configuration conf,\n+      List\u003cACL\u003e sourceACLs) throws NoSuchAlgorithmException {\n+    List\u003cACL\u003e zkRootNodeAclList \u003d new ArrayList\u003c\u003e();\n+\n     for (ACL acl : sourceACLs) {\n-      zkRootNodeAcl.add(new ACL(\n+      zkRootNodeAclList.add(new ACL(\n           ZKUtil.removeSpecificPerms(acl.getPerms(), CREATE_DELETE_PERMS),\n           acl.getId()));\n     }\n \n     zkRootNodeUsername \u003d HAUtil.getConfValueForRMInstance(\n         YarnConfiguration.RM_ADDRESS,\n         YarnConfiguration.DEFAULT_RM_ADDRESS, conf);\n     Id rmId \u003d new Id(zkRootNodeAuthScheme,\n-        DigestAuthenticationProvider.generateDigest(\n-            zkRootNodeUsername + \":\" + resourceManager.getZkRootNodePassword()));\n-    zkRootNodeAcl.add(new ACL(CREATE_DELETE_PERMS, rmId));\n-    return zkRootNodeAcl;\n+        DigestAuthenticationProvider.generateDigest(zkRootNodeUsername + \":\"\n+            + resourceManager.getZkRootNodePassword()));\n+    zkRootNodeAclList.add(new ACL(CREATE_DELETE_PERMS, rmId));\n+\n+    return zkRootNodeAclList;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected List\u003cACL\u003e constructZkRootNodeACL(Configuration conf,\n      List\u003cACL\u003e sourceACLs) throws NoSuchAlgorithmException {\n    List\u003cACL\u003e zkRootNodeAclList \u003d new ArrayList\u003c\u003e();\n\n    for (ACL acl : sourceACLs) {\n      zkRootNodeAclList.add(new ACL(\n          ZKUtil.removeSpecificPerms(acl.getPerms(), CREATE_DELETE_PERMS),\n          acl.getId()));\n    }\n\n    zkRootNodeUsername \u003d HAUtil.getConfValueForRMInstance(\n        YarnConfiguration.RM_ADDRESS,\n        YarnConfiguration.DEFAULT_RM_ADDRESS, conf);\n    Id rmId \u003d new Id(zkRootNodeAuthScheme,\n        DigestAuthenticationProvider.generateDigest(zkRootNodeUsername + \":\"\n            + resourceManager.getZkRootNodePassword()));\n    zkRootNodeAclList.add(new ACL(CREATE_DELETE_PERMS, rmId));\n\n    return zkRootNodeAclList;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "890a2ebd1af51d24ccbbc5d1d65d17b24ad8ab9b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4559. Make leader elector and zk store share the same curator\nclient. Contributed by Jian He\n",
      "commitDate": "20/01/16 2:48 PM",
      "commitName": "890a2ebd1af51d24ccbbc5d1d65d17b24ad8ab9b",
      "commitAuthor": "Xuan",
      "commitDateOld": "29/12/15 3:58 PM",
      "commitNameOld": "52734134116eb4b18686e308d00e71e7e903383e",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 21.95,
      "commitsBetweenForRepo": 126,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   protected List\u003cACL\u003e constructZkRootNodeACL(\n       Configuration conf, List\u003cACL\u003e sourceACLs) throws NoSuchAlgorithmException {\n     List\u003cACL\u003e zkRootNodeAcl \u003d new ArrayList\u003c\u003e();\n     for (ACL acl : sourceACLs) {\n       zkRootNodeAcl.add(new ACL(\n           ZKUtil.removeSpecificPerms(acl.getPerms(), CREATE_DELETE_PERMS),\n           acl.getId()));\n     }\n \n     zkRootNodeUsername \u003d HAUtil.getConfValueForRMInstance(\n         YarnConfiguration.RM_ADDRESS,\n         YarnConfiguration.DEFAULT_RM_ADDRESS, conf);\n     Id rmId \u003d new Id(zkRootNodeAuthScheme,\n         DigestAuthenticationProvider.generateDigest(\n-            zkRootNodeUsername + \":\" + zkRootNodePassword));\n+            zkRootNodeUsername + \":\" + resourceManager.getZkRootNodePassword()));\n     zkRootNodeAcl.add(new ACL(CREATE_DELETE_PERMS, rmId));\n     return zkRootNodeAcl;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected List\u003cACL\u003e constructZkRootNodeACL(\n      Configuration conf, List\u003cACL\u003e sourceACLs) throws NoSuchAlgorithmException {\n    List\u003cACL\u003e zkRootNodeAcl \u003d new ArrayList\u003c\u003e();\n    for (ACL acl : sourceACLs) {\n      zkRootNodeAcl.add(new ACL(\n          ZKUtil.removeSpecificPerms(acl.getPerms(), CREATE_DELETE_PERMS),\n          acl.getId()));\n    }\n\n    zkRootNodeUsername \u003d HAUtil.getConfValueForRMInstance(\n        YarnConfiguration.RM_ADDRESS,\n        YarnConfiguration.DEFAULT_RM_ADDRESS, conf);\n    Id rmId \u003d new Id(zkRootNodeAuthScheme,\n        DigestAuthenticationProvider.generateDigest(\n            zkRootNodeUsername + \":\" + resourceManager.getZkRootNodePassword()));\n    zkRootNodeAcl.add(new ACL(CREATE_DELETE_PERMS, rmId));\n    return zkRootNodeAcl;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "960b8f19ca98dbcfdd30f2f1f275b8718d2e872f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2716. Refactor ZKRMStateStore retry code with Apache Curator. Contributed by Karthik Kambatla\n",
      "commitDate": "08/06/15 2:50 PM",
      "commitName": "960b8f19ca98dbcfdd30f2f1f275b8718d2e872f",
      "commitAuthor": "Jian He",
      "commitDateOld": "08/05/15 3:12 PM",
      "commitNameOld": "d0b73287c26983f32b0efe01862150e9fd28086f",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 30.99,
      "commitsBetweenForRepo": 257,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   protected List\u003cACL\u003e constructZkRootNodeACL(\n       Configuration conf, List\u003cACL\u003e sourceACLs) throws NoSuchAlgorithmException {\n-    List\u003cACL\u003e zkRootNodeAcl \u003d new ArrayList\u003cACL\u003e();\n+    List\u003cACL\u003e zkRootNodeAcl \u003d new ArrayList\u003c\u003e();\n     for (ACL acl : sourceACLs) {\n       zkRootNodeAcl.add(new ACL(\n           ZKUtil.removeSpecificPerms(acl.getPerms(), CREATE_DELETE_PERMS),\n           acl.getId()));\n     }\n \n     zkRootNodeUsername \u003d HAUtil.getConfValueForRMInstance(\n         YarnConfiguration.RM_ADDRESS,\n         YarnConfiguration.DEFAULT_RM_ADDRESS, conf);\n     Id rmId \u003d new Id(zkRootNodeAuthScheme,\n         DigestAuthenticationProvider.generateDigest(\n             zkRootNodeUsername + \":\" + zkRootNodePassword));\n     zkRootNodeAcl.add(new ACL(CREATE_DELETE_PERMS, rmId));\n     return zkRootNodeAcl;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected List\u003cACL\u003e constructZkRootNodeACL(\n      Configuration conf, List\u003cACL\u003e sourceACLs) throws NoSuchAlgorithmException {\n    List\u003cACL\u003e zkRootNodeAcl \u003d new ArrayList\u003c\u003e();\n    for (ACL acl : sourceACLs) {\n      zkRootNodeAcl.add(new ACL(\n          ZKUtil.removeSpecificPerms(acl.getPerms(), CREATE_DELETE_PERMS),\n          acl.getId()));\n    }\n\n    zkRootNodeUsername \u003d HAUtil.getConfValueForRMInstance(\n        YarnConfiguration.RM_ADDRESS,\n        YarnConfiguration.DEFAULT_RM_ADDRESS, conf);\n    Id rmId \u003d new Id(zkRootNodeAuthScheme,\n        DigestAuthenticationProvider.generateDigest(\n            zkRootNodeUsername + \":\" + zkRootNodePassword));\n    zkRootNodeAcl.add(new ACL(CREATE_DELETE_PERMS, rmId));\n    return zkRootNodeAcl;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "482993ac5351b532bb3ea9ceccf95e25087b823a": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1573. ZK store should use a private password for root-node-acls. (kasha)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1560594 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/01/14 10:22 PM",
      "commitName": "482993ac5351b532bb3ea9ceccf95e25087b823a",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "06/01/14 5:56 PM",
      "commitNameOld": "c3cc855d27470edca7ca0bdc0aa8907b544b636e",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 16.18,
      "commitsBetweenForRepo": 84,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,18 @@\n   protected List\u003cACL\u003e constructZkRootNodeACL(\n       Configuration conf, List\u003cACL\u003e sourceACLs) throws NoSuchAlgorithmException {\n     List\u003cACL\u003e zkRootNodeAcl \u003d new ArrayList\u003cACL\u003e();\n     for (ACL acl : sourceACLs) {\n       zkRootNodeAcl.add(new ACL(\n           ZKUtil.removeSpecificPerms(acl.getPerms(), CREATE_DELETE_PERMS),\n           acl.getId()));\n     }\n \n     zkRootNodeUsername \u003d HAUtil.getConfValueForRMInstance(\n         YarnConfiguration.RM_ADDRESS,\n         YarnConfiguration.DEFAULT_RM_ADDRESS, conf);\n-    zkRootNodePassword \u003d Long.toString(ResourceManager.getClusterTimeStamp());\n     Id rmId \u003d new Id(zkRootNodeAuthScheme,\n         DigestAuthenticationProvider.generateDigest(\n             zkRootNodeUsername + \":\" + zkRootNodePassword));\n     zkRootNodeAcl.add(new ACL(CREATE_DELETE_PERMS, rmId));\n     return zkRootNodeAcl;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected List\u003cACL\u003e constructZkRootNodeACL(\n      Configuration conf, List\u003cACL\u003e sourceACLs) throws NoSuchAlgorithmException {\n    List\u003cACL\u003e zkRootNodeAcl \u003d new ArrayList\u003cACL\u003e();\n    for (ACL acl : sourceACLs) {\n      zkRootNodeAcl.add(new ACL(\n          ZKUtil.removeSpecificPerms(acl.getPerms(), CREATE_DELETE_PERMS),\n          acl.getId()));\n    }\n\n    zkRootNodeUsername \u003d HAUtil.getConfValueForRMInstance(\n        YarnConfiguration.RM_ADDRESS,\n        YarnConfiguration.DEFAULT_RM_ADDRESS, conf);\n    Id rmId \u003d new Id(zkRootNodeAuthScheme,\n        DigestAuthenticationProvider.generateDigest(\n            zkRootNodeUsername + \":\" + zkRootNodePassword));\n    zkRootNodeAcl.add(new ACL(CREATE_DELETE_PERMS, rmId));\n    return zkRootNodeAcl;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "797159bbd4f80c92d8bfe6979b4dd91ce51d0afc": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1222. Make improvements in ZKRMStateStore for fencing (Karthik Kambatla via bikas)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1541995 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/11/13 9:53 AM",
      "commitName": "797159bbd4f80c92d8bfe6979b4dd91ce51d0afc",
      "commitAuthor": "Bikas Saha",
      "diff": "@@ -0,0 +1,19 @@\n+  protected List\u003cACL\u003e constructZkRootNodeACL(\n+      Configuration conf, List\u003cACL\u003e sourceACLs) throws NoSuchAlgorithmException {\n+    List\u003cACL\u003e zkRootNodeAcl \u003d new ArrayList\u003cACL\u003e();\n+    for (ACL acl : sourceACLs) {\n+      zkRootNodeAcl.add(new ACL(\n+          ZKUtil.removeSpecificPerms(acl.getPerms(), CREATE_DELETE_PERMS),\n+          acl.getId()));\n+    }\n+\n+    zkRootNodeUsername \u003d HAUtil.getConfValueForRMInstance(\n+        YarnConfiguration.RM_ADDRESS,\n+        YarnConfiguration.DEFAULT_RM_ADDRESS, conf);\n+    zkRootNodePassword \u003d Long.toString(ResourceManager.getClusterTimeStamp());\n+    Id rmId \u003d new Id(zkRootNodeAuthScheme,\n+        DigestAuthenticationProvider.generateDigest(\n+            zkRootNodeUsername + \":\" + zkRootNodePassword));\n+    zkRootNodeAcl.add(new ACL(CREATE_DELETE_PERMS, rmId));\n+    return zkRootNodeAcl;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected List\u003cACL\u003e constructZkRootNodeACL(\n      Configuration conf, List\u003cACL\u003e sourceACLs) throws NoSuchAlgorithmException {\n    List\u003cACL\u003e zkRootNodeAcl \u003d new ArrayList\u003cACL\u003e();\n    for (ACL acl : sourceACLs) {\n      zkRootNodeAcl.add(new ACL(\n          ZKUtil.removeSpecificPerms(acl.getPerms(), CREATE_DELETE_PERMS),\n          acl.getId()));\n    }\n\n    zkRootNodeUsername \u003d HAUtil.getConfValueForRMInstance(\n        YarnConfiguration.RM_ADDRESS,\n        YarnConfiguration.DEFAULT_RM_ADDRESS, conf);\n    zkRootNodePassword \u003d Long.toString(ResourceManager.getClusterTimeStamp());\n    Id rmId \u003d new Id(zkRootNodeAuthScheme,\n        DigestAuthenticationProvider.generateDigest(\n            zkRootNodeUsername + \":\" + zkRootNodePassword));\n    zkRootNodeAcl.add(new ACL(CREATE_DELETE_PERMS, rmId));\n    return zkRootNodeAcl;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java"
    }
  }
}