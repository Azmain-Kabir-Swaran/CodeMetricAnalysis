{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSNamesystem.java",
  "functionName": "restoreFailedStorage",
  "functionId": "restoreFailedStorage___arg-String",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
  "functionStartLine": 4885,
  "functionEndLine": 4908,
  "numCommitsSeen": 899,
  "timeTaken": 54398,
  "changeHistory": [
    "1824aee9da4056de0fb638906b2172e486bbebe7",
    "9d3e4cccf9cd0ffb60ee0e7c65cea5ae3c8015c2",
    "ff0b99eafeda035ebe0dc82cfe689808047a8893",
    "f43a20c529ac3f104add95b222de6580757b3763",
    "3bf09c51501a23b7fa28fd0a0c4c0965858d026c",
    "cdb292f44caff9763631d9e9bcd69c375a7cddea",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "1824aee9da4056de0fb638906b2172e486bbebe7": "Ybodychange",
    "9d3e4cccf9cd0ffb60ee0e7c65cea5ae3c8015c2": "Ymultichange(Yexceptionschange,Ybodychange)",
    "ff0b99eafeda035ebe0dc82cfe689808047a8893": "Ybodychange",
    "f43a20c529ac3f104add95b222de6580757b3763": "Ybodychange",
    "3bf09c51501a23b7fa28fd0a0c4c0965858d026c": "Ymultichange(Yexceptionschange,Ybodychange)",
    "cdb292f44caff9763631d9e9bcd69c375a7cddea": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1824aee9da4056de0fb638906b2172e486bbebe7": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-15217 Add more information to longest write/read lock held log\n\n",
      "commitDate": "18/04/20 1:52 PM",
      "commitName": "1824aee9da4056de0fb638906b2172e486bbebe7",
      "commitAuthor": "Toshihiro Suzuki",
      "commitDateOld": "25/03/20 10:28 AM",
      "commitNameOld": "a700803a18fb957d2799001a2ce1dcb70f75c080",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 24.14,
      "commitsBetweenForRepo": 78,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n   boolean restoreFailedStorage(String arg) throws IOException {\n     String operationName \u003d getFailedStorageCommand(arg);\n     boolean val \u003d false;\n     checkSuperuserPrivilege(operationName);\n     checkOperation(OperationCategory.UNCHECKED);\n     cpLock();  // Block if a checkpointing is in progress on standby.\n     writeLock();\n     try {\n       checkOperation(OperationCategory.UNCHECKED);\n       \n       // if it is disabled - enable it and vice versa.\n       if(arg.equals(\"check\")) {\n         val \u003d getFSImage().getStorage().getRestoreFailedStorage();\n       } else {\n         val \u003d arg.equals(\"true\");  // false if not\n         getFSImage().getStorage().setRestoreFailedStorage(val);\n       }\n     } finally {\n-      writeUnlock(operationName);\n+      writeUnlock(operationName, getLockReportInfoSupplier(null));\n       cpUnlock();\n     }\n     logAuditEvent(true, operationName, null);\n     return val;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  boolean restoreFailedStorage(String arg) throws IOException {\n    String operationName \u003d getFailedStorageCommand(arg);\n    boolean val \u003d false;\n    checkSuperuserPrivilege(operationName);\n    checkOperation(OperationCategory.UNCHECKED);\n    cpLock();  // Block if a checkpointing is in progress on standby.\n    writeLock();\n    try {\n      checkOperation(OperationCategory.UNCHECKED);\n      \n      // if it is disabled - enable it and vice versa.\n      if(arg.equals(\"check\")) {\n        val \u003d getFSImage().getStorage().getRestoreFailedStorage();\n      } else {\n        val \u003d arg.equals(\"true\");  // false if not\n        getFSImage().getStorage().setRestoreFailedStorage(val);\n      }\n    } finally {\n      writeUnlock(operationName, getLockReportInfoSupplier(null));\n      cpUnlock();\n    }\n    logAuditEvent(true, operationName, null);\n    return val;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "9d3e4cccf9cd0ffb60ee0e7c65cea5ae3c8015c2": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "HDFS-5040.Audit log for admin commands/ logging output of all DFS admin commands. Contributed by Kuhu Shukla.\n",
      "commitDate": "26/09/17 9:29 AM",
      "commitName": "9d3e4cccf9cd0ffb60ee0e7c65cea5ae3c8015c2",
      "commitAuthor": "Brahma Reddy Battula",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "HDFS-5040.Audit log for admin commands/ logging output of all DFS admin commands. Contributed by Kuhu Shukla.\n",
          "commitDate": "26/09/17 9:29 AM",
          "commitName": "9d3e4cccf9cd0ffb60ee0e7c65cea5ae3c8015c2",
          "commitAuthor": "Brahma Reddy Battula",
          "commitDateOld": "24/09/17 9:03 PM",
          "commitNameOld": "d0b2c5850b523a3888b2fadcfcdf6edbed33f221",
          "commitAuthorOld": "Anu Engineer",
          "daysBetweenCommits": 1.52,
          "commitsBetweenForRepo": 15,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,24 @@\n-  boolean restoreFailedStorage(String arg) throws AccessControlException,\n-      StandbyException {\n-    checkSuperuserPrivilege();\n+  boolean restoreFailedStorage(String arg) throws IOException {\n+    String operationName \u003d getFailedStorageCommand(arg);\n+    boolean val \u003d false;\n+    checkSuperuserPrivilege(operationName);\n     checkOperation(OperationCategory.UNCHECKED);\n     cpLock();  // Block if a checkpointing is in progress on standby.\n     writeLock();\n     try {\n       checkOperation(OperationCategory.UNCHECKED);\n       \n       // if it is disabled - enable it and vice versa.\n-      if(arg.equals(\"check\"))\n-        return getFSImage().getStorage().getRestoreFailedStorage();\n-      \n-      boolean val \u003d arg.equals(\"true\");  // false if not\n-      getFSImage().getStorage().setRestoreFailedStorage(val);\n-      \n-      return val;\n+      if(arg.equals(\"check\")) {\n+        val \u003d getFSImage().getStorage().getRestoreFailedStorage();\n+      } else {\n+        val \u003d arg.equals(\"true\");  // false if not\n+        getFSImage().getStorage().setRestoreFailedStorage(val);\n+      }\n     } finally {\n-      writeUnlock(\"restoreFailedStorage\");\n+      writeUnlock(operationName);\n       cpUnlock();\n     }\n+    logAuditEvent(true, operationName, null);\n+    return val;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  boolean restoreFailedStorage(String arg) throws IOException {\n    String operationName \u003d getFailedStorageCommand(arg);\n    boolean val \u003d false;\n    checkSuperuserPrivilege(operationName);\n    checkOperation(OperationCategory.UNCHECKED);\n    cpLock();  // Block if a checkpointing is in progress on standby.\n    writeLock();\n    try {\n      checkOperation(OperationCategory.UNCHECKED);\n      \n      // if it is disabled - enable it and vice versa.\n      if(arg.equals(\"check\")) {\n        val \u003d getFSImage().getStorage().getRestoreFailedStorage();\n      } else {\n        val \u003d arg.equals(\"true\");  // false if not\n        getFSImage().getStorage().setRestoreFailedStorage(val);\n      }\n    } finally {\n      writeUnlock(operationName);\n      cpUnlock();\n    }\n    logAuditEvent(true, operationName, null);\n    return val;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
          "extendedDetails": {
            "oldValue": "[AccessControlException, StandbyException]",
            "newValue": "[IOException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-5040.Audit log for admin commands/ logging output of all DFS admin commands. Contributed by Kuhu Shukla.\n",
          "commitDate": "26/09/17 9:29 AM",
          "commitName": "9d3e4cccf9cd0ffb60ee0e7c65cea5ae3c8015c2",
          "commitAuthor": "Brahma Reddy Battula",
          "commitDateOld": "24/09/17 9:03 PM",
          "commitNameOld": "d0b2c5850b523a3888b2fadcfcdf6edbed33f221",
          "commitAuthorOld": "Anu Engineer",
          "daysBetweenCommits": 1.52,
          "commitsBetweenForRepo": 15,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,24 @@\n-  boolean restoreFailedStorage(String arg) throws AccessControlException,\n-      StandbyException {\n-    checkSuperuserPrivilege();\n+  boolean restoreFailedStorage(String arg) throws IOException {\n+    String operationName \u003d getFailedStorageCommand(arg);\n+    boolean val \u003d false;\n+    checkSuperuserPrivilege(operationName);\n     checkOperation(OperationCategory.UNCHECKED);\n     cpLock();  // Block if a checkpointing is in progress on standby.\n     writeLock();\n     try {\n       checkOperation(OperationCategory.UNCHECKED);\n       \n       // if it is disabled - enable it and vice versa.\n-      if(arg.equals(\"check\"))\n-        return getFSImage().getStorage().getRestoreFailedStorage();\n-      \n-      boolean val \u003d arg.equals(\"true\");  // false if not\n-      getFSImage().getStorage().setRestoreFailedStorage(val);\n-      \n-      return val;\n+      if(arg.equals(\"check\")) {\n+        val \u003d getFSImage().getStorage().getRestoreFailedStorage();\n+      } else {\n+        val \u003d arg.equals(\"true\");  // false if not\n+        getFSImage().getStorage().setRestoreFailedStorage(val);\n+      }\n     } finally {\n-      writeUnlock(\"restoreFailedStorage\");\n+      writeUnlock(operationName);\n       cpUnlock();\n     }\n+    logAuditEvent(true, operationName, null);\n+    return val;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  boolean restoreFailedStorage(String arg) throws IOException {\n    String operationName \u003d getFailedStorageCommand(arg);\n    boolean val \u003d false;\n    checkSuperuserPrivilege(operationName);\n    checkOperation(OperationCategory.UNCHECKED);\n    cpLock();  // Block if a checkpointing is in progress on standby.\n    writeLock();\n    try {\n      checkOperation(OperationCategory.UNCHECKED);\n      \n      // if it is disabled - enable it and vice versa.\n      if(arg.equals(\"check\")) {\n        val \u003d getFSImage().getStorage().getRestoreFailedStorage();\n      } else {\n        val \u003d arg.equals(\"true\");  // false if not\n        getFSImage().getStorage().setRestoreFailedStorage(val);\n      }\n    } finally {\n      writeUnlock(operationName);\n      cpUnlock();\n    }\n    logAuditEvent(true, operationName, null);\n    return val;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
          "extendedDetails": {}
        }
      ]
    },
    "ff0b99eafeda035ebe0dc82cfe689808047a8893": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10872. Add MutableRate metrics for FSNamesystemLock operations. Contributed by Erik Krogen.\n",
      "commitDate": "14/11/16 11:05 AM",
      "commitName": "ff0b99eafeda035ebe0dc82cfe689808047a8893",
      "commitAuthor": "Zhe Zhang",
      "commitDateOld": "08/11/16 6:17 PM",
      "commitNameOld": "ed0bebabaaf27cd730f7f8eb002d92c9c7db327d",
      "commitAuthorOld": "Brahma Reddy Battula",
      "daysBetweenCommits": 5.7,
      "commitsBetweenForRepo": 36,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n   boolean restoreFailedStorage(String arg) throws AccessControlException,\n       StandbyException {\n     checkSuperuserPrivilege();\n     checkOperation(OperationCategory.UNCHECKED);\n     cpLock();  // Block if a checkpointing is in progress on standby.\n     writeLock();\n     try {\n       checkOperation(OperationCategory.UNCHECKED);\n       \n       // if it is disabled - enable it and vice versa.\n       if(arg.equals(\"check\"))\n         return getFSImage().getStorage().getRestoreFailedStorage();\n       \n       boolean val \u003d arg.equals(\"true\");  // false if not\n       getFSImage().getStorage().setRestoreFailedStorage(val);\n       \n       return val;\n     } finally {\n-      writeUnlock();\n+      writeUnlock(\"restoreFailedStorage\");\n       cpUnlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  boolean restoreFailedStorage(String arg) throws AccessControlException,\n      StandbyException {\n    checkSuperuserPrivilege();\n    checkOperation(OperationCategory.UNCHECKED);\n    cpLock();  // Block if a checkpointing is in progress on standby.\n    writeLock();\n    try {\n      checkOperation(OperationCategory.UNCHECKED);\n      \n      // if it is disabled - enable it and vice versa.\n      if(arg.equals(\"check\"))\n        return getFSImage().getStorage().getRestoreFailedStorage();\n      \n      boolean val \u003d arg.equals(\"true\");  // false if not\n      getFSImage().getStorage().setRestoreFailedStorage(val);\n      \n      return val;\n    } finally {\n      writeUnlock(\"restoreFailedStorage\");\n      cpUnlock();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "f43a20c529ac3f104add95b222de6580757b3763": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7097. Allow block reports to be processed during checkpointing on standby name node. (kihwal via wang)\n",
      "commitDate": "25/11/14 3:37 PM",
      "commitName": "f43a20c529ac3f104add95b222de6580757b3763",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "24/11/14 5:46 PM",
      "commitNameOld": "45fa7f023532e79dff3cf381056eff717dc4ecc7",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 0.91,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,22 @@\n   boolean restoreFailedStorage(String arg) throws AccessControlException,\n       StandbyException {\n     checkSuperuserPrivilege();\n     checkOperation(OperationCategory.UNCHECKED);\n+    cpLock();  // Block if a checkpointing is in progress on standby.\n     writeLock();\n     try {\n       checkOperation(OperationCategory.UNCHECKED);\n       \n       // if it is disabled - enable it and vice versa.\n       if(arg.equals(\"check\"))\n         return getFSImage().getStorage().getRestoreFailedStorage();\n       \n       boolean val \u003d arg.equals(\"true\");  // false if not\n       getFSImage().getStorage().setRestoreFailedStorage(val);\n       \n       return val;\n     } finally {\n       writeUnlock();\n+      cpUnlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  boolean restoreFailedStorage(String arg) throws AccessControlException,\n      StandbyException {\n    checkSuperuserPrivilege();\n    checkOperation(OperationCategory.UNCHECKED);\n    cpLock();  // Block if a checkpointing is in progress on standby.\n    writeLock();\n    try {\n      checkOperation(OperationCategory.UNCHECKED);\n      \n      // if it is disabled - enable it and vice versa.\n      if(arg.equals(\"check\"))\n        return getFSImage().getStorage().getRestoreFailedStorage();\n      \n      boolean val \u003d arg.equals(\"true\");  // false if not\n      getFSImage().getStorage().setRestoreFailedStorage(val);\n      \n      return val;\n    } finally {\n      writeUnlock();\n      cpUnlock();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "3bf09c51501a23b7fa28fd0a0c4c0965858d026c": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "HDFS-4591. HA clients can fail to fail over while Standby NN is performing long checkpoint. Contributed by Aaron T. Myers.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1456107 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/03/13 12:51 PM",
      "commitName": "3bf09c51501a23b7fa28fd0a0c4c0965858d026c",
      "commitAuthor": "Aaron Myers",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "HDFS-4591. HA clients can fail to fail over while Standby NN is performing long checkpoint. Contributed by Aaron T. Myers.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1456107 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/03/13 12:51 PM",
          "commitName": "3bf09c51501a23b7fa28fd0a0c4c0965858d026c",
          "commitAuthor": "Aaron Myers",
          "commitDateOld": "12/03/13 7:32 PM",
          "commitNameOld": "86a940f7adc5bd9c9eaea2283df5e014e5079ab6",
          "commitAuthorOld": "Aaron Myers",
          "daysBetweenCommits": 0.72,
          "commitsBetweenForRepo": 9,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,20 @@\n-  boolean restoreFailedStorage(String arg) throws AccessControlException {\n+  boolean restoreFailedStorage(String arg) throws AccessControlException,\n+      StandbyException {\n     checkSuperuserPrivilege();\n+    checkOperation(OperationCategory.UNCHECKED);\n     writeLock();\n     try {\n+      checkOperation(OperationCategory.UNCHECKED);\n       \n       // if it is disabled - enable it and vice versa.\n       if(arg.equals(\"check\"))\n         return getFSImage().getStorage().getRestoreFailedStorage();\n       \n       boolean val \u003d arg.equals(\"true\");  // false if not\n       getFSImage().getStorage().setRestoreFailedStorage(val);\n       \n       return val;\n     } finally {\n       writeUnlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  boolean restoreFailedStorage(String arg) throws AccessControlException,\n      StandbyException {\n    checkSuperuserPrivilege();\n    checkOperation(OperationCategory.UNCHECKED);\n    writeLock();\n    try {\n      checkOperation(OperationCategory.UNCHECKED);\n      \n      // if it is disabled - enable it and vice versa.\n      if(arg.equals(\"check\"))\n        return getFSImage().getStorage().getRestoreFailedStorage();\n      \n      boolean val \u003d arg.equals(\"true\");  // false if not\n      getFSImage().getStorage().setRestoreFailedStorage(val);\n      \n      return val;\n    } finally {\n      writeUnlock();\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
          "extendedDetails": {
            "oldValue": "[AccessControlException]",
            "newValue": "[AccessControlException, StandbyException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-4591. HA clients can fail to fail over while Standby NN is performing long checkpoint. Contributed by Aaron T. Myers.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1456107 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/03/13 12:51 PM",
          "commitName": "3bf09c51501a23b7fa28fd0a0c4c0965858d026c",
          "commitAuthor": "Aaron Myers",
          "commitDateOld": "12/03/13 7:32 PM",
          "commitNameOld": "86a940f7adc5bd9c9eaea2283df5e014e5079ab6",
          "commitAuthorOld": "Aaron Myers",
          "daysBetweenCommits": 0.72,
          "commitsBetweenForRepo": 9,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,20 @@\n-  boolean restoreFailedStorage(String arg) throws AccessControlException {\n+  boolean restoreFailedStorage(String arg) throws AccessControlException,\n+      StandbyException {\n     checkSuperuserPrivilege();\n+    checkOperation(OperationCategory.UNCHECKED);\n     writeLock();\n     try {\n+      checkOperation(OperationCategory.UNCHECKED);\n       \n       // if it is disabled - enable it and vice versa.\n       if(arg.equals(\"check\"))\n         return getFSImage().getStorage().getRestoreFailedStorage();\n       \n       boolean val \u003d arg.equals(\"true\");  // false if not\n       getFSImage().getStorage().setRestoreFailedStorage(val);\n       \n       return val;\n     } finally {\n       writeUnlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  boolean restoreFailedStorage(String arg) throws AccessControlException,\n      StandbyException {\n    checkSuperuserPrivilege();\n    checkOperation(OperationCategory.UNCHECKED);\n    writeLock();\n    try {\n      checkOperation(OperationCategory.UNCHECKED);\n      \n      // if it is disabled - enable it and vice versa.\n      if(arg.equals(\"check\"))\n        return getFSImage().getStorage().getRestoreFailedStorage();\n      \n      boolean val \u003d arg.equals(\"true\");  // false if not\n      getFSImage().getStorage().setRestoreFailedStorage(val);\n      \n      return val;\n    } finally {\n      writeUnlock();\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
          "extendedDetails": {}
        }
      ]
    },
    "cdb292f44caff9763631d9e9bcd69c375a7cddea": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4222. NN is unresponsive and loses heartbeats from DNs when configured to use LDAP and LDAP has issues. Contributed by Xiaobo Peng and Suresh Srinivas.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1448801 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/02/13 1:02 PM",
      "commitName": "cdb292f44caff9763631d9e9bcd69c375a7cddea",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "11/02/13 4:50 PM",
      "commitNameOld": "969e84decbc976bd98f1050aead695d15a024ab6",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 9.84,
      "commitsBetweenForRepo": 29,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   boolean restoreFailedStorage(String arg) throws AccessControlException {\n+    checkSuperuserPrivilege();\n     writeLock();\n     try {\n-      checkSuperuserPrivilege();\n       \n       // if it is disabled - enable it and vice versa.\n       if(arg.equals(\"check\"))\n         return getFSImage().getStorage().getRestoreFailedStorage();\n       \n       boolean val \u003d arg.equals(\"true\");  // false if not\n       getFSImage().getStorage().setRestoreFailedStorage(val);\n       \n       return val;\n     } finally {\n       writeUnlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  boolean restoreFailedStorage(String arg) throws AccessControlException {\n    checkSuperuserPrivilege();\n    writeLock();\n    try {\n      \n      // if it is disabled - enable it and vice versa.\n      if(arg.equals(\"check\"))\n        return getFSImage().getStorage().getRestoreFailedStorage();\n      \n      boolean val \u003d arg.equals(\"true\");  // false if not\n      getFSImage().getStorage().setRestoreFailedStorage(val);\n      \n      return val;\n    } finally {\n      writeUnlock();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  boolean restoreFailedStorage(String arg) throws AccessControlException {\n    writeLock();\n    try {\n      checkSuperuserPrivilege();\n      \n      // if it is disabled - enable it and vice versa.\n      if(arg.equals(\"check\"))\n        return getFSImage().getStorage().getRestoreFailedStorage();\n      \n      boolean val \u003d arg.equals(\"true\");  // false if not\n      getFSImage().getStorage().setRestoreFailedStorage(val);\n      \n      return val;\n    } finally {\n      writeUnlock();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  boolean restoreFailedStorage(String arg) throws AccessControlException {\n    writeLock();\n    try {\n      checkSuperuserPrivilege();\n      \n      // if it is disabled - enable it and vice versa.\n      if(arg.equals(\"check\"))\n        return getFSImage().getStorage().getRestoreFailedStorage();\n      \n      boolean val \u003d arg.equals(\"true\");  // false if not\n      getFSImage().getStorage().setRestoreFailedStorage(val);\n      \n      return val;\n    } finally {\n      writeUnlock();\n    }\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,17 @@\n+  boolean restoreFailedStorage(String arg) throws AccessControlException {\n+    writeLock();\n+    try {\n+      checkSuperuserPrivilege();\n+      \n+      // if it is disabled - enable it and vice versa.\n+      if(arg.equals(\"check\"))\n+        return getFSImage().getStorage().getRestoreFailedStorage();\n+      \n+      boolean val \u003d arg.equals(\"true\");  // false if not\n+      getFSImage().getStorage().setRestoreFailedStorage(val);\n+      \n+      return val;\n+    } finally {\n+      writeUnlock();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  boolean restoreFailedStorage(String arg) throws AccessControlException {\n    writeLock();\n    try {\n      checkSuperuserPrivilege();\n      \n      // if it is disabled - enable it and vice versa.\n      if(arg.equals(\"check\"))\n        return getFSImage().getStorage().getRestoreFailedStorage();\n      \n      boolean val \u003d arg.equals(\"true\");  // false if not\n      getFSImage().getStorage().setRestoreFailedStorage(val);\n      \n      return val;\n    } finally {\n      writeUnlock();\n    }\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java"
    }
  }
}