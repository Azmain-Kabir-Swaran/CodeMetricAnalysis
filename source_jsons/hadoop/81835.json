{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CleanerUtil.java",
  "functionName": "newBufferCleaner",
  "functionId": "newBufferCleaner___unmappableBufferClass-Class__?__(modifiers-final)__unmapper-MethodHandle(modifiers-final)",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/CleanerUtil.java",
  "functionStartLine": 162,
  "functionEndLine": 188,
  "numCommitsSeen": 1,
  "timeTaken": 584,
  "changeHistory": [
    "5d084d7eca32cfa647a78ff6ed3c378659f5b186"
  ],
  "changeHistoryShort": {
    "5d084d7eca32cfa647a78ff6ed3c378659f5b186": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5d084d7eca32cfa647a78ff6ed3c378659f5b186": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-12760. sun.misc.Cleaner has moved to a new location in OpenJDK 9. Contributed by Akira Ajisaka.\n",
      "commitDate": "13/09/18 4:42 AM",
      "commitName": "5d084d7eca32cfa647a78ff6ed3c378659f5b186",
      "commitAuthor": "Takanobu Asanuma",
      "diff": "@@ -0,0 +1,27 @@\n+  private static BufferCleaner newBufferCleaner(\n+      final Class\u003c?\u003e unmappableBufferClass, final MethodHandle unmapper) {\n+    assert Objects.equals(\n+        methodType(void.class, ByteBuffer.class), unmapper.type());\n+    return buffer -\u003e {\n+      if (!buffer.isDirect()) {\n+        throw new IllegalArgumentException(\n+            \"unmapping only works with direct buffers\");\n+      }\n+      if (!unmappableBufferClass.isInstance(buffer)) {\n+        throw new IllegalArgumentException(\"buffer is not an instance of \" +\n+            unmappableBufferClass.getName());\n+      }\n+      final Throwable error \u003d AccessController.doPrivileged(\n+          (PrivilegedAction\u003cThrowable\u003e) () -\u003e {\n+            try {\n+              unmapper.invokeExact(buffer);\n+              return null;\n+            } catch (Throwable t) {\n+              return t;\n+            }\n+          });\n+      if (error !\u003d null) {\n+        throw new IOException(\"Unable to unmap the mapped buffer\", error);\n+      }\n+    };\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static BufferCleaner newBufferCleaner(\n      final Class\u003c?\u003e unmappableBufferClass, final MethodHandle unmapper) {\n    assert Objects.equals(\n        methodType(void.class, ByteBuffer.class), unmapper.type());\n    return buffer -\u003e {\n      if (!buffer.isDirect()) {\n        throw new IllegalArgumentException(\n            \"unmapping only works with direct buffers\");\n      }\n      if (!unmappableBufferClass.isInstance(buffer)) {\n        throw new IllegalArgumentException(\"buffer is not an instance of \" +\n            unmappableBufferClass.getName());\n      }\n      final Throwable error \u003d AccessController.doPrivileged(\n          (PrivilegedAction\u003cThrowable\u003e) () -\u003e {\n            try {\n              unmapper.invokeExact(buffer);\n              return null;\n            } catch (Throwable t) {\n              return t;\n            }\n          });\n      if (error !\u003d null) {\n        throw new IOException(\"Unable to unmap the mapped buffer\", error);\n      }\n    };\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/CleanerUtil.java"
    }
  }
}