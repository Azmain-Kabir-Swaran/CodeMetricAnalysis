{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ClientDistributedCacheManager.java",
  "functionName": "checkPermissionOfOther",
  "functionId": "checkPermissionOfOther___fs-FileSystem__path-Path__action-FsAction__statCache-Map__URI,FileStatus__",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/filecache/ClientDistributedCacheManager.java",
  "functionStartLine": 292,
  "functionEndLine": 311,
  "numCommitsSeen": 10,
  "timeTaken": 5891,
  "changeHistory": [
    "dd7916d3cd5d880d0b257d229f43f10feff04c93",
    "f01a69f84f4cc7d925d078a7ce32e5800da4e429",
    "59d9d8bca93bf714f8ec846a27009e5690f1c05d",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "dd7916d3cd5d880d0b257d229f43f10feff04c93": "Ybodychange",
    "f01a69f84f4cc7d925d078a7ce32e5800da4e429": "Ybodychange",
    "59d9d8bca93bf714f8ec846a27009e5690f1c05d": "Ymultichange(Yparameterchange,Ybodychange)",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "dd7916d3cd5d880d0b257d229f43f10feff04c93": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12250. Reduce usage of FsPermissionExtension in unit tests. Contributed by Chris Douglas.\n",
      "commitDate": "17/08/17 9:35 AM",
      "commitName": "dd7916d3cd5d880d0b257d229f43f10feff04c93",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "06/03/17 8:22 PM",
      "commitNameOld": "f01a69f84f4cc7d925d078a7ce32e5800da4e429",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 163.51,
      "commitsBetweenForRepo": 943,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,20 @@\n   private static boolean checkPermissionOfOther(FileSystem fs, Path path,\n       FsAction action, Map\u003cURI, FileStatus\u003e statCache) throws IOException {\n     FileStatus status \u003d getFileStatus(fs, path.toUri(), statCache);\n-    FsPermission perms \u003d status.getPermission();\n \n     // Encrypted files are always treated as private. This stance has two\n     // important side effects.  The first is that the encrypted files will be\n     // downloaded as the job owner instead of the YARN user, which is required\n     // for the KMS ACLs to work as expected.  Second, it prevent a file with\n     // world readable permissions that is stored in an encryption zone from\n     // being localized as a publicly shared file with world readable\n     // permissions.\n-    if (!perms.getEncryptedBit()) {\n-      FsAction otherAction \u003d perms.getOtherAction();\n+    if (!status.isEncrypted()) {\n+      FsAction otherAction \u003d status.getPermission().getOtherAction();\n       if (otherAction.implies(action)) {\n         return true;\n       }\n     }\n \n     return false;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static boolean checkPermissionOfOther(FileSystem fs, Path path,\n      FsAction action, Map\u003cURI, FileStatus\u003e statCache) throws IOException {\n    FileStatus status \u003d getFileStatus(fs, path.toUri(), statCache);\n\n    // Encrypted files are always treated as private. This stance has two\n    // important side effects.  The first is that the encrypted files will be\n    // downloaded as the job owner instead of the YARN user, which is required\n    // for the KMS ACLs to work as expected.  Second, it prevent a file with\n    // world readable permissions that is stored in an encryption zone from\n    // being localized as a publicly shared file with world readable\n    // permissions.\n    if (!status.isEncrypted()) {\n      FsAction otherAction \u003d status.getPermission().getOtherAction();\n      if (otherAction.implies(action)) {\n        return true;\n      }\n    }\n\n    return false;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/filecache/ClientDistributedCacheManager.java",
      "extendedDetails": {}
    },
    "f01a69f84f4cc7d925d078a7ce32e5800da4e429": {
      "type": "Ybodychange",
      "commitMessage": "Treat encrypted files as private. Contributed by Daniel Templeton.\n",
      "commitDate": "06/03/17 8:22 PM",
      "commitName": "f01a69f84f4cc7d925d078a7ce32e5800da4e429",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "17/08/16 9:22 AM",
      "commitNameOld": "f80a7298325a4626638ee24467e2012442e480d4",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 201.5,
      "commitsBetweenForRepo": 1260,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,21 @@\n   private static boolean checkPermissionOfOther(FileSystem fs, Path path,\n       FsAction action, Map\u003cURI, FileStatus\u003e statCache) throws IOException {\n     FileStatus status \u003d getFileStatus(fs, path.toUri(), statCache);\n     FsPermission perms \u003d status.getPermission();\n-    FsAction otherAction \u003d perms.getOtherAction();\n-    if (otherAction.implies(action)) {\n-      return true;\n+\n+    // Encrypted files are always treated as private. This stance has two\n+    // important side effects.  The first is that the encrypted files will be\n+    // downloaded as the job owner instead of the YARN user, which is required\n+    // for the KMS ACLs to work as expected.  Second, it prevent a file with\n+    // world readable permissions that is stored in an encryption zone from\n+    // being localized as a publicly shared file with world readable\n+    // permissions.\n+    if (!perms.getEncryptedBit()) {\n+      FsAction otherAction \u003d perms.getOtherAction();\n+      if (otherAction.implies(action)) {\n+        return true;\n+      }\n     }\n+\n     return false;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static boolean checkPermissionOfOther(FileSystem fs, Path path,\n      FsAction action, Map\u003cURI, FileStatus\u003e statCache) throws IOException {\n    FileStatus status \u003d getFileStatus(fs, path.toUri(), statCache);\n    FsPermission perms \u003d status.getPermission();\n\n    // Encrypted files are always treated as private. This stance has two\n    // important side effects.  The first is that the encrypted files will be\n    // downloaded as the job owner instead of the YARN user, which is required\n    // for the KMS ACLs to work as expected.  Second, it prevent a file with\n    // world readable permissions that is stored in an encryption zone from\n    // being localized as a publicly shared file with world readable\n    // permissions.\n    if (!perms.getEncryptedBit()) {\n      FsAction otherAction \u003d perms.getOtherAction();\n      if (otherAction.implies(action)) {\n        return true;\n      }\n    }\n\n    return false;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/filecache/ClientDistributedCacheManager.java",
      "extendedDetails": {}
    },
    "59d9d8bca93bf714f8ec846a27009e5690f1c05d": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "MAPREDUCE-4907. TrackerDistributedCacheManager issues too many getFileStatus calls. (sandyr via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1431166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/01/13 4:50 PM",
      "commitName": "59d9d8bca93bf714f8ec846a27009e5690f1c05d",
      "commitAuthor": "Alejandro Abdelnur",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "MAPREDUCE-4907. TrackerDistributedCacheManager issues too many getFileStatus calls. (sandyr via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1431166 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "09/01/13 4:50 PM",
          "commitName": "59d9d8bca93bf714f8ec846a27009e5690f1c05d",
          "commitAuthor": "Alejandro Abdelnur",
          "commitDateOld": "24/08/11 5:14 PM",
          "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 504.02,
          "commitsBetweenForRepo": 3157,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,10 @@\n   private static boolean checkPermissionOfOther(FileSystem fs, Path path,\n-      FsAction action) throws IOException {\n-    FileStatus status \u003d fs.getFileStatus(path);\n+      FsAction action, Map\u003cURI, FileStatus\u003e statCache) throws IOException {\n+    FileStatus status \u003d getFileStatus(fs, path.toUri(), statCache);\n     FsPermission perms \u003d status.getPermission();\n     FsAction otherAction \u003d perms.getOtherAction();\n     if (otherAction.implies(action)) {\n       return true;\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static boolean checkPermissionOfOther(FileSystem fs, Path path,\n      FsAction action, Map\u003cURI, FileStatus\u003e statCache) throws IOException {\n    FileStatus status \u003d getFileStatus(fs, path.toUri(), statCache);\n    FsPermission perms \u003d status.getPermission();\n    FsAction otherAction \u003d perms.getOtherAction();\n    if (otherAction.implies(action)) {\n      return true;\n    }\n    return false;\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/filecache/ClientDistributedCacheManager.java",
          "extendedDetails": {
            "oldValue": "[fs-FileSystem, path-Path, action-FsAction]",
            "newValue": "[fs-FileSystem, path-Path, action-FsAction, statCache-Map\u003cURI,FileStatus\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-4907. TrackerDistributedCacheManager issues too many getFileStatus calls. (sandyr via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1431166 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "09/01/13 4:50 PM",
          "commitName": "59d9d8bca93bf714f8ec846a27009e5690f1c05d",
          "commitAuthor": "Alejandro Abdelnur",
          "commitDateOld": "24/08/11 5:14 PM",
          "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 504.02,
          "commitsBetweenForRepo": 3157,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,10 @@\n   private static boolean checkPermissionOfOther(FileSystem fs, Path path,\n-      FsAction action) throws IOException {\n-    FileStatus status \u003d fs.getFileStatus(path);\n+      FsAction action, Map\u003cURI, FileStatus\u003e statCache) throws IOException {\n+    FileStatus status \u003d getFileStatus(fs, path.toUri(), statCache);\n     FsPermission perms \u003d status.getPermission();\n     FsAction otherAction \u003d perms.getOtherAction();\n     if (otherAction.implies(action)) {\n       return true;\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static boolean checkPermissionOfOther(FileSystem fs, Path path,\n      FsAction action, Map\u003cURI, FileStatus\u003e statCache) throws IOException {\n    FileStatus status \u003d getFileStatus(fs, path.toUri(), statCache);\n    FsPermission perms \u003d status.getPermission();\n    FsAction otherAction \u003d perms.getOtherAction();\n    if (otherAction.implies(action)) {\n      return true;\n    }\n    return false;\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/filecache/ClientDistributedCacheManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private static boolean checkPermissionOfOther(FileSystem fs, Path path,\n      FsAction action) throws IOException {\n    FileStatus status \u003d fs.getFileStatus(path);\n    FsPermission perms \u003d status.getPermission();\n    FsAction otherAction \u003d perms.getOtherAction();\n    if (otherAction.implies(action)) {\n      return true;\n    }\n    return false;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/filecache/ClientDistributedCacheManager.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/filecache/ClientDistributedCacheManager.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/filecache/ClientDistributedCacheManager.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private static boolean checkPermissionOfOther(FileSystem fs, Path path,\n      FsAction action) throws IOException {\n    FileStatus status \u003d fs.getFileStatus(path);\n    FsPermission perms \u003d status.getPermission();\n    FsAction otherAction \u003d perms.getOtherAction();\n    if (otherAction.implies(action)) {\n      return true;\n    }\n    return false;\n  }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/filecache/ClientDistributedCacheManager.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/java/org/apache/hadoop/mapreduce/filecache/ClientDistributedCacheManager.java",
        "newPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/filecache/ClientDistributedCacheManager.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,10 @@\n+  private static boolean checkPermissionOfOther(FileSystem fs, Path path,\n+      FsAction action) throws IOException {\n+    FileStatus status \u003d fs.getFileStatus(path);\n+    FsPermission perms \u003d status.getPermission();\n+    FsAction otherAction \u003d perms.getOtherAction();\n+    if (otherAction.implies(action)) {\n+      return true;\n+    }\n+    return false;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static boolean checkPermissionOfOther(FileSystem fs, Path path,\n      FsAction action) throws IOException {\n    FileStatus status \u003d fs.getFileStatus(path);\n    FsPermission perms \u003d status.getPermission();\n    FsAction otherAction \u003d perms.getOtherAction();\n    if (otherAction.implies(action)) {\n      return true;\n    }\n    return false;\n  }",
      "path": "mapreduce/src/java/org/apache/hadoop/mapreduce/filecache/ClientDistributedCacheManager.java"
    }
  }
}