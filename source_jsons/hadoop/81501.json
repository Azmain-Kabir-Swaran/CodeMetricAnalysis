{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LogLevel.java",
  "functionName": "doGet",
  "functionId": "doGet___request-HttpServletRequest__response-HttpServletResponse",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/log/LogLevel.java",
  "functionStartLine": 323,
  "functionEndLine": 361,
  "numCommitsSeen": 17,
  "timeTaken": 1734,
  "changeHistory": [
    "252c2b4d52e0dd8984d6f2a8f292f40e1c347fab",
    "dbb133ccfc00e20622a5dbf7a6e1126fb63d7487",
    "72389c78dba1e2f7727245838180fb51e5241075",
    "33a47743a5f4263bc21b345587370c5ecf43f5b4",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "7785232da5a1db2d06f5d208ce3258c342a4d19c",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36"
  ],
  "changeHistoryShort": {
    "252c2b4d52e0dd8984d6f2a8f292f40e1c347fab": "Ybodychange",
    "dbb133ccfc00e20622a5dbf7a6e1126fb63d7487": "Ybodychange",
    "72389c78dba1e2f7727245838180fb51e5241075": "Ybodychange",
    "33a47743a5f4263bc21b345587370c5ecf43f5b4": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "7785232da5a1db2d06f5d208ce3258c342a4d19c": "Ybodychange",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": "Yintroduced"
  },
  "changeHistoryDetails": {
    "252c2b4d52e0dd8984d6f2a8f292f40e1c347fab": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"HADOOP-13707. If kerberos is enabled while HTTP SPNEGO is not configured, some links cannot be accessed. Contributed by Yuanbo Liu\"\n\nChange-Id: I946a466a43d56c73bb0135384e73cb8513595461\n(cherry picked from commit 80ee5248b2dda1cb8d122d4f362f2f8cf02b9467)\n",
      "commitDate": "14/03/18 1:36 PM",
      "commitName": "252c2b4d52e0dd8984d6f2a8f292f40e1c347fab",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "08/11/16 7:25 AM",
      "commitNameOld": "dbb133ccfc00e20622a5dbf7a6e1126fb63d7487",
      "commitAuthorOld": "Brahma Reddy Battula",
      "daysBetweenCommits": 491.22,
      "commitsBetweenForRepo": 3119,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,43 +1,39 @@\n     public void doGet(HttpServletRequest request, HttpServletResponse response\n         ) throws ServletException, IOException {\n \n-      // If user is a static user and auth Type is null, that means\n-      // there is a non-security environment and no need authorization,\n-      // otherwise, do the authorization.\n-      final ServletContext servletContext \u003d getServletContext();\n-      if (!HttpServer2.isStaticUserAndNoneAuthType(servletContext, request) \u0026\u0026\n-          !HttpServer2.hasAdministratorAccess(servletContext,\n-              request, response)) {\n+      // Do the authorization\n+      if (!HttpServer2.hasAdministratorAccess(getServletContext(), request,\n+          response)) {\n         return;\n       }\n \n       PrintWriter out \u003d ServletUtil.initHTML(response, \"Log Level\");\n       String logName \u003d ServletUtil.getParameter(request, \"log\");\n       String level \u003d ServletUtil.getParameter(request, \"level\");\n \n       if (logName !\u003d null) {\n         out.println(\"\u003cbr /\u003e\u003chr /\u003e\u003ch3\u003eResults\u003c/h3\u003e\");\n         out.println(MARKER\n             + \"Submitted Class Name: \u003cb\u003e\" + logName + \"\u003c/b\u003e\u003cbr /\u003e\");\n \n         Log log \u003d LogFactory.getLog(logName);\n         out.println(MARKER\n             + \"Log Class: \u003cb\u003e\" + log.getClass().getName() +\"\u003c/b\u003e\u003cbr /\u003e\");\n         if (level !\u003d null) {\n           out.println(MARKER + \"Submitted Level: \u003cb\u003e\" + level + \"\u003c/b\u003e\u003cbr /\u003e\");\n         }\n \n         if (log instanceof Log4JLogger) {\n           process(((Log4JLogger)log).getLogger(), level, out);\n         }\n         else if (log instanceof Jdk14Logger) {\n           process(((Jdk14Logger)log).getLogger(), level, out);\n         }\n         else {\n           out.println(\"Sorry, \" + log.getClass() + \" not supported.\u003cbr /\u003e\");\n         }\n       }\n \n       out.println(FORMS);\n       out.println(ServletUtil.HTML_TAIL);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void doGet(HttpServletRequest request, HttpServletResponse response\n        ) throws ServletException, IOException {\n\n      // Do the authorization\n      if (!HttpServer2.hasAdministratorAccess(getServletContext(), request,\n          response)) {\n        return;\n      }\n\n      PrintWriter out \u003d ServletUtil.initHTML(response, \"Log Level\");\n      String logName \u003d ServletUtil.getParameter(request, \"log\");\n      String level \u003d ServletUtil.getParameter(request, \"level\");\n\n      if (logName !\u003d null) {\n        out.println(\"\u003cbr /\u003e\u003chr /\u003e\u003ch3\u003eResults\u003c/h3\u003e\");\n        out.println(MARKER\n            + \"Submitted Class Name: \u003cb\u003e\" + logName + \"\u003c/b\u003e\u003cbr /\u003e\");\n\n        Log log \u003d LogFactory.getLog(logName);\n        out.println(MARKER\n            + \"Log Class: \u003cb\u003e\" + log.getClass().getName() +\"\u003c/b\u003e\u003cbr /\u003e\");\n        if (level !\u003d null) {\n          out.println(MARKER + \"Submitted Level: \u003cb\u003e\" + level + \"\u003c/b\u003e\u003cbr /\u003e\");\n        }\n\n        if (log instanceof Log4JLogger) {\n          process(((Log4JLogger)log).getLogger(), level, out);\n        }\n        else if (log instanceof Jdk14Logger) {\n          process(((Jdk14Logger)log).getLogger(), level, out);\n        }\n        else {\n          out.println(\"Sorry, \" + log.getClass() + \" not supported.\u003cbr /\u003e\");\n        }\n      }\n\n      out.println(FORMS);\n      out.println(ServletUtil.HTML_TAIL);\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/log/LogLevel.java",
      "extendedDetails": {}
    },
    "dbb133ccfc00e20622a5dbf7a6e1126fb63d7487": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13707. If kerberos is enabled while HTTP SPNEGO is not configured, some links cannot be accessed. Contributed by Yuanbo Liu.\n",
      "commitDate": "08/11/16 7:25 AM",
      "commitName": "dbb133ccfc00e20622a5dbf7a6e1126fb63d7487",
      "commitAuthor": "Brahma Reddy Battula",
      "commitDateOld": "11/10/16 10:57 AM",
      "commitNameOld": "2fb392a587d288b628936ca6d18fabad04afc585",
      "commitAuthorOld": "Mingliang Liu",
      "daysBetweenCommits": 27.89,
      "commitsBetweenForRepo": 276,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,39 +1,43 @@\n     public void doGet(HttpServletRequest request, HttpServletResponse response\n         ) throws ServletException, IOException {\n \n-      // Do the authorization\n-      if (!HttpServer2.hasAdministratorAccess(getServletContext(), request,\n-          response)) {\n+      // If user is a static user and auth Type is null, that means\n+      // there is a non-security environment and no need authorization,\n+      // otherwise, do the authorization.\n+      final ServletContext servletContext \u003d getServletContext();\n+      if (!HttpServer2.isStaticUserAndNoneAuthType(servletContext, request) \u0026\u0026\n+          !HttpServer2.hasAdministratorAccess(servletContext,\n+              request, response)) {\n         return;\n       }\n \n       PrintWriter out \u003d ServletUtil.initHTML(response, \"Log Level\");\n       String logName \u003d ServletUtil.getParameter(request, \"log\");\n       String level \u003d ServletUtil.getParameter(request, \"level\");\n \n       if (logName !\u003d null) {\n         out.println(\"\u003cbr /\u003e\u003chr /\u003e\u003ch3\u003eResults\u003c/h3\u003e\");\n         out.println(MARKER\n             + \"Submitted Class Name: \u003cb\u003e\" + logName + \"\u003c/b\u003e\u003cbr /\u003e\");\n \n         Log log \u003d LogFactory.getLog(logName);\n         out.println(MARKER\n             + \"Log Class: \u003cb\u003e\" + log.getClass().getName() +\"\u003c/b\u003e\u003cbr /\u003e\");\n         if (level !\u003d null) {\n           out.println(MARKER + \"Submitted Level: \u003cb\u003e\" + level + \"\u003c/b\u003e\u003cbr /\u003e\");\n         }\n \n         if (log instanceof Log4JLogger) {\n           process(((Log4JLogger)log).getLogger(), level, out);\n         }\n         else if (log instanceof Jdk14Logger) {\n           process(((Jdk14Logger)log).getLogger(), level, out);\n         }\n         else {\n           out.println(\"Sorry, \" + log.getClass() + \" not supported.\u003cbr /\u003e\");\n         }\n       }\n \n       out.println(FORMS);\n       out.println(ServletUtil.HTML_TAIL);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void doGet(HttpServletRequest request, HttpServletResponse response\n        ) throws ServletException, IOException {\n\n      // If user is a static user and auth Type is null, that means\n      // there is a non-security environment and no need authorization,\n      // otherwise, do the authorization.\n      final ServletContext servletContext \u003d getServletContext();\n      if (!HttpServer2.isStaticUserAndNoneAuthType(servletContext, request) \u0026\u0026\n          !HttpServer2.hasAdministratorAccess(servletContext,\n              request, response)) {\n        return;\n      }\n\n      PrintWriter out \u003d ServletUtil.initHTML(response, \"Log Level\");\n      String logName \u003d ServletUtil.getParameter(request, \"log\");\n      String level \u003d ServletUtil.getParameter(request, \"level\");\n\n      if (logName !\u003d null) {\n        out.println(\"\u003cbr /\u003e\u003chr /\u003e\u003ch3\u003eResults\u003c/h3\u003e\");\n        out.println(MARKER\n            + \"Submitted Class Name: \u003cb\u003e\" + logName + \"\u003c/b\u003e\u003cbr /\u003e\");\n\n        Log log \u003d LogFactory.getLog(logName);\n        out.println(MARKER\n            + \"Log Class: \u003cb\u003e\" + log.getClass().getName() +\"\u003c/b\u003e\u003cbr /\u003e\");\n        if (level !\u003d null) {\n          out.println(MARKER + \"Submitted Level: \u003cb\u003e\" + level + \"\u003c/b\u003e\u003cbr /\u003e\");\n        }\n\n        if (log instanceof Log4JLogger) {\n          process(((Log4JLogger)log).getLogger(), level, out);\n        }\n        else if (log instanceof Jdk14Logger) {\n          process(((Jdk14Logger)log).getLogger(), level, out);\n        }\n        else {\n          out.println(\"Sorry, \" + log.getClass() + \" not supported.\u003cbr /\u003e\");\n        }\n      }\n\n      out.println(FORMS);\n      out.println(ServletUtil.HTML_TAIL);\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/log/LogLevel.java",
      "extendedDetails": {}
    },
    "72389c78dba1e2f7727245838180fb51e5241075": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11575. Daemon log documentation is misleading (Naganarasimha G R via aw)\n",
      "commitDate": "17/02/15 9:00 AM",
      "commitName": "72389c78dba1e2f7727245838180fb51e5241075",
      "commitAuthor": "Allen Wittenauer",
      "commitDateOld": "11/12/14 4:42 PM",
      "commitNameOld": "5b9fcedb4d116d91d70aaad6cbf59093eeee36df",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 67.68,
      "commitsBetweenForRepo": 497,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,39 +1,39 @@\n     public void doGet(HttpServletRequest request, HttpServletResponse response\n         ) throws ServletException, IOException {\n \n       // Do the authorization\n       if (!HttpServer2.hasAdministratorAccess(getServletContext(), request,\n           response)) {\n         return;\n       }\n \n       PrintWriter out \u003d ServletUtil.initHTML(response, \"Log Level\");\n       String logName \u003d ServletUtil.getParameter(request, \"log\");\n       String level \u003d ServletUtil.getParameter(request, \"level\");\n \n       if (logName !\u003d null) {\n         out.println(\"\u003cbr /\u003e\u003chr /\u003e\u003ch3\u003eResults\u003c/h3\u003e\");\n         out.println(MARKER\n-            + \"Submitted Log Name: \u003cb\u003e\" + logName + \"\u003c/b\u003e\u003cbr /\u003e\");\n+            + \"Submitted Class Name: \u003cb\u003e\" + logName + \"\u003c/b\u003e\u003cbr /\u003e\");\n \n         Log log \u003d LogFactory.getLog(logName);\n         out.println(MARKER\n             + \"Log Class: \u003cb\u003e\" + log.getClass().getName() +\"\u003c/b\u003e\u003cbr /\u003e\");\n         if (level !\u003d null) {\n           out.println(MARKER + \"Submitted Level: \u003cb\u003e\" + level + \"\u003c/b\u003e\u003cbr /\u003e\");\n         }\n \n         if (log instanceof Log4JLogger) {\n           process(((Log4JLogger)log).getLogger(), level, out);\n         }\n         else if (log instanceof Jdk14Logger) {\n           process(((Jdk14Logger)log).getLogger(), level, out);\n         }\n         else {\n           out.println(\"Sorry, \" + log.getClass() + \" not supported.\u003cbr /\u003e\");\n         }\n       }\n \n       out.println(FORMS);\n       out.println(ServletUtil.HTML_TAIL);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void doGet(HttpServletRequest request, HttpServletResponse response\n        ) throws ServletException, IOException {\n\n      // Do the authorization\n      if (!HttpServer2.hasAdministratorAccess(getServletContext(), request,\n          response)) {\n        return;\n      }\n\n      PrintWriter out \u003d ServletUtil.initHTML(response, \"Log Level\");\n      String logName \u003d ServletUtil.getParameter(request, \"log\");\n      String level \u003d ServletUtil.getParameter(request, \"level\");\n\n      if (logName !\u003d null) {\n        out.println(\"\u003cbr /\u003e\u003chr /\u003e\u003ch3\u003eResults\u003c/h3\u003e\");\n        out.println(MARKER\n            + \"Submitted Class Name: \u003cb\u003e\" + logName + \"\u003c/b\u003e\u003cbr /\u003e\");\n\n        Log log \u003d LogFactory.getLog(logName);\n        out.println(MARKER\n            + \"Log Class: \u003cb\u003e\" + log.getClass().getName() +\"\u003c/b\u003e\u003cbr /\u003e\");\n        if (level !\u003d null) {\n          out.println(MARKER + \"Submitted Level: \u003cb\u003e\" + level + \"\u003c/b\u003e\u003cbr /\u003e\");\n        }\n\n        if (log instanceof Log4JLogger) {\n          process(((Log4JLogger)log).getLogger(), level, out);\n        }\n        else if (log instanceof Jdk14Logger) {\n          process(((Jdk14Logger)log).getLogger(), level, out);\n        }\n        else {\n          out.println(\"Sorry, \" + log.getClass() + \" not supported.\u003cbr /\u003e\");\n        }\n      }\n\n      out.println(FORMS);\n      out.println(ServletUtil.HTML_TAIL);\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/log/LogLevel.java",
      "extendedDetails": {}
    },
    "33a47743a5f4263bc21b345587370c5ecf43f5b4": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10255. Rename HttpServer to HttpServer2 to retain older HttpServer in branch-2 for compatibility. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1561959 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/01/14 11:32 PM",
      "commitName": "33a47743a5f4263bc21b345587370c5ecf43f5b4",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "24/08/12 6:03 PM",
      "commitNameOld": "deead78e35b0cb81af875b5a8032cbd06c9a2dae",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 521.27,
      "commitsBetweenForRepo": 3053,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,39 +1,39 @@\n     public void doGet(HttpServletRequest request, HttpServletResponse response\n         ) throws ServletException, IOException {\n \n       // Do the authorization\n-      if (!HttpServer.hasAdministratorAccess(getServletContext(), request,\n+      if (!HttpServer2.hasAdministratorAccess(getServletContext(), request,\n           response)) {\n         return;\n       }\n \n       PrintWriter out \u003d ServletUtil.initHTML(response, \"Log Level\");\n       String logName \u003d ServletUtil.getParameter(request, \"log\");\n       String level \u003d ServletUtil.getParameter(request, \"level\");\n \n       if (logName !\u003d null) {\n         out.println(\"\u003cbr /\u003e\u003chr /\u003e\u003ch3\u003eResults\u003c/h3\u003e\");\n         out.println(MARKER\n             + \"Submitted Log Name: \u003cb\u003e\" + logName + \"\u003c/b\u003e\u003cbr /\u003e\");\n \n         Log log \u003d LogFactory.getLog(logName);\n         out.println(MARKER\n             + \"Log Class: \u003cb\u003e\" + log.getClass().getName() +\"\u003c/b\u003e\u003cbr /\u003e\");\n         if (level !\u003d null) {\n           out.println(MARKER + \"Submitted Level: \u003cb\u003e\" + level + \"\u003c/b\u003e\u003cbr /\u003e\");\n         }\n \n         if (log instanceof Log4JLogger) {\n           process(((Log4JLogger)log).getLogger(), level, out);\n         }\n         else if (log instanceof Jdk14Logger) {\n           process(((Jdk14Logger)log).getLogger(), level, out);\n         }\n         else {\n           out.println(\"Sorry, \" + log.getClass() + \" not supported.\u003cbr /\u003e\");\n         }\n       }\n \n       out.println(FORMS);\n       out.println(ServletUtil.HTML_TAIL);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void doGet(HttpServletRequest request, HttpServletResponse response\n        ) throws ServletException, IOException {\n\n      // Do the authorization\n      if (!HttpServer2.hasAdministratorAccess(getServletContext(), request,\n          response)) {\n        return;\n      }\n\n      PrintWriter out \u003d ServletUtil.initHTML(response, \"Log Level\");\n      String logName \u003d ServletUtil.getParameter(request, \"log\");\n      String level \u003d ServletUtil.getParameter(request, \"level\");\n\n      if (logName !\u003d null) {\n        out.println(\"\u003cbr /\u003e\u003chr /\u003e\u003ch3\u003eResults\u003c/h3\u003e\");\n        out.println(MARKER\n            + \"Submitted Log Name: \u003cb\u003e\" + logName + \"\u003c/b\u003e\u003cbr /\u003e\");\n\n        Log log \u003d LogFactory.getLog(logName);\n        out.println(MARKER\n            + \"Log Class: \u003cb\u003e\" + log.getClass().getName() +\"\u003c/b\u003e\u003cbr /\u003e\");\n        if (level !\u003d null) {\n          out.println(MARKER + \"Submitted Level: \u003cb\u003e\" + level + \"\u003c/b\u003e\u003cbr /\u003e\");\n        }\n\n        if (log instanceof Log4JLogger) {\n          process(((Log4JLogger)log).getLogger(), level, out);\n        }\n        else if (log instanceof Jdk14Logger) {\n          process(((Jdk14Logger)log).getLogger(), level, out);\n        }\n        else {\n          out.println(\"Sorry, \" + log.getClass() + \" not supported.\u003cbr /\u003e\");\n        }\n      }\n\n      out.println(FORMS);\n      out.println(ServletUtil.HTML_TAIL);\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/log/LogLevel.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public void doGet(HttpServletRequest request, HttpServletResponse response\n        ) throws ServletException, IOException {\n\n      // Do the authorization\n      if (!HttpServer.hasAdministratorAccess(getServletContext(), request,\n          response)) {\n        return;\n      }\n\n      PrintWriter out \u003d ServletUtil.initHTML(response, \"Log Level\");\n      String logName \u003d ServletUtil.getParameter(request, \"log\");\n      String level \u003d ServletUtil.getParameter(request, \"level\");\n\n      if (logName !\u003d null) {\n        out.println(\"\u003cbr /\u003e\u003chr /\u003e\u003ch3\u003eResults\u003c/h3\u003e\");\n        out.println(MARKER\n            + \"Submitted Log Name: \u003cb\u003e\" + logName + \"\u003c/b\u003e\u003cbr /\u003e\");\n\n        Log log \u003d LogFactory.getLog(logName);\n        out.println(MARKER\n            + \"Log Class: \u003cb\u003e\" + log.getClass().getName() +\"\u003c/b\u003e\u003cbr /\u003e\");\n        if (level !\u003d null) {\n          out.println(MARKER + \"Submitted Level: \u003cb\u003e\" + level + \"\u003c/b\u003e\u003cbr /\u003e\");\n        }\n\n        if (log instanceof Log4JLogger) {\n          process(((Log4JLogger)log).getLogger(), level, out);\n        }\n        else if (log instanceof Jdk14Logger) {\n          process(((Jdk14Logger)log).getLogger(), level, out);\n        }\n        else {\n          out.println(\"Sorry, \" + log.getClass() + \" not supported.\u003cbr /\u003e\");\n        }\n      }\n\n      out.println(FORMS);\n      out.println(ServletUtil.HTML_TAIL);\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/log/LogLevel.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/log/LogLevel.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/log/LogLevel.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public void doGet(HttpServletRequest request, HttpServletResponse response\n        ) throws ServletException, IOException {\n\n      // Do the authorization\n      if (!HttpServer.hasAdministratorAccess(getServletContext(), request,\n          response)) {\n        return;\n      }\n\n      PrintWriter out \u003d ServletUtil.initHTML(response, \"Log Level\");\n      String logName \u003d ServletUtil.getParameter(request, \"log\");\n      String level \u003d ServletUtil.getParameter(request, \"level\");\n\n      if (logName !\u003d null) {\n        out.println(\"\u003cbr /\u003e\u003chr /\u003e\u003ch3\u003eResults\u003c/h3\u003e\");\n        out.println(MARKER\n            + \"Submitted Log Name: \u003cb\u003e\" + logName + \"\u003c/b\u003e\u003cbr /\u003e\");\n\n        Log log \u003d LogFactory.getLog(logName);\n        out.println(MARKER\n            + \"Log Class: \u003cb\u003e\" + log.getClass().getName() +\"\u003c/b\u003e\u003cbr /\u003e\");\n        if (level !\u003d null) {\n          out.println(MARKER + \"Submitted Level: \u003cb\u003e\" + level + \"\u003c/b\u003e\u003cbr /\u003e\");\n        }\n\n        if (log instanceof Log4JLogger) {\n          process(((Log4JLogger)log).getLogger(), level, out);\n        }\n        else if (log instanceof Jdk14Logger) {\n          process(((Jdk14Logger)log).getLogger(), level, out);\n        }\n        else {\n          out.println(\"Sorry, \" + log.getClass() + \" not supported.\u003cbr /\u003e\");\n        }\n      }\n\n      out.println(FORMS);\n      out.println(ServletUtil.HTML_TAIL);\n    }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/log/LogLevel.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/log/LogLevel.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/log/LogLevel.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public void doGet(HttpServletRequest request, HttpServletResponse response\n        ) throws ServletException, IOException {\n\n      // Do the authorization\n      if (!HttpServer.hasAdministratorAccess(getServletContext(), request,\n          response)) {\n        return;\n      }\n\n      PrintWriter out \u003d ServletUtil.initHTML(response, \"Log Level\");\n      String logName \u003d ServletUtil.getParameter(request, \"log\");\n      String level \u003d ServletUtil.getParameter(request, \"level\");\n\n      if (logName !\u003d null) {\n        out.println(\"\u003cbr /\u003e\u003chr /\u003e\u003ch3\u003eResults\u003c/h3\u003e\");\n        out.println(MARKER\n            + \"Submitted Log Name: \u003cb\u003e\" + logName + \"\u003c/b\u003e\u003cbr /\u003e\");\n\n        Log log \u003d LogFactory.getLog(logName);\n        out.println(MARKER\n            + \"Log Class: \u003cb\u003e\" + log.getClass().getName() +\"\u003c/b\u003e\u003cbr /\u003e\");\n        if (level !\u003d null) {\n          out.println(MARKER + \"Submitted Level: \u003cb\u003e\" + level + \"\u003c/b\u003e\u003cbr /\u003e\");\n        }\n\n        if (log instanceof Log4JLogger) {\n          process(((Log4JLogger)log).getLogger(), level, out);\n        }\n        else if (log instanceof Jdk14Logger) {\n          process(((Jdk14Logger)log).getLogger(), level, out);\n        }\n        else {\n          out.println(\"Sorry, \" + log.getClass() + \" not supported.\u003cbr /\u003e\");\n        }\n      }\n\n      out.println(FORMS);\n      out.println(ServletUtil.HTML_TAIL);\n    }",
      "path": "common/src/java/org/apache/hadoop/log/LogLevel.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/log/LogLevel.java",
        "newPath": "common/src/java/org/apache/hadoop/log/LogLevel.java"
      }
    },
    "7785232da5a1db2d06f5d208ce3258c342a4d19c": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-6568. Adds authorization for the default servlets. Contributed by Vinod Kumar Vavilapalli.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@916467 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/02/10 1:39 PM",
      "commitName": "7785232da5a1db2d06f5d208ce3258c342a4d19c",
      "commitAuthor": "Devaraj Das",
      "commitDateOld": "18/05/09 9:20 PM",
      "commitNameOld": "5128a9a453d64bfe1ed978cf9ffed27985eeef36",
      "commitAuthorOld": "Owen O\u0027Malley",
      "daysBetweenCommits": 282.72,
      "commitsBetweenForRepo": 259,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,39 @@\n     public void doGet(HttpServletRequest request, HttpServletResponse response\n         ) throws ServletException, IOException {\n+\n+      // Do the authorization\n+      if (!HttpServer.hasAdministratorAccess(getServletContext(), request,\n+          response)) {\n+        return;\n+      }\n+\n       PrintWriter out \u003d ServletUtil.initHTML(response, \"Log Level\");\n       String logName \u003d ServletUtil.getParameter(request, \"log\");\n       String level \u003d ServletUtil.getParameter(request, \"level\");\n \n       if (logName !\u003d null) {\n         out.println(\"\u003cbr /\u003e\u003chr /\u003e\u003ch3\u003eResults\u003c/h3\u003e\");\n         out.println(MARKER\n             + \"Submitted Log Name: \u003cb\u003e\" + logName + \"\u003c/b\u003e\u003cbr /\u003e\");\n \n         Log log \u003d LogFactory.getLog(logName);\n         out.println(MARKER\n             + \"Log Class: \u003cb\u003e\" + log.getClass().getName() +\"\u003c/b\u003e\u003cbr /\u003e\");\n         if (level !\u003d null) {\n           out.println(MARKER + \"Submitted Level: \u003cb\u003e\" + level + \"\u003c/b\u003e\u003cbr /\u003e\");\n         }\n \n         if (log instanceof Log4JLogger) {\n           process(((Log4JLogger)log).getLogger(), level, out);\n         }\n         else if (log instanceof Jdk14Logger) {\n           process(((Jdk14Logger)log).getLogger(), level, out);\n         }\n         else {\n           out.println(\"Sorry, \" + log.getClass() + \" not supported.\u003cbr /\u003e\");\n         }\n       }\n \n       out.println(FORMS);\n       out.println(ServletUtil.HTML_TAIL);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void doGet(HttpServletRequest request, HttpServletResponse response\n        ) throws ServletException, IOException {\n\n      // Do the authorization\n      if (!HttpServer.hasAdministratorAccess(getServletContext(), request,\n          response)) {\n        return;\n      }\n\n      PrintWriter out \u003d ServletUtil.initHTML(response, \"Log Level\");\n      String logName \u003d ServletUtil.getParameter(request, \"log\");\n      String level \u003d ServletUtil.getParameter(request, \"level\");\n\n      if (logName !\u003d null) {\n        out.println(\"\u003cbr /\u003e\u003chr /\u003e\u003ch3\u003eResults\u003c/h3\u003e\");\n        out.println(MARKER\n            + \"Submitted Log Name: \u003cb\u003e\" + logName + \"\u003c/b\u003e\u003cbr /\u003e\");\n\n        Log log \u003d LogFactory.getLog(logName);\n        out.println(MARKER\n            + \"Log Class: \u003cb\u003e\" + log.getClass().getName() +\"\u003c/b\u003e\u003cbr /\u003e\");\n        if (level !\u003d null) {\n          out.println(MARKER + \"Submitted Level: \u003cb\u003e\" + level + \"\u003c/b\u003e\u003cbr /\u003e\");\n        }\n\n        if (log instanceof Log4JLogger) {\n          process(((Log4JLogger)log).getLogger(), level, out);\n        }\n        else if (log instanceof Jdk14Logger) {\n          process(((Jdk14Logger)log).getLogger(), level, out);\n        }\n        else {\n          out.println(\"Sorry, \" + log.getClass() + \" not supported.\u003cbr /\u003e\");\n        }\n      }\n\n      out.println(FORMS);\n      out.println(ServletUtil.HTML_TAIL);\n    }",
      "path": "src/java/org/apache/hadoop/log/LogLevel.java",
      "extendedDetails": {}
    },
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-4687 Moving src directories on branch\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/core/branches/HADOOP-4687/core@776174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/05/09 9:20 PM",
      "commitName": "5128a9a453d64bfe1ed978cf9ffed27985eeef36",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,32 @@\n+    public void doGet(HttpServletRequest request, HttpServletResponse response\n+        ) throws ServletException, IOException {\n+      PrintWriter out \u003d ServletUtil.initHTML(response, \"Log Level\");\n+      String logName \u003d ServletUtil.getParameter(request, \"log\");\n+      String level \u003d ServletUtil.getParameter(request, \"level\");\n+\n+      if (logName !\u003d null) {\n+        out.println(\"\u003cbr /\u003e\u003chr /\u003e\u003ch3\u003eResults\u003c/h3\u003e\");\n+        out.println(MARKER\n+            + \"Submitted Log Name: \u003cb\u003e\" + logName + \"\u003c/b\u003e\u003cbr /\u003e\");\n+\n+        Log log \u003d LogFactory.getLog(logName);\n+        out.println(MARKER\n+            + \"Log Class: \u003cb\u003e\" + log.getClass().getName() +\"\u003c/b\u003e\u003cbr /\u003e\");\n+        if (level !\u003d null) {\n+          out.println(MARKER + \"Submitted Level: \u003cb\u003e\" + level + \"\u003c/b\u003e\u003cbr /\u003e\");\n+        }\n+\n+        if (log instanceof Log4JLogger) {\n+          process(((Log4JLogger)log).getLogger(), level, out);\n+        }\n+        else if (log instanceof Jdk14Logger) {\n+          process(((Jdk14Logger)log).getLogger(), level, out);\n+        }\n+        else {\n+          out.println(\"Sorry, \" + log.getClass() + \" not supported.\u003cbr /\u003e\");\n+        }\n+      }\n+\n+      out.println(FORMS);\n+      out.println(ServletUtil.HTML_TAIL);\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void doGet(HttpServletRequest request, HttpServletResponse response\n        ) throws ServletException, IOException {\n      PrintWriter out \u003d ServletUtil.initHTML(response, \"Log Level\");\n      String logName \u003d ServletUtil.getParameter(request, \"log\");\n      String level \u003d ServletUtil.getParameter(request, \"level\");\n\n      if (logName !\u003d null) {\n        out.println(\"\u003cbr /\u003e\u003chr /\u003e\u003ch3\u003eResults\u003c/h3\u003e\");\n        out.println(MARKER\n            + \"Submitted Log Name: \u003cb\u003e\" + logName + \"\u003c/b\u003e\u003cbr /\u003e\");\n\n        Log log \u003d LogFactory.getLog(logName);\n        out.println(MARKER\n            + \"Log Class: \u003cb\u003e\" + log.getClass().getName() +\"\u003c/b\u003e\u003cbr /\u003e\");\n        if (level !\u003d null) {\n          out.println(MARKER + \"Submitted Level: \u003cb\u003e\" + level + \"\u003c/b\u003e\u003cbr /\u003e\");\n        }\n\n        if (log instanceof Log4JLogger) {\n          process(((Log4JLogger)log).getLogger(), level, out);\n        }\n        else if (log instanceof Jdk14Logger) {\n          process(((Jdk14Logger)log).getLogger(), level, out);\n        }\n        else {\n          out.println(\"Sorry, \" + log.getClass() + \" not supported.\u003cbr /\u003e\");\n        }\n      }\n\n      out.println(FORMS);\n      out.println(ServletUtil.HTML_TAIL);\n    }",
      "path": "src/java/org/apache/hadoop/log/LogLevel.java"
    }
  }
}