{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Server.java",
  "functionName": "initLog",
  "functionId": "initLog",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/lib/server/Server.java",
  "functionStartLine": 412,
  "functionEndLine": 435,
  "numCommitsSeen": 12,
  "timeTaken": 708,
  "changeHistory": [
    "258c181ade54c36e99d865d727107fc01f203414",
    "3334306512b5dc932814fded31a89ba1ee97cd9f"
  ],
  "changeHistoryShort": {
    "258c181ade54c36e99d865d727107fc01f203414": "Ybodychange",
    "3334306512b5dc932814fded31a89ba1ee97cd9f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "258c181ade54c36e99d865d727107fc01f203414": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5352. Server#initLog() doesn\u0027t close InputStream in httpfs. Contributed by Ted Yu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1532158 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/10/13 6:17 PM",
      "commitName": "258c181ade54c36e99d865d727107fc01f203414",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "12/03/13 9:35 AM",
      "commitNameOld": "d49c50732e1520aec19305533faae5698b26dae3",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 216.36,
      "commitsBetweenForRepo": 1345,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,24 @@\n   protected void initLog() throws ServerException {\n     verifyDir(logDir);\n     LogManager.resetConfiguration();\n     File log4jFile \u003d new File(configDir, name + \"-log4j.properties\");\n     if (log4jFile.exists()) {\n       PropertyConfigurator.configureAndWatch(log4jFile.toString(), 10 * 1000); //every 10 secs\n       log \u003d LoggerFactory.getLogger(Server.class);\n     } else {\n       Properties props \u003d new Properties();\n       try {\n         InputStream is \u003d getResource(DEFAULT_LOG4J_PROPERTIES);\n-        props.load(is);\n+        try {\n+          props.load(is);\n+        } finally {\n+          is.close();\n+        }\n       } catch (IOException ex) {\n         throw new ServerException(ServerException.ERROR.S03, DEFAULT_LOG4J_PROPERTIES, ex.getMessage(), ex);\n       }\n       PropertyConfigurator.configure(props);\n       log \u003d LoggerFactory.getLogger(Server.class);\n       log.warn(\"Log4j [{}] configuration file not found, using default configuration from classpath\", log4jFile);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void initLog() throws ServerException {\n    verifyDir(logDir);\n    LogManager.resetConfiguration();\n    File log4jFile \u003d new File(configDir, name + \"-log4j.properties\");\n    if (log4jFile.exists()) {\n      PropertyConfigurator.configureAndWatch(log4jFile.toString(), 10 * 1000); //every 10 secs\n      log \u003d LoggerFactory.getLogger(Server.class);\n    } else {\n      Properties props \u003d new Properties();\n      try {\n        InputStream is \u003d getResource(DEFAULT_LOG4J_PROPERTIES);\n        try {\n          props.load(is);\n        } finally {\n          is.close();\n        }\n      } catch (IOException ex) {\n        throw new ServerException(ServerException.ERROR.S03, DEFAULT_LOG4J_PROPERTIES, ex.getMessage(), ex);\n      }\n      PropertyConfigurator.configure(props);\n      log \u003d LoggerFactory.getLogger(Server.class);\n      log.warn(\"Log4j [{}] configuration file not found, using default configuration from classpath\", log4jFile);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/lib/server/Server.java",
      "extendedDetails": {}
    },
    "3334306512b5dc932814fded31a89ba1ee97cd9f": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-2178. Contributing Hoop to HDFS, replacement for HDFS proxy with read/write capabilities. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1212060 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/12/11 11:25 AM",
      "commitName": "3334306512b5dc932814fded31a89ba1ee97cd9f",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,20 @@\n+  protected void initLog() throws ServerException {\n+    verifyDir(logDir);\n+    LogManager.resetConfiguration();\n+    File log4jFile \u003d new File(configDir, name + \"-log4j.properties\");\n+    if (log4jFile.exists()) {\n+      PropertyConfigurator.configureAndWatch(log4jFile.toString(), 10 * 1000); //every 10 secs\n+      log \u003d LoggerFactory.getLogger(Server.class);\n+    } else {\n+      Properties props \u003d new Properties();\n+      try {\n+        InputStream is \u003d getResource(DEFAULT_LOG4J_PROPERTIES);\n+        props.load(is);\n+      } catch (IOException ex) {\n+        throw new ServerException(ServerException.ERROR.S03, DEFAULT_LOG4J_PROPERTIES, ex.getMessage(), ex);\n+      }\n+      PropertyConfigurator.configure(props);\n+      log \u003d LoggerFactory.getLogger(Server.class);\n+      log.warn(\"Log4j [{}] configuration file not found, using default configuration from classpath\", log4jFile);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void initLog() throws ServerException {\n    verifyDir(logDir);\n    LogManager.resetConfiguration();\n    File log4jFile \u003d new File(configDir, name + \"-log4j.properties\");\n    if (log4jFile.exists()) {\n      PropertyConfigurator.configureAndWatch(log4jFile.toString(), 10 * 1000); //every 10 secs\n      log \u003d LoggerFactory.getLogger(Server.class);\n    } else {\n      Properties props \u003d new Properties();\n      try {\n        InputStream is \u003d getResource(DEFAULT_LOG4J_PROPERTIES);\n        props.load(is);\n      } catch (IOException ex) {\n        throw new ServerException(ServerException.ERROR.S03, DEFAULT_LOG4J_PROPERTIES, ex.getMessage(), ex);\n      }\n      PropertyConfigurator.configure(props);\n      log \u003d LoggerFactory.getLogger(Server.class);\n      log.warn(\"Log4j [{}] configuration file not found, using default configuration from classpath\", log4jFile);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/lib/server/Server.java"
    }
  }
}