{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMWebServices.java",
  "functionName": "getApp",
  "functionId": "getApp___hsr-HttpServletRequest(annotations-@Context)__appId-String(annotations-@PathParam(RMWSConsts.APPID))__unselectedFields-Set__String__(annotations-@QueryParam(RMWSConsts.DESELECTS))",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
  "functionStartLine": 1031,
  "functionEndLine": 1057,
  "numCommitsSeen": 177,
  "timeTaken": 7069,
  "changeHistory": [
    "10144a580e4647eb7d3d59d043608ffbf8cf090d",
    "d76fbbc9b82e720d7d5188f9ae2f56a8d78f3a98",
    "acda6b96a4e92e432bd1d97fa14004a11e70387e",
    "c1edca101c32a5999100bc6031784274d416b599",
    "547cb53e8ae2f19b55f9de7670b91b009d8f3bdd",
    "5092c94195a63bd2c3e36d5a74b4c061cea1b847",
    "edcecedc1c39d54db0f86a1325b4db26c38d2d4d",
    "990cffdcfa9349fff0cee144b1d0e5267c40f63d",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "e7583d816a69677bbaa4280deb58ea73dbc42cef",
    "0ea8570be578be60e2f32849900a1c50506d78d3"
  ],
  "changeHistoryShort": {
    "10144a580e4647eb7d3d59d043608ffbf8cf090d": "Ybodychange",
    "d76fbbc9b82e720d7d5188f9ae2f56a8d78f3a98": "Ybodychange",
    "acda6b96a4e92e432bd1d97fa14004a11e70387e": "Yparametermetachange",
    "c1edca101c32a5999100bc6031784274d416b599": "Ymultichange(Yparameterchange,Ybodychange)",
    "547cb53e8ae2f19b55f9de7670b91b009d8f3bdd": "Yparametermetachange",
    "5092c94195a63bd2c3e36d5a74b4c061cea1b847": "Ybodychange",
    "edcecedc1c39d54db0f86a1325b4db26c38d2d4d": "Ybodychange",
    "990cffdcfa9349fff0cee144b1d0e5267c40f63d": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "e7583d816a69677bbaa4280deb58ea73dbc42cef": "Ybodychange",
    "0ea8570be578be60e2f32849900a1c50506d78d3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "10144a580e4647eb7d3d59d043608ffbf8cf090d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9728. Bugfix for escaping illegal xml characters for Resource Manager REST API.\n           Contributed by Prabhu Joseph\n",
      "commitDate": "10/09/19 2:04 PM",
      "commitName": "10144a580e4647eb7d3d59d043608ffbf8cf090d",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "29/08/19 3:14 AM",
      "commitNameOld": "8c0759d02a9a530cfdd25e0a8f410cd74a8ac4c8",
      "commitAuthorOld": "Weiwei Yang",
      "daysBetweenCommits": 12.45,
      "commitsBetweenForRepo": 94,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,27 @@\n   public AppInfo getApp(@Context HttpServletRequest hsr,\n       @PathParam(RMWSConsts.APPID) String appId,\n       @QueryParam(RMWSConsts.DESELECTS) Set\u003cString\u003e unselectedFields) {\n     initForReadableEndpoints();\n \n     ApplicationId id \u003d WebAppUtils.parseApplicationId(recordFactory, appId);\n     RMApp app \u003d rm.getRMContext().getRMApps().get(id);\n     if (app \u003d\u003d null) {\n       throw new NotFoundException(\"app with id: \" + appId + \" not found\");\n     }\n \n     DeSelectFields deSelectFields \u003d new DeSelectFields();\n     deSelectFields.initFields(unselectedFields);\n \n-    return new AppInfo(rm, app, hasAccess(app, hsr), hsr.getScheme() + \"://\",\n-        deSelectFields);\n+    AppInfo appInfo \u003d  new AppInfo(rm, app, hasAccess(app, hsr),\n+        hsr.getScheme() + \"://\", deSelectFields);\n+\n+    if (filterInvalidXMLChars) {\n+      final String format \u003d hsr.getHeader(HttpHeaders.ACCEPT);\n+      if (format !\u003d null \u0026\u0026\n+          format.toLowerCase().contains(MediaType.APPLICATION_XML)) {\n+        appInfo.setNote(escapeInvalidXMLCharacters(appInfo.getNote()));\n+      }\n+    }\n+\n+    return appInfo;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public AppInfo getApp(@Context HttpServletRequest hsr,\n      @PathParam(RMWSConsts.APPID) String appId,\n      @QueryParam(RMWSConsts.DESELECTS) Set\u003cString\u003e unselectedFields) {\n    initForReadableEndpoints();\n\n    ApplicationId id \u003d WebAppUtils.parseApplicationId(recordFactory, appId);\n    RMApp app \u003d rm.getRMContext().getRMApps().get(id);\n    if (app \u003d\u003d null) {\n      throw new NotFoundException(\"app with id: \" + appId + \" not found\");\n    }\n\n    DeSelectFields deSelectFields \u003d new DeSelectFields();\n    deSelectFields.initFields(unselectedFields);\n\n    AppInfo appInfo \u003d  new AppInfo(rm, app, hasAccess(app, hsr),\n        hsr.getScheme() + \"://\", deSelectFields);\n\n    if (filterInvalidXMLChars) {\n      final String format \u003d hsr.getHeader(HttpHeaders.ACCEPT);\n      if (format !\u003d null \u0026\u0026\n          format.toLowerCase().contains(MediaType.APPLICATION_XML)) {\n        appInfo.setNote(escapeInvalidXMLCharacters(appInfo.getNote()));\n      }\n    }\n\n    return appInfo;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
      "extendedDetails": {}
    },
    "d76fbbc9b82e720d7d5188f9ae2f56a8d78f3a98": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8249. Fixed few REST APIs in RMWebServices to have static-user check. Contributed by Sunil Govindan.\n",
      "commitDate": "10/05/18 7:05 PM",
      "commitName": "d76fbbc9b82e720d7d5188f9ae2f56a8d78f3a98",
      "commitAuthor": "Vinod Kumar Vavilapalli (I am also known as @tshooter.)",
      "commitDateOld": "27/04/18 10:28 AM",
      "commitNameOld": "ef3ecc308dbea41c6a88bd4d16739c7bbc10cdda",
      "commitAuthorOld": "Rohith Sharma K S",
      "daysBetweenCommits": 13.36,
      "commitsBetweenForRepo": 87,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,17 @@\n   public AppInfo getApp(@Context HttpServletRequest hsr,\n       @PathParam(RMWSConsts.APPID) String appId,\n       @QueryParam(RMWSConsts.DESELECTS) Set\u003cString\u003e unselectedFields) {\n-    init();\n+    initForReadableEndpoints();\n+\n     ApplicationId id \u003d WebAppUtils.parseApplicationId(recordFactory, appId);\n     RMApp app \u003d rm.getRMContext().getRMApps().get(id);\n     if (app \u003d\u003d null) {\n       throw new NotFoundException(\"app with id: \" + appId + \" not found\");\n     }\n \n     DeSelectFields deSelectFields \u003d new DeSelectFields();\n     deSelectFields.initFields(unselectedFields);\n \n     return new AppInfo(rm, app, hasAccess(app, hsr), hsr.getScheme() + \"://\",\n         deSelectFields);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public AppInfo getApp(@Context HttpServletRequest hsr,\n      @PathParam(RMWSConsts.APPID) String appId,\n      @QueryParam(RMWSConsts.DESELECTS) Set\u003cString\u003e unselectedFields) {\n    initForReadableEndpoints();\n\n    ApplicationId id \u003d WebAppUtils.parseApplicationId(recordFactory, appId);\n    RMApp app \u003d rm.getRMContext().getRMApps().get(id);\n    if (app \u003d\u003d null) {\n      throw new NotFoundException(\"app with id: \" + appId + \" not found\");\n    }\n\n    DeSelectFields deSelectFields \u003d new DeSelectFields();\n    deSelectFields.initFields(unselectedFields);\n\n    return new AppInfo(rm, app, hasAccess(app, hsr), hsr.getScheme() + \"://\",\n        deSelectFields);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
      "extendedDetails": {}
    },
    "acda6b96a4e92e432bd1d97fa14004a11e70387e": {
      "type": "Yparametermetachange",
      "commitMessage": "YARN-5412. Create a proxy chain for ResourceManager REST API in the Router. (Contributed by Giovanni Matteo Fumarola via curino)\n\n(cherry picked from commit b6240b92abf453affc5fd64e1eedf2d29842aa75)\n",
      "commitDate": "01/08/17 5:28 PM",
      "commitName": "acda6b96a4e92e432bd1d97fa14004a11e70387e",
      "commitAuthor": "Carlo Curino",
      "commitDateOld": "28/07/17 3:44 PM",
      "commitNameOld": "bcde66bed1e41b5644811fe90bfbf3d56827db36",
      "commitAuthorOld": "Subru Krishnan",
      "daysBetweenCommits": 4.07,
      "commitsBetweenForRepo": 73,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   public AppInfo getApp(@Context HttpServletRequest hsr,\n       @PathParam(RMWSConsts.APPID) String appId,\n-      @QueryParam(\"deSelects\") Set\u003cString\u003e unselectedFields) {\n+      @QueryParam(RMWSConsts.DESELECTS) Set\u003cString\u003e unselectedFields) {\n     init();\n     ApplicationId id \u003d WebAppUtils.parseApplicationId(recordFactory, appId);\n     RMApp app \u003d rm.getRMContext().getRMApps().get(id);\n     if (app \u003d\u003d null) {\n       throw new NotFoundException(\"app with id: \" + appId + \" not found\");\n     }\n \n     DeSelectFields deSelectFields \u003d new DeSelectFields();\n     deSelectFields.initFields(unselectedFields);\n \n     return new AppInfo(rm, app, hasAccess(app, hsr), hsr.getScheme() + \"://\",\n         deSelectFields);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public AppInfo getApp(@Context HttpServletRequest hsr,\n      @PathParam(RMWSConsts.APPID) String appId,\n      @QueryParam(RMWSConsts.DESELECTS) Set\u003cString\u003e unselectedFields) {\n    init();\n    ApplicationId id \u003d WebAppUtils.parseApplicationId(recordFactory, appId);\n    RMApp app \u003d rm.getRMContext().getRMApps().get(id);\n    if (app \u003d\u003d null) {\n      throw new NotFoundException(\"app with id: \" + appId + \" not found\");\n    }\n\n    DeSelectFields deSelectFields \u003d new DeSelectFields();\n    deSelectFields.initFields(unselectedFields);\n\n    return new AppInfo(rm, app, hasAccess(app, hsr), hsr.getScheme() + \"://\",\n        deSelectFields);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
      "extendedDetails": {
        "oldValue": "[hsr-HttpServletRequest(annotations-@Context), appId-String(annotations-@PathParam(RMWSConsts.APPID)), unselectedFields-Set\u003cString\u003e(annotations-@QueryParam(\"deSelects\"))]",
        "newValue": "[hsr-HttpServletRequest(annotations-@Context), appId-String(annotations-@PathParam(RMWSConsts.APPID)), unselectedFields-Set\u003cString\u003e(annotations-@QueryParam(RMWSConsts.DESELECTS))]"
      }
    },
    "c1edca101c32a5999100bc6031784274d416b599": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-6280. Introduce deselect query param to skip ResourceRequest from getApp/getApps REST API. Contributed by Lantao Jin.\n",
      "commitDate": "28/06/17 3:40 PM",
      "commitName": "c1edca101c32a5999100bc6031784274d416b599",
      "commitAuthor": "Sunil G",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-6280. Introduce deselect query param to skip ResourceRequest from getApp/getApps REST API. Contributed by Lantao Jin.\n",
          "commitDate": "28/06/17 3:40 PM",
          "commitName": "c1edca101c32a5999100bc6031784274d416b599",
          "commitAuthor": "Sunil G",
          "commitDateOld": "07/06/17 1:41 PM",
          "commitNameOld": "547cb53e8ae2f19b55f9de7670b91b009d8f3bdd",
          "commitAuthorOld": "Carlo Curino",
          "daysBetweenCommits": 21.08,
          "commitsBetweenForRepo": 101,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,16 @@\n   public AppInfo getApp(@Context HttpServletRequest hsr,\n-      @PathParam(RMWSConsts.APPID) String appId) {\n+      @PathParam(RMWSConsts.APPID) String appId,\n+      @QueryParam(\"deSelects\") Set\u003cString\u003e unselectedFields) {\n     init();\n     ApplicationId id \u003d WebAppUtils.parseApplicationId(recordFactory, appId);\n     RMApp app \u003d rm.getRMContext().getRMApps().get(id);\n     if (app \u003d\u003d null) {\n       throw new NotFoundException(\"app with id: \" + appId + \" not found\");\n     }\n-    return new AppInfo(rm, app, hasAccess(app, hsr), hsr.getScheme() + \"://\");\n+\n+    DeSelectFields deSelectFields \u003d new DeSelectFields();\n+    deSelectFields.initFields(unselectedFields);\n+\n+    return new AppInfo(rm, app, hasAccess(app, hsr), hsr.getScheme() + \"://\",\n+        deSelectFields);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public AppInfo getApp(@Context HttpServletRequest hsr,\n      @PathParam(RMWSConsts.APPID) String appId,\n      @QueryParam(\"deSelects\") Set\u003cString\u003e unselectedFields) {\n    init();\n    ApplicationId id \u003d WebAppUtils.parseApplicationId(recordFactory, appId);\n    RMApp app \u003d rm.getRMContext().getRMApps().get(id);\n    if (app \u003d\u003d null) {\n      throw new NotFoundException(\"app with id: \" + appId + \" not found\");\n    }\n\n    DeSelectFields deSelectFields \u003d new DeSelectFields();\n    deSelectFields.initFields(unselectedFields);\n\n    return new AppInfo(rm, app, hasAccess(app, hsr), hsr.getScheme() + \"://\",\n        deSelectFields);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
          "extendedDetails": {
            "oldValue": "[hsr-HttpServletRequest(annotations-@Context), appId-String(annotations-@PathParam(RMWSConsts.APPID))]",
            "newValue": "[hsr-HttpServletRequest(annotations-@Context), appId-String(annotations-@PathParam(RMWSConsts.APPID)), unselectedFields-Set\u003cString\u003e(annotations-@QueryParam(\"deSelects\"))]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-6280. Introduce deselect query param to skip ResourceRequest from getApp/getApps REST API. Contributed by Lantao Jin.\n",
          "commitDate": "28/06/17 3:40 PM",
          "commitName": "c1edca101c32a5999100bc6031784274d416b599",
          "commitAuthor": "Sunil G",
          "commitDateOld": "07/06/17 1:41 PM",
          "commitNameOld": "547cb53e8ae2f19b55f9de7670b91b009d8f3bdd",
          "commitAuthorOld": "Carlo Curino",
          "daysBetweenCommits": 21.08,
          "commitsBetweenForRepo": 101,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,16 @@\n   public AppInfo getApp(@Context HttpServletRequest hsr,\n-      @PathParam(RMWSConsts.APPID) String appId) {\n+      @PathParam(RMWSConsts.APPID) String appId,\n+      @QueryParam(\"deSelects\") Set\u003cString\u003e unselectedFields) {\n     init();\n     ApplicationId id \u003d WebAppUtils.parseApplicationId(recordFactory, appId);\n     RMApp app \u003d rm.getRMContext().getRMApps().get(id);\n     if (app \u003d\u003d null) {\n       throw new NotFoundException(\"app with id: \" + appId + \" not found\");\n     }\n-    return new AppInfo(rm, app, hasAccess(app, hsr), hsr.getScheme() + \"://\");\n+\n+    DeSelectFields deSelectFields \u003d new DeSelectFields();\n+    deSelectFields.initFields(unselectedFields);\n+\n+    return new AppInfo(rm, app, hasAccess(app, hsr), hsr.getScheme() + \"://\",\n+        deSelectFields);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public AppInfo getApp(@Context HttpServletRequest hsr,\n      @PathParam(RMWSConsts.APPID) String appId,\n      @QueryParam(\"deSelects\") Set\u003cString\u003e unselectedFields) {\n    init();\n    ApplicationId id \u003d WebAppUtils.parseApplicationId(recordFactory, appId);\n    RMApp app \u003d rm.getRMContext().getRMApps().get(id);\n    if (app \u003d\u003d null) {\n      throw new NotFoundException(\"app with id: \" + appId + \" not found\");\n    }\n\n    DeSelectFields deSelectFields \u003d new DeSelectFields();\n    deSelectFields.initFields(unselectedFields);\n\n    return new AppInfo(rm, app, hasAccess(app, hsr), hsr.getScheme() + \"://\",\n        deSelectFields);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
          "extendedDetails": {}
        }
      ]
    },
    "547cb53e8ae2f19b55f9de7670b91b009d8f3bdd": {
      "type": "Yparametermetachange",
      "commitMessage": "YARN-6634. [API] Refactor ResourceManager WebServices to make API explicit. (Giovanni Matteo Fumarola via curino)\n",
      "commitDate": "07/06/17 1:41 PM",
      "commitName": "547cb53e8ae2f19b55f9de7670b91b009d8f3bdd",
      "commitAuthor": "Carlo Curino",
      "commitDateOld": "08/12/16 2:23 AM",
      "commitNameOld": "74d0066d3392169bec872f438a0818e2f5323010",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 181.43,
      "commitsBetweenForRepo": 954,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,10 @@\n   public AppInfo getApp(@Context HttpServletRequest hsr,\n-      @PathParam(\"appid\") String appId) {\n+      @PathParam(RMWSConsts.APPID) String appId) {\n     init();\n     ApplicationId id \u003d WebAppUtils.parseApplicationId(recordFactory, appId);\n     RMApp app \u003d rm.getRMContext().getRMApps().get(id);\n     if (app \u003d\u003d null) {\n       throw new NotFoundException(\"app with id: \" + appId + \" not found\");\n     }\n     return new AppInfo(rm, app, hasAccess(app, hsr), hsr.getScheme() + \"://\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public AppInfo getApp(@Context HttpServletRequest hsr,\n      @PathParam(RMWSConsts.APPID) String appId) {\n    init();\n    ApplicationId id \u003d WebAppUtils.parseApplicationId(recordFactory, appId);\n    RMApp app \u003d rm.getRMContext().getRMApps().get(id);\n    if (app \u003d\u003d null) {\n      throw new NotFoundException(\"app with id: \" + appId + \" not found\");\n    }\n    return new AppInfo(rm, app, hasAccess(app, hsr), hsr.getScheme() + \"://\");\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
      "extendedDetails": {
        "oldValue": "[hsr-HttpServletRequest(annotations-@Context), appId-String(annotations-@PathParam(\"appid\"))]",
        "newValue": "[hsr-HttpServletRequest(annotations-@Context), appId-String(annotations-@PathParam(RMWSConsts.APPID))]"
      }
    },
    "5092c94195a63bd2c3e36d5a74b4c061cea1b847": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4746. yarn web services should convert parse failures of appId, appAttemptId and containerId to 400. Contributed by Bibin A Chundatt\n",
      "commitDate": "04/04/16 3:55 AM",
      "commitName": "5092c94195a63bd2c3e36d5a74b4c061cea1b847",
      "commitAuthor": "naganarasimha",
      "commitDateOld": "10/02/16 10:19 AM",
      "commitNameOld": "b706cbc1bc0ab3572c01676fe7365df21eda7ffa",
      "commitAuthorOld": "\u003d",
      "daysBetweenCommits": 53.69,
      "commitsBetweenForRepo": 324,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,10 @@\n   public AppInfo getApp(@Context HttpServletRequest hsr,\n       @PathParam(\"appid\") String appId) {\n     init();\n-    if (appId \u003d\u003d null || appId.isEmpty()) {\n-      throw new NotFoundException(\"appId, \" + appId + \", is empty or null\");\n-    }\n-    ApplicationId id;\n-    id \u003d ConverterUtils.toApplicationId(recordFactory, appId);\n-    if (id \u003d\u003d null) {\n-      throw new NotFoundException(\"appId is null\");\n-    }\n+    ApplicationId id \u003d WebAppUtils.parseApplicationId(recordFactory, appId);\n     RMApp app \u003d rm.getRMContext().getRMApps().get(id);\n     if (app \u003d\u003d null) {\n       throw new NotFoundException(\"app with id: \" + appId + \" not found\");\n     }\n     return new AppInfo(rm, app, hasAccess(app, hsr), hsr.getScheme() + \"://\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public AppInfo getApp(@Context HttpServletRequest hsr,\n      @PathParam(\"appid\") String appId) {\n    init();\n    ApplicationId id \u003d WebAppUtils.parseApplicationId(recordFactory, appId);\n    RMApp app \u003d rm.getRMContext().getRMApps().get(id);\n    if (app \u003d\u003d null) {\n      throw new NotFoundException(\"app with id: \" + appId + \" not found\");\n    }\n    return new AppInfo(rm, app, hasAccess(app, hsr), hsr.getScheme() + \"://\");\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
      "extendedDetails": {}
    },
    "edcecedc1c39d54db0f86a1325b4db26c38d2d4d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3262. Surface application outstanding resource requests table in RM web UI. (Jian He via wangda)\n",
      "commitDate": "27/02/15 4:13 PM",
      "commitName": "edcecedc1c39d54db0f86a1325b4db26c38d2d4d",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "24/02/15 7:32 AM",
      "commitNameOld": "9cedad11d8d2197a54732667a15344983de5c437",
      "commitAuthorOld": "Tsuyoshi Ozawa",
      "daysBetweenCommits": 3.36,
      "commitsBetweenForRepo": 36,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   public AppInfo getApp(@Context HttpServletRequest hsr,\n       @PathParam(\"appid\") String appId) {\n     init();\n     if (appId \u003d\u003d null || appId.isEmpty()) {\n       throw new NotFoundException(\"appId, \" + appId + \", is empty or null\");\n     }\n     ApplicationId id;\n     id \u003d ConverterUtils.toApplicationId(recordFactory, appId);\n     if (id \u003d\u003d null) {\n       throw new NotFoundException(\"appId is null\");\n     }\n     RMApp app \u003d rm.getRMContext().getRMApps().get(id);\n     if (app \u003d\u003d null) {\n       throw new NotFoundException(\"app with id: \" + appId + \" not found\");\n     }\n-    return new AppInfo(app, hasAccess(app, hsr), hsr.getScheme() + \"://\");\n+    return new AppInfo(rm, app, hasAccess(app, hsr), hsr.getScheme() + \"://\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public AppInfo getApp(@Context HttpServletRequest hsr,\n      @PathParam(\"appid\") String appId) {\n    init();\n    if (appId \u003d\u003d null || appId.isEmpty()) {\n      throw new NotFoundException(\"appId, \" + appId + \", is empty or null\");\n    }\n    ApplicationId id;\n    id \u003d ConverterUtils.toApplicationId(recordFactory, appId);\n    if (id \u003d\u003d null) {\n      throw new NotFoundException(\"appId is null\");\n    }\n    RMApp app \u003d rm.getRMContext().getRMApps().get(id);\n    if (app \u003d\u003d null) {\n      throw new NotFoundException(\"app with id: \" + appId + \" not found\");\n    }\n    return new AppInfo(rm, app, hasAccess(app, hsr), hsr.getScheme() + \"://\");\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
      "extendedDetails": {}
    },
    "990cffdcfa9349fff0cee144b1d0e5267c40f63d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1553. Modified YARN and MR to stop using HttpConfig.isSecure() and\ninstead rely on the http policy framework. And also fix some bugs related\nto https handling in YARN web-apps. Contributed by Haohui Mai.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1568501 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/02/14 12:01 PM",
      "commitName": "990cffdcfa9349fff0cee144b1d0e5267c40f63d",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "04/02/14 8:55 PM",
      "commitNameOld": "ebe0c17a95ae37d4768f2928ea193e89db34ead5",
      "commitAuthorOld": "Zhijie Shen",
      "daysBetweenCommits": 9.63,
      "commitsBetweenForRepo": 78,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   public AppInfo getApp(@Context HttpServletRequest hsr,\n       @PathParam(\"appid\") String appId) {\n     init();\n     if (appId \u003d\u003d null || appId.isEmpty()) {\n       throw new NotFoundException(\"appId, \" + appId + \", is empty or null\");\n     }\n     ApplicationId id;\n     id \u003d ConverterUtils.toApplicationId(recordFactory, appId);\n     if (id \u003d\u003d null) {\n       throw new NotFoundException(\"appId is null\");\n     }\n     RMApp app \u003d rm.getRMContext().getRMApps().get(id);\n     if (app \u003d\u003d null) {\n       throw new NotFoundException(\"app with id: \" + appId + \" not found\");\n     }\n-    return new AppInfo(app, hasAccess(app, hsr));\n+    return new AppInfo(app, hasAccess(app, hsr), hsr.getScheme() + \"://\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public AppInfo getApp(@Context HttpServletRequest hsr,\n      @PathParam(\"appid\") String appId) {\n    init();\n    if (appId \u003d\u003d null || appId.isEmpty()) {\n      throw new NotFoundException(\"appId, \" + appId + \", is empty or null\");\n    }\n    ApplicationId id;\n    id \u003d ConverterUtils.toApplicationId(recordFactory, appId);\n    if (id \u003d\u003d null) {\n      throw new NotFoundException(\"appId is null\");\n    }\n    RMApp app \u003d rm.getRMContext().getRMApps().get(id);\n    if (app \u003d\u003d null) {\n      throw new NotFoundException(\"app with id: \" + appId + \" not found\");\n    }\n    return new AppInfo(app, hasAccess(app, hsr), hsr.getScheme() + \"://\");\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public AppInfo getApp(@Context HttpServletRequest hsr,\n      @PathParam(\"appid\") String appId) {\n    init();\n    if (appId \u003d\u003d null || appId.isEmpty()) {\n      throw new NotFoundException(\"appId, \" + appId + \", is empty or null\");\n    }\n    ApplicationId id;\n    id \u003d ConverterUtils.toApplicationId(recordFactory, appId);\n    if (id \u003d\u003d null) {\n      throw new NotFoundException(\"appId is null\");\n    }\n    RMApp app \u003d rm.getRMContext().getRMApps().get(id);\n    if (app \u003d\u003d null) {\n      throw new NotFoundException(\"app with id: \" + appId + \" not found\");\n    }\n    return new AppInfo(app, hasAccess(app, hsr));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java"
      }
    },
    "e7583d816a69677bbaa4280deb58ea73dbc42cef": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3613. web service calls header contains 2 content types (tgraves)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1330560 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/04/12 2:13 PM",
      "commitName": "e7583d816a69677bbaa4280deb58ea73dbc42cef",
      "commitAuthor": "Thomas Graves",
      "commitDateOld": "02/04/12 2:06 PM",
      "commitNameOld": "01ce7ba3a4af867763e437ce46a4f5e1d6e5a6bf",
      "commitAuthorOld": "Robert Joseph Evans",
      "daysBetweenCommits": 23.0,
      "commitsBetweenForRepo": 193,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,17 @@\n   public AppInfo getApp(@Context HttpServletRequest hsr,\n       @PathParam(\"appid\") String appId) {\n+    init();\n     if (appId \u003d\u003d null || appId.isEmpty()) {\n       throw new NotFoundException(\"appId, \" + appId + \", is empty or null\");\n     }\n     ApplicationId id;\n     id \u003d ConverterUtils.toApplicationId(recordFactory, appId);\n     if (id \u003d\u003d null) {\n       throw new NotFoundException(\"appId is null\");\n     }\n     RMApp app \u003d rm.getRMContext().getRMApps().get(id);\n     if (app \u003d\u003d null) {\n       throw new NotFoundException(\"app with id: \" + appId + \" not found\");\n     }\n     return new AppInfo(app, hasAccess(app, hsr));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public AppInfo getApp(@Context HttpServletRequest hsr,\n      @PathParam(\"appid\") String appId) {\n    init();\n    if (appId \u003d\u003d null || appId.isEmpty()) {\n      throw new NotFoundException(\"appId, \" + appId + \", is empty or null\");\n    }\n    ApplicationId id;\n    id \u003d ConverterUtils.toApplicationId(recordFactory, appId);\n    if (id \u003d\u003d null) {\n      throw new NotFoundException(\"appId is null\");\n    }\n    RMApp app \u003d rm.getRMContext().getRMApps().get(id);\n    if (app \u003d\u003d null) {\n      throw new NotFoundException(\"app with id: \" + appId + \" not found\");\n    }\n    return new AppInfo(app, hasAccess(app, hsr));\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
      "extendedDetails": {}
    },
    "0ea8570be578be60e2f32849900a1c50506d78d3": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-2863. Support web services for YARN and MR components. (Thomas Graves via vinodkv)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1213975 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/12/11 3:05 PM",
      "commitName": "0ea8570be578be60e2f32849900a1c50506d78d3",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,16 @@\n+  public AppInfo getApp(@Context HttpServletRequest hsr,\n+      @PathParam(\"appid\") String appId) {\n+    if (appId \u003d\u003d null || appId.isEmpty()) {\n+      throw new NotFoundException(\"appId, \" + appId + \", is empty or null\");\n+    }\n+    ApplicationId id;\n+    id \u003d ConverterUtils.toApplicationId(recordFactory, appId);\n+    if (id \u003d\u003d null) {\n+      throw new NotFoundException(\"appId is null\");\n+    }\n+    RMApp app \u003d rm.getRMContext().getRMApps().get(id);\n+    if (app \u003d\u003d null) {\n+      throw new NotFoundException(\"app with id: \" + appId + \" not found\");\n+    }\n+    return new AppInfo(app, hasAccess(app, hsr));\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public AppInfo getApp(@Context HttpServletRequest hsr,\n      @PathParam(\"appid\") String appId) {\n    if (appId \u003d\u003d null || appId.isEmpty()) {\n      throw new NotFoundException(\"appId, \" + appId + \", is empty or null\");\n    }\n    ApplicationId id;\n    id \u003d ConverterUtils.toApplicationId(recordFactory, appId);\n    if (id \u003d\u003d null) {\n      throw new NotFoundException(\"appId is null\");\n    }\n    RMApp app \u003d rm.getRMContext().getRMApps().get(id);\n    if (app \u003d\u003d null) {\n      throw new NotFoundException(\"app with id: \" + appId + \" not found\");\n    }\n    return new AppInfo(app, hasAccess(app, hsr));\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java"
    }
  }
}