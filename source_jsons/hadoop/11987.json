{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FsDatasetImpl.java",
  "functionName": "recoverAppend",
  "functionId": "recoverAppend___b-ExtendedBlock__newGS-long__expectedBlockLen-long",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
  "functionStartLine": 1371,
  "functionEndLine": 1401,
  "numCommitsSeen": 230,
  "timeTaken": 14639,
  "changeHistory": [
    "d7c136b9ed6d99e1b03f5b89723b3a20df359ba8",
    "86c9862bec0248d671e657aa56094a2919b8ac14",
    "8c0638471f8f1dd47667b2d6727d4d2d54e4b48c",
    "4bd7cbc29d142fc56324156333b9a8a7d7b68042",
    "f6b1a818124cc42688c4c5acaf537d96cf00e43b",
    "b7f4a3156c0f5c600816c469637237ba6c9b330c",
    "bc13dfb1426944ce45293cb8f444239a7406762c",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "d7c136b9ed6d99e1b03f5b89723b3a20df359ba8": "Ybodychange",
    "86c9862bec0248d671e657aa56094a2919b8ac14": "Ybodychange",
    "8c0638471f8f1dd47667b2d6727d4d2d54e4b48c": "Ybodychange",
    "4bd7cbc29d142fc56324156333b9a8a7d7b68042": "Ymodifierchange",
    "f6b1a818124cc42688c4c5acaf537d96cf00e43b": "Ybodychange",
    "b7f4a3156c0f5c600816c469637237ba6c9b330c": "Ymultichange(Yreturntypechange,Ybodychange)",
    "bc13dfb1426944ce45293cb8f444239a7406762c": "Ymultichange(Ymovefromfile,Yreturntypechange,Ybodychange)",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d7c136b9ed6d99e1b03f5b89723b3a20df359ba8": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-15150. Introduce read write lock to Datanode. Contributed Stephen O\u0027Donnell.\n\nSigned-off-by: Wei-Chiu Chuang \u003cweichiu@apache.org\u003e\n",
      "commitDate": "11/02/20 8:00 AM",
      "commitName": "d7c136b9ed6d99e1b03f5b89723b3a20df359ba8",
      "commitAuthor": "Stephen O\u0027Donnell",
      "commitDateOld": "28/01/20 10:10 AM",
      "commitNameOld": "1839c467f60cbb8592d446694ec3d7710cda5142",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 13.91,
      "commitsBetweenForRepo": 33,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,31 @@\n   public ReplicaHandler recoverAppend(\n       ExtendedBlock b, long newGS, long expectedBlockLen) throws IOException {\n     LOG.info(\"Recover failed append to \" + b);\n \n     while (true) {\n       try {\n-        try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n+        try (AutoCloseableLock lock \u003d datasetWriteLock.acquire()) {\n           ReplicaInfo replicaInfo \u003d recoverCheck(b, newGS, expectedBlockLen);\n           FsVolumeReference ref \u003d replicaInfo.getVolume().obtainReference();\n           ReplicaInPipeline replica;\n           try {\n             // change the replica\u0027s state/gs etc.\n             if (replicaInfo.getState() \u003d\u003d ReplicaState.FINALIZED) {\n               replica \u003d append(b.getBlockPoolId(), replicaInfo,\n                                newGS, b.getNumBytes());\n             } else { //RBW\n               replicaInfo.bumpReplicaGS(newGS);\n               replica \u003d (ReplicaInPipeline) replicaInfo;\n             }\n           } catch (IOException e) {\n             IOUtils.cleanup(null, ref);\n             throw e;\n           }\n           return new ReplicaHandler(replica, ref);\n         }\n       } catch (MustStopExistingWriter e) {\n         e.getReplicaInPipeline()\n             .stopWriter(datanode.getDnConf().getXceiverStopTimeout());\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ReplicaHandler recoverAppend(\n      ExtendedBlock b, long newGS, long expectedBlockLen) throws IOException {\n    LOG.info(\"Recover failed append to \" + b);\n\n    while (true) {\n      try {\n        try (AutoCloseableLock lock \u003d datasetWriteLock.acquire()) {\n          ReplicaInfo replicaInfo \u003d recoverCheck(b, newGS, expectedBlockLen);\n          FsVolumeReference ref \u003d replicaInfo.getVolume().obtainReference();\n          ReplicaInPipeline replica;\n          try {\n            // change the replica\u0027s state/gs etc.\n            if (replicaInfo.getState() \u003d\u003d ReplicaState.FINALIZED) {\n              replica \u003d append(b.getBlockPoolId(), replicaInfo,\n                               newGS, b.getNumBytes());\n            } else { //RBW\n              replicaInfo.bumpReplicaGS(newGS);\n              replica \u003d (ReplicaInPipeline) replicaInfo;\n            }\n          } catch (IOException e) {\n            IOUtils.cleanup(null, ref);\n            throw e;\n          }\n          return new ReplicaHandler(replica, ref);\n        }\n      } catch (MustStopExistingWriter e) {\n        e.getReplicaInPipeline()\n            .stopWriter(datanode.getDnConf().getXceiverStopTimeout());\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
      "extendedDetails": {}
    },
    "86c9862bec0248d671e657aa56094a2919b8ac14": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10636. Modify ReplicaInfo to remove the assumption that replica metadata and data are stored in java.io.File. (Virajith Jalaparti via lei)\n",
      "commitDate": "13/09/16 12:54 PM",
      "commitName": "86c9862bec0248d671e657aa56094a2919b8ac14",
      "commitAuthor": "Lei Xu",
      "commitDateOld": "10/09/16 6:22 PM",
      "commitNameOld": "a99bf26a0899bcc4307c3a242c8414eaef555aa7",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 2.77,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,31 @@\n   public ReplicaHandler recoverAppend(\n       ExtendedBlock b, long newGS, long expectedBlockLen) throws IOException {\n     LOG.info(\"Recover failed append to \" + b);\n \n     while (true) {\n       try {\n         try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n           ReplicaInfo replicaInfo \u003d recoverCheck(b, newGS, expectedBlockLen);\n-\n           FsVolumeReference ref \u003d replicaInfo.getVolume().obtainReference();\n-          ReplicaBeingWritten replica;\n+          ReplicaInPipeline replica;\n           try {\n             // change the replica\u0027s state/gs etc.\n             if (replicaInfo.getState() \u003d\u003d ReplicaState.FINALIZED) {\n-              replica \u003d append(b.getBlockPoolId(), (FinalizedReplica) replicaInfo,\n+              replica \u003d append(b.getBlockPoolId(), replicaInfo,\n                                newGS, b.getNumBytes());\n             } else { //RBW\n-              bumpReplicaGS(replicaInfo, newGS);\n-              replica \u003d (ReplicaBeingWritten) replicaInfo;\n+              replicaInfo.bumpReplicaGS(newGS);\n+              replica \u003d (ReplicaInPipeline) replicaInfo;\n             }\n           } catch (IOException e) {\n             IOUtils.cleanup(null, ref);\n             throw e;\n           }\n           return new ReplicaHandler(replica, ref);\n         }\n       } catch (MustStopExistingWriter e) {\n-        e.getReplica().stopWriter(datanode.getDnConf().getXceiverStopTimeout());\n+        e.getReplicaInPipeline()\n+            .stopWriter(datanode.getDnConf().getXceiverStopTimeout());\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ReplicaHandler recoverAppend(\n      ExtendedBlock b, long newGS, long expectedBlockLen) throws IOException {\n    LOG.info(\"Recover failed append to \" + b);\n\n    while (true) {\n      try {\n        try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n          ReplicaInfo replicaInfo \u003d recoverCheck(b, newGS, expectedBlockLen);\n          FsVolumeReference ref \u003d replicaInfo.getVolume().obtainReference();\n          ReplicaInPipeline replica;\n          try {\n            // change the replica\u0027s state/gs etc.\n            if (replicaInfo.getState() \u003d\u003d ReplicaState.FINALIZED) {\n              replica \u003d append(b.getBlockPoolId(), replicaInfo,\n                               newGS, b.getNumBytes());\n            } else { //RBW\n              replicaInfo.bumpReplicaGS(newGS);\n              replica \u003d (ReplicaInPipeline) replicaInfo;\n            }\n          } catch (IOException e) {\n            IOUtils.cleanup(null, ref);\n            throw e;\n          }\n          return new ReplicaHandler(replica, ref);\n        }\n      } catch (MustStopExistingWriter e) {\n        e.getReplicaInPipeline()\n            .stopWriter(datanode.getDnConf().getXceiverStopTimeout());\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
      "extendedDetails": {}
    },
    "8c0638471f8f1dd47667b2d6727d4d2d54e4b48c": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10682. Replace FsDatasetImpl object lock with a separate lock object. (Chen Liang)\n",
      "commitDate": "08/08/16 12:02 PM",
      "commitName": "8c0638471f8f1dd47667b2d6727d4d2d54e4b48c",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "08/07/16 7:40 PM",
      "commitNameOld": "da6f1b88dd47e22b24d44f6fc8bbee73e85746f7",
      "commitAuthorOld": "Yongjun Zhang",
      "daysBetweenCommits": 30.68,
      "commitsBetweenForRepo": 320,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,31 @@\n   public ReplicaHandler recoverAppend(\n       ExtendedBlock b, long newGS, long expectedBlockLen) throws IOException {\n     LOG.info(\"Recover failed append to \" + b);\n \n     while (true) {\n       try {\n-        synchronized (this) {\n+        try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n           ReplicaInfo replicaInfo \u003d recoverCheck(b, newGS, expectedBlockLen);\n \n           FsVolumeReference ref \u003d replicaInfo.getVolume().obtainReference();\n           ReplicaBeingWritten replica;\n           try {\n             // change the replica\u0027s state/gs etc.\n             if (replicaInfo.getState() \u003d\u003d ReplicaState.FINALIZED) {\n               replica \u003d append(b.getBlockPoolId(), (FinalizedReplica) replicaInfo,\n                                newGS, b.getNumBytes());\n             } else { //RBW\n               bumpReplicaGS(replicaInfo, newGS);\n               replica \u003d (ReplicaBeingWritten) replicaInfo;\n             }\n           } catch (IOException e) {\n             IOUtils.cleanup(null, ref);\n             throw e;\n           }\n           return new ReplicaHandler(replica, ref);\n         }\n       } catch (MustStopExistingWriter e) {\n         e.getReplica().stopWriter(datanode.getDnConf().getXceiverStopTimeout());\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ReplicaHandler recoverAppend(\n      ExtendedBlock b, long newGS, long expectedBlockLen) throws IOException {\n    LOG.info(\"Recover failed append to \" + b);\n\n    while (true) {\n      try {\n        try (AutoCloseableLock lock \u003d datasetLock.acquire()) {\n          ReplicaInfo replicaInfo \u003d recoverCheck(b, newGS, expectedBlockLen);\n\n          FsVolumeReference ref \u003d replicaInfo.getVolume().obtainReference();\n          ReplicaBeingWritten replica;\n          try {\n            // change the replica\u0027s state/gs etc.\n            if (replicaInfo.getState() \u003d\u003d ReplicaState.FINALIZED) {\n              replica \u003d append(b.getBlockPoolId(), (FinalizedReplica) replicaInfo,\n                               newGS, b.getNumBytes());\n            } else { //RBW\n              bumpReplicaGS(replicaInfo, newGS);\n              replica \u003d (ReplicaBeingWritten) replicaInfo;\n            }\n          } catch (IOException e) {\n            IOUtils.cleanup(null, ref);\n            throw e;\n          }\n          return new ReplicaHandler(replica, ref);\n        }\n      } catch (MustStopExistingWriter e) {\n        e.getReplica().stopWriter(datanode.getDnConf().getXceiverStopTimeout());\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
      "extendedDetails": {}
    },
    "4bd7cbc29d142fc56324156333b9a8a7d7b68042": {
      "type": "Ymodifierchange",
      "commitMessage": "HDFS-10267. Extra \"synchronized\" on FsDatasetImpl#recoverAppend and FsDatasetImpl#recoverClose\n",
      "commitDate": "06/04/16 9:07 PM",
      "commitName": "4bd7cbc29d142fc56324156333b9a8a7d7b68042",
      "commitAuthor": "Colin Patrick Mccabe",
      "commitDateOld": "04/04/16 6:02 PM",
      "commitNameOld": "f6b1a818124cc42688c4c5acaf537d96cf00e43b",
      "commitAuthorOld": "Colin Patrick Mccabe",
      "daysBetweenCommits": 2.13,
      "commitsBetweenForRepo": 21,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,31 @@\n-  public synchronized ReplicaHandler recoverAppend(\n+  public ReplicaHandler recoverAppend(\n       ExtendedBlock b, long newGS, long expectedBlockLen) throws IOException {\n     LOG.info(\"Recover failed append to \" + b);\n \n     while (true) {\n       try {\n         synchronized (this) {\n           ReplicaInfo replicaInfo \u003d recoverCheck(b, newGS, expectedBlockLen);\n \n           FsVolumeReference ref \u003d replicaInfo.getVolume().obtainReference();\n           ReplicaBeingWritten replica;\n           try {\n             // change the replica\u0027s state/gs etc.\n             if (replicaInfo.getState() \u003d\u003d ReplicaState.FINALIZED) {\n               replica \u003d append(b.getBlockPoolId(), (FinalizedReplica) replicaInfo,\n                                newGS, b.getNumBytes());\n             } else { //RBW\n               bumpReplicaGS(replicaInfo, newGS);\n               replica \u003d (ReplicaBeingWritten) replicaInfo;\n             }\n           } catch (IOException e) {\n             IOUtils.cleanup(null, ref);\n             throw e;\n           }\n           return new ReplicaHandler(replica, ref);\n         }\n       } catch (MustStopExistingWriter e) {\n         e.getReplica().stopWriter(datanode.getDnConf().getXceiverStopTimeout());\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ReplicaHandler recoverAppend(\n      ExtendedBlock b, long newGS, long expectedBlockLen) throws IOException {\n    LOG.info(\"Recover failed append to \" + b);\n\n    while (true) {\n      try {\n        synchronized (this) {\n          ReplicaInfo replicaInfo \u003d recoverCheck(b, newGS, expectedBlockLen);\n\n          FsVolumeReference ref \u003d replicaInfo.getVolume().obtainReference();\n          ReplicaBeingWritten replica;\n          try {\n            // change the replica\u0027s state/gs etc.\n            if (replicaInfo.getState() \u003d\u003d ReplicaState.FINALIZED) {\n              replica \u003d append(b.getBlockPoolId(), (FinalizedReplica) replicaInfo,\n                               newGS, b.getNumBytes());\n            } else { //RBW\n              bumpReplicaGS(replicaInfo, newGS);\n              replica \u003d (ReplicaBeingWritten) replicaInfo;\n            }\n          } catch (IOException e) {\n            IOUtils.cleanup(null, ref);\n            throw e;\n          }\n          return new ReplicaHandler(replica, ref);\n        }\n      } catch (MustStopExistingWriter e) {\n        e.getReplica().stopWriter(datanode.getDnConf().getXceiverStopTimeout());\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
      "extendedDetails": {
        "oldValue": "[public, synchronized]",
        "newValue": "[public]"
      }
    },
    "f6b1a818124cc42688c4c5acaf537d96cf00e43b": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8496. Calling stopWriter() with FSDatasetImpl lock held may block other threads (cmccabe)\n",
      "commitDate": "04/04/16 6:02 PM",
      "commitName": "f6b1a818124cc42688c4c5acaf537d96cf00e43b",
      "commitAuthor": "Colin Patrick Mccabe",
      "commitDateOld": "18/03/16 8:24 AM",
      "commitNameOld": "63c966a3fbeb675959fc4101e65de9f57aecd17d",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 17.4,
      "commitsBetweenForRepo": 95,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,31 @@\n   public synchronized ReplicaHandler recoverAppend(\n       ExtendedBlock b, long newGS, long expectedBlockLen) throws IOException {\n     LOG.info(\"Recover failed append to \" + b);\n \n-    ReplicaInfo replicaInfo \u003d recoverCheck(b, newGS, expectedBlockLen);\n+    while (true) {\n+      try {\n+        synchronized (this) {\n+          ReplicaInfo replicaInfo \u003d recoverCheck(b, newGS, expectedBlockLen);\n \n-    FsVolumeReference ref \u003d replicaInfo.getVolume().obtainReference();\n-    ReplicaBeingWritten replica;\n-    try {\n-      // change the replica\u0027s state/gs etc.\n-      if (replicaInfo.getState() \u003d\u003d ReplicaState.FINALIZED) {\n-        replica \u003d append(b.getBlockPoolId(), (FinalizedReplica) replicaInfo,\n-                         newGS, b.getNumBytes());\n-      } else { //RBW\n-        bumpReplicaGS(replicaInfo, newGS);\n-        replica \u003d (ReplicaBeingWritten) replicaInfo;\n+          FsVolumeReference ref \u003d replicaInfo.getVolume().obtainReference();\n+          ReplicaBeingWritten replica;\n+          try {\n+            // change the replica\u0027s state/gs etc.\n+            if (replicaInfo.getState() \u003d\u003d ReplicaState.FINALIZED) {\n+              replica \u003d append(b.getBlockPoolId(), (FinalizedReplica) replicaInfo,\n+                               newGS, b.getNumBytes());\n+            } else { //RBW\n+              bumpReplicaGS(replicaInfo, newGS);\n+              replica \u003d (ReplicaBeingWritten) replicaInfo;\n+            }\n+          } catch (IOException e) {\n+            IOUtils.cleanup(null, ref);\n+            throw e;\n+          }\n+          return new ReplicaHandler(replica, ref);\n+        }\n+      } catch (MustStopExistingWriter e) {\n+        e.getReplica().stopWriter(datanode.getDnConf().getXceiverStopTimeout());\n       }\n-    } catch (IOException e) {\n-      IOUtils.cleanup(null, ref);\n-      throw e;\n     }\n-    return new ReplicaHandler(replica, ref);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized ReplicaHandler recoverAppend(\n      ExtendedBlock b, long newGS, long expectedBlockLen) throws IOException {\n    LOG.info(\"Recover failed append to \" + b);\n\n    while (true) {\n      try {\n        synchronized (this) {\n          ReplicaInfo replicaInfo \u003d recoverCheck(b, newGS, expectedBlockLen);\n\n          FsVolumeReference ref \u003d replicaInfo.getVolume().obtainReference();\n          ReplicaBeingWritten replica;\n          try {\n            // change the replica\u0027s state/gs etc.\n            if (replicaInfo.getState() \u003d\u003d ReplicaState.FINALIZED) {\n              replica \u003d append(b.getBlockPoolId(), (FinalizedReplica) replicaInfo,\n                               newGS, b.getNumBytes());\n            } else { //RBW\n              bumpReplicaGS(replicaInfo, newGS);\n              replica \u003d (ReplicaBeingWritten) replicaInfo;\n            }\n          } catch (IOException e) {\n            IOUtils.cleanup(null, ref);\n            throw e;\n          }\n          return new ReplicaHandler(replica, ref);\n        }\n      } catch (MustStopExistingWriter e) {\n        e.getReplica().stopWriter(datanode.getDnConf().getXceiverStopTimeout());\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
      "extendedDetails": {}
    },
    "b7f4a3156c0f5c600816c469637237ba6c9b330c": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-7496. Fix FsVolume removal race conditions on the DataNode by reference-counting the volume instances (lei via cmccabe)\n",
      "commitDate": "20/01/15 7:05 PM",
      "commitName": "b7f4a3156c0f5c600816c469637237ba6c9b330c",
      "commitAuthor": "Colin Patrick Mccabe",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-7496. Fix FsVolume removal race conditions on the DataNode by reference-counting the volume instances (lei via cmccabe)\n",
          "commitDate": "20/01/15 7:05 PM",
          "commitName": "b7f4a3156c0f5c600816c469637237ba6c9b330c",
          "commitAuthor": "Colin Patrick Mccabe",
          "commitDateOld": "13/01/15 12:24 AM",
          "commitNameOld": "08ac06283a3e9bf0d49d873823aabd419b08e41f",
          "commitAuthorOld": "Konstantin V Shvachko",
          "daysBetweenCommits": 7.78,
          "commitsBetweenForRepo": 49,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,23 @@\n-  public synchronized ReplicaInPipeline recoverAppend(ExtendedBlock b,\n-      long newGS, long expectedBlockLen) throws IOException {\n+  public synchronized ReplicaHandler recoverAppend(\n+      ExtendedBlock b, long newGS, long expectedBlockLen) throws IOException {\n     LOG.info(\"Recover failed append to \" + b);\n \n     ReplicaInfo replicaInfo \u003d recoverCheck(b, newGS, expectedBlockLen);\n \n-    // change the replica\u0027s state/gs etc.\n-    if (replicaInfo.getState() \u003d\u003d ReplicaState.FINALIZED ) {\n-      return append(b.getBlockPoolId(), (FinalizedReplica) replicaInfo, newGS, \n-          b.getNumBytes());\n-    } else { //RBW\n-      bumpReplicaGS(replicaInfo, newGS);\n-      return (ReplicaBeingWritten)replicaInfo;\n+    FsVolumeReference ref \u003d replicaInfo.getVolume().obtainReference();\n+    ReplicaBeingWritten replica;\n+    try {\n+      // change the replica\u0027s state/gs etc.\n+      if (replicaInfo.getState() \u003d\u003d ReplicaState.FINALIZED) {\n+        replica \u003d append(b.getBlockPoolId(), (FinalizedReplica) replicaInfo,\n+                         newGS, b.getNumBytes());\n+      } else { //RBW\n+        bumpReplicaGS(replicaInfo, newGS);\n+        replica \u003d (ReplicaBeingWritten) replicaInfo;\n+      }\n+    } catch (IOException e) {\n+      IOUtils.cleanup(null, ref);\n+      throw e;\n     }\n+    return new ReplicaHandler(replica, ref);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized ReplicaHandler recoverAppend(\n      ExtendedBlock b, long newGS, long expectedBlockLen) throws IOException {\n    LOG.info(\"Recover failed append to \" + b);\n\n    ReplicaInfo replicaInfo \u003d recoverCheck(b, newGS, expectedBlockLen);\n\n    FsVolumeReference ref \u003d replicaInfo.getVolume().obtainReference();\n    ReplicaBeingWritten replica;\n    try {\n      // change the replica\u0027s state/gs etc.\n      if (replicaInfo.getState() \u003d\u003d ReplicaState.FINALIZED) {\n        replica \u003d append(b.getBlockPoolId(), (FinalizedReplica) replicaInfo,\n                         newGS, b.getNumBytes());\n      } else { //RBW\n        bumpReplicaGS(replicaInfo, newGS);\n        replica \u003d (ReplicaBeingWritten) replicaInfo;\n      }\n    } catch (IOException e) {\n      IOUtils.cleanup(null, ref);\n      throw e;\n    }\n    return new ReplicaHandler(replica, ref);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
          "extendedDetails": {
            "oldValue": "ReplicaInPipeline",
            "newValue": "ReplicaHandler"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-7496. Fix FsVolume removal race conditions on the DataNode by reference-counting the volume instances (lei via cmccabe)\n",
          "commitDate": "20/01/15 7:05 PM",
          "commitName": "b7f4a3156c0f5c600816c469637237ba6c9b330c",
          "commitAuthor": "Colin Patrick Mccabe",
          "commitDateOld": "13/01/15 12:24 AM",
          "commitNameOld": "08ac06283a3e9bf0d49d873823aabd419b08e41f",
          "commitAuthorOld": "Konstantin V Shvachko",
          "daysBetweenCommits": 7.78,
          "commitsBetweenForRepo": 49,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,23 @@\n-  public synchronized ReplicaInPipeline recoverAppend(ExtendedBlock b,\n-      long newGS, long expectedBlockLen) throws IOException {\n+  public synchronized ReplicaHandler recoverAppend(\n+      ExtendedBlock b, long newGS, long expectedBlockLen) throws IOException {\n     LOG.info(\"Recover failed append to \" + b);\n \n     ReplicaInfo replicaInfo \u003d recoverCheck(b, newGS, expectedBlockLen);\n \n-    // change the replica\u0027s state/gs etc.\n-    if (replicaInfo.getState() \u003d\u003d ReplicaState.FINALIZED ) {\n-      return append(b.getBlockPoolId(), (FinalizedReplica) replicaInfo, newGS, \n-          b.getNumBytes());\n-    } else { //RBW\n-      bumpReplicaGS(replicaInfo, newGS);\n-      return (ReplicaBeingWritten)replicaInfo;\n+    FsVolumeReference ref \u003d replicaInfo.getVolume().obtainReference();\n+    ReplicaBeingWritten replica;\n+    try {\n+      // change the replica\u0027s state/gs etc.\n+      if (replicaInfo.getState() \u003d\u003d ReplicaState.FINALIZED) {\n+        replica \u003d append(b.getBlockPoolId(), (FinalizedReplica) replicaInfo,\n+                         newGS, b.getNumBytes());\n+      } else { //RBW\n+        bumpReplicaGS(replicaInfo, newGS);\n+        replica \u003d (ReplicaBeingWritten) replicaInfo;\n+      }\n+    } catch (IOException e) {\n+      IOUtils.cleanup(null, ref);\n+      throw e;\n     }\n+    return new ReplicaHandler(replica, ref);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized ReplicaHandler recoverAppend(\n      ExtendedBlock b, long newGS, long expectedBlockLen) throws IOException {\n    LOG.info(\"Recover failed append to \" + b);\n\n    ReplicaInfo replicaInfo \u003d recoverCheck(b, newGS, expectedBlockLen);\n\n    FsVolumeReference ref \u003d replicaInfo.getVolume().obtainReference();\n    ReplicaBeingWritten replica;\n    try {\n      // change the replica\u0027s state/gs etc.\n      if (replicaInfo.getState() \u003d\u003d ReplicaState.FINALIZED) {\n        replica \u003d append(b.getBlockPoolId(), (FinalizedReplica) replicaInfo,\n                         newGS, b.getNumBytes());\n      } else { //RBW\n        bumpReplicaGS(replicaInfo, newGS);\n        replica \u003d (ReplicaBeingWritten) replicaInfo;\n      }\n    } catch (IOException e) {\n      IOUtils.cleanup(null, ref);\n      throw e;\n    }\n    return new ReplicaHandler(replica, ref);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "bc13dfb1426944ce45293cb8f444239a7406762c": {
      "type": "Ymultichange(Ymovefromfile,Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-3130. Move fsdataset implementation to a package.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1308437 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/04/12 10:38 AM",
      "commitName": "bc13dfb1426944ce45293cb8f444239a7406762c",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-3130. Move fsdataset implementation to a package.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1308437 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "02/04/12 10:38 AM",
          "commitName": "bc13dfb1426944ce45293cb8f444239a7406762c",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "01/04/12 8:48 PM",
          "commitNameOld": "a4ccb8f504e79802f1b3c69acbcbb00b2343c529",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.58,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,15 @@\n-  public synchronized ReplicaInPipelineInterface recoverAppend(ExtendedBlock b,\n+  public synchronized ReplicaInPipeline recoverAppend(ExtendedBlock b,\n       long newGS, long expectedBlockLen) throws IOException {\n-    DataNode.LOG.info(\"Recover failed append to \" + b);\n+    LOG.info(\"Recover failed append to \" + b);\n \n     ReplicaInfo replicaInfo \u003d recoverCheck(b, newGS, expectedBlockLen);\n \n     // change the replica\u0027s state/gs etc.\n     if (replicaInfo.getState() \u003d\u003d ReplicaState.FINALIZED ) {\n       return append(b.getBlockPoolId(), (FinalizedReplica) replicaInfo, newGS, \n           b.getNumBytes());\n     } else { //RBW\n       bumpReplicaGS(replicaInfo, newGS);\n       return (ReplicaBeingWritten)replicaInfo;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized ReplicaInPipeline recoverAppend(ExtendedBlock b,\n      long newGS, long expectedBlockLen) throws IOException {\n    LOG.info(\"Recover failed append to \" + b);\n\n    ReplicaInfo replicaInfo \u003d recoverCheck(b, newGS, expectedBlockLen);\n\n    // change the replica\u0027s state/gs etc.\n    if (replicaInfo.getState() \u003d\u003d ReplicaState.FINALIZED ) {\n      return append(b.getBlockPoolId(), (FinalizedReplica) replicaInfo, newGS, \n          b.getNumBytes());\n    } else { //RBW\n      bumpReplicaGS(replicaInfo, newGS);\n      return (ReplicaBeingWritten)replicaInfo;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/FSDataset.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
            "oldMethodName": "recoverAppend",
            "newMethodName": "recoverAppend"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-3130. Move fsdataset implementation to a package.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1308437 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "02/04/12 10:38 AM",
          "commitName": "bc13dfb1426944ce45293cb8f444239a7406762c",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "01/04/12 8:48 PM",
          "commitNameOld": "a4ccb8f504e79802f1b3c69acbcbb00b2343c529",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.58,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,15 @@\n-  public synchronized ReplicaInPipelineInterface recoverAppend(ExtendedBlock b,\n+  public synchronized ReplicaInPipeline recoverAppend(ExtendedBlock b,\n       long newGS, long expectedBlockLen) throws IOException {\n-    DataNode.LOG.info(\"Recover failed append to \" + b);\n+    LOG.info(\"Recover failed append to \" + b);\n \n     ReplicaInfo replicaInfo \u003d recoverCheck(b, newGS, expectedBlockLen);\n \n     // change the replica\u0027s state/gs etc.\n     if (replicaInfo.getState() \u003d\u003d ReplicaState.FINALIZED ) {\n       return append(b.getBlockPoolId(), (FinalizedReplica) replicaInfo, newGS, \n           b.getNumBytes());\n     } else { //RBW\n       bumpReplicaGS(replicaInfo, newGS);\n       return (ReplicaBeingWritten)replicaInfo;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized ReplicaInPipeline recoverAppend(ExtendedBlock b,\n      long newGS, long expectedBlockLen) throws IOException {\n    LOG.info(\"Recover failed append to \" + b);\n\n    ReplicaInfo replicaInfo \u003d recoverCheck(b, newGS, expectedBlockLen);\n\n    // change the replica\u0027s state/gs etc.\n    if (replicaInfo.getState() \u003d\u003d ReplicaState.FINALIZED ) {\n      return append(b.getBlockPoolId(), (FinalizedReplica) replicaInfo, newGS, \n          b.getNumBytes());\n    } else { //RBW\n      bumpReplicaGS(replicaInfo, newGS);\n      return (ReplicaBeingWritten)replicaInfo;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
          "extendedDetails": {
            "oldValue": "ReplicaInPipelineInterface",
            "newValue": "ReplicaInPipeline"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-3130. Move fsdataset implementation to a package.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1308437 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "02/04/12 10:38 AM",
          "commitName": "bc13dfb1426944ce45293cb8f444239a7406762c",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "01/04/12 8:48 PM",
          "commitNameOld": "a4ccb8f504e79802f1b3c69acbcbb00b2343c529",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.58,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,15 @@\n-  public synchronized ReplicaInPipelineInterface recoverAppend(ExtendedBlock b,\n+  public synchronized ReplicaInPipeline recoverAppend(ExtendedBlock b,\n       long newGS, long expectedBlockLen) throws IOException {\n-    DataNode.LOG.info(\"Recover failed append to \" + b);\n+    LOG.info(\"Recover failed append to \" + b);\n \n     ReplicaInfo replicaInfo \u003d recoverCheck(b, newGS, expectedBlockLen);\n \n     // change the replica\u0027s state/gs etc.\n     if (replicaInfo.getState() \u003d\u003d ReplicaState.FINALIZED ) {\n       return append(b.getBlockPoolId(), (FinalizedReplica) replicaInfo, newGS, \n           b.getNumBytes());\n     } else { //RBW\n       bumpReplicaGS(replicaInfo, newGS);\n       return (ReplicaBeingWritten)replicaInfo;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized ReplicaInPipeline recoverAppend(ExtendedBlock b,\n      long newGS, long expectedBlockLen) throws IOException {\n    LOG.info(\"Recover failed append to \" + b);\n\n    ReplicaInfo replicaInfo \u003d recoverCheck(b, newGS, expectedBlockLen);\n\n    // change the replica\u0027s state/gs etc.\n    if (replicaInfo.getState() \u003d\u003d ReplicaState.FINALIZED ) {\n      return append(b.getBlockPoolId(), (FinalizedReplica) replicaInfo, newGS, \n          b.getNumBytes());\n    } else { //RBW\n      bumpReplicaGS(replicaInfo, newGS);\n      return (ReplicaBeingWritten)replicaInfo;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public synchronized ReplicaInPipelineInterface recoverAppend(ExtendedBlock b,\n      long newGS, long expectedBlockLen) throws IOException {\n    DataNode.LOG.info(\"Recover failed append to \" + b);\n\n    ReplicaInfo replicaInfo \u003d recoverCheck(b, newGS, expectedBlockLen);\n\n    // change the replica\u0027s state/gs etc.\n    if (replicaInfo.getState() \u003d\u003d ReplicaState.FINALIZED ) {\n      return append(b.getBlockPoolId(), (FinalizedReplica) replicaInfo, newGS, \n          b.getNumBytes());\n    } else { //RBW\n      bumpReplicaGS(replicaInfo, newGS);\n      return (ReplicaBeingWritten)replicaInfo;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/FSDataset.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/FSDataset.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/FSDataset.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public synchronized ReplicaInPipelineInterface recoverAppend(ExtendedBlock b,\n      long newGS, long expectedBlockLen) throws IOException {\n    DataNode.LOG.info(\"Recover failed append to \" + b);\n\n    ReplicaInfo replicaInfo \u003d recoverCheck(b, newGS, expectedBlockLen);\n\n    // change the replica\u0027s state/gs etc.\n    if (replicaInfo.getState() \u003d\u003d ReplicaState.FINALIZED ) {\n      return append(b.getBlockPoolId(), (FinalizedReplica) replicaInfo, newGS, \n          b.getNumBytes());\n    } else { //RBW\n      bumpReplicaGS(replicaInfo, newGS);\n      return (ReplicaBeingWritten)replicaInfo;\n    }\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/FSDataset.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/datanode/FSDataset.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/FSDataset.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,15 @@\n+  public synchronized ReplicaInPipelineInterface recoverAppend(ExtendedBlock b,\n+      long newGS, long expectedBlockLen) throws IOException {\n+    DataNode.LOG.info(\"Recover failed append to \" + b);\n+\n+    ReplicaInfo replicaInfo \u003d recoverCheck(b, newGS, expectedBlockLen);\n+\n+    // change the replica\u0027s state/gs etc.\n+    if (replicaInfo.getState() \u003d\u003d ReplicaState.FINALIZED ) {\n+      return append(b.getBlockPoolId(), (FinalizedReplica) replicaInfo, newGS, \n+          b.getNumBytes());\n+    } else { //RBW\n+      bumpReplicaGS(replicaInfo, newGS);\n+      return (ReplicaBeingWritten)replicaInfo;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized ReplicaInPipelineInterface recoverAppend(ExtendedBlock b,\n      long newGS, long expectedBlockLen) throws IOException {\n    DataNode.LOG.info(\"Recover failed append to \" + b);\n\n    ReplicaInfo replicaInfo \u003d recoverCheck(b, newGS, expectedBlockLen);\n\n    // change the replica\u0027s state/gs etc.\n    if (replicaInfo.getState() \u003d\u003d ReplicaState.FINALIZED ) {\n      return append(b.getBlockPoolId(), (FinalizedReplica) replicaInfo, newGS, \n          b.getNumBytes());\n    } else { //RBW\n      bumpReplicaGS(replicaInfo, newGS);\n      return (ReplicaBeingWritten)replicaInfo;\n    }\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/datanode/FSDataset.java"
    }
  }
}