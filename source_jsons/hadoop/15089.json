{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "OfflineImageReconstructor.java",
  "functionName": "dump",
  "functionId": "dump",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/OfflineImageReconstructor.java",
  "functionStartLine": 337,
  "functionEndLine": 358,
  "numCommitsSeen": 15,
  "timeTaken": 1157,
  "changeHistory": [
    "700b0e4019cf483f7532609711812150b8c44742"
  ],
  "changeHistoryShort": {
    "700b0e4019cf483f7532609711812150b8c44742": "Yintroduced"
  },
  "changeHistoryDetails": {
    "700b0e4019cf483f7532609711812150b8c44742": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-9835. OIV: add ReverseXML processor which reconstructs an fsimage from an XML file (cmccabe)\n",
      "commitDate": "02/03/16 5:56 PM",
      "commitName": "700b0e4019cf483f7532609711812150b8c44742",
      "commitAuthor": "Colin Patrick Mccabe",
      "diff": "@@ -0,0 +1,22 @@\n+    String dump() {\n+      StringBuilder bld \u003d new StringBuilder();\n+      if ((children !\u003d null) \u0026\u0026 (!children.isEmpty())) {\n+        bld.append(\"{\");\n+      }\n+      if (val !\u003d null) {\n+        bld.append(\"[\").append(val).append(\"]\");\n+      }\n+      if ((children !\u003d null) \u0026\u0026 (!children.isEmpty())) {\n+        String prefix \u003d \"\";\n+        for (Map.Entry\u003cString, LinkedList\u003cNode\u003e\u003e entry : children.entrySet()) {\n+          for (Node n : entry.getValue()) {\n+            bld.append(prefix);\n+            bld.append(entry.getKey()).append(\": \");\n+            bld.append(n.dump());\n+            prefix \u003d \", \";\n+          }\n+        }\n+        bld.append(\"}\");\n+      }\n+      return bld.toString();\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    String dump() {\n      StringBuilder bld \u003d new StringBuilder();\n      if ((children !\u003d null) \u0026\u0026 (!children.isEmpty())) {\n        bld.append(\"{\");\n      }\n      if (val !\u003d null) {\n        bld.append(\"[\").append(val).append(\"]\");\n      }\n      if ((children !\u003d null) \u0026\u0026 (!children.isEmpty())) {\n        String prefix \u003d \"\";\n        for (Map.Entry\u003cString, LinkedList\u003cNode\u003e\u003e entry : children.entrySet()) {\n          for (Node n : entry.getValue()) {\n            bld.append(prefix);\n            bld.append(entry.getKey()).append(\": \");\n            bld.append(n.dump());\n            prefix \u003d \", \";\n          }\n        }\n        bld.append(\"}\");\n      }\n      return bld.toString();\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/OfflineImageReconstructor.java"
    }
  }
}