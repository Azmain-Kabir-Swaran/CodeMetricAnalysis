{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JsonUtil.java",
  "functionName": "toJsonString",
  "functionId": "toJsonString___status-AclStatus(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/JsonUtil.java",
  "functionStartLine": 417,
  "functionEndLine": 446,
  "numCommitsSeen": 79,
  "timeTaken": 3915,
  "changeHistory": [
    "12e44e7bdaf53d3720a89d32f0cc2717241bd6b2",
    "52b00600df921763725396ed92194d3338167655",
    "1d330fbaf6b50802750aa461640773fb788ef884",
    "1bcfab8e7fd8562f1829ac484d2f6c91f7afe3d6",
    "e2262d3d18c6d5c2aa20f96920104dc07271b869",
    "ffe942b82c1208bc7b22899da3a233944cb5ab52",
    "7a03dc0482d28b8d5741f633f305bd3afb7a572b"
  ],
  "changeHistoryShort": {
    "12e44e7bdaf53d3720a89d32f0cc2717241bd6b2": "Ybodychange",
    "52b00600df921763725396ed92194d3338167655": "Ybodychange",
    "1d330fbaf6b50802750aa461640773fb788ef884": "Ybodychange",
    "1bcfab8e7fd8562f1829ac484d2f6c91f7afe3d6": "Ybodychange",
    "e2262d3d18c6d5c2aa20f96920104dc07271b869": "Ybodychange",
    "ffe942b82c1208bc7b22899da3a233944cb5ab52": "Ybodychange",
    "7a03dc0482d28b8d5741f633f305bd3afb7a572b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "12e44e7bdaf53d3720a89d32f0cc2717241bd6b2": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6984. Serialize FileStatus via protobuf.\n",
      "commitDate": "02/08/17 12:12 PM",
      "commitName": "12e44e7bdaf53d3720a89d32f0cc2717241bd6b2",
      "commitAuthor": "Chris Douglas",
      "commitDateOld": "24/03/17 11:44 AM",
      "commitNameOld": "52b00600df921763725396ed92194d3338167655",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 131.02,
      "commitsBetweenForRepo": 741,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,39 +1,30 @@\n   public static String toJsonString(final AclStatus status) {\n     if (status \u003d\u003d null) {\n       return null;\n     }\n \n     final Map\u003cString, Object\u003e m \u003d new TreeMap\u003cString, Object\u003e();\n     m.put(\"owner\", status.getOwner());\n     m.put(\"group\", status.getGroup());\n     m.put(\"stickyBit\", status.isStickyBit());\n \n     final List\u003cString\u003e stringEntries \u003d new ArrayList\u003c\u003e();\n     for (AclEntry entry : status.getEntries()) {\n       stringEntries.add(entry.toStringStable());\n     }\n     m.put(\"entries\", stringEntries);\n \n     FsPermission perm \u003d status.getPermission();\n     if (perm !\u003d null) {\n       m.put(\"permission\", toString(perm));\n-      if (perm.getAclBit()) {\n-        m.put(\"aclBit\", true);\n-      }\n-      if (perm.getEncryptedBit()) {\n-        m.put(\"encBit\", true);\n-      }\n-      if (perm.getErasureCodedBit()) {\n-        m.put(\"ecBit\", true);\n-      }\n     }\n     final Map\u003cString, Map\u003cString, Object\u003e\u003e finalMap \u003d\n         new TreeMap\u003cString, Map\u003cString, Object\u003e\u003e();\n     finalMap.put(AclStatus.class.getSimpleName(), m);\n \n     try {\n       return MAPPER.writeValueAsString(finalMap);\n     } catch (IOException ignored) {\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static String toJsonString(final AclStatus status) {\n    if (status \u003d\u003d null) {\n      return null;\n    }\n\n    final Map\u003cString, Object\u003e m \u003d new TreeMap\u003cString, Object\u003e();\n    m.put(\"owner\", status.getOwner());\n    m.put(\"group\", status.getGroup());\n    m.put(\"stickyBit\", status.isStickyBit());\n\n    final List\u003cString\u003e stringEntries \u003d new ArrayList\u003c\u003e();\n    for (AclEntry entry : status.getEntries()) {\n      stringEntries.add(entry.toStringStable());\n    }\n    m.put(\"entries\", stringEntries);\n\n    FsPermission perm \u003d status.getPermission();\n    if (perm !\u003d null) {\n      m.put(\"permission\", toString(perm));\n    }\n    final Map\u003cString, Map\u003cString, Object\u003e\u003e finalMap \u003d\n        new TreeMap\u003cString, Map\u003cString, Object\u003e\u003e();\n    finalMap.put(AclStatus.class.getSimpleName(), m);\n\n    try {\n      return MAPPER.writeValueAsString(finalMap);\n    } catch (IOException ignored) {\n    }\n    return null;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/JsonUtil.java",
      "extendedDetails": {}
    },
    "52b00600df921763725396ed92194d3338167655": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13715. Add isErasureCoded() API to FileStatus class. Contributed by Manoj Govindassamy.\n",
      "commitDate": "24/03/17 11:44 AM",
      "commitName": "52b00600df921763725396ed92194d3338167655",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "06/03/17 4:39 PM",
      "commitNameOld": "b5adc5c3011f111f86d232cb33ec522547f68a95",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 17.75,
      "commitsBetweenForRepo": 107,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,39 @@\n   public static String toJsonString(final AclStatus status) {\n     if (status \u003d\u003d null) {\n       return null;\n     }\n \n     final Map\u003cString, Object\u003e m \u003d new TreeMap\u003cString, Object\u003e();\n     m.put(\"owner\", status.getOwner());\n     m.put(\"group\", status.getGroup());\n     m.put(\"stickyBit\", status.isStickyBit());\n \n     final List\u003cString\u003e stringEntries \u003d new ArrayList\u003c\u003e();\n     for (AclEntry entry : status.getEntries()) {\n       stringEntries.add(entry.toStringStable());\n     }\n     m.put(\"entries\", stringEntries);\n \n     FsPermission perm \u003d status.getPermission();\n     if (perm !\u003d null) {\n       m.put(\"permission\", toString(perm));\n       if (perm.getAclBit()) {\n         m.put(\"aclBit\", true);\n       }\n       if (perm.getEncryptedBit()) {\n         m.put(\"encBit\", true);\n       }\n+      if (perm.getErasureCodedBit()) {\n+        m.put(\"ecBit\", true);\n+      }\n     }\n     final Map\u003cString, Map\u003cString, Object\u003e\u003e finalMap \u003d\n         new TreeMap\u003cString, Map\u003cString, Object\u003e\u003e();\n     finalMap.put(AclStatus.class.getSimpleName(), m);\n \n     try {\n       return MAPPER.writeValueAsString(finalMap);\n     } catch (IOException ignored) {\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static String toJsonString(final AclStatus status) {\n    if (status \u003d\u003d null) {\n      return null;\n    }\n\n    final Map\u003cString, Object\u003e m \u003d new TreeMap\u003cString, Object\u003e();\n    m.put(\"owner\", status.getOwner());\n    m.put(\"group\", status.getGroup());\n    m.put(\"stickyBit\", status.isStickyBit());\n\n    final List\u003cString\u003e stringEntries \u003d new ArrayList\u003c\u003e();\n    for (AclEntry entry : status.getEntries()) {\n      stringEntries.add(entry.toStringStable());\n    }\n    m.put(\"entries\", stringEntries);\n\n    FsPermission perm \u003d status.getPermission();\n    if (perm !\u003d null) {\n      m.put(\"permission\", toString(perm));\n      if (perm.getAclBit()) {\n        m.put(\"aclBit\", true);\n      }\n      if (perm.getEncryptedBit()) {\n        m.put(\"encBit\", true);\n      }\n      if (perm.getErasureCodedBit()) {\n        m.put(\"ecBit\", true);\n      }\n    }\n    final Map\u003cString, Map\u003cString, Object\u003e\u003e finalMap \u003d\n        new TreeMap\u003cString, Map\u003cString, Object\u003e\u003e();\n    finalMap.put(AclStatus.class.getSimpleName(), m);\n\n    try {\n      return MAPPER.writeValueAsString(finalMap);\n    } catch (IOException ignored) {\n    }\n    return null;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/JsonUtil.java",
      "extendedDetails": {}
    },
    "1d330fbaf6b50802750aa461640773fb788ef884": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13150. Avoid use of toString() in output of HDFS ACL shell commands. Contributed by Chris Nauroth.\n",
      "commitDate": "06/10/16 1:19 PM",
      "commitName": "1d330fbaf6b50802750aa461640773fb788ef884",
      "commitAuthor": "Chris Nauroth",
      "commitDateOld": "13/09/16 11:02 AM",
      "commitNameOld": "db6d243cf89d25fefbffd4c8721e14d9246b5a16",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 23.09,
      "commitsBetweenForRepo": 151,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,36 @@\n   public static String toJsonString(final AclStatus status) {\n     if (status \u003d\u003d null) {\n       return null;\n     }\n \n     final Map\u003cString, Object\u003e m \u003d new TreeMap\u003cString, Object\u003e();\n     m.put(\"owner\", status.getOwner());\n     m.put(\"group\", status.getGroup());\n     m.put(\"stickyBit\", status.isStickyBit());\n \n     final List\u003cString\u003e stringEntries \u003d new ArrayList\u003c\u003e();\n     for (AclEntry entry : status.getEntries()) {\n-      stringEntries.add(entry.toString());\n+      stringEntries.add(entry.toStringStable());\n     }\n     m.put(\"entries\", stringEntries);\n \n     FsPermission perm \u003d status.getPermission();\n     if (perm !\u003d null) {\n       m.put(\"permission\", toString(perm));\n       if (perm.getAclBit()) {\n         m.put(\"aclBit\", true);\n       }\n       if (perm.getEncryptedBit()) {\n         m.put(\"encBit\", true);\n       }\n     }\n     final Map\u003cString, Map\u003cString, Object\u003e\u003e finalMap \u003d\n         new TreeMap\u003cString, Map\u003cString, Object\u003e\u003e();\n     finalMap.put(AclStatus.class.getSimpleName(), m);\n \n     try {\n       return MAPPER.writeValueAsString(finalMap);\n     } catch (IOException ignored) {\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static String toJsonString(final AclStatus status) {\n    if (status \u003d\u003d null) {\n      return null;\n    }\n\n    final Map\u003cString, Object\u003e m \u003d new TreeMap\u003cString, Object\u003e();\n    m.put(\"owner\", status.getOwner());\n    m.put(\"group\", status.getGroup());\n    m.put(\"stickyBit\", status.isStickyBit());\n\n    final List\u003cString\u003e stringEntries \u003d new ArrayList\u003c\u003e();\n    for (AclEntry entry : status.getEntries()) {\n      stringEntries.add(entry.toStringStable());\n    }\n    m.put(\"entries\", stringEntries);\n\n    FsPermission perm \u003d status.getPermission();\n    if (perm !\u003d null) {\n      m.put(\"permission\", toString(perm));\n      if (perm.getAclBit()) {\n        m.put(\"aclBit\", true);\n      }\n      if (perm.getEncryptedBit()) {\n        m.put(\"encBit\", true);\n      }\n    }\n    final Map\u003cString, Map\u003cString, Object\u003e\u003e finalMap \u003d\n        new TreeMap\u003cString, Map\u003cString, Object\u003e\u003e();\n    finalMap.put(AclStatus.class.getSimpleName(), m);\n\n    try {\n      return MAPPER.writeValueAsString(finalMap);\n    } catch (IOException ignored) {\n    }\n    return null;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/JsonUtil.java",
      "extendedDetails": {}
    },
    "1bcfab8e7fd8562f1829ac484d2f6c91f7afe3d6": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9724. Degraded performance in WebHDFS listing as it does not reuse ObjectMapper. Contributed by Akira Ajisaka.\n",
      "commitDate": "04/02/16 11:34 AM",
      "commitName": "1bcfab8e7fd8562f1829ac484d2f6c91f7afe3d6",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "25/11/15 1:41 PM",
      "commitNameOld": "e3d673901b396cf5bbede5ed6f607ce68301ec0a",
      "commitAuthorOld": "Xiaoyu Yao",
      "daysBetweenCommits": 70.91,
      "commitsBetweenForRepo": 419,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,36 @@\n   public static String toJsonString(final AclStatus status) {\n     if (status \u003d\u003d null) {\n       return null;\n     }\n \n     final Map\u003cString, Object\u003e m \u003d new TreeMap\u003cString, Object\u003e();\n     m.put(\"owner\", status.getOwner());\n     m.put(\"group\", status.getGroup());\n     m.put(\"stickyBit\", status.isStickyBit());\n \n     final List\u003cString\u003e stringEntries \u003d new ArrayList\u003c\u003e();\n     for (AclEntry entry : status.getEntries()) {\n       stringEntries.add(entry.toString());\n     }\n     m.put(\"entries\", stringEntries);\n \n     FsPermission perm \u003d status.getPermission();\n     if (perm !\u003d null) {\n       m.put(\"permission\", toString(perm));\n       if (perm.getAclBit()) {\n         m.put(\"aclBit\", true);\n       }\n       if (perm.getEncryptedBit()) {\n         m.put(\"encBit\", true);\n       }\n     }\n     final Map\u003cString, Map\u003cString, Object\u003e\u003e finalMap \u003d\n         new TreeMap\u003cString, Map\u003cString, Object\u003e\u003e();\n     finalMap.put(AclStatus.class.getSimpleName(), m);\n \n-    ObjectMapper mapper \u003d new ObjectMapper();\n     try {\n-      return mapper.writeValueAsString(finalMap);\n+      return MAPPER.writeValueAsString(finalMap);\n     } catch (IOException ignored) {\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static String toJsonString(final AclStatus status) {\n    if (status \u003d\u003d null) {\n      return null;\n    }\n\n    final Map\u003cString, Object\u003e m \u003d new TreeMap\u003cString, Object\u003e();\n    m.put(\"owner\", status.getOwner());\n    m.put(\"group\", status.getGroup());\n    m.put(\"stickyBit\", status.isStickyBit());\n\n    final List\u003cString\u003e stringEntries \u003d new ArrayList\u003c\u003e();\n    for (AclEntry entry : status.getEntries()) {\n      stringEntries.add(entry.toString());\n    }\n    m.put(\"entries\", stringEntries);\n\n    FsPermission perm \u003d status.getPermission();\n    if (perm !\u003d null) {\n      m.put(\"permission\", toString(perm));\n      if (perm.getAclBit()) {\n        m.put(\"aclBit\", true);\n      }\n      if (perm.getEncryptedBit()) {\n        m.put(\"encBit\", true);\n      }\n    }\n    final Map\u003cString, Map\u003cString, Object\u003e\u003e finalMap \u003d\n        new TreeMap\u003cString, Map\u003cString, Object\u003e\u003e();\n    finalMap.put(AclStatus.class.getSimpleName(), m);\n\n    try {\n      return MAPPER.writeValueAsString(finalMap);\n    } catch (IOException ignored) {\n    }\n    return null;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/JsonUtil.java",
      "extendedDetails": {}
    },
    "e2262d3d18c6d5c2aa20f96920104dc07271b869": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6565. Use jackson instead jetty json in hdfs-client. Contributed by Akira AJISAKA.\n",
      "commitDate": "03/03/15 5:54 PM",
      "commitName": "e2262d3d18c6d5c2aa20f96920104dc07271b869",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "08/12/14 10:23 AM",
      "commitNameOld": "ffe942b82c1208bc7b22899da3a233944cb5ab52",
      "commitAuthorOld": "cnauroth",
      "daysBetweenCommits": 85.31,
      "commitsBetweenForRepo": 663,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,37 @@\n   public static String toJsonString(final AclStatus status) {\n     if (status \u003d\u003d null) {\n       return null;\n     }\n \n     final Map\u003cString, Object\u003e m \u003d new TreeMap\u003cString, Object\u003e();\n     m.put(\"owner\", status.getOwner());\n     m.put(\"group\", status.getGroup());\n     m.put(\"stickyBit\", status.isStickyBit());\n-    m.put(\"entries\", status.getEntries());\n+\n+    final List\u003cString\u003e stringEntries \u003d new ArrayList\u003c\u003e();\n+    for (AclEntry entry : status.getEntries()) {\n+      stringEntries.add(entry.toString());\n+    }\n+    m.put(\"entries\", stringEntries);\n+\n     FsPermission perm \u003d status.getPermission();\n     if (perm !\u003d null) {\n       m.put(\"permission\", toString(perm));\n       if (perm.getAclBit()) {\n         m.put(\"aclBit\", true);\n       }\n       if (perm.getEncryptedBit()) {\n         m.put(\"encBit\", true);\n       }\n     }\n     final Map\u003cString, Map\u003cString, Object\u003e\u003e finalMap \u003d\n         new TreeMap\u003cString, Map\u003cString, Object\u003e\u003e();\n     finalMap.put(AclStatus.class.getSimpleName(), m);\n-    return JSON.toString(finalMap);\n+\n+    ObjectMapper mapper \u003d new ObjectMapper();\n+    try {\n+      return mapper.writeValueAsString(finalMap);\n+    } catch (IOException ignored) {\n+    }\n+    return null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static String toJsonString(final AclStatus status) {\n    if (status \u003d\u003d null) {\n      return null;\n    }\n\n    final Map\u003cString, Object\u003e m \u003d new TreeMap\u003cString, Object\u003e();\n    m.put(\"owner\", status.getOwner());\n    m.put(\"group\", status.getGroup());\n    m.put(\"stickyBit\", status.isStickyBit());\n\n    final List\u003cString\u003e stringEntries \u003d new ArrayList\u003c\u003e();\n    for (AclEntry entry : status.getEntries()) {\n      stringEntries.add(entry.toString());\n    }\n    m.put(\"entries\", stringEntries);\n\n    FsPermission perm \u003d status.getPermission();\n    if (perm !\u003d null) {\n      m.put(\"permission\", toString(perm));\n      if (perm.getAclBit()) {\n        m.put(\"aclBit\", true);\n      }\n      if (perm.getEncryptedBit()) {\n        m.put(\"encBit\", true);\n      }\n    }\n    final Map\u003cString, Map\u003cString, Object\u003e\u003e finalMap \u003d\n        new TreeMap\u003cString, Map\u003cString, Object\u003e\u003e();\n    finalMap.put(AclStatus.class.getSimpleName(), m);\n\n    ObjectMapper mapper \u003d new ObjectMapper();\n    try {\n      return mapper.writeValueAsString(finalMap);\n    } catch (IOException ignored) {\n    }\n    return null;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/JsonUtil.java",
      "extendedDetails": {}
    },
    "ffe942b82c1208bc7b22899da3a233944cb5ab52": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7384. getfacl command and getAclStatus output should be in sync. Contributed by Vinayakumar B.\n",
      "commitDate": "08/12/14 10:23 AM",
      "commitName": "ffe942b82c1208bc7b22899da3a233944cb5ab52",
      "commitAuthor": "cnauroth",
      "commitDateOld": "29/09/14 10:27 PM",
      "commitNameOld": "bb84f1fccb18c6c7373851e05d2451d55e908242",
      "commitAuthorOld": "arp",
      "daysBetweenCommits": 69.54,
      "commitsBetweenForRepo": 581,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,25 @@\n   public static String toJsonString(final AclStatus status) {\n     if (status \u003d\u003d null) {\n       return null;\n     }\n \n     final Map\u003cString, Object\u003e m \u003d new TreeMap\u003cString, Object\u003e();\n     m.put(\"owner\", status.getOwner());\n     m.put(\"group\", status.getGroup());\n     m.put(\"stickyBit\", status.isStickyBit());\n     m.put(\"entries\", status.getEntries());\n+    FsPermission perm \u003d status.getPermission();\n+    if (perm !\u003d null) {\n+      m.put(\"permission\", toString(perm));\n+      if (perm.getAclBit()) {\n+        m.put(\"aclBit\", true);\n+      }\n+      if (perm.getEncryptedBit()) {\n+        m.put(\"encBit\", true);\n+      }\n+    }\n     final Map\u003cString, Map\u003cString, Object\u003e\u003e finalMap \u003d\n         new TreeMap\u003cString, Map\u003cString, Object\u003e\u003e();\n     finalMap.put(AclStatus.class.getSimpleName(), m);\n     return JSON.toString(finalMap);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static String toJsonString(final AclStatus status) {\n    if (status \u003d\u003d null) {\n      return null;\n    }\n\n    final Map\u003cString, Object\u003e m \u003d new TreeMap\u003cString, Object\u003e();\n    m.put(\"owner\", status.getOwner());\n    m.put(\"group\", status.getGroup());\n    m.put(\"stickyBit\", status.isStickyBit());\n    m.put(\"entries\", status.getEntries());\n    FsPermission perm \u003d status.getPermission();\n    if (perm !\u003d null) {\n      m.put(\"permission\", toString(perm));\n      if (perm.getAclBit()) {\n        m.put(\"aclBit\", true);\n      }\n      if (perm.getEncryptedBit()) {\n        m.put(\"encBit\", true);\n      }\n    }\n    final Map\u003cString, Map\u003cString, Object\u003e\u003e finalMap \u003d\n        new TreeMap\u003cString, Map\u003cString, Object\u003e\u003e();\n    finalMap.put(AclStatus.class.getSimpleName(), m);\n    return JSON.toString(finalMap);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/JsonUtil.java",
      "extendedDetails": {}
    },
    "7a03dc0482d28b8d5741f633f305bd3afb7a572b": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-5608. WebHDFS: implement ACL APIs. Contributed by Sachin Jose and Renil Joseph.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4685@1563013 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/01/14 3:13 PM",
      "commitName": "7a03dc0482d28b8d5741f633f305bd3afb7a572b",
      "commitAuthor": "Chris Nauroth",
      "diff": "@@ -0,0 +1,15 @@\n+  public static String toJsonString(final AclStatus status) {\n+    if (status \u003d\u003d null) {\n+      return null;\n+    }\n+\n+    final Map\u003cString, Object\u003e m \u003d new TreeMap\u003cString, Object\u003e();\n+    m.put(\"owner\", status.getOwner());\n+    m.put(\"group\", status.getGroup());\n+    m.put(\"stickyBit\", status.isStickyBit());\n+    m.put(\"entries\", status.getEntries());\n+    final Map\u003cString, Map\u003cString, Object\u003e\u003e finalMap \u003d\n+        new TreeMap\u003cString, Map\u003cString, Object\u003e\u003e();\n+    finalMap.put(AclStatus.class.getSimpleName(), m);\n+    return JSON.toString(finalMap);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static String toJsonString(final AclStatus status) {\n    if (status \u003d\u003d null) {\n      return null;\n    }\n\n    final Map\u003cString, Object\u003e m \u003d new TreeMap\u003cString, Object\u003e();\n    m.put(\"owner\", status.getOwner());\n    m.put(\"group\", status.getGroup());\n    m.put(\"stickyBit\", status.isStickyBit());\n    m.put(\"entries\", status.getEntries());\n    final Map\u003cString, Map\u003cString, Object\u003e\u003e finalMap \u003d\n        new TreeMap\u003cString, Map\u003cString, Object\u003e\u003e();\n    finalMap.put(AclStatus.class.getSimpleName(), m);\n    return JSON.toString(finalMap);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/JsonUtil.java"
    }
  }
}