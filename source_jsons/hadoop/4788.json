{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DiffList.java",
  "functionName": "unmodifiableList",
  "functionId": "unmodifiableList___diffs-DiffList__T__",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/DiffList.java",
  "functionStartLine": 46,
  "functionEndLine": 95,
  "numCommitsSeen": 2,
  "timeTaken": 1630,
  "changeHistory": [
    "81d9446a92e3968234702b2981468a991c7cf8a0",
    "6ea7d78ccb0d1c4af9bcac02a4cff89bdffff252"
  ],
  "changeHistoryShort": {
    "81d9446a92e3968234702b2981468a991c7cf8a0": "Ybodychange",
    "6ea7d78ccb0d1c4af9bcac02a4cff89bdffff252": "Yintroduced"
  },
  "changeHistoryDetails": {
    "81d9446a92e3968234702b2981468a991c7cf8a0": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13102. Implement SnapshotSkipList class to store Multi level DirectoryDiffs.  Contributed by Shashikant Banerjee\n",
      "commitDate": "28/02/18 1:42 PM",
      "commitName": "81d9446a92e3968234702b2981468a991c7cf8a0",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "commitDateOld": "15/02/18 3:33 AM",
      "commitNameOld": "6ea7d78ccb0d1c4af9bcac02a4cff89bdffff252",
      "commitAuthorOld": "Tsz-Wo Nicholas Sze",
      "daysBetweenCommits": 13.42,
      "commitsBetweenForRepo": 87,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,44 +1,50 @@\n   static \u003cT extends Comparable\u003cInteger\u003e\u003e DiffList\u003cT\u003e unmodifiableList(\n       DiffList\u003cT\u003e diffs) {\n     return new DiffList\u003cT\u003e() {\n       @Override\n       public T get(int i) {\n         return diffs.get(i);\n       }\n \n       @Override\n       public boolean isEmpty() {\n         return diffs.isEmpty();\n       }\n \n       @Override\n       public int size() {\n         return diffs.size();\n       }\n \n       @Override\n       public T remove(int i) {\n         throw new UnsupportedOperationException(\"This list is unmodifiable.\");\n       }\n \n       @Override\n       public boolean addLast(T t) {\n         throw new UnsupportedOperationException(\"This list is unmodifiable.\");\n       }\n \n       @Override\n       public void addFirst(T t) {\n         throw new UnsupportedOperationException(\"This list is unmodifiable.\");\n       }\n \n       @Override\n       public int binarySearch(int i) {\n         return diffs.binarySearch(i);\n       }\n \n       @Override\n       public Iterator\u003cT\u003e iterator() {\n         return diffs.iterator();\n       }\n+\n+      @Override\n+      public List\u003cT\u003e getMinListForRange(int startIndex, int endIndex,\n+          INodeDirectory dir) {\n+        return diffs.getMinListForRange(startIndex, endIndex, dir);\n+      }\n     };\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static \u003cT extends Comparable\u003cInteger\u003e\u003e DiffList\u003cT\u003e unmodifiableList(\n      DiffList\u003cT\u003e diffs) {\n    return new DiffList\u003cT\u003e() {\n      @Override\n      public T get(int i) {\n        return diffs.get(i);\n      }\n\n      @Override\n      public boolean isEmpty() {\n        return diffs.isEmpty();\n      }\n\n      @Override\n      public int size() {\n        return diffs.size();\n      }\n\n      @Override\n      public T remove(int i) {\n        throw new UnsupportedOperationException(\"This list is unmodifiable.\");\n      }\n\n      @Override\n      public boolean addLast(T t) {\n        throw new UnsupportedOperationException(\"This list is unmodifiable.\");\n      }\n\n      @Override\n      public void addFirst(T t) {\n        throw new UnsupportedOperationException(\"This list is unmodifiable.\");\n      }\n\n      @Override\n      public int binarySearch(int i) {\n        return diffs.binarySearch(i);\n      }\n\n      @Override\n      public Iterator\u003cT\u003e iterator() {\n        return diffs.iterator();\n      }\n\n      @Override\n      public List\u003cT\u003e getMinListForRange(int startIndex, int endIndex,\n          INodeDirectory dir) {\n        return diffs.getMinListForRange(startIndex, endIndex, dir);\n      }\n    };\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/DiffList.java",
      "extendedDetails": {}
    },
    "6ea7d78ccb0d1c4af9bcac02a4cff89bdffff252": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-13142. Define and Implement a DiifList Interface to store and manage SnapshotDiffs.  Contributed by Shashikant Banerjee\n",
      "commitDate": "15/02/18 3:33 AM",
      "commitName": "6ea7d78ccb0d1c4af9bcac02a4cff89bdffff252",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "diff": "@@ -0,0 +1,44 @@\n+  static \u003cT extends Comparable\u003cInteger\u003e\u003e DiffList\u003cT\u003e unmodifiableList(\n+      DiffList\u003cT\u003e diffs) {\n+    return new DiffList\u003cT\u003e() {\n+      @Override\n+      public T get(int i) {\n+        return diffs.get(i);\n+      }\n+\n+      @Override\n+      public boolean isEmpty() {\n+        return diffs.isEmpty();\n+      }\n+\n+      @Override\n+      public int size() {\n+        return diffs.size();\n+      }\n+\n+      @Override\n+      public T remove(int i) {\n+        throw new UnsupportedOperationException(\"This list is unmodifiable.\");\n+      }\n+\n+      @Override\n+      public boolean addLast(T t) {\n+        throw new UnsupportedOperationException(\"This list is unmodifiable.\");\n+      }\n+\n+      @Override\n+      public void addFirst(T t) {\n+        throw new UnsupportedOperationException(\"This list is unmodifiable.\");\n+      }\n+\n+      @Override\n+      public int binarySearch(int i) {\n+        return diffs.binarySearch(i);\n+      }\n+\n+      @Override\n+      public Iterator\u003cT\u003e iterator() {\n+        return diffs.iterator();\n+      }\n+    };\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  static \u003cT extends Comparable\u003cInteger\u003e\u003e DiffList\u003cT\u003e unmodifiableList(\n      DiffList\u003cT\u003e diffs) {\n    return new DiffList\u003cT\u003e() {\n      @Override\n      public T get(int i) {\n        return diffs.get(i);\n      }\n\n      @Override\n      public boolean isEmpty() {\n        return diffs.isEmpty();\n      }\n\n      @Override\n      public int size() {\n        return diffs.size();\n      }\n\n      @Override\n      public T remove(int i) {\n        throw new UnsupportedOperationException(\"This list is unmodifiable.\");\n      }\n\n      @Override\n      public boolean addLast(T t) {\n        throw new UnsupportedOperationException(\"This list is unmodifiable.\");\n      }\n\n      @Override\n      public void addFirst(T t) {\n        throw new UnsupportedOperationException(\"This list is unmodifiable.\");\n      }\n\n      @Override\n      public int binarySearch(int i) {\n        return diffs.binarySearch(i);\n      }\n\n      @Override\n      public Iterator\u003cT\u003e iterator() {\n        return diffs.iterator();\n      }\n    };\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/DiffList.java"
    }
  }
}