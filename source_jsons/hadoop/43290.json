{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ProviderUtils.java",
  "functionName": "addAllDependencyJars",
  "functionId": "addAllDependencyJars___providerResources-Map__String,LocalResource____sliderFileSystem-SliderFileSystem__tempPath-Path__libDir-String__libLocalSrcDir-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/provider/ProviderUtils.java",
  "functionStartLine": 129,
  "functionEndLine": 145,
  "numCommitsSeen": 31,
  "timeTaken": 2804,
  "changeHistory": [
    "a127f7b0fbde3942ca4329d5463bb8fe421daf7b",
    "40ab068eabe50875449d601471619a4e82fff86d",
    "1888318c89776f0bf354c1b13e3ee169e14ff638",
    "bce06ed1af8183865889e554c2b353836deb034a",
    "f47df51791dfc1b3bda9cbd00f644894ba69c8ec"
  ],
  "changeHistoryShort": {
    "a127f7b0fbde3942ca4329d5463bb8fe421daf7b": "Ybodychange",
    "40ab068eabe50875449d601471619a4e82fff86d": "Yfilerename",
    "1888318c89776f0bf354c1b13e3ee169e14ff638": "Yfilerename",
    "bce06ed1af8183865889e554c2b353836deb034a": "Ybodychange",
    "f47df51791dfc1b3bda9cbd00f644894ba69c8ec": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a127f7b0fbde3942ca4329d5463bb8fe421daf7b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7423. Improve service client loggings. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "a127f7b0fbde3942ca4329d5463bb8fe421daf7b",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "a6c4bd74b636d0715ffb4c1aca9ef4e49201aa02",
      "commitAuthorOld": "Billie Rinaldi",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   public static void addAllDependencyJars(\n       Map\u003cString, LocalResource\u003e providerResources,\n       SliderFileSystem sliderFileSystem,\n       Path tempPath,\n       String libDir,\n       String libLocalSrcDir)\n       throws IOException, SliderException {\n-    if (SliderUtils.isSet(libLocalSrcDir)) {\n+    if (ServiceUtils.isSet(libLocalSrcDir)) {\n       File file \u003d new File(libLocalSrcDir);\n       if (!file.exists() || !file.isDirectory()) {\n         throw new BadCommandArgumentsException(\n             \"Supplied lib src dir %s is not valid\", libLocalSrcDir);\n       }\n     }\n-    SliderUtils.putAllJars(providerResources, sliderFileSystem, tempPath,\n+    ServiceUtils.putAllJars(providerResources, sliderFileSystem, tempPath,\n         libDir, libLocalSrcDir);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void addAllDependencyJars(\n      Map\u003cString, LocalResource\u003e providerResources,\n      SliderFileSystem sliderFileSystem,\n      Path tempPath,\n      String libDir,\n      String libLocalSrcDir)\n      throws IOException, SliderException {\n    if (ServiceUtils.isSet(libLocalSrcDir)) {\n      File file \u003d new File(libLocalSrcDir);\n      if (!file.exists() || !file.isDirectory()) {\n        throw new BadCommandArgumentsException(\n            \"Supplied lib src dir %s is not valid\", libLocalSrcDir);\n      }\n    }\n    ServiceUtils.putAllJars(providerResources, sliderFileSystem, tempPath,\n        libDir, libLocalSrcDir);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/provider/ProviderUtils.java",
      "extendedDetails": {}
    },
    "40ab068eabe50875449d601471619a4e82fff86d": {
      "type": "Yfilerename",
      "commitMessage": "YARN-7091. Rename application to service in yarn-native-services. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "40ab068eabe50875449d601471619a4e82fff86d",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "2ba38ce8ecb1cf3836fab48cdb2c5ae7e1b5427d",
      "commitAuthorOld": "Gour Saha",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static void addAllDependencyJars(\n      Map\u003cString, LocalResource\u003e providerResources,\n      SliderFileSystem sliderFileSystem,\n      Path tempPath,\n      String libDir,\n      String libLocalSrcDir)\n      throws IOException, SliderException {\n    if (SliderUtils.isSet(libLocalSrcDir)) {\n      File file \u003d new File(libLocalSrcDir);\n      if (!file.exists() || !file.isDirectory()) {\n        throw new BadCommandArgumentsException(\n            \"Supplied lib src dir %s is not valid\", libLocalSrcDir);\n      }\n    }\n    SliderUtils.putAllJars(providerResources, sliderFileSystem, tempPath,\n        libDir, libLocalSrcDir);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/provider/ProviderUtils.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/provider/ProviderUtils.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/provider/ProviderUtils.java"
      }
    },
    "1888318c89776f0bf354c1b13e3ee169e14ff638": {
      "type": "Yfilerename",
      "commitMessage": "YARN-6903. Yarn-native-service framework core rewrite. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "1888318c89776f0bf354c1b13e3ee169e14ff638",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "27dcc679596edaaeb18dc42d2a812957a9d34e89",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static void addAllDependencyJars(\n      Map\u003cString, LocalResource\u003e providerResources,\n      SliderFileSystem sliderFileSystem,\n      Path tempPath,\n      String libDir,\n      String libLocalSrcDir)\n      throws IOException, SliderException {\n    if (SliderUtils.isSet(libLocalSrcDir)) {\n      File file \u003d new File(libLocalSrcDir);\n      if (!file.exists() || !file.isDirectory()) {\n        throw new BadCommandArgumentsException(\n            \"Supplied lib src dir %s is not valid\", libLocalSrcDir);\n      }\n    }\n    SliderUtils.putAllJars(providerResources, sliderFileSystem, tempPath,\n        libDir, libLocalSrcDir);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/provider/ProviderUtils.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/slider/providers/ProviderUtils.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/provider/ProviderUtils.java"
      }
    },
    "bce06ed1af8183865889e554c2b353836deb034a": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5505. Create an agent-less docker provider in the native-services framework. Contributed by Billie Rinaldi\n",
      "commitDate": "06/11/17 1:28 PM",
      "commitName": "bce06ed1af8183865889e554c2b353836deb034a",
      "commitAuthor": "Jian He",
      "commitDateOld": "06/11/17 1:28 PM",
      "commitNameOld": "f47df51791dfc1b3bda9cbd00f644894ba69c8ec",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,17 @@\n-  public static void addAllDependencyJars(Map\u003cString, LocalResource\u003e providerResources,\n-                                          SliderFileSystem sliderFileSystem,\n-                                          Path tempPath,\n-                                          String libDir,\n-                                          String libLocalSrcDir)\n+  public static void addAllDependencyJars(\n+      Map\u003cString, LocalResource\u003e providerResources,\n+      SliderFileSystem sliderFileSystem,\n+      Path tempPath,\n+      String libDir,\n+      String libLocalSrcDir)\n       throws IOException, SliderException {\n-    String libSrcToUse \u003d libLocalSrcDir;\n     if (SliderUtils.isSet(libLocalSrcDir)) {\n       File file \u003d new File(libLocalSrcDir);\n       if (!file.exists() || !file.isDirectory()) {\n-        throw new BadCommandArgumentsException(\"Supplied lib src dir %s is not valid\", libLocalSrcDir);\n+        throw new BadCommandArgumentsException(\n+            \"Supplied lib src dir %s is not valid\", libLocalSrcDir);\n       }\n     }\n-    SliderUtils.putAllJars(providerResources, sliderFileSystem, tempPath, libDir, libSrcToUse);\n+    SliderUtils.putAllJars(providerResources, sliderFileSystem, tempPath,\n+        libDir, libLocalSrcDir);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void addAllDependencyJars(\n      Map\u003cString, LocalResource\u003e providerResources,\n      SliderFileSystem sliderFileSystem,\n      Path tempPath,\n      String libDir,\n      String libLocalSrcDir)\n      throws IOException, SliderException {\n    if (SliderUtils.isSet(libLocalSrcDir)) {\n      File file \u003d new File(libLocalSrcDir);\n      if (!file.exists() || !file.isDirectory()) {\n        throw new BadCommandArgumentsException(\n            \"Supplied lib src dir %s is not valid\", libLocalSrcDir);\n      }\n    }\n    SliderUtils.putAllJars(providerResources, sliderFileSystem, tempPath,\n        libDir, libLocalSrcDir);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/slider/providers/ProviderUtils.java",
      "extendedDetails": {}
    },
    "f47df51791dfc1b3bda9cbd00f644894ba69c8ec": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5461. Initial code ported from slider-core module. (jianhe)\n",
      "commitDate": "06/11/17 1:28 PM",
      "commitName": "f47df51791dfc1b3bda9cbd00f644894ba69c8ec",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,15 @@\n+  public static void addAllDependencyJars(Map\u003cString, LocalResource\u003e providerResources,\n+                                          SliderFileSystem sliderFileSystem,\n+                                          Path tempPath,\n+                                          String libDir,\n+                                          String libLocalSrcDir)\n+      throws IOException, SliderException {\n+    String libSrcToUse \u003d libLocalSrcDir;\n+    if (SliderUtils.isSet(libLocalSrcDir)) {\n+      File file \u003d new File(libLocalSrcDir);\n+      if (!file.exists() || !file.isDirectory()) {\n+        throw new BadCommandArgumentsException(\"Supplied lib src dir %s is not valid\", libLocalSrcDir);\n+      }\n+    }\n+    SliderUtils.putAllJars(providerResources, sliderFileSystem, tempPath, libDir, libSrcToUse);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static void addAllDependencyJars(Map\u003cString, LocalResource\u003e providerResources,\n                                          SliderFileSystem sliderFileSystem,\n                                          Path tempPath,\n                                          String libDir,\n                                          String libLocalSrcDir)\n      throws IOException, SliderException {\n    String libSrcToUse \u003d libLocalSrcDir;\n    if (SliderUtils.isSet(libLocalSrcDir)) {\n      File file \u003d new File(libLocalSrcDir);\n      if (!file.exists() || !file.isDirectory()) {\n        throw new BadCommandArgumentsException(\"Supplied lib src dir %s is not valid\", libLocalSrcDir);\n      }\n    }\n    SliderUtils.putAllJars(providerResources, sliderFileSystem, tempPath, libDir, libSrcToUse);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/slider/providers/ProviderUtils.java"
    }
  }
}