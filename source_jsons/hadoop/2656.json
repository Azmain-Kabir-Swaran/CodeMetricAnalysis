{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ClientNamenodeProtocolTranslatorPB.java",
  "functionName": "getECTopologyResultForPolicies",
  "functionId": "getECTopologyResultForPolicies___policyNames-String(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolTranslatorPB.java",
  "functionStartLine": 1685,
  "functionEndLine": 1699,
  "numCommitsSeen": 82,
  "timeTaken": 4202,
  "changeHistory": [
    "92c58901d767f4fea571274544a590608c911cb8",
    "14282e311be6ffcaddd2f74fa8e67c4e98a32291"
  ],
  "changeHistoryShort": {
    "92c58901d767f4fea571274544a590608c911cb8": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yparameterchange)",
    "14282e311be6ffcaddd2f74fa8e67c4e98a32291": "Yintroduced"
  },
  "changeHistoryDetails": {
    "92c58901d767f4fea571274544a590608c911cb8": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yparameterchange)",
      "commitMessage": "HDFS-15117. EC: Add getECTopologyResultForPolicies to DistributedFileSystem. Contributed by Ayush Saxena\n",
      "commitDate": "23/01/20 4:48 AM",
      "commitName": "92c58901d767f4fea571274544a590608c911cb8",
      "commitAuthor": "Ayush Saxena",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-15117. EC: Add getECTopologyResultForPolicies to DistributedFileSystem. Contributed by Ayush Saxena\n",
          "commitDate": "23/01/20 4:48 AM",
          "commitName": "92c58901d767f4fea571274544a590608c911cb8",
          "commitAuthor": "Ayush Saxena",
          "commitDateOld": "22/01/20 7:25 AM",
          "commitNameOld": "9520b2ad790bd8527033a03e7ee50da71a85df1d",
          "commitAuthorOld": "Szilard Nemeth",
          "daysBetweenCommits": 0.89,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,15 @@\n-  private static ECTopologyVerifierResult getECTopologyResultForPolicies(\n-      final DistributedFileSystem dfs, final String... policyNames)\n-      throws IOException {\n-    ErasureCodingPolicy[] policies \u003d\n-        new ErasureCodingPolicy[policyNames.length];\n-    for (int i \u003d 0; i \u003c policyNames.length; i++) {\n-      policies[i] \u003d\n-        getPolicy(dfs.getClient().getNamenode().getErasureCodingPolicies(),\n-            policyNames[i]);\n+  public ECTopologyVerifierResult getECTopologyResultForPolicies(\n+      final String... policyNames) throws IOException {\n+    final GetECTopologyResultForPoliciesRequestProto.Builder builder \u003d\n+        GetECTopologyResultForPoliciesRequestProto.newBuilder();\n+    builder.addAllPolicies(Arrays.asList(policyNames));\n+    GetECTopologyResultForPoliciesRequestProto req \u003d builder.build();\n+    try {\n+      GetECTopologyResultForPoliciesResponseProto response \u003d\n+          rpcProxy.getECTopologyResultForPolicies(null, req);\n+      return PBHelperClient\n+          .convertECTopologyVerifierResultProto(response.getResponse());\n+    } catch (ServiceException e) {\n+      throw ProtobufHelper.getRemoteException(e);\n     }\n-    final DatanodeInfo[] report \u003d dfs.getClient().getNamenode()\n-        .getDatanodeReport(HdfsConstants.DatanodeReportType.ALL);\n-    return ECTopologyVerifier.getECTopologyVerifierResult(report, policies);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public ECTopologyVerifierResult getECTopologyResultForPolicies(\n      final String... policyNames) throws IOException {\n    final GetECTopologyResultForPoliciesRequestProto.Builder builder \u003d\n        GetECTopologyResultForPoliciesRequestProto.newBuilder();\n    builder.addAllPolicies(Arrays.asList(policyNames));\n    GetECTopologyResultForPoliciesRequestProto req \u003d builder.build();\n    try {\n      GetECTopologyResultForPoliciesResponseProto response \u003d\n          rpcProxy.getECTopologyResultForPolicies(null, req);\n      return PBHelperClient\n          .convertECTopologyVerifierResultProto(response.getResponse());\n    } catch (ServiceException e) {\n      throw ProtobufHelper.getRemoteException(e);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolTranslatorPB.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/ECAdmin.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolTranslatorPB.java",
            "oldMethodName": "getECTopologyResultForPolicies",
            "newMethodName": "getECTopologyResultForPolicies"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-15117. EC: Add getECTopologyResultForPolicies to DistributedFileSystem. Contributed by Ayush Saxena\n",
          "commitDate": "23/01/20 4:48 AM",
          "commitName": "92c58901d767f4fea571274544a590608c911cb8",
          "commitAuthor": "Ayush Saxena",
          "commitDateOld": "22/01/20 7:25 AM",
          "commitNameOld": "9520b2ad790bd8527033a03e7ee50da71a85df1d",
          "commitAuthorOld": "Szilard Nemeth",
          "daysBetweenCommits": 0.89,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,15 @@\n-  private static ECTopologyVerifierResult getECTopologyResultForPolicies(\n-      final DistributedFileSystem dfs, final String... policyNames)\n-      throws IOException {\n-    ErasureCodingPolicy[] policies \u003d\n-        new ErasureCodingPolicy[policyNames.length];\n-    for (int i \u003d 0; i \u003c policyNames.length; i++) {\n-      policies[i] \u003d\n-        getPolicy(dfs.getClient().getNamenode().getErasureCodingPolicies(),\n-            policyNames[i]);\n+  public ECTopologyVerifierResult getECTopologyResultForPolicies(\n+      final String... policyNames) throws IOException {\n+    final GetECTopologyResultForPoliciesRequestProto.Builder builder \u003d\n+        GetECTopologyResultForPoliciesRequestProto.newBuilder();\n+    builder.addAllPolicies(Arrays.asList(policyNames));\n+    GetECTopologyResultForPoliciesRequestProto req \u003d builder.build();\n+    try {\n+      GetECTopologyResultForPoliciesResponseProto response \u003d\n+          rpcProxy.getECTopologyResultForPolicies(null, req);\n+      return PBHelperClient\n+          .convertECTopologyVerifierResultProto(response.getResponse());\n+    } catch (ServiceException e) {\n+      throw ProtobufHelper.getRemoteException(e);\n     }\n-    final DatanodeInfo[] report \u003d dfs.getClient().getNamenode()\n-        .getDatanodeReport(HdfsConstants.DatanodeReportType.ALL);\n-    return ECTopologyVerifier.getECTopologyVerifierResult(report, policies);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public ECTopologyVerifierResult getECTopologyResultForPolicies(\n      final String... policyNames) throws IOException {\n    final GetECTopologyResultForPoliciesRequestProto.Builder builder \u003d\n        GetECTopologyResultForPoliciesRequestProto.newBuilder();\n    builder.addAllPolicies(Arrays.asList(policyNames));\n    GetECTopologyResultForPoliciesRequestProto req \u003d builder.build();\n    try {\n      GetECTopologyResultForPoliciesResponseProto response \u003d\n          rpcProxy.getECTopologyResultForPolicies(null, req);\n      return PBHelperClient\n          .convertECTopologyVerifierResultProto(response.getResponse());\n    } catch (ServiceException e) {\n      throw ProtobufHelper.getRemoteException(e);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolTranslatorPB.java",
          "extendedDetails": {
            "oldValue": "[private, static]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-15117. EC: Add getECTopologyResultForPolicies to DistributedFileSystem. Contributed by Ayush Saxena\n",
          "commitDate": "23/01/20 4:48 AM",
          "commitName": "92c58901d767f4fea571274544a590608c911cb8",
          "commitAuthor": "Ayush Saxena",
          "commitDateOld": "22/01/20 7:25 AM",
          "commitNameOld": "9520b2ad790bd8527033a03e7ee50da71a85df1d",
          "commitAuthorOld": "Szilard Nemeth",
          "daysBetweenCommits": 0.89,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,15 @@\n-  private static ECTopologyVerifierResult getECTopologyResultForPolicies(\n-      final DistributedFileSystem dfs, final String... policyNames)\n-      throws IOException {\n-    ErasureCodingPolicy[] policies \u003d\n-        new ErasureCodingPolicy[policyNames.length];\n-    for (int i \u003d 0; i \u003c policyNames.length; i++) {\n-      policies[i] \u003d\n-        getPolicy(dfs.getClient().getNamenode().getErasureCodingPolicies(),\n-            policyNames[i]);\n+  public ECTopologyVerifierResult getECTopologyResultForPolicies(\n+      final String... policyNames) throws IOException {\n+    final GetECTopologyResultForPoliciesRequestProto.Builder builder \u003d\n+        GetECTopologyResultForPoliciesRequestProto.newBuilder();\n+    builder.addAllPolicies(Arrays.asList(policyNames));\n+    GetECTopologyResultForPoliciesRequestProto req \u003d builder.build();\n+    try {\n+      GetECTopologyResultForPoliciesResponseProto response \u003d\n+          rpcProxy.getECTopologyResultForPolicies(null, req);\n+      return PBHelperClient\n+          .convertECTopologyVerifierResultProto(response.getResponse());\n+    } catch (ServiceException e) {\n+      throw ProtobufHelper.getRemoteException(e);\n     }\n-    final DatanodeInfo[] report \u003d dfs.getClient().getNamenode()\n-        .getDatanodeReport(HdfsConstants.DatanodeReportType.ALL);\n-    return ECTopologyVerifier.getECTopologyVerifierResult(report, policies);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public ECTopologyVerifierResult getECTopologyResultForPolicies(\n      final String... policyNames) throws IOException {\n    final GetECTopologyResultForPoliciesRequestProto.Builder builder \u003d\n        GetECTopologyResultForPoliciesRequestProto.newBuilder();\n    builder.addAllPolicies(Arrays.asList(policyNames));\n    GetECTopologyResultForPoliciesRequestProto req \u003d builder.build();\n    try {\n      GetECTopologyResultForPoliciesResponseProto response \u003d\n          rpcProxy.getECTopologyResultForPolicies(null, req);\n      return PBHelperClient\n          .convertECTopologyVerifierResultProto(response.getResponse());\n    } catch (ServiceException e) {\n      throw ProtobufHelper.getRemoteException(e);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolTranslatorPB.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-15117. EC: Add getECTopologyResultForPolicies to DistributedFileSystem. Contributed by Ayush Saxena\n",
          "commitDate": "23/01/20 4:48 AM",
          "commitName": "92c58901d767f4fea571274544a590608c911cb8",
          "commitAuthor": "Ayush Saxena",
          "commitDateOld": "22/01/20 7:25 AM",
          "commitNameOld": "9520b2ad790bd8527033a03e7ee50da71a85df1d",
          "commitAuthorOld": "Szilard Nemeth",
          "daysBetweenCommits": 0.89,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,15 @@\n-  private static ECTopologyVerifierResult getECTopologyResultForPolicies(\n-      final DistributedFileSystem dfs, final String... policyNames)\n-      throws IOException {\n-    ErasureCodingPolicy[] policies \u003d\n-        new ErasureCodingPolicy[policyNames.length];\n-    for (int i \u003d 0; i \u003c policyNames.length; i++) {\n-      policies[i] \u003d\n-        getPolicy(dfs.getClient().getNamenode().getErasureCodingPolicies(),\n-            policyNames[i]);\n+  public ECTopologyVerifierResult getECTopologyResultForPolicies(\n+      final String... policyNames) throws IOException {\n+    final GetECTopologyResultForPoliciesRequestProto.Builder builder \u003d\n+        GetECTopologyResultForPoliciesRequestProto.newBuilder();\n+    builder.addAllPolicies(Arrays.asList(policyNames));\n+    GetECTopologyResultForPoliciesRequestProto req \u003d builder.build();\n+    try {\n+      GetECTopologyResultForPoliciesResponseProto response \u003d\n+          rpcProxy.getECTopologyResultForPolicies(null, req);\n+      return PBHelperClient\n+          .convertECTopologyVerifierResultProto(response.getResponse());\n+    } catch (ServiceException e) {\n+      throw ProtobufHelper.getRemoteException(e);\n     }\n-    final DatanodeInfo[] report \u003d dfs.getClient().getNamenode()\n-        .getDatanodeReport(HdfsConstants.DatanodeReportType.ALL);\n-    return ECTopologyVerifier.getECTopologyVerifierResult(report, policies);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public ECTopologyVerifierResult getECTopologyResultForPolicies(\n      final String... policyNames) throws IOException {\n    final GetECTopologyResultForPoliciesRequestProto.Builder builder \u003d\n        GetECTopologyResultForPoliciesRequestProto.newBuilder();\n    builder.addAllPolicies(Arrays.asList(policyNames));\n    GetECTopologyResultForPoliciesRequestProto req \u003d builder.build();\n    try {\n      GetECTopologyResultForPoliciesResponseProto response \u003d\n          rpcProxy.getECTopologyResultForPolicies(null, req);\n      return PBHelperClient\n          .convertECTopologyVerifierResultProto(response.getResponse());\n    } catch (ServiceException e) {\n      throw ProtobufHelper.getRemoteException(e);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolTranslatorPB.java",
          "extendedDetails": {
            "oldValue": "[dfs-DistributedFileSystem(modifiers-final), policyNames-String(modifiers-final)]",
            "newValue": "[policyNames-String(modifiers-final)]"
          }
        }
      ]
    },
    "14282e311be6ffcaddd2f74fa8e67c4e98a32291": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-14188. Make hdfs ec -verifyClusterSetup command accept an erasure coding policy as a parameter. Contributed by Kitti Nanasi.\n\nSigned-off-by: Wei-Chiu Chuang \u003cweichiu@apache.org\u003e\n",
      "commitDate": "19/02/19 12:04 PM",
      "commitName": "14282e311be6ffcaddd2f74fa8e67c4e98a32291",
      "commitAuthor": "Kitti Nanasi",
      "diff": "@@ -0,0 +1,14 @@\n+  private static ECTopologyVerifierResult getECTopologyResultForPolicies(\n+      final DistributedFileSystem dfs, final String... policyNames)\n+      throws IOException {\n+    ErasureCodingPolicy[] policies \u003d\n+        new ErasureCodingPolicy[policyNames.length];\n+    for (int i \u003d 0; i \u003c policyNames.length; i++) {\n+      policies[i] \u003d\n+        getPolicy(dfs.getClient().getNamenode().getErasureCodingPolicies(),\n+            policyNames[i]);\n+    }\n+    final DatanodeInfo[] report \u003d dfs.getClient().getNamenode()\n+        .getDatanodeReport(HdfsConstants.DatanodeReportType.ALL);\n+    return ECTopologyVerifier.getECTopologyVerifierResult(report, policies);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static ECTopologyVerifierResult getECTopologyResultForPolicies(\n      final DistributedFileSystem dfs, final String... policyNames)\n      throws IOException {\n    ErasureCodingPolicy[] policies \u003d\n        new ErasureCodingPolicy[policyNames.length];\n    for (int i \u003d 0; i \u003c policyNames.length; i++) {\n      policies[i] \u003d\n        getPolicy(dfs.getClient().getNamenode().getErasureCodingPolicies(),\n            policyNames[i]);\n    }\n    final DatanodeInfo[] report \u003d dfs.getClient().getNamenode()\n        .getDatanodeReport(HdfsConstants.DatanodeReportType.ALL);\n    return ECTopologyVerifier.getECTopologyVerifierResult(report, policies);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/ECAdmin.java"
    }
  }
}