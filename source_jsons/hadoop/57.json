{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DFSClientCache.java",
  "functionName": "getDfsInputStream",
  "functionId": "getDfsInputStream___userName-String__inodePath-String__namenodeId-int",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-nfs/src/main/java/org/apache/hadoop/hdfs/nfs/nfs3/DFSClientCache.java",
  "functionStartLine": 334,
  "functionEndLine": 345,
  "numCommitsSeen": 26,
  "timeTaken": 2342,
  "changeHistory": [
    "f20dc0d5770d3876954faf0a6e8dcce6539ffc23",
    "d6602b5f39833611b4afa4581552f6c4c37e23a8",
    "05f35518f19d48890770128727289582cca3457b"
  ],
  "changeHistoryShort": {
    "f20dc0d5770d3876954faf0a6e8dcce6539ffc23": "Ybodychange",
    "d6602b5f39833611b4afa4581552f6c4c37e23a8": "Ymultichange(Yparameterchange,Ybodychange)",
    "05f35518f19d48890770128727289582cca3457b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f20dc0d5770d3876954faf0a6e8dcce6539ffc23": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10571. Use Log.*(Object, Throwable) overload to log exceptions.\nContributed by Andras Bokor.\n",
      "commitDate": "14/02/18 8:20 AM",
      "commitName": "f20dc0d5770d3876954faf0a6e8dcce6539ffc23",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "10/10/17 10:38 AM",
      "commitNameOld": "d6602b5f39833611b4afa4581552f6c4c37e23a8",
      "commitAuthorOld": "Jitendra Pandey",
      "daysBetweenCommits": 126.95,
      "commitsBetweenForRepo": 833,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,12 @@\n   FSDataInputStream getDfsInputStream(String userName, String inodePath,\n                                       int namenodeId) {\n     DFSInputStreamCacheKey k \u003d\n         new DFSInputStreamCacheKey(userName, inodePath, namenodeId);\n     FSDataInputStream s \u003d null;\n     try {\n       s \u003d inputstreamCache.get(k);\n     } catch (ExecutionException e) {\n-      LOG.warn(\"Failed to create DFSInputStream for user:\" + userName\n-          + \" Cause:\" + e);\n+      LOG.warn(\"Failed to create DFSInputStream for user: {}\", userName, e);\n     }\n     return s;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  FSDataInputStream getDfsInputStream(String userName, String inodePath,\n                                      int namenodeId) {\n    DFSInputStreamCacheKey k \u003d\n        new DFSInputStreamCacheKey(userName, inodePath, namenodeId);\n    FSDataInputStream s \u003d null;\n    try {\n      s \u003d inputstreamCache.get(k);\n    } catch (ExecutionException e) {\n      LOG.warn(\"Failed to create DFSInputStream for user: {}\", userName, e);\n    }\n    return s;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-nfs/src/main/java/org/apache/hadoop/hdfs/nfs/nfs3/DFSClientCache.java",
      "extendedDetails": {}
    },
    "d6602b5f39833611b4afa4581552f6c4c37e23a8": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-11575. Supporting HDFS NFS gateway with Federated HDFS. Contributed by Mukul Kumar Singh.\n",
      "commitDate": "10/10/17 10:38 AM",
      "commitName": "d6602b5f39833611b4afa4581552f6c4c37e23a8",
      "commitAuthor": "Jitendra Pandey",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-11575. Supporting HDFS NFS gateway with Federated HDFS. Contributed by Mukul Kumar Singh.\n",
          "commitDate": "10/10/17 10:38 AM",
          "commitName": "d6602b5f39833611b4afa4581552f6c4c37e23a8",
          "commitAuthor": "Jitendra Pandey",
          "commitDateOld": "17/09/15 2:18 PM",
          "commitNameOld": "9eee97508f350ed4629abb04e7781514ffa04070",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 753.85,
          "commitsBetweenForRepo": 5078,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,13 @@\n-  FSDataInputStream getDfsInputStream(String userName, String inodePath) {\n-    DFSInputStreamCaheKey k \u003d new DFSInputStreamCaheKey(userName, inodePath);\n+  FSDataInputStream getDfsInputStream(String userName, String inodePath,\n+                                      int namenodeId) {\n+    DFSInputStreamCacheKey k \u003d\n+        new DFSInputStreamCacheKey(userName, inodePath, namenodeId);\n     FSDataInputStream s \u003d null;\n     try {\n       s \u003d inputstreamCache.get(k);\n     } catch (ExecutionException e) {\n       LOG.warn(\"Failed to create DFSInputStream for user:\" + userName\n           + \" Cause:\" + e);\n     }\n     return s;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  FSDataInputStream getDfsInputStream(String userName, String inodePath,\n                                      int namenodeId) {\n    DFSInputStreamCacheKey k \u003d\n        new DFSInputStreamCacheKey(userName, inodePath, namenodeId);\n    FSDataInputStream s \u003d null;\n    try {\n      s \u003d inputstreamCache.get(k);\n    } catch (ExecutionException e) {\n      LOG.warn(\"Failed to create DFSInputStream for user:\" + userName\n          + \" Cause:\" + e);\n    }\n    return s;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-nfs/src/main/java/org/apache/hadoop/hdfs/nfs/nfs3/DFSClientCache.java",
          "extendedDetails": {
            "oldValue": "[userName-String, inodePath-String]",
            "newValue": "[userName-String, inodePath-String, namenodeId-int]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-11575. Supporting HDFS NFS gateway with Federated HDFS. Contributed by Mukul Kumar Singh.\n",
          "commitDate": "10/10/17 10:38 AM",
          "commitName": "d6602b5f39833611b4afa4581552f6c4c37e23a8",
          "commitAuthor": "Jitendra Pandey",
          "commitDateOld": "17/09/15 2:18 PM",
          "commitNameOld": "9eee97508f350ed4629abb04e7781514ffa04070",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 753.85,
          "commitsBetweenForRepo": 5078,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,13 @@\n-  FSDataInputStream getDfsInputStream(String userName, String inodePath) {\n-    DFSInputStreamCaheKey k \u003d new DFSInputStreamCaheKey(userName, inodePath);\n+  FSDataInputStream getDfsInputStream(String userName, String inodePath,\n+                                      int namenodeId) {\n+    DFSInputStreamCacheKey k \u003d\n+        new DFSInputStreamCacheKey(userName, inodePath, namenodeId);\n     FSDataInputStream s \u003d null;\n     try {\n       s \u003d inputstreamCache.get(k);\n     } catch (ExecutionException e) {\n       LOG.warn(\"Failed to create DFSInputStream for user:\" + userName\n           + \" Cause:\" + e);\n     }\n     return s;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  FSDataInputStream getDfsInputStream(String userName, String inodePath,\n                                      int namenodeId) {\n    DFSInputStreamCacheKey k \u003d\n        new DFSInputStreamCacheKey(userName, inodePath, namenodeId);\n    FSDataInputStream s \u003d null;\n    try {\n      s \u003d inputstreamCache.get(k);\n    } catch (ExecutionException e) {\n      LOG.warn(\"Failed to create DFSInputStream for user:\" + userName\n          + \" Cause:\" + e);\n    }\n    return s;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-nfs/src/main/java/org/apache/hadoop/hdfs/nfs/nfs3/DFSClientCache.java",
          "extendedDetails": {}
        }
      ]
    },
    "05f35518f19d48890770128727289582cca3457b": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-5171. NFS should create input stream for a file and try to share it with multiple read requests. Contributed by Haohui Mai\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1535586 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/10/13 4:40 PM",
      "commitName": "05f35518f19d48890770128727289582cca3457b",
      "commitAuthor": "Brandon Li",
      "diff": "@@ -0,0 +1,11 @@\n+  FSDataInputStream getDfsInputStream(String userName, String inodePath) {\n+    DFSInputStreamCaheKey k \u003d new DFSInputStreamCaheKey(userName, inodePath);\n+    FSDataInputStream s \u003d null;\n+    try {\n+      s \u003d inputstreamCache.get(k);\n+    } catch (ExecutionException e) {\n+      LOG.warn(\"Failed to create DFSInputStream for user:\" + userName\n+          + \" Cause:\" + e);\n+    }\n+    return s;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  FSDataInputStream getDfsInputStream(String userName, String inodePath) {\n    DFSInputStreamCaheKey k \u003d new DFSInputStreamCaheKey(userName, inodePath);\n    FSDataInputStream s \u003d null;\n    try {\n      s \u003d inputstreamCache.get(k);\n    } catch (ExecutionException e) {\n      LOG.warn(\"Failed to create DFSInputStream for user:\" + userName\n          + \" Cause:\" + e);\n    }\n    return s;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-nfs/src/main/java/org/apache/hadoop/hdfs/nfs/nfs3/DFSClientCache.java"
    }
  }
}