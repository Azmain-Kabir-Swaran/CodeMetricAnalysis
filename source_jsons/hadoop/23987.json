{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ShuffleHandler.java",
  "functionName": "recoverJobShuffleInfo",
  "functionId": "recoverJobShuffleInfo___jobIdStr-String__data-byte[]",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/ShuffleHandler.java",
  "functionStartLine": 735,
  "functionEndLine": 752,
  "numCommitsSeen": 59,
  "timeTaken": 1477,
  "changeHistory": [
    "f3c3d9e0c6eae02dd21f875097ef76d85025ffe4"
  ],
  "changeHistoryShort": {
    "f3c3d9e0c6eae02dd21f875097ef76d85025ffe4": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f3c3d9e0c6eae02dd21f875097ef76d85025ffe4": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-5652. NM Recovery. ShuffleHandler should handle NM restarts. (Jason Lowe via kasha)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1594329 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/05/14 12:10 PM",
      "commitName": "f3c3d9e0c6eae02dd21f875097ef76d85025ffe4",
      "commitAuthor": "Karthik Kambatla",
      "diff": "@@ -0,0 +1,18 @@\n+  private void recoverJobShuffleInfo(String jobIdStr, byte[] data)\n+      throws IOException {\n+    JobID jobId;\n+    try {\n+      jobId \u003d JobID.forName(jobIdStr);\n+    } catch (IllegalArgumentException e) {\n+      throw new IOException(\"Bad job ID \" + jobIdStr + \" in state store\", e);\n+    }\n+\n+    JobShuffleInfoProto proto \u003d JobShuffleInfoProto.parseFrom(data);\n+    String user \u003d proto.getUser();\n+    TokenProto tokenProto \u003d proto.getJobToken();\n+    Token\u003cJobTokenIdentifier\u003e jobToken \u003d new Token\u003cJobTokenIdentifier\u003e(\n+        tokenProto.getIdentifier().toByteArray(),\n+        tokenProto.getPassword().toByteArray(),\n+        new Text(tokenProto.getKind()), new Text(tokenProto.getService()));\n+    addJobToken(jobId, user, jobToken);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void recoverJobShuffleInfo(String jobIdStr, byte[] data)\n      throws IOException {\n    JobID jobId;\n    try {\n      jobId \u003d JobID.forName(jobIdStr);\n    } catch (IllegalArgumentException e) {\n      throw new IOException(\"Bad job ID \" + jobIdStr + \" in state store\", e);\n    }\n\n    JobShuffleInfoProto proto \u003d JobShuffleInfoProto.parseFrom(data);\n    String user \u003d proto.getUser();\n    TokenProto tokenProto \u003d proto.getJobToken();\n    Token\u003cJobTokenIdentifier\u003e jobToken \u003d new Token\u003cJobTokenIdentifier\u003e(\n        tokenProto.getIdentifier().toByteArray(),\n        tokenProto.getPassword().toByteArray(),\n        new Text(tokenProto.getKind()), new Text(tokenProto.getService()));\n    addJobToken(jobId, user, jobToken);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/ShuffleHandler.java"
    }
  }
}