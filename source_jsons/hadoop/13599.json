{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LowRedundancyBlocks.java",
  "functionName": "decrementBlockStat",
  "functionId": "decrementBlockStat___blockInfo-BlockInfo__priLevel-int__oldExpectedReplicas-int",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/LowRedundancyBlocks.java",
  "functionStartLine": 398,
  "functionEndLine": 423,
  "numCommitsSeen": 8,
  "timeTaken": 2697,
  "changeHistory": [
    "9499df7b81b55b488a32fd59798a543dafef4ef8",
    "999c8fcbefc876d9c26c23c5b87a64a81e4f113e"
  ],
  "changeHistoryShort": {
    "9499df7b81b55b488a32fd59798a543dafef4ef8": "Ybodychange",
    "999c8fcbefc876d9c26c23c5b87a64a81e4f113e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9499df7b81b55b488a32fd59798a543dafef4ef8": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13658. Expose HighestPriorityLowRedundancy blocks statistics. Contributed by Kitti Nanasi.\n",
      "commitDate": "08/08/18 10:40 AM",
      "commitName": "9499df7b81b55b488a32fd59798a543dafef4ef8",
      "commitAuthor": "Xiao Chen",
      "commitDateOld": "01/02/18 9:34 PM",
      "commitNameOld": "4aef8bd2efd68bf96c077ddda1538dcd5691b437",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 187.5,
      "commitsBetweenForRepo": 1899,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,26 @@\n   private void decrementBlockStat(BlockInfo blockInfo, int priLevel,\n       int oldExpectedReplicas) {\n     if (blockInfo.isStriped()) {\n       lowRedundancyECBlockGroups.decrement();\n       if (priLevel \u003d\u003d QUEUE_WITH_CORRUPT_BLOCKS) {\n         corruptECBlockGroups.decrement();\n       }\n+      if (priLevel \u003d\u003d QUEUE_HIGHEST_PRIORITY) {\n+        highestPriorityLowRedundancyECBlocks.decrement();\n+      }\n     } else {\n       lowRedundancyBlocks.decrement();\n       if (priLevel \u003d\u003d QUEUE_WITH_CORRUPT_BLOCKS) {\n         corruptBlocks.decrement();\n         if (oldExpectedReplicas \u003d\u003d 1) {\n           corruptReplicationOneBlocks.decrement();\n           assert corruptReplicationOneBlocks.longValue() \u003e\u003d 0 :\n               \"Number of corrupt blocks with replication factor 1 \" +\n                   \"should be non-negative\";\n         }\n       }\n+      if (priLevel \u003d\u003d QUEUE_HIGHEST_PRIORITY) {\n+        highestPriorityLowRedundancyReplicatedBlocks.decrement();\n+      }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void decrementBlockStat(BlockInfo blockInfo, int priLevel,\n      int oldExpectedReplicas) {\n    if (blockInfo.isStriped()) {\n      lowRedundancyECBlockGroups.decrement();\n      if (priLevel \u003d\u003d QUEUE_WITH_CORRUPT_BLOCKS) {\n        corruptECBlockGroups.decrement();\n      }\n      if (priLevel \u003d\u003d QUEUE_HIGHEST_PRIORITY) {\n        highestPriorityLowRedundancyECBlocks.decrement();\n      }\n    } else {\n      lowRedundancyBlocks.decrement();\n      if (priLevel \u003d\u003d QUEUE_WITH_CORRUPT_BLOCKS) {\n        corruptBlocks.decrement();\n        if (oldExpectedReplicas \u003d\u003d 1) {\n          corruptReplicationOneBlocks.decrement();\n          assert corruptReplicationOneBlocks.longValue() \u003e\u003d 0 :\n              \"Number of corrupt blocks with replication factor 1 \" +\n                  \"should be non-negative\";\n        }\n      }\n      if (priLevel \u003d\u003d QUEUE_HIGHEST_PRIORITY) {\n        highestPriorityLowRedundancyReplicatedBlocks.decrement();\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/LowRedundancyBlocks.java",
      "extendedDetails": {}
    },
    "999c8fcbefc876d9c26c23c5b87a64a81e4f113e": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-10999. Introduce separate stats for Replicated and Erasure Coded Blocks apart from the current Aggregated stats. (Manoj Govindassamy via lei)\n",
      "commitDate": "14/06/17 10:44 AM",
      "commitName": "999c8fcbefc876d9c26c23c5b87a64a81e4f113e",
      "commitAuthor": "Lei Xu",
      "diff": "@@ -0,0 +1,20 @@\n+  private void decrementBlockStat(BlockInfo blockInfo, int priLevel,\n+      int oldExpectedReplicas) {\n+    if (blockInfo.isStriped()) {\n+      lowRedundancyECBlockGroups.decrement();\n+      if (priLevel \u003d\u003d QUEUE_WITH_CORRUPT_BLOCKS) {\n+        corruptECBlockGroups.decrement();\n+      }\n+    } else {\n+      lowRedundancyBlocks.decrement();\n+      if (priLevel \u003d\u003d QUEUE_WITH_CORRUPT_BLOCKS) {\n+        corruptBlocks.decrement();\n+        if (oldExpectedReplicas \u003d\u003d 1) {\n+          corruptReplicationOneBlocks.decrement();\n+          assert corruptReplicationOneBlocks.longValue() \u003e\u003d 0 :\n+              \"Number of corrupt blocks with replication factor 1 \" +\n+                  \"should be non-negative\";\n+        }\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void decrementBlockStat(BlockInfo blockInfo, int priLevel,\n      int oldExpectedReplicas) {\n    if (blockInfo.isStriped()) {\n      lowRedundancyECBlockGroups.decrement();\n      if (priLevel \u003d\u003d QUEUE_WITH_CORRUPT_BLOCKS) {\n        corruptECBlockGroups.decrement();\n      }\n    } else {\n      lowRedundancyBlocks.decrement();\n      if (priLevel \u003d\u003d QUEUE_WITH_CORRUPT_BLOCKS) {\n        corruptBlocks.decrement();\n        if (oldExpectedReplicas \u003d\u003d 1) {\n          corruptReplicationOneBlocks.decrement();\n          assert corruptReplicationOneBlocks.longValue() \u003e\u003d 0 :\n              \"Number of corrupt blocks with replication factor 1 \" +\n                  \"should be non-negative\";\n        }\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/LowRedundancyBlocks.java"
    }
  }
}