{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DatanodeAdminBackoffMonitor.java",
  "functionName": "processConf",
  "functionId": "processConf",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeAdminBackoffMonitor.java",
  "functionStartLine": 109,
  "functionEndLine": 143,
  "numCommitsSeen": 1,
  "timeTaken": 959,
  "changeHistory": [
    "c93cb6790e0f1c64efd03d859f907a0522010894"
  ],
  "changeHistoryShort": {
    "c93cb6790e0f1c64efd03d859f907a0522010894": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c93cb6790e0f1c64efd03d859f907a0522010894": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-14854. Create improved decommission monitor implementation. Contributed by Stephen O\u0027Donnell.\n\nReviewed-by: Inigo Goiri \u003cinigoiri@apache.org\u003e\nSigned-off-by: Wei-Chiu Chuang \u003cweichiu@apache.org\u003e\n",
      "commitDate": "10/12/19 5:16 PM",
      "commitName": "c93cb6790e0f1c64efd03d859f907a0522010894",
      "commitAuthor": "Stephen O\u0027Donnell",
      "diff": "@@ -0,0 +1,35 @@\n+  protected void processConf() {\n+    this.pendingRepLimit \u003d conf.getInt(\n+        DFSConfigKeys.DFS_NAMENODE_DECOMMISSION_BACKOFF_MONITOR_PENDING_LIMIT,\n+        DFSConfigKeys.\n+            DFS_NAMENODE_DECOMMISSION_BACKOFF_MONITOR_PENDING_LIMIT_DEFAULT);\n+    if (this.pendingRepLimit \u003c 1) {\n+      LOG.error(\"{} is set to an invalid value, it must be greater than \"+\n+              \"zero. Defaulting to {}\",\n+          DFSConfigKeys.\n+              DFS_NAMENODE_DECOMMISSION_BACKOFF_MONITOR_PENDING_LIMIT,\n+          DFSConfigKeys.\n+              DFS_NAMENODE_DECOMMISSION_BACKOFF_MONITOR_PENDING_LIMIT_DEFAULT\n+      );\n+      this.pendingRepLimit \u003d DFSConfigKeys.\n+          DFS_NAMENODE_DECOMMISSION_BACKOFF_MONITOR_PENDING_LIMIT_DEFAULT;\n+    }\n+    this.blocksPerLock \u003d conf.getInt(\n+        DFSConfigKeys.\n+            DFS_NAMENODE_DECOMMISSION_BACKOFF_MONITOR_PENDING_BLOCKS_PER_LOCK,\n+        DFSConfigKeys.\n+            DFS_NAMENODE_DECOMMISSION_BACKOFF_MONITOR_PENDING_BLOCKS_PER_LOCK_DEFAULT\n+    );\n+    if (blocksPerLock \u003c\u003d 0) {\n+      LOG.error(\"{} is set to an invalid value, it must be greater than \"+\n+              \"zero. Defaulting to {}\",\n+          DFSConfigKeys.\n+              DFS_NAMENODE_DECOMMISSION_BACKOFF_MONITOR_PENDING_BLOCKS_PER_LOCK,\n+          DFSConfigKeys.\n+              DFS_NAMENODE_DECOMMISSION_BACKOFF_MONITOR_PENDING_BLOCKS_PER_LOCK_DEFAULT);\n+      blocksPerLock \u003d\n+          DFSConfigKeys.\n+              DFS_NAMENODE_DECOMMISSION_BACKOFF_MONITOR_PENDING_BLOCKS_PER_LOCK_DEFAULT;\n+    }\n+    LOG.info(\"Initialized the Backoff Decommission and Maintenance Monitor\");\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void processConf() {\n    this.pendingRepLimit \u003d conf.getInt(\n        DFSConfigKeys.DFS_NAMENODE_DECOMMISSION_BACKOFF_MONITOR_PENDING_LIMIT,\n        DFSConfigKeys.\n            DFS_NAMENODE_DECOMMISSION_BACKOFF_MONITOR_PENDING_LIMIT_DEFAULT);\n    if (this.pendingRepLimit \u003c 1) {\n      LOG.error(\"{} is set to an invalid value, it must be greater than \"+\n              \"zero. Defaulting to {}\",\n          DFSConfigKeys.\n              DFS_NAMENODE_DECOMMISSION_BACKOFF_MONITOR_PENDING_LIMIT,\n          DFSConfigKeys.\n              DFS_NAMENODE_DECOMMISSION_BACKOFF_MONITOR_PENDING_LIMIT_DEFAULT\n      );\n      this.pendingRepLimit \u003d DFSConfigKeys.\n          DFS_NAMENODE_DECOMMISSION_BACKOFF_MONITOR_PENDING_LIMIT_DEFAULT;\n    }\n    this.blocksPerLock \u003d conf.getInt(\n        DFSConfigKeys.\n            DFS_NAMENODE_DECOMMISSION_BACKOFF_MONITOR_PENDING_BLOCKS_PER_LOCK,\n        DFSConfigKeys.\n            DFS_NAMENODE_DECOMMISSION_BACKOFF_MONITOR_PENDING_BLOCKS_PER_LOCK_DEFAULT\n    );\n    if (blocksPerLock \u003c\u003d 0) {\n      LOG.error(\"{} is set to an invalid value, it must be greater than \"+\n              \"zero. Defaulting to {}\",\n          DFSConfigKeys.\n              DFS_NAMENODE_DECOMMISSION_BACKOFF_MONITOR_PENDING_BLOCKS_PER_LOCK,\n          DFSConfigKeys.\n              DFS_NAMENODE_DECOMMISSION_BACKOFF_MONITOR_PENDING_BLOCKS_PER_LOCK_DEFAULT);\n      blocksPerLock \u003d\n          DFSConfigKeys.\n              DFS_NAMENODE_DECOMMISSION_BACKOFF_MONITOR_PENDING_BLOCKS_PER_LOCK_DEFAULT;\n    }\n    LOG.info(\"Initialized the Backoff Decommission and Maintenance Monitor\");\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeAdminBackoffMonitor.java"
    }
  }
}