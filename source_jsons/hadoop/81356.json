{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NetUtils.java",
  "functionName": "createSocketAddrForHost",
  "functionId": "createSocketAddrForHost___host-String__port-int",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/NetUtils.java",
  "functionStartLine": 231,
  "functionEndLine": 248,
  "numCommitsSeen": 39,
  "timeTaken": 1359,
  "changeHistory": [
    "8f83a2355bc6224a92fb7ba24890ddf3ab317ae6",
    "4bb572d3366c478924fa95e513858e8a8c793774"
  ],
  "changeHistoryShort": {
    "8f83a2355bc6224a92fb7ba24890ddf3ab317ae6": "Ybodychange",
    "4bb572d3366c478924fa95e513858e8a8c793774": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8f83a2355bc6224a92fb7ba24890ddf3ab317ae6": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-7964. Deadlock in NetUtils and SecurityUtil class initialization. Contributed by Daryn Sharp.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1230249 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/01/12 1:02 PM",
      "commitName": "8f83a2355bc6224a92fb7ba24890ddf3ab317ae6",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "05/01/12 10:41 AM",
      "commitNameOld": "4bb572d3366c478924fa95e513858e8a8c793774",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 6.1,
      "commitsBetweenForRepo": 32,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   public static InetSocketAddress createSocketAddrForHost(String host, int port) {\n     String staticHost \u003d getStaticResolution(host);\n     String resolveHost \u003d (staticHost !\u003d null) ? staticHost : host;\n     \n     InetSocketAddress addr;\n     try {\n-      InetAddress iaddr \u003d hostResolver.getByName(resolveHost);\n+      InetAddress iaddr \u003d SecurityUtil.getByName(resolveHost);\n       // if there is a static entry for the host, make the returned\n       // address look like the original given host\n       if (staticHost !\u003d null) {\n         iaddr \u003d InetAddress.getByAddress(host, iaddr.getAddress());\n       }\n       addr \u003d new InetSocketAddress(iaddr, port);\n     } catch (UnknownHostException e) {\n       addr \u003d InetSocketAddress.createUnresolved(host, port);\n     }\n     return addr;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static InetSocketAddress createSocketAddrForHost(String host, int port) {\n    String staticHost \u003d getStaticResolution(host);\n    String resolveHost \u003d (staticHost !\u003d null) ? staticHost : host;\n    \n    InetSocketAddress addr;\n    try {\n      InetAddress iaddr \u003d SecurityUtil.getByName(resolveHost);\n      // if there is a static entry for the host, make the returned\n      // address look like the original given host\n      if (staticHost !\u003d null) {\n        iaddr \u003d InetAddress.getByAddress(host, iaddr.getAddress());\n      }\n      addr \u003d new InetSocketAddress(iaddr, port);\n    } catch (UnknownHostException e) {\n      addr \u003d InetSocketAddress.createUnresolved(host, port);\n    }\n    return addr;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/NetUtils.java",
      "extendedDetails": {}
    },
    "4bb572d3366c478924fa95e513858e8a8c793774": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7808. Port HADOOP-7510 - Add configurable option to use original hostname in token instead of IP to allow server IP change. Contributed by Daryn Sharp.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1227737 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/01/12 10:41 AM",
      "commitName": "4bb572d3366c478924fa95e513858e8a8c793774",
      "commitAuthor": "Suresh Srinivas",
      "diff": "@@ -0,0 +1,18 @@\n+  public static InetSocketAddress createSocketAddrForHost(String host, int port) {\n+    String staticHost \u003d getStaticResolution(host);\n+    String resolveHost \u003d (staticHost !\u003d null) ? staticHost : host;\n+    \n+    InetSocketAddress addr;\n+    try {\n+      InetAddress iaddr \u003d hostResolver.getByName(resolveHost);\n+      // if there is a static entry for the host, make the returned\n+      // address look like the original given host\n+      if (staticHost !\u003d null) {\n+        iaddr \u003d InetAddress.getByAddress(host, iaddr.getAddress());\n+      }\n+      addr \u003d new InetSocketAddress(iaddr, port);\n+    } catch (UnknownHostException e) {\n+      addr \u003d InetSocketAddress.createUnresolved(host, port);\n+    }\n+    return addr;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static InetSocketAddress createSocketAddrForHost(String host, int port) {\n    String staticHost \u003d getStaticResolution(host);\n    String resolveHost \u003d (staticHost !\u003d null) ? staticHost : host;\n    \n    InetSocketAddress addr;\n    try {\n      InetAddress iaddr \u003d hostResolver.getByName(resolveHost);\n      // if there is a static entry for the host, make the returned\n      // address look like the original given host\n      if (staticHost !\u003d null) {\n        iaddr \u003d InetAddress.getByAddress(host, iaddr.getAddress());\n      }\n      addr \u003d new InetSocketAddress(iaddr, port);\n    } catch (UnknownHostException e) {\n      addr \u003d InetSocketAddress.createUnresolved(host, port);\n    }\n    return addr;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/NetUtils.java"
    }
  }
}