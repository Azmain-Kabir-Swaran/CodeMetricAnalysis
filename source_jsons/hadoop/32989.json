{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LogAggregationService.java",
  "functionName": "checkAndEnableAppAggregators",
  "functionId": "checkAndEnableAppAggregators",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/LogAggregationService.java",
  "functionStartLine": 393,
  "functionEndLine": 418,
  "numCommitsSeen": 36,
  "timeTaken": 1102,
  "changeHistory": [
    "4b540bbfcf02d828052999215c6135603d98f5db"
  ],
  "changeHistoryShort": {
    "4b540bbfcf02d828052999215c6135603d98f5db": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4b540bbfcf02d828052999215c6135603d98f5db": {
      "type": "Yintroduced",
      "commitMessage": "YARN-8418. App local logs could leaked if log aggregation fails to initialize for the app. (Bibin A Chundatt via wangda)\n\nChange-Id: I29a23ca4b219b48c92e7975cd44cddb8b0e04104\n",
      "commitDate": "31/07/18 12:08 PM",
      "commitName": "4b540bbfcf02d828052999215c6135603d98f5db",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,26 @@\n+  private void checkAndEnableAppAggregators() {\n+    for (ApplicationId appId : invalidTokenApps) {\n+      try {\n+        AppLogAggregator aggregator \u003d appLogAggregators.get(appId);\n+        if (aggregator !\u003d null) {\n+          Credentials credentials \u003d\n+              context.getSystemCredentialsForApps().get(appId);\n+          if (credentials !\u003d null) {\n+            // Create the app dir again with\n+            LogAggregationFileController logAggregationFileController \u003d\n+                getLogAggregationFileController(getConfig());\n+            UserGroupInformation userUgi \u003d\n+                aggregator.updateCredentials(credentials);\n+            logAggregationFileController\n+                .createAppDir(userUgi.getShortUserName(), appId, userUgi);\n+            aggregator.enableLogAggregation();\n+          }\n+          invalidTokenApps.remove(appId);\n+          LOG.info(\"LogAggregation enabled for application {}\", appId);\n+        }\n+      } catch (Exception e) {\n+        //Ignore exception\n+        LOG.warn(\"Enable aggregators failed {}\", appId);\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void checkAndEnableAppAggregators() {\n    for (ApplicationId appId : invalidTokenApps) {\n      try {\n        AppLogAggregator aggregator \u003d appLogAggregators.get(appId);\n        if (aggregator !\u003d null) {\n          Credentials credentials \u003d\n              context.getSystemCredentialsForApps().get(appId);\n          if (credentials !\u003d null) {\n            // Create the app dir again with\n            LogAggregationFileController logAggregationFileController \u003d\n                getLogAggregationFileController(getConfig());\n            UserGroupInformation userUgi \u003d\n                aggregator.updateCredentials(credentials);\n            logAggregationFileController\n                .createAppDir(userUgi.getShortUserName(), appId, userUgi);\n            aggregator.enableLogAggregation();\n          }\n          invalidTokenApps.remove(appId);\n          LOG.info(\"LogAggregation enabled for application {}\", appId);\n        }\n      } catch (Exception e) {\n        //Ignore exception\n        LOG.warn(\"Enable aggregators failed {}\", appId);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/LogAggregationService.java"
    }
  }
}