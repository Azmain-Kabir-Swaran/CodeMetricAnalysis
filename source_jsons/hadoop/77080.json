{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "MapFile.java",
  "functionName": "open",
  "functionId": "open___dir-Path__comparator-WritableComparator__conf-Configuration__options-SequenceFile.Reader.Option",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/MapFile.java",
  "functionStartLine": 424,
  "functionEndLine": 448,
  "numCommitsSeen": 20,
  "timeTaken": 1391,
  "changeHistory": [
    "fc7c8f9bf2588fd25f8b457ee4a9b444e619519c",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "6333b3e485dc76a7505bf74e041e274e0a8e6faf",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36"
  ],
  "changeHistoryShort": {
    "fc7c8f9bf2588fd25f8b457ee4a9b444e619519c": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "6333b3e485dc76a7505bf74e041e274e0a8e6faf": "Ymultichange(Yparameterchange,Ybodychange)",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": "Yintroduced"
  },
  "changeHistoryDetails": {
    "fc7c8f9bf2588fd25f8b457ee4a9b444e619519c": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10686. Writables are not always configured. (Abraham Elmahrek via kasha)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1602079 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/14 12:23 AM",
      "commitName": "fc7c8f9bf2588fd25f8b457ee4a9b444e619519c",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "10/04/14 9:40 PM",
      "commitNameOld": "91ebf5890422cb5d28708dbb6f3848430455f51d",
      "commitAuthorOld": "Chris Nauroth",
      "daysBetweenCommits": 62.11,
      "commitsBetweenForRepo": 338,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,25 @@\n     protected synchronized void open(Path dir,\n                                      WritableComparator comparator,\n                                      Configuration conf, \n                                      SequenceFile.Reader.Option... options\n                                      ) throws IOException {\n       Path dataFile \u003d new Path(dir, DATA_FILE_NAME);\n       Path indexFile \u003d new Path(dir, INDEX_FILE_NAME);\n \n       // open the data\n       this.data \u003d createDataFileReader(dataFile, conf, options);\n       this.firstPosition \u003d data.getPosition();\n \n-      if (comparator \u003d\u003d null)\n-        this.comparator \u003d \n-          WritableComparator.get(data.getKeyClass().\n-                                   asSubclass(WritableComparable.class));\n-      else\n+      if (comparator \u003d\u003d null) {\n+        Class\u003c? extends WritableComparable\u003e cls;\n+        cls \u003d data.getKeyClass().asSubclass(WritableComparable.class);\n+        this.comparator \u003d WritableComparator.get(cls, conf);\n+      } else {\n         this.comparator \u003d comparator;\n+      }\n \n       // open the index\n       SequenceFile.Reader.Option[] indexOptions \u003d\n         Options.prependOptions(options, SequenceFile.Reader.file(indexFile));\n       this.index \u003d new SequenceFile.Reader(conf, indexOptions);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected synchronized void open(Path dir,\n                                     WritableComparator comparator,\n                                     Configuration conf, \n                                     SequenceFile.Reader.Option... options\n                                     ) throws IOException {\n      Path dataFile \u003d new Path(dir, DATA_FILE_NAME);\n      Path indexFile \u003d new Path(dir, INDEX_FILE_NAME);\n\n      // open the data\n      this.data \u003d createDataFileReader(dataFile, conf, options);\n      this.firstPosition \u003d data.getPosition();\n\n      if (comparator \u003d\u003d null) {\n        Class\u003c? extends WritableComparable\u003e cls;\n        cls \u003d data.getKeyClass().asSubclass(WritableComparable.class);\n        this.comparator \u003d WritableComparator.get(cls, conf);\n      } else {\n        this.comparator \u003d comparator;\n      }\n\n      // open the index\n      SequenceFile.Reader.Option[] indexOptions \u003d\n        Options.prependOptions(options, SequenceFile.Reader.file(indexFile));\n      this.index \u003d new SequenceFile.Reader(conf, indexOptions);\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/MapFile.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    protected synchronized void open(Path dir,\n                                     WritableComparator comparator,\n                                     Configuration conf, \n                                     SequenceFile.Reader.Option... options\n                                     ) throws IOException {\n      Path dataFile \u003d new Path(dir, DATA_FILE_NAME);\n      Path indexFile \u003d new Path(dir, INDEX_FILE_NAME);\n\n      // open the data\n      this.data \u003d createDataFileReader(dataFile, conf, options);\n      this.firstPosition \u003d data.getPosition();\n\n      if (comparator \u003d\u003d null)\n        this.comparator \u003d \n          WritableComparator.get(data.getKeyClass().\n                                   asSubclass(WritableComparable.class));\n      else\n        this.comparator \u003d comparator;\n\n      // open the index\n      SequenceFile.Reader.Option[] indexOptions \u003d\n        Options.prependOptions(options, SequenceFile.Reader.file(indexFile));\n      this.index \u003d new SequenceFile.Reader(conf, indexOptions);\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/MapFile.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/io/MapFile.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/MapFile.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    protected synchronized void open(Path dir,\n                                     WritableComparator comparator,\n                                     Configuration conf, \n                                     SequenceFile.Reader.Option... options\n                                     ) throws IOException {\n      Path dataFile \u003d new Path(dir, DATA_FILE_NAME);\n      Path indexFile \u003d new Path(dir, INDEX_FILE_NAME);\n\n      // open the data\n      this.data \u003d createDataFileReader(dataFile, conf, options);\n      this.firstPosition \u003d data.getPosition();\n\n      if (comparator \u003d\u003d null)\n        this.comparator \u003d \n          WritableComparator.get(data.getKeyClass().\n                                   asSubclass(WritableComparable.class));\n      else\n        this.comparator \u003d comparator;\n\n      // open the index\n      SequenceFile.Reader.Option[] indexOptions \u003d\n        Options.prependOptions(options, SequenceFile.Reader.file(indexFile));\n      this.index \u003d new SequenceFile.Reader(conf, indexOptions);\n    }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/io/MapFile.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/io/MapFile.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/io/MapFile.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    protected synchronized void open(Path dir,\n                                     WritableComparator comparator,\n                                     Configuration conf, \n                                     SequenceFile.Reader.Option... options\n                                     ) throws IOException {\n      Path dataFile \u003d new Path(dir, DATA_FILE_NAME);\n      Path indexFile \u003d new Path(dir, INDEX_FILE_NAME);\n\n      // open the data\n      this.data \u003d createDataFileReader(dataFile, conf, options);\n      this.firstPosition \u003d data.getPosition();\n\n      if (comparator \u003d\u003d null)\n        this.comparator \u003d \n          WritableComparator.get(data.getKeyClass().\n                                   asSubclass(WritableComparable.class));\n      else\n        this.comparator \u003d comparator;\n\n      // open the index\n      SequenceFile.Reader.Option[] indexOptions \u003d\n        Options.prependOptions(options, SequenceFile.Reader.file(indexFile));\n      this.index \u003d new SequenceFile.Reader(conf, indexOptions);\n    }",
      "path": "common/src/java/org/apache/hadoop/io/MapFile.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/io/MapFile.java",
        "newPath": "common/src/java/org/apache/hadoop/io/MapFile.java"
      }
    },
    "6333b3e485dc76a7505bf74e041e274e0a8e6faf": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-6856. Simplify constructors for SequenceFile, and MapFile. (omalley)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1002937 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/09/10 7:59 PM",
      "commitName": "6333b3e485dc76a7505bf74e041e274e0a8e6faf",
      "commitAuthor": "Owen O\u0027Malley",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-6856. Simplify constructors for SequenceFile, and MapFile. (omalley)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1002937 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "29/09/10 7:59 PM",
          "commitName": "6333b3e485dc76a7505bf74e041e274e0a8e6faf",
          "commitAuthor": "Owen O\u0027Malley",
          "commitDateOld": "11/06/10 2:34 PM",
          "commitNameOld": "6378822a67c0baa502d22201f5c2b478cbe1261c",
          "commitAuthorOld": "Thomas White",
          "daysBetweenCommits": 110.23,
          "commitsBetweenForRepo": 81,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,24 @@\n-    protected synchronized void open(FileSystem fs, String dirName,\n-        WritableComparator comparator, Configuration conf) throws IOException {\n-      Path dir \u003d new Path(dirName);\n+    protected synchronized void open(Path dir,\n+                                     WritableComparator comparator,\n+                                     Configuration conf, \n+                                     SequenceFile.Reader.Option... options\n+                                     ) throws IOException {\n       Path dataFile \u003d new Path(dir, DATA_FILE_NAME);\n       Path indexFile \u003d new Path(dir, INDEX_FILE_NAME);\n \n       // open the data\n-      this.data \u003d createDataFileReader(fs, dataFile, conf);\n+      this.data \u003d createDataFileReader(dataFile, conf, options);\n       this.firstPosition \u003d data.getPosition();\n \n       if (comparator \u003d\u003d null)\n-        this.comparator \u003d WritableComparator.get(data.getKeyClass().asSubclass(WritableComparable.class));\n+        this.comparator \u003d \n+          WritableComparator.get(data.getKeyClass().\n+                                   asSubclass(WritableComparable.class));\n       else\n         this.comparator \u003d comparator;\n \n       // open the index\n-      this.index \u003d new SequenceFile.Reader(fs, indexFile, conf);\n+      SequenceFile.Reader.Option[] indexOptions \u003d\n+        Options.prependOptions(options, SequenceFile.Reader.file(indexFile));\n+      this.index \u003d new SequenceFile.Reader(conf, indexOptions);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    protected synchronized void open(Path dir,\n                                     WritableComparator comparator,\n                                     Configuration conf, \n                                     SequenceFile.Reader.Option... options\n                                     ) throws IOException {\n      Path dataFile \u003d new Path(dir, DATA_FILE_NAME);\n      Path indexFile \u003d new Path(dir, INDEX_FILE_NAME);\n\n      // open the data\n      this.data \u003d createDataFileReader(dataFile, conf, options);\n      this.firstPosition \u003d data.getPosition();\n\n      if (comparator \u003d\u003d null)\n        this.comparator \u003d \n          WritableComparator.get(data.getKeyClass().\n                                   asSubclass(WritableComparable.class));\n      else\n        this.comparator \u003d comparator;\n\n      // open the index\n      SequenceFile.Reader.Option[] indexOptions \u003d\n        Options.prependOptions(options, SequenceFile.Reader.file(indexFile));\n      this.index \u003d new SequenceFile.Reader(conf, indexOptions);\n    }",
          "path": "src/java/org/apache/hadoop/io/MapFile.java",
          "extendedDetails": {
            "oldValue": "[fs-FileSystem, dirName-String, comparator-WritableComparator, conf-Configuration]",
            "newValue": "[dir-Path, comparator-WritableComparator, conf-Configuration, options-SequenceFile.Reader.Option]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-6856. Simplify constructors for SequenceFile, and MapFile. (omalley)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1002937 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "29/09/10 7:59 PM",
          "commitName": "6333b3e485dc76a7505bf74e041e274e0a8e6faf",
          "commitAuthor": "Owen O\u0027Malley",
          "commitDateOld": "11/06/10 2:34 PM",
          "commitNameOld": "6378822a67c0baa502d22201f5c2b478cbe1261c",
          "commitAuthorOld": "Thomas White",
          "daysBetweenCommits": 110.23,
          "commitsBetweenForRepo": 81,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,24 @@\n-    protected synchronized void open(FileSystem fs, String dirName,\n-        WritableComparator comparator, Configuration conf) throws IOException {\n-      Path dir \u003d new Path(dirName);\n+    protected synchronized void open(Path dir,\n+                                     WritableComparator comparator,\n+                                     Configuration conf, \n+                                     SequenceFile.Reader.Option... options\n+                                     ) throws IOException {\n       Path dataFile \u003d new Path(dir, DATA_FILE_NAME);\n       Path indexFile \u003d new Path(dir, INDEX_FILE_NAME);\n \n       // open the data\n-      this.data \u003d createDataFileReader(fs, dataFile, conf);\n+      this.data \u003d createDataFileReader(dataFile, conf, options);\n       this.firstPosition \u003d data.getPosition();\n \n       if (comparator \u003d\u003d null)\n-        this.comparator \u003d WritableComparator.get(data.getKeyClass().asSubclass(WritableComparable.class));\n+        this.comparator \u003d \n+          WritableComparator.get(data.getKeyClass().\n+                                   asSubclass(WritableComparable.class));\n       else\n         this.comparator \u003d comparator;\n \n       // open the index\n-      this.index \u003d new SequenceFile.Reader(fs, indexFile, conf);\n+      SequenceFile.Reader.Option[] indexOptions \u003d\n+        Options.prependOptions(options, SequenceFile.Reader.file(indexFile));\n+      this.index \u003d new SequenceFile.Reader(conf, indexOptions);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    protected synchronized void open(Path dir,\n                                     WritableComparator comparator,\n                                     Configuration conf, \n                                     SequenceFile.Reader.Option... options\n                                     ) throws IOException {\n      Path dataFile \u003d new Path(dir, DATA_FILE_NAME);\n      Path indexFile \u003d new Path(dir, INDEX_FILE_NAME);\n\n      // open the data\n      this.data \u003d createDataFileReader(dataFile, conf, options);\n      this.firstPosition \u003d data.getPosition();\n\n      if (comparator \u003d\u003d null)\n        this.comparator \u003d \n          WritableComparator.get(data.getKeyClass().\n                                   asSubclass(WritableComparable.class));\n      else\n        this.comparator \u003d comparator;\n\n      // open the index\n      SequenceFile.Reader.Option[] indexOptions \u003d\n        Options.prependOptions(options, SequenceFile.Reader.file(indexFile));\n      this.index \u003d new SequenceFile.Reader(conf, indexOptions);\n    }",
          "path": "src/java/org/apache/hadoop/io/MapFile.java",
          "extendedDetails": {}
        }
      ]
    },
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-4687 Moving src directories on branch\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/core/branches/HADOOP-4687/core@776174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/05/09 9:20 PM",
      "commitName": "5128a9a453d64bfe1ed978cf9ffed27985eeef36",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,18 @@\n+    protected synchronized void open(FileSystem fs, String dirName,\n+        WritableComparator comparator, Configuration conf) throws IOException {\n+      Path dir \u003d new Path(dirName);\n+      Path dataFile \u003d new Path(dir, DATA_FILE_NAME);\n+      Path indexFile \u003d new Path(dir, INDEX_FILE_NAME);\n+\n+      // open the data\n+      this.data \u003d createDataFileReader(fs, dataFile, conf);\n+      this.firstPosition \u003d data.getPosition();\n+\n+      if (comparator \u003d\u003d null)\n+        this.comparator \u003d WritableComparator.get(data.getKeyClass().asSubclass(WritableComparable.class));\n+      else\n+        this.comparator \u003d comparator;\n+\n+      // open the index\n+      this.index \u003d new SequenceFile.Reader(fs, indexFile, conf);\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    protected synchronized void open(FileSystem fs, String dirName,\n        WritableComparator comparator, Configuration conf) throws IOException {\n      Path dir \u003d new Path(dirName);\n      Path dataFile \u003d new Path(dir, DATA_FILE_NAME);\n      Path indexFile \u003d new Path(dir, INDEX_FILE_NAME);\n\n      // open the data\n      this.data \u003d createDataFileReader(fs, dataFile, conf);\n      this.firstPosition \u003d data.getPosition();\n\n      if (comparator \u003d\u003d null)\n        this.comparator \u003d WritableComparator.get(data.getKeyClass().asSubclass(WritableComparable.class));\n      else\n        this.comparator \u003d comparator;\n\n      // open the index\n      this.index \u003d new SequenceFile.Reader(fs, indexFile, conf);\n    }",
      "path": "src/java/org/apache/hadoop/io/MapFile.java"
    }
  }
}