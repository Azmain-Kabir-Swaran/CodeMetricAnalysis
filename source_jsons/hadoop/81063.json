{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Configuration.java",
  "functionName": "handleStartProperty",
  "functionId": "handleStartProperty",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java",
  "functionStartLine": 3177,
  "functionEndLine": 3204,
  "numCommitsSeen": 132,
  "timeTaken": 1266,
  "changeHistory": [
    "f51da9c4d1423c2ac92eb4f40e973264e7e968cc"
  ],
  "changeHistoryShort": {
    "f51da9c4d1423c2ac92eb4f40e973264e7e968cc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f51da9c4d1423c2ac92eb4f40e973264e7e968cc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-15554. Improve JIT performance for Configuration parsing. Contributed by Todd Lipcon.\n",
      "commitDate": "02/07/18 9:31 AM",
      "commitName": "f51da9c4d1423c2ac92eb4f40e973264e7e968cc",
      "commitAuthor": "Andrew Wang",
      "diff": "@@ -0,0 +1,28 @@\n+    private void handleStartProperty() {\n+      confName \u003d null;\n+      confValue \u003d null;\n+      confFinal \u003d false;\n+      confTag \u003d null;\n+      confSource.clear();\n+\n+      // First test for short format configuration\n+      int attrCount \u003d reader.getAttributeCount();\n+      for (int i \u003d 0; i \u003c attrCount; i++) {\n+        String propertyAttr \u003d reader.getAttributeLocalName(i);\n+        if (\"name\".equals(propertyAttr)) {\n+          confName \u003d StringInterner.weakIntern(\n+              reader.getAttributeValue(i));\n+        } else if (\"value\".equals(propertyAttr)) {\n+          confValue \u003d StringInterner.weakIntern(\n+              reader.getAttributeValue(i));\n+        } else if (\"final\".equals(propertyAttr)) {\n+          confFinal \u003d \"true\".equals(reader.getAttributeValue(i));\n+        } else if (\"source\".equals(propertyAttr)) {\n+          confSource.add(StringInterner.weakIntern(\n+              reader.getAttributeValue(i)));\n+        } else if (\"tag\".equals(propertyAttr)) {\n+          confTag \u003d StringInterner\n+              .weakIntern(reader.getAttributeValue(i));\n+        }\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private void handleStartProperty() {\n      confName \u003d null;\n      confValue \u003d null;\n      confFinal \u003d false;\n      confTag \u003d null;\n      confSource.clear();\n\n      // First test for short format configuration\n      int attrCount \u003d reader.getAttributeCount();\n      for (int i \u003d 0; i \u003c attrCount; i++) {\n        String propertyAttr \u003d reader.getAttributeLocalName(i);\n        if (\"name\".equals(propertyAttr)) {\n          confName \u003d StringInterner.weakIntern(\n              reader.getAttributeValue(i));\n        } else if (\"value\".equals(propertyAttr)) {\n          confValue \u003d StringInterner.weakIntern(\n              reader.getAttributeValue(i));\n        } else if (\"final\".equals(propertyAttr)) {\n          confFinal \u003d \"true\".equals(reader.getAttributeValue(i));\n        } else if (\"source\".equals(propertyAttr)) {\n          confSource.add(StringInterner.weakIntern(\n              reader.getAttributeValue(i)));\n        } else if (\"tag\".equals(propertyAttr)) {\n          confTag \u003d StringInterner\n              .weakIntern(reader.getAttributeValue(i));\n        }\n      }\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java"
    }
  }
}