{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AbstractDelegationTokenSecretManager.java",
  "functionName": "createPassword",
  "functionId": "createPassword___identifier-TokenIdent",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java",
  "functionStartLine": 406,
  "functionEndLine": 426,
  "numCommitsSeen": 46,
  "timeTaken": 2354,
  "changeHistory": [
    "fd2f22adec5c2f21f792045dbfde9385c21403ec",
    "018664550507981297fd9f91e29408e6b7801ea9",
    "db45f047ab6b19d8a3e7752bb2cde10827cd8dad",
    "db890eef3208cc557476fa510f7a253ba22bc68a",
    "e4374d803663c626de610cd5f062f25a6d7d5d4e",
    "fdfedf4c31fa1d8338fc915a631dfc57c1ca38da",
    "de8b34a70e7ed4aef4675dbbef90df9f596efa12",
    "4a5ba3b7bd2360fd9605863630b477d362874e1e",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "fbdb24946051f7abc2d065217ef8c52e0cf3f16f",
    "27ab7f3db9a1489d81ecf32cc3493d1f4efae68b",
    "38c59c0af7595897dbff8e5f13b7ff6978b9c08b"
  ],
  "changeHistoryShort": {
    "fd2f22adec5c2f21f792045dbfde9385c21403ec": "Ybodychange",
    "018664550507981297fd9f91e29408e6b7801ea9": "Ybodychange",
    "db45f047ab6b19d8a3e7752bb2cde10827cd8dad": "Ybodychange",
    "db890eef3208cc557476fa510f7a253ba22bc68a": "Ybodychange",
    "e4374d803663c626de610cd5f062f25a6d7d5d4e": "Ybodychange",
    "fdfedf4c31fa1d8338fc915a631dfc57c1ca38da": "Ybodychange",
    "de8b34a70e7ed4aef4675dbbef90df9f596efa12": "Ybodychange",
    "4a5ba3b7bd2360fd9605863630b477d362874e1e": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "fbdb24946051f7abc2d065217ef8c52e0cf3f16f": "Ybodychange",
    "27ab7f3db9a1489d81ecf32cc3493d1f4efae68b": "Ymultichange(Ymodifierchange,Ybodychange)",
    "38c59c0af7595897dbff8e5f13b7ff6978b9c08b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "fd2f22adec5c2f21f792045dbfde9385c21403ec": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13720. Add more info to the msgs printed in AbstractDelegationTokenSecretManager. Contributed by Yongjun Zhang.\n",
      "commitDate": "10/11/16 10:42 PM",
      "commitName": "fd2f22adec5c2f21f792045dbfde9385c21403ec",
      "commitAuthor": "Yongjun Zhang",
      "commitDateOld": "20/09/16 1:20 PM",
      "commitNameOld": "e80386d69d5fb6a08aa3366e42d2518747af569f",
      "commitAuthorOld": "Mingliang Liu",
      "daysBetweenCommits": 51.43,
      "commitsBetweenForRepo": 451,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,21 @@\n   protected synchronized byte[] createPassword(TokenIdent identifier) {\n     int sequenceNum;\n     long now \u003d Time.now();\n     sequenceNum \u003d incrementDelegationTokenSeqNum();\n     identifier.setIssueDate(now);\n     identifier.setMaxDate(now + tokenMaxLifetime);\n     identifier.setMasterKeyId(currentKey.getKeyId());\n     identifier.setSequenceNumber(sequenceNum);\n-    LOG.info(\"Creating password for identifier: \" + identifier\n+    LOG.info(\"Creating password for identifier: \" + formatTokenId(identifier)\n         + \", currentKey: \" + currentKey.getKeyId());\n     byte[] password \u003d createPassword(identifier.getBytes(), currentKey.getKey());\n     DelegationTokenInformation tokenInfo \u003d new DelegationTokenInformation(now\n         + tokenRenewInterval, password, getTrackingIdIfEnabled(identifier));\n     try {\n       storeToken(identifier, tokenInfo);\n     } catch (IOException ioe) {\n-      LOG.error(\"Could not store token !!\", ioe);\n+      LOG.error(\"Could not store token \" + formatTokenId(identifier) + \"!!\",\n+          ioe);\n     }\n     return password;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected synchronized byte[] createPassword(TokenIdent identifier) {\n    int sequenceNum;\n    long now \u003d Time.now();\n    sequenceNum \u003d incrementDelegationTokenSeqNum();\n    identifier.setIssueDate(now);\n    identifier.setMaxDate(now + tokenMaxLifetime);\n    identifier.setMasterKeyId(currentKey.getKeyId());\n    identifier.setSequenceNumber(sequenceNum);\n    LOG.info(\"Creating password for identifier: \" + formatTokenId(identifier)\n        + \", currentKey: \" + currentKey.getKeyId());\n    byte[] password \u003d createPassword(identifier.getBytes(), currentKey.getKey());\n    DelegationTokenInformation tokenInfo \u003d new DelegationTokenInformation(now\n        + tokenRenewInterval, password, getTrackingIdIfEnabled(identifier));\n    try {\n      storeToken(identifier, tokenInfo);\n    } catch (IOException ioe) {\n      LOG.error(\"Could not store token \" + formatTokenId(identifier) + \"!!\",\n          ioe);\n    }\n    return password;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java",
      "extendedDetails": {}
    },
    "018664550507981297fd9f91e29408e6b7801ea9": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2743. Fixed a bug in ResourceManager that was causing RMDelegationToken identifiers to be tampered and thus causing app submission failures in secure mode. Contributed by Jian He.\n",
      "commitDate": "26/10/14 11:14 AM",
      "commitName": "018664550507981297fd9f91e29408e6b7801ea9",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "23/10/14 5:04 PM",
      "commitNameOld": "db45f047ab6b19d8a3e7752bb2cde10827cd8dad",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 2.76,
      "commitsBetweenForRepo": 22,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,20 @@\n   protected synchronized byte[] createPassword(TokenIdent identifier) {\n     int sequenceNum;\n     long now \u003d Time.now();\n     sequenceNum \u003d incrementDelegationTokenSeqNum();\n     identifier.setIssueDate(now);\n     identifier.setMaxDate(now + tokenMaxLifetime);\n     identifier.setMasterKeyId(currentKey.getKeyId());\n     identifier.setSequenceNumber(sequenceNum);\n-    LOG.info(\"Creating password for identifier: [\" + MD5Hash.digest(identifier.getBytes()) + \", \" + currentKey.getKeyId() + \"]\");\n+    LOG.info(\"Creating password for identifier: \" + identifier\n+        + \", currentKey: \" + currentKey.getKeyId());\n     byte[] password \u003d createPassword(identifier.getBytes(), currentKey.getKey());\n     DelegationTokenInformation tokenInfo \u003d new DelegationTokenInformation(now\n         + tokenRenewInterval, password, getTrackingIdIfEnabled(identifier));\n     try {\n       storeToken(identifier, tokenInfo);\n     } catch (IOException ioe) {\n       LOG.error(\"Could not store token !!\", ioe);\n     }\n     return password;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected synchronized byte[] createPassword(TokenIdent identifier) {\n    int sequenceNum;\n    long now \u003d Time.now();\n    sequenceNum \u003d incrementDelegationTokenSeqNum();\n    identifier.setIssueDate(now);\n    identifier.setMaxDate(now + tokenMaxLifetime);\n    identifier.setMasterKeyId(currentKey.getKeyId());\n    identifier.setSequenceNumber(sequenceNum);\n    LOG.info(\"Creating password for identifier: \" + identifier\n        + \", currentKey: \" + currentKey.getKeyId());\n    byte[] password \u003d createPassword(identifier.getBytes(), currentKey.getKey());\n    DelegationTokenInformation tokenInfo \u003d new DelegationTokenInformation(now\n        + tokenRenewInterval, password, getTrackingIdIfEnabled(identifier));\n    try {\n      storeToken(identifier, tokenInfo);\n    } catch (IOException ioe) {\n      LOG.error(\"Could not store token !!\", ioe);\n    }\n    return password;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java",
      "extendedDetails": {}
    },
    "db45f047ab6b19d8a3e7752bb2cde10827cd8dad": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11170. ZKDelegationTokenSecretManager fails to renewToken created by a peer. (Arun Suresh and Gregory Chanan via kasha)\n",
      "commitDate": "23/10/14 5:04 PM",
      "commitName": "db45f047ab6b19d8a3e7752bb2cde10827cd8dad",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "22/10/14 2:26 PM",
      "commitNameOld": "70719e5c62f32836914bea88e1ddd99c0ed009e1",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 1.11,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n   protected synchronized byte[] createPassword(TokenIdent identifier) {\n     int sequenceNum;\n     long now \u003d Time.now();\n     sequenceNum \u003d incrementDelegationTokenSeqNum();\n     identifier.setIssueDate(now);\n     identifier.setMaxDate(now + tokenMaxLifetime);\n-    identifier.setMasterKeyId(currentId);\n+    identifier.setMasterKeyId(currentKey.getKeyId());\n     identifier.setSequenceNumber(sequenceNum);\n-    LOG.info(\"Creating password for identifier: \" + identifier);\n+    LOG.info(\"Creating password for identifier: [\" + MD5Hash.digest(identifier.getBytes()) + \", \" + currentKey.getKeyId() + \"]\");\n     byte[] password \u003d createPassword(identifier.getBytes(), currentKey.getKey());\n     DelegationTokenInformation tokenInfo \u003d new DelegationTokenInformation(now\n         + tokenRenewInterval, password, getTrackingIdIfEnabled(identifier));\n     try {\n       storeToken(identifier, tokenInfo);\n     } catch (IOException ioe) {\n       LOG.error(\"Could not store token !!\", ioe);\n     }\n     return password;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected synchronized byte[] createPassword(TokenIdent identifier) {\n    int sequenceNum;\n    long now \u003d Time.now();\n    sequenceNum \u003d incrementDelegationTokenSeqNum();\n    identifier.setIssueDate(now);\n    identifier.setMaxDate(now + tokenMaxLifetime);\n    identifier.setMasterKeyId(currentKey.getKeyId());\n    identifier.setSequenceNumber(sequenceNum);\n    LOG.info(\"Creating password for identifier: [\" + MD5Hash.digest(identifier.getBytes()) + \", \" + currentKey.getKeyId() + \"]\");\n    byte[] password \u003d createPassword(identifier.getBytes(), currentKey.getKey());\n    DelegationTokenInformation tokenInfo \u003d new DelegationTokenInformation(now\n        + tokenRenewInterval, password, getTrackingIdIfEnabled(identifier));\n    try {\n      storeToken(identifier, tokenInfo);\n    } catch (IOException ioe) {\n      LOG.error(\"Could not store token !!\", ioe);\n    }\n    return password;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java",
      "extendedDetails": {}
    },
    "db890eef3208cc557476fa510f7a253ba22bc68a": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11017. KMS delegation token secret manager should be able to use zookeeper as store. (asuresh via tucu)\n",
      "commitDate": "20/09/14 8:21 AM",
      "commitName": "db890eef3208cc557476fa510f7a253ba22bc68a",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "02/05/14 11:38 AM",
      "commitNameOld": "bee448cacd142a4125e60c840022b65cc5fe9efa",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 140.86,
      "commitsBetweenForRepo": 1122,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,19 @@\n   protected synchronized byte[] createPassword(TokenIdent identifier) {\n     int sequenceNum;\n     long now \u003d Time.now();\n-    sequenceNum \u003d ++delegationTokenSequenceNumber;\n+    sequenceNum \u003d incrementDelegationTokenSeqNum();\n     identifier.setIssueDate(now);\n     identifier.setMaxDate(now + tokenMaxLifetime);\n     identifier.setMasterKeyId(currentId);\n     identifier.setSequenceNumber(sequenceNum);\n     LOG.info(\"Creating password for identifier: \" + identifier);\n     byte[] password \u003d createPassword(identifier.getBytes(), currentKey.getKey());\n-    storeNewToken(identifier, now + tokenRenewInterval);\n-    currentTokens.put(identifier, new DelegationTokenInformation(now\n-        + tokenRenewInterval, password, getTrackingIdIfEnabled(identifier)));\n+    DelegationTokenInformation tokenInfo \u003d new DelegationTokenInformation(now\n+        + tokenRenewInterval, password, getTrackingIdIfEnabled(identifier));\n+    try {\n+      storeToken(identifier, tokenInfo);\n+    } catch (IOException ioe) {\n+      LOG.error(\"Could not store token !!\", ioe);\n+    }\n     return password;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected synchronized byte[] createPassword(TokenIdent identifier) {\n    int sequenceNum;\n    long now \u003d Time.now();\n    sequenceNum \u003d incrementDelegationTokenSeqNum();\n    identifier.setIssueDate(now);\n    identifier.setMaxDate(now + tokenMaxLifetime);\n    identifier.setMasterKeyId(currentId);\n    identifier.setSequenceNumber(sequenceNum);\n    LOG.info(\"Creating password for identifier: \" + identifier);\n    byte[] password \u003d createPassword(identifier.getBytes(), currentKey.getKey());\n    DelegationTokenInformation tokenInfo \u003d new DelegationTokenInformation(now\n        + tokenRenewInterval, password, getTrackingIdIfEnabled(identifier));\n    try {\n      storeToken(identifier, tokenInfo);\n    } catch (IOException ioe) {\n      LOG.error(\"Could not store token !!\", ioe);\n    }\n    return password;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java",
      "extendedDetails": {}
    },
    "e4374d803663c626de610cd5f062f25a6d7d5d4e": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4680. Audit logging of delegation tokens for MR tracing. (Andrew Wang)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1522012 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/09/13 12:57 PM",
      "commitName": "e4374d803663c626de610cd5f062f25a6d7d5d4e",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "29/05/13 5:52 PM",
      "commitNameOld": "fdfedf4c31fa1d8338fc915a631dfc57c1ca38da",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 104.79,
      "commitsBetweenForRepo": 649,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n   protected synchronized byte[] createPassword(TokenIdent identifier) {\n     int sequenceNum;\n     long now \u003d Time.now();\n     sequenceNum \u003d ++delegationTokenSequenceNumber;\n     identifier.setIssueDate(now);\n     identifier.setMaxDate(now + tokenMaxLifetime);\n     identifier.setMasterKeyId(currentId);\n     identifier.setSequenceNumber(sequenceNum);\n     LOG.info(\"Creating password for identifier: \" + identifier);\n     byte[] password \u003d createPassword(identifier.getBytes(), currentKey.getKey());\n     storeNewToken(identifier, now + tokenRenewInterval);\n     currentTokens.put(identifier, new DelegationTokenInformation(now\n-        + tokenRenewInterval, password));\n+        + tokenRenewInterval, password, getTrackingIdIfEnabled(identifier)));\n     return password;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected synchronized byte[] createPassword(TokenIdent identifier) {\n    int sequenceNum;\n    long now \u003d Time.now();\n    sequenceNum \u003d ++delegationTokenSequenceNumber;\n    identifier.setIssueDate(now);\n    identifier.setMaxDate(now + tokenMaxLifetime);\n    identifier.setMasterKeyId(currentId);\n    identifier.setSequenceNumber(sequenceNum);\n    LOG.info(\"Creating password for identifier: \" + identifier);\n    byte[] password \u003d createPassword(identifier.getBytes(), currentKey.getKey());\n    storeNewToken(identifier, now + tokenRenewInterval);\n    currentTokens.put(identifier, new DelegationTokenInformation(now\n        + tokenRenewInterval, password, getTrackingIdIfEnabled(identifier)));\n    return password;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java",
      "extendedDetails": {}
    },
    "fdfedf4c31fa1d8338fc915a631dfc57c1ca38da": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-9574. Added new methods in AbstractDelegationTokenSecretManager for helping YARN ResourceManager to reuse code for RM restart. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1487692 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/05/13 5:52 PM",
      "commitName": "fdfedf4c31fa1d8338fc915a631dfc57c1ca38da",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "12/04/13 8:18 AM",
      "commitNameOld": "f863543206a67ba295454609d618e16f91309b84",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 47.4,
      "commitsBetweenForRepo": 266,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,15 @@\n   protected synchronized byte[] createPassword(TokenIdent identifier) {\n     int sequenceNum;\n     long now \u003d Time.now();\n     sequenceNum \u003d ++delegationTokenSequenceNumber;\n     identifier.setIssueDate(now);\n     identifier.setMaxDate(now + tokenMaxLifetime);\n     identifier.setMasterKeyId(currentId);\n     identifier.setSequenceNumber(sequenceNum);\n     LOG.info(\"Creating password for identifier: \" + identifier);\n     byte[] password \u003d createPassword(identifier.getBytes(), currentKey.getKey());\n+    storeNewToken(identifier, now + tokenRenewInterval);\n     currentTokens.put(identifier, new DelegationTokenInformation(now\n         + tokenRenewInterval, password));\n     return password;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected synchronized byte[] createPassword(TokenIdent identifier) {\n    int sequenceNum;\n    long now \u003d Time.now();\n    sequenceNum \u003d ++delegationTokenSequenceNumber;\n    identifier.setIssueDate(now);\n    identifier.setMaxDate(now + tokenMaxLifetime);\n    identifier.setMasterKeyId(currentId);\n    identifier.setSequenceNumber(sequenceNum);\n    LOG.info(\"Creating password for identifier: \" + identifier);\n    byte[] password \u003d createPassword(identifier.getBytes(), currentKey.getKey());\n    storeNewToken(identifier, now + tokenRenewInterval);\n    currentTokens.put(identifier, new DelegationTokenInformation(now\n        + tokenRenewInterval, password));\n    return password;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java",
      "extendedDetails": {}
    },
    "de8b34a70e7ed4aef4675dbbef90df9f596efa12": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3835. Long-lived 2NN cannot perform a checkpoint if security is enabled and the NN restarts with outstanding delegation tokens. Contributed by Aaron T. Myers.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1376188 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/08/12 11:47 AM",
      "commitName": "de8b34a70e7ed4aef4675dbbef90df9f596efa12",
      "commitAuthor": "Aaron Myers",
      "commitDateOld": "12/07/12 12:01 PM",
      "commitNameOld": "4a5ba3b7bd2360fd9605863630b477d362874e1e",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 40.99,
      "commitsBetweenForRepo": 226,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n   protected synchronized byte[] createPassword(TokenIdent identifier) {\n-    LOG.info(\"Creating password for identifier: \"+identifier);\n     int sequenceNum;\n     long now \u003d Time.now();\n     sequenceNum \u003d ++delegationTokenSequenceNumber;\n     identifier.setIssueDate(now);\n     identifier.setMaxDate(now + tokenMaxLifetime);\n     identifier.setMasterKeyId(currentId);\n     identifier.setSequenceNumber(sequenceNum);\n+    LOG.info(\"Creating password for identifier: \" + identifier);\n     byte[] password \u003d createPassword(identifier.getBytes(), currentKey.getKey());\n     currentTokens.put(identifier, new DelegationTokenInformation(now\n         + tokenRenewInterval, password));\n     return password;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected synchronized byte[] createPassword(TokenIdent identifier) {\n    int sequenceNum;\n    long now \u003d Time.now();\n    sequenceNum \u003d ++delegationTokenSequenceNumber;\n    identifier.setIssueDate(now);\n    identifier.setMaxDate(now + tokenMaxLifetime);\n    identifier.setMasterKeyId(currentId);\n    identifier.setSequenceNumber(sequenceNum);\n    LOG.info(\"Creating password for identifier: \" + identifier);\n    byte[] password \u003d createPassword(identifier.getBytes(), currentKey.getKey());\n    currentTokens.put(identifier, new DelegationTokenInformation(now\n        + tokenRenewInterval, password));\n    return password;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java",
      "extendedDetails": {}
    },
    "4a5ba3b7bd2360fd9605863630b477d362874e1e": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3641. Move server Util time methods to common and use now instead of System#currentTimeMillis. Contributed by Eli Collins\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1360858 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/07/12 12:01 PM",
      "commitName": "4a5ba3b7bd2360fd9605863630b477d362874e1e",
      "commitAuthor": "Eli Collins",
      "commitDateOld": "08/02/12 10:12 PM",
      "commitNameOld": "e918b91e23985fa1bb353c54a2e733f8ba6dbe49",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 154.53,
      "commitsBetweenForRepo": 990,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n   protected synchronized byte[] createPassword(TokenIdent identifier) {\n     LOG.info(\"Creating password for identifier: \"+identifier);\n     int sequenceNum;\n-    long now \u003d System.currentTimeMillis();\n+    long now \u003d Time.now();\n     sequenceNum \u003d ++delegationTokenSequenceNumber;\n     identifier.setIssueDate(now);\n     identifier.setMaxDate(now + tokenMaxLifetime);\n     identifier.setMasterKeyId(currentId);\n     identifier.setSequenceNumber(sequenceNum);\n     byte[] password \u003d createPassword(identifier.getBytes(), currentKey.getKey());\n     currentTokens.put(identifier, new DelegationTokenInformation(now\n         + tokenRenewInterval, password));\n     return password;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected synchronized byte[] createPassword(TokenIdent identifier) {\n    LOG.info(\"Creating password for identifier: \"+identifier);\n    int sequenceNum;\n    long now \u003d Time.now();\n    sequenceNum \u003d ++delegationTokenSequenceNumber;\n    identifier.setIssueDate(now);\n    identifier.setMaxDate(now + tokenMaxLifetime);\n    identifier.setMasterKeyId(currentId);\n    identifier.setSequenceNumber(sequenceNum);\n    byte[] password \u003d createPassword(identifier.getBytes(), currentKey.getKey());\n    currentTokens.put(identifier, new DelegationTokenInformation(now\n        + tokenRenewInterval, password));\n    return password;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected synchronized byte[] createPassword(TokenIdent identifier) {\n    LOG.info(\"Creating password for identifier: \"+identifier);\n    int sequenceNum;\n    long now \u003d System.currentTimeMillis();\n    sequenceNum \u003d ++delegationTokenSequenceNumber;\n    identifier.setIssueDate(now);\n    identifier.setMaxDate(now + tokenMaxLifetime);\n    identifier.setMasterKeyId(currentId);\n    identifier.setSequenceNumber(sequenceNum);\n    byte[] password \u003d createPassword(identifier.getBytes(), currentKey.getKey());\n    currentTokens.put(identifier, new DelegationTokenInformation(now\n        + tokenRenewInterval, password));\n    return password;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected synchronized byte[] createPassword(TokenIdent identifier) {\n    LOG.info(\"Creating password for identifier: \"+identifier);\n    int sequenceNum;\n    long now \u003d System.currentTimeMillis();\n    sequenceNum \u003d ++delegationTokenSequenceNumber;\n    identifier.setIssueDate(now);\n    identifier.setMaxDate(now + tokenMaxLifetime);\n    identifier.setMasterKeyId(currentId);\n    identifier.setSequenceNumber(sequenceNum);\n    byte[] password \u003d createPassword(identifier.getBytes(), currentKey.getKey());\n    currentTokens.put(identifier, new DelegationTokenInformation(now\n        + tokenRenewInterval, password));\n    return password;\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected synchronized byte[] createPassword(TokenIdent identifier) {\n    LOG.info(\"Creating password for identifier: \"+identifier);\n    int sequenceNum;\n    long now \u003d System.currentTimeMillis();\n    sequenceNum \u003d ++delegationTokenSequenceNumber;\n    identifier.setIssueDate(now);\n    identifier.setMaxDate(now + tokenMaxLifetime);\n    identifier.setMasterKeyId(currentId);\n    identifier.setSequenceNumber(sequenceNum);\n    byte[] password \u003d createPassword(identifier.getBytes(), currentKey.getKey());\n    currentTokens.put(identifier, new DelegationTokenInformation(now\n        + tokenRenewInterval, password));\n    return password;\n  }",
      "path": "common/src/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java",
        "newPath": "common/src/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java"
      }
    },
    "fbdb24946051f7abc2d065217ef8c52e0cf3f16f": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-6620. NPE if renewer is passed as null in getDelegationToken. Contributed by Jitendra Pandey.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@953896 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/06/10 3:48 PM",
      "commitName": "fbdb24946051f7abc2d065217ef8c52e0cf3f16f",
      "commitAuthor": "Jakob Homan",
      "commitDateOld": "11/06/10 2:34 PM",
      "commitNameOld": "6378822a67c0baa502d22201f5c2b478cbe1261c",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.05,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,14 @@\n   protected synchronized byte[] createPassword(TokenIdent identifier) {\n+    LOG.info(\"Creating password for identifier: \"+identifier);\n     int sequenceNum;\n     long now \u003d System.currentTimeMillis();\n     sequenceNum \u003d ++delegationTokenSequenceNumber;\n     identifier.setIssueDate(now);\n     identifier.setMaxDate(now + tokenMaxLifetime);\n     identifier.setMasterKeyId(currentId);\n     identifier.setSequenceNumber(sequenceNum);\n     byte[] password \u003d createPassword(identifier.getBytes(), currentKey.getKey());\n     currentTokens.put(identifier, new DelegationTokenInformation(now\n         + tokenRenewInterval, password));\n     return password;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected synchronized byte[] createPassword(TokenIdent identifier) {\n    LOG.info(\"Creating password for identifier: \"+identifier);\n    int sequenceNum;\n    long now \u003d System.currentTimeMillis();\n    sequenceNum \u003d ++delegationTokenSequenceNumber;\n    identifier.setIssueDate(now);\n    identifier.setMaxDate(now + tokenMaxLifetime);\n    identifier.setMasterKeyId(currentId);\n    identifier.setSequenceNumber(sequenceNum);\n    byte[] password \u003d createPassword(identifier.getBytes(), currentKey.getKey());\n    currentTokens.put(identifier, new DelegationTokenInformation(now\n        + tokenRenewInterval, password));\n    return password;\n  }",
      "path": "src/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java",
      "extendedDetails": {}
    },
    "27ab7f3db9a1489d81ecf32cc3493d1f4efae68b": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "HADOOP-6573. Support for persistent delegation tokens. Contributed by Jitendra Pandey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@916468 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/02/10 1:43 PM",
      "commitName": "27ab7f3db9a1489d81ecf32cc3493d1f4efae68b",
      "commitAuthor": "Konstantin Shvachko",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "HADOOP-6573. Support for persistent delegation tokens. Contributed by Jitendra Pandey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@916468 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "25/02/10 1:43 PM",
          "commitName": "27ab7f3db9a1489d81ecf32cc3493d1f4efae68b",
          "commitAuthor": "Konstantin Shvachko",
          "commitDateOld": "19/02/10 12:49 AM",
          "commitNameOld": "a417a8faeaa1a40e140c7f86463e699d92404454",
          "commitAuthorOld": "Owen O\u0027Malley",
          "daysBetweenCommits": 6.54,
          "commitsBetweenForRepo": 10,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,13 @@\n-  protected byte[] createPassword(TokenIdent identifier) {\n+  protected synchronized byte[] createPassword(TokenIdent identifier) {\n     int sequenceNum;\n-    int id;\n-    DelegationKey key;\n-    long now \u003d System.currentTimeMillis();    \n-    synchronized (this) {\n-      id \u003d currentId;\n-      key \u003d currentKey;\n-      sequenceNum \u003d ++delegationTokenSequenceNumber;\n-    }\n+    long now \u003d System.currentTimeMillis();\n+    sequenceNum \u003d ++delegationTokenSequenceNumber;\n     identifier.setIssueDate(now);\n     identifier.setMaxDate(now + tokenMaxLifetime);\n-    identifier.setMasterKeyId(id);\n+    identifier.setMasterKeyId(currentId);\n     identifier.setSequenceNumber(sequenceNum);\n-    byte[] password \u003d createPassword(identifier.getBytes(), key.getKey());\n-    synchronized (currentTokens) {\n-      currentTokens.put(identifier, new DelegationTokenInformation(now\n-          + tokenRenewInterval, password));\n-    }\n+    byte[] password \u003d createPassword(identifier.getBytes(), currentKey.getKey());\n+    currentTokens.put(identifier, new DelegationTokenInformation(now\n+        + tokenRenewInterval, password));\n     return password;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected synchronized byte[] createPassword(TokenIdent identifier) {\n    int sequenceNum;\n    long now \u003d System.currentTimeMillis();\n    sequenceNum \u003d ++delegationTokenSequenceNumber;\n    identifier.setIssueDate(now);\n    identifier.setMaxDate(now + tokenMaxLifetime);\n    identifier.setMasterKeyId(currentId);\n    identifier.setSequenceNumber(sequenceNum);\n    byte[] password \u003d createPassword(identifier.getBytes(), currentKey.getKey());\n    currentTokens.put(identifier, new DelegationTokenInformation(now\n        + tokenRenewInterval, password));\n    return password;\n  }",
          "path": "src/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java",
          "extendedDetails": {
            "oldValue": "[protected]",
            "newValue": "[protected, synchronized]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-6573. Support for persistent delegation tokens. Contributed by Jitendra Pandey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@916468 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "25/02/10 1:43 PM",
          "commitName": "27ab7f3db9a1489d81ecf32cc3493d1f4efae68b",
          "commitAuthor": "Konstantin Shvachko",
          "commitDateOld": "19/02/10 12:49 AM",
          "commitNameOld": "a417a8faeaa1a40e140c7f86463e699d92404454",
          "commitAuthorOld": "Owen O\u0027Malley",
          "daysBetweenCommits": 6.54,
          "commitsBetweenForRepo": 10,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,13 @@\n-  protected byte[] createPassword(TokenIdent identifier) {\n+  protected synchronized byte[] createPassword(TokenIdent identifier) {\n     int sequenceNum;\n-    int id;\n-    DelegationKey key;\n-    long now \u003d System.currentTimeMillis();    \n-    synchronized (this) {\n-      id \u003d currentId;\n-      key \u003d currentKey;\n-      sequenceNum \u003d ++delegationTokenSequenceNumber;\n-    }\n+    long now \u003d System.currentTimeMillis();\n+    sequenceNum \u003d ++delegationTokenSequenceNumber;\n     identifier.setIssueDate(now);\n     identifier.setMaxDate(now + tokenMaxLifetime);\n-    identifier.setMasterKeyId(id);\n+    identifier.setMasterKeyId(currentId);\n     identifier.setSequenceNumber(sequenceNum);\n-    byte[] password \u003d createPassword(identifier.getBytes(), key.getKey());\n-    synchronized (currentTokens) {\n-      currentTokens.put(identifier, new DelegationTokenInformation(now\n-          + tokenRenewInterval, password));\n-    }\n+    byte[] password \u003d createPassword(identifier.getBytes(), currentKey.getKey());\n+    currentTokens.put(identifier, new DelegationTokenInformation(now\n+        + tokenRenewInterval, password));\n     return password;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected synchronized byte[] createPassword(TokenIdent identifier) {\n    int sequenceNum;\n    long now \u003d System.currentTimeMillis();\n    sequenceNum \u003d ++delegationTokenSequenceNumber;\n    identifier.setIssueDate(now);\n    identifier.setMaxDate(now + tokenMaxLifetime);\n    identifier.setMasterKeyId(currentId);\n    identifier.setSequenceNumber(sequenceNum);\n    byte[] password \u003d createPassword(identifier.getBytes(), currentKey.getKey());\n    currentTokens.put(identifier, new DelegationTokenInformation(now\n        + tokenRenewInterval, password));\n    return password;\n  }",
          "path": "src/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "38c59c0af7595897dbff8e5f13b7ff6978b9c08b": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-6547. Move DelegationToken into Common, so that it can be used by\nMapReduce also. (devaraj via omalley)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@907956 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/02/10 12:10 AM",
      "commitName": "38c59c0af7595897dbff8e5f13b7ff6978b9c08b",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,21 @@\n+  protected byte[] createPassword(TokenIdent identifier) {\n+    int sequenceNum;\n+    int id;\n+    DelegationKey key;\n+    long now \u003d System.currentTimeMillis();    \n+    synchronized (this) {\n+      id \u003d currentId;\n+      key \u003d currentKey;\n+      sequenceNum \u003d ++delegationTokenSequenceNumber;\n+    }\n+    identifier.setIssueDate(now);\n+    identifier.setMaxDate(now + tokenMaxLifetime);\n+    identifier.setMasterKeyId(id);\n+    identifier.setSequenceNumber(sequenceNum);\n+    byte[] password \u003d createPassword(identifier.getBytes(), key.getKey());\n+    synchronized (currentTokens) {\n+      currentTokens.put(identifier, new DelegationTokenInformation(now\n+          + tokenRenewInterval, password));\n+    }\n+    return password;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected byte[] createPassword(TokenIdent identifier) {\n    int sequenceNum;\n    int id;\n    DelegationKey key;\n    long now \u003d System.currentTimeMillis();    \n    synchronized (this) {\n      id \u003d currentId;\n      key \u003d currentKey;\n      sequenceNum \u003d ++delegationTokenSequenceNumber;\n    }\n    identifier.setIssueDate(now);\n    identifier.setMaxDate(now + tokenMaxLifetime);\n    identifier.setMasterKeyId(id);\n    identifier.setSequenceNumber(sequenceNum);\n    byte[] password \u003d createPassword(identifier.getBytes(), key.getKey());\n    synchronized (currentTokens) {\n      currentTokens.put(identifier, new DelegationTokenInformation(now\n          + tokenRenewInterval, password));\n    }\n    return password;\n  }",
      "path": "src/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java"
    }
  }
}