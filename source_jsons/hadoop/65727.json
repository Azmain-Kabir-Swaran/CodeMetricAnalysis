{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ImportOperation.java",
  "functionName": "putParentsIfNotPresent",
  "functionId": "putParentsIfNotPresent___fileStatus-FileStatus__operationState-BulkOperationState(annotations-@Nullable)",
  "sourceFilePath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/ImportOperation.java",
  "functionStartLine": 245,
  "functionEndLine": 270,
  "numCommitsSeen": 67,
  "timeTaken": 6177,
  "changeHistory": [
    "49df83899543586bbcaf80f01399ade031cf68b0",
    "e02eb24e0a9139418120027b694492e0738df20a",
    "f9cc9e162175444efe9d5b07ecb9a795f750ca3c",
    "a36274d69947648dbe82721220cc5240ec5d396d",
    "621b43e254afaff708cd6fc4698b29628f6abc33"
  ],
  "changeHistoryShort": {
    "49df83899543586bbcaf80f01399ade031cf68b0": "Ymultichange(Ymovefromfile,Yreturntypechange,Ybodychange,Yparameterchange)",
    "e02eb24e0a9139418120027b694492e0738df20a": "Ymultichange(Yparameterchange,Ybodychange)",
    "f9cc9e162175444efe9d5b07ecb9a795f750ca3c": "Ybodychange",
    "a36274d69947648dbe82721220cc5240ec5d396d": "Ybodychange",
    "621b43e254afaff708cd6fc4698b29628f6abc33": "Yintroduced"
  },
  "changeHistoryDetails": {
    "49df83899543586bbcaf80f01399ade031cf68b0": {
      "type": "Ymultichange(Ymovefromfile,Yreturntypechange,Ybodychange,Yparameterchange)",
      "commitMessage": "HADOOP-16697. Tune/audit S3A authoritative mode.\n\nContains:\n\nHADOOP-16474. S3Guard ProgressiveRenameTracker to mark destination\n              dirirectory as authoritative on success.\nHADOOP-16684. S3guard bucket info to list a bit more about\n              authoritative paths.\nHADOOP-16722. S3GuardTool to support FilterFileSystem.\n\nThis patch improves the marking of newly created/import directory\ntrees in S3Guard DynamoDB tables as authoritative.\n\nSpecific changes:\n\n * Renamed directories are marked as authoritative if the entire\n   operation succeeded (HADOOP-16474).\n * When updating parent table entries as part of any table write,\n   there\u0027s no overwriting of their authoritative flag.\n\ns3guard import changes:\n\n* new -verbose flag to print out what is going on.\n\n* The \"s3guard import\" command lets you declare that a directory tree\nis to be marked as authoritative\n\n  hadoop s3guard import -authoritative -verbose s3a://bucket/path\n\nWhen importing a listing and a file is found, the import tool queries\nthe metastore and only updates the entry if the file is different from\nbefore, where different \u003d\u003d new timestamp, etag, or length. S3Guard can get\ntimestamp differences due to clock skew in PUT operations.\n\nAs the recursive list performed by the import command doesn\u0027t retrieve the\nversionID, the existing entry may in fact be more complete.\nWhen updating an existing due to clock skew the existing version ID\nis propagated to the new entry (note: the etags must match; this is needed\nto deal with inconsistent listings).\n\nThere is a new s3guard command to audit a s3guard bucket/path\u0027s\nauthoritative state:\n\n  hadoop s3guard authoritative -check-config s3a://bucket/path\n\nThis is primarily for testing/auditing.\n\nThe s3guard bucket-info command also provides some more details on the\nauthoritative state of a store (HADOOP-16684).\n\nChange-Id: I58001341c04f6f3597fcb4fcb1581ccefeb77d91\n",
      "commitDate": "10/01/20 3:11 AM",
      "commitName": "49df83899543586bbcaf80f01399ade031cf68b0",
      "commitAuthor": "Steve Loughran",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HADOOP-16697. Tune/audit S3A authoritative mode.\n\nContains:\n\nHADOOP-16474. S3Guard ProgressiveRenameTracker to mark destination\n              dirirectory as authoritative on success.\nHADOOP-16684. S3guard bucket info to list a bit more about\n              authoritative paths.\nHADOOP-16722. S3GuardTool to support FilterFileSystem.\n\nThis patch improves the marking of newly created/import directory\ntrees in S3Guard DynamoDB tables as authoritative.\n\nSpecific changes:\n\n * Renamed directories are marked as authoritative if the entire\n   operation succeeded (HADOOP-16474).\n * When updating parent table entries as part of any table write,\n   there\u0027s no overwriting of their authoritative flag.\n\ns3guard import changes:\n\n* new -verbose flag to print out what is going on.\n\n* The \"s3guard import\" command lets you declare that a directory tree\nis to be marked as authoritative\n\n  hadoop s3guard import -authoritative -verbose s3a://bucket/path\n\nWhen importing a listing and a file is found, the import tool queries\nthe metastore and only updates the entry if the file is different from\nbefore, where different \u003d\u003d new timestamp, etag, or length. S3Guard can get\ntimestamp differences due to clock skew in PUT operations.\n\nAs the recursive list performed by the import command doesn\u0027t retrieve the\nversionID, the existing entry may in fact be more complete.\nWhen updating an existing due to clock skew the existing version ID\nis propagated to the new entry (note: the etags must match; this is needed\nto deal with inconsistent listings).\n\nThere is a new s3guard command to audit a s3guard bucket/path\u0027s\nauthoritative state:\n\n  hadoop s3guard authoritative -check-config s3a://bucket/path\n\nThis is primarily for testing/auditing.\n\nThe s3guard bucket-info command also provides some more details on the\nauthoritative state of a store (HADOOP-16684).\n\nChange-Id: I58001341c04f6f3597fcb4fcb1581ccefeb77d91\n",
          "commitDate": "10/01/20 3:11 AM",
          "commitName": "49df83899543586bbcaf80f01399ade031cf68b0",
          "commitAuthor": "Steve Loughran",
          "commitDateOld": "10/01/20 12:53 AM",
          "commitNameOld": "9da294a140a919d9ba648637d09340bccfd5edd6",
          "commitAuthorOld": "Takanobu Asanuma",
          "daysBetweenCommits": 0.1,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,26 @@\n-    private void putParentsIfNotPresent(FileStatus f,\n-        @Nullable BulkOperationState operationState) throws IOException {\n-      Preconditions.checkNotNull(f);\n-      Path parent \u003d f.getPath().getParent();\n-      while (parent !\u003d null) {\n-        if (dirCache.contains(parent)) {\n-          return;\n-        }\n-        S3AFileStatus dir \u003d DynamoDBMetadataStore.makeDirStatus(parent,\n-            f.getOwner());\n-        S3Guard.putWithTtl(getStore(), new PathMetadata(dir),\n-            getFilesystem().getTtlTimeProvider(),\n-            operationState);\n-        dirCache.add(parent);\n-        parent \u003d parent.getParent();\n+  private int putParentsIfNotPresent(FileStatus fileStatus,\n+      @Nullable BulkOperationState operationState) throws IOException {\n+    Preconditions.checkNotNull(fileStatus);\n+    Path parent \u003d fileStatus.getPath().getParent();\n+    int count \u003d 0;\n+    while (parent !\u003d null) {\n+      if (dirCache.contains(parent)) {\n+        return count;\n       }\n-    }\n\\ No newline at end of file\n+      final ITtlTimeProvider timeProvider\n+          \u003d getFilesystem().getTtlTimeProvider();\n+      final PathMetadata pmd \u003d S3Guard.getWithTtl(getStore(), parent,\n+          timeProvider, false, true);\n+      if (pmd \u003d\u003d null || pmd.isDeleted()) {\n+        S3AFileStatus dir \u003d DynamoDBMetadataStore.makeDirStatus(parent,\n+            fileStatus.getOwner());\n+        S3Guard.putWithTtl(getStore(), new PathMetadata(dir),\n+            timeProvider,\n+            operationState);\n+        count++;\n+      }\n+      dirCache.add(parent);\n+      parent \u003d parent.getParent();\n+    }\n+    return count;\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  private int putParentsIfNotPresent(FileStatus fileStatus,\n      @Nullable BulkOperationState operationState) throws IOException {\n    Preconditions.checkNotNull(fileStatus);\n    Path parent \u003d fileStatus.getPath().getParent();\n    int count \u003d 0;\n    while (parent !\u003d null) {\n      if (dirCache.contains(parent)) {\n        return count;\n      }\n      final ITtlTimeProvider timeProvider\n          \u003d getFilesystem().getTtlTimeProvider();\n      final PathMetadata pmd \u003d S3Guard.getWithTtl(getStore(), parent,\n          timeProvider, false, true);\n      if (pmd \u003d\u003d null || pmd.isDeleted()) {\n        S3AFileStatus dir \u003d DynamoDBMetadataStore.makeDirStatus(parent,\n            fileStatus.getOwner());\n        S3Guard.putWithTtl(getStore(), new PathMetadata(dir),\n            timeProvider,\n            operationState);\n        count++;\n      }\n      dirCache.add(parent);\n      parent \u003d parent.getParent();\n    }\n    return count;\n  }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/ImportOperation.java",
          "extendedDetails": {
            "oldPath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/S3GuardTool.java",
            "newPath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/ImportOperation.java",
            "oldMethodName": "putParentsIfNotPresent",
            "newMethodName": "putParentsIfNotPresent"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "HADOOP-16697. Tune/audit S3A authoritative mode.\n\nContains:\n\nHADOOP-16474. S3Guard ProgressiveRenameTracker to mark destination\n              dirirectory as authoritative on success.\nHADOOP-16684. S3guard bucket info to list a bit more about\n              authoritative paths.\nHADOOP-16722. S3GuardTool to support FilterFileSystem.\n\nThis patch improves the marking of newly created/import directory\ntrees in S3Guard DynamoDB tables as authoritative.\n\nSpecific changes:\n\n * Renamed directories are marked as authoritative if the entire\n   operation succeeded (HADOOP-16474).\n * When updating parent table entries as part of any table write,\n   there\u0027s no overwriting of their authoritative flag.\n\ns3guard import changes:\n\n* new -verbose flag to print out what is going on.\n\n* The \"s3guard import\" command lets you declare that a directory tree\nis to be marked as authoritative\n\n  hadoop s3guard import -authoritative -verbose s3a://bucket/path\n\nWhen importing a listing and a file is found, the import tool queries\nthe metastore and only updates the entry if the file is different from\nbefore, where different \u003d\u003d new timestamp, etag, or length. S3Guard can get\ntimestamp differences due to clock skew in PUT operations.\n\nAs the recursive list performed by the import command doesn\u0027t retrieve the\nversionID, the existing entry may in fact be more complete.\nWhen updating an existing due to clock skew the existing version ID\nis propagated to the new entry (note: the etags must match; this is needed\nto deal with inconsistent listings).\n\nThere is a new s3guard command to audit a s3guard bucket/path\u0027s\nauthoritative state:\n\n  hadoop s3guard authoritative -check-config s3a://bucket/path\n\nThis is primarily for testing/auditing.\n\nThe s3guard bucket-info command also provides some more details on the\nauthoritative state of a store (HADOOP-16684).\n\nChange-Id: I58001341c04f6f3597fcb4fcb1581ccefeb77d91\n",
          "commitDate": "10/01/20 3:11 AM",
          "commitName": "49df83899543586bbcaf80f01399ade031cf68b0",
          "commitAuthor": "Steve Loughran",
          "commitDateOld": "10/01/20 12:53 AM",
          "commitNameOld": "9da294a140a919d9ba648637d09340bccfd5edd6",
          "commitAuthorOld": "Takanobu Asanuma",
          "daysBetweenCommits": 0.1,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,26 @@\n-    private void putParentsIfNotPresent(FileStatus f,\n-        @Nullable BulkOperationState operationState) throws IOException {\n-      Preconditions.checkNotNull(f);\n-      Path parent \u003d f.getPath().getParent();\n-      while (parent !\u003d null) {\n-        if (dirCache.contains(parent)) {\n-          return;\n-        }\n-        S3AFileStatus dir \u003d DynamoDBMetadataStore.makeDirStatus(parent,\n-            f.getOwner());\n-        S3Guard.putWithTtl(getStore(), new PathMetadata(dir),\n-            getFilesystem().getTtlTimeProvider(),\n-            operationState);\n-        dirCache.add(parent);\n-        parent \u003d parent.getParent();\n+  private int putParentsIfNotPresent(FileStatus fileStatus,\n+      @Nullable BulkOperationState operationState) throws IOException {\n+    Preconditions.checkNotNull(fileStatus);\n+    Path parent \u003d fileStatus.getPath().getParent();\n+    int count \u003d 0;\n+    while (parent !\u003d null) {\n+      if (dirCache.contains(parent)) {\n+        return count;\n       }\n-    }\n\\ No newline at end of file\n+      final ITtlTimeProvider timeProvider\n+          \u003d getFilesystem().getTtlTimeProvider();\n+      final PathMetadata pmd \u003d S3Guard.getWithTtl(getStore(), parent,\n+          timeProvider, false, true);\n+      if (pmd \u003d\u003d null || pmd.isDeleted()) {\n+        S3AFileStatus dir \u003d DynamoDBMetadataStore.makeDirStatus(parent,\n+            fileStatus.getOwner());\n+        S3Guard.putWithTtl(getStore(), new PathMetadata(dir),\n+            timeProvider,\n+            operationState);\n+        count++;\n+      }\n+      dirCache.add(parent);\n+      parent \u003d parent.getParent();\n+    }\n+    return count;\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  private int putParentsIfNotPresent(FileStatus fileStatus,\n      @Nullable BulkOperationState operationState) throws IOException {\n    Preconditions.checkNotNull(fileStatus);\n    Path parent \u003d fileStatus.getPath().getParent();\n    int count \u003d 0;\n    while (parent !\u003d null) {\n      if (dirCache.contains(parent)) {\n        return count;\n      }\n      final ITtlTimeProvider timeProvider\n          \u003d getFilesystem().getTtlTimeProvider();\n      final PathMetadata pmd \u003d S3Guard.getWithTtl(getStore(), parent,\n          timeProvider, false, true);\n      if (pmd \u003d\u003d null || pmd.isDeleted()) {\n        S3AFileStatus dir \u003d DynamoDBMetadataStore.makeDirStatus(parent,\n            fileStatus.getOwner());\n        S3Guard.putWithTtl(getStore(), new PathMetadata(dir),\n            timeProvider,\n            operationState);\n        count++;\n      }\n      dirCache.add(parent);\n      parent \u003d parent.getParent();\n    }\n    return count;\n  }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/ImportOperation.java",
          "extendedDetails": {
            "oldValue": "void",
            "newValue": "int"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-16697. Tune/audit S3A authoritative mode.\n\nContains:\n\nHADOOP-16474. S3Guard ProgressiveRenameTracker to mark destination\n              dirirectory as authoritative on success.\nHADOOP-16684. S3guard bucket info to list a bit more about\n              authoritative paths.\nHADOOP-16722. S3GuardTool to support FilterFileSystem.\n\nThis patch improves the marking of newly created/import directory\ntrees in S3Guard DynamoDB tables as authoritative.\n\nSpecific changes:\n\n * Renamed directories are marked as authoritative if the entire\n   operation succeeded (HADOOP-16474).\n * When updating parent table entries as part of any table write,\n   there\u0027s no overwriting of their authoritative flag.\n\ns3guard import changes:\n\n* new -verbose flag to print out what is going on.\n\n* The \"s3guard import\" command lets you declare that a directory tree\nis to be marked as authoritative\n\n  hadoop s3guard import -authoritative -verbose s3a://bucket/path\n\nWhen importing a listing and a file is found, the import tool queries\nthe metastore and only updates the entry if the file is different from\nbefore, where different \u003d\u003d new timestamp, etag, or length. S3Guard can get\ntimestamp differences due to clock skew in PUT operations.\n\nAs the recursive list performed by the import command doesn\u0027t retrieve the\nversionID, the existing entry may in fact be more complete.\nWhen updating an existing due to clock skew the existing version ID\nis propagated to the new entry (note: the etags must match; this is needed\nto deal with inconsistent listings).\n\nThere is a new s3guard command to audit a s3guard bucket/path\u0027s\nauthoritative state:\n\n  hadoop s3guard authoritative -check-config s3a://bucket/path\n\nThis is primarily for testing/auditing.\n\nThe s3guard bucket-info command also provides some more details on the\nauthoritative state of a store (HADOOP-16684).\n\nChange-Id: I58001341c04f6f3597fcb4fcb1581ccefeb77d91\n",
          "commitDate": "10/01/20 3:11 AM",
          "commitName": "49df83899543586bbcaf80f01399ade031cf68b0",
          "commitAuthor": "Steve Loughran",
          "commitDateOld": "10/01/20 12:53 AM",
          "commitNameOld": "9da294a140a919d9ba648637d09340bccfd5edd6",
          "commitAuthorOld": "Takanobu Asanuma",
          "daysBetweenCommits": 0.1,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,26 @@\n-    private void putParentsIfNotPresent(FileStatus f,\n-        @Nullable BulkOperationState operationState) throws IOException {\n-      Preconditions.checkNotNull(f);\n-      Path parent \u003d f.getPath().getParent();\n-      while (parent !\u003d null) {\n-        if (dirCache.contains(parent)) {\n-          return;\n-        }\n-        S3AFileStatus dir \u003d DynamoDBMetadataStore.makeDirStatus(parent,\n-            f.getOwner());\n-        S3Guard.putWithTtl(getStore(), new PathMetadata(dir),\n-            getFilesystem().getTtlTimeProvider(),\n-            operationState);\n-        dirCache.add(parent);\n-        parent \u003d parent.getParent();\n+  private int putParentsIfNotPresent(FileStatus fileStatus,\n+      @Nullable BulkOperationState operationState) throws IOException {\n+    Preconditions.checkNotNull(fileStatus);\n+    Path parent \u003d fileStatus.getPath().getParent();\n+    int count \u003d 0;\n+    while (parent !\u003d null) {\n+      if (dirCache.contains(parent)) {\n+        return count;\n       }\n-    }\n\\ No newline at end of file\n+      final ITtlTimeProvider timeProvider\n+          \u003d getFilesystem().getTtlTimeProvider();\n+      final PathMetadata pmd \u003d S3Guard.getWithTtl(getStore(), parent,\n+          timeProvider, false, true);\n+      if (pmd \u003d\u003d null || pmd.isDeleted()) {\n+        S3AFileStatus dir \u003d DynamoDBMetadataStore.makeDirStatus(parent,\n+            fileStatus.getOwner());\n+        S3Guard.putWithTtl(getStore(), new PathMetadata(dir),\n+            timeProvider,\n+            operationState);\n+        count++;\n+      }\n+      dirCache.add(parent);\n+      parent \u003d parent.getParent();\n+    }\n+    return count;\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  private int putParentsIfNotPresent(FileStatus fileStatus,\n      @Nullable BulkOperationState operationState) throws IOException {\n    Preconditions.checkNotNull(fileStatus);\n    Path parent \u003d fileStatus.getPath().getParent();\n    int count \u003d 0;\n    while (parent !\u003d null) {\n      if (dirCache.contains(parent)) {\n        return count;\n      }\n      final ITtlTimeProvider timeProvider\n          \u003d getFilesystem().getTtlTimeProvider();\n      final PathMetadata pmd \u003d S3Guard.getWithTtl(getStore(), parent,\n          timeProvider, false, true);\n      if (pmd \u003d\u003d null || pmd.isDeleted()) {\n        S3AFileStatus dir \u003d DynamoDBMetadataStore.makeDirStatus(parent,\n            fileStatus.getOwner());\n        S3Guard.putWithTtl(getStore(), new PathMetadata(dir),\n            timeProvider,\n            operationState);\n        count++;\n      }\n      dirCache.add(parent);\n      parent \u003d parent.getParent();\n    }\n    return count;\n  }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/ImportOperation.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-16697. Tune/audit S3A authoritative mode.\n\nContains:\n\nHADOOP-16474. S3Guard ProgressiveRenameTracker to mark destination\n              dirirectory as authoritative on success.\nHADOOP-16684. S3guard bucket info to list a bit more about\n              authoritative paths.\nHADOOP-16722. S3GuardTool to support FilterFileSystem.\n\nThis patch improves the marking of newly created/import directory\ntrees in S3Guard DynamoDB tables as authoritative.\n\nSpecific changes:\n\n * Renamed directories are marked as authoritative if the entire\n   operation succeeded (HADOOP-16474).\n * When updating parent table entries as part of any table write,\n   there\u0027s no overwriting of their authoritative flag.\n\ns3guard import changes:\n\n* new -verbose flag to print out what is going on.\n\n* The \"s3guard import\" command lets you declare that a directory tree\nis to be marked as authoritative\n\n  hadoop s3guard import -authoritative -verbose s3a://bucket/path\n\nWhen importing a listing and a file is found, the import tool queries\nthe metastore and only updates the entry if the file is different from\nbefore, where different \u003d\u003d new timestamp, etag, or length. S3Guard can get\ntimestamp differences due to clock skew in PUT operations.\n\nAs the recursive list performed by the import command doesn\u0027t retrieve the\nversionID, the existing entry may in fact be more complete.\nWhen updating an existing due to clock skew the existing version ID\nis propagated to the new entry (note: the etags must match; this is needed\nto deal with inconsistent listings).\n\nThere is a new s3guard command to audit a s3guard bucket/path\u0027s\nauthoritative state:\n\n  hadoop s3guard authoritative -check-config s3a://bucket/path\n\nThis is primarily for testing/auditing.\n\nThe s3guard bucket-info command also provides some more details on the\nauthoritative state of a store (HADOOP-16684).\n\nChange-Id: I58001341c04f6f3597fcb4fcb1581ccefeb77d91\n",
          "commitDate": "10/01/20 3:11 AM",
          "commitName": "49df83899543586bbcaf80f01399ade031cf68b0",
          "commitAuthor": "Steve Loughran",
          "commitDateOld": "10/01/20 12:53 AM",
          "commitNameOld": "9da294a140a919d9ba648637d09340bccfd5edd6",
          "commitAuthorOld": "Takanobu Asanuma",
          "daysBetweenCommits": 0.1,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,26 @@\n-    private void putParentsIfNotPresent(FileStatus f,\n-        @Nullable BulkOperationState operationState) throws IOException {\n-      Preconditions.checkNotNull(f);\n-      Path parent \u003d f.getPath().getParent();\n-      while (parent !\u003d null) {\n-        if (dirCache.contains(parent)) {\n-          return;\n-        }\n-        S3AFileStatus dir \u003d DynamoDBMetadataStore.makeDirStatus(parent,\n-            f.getOwner());\n-        S3Guard.putWithTtl(getStore(), new PathMetadata(dir),\n-            getFilesystem().getTtlTimeProvider(),\n-            operationState);\n-        dirCache.add(parent);\n-        parent \u003d parent.getParent();\n+  private int putParentsIfNotPresent(FileStatus fileStatus,\n+      @Nullable BulkOperationState operationState) throws IOException {\n+    Preconditions.checkNotNull(fileStatus);\n+    Path parent \u003d fileStatus.getPath().getParent();\n+    int count \u003d 0;\n+    while (parent !\u003d null) {\n+      if (dirCache.contains(parent)) {\n+        return count;\n       }\n-    }\n\\ No newline at end of file\n+      final ITtlTimeProvider timeProvider\n+          \u003d getFilesystem().getTtlTimeProvider();\n+      final PathMetadata pmd \u003d S3Guard.getWithTtl(getStore(), parent,\n+          timeProvider, false, true);\n+      if (pmd \u003d\u003d null || pmd.isDeleted()) {\n+        S3AFileStatus dir \u003d DynamoDBMetadataStore.makeDirStatus(parent,\n+            fileStatus.getOwner());\n+        S3Guard.putWithTtl(getStore(), new PathMetadata(dir),\n+            timeProvider,\n+            operationState);\n+        count++;\n+      }\n+      dirCache.add(parent);\n+      parent \u003d parent.getParent();\n+    }\n+    return count;\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  private int putParentsIfNotPresent(FileStatus fileStatus,\n      @Nullable BulkOperationState operationState) throws IOException {\n    Preconditions.checkNotNull(fileStatus);\n    Path parent \u003d fileStatus.getPath().getParent();\n    int count \u003d 0;\n    while (parent !\u003d null) {\n      if (dirCache.contains(parent)) {\n        return count;\n      }\n      final ITtlTimeProvider timeProvider\n          \u003d getFilesystem().getTtlTimeProvider();\n      final PathMetadata pmd \u003d S3Guard.getWithTtl(getStore(), parent,\n          timeProvider, false, true);\n      if (pmd \u003d\u003d null || pmd.isDeleted()) {\n        S3AFileStatus dir \u003d DynamoDBMetadataStore.makeDirStatus(parent,\n            fileStatus.getOwner());\n        S3Guard.putWithTtl(getStore(), new PathMetadata(dir),\n            timeProvider,\n            operationState);\n        count++;\n      }\n      dirCache.add(parent);\n      parent \u003d parent.getParent();\n    }\n    return count;\n  }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/ImportOperation.java",
          "extendedDetails": {
            "oldValue": "[f-FileStatus, operationState-BulkOperationState(annotations-@Nullable)]",
            "newValue": "[fileStatus-FileStatus, operationState-BulkOperationState(annotations-@Nullable)]"
          }
        }
      ]
    },
    "e02eb24e0a9139418120027b694492e0738df20a": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-15183. S3Guard store becomes inconsistent after partial failure of rename.\n\nContributed by Steve Loughran.\n\nChange-Id: I825b0bc36be960475d2d259b1cdab45ae1bb78eb\n",
      "commitDate": "20/06/19 1:56 AM",
      "commitName": "e02eb24e0a9139418120027b694492e0738df20a",
      "commitAuthor": "Steve Loughran",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-15183. S3Guard store becomes inconsistent after partial failure of rename.\n\nContributed by Steve Loughran.\n\nChange-Id: I825b0bc36be960475d2d259b1cdab45ae1bb78eb\n",
          "commitDate": "20/06/19 1:56 AM",
          "commitName": "e02eb24e0a9139418120027b694492e0738df20a",
          "commitAuthor": "Steve Loughran",
          "commitDateOld": "16/06/19 9:05 AM",
          "commitNameOld": "f9cc9e162175444efe9d5b07ecb9a795f750ca3c",
          "commitAuthorOld": "Gabor Bota",
          "daysBetweenCommits": 3.7,
          "commitsBetweenForRepo": 44,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,17 @@\n-    private void putParentsIfNotPresent(FileStatus f) throws IOException {\n+    private void putParentsIfNotPresent(FileStatus f,\n+        @Nullable BulkOperationState operationState) throws IOException {\n       Preconditions.checkNotNull(f);\n       Path parent \u003d f.getPath().getParent();\n       while (parent !\u003d null) {\n         if (dirCache.contains(parent)) {\n           return;\n         }\n         S3AFileStatus dir \u003d DynamoDBMetadataStore.makeDirStatus(parent,\n             f.getOwner());\n         S3Guard.putWithTtl(getStore(), new PathMetadata(dir),\n-            getFilesystem().getTtlTimeProvider());\n+            getFilesystem().getTtlTimeProvider(),\n+            operationState);\n         dirCache.add(parent);\n         parent \u003d parent.getParent();\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void putParentsIfNotPresent(FileStatus f,\n        @Nullable BulkOperationState operationState) throws IOException {\n      Preconditions.checkNotNull(f);\n      Path parent \u003d f.getPath().getParent();\n      while (parent !\u003d null) {\n        if (dirCache.contains(parent)) {\n          return;\n        }\n        S3AFileStatus dir \u003d DynamoDBMetadataStore.makeDirStatus(parent,\n            f.getOwner());\n        S3Guard.putWithTtl(getStore(), new PathMetadata(dir),\n            getFilesystem().getTtlTimeProvider(),\n            operationState);\n        dirCache.add(parent);\n        parent \u003d parent.getParent();\n      }\n    }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/S3GuardTool.java",
          "extendedDetails": {
            "oldValue": "[f-FileStatus]",
            "newValue": "[f-FileStatus, operationState-BulkOperationState(annotations-@Nullable)]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-15183. S3Guard store becomes inconsistent after partial failure of rename.\n\nContributed by Steve Loughran.\n\nChange-Id: I825b0bc36be960475d2d259b1cdab45ae1bb78eb\n",
          "commitDate": "20/06/19 1:56 AM",
          "commitName": "e02eb24e0a9139418120027b694492e0738df20a",
          "commitAuthor": "Steve Loughran",
          "commitDateOld": "16/06/19 9:05 AM",
          "commitNameOld": "f9cc9e162175444efe9d5b07ecb9a795f750ca3c",
          "commitAuthorOld": "Gabor Bota",
          "daysBetweenCommits": 3.7,
          "commitsBetweenForRepo": 44,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,17 @@\n-    private void putParentsIfNotPresent(FileStatus f) throws IOException {\n+    private void putParentsIfNotPresent(FileStatus f,\n+        @Nullable BulkOperationState operationState) throws IOException {\n       Preconditions.checkNotNull(f);\n       Path parent \u003d f.getPath().getParent();\n       while (parent !\u003d null) {\n         if (dirCache.contains(parent)) {\n           return;\n         }\n         S3AFileStatus dir \u003d DynamoDBMetadataStore.makeDirStatus(parent,\n             f.getOwner());\n         S3Guard.putWithTtl(getStore(), new PathMetadata(dir),\n-            getFilesystem().getTtlTimeProvider());\n+            getFilesystem().getTtlTimeProvider(),\n+            operationState);\n         dirCache.add(parent);\n         parent \u003d parent.getParent();\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void putParentsIfNotPresent(FileStatus f,\n        @Nullable BulkOperationState operationState) throws IOException {\n      Preconditions.checkNotNull(f);\n      Path parent \u003d f.getPath().getParent();\n      while (parent !\u003d null) {\n        if (dirCache.contains(parent)) {\n          return;\n        }\n        S3AFileStatus dir \u003d DynamoDBMetadataStore.makeDirStatus(parent,\n            f.getOwner());\n        S3Guard.putWithTtl(getStore(), new PathMetadata(dir),\n            getFilesystem().getTtlTimeProvider(),\n            operationState);\n        dirCache.add(parent);\n        parent \u003d parent.getParent();\n      }\n    }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/S3GuardTool.java",
          "extendedDetails": {}
        }
      ]
    },
    "f9cc9e162175444efe9d5b07ecb9a795f750ca3c": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16279. S3Guard: Implement time-based (TTL) expiry for entries (and tombstones).\n\nContributed by Gabor Bota.\n\nChange-Id: I73a2d2861901dedfe7a0e783b310fbb95e7c1af9\n",
      "commitDate": "16/06/19 9:05 AM",
      "commitName": "f9cc9e162175444efe9d5b07ecb9a795f750ca3c",
      "commitAuthor": "Gabor Bota",
      "commitDateOld": "07/06/19 10:26 AM",
      "commitNameOld": "4e38dafde4dce8cd8c368783a291e830f06e1def",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 8.94,
      "commitsBetweenForRepo": 50,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,15 @@\n     private void putParentsIfNotPresent(FileStatus f) throws IOException {\n       Preconditions.checkNotNull(f);\n       Path parent \u003d f.getPath().getParent();\n       while (parent !\u003d null) {\n         if (dirCache.contains(parent)) {\n           return;\n         }\n         S3AFileStatus dir \u003d DynamoDBMetadataStore.makeDirStatus(parent,\n             f.getOwner());\n-        getStore().put(new PathMetadata(dir));\n+        S3Guard.putWithTtl(getStore(), new PathMetadata(dir),\n+            getFilesystem().getTtlTimeProvider());\n         dirCache.add(parent);\n         parent \u003d parent.getParent();\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void putParentsIfNotPresent(FileStatus f) throws IOException {\n      Preconditions.checkNotNull(f);\n      Path parent \u003d f.getPath().getParent();\n      while (parent !\u003d null) {\n        if (dirCache.contains(parent)) {\n          return;\n        }\n        S3AFileStatus dir \u003d DynamoDBMetadataStore.makeDirStatus(parent,\n            f.getOwner());\n        S3Guard.putWithTtl(getStore(), new PathMetadata(dir),\n            getFilesystem().getTtlTimeProvider());\n        dirCache.add(parent);\n        parent \u003d parent.getParent();\n      }\n    }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/S3GuardTool.java",
      "extendedDetails": {}
    },
    "a36274d69947648dbe82721220cc5240ec5d396d": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16085. S3Guard: use object version or etags to protect against inconsistent read after replace/overwrite.\n\nContributed by Ben Roling.\n\nS3Guard will now track the etag of uploaded files and, if an S3\nbucket is versioned, the object version.\n\nYou can then control how to react to a mismatch between the data\nin the DynamoDB table and that in the store: warn, fail, or, when\nusing versions, return the original value.\n\nThis adds two new columns to the table: etag and version.\nThis is transparent to older S3A clients -but when such clients\nadd/update data to the S3Guard table, they will not add these values.\nAs a result, the etag/version checks will not work with files uploaded by older clients.\n\nFor a consistent experience, upgrade all clients to use the latest hadoop version.\n",
      "commitDate": "19/05/19 2:29 PM",
      "commitName": "a36274d69947648dbe82721220cc5240ec5d396d",
      "commitAuthor": "Ben Roling",
      "commitDateOld": "19/02/19 3:33 AM",
      "commitNameOld": "1e0ae6ed15f55f1dc64d2b9044eb2a84fc5c6837",
      "commitAuthorOld": "Adam Antal",
      "daysBetweenCommits": 89.41,
      "commitsBetweenForRepo": 621,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n     private void putParentsIfNotPresent(FileStatus f) throws IOException {\n       Preconditions.checkNotNull(f);\n       Path parent \u003d f.getPath().getParent();\n       while (parent !\u003d null) {\n         if (dirCache.contains(parent)) {\n           return;\n         }\n-        FileStatus dir \u003d DynamoDBMetadataStore.makeDirStatus(parent,\n+        S3AFileStatus dir \u003d DynamoDBMetadataStore.makeDirStatus(parent,\n             f.getOwner());\n         getStore().put(new PathMetadata(dir));\n         dirCache.add(parent);\n         parent \u003d parent.getParent();\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void putParentsIfNotPresent(FileStatus f) throws IOException {\n      Preconditions.checkNotNull(f);\n      Path parent \u003d f.getPath().getParent();\n      while (parent !\u003d null) {\n        if (dirCache.contains(parent)) {\n          return;\n        }\n        S3AFileStatus dir \u003d DynamoDBMetadataStore.makeDirStatus(parent,\n            f.getOwner());\n        getStore().put(new PathMetadata(dir));\n        dirCache.add(parent);\n        parent \u003d parent.getParent();\n      }\n    }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/S3GuardTool.java",
      "extendedDetails": {}
    },
    "621b43e254afaff708cd6fc4698b29628f6abc33": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-13345 HS3Guard: Improved Consistency for S3A.\nContributed by: Chris Nauroth, Aaron Fabbri, Mingliang Liu, Lei (Eddy) Xu,\nSean Mackrory, Steve Loughran and others.\n",
      "commitDate": "01/09/17 6:13 AM",
      "commitName": "621b43e254afaff708cd6fc4698b29628f6abc33",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,14 @@\n+    private void putParentsIfNotPresent(FileStatus f) throws IOException {\n+      Preconditions.checkNotNull(f);\n+      Path parent \u003d f.getPath().getParent();\n+      while (parent !\u003d null) {\n+        if (dirCache.contains(parent)) {\n+          return;\n+        }\n+        FileStatus dir \u003d DynamoDBMetadataStore.makeDirStatus(parent,\n+            f.getOwner());\n+        getStore().put(new PathMetadata(dir));\n+        dirCache.add(parent);\n+        parent \u003d parent.getParent();\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private void putParentsIfNotPresent(FileStatus f) throws IOException {\n      Preconditions.checkNotNull(f);\n      Path parent \u003d f.getPath().getParent();\n      while (parent !\u003d null) {\n        if (dirCache.contains(parent)) {\n          return;\n        }\n        FileStatus dir \u003d DynamoDBMetadataStore.makeDirStatus(parent,\n            f.getOwner());\n        getStore().put(new PathMetadata(dir));\n        dirCache.add(parent);\n        parent \u003d parent.getParent();\n      }\n    }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/S3GuardTool.java"
    }
  }
}