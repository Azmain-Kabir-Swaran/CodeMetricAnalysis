{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ClientDatanodeProtocolServerSideTranslatorPB.java",
  "functionName": "getReconfigurationStatus",
  "functionId": "getReconfigurationStatus___unused-RpcController__request-GetReconfigurationStatusRequestProto",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientDatanodeProtocolServerSideTranslatorPB.java",
  "functionStartLine": 213,
  "functionEndLine": 222,
  "numCommitsSeen": 29,
  "timeTaken": 1780,
  "changeHistory": [
    "86c95cb31a392d2ee4dcf3cc36e924ad34000b27",
    "1861b32eb551a07d748afc6205ea9573f9503eda"
  ],
  "changeHistoryShort": {
    "86c95cb31a392d2ee4dcf3cc36e924ad34000b27": "Ybodychange",
    "1861b32eb551a07d748afc6205ea9573f9503eda": "Yintroduced"
  },
  "changeHistoryDetails": {
    "86c95cb31a392d2ee4dcf3cc36e924ad34000b27": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9414. Refactor reconfiguration of ClientDatanodeProtocol for reusability. (Contributed by Xiaobing Zhou)\n",
      "commitDate": "04/12/15 8:24 PM",
      "commitName": "86c95cb31a392d2ee4dcf3cc36e924ad34000b27",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "21/09/15 6:53 PM",
      "commitNameOld": "06022b8fdc40e50eaac63758246353058e8cfa6d",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 74.1,
      "commitsBetweenForRepo": 574,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,10 @@\n   public GetReconfigurationStatusResponseProto getReconfigurationStatus(\n       RpcController unused, GetReconfigurationStatusRequestProto request)\n       throws ServiceException {\n-    GetReconfigurationStatusResponseProto.Builder builder \u003d\n-        GetReconfigurationStatusResponseProto.newBuilder();\n     try {\n-      ReconfigurationTaskStatus status \u003d impl.getReconfigurationStatus();\n-      builder.setStartTime(status.getStartTime());\n-      if (status.stopped()) {\n-        builder.setEndTime(status.getEndTime());\n-        assert status.getStatus() !\u003d null;\n-        for (Map.Entry\u003cPropertyChange, Optional\u003cString\u003e\u003e result :\n-            status.getStatus().entrySet()) {\n-          GetReconfigurationStatusConfigChangeProto.Builder changeBuilder \u003d\n-              GetReconfigurationStatusConfigChangeProto.newBuilder();\n-          PropertyChange change \u003d result.getKey();\n-          changeBuilder.setName(change.prop);\n-          changeBuilder.setOldValue(change.oldVal !\u003d null ? change.oldVal : \"\");\n-          if (change.newVal !\u003d null) {\n-            changeBuilder.setNewValue(change.newVal);\n-          }\n-          if (result.getValue().isPresent()) {\n-            // Get full stack trace.\n-            changeBuilder.setErrorMessage(result.getValue().get());\n-          }\n-          builder.addChanges(changeBuilder);\n-        }\n-      }\n+      return ReconfigurationProtocolServerSideUtils\n+          .getReconfigurationStatus(impl.getReconfigurationStatus());\n     } catch (IOException e) {\n       throw new ServiceException(e);\n     }\n-    return builder.build();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public GetReconfigurationStatusResponseProto getReconfigurationStatus(\n      RpcController unused, GetReconfigurationStatusRequestProto request)\n      throws ServiceException {\n    try {\n      return ReconfigurationProtocolServerSideUtils\n          .getReconfigurationStatus(impl.getReconfigurationStatus());\n    } catch (IOException e) {\n      throw new ServiceException(e);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientDatanodeProtocolServerSideTranslatorPB.java",
      "extendedDetails": {}
    },
    "1861b32eb551a07d748afc6205ea9573f9503eda": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-6808. Add command line option to ask DataNode reload configuration. (Lei Xu via Colin McCabe)\n",
      "commitDate": "25/09/14 1:11 PM",
      "commitName": "1861b32eb551a07d748afc6205ea9573f9503eda",
      "commitAuthor": "Colin Patrick Mccabe",
      "diff": "@@ -0,0 +1,33 @@\n+  public GetReconfigurationStatusResponseProto getReconfigurationStatus(\n+      RpcController unused, GetReconfigurationStatusRequestProto request)\n+      throws ServiceException {\n+    GetReconfigurationStatusResponseProto.Builder builder \u003d\n+        GetReconfigurationStatusResponseProto.newBuilder();\n+    try {\n+      ReconfigurationTaskStatus status \u003d impl.getReconfigurationStatus();\n+      builder.setStartTime(status.getStartTime());\n+      if (status.stopped()) {\n+        builder.setEndTime(status.getEndTime());\n+        assert status.getStatus() !\u003d null;\n+        for (Map.Entry\u003cPropertyChange, Optional\u003cString\u003e\u003e result :\n+            status.getStatus().entrySet()) {\n+          GetReconfigurationStatusConfigChangeProto.Builder changeBuilder \u003d\n+              GetReconfigurationStatusConfigChangeProto.newBuilder();\n+          PropertyChange change \u003d result.getKey();\n+          changeBuilder.setName(change.prop);\n+          changeBuilder.setOldValue(change.oldVal !\u003d null ? change.oldVal : \"\");\n+          if (change.newVal !\u003d null) {\n+            changeBuilder.setNewValue(change.newVal);\n+          }\n+          if (result.getValue().isPresent()) {\n+            // Get full stack trace.\n+            changeBuilder.setErrorMessage(result.getValue().get());\n+          }\n+          builder.addChanges(changeBuilder);\n+        }\n+      }\n+    } catch (IOException e) {\n+      throw new ServiceException(e);\n+    }\n+    return builder.build();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public GetReconfigurationStatusResponseProto getReconfigurationStatus(\n      RpcController unused, GetReconfigurationStatusRequestProto request)\n      throws ServiceException {\n    GetReconfigurationStatusResponseProto.Builder builder \u003d\n        GetReconfigurationStatusResponseProto.newBuilder();\n    try {\n      ReconfigurationTaskStatus status \u003d impl.getReconfigurationStatus();\n      builder.setStartTime(status.getStartTime());\n      if (status.stopped()) {\n        builder.setEndTime(status.getEndTime());\n        assert status.getStatus() !\u003d null;\n        for (Map.Entry\u003cPropertyChange, Optional\u003cString\u003e\u003e result :\n            status.getStatus().entrySet()) {\n          GetReconfigurationStatusConfigChangeProto.Builder changeBuilder \u003d\n              GetReconfigurationStatusConfigChangeProto.newBuilder();\n          PropertyChange change \u003d result.getKey();\n          changeBuilder.setName(change.prop);\n          changeBuilder.setOldValue(change.oldVal !\u003d null ? change.oldVal : \"\");\n          if (change.newVal !\u003d null) {\n            changeBuilder.setNewValue(change.newVal);\n          }\n          if (result.getValue().isPresent()) {\n            // Get full stack trace.\n            changeBuilder.setErrorMessage(result.getValue().get());\n          }\n          builder.addChanges(changeBuilder);\n        }\n      }\n    } catch (IOException e) {\n      throw new ServiceException(e);\n    }\n    return builder.build();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientDatanodeProtocolServerSideTranslatorPB.java"
    }
  }
}