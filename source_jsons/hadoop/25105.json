{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ClientCache.java",
  "functionName": "instantiateHistoryProxy",
  "functionId": "instantiateHistoryProxy",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ClientCache.java",
  "functionStartLine": 82,
  "functionEndLine": 99,
  "numCommitsSeen": 17,
  "timeTaken": 7064,
  "changeHistory": [
    "d737c323a688c987767f88b65d51fb9cdc5059ac",
    "bc4b1f48d3aba7f7a324ae76ab65a0920b1e609e",
    "f17ed541c76ce08b43713f06ecafd1685e16dff2",
    "66137cf17cb4abccd6065819d97edc63c6510477",
    "f0fedda8eff23d012c385675c728705e2c479363",
    "29552eeb36dd8a9246fb648d65b5cfb94ae46d77",
    "cb48bc1c93a4a1d8b2b936982a5e6b18494b5956",
    "fafe8cd28e726566509c679e19d7da622f29f90d",
    "f2b91a8367a762091482074505618b570a520b19",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "d737c323a688c987767f88b65d51fb9cdc5059ac": "Ybodychange",
    "bc4b1f48d3aba7f7a324ae76ab65a0920b1e609e": "Ymodifierchange",
    "f17ed541c76ce08b43713f06ecafd1685e16dff2": "Ybodychange",
    "66137cf17cb4abccd6065819d97edc63c6510477": "Ybodychange",
    "f0fedda8eff23d012c385675c728705e2c479363": "Ybodychange",
    "29552eeb36dd8a9246fb648d65b5cfb94ae46d77": "Ybodychange",
    "cb48bc1c93a4a1d8b2b936982a5e6b18494b5956": "Ybodychange",
    "fafe8cd28e726566509c679e19d7da622f29f90d": "Ybodychange",
    "f2b91a8367a762091482074505618b570a520b19": "Ymultichange(Ymovefromfile,Yreturntypechange,Ybodychange,Yparameterchange)",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d737c323a688c987767f88b65d51fb9cdc5059ac": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3669. Allow clients to talk to MR HistoryServer using both delegation tokens and kerberos. Contributed by Mahadev Konar. \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1232580 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/01/12 1:25 PM",
      "commitName": "d737c323a688c987767f88b65d51fb9cdc5059ac",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "10/01/12 5:50 PM",
      "commitNameOld": "bc4b1f48d3aba7f7a324ae76ab65a0920b1e609e",
      "commitAuthorOld": "Mahadev Konar",
      "daysBetweenCommits": 6.82,
      "commitsBetweenForRepo": 31,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   protected MRClientProtocol instantiateHistoryProxy()\n       throws IOException {\n     final String serviceAddr \u003d conf.get(JHAdminConfig.MR_HISTORY_ADDRESS);\n     if (StringUtils.isEmpty(serviceAddr)) {\n       return null;\n     }\n     LOG.debug(\"Connecting to HistoryServer at: \" + serviceAddr);\n     final YarnRPC rpc \u003d YarnRPC.create(conf);\n     LOG.debug(\"Connected to HistoryServer at: \" + serviceAddr);\n     UserGroupInformation currentUser \u003d UserGroupInformation.getCurrentUser();\n     return currentUser.doAs(new PrivilegedAction\u003cMRClientProtocol\u003e() {\n       @Override\n       public MRClientProtocol run() {\n-        return (MRClientProtocol) rpc.getProxy(MRClientProtocol.class,\n+        return (MRClientProtocol) rpc.getProxy(HSClientProtocol.class,\n             NetUtils.createSocketAddr(serviceAddr), conf);\n       }\n     });\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected MRClientProtocol instantiateHistoryProxy()\n      throws IOException {\n    final String serviceAddr \u003d conf.get(JHAdminConfig.MR_HISTORY_ADDRESS);\n    if (StringUtils.isEmpty(serviceAddr)) {\n      return null;\n    }\n    LOG.debug(\"Connecting to HistoryServer at: \" + serviceAddr);\n    final YarnRPC rpc \u003d YarnRPC.create(conf);\n    LOG.debug(\"Connected to HistoryServer at: \" + serviceAddr);\n    UserGroupInformation currentUser \u003d UserGroupInformation.getCurrentUser();\n    return currentUser.doAs(new PrivilegedAction\u003cMRClientProtocol\u003e() {\n      @Override\n      public MRClientProtocol run() {\n        return (MRClientProtocol) rpc.getProxy(HSClientProtocol.class,\n            NetUtils.createSocketAddr(serviceAddr), conf);\n      }\n    });\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ClientCache.java",
      "extendedDetails": {}
    },
    "bc4b1f48d3aba7f7a324ae76ab65a0920b1e609e": {
      "type": "Ymodifierchange",
      "commitMessage": "MAPREDUCE-3380. Token infrastructure for running clients which are not kerberos authenticated. (mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1229855 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/01/12 5:50 PM",
      "commitName": "bc4b1f48d3aba7f7a324ae76ab65a0920b1e609e",
      "commitAuthor": "Mahadev Konar",
      "commitDateOld": "23/11/11 2:04 PM",
      "commitNameOld": "f17ed541c76ce08b43713f06ecafd1685e16dff2",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 48.16,
      "commitsBetweenForRepo": 233,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n-  private MRClientProtocol instantiateHistoryProxy()\n+  protected MRClientProtocol instantiateHistoryProxy()\n       throws IOException {\n     final String serviceAddr \u003d conf.get(JHAdminConfig.MR_HISTORY_ADDRESS);\n     if (StringUtils.isEmpty(serviceAddr)) {\n       return null;\n     }\n     LOG.debug(\"Connecting to HistoryServer at: \" + serviceAddr);\n     final YarnRPC rpc \u003d YarnRPC.create(conf);\n     LOG.debug(\"Connected to HistoryServer at: \" + serviceAddr);\n     UserGroupInformation currentUser \u003d UserGroupInformation.getCurrentUser();\n     return currentUser.doAs(new PrivilegedAction\u003cMRClientProtocol\u003e() {\n       @Override\n       public MRClientProtocol run() {\n         return (MRClientProtocol) rpc.getProxy(MRClientProtocol.class,\n             NetUtils.createSocketAddr(serviceAddr), conf);\n       }\n     });\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected MRClientProtocol instantiateHistoryProxy()\n      throws IOException {\n    final String serviceAddr \u003d conf.get(JHAdminConfig.MR_HISTORY_ADDRESS);\n    if (StringUtils.isEmpty(serviceAddr)) {\n      return null;\n    }\n    LOG.debug(\"Connecting to HistoryServer at: \" + serviceAddr);\n    final YarnRPC rpc \u003d YarnRPC.create(conf);\n    LOG.debug(\"Connected to HistoryServer at: \" + serviceAddr);\n    UserGroupInformation currentUser \u003d UserGroupInformation.getCurrentUser();\n    return currentUser.doAs(new PrivilegedAction\u003cMRClientProtocol\u003e() {\n      @Override\n      public MRClientProtocol run() {\n        return (MRClientProtocol) rpc.getProxy(MRClientProtocol.class,\n            NetUtils.createSocketAddr(serviceAddr), conf);\n      }\n    });\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ClientCache.java",
      "extendedDetails": {
        "oldValue": "[private]",
        "newValue": "[protected]"
      }
    },
    "f17ed541c76ce08b43713f06ecafd1685e16dff2": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3265. Removed debug logs during job submission to LOG.debug to cut down noise. \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1205628 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/11/11 2:04 PM",
      "commitName": "f17ed541c76ce08b43713f06ecafd1685e16dff2",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "05/10/11 4:43 AM",
      "commitNameOld": "66137cf17cb4abccd6065819d97edc63c6510477",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 49.43,
      "commitsBetweenForRepo": 374,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   private MRClientProtocol instantiateHistoryProxy()\n       throws IOException {\n     final String serviceAddr \u003d conf.get(JHAdminConfig.MR_HISTORY_ADDRESS);\n     if (StringUtils.isEmpty(serviceAddr)) {\n       return null;\n     }\n-    LOG.info(\"Connecting to HistoryServer at: \" + serviceAddr);\n+    LOG.debug(\"Connecting to HistoryServer at: \" + serviceAddr);\n     final YarnRPC rpc \u003d YarnRPC.create(conf);\n-    LOG.info(\"Connected to HistoryServer at: \" + serviceAddr);\n+    LOG.debug(\"Connected to HistoryServer at: \" + serviceAddr);\n     UserGroupInformation currentUser \u003d UserGroupInformation.getCurrentUser();\n     return currentUser.doAs(new PrivilegedAction\u003cMRClientProtocol\u003e() {\n       @Override\n       public MRClientProtocol run() {\n         return (MRClientProtocol) rpc.getProxy(MRClientProtocol.class,\n             NetUtils.createSocketAddr(serviceAddr), conf);\n       }\n     });\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private MRClientProtocol instantiateHistoryProxy()\n      throws IOException {\n    final String serviceAddr \u003d conf.get(JHAdminConfig.MR_HISTORY_ADDRESS);\n    if (StringUtils.isEmpty(serviceAddr)) {\n      return null;\n    }\n    LOG.debug(\"Connecting to HistoryServer at: \" + serviceAddr);\n    final YarnRPC rpc \u003d YarnRPC.create(conf);\n    LOG.debug(\"Connected to HistoryServer at: \" + serviceAddr);\n    UserGroupInformation currentUser \u003d UserGroupInformation.getCurrentUser();\n    return currentUser.doAs(new PrivilegedAction\u003cMRClientProtocol\u003e() {\n      @Override\n      public MRClientProtocol run() {\n        return (MRClientProtocol) rpc.getProxy(MRClientProtocol.class,\n            NetUtils.createSocketAddr(serviceAddr), conf);\n      }\n    });\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ClientCache.java",
      "extendedDetails": {}
    },
    "66137cf17cb4abccd6065819d97edc63c6510477": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3013. Removed YarnConfiguration.YARN_SECURITY_INFO and its usage as it doesn\u0027t affect security any more. (vinodkv)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1179174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/10/11 4:43 AM",
      "commitName": "66137cf17cb4abccd6065819d97edc63c6510477",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "27/09/11 1:30 PM",
      "commitNameOld": "0d2bb0623696c2cc822cb44e431345b2c773dbff",
      "commitAuthorOld": "Mahadev Konar",
      "daysBetweenCommits": 7.63,
      "commitsBetweenForRepo": 63,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,18 @@\n   private MRClientProtocol instantiateHistoryProxy()\n       throws IOException {\n     final String serviceAddr \u003d conf.get(JHAdminConfig.MR_HISTORY_ADDRESS);\n     if (StringUtils.isEmpty(serviceAddr)) {\n       return null;\n     }\n     LOG.info(\"Connecting to HistoryServer at: \" + serviceAddr);\n-    final Configuration myConf \u003d new Configuration(conf);\n-    myConf.setClass(YarnConfiguration.YARN_SECURITY_INFO,\n-        ClientHSSecurityInfo.class, SecurityInfo.class);\n-    final YarnRPC rpc \u003d YarnRPC.create(myConf);\n+    final YarnRPC rpc \u003d YarnRPC.create(conf);\n     LOG.info(\"Connected to HistoryServer at: \" + serviceAddr);\n     UserGroupInformation currentUser \u003d UserGroupInformation.getCurrentUser();\n     return currentUser.doAs(new PrivilegedAction\u003cMRClientProtocol\u003e() {\n       @Override\n       public MRClientProtocol run() {\n         return (MRClientProtocol) rpc.getProxy(MRClientProtocol.class,\n-            NetUtils.createSocketAddr(serviceAddr), myConf);\n+            NetUtils.createSocketAddr(serviceAddr), conf);\n       }\n     });\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private MRClientProtocol instantiateHistoryProxy()\n      throws IOException {\n    final String serviceAddr \u003d conf.get(JHAdminConfig.MR_HISTORY_ADDRESS);\n    if (StringUtils.isEmpty(serviceAddr)) {\n      return null;\n    }\n    LOG.info(\"Connecting to HistoryServer at: \" + serviceAddr);\n    final YarnRPC rpc \u003d YarnRPC.create(conf);\n    LOG.info(\"Connected to HistoryServer at: \" + serviceAddr);\n    UserGroupInformation currentUser \u003d UserGroupInformation.getCurrentUser();\n    return currentUser.doAs(new PrivilegedAction\u003cMRClientProtocol\u003e() {\n      @Override\n      public MRClientProtocol run() {\n        return (MRClientProtocol) rpc.getProxy(MRClientProtocol.class,\n            NetUtils.createSocketAddr(serviceAddr), conf);\n      }\n    });\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ClientCache.java",
      "extendedDetails": {}
    },
    "f0fedda8eff23d012c385675c728705e2c479363": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3040. Fixed extra copy of Configuration in YarnClientProtocolProvider and ensured MiniMRYarnCluster sets JobHistory configuration for tests.        \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1172929 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/09/11 5:46 PM",
      "commitName": "f0fedda8eff23d012c385675c728705e2c479363",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "19/09/11 5:26 AM",
      "commitNameOld": "29552eeb36dd8a9246fb648d65b5cfb94ae46d77",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 0.51,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,21 @@\n   private MRClientProtocol instantiateHistoryProxy()\n   throws IOException {\n     final String serviceAddr \u003d conf.get(JHAdminConfig.MR_HISTORY_ADDRESS);\n     if (StringUtils.isEmpty(serviceAddr)) {\n-      LOG.info(\"HistoryServer is not configured.\");\n       return null;\n     }\n     LOG.info(\"Connecting to HistoryServer at: \" + serviceAddr);\n     final Configuration myConf \u003d new Configuration(conf);\n     myConf.setClass(YarnConfiguration.YARN_SECURITY_INFO,\n         ClientHSSecurityInfo.class, SecurityInfo.class);\n     final YarnRPC rpc \u003d YarnRPC.create(myConf);\n     LOG.info(\"Connected to HistoryServer at: \" + serviceAddr);\n     UserGroupInformation currentUser \u003d UserGroupInformation.getCurrentUser();\n     return currentUser.doAs(new PrivilegedAction\u003cMRClientProtocol\u003e() {\n       @Override\n       public MRClientProtocol run() {\n         return (MRClientProtocol) rpc.getProxy(MRClientProtocol.class,\n             NetUtils.createSocketAddr(serviceAddr), myConf);\n       }\n     });\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private MRClientProtocol instantiateHistoryProxy()\n  throws IOException {\n    final String serviceAddr \u003d conf.get(JHAdminConfig.MR_HISTORY_ADDRESS);\n    if (StringUtils.isEmpty(serviceAddr)) {\n      return null;\n    }\n    LOG.info(\"Connecting to HistoryServer at: \" + serviceAddr);\n    final Configuration myConf \u003d new Configuration(conf);\n    myConf.setClass(YarnConfiguration.YARN_SECURITY_INFO,\n        ClientHSSecurityInfo.class, SecurityInfo.class);\n    final YarnRPC rpc \u003d YarnRPC.create(myConf);\n    LOG.info(\"Connected to HistoryServer at: \" + serviceAddr);\n    UserGroupInformation currentUser \u003d UserGroupInformation.getCurrentUser();\n    return currentUser.doAs(new PrivilegedAction\u003cMRClientProtocol\u003e() {\n      @Override\n      public MRClientProtocol run() {\n        return (MRClientProtocol) rpc.getProxy(MRClientProtocol.class,\n            NetUtils.createSocketAddr(serviceAddr), myConf);\n      }\n    });\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ClientCache.java",
      "extendedDetails": {}
    },
    "29552eeb36dd8a9246fb648d65b5cfb94ae46d77": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2925. Fixed Yarn+MR client code to behave saner with completed jobs. Contributed by Devaraj K.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1172587 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/09/11 5:26 AM",
      "commitName": "29552eeb36dd8a9246fb648d65b5cfb94ae46d77",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "15/09/11 3:53 AM",
      "commitNameOld": "cb48bc1c93a4a1d8b2b936982a5e6b18494b5956",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 4.06,
      "commitsBetweenForRepo": 22,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,22 @@\n   private MRClientProtocol instantiateHistoryProxy()\n   throws IOException {\n-\tfinal String serviceAddr \u003d conf.get(JHAdminConfig.MR_HISTORY_ADDRESS,\n-\t          JHAdminConfig.DEFAULT_MR_HISTORY_ADDRESS);\n+    final String serviceAddr \u003d conf.get(JHAdminConfig.MR_HISTORY_ADDRESS);\n+    if (StringUtils.isEmpty(serviceAddr)) {\n+      LOG.info(\"HistoryServer is not configured.\");\n+      return null;\n+    }\n     LOG.info(\"Connecting to HistoryServer at: \" + serviceAddr);\n     final Configuration myConf \u003d new Configuration(conf);\n     myConf.setClass(YarnConfiguration.YARN_SECURITY_INFO,\n         ClientHSSecurityInfo.class, SecurityInfo.class);\n     final YarnRPC rpc \u003d YarnRPC.create(myConf);\n     LOG.info(\"Connected to HistoryServer at: \" + serviceAddr);\n     UserGroupInformation currentUser \u003d UserGroupInformation.getCurrentUser();\n     return currentUser.doAs(new PrivilegedAction\u003cMRClientProtocol\u003e() {\n       @Override\n       public MRClientProtocol run() {\n         return (MRClientProtocol) rpc.getProxy(MRClientProtocol.class,\n             NetUtils.createSocketAddr(serviceAddr), myConf);\n       }\n     });\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private MRClientProtocol instantiateHistoryProxy()\n  throws IOException {\n    final String serviceAddr \u003d conf.get(JHAdminConfig.MR_HISTORY_ADDRESS);\n    if (StringUtils.isEmpty(serviceAddr)) {\n      LOG.info(\"HistoryServer is not configured.\");\n      return null;\n    }\n    LOG.info(\"Connecting to HistoryServer at: \" + serviceAddr);\n    final Configuration myConf \u003d new Configuration(conf);\n    myConf.setClass(YarnConfiguration.YARN_SECURITY_INFO,\n        ClientHSSecurityInfo.class, SecurityInfo.class);\n    final YarnRPC rpc \u003d YarnRPC.create(myConf);\n    LOG.info(\"Connected to HistoryServer at: \" + serviceAddr);\n    UserGroupInformation currentUser \u003d UserGroupInformation.getCurrentUser();\n    return currentUser.doAs(new PrivilegedAction\u003cMRClientProtocol\u003e() {\n      @Override\n      public MRClientProtocol run() {\n        return (MRClientProtocol) rpc.getProxy(MRClientProtocol.class,\n            NetUtils.createSocketAddr(serviceAddr), myConf);\n      }\n    });\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ClientCache.java",
      "extendedDetails": {}
    },
    "cb48bc1c93a4a1d8b2b936982a5e6b18494b5956": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3007. Fixed Yarn Mapreduce client to be able to connect to JobHistoryServer in secure mode. Contributed by Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1171051 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "15/09/11 3:53 AM",
      "commitName": "cb48bc1c93a4a1d8b2b936982a5e6b18494b5956",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "08/09/11 6:44 PM",
      "commitNameOld": "fafe8cd28e726566509c679e19d7da622f29f90d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 6.38,
      "commitsBetweenForRepo": 41,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,19 @@\n   private MRClientProtocol instantiateHistoryProxy()\n   throws IOException {\n-\tString serviceAddr \u003d conf.get(JHAdminConfig.MR_HISTORY_ADDRESS,\n+\tfinal String serviceAddr \u003d conf.get(JHAdminConfig.MR_HISTORY_ADDRESS,\n \t          JHAdminConfig.DEFAULT_MR_HISTORY_ADDRESS);\n     LOG.info(\"Connecting to HistoryServer at: \" + serviceAddr);\n-    Configuration myConf \u003d new Configuration(conf);\n-    //TODO This should ideally be using it\u0027s own class (instead of ClientRMSecurityInfo)\n+    final Configuration myConf \u003d new Configuration(conf);\n     myConf.setClass(YarnConfiguration.YARN_SECURITY_INFO,\n-        ClientRMSecurityInfo.class, SecurityInfo.class);\n-    YarnRPC rpc \u003d YarnRPC.create(myConf);\n+        ClientHSSecurityInfo.class, SecurityInfo.class);\n+    final YarnRPC rpc \u003d YarnRPC.create(myConf);\n     LOG.info(\"Connected to HistoryServer at: \" + serviceAddr);\n-    return (MRClientProtocol) rpc.getProxy(MRClientProtocol.class,\n-        NetUtils.createSocketAddr(serviceAddr), myConf);\n+    UserGroupInformation currentUser \u003d UserGroupInformation.getCurrentUser();\n+    return currentUser.doAs(new PrivilegedAction\u003cMRClientProtocol\u003e() {\n+      @Override\n+      public MRClientProtocol run() {\n+        return (MRClientProtocol) rpc.getProxy(MRClientProtocol.class,\n+            NetUtils.createSocketAddr(serviceAddr), myConf);\n+      }\n+    });\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private MRClientProtocol instantiateHistoryProxy()\n  throws IOException {\n\tfinal String serviceAddr \u003d conf.get(JHAdminConfig.MR_HISTORY_ADDRESS,\n\t          JHAdminConfig.DEFAULT_MR_HISTORY_ADDRESS);\n    LOG.info(\"Connecting to HistoryServer at: \" + serviceAddr);\n    final Configuration myConf \u003d new Configuration(conf);\n    myConf.setClass(YarnConfiguration.YARN_SECURITY_INFO,\n        ClientHSSecurityInfo.class, SecurityInfo.class);\n    final YarnRPC rpc \u003d YarnRPC.create(myConf);\n    LOG.info(\"Connected to HistoryServer at: \" + serviceAddr);\n    UserGroupInformation currentUser \u003d UserGroupInformation.getCurrentUser();\n    return currentUser.doAs(new PrivilegedAction\u003cMRClientProtocol\u003e() {\n      @Override\n      public MRClientProtocol run() {\n        return (MRClientProtocol) rpc.getProxy(MRClientProtocol.class,\n            NetUtils.createSocketAddr(serviceAddr), myConf);\n      }\n    });\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ClientCache.java",
      "extendedDetails": {}
    },
    "fafe8cd28e726566509c679e19d7da622f29f90d": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2864. Normalize configuration variable names for YARN. Contributed by Robert Evans.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1166955 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/09/11 6:44 PM",
      "commitName": "fafe8cd28e726566509c679e19d7da622f29f90d",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 11:35 PM",
      "commitNameOld": "f2b91a8367a762091482074505618b570a520b19",
      "commitAuthorOld": "Sharad Agarwal",
      "daysBetweenCommits": 14.8,
      "commitsBetweenForRepo": 84,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n   private MRClientProtocol instantiateHistoryProxy()\n   throws IOException {\n-\tString serviceAddr \u003d conf.get(JHConfig.HS_BIND_ADDRESS,\n-\t          JHConfig.DEFAULT_HS_BIND_ADDRESS);\n+\tString serviceAddr \u003d conf.get(JHAdminConfig.MR_HISTORY_ADDRESS,\n+\t          JHAdminConfig.DEFAULT_MR_HISTORY_ADDRESS);\n     LOG.info(\"Connecting to HistoryServer at: \" + serviceAddr);\n     Configuration myConf \u003d new Configuration(conf);\n     //TODO This should ideally be using it\u0027s own class (instead of ClientRMSecurityInfo)\n     myConf.setClass(YarnConfiguration.YARN_SECURITY_INFO,\n         ClientRMSecurityInfo.class, SecurityInfo.class);\n     YarnRPC rpc \u003d YarnRPC.create(myConf);\n     LOG.info(\"Connected to HistoryServer at: \" + serviceAddr);\n     return (MRClientProtocol) rpc.getProxy(MRClientProtocol.class,\n         NetUtils.createSocketAddr(serviceAddr), myConf);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private MRClientProtocol instantiateHistoryProxy()\n  throws IOException {\n\tString serviceAddr \u003d conf.get(JHAdminConfig.MR_HISTORY_ADDRESS,\n\t          JHAdminConfig.DEFAULT_MR_HISTORY_ADDRESS);\n    LOG.info(\"Connecting to HistoryServer at: \" + serviceAddr);\n    Configuration myConf \u003d new Configuration(conf);\n    //TODO This should ideally be using it\u0027s own class (instead of ClientRMSecurityInfo)\n    myConf.setClass(YarnConfiguration.YARN_SECURITY_INFO,\n        ClientRMSecurityInfo.class, SecurityInfo.class);\n    YarnRPC rpc \u003d YarnRPC.create(myConf);\n    LOG.info(\"Connected to HistoryServer at: \" + serviceAddr);\n    return (MRClientProtocol) rpc.getProxy(MRClientProtocol.class,\n        NetUtils.createSocketAddr(serviceAddr), myConf);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ClientCache.java",
      "extendedDetails": {}
    },
    "f2b91a8367a762091482074505618b570a520b19": {
      "type": "Ymultichange(Ymovefromfile,Yreturntypechange,Ybodychange,Yparameterchange)",
      "commitMessage": " MAPREDUCE-2807. Fix AM restart and client redirection. Contributed by Sharad Agarwal.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161408 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 11:35 PM",
      "commitName": "f2b91a8367a762091482074505618b570a520b19",
      "commitAuthor": "Sharad Agarwal",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": " MAPREDUCE-2807. Fix AM restart and client redirection. Contributed by Sharad Agarwal.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161408 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "24/08/11 11:35 PM",
          "commitName": "f2b91a8367a762091482074505618b570a520b19",
          "commitAuthor": "Sharad Agarwal",
          "commitDateOld": "24/08/11 5:20 PM",
          "commitNameOld": "6316e662791c3fe19ce43550a57ae4e9beac05ad",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 0.26,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,14 @@\n-  private void instantiateHistoryProxy(final String serviceAddr)\n+  private MRClientProtocol instantiateHistoryProxy()\n   throws IOException {\n-    LOG.trace(\"Connecting to HistoryServer at: \" + serviceAddr);\n+\tString serviceAddr \u003d conf.get(JHConfig.HS_BIND_ADDRESS,\n+\t          JHConfig.DEFAULT_HS_BIND_ADDRESS);\n+    LOG.info(\"Connecting to HistoryServer at: \" + serviceAddr);\n     Configuration myConf \u003d new Configuration(conf);\n     //TODO This should ideally be using it\u0027s own class (instead of ClientRMSecurityInfo)\n     myConf.setClass(YarnConfiguration.YARN_SECURITY_INFO,\n         ClientRMSecurityInfo.class, SecurityInfo.class);\n     YarnRPC rpc \u003d YarnRPC.create(myConf);\n-    realProxy \u003d (MRClientProtocol) rpc.getProxy(MRClientProtocol.class,\n+    LOG.info(\"Connected to HistoryServer at: \" + serviceAddr);\n+    return (MRClientProtocol) rpc.getProxy(MRClientProtocol.class,\n         NetUtils.createSocketAddr(serviceAddr), myConf);\n-    LOG.trace(\"Connected to HistoryServer at: \" + serviceAddr);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private MRClientProtocol instantiateHistoryProxy()\n  throws IOException {\n\tString serviceAddr \u003d conf.get(JHConfig.HS_BIND_ADDRESS,\n\t          JHConfig.DEFAULT_HS_BIND_ADDRESS);\n    LOG.info(\"Connecting to HistoryServer at: \" + serviceAddr);\n    Configuration myConf \u003d new Configuration(conf);\n    //TODO This should ideally be using it\u0027s own class (instead of ClientRMSecurityInfo)\n    myConf.setClass(YarnConfiguration.YARN_SECURITY_INFO,\n        ClientRMSecurityInfo.class, SecurityInfo.class);\n    YarnRPC rpc \u003d YarnRPC.create(myConf);\n    LOG.info(\"Connected to HistoryServer at: \" + serviceAddr);\n    return (MRClientProtocol) rpc.getProxy(MRClientProtocol.class,\n        NetUtils.createSocketAddr(serviceAddr), myConf);\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ClientCache.java",
          "extendedDetails": {
            "oldPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ClientServiceDelegate.java",
            "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ClientCache.java",
            "oldMethodName": "instantiateHistoryProxy",
            "newMethodName": "instantiateHistoryProxy"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": " MAPREDUCE-2807. Fix AM restart and client redirection. Contributed by Sharad Agarwal.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161408 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "24/08/11 11:35 PM",
          "commitName": "f2b91a8367a762091482074505618b570a520b19",
          "commitAuthor": "Sharad Agarwal",
          "commitDateOld": "24/08/11 5:20 PM",
          "commitNameOld": "6316e662791c3fe19ce43550a57ae4e9beac05ad",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 0.26,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,14 @@\n-  private void instantiateHistoryProxy(final String serviceAddr)\n+  private MRClientProtocol instantiateHistoryProxy()\n   throws IOException {\n-    LOG.trace(\"Connecting to HistoryServer at: \" + serviceAddr);\n+\tString serviceAddr \u003d conf.get(JHConfig.HS_BIND_ADDRESS,\n+\t          JHConfig.DEFAULT_HS_BIND_ADDRESS);\n+    LOG.info(\"Connecting to HistoryServer at: \" + serviceAddr);\n     Configuration myConf \u003d new Configuration(conf);\n     //TODO This should ideally be using it\u0027s own class (instead of ClientRMSecurityInfo)\n     myConf.setClass(YarnConfiguration.YARN_SECURITY_INFO,\n         ClientRMSecurityInfo.class, SecurityInfo.class);\n     YarnRPC rpc \u003d YarnRPC.create(myConf);\n-    realProxy \u003d (MRClientProtocol) rpc.getProxy(MRClientProtocol.class,\n+    LOG.info(\"Connected to HistoryServer at: \" + serviceAddr);\n+    return (MRClientProtocol) rpc.getProxy(MRClientProtocol.class,\n         NetUtils.createSocketAddr(serviceAddr), myConf);\n-    LOG.trace(\"Connected to HistoryServer at: \" + serviceAddr);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private MRClientProtocol instantiateHistoryProxy()\n  throws IOException {\n\tString serviceAddr \u003d conf.get(JHConfig.HS_BIND_ADDRESS,\n\t          JHConfig.DEFAULT_HS_BIND_ADDRESS);\n    LOG.info(\"Connecting to HistoryServer at: \" + serviceAddr);\n    Configuration myConf \u003d new Configuration(conf);\n    //TODO This should ideally be using it\u0027s own class (instead of ClientRMSecurityInfo)\n    myConf.setClass(YarnConfiguration.YARN_SECURITY_INFO,\n        ClientRMSecurityInfo.class, SecurityInfo.class);\n    YarnRPC rpc \u003d YarnRPC.create(myConf);\n    LOG.info(\"Connected to HistoryServer at: \" + serviceAddr);\n    return (MRClientProtocol) rpc.getProxy(MRClientProtocol.class,\n        NetUtils.createSocketAddr(serviceAddr), myConf);\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ClientCache.java",
          "extendedDetails": {
            "oldValue": "void",
            "newValue": "MRClientProtocol"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": " MAPREDUCE-2807. Fix AM restart and client redirection. Contributed by Sharad Agarwal.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161408 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "24/08/11 11:35 PM",
          "commitName": "f2b91a8367a762091482074505618b570a520b19",
          "commitAuthor": "Sharad Agarwal",
          "commitDateOld": "24/08/11 5:20 PM",
          "commitNameOld": "6316e662791c3fe19ce43550a57ae4e9beac05ad",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 0.26,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,14 @@\n-  private void instantiateHistoryProxy(final String serviceAddr)\n+  private MRClientProtocol instantiateHistoryProxy()\n   throws IOException {\n-    LOG.trace(\"Connecting to HistoryServer at: \" + serviceAddr);\n+\tString serviceAddr \u003d conf.get(JHConfig.HS_BIND_ADDRESS,\n+\t          JHConfig.DEFAULT_HS_BIND_ADDRESS);\n+    LOG.info(\"Connecting to HistoryServer at: \" + serviceAddr);\n     Configuration myConf \u003d new Configuration(conf);\n     //TODO This should ideally be using it\u0027s own class (instead of ClientRMSecurityInfo)\n     myConf.setClass(YarnConfiguration.YARN_SECURITY_INFO,\n         ClientRMSecurityInfo.class, SecurityInfo.class);\n     YarnRPC rpc \u003d YarnRPC.create(myConf);\n-    realProxy \u003d (MRClientProtocol) rpc.getProxy(MRClientProtocol.class,\n+    LOG.info(\"Connected to HistoryServer at: \" + serviceAddr);\n+    return (MRClientProtocol) rpc.getProxy(MRClientProtocol.class,\n         NetUtils.createSocketAddr(serviceAddr), myConf);\n-    LOG.trace(\"Connected to HistoryServer at: \" + serviceAddr);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private MRClientProtocol instantiateHistoryProxy()\n  throws IOException {\n\tString serviceAddr \u003d conf.get(JHConfig.HS_BIND_ADDRESS,\n\t          JHConfig.DEFAULT_HS_BIND_ADDRESS);\n    LOG.info(\"Connecting to HistoryServer at: \" + serviceAddr);\n    Configuration myConf \u003d new Configuration(conf);\n    //TODO This should ideally be using it\u0027s own class (instead of ClientRMSecurityInfo)\n    myConf.setClass(YarnConfiguration.YARN_SECURITY_INFO,\n        ClientRMSecurityInfo.class, SecurityInfo.class);\n    YarnRPC rpc \u003d YarnRPC.create(myConf);\n    LOG.info(\"Connected to HistoryServer at: \" + serviceAddr);\n    return (MRClientProtocol) rpc.getProxy(MRClientProtocol.class,\n        NetUtils.createSocketAddr(serviceAddr), myConf);\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ClientCache.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": " MAPREDUCE-2807. Fix AM restart and client redirection. Contributed by Sharad Agarwal.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161408 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "24/08/11 11:35 PM",
          "commitName": "f2b91a8367a762091482074505618b570a520b19",
          "commitAuthor": "Sharad Agarwal",
          "commitDateOld": "24/08/11 5:20 PM",
          "commitNameOld": "6316e662791c3fe19ce43550a57ae4e9beac05ad",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 0.26,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,14 @@\n-  private void instantiateHistoryProxy(final String serviceAddr)\n+  private MRClientProtocol instantiateHistoryProxy()\n   throws IOException {\n-    LOG.trace(\"Connecting to HistoryServer at: \" + serviceAddr);\n+\tString serviceAddr \u003d conf.get(JHConfig.HS_BIND_ADDRESS,\n+\t          JHConfig.DEFAULT_HS_BIND_ADDRESS);\n+    LOG.info(\"Connecting to HistoryServer at: \" + serviceAddr);\n     Configuration myConf \u003d new Configuration(conf);\n     //TODO This should ideally be using it\u0027s own class (instead of ClientRMSecurityInfo)\n     myConf.setClass(YarnConfiguration.YARN_SECURITY_INFO,\n         ClientRMSecurityInfo.class, SecurityInfo.class);\n     YarnRPC rpc \u003d YarnRPC.create(myConf);\n-    realProxy \u003d (MRClientProtocol) rpc.getProxy(MRClientProtocol.class,\n+    LOG.info(\"Connected to HistoryServer at: \" + serviceAddr);\n+    return (MRClientProtocol) rpc.getProxy(MRClientProtocol.class,\n         NetUtils.createSocketAddr(serviceAddr), myConf);\n-    LOG.trace(\"Connected to HistoryServer at: \" + serviceAddr);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private MRClientProtocol instantiateHistoryProxy()\n  throws IOException {\n\tString serviceAddr \u003d conf.get(JHConfig.HS_BIND_ADDRESS,\n\t          JHConfig.DEFAULT_HS_BIND_ADDRESS);\n    LOG.info(\"Connecting to HistoryServer at: \" + serviceAddr);\n    Configuration myConf \u003d new Configuration(conf);\n    //TODO This should ideally be using it\u0027s own class (instead of ClientRMSecurityInfo)\n    myConf.setClass(YarnConfiguration.YARN_SECURITY_INFO,\n        ClientRMSecurityInfo.class, SecurityInfo.class);\n    YarnRPC rpc \u003d YarnRPC.create(myConf);\n    LOG.info(\"Connected to HistoryServer at: \" + serviceAddr);\n    return (MRClientProtocol) rpc.getProxy(MRClientProtocol.class,\n        NetUtils.createSocketAddr(serviceAddr), myConf);\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ClientCache.java",
          "extendedDetails": {
            "oldValue": "[serviceAddr-String(modifiers-final)]",
            "newValue": "[]"
          }
        }
      ]
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void instantiateHistoryProxy(final String serviceAddr)\n  throws IOException {\n    LOG.trace(\"Connecting to HistoryServer at: \" + serviceAddr);\n    Configuration myConf \u003d new Configuration(conf);\n    //TODO This should ideally be using it\u0027s own class (instead of ClientRMSecurityInfo)\n    myConf.setClass(YarnConfiguration.YARN_SECURITY_INFO,\n        ClientRMSecurityInfo.class, SecurityInfo.class);\n    YarnRPC rpc \u003d YarnRPC.create(myConf);\n    realProxy \u003d (MRClientProtocol) rpc.getProxy(MRClientProtocol.class,\n        NetUtils.createSocketAddr(serviceAddr), myConf);\n    LOG.trace(\"Connected to HistoryServer at: \" + serviceAddr);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ClientServiceDelegate.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ClientServiceDelegate.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ClientServiceDelegate.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,12 @@\n+  private void instantiateHistoryProxy(final String serviceAddr)\n+  throws IOException {\n+    LOG.trace(\"Connecting to HistoryServer at: \" + serviceAddr);\n+    Configuration myConf \u003d new Configuration(conf);\n+    //TODO This should ideally be using it\u0027s own class (instead of ClientRMSecurityInfo)\n+    myConf.setClass(YarnConfiguration.YARN_SECURITY_INFO,\n+        ClientRMSecurityInfo.class, SecurityInfo.class);\n+    YarnRPC rpc \u003d YarnRPC.create(myConf);\n+    realProxy \u003d (MRClientProtocol) rpc.getProxy(MRClientProtocol.class,\n+        NetUtils.createSocketAddr(serviceAddr), myConf);\n+    LOG.trace(\"Connected to HistoryServer at: \" + serviceAddr);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void instantiateHistoryProxy(final String serviceAddr)\n  throws IOException {\n    LOG.trace(\"Connecting to HistoryServer at: \" + serviceAddr);\n    Configuration myConf \u003d new Configuration(conf);\n    //TODO This should ideally be using it\u0027s own class (instead of ClientRMSecurityInfo)\n    myConf.setClass(YarnConfiguration.YARN_SECURITY_INFO,\n        ClientRMSecurityInfo.class, SecurityInfo.class);\n    YarnRPC rpc \u003d YarnRPC.create(myConf);\n    realProxy \u003d (MRClientProtocol) rpc.getProxy(MRClientProtocol.class,\n        NetUtils.createSocketAddr(serviceAddr), myConf);\n    LOG.trace(\"Connected to HistoryServer at: \" + serviceAddr);\n  }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ClientServiceDelegate.java"
    }
  }
}