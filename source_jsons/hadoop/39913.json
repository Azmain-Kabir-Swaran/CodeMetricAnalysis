{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "InMemoryConfigurationStore.java",
  "functionName": "confirmMutation",
  "functionId": "confirmMutation___pendingMutation-LogMutation__isValid-boolean",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/conf/InMemoryConfigurationStore.java",
  "functionStartLine": 56,
  "functionEndLine": 68,
  "numCommitsSeen": 23,
  "timeTaken": 7356,
  "changeHistory": [
    "1c51f36be79924489ca4a2e5ca7e96ac75a6ec18",
    "be901f49628a553cfe6a3942478cb528cce2b266",
    "fb1ecff6a26875c7f2b86ef07d7b9145c469377e",
    "4510970e2f7728d036c750b596985e5ffa357b60",
    "ff39c0de206a4fce1f0e8a416357a7a8261f8634",
    "d8a5136b1f3761166a08969eda7a7f66d1578d7e",
    "e3579a8c3b1dc58a38859b189973be5a2d23f730"
  ],
  "changeHistoryShort": {
    "1c51f36be79924489ca4a2e5ca7e96ac75a6ec18": "Ymultichange(Yparameterchange,Ybodychange)",
    "be901f49628a553cfe6a3942478cb528cce2b266": "Ybodychange",
    "fb1ecff6a26875c7f2b86ef07d7b9145c469377e": "Ybodychange",
    "4510970e2f7728d036c750b596985e5ffa357b60": "Ybodychange",
    "ff39c0de206a4fce1f0e8a416357a7a8261f8634": "Ymultichange(Yparameterchange,Yreturntypechange,Ymodifierchange,Ybodychange)",
    "d8a5136b1f3761166a08969eda7a7f66d1578d7e": "Ybodychange",
    "e3579a8c3b1dc58a38859b189973be5a2d23f730": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1c51f36be79924489ca4a2e5ca7e96ac75a6ec18": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-9788. Queue Management API does not support parallel updates. Contributed by Prabhu Joseph\n",
      "commitDate": "14/01/20 3:26 AM",
      "commitName": "1c51f36be79924489ca4a2e5ca7e96ac75a6ec18",
      "commitAuthor": "Szilard Nemeth",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-9788. Queue Management API does not support parallel updates. Contributed by Prabhu Joseph\n",
          "commitDate": "14/01/20 3:26 AM",
          "commitName": "1c51f36be79924489ca4a2e5ca7e96ac75a6ec18",
          "commitAuthor": "Szilard Nemeth",
          "commitDateOld": "09/10/19 3:23 AM",
          "commitNameOld": "be901f49628a553cfe6a3942478cb528cce2b266",
          "commitAuthorOld": "Sunil G",
          "daysBetweenCommits": 97.04,
          "commitsBetweenForRepo": 357,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,13 @@\n-  public void confirmMutation(boolean isValid) {\n+  public void confirmMutation(LogMutation pendingMutation, boolean isValid) {\n     if (isValid) {\n       for (Map.Entry\u003cString, String\u003e kv : pendingMutation.getUpdates()\n           .entrySet()) {\n         if (kv.getValue() \u003d\u003d null) {\n           schedConf.unset(kv.getKey());\n         } else {\n           schedConf.set(kv.getKey(), kv.getValue());\n         }\n       }\n       this.configVersion \u003d this.configVersion + 1L;\n     }\n-    pendingMutation \u003d null;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void confirmMutation(LogMutation pendingMutation, boolean isValid) {\n    if (isValid) {\n      for (Map.Entry\u003cString, String\u003e kv : pendingMutation.getUpdates()\n          .entrySet()) {\n        if (kv.getValue() \u003d\u003d null) {\n          schedConf.unset(kv.getKey());\n        } else {\n          schedConf.set(kv.getKey(), kv.getValue());\n        }\n      }\n      this.configVersion \u003d this.configVersion + 1L;\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/conf/InMemoryConfigurationStore.java",
          "extendedDetails": {
            "oldValue": "[isValid-boolean]",
            "newValue": "[pendingMutation-LogMutation, isValid-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-9788. Queue Management API does not support parallel updates. Contributed by Prabhu Joseph\n",
          "commitDate": "14/01/20 3:26 AM",
          "commitName": "1c51f36be79924489ca4a2e5ca7e96ac75a6ec18",
          "commitAuthor": "Szilard Nemeth",
          "commitDateOld": "09/10/19 3:23 AM",
          "commitNameOld": "be901f49628a553cfe6a3942478cb528cce2b266",
          "commitAuthorOld": "Sunil G",
          "daysBetweenCommits": 97.04,
          "commitsBetweenForRepo": 357,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,13 @@\n-  public void confirmMutation(boolean isValid) {\n+  public void confirmMutation(LogMutation pendingMutation, boolean isValid) {\n     if (isValid) {\n       for (Map.Entry\u003cString, String\u003e kv : pendingMutation.getUpdates()\n           .entrySet()) {\n         if (kv.getValue() \u003d\u003d null) {\n           schedConf.unset(kv.getKey());\n         } else {\n           schedConf.set(kv.getKey(), kv.getValue());\n         }\n       }\n       this.configVersion \u003d this.configVersion + 1L;\n     }\n-    pendingMutation \u003d null;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void confirmMutation(LogMutation pendingMutation, boolean isValid) {\n    if (isValid) {\n      for (Map.Entry\u003cString, String\u003e kv : pendingMutation.getUpdates()\n          .entrySet()) {\n        if (kv.getValue() \u003d\u003d null) {\n          schedConf.unset(kv.getKey());\n        } else {\n          schedConf.set(kv.getKey(), kv.getValue());\n        }\n      }\n      this.configVersion \u003d this.configVersion + 1L;\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/conf/InMemoryConfigurationStore.java",
          "extendedDetails": {}
        }
      ]
    },
    "be901f49628a553cfe6a3942478cb528cce2b266": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9873. Mutation API Config Change need to update Version Number. Contributed by Prabhu Joseph\n",
      "commitDate": "09/10/19 3:23 AM",
      "commitName": "be901f49628a553cfe6a3942478cb528cce2b266",
      "commitAuthor": "Sunil G",
      "commitDateOld": "04/10/19 8:45 PM",
      "commitNameOld": "fb1ecff6a26875c7f2b86ef07d7b9145c469377e",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 4.28,
      "commitsBetweenForRepo": 22,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,14 @@\n   public void confirmMutation(boolean isValid) {\n     if (isValid) {\n       for (Map.Entry\u003cString, String\u003e kv : pendingMutation.getUpdates()\n           .entrySet()) {\n         if (kv.getValue() \u003d\u003d null) {\n           schedConf.unset(kv.getKey());\n         } else {\n           schedConf.set(kv.getKey(), kv.getValue());\n         }\n       }\n+      this.configVersion \u003d this.configVersion + 1L;\n     }\n     pendingMutation \u003d null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void confirmMutation(boolean isValid) {\n    if (isValid) {\n      for (Map.Entry\u003cString, String\u003e kv : pendingMutation.getUpdates()\n          .entrySet()) {\n        if (kv.getValue() \u003d\u003d null) {\n          schedConf.unset(kv.getKey());\n        } else {\n          schedConf.set(kv.getKey(), kv.getValue());\n        }\n      }\n      this.configVersion \u003d this.configVersion + 1L;\n    }\n    pendingMutation \u003d null;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/conf/InMemoryConfigurationStore.java",
      "extendedDetails": {}
    },
    "fb1ecff6a26875c7f2b86ef07d7b9145c469377e": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"YARN-9873. Mutation API Config Change updates Version Number. Contributed by Prabhu Joseph\"\n\nThis reverts commit 4510970e2f7728d036c750b596985e5ffa357b60.\n",
      "commitDate": "04/10/19 8:45 PM",
      "commitName": "fb1ecff6a26875c7f2b86ef07d7b9145c469377e",
      "commitAuthor": "Sunil G",
      "commitDateOld": "04/10/19 9:19 AM",
      "commitNameOld": "4510970e2f7728d036c750b596985e5ffa357b60",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 0.48,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,13 @@\n   public void confirmMutation(boolean isValid) {\n     if (isValid) {\n       for (Map.Entry\u003cString, String\u003e kv : pendingMutation.getUpdates()\n           .entrySet()) {\n         if (kv.getValue() \u003d\u003d null) {\n           schedConf.unset(kv.getKey());\n         } else {\n           schedConf.set(kv.getKey(), kv.getValue());\n         }\n       }\n     }\n-    this.configVersion \u003d System.currentTimeMillis();\n     pendingMutation \u003d null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void confirmMutation(boolean isValid) {\n    if (isValid) {\n      for (Map.Entry\u003cString, String\u003e kv : pendingMutation.getUpdates()\n          .entrySet()) {\n        if (kv.getValue() \u003d\u003d null) {\n          schedConf.unset(kv.getKey());\n        } else {\n          schedConf.set(kv.getKey(), kv.getValue());\n        }\n      }\n    }\n    pendingMutation \u003d null;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/conf/InMemoryConfigurationStore.java",
      "extendedDetails": {}
    },
    "4510970e2f7728d036c750b596985e5ffa357b60": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9873. Mutation API Config Change updates Version Number. Contributed by Prabhu Joseph\n",
      "commitDate": "04/10/19 9:19 AM",
      "commitName": "4510970e2f7728d036c750b596985e5ffa357b60",
      "commitAuthor": "Sunil G",
      "commitDateOld": "30/09/19 8:38 PM",
      "commitNameOld": "137546a78a45adbfb5ef338c1c2984a97b3cecc2",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 3.53,
      "commitsBetweenForRepo": 53,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,14 @@\n   public void confirmMutation(boolean isValid) {\n     if (isValid) {\n       for (Map.Entry\u003cString, String\u003e kv : pendingMutation.getUpdates()\n           .entrySet()) {\n         if (kv.getValue() \u003d\u003d null) {\n           schedConf.unset(kv.getKey());\n         } else {\n           schedConf.set(kv.getKey(), kv.getValue());\n         }\n       }\n     }\n+    this.configVersion \u003d System.currentTimeMillis();\n     pendingMutation \u003d null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void confirmMutation(boolean isValid) {\n    if (isValid) {\n      for (Map.Entry\u003cString, String\u003e kv : pendingMutation.getUpdates()\n          .entrySet()) {\n        if (kv.getValue() \u003d\u003d null) {\n          schedConf.unset(kv.getKey());\n        } else {\n          schedConf.set(kv.getKey(), kv.getValue());\n        }\n      }\n    }\n    this.configVersion \u003d System.currentTimeMillis();\n    pendingMutation \u003d null;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/conf/InMemoryConfigurationStore.java",
      "extendedDetails": {}
    },
    "ff39c0de206a4fce1f0e8a416357a7a8261f8634": {
      "type": "Ymultichange(Yparameterchange,Yreturntypechange,Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-6840. Implement zookeeper based store for scheduler configuration updates. (Jonathan Hung via wangda)\n\nChange-Id: I9debea674fe8c7e4109d4ca136965a1ea4c48bcc\n",
      "commitDate": "09/10/17 11:11 AM",
      "commitName": "ff39c0de206a4fce1f0e8a416357a7a8261f8634",
      "commitAuthor": "Wangda Tan",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-6840. Implement zookeeper based store for scheduler configuration updates. (Jonathan Hung via wangda)\n\nChange-Id: I9debea674fe8c7e4109d4ca136965a1ea4c48bcc\n",
          "commitDate": "09/10/17 11:11 AM",
          "commitName": "ff39c0de206a4fce1f0e8a416357a7a8261f8634",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "09/10/17 11:11 AM",
          "commitNameOld": "4d8abd84f40a6124e7b05b34c14b4035309623ef",
          "commitAuthorOld": "Xuan",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,13 @@\n-  public synchronized boolean confirmMutation(long id, boolean isValid) {\n-    LogMutation mutation \u003d pendingMutations.poll();\n-    // If confirmMutation is called out of order, discard mutations until id\n-    // is reached.\n-    while (mutation !\u003d null) {\n-      if (mutation.getId() \u003d\u003d id) {\n-        if (isValid) {\n-          Map\u003cString, String\u003e mutations \u003d mutation.getUpdates();\n-          for (Map.Entry\u003cString, String\u003e kv : mutations.entrySet()) {\n-            if (kv.getValue() \u003d\u003d null) {\n-              schedConf.unset(kv.getKey());\n-            } else {\n-              schedConf.set(kv.getKey(), kv.getValue());\n-            }\n-          }\n+  public void confirmMutation(boolean isValid) {\n+    if (isValid) {\n+      for (Map.Entry\u003cString, String\u003e kv : pendingMutation.getUpdates()\n+          .entrySet()) {\n+        if (kv.getValue() \u003d\u003d null) {\n+          schedConf.unset(kv.getKey());\n+        } else {\n+          schedConf.set(kv.getKey(), kv.getValue());\n         }\n-        return true;\n       }\n-      mutation \u003d pendingMutations.poll();\n     }\n-    return false;\n+    pendingMutation \u003d null;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void confirmMutation(boolean isValid) {\n    if (isValid) {\n      for (Map.Entry\u003cString, String\u003e kv : pendingMutation.getUpdates()\n          .entrySet()) {\n        if (kv.getValue() \u003d\u003d null) {\n          schedConf.unset(kv.getKey());\n        } else {\n          schedConf.set(kv.getKey(), kv.getValue());\n        }\n      }\n    }\n    pendingMutation \u003d null;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/conf/InMemoryConfigurationStore.java",
          "extendedDetails": {
            "oldValue": "[id-long, isValid-boolean]",
            "newValue": "[isValid-boolean]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "YARN-6840. Implement zookeeper based store for scheduler configuration updates. (Jonathan Hung via wangda)\n\nChange-Id: I9debea674fe8c7e4109d4ca136965a1ea4c48bcc\n",
          "commitDate": "09/10/17 11:11 AM",
          "commitName": "ff39c0de206a4fce1f0e8a416357a7a8261f8634",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "09/10/17 11:11 AM",
          "commitNameOld": "4d8abd84f40a6124e7b05b34c14b4035309623ef",
          "commitAuthorOld": "Xuan",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,13 @@\n-  public synchronized boolean confirmMutation(long id, boolean isValid) {\n-    LogMutation mutation \u003d pendingMutations.poll();\n-    // If confirmMutation is called out of order, discard mutations until id\n-    // is reached.\n-    while (mutation !\u003d null) {\n-      if (mutation.getId() \u003d\u003d id) {\n-        if (isValid) {\n-          Map\u003cString, String\u003e mutations \u003d mutation.getUpdates();\n-          for (Map.Entry\u003cString, String\u003e kv : mutations.entrySet()) {\n-            if (kv.getValue() \u003d\u003d null) {\n-              schedConf.unset(kv.getKey());\n-            } else {\n-              schedConf.set(kv.getKey(), kv.getValue());\n-            }\n-          }\n+  public void confirmMutation(boolean isValid) {\n+    if (isValid) {\n+      for (Map.Entry\u003cString, String\u003e kv : pendingMutation.getUpdates()\n+          .entrySet()) {\n+        if (kv.getValue() \u003d\u003d null) {\n+          schedConf.unset(kv.getKey());\n+        } else {\n+          schedConf.set(kv.getKey(), kv.getValue());\n         }\n-        return true;\n       }\n-      mutation \u003d pendingMutations.poll();\n     }\n-    return false;\n+    pendingMutation \u003d null;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void confirmMutation(boolean isValid) {\n    if (isValid) {\n      for (Map.Entry\u003cString, String\u003e kv : pendingMutation.getUpdates()\n          .entrySet()) {\n        if (kv.getValue() \u003d\u003d null) {\n          schedConf.unset(kv.getKey());\n        } else {\n          schedConf.set(kv.getKey(), kv.getValue());\n        }\n      }\n    }\n    pendingMutation \u003d null;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/conf/InMemoryConfigurationStore.java",
          "extendedDetails": {
            "oldValue": "boolean",
            "newValue": "void"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-6840. Implement zookeeper based store for scheduler configuration updates. (Jonathan Hung via wangda)\n\nChange-Id: I9debea674fe8c7e4109d4ca136965a1ea4c48bcc\n",
          "commitDate": "09/10/17 11:11 AM",
          "commitName": "ff39c0de206a4fce1f0e8a416357a7a8261f8634",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "09/10/17 11:11 AM",
          "commitNameOld": "4d8abd84f40a6124e7b05b34c14b4035309623ef",
          "commitAuthorOld": "Xuan",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,13 @@\n-  public synchronized boolean confirmMutation(long id, boolean isValid) {\n-    LogMutation mutation \u003d pendingMutations.poll();\n-    // If confirmMutation is called out of order, discard mutations until id\n-    // is reached.\n-    while (mutation !\u003d null) {\n-      if (mutation.getId() \u003d\u003d id) {\n-        if (isValid) {\n-          Map\u003cString, String\u003e mutations \u003d mutation.getUpdates();\n-          for (Map.Entry\u003cString, String\u003e kv : mutations.entrySet()) {\n-            if (kv.getValue() \u003d\u003d null) {\n-              schedConf.unset(kv.getKey());\n-            } else {\n-              schedConf.set(kv.getKey(), kv.getValue());\n-            }\n-          }\n+  public void confirmMutation(boolean isValid) {\n+    if (isValid) {\n+      for (Map.Entry\u003cString, String\u003e kv : pendingMutation.getUpdates()\n+          .entrySet()) {\n+        if (kv.getValue() \u003d\u003d null) {\n+          schedConf.unset(kv.getKey());\n+        } else {\n+          schedConf.set(kv.getKey(), kv.getValue());\n         }\n-        return true;\n       }\n-      mutation \u003d pendingMutations.poll();\n     }\n-    return false;\n+    pendingMutation \u003d null;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void confirmMutation(boolean isValid) {\n    if (isValid) {\n      for (Map.Entry\u003cString, String\u003e kv : pendingMutation.getUpdates()\n          .entrySet()) {\n        if (kv.getValue() \u003d\u003d null) {\n          schedConf.unset(kv.getKey());\n        } else {\n          schedConf.set(kv.getKey(), kv.getValue());\n        }\n      }\n    }\n    pendingMutation \u003d null;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/conf/InMemoryConfigurationStore.java",
          "extendedDetails": {
            "oldValue": "[public, synchronized]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-6840. Implement zookeeper based store for scheduler configuration updates. (Jonathan Hung via wangda)\n\nChange-Id: I9debea674fe8c7e4109d4ca136965a1ea4c48bcc\n",
          "commitDate": "09/10/17 11:11 AM",
          "commitName": "ff39c0de206a4fce1f0e8a416357a7a8261f8634",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "09/10/17 11:11 AM",
          "commitNameOld": "4d8abd84f40a6124e7b05b34c14b4035309623ef",
          "commitAuthorOld": "Xuan",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,13 @@\n-  public synchronized boolean confirmMutation(long id, boolean isValid) {\n-    LogMutation mutation \u003d pendingMutations.poll();\n-    // If confirmMutation is called out of order, discard mutations until id\n-    // is reached.\n-    while (mutation !\u003d null) {\n-      if (mutation.getId() \u003d\u003d id) {\n-        if (isValid) {\n-          Map\u003cString, String\u003e mutations \u003d mutation.getUpdates();\n-          for (Map.Entry\u003cString, String\u003e kv : mutations.entrySet()) {\n-            if (kv.getValue() \u003d\u003d null) {\n-              schedConf.unset(kv.getKey());\n-            } else {\n-              schedConf.set(kv.getKey(), kv.getValue());\n-            }\n-          }\n+  public void confirmMutation(boolean isValid) {\n+    if (isValid) {\n+      for (Map.Entry\u003cString, String\u003e kv : pendingMutation.getUpdates()\n+          .entrySet()) {\n+        if (kv.getValue() \u003d\u003d null) {\n+          schedConf.unset(kv.getKey());\n+        } else {\n+          schedConf.set(kv.getKey(), kv.getValue());\n         }\n-        return true;\n       }\n-      mutation \u003d pendingMutations.poll();\n     }\n-    return false;\n+    pendingMutation \u003d null;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void confirmMutation(boolean isValid) {\n    if (isValid) {\n      for (Map.Entry\u003cString, String\u003e kv : pendingMutation.getUpdates()\n          .entrySet()) {\n        if (kv.getValue() \u003d\u003d null) {\n          schedConf.unset(kv.getKey());\n        } else {\n          schedConf.set(kv.getKey(), kv.getValue());\n        }\n      }\n    }\n    pendingMutation \u003d null;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/conf/InMemoryConfigurationStore.java",
          "extendedDetails": {}
        }
      ]
    },
    "d8a5136b1f3761166a08969eda7a7f66d1578d7e": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5952. Create REST API for changing YARN scheduler configurations. (Jonathan Hung via wangda)\n",
      "commitDate": "09/10/17 11:11 AM",
      "commitName": "d8a5136b1f3761166a08969eda7a7f66d1578d7e",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "09/10/17 11:11 AM",
      "commitNameOld": "e3579a8c3b1dc58a38859b189973be5a2d23f730",
      "commitAuthorOld": "Xuan",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,22 @@\n   public synchronized boolean confirmMutation(long id, boolean isValid) {\n     LogMutation mutation \u003d pendingMutations.poll();\n     // If confirmMutation is called out of order, discard mutations until id\n     // is reached.\n     while (mutation !\u003d null) {\n       if (mutation.getId() \u003d\u003d id) {\n         if (isValid) {\n           Map\u003cString, String\u003e mutations \u003d mutation.getUpdates();\n           for (Map.Entry\u003cString, String\u003e kv : mutations.entrySet()) {\n-            schedConf.set(kv.getKey(), kv.getValue());\n+            if (kv.getValue() \u003d\u003d null) {\n+              schedConf.unset(kv.getKey());\n+            } else {\n+              schedConf.set(kv.getKey(), kv.getValue());\n+            }\n           }\n         }\n         return true;\n       }\n       mutation \u003d pendingMutations.poll();\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized boolean confirmMutation(long id, boolean isValid) {\n    LogMutation mutation \u003d pendingMutations.poll();\n    // If confirmMutation is called out of order, discard mutations until id\n    // is reached.\n    while (mutation !\u003d null) {\n      if (mutation.getId() \u003d\u003d id) {\n        if (isValid) {\n          Map\u003cString, String\u003e mutations \u003d mutation.getUpdates();\n          for (Map.Entry\u003cString, String\u003e kv : mutations.entrySet()) {\n            if (kv.getValue() \u003d\u003d null) {\n              schedConf.unset(kv.getKey());\n            } else {\n              schedConf.set(kv.getKey(), kv.getValue());\n            }\n          }\n        }\n        return true;\n      }\n      mutation \u003d pendingMutations.poll();\n    }\n    return false;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/conf/InMemoryConfigurationStore.java",
      "extendedDetails": {}
    },
    "e3579a8c3b1dc58a38859b189973be5a2d23f730": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5946: Create YarnConfigurationStore interface and\nInMemoryConfigurationStore class. Contributed by Jonathan Hung\n",
      "commitDate": "09/10/17 11:11 AM",
      "commitName": "e3579a8c3b1dc58a38859b189973be5a2d23f730",
      "commitAuthor": "Xuan",
      "diff": "@@ -0,0 +1,18 @@\n+  public synchronized boolean confirmMutation(long id, boolean isValid) {\n+    LogMutation mutation \u003d pendingMutations.poll();\n+    // If confirmMutation is called out of order, discard mutations until id\n+    // is reached.\n+    while (mutation !\u003d null) {\n+      if (mutation.getId() \u003d\u003d id) {\n+        if (isValid) {\n+          Map\u003cString, String\u003e mutations \u003d mutation.getUpdates();\n+          for (Map.Entry\u003cString, String\u003e kv : mutations.entrySet()) {\n+            schedConf.set(kv.getKey(), kv.getValue());\n+          }\n+        }\n+        return true;\n+      }\n+      mutation \u003d pendingMutations.poll();\n+    }\n+    return false;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized boolean confirmMutation(long id, boolean isValid) {\n    LogMutation mutation \u003d pendingMutations.poll();\n    // If confirmMutation is called out of order, discard mutations until id\n    // is reached.\n    while (mutation !\u003d null) {\n      if (mutation.getId() \u003d\u003d id) {\n        if (isValid) {\n          Map\u003cString, String\u003e mutations \u003d mutation.getUpdates();\n          for (Map.Entry\u003cString, String\u003e kv : mutations.entrySet()) {\n            schedConf.set(kv.getKey(), kv.getValue());\n          }\n        }\n        return true;\n      }\n      mutation \u003d pendingMutations.poll();\n    }\n    return false;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/conf/InMemoryConfigurationStore.java"
    }
  }
}