{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ExitUtil.java",
  "functionName": "halt",
  "functionId": "halt___ee-HaltException",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ExitUtil.java",
  "functionStartLine": 229,
  "functionEndLine": 249,
  "numCommitsSeen": 22,
  "timeTaken": 1916,
  "changeHistory": [
    "373bb4931fb392e3ca6bfd78992887e5a405e186",
    "52cbb906d9530c870d9886fb99ad4b1b39df2199"
  ],
  "changeHistoryShort": {
    "373bb4931fb392e3ca6bfd78992887e5a405e186": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
    "52cbb906d9530c870d9886fb99ad4b1b39df2199": "Yintroduced"
  },
  "changeHistoryDetails": {
    "373bb4931fb392e3ca6bfd78992887e5a405e186": {
      "type": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-679. Add an entry point that can start any Yarn service. Contributed by Steve Loughran.\n",
      "commitDate": "28/04/17 10:45 AM",
      "commitName": "373bb4931fb392e3ca6bfd78992887e5a405e186",
      "commitAuthor": "Junping Du",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-679. Add an entry point that can start any Yarn service. Contributed by Steve Loughran.\n",
          "commitDate": "28/04/17 10:45 AM",
          "commitName": "373bb4931fb392e3ca6bfd78992887e5a405e186",
          "commitAuthor": "Junping Du",
          "commitDateOld": "23/05/13 3:21 PM",
          "commitNameOld": "52cbb906d9530c870d9886fb99ad4b1b39df2199",
          "commitAuthorOld": "Jonathan Turner Eagles",
          "daysBetweenCommits": 1435.81,
          "commitsBetweenForRepo": 10442,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,21 @@\n-  public static void halt(int status, String msg) throws HaltException {\n-    LOG.info(\"Halt with status \" + status + \" Message: \" + msg);\n+  public static synchronized void halt(HaltException ee) throws HaltException {\n+    int status \u003d ee.getExitCode();\n+    String msg \u003d ee.getMessage();\n+    try {\n+      if (status !\u003d 0) {\n+        //exit indicates a problem, log it\n+        LOG.debug(\"Halt with status {}: {}\", status, msg, ee);\n+        LOG.info(\"Halt with status {}: {}\", status, msg, msg);\n+      }\n+    } catch (Exception ignored) {\n+      // ignore exceptions here, as it may be due to an out of memory situation\n+    }\n     if (systemHaltDisabled) {\n-      HaltException ee \u003d new HaltException(status, msg);\n-      LOG.fatal(\"Halt called\", ee);\n-      if (null \u003d\u003d firstHaltException) {\n+      LOG.error(\"Halt called\", ee);\n+      if (!haltCalled()) {\n         firstHaltException \u003d ee;\n       }\n       throw ee;\n     }\n     Runtime.getRuntime().halt(status);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static synchronized void halt(HaltException ee) throws HaltException {\n    int status \u003d ee.getExitCode();\n    String msg \u003d ee.getMessage();\n    try {\n      if (status !\u003d 0) {\n        //exit indicates a problem, log it\n        LOG.debug(\"Halt with status {}: {}\", status, msg, ee);\n        LOG.info(\"Halt with status {}: {}\", status, msg, msg);\n      }\n    } catch (Exception ignored) {\n      // ignore exceptions here, as it may be due to an out of memory situation\n    }\n    if (systemHaltDisabled) {\n      LOG.error(\"Halt called\", ee);\n      if (!haltCalled()) {\n        firstHaltException \u003d ee;\n      }\n      throw ee;\n    }\n    Runtime.getRuntime().halt(status);\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ExitUtil.java",
          "extendedDetails": {
            "oldValue": "[status-int, msg-String]",
            "newValue": "[ee-HaltException]"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-679. Add an entry point that can start any Yarn service. Contributed by Steve Loughran.\n",
          "commitDate": "28/04/17 10:45 AM",
          "commitName": "373bb4931fb392e3ca6bfd78992887e5a405e186",
          "commitAuthor": "Junping Du",
          "commitDateOld": "23/05/13 3:21 PM",
          "commitNameOld": "52cbb906d9530c870d9886fb99ad4b1b39df2199",
          "commitAuthorOld": "Jonathan Turner Eagles",
          "daysBetweenCommits": 1435.81,
          "commitsBetweenForRepo": 10442,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,21 @@\n-  public static void halt(int status, String msg) throws HaltException {\n-    LOG.info(\"Halt with status \" + status + \" Message: \" + msg);\n+  public static synchronized void halt(HaltException ee) throws HaltException {\n+    int status \u003d ee.getExitCode();\n+    String msg \u003d ee.getMessage();\n+    try {\n+      if (status !\u003d 0) {\n+        //exit indicates a problem, log it\n+        LOG.debug(\"Halt with status {}: {}\", status, msg, ee);\n+        LOG.info(\"Halt with status {}: {}\", status, msg, msg);\n+      }\n+    } catch (Exception ignored) {\n+      // ignore exceptions here, as it may be due to an out of memory situation\n+    }\n     if (systemHaltDisabled) {\n-      HaltException ee \u003d new HaltException(status, msg);\n-      LOG.fatal(\"Halt called\", ee);\n-      if (null \u003d\u003d firstHaltException) {\n+      LOG.error(\"Halt called\", ee);\n+      if (!haltCalled()) {\n         firstHaltException \u003d ee;\n       }\n       throw ee;\n     }\n     Runtime.getRuntime().halt(status);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static synchronized void halt(HaltException ee) throws HaltException {\n    int status \u003d ee.getExitCode();\n    String msg \u003d ee.getMessage();\n    try {\n      if (status !\u003d 0) {\n        //exit indicates a problem, log it\n        LOG.debug(\"Halt with status {}: {}\", status, msg, ee);\n        LOG.info(\"Halt with status {}: {}\", status, msg, msg);\n      }\n    } catch (Exception ignored) {\n      // ignore exceptions here, as it may be due to an out of memory situation\n    }\n    if (systemHaltDisabled) {\n      LOG.error(\"Halt called\", ee);\n      if (!haltCalled()) {\n        firstHaltException \u003d ee;\n      }\n      throw ee;\n    }\n    Runtime.getRuntime().halt(status);\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ExitUtil.java",
          "extendedDetails": {
            "oldValue": "[public, static]",
            "newValue": "[public, static, synchronized]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-679. Add an entry point that can start any Yarn service. Contributed by Steve Loughran.\n",
          "commitDate": "28/04/17 10:45 AM",
          "commitName": "373bb4931fb392e3ca6bfd78992887e5a405e186",
          "commitAuthor": "Junping Du",
          "commitDateOld": "23/05/13 3:21 PM",
          "commitNameOld": "52cbb906d9530c870d9886fb99ad4b1b39df2199",
          "commitAuthorOld": "Jonathan Turner Eagles",
          "daysBetweenCommits": 1435.81,
          "commitsBetweenForRepo": 10442,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,21 @@\n-  public static void halt(int status, String msg) throws HaltException {\n-    LOG.info(\"Halt with status \" + status + \" Message: \" + msg);\n+  public static synchronized void halt(HaltException ee) throws HaltException {\n+    int status \u003d ee.getExitCode();\n+    String msg \u003d ee.getMessage();\n+    try {\n+      if (status !\u003d 0) {\n+        //exit indicates a problem, log it\n+        LOG.debug(\"Halt with status {}: {}\", status, msg, ee);\n+        LOG.info(\"Halt with status {}: {}\", status, msg, msg);\n+      }\n+    } catch (Exception ignored) {\n+      // ignore exceptions here, as it may be due to an out of memory situation\n+    }\n     if (systemHaltDisabled) {\n-      HaltException ee \u003d new HaltException(status, msg);\n-      LOG.fatal(\"Halt called\", ee);\n-      if (null \u003d\u003d firstHaltException) {\n+      LOG.error(\"Halt called\", ee);\n+      if (!haltCalled()) {\n         firstHaltException \u003d ee;\n       }\n       throw ee;\n     }\n     Runtime.getRuntime().halt(status);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static synchronized void halt(HaltException ee) throws HaltException {\n    int status \u003d ee.getExitCode();\n    String msg \u003d ee.getMessage();\n    try {\n      if (status !\u003d 0) {\n        //exit indicates a problem, log it\n        LOG.debug(\"Halt with status {}: {}\", status, msg, ee);\n        LOG.info(\"Halt with status {}: {}\", status, msg, msg);\n      }\n    } catch (Exception ignored) {\n      // ignore exceptions here, as it may be due to an out of memory situation\n    }\n    if (systemHaltDisabled) {\n      LOG.error(\"Halt called\", ee);\n      if (!haltCalled()) {\n        firstHaltException \u003d ee;\n      }\n      throw ee;\n    }\n    Runtime.getRuntime().halt(status);\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ExitUtil.java",
          "extendedDetails": {}
        }
      ]
    },
    "52cbb906d9530c870d9886fb99ad4b1b39df2199": {
      "type": "Yintroduced",
      "commitMessage": "YARN-548. Add tests for YarnUncaughtExceptionHandler (Vadim Bondarev via jeagles)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1485877 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/05/13 3:21 PM",
      "commitName": "52cbb906d9530c870d9886fb99ad4b1b39df2199",
      "commitAuthor": "Jonathan Turner Eagles",
      "diff": "@@ -0,0 +1,12 @@\n+  public static void halt(int status, String msg) throws HaltException {\n+    LOG.info(\"Halt with status \" + status + \" Message: \" + msg);\n+    if (systemHaltDisabled) {\n+      HaltException ee \u003d new HaltException(status, msg);\n+      LOG.fatal(\"Halt called\", ee);\n+      if (null \u003d\u003d firstHaltException) {\n+        firstHaltException \u003d ee;\n+      }\n+      throw ee;\n+    }\n+    Runtime.getRuntime().halt(status);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static void halt(int status, String msg) throws HaltException {\n    LOG.info(\"Halt with status \" + status + \" Message: \" + msg);\n    if (systemHaltDisabled) {\n      HaltException ee \u003d new HaltException(status, msg);\n      LOG.fatal(\"Halt called\", ee);\n      if (null \u003d\u003d firstHaltException) {\n        firstHaltException \u003d ee;\n      }\n      throw ee;\n    }\n    Runtime.getRuntime().halt(status);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ExitUtil.java"
    }
  }
}