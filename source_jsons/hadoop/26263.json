{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SimpleExponentialTaskRuntimeEstimator.java",
  "functionName": "incorporateReading",
  "functionId": "incorporateReading___attemptID-TaskAttemptId(modifiers-final)__newRawData-float(modifiers-final)__newTimeStamp-long(modifiers-final)",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/speculate/SimpleExponentialTaskRuntimeEstimator.java",
  "functionStartLine": 88,
  "functionEndLine": 105,
  "numCommitsSeen": 3,
  "timeTaken": 1450,
  "changeHistory": [
    "cdd6efd3ab6917e30b4c5c7b261f61838901bb37",
    "ed302f1fed6d124d682486d24dae958946dba9be"
  ],
  "changeHistoryShort": {
    "cdd6efd3ab6917e30b4c5c7b261f61838901bb37": "Yparametermetachange",
    "ed302f1fed6d124d682486d24dae958946dba9be": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cdd6efd3ab6917e30b4c5c7b261f61838901bb37": {
      "type": "Yparametermetachange",
      "commitMessage": "MAPREDUCE-7252. Handling 0 progress in SimpleExponential task runtime estimator\n\nSigned-off-by: Jonathan Eagles \u003cjeagles@gmail.com\u003e\n",
      "commitDate": "08/01/20 9:08 AM",
      "commitName": "cdd6efd3ab6917e30b4c5c7b261f61838901bb37",
      "commitAuthor": "Ahmed Hussein",
      "commitDateOld": "05/11/19 12:55 PM",
      "commitNameOld": "ed302f1fed6d124d682486d24dae958946dba9be",
      "commitAuthorOld": "Ahmed Hussein",
      "daysBetweenCommits": 63.84,
      "commitsBetweenForRepo": 225,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n-  private void incorporateReading(TaskAttemptId attemptID,\n-      float newRawData, long newTimeStamp) {\n+  private void incorporateReading(final TaskAttemptId attemptID,\n+      final float newRawData, final long newTimeStamp) {\n     SimpleExponentialSmoothing foreCastEntry \u003d getForecastEntry(attemptID);\n     if (foreCastEntry \u003d\u003d null) {\n       Long tStartTime \u003d startTimes.get(attemptID);\n       // skip if the startTime is not set yet\n-      if(tStartTime \u003d\u003d null) {\n+      if (tStartTime \u003d\u003d null) {\n         return;\n       }\n       estimates.putIfAbsent(attemptID,\n           new AtomicReference\u003c\u003e(SimpleExponentialSmoothing.createForecast(\n               constTime, skipCount, stagnatedWindow,\n               tStartTime)));\n       incorporateReading(attemptID, newRawData, newTimeStamp);\n       return;\n     }\n     foreCastEntry.incorporateReading(newTimeStamp, newRawData);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void incorporateReading(final TaskAttemptId attemptID,\n      final float newRawData, final long newTimeStamp) {\n    SimpleExponentialSmoothing foreCastEntry \u003d getForecastEntry(attemptID);\n    if (foreCastEntry \u003d\u003d null) {\n      Long tStartTime \u003d startTimes.get(attemptID);\n      // skip if the startTime is not set yet\n      if (tStartTime \u003d\u003d null) {\n        return;\n      }\n      estimates.putIfAbsent(attemptID,\n          new AtomicReference\u003c\u003e(SimpleExponentialSmoothing.createForecast(\n              constTime, skipCount, stagnatedWindow,\n              tStartTime)));\n      incorporateReading(attemptID, newRawData, newTimeStamp);\n      return;\n    }\n    foreCastEntry.incorporateReading(newTimeStamp, newRawData);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/speculate/SimpleExponentialTaskRuntimeEstimator.java",
      "extendedDetails": {
        "oldValue": "[attemptID-TaskAttemptId, newRawData-float, newTimeStamp-long]",
        "newValue": "[attemptID-TaskAttemptId(modifiers-final), newRawData-float(modifiers-final), newTimeStamp-long(modifiers-final)]"
      }
    },
    "ed302f1fed6d124d682486d24dae958946dba9be": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-7208. Tuning TaskRuntimeEstimator. (Ahmed Hussein via jeagles)\n\nSigned-off-by: Jonathan Eagles \u003cjeagles@gmail.com\u003e\n",
      "commitDate": "05/11/19 12:55 PM",
      "commitName": "ed302f1fed6d124d682486d24dae958946dba9be",
      "commitAuthor": "Ahmed Hussein",
      "diff": "@@ -0,0 +1,18 @@\n+  private void incorporateReading(TaskAttemptId attemptID,\n+      float newRawData, long newTimeStamp) {\n+    SimpleExponentialSmoothing foreCastEntry \u003d getForecastEntry(attemptID);\n+    if (foreCastEntry \u003d\u003d null) {\n+      Long tStartTime \u003d startTimes.get(attemptID);\n+      // skip if the startTime is not set yet\n+      if(tStartTime \u003d\u003d null) {\n+        return;\n+      }\n+      estimates.putIfAbsent(attemptID,\n+          new AtomicReference\u003c\u003e(SimpleExponentialSmoothing.createForecast(\n+              constTime, skipCount, stagnatedWindow,\n+              tStartTime)));\n+      incorporateReading(attemptID, newRawData, newTimeStamp);\n+      return;\n+    }\n+    foreCastEntry.incorporateReading(newTimeStamp, newRawData);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void incorporateReading(TaskAttemptId attemptID,\n      float newRawData, long newTimeStamp) {\n    SimpleExponentialSmoothing foreCastEntry \u003d getForecastEntry(attemptID);\n    if (foreCastEntry \u003d\u003d null) {\n      Long tStartTime \u003d startTimes.get(attemptID);\n      // skip if the startTime is not set yet\n      if(tStartTime \u003d\u003d null) {\n        return;\n      }\n      estimates.putIfAbsent(attemptID,\n          new AtomicReference\u003c\u003e(SimpleExponentialSmoothing.createForecast(\n              constTime, skipCount, stagnatedWindow,\n              tStartTime)));\n      incorporateReading(attemptID, newRawData, newTimeStamp);\n      return;\n    }\n    foreCastEntry.incorporateReading(newTimeStamp, newRawData);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/speculate/SimpleExponentialTaskRuntimeEstimator.java"
    }
  }
}