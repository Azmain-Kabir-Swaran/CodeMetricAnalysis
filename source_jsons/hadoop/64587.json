{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "S3AFileSystem.java",
  "functionName": "createObjectAttributes",
  "functionId": "createObjectAttributes___fileStatus-S3AFileStatus(modifiers-final)",
  "sourceFilePath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java",
  "functionStartLine": 1504,
  "functionEndLine": 1507,
  "numCommitsSeen": 355,
  "timeTaken": 5913,
  "changeHistory": [
    "e02eb24e0a9139418120027b694492e0738df20a",
    "a36274d69947648dbe82721220cc5240ec5d396d",
    "f365957c6326f88734bc0a5d01cfb7eac713db20"
  ],
  "changeHistoryShort": {
    "e02eb24e0a9139418120027b694492e0738df20a": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
    "a36274d69947648dbe82721220cc5240ec5d396d": "Ymultichange(Yparameterchange,Ybodychange)",
    "f365957c6326f88734bc0a5d01cfb7eac713db20": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e02eb24e0a9139418120027b694492e0738df20a": {
      "type": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
      "commitMessage": "HADOOP-15183. S3Guard store becomes inconsistent after partial failure of rename.\n\nContributed by Steve Loughran.\n\nChange-Id: I825b0bc36be960475d2d259b1cdab45ae1bb78eb\n",
      "commitDate": "20/06/19 1:56 AM",
      "commitName": "e02eb24e0a9139418120027b694492e0738df20a",
      "commitAuthor": "Steve Loughran",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-15183. S3Guard store becomes inconsistent after partial failure of rename.\n\nContributed by Steve Loughran.\n\nChange-Id: I825b0bc36be960475d2d259b1cdab45ae1bb78eb\n",
          "commitDate": "20/06/19 1:56 AM",
          "commitName": "e02eb24e0a9139418120027b694492e0738df20a",
          "commitAuthor": "Steve Loughran",
          "commitDateOld": "16/06/19 9:05 AM",
          "commitNameOld": "f9cc9e162175444efe9d5b07ecb9a795f750ca3c",
          "commitAuthorOld": "Gabor Bota",
          "daysBetweenCommits": 3.7,
          "commitsBetweenForRepo": 44,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,3 @@\n-  private S3ObjectAttributes createObjectAttributes(\n-      final Path f,\n-      final String eTag,\n-      final String versionId) {\n-    return new S3ObjectAttributes(bucket,\n-        pathToKey(f),\n-        getServerSideEncryptionAlgorithm(),\n-        encryptionSecrets.getEncryptionKey(),\n-        eTag,\n-        versionId);\n-  }\n\\ No newline at end of file\n+    public S3ObjectAttributes createObjectAttributes(final S3AFileStatus fileStatus) {\n+      return S3AFileSystem.this.createObjectAttributes(fileStatus);\n+    }\n\\ No newline at end of file\n",
          "actualSource": "    public S3ObjectAttributes createObjectAttributes(final S3AFileStatus fileStatus) {\n      return S3AFileSystem.this.createObjectAttributes(fileStatus);\n    }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java",
          "extendedDetails": {
            "oldValue": "[f-Path(modifiers-final), eTag-String(modifiers-final), versionId-String(modifiers-final)]",
            "newValue": "[fileStatus-S3AFileStatus(modifiers-final)]"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HADOOP-15183. S3Guard store becomes inconsistent after partial failure of rename.\n\nContributed by Steve Loughran.\n\nChange-Id: I825b0bc36be960475d2d259b1cdab45ae1bb78eb\n",
          "commitDate": "20/06/19 1:56 AM",
          "commitName": "e02eb24e0a9139418120027b694492e0738df20a",
          "commitAuthor": "Steve Loughran",
          "commitDateOld": "16/06/19 9:05 AM",
          "commitNameOld": "f9cc9e162175444efe9d5b07ecb9a795f750ca3c",
          "commitAuthorOld": "Gabor Bota",
          "daysBetweenCommits": 3.7,
          "commitsBetweenForRepo": 44,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,3 @@\n-  private S3ObjectAttributes createObjectAttributes(\n-      final Path f,\n-      final String eTag,\n-      final String versionId) {\n-    return new S3ObjectAttributes(bucket,\n-        pathToKey(f),\n-        getServerSideEncryptionAlgorithm(),\n-        encryptionSecrets.getEncryptionKey(),\n-        eTag,\n-        versionId);\n-  }\n\\ No newline at end of file\n+    public S3ObjectAttributes createObjectAttributes(final S3AFileStatus fileStatus) {\n+      return S3AFileSystem.this.createObjectAttributes(fileStatus);\n+    }\n\\ No newline at end of file\n",
          "actualSource": "    public S3ObjectAttributes createObjectAttributes(final S3AFileStatus fileStatus) {\n      return S3AFileSystem.this.createObjectAttributes(fileStatus);\n    }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-15183. S3Guard store becomes inconsistent after partial failure of rename.\n\nContributed by Steve Loughran.\n\nChange-Id: I825b0bc36be960475d2d259b1cdab45ae1bb78eb\n",
          "commitDate": "20/06/19 1:56 AM",
          "commitName": "e02eb24e0a9139418120027b694492e0738df20a",
          "commitAuthor": "Steve Loughran",
          "commitDateOld": "16/06/19 9:05 AM",
          "commitNameOld": "f9cc9e162175444efe9d5b07ecb9a795f750ca3c",
          "commitAuthorOld": "Gabor Bota",
          "daysBetweenCommits": 3.7,
          "commitsBetweenForRepo": 44,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,3 @@\n-  private S3ObjectAttributes createObjectAttributes(\n-      final Path f,\n-      final String eTag,\n-      final String versionId) {\n-    return new S3ObjectAttributes(bucket,\n-        pathToKey(f),\n-        getServerSideEncryptionAlgorithm(),\n-        encryptionSecrets.getEncryptionKey(),\n-        eTag,\n-        versionId);\n-  }\n\\ No newline at end of file\n+    public S3ObjectAttributes createObjectAttributes(final S3AFileStatus fileStatus) {\n+      return S3AFileSystem.this.createObjectAttributes(fileStatus);\n+    }\n\\ No newline at end of file\n",
          "actualSource": "    public S3ObjectAttributes createObjectAttributes(final S3AFileStatus fileStatus) {\n      return S3AFileSystem.this.createObjectAttributes(fileStatus);\n    }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java",
          "extendedDetails": {}
        }
      ]
    },
    "a36274d69947648dbe82721220cc5240ec5d396d": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-16085. S3Guard: use object version or etags to protect against inconsistent read after replace/overwrite.\n\nContributed by Ben Roling.\n\nS3Guard will now track the etag of uploaded files and, if an S3\nbucket is versioned, the object version.\n\nYou can then control how to react to a mismatch between the data\nin the DynamoDB table and that in the store: warn, fail, or, when\nusing versions, return the original value.\n\nThis adds two new columns to the table: etag and version.\nThis is transparent to older S3A clients -but when such clients\nadd/update data to the S3Guard table, they will not add these values.\nAs a result, the etag/version checks will not work with files uploaded by older clients.\n\nFor a consistent experience, upgrade all clients to use the latest hadoop version.\n",
      "commitDate": "19/05/19 2:29 PM",
      "commitName": "a36274d69947648dbe82721220cc5240ec5d396d",
      "commitAuthor": "Ben Roling",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-16085. S3Guard: use object version or etags to protect against inconsistent read after replace/overwrite.\n\nContributed by Ben Roling.\n\nS3Guard will now track the etag of uploaded files and, if an S3\nbucket is versioned, the object version.\n\nYou can then control how to react to a mismatch between the data\nin the DynamoDB table and that in the store: warn, fail, or, when\nusing versions, return the original value.\n\nThis adds two new columns to the table: etag and version.\nThis is transparent to older S3A clients -but when such clients\nadd/update data to the S3Guard table, they will not add these values.\nAs a result, the etag/version checks will not work with files uploaded by older clients.\n\nFor a consistent experience, upgrade all clients to use the latest hadoop version.\n",
          "commitDate": "19/05/19 2:29 PM",
          "commitName": "a36274d69947648dbe82721220cc5240ec5d396d",
          "commitAuthor": "Ben Roling",
          "commitDateOld": "30/04/19 3:53 AM",
          "commitNameOld": "0af4011580878566213016af0c32633eabd15100",
          "commitAuthorOld": "Ben Roling",
          "daysBetweenCommits": 19.44,
          "commitsBetweenForRepo": 90,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,11 @@\n-  private S3ObjectAttributes createObjectAttributes(final Path f) {\n+  private S3ObjectAttributes createObjectAttributes(\n+      final Path f,\n+      final String eTag,\n+      final String versionId) {\n     return new S3ObjectAttributes(bucket,\n         pathToKey(f),\n         getServerSideEncryptionAlgorithm(),\n-        encryptionSecrets.getEncryptionKey());\n+        encryptionSecrets.getEncryptionKey(),\n+        eTag,\n+        versionId);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private S3ObjectAttributes createObjectAttributes(\n      final Path f,\n      final String eTag,\n      final String versionId) {\n    return new S3ObjectAttributes(bucket,\n        pathToKey(f),\n        getServerSideEncryptionAlgorithm(),\n        encryptionSecrets.getEncryptionKey(),\n        eTag,\n        versionId);\n  }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java",
          "extendedDetails": {
            "oldValue": "[f-Path(modifiers-final)]",
            "newValue": "[f-Path(modifiers-final), eTag-String(modifiers-final), versionId-String(modifiers-final)]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-16085. S3Guard: use object version or etags to protect against inconsistent read after replace/overwrite.\n\nContributed by Ben Roling.\n\nS3Guard will now track the etag of uploaded files and, if an S3\nbucket is versioned, the object version.\n\nYou can then control how to react to a mismatch between the data\nin the DynamoDB table and that in the store: warn, fail, or, when\nusing versions, return the original value.\n\nThis adds two new columns to the table: etag and version.\nThis is transparent to older S3A clients -but when such clients\nadd/update data to the S3Guard table, they will not add these values.\nAs a result, the etag/version checks will not work with files uploaded by older clients.\n\nFor a consistent experience, upgrade all clients to use the latest hadoop version.\n",
          "commitDate": "19/05/19 2:29 PM",
          "commitName": "a36274d69947648dbe82721220cc5240ec5d396d",
          "commitAuthor": "Ben Roling",
          "commitDateOld": "30/04/19 3:53 AM",
          "commitNameOld": "0af4011580878566213016af0c32633eabd15100",
          "commitAuthorOld": "Ben Roling",
          "daysBetweenCommits": 19.44,
          "commitsBetweenForRepo": 90,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,11 @@\n-  private S3ObjectAttributes createObjectAttributes(final Path f) {\n+  private S3ObjectAttributes createObjectAttributes(\n+      final Path f,\n+      final String eTag,\n+      final String versionId) {\n     return new S3ObjectAttributes(bucket,\n         pathToKey(f),\n         getServerSideEncryptionAlgorithm(),\n-        encryptionSecrets.getEncryptionKey());\n+        encryptionSecrets.getEncryptionKey(),\n+        eTag,\n+        versionId);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private S3ObjectAttributes createObjectAttributes(\n      final Path f,\n      final String eTag,\n      final String versionId) {\n    return new S3ObjectAttributes(bucket,\n        pathToKey(f),\n        getServerSideEncryptionAlgorithm(),\n        encryptionSecrets.getEncryptionKey(),\n        eTag,\n        versionId);\n  }",
          "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java",
          "extendedDetails": {}
        }
      ]
    },
    "f365957c6326f88734bc0a5d01cfb7eac713db20": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-15229. Add FileSystem builder-based openFile() API to match createFile();\nS3A to implement S3 Select through this API.\n\nThe new openFile() API is asynchronous, and implemented across FileSystem and FileContext.\n\nThe MapReduce V2 inputs are moved to this API, and you can actually set must/may\noptions to pass in.\n\nThis is more useful for setting things like s3a seek policy than for S3 select,\nas the existing input format/record readers can\u0027t handle S3 select output where\nthe stream is shorter than the file length, and splitting plain text is suboptimal.\nFuture work is needed there.\n\nIn the meantime, any/all filesystem connectors are now free to add their own filesystem-specific\nconfiguration parameters which can be set in jobs and used to set filesystem input stream\noptions (seek policy, retry, encryption secrets, etc).\n\nContributed by Steve Loughran\n",
      "commitDate": "05/02/19 3:51 AM",
      "commitName": "f365957c6326f88734bc0a5d01cfb7eac713db20",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,6 @@\n+  private S3ObjectAttributes createObjectAttributes(final Path f) {\n+    return new S3ObjectAttributes(bucket,\n+        pathToKey(f),\n+        getServerSideEncryptionAlgorithm(),\n+        encryptionSecrets.getEncryptionKey());\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private S3ObjectAttributes createObjectAttributes(final Path f) {\n    return new S3ObjectAttributes(bucket,\n        pathToKey(f),\n        getServerSideEncryptionAlgorithm(),\n        encryptionSecrets.getEncryptionKey());\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java"
    }
  }
}