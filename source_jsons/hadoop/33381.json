{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ContainersMonitorImpl.java",
  "functionName": "onStartMonitoringContainer",
  "functionId": "onStartMonitoringContainer___monitoringEvent-ContainersMonitorEvent__containerId-ContainerId",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/monitor/ContainersMonitorImpl.java",
  "functionStartLine": 1001,
  "functionEndLine": 1011,
  "numCommitsSeen": 66,
  "timeTaken": 3109,
  "changeHistory": [
    "221089760910743eae58eb2cbd5ac86c4ee96a17",
    "9449519a2503c55d9eac8fd7519df28aa0760059",
    "c8172f5f143d2fefafa5a412899ab7cd081b406d"
  ],
  "changeHistoryShort": {
    "221089760910743eae58eb2cbd5ac86c4ee96a17": "Ybodychange",
    "9449519a2503c55d9eac8fd7519df28aa0760059": "Ymodifierchange",
    "c8172f5f143d2fefafa5a412899ab7cd081b406d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "221089760910743eae58eb2cbd5ac86c4ee96a17": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9592. Use Logger format in ContainersMonitorImpl. Contributed by Inigo Goiri.\n",
      "commitDate": "31/05/19 5:35 PM",
      "commitName": "221089760910743eae58eb2cbd5ac86c4ee96a17",
      "commitAuthor": "Giovanni Matteo Fumarola",
      "commitDateOld": "15/03/19 4:20 PM",
      "commitNameOld": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 77.05,
      "commitsBetweenForRepo": 469,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n   private void onStartMonitoringContainer(\n       ContainersMonitorEvent monitoringEvent, ContainerId containerId) {\n     ContainerStartMonitoringEvent startEvent \u003d\n         (ContainerStartMonitoringEvent) monitoringEvent;\n-    LOG.info(\"Starting resource-monitoring for \" + containerId);\n+    LOG.info(\"Starting resource-monitoring for {}\", containerId);\n     updateContainerMetrics(monitoringEvent);\n     trackingContainers.put(containerId,\n         new ProcessTreeInfo(containerId, null, null,\n             startEvent.getVmemLimit(), startEvent.getPmemLimit(),\n             startEvent.getCpuVcores()));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void onStartMonitoringContainer(\n      ContainersMonitorEvent monitoringEvent, ContainerId containerId) {\n    ContainerStartMonitoringEvent startEvent \u003d\n        (ContainerStartMonitoringEvent) monitoringEvent;\n    LOG.info(\"Starting resource-monitoring for {}\", containerId);\n    updateContainerMetrics(monitoringEvent);\n    trackingContainers.put(containerId,\n        new ProcessTreeInfo(containerId, null, null,\n            startEvent.getVmemLimit(), startEvent.getPmemLimit(),\n            startEvent.getCpuVcores()));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/monitor/ContainersMonitorImpl.java",
      "extendedDetails": {}
    },
    "9449519a2503c55d9eac8fd7519df28aa0760059": {
      "type": "Ymodifierchange",
      "commitMessage": "YARN-5776. Checkstyle: MonitoringThread.Run method length is too long (miklos.szegedi@cloudera.com via rkanter)\n",
      "commitDate": "27/10/16 2:36 PM",
      "commitName": "9449519a2503c55d9eac8fd7519df28aa0760059",
      "commitAuthor": "Robert Kanter",
      "commitDateOld": "28/09/16 2:48 AM",
      "commitNameOld": "bc2656f09f857fdbc39da6b060cee453d2dec4dc",
      "commitAuthorOld": "Varun Vasudev",
      "daysBetweenCommits": 29.49,
      "commitsBetweenForRepo": 249,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n-  protected void onStartMonitoringContainer(\n+  private void onStartMonitoringContainer(\n       ContainersMonitorEvent monitoringEvent, ContainerId containerId) {\n     ContainerStartMonitoringEvent startEvent \u003d\n         (ContainerStartMonitoringEvent) monitoringEvent;\n     LOG.info(\"Starting resource-monitoring for \" + containerId);\n     updateContainerMetrics(monitoringEvent);\n     trackingContainers.put(containerId,\n         new ProcessTreeInfo(containerId, null, null,\n             startEvent.getVmemLimit(), startEvent.getPmemLimit(),\n             startEvent.getCpuVcores()));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void onStartMonitoringContainer(\n      ContainersMonitorEvent monitoringEvent, ContainerId containerId) {\n    ContainerStartMonitoringEvent startEvent \u003d\n        (ContainerStartMonitoringEvent) monitoringEvent;\n    LOG.info(\"Starting resource-monitoring for \" + containerId);\n    updateContainerMetrics(monitoringEvent);\n    trackingContainers.put(containerId,\n        new ProcessTreeInfo(containerId, null, null,\n            startEvent.getVmemLimit(), startEvent.getPmemLimit(),\n            startEvent.getCpuVcores()));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/monitor/ContainersMonitorImpl.java",
      "extendedDetails": {
        "oldValue": "[protected]",
        "newValue": "[private]"
      }
    },
    "c8172f5f143d2fefafa5a412899ab7cd081b406d": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2883. Queuing of container requests in the NM. (Konstantinos Karanasos and Arun Suresh via kasha)\n",
      "commitDate": "20/04/16 9:55 AM",
      "commitName": "c8172f5f143d2fefafa5a412899ab7cd081b406d",
      "commitAuthor": "Karthik Kambatla",
      "diff": "@@ -0,0 +1,11 @@\n+  protected void onStartMonitoringContainer(\n+      ContainersMonitorEvent monitoringEvent, ContainerId containerId) {\n+    ContainerStartMonitoringEvent startEvent \u003d\n+        (ContainerStartMonitoringEvent) monitoringEvent;\n+    LOG.info(\"Starting resource-monitoring for \" + containerId);\n+    updateContainerMetrics(monitoringEvent);\n+    trackingContainers.put(containerId,\n+        new ProcessTreeInfo(containerId, null, null,\n+            startEvent.getVmemLimit(), startEvent.getPmemLimit(),\n+            startEvent.getCpuVcores()));\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void onStartMonitoringContainer(\n      ContainersMonitorEvent monitoringEvent, ContainerId containerId) {\n    ContainerStartMonitoringEvent startEvent \u003d\n        (ContainerStartMonitoringEvent) monitoringEvent;\n    LOG.info(\"Starting resource-monitoring for \" + containerId);\n    updateContainerMetrics(monitoringEvent);\n    trackingContainers.put(containerId,\n        new ProcessTreeInfo(containerId, null, null,\n            startEvent.getVmemLimit(), startEvent.getPmemLimit(),\n            startEvent.getCpuVcores()));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/monitor/ContainersMonitorImpl.java"
    }
  }
}