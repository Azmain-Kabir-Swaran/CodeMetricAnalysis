{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AvailableSpaceRackFaultTolerantBlockPlacementPolicy.java",
  "functionName": "initialize",
  "functionId": "initialize___conf-Configuration__stats-FSClusterStats__clusterMap-NetworkTopology__host2datanodeMap-Host2NodesMap",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/AvailableSpaceRackFaultTolerantBlockPlacementPolicy.java",
  "functionStartLine": 50,
  "functionEndLine": 74,
  "numCommitsSeen": 1,
  "timeTaken": 704,
  "changeHistory": [
    "f99fcb26ab9153ac281fa95b97696387a9f3995c"
  ],
  "changeHistoryShort": {
    "f99fcb26ab9153ac281fa95b97696387a9f3995c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f99fcb26ab9153ac281fa95b97696387a9f3995c": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-15288. Add Available Space Rack Fault Tolerant BPP. Contributed by Ayush Saxena.\n",
      "commitDate": "23/05/20 5:59 AM",
      "commitName": "f99fcb26ab9153ac281fa95b97696387a9f3995c",
      "commitAuthor": "Ayush Saxena",
      "diff": "@@ -0,0 +1,25 @@\n+  public void initialize(Configuration conf, FSClusterStats stats,\n+      NetworkTopology clusterMap, Host2NodesMap host2datanodeMap) {\n+    super.initialize(conf, stats, clusterMap, host2datanodeMap);\n+    float balancedPreferencePercent \u003d conf.getFloat(\n+        DFS_NAMENODE_AVAILABLE_SPACE_RACK_FAULT_TOLERANT_BLOCK_PLACEMENT_POLICY_BALANCED_SPACE_PREFERENCE_FRACTION_KEY,\n+        DFS_NAMENODE_AVAILABLE_SPACE_BLOCK_RACK_FAULT_TOLERANT_PLACEMENT_POLICY_BALANCED_SPACE_PREFERENCE_FRACTION_DEFAULT);\n+\n+    LOG.info(\"Available space rack fault tolerant block placement policy \"\n+        + \"initialized: \"\n+        + DFSConfigKeys.DFS_NAMENODE_AVAILABLE_SPACE_RACK_FAULT_TOLERANT_BLOCK_PLACEMENT_POLICY_BALANCED_SPACE_PREFERENCE_FRACTION_KEY\n+        + \" \u003d \" + balancedPreferencePercent);\n+\n+    if (balancedPreferencePercent \u003e 1.0) {\n+      LOG.warn(\"The value of \"\n+          + DFS_NAMENODE_AVAILABLE_SPACE_RACK_FAULT_TOLERANT_BLOCK_PLACEMENT_POLICY_BALANCED_SPACE_PREFERENCE_FRACTION_KEY\n+          + \" is greater than 1.0 but should be in the range 0.0 - 1.0\");\n+    }\n+    if (balancedPreferencePercent \u003c 0.5) {\n+      LOG.warn(\"The value of \"\n+          + DFS_NAMENODE_AVAILABLE_SPACE_RACK_FAULT_TOLERANT_BLOCK_PLACEMENT_POLICY_BALANCED_SPACE_PREFERENCE_FRACTION_KEY\n+          + \" is less than 0.5 so datanodes with more used percent will\"\n+          + \" receive  more block allocations.\");\n+    }\n+    balancedPreference \u003d (int) (100 * balancedPreferencePercent);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void initialize(Configuration conf, FSClusterStats stats,\n      NetworkTopology clusterMap, Host2NodesMap host2datanodeMap) {\n    super.initialize(conf, stats, clusterMap, host2datanodeMap);\n    float balancedPreferencePercent \u003d conf.getFloat(\n        DFS_NAMENODE_AVAILABLE_SPACE_RACK_FAULT_TOLERANT_BLOCK_PLACEMENT_POLICY_BALANCED_SPACE_PREFERENCE_FRACTION_KEY,\n        DFS_NAMENODE_AVAILABLE_SPACE_BLOCK_RACK_FAULT_TOLERANT_PLACEMENT_POLICY_BALANCED_SPACE_PREFERENCE_FRACTION_DEFAULT);\n\n    LOG.info(\"Available space rack fault tolerant block placement policy \"\n        + \"initialized: \"\n        + DFSConfigKeys.DFS_NAMENODE_AVAILABLE_SPACE_RACK_FAULT_TOLERANT_BLOCK_PLACEMENT_POLICY_BALANCED_SPACE_PREFERENCE_FRACTION_KEY\n        + \" \u003d \" + balancedPreferencePercent);\n\n    if (balancedPreferencePercent \u003e 1.0) {\n      LOG.warn(\"The value of \"\n          + DFS_NAMENODE_AVAILABLE_SPACE_RACK_FAULT_TOLERANT_BLOCK_PLACEMENT_POLICY_BALANCED_SPACE_PREFERENCE_FRACTION_KEY\n          + \" is greater than 1.0 but should be in the range 0.0 - 1.0\");\n    }\n    if (balancedPreferencePercent \u003c 0.5) {\n      LOG.warn(\"The value of \"\n          + DFS_NAMENODE_AVAILABLE_SPACE_RACK_FAULT_TOLERANT_BLOCK_PLACEMENT_POLICY_BALANCED_SPACE_PREFERENCE_FRACTION_KEY\n          + \" is less than 0.5 so datanodes with more used percent will\"\n          + \" receive  more block allocations.\");\n    }\n    balancedPreference \u003d (int) (100 * balancedPreferencePercent);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/AvailableSpaceRackFaultTolerantBlockPlacementPolicy.java"
    }
  }
}