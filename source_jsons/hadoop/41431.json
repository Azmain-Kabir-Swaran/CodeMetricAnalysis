{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FairSchedulerConfiguration.java",
  "functionName": "findResource",
  "functionId": "findResource___resourceValues-String[]__resource-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairSchedulerConfiguration.java",
  "functionStartLine": 738,
  "functionEndLine": 749,
  "numCommitsSeen": 91,
  "timeTaken": 5356,
  "changeHistory": [
    "7ab88dbfa6fceaf8fea80eff1b23ed1ac486b393",
    "64411a6ff74ef87756aae12224ff9c25f7e2a143",
    "99292adcefdc6b8f280b8e100605fb39f755c38a",
    "960201b79b9f2ca40f8eadb21a2f9fe37dde2b5d",
    "782971ae7a0247bcf5920e10b434b7e0954dd868",
    "c1b635ed4826b0f9c8574d262dfeb13fa5ceb650"
  ],
  "changeHistoryShort": {
    "7ab88dbfa6fceaf8fea80eff1b23ed1ac486b393": "Ymultichange(Yparameterchange,Ybodychange)",
    "64411a6ff74ef87756aae12224ff9c25f7e2a143": "Ybodychange",
    "99292adcefdc6b8f280b8e100605fb39f755c38a": "Ybodychange",
    "960201b79b9f2ca40f8eadb21a2f9fe37dde2b5d": "Ybodychange",
    "782971ae7a0247bcf5920e10b434b7e0954dd868": "Ybodychange",
    "c1b635ed4826b0f9c8574d262dfeb13fa5ceb650": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7ab88dbfa6fceaf8fea80eff1b23ed1ac486b393": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-7291. Better input parsing for resource in allocation file. Contributed by Zoltan Siegl\n",
      "commitDate": "21/08/19 8:01 AM",
      "commitName": "7ab88dbfa6fceaf8fea80eff1b23ed1ac486b393",
      "commitAuthor": "Szilard Nemeth",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-7291. Better input parsing for resource in allocation file. Contributed by Zoltan Siegl\n",
          "commitDate": "21/08/19 8:01 AM",
          "commitName": "7ab88dbfa6fceaf8fea80eff1b23ed1ac486b393",
          "commitAuthor": "Szilard Nemeth",
          "commitDateOld": "04/03/19 9:10 PM",
          "commitNameOld": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
          "commitAuthorOld": "Prabhu Joseph",
          "daysBetweenCommits": 169.41,
          "commitsBetweenForRepo": 1280,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,12 @@\n-  private static int findResource(String val, String units)\n+  private static int findResource(String[] resourceValues, String resource)\n       throws AllocationConfigurationException {\n-    final Pattern pattern \u003d Pattern.compile(\"(-?\\\\d+)(\\\\.\\\\d*)?\\\\s*\" + units);\n-    Matcher matcher \u003d pattern.matcher(val);\n+    String resourceValue \u003d findResourceFromValues(resourceValues, resource);\n+    final Pattern pattern \u003d Pattern.compile(RESOURCE_VALUE_PATTERN +\n+        resource);\n+    Matcher matcher \u003d pattern.matcher(resourceValue);\n     if (!matcher.find()) {\n-      throw new AllocationConfigurationException(\"Missing resource: \" + units);\n+      throw new AllocationConfigurationException(\"Invalid value of \" +\n+          (resource.equals(\"mb\") ? \"memory\" : resource) + \": \" + resourceValue);\n     }\n     return Integer.parseInt(matcher.group(1));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static int findResource(String[] resourceValues, String resource)\n      throws AllocationConfigurationException {\n    String resourceValue \u003d findResourceFromValues(resourceValues, resource);\n    final Pattern pattern \u003d Pattern.compile(RESOURCE_VALUE_PATTERN +\n        resource);\n    Matcher matcher \u003d pattern.matcher(resourceValue);\n    if (!matcher.find()) {\n      throw new AllocationConfigurationException(\"Invalid value of \" +\n          (resource.equals(\"mb\") ? \"memory\" : resource) + \": \" + resourceValue);\n    }\n    return Integer.parseInt(matcher.group(1));\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairSchedulerConfiguration.java",
          "extendedDetails": {
            "oldValue": "[val-String, units-String]",
            "newValue": "[resourceValues-String[], resource-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7291. Better input parsing for resource in allocation file. Contributed by Zoltan Siegl\n",
          "commitDate": "21/08/19 8:01 AM",
          "commitName": "7ab88dbfa6fceaf8fea80eff1b23ed1ac486b393",
          "commitAuthor": "Szilard Nemeth",
          "commitDateOld": "04/03/19 9:10 PM",
          "commitNameOld": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
          "commitAuthorOld": "Prabhu Joseph",
          "daysBetweenCommits": 169.41,
          "commitsBetweenForRepo": 1280,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,12 @@\n-  private static int findResource(String val, String units)\n+  private static int findResource(String[] resourceValues, String resource)\n       throws AllocationConfigurationException {\n-    final Pattern pattern \u003d Pattern.compile(\"(-?\\\\d+)(\\\\.\\\\d*)?\\\\s*\" + units);\n-    Matcher matcher \u003d pattern.matcher(val);\n+    String resourceValue \u003d findResourceFromValues(resourceValues, resource);\n+    final Pattern pattern \u003d Pattern.compile(RESOURCE_VALUE_PATTERN +\n+        resource);\n+    Matcher matcher \u003d pattern.matcher(resourceValue);\n     if (!matcher.find()) {\n-      throw new AllocationConfigurationException(\"Missing resource: \" + units);\n+      throw new AllocationConfigurationException(\"Invalid value of \" +\n+          (resource.equals(\"mb\") ? \"memory\" : resource) + \": \" + resourceValue);\n     }\n     return Integer.parseInt(matcher.group(1));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static int findResource(String[] resourceValues, String resource)\n      throws AllocationConfigurationException {\n    String resourceValue \u003d findResourceFromValues(resourceValues, resource);\n    final Pattern pattern \u003d Pattern.compile(RESOURCE_VALUE_PATTERN +\n        resource);\n    Matcher matcher \u003d pattern.matcher(resourceValue);\n    if (!matcher.find()) {\n      throw new AllocationConfigurationException(\"Invalid value of \" +\n          (resource.equals(\"mb\") ? \"memory\" : resource) + \": \" + resourceValue);\n    }\n    return Integer.parseInt(matcher.group(1));\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairSchedulerConfiguration.java",
          "extendedDetails": {}
        }
      ]
    },
    "64411a6ff74ef87756aae12224ff9c25f7e2a143": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8738. FairScheduler should not parse negative maxResources or minResources values as positive. (Contributed by Szilard Nemeth)\n",
      "commitDate": "10/12/18 11:06 AM",
      "commitName": "64411a6ff74ef87756aae12224ff9c25f7e2a143",
      "commitAuthor": "Haibo Chen",
      "commitDateOld": "06/07/18 11:03 AM",
      "commitNameOld": "9edc74f64a31450af3c55c0dadf352862e4b359d",
      "commitAuthorOld": "Haibo Chen",
      "daysBetweenCommits": 157.04,
      "commitsBetweenForRepo": 1295,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n   private static int findResource(String val, String units)\n       throws AllocationConfigurationException {\n-    final Pattern pattern \u003d Pattern.compile(\"(\\\\d+)(\\\\.\\\\d*)?\\\\s*\" + units);\n+    final Pattern pattern \u003d Pattern.compile(\"(-?\\\\d+)(\\\\.\\\\d*)?\\\\s*\" + units);\n     Matcher matcher \u003d pattern.matcher(val);\n     if (!matcher.find()) {\n       throw new AllocationConfigurationException(\"Missing resource: \" + units);\n     }\n     return Integer.parseInt(matcher.group(1));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static int findResource(String val, String units)\n      throws AllocationConfigurationException {\n    final Pattern pattern \u003d Pattern.compile(\"(-?\\\\d+)(\\\\.\\\\d*)?\\\\s*\" + units);\n    Matcher matcher \u003d pattern.matcher(val);\n    if (!matcher.find()) {\n      throw new AllocationConfigurationException(\"Missing resource: \" + units);\n    }\n    return Integer.parseInt(matcher.group(1));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairSchedulerConfiguration.java",
      "extendedDetails": {}
    },
    "99292adcefdc6b8f280b8e100605fb39f755c38a": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2162. Add ability in Fair Scheduler to optionally configure maxResources in terms of percentage. (Yufei Gu)\n",
      "commitDate": "05/10/17 11:51 PM",
      "commitName": "99292adcefdc6b8f280b8e100605fb39f755c38a",
      "commitAuthor": "Yufei Gu",
      "commitDateOld": "15/02/17 11:16 PM",
      "commitNameOld": "6c25dbcdc0517a825b92fb16444aa1d3761e160c",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 231.98,
      "commitsBetweenForRepo": 1503,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n   private static int findResource(String val, String units)\n-    throws AllocationConfigurationException {\n-    Pattern pattern \u003d Pattern.compile(\"(\\\\d+)(\\\\.\\\\d*)?\\\\s*\" + units);\n+      throws AllocationConfigurationException {\n+    final Pattern pattern \u003d Pattern.compile(\"(\\\\d+)(\\\\.\\\\d*)?\\\\s*\" + units);\n     Matcher matcher \u003d pattern.matcher(val);\n     if (!matcher.find()) {\n       throw new AllocationConfigurationException(\"Missing resource: \" + units);\n     }\n     return Integer.parseInt(matcher.group(1));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static int findResource(String val, String units)\n      throws AllocationConfigurationException {\n    final Pattern pattern \u003d Pattern.compile(\"(\\\\d+)(\\\\.\\\\d*)?\\\\s*\" + units);\n    Matcher matcher \u003d pattern.matcher(val);\n    if (!matcher.find()) {\n      throw new AllocationConfigurationException(\"Missing resource: \" + units);\n    }\n    return Integer.parseInt(matcher.group(1));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairSchedulerConfiguration.java",
      "extendedDetails": {}
    },
    "960201b79b9f2ca40f8eadb21a2f9fe37dde2b5d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4256. YARN fair scheduler vcores with decimal values. Contributed by Jun Gong\n",
      "commitDate": "22/10/15 12:28 PM",
      "commitName": "960201b79b9f2ca40f8eadb21a2f9fe37dde2b5d",
      "commitAuthor": "Zhihai Xu",
      "commitDateOld": "19/10/15 8:00 PM",
      "commitNameOld": "7e2837f830382835838c82398db6fc9823d612a7",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 2.69,
      "commitsBetweenForRepo": 29,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n   private static int findResource(String val, String units)\n     throws AllocationConfigurationException {\n-    Pattern pattern \u003d Pattern.compile(\"(\\\\d+)\\\\s*\" + units);\n+    Pattern pattern \u003d Pattern.compile(\"(\\\\d+)(\\\\.\\\\d*)?\\\\s*\" + units);\n     Matcher matcher \u003d pattern.matcher(val);\n     if (!matcher.find()) {\n       throw new AllocationConfigurationException(\"Missing resource: \" + units);\n     }\n     return Integer.parseInt(matcher.group(1));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static int findResource(String val, String units)\n    throws AllocationConfigurationException {\n    Pattern pattern \u003d Pattern.compile(\"(\\\\d+)(\\\\.\\\\d*)?\\\\s*\" + units);\n    Matcher matcher \u003d pattern.matcher(val);\n    if (!matcher.find()) {\n      throw new AllocationConfigurationException(\"Missing resource: \" + units);\n    }\n    return Integer.parseInt(matcher.group(1));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairSchedulerConfiguration.java",
      "extendedDetails": {}
    },
    "782971ae7a0247bcf5920e10b434b7e0954dd868": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2742. FairSchedulerConfiguration should allow extra spaces between value and unit. (Wei Yan via kasha)\n",
      "commitDate": "29/10/14 10:24 AM",
      "commitName": "782971ae7a0247bcf5920e10b434b7e0954dd868",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "21/09/14 1:15 PM",
      "commitNameOld": "c50fc92502934aa2a8f84ea2466d4da1e3eace9d",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 37.88,
      "commitsBetweenForRepo": 361,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n   private static int findResource(String val, String units)\n     throws AllocationConfigurationException {\n-    Pattern pattern \u003d Pattern.compile(\"(\\\\d+) ?\" + units);\n+    Pattern pattern \u003d Pattern.compile(\"(\\\\d+)\\\\s*\" + units);\n     Matcher matcher \u003d pattern.matcher(val);\n     if (!matcher.find()) {\n       throw new AllocationConfigurationException(\"Missing resource: \" + units);\n     }\n     return Integer.parseInt(matcher.group(1));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static int findResource(String val, String units)\n    throws AllocationConfigurationException {\n    Pattern pattern \u003d Pattern.compile(\"(\\\\d+)\\\\s*\" + units);\n    Matcher matcher \u003d pattern.matcher(val);\n    if (!matcher.find()) {\n      throw new AllocationConfigurationException(\"Missing resource: \" + units);\n    }\n    return Integer.parseInt(matcher.group(1));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairSchedulerConfiguration.java",
      "extendedDetails": {}
    },
    "c1b635ed4826b0f9c8574d262dfeb13fa5ceb650": {
      "type": "Yintroduced",
      "commitMessage": "YARN-326. Add multi-resource scheduling to the fair scheduler. (sandyr via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1489070 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/06/13 10:33 AM",
      "commitName": "c1b635ed4826b0f9c8574d262dfeb13fa5ceb650",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,9 @@\n+  private static int findResource(String val, String units)\n+    throws AllocationConfigurationException {\n+    Pattern pattern \u003d Pattern.compile(\"(\\\\d+) ?\" + units);\n+    Matcher matcher \u003d pattern.matcher(val);\n+    if (!matcher.find()) {\n+      throw new AllocationConfigurationException(\"Missing resource: \" + units);\n+    }\n+    return Integer.parseInt(matcher.group(1));\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static int findResource(String val, String units)\n    throws AllocationConfigurationException {\n    Pattern pattern \u003d Pattern.compile(\"(\\\\d+) ?\" + units);\n    Matcher matcher \u003d pattern.matcher(val);\n    if (!matcher.find()) {\n      throw new AllocationConfigurationException(\"Missing resource: \" + units);\n    }\n    return Integer.parseInt(matcher.group(1));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairSchedulerConfiguration.java"
    }
  }
}