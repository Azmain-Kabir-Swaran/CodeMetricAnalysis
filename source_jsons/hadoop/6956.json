{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSDirectory.java",
  "functionName": "updateCount",
  "functionId": "updateCount___iip-INodesInPath__nsDelta-long__ssDelta-long__oldRep-short__newRep-short__checkQuota-boolean",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
  "functionStartLine": 1001,
  "functionEndLine": 1011,
  "numCommitsSeen": 784,
  "timeTaken": 8381,
  "changeHistory": [
    "f2231cebcddc80f0b753c4a7cb45ee4040846951",
    "5dae97a584d30cef3e34141edfaca49c4ec57913",
    "5776a41da08af653206bb94d7c76c9c4dcce059a",
    "a4e0ff5e052abad498595ee198b49c5310c9ec0d",
    "fe328621d4a84ae99efcb6394a910009b4e1761f"
  ],
  "changeHistoryShort": {
    "f2231cebcddc80f0b753c4a7cb45ee4040846951": "Ymultichange(Yparameterchange,Ybodychange)",
    "5dae97a584d30cef3e34141edfaca49c4ec57913": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
    "5776a41da08af653206bb94d7c76c9c4dcce059a": "Ybodychange",
    "a4e0ff5e052abad498595ee198b49c5310c9ec0d": "Ybodychange",
    "fe328621d4a84ae99efcb6394a910009b4e1761f": "Ybodychange"
  },
  "changeHistoryDetails": {
    "f2231cebcddc80f0b753c4a7cb45ee4040846951": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-7775. Use consistent naming for NN-internal quota related types and functions. (Contributed bu Xiaoyu Yao)\n",
      "commitDate": "13/02/15 9:01 PM",
      "commitName": "f2231cebcddc80f0b753c4a7cb45ee4040846951",
      "commitAuthor": "Arpit Agarwal",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-7775. Use consistent naming for NN-internal quota related types and functions. (Contributed bu Xiaoyu Yao)\n",
          "commitDate": "13/02/15 9:01 PM",
          "commitName": "f2231cebcddc80f0b753c4a7cb45ee4040846951",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "11/02/15 10:41 AM",
          "commitNameOld": "5dae97a584d30cef3e34141edfaca49c4ec57913",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 2.43,
          "commitsBetweenForRepo": 58,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,11 @@\n-  void updateCount(INodesInPath iip, long nsDelta, long dsDelta, short oldRep,\n+  void updateCount(INodesInPath iip, long nsDelta, long ssDelta, short oldRep,\n       short newRep, boolean checkQuota) throws QuotaExceededException {\n     final INodeFile fileINode \u003d iip.getLastINode().asFile();\n     EnumCounters\u003cStorageType\u003e typeSpaceDeltas \u003d\n-        getStorageTypeDeltas(fileINode.getStoragePolicyID(), dsDelta, oldRep, newRep);\n+        getStorageTypeDeltas(fileINode.getStoragePolicyID(), ssDelta, oldRep, newRep);\n     updateCount(iip, iip.length() - 1,\n-        new QuotaCounts.Builder().nameCount(nsDelta).\n-            spaceCount(dsDelta * (newRep - oldRep)).\n-            typeCounts(typeSpaceDeltas).build(),\n+        new QuotaCounts.Builder().nameSpace(nsDelta).\n+            storageSpace(ssDelta * (newRep - oldRep)).\n+            typeSpaces(typeSpaceDeltas).build(),\n         checkQuota);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void updateCount(INodesInPath iip, long nsDelta, long ssDelta, short oldRep,\n      short newRep, boolean checkQuota) throws QuotaExceededException {\n    final INodeFile fileINode \u003d iip.getLastINode().asFile();\n    EnumCounters\u003cStorageType\u003e typeSpaceDeltas \u003d\n        getStorageTypeDeltas(fileINode.getStoragePolicyID(), ssDelta, oldRep, newRep);\n    updateCount(iip, iip.length() - 1,\n        new QuotaCounts.Builder().nameSpace(nsDelta).\n            storageSpace(ssDelta * (newRep - oldRep)).\n            typeSpaces(typeSpaceDeltas).build(),\n        checkQuota);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
          "extendedDetails": {
            "oldValue": "[iip-INodesInPath, nsDelta-long, dsDelta-long, oldRep-short, newRep-short, checkQuota-boolean]",
            "newValue": "[iip-INodesInPath, nsDelta-long, ssDelta-long, oldRep-short, newRep-short, checkQuota-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-7775. Use consistent naming for NN-internal quota related types and functions. (Contributed bu Xiaoyu Yao)\n",
          "commitDate": "13/02/15 9:01 PM",
          "commitName": "f2231cebcddc80f0b753c4a7cb45ee4040846951",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "11/02/15 10:41 AM",
          "commitNameOld": "5dae97a584d30cef3e34141edfaca49c4ec57913",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 2.43,
          "commitsBetweenForRepo": 58,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,11 @@\n-  void updateCount(INodesInPath iip, long nsDelta, long dsDelta, short oldRep,\n+  void updateCount(INodesInPath iip, long nsDelta, long ssDelta, short oldRep,\n       short newRep, boolean checkQuota) throws QuotaExceededException {\n     final INodeFile fileINode \u003d iip.getLastINode().asFile();\n     EnumCounters\u003cStorageType\u003e typeSpaceDeltas \u003d\n-        getStorageTypeDeltas(fileINode.getStoragePolicyID(), dsDelta, oldRep, newRep);\n+        getStorageTypeDeltas(fileINode.getStoragePolicyID(), ssDelta, oldRep, newRep);\n     updateCount(iip, iip.length() - 1,\n-        new QuotaCounts.Builder().nameCount(nsDelta).\n-            spaceCount(dsDelta * (newRep - oldRep)).\n-            typeCounts(typeSpaceDeltas).build(),\n+        new QuotaCounts.Builder().nameSpace(nsDelta).\n+            storageSpace(ssDelta * (newRep - oldRep)).\n+            typeSpaces(typeSpaceDeltas).build(),\n         checkQuota);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void updateCount(INodesInPath iip, long nsDelta, long ssDelta, short oldRep,\n      short newRep, boolean checkQuota) throws QuotaExceededException {\n    final INodeFile fileINode \u003d iip.getLastINode().asFile();\n    EnumCounters\u003cStorageType\u003e typeSpaceDeltas \u003d\n        getStorageTypeDeltas(fileINode.getStoragePolicyID(), ssDelta, oldRep, newRep);\n    updateCount(iip, iip.length() - 1,\n        new QuotaCounts.Builder().nameSpace(nsDelta).\n            storageSpace(ssDelta * (newRep - oldRep)).\n            typeSpaces(typeSpaceDeltas).build(),\n        checkQuota);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
          "extendedDetails": {}
        }
      ]
    },
    "5dae97a584d30cef3e34141edfaca49c4ec57913": {
      "type": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
      "commitMessage": "HDFS-7723. Quota By Storage Type namenode implemenation. (Contributed by Xiaoyu Yao)\n",
      "commitDate": "11/02/15 10:41 AM",
      "commitName": "5dae97a584d30cef3e34141edfaca49c4ec57913",
      "commitAuthor": "Arpit Agarwal",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-7723. Quota By Storage Type namenode implemenation. (Contributed by Xiaoyu Yao)\n",
          "commitDate": "11/02/15 10:41 AM",
          "commitName": "5dae97a584d30cef3e34141edfaca49c4ec57913",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "08/02/15 11:51 AM",
          "commitNameOld": "1382ae525c67bf95d8f3a436b547dbc72cfbb177",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 2.95,
          "commitsBetweenForRepo": 40,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,11 @@\n-  private void updateCount(INodesInPath iip, int numOfINodes, \n-                           long nsDelta, long dsDelta, boolean checkQuota)\n-                           throws QuotaExceededException {\n-    assert hasWriteLock();\n-    if (!namesystem.isImageLoaded()) {\n-      //still initializing. do not check or update quotas.\n-      return;\n-    }\n-    if (numOfINodes \u003e iip.length()) {\n-      numOfINodes \u003d iip.length();\n-    }\n-    if (checkQuota \u0026\u0026 !skipQuotaCheck) {\n-      verifyQuota(iip, numOfINodes, nsDelta, dsDelta, null);\n-    }\n-    unprotectedUpdateCount(iip, numOfINodes, nsDelta, dsDelta);\n+  void updateCount(INodesInPath iip, long nsDelta, long dsDelta, short oldRep,\n+      short newRep, boolean checkQuota) throws QuotaExceededException {\n+    final INodeFile fileINode \u003d iip.getLastINode().asFile();\n+    EnumCounters\u003cStorageType\u003e typeSpaceDeltas \u003d\n+        getStorageTypeDeltas(fileINode.getStoragePolicyID(), dsDelta, oldRep, newRep);\n+    updateCount(iip, iip.length() - 1,\n+        new QuotaCounts.Builder().nameCount(nsDelta).\n+            spaceCount(dsDelta * (newRep - oldRep)).\n+            typeCounts(typeSpaceDeltas).build(),\n+        checkQuota);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void updateCount(INodesInPath iip, long nsDelta, long dsDelta, short oldRep,\n      short newRep, boolean checkQuota) throws QuotaExceededException {\n    final INodeFile fileINode \u003d iip.getLastINode().asFile();\n    EnumCounters\u003cStorageType\u003e typeSpaceDeltas \u003d\n        getStorageTypeDeltas(fileINode.getStoragePolicyID(), dsDelta, oldRep, newRep);\n    updateCount(iip, iip.length() - 1,\n        new QuotaCounts.Builder().nameCount(nsDelta).\n            spaceCount(dsDelta * (newRep - oldRep)).\n            typeCounts(typeSpaceDeltas).build(),\n        checkQuota);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
          "extendedDetails": {
            "oldValue": "[iip-INodesInPath, numOfINodes-int, nsDelta-long, dsDelta-long, checkQuota-boolean]",
            "newValue": "[iip-INodesInPath, nsDelta-long, dsDelta-long, oldRep-short, newRep-short, checkQuota-boolean]"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-7723. Quota By Storage Type namenode implemenation. (Contributed by Xiaoyu Yao)\n",
          "commitDate": "11/02/15 10:41 AM",
          "commitName": "5dae97a584d30cef3e34141edfaca49c4ec57913",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "08/02/15 11:51 AM",
          "commitNameOld": "1382ae525c67bf95d8f3a436b547dbc72cfbb177",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 2.95,
          "commitsBetweenForRepo": 40,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,11 @@\n-  private void updateCount(INodesInPath iip, int numOfINodes, \n-                           long nsDelta, long dsDelta, boolean checkQuota)\n-                           throws QuotaExceededException {\n-    assert hasWriteLock();\n-    if (!namesystem.isImageLoaded()) {\n-      //still initializing. do not check or update quotas.\n-      return;\n-    }\n-    if (numOfINodes \u003e iip.length()) {\n-      numOfINodes \u003d iip.length();\n-    }\n-    if (checkQuota \u0026\u0026 !skipQuotaCheck) {\n-      verifyQuota(iip, numOfINodes, nsDelta, dsDelta, null);\n-    }\n-    unprotectedUpdateCount(iip, numOfINodes, nsDelta, dsDelta);\n+  void updateCount(INodesInPath iip, long nsDelta, long dsDelta, short oldRep,\n+      short newRep, boolean checkQuota) throws QuotaExceededException {\n+    final INodeFile fileINode \u003d iip.getLastINode().asFile();\n+    EnumCounters\u003cStorageType\u003e typeSpaceDeltas \u003d\n+        getStorageTypeDeltas(fileINode.getStoragePolicyID(), dsDelta, oldRep, newRep);\n+    updateCount(iip, iip.length() - 1,\n+        new QuotaCounts.Builder().nameCount(nsDelta).\n+            spaceCount(dsDelta * (newRep - oldRep)).\n+            typeCounts(typeSpaceDeltas).build(),\n+        checkQuota);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void updateCount(INodesInPath iip, long nsDelta, long dsDelta, short oldRep,\n      short newRep, boolean checkQuota) throws QuotaExceededException {\n    final INodeFile fileINode \u003d iip.getLastINode().asFile();\n    EnumCounters\u003cStorageType\u003e typeSpaceDeltas \u003d\n        getStorageTypeDeltas(fileINode.getStoragePolicyID(), dsDelta, oldRep, newRep);\n    updateCount(iip, iip.length() - 1,\n        new QuotaCounts.Builder().nameCount(nsDelta).\n            spaceCount(dsDelta * (newRep - oldRep)).\n            typeCounts(typeSpaceDeltas).build(),\n        checkQuota);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-7723. Quota By Storage Type namenode implemenation. (Contributed by Xiaoyu Yao)\n",
          "commitDate": "11/02/15 10:41 AM",
          "commitName": "5dae97a584d30cef3e34141edfaca49c4ec57913",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "08/02/15 11:51 AM",
          "commitNameOld": "1382ae525c67bf95d8f3a436b547dbc72cfbb177",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 2.95,
          "commitsBetweenForRepo": 40,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,11 @@\n-  private void updateCount(INodesInPath iip, int numOfINodes, \n-                           long nsDelta, long dsDelta, boolean checkQuota)\n-                           throws QuotaExceededException {\n-    assert hasWriteLock();\n-    if (!namesystem.isImageLoaded()) {\n-      //still initializing. do not check or update quotas.\n-      return;\n-    }\n-    if (numOfINodes \u003e iip.length()) {\n-      numOfINodes \u003d iip.length();\n-    }\n-    if (checkQuota \u0026\u0026 !skipQuotaCheck) {\n-      verifyQuota(iip, numOfINodes, nsDelta, dsDelta, null);\n-    }\n-    unprotectedUpdateCount(iip, numOfINodes, nsDelta, dsDelta);\n+  void updateCount(INodesInPath iip, long nsDelta, long dsDelta, short oldRep,\n+      short newRep, boolean checkQuota) throws QuotaExceededException {\n+    final INodeFile fileINode \u003d iip.getLastINode().asFile();\n+    EnumCounters\u003cStorageType\u003e typeSpaceDeltas \u003d\n+        getStorageTypeDeltas(fileINode.getStoragePolicyID(), dsDelta, oldRep, newRep);\n+    updateCount(iip, iip.length() - 1,\n+        new QuotaCounts.Builder().nameCount(nsDelta).\n+            spaceCount(dsDelta * (newRep - oldRep)).\n+            typeCounts(typeSpaceDeltas).build(),\n+        checkQuota);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void updateCount(INodesInPath iip, long nsDelta, long dsDelta, short oldRep,\n      short newRep, boolean checkQuota) throws QuotaExceededException {\n    final INodeFile fileINode \u003d iip.getLastINode().asFile();\n    EnumCounters\u003cStorageType\u003e typeSpaceDeltas \u003d\n        getStorageTypeDeltas(fileINode.getStoragePolicyID(), dsDelta, oldRep, newRep);\n    updateCount(iip, iip.length() - 1,\n        new QuotaCounts.Builder().nameCount(nsDelta).\n            spaceCount(dsDelta * (newRep - oldRep)).\n            typeCounts(typeSpaceDeltas).build(),\n        checkQuota);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
          "extendedDetails": {}
        }
      ]
    },
    "5776a41da08af653206bb94d7c76c9c4dcce059a": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7498. Simplify the logic in INodesInPath. Contributed by Jing Zhao.\n",
      "commitDate": "09/12/14 11:37 AM",
      "commitName": "5776a41da08af653206bb94d7c76c9c4dcce059a",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "08/12/14 11:52 AM",
      "commitNameOld": "6c5bbd7a42d1e8b4416fd8870fd60c67867b35c9",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 0.99,
      "commitsBetweenForRepo": 14,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,16 @@\n   private void updateCount(INodesInPath iip, int numOfINodes, \n                            long nsDelta, long dsDelta, boolean checkQuota)\n                            throws QuotaExceededException {\n     assert hasWriteLock();\n     if (!namesystem.isImageLoaded()) {\n       //still initializing. do not check or update quotas.\n       return;\n     }\n-    final INode[] inodes \u003d iip.getINodes();\n-    if (numOfINodes \u003e inodes.length) {\n-      numOfINodes \u003d inodes.length;\n+    if (numOfINodes \u003e iip.length()) {\n+      numOfINodes \u003d iip.length();\n     }\n     if (checkQuota \u0026\u0026 !skipQuotaCheck) {\n-      verifyQuota(inodes, numOfINodes, nsDelta, dsDelta, null);\n+      verifyQuota(iip, numOfINodes, nsDelta, dsDelta, null);\n     }\n     unprotectedUpdateCount(iip, numOfINodes, nsDelta, dsDelta);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void updateCount(INodesInPath iip, int numOfINodes, \n                           long nsDelta, long dsDelta, boolean checkQuota)\n                           throws QuotaExceededException {\n    assert hasWriteLock();\n    if (!namesystem.isImageLoaded()) {\n      //still initializing. do not check or update quotas.\n      return;\n    }\n    if (numOfINodes \u003e iip.length()) {\n      numOfINodes \u003d iip.length();\n    }\n    if (checkQuota \u0026\u0026 !skipQuotaCheck) {\n      verifyQuota(iip, numOfINodes, nsDelta, dsDelta, null);\n    }\n    unprotectedUpdateCount(iip, numOfINodes, nsDelta, dsDelta);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
      "extendedDetails": {}
    },
    "a4e0ff5e052abad498595ee198b49c5310c9ec0d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6480. Move waitForReady() from FSDirectory to FSNamesystem. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1603705 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/06/14 9:13 PM",
      "commitName": "a4e0ff5e052abad498595ee198b49c5310c9ec0d",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "18/06/14 12:57 PM",
      "commitNameOld": "4cf94aaf809c77b3b7dc925faa39a72d53e4246e",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 0.35,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   private void updateCount(INodesInPath iip, int numOfINodes, \n                            long nsDelta, long dsDelta, boolean checkQuota)\n                            throws QuotaExceededException {\n     assert hasWriteLock();\n-    if (!ready) {\n+    if (!namesystem.isImageLoaded()) {\n       //still initializing. do not check or update quotas.\n       return;\n     }\n     final INode[] inodes \u003d iip.getINodes();\n     if (numOfINodes \u003e inodes.length) {\n       numOfINodes \u003d inodes.length;\n     }\n     if (checkQuota \u0026\u0026 !skipQuotaCheck) {\n       verifyQuota(inodes, numOfINodes, nsDelta, dsDelta, null);\n     }\n     unprotectedUpdateCount(iip, numOfINodes, nsDelta, dsDelta);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void updateCount(INodesInPath iip, int numOfINodes, \n                           long nsDelta, long dsDelta, boolean checkQuota)\n                           throws QuotaExceededException {\n    assert hasWriteLock();\n    if (!namesystem.isImageLoaded()) {\n      //still initializing. do not check or update quotas.\n      return;\n    }\n    final INode[] inodes \u003d iip.getINodes();\n    if (numOfINodes \u003e inodes.length) {\n      numOfINodes \u003d inodes.length;\n    }\n    if (checkQuota \u0026\u0026 !skipQuotaCheck) {\n      verifyQuota(inodes, numOfINodes, nsDelta, dsDelta, null);\n    }\n    unprotectedUpdateCount(iip, numOfINodes, nsDelta, dsDelta);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
      "extendedDetails": {}
    },
    "fe328621d4a84ae99efcb6394a910009b4e1761f": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6191. Disable quota checks when replaying edit log.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1585544 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/04/14 11:25 AM",
      "commitName": "fe328621d4a84ae99efcb6394a910009b4e1761f",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "26/03/14 2:27 PM",
      "commitNameOld": "14556cc5d8fee8f8a846e4f65572828553be386c",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 11.87,
      "commitsBetweenForRepo": 54,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   private void updateCount(INodesInPath iip, int numOfINodes, \n                            long nsDelta, long dsDelta, boolean checkQuota)\n                            throws QuotaExceededException {\n     assert hasWriteLock();\n     if (!ready) {\n       //still initializing. do not check or update quotas.\n       return;\n     }\n     final INode[] inodes \u003d iip.getINodes();\n     if (numOfINodes \u003e inodes.length) {\n       numOfINodes \u003d inodes.length;\n     }\n-    if (checkQuota) {\n+    if (checkQuota \u0026\u0026 !skipQuotaCheck) {\n       verifyQuota(inodes, numOfINodes, nsDelta, dsDelta, null);\n     }\n     unprotectedUpdateCount(iip, numOfINodes, nsDelta, dsDelta);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void updateCount(INodesInPath iip, int numOfINodes, \n                           long nsDelta, long dsDelta, boolean checkQuota)\n                           throws QuotaExceededException {\n    assert hasWriteLock();\n    if (!ready) {\n      //still initializing. do not check or update quotas.\n      return;\n    }\n    final INode[] inodes \u003d iip.getINodes();\n    if (numOfINodes \u003e inodes.length) {\n      numOfINodes \u003d inodes.length;\n    }\n    if (checkQuota \u0026\u0026 !skipQuotaCheck) {\n      verifyQuota(inodes, numOfINodes, nsDelta, dsDelta, null);\n    }\n    unprotectedUpdateCount(iip, numOfINodes, nsDelta, dsDelta);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
      "extendedDetails": {}
    }
  }
}