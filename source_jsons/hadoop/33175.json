{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "IntelFpgaOpenclPlugin.java",
  "functionName": "getMajorAndMinorNumber",
  "functionId": "getMajorAndMinorNumber___devName-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/resourceplugin/fpga/IntelFpgaOpenclPlugin.java",
  "functionStartLine": 160,
  "functionEndLine": 178,
  "numCommitsSeen": 9,
  "timeTaken": 1787,
  "changeHistory": [
    "2064ca015d1584263aac0cc20c60b925a3aff612",
    "8e1539eca8175f58f836daa5b0ad598c890cbb02",
    "7225ec0ceb49ae8f5588484297a20f07ec047420"
  ],
  "changeHistoryShort": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": "Ybodychange",
    "8e1539eca8175f58f836daa5b0ad598c890cbb02": "Ybodychange",
    "7225ec0ceb49ae8f5588484297a20f07ec047420": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9349.  Changed logging to use slf4j api.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "15/03/19 4:20 PM",
      "commitName": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "12/03/19 2:15 PM",
      "commitNameOld": "8e1539eca8175f58f836daa5b0ad598c890cbb02",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 3.09,
      "commitsBetweenForRepo": 33,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n     public String getMajorAndMinorNumber(String devName) {\n       String output \u003d null;\n       Shell.ShellCommandExecutor shexec \u003d new Shell.ShellCommandExecutor(\n           new String[]{\"stat\", \"-c\", \"%t:%T\", \"/dev/\" + devName});\n       try {\n-        LOG.debug(\"Get FPGA major-minor numbers from /dev/\" + devName);\n+        LOG.debug(\"Get FPGA major-minor numbers from /dev/{}\", devName);\n         shexec.execute();\n         String[] strs \u003d shexec.getOutput().trim().split(\":\");\n-        LOG.debug(\"stat output:\" + shexec.getOutput());\n+        LOG.debug(\"stat output:{}\", shexec.getOutput());\n         output \u003d Integer.parseInt(strs[0], 16) + \":\" +\n             Integer.parseInt(strs[1], 16);\n       } catch (IOException e) {\n         LOG.warn(\"Failed to get major-minor number from reading /dev/\" +\n             devName);\n         LOG.warn(\"Command output:\" + shexec.getOutput() + \", exit code: \" +\n             shexec.getExitCode(), e);\n       }\n       return output;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public String getMajorAndMinorNumber(String devName) {\n      String output \u003d null;\n      Shell.ShellCommandExecutor shexec \u003d new Shell.ShellCommandExecutor(\n          new String[]{\"stat\", \"-c\", \"%t:%T\", \"/dev/\" + devName});\n      try {\n        LOG.debug(\"Get FPGA major-minor numbers from /dev/{}\", devName);\n        shexec.execute();\n        String[] strs \u003d shexec.getOutput().trim().split(\":\");\n        LOG.debug(\"stat output:{}\", shexec.getOutput());\n        output \u003d Integer.parseInt(strs[0], 16) + \":\" +\n            Integer.parseInt(strs[1], 16);\n      } catch (IOException e) {\n        LOG.warn(\"Failed to get major-minor number from reading /dev/\" +\n            devName);\n        LOG.warn(\"Command output:\" + shexec.getOutput() + \", exit code: \" +\n            shexec.getExitCode(), e);\n      }\n      return output;\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/resourceplugin/fpga/IntelFpgaOpenclPlugin.java",
      "extendedDetails": {}
    },
    "8e1539eca8175f58f836daa5b0ad598c890cbb02": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9266. General improvements in IntelFpgaOpenclPlugin. Contributed by Peter Bacsko.\n",
      "commitDate": "12/03/19 2:15 PM",
      "commitName": "8e1539eca8175f58f836daa5b0ad598c890cbb02",
      "commitAuthor": "Sunil G",
      "commitDateOld": "08/03/19 4:09 AM",
      "commitNameOld": "de15a66d782094632abd09222b87a01bab8e0f5e",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 4.38,
      "commitsBetweenForRepo": 32,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n     public String getMajorAndMinorNumber(String devName) {\n       String output \u003d null;\n       Shell.ShellCommandExecutor shexec \u003d new Shell.ShellCommandExecutor(\n           new String[]{\"stat\", \"-c\", \"%t:%T\", \"/dev/\" + devName});\n       try {\n         LOG.debug(\"Get FPGA major-minor numbers from /dev/\" + devName);\n         shexec.execute();\n         String[] strs \u003d shexec.getOutput().trim().split(\":\");\n         LOG.debug(\"stat output:\" + shexec.getOutput());\n-        output \u003d Integer.parseInt(strs[0], 16) + \":\" + Integer.parseInt(strs[1], 16);\n+        output \u003d Integer.parseInt(strs[0], 16) + \":\" +\n+            Integer.parseInt(strs[1], 16);\n       } catch (IOException e) {\n-        String msg \u003d\n-            \"Failed to get major-minor number from reading /dev/\" + devName;\n-        LOG.warn(msg);\n-        LOG.debug(\"Command output:\" + shexec.getOutput() + \", exit code:\" +\n-            shexec.getExitCode());\n+        LOG.warn(\"Failed to get major-minor number from reading /dev/\" +\n+            devName);\n+        LOG.warn(\"Command output:\" + shexec.getOutput() + \", exit code: \" +\n+            shexec.getExitCode(), e);\n       }\n       return output;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public String getMajorAndMinorNumber(String devName) {\n      String output \u003d null;\n      Shell.ShellCommandExecutor shexec \u003d new Shell.ShellCommandExecutor(\n          new String[]{\"stat\", \"-c\", \"%t:%T\", \"/dev/\" + devName});\n      try {\n        LOG.debug(\"Get FPGA major-minor numbers from /dev/\" + devName);\n        shexec.execute();\n        String[] strs \u003d shexec.getOutput().trim().split(\":\");\n        LOG.debug(\"stat output:\" + shexec.getOutput());\n        output \u003d Integer.parseInt(strs[0], 16) + \":\" +\n            Integer.parseInt(strs[1], 16);\n      } catch (IOException e) {\n        LOG.warn(\"Failed to get major-minor number from reading /dev/\" +\n            devName);\n        LOG.warn(\"Command output:\" + shexec.getOutput() + \", exit code: \" +\n            shexec.getExitCode(), e);\n      }\n      return output;\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/resourceplugin/fpga/IntelFpgaOpenclPlugin.java",
      "extendedDetails": {}
    },
    "7225ec0ceb49ae8f5588484297a20f07ec047420": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6507. Add support in NodeManager to isolate FPGA devices with CGroups. (Zhankun Tang via wangda)\n\nChange-Id: Ic9afd841805f1035423915a0b0add5f3ba96cf9d\n",
      "commitDate": "01/12/17 10:50 AM",
      "commitName": "7225ec0ceb49ae8f5588484297a20f07ec047420",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,19 @@\n+    public String getMajorAndMinorNumber(String devName) {\n+      String output \u003d null;\n+      Shell.ShellCommandExecutor shexec \u003d new Shell.ShellCommandExecutor(\n+          new String[]{\"stat\", \"-c\", \"%t:%T\", \"/dev/\" + devName});\n+      try {\n+        LOG.debug(\"Get FPGA major-minor numbers from /dev/\" + devName);\n+        shexec.execute();\n+        String[] strs \u003d shexec.getOutput().trim().split(\":\");\n+        LOG.debug(\"stat output:\" + shexec.getOutput());\n+        output \u003d Integer.parseInt(strs[0], 16) + \":\" + Integer.parseInt(strs[1], 16);\n+      } catch (IOException e) {\n+        String msg \u003d\n+            \"Failed to get major-minor number from reading /dev/\" + devName;\n+        LOG.warn(msg);\n+        LOG.debug(\"Command output:\" + shexec.getOutput() + \", exit code:\" +\n+            shexec.getExitCode());\n+      }\n+      return output;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public String getMajorAndMinorNumber(String devName) {\n      String output \u003d null;\n      Shell.ShellCommandExecutor shexec \u003d new Shell.ShellCommandExecutor(\n          new String[]{\"stat\", \"-c\", \"%t:%T\", \"/dev/\" + devName});\n      try {\n        LOG.debug(\"Get FPGA major-minor numbers from /dev/\" + devName);\n        shexec.execute();\n        String[] strs \u003d shexec.getOutput().trim().split(\":\");\n        LOG.debug(\"stat output:\" + shexec.getOutput());\n        output \u003d Integer.parseInt(strs[0], 16) + \":\" + Integer.parseInt(strs[1], 16);\n      } catch (IOException e) {\n        String msg \u003d\n            \"Failed to get major-minor number from reading /dev/\" + devName;\n        LOG.warn(msg);\n        LOG.debug(\"Command output:\" + shexec.getOutput() + \", exit code:\" +\n            shexec.getExitCode());\n      }\n      return output;\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/resourceplugin/fpga/IntelFpgaOpenclPlugin.java"
    }
  }
}