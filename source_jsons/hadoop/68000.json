{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "GlobbedCopyListing.java",
  "functionName": "doBuildListing",
  "functionId": "doBuildListing___pathToListingFile-Path__context-DistCpContext",
  "sourceFilePath": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/GlobbedCopyListing.java",
  "functionStartLine": 67,
  "functionEndLine": 90,
  "numCommitsSeen": 4,
  "timeTaken": 2344,
  "changeHistory": [
    "26172a94d6431e70d7fe15d66be9a7e195f79f60",
    "d06948002fb0cabf72cc0d46bf2fa67d45370f67"
  ],
  "changeHistoryShort": {
    "26172a94d6431e70d7fe15d66be9a7e195f79f60": "Ymultichange(Yparameterchange,Ybodychange)",
    "d06948002fb0cabf72cc0d46bf2fa67d45370f67": "Yintroduced"
  },
  "changeHistoryDetails": {
    "26172a94d6431e70d7fe15d66be9a7e195f79f60": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-14267. Make DistCpOptions immutable. Contributed by Mingliang Liu\n",
      "commitDate": "31/03/17 8:04 PM",
      "commitName": "26172a94d6431e70d7fe15d66be9a7e195f79f60",
      "commitAuthor": "Mingliang Liu",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-14267. Make DistCpOptions immutable. Contributed by Mingliang Liu\n",
          "commitDate": "31/03/17 8:04 PM",
          "commitName": "26172a94d6431e70d7fe15d66be9a7e195f79f60",
          "commitAuthor": "Mingliang Liu",
          "commitDateOld": "25/01/12 10:36 PM",
          "commitNameOld": "d06948002fb0cabf72cc0d46bf2fa67d45370f67",
          "commitAuthorOld": "Mahadev Konar",
          "daysBetweenCommits": 1891.85,
          "commitsBetweenForRepo": 13242,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,24 @@\n-  public void doBuildListing(Path pathToListingFile,\n-                             DistCpOptions options) throws IOException {\n+  public void doBuildListing(Path pathToListingFile, DistCpContext context)\n+      throws IOException {\n \n     List\u003cPath\u003e globbedPaths \u003d new ArrayList\u003cPath\u003e();\n-    if (options.getSourcePaths().isEmpty()) {\n+    if (context.getSourcePaths().isEmpty()) {\n       throw new InvalidInputException(\"Nothing to process. Source paths::EMPTY\");  \n     }\n \n-    for (Path p : options.getSourcePaths()) {\n+    for (Path p : context.getSourcePaths()) {\n       FileSystem fs \u003d p.getFileSystem(getConf());\n       FileStatus[] inputs \u003d fs.globStatus(p);\n \n       if(inputs !\u003d null \u0026\u0026 inputs.length \u003e 0) {\n         for (FileStatus onePath: inputs) {\n           globbedPaths.add(onePath.getPath());\n         }\n       } else {\n         throw new InvalidInputException(p + \" doesn\u0027t exist\");        \n       }\n     }\n \n-    DistCpOptions optionsGlobbed \u003d new DistCpOptions(options);\n-    optionsGlobbed.setSourcePaths(globbedPaths);\n-    simpleListing.buildListing(pathToListingFile, optionsGlobbed);\n+    context.setSourcePaths(globbedPaths);\n+    simpleListing.buildListing(pathToListingFile, context);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void doBuildListing(Path pathToListingFile, DistCpContext context)\n      throws IOException {\n\n    List\u003cPath\u003e globbedPaths \u003d new ArrayList\u003cPath\u003e();\n    if (context.getSourcePaths().isEmpty()) {\n      throw new InvalidInputException(\"Nothing to process. Source paths::EMPTY\");  \n    }\n\n    for (Path p : context.getSourcePaths()) {\n      FileSystem fs \u003d p.getFileSystem(getConf());\n      FileStatus[] inputs \u003d fs.globStatus(p);\n\n      if(inputs !\u003d null \u0026\u0026 inputs.length \u003e 0) {\n        for (FileStatus onePath: inputs) {\n          globbedPaths.add(onePath.getPath());\n        }\n      } else {\n        throw new InvalidInputException(p + \" doesn\u0027t exist\");        \n      }\n    }\n\n    context.setSourcePaths(globbedPaths);\n    simpleListing.buildListing(pathToListingFile, context);\n  }",
          "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/GlobbedCopyListing.java",
          "extendedDetails": {
            "oldValue": "[pathToListingFile-Path, options-DistCpOptions]",
            "newValue": "[pathToListingFile-Path, context-DistCpContext]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-14267. Make DistCpOptions immutable. Contributed by Mingliang Liu\n",
          "commitDate": "31/03/17 8:04 PM",
          "commitName": "26172a94d6431e70d7fe15d66be9a7e195f79f60",
          "commitAuthor": "Mingliang Liu",
          "commitDateOld": "25/01/12 10:36 PM",
          "commitNameOld": "d06948002fb0cabf72cc0d46bf2fa67d45370f67",
          "commitAuthorOld": "Mahadev Konar",
          "daysBetweenCommits": 1891.85,
          "commitsBetweenForRepo": 13242,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,24 @@\n-  public void doBuildListing(Path pathToListingFile,\n-                             DistCpOptions options) throws IOException {\n+  public void doBuildListing(Path pathToListingFile, DistCpContext context)\n+      throws IOException {\n \n     List\u003cPath\u003e globbedPaths \u003d new ArrayList\u003cPath\u003e();\n-    if (options.getSourcePaths().isEmpty()) {\n+    if (context.getSourcePaths().isEmpty()) {\n       throw new InvalidInputException(\"Nothing to process. Source paths::EMPTY\");  \n     }\n \n-    for (Path p : options.getSourcePaths()) {\n+    for (Path p : context.getSourcePaths()) {\n       FileSystem fs \u003d p.getFileSystem(getConf());\n       FileStatus[] inputs \u003d fs.globStatus(p);\n \n       if(inputs !\u003d null \u0026\u0026 inputs.length \u003e 0) {\n         for (FileStatus onePath: inputs) {\n           globbedPaths.add(onePath.getPath());\n         }\n       } else {\n         throw new InvalidInputException(p + \" doesn\u0027t exist\");        \n       }\n     }\n \n-    DistCpOptions optionsGlobbed \u003d new DistCpOptions(options);\n-    optionsGlobbed.setSourcePaths(globbedPaths);\n-    simpleListing.buildListing(pathToListingFile, optionsGlobbed);\n+    context.setSourcePaths(globbedPaths);\n+    simpleListing.buildListing(pathToListingFile, context);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void doBuildListing(Path pathToListingFile, DistCpContext context)\n      throws IOException {\n\n    List\u003cPath\u003e globbedPaths \u003d new ArrayList\u003cPath\u003e();\n    if (context.getSourcePaths().isEmpty()) {\n      throw new InvalidInputException(\"Nothing to process. Source paths::EMPTY\");  \n    }\n\n    for (Path p : context.getSourcePaths()) {\n      FileSystem fs \u003d p.getFileSystem(getConf());\n      FileStatus[] inputs \u003d fs.globStatus(p);\n\n      if(inputs !\u003d null \u0026\u0026 inputs.length \u003e 0) {\n        for (FileStatus onePath: inputs) {\n          globbedPaths.add(onePath.getPath());\n        }\n      } else {\n        throw new InvalidInputException(p + \" doesn\u0027t exist\");        \n      }\n    }\n\n    context.setSourcePaths(globbedPaths);\n    simpleListing.buildListing(pathToListingFile, context);\n  }",
          "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/GlobbedCopyListing.java",
          "extendedDetails": {}
        }
      ]
    },
    "d06948002fb0cabf72cc0d46bf2fa67d45370f67": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-2765. DistCp Rewrite. (Mithun Radhakrishnan via mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1236045 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/01/12 10:36 PM",
      "commitName": "d06948002fb0cabf72cc0d46bf2fa67d45370f67",
      "commitAuthor": "Mahadev Konar",
      "diff": "@@ -0,0 +1,25 @@\n+  public void doBuildListing(Path pathToListingFile,\n+                             DistCpOptions options) throws IOException {\n+\n+    List\u003cPath\u003e globbedPaths \u003d new ArrayList\u003cPath\u003e();\n+    if (options.getSourcePaths().isEmpty()) {\n+      throw new InvalidInputException(\"Nothing to process. Source paths::EMPTY\");  \n+    }\n+\n+    for (Path p : options.getSourcePaths()) {\n+      FileSystem fs \u003d p.getFileSystem(getConf());\n+      FileStatus[] inputs \u003d fs.globStatus(p);\n+\n+      if(inputs !\u003d null \u0026\u0026 inputs.length \u003e 0) {\n+        for (FileStatus onePath: inputs) {\n+          globbedPaths.add(onePath.getPath());\n+        }\n+      } else {\n+        throw new InvalidInputException(p + \" doesn\u0027t exist\");        \n+      }\n+    }\n+\n+    DistCpOptions optionsGlobbed \u003d new DistCpOptions(options);\n+    optionsGlobbed.setSourcePaths(globbedPaths);\n+    simpleListing.buildListing(pathToListingFile, optionsGlobbed);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void doBuildListing(Path pathToListingFile,\n                             DistCpOptions options) throws IOException {\n\n    List\u003cPath\u003e globbedPaths \u003d new ArrayList\u003cPath\u003e();\n    if (options.getSourcePaths().isEmpty()) {\n      throw new InvalidInputException(\"Nothing to process. Source paths::EMPTY\");  \n    }\n\n    for (Path p : options.getSourcePaths()) {\n      FileSystem fs \u003d p.getFileSystem(getConf());\n      FileStatus[] inputs \u003d fs.globStatus(p);\n\n      if(inputs !\u003d null \u0026\u0026 inputs.length \u003e 0) {\n        for (FileStatus onePath: inputs) {\n          globbedPaths.add(onePath.getPath());\n        }\n      } else {\n        throw new InvalidInputException(p + \" doesn\u0027t exist\");        \n      }\n    }\n\n    DistCpOptions optionsGlobbed \u003d new DistCpOptions(options);\n    optionsGlobbed.setSourcePaths(globbedPaths);\n    simpleListing.buildListing(pathToListingFile, optionsGlobbed);\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/GlobbedCopyListing.java"
    }
  }
}