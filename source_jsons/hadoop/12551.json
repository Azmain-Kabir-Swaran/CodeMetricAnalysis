{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Balancer.java",
  "functionName": "chooseStorageGroups",
  "functionId": "chooseStorageGroups___groups-Collection__G____candidates-Collection__C____matcher-Matcher",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java",
  "functionStartLine": 515,
  "functionEndLine": 524,
  "numCommitsSeen": 193,
  "timeTaken": 7490,
  "changeHistory": [
    "b8597e6a10b2e8df1bee4e8ce0c8be345f7e007d",
    "1f4b135b1f9c6aff1dab4fe749126ec814f8387b",
    "1634e980af422c0af2f7c9c7280a77f2fbddc9c0",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "b8597e6a10b2e8df1bee4e8ce0c8be345f7e007d": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
    "1f4b135b1f9c6aff1dab4fe749126ec814f8387b": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
    "1634e980af422c0af2f7c9c7280a77f2fbddc9c0": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b8597e6a10b2e8df1bee4e8ce0c8be345f7e007d": {
      "type": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-6685. Balancer should preserve storage type of replicas.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1615015 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/07/14 6:05 PM",
      "commitName": "b8597e6a10b2e8df1bee4e8ce0c8be345f7e007d",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "HDFS-6685. Balancer should preserve storage type of replicas.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1615015 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "31/07/14 6:05 PM",
          "commitName": "b8597e6a10b2e8df1bee4e8ce0c8be345f7e007d",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "30/07/14 11:02 PM",
          "commitNameOld": "b8b8f3f5e7214d6fcfc30e1b94ff097e52868f4f",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 0.79,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,10 @@\n-      chooseDatanodes(Collection\u003cD\u003e datanodes, Collection\u003cC\u003e candidates,\n+      void chooseStorageGroups(Collection\u003cG\u003e groups, Collection\u003cC\u003e candidates,\n           Matcher matcher) {\n-    for (Iterator\u003cD\u003e i \u003d datanodes.iterator(); i.hasNext();) {\n-      final D datanode \u003d i.next();\n-      for(; chooseForOneDatanode(datanode, candidates, matcher); );\n-      if (!datanode.hasSpaceForScheduling()) {\n+    for(final Iterator\u003cG\u003e i \u003d groups.iterator(); i.hasNext();) {\n+      final G g \u003d i.next();\n+      for(; choose4One(g, candidates, matcher); );\n+      if (!g.hasSpaceForScheduling()) {\n         i.remove();\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "      void chooseStorageGroups(Collection\u003cG\u003e groups, Collection\u003cC\u003e candidates,\n          Matcher matcher) {\n    for(final Iterator\u003cG\u003e i \u003d groups.iterator(); i.hasNext();) {\n      final G g \u003d i.next();\n      for(; choose4One(g, candidates, matcher); );\n      if (!g.hasSpaceForScheduling()) {\n        i.remove();\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java",
          "extendedDetails": {
            "oldValue": "chooseDatanodes",
            "newValue": "chooseStorageGroups"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-6685. Balancer should preserve storage type of replicas.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1615015 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "31/07/14 6:05 PM",
          "commitName": "b8597e6a10b2e8df1bee4e8ce0c8be345f7e007d",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "30/07/14 11:02 PM",
          "commitNameOld": "b8b8f3f5e7214d6fcfc30e1b94ff097e52868f4f",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 0.79,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,10 @@\n-      chooseDatanodes(Collection\u003cD\u003e datanodes, Collection\u003cC\u003e candidates,\n+      void chooseStorageGroups(Collection\u003cG\u003e groups, Collection\u003cC\u003e candidates,\n           Matcher matcher) {\n-    for (Iterator\u003cD\u003e i \u003d datanodes.iterator(); i.hasNext();) {\n-      final D datanode \u003d i.next();\n-      for(; chooseForOneDatanode(datanode, candidates, matcher); );\n-      if (!datanode.hasSpaceForScheduling()) {\n+    for(final Iterator\u003cG\u003e i \u003d groups.iterator(); i.hasNext();) {\n+      final G g \u003d i.next();\n+      for(; choose4One(g, candidates, matcher); );\n+      if (!g.hasSpaceForScheduling()) {\n         i.remove();\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "      void chooseStorageGroups(Collection\u003cG\u003e groups, Collection\u003cC\u003e candidates,\n          Matcher matcher) {\n    for(final Iterator\u003cG\u003e i \u003d groups.iterator(); i.hasNext();) {\n      final G g \u003d i.next();\n      for(; choose4One(g, candidates, matcher); );\n      if (!g.hasSpaceForScheduling()) {\n        i.remove();\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java",
          "extendedDetails": {
            "oldValue": "[datanodes-Collection\u003cD\u003e, candidates-Collection\u003cC\u003e, matcher-Matcher]",
            "newValue": "[groups-Collection\u003cG\u003e, candidates-Collection\u003cC\u003e, matcher-Matcher]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-6685. Balancer should preserve storage type of replicas.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1615015 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "31/07/14 6:05 PM",
          "commitName": "b8597e6a10b2e8df1bee4e8ce0c8be345f7e007d",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "30/07/14 11:02 PM",
          "commitNameOld": "b8b8f3f5e7214d6fcfc30e1b94ff097e52868f4f",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 0.79,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,10 @@\n-      chooseDatanodes(Collection\u003cD\u003e datanodes, Collection\u003cC\u003e candidates,\n+      void chooseStorageGroups(Collection\u003cG\u003e groups, Collection\u003cC\u003e candidates,\n           Matcher matcher) {\n-    for (Iterator\u003cD\u003e i \u003d datanodes.iterator(); i.hasNext();) {\n-      final D datanode \u003d i.next();\n-      for(; chooseForOneDatanode(datanode, candidates, matcher); );\n-      if (!datanode.hasSpaceForScheduling()) {\n+    for(final Iterator\u003cG\u003e i \u003d groups.iterator(); i.hasNext();) {\n+      final G g \u003d i.next();\n+      for(; choose4One(g, candidates, matcher); );\n+      if (!g.hasSpaceForScheduling()) {\n         i.remove();\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "      void chooseStorageGroups(Collection\u003cG\u003e groups, Collection\u003cC\u003e candidates,\n          Matcher matcher) {\n    for(final Iterator\u003cG\u003e i \u003d groups.iterator(); i.hasNext();) {\n      final G g \u003d i.next();\n      for(; choose4One(g, candidates, matcher); );\n      if (!g.hasSpaceForScheduling()) {\n        i.remove();\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java",
          "extendedDetails": {}
        }
      ]
    },
    "1f4b135b1f9c6aff1dab4fe749126ec814f8387b": {
      "type": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-4234. Use generic code for choosing datanode in Balancer.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1417130 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/12/12 11:22 AM",
      "commitName": "1f4b135b1f9c6aff1dab4fe749126ec814f8387b",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "HDFS-4234. Use generic code for choosing datanode in Balancer.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1417130 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "04/12/12 11:22 AM",
          "commitName": "1f4b135b1f9c6aff1dab4fe749126ec814f8387b",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "28/11/12 11:19 AM",
          "commitNameOld": "1634e980af422c0af2f7c9c7280a77f2fbddc9c0",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 6.0,
          "commitsBetweenForRepo": 19,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,10 @@\n-      chooseOnSameNodeGroup(Collection\u003cD\u003e datanodes, Collection\u003cC\u003e candidates) {\n+      chooseDatanodes(Collection\u003cD\u003e datanodes, Collection\u003cC\u003e candidates,\n+          Matcher matcher) {\n     for (Iterator\u003cD\u003e i \u003d datanodes.iterator(); i.hasNext();) {\n       final D datanode \u003d i.next();\n-      for(; chooseOnSameNodeGroup(datanode, candidates.iterator()); );\n-      if (!datanode.isMoveQuotaFull()) {\n+      for(; chooseForOneDatanode(datanode, candidates, matcher); );\n+      if (!datanode.hasSpaceForScheduling()) {\n         i.remove();\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "      chooseDatanodes(Collection\u003cD\u003e datanodes, Collection\u003cC\u003e candidates,\n          Matcher matcher) {\n    for (Iterator\u003cD\u003e i \u003d datanodes.iterator(); i.hasNext();) {\n      final D datanode \u003d i.next();\n      for(; chooseForOneDatanode(datanode, candidates, matcher); );\n      if (!datanode.hasSpaceForScheduling()) {\n        i.remove();\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java",
          "extendedDetails": {
            "oldValue": "chooseOnSameNodeGroup",
            "newValue": "chooseDatanodes"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-4234. Use generic code for choosing datanode in Balancer.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1417130 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "04/12/12 11:22 AM",
          "commitName": "1f4b135b1f9c6aff1dab4fe749126ec814f8387b",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "28/11/12 11:19 AM",
          "commitNameOld": "1634e980af422c0af2f7c9c7280a77f2fbddc9c0",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 6.0,
          "commitsBetweenForRepo": 19,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,10 @@\n-      chooseOnSameNodeGroup(Collection\u003cD\u003e datanodes, Collection\u003cC\u003e candidates) {\n+      chooseDatanodes(Collection\u003cD\u003e datanodes, Collection\u003cC\u003e candidates,\n+          Matcher matcher) {\n     for (Iterator\u003cD\u003e i \u003d datanodes.iterator(); i.hasNext();) {\n       final D datanode \u003d i.next();\n-      for(; chooseOnSameNodeGroup(datanode, candidates.iterator()); );\n-      if (!datanode.isMoveQuotaFull()) {\n+      for(; chooseForOneDatanode(datanode, candidates, matcher); );\n+      if (!datanode.hasSpaceForScheduling()) {\n         i.remove();\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "      chooseDatanodes(Collection\u003cD\u003e datanodes, Collection\u003cC\u003e candidates,\n          Matcher matcher) {\n    for (Iterator\u003cD\u003e i \u003d datanodes.iterator(); i.hasNext();) {\n      final D datanode \u003d i.next();\n      for(; chooseForOneDatanode(datanode, candidates, matcher); );\n      if (!datanode.hasSpaceForScheduling()) {\n        i.remove();\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java",
          "extendedDetails": {
            "oldValue": "[datanodes-Collection\u003cD\u003e, candidates-Collection\u003cC\u003e]",
            "newValue": "[datanodes-Collection\u003cD\u003e, candidates-Collection\u003cC\u003e, matcher-Matcher]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-4234. Use generic code for choosing datanode in Balancer.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1417130 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "04/12/12 11:22 AM",
          "commitName": "1f4b135b1f9c6aff1dab4fe749126ec814f8387b",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "28/11/12 11:19 AM",
          "commitNameOld": "1634e980af422c0af2f7c9c7280a77f2fbddc9c0",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 6.0,
          "commitsBetweenForRepo": 19,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,10 @@\n-      chooseOnSameNodeGroup(Collection\u003cD\u003e datanodes, Collection\u003cC\u003e candidates) {\n+      chooseDatanodes(Collection\u003cD\u003e datanodes, Collection\u003cC\u003e candidates,\n+          Matcher matcher) {\n     for (Iterator\u003cD\u003e i \u003d datanodes.iterator(); i.hasNext();) {\n       final D datanode \u003d i.next();\n-      for(; chooseOnSameNodeGroup(datanode, candidates.iterator()); );\n-      if (!datanode.isMoveQuotaFull()) {\n+      for(; chooseForOneDatanode(datanode, candidates, matcher); );\n+      if (!datanode.hasSpaceForScheduling()) {\n         i.remove();\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "      chooseDatanodes(Collection\u003cD\u003e datanodes, Collection\u003cC\u003e candidates,\n          Matcher matcher) {\n    for (Iterator\u003cD\u003e i \u003d datanodes.iterator(); i.hasNext();) {\n      final D datanode \u003d i.next();\n      for(; chooseForOneDatanode(datanode, candidates, matcher); );\n      if (!datanode.hasSpaceForScheduling()) {\n        i.remove();\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java",
          "extendedDetails": {}
        }
      ]
    },
    "1634e980af422c0af2f7c9c7280a77f2fbddc9c0": {
      "type": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-3495. Update Balancer to support new NetworkTopology with NodeGroup.  Contributed by Junping Du\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1414874 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/11/12 11:19 AM",
      "commitName": "1634e980af422c0af2f7c9c7280a77f2fbddc9c0",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "HDFS-3495. Update Balancer to support new NetworkTopology with NodeGroup.  Contributed by Junping Du\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1414874 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "28/11/12 11:19 AM",
          "commitName": "1634e980af422c0af2f7c9c7280a77f2fbddc9c0",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "14/08/12 5:28 PM",
          "commitNameOld": "28e87740c5797e87a9038d7f151c8b21a5b04592",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 105.79,
          "commitsBetweenForRepo": 628,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,9 @@\n-  private void chooseSources(\n-      Iterator\u003cSource\u003e sourceCandidates, boolean onRackSource) {\n-    for (Iterator\u003cBalancerDatanode\u003e targetIterator \u003d \n-      underUtilizedDatanodes.iterator(); targetIterator.hasNext();) {\n-      BalancerDatanode target \u003d targetIterator.next();\n-      while (chooseSource(target, sourceCandidates, onRackSource)) {\n-      }\n-      if (!target.isMoveQuotaFull()) {\n-        targetIterator.remove();\n+      chooseOnSameNodeGroup(Collection\u003cD\u003e datanodes, Collection\u003cC\u003e candidates) {\n+    for (Iterator\u003cD\u003e i \u003d datanodes.iterator(); i.hasNext();) {\n+      final D datanode \u003d i.next();\n+      for(; chooseOnSameNodeGroup(datanode, candidates.iterator()); );\n+      if (!datanode.isMoveQuotaFull()) {\n+        i.remove();\n       }\n     }\n-    return;\n   }\n\\ No newline at end of file\n",
          "actualSource": "      chooseOnSameNodeGroup(Collection\u003cD\u003e datanodes, Collection\u003cC\u003e candidates) {\n    for (Iterator\u003cD\u003e i \u003d datanodes.iterator(); i.hasNext();) {\n      final D datanode \u003d i.next();\n      for(; chooseOnSameNodeGroup(datanode, candidates.iterator()); );\n      if (!datanode.isMoveQuotaFull()) {\n        i.remove();\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java",
          "extendedDetails": {
            "oldValue": "chooseSources",
            "newValue": "chooseOnSameNodeGroup"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-3495. Update Balancer to support new NetworkTopology with NodeGroup.  Contributed by Junping Du\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1414874 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "28/11/12 11:19 AM",
          "commitName": "1634e980af422c0af2f7c9c7280a77f2fbddc9c0",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "14/08/12 5:28 PM",
          "commitNameOld": "28e87740c5797e87a9038d7f151c8b21a5b04592",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 105.79,
          "commitsBetweenForRepo": 628,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,9 @@\n-  private void chooseSources(\n-      Iterator\u003cSource\u003e sourceCandidates, boolean onRackSource) {\n-    for (Iterator\u003cBalancerDatanode\u003e targetIterator \u003d \n-      underUtilizedDatanodes.iterator(); targetIterator.hasNext();) {\n-      BalancerDatanode target \u003d targetIterator.next();\n-      while (chooseSource(target, sourceCandidates, onRackSource)) {\n-      }\n-      if (!target.isMoveQuotaFull()) {\n-        targetIterator.remove();\n+      chooseOnSameNodeGroup(Collection\u003cD\u003e datanodes, Collection\u003cC\u003e candidates) {\n+    for (Iterator\u003cD\u003e i \u003d datanodes.iterator(); i.hasNext();) {\n+      final D datanode \u003d i.next();\n+      for(; chooseOnSameNodeGroup(datanode, candidates.iterator()); );\n+      if (!datanode.isMoveQuotaFull()) {\n+        i.remove();\n       }\n     }\n-    return;\n   }\n\\ No newline at end of file\n",
          "actualSource": "      chooseOnSameNodeGroup(Collection\u003cD\u003e datanodes, Collection\u003cC\u003e candidates) {\n    for (Iterator\u003cD\u003e i \u003d datanodes.iterator(); i.hasNext();) {\n      final D datanode \u003d i.next();\n      for(; chooseOnSameNodeGroup(datanode, candidates.iterator()); );\n      if (!datanode.isMoveQuotaFull()) {\n        i.remove();\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java",
          "extendedDetails": {
            "oldValue": "[sourceCandidates-Iterator\u003cSource\u003e, onRackSource-boolean]",
            "newValue": "[datanodes-Collection\u003cD\u003e, candidates-Collection\u003cC\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-3495. Update Balancer to support new NetworkTopology with NodeGroup.  Contributed by Junping Du\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1414874 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "28/11/12 11:19 AM",
          "commitName": "1634e980af422c0af2f7c9c7280a77f2fbddc9c0",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "14/08/12 5:28 PM",
          "commitNameOld": "28e87740c5797e87a9038d7f151c8b21a5b04592",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 105.79,
          "commitsBetweenForRepo": 628,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,9 @@\n-  private void chooseSources(\n-      Iterator\u003cSource\u003e sourceCandidates, boolean onRackSource) {\n-    for (Iterator\u003cBalancerDatanode\u003e targetIterator \u003d \n-      underUtilizedDatanodes.iterator(); targetIterator.hasNext();) {\n-      BalancerDatanode target \u003d targetIterator.next();\n-      while (chooseSource(target, sourceCandidates, onRackSource)) {\n-      }\n-      if (!target.isMoveQuotaFull()) {\n-        targetIterator.remove();\n+      chooseOnSameNodeGroup(Collection\u003cD\u003e datanodes, Collection\u003cC\u003e candidates) {\n+    for (Iterator\u003cD\u003e i \u003d datanodes.iterator(); i.hasNext();) {\n+      final D datanode \u003d i.next();\n+      for(; chooseOnSameNodeGroup(datanode, candidates.iterator()); );\n+      if (!datanode.isMoveQuotaFull()) {\n+        i.remove();\n       }\n     }\n-    return;\n   }\n\\ No newline at end of file\n",
          "actualSource": "      chooseOnSameNodeGroup(Collection\u003cD\u003e datanodes, Collection\u003cC\u003e candidates) {\n    for (Iterator\u003cD\u003e i \u003d datanodes.iterator(); i.hasNext();) {\n      final D datanode \u003d i.next();\n      for(; chooseOnSameNodeGroup(datanode, candidates.iterator()); );\n      if (!datanode.isMoveQuotaFull()) {\n        i.remove();\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java",
          "extendedDetails": {}
        }
      ]
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void chooseSources(\n      Iterator\u003cSource\u003e sourceCandidates, boolean onRackSource) {\n    for (Iterator\u003cBalancerDatanode\u003e targetIterator \u003d \n      underUtilizedDatanodes.iterator(); targetIterator.hasNext();) {\n      BalancerDatanode target \u003d targetIterator.next();\n      while (chooseSource(target, sourceCandidates, onRackSource)) {\n      }\n      if (!target.isMoveQuotaFull()) {\n        targetIterator.remove();\n      }\n    }\n    return;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void chooseSources(\n      Iterator\u003cSource\u003e sourceCandidates, boolean onRackSource) {\n    for (Iterator\u003cBalancerDatanode\u003e targetIterator \u003d \n      underUtilizedDatanodes.iterator(); targetIterator.hasNext();) {\n      BalancerDatanode target \u003d targetIterator.next();\n      while (chooseSource(target, sourceCandidates, onRackSource)) {\n      }\n      if (!target.isMoveQuotaFull()) {\n        targetIterator.remove();\n      }\n    }\n    return;\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,13 @@\n+  private void chooseSources(\n+      Iterator\u003cSource\u003e sourceCandidates, boolean onRackSource) {\n+    for (Iterator\u003cBalancerDatanode\u003e targetIterator \u003d \n+      underUtilizedDatanodes.iterator(); targetIterator.hasNext();) {\n+      BalancerDatanode target \u003d targetIterator.next();\n+      while (chooseSource(target, sourceCandidates, onRackSource)) {\n+      }\n+      if (!target.isMoveQuotaFull()) {\n+        targetIterator.remove();\n+      }\n+    }\n+    return;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void chooseSources(\n      Iterator\u003cSource\u003e sourceCandidates, boolean onRackSource) {\n    for (Iterator\u003cBalancerDatanode\u003e targetIterator \u003d \n      underUtilizedDatanodes.iterator(); targetIterator.hasNext();) {\n      BalancerDatanode target \u003d targetIterator.next();\n      while (chooseSource(target, sourceCandidates, onRackSource)) {\n      }\n      if (!target.isMoveQuotaFull()) {\n        targetIterator.remove();\n      }\n    }\n    return;\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java"
    }
  }
}