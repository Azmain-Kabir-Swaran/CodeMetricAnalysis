{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FileSystem.java",
  "functionName": "create",
  "functionId": "create___f-Path__overwrite-boolean__bufferSize-int__replication-short__blockSize-long__progress-Progressable",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java",
  "functionStartLine": 1158,
  "functionEndLine": 1168,
  "numCommitsSeen": 188,
  "timeTaken": 5108,
  "changeHistory": [
    "f0d5382ff3e31a47d13e4cb6c3a244cca82b17ce",
    "7e599d9e3b852954a5a21b4738817c7aabfa1bc8",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "6e5bd7b622e50a28a70b53e8e3b910e726cd78ca",
    "35a4624771f84a60deb62a3807a3ac0701b0d7d0",
    "391112f6ce0af7dbc4390b0ac030451dff23c761",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36"
  ],
  "changeHistoryShort": {
    "f0d5382ff3e31a47d13e4cb6c3a244cca82b17ce": "Ybodychange",
    "7e599d9e3b852954a5a21b4738817c7aabfa1bc8": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "6e5bd7b622e50a28a70b53e8e3b910e726cd78ca": "Ybodychange",
    "35a4624771f84a60deb62a3807a3ac0701b0d7d0": "Ybodychange",
    "391112f6ce0af7dbc4390b0ac030451dff23c761": "Ybodychange",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f0d5382ff3e31a47d13e4cb6c3a244cca82b17ce": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6962. ACL inheritance conflicts with umaskmode. Contributed by Chris Nauroth.\n",
      "commitDate": "06/09/16 11:02 AM",
      "commitName": "f0d5382ff3e31a47d13e4cb6c3a244cca82b17ce",
      "commitAuthor": "Chris Nauroth",
      "commitDateOld": "17/08/16 3:00 PM",
      "commitNameOld": "c57523163f8936aec74ccf3b5a8db6f73b428bbf",
      "commitAuthorOld": "Anu Engineer",
      "daysBetweenCommits": 19.84,
      "commitsBetweenForRepo": 115,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n   public FSDataOutputStream create(Path f,\n                                             boolean overwrite,\n                                             int bufferSize,\n                                             short replication,\n                                             long blockSize,\n                                             Progressable progress\n                                             ) throws IOException {\n-    return this.create(f, FsPermission.getFileDefault().applyUMask(\n-        FsPermission.getUMask(getConf())), overwrite, bufferSize,\n-        replication, blockSize, progress);\n+    return this.create(f, FsCreateModes.applyUMask(\n+        FsPermission.getFileDefault(), FsPermission.getUMask(getConf())),\n+        overwrite, bufferSize, replication, blockSize, progress);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public FSDataOutputStream create(Path f,\n                                            boolean overwrite,\n                                            int bufferSize,\n                                            short replication,\n                                            long blockSize,\n                                            Progressable progress\n                                            ) throws IOException {\n    return this.create(f, FsCreateModes.applyUMask(\n        FsPermission.getFileDefault(), FsPermission.getUMask(getConf())),\n        overwrite, bufferSize, replication, blockSize, progress);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java",
      "extendedDetails": {}
    },
    "7e599d9e3b852954a5a21b4738817c7aabfa1bc8": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-9155. FsPermission should have different default value, 777 for directory and 666 for file. Contributed by Binglin Chang.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1431148 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/01/13 3:30 PM",
      "commitName": "7e599d9e3b852954a5a21b4738817c7aabfa1bc8",
      "commitAuthor": "Aaron Myers",
      "commitDateOld": "12/10/12 12:49 PM",
      "commitNameOld": "f8bdac0a1b4db1ec9adaddd856d75befbfdc7156",
      "commitAuthorOld": "Jason Darrell Lowe",
      "daysBetweenCommits": 89.15,
      "commitsBetweenForRepo": 406,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n   public FSDataOutputStream create(Path f,\n                                             boolean overwrite,\n                                             int bufferSize,\n                                             short replication,\n                                             long blockSize,\n                                             Progressable progress\n                                             ) throws IOException {\n-    return this.create(f, FsPermission.getDefault().applyUMask(\n+    return this.create(f, FsPermission.getFileDefault().applyUMask(\n         FsPermission.getUMask(getConf())), overwrite, bufferSize,\n         replication, blockSize, progress);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public FSDataOutputStream create(Path f,\n                                            boolean overwrite,\n                                            int bufferSize,\n                                            short replication,\n                                            long blockSize,\n                                            Progressable progress\n                                            ) throws IOException {\n    return this.create(f, FsPermission.getFileDefault().applyUMask(\n        FsPermission.getUMask(getConf())), overwrite, bufferSize,\n        replication, blockSize, progress);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public FSDataOutputStream create(Path f,\n                                            boolean overwrite,\n                                            int bufferSize,\n                                            short replication,\n                                            long blockSize,\n                                            Progressable progress\n                                            ) throws IOException {\n    return this.create(f, FsPermission.getDefault().applyUMask(\n        FsPermission.getUMask(getConf())), overwrite, bufferSize,\n        replication, blockSize, progress);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public FSDataOutputStream create(Path f,\n                                            boolean overwrite,\n                                            int bufferSize,\n                                            short replication,\n                                            long blockSize,\n                                            Progressable progress\n                                            ) throws IOException {\n    return this.create(f, FsPermission.getDefault().applyUMask(\n        FsPermission.getUMask(getConf())), overwrite, bufferSize,\n        replication, blockSize, progress);\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/fs/FileSystem.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public FSDataOutputStream create(Path f,\n                                            boolean overwrite,\n                                            int bufferSize,\n                                            short replication,\n                                            long blockSize,\n                                            Progressable progress\n                                            ) throws IOException {\n    return this.create(f, FsPermission.getDefault().applyUMask(\n        FsPermission.getUMask(getConf())), overwrite, bufferSize,\n        replication, blockSize, progress);\n  }",
      "path": "common/src/java/org/apache/hadoop/fs/FileSystem.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/fs/FileSystem.java",
        "newPath": "common/src/java/org/apache/hadoop/fs/FileSystem.java"
      }
    },
    "6e5bd7b622e50a28a70b53e8e3b910e726cd78ca": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-6898. FileSystem.copyToLocal creates files with 777 permissions. Contributed by Aaron T. Myers.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1091588 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/04/11 3:34 PM",
      "commitName": "6e5bd7b622e50a28a70b53e8e3b910e726cd78ca",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/02/11 4:11 PM",
      "commitNameOld": "449478c8320e67055bce6ea1dacb4e7574e289e3",
      "commitAuthorOld": "Jitendra Nath Pandey",
      "daysBetweenCommits": 69.93,
      "commitsBetweenForRepo": 53,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,11 @@\n   public FSDataOutputStream create(Path f,\n                                             boolean overwrite,\n                                             int bufferSize,\n                                             short replication,\n                                             long blockSize,\n                                             Progressable progress\n                                             ) throws IOException {\n-    return this.create(f, FsPermission.getDefault(), overwrite, bufferSize,\n+    return this.create(f, FsPermission.getDefault().applyUMask(\n+        FsPermission.getUMask(getConf())), overwrite, bufferSize,\n         replication, blockSize, progress);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public FSDataOutputStream create(Path f,\n                                            boolean overwrite,\n                                            int bufferSize,\n                                            short replication,\n                                            long blockSize,\n                                            Progressable progress\n                                            ) throws IOException {\n    return this.create(f, FsPermission.getDefault().applyUMask(\n        FsPermission.getUMask(getConf())), overwrite, bufferSize,\n        replication, blockSize, progress);\n  }",
      "path": "src/java/org/apache/hadoop/fs/FileSystem.java",
      "extendedDetails": {}
    },
    "35a4624771f84a60deb62a3807a3ac0701b0d7d0": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-6826.  Revert FileSystem create method that takes CreateFlags.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@956710 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/06/10 2:45 PM",
      "commitName": "35a4624771f84a60deb62a3807a3ac0701b0d7d0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "11/06/10 2:34 PM",
      "commitNameOld": "6378822a67c0baa502d22201f5c2b478cbe1261c",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 10.01,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,10 @@\n   public FSDataOutputStream create(Path f,\n                                             boolean overwrite,\n                                             int bufferSize,\n                                             short replication,\n                                             long blockSize,\n                                             Progressable progress\n                                             ) throws IOException {\n-    return this.create(f, FsPermission.getDefault(), overwrite ? EnumSet\n-        .of(CreateFlag.OVERWRITE) : EnumSet.of(CreateFlag.CREATE), bufferSize,\n+    return this.create(f, FsPermission.getDefault(), overwrite, bufferSize,\n         replication, blockSize, progress);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public FSDataOutputStream create(Path f,\n                                            boolean overwrite,\n                                            int bufferSize,\n                                            short replication,\n                                            long blockSize,\n                                            Progressable progress\n                                            ) throws IOException {\n    return this.create(f, FsPermission.getDefault(), overwrite, bufferSize,\n        replication, blockSize, progress);\n  }",
      "path": "src/java/org/apache/hadoop/fs/FileSystem.java",
      "extendedDetails": {}
    },
    "391112f6ce0af7dbc4390b0ac030451dff23c761": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-6138. Eliminate the depracate warnings introduced by H-5438.  Contributed by He Yongqiang\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@795172 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/07/09 11:01 AM",
      "commitName": "391112f6ce0af7dbc4390b0ac030451dff23c761",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "15/06/09 1:28 PM",
      "commitNameOld": "bcd64325a11cb0dd5096ffc093d0ffa68c4fcc58",
      "commitAuthorOld": "Owen O\u0027Malley",
      "daysBetweenCommits": 31.9,
      "commitsBetweenForRepo": 32,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,11 @@\n   public FSDataOutputStream create(Path f,\n                                             boolean overwrite,\n                                             int bufferSize,\n                                             short replication,\n                                             long blockSize,\n                                             Progressable progress\n                                             ) throws IOException {\n-    return this.create(f, FsPermission.getDefault(),\n-        overwrite, bufferSize, replication, blockSize, progress);\n+    return this.create(f, FsPermission.getDefault(), overwrite ? EnumSet\n+        .of(CreateFlag.OVERWRITE) : EnumSet.of(CreateFlag.CREATE), bufferSize,\n+        replication, blockSize, progress);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public FSDataOutputStream create(Path f,\n                                            boolean overwrite,\n                                            int bufferSize,\n                                            short replication,\n                                            long blockSize,\n                                            Progressable progress\n                                            ) throws IOException {\n    return this.create(f, FsPermission.getDefault(), overwrite ? EnumSet\n        .of(CreateFlag.OVERWRITE) : EnumSet.of(CreateFlag.CREATE), bufferSize,\n        replication, blockSize, progress);\n  }",
      "path": "src/java/org/apache/hadoop/fs/FileSystem.java",
      "extendedDetails": {}
    },
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-4687 Moving src directories on branch\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/core/branches/HADOOP-4687/core@776174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/05/09 9:20 PM",
      "commitName": "5128a9a453d64bfe1ed978cf9ffed27985eeef36",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,10 @@\n+  public FSDataOutputStream create(Path f,\n+                                            boolean overwrite,\n+                                            int bufferSize,\n+                                            short replication,\n+                                            long blockSize,\n+                                            Progressable progress\n+                                            ) throws IOException {\n+    return this.create(f, FsPermission.getDefault(),\n+        overwrite, bufferSize, replication, blockSize, progress);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public FSDataOutputStream create(Path f,\n                                            boolean overwrite,\n                                            int bufferSize,\n                                            short replication,\n                                            long blockSize,\n                                            Progressable progress\n                                            ) throws IOException {\n    return this.create(f, FsPermission.getDefault(),\n        overwrite, bufferSize, replication, blockSize, progress);\n  }",
      "path": "src/java/org/apache/hadoop/fs/FileSystem.java"
    }
  }
}