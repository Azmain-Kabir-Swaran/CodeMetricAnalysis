{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMAdminCLI.java",
  "functionName": "printHelp",
  "functionId": "printHelp___cmd-String__isHAEnabled-boolean",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/RMAdminCLI.java",
  "functionStartLine": 265,
  "functionEndLine": 315,
  "numCommitsSeen": 73,
  "timeTaken": 12511,
  "changeHistory": [
    "1defe3a65af5faf5117978f4f2cf6a24d17a2e76",
    "95372657fc25c02399b01793833021ccf88dada2",
    "5db7c4906235dd1070b9706ca4971f1eb5d74139",
    "2564b4d07f63de142fe1909d61904831c108667c",
    "aacf214a274fb5149437f287c542339966c03ea5",
    "6e130c308cf1b97e8386b6a43c26d72d2850119c",
    "729de3e6b6ae1fcfe1c6bec7102d758ad489df47",
    "0da69c324dee9baab0f0b9700db1cc5b623f8421",
    "95f2b9859718eca12fb3167775cdd2dad25dde25",
    "62b0d6151362a9860d4d750e6e0d032882af68aa",
    "73e3a49eb0d58f08549dc6b7054eb5c1f62819dc",
    "cab7674e54c4fe56838668462de99a6787841309",
    "fad9d7e85b1ba0934ab592daa9d3c9550b2bb501",
    "c906a1de7280dabd9d9d8b6aeaa060898e6d17b6",
    "fd93e5387b554a78413bc0f14b729e58fea604ea",
    "e1ee0d45ea3315e7fbe1d28a7a35a0ce0c54483b",
    "d963b3cd525dd3d948574f5b02aa50d8e23df968",
    "03510d00f48137fe4273c3e694e87fc0e660a706",
    "ac0bbb750f3cc9baa1145c250e083006bf83cd87",
    "494e21052156a7c5abedbbee824578837ad8cc11",
    "d52494228998db61683e486d19899e223cd85fa2",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "d19cfe01642f9582e1fe5d567beb480399c37a01",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "1defe3a65af5faf5117978f4f2cf6a24d17a2e76": "Ybodychange",
    "95372657fc25c02399b01793833021ccf88dada2": "Ybodychange",
    "5db7c4906235dd1070b9706ca4971f1eb5d74139": "Ybodychange",
    "2564b4d07f63de142fe1909d61904831c108667c": "Ybodychange",
    "aacf214a274fb5149437f287c542339966c03ea5": "Ybodychange",
    "6e130c308cf1b97e8386b6a43c26d72d2850119c": "Ybodychange",
    "729de3e6b6ae1fcfe1c6bec7102d758ad489df47": "Ybodychange",
    "0da69c324dee9baab0f0b9700db1cc5b623f8421": "Ybodychange",
    "95f2b9859718eca12fb3167775cdd2dad25dde25": "Ybodychange",
    "62b0d6151362a9860d4d750e6e0d032882af68aa": "Ybodychange",
    "73e3a49eb0d58f08549dc6b7054eb5c1f62819dc": "Ybodychange",
    "cab7674e54c4fe56838668462de99a6787841309": "Ybodychange",
    "fad9d7e85b1ba0934ab592daa9d3c9550b2bb501": "Ybodychange",
    "c906a1de7280dabd9d9d8b6aeaa060898e6d17b6": "Ybodychange",
    "fd93e5387b554a78413bc0f14b729e58fea604ea": "Ybodychange",
    "e1ee0d45ea3315e7fbe1d28a7a35a0ce0c54483b": "Ybodychange",
    "d963b3cd525dd3d948574f5b02aa50d8e23df968": "Ymultichange(Yparameterchange,Ybodychange)",
    "03510d00f48137fe4273c3e694e87fc0e660a706": "Ybodychange",
    "ac0bbb750f3cc9baa1145c250e083006bf83cd87": "Yfilerename",
    "494e21052156a7c5abedbbee824578837ad8cc11": "Yfilerename",
    "d52494228998db61683e486d19899e223cd85fa2": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "d19cfe01642f9582e1fe5d567beb480399c37a01": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1defe3a65af5faf5117978f4f2cf6a24d17a2e76": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16753. Refactor HAAdmin. Contributed by Xieming Li.\n",
      "commitDate": "20/01/20 5:58 PM",
      "commitName": "1defe3a65af5faf5117978f4f2cf6a24d17a2e76",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "09/12/19 1:37 AM",
      "commitNameOld": "dc66de744826e0501040f8c2ca9e1edc076a80cf",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 42.68,
      "commitsBetweenForRepo": 135,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,52 +1,51 @@\n   private static void printHelp(String cmd, boolean isHAEnabled) {\n     StringBuilder summary \u003d new StringBuilder();\n     summary.append(\"rmadmin is the command to execute YARN administrative \" +\n         \"commands.\\n\");\n     summary.append(\"The full syntax is: \\n\\n\"\n         + \"yarn rmadmin\"\n         + \" [-refreshQueues]\"\n         + \" [-refreshNodes [-g|graceful [timeout in seconds] -client|server]]\"\n         + \" [-refreshNodesResources]\"\n         + \" [-refreshSuperUserGroupsConfiguration]\"\n         + \" [-refreshUserToGroupsMappings]\"\n         + \" [-refreshAdminAcls]\"\n         + \" [-refreshServiceAcl]\"\n         + \" [-getGroup [username]]\"\n         + \" [-addToClusterNodeLabels \u003c\\\"label1(exclusive\u003dtrue),\"\n         + \"label2(exclusive\u003dfalse),label3\\\"\u003e]\"\n         + \" [-removeFromClusterNodeLabels \u003clabel1,label2,label3\u003e]\"\n         + \" [-replaceLabelsOnNode \"\n         + \"\u003c\\\"node1[:port]\u003dlabel1,label2 node2[:port]\u003dlabel1\\\"\u003e \"\n         + \"[-failOnUnknownNodes]]\"\n         + \" [-directlyAccessNodeLabelStore]\"\n         + \" [-refreshClusterMaxPriority]\"\n         + \" [-updateNodeResource [NodeID] [MemSize] [vCores]\"\n         + \" ([OvercommitTimeout]) or -updateNodeResource [NodeID] \"\n         + \"[ResourceTypes] ([OvercommitTimeout])]\");\n     if (isHAEnabled) {\n       appendHAUsage(summary);\n     }\n     summary.append(\" [-help [cmd]]\")\n         .append(\"\\n\");\n \n     StringBuilder helpBuilder \u003d new StringBuilder();\n     System.out.println(summary);\n     for (String cmdKey : ADMIN_USAGE.keySet()) {\n       buildHelpMsg(cmdKey, helpBuilder);\n       helpBuilder.append(\"\\n\");\n     }\n     if (isHAEnabled) {\n       for (String cmdKey : USAGE.keySet()) {\n-        if (!cmdKey.equals(\"-help\") \u0026\u0026 !cmdKey.equals(\"-failover\")\n-            \u0026\u0026 !cmdKey.equals(\"-transitionToObserver\")) {\n+        if (!cmdKey.equals(\"-help\")) {\n           buildHelpMsg(cmdKey, helpBuilder);\n           helpBuilder.append(\"\\n\");\n         }\n       }\n     }\n     helpBuilder.append(\"   -help [cmd]: Displays help for the given command or all commands\" +\n         \" if none is specified.\");\n     System.out.println(helpBuilder);\n     System.out.println();\n     ToolRunner.printGenericCommandUsage(System.out);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void printHelp(String cmd, boolean isHAEnabled) {\n    StringBuilder summary \u003d new StringBuilder();\n    summary.append(\"rmadmin is the command to execute YARN administrative \" +\n        \"commands.\\n\");\n    summary.append(\"The full syntax is: \\n\\n\"\n        + \"yarn rmadmin\"\n        + \" [-refreshQueues]\"\n        + \" [-refreshNodes [-g|graceful [timeout in seconds] -client|server]]\"\n        + \" [-refreshNodesResources]\"\n        + \" [-refreshSuperUserGroupsConfiguration]\"\n        + \" [-refreshUserToGroupsMappings]\"\n        + \" [-refreshAdminAcls]\"\n        + \" [-refreshServiceAcl]\"\n        + \" [-getGroup [username]]\"\n        + \" [-addToClusterNodeLabels \u003c\\\"label1(exclusive\u003dtrue),\"\n        + \"label2(exclusive\u003dfalse),label3\\\"\u003e]\"\n        + \" [-removeFromClusterNodeLabels \u003clabel1,label2,label3\u003e]\"\n        + \" [-replaceLabelsOnNode \"\n        + \"\u003c\\\"node1[:port]\u003dlabel1,label2 node2[:port]\u003dlabel1\\\"\u003e \"\n        + \"[-failOnUnknownNodes]]\"\n        + \" [-directlyAccessNodeLabelStore]\"\n        + \" [-refreshClusterMaxPriority]\"\n        + \" [-updateNodeResource [NodeID] [MemSize] [vCores]\"\n        + \" ([OvercommitTimeout]) or -updateNodeResource [NodeID] \"\n        + \"[ResourceTypes] ([OvercommitTimeout])]\");\n    if (isHAEnabled) {\n      appendHAUsage(summary);\n    }\n    summary.append(\" [-help [cmd]]\")\n        .append(\"\\n\");\n\n    StringBuilder helpBuilder \u003d new StringBuilder();\n    System.out.println(summary);\n    for (String cmdKey : ADMIN_USAGE.keySet()) {\n      buildHelpMsg(cmdKey, helpBuilder);\n      helpBuilder.append(\"\\n\");\n    }\n    if (isHAEnabled) {\n      for (String cmdKey : USAGE.keySet()) {\n        if (!cmdKey.equals(\"-help\")) {\n          buildHelpMsg(cmdKey, helpBuilder);\n          helpBuilder.append(\"\\n\");\n        }\n      }\n    }\n    helpBuilder.append(\"   -help [cmd]: Displays help for the given command or all commands\" +\n        \" if none is specified.\");\n    System.out.println(helpBuilder);\n    System.out.println();\n    ToolRunner.printGenericCommandUsage(System.out);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/RMAdminCLI.java",
      "extendedDetails": {}
    },
    "95372657fc25c02399b01793833021ccf88dada2": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9287. Consecutive StringBuilder append should be reuse. Contributed by Ayush Saxena.\n",
      "commitDate": "25/02/19 11:45 AM",
      "commitName": "95372657fc25c02399b01793833021ccf88dada2",
      "commitAuthor": "Giovanni Matteo Fumarola",
      "commitDateOld": "07/01/19 12:32 AM",
      "commitNameOld": "5db7c4906235dd1070b9706ca4971f1eb5d74139",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 49.47,
      "commitsBetweenForRepo": 385,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,52 +1,52 @@\n   private static void printHelp(String cmd, boolean isHAEnabled) {\n     StringBuilder summary \u003d new StringBuilder();\n     summary.append(\"rmadmin is the command to execute YARN administrative \" +\n         \"commands.\\n\");\n     summary.append(\"The full syntax is: \\n\\n\"\n         + \"yarn rmadmin\"\n         + \" [-refreshQueues]\"\n         + \" [-refreshNodes [-g|graceful [timeout in seconds] -client|server]]\"\n         + \" [-refreshNodesResources]\"\n         + \" [-refreshSuperUserGroupsConfiguration]\"\n         + \" [-refreshUserToGroupsMappings]\"\n         + \" [-refreshAdminAcls]\"\n         + \" [-refreshServiceAcl]\"\n         + \" [-getGroup [username]]\"\n         + \" [-addToClusterNodeLabels \u003c\\\"label1(exclusive\u003dtrue),\"\n         + \"label2(exclusive\u003dfalse),label3\\\"\u003e]\"\n         + \" [-removeFromClusterNodeLabels \u003clabel1,label2,label3\u003e]\"\n         + \" [-replaceLabelsOnNode \"\n         + \"\u003c\\\"node1[:port]\u003dlabel1,label2 node2[:port]\u003dlabel1\\\"\u003e \"\n         + \"[-failOnUnknownNodes]]\"\n         + \" [-directlyAccessNodeLabelStore]\"\n         + \" [-refreshClusterMaxPriority]\"\n         + \" [-updateNodeResource [NodeID] [MemSize] [vCores]\"\n         + \" ([OvercommitTimeout]) or -updateNodeResource [NodeID] \"\n         + \"[ResourceTypes] ([OvercommitTimeout])]\");\n     if (isHAEnabled) {\n       appendHAUsage(summary);\n     }\n-    summary.append(\" [-help [cmd]]\");\n-    summary.append(\"\\n\");\n+    summary.append(\" [-help [cmd]]\")\n+        .append(\"\\n\");\n \n     StringBuilder helpBuilder \u003d new StringBuilder();\n     System.out.println(summary);\n     for (String cmdKey : ADMIN_USAGE.keySet()) {\n       buildHelpMsg(cmdKey, helpBuilder);\n       helpBuilder.append(\"\\n\");\n     }\n     if (isHAEnabled) {\n       for (String cmdKey : USAGE.keySet()) {\n         if (!cmdKey.equals(\"-help\") \u0026\u0026 !cmdKey.equals(\"-failover\")\n             \u0026\u0026 !cmdKey.equals(\"-transitionToObserver\")) {\n           buildHelpMsg(cmdKey, helpBuilder);\n           helpBuilder.append(\"\\n\");\n         }\n       }\n     }\n     helpBuilder.append(\"   -help [cmd]: Displays help for the given command or all commands\" +\n         \" if none is specified.\");\n     System.out.println(helpBuilder);\n     System.out.println();\n     ToolRunner.printGenericCommandUsage(System.out);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void printHelp(String cmd, boolean isHAEnabled) {\n    StringBuilder summary \u003d new StringBuilder();\n    summary.append(\"rmadmin is the command to execute YARN administrative \" +\n        \"commands.\\n\");\n    summary.append(\"The full syntax is: \\n\\n\"\n        + \"yarn rmadmin\"\n        + \" [-refreshQueues]\"\n        + \" [-refreshNodes [-g|graceful [timeout in seconds] -client|server]]\"\n        + \" [-refreshNodesResources]\"\n        + \" [-refreshSuperUserGroupsConfiguration]\"\n        + \" [-refreshUserToGroupsMappings]\"\n        + \" [-refreshAdminAcls]\"\n        + \" [-refreshServiceAcl]\"\n        + \" [-getGroup [username]]\"\n        + \" [-addToClusterNodeLabels \u003c\\\"label1(exclusive\u003dtrue),\"\n        + \"label2(exclusive\u003dfalse),label3\\\"\u003e]\"\n        + \" [-removeFromClusterNodeLabels \u003clabel1,label2,label3\u003e]\"\n        + \" [-replaceLabelsOnNode \"\n        + \"\u003c\\\"node1[:port]\u003dlabel1,label2 node2[:port]\u003dlabel1\\\"\u003e \"\n        + \"[-failOnUnknownNodes]]\"\n        + \" [-directlyAccessNodeLabelStore]\"\n        + \" [-refreshClusterMaxPriority]\"\n        + \" [-updateNodeResource [NodeID] [MemSize] [vCores]\"\n        + \" ([OvercommitTimeout]) or -updateNodeResource [NodeID] \"\n        + \"[ResourceTypes] ([OvercommitTimeout])]\");\n    if (isHAEnabled) {\n      appendHAUsage(summary);\n    }\n    summary.append(\" [-help [cmd]]\")\n        .append(\"\\n\");\n\n    StringBuilder helpBuilder \u003d new StringBuilder();\n    System.out.println(summary);\n    for (String cmdKey : ADMIN_USAGE.keySet()) {\n      buildHelpMsg(cmdKey, helpBuilder);\n      helpBuilder.append(\"\\n\");\n    }\n    if (isHAEnabled) {\n      for (String cmdKey : USAGE.keySet()) {\n        if (!cmdKey.equals(\"-help\") \u0026\u0026 !cmdKey.equals(\"-failover\")\n            \u0026\u0026 !cmdKey.equals(\"-transitionToObserver\")) {\n          buildHelpMsg(cmdKey, helpBuilder);\n          helpBuilder.append(\"\\n\");\n        }\n      }\n    }\n    helpBuilder.append(\"   -help [cmd]: Displays help for the given command or all commands\" +\n        \" if none is specified.\");\n    System.out.println(helpBuilder);\n    System.out.println();\n    ToolRunner.printGenericCommandUsage(System.out);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/RMAdminCLI.java",
      "extendedDetails": {}
    },
    "5db7c4906235dd1070b9706ca4971f1eb5d74139": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9162. Fix TestRMAdminCLI#testHelp. Contributed by Ayush Saxena.\n",
      "commitDate": "07/01/19 12:32 AM",
      "commitName": "5db7c4906235dd1070b9706ca4971f1eb5d74139",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "08/10/18 10:05 AM",
      "commitNameOld": "745f64012a2a912d5f0a36bbda89dc638e1715cb",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 90.64,
      "commitsBetweenForRepo": 685,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,51 +1,52 @@\n   private static void printHelp(String cmd, boolean isHAEnabled) {\n     StringBuilder summary \u003d new StringBuilder();\n     summary.append(\"rmadmin is the command to execute YARN administrative \" +\n         \"commands.\\n\");\n     summary.append(\"The full syntax is: \\n\\n\"\n         + \"yarn rmadmin\"\n         + \" [-refreshQueues]\"\n         + \" [-refreshNodes [-g|graceful [timeout in seconds] -client|server]]\"\n         + \" [-refreshNodesResources]\"\n         + \" [-refreshSuperUserGroupsConfiguration]\"\n         + \" [-refreshUserToGroupsMappings]\"\n         + \" [-refreshAdminAcls]\"\n         + \" [-refreshServiceAcl]\"\n         + \" [-getGroup [username]]\"\n         + \" [-addToClusterNodeLabels \u003c\\\"label1(exclusive\u003dtrue),\"\n         + \"label2(exclusive\u003dfalse),label3\\\"\u003e]\"\n         + \" [-removeFromClusterNodeLabels \u003clabel1,label2,label3\u003e]\"\n         + \" [-replaceLabelsOnNode \"\n         + \"\u003c\\\"node1[:port]\u003dlabel1,label2 node2[:port]\u003dlabel1\\\"\u003e \"\n         + \"[-failOnUnknownNodes]]\"\n         + \" [-directlyAccessNodeLabelStore]\"\n         + \" [-refreshClusterMaxPriority]\"\n         + \" [-updateNodeResource [NodeID] [MemSize] [vCores]\"\n         + \" ([OvercommitTimeout]) or -updateNodeResource [NodeID] \"\n         + \"[ResourceTypes] ([OvercommitTimeout])]\");\n     if (isHAEnabled) {\n       appendHAUsage(summary);\n     }\n     summary.append(\" [-help [cmd]]\");\n     summary.append(\"\\n\");\n \n     StringBuilder helpBuilder \u003d new StringBuilder();\n     System.out.println(summary);\n     for (String cmdKey : ADMIN_USAGE.keySet()) {\n       buildHelpMsg(cmdKey, helpBuilder);\n       helpBuilder.append(\"\\n\");\n     }\n     if (isHAEnabled) {\n       for (String cmdKey : USAGE.keySet()) {\n-        if (!cmdKey.equals(\"-help\") \u0026\u0026 !cmdKey.equals(\"-failover\")) {\n+        if (!cmdKey.equals(\"-help\") \u0026\u0026 !cmdKey.equals(\"-failover\")\n+            \u0026\u0026 !cmdKey.equals(\"-transitionToObserver\")) {\n           buildHelpMsg(cmdKey, helpBuilder);\n           helpBuilder.append(\"\\n\");\n         }\n       }\n     }\n     helpBuilder.append(\"   -help [cmd]: Displays help for the given command or all commands\" +\n         \" if none is specified.\");\n     System.out.println(helpBuilder);\n     System.out.println();\n     ToolRunner.printGenericCommandUsage(System.out);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void printHelp(String cmd, boolean isHAEnabled) {\n    StringBuilder summary \u003d new StringBuilder();\n    summary.append(\"rmadmin is the command to execute YARN administrative \" +\n        \"commands.\\n\");\n    summary.append(\"The full syntax is: \\n\\n\"\n        + \"yarn rmadmin\"\n        + \" [-refreshQueues]\"\n        + \" [-refreshNodes [-g|graceful [timeout in seconds] -client|server]]\"\n        + \" [-refreshNodesResources]\"\n        + \" [-refreshSuperUserGroupsConfiguration]\"\n        + \" [-refreshUserToGroupsMappings]\"\n        + \" [-refreshAdminAcls]\"\n        + \" [-refreshServiceAcl]\"\n        + \" [-getGroup [username]]\"\n        + \" [-addToClusterNodeLabels \u003c\\\"label1(exclusive\u003dtrue),\"\n        + \"label2(exclusive\u003dfalse),label3\\\"\u003e]\"\n        + \" [-removeFromClusterNodeLabels \u003clabel1,label2,label3\u003e]\"\n        + \" [-replaceLabelsOnNode \"\n        + \"\u003c\\\"node1[:port]\u003dlabel1,label2 node2[:port]\u003dlabel1\\\"\u003e \"\n        + \"[-failOnUnknownNodes]]\"\n        + \" [-directlyAccessNodeLabelStore]\"\n        + \" [-refreshClusterMaxPriority]\"\n        + \" [-updateNodeResource [NodeID] [MemSize] [vCores]\"\n        + \" ([OvercommitTimeout]) or -updateNodeResource [NodeID] \"\n        + \"[ResourceTypes] ([OvercommitTimeout])]\");\n    if (isHAEnabled) {\n      appendHAUsage(summary);\n    }\n    summary.append(\" [-help [cmd]]\");\n    summary.append(\"\\n\");\n\n    StringBuilder helpBuilder \u003d new StringBuilder();\n    System.out.println(summary);\n    for (String cmdKey : ADMIN_USAGE.keySet()) {\n      buildHelpMsg(cmdKey, helpBuilder);\n      helpBuilder.append(\"\\n\");\n    }\n    if (isHAEnabled) {\n      for (String cmdKey : USAGE.keySet()) {\n        if (!cmdKey.equals(\"-help\") \u0026\u0026 !cmdKey.equals(\"-failover\")\n            \u0026\u0026 !cmdKey.equals(\"-transitionToObserver\")) {\n          buildHelpMsg(cmdKey, helpBuilder);\n          helpBuilder.append(\"\\n\");\n        }\n      }\n    }\n    helpBuilder.append(\"   -help [cmd]: Displays help for the given command or all commands\" +\n        \" if none is specified.\");\n    System.out.println(helpBuilder);\n    System.out.println();\n    ToolRunner.printGenericCommandUsage(System.out);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/RMAdminCLI.java",
      "extendedDetails": {}
    },
    "2564b4d07f63de142fe1909d61904831c108667c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7119. Support multiple resource types in rmadmin updateNodeResource command. Contributed by Manikandan R.\n",
      "commitDate": "14/12/17 2:41 AM",
      "commitName": "2564b4d07f63de142fe1909d61904831c108667c",
      "commitAuthor": "Sunil G",
      "commitDateOld": "30/08/17 6:04 PM",
      "commitNameOld": "ce79f7be29dfbad444614cb340c59e4ff8137e89",
      "commitAuthorOld": "Robert Kanter",
      "daysBetweenCommits": 105.4,
      "commitsBetweenForRepo": 847,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,50 +1,51 @@\n   private static void printHelp(String cmd, boolean isHAEnabled) {\n     StringBuilder summary \u003d new StringBuilder();\n     summary.append(\"rmadmin is the command to execute YARN administrative \" +\n         \"commands.\\n\");\n-    summary.append(\"The full syntax is: \\n\\n\" +\n-        \"yarn rmadmin\" +\n-        \" [-refreshQueues]\" +\n-        \" [-refreshNodes [-g|graceful [timeout in seconds] -client|server]]\" +\n-        \" [-refreshNodesResources]\" +\n-        \" [-refreshSuperUserGroupsConfiguration]\" +\n-        \" [-refreshUserToGroupsMappings]\" +\n-        \" [-refreshAdminAcls]\" +\n-        \" [-refreshServiceAcl]\" +\n-        \" [-getGroup [username]]\" +\n-        \" [-addToClusterNodeLabels \u003c\\\"label1(exclusive\u003dtrue),\"\n-            + \"label2(exclusive\u003dfalse),label3\\\"\u003e]\" +\n-        \" [-removeFromClusterNodeLabels \u003clabel1,label2,label3\u003e]\" +\n-        \" [-replaceLabelsOnNode \" +\n-            \"\u003c\\\"node1[:port]\u003dlabel1,label2 node2[:port]\u003dlabel1\\\"\u003e \" +\n-            \"[-failOnUnknownNodes]]\" +\n-        \" [-directlyAccessNodeLabelStore]\" +\n-        \" [-refreshClusterMaxPriority]\" +\n-        \" [-updateNodeResource [NodeID] [MemSize] [vCores]\" +\n-        \" ([OvercommitTimeout])\");\n+    summary.append(\"The full syntax is: \\n\\n\"\n+        + \"yarn rmadmin\"\n+        + \" [-refreshQueues]\"\n+        + \" [-refreshNodes [-g|graceful [timeout in seconds] -client|server]]\"\n+        + \" [-refreshNodesResources]\"\n+        + \" [-refreshSuperUserGroupsConfiguration]\"\n+        + \" [-refreshUserToGroupsMappings]\"\n+        + \" [-refreshAdminAcls]\"\n+        + \" [-refreshServiceAcl]\"\n+        + \" [-getGroup [username]]\"\n+        + \" [-addToClusterNodeLabels \u003c\\\"label1(exclusive\u003dtrue),\"\n+        + \"label2(exclusive\u003dfalse),label3\\\"\u003e]\"\n+        + \" [-removeFromClusterNodeLabels \u003clabel1,label2,label3\u003e]\"\n+        + \" [-replaceLabelsOnNode \"\n+        + \"\u003c\\\"node1[:port]\u003dlabel1,label2 node2[:port]\u003dlabel1\\\"\u003e \"\n+        + \"[-failOnUnknownNodes]]\"\n+        + \" [-directlyAccessNodeLabelStore]\"\n+        + \" [-refreshClusterMaxPriority]\"\n+        + \" [-updateNodeResource [NodeID] [MemSize] [vCores]\"\n+        + \" ([OvercommitTimeout]) or -updateNodeResource [NodeID] \"\n+        + \"[ResourceTypes] ([OvercommitTimeout])]\");\n     if (isHAEnabled) {\n       appendHAUsage(summary);\n     }\n     summary.append(\" [-help [cmd]]\");\n     summary.append(\"\\n\");\n \n     StringBuilder helpBuilder \u003d new StringBuilder();\n     System.out.println(summary);\n     for (String cmdKey : ADMIN_USAGE.keySet()) {\n       buildHelpMsg(cmdKey, helpBuilder);\n       helpBuilder.append(\"\\n\");\n     }\n     if (isHAEnabled) {\n       for (String cmdKey : USAGE.keySet()) {\n         if (!cmdKey.equals(\"-help\") \u0026\u0026 !cmdKey.equals(\"-failover\")) {\n           buildHelpMsg(cmdKey, helpBuilder);\n           helpBuilder.append(\"\\n\");\n         }\n       }\n     }\n     helpBuilder.append(\"   -help [cmd]: Displays help for the given command or all commands\" +\n         \" if none is specified.\");\n     System.out.println(helpBuilder);\n     System.out.println();\n     ToolRunner.printGenericCommandUsage(System.out);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void printHelp(String cmd, boolean isHAEnabled) {\n    StringBuilder summary \u003d new StringBuilder();\n    summary.append(\"rmadmin is the command to execute YARN administrative \" +\n        \"commands.\\n\");\n    summary.append(\"The full syntax is: \\n\\n\"\n        + \"yarn rmadmin\"\n        + \" [-refreshQueues]\"\n        + \" [-refreshNodes [-g|graceful [timeout in seconds] -client|server]]\"\n        + \" [-refreshNodesResources]\"\n        + \" [-refreshSuperUserGroupsConfiguration]\"\n        + \" [-refreshUserToGroupsMappings]\"\n        + \" [-refreshAdminAcls]\"\n        + \" [-refreshServiceAcl]\"\n        + \" [-getGroup [username]]\"\n        + \" [-addToClusterNodeLabels \u003c\\\"label1(exclusive\u003dtrue),\"\n        + \"label2(exclusive\u003dfalse),label3\\\"\u003e]\"\n        + \" [-removeFromClusterNodeLabels \u003clabel1,label2,label3\u003e]\"\n        + \" [-replaceLabelsOnNode \"\n        + \"\u003c\\\"node1[:port]\u003dlabel1,label2 node2[:port]\u003dlabel1\\\"\u003e \"\n        + \"[-failOnUnknownNodes]]\"\n        + \" [-directlyAccessNodeLabelStore]\"\n        + \" [-refreshClusterMaxPriority]\"\n        + \" [-updateNodeResource [NodeID] [MemSize] [vCores]\"\n        + \" ([OvercommitTimeout]) or -updateNodeResource [NodeID] \"\n        + \"[ResourceTypes] ([OvercommitTimeout])]\");\n    if (isHAEnabled) {\n      appendHAUsage(summary);\n    }\n    summary.append(\" [-help [cmd]]\");\n    summary.append(\"\\n\");\n\n    StringBuilder helpBuilder \u003d new StringBuilder();\n    System.out.println(summary);\n    for (String cmdKey : ADMIN_USAGE.keySet()) {\n      buildHelpMsg(cmdKey, helpBuilder);\n      helpBuilder.append(\"\\n\");\n    }\n    if (isHAEnabled) {\n      for (String cmdKey : USAGE.keySet()) {\n        if (!cmdKey.equals(\"-help\") \u0026\u0026 !cmdKey.equals(\"-failover\")) {\n          buildHelpMsg(cmdKey, helpBuilder);\n          helpBuilder.append(\"\\n\");\n        }\n      }\n    }\n    helpBuilder.append(\"   -help [cmd]: Displays help for the given command or all commands\" +\n        \" if none is specified.\");\n    System.out.println(helpBuilder);\n    System.out.println();\n    ToolRunner.printGenericCommandUsage(System.out);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/RMAdminCLI.java",
      "extendedDetails": {}
    },
    "aacf214a274fb5149437f287c542339966c03ea5": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5697. Use CliParser to parse options in RMAdminCLI. Contributed by Tao jie\n",
      "commitDate": "01/11/16 4:14 PM",
      "commitName": "aacf214a274fb5149437f287c542339966c03ea5",
      "commitAuthor": "Naganarasimha",
      "commitDateOld": "02/10/16 11:02 PM",
      "commitNameOld": "6e130c308cf1b97e8386b6a43c26d72d2850119c",
      "commitAuthorOld": "Naganarasimha",
      "daysBetweenCommits": 29.72,
      "commitsBetweenForRepo": 266,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,49 +1,50 @@\n   private static void printHelp(String cmd, boolean isHAEnabled) {\n     StringBuilder summary \u003d new StringBuilder();\n     summary.append(\"rmadmin is the command to execute YARN administrative \" +\n         \"commands.\\n\");\n     summary.append(\"The full syntax is: \\n\\n\" +\n         \"yarn rmadmin\" +\n         \" [-refreshQueues]\" +\n         \" [-refreshNodes [-g|graceful [timeout in seconds] -client|server]]\" +\n         \" [-refreshNodesResources]\" +\n         \" [-refreshSuperUserGroupsConfiguration]\" +\n         \" [-refreshUserToGroupsMappings]\" +\n         \" [-refreshAdminAcls]\" +\n         \" [-refreshServiceAcl]\" +\n         \" [-getGroup [username]]\" +\n         \" [-addToClusterNodeLabels \u003c\\\"label1(exclusive\u003dtrue),\"\n             + \"label2(exclusive\u003dfalse),label3\\\"\u003e]\" +\n         \" [-removeFromClusterNodeLabels \u003clabel1,label2,label3\u003e]\" +\n-        \" [-replaceLabelsOnNode [-failOnUnknownNodes] \"\n-            + \"\u003c\\\"node1[:port]\u003dlabel1,label2 node2[:port]\u003dlabel1\\\"\u003e]\" +\n+        \" [-replaceLabelsOnNode \" +\n+            \"\u003c\\\"node1[:port]\u003dlabel1,label2 node2[:port]\u003dlabel1\\\"\u003e \" +\n+            \"[-failOnUnknownNodes]]\" +\n         \" [-directlyAccessNodeLabelStore]\" +\n         \" [-refreshClusterMaxPriority]\" +\n         \" [-updateNodeResource [NodeID] [MemSize] [vCores]\" +\n         \" ([OvercommitTimeout])\");\n     if (isHAEnabled) {\n       appendHAUsage(summary);\n     }\n     summary.append(\" [-help [cmd]]\");\n     summary.append(\"\\n\");\n \n     StringBuilder helpBuilder \u003d new StringBuilder();\n     System.out.println(summary);\n     for (String cmdKey : ADMIN_USAGE.keySet()) {\n       buildHelpMsg(cmdKey, helpBuilder);\n       helpBuilder.append(\"\\n\");\n     }\n     if (isHAEnabled) {\n       for (String cmdKey : USAGE.keySet()) {\n         if (!cmdKey.equals(\"-help\") \u0026\u0026 !cmdKey.equals(\"-failover\")) {\n           buildHelpMsg(cmdKey, helpBuilder);\n           helpBuilder.append(\"\\n\");\n         }\n       }\n     }\n     helpBuilder.append(\"   -help [cmd]: Displays help for the given command or all commands\" +\n         \" if none is specified.\");\n     System.out.println(helpBuilder);\n     System.out.println();\n     ToolRunner.printGenericCommandUsage(System.out);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void printHelp(String cmd, boolean isHAEnabled) {\n    StringBuilder summary \u003d new StringBuilder();\n    summary.append(\"rmadmin is the command to execute YARN administrative \" +\n        \"commands.\\n\");\n    summary.append(\"The full syntax is: \\n\\n\" +\n        \"yarn rmadmin\" +\n        \" [-refreshQueues]\" +\n        \" [-refreshNodes [-g|graceful [timeout in seconds] -client|server]]\" +\n        \" [-refreshNodesResources]\" +\n        \" [-refreshSuperUserGroupsConfiguration]\" +\n        \" [-refreshUserToGroupsMappings]\" +\n        \" [-refreshAdminAcls]\" +\n        \" [-refreshServiceAcl]\" +\n        \" [-getGroup [username]]\" +\n        \" [-addToClusterNodeLabels \u003c\\\"label1(exclusive\u003dtrue),\"\n            + \"label2(exclusive\u003dfalse),label3\\\"\u003e]\" +\n        \" [-removeFromClusterNodeLabels \u003clabel1,label2,label3\u003e]\" +\n        \" [-replaceLabelsOnNode \" +\n            \"\u003c\\\"node1[:port]\u003dlabel1,label2 node2[:port]\u003dlabel1\\\"\u003e \" +\n            \"[-failOnUnknownNodes]]\" +\n        \" [-directlyAccessNodeLabelStore]\" +\n        \" [-refreshClusterMaxPriority]\" +\n        \" [-updateNodeResource [NodeID] [MemSize] [vCores]\" +\n        \" ([OvercommitTimeout])\");\n    if (isHAEnabled) {\n      appendHAUsage(summary);\n    }\n    summary.append(\" [-help [cmd]]\");\n    summary.append(\"\\n\");\n\n    StringBuilder helpBuilder \u003d new StringBuilder();\n    System.out.println(summary);\n    for (String cmdKey : ADMIN_USAGE.keySet()) {\n      buildHelpMsg(cmdKey, helpBuilder);\n      helpBuilder.append(\"\\n\");\n    }\n    if (isHAEnabled) {\n      for (String cmdKey : USAGE.keySet()) {\n        if (!cmdKey.equals(\"-help\") \u0026\u0026 !cmdKey.equals(\"-failover\")) {\n          buildHelpMsg(cmdKey, helpBuilder);\n          helpBuilder.append(\"\\n\");\n        }\n      }\n    }\n    helpBuilder.append(\"   -help [cmd]: Displays help for the given command or all commands\" +\n        \" if none is specified.\");\n    System.out.println(helpBuilder);\n    System.out.println();\n    ToolRunner.printGenericCommandUsage(System.out);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/RMAdminCLI.java",
      "extendedDetails": {}
    },
    "6e130c308cf1b97e8386b6a43c26d72d2850119c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4855. Should check if node exists when replace nodelabels. Contributeed by Tao Jie\n",
      "commitDate": "02/10/16 11:02 PM",
      "commitName": "6e130c308cf1b97e8386b6a43c26d72d2850119c",
      "commitAuthor": "Naganarasimha",
      "commitDateOld": "13/09/16 2:53 AM",
      "commitNameOld": "729de3e6b6ae1fcfe1c6bec7102d758ad489df47",
      "commitAuthorOld": "Rohith Sharma K S",
      "daysBetweenCommits": 19.84,
      "commitsBetweenForRepo": 119,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,49 +1,49 @@\n   private static void printHelp(String cmd, boolean isHAEnabled) {\n     StringBuilder summary \u003d new StringBuilder();\n     summary.append(\"rmadmin is the command to execute YARN administrative \" +\n         \"commands.\\n\");\n     summary.append(\"The full syntax is: \\n\\n\" +\n         \"yarn rmadmin\" +\n         \" [-refreshQueues]\" +\n         \" [-refreshNodes [-g|graceful [timeout in seconds] -client|server]]\" +\n         \" [-refreshNodesResources]\" +\n         \" [-refreshSuperUserGroupsConfiguration]\" +\n         \" [-refreshUserToGroupsMappings]\" +\n         \" [-refreshAdminAcls]\" +\n         \" [-refreshServiceAcl]\" +\n         \" [-getGroup [username]]\" +\n         \" [-addToClusterNodeLabels \u003c\\\"label1(exclusive\u003dtrue),\"\n             + \"label2(exclusive\u003dfalse),label3\\\"\u003e]\" +\n         \" [-removeFromClusterNodeLabels \u003clabel1,label2,label3\u003e]\" +\n-        \" [-replaceLabelsOnNode \u003c\\\"node1[:port]\u003dlabel1,label2\" +\n-        \" node2[:port]\u003dlabel1\\\"\u003e]\" +\n+        \" [-replaceLabelsOnNode [-failOnUnknownNodes] \"\n+            + \"\u003c\\\"node1[:port]\u003dlabel1,label2 node2[:port]\u003dlabel1\\\"\u003e]\" +\n         \" [-directlyAccessNodeLabelStore]\" +\n         \" [-refreshClusterMaxPriority]\" +\n         \" [-updateNodeResource [NodeID] [MemSize] [vCores]\" +\n         \" ([OvercommitTimeout])\");\n     if (isHAEnabled) {\n       appendHAUsage(summary);\n     }\n     summary.append(\" [-help [cmd]]\");\n     summary.append(\"\\n\");\n \n     StringBuilder helpBuilder \u003d new StringBuilder();\n     System.out.println(summary);\n     for (String cmdKey : ADMIN_USAGE.keySet()) {\n       buildHelpMsg(cmdKey, helpBuilder);\n       helpBuilder.append(\"\\n\");\n     }\n     if (isHAEnabled) {\n       for (String cmdKey : USAGE.keySet()) {\n         if (!cmdKey.equals(\"-help\") \u0026\u0026 !cmdKey.equals(\"-failover\")) {\n           buildHelpMsg(cmdKey, helpBuilder);\n           helpBuilder.append(\"\\n\");\n         }\n       }\n     }\n     helpBuilder.append(\"   -help [cmd]: Displays help for the given command or all commands\" +\n         \" if none is specified.\");\n     System.out.println(helpBuilder);\n     System.out.println();\n     ToolRunner.printGenericCommandUsage(System.out);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void printHelp(String cmd, boolean isHAEnabled) {\n    StringBuilder summary \u003d new StringBuilder();\n    summary.append(\"rmadmin is the command to execute YARN administrative \" +\n        \"commands.\\n\");\n    summary.append(\"The full syntax is: \\n\\n\" +\n        \"yarn rmadmin\" +\n        \" [-refreshQueues]\" +\n        \" [-refreshNodes [-g|graceful [timeout in seconds] -client|server]]\" +\n        \" [-refreshNodesResources]\" +\n        \" [-refreshSuperUserGroupsConfiguration]\" +\n        \" [-refreshUserToGroupsMappings]\" +\n        \" [-refreshAdminAcls]\" +\n        \" [-refreshServiceAcl]\" +\n        \" [-getGroup [username]]\" +\n        \" [-addToClusterNodeLabels \u003c\\\"label1(exclusive\u003dtrue),\"\n            + \"label2(exclusive\u003dfalse),label3\\\"\u003e]\" +\n        \" [-removeFromClusterNodeLabels \u003clabel1,label2,label3\u003e]\" +\n        \" [-replaceLabelsOnNode [-failOnUnknownNodes] \"\n            + \"\u003c\\\"node1[:port]\u003dlabel1,label2 node2[:port]\u003dlabel1\\\"\u003e]\" +\n        \" [-directlyAccessNodeLabelStore]\" +\n        \" [-refreshClusterMaxPriority]\" +\n        \" [-updateNodeResource [NodeID] [MemSize] [vCores]\" +\n        \" ([OvercommitTimeout])\");\n    if (isHAEnabled) {\n      appendHAUsage(summary);\n    }\n    summary.append(\" [-help [cmd]]\");\n    summary.append(\"\\n\");\n\n    StringBuilder helpBuilder \u003d new StringBuilder();\n    System.out.println(summary);\n    for (String cmdKey : ADMIN_USAGE.keySet()) {\n      buildHelpMsg(cmdKey, helpBuilder);\n      helpBuilder.append(\"\\n\");\n    }\n    if (isHAEnabled) {\n      for (String cmdKey : USAGE.keySet()) {\n        if (!cmdKey.equals(\"-help\") \u0026\u0026 !cmdKey.equals(\"-failover\")) {\n          buildHelpMsg(cmdKey, helpBuilder);\n          helpBuilder.append(\"\\n\");\n        }\n      }\n    }\n    helpBuilder.append(\"   -help [cmd]: Displays help for the given command or all commands\" +\n        \" if none is specified.\");\n    System.out.println(helpBuilder);\n    System.out.println();\n    ToolRunner.printGenericCommandUsage(System.out);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/RMAdminCLI.java",
      "extendedDetails": {}
    },
    "729de3e6b6ae1fcfe1c6bec7102d758ad489df47": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5631. Missing refreshClusterMaxPriority usage in rmadmin help message. Contributed by Kai Sasaki.\n",
      "commitDate": "13/09/16 2:53 AM",
      "commitName": "729de3e6b6ae1fcfe1c6bec7102d758ad489df47",
      "commitAuthor": "Rohith Sharma K S",
      "commitDateOld": "18/08/16 7:27 AM",
      "commitNameOld": "0da69c324dee9baab0f0b9700db1cc5b623f8421",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 25.81,
      "commitsBetweenForRepo": 144,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,48 +1,49 @@\n   private static void printHelp(String cmd, boolean isHAEnabled) {\n     StringBuilder summary \u003d new StringBuilder();\n     summary.append(\"rmadmin is the command to execute YARN administrative \" +\n         \"commands.\\n\");\n     summary.append(\"The full syntax is: \\n\\n\" +\n         \"yarn rmadmin\" +\n         \" [-refreshQueues]\" +\n         \" [-refreshNodes [-g|graceful [timeout in seconds] -client|server]]\" +\n         \" [-refreshNodesResources]\" +\n         \" [-refreshSuperUserGroupsConfiguration]\" +\n         \" [-refreshUserToGroupsMappings]\" +\n         \" [-refreshAdminAcls]\" +\n         \" [-refreshServiceAcl]\" +\n         \" [-getGroup [username]]\" +\n         \" [-addToClusterNodeLabels \u003c\\\"label1(exclusive\u003dtrue),\"\n             + \"label2(exclusive\u003dfalse),label3\\\"\u003e]\" +\n         \" [-removeFromClusterNodeLabels \u003clabel1,label2,label3\u003e]\" +\n         \" [-replaceLabelsOnNode \u003c\\\"node1[:port]\u003dlabel1,label2\" +\n         \" node2[:port]\u003dlabel1\\\"\u003e]\" +\n         \" [-directlyAccessNodeLabelStore]\" +\n+        \" [-refreshClusterMaxPriority]\" +\n         \" [-updateNodeResource [NodeID] [MemSize] [vCores]\" +\n         \" ([OvercommitTimeout])\");\n     if (isHAEnabled) {\n       appendHAUsage(summary);\n     }\n     summary.append(\" [-help [cmd]]\");\n     summary.append(\"\\n\");\n \n     StringBuilder helpBuilder \u003d new StringBuilder();\n     System.out.println(summary);\n     for (String cmdKey : ADMIN_USAGE.keySet()) {\n       buildHelpMsg(cmdKey, helpBuilder);\n       helpBuilder.append(\"\\n\");\n     }\n     if (isHAEnabled) {\n       for (String cmdKey : USAGE.keySet()) {\n         if (!cmdKey.equals(\"-help\") \u0026\u0026 !cmdKey.equals(\"-failover\")) {\n           buildHelpMsg(cmdKey, helpBuilder);\n           helpBuilder.append(\"\\n\");\n         }\n       }\n     }\n     helpBuilder.append(\"   -help [cmd]: Displays help for the given command or all commands\" +\n         \" if none is specified.\");\n     System.out.println(helpBuilder);\n     System.out.println();\n     ToolRunner.printGenericCommandUsage(System.out);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void printHelp(String cmd, boolean isHAEnabled) {\n    StringBuilder summary \u003d new StringBuilder();\n    summary.append(\"rmadmin is the command to execute YARN administrative \" +\n        \"commands.\\n\");\n    summary.append(\"The full syntax is: \\n\\n\" +\n        \"yarn rmadmin\" +\n        \" [-refreshQueues]\" +\n        \" [-refreshNodes [-g|graceful [timeout in seconds] -client|server]]\" +\n        \" [-refreshNodesResources]\" +\n        \" [-refreshSuperUserGroupsConfiguration]\" +\n        \" [-refreshUserToGroupsMappings]\" +\n        \" [-refreshAdminAcls]\" +\n        \" [-refreshServiceAcl]\" +\n        \" [-getGroup [username]]\" +\n        \" [-addToClusterNodeLabels \u003c\\\"label1(exclusive\u003dtrue),\"\n            + \"label2(exclusive\u003dfalse),label3\\\"\u003e]\" +\n        \" [-removeFromClusterNodeLabels \u003clabel1,label2,label3\u003e]\" +\n        \" [-replaceLabelsOnNode \u003c\\\"node1[:port]\u003dlabel1,label2\" +\n        \" node2[:port]\u003dlabel1\\\"\u003e]\" +\n        \" [-directlyAccessNodeLabelStore]\" +\n        \" [-refreshClusterMaxPriority]\" +\n        \" [-updateNodeResource [NodeID] [MemSize] [vCores]\" +\n        \" ([OvercommitTimeout])\");\n    if (isHAEnabled) {\n      appendHAUsage(summary);\n    }\n    summary.append(\" [-help [cmd]]\");\n    summary.append(\"\\n\");\n\n    StringBuilder helpBuilder \u003d new StringBuilder();\n    System.out.println(summary);\n    for (String cmdKey : ADMIN_USAGE.keySet()) {\n      buildHelpMsg(cmdKey, helpBuilder);\n      helpBuilder.append(\"\\n\");\n    }\n    if (isHAEnabled) {\n      for (String cmdKey : USAGE.keySet()) {\n        if (!cmdKey.equals(\"-help\") \u0026\u0026 !cmdKey.equals(\"-failover\")) {\n          buildHelpMsg(cmdKey, helpBuilder);\n          helpBuilder.append(\"\\n\");\n        }\n      }\n    }\n    helpBuilder.append(\"   -help [cmd]: Displays help for the given command or all commands\" +\n        \" if none is specified.\");\n    System.out.println(helpBuilder);\n    System.out.println();\n    ToolRunner.printGenericCommandUsage(System.out);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/RMAdminCLI.java",
      "extendedDetails": {}
    },
    "0da69c324dee9baab0f0b9700db1cc5b623f8421": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4676. Automatic and Asynchronous Decommissioning Nodes Status Tracking. Contributed by Diniel Zhi.\n(cherry picked from commit d464483bf7f0b3e3be3ba32cd6c3eee546747ab5)\n\nConflicts:\n\n\thadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceTrackerService.java\n\thadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmnode/RMNode.java\n\thadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmnode/RMNodeImpl.java\n",
      "commitDate": "18/08/16 7:27 AM",
      "commitName": "0da69c324dee9baab0f0b9700db1cc5b623f8421",
      "commitAuthor": "Junping Du",
      "commitDateOld": "29/07/16 10:26 AM",
      "commitNameOld": "95f2b9859718eca12fb3167775cdd2dad25dde25",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 19.88,
      "commitsBetweenForRepo": 145,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,46 +1,48 @@\n   private static void printHelp(String cmd, boolean isHAEnabled) {\n     StringBuilder summary \u003d new StringBuilder();\n     summary.append(\"rmadmin is the command to execute YARN administrative \" +\n         \"commands.\\n\");\n     summary.append(\"The full syntax is: \\n\\n\" +\n-    \"yarn rmadmin\" +\n-      \" [-refreshQueues]\" +\n-      \" [-refreshNodes [-g [timeout in seconds] -client|server]]\" +\n-      \" [-refreshNodesResources]\" +\n-      \" [-refreshSuperUserGroupsConfiguration]\" +\n-      \" [-refreshUserToGroupsMappings]\" +\n-      \" [-refreshAdminAcls]\" +\n-      \" [-refreshServiceAcl]\" +\n-      \" [-getGroup [username]]\" +\n-      \" [-addToClusterNodeLabels \u003c\\\"label1(exclusive\u003dtrue),\"\n-                  + \"label2(exclusive\u003dfalse),label3\\\"\u003e]\" +\n-      \" [-removeFromClusterNodeLabels \u003clabel1,label2,label3\u003e]\" +\n-      \" [-replaceLabelsOnNode \u003c\\\"node1[:port]\u003dlabel1,label2 node2[:port]\u003dlabel1\\\"\u003e]\" +\n-      \" [-directlyAccessNodeLabelStore]\" +\n-      \" [-updateNodeResource [NodeID] [MemSize] [vCores] ([OvercommitTimeout])\");\n+        \"yarn rmadmin\" +\n+        \" [-refreshQueues]\" +\n+        \" [-refreshNodes [-g|graceful [timeout in seconds] -client|server]]\" +\n+        \" [-refreshNodesResources]\" +\n+        \" [-refreshSuperUserGroupsConfiguration]\" +\n+        \" [-refreshUserToGroupsMappings]\" +\n+        \" [-refreshAdminAcls]\" +\n+        \" [-refreshServiceAcl]\" +\n+        \" [-getGroup [username]]\" +\n+        \" [-addToClusterNodeLabels \u003c\\\"label1(exclusive\u003dtrue),\"\n+            + \"label2(exclusive\u003dfalse),label3\\\"\u003e]\" +\n+        \" [-removeFromClusterNodeLabels \u003clabel1,label2,label3\u003e]\" +\n+        \" [-replaceLabelsOnNode \u003c\\\"node1[:port]\u003dlabel1,label2\" +\n+        \" node2[:port]\u003dlabel1\\\"\u003e]\" +\n+        \" [-directlyAccessNodeLabelStore]\" +\n+        \" [-updateNodeResource [NodeID] [MemSize] [vCores]\" +\n+        \" ([OvercommitTimeout])\");\n     if (isHAEnabled) {\n       appendHAUsage(summary);\n     }\n     summary.append(\" [-help [cmd]]\");\n     summary.append(\"\\n\");\n \n     StringBuilder helpBuilder \u003d new StringBuilder();\n     System.out.println(summary);\n     for (String cmdKey : ADMIN_USAGE.keySet()) {\n       buildHelpMsg(cmdKey, helpBuilder);\n       helpBuilder.append(\"\\n\");\n     }\n     if (isHAEnabled) {\n       for (String cmdKey : USAGE.keySet()) {\n         if (!cmdKey.equals(\"-help\") \u0026\u0026 !cmdKey.equals(\"-failover\")) {\n           buildHelpMsg(cmdKey, helpBuilder);\n           helpBuilder.append(\"\\n\");\n         }\n       }\n     }\n     helpBuilder.append(\"   -help [cmd]: Displays help for the given command or all commands\" +\n         \" if none is specified.\");\n     System.out.println(helpBuilder);\n     System.out.println();\n     ToolRunner.printGenericCommandUsage(System.out);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void printHelp(String cmd, boolean isHAEnabled) {\n    StringBuilder summary \u003d new StringBuilder();\n    summary.append(\"rmadmin is the command to execute YARN administrative \" +\n        \"commands.\\n\");\n    summary.append(\"The full syntax is: \\n\\n\" +\n        \"yarn rmadmin\" +\n        \" [-refreshQueues]\" +\n        \" [-refreshNodes [-g|graceful [timeout in seconds] -client|server]]\" +\n        \" [-refreshNodesResources]\" +\n        \" [-refreshSuperUserGroupsConfiguration]\" +\n        \" [-refreshUserToGroupsMappings]\" +\n        \" [-refreshAdminAcls]\" +\n        \" [-refreshServiceAcl]\" +\n        \" [-getGroup [username]]\" +\n        \" [-addToClusterNodeLabels \u003c\\\"label1(exclusive\u003dtrue),\"\n            + \"label2(exclusive\u003dfalse),label3\\\"\u003e]\" +\n        \" [-removeFromClusterNodeLabels \u003clabel1,label2,label3\u003e]\" +\n        \" [-replaceLabelsOnNode \u003c\\\"node1[:port]\u003dlabel1,label2\" +\n        \" node2[:port]\u003dlabel1\\\"\u003e]\" +\n        \" [-directlyAccessNodeLabelStore]\" +\n        \" [-updateNodeResource [NodeID] [MemSize] [vCores]\" +\n        \" ([OvercommitTimeout])\");\n    if (isHAEnabled) {\n      appendHAUsage(summary);\n    }\n    summary.append(\" [-help [cmd]]\");\n    summary.append(\"\\n\");\n\n    StringBuilder helpBuilder \u003d new StringBuilder();\n    System.out.println(summary);\n    for (String cmdKey : ADMIN_USAGE.keySet()) {\n      buildHelpMsg(cmdKey, helpBuilder);\n      helpBuilder.append(\"\\n\");\n    }\n    if (isHAEnabled) {\n      for (String cmdKey : USAGE.keySet()) {\n        if (!cmdKey.equals(\"-help\") \u0026\u0026 !cmdKey.equals(\"-failover\")) {\n          buildHelpMsg(cmdKey, helpBuilder);\n          helpBuilder.append(\"\\n\");\n        }\n      }\n    }\n    helpBuilder.append(\"   -help [cmd]: Displays help for the given command or all commands\" +\n        \" if none is specified.\");\n    System.out.println(helpBuilder);\n    System.out.println();\n    ToolRunner.printGenericCommandUsage(System.out);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/RMAdminCLI.java",
      "extendedDetails": {}
    },
    "95f2b9859718eca12fb3167775cdd2dad25dde25": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5434. Add -client|server argument for graceful decommmission. Contributed by Robert Kanter.\n",
      "commitDate": "29/07/16 10:26 AM",
      "commitName": "95f2b9859718eca12fb3167775cdd2dad25dde25",
      "commitAuthor": "Junping Du",
      "commitDateOld": "14/06/16 3:06 PM",
      "commitNameOld": "c77a1095dc556e8bea87df6d8ddf36e898f27e86",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 44.81,
      "commitsBetweenForRepo": 428,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,46 +1,46 @@\n   private static void printHelp(String cmd, boolean isHAEnabled) {\n     StringBuilder summary \u003d new StringBuilder();\n     summary.append(\"rmadmin is the command to execute YARN administrative \" +\n         \"commands.\\n\");\n     summary.append(\"The full syntax is: \\n\\n\" +\n     \"yarn rmadmin\" +\n       \" [-refreshQueues]\" +\n-      \" [-refreshNodes [-g [timeout in seconds]]]\" +\n+      \" [-refreshNodes [-g [timeout in seconds] -client|server]]\" +\n       \" [-refreshNodesResources]\" +\n       \" [-refreshSuperUserGroupsConfiguration]\" +\n       \" [-refreshUserToGroupsMappings]\" +\n       \" [-refreshAdminAcls]\" +\n       \" [-refreshServiceAcl]\" +\n       \" [-getGroup [username]]\" +\n       \" [-addToClusterNodeLabels \u003c\\\"label1(exclusive\u003dtrue),\"\n                   + \"label2(exclusive\u003dfalse),label3\\\"\u003e]\" +\n       \" [-removeFromClusterNodeLabels \u003clabel1,label2,label3\u003e]\" +\n       \" [-replaceLabelsOnNode \u003c\\\"node1[:port]\u003dlabel1,label2 node2[:port]\u003dlabel1\\\"\u003e]\" +\n       \" [-directlyAccessNodeLabelStore]\" +\n       \" [-updateNodeResource [NodeID] [MemSize] [vCores] ([OvercommitTimeout])\");\n     if (isHAEnabled) {\n       appendHAUsage(summary);\n     }\n     summary.append(\" [-help [cmd]]\");\n     summary.append(\"\\n\");\n \n     StringBuilder helpBuilder \u003d new StringBuilder();\n     System.out.println(summary);\n     for (String cmdKey : ADMIN_USAGE.keySet()) {\n       buildHelpMsg(cmdKey, helpBuilder);\n       helpBuilder.append(\"\\n\");\n     }\n     if (isHAEnabled) {\n       for (String cmdKey : USAGE.keySet()) {\n         if (!cmdKey.equals(\"-help\") \u0026\u0026 !cmdKey.equals(\"-failover\")) {\n           buildHelpMsg(cmdKey, helpBuilder);\n           helpBuilder.append(\"\\n\");\n         }\n       }\n     }\n     helpBuilder.append(\"   -help [cmd]: Displays help for the given command or all commands\" +\n         \" if none is specified.\");\n     System.out.println(helpBuilder);\n     System.out.println();\n     ToolRunner.printGenericCommandUsage(System.out);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void printHelp(String cmd, boolean isHAEnabled) {\n    StringBuilder summary \u003d new StringBuilder();\n    summary.append(\"rmadmin is the command to execute YARN administrative \" +\n        \"commands.\\n\");\n    summary.append(\"The full syntax is: \\n\\n\" +\n    \"yarn rmadmin\" +\n      \" [-refreshQueues]\" +\n      \" [-refreshNodes [-g [timeout in seconds] -client|server]]\" +\n      \" [-refreshNodesResources]\" +\n      \" [-refreshSuperUserGroupsConfiguration]\" +\n      \" [-refreshUserToGroupsMappings]\" +\n      \" [-refreshAdminAcls]\" +\n      \" [-refreshServiceAcl]\" +\n      \" [-getGroup [username]]\" +\n      \" [-addToClusterNodeLabels \u003c\\\"label1(exclusive\u003dtrue),\"\n                  + \"label2(exclusive\u003dfalse),label3\\\"\u003e]\" +\n      \" [-removeFromClusterNodeLabels \u003clabel1,label2,label3\u003e]\" +\n      \" [-replaceLabelsOnNode \u003c\\\"node1[:port]\u003dlabel1,label2 node2[:port]\u003dlabel1\\\"\u003e]\" +\n      \" [-directlyAccessNodeLabelStore]\" +\n      \" [-updateNodeResource [NodeID] [MemSize] [vCores] ([OvercommitTimeout])\");\n    if (isHAEnabled) {\n      appendHAUsage(summary);\n    }\n    summary.append(\" [-help [cmd]]\");\n    summary.append(\"\\n\");\n\n    StringBuilder helpBuilder \u003d new StringBuilder();\n    System.out.println(summary);\n    for (String cmdKey : ADMIN_USAGE.keySet()) {\n      buildHelpMsg(cmdKey, helpBuilder);\n      helpBuilder.append(\"\\n\");\n    }\n    if (isHAEnabled) {\n      for (String cmdKey : USAGE.keySet()) {\n        if (!cmdKey.equals(\"-help\") \u0026\u0026 !cmdKey.equals(\"-failover\")) {\n          buildHelpMsg(cmdKey, helpBuilder);\n          helpBuilder.append(\"\\n\");\n        }\n      }\n    }\n    helpBuilder.append(\"   -help [cmd]: Displays help for the given command or all commands\" +\n        \" if none is specified.\");\n    System.out.println(helpBuilder);\n    System.out.println();\n    ToolRunner.printGenericCommandUsage(System.out);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/RMAdminCLI.java",
      "extendedDetails": {}
    },
    "62b0d6151362a9860d4d750e6e0d032882af68aa": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4534. Remove the redundant symbol in yarn rmadmin help msg. Contributed by Lin Yiqun.\n",
      "commitDate": "13/01/16 8:59 PM",
      "commitName": "62b0d6151362a9860d4d750e6e0d032882af68aa",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "24/11/15 4:35 PM",
      "commitNameOld": "23c625ec571b01c0a2811728608890da38f86890",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 50.18,
      "commitsBetweenForRepo": 265,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,46 +1,46 @@\n   private static void printHelp(String cmd, boolean isHAEnabled) {\n     StringBuilder summary \u003d new StringBuilder();\n     summary.append(\"rmadmin is the command to execute YARN administrative \" +\n         \"commands.\\n\");\n     summary.append(\"The full syntax is: \\n\\n\" +\n     \"yarn rmadmin\" +\n       \" [-refreshQueues]\" +\n       \" [-refreshNodes [-g [timeout in seconds]]]\" +\n       \" [-refreshNodesResources]\" +\n       \" [-refreshSuperUserGroupsConfiguration]\" +\n       \" [-refreshUserToGroupsMappings]\" +\n       \" [-refreshAdminAcls]\" +\n       \" [-refreshServiceAcl]\" +\n       \" [-getGroup [username]]\" +\n       \" [-addToClusterNodeLabels \u003c\\\"label1(exclusive\u003dtrue),\"\n                   + \"label2(exclusive\u003dfalse),label3\\\"\u003e]\" +\n       \" [-removeFromClusterNodeLabels \u003clabel1,label2,label3\u003e]\" +\n       \" [-replaceLabelsOnNode \u003c\\\"node1[:port]\u003dlabel1,label2 node2[:port]\u003dlabel1\\\"\u003e]\" +\n-      \" [-directlyAccessNodeLabelStore]]\" +\n+      \" [-directlyAccessNodeLabelStore]\" +\n       \" [-updateNodeResource [NodeID] [MemSize] [vCores] ([OvercommitTimeout])\");\n     if (isHAEnabled) {\n       appendHAUsage(summary);\n     }\n     summary.append(\" [-help [cmd]]\");\n     summary.append(\"\\n\");\n \n     StringBuilder helpBuilder \u003d new StringBuilder();\n     System.out.println(summary);\n     for (String cmdKey : ADMIN_USAGE.keySet()) {\n       buildHelpMsg(cmdKey, helpBuilder);\n       helpBuilder.append(\"\\n\");\n     }\n     if (isHAEnabled) {\n       for (String cmdKey : USAGE.keySet()) {\n         if (!cmdKey.equals(\"-help\") \u0026\u0026 !cmdKey.equals(\"-failover\")) {\n           buildHelpMsg(cmdKey, helpBuilder);\n           helpBuilder.append(\"\\n\");\n         }\n       }\n     }\n     helpBuilder.append(\"   -help [cmd]: Displays help for the given command or all commands\" +\n         \" if none is specified.\");\n     System.out.println(helpBuilder);\n     System.out.println();\n     ToolRunner.printGenericCommandUsage(System.out);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void printHelp(String cmd, boolean isHAEnabled) {\n    StringBuilder summary \u003d new StringBuilder();\n    summary.append(\"rmadmin is the command to execute YARN administrative \" +\n        \"commands.\\n\");\n    summary.append(\"The full syntax is: \\n\\n\" +\n    \"yarn rmadmin\" +\n      \" [-refreshQueues]\" +\n      \" [-refreshNodes [-g [timeout in seconds]]]\" +\n      \" [-refreshNodesResources]\" +\n      \" [-refreshSuperUserGroupsConfiguration]\" +\n      \" [-refreshUserToGroupsMappings]\" +\n      \" [-refreshAdminAcls]\" +\n      \" [-refreshServiceAcl]\" +\n      \" [-getGroup [username]]\" +\n      \" [-addToClusterNodeLabels \u003c\\\"label1(exclusive\u003dtrue),\"\n                  + \"label2(exclusive\u003dfalse),label3\\\"\u003e]\" +\n      \" [-removeFromClusterNodeLabels \u003clabel1,label2,label3\u003e]\" +\n      \" [-replaceLabelsOnNode \u003c\\\"node1[:port]\u003dlabel1,label2 node2[:port]\u003dlabel1\\\"\u003e]\" +\n      \" [-directlyAccessNodeLabelStore]\" +\n      \" [-updateNodeResource [NodeID] [MemSize] [vCores] ([OvercommitTimeout])\");\n    if (isHAEnabled) {\n      appendHAUsage(summary);\n    }\n    summary.append(\" [-help [cmd]]\");\n    summary.append(\"\\n\");\n\n    StringBuilder helpBuilder \u003d new StringBuilder();\n    System.out.println(summary);\n    for (String cmdKey : ADMIN_USAGE.keySet()) {\n      buildHelpMsg(cmdKey, helpBuilder);\n      helpBuilder.append(\"\\n\");\n    }\n    if (isHAEnabled) {\n      for (String cmdKey : USAGE.keySet()) {\n        if (!cmdKey.equals(\"-help\") \u0026\u0026 !cmdKey.equals(\"-failover\")) {\n          buildHelpMsg(cmdKey, helpBuilder);\n          helpBuilder.append(\"\\n\");\n        }\n      }\n    }\n    helpBuilder.append(\"   -help [cmd]: Displays help for the given command or all commands\" +\n        \" if none is specified.\");\n    System.out.println(helpBuilder);\n    System.out.println();\n    ToolRunner.printGenericCommandUsage(System.out);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/RMAdminCLI.java",
      "extendedDetails": {}
    },
    "73e3a49eb0d58f08549dc6b7054eb5c1f62819dc": {
      "type": "Ybodychange",
      "commitMessage": "YARN-313. Add Admin API for supporting node resource configuration in command line. (Contributed by Inigo Goiri, Kenji Kikushima and Junping Du)\n",
      "commitDate": "15/09/15 7:56 AM",
      "commitName": "73e3a49eb0d58f08549dc6b7054eb5c1f62819dc",
      "commitAuthor": "Junping Du",
      "commitDateOld": "27/08/15 1:25 PM",
      "commitNameOld": "a9c8ea71aa427ff5f25caec98be15bc880e578a7",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 18.77,
      "commitsBetweenForRepo": 106,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,44 +1,46 @@\n   private static void printHelp(String cmd, boolean isHAEnabled) {\n     StringBuilder summary \u003d new StringBuilder();\n     summary.append(\"rmadmin is the command to execute YARN administrative \" +\n         \"commands.\\n\");\n     summary.append(\"The full syntax is: \\n\\n\" +\n     \"yarn rmadmin\" +\n       \" [-refreshQueues]\" +\n       \" [-refreshNodes [-g [timeout in seconds]]]\" +\n+      \" [-refreshNodesResources]\" +\n       \" [-refreshSuperUserGroupsConfiguration]\" +\n       \" [-refreshUserToGroupsMappings]\" +\n       \" [-refreshAdminAcls]\" +\n       \" [-refreshServiceAcl]\" +\n       \" [-getGroup [username]]\" +\n       \" [-addToClusterNodeLabels \u003c\\\"label1(exclusive\u003dtrue),\"\n                   + \"label2(exclusive\u003dfalse),label3\\\"\u003e]\" +\n       \" [-removeFromClusterNodeLabels \u003clabel1,label2,label3\u003e]\" +\n       \" [-replaceLabelsOnNode \u003c\\\"node1[:port]\u003dlabel1,label2 node2[:port]\u003dlabel1\\\"\u003e]\" +\n-      \" [-directlyAccessNodeLabelStore]]\");\n+      \" [-directlyAccessNodeLabelStore]]\" +\n+      \" [-updateNodeResource [NodeID] [MemSize] [vCores] ([OvercommitTimeout])\");\n     if (isHAEnabled) {\n       appendHAUsage(summary);\n     }\n     summary.append(\" [-help [cmd]]\");\n     summary.append(\"\\n\");\n \n     StringBuilder helpBuilder \u003d new StringBuilder();\n     System.out.println(summary);\n     for (String cmdKey : ADMIN_USAGE.keySet()) {\n       buildHelpMsg(cmdKey, helpBuilder);\n       helpBuilder.append(\"\\n\");\n     }\n     if (isHAEnabled) {\n       for (String cmdKey : USAGE.keySet()) {\n         if (!cmdKey.equals(\"-help\") \u0026\u0026 !cmdKey.equals(\"-failover\")) {\n           buildHelpMsg(cmdKey, helpBuilder);\n           helpBuilder.append(\"\\n\");\n         }\n       }\n     }\n     helpBuilder.append(\"   -help [cmd]: Displays help for the given command or all commands\" +\n         \" if none is specified.\");\n     System.out.println(helpBuilder);\n     System.out.println();\n     ToolRunner.printGenericCommandUsage(System.out);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void printHelp(String cmd, boolean isHAEnabled) {\n    StringBuilder summary \u003d new StringBuilder();\n    summary.append(\"rmadmin is the command to execute YARN administrative \" +\n        \"commands.\\n\");\n    summary.append(\"The full syntax is: \\n\\n\" +\n    \"yarn rmadmin\" +\n      \" [-refreshQueues]\" +\n      \" [-refreshNodes [-g [timeout in seconds]]]\" +\n      \" [-refreshNodesResources]\" +\n      \" [-refreshSuperUserGroupsConfiguration]\" +\n      \" [-refreshUserToGroupsMappings]\" +\n      \" [-refreshAdminAcls]\" +\n      \" [-refreshServiceAcl]\" +\n      \" [-getGroup [username]]\" +\n      \" [-addToClusterNodeLabels \u003c\\\"label1(exclusive\u003dtrue),\"\n                  + \"label2(exclusive\u003dfalse),label3\\\"\u003e]\" +\n      \" [-removeFromClusterNodeLabels \u003clabel1,label2,label3\u003e]\" +\n      \" [-replaceLabelsOnNode \u003c\\\"node1[:port]\u003dlabel1,label2 node2[:port]\u003dlabel1\\\"\u003e]\" +\n      \" [-directlyAccessNodeLabelStore]]\" +\n      \" [-updateNodeResource [NodeID] [MemSize] [vCores] ([OvercommitTimeout])\");\n    if (isHAEnabled) {\n      appendHAUsage(summary);\n    }\n    summary.append(\" [-help [cmd]]\");\n    summary.append(\"\\n\");\n\n    StringBuilder helpBuilder \u003d new StringBuilder();\n    System.out.println(summary);\n    for (String cmdKey : ADMIN_USAGE.keySet()) {\n      buildHelpMsg(cmdKey, helpBuilder);\n      helpBuilder.append(\"\\n\");\n    }\n    if (isHAEnabled) {\n      for (String cmdKey : USAGE.keySet()) {\n        if (!cmdKey.equals(\"-help\") \u0026\u0026 !cmdKey.equals(\"-failover\")) {\n          buildHelpMsg(cmdKey, helpBuilder);\n          helpBuilder.append(\"\\n\");\n        }\n      }\n    }\n    helpBuilder.append(\"   -help [cmd]: Displays help for the given command or all commands\" +\n        \" if none is specified.\");\n    System.out.println(helpBuilder);\n    System.out.println();\n    ToolRunner.printGenericCommandUsage(System.out);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/RMAdminCLI.java",
      "extendedDetails": {}
    },
    "cab7674e54c4fe56838668462de99a6787841309": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3581. Deprecate -directlyAccessNodeLabelStore in RMAdminCLI. (Naganarasimha G R via wangda)\n",
      "commitDate": "27/05/15 3:34 PM",
      "commitName": "cab7674e54c4fe56838668462de99a6787841309",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "23/04/15 11:19 AM",
      "commitNameOld": "f5fe35e297ed4a00a1ba93d090207ef67cebcc9d",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 34.18,
      "commitsBetweenForRepo": 359,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,43 +1,44 @@\n   private static void printHelp(String cmd, boolean isHAEnabled) {\n     StringBuilder summary \u003d new StringBuilder();\n     summary.append(\"rmadmin is the command to execute YARN administrative \" +\n         \"commands.\\n\");\n     summary.append(\"The full syntax is: \\n\\n\" +\n     \"yarn rmadmin\" +\n       \" [-refreshQueues]\" +\n       \" [-refreshNodes [-g [timeout in seconds]]]\" +\n       \" [-refreshSuperUserGroupsConfiguration]\" +\n       \" [-refreshUserToGroupsMappings]\" +\n       \" [-refreshAdminAcls]\" +\n       \" [-refreshServiceAcl]\" +\n       \" [-getGroup [username]]\" +\n-      \" [[-addToClusterNodeLabels [label1,label2,label3]]\" +\n-      \" [-removeFromClusterNodeLabels [label1,label2,label3]]\" +\n-      \" [-replaceLabelsOnNode [node1[:port]\u003dlabel1,label2 node2[:port]\u003dlabel1]\" +\n+      \" [-addToClusterNodeLabels \u003c\\\"label1(exclusive\u003dtrue),\"\n+                  + \"label2(exclusive\u003dfalse),label3\\\"\u003e]\" +\n+      \" [-removeFromClusterNodeLabels \u003clabel1,label2,label3\u003e]\" +\n+      \" [-replaceLabelsOnNode \u003c\\\"node1[:port]\u003dlabel1,label2 node2[:port]\u003dlabel1\\\"\u003e]\" +\n       \" [-directlyAccessNodeLabelStore]]\");\n     if (isHAEnabled) {\n       appendHAUsage(summary);\n     }\n     summary.append(\" [-help [cmd]]\");\n     summary.append(\"\\n\");\n \n     StringBuilder helpBuilder \u003d new StringBuilder();\n     System.out.println(summary);\n     for (String cmdKey : ADMIN_USAGE.keySet()) {\n       buildHelpMsg(cmdKey, helpBuilder);\n       helpBuilder.append(\"\\n\");\n     }\n     if (isHAEnabled) {\n       for (String cmdKey : USAGE.keySet()) {\n         if (!cmdKey.equals(\"-help\") \u0026\u0026 !cmdKey.equals(\"-failover\")) {\n           buildHelpMsg(cmdKey, helpBuilder);\n           helpBuilder.append(\"\\n\");\n         }\n       }\n     }\n     helpBuilder.append(\"   -help [cmd]: Displays help for the given command or all commands\" +\n         \" if none is specified.\");\n     System.out.println(helpBuilder);\n     System.out.println();\n     ToolRunner.printGenericCommandUsage(System.out);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void printHelp(String cmd, boolean isHAEnabled) {\n    StringBuilder summary \u003d new StringBuilder();\n    summary.append(\"rmadmin is the command to execute YARN administrative \" +\n        \"commands.\\n\");\n    summary.append(\"The full syntax is: \\n\\n\" +\n    \"yarn rmadmin\" +\n      \" [-refreshQueues]\" +\n      \" [-refreshNodes [-g [timeout in seconds]]]\" +\n      \" [-refreshSuperUserGroupsConfiguration]\" +\n      \" [-refreshUserToGroupsMappings]\" +\n      \" [-refreshAdminAcls]\" +\n      \" [-refreshServiceAcl]\" +\n      \" [-getGroup [username]]\" +\n      \" [-addToClusterNodeLabels \u003c\\\"label1(exclusive\u003dtrue),\"\n                  + \"label2(exclusive\u003dfalse),label3\\\"\u003e]\" +\n      \" [-removeFromClusterNodeLabels \u003clabel1,label2,label3\u003e]\" +\n      \" [-replaceLabelsOnNode \u003c\\\"node1[:port]\u003dlabel1,label2 node2[:port]\u003dlabel1\\\"\u003e]\" +\n      \" [-directlyAccessNodeLabelStore]]\");\n    if (isHAEnabled) {\n      appendHAUsage(summary);\n    }\n    summary.append(\" [-help [cmd]]\");\n    summary.append(\"\\n\");\n\n    StringBuilder helpBuilder \u003d new StringBuilder();\n    System.out.println(summary);\n    for (String cmdKey : ADMIN_USAGE.keySet()) {\n      buildHelpMsg(cmdKey, helpBuilder);\n      helpBuilder.append(\"\\n\");\n    }\n    if (isHAEnabled) {\n      for (String cmdKey : USAGE.keySet()) {\n        if (!cmdKey.equals(\"-help\") \u0026\u0026 !cmdKey.equals(\"-failover\")) {\n          buildHelpMsg(cmdKey, helpBuilder);\n          helpBuilder.append(\"\\n\");\n        }\n      }\n    }\n    helpBuilder.append(\"   -help [cmd]: Displays help for the given command or all commands\" +\n        \" if none is specified.\");\n    System.out.println(helpBuilder);\n    System.out.println();\n    ToolRunner.printGenericCommandUsage(System.out);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/RMAdminCLI.java",
      "extendedDetails": {}
    },
    "fad9d7e85b1ba0934ab592daa9d3c9550b2bb501": {
      "type": "Ybodychange",
      "commitMessage": "New parameter of CLI for decommissioning node gracefully in RMAdmin CLI. Contributed by Devaraj K\n",
      "commitDate": "22/04/15 10:07 AM",
      "commitName": "fad9d7e85b1ba0934ab592daa9d3c9550b2bb501",
      "commitAuthor": "Junping Du",
      "commitDateOld": "25/03/15 7:42 AM",
      "commitNameOld": "c906a1de7280dabd9d9d8b6aeaa060898e6d17b6",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 28.1,
      "commitsBetweenForRepo": 224,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,43 +1,43 @@\n   private static void printHelp(String cmd, boolean isHAEnabled) {\n     StringBuilder summary \u003d new StringBuilder();\n     summary.append(\"rmadmin is the command to execute YARN administrative \" +\n         \"commands.\\n\");\n     summary.append(\"The full syntax is: \\n\\n\" +\n     \"yarn rmadmin\" +\n       \" [-refreshQueues]\" +\n-      \" [-refreshNodes]\" +\n+      \" [-refreshNodes [-g [timeout in seconds]]]\" +\n       \" [-refreshSuperUserGroupsConfiguration]\" +\n       \" [-refreshUserToGroupsMappings]\" +\n       \" [-refreshAdminAcls]\" +\n       \" [-refreshServiceAcl]\" +\n       \" [-getGroup [username]]\" +\n       \" [[-addToClusterNodeLabels [label1,label2,label3]]\" +\n       \" [-removeFromClusterNodeLabels [label1,label2,label3]]\" +\n       \" [-replaceLabelsOnNode [node1[:port]\u003dlabel1,label2 node2[:port]\u003dlabel1]\" +\n       \" [-directlyAccessNodeLabelStore]]\");\n     if (isHAEnabled) {\n       appendHAUsage(summary);\n     }\n     summary.append(\" [-help [cmd]]\");\n     summary.append(\"\\n\");\n \n     StringBuilder helpBuilder \u003d new StringBuilder();\n     System.out.println(summary);\n     for (String cmdKey : ADMIN_USAGE.keySet()) {\n       buildHelpMsg(cmdKey, helpBuilder);\n       helpBuilder.append(\"\\n\");\n     }\n     if (isHAEnabled) {\n       for (String cmdKey : USAGE.keySet()) {\n         if (!cmdKey.equals(\"-help\") \u0026\u0026 !cmdKey.equals(\"-failover\")) {\n           buildHelpMsg(cmdKey, helpBuilder);\n           helpBuilder.append(\"\\n\");\n         }\n       }\n     }\n     helpBuilder.append(\"   -help [cmd]: Displays help for the given command or all commands\" +\n         \" if none is specified.\");\n     System.out.println(helpBuilder);\n     System.out.println();\n     ToolRunner.printGenericCommandUsage(System.out);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void printHelp(String cmd, boolean isHAEnabled) {\n    StringBuilder summary \u003d new StringBuilder();\n    summary.append(\"rmadmin is the command to execute YARN administrative \" +\n        \"commands.\\n\");\n    summary.append(\"The full syntax is: \\n\\n\" +\n    \"yarn rmadmin\" +\n      \" [-refreshQueues]\" +\n      \" [-refreshNodes [-g [timeout in seconds]]]\" +\n      \" [-refreshSuperUserGroupsConfiguration]\" +\n      \" [-refreshUserToGroupsMappings]\" +\n      \" [-refreshAdminAcls]\" +\n      \" [-refreshServiceAcl]\" +\n      \" [-getGroup [username]]\" +\n      \" [[-addToClusterNodeLabels [label1,label2,label3]]\" +\n      \" [-removeFromClusterNodeLabels [label1,label2,label3]]\" +\n      \" [-replaceLabelsOnNode [node1[:port]\u003dlabel1,label2 node2[:port]\u003dlabel1]\" +\n      \" [-directlyAccessNodeLabelStore]]\");\n    if (isHAEnabled) {\n      appendHAUsage(summary);\n    }\n    summary.append(\" [-help [cmd]]\");\n    summary.append(\"\\n\");\n\n    StringBuilder helpBuilder \u003d new StringBuilder();\n    System.out.println(summary);\n    for (String cmdKey : ADMIN_USAGE.keySet()) {\n      buildHelpMsg(cmdKey, helpBuilder);\n      helpBuilder.append(\"\\n\");\n    }\n    if (isHAEnabled) {\n      for (String cmdKey : USAGE.keySet()) {\n        if (!cmdKey.equals(\"-help\") \u0026\u0026 !cmdKey.equals(\"-failover\")) {\n          buildHelpMsg(cmdKey, helpBuilder);\n          helpBuilder.append(\"\\n\");\n        }\n      }\n    }\n    helpBuilder.append(\"   -help [cmd]: Displays help for the given command or all commands\" +\n        \" if none is specified.\");\n    System.out.println(helpBuilder);\n    System.out.println();\n    ToolRunner.printGenericCommandUsage(System.out);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/RMAdminCLI.java",
      "extendedDetails": {}
    },
    "c906a1de7280dabd9d9d8b6aeaa060898e6d17b6": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3397. yarn rmadmin should skip -failover. (J.Andreina via kasha)\n",
      "commitDate": "25/03/15 7:42 AM",
      "commitName": "c906a1de7280dabd9d9d8b6aeaa060898e6d17b6",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "12/02/15 9:39 PM",
      "commitNameOld": "253035491ce208a8c9b50a20da91f5b8e679eebf",
      "commitAuthorOld": "Xuan",
      "daysBetweenCommits": 40.38,
      "commitsBetweenForRepo": 351,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,43 +1,43 @@\n   private static void printHelp(String cmd, boolean isHAEnabled) {\n     StringBuilder summary \u003d new StringBuilder();\n     summary.append(\"rmadmin is the command to execute YARN administrative \" +\n         \"commands.\\n\");\n     summary.append(\"The full syntax is: \\n\\n\" +\n     \"yarn rmadmin\" +\n       \" [-refreshQueues]\" +\n       \" [-refreshNodes]\" +\n       \" [-refreshSuperUserGroupsConfiguration]\" +\n       \" [-refreshUserToGroupsMappings]\" +\n       \" [-refreshAdminAcls]\" +\n       \" [-refreshServiceAcl]\" +\n       \" [-getGroup [username]]\" +\n       \" [[-addToClusterNodeLabels [label1,label2,label3]]\" +\n       \" [-removeFromClusterNodeLabels [label1,label2,label3]]\" +\n       \" [-replaceLabelsOnNode [node1[:port]\u003dlabel1,label2 node2[:port]\u003dlabel1]\" +\n       \" [-directlyAccessNodeLabelStore]]\");\n     if (isHAEnabled) {\n       appendHAUsage(summary);\n     }\n     summary.append(\" [-help [cmd]]\");\n     summary.append(\"\\n\");\n \n     StringBuilder helpBuilder \u003d new StringBuilder();\n     System.out.println(summary);\n     for (String cmdKey : ADMIN_USAGE.keySet()) {\n       buildHelpMsg(cmdKey, helpBuilder);\n       helpBuilder.append(\"\\n\");\n     }\n     if (isHAEnabled) {\n       for (String cmdKey : USAGE.keySet()) {\n-        if (!cmdKey.equals(\"-help\")) {\n+        if (!cmdKey.equals(\"-help\") \u0026\u0026 !cmdKey.equals(\"-failover\")) {\n           buildHelpMsg(cmdKey, helpBuilder);\n           helpBuilder.append(\"\\n\");\n         }\n       }\n     }\n     helpBuilder.append(\"   -help [cmd]: Displays help for the given command or all commands\" +\n         \" if none is specified.\");\n     System.out.println(helpBuilder);\n     System.out.println();\n     ToolRunner.printGenericCommandUsage(System.out);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void printHelp(String cmd, boolean isHAEnabled) {\n    StringBuilder summary \u003d new StringBuilder();\n    summary.append(\"rmadmin is the command to execute YARN administrative \" +\n        \"commands.\\n\");\n    summary.append(\"The full syntax is: \\n\\n\" +\n    \"yarn rmadmin\" +\n      \" [-refreshQueues]\" +\n      \" [-refreshNodes]\" +\n      \" [-refreshSuperUserGroupsConfiguration]\" +\n      \" [-refreshUserToGroupsMappings]\" +\n      \" [-refreshAdminAcls]\" +\n      \" [-refreshServiceAcl]\" +\n      \" [-getGroup [username]]\" +\n      \" [[-addToClusterNodeLabels [label1,label2,label3]]\" +\n      \" [-removeFromClusterNodeLabels [label1,label2,label3]]\" +\n      \" [-replaceLabelsOnNode [node1[:port]\u003dlabel1,label2 node2[:port]\u003dlabel1]\" +\n      \" [-directlyAccessNodeLabelStore]]\");\n    if (isHAEnabled) {\n      appendHAUsage(summary);\n    }\n    summary.append(\" [-help [cmd]]\");\n    summary.append(\"\\n\");\n\n    StringBuilder helpBuilder \u003d new StringBuilder();\n    System.out.println(summary);\n    for (String cmdKey : ADMIN_USAGE.keySet()) {\n      buildHelpMsg(cmdKey, helpBuilder);\n      helpBuilder.append(\"\\n\");\n    }\n    if (isHAEnabled) {\n      for (String cmdKey : USAGE.keySet()) {\n        if (!cmdKey.equals(\"-help\") \u0026\u0026 !cmdKey.equals(\"-failover\")) {\n          buildHelpMsg(cmdKey, helpBuilder);\n          helpBuilder.append(\"\\n\");\n        }\n      }\n    }\n    helpBuilder.append(\"   -help [cmd]: Displays help for the given command or all commands\" +\n        \" if none is specified.\");\n    System.out.println(helpBuilder);\n    System.out.println();\n    ToolRunner.printGenericCommandUsage(System.out);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/RMAdminCLI.java",
      "extendedDetails": {}
    },
    "fd93e5387b554a78413bc0f14b729e58fea604ea": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3028. Better syntax for replaceLabelsOnNode in RMAdmin CLI. Contributed by Rohith Sharmaks\n",
      "commitDate": "27/01/15 3:23 PM",
      "commitName": "fd93e5387b554a78413bc0f14b729e58fea604ea",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "23/12/14 6:23 PM",
      "commitNameOld": "e1ee0d45ea3315e7fbe1d28a7a35a0ce0c54483b",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 34.88,
      "commitsBetweenForRepo": 183,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,43 +1,43 @@\n   private static void printHelp(String cmd, boolean isHAEnabled) {\n     StringBuilder summary \u003d new StringBuilder();\n     summary.append(\"rmadmin is the command to execute YARN administrative \" +\n         \"commands.\\n\");\n     summary.append(\"The full syntax is: \\n\\n\" +\n     \"yarn rmadmin\" +\n       \" [-refreshQueues]\" +\n       \" [-refreshNodes]\" +\n       \" [-refreshSuperUserGroupsConfiguration]\" +\n       \" [-refreshUserToGroupsMappings]\" +\n       \" [-refreshAdminAcls]\" +\n       \" [-refreshServiceAcl]\" +\n       \" [-getGroup [username]]\" +\n       \" [[-addToClusterNodeLabels [label1,label2,label3]]\" +\n       \" [-removeFromClusterNodeLabels [label1,label2,label3]]\" +\n-      \" [-replaceLabelsOnNode [node1:port,label1,label2 node2:port,label1]\" +\n+      \" [-replaceLabelsOnNode [node1[:port]\u003dlabel1,label2 node2[:port]\u003dlabel1]\" +\n       \" [-directlyAccessNodeLabelStore]]\");\n     if (isHAEnabled) {\n       appendHAUsage(summary);\n     }\n     summary.append(\" [-help [cmd]]\");\n     summary.append(\"\\n\");\n \n     StringBuilder helpBuilder \u003d new StringBuilder();\n     System.out.println(summary);\n     for (String cmdKey : ADMIN_USAGE.keySet()) {\n       buildHelpMsg(cmdKey, helpBuilder);\n       helpBuilder.append(\"\\n\");\n     }\n     if (isHAEnabled) {\n       for (String cmdKey : USAGE.keySet()) {\n         if (!cmdKey.equals(\"-help\")) {\n           buildHelpMsg(cmdKey, helpBuilder);\n           helpBuilder.append(\"\\n\");\n         }\n       }\n     }\n     helpBuilder.append(\"   -help [cmd]: Displays help for the given command or all commands\" +\n         \" if none is specified.\");\n     System.out.println(helpBuilder);\n     System.out.println();\n     ToolRunner.printGenericCommandUsage(System.out);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void printHelp(String cmd, boolean isHAEnabled) {\n    StringBuilder summary \u003d new StringBuilder();\n    summary.append(\"rmadmin is the command to execute YARN administrative \" +\n        \"commands.\\n\");\n    summary.append(\"The full syntax is: \\n\\n\" +\n    \"yarn rmadmin\" +\n      \" [-refreshQueues]\" +\n      \" [-refreshNodes]\" +\n      \" [-refreshSuperUserGroupsConfiguration]\" +\n      \" [-refreshUserToGroupsMappings]\" +\n      \" [-refreshAdminAcls]\" +\n      \" [-refreshServiceAcl]\" +\n      \" [-getGroup [username]]\" +\n      \" [[-addToClusterNodeLabels [label1,label2,label3]]\" +\n      \" [-removeFromClusterNodeLabels [label1,label2,label3]]\" +\n      \" [-replaceLabelsOnNode [node1[:port]\u003dlabel1,label2 node2[:port]\u003dlabel1]\" +\n      \" [-directlyAccessNodeLabelStore]]\");\n    if (isHAEnabled) {\n      appendHAUsage(summary);\n    }\n    summary.append(\" [-help [cmd]]\");\n    summary.append(\"\\n\");\n\n    StringBuilder helpBuilder \u003d new StringBuilder();\n    System.out.println(summary);\n    for (String cmdKey : ADMIN_USAGE.keySet()) {\n      buildHelpMsg(cmdKey, helpBuilder);\n      helpBuilder.append(\"\\n\");\n    }\n    if (isHAEnabled) {\n      for (String cmdKey : USAGE.keySet()) {\n        if (!cmdKey.equals(\"-help\")) {\n          buildHelpMsg(cmdKey, helpBuilder);\n          helpBuilder.append(\"\\n\");\n        }\n      }\n    }\n    helpBuilder.append(\"   -help [cmd]: Displays help for the given command or all commands\" +\n        \" if none is specified.\");\n    System.out.println(helpBuilder);\n    System.out.println();\n    ToolRunner.printGenericCommandUsage(System.out);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/RMAdminCLI.java",
      "extendedDetails": {}
    },
    "e1ee0d45ea3315e7fbe1d28a7a35a0ce0c54483b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2970. NodeLabel operations in RMAdmin CLI get missing in help command. (Contributed by Varun Saxena)\n",
      "commitDate": "23/12/14 6:23 PM",
      "commitName": "e1ee0d45ea3315e7fbe1d28a7a35a0ce0c54483b",
      "commitAuthor": "Junping Du",
      "commitDateOld": "16/12/14 11:00 AM",
      "commitNameOld": "c65f1b382ec5ec93dccf459dbf8b2c93c3e150ab",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 7.31,
      "commitsBetweenForRepo": 55,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,43 @@\n   private static void printHelp(String cmd, boolean isHAEnabled) {\n     StringBuilder summary \u003d new StringBuilder();\n     summary.append(\"rmadmin is the command to execute YARN administrative \" +\n         \"commands.\\n\");\n     summary.append(\"The full syntax is: \\n\\n\" +\n     \"yarn rmadmin\" +\n       \" [-refreshQueues]\" +\n       \" [-refreshNodes]\" +\n       \" [-refreshSuperUserGroupsConfiguration]\" +\n       \" [-refreshUserToGroupsMappings]\" +\n       \" [-refreshAdminAcls]\" +\n       \" [-refreshServiceAcl]\" +\n       \" [-getGroup [username]]\" +\n-      \" [-help [cmd]]\");\n+      \" [[-addToClusterNodeLabels [label1,label2,label3]]\" +\n+      \" [-removeFromClusterNodeLabels [label1,label2,label3]]\" +\n+      \" [-replaceLabelsOnNode [node1:port,label1,label2 node2:port,label1]\" +\n+      \" [-directlyAccessNodeLabelStore]]\");\n     if (isHAEnabled) {\n       appendHAUsage(summary);\n     }\n+    summary.append(\" [-help [cmd]]\");\n     summary.append(\"\\n\");\n \n     StringBuilder helpBuilder \u003d new StringBuilder();\n     System.out.println(summary);\n     for (String cmdKey : ADMIN_USAGE.keySet()) {\n       buildHelpMsg(cmdKey, helpBuilder);\n       helpBuilder.append(\"\\n\");\n     }\n     if (isHAEnabled) {\n       for (String cmdKey : USAGE.keySet()) {\n         if (!cmdKey.equals(\"-help\")) {\n           buildHelpMsg(cmdKey, helpBuilder);\n           helpBuilder.append(\"\\n\");\n         }\n       }\n     }\n+    helpBuilder.append(\"   -help [cmd]: Displays help for the given command or all commands\" +\n+        \" if none is specified.\");\n     System.out.println(helpBuilder);\n     System.out.println();\n     ToolRunner.printGenericCommandUsage(System.out);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void printHelp(String cmd, boolean isHAEnabled) {\n    StringBuilder summary \u003d new StringBuilder();\n    summary.append(\"rmadmin is the command to execute YARN administrative \" +\n        \"commands.\\n\");\n    summary.append(\"The full syntax is: \\n\\n\" +\n    \"yarn rmadmin\" +\n      \" [-refreshQueues]\" +\n      \" [-refreshNodes]\" +\n      \" [-refreshSuperUserGroupsConfiguration]\" +\n      \" [-refreshUserToGroupsMappings]\" +\n      \" [-refreshAdminAcls]\" +\n      \" [-refreshServiceAcl]\" +\n      \" [-getGroup [username]]\" +\n      \" [[-addToClusterNodeLabels [label1,label2,label3]]\" +\n      \" [-removeFromClusterNodeLabels [label1,label2,label3]]\" +\n      \" [-replaceLabelsOnNode [node1:port,label1,label2 node2:port,label1]\" +\n      \" [-directlyAccessNodeLabelStore]]\");\n    if (isHAEnabled) {\n      appendHAUsage(summary);\n    }\n    summary.append(\" [-help [cmd]]\");\n    summary.append(\"\\n\");\n\n    StringBuilder helpBuilder \u003d new StringBuilder();\n    System.out.println(summary);\n    for (String cmdKey : ADMIN_USAGE.keySet()) {\n      buildHelpMsg(cmdKey, helpBuilder);\n      helpBuilder.append(\"\\n\");\n    }\n    if (isHAEnabled) {\n      for (String cmdKey : USAGE.keySet()) {\n        if (!cmdKey.equals(\"-help\")) {\n          buildHelpMsg(cmdKey, helpBuilder);\n          helpBuilder.append(\"\\n\");\n        }\n      }\n    }\n    helpBuilder.append(\"   -help [cmd]: Displays help for the given command or all commands\" +\n        \" if none is specified.\");\n    System.out.println(helpBuilder);\n    System.out.println();\n    ToolRunner.printGenericCommandUsage(System.out);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/RMAdminCLI.java",
      "extendedDetails": {}
    },
    "d963b3cd525dd3d948574f5b02aa50d8e23df968": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-1761. Modified RMAdmin CLI to check whether HA is enabled or not before it executes any of the HA admin related commands. Contributed by Xuan Gong.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1574661 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/03/14 1:07 PM",
      "commitName": "d963b3cd525dd3d948574f5b02aa50d8e23df968",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-1761. Modified RMAdmin CLI to check whether HA is enabled or not before it executes any of the HA admin related commands. Contributed by Xuan Gong.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1574661 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "05/03/14 1:07 PM",
          "commitName": "d963b3cd525dd3d948574f5b02aa50d8e23df968",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "14/01/14 4:57 PM",
          "commitNameOld": "d13c2eeca685d24130444ba32e3454362224ba6c",
          "commitAuthorOld": "Karthik Kambatla",
          "daysBetweenCommits": 49.84,
          "commitsBetweenForRepo": 443,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,33 +1,37 @@\n-  private static void printHelp(String cmd) {\n+  private static void printHelp(String cmd, boolean isHAEnabled) {\n     StringBuilder summary \u003d new StringBuilder();\n     summary.append(\"rmadmin is the command to execute YARN administrative \" +\n         \"commands.\\n\");\n     summary.append(\"The full syntax is: \\n\\n\" +\n     \"yarn rmadmin\" +\n       \" [-refreshQueues]\" +\n       \" [-refreshNodes]\" +\n       \" [-refreshSuperUserGroupsConfiguration]\" +\n       \" [-refreshUserToGroupsMappings]\" +\n       \" [-refreshAdminAcls]\" +\n       \" [-refreshServiceAcl]\" +\n       \" [-getGroup [username]]\" +\n       \" [-help [cmd]]\");\n-    appendHAUsage(summary);\n+    if (isHAEnabled) {\n+      appendHAUsage(summary);\n+    }\n     summary.append(\"\\n\");\n \n     StringBuilder helpBuilder \u003d new StringBuilder();\n     System.out.println(summary);\n     for (String cmdKey : ADMIN_USAGE.keySet()) {\n       buildHelpMsg(cmdKey, helpBuilder);\n       helpBuilder.append(\"\\n\");\n     }\n-    for (String cmdKey : USAGE.keySet()) {\n-      if (!cmdKey.equals(\"-help\")) {\n-        buildHelpMsg(cmdKey, helpBuilder);\n-        helpBuilder.append(\"\\n\");\n+    if (isHAEnabled) {\n+      for (String cmdKey : USAGE.keySet()) {\n+        if (!cmdKey.equals(\"-help\")) {\n+          buildHelpMsg(cmdKey, helpBuilder);\n+          helpBuilder.append(\"\\n\");\n+        }\n       }\n     }\n     System.out.println(helpBuilder);\n     System.out.println();\n     ToolRunner.printGenericCommandUsage(System.out);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void printHelp(String cmd, boolean isHAEnabled) {\n    StringBuilder summary \u003d new StringBuilder();\n    summary.append(\"rmadmin is the command to execute YARN administrative \" +\n        \"commands.\\n\");\n    summary.append(\"The full syntax is: \\n\\n\" +\n    \"yarn rmadmin\" +\n      \" [-refreshQueues]\" +\n      \" [-refreshNodes]\" +\n      \" [-refreshSuperUserGroupsConfiguration]\" +\n      \" [-refreshUserToGroupsMappings]\" +\n      \" [-refreshAdminAcls]\" +\n      \" [-refreshServiceAcl]\" +\n      \" [-getGroup [username]]\" +\n      \" [-help [cmd]]\");\n    if (isHAEnabled) {\n      appendHAUsage(summary);\n    }\n    summary.append(\"\\n\");\n\n    StringBuilder helpBuilder \u003d new StringBuilder();\n    System.out.println(summary);\n    for (String cmdKey : ADMIN_USAGE.keySet()) {\n      buildHelpMsg(cmdKey, helpBuilder);\n      helpBuilder.append(\"\\n\");\n    }\n    if (isHAEnabled) {\n      for (String cmdKey : USAGE.keySet()) {\n        if (!cmdKey.equals(\"-help\")) {\n          buildHelpMsg(cmdKey, helpBuilder);\n          helpBuilder.append(\"\\n\");\n        }\n      }\n    }\n    System.out.println(helpBuilder);\n    System.out.println();\n    ToolRunner.printGenericCommandUsage(System.out);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/RMAdminCLI.java",
          "extendedDetails": {
            "oldValue": "[cmd-String]",
            "newValue": "[cmd-String, isHAEnabled-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-1761. Modified RMAdmin CLI to check whether HA is enabled or not before it executes any of the HA admin related commands. Contributed by Xuan Gong.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1574661 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "05/03/14 1:07 PM",
          "commitName": "d963b3cd525dd3d948574f5b02aa50d8e23df968",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "14/01/14 4:57 PM",
          "commitNameOld": "d13c2eeca685d24130444ba32e3454362224ba6c",
          "commitAuthorOld": "Karthik Kambatla",
          "daysBetweenCommits": 49.84,
          "commitsBetweenForRepo": 443,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,33 +1,37 @@\n-  private static void printHelp(String cmd) {\n+  private static void printHelp(String cmd, boolean isHAEnabled) {\n     StringBuilder summary \u003d new StringBuilder();\n     summary.append(\"rmadmin is the command to execute YARN administrative \" +\n         \"commands.\\n\");\n     summary.append(\"The full syntax is: \\n\\n\" +\n     \"yarn rmadmin\" +\n       \" [-refreshQueues]\" +\n       \" [-refreshNodes]\" +\n       \" [-refreshSuperUserGroupsConfiguration]\" +\n       \" [-refreshUserToGroupsMappings]\" +\n       \" [-refreshAdminAcls]\" +\n       \" [-refreshServiceAcl]\" +\n       \" [-getGroup [username]]\" +\n       \" [-help [cmd]]\");\n-    appendHAUsage(summary);\n+    if (isHAEnabled) {\n+      appendHAUsage(summary);\n+    }\n     summary.append(\"\\n\");\n \n     StringBuilder helpBuilder \u003d new StringBuilder();\n     System.out.println(summary);\n     for (String cmdKey : ADMIN_USAGE.keySet()) {\n       buildHelpMsg(cmdKey, helpBuilder);\n       helpBuilder.append(\"\\n\");\n     }\n-    for (String cmdKey : USAGE.keySet()) {\n-      if (!cmdKey.equals(\"-help\")) {\n-        buildHelpMsg(cmdKey, helpBuilder);\n-        helpBuilder.append(\"\\n\");\n+    if (isHAEnabled) {\n+      for (String cmdKey : USAGE.keySet()) {\n+        if (!cmdKey.equals(\"-help\")) {\n+          buildHelpMsg(cmdKey, helpBuilder);\n+          helpBuilder.append(\"\\n\");\n+        }\n       }\n     }\n     System.out.println(helpBuilder);\n     System.out.println();\n     ToolRunner.printGenericCommandUsage(System.out);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void printHelp(String cmd, boolean isHAEnabled) {\n    StringBuilder summary \u003d new StringBuilder();\n    summary.append(\"rmadmin is the command to execute YARN administrative \" +\n        \"commands.\\n\");\n    summary.append(\"The full syntax is: \\n\\n\" +\n    \"yarn rmadmin\" +\n      \" [-refreshQueues]\" +\n      \" [-refreshNodes]\" +\n      \" [-refreshSuperUserGroupsConfiguration]\" +\n      \" [-refreshUserToGroupsMappings]\" +\n      \" [-refreshAdminAcls]\" +\n      \" [-refreshServiceAcl]\" +\n      \" [-getGroup [username]]\" +\n      \" [-help [cmd]]\");\n    if (isHAEnabled) {\n      appendHAUsage(summary);\n    }\n    summary.append(\"\\n\");\n\n    StringBuilder helpBuilder \u003d new StringBuilder();\n    System.out.println(summary);\n    for (String cmdKey : ADMIN_USAGE.keySet()) {\n      buildHelpMsg(cmdKey, helpBuilder);\n      helpBuilder.append(\"\\n\");\n    }\n    if (isHAEnabled) {\n      for (String cmdKey : USAGE.keySet()) {\n        if (!cmdKey.equals(\"-help\")) {\n          buildHelpMsg(cmdKey, helpBuilder);\n          helpBuilder.append(\"\\n\");\n        }\n      }\n    }\n    System.out.println(helpBuilder);\n    System.out.println();\n    ToolRunner.printGenericCommandUsage(System.out);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/RMAdminCLI.java",
          "extendedDetails": {}
        }
      ]
    },
    "03510d00f48137fe4273c3e694e87fc0e660a706": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1068. Add admin support for HA operations (Karthik Kambatla via bikas)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1536888 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/10/13 2:03 PM",
      "commitName": "03510d00f48137fe4273c3e694e87fc0e660a706",
      "commitAuthor": "Bikas Saha",
      "commitDateOld": "22/10/13 9:10 PM",
      "commitNameOld": "776deafb4c7b623f02ae1e31d5ba80e14726d665",
      "commitAuthorOld": "Jonathan Turner Eagles",
      "daysBetweenCommits": 6.7,
      "commitsBetweenForRepo": 23,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,70 +1,33 @@\n   private static void printHelp(String cmd) {\n-    String summary \u003d \"rmadmin is the command to execute Map-Reduce administrative commands.\\n\" +\n-    \"The full syntax is: \\n\\n\" +\n-    \"hadoop rmadmin\" +\n+    StringBuilder summary \u003d new StringBuilder();\n+    summary.append(\"rmadmin is the command to execute YARN administrative \" +\n+        \"commands.\\n\");\n+    summary.append(\"The full syntax is: \\n\\n\" +\n+    \"yarn rmadmin\" +\n       \" [-refreshQueues]\" +\n       \" [-refreshNodes]\" +\n       \" [-refreshSuperUserGroupsConfiguration]\" +\n       \" [-refreshUserToGroupsMappings]\" +\n       \" [-refreshAdminAcls]\" +\n       \" [-refreshServiceAcl]\" +\n       \" [-getGroup [username]]\" +\n-      \" [-help [cmd]]\\n\";\n+      \" [-help [cmd]]\");\n+    appendHAUsage(summary);\n+    summary.append(\"\\n\");\n \n-    String refreshQueues \u003d\n-      \"-refreshQueues: Reload the queues\u0027 acls, states and \"\n-      + \"scheduler specific properties.\\n\"\n-      + \"\\t\\tResourceManager will reload the mapred-queues configuration file.\\n\";\n-\n-    String refreshNodes \u003d \n-      \"-refreshNodes: Refresh the hosts information at the ResourceManager.\\n\";\n-    \n-    String refreshUserToGroupsMappings \u003d \n-      \"-refreshUserToGroupsMappings: Refresh user-to-groups mappings\\n\";\n-    \n-    String refreshSuperUserGroupsConfiguration \u003d \n-      \"-refreshSuperUserGroupsConfiguration: Refresh superuser proxy groups mappings\\n\";\n-\n-    String refreshAdminAcls \u003d\n-      \"-refreshAdminAcls: Refresh acls for administration of ResourceManager\\n\";\n-\n-    String refreshServiceAcl \u003d \n-      \"-refreshServiceAcl: Reload the service-level authorization policy file\\n\" +\n-      \"\\t\\tResoureceManager will reload the authorization policy file.\\n\";\n-    \n-    String getGroups \u003d \n-      \"-getGroups [username]: Get the groups which given user belongs to\\n\";\n-\n-    String help \u003d \"-help [cmd]: \\tDisplays help for the given command or all commands if none\\n\" +\n-      \"\\t\\tis specified.\\n\";\n-\n-    if (\"refreshQueues\".equals(cmd)) {\n-      System.out.println(refreshQueues);\n-    }  else if (\"refreshNodes\".equals(cmd)) {\n-      System.out.println(refreshNodes);\n-    } else if (\"refreshUserToGroupsMappings\".equals(cmd)) {\n-      System.out.println(refreshUserToGroupsMappings);\n-    } else if (\"refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n-      System.out.println(refreshSuperUserGroupsConfiguration);\n-    } else if (\"refreshAdminAcls\".equals(cmd)) {\n-      System.out.println(refreshAdminAcls);\n-    } else if (\"refreshServiceAcl\".equals(cmd)) {\n-      System.out.println(refreshServiceAcl);\n-    } else if (\"getGroups\".equals(cmd)) {\n-      System.out.println(getGroups);\n-    } else if (\"help\".equals(cmd)) {\n-      System.out.println(help);\n-    } else {\n-      System.out.println(summary);\n-      System.out.println(refreshQueues);\n-      System.out.println(refreshNodes);\n-      System.out.println(refreshUserToGroupsMappings);\n-      System.out.println(refreshSuperUserGroupsConfiguration);\n-      System.out.println(refreshAdminAcls);\n-      System.out.println(refreshServiceAcl);\n-      System.out.println(getGroups);\n-      System.out.println(help);\n-      System.out.println();\n-      ToolRunner.printGenericCommandUsage(System.out);\n+    StringBuilder helpBuilder \u003d new StringBuilder();\n+    System.out.println(summary);\n+    for (String cmdKey : ADMIN_USAGE.keySet()) {\n+      buildHelpMsg(cmdKey, helpBuilder);\n+      helpBuilder.append(\"\\n\");\n     }\n+    for (String cmdKey : USAGE.keySet()) {\n+      if (!cmdKey.equals(\"-help\")) {\n+        buildHelpMsg(cmdKey, helpBuilder);\n+        helpBuilder.append(\"\\n\");\n+      }\n+    }\n+    System.out.println(helpBuilder);\n+    System.out.println();\n+    ToolRunner.printGenericCommandUsage(System.out);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void printHelp(String cmd) {\n    StringBuilder summary \u003d new StringBuilder();\n    summary.append(\"rmadmin is the command to execute YARN administrative \" +\n        \"commands.\\n\");\n    summary.append(\"The full syntax is: \\n\\n\" +\n    \"yarn rmadmin\" +\n      \" [-refreshQueues]\" +\n      \" [-refreshNodes]\" +\n      \" [-refreshSuperUserGroupsConfiguration]\" +\n      \" [-refreshUserToGroupsMappings]\" +\n      \" [-refreshAdminAcls]\" +\n      \" [-refreshServiceAcl]\" +\n      \" [-getGroup [username]]\" +\n      \" [-help [cmd]]\");\n    appendHAUsage(summary);\n    summary.append(\"\\n\");\n\n    StringBuilder helpBuilder \u003d new StringBuilder();\n    System.out.println(summary);\n    for (String cmdKey : ADMIN_USAGE.keySet()) {\n      buildHelpMsg(cmdKey, helpBuilder);\n      helpBuilder.append(\"\\n\");\n    }\n    for (String cmdKey : USAGE.keySet()) {\n      if (!cmdKey.equals(\"-help\")) {\n        buildHelpMsg(cmdKey, helpBuilder);\n        helpBuilder.append(\"\\n\");\n      }\n    }\n    System.out.println(helpBuilder);\n    System.out.println();\n    ToolRunner.printGenericCommandUsage(System.out);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/RMAdminCLI.java",
      "extendedDetails": {}
    },
    "ac0bbb750f3cc9baa1145c250e083006bf83cd87": {
      "type": "Yfilerename",
      "commitMessage": "YARN-823. Moved RMAdmin from yarn.client to yarn.client.cli and renamed it to be RMAdminCLI. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1493596 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/06/13 2:42 PM",
      "commitName": "ac0bbb750f3cc9baa1145c250e083006bf83cd87",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "16/06/13 2:34 PM",
      "commitNameOld": "4aa7503342272556c83f924fb82df61b332b96c3",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private static void printHelp(String cmd) {\n    String summary \u003d \"rmadmin is the command to execute Map-Reduce administrative commands.\\n\" +\n    \"The full syntax is: \\n\\n\" +\n    \"hadoop rmadmin\" +\n      \" [-refreshQueues]\" +\n      \" [-refreshNodes]\" +\n      \" [-refreshSuperUserGroupsConfiguration]\" +\n      \" [-refreshUserToGroupsMappings]\" +\n      \" [-refreshAdminAcls]\" +\n      \" [-refreshServiceAcl]\" +\n      \" [-getGroup [username]]\" +\n      \" [-help [cmd]]\\n\";\n\n    String refreshQueues \u003d\n      \"-refreshQueues: Reload the queues\u0027 acls, states and \"\n      + \"scheduler specific properties.\\n\"\n      + \"\\t\\tResourceManager will reload the mapred-queues configuration file.\\n\";\n\n    String refreshNodes \u003d \n      \"-refreshNodes: Refresh the hosts information at the ResourceManager.\\n\";\n    \n    String refreshUserToGroupsMappings \u003d \n      \"-refreshUserToGroupsMappings: Refresh user-to-groups mappings\\n\";\n    \n    String refreshSuperUserGroupsConfiguration \u003d \n      \"-refreshSuperUserGroupsConfiguration: Refresh superuser proxy groups mappings\\n\";\n\n    String refreshAdminAcls \u003d\n      \"-refreshAdminAcls: Refresh acls for administration of ResourceManager\\n\";\n\n    String refreshServiceAcl \u003d \n      \"-refreshServiceAcl: Reload the service-level authorization policy file\\n\" +\n      \"\\t\\tResoureceManager will reload the authorization policy file.\\n\";\n    \n    String getGroups \u003d \n      \"-getGroups [username]: Get the groups which given user belongs to\\n\";\n\n    String help \u003d \"-help [cmd]: \\tDisplays help for the given command or all commands if none\\n\" +\n      \"\\t\\tis specified.\\n\";\n\n    if (\"refreshQueues\".equals(cmd)) {\n      System.out.println(refreshQueues);\n    }  else if (\"refreshNodes\".equals(cmd)) {\n      System.out.println(refreshNodes);\n    } else if (\"refreshUserToGroupsMappings\".equals(cmd)) {\n      System.out.println(refreshUserToGroupsMappings);\n    } else if (\"refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n      System.out.println(refreshSuperUserGroupsConfiguration);\n    } else if (\"refreshAdminAcls\".equals(cmd)) {\n      System.out.println(refreshAdminAcls);\n    } else if (\"refreshServiceAcl\".equals(cmd)) {\n      System.out.println(refreshServiceAcl);\n    } else if (\"getGroups\".equals(cmd)) {\n      System.out.println(getGroups);\n    } else if (\"help\".equals(cmd)) {\n      System.out.println(help);\n    } else {\n      System.out.println(summary);\n      System.out.println(refreshQueues);\n      System.out.println(refreshNodes);\n      System.out.println(refreshUserToGroupsMappings);\n      System.out.println(refreshSuperUserGroupsConfiguration);\n      System.out.println(refreshAdminAcls);\n      System.out.println(refreshServiceAcl);\n      System.out.println(getGroups);\n      System.out.println(help);\n      System.out.println();\n      ToolRunner.printGenericCommandUsage(System.out);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/RMAdminCLI.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/RMAdmin.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/RMAdminCLI.java"
      }
    },
    "494e21052156a7c5abedbbee824578837ad8cc11": {
      "type": "Yfilerename",
      "commitMessage": "YARN-127. Move RMAdmin tool to its correct location - the client module. Contributed by Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1395781 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/10/12 2:21 PM",
      "commitName": "494e21052156a7c5abedbbee824578837ad8cc11",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "08/10/12 1:50 PM",
      "commitNameOld": "49b20c2ed1be55c90a057acea71b55a28a3f69fb",
      "commitAuthorOld": "Robert Joseph Evans",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private static void printHelp(String cmd) {\n    String summary \u003d \"rmadmin is the command to execute Map-Reduce administrative commands.\\n\" +\n    \"The full syntax is: \\n\\n\" +\n    \"hadoop rmadmin\" +\n      \" [-refreshQueues]\" +\n      \" [-refreshNodes]\" +\n      \" [-refreshSuperUserGroupsConfiguration]\" +\n      \" [-refreshUserToGroupsMappings]\" +\n      \" [-refreshAdminAcls]\" +\n      \" [-refreshServiceAcl]\" +\n      \" [-getGroup [username]]\" +\n      \" [-help [cmd]]\\n\";\n\n    String refreshQueues \u003d\n      \"-refreshQueues: Reload the queues\u0027 acls, states and \"\n      + \"scheduler specific properties.\\n\"\n      + \"\\t\\tResourceManager will reload the mapred-queues configuration file.\\n\";\n\n    String refreshNodes \u003d \n      \"-refreshNodes: Refresh the hosts information at the ResourceManager.\\n\";\n    \n    String refreshUserToGroupsMappings \u003d \n      \"-refreshUserToGroupsMappings: Refresh user-to-groups mappings\\n\";\n    \n    String refreshSuperUserGroupsConfiguration \u003d \n      \"-refreshSuperUserGroupsConfiguration: Refresh superuser proxy groups mappings\\n\";\n\n    String refreshAdminAcls \u003d\n      \"-refreshAdminAcls: Refresh acls for administration of ResourceManager\\n\";\n\n    String refreshServiceAcl \u003d \n      \"-refreshServiceAcl: Reload the service-level authorization policy file\\n\" +\n      \"\\t\\tResoureceManager will reload the authorization policy file.\\n\";\n    \n    String getGroups \u003d \n      \"-getGroups [username]: Get the groups which given user belongs to\\n\";\n\n    String help \u003d \"-help [cmd]: \\tDisplays help for the given command or all commands if none\\n\" +\n      \"\\t\\tis specified.\\n\";\n\n    if (\"refreshQueues\".equals(cmd)) {\n      System.out.println(refreshQueues);\n    }  else if (\"refreshNodes\".equals(cmd)) {\n      System.out.println(refreshNodes);\n    } else if (\"refreshUserToGroupsMappings\".equals(cmd)) {\n      System.out.println(refreshUserToGroupsMappings);\n    } else if (\"refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n      System.out.println(refreshSuperUserGroupsConfiguration);\n    } else if (\"refreshAdminAcls\".equals(cmd)) {\n      System.out.println(refreshAdminAcls);\n    } else if (\"refreshServiceAcl\".equals(cmd)) {\n      System.out.println(refreshServiceAcl);\n    } else if (\"getGroups\".equals(cmd)) {\n      System.out.println(getGroups);\n    } else if (\"help\".equals(cmd)) {\n      System.out.println(help);\n    } else {\n      System.out.println(summary);\n      System.out.println(refreshQueues);\n      System.out.println(refreshNodes);\n      System.out.println(refreshUserToGroupsMappings);\n      System.out.println(refreshSuperUserGroupsConfiguration);\n      System.out.println(refreshAdminAcls);\n      System.out.println(refreshServiceAcl);\n      System.out.println(getGroups);\n      System.out.println(help);\n      System.out.println();\n      ToolRunner.printGenericCommandUsage(System.out);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/RMAdmin.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/tools/RMAdmin.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/RMAdmin.java"
      }
    },
    "d52494228998db61683e486d19899e223cd85fa2": {
      "type": "Ybodychange",
      "commitMessage": "YARN-53. Added the missing getGroups API to ResourceManager. Contributed by Bo Wang.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1389176 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/09/12 5:51 PM",
      "commitName": "d52494228998db61683e486d19899e223cd85fa2",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "07/08/12 10:22 PM",
      "commitNameOld": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 46.81,
      "commitsBetweenForRepo": 262,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,62 +1,70 @@\n   private static void printHelp(String cmd) {\n     String summary \u003d \"rmadmin is the command to execute Map-Reduce administrative commands.\\n\" +\n     \"The full syntax is: \\n\\n\" +\n     \"hadoop rmadmin\" +\n       \" [-refreshQueues]\" +\n       \" [-refreshNodes]\" +\n       \" [-refreshSuperUserGroupsConfiguration]\" +\n       \" [-refreshUserToGroupsMappings]\" +\n       \" [-refreshAdminAcls]\" +\n       \" [-refreshServiceAcl]\" +\n+      \" [-getGroup [username]]\" +\n       \" [-help [cmd]]\\n\";\n \n     String refreshQueues \u003d\n       \"-refreshQueues: Reload the queues\u0027 acls, states and \"\n       + \"scheduler specific properties.\\n\"\n       + \"\\t\\tResourceManager will reload the mapred-queues configuration file.\\n\";\n \n     String refreshNodes \u003d \n       \"-refreshNodes: Refresh the hosts information at the ResourceManager.\\n\";\n     \n     String refreshUserToGroupsMappings \u003d \n       \"-refreshUserToGroupsMappings: Refresh user-to-groups mappings\\n\";\n     \n     String refreshSuperUserGroupsConfiguration \u003d \n       \"-refreshSuperUserGroupsConfiguration: Refresh superuser proxy groups mappings\\n\";\n \n     String refreshAdminAcls \u003d\n       \"-refreshAdminAcls: Refresh acls for administration of ResourceManager\\n\";\n-    String help \u003d \"-help [cmd]: \\tDisplays help for the given command or all commands if none\\n\" +\n-    \"\\t\\tis specified.\\n\";\n \n     String refreshServiceAcl \u003d \n-        \"-refreshServiceAcl: Reload the service-level authorization policy file\\n\" +\n-        \"\\t\\tResoureceManager will reload the authorization policy file.\\n\";\n+      \"-refreshServiceAcl: Reload the service-level authorization policy file\\n\" +\n+      \"\\t\\tResoureceManager will reload the authorization policy file.\\n\";\n+    \n+    String getGroups \u003d \n+      \"-getGroups [username]: Get the groups which given user belongs to\\n\";\n+\n+    String help \u003d \"-help [cmd]: \\tDisplays help for the given command or all commands if none\\n\" +\n+      \"\\t\\tis specified.\\n\";\n \n     if (\"refreshQueues\".equals(cmd)) {\n       System.out.println(refreshQueues);\n     }  else if (\"refreshNodes\".equals(cmd)) {\n       System.out.println(refreshNodes);\n     } else if (\"refreshUserToGroupsMappings\".equals(cmd)) {\n       System.out.println(refreshUserToGroupsMappings);\n     } else if (\"refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n       System.out.println(refreshSuperUserGroupsConfiguration);\n     } else if (\"refreshAdminAcls\".equals(cmd)) {\n       System.out.println(refreshAdminAcls);\n     } else if (\"refreshServiceAcl\".equals(cmd)) {\n       System.out.println(refreshServiceAcl);\n+    } else if (\"getGroups\".equals(cmd)) {\n+      System.out.println(getGroups);\n     } else if (\"help\".equals(cmd)) {\n       System.out.println(help);\n     } else {\n       System.out.println(summary);\n       System.out.println(refreshQueues);\n       System.out.println(refreshNodes);\n       System.out.println(refreshUserToGroupsMappings);\n       System.out.println(refreshSuperUserGroupsConfiguration);\n       System.out.println(refreshAdminAcls);\n       System.out.println(refreshServiceAcl);\n+      System.out.println(getGroups);\n       System.out.println(help);\n       System.out.println();\n       ToolRunner.printGenericCommandUsage(System.out);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void printHelp(String cmd) {\n    String summary \u003d \"rmadmin is the command to execute Map-Reduce administrative commands.\\n\" +\n    \"The full syntax is: \\n\\n\" +\n    \"hadoop rmadmin\" +\n      \" [-refreshQueues]\" +\n      \" [-refreshNodes]\" +\n      \" [-refreshSuperUserGroupsConfiguration]\" +\n      \" [-refreshUserToGroupsMappings]\" +\n      \" [-refreshAdminAcls]\" +\n      \" [-refreshServiceAcl]\" +\n      \" [-getGroup [username]]\" +\n      \" [-help [cmd]]\\n\";\n\n    String refreshQueues \u003d\n      \"-refreshQueues: Reload the queues\u0027 acls, states and \"\n      + \"scheduler specific properties.\\n\"\n      + \"\\t\\tResourceManager will reload the mapred-queues configuration file.\\n\";\n\n    String refreshNodes \u003d \n      \"-refreshNodes: Refresh the hosts information at the ResourceManager.\\n\";\n    \n    String refreshUserToGroupsMappings \u003d \n      \"-refreshUserToGroupsMappings: Refresh user-to-groups mappings\\n\";\n    \n    String refreshSuperUserGroupsConfiguration \u003d \n      \"-refreshSuperUserGroupsConfiguration: Refresh superuser proxy groups mappings\\n\";\n\n    String refreshAdminAcls \u003d\n      \"-refreshAdminAcls: Refresh acls for administration of ResourceManager\\n\";\n\n    String refreshServiceAcl \u003d \n      \"-refreshServiceAcl: Reload the service-level authorization policy file\\n\" +\n      \"\\t\\tResoureceManager will reload the authorization policy file.\\n\";\n    \n    String getGroups \u003d \n      \"-getGroups [username]: Get the groups which given user belongs to\\n\";\n\n    String help \u003d \"-help [cmd]: \\tDisplays help for the given command or all commands if none\\n\" +\n      \"\\t\\tis specified.\\n\";\n\n    if (\"refreshQueues\".equals(cmd)) {\n      System.out.println(refreshQueues);\n    }  else if (\"refreshNodes\".equals(cmd)) {\n      System.out.println(refreshNodes);\n    } else if (\"refreshUserToGroupsMappings\".equals(cmd)) {\n      System.out.println(refreshUserToGroupsMappings);\n    } else if (\"refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n      System.out.println(refreshSuperUserGroupsConfiguration);\n    } else if (\"refreshAdminAcls\".equals(cmd)) {\n      System.out.println(refreshAdminAcls);\n    } else if (\"refreshServiceAcl\".equals(cmd)) {\n      System.out.println(refreshServiceAcl);\n    } else if (\"getGroups\".equals(cmd)) {\n      System.out.println(getGroups);\n    } else if (\"help\".equals(cmd)) {\n      System.out.println(help);\n    } else {\n      System.out.println(summary);\n      System.out.println(refreshQueues);\n      System.out.println(refreshNodes);\n      System.out.println(refreshUserToGroupsMappings);\n      System.out.println(refreshSuperUserGroupsConfiguration);\n      System.out.println(refreshAdminAcls);\n      System.out.println(refreshServiceAcl);\n      System.out.println(getGroups);\n      System.out.println(help);\n      System.out.println();\n      ToolRunner.printGenericCommandUsage(System.out);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/tools/RMAdmin.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private static void printHelp(String cmd) {\n    String summary \u003d \"rmadmin is the command to execute Map-Reduce administrative commands.\\n\" +\n    \"The full syntax is: \\n\\n\" +\n    \"hadoop rmadmin\" +\n      \" [-refreshQueues]\" +\n      \" [-refreshNodes]\" +\n      \" [-refreshSuperUserGroupsConfiguration]\" +\n      \" [-refreshUserToGroupsMappings]\" +\n      \" [-refreshAdminAcls]\" +\n      \" [-refreshServiceAcl]\" +\n      \" [-help [cmd]]\\n\";\n\n    String refreshQueues \u003d\n      \"-refreshQueues: Reload the queues\u0027 acls, states and \"\n      + \"scheduler specific properties.\\n\"\n      + \"\\t\\tResourceManager will reload the mapred-queues configuration file.\\n\";\n\n    String refreshNodes \u003d \n      \"-refreshNodes: Refresh the hosts information at the ResourceManager.\\n\";\n    \n    String refreshUserToGroupsMappings \u003d \n      \"-refreshUserToGroupsMappings: Refresh user-to-groups mappings\\n\";\n    \n    String refreshSuperUserGroupsConfiguration \u003d \n      \"-refreshSuperUserGroupsConfiguration: Refresh superuser proxy groups mappings\\n\";\n\n    String refreshAdminAcls \u003d\n      \"-refreshAdminAcls: Refresh acls for administration of ResourceManager\\n\";\n    String help \u003d \"-help [cmd]: \\tDisplays help for the given command or all commands if none\\n\" +\n    \"\\t\\tis specified.\\n\";\n\n    String refreshServiceAcl \u003d \n        \"-refreshServiceAcl: Reload the service-level authorization policy file\\n\" +\n        \"\\t\\tResoureceManager will reload the authorization policy file.\\n\";\n\n    if (\"refreshQueues\".equals(cmd)) {\n      System.out.println(refreshQueues);\n    }  else if (\"refreshNodes\".equals(cmd)) {\n      System.out.println(refreshNodes);\n    } else if (\"refreshUserToGroupsMappings\".equals(cmd)) {\n      System.out.println(refreshUserToGroupsMappings);\n    } else if (\"refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n      System.out.println(refreshSuperUserGroupsConfiguration);\n    } else if (\"refreshAdminAcls\".equals(cmd)) {\n      System.out.println(refreshAdminAcls);\n    } else if (\"refreshServiceAcl\".equals(cmd)) {\n      System.out.println(refreshServiceAcl);\n    } else if (\"help\".equals(cmd)) {\n      System.out.println(help);\n    } else {\n      System.out.println(summary);\n      System.out.println(refreshQueues);\n      System.out.println(refreshNodes);\n      System.out.println(refreshUserToGroupsMappings);\n      System.out.println(refreshSuperUserGroupsConfiguration);\n      System.out.println(refreshAdminAcls);\n      System.out.println(refreshServiceAcl);\n      System.out.println(help);\n      System.out.println();\n      ToolRunner.printGenericCommandUsage(System.out);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/tools/RMAdmin.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/tools/RMAdmin.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/tools/RMAdmin.java"
      }
    },
    "d19cfe01642f9582e1fe5d567beb480399c37a01": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2746. Yarn servers can\u0027t communicate with each other with hadoop.security.authorization set to true (acmurthy via mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1188522 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/10/11 11:07 PM",
      "commitName": "d19cfe01642f9582e1fe5d567beb480399c37a01",
      "commitAuthor": "Mahadev Konar",
      "commitDateOld": "21/10/11 2:36 PM",
      "commitNameOld": "4186121c08cb3d86f775d333c637459a4fb19d1b",
      "commitAuthorOld": "Mahadev Konar",
      "daysBetweenCommits": 3.35,
      "commitsBetweenForRepo": 23,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,50 +1,62 @@\n   private static void printHelp(String cmd) {\n     String summary \u003d \"rmadmin is the command to execute Map-Reduce administrative commands.\\n\" +\n     \"The full syntax is: \\n\\n\" +\n     \"hadoop rmadmin\" +\n       \" [-refreshQueues]\" +\n       \" [-refreshNodes]\" +\n       \" [-refreshSuperUserGroupsConfiguration]\" +\n       \" [-refreshUserToGroupsMappings]\" +\n       \" [-refreshAdminAcls]\" +\n+      \" [-refreshServiceAcl]\" +\n       \" [-help [cmd]]\\n\";\n \n     String refreshQueues \u003d\n       \"-refreshQueues: Reload the queues\u0027 acls, states and \"\n       + \"scheduler specific properties.\\n\"\n       + \"\\t\\tResourceManager will reload the mapred-queues configuration file.\\n\";\n \n     String refreshNodes \u003d \n       \"-refreshNodes: Refresh the hosts information at the ResourceManager.\\n\";\n     \n     String refreshUserToGroupsMappings \u003d \n       \"-refreshUserToGroupsMappings: Refresh user-to-groups mappings\\n\";\n     \n     String refreshSuperUserGroupsConfiguration \u003d \n       \"-refreshSuperUserGroupsConfiguration: Refresh superuser proxy groups mappings\\n\";\n \n     String refreshAdminAcls \u003d\n       \"-refreshAdminAcls: Refresh acls for administration of ResourceManager\\n\";\n     String help \u003d \"-help [cmd]: \\tDisplays help for the given command or all commands if none\\n\" +\n     \"\\t\\tis specified.\\n\";\n \n+    String refreshServiceAcl \u003d \n+        \"-refreshServiceAcl: Reload the service-level authorization policy file\\n\" +\n+        \"\\t\\tResoureceManager will reload the authorization policy file.\\n\";\n+\n     if (\"refreshQueues\".equals(cmd)) {\n       System.out.println(refreshQueues);\n     }  else if (\"refreshNodes\".equals(cmd)) {\n       System.out.println(refreshNodes);\n     } else if (\"refreshUserToGroupsMappings\".equals(cmd)) {\n       System.out.println(refreshUserToGroupsMappings);\n     } else if (\"refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n       System.out.println(refreshSuperUserGroupsConfiguration);\n     } else if (\"refreshAdminAcls\".equals(cmd)) {\n       System.out.println(refreshAdminAcls);\n+    } else if (\"refreshServiceAcl\".equals(cmd)) {\n+      System.out.println(refreshServiceAcl);\n     } else if (\"help\".equals(cmd)) {\n       System.out.println(help);\n     } else {\n       System.out.println(summary);\n       System.out.println(refreshQueues);\n+      System.out.println(refreshNodes);\n+      System.out.println(refreshUserToGroupsMappings);\n+      System.out.println(refreshSuperUserGroupsConfiguration);\n+      System.out.println(refreshAdminAcls);\n+      System.out.println(refreshServiceAcl);\n       System.out.println(help);\n       System.out.println();\n       ToolRunner.printGenericCommandUsage(System.out);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void printHelp(String cmd) {\n    String summary \u003d \"rmadmin is the command to execute Map-Reduce administrative commands.\\n\" +\n    \"The full syntax is: \\n\\n\" +\n    \"hadoop rmadmin\" +\n      \" [-refreshQueues]\" +\n      \" [-refreshNodes]\" +\n      \" [-refreshSuperUserGroupsConfiguration]\" +\n      \" [-refreshUserToGroupsMappings]\" +\n      \" [-refreshAdminAcls]\" +\n      \" [-refreshServiceAcl]\" +\n      \" [-help [cmd]]\\n\";\n\n    String refreshQueues \u003d\n      \"-refreshQueues: Reload the queues\u0027 acls, states and \"\n      + \"scheduler specific properties.\\n\"\n      + \"\\t\\tResourceManager will reload the mapred-queues configuration file.\\n\";\n\n    String refreshNodes \u003d \n      \"-refreshNodes: Refresh the hosts information at the ResourceManager.\\n\";\n    \n    String refreshUserToGroupsMappings \u003d \n      \"-refreshUserToGroupsMappings: Refresh user-to-groups mappings\\n\";\n    \n    String refreshSuperUserGroupsConfiguration \u003d \n      \"-refreshSuperUserGroupsConfiguration: Refresh superuser proxy groups mappings\\n\";\n\n    String refreshAdminAcls \u003d\n      \"-refreshAdminAcls: Refresh acls for administration of ResourceManager\\n\";\n    String help \u003d \"-help [cmd]: \\tDisplays help for the given command or all commands if none\\n\" +\n    \"\\t\\tis specified.\\n\";\n\n    String refreshServiceAcl \u003d \n        \"-refreshServiceAcl: Reload the service-level authorization policy file\\n\" +\n        \"\\t\\tResoureceManager will reload the authorization policy file.\\n\";\n\n    if (\"refreshQueues\".equals(cmd)) {\n      System.out.println(refreshQueues);\n    }  else if (\"refreshNodes\".equals(cmd)) {\n      System.out.println(refreshNodes);\n    } else if (\"refreshUserToGroupsMappings\".equals(cmd)) {\n      System.out.println(refreshUserToGroupsMappings);\n    } else if (\"refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n      System.out.println(refreshSuperUserGroupsConfiguration);\n    } else if (\"refreshAdminAcls\".equals(cmd)) {\n      System.out.println(refreshAdminAcls);\n    } else if (\"refreshServiceAcl\".equals(cmd)) {\n      System.out.println(refreshServiceAcl);\n    } else if (\"help\".equals(cmd)) {\n      System.out.println(help);\n    } else {\n      System.out.println(summary);\n      System.out.println(refreshQueues);\n      System.out.println(refreshNodes);\n      System.out.println(refreshUserToGroupsMappings);\n      System.out.println(refreshSuperUserGroupsConfiguration);\n      System.out.println(refreshAdminAcls);\n      System.out.println(refreshServiceAcl);\n      System.out.println(help);\n      System.out.println();\n      ToolRunner.printGenericCommandUsage(System.out);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/tools/RMAdmin.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private static void printHelp(String cmd) {\n    String summary \u003d \"rmadmin is the command to execute Map-Reduce administrative commands.\\n\" +\n    \"The full syntax is: \\n\\n\" +\n    \"hadoop rmadmin\" +\n      \" [-refreshQueues]\" +\n      \" [-refreshNodes]\" +\n      \" [-refreshSuperUserGroupsConfiguration]\" +\n      \" [-refreshUserToGroupsMappings]\" +\n      \" [-refreshAdminAcls]\" +\n      \" [-help [cmd]]\\n\";\n\n    String refreshQueues \u003d\n      \"-refreshQueues: Reload the queues\u0027 acls, states and \"\n      + \"scheduler specific properties.\\n\"\n      + \"\\t\\tResourceManager will reload the mapred-queues configuration file.\\n\";\n\n    String refreshNodes \u003d \n      \"-refreshNodes: Refresh the hosts information at the ResourceManager.\\n\";\n    \n    String refreshUserToGroupsMappings \u003d \n      \"-refreshUserToGroupsMappings: Refresh user-to-groups mappings\\n\";\n    \n    String refreshSuperUserGroupsConfiguration \u003d \n      \"-refreshSuperUserGroupsConfiguration: Refresh superuser proxy groups mappings\\n\";\n\n    String refreshAdminAcls \u003d\n      \"-refreshAdminAcls: Refresh acls for administration of ResourceManager\\n\";\n    String help \u003d \"-help [cmd]: \\tDisplays help for the given command or all commands if none\\n\" +\n    \"\\t\\tis specified.\\n\";\n\n    if (\"refreshQueues\".equals(cmd)) {\n      System.out.println(refreshQueues);\n    }  else if (\"refreshNodes\".equals(cmd)) {\n      System.out.println(refreshNodes);\n    } else if (\"refreshUserToGroupsMappings\".equals(cmd)) {\n      System.out.println(refreshUserToGroupsMappings);\n    } else if (\"refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n      System.out.println(refreshSuperUserGroupsConfiguration);\n    } else if (\"refreshAdminAcls\".equals(cmd)) {\n      System.out.println(refreshAdminAcls);\n    } else if (\"help\".equals(cmd)) {\n      System.out.println(help);\n    } else {\n      System.out.println(summary);\n      System.out.println(refreshQueues);\n      System.out.println(help);\n      System.out.println();\n      ToolRunner.printGenericCommandUsage(System.out);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/tools/RMAdmin.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/tools/RMAdmin.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/tools/RMAdmin.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,50 @@\n+  private static void printHelp(String cmd) {\n+    String summary \u003d \"rmadmin is the command to execute Map-Reduce administrative commands.\\n\" +\n+    \"The full syntax is: \\n\\n\" +\n+    \"hadoop rmadmin\" +\n+      \" [-refreshQueues]\" +\n+      \" [-refreshNodes]\" +\n+      \" [-refreshSuperUserGroupsConfiguration]\" +\n+      \" [-refreshUserToGroupsMappings]\" +\n+      \" [-refreshAdminAcls]\" +\n+      \" [-help [cmd]]\\n\";\n+\n+    String refreshQueues \u003d\n+      \"-refreshQueues: Reload the queues\u0027 acls, states and \"\n+      + \"scheduler specific properties.\\n\"\n+      + \"\\t\\tResourceManager will reload the mapred-queues configuration file.\\n\";\n+\n+    String refreshNodes \u003d \n+      \"-refreshNodes: Refresh the hosts information at the ResourceManager.\\n\";\n+    \n+    String refreshUserToGroupsMappings \u003d \n+      \"-refreshUserToGroupsMappings: Refresh user-to-groups mappings\\n\";\n+    \n+    String refreshSuperUserGroupsConfiguration \u003d \n+      \"-refreshSuperUserGroupsConfiguration: Refresh superuser proxy groups mappings\\n\";\n+\n+    String refreshAdminAcls \u003d\n+      \"-refreshAdminAcls: Refresh acls for administration of ResourceManager\\n\";\n+    String help \u003d \"-help [cmd]: \\tDisplays help for the given command or all commands if none\\n\" +\n+    \"\\t\\tis specified.\\n\";\n+\n+    if (\"refreshQueues\".equals(cmd)) {\n+      System.out.println(refreshQueues);\n+    }  else if (\"refreshNodes\".equals(cmd)) {\n+      System.out.println(refreshNodes);\n+    } else if (\"refreshUserToGroupsMappings\".equals(cmd)) {\n+      System.out.println(refreshUserToGroupsMappings);\n+    } else if (\"refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n+      System.out.println(refreshSuperUserGroupsConfiguration);\n+    } else if (\"refreshAdminAcls\".equals(cmd)) {\n+      System.out.println(refreshAdminAcls);\n+    } else if (\"help\".equals(cmd)) {\n+      System.out.println(help);\n+    } else {\n+      System.out.println(summary);\n+      System.out.println(refreshQueues);\n+      System.out.println(help);\n+      System.out.println();\n+      ToolRunner.printGenericCommandUsage(System.out);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static void printHelp(String cmd) {\n    String summary \u003d \"rmadmin is the command to execute Map-Reduce administrative commands.\\n\" +\n    \"The full syntax is: \\n\\n\" +\n    \"hadoop rmadmin\" +\n      \" [-refreshQueues]\" +\n      \" [-refreshNodes]\" +\n      \" [-refreshSuperUserGroupsConfiguration]\" +\n      \" [-refreshUserToGroupsMappings]\" +\n      \" [-refreshAdminAcls]\" +\n      \" [-help [cmd]]\\n\";\n\n    String refreshQueues \u003d\n      \"-refreshQueues: Reload the queues\u0027 acls, states and \"\n      + \"scheduler specific properties.\\n\"\n      + \"\\t\\tResourceManager will reload the mapred-queues configuration file.\\n\";\n\n    String refreshNodes \u003d \n      \"-refreshNodes: Refresh the hosts information at the ResourceManager.\\n\";\n    \n    String refreshUserToGroupsMappings \u003d \n      \"-refreshUserToGroupsMappings: Refresh user-to-groups mappings\\n\";\n    \n    String refreshSuperUserGroupsConfiguration \u003d \n      \"-refreshSuperUserGroupsConfiguration: Refresh superuser proxy groups mappings\\n\";\n\n    String refreshAdminAcls \u003d\n      \"-refreshAdminAcls: Refresh acls for administration of ResourceManager\\n\";\n    String help \u003d \"-help [cmd]: \\tDisplays help for the given command or all commands if none\\n\" +\n    \"\\t\\tis specified.\\n\";\n\n    if (\"refreshQueues\".equals(cmd)) {\n      System.out.println(refreshQueues);\n    }  else if (\"refreshNodes\".equals(cmd)) {\n      System.out.println(refreshNodes);\n    } else if (\"refreshUserToGroupsMappings\".equals(cmd)) {\n      System.out.println(refreshUserToGroupsMappings);\n    } else if (\"refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n      System.out.println(refreshSuperUserGroupsConfiguration);\n    } else if (\"refreshAdminAcls\".equals(cmd)) {\n      System.out.println(refreshAdminAcls);\n    } else if (\"help\".equals(cmd)) {\n      System.out.println(help);\n    } else {\n      System.out.println(summary);\n      System.out.println(refreshQueues);\n      System.out.println(help);\n      System.out.println();\n      ToolRunner.printGenericCommandUsage(System.out);\n    }\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/tools/RMAdmin.java"
    }
  }
}