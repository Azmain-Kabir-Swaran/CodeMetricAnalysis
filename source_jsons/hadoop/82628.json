{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ReflectionUtils.java",
  "functionName": "setJobConf",
  "functionId": "setJobConf___theObject-Object__conf-Configuration",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ReflectionUtils.java",
  "functionStartLine": 91,
  "functionEndLine": 117,
  "numCommitsSeen": 19,
  "timeTaken": 937,
  "changeHistory": [
    "063be5749df0e4ccb8f6fa4794b3d29a8f3a0afa",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36"
  ],
  "changeHistoryShort": {
    "063be5749df0e4ccb8f6fa4794b3d29a8f3a0afa": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": "Yintroduced"
  },
  "changeHistoryDetails": {
    "063be5749df0e4ccb8f6fa4794b3d29a8f3a0afa": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-6502. Improve the performance of Configuration.getClassByName when the class is not found by caching negative results. Contributed by Sharad Agarwal and Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1244620 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "15/02/12 10:10 AM",
      "commitName": "063be5749df0e4ccb8f6fa4794b3d29a8f3a0afa",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "24/08/11 5:14 PM",
      "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 174.75,
      "commitsBetweenForRepo": 1106,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,27 @@\n   private static void setJobConf(Object theObject, Configuration conf) {\n     //If JobConf and JobConfigurable are in classpath, AND\n     //theObject is of type JobConfigurable AND\n     //conf is of type JobConf then\n     //invoke configure on theObject\n     try {\n       Class\u003c?\u003e jobConfClass \u003d \n-        conf.getClassByName(\"org.apache.hadoop.mapred.JobConf\");\n+        conf.getClassByNameOrNull(\"org.apache.hadoop.mapred.JobConf\");\n+      if (jobConfClass \u003d\u003d null) {\n+        return;\n+      }\n+      \n       Class\u003c?\u003e jobConfigurableClass \u003d \n-        conf.getClassByName(\"org.apache.hadoop.mapred.JobConfigurable\");\n-       if (jobConfClass.isAssignableFrom(conf.getClass()) \u0026\u0026\n+        conf.getClassByNameOrNull(\"org.apache.hadoop.mapred.JobConfigurable\");\n+      if (jobConfigurableClass \u003d\u003d null) {\n+        return;\n+      }\n+      if (jobConfClass.isAssignableFrom(conf.getClass()) \u0026\u0026\n             jobConfigurableClass.isAssignableFrom(theObject.getClass())) {\n         Method configureMethod \u003d \n           jobConfigurableClass.getMethod(\"configure\", jobConfClass);\n         configureMethod.invoke(theObject, conf);\n       }\n-    } catch (ClassNotFoundException e) {\n-      //JobConf/JobConfigurable not in classpath. no need to configure\n     } catch (Exception e) {\n       throw new RuntimeException(\"Error in configuring object\", e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void setJobConf(Object theObject, Configuration conf) {\n    //If JobConf and JobConfigurable are in classpath, AND\n    //theObject is of type JobConfigurable AND\n    //conf is of type JobConf then\n    //invoke configure on theObject\n    try {\n      Class\u003c?\u003e jobConfClass \u003d \n        conf.getClassByNameOrNull(\"org.apache.hadoop.mapred.JobConf\");\n      if (jobConfClass \u003d\u003d null) {\n        return;\n      }\n      \n      Class\u003c?\u003e jobConfigurableClass \u003d \n        conf.getClassByNameOrNull(\"org.apache.hadoop.mapred.JobConfigurable\");\n      if (jobConfigurableClass \u003d\u003d null) {\n        return;\n      }\n      if (jobConfClass.isAssignableFrom(conf.getClass()) \u0026\u0026\n            jobConfigurableClass.isAssignableFrom(theObject.getClass())) {\n        Method configureMethod \u003d \n          jobConfigurableClass.getMethod(\"configure\", jobConfClass);\n        configureMethod.invoke(theObject, conf);\n      }\n    } catch (Exception e) {\n      throw new RuntimeException(\"Error in configuring object\", e);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ReflectionUtils.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private static void setJobConf(Object theObject, Configuration conf) {\n    //If JobConf and JobConfigurable are in classpath, AND\n    //theObject is of type JobConfigurable AND\n    //conf is of type JobConf then\n    //invoke configure on theObject\n    try {\n      Class\u003c?\u003e jobConfClass \u003d \n        conf.getClassByName(\"org.apache.hadoop.mapred.JobConf\");\n      Class\u003c?\u003e jobConfigurableClass \u003d \n        conf.getClassByName(\"org.apache.hadoop.mapred.JobConfigurable\");\n       if (jobConfClass.isAssignableFrom(conf.getClass()) \u0026\u0026\n            jobConfigurableClass.isAssignableFrom(theObject.getClass())) {\n        Method configureMethod \u003d \n          jobConfigurableClass.getMethod(\"configure\", jobConfClass);\n        configureMethod.invoke(theObject, conf);\n      }\n    } catch (ClassNotFoundException e) {\n      //JobConf/JobConfigurable not in classpath. no need to configure\n    } catch (Exception e) {\n      throw new RuntimeException(\"Error in configuring object\", e);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ReflectionUtils.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/util/ReflectionUtils.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ReflectionUtils.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private static void setJobConf(Object theObject, Configuration conf) {\n    //If JobConf and JobConfigurable are in classpath, AND\n    //theObject is of type JobConfigurable AND\n    //conf is of type JobConf then\n    //invoke configure on theObject\n    try {\n      Class\u003c?\u003e jobConfClass \u003d \n        conf.getClassByName(\"org.apache.hadoop.mapred.JobConf\");\n      Class\u003c?\u003e jobConfigurableClass \u003d \n        conf.getClassByName(\"org.apache.hadoop.mapred.JobConfigurable\");\n       if (jobConfClass.isAssignableFrom(conf.getClass()) \u0026\u0026\n            jobConfigurableClass.isAssignableFrom(theObject.getClass())) {\n        Method configureMethod \u003d \n          jobConfigurableClass.getMethod(\"configure\", jobConfClass);\n        configureMethod.invoke(theObject, conf);\n      }\n    } catch (ClassNotFoundException e) {\n      //JobConf/JobConfigurable not in classpath. no need to configure\n    } catch (Exception e) {\n      throw new RuntimeException(\"Error in configuring object\", e);\n    }\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/util/ReflectionUtils.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/util/ReflectionUtils.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/util/ReflectionUtils.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private static void setJobConf(Object theObject, Configuration conf) {\n    //If JobConf and JobConfigurable are in classpath, AND\n    //theObject is of type JobConfigurable AND\n    //conf is of type JobConf then\n    //invoke configure on theObject\n    try {\n      Class\u003c?\u003e jobConfClass \u003d \n        conf.getClassByName(\"org.apache.hadoop.mapred.JobConf\");\n      Class\u003c?\u003e jobConfigurableClass \u003d \n        conf.getClassByName(\"org.apache.hadoop.mapred.JobConfigurable\");\n       if (jobConfClass.isAssignableFrom(conf.getClass()) \u0026\u0026\n            jobConfigurableClass.isAssignableFrom(theObject.getClass())) {\n        Method configureMethod \u003d \n          jobConfigurableClass.getMethod(\"configure\", jobConfClass);\n        configureMethod.invoke(theObject, conf);\n      }\n    } catch (ClassNotFoundException e) {\n      //JobConf/JobConfigurable not in classpath. no need to configure\n    } catch (Exception e) {\n      throw new RuntimeException(\"Error in configuring object\", e);\n    }\n  }",
      "path": "common/src/java/org/apache/hadoop/util/ReflectionUtils.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/util/ReflectionUtils.java",
        "newPath": "common/src/java/org/apache/hadoop/util/ReflectionUtils.java"
      }
    },
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-4687 Moving src directories on branch\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/core/branches/HADOOP-4687/core@776174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/05/09 9:20 PM",
      "commitName": "5128a9a453d64bfe1ed978cf9ffed27985eeef36",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,22 @@\n+  private static void setJobConf(Object theObject, Configuration conf) {\n+    //If JobConf and JobConfigurable are in classpath, AND\n+    //theObject is of type JobConfigurable AND\n+    //conf is of type JobConf then\n+    //invoke configure on theObject\n+    try {\n+      Class\u003c?\u003e jobConfClass \u003d \n+        conf.getClassByName(\"org.apache.hadoop.mapred.JobConf\");\n+      Class\u003c?\u003e jobConfigurableClass \u003d \n+        conf.getClassByName(\"org.apache.hadoop.mapred.JobConfigurable\");\n+       if (jobConfClass.isAssignableFrom(conf.getClass()) \u0026\u0026\n+            jobConfigurableClass.isAssignableFrom(theObject.getClass())) {\n+        Method configureMethod \u003d \n+          jobConfigurableClass.getMethod(\"configure\", jobConfClass);\n+        configureMethod.invoke(theObject, conf);\n+      }\n+    } catch (ClassNotFoundException e) {\n+      //JobConf/JobConfigurable not in classpath. no need to configure\n+    } catch (Exception e) {\n+      throw new RuntimeException(\"Error in configuring object\", e);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static void setJobConf(Object theObject, Configuration conf) {\n    //If JobConf and JobConfigurable are in classpath, AND\n    //theObject is of type JobConfigurable AND\n    //conf is of type JobConf then\n    //invoke configure on theObject\n    try {\n      Class\u003c?\u003e jobConfClass \u003d \n        conf.getClassByName(\"org.apache.hadoop.mapred.JobConf\");\n      Class\u003c?\u003e jobConfigurableClass \u003d \n        conf.getClassByName(\"org.apache.hadoop.mapred.JobConfigurable\");\n       if (jobConfClass.isAssignableFrom(conf.getClass()) \u0026\u0026\n            jobConfigurableClass.isAssignableFrom(theObject.getClass())) {\n        Method configureMethod \u003d \n          jobConfigurableClass.getMethod(\"configure\", jobConfClass);\n        configureMethod.invoke(theObject, conf);\n      }\n    } catch (ClassNotFoundException e) {\n      //JobConf/JobConfigurable not in classpath. no need to configure\n    } catch (Exception e) {\n      throw new RuntimeException(\"Error in configuring object\", e);\n    }\n  }",
      "path": "src/java/org/apache/hadoop/util/ReflectionUtils.java"
    }
  }
}