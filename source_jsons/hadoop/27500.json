{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AppLevelTimelineCollectorWithAgg.java",
  "functionName": "serviceStart",
  "functionId": "serviceStart",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/AppLevelTimelineCollectorWithAgg.java",
  "functionStartLine": 84,
  "functionEndLine": 97,
  "numCommitsSeen": 4,
  "timeTaken": 588,
  "changeHistory": [
    "24a89825f0cbc92b0a462152bc765e2195edd5a1",
    "3fb71b1393018e1001da55b794dda7d26491cf35"
  ],
  "changeHistoryShort": {
    "24a89825f0cbc92b0a462152bc765e2195edd5a1": "Ybodychange",
    "3fb71b1393018e1001da55b794dda7d26491cf35": "Yintroduced"
  },
  "changeHistoryDetails": {
    "24a89825f0cbc92b0a462152bc765e2195edd5a1": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6931. Make the aggregation interval in AppLevelTimelineCollector configurable. (Abhishek Modi via Haibo Chen)\n",
      "commitDate": "12/06/18 10:03 AM",
      "commitName": "24a89825f0cbc92b0a462152bc765e2195edd5a1",
      "commitAuthor": "Haibo Chen",
      "commitDateOld": "31/08/17 10:59 PM",
      "commitNameOld": "dcd0bedcc8113dd5e1d852c242ae9511d1b3d58e",
      "commitAuthorOld": "bibinchundatt",
      "daysBetweenCommits": 284.46,
      "commitsBetweenForRepo": 2674,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,14 @@\n   protected void serviceStart() throws Exception {\n     // Launch the aggregation thread\n     appAggregationExecutor \u003d new ScheduledThreadPoolExecutor(\n         AppLevelTimelineCollectorWithAgg.AGGREGATION_EXECUTOR_NUM_THREADS,\n         new ThreadFactoryBuilder()\n             .setNameFormat(\"TimelineCollector Aggregation thread #%d\")\n             .build());\n     appAggregator \u003d new AppLevelAggregator();\n     appAggregationExecutor.scheduleAtFixedRate(appAggregator,\n-        AppLevelTimelineCollectorWithAgg.\n-          AGGREGATION_EXECUTOR_EXEC_INTERVAL_SECS,\n-        AppLevelTimelineCollectorWithAgg.\n-          AGGREGATION_EXECUTOR_EXEC_INTERVAL_SECS,\n+        aggregationExecutorIntervalSecs,\n+        aggregationExecutorIntervalSecs,\n         TimeUnit.SECONDS);\n     super.serviceStart();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceStart() throws Exception {\n    // Launch the aggregation thread\n    appAggregationExecutor \u003d new ScheduledThreadPoolExecutor(\n        AppLevelTimelineCollectorWithAgg.AGGREGATION_EXECUTOR_NUM_THREADS,\n        new ThreadFactoryBuilder()\n            .setNameFormat(\"TimelineCollector Aggregation thread #%d\")\n            .build());\n    appAggregator \u003d new AppLevelAggregator();\n    appAggregationExecutor.scheduleAtFixedRate(appAggregator,\n        aggregationExecutorIntervalSecs,\n        aggregationExecutorIntervalSecs,\n        TimeUnit.SECONDS);\n    super.serviceStart();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/AppLevelTimelineCollectorWithAgg.java",
      "extendedDetails": {}
    },
    "3fb71b1393018e1001da55b794dda7d26491cf35": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6888. Refactor AppLevelTimelineCollector such that RM does not have aggregator threads created. Contributed by Vrushali C.\n",
      "commitDate": "29/08/17 10:59 PM",
      "commitName": "3fb71b1393018e1001da55b794dda7d26491cf35",
      "commitAuthor": "Rohith Sharma K S",
      "diff": "@@ -0,0 +1,16 @@\n+  protected void serviceStart() throws Exception {\n+    // Launch the aggregation thread\n+    appAggregationExecutor \u003d new ScheduledThreadPoolExecutor(\n+        AppLevelTimelineCollectorWithAgg.AGGREGATION_EXECUTOR_NUM_THREADS,\n+        new ThreadFactoryBuilder()\n+            .setNameFormat(\"TimelineCollector Aggregation thread #%d\")\n+            .build());\n+    appAggregator \u003d new AppLevelAggregator();\n+    appAggregationExecutor.scheduleAtFixedRate(appAggregator,\n+        AppLevelTimelineCollectorWithAgg.\n+          AGGREGATION_EXECUTOR_EXEC_INTERVAL_SECS,\n+        AppLevelTimelineCollectorWithAgg.\n+          AGGREGATION_EXECUTOR_EXEC_INTERVAL_SECS,\n+        TimeUnit.SECONDS);\n+    super.serviceStart();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceStart() throws Exception {\n    // Launch the aggregation thread\n    appAggregationExecutor \u003d new ScheduledThreadPoolExecutor(\n        AppLevelTimelineCollectorWithAgg.AGGREGATION_EXECUTOR_NUM_THREADS,\n        new ThreadFactoryBuilder()\n            .setNameFormat(\"TimelineCollector Aggregation thread #%d\")\n            .build());\n    appAggregator \u003d new AppLevelAggregator();\n    appAggregationExecutor.scheduleAtFixedRate(appAggregator,\n        AppLevelTimelineCollectorWithAgg.\n          AGGREGATION_EXECUTOR_EXEC_INTERVAL_SECS,\n        AppLevelTimelineCollectorWithAgg.\n          AGGREGATION_EXECUTOR_EXEC_INTERVAL_SECS,\n        TimeUnit.SECONDS);\n    super.serviceStart();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/AppLevelTimelineCollectorWithAgg.java"
    }
  }
}