{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSStarvedApps.java",
  "functionName": "compare",
  "functionId": "compare___app1-FSAppAttempt__app2-FSAppAttempt",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSStarvedApps.java",
  "functionStartLine": 77,
  "functionEndLine": 83,
  "numCommitsSeen": 37,
  "timeTaken": 3041,
  "changeHistory": [
    "10468529a9b858bd945e7ecb063c9c1438efa474",
    "486e718fc1f5befd231494e2ec06bb360484f191"
  ],
  "changeHistoryShort": {
    "10468529a9b858bd945e7ecb063c9c1438efa474": "Ymultichange(Ymovefromfile,Ybodychange,Yparameterchange)",
    "486e718fc1f5befd231494e2ec06bb360484f191": "Yintroduced"
  },
  "changeHistoryDetails": {
    "10468529a9b858bd945e7ecb063c9c1438efa474": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange,Yparameterchange)",
      "commitMessage": "YARN-4752. Improved preemption in FairScheduler. (kasha)\n\nContains:\nYARN-5605. Preempt containers (all on one node) to meet the requirement of starved applications\nYARN-5821. Drop left-over preemption-related code and clean up method visibilities in the Schedulable hierarchy\nYARN-5783. Verify identification of starved applications.\nYARN-5819. Verify fairshare and minshare preemption\nYARN-5885. Cleanup YARN-4752 branch for merge\n\nChange-Id: Iee0962377d019dd64dc69a020725d2eaf360858c\n",
      "commitDate": "23/11/16 9:48 PM",
      "commitName": "10468529a9b858bd945e7ecb063c9c1438efa474",
      "commitAuthor": "Daniel Templeton",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-4752. Improved preemption in FairScheduler. (kasha)\n\nContains:\nYARN-5605. Preempt containers (all on one node) to meet the requirement of starved applications\nYARN-5821. Drop left-over preemption-related code and clean up method visibilities in the Schedulable hierarchy\nYARN-5783. Verify identification of starved applications.\nYARN-5819. Verify fairshare and minshare preemption\nYARN-5885. Cleanup YARN-4752 branch for merge\n\nChange-Id: Iee0962377d019dd64dc69a020725d2eaf360858c\n",
          "commitDate": "23/11/16 9:48 PM",
          "commitName": "10468529a9b858bd945e7ecb063c9c1438efa474",
          "commitAuthor": "Daniel Templeton",
          "commitDateOld": "23/11/16 5:08 PM",
          "commitNameOld": "c7a5f2906fcfd073a402b6981b091bd6d9b80294",
          "commitAuthorOld": "Andrew Wang",
          "daysBetweenCommits": 0.19,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,7 @@\n-    public int compare(RMContainer c1, RMContainer c2) {\n-      int ret \u003d c1.getContainer().getPriority().compareTo(\n-          c2.getContainer().getPriority());\n-      if (ret \u003d\u003d 0) {\n-        return c2.getContainerId().compareTo(c1.getContainerId());\n+    public int compare(FSAppAttempt app1, FSAppAttempt app2) {\n+      int ret \u003d 1;\n+      if (Resources.fitsIn(app1.getStarvation(), app2.getStarvation())) {\n+        ret \u003d -1;\n       }\n       return ret;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public int compare(FSAppAttempt app1, FSAppAttempt app2) {\n      int ret \u003d 1;\n      if (Resources.fitsIn(app1.getStarvation(), app2.getStarvation())) {\n        ret \u003d -1;\n      }\n      return ret;\n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSStarvedApps.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSAppAttempt.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSStarvedApps.java",
            "oldMethodName": "compare",
            "newMethodName": "compare"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4752. Improved preemption in FairScheduler. (kasha)\n\nContains:\nYARN-5605. Preempt containers (all on one node) to meet the requirement of starved applications\nYARN-5821. Drop left-over preemption-related code and clean up method visibilities in the Schedulable hierarchy\nYARN-5783. Verify identification of starved applications.\nYARN-5819. Verify fairshare and minshare preemption\nYARN-5885. Cleanup YARN-4752 branch for merge\n\nChange-Id: Iee0962377d019dd64dc69a020725d2eaf360858c\n",
          "commitDate": "23/11/16 9:48 PM",
          "commitName": "10468529a9b858bd945e7ecb063c9c1438efa474",
          "commitAuthor": "Daniel Templeton",
          "commitDateOld": "23/11/16 5:08 PM",
          "commitNameOld": "c7a5f2906fcfd073a402b6981b091bd6d9b80294",
          "commitAuthorOld": "Andrew Wang",
          "daysBetweenCommits": 0.19,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,7 @@\n-    public int compare(RMContainer c1, RMContainer c2) {\n-      int ret \u003d c1.getContainer().getPriority().compareTo(\n-          c2.getContainer().getPriority());\n-      if (ret \u003d\u003d 0) {\n-        return c2.getContainerId().compareTo(c1.getContainerId());\n+    public int compare(FSAppAttempt app1, FSAppAttempt app2) {\n+      int ret \u003d 1;\n+      if (Resources.fitsIn(app1.getStarvation(), app2.getStarvation())) {\n+        ret \u003d -1;\n       }\n       return ret;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public int compare(FSAppAttempt app1, FSAppAttempt app2) {\n      int ret \u003d 1;\n      if (Resources.fitsIn(app1.getStarvation(), app2.getStarvation())) {\n        ret \u003d -1;\n      }\n      return ret;\n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSStarvedApps.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-4752. Improved preemption in FairScheduler. (kasha)\n\nContains:\nYARN-5605. Preempt containers (all on one node) to meet the requirement of starved applications\nYARN-5821. Drop left-over preemption-related code and clean up method visibilities in the Schedulable hierarchy\nYARN-5783. Verify identification of starved applications.\nYARN-5819. Verify fairshare and minshare preemption\nYARN-5885. Cleanup YARN-4752 branch for merge\n\nChange-Id: Iee0962377d019dd64dc69a020725d2eaf360858c\n",
          "commitDate": "23/11/16 9:48 PM",
          "commitName": "10468529a9b858bd945e7ecb063c9c1438efa474",
          "commitAuthor": "Daniel Templeton",
          "commitDateOld": "23/11/16 5:08 PM",
          "commitNameOld": "c7a5f2906fcfd073a402b6981b091bd6d9b80294",
          "commitAuthorOld": "Andrew Wang",
          "daysBetweenCommits": 0.19,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,7 @@\n-    public int compare(RMContainer c1, RMContainer c2) {\n-      int ret \u003d c1.getContainer().getPriority().compareTo(\n-          c2.getContainer().getPriority());\n-      if (ret \u003d\u003d 0) {\n-        return c2.getContainerId().compareTo(c1.getContainerId());\n+    public int compare(FSAppAttempt app1, FSAppAttempt app2) {\n+      int ret \u003d 1;\n+      if (Resources.fitsIn(app1.getStarvation(), app2.getStarvation())) {\n+        ret \u003d -1;\n       }\n       return ret;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public int compare(FSAppAttempt app1, FSAppAttempt app2) {\n      int ret \u003d 1;\n      if (Resources.fitsIn(app1.getStarvation(), app2.getStarvation())) {\n        ret \u003d -1;\n      }\n      return ret;\n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSStarvedApps.java",
          "extendedDetails": {
            "oldValue": "[c1-RMContainer, c2-RMContainer]",
            "newValue": "[app1-FSAppAttempt, app2-FSAppAttempt]"
          }
        }
      ]
    },
    "486e718fc1f5befd231494e2ec06bb360484f191": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2399. FairScheduler: Merge AppSchedulable and FSSchedulerApp into FSAppAttempt. (kasha)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1617600 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/08/14 2:43 PM",
      "commitName": "486e718fc1f5befd231494e2ec06bb360484f191",
      "commitAuthor": "Karthik Kambatla",
      "diff": "@@ -0,0 +1,8 @@\n+    public int compare(RMContainer c1, RMContainer c2) {\n+      int ret \u003d c1.getContainer().getPriority().compareTo(\n+          c2.getContainer().getPriority());\n+      if (ret \u003d\u003d 0) {\n+        return c2.getContainerId().compareTo(c1.getContainerId());\n+      }\n+      return ret;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public int compare(RMContainer c1, RMContainer c2) {\n      int ret \u003d c1.getContainer().getPriority().compareTo(\n          c2.getContainer().getPriority());\n      if (ret \u003d\u003d 0) {\n        return c2.getContainerId().compareTo(c1.getContainerId());\n      }\n      return ret;\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSAppAttempt.java"
    }
  }
}