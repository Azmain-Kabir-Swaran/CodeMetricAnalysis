{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DistributedFileSystem.java",
  "functionName": "createSymlink",
  "functionId": "createSymlink___target-Path(modifiers-final)__link-Path(modifiers-final)__createParent-boolean(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
  "functionStartLine": 1742,
  "functionEndLine": 1762,
  "numCommitsSeen": 210,
  "timeTaken": 5880,
  "changeHistory": [
    "687233f20d24c29041929dd0a99d963cec54b6df",
    "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93",
    "1c030c6e58dc83152f933323bb7743ad47f5af27",
    "26971e52ae65590e618a23621be244e588845adc",
    "8767e4cde172b6e6070e3fd45325ede617b99343"
  ],
  "changeHistoryShort": {
    "687233f20d24c29041929dd0a99d963cec54b6df": "Ybodychange",
    "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93": "Ymultichange(Yexceptionschange,Ybodychange)",
    "1c030c6e58dc83152f933323bb7743ad47f5af27": "Yfilerename",
    "26971e52ae65590e618a23621be244e588845adc": "Ybodychange",
    "8767e4cde172b6e6070e3fd45325ede617b99343": "Yintroduced"
  },
  "changeHistoryDetails": {
    "687233f20d24c29041929dd0a99d963cec54b6df": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13065. Add a new interface for retrieving FS and FC Statistics (Mingliang Liu via cmccabe)\n",
      "commitDate": "11/05/16 1:45 PM",
      "commitName": "687233f20d24c29041929dd0a99d963cec54b6df",
      "commitAuthor": "Colin Patrick Mccabe",
      "commitDateOld": "02/05/16 7:30 PM",
      "commitNameOld": "45a753ccf79d334513c7bc8f2b81c89a4697075d",
      "commitAuthorOld": "Xiaoyu Yao",
      "daysBetweenCommits": 8.76,
      "commitsBetweenForRepo": 55,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,21 @@\n   public void createSymlink(final Path target, final Path link,\n       final boolean createParent) throws IOException {\n     if (!FileSystem.areSymlinksEnabled()) {\n       throw new UnsupportedOperationException(\"Symlinks not supported\");\n     }\n     statistics.incrementWriteOps(1);\n+    storageStatistics.incrementOpCounter(OpType.CREATE_SYM_LINK);\n     final Path absF \u003d fixRelativePart(link);\n     new FileSystemLinkResolver\u003cVoid\u003e() {\n       @Override\n       public Void doCall(final Path p) throws IOException {\n         dfs.createSymlink(target.toString(), getPathName(p), createParent);\n         return null;\n       }\n       @Override\n       public Void next(final FileSystem fs, final Path p) throws IOException {\n         fs.createSymlink(target, p, createParent);\n         return null;\n       }\n     }.resolve(this, absF);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void createSymlink(final Path target, final Path link,\n      final boolean createParent) throws IOException {\n    if (!FileSystem.areSymlinksEnabled()) {\n      throw new UnsupportedOperationException(\"Symlinks not supported\");\n    }\n    statistics.incrementWriteOps(1);\n    storageStatistics.incrementOpCounter(OpType.CREATE_SYM_LINK);\n    final Path absF \u003d fixRelativePart(link);\n    new FileSystemLinkResolver\u003cVoid\u003e() {\n      @Override\n      public Void doCall(final Path p) throws IOException {\n        dfs.createSymlink(target.toString(), getPathName(p), createParent);\n        return null;\n      }\n      @Override\n      public Void next(final FileSystem fs, final Path p) throws IOException {\n        fs.createSymlink(target, p, createParent);\n        return null;\n      }\n    }.resolve(this, absF);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
      "extendedDetails": {}
    },
    "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "HDFS-8979. Clean up checkstyle warnings in hadoop-hdfs-client module. Contributed by Mingliang Liu.\n",
      "commitDate": "03/10/15 11:38 AM",
      "commitName": "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93",
      "commitAuthor": "Haohui Mai",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "HDFS-8979. Clean up checkstyle warnings in hadoop-hdfs-client module. Contributed by Mingliang Liu.\n",
          "commitDate": "03/10/15 11:38 AM",
          "commitName": "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "29/09/15 1:39 AM",
          "commitNameOld": "8fd55202468b28422b0df888641c9b08906fe4a7",
          "commitAuthorOld": "",
          "daysBetweenCommits": 4.42,
          "commitsBetweenForRepo": 29,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,20 @@\n   public void createSymlink(final Path target, final Path link,\n-      final boolean createParent) throws AccessControlException,\n-      FileAlreadyExistsException, FileNotFoundException,\n-      ParentNotDirectoryException, UnsupportedFileSystemException, \n-      IOException {\n+      final boolean createParent) throws IOException {\n     if (!FileSystem.areSymlinksEnabled()) {\n       throw new UnsupportedOperationException(\"Symlinks not supported\");\n     }\n     statistics.incrementWriteOps(1);\n     final Path absF \u003d fixRelativePart(link);\n     new FileSystemLinkResolver\u003cVoid\u003e() {\n       @Override\n-      public Void doCall(final Path p) throws IOException,\n-          UnresolvedLinkException {\n+      public Void doCall(final Path p) throws IOException {\n         dfs.createSymlink(target.toString(), getPathName(p), createParent);\n         return null;\n       }\n       @Override\n-      public Void next(final FileSystem fs, final Path p)\n-          throws IOException, UnresolvedLinkException {\n+      public Void next(final FileSystem fs, final Path p) throws IOException {\n         fs.createSymlink(target, p, createParent);\n         return null;\n       }\n     }.resolve(this, absF);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void createSymlink(final Path target, final Path link,\n      final boolean createParent) throws IOException {\n    if (!FileSystem.areSymlinksEnabled()) {\n      throw new UnsupportedOperationException(\"Symlinks not supported\");\n    }\n    statistics.incrementWriteOps(1);\n    final Path absF \u003d fixRelativePart(link);\n    new FileSystemLinkResolver\u003cVoid\u003e() {\n      @Override\n      public Void doCall(final Path p) throws IOException {\n        dfs.createSymlink(target.toString(), getPathName(p), createParent);\n        return null;\n      }\n      @Override\n      public Void next(final FileSystem fs, final Path p) throws IOException {\n        fs.createSymlink(target, p, createParent);\n        return null;\n      }\n    }.resolve(this, absF);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
          "extendedDetails": {
            "oldValue": "[AccessControlException, FileAlreadyExistsException, FileNotFoundException, ParentNotDirectoryException, UnsupportedFileSystemException, IOException]",
            "newValue": "[IOException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-8979. Clean up checkstyle warnings in hadoop-hdfs-client module. Contributed by Mingliang Liu.\n",
          "commitDate": "03/10/15 11:38 AM",
          "commitName": "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "29/09/15 1:39 AM",
          "commitNameOld": "8fd55202468b28422b0df888641c9b08906fe4a7",
          "commitAuthorOld": "",
          "daysBetweenCommits": 4.42,
          "commitsBetweenForRepo": 29,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,20 @@\n   public void createSymlink(final Path target, final Path link,\n-      final boolean createParent) throws AccessControlException,\n-      FileAlreadyExistsException, FileNotFoundException,\n-      ParentNotDirectoryException, UnsupportedFileSystemException, \n-      IOException {\n+      final boolean createParent) throws IOException {\n     if (!FileSystem.areSymlinksEnabled()) {\n       throw new UnsupportedOperationException(\"Symlinks not supported\");\n     }\n     statistics.incrementWriteOps(1);\n     final Path absF \u003d fixRelativePart(link);\n     new FileSystemLinkResolver\u003cVoid\u003e() {\n       @Override\n-      public Void doCall(final Path p) throws IOException,\n-          UnresolvedLinkException {\n+      public Void doCall(final Path p) throws IOException {\n         dfs.createSymlink(target.toString(), getPathName(p), createParent);\n         return null;\n       }\n       @Override\n-      public Void next(final FileSystem fs, final Path p)\n-          throws IOException, UnresolvedLinkException {\n+      public Void next(final FileSystem fs, final Path p) throws IOException {\n         fs.createSymlink(target, p, createParent);\n         return null;\n       }\n     }.resolve(this, absF);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void createSymlink(final Path target, final Path link,\n      final boolean createParent) throws IOException {\n    if (!FileSystem.areSymlinksEnabled()) {\n      throw new UnsupportedOperationException(\"Symlinks not supported\");\n    }\n    statistics.incrementWriteOps(1);\n    final Path absF \u003d fixRelativePart(link);\n    new FileSystemLinkResolver\u003cVoid\u003e() {\n      @Override\n      public Void doCall(final Path p) throws IOException {\n        dfs.createSymlink(target.toString(), getPathName(p), createParent);\n        return null;\n      }\n      @Override\n      public Void next(final FileSystem fs, final Path p) throws IOException {\n        fs.createSymlink(target, p, createParent);\n        return null;\n      }\n    }.resolve(this, absF);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
          "extendedDetails": {}
        }
      ]
    },
    "1c030c6e58dc83152f933323bb7743ad47f5af27": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-8740. Move DistributedFileSystem to hadoop-hdfs-client. Contributed by Mingliang Liu.\n",
      "commitDate": "27/09/15 10:54 AM",
      "commitName": "1c030c6e58dc83152f933323bb7743ad47f5af27",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "27/09/15 1:42 AM",
      "commitNameOld": "f0f984e4e63d0dbafe93062a122ee051330db301",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 0.38,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void createSymlink(final Path target, final Path link,\n      final boolean createParent) throws AccessControlException,\n      FileAlreadyExistsException, FileNotFoundException,\n      ParentNotDirectoryException, UnsupportedFileSystemException, \n      IOException {\n    if (!FileSystem.areSymlinksEnabled()) {\n      throw new UnsupportedOperationException(\"Symlinks not supported\");\n    }\n    statistics.incrementWriteOps(1);\n    final Path absF \u003d fixRelativePart(link);\n    new FileSystemLinkResolver\u003cVoid\u003e() {\n      @Override\n      public Void doCall(final Path p) throws IOException,\n          UnresolvedLinkException {\n        dfs.createSymlink(target.toString(), getPathName(p), createParent);\n        return null;\n      }\n      @Override\n      public Void next(final FileSystem fs, final Path p)\n          throws IOException, UnresolvedLinkException {\n        fs.createSymlink(target, p, createParent);\n        return null;\n      }\n    }.resolve(this, absF);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java"
      }
    },
    "26971e52ae65590e618a23621be244e588845adc": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11852. Disable symlinks in trunk.\n",
      "commitDate": "23/04/15 11:47 AM",
      "commitName": "26971e52ae65590e618a23621be244e588845adc",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "21/04/15 9:59 PM",
      "commitNameOld": "6f8003dc7bc9e8be7b0512c514d370c303faf003",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 1.57,
      "commitsBetweenForRepo": 20,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,25 @@\n   public void createSymlink(final Path target, final Path link,\n       final boolean createParent) throws AccessControlException,\n       FileAlreadyExistsException, FileNotFoundException,\n       ParentNotDirectoryException, UnsupportedFileSystemException, \n       IOException {\n+    if (!FileSystem.areSymlinksEnabled()) {\n+      throw new UnsupportedOperationException(\"Symlinks not supported\");\n+    }\n     statistics.incrementWriteOps(1);\n     final Path absF \u003d fixRelativePart(link);\n     new FileSystemLinkResolver\u003cVoid\u003e() {\n       @Override\n       public Void doCall(final Path p) throws IOException,\n           UnresolvedLinkException {\n         dfs.createSymlink(target.toString(), getPathName(p), createParent);\n         return null;\n       }\n       @Override\n       public Void next(final FileSystem fs, final Path p)\n           throws IOException, UnresolvedLinkException {\n         fs.createSymlink(target, p, createParent);\n         return null;\n       }\n     }.resolve(this, absF);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void createSymlink(final Path target, final Path link,\n      final boolean createParent) throws AccessControlException,\n      FileAlreadyExistsException, FileNotFoundException,\n      ParentNotDirectoryException, UnsupportedFileSystemException, \n      IOException {\n    if (!FileSystem.areSymlinksEnabled()) {\n      throw new UnsupportedOperationException(\"Symlinks not supported\");\n    }\n    statistics.incrementWriteOps(1);\n    final Path absF \u003d fixRelativePart(link);\n    new FileSystemLinkResolver\u003cVoid\u003e() {\n      @Override\n      public Void doCall(final Path p) throws IOException,\n          UnresolvedLinkException {\n        dfs.createSymlink(target.toString(), getPathName(p), createParent);\n        return null;\n      }\n      @Override\n      public Void next(final FileSystem fs, final Path p)\n          throws IOException, UnresolvedLinkException {\n        fs.createSymlink(target, p, createParent);\n        return null;\n      }\n    }.resolve(this, absF);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java",
      "extendedDetails": {}
    },
    "8767e4cde172b6e6070e3fd45325ede617b99343": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-9418.  Add symlink support to DistributedFileSystem (Andrew Wang via Colin Patrick McCabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1502373 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/07/13 2:31 PM",
      "commitName": "8767e4cde172b6e6070e3fd45325ede617b99343",
      "commitAuthor": "Colin McCabe",
      "diff": "@@ -0,0 +1,22 @@\n+  public void createSymlink(final Path target, final Path link,\n+      final boolean createParent) throws AccessControlException,\n+      FileAlreadyExistsException, FileNotFoundException,\n+      ParentNotDirectoryException, UnsupportedFileSystemException, \n+      IOException {\n+    statistics.incrementWriteOps(1);\n+    final Path absF \u003d fixRelativePart(link);\n+    new FileSystemLinkResolver\u003cVoid\u003e() {\n+      @Override\n+      public Void doCall(final Path p) throws IOException,\n+          UnresolvedLinkException {\n+        dfs.createSymlink(target.toString(), getPathName(p), createParent);\n+        return null;\n+      }\n+      @Override\n+      public Void next(final FileSystem fs, final Path p)\n+          throws IOException, UnresolvedLinkException {\n+        fs.createSymlink(target, p, createParent);\n+        return null;\n+      }\n+    }.resolve(this, absF);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void createSymlink(final Path target, final Path link,\n      final boolean createParent) throws AccessControlException,\n      FileAlreadyExistsException, FileNotFoundException,\n      ParentNotDirectoryException, UnsupportedFileSystemException, \n      IOException {\n    statistics.incrementWriteOps(1);\n    final Path absF \u003d fixRelativePart(link);\n    new FileSystemLinkResolver\u003cVoid\u003e() {\n      @Override\n      public Void doCall(final Path p) throws IOException,\n          UnresolvedLinkException {\n        dfs.createSymlink(target.toString(), getPathName(p), createParent);\n        return null;\n      }\n      @Override\n      public Void next(final FileSystem fs, final Path p)\n          throws IOException, UnresolvedLinkException {\n        fs.createSymlink(target, p, createParent);\n        return null;\n      }\n    }.resolve(this, absF);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DistributedFileSystem.java"
    }
  }
}