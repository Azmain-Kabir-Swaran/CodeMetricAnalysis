{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FiCaSchedulerApp.java",
  "functionName": "reserve",
  "functionId": "reserve___schedulerKey-SchedulerRequestKey__node-FiCaSchedulerNode__rmContainer-RMContainer__container-Container__reReservation-boolean",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerApp.java",
  "functionStartLine": 900,
  "functionEndLine": 914,
  "numCommitsSeen": 349,
  "timeTaken": 13297,
  "changeHistory": [
    "e9c2aa1bc383cb08784846534415bf17667d6e41",
    "de3b4aac561258ad242a3c5ed1c919428893fd4c",
    "5aace38b748ba71aaadd2c4d64eba8dc1f816828",
    "83fe34ac0896cee0918bbfad7bd51231e4aec39b",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "7f2b1eadc1b0807ec1302a0c3488bf6e7a59bc76",
    "339b85b88ead760c6d4dc0f63a72780d6d5df8c2",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "e9c2aa1bc383cb08784846534415bf17667d6e41": "Ybodychange",
    "de3b4aac561258ad242a3c5ed1c919428893fd4c": "Ymultichange(Yparameterchange,Ybodychange)",
    "5aace38b748ba71aaadd2c4d64eba8dc1f816828": "Ymultichange(Yparameterchange,Ybodychange)",
    "83fe34ac0896cee0918bbfad7bd51231e4aec39b": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yparameterchange)",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "7f2b1eadc1b0807ec1302a0c3488bf6e7a59bc76": "Yparameterchange",
    "339b85b88ead760c6d4dc0f63a72780d6d5df8c2": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e9c2aa1bc383cb08784846534415bf17667d6e41": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6467. CSQueueMetrics needs to update the current metrics for default partition only. Contributed by Manikandan R.\n",
      "commitDate": "19/06/17 9:01 AM",
      "commitName": "e9c2aa1bc383cb08784846534415bf17667d6e41",
      "commitAuthor": "Naganarasimha",
      "commitDateOld": "27/03/17 5:23 PM",
      "commitNameOld": "9bae6720cb8432efd78c909dc624c00e367cedf5",
      "commitAuthorOld": "Robert Kanter",
      "daysBetweenCommits": 83.65,
      "commitsBetweenForRepo": 437,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n   public void reserve(SchedulerRequestKey schedulerKey, FiCaSchedulerNode node,\n       RMContainer rmContainer, Container container, boolean reReservation) {\n     // Update reserved metrics if this is the first reservation\n     // rmContainer will be moved to reserved in the super.reserve\n     if (!reReservation) {\n-      queue.getMetrics().reserveResource(\n+      queue.getMetrics().reserveResource(node.getPartition(),\n           getUser(), container.getResource());\n     }\n \n     // Inform the application\n     rmContainer \u003d super.reserve(node, schedulerKey, rmContainer, container);\n \n     // Update the node\n     node.reserveResource(this, schedulerKey, rmContainer);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void reserve(SchedulerRequestKey schedulerKey, FiCaSchedulerNode node,\n      RMContainer rmContainer, Container container, boolean reReservation) {\n    // Update reserved metrics if this is the first reservation\n    // rmContainer will be moved to reserved in the super.reserve\n    if (!reReservation) {\n      queue.getMetrics().reserveResource(node.getPartition(),\n          getUser(), container.getResource());\n    }\n\n    // Inform the application\n    rmContainer \u003d super.reserve(node, schedulerKey, rmContainer, container);\n\n    // Update the node\n    node.reserveResource(this, schedulerKey, rmContainer);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerApp.java",
      "extendedDetails": {}
    },
    "de3b4aac561258ad242a3c5ed1c919428893fd4c": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-5716. Add global scheduler interface definition and update CapacityScheduler to use it. Contributed by Wangda Tan\n",
      "commitDate": "07/11/16 10:14 AM",
      "commitName": "de3b4aac561258ad242a3c5ed1c919428893fd4c",
      "commitAuthor": "Jian He",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-5716. Add global scheduler interface definition and update CapacityScheduler to use it. Contributed by Wangda Tan\n",
          "commitDate": "07/11/16 10:14 AM",
          "commitName": "de3b4aac561258ad242a3c5ed1c919428893fd4c",
          "commitAuthor": "Jian He",
          "commitDateOld": "31/10/16 3:18 PM",
          "commitNameOld": "90dd3a8148468ac37a3f2173ad8d45e38bfcb0c9",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 6.83,
          "commitsBetweenForRepo": 84,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,15 @@\n-  public void reserve(SchedulerRequestKey schedulerKey,\n-      FiCaSchedulerNode node, RMContainer rmContainer, Container container) {\n+  public void reserve(SchedulerRequestKey schedulerKey, FiCaSchedulerNode node,\n+      RMContainer rmContainer, Container container, boolean reReservation) {\n     // Update reserved metrics if this is the first reservation\n-    if (rmContainer \u003d\u003d null) {\n+    // rmContainer will be moved to reserved in the super.reserve\n+    if (!reReservation) {\n       queue.getMetrics().reserveResource(\n           getUser(), container.getResource());\n     }\n \n     // Inform the application\n     rmContainer \u003d super.reserve(node, schedulerKey, rmContainer, container);\n \n     // Update the node\n     node.reserveResource(this, schedulerKey, rmContainer);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void reserve(SchedulerRequestKey schedulerKey, FiCaSchedulerNode node,\n      RMContainer rmContainer, Container container, boolean reReservation) {\n    // Update reserved metrics if this is the first reservation\n    // rmContainer will be moved to reserved in the super.reserve\n    if (!reReservation) {\n      queue.getMetrics().reserveResource(\n          getUser(), container.getResource());\n    }\n\n    // Inform the application\n    rmContainer \u003d super.reserve(node, schedulerKey, rmContainer, container);\n\n    // Update the node\n    node.reserveResource(this, schedulerKey, rmContainer);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerApp.java",
          "extendedDetails": {
            "oldValue": "[schedulerKey-SchedulerRequestKey, node-FiCaSchedulerNode, rmContainer-RMContainer, container-Container]",
            "newValue": "[schedulerKey-SchedulerRequestKey, node-FiCaSchedulerNode, rmContainer-RMContainer, container-Container, reReservation-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-5716. Add global scheduler interface definition and update CapacityScheduler to use it. Contributed by Wangda Tan\n",
          "commitDate": "07/11/16 10:14 AM",
          "commitName": "de3b4aac561258ad242a3c5ed1c919428893fd4c",
          "commitAuthor": "Jian He",
          "commitDateOld": "31/10/16 3:18 PM",
          "commitNameOld": "90dd3a8148468ac37a3f2173ad8d45e38bfcb0c9",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 6.83,
          "commitsBetweenForRepo": 84,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,15 @@\n-  public void reserve(SchedulerRequestKey schedulerKey,\n-      FiCaSchedulerNode node, RMContainer rmContainer, Container container) {\n+  public void reserve(SchedulerRequestKey schedulerKey, FiCaSchedulerNode node,\n+      RMContainer rmContainer, Container container, boolean reReservation) {\n     // Update reserved metrics if this is the first reservation\n-    if (rmContainer \u003d\u003d null) {\n+    // rmContainer will be moved to reserved in the super.reserve\n+    if (!reReservation) {\n       queue.getMetrics().reserveResource(\n           getUser(), container.getResource());\n     }\n \n     // Inform the application\n     rmContainer \u003d super.reserve(node, schedulerKey, rmContainer, container);\n \n     // Update the node\n     node.reserveResource(this, schedulerKey, rmContainer);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void reserve(SchedulerRequestKey schedulerKey, FiCaSchedulerNode node,\n      RMContainer rmContainer, Container container, boolean reReservation) {\n    // Update reserved metrics if this is the first reservation\n    // rmContainer will be moved to reserved in the super.reserve\n    if (!reReservation) {\n      queue.getMetrics().reserveResource(\n          getUser(), container.getResource());\n    }\n\n    // Inform the application\n    rmContainer \u003d super.reserve(node, schedulerKey, rmContainer, container);\n\n    // Update the node\n    node.reserveResource(this, schedulerKey, rmContainer);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerApp.java",
          "extendedDetails": {}
        }
      ]
    },
    "5aace38b748ba71aaadd2c4d64eba8dc1f816828": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-5392. Replace use of Priority in the Scheduling infrastructure with an opaque ShedulerRequestKey. (asuresh and subru)\n",
      "commitDate": "26/07/16 2:54 PM",
      "commitName": "5aace38b748ba71aaadd2c4d64eba8dc1f816828",
      "commitAuthor": "Arun Suresh",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-5392. Replace use of Priority in the Scheduling infrastructure with an opaque ShedulerRequestKey. (asuresh and subru)\n",
          "commitDate": "26/07/16 2:54 PM",
          "commitName": "5aace38b748ba71aaadd2c4d64eba8dc1f816828",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "05/05/16 12:56 PM",
          "commitNameOld": "bb62e0592566b2fcae7136b30972aad2d3ac55b0",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 82.08,
          "commitsBetweenForRepo": 671,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,14 @@\n-  public void reserve(Priority priority,\n+  public void reserve(SchedulerRequestKey schedulerKey,\n       FiCaSchedulerNode node, RMContainer rmContainer, Container container) {\n     // Update reserved metrics if this is the first reservation\n     if (rmContainer \u003d\u003d null) {\n       queue.getMetrics().reserveResource(\n           getUser(), container.getResource());\n     }\n \n     // Inform the application\n-    rmContainer \u003d super.reserve(node, priority, rmContainer, container);\n+    rmContainer \u003d super.reserve(node, schedulerKey, rmContainer, container);\n \n     // Update the node\n-    node.reserveResource(this, priority, rmContainer);\n+    node.reserveResource(this, schedulerKey, rmContainer);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void reserve(SchedulerRequestKey schedulerKey,\n      FiCaSchedulerNode node, RMContainer rmContainer, Container container) {\n    // Update reserved metrics if this is the first reservation\n    if (rmContainer \u003d\u003d null) {\n      queue.getMetrics().reserveResource(\n          getUser(), container.getResource());\n    }\n\n    // Inform the application\n    rmContainer \u003d super.reserve(node, schedulerKey, rmContainer, container);\n\n    // Update the node\n    node.reserveResource(this, schedulerKey, rmContainer);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerApp.java",
          "extendedDetails": {
            "oldValue": "[priority-Priority, node-FiCaSchedulerNode, rmContainer-RMContainer, container-Container]",
            "newValue": "[schedulerKey-SchedulerRequestKey, node-FiCaSchedulerNode, rmContainer-RMContainer, container-Container]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-5392. Replace use of Priority in the Scheduling infrastructure with an opaque ShedulerRequestKey. (asuresh and subru)\n",
          "commitDate": "26/07/16 2:54 PM",
          "commitName": "5aace38b748ba71aaadd2c4d64eba8dc1f816828",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "05/05/16 12:56 PM",
          "commitNameOld": "bb62e0592566b2fcae7136b30972aad2d3ac55b0",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 82.08,
          "commitsBetweenForRepo": 671,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,14 @@\n-  public void reserve(Priority priority,\n+  public void reserve(SchedulerRequestKey schedulerKey,\n       FiCaSchedulerNode node, RMContainer rmContainer, Container container) {\n     // Update reserved metrics if this is the first reservation\n     if (rmContainer \u003d\u003d null) {\n       queue.getMetrics().reserveResource(\n           getUser(), container.getResource());\n     }\n \n     // Inform the application\n-    rmContainer \u003d super.reserve(node, priority, rmContainer, container);\n+    rmContainer \u003d super.reserve(node, schedulerKey, rmContainer, container);\n \n     // Update the node\n-    node.reserveResource(this, priority, rmContainer);\n+    node.reserveResource(this, schedulerKey, rmContainer);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void reserve(SchedulerRequestKey schedulerKey,\n      FiCaSchedulerNode node, RMContainer rmContainer, Container container) {\n    // Update reserved metrics if this is the first reservation\n    if (rmContainer \u003d\u003d null) {\n      queue.getMetrics().reserveResource(\n          getUser(), container.getResource());\n    }\n\n    // Inform the application\n    rmContainer \u003d super.reserve(node, schedulerKey, rmContainer, container);\n\n    // Update the node\n    node.reserveResource(this, schedulerKey, rmContainer);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerApp.java",
          "extendedDetails": {}
        }
      ]
    },
    "83fe34ac0896cee0918bbfad7bd51231e4aec39b": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yparameterchange)",
      "commitMessage": "YARN-3026. Move application-specific container allocation logic from LeafQueue to FiCaSchedulerApp. Contributed by Wangda Tan\n",
      "commitDate": "24/07/15 2:00 PM",
      "commitName": "83fe34ac0896cee0918bbfad7bd51231e4aec39b",
      "commitAuthor": "Jian He",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-3026. Move application-specific container allocation logic from LeafQueue to FiCaSchedulerApp. Contributed by Wangda Tan\n",
          "commitDate": "24/07/15 2:00 PM",
          "commitName": "83fe34ac0896cee0918bbfad7bd51231e4aec39b",
          "commitAuthor": "Jian He",
          "commitDateOld": "24/07/15 1:38 PM",
          "commitNameOld": "fc42fa8ae3bc9d6d055090a7bb5e6f0c5972fcff",
          "commitAuthorOld": "carlo curino",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,14 @@\n-  private void reserve(FiCaSchedulerApp application, Priority priority, \n+  public void reserve(Priority priority,\n       FiCaSchedulerNode node, RMContainer rmContainer, Container container) {\n     // Update reserved metrics if this is the first reservation\n     if (rmContainer \u003d\u003d null) {\n-      getMetrics().reserveResource(\n-          application.getUser(), container.getResource());\n+      queue.getMetrics().reserveResource(\n+          getUser(), container.getResource());\n     }\n \n-    // Inform the application \n-    rmContainer \u003d application.reserve(node, priority, rmContainer, container);\n-    \n+    // Inform the application\n+    rmContainer \u003d super.reserve(node, priority, rmContainer, container);\n+\n     // Update the node\n-    node.reserveResource(application, priority, rmContainer);\n+    node.reserveResource(this, priority, rmContainer);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void reserve(Priority priority,\n      FiCaSchedulerNode node, RMContainer rmContainer, Container container) {\n    // Update reserved metrics if this is the first reservation\n    if (rmContainer \u003d\u003d null) {\n      queue.getMetrics().reserveResource(\n          getUser(), container.getResource());\n    }\n\n    // Inform the application\n    rmContainer \u003d super.reserve(node, priority, rmContainer, container);\n\n    // Update the node\n    node.reserveResource(this, priority, rmContainer);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerApp.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerApp.java",
            "oldMethodName": "reserve",
            "newMethodName": "reserve"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-3026. Move application-specific container allocation logic from LeafQueue to FiCaSchedulerApp. Contributed by Wangda Tan\n",
          "commitDate": "24/07/15 2:00 PM",
          "commitName": "83fe34ac0896cee0918bbfad7bd51231e4aec39b",
          "commitAuthor": "Jian He",
          "commitDateOld": "24/07/15 1:38 PM",
          "commitNameOld": "fc42fa8ae3bc9d6d055090a7bb5e6f0c5972fcff",
          "commitAuthorOld": "carlo curino",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,14 @@\n-  private void reserve(FiCaSchedulerApp application, Priority priority, \n+  public void reserve(Priority priority,\n       FiCaSchedulerNode node, RMContainer rmContainer, Container container) {\n     // Update reserved metrics if this is the first reservation\n     if (rmContainer \u003d\u003d null) {\n-      getMetrics().reserveResource(\n-          application.getUser(), container.getResource());\n+      queue.getMetrics().reserveResource(\n+          getUser(), container.getResource());\n     }\n \n-    // Inform the application \n-    rmContainer \u003d application.reserve(node, priority, rmContainer, container);\n-    \n+    // Inform the application\n+    rmContainer \u003d super.reserve(node, priority, rmContainer, container);\n+\n     // Update the node\n-    node.reserveResource(application, priority, rmContainer);\n+    node.reserveResource(this, priority, rmContainer);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void reserve(Priority priority,\n      FiCaSchedulerNode node, RMContainer rmContainer, Container container) {\n    // Update reserved metrics if this is the first reservation\n    if (rmContainer \u003d\u003d null) {\n      queue.getMetrics().reserveResource(\n          getUser(), container.getResource());\n    }\n\n    // Inform the application\n    rmContainer \u003d super.reserve(node, priority, rmContainer, container);\n\n    // Update the node\n    node.reserveResource(this, priority, rmContainer);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerApp.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3026. Move application-specific container allocation logic from LeafQueue to FiCaSchedulerApp. Contributed by Wangda Tan\n",
          "commitDate": "24/07/15 2:00 PM",
          "commitName": "83fe34ac0896cee0918bbfad7bd51231e4aec39b",
          "commitAuthor": "Jian He",
          "commitDateOld": "24/07/15 1:38 PM",
          "commitNameOld": "fc42fa8ae3bc9d6d055090a7bb5e6f0c5972fcff",
          "commitAuthorOld": "carlo curino",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,14 @@\n-  private void reserve(FiCaSchedulerApp application, Priority priority, \n+  public void reserve(Priority priority,\n       FiCaSchedulerNode node, RMContainer rmContainer, Container container) {\n     // Update reserved metrics if this is the first reservation\n     if (rmContainer \u003d\u003d null) {\n-      getMetrics().reserveResource(\n-          application.getUser(), container.getResource());\n+      queue.getMetrics().reserveResource(\n+          getUser(), container.getResource());\n     }\n \n-    // Inform the application \n-    rmContainer \u003d application.reserve(node, priority, rmContainer, container);\n-    \n+    // Inform the application\n+    rmContainer \u003d super.reserve(node, priority, rmContainer, container);\n+\n     // Update the node\n-    node.reserveResource(application, priority, rmContainer);\n+    node.reserveResource(this, priority, rmContainer);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void reserve(Priority priority,\n      FiCaSchedulerNode node, RMContainer rmContainer, Container container) {\n    // Update reserved metrics if this is the first reservation\n    if (rmContainer \u003d\u003d null) {\n      queue.getMetrics().reserveResource(\n          getUser(), container.getResource());\n    }\n\n    // Inform the application\n    rmContainer \u003d super.reserve(node, priority, rmContainer, container);\n\n    // Update the node\n    node.reserveResource(this, priority, rmContainer);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerApp.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-3026. Move application-specific container allocation logic from LeafQueue to FiCaSchedulerApp. Contributed by Wangda Tan\n",
          "commitDate": "24/07/15 2:00 PM",
          "commitName": "83fe34ac0896cee0918bbfad7bd51231e4aec39b",
          "commitAuthor": "Jian He",
          "commitDateOld": "24/07/15 1:38 PM",
          "commitNameOld": "fc42fa8ae3bc9d6d055090a7bb5e6f0c5972fcff",
          "commitAuthorOld": "carlo curino",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,14 @@\n-  private void reserve(FiCaSchedulerApp application, Priority priority, \n+  public void reserve(Priority priority,\n       FiCaSchedulerNode node, RMContainer rmContainer, Container container) {\n     // Update reserved metrics if this is the first reservation\n     if (rmContainer \u003d\u003d null) {\n-      getMetrics().reserveResource(\n-          application.getUser(), container.getResource());\n+      queue.getMetrics().reserveResource(\n+          getUser(), container.getResource());\n     }\n \n-    // Inform the application \n-    rmContainer \u003d application.reserve(node, priority, rmContainer, container);\n-    \n+    // Inform the application\n+    rmContainer \u003d super.reserve(node, priority, rmContainer, container);\n+\n     // Update the node\n-    node.reserveResource(application, priority, rmContainer);\n+    node.reserveResource(this, priority, rmContainer);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void reserve(Priority priority,\n      FiCaSchedulerNode node, RMContainer rmContainer, Container container) {\n    // Update reserved metrics if this is the first reservation\n    if (rmContainer \u003d\u003d null) {\n      queue.getMetrics().reserveResource(\n          getUser(), container.getResource());\n    }\n\n    // Inform the application\n    rmContainer \u003d super.reserve(node, priority, rmContainer, container);\n\n    // Update the node\n    node.reserveResource(this, priority, rmContainer);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerApp.java",
          "extendedDetails": {
            "oldValue": "[application-FiCaSchedulerApp, priority-Priority, node-FiCaSchedulerNode, rmContainer-RMContainer, container-Container]",
            "newValue": "[priority-Priority, node-FiCaSchedulerNode, rmContainer-RMContainer, container-Container]"
          }
        }
      ]
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void reserve(FiCaSchedulerApp application, Priority priority, \n      FiCaSchedulerNode node, RMContainer rmContainer, Container container) {\n    // Update reserved metrics if this is the first reservation\n    if (rmContainer \u003d\u003d null) {\n      getMetrics().reserveResource(\n          application.getUser(), container.getResource());\n    }\n\n    // Inform the application \n    rmContainer \u003d application.reserve(node, priority, rmContainer, container);\n    \n    // Update the node\n    node.reserveResource(application, priority, rmContainer);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java"
      }
    },
    "7f2b1eadc1b0807ec1302a0c3488bf6e7a59bc76": {
      "type": "Yparameterchange",
      "commitMessage": "MAPREDUCE-4440. Changed SchedulerApp and SchedulerNode to be a minimal interface to allow schedulers to maintain their own.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1362332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/07/12 6:43 PM",
      "commitName": "7f2b1eadc1b0807ec1302a0c3488bf6e7a59bc76",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "10/07/12 2:26 PM",
      "commitNameOld": "3bfb26ad3b5ac46f992a632541c97ca2bc897638",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 6.18,
      "commitsBetweenForRepo": 55,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n-  private void reserve(SchedulerApp application, Priority priority, \n-      SchedulerNode node, RMContainer rmContainer, Container container) {\n+  private void reserve(FiCaSchedulerApp application, Priority priority, \n+      FiCaSchedulerNode node, RMContainer rmContainer, Container container) {\n     // Update reserved metrics if this is the first reservation\n     if (rmContainer \u003d\u003d null) {\n       getMetrics().reserveResource(\n           application.getUser(), container.getResource());\n     }\n \n     // Inform the application \n     rmContainer \u003d application.reserve(node, priority, rmContainer, container);\n     \n     // Update the node\n     node.reserveResource(application, priority, rmContainer);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void reserve(FiCaSchedulerApp application, Priority priority, \n      FiCaSchedulerNode node, RMContainer rmContainer, Container container) {\n    // Update reserved metrics if this is the first reservation\n    if (rmContainer \u003d\u003d null) {\n      getMetrics().reserveResource(\n          application.getUser(), container.getResource());\n    }\n\n    // Inform the application \n    rmContainer \u003d application.reserve(node, priority, rmContainer, container);\n    \n    // Update the node\n    node.reserveResource(application, priority, rmContainer);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {
        "oldValue": "[application-SchedulerApp, priority-Priority, node-SchedulerNode, rmContainer-RMContainer, container-Container]",
        "newValue": "[application-FiCaSchedulerApp, priority-Priority, node-FiCaSchedulerNode, rmContainer-RMContainer, container-Container]"
      }
    },
    "339b85b88ead760c6d4dc0f63a72780d6d5df8c2": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3036. Fixed metrics for reserved resources in CS. Contributed by Robert Evans.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1173453 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "20/09/11 6:14 PM",
      "commitName": "339b85b88ead760c6d4dc0f63a72780d6d5df8c2",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "14/09/11 3:46 PM",
      "commitNameOld": "5183e881097b37b723f07f4d6af06721a326bea1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 6.1,
      "commitsBetweenForRepo": 38,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,14 @@\n   private void reserve(SchedulerApp application, Priority priority, \n       SchedulerNode node, RMContainer rmContainer, Container container) {\n-    rmContainer \u003d application.reserve(node, priority, rmContainer, container);\n-    node.reserveResource(application, priority, rmContainer);\n-    \n     // Update reserved metrics if this is the first reservation\n     if (rmContainer \u003d\u003d null) {\n       getMetrics().reserveResource(\n           application.getUser(), container.getResource());\n     }\n+\n+    // Inform the application \n+    rmContainer \u003d application.reserve(node, priority, rmContainer, container);\n+    \n+    // Update the node\n+    node.reserveResource(application, priority, rmContainer);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void reserve(SchedulerApp application, Priority priority, \n      SchedulerNode node, RMContainer rmContainer, Container container) {\n    // Update reserved metrics if this is the first reservation\n    if (rmContainer \u003d\u003d null) {\n      getMetrics().reserveResource(\n          application.getUser(), container.getResource());\n    }\n\n    // Inform the application \n    rmContainer \u003d application.reserve(node, priority, rmContainer, container);\n    \n    // Update the node\n    node.reserveResource(application, priority, rmContainer);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void reserve(SchedulerApp application, Priority priority, \n      SchedulerNode node, RMContainer rmContainer, Container container) {\n    rmContainer \u003d application.reserve(node, priority, rmContainer, container);\n    node.reserveResource(application, priority, rmContainer);\n    \n    // Update reserved metrics if this is the first reservation\n    if (rmContainer \u003d\u003d null) {\n      getMetrics().reserveResource(\n          application.getUser(), container.getResource());\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,11 @@\n+  private void reserve(SchedulerApp application, Priority priority, \n+      SchedulerNode node, RMContainer rmContainer, Container container) {\n+    rmContainer \u003d application.reserve(node, priority, rmContainer, container);\n+    node.reserveResource(application, priority, rmContainer);\n+    \n+    // Update reserved metrics if this is the first reservation\n+    if (rmContainer \u003d\u003d null) {\n+      getMetrics().reserveResource(\n+          application.getUser(), container.getResource());\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void reserve(SchedulerApp application, Priority priority, \n      SchedulerNode node, RMContainer rmContainer, Container container) {\n    rmContainer \u003d application.reserve(node, priority, rmContainer, container);\n    node.reserveResource(application, priority, rmContainer);\n    \n    // Update reserved metrics if this is the first reservation\n    if (rmContainer \u003d\u003d null) {\n      getMetrics().reserveResource(\n          application.getUser(), container.getResource());\n    }\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java"
    }
  }
}