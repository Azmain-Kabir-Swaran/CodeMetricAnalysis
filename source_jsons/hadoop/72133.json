{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "KerberosName.java",
  "functionName": "replaceParameters",
  "functionId": "replaceParameters___format-String__params-String[]",
  "sourceFilePath": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/util/KerberosName.java",
  "functionStartLine": 273,
  "functionEndLine": 299,
  "numCommitsSeen": 18,
  "timeTaken": 1236,
  "changeHistory": [
    "56248f9d87fdf65df6103f52f47dc6e8b9969abc",
    "2b016dac8232e0f5c43293adcbdf7164f5fca74c",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "a0f120ce68dddb0cb31b64c89f3224313f3cb5af"
  ],
  "changeHistoryShort": {
    "56248f9d87fdf65df6103f52f47dc6e8b9969abc": "Ybodychange",
    "2b016dac8232e0f5c43293adcbdf7164f5fca74c": "Yfilerename",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "a0f120ce68dddb0cb31b64c89f3224313f3cb5af": "Yintroduced"
  },
  "changeHistoryDetails": {
    "56248f9d87fdf65df6103f52f47dc6e8b9969abc": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16556. Fix some alerts raised by LGTM.\n\nContributed by Malcolm Taylor.\n\nChange-Id: Ic60c3f4681dd9d48b3afcba7520bd1e4d3cc4231\n",
      "commitDate": "19/09/19 8:00 AM",
      "commitName": "56248f9d87fdf65df6103f52f47dc6e8b9969abc",
      "commitAuthor": "Malcolm Taylor",
      "commitDateOld": "04/01/19 2:54 PM",
      "commitNameOld": "d43af8b3db4743b4b240751b6f29de6c20cfd6e5",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 257.67,
      "commitsBetweenForRepo": 1997,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n     static String replaceParameters(String format,\n                                     String[] params) throws BadFormatString {\n       Matcher match \u003d parameterPattern.matcher(format);\n       int start \u003d 0;\n       StringBuilder result \u003d new StringBuilder();\n       while (start \u003c format.length() \u0026\u0026 match.find(start)) {\n         result.append(match.group(1));\n         String paramNum \u003d match.group(3);\n         if (paramNum !\u003d null) {\n           try {\n             int num \u003d Integer.parseInt(paramNum);\n-            if (num \u003c 0 || num \u003e params.length) {\n+            if (num \u003c 0 || num \u003e\u003d params.length) {\n               throw new BadFormatString(\"index \" + num + \" from \" + format +\n                                         \" is outside of the valid range 0 to \" +\n                                         (params.length - 1));\n             }\n             result.append(params[num]);\n           } catch (NumberFormatException nfe) {\n             throw new BadFormatString(\"bad format in username mapping in \" +\n                                       paramNum, nfe);\n           }\n \n         }\n         start \u003d match.end();\n       }\n       return result.toString();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    static String replaceParameters(String format,\n                                    String[] params) throws BadFormatString {\n      Matcher match \u003d parameterPattern.matcher(format);\n      int start \u003d 0;\n      StringBuilder result \u003d new StringBuilder();\n      while (start \u003c format.length() \u0026\u0026 match.find(start)) {\n        result.append(match.group(1));\n        String paramNum \u003d match.group(3);\n        if (paramNum !\u003d null) {\n          try {\n            int num \u003d Integer.parseInt(paramNum);\n            if (num \u003c 0 || num \u003e\u003d params.length) {\n              throw new BadFormatString(\"index \" + num + \" from \" + format +\n                                        \" is outside of the valid range 0 to \" +\n                                        (params.length - 1));\n            }\n            result.append(params[num]);\n          } catch (NumberFormatException nfe) {\n            throw new BadFormatString(\"bad format in username mapping in \" +\n                                      paramNum, nfe);\n          }\n\n        }\n        start \u003d match.end();\n      }\n      return result.toString();\n    }",
      "path": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/util/KerberosName.java",
      "extendedDetails": {}
    },
    "2b016dac8232e0f5c43293adcbdf7164f5fca74c": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7579. Rename package names from alfredo to auth.  Contributed by Alejandro Abdelnur\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1163852 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/08/11 3:40 PM",
      "commitName": "2b016dac8232e0f5c43293adcbdf7164f5fca74c",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "31/08/11 2:18 PM",
      "commitNameOld": "4f1a0e36fab1f18e6e2c5fcc72cd9a7634967fcd",
      "commitAuthorOld": "Konstantin Shvachko",
      "daysBetweenCommits": 0.06,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    static String replaceParameters(String format,\n                                    String[] params) throws BadFormatString {\n      Matcher match \u003d parameterPattern.matcher(format);\n      int start \u003d 0;\n      StringBuilder result \u003d new StringBuilder();\n      while (start \u003c format.length() \u0026\u0026 match.find(start)) {\n        result.append(match.group(1));\n        String paramNum \u003d match.group(3);\n        if (paramNum !\u003d null) {\n          try {\n            int num \u003d Integer.parseInt(paramNum);\n            if (num \u003c 0 || num \u003e params.length) {\n              throw new BadFormatString(\"index \" + num + \" from \" + format +\n                                        \" is outside of the valid range 0 to \" +\n                                        (params.length - 1));\n            }\n            result.append(params[num]);\n          } catch (NumberFormatException nfe) {\n            throw new BadFormatString(\"bad format in username mapping in \" +\n                                      paramNum, nfe);\n          }\n\n        }\n        start \u003d match.end();\n      }\n      return result.toString();\n    }",
      "path": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/util/KerberosName.java",
      "extendedDetails": {
        "oldPath": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/alfredo/util/KerberosName.java",
        "newPath": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/util/KerberosName.java"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    static String replaceParameters(String format,\n                                    String[] params) throws BadFormatString {\n      Matcher match \u003d parameterPattern.matcher(format);\n      int start \u003d 0;\n      StringBuilder result \u003d new StringBuilder();\n      while (start \u003c format.length() \u0026\u0026 match.find(start)) {\n        result.append(match.group(1));\n        String paramNum \u003d match.group(3);\n        if (paramNum !\u003d null) {\n          try {\n            int num \u003d Integer.parseInt(paramNum);\n            if (num \u003c 0 || num \u003e params.length) {\n              throw new BadFormatString(\"index \" + num + \" from \" + format +\n                                        \" is outside of the valid range 0 to \" +\n                                        (params.length - 1));\n            }\n            result.append(params[num]);\n          } catch (NumberFormatException nfe) {\n            throw new BadFormatString(\"bad format in username mapping in \" +\n                                      paramNum, nfe);\n          }\n\n        }\n        start \u003d match.end();\n      }\n      return result.toString();\n    }",
      "path": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/alfredo/util/KerberosName.java",
      "extendedDetails": {
        "oldPath": "hadoop-alfredo/src/main/java/org/apache/hadoop/alfredo/util/KerberosName.java",
        "newPath": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/alfredo/util/KerberosName.java"
      }
    },
    "a0f120ce68dddb0cb31b64c89f3224313f3cb5af": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7119. add Kerberos HTTP SPNEGO authentication support to Hadoop JT/NN/DN/TT web-consoles. (Alejandro Abdelnur via atm)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159804 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 3:31 PM",
      "commitName": "a0f120ce68dddb0cb31b64c89f3224313f3cb5af",
      "commitAuthor": "Aaron Myers",
      "diff": "@@ -0,0 +1,27 @@\n+    static String replaceParameters(String format,\n+                                    String[] params) throws BadFormatString {\n+      Matcher match \u003d parameterPattern.matcher(format);\n+      int start \u003d 0;\n+      StringBuilder result \u003d new StringBuilder();\n+      while (start \u003c format.length() \u0026\u0026 match.find(start)) {\n+        result.append(match.group(1));\n+        String paramNum \u003d match.group(3);\n+        if (paramNum !\u003d null) {\n+          try {\n+            int num \u003d Integer.parseInt(paramNum);\n+            if (num \u003c 0 || num \u003e params.length) {\n+              throw new BadFormatString(\"index \" + num + \" from \" + format +\n+                                        \" is outside of the valid range 0 to \" +\n+                                        (params.length - 1));\n+            }\n+            result.append(params[num]);\n+          } catch (NumberFormatException nfe) {\n+            throw new BadFormatString(\"bad format in username mapping in \" +\n+                                      paramNum, nfe);\n+          }\n+\n+        }\n+        start \u003d match.end();\n+      }\n+      return result.toString();\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    static String replaceParameters(String format,\n                                    String[] params) throws BadFormatString {\n      Matcher match \u003d parameterPattern.matcher(format);\n      int start \u003d 0;\n      StringBuilder result \u003d new StringBuilder();\n      while (start \u003c format.length() \u0026\u0026 match.find(start)) {\n        result.append(match.group(1));\n        String paramNum \u003d match.group(3);\n        if (paramNum !\u003d null) {\n          try {\n            int num \u003d Integer.parseInt(paramNum);\n            if (num \u003c 0 || num \u003e params.length) {\n              throw new BadFormatString(\"index \" + num + \" from \" + format +\n                                        \" is outside of the valid range 0 to \" +\n                                        (params.length - 1));\n            }\n            result.append(params[num]);\n          } catch (NumberFormatException nfe) {\n            throw new BadFormatString(\"bad format in username mapping in \" +\n                                      paramNum, nfe);\n          }\n\n        }\n        start \u003d match.end();\n      }\n      return result.toString();\n    }",
      "path": "hadoop-alfredo/src/main/java/org/apache/hadoop/alfredo/util/KerberosName.java"
    }
  }
}