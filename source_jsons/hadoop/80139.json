{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FileSystemMultipartUploader.java",
  "functionName": "abort",
  "functionId": "abort___filePath-Path__uploadId-UploadHandle",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystemMultipartUploader.java",
  "functionStartLine": 156,
  "functionEndLine": 165,
  "numCommitsSeen": 6,
  "timeTaken": 1486,
  "changeHistory": [
    "2e6c1109dcdeedb59a3345047e9201271c9a0b27",
    "2ec97abb2e93c1a8127e7a146c08e26454b583fa",
    "980031bb043dd026a6bf42b0e71d304ac89294a5"
  ],
  "changeHistoryShort": {
    "2e6c1109dcdeedb59a3345047e9201271c9a0b27": "Ybodychange",
    "2ec97abb2e93c1a8127e7a146c08e26454b583fa": "Ybodychange",
    "980031bb043dd026a6bf42b0e71d304ac89294a5": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2e6c1109dcdeedb59a3345047e9201271c9a0b27": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15667. FileSystemMultipartUploader should verify that UploadHandle has non-0 length.\nContributed by Ewan Higgs\n",
      "commitDate": "30/08/18 6:33 AM",
      "commitName": "2e6c1109dcdeedb59a3345047e9201271c9a0b27",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "08/08/18 4:50 AM",
      "commitNameOld": "2ec97abb2e93c1a8127e7a146c08e26454b583fa",
      "commitAuthorOld": "Ewan Higgs",
      "daysBetweenCommits": 22.07,
      "commitsBetweenForRepo": 206,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,10 @@\n   public void abort(Path filePath, UploadHandle uploadId) throws IOException {\n     byte[] uploadIdByteArray \u003d uploadId.toByteArray();\n-    Preconditions.checkArgument(uploadIdByteArray.length !\u003d 0,\n-        \"UploadId is empty\");\n+    checkUploadId(uploadIdByteArray);\n     Path collectorPath \u003d new Path(new String(uploadIdByteArray, 0,\n         uploadIdByteArray.length, Charsets.UTF_8));\n \n     // force a check for a file existing; raises FNFE if not found\n     fs.getFileStatus(collectorPath);\n     fs.delete(collectorPath, true);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void abort(Path filePath, UploadHandle uploadId) throws IOException {\n    byte[] uploadIdByteArray \u003d uploadId.toByteArray();\n    checkUploadId(uploadIdByteArray);\n    Path collectorPath \u003d new Path(new String(uploadIdByteArray, 0,\n        uploadIdByteArray.length, Charsets.UTF_8));\n\n    // force a check for a file existing; raises FNFE if not found\n    fs.getFileStatus(collectorPath);\n    fs.delete(collectorPath, true);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystemMultipartUploader.java",
      "extendedDetails": {}
    },
    "2ec97abb2e93c1a8127e7a146c08e26454b583fa": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15576. S3A Multipart Uploader to work with S3Guard and encryption Originally contributed by Ewan Higgs with refinements by Steve Loughran.\n",
      "commitDate": "08/08/18 4:50 AM",
      "commitName": "2ec97abb2e93c1a8127e7a146c08e26454b583fa",
      "commitAuthor": "Ewan Higgs",
      "commitDateOld": "17/06/18 11:54 AM",
      "commitNameOld": "980031bb043dd026a6bf42b0e71d304ac89294a5",
      "commitAuthorOld": "Chris Douglas",
      "daysBetweenCommits": 51.71,
      "commitsBetweenForRepo": 308,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,11 @@\n   public void abort(Path filePath, UploadHandle uploadId) throws IOException {\n     byte[] uploadIdByteArray \u003d uploadId.toByteArray();\n+    Preconditions.checkArgument(uploadIdByteArray.length !\u003d 0,\n+        \"UploadId is empty\");\n     Path collectorPath \u003d new Path(new String(uploadIdByteArray, 0,\n         uploadIdByteArray.length, Charsets.UTF_8));\n+\n+    // force a check for a file existing; raises FNFE if not found\n+    fs.getFileStatus(collectorPath);\n     fs.delete(collectorPath, true);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void abort(Path filePath, UploadHandle uploadId) throws IOException {\n    byte[] uploadIdByteArray \u003d uploadId.toByteArray();\n    Preconditions.checkArgument(uploadIdByteArray.length !\u003d 0,\n        \"UploadId is empty\");\n    Path collectorPath \u003d new Path(new String(uploadIdByteArray, 0,\n        uploadIdByteArray.length, Charsets.UTF_8));\n\n    // force a check for a file existing; raises FNFE if not found\n    fs.getFileStatus(collectorPath);\n    fs.delete(collectorPath, true);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystemMultipartUploader.java",
      "extendedDetails": {}
    },
    "980031bb043dd026a6bf42b0e71d304ac89294a5": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-13186. Multipart Uploader API. Contributed by Ewan Higgs\n",
      "commitDate": "17/06/18 11:54 AM",
      "commitName": "980031bb043dd026a6bf42b0e71d304ac89294a5",
      "commitAuthor": "Chris Douglas",
      "diff": "@@ -0,0 +1,6 @@\n+  public void abort(Path filePath, UploadHandle uploadId) throws IOException {\n+    byte[] uploadIdByteArray \u003d uploadId.toByteArray();\n+    Path collectorPath \u003d new Path(new String(uploadIdByteArray, 0,\n+        uploadIdByteArray.length, Charsets.UTF_8));\n+    fs.delete(collectorPath, true);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void abort(Path filePath, UploadHandle uploadId) throws IOException {\n    byte[] uploadIdByteArray \u003d uploadId.toByteArray();\n    Path collectorPath \u003d new Path(new String(uploadIdByteArray, 0,\n        uploadIdByteArray.length, Charsets.UTF_8));\n    fs.delete(collectorPath, true);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystemMultipartUploader.java"
    }
  }
}