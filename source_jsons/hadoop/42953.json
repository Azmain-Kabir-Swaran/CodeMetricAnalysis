{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "OpportunisticContainerAllocatorAMService.java",
  "functionName": "getLeastLoadedNodes",
  "functionId": "getLeastLoadedNodes",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/OpportunisticContainerAllocatorAMService.java",
  "functionStartLine": 459,
  "functionEndLine": 470,
  "numCommitsSeen": 27,
  "timeTaken": 3494,
  "changeHistory": [
    "61a8436004294db0224dd20aa3997fa2e3136114",
    "a48a0cc7fd8e7ac1c07b260e6078077824f27c35",
    "ac1e5d4f77e3b9df8dcacb0b1f72eecc27931eb8",
    "aa3cab1eb29c56368d15882d7260a994e615e8d8",
    "10be45986cdf86a89055065b752959bd6369d54f"
  ],
  "changeHistoryShort": {
    "61a8436004294db0224dd20aa3997fa2e3136114": "Ybodychange",
    "a48a0cc7fd8e7ac1c07b260e6078077824f27c35": "Ymodifierchange",
    "ac1e5d4f77e3b9df8dcacb0b1f72eecc27931eb8": "Ybodychange",
    "aa3cab1eb29c56368d15882d7260a994e615e8d8": "Ymultichange(Yreturntypechange,Ybodychange)",
    "10be45986cdf86a89055065b752959bd6369d54f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "61a8436004294db0224dd20aa3997fa2e3136114": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9870. Remove unused function from OpportunisticContainerAllocatorAMService. Contributed by Abhishek Modi.\n",
      "commitDate": "02/10/19 5:25 AM",
      "commitName": "61a8436004294db0224dd20aa3997fa2e3136114",
      "commitAuthor": "Abhishek Modi",
      "commitDateOld": "30/09/19 11:10 AM",
      "commitNameOld": "4d3c580b03475a6ec9323d11e6875c542f8e3f6d",
      "commitAuthorOld": "Abhishek Modi",
      "daysBetweenCommits": 1.76,
      "commitsBetweenForRepo": 16,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n   synchronized List\u003cRemoteNode\u003e getLeastLoadedNodes() {\n     long currTime \u003d System.currentTimeMillis();\n     if ((currTime - lastCacheUpdateTime \u003e cacheRefreshInterval)\n         || (cachedNodes \u003d\u003d null)) {\n       cachedNodes \u003d convertToRemoteNodes(\n-          this.nodeMonitor.selectLeastLoadedNodes(this.k));\n+          this.nodeMonitor.selectLeastLoadedNodes(this.numNodes));\n       if (cachedNodes.size() \u003e 0) {\n         lastCacheUpdateTime \u003d currTime;\n       }\n     }\n     return cachedNodes;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized List\u003cRemoteNode\u003e getLeastLoadedNodes() {\n    long currTime \u003d System.currentTimeMillis();\n    if ((currTime - lastCacheUpdateTime \u003e cacheRefreshInterval)\n        || (cachedNodes \u003d\u003d null)) {\n      cachedNodes \u003d convertToRemoteNodes(\n          this.nodeMonitor.selectLeastLoadedNodes(this.numNodes));\n      if (cachedNodes.size() \u003e 0) {\n        lastCacheUpdateTime \u003d currTime;\n      }\n    }\n    return cachedNodes;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/OpportunisticContainerAllocatorAMService.java",
      "extendedDetails": {}
    },
    "a48a0cc7fd8e7ac1c07b260e6078077824f27c35": {
      "type": "Ymodifierchange",
      "commitMessage": "YARN-8606. Opportunistic scheduling does not work post RM failover. Contributed by Bibin A Chundatt.\n",
      "commitDate": "31/07/18 11:47 PM",
      "commitName": "a48a0cc7fd8e7ac1c07b260e6078077824f27c35",
      "commitAuthor": "Sunil G",
      "commitDateOld": "04/05/18 2:59 PM",
      "commitNameOld": "6a69239d867070ee85d79026542033ac661c4c1c",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 88.37,
      "commitsBetweenForRepo": 627,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n-  private synchronized List\u003cRemoteNode\u003e getLeastLoadedNodes() {\n+  synchronized List\u003cRemoteNode\u003e getLeastLoadedNodes() {\n     long currTime \u003d System.currentTimeMillis();\n     if ((currTime - lastCacheUpdateTime \u003e cacheRefreshInterval)\n         || (cachedNodes \u003d\u003d null)) {\n       cachedNodes \u003d convertToRemoteNodes(\n           this.nodeMonitor.selectLeastLoadedNodes(this.k));\n       if (cachedNodes.size() \u003e 0) {\n         lastCacheUpdateTime \u003d currTime;\n       }\n     }\n     return cachedNodes;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized List\u003cRemoteNode\u003e getLeastLoadedNodes() {\n    long currTime \u003d System.currentTimeMillis();\n    if ((currTime - lastCacheUpdateTime \u003e cacheRefreshInterval)\n        || (cachedNodes \u003d\u003d null)) {\n      cachedNodes \u003d convertToRemoteNodes(\n          this.nodeMonitor.selectLeastLoadedNodes(this.k));\n      if (cachedNodes.size() \u003e 0) {\n        lastCacheUpdateTime \u003d currTime;\n      }\n    }\n    return cachedNodes;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/OpportunisticContainerAllocatorAMService.java",
      "extendedDetails": {
        "oldValue": "[private, synchronized]",
        "newValue": "[synchronized]"
      }
    },
    "ac1e5d4f77e3b9df8dcacb0b1f72eecc27931eb8": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5938. Refactoring OpportunisticContainerAllocator to use SchedulerRequestKey instead of Priority and other misc fixes (asuresh)\n",
      "commitDate": "27/12/16 12:40 PM",
      "commitName": "ac1e5d4f77e3b9df8dcacb0b1f72eecc27931eb8",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "16/12/16 8:14 AM",
      "commitNameOld": "2273a74c1f3895163046cca09ff5e983df301d22",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 11.18,
      "commitsBetweenForRepo": 36,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,12 @@\n   private synchronized List\u003cRemoteNode\u003e getLeastLoadedNodes() {\n     long currTime \u003d System.currentTimeMillis();\n     if ((currTime - lastCacheUpdateTime \u003e cacheRefreshInterval)\n-        || cachedNodes \u003d\u003d null) {\n+        || (cachedNodes \u003d\u003d null)) {\n       cachedNodes \u003d convertToRemoteNodes(\n           this.nodeMonitor.selectLeastLoadedNodes(this.k));\n-      lastCacheUpdateTime \u003d currTime;\n+      if (cachedNodes.size() \u003e 0) {\n+        lastCacheUpdateTime \u003d currTime;\n+      }\n     }\n     return cachedNodes;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized List\u003cRemoteNode\u003e getLeastLoadedNodes() {\n    long currTime \u003d System.currentTimeMillis();\n    if ((currTime - lastCacheUpdateTime \u003e cacheRefreshInterval)\n        || (cachedNodes \u003d\u003d null)) {\n      cachedNodes \u003d convertToRemoteNodes(\n          this.nodeMonitor.selectLeastLoadedNodes(this.k));\n      if (cachedNodes.size() \u003e 0) {\n        lastCacheUpdateTime \u003d currTime;\n      }\n    }\n    return cachedNodes;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/OpportunisticContainerAllocatorAMService.java",
      "extendedDetails": {}
    },
    "aa3cab1eb29c56368d15882d7260a994e615e8d8": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "YARN-5799. Fix Opportunistic Allocation to set the correct value of Node Http Address. (asuresh)\n",
      "commitDate": "29/10/16 2:03 AM",
      "commitName": "aa3cab1eb29c56368d15882d7260a994e615e8d8",
      "commitAuthor": "Arun Suresh",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "YARN-5799. Fix Opportunistic Allocation to set the correct value of Node Http Address. (asuresh)\n",
          "commitDate": "29/10/16 2:03 AM",
          "commitName": "aa3cab1eb29c56368d15882d7260a994e615e8d8",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "29/09/16 3:11 PM",
          "commitNameOld": "10be45986cdf86a89055065b752959bd6369d54f",
          "commitAuthorOld": "Arun Suresh",
          "daysBetweenCommits": 29.45,
          "commitsBetweenForRepo": 258,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,10 @@\n-  private synchronized List\u003cNodeId\u003e getLeastLoadedNodes() {\n+  private synchronized List\u003cRemoteNode\u003e getLeastLoadedNodes() {\n     long currTime \u003d System.currentTimeMillis();\n     if ((currTime - lastCacheUpdateTime \u003e cacheRefreshInterval)\n-        || cachedNodeIds \u003d\u003d null) {\n-      cachedNodeIds \u003d this.nodeMonitor.selectLeastLoadedNodes(this.k);\n+        || cachedNodes \u003d\u003d null) {\n+      cachedNodes \u003d convertToRemoteNodes(\n+          this.nodeMonitor.selectLeastLoadedNodes(this.k));\n       lastCacheUpdateTime \u003d currTime;\n     }\n-    return cachedNodeIds;\n+    return cachedNodes;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private synchronized List\u003cRemoteNode\u003e getLeastLoadedNodes() {\n    long currTime \u003d System.currentTimeMillis();\n    if ((currTime - lastCacheUpdateTime \u003e cacheRefreshInterval)\n        || cachedNodes \u003d\u003d null) {\n      cachedNodes \u003d convertToRemoteNodes(\n          this.nodeMonitor.selectLeastLoadedNodes(this.k));\n      lastCacheUpdateTime \u003d currTime;\n    }\n    return cachedNodes;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/OpportunisticContainerAllocatorAMService.java",
          "extendedDetails": {
            "oldValue": "List\u003cNodeId\u003e",
            "newValue": "List\u003cRemoteNode\u003e"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-5799. Fix Opportunistic Allocation to set the correct value of Node Http Address. (asuresh)\n",
          "commitDate": "29/10/16 2:03 AM",
          "commitName": "aa3cab1eb29c56368d15882d7260a994e615e8d8",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "29/09/16 3:11 PM",
          "commitNameOld": "10be45986cdf86a89055065b752959bd6369d54f",
          "commitAuthorOld": "Arun Suresh",
          "daysBetweenCommits": 29.45,
          "commitsBetweenForRepo": 258,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,10 @@\n-  private synchronized List\u003cNodeId\u003e getLeastLoadedNodes() {\n+  private synchronized List\u003cRemoteNode\u003e getLeastLoadedNodes() {\n     long currTime \u003d System.currentTimeMillis();\n     if ((currTime - lastCacheUpdateTime \u003e cacheRefreshInterval)\n-        || cachedNodeIds \u003d\u003d null) {\n-      cachedNodeIds \u003d this.nodeMonitor.selectLeastLoadedNodes(this.k);\n+        || cachedNodes \u003d\u003d null) {\n+      cachedNodes \u003d convertToRemoteNodes(\n+          this.nodeMonitor.selectLeastLoadedNodes(this.k));\n       lastCacheUpdateTime \u003d currTime;\n     }\n-    return cachedNodeIds;\n+    return cachedNodes;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private synchronized List\u003cRemoteNode\u003e getLeastLoadedNodes() {\n    long currTime \u003d System.currentTimeMillis();\n    if ((currTime - lastCacheUpdateTime \u003e cacheRefreshInterval)\n        || cachedNodes \u003d\u003d null) {\n      cachedNodes \u003d convertToRemoteNodes(\n          this.nodeMonitor.selectLeastLoadedNodes(this.k));\n      lastCacheUpdateTime \u003d currTime;\n    }\n    return cachedNodes;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/OpportunisticContainerAllocatorAMService.java",
          "extendedDetails": {}
        }
      ]
    },
    "10be45986cdf86a89055065b752959bd6369d54f": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5486. Update OpportunisticContainerAllocatorAMService::allocate method to handle OPPORTUNISTIC container requests. (Konstantinos Karanasos via asuresh)\n",
      "commitDate": "29/09/16 3:11 PM",
      "commitName": "10be45986cdf86a89055065b752959bd6369d54f",
      "commitAuthor": "Arun Suresh",
      "diff": "@@ -0,0 +1,9 @@\n+  private synchronized List\u003cNodeId\u003e getLeastLoadedNodes() {\n+    long currTime \u003d System.currentTimeMillis();\n+    if ((currTime - lastCacheUpdateTime \u003e cacheRefreshInterval)\n+        || cachedNodeIds \u003d\u003d null) {\n+      cachedNodeIds \u003d this.nodeMonitor.selectLeastLoadedNodes(this.k);\n+      lastCacheUpdateTime \u003d currTime;\n+    }\n+    return cachedNodeIds;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized List\u003cNodeId\u003e getLeastLoadedNodes() {\n    long currTime \u003d System.currentTimeMillis();\n    if ((currTime - lastCacheUpdateTime \u003e cacheRefreshInterval)\n        || cachedNodeIds \u003d\u003d null) {\n      cachedNodeIds \u003d this.nodeMonitor.selectLeastLoadedNodes(this.k);\n      lastCacheUpdateTime \u003d currTime;\n    }\n    return cachedNodeIds;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/OpportunisticContainerAllocatorAMService.java"
    }
  }
}