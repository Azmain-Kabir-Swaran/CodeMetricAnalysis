{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "KeyShell.java",
  "functionName": "execute",
  "functionId": "execute",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/KeyShell.java",
  "functionStartLine": 383,
  "functionEndLine": 398,
  "numCommitsSeen": 21,
  "timeTaken": 2839,
  "changeHistory": [
    "993ec026d10c7566fd358c022c061bca118c92f0",
    "2007e0cf2ad371e2dbf533c367f09c1f5acd1c0b",
    "eebb39a56fe504672b79ea04c6040e360496b6d7",
    "fae266bbf19e44a2595fa62366d9b65e7c996df8",
    "a78953c974e52abe73905b1901a2354696f4a5a0",
    "b7e67db37238e775150180ff4de65da27a99e282",
    "51b37969df205118c54414bf4b05065692a65ed6",
    "c54a4bb666cdeef41a71ed8eeb5ddbe7c5ccc337",
    "9a1f15532fd26f66a2d1a482e82bb5d7fbab4946",
    "e05ff82bd95dd802233e2424e8eafbd7ec6944c5"
  ],
  "changeHistoryShort": {
    "993ec026d10c7566fd358c022c061bca118c92f0": "Ybodychange",
    "2007e0cf2ad371e2dbf533c367f09c1f5acd1c0b": "Ymultichange(Yexceptionschange,Ybodychange)",
    "eebb39a56fe504672b79ea04c6040e360496b6d7": "Ybodychange",
    "fae266bbf19e44a2595fa62366d9b65e7c996df8": "Ybodychange",
    "a78953c974e52abe73905b1901a2354696f4a5a0": "Ybodychange",
    "b7e67db37238e775150180ff4de65da27a99e282": "Ybodychange",
    "51b37969df205118c54414bf4b05065692a65ed6": "Ybodychange",
    "c54a4bb666cdeef41a71ed8eeb5ddbe7c5ccc337": "Ybodychange",
    "9a1f15532fd26f66a2d1a482e82bb5d7fbab4946": "Ybodychange",
    "e05ff82bd95dd802233e2424e8eafbd7ec6944c5": "Yintroduced"
  },
  "changeHistoryDetails": {
    "993ec026d10c7566fd358c022c061bca118c92f0": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15596. Stack trace should not be printed out when running hadoop key commands. Contributed by Kitti Nanasi.\n",
      "commitDate": "20/07/18 7:46 PM",
      "commitName": "993ec026d10c7566fd358c022c061bca118c92f0",
      "commitAuthor": "Xiao Chen",
      "commitDateOld": "27/06/18 10:37 PM",
      "commitNameOld": "2b2399d623539ab68e71a38fa9fbfc9a405bddb8",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 22.88,
      "commitsBetweenForRepo": 144,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n     public void execute() throws NoSuchAlgorithmException, IOException {\n       try {\n         warnIfTransientProvider();\n         getOut().println(\"Invalidating cache on KeyProvider: \"\n             + provider + \"\\n  for key name: \" + keyName);\n         provider.invalidateCache(keyName);\n         getOut().println(\"Cached keyversions of \" + keyName\n             + \" has been successfully invalidated.\");\n         printProviderWritten();\n       } catch (IOException e) {\n         getOut().println(\"Cannot invalidate cache for key: \" + keyName +\n-            \" within KeyProvider: \" + provider + \". \" + e.toString());\n+            \" within KeyProvider: \" + provider + \".\");\n         throw e;\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void execute() throws NoSuchAlgorithmException, IOException {\n      try {\n        warnIfTransientProvider();\n        getOut().println(\"Invalidating cache on KeyProvider: \"\n            + provider + \"\\n  for key name: \" + keyName);\n        provider.invalidateCache(keyName);\n        getOut().println(\"Cached keyversions of \" + keyName\n            + \" has been successfully invalidated.\");\n        printProviderWritten();\n      } catch (IOException e) {\n        getOut().println(\"Cannot invalidate cache for key: \" + keyName +\n            \" within KeyProvider: \" + provider + \".\");\n        throw e;\n      }\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/KeyShell.java",
      "extendedDetails": {}
    },
    "2007e0cf2ad371e2dbf533c367f09c1f5acd1c0b": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "HDFS-11210. Enhance key rolling to guarantee new KeyVersion is returned from generateEncryptedKeys after a key is rolled.\n",
      "commitDate": "07/02/17 8:36 PM",
      "commitName": "2007e0cf2ad371e2dbf533c367f09c1f5acd1c0b",
      "commitAuthor": "Xiao Chen",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "HDFS-11210. Enhance key rolling to guarantee new KeyVersion is returned from generateEncryptedKeys after a key is rolled.\n",
          "commitDate": "07/02/17 8:36 PM",
          "commitName": "2007e0cf2ad371e2dbf533c367f09c1f5acd1c0b",
          "commitAuthor": "Xiao Chen",
          "commitDateOld": "23/05/16 1:37 PM",
          "commitNameOld": "eebb39a56fe504672b79ea04c6040e360496b6d7",
          "commitAuthorOld": "Allen Wittenauer",
          "daysBetweenCommits": 260.33,
          "commitsBetweenForRepo": 1805,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,15 @@\n-    public void execute() throws IOException, NoSuchAlgorithmException {\n-      warnIfTransientProvider();\n+    public void execute() throws NoSuchAlgorithmException, IOException {\n       try {\n-        provider.createKey(keyName, options);\n-        provider.flush();\n-        getOut().println(keyName + \" has been successfully created \" +\n-            \"with options \" + options.toString() + \".\");\n+        warnIfTransientProvider();\n+        getOut().println(\"Invalidating cache on KeyProvider: \"\n+            + provider + \"\\n  for key name: \" + keyName);\n+        provider.invalidateCache(keyName);\n+        getOut().println(\"Cached keyversions of \" + keyName\n+            + \" has been successfully invalidated.\");\n         printProviderWritten();\n-      } catch (InvalidParameterException e) {\n-        getOut().println(keyName + \" has not been created. \" + e.toString());\n-        throw e;\n       } catch (IOException e) {\n-        getOut().println(keyName + \" has not been created. \" + e.toString());\n-        throw e;\n-      } catch (NoSuchAlgorithmException e) {\n-        getOut().println(keyName + \" has not been created. \" + e.toString());\n+        getOut().println(\"Cannot invalidate cache for key: \" + keyName +\n+            \" within KeyProvider: \" + provider + \". \" + e.toString());\n         throw e;\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void execute() throws NoSuchAlgorithmException, IOException {\n      try {\n        warnIfTransientProvider();\n        getOut().println(\"Invalidating cache on KeyProvider: \"\n            + provider + \"\\n  for key name: \" + keyName);\n        provider.invalidateCache(keyName);\n        getOut().println(\"Cached keyversions of \" + keyName\n            + \" has been successfully invalidated.\");\n        printProviderWritten();\n      } catch (IOException e) {\n        getOut().println(\"Cannot invalidate cache for key: \" + keyName +\n            \" within KeyProvider: \" + provider + \". \" + e.toString());\n        throw e;\n      }\n    }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/KeyShell.java",
          "extendedDetails": {
            "oldValue": "[IOException, NoSuchAlgorithmException]",
            "newValue": "[NoSuchAlgorithmException, IOException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-11210. Enhance key rolling to guarantee new KeyVersion is returned from generateEncryptedKeys after a key is rolled.\n",
          "commitDate": "07/02/17 8:36 PM",
          "commitName": "2007e0cf2ad371e2dbf533c367f09c1f5acd1c0b",
          "commitAuthor": "Xiao Chen",
          "commitDateOld": "23/05/16 1:37 PM",
          "commitNameOld": "eebb39a56fe504672b79ea04c6040e360496b6d7",
          "commitAuthorOld": "Allen Wittenauer",
          "daysBetweenCommits": 260.33,
          "commitsBetweenForRepo": 1805,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,15 @@\n-    public void execute() throws IOException, NoSuchAlgorithmException {\n-      warnIfTransientProvider();\n+    public void execute() throws NoSuchAlgorithmException, IOException {\n       try {\n-        provider.createKey(keyName, options);\n-        provider.flush();\n-        getOut().println(keyName + \" has been successfully created \" +\n-            \"with options \" + options.toString() + \".\");\n+        warnIfTransientProvider();\n+        getOut().println(\"Invalidating cache on KeyProvider: \"\n+            + provider + \"\\n  for key name: \" + keyName);\n+        provider.invalidateCache(keyName);\n+        getOut().println(\"Cached keyversions of \" + keyName\n+            + \" has been successfully invalidated.\");\n         printProviderWritten();\n-      } catch (InvalidParameterException e) {\n-        getOut().println(keyName + \" has not been created. \" + e.toString());\n-        throw e;\n       } catch (IOException e) {\n-        getOut().println(keyName + \" has not been created. \" + e.toString());\n-        throw e;\n-      } catch (NoSuchAlgorithmException e) {\n-        getOut().println(keyName + \" has not been created. \" + e.toString());\n+        getOut().println(\"Cannot invalidate cache for key: \" + keyName +\n+            \" within KeyProvider: \" + provider + \". \" + e.toString());\n         throw e;\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void execute() throws NoSuchAlgorithmException, IOException {\n      try {\n        warnIfTransientProvider();\n        getOut().println(\"Invalidating cache on KeyProvider: \"\n            + provider + \"\\n  for key name: \" + keyName);\n        provider.invalidateCache(keyName);\n        getOut().println(\"Cached keyversions of \" + keyName\n            + \" has been successfully invalidated.\");\n        printProviderWritten();\n      } catch (IOException e) {\n        getOut().println(\"Cannot invalidate cache for key: \" + keyName +\n            \" within KeyProvider: \" + provider + \". \" + e.toString());\n        throw e;\n      }\n    }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/KeyShell.java",
          "extendedDetails": {}
        }
      ]
    },
    "eebb39a56fe504672b79ea04c6040e360496b6d7": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13112. Change CredentialShell to use CommandShell base class (Matthew Paduano via aw)\n",
      "commitDate": "23/05/16 1:37 PM",
      "commitName": "eebb39a56fe504672b79ea04c6040e360496b6d7",
      "commitAuthor": "Allen Wittenauer",
      "commitDateOld": "17/05/16 5:44 PM",
      "commitNameOld": "7154ace71212e9fb9dd6209a92165fb075df7806",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 5.83,
      "commitsBetweenForRepo": 35,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n     public void execute() throws IOException, NoSuchAlgorithmException {\n       warnIfTransientProvider();\n       try {\n         provider.createKey(keyName, options);\n         provider.flush();\n-        out.println(keyName + \" has been successfully created with options \"\n-            + options.toString() + \".\");\n+        getOut().println(keyName + \" has been successfully created \" +\n+            \"with options \" + options.toString() + \".\");\n         printProviderWritten();\n       } catch (InvalidParameterException e) {\n-        out.println(keyName + \" has not been created. \" + e.toString());\n+        getOut().println(keyName + \" has not been created. \" + e.toString());\n         throw e;\n       } catch (IOException e) {\n-        out.println(keyName + \" has not been created. \" + e.toString());\n+        getOut().println(keyName + \" has not been created. \" + e.toString());\n         throw e;\n       } catch (NoSuchAlgorithmException e) {\n-        out.println(keyName + \" has not been created. \" + e.toString());\n+        getOut().println(keyName + \" has not been created. \" + e.toString());\n         throw e;\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void execute() throws IOException, NoSuchAlgorithmException {\n      warnIfTransientProvider();\n      try {\n        provider.createKey(keyName, options);\n        provider.flush();\n        getOut().println(keyName + \" has been successfully created \" +\n            \"with options \" + options.toString() + \".\");\n        printProviderWritten();\n      } catch (InvalidParameterException e) {\n        getOut().println(keyName + \" has not been created. \" + e.toString());\n        throw e;\n      } catch (IOException e) {\n        getOut().println(keyName + \" has not been created. \" + e.toString());\n        throw e;\n      } catch (NoSuchAlgorithmException e) {\n        getOut().println(keyName + \" has not been created. \" + e.toString());\n        throw e;\n      }\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/KeyShell.java",
      "extendedDetails": {}
    },
    "fae266bbf19e44a2595fa62366d9b65e7c996df8": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11173. Improve error messages for some KeyShell commands.\n",
      "commitDate": "25/11/14 4:13 PM",
      "commitName": "fae266bbf19e44a2595fa62366d9b65e7c996df8",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "29/09/14 1:10 PM",
      "commitNameOld": "a78953c974e52abe73905b1901a2354696f4a5a0",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 57.17,
      "commitsBetweenForRepo": 520,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n     public void execute() throws IOException, NoSuchAlgorithmException {\n       warnIfTransientProvider();\n       try {\n         provider.createKey(keyName, options);\n         provider.flush();\n         out.println(keyName + \" has been successfully created with options \"\n             + options.toString() + \".\");\n         printProviderWritten();\n       } catch (InvalidParameterException e) {\n-        out.println(keyName + \" has not been created. \" + e.getMessage());\n+        out.println(keyName + \" has not been created. \" + e.toString());\n         throw e;\n       } catch (IOException e) {\n-        out.println(keyName + \" has not been created. \" + e.getMessage());\n+        out.println(keyName + \" has not been created. \" + e.toString());\n         throw e;\n       } catch (NoSuchAlgorithmException e) {\n-        out.println(keyName + \" has not been created. \" + e.getMessage());\n+        out.println(keyName + \" has not been created. \" + e.toString());\n         throw e;\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void execute() throws IOException, NoSuchAlgorithmException {\n      warnIfTransientProvider();\n      try {\n        provider.createKey(keyName, options);\n        provider.flush();\n        out.println(keyName + \" has been successfully created with options \"\n            + options.toString() + \".\");\n        printProviderWritten();\n      } catch (InvalidParameterException e) {\n        out.println(keyName + \" has not been created. \" + e.toString());\n        throw e;\n      } catch (IOException e) {\n        out.println(keyName + \" has not been created. \" + e.toString());\n        throw e;\n      } catch (NoSuchAlgorithmException e) {\n        out.println(keyName + \" has not been created. \" + e.toString());\n        throw e;\n      }\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/KeyShell.java",
      "extendedDetails": {}
    },
    "a78953c974e52abe73905b1901a2354696f4a5a0": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11110. JavaKeystoreProvider should not report a key as created if it was not flushed to the backing file. (Arun Suresh via wang)\n",
      "commitDate": "29/09/14 1:10 PM",
      "commitName": "a78953c974e52abe73905b1901a2354696f4a5a0",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "04/08/14 7:32 PM",
      "commitNameOld": "b7e67db37238e775150180ff4de65da27a99e282",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 55.73,
      "commitsBetweenForRepo": 536,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n     public void execute() throws IOException, NoSuchAlgorithmException {\n       warnIfTransientProvider();\n       try {\n         provider.createKey(keyName, options);\n+        provider.flush();\n         out.println(keyName + \" has been successfully created with options \"\n             + options.toString() + \".\");\n-        provider.flush();\n         printProviderWritten();\n       } catch (InvalidParameterException e) {\n         out.println(keyName + \" has not been created. \" + e.getMessage());\n         throw e;\n       } catch (IOException e) {\n         out.println(keyName + \" has not been created. \" + e.getMessage());\n         throw e;\n       } catch (NoSuchAlgorithmException e) {\n         out.println(keyName + \" has not been created. \" + e.getMessage());\n         throw e;\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void execute() throws IOException, NoSuchAlgorithmException {\n      warnIfTransientProvider();\n      try {\n        provider.createKey(keyName, options);\n        provider.flush();\n        out.println(keyName + \" has been successfully created with options \"\n            + options.toString() + \".\");\n        printProviderWritten();\n      } catch (InvalidParameterException e) {\n        out.println(keyName + \" has not been created. \" + e.getMessage());\n        throw e;\n      } catch (IOException e) {\n        out.println(keyName + \" has not been created. \" + e.getMessage());\n        throw e;\n      } catch (NoSuchAlgorithmException e) {\n        out.println(keyName + \" has not been created. \" + e.getMessage());\n        throw e;\n      }\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/KeyShell.java",
      "extendedDetails": {}
    },
    "b7e67db37238e775150180ff4de65da27a99e282": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10936. Change default KeyProvider bitlength to 128. (wang)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1615850 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/08/14 7:32 PM",
      "commitName": "b7e67db37238e775150180ff4de65da27a99e282",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "01/08/14 10:45 AM",
      "commitNameOld": "c4a3a29541e1c385af20494984b072b6fd67f2e5",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 3.37,
      "commitsBetweenForRepo": 21,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,19 @@\n     public void execute() throws IOException, NoSuchAlgorithmException {\n       warnIfTransientProvider();\n       try {\n         provider.createKey(keyName, options);\n-        out.println(keyName + \" has been successfully created.\");\n+        out.println(keyName + \" has been successfully created with options \"\n+            + options.toString() + \".\");\n         provider.flush();\n         printProviderWritten();\n       } catch (InvalidParameterException e) {\n         out.println(keyName + \" has not been created. \" + e.getMessage());\n         throw e;\n       } catch (IOException e) {\n         out.println(keyName + \" has not been created. \" + e.getMessage());\n         throw e;\n       } catch (NoSuchAlgorithmException e) {\n         out.println(keyName + \" has not been created. \" + e.getMessage());\n         throw e;\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void execute() throws IOException, NoSuchAlgorithmException {\n      warnIfTransientProvider();\n      try {\n        provider.createKey(keyName, options);\n        out.println(keyName + \" has been successfully created with options \"\n            + options.toString() + \".\");\n        provider.flush();\n        printProviderWritten();\n      } catch (InvalidParameterException e) {\n        out.println(keyName + \" has not been created. \" + e.getMessage());\n        throw e;\n      } catch (IOException e) {\n        out.println(keyName + \" has not been created. \" + e.getMessage());\n        throw e;\n      } catch (NoSuchAlgorithmException e) {\n        out.println(keyName + \" has not been created. \" + e.getMessage());\n        throw e;\n      }\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/KeyShell.java",
      "extendedDetails": {}
    },
    "51b37969df205118c54414bf4b05065692a65ed6": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10586. KeyShell doesn\u0027t allow setting Options via CLI. (clamb via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1595105 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "15/05/14 10:06 PM",
      "commitName": "51b37969df205118c54414bf4b05065692a65ed6",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "13/05/14 11:29 AM",
      "commitNameOld": "c54a4bb666cdeef41a71ed8eeb5ddbe7c5ccc337",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 2.44,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,18 @@\n     public void execute() throws IOException, NoSuchAlgorithmException {\n       warnIfTransientProvider();\n       try {\n-        Options options \u003d KeyProvider.options(getConf());\n         provider.createKey(keyName, options);\n         out.println(keyName + \" has been successfully created.\");\n         provider.flush();\n         printProviderWritten();\n       } catch (InvalidParameterException e) {\n         out.println(keyName + \" has not been created. \" + e.getMessage());\n         throw e;\n       } catch (IOException e) {\n         out.println(keyName + \" has not been created. \" + e.getMessage());\n         throw e;\n       } catch (NoSuchAlgorithmException e) {\n         out.println(keyName + \" has not been created. \" + e.getMessage());\n         throw e;\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void execute() throws IOException, NoSuchAlgorithmException {\n      warnIfTransientProvider();\n      try {\n        provider.createKey(keyName, options);\n        out.println(keyName + \" has been successfully created.\");\n        provider.flush();\n        printProviderWritten();\n      } catch (InvalidParameterException e) {\n        out.println(keyName + \" has not been created. \" + e.getMessage());\n        throw e;\n      } catch (IOException e) {\n        out.println(keyName + \" has not been created. \" + e.getMessage());\n        throw e;\n      } catch (NoSuchAlgorithmException e) {\n        out.println(keyName + \" has not been created. \" + e.getMessage());\n        throw e;\n      }\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/KeyShell.java",
      "extendedDetails": {}
    },
    "c54a4bb666cdeef41a71ed8eeb5ddbe7c5ccc337": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10583. bin/hadoop key throws NPE with no args and assorted other fixups. (clamb via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1594320 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/05/14 11:29 AM",
      "commitName": "c54a4bb666cdeef41a71ed8eeb5ddbe7c5ccc337",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "24/04/14 8:49 AM",
      "commitNameOld": "f9a9c1ee633fd50ba478b87e1c9d84dce089a345",
      "commitAuthorOld": "Owen O\u0027Malley",
      "daysBetweenCommits": 19.11,
      "commitsBetweenForRepo": 96,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n     public void execute() throws IOException, NoSuchAlgorithmException {\n       warnIfTransientProvider();\n       try {\n         Options options \u003d KeyProvider.options(getConf());\n         provider.createKey(keyName, options);\n         out.println(keyName + \" has been successfully created.\");\n         provider.flush();\n         printProviderWritten();\n       } catch (InvalidParameterException e) {\n-        out.println(keyName + \" has NOT been created. \" + e.getMessage());\n+        out.println(keyName + \" has not been created. \" + e.getMessage());\n         throw e;\n       } catch (IOException e) {\n-        out.println(keyName + \" has NOT been created. \" + e.getMessage());\n+        out.println(keyName + \" has not been created. \" + e.getMessage());\n         throw e;\n       } catch (NoSuchAlgorithmException e) {\n-        out.println(keyName + \" has NOT been created. \" + e.getMessage());\n+        out.println(keyName + \" has not been created. \" + e.getMessage());\n         throw e;\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void execute() throws IOException, NoSuchAlgorithmException {\n      warnIfTransientProvider();\n      try {\n        Options options \u003d KeyProvider.options(getConf());\n        provider.createKey(keyName, options);\n        out.println(keyName + \" has been successfully created.\");\n        provider.flush();\n        printProviderWritten();\n      } catch (InvalidParameterException e) {\n        out.println(keyName + \" has not been created. \" + e.getMessage());\n        throw e;\n      } catch (IOException e) {\n        out.println(keyName + \" has not been created. \" + e.getMessage());\n        throw e;\n      } catch (NoSuchAlgorithmException e) {\n        out.println(keyName + \" has not been created. \" + e.getMessage());\n        throw e;\n      }\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/KeyShell.java",
      "extendedDetails": {}
    },
    "9a1f15532fd26f66a2d1a482e82bb5d7fbab4946": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10429. KeyStores should have methods to generate the materials themselves, KeyShell should use them. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1586105 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/04/14 12:46 PM",
      "commitName": "9a1f15532fd26f66a2d1a482e82bb5d7fbab4946",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "16/01/14 9:48 AM",
      "commitNameOld": "e05ff82bd95dd802233e2424e8eafbd7ec6944c5",
      "commitAuthorOld": "Owen O\u0027Malley",
      "daysBetweenCommits": 83.08,
      "commitsBetweenForRepo": 685,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,19 @@\n     public void execute() throws IOException, NoSuchAlgorithmException {\n       warnIfTransientProvider();\n       try {\n         Options options \u003d KeyProvider.options(getConf());\n-        String alg \u003d getAlgorithm(options.getCipher());\n-        byte[] material \u003d generateKey(options.getBitLength(), alg);\n-        provider.createKey(keyName, material, options);\n+        provider.createKey(keyName, options);\n         out.println(keyName + \" has been successfully created.\");\n         provider.flush();\n         printProviderWritten();\n       } catch (InvalidParameterException e) {\n         out.println(keyName + \" has NOT been created. \" + e.getMessage());\n         throw e;\n       } catch (IOException e) {\n         out.println(keyName + \" has NOT been created. \" + e.getMessage());\n         throw e;\n       } catch (NoSuchAlgorithmException e) {\n         out.println(keyName + \" has NOT been created. \" + e.getMessage());\n         throw e;\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void execute() throws IOException, NoSuchAlgorithmException {\n      warnIfTransientProvider();\n      try {\n        Options options \u003d KeyProvider.options(getConf());\n        provider.createKey(keyName, options);\n        out.println(keyName + \" has been successfully created.\");\n        provider.flush();\n        printProviderWritten();\n      } catch (InvalidParameterException e) {\n        out.println(keyName + \" has NOT been created. \" + e.getMessage());\n        throw e;\n      } catch (IOException e) {\n        out.println(keyName + \" has NOT been created. \" + e.getMessage());\n        throw e;\n      } catch (NoSuchAlgorithmException e) {\n        out.println(keyName + \" has NOT been created. \" + e.getMessage());\n        throw e;\n      }\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/KeyShell.java",
      "extendedDetails": {}
    },
    "e05ff82bd95dd802233e2424e8eafbd7ec6944c5": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-10177. Create CLI tools for managing keys. (Larry McCay via omalley)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1558867 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/01/14 9:48 AM",
      "commitName": "e05ff82bd95dd802233e2424e8eafbd7ec6944c5",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,21 @@\n+    public void execute() throws IOException, NoSuchAlgorithmException {\n+      warnIfTransientProvider();\n+      try {\n+        Options options \u003d KeyProvider.options(getConf());\n+        String alg \u003d getAlgorithm(options.getCipher());\n+        byte[] material \u003d generateKey(options.getBitLength(), alg);\n+        provider.createKey(keyName, material, options);\n+        out.println(keyName + \" has been successfully created.\");\n+        provider.flush();\n+        printProviderWritten();\n+      } catch (InvalidParameterException e) {\n+        out.println(keyName + \" has NOT been created. \" + e.getMessage());\n+        throw e;\n+      } catch (IOException e) {\n+        out.println(keyName + \" has NOT been created. \" + e.getMessage());\n+        throw e;\n+      } catch (NoSuchAlgorithmException e) {\n+        out.println(keyName + \" has NOT been created. \" + e.getMessage());\n+        throw e;\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void execute() throws IOException, NoSuchAlgorithmException {\n      warnIfTransientProvider();\n      try {\n        Options options \u003d KeyProvider.options(getConf());\n        String alg \u003d getAlgorithm(options.getCipher());\n        byte[] material \u003d generateKey(options.getBitLength(), alg);\n        provider.createKey(keyName, material, options);\n        out.println(keyName + \" has been successfully created.\");\n        provider.flush();\n        printProviderWritten();\n      } catch (InvalidParameterException e) {\n        out.println(keyName + \" has NOT been created. \" + e.getMessage());\n        throw e;\n      } catch (IOException e) {\n        out.println(keyName + \" has NOT been created. \" + e.getMessage());\n        throw e;\n      } catch (NoSuchAlgorithmException e) {\n        out.println(keyName + \" has NOT been created. \" + e.getMessage());\n        throw e;\n      }\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/KeyShell.java"
    }
  }
}