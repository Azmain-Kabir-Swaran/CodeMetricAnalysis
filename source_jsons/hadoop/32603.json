{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ApplicationPage.java",
  "functionName": "render",
  "functionId": "render___html-Block",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ApplicationPage.java",
  "functionStartLine": 77,
  "functionEndLine": 106,
  "numCommitsSeen": 10,
  "timeTaken": 7957,
  "changeHistory": [
    "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397",
    "c77a1095dc556e8bea87df6d8ddf36e898f27e86",
    "437e9d6475a91cafc4c993b206312912b5f13ad9",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "0ea8570be578be60e2f32849900a1c50506d78d3",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397": "Ybodychange",
    "c77a1095dc556e8bea87df6d8ddf36e898f27e86": "Ybodychange",
    "437e9d6475a91cafc4c993b206312912b5f13ad9": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "0ea8570be578be60e2f32849900a1c50506d78d3": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11875. [JDK9] Adding a second copy of Hamlet without _ as a one-character identifier.\n",
      "commitDate": "27/07/17 5:10 PM",
      "commitName": "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "14/06/16 3:06 PM",
      "commitNameOld": "c77a1095dc556e8bea87df6d8ddf36e898f27e86",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 408.09,
      "commitsBetweenForRepo": 2572,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,30 @@\n     protected void render(Block html) {\n       ApplicationId applicationID;\n       try {\n         applicationID \u003d ApplicationId.fromString($(APPLICATION_ID));\n       } catch (IllegalArgumentException e) {\n-        html.p()._(\"Invalid Application Id \" + $(APPLICATION_ID))._();\n+        html.p().__(\"Invalid Application Id \" + $(APPLICATION_ID)).__();\n         return;\n       }\n       DIV\u003cHamlet\u003e div \u003d html.div(\"#content\");\n       Application app \u003d this.nmContext.getApplications().get(applicationID);\n       if (app \u003d\u003d null) {\n         div.h1(\"Unknown application with id \" + applicationID\n-            + \". Application might have been completed\")._();\n+            + \". Application might have been completed\").__();\n         return;\n       }\n       AppInfo info \u003d new AppInfo(app);\n       info(\"Application\u0027s information\")\n-            ._(\"ApplicationId\", info.getId())\n-            ._(\"ApplicationState\", info.getState())\n-            ._(\"User\", info.getUser());\n-      TABLE\u003cHamlet\u003e containersListBody \u003d html._(InfoBlock.class)\n+            .__(\"ApplicationId\", info.getId())\n+            .__(\"ApplicationState\", info.getState())\n+            .__(\"User\", info.getUser());\n+      TABLE\u003cHamlet\u003e containersListBody \u003d html.__(InfoBlock.class)\n           .table(\"#containers\");\n       for (String containerIdStr : info.getContainers()) {\n         containersListBody\n                .tr().td()\n                  .a(url(\"container\", containerIdStr), containerIdStr)\n-                 ._()._();\n+                 .__().__();\n       }\n-      containersListBody._();\n+      containersListBody.__();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void render(Block html) {\n      ApplicationId applicationID;\n      try {\n        applicationID \u003d ApplicationId.fromString($(APPLICATION_ID));\n      } catch (IllegalArgumentException e) {\n        html.p().__(\"Invalid Application Id \" + $(APPLICATION_ID)).__();\n        return;\n      }\n      DIV\u003cHamlet\u003e div \u003d html.div(\"#content\");\n      Application app \u003d this.nmContext.getApplications().get(applicationID);\n      if (app \u003d\u003d null) {\n        div.h1(\"Unknown application with id \" + applicationID\n            + \". Application might have been completed\").__();\n        return;\n      }\n      AppInfo info \u003d new AppInfo(app);\n      info(\"Application\u0027s information\")\n            .__(\"ApplicationId\", info.getId())\n            .__(\"ApplicationState\", info.getState())\n            .__(\"User\", info.getUser());\n      TABLE\u003cHamlet\u003e containersListBody \u003d html.__(InfoBlock.class)\n          .table(\"#containers\");\n      for (String containerIdStr : info.getContainers()) {\n        containersListBody\n               .tr().td()\n                 .a(url(\"container\", containerIdStr), containerIdStr)\n                 .__().__();\n      }\n      containersListBody.__();\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ApplicationPage.java",
      "extendedDetails": {}
    },
    "c77a1095dc556e8bea87df6d8ddf36e898f27e86": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1942. Deprecate toString/fromString methods from ConverterUtils and move them to records classes like ContainerId/ApplicationId, etc. (wangda)\n",
      "commitDate": "14/06/16 3:06 PM",
      "commitName": "c77a1095dc556e8bea87df6d8ddf36e898f27e86",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "12/04/16 5:29 AM",
      "commitNameOld": "437e9d6475a91cafc4c993b206312912b5f13ad9",
      "commitAuthorOld": "Naganarasimha",
      "daysBetweenCommits": 63.4,
      "commitsBetweenForRepo": 412,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,30 @@\n     protected void render(Block html) {\n-      ApplicationId applicationID \u003d null;\n+      ApplicationId applicationID;\n       try {\n-        applicationID \u003d ConverterUtils.toApplicationId(this.recordFactory,\n-            $(APPLICATION_ID));\n+        applicationID \u003d ApplicationId.fromString($(APPLICATION_ID));\n       } catch (IllegalArgumentException e) {\n         html.p()._(\"Invalid Application Id \" + $(APPLICATION_ID))._();\n         return;\n       }\n       DIV\u003cHamlet\u003e div \u003d html.div(\"#content\");\n       Application app \u003d this.nmContext.getApplications().get(applicationID);\n       if (app \u003d\u003d null) {\n         div.h1(\"Unknown application with id \" + applicationID\n             + \". Application might have been completed\")._();\n         return;\n       }\n       AppInfo info \u003d new AppInfo(app);\n       info(\"Application\u0027s information\")\n             ._(\"ApplicationId\", info.getId())\n             ._(\"ApplicationState\", info.getState())\n             ._(\"User\", info.getUser());\n       TABLE\u003cHamlet\u003e containersListBody \u003d html._(InfoBlock.class)\n           .table(\"#containers\");\n       for (String containerIdStr : info.getContainers()) {\n         containersListBody\n                .tr().td()\n                  .a(url(\"container\", containerIdStr), containerIdStr)\n                  ._()._();\n       }\n       containersListBody._();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void render(Block html) {\n      ApplicationId applicationID;\n      try {\n        applicationID \u003d ApplicationId.fromString($(APPLICATION_ID));\n      } catch (IllegalArgumentException e) {\n        html.p()._(\"Invalid Application Id \" + $(APPLICATION_ID))._();\n        return;\n      }\n      DIV\u003cHamlet\u003e div \u003d html.div(\"#content\");\n      Application app \u003d this.nmContext.getApplications().get(applicationID);\n      if (app \u003d\u003d null) {\n        div.h1(\"Unknown application with id \" + applicationID\n            + \". Application might have been completed\")._();\n        return;\n      }\n      AppInfo info \u003d new AppInfo(app);\n      info(\"Application\u0027s information\")\n            ._(\"ApplicationId\", info.getId())\n            ._(\"ApplicationState\", info.getState())\n            ._(\"User\", info.getUser());\n      TABLE\u003cHamlet\u003e containersListBody \u003d html._(InfoBlock.class)\n          .table(\"#containers\");\n      for (String containerIdStr : info.getContainers()) {\n        containersListBody\n               .tr().td()\n                 .a(url(\"container\", containerIdStr), containerIdStr)\n                 ._()._();\n      }\n      containersListBody._();\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ApplicationPage.java",
      "extendedDetails": {}
    },
    "437e9d6475a91cafc4c993b206312912b5f13ad9": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4810. NM applicationpage cause internal error 500. Contributed by Bibin A Chundatt.\n",
      "commitDate": "12/04/16 5:29 AM",
      "commitName": "437e9d6475a91cafc4c993b206312912b5f13ad9",
      "commitAuthor": "Naganarasimha",
      "commitDateOld": "07/08/12 10:22 PM",
      "commitNameOld": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 1343.3,
      "commitsBetweenForRepo": 9552,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,31 @@\n     protected void render(Block html) {\n-      ApplicationId applicationID \u003d\n-          ConverterUtils.toApplicationId(this.recordFactory,\n-              $(APPLICATION_ID));\n+      ApplicationId applicationID \u003d null;\n+      try {\n+        applicationID \u003d ConverterUtils.toApplicationId(this.recordFactory,\n+            $(APPLICATION_ID));\n+      } catch (IllegalArgumentException e) {\n+        html.p()._(\"Invalid Application Id \" + $(APPLICATION_ID))._();\n+        return;\n+      }\n+      DIV\u003cHamlet\u003e div \u003d html.div(\"#content\");\n       Application app \u003d this.nmContext.getApplications().get(applicationID);\n+      if (app \u003d\u003d null) {\n+        div.h1(\"Unknown application with id \" + applicationID\n+            + \". Application might have been completed\")._();\n+        return;\n+      }\n       AppInfo info \u003d new AppInfo(app);\n       info(\"Application\u0027s information\")\n             ._(\"ApplicationId\", info.getId())\n             ._(\"ApplicationState\", info.getState())\n             ._(\"User\", info.getUser());\n       TABLE\u003cHamlet\u003e containersListBody \u003d html._(InfoBlock.class)\n           .table(\"#containers\");\n       for (String containerIdStr : info.getContainers()) {\n         containersListBody\n                .tr().td()\n                  .a(url(\"container\", containerIdStr), containerIdStr)\n                  ._()._();\n       }\n       containersListBody._();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void render(Block html) {\n      ApplicationId applicationID \u003d null;\n      try {\n        applicationID \u003d ConverterUtils.toApplicationId(this.recordFactory,\n            $(APPLICATION_ID));\n      } catch (IllegalArgumentException e) {\n        html.p()._(\"Invalid Application Id \" + $(APPLICATION_ID))._();\n        return;\n      }\n      DIV\u003cHamlet\u003e div \u003d html.div(\"#content\");\n      Application app \u003d this.nmContext.getApplications().get(applicationID);\n      if (app \u003d\u003d null) {\n        div.h1(\"Unknown application with id \" + applicationID\n            + \". Application might have been completed\")._();\n        return;\n      }\n      AppInfo info \u003d new AppInfo(app);\n      info(\"Application\u0027s information\")\n            ._(\"ApplicationId\", info.getId())\n            ._(\"ApplicationState\", info.getState())\n            ._(\"User\", info.getUser());\n      TABLE\u003cHamlet\u003e containersListBody \u003d html._(InfoBlock.class)\n          .table(\"#containers\");\n      for (String containerIdStr : info.getContainers()) {\n        containersListBody\n               .tr().td()\n                 .a(url(\"container\", containerIdStr), containerIdStr)\n                 ._()._();\n      }\n      containersListBody._();\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ApplicationPage.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    protected void render(Block html) {\n      ApplicationId applicationID \u003d\n          ConverterUtils.toApplicationId(this.recordFactory,\n              $(APPLICATION_ID));\n      Application app \u003d this.nmContext.getApplications().get(applicationID);\n      AppInfo info \u003d new AppInfo(app);\n      info(\"Application\u0027s information\")\n            ._(\"ApplicationId\", info.getId())\n            ._(\"ApplicationState\", info.getState())\n            ._(\"User\", info.getUser());\n      TABLE\u003cHamlet\u003e containersListBody \u003d html._(InfoBlock.class)\n          .table(\"#containers\");\n      for (String containerIdStr : info.getContainers()) {\n        containersListBody\n               .tr().td()\n                 .a(url(\"container\", containerIdStr), containerIdStr)\n                 ._()._();\n      }\n      containersListBody._();\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ApplicationPage.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ApplicationPage.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ApplicationPage.java"
      }
    },
    "0ea8570be578be60e2f32849900a1c50506d78d3": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2863. Support web services for YARN and MR components. (Thomas Graves via vinodkv)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1213975 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/12/11 3:05 PM",
      "commitName": "0ea8570be578be60e2f32849900a1c50506d78d3",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "03/11/11 1:02 AM",
      "commitNameOld": "c27601fefebd0af887a12d684bfc6f90d9fc0321",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 40.63,
      "commitsBetweenForRepo": 202,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,20 @@\n     protected void render(Block html) {\n       ApplicationId applicationID \u003d\n           ConverterUtils.toApplicationId(this.recordFactory,\n               $(APPLICATION_ID));\n       Application app \u003d this.nmContext.getApplications().get(applicationID);\n-      Map\u003cContainerId, Container\u003e containers \u003d app.getContainers();\n+      AppInfo info \u003d new AppInfo(app);\n       info(\"Application\u0027s information\")\n-            ._(\"ApplicationId\", ConverterUtils.toString(app.getAppId()))\n-            ._(\"ApplicationState\", app.getApplicationState().toString())\n-            ._(\"User\", app.getUser());\n+            ._(\"ApplicationId\", info.getId())\n+            ._(\"ApplicationState\", info.getState())\n+            ._(\"User\", info.getUser());\n       TABLE\u003cHamlet\u003e containersListBody \u003d html._(InfoBlock.class)\n           .table(\"#containers\");\n-      for (ContainerId containerId : containers.keySet()) {\n-        String containerIdStr \u003d ConverterUtils.toString(containerId);\n+      for (String containerIdStr : info.getContainers()) {\n         containersListBody\n                .tr().td()\n                  .a(url(\"container\", containerIdStr), containerIdStr)\n                  ._()._();\n       }\n       containersListBody._();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void render(Block html) {\n      ApplicationId applicationID \u003d\n          ConverterUtils.toApplicationId(this.recordFactory,\n              $(APPLICATION_ID));\n      Application app \u003d this.nmContext.getApplications().get(applicationID);\n      AppInfo info \u003d new AppInfo(app);\n      info(\"Application\u0027s information\")\n            ._(\"ApplicationId\", info.getId())\n            ._(\"ApplicationState\", info.getState())\n            ._(\"User\", info.getUser());\n      TABLE\u003cHamlet\u003e containersListBody \u003d html._(InfoBlock.class)\n          .table(\"#containers\");\n      for (String containerIdStr : info.getContainers()) {\n        containersListBody\n               .tr().td()\n                 .a(url(\"container\", containerIdStr), containerIdStr)\n                 ._()._();\n      }\n      containersListBody._();\n    }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ApplicationPage.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    protected void render(Block html) {\n      ApplicationId applicationID \u003d\n          ConverterUtils.toApplicationId(this.recordFactory,\n              $(APPLICATION_ID));\n      Application app \u003d this.nmContext.getApplications().get(applicationID);\n      Map\u003cContainerId, Container\u003e containers \u003d app.getContainers();\n      info(\"Application\u0027s information\")\n            ._(\"ApplicationId\", ConverterUtils.toString(app.getAppId()))\n            ._(\"ApplicationState\", app.getApplicationState().toString())\n            ._(\"User\", app.getUser());\n      TABLE\u003cHamlet\u003e containersListBody \u003d html._(InfoBlock.class)\n          .table(\"#containers\");\n      for (ContainerId containerId : containers.keySet()) {\n        String containerIdStr \u003d ConverterUtils.toString(containerId);\n        containersListBody\n               .tr().td()\n                 .a(url(\"container\", containerIdStr), containerIdStr)\n                 ._()._();\n      }\n      containersListBody._();\n    }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ApplicationPage.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ApplicationPage.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ApplicationPage.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,21 @@\n+    protected void render(Block html) {\n+      ApplicationId applicationID \u003d\n+          ConverterUtils.toApplicationId(this.recordFactory,\n+              $(APPLICATION_ID));\n+      Application app \u003d this.nmContext.getApplications().get(applicationID);\n+      Map\u003cContainerId, Container\u003e containers \u003d app.getContainers();\n+      info(\"Application\u0027s information\")\n+            ._(\"ApplicationId\", ConverterUtils.toString(app.getAppId()))\n+            ._(\"ApplicationState\", app.getApplicationState().toString())\n+            ._(\"User\", app.getUser());\n+      TABLE\u003cHamlet\u003e containersListBody \u003d html._(InfoBlock.class)\n+          .table(\"#containers\");\n+      for (ContainerId containerId : containers.keySet()) {\n+        String containerIdStr \u003d ConverterUtils.toString(containerId);\n+        containersListBody\n+               .tr().td()\n+                 .a(url(\"container\", containerIdStr), containerIdStr)\n+                 ._()._();\n+      }\n+      containersListBody._();\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    protected void render(Block html) {\n      ApplicationId applicationID \u003d\n          ConverterUtils.toApplicationId(this.recordFactory,\n              $(APPLICATION_ID));\n      Application app \u003d this.nmContext.getApplications().get(applicationID);\n      Map\u003cContainerId, Container\u003e containers \u003d app.getContainers();\n      info(\"Application\u0027s information\")\n            ._(\"ApplicationId\", ConverterUtils.toString(app.getAppId()))\n            ._(\"ApplicationState\", app.getApplicationState().toString())\n            ._(\"User\", app.getUser());\n      TABLE\u003cHamlet\u003e containersListBody \u003d html._(InfoBlock.class)\n          .table(\"#containers\");\n      for (ContainerId containerId : containers.keySet()) {\n        String containerIdStr \u003d ConverterUtils.toString(containerId);\n        containersListBody\n               .tr().td()\n                 .a(url(\"container\", containerIdStr), containerIdStr)\n                 ._()._();\n      }\n      containersListBody._();\n    }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ApplicationPage.java"
    }
  }
}