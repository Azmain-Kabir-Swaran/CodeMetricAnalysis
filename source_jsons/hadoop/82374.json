{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LimitInputStream.java",
  "functionName": "read",
  "functionId": "read___b-byte[]__off-int__len-int",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/LimitInputStream.java",
  "functionStartLine": 76,
  "functionEndLine": 90,
  "numCommitsSeen": 2,
  "timeTaken": 1014,
  "changeHistory": [
    "0bdd263d82a4510f16df49238d57c9f78ac28ae7",
    "6caa8100d5d2547e34356dc279fd5e65b81a925a"
  ],
  "changeHistoryShort": {
    "0bdd263d82a4510f16df49238d57c9f78ac28ae7": "Ybodychange",
    "6caa8100d5d2547e34356dc279fd5e65b81a925a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0bdd263d82a4510f16df49238d57c9f78ac28ae7": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13017. Implementations of InputStream.read(buffer, offset, bytes) to exit 0 if bytes\u003d\u003d0. Contributed by Steve Loughran.\n",
      "commitDate": "26/10/16 11:46 PM",
      "commitName": "0bdd263d82a4510f16df49238d57c9f78ac28ae7",
      "commitAuthor": "Masatake Iwasaki",
      "commitDateOld": "08/11/14 3:39 PM",
      "commitNameOld": "6caa8100d5d2547e34356dc279fd5e65b81a925a",
      "commitAuthorOld": "Arun C. Murthy",
      "daysBetweenCommits": 718.3,
      "commitsBetweenForRepo": 5403,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,15 @@\n   public int read(byte[] b, int off, int len) throws IOException {\n+    if (len \u003d\u003d 0) {\n+      return 0;\n+    }\n     if (left \u003d\u003d 0) {\n       return -1;\n     }\n \n     len \u003d (int) Math.min(len, left);\n     int result \u003d in.read(b, off, len);\n     if (result !\u003d -1) {\n       left -\u003d result;\n     }\n     return result;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int read(byte[] b, int off, int len) throws IOException {\n    if (len \u003d\u003d 0) {\n      return 0;\n    }\n    if (left \u003d\u003d 0) {\n      return -1;\n    }\n\n    len \u003d (int) Math.min(len, left);\n    int result \u003d in.read(b, off, len);\n    if (result !\u003d -1) {\n      left -\u003d result;\n    }\n    return result;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/LimitInputStream.java",
      "extendedDetails": {}
    },
    "6caa8100d5d2547e34356dc279fd5e65b81a925a": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-11286. Copied LimitInputStream from guava-0.14 to hadoop to avoid issues with newer versions of guava in applications. Contributed by Christopher Tubbs.\n",
      "commitDate": "08/11/14 3:39 PM",
      "commitName": "6caa8100d5d2547e34356dc279fd5e65b81a925a",
      "commitAuthor": "Arun C. Murthy",
      "diff": "@@ -0,0 +1,12 @@\n+  public int read(byte[] b, int off, int len) throws IOException {\n+    if (left \u003d\u003d 0) {\n+      return -1;\n+    }\n+\n+    len \u003d (int) Math.min(len, left);\n+    int result \u003d in.read(b, off, len);\n+    if (result !\u003d -1) {\n+      left -\u003d result;\n+    }\n+    return result;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public int read(byte[] b, int off, int len) throws IOException {\n    if (left \u003d\u003d 0) {\n      return -1;\n    }\n\n    len \u003d (int) Math.min(len, left);\n    int result \u003d in.read(b, off, len);\n    if (result !\u003d -1) {\n      left -\u003d result;\n    }\n    return result;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/LimitInputStream.java"
    }
  }
}