{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ResourceTrackerService.java",
  "functionName": "loadNodeResourceFromDRConfiguration",
  "functionId": "loadNodeResourceFromDRConfiguration___nodeId-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceTrackerService.java",
  "functionStartLine": 923,
  "functionEndLine": 937,
  "numCommitsSeen": 98,
  "timeTaken": 1395,
  "changeHistory": [
    "fa3bc3405dc2f8497faab45ba5c4de2caf4c29bc"
  ],
  "changeHistoryShort": {
    "fa3bc3405dc2f8497faab45ba5c4de2caf4c29bc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "fa3bc3405dc2f8497faab45ba5c4de2caf4c29bc": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4832. NM side resource value should get updated if change applied in RM side. Contributed by Junping Du\n",
      "commitDate": "17/05/16 12:52 PM",
      "commitName": "fa3bc3405dc2f8497faab45ba5c4de2caf4c29bc",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,15 @@\n+  private Resource loadNodeResourceFromDRConfiguration(String nodeId) {\n+    // check if node\u0027s capacity is loaded from dynamic-resources.xml\n+    this.readLock.lock();\n+    try {\n+      String[] nodes \u003d this.drConf.getNodes();\n+      if (nodes !\u003d null \u0026\u0026 Arrays.asList(nodes).contains(nodeId)) {\n+        return Resource.newInstance(this.drConf.getMemoryPerNode(nodeId),\n+            this.drConf.getVcoresPerNode(nodeId));\n+      } else {\n+        return null;\n+      }\n+    } finally {\n+      this.readLock.unlock();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private Resource loadNodeResourceFromDRConfiguration(String nodeId) {\n    // check if node\u0027s capacity is loaded from dynamic-resources.xml\n    this.readLock.lock();\n    try {\n      String[] nodes \u003d this.drConf.getNodes();\n      if (nodes !\u003d null \u0026\u0026 Arrays.asList(nodes).contains(nodeId)) {\n        return Resource.newInstance(this.drConf.getMemoryPerNode(nodeId),\n            this.drConf.getVcoresPerNode(nodeId));\n      } else {\n        return null;\n      }\n    } finally {\n      this.readLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceTrackerService.java"
    }
  }
}