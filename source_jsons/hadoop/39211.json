{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SchedulerUtils.java",
  "functionName": "normalizeNodeLabelExpressionInRequest",
  "functionId": "normalizeNodeLabelExpressionInRequest___resReq-ResourceRequest__queueInfo-QueueInfo",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerUtils.java",
  "functionStartLine": 229,
  "functionEndLine": 258,
  "numCommitsSeen": 51,
  "timeTaken": 2415,
  "changeHistory": [
    "2064ca015d1584263aac0cc20c60b925a3aff612",
    "821b0de4c59156d4a65112de03ba3e7e1c88e309",
    "f65eeb412d140a3808bcf99344a9f3a965918f70"
  ],
  "changeHistoryShort": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": "Ybodychange",
    "821b0de4c59156d4a65112de03ba3e7e1c88e309": "Ybodychange",
    "f65eeb412d140a3808bcf99344a9f3a965918f70": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9349.  Changed logging to use slf4j api.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "15/03/19 4:20 PM",
      "commitName": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "15/03/19 3:04 PM",
      "commitNameOld": "03f3c8aed27f73a6aacecc14b41beb1250d4f2f0",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 0.05,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,30 @@\n   private static void normalizeNodeLabelExpressionInRequest(\n       ResourceRequest resReq, QueueInfo queueInfo) {\n \n     String labelExp \u003d resReq.getNodeLabelExpression();\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Requested Node Label Expression : \" + labelExp);\n       LOG.debug(\"Queue Info : \" + queueInfo);\n     }\n \n     // if queue has default label expression, and RR doesn\u0027t have, use the\n     // default label expression of queue\n     if (labelExp \u003d\u003d null \u0026\u0026 queueInfo !\u003d null \u0026\u0026 ResourceRequest.ANY\n         .equals(resReq.getResourceName())) {\n-      if ( LOG.isDebugEnabled()) {\n-        LOG.debug(\"Setting default node label expression : \" + queueInfo\n-            .getDefaultNodeLabelExpression());\n-      }\n+      LOG.debug(\"Setting default node label expression : {}\", queueInfo\n+          .getDefaultNodeLabelExpression());\n       labelExp \u003d queueInfo.getDefaultNodeLabelExpression();\n     }\n \n     // If labelExp still equals to null, it could either be a dynamic queue\n     // or the label is not configured\n     // set it to be NO_LABEL in case of a pre-configured queue. Dynamic\n     // queues are handled in RMAppAttemptImp.ScheduledTransition\n     if (labelExp \u003d\u003d null \u0026\u0026 queueInfo !\u003d null) {\n       labelExp \u003d RMNodeLabelsManager.NO_LABEL;\n     }\n \n     if (labelExp !\u003d null) {\n       resReq.setNodeLabelExpression(labelExp);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void normalizeNodeLabelExpressionInRequest(\n      ResourceRequest resReq, QueueInfo queueInfo) {\n\n    String labelExp \u003d resReq.getNodeLabelExpression();\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Requested Node Label Expression : \" + labelExp);\n      LOG.debug(\"Queue Info : \" + queueInfo);\n    }\n\n    // if queue has default label expression, and RR doesn\u0027t have, use the\n    // default label expression of queue\n    if (labelExp \u003d\u003d null \u0026\u0026 queueInfo !\u003d null \u0026\u0026 ResourceRequest.ANY\n        .equals(resReq.getResourceName())) {\n      LOG.debug(\"Setting default node label expression : {}\", queueInfo\n          .getDefaultNodeLabelExpression());\n      labelExp \u003d queueInfo.getDefaultNodeLabelExpression();\n    }\n\n    // If labelExp still equals to null, it could either be a dynamic queue\n    // or the label is not configured\n    // set it to be NO_LABEL in case of a pre-configured queue. Dynamic\n    // queues are handled in RMAppAttemptImp.ScheduledTransition\n    if (labelExp \u003d\u003d null \u0026\u0026 queueInfo !\u003d null) {\n      labelExp \u003d RMNodeLabelsManager.NO_LABEL;\n    }\n\n    if (labelExp !\u003d null) {\n      resReq.setNodeLabelExpression(labelExp);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerUtils.java",
      "extendedDetails": {}
    },
    "821b0de4c59156d4a65112de03ba3e7e1c88e309": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7574. Add support for Node Labels on Auto Created Leaf Queue Template. Contributed by Suma Shivaprasad.\n",
      "commitDate": "09/04/18 8:47 AM",
      "commitName": "821b0de4c59156d4a65112de03ba3e7e1c88e309",
      "commitAuthor": "Sunil G",
      "commitDateOld": "15/02/18 11:07 PM",
      "commitNameOld": "aae629913cee0157c945a2c7384c7bf398f10616",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 52.36,
      "commitsBetweenForRepo": 457,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,32 @@\n   private static void normalizeNodeLabelExpressionInRequest(\n       ResourceRequest resReq, QueueInfo queueInfo) {\n \n     String labelExp \u003d resReq.getNodeLabelExpression();\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"Requested Node Label Expression : \" + labelExp);\n+      LOG.debug(\"Queue Info : \" + queueInfo);\n+    }\n \n     // if queue has default label expression, and RR doesn\u0027t have, use the\n     // default label expression of queue\n     if (labelExp \u003d\u003d null \u0026\u0026 queueInfo !\u003d null \u0026\u0026 ResourceRequest.ANY\n         .equals(resReq.getResourceName())) {\n+      if ( LOG.isDebugEnabled()) {\n+        LOG.debug(\"Setting default node label expression : \" + queueInfo\n+            .getDefaultNodeLabelExpression());\n+      }\n       labelExp \u003d queueInfo.getDefaultNodeLabelExpression();\n     }\n \n-    // If labelExp still equals to null, set it to be NO_LABEL\n-    if (labelExp \u003d\u003d null) {\n+    // If labelExp still equals to null, it could either be a dynamic queue\n+    // or the label is not configured\n+    // set it to be NO_LABEL in case of a pre-configured queue. Dynamic\n+    // queues are handled in RMAppAttemptImp.ScheduledTransition\n+    if (labelExp \u003d\u003d null \u0026\u0026 queueInfo !\u003d null) {\n       labelExp \u003d RMNodeLabelsManager.NO_LABEL;\n     }\n-    resReq.setNodeLabelExpression(labelExp);\n+\n+    if ( labelExp !\u003d null) {\n+      resReq.setNodeLabelExpression(labelExp);\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void normalizeNodeLabelExpressionInRequest(\n      ResourceRequest resReq, QueueInfo queueInfo) {\n\n    String labelExp \u003d resReq.getNodeLabelExpression();\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Requested Node Label Expression : \" + labelExp);\n      LOG.debug(\"Queue Info : \" + queueInfo);\n    }\n\n    // if queue has default label expression, and RR doesn\u0027t have, use the\n    // default label expression of queue\n    if (labelExp \u003d\u003d null \u0026\u0026 queueInfo !\u003d null \u0026\u0026 ResourceRequest.ANY\n        .equals(resReq.getResourceName())) {\n      if ( LOG.isDebugEnabled()) {\n        LOG.debug(\"Setting default node label expression : \" + queueInfo\n            .getDefaultNodeLabelExpression());\n      }\n      labelExp \u003d queueInfo.getDefaultNodeLabelExpression();\n    }\n\n    // If labelExp still equals to null, it could either be a dynamic queue\n    // or the label is not configured\n    // set it to be NO_LABEL in case of a pre-configured queue. Dynamic\n    // queues are handled in RMAppAttemptImp.ScheduledTransition\n    if (labelExp \u003d\u003d null \u0026\u0026 queueInfo !\u003d null) {\n      labelExp \u003d RMNodeLabelsManager.NO_LABEL;\n    }\n\n    if ( labelExp !\u003d null) {\n      resReq.setNodeLabelExpression(labelExp);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerUtils.java",
      "extendedDetails": {}
    },
    "f65eeb412d140a3808bcf99344a9f3a965918f70": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3493. RM fails to come up with error \"Failed to load/recover state\" when mem settings are changed. (Jian He via wangda)\n",
      "commitDate": "17/04/15 5:11 PM",
      "commitName": "f65eeb412d140a3808bcf99344a9f3a965918f70",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,18 @@\n+  private static void normalizeNodeLabelExpressionInRequest(\n+      ResourceRequest resReq, QueueInfo queueInfo) {\n+\n+    String labelExp \u003d resReq.getNodeLabelExpression();\n+\n+    // if queue has default label expression, and RR doesn\u0027t have, use the\n+    // default label expression of queue\n+    if (labelExp \u003d\u003d null \u0026\u0026 queueInfo !\u003d null \u0026\u0026 ResourceRequest.ANY\n+        .equals(resReq.getResourceName())) {\n+      labelExp \u003d queueInfo.getDefaultNodeLabelExpression();\n+    }\n+\n+    // If labelExp still equals to null, set it to be NO_LABEL\n+    if (labelExp \u003d\u003d null) {\n+      labelExp \u003d RMNodeLabelsManager.NO_LABEL;\n+    }\n+    resReq.setNodeLabelExpression(labelExp);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static void normalizeNodeLabelExpressionInRequest(\n      ResourceRequest resReq, QueueInfo queueInfo) {\n\n    String labelExp \u003d resReq.getNodeLabelExpression();\n\n    // if queue has default label expression, and RR doesn\u0027t have, use the\n    // default label expression of queue\n    if (labelExp \u003d\u003d null \u0026\u0026 queueInfo !\u003d null \u0026\u0026 ResourceRequest.ANY\n        .equals(resReq.getResourceName())) {\n      labelExp \u003d queueInfo.getDefaultNodeLabelExpression();\n    }\n\n    // If labelExp still equals to null, set it to be NO_LABEL\n    if (labelExp \u003d\u003d null) {\n      labelExp \u003d RMNodeLabelsManager.NO_LABEL;\n    }\n    resReq.setNodeLabelExpression(labelExp);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/SchedulerUtils.java"
    }
  }
}