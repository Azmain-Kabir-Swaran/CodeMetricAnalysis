{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMWebServices.java",
  "functionName": "cancelDelegationToken",
  "functionId": "cancelDelegationToken___hsr-HttpServletRequest(annotations-@Context)",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
  "functionStartLine": 1976,
  "functionEndLine": 2027,
  "numCommitsSeen": 106,
  "timeTaken": 3570,
  "changeHistory": [
    "d76fbbc9b82e720d7d5188f9ae2f56a8d78f3a98",
    "030580387a4d8d97560a93da2fd7494b4366e3b6"
  ],
  "changeHistoryShort": {
    "d76fbbc9b82e720d7d5188f9ae2f56a8d78f3a98": "Ybodychange",
    "030580387a4d8d97560a93da2fd7494b4366e3b6": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d76fbbc9b82e720d7d5188f9ae2f56a8d78f3a98": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8249. Fixed few REST APIs in RMWebServices to have static-user check. Contributed by Sunil Govindan.\n",
      "commitDate": "10/05/18 7:05 PM",
      "commitName": "d76fbbc9b82e720d7d5188f9ae2f56a8d78f3a98",
      "commitAuthor": "Vinod Kumar Vavilapalli (I am also known as @tshooter.)",
      "commitDateOld": "27/04/18 10:28 AM",
      "commitNameOld": "ef3ecc308dbea41c6a88bd4d16739c7bbc10cdda",
      "commitAuthorOld": "Rohith Sharma K S",
      "daysBetweenCommits": 13.36,
      "commitsBetweenForRepo": 87,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,50 +1,52 @@\n   public Response cancelDelegationToken(@Context HttpServletRequest hsr)\n       throws AuthorizationException, IOException, InterruptedException,\n       Exception {\n \n-    init();\n-    UserGroupInformation callerUGI;\n+    UserGroupInformation callerUGI \u003d getCallerUserGroupInformation(hsr, true);\n+    initForWritableEndpoints(callerUGI, false);\n+\n     try {\n-      callerUGI \u003d createKerberosUserGroupInformation(hsr);\n+      createKerberosUserGroupInformation(hsr, callerUGI);\n+      callerUGI.setAuthenticationMethod(AuthenticationMethod.KERBEROS);\n     } catch (YarnException ye) {\n       return Response.status(Status.FORBIDDEN).entity(ye.getMessage()).build();\n     }\n \n     Token\u003cRMDelegationTokenIdentifier\u003e token \u003d extractToken(hsr);\n \n     org.apache.hadoop.yarn.api.records.Token dToken \u003d BuilderUtils\n         .newDelegationToken(token.getIdentifier(), token.getKind().toString(),\n             token.getPassword(), token.getService().toString());\n     final CancelDelegationTokenRequest req \u003d\n         CancelDelegationTokenRequest.newInstance(dToken);\n \n     try {\n       callerUGI\n           .doAs(new PrivilegedExceptionAction\u003cCancelDelegationTokenResponse\u003e() {\n             @Override\n             public CancelDelegationTokenResponse run()\n                 throws IOException, YarnException {\n               return rm.getClientRMService().cancelDelegationToken(req);\n             }\n           });\n     } catch (UndeclaredThrowableException ue) {\n       if (ue.getCause() instanceof YarnException) {\n         if (ue.getCause().getCause() instanceof InvalidToken) {\n           throw new BadRequestException(ue.getCause().getCause().getMessage());\n         } else if (ue.getCause()\n             .getCause() instanceof org.apache.hadoop.security.AccessControlException) {\n           return Response.status(Status.FORBIDDEN)\n               .entity(ue.getCause().getCause().getMessage()).build();\n         }\n         LOG.info(\"Renew delegation token request failed\", ue);\n         throw ue;\n       }\n       LOG.info(\"Renew delegation token request failed\", ue);\n       throw ue;\n     } catch (Exception e) {\n       LOG.info(\"Renew delegation token request failed\", e);\n       throw e;\n     }\n \n     return Response.status(Status.OK).build();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Response cancelDelegationToken(@Context HttpServletRequest hsr)\n      throws AuthorizationException, IOException, InterruptedException,\n      Exception {\n\n    UserGroupInformation callerUGI \u003d getCallerUserGroupInformation(hsr, true);\n    initForWritableEndpoints(callerUGI, false);\n\n    try {\n      createKerberosUserGroupInformation(hsr, callerUGI);\n      callerUGI.setAuthenticationMethod(AuthenticationMethod.KERBEROS);\n    } catch (YarnException ye) {\n      return Response.status(Status.FORBIDDEN).entity(ye.getMessage()).build();\n    }\n\n    Token\u003cRMDelegationTokenIdentifier\u003e token \u003d extractToken(hsr);\n\n    org.apache.hadoop.yarn.api.records.Token dToken \u003d BuilderUtils\n        .newDelegationToken(token.getIdentifier(), token.getKind().toString(),\n            token.getPassword(), token.getService().toString());\n    final CancelDelegationTokenRequest req \u003d\n        CancelDelegationTokenRequest.newInstance(dToken);\n\n    try {\n      callerUGI\n          .doAs(new PrivilegedExceptionAction\u003cCancelDelegationTokenResponse\u003e() {\n            @Override\n            public CancelDelegationTokenResponse run()\n                throws IOException, YarnException {\n              return rm.getClientRMService().cancelDelegationToken(req);\n            }\n          });\n    } catch (UndeclaredThrowableException ue) {\n      if (ue.getCause() instanceof YarnException) {\n        if (ue.getCause().getCause() instanceof InvalidToken) {\n          throw new BadRequestException(ue.getCause().getCause().getMessage());\n        } else if (ue.getCause()\n            .getCause() instanceof org.apache.hadoop.security.AccessControlException) {\n          return Response.status(Status.FORBIDDEN)\n              .entity(ue.getCause().getCause().getMessage()).build();\n        }\n        LOG.info(\"Renew delegation token request failed\", ue);\n        throw ue;\n      }\n      LOG.info(\"Renew delegation token request failed\", ue);\n      throw ue;\n    } catch (Exception e) {\n      LOG.info(\"Renew delegation token request failed\", e);\n      throw e;\n    }\n\n    return Response.status(Status.OK).build();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
      "extendedDetails": {}
    },
    "030580387a4d8d97560a93da2fd7494b4366e3b6": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2233. Implemented ResourceManager web-services to create, renew and cancel delegation tokens. Contributed by Varun Vasudev.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1610876 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "15/07/14 4:00 PM",
      "commitName": "030580387a4d8d97560a93da2fd7494b4366e3b6",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,49 @@\n+  public Response cancelDelegationToken(@Context HttpServletRequest hsr)\n+      throws AuthorizationException, IOException, InterruptedException,\n+      Exception {\n+\n+    init();\n+    UserGroupInformation callerUGI;\n+    try {\n+      callerUGI \u003d createKerberosUserGroupInformation(hsr);\n+    } catch (YarnException ye) {\n+      return Response.status(Status.FORBIDDEN).entity(ye.getMessage()).build();\n+    }\n+\n+    Token\u003cRMDelegationTokenIdentifier\u003e token \u003d extractToken(hsr);\n+\n+    org.apache.hadoop.yarn.api.records.Token dToken \u003d\n+        BuilderUtils.newDelegationToken(token.getIdentifier(), token.getKind()\n+          .toString(), token.getPassword(), token.getService().toString());\n+    final CancelDelegationTokenRequest req \u003d\n+        CancelDelegationTokenRequest.newInstance(dToken);\n+\n+    try {\n+      callerUGI\n+        .doAs(new PrivilegedExceptionAction\u003cCancelDelegationTokenResponse\u003e() {\n+          @Override\n+          public CancelDelegationTokenResponse run() throws IOException,\n+              YarnException {\n+            return rm.getClientRMService().cancelDelegationToken(req);\n+          }\n+        });\n+    } catch (UndeclaredThrowableException ue) {\n+      if (ue.getCause() instanceof YarnException) {\n+        if (ue.getCause().getCause() instanceof InvalidToken) {\n+          throw new BadRequestException(ue.getCause().getCause().getMessage());\n+        } else if (ue.getCause().getCause() instanceof org.apache.hadoop.security.AccessControlException) {\n+          return Response.status(Status.FORBIDDEN)\n+            .entity(ue.getCause().getCause().getMessage()).build();\n+        }\n+        LOG.info(\"Renew delegation token request failed\", ue);\n+        throw ue;\n+      }\n+      LOG.info(\"Renew delegation token request failed\", ue);\n+      throw ue;\n+    } catch (Exception e) {\n+      LOG.info(\"Renew delegation token request failed\", e);\n+      throw e;\n+    }\n+\n+    return Response.status(Status.OK).build();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Response cancelDelegationToken(@Context HttpServletRequest hsr)\n      throws AuthorizationException, IOException, InterruptedException,\n      Exception {\n\n    init();\n    UserGroupInformation callerUGI;\n    try {\n      callerUGI \u003d createKerberosUserGroupInformation(hsr);\n    } catch (YarnException ye) {\n      return Response.status(Status.FORBIDDEN).entity(ye.getMessage()).build();\n    }\n\n    Token\u003cRMDelegationTokenIdentifier\u003e token \u003d extractToken(hsr);\n\n    org.apache.hadoop.yarn.api.records.Token dToken \u003d\n        BuilderUtils.newDelegationToken(token.getIdentifier(), token.getKind()\n          .toString(), token.getPassword(), token.getService().toString());\n    final CancelDelegationTokenRequest req \u003d\n        CancelDelegationTokenRequest.newInstance(dToken);\n\n    try {\n      callerUGI\n        .doAs(new PrivilegedExceptionAction\u003cCancelDelegationTokenResponse\u003e() {\n          @Override\n          public CancelDelegationTokenResponse run() throws IOException,\n              YarnException {\n            return rm.getClientRMService().cancelDelegationToken(req);\n          }\n        });\n    } catch (UndeclaredThrowableException ue) {\n      if (ue.getCause() instanceof YarnException) {\n        if (ue.getCause().getCause() instanceof InvalidToken) {\n          throw new BadRequestException(ue.getCause().getCause().getMessage());\n        } else if (ue.getCause().getCause() instanceof org.apache.hadoop.security.AccessControlException) {\n          return Response.status(Status.FORBIDDEN)\n            .entity(ue.getCause().getCause().getMessage()).build();\n        }\n        LOG.info(\"Renew delegation token request failed\", ue);\n        throw ue;\n      }\n      LOG.info(\"Renew delegation token request failed\", ue);\n      throw ue;\n    } catch (Exception e) {\n      LOG.info(\"Renew delegation token request failed\", e);\n      throw e;\n    }\n\n    return Response.status(Status.OK).build();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java"
    }
  }
}