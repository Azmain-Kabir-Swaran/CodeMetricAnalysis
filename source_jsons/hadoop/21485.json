{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JobSubmissionFiles.java",
  "functionName": "getStagingDir",
  "functionId": "getStagingDir___cluster-Cluster__conf-Configuration",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/JobSubmissionFiles.java",
  "functionStartLine": 110,
  "functionEndLine": 114,
  "numCommitsSeen": 12,
  "timeTaken": 5087,
  "changeHistory": [
    "9b7ce948a52f4ef433dc958ec891b669a669d7c2",
    "a29714f07708fdf9ff380d93422ab5a64dc34885",
    "5b64e3c2be8c7ec02d4c2ff574c7f513ed45ebf1",
    "5b3610693454d86909ab37391ea0c07014041e8c",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "9b7ce948a52f4ef433dc958ec891b669a669d7c2": "Ybodychange",
    "a29714f07708fdf9ff380d93422ab5a64dc34885": "Ybodychange",
    "5b64e3c2be8c7ec02d4c2ff574c7f513ed45ebf1": "Ybodychange",
    "5b3610693454d86909ab37391ea0c07014041e8c": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9b7ce948a52f4ef433dc958ec891b669a669d7c2": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6792. Allow user\u0027s full principal name as owner of MapReduce staging directory in JobSubmissionFiles#JobStagingDir(). Contributed by Santhosh G Nayak.\n",
      "commitDate": "25/10/16 11:20 AM",
      "commitName": "9b7ce948a52f4ef433dc958ec891b669a669d7c2",
      "commitAuthor": "Junping Du",
      "commitDateOld": "21/06/16 11:25 AM",
      "commitNameOld": "605b4b61364781fc99ed27035c793153a20d8f71",
      "commitAuthorOld": "Sangjin Lee",
      "daysBetweenCommits": 126.0,
      "commitsBetweenForRepo": 970,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,5 @@\n-  public static Path getStagingDir(Cluster cluster, Configuration conf) \n-  throws IOException,InterruptedException {\n-    Path stagingArea \u003d cluster.getStagingAreaDir();\n-    FileSystem fs \u003d stagingArea.getFileSystem(conf);\n-    String realUser;\n-    String currentUser;\n-    UserGroupInformation ugi \u003d UserGroupInformation.getLoginUser();\n-    realUser \u003d ugi.getShortUserName();\n-    currentUser \u003d UserGroupInformation.getCurrentUser().getShortUserName();\n-    if (fs.exists(stagingArea)) {\n-      FileStatus fsStatus \u003d fs.getFileStatus(stagingArea);\n-      String owner \u003d fsStatus.getOwner();\n-      if (!(owner.equals(currentUser) || owner.equals(realUser))) {\n-         throw new IOException(\"The ownership on the staging directory \" +\n-                      stagingArea + \" is not as expected. \" +\n-                      \"It is owned by \" + owner + \". The directory must \" +\n-                      \"be owned by the submitter \" + currentUser + \" or \" +\n-                      \"by \" + realUser);\n-      }\n-      if (!fsStatus.getPermission().equals(JOB_DIR_PERMISSION)) {\n-        LOG.info(\"Permissions on staging directory \" + stagingArea + \" are \" +\n-          \"incorrect: \" + fsStatus.getPermission() + \". Fixing permissions \" +\n-          \"to correct value \" + JOB_DIR_PERMISSION);\n-        fs.setPermission(stagingArea, JOB_DIR_PERMISSION);\n-      }\n-    } else {\n-      fs.mkdirs(stagingArea, \n-          new FsPermission(JOB_DIR_PERMISSION));\n-    }\n-    return stagingArea;\n+  public static Path getStagingDir(Cluster cluster, Configuration conf)\n+      throws IOException, InterruptedException {\n+    UserGroupInformation user \u003d UserGroupInformation.getLoginUser();\n+    return getStagingDir(cluster, conf, user);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static Path getStagingDir(Cluster cluster, Configuration conf)\n      throws IOException, InterruptedException {\n    UserGroupInformation user \u003d UserGroupInformation.getLoginUser();\n    return getStagingDir(cluster, conf, user);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/JobSubmissionFiles.java",
      "extendedDetails": {}
    },
    "a29714f07708fdf9ff380d93422ab5a64dc34885": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5483. revert MAPREDUCE-5357. (rkanter via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1518772 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/08/13 12:24 PM",
      "commitName": "a29714f07708fdf9ff380d93422ab5a64dc34885",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "02/07/13 10:15 PM",
      "commitNameOld": "5b64e3c2be8c7ec02d4c2ff574c7f513ed45ebf1",
      "commitAuthorOld": "Chris Nauroth",
      "daysBetweenCommits": 57.59,
      "commitsBetweenForRepo": 340,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,31 @@\n   public static Path getStagingDir(Cluster cluster, Configuration conf) \n   throws IOException,InterruptedException {\n     Path stagingArea \u003d cluster.getStagingAreaDir();\n     FileSystem fs \u003d stagingArea.getFileSystem(conf);\n     String realUser;\n     String currentUser;\n     UserGroupInformation ugi \u003d UserGroupInformation.getLoginUser();\n     realUser \u003d ugi.getShortUserName();\n     currentUser \u003d UserGroupInformation.getCurrentUser().getShortUserName();\n     if (fs.exists(stagingArea)) {\n       FileStatus fsStatus \u003d fs.getFileStatus(stagingArea);\n       String owner \u003d fsStatus.getOwner();\n       if (!(owner.equals(currentUser) || owner.equals(realUser))) {\n          throw new IOException(\"The ownership on the staging directory \" +\n                       stagingArea + \" is not as expected. \" +\n                       \"It is owned by \" + owner + \". The directory must \" +\n                       \"be owned by the submitter \" + currentUser + \" or \" +\n                       \"by \" + realUser);\n       }\n       if (!fsStatus.getPermission().equals(JOB_DIR_PERMISSION)) {\n         LOG.info(\"Permissions on staging directory \" + stagingArea + \" are \" +\n           \"incorrect: \" + fsStatus.getPermission() + \". Fixing permissions \" +\n           \"to correct value \" + JOB_DIR_PERMISSION);\n         fs.setPermission(stagingArea, JOB_DIR_PERMISSION);\n       }\n     } else {\n       fs.mkdirs(stagingArea, \n           new FsPermission(JOB_DIR_PERMISSION));\n-      fs.setOwner(stagingArea, currentUser, null);\n     }\n     return stagingArea;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static Path getStagingDir(Cluster cluster, Configuration conf) \n  throws IOException,InterruptedException {\n    Path stagingArea \u003d cluster.getStagingAreaDir();\n    FileSystem fs \u003d stagingArea.getFileSystem(conf);\n    String realUser;\n    String currentUser;\n    UserGroupInformation ugi \u003d UserGroupInformation.getLoginUser();\n    realUser \u003d ugi.getShortUserName();\n    currentUser \u003d UserGroupInformation.getCurrentUser().getShortUserName();\n    if (fs.exists(stagingArea)) {\n      FileStatus fsStatus \u003d fs.getFileStatus(stagingArea);\n      String owner \u003d fsStatus.getOwner();\n      if (!(owner.equals(currentUser) || owner.equals(realUser))) {\n         throw new IOException(\"The ownership on the staging directory \" +\n                      stagingArea + \" is not as expected. \" +\n                      \"It is owned by \" + owner + \". The directory must \" +\n                      \"be owned by the submitter \" + currentUser + \" or \" +\n                      \"by \" + realUser);\n      }\n      if (!fsStatus.getPermission().equals(JOB_DIR_PERMISSION)) {\n        LOG.info(\"Permissions on staging directory \" + stagingArea + \" are \" +\n          \"incorrect: \" + fsStatus.getPermission() + \". Fixing permissions \" +\n          \"to correct value \" + JOB_DIR_PERMISSION);\n        fs.setPermission(stagingArea, JOB_DIR_PERMISSION);\n      }\n    } else {\n      fs.mkdirs(stagingArea, \n          new FsPermission(JOB_DIR_PERMISSION));\n    }\n    return stagingArea;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/JobSubmissionFiles.java",
      "extendedDetails": {}
    },
    "5b64e3c2be8c7ec02d4c2ff574c7f513ed45ebf1": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5357. Job staging directory owner checking could fail on Windows.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1499210 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/07/13 10:15 PM",
      "commitName": "5b64e3c2be8c7ec02d4c2ff574c7f513ed45ebf1",
      "commitAuthor": "Chris Nauroth",
      "commitDateOld": "25/06/12 2:36 PM",
      "commitNameOld": "5b3610693454d86909ab37391ea0c07014041e8c",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 372.32,
      "commitsBetweenForRepo": 2172,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,32 @@\n   public static Path getStagingDir(Cluster cluster, Configuration conf) \n   throws IOException,InterruptedException {\n     Path stagingArea \u003d cluster.getStagingAreaDir();\n     FileSystem fs \u003d stagingArea.getFileSystem(conf);\n     String realUser;\n     String currentUser;\n     UserGroupInformation ugi \u003d UserGroupInformation.getLoginUser();\n     realUser \u003d ugi.getShortUserName();\n     currentUser \u003d UserGroupInformation.getCurrentUser().getShortUserName();\n     if (fs.exists(stagingArea)) {\n       FileStatus fsStatus \u003d fs.getFileStatus(stagingArea);\n       String owner \u003d fsStatus.getOwner();\n       if (!(owner.equals(currentUser) || owner.equals(realUser))) {\n          throw new IOException(\"The ownership on the staging directory \" +\n                       stagingArea + \" is not as expected. \" +\n                       \"It is owned by \" + owner + \". The directory must \" +\n                       \"be owned by the submitter \" + currentUser + \" or \" +\n                       \"by \" + realUser);\n       }\n       if (!fsStatus.getPermission().equals(JOB_DIR_PERMISSION)) {\n         LOG.info(\"Permissions on staging directory \" + stagingArea + \" are \" +\n           \"incorrect: \" + fsStatus.getPermission() + \". Fixing permissions \" +\n           \"to correct value \" + JOB_DIR_PERMISSION);\n         fs.setPermission(stagingArea, JOB_DIR_PERMISSION);\n       }\n     } else {\n       fs.mkdirs(stagingArea, \n           new FsPermission(JOB_DIR_PERMISSION));\n+      fs.setOwner(stagingArea, currentUser, null);\n     }\n     return stagingArea;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static Path getStagingDir(Cluster cluster, Configuration conf) \n  throws IOException,InterruptedException {\n    Path stagingArea \u003d cluster.getStagingAreaDir();\n    FileSystem fs \u003d stagingArea.getFileSystem(conf);\n    String realUser;\n    String currentUser;\n    UserGroupInformation ugi \u003d UserGroupInformation.getLoginUser();\n    realUser \u003d ugi.getShortUserName();\n    currentUser \u003d UserGroupInformation.getCurrentUser().getShortUserName();\n    if (fs.exists(stagingArea)) {\n      FileStatus fsStatus \u003d fs.getFileStatus(stagingArea);\n      String owner \u003d fsStatus.getOwner();\n      if (!(owner.equals(currentUser) || owner.equals(realUser))) {\n         throw new IOException(\"The ownership on the staging directory \" +\n                      stagingArea + \" is not as expected. \" +\n                      \"It is owned by \" + owner + \". The directory must \" +\n                      \"be owned by the submitter \" + currentUser + \" or \" +\n                      \"by \" + realUser);\n      }\n      if (!fsStatus.getPermission().equals(JOB_DIR_PERMISSION)) {\n        LOG.info(\"Permissions on staging directory \" + stagingArea + \" are \" +\n          \"incorrect: \" + fsStatus.getPermission() + \". Fixing permissions \" +\n          \"to correct value \" + JOB_DIR_PERMISSION);\n        fs.setPermission(stagingArea, JOB_DIR_PERMISSION);\n      }\n    } else {\n      fs.mkdirs(stagingArea, \n          new FsPermission(JOB_DIR_PERMISSION));\n      fs.setOwner(stagingArea, currentUser, null);\n    }\n    return stagingArea;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/JobSubmissionFiles.java",
      "extendedDetails": {}
    },
    "5b3610693454d86909ab37391ea0c07014041e8c": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2289. Permissions race can make getStagingDir fail on local filesystem (ahmed via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1353750 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/06/12 2:36 PM",
      "commitName": "5b3610693454d86909ab37391ea0c07014041e8c",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "24/08/11 5:14 PM",
      "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 305.89,
      "commitsBetweenForRepo": 2081,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,31 @@\n   public static Path getStagingDir(Cluster cluster, Configuration conf) \n   throws IOException,InterruptedException {\n     Path stagingArea \u003d cluster.getStagingAreaDir();\n     FileSystem fs \u003d stagingArea.getFileSystem(conf);\n     String realUser;\n     String currentUser;\n     UserGroupInformation ugi \u003d UserGroupInformation.getLoginUser();\n     realUser \u003d ugi.getShortUserName();\n     currentUser \u003d UserGroupInformation.getCurrentUser().getShortUserName();\n     if (fs.exists(stagingArea)) {\n       FileStatus fsStatus \u003d fs.getFileStatus(stagingArea);\n       String owner \u003d fsStatus.getOwner();\n-      if (!(owner.equals(currentUser) || owner.equals(realUser)) || \n-          !fsStatus.getPermission().equals(JOB_DIR_PERMISSION)) {\n-         throw new IOException(\"The ownership/permissions on the staging \" +\n-                      \"directory \" + stagingArea + \" is not as expected. \" + \n-                      \"It is owned by \" + owner + \" and permissions are \"+ \n-                      fsStatus.getPermission() + \". The directory must \" +\n+      if (!(owner.equals(currentUser) || owner.equals(realUser))) {\n+         throw new IOException(\"The ownership on the staging directory \" +\n+                      stagingArea + \" is not as expected. \" +\n+                      \"It is owned by \" + owner + \". The directory must \" +\n                       \"be owned by the submitter \" + currentUser + \" or \" +\n-                      \"by \" + realUser + \" and permissions must be rwx------\");\n+                      \"by \" + realUser);\n+      }\n+      if (!fsStatus.getPermission().equals(JOB_DIR_PERMISSION)) {\n+        LOG.info(\"Permissions on staging directory \" + stagingArea + \" are \" +\n+          \"incorrect: \" + fsStatus.getPermission() + \". Fixing permissions \" +\n+          \"to correct value \" + JOB_DIR_PERMISSION);\n+        fs.setPermission(stagingArea, JOB_DIR_PERMISSION);\n       }\n     } else {\n       fs.mkdirs(stagingArea, \n           new FsPermission(JOB_DIR_PERMISSION));\n     }\n     return stagingArea;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static Path getStagingDir(Cluster cluster, Configuration conf) \n  throws IOException,InterruptedException {\n    Path stagingArea \u003d cluster.getStagingAreaDir();\n    FileSystem fs \u003d stagingArea.getFileSystem(conf);\n    String realUser;\n    String currentUser;\n    UserGroupInformation ugi \u003d UserGroupInformation.getLoginUser();\n    realUser \u003d ugi.getShortUserName();\n    currentUser \u003d UserGroupInformation.getCurrentUser().getShortUserName();\n    if (fs.exists(stagingArea)) {\n      FileStatus fsStatus \u003d fs.getFileStatus(stagingArea);\n      String owner \u003d fsStatus.getOwner();\n      if (!(owner.equals(currentUser) || owner.equals(realUser))) {\n         throw new IOException(\"The ownership on the staging directory \" +\n                      stagingArea + \" is not as expected. \" +\n                      \"It is owned by \" + owner + \". The directory must \" +\n                      \"be owned by the submitter \" + currentUser + \" or \" +\n                      \"by \" + realUser);\n      }\n      if (!fsStatus.getPermission().equals(JOB_DIR_PERMISSION)) {\n        LOG.info(\"Permissions on staging directory \" + stagingArea + \" are \" +\n          \"incorrect: \" + fsStatus.getPermission() + \". Fixing permissions \" +\n          \"to correct value \" + JOB_DIR_PERMISSION);\n        fs.setPermission(stagingArea, JOB_DIR_PERMISSION);\n      }\n    } else {\n      fs.mkdirs(stagingArea, \n          new FsPermission(JOB_DIR_PERMISSION));\n    }\n    return stagingArea;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/JobSubmissionFiles.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static Path getStagingDir(Cluster cluster, Configuration conf) \n  throws IOException,InterruptedException {\n    Path stagingArea \u003d cluster.getStagingAreaDir();\n    FileSystem fs \u003d stagingArea.getFileSystem(conf);\n    String realUser;\n    String currentUser;\n    UserGroupInformation ugi \u003d UserGroupInformation.getLoginUser();\n    realUser \u003d ugi.getShortUserName();\n    currentUser \u003d UserGroupInformation.getCurrentUser().getShortUserName();\n    if (fs.exists(stagingArea)) {\n      FileStatus fsStatus \u003d fs.getFileStatus(stagingArea);\n      String owner \u003d fsStatus.getOwner();\n      if (!(owner.equals(currentUser) || owner.equals(realUser)) || \n          !fsStatus.getPermission().equals(JOB_DIR_PERMISSION)) {\n         throw new IOException(\"The ownership/permissions on the staging \" +\n                      \"directory \" + stagingArea + \" is not as expected. \" + \n                      \"It is owned by \" + owner + \" and permissions are \"+ \n                      fsStatus.getPermission() + \". The directory must \" +\n                      \"be owned by the submitter \" + currentUser + \" or \" +\n                      \"by \" + realUser + \" and permissions must be rwx------\");\n      }\n    } else {\n      fs.mkdirs(stagingArea, \n          new FsPermission(JOB_DIR_PERMISSION));\n    }\n    return stagingArea;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/JobSubmissionFiles.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/JobSubmissionFiles.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/JobSubmissionFiles.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static Path getStagingDir(Cluster cluster, Configuration conf) \n  throws IOException,InterruptedException {\n    Path stagingArea \u003d cluster.getStagingAreaDir();\n    FileSystem fs \u003d stagingArea.getFileSystem(conf);\n    String realUser;\n    String currentUser;\n    UserGroupInformation ugi \u003d UserGroupInformation.getLoginUser();\n    realUser \u003d ugi.getShortUserName();\n    currentUser \u003d UserGroupInformation.getCurrentUser().getShortUserName();\n    if (fs.exists(stagingArea)) {\n      FileStatus fsStatus \u003d fs.getFileStatus(stagingArea);\n      String owner \u003d fsStatus.getOwner();\n      if (!(owner.equals(currentUser) || owner.equals(realUser)) || \n          !fsStatus.getPermission().equals(JOB_DIR_PERMISSION)) {\n         throw new IOException(\"The ownership/permissions on the staging \" +\n                      \"directory \" + stagingArea + \" is not as expected. \" + \n                      \"It is owned by \" + owner + \" and permissions are \"+ \n                      fsStatus.getPermission() + \". The directory must \" +\n                      \"be owned by the submitter \" + currentUser + \" or \" +\n                      \"by \" + realUser + \" and permissions must be rwx------\");\n      }\n    } else {\n      fs.mkdirs(stagingArea, \n          new FsPermission(JOB_DIR_PERMISSION));\n    }\n    return stagingArea;\n  }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/JobSubmissionFiles.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/java/org/apache/hadoop/mapreduce/JobSubmissionFiles.java",
        "newPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/JobSubmissionFiles.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,27 @@\n+  public static Path getStagingDir(Cluster cluster, Configuration conf) \n+  throws IOException,InterruptedException {\n+    Path stagingArea \u003d cluster.getStagingAreaDir();\n+    FileSystem fs \u003d stagingArea.getFileSystem(conf);\n+    String realUser;\n+    String currentUser;\n+    UserGroupInformation ugi \u003d UserGroupInformation.getLoginUser();\n+    realUser \u003d ugi.getShortUserName();\n+    currentUser \u003d UserGroupInformation.getCurrentUser().getShortUserName();\n+    if (fs.exists(stagingArea)) {\n+      FileStatus fsStatus \u003d fs.getFileStatus(stagingArea);\n+      String owner \u003d fsStatus.getOwner();\n+      if (!(owner.equals(currentUser) || owner.equals(realUser)) || \n+          !fsStatus.getPermission().equals(JOB_DIR_PERMISSION)) {\n+         throw new IOException(\"The ownership/permissions on the staging \" +\n+                      \"directory \" + stagingArea + \" is not as expected. \" + \n+                      \"It is owned by \" + owner + \" and permissions are \"+ \n+                      fsStatus.getPermission() + \". The directory must \" +\n+                      \"be owned by the submitter \" + currentUser + \" or \" +\n+                      \"by \" + realUser + \" and permissions must be rwx------\");\n+      }\n+    } else {\n+      fs.mkdirs(stagingArea, \n+          new FsPermission(JOB_DIR_PERMISSION));\n+    }\n+    return stagingArea;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static Path getStagingDir(Cluster cluster, Configuration conf) \n  throws IOException,InterruptedException {\n    Path stagingArea \u003d cluster.getStagingAreaDir();\n    FileSystem fs \u003d stagingArea.getFileSystem(conf);\n    String realUser;\n    String currentUser;\n    UserGroupInformation ugi \u003d UserGroupInformation.getLoginUser();\n    realUser \u003d ugi.getShortUserName();\n    currentUser \u003d UserGroupInformation.getCurrentUser().getShortUserName();\n    if (fs.exists(stagingArea)) {\n      FileStatus fsStatus \u003d fs.getFileStatus(stagingArea);\n      String owner \u003d fsStatus.getOwner();\n      if (!(owner.equals(currentUser) || owner.equals(realUser)) || \n          !fsStatus.getPermission().equals(JOB_DIR_PERMISSION)) {\n         throw new IOException(\"The ownership/permissions on the staging \" +\n                      \"directory \" + stagingArea + \" is not as expected. \" + \n                      \"It is owned by \" + owner + \" and permissions are \"+ \n                      fsStatus.getPermission() + \". The directory must \" +\n                      \"be owned by the submitter \" + currentUser + \" or \" +\n                      \"by \" + realUser + \" and permissions must be rwx------\");\n      }\n    } else {\n      fs.mkdirs(stagingArea, \n          new FsPermission(JOB_DIR_PERMISSION));\n    }\n    return stagingArea;\n  }",
      "path": "mapreduce/src/java/org/apache/hadoop/mapreduce/JobSubmissionFiles.java"
    }
  }
}