{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DistSum.java",
  "functionName": "compute",
  "functionId": "compute___name-String(modifiers-final)__sigma-Summation",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-examples/src/main/java/org/apache/hadoop/examples/pi/DistSum.java",
  "functionStartLine": 453,
  "functionEndLine": 495,
  "numCommitsSeen": 9,
  "timeTaken": 4914,
  "changeHistory": [
    "26447229ba2c3d43db978c1b3ce95613669182ee",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "26447229ba2c3d43db978c1b3ce95613669182ee": "Yfilerename",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "26447229ba2c3d43db978c1b3ce95613669182ee": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7590. Mavenize streaming and MR examples. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1203941 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/11/11 5:24 PM",
      "commitName": "26447229ba2c3d43db978c1b3ce95613669182ee",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "18/11/11 1:04 AM",
      "commitNameOld": "905a127850d5e0cba85c2e075f989fa0f5cf129a",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.68,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void compute(final String name, Summation sigma) throws IOException {\n    if (sigma.getValue() !\u003d null)\n      throw new IOException(\"sigma.getValue() !\u003d null, sigma\u003d\" + sigma);\n\n    //setup remote directory\n    final FileSystem fs \u003d FileSystem.get(getConf());\n    final Path dir \u003d fs.makeQualified(new Path(parameters.remoteDir, name));\n    if (!Util.createNonexistingDirectory(fs, dir))\n      return;\n\n    //setup a job\n    final Job job \u003d createJob(name, sigma);\n    final Path outdir \u003d new Path(dir, \"out\");\n    FileOutputFormat.setOutputPath(job, outdir);\n\n    //start a map/reduce job\n    final String startmessage \u003d \"steps/parts \u003d \"\n      + sigma.E.getSteps() + \"/\" + parameters.nParts\n      + \" \u003d \" + Util.long2string(sigma.E.getSteps()/parameters.nParts);\n    Util.runJob(name, job, parameters.machine, startmessage, timer);\n    final List\u003cTaskResult\u003e results \u003d Util.readJobOutputs(fs, outdir);\n    Util.writeResults(name, results, fs, parameters.remoteDir);\n    fs.delete(dir, true);\n\n    //combine results\n    final List\u003cTaskResult\u003e combined \u003d Util.combine(results);\n    final PrintWriter out \u003d Util.createWriter(parameters.localDir, name);\n    try {\n      for(TaskResult r : combined) {\n        final String s \u003d taskResult2string(name, r);\n        out.println(s);\n        out.flush();\n        Util.out.println(s);\n      }\n    } finally {\n      out.close();\n    }\n    if (combined.size() \u003d\u003d 1) {\n      final Summation s \u003d combined.get(0).getElement();\n      if (sigma.contains(s) \u0026\u0026 s.contains(sigma))\n        sigma.setValue(s.getValue());\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-examples/src/main/java/org/apache/hadoop/examples/pi/DistSum.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/src/examples/org/apache/hadoop/examples/pi/DistSum.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-examples/src/main/java/org/apache/hadoop/examples/pi/DistSum.java"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void compute(final String name, Summation sigma) throws IOException {\n    if (sigma.getValue() !\u003d null)\n      throw new IOException(\"sigma.getValue() !\u003d null, sigma\u003d\" + sigma);\n\n    //setup remote directory\n    final FileSystem fs \u003d FileSystem.get(getConf());\n    final Path dir \u003d fs.makeQualified(new Path(parameters.remoteDir, name));\n    if (!Util.createNonexistingDirectory(fs, dir))\n      return;\n\n    //setup a job\n    final Job job \u003d createJob(name, sigma);\n    final Path outdir \u003d new Path(dir, \"out\");\n    FileOutputFormat.setOutputPath(job, outdir);\n\n    //start a map/reduce job\n    final String startmessage \u003d \"steps/parts \u003d \"\n      + sigma.E.getSteps() + \"/\" + parameters.nParts\n      + \" \u003d \" + Util.long2string(sigma.E.getSteps()/parameters.nParts);\n    Util.runJob(name, job, parameters.machine, startmessage, timer);\n    final List\u003cTaskResult\u003e results \u003d Util.readJobOutputs(fs, outdir);\n    Util.writeResults(name, results, fs, parameters.remoteDir);\n    fs.delete(dir, true);\n\n    //combine results\n    final List\u003cTaskResult\u003e combined \u003d Util.combine(results);\n    final PrintWriter out \u003d Util.createWriter(parameters.localDir, name);\n    try {\n      for(TaskResult r : combined) {\n        final String s \u003d taskResult2string(name, r);\n        out.println(s);\n        out.flush();\n        Util.out.println(s);\n      }\n    } finally {\n      out.close();\n    }\n    if (combined.size() \u003d\u003d 1) {\n      final Summation s \u003d combined.get(0).getElement();\n      if (sigma.contains(s) \u0026\u0026 s.contains(sigma))\n        sigma.setValue(s.getValue());\n    }\n  }",
      "path": "hadoop-mapreduce-project/src/examples/org/apache/hadoop/examples/pi/DistSum.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/src/examples/org/apache/hadoop/examples/pi/DistSum.java",
        "newPath": "hadoop-mapreduce-project/src/examples/org/apache/hadoop/examples/pi/DistSum.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void compute(final String name, Summation sigma) throws IOException {\n    if (sigma.getValue() !\u003d null)\n      throw new IOException(\"sigma.getValue() !\u003d null, sigma\u003d\" + sigma);\n\n    //setup remote directory\n    final FileSystem fs \u003d FileSystem.get(getConf());\n    final Path dir \u003d fs.makeQualified(new Path(parameters.remoteDir, name));\n    if (!Util.createNonexistingDirectory(fs, dir))\n      return;\n\n    //setup a job\n    final Job job \u003d createJob(name, sigma);\n    final Path outdir \u003d new Path(dir, \"out\");\n    FileOutputFormat.setOutputPath(job, outdir);\n\n    //start a map/reduce job\n    final String startmessage \u003d \"steps/parts \u003d \"\n      + sigma.E.getSteps() + \"/\" + parameters.nParts\n      + \" \u003d \" + Util.long2string(sigma.E.getSteps()/parameters.nParts);\n    Util.runJob(name, job, parameters.machine, startmessage, timer);\n    final List\u003cTaskResult\u003e results \u003d Util.readJobOutputs(fs, outdir);\n    Util.writeResults(name, results, fs, parameters.remoteDir);\n    fs.delete(dir, true);\n\n    //combine results\n    final List\u003cTaskResult\u003e combined \u003d Util.combine(results);\n    final PrintWriter out \u003d Util.createWriter(parameters.localDir, name);\n    try {\n      for(TaskResult r : combined) {\n        final String s \u003d taskResult2string(name, r);\n        out.println(s);\n        out.flush();\n        Util.out.println(s);\n      }\n    } finally {\n      out.close();\n    }\n    if (combined.size() \u003d\u003d 1) {\n      final Summation s \u003d combined.get(0).getElement();\n      if (sigma.contains(s) \u0026\u0026 s.contains(sigma))\n        sigma.setValue(s.getValue());\n    }\n  }",
      "path": "hadoop-mapreduce/src/examples/org/apache/hadoop/examples/pi/DistSum.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/examples/org/apache/hadoop/examples/pi/DistSum.java",
        "newPath": "hadoop-mapreduce/src/examples/org/apache/hadoop/examples/pi/DistSum.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,43 @@\n+  private void compute(final String name, Summation sigma) throws IOException {\n+    if (sigma.getValue() !\u003d null)\n+      throw new IOException(\"sigma.getValue() !\u003d null, sigma\u003d\" + sigma);\n+\n+    //setup remote directory\n+    final FileSystem fs \u003d FileSystem.get(getConf());\n+    final Path dir \u003d fs.makeQualified(new Path(parameters.remoteDir, name));\n+    if (!Util.createNonexistingDirectory(fs, dir))\n+      return;\n+\n+    //setup a job\n+    final Job job \u003d createJob(name, sigma);\n+    final Path outdir \u003d new Path(dir, \"out\");\n+    FileOutputFormat.setOutputPath(job, outdir);\n+\n+    //start a map/reduce job\n+    final String startmessage \u003d \"steps/parts \u003d \"\n+      + sigma.E.getSteps() + \"/\" + parameters.nParts\n+      + \" \u003d \" + Util.long2string(sigma.E.getSteps()/parameters.nParts);\n+    Util.runJob(name, job, parameters.machine, startmessage, timer);\n+    final List\u003cTaskResult\u003e results \u003d Util.readJobOutputs(fs, outdir);\n+    Util.writeResults(name, results, fs, parameters.remoteDir);\n+    fs.delete(dir, true);\n+\n+    //combine results\n+    final List\u003cTaskResult\u003e combined \u003d Util.combine(results);\n+    final PrintWriter out \u003d Util.createWriter(parameters.localDir, name);\n+    try {\n+      for(TaskResult r : combined) {\n+        final String s \u003d taskResult2string(name, r);\n+        out.println(s);\n+        out.flush();\n+        Util.out.println(s);\n+      }\n+    } finally {\n+      out.close();\n+    }\n+    if (combined.size() \u003d\u003d 1) {\n+      final Summation s \u003d combined.get(0).getElement();\n+      if (sigma.contains(s) \u0026\u0026 s.contains(sigma))\n+        sigma.setValue(s.getValue());\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void compute(final String name, Summation sigma) throws IOException {\n    if (sigma.getValue() !\u003d null)\n      throw new IOException(\"sigma.getValue() !\u003d null, sigma\u003d\" + sigma);\n\n    //setup remote directory\n    final FileSystem fs \u003d FileSystem.get(getConf());\n    final Path dir \u003d fs.makeQualified(new Path(parameters.remoteDir, name));\n    if (!Util.createNonexistingDirectory(fs, dir))\n      return;\n\n    //setup a job\n    final Job job \u003d createJob(name, sigma);\n    final Path outdir \u003d new Path(dir, \"out\");\n    FileOutputFormat.setOutputPath(job, outdir);\n\n    //start a map/reduce job\n    final String startmessage \u003d \"steps/parts \u003d \"\n      + sigma.E.getSteps() + \"/\" + parameters.nParts\n      + \" \u003d \" + Util.long2string(sigma.E.getSteps()/parameters.nParts);\n    Util.runJob(name, job, parameters.machine, startmessage, timer);\n    final List\u003cTaskResult\u003e results \u003d Util.readJobOutputs(fs, outdir);\n    Util.writeResults(name, results, fs, parameters.remoteDir);\n    fs.delete(dir, true);\n\n    //combine results\n    final List\u003cTaskResult\u003e combined \u003d Util.combine(results);\n    final PrintWriter out \u003d Util.createWriter(parameters.localDir, name);\n    try {\n      for(TaskResult r : combined) {\n        final String s \u003d taskResult2string(name, r);\n        out.println(s);\n        out.flush();\n        Util.out.println(s);\n      }\n    } finally {\n      out.close();\n    }\n    if (combined.size() \u003d\u003d 1) {\n      final Summation s \u003d combined.get(0).getElement();\n      if (sigma.contains(s) \u0026\u0026 s.contains(sigma))\n        sigma.setValue(s.getValue());\n    }\n  }",
      "path": "mapreduce/src/examples/org/apache/hadoop/examples/pi/DistSum.java"
    }
  }
}