{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RegistryPathUtils.java",
  "functionName": "join",
  "functionId": "join___base-String__path-String",
  "sourceFilePath": "hadoop-common-project/hadoop-registry/src/main/java/org/apache/hadoop/registry/client/binding/RegistryPathUtils.java",
  "functionStartLine": 112,
  "functionEndLine": 143,
  "numCommitsSeen": 6,
  "timeTaken": 1095,
  "changeHistory": [
    "e2a9fa8448e2aac34c318260e425786a6c8ca2ae",
    "6a326711aa27e84fd4c53937afc5c41a746ec65a"
  ],
  "changeHistoryShort": {
    "e2a9fa8448e2aac34c318260e425786a6c8ca2ae": "Yfilerename",
    "6a326711aa27e84fd4c53937afc5c41a746ec65a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e2a9fa8448e2aac34c318260e425786a6c8ca2ae": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-15821. Move YARN Registry to Hadoop Registry.\n              Contributed by Íñigo Goiri\n",
      "commitDate": "19/10/18 4:46 PM",
      "commitName": "e2a9fa8448e2aac34c318260e425786a6c8ca2ae",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "19/10/18 1:57 PM",
      "commitNameOld": "00254d7b8c714ae2000d0934d260b23458033529",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 0.12,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static String join(String base, String path) {\n    Preconditions.checkArgument(path !\u003d null, \"null path\");\n    Preconditions.checkArgument(base !\u003d null, \"null path\");\n    StringBuilder fullpath \u003d new StringBuilder();\n\n    if (!base.startsWith(\"/\")) {\n      fullpath.append(\u0027/\u0027);\n    }\n    fullpath.append(base);\n\n    // guarantee a trailing /\n    if (!fullpath.toString().endsWith(\"/\")) {\n      fullpath.append(\"/\");\n    }\n    // strip off any at the beginning\n    if (path.startsWith(\"/\")) {\n      // path starts with /, so append all other characters -if present\n      if (path.length() \u003e 1) {\n        fullpath.append(path.substring(1));\n      }\n    } else {\n      fullpath.append(path);\n    }\n\n    //here there may be a trailing \"/\"\n    String finalpath \u003d fullpath.toString();\n    if (finalpath.endsWith(\"/\") \u0026\u0026 !\"/\".equals(finalpath)) {\n      finalpath \u003d finalpath.substring(0, finalpath.length() - 1);\n\n    }\n    return finalpath;\n  }",
      "path": "hadoop-common-project/hadoop-registry/src/main/java/org/apache/hadoop/registry/client/binding/RegistryPathUtils.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-registry/src/main/java/org/apache/hadoop/registry/client/binding/RegistryPathUtils.java",
        "newPath": "hadoop-common-project/hadoop-registry/src/main/java/org/apache/hadoop/registry/client/binding/RegistryPathUtils.java"
      }
    },
    "6a326711aa27e84fd4c53937afc5c41a746ec65a": {
      "type": "Yintroduced",
      "commitMessage": "YARN-913 service registry: YARN-2652 add hadoop-yarn-registry package under hadoop-yarn\n",
      "commitDate": "08/10/14 1:02 PM",
      "commitName": "6a326711aa27e84fd4c53937afc5c41a746ec65a",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,32 @@\n+  public static String join(String base, String path) {\n+    Preconditions.checkArgument(path !\u003d null, \"null path\");\n+    Preconditions.checkArgument(base !\u003d null, \"null path\");\n+    StringBuilder fullpath \u003d new StringBuilder();\n+\n+    if (!base.startsWith(\"/\")) {\n+      fullpath.append(\u0027/\u0027);\n+    }\n+    fullpath.append(base);\n+\n+    // guarantee a trailing /\n+    if (!fullpath.toString().endsWith(\"/\")) {\n+      fullpath.append(\"/\");\n+    }\n+    // strip off any at the beginning\n+    if (path.startsWith(\"/\")) {\n+      // path starts with /, so append all other characters -if present\n+      if (path.length() \u003e 1) {\n+        fullpath.append(path.substring(1));\n+      }\n+    } else {\n+      fullpath.append(path);\n+    }\n+\n+    //here there may be a trailing \"/\"\n+    String finalpath \u003d fullpath.toString();\n+    if (finalpath.endsWith(\"/\") \u0026\u0026 !\"/\".equals(finalpath)) {\n+      finalpath \u003d finalpath.substring(0, finalpath.length() - 1);\n+\n+    }\n+    return finalpath;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static String join(String base, String path) {\n    Preconditions.checkArgument(path !\u003d null, \"null path\");\n    Preconditions.checkArgument(base !\u003d null, \"null path\");\n    StringBuilder fullpath \u003d new StringBuilder();\n\n    if (!base.startsWith(\"/\")) {\n      fullpath.append(\u0027/\u0027);\n    }\n    fullpath.append(base);\n\n    // guarantee a trailing /\n    if (!fullpath.toString().endsWith(\"/\")) {\n      fullpath.append(\"/\");\n    }\n    // strip off any at the beginning\n    if (path.startsWith(\"/\")) {\n      // path starts with /, so append all other characters -if present\n      if (path.length() \u003e 1) {\n        fullpath.append(path.substring(1));\n      }\n    } else {\n      fullpath.append(path);\n    }\n\n    //here there may be a trailing \"/\"\n    String finalpath \u003d fullpath.toString();\n    if (finalpath.endsWith(\"/\") \u0026\u0026 !\"/\".equals(finalpath)) {\n      finalpath \u003d finalpath.substring(0, finalpath.length() - 1);\n\n    }\n    return finalpath;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-registry/src/main/java/org/apache/hadoop/registry/client/binding/RegistryPathUtils.java"
    }
  }
}