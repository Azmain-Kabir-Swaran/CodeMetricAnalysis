{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ResourceLocalizationSpecPBImpl.java",
  "functionName": "mergeLocalToBuilder",
  "functionId": "mergeLocalToBuilder",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/api/impl/pb/ResourceLocalizationSpecPBImpl.java",
  "functionStartLine": 102,
  "functionEndLine": 117,
  "numCommitsSeen": 2,
  "timeTaken": 750,
  "changeHistory": [
    "b96d18bd23d104c4fbf5ff8ee38c72f09f30b39a"
  ],
  "changeHistoryShort": {
    "b96d18bd23d104c4fbf5ff8ee38c72f09f30b39a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b96d18bd23d104c4fbf5ff8ee38c72f09f30b39a": {
      "type": "Yintroduced",
      "commitMessage": "YARN-99. Modify private distributed cache to localize files such that no local directory hits unix file count limits and thus prevent job failures. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1465853 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/04/13 6:33 PM",
      "commitName": "b96d18bd23d104c4fbf5ff8ee38c72f09f30b39a",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,16 @@\n+  private void mergeLocalToBuilder() {\n+    ResourceLocalizationSpecProtoOrBuilder l \u003d viaProto ? proto : builder;\n+    if (this.resource !\u003d null\n+        \u0026\u0026 !(l.getResource()\n+          .equals(((LocalResourcePBImpl) resource).getProto()))) {\n+      maybeInitBuilder();\n+      builder.setResource(((LocalResourcePBImpl) resource).getProto());\n+    }\n+    if (this.destinationDirectory !\u003d null\n+        \u0026\u0026 !(l.getDestinationDirectory()\n+          .equals(((URLPBImpl) destinationDirectory).getProto()))) {\n+      maybeInitBuilder();\n+      builder.setDestinationDirectory(((URLPBImpl) destinationDirectory)\n+        .getProto());\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    ResourceLocalizationSpecProtoOrBuilder l \u003d viaProto ? proto : builder;\n    if (this.resource !\u003d null\n        \u0026\u0026 !(l.getResource()\n          .equals(((LocalResourcePBImpl) resource).getProto()))) {\n      maybeInitBuilder();\n      builder.setResource(((LocalResourcePBImpl) resource).getProto());\n    }\n    if (this.destinationDirectory !\u003d null\n        \u0026\u0026 !(l.getDestinationDirectory()\n          .equals(((URLPBImpl) destinationDirectory).getProto()))) {\n      maybeInitBuilder();\n      builder.setDestinationDirectory(((URLPBImpl) destinationDirectory)\n        .getProto());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/api/impl/pb/ResourceLocalizationSpecPBImpl.java"
    }
  }
}