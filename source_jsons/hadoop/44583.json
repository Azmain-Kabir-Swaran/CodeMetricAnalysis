{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LogsCLI.java",
  "functionName": "outputAMContainerLogs",
  "functionId": "outputAMContainerLogs___request-ContainerLogsRequest__conf-Configuration__logCliHelper-LogCLIHelpers__useRegex-boolean__ignoreSizeLimit-boolean",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/LogsCLI.java",
  "functionStartLine": 821,
  "functionEndLine": 847,
  "numCommitsSeen": 140,
  "timeTaken": 6325,
  "changeHistory": [
    "ec2ae3060a807c8754826af2135a68c08b2e4f13",
    "e605d47df05619c6b1c18aca59f709899498da75",
    "3818393297c7b337e380e8111a55f2ac4745cb83",
    "7e5355c14e55fd6540f7f070df4b78fa94a81618",
    "bde819abbbcea940cfa6426a9e4920e6c8dc9cf1",
    "ef1757790d89cc72f88f5330761b1c8901c59e94",
    "9e37fe3b7a3b5f0a193d228bb5e065f41acd2835",
    "34ef1a092bcab369bb845481efffb8c47adef53a",
    "a77d628339afaf2f5a085c73fd81a805b18348c9"
  ],
  "changeHistoryShort": {
    "ec2ae3060a807c8754826af2135a68c08b2e4f13": "Ymultichange(Yparameterchange,Ybodychange)",
    "e605d47df05619c6b1c18aca59f709899498da75": "Ymultichange(Yparameterchange,Ybodychange)",
    "3818393297c7b337e380e8111a55f2ac4745cb83": "Ybodychange",
    "7e5355c14e55fd6540f7f070df4b78fa94a81618": "Ybodychange",
    "bde819abbbcea940cfa6426a9e4920e6c8dc9cf1": "Ymultichange(Yparameterchange,Ybodychange)",
    "ef1757790d89cc72f88f5330761b1c8901c59e94": "Ymultichange(Yparameterchange,Ybodychange)",
    "9e37fe3b7a3b5f0a193d228bb5e065f41acd2835": "Ybodychange",
    "34ef1a092bcab369bb845481efffb8c47adef53a": "Ybodychange",
    "a77d628339afaf2f5a085c73fd81a805b18348c9": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ec2ae3060a807c8754826af2135a68c08b2e4f13": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-6509. Add a size threshold beyond which yarn logs will require a force option. (Xuan Gong via wangda)\n\nChange-Id: I755fe903337d4ff9ec35dae5b9cce638794e1d0f\n",
      "commitDate": "29/09/17 4:42 PM",
      "commitName": "ec2ae3060a807c8754826af2135a68c08b2e4f13",
      "commitAuthor": "Wangda Tan",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-6509. Add a size threshold beyond which yarn logs will require a force option. (Xuan Gong via wangda)\n\nChange-Id: I755fe903337d4ff9ec35dae5b9cce638794e1d0f\n",
          "commitDate": "29/09/17 4:42 PM",
          "commitName": "ec2ae3060a807c8754826af2135a68c08b2e4f13",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "15/09/17 3:33 PM",
          "commitNameOld": "1a84c24b0cf6674fa755403971fa57d8e412b320",
          "commitAuthorOld": "Junping Du",
          "daysBetweenCommits": 14.05,
          "commitsBetweenForRepo": 103,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,27 @@\n   private void outputAMContainerLogs(ContainerLogsRequest request,\n-      Configuration conf, LogCLIHelpers logCliHelper, boolean useRegex)\n-      throws Exception {\n+      Configuration conf, LogCLIHelpers logCliHelper, boolean useRegex,\n+      boolean ignoreSizeLimit) throws Exception {\n     String nodeHttpAddress \u003d request.getNodeHttpAddress();\n     String containerId \u003d request.getContainerId();\n     String nodeId \u003d request.getNodeId();\n \n     if (request.isAppFinished()) {\n       if (containerId !\u003d null \u0026\u0026 !containerId.isEmpty()) {\n         if (nodeId !\u003d null \u0026\u0026 !nodeId.isEmpty()) {\n-          printContainerLogsForFinishedApplication(request,\n-              logCliHelper, useRegex);\n+          logCliHelper.dumpAContainerLogsForLogType(request);\n         } else {\n-          printContainerLogsForFinishedApplicationWithoutNodeId(\n-              request, logCliHelper, useRegex);\n+          logCliHelper.dumpAContainerLogsForLogTypeWithoutNodeId(\n+              request);\n         }\n       }\n     } else {\n       if (nodeHttpAddress !\u003d null \u0026\u0026 containerId !\u003d null\n           \u0026\u0026 !nodeHttpAddress.isEmpty() \u0026\u0026 !containerId.isEmpty()) {\n         ContainerState containerState \u003d getContainerReport(containerId)\n             .getContainerState();\n         request.setContainerState(containerState);\n         printContainerLogsFromRunningApplication(conf,\n-            request, logCliHelper, useRegex);\n+            request, logCliHelper, useRegex, ignoreSizeLimit);\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void outputAMContainerLogs(ContainerLogsRequest request,\n      Configuration conf, LogCLIHelpers logCliHelper, boolean useRegex,\n      boolean ignoreSizeLimit) throws Exception {\n    String nodeHttpAddress \u003d request.getNodeHttpAddress();\n    String containerId \u003d request.getContainerId();\n    String nodeId \u003d request.getNodeId();\n\n    if (request.isAppFinished()) {\n      if (containerId !\u003d null \u0026\u0026 !containerId.isEmpty()) {\n        if (nodeId !\u003d null \u0026\u0026 !nodeId.isEmpty()) {\n          logCliHelper.dumpAContainerLogsForLogType(request);\n        } else {\n          logCliHelper.dumpAContainerLogsForLogTypeWithoutNodeId(\n              request);\n        }\n      }\n    } else {\n      if (nodeHttpAddress !\u003d null \u0026\u0026 containerId !\u003d null\n          \u0026\u0026 !nodeHttpAddress.isEmpty() \u0026\u0026 !containerId.isEmpty()) {\n        ContainerState containerState \u003d getContainerReport(containerId)\n            .getContainerState();\n        request.setContainerState(containerState);\n        printContainerLogsFromRunningApplication(conf,\n            request, logCliHelper, useRegex, ignoreSizeLimit);\n      }\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/LogsCLI.java",
          "extendedDetails": {
            "oldValue": "[request-ContainerLogsRequest, conf-Configuration, logCliHelper-LogCLIHelpers, useRegex-boolean]",
            "newValue": "[request-ContainerLogsRequest, conf-Configuration, logCliHelper-LogCLIHelpers, useRegex-boolean, ignoreSizeLimit-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-6509. Add a size threshold beyond which yarn logs will require a force option. (Xuan Gong via wangda)\n\nChange-Id: I755fe903337d4ff9ec35dae5b9cce638794e1d0f\n",
          "commitDate": "29/09/17 4:42 PM",
          "commitName": "ec2ae3060a807c8754826af2135a68c08b2e4f13",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "15/09/17 3:33 PM",
          "commitNameOld": "1a84c24b0cf6674fa755403971fa57d8e412b320",
          "commitAuthorOld": "Junping Du",
          "daysBetweenCommits": 14.05,
          "commitsBetweenForRepo": 103,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,27 @@\n   private void outputAMContainerLogs(ContainerLogsRequest request,\n-      Configuration conf, LogCLIHelpers logCliHelper, boolean useRegex)\n-      throws Exception {\n+      Configuration conf, LogCLIHelpers logCliHelper, boolean useRegex,\n+      boolean ignoreSizeLimit) throws Exception {\n     String nodeHttpAddress \u003d request.getNodeHttpAddress();\n     String containerId \u003d request.getContainerId();\n     String nodeId \u003d request.getNodeId();\n \n     if (request.isAppFinished()) {\n       if (containerId !\u003d null \u0026\u0026 !containerId.isEmpty()) {\n         if (nodeId !\u003d null \u0026\u0026 !nodeId.isEmpty()) {\n-          printContainerLogsForFinishedApplication(request,\n-              logCliHelper, useRegex);\n+          logCliHelper.dumpAContainerLogsForLogType(request);\n         } else {\n-          printContainerLogsForFinishedApplicationWithoutNodeId(\n-              request, logCliHelper, useRegex);\n+          logCliHelper.dumpAContainerLogsForLogTypeWithoutNodeId(\n+              request);\n         }\n       }\n     } else {\n       if (nodeHttpAddress !\u003d null \u0026\u0026 containerId !\u003d null\n           \u0026\u0026 !nodeHttpAddress.isEmpty() \u0026\u0026 !containerId.isEmpty()) {\n         ContainerState containerState \u003d getContainerReport(containerId)\n             .getContainerState();\n         request.setContainerState(containerState);\n         printContainerLogsFromRunningApplication(conf,\n-            request, logCliHelper, useRegex);\n+            request, logCliHelper, useRegex, ignoreSizeLimit);\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void outputAMContainerLogs(ContainerLogsRequest request,\n      Configuration conf, LogCLIHelpers logCliHelper, boolean useRegex,\n      boolean ignoreSizeLimit) throws Exception {\n    String nodeHttpAddress \u003d request.getNodeHttpAddress();\n    String containerId \u003d request.getContainerId();\n    String nodeId \u003d request.getNodeId();\n\n    if (request.isAppFinished()) {\n      if (containerId !\u003d null \u0026\u0026 !containerId.isEmpty()) {\n        if (nodeId !\u003d null \u0026\u0026 !nodeId.isEmpty()) {\n          logCliHelper.dumpAContainerLogsForLogType(request);\n        } else {\n          logCliHelper.dumpAContainerLogsForLogTypeWithoutNodeId(\n              request);\n        }\n      }\n    } else {\n      if (nodeHttpAddress !\u003d null \u0026\u0026 containerId !\u003d null\n          \u0026\u0026 !nodeHttpAddress.isEmpty() \u0026\u0026 !containerId.isEmpty()) {\n        ContainerState containerState \u003d getContainerReport(containerId)\n            .getContainerState();\n        request.setContainerState(containerState);\n        printContainerLogsFromRunningApplication(conf,\n            request, logCliHelper, useRegex, ignoreSizeLimit);\n      }\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/LogsCLI.java",
          "extendedDetails": {}
        }
      ]
    },
    "e605d47df05619c6b1c18aca59f709899498da75": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-5470. Differentiate exactly match with regex in yarn log CLI. Contributed by Xuan Gong.\n",
      "commitDate": "05/08/16 10:55 AM",
      "commitName": "e605d47df05619c6b1c18aca59f709899498da75",
      "commitAuthor": "Junping Du",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-5470. Differentiate exactly match with regex in yarn log CLI. Contributed by Xuan Gong.\n",
          "commitDate": "05/08/16 10:55 AM",
          "commitName": "e605d47df05619c6b1c18aca59f709899498da75",
          "commitAuthor": "Junping Du",
          "commitDateOld": "02/08/16 10:41 AM",
          "commitNameOld": "3818393297c7b337e380e8111a55f2ac4745cb83",
          "commitAuthorOld": "Junping Du",
          "daysBetweenCommits": 3.01,
          "commitsBetweenForRepo": 39,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,28 @@\n   private void outputAMContainerLogs(ContainerLogsRequest request,\n-      Configuration conf, LogCLIHelpers logCliHelper) throws Exception {\n+      Configuration conf, LogCLIHelpers logCliHelper, boolean useRegex)\n+      throws Exception {\n     String nodeHttpAddress \u003d request.getNodeHttpAddress();\n     String containerId \u003d request.getContainerId();\n     String nodeId \u003d request.getNodeId();\n \n     if (request.isAppFinished()) {\n       if (containerId !\u003d null \u0026\u0026 !containerId.isEmpty()) {\n         if (nodeId !\u003d null \u0026\u0026 !nodeId.isEmpty()) {\n           printContainerLogsForFinishedApplication(request,\n-              logCliHelper);\n+              logCliHelper, useRegex);\n         } else {\n           printContainerLogsForFinishedApplicationWithoutNodeId(\n-              request, logCliHelper);\n+              request, logCliHelper, useRegex);\n         }\n       }\n     } else {\n       if (nodeHttpAddress !\u003d null \u0026\u0026 containerId !\u003d null\n           \u0026\u0026 !nodeHttpAddress.isEmpty() \u0026\u0026 !containerId.isEmpty()) {\n         ContainerState containerState \u003d getContainerReport(containerId)\n             .getContainerState();\n         request.setContainerState(containerState);\n         printContainerLogsFromRunningApplication(conf,\n-            request, logCliHelper);\n+            request, logCliHelper, useRegex);\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void outputAMContainerLogs(ContainerLogsRequest request,\n      Configuration conf, LogCLIHelpers logCliHelper, boolean useRegex)\n      throws Exception {\n    String nodeHttpAddress \u003d request.getNodeHttpAddress();\n    String containerId \u003d request.getContainerId();\n    String nodeId \u003d request.getNodeId();\n\n    if (request.isAppFinished()) {\n      if (containerId !\u003d null \u0026\u0026 !containerId.isEmpty()) {\n        if (nodeId !\u003d null \u0026\u0026 !nodeId.isEmpty()) {\n          printContainerLogsForFinishedApplication(request,\n              logCliHelper, useRegex);\n        } else {\n          printContainerLogsForFinishedApplicationWithoutNodeId(\n              request, logCliHelper, useRegex);\n        }\n      }\n    } else {\n      if (nodeHttpAddress !\u003d null \u0026\u0026 containerId !\u003d null\n          \u0026\u0026 !nodeHttpAddress.isEmpty() \u0026\u0026 !containerId.isEmpty()) {\n        ContainerState containerState \u003d getContainerReport(containerId)\n            .getContainerState();\n        request.setContainerState(containerState);\n        printContainerLogsFromRunningApplication(conf,\n            request, logCliHelper, useRegex);\n      }\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/LogsCLI.java",
          "extendedDetails": {
            "oldValue": "[request-ContainerLogsRequest, conf-Configuration, logCliHelper-LogCLIHelpers]",
            "newValue": "[request-ContainerLogsRequest, conf-Configuration, logCliHelper-LogCLIHelpers, useRegex-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-5470. Differentiate exactly match with regex in yarn log CLI. Contributed by Xuan Gong.\n",
          "commitDate": "05/08/16 10:55 AM",
          "commitName": "e605d47df05619c6b1c18aca59f709899498da75",
          "commitAuthor": "Junping Du",
          "commitDateOld": "02/08/16 10:41 AM",
          "commitNameOld": "3818393297c7b337e380e8111a55f2ac4745cb83",
          "commitAuthorOld": "Junping Du",
          "daysBetweenCommits": 3.01,
          "commitsBetweenForRepo": 39,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,28 @@\n   private void outputAMContainerLogs(ContainerLogsRequest request,\n-      Configuration conf, LogCLIHelpers logCliHelper) throws Exception {\n+      Configuration conf, LogCLIHelpers logCliHelper, boolean useRegex)\n+      throws Exception {\n     String nodeHttpAddress \u003d request.getNodeHttpAddress();\n     String containerId \u003d request.getContainerId();\n     String nodeId \u003d request.getNodeId();\n \n     if (request.isAppFinished()) {\n       if (containerId !\u003d null \u0026\u0026 !containerId.isEmpty()) {\n         if (nodeId !\u003d null \u0026\u0026 !nodeId.isEmpty()) {\n           printContainerLogsForFinishedApplication(request,\n-              logCliHelper);\n+              logCliHelper, useRegex);\n         } else {\n           printContainerLogsForFinishedApplicationWithoutNodeId(\n-              request, logCliHelper);\n+              request, logCliHelper, useRegex);\n         }\n       }\n     } else {\n       if (nodeHttpAddress !\u003d null \u0026\u0026 containerId !\u003d null\n           \u0026\u0026 !nodeHttpAddress.isEmpty() \u0026\u0026 !containerId.isEmpty()) {\n         ContainerState containerState \u003d getContainerReport(containerId)\n             .getContainerState();\n         request.setContainerState(containerState);\n         printContainerLogsFromRunningApplication(conf,\n-            request, logCliHelper);\n+            request, logCliHelper, useRegex);\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void outputAMContainerLogs(ContainerLogsRequest request,\n      Configuration conf, LogCLIHelpers logCliHelper, boolean useRegex)\n      throws Exception {\n    String nodeHttpAddress \u003d request.getNodeHttpAddress();\n    String containerId \u003d request.getContainerId();\n    String nodeId \u003d request.getNodeId();\n\n    if (request.isAppFinished()) {\n      if (containerId !\u003d null \u0026\u0026 !containerId.isEmpty()) {\n        if (nodeId !\u003d null \u0026\u0026 !nodeId.isEmpty()) {\n          printContainerLogsForFinishedApplication(request,\n              logCliHelper, useRegex);\n        } else {\n          printContainerLogsForFinishedApplicationWithoutNodeId(\n              request, logCliHelper, useRegex);\n        }\n      }\n    } else {\n      if (nodeHttpAddress !\u003d null \u0026\u0026 containerId !\u003d null\n          \u0026\u0026 !nodeHttpAddress.isEmpty() \u0026\u0026 !containerId.isEmpty()) {\n        ContainerState containerState \u003d getContainerReport(containerId)\n            .getContainerState();\n        request.setContainerState(containerState);\n        printContainerLogsFromRunningApplication(conf,\n            request, logCliHelper, useRegex);\n      }\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/LogsCLI.java",
          "extendedDetails": {}
        }
      ]
    },
    "3818393297c7b337e380e8111a55f2ac4745cb83": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5226. Remove AHS enable check from LogsCLI#fetchAMContainerLogs. Contributed by Xuan Gong.\n",
      "commitDate": "02/08/16 10:41 AM",
      "commitName": "3818393297c7b337e380e8111a55f2ac4745cb83",
      "commitAuthor": "Junping Du",
      "commitDateOld": "15/07/16 9:23 AM",
      "commitNameOld": "7e5355c14e55fd6540f7f070df4b78fa94a81618",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 18.05,
      "commitsBetweenForRepo": 106,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,27 @@\n   private void outputAMContainerLogs(ContainerLogsRequest request,\n       Configuration conf, LogCLIHelpers logCliHelper) throws Exception {\n     String nodeHttpAddress \u003d request.getNodeHttpAddress();\n     String containerId \u003d request.getContainerId();\n     String nodeId \u003d request.getNodeId();\n \n     if (request.isAppFinished()) {\n       if (containerId !\u003d null \u0026\u0026 !containerId.isEmpty()) {\n-        if (nodeId \u003d\u003d null || nodeId.isEmpty()) {\n-          try {\n-            nodeId \u003d\n-                getContainerReport(containerId).getAssignedNode().toString();\n-            request.setNodeId(nodeId);\n-          } catch (Exception ex) {\n-            System.err.println(ex);\n-            nodeId \u003d null;\n-          }\n-        }\n         if (nodeId !\u003d null \u0026\u0026 !nodeId.isEmpty()) {\n           printContainerLogsForFinishedApplication(request,\n               logCliHelper);\n+        } else {\n+          printContainerLogsForFinishedApplicationWithoutNodeId(\n+              request, logCliHelper);\n         }\n       }\n     } else {\n       if (nodeHttpAddress !\u003d null \u0026\u0026 containerId !\u003d null\n           \u0026\u0026 !nodeHttpAddress.isEmpty() \u0026\u0026 !containerId.isEmpty()) {\n         ContainerState containerState \u003d getContainerReport(containerId)\n             .getContainerState();\n         request.setContainerState(containerState);\n         printContainerLogsFromRunningApplication(conf,\n             request, logCliHelper);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void outputAMContainerLogs(ContainerLogsRequest request,\n      Configuration conf, LogCLIHelpers logCliHelper) throws Exception {\n    String nodeHttpAddress \u003d request.getNodeHttpAddress();\n    String containerId \u003d request.getContainerId();\n    String nodeId \u003d request.getNodeId();\n\n    if (request.isAppFinished()) {\n      if (containerId !\u003d null \u0026\u0026 !containerId.isEmpty()) {\n        if (nodeId !\u003d null \u0026\u0026 !nodeId.isEmpty()) {\n          printContainerLogsForFinishedApplication(request,\n              logCliHelper);\n        } else {\n          printContainerLogsForFinishedApplicationWithoutNodeId(\n              request, logCliHelper);\n        }\n      }\n    } else {\n      if (nodeHttpAddress !\u003d null \u0026\u0026 containerId !\u003d null\n          \u0026\u0026 !nodeHttpAddress.isEmpty() \u0026\u0026 !containerId.isEmpty()) {\n        ContainerState containerState \u003d getContainerReport(containerId)\n            .getContainerState();\n        request.setContainerState(containerState);\n        printContainerLogsFromRunningApplication(conf,\n            request, logCliHelper);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/LogsCLI.java",
      "extendedDetails": {}
    },
    "7e5355c14e55fd6540f7f070df4b78fa94a81618": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5339. Passing file to -out for YARN log CLI doesnt give warning or error code. Contributed by Xuan Gong.\n",
      "commitDate": "15/07/16 9:23 AM",
      "commitName": "7e5355c14e55fd6540f7f070df4b78fa94a81618",
      "commitAuthor": "Junping Du",
      "commitDateOld": "14/07/16 10:20 AM",
      "commitNameOld": "429347289c7787364e654334cd84115ae40bb22d",
      "commitAuthorOld": "Xuan",
      "daysBetweenCommits": 0.96,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,34 @@\n   private void outputAMContainerLogs(ContainerLogsRequest request,\n       Configuration conf, LogCLIHelpers logCliHelper) throws Exception {\n     String nodeHttpAddress \u003d request.getNodeHttpAddress();\n     String containerId \u003d request.getContainerId();\n     String nodeId \u003d request.getNodeId();\n \n     if (request.isAppFinished()) {\n       if (containerId !\u003d null \u0026\u0026 !containerId.isEmpty()) {\n         if (nodeId \u003d\u003d null || nodeId.isEmpty()) {\n           try {\n             nodeId \u003d\n                 getContainerReport(containerId).getAssignedNode().toString();\n             request.setNodeId(nodeId);\n           } catch (Exception ex) {\n             System.err.println(ex);\n             nodeId \u003d null;\n           }\n         }\n         if (nodeId !\u003d null \u0026\u0026 !nodeId.isEmpty()) {\n           printContainerLogsForFinishedApplication(request,\n               logCliHelper);\n         }\n       }\n     } else {\n       if (nodeHttpAddress !\u003d null \u0026\u0026 containerId !\u003d null\n           \u0026\u0026 !nodeHttpAddress.isEmpty() \u0026\u0026 !containerId.isEmpty()) {\n+        ContainerState containerState \u003d getContainerReport(containerId)\n+            .getContainerState();\n+        request.setContainerState(containerState);\n         printContainerLogsFromRunningApplication(conf,\n             request, logCliHelper);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void outputAMContainerLogs(ContainerLogsRequest request,\n      Configuration conf, LogCLIHelpers logCliHelper) throws Exception {\n    String nodeHttpAddress \u003d request.getNodeHttpAddress();\n    String containerId \u003d request.getContainerId();\n    String nodeId \u003d request.getNodeId();\n\n    if (request.isAppFinished()) {\n      if (containerId !\u003d null \u0026\u0026 !containerId.isEmpty()) {\n        if (nodeId \u003d\u003d null || nodeId.isEmpty()) {\n          try {\n            nodeId \u003d\n                getContainerReport(containerId).getAssignedNode().toString();\n            request.setNodeId(nodeId);\n          } catch (Exception ex) {\n            System.err.println(ex);\n            nodeId \u003d null;\n          }\n        }\n        if (nodeId !\u003d null \u0026\u0026 !nodeId.isEmpty()) {\n          printContainerLogsForFinishedApplication(request,\n              logCliHelper);\n        }\n      }\n    } else {\n      if (nodeHttpAddress !\u003d null \u0026\u0026 containerId !\u003d null\n          \u0026\u0026 !nodeHttpAddress.isEmpty() \u0026\u0026 !containerId.isEmpty()) {\n        ContainerState containerState \u003d getContainerReport(containerId)\n            .getContainerState();\n        request.setContainerState(containerState);\n        printContainerLogsFromRunningApplication(conf,\n            request, logCliHelper);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/LogsCLI.java",
      "extendedDetails": {}
    },
    "bde819abbbcea940cfa6426a9e4920e6c8dc9cf1": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-5089. Improve \"yarn log\" command-line \"logFiles\" option to support\nregex. Contributed by Xuan Gong\n",
      "commitDate": "26/05/16 11:49 PM",
      "commitName": "bde819abbbcea940cfa6426a9e4920e6c8dc9cf1",
      "commitAuthor": "Xuan",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-5089. Improve \"yarn log\" command-line \"logFiles\" option to support\nregex. Contributed by Xuan Gong\n",
          "commitDate": "26/05/16 11:49 PM",
          "commitName": "bde819abbbcea940cfa6426a9e4920e6c8dc9cf1",
          "commitAuthor": "Xuan",
          "commitDateOld": "18/05/16 10:14 AM",
          "commitNameOld": "ef1757790d89cc72f88f5330761b1c8901c59e94",
          "commitAuthorOld": "Varun Vasudev",
          "daysBetweenCommits": 8.57,
          "commitsBetweenForRepo": 66,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,42 +1,31 @@\n   private void outputAMContainerLogs(ContainerLogsRequest request,\n-      Configuration conf, String[] logFiles,\n-      LogCLIHelpers logCliHelper, String localDir) throws Exception {\n+      Configuration conf, LogCLIHelpers logCliHelper) throws Exception {\n     String nodeHttpAddress \u003d request.getNodeHttpAddress();\n     String containerId \u003d request.getContainerId();\n     String nodeId \u003d request.getNodeId();\n \n     if (request.isAppFinished()) {\n       if (containerId !\u003d null \u0026\u0026 !containerId.isEmpty()) {\n         if (nodeId \u003d\u003d null || nodeId.isEmpty()) {\n           try {\n             nodeId \u003d\n                 getContainerReport(containerId).getAssignedNode().toString();\n             request.setNodeId(nodeId);\n           } catch (Exception ex) {\n             System.err.println(ex);\n             nodeId \u003d null;\n           }\n         }\n         if (nodeId !\u003d null \u0026\u0026 !nodeId.isEmpty()) {\n-          String[] requestedLogFilesList \u003d null;\n-          if(!fetchAllLogFiles(logFiles)) {\n-            requestedLogFilesList \u003d logFiles;\n-          }\n           printContainerLogsForFinishedApplication(request,\n-              requestedLogFilesList, logCliHelper, localDir);\n+              logCliHelper);\n         }\n       }\n     } else {\n       if (nodeHttpAddress !\u003d null \u0026\u0026 containerId !\u003d null\n           \u0026\u0026 !nodeHttpAddress.isEmpty() \u0026\u0026 !containerId.isEmpty()) {\n-        String[] requestedLogFiles \u003d logFiles;\n-        // fetch all the log files for the AM\n-        if (fetchAllLogFiles(logFiles)) {\n-          requestedLogFiles \u003d\n-              getContainerLogFiles(getConf(), containerId, nodeHttpAddress);\n-        }\n         printContainerLogsFromRunningApplication(conf,\n-            request, requestedLogFiles, logCliHelper, localDir);\n+            request, logCliHelper);\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void outputAMContainerLogs(ContainerLogsRequest request,\n      Configuration conf, LogCLIHelpers logCliHelper) throws Exception {\n    String nodeHttpAddress \u003d request.getNodeHttpAddress();\n    String containerId \u003d request.getContainerId();\n    String nodeId \u003d request.getNodeId();\n\n    if (request.isAppFinished()) {\n      if (containerId !\u003d null \u0026\u0026 !containerId.isEmpty()) {\n        if (nodeId \u003d\u003d null || nodeId.isEmpty()) {\n          try {\n            nodeId \u003d\n                getContainerReport(containerId).getAssignedNode().toString();\n            request.setNodeId(nodeId);\n          } catch (Exception ex) {\n            System.err.println(ex);\n            nodeId \u003d null;\n          }\n        }\n        if (nodeId !\u003d null \u0026\u0026 !nodeId.isEmpty()) {\n          printContainerLogsForFinishedApplication(request,\n              logCliHelper);\n        }\n      }\n    } else {\n      if (nodeHttpAddress !\u003d null \u0026\u0026 containerId !\u003d null\n          \u0026\u0026 !nodeHttpAddress.isEmpty() \u0026\u0026 !containerId.isEmpty()) {\n        printContainerLogsFromRunningApplication(conf,\n            request, logCliHelper);\n      }\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/LogsCLI.java",
          "extendedDetails": {
            "oldValue": "[request-ContainerLogsRequest, conf-Configuration, logFiles-String[], logCliHelper-LogCLIHelpers, localDir-String]",
            "newValue": "[request-ContainerLogsRequest, conf-Configuration, logCliHelper-LogCLIHelpers]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-5089. Improve \"yarn log\" command-line \"logFiles\" option to support\nregex. Contributed by Xuan Gong\n",
          "commitDate": "26/05/16 11:49 PM",
          "commitName": "bde819abbbcea940cfa6426a9e4920e6c8dc9cf1",
          "commitAuthor": "Xuan",
          "commitDateOld": "18/05/16 10:14 AM",
          "commitNameOld": "ef1757790d89cc72f88f5330761b1c8901c59e94",
          "commitAuthorOld": "Varun Vasudev",
          "daysBetweenCommits": 8.57,
          "commitsBetweenForRepo": 66,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,42 +1,31 @@\n   private void outputAMContainerLogs(ContainerLogsRequest request,\n-      Configuration conf, String[] logFiles,\n-      LogCLIHelpers logCliHelper, String localDir) throws Exception {\n+      Configuration conf, LogCLIHelpers logCliHelper) throws Exception {\n     String nodeHttpAddress \u003d request.getNodeHttpAddress();\n     String containerId \u003d request.getContainerId();\n     String nodeId \u003d request.getNodeId();\n \n     if (request.isAppFinished()) {\n       if (containerId !\u003d null \u0026\u0026 !containerId.isEmpty()) {\n         if (nodeId \u003d\u003d null || nodeId.isEmpty()) {\n           try {\n             nodeId \u003d\n                 getContainerReport(containerId).getAssignedNode().toString();\n             request.setNodeId(nodeId);\n           } catch (Exception ex) {\n             System.err.println(ex);\n             nodeId \u003d null;\n           }\n         }\n         if (nodeId !\u003d null \u0026\u0026 !nodeId.isEmpty()) {\n-          String[] requestedLogFilesList \u003d null;\n-          if(!fetchAllLogFiles(logFiles)) {\n-            requestedLogFilesList \u003d logFiles;\n-          }\n           printContainerLogsForFinishedApplication(request,\n-              requestedLogFilesList, logCliHelper, localDir);\n+              logCliHelper);\n         }\n       }\n     } else {\n       if (nodeHttpAddress !\u003d null \u0026\u0026 containerId !\u003d null\n           \u0026\u0026 !nodeHttpAddress.isEmpty() \u0026\u0026 !containerId.isEmpty()) {\n-        String[] requestedLogFiles \u003d logFiles;\n-        // fetch all the log files for the AM\n-        if (fetchAllLogFiles(logFiles)) {\n-          requestedLogFiles \u003d\n-              getContainerLogFiles(getConf(), containerId, nodeHttpAddress);\n-        }\n         printContainerLogsFromRunningApplication(conf,\n-            request, requestedLogFiles, logCliHelper, localDir);\n+            request, logCliHelper);\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void outputAMContainerLogs(ContainerLogsRequest request,\n      Configuration conf, LogCLIHelpers logCliHelper) throws Exception {\n    String nodeHttpAddress \u003d request.getNodeHttpAddress();\n    String containerId \u003d request.getContainerId();\n    String nodeId \u003d request.getNodeId();\n\n    if (request.isAppFinished()) {\n      if (containerId !\u003d null \u0026\u0026 !containerId.isEmpty()) {\n        if (nodeId \u003d\u003d null || nodeId.isEmpty()) {\n          try {\n            nodeId \u003d\n                getContainerReport(containerId).getAssignedNode().toString();\n            request.setNodeId(nodeId);\n          } catch (Exception ex) {\n            System.err.println(ex);\n            nodeId \u003d null;\n          }\n        }\n        if (nodeId !\u003d null \u0026\u0026 !nodeId.isEmpty()) {\n          printContainerLogsForFinishedApplication(request,\n              logCliHelper);\n        }\n      }\n    } else {\n      if (nodeHttpAddress !\u003d null \u0026\u0026 containerId !\u003d null\n          \u0026\u0026 !nodeHttpAddress.isEmpty() \u0026\u0026 !containerId.isEmpty()) {\n        printContainerLogsFromRunningApplication(conf,\n            request, logCliHelper);\n      }\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/LogsCLI.java",
          "extendedDetails": {}
        }
      ]
    },
    "ef1757790d89cc72f88f5330761b1c8901c59e94": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-4913. Yarn logs should take a -out option to write to a directory. Contributed by Xuan Gong.\n",
      "commitDate": "18/05/16 10:14 AM",
      "commitName": "ef1757790d89cc72f88f5330761b1c8901c59e94",
      "commitAuthor": "Varun Vasudev",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-4913. Yarn logs should take a -out option to write to a directory. Contributed by Xuan Gong.\n",
          "commitDate": "18/05/16 10:14 AM",
          "commitName": "ef1757790d89cc72f88f5330761b1c8901c59e94",
          "commitAuthor": "Varun Vasudev",
          "commitDateOld": "14/05/16 12:19 PM",
          "commitNameOld": "7be53b65f95dae89c760cde354b42f15f5ee3b5f",
          "commitAuthorOld": "Xuan",
          "daysBetweenCommits": 3.91,
          "commitsBetweenForRepo": 39,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,42 +1,42 @@\n-  private void outputAMContainerLogs(AMLogsRequest request, Configuration conf,\n-      String appId, String[] logFiles, LogCLIHelpers logCliHelper,\n-      String appOwner) throws Exception {\n+  private void outputAMContainerLogs(ContainerLogsRequest request,\n+      Configuration conf, String[] logFiles,\n+      LogCLIHelpers logCliHelper, String localDir) throws Exception {\n     String nodeHttpAddress \u003d request.getNodeHttpAddress();\n-    String containerId \u003d request.getAmContainerId();\n+    String containerId \u003d request.getContainerId();\n     String nodeId \u003d request.getNodeId();\n \n     if (request.isAppFinished()) {\n       if (containerId !\u003d null \u0026\u0026 !containerId.isEmpty()) {\n         if (nodeId \u003d\u003d null || nodeId.isEmpty()) {\n           try {\n             nodeId \u003d\n                 getContainerReport(containerId).getAssignedNode().toString();\n+            request.setNodeId(nodeId);\n           } catch (Exception ex) {\n             System.err.println(ex);\n             nodeId \u003d null;\n           }\n         }\n         if (nodeId !\u003d null \u0026\u0026 !nodeId.isEmpty()) {\n           String[] requestedLogFilesList \u003d null;\n           if(!fetchAllLogFiles(logFiles)) {\n             requestedLogFilesList \u003d logFiles;\n           }\n-          printContainerLogsForFinishedApplication(appId, containerId, nodeId,\n-              requestedLogFilesList, logCliHelper, appOwner);\n+          printContainerLogsForFinishedApplication(request,\n+              requestedLogFilesList, logCliHelper, localDir);\n         }\n       }\n     } else {\n       if (nodeHttpAddress !\u003d null \u0026\u0026 containerId !\u003d null\n           \u0026\u0026 !nodeHttpAddress.isEmpty() \u0026\u0026 !containerId.isEmpty()) {\n         String[] requestedLogFiles \u003d logFiles;\n         // fetch all the log files for the AM\n         if (fetchAllLogFiles(logFiles)) {\n           requestedLogFiles \u003d\n               getContainerLogFiles(getConf(), containerId, nodeHttpAddress);\n         }\n         printContainerLogsFromRunningApplication(conf,\n-            ContainerId.fromString(containerId), nodeHttpAddress, nodeId,\n-            requestedLogFiles, logCliHelper, appOwner);\n+            request, requestedLogFiles, logCliHelper, localDir);\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void outputAMContainerLogs(ContainerLogsRequest request,\n      Configuration conf, String[] logFiles,\n      LogCLIHelpers logCliHelper, String localDir) throws Exception {\n    String nodeHttpAddress \u003d request.getNodeHttpAddress();\n    String containerId \u003d request.getContainerId();\n    String nodeId \u003d request.getNodeId();\n\n    if (request.isAppFinished()) {\n      if (containerId !\u003d null \u0026\u0026 !containerId.isEmpty()) {\n        if (nodeId \u003d\u003d null || nodeId.isEmpty()) {\n          try {\n            nodeId \u003d\n                getContainerReport(containerId).getAssignedNode().toString();\n            request.setNodeId(nodeId);\n          } catch (Exception ex) {\n            System.err.println(ex);\n            nodeId \u003d null;\n          }\n        }\n        if (nodeId !\u003d null \u0026\u0026 !nodeId.isEmpty()) {\n          String[] requestedLogFilesList \u003d null;\n          if(!fetchAllLogFiles(logFiles)) {\n            requestedLogFilesList \u003d logFiles;\n          }\n          printContainerLogsForFinishedApplication(request,\n              requestedLogFilesList, logCliHelper, localDir);\n        }\n      }\n    } else {\n      if (nodeHttpAddress !\u003d null \u0026\u0026 containerId !\u003d null\n          \u0026\u0026 !nodeHttpAddress.isEmpty() \u0026\u0026 !containerId.isEmpty()) {\n        String[] requestedLogFiles \u003d logFiles;\n        // fetch all the log files for the AM\n        if (fetchAllLogFiles(logFiles)) {\n          requestedLogFiles \u003d\n              getContainerLogFiles(getConf(), containerId, nodeHttpAddress);\n        }\n        printContainerLogsFromRunningApplication(conf,\n            request, requestedLogFiles, logCliHelper, localDir);\n      }\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/LogsCLI.java",
          "extendedDetails": {
            "oldValue": "[request-AMLogsRequest, conf-Configuration, appId-String, logFiles-String[], logCliHelper-LogCLIHelpers, appOwner-String]",
            "newValue": "[request-ContainerLogsRequest, conf-Configuration, logFiles-String[], logCliHelper-LogCLIHelpers, localDir-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4913. Yarn logs should take a -out option to write to a directory. Contributed by Xuan Gong.\n",
          "commitDate": "18/05/16 10:14 AM",
          "commitName": "ef1757790d89cc72f88f5330761b1c8901c59e94",
          "commitAuthor": "Varun Vasudev",
          "commitDateOld": "14/05/16 12:19 PM",
          "commitNameOld": "7be53b65f95dae89c760cde354b42f15f5ee3b5f",
          "commitAuthorOld": "Xuan",
          "daysBetweenCommits": 3.91,
          "commitsBetweenForRepo": 39,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,42 +1,42 @@\n-  private void outputAMContainerLogs(AMLogsRequest request, Configuration conf,\n-      String appId, String[] logFiles, LogCLIHelpers logCliHelper,\n-      String appOwner) throws Exception {\n+  private void outputAMContainerLogs(ContainerLogsRequest request,\n+      Configuration conf, String[] logFiles,\n+      LogCLIHelpers logCliHelper, String localDir) throws Exception {\n     String nodeHttpAddress \u003d request.getNodeHttpAddress();\n-    String containerId \u003d request.getAmContainerId();\n+    String containerId \u003d request.getContainerId();\n     String nodeId \u003d request.getNodeId();\n \n     if (request.isAppFinished()) {\n       if (containerId !\u003d null \u0026\u0026 !containerId.isEmpty()) {\n         if (nodeId \u003d\u003d null || nodeId.isEmpty()) {\n           try {\n             nodeId \u003d\n                 getContainerReport(containerId).getAssignedNode().toString();\n+            request.setNodeId(nodeId);\n           } catch (Exception ex) {\n             System.err.println(ex);\n             nodeId \u003d null;\n           }\n         }\n         if (nodeId !\u003d null \u0026\u0026 !nodeId.isEmpty()) {\n           String[] requestedLogFilesList \u003d null;\n           if(!fetchAllLogFiles(logFiles)) {\n             requestedLogFilesList \u003d logFiles;\n           }\n-          printContainerLogsForFinishedApplication(appId, containerId, nodeId,\n-              requestedLogFilesList, logCliHelper, appOwner);\n+          printContainerLogsForFinishedApplication(request,\n+              requestedLogFilesList, logCliHelper, localDir);\n         }\n       }\n     } else {\n       if (nodeHttpAddress !\u003d null \u0026\u0026 containerId !\u003d null\n           \u0026\u0026 !nodeHttpAddress.isEmpty() \u0026\u0026 !containerId.isEmpty()) {\n         String[] requestedLogFiles \u003d logFiles;\n         // fetch all the log files for the AM\n         if (fetchAllLogFiles(logFiles)) {\n           requestedLogFiles \u003d\n               getContainerLogFiles(getConf(), containerId, nodeHttpAddress);\n         }\n         printContainerLogsFromRunningApplication(conf,\n-            ContainerId.fromString(containerId), nodeHttpAddress, nodeId,\n-            requestedLogFiles, logCliHelper, appOwner);\n+            request, requestedLogFiles, logCliHelper, localDir);\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void outputAMContainerLogs(ContainerLogsRequest request,\n      Configuration conf, String[] logFiles,\n      LogCLIHelpers logCliHelper, String localDir) throws Exception {\n    String nodeHttpAddress \u003d request.getNodeHttpAddress();\n    String containerId \u003d request.getContainerId();\n    String nodeId \u003d request.getNodeId();\n\n    if (request.isAppFinished()) {\n      if (containerId !\u003d null \u0026\u0026 !containerId.isEmpty()) {\n        if (nodeId \u003d\u003d null || nodeId.isEmpty()) {\n          try {\n            nodeId \u003d\n                getContainerReport(containerId).getAssignedNode().toString();\n            request.setNodeId(nodeId);\n          } catch (Exception ex) {\n            System.err.println(ex);\n            nodeId \u003d null;\n          }\n        }\n        if (nodeId !\u003d null \u0026\u0026 !nodeId.isEmpty()) {\n          String[] requestedLogFilesList \u003d null;\n          if(!fetchAllLogFiles(logFiles)) {\n            requestedLogFilesList \u003d logFiles;\n          }\n          printContainerLogsForFinishedApplication(request,\n              requestedLogFilesList, logCliHelper, localDir);\n        }\n      }\n    } else {\n      if (nodeHttpAddress !\u003d null \u0026\u0026 containerId !\u003d null\n          \u0026\u0026 !nodeHttpAddress.isEmpty() \u0026\u0026 !containerId.isEmpty()) {\n        String[] requestedLogFiles \u003d logFiles;\n        // fetch all the log files for the AM\n        if (fetchAllLogFiles(logFiles)) {\n          requestedLogFiles \u003d\n              getContainerLogFiles(getConf(), containerId, nodeHttpAddress);\n        }\n        printContainerLogsFromRunningApplication(conf,\n            request, requestedLogFiles, logCliHelper, localDir);\n      }\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/LogsCLI.java",
          "extendedDetails": {}
        }
      ]
    },
    "9e37fe3b7a3b5f0a193d228bb5e065f41acd2835": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4905. Improved \"yarn logs\" command-line to optionally show log metadata also. Contributed by Xuan Gong.\n",
      "commitDate": "04/05/16 2:16 PM",
      "commitName": "9e37fe3b7a3b5f0a193d228bb5e065f41acd2835",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "27/04/16 3:26 AM",
      "commitNameOld": "66b07d83740a2ec3e6bfb2bfd064863bae37a1b5",
      "commitAuthorOld": "Varun Vasudev",
      "daysBetweenCommits": 7.45,
      "commitsBetweenForRepo": 41,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,41 +1,42 @@\n   private void outputAMContainerLogs(AMLogsRequest request, Configuration conf,\n       String appId, String[] logFiles, LogCLIHelpers logCliHelper,\n       String appOwner) throws Exception {\n     String nodeHttpAddress \u003d request.getNodeHttpAddress();\n     String containerId \u003d request.getAmContainerId();\n     String nodeId \u003d request.getNodeId();\n \n     if (request.isAppFinished()) {\n       if (containerId !\u003d null \u0026\u0026 !containerId.isEmpty()) {\n         if (nodeId \u003d\u003d null || nodeId.isEmpty()) {\n           try {\n             nodeId \u003d\n                 getContainerReport(containerId).getAssignedNode().toString();\n           } catch (Exception ex) {\n             System.err.println(ex);\n             nodeId \u003d null;\n           }\n         }\n         if (nodeId !\u003d null \u0026\u0026 !nodeId.isEmpty()) {\n-          String [] requestedLogFilesList \u003d null;\n+          String[] requestedLogFilesList \u003d null;\n           if(!fetchAllLogFiles(logFiles)) {\n             requestedLogFilesList \u003d logFiles;\n           }\n           printContainerLogsForFinishedApplication(appId, containerId, nodeId,\n-            requestedLogFilesList, logCliHelper, appOwner);\n+              requestedLogFilesList, logCliHelper, appOwner);\n         }\n       }\n     } else {\n       if (nodeHttpAddress !\u003d null \u0026\u0026 containerId !\u003d null\n           \u0026\u0026 !nodeHttpAddress.isEmpty() \u0026\u0026 !containerId.isEmpty()) {\n-        String [] requestedLogFiles \u003d logFiles;\n+        String[] requestedLogFiles \u003d logFiles;\n         // fetch all the log files for the AM\n         if (fetchAllLogFiles(logFiles)) {\n           requestedLogFiles \u003d\n               getContainerLogFiles(getConf(), containerId, nodeHttpAddress);\n         }\n-        printContainerLogsFromRunningApplication(conf, appId, containerId,\n-          nodeHttpAddress, nodeId, requestedLogFiles, logCliHelper, appOwner);\n+        printContainerLogsFromRunningApplication(conf,\n+            ContainerId.fromString(containerId), nodeHttpAddress, nodeId,\n+            requestedLogFiles, logCliHelper, appOwner);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void outputAMContainerLogs(AMLogsRequest request, Configuration conf,\n      String appId, String[] logFiles, LogCLIHelpers logCliHelper,\n      String appOwner) throws Exception {\n    String nodeHttpAddress \u003d request.getNodeHttpAddress();\n    String containerId \u003d request.getAmContainerId();\n    String nodeId \u003d request.getNodeId();\n\n    if (request.isAppFinished()) {\n      if (containerId !\u003d null \u0026\u0026 !containerId.isEmpty()) {\n        if (nodeId \u003d\u003d null || nodeId.isEmpty()) {\n          try {\n            nodeId \u003d\n                getContainerReport(containerId).getAssignedNode().toString();\n          } catch (Exception ex) {\n            System.err.println(ex);\n            nodeId \u003d null;\n          }\n        }\n        if (nodeId !\u003d null \u0026\u0026 !nodeId.isEmpty()) {\n          String[] requestedLogFilesList \u003d null;\n          if(!fetchAllLogFiles(logFiles)) {\n            requestedLogFilesList \u003d logFiles;\n          }\n          printContainerLogsForFinishedApplication(appId, containerId, nodeId,\n              requestedLogFilesList, logCliHelper, appOwner);\n        }\n      }\n    } else {\n      if (nodeHttpAddress !\u003d null \u0026\u0026 containerId !\u003d null\n          \u0026\u0026 !nodeHttpAddress.isEmpty() \u0026\u0026 !containerId.isEmpty()) {\n        String[] requestedLogFiles \u003d logFiles;\n        // fetch all the log files for the AM\n        if (fetchAllLogFiles(logFiles)) {\n          requestedLogFiles \u003d\n              getContainerLogFiles(getConf(), containerId, nodeHttpAddress);\n        }\n        printContainerLogsFromRunningApplication(conf,\n            ContainerId.fromString(containerId), nodeHttpAddress, nodeId,\n            requestedLogFiles, logCliHelper, appOwner);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/LogsCLI.java",
      "extendedDetails": {}
    },
    "34ef1a092bcab369bb845481efffb8c47adef53a": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4149. yarn logs -am should provide an option to fetch all the log\nfiles. Contributed by Varun Vasudev\n",
      "commitDate": "15/09/15 2:36 PM",
      "commitName": "34ef1a092bcab369bb845481efffb8c47adef53a",
      "commitAuthor": "Xuan",
      "commitDateOld": "13/04/15 5:29 PM",
      "commitNameOld": "a77d628339afaf2f5a085c73fd81a805b18348c9",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 154.88,
      "commitsBetweenForRepo": 1122,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,41 @@\n   private void outputAMContainerLogs(AMLogsRequest request, Configuration conf,\n       String appId, String[] logFiles, LogCLIHelpers logCliHelper,\n       String appOwner) throws Exception {\n     String nodeHttpAddress \u003d request.getNodeHttpAddress();\n     String containerId \u003d request.getAmContainerId();\n     String nodeId \u003d request.getNodeId();\n \n     if (request.isAppFinished()) {\n       if (containerId !\u003d null \u0026\u0026 !containerId.isEmpty()) {\n         if (nodeId \u003d\u003d null || nodeId.isEmpty()) {\n           try {\n             nodeId \u003d\n                 getContainerReport(containerId).getAssignedNode().toString();\n           } catch (Exception ex) {\n             System.err.println(ex);\n             nodeId \u003d null;\n           }\n         }\n         if (nodeId !\u003d null \u0026\u0026 !nodeId.isEmpty()) {\n+          String [] requestedLogFilesList \u003d null;\n+          if(!fetchAllLogFiles(logFiles)) {\n+            requestedLogFilesList \u003d logFiles;\n+          }\n           printContainerLogsForFinishedApplication(appId, containerId, nodeId,\n-            logFiles, logCliHelper, appOwner);\n+            requestedLogFilesList, logCliHelper, appOwner);\n         }\n       }\n     } else {\n       if (nodeHttpAddress !\u003d null \u0026\u0026 containerId !\u003d null\n           \u0026\u0026 !nodeHttpAddress.isEmpty() \u0026\u0026 !containerId.isEmpty()) {\n+        String [] requestedLogFiles \u003d logFiles;\n+        // fetch all the log files for the AM\n+        if (fetchAllLogFiles(logFiles)) {\n+          requestedLogFiles \u003d\n+              getContainerLogFiles(getConf(), containerId, nodeHttpAddress);\n+        }\n         printContainerLogsFromRunningApplication(conf, appId, containerId,\n-          nodeHttpAddress, nodeId, logFiles, logCliHelper, appOwner);\n+          nodeHttpAddress, nodeId, requestedLogFiles, logCliHelper, appOwner);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void outputAMContainerLogs(AMLogsRequest request, Configuration conf,\n      String appId, String[] logFiles, LogCLIHelpers logCliHelper,\n      String appOwner) throws Exception {\n    String nodeHttpAddress \u003d request.getNodeHttpAddress();\n    String containerId \u003d request.getAmContainerId();\n    String nodeId \u003d request.getNodeId();\n\n    if (request.isAppFinished()) {\n      if (containerId !\u003d null \u0026\u0026 !containerId.isEmpty()) {\n        if (nodeId \u003d\u003d null || nodeId.isEmpty()) {\n          try {\n            nodeId \u003d\n                getContainerReport(containerId).getAssignedNode().toString();\n          } catch (Exception ex) {\n            System.err.println(ex);\n            nodeId \u003d null;\n          }\n        }\n        if (nodeId !\u003d null \u0026\u0026 !nodeId.isEmpty()) {\n          String [] requestedLogFilesList \u003d null;\n          if(!fetchAllLogFiles(logFiles)) {\n            requestedLogFilesList \u003d logFiles;\n          }\n          printContainerLogsForFinishedApplication(appId, containerId, nodeId,\n            requestedLogFilesList, logCliHelper, appOwner);\n        }\n      }\n    } else {\n      if (nodeHttpAddress !\u003d null \u0026\u0026 containerId !\u003d null\n          \u0026\u0026 !nodeHttpAddress.isEmpty() \u0026\u0026 !containerId.isEmpty()) {\n        String [] requestedLogFiles \u003d logFiles;\n        // fetch all the log files for the AM\n        if (fetchAllLogFiles(logFiles)) {\n          requestedLogFiles \u003d\n              getContainerLogFiles(getConf(), containerId, nodeHttpAddress);\n        }\n        printContainerLogsFromRunningApplication(conf, appId, containerId,\n          nodeHttpAddress, nodeId, requestedLogFiles, logCliHelper, appOwner);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/LogsCLI.java",
      "extendedDetails": {}
    },
    "a77d628339afaf2f5a085c73fd81a805b18348c9": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3347. Improve YARN log command to get AMContainer logs as well as running containers logs. Contributed by Xuan Gong.\n",
      "commitDate": "13/04/15 5:29 PM",
      "commitName": "a77d628339afaf2f5a085c73fd81a805b18348c9",
      "commitAuthor": "Junping Du",
      "diff": "@@ -0,0 +1,31 @@\n+  private void outputAMContainerLogs(AMLogsRequest request, Configuration conf,\n+      String appId, String[] logFiles, LogCLIHelpers logCliHelper,\n+      String appOwner) throws Exception {\n+    String nodeHttpAddress \u003d request.getNodeHttpAddress();\n+    String containerId \u003d request.getAmContainerId();\n+    String nodeId \u003d request.getNodeId();\n+\n+    if (request.isAppFinished()) {\n+      if (containerId !\u003d null \u0026\u0026 !containerId.isEmpty()) {\n+        if (nodeId \u003d\u003d null || nodeId.isEmpty()) {\n+          try {\n+            nodeId \u003d\n+                getContainerReport(containerId).getAssignedNode().toString();\n+          } catch (Exception ex) {\n+            System.err.println(ex);\n+            nodeId \u003d null;\n+          }\n+        }\n+        if (nodeId !\u003d null \u0026\u0026 !nodeId.isEmpty()) {\n+          printContainerLogsForFinishedApplication(appId, containerId, nodeId,\n+            logFiles, logCliHelper, appOwner);\n+        }\n+      }\n+    } else {\n+      if (nodeHttpAddress !\u003d null \u0026\u0026 containerId !\u003d null\n+          \u0026\u0026 !nodeHttpAddress.isEmpty() \u0026\u0026 !containerId.isEmpty()) {\n+        printContainerLogsFromRunningApplication(conf, appId, containerId,\n+          nodeHttpAddress, nodeId, logFiles, logCliHelper, appOwner);\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void outputAMContainerLogs(AMLogsRequest request, Configuration conf,\n      String appId, String[] logFiles, LogCLIHelpers logCliHelper,\n      String appOwner) throws Exception {\n    String nodeHttpAddress \u003d request.getNodeHttpAddress();\n    String containerId \u003d request.getAmContainerId();\n    String nodeId \u003d request.getNodeId();\n\n    if (request.isAppFinished()) {\n      if (containerId !\u003d null \u0026\u0026 !containerId.isEmpty()) {\n        if (nodeId \u003d\u003d null || nodeId.isEmpty()) {\n          try {\n            nodeId \u003d\n                getContainerReport(containerId).getAssignedNode().toString();\n          } catch (Exception ex) {\n            System.err.println(ex);\n            nodeId \u003d null;\n          }\n        }\n        if (nodeId !\u003d null \u0026\u0026 !nodeId.isEmpty()) {\n          printContainerLogsForFinishedApplication(appId, containerId, nodeId,\n            logFiles, logCliHelper, appOwner);\n        }\n      }\n    } else {\n      if (nodeHttpAddress !\u003d null \u0026\u0026 containerId !\u003d null\n          \u0026\u0026 !nodeHttpAddress.isEmpty() \u0026\u0026 !containerId.isEmpty()) {\n        printContainerLogsFromRunningApplication(conf, appId, containerId,\n          nodeHttpAddress, nodeId, logFiles, logCliHelper, appOwner);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/LogsCLI.java"
    }
  }
}