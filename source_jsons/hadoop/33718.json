{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RuncContainerRuntime.java",
  "functionName": "initialize",
  "functionId": "initialize___configuration-Configuration__nmCtx-Context",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/runtime/RuncContainerRuntime.java",
  "functionStartLine": 200,
  "functionEndLine": 252,
  "numCommitsSeen": 1,
  "timeTaken": 1417,
  "changeHistory": [
    "0e22e9ab83438af37d821cb2f96e31f9a19ace2c"
  ],
  "changeHistoryShort": {
    "0e22e9ab83438af37d821cb2f96e31f9a19ace2c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0e22e9ab83438af37d821cb2f96e31f9a19ace2c": {
      "type": "Yintroduced",
      "commitMessage": "YARN-9562. Add Java changes for the new RuncContainerRuntime. Contributed by Eric Badger\n",
      "commitDate": "18/11/19 1:56 PM",
      "commitName": "0e22e9ab83438af37d821cb2f96e31f9a19ace2c",
      "commitAuthor": "Eric Badger",
      "diff": "@@ -0,0 +1,53 @@\n+  public void initialize(Configuration configuration, Context nmCtx)\n+      throws ContainerExecutionException {\n+    super.initialize(configuration, nmCtx);\n+    this.conf \u003d configuration;\n+    this.nmContext \u003d nmCtx;\n+    imageTagToManifestPlugin \u003d chooseImageTagToManifestPlugin();\n+    imageTagToManifestPlugin.init(conf);\n+    manifestToResourcesPlugin \u003d chooseManifestToResourcesPlugin();\n+    manifestToResourcesPlugin.init(conf);\n+    mapper \u003d new ObjectMapper();\n+    defaultRuncImage \u003d conf.get(YarnConfiguration.NM_RUNC_IMAGE_NAME);\n+\n+    allowedNetworks.clear();\n+    allowedRuntimes.clear();\n+\n+    allowedNetworks.addAll(Arrays.asList(\n+        conf.getTrimmedStrings(\n+        YarnConfiguration.NM_RUNC_ALLOWED_CONTAINER_NETWORKS,\n+        YarnConfiguration.DEFAULT_NM_RUNC_ALLOWED_CONTAINER_NETWORKS)));\n+\n+    allowedRuntimes.addAll(Arrays.asList(\n+        conf.getTrimmedStrings(\n+        YarnConfiguration.NM_RUNC_ALLOWED_CONTAINER_RUNTIMES,\n+        YarnConfiguration.DEFAULT_NM_RUNC_ALLOWED_CONTAINER_RUNTIMES)));\n+\n+    privilegedContainersAcl \u003d new AccessControlList(conf.getTrimmed(\n+        YarnConfiguration.NM_RUNC_PRIVILEGED_CONTAINERS_ACL,\n+        YarnConfiguration.DEFAULT_NM_RUNC_PRIVILEGED_CONTAINERS_ACL));\n+\n+    seccompProfile \u003d conf.get(YarnConfiguration.NM_RUNC_SECCOMP_PROFILE);\n+\n+    defaultROMounts.addAll(Arrays.asList(\n+        conf.getTrimmedStrings(\n+        YarnConfiguration.NM_RUNC_DEFAULT_RO_MOUNTS)));\n+\n+    defaultRWMounts.addAll(Arrays.asList(\n+        conf.getTrimmedStrings(\n+        YarnConfiguration.NM_RUNC_DEFAULT_RW_MOUNTS)));\n+\n+    try {\n+      //TODO Remove whitespace in seccomp that gets output to config.json\n+      if (seccompProfile !\u003d null) {\n+        seccomp \u003d new String(Files.readAllBytes(Paths.get(seccompProfile)),\n+            StandardCharsets.UTF_8);\n+      }\n+    } catch (IOException ioe) {\n+      throw new ContainerExecutionException(ioe);\n+    }\n+\n+    layersToKeep \u003d conf.getInt(NM_RUNC_LAYER_MOUNTS_TO_KEEP,\n+        DEFAULT_NM_RUNC_LAYER_MOUNTS_TO_KEEP);\n+\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void initialize(Configuration configuration, Context nmCtx)\n      throws ContainerExecutionException {\n    super.initialize(configuration, nmCtx);\n    this.conf \u003d configuration;\n    this.nmContext \u003d nmCtx;\n    imageTagToManifestPlugin \u003d chooseImageTagToManifestPlugin();\n    imageTagToManifestPlugin.init(conf);\n    manifestToResourcesPlugin \u003d chooseManifestToResourcesPlugin();\n    manifestToResourcesPlugin.init(conf);\n    mapper \u003d new ObjectMapper();\n    defaultRuncImage \u003d conf.get(YarnConfiguration.NM_RUNC_IMAGE_NAME);\n\n    allowedNetworks.clear();\n    allowedRuntimes.clear();\n\n    allowedNetworks.addAll(Arrays.asList(\n        conf.getTrimmedStrings(\n        YarnConfiguration.NM_RUNC_ALLOWED_CONTAINER_NETWORKS,\n        YarnConfiguration.DEFAULT_NM_RUNC_ALLOWED_CONTAINER_NETWORKS)));\n\n    allowedRuntimes.addAll(Arrays.asList(\n        conf.getTrimmedStrings(\n        YarnConfiguration.NM_RUNC_ALLOWED_CONTAINER_RUNTIMES,\n        YarnConfiguration.DEFAULT_NM_RUNC_ALLOWED_CONTAINER_RUNTIMES)));\n\n    privilegedContainersAcl \u003d new AccessControlList(conf.getTrimmed(\n        YarnConfiguration.NM_RUNC_PRIVILEGED_CONTAINERS_ACL,\n        YarnConfiguration.DEFAULT_NM_RUNC_PRIVILEGED_CONTAINERS_ACL));\n\n    seccompProfile \u003d conf.get(YarnConfiguration.NM_RUNC_SECCOMP_PROFILE);\n\n    defaultROMounts.addAll(Arrays.asList(\n        conf.getTrimmedStrings(\n        YarnConfiguration.NM_RUNC_DEFAULT_RO_MOUNTS)));\n\n    defaultRWMounts.addAll(Arrays.asList(\n        conf.getTrimmedStrings(\n        YarnConfiguration.NM_RUNC_DEFAULT_RW_MOUNTS)));\n\n    try {\n      //TODO Remove whitespace in seccomp that gets output to config.json\n      if (seccompProfile !\u003d null) {\n        seccomp \u003d new String(Files.readAllBytes(Paths.get(seccompProfile)),\n            StandardCharsets.UTF_8);\n      }\n    } catch (IOException ioe) {\n      throw new ContainerExecutionException(ioe);\n    }\n\n    layersToKeep \u003d conf.getInt(NM_RUNC_LAYER_MOUNTS_TO_KEEP,\n        DEFAULT_NM_RUNC_LAYER_MOUNTS_TO_KEEP);\n\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/runtime/RuncContainerRuntime.java"
    }
  }
}