{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Balancer.java",
  "functionName": "chooseStorageGroups",
  "functionId": "chooseStorageGroups___matcher-Matcher(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java",
  "functionStartLine": 485,
  "functionEndLine": 507,
  "numCommitsSeen": 171,
  "timeTaken": 7260,
  "changeHistory": [
    "b56daff6a186599764b046248565918b894ec116",
    "b8597e6a10b2e8df1bee4e8ce0c8be345f7e007d",
    "1f4b135b1f9c6aff1dab4fe749126ec814f8387b",
    "1634e980af422c0af2f7c9c7280a77f2fbddc9c0",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "b56daff6a186599764b046248565918b894ec116": "Ybodychange",
    "b8597e6a10b2e8df1bee4e8ce0c8be345f7e007d": "Ymultichange(Yrename,Ybodychange)",
    "1f4b135b1f9c6aff1dab4fe749126ec814f8387b": "Ymultichange(Yparameterchange,Ybodychange)",
    "1634e980af422c0af2f7c9c7280a77f2fbddc9c0": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b56daff6a186599764b046248565918b894ec116": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8818. Changes the global moveExecutor to per datanode executors and changes MAX_SIZE_TO_MOVE to be configurable.\n",
      "commitDate": "10/08/15 4:52 PM",
      "commitName": "b56daff6a186599764b046248565918b894ec116",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "commitDateOld": "10/06/15 1:42 PM",
      "commitNameOld": "a7a7768341f1b7d3a8f2686e2f4d00c57f2e1d4f",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 61.13,
      "commitsBetweenForRepo": 359,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,23 @@\n   private void chooseStorageGroups(final Matcher matcher) {\n     /* first step: match each overUtilized datanode (source) to\n      * one or more underUtilized datanodes (targets).\n      */\n+    LOG.info(\"chooseStorageGroups for \" + matcher + \": overUtilized \u003d\u003e underUtilized\");\n     chooseStorageGroups(overUtilized, underUtilized, matcher);\n     \n     /* match each remaining overutilized datanode (source) to \n      * below average utilized datanodes (targets).\n      * Note only overutilized datanodes that haven\u0027t had that max bytes to move\n      * satisfied in step 1 are selected\n      */\n+    LOG.info(\"chooseStorageGroups for \" + matcher + \": overUtilized \u003d\u003e belowAvgUtilized\");\n     chooseStorageGroups(overUtilized, belowAvgUtilized, matcher);\n \n     /* match each remaining underutilized datanode (target) to \n      * above average utilized datanodes (source).\n      * Note only underutilized datanodes that have not had that max bytes to\n      * move satisfied in step 1 are selected.\n      */\n+    LOG.info(\"chooseStorageGroups for \" + matcher + \": underUtilized \u003d\u003e aboveAvgUtilized\");\n     chooseStorageGroups(underUtilized, aboveAvgUtilized, matcher);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void chooseStorageGroups(final Matcher matcher) {\n    /* first step: match each overUtilized datanode (source) to\n     * one or more underUtilized datanodes (targets).\n     */\n    LOG.info(\"chooseStorageGroups for \" + matcher + \": overUtilized \u003d\u003e underUtilized\");\n    chooseStorageGroups(overUtilized, underUtilized, matcher);\n    \n    /* match each remaining overutilized datanode (source) to \n     * below average utilized datanodes (targets).\n     * Note only overutilized datanodes that haven\u0027t had that max bytes to move\n     * satisfied in step 1 are selected\n     */\n    LOG.info(\"chooseStorageGroups for \" + matcher + \": overUtilized \u003d\u003e belowAvgUtilized\");\n    chooseStorageGroups(overUtilized, belowAvgUtilized, matcher);\n\n    /* match each remaining underutilized datanode (target) to \n     * above average utilized datanodes (source).\n     * Note only underutilized datanodes that have not had that max bytes to\n     * move satisfied in step 1 are selected.\n     */\n    LOG.info(\"chooseStorageGroups for \" + matcher + \": underUtilized \u003d\u003e aboveAvgUtilized\");\n    chooseStorageGroups(underUtilized, aboveAvgUtilized, matcher);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java",
      "extendedDetails": {}
    },
    "b8597e6a10b2e8df1bee4e8ce0c8be345f7e007d": {
      "type": "Ymultichange(Yrename,Ybodychange)",
      "commitMessage": "HDFS-6685. Balancer should preserve storage type of replicas.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1615015 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/07/14 6:05 PM",
      "commitName": "b8597e6a10b2e8df1bee4e8ce0c8be345f7e007d",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "HDFS-6685. Balancer should preserve storage type of replicas.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1615015 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "31/07/14 6:05 PM",
          "commitName": "b8597e6a10b2e8df1bee4e8ce0c8be345f7e007d",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "30/07/14 11:02 PM",
          "commitNameOld": "b8b8f3f5e7214d6fcfc30e1b94ff097e52868f4f",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 0.79,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,20 @@\n-  private void chooseNodes(final Matcher matcher) {\n+  private void chooseStorageGroups(final Matcher matcher) {\n     /* first step: match each overUtilized datanode (source) to\n      * one or more underUtilized datanodes (targets).\n      */\n-    chooseDatanodes(overUtilizedDatanodes, underUtilizedDatanodes, matcher);\n+    chooseStorageGroups(overUtilized, underUtilized, matcher);\n     \n     /* match each remaining overutilized datanode (source) to \n      * below average utilized datanodes (targets).\n      * Note only overutilized datanodes that haven\u0027t had that max bytes to move\n      * satisfied in step 1 are selected\n      */\n-    chooseDatanodes(overUtilizedDatanodes, belowAvgUtilizedDatanodes, matcher);\n+    chooseStorageGroups(overUtilized, belowAvgUtilized, matcher);\n \n     /* match each remaining underutilized datanode (target) to \n      * above average utilized datanodes (source).\n      * Note only underutilized datanodes that have not had that max bytes to\n      * move satisfied in step 1 are selected.\n      */\n-    chooseDatanodes(underUtilizedDatanodes, aboveAvgUtilizedDatanodes, matcher);\n+    chooseStorageGroups(underUtilized, aboveAvgUtilized, matcher);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void chooseStorageGroups(final Matcher matcher) {\n    /* first step: match each overUtilized datanode (source) to\n     * one or more underUtilized datanodes (targets).\n     */\n    chooseStorageGroups(overUtilized, underUtilized, matcher);\n    \n    /* match each remaining overutilized datanode (source) to \n     * below average utilized datanodes (targets).\n     * Note only overutilized datanodes that haven\u0027t had that max bytes to move\n     * satisfied in step 1 are selected\n     */\n    chooseStorageGroups(overUtilized, belowAvgUtilized, matcher);\n\n    /* match each remaining underutilized datanode (target) to \n     * above average utilized datanodes (source).\n     * Note only underutilized datanodes that have not had that max bytes to\n     * move satisfied in step 1 are selected.\n     */\n    chooseStorageGroups(underUtilized, aboveAvgUtilized, matcher);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java",
          "extendedDetails": {
            "oldValue": "chooseNodes",
            "newValue": "chooseStorageGroups"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-6685. Balancer should preserve storage type of replicas.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1615015 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "31/07/14 6:05 PM",
          "commitName": "b8597e6a10b2e8df1bee4e8ce0c8be345f7e007d",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "30/07/14 11:02 PM",
          "commitNameOld": "b8b8f3f5e7214d6fcfc30e1b94ff097e52868f4f",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 0.79,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,20 @@\n-  private void chooseNodes(final Matcher matcher) {\n+  private void chooseStorageGroups(final Matcher matcher) {\n     /* first step: match each overUtilized datanode (source) to\n      * one or more underUtilized datanodes (targets).\n      */\n-    chooseDatanodes(overUtilizedDatanodes, underUtilizedDatanodes, matcher);\n+    chooseStorageGroups(overUtilized, underUtilized, matcher);\n     \n     /* match each remaining overutilized datanode (source) to \n      * below average utilized datanodes (targets).\n      * Note only overutilized datanodes that haven\u0027t had that max bytes to move\n      * satisfied in step 1 are selected\n      */\n-    chooseDatanodes(overUtilizedDatanodes, belowAvgUtilizedDatanodes, matcher);\n+    chooseStorageGroups(overUtilized, belowAvgUtilized, matcher);\n \n     /* match each remaining underutilized datanode (target) to \n      * above average utilized datanodes (source).\n      * Note only underutilized datanodes that have not had that max bytes to\n      * move satisfied in step 1 are selected.\n      */\n-    chooseDatanodes(underUtilizedDatanodes, aboveAvgUtilizedDatanodes, matcher);\n+    chooseStorageGroups(underUtilized, aboveAvgUtilized, matcher);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void chooseStorageGroups(final Matcher matcher) {\n    /* first step: match each overUtilized datanode (source) to\n     * one or more underUtilized datanodes (targets).\n     */\n    chooseStorageGroups(overUtilized, underUtilized, matcher);\n    \n    /* match each remaining overutilized datanode (source) to \n     * below average utilized datanodes (targets).\n     * Note only overutilized datanodes that haven\u0027t had that max bytes to move\n     * satisfied in step 1 are selected\n     */\n    chooseStorageGroups(overUtilized, belowAvgUtilized, matcher);\n\n    /* match each remaining underutilized datanode (target) to \n     * above average utilized datanodes (source).\n     * Note only underutilized datanodes that have not had that max bytes to\n     * move satisfied in step 1 are selected.\n     */\n    chooseStorageGroups(underUtilized, aboveAvgUtilized, matcher);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java",
          "extendedDetails": {}
        }
      ]
    },
    "1f4b135b1f9c6aff1dab4fe749126ec814f8387b": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-4234. Use generic code for choosing datanode in Balancer.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1417130 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/12/12 11:22 AM",
      "commitName": "1f4b135b1f9c6aff1dab4fe749126ec814f8387b",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-4234. Use generic code for choosing datanode in Balancer.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1417130 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "04/12/12 11:22 AM",
          "commitName": "1f4b135b1f9c6aff1dab4fe749126ec814f8387b",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "28/11/12 11:19 AM",
          "commitNameOld": "1634e980af422c0af2f7c9c7280a77f2fbddc9c0",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 6.0,
          "commitsBetweenForRepo": 19,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,20 @@\n-  private void chooseNodes(boolean onRack) {\n+  private void chooseNodes(final Matcher matcher) {\n     /* first step: match each overUtilized datanode (source) to\n      * one or more underUtilized datanodes (targets).\n      */\n-    chooseTargets(underUtilizedDatanodes, onRack);\n+    chooseDatanodes(overUtilizedDatanodes, underUtilizedDatanodes, matcher);\n     \n     /* match each remaining overutilized datanode (source) to \n      * below average utilized datanodes (targets).\n      * Note only overutilized datanodes that haven\u0027t had that max bytes to move\n      * satisfied in step 1 are selected\n      */\n-    chooseTargets(belowAvgUtilizedDatanodes, onRack);\n+    chooseDatanodes(overUtilizedDatanodes, belowAvgUtilizedDatanodes, matcher);\n \n     /* match each remaining underutilized datanode (target) to \n      * above average utilized datanodes (source).\n      * Note only underutilized datanodes that have not had that max bytes to\n      * move satisfied in step 1 are selected.\n      */\n-    chooseSources(aboveAvgUtilizedDatanodes, onRack);\n+    chooseDatanodes(underUtilizedDatanodes, aboveAvgUtilizedDatanodes, matcher);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void chooseNodes(final Matcher matcher) {\n    /* first step: match each overUtilized datanode (source) to\n     * one or more underUtilized datanodes (targets).\n     */\n    chooseDatanodes(overUtilizedDatanodes, underUtilizedDatanodes, matcher);\n    \n    /* match each remaining overutilized datanode (source) to \n     * below average utilized datanodes (targets).\n     * Note only overutilized datanodes that haven\u0027t had that max bytes to move\n     * satisfied in step 1 are selected\n     */\n    chooseDatanodes(overUtilizedDatanodes, belowAvgUtilizedDatanodes, matcher);\n\n    /* match each remaining underutilized datanode (target) to \n     * above average utilized datanodes (source).\n     * Note only underutilized datanodes that have not had that max bytes to\n     * move satisfied in step 1 are selected.\n     */\n    chooseDatanodes(underUtilizedDatanodes, aboveAvgUtilizedDatanodes, matcher);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java",
          "extendedDetails": {
            "oldValue": "[onRack-boolean]",
            "newValue": "[matcher-Matcher(modifiers-final)]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-4234. Use generic code for choosing datanode in Balancer.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1417130 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "04/12/12 11:22 AM",
          "commitName": "1f4b135b1f9c6aff1dab4fe749126ec814f8387b",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "28/11/12 11:19 AM",
          "commitNameOld": "1634e980af422c0af2f7c9c7280a77f2fbddc9c0",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 6.0,
          "commitsBetweenForRepo": 19,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,20 @@\n-  private void chooseNodes(boolean onRack) {\n+  private void chooseNodes(final Matcher matcher) {\n     /* first step: match each overUtilized datanode (source) to\n      * one or more underUtilized datanodes (targets).\n      */\n-    chooseTargets(underUtilizedDatanodes, onRack);\n+    chooseDatanodes(overUtilizedDatanodes, underUtilizedDatanodes, matcher);\n     \n     /* match each remaining overutilized datanode (source) to \n      * below average utilized datanodes (targets).\n      * Note only overutilized datanodes that haven\u0027t had that max bytes to move\n      * satisfied in step 1 are selected\n      */\n-    chooseTargets(belowAvgUtilizedDatanodes, onRack);\n+    chooseDatanodes(overUtilizedDatanodes, belowAvgUtilizedDatanodes, matcher);\n \n     /* match each remaining underutilized datanode (target) to \n      * above average utilized datanodes (source).\n      * Note only underutilized datanodes that have not had that max bytes to\n      * move satisfied in step 1 are selected.\n      */\n-    chooseSources(aboveAvgUtilizedDatanodes, onRack);\n+    chooseDatanodes(underUtilizedDatanodes, aboveAvgUtilizedDatanodes, matcher);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void chooseNodes(final Matcher matcher) {\n    /* first step: match each overUtilized datanode (source) to\n     * one or more underUtilized datanodes (targets).\n     */\n    chooseDatanodes(overUtilizedDatanodes, underUtilizedDatanodes, matcher);\n    \n    /* match each remaining overutilized datanode (source) to \n     * below average utilized datanodes (targets).\n     * Note only overutilized datanodes that haven\u0027t had that max bytes to move\n     * satisfied in step 1 are selected\n     */\n    chooseDatanodes(overUtilizedDatanodes, belowAvgUtilizedDatanodes, matcher);\n\n    /* match each remaining underutilized datanode (target) to \n     * above average utilized datanodes (source).\n     * Note only underutilized datanodes that have not had that max bytes to\n     * move satisfied in step 1 are selected.\n     */\n    chooseDatanodes(underUtilizedDatanodes, aboveAvgUtilizedDatanodes, matcher);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java",
          "extendedDetails": {}
        }
      ]
    },
    "1634e980af422c0af2f7c9c7280a77f2fbddc9c0": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3495. Update Balancer to support new NetworkTopology with NodeGroup.  Contributed by Junping Du\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1414874 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/11/12 11:19 AM",
      "commitName": "1634e980af422c0af2f7c9c7280a77f2fbddc9c0",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "14/08/12 5:28 PM",
      "commitNameOld": "28e87740c5797e87a9038d7f151c8b21a5b04592",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 105.79,
      "commitsBetweenForRepo": 628,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   private void chooseNodes(boolean onRack) {\n     /* first step: match each overUtilized datanode (source) to\n      * one or more underUtilized datanodes (targets).\n      */\n-    chooseTargets(underUtilizedDatanodes.iterator(), onRack);\n+    chooseTargets(underUtilizedDatanodes, onRack);\n     \n     /* match each remaining overutilized datanode (source) to \n      * below average utilized datanodes (targets).\n      * Note only overutilized datanodes that haven\u0027t had that max bytes to move\n      * satisfied in step 1 are selected\n      */\n-    chooseTargets(belowAvgUtilizedDatanodes.iterator(), onRack);\n+    chooseTargets(belowAvgUtilizedDatanodes, onRack);\n \n-    /* match each remaining underutilized datanode to \n-     * above average utilized datanodes.\n+    /* match each remaining underutilized datanode (target) to \n+     * above average utilized datanodes (source).\n      * Note only underutilized datanodes that have not had that max bytes to\n      * move satisfied in step 1 are selected.\n      */\n-    chooseSources(aboveAvgUtilizedDatanodes.iterator(), onRack);\n+    chooseSources(aboveAvgUtilizedDatanodes, onRack);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void chooseNodes(boolean onRack) {\n    /* first step: match each overUtilized datanode (source) to\n     * one or more underUtilized datanodes (targets).\n     */\n    chooseTargets(underUtilizedDatanodes, onRack);\n    \n    /* match each remaining overutilized datanode (source) to \n     * below average utilized datanodes (targets).\n     * Note only overutilized datanodes that haven\u0027t had that max bytes to move\n     * satisfied in step 1 are selected\n     */\n    chooseTargets(belowAvgUtilizedDatanodes, onRack);\n\n    /* match each remaining underutilized datanode (target) to \n     * above average utilized datanodes (source).\n     * Note only underutilized datanodes that have not had that max bytes to\n     * move satisfied in step 1 are selected.\n     */\n    chooseSources(aboveAvgUtilizedDatanodes, onRack);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void chooseNodes(boolean onRack) {\n    /* first step: match each overUtilized datanode (source) to\n     * one or more underUtilized datanodes (targets).\n     */\n    chooseTargets(underUtilizedDatanodes.iterator(), onRack);\n    \n    /* match each remaining overutilized datanode (source) to \n     * below average utilized datanodes (targets).\n     * Note only overutilized datanodes that haven\u0027t had that max bytes to move\n     * satisfied in step 1 are selected\n     */\n    chooseTargets(belowAvgUtilizedDatanodes.iterator(), onRack);\n\n    /* match each remaining underutilized datanode to \n     * above average utilized datanodes.\n     * Note only underutilized datanodes that have not had that max bytes to\n     * move satisfied in step 1 are selected.\n     */\n    chooseSources(aboveAvgUtilizedDatanodes.iterator(), onRack);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void chooseNodes(boolean onRack) {\n    /* first step: match each overUtilized datanode (source) to\n     * one or more underUtilized datanodes (targets).\n     */\n    chooseTargets(underUtilizedDatanodes.iterator(), onRack);\n    \n    /* match each remaining overutilized datanode (source) to \n     * below average utilized datanodes (targets).\n     * Note only overutilized datanodes that haven\u0027t had that max bytes to move\n     * satisfied in step 1 are selected\n     */\n    chooseTargets(belowAvgUtilizedDatanodes.iterator(), onRack);\n\n    /* match each remaining underutilized datanode to \n     * above average utilized datanodes.\n     * Note only underutilized datanodes that have not had that max bytes to\n     * move satisfied in step 1 are selected.\n     */\n    chooseSources(aboveAvgUtilizedDatanodes.iterator(), onRack);\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,20 @@\n+  private void chooseNodes(boolean onRack) {\n+    /* first step: match each overUtilized datanode (source) to\n+     * one or more underUtilized datanodes (targets).\n+     */\n+    chooseTargets(underUtilizedDatanodes.iterator(), onRack);\n+    \n+    /* match each remaining overutilized datanode (source) to \n+     * below average utilized datanodes (targets).\n+     * Note only overutilized datanodes that haven\u0027t had that max bytes to move\n+     * satisfied in step 1 are selected\n+     */\n+    chooseTargets(belowAvgUtilizedDatanodes.iterator(), onRack);\n+\n+    /* match each remaining underutilized datanode to \n+     * above average utilized datanodes.\n+     * Note only underutilized datanodes that have not had that max bytes to\n+     * move satisfied in step 1 are selected.\n+     */\n+    chooseSources(aboveAvgUtilizedDatanodes.iterator(), onRack);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void chooseNodes(boolean onRack) {\n    /* first step: match each overUtilized datanode (source) to\n     * one or more underUtilized datanodes (targets).\n     */\n    chooseTargets(underUtilizedDatanodes.iterator(), onRack);\n    \n    /* match each remaining overutilized datanode (source) to \n     * below average utilized datanodes (targets).\n     * Note only overutilized datanodes that haven\u0027t had that max bytes to move\n     * satisfied in step 1 are selected\n     */\n    chooseTargets(belowAvgUtilizedDatanodes.iterator(), onRack);\n\n    /* match each remaining underutilized datanode to \n     * above average utilized datanodes.\n     * Note only underutilized datanodes that have not had that max bytes to\n     * move satisfied in step 1 are selected.\n     */\n    chooseSources(aboveAvgUtilizedDatanodes.iterator(), onRack);\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java"
    }
  }
}