{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSAppAttempt.java",
  "functionName": "getResourceUsage",
  "functionId": "getResourceUsage",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSAppAttempt.java",
  "functionStartLine": 1317,
  "functionEndLine": 1319,
  "numCommitsSeen": 76,
  "timeTaken": 3907,
  "changeHistory": [
    "82c5dd1d508292ed88eda0f5356776437ba67d4c",
    "9e2699ac2c99d8df85191dd7fbf9468b00f5b5aa",
    "a77f432449aad67da31bd8bf8644b71def741bde",
    "10468529a9b858bd945e7ecb063c9c1438efa474",
    "7de70680fe44967e2afc92ba4c92f8e7afa7b151",
    "486e718fc1f5befd231494e2ec06bb360484f191"
  ],
  "changeHistoryShort": {
    "82c5dd1d508292ed88eda0f5356776437ba67d4c": "Ybodychange",
    "9e2699ac2c99d8df85191dd7fbf9468b00f5b5aa": "Ybodychange",
    "a77f432449aad67da31bd8bf8644b71def741bde": "Ybodychange",
    "10468529a9b858bd945e7ecb063c9c1438efa474": "Ybodychange",
    "7de70680fe44967e2afc92ba4c92f8e7afa7b151": "Ybodychange",
    "486e718fc1f5befd231494e2ec06bb360484f191": "Yintroduced"
  },
  "changeHistoryDetails": {
    "82c5dd1d508292ed88eda0f5356776437ba67d4c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7057. FSAppAttempt#getResourceUsage doesn\u0027t need to consider resources queued for preemption. (Contributed by Karthik via Yufei Gu)\n",
      "commitDate": "12/09/17 4:13 PM",
      "commitName": "82c5dd1d508292ed88eda0f5356776437ba67d4c",
      "commitAuthor": "Yufei Gu",
      "commitDateOld": "24/08/17 5:52 PM",
      "commitNameOld": "9e2699ac2c99d8df85191dd7fbf9468b00f5b5aa",
      "commitAuthorOld": "Yufei Gu",
      "daysBetweenCommits": 18.93,
      "commitsBetweenForRepo": 227,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,3 @@\n   public Resource getResourceUsage() {\n-    // Subtract copies the object, so that we have a snapshot,\n-    // in case usage changes, while the caller is using the value\n-    synchronized (preemptionVariablesLock) {\n-      return containersToBePreempted.isEmpty()\n-          ? getCurrentConsumption()\n-          : Resources.subtract(getCurrentConsumption(), resourcesToBePreempted);\n-    }\n+    return getCurrentConsumption();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Resource getResourceUsage() {\n    return getCurrentConsumption();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSAppAttempt.java",
      "extendedDetails": {}
    },
    "9e2699ac2c99d8df85191dd7fbf9468b00f5b5aa": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7049. FSAppAttempt preemption related fields have confusing names. (Contributed by Karthik Kambatla via Yufei Gu)\n",
      "commitDate": "24/08/17 5:52 PM",
      "commitName": "9e2699ac2c99d8df85191dd7fbf9468b00f5b5aa",
      "commitAuthor": "Yufei Gu",
      "commitDateOld": "02/08/17 9:25 AM",
      "commitNameOld": "45535f8afae4e5bf4f60597fc29ba94b4e7743f3",
      "commitAuthorOld": "Yufei Gu",
      "daysBetweenCommits": 22.35,
      "commitsBetweenForRepo": 137,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n   public Resource getResourceUsage() {\n     // Subtract copies the object, so that we have a snapshot,\n     // in case usage changes, while the caller is using the value\n     synchronized (preemptionVariablesLock) {\n-      return containersToPreempt.isEmpty()\n+      return containersToBePreempted.isEmpty()\n           ? getCurrentConsumption()\n-          : Resources.subtract(getCurrentConsumption(), preemptedResources);\n+          : Resources.subtract(getCurrentConsumption(), resourcesToBePreempted);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Resource getResourceUsage() {\n    // Subtract copies the object, so that we have a snapshot,\n    // in case usage changes, while the caller is using the value\n    synchronized (preemptionVariablesLock) {\n      return containersToBePreempted.isEmpty()\n          ? getCurrentConsumption()\n          : Resources.subtract(getCurrentConsumption(), resourcesToBePreempted);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSAppAttempt.java",
      "extendedDetails": {}
    },
    "a77f432449aad67da31bd8bf8644b71def741bde": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6171. ConcurrentModificationException on FSAppAttempt.containersToPreempt. (Miklos Szegedi via kasha)\n",
      "commitDate": "16/02/17 2:54 PM",
      "commitName": "a77f432449aad67da31bd8bf8644b71def741bde",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "15/02/17 11:16 PM",
      "commitNameOld": "6c25dbcdc0517a825b92fb16444aa1d3761e160c",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 0.65,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n   public Resource getResourceUsage() {\n-    /*\n-     * getResourcesToPreempt() returns zero, except when there are containers\n-     * to preempt. Avoid creating an object in the common case.\n-     */\n-    return getPreemptedResources().equals(Resources.none())\n-        ? getCurrentConsumption()\n-        : Resources.subtract(getCurrentConsumption(), getPreemptedResources());\n+    // Subtract copies the object, so that we have a snapshot,\n+    // in case usage changes, while the caller is using the value\n+    synchronized (preemptionVariablesLock) {\n+      return containersToPreempt.isEmpty()\n+          ? getCurrentConsumption()\n+          : Resources.subtract(getCurrentConsumption(), preemptedResources);\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Resource getResourceUsage() {\n    // Subtract copies the object, so that we have a snapshot,\n    // in case usage changes, while the caller is using the value\n    synchronized (preemptionVariablesLock) {\n      return containersToPreempt.isEmpty()\n          ? getCurrentConsumption()\n          : Resources.subtract(getCurrentConsumption(), preemptedResources);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSAppAttempt.java",
      "extendedDetails": {}
    },
    "10468529a9b858bd945e7ecb063c9c1438efa474": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4752. Improved preemption in FairScheduler. (kasha)\n\nContains:\nYARN-5605. Preempt containers (all on one node) to meet the requirement of starved applications\nYARN-5821. Drop left-over preemption-related code and clean up method visibilities in the Schedulable hierarchy\nYARN-5783. Verify identification of starved applications.\nYARN-5819. Verify fairshare and minshare preemption\nYARN-5885. Cleanup YARN-4752 branch for merge\n\nChange-Id: Iee0962377d019dd64dc69a020725d2eaf360858c\n",
      "commitDate": "23/11/16 9:48 PM",
      "commitName": "10468529a9b858bd945e7ecb063c9c1438efa474",
      "commitAuthor": "Daniel Templeton",
      "commitDateOld": "09/11/16 1:11 PM",
      "commitNameOld": "59ee8b7a88603e94b5661a8d5d088f7aa99fe049",
      "commitAuthorOld": "Daniel Templeton",
      "daysBetweenCommits": 14.36,
      "commitsBetweenForRepo": 89,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,9 @@\n   public Resource getResourceUsage() {\n-    // Here the getPreemptedResources() always return zero, except in\n-    // a preemption round\n-    // In the common case where preempted resource is zero, return the\n-    // current consumption Resource object directly without calling\n-    // Resources.subtract which creates a new Resource object for each call.\n-    return getPreemptedResources().equals(Resources.none()) ?\n-        getCurrentConsumption() :\n-        Resources.subtract(getCurrentConsumption(), getPreemptedResources());\n+    /*\n+     * getResourcesToPreempt() returns zero, except when there are containers\n+     * to preempt. Avoid creating an object in the common case.\n+     */\n+    return getPreemptedResources().equals(Resources.none())\n+        ? getCurrentConsumption()\n+        : Resources.subtract(getCurrentConsumption(), getPreemptedResources());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Resource getResourceUsage() {\n    /*\n     * getResourcesToPreempt() returns zero, except when there are containers\n     * to preempt. Avoid creating an object in the common case.\n     */\n    return getPreemptedResources().equals(Resources.none())\n        ? getCurrentConsumption()\n        : Resources.subtract(getCurrentConsumption(), getPreemptedResources());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSAppAttempt.java",
      "extendedDetails": {}
    },
    "7de70680fe44967e2afc92ba4c92f8e7afa7b151": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4690. Skip object allocation in FSAppAttempt#getResourceUsage when possible (Ming Ma via sjlee)\n",
      "commitDate": "17/02/16 8:55 PM",
      "commitName": "7de70680fe44967e2afc92ba4c92f8e7afa7b151",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "14/01/16 8:33 AM",
      "commitNameOld": "9d04f26d4c42170ee3dab2f6fb09a94bbf72fc65",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 34.52,
      "commitsBetweenForRepo": 245,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,5 +1,10 @@\n   public Resource getResourceUsage() {\n     // Here the getPreemptedResources() always return zero, except in\n     // a preemption round\n-    return Resources.subtract(getCurrentConsumption(), getPreemptedResources());\n+    // In the common case where preempted resource is zero, return the\n+    // current consumption Resource object directly without calling\n+    // Resources.subtract which creates a new Resource object for each call.\n+    return getPreemptedResources().equals(Resources.none()) ?\n+        getCurrentConsumption() :\n+        Resources.subtract(getCurrentConsumption(), getPreemptedResources());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Resource getResourceUsage() {\n    // Here the getPreemptedResources() always return zero, except in\n    // a preemption round\n    // In the common case where preempted resource is zero, return the\n    // current consumption Resource object directly without calling\n    // Resources.subtract which creates a new Resource object for each call.\n    return getPreemptedResources().equals(Resources.none()) ?\n        getCurrentConsumption() :\n        Resources.subtract(getCurrentConsumption(), getPreemptedResources());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSAppAttempt.java",
      "extendedDetails": {}
    },
    "486e718fc1f5befd231494e2ec06bb360484f191": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2399. FairScheduler: Merge AppSchedulable and FSSchedulerApp into FSAppAttempt. (kasha)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1617600 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/08/14 2:43 PM",
      "commitName": "486e718fc1f5befd231494e2ec06bb360484f191",
      "commitAuthor": "Karthik Kambatla",
      "diff": "@@ -0,0 +1,5 @@\n+  public Resource getResourceUsage() {\n+    // Here the getPreemptedResources() always return zero, except in\n+    // a preemption round\n+    return Resources.subtract(getCurrentConsumption(), getPreemptedResources());\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Resource getResourceUsage() {\n    // Here the getPreemptedResources() always return zero, except in\n    // a preemption round\n    return Resources.subtract(getCurrentConsumption(), getPreemptedResources());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSAppAttempt.java"
    }
  }
}