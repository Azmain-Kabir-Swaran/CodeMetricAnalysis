{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AbfsPerfTracker.java",
  "functionName": "recordClientLatency",
  "functionId": "recordClientLatency___operationStart-Instant__operationStop-Instant__callerName-String__calleeName-String__success-boolean__aggregateStart-Instant__aggregateCount-long__res-AbfsPerfLoggable",
  "sourceFilePath": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/services/AbfsPerfTracker.java",
  "functionStartLine": 260,
  "functionEndLine": 287,
  "numCommitsSeen": 1,
  "timeTaken": 635,
  "changeHistory": [
    "b033c681e4fc3ee1a38caa807e130aee481d99d5"
  ],
  "changeHistoryShort": {
    "b033c681e4fc3ee1a38caa807e130aee481d99d5": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b033c681e4fc3ee1a38caa807e130aee481d99d5": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-16612. Track Azure Blob File System client-perceived latency\n\nContributed by Jeetesh Mangwani.\n\nThis add the ability to track the end-to-end performance of ADLS Gen 2 REST APIs by measuring latency in the Hadoop ABFS driver.\nThe latency information is sent back to the ADLS Gen 2 REST API endpoints in the subsequent requests.\n",
      "commitDate": "19/11/19 9:00 AM",
      "commitName": "b033c681e4fc3ee1a38caa807e130aee481d99d5",
      "commitAuthor": "Jeetesh Mangwani",
      "diff": "@@ -0,0 +1,28 @@\n+  private void recordClientLatency(\n+          Instant operationStart,\n+          Instant operationStop,\n+          String callerName,\n+          String calleeName,\n+          boolean success,\n+          Instant aggregateStart,\n+          long aggregateCount,\n+          AbfsPerfLoggable res){\n+\n+    Instant trackerStart \u003d Instant.now();\n+    long latency \u003d isValidInstant(operationStart) \u0026\u0026 isValidInstant(operationStop)\n+            ? Duration.between(operationStart, operationStop).toMillis() : -1;\n+    long aggregateLatency \u003d isValidInstant(aggregateStart) \u0026\u0026 isValidInstant(operationStop)\n+            ? Duration.between(aggregateStart, operationStop).toMillis() : -1;\n+\n+    String latencyDetails \u003d String.format(aggregateLatencyReportingFormat,\n+            Instant.now(),\n+            callerName,\n+            calleeName,\n+            success ? \"Succeeded\" : \"Failed\",\n+            latency,\n+            aggregateLatency,\n+            aggregateCount,\n+            res \u003d\u003d null ? \"\" : (\" \" + res.getLogString()));\n+\n+    offerToQueue(trackerStart, latencyDetails);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void recordClientLatency(\n          Instant operationStart,\n          Instant operationStop,\n          String callerName,\n          String calleeName,\n          boolean success,\n          Instant aggregateStart,\n          long aggregateCount,\n          AbfsPerfLoggable res){\n\n    Instant trackerStart \u003d Instant.now();\n    long latency \u003d isValidInstant(operationStart) \u0026\u0026 isValidInstant(operationStop)\n            ? Duration.between(operationStart, operationStop).toMillis() : -1;\n    long aggregateLatency \u003d isValidInstant(aggregateStart) \u0026\u0026 isValidInstant(operationStop)\n            ? Duration.between(aggregateStart, operationStop).toMillis() : -1;\n\n    String latencyDetails \u003d String.format(aggregateLatencyReportingFormat,\n            Instant.now(),\n            callerName,\n            calleeName,\n            success ? \"Succeeded\" : \"Failed\",\n            latency,\n            aggregateLatency,\n            aggregateCount,\n            res \u003d\u003d null ? \"\" : (\" \" + res.getLogString()));\n\n    offerToQueue(trackerStart, latencyDetails);\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/services/AbfsPerfTracker.java"
    }
  }
}