{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BlockListAsLongs.java",
  "functionName": "add",
  "functionId": "add___replica-Replica",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/BlockListAsLongs.java",
  "functionStartLine": 275,
  "functionEndLine": 293,
  "numCommitsSeen": 16,
  "timeTaken": 2194,
  "changeHistory": [
    "1654497f98fb7f2de8214d2fbad305b7a2854816",
    "d324164a51a43d72c02567248bd9f0f12b244a40"
  ],
  "changeHistoryShort": {
    "1654497f98fb7f2de8214d2fbad305b7a2854816": "Ybodychange",
    "d324164a51a43d72c02567248bd9f0f12b244a40": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1654497f98fb7f2de8214d2fbad305b7a2854816": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16557. [pb-upgrade] Upgrade protobuf.version to 3.7.1 (#1432)\n\nHADOOP-16557. [pb-upgrade] Upgrade protobuf.version to 3.7.1. Contributed by Vinayakumar B.",
      "commitDate": "20/09/19 3:38 AM",
      "commitName": "1654497f98fb7f2de8214d2fbad305b7a2854816",
      "commitAuthor": "Vinayakumar B",
      "commitDateOld": "30/10/18 10:43 PM",
      "commitNameOld": "fac9f91b2944cee641049fffcafa6b65e0cf68f2",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 324.2,
      "commitsBetweenForRepo": 2425,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n     public void add(Replica replica) {\n       try {\n         // zig-zag to reduce size of legacy blocks\n         cos.writeSInt64NoTag(replica.getBlockId());\n-        cos.writeRawVarint64(replica.getBytesOnDisk());\n-        cos.writeRawVarint64(replica.getGenerationStamp());\n+        cos.writeUInt64NoTag(replica.getBytesOnDisk());\n+        cos.writeUInt64NoTag(replica.getGenerationStamp());\n         ReplicaState state \u003d replica.getState();\n         // although state is not a 64-bit value, using a long varint to\n         // allow for future use of the upper bits\n-        cos.writeRawVarint64(state.getValue());\n+        cos.writeUInt64NoTag(state.getValue());\n         if (state \u003d\u003d ReplicaState.FINALIZED) {\n           numFinalized++;\n         }\n         numBlocks++;\n       } catch (IOException ioe) {\n         // shouldn\u0027t happen, ByteString.Output doesn\u0027t throw IOE\n         throw new IllegalStateException(ioe);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void add(Replica replica) {\n      try {\n        // zig-zag to reduce size of legacy blocks\n        cos.writeSInt64NoTag(replica.getBlockId());\n        cos.writeUInt64NoTag(replica.getBytesOnDisk());\n        cos.writeUInt64NoTag(replica.getGenerationStamp());\n        ReplicaState state \u003d replica.getState();\n        // although state is not a 64-bit value, using a long varint to\n        // allow for future use of the upper bits\n        cos.writeUInt64NoTag(state.getValue());\n        if (state \u003d\u003d ReplicaState.FINALIZED) {\n          numFinalized++;\n        }\n        numBlocks++;\n      } catch (IOException ioe) {\n        // shouldn\u0027t happen, ByteString.Output doesn\u0027t throw IOE\n        throw new IllegalStateException(ioe);\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/BlockListAsLongs.java",
      "extendedDetails": {}
    },
    "d324164a51a43d72c02567248bd9f0f12b244a40": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-7435. PB encoding of block reports is very inefficient. Contributed by Daryn Sharp.\n",
      "commitDate": "13/03/15 12:23 PM",
      "commitName": "d324164a51a43d72c02567248bd9f0f12b244a40",
      "commitAuthor": "Kihwal Lee",
      "diff": "@@ -0,0 +1,19 @@\n+    public void add(Replica replica) {\n+      try {\n+        // zig-zag to reduce size of legacy blocks\n+        cos.writeSInt64NoTag(replica.getBlockId());\n+        cos.writeRawVarint64(replica.getBytesOnDisk());\n+        cos.writeRawVarint64(replica.getGenerationStamp());\n+        ReplicaState state \u003d replica.getState();\n+        // although state is not a 64-bit value, using a long varint to\n+        // allow for future use of the upper bits\n+        cos.writeRawVarint64(state.getValue());\n+        if (state \u003d\u003d ReplicaState.FINALIZED) {\n+          numFinalized++;\n+        }\n+        numBlocks++;\n+      } catch (IOException ioe) {\n+        // shouldn\u0027t happen, ByteString.Output doesn\u0027t throw IOE\n+        throw new IllegalStateException(ioe);\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void add(Replica replica) {\n      try {\n        // zig-zag to reduce size of legacy blocks\n        cos.writeSInt64NoTag(replica.getBlockId());\n        cos.writeRawVarint64(replica.getBytesOnDisk());\n        cos.writeRawVarint64(replica.getGenerationStamp());\n        ReplicaState state \u003d replica.getState();\n        // although state is not a 64-bit value, using a long varint to\n        // allow for future use of the upper bits\n        cos.writeRawVarint64(state.getValue());\n        if (state \u003d\u003d ReplicaState.FINALIZED) {\n          numFinalized++;\n        }\n        numBlocks++;\n      } catch (IOException ioe) {\n        // shouldn\u0027t happen, ByteString.Output doesn\u0027t throw IOE\n        throw new IllegalStateException(ioe);\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/BlockListAsLongs.java"
    }
  }
}