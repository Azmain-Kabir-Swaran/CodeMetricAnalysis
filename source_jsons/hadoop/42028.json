{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ZKRMStateStore.java",
  "functionName": "removeApp",
  "functionId": "removeApp___removeAppId-String__safeRemove-boolean__attempts-Set__ApplicationAttemptId__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
  "functionStartLine": 998,
  "functionEndLine": 1033,
  "numCommitsSeen": 77,
  "timeTaken": 3602,
  "changeHistory": [
    "2064ca015d1584263aac0cc20c60b925a3aff612",
    "b1de78619f3e5e25d6f9d5eaf41925f22d212fb9",
    "4249172e1419acdb2b69ae3db43dc59da2aa2e03",
    "bbbf0e2a4136b30cad9dfd36ef138650a1adea60",
    "2e52789edf68016e7a3f450164f8bd3d8e6cb210"
  ],
  "changeHistoryShort": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": "Ybodychange",
    "b1de78619f3e5e25d6f9d5eaf41925f22d212fb9": "Ybodychange",
    "4249172e1419acdb2b69ae3db43dc59da2aa2e03": "Ybodychange",
    "bbbf0e2a4136b30cad9dfd36ef138650a1adea60": "Ybodychange",
    "2e52789edf68016e7a3f450164f8bd3d8e6cb210": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9349.  Changed logging to use slf4j api.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "15/03/19 4:20 PM",
      "commitName": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "04/03/19 9:10 PM",
      "commitNameOld": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
      "commitAuthorOld": "Prabhu Joseph",
      "daysBetweenCommits": 10.76,
      "commitsBetweenForRepo": 108,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,36 @@\n   private void removeApp(String removeAppId, boolean safeRemove,\n       Set\u003cApplicationAttemptId\u003e attempts) throws Exception {\n     String appIdRemovePath \u003d getLeafAppIdNodePath(removeAppId, false);\n     int splitIndex \u003d appIdNodeSplitIndex;\n     // Look for paths based on other split indices if path as per configured\n     // split index does not exist.\n     if (!exists(appIdRemovePath)) {\n       ZnodeSplitInfo alternatePathInfo \u003d getAlternateAppPath(removeAppId);\n       if (alternatePathInfo !\u003d null) {\n         appIdRemovePath \u003d alternatePathInfo.path;\n         splitIndex \u003d alternatePathInfo.splitIndex;\n       } else {\n         // Alternate path not found so return.\n         return;\n       }\n     }\n     if (safeRemove) {\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Removing info for app: \" + removeAppId + \" at: \" +\n-            appIdRemovePath + \" and its attempts.\");\n-      }\n+      LOG.debug(\"Removing info for app: {} at: {} and its attempts.\",\n+          removeAppId, appIdRemovePath);\n+\n       if (attempts !\u003d null) {\n         for (ApplicationAttemptId attemptId : attempts) {\n           String attemptRemovePath \u003d\n               getNodePath(appIdRemovePath, attemptId.toString());\n           zkManager.safeDelete(attemptRemovePath, zkAcl, fencingNodePath);\n         }\n       }\n       zkManager.safeDelete(appIdRemovePath, zkAcl, fencingNodePath);\n     } else {\n       CuratorFramework curatorFramework \u003d zkManager.getCurator();\n       curatorFramework.delete().deletingChildrenIfNeeded().\n           forPath(appIdRemovePath);\n     }\n     // Check if we should remove the parent app node as well.\n     checkRemoveParentZnode(appIdRemovePath, splitIndex);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void removeApp(String removeAppId, boolean safeRemove,\n      Set\u003cApplicationAttemptId\u003e attempts) throws Exception {\n    String appIdRemovePath \u003d getLeafAppIdNodePath(removeAppId, false);\n    int splitIndex \u003d appIdNodeSplitIndex;\n    // Look for paths based on other split indices if path as per configured\n    // split index does not exist.\n    if (!exists(appIdRemovePath)) {\n      ZnodeSplitInfo alternatePathInfo \u003d getAlternateAppPath(removeAppId);\n      if (alternatePathInfo !\u003d null) {\n        appIdRemovePath \u003d alternatePathInfo.path;\n        splitIndex \u003d alternatePathInfo.splitIndex;\n      } else {\n        // Alternate path not found so return.\n        return;\n      }\n    }\n    if (safeRemove) {\n      LOG.debug(\"Removing info for app: {} at: {} and its attempts.\",\n          removeAppId, appIdRemovePath);\n\n      if (attempts !\u003d null) {\n        for (ApplicationAttemptId attemptId : attempts) {\n          String attemptRemovePath \u003d\n              getNodePath(appIdRemovePath, attemptId.toString());\n          zkManager.safeDelete(attemptRemovePath, zkAcl, fencingNodePath);\n        }\n      }\n      zkManager.safeDelete(appIdRemovePath, zkAcl, fencingNodePath);\n    } else {\n      CuratorFramework curatorFramework \u003d zkManager.getCurator();\n      curatorFramework.delete().deletingChildrenIfNeeded().\n          forPath(appIdRemovePath);\n    }\n    // Check if we should remove the parent app node as well.\n    checkRemoveParentZnode(appIdRemovePath, splitIndex);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "b1de78619f3e5e25d6f9d5eaf41925f22d212fb9": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7262. Add a hierarchy into the ZKRMStateStore for delegation token znodes to prevent jute buffer overflow (rkanter)\n",
      "commitDate": "26/10/17 5:47 PM",
      "commitName": "b1de78619f3e5e25d6f9d5eaf41925f22d212fb9",
      "commitAuthor": "Robert Kanter",
      "commitDateOld": "09/10/17 11:11 AM",
      "commitNameOld": "ff39c0de206a4fce1f0e8a416357a7a8261f8634",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 17.28,
      "commitsBetweenForRepo": 109,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,37 @@\n   private void removeApp(String removeAppId, boolean safeRemove,\n       Set\u003cApplicationAttemptId\u003e attempts) throws Exception {\n     String appIdRemovePath \u003d getLeafAppIdNodePath(removeAppId, false);\n     int splitIndex \u003d appIdNodeSplitIndex;\n     // Look for paths based on other split indices if path as per configured\n     // split index does not exist.\n     if (!exists(appIdRemovePath)) {\n-      AppNodeSplitInfo alternatePathInfo \u003d getAlternatePath(removeAppId);\n+      ZnodeSplitInfo alternatePathInfo \u003d getAlternateAppPath(removeAppId);\n       if (alternatePathInfo !\u003d null) {\n         appIdRemovePath \u003d alternatePathInfo.path;\n         splitIndex \u003d alternatePathInfo.splitIndex;\n       } else {\n         // Alternate path not found so return.\n         return;\n       }\n     }\n     if (safeRemove) {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Removing info for app: \" + removeAppId + \" at: \" +\n             appIdRemovePath + \" and its attempts.\");\n       }\n       if (attempts !\u003d null) {\n         for (ApplicationAttemptId attemptId : attempts) {\n           String attemptRemovePath \u003d\n               getNodePath(appIdRemovePath, attemptId.toString());\n           zkManager.safeDelete(attemptRemovePath, zkAcl, fencingNodePath);\n         }\n       }\n       zkManager.safeDelete(appIdRemovePath, zkAcl, fencingNodePath);\n     } else {\n       CuratorFramework curatorFramework \u003d zkManager.getCurator();\n       curatorFramework.delete().deletingChildrenIfNeeded().\n           forPath(appIdRemovePath);\n     }\n     // Check if we should remove the parent app node as well.\n-    checkRemoveParentAppNode(appIdRemovePath, splitIndex);\n+    checkRemoveParentZnode(appIdRemovePath, splitIndex);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void removeApp(String removeAppId, boolean safeRemove,\n      Set\u003cApplicationAttemptId\u003e attempts) throws Exception {\n    String appIdRemovePath \u003d getLeafAppIdNodePath(removeAppId, false);\n    int splitIndex \u003d appIdNodeSplitIndex;\n    // Look for paths based on other split indices if path as per configured\n    // split index does not exist.\n    if (!exists(appIdRemovePath)) {\n      ZnodeSplitInfo alternatePathInfo \u003d getAlternateAppPath(removeAppId);\n      if (alternatePathInfo !\u003d null) {\n        appIdRemovePath \u003d alternatePathInfo.path;\n        splitIndex \u003d alternatePathInfo.splitIndex;\n      } else {\n        // Alternate path not found so return.\n        return;\n      }\n    }\n    if (safeRemove) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Removing info for app: \" + removeAppId + \" at: \" +\n            appIdRemovePath + \" and its attempts.\");\n      }\n      if (attempts !\u003d null) {\n        for (ApplicationAttemptId attemptId : attempts) {\n          String attemptRemovePath \u003d\n              getNodePath(appIdRemovePath, attemptId.toString());\n          zkManager.safeDelete(attemptRemovePath, zkAcl, fencingNodePath);\n        }\n      }\n      zkManager.safeDelete(appIdRemovePath, zkAcl, fencingNodePath);\n    } else {\n      CuratorFramework curatorFramework \u003d zkManager.getCurator();\n      curatorFramework.delete().deletingChildrenIfNeeded().\n          forPath(appIdRemovePath);\n    }\n    // Check if we should remove the parent app node as well.\n    checkRemoveParentZnode(appIdRemovePath, splitIndex);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "4249172e1419acdb2b69ae3db43dc59da2aa2e03": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7053. Move curator transaction support to ZKCuratorManager. (Jonathan Hung via Subru).\n",
      "commitDate": "22/08/17 7:20 PM",
      "commitName": "4249172e1419acdb2b69ae3db43dc59da2aa2e03",
      "commitAuthor": "Subru Krishnan",
      "commitDateOld": "15/08/17 4:53 PM",
      "commitNameOld": "75dd866bfb8b63cb9f13179d4365b05c48e0907d",
      "commitAuthorOld": "Subru Krishnan",
      "daysBetweenCommits": 7.1,
      "commitsBetweenForRepo": 34,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,37 @@\n   private void removeApp(String removeAppId, boolean safeRemove,\n       Set\u003cApplicationAttemptId\u003e attempts) throws Exception {\n     String appIdRemovePath \u003d getLeafAppIdNodePath(removeAppId, false);\n     int splitIndex \u003d appIdNodeSplitIndex;\n     // Look for paths based on other split indices if path as per configured\n     // split index does not exist.\n     if (!exists(appIdRemovePath)) {\n       AppNodeSplitInfo alternatePathInfo \u003d getAlternatePath(removeAppId);\n       if (alternatePathInfo !\u003d null) {\n         appIdRemovePath \u003d alternatePathInfo.path;\n         splitIndex \u003d alternatePathInfo.splitIndex;\n       } else {\n         // Alternate path not found so return.\n         return;\n       }\n     }\n     if (safeRemove) {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Removing info for app: \" + removeAppId + \" at: \" +\n             appIdRemovePath + \" and its attempts.\");\n       }\n       if (attempts !\u003d null) {\n         for (ApplicationAttemptId attemptId : attempts) {\n           String attemptRemovePath \u003d\n               getNodePath(appIdRemovePath, attemptId.toString());\n-          safeDelete(attemptRemovePath);\n+          zkManager.safeDelete(attemptRemovePath, zkAcl, fencingNodePath);\n         }\n       }\n-      safeDelete(appIdRemovePath);\n+      zkManager.safeDelete(appIdRemovePath, zkAcl, fencingNodePath);\n     } else {\n       CuratorFramework curatorFramework \u003d zkManager.getCurator();\n       curatorFramework.delete().deletingChildrenIfNeeded().\n           forPath(appIdRemovePath);\n     }\n     // Check if we should remove the parent app node as well.\n     checkRemoveParentAppNode(appIdRemovePath, splitIndex);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void removeApp(String removeAppId, boolean safeRemove,\n      Set\u003cApplicationAttemptId\u003e attempts) throws Exception {\n    String appIdRemovePath \u003d getLeafAppIdNodePath(removeAppId, false);\n    int splitIndex \u003d appIdNodeSplitIndex;\n    // Look for paths based on other split indices if path as per configured\n    // split index does not exist.\n    if (!exists(appIdRemovePath)) {\n      AppNodeSplitInfo alternatePathInfo \u003d getAlternatePath(removeAppId);\n      if (alternatePathInfo !\u003d null) {\n        appIdRemovePath \u003d alternatePathInfo.path;\n        splitIndex \u003d alternatePathInfo.splitIndex;\n      } else {\n        // Alternate path not found so return.\n        return;\n      }\n    }\n    if (safeRemove) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Removing info for app: \" + removeAppId + \" at: \" +\n            appIdRemovePath + \" and its attempts.\");\n      }\n      if (attempts !\u003d null) {\n        for (ApplicationAttemptId attemptId : attempts) {\n          String attemptRemovePath \u003d\n              getNodePath(appIdRemovePath, attemptId.toString());\n          zkManager.safeDelete(attemptRemovePath, zkAcl, fencingNodePath);\n        }\n      }\n      zkManager.safeDelete(appIdRemovePath, zkAcl, fencingNodePath);\n    } else {\n      CuratorFramework curatorFramework \u003d zkManager.getCurator();\n      curatorFramework.delete().deletingChildrenIfNeeded().\n          forPath(appIdRemovePath);\n    }\n    // Check if we should remove the parent app node as well.\n    checkRemoveParentAppNode(appIdRemovePath, splitIndex);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "bbbf0e2a4136b30cad9dfd36ef138650a1adea60": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14741. Refactor curator based ZooKeeper communication into common library. (Íñigo Goiri via Subru).\n",
      "commitDate": "11/08/17 1:58 PM",
      "commitName": "bbbf0e2a4136b30cad9dfd36ef138650a1adea60",
      "commitAuthor": "Subru Krishnan",
      "commitDateOld": "01/08/17 5:28 PM",
      "commitNameOld": "2797507d51566ab3b8328e5fb1d0beb9fbce5bae",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 9.85,
      "commitsBetweenForRepo": 107,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,37 @@\n   private void removeApp(String removeAppId, boolean safeRemove,\n       Set\u003cApplicationAttemptId\u003e attempts) throws Exception {\n     String appIdRemovePath \u003d getLeafAppIdNodePath(removeAppId, false);\n     int splitIndex \u003d appIdNodeSplitIndex;\n     // Look for paths based on other split indices if path as per configured\n     // split index does not exist.\n     if (!exists(appIdRemovePath)) {\n       AppNodeSplitInfo alternatePathInfo \u003d getAlternatePath(removeAppId);\n       if (alternatePathInfo !\u003d null) {\n         appIdRemovePath \u003d alternatePathInfo.path;\n         splitIndex \u003d alternatePathInfo.splitIndex;\n       } else {\n         // Alternate path not found so return.\n         return;\n       }\n     }\n     if (safeRemove) {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Removing info for app: \" + removeAppId + \" at: \" +\n             appIdRemovePath + \" and its attempts.\");\n       }\n       if (attempts !\u003d null) {\n         for (ApplicationAttemptId attemptId : attempts) {\n           String attemptRemovePath \u003d\n               getNodePath(appIdRemovePath, attemptId.toString());\n           safeDelete(attemptRemovePath);\n         }\n       }\n       safeDelete(appIdRemovePath);\n     } else {\n+      CuratorFramework curatorFramework \u003d zkManager.getCurator();\n       curatorFramework.delete().deletingChildrenIfNeeded().\n           forPath(appIdRemovePath);\n     }\n     // Check if we should remove the parent app node as well.\n     checkRemoveParentAppNode(appIdRemovePath, splitIndex);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void removeApp(String removeAppId, boolean safeRemove,\n      Set\u003cApplicationAttemptId\u003e attempts) throws Exception {\n    String appIdRemovePath \u003d getLeafAppIdNodePath(removeAppId, false);\n    int splitIndex \u003d appIdNodeSplitIndex;\n    // Look for paths based on other split indices if path as per configured\n    // split index does not exist.\n    if (!exists(appIdRemovePath)) {\n      AppNodeSplitInfo alternatePathInfo \u003d getAlternatePath(removeAppId);\n      if (alternatePathInfo !\u003d null) {\n        appIdRemovePath \u003d alternatePathInfo.path;\n        splitIndex \u003d alternatePathInfo.splitIndex;\n      } else {\n        // Alternate path not found so return.\n        return;\n      }\n    }\n    if (safeRemove) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Removing info for app: \" + removeAppId + \" at: \" +\n            appIdRemovePath + \" and its attempts.\");\n      }\n      if (attempts !\u003d null) {\n        for (ApplicationAttemptId attemptId : attempts) {\n          String attemptRemovePath \u003d\n              getNodePath(appIdRemovePath, attemptId.toString());\n          safeDelete(attemptRemovePath);\n        }\n      }\n      safeDelete(appIdRemovePath);\n    } else {\n      CuratorFramework curatorFramework \u003d zkManager.getCurator();\n      curatorFramework.delete().deletingChildrenIfNeeded().\n          forPath(appIdRemovePath);\n    }\n    // Check if we should remove the parent app node as well.\n    checkRemoveParentAppNode(appIdRemovePath, splitIndex);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "2e52789edf68016e7a3f450164f8bd3d8e6cb210": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2962. ZKRMStateStore: Limit the number of znodes under a znode (Contributed by Varun Sexena via Daniel Templeton)\n",
      "commitDate": "28/04/17 1:30 PM",
      "commitName": "2e52789edf68016e7a3f450164f8bd3d8e6cb210",
      "commitAuthor": "Daniel Templeton",
      "diff": "@@ -0,0 +1,36 @@\n+  private void removeApp(String removeAppId, boolean safeRemove,\n+      Set\u003cApplicationAttemptId\u003e attempts) throws Exception {\n+    String appIdRemovePath \u003d getLeafAppIdNodePath(removeAppId, false);\n+    int splitIndex \u003d appIdNodeSplitIndex;\n+    // Look for paths based on other split indices if path as per configured\n+    // split index does not exist.\n+    if (!exists(appIdRemovePath)) {\n+      AppNodeSplitInfo alternatePathInfo \u003d getAlternatePath(removeAppId);\n+      if (alternatePathInfo !\u003d null) {\n+        appIdRemovePath \u003d alternatePathInfo.path;\n+        splitIndex \u003d alternatePathInfo.splitIndex;\n+      } else {\n+        // Alternate path not found so return.\n+        return;\n+      }\n+    }\n+    if (safeRemove) {\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"Removing info for app: \" + removeAppId + \" at: \" +\n+            appIdRemovePath + \" and its attempts.\");\n+      }\n+      if (attempts !\u003d null) {\n+        for (ApplicationAttemptId attemptId : attempts) {\n+          String attemptRemovePath \u003d\n+              getNodePath(appIdRemovePath, attemptId.toString());\n+          safeDelete(attemptRemovePath);\n+        }\n+      }\n+      safeDelete(appIdRemovePath);\n+    } else {\n+      curatorFramework.delete().deletingChildrenIfNeeded().\n+          forPath(appIdRemovePath);\n+    }\n+    // Check if we should remove the parent app node as well.\n+    checkRemoveParentAppNode(appIdRemovePath, splitIndex);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void removeApp(String removeAppId, boolean safeRemove,\n      Set\u003cApplicationAttemptId\u003e attempts) throws Exception {\n    String appIdRemovePath \u003d getLeafAppIdNodePath(removeAppId, false);\n    int splitIndex \u003d appIdNodeSplitIndex;\n    // Look for paths based on other split indices if path as per configured\n    // split index does not exist.\n    if (!exists(appIdRemovePath)) {\n      AppNodeSplitInfo alternatePathInfo \u003d getAlternatePath(removeAppId);\n      if (alternatePathInfo !\u003d null) {\n        appIdRemovePath \u003d alternatePathInfo.path;\n        splitIndex \u003d alternatePathInfo.splitIndex;\n      } else {\n        // Alternate path not found so return.\n        return;\n      }\n    }\n    if (safeRemove) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Removing info for app: \" + removeAppId + \" at: \" +\n            appIdRemovePath + \" and its attempts.\");\n      }\n      if (attempts !\u003d null) {\n        for (ApplicationAttemptId attemptId : attempts) {\n          String attemptRemovePath \u003d\n              getNodePath(appIdRemovePath, attemptId.toString());\n          safeDelete(attemptRemovePath);\n        }\n      }\n      safeDelete(appIdRemovePath);\n    } else {\n      curatorFramework.delete().deletingChildrenIfNeeded().\n          forPath(appIdRemovePath);\n    }\n    // Check if we should remove the parent app node as well.\n    checkRemoveParentAppNode(appIdRemovePath, splitIndex);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java"
    }
  }
}