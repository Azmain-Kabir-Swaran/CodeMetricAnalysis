{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TimelineConnector.java",
  "functionName": "getHttpURLConnection",
  "functionId": "getHttpURLConnection___url-URL(modifiers-final)",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/api/impl/TimelineConnector.java",
  "functionStartLine": 266,
  "functionEndLine": 277,
  "numCommitsSeen": 50,
  "timeTaken": 2808,
  "changeHistory": [
    "4fa1afdb883dab8786d2fb5c72a195dd2e87d711",
    "d6e05c5ee26feefc17267b7c9db1e2a3dbdef117",
    "d1abc5d4fc00bb1b226066684556ba16ace71744",
    "39063cd36f96e351e4a6bf0bc2b6185711d4b059"
  ],
  "changeHistoryShort": {
    "4fa1afdb883dab8786d2fb5c72a195dd2e87d711": "Ymovefromfile",
    "d6e05c5ee26feefc17267b7c9db1e2a3dbdef117": "Ybodychange",
    "d1abc5d4fc00bb1b226066684556ba16ace71744": "Ybodychange",
    "39063cd36f96e351e4a6bf0bc2b6185711d4b059": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4fa1afdb883dab8786d2fb5c72a195dd2e87d711": {
      "type": "Ymovefromfile",
      "commitMessage": "YARN-4675. Reorganize TimelineClient and TimelineClientImpl into separate classes for ATSv1.x and ATSv2. Contributed by Naganarasimha G R.\n",
      "commitDate": "16/02/17 11:41 AM",
      "commitName": "4fa1afdb883dab8786d2fb5c72a195dd2e87d711",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "16/02/17 5:39 AM",
      "commitNameOld": "5690b51ef7c708c0a71162ddaff04466bc71cdcc",
      "commitAuthorOld": "Wei-Chiu Chuang",
      "daysBetweenCommits": 0.25,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n-    public HttpURLConnection getHttpURLConnection(final URL url) throws IOException {\n+    public HttpURLConnection getHttpURLConnection(final URL url)\n+        throws IOException {\n       authUgi.checkTGTAndReloginFromKeytab();\n       try {\n-        return new DelegationTokenAuthenticatedURL(\n-            authenticator, connConfigurator).openConnection(url, token,\n-              doAsUser);\n+        return new DelegationTokenAuthenticatedURL(authenticator,\n+            connConfigurator).openConnection(url, token, doAsUser);\n       } catch (UndeclaredThrowableException e) {\n         throw new IOException(e.getCause());\n       } catch (AuthenticationException ae) {\n         throw new IOException(ae);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public HttpURLConnection getHttpURLConnection(final URL url)\n        throws IOException {\n      authUgi.checkTGTAndReloginFromKeytab();\n      try {\n        return new DelegationTokenAuthenticatedURL(authenticator,\n            connConfigurator).openConnection(url, token, doAsUser);\n      } catch (UndeclaredThrowableException e) {\n        throw new IOException(e.getCause());\n      } catch (AuthenticationException ae) {\n        throw new IOException(ae);\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/api/impl/TimelineConnector.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/api/impl/TimelineClientImpl.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/api/impl/TimelineConnector.java",
        "oldMethodName": "getHttpURLConnection",
        "newMethodName": "getHttpURLConnection"
      }
    },
    "d6e05c5ee26feefc17267b7c9db1e2a3dbdef117": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3287. Made TimelineClient put methods do as the correct login context. Contributed by Daryn Sharp and Jonathan Eagles.\n",
      "commitDate": "09/03/15 1:54 PM",
      "commitName": "d6e05c5ee26feefc17267b7c9db1e2a3dbdef117",
      "commitAuthor": "Zhijie Shen",
      "commitDateOld": "06/03/15 1:32 PM",
      "commitNameOld": "d1abc5d4fc00bb1b226066684556ba16ace71744",
      "commitAuthorOld": "Xuan",
      "daysBetweenCommits": 2.97,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,12 @@\n     public HttpURLConnection getHttpURLConnection(final URL url) throws IOException {\n-      boolean isProxyAccess \u003d\n-          UserGroupInformation.getCurrentUser().getAuthenticationMethod()\n-          \u003d\u003d UserGroupInformation.AuthenticationMethod.PROXY;\n-      UserGroupInformation callerUGI \u003d isProxyAccess ?\n-          UserGroupInformation.getCurrentUser().getRealUser()\n-          : UserGroupInformation.getCurrentUser();\n-      final String doAsUser \u003d isProxyAccess ?\n-          UserGroupInformation.getCurrentUser().getShortUserName() : null;\n-      callerUGI.checkTGTAndReloginFromKeytab();\n+      authUgi.checkTGTAndReloginFromKeytab();\n       try {\n-        return callerUGI.doAs(new PrivilegedExceptionAction\u003cHttpURLConnection\u003e() {\n-          @Override\n-          public HttpURLConnection run() throws Exception {\n-            return new DelegationTokenAuthenticatedURL(\n-                authenticator, connConfigurator).openConnection(url, token,\n-                doAsUser);\n-          }\n-        });\n+        return new DelegationTokenAuthenticatedURL(\n+            authenticator, connConfigurator).openConnection(url, token,\n+              doAsUser);\n       } catch (UndeclaredThrowableException e) {\n         throw new IOException(e.getCause());\n-      } catch (InterruptedException e) {\n-        throw new IOException(e);\n+      } catch (AuthenticationException ae) {\n+        throw new IOException(ae);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public HttpURLConnection getHttpURLConnection(final URL url) throws IOException {\n      authUgi.checkTGTAndReloginFromKeytab();\n      try {\n        return new DelegationTokenAuthenticatedURL(\n            authenticator, connConfigurator).openConnection(url, token,\n              doAsUser);\n      } catch (UndeclaredThrowableException e) {\n        throw new IOException(e.getCause());\n      } catch (AuthenticationException ae) {\n        throw new IOException(ae);\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/api/impl/TimelineClientImpl.java",
      "extendedDetails": {}
    },
    "d1abc5d4fc00bb1b226066684556ba16ace71744": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3227. Timeline renew delegation token fails when RM user\u0027s TGT is\nexpired. Contributed by Zhijie Shen\n",
      "commitDate": "06/03/15 1:32 PM",
      "commitName": "d1abc5d4fc00bb1b226066684556ba16ace71744",
      "commitAuthor": "Xuan",
      "commitDateOld": "09/02/15 5:20 PM",
      "commitNameOld": "00a748d24a565bce0cc8cfa2bdcf165778cea395",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 24.84,
      "commitsBetweenForRepo": 250,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,25 @@\n     public HttpURLConnection getHttpURLConnection(final URL url) throws IOException {\n       boolean isProxyAccess \u003d\n           UserGroupInformation.getCurrentUser().getAuthenticationMethod()\n           \u003d\u003d UserGroupInformation.AuthenticationMethod.PROXY;\n       UserGroupInformation callerUGI \u003d isProxyAccess ?\n           UserGroupInformation.getCurrentUser().getRealUser()\n           : UserGroupInformation.getCurrentUser();\n       final String doAsUser \u003d isProxyAccess ?\n           UserGroupInformation.getCurrentUser().getShortUserName() : null;\n+      callerUGI.checkTGTAndReloginFromKeytab();\n       try {\n         return callerUGI.doAs(new PrivilegedExceptionAction\u003cHttpURLConnection\u003e() {\n           @Override\n           public HttpURLConnection run() throws Exception {\n             return new DelegationTokenAuthenticatedURL(\n                 authenticator, connConfigurator).openConnection(url, token,\n                 doAsUser);\n           }\n         });\n       } catch (UndeclaredThrowableException e) {\n         throw new IOException(e.getCause());\n       } catch (InterruptedException e) {\n         throw new IOException(e);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public HttpURLConnection getHttpURLConnection(final URL url) throws IOException {\n      boolean isProxyAccess \u003d\n          UserGroupInformation.getCurrentUser().getAuthenticationMethod()\n          \u003d\u003d UserGroupInformation.AuthenticationMethod.PROXY;\n      UserGroupInformation callerUGI \u003d isProxyAccess ?\n          UserGroupInformation.getCurrentUser().getRealUser()\n          : UserGroupInformation.getCurrentUser();\n      final String doAsUser \u003d isProxyAccess ?\n          UserGroupInformation.getCurrentUser().getShortUserName() : null;\n      callerUGI.checkTGTAndReloginFromKeytab();\n      try {\n        return callerUGI.doAs(new PrivilegedExceptionAction\u003cHttpURLConnection\u003e() {\n          @Override\n          public HttpURLConnection run() throws Exception {\n            return new DelegationTokenAuthenticatedURL(\n                authenticator, connConfigurator).openConnection(url, token,\n                doAsUser);\n          }\n        });\n      } catch (UndeclaredThrowableException e) {\n        throw new IOException(e.getCause());\n      } catch (InterruptedException e) {\n        throw new IOException(e);\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/api/impl/TimelineClientImpl.java",
      "extendedDetails": {}
    },
    "39063cd36f96e351e4a6bf0bc2b6185711d4b059": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2676. Enhanced Timeline auth-filter to support proxy users. Contributed by Zhijie Shen.\n",
      "commitDate": "17/10/14 10:02 PM",
      "commitName": "39063cd36f96e351e4a6bf0bc2b6185711d4b059",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,24 @@\n+    public HttpURLConnection getHttpURLConnection(final URL url) throws IOException {\n+      boolean isProxyAccess \u003d\n+          UserGroupInformation.getCurrentUser().getAuthenticationMethod()\n+          \u003d\u003d UserGroupInformation.AuthenticationMethod.PROXY;\n+      UserGroupInformation callerUGI \u003d isProxyAccess ?\n+          UserGroupInformation.getCurrentUser().getRealUser()\n+          : UserGroupInformation.getCurrentUser();\n+      final String doAsUser \u003d isProxyAccess ?\n+          UserGroupInformation.getCurrentUser().getShortUserName() : null;\n+      try {\n+        return callerUGI.doAs(new PrivilegedExceptionAction\u003cHttpURLConnection\u003e() {\n+          @Override\n+          public HttpURLConnection run() throws Exception {\n+            return new DelegationTokenAuthenticatedURL(\n+                authenticator, connConfigurator).openConnection(url, token,\n+                doAsUser);\n+          }\n+        });\n+      } catch (UndeclaredThrowableException e) {\n+        throw new IOException(e.getCause());\n+      } catch (InterruptedException e) {\n+        throw new IOException(e);\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public HttpURLConnection getHttpURLConnection(final URL url) throws IOException {\n      boolean isProxyAccess \u003d\n          UserGroupInformation.getCurrentUser().getAuthenticationMethod()\n          \u003d\u003d UserGroupInformation.AuthenticationMethod.PROXY;\n      UserGroupInformation callerUGI \u003d isProxyAccess ?\n          UserGroupInformation.getCurrentUser().getRealUser()\n          : UserGroupInformation.getCurrentUser();\n      final String doAsUser \u003d isProxyAccess ?\n          UserGroupInformation.getCurrentUser().getShortUserName() : null;\n      try {\n        return callerUGI.doAs(new PrivilegedExceptionAction\u003cHttpURLConnection\u003e() {\n          @Override\n          public HttpURLConnection run() throws Exception {\n            return new DelegationTokenAuthenticatedURL(\n                authenticator, connConfigurator).openConnection(url, token,\n                doAsUser);\n          }\n        });\n      } catch (UndeclaredThrowableException e) {\n        throw new IOException(e.getCause());\n      } catch (InterruptedException e) {\n        throw new IOException(e);\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/api/impl/TimelineClientImpl.java"
    }
  }
}