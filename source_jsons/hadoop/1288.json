{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DatanodeInfo.java",
  "functionName": "getDatanodeReport",
  "functionId": "getDatanodeReport",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocol/DatanodeInfo.java",
  "functionStartLine": 357,
  "functionEndLine": 428,
  "numCommitsSeen": 44,
  "timeTaken": 7464,
  "changeHistory": [
    "fb8932a727f757b2e9c1c61a18145878d0eb77bd",
    "9714fc1dd48edb1c40d96d69ae82ed3b0fab7748",
    "b5adc5c3011f111f86d232cb33ec522547f68a95",
    "a2774debf71b809f9cd9202c0e75a41a8dd191d0",
    "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93",
    "3a9c7076e81c1cc47c0ecf30c60abd9a65d8a501",
    "5c97db07fb306842f49d73a67a90cecec19a7833",
    "551024915d487957d9e829493ab319c8e31dfa81",
    "950e0644b79e0c0514dd036dcf19b9645df0982f",
    "fc14a92c6b46cc435a8f33e6fa0512c70caa06e0",
    "e28edbffe15e9d176d14ea2af8d9460d807b3fc4",
    "be7dd8333a7e56e732171db0781786987de03195",
    "0475795066ad89fc3ac4bfbe0dbe061555f3fbf7",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "fb8932a727f757b2e9c1c61a18145878d0eb77bd": "Ybodychange",
    "9714fc1dd48edb1c40d96d69ae82ed3b0fab7748": "Ybodychange",
    "b5adc5c3011f111f86d232cb33ec522547f68a95": "Ybodychange",
    "a2774debf71b809f9cd9202c0e75a41a8dd191d0": "Ybodychange",
    "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93": "Ybodychange",
    "3a9c7076e81c1cc47c0ecf30c60abd9a65d8a501": "Ybodychange",
    "5c97db07fb306842f49d73a67a90cecec19a7833": "Yfilerename",
    "551024915d487957d9e829493ab319c8e31dfa81": "Ybodychange",
    "950e0644b79e0c0514dd036dcf19b9645df0982f": "Ybodychange",
    "fc14a92c6b46cc435a8f33e6fa0512c70caa06e0": "Ybodychange",
    "e28edbffe15e9d176d14ea2af8d9460d807b3fc4": "Ybodychange",
    "be7dd8333a7e56e732171db0781786987de03195": "Ybodychange",
    "0475795066ad89fc3ac4bfbe0dbe061555f3fbf7": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "fb8932a727f757b2e9c1c61a18145878d0eb77bd": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16029. Consecutive StringBuilder.append can be reused. Contributed by Ayush Saxena.\n",
      "commitDate": "11/01/19 10:54 AM",
      "commitName": "fb8932a727f757b2e9c1c61a18145878d0eb77bd",
      "commitAuthor": "Giovanni Matteo Fumarola",
      "commitDateOld": "13/03/18 4:39 PM",
      "commitNameOld": "9714fc1dd48edb1c40d96d69ae82ed3b0fab7748",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 303.8,
      "commitsBetweenForRepo": 2929,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,73 +1,72 @@\n   public String getDatanodeReport() {\n     StringBuilder buffer \u003d new StringBuilder();\n     long c \u003d getCapacity();\n     long r \u003d getRemaining();\n     long u \u003d getDfsUsed();\n     long nonDFSUsed \u003d getNonDfsUsed();\n     float usedPercent \u003d getDfsUsedPercent();\n     float remainingPercent \u003d getRemainingPercent();\n     long cc \u003d getCacheCapacity();\n     long cr \u003d getCacheRemaining();\n     long cu \u003d getCacheUsed();\n     float cacheUsedPercent \u003d getCacheUsedPercent();\n     float cacheRemainingPercent \u003d getCacheRemainingPercent();\n     String lookupName \u003d NetUtils.getHostNameOfIP(getName());\n     int blockCount \u003d getNumBlocks();\n \n     buffer.append(\"Name: \").append(getName());\n     if (lookupName !\u003d null) {\n       buffer.append(\" (\").append(lookupName).append(\")\");\n     }\n-    buffer.append(\"\\n\");\n-    buffer.append(\"Hostname: \").append(getHostName()).append(\"\\n\");\n+    buffer.append(\"\\n\")\n+        .append(\"Hostname: \").append(getHostName()).append(\"\\n\");\n \n     if (!NetworkTopology.DEFAULT_RACK.equals(location)) {\n       buffer.append(\"Rack: \").append(location).append(\"\\n\");\n     }\n     if (upgradeDomain !\u003d null) {\n       buffer.append(\"Upgrade domain: \").append(upgradeDomain).append(\"\\n\");\n     }\n     buffer.append(\"Decommission Status : \");\n     if (isDecommissioned()) {\n       buffer.append(\"Decommissioned\\n\");\n     } else if (isDecommissionInProgress()) {\n       buffer.append(\"Decommission in progress\\n\");\n     } else if (isInMaintenance()) {\n       buffer.append(\"In maintenance\\n\");\n     } else if (isEnteringMaintenance()) {\n       buffer.append(\"Entering maintenance\\n\");\n     } else {\n       buffer.append(\"Normal\\n\");\n     }\n     buffer.append(\"Configured Capacity: \").append(c).append(\" (\")\n-        .append(StringUtils.byteDesc(c)).append(\")\").append(\"\\n\");\n-    buffer.append(\"DFS Used: \").append(u).append(\" (\")\n-        .append(StringUtils.byteDesc(u)).append(\")\").append(\"\\n\");\n-    buffer.append(\"Non DFS Used: \").append(nonDFSUsed).append(\" (\")\n-        .append(StringUtils.byteDesc(nonDFSUsed)).append(\")\").append(\"\\n\");\n-    buffer.append(\"DFS Remaining: \").append(r).append(\" (\")\n-        .append(StringUtils.byteDesc(r)).append(\")\").append(\"\\n\");\n-    buffer.append(\"DFS Used%: \").append(percent2String(usedPercent))\n-        .append(\"\\n\");\n-    buffer.append(\"DFS Remaining%: \").append(percent2String(remainingPercent))\n-        .append(\"\\n\");\n-    buffer.append(\"Configured Cache Capacity: \").append(cc).append(\" (\")\n-        .append(StringUtils.byteDesc(cc)).append(\")\").append(\"\\n\");\n-    buffer.append(\"Cache Used: \").append(cu).append(\" (\")\n-        .append(StringUtils.byteDesc(cu)).append(\")\").append(\"\\n\");\n-    buffer.append(\"Cache Remaining: \").append(cr).append(\" (\")\n-        .append(StringUtils.byteDesc(cr)).append(\")\").append(\"\\n\");\n-    buffer.append(\"Cache Used%: \").append(percent2String(cacheUsedPercent))\n-        .append(\"\\n\");\n-    buffer.append(\"Cache Remaining%: \")\n-        .append(percent2String(cacheRemainingPercent)).append(\"\\n\");\n-    buffer.append(\"Xceivers: \").append(getXceiverCount()).append(\"\\n\");\n-    buffer.append(\"Last contact: \").append(new Date(lastUpdate)).append(\"\\n\");\n-    buffer\n+        .append(StringUtils.byteDesc(c)).append(\")\").append(\"\\n\")\n+        .append(\"DFS Used: \").append(u).append(\" (\")\n+        .append(StringUtils.byteDesc(u)).append(\")\").append(\"\\n\")\n+        .append(\"Non DFS Used: \").append(nonDFSUsed).append(\" (\")\n+        .append(StringUtils.byteDesc(nonDFSUsed)).append(\")\").append(\"\\n\")\n+        .append(\"DFS Remaining: \").append(r).append(\" (\")\n+        .append(StringUtils.byteDesc(r)).append(\")\").append(\"\\n\")\n+        .append(\"DFS Used%: \").append(percent2String(usedPercent))\n+        .append(\"\\n\")\n+        .append(\"DFS Remaining%: \").append(percent2String(remainingPercent))\n+        .append(\"\\n\")\n+        .append(\"Configured Cache Capacity: \").append(cc).append(\" (\")\n+        .append(StringUtils.byteDesc(cc)).append(\")\").append(\"\\n\")\n+        .append(\"Cache Used: \").append(cu).append(\" (\")\n+        .append(StringUtils.byteDesc(cu)).append(\")\").append(\"\\n\")\n+        .append(\"Cache Remaining: \").append(cr).append(\" (\")\n+        .append(StringUtils.byteDesc(cr)).append(\")\").append(\"\\n\")\n+        .append(\"Cache Used%: \").append(percent2String(cacheUsedPercent))\n+        .append(\"\\n\")\n+        .append(\"Cache Remaining%: \")\n+        .append(percent2String(cacheRemainingPercent)).append(\"\\n\")\n+        .append(\"Xceivers: \").append(getXceiverCount()).append(\"\\n\")\n+        .append(\"Last contact: \").append(new Date(lastUpdate)).append(\"\\n\")\n         .append(\"Last Block Report: \")\n         .append(\n             lastBlockReportTime !\u003d 0 ? new Date(lastBlockReportTime) : \"Never\")\n-        .append(\"\\n\");\n-    buffer.append(\"Num of Blocks: \").append(blockCount).append(\"\\n\");\n+        .append(\"\\n\")\n+        .append(\"Num of Blocks: \").append(blockCount).append(\"\\n\");\n     return buffer.toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String getDatanodeReport() {\n    StringBuilder buffer \u003d new StringBuilder();\n    long c \u003d getCapacity();\n    long r \u003d getRemaining();\n    long u \u003d getDfsUsed();\n    long nonDFSUsed \u003d getNonDfsUsed();\n    float usedPercent \u003d getDfsUsedPercent();\n    float remainingPercent \u003d getRemainingPercent();\n    long cc \u003d getCacheCapacity();\n    long cr \u003d getCacheRemaining();\n    long cu \u003d getCacheUsed();\n    float cacheUsedPercent \u003d getCacheUsedPercent();\n    float cacheRemainingPercent \u003d getCacheRemainingPercent();\n    String lookupName \u003d NetUtils.getHostNameOfIP(getName());\n    int blockCount \u003d getNumBlocks();\n\n    buffer.append(\"Name: \").append(getName());\n    if (lookupName !\u003d null) {\n      buffer.append(\" (\").append(lookupName).append(\")\");\n    }\n    buffer.append(\"\\n\")\n        .append(\"Hostname: \").append(getHostName()).append(\"\\n\");\n\n    if (!NetworkTopology.DEFAULT_RACK.equals(location)) {\n      buffer.append(\"Rack: \").append(location).append(\"\\n\");\n    }\n    if (upgradeDomain !\u003d null) {\n      buffer.append(\"Upgrade domain: \").append(upgradeDomain).append(\"\\n\");\n    }\n    buffer.append(\"Decommission Status : \");\n    if (isDecommissioned()) {\n      buffer.append(\"Decommissioned\\n\");\n    } else if (isDecommissionInProgress()) {\n      buffer.append(\"Decommission in progress\\n\");\n    } else if (isInMaintenance()) {\n      buffer.append(\"In maintenance\\n\");\n    } else if (isEnteringMaintenance()) {\n      buffer.append(\"Entering maintenance\\n\");\n    } else {\n      buffer.append(\"Normal\\n\");\n    }\n    buffer.append(\"Configured Capacity: \").append(c).append(\" (\")\n        .append(StringUtils.byteDesc(c)).append(\")\").append(\"\\n\")\n        .append(\"DFS Used: \").append(u).append(\" (\")\n        .append(StringUtils.byteDesc(u)).append(\")\").append(\"\\n\")\n        .append(\"Non DFS Used: \").append(nonDFSUsed).append(\" (\")\n        .append(StringUtils.byteDesc(nonDFSUsed)).append(\")\").append(\"\\n\")\n        .append(\"DFS Remaining: \").append(r).append(\" (\")\n        .append(StringUtils.byteDesc(r)).append(\")\").append(\"\\n\")\n        .append(\"DFS Used%: \").append(percent2String(usedPercent))\n        .append(\"\\n\")\n        .append(\"DFS Remaining%: \").append(percent2String(remainingPercent))\n        .append(\"\\n\")\n        .append(\"Configured Cache Capacity: \").append(cc).append(\" (\")\n        .append(StringUtils.byteDesc(cc)).append(\")\").append(\"\\n\")\n        .append(\"Cache Used: \").append(cu).append(\" (\")\n        .append(StringUtils.byteDesc(cu)).append(\")\").append(\"\\n\")\n        .append(\"Cache Remaining: \").append(cr).append(\" (\")\n        .append(StringUtils.byteDesc(cr)).append(\")\").append(\"\\n\")\n        .append(\"Cache Used%: \").append(percent2String(cacheUsedPercent))\n        .append(\"\\n\")\n        .append(\"Cache Remaining%: \")\n        .append(percent2String(cacheRemainingPercent)).append(\"\\n\")\n        .append(\"Xceivers: \").append(getXceiverCount()).append(\"\\n\")\n        .append(\"Last contact: \").append(new Date(lastUpdate)).append(\"\\n\")\n        .append(\"Last Block Report: \")\n        .append(\n            lastBlockReportTime !\u003d 0 ? new Date(lastBlockReportTime) : \"Never\")\n        .append(\"\\n\")\n        .append(\"Num of Blocks: \").append(blockCount).append(\"\\n\");\n    return buffer.toString();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocol/DatanodeInfo.java",
      "extendedDetails": {}
    },
    "9714fc1dd48edb1c40d96d69ae82ed3b0fab7748": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-336. dfsadmin -report should report number of blocks from datanode. Contributed by Bharat Viswanadham.\n",
      "commitDate": "13/03/18 4:39 PM",
      "commitName": "9714fc1dd48edb1c40d96d69ae82ed3b0fab7748",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "31/03/17 12:10 PM",
      "commitNameOld": "5485d93bda3329a7c80767c3723cc6e1a9233dbc",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 347.19,
      "commitsBetweenForRepo": 2315,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,71 +1,73 @@\n   public String getDatanodeReport() {\n     StringBuilder buffer \u003d new StringBuilder();\n     long c \u003d getCapacity();\n     long r \u003d getRemaining();\n     long u \u003d getDfsUsed();\n     long nonDFSUsed \u003d getNonDfsUsed();\n     float usedPercent \u003d getDfsUsedPercent();\n     float remainingPercent \u003d getRemainingPercent();\n     long cc \u003d getCacheCapacity();\n     long cr \u003d getCacheRemaining();\n     long cu \u003d getCacheUsed();\n     float cacheUsedPercent \u003d getCacheUsedPercent();\n     float cacheRemainingPercent \u003d getCacheRemainingPercent();\n     String lookupName \u003d NetUtils.getHostNameOfIP(getName());\n+    int blockCount \u003d getNumBlocks();\n \n     buffer.append(\"Name: \").append(getName());\n     if (lookupName !\u003d null) {\n       buffer.append(\" (\").append(lookupName).append(\")\");\n     }\n     buffer.append(\"\\n\");\n     buffer.append(\"Hostname: \").append(getHostName()).append(\"\\n\");\n \n     if (!NetworkTopology.DEFAULT_RACK.equals(location)) {\n       buffer.append(\"Rack: \").append(location).append(\"\\n\");\n     }\n     if (upgradeDomain !\u003d null) {\n       buffer.append(\"Upgrade domain: \").append(upgradeDomain).append(\"\\n\");\n     }\n     buffer.append(\"Decommission Status : \");\n     if (isDecommissioned()) {\n       buffer.append(\"Decommissioned\\n\");\n     } else if (isDecommissionInProgress()) {\n       buffer.append(\"Decommission in progress\\n\");\n     } else if (isInMaintenance()) {\n       buffer.append(\"In maintenance\\n\");\n     } else if (isEnteringMaintenance()) {\n       buffer.append(\"Entering maintenance\\n\");\n     } else {\n       buffer.append(\"Normal\\n\");\n     }\n     buffer.append(\"Configured Capacity: \").append(c).append(\" (\")\n         .append(StringUtils.byteDesc(c)).append(\")\").append(\"\\n\");\n     buffer.append(\"DFS Used: \").append(u).append(\" (\")\n         .append(StringUtils.byteDesc(u)).append(\")\").append(\"\\n\");\n     buffer.append(\"Non DFS Used: \").append(nonDFSUsed).append(\" (\")\n         .append(StringUtils.byteDesc(nonDFSUsed)).append(\")\").append(\"\\n\");\n     buffer.append(\"DFS Remaining: \").append(r).append(\" (\")\n         .append(StringUtils.byteDesc(r)).append(\")\").append(\"\\n\");\n     buffer.append(\"DFS Used%: \").append(percent2String(usedPercent))\n         .append(\"\\n\");\n     buffer.append(\"DFS Remaining%: \").append(percent2String(remainingPercent))\n         .append(\"\\n\");\n     buffer.append(\"Configured Cache Capacity: \").append(cc).append(\" (\")\n         .append(StringUtils.byteDesc(cc)).append(\")\").append(\"\\n\");\n     buffer.append(\"Cache Used: \").append(cu).append(\" (\")\n         .append(StringUtils.byteDesc(cu)).append(\")\").append(\"\\n\");\n     buffer.append(\"Cache Remaining: \").append(cr).append(\" (\")\n         .append(StringUtils.byteDesc(cr)).append(\")\").append(\"\\n\");\n     buffer.append(\"Cache Used%: \").append(percent2String(cacheUsedPercent))\n         .append(\"\\n\");\n     buffer.append(\"Cache Remaining%: \")\n         .append(percent2String(cacheRemainingPercent)).append(\"\\n\");\n     buffer.append(\"Xceivers: \").append(getXceiverCount()).append(\"\\n\");\n     buffer.append(\"Last contact: \").append(new Date(lastUpdate)).append(\"\\n\");\n     buffer\n         .append(\"Last Block Report: \")\n         .append(\n             lastBlockReportTime !\u003d 0 ? new Date(lastBlockReportTime) : \"Never\")\n         .append(\"\\n\");\n+    buffer.append(\"Num of Blocks: \").append(blockCount).append(\"\\n\");\n     return buffer.toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String getDatanodeReport() {\n    StringBuilder buffer \u003d new StringBuilder();\n    long c \u003d getCapacity();\n    long r \u003d getRemaining();\n    long u \u003d getDfsUsed();\n    long nonDFSUsed \u003d getNonDfsUsed();\n    float usedPercent \u003d getDfsUsedPercent();\n    float remainingPercent \u003d getRemainingPercent();\n    long cc \u003d getCacheCapacity();\n    long cr \u003d getCacheRemaining();\n    long cu \u003d getCacheUsed();\n    float cacheUsedPercent \u003d getCacheUsedPercent();\n    float cacheRemainingPercent \u003d getCacheRemainingPercent();\n    String lookupName \u003d NetUtils.getHostNameOfIP(getName());\n    int blockCount \u003d getNumBlocks();\n\n    buffer.append(\"Name: \").append(getName());\n    if (lookupName !\u003d null) {\n      buffer.append(\" (\").append(lookupName).append(\")\");\n    }\n    buffer.append(\"\\n\");\n    buffer.append(\"Hostname: \").append(getHostName()).append(\"\\n\");\n\n    if (!NetworkTopology.DEFAULT_RACK.equals(location)) {\n      buffer.append(\"Rack: \").append(location).append(\"\\n\");\n    }\n    if (upgradeDomain !\u003d null) {\n      buffer.append(\"Upgrade domain: \").append(upgradeDomain).append(\"\\n\");\n    }\n    buffer.append(\"Decommission Status : \");\n    if (isDecommissioned()) {\n      buffer.append(\"Decommissioned\\n\");\n    } else if (isDecommissionInProgress()) {\n      buffer.append(\"Decommission in progress\\n\");\n    } else if (isInMaintenance()) {\n      buffer.append(\"In maintenance\\n\");\n    } else if (isEnteringMaintenance()) {\n      buffer.append(\"Entering maintenance\\n\");\n    } else {\n      buffer.append(\"Normal\\n\");\n    }\n    buffer.append(\"Configured Capacity: \").append(c).append(\" (\")\n        .append(StringUtils.byteDesc(c)).append(\")\").append(\"\\n\");\n    buffer.append(\"DFS Used: \").append(u).append(\" (\")\n        .append(StringUtils.byteDesc(u)).append(\")\").append(\"\\n\");\n    buffer.append(\"Non DFS Used: \").append(nonDFSUsed).append(\" (\")\n        .append(StringUtils.byteDesc(nonDFSUsed)).append(\")\").append(\"\\n\");\n    buffer.append(\"DFS Remaining: \").append(r).append(\" (\")\n        .append(StringUtils.byteDesc(r)).append(\")\").append(\"\\n\");\n    buffer.append(\"DFS Used%: \").append(percent2String(usedPercent))\n        .append(\"\\n\");\n    buffer.append(\"DFS Remaining%: \").append(percent2String(remainingPercent))\n        .append(\"\\n\");\n    buffer.append(\"Configured Cache Capacity: \").append(cc).append(\" (\")\n        .append(StringUtils.byteDesc(cc)).append(\")\").append(\"\\n\");\n    buffer.append(\"Cache Used: \").append(cu).append(\" (\")\n        .append(StringUtils.byteDesc(cu)).append(\")\").append(\"\\n\");\n    buffer.append(\"Cache Remaining: \").append(cr).append(\" (\")\n        .append(StringUtils.byteDesc(cr)).append(\")\").append(\"\\n\");\n    buffer.append(\"Cache Used%: \").append(percent2String(cacheUsedPercent))\n        .append(\"\\n\");\n    buffer.append(\"Cache Remaining%: \")\n        .append(percent2String(cacheRemainingPercent)).append(\"\\n\");\n    buffer.append(\"Xceivers: \").append(getXceiverCount()).append(\"\\n\");\n    buffer.append(\"Last contact: \").append(new Date(lastUpdate)).append(\"\\n\");\n    buffer\n        .append(\"Last Block Report: \")\n        .append(\n            lastBlockReportTime !\u003d 0 ? new Date(lastBlockReportTime) : \"Never\")\n        .append(\"\\n\");\n    buffer.append(\"Num of Blocks: \").append(blockCount).append(\"\\n\");\n    return buffer.toString();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocol/DatanodeInfo.java",
      "extendedDetails": {}
    },
    "b5adc5c3011f111f86d232cb33ec522547f68a95": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10838. Last full block report received time for each DN should be easily discoverable. Contributed by Surendra Singh Lilhore.\n",
      "commitDate": "06/03/17 4:39 PM",
      "commitName": "b5adc5c3011f111f86d232cb33ec522547f68a95",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "14/02/17 12:52 PM",
      "commitNameOld": "aaf27132350547fcde1fdb372f19626838f44bc4",
      "commitAuthorOld": "Xiaoyu Yao",
      "daysBetweenCommits": 20.16,
      "commitsBetweenForRepo": 125,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,66 +1,71 @@\n   public String getDatanodeReport() {\n     StringBuilder buffer \u003d new StringBuilder();\n     long c \u003d getCapacity();\n     long r \u003d getRemaining();\n     long u \u003d getDfsUsed();\n     long nonDFSUsed \u003d getNonDfsUsed();\n     float usedPercent \u003d getDfsUsedPercent();\n     float remainingPercent \u003d getRemainingPercent();\n     long cc \u003d getCacheCapacity();\n     long cr \u003d getCacheRemaining();\n     long cu \u003d getCacheUsed();\n     float cacheUsedPercent \u003d getCacheUsedPercent();\n     float cacheRemainingPercent \u003d getCacheRemainingPercent();\n     String lookupName \u003d NetUtils.getHostNameOfIP(getName());\n \n     buffer.append(\"Name: \").append(getName());\n     if (lookupName !\u003d null) {\n       buffer.append(\" (\").append(lookupName).append(\")\");\n     }\n     buffer.append(\"\\n\");\n     buffer.append(\"Hostname: \").append(getHostName()).append(\"\\n\");\n \n     if (!NetworkTopology.DEFAULT_RACK.equals(location)) {\n       buffer.append(\"Rack: \").append(location).append(\"\\n\");\n     }\n     if (upgradeDomain !\u003d null) {\n       buffer.append(\"Upgrade domain: \").append(upgradeDomain).append(\"\\n\");\n     }\n     buffer.append(\"Decommission Status : \");\n     if (isDecommissioned()) {\n       buffer.append(\"Decommissioned\\n\");\n     } else if (isDecommissionInProgress()) {\n       buffer.append(\"Decommission in progress\\n\");\n     } else if (isInMaintenance()) {\n       buffer.append(\"In maintenance\\n\");\n     } else if (isEnteringMaintenance()) {\n       buffer.append(\"Entering maintenance\\n\");\n     } else {\n       buffer.append(\"Normal\\n\");\n     }\n     buffer.append(\"Configured Capacity: \").append(c).append(\" (\")\n         .append(StringUtils.byteDesc(c)).append(\")\").append(\"\\n\");\n     buffer.append(\"DFS Used: \").append(u).append(\" (\")\n         .append(StringUtils.byteDesc(u)).append(\")\").append(\"\\n\");\n     buffer.append(\"Non DFS Used: \").append(nonDFSUsed).append(\" (\")\n         .append(StringUtils.byteDesc(nonDFSUsed)).append(\")\").append(\"\\n\");\n     buffer.append(\"DFS Remaining: \").append(r).append(\" (\")\n         .append(StringUtils.byteDesc(r)).append(\")\").append(\"\\n\");\n     buffer.append(\"DFS Used%: \").append(percent2String(usedPercent))\n         .append(\"\\n\");\n     buffer.append(\"DFS Remaining%: \").append(percent2String(remainingPercent))\n         .append(\"\\n\");\n     buffer.append(\"Configured Cache Capacity: \").append(cc).append(\" (\")\n         .append(StringUtils.byteDesc(cc)).append(\")\").append(\"\\n\");\n     buffer.append(\"Cache Used: \").append(cu).append(\" (\")\n         .append(StringUtils.byteDesc(cu)).append(\")\").append(\"\\n\");\n     buffer.append(\"Cache Remaining: \").append(cr).append(\" (\")\n         .append(StringUtils.byteDesc(cr)).append(\")\").append(\"\\n\");\n     buffer.append(\"Cache Used%: \").append(percent2String(cacheUsedPercent))\n         .append(\"\\n\");\n     buffer.append(\"Cache Remaining%: \")\n         .append(percent2String(cacheRemainingPercent)).append(\"\\n\");\n     buffer.append(\"Xceivers: \").append(getXceiverCount()).append(\"\\n\");\n     buffer.append(\"Last contact: \").append(new Date(lastUpdate)).append(\"\\n\");\n+    buffer\n+        .append(\"Last Block Report: \")\n+        .append(\n+            lastBlockReportTime !\u003d 0 ? new Date(lastBlockReportTime) : \"Never\")\n+        .append(\"\\n\");\n     return buffer.toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String getDatanodeReport() {\n    StringBuilder buffer \u003d new StringBuilder();\n    long c \u003d getCapacity();\n    long r \u003d getRemaining();\n    long u \u003d getDfsUsed();\n    long nonDFSUsed \u003d getNonDfsUsed();\n    float usedPercent \u003d getDfsUsedPercent();\n    float remainingPercent \u003d getRemainingPercent();\n    long cc \u003d getCacheCapacity();\n    long cr \u003d getCacheRemaining();\n    long cu \u003d getCacheUsed();\n    float cacheUsedPercent \u003d getCacheUsedPercent();\n    float cacheRemainingPercent \u003d getCacheRemainingPercent();\n    String lookupName \u003d NetUtils.getHostNameOfIP(getName());\n\n    buffer.append(\"Name: \").append(getName());\n    if (lookupName !\u003d null) {\n      buffer.append(\" (\").append(lookupName).append(\")\");\n    }\n    buffer.append(\"\\n\");\n    buffer.append(\"Hostname: \").append(getHostName()).append(\"\\n\");\n\n    if (!NetworkTopology.DEFAULT_RACK.equals(location)) {\n      buffer.append(\"Rack: \").append(location).append(\"\\n\");\n    }\n    if (upgradeDomain !\u003d null) {\n      buffer.append(\"Upgrade domain: \").append(upgradeDomain).append(\"\\n\");\n    }\n    buffer.append(\"Decommission Status : \");\n    if (isDecommissioned()) {\n      buffer.append(\"Decommissioned\\n\");\n    } else if (isDecommissionInProgress()) {\n      buffer.append(\"Decommission in progress\\n\");\n    } else if (isInMaintenance()) {\n      buffer.append(\"In maintenance\\n\");\n    } else if (isEnteringMaintenance()) {\n      buffer.append(\"Entering maintenance\\n\");\n    } else {\n      buffer.append(\"Normal\\n\");\n    }\n    buffer.append(\"Configured Capacity: \").append(c).append(\" (\")\n        .append(StringUtils.byteDesc(c)).append(\")\").append(\"\\n\");\n    buffer.append(\"DFS Used: \").append(u).append(\" (\")\n        .append(StringUtils.byteDesc(u)).append(\")\").append(\"\\n\");\n    buffer.append(\"Non DFS Used: \").append(nonDFSUsed).append(\" (\")\n        .append(StringUtils.byteDesc(nonDFSUsed)).append(\")\").append(\"\\n\");\n    buffer.append(\"DFS Remaining: \").append(r).append(\" (\")\n        .append(StringUtils.byteDesc(r)).append(\")\").append(\"\\n\");\n    buffer.append(\"DFS Used%: \").append(percent2String(usedPercent))\n        .append(\"\\n\");\n    buffer.append(\"DFS Remaining%: \").append(percent2String(remainingPercent))\n        .append(\"\\n\");\n    buffer.append(\"Configured Cache Capacity: \").append(cc).append(\" (\")\n        .append(StringUtils.byteDesc(cc)).append(\")\").append(\"\\n\");\n    buffer.append(\"Cache Used: \").append(cu).append(\" (\")\n        .append(StringUtils.byteDesc(cu)).append(\")\").append(\"\\n\");\n    buffer.append(\"Cache Remaining: \").append(cr).append(\" (\")\n        .append(StringUtils.byteDesc(cr)).append(\")\").append(\"\\n\");\n    buffer.append(\"Cache Used%: \").append(percent2String(cacheUsedPercent))\n        .append(\"\\n\");\n    buffer.append(\"Cache Remaining%: \")\n        .append(percent2String(cacheRemainingPercent)).append(\"\\n\");\n    buffer.append(\"Xceivers: \").append(getXceiverCount()).append(\"\\n\");\n    buffer.append(\"Last contact: \").append(new Date(lastUpdate)).append(\"\\n\");\n    buffer\n        .append(\"Last Block Report: \")\n        .append(\n            lastBlockReportTime !\u003d 0 ? new Date(lastBlockReportTime) : \"Never\")\n        .append(\"\\n\");\n    return buffer.toString();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocol/DatanodeInfo.java",
      "extendedDetails": {}
    },
    "a2774debf71b809f9cd9202c0e75a41a8dd191d0": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9389. Add maintenance states to AdminStates. (Ming Ma via lei)\n",
      "commitDate": "12/05/16 3:42 PM",
      "commitName": "a2774debf71b809f9cd9202c0e75a41a8dd191d0",
      "commitAuthor": "Lei Xu",
      "commitDateOld": "03/10/15 11:38 AM",
      "commitNameOld": "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 222.17,
      "commitsBetweenForRepo": 1465,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,62 +1,66 @@\n   public String getDatanodeReport() {\n     StringBuilder buffer \u003d new StringBuilder();\n     long c \u003d getCapacity();\n     long r \u003d getRemaining();\n     long u \u003d getDfsUsed();\n     long nonDFSUsed \u003d getNonDfsUsed();\n     float usedPercent \u003d getDfsUsedPercent();\n     float remainingPercent \u003d getRemainingPercent();\n     long cc \u003d getCacheCapacity();\n     long cr \u003d getCacheRemaining();\n     long cu \u003d getCacheUsed();\n     float cacheUsedPercent \u003d getCacheUsedPercent();\n     float cacheRemainingPercent \u003d getCacheRemainingPercent();\n     String lookupName \u003d NetUtils.getHostNameOfIP(getName());\n \n     buffer.append(\"Name: \").append(getName());\n     if (lookupName !\u003d null) {\n       buffer.append(\" (\").append(lookupName).append(\")\");\n     }\n     buffer.append(\"\\n\");\n     buffer.append(\"Hostname: \").append(getHostName()).append(\"\\n\");\n \n     if (!NetworkTopology.DEFAULT_RACK.equals(location)) {\n       buffer.append(\"Rack: \").append(location).append(\"\\n\");\n     }\n     if (upgradeDomain !\u003d null) {\n       buffer.append(\"Upgrade domain: \").append(upgradeDomain).append(\"\\n\");\n     }\n     buffer.append(\"Decommission Status : \");\n     if (isDecommissioned()) {\n       buffer.append(\"Decommissioned\\n\");\n     } else if (isDecommissionInProgress()) {\n       buffer.append(\"Decommission in progress\\n\");\n+    } else if (isInMaintenance()) {\n+      buffer.append(\"In maintenance\\n\");\n+    } else if (isEnteringMaintenance()) {\n+      buffer.append(\"Entering maintenance\\n\");\n     } else {\n       buffer.append(\"Normal\\n\");\n     }\n     buffer.append(\"Configured Capacity: \").append(c).append(\" (\")\n         .append(StringUtils.byteDesc(c)).append(\")\").append(\"\\n\");\n     buffer.append(\"DFS Used: \").append(u).append(\" (\")\n         .append(StringUtils.byteDesc(u)).append(\")\").append(\"\\n\");\n     buffer.append(\"Non DFS Used: \").append(nonDFSUsed).append(\" (\")\n         .append(StringUtils.byteDesc(nonDFSUsed)).append(\")\").append(\"\\n\");\n     buffer.append(\"DFS Remaining: \").append(r).append(\" (\")\n         .append(StringUtils.byteDesc(r)).append(\")\").append(\"\\n\");\n     buffer.append(\"DFS Used%: \").append(percent2String(usedPercent))\n         .append(\"\\n\");\n     buffer.append(\"DFS Remaining%: \").append(percent2String(remainingPercent))\n         .append(\"\\n\");\n     buffer.append(\"Configured Cache Capacity: \").append(cc).append(\" (\")\n         .append(StringUtils.byteDesc(cc)).append(\")\").append(\"\\n\");\n     buffer.append(\"Cache Used: \").append(cu).append(\" (\")\n         .append(StringUtils.byteDesc(cu)).append(\")\").append(\"\\n\");\n     buffer.append(\"Cache Remaining: \").append(cr).append(\" (\")\n         .append(StringUtils.byteDesc(cr)).append(\")\").append(\"\\n\");\n     buffer.append(\"Cache Used%: \").append(percent2String(cacheUsedPercent))\n         .append(\"\\n\");\n     buffer.append(\"Cache Remaining%: \")\n         .append(percent2String(cacheRemainingPercent)).append(\"\\n\");\n     buffer.append(\"Xceivers: \").append(getXceiverCount()).append(\"\\n\");\n     buffer.append(\"Last contact: \").append(new Date(lastUpdate)).append(\"\\n\");\n     return buffer.toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String getDatanodeReport() {\n    StringBuilder buffer \u003d new StringBuilder();\n    long c \u003d getCapacity();\n    long r \u003d getRemaining();\n    long u \u003d getDfsUsed();\n    long nonDFSUsed \u003d getNonDfsUsed();\n    float usedPercent \u003d getDfsUsedPercent();\n    float remainingPercent \u003d getRemainingPercent();\n    long cc \u003d getCacheCapacity();\n    long cr \u003d getCacheRemaining();\n    long cu \u003d getCacheUsed();\n    float cacheUsedPercent \u003d getCacheUsedPercent();\n    float cacheRemainingPercent \u003d getCacheRemainingPercent();\n    String lookupName \u003d NetUtils.getHostNameOfIP(getName());\n\n    buffer.append(\"Name: \").append(getName());\n    if (lookupName !\u003d null) {\n      buffer.append(\" (\").append(lookupName).append(\")\");\n    }\n    buffer.append(\"\\n\");\n    buffer.append(\"Hostname: \").append(getHostName()).append(\"\\n\");\n\n    if (!NetworkTopology.DEFAULT_RACK.equals(location)) {\n      buffer.append(\"Rack: \").append(location).append(\"\\n\");\n    }\n    if (upgradeDomain !\u003d null) {\n      buffer.append(\"Upgrade domain: \").append(upgradeDomain).append(\"\\n\");\n    }\n    buffer.append(\"Decommission Status : \");\n    if (isDecommissioned()) {\n      buffer.append(\"Decommissioned\\n\");\n    } else if (isDecommissionInProgress()) {\n      buffer.append(\"Decommission in progress\\n\");\n    } else if (isInMaintenance()) {\n      buffer.append(\"In maintenance\\n\");\n    } else if (isEnteringMaintenance()) {\n      buffer.append(\"Entering maintenance\\n\");\n    } else {\n      buffer.append(\"Normal\\n\");\n    }\n    buffer.append(\"Configured Capacity: \").append(c).append(\" (\")\n        .append(StringUtils.byteDesc(c)).append(\")\").append(\"\\n\");\n    buffer.append(\"DFS Used: \").append(u).append(\" (\")\n        .append(StringUtils.byteDesc(u)).append(\")\").append(\"\\n\");\n    buffer.append(\"Non DFS Used: \").append(nonDFSUsed).append(\" (\")\n        .append(StringUtils.byteDesc(nonDFSUsed)).append(\")\").append(\"\\n\");\n    buffer.append(\"DFS Remaining: \").append(r).append(\" (\")\n        .append(StringUtils.byteDesc(r)).append(\")\").append(\"\\n\");\n    buffer.append(\"DFS Used%: \").append(percent2String(usedPercent))\n        .append(\"\\n\");\n    buffer.append(\"DFS Remaining%: \").append(percent2String(remainingPercent))\n        .append(\"\\n\");\n    buffer.append(\"Configured Cache Capacity: \").append(cc).append(\" (\")\n        .append(StringUtils.byteDesc(cc)).append(\")\").append(\"\\n\");\n    buffer.append(\"Cache Used: \").append(cu).append(\" (\")\n        .append(StringUtils.byteDesc(cu)).append(\")\").append(\"\\n\");\n    buffer.append(\"Cache Remaining: \").append(cr).append(\" (\")\n        .append(StringUtils.byteDesc(cr)).append(\")\").append(\"\\n\");\n    buffer.append(\"Cache Used%: \").append(percent2String(cacheUsedPercent))\n        .append(\"\\n\");\n    buffer.append(\"Cache Remaining%: \")\n        .append(percent2String(cacheRemainingPercent)).append(\"\\n\");\n    buffer.append(\"Xceivers: \").append(getXceiverCount()).append(\"\\n\");\n    buffer.append(\"Last contact: \").append(new Date(lastUpdate)).append(\"\\n\");\n    return buffer.toString();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocol/DatanodeInfo.java",
      "extendedDetails": {}
    },
    "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8979. Clean up checkstyle warnings in hadoop-hdfs-client module. Contributed by Mingliang Liu.\n",
      "commitDate": "03/10/15 11:38 AM",
      "commitName": "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "19/09/15 6:08 PM",
      "commitNameOld": "3a9c7076e81c1cc47c0ecf30c60abd9a65d8a501",
      "commitAuthorOld": "Lei Xu",
      "daysBetweenCommits": 13.73,
      "commitsBetweenForRepo": 101,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,51 +1,62 @@\n   public String getDatanodeReport() {\n     StringBuilder buffer \u003d new StringBuilder();\n     long c \u003d getCapacity();\n     long r \u003d getRemaining();\n     long u \u003d getDfsUsed();\n     long nonDFSUsed \u003d getNonDfsUsed();\n     float usedPercent \u003d getDfsUsedPercent();\n     float remainingPercent \u003d getRemainingPercent();\n     long cc \u003d getCacheCapacity();\n     long cr \u003d getCacheRemaining();\n     long cu \u003d getCacheUsed();\n     float cacheUsedPercent \u003d getCacheUsedPercent();\n     float cacheRemainingPercent \u003d getCacheRemainingPercent();\n     String lookupName \u003d NetUtils.getHostNameOfIP(getName());\n \n-    buffer.append(\"Name: \"+ getName());\n+    buffer.append(\"Name: \").append(getName());\n     if (lookupName !\u003d null) {\n-      buffer.append(\" (\" + lookupName + \")\");\n+      buffer.append(\" (\").append(lookupName).append(\")\");\n     }\n     buffer.append(\"\\n\");\n-    buffer.append(\"Hostname: \" + getHostName() + \"\\n\");\n+    buffer.append(\"Hostname: \").append(getHostName()).append(\"\\n\");\n \n     if (!NetworkTopology.DEFAULT_RACK.equals(location)) {\n-      buffer.append(\"Rack: \"+location+\"\\n\");\n+      buffer.append(\"Rack: \").append(location).append(\"\\n\");\n     }\n     if (upgradeDomain !\u003d null) {\n-      buffer.append(\"Upgrade domain: \"+ upgradeDomain +\"\\n\");\n+      buffer.append(\"Upgrade domain: \").append(upgradeDomain).append(\"\\n\");\n     }\n     buffer.append(\"Decommission Status : \");\n     if (isDecommissioned()) {\n       buffer.append(\"Decommissioned\\n\");\n     } else if (isDecommissionInProgress()) {\n       buffer.append(\"Decommission in progress\\n\");\n     } else {\n       buffer.append(\"Normal\\n\");\n     }\n-    buffer.append(\"Configured Capacity: \"+c+\" (\"+StringUtils.byteDesc(c)+\")\"+\"\\n\");\n-    buffer.append(\"DFS Used: \"+u+\" (\"+StringUtils.byteDesc(u)+\")\"+\"\\n\");\n-    buffer.append(\"Non DFS Used: \"+nonDFSUsed+\" (\"+StringUtils.byteDesc(nonDFSUsed)+\")\"+\"\\n\");\n-    buffer.append(\"DFS Remaining: \" +r+ \" (\"+StringUtils.byteDesc(r)+\")\"+\"\\n\");\n-    buffer.append(\"DFS Used%: \"+percent2String(usedPercent) + \"\\n\");\n-    buffer.append(\"DFS Remaining%: \"+percent2String(remainingPercent) + \"\\n\");\n-    buffer.append(\"Configured Cache Capacity: \"+cc+\" (\"+StringUtils.byteDesc(cc)+\")\"+\"\\n\");\n-    buffer.append(\"Cache Used: \"+cu+\" (\"+StringUtils.byteDesc(cu)+\")\"+\"\\n\");\n-    buffer.append(\"Cache Remaining: \" +cr+ \" (\"+StringUtils.byteDesc(cr)+\")\"+\"\\n\");\n-    buffer.append(\"Cache Used%: \"+percent2String(cacheUsedPercent) + \"\\n\");\n-    buffer.append(\"Cache Remaining%: \"+percent2String(cacheRemainingPercent) + \"\\n\");\n-    buffer.append(\"Xceivers: \"+getXceiverCount()+\"\\n\");\n-    buffer.append(\"Last contact: \"+new Date(lastUpdate)+\"\\n\");\n+    buffer.append(\"Configured Capacity: \").append(c).append(\" (\")\n+        .append(StringUtils.byteDesc(c)).append(\")\").append(\"\\n\");\n+    buffer.append(\"DFS Used: \").append(u).append(\" (\")\n+        .append(StringUtils.byteDesc(u)).append(\")\").append(\"\\n\");\n+    buffer.append(\"Non DFS Used: \").append(nonDFSUsed).append(\" (\")\n+        .append(StringUtils.byteDesc(nonDFSUsed)).append(\")\").append(\"\\n\");\n+    buffer.append(\"DFS Remaining: \").append(r).append(\" (\")\n+        .append(StringUtils.byteDesc(r)).append(\")\").append(\"\\n\");\n+    buffer.append(\"DFS Used%: \").append(percent2String(usedPercent))\n+        .append(\"\\n\");\n+    buffer.append(\"DFS Remaining%: \").append(percent2String(remainingPercent))\n+        .append(\"\\n\");\n+    buffer.append(\"Configured Cache Capacity: \").append(cc).append(\" (\")\n+        .append(StringUtils.byteDesc(cc)).append(\")\").append(\"\\n\");\n+    buffer.append(\"Cache Used: \").append(cu).append(\" (\")\n+        .append(StringUtils.byteDesc(cu)).append(\")\").append(\"\\n\");\n+    buffer.append(\"Cache Remaining: \").append(cr).append(\" (\")\n+        .append(StringUtils.byteDesc(cr)).append(\")\").append(\"\\n\");\n+    buffer.append(\"Cache Used%: \").append(percent2String(cacheUsedPercent))\n+        .append(\"\\n\");\n+    buffer.append(\"Cache Remaining%: \")\n+        .append(percent2String(cacheRemainingPercent)).append(\"\\n\");\n+    buffer.append(\"Xceivers: \").append(getXceiverCount()).append(\"\\n\");\n+    buffer.append(\"Last contact: \").append(new Date(lastUpdate)).append(\"\\n\");\n     return buffer.toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String getDatanodeReport() {\n    StringBuilder buffer \u003d new StringBuilder();\n    long c \u003d getCapacity();\n    long r \u003d getRemaining();\n    long u \u003d getDfsUsed();\n    long nonDFSUsed \u003d getNonDfsUsed();\n    float usedPercent \u003d getDfsUsedPercent();\n    float remainingPercent \u003d getRemainingPercent();\n    long cc \u003d getCacheCapacity();\n    long cr \u003d getCacheRemaining();\n    long cu \u003d getCacheUsed();\n    float cacheUsedPercent \u003d getCacheUsedPercent();\n    float cacheRemainingPercent \u003d getCacheRemainingPercent();\n    String lookupName \u003d NetUtils.getHostNameOfIP(getName());\n\n    buffer.append(\"Name: \").append(getName());\n    if (lookupName !\u003d null) {\n      buffer.append(\" (\").append(lookupName).append(\")\");\n    }\n    buffer.append(\"\\n\");\n    buffer.append(\"Hostname: \").append(getHostName()).append(\"\\n\");\n\n    if (!NetworkTopology.DEFAULT_RACK.equals(location)) {\n      buffer.append(\"Rack: \").append(location).append(\"\\n\");\n    }\n    if (upgradeDomain !\u003d null) {\n      buffer.append(\"Upgrade domain: \").append(upgradeDomain).append(\"\\n\");\n    }\n    buffer.append(\"Decommission Status : \");\n    if (isDecommissioned()) {\n      buffer.append(\"Decommissioned\\n\");\n    } else if (isDecommissionInProgress()) {\n      buffer.append(\"Decommission in progress\\n\");\n    } else {\n      buffer.append(\"Normal\\n\");\n    }\n    buffer.append(\"Configured Capacity: \").append(c).append(\" (\")\n        .append(StringUtils.byteDesc(c)).append(\")\").append(\"\\n\");\n    buffer.append(\"DFS Used: \").append(u).append(\" (\")\n        .append(StringUtils.byteDesc(u)).append(\")\").append(\"\\n\");\n    buffer.append(\"Non DFS Used: \").append(nonDFSUsed).append(\" (\")\n        .append(StringUtils.byteDesc(nonDFSUsed)).append(\")\").append(\"\\n\");\n    buffer.append(\"DFS Remaining: \").append(r).append(\" (\")\n        .append(StringUtils.byteDesc(r)).append(\")\").append(\"\\n\");\n    buffer.append(\"DFS Used%: \").append(percent2String(usedPercent))\n        .append(\"\\n\");\n    buffer.append(\"DFS Remaining%: \").append(percent2String(remainingPercent))\n        .append(\"\\n\");\n    buffer.append(\"Configured Cache Capacity: \").append(cc).append(\" (\")\n        .append(StringUtils.byteDesc(cc)).append(\")\").append(\"\\n\");\n    buffer.append(\"Cache Used: \").append(cu).append(\" (\")\n        .append(StringUtils.byteDesc(cu)).append(\")\").append(\"\\n\");\n    buffer.append(\"Cache Remaining: \").append(cr).append(\" (\")\n        .append(StringUtils.byteDesc(cr)).append(\")\").append(\"\\n\");\n    buffer.append(\"Cache Used%: \").append(percent2String(cacheUsedPercent))\n        .append(\"\\n\");\n    buffer.append(\"Cache Remaining%: \")\n        .append(percent2String(cacheRemainingPercent)).append(\"\\n\");\n    buffer.append(\"Xceivers: \").append(getXceiverCount()).append(\"\\n\");\n    buffer.append(\"Last contact: \").append(new Date(lastUpdate)).append(\"\\n\");\n    return buffer.toString();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocol/DatanodeInfo.java",
      "extendedDetails": {}
    },
    "3a9c7076e81c1cc47c0ecf30c60abd9a65d8a501": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9004. Add upgrade domain to DatanodeInfo. Contributed by Ming Ma (via Lei (Eddy) Xu).\n\nChange-Id: I887c66578eebd61acc34b94f18da6e6851c609f4\n",
      "commitDate": "19/09/15 6:08 PM",
      "commitName": "3a9c7076e81c1cc47c0ecf30c60abd9a65d8a501",
      "commitAuthor": "Lei Xu",
      "commitDateOld": "09/09/15 1:20 AM",
      "commitNameOld": "0113e4528deda7563b62a29745fbf209ab31b81a",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 10.7,
      "commitsBetweenForRepo": 80,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,48 +1,51 @@\n   public String getDatanodeReport() {\n     StringBuilder buffer \u003d new StringBuilder();\n     long c \u003d getCapacity();\n     long r \u003d getRemaining();\n     long u \u003d getDfsUsed();\n     long nonDFSUsed \u003d getNonDfsUsed();\n     float usedPercent \u003d getDfsUsedPercent();\n     float remainingPercent \u003d getRemainingPercent();\n     long cc \u003d getCacheCapacity();\n     long cr \u003d getCacheRemaining();\n     long cu \u003d getCacheUsed();\n     float cacheUsedPercent \u003d getCacheUsedPercent();\n     float cacheRemainingPercent \u003d getCacheRemainingPercent();\n     String lookupName \u003d NetUtils.getHostNameOfIP(getName());\n \n     buffer.append(\"Name: \"+ getName());\n     if (lookupName !\u003d null) {\n       buffer.append(\" (\" + lookupName + \")\");\n     }\n     buffer.append(\"\\n\");\n     buffer.append(\"Hostname: \" + getHostName() + \"\\n\");\n \n     if (!NetworkTopology.DEFAULT_RACK.equals(location)) {\n       buffer.append(\"Rack: \"+location+\"\\n\");\n     }\n+    if (upgradeDomain !\u003d null) {\n+      buffer.append(\"Upgrade domain: \"+ upgradeDomain +\"\\n\");\n+    }\n     buffer.append(\"Decommission Status : \");\n     if (isDecommissioned()) {\n       buffer.append(\"Decommissioned\\n\");\n     } else if (isDecommissionInProgress()) {\n       buffer.append(\"Decommission in progress\\n\");\n     } else {\n       buffer.append(\"Normal\\n\");\n     }\n     buffer.append(\"Configured Capacity: \"+c+\" (\"+StringUtils.byteDesc(c)+\")\"+\"\\n\");\n     buffer.append(\"DFS Used: \"+u+\" (\"+StringUtils.byteDesc(u)+\")\"+\"\\n\");\n     buffer.append(\"Non DFS Used: \"+nonDFSUsed+\" (\"+StringUtils.byteDesc(nonDFSUsed)+\")\"+\"\\n\");\n     buffer.append(\"DFS Remaining: \" +r+ \" (\"+StringUtils.byteDesc(r)+\")\"+\"\\n\");\n     buffer.append(\"DFS Used%: \"+percent2String(usedPercent) + \"\\n\");\n     buffer.append(\"DFS Remaining%: \"+percent2String(remainingPercent) + \"\\n\");\n     buffer.append(\"Configured Cache Capacity: \"+cc+\" (\"+StringUtils.byteDesc(cc)+\")\"+\"\\n\");\n     buffer.append(\"Cache Used: \"+cu+\" (\"+StringUtils.byteDesc(cu)+\")\"+\"\\n\");\n     buffer.append(\"Cache Remaining: \" +cr+ \" (\"+StringUtils.byteDesc(cr)+\")\"+\"\\n\");\n     buffer.append(\"Cache Used%: \"+percent2String(cacheUsedPercent) + \"\\n\");\n     buffer.append(\"Cache Remaining%: \"+percent2String(cacheRemainingPercent) + \"\\n\");\n     buffer.append(\"Xceivers: \"+getXceiverCount()+\"\\n\");\n     buffer.append(\"Last contact: \"+new Date(lastUpdate)+\"\\n\");\n     return buffer.toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String getDatanodeReport() {\n    StringBuilder buffer \u003d new StringBuilder();\n    long c \u003d getCapacity();\n    long r \u003d getRemaining();\n    long u \u003d getDfsUsed();\n    long nonDFSUsed \u003d getNonDfsUsed();\n    float usedPercent \u003d getDfsUsedPercent();\n    float remainingPercent \u003d getRemainingPercent();\n    long cc \u003d getCacheCapacity();\n    long cr \u003d getCacheRemaining();\n    long cu \u003d getCacheUsed();\n    float cacheUsedPercent \u003d getCacheUsedPercent();\n    float cacheRemainingPercent \u003d getCacheRemainingPercent();\n    String lookupName \u003d NetUtils.getHostNameOfIP(getName());\n\n    buffer.append(\"Name: \"+ getName());\n    if (lookupName !\u003d null) {\n      buffer.append(\" (\" + lookupName + \")\");\n    }\n    buffer.append(\"\\n\");\n    buffer.append(\"Hostname: \" + getHostName() + \"\\n\");\n\n    if (!NetworkTopology.DEFAULT_RACK.equals(location)) {\n      buffer.append(\"Rack: \"+location+\"\\n\");\n    }\n    if (upgradeDomain !\u003d null) {\n      buffer.append(\"Upgrade domain: \"+ upgradeDomain +\"\\n\");\n    }\n    buffer.append(\"Decommission Status : \");\n    if (isDecommissioned()) {\n      buffer.append(\"Decommissioned\\n\");\n    } else if (isDecommissionInProgress()) {\n      buffer.append(\"Decommission in progress\\n\");\n    } else {\n      buffer.append(\"Normal\\n\");\n    }\n    buffer.append(\"Configured Capacity: \"+c+\" (\"+StringUtils.byteDesc(c)+\")\"+\"\\n\");\n    buffer.append(\"DFS Used: \"+u+\" (\"+StringUtils.byteDesc(u)+\")\"+\"\\n\");\n    buffer.append(\"Non DFS Used: \"+nonDFSUsed+\" (\"+StringUtils.byteDesc(nonDFSUsed)+\")\"+\"\\n\");\n    buffer.append(\"DFS Remaining: \" +r+ \" (\"+StringUtils.byteDesc(r)+\")\"+\"\\n\");\n    buffer.append(\"DFS Used%: \"+percent2String(usedPercent) + \"\\n\");\n    buffer.append(\"DFS Remaining%: \"+percent2String(remainingPercent) + \"\\n\");\n    buffer.append(\"Configured Cache Capacity: \"+cc+\" (\"+StringUtils.byteDesc(cc)+\")\"+\"\\n\");\n    buffer.append(\"Cache Used: \"+cu+\" (\"+StringUtils.byteDesc(cu)+\")\"+\"\\n\");\n    buffer.append(\"Cache Remaining: \" +cr+ \" (\"+StringUtils.byteDesc(cr)+\")\"+\"\\n\");\n    buffer.append(\"Cache Used%: \"+percent2String(cacheUsedPercent) + \"\\n\");\n    buffer.append(\"Cache Remaining%: \"+percent2String(cacheRemainingPercent) + \"\\n\");\n    buffer.append(\"Xceivers: \"+getXceiverCount()+\"\\n\");\n    buffer.append(\"Last contact: \"+new Date(lastUpdate)+\"\\n\");\n    return buffer.toString();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocol/DatanodeInfo.java",
      "extendedDetails": {}
    },
    "5c97db07fb306842f49d73a67a90cecec19a7833": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-8169. Move LocatedBlocks and related classes to hdfs-client. Contributed by Haohui Mai.\n",
      "commitDate": "20/04/15 12:36 AM",
      "commitName": "5c97db07fb306842f49d73a67a90cecec19a7833",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "19/04/15 4:09 PM",
      "commitNameOld": "8511d80804de052618168a456a475ee0f7aa6d8c",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 0.35,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public String getDatanodeReport() {\n    StringBuilder buffer \u003d new StringBuilder();\n    long c \u003d getCapacity();\n    long r \u003d getRemaining();\n    long u \u003d getDfsUsed();\n    long nonDFSUsed \u003d getNonDfsUsed();\n    float usedPercent \u003d getDfsUsedPercent();\n    float remainingPercent \u003d getRemainingPercent();\n    long cc \u003d getCacheCapacity();\n    long cr \u003d getCacheRemaining();\n    long cu \u003d getCacheUsed();\n    float cacheUsedPercent \u003d getCacheUsedPercent();\n    float cacheRemainingPercent \u003d getCacheRemainingPercent();\n    String lookupName \u003d NetUtils.getHostNameOfIP(getName());\n\n    buffer.append(\"Name: \"+ getName());\n    if (lookupName !\u003d null) {\n      buffer.append(\" (\" + lookupName + \")\");\n    }\n    buffer.append(\"\\n\");\n    buffer.append(\"Hostname: \" + getHostName() + \"\\n\");\n\n    if (!NetworkTopology.DEFAULT_RACK.equals(location)) {\n      buffer.append(\"Rack: \"+location+\"\\n\");\n    }\n    buffer.append(\"Decommission Status : \");\n    if (isDecommissioned()) {\n      buffer.append(\"Decommissioned\\n\");\n    } else if (isDecommissionInProgress()) {\n      buffer.append(\"Decommission in progress\\n\");\n    } else {\n      buffer.append(\"Normal\\n\");\n    }\n    buffer.append(\"Configured Capacity: \"+c+\" (\"+StringUtils.byteDesc(c)+\")\"+\"\\n\");\n    buffer.append(\"DFS Used: \"+u+\" (\"+StringUtils.byteDesc(u)+\")\"+\"\\n\");\n    buffer.append(\"Non DFS Used: \"+nonDFSUsed+\" (\"+StringUtils.byteDesc(nonDFSUsed)+\")\"+\"\\n\");\n    buffer.append(\"DFS Remaining: \" +r+ \" (\"+StringUtils.byteDesc(r)+\")\"+\"\\n\");\n    buffer.append(\"DFS Used%: \"+percent2String(usedPercent) + \"\\n\");\n    buffer.append(\"DFS Remaining%: \"+percent2String(remainingPercent) + \"\\n\");\n    buffer.append(\"Configured Cache Capacity: \"+cc+\" (\"+StringUtils.byteDesc(cc)+\")\"+\"\\n\");\n    buffer.append(\"Cache Used: \"+cu+\" (\"+StringUtils.byteDesc(cu)+\")\"+\"\\n\");\n    buffer.append(\"Cache Remaining: \" +cr+ \" (\"+StringUtils.byteDesc(cr)+\")\"+\"\\n\");\n    buffer.append(\"Cache Used%: \"+percent2String(cacheUsedPercent) + \"\\n\");\n    buffer.append(\"Cache Remaining%: \"+percent2String(cacheRemainingPercent) + \"\\n\");\n    buffer.append(\"Xceivers: \"+getXceiverCount()+\"\\n\");\n    buffer.append(\"Last contact: \"+new Date(lastUpdate)+\"\\n\");\n    return buffer.toString();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocol/DatanodeInfo.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/DatanodeInfo.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocol/DatanodeInfo.java"
      }
    },
    "551024915d487957d9e829493ab319c8e31dfa81": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6599. 2.4 addBlock is 10 to 20 times slower compared to 0.23 (daryn)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1611737 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/07/14 10:58 AM",
      "commitName": "551024915d487957d9e829493ab319c8e31dfa81",
      "commitAuthor": "Daryn Sharp",
      "commitDateOld": "03/05/14 4:02 AM",
      "commitNameOld": "b2f65c276da2c4420a0974a7e2d75e081abf5d63",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 76.29,
      "commitsBetweenForRepo": 476,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,48 +1,48 @@\n   public String getDatanodeReport() {\n     StringBuilder buffer \u003d new StringBuilder();\n     long c \u003d getCapacity();\n     long r \u003d getRemaining();\n     long u \u003d getDfsUsed();\n     long nonDFSUsed \u003d getNonDfsUsed();\n     float usedPercent \u003d getDfsUsedPercent();\n     float remainingPercent \u003d getRemainingPercent();\n     long cc \u003d getCacheCapacity();\n     long cr \u003d getCacheRemaining();\n     long cu \u003d getCacheUsed();\n     float cacheUsedPercent \u003d getCacheUsedPercent();\n     float cacheRemainingPercent \u003d getCacheRemainingPercent();\n     String lookupName \u003d NetUtils.getHostNameOfIP(getName());\n \n     buffer.append(\"Name: \"+ getName());\n     if (lookupName !\u003d null) {\n       buffer.append(\" (\" + lookupName + \")\");\n     }\n     buffer.append(\"\\n\");\n     buffer.append(\"Hostname: \" + getHostName() + \"\\n\");\n \n     if (!NetworkTopology.DEFAULT_RACK.equals(location)) {\n       buffer.append(\"Rack: \"+location+\"\\n\");\n     }\n     buffer.append(\"Decommission Status : \");\n     if (isDecommissioned()) {\n       buffer.append(\"Decommissioned\\n\");\n     } else if (isDecommissionInProgress()) {\n       buffer.append(\"Decommission in progress\\n\");\n     } else {\n       buffer.append(\"Normal\\n\");\n     }\n     buffer.append(\"Configured Capacity: \"+c+\" (\"+StringUtils.byteDesc(c)+\")\"+\"\\n\");\n     buffer.append(\"DFS Used: \"+u+\" (\"+StringUtils.byteDesc(u)+\")\"+\"\\n\");\n     buffer.append(\"Non DFS Used: \"+nonDFSUsed+\" (\"+StringUtils.byteDesc(nonDFSUsed)+\")\"+\"\\n\");\n     buffer.append(\"DFS Remaining: \" +r+ \" (\"+StringUtils.byteDesc(r)+\")\"+\"\\n\");\n     buffer.append(\"DFS Used%: \"+percent2String(usedPercent) + \"\\n\");\n     buffer.append(\"DFS Remaining%: \"+percent2String(remainingPercent) + \"\\n\");\n     buffer.append(\"Configured Cache Capacity: \"+cc+\" (\"+StringUtils.byteDesc(cc)+\")\"+\"\\n\");\n     buffer.append(\"Cache Used: \"+cu+\" (\"+StringUtils.byteDesc(cu)+\")\"+\"\\n\");\n     buffer.append(\"Cache Remaining: \" +cr+ \" (\"+StringUtils.byteDesc(cr)+\")\"+\"\\n\");\n     buffer.append(\"Cache Used%: \"+percent2String(cacheUsedPercent) + \"\\n\");\n     buffer.append(\"Cache Remaining%: \"+percent2String(cacheRemainingPercent) + \"\\n\");\n-\n+    buffer.append(\"Xceivers: \"+getXceiverCount()+\"\\n\");\n     buffer.append(\"Last contact: \"+new Date(lastUpdate)+\"\\n\");\n     return buffer.toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String getDatanodeReport() {\n    StringBuilder buffer \u003d new StringBuilder();\n    long c \u003d getCapacity();\n    long r \u003d getRemaining();\n    long u \u003d getDfsUsed();\n    long nonDFSUsed \u003d getNonDfsUsed();\n    float usedPercent \u003d getDfsUsedPercent();\n    float remainingPercent \u003d getRemainingPercent();\n    long cc \u003d getCacheCapacity();\n    long cr \u003d getCacheRemaining();\n    long cu \u003d getCacheUsed();\n    float cacheUsedPercent \u003d getCacheUsedPercent();\n    float cacheRemainingPercent \u003d getCacheRemainingPercent();\n    String lookupName \u003d NetUtils.getHostNameOfIP(getName());\n\n    buffer.append(\"Name: \"+ getName());\n    if (lookupName !\u003d null) {\n      buffer.append(\" (\" + lookupName + \")\");\n    }\n    buffer.append(\"\\n\");\n    buffer.append(\"Hostname: \" + getHostName() + \"\\n\");\n\n    if (!NetworkTopology.DEFAULT_RACK.equals(location)) {\n      buffer.append(\"Rack: \"+location+\"\\n\");\n    }\n    buffer.append(\"Decommission Status : \");\n    if (isDecommissioned()) {\n      buffer.append(\"Decommissioned\\n\");\n    } else if (isDecommissionInProgress()) {\n      buffer.append(\"Decommission in progress\\n\");\n    } else {\n      buffer.append(\"Normal\\n\");\n    }\n    buffer.append(\"Configured Capacity: \"+c+\" (\"+StringUtils.byteDesc(c)+\")\"+\"\\n\");\n    buffer.append(\"DFS Used: \"+u+\" (\"+StringUtils.byteDesc(u)+\")\"+\"\\n\");\n    buffer.append(\"Non DFS Used: \"+nonDFSUsed+\" (\"+StringUtils.byteDesc(nonDFSUsed)+\")\"+\"\\n\");\n    buffer.append(\"DFS Remaining: \" +r+ \" (\"+StringUtils.byteDesc(r)+\")\"+\"\\n\");\n    buffer.append(\"DFS Used%: \"+percent2String(usedPercent) + \"\\n\");\n    buffer.append(\"DFS Remaining%: \"+percent2String(remainingPercent) + \"\\n\");\n    buffer.append(\"Configured Cache Capacity: \"+cc+\" (\"+StringUtils.byteDesc(cc)+\")\"+\"\\n\");\n    buffer.append(\"Cache Used: \"+cu+\" (\"+StringUtils.byteDesc(cu)+\")\"+\"\\n\");\n    buffer.append(\"Cache Remaining: \" +cr+ \" (\"+StringUtils.byteDesc(cr)+\")\"+\"\\n\");\n    buffer.append(\"Cache Used%: \"+percent2String(cacheUsedPercent) + \"\\n\");\n    buffer.append(\"Cache Remaining%: \"+percent2String(cacheRemainingPercent) + \"\\n\");\n    buffer.append(\"Xceivers: \"+getXceiverCount()+\"\\n\");\n    buffer.append(\"Last contact: \"+new Date(lastUpdate)+\"\\n\");\n    return buffer.toString();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/DatanodeInfo.java",
      "extendedDetails": {}
    },
    "950e0644b79e0c0514dd036dcf19b9645df0982f": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5626. dfsadmin report shows incorrect values (cmccabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1548000 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/12/13 6:59 PM",
      "commitName": "950e0644b79e0c0514dd036dcf19b9645df0982f",
      "commitAuthor": "Colin McCabe",
      "commitDateOld": "16/10/13 7:14 PM",
      "commitNameOld": "34f08944b7c8d58f531a3f3bf3d4ee4cd3fa643a",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 49.03,
      "commitsBetweenForRepo": 252,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,48 +1,48 @@\n   public String getDatanodeReport() {\n     StringBuilder buffer \u003d new StringBuilder();\n     long c \u003d getCapacity();\n     long r \u003d getRemaining();\n     long u \u003d getDfsUsed();\n     long nonDFSUsed \u003d getNonDfsUsed();\n     float usedPercent \u003d getDfsUsedPercent();\n     float remainingPercent \u003d getRemainingPercent();\n     long cc \u003d getCacheCapacity();\n     long cr \u003d getCacheRemaining();\n     long cu \u003d getCacheUsed();\n     float cacheUsedPercent \u003d getCacheUsedPercent();\n     float cacheRemainingPercent \u003d getCacheRemainingPercent();\n     String lookupName \u003d NetUtils.getHostNameOfIP(getName());\n \n     buffer.append(\"Name: \"+ getName());\n     if (lookupName !\u003d null) {\n       buffer.append(\" (\" + lookupName + \")\");\n     }\n     buffer.append(\"\\n\");\n     buffer.append(\"Hostname: \" + getHostName() + \"\\n\");\n \n     if (!NetworkTopology.DEFAULT_RACK.equals(location)) {\n       buffer.append(\"Rack: \"+location+\"\\n\");\n     }\n     buffer.append(\"Decommission Status : \");\n     if (isDecommissioned()) {\n       buffer.append(\"Decommissioned\\n\");\n     } else if (isDecommissionInProgress()) {\n       buffer.append(\"Decommission in progress\\n\");\n     } else {\n       buffer.append(\"Normal\\n\");\n     }\n     buffer.append(\"Configured Capacity: \"+c+\" (\"+StringUtils.byteDesc(c)+\")\"+\"\\n\");\n     buffer.append(\"DFS Used: \"+u+\" (\"+StringUtils.byteDesc(u)+\")\"+\"\\n\");\n     buffer.append(\"Non DFS Used: \"+nonDFSUsed+\" (\"+StringUtils.byteDesc(nonDFSUsed)+\")\"+\"\\n\");\n     buffer.append(\"DFS Remaining: \" +r+ \" (\"+StringUtils.byteDesc(r)+\")\"+\"\\n\");\n     buffer.append(\"DFS Used%: \"+percent2String(usedPercent) + \"\\n\");\n     buffer.append(\"DFS Remaining%: \"+percent2String(remainingPercent) + \"\\n\");\n-    buffer.append(\"Configured Cache Capacity: \"+c+\" (\"+StringUtils.byteDesc(cc)+\")\"+\"\\n\");\n-    buffer.append(\"Cache Used: \"+cu+\" (\"+StringUtils.byteDesc(u)+\")\"+\"\\n\");\n-    buffer.append(\"Cache Remaining: \" +cr+ \" (\"+StringUtils.byteDesc(r)+\")\"+\"\\n\");\n+    buffer.append(\"Configured Cache Capacity: \"+cc+\" (\"+StringUtils.byteDesc(cc)+\")\"+\"\\n\");\n+    buffer.append(\"Cache Used: \"+cu+\" (\"+StringUtils.byteDesc(cu)+\")\"+\"\\n\");\n+    buffer.append(\"Cache Remaining: \" +cr+ \" (\"+StringUtils.byteDesc(cr)+\")\"+\"\\n\");\n     buffer.append(\"Cache Used%: \"+percent2String(cacheUsedPercent) + \"\\n\");\n     buffer.append(\"Cache Remaining%: \"+percent2String(cacheRemainingPercent) + \"\\n\");\n \n     buffer.append(\"Last contact: \"+new Date(lastUpdate)+\"\\n\");\n     return buffer.toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String getDatanodeReport() {\n    StringBuilder buffer \u003d new StringBuilder();\n    long c \u003d getCapacity();\n    long r \u003d getRemaining();\n    long u \u003d getDfsUsed();\n    long nonDFSUsed \u003d getNonDfsUsed();\n    float usedPercent \u003d getDfsUsedPercent();\n    float remainingPercent \u003d getRemainingPercent();\n    long cc \u003d getCacheCapacity();\n    long cr \u003d getCacheRemaining();\n    long cu \u003d getCacheUsed();\n    float cacheUsedPercent \u003d getCacheUsedPercent();\n    float cacheRemainingPercent \u003d getCacheRemainingPercent();\n    String lookupName \u003d NetUtils.getHostNameOfIP(getName());\n\n    buffer.append(\"Name: \"+ getName());\n    if (lookupName !\u003d null) {\n      buffer.append(\" (\" + lookupName + \")\");\n    }\n    buffer.append(\"\\n\");\n    buffer.append(\"Hostname: \" + getHostName() + \"\\n\");\n\n    if (!NetworkTopology.DEFAULT_RACK.equals(location)) {\n      buffer.append(\"Rack: \"+location+\"\\n\");\n    }\n    buffer.append(\"Decommission Status : \");\n    if (isDecommissioned()) {\n      buffer.append(\"Decommissioned\\n\");\n    } else if (isDecommissionInProgress()) {\n      buffer.append(\"Decommission in progress\\n\");\n    } else {\n      buffer.append(\"Normal\\n\");\n    }\n    buffer.append(\"Configured Capacity: \"+c+\" (\"+StringUtils.byteDesc(c)+\")\"+\"\\n\");\n    buffer.append(\"DFS Used: \"+u+\" (\"+StringUtils.byteDesc(u)+\")\"+\"\\n\");\n    buffer.append(\"Non DFS Used: \"+nonDFSUsed+\" (\"+StringUtils.byteDesc(nonDFSUsed)+\")\"+\"\\n\");\n    buffer.append(\"DFS Remaining: \" +r+ \" (\"+StringUtils.byteDesc(r)+\")\"+\"\\n\");\n    buffer.append(\"DFS Used%: \"+percent2String(usedPercent) + \"\\n\");\n    buffer.append(\"DFS Remaining%: \"+percent2String(remainingPercent) + \"\\n\");\n    buffer.append(\"Configured Cache Capacity: \"+cc+\" (\"+StringUtils.byteDesc(cc)+\")\"+\"\\n\");\n    buffer.append(\"Cache Used: \"+cu+\" (\"+StringUtils.byteDesc(cu)+\")\"+\"\\n\");\n    buffer.append(\"Cache Remaining: \" +cr+ \" (\"+StringUtils.byteDesc(cr)+\")\"+\"\\n\");\n    buffer.append(\"Cache Used%: \"+percent2String(cacheUsedPercent) + \"\\n\");\n    buffer.append(\"Cache Remaining%: \"+percent2String(cacheRemainingPercent) + \"\\n\");\n\n    buffer.append(\"Last contact: \"+new Date(lastUpdate)+\"\\n\");\n    return buffer.toString();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/DatanodeInfo.java",
      "extendedDetails": {}
    },
    "fc14a92c6b46cc435a8f33e6fa0512c70caa06e0": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5141. Add cache status information to datanode heartbeat. (Contributed by Andrew Wang)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4949@1519101 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/08/13 3:15 PM",
      "commitName": "fc14a92c6b46cc435a8f33e6fa0512c70caa06e0",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "21/07/13 10:28 PM",
      "commitNameOld": "febcf4d66969521d33762eec3c9a884ab77f8162",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 39.7,
      "commitsBetweenForRepo": 158,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,48 @@\n   public String getDatanodeReport() {\n     StringBuilder buffer \u003d new StringBuilder();\n     long c \u003d getCapacity();\n     long r \u003d getRemaining();\n     long u \u003d getDfsUsed();\n     long nonDFSUsed \u003d getNonDfsUsed();\n     float usedPercent \u003d getDfsUsedPercent();\n     float remainingPercent \u003d getRemainingPercent();\n+    long cc \u003d getCacheCapacity();\n+    long cr \u003d getCacheRemaining();\n+    long cu \u003d getCacheUsed();\n+    float cacheUsedPercent \u003d getCacheUsedPercent();\n+    float cacheRemainingPercent \u003d getCacheRemainingPercent();\n     String lookupName \u003d NetUtils.getHostNameOfIP(getName());\n \n     buffer.append(\"Name: \"+ getName());\n     if (lookupName !\u003d null) {\n       buffer.append(\" (\" + lookupName + \")\");\n     }\n     buffer.append(\"\\n\");\n     buffer.append(\"Hostname: \" + getHostName() + \"\\n\");\n \n     if (!NetworkTopology.DEFAULT_RACK.equals(location)) {\n       buffer.append(\"Rack: \"+location+\"\\n\");\n     }\n     buffer.append(\"Decommission Status : \");\n     if (isDecommissioned()) {\n       buffer.append(\"Decommissioned\\n\");\n     } else if (isDecommissionInProgress()) {\n       buffer.append(\"Decommission in progress\\n\");\n     } else {\n       buffer.append(\"Normal\\n\");\n     }\n     buffer.append(\"Configured Capacity: \"+c+\" (\"+StringUtils.byteDesc(c)+\")\"+\"\\n\");\n     buffer.append(\"DFS Used: \"+u+\" (\"+StringUtils.byteDesc(u)+\")\"+\"\\n\");\n     buffer.append(\"Non DFS Used: \"+nonDFSUsed+\" (\"+StringUtils.byteDesc(nonDFSUsed)+\")\"+\"\\n\");\n     buffer.append(\"DFS Remaining: \" +r+ \" (\"+StringUtils.byteDesc(r)+\")\"+\"\\n\");\n     buffer.append(\"DFS Used%: \"+percent2String(usedPercent) + \"\\n\");\n     buffer.append(\"DFS Remaining%: \"+percent2String(remainingPercent) + \"\\n\");\n+    buffer.append(\"Configured Cache Capacity: \"+c+\" (\"+StringUtils.byteDesc(cc)+\")\"+\"\\n\");\n+    buffer.append(\"Cache Used: \"+cu+\" (\"+StringUtils.byteDesc(u)+\")\"+\"\\n\");\n+    buffer.append(\"Cache Remaining: \" +cr+ \" (\"+StringUtils.byteDesc(r)+\")\"+\"\\n\");\n+    buffer.append(\"Cache Used%: \"+percent2String(cacheUsedPercent) + \"\\n\");\n+    buffer.append(\"Cache Remaining%: \"+percent2String(cacheRemainingPercent) + \"\\n\");\n+\n     buffer.append(\"Last contact: \"+new Date(lastUpdate)+\"\\n\");\n     return buffer.toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String getDatanodeReport() {\n    StringBuilder buffer \u003d new StringBuilder();\n    long c \u003d getCapacity();\n    long r \u003d getRemaining();\n    long u \u003d getDfsUsed();\n    long nonDFSUsed \u003d getNonDfsUsed();\n    float usedPercent \u003d getDfsUsedPercent();\n    float remainingPercent \u003d getRemainingPercent();\n    long cc \u003d getCacheCapacity();\n    long cr \u003d getCacheRemaining();\n    long cu \u003d getCacheUsed();\n    float cacheUsedPercent \u003d getCacheUsedPercent();\n    float cacheRemainingPercent \u003d getCacheRemainingPercent();\n    String lookupName \u003d NetUtils.getHostNameOfIP(getName());\n\n    buffer.append(\"Name: \"+ getName());\n    if (lookupName !\u003d null) {\n      buffer.append(\" (\" + lookupName + \")\");\n    }\n    buffer.append(\"\\n\");\n    buffer.append(\"Hostname: \" + getHostName() + \"\\n\");\n\n    if (!NetworkTopology.DEFAULT_RACK.equals(location)) {\n      buffer.append(\"Rack: \"+location+\"\\n\");\n    }\n    buffer.append(\"Decommission Status : \");\n    if (isDecommissioned()) {\n      buffer.append(\"Decommissioned\\n\");\n    } else if (isDecommissionInProgress()) {\n      buffer.append(\"Decommission in progress\\n\");\n    } else {\n      buffer.append(\"Normal\\n\");\n    }\n    buffer.append(\"Configured Capacity: \"+c+\" (\"+StringUtils.byteDesc(c)+\")\"+\"\\n\");\n    buffer.append(\"DFS Used: \"+u+\" (\"+StringUtils.byteDesc(u)+\")\"+\"\\n\");\n    buffer.append(\"Non DFS Used: \"+nonDFSUsed+\" (\"+StringUtils.byteDesc(nonDFSUsed)+\")\"+\"\\n\");\n    buffer.append(\"DFS Remaining: \" +r+ \" (\"+StringUtils.byteDesc(r)+\")\"+\"\\n\");\n    buffer.append(\"DFS Used%: \"+percent2String(usedPercent) + \"\\n\");\n    buffer.append(\"DFS Remaining%: \"+percent2String(remainingPercent) + \"\\n\");\n    buffer.append(\"Configured Cache Capacity: \"+c+\" (\"+StringUtils.byteDesc(cc)+\")\"+\"\\n\");\n    buffer.append(\"Cache Used: \"+cu+\" (\"+StringUtils.byteDesc(u)+\")\"+\"\\n\");\n    buffer.append(\"Cache Remaining: \" +cr+ \" (\"+StringUtils.byteDesc(r)+\")\"+\"\\n\");\n    buffer.append(\"Cache Used%: \"+percent2String(cacheUsedPercent) + \"\\n\");\n    buffer.append(\"Cache Remaining%: \"+percent2String(cacheRemainingPercent) + \"\\n\");\n\n    buffer.append(\"Last contact: \"+new Date(lastUpdate)+\"\\n\");\n    return buffer.toString();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/DatanodeInfo.java",
      "extendedDetails": {}
    },
    "e28edbffe15e9d176d14ea2af8d9460d807b3fc4": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4468.  Use the new StringUtils methods added by HADOOP-9252 and fix TestHDFSCLI and TestQuota.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1442824 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/02/13 5:13 PM",
      "commitName": "e28edbffe15e9d176d14ea2af8d9460d807b3fc4",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "17/10/12 2:34 PM",
      "commitNameOld": "4d5600f6c714732d16bed29f0bc210eb72901545",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 111.15,
      "commitsBetweenForRepo": 514,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,37 @@\n   public String getDatanodeReport() {\n     StringBuilder buffer \u003d new StringBuilder();\n     long c \u003d getCapacity();\n     long r \u003d getRemaining();\n     long u \u003d getDfsUsed();\n     long nonDFSUsed \u003d getNonDfsUsed();\n     float usedPercent \u003d getDfsUsedPercent();\n     float remainingPercent \u003d getRemainingPercent();\n     String lookupName \u003d NetUtils.getHostNameOfIP(getName());\n \n     buffer.append(\"Name: \"+ getName());\n     if (lookupName !\u003d null) {\n       buffer.append(\" (\" + lookupName + \")\");\n     }\n     buffer.append(\"\\n\");\n     buffer.append(\"Hostname: \" + getHostName() + \"\\n\");\n \n     if (!NetworkTopology.DEFAULT_RACK.equals(location)) {\n       buffer.append(\"Rack: \"+location+\"\\n\");\n     }\n     buffer.append(\"Decommission Status : \");\n     if (isDecommissioned()) {\n       buffer.append(\"Decommissioned\\n\");\n     } else if (isDecommissionInProgress()) {\n       buffer.append(\"Decommission in progress\\n\");\n     } else {\n       buffer.append(\"Normal\\n\");\n     }\n     buffer.append(\"Configured Capacity: \"+c+\" (\"+StringUtils.byteDesc(c)+\")\"+\"\\n\");\n     buffer.append(\"DFS Used: \"+u+\" (\"+StringUtils.byteDesc(u)+\")\"+\"\\n\");\n     buffer.append(\"Non DFS Used: \"+nonDFSUsed+\" (\"+StringUtils.byteDesc(nonDFSUsed)+\")\"+\"\\n\");\n     buffer.append(\"DFS Remaining: \" +r+ \" (\"+StringUtils.byteDesc(r)+\")\"+\"\\n\");\n-    buffer.append(\"DFS Used%: \"+StringUtils.limitDecimalTo2(usedPercent)+\"%\\n\");\n-    buffer.append(\"DFS Remaining%: \"+StringUtils.limitDecimalTo2(remainingPercent)+\"%\\n\");\n+    buffer.append(\"DFS Used%: \"+percent2String(usedPercent) + \"\\n\");\n+    buffer.append(\"DFS Remaining%: \"+percent2String(remainingPercent) + \"\\n\");\n     buffer.append(\"Last contact: \"+new Date(lastUpdate)+\"\\n\");\n     return buffer.toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String getDatanodeReport() {\n    StringBuilder buffer \u003d new StringBuilder();\n    long c \u003d getCapacity();\n    long r \u003d getRemaining();\n    long u \u003d getDfsUsed();\n    long nonDFSUsed \u003d getNonDfsUsed();\n    float usedPercent \u003d getDfsUsedPercent();\n    float remainingPercent \u003d getRemainingPercent();\n    String lookupName \u003d NetUtils.getHostNameOfIP(getName());\n\n    buffer.append(\"Name: \"+ getName());\n    if (lookupName !\u003d null) {\n      buffer.append(\" (\" + lookupName + \")\");\n    }\n    buffer.append(\"\\n\");\n    buffer.append(\"Hostname: \" + getHostName() + \"\\n\");\n\n    if (!NetworkTopology.DEFAULT_RACK.equals(location)) {\n      buffer.append(\"Rack: \"+location+\"\\n\");\n    }\n    buffer.append(\"Decommission Status : \");\n    if (isDecommissioned()) {\n      buffer.append(\"Decommissioned\\n\");\n    } else if (isDecommissionInProgress()) {\n      buffer.append(\"Decommission in progress\\n\");\n    } else {\n      buffer.append(\"Normal\\n\");\n    }\n    buffer.append(\"Configured Capacity: \"+c+\" (\"+StringUtils.byteDesc(c)+\")\"+\"\\n\");\n    buffer.append(\"DFS Used: \"+u+\" (\"+StringUtils.byteDesc(u)+\")\"+\"\\n\");\n    buffer.append(\"Non DFS Used: \"+nonDFSUsed+\" (\"+StringUtils.byteDesc(nonDFSUsed)+\")\"+\"\\n\");\n    buffer.append(\"DFS Remaining: \" +r+ \" (\"+StringUtils.byteDesc(r)+\")\"+\"\\n\");\n    buffer.append(\"DFS Used%: \"+percent2String(usedPercent) + \"\\n\");\n    buffer.append(\"DFS Remaining%: \"+percent2String(remainingPercent) + \"\\n\");\n    buffer.append(\"Last contact: \"+new Date(lastUpdate)+\"\\n\");\n    return buffer.toString();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/DatanodeInfo.java",
      "extendedDetails": {}
    },
    "be7dd8333a7e56e732171db0781786987de03195": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3144. Refactor DatanodeID#getName by use. Contributed by Eli Collins\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1308205 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "01/04/12 3:12 PM",
      "commitName": "be7dd8333a7e56e732171db0781786987de03195",
      "commitAuthor": "Eli Collins",
      "commitDateOld": "31/03/12 12:58 PM",
      "commitNameOld": "8bd825bb6f35fd6fef397e3ccae0898bf7bed201",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 1.09,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,37 @@\n   public String getDatanodeReport() {\n     StringBuilder buffer \u003d new StringBuilder();\n     long c \u003d getCapacity();\n     long r \u003d getRemaining();\n     long u \u003d getDfsUsed();\n     long nonDFSUsed \u003d getNonDfsUsed();\n     float usedPercent \u003d getDfsUsedPercent();\n     float remainingPercent \u003d getRemainingPercent();\n-    String lookupName \u003d NetUtils.getHostNameOfIP(name);\n+    String lookupName \u003d NetUtils.getHostNameOfIP(getName());\n \n-    buffer.append(\"Name: \"+ name);\n+    buffer.append(\"Name: \"+ getName());\n     if (lookupName !\u003d null) {\n       buffer.append(\" (\" + lookupName + \")\");\n     }\n     buffer.append(\"\\n\");\n     buffer.append(\"Hostname: \" + getHostName() + \"\\n\");\n \n     if (!NetworkTopology.DEFAULT_RACK.equals(location)) {\n       buffer.append(\"Rack: \"+location+\"\\n\");\n     }\n     buffer.append(\"Decommission Status : \");\n     if (isDecommissioned()) {\n       buffer.append(\"Decommissioned\\n\");\n     } else if (isDecommissionInProgress()) {\n       buffer.append(\"Decommission in progress\\n\");\n     } else {\n       buffer.append(\"Normal\\n\");\n     }\n     buffer.append(\"Configured Capacity: \"+c+\" (\"+StringUtils.byteDesc(c)+\")\"+\"\\n\");\n     buffer.append(\"DFS Used: \"+u+\" (\"+StringUtils.byteDesc(u)+\")\"+\"\\n\");\n     buffer.append(\"Non DFS Used: \"+nonDFSUsed+\" (\"+StringUtils.byteDesc(nonDFSUsed)+\")\"+\"\\n\");\n     buffer.append(\"DFS Remaining: \" +r+ \" (\"+StringUtils.byteDesc(r)+\")\"+\"\\n\");\n     buffer.append(\"DFS Used%: \"+StringUtils.limitDecimalTo2(usedPercent)+\"%\\n\");\n     buffer.append(\"DFS Remaining%: \"+StringUtils.limitDecimalTo2(remainingPercent)+\"%\\n\");\n     buffer.append(\"Last contact: \"+new Date(lastUpdate)+\"\\n\");\n     return buffer.toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String getDatanodeReport() {\n    StringBuilder buffer \u003d new StringBuilder();\n    long c \u003d getCapacity();\n    long r \u003d getRemaining();\n    long u \u003d getDfsUsed();\n    long nonDFSUsed \u003d getNonDfsUsed();\n    float usedPercent \u003d getDfsUsedPercent();\n    float remainingPercent \u003d getRemainingPercent();\n    String lookupName \u003d NetUtils.getHostNameOfIP(getName());\n\n    buffer.append(\"Name: \"+ getName());\n    if (lookupName !\u003d null) {\n      buffer.append(\" (\" + lookupName + \")\");\n    }\n    buffer.append(\"\\n\");\n    buffer.append(\"Hostname: \" + getHostName() + \"\\n\");\n\n    if (!NetworkTopology.DEFAULT_RACK.equals(location)) {\n      buffer.append(\"Rack: \"+location+\"\\n\");\n    }\n    buffer.append(\"Decommission Status : \");\n    if (isDecommissioned()) {\n      buffer.append(\"Decommissioned\\n\");\n    } else if (isDecommissionInProgress()) {\n      buffer.append(\"Decommission in progress\\n\");\n    } else {\n      buffer.append(\"Normal\\n\");\n    }\n    buffer.append(\"Configured Capacity: \"+c+\" (\"+StringUtils.byteDesc(c)+\")\"+\"\\n\");\n    buffer.append(\"DFS Used: \"+u+\" (\"+StringUtils.byteDesc(u)+\")\"+\"\\n\");\n    buffer.append(\"Non DFS Used: \"+nonDFSUsed+\" (\"+StringUtils.byteDesc(nonDFSUsed)+\")\"+\"\\n\");\n    buffer.append(\"DFS Remaining: \" +r+ \" (\"+StringUtils.byteDesc(r)+\")\"+\"\\n\");\n    buffer.append(\"DFS Used%: \"+StringUtils.limitDecimalTo2(usedPercent)+\"%\\n\");\n    buffer.append(\"DFS Remaining%: \"+StringUtils.limitDecimalTo2(remainingPercent)+\"%\\n\");\n    buffer.append(\"Last contact: \"+new Date(lastUpdate)+\"\\n\");\n    return buffer.toString();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/DatanodeInfo.java",
      "extendedDetails": {}
    },
    "0475795066ad89fc3ac4bfbe0dbe061555f3fbf7": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3139. Minor Datanode logging improvement. Contributed by Eli Collins\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1306549 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/03/12 12:33 PM",
      "commitName": "0475795066ad89fc3ac4bfbe0dbe061555f3fbf7",
      "commitAuthor": "Eli Collins",
      "commitDateOld": "14/12/11 12:20 AM",
      "commitNameOld": "60dd76c6abcba6db77ff439f57e07fda76867b64",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 105.47,
      "commitsBetweenForRepo": 727,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,37 @@\n   public String getDatanodeReport() {\n     StringBuilder buffer \u003d new StringBuilder();\n     long c \u003d getCapacity();\n     long r \u003d getRemaining();\n     long u \u003d getDfsUsed();\n     long nonDFSUsed \u003d getNonDfsUsed();\n     float usedPercent \u003d getDfsUsedPercent();\n     float remainingPercent \u003d getRemainingPercent();\n-    String hostName \u003d NetUtils.getHostNameOfIP(name);\n+    String lookupName \u003d NetUtils.getHostNameOfIP(name);\n \n     buffer.append(\"Name: \"+ name);\n-    if(hostName !\u003d null)\n-      buffer.append(\" (\" + hostName + \")\");\n+    if (lookupName !\u003d null) {\n+      buffer.append(\" (\" + lookupName + \")\");\n+    }\n     buffer.append(\"\\n\");\n+    buffer.append(\"Hostname: \" + getHostName() + \"\\n\");\n \n     if (!NetworkTopology.DEFAULT_RACK.equals(location)) {\n       buffer.append(\"Rack: \"+location+\"\\n\");\n     }\n     buffer.append(\"Decommission Status : \");\n     if (isDecommissioned()) {\n       buffer.append(\"Decommissioned\\n\");\n     } else if (isDecommissionInProgress()) {\n       buffer.append(\"Decommission in progress\\n\");\n     } else {\n       buffer.append(\"Normal\\n\");\n     }\n     buffer.append(\"Configured Capacity: \"+c+\" (\"+StringUtils.byteDesc(c)+\")\"+\"\\n\");\n     buffer.append(\"DFS Used: \"+u+\" (\"+StringUtils.byteDesc(u)+\")\"+\"\\n\");\n     buffer.append(\"Non DFS Used: \"+nonDFSUsed+\" (\"+StringUtils.byteDesc(nonDFSUsed)+\")\"+\"\\n\");\n     buffer.append(\"DFS Remaining: \" +r+ \" (\"+StringUtils.byteDesc(r)+\")\"+\"\\n\");\n     buffer.append(\"DFS Used%: \"+StringUtils.limitDecimalTo2(usedPercent)+\"%\\n\");\n     buffer.append(\"DFS Remaining%: \"+StringUtils.limitDecimalTo2(remainingPercent)+\"%\\n\");\n     buffer.append(\"Last contact: \"+new Date(lastUpdate)+\"\\n\");\n     return buffer.toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String getDatanodeReport() {\n    StringBuilder buffer \u003d new StringBuilder();\n    long c \u003d getCapacity();\n    long r \u003d getRemaining();\n    long u \u003d getDfsUsed();\n    long nonDFSUsed \u003d getNonDfsUsed();\n    float usedPercent \u003d getDfsUsedPercent();\n    float remainingPercent \u003d getRemainingPercent();\n    String lookupName \u003d NetUtils.getHostNameOfIP(name);\n\n    buffer.append(\"Name: \"+ name);\n    if (lookupName !\u003d null) {\n      buffer.append(\" (\" + lookupName + \")\");\n    }\n    buffer.append(\"\\n\");\n    buffer.append(\"Hostname: \" + getHostName() + \"\\n\");\n\n    if (!NetworkTopology.DEFAULT_RACK.equals(location)) {\n      buffer.append(\"Rack: \"+location+\"\\n\");\n    }\n    buffer.append(\"Decommission Status : \");\n    if (isDecommissioned()) {\n      buffer.append(\"Decommissioned\\n\");\n    } else if (isDecommissionInProgress()) {\n      buffer.append(\"Decommission in progress\\n\");\n    } else {\n      buffer.append(\"Normal\\n\");\n    }\n    buffer.append(\"Configured Capacity: \"+c+\" (\"+StringUtils.byteDesc(c)+\")\"+\"\\n\");\n    buffer.append(\"DFS Used: \"+u+\" (\"+StringUtils.byteDesc(u)+\")\"+\"\\n\");\n    buffer.append(\"Non DFS Used: \"+nonDFSUsed+\" (\"+StringUtils.byteDesc(nonDFSUsed)+\")\"+\"\\n\");\n    buffer.append(\"DFS Remaining: \" +r+ \" (\"+StringUtils.byteDesc(r)+\")\"+\"\\n\");\n    buffer.append(\"DFS Used%: \"+StringUtils.limitDecimalTo2(usedPercent)+\"%\\n\");\n    buffer.append(\"DFS Remaining%: \"+StringUtils.limitDecimalTo2(remainingPercent)+\"%\\n\");\n    buffer.append(\"Last contact: \"+new Date(lastUpdate)+\"\\n\");\n    return buffer.toString();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/DatanodeInfo.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public String getDatanodeReport() {\n    StringBuilder buffer \u003d new StringBuilder();\n    long c \u003d getCapacity();\n    long r \u003d getRemaining();\n    long u \u003d getDfsUsed();\n    long nonDFSUsed \u003d getNonDfsUsed();\n    float usedPercent \u003d getDfsUsedPercent();\n    float remainingPercent \u003d getRemainingPercent();\n    String hostName \u003d NetUtils.getHostNameOfIP(name);\n\n    buffer.append(\"Name: \"+ name);\n    if(hostName !\u003d null)\n      buffer.append(\" (\" + hostName + \")\");\n    buffer.append(\"\\n\");\n\n    if (!NetworkTopology.DEFAULT_RACK.equals(location)) {\n      buffer.append(\"Rack: \"+location+\"\\n\");\n    }\n    buffer.append(\"Decommission Status : \");\n    if (isDecommissioned()) {\n      buffer.append(\"Decommissioned\\n\");\n    } else if (isDecommissionInProgress()) {\n      buffer.append(\"Decommission in progress\\n\");\n    } else {\n      buffer.append(\"Normal\\n\");\n    }\n    buffer.append(\"Configured Capacity: \"+c+\" (\"+StringUtils.byteDesc(c)+\")\"+\"\\n\");\n    buffer.append(\"DFS Used: \"+u+\" (\"+StringUtils.byteDesc(u)+\")\"+\"\\n\");\n    buffer.append(\"Non DFS Used: \"+nonDFSUsed+\" (\"+StringUtils.byteDesc(nonDFSUsed)+\")\"+\"\\n\");\n    buffer.append(\"DFS Remaining: \" +r+ \" (\"+StringUtils.byteDesc(r)+\")\"+\"\\n\");\n    buffer.append(\"DFS Used%: \"+StringUtils.limitDecimalTo2(usedPercent)+\"%\\n\");\n    buffer.append(\"DFS Remaining%: \"+StringUtils.limitDecimalTo2(remainingPercent)+\"%\\n\");\n    buffer.append(\"Last contact: \"+new Date(lastUpdate)+\"\\n\");\n    return buffer.toString();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/DatanodeInfo.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/DatanodeInfo.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/DatanodeInfo.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public String getDatanodeReport() {\n    StringBuilder buffer \u003d new StringBuilder();\n    long c \u003d getCapacity();\n    long r \u003d getRemaining();\n    long u \u003d getDfsUsed();\n    long nonDFSUsed \u003d getNonDfsUsed();\n    float usedPercent \u003d getDfsUsedPercent();\n    float remainingPercent \u003d getRemainingPercent();\n    String hostName \u003d NetUtils.getHostNameOfIP(name);\n\n    buffer.append(\"Name: \"+ name);\n    if(hostName !\u003d null)\n      buffer.append(\" (\" + hostName + \")\");\n    buffer.append(\"\\n\");\n\n    if (!NetworkTopology.DEFAULT_RACK.equals(location)) {\n      buffer.append(\"Rack: \"+location+\"\\n\");\n    }\n    buffer.append(\"Decommission Status : \");\n    if (isDecommissioned()) {\n      buffer.append(\"Decommissioned\\n\");\n    } else if (isDecommissionInProgress()) {\n      buffer.append(\"Decommission in progress\\n\");\n    } else {\n      buffer.append(\"Normal\\n\");\n    }\n    buffer.append(\"Configured Capacity: \"+c+\" (\"+StringUtils.byteDesc(c)+\")\"+\"\\n\");\n    buffer.append(\"DFS Used: \"+u+\" (\"+StringUtils.byteDesc(u)+\")\"+\"\\n\");\n    buffer.append(\"Non DFS Used: \"+nonDFSUsed+\" (\"+StringUtils.byteDesc(nonDFSUsed)+\")\"+\"\\n\");\n    buffer.append(\"DFS Remaining: \" +r+ \" (\"+StringUtils.byteDesc(r)+\")\"+\"\\n\");\n    buffer.append(\"DFS Used%: \"+StringUtils.limitDecimalTo2(usedPercent)+\"%\\n\");\n    buffer.append(\"DFS Remaining%: \"+StringUtils.limitDecimalTo2(remainingPercent)+\"%\\n\");\n    buffer.append(\"Last contact: \"+new Date(lastUpdate)+\"\\n\");\n    return buffer.toString();\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/DatanodeInfo.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/protocol/DatanodeInfo.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/DatanodeInfo.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,35 @@\n+  public String getDatanodeReport() {\n+    StringBuilder buffer \u003d new StringBuilder();\n+    long c \u003d getCapacity();\n+    long r \u003d getRemaining();\n+    long u \u003d getDfsUsed();\n+    long nonDFSUsed \u003d getNonDfsUsed();\n+    float usedPercent \u003d getDfsUsedPercent();\n+    float remainingPercent \u003d getRemainingPercent();\n+    String hostName \u003d NetUtils.getHostNameOfIP(name);\n+\n+    buffer.append(\"Name: \"+ name);\n+    if(hostName !\u003d null)\n+      buffer.append(\" (\" + hostName + \")\");\n+    buffer.append(\"\\n\");\n+\n+    if (!NetworkTopology.DEFAULT_RACK.equals(location)) {\n+      buffer.append(\"Rack: \"+location+\"\\n\");\n+    }\n+    buffer.append(\"Decommission Status : \");\n+    if (isDecommissioned()) {\n+      buffer.append(\"Decommissioned\\n\");\n+    } else if (isDecommissionInProgress()) {\n+      buffer.append(\"Decommission in progress\\n\");\n+    } else {\n+      buffer.append(\"Normal\\n\");\n+    }\n+    buffer.append(\"Configured Capacity: \"+c+\" (\"+StringUtils.byteDesc(c)+\")\"+\"\\n\");\n+    buffer.append(\"DFS Used: \"+u+\" (\"+StringUtils.byteDesc(u)+\")\"+\"\\n\");\n+    buffer.append(\"Non DFS Used: \"+nonDFSUsed+\" (\"+StringUtils.byteDesc(nonDFSUsed)+\")\"+\"\\n\");\n+    buffer.append(\"DFS Remaining: \" +r+ \" (\"+StringUtils.byteDesc(r)+\")\"+\"\\n\");\n+    buffer.append(\"DFS Used%: \"+StringUtils.limitDecimalTo2(usedPercent)+\"%\\n\");\n+    buffer.append(\"DFS Remaining%: \"+StringUtils.limitDecimalTo2(remainingPercent)+\"%\\n\");\n+    buffer.append(\"Last contact: \"+new Date(lastUpdate)+\"\\n\");\n+    return buffer.toString();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public String getDatanodeReport() {\n    StringBuilder buffer \u003d new StringBuilder();\n    long c \u003d getCapacity();\n    long r \u003d getRemaining();\n    long u \u003d getDfsUsed();\n    long nonDFSUsed \u003d getNonDfsUsed();\n    float usedPercent \u003d getDfsUsedPercent();\n    float remainingPercent \u003d getRemainingPercent();\n    String hostName \u003d NetUtils.getHostNameOfIP(name);\n\n    buffer.append(\"Name: \"+ name);\n    if(hostName !\u003d null)\n      buffer.append(\" (\" + hostName + \")\");\n    buffer.append(\"\\n\");\n\n    if (!NetworkTopology.DEFAULT_RACK.equals(location)) {\n      buffer.append(\"Rack: \"+location+\"\\n\");\n    }\n    buffer.append(\"Decommission Status : \");\n    if (isDecommissioned()) {\n      buffer.append(\"Decommissioned\\n\");\n    } else if (isDecommissionInProgress()) {\n      buffer.append(\"Decommission in progress\\n\");\n    } else {\n      buffer.append(\"Normal\\n\");\n    }\n    buffer.append(\"Configured Capacity: \"+c+\" (\"+StringUtils.byteDesc(c)+\")\"+\"\\n\");\n    buffer.append(\"DFS Used: \"+u+\" (\"+StringUtils.byteDesc(u)+\")\"+\"\\n\");\n    buffer.append(\"Non DFS Used: \"+nonDFSUsed+\" (\"+StringUtils.byteDesc(nonDFSUsed)+\")\"+\"\\n\");\n    buffer.append(\"DFS Remaining: \" +r+ \" (\"+StringUtils.byteDesc(r)+\")\"+\"\\n\");\n    buffer.append(\"DFS Used%: \"+StringUtils.limitDecimalTo2(usedPercent)+\"%\\n\");\n    buffer.append(\"DFS Remaining%: \"+StringUtils.limitDecimalTo2(remainingPercent)+\"%\\n\");\n    buffer.append(\"Last contact: \"+new Date(lastUpdate)+\"\\n\");\n    return buffer.toString();\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/protocol/DatanodeInfo.java"
    }
  }
}