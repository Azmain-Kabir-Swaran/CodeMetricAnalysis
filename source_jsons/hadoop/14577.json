{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DFSUtil.java",
  "functionName": "substituteForWildcardAddress",
  "functionId": "substituteForWildcardAddress___configuredAddress-String__defaultHost-String",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java",
  "functionStartLine": 1018,
  "functionEndLine": 1027,
  "numCommitsSeen": 154,
  "timeTaken": 3684,
  "changeHistory": [
    "baf8bc6c488de170d2caf76d9fa4c99faaa8f1a6",
    "06e4c84b7d9a5c6d0c80bc86e92b97632e1e4114",
    "045dc880e13271737b3cf316296e92fb95806663",
    "f5960f71d9dcdc237f08e41bf1ebfbd572ca83af"
  ],
  "changeHistoryShort": {
    "baf8bc6c488de170d2caf76d9fa4c99faaa8f1a6": "Ymultichange(Yexceptionschange,Ybodychange)",
    "06e4c84b7d9a5c6d0c80bc86e92b97632e1e4114": "Ybodychange",
    "045dc880e13271737b3cf316296e92fb95806663": "Ymodifierchange",
    "f5960f71d9dcdc237f08e41bf1ebfbd572ca83af": "Ybodychange"
  },
  "changeHistoryDetails": {
    "baf8bc6c488de170d2caf76d9fa4c99faaa8f1a6": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "HDFS-4448. Allow HA NN to start in secure mode with wildcard address configured (atm via asuresh)\n",
      "commitDate": "23/04/15 1:44 AM",
      "commitName": "baf8bc6c488de170d2caf76d9fa4c99faaa8f1a6",
      "commitAuthor": "Arun Suresh",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "HDFS-4448. Allow HA NN to start in secure mode with wildcard address configured (atm via asuresh)\n",
          "commitDate": "23/04/15 1:44 AM",
          "commitName": "baf8bc6c488de170d2caf76d9fa4c99faaa8f1a6",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "21/04/15 9:59 PM",
          "commitNameOld": "6f8003dc7bc9e8be7b0512c514d370c303faf003",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 1.16,
          "commitsBetweenForRepo": 14,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,10 @@\n   static String substituteForWildcardAddress(String configuredAddress,\n-    String defaultHost) throws IOException {\n+    String defaultHost) {\n     InetSocketAddress sockAddr \u003d NetUtils.createSocketAddr(configuredAddress);\n-    InetSocketAddress defaultSockAddr \u003d NetUtils.createSocketAddr(defaultHost\n-        + \":0\");\n     final InetAddress addr \u003d sockAddr.getAddress();\n     if (addr !\u003d null \u0026\u0026 addr.isAnyLocalAddress()) {\n-      if (UserGroupInformation.isSecurityEnabled() \u0026\u0026\n-          defaultSockAddr.getAddress().isAnyLocalAddress()) {\n-        throw new IOException(\"Cannot use a wildcard address with security. \" +\n-            \"Must explicitly set bind address for Kerberos\");\n-      }\n       return defaultHost + \":\" + sockAddr.getPort();\n     } else {\n       return configuredAddress;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static String substituteForWildcardAddress(String configuredAddress,\n    String defaultHost) {\n    InetSocketAddress sockAddr \u003d NetUtils.createSocketAddr(configuredAddress);\n    final InetAddress addr \u003d sockAddr.getAddress();\n    if (addr !\u003d null \u0026\u0026 addr.isAnyLocalAddress()) {\n      return defaultHost + \":\" + sockAddr.getPort();\n    } else {\n      return configuredAddress;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java",
          "extendedDetails": {
            "oldValue": "[IOException]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-4448. Allow HA NN to start in secure mode with wildcard address configured (atm via asuresh)\n",
          "commitDate": "23/04/15 1:44 AM",
          "commitName": "baf8bc6c488de170d2caf76d9fa4c99faaa8f1a6",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "21/04/15 9:59 PM",
          "commitNameOld": "6f8003dc7bc9e8be7b0512c514d370c303faf003",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 1.16,
          "commitsBetweenForRepo": 14,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,10 @@\n   static String substituteForWildcardAddress(String configuredAddress,\n-    String defaultHost) throws IOException {\n+    String defaultHost) {\n     InetSocketAddress sockAddr \u003d NetUtils.createSocketAddr(configuredAddress);\n-    InetSocketAddress defaultSockAddr \u003d NetUtils.createSocketAddr(defaultHost\n-        + \":0\");\n     final InetAddress addr \u003d sockAddr.getAddress();\n     if (addr !\u003d null \u0026\u0026 addr.isAnyLocalAddress()) {\n-      if (UserGroupInformation.isSecurityEnabled() \u0026\u0026\n-          defaultSockAddr.getAddress().isAnyLocalAddress()) {\n-        throw new IOException(\"Cannot use a wildcard address with security. \" +\n-            \"Must explicitly set bind address for Kerberos\");\n-      }\n       return defaultHost + \":\" + sockAddr.getPort();\n     } else {\n       return configuredAddress;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static String substituteForWildcardAddress(String configuredAddress,\n    String defaultHost) {\n    InetSocketAddress sockAddr \u003d NetUtils.createSocketAddr(configuredAddress);\n    final InetAddress addr \u003d sockAddr.getAddress();\n    if (addr !\u003d null \u0026\u0026 addr.isAnyLocalAddress()) {\n      return defaultHost + \":\" + sockAddr.getPort();\n    } else {\n      return configuredAddress;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java",
          "extendedDetails": {}
        }
      ]
    },
    "06e4c84b7d9a5c6d0c80bc86e92b97632e1e4114": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6206. Fix NullPointerException in DFSUtil.substituteForWildcardAddress.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1586034 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/04/14 9:55 AM",
      "commitName": "06e4c84b7d9a5c6d0c80bc86e92b97632e1e4114",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "07/04/14 11:55 AM",
      "commitNameOld": "a5b37c6ed14e92f5a7f7dd76a9a82b3f859fb6dd",
      "commitAuthorOld": "Brandon Li",
      "daysBetweenCommits": 1.92,
      "commitsBetweenForRepo": 17,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,17 @@\n   static String substituteForWildcardAddress(String configuredAddress,\n     String defaultHost) throws IOException {\n     InetSocketAddress sockAddr \u003d NetUtils.createSocketAddr(configuredAddress);\n     InetSocketAddress defaultSockAddr \u003d NetUtils.createSocketAddr(defaultHost\n         + \":0\");\n-    if (sockAddr.getAddress().isAnyLocalAddress()) {\n+    final InetAddress addr \u003d sockAddr.getAddress();\n+    if (addr !\u003d null \u0026\u0026 addr.isAnyLocalAddress()) {\n       if (UserGroupInformation.isSecurityEnabled() \u0026\u0026\n           defaultSockAddr.getAddress().isAnyLocalAddress()) {\n         throw new IOException(\"Cannot use a wildcard address with security. \" +\n             \"Must explicitly set bind address for Kerberos\");\n       }\n       return defaultHost + \":\" + sockAddr.getPort();\n     } else {\n       return configuredAddress;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static String substituteForWildcardAddress(String configuredAddress,\n    String defaultHost) throws IOException {\n    InetSocketAddress sockAddr \u003d NetUtils.createSocketAddr(configuredAddress);\n    InetSocketAddress defaultSockAddr \u003d NetUtils.createSocketAddr(defaultHost\n        + \":0\");\n    final InetAddress addr \u003d sockAddr.getAddress();\n    if (addr !\u003d null \u0026\u0026 addr.isAnyLocalAddress()) {\n      if (UserGroupInformation.isSecurityEnabled() \u0026\u0026\n          defaultSockAddr.getAddress().isAnyLocalAddress()) {\n        throw new IOException(\"Cannot use a wildcard address with security. \" +\n            \"Must explicitly set bind address for Kerberos\");\n      }\n      return defaultHost + \":\" + sockAddr.getPort();\n    } else {\n      return configuredAddress;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java",
      "extendedDetails": {}
    },
    "045dc880e13271737b3cf316296e92fb95806663": {
      "type": "Ymodifierchange",
      "commitMessage": "HDFS-5312. Generate HTTP/HTTPS URL in DFSUtil#getInfoServer() based on the configured http policy. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1548629 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/12/13 10:01 AM",
      "commitName": "045dc880e13271737b3cf316296e92fb95806663",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "04/12/13 1:40 PM",
      "commitNameOld": "d02baff9a0d8cec92bde751777f3e575da2339c8",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 1.85,
      "commitsBetweenForRepo": 23,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n-  public static String substituteForWildcardAddress(String configuredAddress,\n-      String defaultHost) throws IOException {\n+  static String substituteForWildcardAddress(String configuredAddress,\n+    String defaultHost) throws IOException {\n     InetSocketAddress sockAddr \u003d NetUtils.createSocketAddr(configuredAddress);\n     InetSocketAddress defaultSockAddr \u003d NetUtils.createSocketAddr(defaultHost\n         + \":0\");\n     if (sockAddr.getAddress().isAnyLocalAddress()) {\n       if (UserGroupInformation.isSecurityEnabled() \u0026\u0026\n           defaultSockAddr.getAddress().isAnyLocalAddress()) {\n         throw new IOException(\"Cannot use a wildcard address with security. \" +\n             \"Must explicitly set bind address for Kerberos\");\n       }\n       return defaultHost + \":\" + sockAddr.getPort();\n     } else {\n       return configuredAddress;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static String substituteForWildcardAddress(String configuredAddress,\n    String defaultHost) throws IOException {\n    InetSocketAddress sockAddr \u003d NetUtils.createSocketAddr(configuredAddress);\n    InetSocketAddress defaultSockAddr \u003d NetUtils.createSocketAddr(defaultHost\n        + \":0\");\n    if (sockAddr.getAddress().isAnyLocalAddress()) {\n      if (UserGroupInformation.isSecurityEnabled() \u0026\u0026\n          defaultSockAddr.getAddress().isAnyLocalAddress()) {\n        throw new IOException(\"Cannot use a wildcard address with security. \" +\n            \"Must explicitly set bind address for Kerberos\");\n      }\n      return defaultHost + \":\" + sockAddr.getPort();\n    } else {\n      return configuredAddress;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java",
      "extendedDetails": {
        "oldValue": "[public, static]",
        "newValue": "[static]"
      }
    },
    "f5960f71d9dcdc237f08e41bf1ebfbd572ca83af": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3395. NN doesn\u0027t start with HA+security enabled and HTTP address set to 0.0.0.0. Contributed by Aaron T. Myers.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1336690 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/05/12 6:49 AM",
      "commitName": "f5960f71d9dcdc237f08e41bf1ebfbd572ca83af",
      "commitAuthor": "Aaron Myers",
      "commitDateOld": "02/05/12 6:44 PM",
      "commitNameOld": "cbc242429093ccabf76248f857de5e587a9682b0",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 7.5,
      "commitsBetweenForRepo": 49,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,16 @@\n   public static String substituteForWildcardAddress(String configuredAddress,\n       String defaultHost) throws IOException {\n     InetSocketAddress sockAddr \u003d NetUtils.createSocketAddr(configuredAddress);\n+    InetSocketAddress defaultSockAddr \u003d NetUtils.createSocketAddr(defaultHost\n+        + \":0\");\n     if (sockAddr.getAddress().isAnyLocalAddress()) {\n-      if(UserGroupInformation.isSecurityEnabled()) {\n+      if (UserGroupInformation.isSecurityEnabled() \u0026\u0026\n+          defaultSockAddr.getAddress().isAnyLocalAddress()) {\n         throw new IOException(\"Cannot use a wildcard address with security. \" +\n                               \"Must explicitly set bind address for Kerberos\");\n       }\n       return defaultHost + \":\" + sockAddr.getPort();\n     } else {\n       return configuredAddress;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static String substituteForWildcardAddress(String configuredAddress,\n      String defaultHost) throws IOException {\n    InetSocketAddress sockAddr \u003d NetUtils.createSocketAddr(configuredAddress);\n    InetSocketAddress defaultSockAddr \u003d NetUtils.createSocketAddr(defaultHost\n        + \":0\");\n    if (sockAddr.getAddress().isAnyLocalAddress()) {\n      if (UserGroupInformation.isSecurityEnabled() \u0026\u0026\n          defaultSockAddr.getAddress().isAnyLocalAddress()) {\n        throw new IOException(\"Cannot use a wildcard address with security. \" +\n                              \"Must explicitly set bind address for Kerberos\");\n      }\n      return defaultHost + \":\" + sockAddr.getPort();\n    } else {\n      return configuredAddress;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java",
      "extendedDetails": {}
    }
  }
}