{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMCriticalThreadUncaughtExceptionHandler.java",
  "functionName": "uncaughtException",
  "functionId": "uncaughtException___t-Thread__e-Throwable",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMCriticalThreadUncaughtExceptionHandler.java",
  "functionStartLine": 47,
  "functionEndLine": 62,
  "numCommitsSeen": 4,
  "timeTaken": 1186,
  "changeHistory": [
    "166be0ee95d5ef976f074342656b289b41a11ccd",
    "652679aa8ad6f9e61b8ed8e2b04b3e0332025e94"
  ],
  "changeHistoryShort": {
    "166be0ee95d5ef976f074342656b289b41a11ccd": "Ybodychange",
    "652679aa8ad6f9e61b8ed8e2b04b3e0332025e94": "Yintroduced"
  },
  "changeHistoryDetails": {
    "166be0ee95d5ef976f074342656b289b41a11ccd": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3742. YARN RM will shut down if ZKClient creation times out. (Daniel Templeton via kasha)\n",
      "commitDate": "09/05/17 2:44 PM",
      "commitName": "166be0ee95d5ef976f074342656b289b41a11ccd",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "07/03/17 11:58 AM",
      "commitNameOld": "e0c239cdbda336e09a35d112d451c2e17d74a3fc",
      "commitAuthorOld": "Daniel Templeton",
      "daysBetweenCommits": 63.07,
      "commitsBetweenForRepo": 363,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,16 @@\n   public void uncaughtException(Thread t, Throwable e) {\n-    LOG.fatal(\"Critical thread \" + t.getName() + \" crashed!\", e);\n+    Exception ex;\n \n-    if (HAUtil.isHAEnabled(rmContext.getYarnConfiguration())) {\n-      rmContext.getResourceManager().handleTransitionToStandByInNewThread();\n+    if (e instanceof Exception) {\n+      ex \u003d (Exception)e;\n     } else {\n-      rmContext.getDispatcher().getEventHandler().handle(\n-          new RMFatalEvent(RMFatalEventType.CRITICAL_THREAD_CRASH,\n-              new Exception(e)));\n+      ex \u003d new YarnException(e);\n     }\n+\n+    RMFatalEvent event \u003d\n+        new RMFatalEvent(RMFatalEventType.CRITICAL_THREAD_CRASH, ex,\n+            String.format(\"a critical thread, %s, that exited unexpectedly\",\n+                t.getName()));\n+\n+    rmContext.getDispatcher().getEventHandler().handle(event);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void uncaughtException(Thread t, Throwable e) {\n    Exception ex;\n\n    if (e instanceof Exception) {\n      ex \u003d (Exception)e;\n    } else {\n      ex \u003d new YarnException(e);\n    }\n\n    RMFatalEvent event \u003d\n        new RMFatalEvent(RMFatalEventType.CRITICAL_THREAD_CRASH, ex,\n            String.format(\"a critical thread, %s, that exited unexpectedly\",\n                t.getName()));\n\n    rmContext.getDispatcher().getEventHandler().handle(event);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMCriticalThreadUncaughtExceptionHandler.java",
      "extendedDetails": {}
    },
    "652679aa8ad6f9e61b8ed8e2b04b3e0332025e94": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6061. Add an UncaughtExceptionHandler for critical threads in RM. (Yufei Gu via kasha)\n",
      "commitDate": "14/02/17 1:39 PM",
      "commitName": "652679aa8ad6f9e61b8ed8e2b04b3e0332025e94",
      "commitAuthor": "Karthik Kambatla",
      "diff": "@@ -0,0 +1,11 @@\n+  public void uncaughtException(Thread t, Throwable e) {\n+    LOG.fatal(\"Critical thread \" + t.getName() + \" crashed!\", e);\n+\n+    if (HAUtil.isHAEnabled(rmContext.getYarnConfiguration())) {\n+      rmContext.getResourceManager().handleTransitionToStandByInNewThread();\n+    } else {\n+      rmContext.getDispatcher().getEventHandler().handle(\n+          new RMFatalEvent(RMFatalEventType.CRITICAL_THREAD_CRASH,\n+              new Exception(e)));\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void uncaughtException(Thread t, Throwable e) {\n    LOG.fatal(\"Critical thread \" + t.getName() + \" crashed!\", e);\n\n    if (HAUtil.isHAEnabled(rmContext.getYarnConfiguration())) {\n      rmContext.getResourceManager().handleTransitionToStandByInNewThread();\n    } else {\n      rmContext.getDispatcher().getEventHandler().handle(\n          new RMFatalEvent(RMFatalEventType.CRITICAL_THREAD_CRASH,\n              new Exception(e)));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMCriticalThreadUncaughtExceptionHandler.java"
    }
  }
}