{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SetAttr3.java",
  "functionName": "deserialize",
  "functionId": "deserialize___xdr-XDR",
  "sourceFilePath": "hadoop-common-project/hadoop-nfs/src/main/java/org/apache/hadoop/nfs/nfs3/request/SetAttr3.java",
  "functionStartLine": 140,
  "functionEndLine": 176,
  "numCommitsSeen": 3,
  "timeTaken": 407,
  "changeHistory": [
    "4d63b7a016232d3d816e9a0229a029a07a06757a"
  ],
  "changeHistoryShort": {
    "4d63b7a016232d3d816e9a0229a029a07a06757a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4d63b7a016232d3d816e9a0229a029a07a06757a": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-9515. Add general interface for NFS and Mount. Contributed by Brandon Li\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1493924 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/06/13 1:32 PM",
      "commitName": "4d63b7a016232d3d816e9a0229a029a07a06757a",
      "commitAuthor": "Brandon Li",
      "diff": "@@ -0,0 +1,37 @@\n+  public void deserialize(XDR xdr) {\n+    if (xdr.readBoolean()) {\n+      mode \u003d xdr.readInt();\n+      updateFields.add(SetAttrField.MODE);\n+    }\n+    if (xdr.readBoolean()) {\n+      uid \u003d xdr.readInt();\n+      updateFields.add(SetAttrField.UID);\n+    }\n+    if (xdr.readBoolean()) {\n+      gid \u003d xdr.readInt();\n+      updateFields.add(SetAttrField.GID);\n+\n+    }\n+    if (xdr.readBoolean()) {\n+      size \u003d xdr.readHyper();\n+      updateFields.add(SetAttrField.SIZE);\n+\n+    }\n+    int timeSetHow \u003d xdr.readInt();\n+    if (timeSetHow \u003d\u003d TIME_SET_TO_CLIENT_TIME) {\n+      atime \u003d NfsTime.deserialize(xdr);\n+      updateFields.add(SetAttrField.ATIME);\n+    } else if (timeSetHow \u003d\u003d TIME_SET_TO_SERVER_TIME) {\n+      atime \u003d new NfsTime(System.currentTimeMillis());\n+      updateFields.add(SetAttrField.ATIME);\n+    }\n+\n+    timeSetHow \u003d xdr.readInt();\n+    if (timeSetHow \u003d\u003d TIME_SET_TO_CLIENT_TIME) {\n+      mtime \u003d NfsTime.deserialize(xdr);\n+      updateFields.add(SetAttrField.MTIME);\n+    } else if (timeSetHow \u003d\u003d TIME_SET_TO_SERVER_TIME) {\n+      mtime \u003d new NfsTime(System.currentTimeMillis());\n+      updateFields.add(SetAttrField.MTIME);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void deserialize(XDR xdr) {\n    if (xdr.readBoolean()) {\n      mode \u003d xdr.readInt();\n      updateFields.add(SetAttrField.MODE);\n    }\n    if (xdr.readBoolean()) {\n      uid \u003d xdr.readInt();\n      updateFields.add(SetAttrField.UID);\n    }\n    if (xdr.readBoolean()) {\n      gid \u003d xdr.readInt();\n      updateFields.add(SetAttrField.GID);\n\n    }\n    if (xdr.readBoolean()) {\n      size \u003d xdr.readHyper();\n      updateFields.add(SetAttrField.SIZE);\n\n    }\n    int timeSetHow \u003d xdr.readInt();\n    if (timeSetHow \u003d\u003d TIME_SET_TO_CLIENT_TIME) {\n      atime \u003d NfsTime.deserialize(xdr);\n      updateFields.add(SetAttrField.ATIME);\n    } else if (timeSetHow \u003d\u003d TIME_SET_TO_SERVER_TIME) {\n      atime \u003d new NfsTime(System.currentTimeMillis());\n      updateFields.add(SetAttrField.ATIME);\n    }\n\n    timeSetHow \u003d xdr.readInt();\n    if (timeSetHow \u003d\u003d TIME_SET_TO_CLIENT_TIME) {\n      mtime \u003d NfsTime.deserialize(xdr);\n      updateFields.add(SetAttrField.MTIME);\n    } else if (timeSetHow \u003d\u003d TIME_SET_TO_SERVER_TIME) {\n      mtime \u003d new NfsTime(System.currentTimeMillis());\n      updateFields.add(SetAttrField.MTIME);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-nfs/src/main/java/org/apache/hadoop/nfs/nfs3/request/SetAttr3.java"
    }
  }
}