{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RetryPolicies.java",
  "functionName": "parsePositiveInt",
  "functionId": "parsePositiveInt___elements-String[](modifiers-final)__i-int(modifiers-final)__originalString-String(modifiers-final)",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/retry/RetryPolicies.java",
  "functionStartLine": 480,
  "functionEndLine": 499,
  "numCommitsSeen": 30,
  "timeTaken": 1223,
  "changeHistory": [
    "45fafc2b8fc1aab0a082600b0d50ad693491ea70"
  ],
  "changeHistoryShort": {
    "45fafc2b8fc1aab0a082600b0d50ad693491ea70": "Yintroduced"
  },
  "changeHistoryDetails": {
    "45fafc2b8fc1aab0a082600b0d50ad693491ea70": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-3504. Support configurable retry policy in DFSClient for RPC connections and RPC calls, and add MultipleLinearRandomRetry, a new retry policy.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1349124 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/06/12 10:27 PM",
      "commitName": "45fafc2b8fc1aab0a082600b0d50ad693491ea70",
      "commitAuthor": "Tsz-wo Sze",
      "diff": "@@ -0,0 +1,20 @@\n+    private static int parsePositiveInt(final String[] elements,\n+        final int i, final String originalString) {\n+      final String s \u003d elements[i].trim();\n+      final int n;\n+      try {\n+        n \u003d Integer.parseInt(s);\n+      } catch(NumberFormatException nfe) {\n+        LOG.warn(\"Failed to parse \\\"\" + s + \"\\\", which is the index \" + i\n+            + \" element in \\\"\" + originalString + \"\\\"\", nfe);\n+        return -1;\n+      }\n+\n+      if (n \u003c\u003d 0) {\n+        LOG.warn(\"The value \" + n + \" \u003c\u003d 0: it is parsed from the string \\\"\"\n+            + s + \"\\\" which is the index \" + i + \" element in \\\"\"\n+            + originalString + \"\\\"\");\n+        return -1;\n+      }\n+      return n;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private static int parsePositiveInt(final String[] elements,\n        final int i, final String originalString) {\n      final String s \u003d elements[i].trim();\n      final int n;\n      try {\n        n \u003d Integer.parseInt(s);\n      } catch(NumberFormatException nfe) {\n        LOG.warn(\"Failed to parse \\\"\" + s + \"\\\", which is the index \" + i\n            + \" element in \\\"\" + originalString + \"\\\"\", nfe);\n        return -1;\n      }\n\n      if (n \u003c\u003d 0) {\n        LOG.warn(\"The value \" + n + \" \u003c\u003d 0: it is parsed from the string \\\"\"\n            + s + \"\\\" which is the index \" + i + \" element in \\\"\"\n            + originalString + \"\\\"\");\n        return -1;\n      }\n      return n;\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/retry/RetryPolicies.java"
    }
  }
}