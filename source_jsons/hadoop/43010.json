{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "YarnServiceClient.java",
  "functionName": "upgradeApp",
  "functionId": "upgradeApp___app-Service",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-catalog/hadoop-yarn-applications-catalog-webapp/src/main/java/org/apache/hadoop/yarn/appcatalog/application/YarnServiceClient.java",
  "functionStartLine": 176,
  "functionEndLine": 195,
  "numCommitsSeen": 2,
  "timeTaken": 693,
  "changeHistory": [
    "b2cdf809bce10f680048cacf45806f0abb4f4804"
  ],
  "changeHistoryShort": {
    "b2cdf809bce10f680048cacf45806f0abb4f4804": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b2cdf809bce10f680048cacf45806f0abb4f4804": {
      "type": "Yintroduced",
      "commitMessage": "YARN-9281. Add express upgrade button to Appcatalog UI. Contributed by Eric Yang\n",
      "commitDate": "13/04/19 8:55 AM",
      "commitName": "b2cdf809bce10f680048cacf45806f0abb4f4804",
      "commitAuthor": "Billie Rinaldi",
      "diff": "@@ -0,0 +1,20 @@\n+  public void upgradeApp(Service app) throws JsonProcessingException {\n+    ObjectMapper mapper \u003d new ObjectMapper();\n+    mapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);\n+    String appInstanceId \u003d app.getName();\n+    app.setState(ServiceState.EXPRESS_UPGRADING);\n+    String yarnFile \u003d mapper.writeValueAsString(app);\n+    ClientResponse response;\n+    try {\n+      response \u003d asc.getApiClient(asc.getServicePath(appInstanceId))\n+          .put(ClientResponse.class, yarnFile);\n+      if (response.getStatus() \u003e\u003d 299) {\n+        String message \u003d response.getEntity(String.class);\n+        throw new RuntimeException(\"Failed : HTTP error code : \"\n+            + response.getStatus() + \" error: \" + message);\n+      }\n+    } catch (UniformInterfaceException | ClientHandlerException\n+        | IOException e) {\n+      LOG.error(\"Error in stopping application: \", e);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void upgradeApp(Service app) throws JsonProcessingException {\n    ObjectMapper mapper \u003d new ObjectMapper();\n    mapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);\n    String appInstanceId \u003d app.getName();\n    app.setState(ServiceState.EXPRESS_UPGRADING);\n    String yarnFile \u003d mapper.writeValueAsString(app);\n    ClientResponse response;\n    try {\n      response \u003d asc.getApiClient(asc.getServicePath(appInstanceId))\n          .put(ClientResponse.class, yarnFile);\n      if (response.getStatus() \u003e\u003d 299) {\n        String message \u003d response.getEntity(String.class);\n        throw new RuntimeException(\"Failed : HTTP error code : \"\n            + response.getStatus() + \" error: \" + message);\n      }\n    } catch (UniformInterfaceException | ClientHandlerException\n        | IOException e) {\n      LOG.error(\"Error in stopping application: \", e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-catalog/hadoop-yarn-applications-catalog-webapp/src/main/java/org/apache/hadoop/yarn/appcatalog/application/YarnServiceClient.java"
    }
  }
}