{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ReservationSystemUtil.java",
  "functionName": "convertAllocationsToReservationInfo",
  "functionId": "convertAllocationsToReservationInfo___res-Set__ReservationAllocation____includeResourceAllocations-boolean",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/reservation/ReservationSystemUtil.java",
  "functionStartLine": 162,
  "functionEndLine": 187,
  "numCommitsSeen": 5,
  "timeTaken": 2145,
  "changeHistory": [
    "9875325d5c63f343809907d06bf48a298035a611"
  ],
  "changeHistoryShort": {
    "9875325d5c63f343809907d06bf48a298035a611": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9875325d5c63f343809907d06bf48a298035a611": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4340. Add list API to reservation system. (Sean Po via wangda)\n",
      "commitDate": "01/02/16 6:17 PM",
      "commitName": "9875325d5c63f343809907d06bf48a298035a611",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,26 @@\n+        convertAllocationsToReservationInfo(Set\u003cReservationAllocation\u003e res,\n+                        boolean includeResourceAllocations) {\n+    List\u003cReservationAllocationState\u003e reservationInfo \u003d new ArrayList\u003c\u003e();\n+\n+    Map\u003cReservationInterval, Resource\u003e requests;\n+    for (ReservationAllocation allocation : res) {\n+      List\u003cResourceAllocationRequest\u003e allocations \u003d new ArrayList\u003c\u003e();\n+      if (includeResourceAllocations) {\n+        requests \u003d allocation.getAllocationRequests();\n+\n+        for (Map.Entry\u003cReservationInterval, Resource\u003e request :\n+                requests.entrySet()) {\n+          ReservationInterval interval \u003d request.getKey();\n+          allocations.add(ResourceAllocationRequest.newInstance(\n+                  interval.getStartTime(), interval.getEndTime(),\n+                  request.getValue()));\n+        }\n+      }\n+\n+      reservationInfo.add(ReservationAllocationState.newInstance(\n+              allocation.getAcceptanceTime(), allocation.getUser(),\n+              allocations, allocation.getReservationId(),\n+              allocation.getReservationDefinition()));\n+    }\n+    return reservationInfo;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "        convertAllocationsToReservationInfo(Set\u003cReservationAllocation\u003e res,\n                        boolean includeResourceAllocations) {\n    List\u003cReservationAllocationState\u003e reservationInfo \u003d new ArrayList\u003c\u003e();\n\n    Map\u003cReservationInterval, Resource\u003e requests;\n    for (ReservationAllocation allocation : res) {\n      List\u003cResourceAllocationRequest\u003e allocations \u003d new ArrayList\u003c\u003e();\n      if (includeResourceAllocations) {\n        requests \u003d allocation.getAllocationRequests();\n\n        for (Map.Entry\u003cReservationInterval, Resource\u003e request :\n                requests.entrySet()) {\n          ReservationInterval interval \u003d request.getKey();\n          allocations.add(ResourceAllocationRequest.newInstance(\n                  interval.getStartTime(), interval.getEndTime(),\n                  request.getValue()));\n        }\n      }\n\n      reservationInfo.add(ReservationAllocationState.newInstance(\n              allocation.getAcceptanceTime(), allocation.getUser(),\n              allocations, allocation.getReservationId(),\n              allocation.getReservationDefinition()));\n    }\n    return reservationInfo;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/reservation/ReservationSystemUtil.java"
    }
  }
}