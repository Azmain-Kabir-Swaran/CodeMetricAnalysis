{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ResourceLocalizationService.java",
  "functionName": "deleteLocalDir",
  "functionId": "deleteLocalDir___lfs-FileContext__del-DeletionService__localDir-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ResourceLocalizationService.java",
  "functionStartLine": 1575,
  "functionEndLine": 1602,
  "numCommitsSeen": 88,
  "timeTaken": 2879,
  "changeHistory": [
    "547f18cb96aeda55cc19b38be2be4d631b3a5f4f",
    "af0d2fc3e343e5db82c2398d31de85c47b239e35",
    "6a482a88b8f56a4c5590e71ce6713d7f63830e92"
  ],
  "changeHistoryShort": {
    "547f18cb96aeda55cc19b38be2be4d631b3a5f4f": "Ybodychange",
    "af0d2fc3e343e5db82c2398d31de85c47b239e35": "Ybodychange",
    "6a482a88b8f56a4c5590e71ce6713d7f63830e92": "Yintroduced"
  },
  "changeHistoryDetails": {
    "547f18cb96aeda55cc19b38be2be4d631b3a5f4f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6366. Refactor the NodeManager DeletionService to support additional DeletionTask types. Contributed by Shane Kumpf.\n",
      "commitDate": "31/05/17 3:45 AM",
      "commitName": "547f18cb96aeda55cc19b38be2be4d631b3a5f4f",
      "commitAuthor": "Varun Vasudev",
      "commitDateOld": "26/05/17 7:37 AM",
      "commitNameOld": "aea42930bbb9566ea6988f684dbd72a72a2bdadf",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 4.84,
      "commitsBetweenForRepo": 16,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,28 @@\n   private void deleteLocalDir(FileContext lfs, DeletionService del,\n       String localDir) throws IOException {\n     RemoteIterator\u003cFileStatus\u003e fileStatus \u003d lfs.listStatus(new Path(localDir));\n     if (fileStatus !\u003d null) {\n       while (fileStatus.hasNext()) {\n         FileStatus status \u003d fileStatus.next();\n         try {\n           if (status.getPath().getName().matches(\".*\" +\n               ContainerLocalizer.USERCACHE + \"_DEL_.*\")) {\n             LOG.info(\"usercache path : \" + status.getPath().toString());\n             cleanUpFilesPerUserDir(lfs, del, status.getPath());\n           } else if (status.getPath().getName()\n               .matches(\".*\" + NM_PRIVATE_DIR + \"_DEL_.*\")\n               ||\n               status.getPath().getName()\n                   .matches(\".*\" + ContainerLocalizer.FILECACHE + \"_DEL_.*\")) {\n-            del.delete(null, status.getPath(), new Path[] {});\n+            FileDeletionTask deletionTask \u003d new FileDeletionTask(del, null,\n+                status.getPath(), null);\n+            del.delete(deletionTask);\n           }\n         } catch (IOException ex) {\n           // Do nothing, just give the warning\n           LOG.warn(\"Failed to delete this local Directory: \" +\n               status.getPath().getName());\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void deleteLocalDir(FileContext lfs, DeletionService del,\n      String localDir) throws IOException {\n    RemoteIterator\u003cFileStatus\u003e fileStatus \u003d lfs.listStatus(new Path(localDir));\n    if (fileStatus !\u003d null) {\n      while (fileStatus.hasNext()) {\n        FileStatus status \u003d fileStatus.next();\n        try {\n          if (status.getPath().getName().matches(\".*\" +\n              ContainerLocalizer.USERCACHE + \"_DEL_.*\")) {\n            LOG.info(\"usercache path : \" + status.getPath().toString());\n            cleanUpFilesPerUserDir(lfs, del, status.getPath());\n          } else if (status.getPath().getName()\n              .matches(\".*\" + NM_PRIVATE_DIR + \"_DEL_.*\")\n              ||\n              status.getPath().getName()\n                  .matches(\".*\" + ContainerLocalizer.FILECACHE + \"_DEL_.*\")) {\n            FileDeletionTask deletionTask \u003d new FileDeletionTask(del, null,\n                status.getPath(), null);\n            del.delete(deletionTask);\n          }\n        } catch (IOException ex) {\n          // Do nothing, just give the warning\n          LOG.warn(\"Failed to delete this local Directory: \" +\n              status.getPath().getName());\n        }\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ResourceLocalizationService.java",
      "extendedDetails": {}
    },
    "af0d2fc3e343e5db82c2398d31de85c47b239e35": {
      "type": "Ybodychange",
      "commitMessage": "YARN-661. Fixed NM to cleanup users\u0027 local directories correctly when starting up. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1503942 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/07/13 4:31 PM",
      "commitName": "af0d2fc3e343e5db82c2398d31de85c47b239e35",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "19/06/13 8:41 PM",
      "commitNameOld": "3f809667bc397ea372efe4b8f1aae7e2729b8ca0",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 26.83,
      "commitsBetweenForRepo": 117,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,26 @@\n   private void deleteLocalDir(FileContext lfs, DeletionService del,\n       String localDir) throws IOException {\n     RemoteIterator\u003cFileStatus\u003e fileStatus \u003d lfs.listStatus(new Path(localDir));\n     if (fileStatus !\u003d null) {\n       while (fileStatus.hasNext()) {\n         FileStatus status \u003d fileStatus.next();\n         try {\n           if (status.getPath().getName().matches(\".*\" +\n               ContainerLocalizer.USERCACHE + \"_DEL_.*\")) {\n-            cleanUpFilesFromSubDir(lfs, del, status.getPath());\n+            LOG.info(\"usercache path : \" + status.getPath().toString());\n+            cleanUpFilesPerUserDir(lfs, del, status.getPath());\n           } else if (status.getPath().getName()\n               .matches(\".*\" + NM_PRIVATE_DIR + \"_DEL_.*\")\n               ||\n               status.getPath().getName()\n                   .matches(\".*\" + ContainerLocalizer.FILECACHE + \"_DEL_.*\")) {\n             del.delete(null, status.getPath(), new Path[] {});\n           }\n         } catch (IOException ex) {\n           // Do nothing, just give the warning\n           LOG.warn(\"Failed to delete this local Directory: \" +\n               status.getPath().getName());\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void deleteLocalDir(FileContext lfs, DeletionService del,\n      String localDir) throws IOException {\n    RemoteIterator\u003cFileStatus\u003e fileStatus \u003d lfs.listStatus(new Path(localDir));\n    if (fileStatus !\u003d null) {\n      while (fileStatus.hasNext()) {\n        FileStatus status \u003d fileStatus.next();\n        try {\n          if (status.getPath().getName().matches(\".*\" +\n              ContainerLocalizer.USERCACHE + \"_DEL_.*\")) {\n            LOG.info(\"usercache path : \" + status.getPath().toString());\n            cleanUpFilesPerUserDir(lfs, del, status.getPath());\n          } else if (status.getPath().getName()\n              .matches(\".*\" + NM_PRIVATE_DIR + \"_DEL_.*\")\n              ||\n              status.getPath().getName()\n                  .matches(\".*\" + ContainerLocalizer.FILECACHE + \"_DEL_.*\")) {\n            del.delete(null, status.getPath(), new Path[] {});\n          }\n        } catch (IOException ex) {\n          // Do nothing, just give the warning\n          LOG.warn(\"Failed to delete this local Directory: \" +\n              status.getPath().getName());\n        }\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ResourceLocalizationService.java",
      "extendedDetails": {}
    },
    "6a482a88b8f56a4c5590e71ce6713d7f63830e92": {
      "type": "Yintroduced",
      "commitMessage": "YARN-71. Fix the NodeManager to clean up local-dirs on restart. Contributed by Xuan Gong.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1460808 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/03/13 11:23 AM",
      "commitName": "6a482a88b8f56a4c5590e71ce6713d7f63830e92",
      "commitAuthor": "Siddharth Seth",
      "diff": "@@ -0,0 +1,25 @@\n+  private void deleteLocalDir(FileContext lfs, DeletionService del,\n+      String localDir) throws IOException {\n+    RemoteIterator\u003cFileStatus\u003e fileStatus \u003d lfs.listStatus(new Path(localDir));\n+    if (fileStatus !\u003d null) {\n+      while (fileStatus.hasNext()) {\n+        FileStatus status \u003d fileStatus.next();\n+        try {\n+          if (status.getPath().getName().matches(\".*\" +\n+              ContainerLocalizer.USERCACHE + \"_DEL_.*\")) {\n+            cleanUpFilesFromSubDir(lfs, del, status.getPath());\n+          } else if (status.getPath().getName()\n+              .matches(\".*\" + NM_PRIVATE_DIR + \"_DEL_.*\")\n+              ||\n+              status.getPath().getName()\n+                  .matches(\".*\" + ContainerLocalizer.FILECACHE + \"_DEL_.*\")) {\n+            del.delete(null, status.getPath(), new Path[] {});\n+          }\n+        } catch (IOException ex) {\n+          // Do nothing, just give the warning\n+          LOG.warn(\"Failed to delete this local Directory: \" +\n+              status.getPath().getName());\n+        }\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void deleteLocalDir(FileContext lfs, DeletionService del,\n      String localDir) throws IOException {\n    RemoteIterator\u003cFileStatus\u003e fileStatus \u003d lfs.listStatus(new Path(localDir));\n    if (fileStatus !\u003d null) {\n      while (fileStatus.hasNext()) {\n        FileStatus status \u003d fileStatus.next();\n        try {\n          if (status.getPath().getName().matches(\".*\" +\n              ContainerLocalizer.USERCACHE + \"_DEL_.*\")) {\n            cleanUpFilesFromSubDir(lfs, del, status.getPath());\n          } else if (status.getPath().getName()\n              .matches(\".*\" + NM_PRIVATE_DIR + \"_DEL_.*\")\n              ||\n              status.getPath().getName()\n                  .matches(\".*\" + ContainerLocalizer.FILECACHE + \"_DEL_.*\")) {\n            del.delete(null, status.getPath(), new Path[] {});\n          }\n        } catch (IOException ex) {\n          // Do nothing, just give the warning\n          LOG.warn(\"Failed to delete this local Directory: \" +\n              status.getPath().getName());\n        }\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ResourceLocalizationService.java"
    }
  }
}