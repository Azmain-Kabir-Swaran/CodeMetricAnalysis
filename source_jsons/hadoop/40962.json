{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSConfigToCSConfigArgumentHandler.java",
  "functionName": "checkOutputDirDoesNotContainXmls",
  "functionId": "checkOutputDirDoesNotContainXmls___yarnSiteXmlFile-String__outputDir-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/converter/FSConfigToCSConfigArgumentHandler.java",
  "functionStartLine": 264,
  "functionEndLine": 289,
  "numCommitsSeen": 9,
  "timeTaken": 943,
  "changeHistory": [
    "d68616b0453881bec8dcb917a0b7d3fbe0838965"
  ],
  "changeHistoryShort": {
    "d68616b0453881bec8dcb917a0b7d3fbe0838965": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d68616b0453881bec8dcb917a0b7d3fbe0838965": {
      "type": "Yintroduced",
      "commitMessage": "YARN-10130. FS-CS converter: Do not allow output dir to be the same as input dir. Contributed by Adam Antal\n",
      "commitDate": "25/02/20 12:30 PM",
      "commitName": "d68616b0453881bec8dcb917a0b7d3fbe0838965",
      "commitAuthor": "Szilard Nemeth",
      "diff": "@@ -0,0 +1,26 @@\n+  private static void checkOutputDirDoesNotContainXmls(String yarnSiteXmlFile,\n+      String outputDir) {\n+    if (yarnSiteXmlFile \u003d\u003d null || outputDir \u003d\u003d null) {\n+      return;\n+    }\n+\n+    // check whether yarn-site.xml is not in the output folder\n+    File xmlFile \u003d new File(yarnSiteXmlFile);\n+    File xmlParentFolder \u003d xmlFile.getParentFile();\n+    File output \u003d new File(outputDir);\n+    if (output.equals(xmlParentFolder)) {\n+      throw new IllegalArgumentException(\n+          String.format(ALREADY_CONTAINS_EXCEPTION_MSG,\n+              CliOption.OUTPUT_DIR.name, CliOption.OUTPUT_DIR.shortSwitch,\n+              CliOption.OUTPUT_DIR.longSwitch, CliOption.YARN_SITE.name,\n+              CliOption.YARN_SITE.shortSwitch,\n+              CliOption.YARN_SITE.longSwitch));\n+    }\n+\n+    // check whether the output folder does not contain nor yarn-site.xml\n+    // neither capacity-scheduler.xml\n+    checkFileNotInOutputDir(output,\n+        YarnConfiguration.YARN_SITE_CONFIGURATION_FILE);\n+    checkFileNotInOutputDir(output,\n+        YarnConfiguration.CS_CONFIGURATION_FILE);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static void checkOutputDirDoesNotContainXmls(String yarnSiteXmlFile,\n      String outputDir) {\n    if (yarnSiteXmlFile \u003d\u003d null || outputDir \u003d\u003d null) {\n      return;\n    }\n\n    // check whether yarn-site.xml is not in the output folder\n    File xmlFile \u003d new File(yarnSiteXmlFile);\n    File xmlParentFolder \u003d xmlFile.getParentFile();\n    File output \u003d new File(outputDir);\n    if (output.equals(xmlParentFolder)) {\n      throw new IllegalArgumentException(\n          String.format(ALREADY_CONTAINS_EXCEPTION_MSG,\n              CliOption.OUTPUT_DIR.name, CliOption.OUTPUT_DIR.shortSwitch,\n              CliOption.OUTPUT_DIR.longSwitch, CliOption.YARN_SITE.name,\n              CliOption.YARN_SITE.shortSwitch,\n              CliOption.YARN_SITE.longSwitch));\n    }\n\n    // check whether the output folder does not contain nor yarn-site.xml\n    // neither capacity-scheduler.xml\n    checkFileNotInOutputDir(output,\n        YarnConfiguration.YARN_SITE_CONFIGURATION_FILE);\n    checkFileNotInOutputDir(output,\n        YarnConfiguration.CS_CONFIGURATION_FILE);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/converter/FSConfigToCSConfigArgumentHandler.java"
    }
  }
}