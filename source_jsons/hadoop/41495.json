{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FairScheduler.java",
  "functionName": "serviceStop",
  "functionId": "serviceStop",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairScheduler.java",
  "functionStartLine": 1544,
  "functionEndLine": 1565,
  "numCommitsSeen": 226,
  "timeTaken": 5588,
  "changeHistory": [
    "ea2c6c8c9a55813a19b3dbd0d29747d6a7739030",
    "bb34ae955496c1aa595dc1186153d605a41f5378",
    "10468529a9b858bd945e7ecb063c9c1438efa474",
    "31f8da22d0b8d2dcce5fbc8e45d832f40acf056f",
    "a4ba451802c6c61a0c804809740d46dd76059f25"
  ],
  "changeHistoryShort": {
    "ea2c6c8c9a55813a19b3dbd0d29747d6a7739030": "Ybodychange",
    "bb34ae955496c1aa595dc1186153d605a41f5378": "Ybodychange",
    "10468529a9b858bd945e7ecb063c9c1438efa474": "Ybodychange",
    "31f8da22d0b8d2dcce5fbc8e45d832f40acf056f": "Ybodychange",
    "a4ba451802c6c61a0c804809740d46dd76059f25": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ea2c6c8c9a55813a19b3dbd0d29747d6a7739030": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7133. Clean up lock-try order in fair scheduler. (Szilard Nemeth via Haibo Chen)\n",
      "commitDate": "24/07/18 12:46 PM",
      "commitName": "ea2c6c8c9a55813a19b3dbd0d29747d6a7739030",
      "commitAuthor": "Haibo Chen",
      "commitDateOld": "11/06/18 11:12 AM",
      "commitNameOld": "c190ac2be88e574b3322cdc73a7c0af0cef708b2",
      "commitAuthorOld": "Haibo Chen",
      "daysBetweenCommits": 43.07,
      "commitsBetweenForRepo": 266,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n   public void serviceStop() throws Exception {\n+    writeLock.lock();\n     try {\n-      writeLock.lock();\n       if (continuousSchedulingEnabled) {\n         if (schedulingThread !\u003d null) {\n           schedulingThread.interrupt();\n           schedulingThread.join(THREAD_JOIN_TIMEOUT_MS);\n         }\n       }\n       if (preemptionThread !\u003d null) {\n         preemptionThread.interrupt();\n         preemptionThread.join(THREAD_JOIN_TIMEOUT_MS);\n       }\n       if (allocsLoader !\u003d null) {\n         allocsLoader.stop();\n       }\n     } finally {\n       writeLock.unlock();\n     }\n \n     super.serviceStop();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void serviceStop() throws Exception {\n    writeLock.lock();\n    try {\n      if (continuousSchedulingEnabled) {\n        if (schedulingThread !\u003d null) {\n          schedulingThread.interrupt();\n          schedulingThread.join(THREAD_JOIN_TIMEOUT_MS);\n        }\n      }\n      if (preemptionThread !\u003d null) {\n        preemptionThread.interrupt();\n        preemptionThread.join(THREAD_JOIN_TIMEOUT_MS);\n      }\n      if (allocsLoader !\u003d null) {\n        allocsLoader.stop();\n      }\n    } finally {\n      writeLock.unlock();\n    }\n\n    super.serviceStop();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairScheduler.java",
      "extendedDetails": {}
    },
    "bb34ae955496c1aa595dc1186153d605a41f5378": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7146. Many RM unit tests failing with FairScheduler (rkanter)\n",
      "commitDate": "13/09/17 3:44 PM",
      "commitName": "bb34ae955496c1aa595dc1186153d605a41f5378",
      "commitAuthor": "Robert Kanter",
      "commitDateOld": "12/09/17 9:19 AM",
      "commitNameOld": "6708ac330147b2d3816a31f2ee83e09c41fe0dd9",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 1.27,
      "commitsBetweenForRepo": 48,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,22 @@\n   public void serviceStop() throws Exception {\n     try {\n       writeLock.lock();\n-      if (updateThread !\u003d null) {\n-        updateThread.interrupt();\n-        updateThread.join(THREAD_JOIN_TIMEOUT_MS);\n-      }\n       if (continuousSchedulingEnabled) {\n         if (schedulingThread !\u003d null) {\n           schedulingThread.interrupt();\n           schedulingThread.join(THREAD_JOIN_TIMEOUT_MS);\n         }\n       }\n       if (preemptionThread !\u003d null) {\n         preemptionThread.interrupt();\n         preemptionThread.join(THREAD_JOIN_TIMEOUT_MS);\n       }\n       if (allocsLoader !\u003d null) {\n         allocsLoader.stop();\n       }\n     } finally {\n       writeLock.unlock();\n     }\n \n     super.serviceStop();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void serviceStop() throws Exception {\n    try {\n      writeLock.lock();\n      if (continuousSchedulingEnabled) {\n        if (schedulingThread !\u003d null) {\n          schedulingThread.interrupt();\n          schedulingThread.join(THREAD_JOIN_TIMEOUT_MS);\n        }\n      }\n      if (preemptionThread !\u003d null) {\n        preemptionThread.interrupt();\n        preemptionThread.join(THREAD_JOIN_TIMEOUT_MS);\n      }\n      if (allocsLoader !\u003d null) {\n        allocsLoader.stop();\n      }\n    } finally {\n      writeLock.unlock();\n    }\n\n    super.serviceStop();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairScheduler.java",
      "extendedDetails": {}
    },
    "10468529a9b858bd945e7ecb063c9c1438efa474": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4752. Improved preemption in FairScheduler. (kasha)\n\nContains:\nYARN-5605. Preempt containers (all on one node) to meet the requirement of starved applications\nYARN-5821. Drop left-over preemption-related code and clean up method visibilities in the Schedulable hierarchy\nYARN-5783. Verify identification of starved applications.\nYARN-5819. Verify fairshare and minshare preemption\nYARN-5885. Cleanup YARN-4752 branch for merge\n\nChange-Id: Iee0962377d019dd64dc69a020725d2eaf360858c\n",
      "commitDate": "23/11/16 9:48 PM",
      "commitName": "10468529a9b858bd945e7ecb063c9c1438efa474",
      "commitAuthor": "Daniel Templeton",
      "commitDateOld": "22/11/16 11:16 AM",
      "commitNameOld": "83cc7263af632939dc3b2ee58d8f03f98ed4d96a",
      "commitAuthorOld": "Daniel Templeton",
      "daysBetweenCommits": 1.44,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,26 @@\n   public void serviceStop() throws Exception {\n     try {\n       writeLock.lock();\n       if (updateThread !\u003d null) {\n         updateThread.interrupt();\n         updateThread.join(THREAD_JOIN_TIMEOUT_MS);\n       }\n       if (continuousSchedulingEnabled) {\n         if (schedulingThread !\u003d null) {\n           schedulingThread.interrupt();\n           schedulingThread.join(THREAD_JOIN_TIMEOUT_MS);\n         }\n       }\n+      if (preemptionThread !\u003d null) {\n+        preemptionThread.interrupt();\n+        preemptionThread.join(THREAD_JOIN_TIMEOUT_MS);\n+      }\n       if (allocsLoader !\u003d null) {\n         allocsLoader.stop();\n       }\n     } finally {\n       writeLock.unlock();\n     }\n \n     super.serviceStop();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void serviceStop() throws Exception {\n    try {\n      writeLock.lock();\n      if (updateThread !\u003d null) {\n        updateThread.interrupt();\n        updateThread.join(THREAD_JOIN_TIMEOUT_MS);\n      }\n      if (continuousSchedulingEnabled) {\n        if (schedulingThread !\u003d null) {\n          schedulingThread.interrupt();\n          schedulingThread.join(THREAD_JOIN_TIMEOUT_MS);\n        }\n      }\n      if (preemptionThread !\u003d null) {\n        preemptionThread.interrupt();\n        preemptionThread.join(THREAD_JOIN_TIMEOUT_MS);\n      }\n      if (allocsLoader !\u003d null) {\n        allocsLoader.stop();\n      }\n    } finally {\n      writeLock.unlock();\n    }\n\n    super.serviceStop();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairScheduler.java",
      "extendedDetails": {}
    },
    "31f8da22d0b8d2dcce5fbc8e45d832f40acf056f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3139. Improve locks in AbstractYarnScheduler/CapacityScheduler/FairScheduler. Contributed by Wangda Tan\n",
      "commitDate": "04/10/16 5:23 PM",
      "commitName": "31f8da22d0b8d2dcce5fbc8e45d832f40acf056f",
      "commitAuthor": "Jian He",
      "commitDateOld": "03/10/16 6:03 AM",
      "commitNameOld": "0da54e8848764c71a31473516d23ada582013f8c",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 1.47,
      "commitsBetweenForRepo": 14,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,22 @@\n   public void serviceStop() throws Exception {\n-    synchronized (this) {\n+    try {\n+      writeLock.lock();\n       if (updateThread !\u003d null) {\n         updateThread.interrupt();\n         updateThread.join(THREAD_JOIN_TIMEOUT_MS);\n       }\n       if (continuousSchedulingEnabled) {\n         if (schedulingThread !\u003d null) {\n           schedulingThread.interrupt();\n           schedulingThread.join(THREAD_JOIN_TIMEOUT_MS);\n         }\n       }\n       if (allocsLoader !\u003d null) {\n         allocsLoader.stop();\n       }\n+    } finally {\n+      writeLock.unlock();\n     }\n \n     super.serviceStop();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void serviceStop() throws Exception {\n    try {\n      writeLock.lock();\n      if (updateThread !\u003d null) {\n        updateThread.interrupt();\n        updateThread.join(THREAD_JOIN_TIMEOUT_MS);\n      }\n      if (continuousSchedulingEnabled) {\n        if (schedulingThread !\u003d null) {\n          schedulingThread.interrupt();\n          schedulingThread.join(THREAD_JOIN_TIMEOUT_MS);\n        }\n      }\n      if (allocsLoader !\u003d null) {\n        allocsLoader.stop();\n      }\n    } finally {\n      writeLock.unlock();\n    }\n\n    super.serviceStop();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairScheduler.java",
      "extendedDetails": {}
    },
    "a4ba451802c6c61a0c804809740d46dd76059f25": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1474. Make schedulers services. (Tsuyoshi Ozawa via kasha)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1598908 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/05/14 12:33 PM",
      "commitName": "a4ba451802c6c61a0c804809740d46dd76059f25",
      "commitAuthor": "Karthik Kambatla",
      "diff": "@@ -0,0 +1,19 @@\n+  public void serviceStop() throws Exception {\n+    synchronized (this) {\n+      if (updateThread !\u003d null) {\n+        updateThread.interrupt();\n+        updateThread.join(THREAD_JOIN_TIMEOUT_MS);\n+      }\n+      if (continuousSchedulingEnabled) {\n+        if (schedulingThread !\u003d null) {\n+          schedulingThread.interrupt();\n+          schedulingThread.join(THREAD_JOIN_TIMEOUT_MS);\n+        }\n+      }\n+      if (allocsLoader !\u003d null) {\n+        allocsLoader.stop();\n+      }\n+    }\n+\n+    super.serviceStop();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void serviceStop() throws Exception {\n    synchronized (this) {\n      if (updateThread !\u003d null) {\n        updateThread.interrupt();\n        updateThread.join(THREAD_JOIN_TIMEOUT_MS);\n      }\n      if (continuousSchedulingEnabled) {\n        if (schedulingThread !\u003d null) {\n          schedulingThread.interrupt();\n          schedulingThread.join(THREAD_JOIN_TIMEOUT_MS);\n        }\n      }\n      if (allocsLoader !\u003d null) {\n        allocsLoader.stop();\n      }\n    }\n\n    super.serviceStop();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairScheduler.java"
    }
  }
}