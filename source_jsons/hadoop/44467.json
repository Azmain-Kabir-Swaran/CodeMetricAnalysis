{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ApplicationMaster.java",
  "functionName": "onContainerStarted",
  "functionId": "onContainerStarted___containerId-ContainerId__allServiceResponse-Map__String,ByteBuffer__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/ApplicationMaster.java",
  "functionStartLine": 1332,
  "functionEndLine": 1351,
  "numCommitsSeen": 113,
  "timeTaken": 5414,
  "changeHistory": [
    "2064ca015d1584263aac0cc20c60b925a3aff612",
    "d09058b2fd18803d12f0835fdf78aef5e0b99c90",
    "092fead5d9875fb3760206bcdd76cdafec5e9481",
    "4fa1afdb883dab8786d2fb5c72a195dd2e87d711",
    "3832795e3c3ea9dcf5c70f348f894882b2ace98e",
    "89e5c44f9e891a3579384c3fa3766937cd4970f1",
    "d45ff878c4cb8b359abb17ecf09d24b6f862874c",
    "f291d82cd49c04a81380bc45c97c279d791b571c",
    "c298a9a845f89317eb9efad332e6657c56736a4d",
    "1d4612f5ad9678c952b416e798dccd20c88f96ef",
    "3de66011c2e80d7c458a67f80042af986fcc677d",
    "fd1c424548999cb8843f40cb6a342387f98bde6c",
    "be3edccf0acf55e710b0ec8ab8ce8418da74c615",
    "243bcd367ff3130d74676280233041f88aca62a5",
    "7ef54faad4bee4346da082a3f8cc5d6ea405d74a",
    "b503b6a07d7210c94657131dcd97239012ecb313"
  ],
  "changeHistoryShort": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": "Ybodychange",
    "d09058b2fd18803d12f0835fdf78aef5e0b99c90": "Ybodychange",
    "092fead5d9875fb3760206bcdd76cdafec5e9481": "Ybodychange",
    "4fa1afdb883dab8786d2fb5c72a195dd2e87d711": "Ybodychange",
    "3832795e3c3ea9dcf5c70f348f894882b2ace98e": "Ybodychange",
    "89e5c44f9e891a3579384c3fa3766937cd4970f1": "Ybodychange",
    "d45ff878c4cb8b359abb17ecf09d24b6f862874c": "Ybodychange",
    "f291d82cd49c04a81380bc45c97c279d791b571c": "Ybodychange",
    "c298a9a845f89317eb9efad332e6657c56736a4d": "Ybodychange",
    "1d4612f5ad9678c952b416e798dccd20c88f96ef": "Ybodychange",
    "3de66011c2e80d7c458a67f80042af986fcc677d": "Ybodychange",
    "fd1c424548999cb8843f40cb6a342387f98bde6c": "Ybodychange",
    "be3edccf0acf55e710b0ec8ab8ce8418da74c615": "Ybodychange",
    "243bcd367ff3130d74676280233041f88aca62a5": "Ybodychange",
    "7ef54faad4bee4346da082a3f8cc5d6ea405d74a": "Ybodychange",
    "b503b6a07d7210c94657131dcd97239012ecb313": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9349.  Changed logging to use slf4j api.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "15/03/19 4:20 PM",
      "commitName": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "31/01/19 11:24 AM",
      "commitNameOld": "f738b397ae021c9be900e4ec51ab55cd69b075e0",
      "commitAuthorOld": "Giovanni Matteo Fumarola",
      "daysBetweenCommits": 43.16,
      "commitsBetweenForRepo": 374,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,20 @@\n     public void onContainerStarted(ContainerId containerId,\n         Map\u003cString, ByteBuffer\u003e allServiceResponse) {\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Succeeded to start Container \" + containerId);\n-      }\n+      LOG.debug(\"Succeeded to start Container {}\", containerId);\n       Container container \u003d containers.get(containerId);\n       if (container !\u003d null) {\n         applicationMaster.nmClientAsync.getContainerStatusAsync(\n             containerId, container.getNodeId());\n       }\n       if (applicationMaster.timelineServiceV2Enabled) {\n         long startTime \u003d SystemClock.getInstance().getTime();\n         applicationMaster.getContainerStartTimes().put(containerId, startTime);\n         applicationMaster.publishContainerStartEventOnTimelineServiceV2(\n             container, startTime);\n       }\n       if (applicationMaster.timelineServiceV1Enabled) {\n         applicationMaster.publishContainerStartEvent(\n             applicationMaster.timelineClient, container,\n             applicationMaster.domainId, applicationMaster.appSubmitterUgi);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void onContainerStarted(ContainerId containerId,\n        Map\u003cString, ByteBuffer\u003e allServiceResponse) {\n      LOG.debug(\"Succeeded to start Container {}\", containerId);\n      Container container \u003d containers.get(containerId);\n      if (container !\u003d null) {\n        applicationMaster.nmClientAsync.getContainerStatusAsync(\n            containerId, container.getNodeId());\n      }\n      if (applicationMaster.timelineServiceV2Enabled) {\n        long startTime \u003d SystemClock.getInstance().getTime();\n        applicationMaster.getContainerStartTimes().put(containerId, startTime);\n        applicationMaster.publishContainerStartEventOnTimelineServiceV2(\n            container, startTime);\n      }\n      if (applicationMaster.timelineServiceV1Enabled) {\n        applicationMaster.publishContainerStartEvent(\n            applicationMaster.timelineClient, container,\n            applicationMaster.domainId, applicationMaster.appSubmitterUgi);\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/ApplicationMaster.java",
      "extendedDetails": {}
    },
    "d09058b2fd18803d12f0835fdf78aef5e0b99c90": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6736. Consider writing to both ats v1 \u0026 v2 from RM for smoother upgrades. Contributed by Aaron Gresch.\n",
      "commitDate": "15/01/18 6:28 PM",
      "commitName": "d09058b2fd18803d12f0835fdf78aef5e0b99c90",
      "commitAuthor": "Rohith Sharma K S",
      "commitDateOld": "09/01/18 3:09 AM",
      "commitNameOld": "783a01eb4a155044a54a30a636b86b3ab2b33044",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 6.64,
      "commitsBetweenForRepo": 33,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,22 @@\n     public void onContainerStarted(ContainerId containerId,\n         Map\u003cString, ByteBuffer\u003e allServiceResponse) {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Succeeded to start Container \" + containerId);\n       }\n       Container container \u003d containers.get(containerId);\n       if (container !\u003d null) {\n         applicationMaster.nmClientAsync.getContainerStatusAsync(\n             containerId, container.getNodeId());\n       }\n       if (applicationMaster.timelineServiceV2Enabled) {\n         long startTime \u003d SystemClock.getInstance().getTime();\n         applicationMaster.getContainerStartTimes().put(containerId, startTime);\n         applicationMaster.publishContainerStartEventOnTimelineServiceV2(\n             container, startTime);\n-      } else if (applicationMaster.timelineServiceV1Enabled) {\n+      }\n+      if (applicationMaster.timelineServiceV1Enabled) {\n         applicationMaster.publishContainerStartEvent(\n             applicationMaster.timelineClient, container,\n             applicationMaster.domainId, applicationMaster.appSubmitterUgi);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void onContainerStarted(ContainerId containerId,\n        Map\u003cString, ByteBuffer\u003e allServiceResponse) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Succeeded to start Container \" + containerId);\n      }\n      Container container \u003d containers.get(containerId);\n      if (container !\u003d null) {\n        applicationMaster.nmClientAsync.getContainerStatusAsync(\n            containerId, container.getNodeId());\n      }\n      if (applicationMaster.timelineServiceV2Enabled) {\n        long startTime \u003d SystemClock.getInstance().getTime();\n        applicationMaster.getContainerStartTimes().put(containerId, startTime);\n        applicationMaster.publishContainerStartEventOnTimelineServiceV2(\n            container, startTime);\n      }\n      if (applicationMaster.timelineServiceV1Enabled) {\n        applicationMaster.publishContainerStartEvent(\n            applicationMaster.timelineClient, container,\n            applicationMaster.domainId, applicationMaster.appSubmitterUgi);\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/ApplicationMaster.java",
      "extendedDetails": {}
    },
    "092fead5d9875fb3760206bcdd76cdafec5e9481": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5792. Adopt the id prefix for YARN, MR, and DS entities. Contributed by Varun Saxena.\n",
      "commitDate": "29/08/17 10:59 PM",
      "commitName": "092fead5d9875fb3760206bcdd76cdafec5e9481",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "26/05/17 12:05 PM",
      "commitNameOld": "d81372dfad32488e7c46ffcfccdf0aa26bee04a5",
      "commitAuthorOld": "Daniel Templeton",
      "daysBetweenCommits": 95.45,
      "commitsBetweenForRepo": 557,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,21 @@\n     public void onContainerStarted(ContainerId containerId,\n         Map\u003cString, ByteBuffer\u003e allServiceResponse) {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Succeeded to start Container \" + containerId);\n       }\n       Container container \u003d containers.get(containerId);\n       if (container !\u003d null) {\n         applicationMaster.nmClientAsync.getContainerStatusAsync(\n             containerId, container.getNodeId());\n       }\n       if (applicationMaster.timelineServiceV2Enabled) {\n-        applicationMaster\n-            .publishContainerStartEventOnTimelineServiceV2(container);\n+        long startTime \u003d SystemClock.getInstance().getTime();\n+        applicationMaster.getContainerStartTimes().put(containerId, startTime);\n+        applicationMaster.publishContainerStartEventOnTimelineServiceV2(\n+            container, startTime);\n       } else if (applicationMaster.timelineServiceV1Enabled) {\n         applicationMaster.publishContainerStartEvent(\n             applicationMaster.timelineClient, container,\n             applicationMaster.domainId, applicationMaster.appSubmitterUgi);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void onContainerStarted(ContainerId containerId,\n        Map\u003cString, ByteBuffer\u003e allServiceResponse) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Succeeded to start Container \" + containerId);\n      }\n      Container container \u003d containers.get(containerId);\n      if (container !\u003d null) {\n        applicationMaster.nmClientAsync.getContainerStatusAsync(\n            containerId, container.getNodeId());\n      }\n      if (applicationMaster.timelineServiceV2Enabled) {\n        long startTime \u003d SystemClock.getInstance().getTime();\n        applicationMaster.getContainerStartTimes().put(containerId, startTime);\n        applicationMaster.publishContainerStartEventOnTimelineServiceV2(\n            container, startTime);\n      } else if (applicationMaster.timelineServiceV1Enabled) {\n        applicationMaster.publishContainerStartEvent(\n            applicationMaster.timelineClient, container,\n            applicationMaster.domainId, applicationMaster.appSubmitterUgi);\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/ApplicationMaster.java",
      "extendedDetails": {}
    },
    "4fa1afdb883dab8786d2fb5c72a195dd2e87d711": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4675. Reorganize TimelineClient and TimelineClientImpl into separate classes for ATSv1.x and ATSv2. Contributed by Naganarasimha G R.\n",
      "commitDate": "16/02/17 11:41 AM",
      "commitName": "4fa1afdb883dab8786d2fb5c72a195dd2e87d711",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "06/01/17 2:26 PM",
      "commitNameOld": "71a4acf74bc9ca34f0e57835c9d6e3efbe7c0567",
      "commitAuthorOld": "Daniel Templeton",
      "daysBetweenCommits": 40.89,
      "commitsBetweenForRepo": 204,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,19 @@\n     public void onContainerStarted(ContainerId containerId,\n         Map\u003cString, ByteBuffer\u003e allServiceResponse) {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Succeeded to start Container \" + containerId);\n       }\n       Container container \u003d containers.get(containerId);\n       if (container !\u003d null) {\n         applicationMaster.nmClientAsync.getContainerStatusAsync(\n             containerId, container.getNodeId());\n       }\n-      if(applicationMaster.timelineClient !\u003d null) {\n-        if (applicationMaster.timelineServiceV2) {\n-          applicationMaster.publishContainerStartEventOnTimelineServiceV2(\n-              container);\n-        } else {\n-          applicationMaster.publishContainerStartEvent(\n-              applicationMaster.timelineClient, container,\n-              applicationMaster.domainId, applicationMaster.appSubmitterUgi);\n-        }\n+      if (applicationMaster.timelineServiceV2Enabled) {\n+        applicationMaster\n+            .publishContainerStartEventOnTimelineServiceV2(container);\n+      } else if (applicationMaster.timelineServiceV1Enabled) {\n+        applicationMaster.publishContainerStartEvent(\n+            applicationMaster.timelineClient, container,\n+            applicationMaster.domainId, applicationMaster.appSubmitterUgi);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void onContainerStarted(ContainerId containerId,\n        Map\u003cString, ByteBuffer\u003e allServiceResponse) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Succeeded to start Container \" + containerId);\n      }\n      Container container \u003d containers.get(containerId);\n      if (container !\u003d null) {\n        applicationMaster.nmClientAsync.getContainerStatusAsync(\n            containerId, container.getNodeId());\n      }\n      if (applicationMaster.timelineServiceV2Enabled) {\n        applicationMaster\n            .publishContainerStartEventOnTimelineServiceV2(container);\n      } else if (applicationMaster.timelineServiceV1Enabled) {\n        applicationMaster.publishContainerStartEvent(\n            applicationMaster.timelineClient, container,\n            applicationMaster.domainId, applicationMaster.appSubmitterUgi);\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/ApplicationMaster.java",
      "extendedDetails": {}
    },
    "3832795e3c3ea9dcf5c70f348f894882b2ace98e": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5210 NPE in Distributed Shell while publishing DS_CONTAINER_START event (Varun Saxena via Vrushali C)\n",
      "commitDate": "10/07/16 8:46 AM",
      "commitName": "3832795e3c3ea9dcf5c70f348f894882b2ace98e",
      "commitAuthor": "Vrushali Channapattan",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "0d02ab8729630ad3cfb4300702927333b1d349e3",
      "commitAuthorOld": "Sangjin Lee",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 31,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,21 @@\n     public void onContainerStarted(ContainerId containerId,\n         Map\u003cString, ByteBuffer\u003e allServiceResponse) {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Succeeded to start Container \" + containerId);\n       }\n       Container container \u003d containers.get(containerId);\n       if (container !\u003d null) {\n-        applicationMaster.nmClientAsync.getContainerStatusAsync(containerId, container.getNodeId());\n+        applicationMaster.nmClientAsync.getContainerStatusAsync(\n+            containerId, container.getNodeId());\n       }\n       if(applicationMaster.timelineClient !\u003d null) {\n-        applicationMaster.publishContainerStartEvent(\n-            applicationMaster.timelineClient, container,\n-            applicationMaster.domainId, applicationMaster.appSubmitterUgi);\n-\n         if (applicationMaster.timelineServiceV2) {\n-            applicationMaster.publishContainerStartEventOnTimelineServiceV2(\n-                container);\n+          applicationMaster.publishContainerStartEventOnTimelineServiceV2(\n+              container);\n         } else {\n           applicationMaster.publishContainerStartEvent(\n             applicationMaster.timelineClient, container,\n             applicationMaster.domainId, applicationMaster.appSubmitterUgi);\n         }\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void onContainerStarted(ContainerId containerId,\n        Map\u003cString, ByteBuffer\u003e allServiceResponse) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Succeeded to start Container \" + containerId);\n      }\n      Container container \u003d containers.get(containerId);\n      if (container !\u003d null) {\n        applicationMaster.nmClientAsync.getContainerStatusAsync(\n            containerId, container.getNodeId());\n      }\n      if(applicationMaster.timelineClient !\u003d null) {\n        if (applicationMaster.timelineServiceV2) {\n          applicationMaster.publishContainerStartEventOnTimelineServiceV2(\n              container);\n        } else {\n          applicationMaster.publishContainerStartEvent(\n            applicationMaster.timelineClient, container,\n            applicationMaster.domainId, applicationMaster.appSubmitterUgi);\n        }\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/ApplicationMaster.java",
      "extendedDetails": {}
    },
    "89e5c44f9e891a3579384c3fa3766937cd4970f1": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4356. Ensure the timeline service v.2 is disabled cleanly and has no\nimpact when it\u0027s turned off. Contributed by Sangjin Lee.\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "89e5c44f9e891a3579384c3fa3766937cd4970f1",
      "commitAuthor": "Li Lu",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "5712b8f9fd1859fe046b482889239bd164ed7dab",
      "commitAuthorOld": "Zhijie Shen",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 52,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,24 @@\n     public void onContainerStarted(ContainerId containerId,\n         Map\u003cString, ByteBuffer\u003e allServiceResponse) {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Succeeded to start Container \" + containerId);\n       }\n       Container container \u003d containers.get(containerId);\n       if (container !\u003d null) {\n         applicationMaster.nmClientAsync.getContainerStatusAsync(containerId, container.getNodeId());\n       }\n       if(applicationMaster.timelineClient !\u003d null) {\n         applicationMaster.publishContainerStartEvent(\n             applicationMaster.timelineClient, container,\n             applicationMaster.domainId, applicationMaster.appSubmitterUgi);\n \n-        if (applicationMaster.newTimelineService) {\n-            ApplicationMaster.publishContainerStartEventOnNewTimelineService(\n-                applicationMaster.timelineClient, container,\n-                applicationMaster.domainId, applicationMaster.appSubmitterUgi);\n+        if (applicationMaster.timelineServiceV2) {\n+            applicationMaster.publishContainerStartEventOnTimelineServiceV2(\n+                container);\n         } else {\n           applicationMaster.publishContainerStartEvent(\n-              applicationMaster.timelineClient, container,\n-              applicationMaster.domainId, applicationMaster.appSubmitterUgi);\n+            applicationMaster.timelineClient, container,\n+            applicationMaster.domainId, applicationMaster.appSubmitterUgi);\n         }\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void onContainerStarted(ContainerId containerId,\n        Map\u003cString, ByteBuffer\u003e allServiceResponse) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Succeeded to start Container \" + containerId);\n      }\n      Container container \u003d containers.get(containerId);\n      if (container !\u003d null) {\n        applicationMaster.nmClientAsync.getContainerStatusAsync(containerId, container.getNodeId());\n      }\n      if(applicationMaster.timelineClient !\u003d null) {\n        applicationMaster.publishContainerStartEvent(\n            applicationMaster.timelineClient, container,\n            applicationMaster.domainId, applicationMaster.appSubmitterUgi);\n\n        if (applicationMaster.timelineServiceV2) {\n            applicationMaster.publishContainerStartEventOnTimelineServiceV2(\n                container);\n        } else {\n          applicationMaster.publishContainerStartEvent(\n            applicationMaster.timelineClient, container,\n            applicationMaster.domainId, applicationMaster.appSubmitterUgi);\n        }\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/ApplicationMaster.java",
      "extendedDetails": {}
    },
    "d45ff878c4cb8b359abb17ecf09d24b6f862874c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3125. Made the distributed shell use timeline service next gen and add an integration test for it. Contributed by Junping Du and Li Lu.\n\n(cherry picked from commit bf08f7f0ed4900ce52f98137297dd1a47ba2a536)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "d45ff878c4cb8b359abb17ecf09d24b6f862874c",
      "commitAuthor": "Zhijie Shen",
      "commitDateOld": "09/07/16 5:09 AM",
      "commitNameOld": "9bdb5bebea1183ec2f697ee3e55392df4fe697bb",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 1.15,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,25 @@\n     public void onContainerStarted(ContainerId containerId,\n         Map\u003cString, ByteBuffer\u003e allServiceResponse) {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Succeeded to start Container \" + containerId);\n       }\n       Container container \u003d containers.get(containerId);\n       if (container !\u003d null) {\n         applicationMaster.nmClientAsync.getContainerStatusAsync(containerId, container.getNodeId());\n       }\n       if(applicationMaster.timelineClient !\u003d null) {\n         applicationMaster.publishContainerStartEvent(\n             applicationMaster.timelineClient, container,\n             applicationMaster.domainId, applicationMaster.appSubmitterUgi);\n+\n+        if (applicationMaster.newTimelineService) {\n+            ApplicationMaster.publishContainerStartEventOnNewTimelineService(\n+                applicationMaster.timelineClient, container,\n+                applicationMaster.domainId, applicationMaster.appSubmitterUgi);\n+        } else {\n+          applicationMaster.publishContainerStartEvent(\n+              applicationMaster.timelineClient, container,\n+              applicationMaster.domainId, applicationMaster.appSubmitterUgi);\n+        }\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void onContainerStarted(ContainerId containerId,\n        Map\u003cString, ByteBuffer\u003e allServiceResponse) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Succeeded to start Container \" + containerId);\n      }\n      Container container \u003d containers.get(containerId);\n      if (container !\u003d null) {\n        applicationMaster.nmClientAsync.getContainerStatusAsync(containerId, container.getNodeId());\n      }\n      if(applicationMaster.timelineClient !\u003d null) {\n        applicationMaster.publishContainerStartEvent(\n            applicationMaster.timelineClient, container,\n            applicationMaster.domainId, applicationMaster.appSubmitterUgi);\n\n        if (applicationMaster.newTimelineService) {\n            ApplicationMaster.publishContainerStartEventOnNewTimelineService(\n                applicationMaster.timelineClient, container,\n                applicationMaster.domainId, applicationMaster.appSubmitterUgi);\n        } else {\n          applicationMaster.publishContainerStartEvent(\n              applicationMaster.timelineClient, container,\n              applicationMaster.domainId, applicationMaster.appSubmitterUgi);\n        }\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/ApplicationMaster.java",
      "extendedDetails": {}
    },
    "f291d82cd49c04a81380bc45c97c279d791b571c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4545. Allow YARN distributed shell to use ATS v1.5 APIs. Li Lu via junping_du\n",
      "commitDate": "14/03/16 8:28 AM",
      "commitName": "f291d82cd49c04a81380bc45c97c279d791b571c",
      "commitAuthor": "Junping Du",
      "commitDateOld": "18/01/16 4:58 PM",
      "commitNameOld": "f385851141522633184ce394899c659af5ace92a",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 55.6,
      "commitsBetweenForRepo": 377,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n     public void onContainerStarted(ContainerId containerId,\n         Map\u003cString, ByteBuffer\u003e allServiceResponse) {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Succeeded to start Container \" + containerId);\n       }\n       Container container \u003d containers.get(containerId);\n       if (container !\u003d null) {\n         applicationMaster.nmClientAsync.getContainerStatusAsync(containerId, container.getNodeId());\n       }\n       if(applicationMaster.timelineClient !\u003d null) {\n-        ApplicationMaster.publishContainerStartEvent(\n+        applicationMaster.publishContainerStartEvent(\n             applicationMaster.timelineClient, container,\n             applicationMaster.domainId, applicationMaster.appSubmitterUgi);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void onContainerStarted(ContainerId containerId,\n        Map\u003cString, ByteBuffer\u003e allServiceResponse) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Succeeded to start Container \" + containerId);\n      }\n      Container container \u003d containers.get(containerId);\n      if (container !\u003d null) {\n        applicationMaster.nmClientAsync.getContainerStatusAsync(containerId, container.getNodeId());\n      }\n      if(applicationMaster.timelineClient !\u003d null) {\n        applicationMaster.publishContainerStartEvent(\n            applicationMaster.timelineClient, container,\n            applicationMaster.domainId, applicationMaster.appSubmitterUgi);\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/ApplicationMaster.java",
      "extendedDetails": {}
    },
    "c298a9a845f89317eb9efad332e6657c56736a4d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2375. Allow enabling/disabling timeline server per framework. (Mit Desai via jeagles)\n",
      "commitDate": "20/11/14 9:34 PM",
      "commitName": "c298a9a845f89317eb9efad332e6657c56736a4d",
      "commitAuthor": "Jonathan Eagles",
      "commitDateOld": "29/10/14 12:12 PM",
      "commitNameOld": "a8c120222047280234c3411ce1c1c9b17f08c851",
      "commitAuthorOld": "Zhijie Shen",
      "daysBetweenCommits": 22.43,
      "commitsBetweenForRepo": 218,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,15 @@\n     public void onContainerStarted(ContainerId containerId,\n         Map\u003cString, ByteBuffer\u003e allServiceResponse) {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Succeeded to start Container \" + containerId);\n       }\n       Container container \u003d containers.get(containerId);\n       if (container !\u003d null) {\n         applicationMaster.nmClientAsync.getContainerStatusAsync(containerId, container.getNodeId());\n       }\n-      ApplicationMaster.publishContainerStartEvent(\n-          applicationMaster.timelineClient, container,\n-          applicationMaster.domainId, applicationMaster.appSubmitterUgi);\n+      if(applicationMaster.timelineClient !\u003d null) {\n+        ApplicationMaster.publishContainerStartEvent(\n+            applicationMaster.timelineClient, container,\n+            applicationMaster.domainId, applicationMaster.appSubmitterUgi);\n+      }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void onContainerStarted(ContainerId containerId,\n        Map\u003cString, ByteBuffer\u003e allServiceResponse) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Succeeded to start Container \" + containerId);\n      }\n      Container container \u003d containers.get(containerId);\n      if (container !\u003d null) {\n        applicationMaster.nmClientAsync.getContainerStatusAsync(containerId, container.getNodeId());\n      }\n      if(applicationMaster.timelineClient !\u003d null) {\n        ApplicationMaster.publishContainerStartEvent(\n            applicationMaster.timelineClient, container,\n            applicationMaster.domainId, applicationMaster.appSubmitterUgi);\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/ApplicationMaster.java",
      "extendedDetails": {}
    },
    "1d4612f5ad9678c952b416e798dccd20c88f96ef": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2629. Made the distributed shell use the domain-based timeline ACLs. Contributed by Zhijie Shen.\n",
      "commitDate": "09/10/14 12:59 PM",
      "commitName": "1d4612f5ad9678c952b416e798dccd20c88f96ef",
      "commitAuthor": "Zhijie Shen",
      "commitDateOld": "01/10/14 3:38 PM",
      "commitNameOld": "52bbe0f11bc8e97df78a1ab9b63f4eff65fd7a76",
      "commitAuthorOld": "Zhijie Shen",
      "daysBetweenCommits": 7.89,
      "commitsBetweenForRepo": 72,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,13 @@\n     public void onContainerStarted(ContainerId containerId,\n         Map\u003cString, ByteBuffer\u003e allServiceResponse) {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Succeeded to start Container \" + containerId);\n       }\n       Container container \u003d containers.get(containerId);\n       if (container !\u003d null) {\n         applicationMaster.nmClientAsync.getContainerStatusAsync(containerId, container.getNodeId());\n       }\n-      try {\n-        ApplicationMaster.publishContainerStartEvent(\n-            applicationMaster.timelineClient, container);\n-      } catch (Exception e) {\n-        LOG.error(\"Container start event could not be published for \"\n-            + container.getId().toString(), e);\n-      }\n+      ApplicationMaster.publishContainerStartEvent(\n+          applicationMaster.timelineClient, container,\n+          applicationMaster.domainId, applicationMaster.appSubmitterUgi);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void onContainerStarted(ContainerId containerId,\n        Map\u003cString, ByteBuffer\u003e allServiceResponse) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Succeeded to start Container \" + containerId);\n      }\n      Container container \u003d containers.get(containerId);\n      if (container !\u003d null) {\n        applicationMaster.nmClientAsync.getContainerStatusAsync(containerId, container.getNodeId());\n      }\n      ApplicationMaster.publishContainerStartEvent(\n          applicationMaster.timelineClient, container,\n          applicationMaster.domainId, applicationMaster.appSubmitterUgi);\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/ApplicationMaster.java",
      "extendedDetails": {}
    },
    "3de66011c2e80d7c458a67f80042af986fcc677d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2450. Fix typos in log messages. Contributed by Ray Chiang.\n",
      "commitDate": "29/08/14 11:16 AM",
      "commitName": "3de66011c2e80d7c458a67f80042af986fcc677d",
      "commitAuthor": "Hitesh Shah",
      "commitDateOld": "13/08/14 2:07 PM",
      "commitNameOld": "1a535f8dcdfc4fab8ba6125680957caf55ea8f46",
      "commitAuthorOld": "Zhijie Shen",
      "daysBetweenCommits": 15.88,
      "commitsBetweenForRepo": 118,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n     public void onContainerStarted(ContainerId containerId,\n         Map\u003cString, ByteBuffer\u003e allServiceResponse) {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Succeeded to start Container \" + containerId);\n       }\n       Container container \u003d containers.get(containerId);\n       if (container !\u003d null) {\n         applicationMaster.nmClientAsync.getContainerStatusAsync(containerId, container.getNodeId());\n       }\n       try {\n         ApplicationMaster.publishContainerStartEvent(\n             applicationMaster.timelineClient, container);\n       } catch (Exception e) {\n-        LOG.error(\"Container start event coud not be pulished for \"\n+        LOG.error(\"Container start event could not be published for \"\n             + container.getId().toString(), e);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void onContainerStarted(ContainerId containerId,\n        Map\u003cString, ByteBuffer\u003e allServiceResponse) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Succeeded to start Container \" + containerId);\n      }\n      Container container \u003d containers.get(containerId);\n      if (container !\u003d null) {\n        applicationMaster.nmClientAsync.getContainerStatusAsync(containerId, container.getNodeId());\n      }\n      try {\n        ApplicationMaster.publishContainerStartEvent(\n            applicationMaster.timelineClient, container);\n      } catch (Exception e) {\n        LOG.error(\"Container start event could not be published for \"\n            + container.getId().toString(), e);\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/ApplicationMaster.java",
      "extendedDetails": {}
    },
    "fd1c424548999cb8843f40cb6a342387f98bde6c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1690. Made DistributedShell send timeline entities+events. Contributed by Mayank Bansal.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1579123 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/03/14 8:49 PM",
      "commitName": "fd1c424548999cb8843f40cb6a342387f98bde6c",
      "commitAuthor": "Zhijie Shen",
      "commitDateOld": "16/03/14 11:32 AM",
      "commitNameOld": "96e0ca2d272dc7ecd7f7f0e65a0c596fcc063bcb",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 2.39,
      "commitsBetweenForRepo": 24,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,17 @@\n     public void onContainerStarted(ContainerId containerId,\n         Map\u003cString, ByteBuffer\u003e allServiceResponse) {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Succeeded to start Container \" + containerId);\n       }\n       Container container \u003d containers.get(containerId);\n       if (container !\u003d null) {\n         applicationMaster.nmClientAsync.getContainerStatusAsync(containerId, container.getNodeId());\n       }\n+      try {\n+        ApplicationMaster.publishContainerStartEvent(\n+            applicationMaster.timelineClient, container);\n+      } catch (Exception e) {\n+        LOG.error(\"Container start event coud not be pulished for \"\n+            + container.getId().toString(), e);\n+      }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void onContainerStarted(ContainerId containerId,\n        Map\u003cString, ByteBuffer\u003e allServiceResponse) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Succeeded to start Container \" + containerId);\n      }\n      Container container \u003d containers.get(containerId);\n      if (container !\u003d null) {\n        applicationMaster.nmClientAsync.getContainerStatusAsync(containerId, container.getNodeId());\n      }\n      try {\n        ApplicationMaster.publishContainerStartEvent(\n            applicationMaster.timelineClient, container);\n      } catch (Exception e) {\n        LOG.error(\"Container start event coud not be pulished for \"\n            + container.getId().toString(), e);\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/ApplicationMaster.java",
      "extendedDetails": {}
    },
    "be3edccf0acf55e710b0ec8ab8ce8418da74c615": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1273. Fixed Distributed-shell to account for containers that failed to start. Contributed by Hitesh Shah.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1529389 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/10/13 11:08 PM",
      "commitName": "be3edccf0acf55e710b0ec8ab8ce8418da74c615",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "04/10/13 6:43 PM",
      "commitNameOld": "fc23fd312174f36508eb40f3084e262e23a68e1b",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 0.18,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,10 @@\n     public void onContainerStarted(ContainerId containerId,\n         Map\u003cString, ByteBuffer\u003e allServiceResponse) {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Succeeded to start Container \" + containerId);\n       }\n       Container container \u003d containers.get(containerId);\n       if (container !\u003d null) {\n-        nmClientAsync.getContainerStatusAsync(containerId, container.getNodeId());\n+        applicationMaster.nmClientAsync.getContainerStatusAsync(containerId, container.getNodeId());\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void onContainerStarted(ContainerId containerId,\n        Map\u003cString, ByteBuffer\u003e allServiceResponse) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Succeeded to start Container \" + containerId);\n      }\n      Container container \u003d containers.get(containerId);\n      if (container !\u003d null) {\n        applicationMaster.nmClientAsync.getContainerStatusAsync(containerId, container.getNodeId());\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/ApplicationMaster.java",
      "extendedDetails": {}
    },
    "243bcd367ff3130d74676280233041f88aca62a5": {
      "type": "Ybodychange",
      "commitMessage": "YARN-694. Starting to use NMTokens to authenticate all communication with NodeManagers. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1494369 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/06/13 4:19 PM",
      "commitName": "243bcd367ff3130d74676280233041f88aca62a5",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/06/13 9:02 PM",
      "commitNameOld": "7ef54faad4bee4346da082a3f8cc5d6ea405d74a",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 0.8,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,10 @@\n     public void onContainerStarted(ContainerId containerId,\n         Map\u003cString, ByteBuffer\u003e allServiceResponse) {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Succeeded to start Container \" + containerId);\n       }\n       Container container \u003d containers.get(containerId);\n       if (container !\u003d null) {\n-        nmClientAsync.getContainerStatusAsync(containerId, container.getNodeId(),\n-            container.getContainerToken());\n+        nmClientAsync.getContainerStatusAsync(containerId, container.getNodeId());\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void onContainerStarted(ContainerId containerId,\n        Map\u003cString, ByteBuffer\u003e allServiceResponse) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Succeeded to start Container \" + containerId);\n      }\n      Container container \u003d containers.get(containerId);\n      if (container !\u003d null) {\n        nmClientAsync.getContainerStatusAsync(containerId, container.getNodeId());\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/ApplicationMaster.java",
      "extendedDetails": {}
    },
    "7ef54faad4bee4346da082a3f8cc5d6ea405d74a": {
      "type": "Ybodychange",
      "commitMessage": "YARN-834. Fixed annotations for yarn-client module, reorganized packages and clearly differentiated *Async apis. Contributed by Arun C Murthy and Zhijie Shen.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1494017 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/06/13 9:02 PM",
      "commitName": "7ef54faad4bee4346da082a3f8cc5d6ea405d74a",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "16/06/13 7:27 PM",
      "commitNameOld": "77e134d13fb87cd098f2e9c23212affe0a7be1be",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 1.07,
      "commitsBetweenForRepo": 18,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n     public void onContainerStarted(ContainerId containerId,\n         Map\u003cString, ByteBuffer\u003e allServiceResponse) {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Succeeded to start Container \" + containerId);\n       }\n       Container container \u003d containers.get(containerId);\n       if (container !\u003d null) {\n-        nmClientAsync.getContainerStatus(containerId, container.getNodeId(),\n+        nmClientAsync.getContainerStatusAsync(containerId, container.getNodeId(),\n             container.getContainerToken());\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void onContainerStarted(ContainerId containerId,\n        Map\u003cString, ByteBuffer\u003e allServiceResponse) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Succeeded to start Container \" + containerId);\n      }\n      Container container \u003d containers.get(containerId);\n      if (container !\u003d null) {\n        nmClientAsync.getContainerStatusAsync(containerId, container.getNodeId(),\n            container.getContainerToken());\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/ApplicationMaster.java",
      "extendedDetails": {}
    },
    "b503b6a07d7210c94657131dcd97239012ecb313": {
      "type": "Yintroduced",
      "commitMessage": "YARN-639. Modified Distributed Shell application to start using the new NMClient library. Contributed by Zhijie Shen.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1493280 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/06/13 4:18 PM",
      "commitName": "b503b6a07d7210c94657131dcd97239012ecb313",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,11 @@\n+    public void onContainerStarted(ContainerId containerId,\n+        Map\u003cString, ByteBuffer\u003e allServiceResponse) {\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"Succeeded to start Container \" + containerId);\n+      }\n+      Container container \u003d containers.get(containerId);\n+      if (container !\u003d null) {\n+        nmClientAsync.getContainerStatus(containerId, container.getNodeId(),\n+            container.getContainerToken());\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void onContainerStarted(ContainerId containerId,\n        Map\u003cString, ByteBuffer\u003e allServiceResponse) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Succeeded to start Container \" + containerId);\n      }\n      Container container \u003d containers.get(containerId);\n      if (container !\u003d null) {\n        nmClientAsync.getContainerStatus(containerId, container.getNodeId(),\n            container.getContainerToken());\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/ApplicationMaster.java"
    }
  }
}