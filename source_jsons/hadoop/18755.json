{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BaileyBorweinPlouffe.java",
  "functionName": "run",
  "functionId": "run___args-String[]",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-examples/src/main/java/org/apache/hadoop/examples/BaileyBorweinPlouffe.java",
  "functionStartLine": 403,
  "functionEndLine": 435,
  "numCommitsSeen": 11,
  "timeTaken": 6261,
  "changeHistory": [
    "c7729efee8727b59f2c78cd5a3ad23fa84139068",
    "26447229ba2c3d43db978c1b3ce95613669182ee",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "c7729efee8727b59f2c78cd5a3ad23fa84139068": "Ybodychange",
    "26447229ba2c3d43db978c1b3ce95613669182ee": "Yfilerename",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c7729efee8727b59f2c78cd5a3ad23fa84139068": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6389. Fix BaileyBorweinPlouffe CLI usage message. Contributed by\nBrahma Reddy Battula.\n",
      "commitDate": "10/06/15 8:35 AM",
      "commitName": "c7729efee8727b59f2c78cd5a3ad23fa84139068",
      "commitAuthor": "Devaraj K",
      "commitDateOld": "03/02/15 2:30 PM",
      "commitNameOld": "bd69fb2d44403e930d1fc0868ed1dd2a49dd9659",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 126.71,
      "commitsBetweenForRepo": 1210,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,33 @@\n   public int run(String[] args) throws IOException {\n     if (args.length !\u003d 4) {\n-      System.err.println(\"Usage: java \" + getClass().getName()\n+      System.err.println(\"Usage: bbp \"\n           + \" \u003cstartDigit\u003e \u003cnDigits\u003e \u003cnMaps\u003e \u003cworkingDir\u003e\");\n       ToolRunner.printGenericCommandUsage(System.err);\n       return -1;\n     }\n \n     final int startDigit \u003d Integer.parseInt(args[0]);\n     final int nDigits \u003d Integer.parseInt(args[1]);\n     final int nMaps \u003d Integer.parseInt(args[2]);\n     final String workingDir \u003d args[3];\n \n     if (startDigit \u003c\u003d 0) {\n       throw new IllegalArgumentException(\"startDigit \u003d \" + startDigit+\" \u003c\u003d 0\");\n     } else if (nDigits \u003c\u003d 0) {\n       throw new IllegalArgumentException(\"nDigits \u003d \" + nDigits + \" \u003c\u003d 0\");\n     } else if (nDigits % BBP_HEX_DIGITS !\u003d 0) {\n       throw new IllegalArgumentException(\"nDigits \u003d \" + nDigits\n           + \" is not a multiple of \" + BBP_HEX_DIGITS);\n     } else if (nDigits - 1L + startDigit \u003e IMPLEMENTATION_LIMIT + BBP_HEX_DIGITS) {\n       throw new UnsupportedOperationException(\"nDigits - 1 + startDigit \u003d \"\n           + (nDigits - 1L + startDigit)\n           + \" \u003e IMPLEMENTATION_LIMIT + BBP_HEX_DIGITS,\"\n           + \", where IMPLEMENTATION_LIMIT\u003d\" + IMPLEMENTATION_LIMIT\n           + \"and BBP_HEX_DIGITS\u003d\" + BBP_HEX_DIGITS);\n     } else if (nMaps \u003c\u003d 0) {\n       throw new IllegalArgumentException(\"nMaps \u003d \" + nMaps + \" \u003c\u003d 0\");\n     }\n \n     compute(startDigit, nDigits, nMaps, workingDir, getConf(), System.out);\n     return 0;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] args) throws IOException {\n    if (args.length !\u003d 4) {\n      System.err.println(\"Usage: bbp \"\n          + \" \u003cstartDigit\u003e \u003cnDigits\u003e \u003cnMaps\u003e \u003cworkingDir\u003e\");\n      ToolRunner.printGenericCommandUsage(System.err);\n      return -1;\n    }\n\n    final int startDigit \u003d Integer.parseInt(args[0]);\n    final int nDigits \u003d Integer.parseInt(args[1]);\n    final int nMaps \u003d Integer.parseInt(args[2]);\n    final String workingDir \u003d args[3];\n\n    if (startDigit \u003c\u003d 0) {\n      throw new IllegalArgumentException(\"startDigit \u003d \" + startDigit+\" \u003c\u003d 0\");\n    } else if (nDigits \u003c\u003d 0) {\n      throw new IllegalArgumentException(\"nDigits \u003d \" + nDigits + \" \u003c\u003d 0\");\n    } else if (nDigits % BBP_HEX_DIGITS !\u003d 0) {\n      throw new IllegalArgumentException(\"nDigits \u003d \" + nDigits\n          + \" is not a multiple of \" + BBP_HEX_DIGITS);\n    } else if (nDigits - 1L + startDigit \u003e IMPLEMENTATION_LIMIT + BBP_HEX_DIGITS) {\n      throw new UnsupportedOperationException(\"nDigits - 1 + startDigit \u003d \"\n          + (nDigits - 1L + startDigit)\n          + \" \u003e IMPLEMENTATION_LIMIT + BBP_HEX_DIGITS,\"\n          + \", where IMPLEMENTATION_LIMIT\u003d\" + IMPLEMENTATION_LIMIT\n          + \"and BBP_HEX_DIGITS\u003d\" + BBP_HEX_DIGITS);\n    } else if (nMaps \u003c\u003d 0) {\n      throw new IllegalArgumentException(\"nMaps \u003d \" + nMaps + \" \u003c\u003d 0\");\n    }\n\n    compute(startDigit, nDigits, nMaps, workingDir, getConf(), System.out);\n    return 0;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-examples/src/main/java/org/apache/hadoop/examples/BaileyBorweinPlouffe.java",
      "extendedDetails": {}
    },
    "26447229ba2c3d43db978c1b3ce95613669182ee": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7590. Mavenize streaming and MR examples. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1203941 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/11/11 5:24 PM",
      "commitName": "26447229ba2c3d43db978c1b3ce95613669182ee",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "18/11/11 1:04 AM",
      "commitNameOld": "905a127850d5e0cba85c2e075f989fa0f5cf129a",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.68,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public int run(String[] args) throws IOException {\n    if (args.length !\u003d 4) {\n      System.err.println(\"Usage: java \" + getClass().getName()\n          + \" \u003cstartDigit\u003e \u003cnDigits\u003e \u003cnMaps\u003e \u003cworkingDir\u003e\");\n      ToolRunner.printGenericCommandUsage(System.err);\n      return -1;\n    }\n\n    final int startDigit \u003d Integer.parseInt(args[0]);\n    final int nDigits \u003d Integer.parseInt(args[1]);\n    final int nMaps \u003d Integer.parseInt(args[2]);\n    final String workingDir \u003d args[3];\n\n    if (startDigit \u003c\u003d 0) {\n      throw new IllegalArgumentException(\"startDigit \u003d \" + startDigit+\" \u003c\u003d 0\");\n    } else if (nDigits \u003c\u003d 0) {\n      throw new IllegalArgumentException(\"nDigits \u003d \" + nDigits + \" \u003c\u003d 0\");\n    } else if (nDigits % BBP_HEX_DIGITS !\u003d 0) {\n      throw new IllegalArgumentException(\"nDigits \u003d \" + nDigits\n          + \" is not a multiple of \" + BBP_HEX_DIGITS);\n    } else if (nDigits - 1L + startDigit \u003e IMPLEMENTATION_LIMIT + BBP_HEX_DIGITS) {\n      throw new UnsupportedOperationException(\"nDigits - 1 + startDigit \u003d \"\n          + (nDigits - 1L + startDigit)\n          + \" \u003e IMPLEMENTATION_LIMIT + BBP_HEX_DIGITS,\"\n          + \", where IMPLEMENTATION_LIMIT\u003d\" + IMPLEMENTATION_LIMIT\n          + \"and BBP_HEX_DIGITS\u003d\" + BBP_HEX_DIGITS);\n    } else if (nMaps \u003c\u003d 0) {\n      throw new IllegalArgumentException(\"nMaps \u003d \" + nMaps + \" \u003c\u003d 0\");\n    }\n\n    compute(startDigit, nDigits, nMaps, workingDir, getConf(), System.out);\n    return 0;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-examples/src/main/java/org/apache/hadoop/examples/BaileyBorweinPlouffe.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/src/examples/org/apache/hadoop/examples/BaileyBorweinPlouffe.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-examples/src/main/java/org/apache/hadoop/examples/BaileyBorweinPlouffe.java"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public int run(String[] args) throws IOException {\n    if (args.length !\u003d 4) {\n      System.err.println(\"Usage: java \" + getClass().getName()\n          + \" \u003cstartDigit\u003e \u003cnDigits\u003e \u003cnMaps\u003e \u003cworkingDir\u003e\");\n      ToolRunner.printGenericCommandUsage(System.err);\n      return -1;\n    }\n\n    final int startDigit \u003d Integer.parseInt(args[0]);\n    final int nDigits \u003d Integer.parseInt(args[1]);\n    final int nMaps \u003d Integer.parseInt(args[2]);\n    final String workingDir \u003d args[3];\n\n    if (startDigit \u003c\u003d 0) {\n      throw new IllegalArgumentException(\"startDigit \u003d \" + startDigit+\" \u003c\u003d 0\");\n    } else if (nDigits \u003c\u003d 0) {\n      throw new IllegalArgumentException(\"nDigits \u003d \" + nDigits + \" \u003c\u003d 0\");\n    } else if (nDigits % BBP_HEX_DIGITS !\u003d 0) {\n      throw new IllegalArgumentException(\"nDigits \u003d \" + nDigits\n          + \" is not a multiple of \" + BBP_HEX_DIGITS);\n    } else if (nDigits - 1L + startDigit \u003e IMPLEMENTATION_LIMIT + BBP_HEX_DIGITS) {\n      throw new UnsupportedOperationException(\"nDigits - 1 + startDigit \u003d \"\n          + (nDigits - 1L + startDigit)\n          + \" \u003e IMPLEMENTATION_LIMIT + BBP_HEX_DIGITS,\"\n          + \", where IMPLEMENTATION_LIMIT\u003d\" + IMPLEMENTATION_LIMIT\n          + \"and BBP_HEX_DIGITS\u003d\" + BBP_HEX_DIGITS);\n    } else if (nMaps \u003c\u003d 0) {\n      throw new IllegalArgumentException(\"nMaps \u003d \" + nMaps + \" \u003c\u003d 0\");\n    }\n\n    compute(startDigit, nDigits, nMaps, workingDir, getConf(), System.out);\n    return 0;\n  }",
      "path": "hadoop-mapreduce-project/src/examples/org/apache/hadoop/examples/BaileyBorweinPlouffe.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/src/examples/org/apache/hadoop/examples/BaileyBorweinPlouffe.java",
        "newPath": "hadoop-mapreduce-project/src/examples/org/apache/hadoop/examples/BaileyBorweinPlouffe.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public int run(String[] args) throws IOException {\n    if (args.length !\u003d 4) {\n      System.err.println(\"Usage: java \" + getClass().getName()\n          + \" \u003cstartDigit\u003e \u003cnDigits\u003e \u003cnMaps\u003e \u003cworkingDir\u003e\");\n      ToolRunner.printGenericCommandUsage(System.err);\n      return -1;\n    }\n\n    final int startDigit \u003d Integer.parseInt(args[0]);\n    final int nDigits \u003d Integer.parseInt(args[1]);\n    final int nMaps \u003d Integer.parseInt(args[2]);\n    final String workingDir \u003d args[3];\n\n    if (startDigit \u003c\u003d 0) {\n      throw new IllegalArgumentException(\"startDigit \u003d \" + startDigit+\" \u003c\u003d 0\");\n    } else if (nDigits \u003c\u003d 0) {\n      throw new IllegalArgumentException(\"nDigits \u003d \" + nDigits + \" \u003c\u003d 0\");\n    } else if (nDigits % BBP_HEX_DIGITS !\u003d 0) {\n      throw new IllegalArgumentException(\"nDigits \u003d \" + nDigits\n          + \" is not a multiple of \" + BBP_HEX_DIGITS);\n    } else if (nDigits - 1L + startDigit \u003e IMPLEMENTATION_LIMIT + BBP_HEX_DIGITS) {\n      throw new UnsupportedOperationException(\"nDigits - 1 + startDigit \u003d \"\n          + (nDigits - 1L + startDigit)\n          + \" \u003e IMPLEMENTATION_LIMIT + BBP_HEX_DIGITS,\"\n          + \", where IMPLEMENTATION_LIMIT\u003d\" + IMPLEMENTATION_LIMIT\n          + \"and BBP_HEX_DIGITS\u003d\" + BBP_HEX_DIGITS);\n    } else if (nMaps \u003c\u003d 0) {\n      throw new IllegalArgumentException(\"nMaps \u003d \" + nMaps + \" \u003c\u003d 0\");\n    }\n\n    compute(startDigit, nDigits, nMaps, workingDir, getConf(), System.out);\n    return 0;\n  }",
      "path": "hadoop-mapreduce/src/examples/org/apache/hadoop/examples/BaileyBorweinPlouffe.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/examples/org/apache/hadoop/examples/BaileyBorweinPlouffe.java",
        "newPath": "hadoop-mapreduce/src/examples/org/apache/hadoop/examples/BaileyBorweinPlouffe.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,33 @@\n+  public int run(String[] args) throws IOException {\n+    if (args.length !\u003d 4) {\n+      System.err.println(\"Usage: java \" + getClass().getName()\n+          + \" \u003cstartDigit\u003e \u003cnDigits\u003e \u003cnMaps\u003e \u003cworkingDir\u003e\");\n+      ToolRunner.printGenericCommandUsage(System.err);\n+      return -1;\n+    }\n+\n+    final int startDigit \u003d Integer.parseInt(args[0]);\n+    final int nDigits \u003d Integer.parseInt(args[1]);\n+    final int nMaps \u003d Integer.parseInt(args[2]);\n+    final String workingDir \u003d args[3];\n+\n+    if (startDigit \u003c\u003d 0) {\n+      throw new IllegalArgumentException(\"startDigit \u003d \" + startDigit+\" \u003c\u003d 0\");\n+    } else if (nDigits \u003c\u003d 0) {\n+      throw new IllegalArgumentException(\"nDigits \u003d \" + nDigits + \" \u003c\u003d 0\");\n+    } else if (nDigits % BBP_HEX_DIGITS !\u003d 0) {\n+      throw new IllegalArgumentException(\"nDigits \u003d \" + nDigits\n+          + \" is not a multiple of \" + BBP_HEX_DIGITS);\n+    } else if (nDigits - 1L + startDigit \u003e IMPLEMENTATION_LIMIT + BBP_HEX_DIGITS) {\n+      throw new UnsupportedOperationException(\"nDigits - 1 + startDigit \u003d \"\n+          + (nDigits - 1L + startDigit)\n+          + \" \u003e IMPLEMENTATION_LIMIT + BBP_HEX_DIGITS,\"\n+          + \", where IMPLEMENTATION_LIMIT\u003d\" + IMPLEMENTATION_LIMIT\n+          + \"and BBP_HEX_DIGITS\u003d\" + BBP_HEX_DIGITS);\n+    } else if (nMaps \u003c\u003d 0) {\n+      throw new IllegalArgumentException(\"nMaps \u003d \" + nMaps + \" \u003c\u003d 0\");\n+    }\n+\n+    compute(startDigit, nDigits, nMaps, workingDir, getConf(), System.out);\n+    return 0;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] args) throws IOException {\n    if (args.length !\u003d 4) {\n      System.err.println(\"Usage: java \" + getClass().getName()\n          + \" \u003cstartDigit\u003e \u003cnDigits\u003e \u003cnMaps\u003e \u003cworkingDir\u003e\");\n      ToolRunner.printGenericCommandUsage(System.err);\n      return -1;\n    }\n\n    final int startDigit \u003d Integer.parseInt(args[0]);\n    final int nDigits \u003d Integer.parseInt(args[1]);\n    final int nMaps \u003d Integer.parseInt(args[2]);\n    final String workingDir \u003d args[3];\n\n    if (startDigit \u003c\u003d 0) {\n      throw new IllegalArgumentException(\"startDigit \u003d \" + startDigit+\" \u003c\u003d 0\");\n    } else if (nDigits \u003c\u003d 0) {\n      throw new IllegalArgumentException(\"nDigits \u003d \" + nDigits + \" \u003c\u003d 0\");\n    } else if (nDigits % BBP_HEX_DIGITS !\u003d 0) {\n      throw new IllegalArgumentException(\"nDigits \u003d \" + nDigits\n          + \" is not a multiple of \" + BBP_HEX_DIGITS);\n    } else if (nDigits - 1L + startDigit \u003e IMPLEMENTATION_LIMIT + BBP_HEX_DIGITS) {\n      throw new UnsupportedOperationException(\"nDigits - 1 + startDigit \u003d \"\n          + (nDigits - 1L + startDigit)\n          + \" \u003e IMPLEMENTATION_LIMIT + BBP_HEX_DIGITS,\"\n          + \", where IMPLEMENTATION_LIMIT\u003d\" + IMPLEMENTATION_LIMIT\n          + \"and BBP_HEX_DIGITS\u003d\" + BBP_HEX_DIGITS);\n    } else if (nMaps \u003c\u003d 0) {\n      throw new IllegalArgumentException(\"nMaps \u003d \" + nMaps + \" \u003c\u003d 0\");\n    }\n\n    compute(startDigit, nDigits, nMaps, workingDir, getConf(), System.out);\n    return 0;\n  }",
      "path": "mapreduce/src/examples/org/apache/hadoop/examples/BaileyBorweinPlouffe.java"
    }
  }
}