{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AbstractPolicyManager.java",
  "functionName": "getRouterPolicy",
  "functionId": "getRouterPolicy___federationPolicyContext-FederationPolicyInitializationContext__oldInstance-FederationRouterPolicy",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/policies/manager/AbstractPolicyManager.java",
  "functionStartLine": 100,
  "functionEndLine": 118,
  "numCommitsSeen": 2,
  "timeTaken": 1109,
  "changeHistory": [
    "4128c9522dcdc16bb3527f74a48ed1242458a165",
    "93d9fdeca65a97434936ec9c2e25c362ee016783"
  ],
  "changeHistoryShort": {
    "4128c9522dcdc16bb3527f74a48ed1242458a165": "Yfilerename",
    "93d9fdeca65a97434936ec9c2e25c362ee016783": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4128c9522dcdc16bb3527f74a48ed1242458a165": {
      "type": "Yfilerename",
      "commitMessage": "YARN-5676. Add a HashBasedRouterPolicy, and small policies and test refactoring. (Carlo Curino via Subru).\n\n(cherry picked from commit 575137f41c27eb72d05d923337f3030a35403e8f)\n",
      "commitDate": "01/08/17 5:28 PM",
      "commitName": "4128c9522dcdc16bb3527f74a48ed1242458a165",
      "commitAuthor": "Subru Krishnan",
      "commitDateOld": "01/08/17 5:28 PM",
      "commitNameOld": "083a05bc1420d6d6aa30d98ab48c2ed8ead5b810",
      "commitAuthorOld": "Subru Krishnan",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public FederationRouterPolicy getRouterPolicy(\n      FederationPolicyInitializationContext federationPolicyContext,\n      FederationRouterPolicy oldInstance)\n      throws FederationPolicyInitializationException {\n\n    //checks that sub-types properly initialize the types of policies\n    if (routerFederationPolicy \u003d\u003d null) {\n      throw new FederationPolicyInitializationException(\"The policy \"\n          + \"type should be initialized in \" + this.getClass().getSimpleName()\n          + \" constructor.\");\n    }\n\n    try {\n      return (FederationRouterPolicy) internalPolicyGetter(\n          federationPolicyContext, oldInstance, routerFederationPolicy);\n    } catch (ClassCastException e) {\n      throw new FederationPolicyInitializationException(e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/policies/manager/AbstractPolicyManager.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/policies/AbstractPolicyManager.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/policies/manager/AbstractPolicyManager.java"
      }
    },
    "93d9fdeca65a97434936ec9c2e25c362ee016783": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5391. PolicyManager to tie together Router/AMRM Federation policies. (Carlo Curino via Subru).\n\n(cherry picked from commit 20893682eced98dfba55d88edd63296993087c85)\n",
      "commitDate": "01/08/17 5:28 PM",
      "commitName": "93d9fdeca65a97434936ec9c2e25c362ee016783",
      "commitAuthor": "Subru Krishnan",
      "diff": "@@ -0,0 +1,19 @@\n+  public FederationRouterPolicy getRouterPolicy(\n+      FederationPolicyInitializationContext federationPolicyContext,\n+      FederationRouterPolicy oldInstance)\n+      throws FederationPolicyInitializationException {\n+\n+    //checks that sub-types properly initialize the types of policies\n+    if (routerFederationPolicy \u003d\u003d null) {\n+      throw new FederationPolicyInitializationException(\"The policy \"\n+          + \"type should be initialized in \" + this.getClass().getSimpleName()\n+          + \" constructor.\");\n+    }\n+\n+    try {\n+      return (FederationRouterPolicy) internalPolicyGetter(\n+          federationPolicyContext, oldInstance, routerFederationPolicy);\n+    } catch (ClassCastException e) {\n+      throw new FederationPolicyInitializationException(e);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public FederationRouterPolicy getRouterPolicy(\n      FederationPolicyInitializationContext federationPolicyContext,\n      FederationRouterPolicy oldInstance)\n      throws FederationPolicyInitializationException {\n\n    //checks that sub-types properly initialize the types of policies\n    if (routerFederationPolicy \u003d\u003d null) {\n      throw new FederationPolicyInitializationException(\"The policy \"\n          + \"type should be initialized in \" + this.getClass().getSimpleName()\n          + \" constructor.\");\n    }\n\n    try {\n      return (FederationRouterPolicy) internalPolicyGetter(\n          federationPolicyContext, oldInstance, routerFederationPolicy);\n    } catch (ClassCastException e) {\n      throw new FederationPolicyInitializationException(e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/policies/AbstractPolicyManager.java"
    }
  }
}