{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DFSAdmin.java",
  "functionName": "triggerBlockReport",
  "functionId": "triggerBlockReport___argv-String[]",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
  "functionStartLine": 725,
  "functionEndLine": 765,
  "numCommitsSeen": 114,
  "timeTaken": 3312,
  "changeHistory": [
    "9a1d8cfaf50ec29ffb2d8522ba2f4bc6605d8b8b",
    "baf794dc404ac54f4e8332654eadfac1bebacb8f"
  ],
  "changeHistoryShort": {
    "9a1d8cfaf50ec29ffb2d8522ba2f4bc6605d8b8b": "Ybodychange",
    "baf794dc404ac54f4e8332654eadfac1bebacb8f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9a1d8cfaf50ec29ffb2d8522ba2f4bc6605d8b8b": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14678. Allow triggerBlockReport to a specific namenode. (#1252). Contributed by Leon Gao.\n\n",
      "commitDate": "16/08/19 8:00 AM",
      "commitName": "9a1d8cfaf50ec29ffb2d8522ba2f4bc6605d8b8b",
      "commitAuthor": "LeonGao91",
      "commitDateOld": "17/07/19 10:52 AM",
      "commitNameOld": "af0665c7f5b1a28eb2262bae9a577fd908ad79ea",
      "commitAuthorOld": "Ayush Saxena",
      "daysBetweenCommits": 29.88,
      "commitsBetweenForRepo": 273,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,41 @@\n   public int triggerBlockReport(String[] argv) throws IOException {\n     List\u003cString\u003e args \u003d new LinkedList\u003cString\u003e();\n     for (int j \u003d 1; j \u003c argv.length; j++) {\n       args.add(argv[j]);\n     }\n+    // Block report to a specific namenode\n+    InetSocketAddress namenodeAddr \u003d null;\n+    String nnHostPort \u003d StringUtils.popOptionWithArgument(\"-namenode\", args);\n+    if (nnHostPort !\u003d null) {\n+      namenodeAddr \u003d NetUtils.createSocketAddr(nnHostPort);\n+    }\n+\n     boolean incremental \u003d StringUtils.popOption(\"-incremental\", args);\n     String hostPort \u003d StringUtils.popFirstNonOption(args);\n     if (hostPort \u003d\u003d null) {\n       System.err.println(\"You must specify a host:port pair.\");\n       return 1;\n     }\n     if (!args.isEmpty()) {\n       System.err.print(\"Can\u0027t understand arguments: \" +\n         Joiner.on(\" \").join(args) + \"\\n\");\n       return 1;\n     }\n     ClientDatanodeProtocol dnProxy \u003d getDataNodeProxy(hostPort);\n     try {\n       dnProxy.triggerBlockReport(\n           new BlockReportOptions.Factory().\n+              setNamenodeAddr(namenodeAddr).\n               setIncremental(incremental).\n               build());\n     } catch (IOException e) {\n       System.err.println(\"triggerBlockReport error: \" + e);\n       return 1;\n     }\n     System.out.println(\"Triggering \" +\n         (incremental ? \"an incremental \" : \"a full \") +\n-        \"block report on \" + hostPort + \".\");\n+        \"block report on \" + hostPort +\n+        (namenodeAddr \u003d\u003d null ? \"\" : \" to namenode \" + nnHostPort) +\n+        \".\");\n     return 0;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int triggerBlockReport(String[] argv) throws IOException {\n    List\u003cString\u003e args \u003d new LinkedList\u003cString\u003e();\n    for (int j \u003d 1; j \u003c argv.length; j++) {\n      args.add(argv[j]);\n    }\n    // Block report to a specific namenode\n    InetSocketAddress namenodeAddr \u003d null;\n    String nnHostPort \u003d StringUtils.popOptionWithArgument(\"-namenode\", args);\n    if (nnHostPort !\u003d null) {\n      namenodeAddr \u003d NetUtils.createSocketAddr(nnHostPort);\n    }\n\n    boolean incremental \u003d StringUtils.popOption(\"-incremental\", args);\n    String hostPort \u003d StringUtils.popFirstNonOption(args);\n    if (hostPort \u003d\u003d null) {\n      System.err.println(\"You must specify a host:port pair.\");\n      return 1;\n    }\n    if (!args.isEmpty()) {\n      System.err.print(\"Can\u0027t understand arguments: \" +\n        Joiner.on(\" \").join(args) + \"\\n\");\n      return 1;\n    }\n    ClientDatanodeProtocol dnProxy \u003d getDataNodeProxy(hostPort);\n    try {\n      dnProxy.triggerBlockReport(\n          new BlockReportOptions.Factory().\n              setNamenodeAddr(namenodeAddr).\n              setIncremental(incremental).\n              build());\n    } catch (IOException e) {\n      System.err.println(\"triggerBlockReport error: \" + e);\n      return 1;\n    }\n    System.out.println(\"Triggering \" +\n        (incremental ? \"an incremental \" : \"a full \") +\n        \"block report on \" + hostPort +\n        (namenodeAddr \u003d\u003d null ? \"\" : \" to namenode \" + nnHostPort) +\n        \".\");\n    return 0;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "baf794dc404ac54f4e8332654eadfac1bebacb8f": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-7278. Add a command that allows sysadmins to manually trigger full block reports from a DN (cmccabe)\n",
      "commitDate": "27/10/14 9:53 AM",
      "commitName": "baf794dc404ac54f4e8332654eadfac1bebacb8f",
      "commitAuthor": "Colin Patrick Mccabe",
      "diff": "@@ -0,0 +1,31 @@\n+  public int triggerBlockReport(String[] argv) throws IOException {\n+    List\u003cString\u003e args \u003d new LinkedList\u003cString\u003e();\n+    for (int j \u003d 1; j \u003c argv.length; j++) {\n+      args.add(argv[j]);\n+    }\n+    boolean incremental \u003d StringUtils.popOption(\"-incremental\", args);\n+    String hostPort \u003d StringUtils.popFirstNonOption(args);\n+    if (hostPort \u003d\u003d null) {\n+      System.err.println(\"You must specify a host:port pair.\");\n+      return 1;\n+    }\n+    if (!args.isEmpty()) {\n+      System.err.print(\"Can\u0027t understand arguments: \" +\n+        Joiner.on(\" \").join(args) + \"\\n\");\n+      return 1;\n+    }\n+    ClientDatanodeProtocol dnProxy \u003d getDataNodeProxy(hostPort);\n+    try {\n+      dnProxy.triggerBlockReport(\n+          new BlockReportOptions.Factory().\n+              setIncremental(incremental).\n+              build());\n+    } catch (IOException e) {\n+      System.err.println(\"triggerBlockReport error: \" + e);\n+      return 1;\n+    }\n+    System.out.println(\"Triggering \" +\n+        (incremental ? \"an incremental \" : \"a full \") +\n+        \"block report on \" + hostPort + \".\");\n+    return 0;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public int triggerBlockReport(String[] argv) throws IOException {\n    List\u003cString\u003e args \u003d new LinkedList\u003cString\u003e();\n    for (int j \u003d 1; j \u003c argv.length; j++) {\n      args.add(argv[j]);\n    }\n    boolean incremental \u003d StringUtils.popOption(\"-incremental\", args);\n    String hostPort \u003d StringUtils.popFirstNonOption(args);\n    if (hostPort \u003d\u003d null) {\n      System.err.println(\"You must specify a host:port pair.\");\n      return 1;\n    }\n    if (!args.isEmpty()) {\n      System.err.print(\"Can\u0027t understand arguments: \" +\n        Joiner.on(\" \").join(args) + \"\\n\");\n      return 1;\n    }\n    ClientDatanodeProtocol dnProxy \u003d getDataNodeProxy(hostPort);\n    try {\n      dnProxy.triggerBlockReport(\n          new BlockReportOptions.Factory().\n              setIncremental(incremental).\n              build());\n    } catch (IOException e) {\n      System.err.println(\"triggerBlockReport error: \" + e);\n      return 1;\n    }\n    System.out.println(\"Triggering \" +\n        (incremental ? \"an incremental \" : \"a full \") +\n        \"block report on \" + hostPort + \".\");\n    return 0;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java"
    }
  }
}