{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSImage.java",
  "functionName": "saveFSImage",
  "functionId": "saveFSImage___context-SaveNamespaceContext__sd-StorageDirectory__dstType-NameNodeFile",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImage.java",
  "functionStartLine": 985,
  "functionEndLine": 1004,
  "numCommitsSeen": 123,
  "timeTaken": 3027,
  "changeHistory": [
    "b67812ea2111fa11bdd76096b923c93e1bdf2923",
    "a991e899fb9f98d2089f37ac9ac7c485d3bbb959"
  ],
  "changeHistoryShort": {
    "b67812ea2111fa11bdd76096b923c93e1bdf2923": "Ybodychange",
    "a991e899fb9f98d2089f37ac9ac7c485d3bbb959": "Ybodychange"
  },
  "changeHistoryDetails": {
    "b67812ea2111fa11bdd76096b923c93e1bdf2923": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14617. Improve fsimage load time by writing sub-sections to the fsimage index (#1028). Contributed by  Stephen O\u0027Donnell.\n\nReviewed-by: He Xiaoqiao \u003chexiaoqiao@apache.org\u003e",
      "commitDate": "22/08/19 5:09 PM",
      "commitName": "b67812ea2111fa11bdd76096b923c93e1bdf2923",
      "commitAuthor": "Stephen O\u0027Donnell",
      "commitDateOld": "11/06/19 11:48 AM",
      "commitNameOld": "5740eea0818f2ba334b99eed0f085300e6b16905",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 72.22,
      "commitsBetweenForRepo": 645,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,20 @@\n   void saveFSImage(SaveNamespaceContext context, StorageDirectory sd,\n       NameNodeFile dstType) throws IOException {\n     long txid \u003d context.getTxId();\n     File newFile \u003d NNStorage.getStorageFile(sd, NameNodeFile.IMAGE_NEW, txid);\n     File dstFile \u003d NNStorage.getStorageFile(sd, dstType, txid);\n     \n-    FSImageFormatProtobuf.Saver saver \u003d new FSImageFormatProtobuf.Saver(context);\n+    FSImageFormatProtobuf.Saver saver \u003d new FSImageFormatProtobuf.Saver(context,\n+        conf);\n     FSImageCompression compression \u003d FSImageCompression.createCompression(conf);\n     long numErrors \u003d saver.save(newFile, compression);\n     if (numErrors \u003e 0) {\n       // The image is likely corrupted.\n       LOG.error(\"Detected \" + numErrors + \" errors while saving FsImage \" +\n           dstFile);\n       exitAfterSave.set(true);\n     }\n \n     MD5FileUtils.saveMD5File(dstFile, saver.getSavedDigest());\n     storage.setMostRecentCheckpointInfo(txid, Time.now());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void saveFSImage(SaveNamespaceContext context, StorageDirectory sd,\n      NameNodeFile dstType) throws IOException {\n    long txid \u003d context.getTxId();\n    File newFile \u003d NNStorage.getStorageFile(sd, NameNodeFile.IMAGE_NEW, txid);\n    File dstFile \u003d NNStorage.getStorageFile(sd, dstType, txid);\n    \n    FSImageFormatProtobuf.Saver saver \u003d new FSImageFormatProtobuf.Saver(context,\n        conf);\n    FSImageCompression compression \u003d FSImageCompression.createCompression(conf);\n    long numErrors \u003d saver.save(newFile, compression);\n    if (numErrors \u003e 0) {\n      // The image is likely corrupted.\n      LOG.error(\"Detected \" + numErrors + \" errors while saving FsImage \" +\n          dstFile);\n      exitAfterSave.set(true);\n    }\n\n    MD5FileUtils.saveMD5File(dstFile, saver.getSavedDigest());\n    storage.setMostRecentCheckpointInfo(txid, Time.now());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImage.java",
      "extendedDetails": {}
    },
    "a991e899fb9f98d2089f37ac9ac7c485d3bbb959": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13314. NameNode should optionally exit if it detects FsImage corruption. Contributed by Arpit Agarwal.\n",
      "commitDate": "28/03/18 12:49 PM",
      "commitName": "a991e899fb9f98d2089f37ac9ac7c485d3bbb959",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "01/05/17 3:29 PM",
      "commitNameOld": "4cfc8664362ed04b01872e854715a36dad9408a6",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 330.89,
      "commitsBetweenForRepo": 2384,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,19 @@\n   void saveFSImage(SaveNamespaceContext context, StorageDirectory sd,\n       NameNodeFile dstType) throws IOException {\n     long txid \u003d context.getTxId();\n     File newFile \u003d NNStorage.getStorageFile(sd, NameNodeFile.IMAGE_NEW, txid);\n     File dstFile \u003d NNStorage.getStorageFile(sd, dstType, txid);\n     \n     FSImageFormatProtobuf.Saver saver \u003d new FSImageFormatProtobuf.Saver(context);\n     FSImageCompression compression \u003d FSImageCompression.createCompression(conf);\n-    saver.save(newFile, compression);\n-    \n+    long numErrors \u003d saver.save(newFile, compression);\n+    if (numErrors \u003e 0) {\n+      // The image is likely corrupted.\n+      LOG.error(\"Detected \" + numErrors + \" errors while saving FsImage \" +\n+          dstFile);\n+      exitAfterSave.set(true);\n+    }\n+\n     MD5FileUtils.saveMD5File(dstFile, saver.getSavedDigest());\n     storage.setMostRecentCheckpointInfo(txid, Time.now());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void saveFSImage(SaveNamespaceContext context, StorageDirectory sd,\n      NameNodeFile dstType) throws IOException {\n    long txid \u003d context.getTxId();\n    File newFile \u003d NNStorage.getStorageFile(sd, NameNodeFile.IMAGE_NEW, txid);\n    File dstFile \u003d NNStorage.getStorageFile(sd, dstType, txid);\n    \n    FSImageFormatProtobuf.Saver saver \u003d new FSImageFormatProtobuf.Saver(context);\n    FSImageCompression compression \u003d FSImageCompression.createCompression(conf);\n    long numErrors \u003d saver.save(newFile, compression);\n    if (numErrors \u003e 0) {\n      // The image is likely corrupted.\n      LOG.error(\"Detected \" + numErrors + \" errors while saving FsImage \" +\n          dstFile);\n      exitAfterSave.set(true);\n    }\n\n    MD5FileUtils.saveMD5File(dstFile, saver.getSavedDigest());\n    storage.setMostRecentCheckpointInfo(txid, Time.now());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImage.java",
      "extendedDetails": {}
    }
  }
}