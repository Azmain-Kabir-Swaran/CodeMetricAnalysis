{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMAppAttemptBlock.java",
  "functionName": "createContainerLocalityTable",
  "functionId": "createContainerLocalityTable___html-Block",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMAppAttemptBlock.java",
  "functionStartLine": 390,
  "functionEndLine": 429,
  "numCommitsSeen": 44,
  "timeTaken": 4162,
  "changeHistory": [
    "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397",
    "4e886eb9cbd2dcb128bbfd17309c734083093a4c",
    "c3003eba6f9802f15699564a5eb7c6e34424cb14",
    "95bfd087dc89e57a93340604cc8b96042fa1a05a",
    "e17e5ba9d7e2bd45ba6884f59f8045817594b284"
  ],
  "changeHistoryShort": {
    "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397": "Ybodychange",
    "4e886eb9cbd2dcb128bbfd17309c734083093a4c": "Ymultichange(Ymovefromfile,Ybodychange)",
    "c3003eba6f9802f15699564a5eb7c6e34424cb14": "Ymovefromfile",
    "95bfd087dc89e57a93340604cc8b96042fa1a05a": "Ymultichange(Ymovefromfile,Ybodychange,Yparameterchange)",
    "e17e5ba9d7e2bd45ba6884f59f8045817594b284": "Yintroduced"
  },
  "changeHistoryDetails": {
    "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11875. [JDK9] Adding a second copy of Hamlet without _ as a one-character identifier.\n",
      "commitDate": "27/07/17 5:10 PM",
      "commitName": "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "28/07/16 4:03 PM",
      "commitNameOld": "4e756d72719ec3c6d64a1e3daccbc0b8e8de998c",
      "commitAuthorOld": "Subru Krishnan",
      "daysBetweenCommits": 364.05,
      "commitsBetweenForRepo": 2150,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,40 @@\n   private void createContainerLocalityTable(Block html) {\n     RMAppAttemptMetrics attemptMetrics \u003d null;\n     RMAppAttempt attempt \u003d getRMAppAttempt();\n     if (attempt !\u003d null) {\n       attemptMetrics \u003d attempt.getRMAppAttemptMetrics();\n     }\n     \n     if (attemptMetrics \u003d\u003d null) {\n       return;\n     }\n \n     DIV\u003cHamlet\u003e div \u003d html.div(_INFO_WRAP);\n     TABLE\u003cDIV\u003cHamlet\u003e\u003e table \u003d\n         div.h3(\n           \"Total Allocated Containers: \"\n               + attemptMetrics.getTotalAllocatedContainers()).h3(\"Each table cell\"\n             + \" represents the number of NodeLocal/RackLocal/OffSwitch containers\"\n             + \" satisfied by NodeLocal/RackLocal/OffSwitch resource requests.\").table(\n           \"#containerLocality\");\n     table.\n       tr().\n         th(_TH, \"\").\n         th(_TH, \"Node Local Request\").\n         th(_TH, \"Rack Local Request\").\n         th(_TH, \"Off Switch Request\").\n-      _();\n+        __();\n \n     String[] containersType \u003d\n         { \"Num Node Local Containers (satisfied by)\", \"Num Rack Local Containers (satisfied by)\",\n             \"Num Off Switch Containers (satisfied by)\" };\n     boolean odd \u003d false;\n     for (int i \u003d 0; i \u003c attemptMetrics.getLocalityStatistics().length; i++) {\n       table.tr((odd \u003d !odd) ? _ODD : _EVEN).td(containersType[i])\n         .td(String.valueOf(attemptMetrics.getLocalityStatistics()[i][0]))\n         .td(i \u003d\u003d 0 ? \"\" : String.valueOf(attemptMetrics.getLocalityStatistics()[i][1]))\n-        .td(i \u003c\u003d 1 ? \"\" : String.valueOf(attemptMetrics.getLocalityStatistics()[i][2]))._();\n+        .td(i \u003c\u003d 1 ? \"\" : String.valueOf(attemptMetrics.getLocalityStatistics()[i][2])).__();\n     }\n-    table._();\n-    div._();\n+    table.__();\n+    div.__();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void createContainerLocalityTable(Block html) {\n    RMAppAttemptMetrics attemptMetrics \u003d null;\n    RMAppAttempt attempt \u003d getRMAppAttempt();\n    if (attempt !\u003d null) {\n      attemptMetrics \u003d attempt.getRMAppAttemptMetrics();\n    }\n    \n    if (attemptMetrics \u003d\u003d null) {\n      return;\n    }\n\n    DIV\u003cHamlet\u003e div \u003d html.div(_INFO_WRAP);\n    TABLE\u003cDIV\u003cHamlet\u003e\u003e table \u003d\n        div.h3(\n          \"Total Allocated Containers: \"\n              + attemptMetrics.getTotalAllocatedContainers()).h3(\"Each table cell\"\n            + \" represents the number of NodeLocal/RackLocal/OffSwitch containers\"\n            + \" satisfied by NodeLocal/RackLocal/OffSwitch resource requests.\").table(\n          \"#containerLocality\");\n    table.\n      tr().\n        th(_TH, \"\").\n        th(_TH, \"Node Local Request\").\n        th(_TH, \"Rack Local Request\").\n        th(_TH, \"Off Switch Request\").\n        __();\n\n    String[] containersType \u003d\n        { \"Num Node Local Containers (satisfied by)\", \"Num Rack Local Containers (satisfied by)\",\n            \"Num Off Switch Containers (satisfied by)\" };\n    boolean odd \u003d false;\n    for (int i \u003d 0; i \u003c attemptMetrics.getLocalityStatistics().length; i++) {\n      table.tr((odd \u003d !odd) ? _ODD : _EVEN).td(containersType[i])\n        .td(String.valueOf(attemptMetrics.getLocalityStatistics()[i][0]))\n        .td(i \u003d\u003d 0 ? \"\" : String.valueOf(attemptMetrics.getLocalityStatistics()[i][1]))\n        .td(i \u003c\u003d 1 ? \"\" : String.valueOf(attemptMetrics.getLocalityStatistics()[i][2])).__();\n    }\n    table.__();\n    div.__();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMAppAttemptBlock.java",
      "extendedDetails": {}
    },
    "4e886eb9cbd2dcb128bbfd17309c734083093a4c": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "YARN-3379. Fixed missing data in localityTable and ResourceRequests table in RM WebUI. Contributed by Xuan Gong\n",
      "commitDate": "19/03/15 10:27 PM",
      "commitName": "4e886eb9cbd2dcb128bbfd17309c734083093a4c",
      "commitAuthor": "Jian He",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-3379. Fixed missing data in localityTable and ResourceRequests table in RM WebUI. Contributed by Xuan Gong\n",
          "commitDate": "19/03/15 10:27 PM",
          "commitName": "4e886eb9cbd2dcb128bbfd17309c734083093a4c",
          "commitAuthor": "Jian He",
          "commitDateOld": "19/03/15 8:23 AM",
          "commitNameOld": "e37ca221bf4e9ae5d5e667d8ca284df9fdb33199",
          "commitAuthorOld": "yliu",
          "daysBetweenCommits": 0.59,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,32 +1,40 @@\n   private void createContainerLocalityTable(Block html) {\n-    int totalAllocatedContainers \u003d 0; //TODO: YARN-3284\n-    int[][] localityStatistics \u003d new int[0][0];//TODO:YARN-3284\n+    RMAppAttemptMetrics attemptMetrics \u003d null;\n+    RMAppAttempt attempt \u003d getRMAppAttempt();\n+    if (attempt !\u003d null) {\n+      attemptMetrics \u003d attempt.getRMAppAttemptMetrics();\n+    }\n+    \n+    if (attemptMetrics \u003d\u003d null) {\n+      return;\n+    }\n+\n     DIV\u003cHamlet\u003e div \u003d html.div(_INFO_WRAP);\n     TABLE\u003cDIV\u003cHamlet\u003e\u003e table \u003d\n         div.h3(\n           \"Total Allocated Containers: \"\n-              + totalAllocatedContainers).h3(\"Each table cell\"\n+              + attemptMetrics.getTotalAllocatedContainers()).h3(\"Each table cell\"\n             + \" represents the number of NodeLocal/RackLocal/OffSwitch containers\"\n             + \" satisfied by NodeLocal/RackLocal/OffSwitch resource requests.\").table(\n           \"#containerLocality\");\n     table.\n       tr().\n         th(_TH, \"\").\n         th(_TH, \"Node Local Request\").\n         th(_TH, \"Rack Local Request\").\n         th(_TH, \"Off Switch Request\").\n       _();\n \n     String[] containersType \u003d\n         { \"Num Node Local Containers (satisfied by)\", \"Num Rack Local Containers (satisfied by)\",\n             \"Num Off Switch Containers (satisfied by)\" };\n     boolean odd \u003d false;\n-    for (int i \u003d 0; i \u003c localityStatistics.length; i++) {\n+    for (int i \u003d 0; i \u003c attemptMetrics.getLocalityStatistics().length; i++) {\n       table.tr((odd \u003d !odd) ? _ODD : _EVEN).td(containersType[i])\n-        .td(String.valueOf(localityStatistics[i][0]))\n-        .td(i \u003d\u003d 0 ? \"\" : String.valueOf(localityStatistics[i][1]))\n-        .td(i \u003c\u003d 1 ? \"\" : String.valueOf(localityStatistics[i][2]))._();\n+        .td(String.valueOf(attemptMetrics.getLocalityStatistics()[i][0]))\n+        .td(i \u003d\u003d 0 ? \"\" : String.valueOf(attemptMetrics.getLocalityStatistics()[i][1]))\n+        .td(i \u003c\u003d 1 ? \"\" : String.valueOf(attemptMetrics.getLocalityStatistics()[i][2]))._();\n     }\n     table._();\n     div._();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void createContainerLocalityTable(Block html) {\n    RMAppAttemptMetrics attemptMetrics \u003d null;\n    RMAppAttempt attempt \u003d getRMAppAttempt();\n    if (attempt !\u003d null) {\n      attemptMetrics \u003d attempt.getRMAppAttemptMetrics();\n    }\n    \n    if (attemptMetrics \u003d\u003d null) {\n      return;\n    }\n\n    DIV\u003cHamlet\u003e div \u003d html.div(_INFO_WRAP);\n    TABLE\u003cDIV\u003cHamlet\u003e\u003e table \u003d\n        div.h3(\n          \"Total Allocated Containers: \"\n              + attemptMetrics.getTotalAllocatedContainers()).h3(\"Each table cell\"\n            + \" represents the number of NodeLocal/RackLocal/OffSwitch containers\"\n            + \" satisfied by NodeLocal/RackLocal/OffSwitch resource requests.\").table(\n          \"#containerLocality\");\n    table.\n      tr().\n        th(_TH, \"\").\n        th(_TH, \"Node Local Request\").\n        th(_TH, \"Rack Local Request\").\n        th(_TH, \"Off Switch Request\").\n      _();\n\n    String[] containersType \u003d\n        { \"Num Node Local Containers (satisfied by)\", \"Num Rack Local Containers (satisfied by)\",\n            \"Num Off Switch Containers (satisfied by)\" };\n    boolean odd \u003d false;\n    for (int i \u003d 0; i \u003c attemptMetrics.getLocalityStatistics().length; i++) {\n      table.tr((odd \u003d !odd) ? _ODD : _EVEN).td(containersType[i])\n        .td(String.valueOf(attemptMetrics.getLocalityStatistics()[i][0]))\n        .td(i \u003d\u003d 0 ? \"\" : String.valueOf(attemptMetrics.getLocalityStatistics()[i][1]))\n        .td(i \u003c\u003d 1 ? \"\" : String.valueOf(attemptMetrics.getLocalityStatistics()[i][2]))._();\n    }\n    table._();\n    div._();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMAppAttemptBlock.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/webapp/AppAttemptBlock.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMAppAttemptBlock.java",
            "oldMethodName": "createContainerLocalityTable",
            "newMethodName": "createContainerLocalityTable"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3379. Fixed missing data in localityTable and ResourceRequests table in RM WebUI. Contributed by Xuan Gong\n",
          "commitDate": "19/03/15 10:27 PM",
          "commitName": "4e886eb9cbd2dcb128bbfd17309c734083093a4c",
          "commitAuthor": "Jian He",
          "commitDateOld": "19/03/15 8:23 AM",
          "commitNameOld": "e37ca221bf4e9ae5d5e667d8ca284df9fdb33199",
          "commitAuthorOld": "yliu",
          "daysBetweenCommits": 0.59,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,32 +1,40 @@\n   private void createContainerLocalityTable(Block html) {\n-    int totalAllocatedContainers \u003d 0; //TODO: YARN-3284\n-    int[][] localityStatistics \u003d new int[0][0];//TODO:YARN-3284\n+    RMAppAttemptMetrics attemptMetrics \u003d null;\n+    RMAppAttempt attempt \u003d getRMAppAttempt();\n+    if (attempt !\u003d null) {\n+      attemptMetrics \u003d attempt.getRMAppAttemptMetrics();\n+    }\n+    \n+    if (attemptMetrics \u003d\u003d null) {\n+      return;\n+    }\n+\n     DIV\u003cHamlet\u003e div \u003d html.div(_INFO_WRAP);\n     TABLE\u003cDIV\u003cHamlet\u003e\u003e table \u003d\n         div.h3(\n           \"Total Allocated Containers: \"\n-              + totalAllocatedContainers).h3(\"Each table cell\"\n+              + attemptMetrics.getTotalAllocatedContainers()).h3(\"Each table cell\"\n             + \" represents the number of NodeLocal/RackLocal/OffSwitch containers\"\n             + \" satisfied by NodeLocal/RackLocal/OffSwitch resource requests.\").table(\n           \"#containerLocality\");\n     table.\n       tr().\n         th(_TH, \"\").\n         th(_TH, \"Node Local Request\").\n         th(_TH, \"Rack Local Request\").\n         th(_TH, \"Off Switch Request\").\n       _();\n \n     String[] containersType \u003d\n         { \"Num Node Local Containers (satisfied by)\", \"Num Rack Local Containers (satisfied by)\",\n             \"Num Off Switch Containers (satisfied by)\" };\n     boolean odd \u003d false;\n-    for (int i \u003d 0; i \u003c localityStatistics.length; i++) {\n+    for (int i \u003d 0; i \u003c attemptMetrics.getLocalityStatistics().length; i++) {\n       table.tr((odd \u003d !odd) ? _ODD : _EVEN).td(containersType[i])\n-        .td(String.valueOf(localityStatistics[i][0]))\n-        .td(i \u003d\u003d 0 ? \"\" : String.valueOf(localityStatistics[i][1]))\n-        .td(i \u003c\u003d 1 ? \"\" : String.valueOf(localityStatistics[i][2]))._();\n+        .td(String.valueOf(attemptMetrics.getLocalityStatistics()[i][0]))\n+        .td(i \u003d\u003d 0 ? \"\" : String.valueOf(attemptMetrics.getLocalityStatistics()[i][1]))\n+        .td(i \u003c\u003d 1 ? \"\" : String.valueOf(attemptMetrics.getLocalityStatistics()[i][2]))._();\n     }\n     table._();\n     div._();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void createContainerLocalityTable(Block html) {\n    RMAppAttemptMetrics attemptMetrics \u003d null;\n    RMAppAttempt attempt \u003d getRMAppAttempt();\n    if (attempt !\u003d null) {\n      attemptMetrics \u003d attempt.getRMAppAttemptMetrics();\n    }\n    \n    if (attemptMetrics \u003d\u003d null) {\n      return;\n    }\n\n    DIV\u003cHamlet\u003e div \u003d html.div(_INFO_WRAP);\n    TABLE\u003cDIV\u003cHamlet\u003e\u003e table \u003d\n        div.h3(\n          \"Total Allocated Containers: \"\n              + attemptMetrics.getTotalAllocatedContainers()).h3(\"Each table cell\"\n            + \" represents the number of NodeLocal/RackLocal/OffSwitch containers\"\n            + \" satisfied by NodeLocal/RackLocal/OffSwitch resource requests.\").table(\n          \"#containerLocality\");\n    table.\n      tr().\n        th(_TH, \"\").\n        th(_TH, \"Node Local Request\").\n        th(_TH, \"Rack Local Request\").\n        th(_TH, \"Off Switch Request\").\n      _();\n\n    String[] containersType \u003d\n        { \"Num Node Local Containers (satisfied by)\", \"Num Rack Local Containers (satisfied by)\",\n            \"Num Off Switch Containers (satisfied by)\" };\n    boolean odd \u003d false;\n    for (int i \u003d 0; i \u003c attemptMetrics.getLocalityStatistics().length; i++) {\n      table.tr((odd \u003d !odd) ? _ODD : _EVEN).td(containersType[i])\n        .td(String.valueOf(attemptMetrics.getLocalityStatistics()[i][0]))\n        .td(i \u003d\u003d 0 ? \"\" : String.valueOf(attemptMetrics.getLocalityStatistics()[i][1]))\n        .td(i \u003c\u003d 1 ? \"\" : String.valueOf(attemptMetrics.getLocalityStatistics()[i][2]))._();\n    }\n    table._();\n    div._();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMAppAttemptBlock.java",
          "extendedDetails": {}
        }
      ]
    },
    "c3003eba6f9802f15699564a5eb7c6e34424cb14": {
      "type": "Ymovefromfile",
      "commitMessage": "YARN-3300. Outstanding_resource_requests table should not be shown in AHS. Contributed by Xuan Gong\n",
      "commitDate": "09/03/15 8:46 PM",
      "commitName": "c3003eba6f9802f15699564a5eb7c6e34424cb14",
      "commitAuthor": "Jian He",
      "commitDateOld": "09/03/15 7:22 PM",
      "commitNameOld": "82db3341bfb344f10c4c6cc8eea0d8c19e05956a",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 0.06,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void createContainerLocalityTable(Block html) {\n    int totalAllocatedContainers \u003d 0; //TODO: YARN-3284\n    int[][] localityStatistics \u003d new int[0][0];//TODO:YARN-3284\n    DIV\u003cHamlet\u003e div \u003d html.div(_INFO_WRAP);\n    TABLE\u003cDIV\u003cHamlet\u003e\u003e table \u003d\n        div.h3(\n          \"Total Allocated Containers: \"\n              + totalAllocatedContainers).h3(\"Each table cell\"\n            + \" represents the number of NodeLocal/RackLocal/OffSwitch containers\"\n            + \" satisfied by NodeLocal/RackLocal/OffSwitch resource requests.\").table(\n          \"#containerLocality\");\n    table.\n      tr().\n        th(_TH, \"\").\n        th(_TH, \"Node Local Request\").\n        th(_TH, \"Rack Local Request\").\n        th(_TH, \"Off Switch Request\").\n      _();\n\n    String[] containersType \u003d\n        { \"Num Node Local Containers (satisfied by)\", \"Num Rack Local Containers (satisfied by)\",\n            \"Num Off Switch Containers (satisfied by)\" };\n    boolean odd \u003d false;\n    for (int i \u003d 0; i \u003c localityStatistics.length; i++) {\n      table.tr((odd \u003d !odd) ? _ODD : _EVEN).td(containersType[i])\n        .td(String.valueOf(localityStatistics[i][0]))\n        .td(i \u003d\u003d 0 ? \"\" : String.valueOf(localityStatistics[i][1]))\n        .td(i \u003c\u003d 1 ? \"\" : String.valueOf(localityStatistics[i][2]))._();\n    }\n    table._();\n    div._();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/webapp/AppAttemptBlock.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/webapp/AppBlock.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/webapp/AppAttemptBlock.java",
        "oldMethodName": "createContainerLocalityTable",
        "newMethodName": "createContainerLocalityTable"
      }
    },
    "95bfd087dc89e57a93340604cc8b96042fa1a05a": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange,Yparameterchange)",
      "commitMessage": "YARN-1809. Synchronize RM and TimeLineServer Web-UIs. Contributed by Zhijie Shen and Xuan Gong\n",
      "commitDate": "05/03/15 9:20 PM",
      "commitName": "95bfd087dc89e57a93340604cc8b96042fa1a05a",
      "commitAuthor": "Jian He",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-1809. Synchronize RM and TimeLineServer Web-UIs. Contributed by Zhijie Shen and Xuan Gong\n",
          "commitDate": "05/03/15 9:20 PM",
          "commitName": "95bfd087dc89e57a93340604cc8b96042fa1a05a",
          "commitAuthor": "Jian He",
          "commitDateOld": "05/03/15 10:58 AM",
          "commitNameOld": "952640fa4cbdc23fe8781e5627c2e8eab565c535",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 0.43,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,35 +1,32 @@\n-  private void createContainerLocalityTable(Block html,\n-      RMAppAttemptMetrics attemptMetrics) {\n-    if (attemptMetrics \u003d\u003d null) {\n-      return;\n-    }\n-\n+  private void createContainerLocalityTable(Block html) {\n+    int totalAllocatedContainers \u003d 0; //TODO: YARN-3284\n+    int[][] localityStatistics \u003d new int[0][0];//TODO:YARN-3284\n     DIV\u003cHamlet\u003e div \u003d html.div(_INFO_WRAP);\n     TABLE\u003cDIV\u003cHamlet\u003e\u003e table \u003d\n         div.h3(\n           \"Total Allocated Containers: \"\n-              + attemptMetrics.getTotalAllocatedContainers()).h3(\"Each table cell\"\n+              + totalAllocatedContainers).h3(\"Each table cell\"\n             + \" represents the number of NodeLocal/RackLocal/OffSwitch containers\"\n             + \" satisfied by NodeLocal/RackLocal/OffSwitch resource requests.\").table(\n           \"#containerLocality\");\n     table.\n       tr().\n         th(_TH, \"\").\n         th(_TH, \"Node Local Request\").\n         th(_TH, \"Rack Local Request\").\n         th(_TH, \"Off Switch Request\").\n       _();\n \n     String[] containersType \u003d\n         { \"Num Node Local Containers (satisfied by)\", \"Num Rack Local Containers (satisfied by)\",\n             \"Num Off Switch Containers (satisfied by)\" };\n     boolean odd \u003d false;\n-    for (int i \u003d 0; i \u003c attemptMetrics.getLocalityStatistics().length; i++) {\n+    for (int i \u003d 0; i \u003c localityStatistics.length; i++) {\n       table.tr((odd \u003d !odd) ? _ODD : _EVEN).td(containersType[i])\n-        .td(String.valueOf(attemptMetrics.getLocalityStatistics()[i][0]))\n-        .td(i \u003d\u003d 0 ? \"\" : String.valueOf(attemptMetrics.getLocalityStatistics()[i][1]))\n-        .td(i \u003c\u003d 1 ? \"\" : String.valueOf(attemptMetrics.getLocalityStatistics()[i][2]))._();\n+        .td(String.valueOf(localityStatistics[i][0]))\n+        .td(i \u003d\u003d 0 ? \"\" : String.valueOf(localityStatistics[i][1]))\n+        .td(i \u003c\u003d 1 ? \"\" : String.valueOf(localityStatistics[i][2]))._();\n     }\n     table._();\n     div._();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void createContainerLocalityTable(Block html) {\n    int totalAllocatedContainers \u003d 0; //TODO: YARN-3284\n    int[][] localityStatistics \u003d new int[0][0];//TODO:YARN-3284\n    DIV\u003cHamlet\u003e div \u003d html.div(_INFO_WRAP);\n    TABLE\u003cDIV\u003cHamlet\u003e\u003e table \u003d\n        div.h3(\n          \"Total Allocated Containers: \"\n              + totalAllocatedContainers).h3(\"Each table cell\"\n            + \" represents the number of NodeLocal/RackLocal/OffSwitch containers\"\n            + \" satisfied by NodeLocal/RackLocal/OffSwitch resource requests.\").table(\n          \"#containerLocality\");\n    table.\n      tr().\n        th(_TH, \"\").\n        th(_TH, \"Node Local Request\").\n        th(_TH, \"Rack Local Request\").\n        th(_TH, \"Off Switch Request\").\n      _();\n\n    String[] containersType \u003d\n        { \"Num Node Local Containers (satisfied by)\", \"Num Rack Local Containers (satisfied by)\",\n            \"Num Off Switch Containers (satisfied by)\" };\n    boolean odd \u003d false;\n    for (int i \u003d 0; i \u003c localityStatistics.length; i++) {\n      table.tr((odd \u003d !odd) ? _ODD : _EVEN).td(containersType[i])\n        .td(String.valueOf(localityStatistics[i][0]))\n        .td(i \u003d\u003d 0 ? \"\" : String.valueOf(localityStatistics[i][1]))\n        .td(i \u003c\u003d 1 ? \"\" : String.valueOf(localityStatistics[i][2]))._();\n    }\n    table._();\n    div._();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/webapp/AppBlock.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/AppBlock.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/webapp/AppBlock.java",
            "oldMethodName": "createContainerLocalityTable",
            "newMethodName": "createContainerLocalityTable"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-1809. Synchronize RM and TimeLineServer Web-UIs. Contributed by Zhijie Shen and Xuan Gong\n",
          "commitDate": "05/03/15 9:20 PM",
          "commitName": "95bfd087dc89e57a93340604cc8b96042fa1a05a",
          "commitAuthor": "Jian He",
          "commitDateOld": "05/03/15 10:58 AM",
          "commitNameOld": "952640fa4cbdc23fe8781e5627c2e8eab565c535",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 0.43,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,35 +1,32 @@\n-  private void createContainerLocalityTable(Block html,\n-      RMAppAttemptMetrics attemptMetrics) {\n-    if (attemptMetrics \u003d\u003d null) {\n-      return;\n-    }\n-\n+  private void createContainerLocalityTable(Block html) {\n+    int totalAllocatedContainers \u003d 0; //TODO: YARN-3284\n+    int[][] localityStatistics \u003d new int[0][0];//TODO:YARN-3284\n     DIV\u003cHamlet\u003e div \u003d html.div(_INFO_WRAP);\n     TABLE\u003cDIV\u003cHamlet\u003e\u003e table \u003d\n         div.h3(\n           \"Total Allocated Containers: \"\n-              + attemptMetrics.getTotalAllocatedContainers()).h3(\"Each table cell\"\n+              + totalAllocatedContainers).h3(\"Each table cell\"\n             + \" represents the number of NodeLocal/RackLocal/OffSwitch containers\"\n             + \" satisfied by NodeLocal/RackLocal/OffSwitch resource requests.\").table(\n           \"#containerLocality\");\n     table.\n       tr().\n         th(_TH, \"\").\n         th(_TH, \"Node Local Request\").\n         th(_TH, \"Rack Local Request\").\n         th(_TH, \"Off Switch Request\").\n       _();\n \n     String[] containersType \u003d\n         { \"Num Node Local Containers (satisfied by)\", \"Num Rack Local Containers (satisfied by)\",\n             \"Num Off Switch Containers (satisfied by)\" };\n     boolean odd \u003d false;\n-    for (int i \u003d 0; i \u003c attemptMetrics.getLocalityStatistics().length; i++) {\n+    for (int i \u003d 0; i \u003c localityStatistics.length; i++) {\n       table.tr((odd \u003d !odd) ? _ODD : _EVEN).td(containersType[i])\n-        .td(String.valueOf(attemptMetrics.getLocalityStatistics()[i][0]))\n-        .td(i \u003d\u003d 0 ? \"\" : String.valueOf(attemptMetrics.getLocalityStatistics()[i][1]))\n-        .td(i \u003c\u003d 1 ? \"\" : String.valueOf(attemptMetrics.getLocalityStatistics()[i][2]))._();\n+        .td(String.valueOf(localityStatistics[i][0]))\n+        .td(i \u003d\u003d 0 ? \"\" : String.valueOf(localityStatistics[i][1]))\n+        .td(i \u003c\u003d 1 ? \"\" : String.valueOf(localityStatistics[i][2]))._();\n     }\n     table._();\n     div._();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void createContainerLocalityTable(Block html) {\n    int totalAllocatedContainers \u003d 0; //TODO: YARN-3284\n    int[][] localityStatistics \u003d new int[0][0];//TODO:YARN-3284\n    DIV\u003cHamlet\u003e div \u003d html.div(_INFO_WRAP);\n    TABLE\u003cDIV\u003cHamlet\u003e\u003e table \u003d\n        div.h3(\n          \"Total Allocated Containers: \"\n              + totalAllocatedContainers).h3(\"Each table cell\"\n            + \" represents the number of NodeLocal/RackLocal/OffSwitch containers\"\n            + \" satisfied by NodeLocal/RackLocal/OffSwitch resource requests.\").table(\n          \"#containerLocality\");\n    table.\n      tr().\n        th(_TH, \"\").\n        th(_TH, \"Node Local Request\").\n        th(_TH, \"Rack Local Request\").\n        th(_TH, \"Off Switch Request\").\n      _();\n\n    String[] containersType \u003d\n        { \"Num Node Local Containers (satisfied by)\", \"Num Rack Local Containers (satisfied by)\",\n            \"Num Off Switch Containers (satisfied by)\" };\n    boolean odd \u003d false;\n    for (int i \u003d 0; i \u003c localityStatistics.length; i++) {\n      table.tr((odd \u003d !odd) ? _ODD : _EVEN).td(containersType[i])\n        .td(String.valueOf(localityStatistics[i][0]))\n        .td(i \u003d\u003d 0 ? \"\" : String.valueOf(localityStatistics[i][1]))\n        .td(i \u003c\u003d 1 ? \"\" : String.valueOf(localityStatistics[i][2]))._();\n    }\n    table._();\n    div._();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/webapp/AppBlock.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-1809. Synchronize RM and TimeLineServer Web-UIs. Contributed by Zhijie Shen and Xuan Gong\n",
          "commitDate": "05/03/15 9:20 PM",
          "commitName": "95bfd087dc89e57a93340604cc8b96042fa1a05a",
          "commitAuthor": "Jian He",
          "commitDateOld": "05/03/15 10:58 AM",
          "commitNameOld": "952640fa4cbdc23fe8781e5627c2e8eab565c535",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 0.43,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,35 +1,32 @@\n-  private void createContainerLocalityTable(Block html,\n-      RMAppAttemptMetrics attemptMetrics) {\n-    if (attemptMetrics \u003d\u003d null) {\n-      return;\n-    }\n-\n+  private void createContainerLocalityTable(Block html) {\n+    int totalAllocatedContainers \u003d 0; //TODO: YARN-3284\n+    int[][] localityStatistics \u003d new int[0][0];//TODO:YARN-3284\n     DIV\u003cHamlet\u003e div \u003d html.div(_INFO_WRAP);\n     TABLE\u003cDIV\u003cHamlet\u003e\u003e table \u003d\n         div.h3(\n           \"Total Allocated Containers: \"\n-              + attemptMetrics.getTotalAllocatedContainers()).h3(\"Each table cell\"\n+              + totalAllocatedContainers).h3(\"Each table cell\"\n             + \" represents the number of NodeLocal/RackLocal/OffSwitch containers\"\n             + \" satisfied by NodeLocal/RackLocal/OffSwitch resource requests.\").table(\n           \"#containerLocality\");\n     table.\n       tr().\n         th(_TH, \"\").\n         th(_TH, \"Node Local Request\").\n         th(_TH, \"Rack Local Request\").\n         th(_TH, \"Off Switch Request\").\n       _();\n \n     String[] containersType \u003d\n         { \"Num Node Local Containers (satisfied by)\", \"Num Rack Local Containers (satisfied by)\",\n             \"Num Off Switch Containers (satisfied by)\" };\n     boolean odd \u003d false;\n-    for (int i \u003d 0; i \u003c attemptMetrics.getLocalityStatistics().length; i++) {\n+    for (int i \u003d 0; i \u003c localityStatistics.length; i++) {\n       table.tr((odd \u003d !odd) ? _ODD : _EVEN).td(containersType[i])\n-        .td(String.valueOf(attemptMetrics.getLocalityStatistics()[i][0]))\n-        .td(i \u003d\u003d 0 ? \"\" : String.valueOf(attemptMetrics.getLocalityStatistics()[i][1]))\n-        .td(i \u003c\u003d 1 ? \"\" : String.valueOf(attemptMetrics.getLocalityStatistics()[i][2]))._();\n+        .td(String.valueOf(localityStatistics[i][0]))\n+        .td(i \u003d\u003d 0 ? \"\" : String.valueOf(localityStatistics[i][1]))\n+        .td(i \u003c\u003d 1 ? \"\" : String.valueOf(localityStatistics[i][2]))._();\n     }\n     table._();\n     div._();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void createContainerLocalityTable(Block html) {\n    int totalAllocatedContainers \u003d 0; //TODO: YARN-3284\n    int[][] localityStatistics \u003d new int[0][0];//TODO:YARN-3284\n    DIV\u003cHamlet\u003e div \u003d html.div(_INFO_WRAP);\n    TABLE\u003cDIV\u003cHamlet\u003e\u003e table \u003d\n        div.h3(\n          \"Total Allocated Containers: \"\n              + totalAllocatedContainers).h3(\"Each table cell\"\n            + \" represents the number of NodeLocal/RackLocal/OffSwitch containers\"\n            + \" satisfied by NodeLocal/RackLocal/OffSwitch resource requests.\").table(\n          \"#containerLocality\");\n    table.\n      tr().\n        th(_TH, \"\").\n        th(_TH, \"Node Local Request\").\n        th(_TH, \"Rack Local Request\").\n        th(_TH, \"Off Switch Request\").\n      _();\n\n    String[] containersType \u003d\n        { \"Num Node Local Containers (satisfied by)\", \"Num Rack Local Containers (satisfied by)\",\n            \"Num Off Switch Containers (satisfied by)\" };\n    boolean odd \u003d false;\n    for (int i \u003d 0; i \u003c localityStatistics.length; i++) {\n      table.tr((odd \u003d !odd) ? _ODD : _EVEN).td(containersType[i])\n        .td(String.valueOf(localityStatistics[i][0]))\n        .td(i \u003d\u003d 0 ? \"\" : String.valueOf(localityStatistics[i][1]))\n        .td(i \u003c\u003d 1 ? \"\" : String.valueOf(localityStatistics[i][2]))._();\n    }\n    table._();\n    div._();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/webapp/AppBlock.java",
          "extendedDetails": {
            "oldValue": "[html-Block, attemptMetrics-RMAppAttemptMetrics]",
            "newValue": "[html-Block]"
          }
        }
      ]
    },
    "e17e5ba9d7e2bd45ba6884f59f8045817594b284": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3272. Surface container locality info in RM web UI (Jian He via wangda)\n",
      "commitDate": "03/03/15 11:49 AM",
      "commitName": "e17e5ba9d7e2bd45ba6884f59f8045817594b284",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,35 @@\n+  private void createContainerLocalityTable(Block html,\n+      RMAppAttemptMetrics attemptMetrics) {\n+    if (attemptMetrics \u003d\u003d null) {\n+      return;\n+    }\n+\n+    DIV\u003cHamlet\u003e div \u003d html.div(_INFO_WRAP);\n+    TABLE\u003cDIV\u003cHamlet\u003e\u003e table \u003d\n+        div.h3(\n+          \"Total Allocated Containers: \"\n+              + attemptMetrics.getTotalAllocatedContainers()).h3(\"Each table cell\"\n+            + \" represents the number of NodeLocal/RackLocal/OffSwitch containers\"\n+            + \" satisfied by NodeLocal/RackLocal/OffSwitch resource requests.\").table(\n+          \"#containerLocality\");\n+    table.\n+      tr().\n+        th(_TH, \"\").\n+        th(_TH, \"Node Local Request\").\n+        th(_TH, \"Rack Local Request\").\n+        th(_TH, \"Off Switch Request\").\n+      _();\n+\n+    String[] containersType \u003d\n+        { \"Num Node Local Containers (satisfied by)\", \"Num Rack Local Containers (satisfied by)\",\n+            \"Num Off Switch Containers (satisfied by)\" };\n+    boolean odd \u003d false;\n+    for (int i \u003d 0; i \u003c attemptMetrics.getLocalityStatistics().length; i++) {\n+      table.tr((odd \u003d !odd) ? _ODD : _EVEN).td(containersType[i])\n+        .td(String.valueOf(attemptMetrics.getLocalityStatistics()[i][0]))\n+        .td(i \u003d\u003d 0 ? \"\" : String.valueOf(attemptMetrics.getLocalityStatistics()[i][1]))\n+        .td(i \u003c\u003d 1 ? \"\" : String.valueOf(attemptMetrics.getLocalityStatistics()[i][2]))._();\n+    }\n+    table._();\n+    div._();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void createContainerLocalityTable(Block html,\n      RMAppAttemptMetrics attemptMetrics) {\n    if (attemptMetrics \u003d\u003d null) {\n      return;\n    }\n\n    DIV\u003cHamlet\u003e div \u003d html.div(_INFO_WRAP);\n    TABLE\u003cDIV\u003cHamlet\u003e\u003e table \u003d\n        div.h3(\n          \"Total Allocated Containers: \"\n              + attemptMetrics.getTotalAllocatedContainers()).h3(\"Each table cell\"\n            + \" represents the number of NodeLocal/RackLocal/OffSwitch containers\"\n            + \" satisfied by NodeLocal/RackLocal/OffSwitch resource requests.\").table(\n          \"#containerLocality\");\n    table.\n      tr().\n        th(_TH, \"\").\n        th(_TH, \"Node Local Request\").\n        th(_TH, \"Rack Local Request\").\n        th(_TH, \"Off Switch Request\").\n      _();\n\n    String[] containersType \u003d\n        { \"Num Node Local Containers (satisfied by)\", \"Num Rack Local Containers (satisfied by)\",\n            \"Num Off Switch Containers (satisfied by)\" };\n    boolean odd \u003d false;\n    for (int i \u003d 0; i \u003c attemptMetrics.getLocalityStatistics().length; i++) {\n      table.tr((odd \u003d !odd) ? _ODD : _EVEN).td(containersType[i])\n        .td(String.valueOf(attemptMetrics.getLocalityStatistics()[i][0]))\n        .td(i \u003d\u003d 0 ? \"\" : String.valueOf(attemptMetrics.getLocalityStatistics()[i][1]))\n        .td(i \u003c\u003d 1 ? \"\" : String.valueOf(attemptMetrics.getLocalityStatistics()[i][2]))._();\n    }\n    table._();\n    div._();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/AppBlock.java"
    }
  }
}