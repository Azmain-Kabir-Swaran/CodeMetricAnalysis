{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "MetricsSystemImpl.java",
  "functionName": "startTimer",
  "functionId": "startTimer",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/impl/MetricsSystemImpl.java",
  "functionStartLine": 356,
  "functionEndLine": 376,
  "numCommitsSeen": 32,
  "timeTaken": 2151,
  "changeHistory": [
    "13501053dd95f41ac14091f5bbd79bcb2a3896a3",
    "a4405674919d14be89bc4da22db2f417b5ae6ac3",
    "9538af0e1a7428b8787afa8d5e0b82c1e04adca7",
    "2236b577a34b069c0d1f91da99f63a199f260ac2",
    "2799d9659db54aae82a719366df953710b050aa9",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "827401a9b1d85fe1f443d21ebe9d917ba23153de"
  ],
  "changeHistoryShort": {
    "13501053dd95f41ac14091f5bbd79bcb2a3896a3": "Ybodychange",
    "a4405674919d14be89bc4da22db2f417b5ae6ac3": "Ybodychange",
    "9538af0e1a7428b8787afa8d5e0b82c1e04adca7": "Ybodychange",
    "2236b577a34b069c0d1f91da99f63a199f260ac2": "Ybodychange",
    "2799d9659db54aae82a719366df953710b050aa9": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "827401a9b1d85fe1f443d21ebe9d917ba23153de": "Yintroduced"
  },
  "changeHistoryDetails": {
    "13501053dd95f41ac14091f5bbd79bcb2a3896a3": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11603. Metric Snapshot log can be changed #MetricsSystemImpl.java since all the services will be initialized. Contributed By Brahma Reddy Battula.\n",
      "commitDate": "24/11/16 8:53 AM",
      "commitName": "13501053dd95f41ac14091f5bbd79bcb2a3896a3",
      "commitAuthor": "Brahma Reddy Battula",
      "commitDateOld": "17/11/16 8:48 PM",
      "commitNameOld": "c0b1a44f6c6e6f9e4ac5cecea0d4a50e237a4c9c",
      "commitAuthorOld": "Wei-Chiu Chuang",
      "daysBetweenCommits": 6.5,
      "commitsBetweenForRepo": 34,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,21 @@\n   private synchronized void startTimer() {\n     if (timer !\u003d null) {\n       LOG.warn(prefix +\" metrics system timer already started!\");\n       return;\n     }\n     logicalTime \u003d 0;\n     long millis \u003d period;\n     timer \u003d new Timer(\"Timer for \u0027\"+ prefix +\"\u0027 metrics system\", true);\n     timer.scheduleAtFixedRate(new TimerTask() {\n           @Override\n           public void run() {\n             try {\n               onTimerEvent();\n             } catch (Exception e) {\n               LOG.warn(\"Error invoking metrics timer\", e);\n             }\n           }\n         }, millis, millis);\n-    LOG.info(\"Scheduled snapshot period at \"+ (period/1000) +\" second(s).\");\n+    LOG.info(\"Scheduled Metric snapshot period at \" + (period / 1000)\n+        + \" second(s).\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void startTimer() {\n    if (timer !\u003d null) {\n      LOG.warn(prefix +\" metrics system timer already started!\");\n      return;\n    }\n    logicalTime \u003d 0;\n    long millis \u003d period;\n    timer \u003d new Timer(\"Timer for \u0027\"+ prefix +\"\u0027 metrics system\", true);\n    timer.scheduleAtFixedRate(new TimerTask() {\n          @Override\n          public void run() {\n            try {\n              onTimerEvent();\n            } catch (Exception e) {\n              LOG.warn(\"Error invoking metrics timer\", e);\n            }\n          }\n        }, millis, millis);\n    LOG.info(\"Scheduled Metric snapshot period at \" + (period / 1000)\n        + \" second(s).\");\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/impl/MetricsSystemImpl.java",
      "extendedDetails": {}
    },
    "a4405674919d14be89bc4da22db2f417b5ae6ac3": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9067. o.a.h.hdfs.server.datanode.fsdataset.impl.TestLazyWriter is failing in trunk (Contributed by Surendra Singh Lilhore)\n",
      "commitDate": "15/09/15 5:00 AM",
      "commitName": "a4405674919d14be89bc4da22db2f417b5ae6ac3",
      "commitAuthor": "Vinayakumar B",
      "commitDateOld": "11/09/15 3:20 PM",
      "commitNameOld": "9538af0e1a7428b8787afa8d5e0b82c1e04adca7",
      "commitAuthorOld": "Robert Kanter",
      "daysBetweenCommits": 3.57,
      "commitsBetweenForRepo": 18,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   private synchronized void startTimer() {\n     if (timer !\u003d null) {\n       LOG.warn(prefix +\" metrics system timer already started!\");\n       return;\n     }\n     logicalTime \u003d 0;\n-    long millis \u003d period * 1000L;\n+    long millis \u003d period;\n     timer \u003d new Timer(\"Timer for \u0027\"+ prefix +\"\u0027 metrics system\", true);\n     timer.scheduleAtFixedRate(new TimerTask() {\n           @Override\n           public void run() {\n             try {\n               onTimerEvent();\n             } catch (Exception e) {\n               LOG.warn(\"Error invoking metrics timer\", e);\n             }\n           }\n         }, millis, millis);\n-    LOG.info(\"Scheduled snapshot period at \"+ period +\" second(s).\");\n+    LOG.info(\"Scheduled snapshot period at \"+ (period/1000) +\" second(s).\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void startTimer() {\n    if (timer !\u003d null) {\n      LOG.warn(prefix +\" metrics system timer already started!\");\n      return;\n    }\n    logicalTime \u003d 0;\n    long millis \u003d period;\n    timer \u003d new Timer(\"Timer for \u0027\"+ prefix +\"\u0027 metrics system\", true);\n    timer.scheduleAtFixedRate(new TimerTask() {\n          @Override\n          public void run() {\n            try {\n              onTimerEvent();\n            } catch (Exception e) {\n              LOG.warn(\"Error invoking metrics timer\", e);\n            }\n          }\n        }, millis, millis);\n    LOG.info(\"Scheduled snapshot period at \"+ (period/1000) +\" second(s).\");\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/impl/MetricsSystemImpl.java",
      "extendedDetails": {}
    },
    "9538af0e1a7428b8787afa8d5e0b82c1e04adca7": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12348. MetricsSystemImpl creates MetricsSourceAdapter with wrong time unit parameter. (zxu via rkanter)\n",
      "commitDate": "11/09/15 3:20 PM",
      "commitName": "9538af0e1a7428b8787afa8d5e0b82c1e04adca7",
      "commitAuthor": "Robert Kanter",
      "commitDateOld": "24/06/15 12:51 PM",
      "commitNameOld": "2236b577a34b069c0d1f91da99f63a199f260ac2",
      "commitAuthorOld": "Jonathan Eagles",
      "daysBetweenCommits": 79.1,
      "commitsBetweenForRepo": 458,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   private synchronized void startTimer() {\n     if (timer !\u003d null) {\n       LOG.warn(prefix +\" metrics system timer already started!\");\n       return;\n     }\n     logicalTime \u003d 0;\n-    long millis \u003d period * 1000;\n+    long millis \u003d period * 1000L;\n     timer \u003d new Timer(\"Timer for \u0027\"+ prefix +\"\u0027 metrics system\", true);\n     timer.scheduleAtFixedRate(new TimerTask() {\n           @Override\n           public void run() {\n             try {\n               onTimerEvent();\n             } catch (Exception e) {\n               LOG.warn(\"Error invoking metrics timer\", e);\n             }\n           }\n         }, millis, millis);\n     LOG.info(\"Scheduled snapshot period at \"+ period +\" second(s).\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void startTimer() {\n    if (timer !\u003d null) {\n      LOG.warn(prefix +\" metrics system timer already started!\");\n      return;\n    }\n    logicalTime \u003d 0;\n    long millis \u003d period * 1000L;\n    timer \u003d new Timer(\"Timer for \u0027\"+ prefix +\"\u0027 metrics system\", true);\n    timer.scheduleAtFixedRate(new TimerTask() {\n          @Override\n          public void run() {\n            try {\n              onTimerEvent();\n            } catch (Exception e) {\n              LOG.warn(\"Error invoking metrics timer\", e);\n            }\n          }\n        }, millis, millis);\n    LOG.info(\"Scheduled snapshot period at \"+ period +\" second(s).\");\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/impl/MetricsSystemImpl.java",
      "extendedDetails": {}
    },
    "2236b577a34b069c0d1f91da99f63a199f260ac2": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11958. MetricsSystemImpl fails to show backtrace when an error occurs (Jason Lowe via jeagles)\n",
      "commitDate": "24/06/15 12:51 PM",
      "commitName": "2236b577a34b069c0d1f91da99f63a199f260ac2",
      "commitAuthor": "Jonathan Eagles",
      "commitDateOld": "02/03/15 9:17 PM",
      "commitNameOld": "d1c6accb6f87b08975175580e15f1ff1fe29ab04",
      "commitAuthorOld": "Tsuyoshi Ozawa",
      "daysBetweenCommits": 113.61,
      "commitsBetweenForRepo": 1005,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   private synchronized void startTimer() {\n     if (timer !\u003d null) {\n       LOG.warn(prefix +\" metrics system timer already started!\");\n       return;\n     }\n     logicalTime \u003d 0;\n     long millis \u003d period * 1000;\n     timer \u003d new Timer(\"Timer for \u0027\"+ prefix +\"\u0027 metrics system\", true);\n     timer.scheduleAtFixedRate(new TimerTask() {\n           @Override\n           public void run() {\n             try {\n               onTimerEvent();\n             } catch (Exception e) {\n-              LOG.warn(e);\n+              LOG.warn(\"Error invoking metrics timer\", e);\n             }\n           }\n         }, millis, millis);\n     LOG.info(\"Scheduled snapshot period at \"+ period +\" second(s).\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void startTimer() {\n    if (timer !\u003d null) {\n      LOG.warn(prefix +\" metrics system timer already started!\");\n      return;\n    }\n    logicalTime \u003d 0;\n    long millis \u003d period * 1000;\n    timer \u003d new Timer(\"Timer for \u0027\"+ prefix +\"\u0027 metrics system\", true);\n    timer.scheduleAtFixedRate(new TimerTask() {\n          @Override\n          public void run() {\n            try {\n              onTimerEvent();\n            } catch (Exception e) {\n              LOG.warn(\"Error invoking metrics timer\", e);\n            }\n          }\n        }, millis, millis);\n    LOG.info(\"Scheduled snapshot period at \"+ period +\" second(s).\");\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/impl/MetricsSystemImpl.java",
      "extendedDetails": {}
    },
    "2799d9659db54aae82a719366df953710b050aa9": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-8593. Add missed @Override annotations in Metric/Metrics2 package. Contributed by Brandon Li.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1362294 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/07/12 3:38 PM",
      "commitName": "2799d9659db54aae82a719366df953710b050aa9",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "12/07/12 12:01 PM",
      "commitNameOld": "4a5ba3b7bd2360fd9605863630b477d362874e1e",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 4.15,
      "commitsBetweenForRepo": 38,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   private synchronized void startTimer() {\n     if (timer !\u003d null) {\n       LOG.warn(prefix +\" metrics system timer already started!\");\n       return;\n     }\n     logicalTime \u003d 0;\n     long millis \u003d period * 1000;\n     timer \u003d new Timer(\"Timer for \u0027\"+ prefix +\"\u0027 metrics system\", true);\n     timer.scheduleAtFixedRate(new TimerTask() {\n+          @Override\n           public void run() {\n             try {\n               onTimerEvent();\n-            }\n-            catch (Exception e) {\n+            } catch (Exception e) {\n               LOG.warn(e);\n             }\n           }\n         }, millis, millis);\n     LOG.info(\"Scheduled snapshot period at \"+ period +\" second(s).\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void startTimer() {\n    if (timer !\u003d null) {\n      LOG.warn(prefix +\" metrics system timer already started!\");\n      return;\n    }\n    logicalTime \u003d 0;\n    long millis \u003d period * 1000;\n    timer \u003d new Timer(\"Timer for \u0027\"+ prefix +\"\u0027 metrics system\", true);\n    timer.scheduleAtFixedRate(new TimerTask() {\n          @Override\n          public void run() {\n            try {\n              onTimerEvent();\n            } catch (Exception e) {\n              LOG.warn(e);\n            }\n          }\n        }, millis, millis);\n    LOG.info(\"Scheduled snapshot period at \"+ period +\" second(s).\");\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/impl/MetricsSystemImpl.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private synchronized void startTimer() {\n    if (timer !\u003d null) {\n      LOG.warn(prefix +\" metrics system timer already started!\");\n      return;\n    }\n    logicalTime \u003d 0;\n    long millis \u003d period * 1000;\n    timer \u003d new Timer(\"Timer for \u0027\"+ prefix +\"\u0027 metrics system\", true);\n    timer.scheduleAtFixedRate(new TimerTask() {\n          public void run() {\n            try {\n              onTimerEvent();\n            }\n            catch (Exception e) {\n              LOG.warn(e);\n            }\n          }\n        }, millis, millis);\n    LOG.info(\"Scheduled snapshot period at \"+ period +\" second(s).\");\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/impl/MetricsSystemImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/metrics2/impl/MetricsSystemImpl.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/impl/MetricsSystemImpl.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private synchronized void startTimer() {\n    if (timer !\u003d null) {\n      LOG.warn(prefix +\" metrics system timer already started!\");\n      return;\n    }\n    logicalTime \u003d 0;\n    long millis \u003d period * 1000;\n    timer \u003d new Timer(\"Timer for \u0027\"+ prefix +\"\u0027 metrics system\", true);\n    timer.scheduleAtFixedRate(new TimerTask() {\n          public void run() {\n            try {\n              onTimerEvent();\n            }\n            catch (Exception e) {\n              LOG.warn(e);\n            }\n          }\n        }, millis, millis);\n    LOG.info(\"Scheduled snapshot period at \"+ period +\" second(s).\");\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/metrics2/impl/MetricsSystemImpl.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/metrics2/impl/MetricsSystemImpl.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/metrics2/impl/MetricsSystemImpl.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private synchronized void startTimer() {\n    if (timer !\u003d null) {\n      LOG.warn(prefix +\" metrics system timer already started!\");\n      return;\n    }\n    logicalTime \u003d 0;\n    long millis \u003d period * 1000;\n    timer \u003d new Timer(\"Timer for \u0027\"+ prefix +\"\u0027 metrics system\", true);\n    timer.scheduleAtFixedRate(new TimerTask() {\n          public void run() {\n            try {\n              onTimerEvent();\n            }\n            catch (Exception e) {\n              LOG.warn(e);\n            }\n          }\n        }, millis, millis);\n    LOG.info(\"Scheduled snapshot period at \"+ period +\" second(s).\");\n  }",
      "path": "common/src/java/org/apache/hadoop/metrics2/impl/MetricsSystemImpl.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/metrics2/impl/MetricsSystemImpl.java",
        "newPath": "common/src/java/org/apache/hadoop/metrics2/impl/MetricsSystemImpl.java"
      }
    },
    "827401a9b1d85fe1f443d21ebe9d917ba23153de": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-6919. New metrics2 framework. Contributed by Luke Lu.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1100113 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/05/11 12:28 AM",
      "commitName": "827401a9b1d85fe1f443d21ebe9d917ba23153de",
      "commitAuthor": "Arun Murthy",
      "diff": "@@ -0,0 +1,20 @@\n+  private synchronized void startTimer() {\n+    if (timer !\u003d null) {\n+      LOG.warn(prefix +\" metrics system timer already started!\");\n+      return;\n+    }\n+    logicalTime \u003d 0;\n+    long millis \u003d period * 1000;\n+    timer \u003d new Timer(\"Timer for \u0027\"+ prefix +\"\u0027 metrics system\", true);\n+    timer.scheduleAtFixedRate(new TimerTask() {\n+          public void run() {\n+            try {\n+              onTimerEvent();\n+            }\n+            catch (Exception e) {\n+              LOG.warn(e);\n+            }\n+          }\n+        }, millis, millis);\n+    LOG.info(\"Scheduled snapshot period at \"+ period +\" second(s).\");\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void startTimer() {\n    if (timer !\u003d null) {\n      LOG.warn(prefix +\" metrics system timer already started!\");\n      return;\n    }\n    logicalTime \u003d 0;\n    long millis \u003d period * 1000;\n    timer \u003d new Timer(\"Timer for \u0027\"+ prefix +\"\u0027 metrics system\", true);\n    timer.scheduleAtFixedRate(new TimerTask() {\n          public void run() {\n            try {\n              onTimerEvent();\n            }\n            catch (Exception e) {\n              LOG.warn(e);\n            }\n          }\n        }, millis, millis);\n    LOG.info(\"Scheduled snapshot period at \"+ period +\" second(s).\");\n  }",
      "path": "src/java/org/apache/hadoop/metrics2/impl/MetricsSystemImpl.java"
    }
  }
}