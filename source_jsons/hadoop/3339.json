{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JsonUtilClient.java",
  "functionName": "toContentSummary",
  "functionId": "toContentSummary___json-Map__?,?__(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/web/JsonUtilClient.java",
  "functionStartLine": 426,
  "functionEndLine": 463,
  "numCommitsSeen": 95,
  "timeTaken": 5554,
  "changeHistory": [
    "b74e47e31abd31617c0cdc648a3b1d48bb311d65",
    "17e8cf501b384af93726e4f2e6f5e28c6e3a8f65",
    "3ae775d74029b6ae82263739f598ceb25c597dcd",
    "d55a84951abe87a31c17bd4b84cd309ed202e540",
    "41d3f8899d8b96568f56331eaf598bb356ecdae0",
    "bcf89ddc7d52e04725caf104f5958e33d9f51b35",
    "ab04ff9efe632b4eca6faca7407ac35e00e6a379",
    "3d0708bdb0a75af3d87bbac9f6c4ffbcabab98ca",
    "e2262d3d18c6d5c2aa20f96920104dc07271b869",
    "1b1016beeb716bef8dad93bb2c7c4631a14b3d57",
    "dc8464f943b61b795df0cc8baec171bf07355763"
  ],
  "changeHistoryShort": {
    "b74e47e31abd31617c0cdc648a3b1d48bb311d65": "Ybodychange",
    "17e8cf501b384af93726e4f2e6f5e28c6e3a8f65": "Ybodychange",
    "3ae775d74029b6ae82263739f598ceb25c597dcd": "Ybodychange",
    "d55a84951abe87a31c17bd4b84cd309ed202e540": "Ybodychange",
    "41d3f8899d8b96568f56331eaf598bb356ecdae0": "Ybodychange",
    "bcf89ddc7d52e04725caf104f5958e33d9f51b35": "Yfilerename",
    "ab04ff9efe632b4eca6faca7407ac35e00e6a379": "Ymultichange(Ymovefromfile,Ymodifierchange)",
    "3d0708bdb0a75af3d87bbac9f6c4ffbcabab98ca": "Ybodychange",
    "e2262d3d18c6d5c2aa20f96920104dc07271b869": "Ybodychange",
    "1b1016beeb716bef8dad93bb2c7c4631a14b3d57": "Ymultichange(Yparameterchange,Yexceptionschange,Ybodychange)",
    "dc8464f943b61b795df0cc8baec171bf07355763": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b74e47e31abd31617c0cdc648a3b1d48bb311d65": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-15214. WebHDFS: Add snapshot counts to Content Summary. Contributed by hemanthboyina.\n",
      "commitDate": "21/03/20 9:44 AM",
      "commitName": "b74e47e31abd31617c0cdc648a3b1d48bb311d65",
      "commitAuthor": "Takanobu Asanuma",
      "commitDateOld": "06/01/20 6:10 PM",
      "commitNameOld": "59aac002834aaeb6475faad4c894b8c764957f68",
      "commitAuthorOld": "Takanobu Asanuma",
      "daysBetweenCommits": 74.61,
      "commitsBetweenForRepo": 259,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,38 @@\n   static ContentSummary toContentSummary(final Map\u003c?, ?\u003e json) {\n     if (json \u003d\u003d null) {\n       return null;\n     }\n \n     final Map\u003c?, ?\u003e m \u003d (Map\u003c?, ?\u003e)\n         json.get(ContentSummary.class.getSimpleName());\n     final long length \u003d ((Number) m.get(\"length\")).longValue();\n     final long fileCount \u003d ((Number) m.get(\"fileCount\")).longValue();\n     final long directoryCount \u003d ((Number) m.get(\"directoryCount\")).longValue();\n     final String ecPolicy \u003d ((String) m.get(\"ecPolicy\"));\n     ContentSummary.Builder builder \u003d new ContentSummary.Builder()\n         .length(length)\n         .fileCount(fileCount)\n         .directoryCount(directoryCount)\n         .erasureCodingPolicy(ecPolicy);\n     builder \u003d buildQuotaUsage(builder, m, ContentSummary.Builder.class);\n+    if (m.get(\"snapshotLength\") !\u003d null) {\n+      long snapshotLength \u003d ((Number) m.get(\"snapshotLength\")).longValue();\n+      builder.snapshotLength(snapshotLength);\n+    }\n+    if (m.get(\"snapshotFileCount\") !\u003d null) {\n+      long snapshotFileCount \u003d\n+          ((Number) m.get(\"snapshotFileCount\")).longValue();\n+      builder.snapshotFileCount(snapshotFileCount);\n+    }\n+    if (m.get(\"snapshotDirectoryCount\") !\u003d null) {\n+      long snapshotDirectoryCount \u003d\n+          ((Number) m.get(\"snapshotDirectoryCount\")).longValue();\n+      builder.snapshotDirectoryCount(snapshotDirectoryCount);\n+    }\n+    if (m.get(\"snapshotSpaceConsumed\") !\u003d null) {\n+      long snapshotSpaceConsumed \u003d\n+          ((Number) m.get(\"snapshotSpaceConsumed\")).longValue();\n+      builder.snapshotSpaceConsumed(snapshotSpaceConsumed);\n+    }\n     return builder.build();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static ContentSummary toContentSummary(final Map\u003c?, ?\u003e json) {\n    if (json \u003d\u003d null) {\n      return null;\n    }\n\n    final Map\u003c?, ?\u003e m \u003d (Map\u003c?, ?\u003e)\n        json.get(ContentSummary.class.getSimpleName());\n    final long length \u003d ((Number) m.get(\"length\")).longValue();\n    final long fileCount \u003d ((Number) m.get(\"fileCount\")).longValue();\n    final long directoryCount \u003d ((Number) m.get(\"directoryCount\")).longValue();\n    final String ecPolicy \u003d ((String) m.get(\"ecPolicy\"));\n    ContentSummary.Builder builder \u003d new ContentSummary.Builder()\n        .length(length)\n        .fileCount(fileCount)\n        .directoryCount(directoryCount)\n        .erasureCodingPolicy(ecPolicy);\n    builder \u003d buildQuotaUsage(builder, m, ContentSummary.Builder.class);\n    if (m.get(\"snapshotLength\") !\u003d null) {\n      long snapshotLength \u003d ((Number) m.get(\"snapshotLength\")).longValue();\n      builder.snapshotLength(snapshotLength);\n    }\n    if (m.get(\"snapshotFileCount\") !\u003d null) {\n      long snapshotFileCount \u003d\n          ((Number) m.get(\"snapshotFileCount\")).longValue();\n      builder.snapshotFileCount(snapshotFileCount);\n    }\n    if (m.get(\"snapshotDirectoryCount\") !\u003d null) {\n      long snapshotDirectoryCount \u003d\n          ((Number) m.get(\"snapshotDirectoryCount\")).longValue();\n      builder.snapshotDirectoryCount(snapshotDirectoryCount);\n    }\n    if (m.get(\"snapshotSpaceConsumed\") !\u003d null) {\n      long snapshotSpaceConsumed \u003d\n          ((Number) m.get(\"snapshotSpaceConsumed\")).longValue();\n      builder.snapshotSpaceConsumed(snapshotSpaceConsumed);\n    }\n    return builder.build();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/web/JsonUtilClient.java",
      "extendedDetails": {}
    },
    "17e8cf501b384af93726e4f2e6f5e28c6e3a8f65": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14686. HttpFS: HttpFSFileSystem#getErasureCodingPolicy always returns null (#1192) Contributed by Siyao Meng.\n\n",
      "commitDate": "01/08/19 5:15 PM",
      "commitName": "17e8cf501b384af93726e4f2e6f5e28c6e3a8f65",
      "commitAuthor": "Siyao Meng",
      "commitDateOld": "30/07/19 4:01 PM",
      "commitNameOld": "3ae775d74029b6ae82263739f598ceb25c597dcd",
      "commitAuthorOld": "Chao Sun",
      "daysBetweenCommits": 2.05,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,19 @@\n   static ContentSummary toContentSummary(final Map\u003c?, ?\u003e json) {\n     if (json \u003d\u003d null) {\n       return null;\n     }\n \n     final Map\u003c?, ?\u003e m \u003d (Map\u003c?, ?\u003e)\n         json.get(ContentSummary.class.getSimpleName());\n     final long length \u003d ((Number) m.get(\"length\")).longValue();\n     final long fileCount \u003d ((Number) m.get(\"fileCount\")).longValue();\n     final long directoryCount \u003d ((Number) m.get(\"directoryCount\")).longValue();\n+    final String ecPolicy \u003d ((String) m.get(\"ecPolicy\"));\n     ContentSummary.Builder builder \u003d new ContentSummary.Builder()\n         .length(length)\n         .fileCount(fileCount)\n-        .directoryCount(directoryCount);\n+        .directoryCount(directoryCount)\n+        .erasureCodingPolicy(ecPolicy);\n     builder \u003d buildQuotaUsage(builder, m, ContentSummary.Builder.class);\n     return builder.build();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static ContentSummary toContentSummary(final Map\u003c?, ?\u003e json) {\n    if (json \u003d\u003d null) {\n      return null;\n    }\n\n    final Map\u003c?, ?\u003e m \u003d (Map\u003c?, ?\u003e)\n        json.get(ContentSummary.class.getSimpleName());\n    final long length \u003d ((Number) m.get(\"length\")).longValue();\n    final long fileCount \u003d ((Number) m.get(\"fileCount\")).longValue();\n    final long directoryCount \u003d ((Number) m.get(\"directoryCount\")).longValue();\n    final String ecPolicy \u003d ((String) m.get(\"ecPolicy\"));\n    ContentSummary.Builder builder \u003d new ContentSummary.Builder()\n        .length(length)\n        .fileCount(fileCount)\n        .directoryCount(directoryCount)\n        .erasureCodingPolicy(ecPolicy);\n    builder \u003d buildQuotaUsage(builder, m, ContentSummary.Builder.class);\n    return builder.build();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/web/JsonUtilClient.java",
      "extendedDetails": {}
    },
    "3ae775d74029b6ae82263739f598ceb25c597dcd": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14034. Support getQuotaUsage API in WebHDFS. Contributed by Chao Sun.\n\nSigned-off-by: Wei-Chiu Chuang \u003cweichiu@apache.org\u003e\n",
      "commitDate": "30/07/19 4:01 PM",
      "commitName": "3ae775d74029b6ae82263739f598ceb25c597dcd",
      "commitAuthor": "Chao Sun",
      "commitDateOld": "11/12/18 4:29 AM",
      "commitNameOld": "39dc7345b80e27ba8bd1ff4c19ca241aef5ac0fc",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 231.44,
      "commitsBetweenForRepo": 1671,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,17 @@\n   static ContentSummary toContentSummary(final Map\u003c?, ?\u003e json) {\n     if (json \u003d\u003d null) {\n       return null;\n     }\n \n-    final Map\u003c?, ?\u003e m \u003d (Map\u003c?, ?\u003e)json.get(\n-        ContentSummary.class.getSimpleName());\n+    final Map\u003c?, ?\u003e m \u003d (Map\u003c?, ?\u003e)\n+        json.get(ContentSummary.class.getSimpleName());\n     final long length \u003d ((Number) m.get(\"length\")).longValue();\n     final long fileCount \u003d ((Number) m.get(\"fileCount\")).longValue();\n     final long directoryCount \u003d ((Number) m.get(\"directoryCount\")).longValue();\n-    final long quota \u003d ((Number) m.get(\"quota\")).longValue();\n-    final long spaceConsumed \u003d ((Number) m.get(\"spaceConsumed\")).longValue();\n-    final long spaceQuota \u003d ((Number) m.get(\"spaceQuota\")).longValue();\n-    final Map\u003c?, ?\u003e typem \u003d (Map\u003c?, ?\u003e) m.get(\"typeQuota\");\n-\n-    ContentSummary.Builder contentSummaryBuilder \u003dnew ContentSummary.Builder()\n-        .length(length).fileCount(fileCount).directoryCount(directoryCount)\n-        .quota(quota).spaceConsumed(spaceConsumed).spaceQuota(spaceQuota);\n-    if (typem !\u003d null) {\n-      for (StorageType t : StorageType.getTypesSupportingQuota()) {\n-        Map\u003c?, ?\u003e type \u003d (Map\u003c?, ?\u003e) typem.get(t.toString());\n-        if (type !\u003d null) {\n-          contentSummaryBuilder \u003d contentSummaryBuilder.typeQuota(t,\n-              ((Number) type.get(\"quota\")).longValue()).typeConsumed(t,\n-              ((Number) type.get(\"consumed\")).longValue());\n-        }\n-      }\n-    }\n-    return contentSummaryBuilder.build();\n+    ContentSummary.Builder builder \u003d new ContentSummary.Builder()\n+        .length(length)\n+        .fileCount(fileCount)\n+        .directoryCount(directoryCount);\n+    builder \u003d buildQuotaUsage(builder, m, ContentSummary.Builder.class);\n+    return builder.build();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static ContentSummary toContentSummary(final Map\u003c?, ?\u003e json) {\n    if (json \u003d\u003d null) {\n      return null;\n    }\n\n    final Map\u003c?, ?\u003e m \u003d (Map\u003c?, ?\u003e)\n        json.get(ContentSummary.class.getSimpleName());\n    final long length \u003d ((Number) m.get(\"length\")).longValue();\n    final long fileCount \u003d ((Number) m.get(\"fileCount\")).longValue();\n    final long directoryCount \u003d ((Number) m.get(\"directoryCount\")).longValue();\n    ContentSummary.Builder builder \u003d new ContentSummary.Builder()\n        .length(length)\n        .fileCount(fileCount)\n        .directoryCount(directoryCount);\n    builder \u003d buildQuotaUsage(builder, m, ContentSummary.Builder.class);\n    return builder.build();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/web/JsonUtilClient.java",
      "extendedDetails": {}
    },
    "d55a84951abe87a31c17bd4b84cd309ed202e540": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12582. Replace HdfsFileStatus constructor with a builder pattern. Contributed by Bharat Viswanadham\n",
      "commitDate": "27/10/17 3:36 PM",
      "commitName": "d55a84951abe87a31c17bd4b84cd309ed202e540",
      "commitAuthor": "Chris Douglas",
      "commitDateOld": "26/09/17 1:15 PM",
      "commitNameOld": "0da29cbeea40cb7839abcd72566b997962829329",
      "commitAuthorOld": "Daryn Sharp",
      "daysBetweenCommits": 31.1,
      "commitsBetweenForRepo": 222,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,30 @@\n   static ContentSummary toContentSummary(final Map\u003c?, ?\u003e json) {\n     if (json \u003d\u003d null) {\n       return null;\n     }\n \n     final Map\u003c?, ?\u003e m \u003d (Map\u003c?, ?\u003e)json.get(\n         ContentSummary.class.getSimpleName());\n     final long length \u003d ((Number) m.get(\"length\")).longValue();\n     final long fileCount \u003d ((Number) m.get(\"fileCount\")).longValue();\n     final long directoryCount \u003d ((Number) m.get(\"directoryCount\")).longValue();\n     final long quota \u003d ((Number) m.get(\"quota\")).longValue();\n     final long spaceConsumed \u003d ((Number) m.get(\"spaceConsumed\")).longValue();\n     final long spaceQuota \u003d ((Number) m.get(\"spaceQuota\")).longValue();\n     final Map\u003c?, ?\u003e typem \u003d (Map\u003c?, ?\u003e) m.get(\"typeQuota\");\n \n-    Builder contentSummaryBuilder \u003d new ContentSummary.Builder().length(length)\n-        .fileCount(fileCount).directoryCount(directoryCount).quota(quota)\n-        .spaceConsumed(spaceConsumed).spaceQuota(spaceQuota);\n+    ContentSummary.Builder contentSummaryBuilder \u003dnew ContentSummary.Builder()\n+        .length(length).fileCount(fileCount).directoryCount(directoryCount)\n+        .quota(quota).spaceConsumed(spaceConsumed).spaceQuota(spaceQuota);\n     if (typem !\u003d null) {\n       for (StorageType t : StorageType.getTypesSupportingQuota()) {\n         Map\u003c?, ?\u003e type \u003d (Map\u003c?, ?\u003e) typem.get(t.toString());\n         if (type !\u003d null) {\n           contentSummaryBuilder \u003d contentSummaryBuilder.typeQuota(t,\n               ((Number) type.get(\"quota\")).longValue()).typeConsumed(t,\n               ((Number) type.get(\"consumed\")).longValue());\n         }\n       }\n     }\n     return contentSummaryBuilder.build();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static ContentSummary toContentSummary(final Map\u003c?, ?\u003e json) {\n    if (json \u003d\u003d null) {\n      return null;\n    }\n\n    final Map\u003c?, ?\u003e m \u003d (Map\u003c?, ?\u003e)json.get(\n        ContentSummary.class.getSimpleName());\n    final long length \u003d ((Number) m.get(\"length\")).longValue();\n    final long fileCount \u003d ((Number) m.get(\"fileCount\")).longValue();\n    final long directoryCount \u003d ((Number) m.get(\"directoryCount\")).longValue();\n    final long quota \u003d ((Number) m.get(\"quota\")).longValue();\n    final long spaceConsumed \u003d ((Number) m.get(\"spaceConsumed\")).longValue();\n    final long spaceQuota \u003d ((Number) m.get(\"spaceQuota\")).longValue();\n    final Map\u003c?, ?\u003e typem \u003d (Map\u003c?, ?\u003e) m.get(\"typeQuota\");\n\n    ContentSummary.Builder contentSummaryBuilder \u003dnew ContentSummary.Builder()\n        .length(length).fileCount(fileCount).directoryCount(directoryCount)\n        .quota(quota).spaceConsumed(spaceConsumed).spaceQuota(spaceQuota);\n    if (typem !\u003d null) {\n      for (StorageType t : StorageType.getTypesSupportingQuota()) {\n        Map\u003c?, ?\u003e type \u003d (Map\u003c?, ?\u003e) typem.get(t.toString());\n        if (type !\u003d null) {\n          contentSummaryBuilder \u003d contentSummaryBuilder.typeQuota(t,\n              ((Number) type.get(\"quota\")).longValue()).typeConsumed(t,\n              ((Number) type.get(\"consumed\")).longValue());\n        }\n      }\n    }\n    return contentSummaryBuilder.build();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/web/JsonUtilClient.java",
      "extendedDetails": {}
    },
    "41d3f8899d8b96568f56331eaf598bb356ecdae0": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9234. WebHdfs: getContentSummary() should give quota for storage types. Contributed by Surendra Singh Lilhore.\n",
      "commitDate": "09/11/15 9:57 AM",
      "commitName": "41d3f8899d8b96568f56331eaf598bb356ecdae0",
      "commitAuthor": "Xiaoyu Yao",
      "commitDateOld": "03/10/15 11:38 AM",
      "commitNameOld": "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 36.97,
      "commitsBetweenForRepo": 309,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,30 @@\n   static ContentSummary toContentSummary(final Map\u003c?, ?\u003e json) {\n     if (json \u003d\u003d null) {\n       return null;\n     }\n \n     final Map\u003c?, ?\u003e m \u003d (Map\u003c?, ?\u003e)json.get(\n         ContentSummary.class.getSimpleName());\n     final long length \u003d ((Number) m.get(\"length\")).longValue();\n     final long fileCount \u003d ((Number) m.get(\"fileCount\")).longValue();\n     final long directoryCount \u003d ((Number) m.get(\"directoryCount\")).longValue();\n     final long quota \u003d ((Number) m.get(\"quota\")).longValue();\n     final long spaceConsumed \u003d ((Number) m.get(\"spaceConsumed\")).longValue();\n     final long spaceQuota \u003d ((Number) m.get(\"spaceQuota\")).longValue();\n+    final Map\u003c?, ?\u003e typem \u003d (Map\u003c?, ?\u003e) m.get(\"typeQuota\");\n \n-    return new ContentSummary.Builder()\n-        .length(length)\n-        .fileCount(fileCount)\n-        .directoryCount(directoryCount)\n-        .quota(quota)\n-        .spaceConsumed(spaceConsumed)\n-        .spaceQuota(spaceQuota).build();\n+    Builder contentSummaryBuilder \u003d new ContentSummary.Builder().length(length)\n+        .fileCount(fileCount).directoryCount(directoryCount).quota(quota)\n+        .spaceConsumed(spaceConsumed).spaceQuota(spaceQuota);\n+    if (typem !\u003d null) {\n+      for (StorageType t : StorageType.getTypesSupportingQuota()) {\n+        Map\u003c?, ?\u003e type \u003d (Map\u003c?, ?\u003e) typem.get(t.toString());\n+        if (type !\u003d null) {\n+          contentSummaryBuilder \u003d contentSummaryBuilder.typeQuota(t,\n+              ((Number) type.get(\"quota\")).longValue()).typeConsumed(t,\n+              ((Number) type.get(\"consumed\")).longValue());\n+        }\n+      }\n+    }\n+    return contentSummaryBuilder.build();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static ContentSummary toContentSummary(final Map\u003c?, ?\u003e json) {\n    if (json \u003d\u003d null) {\n      return null;\n    }\n\n    final Map\u003c?, ?\u003e m \u003d (Map\u003c?, ?\u003e)json.get(\n        ContentSummary.class.getSimpleName());\n    final long length \u003d ((Number) m.get(\"length\")).longValue();\n    final long fileCount \u003d ((Number) m.get(\"fileCount\")).longValue();\n    final long directoryCount \u003d ((Number) m.get(\"directoryCount\")).longValue();\n    final long quota \u003d ((Number) m.get(\"quota\")).longValue();\n    final long spaceConsumed \u003d ((Number) m.get(\"spaceConsumed\")).longValue();\n    final long spaceQuota \u003d ((Number) m.get(\"spaceQuota\")).longValue();\n    final Map\u003c?, ?\u003e typem \u003d (Map\u003c?, ?\u003e) m.get(\"typeQuota\");\n\n    Builder contentSummaryBuilder \u003d new ContentSummary.Builder().length(length)\n        .fileCount(fileCount).directoryCount(directoryCount).quota(quota)\n        .spaceConsumed(spaceConsumed).spaceQuota(spaceQuota);\n    if (typem !\u003d null) {\n      for (StorageType t : StorageType.getTypesSupportingQuota()) {\n        Map\u003c?, ?\u003e type \u003d (Map\u003c?, ?\u003e) typem.get(t.toString());\n        if (type !\u003d null) {\n          contentSummaryBuilder \u003d contentSummaryBuilder.typeQuota(t,\n              ((Number) type.get(\"quota\")).longValue()).typeConsumed(t,\n              ((Number) type.get(\"consumed\")).longValue());\n        }\n      }\n    }\n    return contentSummaryBuilder.build();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/web/JsonUtilClient.java",
      "extendedDetails": {}
    },
    "bcf89ddc7d52e04725caf104f5958e33d9f51b35": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-8052. Move WebHdfsFileSystem into hadoop-hdfs-client. Contributed by Haohui Mai.\n",
      "commitDate": "23/04/15 5:33 PM",
      "commitName": "bcf89ddc7d52e04725caf104f5958e33d9f51b35",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "23/04/15 4:40 PM",
      "commitNameOld": "0b3f8957a87ada1a275c9904b211fdbdcefafb02",
      "commitAuthorOld": "Xuan",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  static ContentSummary toContentSummary(final Map\u003c?, ?\u003e json) {\n    if (json \u003d\u003d null) {\n      return null;\n    }\n\n    final Map\u003c?, ?\u003e m \u003d (Map\u003c?, ?\u003e)json.get(ContentSummary.class.getSimpleName());\n    final long length \u003d ((Number) m.get(\"length\")).longValue();\n    final long fileCount \u003d ((Number) m.get(\"fileCount\")).longValue();\n    final long directoryCount \u003d ((Number) m.get(\"directoryCount\")).longValue();\n    final long quota \u003d ((Number) m.get(\"quota\")).longValue();\n    final long spaceConsumed \u003d ((Number) m.get(\"spaceConsumed\")).longValue();\n    final long spaceQuota \u003d ((Number) m.get(\"spaceQuota\")).longValue();\n\n    return new ContentSummary.Builder().length(length).fileCount(fileCount).\n        directoryCount(directoryCount).quota(quota).spaceConsumed(spaceConsumed).\n        spaceQuota(spaceQuota).build();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/web/JsonUtilClient.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/JsonUtilClient.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/web/JsonUtilClient.java"
      }
    },
    "ab04ff9efe632b4eca6faca7407ac35e00e6a379": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange)",
      "commitMessage": "HDFS-8080. Separate JSON related routines used by WebHdfsFileSystem to a package local class. Contributed by Haohui Mai.\n",
      "commitDate": "07/04/15 9:30 PM",
      "commitName": "ab04ff9efe632b4eca6faca7407ac35e00e6a379",
      "commitAuthor": "Haohui Mai",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-8080. Separate JSON related routines used by WebHdfsFileSystem to a package local class. Contributed by Haohui Mai.\n",
          "commitDate": "07/04/15 9:30 PM",
          "commitName": "ab04ff9efe632b4eca6faca7407ac35e00e6a379",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "07/04/15 9:26 PM",
          "commitNameOld": "d505c8acd30d6f40d0632fe9c93c886a4499a9fc",
          "commitAuthorOld": "Vinayakumar B",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n-  public static ContentSummary toContentSummary(final Map\u003c?, ?\u003e json) {\n+  static ContentSummary toContentSummary(final Map\u003c?, ?\u003e json) {\n     if (json \u003d\u003d null) {\n       return null;\n     }\n \n     final Map\u003c?, ?\u003e m \u003d (Map\u003c?, ?\u003e)json.get(ContentSummary.class.getSimpleName());\n     final long length \u003d ((Number) m.get(\"length\")).longValue();\n     final long fileCount \u003d ((Number) m.get(\"fileCount\")).longValue();\n     final long directoryCount \u003d ((Number) m.get(\"directoryCount\")).longValue();\n     final long quota \u003d ((Number) m.get(\"quota\")).longValue();\n     final long spaceConsumed \u003d ((Number) m.get(\"spaceConsumed\")).longValue();\n     final long spaceQuota \u003d ((Number) m.get(\"spaceQuota\")).longValue();\n \n     return new ContentSummary.Builder().length(length).fileCount(fileCount).\n         directoryCount(directoryCount).quota(quota).spaceConsumed(spaceConsumed).\n         spaceQuota(spaceQuota).build();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static ContentSummary toContentSummary(final Map\u003c?, ?\u003e json) {\n    if (json \u003d\u003d null) {\n      return null;\n    }\n\n    final Map\u003c?, ?\u003e m \u003d (Map\u003c?, ?\u003e)json.get(ContentSummary.class.getSimpleName());\n    final long length \u003d ((Number) m.get(\"length\")).longValue();\n    final long fileCount \u003d ((Number) m.get(\"fileCount\")).longValue();\n    final long directoryCount \u003d ((Number) m.get(\"directoryCount\")).longValue();\n    final long quota \u003d ((Number) m.get(\"quota\")).longValue();\n    final long spaceConsumed \u003d ((Number) m.get(\"spaceConsumed\")).longValue();\n    final long spaceQuota \u003d ((Number) m.get(\"spaceQuota\")).longValue();\n\n    return new ContentSummary.Builder().length(length).fileCount(fileCount).\n        directoryCount(directoryCount).quota(quota).spaceConsumed(spaceConsumed).\n        spaceQuota(spaceQuota).build();\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/JsonUtilClient.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/JsonUtil.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/JsonUtilClient.java",
            "oldMethodName": "toContentSummary",
            "newMethodName": "toContentSummary"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-8080. Separate JSON related routines used by WebHdfsFileSystem to a package local class. Contributed by Haohui Mai.\n",
          "commitDate": "07/04/15 9:30 PM",
          "commitName": "ab04ff9efe632b4eca6faca7407ac35e00e6a379",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "07/04/15 9:26 PM",
          "commitNameOld": "d505c8acd30d6f40d0632fe9c93c886a4499a9fc",
          "commitAuthorOld": "Vinayakumar B",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n-  public static ContentSummary toContentSummary(final Map\u003c?, ?\u003e json) {\n+  static ContentSummary toContentSummary(final Map\u003c?, ?\u003e json) {\n     if (json \u003d\u003d null) {\n       return null;\n     }\n \n     final Map\u003c?, ?\u003e m \u003d (Map\u003c?, ?\u003e)json.get(ContentSummary.class.getSimpleName());\n     final long length \u003d ((Number) m.get(\"length\")).longValue();\n     final long fileCount \u003d ((Number) m.get(\"fileCount\")).longValue();\n     final long directoryCount \u003d ((Number) m.get(\"directoryCount\")).longValue();\n     final long quota \u003d ((Number) m.get(\"quota\")).longValue();\n     final long spaceConsumed \u003d ((Number) m.get(\"spaceConsumed\")).longValue();\n     final long spaceQuota \u003d ((Number) m.get(\"spaceQuota\")).longValue();\n \n     return new ContentSummary.Builder().length(length).fileCount(fileCount).\n         directoryCount(directoryCount).quota(quota).spaceConsumed(spaceConsumed).\n         spaceQuota(spaceQuota).build();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static ContentSummary toContentSummary(final Map\u003c?, ?\u003e json) {\n    if (json \u003d\u003d null) {\n      return null;\n    }\n\n    final Map\u003c?, ?\u003e m \u003d (Map\u003c?, ?\u003e)json.get(ContentSummary.class.getSimpleName());\n    final long length \u003d ((Number) m.get(\"length\")).longValue();\n    final long fileCount \u003d ((Number) m.get(\"fileCount\")).longValue();\n    final long directoryCount \u003d ((Number) m.get(\"directoryCount\")).longValue();\n    final long quota \u003d ((Number) m.get(\"quota\")).longValue();\n    final long spaceConsumed \u003d ((Number) m.get(\"spaceConsumed\")).longValue();\n    final long spaceQuota \u003d ((Number) m.get(\"spaceQuota\")).longValue();\n\n    return new ContentSummary.Builder().length(length).fileCount(fileCount).\n        directoryCount(directoryCount).quota(quota).spaceConsumed(spaceConsumed).\n        spaceQuota(spaceQuota).build();\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/JsonUtilClient.java",
          "extendedDetails": {
            "oldValue": "[public, static]",
            "newValue": "[static]"
          }
        }
      ]
    },
    "3d0708bdb0a75af3d87bbac9f6c4ffbcabab98ca": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7824. GetContentSummary API and its namenode implementation for Storage Type Quota/Usage. (Contributed by Xiaoyu Yao)\n",
      "commitDate": "26/03/15 10:24 AM",
      "commitName": "3d0708bdb0a75af3d87bbac9f6c4ffbcabab98ca",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "20/03/15 12:02 PM",
      "commitNameOld": "75ead273bea8a7dad61c4f99c3a16cab2697c498",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 5.93,
      "commitsBetweenForRepo": 57,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,17 @@\n   public static ContentSummary toContentSummary(final Map\u003c?, ?\u003e json) {\n     if (json \u003d\u003d null) {\n       return null;\n     }\n \n     final Map\u003c?, ?\u003e m \u003d (Map\u003c?, ?\u003e)json.get(ContentSummary.class.getSimpleName());\n     final long length \u003d ((Number) m.get(\"length\")).longValue();\n     final long fileCount \u003d ((Number) m.get(\"fileCount\")).longValue();\n     final long directoryCount \u003d ((Number) m.get(\"directoryCount\")).longValue();\n     final long quota \u003d ((Number) m.get(\"quota\")).longValue();\n     final long spaceConsumed \u003d ((Number) m.get(\"spaceConsumed\")).longValue();\n     final long spaceQuota \u003d ((Number) m.get(\"spaceQuota\")).longValue();\n \n-    return new ContentSummary(length, fileCount, directoryCount,\n-        quota, spaceConsumed, spaceQuota);\n+    return new ContentSummary.Builder().length(length).fileCount(fileCount).\n+        directoryCount(directoryCount).quota(quota).spaceConsumed(spaceConsumed).\n+        spaceQuota(spaceQuota).build();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static ContentSummary toContentSummary(final Map\u003c?, ?\u003e json) {\n    if (json \u003d\u003d null) {\n      return null;\n    }\n\n    final Map\u003c?, ?\u003e m \u003d (Map\u003c?, ?\u003e)json.get(ContentSummary.class.getSimpleName());\n    final long length \u003d ((Number) m.get(\"length\")).longValue();\n    final long fileCount \u003d ((Number) m.get(\"fileCount\")).longValue();\n    final long directoryCount \u003d ((Number) m.get(\"directoryCount\")).longValue();\n    final long quota \u003d ((Number) m.get(\"quota\")).longValue();\n    final long spaceConsumed \u003d ((Number) m.get(\"spaceConsumed\")).longValue();\n    final long spaceQuota \u003d ((Number) m.get(\"spaceQuota\")).longValue();\n\n    return new ContentSummary.Builder().length(length).fileCount(fileCount).\n        directoryCount(directoryCount).quota(quota).spaceConsumed(spaceConsumed).\n        spaceQuota(spaceQuota).build();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/JsonUtil.java",
      "extendedDetails": {}
    },
    "e2262d3d18c6d5c2aa20f96920104dc07271b869": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6565. Use jackson instead jetty json in hdfs-client. Contributed by Akira AJISAKA.\n",
      "commitDate": "03/03/15 5:54 PM",
      "commitName": "e2262d3d18c6d5c2aa20f96920104dc07271b869",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "08/12/14 10:23 AM",
      "commitNameOld": "ffe942b82c1208bc7b22899da3a233944cb5ab52",
      "commitAuthorOld": "cnauroth",
      "daysBetweenCommits": 85.31,
      "commitsBetweenForRepo": 663,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   public static ContentSummary toContentSummary(final Map\u003c?, ?\u003e json) {\n     if (json \u003d\u003d null) {\n       return null;\n     }\n \n     final Map\u003c?, ?\u003e m \u003d (Map\u003c?, ?\u003e)json.get(ContentSummary.class.getSimpleName());\n-    final long length \u003d (Long)m.get(\"length\");\n-    final long fileCount \u003d (Long)m.get(\"fileCount\");\n-    final long directoryCount \u003d (Long)m.get(\"directoryCount\");\n-    final long quota \u003d (Long)m.get(\"quota\");\n-    final long spaceConsumed \u003d (Long)m.get(\"spaceConsumed\");\n-    final long spaceQuota \u003d (Long)m.get(\"spaceQuota\");\n+    final long length \u003d ((Number) m.get(\"length\")).longValue();\n+    final long fileCount \u003d ((Number) m.get(\"fileCount\")).longValue();\n+    final long directoryCount \u003d ((Number) m.get(\"directoryCount\")).longValue();\n+    final long quota \u003d ((Number) m.get(\"quota\")).longValue();\n+    final long spaceConsumed \u003d ((Number) m.get(\"spaceConsumed\")).longValue();\n+    final long spaceQuota \u003d ((Number) m.get(\"spaceQuota\")).longValue();\n \n     return new ContentSummary(length, fileCount, directoryCount,\n         quota, spaceConsumed, spaceQuota);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static ContentSummary toContentSummary(final Map\u003c?, ?\u003e json) {\n    if (json \u003d\u003d null) {\n      return null;\n    }\n\n    final Map\u003c?, ?\u003e m \u003d (Map\u003c?, ?\u003e)json.get(ContentSummary.class.getSimpleName());\n    final long length \u003d ((Number) m.get(\"length\")).longValue();\n    final long fileCount \u003d ((Number) m.get(\"fileCount\")).longValue();\n    final long directoryCount \u003d ((Number) m.get(\"directoryCount\")).longValue();\n    final long quota \u003d ((Number) m.get(\"quota\")).longValue();\n    final long spaceConsumed \u003d ((Number) m.get(\"spaceConsumed\")).longValue();\n    final long spaceQuota \u003d ((Number) m.get(\"spaceQuota\")).longValue();\n\n    return new ContentSummary(length, fileCount, directoryCount,\n        quota, spaceConsumed, spaceQuota);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/JsonUtil.java",
      "extendedDetails": {}
    },
    "1b1016beeb716bef8dad93bb2c7c4631a14b3d57": {
      "type": "Ymultichange(Yparameterchange,Yexceptionschange,Ybodychange)",
      "commitMessage": "HDFS-2395. Add a root element in the JSON responses of webhdfs.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1179169 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/10/11 4:29 AM",
      "commitName": "1b1016beeb716bef8dad93bb2c7c4631a14b3d57",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-2395. Add a root element in the JSON responses of webhdfs.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1179169 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "05/10/11 4:29 AM",
          "commitName": "1b1016beeb716bef8dad93bb2c7c4631a14b3d57",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "30/09/11 9:49 PM",
          "commitNameOld": "dc8464f943b61b795df0cc8baec171bf07355763",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 4.28,
          "commitsBetweenForRepo": 25,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,16 @@\n-  public static ContentSummary toContentSummary(final Map\u003cString, Object\u003e m\n-      ) throws IOException {\n-    if (m \u003d\u003d null) {\n+  public static ContentSummary toContentSummary(final Map\u003c?, ?\u003e json) {\n+    if (json \u003d\u003d null) {\n       return null;\n     }\n \n+    final Map\u003c?, ?\u003e m \u003d (Map\u003c?, ?\u003e)json.get(ContentSummary.class.getSimpleName());\n     final long length \u003d (Long)m.get(\"length\");\n     final long fileCount \u003d (Long)m.get(\"fileCount\");\n     final long directoryCount \u003d (Long)m.get(\"directoryCount\");\n     final long quota \u003d (Long)m.get(\"quota\");\n     final long spaceConsumed \u003d (Long)m.get(\"spaceConsumed\");\n     final long spaceQuota \u003d (Long)m.get(\"spaceQuota\");\n \n     return new ContentSummary(length, fileCount, directoryCount,\n         quota, spaceConsumed, spaceQuota);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static ContentSummary toContentSummary(final Map\u003c?, ?\u003e json) {\n    if (json \u003d\u003d null) {\n      return null;\n    }\n\n    final Map\u003c?, ?\u003e m \u003d (Map\u003c?, ?\u003e)json.get(ContentSummary.class.getSimpleName());\n    final long length \u003d (Long)m.get(\"length\");\n    final long fileCount \u003d (Long)m.get(\"fileCount\");\n    final long directoryCount \u003d (Long)m.get(\"directoryCount\");\n    final long quota \u003d (Long)m.get(\"quota\");\n    final long spaceConsumed \u003d (Long)m.get(\"spaceConsumed\");\n    final long spaceQuota \u003d (Long)m.get(\"spaceQuota\");\n\n    return new ContentSummary(length, fileCount, directoryCount,\n        quota, spaceConsumed, spaceQuota);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/JsonUtil.java",
          "extendedDetails": {
            "oldValue": "[m-Map\u003cString,Object\u003e(modifiers-final)]",
            "newValue": "[json-Map\u003c?,?\u003e(modifiers-final)]"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "HDFS-2395. Add a root element in the JSON responses of webhdfs.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1179169 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "05/10/11 4:29 AM",
          "commitName": "1b1016beeb716bef8dad93bb2c7c4631a14b3d57",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "30/09/11 9:49 PM",
          "commitNameOld": "dc8464f943b61b795df0cc8baec171bf07355763",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 4.28,
          "commitsBetweenForRepo": 25,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,16 @@\n-  public static ContentSummary toContentSummary(final Map\u003cString, Object\u003e m\n-      ) throws IOException {\n-    if (m \u003d\u003d null) {\n+  public static ContentSummary toContentSummary(final Map\u003c?, ?\u003e json) {\n+    if (json \u003d\u003d null) {\n       return null;\n     }\n \n+    final Map\u003c?, ?\u003e m \u003d (Map\u003c?, ?\u003e)json.get(ContentSummary.class.getSimpleName());\n     final long length \u003d (Long)m.get(\"length\");\n     final long fileCount \u003d (Long)m.get(\"fileCount\");\n     final long directoryCount \u003d (Long)m.get(\"directoryCount\");\n     final long quota \u003d (Long)m.get(\"quota\");\n     final long spaceConsumed \u003d (Long)m.get(\"spaceConsumed\");\n     final long spaceQuota \u003d (Long)m.get(\"spaceQuota\");\n \n     return new ContentSummary(length, fileCount, directoryCount,\n         quota, spaceConsumed, spaceQuota);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static ContentSummary toContentSummary(final Map\u003c?, ?\u003e json) {\n    if (json \u003d\u003d null) {\n      return null;\n    }\n\n    final Map\u003c?, ?\u003e m \u003d (Map\u003c?, ?\u003e)json.get(ContentSummary.class.getSimpleName());\n    final long length \u003d (Long)m.get(\"length\");\n    final long fileCount \u003d (Long)m.get(\"fileCount\");\n    final long directoryCount \u003d (Long)m.get(\"directoryCount\");\n    final long quota \u003d (Long)m.get(\"quota\");\n    final long spaceConsumed \u003d (Long)m.get(\"spaceConsumed\");\n    final long spaceQuota \u003d (Long)m.get(\"spaceQuota\");\n\n    return new ContentSummary(length, fileCount, directoryCount,\n        quota, spaceConsumed, spaceQuota);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/JsonUtil.java",
          "extendedDetails": {
            "oldValue": "[IOException]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-2395. Add a root element in the JSON responses of webhdfs.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1179169 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "05/10/11 4:29 AM",
          "commitName": "1b1016beeb716bef8dad93bb2c7c4631a14b3d57",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "30/09/11 9:49 PM",
          "commitNameOld": "dc8464f943b61b795df0cc8baec171bf07355763",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 4.28,
          "commitsBetweenForRepo": 25,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,16 @@\n-  public static ContentSummary toContentSummary(final Map\u003cString, Object\u003e m\n-      ) throws IOException {\n-    if (m \u003d\u003d null) {\n+  public static ContentSummary toContentSummary(final Map\u003c?, ?\u003e json) {\n+    if (json \u003d\u003d null) {\n       return null;\n     }\n \n+    final Map\u003c?, ?\u003e m \u003d (Map\u003c?, ?\u003e)json.get(ContentSummary.class.getSimpleName());\n     final long length \u003d (Long)m.get(\"length\");\n     final long fileCount \u003d (Long)m.get(\"fileCount\");\n     final long directoryCount \u003d (Long)m.get(\"directoryCount\");\n     final long quota \u003d (Long)m.get(\"quota\");\n     final long spaceConsumed \u003d (Long)m.get(\"spaceConsumed\");\n     final long spaceQuota \u003d (Long)m.get(\"spaceQuota\");\n \n     return new ContentSummary(length, fileCount, directoryCount,\n         quota, spaceConsumed, spaceQuota);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static ContentSummary toContentSummary(final Map\u003c?, ?\u003e json) {\n    if (json \u003d\u003d null) {\n      return null;\n    }\n\n    final Map\u003c?, ?\u003e m \u003d (Map\u003c?, ?\u003e)json.get(ContentSummary.class.getSimpleName());\n    final long length \u003d (Long)m.get(\"length\");\n    final long fileCount \u003d (Long)m.get(\"fileCount\");\n    final long directoryCount \u003d (Long)m.get(\"directoryCount\");\n    final long quota \u003d (Long)m.get(\"quota\");\n    final long spaceConsumed \u003d (Long)m.get(\"spaceConsumed\");\n    final long spaceQuota \u003d (Long)m.get(\"spaceQuota\");\n\n    return new ContentSummary(length, fileCount, directoryCount,\n        quota, spaceConsumed, spaceQuota);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/JsonUtil.java",
          "extendedDetails": {}
        }
      ]
    },
    "dc8464f943b61b795df0cc8baec171bf07355763": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-2348. Support getContentSummary and getFileChecksum in webhdfs.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1177905 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/09/11 9:49 PM",
      "commitName": "dc8464f943b61b795df0cc8baec171bf07355763",
      "commitAuthor": "Tsz-wo Sze",
      "diff": "@@ -0,0 +1,16 @@\n+  public static ContentSummary toContentSummary(final Map\u003cString, Object\u003e m\n+      ) throws IOException {\n+    if (m \u003d\u003d null) {\n+      return null;\n+    }\n+\n+    final long length \u003d (Long)m.get(\"length\");\n+    final long fileCount \u003d (Long)m.get(\"fileCount\");\n+    final long directoryCount \u003d (Long)m.get(\"directoryCount\");\n+    final long quota \u003d (Long)m.get(\"quota\");\n+    final long spaceConsumed \u003d (Long)m.get(\"spaceConsumed\");\n+    final long spaceQuota \u003d (Long)m.get(\"spaceQuota\");\n+\n+    return new ContentSummary(length, fileCount, directoryCount,\n+        quota, spaceConsumed, spaceQuota);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static ContentSummary toContentSummary(final Map\u003cString, Object\u003e m\n      ) throws IOException {\n    if (m \u003d\u003d null) {\n      return null;\n    }\n\n    final long length \u003d (Long)m.get(\"length\");\n    final long fileCount \u003d (Long)m.get(\"fileCount\");\n    final long directoryCount \u003d (Long)m.get(\"directoryCount\");\n    final long quota \u003d (Long)m.get(\"quota\");\n    final long spaceConsumed \u003d (Long)m.get(\"spaceConsumed\");\n    final long spaceQuota \u003d (Long)m.get(\"spaceQuota\");\n\n    return new ContentSummary(length, fileCount, directoryCount,\n        quota, spaceConsumed, spaceQuota);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/JsonUtil.java"
    }
  }
}