{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SubClusterInfo.java",
  "functionName": "hashCode",
  "functionId": "hashCode",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/store/records/SubClusterInfo.java",
  "functionStartLine": 303,
  "functionEndLine": 324,
  "numCommitsSeen": 2,
  "timeTaken": 755,
  "changeHistory": [
    "e1da8f0667589dd660e6fcd776cc87f1b8ef6db9"
  ],
  "changeHistoryShort": {
    "e1da8f0667589dd660e6fcd776cc87f1b8ef6db9": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e1da8f0667589dd660e6fcd776cc87f1b8ef6db9": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5602. Utils for Federation State and Policy Store. (Giovanni Matteo Fumarola via Subru).\n\n(cherry picked from commit 326a2e6bde1cf266ecc7d3b513cdaac6abcebbe4)\n",
      "commitDate": "01/08/17 5:28 PM",
      "commitName": "e1da8f0667589dd660e6fcd776cc87f1b8ef6db9",
      "commitAuthor": "Subru Krishnan",
      "diff": "@@ -0,0 +1,22 @@\n+  public int hashCode() {\n+    final int prime \u003d 31;\n+    int result \u003d 1;\n+    result \u003d prime * result\n+        + ((getSubClusterId() \u003d\u003d null) ? 0 : getSubClusterId().hashCode());\n+    result \u003d prime * result + ((getAMRMServiceAddress() \u003d\u003d null) ? 0\n+        : getAMRMServiceAddress().hashCode());\n+    result \u003d prime * result + ((getClientRMServiceAddress() \u003d\u003d null) ? 0\n+        : getClientRMServiceAddress().hashCode());\n+    result \u003d prime * result + ((getRMAdminServiceAddress() \u003d\u003d null) ? 0\n+        : getRMAdminServiceAddress().hashCode());\n+    result \u003d prime * result + ((getRMWebServiceAddress() \u003d\u003d null) ? 0\n+        : getRMWebServiceAddress().hashCode());\n+    result \u003d\n+        prime * result + ((getState() \u003d\u003d null) ? 0 : getState().hashCode());\n+    result \u003d prime * result\n+        + (int) (getLastStartTime() ^ (getLastStartTime() \u003e\u003e\u003e 32));\n+    return result;\n+    // Capability and HeartBeat fields are not included as they are temporal\n+    // (i.e. timestamps), so they change during the lifetime of the same\n+    // sub-cluster\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public int hashCode() {\n    final int prime \u003d 31;\n    int result \u003d 1;\n    result \u003d prime * result\n        + ((getSubClusterId() \u003d\u003d null) ? 0 : getSubClusterId().hashCode());\n    result \u003d prime * result + ((getAMRMServiceAddress() \u003d\u003d null) ? 0\n        : getAMRMServiceAddress().hashCode());\n    result \u003d prime * result + ((getClientRMServiceAddress() \u003d\u003d null) ? 0\n        : getClientRMServiceAddress().hashCode());\n    result \u003d prime * result + ((getRMAdminServiceAddress() \u003d\u003d null) ? 0\n        : getRMAdminServiceAddress().hashCode());\n    result \u003d prime * result + ((getRMWebServiceAddress() \u003d\u003d null) ? 0\n        : getRMWebServiceAddress().hashCode());\n    result \u003d\n        prime * result + ((getState() \u003d\u003d null) ? 0 : getState().hashCode());\n    result \u003d prime * result\n        + (int) (getLastStartTime() ^ (getLastStartTime() \u003e\u003e\u003e 32));\n    return result;\n    // Capability and HeartBeat fields are not included as they are temporal\n    // (i.e. timestamps), so they change during the lifetime of the same\n    // sub-cluster\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/store/records/SubClusterInfo.java"
    }
  }
}