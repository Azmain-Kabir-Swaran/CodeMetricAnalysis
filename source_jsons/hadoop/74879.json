{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DelegationTokenAuthenticationFilter.java",
  "functionName": "init",
  "functionId": "init___filterConfig-FilterConfig",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/web/DelegationTokenAuthenticationFilter.java",
  "functionStartLine": 179,
  "functionEndLine": 203,
  "numCommitsSeen": 15,
  "timeTaken": 1408,
  "changeHistory": [
    "8a261e68e4177b47be01ceae7310ea56aeb7ca38",
    "db890eef3208cc557476fa510f7a253ba22bc68a",
    "6d7a6766bd55b355e44dbdcc4dfa22b050b1a509",
    "be9c67930b57c516723d566625f9036a88a84055"
  ],
  "changeHistoryShort": {
    "8a261e68e4177b47be01ceae7310ea56aeb7ca38": "Ybodychange",
    "db890eef3208cc557476fa510f7a253ba22bc68a": "Ybodychange",
    "6d7a6766bd55b355e44dbdcc4dfa22b050b1a509": "Ybodychange",
    "be9c67930b57c516723d566625f9036a88a84055": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8a261e68e4177b47be01ceae7310ea56aeb7ca38": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11272. Allow ZKSignerSecretProvider and ZKDelegationTokenSecretManager to use the same curator client. Contributed by Arun Suresh.\n",
      "commitDate": "05/11/14 5:47 PM",
      "commitName": "8a261e68e4177b47be01ceae7310ea56aeb7ca38",
      "commitAuthor": "Aaron T. Myers",
      "commitDateOld": "20/09/14 8:21 AM",
      "commitNameOld": "db890eef3208cc557476fa510f7a253ba22bc68a",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 46.43,
      "commitsBetweenForRepo": 458,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,25 @@\n   public void init(FilterConfig filterConfig) throws ServletException {\n-    // A single CuratorFramework should be used for a ZK cluster.\n-    // If the ZKSignerSecretProvider has already created it, it has to\n-    // be set here... to be used by the ZKDelegationTokenSecretManager\n-    ZKDelegationTokenSecretManager.setCurator((CuratorFramework)\n-        filterConfig.getServletContext().getAttribute(ZKSignerSecretProvider.\n-            ZOOKEEPER_SIGNER_SECRET_PROVIDER_CURATOR_CLIENT_ATTRIBUTE));\n     super.init(filterConfig);\n-    ZKDelegationTokenSecretManager.setCurator(null);\n     AuthenticationHandler handler \u003d getAuthenticationHandler();\n     AbstractDelegationTokenSecretManager dtSecretManager \u003d\n         (AbstractDelegationTokenSecretManager) filterConfig.getServletContext().\n             getAttribute(DELEGATION_TOKEN_SECRET_MANAGER_ATTR);\n     if (dtSecretManager !\u003d null \u0026\u0026 handler\n         instanceof DelegationTokenAuthenticationHandler) {\n       DelegationTokenAuthenticationHandler dtHandler \u003d\n           (DelegationTokenAuthenticationHandler) getAuthenticationHandler();\n       dtHandler.setExternalDelegationTokenSecretManager(dtSecretManager);\n     }\n     if (handler instanceof PseudoAuthenticationHandler ||\n         handler instanceof PseudoDelegationTokenAuthenticationHandler) {\n       setHandlerAuthMethod(SaslRpcServer.AuthMethod.SIMPLE);\n     }\n     if (handler instanceof KerberosAuthenticationHandler ||\n         handler instanceof KerberosDelegationTokenAuthenticationHandler) {\n       setHandlerAuthMethod(SaslRpcServer.AuthMethod.KERBEROS);\n     }\n \n     // proxyuser configuration\n     Configuration conf \u003d getProxyuserConfiguration(filterConfig);\n     ProxyUsers.refreshSuperUserGroupsConfiguration(conf, PROXYUSER_PREFIX);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void init(FilterConfig filterConfig) throws ServletException {\n    super.init(filterConfig);\n    AuthenticationHandler handler \u003d getAuthenticationHandler();\n    AbstractDelegationTokenSecretManager dtSecretManager \u003d\n        (AbstractDelegationTokenSecretManager) filterConfig.getServletContext().\n            getAttribute(DELEGATION_TOKEN_SECRET_MANAGER_ATTR);\n    if (dtSecretManager !\u003d null \u0026\u0026 handler\n        instanceof DelegationTokenAuthenticationHandler) {\n      DelegationTokenAuthenticationHandler dtHandler \u003d\n          (DelegationTokenAuthenticationHandler) getAuthenticationHandler();\n      dtHandler.setExternalDelegationTokenSecretManager(dtSecretManager);\n    }\n    if (handler instanceof PseudoAuthenticationHandler ||\n        handler instanceof PseudoDelegationTokenAuthenticationHandler) {\n      setHandlerAuthMethod(SaslRpcServer.AuthMethod.SIMPLE);\n    }\n    if (handler instanceof KerberosAuthenticationHandler ||\n        handler instanceof KerberosDelegationTokenAuthenticationHandler) {\n      setHandlerAuthMethod(SaslRpcServer.AuthMethod.KERBEROS);\n    }\n\n    // proxyuser configuration\n    Configuration conf \u003d getProxyuserConfiguration(filterConfig);\n    ProxyUsers.refreshSuperUserGroupsConfiguration(conf, PROXYUSER_PREFIX);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/web/DelegationTokenAuthenticationFilter.java",
      "extendedDetails": {}
    },
    "db890eef3208cc557476fa510f7a253ba22bc68a": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11017. KMS delegation token secret manager should be able to use zookeeper as store. (asuresh via tucu)\n",
      "commitDate": "20/09/14 8:21 AM",
      "commitName": "db890eef3208cc557476fa510f7a253ba22bc68a",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "11/09/14 1:53 PM",
      "commitNameOld": "c656d7d6e53436bf082f76e5988e39d8e18ed64f",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 8.77,
      "commitsBetweenForRepo": 101,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,32 @@\n   public void init(FilterConfig filterConfig) throws ServletException {\n+    // A single CuratorFramework should be used for a ZK cluster.\n+    // If the ZKSignerSecretProvider has already created it, it has to\n+    // be set here... to be used by the ZKDelegationTokenSecretManager\n+    ZKDelegationTokenSecretManager.setCurator((CuratorFramework)\n+        filterConfig.getServletContext().getAttribute(ZKSignerSecretProvider.\n+            ZOOKEEPER_SIGNER_SECRET_PROVIDER_CURATOR_CLIENT_ATTRIBUTE));\n     super.init(filterConfig);\n+    ZKDelegationTokenSecretManager.setCurator(null);\n     AuthenticationHandler handler \u003d getAuthenticationHandler();\n     AbstractDelegationTokenSecretManager dtSecretManager \u003d\n         (AbstractDelegationTokenSecretManager) filterConfig.getServletContext().\n             getAttribute(DELEGATION_TOKEN_SECRET_MANAGER_ATTR);\n     if (dtSecretManager !\u003d null \u0026\u0026 handler\n         instanceof DelegationTokenAuthenticationHandler) {\n       DelegationTokenAuthenticationHandler dtHandler \u003d\n           (DelegationTokenAuthenticationHandler) getAuthenticationHandler();\n       dtHandler.setExternalDelegationTokenSecretManager(dtSecretManager);\n     }\n     if (handler instanceof PseudoAuthenticationHandler ||\n         handler instanceof PseudoDelegationTokenAuthenticationHandler) {\n       setHandlerAuthMethod(SaslRpcServer.AuthMethod.SIMPLE);\n     }\n     if (handler instanceof KerberosAuthenticationHandler ||\n         handler instanceof KerberosDelegationTokenAuthenticationHandler) {\n       setHandlerAuthMethod(SaslRpcServer.AuthMethod.KERBEROS);\n     }\n \n     // proxyuser configuration\n     Configuration conf \u003d getProxyuserConfiguration(filterConfig);\n     ProxyUsers.refreshSuperUserGroupsConfiguration(conf, PROXYUSER_PREFIX);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void init(FilterConfig filterConfig) throws ServletException {\n    // A single CuratorFramework should be used for a ZK cluster.\n    // If the ZKSignerSecretProvider has already created it, it has to\n    // be set here... to be used by the ZKDelegationTokenSecretManager\n    ZKDelegationTokenSecretManager.setCurator((CuratorFramework)\n        filterConfig.getServletContext().getAttribute(ZKSignerSecretProvider.\n            ZOOKEEPER_SIGNER_SECRET_PROVIDER_CURATOR_CLIENT_ATTRIBUTE));\n    super.init(filterConfig);\n    ZKDelegationTokenSecretManager.setCurator(null);\n    AuthenticationHandler handler \u003d getAuthenticationHandler();\n    AbstractDelegationTokenSecretManager dtSecretManager \u003d\n        (AbstractDelegationTokenSecretManager) filterConfig.getServletContext().\n            getAttribute(DELEGATION_TOKEN_SECRET_MANAGER_ATTR);\n    if (dtSecretManager !\u003d null \u0026\u0026 handler\n        instanceof DelegationTokenAuthenticationHandler) {\n      DelegationTokenAuthenticationHandler dtHandler \u003d\n          (DelegationTokenAuthenticationHandler) getAuthenticationHandler();\n      dtHandler.setExternalDelegationTokenSecretManager(dtSecretManager);\n    }\n    if (handler instanceof PseudoAuthenticationHandler ||\n        handler instanceof PseudoDelegationTokenAuthenticationHandler) {\n      setHandlerAuthMethod(SaslRpcServer.AuthMethod.SIMPLE);\n    }\n    if (handler instanceof KerberosAuthenticationHandler ||\n        handler instanceof KerberosDelegationTokenAuthenticationHandler) {\n      setHandlerAuthMethod(SaslRpcServer.AuthMethod.KERBEROS);\n    }\n\n    // proxyuser configuration\n    Configuration conf \u003d getProxyuserConfiguration(filterConfig);\n    ProxyUsers.refreshSuperUserGroupsConfiguration(conf, PROXYUSER_PREFIX);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/web/DelegationTokenAuthenticationFilter.java",
      "extendedDetails": {}
    },
    "6d7a6766bd55b355e44dbdcc4dfa22b050b1a509": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10835. Implement HTTP proxyuser support in HTTP authentication client/server libraries. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1617384 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/08/14 5:10 PM",
      "commitName": "6d7a6766bd55b355e44dbdcc4dfa22b050b1a509",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "07/08/14 9:58 PM",
      "commitNameOld": "be9c67930b57c516723d566625f9036a88a84055",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 3.8,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,25 @@\n   public void init(FilterConfig filterConfig) throws ServletException {\n     super.init(filterConfig);\n+    AuthenticationHandler handler \u003d getAuthenticationHandler();\n     AbstractDelegationTokenSecretManager dtSecretManager \u003d\n         (AbstractDelegationTokenSecretManager) filterConfig.getServletContext().\n             getAttribute(DELEGATION_TOKEN_SECRET_MANAGER_ATTR);\n-    if (dtSecretManager !\u003d null \u0026\u0026 getAuthenticationHandler()\n+    if (dtSecretManager !\u003d null \u0026\u0026 handler\n         instanceof DelegationTokenAuthenticationHandler) {\n-      DelegationTokenAuthenticationHandler handler \u003d\n+      DelegationTokenAuthenticationHandler dtHandler \u003d\n           (DelegationTokenAuthenticationHandler) getAuthenticationHandler();\n-      handler.setExternalDelegationTokenSecretManager(dtSecretManager);\n+      dtHandler.setExternalDelegationTokenSecretManager(dtSecretManager);\n     }\n+    if (handler instanceof PseudoAuthenticationHandler ||\n+        handler instanceof PseudoDelegationTokenAuthenticationHandler) {\n+      setHandlerAuthMethod(SaslRpcServer.AuthMethod.SIMPLE);\n+    }\n+    if (handler instanceof KerberosAuthenticationHandler ||\n+        handler instanceof KerberosDelegationTokenAuthenticationHandler) {\n+      setHandlerAuthMethod(SaslRpcServer.AuthMethod.KERBEROS);\n+    }\n+\n+    // proxyuser configuration\n+    Configuration conf \u003d getProxyuserConfiguration(filterConfig);\n+    ProxyUsers.refreshSuperUserGroupsConfiguration(conf, PROXYUSER_PREFIX);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void init(FilterConfig filterConfig) throws ServletException {\n    super.init(filterConfig);\n    AuthenticationHandler handler \u003d getAuthenticationHandler();\n    AbstractDelegationTokenSecretManager dtSecretManager \u003d\n        (AbstractDelegationTokenSecretManager) filterConfig.getServletContext().\n            getAttribute(DELEGATION_TOKEN_SECRET_MANAGER_ATTR);\n    if (dtSecretManager !\u003d null \u0026\u0026 handler\n        instanceof DelegationTokenAuthenticationHandler) {\n      DelegationTokenAuthenticationHandler dtHandler \u003d\n          (DelegationTokenAuthenticationHandler) getAuthenticationHandler();\n      dtHandler.setExternalDelegationTokenSecretManager(dtSecretManager);\n    }\n    if (handler instanceof PseudoAuthenticationHandler ||\n        handler instanceof PseudoDelegationTokenAuthenticationHandler) {\n      setHandlerAuthMethod(SaslRpcServer.AuthMethod.SIMPLE);\n    }\n    if (handler instanceof KerberosAuthenticationHandler ||\n        handler instanceof KerberosDelegationTokenAuthenticationHandler) {\n      setHandlerAuthMethod(SaslRpcServer.AuthMethod.KERBEROS);\n    }\n\n    // proxyuser configuration\n    Configuration conf \u003d getProxyuserConfiguration(filterConfig);\n    ProxyUsers.refreshSuperUserGroupsConfiguration(conf, PROXYUSER_PREFIX);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/web/DelegationTokenAuthenticationFilter.java",
      "extendedDetails": {}
    },
    "be9c67930b57c516723d566625f9036a88a84055": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-10771. Refactor HTTP delegation support out of httpfs to common, PART 2. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1616672 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/14 9:58 PM",
      "commitName": "be9c67930b57c516723d566625f9036a88a84055",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,12 @@\n+  public void init(FilterConfig filterConfig) throws ServletException {\n+    super.init(filterConfig);\n+    AbstractDelegationTokenSecretManager dtSecretManager \u003d\n+        (AbstractDelegationTokenSecretManager) filterConfig.getServletContext().\n+            getAttribute(DELEGATION_TOKEN_SECRET_MANAGER_ATTR);\n+    if (dtSecretManager !\u003d null \u0026\u0026 getAuthenticationHandler()\n+        instanceof DelegationTokenAuthenticationHandler) {\n+      DelegationTokenAuthenticationHandler handler \u003d\n+          (DelegationTokenAuthenticationHandler) getAuthenticationHandler();\n+      handler.setExternalDelegationTokenSecretManager(dtSecretManager);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void init(FilterConfig filterConfig) throws ServletException {\n    super.init(filterConfig);\n    AbstractDelegationTokenSecretManager dtSecretManager \u003d\n        (AbstractDelegationTokenSecretManager) filterConfig.getServletContext().\n            getAttribute(DELEGATION_TOKEN_SECRET_MANAGER_ATTR);\n    if (dtSecretManager !\u003d null \u0026\u0026 getAuthenticationHandler()\n        instanceof DelegationTokenAuthenticationHandler) {\n      DelegationTokenAuthenticationHandler handler \u003d\n          (DelegationTokenAuthenticationHandler) getAuthenticationHandler();\n      handler.setExternalDelegationTokenSecretManager(dtSecretManager);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/web/DelegationTokenAuthenticationFilter.java"
    }
  }
}