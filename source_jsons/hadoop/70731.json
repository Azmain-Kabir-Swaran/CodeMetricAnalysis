{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AzureNativeFileSystemStore.java",
  "functionName": "waitForCopyToComplete",
  "functionId": "waitForCopyToComplete___blob-CloudBlobWrapper__opContext-OperationContext",
  "sourceFilePath": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/AzureNativeFileSystemStore.java",
  "functionStartLine": 2857,
  "functionEndLine": 2877,
  "numCommitsSeen": 56,
  "timeTaken": 3341,
  "changeHistory": [
    "2217e2f8ff418b88eac6ad36cafe3a9795a11f40",
    "81bc395deb3ba00567dc067d6ca71bacf9e3bc82"
  ],
  "changeHistoryShort": {
    "2217e2f8ff418b88eac6ad36cafe3a9795a11f40": "Ymultichange(Yparameterchange,Yexceptionschange,Ybodychange)",
    "81bc395deb3ba00567dc067d6ca71bacf9e3bc82": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2217e2f8ff418b88eac6ad36cafe3a9795a11f40": {
      "type": "Ymultichange(Yparameterchange,Yexceptionschange,Ybodychange)",
      "commitMessage": "HADOOP-10809. hadoop-azure: page blob support. Contributed by Dexter Bradshaw, Mostafa Elhemali, Eric Hanson, and Mike Liddell.\n",
      "commitDate": "08/10/14 2:20 PM",
      "commitName": "2217e2f8ff418b88eac6ad36cafe3a9795a11f40",
      "commitAuthor": "cnauroth",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-10809. hadoop-azure: page blob support. Contributed by Dexter Bradshaw, Mostafa Elhemali, Eric Hanson, and Mike Liddell.\n",
          "commitDate": "08/10/14 2:20 PM",
          "commitName": "2217e2f8ff418b88eac6ad36cafe3a9795a11f40",
          "commitAuthor": "cnauroth",
          "commitDateOld": "24/06/14 1:52 PM",
          "commitNameOld": "0d91576ec31f63402f2db6107a04155368e2632d",
          "commitAuthorOld": "Chris Nauroth",
          "daysBetweenCommits": 106.02,
          "commitsBetweenForRepo": 1005,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,21 @@\n-  private void waitForCopyToComplete(CloudBlockBlobWrapper blob,\n-      OperationContext opContext) throws AzureException {\n+  private void waitForCopyToComplete(CloudBlobWrapper blob, OperationContext opContext){\n     boolean copyInProgress \u003d true;\n-    int exceptionCount \u003d 0;\n     while (copyInProgress) {\n       try {\n         blob.downloadAttributes(opContext);\n-      } catch (StorageException se) {\n-        exceptionCount++;\n-        if(exceptionCount \u003e 10){\n-          throw new AzureException(\"Too many storage exceptions during waitForCopyToComplete\", se);\n         }\n+      catch (StorageException se){\n       }\n \n-      // test for null because mocked filesystem doesn\u0027t know about copystates\n-      // yet.\n-      copyInProgress \u003d (blob.getCopyState() !\u003d null \u0026\u0026 blob.getCopyState()\n-          .getStatus() \u003d\u003d CopyStatus.PENDING);\n+      // test for null because mocked filesystem doesn\u0027t know about copystates yet.\n+      copyInProgress \u003d (blob.getCopyState() !\u003d null \u0026\u0026 blob.getCopyState().getStatus() \u003d\u003d CopyStatus.PENDING);\n       if (copyInProgress) {\n         try {\n           Thread.sleep(1000);\n-        } catch (InterruptedException ie) {\n-          Thread.currentThread().interrupt();\n+          }\n+          catch (InterruptedException ie){\n+            //ignore\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void waitForCopyToComplete(CloudBlobWrapper blob, OperationContext opContext){\n    boolean copyInProgress \u003d true;\n    while (copyInProgress) {\n      try {\n        blob.downloadAttributes(opContext);\n        }\n      catch (StorageException se){\n      }\n\n      // test for null because mocked filesystem doesn\u0027t know about copystates yet.\n      copyInProgress \u003d (blob.getCopyState() !\u003d null \u0026\u0026 blob.getCopyState().getStatus() \u003d\u003d CopyStatus.PENDING);\n      if (copyInProgress) {\n        try {\n          Thread.sleep(1000);\n          }\n          catch (InterruptedException ie){\n            //ignore\n        }\n      }\n    }\n  }",
          "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/AzureNativeFileSystemStore.java",
          "extendedDetails": {
            "oldValue": "[blob-CloudBlockBlobWrapper, opContext-OperationContext]",
            "newValue": "[blob-CloudBlobWrapper, opContext-OperationContext]"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "HADOOP-10809. hadoop-azure: page blob support. Contributed by Dexter Bradshaw, Mostafa Elhemali, Eric Hanson, and Mike Liddell.\n",
          "commitDate": "08/10/14 2:20 PM",
          "commitName": "2217e2f8ff418b88eac6ad36cafe3a9795a11f40",
          "commitAuthor": "cnauroth",
          "commitDateOld": "24/06/14 1:52 PM",
          "commitNameOld": "0d91576ec31f63402f2db6107a04155368e2632d",
          "commitAuthorOld": "Chris Nauroth",
          "daysBetweenCommits": 106.02,
          "commitsBetweenForRepo": 1005,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,21 @@\n-  private void waitForCopyToComplete(CloudBlockBlobWrapper blob,\n-      OperationContext opContext) throws AzureException {\n+  private void waitForCopyToComplete(CloudBlobWrapper blob, OperationContext opContext){\n     boolean copyInProgress \u003d true;\n-    int exceptionCount \u003d 0;\n     while (copyInProgress) {\n       try {\n         blob.downloadAttributes(opContext);\n-      } catch (StorageException se) {\n-        exceptionCount++;\n-        if(exceptionCount \u003e 10){\n-          throw new AzureException(\"Too many storage exceptions during waitForCopyToComplete\", se);\n         }\n+      catch (StorageException se){\n       }\n \n-      // test for null because mocked filesystem doesn\u0027t know about copystates\n-      // yet.\n-      copyInProgress \u003d (blob.getCopyState() !\u003d null \u0026\u0026 blob.getCopyState()\n-          .getStatus() \u003d\u003d CopyStatus.PENDING);\n+      // test for null because mocked filesystem doesn\u0027t know about copystates yet.\n+      copyInProgress \u003d (blob.getCopyState() !\u003d null \u0026\u0026 blob.getCopyState().getStatus() \u003d\u003d CopyStatus.PENDING);\n       if (copyInProgress) {\n         try {\n           Thread.sleep(1000);\n-        } catch (InterruptedException ie) {\n-          Thread.currentThread().interrupt();\n+          }\n+          catch (InterruptedException ie){\n+            //ignore\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void waitForCopyToComplete(CloudBlobWrapper blob, OperationContext opContext){\n    boolean copyInProgress \u003d true;\n    while (copyInProgress) {\n      try {\n        blob.downloadAttributes(opContext);\n        }\n      catch (StorageException se){\n      }\n\n      // test for null because mocked filesystem doesn\u0027t know about copystates yet.\n      copyInProgress \u003d (blob.getCopyState() !\u003d null \u0026\u0026 blob.getCopyState().getStatus() \u003d\u003d CopyStatus.PENDING);\n      if (copyInProgress) {\n        try {\n          Thread.sleep(1000);\n          }\n          catch (InterruptedException ie){\n            //ignore\n        }\n      }\n    }\n  }",
          "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/AzureNativeFileSystemStore.java",
          "extendedDetails": {
            "oldValue": "[AzureException]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-10809. hadoop-azure: page blob support. Contributed by Dexter Bradshaw, Mostafa Elhemali, Eric Hanson, and Mike Liddell.\n",
          "commitDate": "08/10/14 2:20 PM",
          "commitName": "2217e2f8ff418b88eac6ad36cafe3a9795a11f40",
          "commitAuthor": "cnauroth",
          "commitDateOld": "24/06/14 1:52 PM",
          "commitNameOld": "0d91576ec31f63402f2db6107a04155368e2632d",
          "commitAuthorOld": "Chris Nauroth",
          "daysBetweenCommits": 106.02,
          "commitsBetweenForRepo": 1005,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,21 @@\n-  private void waitForCopyToComplete(CloudBlockBlobWrapper blob,\n-      OperationContext opContext) throws AzureException {\n+  private void waitForCopyToComplete(CloudBlobWrapper blob, OperationContext opContext){\n     boolean copyInProgress \u003d true;\n-    int exceptionCount \u003d 0;\n     while (copyInProgress) {\n       try {\n         blob.downloadAttributes(opContext);\n-      } catch (StorageException se) {\n-        exceptionCount++;\n-        if(exceptionCount \u003e 10){\n-          throw new AzureException(\"Too many storage exceptions during waitForCopyToComplete\", se);\n         }\n+      catch (StorageException se){\n       }\n \n-      // test for null because mocked filesystem doesn\u0027t know about copystates\n-      // yet.\n-      copyInProgress \u003d (blob.getCopyState() !\u003d null \u0026\u0026 blob.getCopyState()\n-          .getStatus() \u003d\u003d CopyStatus.PENDING);\n+      // test for null because mocked filesystem doesn\u0027t know about copystates yet.\n+      copyInProgress \u003d (blob.getCopyState() !\u003d null \u0026\u0026 blob.getCopyState().getStatus() \u003d\u003d CopyStatus.PENDING);\n       if (copyInProgress) {\n         try {\n           Thread.sleep(1000);\n-        } catch (InterruptedException ie) {\n-          Thread.currentThread().interrupt();\n+          }\n+          catch (InterruptedException ie){\n+            //ignore\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void waitForCopyToComplete(CloudBlobWrapper blob, OperationContext opContext){\n    boolean copyInProgress \u003d true;\n    while (copyInProgress) {\n      try {\n        blob.downloadAttributes(opContext);\n        }\n      catch (StorageException se){\n      }\n\n      // test for null because mocked filesystem doesn\u0027t know about copystates yet.\n      copyInProgress \u003d (blob.getCopyState() !\u003d null \u0026\u0026 blob.getCopyState().getStatus() \u003d\u003d CopyStatus.PENDING);\n      if (copyInProgress) {\n        try {\n          Thread.sleep(1000);\n          }\n          catch (InterruptedException ie){\n            //ignore\n        }\n      }\n    }\n  }",
          "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/AzureNativeFileSystemStore.java",
          "extendedDetails": {}
        }
      ]
    },
    "81bc395deb3ba00567dc067d6ca71bacf9e3bc82": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-9629. Support Windows Azure Storage - Blob as a file system in Hadoop. Contributed by Dexter Bradshaw, Mostafa Elhemali, Xi Fang, Johannes Klein, David Lao, Mike Liddell, Chuan Liu, Lengning Liu, Ivan Mitic, Michael Rys, Alexander Stojanovic, Brian Swan, and Min Wei.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1601781 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/06/14 3:26 PM",
      "commitName": "81bc395deb3ba00567dc067d6ca71bacf9e3bc82",
      "commitAuthor": "Chris Nauroth",
      "diff": "@@ -0,0 +1,27 @@\n+  private void waitForCopyToComplete(CloudBlockBlobWrapper blob,\n+      OperationContext opContext) throws AzureException {\n+    boolean copyInProgress \u003d true;\n+    int exceptionCount \u003d 0;\n+    while (copyInProgress) {\n+      try {\n+        blob.downloadAttributes(opContext);\n+      } catch (StorageException se) {\n+        exceptionCount++;\n+        if(exceptionCount \u003e 10){\n+          throw new AzureException(\"Too many storage exceptions during waitForCopyToComplete\", se);\n+        }\n+      }\n+\n+      // test for null because mocked filesystem doesn\u0027t know about copystates\n+      // yet.\n+      copyInProgress \u003d (blob.getCopyState() !\u003d null \u0026\u0026 blob.getCopyState()\n+          .getStatus() \u003d\u003d CopyStatus.PENDING);\n+      if (copyInProgress) {\n+        try {\n+          Thread.sleep(1000);\n+        } catch (InterruptedException ie) {\n+          Thread.currentThread().interrupt();\n+        }\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void waitForCopyToComplete(CloudBlockBlobWrapper blob,\n      OperationContext opContext) throws AzureException {\n    boolean copyInProgress \u003d true;\n    int exceptionCount \u003d 0;\n    while (copyInProgress) {\n      try {\n        blob.downloadAttributes(opContext);\n      } catch (StorageException se) {\n        exceptionCount++;\n        if(exceptionCount \u003e 10){\n          throw new AzureException(\"Too many storage exceptions during waitForCopyToComplete\", se);\n        }\n      }\n\n      // test for null because mocked filesystem doesn\u0027t know about copystates\n      // yet.\n      copyInProgress \u003d (blob.getCopyState() !\u003d null \u0026\u0026 blob.getCopyState()\n          .getStatus() \u003d\u003d CopyStatus.PENDING);\n      if (copyInProgress) {\n        try {\n          Thread.sleep(1000);\n        } catch (InterruptedException ie) {\n          Thread.currentThread().interrupt();\n        }\n      }\n    }\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/AzureNativeFileSystemStore.java"
    }
  }
}