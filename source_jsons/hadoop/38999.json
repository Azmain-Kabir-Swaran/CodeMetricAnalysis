{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ActivitiesManager.java",
  "functionName": "finishNodeUpdateRecording",
  "functionId": "finishNodeUpdateRecording___nodeID-NodeId__partition-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/activities/ActivitiesManager.java",
  "functionStartLine": 461,
  "functionEndLine": 485,
  "numCommitsSeen": 30,
  "timeTaken": 4261,
  "changeHistory": [
    "8c0759d02a9a530cfdd25e0a8f410cd74a8ac4c8",
    "12b7059ddc8d8f67dd7131565f03a0e09cb92ca7",
    "fc05b0e70e9bb556d6bdc00fa8735e18a6f90bc9",
    "e0d131f055ee126052ad4d0f7b0d192e6c730188"
  ],
  "changeHistoryShort": {
    "8c0759d02a9a530cfdd25e0a8f410cd74a8ac4c8": "Ymultichange(Yparameterchange,Ybodychange)",
    "12b7059ddc8d8f67dd7131565f03a0e09cb92ca7": "Ybodychange",
    "fc05b0e70e9bb556d6bdc00fa8735e18a6f90bc9": "Ybodychange",
    "e0d131f055ee126052ad4d0f7b0d192e6c730188": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8c0759d02a9a530cfdd25e0a8f410cd74a8ac4c8": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-9664. Improve response of scheduler/app activities for better understanding. Contributed by Tao Yang.\n",
      "commitDate": "29/08/19 3:14 AM",
      "commitName": "8c0759d02a9a530cfdd25e0a8f410cd74a8ac4c8",
      "commitAuthor": "Weiwei Yang",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-9664. Improve response of scheduler/app activities for better understanding. Contributed by Tao Yang.\n",
          "commitDate": "29/08/19 3:14 AM",
          "commitName": "8c0759d02a9a530cfdd25e0a8f410cd74a8ac4c8",
          "commitAuthor": "Weiwei Yang",
          "commitDateOld": "28/06/19 8:24 AM",
          "commitNameOld": "cbae2413201bc470b5f16421ea69d1cd9edb64a8",
          "commitAuthorOld": "Weiwei Yang",
          "daysBetweenCommits": 61.78,
          "commitsBetweenForRepo": 517,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,25 @@\n-  void finishNodeUpdateRecording(NodeId nodeID) {\n+  void finishNodeUpdateRecording(NodeId nodeID, String partition) {\n     List\u003cNodeAllocation\u003e value \u003d recordingNodesAllocation.get().get(nodeID);\n-    long timeStamp \u003d SystemClock.getInstance().getTime();\n+    long timestamp \u003d SystemClock.getInstance().getTime();\n \n     if (value !\u003d null) {\n       if (value.size() \u003e 0) {\n         lastAvailableNodeActivities \u003d value;\n         for (NodeAllocation allocation : lastAvailableNodeActivities) {\n           allocation.transformToTree();\n-          allocation.setTimeStamp(timeStamp);\n+          allocation.setTimestamp(timestamp);\n+          allocation.setPartition(partition);\n         }\n         if (recordNextAvailableNode) {\n           recordNextAvailableNode \u003d false;\n         }\n       }\n \n       if (shouldRecordThisNode(nodeID)) {\n         recordingNodesAllocation.get().remove(nodeID);\n         completedNodeAllocations.put(nodeID, value);\n       }\n     }\n     // disable diagnostic collector\n     diagnosticCollectorManager.get().disable();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void finishNodeUpdateRecording(NodeId nodeID, String partition) {\n    List\u003cNodeAllocation\u003e value \u003d recordingNodesAllocation.get().get(nodeID);\n    long timestamp \u003d SystemClock.getInstance().getTime();\n\n    if (value !\u003d null) {\n      if (value.size() \u003e 0) {\n        lastAvailableNodeActivities \u003d value;\n        for (NodeAllocation allocation : lastAvailableNodeActivities) {\n          allocation.transformToTree();\n          allocation.setTimestamp(timestamp);\n          allocation.setPartition(partition);\n        }\n        if (recordNextAvailableNode) {\n          recordNextAvailableNode \u003d false;\n        }\n      }\n\n      if (shouldRecordThisNode(nodeID)) {\n        recordingNodesAllocation.get().remove(nodeID);\n        completedNodeAllocations.put(nodeID, value);\n      }\n    }\n    // disable diagnostic collector\n    diagnosticCollectorManager.get().disable();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/activities/ActivitiesManager.java",
          "extendedDetails": {
            "oldValue": "[nodeID-NodeId]",
            "newValue": "[nodeID-NodeId, partition-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-9664. Improve response of scheduler/app activities for better understanding. Contributed by Tao Yang.\n",
          "commitDate": "29/08/19 3:14 AM",
          "commitName": "8c0759d02a9a530cfdd25e0a8f410cd74a8ac4c8",
          "commitAuthor": "Weiwei Yang",
          "commitDateOld": "28/06/19 8:24 AM",
          "commitNameOld": "cbae2413201bc470b5f16421ea69d1cd9edb64a8",
          "commitAuthorOld": "Weiwei Yang",
          "daysBetweenCommits": 61.78,
          "commitsBetweenForRepo": 517,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,25 @@\n-  void finishNodeUpdateRecording(NodeId nodeID) {\n+  void finishNodeUpdateRecording(NodeId nodeID, String partition) {\n     List\u003cNodeAllocation\u003e value \u003d recordingNodesAllocation.get().get(nodeID);\n-    long timeStamp \u003d SystemClock.getInstance().getTime();\n+    long timestamp \u003d SystemClock.getInstance().getTime();\n \n     if (value !\u003d null) {\n       if (value.size() \u003e 0) {\n         lastAvailableNodeActivities \u003d value;\n         for (NodeAllocation allocation : lastAvailableNodeActivities) {\n           allocation.transformToTree();\n-          allocation.setTimeStamp(timeStamp);\n+          allocation.setTimestamp(timestamp);\n+          allocation.setPartition(partition);\n         }\n         if (recordNextAvailableNode) {\n           recordNextAvailableNode \u003d false;\n         }\n       }\n \n       if (shouldRecordThisNode(nodeID)) {\n         recordingNodesAllocation.get().remove(nodeID);\n         completedNodeAllocations.put(nodeID, value);\n       }\n     }\n     // disable diagnostic collector\n     diagnosticCollectorManager.get().disable();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void finishNodeUpdateRecording(NodeId nodeID, String partition) {\n    List\u003cNodeAllocation\u003e value \u003d recordingNodesAllocation.get().get(nodeID);\n    long timestamp \u003d SystemClock.getInstance().getTime();\n\n    if (value !\u003d null) {\n      if (value.size() \u003e 0) {\n        lastAvailableNodeActivities \u003d value;\n        for (NodeAllocation allocation : lastAvailableNodeActivities) {\n          allocation.transformToTree();\n          allocation.setTimestamp(timestamp);\n          allocation.setPartition(partition);\n        }\n        if (recordNextAvailableNode) {\n          recordNextAvailableNode \u003d false;\n        }\n      }\n\n      if (shouldRecordThisNode(nodeID)) {\n        recordingNodesAllocation.get().remove(nodeID);\n        completedNodeAllocations.put(nodeID, value);\n      }\n    }\n    // disable diagnostic collector\n    diagnosticCollectorManager.get().disable();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/activities/ActivitiesManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "12b7059ddc8d8f67dd7131565f03a0e09cb92ca7": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9440. Improve diagnostics for scheduler and app activities. Contributed by Tao Yang.\n",
      "commitDate": "06/05/19 5:00 AM",
      "commitName": "12b7059ddc8d8f67dd7131565f03a0e09cb92ca7",
      "commitAuthor": "Weiwei Yang",
      "commitDateOld": "15/04/19 9:12 AM",
      "commitNameOld": "7fa73fac2676875561269e9408215e012269a18c",
      "commitAuthorOld": "Weiwei Yang",
      "daysBetweenCommits": 20.82,
      "commitsBetweenForRepo": 102,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,24 @@\n   void finishNodeUpdateRecording(NodeId nodeID) {\n     List\u003cNodeAllocation\u003e value \u003d recordingNodesAllocation.get().get(nodeID);\n     long timeStamp \u003d SystemClock.getInstance().getTime();\n \n     if (value !\u003d null) {\n       if (value.size() \u003e 0) {\n         lastAvailableNodeActivities \u003d value;\n         for (NodeAllocation allocation : lastAvailableNodeActivities) {\n           allocation.transformToTree();\n           allocation.setTimeStamp(timeStamp);\n         }\n         if (recordNextAvailableNode) {\n           recordNextAvailableNode \u003d false;\n         }\n       }\n \n       if (shouldRecordThisNode(nodeID)) {\n         recordingNodesAllocation.get().remove(nodeID);\n         completedNodeAllocations.put(nodeID, value);\n       }\n     }\n+    // disable diagnostic collector\n+    diagnosticCollectorManager.get().disable();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void finishNodeUpdateRecording(NodeId nodeID) {\n    List\u003cNodeAllocation\u003e value \u003d recordingNodesAllocation.get().get(nodeID);\n    long timeStamp \u003d SystemClock.getInstance().getTime();\n\n    if (value !\u003d null) {\n      if (value.size() \u003e 0) {\n        lastAvailableNodeActivities \u003d value;\n        for (NodeAllocation allocation : lastAvailableNodeActivities) {\n          allocation.transformToTree();\n          allocation.setTimeStamp(timeStamp);\n        }\n        if (recordNextAvailableNode) {\n          recordNextAvailableNode \u003d false;\n        }\n      }\n\n      if (shouldRecordThisNode(nodeID)) {\n        recordingNodesAllocation.get().remove(nodeID);\n        completedNodeAllocations.put(nodeID, value);\n      }\n    }\n    // disable diagnostic collector\n    diagnosticCollectorManager.get().disable();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/activities/ActivitiesManager.java",
      "extendedDetails": {}
    },
    "fc05b0e70e9bb556d6bdc00fa8735e18a6f90bc9": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9313. Support asynchronized scheduling mode and multi-node lookup mechanism for scheduler activities. Contributed by Tao Yang.\n",
      "commitDate": "07/04/19 10:40 PM",
      "commitName": "fc05b0e70e9bb556d6bdc00fa8735e18a6f90bc9",
      "commitAuthor": "Weiwei Yang",
      "commitDateOld": "04/03/19 9:10 PM",
      "commitNameOld": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
      "commitAuthorOld": "Prabhu Joseph",
      "daysBetweenCommits": 34.02,
      "commitsBetweenForRepo": 270,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,22 @@\n   void finishNodeUpdateRecording(NodeId nodeID) {\n-    List\u003cNodeAllocation\u003e value \u003d recordingNodesAllocation.get(nodeID);\n+    List\u003cNodeAllocation\u003e value \u003d recordingNodesAllocation.get().get(nodeID);\n     long timeStamp \u003d SystemClock.getInstance().getTime();\n \n     if (value !\u003d null) {\n       if (value.size() \u003e 0) {\n         lastAvailableNodeActivities \u003d value;\n         for (NodeAllocation allocation : lastAvailableNodeActivities) {\n           allocation.transformToTree();\n           allocation.setTimeStamp(timeStamp);\n         }\n         if (recordNextAvailableNode) {\n           recordNextAvailableNode \u003d false;\n         }\n       }\n \n       if (shouldRecordThisNode(nodeID)) {\n-        recordingNodesAllocation.remove(nodeID);\n+        recordingNodesAllocation.get().remove(nodeID);\n         completedNodeAllocations.put(nodeID, value);\n-        stopRecordNodeUpdateActivities(nodeID);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void finishNodeUpdateRecording(NodeId nodeID) {\n    List\u003cNodeAllocation\u003e value \u003d recordingNodesAllocation.get().get(nodeID);\n    long timeStamp \u003d SystemClock.getInstance().getTime();\n\n    if (value !\u003d null) {\n      if (value.size() \u003e 0) {\n        lastAvailableNodeActivities \u003d value;\n        for (NodeAllocation allocation : lastAvailableNodeActivities) {\n          allocation.transformToTree();\n          allocation.setTimeStamp(timeStamp);\n        }\n        if (recordNextAvailableNode) {\n          recordNextAvailableNode \u003d false;\n        }\n      }\n\n      if (shouldRecordThisNode(nodeID)) {\n        recordingNodesAllocation.get().remove(nodeID);\n        completedNodeAllocations.put(nodeID, value);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/activities/ActivitiesManager.java",
      "extendedDetails": {}
    },
    "e0d131f055ee126052ad4d0f7b0d192e6c730188": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4091. Add REST API to retrieve scheduler activity. (Chen Ge and Sunil G via wangda)\n",
      "commitDate": "05/08/16 10:27 AM",
      "commitName": "e0d131f055ee126052ad4d0f7b0d192e6c730188",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,23 @@\n+  void finishNodeUpdateRecording(NodeId nodeID) {\n+    List\u003cNodeAllocation\u003e value \u003d recordingNodesAllocation.get(nodeID);\n+    long timeStamp \u003d SystemClock.getInstance().getTime();\n+\n+    if (value !\u003d null) {\n+      if (value.size() \u003e 0) {\n+        lastAvailableNodeActivities \u003d value;\n+        for (NodeAllocation allocation : lastAvailableNodeActivities) {\n+          allocation.transformToTree();\n+          allocation.setTimeStamp(timeStamp);\n+        }\n+        if (recordNextAvailableNode) {\n+          recordNextAvailableNode \u003d false;\n+        }\n+      }\n+\n+      if (shouldRecordThisNode(nodeID)) {\n+        recordingNodesAllocation.remove(nodeID);\n+        completedNodeAllocations.put(nodeID, value);\n+        stopRecordNodeUpdateActivities(nodeID);\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  void finishNodeUpdateRecording(NodeId nodeID) {\n    List\u003cNodeAllocation\u003e value \u003d recordingNodesAllocation.get(nodeID);\n    long timeStamp \u003d SystemClock.getInstance().getTime();\n\n    if (value !\u003d null) {\n      if (value.size() \u003e 0) {\n        lastAvailableNodeActivities \u003d value;\n        for (NodeAllocation allocation : lastAvailableNodeActivities) {\n          allocation.transformToTree();\n          allocation.setTimeStamp(timeStamp);\n        }\n        if (recordNextAvailableNode) {\n          recordNextAvailableNode \u003d false;\n        }\n      }\n\n      if (shouldRecordThisNode(nodeID)) {\n        recordingNodesAllocation.remove(nodeID);\n        completedNodeAllocations.put(nodeID, value);\n        stopRecordNodeUpdateActivities(nodeID);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/activities/ActivitiesManager.java"
    }
  }
}