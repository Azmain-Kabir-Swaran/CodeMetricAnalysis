{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PBHelperClient.java",
  "functionName": "convert",
  "functionId": "convert___proto-CacheDirectiveEntryProto",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelperClient.java",
  "functionStartLine": 1491,
  "functionEndLine": 1495,
  "numCommitsSeen": 286,
  "timeTaken": 6933,
  "changeHistory": [
    "06022b8fdc40e50eaac63758246353058e8cfa6d",
    "f91a45a96c21db9e5d40097c7d3f5d005ae10dde",
    "916ab9286b6006571649d21c74d9ae70273a3ddc",
    "f79b3e6b17450e9d34c483046b7437b09dd72016"
  ],
  "changeHistoryShort": {
    "06022b8fdc40e50eaac63758246353058e8cfa6d": "Ymultichange(Ymovefromfile,Ybodychange)",
    "f91a45a96c21db9e5d40097c7d3f5d005ae10dde": "Ymultichange(Yparameterchange,Yreturntypechange,Ybodychange)",
    "916ab9286b6006571649d21c74d9ae70273a3ddc": "Ybodychange",
    "f79b3e6b17450e9d34c483046b7437b09dd72016": "Yintroduced"
  },
  "changeHistoryDetails": {
    "06022b8fdc40e50eaac63758246353058e8cfa6d": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "HDFS-9111. Move hdfs-client protobuf convert methods from PBHelper to PBHelperClient. Contributed by Mingliang Liu.\n",
      "commitDate": "21/09/15 6:53 PM",
      "commitName": "06022b8fdc40e50eaac63758246353058e8cfa6d",
      "commitAuthor": "Haohui Mai",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-9111. Move hdfs-client protobuf convert methods from PBHelper to PBHelperClient. Contributed by Mingliang Liu.\n",
          "commitDate": "21/09/15 6:53 PM",
          "commitName": "06022b8fdc40e50eaac63758246353058e8cfa6d",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "21/09/15 5:51 PM",
          "commitNameOld": "8e01b0d97ac3d74b049a801dfa1cc6e77d8f680a",
          "commitAuthorOld": "Chris Douglas",
          "daysBetweenCommits": 0.04,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,5 +1,5 @@\n   public static CacheDirectiveEntry convert(CacheDirectiveEntryProto proto) {\n-    CacheDirectiveInfo info \u003d PBHelper.convert(proto.getInfo());\n-    CacheDirectiveStats stats \u003d PBHelper.convert(proto.getStats());\n+    CacheDirectiveInfo info \u003d convert(proto.getInfo());\n+    CacheDirectiveStats stats \u003d convert(proto.getStats());\n     return new CacheDirectiveEntry(info, stats);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static CacheDirectiveEntry convert(CacheDirectiveEntryProto proto) {\n    CacheDirectiveInfo info \u003d convert(proto.getInfo());\n    CacheDirectiveStats stats \u003d convert(proto.getStats());\n    return new CacheDirectiveEntry(info, stats);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelperClient.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelperClient.java",
            "oldMethodName": "convert",
            "newMethodName": "convert"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-9111. Move hdfs-client protobuf convert methods from PBHelper to PBHelperClient. Contributed by Mingliang Liu.\n",
          "commitDate": "21/09/15 6:53 PM",
          "commitName": "06022b8fdc40e50eaac63758246353058e8cfa6d",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "21/09/15 5:51 PM",
          "commitNameOld": "8e01b0d97ac3d74b049a801dfa1cc6e77d8f680a",
          "commitAuthorOld": "Chris Douglas",
          "daysBetweenCommits": 0.04,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,5 +1,5 @@\n   public static CacheDirectiveEntry convert(CacheDirectiveEntryProto proto) {\n-    CacheDirectiveInfo info \u003d PBHelper.convert(proto.getInfo());\n-    CacheDirectiveStats stats \u003d PBHelper.convert(proto.getStats());\n+    CacheDirectiveInfo info \u003d convert(proto.getInfo());\n+    CacheDirectiveStats stats \u003d convert(proto.getStats());\n     return new CacheDirectiveEntry(info, stats);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static CacheDirectiveEntry convert(CacheDirectiveEntryProto proto) {\n    CacheDirectiveInfo info \u003d convert(proto.getInfo());\n    CacheDirectiveStats stats \u003d convert(proto.getStats());\n    return new CacheDirectiveEntry(info, stats);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelperClient.java",
          "extendedDetails": {}
        }
      ]
    },
    "f91a45a96c21db9e5d40097c7d3f5d005ae10dde": {
      "type": "Ymultichange(Yparameterchange,Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-5473. Consistent naming of user-visible caching classes and methods (cmccabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1544252 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/11/13 9:12 AM",
      "commitName": "f91a45a96c21db9e5d40097c7d3f5d005ae10dde",
      "commitAuthor": "Colin McCabe",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-5473. Consistent naming of user-visible caching classes and methods (cmccabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1544252 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "21/11/13 9:12 AM",
          "commitName": "f91a45a96c21db9e5d40097c7d3f5d005ae10dde",
          "commitAuthor": "Colin McCabe",
          "commitDateOld": "20/11/13 1:31 PM",
          "commitNameOld": "916ab9286b6006571649d21c74d9ae70273a3ddc",
          "commitAuthorOld": "Andrew Wang",
          "daysBetweenCommits": 0.82,
          "commitsBetweenForRepo": 10,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,5 @@\n-  public static PathBasedCacheDirective convert\n-      (PathBasedCacheDirectiveInfoProto proto) {\n-    PathBasedCacheDirective.Builder builder \u003d\n-        new PathBasedCacheDirective.Builder();\n-    if (proto.hasId()) {\n-      builder.setId(proto.getId());\n-    }\n-    if (proto.hasPath()) {\n-      builder.setPath(new Path(proto.getPath()));\n-    }\n-    if (proto.hasReplication()) {\n-      builder.setReplication(Shorts.checkedCast(\n-          proto.getReplication()));\n-    }\n-    if (proto.hasPool()) {\n-      builder.setPool(proto.getPool());\n-    }\n-    if (proto.hasBytesNeeded()) {\n-      builder.setBytesNeeded(proto.getBytesNeeded());\n-    }\n-    if (proto.hasBytesCached()) {\n-      builder.setBytesCached(proto.getBytesCached());\n-    }\n-    if (proto.hasFilesAffected()) {\n-      builder.setFilesAffected(proto.getFilesAffected());\n-    }\n-    return builder.build();\n+  public static CacheDirectiveEntry convert(CacheDirectiveEntryProto proto) {\n+    CacheDirectiveInfo info \u003d PBHelper.convert(proto.getInfo());\n+    CacheDirectiveStats stats \u003d PBHelper.convert(proto.getStats());\n+    return new CacheDirectiveEntry(info, stats);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static CacheDirectiveEntry convert(CacheDirectiveEntryProto proto) {\n    CacheDirectiveInfo info \u003d PBHelper.convert(proto.getInfo());\n    CacheDirectiveStats stats \u003d PBHelper.convert(proto.getStats());\n    return new CacheDirectiveEntry(info, stats);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java",
          "extendedDetails": {
            "oldValue": "[proto-PathBasedCacheDirectiveInfoProto]",
            "newValue": "[proto-CacheDirectiveEntryProto]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-5473. Consistent naming of user-visible caching classes and methods (cmccabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1544252 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "21/11/13 9:12 AM",
          "commitName": "f91a45a96c21db9e5d40097c7d3f5d005ae10dde",
          "commitAuthor": "Colin McCabe",
          "commitDateOld": "20/11/13 1:31 PM",
          "commitNameOld": "916ab9286b6006571649d21c74d9ae70273a3ddc",
          "commitAuthorOld": "Andrew Wang",
          "daysBetweenCommits": 0.82,
          "commitsBetweenForRepo": 10,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,5 @@\n-  public static PathBasedCacheDirective convert\n-      (PathBasedCacheDirectiveInfoProto proto) {\n-    PathBasedCacheDirective.Builder builder \u003d\n-        new PathBasedCacheDirective.Builder();\n-    if (proto.hasId()) {\n-      builder.setId(proto.getId());\n-    }\n-    if (proto.hasPath()) {\n-      builder.setPath(new Path(proto.getPath()));\n-    }\n-    if (proto.hasReplication()) {\n-      builder.setReplication(Shorts.checkedCast(\n-          proto.getReplication()));\n-    }\n-    if (proto.hasPool()) {\n-      builder.setPool(proto.getPool());\n-    }\n-    if (proto.hasBytesNeeded()) {\n-      builder.setBytesNeeded(proto.getBytesNeeded());\n-    }\n-    if (proto.hasBytesCached()) {\n-      builder.setBytesCached(proto.getBytesCached());\n-    }\n-    if (proto.hasFilesAffected()) {\n-      builder.setFilesAffected(proto.getFilesAffected());\n-    }\n-    return builder.build();\n+  public static CacheDirectiveEntry convert(CacheDirectiveEntryProto proto) {\n+    CacheDirectiveInfo info \u003d PBHelper.convert(proto.getInfo());\n+    CacheDirectiveStats stats \u003d PBHelper.convert(proto.getStats());\n+    return new CacheDirectiveEntry(info, stats);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static CacheDirectiveEntry convert(CacheDirectiveEntryProto proto) {\n    CacheDirectiveInfo info \u003d PBHelper.convert(proto.getInfo());\n    CacheDirectiveStats stats \u003d PBHelper.convert(proto.getStats());\n    return new CacheDirectiveEntry(info, stats);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java",
          "extendedDetails": {
            "oldValue": "PathBasedCacheDirective",
            "newValue": "CacheDirectiveEntry"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-5473. Consistent naming of user-visible caching classes and methods (cmccabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1544252 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "21/11/13 9:12 AM",
          "commitName": "f91a45a96c21db9e5d40097c7d3f5d005ae10dde",
          "commitAuthor": "Colin McCabe",
          "commitDateOld": "20/11/13 1:31 PM",
          "commitNameOld": "916ab9286b6006571649d21c74d9ae70273a3ddc",
          "commitAuthorOld": "Andrew Wang",
          "daysBetweenCommits": 0.82,
          "commitsBetweenForRepo": 10,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,5 @@\n-  public static PathBasedCacheDirective convert\n-      (PathBasedCacheDirectiveInfoProto proto) {\n-    PathBasedCacheDirective.Builder builder \u003d\n-        new PathBasedCacheDirective.Builder();\n-    if (proto.hasId()) {\n-      builder.setId(proto.getId());\n-    }\n-    if (proto.hasPath()) {\n-      builder.setPath(new Path(proto.getPath()));\n-    }\n-    if (proto.hasReplication()) {\n-      builder.setReplication(Shorts.checkedCast(\n-          proto.getReplication()));\n-    }\n-    if (proto.hasPool()) {\n-      builder.setPool(proto.getPool());\n-    }\n-    if (proto.hasBytesNeeded()) {\n-      builder.setBytesNeeded(proto.getBytesNeeded());\n-    }\n-    if (proto.hasBytesCached()) {\n-      builder.setBytesCached(proto.getBytesCached());\n-    }\n-    if (proto.hasFilesAffected()) {\n-      builder.setFilesAffected(proto.getFilesAffected());\n-    }\n-    return builder.build();\n+  public static CacheDirectiveEntry convert(CacheDirectiveEntryProto proto) {\n+    CacheDirectiveInfo info \u003d PBHelper.convert(proto.getInfo());\n+    CacheDirectiveStats stats \u003d PBHelper.convert(proto.getStats());\n+    return new CacheDirectiveEntry(info, stats);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static CacheDirectiveEntry convert(CacheDirectiveEntryProto proto) {\n    CacheDirectiveInfo info \u003d PBHelper.convert(proto.getInfo());\n    CacheDirectiveStats stats \u003d PBHelper.convert(proto.getStats());\n    return new CacheDirectiveEntry(info, stats);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java",
          "extendedDetails": {}
        }
      ]
    },
    "916ab9286b6006571649d21c74d9ae70273a3ddc": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5451. Add byte and file statistics to PathBasedCacheEntry. Contributed by Colin Patrick McCabe.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1543958 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "20/11/13 1:31 PM",
      "commitName": "916ab9286b6006571649d21c74d9ae70273a3ddc",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "12/11/13 3:52 PM",
      "commitNameOld": "ce35e0950cef9250ce2ceffb3b8bfcff533c6b92",
      "commitAuthorOld": "Colin McCabe",
      "daysBetweenCommits": 7.9,
      "commitsBetweenForRepo": 69,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,28 @@\n   public static PathBasedCacheDirective convert\n       (PathBasedCacheDirectiveInfoProto proto) {\n     PathBasedCacheDirective.Builder builder \u003d\n         new PathBasedCacheDirective.Builder();\n     if (proto.hasId()) {\n       builder.setId(proto.getId());\n     }\n     if (proto.hasPath()) {\n       builder.setPath(new Path(proto.getPath()));\n     }\n     if (proto.hasReplication()) {\n       builder.setReplication(Shorts.checkedCast(\n           proto.getReplication()));\n     }\n     if (proto.hasPool()) {\n       builder.setPool(proto.getPool());\n     }\n+    if (proto.hasBytesNeeded()) {\n+      builder.setBytesNeeded(proto.getBytesNeeded());\n+    }\n+    if (proto.hasBytesCached()) {\n+      builder.setBytesCached(proto.getBytesCached());\n+    }\n+    if (proto.hasFilesAffected()) {\n+      builder.setFilesAffected(proto.getFilesAffected());\n+    }\n     return builder.build();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static PathBasedCacheDirective convert\n      (PathBasedCacheDirectiveInfoProto proto) {\n    PathBasedCacheDirective.Builder builder \u003d\n        new PathBasedCacheDirective.Builder();\n    if (proto.hasId()) {\n      builder.setId(proto.getId());\n    }\n    if (proto.hasPath()) {\n      builder.setPath(new Path(proto.getPath()));\n    }\n    if (proto.hasReplication()) {\n      builder.setReplication(Shorts.checkedCast(\n          proto.getReplication()));\n    }\n    if (proto.hasPool()) {\n      builder.setPool(proto.getPool());\n    }\n    if (proto.hasBytesNeeded()) {\n      builder.setBytesNeeded(proto.getBytesNeeded());\n    }\n    if (proto.hasBytesCached()) {\n      builder.setBytesCached(proto.getBytesCached());\n    }\n    if (proto.hasFilesAffected()) {\n      builder.setFilesAffected(proto.getFilesAffected());\n    }\n    return builder.build();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java",
      "extendedDetails": {}
    },
    "f79b3e6b17450e9d34c483046b7437b09dd72016": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-5326. add modifyDirective to cacheAdmin (cmccabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1539839 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/11/13 2:07 PM",
      "commitName": "f79b3e6b17450e9d34c483046b7437b09dd72016",
      "commitAuthor": "Colin McCabe",
      "diff": "@@ -0,0 +1,19 @@\n+  public static PathBasedCacheDirective convert\n+      (PathBasedCacheDirectiveInfoProto proto) {\n+    PathBasedCacheDirective.Builder builder \u003d\n+        new PathBasedCacheDirective.Builder();\n+    if (proto.hasId()) {\n+      builder.setId(proto.getId());\n+    }\n+    if (proto.hasPath()) {\n+      builder.setPath(new Path(proto.getPath()));\n+    }\n+    if (proto.hasReplication()) {\n+      builder.setReplication(Shorts.checkedCast(\n+          proto.getReplication()));\n+    }\n+    if (proto.hasPool()) {\n+      builder.setPool(proto.getPool());\n+    }\n+    return builder.build();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static PathBasedCacheDirective convert\n      (PathBasedCacheDirectiveInfoProto proto) {\n    PathBasedCacheDirective.Builder builder \u003d\n        new PathBasedCacheDirective.Builder();\n    if (proto.hasId()) {\n      builder.setId(proto.getId());\n    }\n    if (proto.hasPath()) {\n      builder.setPath(new Path(proto.getPath()));\n    }\n    if (proto.hasReplication()) {\n      builder.setReplication(Shorts.checkedCast(\n          proto.getReplication()));\n    }\n    if (proto.hasPool()) {\n      builder.setPool(proto.getPool());\n    }\n    return builder.build();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java"
    }
  }
}