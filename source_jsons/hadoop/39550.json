{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "WorkflowPriorityMappingsManager.java",
  "functionName": "getMappedPriority",
  "functionId": "getMappedPriority___workflowID-String__queue-CSQueue",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/WorkflowPriorityMappingsManager.java",
  "functionStartLine": 162,
  "functionEndLine": 176,
  "numCommitsSeen": 2,
  "timeTaken": 1227,
  "changeHistory": [
    "5462d2176f7a64b236f06700cd247f946798cb26"
  ],
  "changeHistoryShort": {
    "5462d2176f7a64b236f06700cd247f946798cb26": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5462d2176f7a64b236f06700cd247f946798cb26": {
      "type": "Yintroduced",
      "commitMessage": "YARN-9760. Support configuring application priorities on a workflow level. Contributed by Varun Saxena\n",
      "commitDate": "08/10/19 11:20 AM",
      "commitName": "5462d2176f7a64b236f06700cd247f946798cb26",
      "commitAuthor": "Jonathan Hung",
      "diff": "@@ -0,0 +1,15 @@\n+  public Priority getMappedPriority(String workflowID, CSQueue queue) {\n+    // Recursively fetch the priority mapping for the given workflow tracing\n+    // up the queue hierarchy until the first match.\n+    if (queue.equals(scheduler.getRootQueue())) {\n+      return null;\n+    }\n+    String queuePath \u003d queue.getQueuePath();\n+    if (priorityMappings.containsKey(queuePath)\n+        \u0026\u0026 priorityMappings.get(queuePath).containsKey(workflowID)) {\n+      return priorityMappings.get(queuePath).get(workflowID).priority;\n+    } else {\n+      queue \u003d queue.getParent();\n+      return getMappedPriority(workflowID, queue);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Priority getMappedPriority(String workflowID, CSQueue queue) {\n    // Recursively fetch the priority mapping for the given workflow tracing\n    // up the queue hierarchy until the first match.\n    if (queue.equals(scheduler.getRootQueue())) {\n      return null;\n    }\n    String queuePath \u003d queue.getQueuePath();\n    if (priorityMappings.containsKey(queuePath)\n        \u0026\u0026 priorityMappings.get(queuePath).containsKey(workflowID)) {\n      return priorityMappings.get(queuePath).get(workflowID).priority;\n    } else {\n      queue \u003d queue.getParent();\n      return getMappedPriority(workflowID, queue);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/WorkflowPriorityMappingsManager.java"
    }
  }
}