{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ZKPathDumper.java",
  "functionName": "expand",
  "functionId": "expand___builder-StringBuilder__path-String__indent-int",
  "sourceFilePath": "hadoop-common-project/hadoop-registry/src/main/java/org/apache/hadoop/registry/client/impl/zk/ZKPathDumper.java",
  "functionStartLine": 81,
  "functionEndLine": 120,
  "numCommitsSeen": 2,
  "timeTaken": 1042,
  "changeHistory": [
    "e2a9fa8448e2aac34c318260e425786a6c8ca2ae",
    "6a326711aa27e84fd4c53937afc5c41a746ec65a"
  ],
  "changeHistoryShort": {
    "e2a9fa8448e2aac34c318260e425786a6c8ca2ae": "Yfilerename",
    "6a326711aa27e84fd4c53937afc5c41a746ec65a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e2a9fa8448e2aac34c318260e425786a6c8ca2ae": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-15821. Move YARN Registry to Hadoop Registry.\n              Contributed by Íñigo Goiri\n",
      "commitDate": "19/10/18 4:46 PM",
      "commitName": "e2a9fa8448e2aac34c318260e425786a6c8ca2ae",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "19/10/18 1:57 PM",
      "commitNameOld": "00254d7b8c714ae2000d0934d260b23458033529",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 0.12,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void expand(StringBuilder builder,\n      String path,\n      int indent) {\n    try {\n      GetChildrenBuilder childrenBuilder \u003d curator.getChildren();\n      List\u003cString\u003e children \u003d childrenBuilder.forPath(path);\n      for (String child : children) {\n        String childPath \u003d path + \"/\" + child;\n        String body;\n        Stat stat \u003d curator.checkExists().forPath(childPath);\n        StringBuilder bodyBuilder \u003d new StringBuilder(256);\n        bodyBuilder.append(\"  [\")\n                          .append(stat.getDataLength())\n                          .append(\"]\");\n        if (stat.getEphemeralOwner() \u003e 0) {\n          bodyBuilder.append(\"*\");\n        }\n        if (verbose) {\n          // verbose: extract ACLs\n          builder.append(\" -- \");\n          List\u003cACL\u003e acls \u003d\n              curator.getACL().forPath(childPath);\n          for (ACL acl : acls) {\n            builder.append(RegistrySecurity.aclToString(acl));\n            builder.append(\" \");\n          }\n        }\n        body \u003d bodyBuilder.toString();\n        // print each child\n        append(builder, indent, \u0027 \u0027);\n        builder.append(\u0027/\u0027).append(child);\n        builder.append(body);\n        builder.append(\u0027\\n\u0027);\n        // recurse\n        expand(builder, childPath, indent + INDENT);\n      }\n    } catch (Exception e) {\n      builder.append(e.toString()).append(\"\\n\");\n    }\n  }",
      "path": "hadoop-common-project/hadoop-registry/src/main/java/org/apache/hadoop/registry/client/impl/zk/ZKPathDumper.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-registry/src/main/java/org/apache/hadoop/registry/client/impl/zk/ZKPathDumper.java",
        "newPath": "hadoop-common-project/hadoop-registry/src/main/java/org/apache/hadoop/registry/client/impl/zk/ZKPathDumper.java"
      }
    },
    "6a326711aa27e84fd4c53937afc5c41a746ec65a": {
      "type": "Yintroduced",
      "commitMessage": "YARN-913 service registry: YARN-2652 add hadoop-yarn-registry package under hadoop-yarn\n",
      "commitDate": "08/10/14 1:02 PM",
      "commitName": "6a326711aa27e84fd4c53937afc5c41a746ec65a",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,40 @@\n+  private void expand(StringBuilder builder,\n+      String path,\n+      int indent) {\n+    try {\n+      GetChildrenBuilder childrenBuilder \u003d curator.getChildren();\n+      List\u003cString\u003e children \u003d childrenBuilder.forPath(path);\n+      for (String child : children) {\n+        String childPath \u003d path + \"/\" + child;\n+        String body;\n+        Stat stat \u003d curator.checkExists().forPath(childPath);\n+        StringBuilder bodyBuilder \u003d new StringBuilder(256);\n+        bodyBuilder.append(\"  [\")\n+                          .append(stat.getDataLength())\n+                          .append(\"]\");\n+        if (stat.getEphemeralOwner() \u003e 0) {\n+          bodyBuilder.append(\"*\");\n+        }\n+        if (verbose) {\n+          // verbose: extract ACLs\n+          builder.append(\" -- \");\n+          List\u003cACL\u003e acls \u003d\n+              curator.getACL().forPath(childPath);\n+          for (ACL acl : acls) {\n+            builder.append(RegistrySecurity.aclToString(acl));\n+            builder.append(\" \");\n+          }\n+        }\n+        body \u003d bodyBuilder.toString();\n+        // print each child\n+        append(builder, indent, \u0027 \u0027);\n+        builder.append(\u0027/\u0027).append(child);\n+        builder.append(body);\n+        builder.append(\u0027\\n\u0027);\n+        // recurse\n+        expand(builder, childPath, indent + INDENT);\n+      }\n+    } catch (Exception e) {\n+      builder.append(e.toString()).append(\"\\n\");\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void expand(StringBuilder builder,\n      String path,\n      int indent) {\n    try {\n      GetChildrenBuilder childrenBuilder \u003d curator.getChildren();\n      List\u003cString\u003e children \u003d childrenBuilder.forPath(path);\n      for (String child : children) {\n        String childPath \u003d path + \"/\" + child;\n        String body;\n        Stat stat \u003d curator.checkExists().forPath(childPath);\n        StringBuilder bodyBuilder \u003d new StringBuilder(256);\n        bodyBuilder.append(\"  [\")\n                          .append(stat.getDataLength())\n                          .append(\"]\");\n        if (stat.getEphemeralOwner() \u003e 0) {\n          bodyBuilder.append(\"*\");\n        }\n        if (verbose) {\n          // verbose: extract ACLs\n          builder.append(\" -- \");\n          List\u003cACL\u003e acls \u003d\n              curator.getACL().forPath(childPath);\n          for (ACL acl : acls) {\n            builder.append(RegistrySecurity.aclToString(acl));\n            builder.append(\" \");\n          }\n        }\n        body \u003d bodyBuilder.toString();\n        // print each child\n        append(builder, indent, \u0027 \u0027);\n        builder.append(\u0027/\u0027).append(child);\n        builder.append(body);\n        builder.append(\u0027\\n\u0027);\n        // recurse\n        expand(builder, childPath, indent + INDENT);\n      }\n    } catch (Exception e) {\n      builder.append(e.toString()).append(\"\\n\");\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-registry/src/main/java/org/apache/hadoop/registry/client/impl/zk/ZKPathDumper.java"
    }
  }
}