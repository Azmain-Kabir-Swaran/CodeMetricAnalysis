{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "MultipleOutputs.java",
  "functionName": "getContext",
  "functionId": "getContext___nameOutput-String",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/output/MultipleOutputs.java",
  "functionStartLine": 507,
  "functionEndLine": 527,
  "numCommitsSeen": 8,
  "timeTaken": 4527,
  "changeHistory": [
    "bd69fb2d44403e930d1fc0868ed1dd2a49dd9659",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "bd69fb2d44403e930d1fc0868ed1dd2a49dd9659": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bd69fb2d44403e930d1fc0868ed1dd2a49dd9659": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5800. Use Job#getInstance instead of deprecated constructors. (aajisaka)\n",
      "commitDate": "03/02/15 2:30 PM",
      "commitName": "bd69fb2d44403e930d1fc0868ed1dd2a49dd9659",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "11/10/12 10:21 AM",
      "commitNameOld": "f174adfc1526b266ec8263c6f0f49f9a7d2031ff",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 845.21,
      "commitsBetweenForRepo": 5748,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n   private TaskAttemptContext getContext(String nameOutput) throws IOException {\n       \n     TaskAttemptContext taskContext \u003d taskContexts.get(nameOutput);\n     \n     if (taskContext !\u003d null) {\n         return taskContext;\n     }\n     \n     // The following trick leverages the instantiation of a record writer via\n     // the job thus supporting arbitrary output formats.\n-    Job job \u003d new Job(context.getConfiguration());\n+    Job job \u003d Job.getInstance(context.getConfiguration());\n     job.setOutputFormatClass(getNamedOutputFormatClass(context, nameOutput));\n     job.setOutputKeyClass(getNamedOutputKeyClass(context, nameOutput));\n     job.setOutputValueClass(getNamedOutputValueClass(context, nameOutput));\n     taskContext \u003d new TaskAttemptContextImpl(job.getConfiguration(), context\n         .getTaskAttemptID(), new WrappedStatusReporter(context));\n \n     taskContexts.put(nameOutput, taskContext);\n \n     return taskContext;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private TaskAttemptContext getContext(String nameOutput) throws IOException {\n      \n    TaskAttemptContext taskContext \u003d taskContexts.get(nameOutput);\n    \n    if (taskContext !\u003d null) {\n        return taskContext;\n    }\n    \n    // The following trick leverages the instantiation of a record writer via\n    // the job thus supporting arbitrary output formats.\n    Job job \u003d Job.getInstance(context.getConfiguration());\n    job.setOutputFormatClass(getNamedOutputFormatClass(context, nameOutput));\n    job.setOutputKeyClass(getNamedOutputKeyClass(context, nameOutput));\n    job.setOutputValueClass(getNamedOutputValueClass(context, nameOutput));\n    taskContext \u003d new TaskAttemptContextImpl(job.getConfiguration(), context\n        .getTaskAttemptID(), new WrappedStatusReporter(context));\n\n    taskContexts.put(nameOutput, taskContext);\n\n    return taskContext;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/output/MultipleOutputs.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private TaskAttemptContext getContext(String nameOutput) throws IOException {\n      \n    TaskAttemptContext taskContext \u003d taskContexts.get(nameOutput);\n    \n    if (taskContext !\u003d null) {\n        return taskContext;\n    }\n    \n    // The following trick leverages the instantiation of a record writer via\n    // the job thus supporting arbitrary output formats.\n    Job job \u003d new Job(context.getConfiguration());\n    job.setOutputFormatClass(getNamedOutputFormatClass(context, nameOutput));\n    job.setOutputKeyClass(getNamedOutputKeyClass(context, nameOutput));\n    job.setOutputValueClass(getNamedOutputValueClass(context, nameOutput));\n    taskContext \u003d new TaskAttemptContextImpl(job.getConfiguration(), context\n        .getTaskAttemptID(), new WrappedStatusReporter(context));\n\n    taskContexts.put(nameOutput, taskContext);\n\n    return taskContext;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/output/MultipleOutputs.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/output/MultipleOutputs.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/output/MultipleOutputs.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private TaskAttemptContext getContext(String nameOutput) throws IOException {\n      \n    TaskAttemptContext taskContext \u003d taskContexts.get(nameOutput);\n    \n    if (taskContext !\u003d null) {\n        return taskContext;\n    }\n    \n    // The following trick leverages the instantiation of a record writer via\n    // the job thus supporting arbitrary output formats.\n    Job job \u003d new Job(context.getConfiguration());\n    job.setOutputFormatClass(getNamedOutputFormatClass(context, nameOutput));\n    job.setOutputKeyClass(getNamedOutputKeyClass(context, nameOutput));\n    job.setOutputValueClass(getNamedOutputValueClass(context, nameOutput));\n    taskContext \u003d new TaskAttemptContextImpl(job.getConfiguration(), context\n        .getTaskAttemptID(), new WrappedStatusReporter(context));\n\n    taskContexts.put(nameOutput, taskContext);\n\n    return taskContext;\n  }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/output/MultipleOutputs.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/java/org/apache/hadoop/mapreduce/lib/output/MultipleOutputs.java",
        "newPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/output/MultipleOutputs.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,21 @@\n+  private TaskAttemptContext getContext(String nameOutput) throws IOException {\n+      \n+    TaskAttemptContext taskContext \u003d taskContexts.get(nameOutput);\n+    \n+    if (taskContext !\u003d null) {\n+        return taskContext;\n+    }\n+    \n+    // The following trick leverages the instantiation of a record writer via\n+    // the job thus supporting arbitrary output formats.\n+    Job job \u003d new Job(context.getConfiguration());\n+    job.setOutputFormatClass(getNamedOutputFormatClass(context, nameOutput));\n+    job.setOutputKeyClass(getNamedOutputKeyClass(context, nameOutput));\n+    job.setOutputValueClass(getNamedOutputValueClass(context, nameOutput));\n+    taskContext \u003d new TaskAttemptContextImpl(job.getConfiguration(), context\n+        .getTaskAttemptID(), new WrappedStatusReporter(context));\n+\n+    taskContexts.put(nameOutput, taskContext);\n+\n+    return taskContext;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private TaskAttemptContext getContext(String nameOutput) throws IOException {\n      \n    TaskAttemptContext taskContext \u003d taskContexts.get(nameOutput);\n    \n    if (taskContext !\u003d null) {\n        return taskContext;\n    }\n    \n    // The following trick leverages the instantiation of a record writer via\n    // the job thus supporting arbitrary output formats.\n    Job job \u003d new Job(context.getConfiguration());\n    job.setOutputFormatClass(getNamedOutputFormatClass(context, nameOutput));\n    job.setOutputKeyClass(getNamedOutputKeyClass(context, nameOutput));\n    job.setOutputValueClass(getNamedOutputValueClass(context, nameOutput));\n    taskContext \u003d new TaskAttemptContextImpl(job.getConfiguration(), context\n        .getTaskAttemptID(), new WrappedStatusReporter(context));\n\n    taskContexts.put(nameOutput, taskContext);\n\n    return taskContext;\n  }",
      "path": "mapreduce/src/java/org/apache/hadoop/mapreduce/lib/output/MultipleOutputs.java"
    }
  }
}