{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HtmlQuoting.java",
  "functionName": "unquoteHtmlChars",
  "functionId": "unquoteHtmlChars___item-String",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HtmlQuoting.java",
  "functionStartLine": 170,
  "functionEndLine": 212,
  "numCommitsSeen": 7,
  "timeTaken": 795,
  "changeHistory": [
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "9de98c42cb68f5bf92a16653f2e97b6e24896e5f",
    "366b1b1dd6f1ade1996c7c0eec1aca185c68d6cb"
  ],
  "changeHistoryShort": {
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "9de98c42cb68f5bf92a16653f2e97b6e24896e5f": "Ybodychange",
    "366b1b1dd6f1ade1996c7c0eec1aca185c68d6cb": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static String unquoteHtmlChars(String item) {\n    if (item \u003d\u003d null) {\n      return null;\n    }\n    int next \u003d item.indexOf(\u0027\u0026\u0027);\n    // nothing was quoted\n    if (next \u003d\u003d -1) {\n      return item;\n    }\n    int len \u003d item.length();\n    int posn \u003d 0;\n    StringBuilder buffer \u003d new StringBuilder();\n    while (next !\u003d -1) {\n      buffer.append(item.substring(posn, next));\n      if (item.startsWith(\"\u0026amp;\", next)) {\n        buffer.append(\u0027\u0026\u0027);\n        next +\u003d 5;\n      } else if (item.startsWith(\"\u0026apos;\", next)) {\n        buffer.append(\u0027\\\u0027\u0027);\n        next +\u003d 6;        \n      } else if (item.startsWith(\"\u0026gt;\", next)) {\n        buffer.append(\u0027\u003e\u0027);\n        next +\u003d 4;\n      } else if (item.startsWith(\"\u0026lt;\", next)) {\n        buffer.append(\u0027\u003c\u0027);\n        next +\u003d 4;\n      } else if (item.startsWith(\"\u0026quot;\", next)) {\n        buffer.append(\u0027\"\u0027);\n        next +\u003d 6;\n      } else {\n        int end \u003d item.indexOf(\u0027;\u0027, next)+1;\n        if (end \u003d\u003d 0) {\n          end \u003d len;\n        }\n        throw new IllegalArgumentException(\"Bad HTML quoting for \" + \n                                           item.substring(next,end));\n      }\n      posn \u003d next;\n      next \u003d item.indexOf(\u0027\u0026\u0027, posn);\n    }\n    buffer.append(item.substring(posn, len));\n    return buffer.toString();\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HtmlQuoting.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/http/HtmlQuoting.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HtmlQuoting.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static String unquoteHtmlChars(String item) {\n    if (item \u003d\u003d null) {\n      return null;\n    }\n    int next \u003d item.indexOf(\u0027\u0026\u0027);\n    // nothing was quoted\n    if (next \u003d\u003d -1) {\n      return item;\n    }\n    int len \u003d item.length();\n    int posn \u003d 0;\n    StringBuilder buffer \u003d new StringBuilder();\n    while (next !\u003d -1) {\n      buffer.append(item.substring(posn, next));\n      if (item.startsWith(\"\u0026amp;\", next)) {\n        buffer.append(\u0027\u0026\u0027);\n        next +\u003d 5;\n      } else if (item.startsWith(\"\u0026apos;\", next)) {\n        buffer.append(\u0027\\\u0027\u0027);\n        next +\u003d 6;        \n      } else if (item.startsWith(\"\u0026gt;\", next)) {\n        buffer.append(\u0027\u003e\u0027);\n        next +\u003d 4;\n      } else if (item.startsWith(\"\u0026lt;\", next)) {\n        buffer.append(\u0027\u003c\u0027);\n        next +\u003d 4;\n      } else if (item.startsWith(\"\u0026quot;\", next)) {\n        buffer.append(\u0027\"\u0027);\n        next +\u003d 6;\n      } else {\n        int end \u003d item.indexOf(\u0027;\u0027, next)+1;\n        if (end \u003d\u003d 0) {\n          end \u003d len;\n        }\n        throw new IllegalArgumentException(\"Bad HTML quoting for \" + \n                                           item.substring(next,end));\n      }\n      posn \u003d next;\n      next \u003d item.indexOf(\u0027\u0026\u0027, posn);\n    }\n    buffer.append(item.substring(posn, len));\n    return buffer.toString();\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/http/HtmlQuoting.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/http/HtmlQuoting.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/http/HtmlQuoting.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static String unquoteHtmlChars(String item) {\n    if (item \u003d\u003d null) {\n      return null;\n    }\n    int next \u003d item.indexOf(\u0027\u0026\u0027);\n    // nothing was quoted\n    if (next \u003d\u003d -1) {\n      return item;\n    }\n    int len \u003d item.length();\n    int posn \u003d 0;\n    StringBuilder buffer \u003d new StringBuilder();\n    while (next !\u003d -1) {\n      buffer.append(item.substring(posn, next));\n      if (item.startsWith(\"\u0026amp;\", next)) {\n        buffer.append(\u0027\u0026\u0027);\n        next +\u003d 5;\n      } else if (item.startsWith(\"\u0026apos;\", next)) {\n        buffer.append(\u0027\\\u0027\u0027);\n        next +\u003d 6;        \n      } else if (item.startsWith(\"\u0026gt;\", next)) {\n        buffer.append(\u0027\u003e\u0027);\n        next +\u003d 4;\n      } else if (item.startsWith(\"\u0026lt;\", next)) {\n        buffer.append(\u0027\u003c\u0027);\n        next +\u003d 4;\n      } else if (item.startsWith(\"\u0026quot;\", next)) {\n        buffer.append(\u0027\"\u0027);\n        next +\u003d 6;\n      } else {\n        int end \u003d item.indexOf(\u0027;\u0027, next)+1;\n        if (end \u003d\u003d 0) {\n          end \u003d len;\n        }\n        throw new IllegalArgumentException(\"Bad HTML quoting for \" + \n                                           item.substring(next,end));\n      }\n      posn \u003d next;\n      next \u003d item.indexOf(\u0027\u0026\u0027, posn);\n    }\n    buffer.append(item.substring(posn, len));\n    return buffer.toString();\n  }",
      "path": "common/src/java/org/apache/hadoop/http/HtmlQuoting.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/http/HtmlQuoting.java",
        "newPath": "common/src/java/org/apache/hadoop/http/HtmlQuoting.java"
      }
    },
    "9de98c42cb68f5bf92a16653f2e97b6e24896e5f": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-6281. Avoid null pointer exceptions when the jsps don\u0027t have \nparamaters (omalley)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@818543 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/09/09 9:47 AM",
      "commitName": "9de98c42cb68f5bf92a16653f2e97b6e24896e5f",
      "commitAuthor": "Owen O\u0027Malley",
      "commitDateOld": "18/09/09 9:31 AM",
      "commitNameOld": "366b1b1dd6f1ade1996c7c0eec1aca185c68d6cb",
      "commitAuthorOld": "Owen O\u0027Malley",
      "daysBetweenCommits": 6.01,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,43 @@\n   public static String unquoteHtmlChars(String item) {\n+    if (item \u003d\u003d null) {\n+      return null;\n+    }\n     int next \u003d item.indexOf(\u0027\u0026\u0027);\n     // nothing was quoted\n     if (next \u003d\u003d -1) {\n       return item;\n     }\n     int len \u003d item.length();\n     int posn \u003d 0;\n     StringBuilder buffer \u003d new StringBuilder();\n     while (next !\u003d -1) {\n       buffer.append(item.substring(posn, next));\n       if (item.startsWith(\"\u0026amp;\", next)) {\n         buffer.append(\u0027\u0026\u0027);\n         next +\u003d 5;\n       } else if (item.startsWith(\"\u0026apos;\", next)) {\n         buffer.append(\u0027\\\u0027\u0027);\n         next +\u003d 6;        \n       } else if (item.startsWith(\"\u0026gt;\", next)) {\n         buffer.append(\u0027\u003e\u0027);\n         next +\u003d 4;\n       } else if (item.startsWith(\"\u0026lt;\", next)) {\n         buffer.append(\u0027\u003c\u0027);\n         next +\u003d 4;\n       } else if (item.startsWith(\"\u0026quot;\", next)) {\n         buffer.append(\u0027\"\u0027);\n         next +\u003d 6;\n       } else {\n         int end \u003d item.indexOf(\u0027;\u0027, next)+1;\n         if (end \u003d\u003d 0) {\n           end \u003d len;\n         }\n         throw new IllegalArgumentException(\"Bad HTML quoting for \" + \n                                            item.substring(next,end));\n       }\n       posn \u003d next;\n       next \u003d item.indexOf(\u0027\u0026\u0027, posn);\n     }\n     buffer.append(item.substring(posn, len));\n     return buffer.toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static String unquoteHtmlChars(String item) {\n    if (item \u003d\u003d null) {\n      return null;\n    }\n    int next \u003d item.indexOf(\u0027\u0026\u0027);\n    // nothing was quoted\n    if (next \u003d\u003d -1) {\n      return item;\n    }\n    int len \u003d item.length();\n    int posn \u003d 0;\n    StringBuilder buffer \u003d new StringBuilder();\n    while (next !\u003d -1) {\n      buffer.append(item.substring(posn, next));\n      if (item.startsWith(\"\u0026amp;\", next)) {\n        buffer.append(\u0027\u0026\u0027);\n        next +\u003d 5;\n      } else if (item.startsWith(\"\u0026apos;\", next)) {\n        buffer.append(\u0027\\\u0027\u0027);\n        next +\u003d 6;        \n      } else if (item.startsWith(\"\u0026gt;\", next)) {\n        buffer.append(\u0027\u003e\u0027);\n        next +\u003d 4;\n      } else if (item.startsWith(\"\u0026lt;\", next)) {\n        buffer.append(\u0027\u003c\u0027);\n        next +\u003d 4;\n      } else if (item.startsWith(\"\u0026quot;\", next)) {\n        buffer.append(\u0027\"\u0027);\n        next +\u003d 6;\n      } else {\n        int end \u003d item.indexOf(\u0027;\u0027, next)+1;\n        if (end \u003d\u003d 0) {\n          end \u003d len;\n        }\n        throw new IllegalArgumentException(\"Bad HTML quoting for \" + \n                                           item.substring(next,end));\n      }\n      posn \u003d next;\n      next \u003d item.indexOf(\u0027\u0026\u0027, posn);\n    }\n    buffer.append(item.substring(posn, len));\n    return buffer.toString();\n  }",
      "path": "src/java/org/apache/hadoop/http/HtmlQuoting.java",
      "extendedDetails": {}
    },
    "366b1b1dd6f1ade1996c7c0eec1aca185c68d6cb": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-6151. Added a input filter to all of the http servlets that quotes\nhtml characters in the parameters, to prevent cross site scripting \nattacks. (omalley)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@816703 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/09/09 9:31 AM",
      "commitName": "366b1b1dd6f1ade1996c7c0eec1aca185c68d6cb",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,40 @@\n+  public static String unquoteHtmlChars(String item) {\n+    int next \u003d item.indexOf(\u0027\u0026\u0027);\n+    // nothing was quoted\n+    if (next \u003d\u003d -1) {\n+      return item;\n+    }\n+    int len \u003d item.length();\n+    int posn \u003d 0;\n+    StringBuilder buffer \u003d new StringBuilder();\n+    while (next !\u003d -1) {\n+      buffer.append(item.substring(posn, next));\n+      if (item.startsWith(\"\u0026amp;\", next)) {\n+        buffer.append(\u0027\u0026\u0027);\n+        next +\u003d 5;\n+      } else if (item.startsWith(\"\u0026apos;\", next)) {\n+        buffer.append(\u0027\\\u0027\u0027);\n+        next +\u003d 6;        \n+      } else if (item.startsWith(\"\u0026gt;\", next)) {\n+        buffer.append(\u0027\u003e\u0027);\n+        next +\u003d 4;\n+      } else if (item.startsWith(\"\u0026lt;\", next)) {\n+        buffer.append(\u0027\u003c\u0027);\n+        next +\u003d 4;\n+      } else if (item.startsWith(\"\u0026quot;\", next)) {\n+        buffer.append(\u0027\"\u0027);\n+        next +\u003d 6;\n+      } else {\n+        int end \u003d item.indexOf(\u0027;\u0027, next)+1;\n+        if (end \u003d\u003d 0) {\n+          end \u003d len;\n+        }\n+        throw new IllegalArgumentException(\"Bad HTML quoting for \" + \n+                                           item.substring(next,end));\n+      }\n+      posn \u003d next;\n+      next \u003d item.indexOf(\u0027\u0026\u0027, posn);\n+    }\n+    buffer.append(item.substring(posn, len));\n+    return buffer.toString();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static String unquoteHtmlChars(String item) {\n    int next \u003d item.indexOf(\u0027\u0026\u0027);\n    // nothing was quoted\n    if (next \u003d\u003d -1) {\n      return item;\n    }\n    int len \u003d item.length();\n    int posn \u003d 0;\n    StringBuilder buffer \u003d new StringBuilder();\n    while (next !\u003d -1) {\n      buffer.append(item.substring(posn, next));\n      if (item.startsWith(\"\u0026amp;\", next)) {\n        buffer.append(\u0027\u0026\u0027);\n        next +\u003d 5;\n      } else if (item.startsWith(\"\u0026apos;\", next)) {\n        buffer.append(\u0027\\\u0027\u0027);\n        next +\u003d 6;        \n      } else if (item.startsWith(\"\u0026gt;\", next)) {\n        buffer.append(\u0027\u003e\u0027);\n        next +\u003d 4;\n      } else if (item.startsWith(\"\u0026lt;\", next)) {\n        buffer.append(\u0027\u003c\u0027);\n        next +\u003d 4;\n      } else if (item.startsWith(\"\u0026quot;\", next)) {\n        buffer.append(\u0027\"\u0027);\n        next +\u003d 6;\n      } else {\n        int end \u003d item.indexOf(\u0027;\u0027, next)+1;\n        if (end \u003d\u003d 0) {\n          end \u003d len;\n        }\n        throw new IllegalArgumentException(\"Bad HTML quoting for \" + \n                                           item.substring(next,end));\n      }\n      posn \u003d next;\n      next \u003d item.indexOf(\u0027\u0026\u0027, posn);\n    }\n    buffer.append(item.substring(posn, len));\n    return buffer.toString();\n  }",
      "path": "src/java/org/apache/hadoop/http/HtmlQuoting.java"
    }
  }
}