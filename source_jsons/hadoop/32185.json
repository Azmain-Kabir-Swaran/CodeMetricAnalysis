{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DirectoryCollection.java",
  "functionName": "createNonExistentDirs",
  "functionId": "createNonExistentDirs___localFs-FileContext__perm-FsPermission",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/DirectoryCollection.java",
  "functionStartLine": 376,
  "functionEndLine": 407,
  "numCommitsSeen": 18,
  "timeTaken": 2276,
  "changeHistory": [
    "f9a0e2338150f1bd3ba2c29f76979183fd3ed80c",
    "ce9c006430d13a28bc1ca57c5c70cc1b7cba1692",
    "6f2028bd1514d90b831f889fd0ee7f2ba5c15000",
    "41ebf4fb24241e9b09bf29965630a7a73af129f3"
  ],
  "changeHistoryShort": {
    "f9a0e2338150f1bd3ba2c29f76979183fd3ed80c": "Ybodychange",
    "ce9c006430d13a28bc1ca57c5c70cc1b7cba1692": "Ymultichange(Ymodifierchange,Ybodychange)",
    "6f2028bd1514d90b831f889fd0ee7f2ba5c15000": "Ybodychange",
    "41ebf4fb24241e9b09bf29965630a7a73af129f3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f9a0e2338150f1bd3ba2c29f76979183fd3ed80c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3254. HealthReport should include disk full information. Contributed by Suma Shivaprasad.\n",
      "commitDate": "17/08/17 2:37 AM",
      "commitName": "f9a0e2338150f1bd3ba2c29f76979183fd3ed80c",
      "commitAuthor": "Sunil G",
      "commitDateOld": "10/04/17 2:56 PM",
      "commitNameOld": "e9ac61cc0e55d1a0b132c795047e959c761dc3be",
      "commitAuthorOld": "Daniel Templeton",
      "daysBetweenCommits": 128.49,
      "commitsBetweenForRepo": 732,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,32 @@\n   boolean createNonExistentDirs(FileContext localFs,\n       FsPermission perm) {\n     boolean failed \u003d false;\n     List\u003cString\u003e localDirectories \u003d null;\n     this.readLock.lock();\n     try {\n       localDirectories \u003d new ArrayList\u003c\u003e(localDirs);\n     } finally {\n       this.readLock.unlock();\n     }\n     for (final String dir : localDirectories) {\n       try {\n         createDir(localFs, new Path(dir), perm);\n       } catch (IOException e) {\n         LOG.warn(\"Unable to create directory \" + dir + \" error \" +\n             e.getMessage() + \", removing from the list of valid directories.\");\n         this.writeLock.lock();\n         try {\n           localDirs.remove(dir);\n           errorDirs.add(dir);\n+          directoryErrorInfo.put(dir,\n+              new DiskErrorInformation(DiskErrorCause.OTHER,\n+                  \"Cannot create directory : \" + dir + \", error \" + e.getMessage()));\n           numFailures++;\n         } finally {\n           this.writeLock.unlock();\n         }\n         failed \u003d true;\n       }\n     }\n     return !failed;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  boolean createNonExistentDirs(FileContext localFs,\n      FsPermission perm) {\n    boolean failed \u003d false;\n    List\u003cString\u003e localDirectories \u003d null;\n    this.readLock.lock();\n    try {\n      localDirectories \u003d new ArrayList\u003c\u003e(localDirs);\n    } finally {\n      this.readLock.unlock();\n    }\n    for (final String dir : localDirectories) {\n      try {\n        createDir(localFs, new Path(dir), perm);\n      } catch (IOException e) {\n        LOG.warn(\"Unable to create directory \" + dir + \" error \" +\n            e.getMessage() + \", removing from the list of valid directories.\");\n        this.writeLock.lock();\n        try {\n          localDirs.remove(dir);\n          errorDirs.add(dir);\n          directoryErrorInfo.put(dir,\n              new DiskErrorInformation(DiskErrorCause.OTHER,\n                  \"Cannot create directory : \" + dir + \", error \" + e.getMessage()));\n          numFailures++;\n        } finally {\n          this.writeLock.unlock();\n        }\n        failed \u003d true;\n      }\n    }\n    return !failed;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/DirectoryCollection.java",
      "extendedDetails": {}
    },
    "ce9c006430d13a28bc1ca57c5c70cc1b7cba1692": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-5214. Fixed locking in DirectoryCollection to avoid hanging NMs when various code-paths hit slow disks. Contributed by Junping Du.\n",
      "commitDate": "05/07/16 4:07 PM",
      "commitName": "ce9c006430d13a28bc1ca57c5c70cc1b7cba1692",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-5214. Fixed locking in DirectoryCollection to avoid hanging NMs when various code-paths hit slow disks. Contributed by Junping Du.\n",
          "commitDate": "05/07/16 4:07 PM",
          "commitName": "ce9c006430d13a28bc1ca57c5c70cc1b7cba1692",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "08/10/15 3:25 PM",
          "commitNameOld": "8d226225d030253152494bda32708377ad0f7af7",
          "commitAuthorOld": "Jason Lowe",
          "daysBetweenCommits": 271.03,
          "commitsBetweenForRepo": 1805,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,29 @@\n-  synchronized boolean createNonExistentDirs(FileContext localFs,\n+  boolean createNonExistentDirs(FileContext localFs,\n       FsPermission perm) {\n     boolean failed \u003d false;\n-    for (final String dir : localDirs) {\n+    List\u003cString\u003e localDirectories \u003d null;\n+    this.readLock.lock();\n+    try {\n+      localDirectories \u003d new ArrayList\u003c\u003e(localDirs);\n+    } finally {\n+      this.readLock.unlock();\n+    }\n+    for (final String dir : localDirectories) {\n       try {\n         createDir(localFs, new Path(dir), perm);\n       } catch (IOException e) {\n         LOG.warn(\"Unable to create directory \" + dir + \" error \" +\n             e.getMessage() + \", removing from the list of valid directories.\");\n-        localDirs.remove(dir);\n-        errorDirs.add(dir);\n-        numFailures++;\n+        this.writeLock.lock();\n+        try {\n+          localDirs.remove(dir);\n+          errorDirs.add(dir);\n+          numFailures++;\n+        } finally {\n+          this.writeLock.unlock();\n+        }\n         failed \u003d true;\n       }\n     }\n     return !failed;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  boolean createNonExistentDirs(FileContext localFs,\n      FsPermission perm) {\n    boolean failed \u003d false;\n    List\u003cString\u003e localDirectories \u003d null;\n    this.readLock.lock();\n    try {\n      localDirectories \u003d new ArrayList\u003c\u003e(localDirs);\n    } finally {\n      this.readLock.unlock();\n    }\n    for (final String dir : localDirectories) {\n      try {\n        createDir(localFs, new Path(dir), perm);\n      } catch (IOException e) {\n        LOG.warn(\"Unable to create directory \" + dir + \" error \" +\n            e.getMessage() + \", removing from the list of valid directories.\");\n        this.writeLock.lock();\n        try {\n          localDirs.remove(dir);\n          errorDirs.add(dir);\n          numFailures++;\n        } finally {\n          this.writeLock.unlock();\n        }\n        failed \u003d true;\n      }\n    }\n    return !failed;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/DirectoryCollection.java",
          "extendedDetails": {
            "oldValue": "[synchronized]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-5214. Fixed locking in DirectoryCollection to avoid hanging NMs when various code-paths hit slow disks. Contributed by Junping Du.\n",
          "commitDate": "05/07/16 4:07 PM",
          "commitName": "ce9c006430d13a28bc1ca57c5c70cc1b7cba1692",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "08/10/15 3:25 PM",
          "commitNameOld": "8d226225d030253152494bda32708377ad0f7af7",
          "commitAuthorOld": "Jason Lowe",
          "daysBetweenCommits": 271.03,
          "commitsBetweenForRepo": 1805,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,29 @@\n-  synchronized boolean createNonExistentDirs(FileContext localFs,\n+  boolean createNonExistentDirs(FileContext localFs,\n       FsPermission perm) {\n     boolean failed \u003d false;\n-    for (final String dir : localDirs) {\n+    List\u003cString\u003e localDirectories \u003d null;\n+    this.readLock.lock();\n+    try {\n+      localDirectories \u003d new ArrayList\u003c\u003e(localDirs);\n+    } finally {\n+      this.readLock.unlock();\n+    }\n+    for (final String dir : localDirectories) {\n       try {\n         createDir(localFs, new Path(dir), perm);\n       } catch (IOException e) {\n         LOG.warn(\"Unable to create directory \" + dir + \" error \" +\n             e.getMessage() + \", removing from the list of valid directories.\");\n-        localDirs.remove(dir);\n-        errorDirs.add(dir);\n-        numFailures++;\n+        this.writeLock.lock();\n+        try {\n+          localDirs.remove(dir);\n+          errorDirs.add(dir);\n+          numFailures++;\n+        } finally {\n+          this.writeLock.unlock();\n+        }\n         failed \u003d true;\n       }\n     }\n     return !failed;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  boolean createNonExistentDirs(FileContext localFs,\n      FsPermission perm) {\n    boolean failed \u003d false;\n    List\u003cString\u003e localDirectories \u003d null;\n    this.readLock.lock();\n    try {\n      localDirectories \u003d new ArrayList\u003c\u003e(localDirs);\n    } finally {\n      this.readLock.unlock();\n    }\n    for (final String dir : localDirectories) {\n      try {\n        createDir(localFs, new Path(dir), perm);\n      } catch (IOException e) {\n        LOG.warn(\"Unable to create directory \" + dir + \" error \" +\n            e.getMessage() + \", removing from the list of valid directories.\");\n        this.writeLock.lock();\n        try {\n          localDirs.remove(dir);\n          errorDirs.add(dir);\n          numFailures++;\n        } finally {\n          this.writeLock.unlock();\n        }\n        failed \u003d true;\n      }\n    }\n    return !failed;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/DirectoryCollection.java",
          "extendedDetails": {}
        }
      ]
    },
    "6f2028bd1514d90b831f889fd0ee7f2ba5c15000": {
      "type": "Ybodychange",
      "commitMessage": "YARN-90. NodeManager should identify failed disks becoming good again. Contributed by Varun Vasudev\n",
      "commitDate": "21/10/14 10:31 AM",
      "commitName": "6f2028bd1514d90b831f889fd0ee7f2ba5c15000",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "07/03/14 4:52 PM",
      "commitNameOld": "0b1304d098169bda3c7eadf9a07dd0b9e87ab150",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 227.69,
      "commitsBetweenForRepo": 1802,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   synchronized boolean createNonExistentDirs(FileContext localFs,\n       FsPermission perm) {\n     boolean failed \u003d false;\n     for (final String dir : localDirs) {\n       try {\n         createDir(localFs, new Path(dir), perm);\n       } catch (IOException e) {\n         LOG.warn(\"Unable to create directory \" + dir + \" error \" +\n             e.getMessage() + \", removing from the list of valid directories.\");\n         localDirs.remove(dir);\n-        failedDirs.add(dir);\n+        errorDirs.add(dir);\n         numFailures++;\n         failed \u003d true;\n       }\n     }\n     return !failed;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized boolean createNonExistentDirs(FileContext localFs,\n      FsPermission perm) {\n    boolean failed \u003d false;\n    for (final String dir : localDirs) {\n      try {\n        createDir(localFs, new Path(dir), perm);\n      } catch (IOException e) {\n        LOG.warn(\"Unable to create directory \" + dir + \" error \" +\n            e.getMessage() + \", removing from the list of valid directories.\");\n        localDirs.remove(dir);\n        errorDirs.add(dir);\n        numFailures++;\n        failed \u003d true;\n      }\n    }\n    return !failed;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/DirectoryCollection.java",
      "extendedDetails": {}
    },
    "41ebf4fb24241e9b09bf29965630a7a73af129f3": {
      "type": "Yintroduced",
      "commitMessage": "YARN-106. Nodemanager needs to set permissions of local directories (jlowe via bobby)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1391649 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/09/12 1:50 PM",
      "commitName": "41ebf4fb24241e9b09bf29965630a7a73af129f3",
      "commitAuthor": "Robert Joseph Evans",
      "diff": "@@ -0,0 +1,17 @@\n+  synchronized boolean createNonExistentDirs(FileContext localFs,\n+      FsPermission perm) {\n+    boolean failed \u003d false;\n+    for (final String dir : localDirs) {\n+      try {\n+        createDir(localFs, new Path(dir), perm);\n+      } catch (IOException e) {\n+        LOG.warn(\"Unable to create directory \" + dir + \" error \" +\n+            e.getMessage() + \", removing from the list of valid directories.\");\n+        localDirs.remove(dir);\n+        failedDirs.add(dir);\n+        numFailures++;\n+        failed \u003d true;\n+      }\n+    }\n+    return !failed;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized boolean createNonExistentDirs(FileContext localFs,\n      FsPermission perm) {\n    boolean failed \u003d false;\n    for (final String dir : localDirs) {\n      try {\n        createDir(localFs, new Path(dir), perm);\n      } catch (IOException e) {\n        LOG.warn(\"Unable to create directory \" + dir + \" error \" +\n            e.getMessage() + \", removing from the list of valid directories.\");\n        localDirs.remove(dir);\n        failedDirs.add(dir);\n        numFailures++;\n        failed \u003d true;\n      }\n    }\n    return !failed;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/DirectoryCollection.java"
    }
  }
}