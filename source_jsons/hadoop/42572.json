{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NodesListManager.java",
  "functionName": "refreshNodesForcefully",
  "functionId": "refreshNodesForcefully",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/NodesListManager.java",
  "functionStartLine": 648,
  "functionEndLine": 658,
  "numCommitsSeen": 33,
  "timeTaken": 2788,
  "changeHistory": [
    "d0da13229cf692579c8c9db47a93f6c6255392c8",
    "2a5da97f81d69b481e4d1324a47e64bb55b9407c",
    "1cbcd4a491e6a57d466c2897335614dc6770b475",
    "fad9d7e85b1ba0934ab592daa9d3c9550b2bb501"
  ],
  "changeHistoryShort": {
    "d0da13229cf692579c8c9db47a93f6c6255392c8": "Ybodychange",
    "2a5da97f81d69b481e4d1324a47e64bb55b9407c": "Ybodychange",
    "1cbcd4a491e6a57d466c2897335614dc6770b475": "Ybodychange",
    "fad9d7e85b1ba0934ab592daa9d3c9550b2bb501": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d0da13229cf692579c8c9db47a93f6c6255392c8": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4311. Removing nodes from include and exclude lists will not remove them from decommissioned nodes list. Contributed by Kuhu Shukla\n",
      "commitDate": "05/05/16 7:07 AM",
      "commitName": "d0da13229cf692579c8c9db47a93f6c6255392c8",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "15/04/16 1:36 PM",
      "commitNameOld": "69f3d428d5c3ab0c79cacffc22b1f59408622ae7",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 19.73,
      "commitsBetweenForRepo": 110,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,11 @@\n   public void refreshNodesForcefully() {\n     for (Entry\u003cNodeId, RMNode\u003e entry : rmContext.getRMNodes().entrySet()) {\n       if (entry.getValue().getState() \u003d\u003d NodeState.DECOMMISSIONING) {\n+        RMNodeEventType nodeEventType \u003d\n+            isUntrackedNode(entry.getKey().getHost()) ?\n+            RMNodeEventType.SHUTDOWN : RMNodeEventType.DECOMMISSION;\n         this.rmContext.getDispatcher().getEventHandler().handle(\n-            new RMNodeEvent(entry.getKey(), RMNodeEventType.DECOMMISSION));\n+            new RMNodeEvent(entry.getKey(), nodeEventType));\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void refreshNodesForcefully() {\n    for (Entry\u003cNodeId, RMNode\u003e entry : rmContext.getRMNodes().entrySet()) {\n      if (entry.getValue().getState() \u003d\u003d NodeState.DECOMMISSIONING) {\n        RMNodeEventType nodeEventType \u003d\n            isUntrackedNode(entry.getKey().getHost()) ?\n            RMNodeEventType.SHUTDOWN : RMNodeEventType.DECOMMISSION;\n        this.rmContext.getDispatcher().getEventHandler().handle(\n            new RMNodeEvent(entry.getKey(), nodeEventType));\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/NodesListManager.java",
      "extendedDetails": {}
    },
    "2a5da97f81d69b481e4d1324a47e64bb55b9407c": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"YARN-4311. Removing nodes from include and exclude lists will not remove them from decommissioned nodes list. Contributed by Kuhu Shukla\"\n\nThis reverts commit 1cbcd4a491e6a57d466c2897335614dc6770b475.\n",
      "commitDate": "11/04/16 8:51 AM",
      "commitName": "2a5da97f81d69b481e4d1324a47e64bb55b9407c",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "05/04/16 6:40 AM",
      "commitNameOld": "1cbcd4a491e6a57d466c2897335614dc6770b475",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 6.09,
      "commitsBetweenForRepo": 38,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,8 @@\n   public void refreshNodesForcefully() {\n     for (Entry\u003cNodeId, RMNode\u003e entry : rmContext.getRMNodes().entrySet()) {\n       if (entry.getValue().getState() \u003d\u003d NodeState.DECOMMISSIONING) {\n-        RMNodeEventType nodeEventType \u003d\n-            isUntrackedNode(entry.getKey().getHost()) ?\n-            RMNodeEventType.SHUTDOWN : RMNodeEventType.DECOMMISSION;\n         this.rmContext.getDispatcher().getEventHandler().handle(\n-            new RMNodeEvent(entry.getKey(), nodeEventType));\n+            new RMNodeEvent(entry.getKey(), RMNodeEventType.DECOMMISSION));\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void refreshNodesForcefully() {\n    for (Entry\u003cNodeId, RMNode\u003e entry : rmContext.getRMNodes().entrySet()) {\n      if (entry.getValue().getState() \u003d\u003d NodeState.DECOMMISSIONING) {\n        this.rmContext.getDispatcher().getEventHandler().handle(\n            new RMNodeEvent(entry.getKey(), RMNodeEventType.DECOMMISSION));\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/NodesListManager.java",
      "extendedDetails": {}
    },
    "1cbcd4a491e6a57d466c2897335614dc6770b475": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4311. Removing nodes from include and exclude lists will not remove them from decommissioned nodes list. Contributed by Kuhu Shukla\n",
      "commitDate": "05/04/16 6:40 AM",
      "commitName": "1cbcd4a491e6a57d466c2897335614dc6770b475",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "26/02/16 12:24 PM",
      "commitNameOld": "6b0f813e898cbd14b2ae52ecfed6d30bce8cb6b7",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 38.72,
      "commitsBetweenForRepo": 221,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,11 @@\n   public void refreshNodesForcefully() {\n     for (Entry\u003cNodeId, RMNode\u003e entry : rmContext.getRMNodes().entrySet()) {\n       if (entry.getValue().getState() \u003d\u003d NodeState.DECOMMISSIONING) {\n+        RMNodeEventType nodeEventType \u003d\n+            isUntrackedNode(entry.getKey().getHost()) ?\n+            RMNodeEventType.SHUTDOWN : RMNodeEventType.DECOMMISSION;\n         this.rmContext.getDispatcher().getEventHandler().handle(\n-            new RMNodeEvent(entry.getKey(), RMNodeEventType.DECOMMISSION));\n+            new RMNodeEvent(entry.getKey(), nodeEventType));\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void refreshNodesForcefully() {\n    for (Entry\u003cNodeId, RMNode\u003e entry : rmContext.getRMNodes().entrySet()) {\n      if (entry.getValue().getState() \u003d\u003d NodeState.DECOMMISSIONING) {\n        RMNodeEventType nodeEventType \u003d\n            isUntrackedNode(entry.getKey().getHost()) ?\n            RMNodeEventType.SHUTDOWN : RMNodeEventType.DECOMMISSION;\n        this.rmContext.getDispatcher().getEventHandler().handle(\n            new RMNodeEvent(entry.getKey(), nodeEventType));\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/NodesListManager.java",
      "extendedDetails": {}
    },
    "fad9d7e85b1ba0934ab592daa9d3c9550b2bb501": {
      "type": "Yintroduced",
      "commitMessage": "New parameter of CLI for decommissioning node gracefully in RMAdmin CLI. Contributed by Devaraj K\n",
      "commitDate": "22/04/15 10:07 AM",
      "commitName": "fad9d7e85b1ba0934ab592daa9d3c9550b2bb501",
      "commitAuthor": "Junping Du",
      "diff": "@@ -0,0 +1,8 @@\n+  public void refreshNodesForcefully() {\n+    for (Entry\u003cNodeId, RMNode\u003e entry : rmContext.getRMNodes().entrySet()) {\n+      if (entry.getValue().getState() \u003d\u003d NodeState.DECOMMISSIONING) {\n+        this.rmContext.getDispatcher().getEventHandler().handle(\n+            new RMNodeEvent(entry.getKey(), RMNodeEventType.DECOMMISSION));\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void refreshNodesForcefully() {\n    for (Entry\u003cNodeId, RMNode\u003e entry : rmContext.getRMNodes().entrySet()) {\n      if (entry.getValue().getState() \u003d\u003d NodeState.DECOMMISSIONING) {\n        this.rmContext.getDispatcher().getEventHandler().handle(\n            new RMNodeEvent(entry.getKey(), RMNodeEventType.DECOMMISSION));\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/NodesListManager.java"
    }
  }
}