{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BlockListAsLongs.java",
  "functionName": "next",
  "functionId": "next",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/BlockListAsLongs.java",
  "functionStartLine": 490,
  "functionEndLine": 507,
  "numCommitsSeen": 18,
  "timeTaken": 4891,
  "changeHistory": [
    "d324164a51a43d72c02567248bd9f0f12b244a40",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "d324164a51a43d72c02567248bd9f0f12b244a40": "Ymultichange(Yreturntypechange,Ybodychange)",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d324164a51a43d72c02567248bd9f0f12b244a40": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-7435. PB encoding of block reports is very inefficient. Contributed by Daryn Sharp.\n",
      "commitDate": "13/03/15 12:23 PM",
      "commitName": "d324164a51a43d72c02567248bd9f0f12b244a40",
      "commitAuthor": "Kihwal Lee",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-7435. PB encoding of block reports is very inefficient. Contributed by Daryn Sharp.\n",
          "commitDate": "13/03/15 12:23 PM",
          "commitName": "d324164a51a43d72c02567248bd9f0f12b244a40",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "14/01/15 1:46 PM",
          "commitNameOld": "6464a8929a3623e49155febf2f9817253f9a1de3",
          "commitAuthorOld": "Tsz-Wo Nicholas Sze",
          "daysBetweenCommits": 57.9,
          "commitsBetweenForRepo": 522,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,18 @@\n-    public Block next() {\n-      block.set(blockId(currentBlockIndex),\n-                blockLength(currentBlockIndex),\n-                blockGenerationStamp(currentBlockIndex));\n-      currentReplicaState \u003d blockReplicaState(currentBlockIndex);\n-      currentBlockIndex++;\n-      return block;\n-    }\n\\ No newline at end of file\n+        public BlockReportReplica next() {\n+          if (currentBlockIndex \u003d\u003d finalizedBlocks) {\n+            // verify the presence of the delimiter block\n+            readBlock();\n+            Preconditions.checkArgument(block.getBlockId() \u003d\u003d -1 \u0026\u0026\n+                                        block.getNumBytes() \u003d\u003d -1 \u0026\u0026\n+                                        block.getGenerationStamp() \u003d\u003d -1,\n+                                        \"Invalid delimiter block\");\n+          }\n+\n+          readBlock();\n+          if (currentBlockIndex++ \u003c finalizedBlocks) {\n+            block.setState(ReplicaState.FINALIZED);\n+          } else {\n+            block.setState(ReplicaState.getState(iter.next().intValue()));\n+          }\n+          return block;\n+        }\n\\ No newline at end of file\n",
          "actualSource": "        public BlockReportReplica next() {\n          if (currentBlockIndex \u003d\u003d finalizedBlocks) {\n            // verify the presence of the delimiter block\n            readBlock();\n            Preconditions.checkArgument(block.getBlockId() \u003d\u003d -1 \u0026\u0026\n                                        block.getNumBytes() \u003d\u003d -1 \u0026\u0026\n                                        block.getGenerationStamp() \u003d\u003d -1,\n                                        \"Invalid delimiter block\");\n          }\n\n          readBlock();\n          if (currentBlockIndex++ \u003c finalizedBlocks) {\n            block.setState(ReplicaState.FINALIZED);\n          } else {\n            block.setState(ReplicaState.getState(iter.next().intValue()));\n          }\n          return block;\n        }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/BlockListAsLongs.java",
          "extendedDetails": {
            "oldValue": "Block",
            "newValue": "BlockReportReplica"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-7435. PB encoding of block reports is very inefficient. Contributed by Daryn Sharp.\n",
          "commitDate": "13/03/15 12:23 PM",
          "commitName": "d324164a51a43d72c02567248bd9f0f12b244a40",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "14/01/15 1:46 PM",
          "commitNameOld": "6464a8929a3623e49155febf2f9817253f9a1de3",
          "commitAuthorOld": "Tsz-Wo Nicholas Sze",
          "daysBetweenCommits": 57.9,
          "commitsBetweenForRepo": 522,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,18 @@\n-    public Block next() {\n-      block.set(blockId(currentBlockIndex),\n-                blockLength(currentBlockIndex),\n-                blockGenerationStamp(currentBlockIndex));\n-      currentReplicaState \u003d blockReplicaState(currentBlockIndex);\n-      currentBlockIndex++;\n-      return block;\n-    }\n\\ No newline at end of file\n+        public BlockReportReplica next() {\n+          if (currentBlockIndex \u003d\u003d finalizedBlocks) {\n+            // verify the presence of the delimiter block\n+            readBlock();\n+            Preconditions.checkArgument(block.getBlockId() \u003d\u003d -1 \u0026\u0026\n+                                        block.getNumBytes() \u003d\u003d -1 \u0026\u0026\n+                                        block.getGenerationStamp() \u003d\u003d -1,\n+                                        \"Invalid delimiter block\");\n+          }\n+\n+          readBlock();\n+          if (currentBlockIndex++ \u003c finalizedBlocks) {\n+            block.setState(ReplicaState.FINALIZED);\n+          } else {\n+            block.setState(ReplicaState.getState(iter.next().intValue()));\n+          }\n+          return block;\n+        }\n\\ No newline at end of file\n",
          "actualSource": "        public BlockReportReplica next() {\n          if (currentBlockIndex \u003d\u003d finalizedBlocks) {\n            // verify the presence of the delimiter block\n            readBlock();\n            Preconditions.checkArgument(block.getBlockId() \u003d\u003d -1 \u0026\u0026\n                                        block.getNumBytes() \u003d\u003d -1 \u0026\u0026\n                                        block.getGenerationStamp() \u003d\u003d -1,\n                                        \"Invalid delimiter block\");\n          }\n\n          readBlock();\n          if (currentBlockIndex++ \u003c finalizedBlocks) {\n            block.setState(ReplicaState.FINALIZED);\n          } else {\n            block.setState(ReplicaState.getState(iter.next().intValue()));\n          }\n          return block;\n        }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/BlockListAsLongs.java",
          "extendedDetails": {}
        }
      ]
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public Block next() {\n      block.set(blockId(currentBlockIndex),\n                blockLength(currentBlockIndex),\n                blockGenerationStamp(currentBlockIndex));\n      currentReplicaState \u003d blockReplicaState(currentBlockIndex);\n      currentBlockIndex++;\n      return block;\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/BlockListAsLongs.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/BlockListAsLongs.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/BlockListAsLongs.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public Block next() {\n      block.set(blockId(currentBlockIndex),\n                blockLength(currentBlockIndex),\n                blockGenerationStamp(currentBlockIndex));\n      currentReplicaState \u003d blockReplicaState(currentBlockIndex);\n      currentBlockIndex++;\n      return block;\n    }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/BlockListAsLongs.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/protocol/BlockListAsLongs.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/BlockListAsLongs.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,8 @@\n+    public Block next() {\n+      block.set(blockId(currentBlockIndex),\n+                blockLength(currentBlockIndex),\n+                blockGenerationStamp(currentBlockIndex));\n+      currentReplicaState \u003d blockReplicaState(currentBlockIndex);\n+      currentBlockIndex++;\n+      return block;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public Block next() {\n      block.set(blockId(currentBlockIndex),\n                blockLength(currentBlockIndex),\n                blockGenerationStamp(currentBlockIndex));\n      currentReplicaState \u003d blockReplicaState(currentBlockIndex);\n      currentBlockIndex++;\n      return block;\n    }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/protocol/BlockListAsLongs.java"
    }
  }
}