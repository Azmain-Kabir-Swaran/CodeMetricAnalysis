{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FpgaResourceAllocator.java",
  "functionName": "addFpgaDevices",
  "functionId": "addFpgaDevices___type-String__list-List__FpgaDevice__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/resources/fpga/FpgaResourceAllocator.java",
  "functionStartLine": 150,
  "functionEndLine": 165,
  "numCommitsSeen": 10,
  "timeTaken": 2144,
  "changeHistory": [
    "a4cd75e09c934699ec5e2fa969f1c8d0a14c1d49",
    "7225ec0ceb49ae8f5588484297a20f07ec047420"
  ],
  "changeHistoryShort": {
    "a4cd75e09c934699ec5e2fa969f1c8d0a14c1d49": "Ymultichange(Yrename,Ybodychange)",
    "7225ec0ceb49ae8f5588484297a20f07ec047420": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a4cd75e09c934699ec5e2fa969f1c8d0a14c1d49": {
      "type": "Ymultichange(Yrename,Ybodychange)",
      "commitMessage": "YARN-9269. Minor cleanup in FpgaResourceAllocator. Contributed by Peter Bacsko.\n",
      "commitDate": "27/03/19 10:08 AM",
      "commitName": "a4cd75e09c934699ec5e2fa969f1c8d0a14c1d49",
      "commitAuthor": "Devaraj K",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-9269. Minor cleanup in FpgaResourceAllocator. Contributed by Peter Bacsko.\n",
          "commitDate": "27/03/19 10:08 AM",
          "commitName": "a4cd75e09c934699ec5e2fa969f1c8d0a14c1d49",
          "commitAuthor": "Devaraj K",
          "commitDateOld": "25/03/19 1:22 PM",
          "commitNameOld": "eeda6891e49bc13ae86d0193f94238b7109e291d",
          "commitAuthorOld": "Devaraj K",
          "daysBetweenCommits": 1.86,
          "commitsBetweenForRepo": 15,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,16 @@\n-  public synchronized void addFpga(String type, List\u003cFpgaDevice\u003e list) {\n-    availableFpga.putIfAbsent(type, new LinkedList\u003c\u003e());\n+  public synchronized void addFpgaDevices(String type, List\u003cFpgaDevice\u003e list) {\n+    availableFpgas.putIfAbsent(type, new LinkedList\u003c\u003e());\n+    List\u003cFpgaDevice\u003e fpgaDevices \u003d new LinkedList\u003c\u003e();\n+\n     for (FpgaDevice device : list) {\n       if (!allowedFpgas.contains(device)) {\n-        allowedFpgas.add(device);\n-        availableFpga.get(type).add(device);\n+        fpgaDevices.add(device);\n+        availableFpgas.get(type).add(device);\n+      } else {\n+        LOG.warn(\"Duplicate device found: \" + device + \". Ignored\");\n       }\n     }\n-    LOG.info(\"Add a list of FPGA Devices: \" + list);\n+\n+    allowedFpgas \u003d ImmutableList.copyOf(fpgaDevices);\n+    LOG.info(\"Added a list of FPGA Devices: \" + allowedFpgas);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void addFpgaDevices(String type, List\u003cFpgaDevice\u003e list) {\n    availableFpgas.putIfAbsent(type, new LinkedList\u003c\u003e());\n    List\u003cFpgaDevice\u003e fpgaDevices \u003d new LinkedList\u003c\u003e();\n\n    for (FpgaDevice device : list) {\n      if (!allowedFpgas.contains(device)) {\n        fpgaDevices.add(device);\n        availableFpgas.get(type).add(device);\n      } else {\n        LOG.warn(\"Duplicate device found: \" + device + \". Ignored\");\n      }\n    }\n\n    allowedFpgas \u003d ImmutableList.copyOf(fpgaDevices);\n    LOG.info(\"Added a list of FPGA Devices: \" + allowedFpgas);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/resources/fpga/FpgaResourceAllocator.java",
          "extendedDetails": {
            "oldValue": "addFpga",
            "newValue": "addFpgaDevices"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-9269. Minor cleanup in FpgaResourceAllocator. Contributed by Peter Bacsko.\n",
          "commitDate": "27/03/19 10:08 AM",
          "commitName": "a4cd75e09c934699ec5e2fa969f1c8d0a14c1d49",
          "commitAuthor": "Devaraj K",
          "commitDateOld": "25/03/19 1:22 PM",
          "commitNameOld": "eeda6891e49bc13ae86d0193f94238b7109e291d",
          "commitAuthorOld": "Devaraj K",
          "daysBetweenCommits": 1.86,
          "commitsBetweenForRepo": 15,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,16 @@\n-  public synchronized void addFpga(String type, List\u003cFpgaDevice\u003e list) {\n-    availableFpga.putIfAbsent(type, new LinkedList\u003c\u003e());\n+  public synchronized void addFpgaDevices(String type, List\u003cFpgaDevice\u003e list) {\n+    availableFpgas.putIfAbsent(type, new LinkedList\u003c\u003e());\n+    List\u003cFpgaDevice\u003e fpgaDevices \u003d new LinkedList\u003c\u003e();\n+\n     for (FpgaDevice device : list) {\n       if (!allowedFpgas.contains(device)) {\n-        allowedFpgas.add(device);\n-        availableFpga.get(type).add(device);\n+        fpgaDevices.add(device);\n+        availableFpgas.get(type).add(device);\n+      } else {\n+        LOG.warn(\"Duplicate device found: \" + device + \". Ignored\");\n       }\n     }\n-    LOG.info(\"Add a list of FPGA Devices: \" + list);\n+\n+    allowedFpgas \u003d ImmutableList.copyOf(fpgaDevices);\n+    LOG.info(\"Added a list of FPGA Devices: \" + allowedFpgas);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void addFpgaDevices(String type, List\u003cFpgaDevice\u003e list) {\n    availableFpgas.putIfAbsent(type, new LinkedList\u003c\u003e());\n    List\u003cFpgaDevice\u003e fpgaDevices \u003d new LinkedList\u003c\u003e();\n\n    for (FpgaDevice device : list) {\n      if (!allowedFpgas.contains(device)) {\n        fpgaDevices.add(device);\n        availableFpgas.get(type).add(device);\n      } else {\n        LOG.warn(\"Duplicate device found: \" + device + \". Ignored\");\n      }\n    }\n\n    allowedFpgas \u003d ImmutableList.copyOf(fpgaDevices);\n    LOG.info(\"Added a list of FPGA Devices: \" + allowedFpgas);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/resources/fpga/FpgaResourceAllocator.java",
          "extendedDetails": {}
        }
      ]
    },
    "7225ec0ceb49ae8f5588484297a20f07ec047420": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6507. Add support in NodeManager to isolate FPGA devices with CGroups. (Zhankun Tang via wangda)\n\nChange-Id: Ic9afd841805f1035423915a0b0add5f3ba96cf9d\n",
      "commitDate": "01/12/17 10:50 AM",
      "commitName": "7225ec0ceb49ae8f5588484297a20f07ec047420",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,10 @@\n+  public synchronized void addFpga(String type, List\u003cFpgaDevice\u003e list) {\n+    availableFpga.putIfAbsent(type, new LinkedList\u003c\u003e());\n+    for (FpgaDevice device : list) {\n+      if (!allowedFpgas.contains(device)) {\n+        allowedFpgas.add(device);\n+        availableFpga.get(type).add(device);\n+      }\n+    }\n+    LOG.info(\"Add a list of FPGA Devices: \" + list);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void addFpga(String type, List\u003cFpgaDevice\u003e list) {\n    availableFpga.putIfAbsent(type, new LinkedList\u003c\u003e());\n    for (FpgaDevice device : list) {\n      if (!allowedFpgas.contains(device)) {\n        allowedFpgas.add(device);\n        availableFpga.get(type).add(device);\n      }\n    }\n    LOG.info(\"Add a list of FPGA Devices: \" + list);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/resources/fpga/FpgaResourceAllocator.java"
    }
  }
}