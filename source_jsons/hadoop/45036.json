{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NMClientAsyncImpl.java",
  "functionName": "stopContainerAsync",
  "functionId": "stopContainerAsync___containerId-ContainerId__nodeId-NodeId",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/async/impl/NMClientAsyncImpl.java",
  "functionStartLine": 408,
  "functionEndLine": 422,
  "numCommitsSeen": 17,
  "timeTaken": 1630,
  "changeHistory": [
    "243bcd367ff3130d74676280233041f88aca62a5",
    "7ef54faad4bee4346da082a3f8cc5d6ea405d74a",
    "a2c42330047bf955a6a585dcddf798920d4c8640",
    "edc6d7d3abac3ebad711dda43d7c6a3aeabe025b"
  ],
  "changeHistoryShort": {
    "243bcd367ff3130d74676280233041f88aca62a5": "Ymultichange(Yparameterchange,Ybodychange)",
    "7ef54faad4bee4346da082a3f8cc5d6ea405d74a": "Ymultichange(Yfilerename,Yrename)",
    "a2c42330047bf955a6a585dcddf798920d4c8640": "Yparameterchange",
    "edc6d7d3abac3ebad711dda43d7c6a3aeabe025b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "243bcd367ff3130d74676280233041f88aca62a5": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-694. Starting to use NMTokens to authenticate all communication with NodeManagers. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1494369 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/06/13 4:19 PM",
      "commitName": "243bcd367ff3130d74676280233041f88aca62a5",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-694. Starting to use NMTokens to authenticate all communication with NodeManagers. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1494369 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/06/13 4:19 PM",
          "commitName": "243bcd367ff3130d74676280233041f88aca62a5",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "17/06/13 9:02 PM",
          "commitNameOld": "7ef54faad4bee4346da082a3f8cc5d6ea405d74a",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 0.8,
          "commitsBetweenForRepo": 12,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,15 @@\n-  public void stopContainerAsync(ContainerId containerId, NodeId nodeId,\n-      Token containerToken) {\n+  public void stopContainerAsync(ContainerId containerId, NodeId nodeId) {\n     if (containers.get(containerId) \u003d\u003d null) {\n       callbackHandler.onStopContainerError(containerId,\n           RPCUtil.getRemoteException(\"Container \" + containerId +\n               \" is neither started nor scheduled to start\"));\n     }\n     try {\n-      events.put(new ContainerEvent(containerId, nodeId, containerToken,\n+      events.put(new ContainerEvent(containerId, nodeId, null,\n           ContainerEventType.STOP_CONTAINER));\n     } catch (InterruptedException e) {\n       LOG.warn(\"Exception when scheduling the event of stopping Container \" +\n           containerId);\n       callbackHandler.onStopContainerError(containerId, e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void stopContainerAsync(ContainerId containerId, NodeId nodeId) {\n    if (containers.get(containerId) \u003d\u003d null) {\n      callbackHandler.onStopContainerError(containerId,\n          RPCUtil.getRemoteException(\"Container \" + containerId +\n              \" is neither started nor scheduled to start\"));\n    }\n    try {\n      events.put(new ContainerEvent(containerId, nodeId, null,\n          ContainerEventType.STOP_CONTAINER));\n    } catch (InterruptedException e) {\n      LOG.warn(\"Exception when scheduling the event of stopping Container \" +\n          containerId);\n      callbackHandler.onStopContainerError(containerId, e);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/async/impl/NMClientAsyncImpl.java",
          "extendedDetails": {
            "oldValue": "[containerId-ContainerId, nodeId-NodeId, containerToken-Token]",
            "newValue": "[containerId-ContainerId, nodeId-NodeId]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-694. Starting to use NMTokens to authenticate all communication with NodeManagers. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1494369 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/06/13 4:19 PM",
          "commitName": "243bcd367ff3130d74676280233041f88aca62a5",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "17/06/13 9:02 PM",
          "commitNameOld": "7ef54faad4bee4346da082a3f8cc5d6ea405d74a",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 0.8,
          "commitsBetweenForRepo": 12,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,15 @@\n-  public void stopContainerAsync(ContainerId containerId, NodeId nodeId,\n-      Token containerToken) {\n+  public void stopContainerAsync(ContainerId containerId, NodeId nodeId) {\n     if (containers.get(containerId) \u003d\u003d null) {\n       callbackHandler.onStopContainerError(containerId,\n           RPCUtil.getRemoteException(\"Container \" + containerId +\n               \" is neither started nor scheduled to start\"));\n     }\n     try {\n-      events.put(new ContainerEvent(containerId, nodeId, containerToken,\n+      events.put(new ContainerEvent(containerId, nodeId, null,\n           ContainerEventType.STOP_CONTAINER));\n     } catch (InterruptedException e) {\n       LOG.warn(\"Exception when scheduling the event of stopping Container \" +\n           containerId);\n       callbackHandler.onStopContainerError(containerId, e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void stopContainerAsync(ContainerId containerId, NodeId nodeId) {\n    if (containers.get(containerId) \u003d\u003d null) {\n      callbackHandler.onStopContainerError(containerId,\n          RPCUtil.getRemoteException(\"Container \" + containerId +\n              \" is neither started nor scheduled to start\"));\n    }\n    try {\n      events.put(new ContainerEvent(containerId, nodeId, null,\n          ContainerEventType.STOP_CONTAINER));\n    } catch (InterruptedException e) {\n      LOG.warn(\"Exception when scheduling the event of stopping Container \" +\n          containerId);\n      callbackHandler.onStopContainerError(containerId, e);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/async/impl/NMClientAsyncImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "7ef54faad4bee4346da082a3f8cc5d6ea405d74a": {
      "type": "Ymultichange(Yfilerename,Yrename)",
      "commitMessage": "YARN-834. Fixed annotations for yarn-client module, reorganized packages and clearly differentiated *Async apis. Contributed by Arun C Murthy and Zhijie Shen.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1494017 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/06/13 9:02 PM",
      "commitName": "7ef54faad4bee4346da082a3f8cc5d6ea405d74a",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "YARN-834. Fixed annotations for yarn-client module, reorganized packages and clearly differentiated *Async apis. Contributed by Arun C Murthy and Zhijie Shen.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1494017 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "17/06/13 9:02 PM",
          "commitName": "7ef54faad4bee4346da082a3f8cc5d6ea405d74a",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "17/06/13 8:10 PM",
          "commitNameOld": "2b14656ab5050dd75935b64681cdc25fb49db94f",
          "commitAuthorOld": "Siddharth Seth",
          "daysBetweenCommits": 0.04,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,16 @@\n-  public void stopContainer(ContainerId containerId, NodeId nodeId,\n+  public void stopContainerAsync(ContainerId containerId, NodeId nodeId,\n       Token containerToken) {\n     if (containers.get(containerId) \u003d\u003d null) {\n       callbackHandler.onStopContainerError(containerId,\n           RPCUtil.getRemoteException(\"Container \" + containerId +\n               \" is neither started nor scheduled to start\"));\n     }\n     try {\n       events.put(new ContainerEvent(containerId, nodeId, containerToken,\n           ContainerEventType.STOP_CONTAINER));\n     } catch (InterruptedException e) {\n       LOG.warn(\"Exception when scheduling the event of stopping Container \" +\n           containerId);\n       callbackHandler.onStopContainerError(containerId, e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void stopContainerAsync(ContainerId containerId, NodeId nodeId,\n      Token containerToken) {\n    if (containers.get(containerId) \u003d\u003d null) {\n      callbackHandler.onStopContainerError(containerId,\n          RPCUtil.getRemoteException(\"Container \" + containerId +\n              \" is neither started nor scheduled to start\"));\n    }\n    try {\n      events.put(new ContainerEvent(containerId, nodeId, containerToken,\n          ContainerEventType.STOP_CONTAINER));\n    } catch (InterruptedException e) {\n      LOG.warn(\"Exception when scheduling the event of stopping Container \" +\n          containerId);\n      callbackHandler.onStopContainerError(containerId, e);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/async/impl/NMClientAsyncImpl.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/NMClientAsync.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/async/impl/NMClientAsyncImpl.java"
          }
        },
        {
          "type": "Yrename",
          "commitMessage": "YARN-834. Fixed annotations for yarn-client module, reorganized packages and clearly differentiated *Async apis. Contributed by Arun C Murthy and Zhijie Shen.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1494017 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "17/06/13 9:02 PM",
          "commitName": "7ef54faad4bee4346da082a3f8cc5d6ea405d74a",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "17/06/13 8:10 PM",
          "commitNameOld": "2b14656ab5050dd75935b64681cdc25fb49db94f",
          "commitAuthorOld": "Siddharth Seth",
          "daysBetweenCommits": 0.04,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,16 @@\n-  public void stopContainer(ContainerId containerId, NodeId nodeId,\n+  public void stopContainerAsync(ContainerId containerId, NodeId nodeId,\n       Token containerToken) {\n     if (containers.get(containerId) \u003d\u003d null) {\n       callbackHandler.onStopContainerError(containerId,\n           RPCUtil.getRemoteException(\"Container \" + containerId +\n               \" is neither started nor scheduled to start\"));\n     }\n     try {\n       events.put(new ContainerEvent(containerId, nodeId, containerToken,\n           ContainerEventType.STOP_CONTAINER));\n     } catch (InterruptedException e) {\n       LOG.warn(\"Exception when scheduling the event of stopping Container \" +\n           containerId);\n       callbackHandler.onStopContainerError(containerId, e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void stopContainerAsync(ContainerId containerId, NodeId nodeId,\n      Token containerToken) {\n    if (containers.get(containerId) \u003d\u003d null) {\n      callbackHandler.onStopContainerError(containerId,\n          RPCUtil.getRemoteException(\"Container \" + containerId +\n              \" is neither started nor scheduled to start\"));\n    }\n    try {\n      events.put(new ContainerEvent(containerId, nodeId, containerToken,\n          ContainerEventType.STOP_CONTAINER));\n    } catch (InterruptedException e) {\n      LOG.warn(\"Exception when scheduling the event of stopping Container \" +\n          containerId);\n      callbackHandler.onStopContainerError(containerId, e);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/async/impl/NMClientAsyncImpl.java",
          "extendedDetails": {
            "oldValue": "stopContainer",
            "newValue": "stopContainerAsync"
          }
        }
      ]
    },
    "a2c42330047bf955a6a585dcddf798920d4c8640": {
      "type": "Yparameterchange",
      "commitMessage": "YARN-717. Put object creation factories for Token in the class itself and remove useless derivations for specific tokens. Contributed by Jian He.\nMAPREDUCE-5289. Updated MR App to use Token directly after YARN-717. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1488616 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "01/06/13 2:43 PM",
      "commitName": "a2c42330047bf955a6a585dcddf798920d4c8640",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "28/05/13 6:41 PM",
      "commitNameOld": "edc6d7d3abac3ebad711dda43d7c6a3aeabe025b",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 3.83,
      "commitsBetweenForRepo": 34,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   public void stopContainer(ContainerId containerId, NodeId nodeId,\n-      ContainerToken containerToken) {\n+      Token containerToken) {\n     if (containers.get(containerId) \u003d\u003d null) {\n       callbackHandler.onStopContainerError(containerId,\n           RPCUtil.getRemoteException(\"Container \" + containerId +\n               \" is neither started nor scheduled to start\"));\n     }\n     try {\n       events.put(new ContainerEvent(containerId, nodeId, containerToken,\n           ContainerEventType.STOP_CONTAINER));\n     } catch (InterruptedException e) {\n       LOG.warn(\"Exception when scheduling the event of stopping Container \" +\n           containerId);\n       callbackHandler.onStopContainerError(containerId, e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void stopContainer(ContainerId containerId, NodeId nodeId,\n      Token containerToken) {\n    if (containers.get(containerId) \u003d\u003d null) {\n      callbackHandler.onStopContainerError(containerId,\n          RPCUtil.getRemoteException(\"Container \" + containerId +\n              \" is neither started nor scheduled to start\"));\n    }\n    try {\n      events.put(new ContainerEvent(containerId, nodeId, containerToken,\n          ContainerEventType.STOP_CONTAINER));\n    } catch (InterruptedException e) {\n      LOG.warn(\"Exception when scheduling the event of stopping Container \" +\n          containerId);\n      callbackHandler.onStopContainerError(containerId, e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/NMClientAsync.java",
      "extendedDetails": {
        "oldValue": "[containerId-ContainerId, nodeId-NodeId, containerToken-ContainerToken]",
        "newValue": "[containerId-ContainerId, nodeId-NodeId, containerToken-Token]"
      }
    },
    "edc6d7d3abac3ebad711dda43d7c6a3aeabe025b": {
      "type": "Yintroduced",
      "commitMessage": "YARN-422. Add a NM Client library to help application-writers. Contributed by Zhijie Shen.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1487184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/05/13 6:41 PM",
      "commitName": "edc6d7d3abac3ebad711dda43d7c6a3aeabe025b",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,16 @@\n+  public void stopContainer(ContainerId containerId, NodeId nodeId,\n+      ContainerToken containerToken) {\n+    if (containers.get(containerId) \u003d\u003d null) {\n+      callbackHandler.onStopContainerError(containerId,\n+          RPCUtil.getRemoteException(\"Container \" + containerId +\n+              \" is neither started nor scheduled to start\"));\n+    }\n+    try {\n+      events.put(new ContainerEvent(containerId, nodeId, containerToken,\n+          ContainerEventType.STOP_CONTAINER));\n+    } catch (InterruptedException e) {\n+      LOG.warn(\"Exception when scheduling the event of stopping Container \" +\n+          containerId);\n+      callbackHandler.onStopContainerError(containerId, e);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void stopContainer(ContainerId containerId, NodeId nodeId,\n      ContainerToken containerToken) {\n    if (containers.get(containerId) \u003d\u003d null) {\n      callbackHandler.onStopContainerError(containerId,\n          RPCUtil.getRemoteException(\"Container \" + containerId +\n              \" is neither started nor scheduled to start\"));\n    }\n    try {\n      events.put(new ContainerEvent(containerId, nodeId, containerToken,\n          ContainerEventType.STOP_CONTAINER));\n    } catch (InterruptedException e) {\n      LOG.warn(\"Exception when scheduling the event of stopping Container \" +\n          containerId);\n      callbackHandler.onStopContainerError(containerId, e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/NMClientAsync.java"
    }
  }
}