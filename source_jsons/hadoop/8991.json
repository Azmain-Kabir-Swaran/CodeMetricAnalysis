{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSNamesystem.java",
  "functionName": "getNamespaceEditsDirs",
  "functionId": "getNamespaceEditsDirs___conf-Configuration",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
  "functionStartLine": 1636,
  "functionEndLine": 1639,
  "numCommitsSeen": 899,
  "timeTaken": 52226,
  "changeHistory": [
    "1a75ec82885e45baf4d5cd56d6c738d8e68d8bc7",
    "2e4cf977aea30c2a8b35be4eb876874e0055e5f4",
    "11df1c256171564b0578477c226723358be812c4",
    "969318cfc2397110a686a0a728b56b6a0cab9f4d",
    "a27adf3de4ea88a80401fc7157c5e39747230c2a",
    "f87a4b40bc99e76602a75906df31747cfdbff78a",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "ef223e8e8e1e18733fc18cd84e34dd0bb0f9a710",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "1a75ec82885e45baf4d5cd56d6c738d8e68d8bc7": "Ybodychange",
    "2e4cf977aea30c2a8b35be4eb876874e0055e5f4": "Ymultichange(Yexceptionschange,Ybodychange)",
    "11df1c256171564b0578477c226723358be812c4": "Ymultichange(Yreturntypechange,Ybodychange)",
    "969318cfc2397110a686a0a728b56b6a0cab9f4d": "Ybodychange",
    "a27adf3de4ea88a80401fc7157c5e39747230c2a": "Ybodychange",
    "f87a4b40bc99e76602a75906df31747cfdbff78a": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "ef223e8e8e1e18733fc18cd84e34dd0bb0f9a710": "Ybodychange",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1a75ec82885e45baf4d5cd56d6c738d8e68d8bc7": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2731. Add command to bootstrap the Standby Node\u0027s name directories from the Active NameNode. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1299807 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/03/12 12:41 PM",
      "commitName": "1a75ec82885e45baf4d5cd56d6c738d8e68d8bc7",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "01/03/12 5:32 PM",
      "commitNameOld": "7be4e5bd222c6f1c40f88ee8b24b1587e157a87e",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 10.76,
      "commitsBetweenForRepo": 57,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,42 +1,4 @@\n   public static List\u003cURI\u003e getNamespaceEditsDirs(Configuration conf)\n       throws IOException {\n-    // Use a LinkedHashSet so that order is maintained while we de-dup\n-    // the entries.\n-    LinkedHashSet\u003cURI\u003e editsDirs \u003d new LinkedHashSet\u003cURI\u003e();\n-    \n-    List\u003cURI\u003e sharedDirs \u003d getSharedEditsDirs(conf);\n-\n-    // Fail until multiple shared edits directories are supported (HDFS-2782)\n-    if (sharedDirs.size() \u003e 1) {\n-      throw new IOException(\n-          \"Multiple shared edits directories are not yet supported\");\n-    }\n-\n-    // First add the shared edits dirs. It\u0027s critical that the shared dirs\n-    // are added first, since JournalSet syncs them in the order they are listed,\n-    // and we need to make sure all edits are in place in the shared storage\n-    // before they are replicated locally. See HDFS-2874.\n-    for (URI dir : sharedDirs) {\n-      if (!editsDirs.add(dir)) {\n-        LOG.warn(\"Edits URI \" + dir + \" listed multiple times in \" + \n-            DFS_NAMENODE_SHARED_EDITS_DIR_KEY + \". Ignoring duplicates.\");\n-      }\n-    }\n-    \n-    // Now add the non-shared dirs.\n-    for (URI dir : getStorageDirs(conf, DFS_NAMENODE_EDITS_DIR_KEY)) {\n-      if (!editsDirs.add(dir)) {\n-        LOG.warn(\"Edits URI \" + dir + \" listed multiple times in \" + \n-            DFS_NAMENODE_SHARED_EDITS_DIR_KEY + \" and \" +\n-            DFS_NAMENODE_EDITS_DIR_KEY + \". Ignoring duplicates.\");\n-      }\n-    }\n-\n-    if (editsDirs.isEmpty()) {\n-      // If this is the case, no edit dirs have been explicitly configured.\n-      // Image dirs are to be used for edits too.\n-      return Lists.newArrayList(getNamespaceDirs(conf));\n-    } else {\n-      return Lists.newArrayList(editsDirs);\n-    }\n+    return getNamespaceEditsDirs(conf, true);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static List\u003cURI\u003e getNamespaceEditsDirs(Configuration conf)\n      throws IOException {\n    return getNamespaceEditsDirs(conf, true);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "2e4cf977aea30c2a8b35be4eb876874e0055e5f4": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "HDFS-2752. HA: exit if multiple shared dirs are configured. Contributed by Eli Collins\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1240916 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/02/12 12:24 AM",
      "commitName": "2e4cf977aea30c2a8b35be4eb876874e0055e5f4",
      "commitAuthor": "Eli Collins",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "HDFS-2752. HA: exit if multiple shared dirs are configured. Contributed by Eli Collins\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1240916 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "06/02/12 12:24 AM",
          "commitName": "2e4cf977aea30c2a8b35be4eb876874e0055e5f4",
          "commitAuthor": "Eli Collins",
          "commitDateOld": "03/02/12 6:52 PM",
          "commitNameOld": "11df1c256171564b0578477c226723358be812c4",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 2.23,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,33 +1,42 @@\n-  public static List\u003cURI\u003e getNamespaceEditsDirs(Configuration conf) {\n+  public static List\u003cURI\u003e getNamespaceEditsDirs(Configuration conf)\n+      throws IOException {\n     // Use a LinkedHashSet so that order is maintained while we de-dup\n     // the entries.\n     LinkedHashSet\u003cURI\u003e editsDirs \u003d new LinkedHashSet\u003cURI\u003e();\n     \n+    List\u003cURI\u003e sharedDirs \u003d getSharedEditsDirs(conf);\n+\n+    // Fail until multiple shared edits directories are supported (HDFS-2782)\n+    if (sharedDirs.size() \u003e 1) {\n+      throw new IOException(\n+          \"Multiple shared edits directories are not yet supported\");\n+    }\n+\n     // First add the shared edits dirs. It\u0027s critical that the shared dirs\n     // are added first, since JournalSet syncs them in the order they are listed,\n     // and we need to make sure all edits are in place in the shared storage\n     // before they are replicated locally. See HDFS-2874.\n-    for (URI dir : getSharedEditsDirs(conf)) {\n+    for (URI dir : sharedDirs) {\n       if (!editsDirs.add(dir)) {\n         LOG.warn(\"Edits URI \" + dir + \" listed multiple times in \" + \n             DFS_NAMENODE_SHARED_EDITS_DIR_KEY + \". Ignoring duplicates.\");\n       }\n     }\n     \n     // Now add the non-shared dirs.\n     for (URI dir : getStorageDirs(conf, DFS_NAMENODE_EDITS_DIR_KEY)) {\n       if (!editsDirs.add(dir)) {\n         LOG.warn(\"Edits URI \" + dir + \" listed multiple times in \" + \n             DFS_NAMENODE_SHARED_EDITS_DIR_KEY + \" and \" +\n             DFS_NAMENODE_EDITS_DIR_KEY + \". Ignoring duplicates.\");\n       }\n     }\n \n     if (editsDirs.isEmpty()) {\n       // If this is the case, no edit dirs have been explicitly configured.\n       // Image dirs are to be used for edits too.\n       return Lists.newArrayList(getNamespaceDirs(conf));\n     } else {\n       return Lists.newArrayList(editsDirs);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static List\u003cURI\u003e getNamespaceEditsDirs(Configuration conf)\n      throws IOException {\n    // Use a LinkedHashSet so that order is maintained while we de-dup\n    // the entries.\n    LinkedHashSet\u003cURI\u003e editsDirs \u003d new LinkedHashSet\u003cURI\u003e();\n    \n    List\u003cURI\u003e sharedDirs \u003d getSharedEditsDirs(conf);\n\n    // Fail until multiple shared edits directories are supported (HDFS-2782)\n    if (sharedDirs.size() \u003e 1) {\n      throw new IOException(\n          \"Multiple shared edits directories are not yet supported\");\n    }\n\n    // First add the shared edits dirs. It\u0027s critical that the shared dirs\n    // are added first, since JournalSet syncs them in the order they are listed,\n    // and we need to make sure all edits are in place in the shared storage\n    // before they are replicated locally. See HDFS-2874.\n    for (URI dir : sharedDirs) {\n      if (!editsDirs.add(dir)) {\n        LOG.warn(\"Edits URI \" + dir + \" listed multiple times in \" + \n            DFS_NAMENODE_SHARED_EDITS_DIR_KEY + \". Ignoring duplicates.\");\n      }\n    }\n    \n    // Now add the non-shared dirs.\n    for (URI dir : getStorageDirs(conf, DFS_NAMENODE_EDITS_DIR_KEY)) {\n      if (!editsDirs.add(dir)) {\n        LOG.warn(\"Edits URI \" + dir + \" listed multiple times in \" + \n            DFS_NAMENODE_SHARED_EDITS_DIR_KEY + \" and \" +\n            DFS_NAMENODE_EDITS_DIR_KEY + \". Ignoring duplicates.\");\n      }\n    }\n\n    if (editsDirs.isEmpty()) {\n      // If this is the case, no edit dirs have been explicitly configured.\n      // Image dirs are to be used for edits too.\n      return Lists.newArrayList(getNamespaceDirs(conf));\n    } else {\n      return Lists.newArrayList(editsDirs);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[IOException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-2752. HA: exit if multiple shared dirs are configured. Contributed by Eli Collins\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1240916 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "06/02/12 12:24 AM",
          "commitName": "2e4cf977aea30c2a8b35be4eb876874e0055e5f4",
          "commitAuthor": "Eli Collins",
          "commitDateOld": "03/02/12 6:52 PM",
          "commitNameOld": "11df1c256171564b0578477c226723358be812c4",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 2.23,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,33 +1,42 @@\n-  public static List\u003cURI\u003e getNamespaceEditsDirs(Configuration conf) {\n+  public static List\u003cURI\u003e getNamespaceEditsDirs(Configuration conf)\n+      throws IOException {\n     // Use a LinkedHashSet so that order is maintained while we de-dup\n     // the entries.\n     LinkedHashSet\u003cURI\u003e editsDirs \u003d new LinkedHashSet\u003cURI\u003e();\n     \n+    List\u003cURI\u003e sharedDirs \u003d getSharedEditsDirs(conf);\n+\n+    // Fail until multiple shared edits directories are supported (HDFS-2782)\n+    if (sharedDirs.size() \u003e 1) {\n+      throw new IOException(\n+          \"Multiple shared edits directories are not yet supported\");\n+    }\n+\n     // First add the shared edits dirs. It\u0027s critical that the shared dirs\n     // are added first, since JournalSet syncs them in the order they are listed,\n     // and we need to make sure all edits are in place in the shared storage\n     // before they are replicated locally. See HDFS-2874.\n-    for (URI dir : getSharedEditsDirs(conf)) {\n+    for (URI dir : sharedDirs) {\n       if (!editsDirs.add(dir)) {\n         LOG.warn(\"Edits URI \" + dir + \" listed multiple times in \" + \n             DFS_NAMENODE_SHARED_EDITS_DIR_KEY + \". Ignoring duplicates.\");\n       }\n     }\n     \n     // Now add the non-shared dirs.\n     for (URI dir : getStorageDirs(conf, DFS_NAMENODE_EDITS_DIR_KEY)) {\n       if (!editsDirs.add(dir)) {\n         LOG.warn(\"Edits URI \" + dir + \" listed multiple times in \" + \n             DFS_NAMENODE_SHARED_EDITS_DIR_KEY + \" and \" +\n             DFS_NAMENODE_EDITS_DIR_KEY + \". Ignoring duplicates.\");\n       }\n     }\n \n     if (editsDirs.isEmpty()) {\n       // If this is the case, no edit dirs have been explicitly configured.\n       // Image dirs are to be used for edits too.\n       return Lists.newArrayList(getNamespaceDirs(conf));\n     } else {\n       return Lists.newArrayList(editsDirs);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static List\u003cURI\u003e getNamespaceEditsDirs(Configuration conf)\n      throws IOException {\n    // Use a LinkedHashSet so that order is maintained while we de-dup\n    // the entries.\n    LinkedHashSet\u003cURI\u003e editsDirs \u003d new LinkedHashSet\u003cURI\u003e();\n    \n    List\u003cURI\u003e sharedDirs \u003d getSharedEditsDirs(conf);\n\n    // Fail until multiple shared edits directories are supported (HDFS-2782)\n    if (sharedDirs.size() \u003e 1) {\n      throw new IOException(\n          \"Multiple shared edits directories are not yet supported\");\n    }\n\n    // First add the shared edits dirs. It\u0027s critical that the shared dirs\n    // are added first, since JournalSet syncs them in the order they are listed,\n    // and we need to make sure all edits are in place in the shared storage\n    // before they are replicated locally. See HDFS-2874.\n    for (URI dir : sharedDirs) {\n      if (!editsDirs.add(dir)) {\n        LOG.warn(\"Edits URI \" + dir + \" listed multiple times in \" + \n            DFS_NAMENODE_SHARED_EDITS_DIR_KEY + \". Ignoring duplicates.\");\n      }\n    }\n    \n    // Now add the non-shared dirs.\n    for (URI dir : getStorageDirs(conf, DFS_NAMENODE_EDITS_DIR_KEY)) {\n      if (!editsDirs.add(dir)) {\n        LOG.warn(\"Edits URI \" + dir + \" listed multiple times in \" + \n            DFS_NAMENODE_SHARED_EDITS_DIR_KEY + \" and \" +\n            DFS_NAMENODE_EDITS_DIR_KEY + \". Ignoring duplicates.\");\n      }\n    }\n\n    if (editsDirs.isEmpty()) {\n      // If this is the case, no edit dirs have been explicitly configured.\n      // Image dirs are to be used for edits too.\n      return Lists.newArrayList(getNamespaceDirs(conf));\n    } else {\n      return Lists.newArrayList(editsDirs);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
          "extendedDetails": {}
        }
      ]
    },
    "11df1c256171564b0578477c226723358be812c4": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-2874. Edit log should log to shared dirs before local dirs. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1240445 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/02/12 6:52 PM",
      "commitName": "11df1c256171564b0578477c226723358be812c4",
      "commitAuthor": "Todd Lipcon",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-2874. Edit log should log to shared dirs before local dirs. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1240445 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "03/02/12 6:52 PM",
          "commitName": "11df1c256171564b0578477c226723358be812c4",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "03/02/12 10:04 AM",
          "commitNameOld": "969318cfc2397110a686a0a728b56b6a0cab9f4d",
          "commitAuthorOld": "Aaron Myers",
          "daysBetweenCommits": 0.37,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,33 @@\n-  public static Collection\u003cURI\u003e getNamespaceEditsDirs(Configuration conf) {\n-    Collection\u003cURI\u003e editsDirs \u003d getStorageDirs(conf, DFS_NAMENODE_EDITS_DIR_KEY);\n-    editsDirs.addAll(getSharedEditsDirs(conf));\n-    Set\u003cURI\u003e uniqueEditsDirs \u003d new HashSet\u003cURI\u003e();\n-    uniqueEditsDirs.addAll(editsDirs);\n-    if (uniqueEditsDirs.size() !\u003d editsDirs.size()) {\n-      // clearing and re-initializing editsDirs to preserve Collection semantics\n-      // assigning finalEditsDirs to editsDirs would leak Set semantics in the \n-      // return value and cause unexpected results downstream. eg future addAll\n-      // calls. Perf is not an issue since these are small lists.\n-      editsDirs.clear();\n-      editsDirs.addAll(uniqueEditsDirs);\n-      LOG.warn(\"Overlapping entries in \" + DFS_NAMENODE_EDITS_DIR_KEY \n-          + \" and/or \" + DFS_NAMENODE_SHARED_EDITS_DIR_KEY\n-          + \". Using the following entries: \" + Joiner.on(\u0027,\u0027).join(editsDirs));\n+  public static List\u003cURI\u003e getNamespaceEditsDirs(Configuration conf) {\n+    // Use a LinkedHashSet so that order is maintained while we de-dup\n+    // the entries.\n+    LinkedHashSet\u003cURI\u003e editsDirs \u003d new LinkedHashSet\u003cURI\u003e();\n+    \n+    // First add the shared edits dirs. It\u0027s critical that the shared dirs\n+    // are added first, since JournalSet syncs them in the order they are listed,\n+    // and we need to make sure all edits are in place in the shared storage\n+    // before they are replicated locally. See HDFS-2874.\n+    for (URI dir : getSharedEditsDirs(conf)) {\n+      if (!editsDirs.add(dir)) {\n+        LOG.warn(\"Edits URI \" + dir + \" listed multiple times in \" + \n+            DFS_NAMENODE_SHARED_EDITS_DIR_KEY + \". Ignoring duplicates.\");\n+      }\n     }\n+    \n+    // Now add the non-shared dirs.\n+    for (URI dir : getStorageDirs(conf, DFS_NAMENODE_EDITS_DIR_KEY)) {\n+      if (!editsDirs.add(dir)) {\n+        LOG.warn(\"Edits URI \" + dir + \" listed multiple times in \" + \n+            DFS_NAMENODE_SHARED_EDITS_DIR_KEY + \" and \" +\n+            DFS_NAMENODE_EDITS_DIR_KEY + \". Ignoring duplicates.\");\n+      }\n+    }\n+\n     if (editsDirs.isEmpty()) {\n       // If this is the case, no edit dirs have been explicitly configured.\n       // Image dirs are to be used for edits too.\n-      return getNamespaceDirs(conf);\n+      return Lists.newArrayList(getNamespaceDirs(conf));\n     } else {\n-      return editsDirs;\n+      return Lists.newArrayList(editsDirs);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static List\u003cURI\u003e getNamespaceEditsDirs(Configuration conf) {\n    // Use a LinkedHashSet so that order is maintained while we de-dup\n    // the entries.\n    LinkedHashSet\u003cURI\u003e editsDirs \u003d new LinkedHashSet\u003cURI\u003e();\n    \n    // First add the shared edits dirs. It\u0027s critical that the shared dirs\n    // are added first, since JournalSet syncs them in the order they are listed,\n    // and we need to make sure all edits are in place in the shared storage\n    // before they are replicated locally. See HDFS-2874.\n    for (URI dir : getSharedEditsDirs(conf)) {\n      if (!editsDirs.add(dir)) {\n        LOG.warn(\"Edits URI \" + dir + \" listed multiple times in \" + \n            DFS_NAMENODE_SHARED_EDITS_DIR_KEY + \". Ignoring duplicates.\");\n      }\n    }\n    \n    // Now add the non-shared dirs.\n    for (URI dir : getStorageDirs(conf, DFS_NAMENODE_EDITS_DIR_KEY)) {\n      if (!editsDirs.add(dir)) {\n        LOG.warn(\"Edits URI \" + dir + \" listed multiple times in \" + \n            DFS_NAMENODE_SHARED_EDITS_DIR_KEY + \" and \" +\n            DFS_NAMENODE_EDITS_DIR_KEY + \". Ignoring duplicates.\");\n      }\n    }\n\n    if (editsDirs.isEmpty()) {\n      // If this is the case, no edit dirs have been explicitly configured.\n      // Image dirs are to be used for edits too.\n      return Lists.newArrayList(getNamespaceDirs(conf));\n    } else {\n      return Lists.newArrayList(editsDirs);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
          "extendedDetails": {
            "oldValue": "Collection\u003cURI\u003e",
            "newValue": "List\u003cURI\u003e"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-2874. Edit log should log to shared dirs before local dirs. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1240445 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "03/02/12 6:52 PM",
          "commitName": "11df1c256171564b0578477c226723358be812c4",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "03/02/12 10:04 AM",
          "commitNameOld": "969318cfc2397110a686a0a728b56b6a0cab9f4d",
          "commitAuthorOld": "Aaron Myers",
          "daysBetweenCommits": 0.37,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,33 @@\n-  public static Collection\u003cURI\u003e getNamespaceEditsDirs(Configuration conf) {\n-    Collection\u003cURI\u003e editsDirs \u003d getStorageDirs(conf, DFS_NAMENODE_EDITS_DIR_KEY);\n-    editsDirs.addAll(getSharedEditsDirs(conf));\n-    Set\u003cURI\u003e uniqueEditsDirs \u003d new HashSet\u003cURI\u003e();\n-    uniqueEditsDirs.addAll(editsDirs);\n-    if (uniqueEditsDirs.size() !\u003d editsDirs.size()) {\n-      // clearing and re-initializing editsDirs to preserve Collection semantics\n-      // assigning finalEditsDirs to editsDirs would leak Set semantics in the \n-      // return value and cause unexpected results downstream. eg future addAll\n-      // calls. Perf is not an issue since these are small lists.\n-      editsDirs.clear();\n-      editsDirs.addAll(uniqueEditsDirs);\n-      LOG.warn(\"Overlapping entries in \" + DFS_NAMENODE_EDITS_DIR_KEY \n-          + \" and/or \" + DFS_NAMENODE_SHARED_EDITS_DIR_KEY\n-          + \". Using the following entries: \" + Joiner.on(\u0027,\u0027).join(editsDirs));\n+  public static List\u003cURI\u003e getNamespaceEditsDirs(Configuration conf) {\n+    // Use a LinkedHashSet so that order is maintained while we de-dup\n+    // the entries.\n+    LinkedHashSet\u003cURI\u003e editsDirs \u003d new LinkedHashSet\u003cURI\u003e();\n+    \n+    // First add the shared edits dirs. It\u0027s critical that the shared dirs\n+    // are added first, since JournalSet syncs them in the order they are listed,\n+    // and we need to make sure all edits are in place in the shared storage\n+    // before they are replicated locally. See HDFS-2874.\n+    for (URI dir : getSharedEditsDirs(conf)) {\n+      if (!editsDirs.add(dir)) {\n+        LOG.warn(\"Edits URI \" + dir + \" listed multiple times in \" + \n+            DFS_NAMENODE_SHARED_EDITS_DIR_KEY + \". Ignoring duplicates.\");\n+      }\n     }\n+    \n+    // Now add the non-shared dirs.\n+    for (URI dir : getStorageDirs(conf, DFS_NAMENODE_EDITS_DIR_KEY)) {\n+      if (!editsDirs.add(dir)) {\n+        LOG.warn(\"Edits URI \" + dir + \" listed multiple times in \" + \n+            DFS_NAMENODE_SHARED_EDITS_DIR_KEY + \" and \" +\n+            DFS_NAMENODE_EDITS_DIR_KEY + \". Ignoring duplicates.\");\n+      }\n+    }\n+\n     if (editsDirs.isEmpty()) {\n       // If this is the case, no edit dirs have been explicitly configured.\n       // Image dirs are to be used for edits too.\n-      return getNamespaceDirs(conf);\n+      return Lists.newArrayList(getNamespaceDirs(conf));\n     } else {\n-      return editsDirs;\n+      return Lists.newArrayList(editsDirs);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static List\u003cURI\u003e getNamespaceEditsDirs(Configuration conf) {\n    // Use a LinkedHashSet so that order is maintained while we de-dup\n    // the entries.\n    LinkedHashSet\u003cURI\u003e editsDirs \u003d new LinkedHashSet\u003cURI\u003e();\n    \n    // First add the shared edits dirs. It\u0027s critical that the shared dirs\n    // are added first, since JournalSet syncs them in the order they are listed,\n    // and we need to make sure all edits are in place in the shared storage\n    // before they are replicated locally. See HDFS-2874.\n    for (URI dir : getSharedEditsDirs(conf)) {\n      if (!editsDirs.add(dir)) {\n        LOG.warn(\"Edits URI \" + dir + \" listed multiple times in \" + \n            DFS_NAMENODE_SHARED_EDITS_DIR_KEY + \". Ignoring duplicates.\");\n      }\n    }\n    \n    // Now add the non-shared dirs.\n    for (URI dir : getStorageDirs(conf, DFS_NAMENODE_EDITS_DIR_KEY)) {\n      if (!editsDirs.add(dir)) {\n        LOG.warn(\"Edits URI \" + dir + \" listed multiple times in \" + \n            DFS_NAMENODE_SHARED_EDITS_DIR_KEY + \" and \" +\n            DFS_NAMENODE_EDITS_DIR_KEY + \". Ignoring duplicates.\");\n      }\n    }\n\n    if (editsDirs.isEmpty()) {\n      // If this is the case, no edit dirs have been explicitly configured.\n      // Image dirs are to be used for edits too.\n      return Lists.newArrayList(getNamespaceDirs(conf));\n    } else {\n      return Lists.newArrayList(editsDirs);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
          "extendedDetails": {}
        }
      ]
    },
    "969318cfc2397110a686a0a728b56b6a0cab9f4d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2863. Failures observed if dfs.edits.dir and shared.edits.dir have same directories. Contributed by Bikas Saha.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1240267 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/02/12 10:04 AM",
      "commitName": "969318cfc2397110a686a0a728b56b6a0cab9f4d",
      "commitAuthor": "Aaron Myers",
      "commitDateOld": "02/02/12 7:10 PM",
      "commitNameOld": "d2b5531b0f034cbcde4f6dfaaba463b347fbc60b",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.62,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,24 @@\n   public static Collection\u003cURI\u003e getNamespaceEditsDirs(Configuration conf) {\n     Collection\u003cURI\u003e editsDirs \u003d getStorageDirs(conf, DFS_NAMENODE_EDITS_DIR_KEY);\n     editsDirs.addAll(getSharedEditsDirs(conf));\n+    Set\u003cURI\u003e uniqueEditsDirs \u003d new HashSet\u003cURI\u003e();\n+    uniqueEditsDirs.addAll(editsDirs);\n+    if (uniqueEditsDirs.size() !\u003d editsDirs.size()) {\n+      // clearing and re-initializing editsDirs to preserve Collection semantics\n+      // assigning finalEditsDirs to editsDirs would leak Set semantics in the \n+      // return value and cause unexpected results downstream. eg future addAll\n+      // calls. Perf is not an issue since these are small lists.\n+      editsDirs.clear();\n+      editsDirs.addAll(uniqueEditsDirs);\n+      LOG.warn(\"Overlapping entries in \" + DFS_NAMENODE_EDITS_DIR_KEY \n+          + \" and/or \" + DFS_NAMENODE_SHARED_EDITS_DIR_KEY\n+          + \". Using the following entries: \" + Joiner.on(\u0027,\u0027).join(editsDirs));\n+    }\n     if (editsDirs.isEmpty()) {\n       // If this is the case, no edit dirs have been explicitly configured.\n       // Image dirs are to be used for edits too.\n       return getNamespaceDirs(conf);\n     } else {\n       return editsDirs;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static Collection\u003cURI\u003e getNamespaceEditsDirs(Configuration conf) {\n    Collection\u003cURI\u003e editsDirs \u003d getStorageDirs(conf, DFS_NAMENODE_EDITS_DIR_KEY);\n    editsDirs.addAll(getSharedEditsDirs(conf));\n    Set\u003cURI\u003e uniqueEditsDirs \u003d new HashSet\u003cURI\u003e();\n    uniqueEditsDirs.addAll(editsDirs);\n    if (uniqueEditsDirs.size() !\u003d editsDirs.size()) {\n      // clearing and re-initializing editsDirs to preserve Collection semantics\n      // assigning finalEditsDirs to editsDirs would leak Set semantics in the \n      // return value and cause unexpected results downstream. eg future addAll\n      // calls. Perf is not an issue since these are small lists.\n      editsDirs.clear();\n      editsDirs.addAll(uniqueEditsDirs);\n      LOG.warn(\"Overlapping entries in \" + DFS_NAMENODE_EDITS_DIR_KEY \n          + \" and/or \" + DFS_NAMENODE_SHARED_EDITS_DIR_KEY\n          + \". Using the following entries: \" + Joiner.on(\u0027,\u0027).join(editsDirs));\n    }\n    if (editsDirs.isEmpty()) {\n      // If this is the case, no edit dirs have been explicitly configured.\n      // Image dirs are to be used for edits too.\n      return getNamespaceDirs(conf);\n    } else {\n      return editsDirs;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "a27adf3de4ea88a80401fc7157c5e39747230c2a": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2430. The number of failed or low-resource volumes the NN can tolerate should be configurable. Contributed by Aaron T. Myers\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1211650 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/12/11 1:47 PM",
      "commitName": "a27adf3de4ea88a80401fc7157c5e39747230c2a",
      "commitAuthor": "Aaron Myers",
      "commitDateOld": "20/11/11 11:01 PM",
      "commitNameOld": "9c2f4f634db124282f114a44b2e7dfc899693c1d",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 16.62,
      "commitsBetweenForRepo": 89,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,3 +1,10 @@\n   public static Collection\u003cURI\u003e getNamespaceEditsDirs(Configuration conf) {\n-    return getStorageDirs(conf, DFS_NAMENODE_EDITS_DIR_KEY);\n+    Collection\u003cURI\u003e editsDirs \u003d getStorageDirs(conf, DFS_NAMENODE_EDITS_DIR_KEY);\n+    if (editsDirs.isEmpty()) {\n+      // If this is the case, no edit dirs have been explicitly configured.\n+      // Image dirs are to be used for edits too.\n+      return getNamespaceDirs(conf);\n+    } else {\n+      return editsDirs;\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static Collection\u003cURI\u003e getNamespaceEditsDirs(Configuration conf) {\n    Collection\u003cURI\u003e editsDirs \u003d getStorageDirs(conf, DFS_NAMENODE_EDITS_DIR_KEY);\n    if (editsDirs.isEmpty()) {\n      // If this is the case, no edit dirs have been explicitly configured.\n      // Image dirs are to be used for edits too.\n      return getNamespaceDirs(conf);\n    } else {\n      return editsDirs;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "f87a4b40bc99e76602a75906df31747cfdbff78a": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-1975. Support for sharing the namenode state from active to standby. Contributed by Jitendra Nath Pandey, Aaron T Myers, and Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1208813 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/11/11 1:46 PM",
      "commitName": "f87a4b40bc99e76602a75906df31747cfdbff78a",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "23/11/11 4:55 PM",
      "commitNameOld": "5f5b3bbdcd091fc6d14401eebc9c41204bad2325",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 6.87,
      "commitsBetweenForRepo": 34,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,3 +1,5 @@\n   public static Collection\u003cURI\u003e getNamespaceEditsDirs(Configuration conf) {\n-    return getStorageDirs(conf, DFS_NAMENODE_EDITS_DIR_KEY);\n+    Collection\u003cURI\u003e editsDirs \u003d getStorageDirs(conf, DFS_NAMENODE_EDITS_DIR_KEY);\n+    editsDirs.addAll(getSharedEditsDirs(conf));\n+    return editsDirs;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static Collection\u003cURI\u003e getNamespaceEditsDirs(Configuration conf) {\n    Collection\u003cURI\u003e editsDirs \u003d getStorageDirs(conf, DFS_NAMENODE_EDITS_DIR_KEY);\n    editsDirs.addAll(getSharedEditsDirs(conf));\n    return editsDirs;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static Collection\u003cURI\u003e getNamespaceEditsDirs(Configuration conf) {\n    return getStorageDirs(conf, DFS_NAMENODE_EDITS_DIR_KEY);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static Collection\u003cURI\u003e getNamespaceEditsDirs(Configuration conf) {\n    return getStorageDirs(conf, DFS_NAMENODE_EDITS_DIR_KEY);\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java"
      }
    },
    "ef223e8e8e1e18733fc18cd84e34dd0bb0f9a710": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2241. Remove implementing FSConstants interface to just get the constants from the interface. Contributed by Suresh Srinivas.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1156420 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/08/11 5:46 PM",
      "commitName": "ef223e8e8e1e18733fc18cd84e34dd0bb0f9a710",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "09/08/11 6:50 PM",
      "commitNameOld": "5d5b1c6c10c66c6a17b483a3e1a98d59d3d0bdee",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 0.96,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,3 +1,3 @@\n   public static Collection\u003cURI\u003e getNamespaceEditsDirs(Configuration conf) {\n-    return getStorageDirs(conf, DFSConfigKeys.DFS_NAMENODE_EDITS_DIR_KEY);\n+    return getStorageDirs(conf, DFS_NAMENODE_EDITS_DIR_KEY);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static Collection\u003cURI\u003e getNamespaceEditsDirs(Configuration conf) {\n    return getStorageDirs(conf, DFS_NAMENODE_EDITS_DIR_KEY);\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,3 @@\n+  public static Collection\u003cURI\u003e getNamespaceEditsDirs(Configuration conf) {\n+    return getStorageDirs(conf, DFSConfigKeys.DFS_NAMENODE_EDITS_DIR_KEY);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static Collection\u003cURI\u003e getNamespaceEditsDirs(Configuration conf) {\n    return getStorageDirs(conf, DFSConfigKeys.DFS_NAMENODE_EDITS_DIR_KEY);\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java"
    }
  }
}