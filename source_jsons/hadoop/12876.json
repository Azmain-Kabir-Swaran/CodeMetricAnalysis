{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ProvidedStorageMap.java",
  "functionName": "chooseRandomNode",
  "functionId": "chooseRandomNode___excludedUUids-Set__String____preferLiveNodes-boolean",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/ProvidedStorageMap.java",
  "functionStartLine": 374,
  "functionEndLine": 389,
  "numCommitsSeen": 17,
  "timeTaken": 503,
  "changeHistory": [
    "0f6aa9564cbe0812a8cab36d999e353269dd6bc9"
  ],
  "changeHistoryShort": {
    "0f6aa9564cbe0812a8cab36d999e353269dd6bc9": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0f6aa9564cbe0812a8cab36d999e353269dd6bc9": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-12905. [READ] Handle decommissioning and under-maintenance Datanodes with Provided storage.\n",
      "commitDate": "15/12/17 5:51 PM",
      "commitName": "0f6aa9564cbe0812a8cab36d999e353269dd6bc9",
      "commitAuthor": "Virajith Jalaparti",
      "diff": "@@ -0,0 +1,16 @@\n+    private DatanodeDescriptor chooseRandomNode(Set\u003cString\u003e excludedUUids,\n+        boolean preferLiveNodes) {\n+      Random r \u003d new Random();\n+      for (int i \u003d dnR.size() - 1; i \u003e\u003d 0; --i) {\n+        int pos \u003d r.nextInt(i + 1);\n+        DatanodeDescriptor node \u003d dnR.get(pos);\n+        String uuid \u003d node.getDatanodeUuid();\n+        if (!excludedUUids.contains(uuid)) {\n+          if (!preferLiveNodes || node.getAdminState() \u003d\u003d AdminStates.NORMAL) {\n+            return node;\n+          }\n+        }\n+        Collections.swap(dnR, i, pos);\n+      }\n+      return null;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private DatanodeDescriptor chooseRandomNode(Set\u003cString\u003e excludedUUids,\n        boolean preferLiveNodes) {\n      Random r \u003d new Random();\n      for (int i \u003d dnR.size() - 1; i \u003e\u003d 0; --i) {\n        int pos \u003d r.nextInt(i + 1);\n        DatanodeDescriptor node \u003d dnR.get(pos);\n        String uuid \u003d node.getDatanodeUuid();\n        if (!excludedUUids.contains(uuid)) {\n          if (!preferLiveNodes || node.getAdminState() \u003d\u003d AdminStates.NORMAL) {\n            return node;\n          }\n        }\n        Collections.swap(dnR, i, pos);\n      }\n      return null;\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/ProvidedStorageMap.java"
    }
  }
}