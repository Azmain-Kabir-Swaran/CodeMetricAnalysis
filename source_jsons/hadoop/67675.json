{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "UniformSizeInputFormat.java",
  "functionName": "getListingFileReader",
  "functionId": "getListingFileReader___configuration-Configuration",
  "sourceFilePath": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/mapred/UniformSizeInputFormat.java",
  "functionStartLine": 142,
  "functionEndLine": 159,
  "numCommitsSeen": 9,
  "timeTaken": 486,
  "changeHistory": [
    "d06948002fb0cabf72cc0d46bf2fa67d45370f67"
  ],
  "changeHistoryShort": {
    "d06948002fb0cabf72cc0d46bf2fa67d45370f67": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d06948002fb0cabf72cc0d46bf2fa67d45370f67": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-2765. DistCp Rewrite. (Mithun Radhakrishnan via mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1236045 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/01/12 10:36 PM",
      "commitName": "d06948002fb0cabf72cc0d46bf2fa67d45370f67",
      "commitAuthor": "Mahadev Konar",
      "diff": "@@ -0,0 +1,18 @@\n+  private SequenceFile.Reader getListingFileReader(Configuration configuration) {\n+\n+    final Path listingFilePath \u003d getListingFilePath(configuration);\n+    try {\n+      final FileSystem fileSystem \u003d listingFilePath.getFileSystem(configuration);\n+      if (!fileSystem.exists(listingFilePath))\n+        throw new IllegalArgumentException(\"Listing file doesn\u0027t exist at: \"\n+                                           + listingFilePath);\n+\n+      return new SequenceFile.Reader(configuration,\n+                                     SequenceFile.Reader.file(listingFilePath));\n+    }\n+    catch (IOException exception) {\n+      LOG.error(\"Couldn\u0027t find listing file at: \" + listingFilePath, exception);\n+      throw new IllegalArgumentException(\"Couldn\u0027t find listing-file at: \"\n+                                         + listingFilePath, exception);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private SequenceFile.Reader getListingFileReader(Configuration configuration) {\n\n    final Path listingFilePath \u003d getListingFilePath(configuration);\n    try {\n      final FileSystem fileSystem \u003d listingFilePath.getFileSystem(configuration);\n      if (!fileSystem.exists(listingFilePath))\n        throw new IllegalArgumentException(\"Listing file doesn\u0027t exist at: \"\n                                           + listingFilePath);\n\n      return new SequenceFile.Reader(configuration,\n                                     SequenceFile.Reader.file(listingFilePath));\n    }\n    catch (IOException exception) {\n      LOG.error(\"Couldn\u0027t find listing file at: \" + listingFilePath, exception);\n      throw new IllegalArgumentException(\"Couldn\u0027t find listing-file at: \"\n                                         + listingFilePath, exception);\n    }\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/mapred/UniformSizeInputFormat.java"
    }
  }
}