{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSNamesystem.java",
  "functionName": "addErasureCodingPolicies",
  "functionId": "addErasureCodingPolicies___policies-ErasureCodingPolicy[]__logRetryCache-boolean(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
  "functionStartLine": 8008,
  "functionEndLine": 8039,
  "numCommitsSeen": 2381,
  "timeTaken": 18553,
  "changeHistory": [
    "1824aee9da4056de0fb638906b2172e486bbebe7",
    "5527d79adb9b1e2f2779c283f81d6a3d5447babc",
    "abc8fde4caea0e197568ee28392c46f1ce0d42e1",
    "ef02f9b233116a10cf9274b3753fe0b8dcbe8d92",
    "a12f09ba3c4a3aa4c4558090c5e1b7bcaebe3b94",
    "08d996d3e9265efad737efad50cbc5b10a0202f8",
    "2adf8bed712e6d770a0d53eea198d8911ae1a258",
    "1040bae6fcbae7079d8126368cdeac60831a4d0c",
    "0b67436068899497e99c86f37fd4887ca188fae2",
    "f99b6d19de77c6e730fed8444f8848a7e63d6130",
    "a62be38a5e5d3a61dfb59054b3f5fd5b1b7053b3",
    "cb672a45a0bbd8950b9b5e304c2e03f516945903"
  ],
  "changeHistoryShort": {
    "1824aee9da4056de0fb638906b2172e486bbebe7": "Ybodychange",
    "5527d79adb9b1e2f2779c283f81d6a3d5447babc": "Ybodychange",
    "abc8fde4caea0e197568ee28392c46f1ce0d42e1": "Ybodychange",
    "ef02f9b233116a10cf9274b3753fe0b8dcbe8d92": "Ybodychange",
    "a12f09ba3c4a3aa4c4558090c5e1b7bcaebe3b94": "Ymultichange(Yreturntypechange,Ybodychange)",
    "08d996d3e9265efad737efad50cbc5b10a0202f8": "Ymultichange(Yparameterchange,Ybodychange)",
    "2adf8bed712e6d770a0d53eea198d8911ae1a258": "Ybodychange",
    "1040bae6fcbae7079d8126368cdeac60831a4d0c": "Ybodychange",
    "0b67436068899497e99c86f37fd4887ca188fae2": "Ymultichange(Yrename,Ybodychange)",
    "f99b6d19de77c6e730fed8444f8848a7e63d6130": "Ybodychange",
    "a62be38a5e5d3a61dfb59054b3f5fd5b1b7053b3": "Ymultichange(Yreturntypechange,Ybodychange)",
    "cb672a45a0bbd8950b9b5e304c2e03f516945903": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1824aee9da4056de0fb638906b2172e486bbebe7": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-15217 Add more information to longest write/read lock held log\n\n",
      "commitDate": "18/04/20 1:52 PM",
      "commitName": "1824aee9da4056de0fb638906b2172e486bbebe7",
      "commitAuthor": "Toshihiro Suzuki",
      "commitDateOld": "25/03/20 10:28 AM",
      "commitNameOld": "a700803a18fb957d2799001a2ce1dcb70f75c080",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 24.14,
      "commitsBetweenForRepo": 78,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,32 @@\n   AddErasureCodingPolicyResponse[] addErasureCodingPolicies(\n       ErasureCodingPolicy[] policies, final boolean logRetryCache)\n       throws IOException {\n     final String operationName \u003d \"addErasureCodingPolicies\";\n     List\u003cString\u003e addECPolicyNames \u003d new ArrayList\u003c\u003e(policies.length);\n     checkOperation(OperationCategory.WRITE);\n     checkErasureCodingSupported(operationName);\n     List\u003cAddErasureCodingPolicyResponse\u003e responses \u003d\n         new ArrayList\u003c\u003e(policies.length);\n     writeLock();\n     try {\n       checkOperation(OperationCategory.WRITE);\n       checkNameNodeSafeMode(\"Cannot add erasure coding policy\");\n       for (ErasureCodingPolicy policy : policies) {\n         try {\n           ErasureCodingPolicy newPolicy \u003d\n               FSDirErasureCodingOp.addErasureCodingPolicy(this, policy,\n                   logRetryCache);\n           addECPolicyNames.add(newPolicy.getName());\n           responses.add(new AddErasureCodingPolicyResponse(newPolicy));\n         } catch (HadoopIllegalArgumentException e) {\n           responses.add(new AddErasureCodingPolicyResponse(policy, e));\n         }\n       }\n     } finally {\n-      writeUnlock(operationName);\n+      writeUnlock(operationName,\n+          getLockReportInfoSupplier(addECPolicyNames.toString()));\n     }\n     getEditLog().logSync();\n     logAuditEvent(true, operationName, addECPolicyNames.toString());\n     return responses.toArray(new AddErasureCodingPolicyResponse[0]);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  AddErasureCodingPolicyResponse[] addErasureCodingPolicies(\n      ErasureCodingPolicy[] policies, final boolean logRetryCache)\n      throws IOException {\n    final String operationName \u003d \"addErasureCodingPolicies\";\n    List\u003cString\u003e addECPolicyNames \u003d new ArrayList\u003c\u003e(policies.length);\n    checkOperation(OperationCategory.WRITE);\n    checkErasureCodingSupported(operationName);\n    List\u003cAddErasureCodingPolicyResponse\u003e responses \u003d\n        new ArrayList\u003c\u003e(policies.length);\n    writeLock();\n    try {\n      checkOperation(OperationCategory.WRITE);\n      checkNameNodeSafeMode(\"Cannot add erasure coding policy\");\n      for (ErasureCodingPolicy policy : policies) {\n        try {\n          ErasureCodingPolicy newPolicy \u003d\n              FSDirErasureCodingOp.addErasureCodingPolicy(this, policy,\n                  logRetryCache);\n          addECPolicyNames.add(newPolicy.getName());\n          responses.add(new AddErasureCodingPolicyResponse(newPolicy));\n        } catch (HadoopIllegalArgumentException e) {\n          responses.add(new AddErasureCodingPolicyResponse(policy, e));\n        }\n      }\n    } finally {\n      writeUnlock(operationName,\n          getLockReportInfoSupplier(addECPolicyNames.toString()));\n    }\n    getEditLog().logSync();\n    logAuditEvent(true, operationName, addECPolicyNames.toString());\n    return responses.toArray(new AddErasureCodingPolicyResponse[0]);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "5527d79adb9b1e2f2779c283f81d6a3d5447babc": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14810. Review FSNameSystem editlog sync. Contributed by Xiaoqiao He.\n",
      "commitDate": "17/10/19 9:26 AM",
      "commitName": "5527d79adb9b1e2f2779c283f81d6a3d5447babc",
      "commitAuthor": "Ayush Saxena",
      "commitDateOld": "06/09/19 5:42 AM",
      "commitNameOld": "d98c54816d21d59c4d877ae4b1917b22268ffcef",
      "commitAuthorOld": "Surendra Singh Lilhore",
      "daysBetweenCommits": 41.16,
      "commitsBetweenForRepo": 321,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,31 @@\n   AddErasureCodingPolicyResponse[] addErasureCodingPolicies(\n       ErasureCodingPolicy[] policies, final boolean logRetryCache)\n       throws IOException {\n     final String operationName \u003d \"addErasureCodingPolicies\";\n     List\u003cString\u003e addECPolicyNames \u003d new ArrayList\u003c\u003e(policies.length);\n     checkOperation(OperationCategory.WRITE);\n     checkErasureCodingSupported(operationName);\n     List\u003cAddErasureCodingPolicyResponse\u003e responses \u003d\n         new ArrayList\u003c\u003e(policies.length);\n-    boolean success \u003d false;\n     writeLock();\n     try {\n       checkOperation(OperationCategory.WRITE);\n       checkNameNodeSafeMode(\"Cannot add erasure coding policy\");\n       for (ErasureCodingPolicy policy : policies) {\n         try {\n           ErasureCodingPolicy newPolicy \u003d\n               FSDirErasureCodingOp.addErasureCodingPolicy(this, policy,\n                   logRetryCache);\n           addECPolicyNames.add(newPolicy.getName());\n           responses.add(new AddErasureCodingPolicyResponse(newPolicy));\n         } catch (HadoopIllegalArgumentException e) {\n           responses.add(new AddErasureCodingPolicyResponse(policy, e));\n         }\n       }\n-      success \u003d true;\n-      return responses.toArray(new AddErasureCodingPolicyResponse[0]);\n     } finally {\n       writeUnlock(operationName);\n-      if (success) {\n-        getEditLog().logSync();\n-      }\n-      logAuditEvent(success, operationName, addECPolicyNames.toString(),\n-          null, null);\n     }\n+    getEditLog().logSync();\n+    logAuditEvent(true, operationName, addECPolicyNames.toString());\n+    return responses.toArray(new AddErasureCodingPolicyResponse[0]);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  AddErasureCodingPolicyResponse[] addErasureCodingPolicies(\n      ErasureCodingPolicy[] policies, final boolean logRetryCache)\n      throws IOException {\n    final String operationName \u003d \"addErasureCodingPolicies\";\n    List\u003cString\u003e addECPolicyNames \u003d new ArrayList\u003c\u003e(policies.length);\n    checkOperation(OperationCategory.WRITE);\n    checkErasureCodingSupported(operationName);\n    List\u003cAddErasureCodingPolicyResponse\u003e responses \u003d\n        new ArrayList\u003c\u003e(policies.length);\n    writeLock();\n    try {\n      checkOperation(OperationCategory.WRITE);\n      checkNameNodeSafeMode(\"Cannot add erasure coding policy\");\n      for (ErasureCodingPolicy policy : policies) {\n        try {\n          ErasureCodingPolicy newPolicy \u003d\n              FSDirErasureCodingOp.addErasureCodingPolicy(this, policy,\n                  logRetryCache);\n          addECPolicyNames.add(newPolicy.getName());\n          responses.add(new AddErasureCodingPolicyResponse(newPolicy));\n        } catch (HadoopIllegalArgumentException e) {\n          responses.add(new AddErasureCodingPolicyResponse(policy, e));\n        }\n      }\n    } finally {\n      writeUnlock(operationName);\n    }\n    getEditLog().logSync();\n    logAuditEvent(true, operationName, addECPolicyNames.toString());\n    return responses.toArray(new AddErasureCodingPolicyResponse[0]);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "abc8fde4caea0e197568ee28392c46f1ce0d42e1": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13596. NN restart fails after RollingUpgrade from 2.x to 3.x. Contributed by Fei Hui.\n",
      "commitDate": "22/08/19 10:44 PM",
      "commitName": "abc8fde4caea0e197568ee28392c46f1ce0d42e1",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "13/08/19 4:50 PM",
      "commitNameOld": "633b7c1cfecde6166899449efae6326ee03cd8c4",
      "commitAuthorOld": "Wei-Chiu Chuang",
      "daysBetweenCommits": 9.25,
      "commitsBetweenForRepo": 107,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,36 @@\n   AddErasureCodingPolicyResponse[] addErasureCodingPolicies(\n       ErasureCodingPolicy[] policies, final boolean logRetryCache)\n       throws IOException {\n     final String operationName \u003d \"addErasureCodingPolicies\";\n     List\u003cString\u003e addECPolicyNames \u003d new ArrayList\u003c\u003e(policies.length);\n     checkOperation(OperationCategory.WRITE);\n+    checkErasureCodingSupported(operationName);\n     List\u003cAddErasureCodingPolicyResponse\u003e responses \u003d\n         new ArrayList\u003c\u003e(policies.length);\n     boolean success \u003d false;\n     writeLock();\n     try {\n       checkOperation(OperationCategory.WRITE);\n       checkNameNodeSafeMode(\"Cannot add erasure coding policy\");\n       for (ErasureCodingPolicy policy : policies) {\n         try {\n           ErasureCodingPolicy newPolicy \u003d\n               FSDirErasureCodingOp.addErasureCodingPolicy(this, policy,\n                   logRetryCache);\n           addECPolicyNames.add(newPolicy.getName());\n           responses.add(new AddErasureCodingPolicyResponse(newPolicy));\n         } catch (HadoopIllegalArgumentException e) {\n           responses.add(new AddErasureCodingPolicyResponse(policy, e));\n         }\n       }\n       success \u003d true;\n       return responses.toArray(new AddErasureCodingPolicyResponse[0]);\n     } finally {\n       writeUnlock(operationName);\n       if (success) {\n         getEditLog().logSync();\n       }\n       logAuditEvent(success, operationName, addECPolicyNames.toString(),\n           null, null);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  AddErasureCodingPolicyResponse[] addErasureCodingPolicies(\n      ErasureCodingPolicy[] policies, final boolean logRetryCache)\n      throws IOException {\n    final String operationName \u003d \"addErasureCodingPolicies\";\n    List\u003cString\u003e addECPolicyNames \u003d new ArrayList\u003c\u003e(policies.length);\n    checkOperation(OperationCategory.WRITE);\n    checkErasureCodingSupported(operationName);\n    List\u003cAddErasureCodingPolicyResponse\u003e responses \u003d\n        new ArrayList\u003c\u003e(policies.length);\n    boolean success \u003d false;\n    writeLock();\n    try {\n      checkOperation(OperationCategory.WRITE);\n      checkNameNodeSafeMode(\"Cannot add erasure coding policy\");\n      for (ErasureCodingPolicy policy : policies) {\n        try {\n          ErasureCodingPolicy newPolicy \u003d\n              FSDirErasureCodingOp.addErasureCodingPolicy(this, policy,\n                  logRetryCache);\n          addECPolicyNames.add(newPolicy.getName());\n          responses.add(new AddErasureCodingPolicyResponse(newPolicy));\n        } catch (HadoopIllegalArgumentException e) {\n          responses.add(new AddErasureCodingPolicyResponse(policy, e));\n        }\n      }\n      success \u003d true;\n      return responses.toArray(new AddErasureCodingPolicyResponse[0]);\n    } finally {\n      writeUnlock(operationName);\n      if (success) {\n        getEditLog().logSync();\n      }\n      logAuditEvent(success, operationName, addECPolicyNames.toString(),\n          null, null);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "ef02f9b233116a10cf9274b3753fe0b8dcbe8d92": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13217. Audit log all EC policy names during addErasureCodingPolicies. Contributed by liaoyuxiangqin.\n",
      "commitDate": "15/08/18 9:23 AM",
      "commitName": "ef02f9b233116a10cf9274b3753fe0b8dcbe8d92",
      "commitAuthor": "Xiao Chen",
      "commitDateOld": "12/08/18 3:06 AM",
      "commitNameOld": "3ac07b720b7839a7fe6c83f4ccfe319b6a892501",
      "commitAuthorOld": "Uma Maheswara Rao Gangumalla",
      "daysBetweenCommits": 3.26,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,35 @@\n   AddErasureCodingPolicyResponse[] addErasureCodingPolicies(\n       ErasureCodingPolicy[] policies, final boolean logRetryCache)\n       throws IOException {\n     final String operationName \u003d \"addErasureCodingPolicies\";\n-    String addECPolicyName \u003d \"\";\n+    List\u003cString\u003e addECPolicyNames \u003d new ArrayList\u003c\u003e(policies.length);\n     checkOperation(OperationCategory.WRITE);\n-    List\u003cAddErasureCodingPolicyResponse\u003e responses \u003d new ArrayList\u003c\u003e();\n+    List\u003cAddErasureCodingPolicyResponse\u003e responses \u003d\n+        new ArrayList\u003c\u003e(policies.length);\n     boolean success \u003d false;\n     writeLock();\n     try {\n       checkOperation(OperationCategory.WRITE);\n       checkNameNodeSafeMode(\"Cannot add erasure coding policy\");\n       for (ErasureCodingPolicy policy : policies) {\n         try {\n           ErasureCodingPolicy newPolicy \u003d\n               FSDirErasureCodingOp.addErasureCodingPolicy(this, policy,\n                   logRetryCache);\n-          addECPolicyName \u003d newPolicy.getName();\n+          addECPolicyNames.add(newPolicy.getName());\n           responses.add(new AddErasureCodingPolicyResponse(newPolicy));\n         } catch (HadoopIllegalArgumentException e) {\n           responses.add(new AddErasureCodingPolicyResponse(policy, e));\n         }\n       }\n       success \u003d true;\n       return responses.toArray(new AddErasureCodingPolicyResponse[0]);\n     } finally {\n       writeUnlock(operationName);\n       if (success) {\n         getEditLog().logSync();\n       }\n-      logAuditEvent(success, operationName, addECPolicyName, null, null);\n+      logAuditEvent(success, operationName, addECPolicyNames.toString(),\n+          null, null);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  AddErasureCodingPolicyResponse[] addErasureCodingPolicies(\n      ErasureCodingPolicy[] policies, final boolean logRetryCache)\n      throws IOException {\n    final String operationName \u003d \"addErasureCodingPolicies\";\n    List\u003cString\u003e addECPolicyNames \u003d new ArrayList\u003c\u003e(policies.length);\n    checkOperation(OperationCategory.WRITE);\n    List\u003cAddErasureCodingPolicyResponse\u003e responses \u003d\n        new ArrayList\u003c\u003e(policies.length);\n    boolean success \u003d false;\n    writeLock();\n    try {\n      checkOperation(OperationCategory.WRITE);\n      checkNameNodeSafeMode(\"Cannot add erasure coding policy\");\n      for (ErasureCodingPolicy policy : policies) {\n        try {\n          ErasureCodingPolicy newPolicy \u003d\n              FSDirErasureCodingOp.addErasureCodingPolicy(this, policy,\n                  logRetryCache);\n          addECPolicyNames.add(newPolicy.getName());\n          responses.add(new AddErasureCodingPolicyResponse(newPolicy));\n        } catch (HadoopIllegalArgumentException e) {\n          responses.add(new AddErasureCodingPolicyResponse(policy, e));\n        }\n      }\n      success \u003d true;\n      return responses.toArray(new AddErasureCodingPolicyResponse[0]);\n    } finally {\n      writeUnlock(operationName);\n      if (success) {\n        getEditLog().logSync();\n      }\n      logAuditEvent(success, operationName, addECPolicyNames.toString(),\n          null, null);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "a12f09ba3c4a3aa4c4558090c5e1b7bcaebe3b94": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-12447. Rename AddECPolicyResponse to AddErasureCodingPolicyResponse. Contributed by SammiChen.\n",
      "commitDate": "20/09/17 11:51 AM",
      "commitName": "a12f09ba3c4a3aa4c4558090c5e1b7bcaebe3b94",
      "commitAuthor": "Andrew Wang",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-12447. Rename AddECPolicyResponse to AddErasureCodingPolicyResponse. Contributed by SammiChen.\n",
          "commitDate": "20/09/17 11:51 AM",
          "commitName": "a12f09ba3c4a3aa4c4558090c5e1b7bcaebe3b94",
          "commitAuthor": "Andrew Wang",
          "commitDateOld": "14/09/17 6:43 PM",
          "commitNameOld": "08d996d3e9265efad737efad50cbc5b10a0202f8",
          "commitAuthorOld": "Kai Zheng",
          "daysBetweenCommits": 5.71,
          "commitsBetweenForRepo": 46,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,32 +1,33 @@\n-  AddECPolicyResponse[] addErasureCodingPolicies(ErasureCodingPolicy[] policies,\n-      final boolean logRetryCache) throws IOException {\n+  AddErasureCodingPolicyResponse[] addErasureCodingPolicies(\n+      ErasureCodingPolicy[] policies, final boolean logRetryCache)\n+      throws IOException {\n     final String operationName \u003d \"addErasureCodingPolicies\";\n     String addECPolicyName \u003d \"\";\n     checkOperation(OperationCategory.WRITE);\n-    List\u003cAddECPolicyResponse\u003e responses \u003d new ArrayList\u003c\u003e();\n+    List\u003cAddErasureCodingPolicyResponse\u003e responses \u003d new ArrayList\u003c\u003e();\n     boolean success \u003d false;\n     writeLock();\n     try {\n       checkOperation(OperationCategory.WRITE);\n       checkNameNodeSafeMode(\"Cannot add erasure coding policy\");\n       for (ErasureCodingPolicy policy : policies) {\n         try {\n           ErasureCodingPolicy newPolicy \u003d\n               FSDirErasureCodingOp.addErasureCodingPolicy(this, policy,\n                   logRetryCache);\n           addECPolicyName \u003d newPolicy.getName();\n-          responses.add(new AddECPolicyResponse(newPolicy));\n+          responses.add(new AddErasureCodingPolicyResponse(newPolicy));\n         } catch (HadoopIllegalArgumentException e) {\n-          responses.add(new AddECPolicyResponse(policy, e));\n+          responses.add(new AddErasureCodingPolicyResponse(policy, e));\n         }\n       }\n       success \u003d true;\n-      return responses.toArray(new AddECPolicyResponse[0]);\n+      return responses.toArray(new AddErasureCodingPolicyResponse[0]);\n     } finally {\n       writeUnlock(operationName);\n       if (success) {\n         getEditLog().logSync();\n       }\n       logAuditEvent(success, operationName, addECPolicyName, null, null);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  AddErasureCodingPolicyResponse[] addErasureCodingPolicies(\n      ErasureCodingPolicy[] policies, final boolean logRetryCache)\n      throws IOException {\n    final String operationName \u003d \"addErasureCodingPolicies\";\n    String addECPolicyName \u003d \"\";\n    checkOperation(OperationCategory.WRITE);\n    List\u003cAddErasureCodingPolicyResponse\u003e responses \u003d new ArrayList\u003c\u003e();\n    boolean success \u003d false;\n    writeLock();\n    try {\n      checkOperation(OperationCategory.WRITE);\n      checkNameNodeSafeMode(\"Cannot add erasure coding policy\");\n      for (ErasureCodingPolicy policy : policies) {\n        try {\n          ErasureCodingPolicy newPolicy \u003d\n              FSDirErasureCodingOp.addErasureCodingPolicy(this, policy,\n                  logRetryCache);\n          addECPolicyName \u003d newPolicy.getName();\n          responses.add(new AddErasureCodingPolicyResponse(newPolicy));\n        } catch (HadoopIllegalArgumentException e) {\n          responses.add(new AddErasureCodingPolicyResponse(policy, e));\n        }\n      }\n      success \u003d true;\n      return responses.toArray(new AddErasureCodingPolicyResponse[0]);\n    } finally {\n      writeUnlock(operationName);\n      if (success) {\n        getEditLog().logSync();\n      }\n      logAuditEvent(success, operationName, addECPolicyName, null, null);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
          "extendedDetails": {
            "oldValue": "AddECPolicyResponse[]",
            "newValue": "AddErasureCodingPolicyResponse[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-12447. Rename AddECPolicyResponse to AddErasureCodingPolicyResponse. Contributed by SammiChen.\n",
          "commitDate": "20/09/17 11:51 AM",
          "commitName": "a12f09ba3c4a3aa4c4558090c5e1b7bcaebe3b94",
          "commitAuthor": "Andrew Wang",
          "commitDateOld": "14/09/17 6:43 PM",
          "commitNameOld": "08d996d3e9265efad737efad50cbc5b10a0202f8",
          "commitAuthorOld": "Kai Zheng",
          "daysBetweenCommits": 5.71,
          "commitsBetweenForRepo": 46,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,32 +1,33 @@\n-  AddECPolicyResponse[] addErasureCodingPolicies(ErasureCodingPolicy[] policies,\n-      final boolean logRetryCache) throws IOException {\n+  AddErasureCodingPolicyResponse[] addErasureCodingPolicies(\n+      ErasureCodingPolicy[] policies, final boolean logRetryCache)\n+      throws IOException {\n     final String operationName \u003d \"addErasureCodingPolicies\";\n     String addECPolicyName \u003d \"\";\n     checkOperation(OperationCategory.WRITE);\n-    List\u003cAddECPolicyResponse\u003e responses \u003d new ArrayList\u003c\u003e();\n+    List\u003cAddErasureCodingPolicyResponse\u003e responses \u003d new ArrayList\u003c\u003e();\n     boolean success \u003d false;\n     writeLock();\n     try {\n       checkOperation(OperationCategory.WRITE);\n       checkNameNodeSafeMode(\"Cannot add erasure coding policy\");\n       for (ErasureCodingPolicy policy : policies) {\n         try {\n           ErasureCodingPolicy newPolicy \u003d\n               FSDirErasureCodingOp.addErasureCodingPolicy(this, policy,\n                   logRetryCache);\n           addECPolicyName \u003d newPolicy.getName();\n-          responses.add(new AddECPolicyResponse(newPolicy));\n+          responses.add(new AddErasureCodingPolicyResponse(newPolicy));\n         } catch (HadoopIllegalArgumentException e) {\n-          responses.add(new AddECPolicyResponse(policy, e));\n+          responses.add(new AddErasureCodingPolicyResponse(policy, e));\n         }\n       }\n       success \u003d true;\n-      return responses.toArray(new AddECPolicyResponse[0]);\n+      return responses.toArray(new AddErasureCodingPolicyResponse[0]);\n     } finally {\n       writeUnlock(operationName);\n       if (success) {\n         getEditLog().logSync();\n       }\n       logAuditEvent(success, operationName, addECPolicyName, null, null);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  AddErasureCodingPolicyResponse[] addErasureCodingPolicies(\n      ErasureCodingPolicy[] policies, final boolean logRetryCache)\n      throws IOException {\n    final String operationName \u003d \"addErasureCodingPolicies\";\n    String addECPolicyName \u003d \"\";\n    checkOperation(OperationCategory.WRITE);\n    List\u003cAddErasureCodingPolicyResponse\u003e responses \u003d new ArrayList\u003c\u003e();\n    boolean success \u003d false;\n    writeLock();\n    try {\n      checkOperation(OperationCategory.WRITE);\n      checkNameNodeSafeMode(\"Cannot add erasure coding policy\");\n      for (ErasureCodingPolicy policy : policies) {\n        try {\n          ErasureCodingPolicy newPolicy \u003d\n              FSDirErasureCodingOp.addErasureCodingPolicy(this, policy,\n                  logRetryCache);\n          addECPolicyName \u003d newPolicy.getName();\n          responses.add(new AddErasureCodingPolicyResponse(newPolicy));\n        } catch (HadoopIllegalArgumentException e) {\n          responses.add(new AddErasureCodingPolicyResponse(policy, e));\n        }\n      }\n      success \u003d true;\n      return responses.toArray(new AddErasureCodingPolicyResponse[0]);\n    } finally {\n      writeUnlock(operationName);\n      if (success) {\n        getEditLog().logSync();\n      }\n      logAuditEvent(success, operationName, addECPolicyName, null, null);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
          "extendedDetails": {}
        }
      ]
    },
    "08d996d3e9265efad737efad50cbc5b10a0202f8": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-12395. Support erasure coding policy operations in namenode edit log. Contributed by Sammi Chen\n",
      "commitDate": "14/09/17 6:43 PM",
      "commitName": "08d996d3e9265efad737efad50cbc5b10a0202f8",
      "commitAuthor": "Kai Zheng",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-12395. Support erasure coding policy operations in namenode edit log. Contributed by Sammi Chen\n",
          "commitDate": "14/09/17 6:43 PM",
          "commitName": "08d996d3e9265efad737efad50cbc5b10a0202f8",
          "commitAuthor": "Kai Zheng",
          "commitDateOld": "14/09/17 11:17 AM",
          "commitNameOld": "65a941008d4bbf906772399d3f035f2a0da5abfa",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 0.31,
          "commitsBetweenForRepo": 8,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,32 +1,32 @@\n-  AddECPolicyResponse[] addErasureCodingPolicies(ErasureCodingPolicy[] policies)\n-      throws IOException {\n+  AddECPolicyResponse[] addErasureCodingPolicies(ErasureCodingPolicy[] policies,\n+      final boolean logRetryCache) throws IOException {\n     final String operationName \u003d \"addErasureCodingPolicies\";\n     String addECPolicyName \u003d \"\";\n     checkOperation(OperationCategory.WRITE);\n     List\u003cAddECPolicyResponse\u003e responses \u003d new ArrayList\u003c\u003e();\n     boolean success \u003d false;\n     writeLock();\n     try {\n       checkOperation(OperationCategory.WRITE);\n+      checkNameNodeSafeMode(\"Cannot add erasure coding policy\");\n       for (ErasureCodingPolicy policy : policies) {\n         try {\n-          checkOperation(OperationCategory.WRITE);\n-          checkNameNodeSafeMode(\"Cannot add erasure coding policy\");\n           ErasureCodingPolicy newPolicy \u003d\n-              FSDirErasureCodingOp.addErasureCodePolicy(this, policy);\n+              FSDirErasureCodingOp.addErasureCodingPolicy(this, policy,\n+                  logRetryCache);\n           addECPolicyName \u003d newPolicy.getName();\n           responses.add(new AddECPolicyResponse(newPolicy));\n         } catch (HadoopIllegalArgumentException e) {\n           responses.add(new AddECPolicyResponse(policy, e));\n         }\n       }\n       success \u003d true;\n       return responses.toArray(new AddECPolicyResponse[0]);\n     } finally {\n       writeUnlock(operationName);\n       if (success) {\n         getEditLog().logSync();\n       }\n       logAuditEvent(success, operationName, addECPolicyName, null, null);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  AddECPolicyResponse[] addErasureCodingPolicies(ErasureCodingPolicy[] policies,\n      final boolean logRetryCache) throws IOException {\n    final String operationName \u003d \"addErasureCodingPolicies\";\n    String addECPolicyName \u003d \"\";\n    checkOperation(OperationCategory.WRITE);\n    List\u003cAddECPolicyResponse\u003e responses \u003d new ArrayList\u003c\u003e();\n    boolean success \u003d false;\n    writeLock();\n    try {\n      checkOperation(OperationCategory.WRITE);\n      checkNameNodeSafeMode(\"Cannot add erasure coding policy\");\n      for (ErasureCodingPolicy policy : policies) {\n        try {\n          ErasureCodingPolicy newPolicy \u003d\n              FSDirErasureCodingOp.addErasureCodingPolicy(this, policy,\n                  logRetryCache);\n          addECPolicyName \u003d newPolicy.getName();\n          responses.add(new AddECPolicyResponse(newPolicy));\n        } catch (HadoopIllegalArgumentException e) {\n          responses.add(new AddECPolicyResponse(policy, e));\n        }\n      }\n      success \u003d true;\n      return responses.toArray(new AddECPolicyResponse[0]);\n    } finally {\n      writeUnlock(operationName);\n      if (success) {\n        getEditLog().logSync();\n      }\n      logAuditEvent(success, operationName, addECPolicyName, null, null);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
          "extendedDetails": {
            "oldValue": "[policies-ErasureCodingPolicy[]]",
            "newValue": "[policies-ErasureCodingPolicy[], logRetryCache-boolean(modifiers-final)]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-12395. Support erasure coding policy operations in namenode edit log. Contributed by Sammi Chen\n",
          "commitDate": "14/09/17 6:43 PM",
          "commitName": "08d996d3e9265efad737efad50cbc5b10a0202f8",
          "commitAuthor": "Kai Zheng",
          "commitDateOld": "14/09/17 11:17 AM",
          "commitNameOld": "65a941008d4bbf906772399d3f035f2a0da5abfa",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 0.31,
          "commitsBetweenForRepo": 8,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,32 +1,32 @@\n-  AddECPolicyResponse[] addErasureCodingPolicies(ErasureCodingPolicy[] policies)\n-      throws IOException {\n+  AddECPolicyResponse[] addErasureCodingPolicies(ErasureCodingPolicy[] policies,\n+      final boolean logRetryCache) throws IOException {\n     final String operationName \u003d \"addErasureCodingPolicies\";\n     String addECPolicyName \u003d \"\";\n     checkOperation(OperationCategory.WRITE);\n     List\u003cAddECPolicyResponse\u003e responses \u003d new ArrayList\u003c\u003e();\n     boolean success \u003d false;\n     writeLock();\n     try {\n       checkOperation(OperationCategory.WRITE);\n+      checkNameNodeSafeMode(\"Cannot add erasure coding policy\");\n       for (ErasureCodingPolicy policy : policies) {\n         try {\n-          checkOperation(OperationCategory.WRITE);\n-          checkNameNodeSafeMode(\"Cannot add erasure coding policy\");\n           ErasureCodingPolicy newPolicy \u003d\n-              FSDirErasureCodingOp.addErasureCodePolicy(this, policy);\n+              FSDirErasureCodingOp.addErasureCodingPolicy(this, policy,\n+                  logRetryCache);\n           addECPolicyName \u003d newPolicy.getName();\n           responses.add(new AddECPolicyResponse(newPolicy));\n         } catch (HadoopIllegalArgumentException e) {\n           responses.add(new AddECPolicyResponse(policy, e));\n         }\n       }\n       success \u003d true;\n       return responses.toArray(new AddECPolicyResponse[0]);\n     } finally {\n       writeUnlock(operationName);\n       if (success) {\n         getEditLog().logSync();\n       }\n       logAuditEvent(success, operationName, addECPolicyName, null, null);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  AddECPolicyResponse[] addErasureCodingPolicies(ErasureCodingPolicy[] policies,\n      final boolean logRetryCache) throws IOException {\n    final String operationName \u003d \"addErasureCodingPolicies\";\n    String addECPolicyName \u003d \"\";\n    checkOperation(OperationCategory.WRITE);\n    List\u003cAddECPolicyResponse\u003e responses \u003d new ArrayList\u003c\u003e();\n    boolean success \u003d false;\n    writeLock();\n    try {\n      checkOperation(OperationCategory.WRITE);\n      checkNameNodeSafeMode(\"Cannot add erasure coding policy\");\n      for (ErasureCodingPolicy policy : policies) {\n        try {\n          ErasureCodingPolicy newPolicy \u003d\n              FSDirErasureCodingOp.addErasureCodingPolicy(this, policy,\n                  logRetryCache);\n          addECPolicyName \u003d newPolicy.getName();\n          responses.add(new AddECPolicyResponse(newPolicy));\n        } catch (HadoopIllegalArgumentException e) {\n          responses.add(new AddECPolicyResponse(policy, e));\n        }\n      }\n      success \u003d true;\n      return responses.toArray(new AddECPolicyResponse[0]);\n    } finally {\n      writeUnlock(operationName);\n      if (success) {\n        getEditLog().logSync();\n      }\n      logAuditEvent(success, operationName, addECPolicyName, null, null);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
          "extendedDetails": {}
        }
      ]
    },
    "2adf8bed712e6d770a0d53eea198d8911ae1a258": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12402. Refactor ErasureCodingPolicyManager and related codes. Contributed by Sammi Chen\n",
      "commitDate": "07/09/17 5:38 AM",
      "commitName": "2adf8bed712e6d770a0d53eea198d8911ae1a258",
      "commitAuthor": "Kai Zheng",
      "commitDateOld": "05/09/17 10:08 AM",
      "commitNameOld": "0ba8ff4b77db11fb68111f20fb077cffddd24f17",
      "commitAuthorOld": "Xiao Chen",
      "daysBetweenCommits": 1.81,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,32 @@\n   AddECPolicyResponse[] addErasureCodingPolicies(ErasureCodingPolicy[] policies)\n       throws IOException {\n     final String operationName \u003d \"addErasureCodingPolicies\";\n     String addECPolicyName \u003d \"\";\n     checkOperation(OperationCategory.WRITE);\n     List\u003cAddECPolicyResponse\u003e responses \u003d new ArrayList\u003c\u003e();\n     boolean success \u003d false;\n     writeLock();\n     try {\n       checkOperation(OperationCategory.WRITE);\n       for (ErasureCodingPolicy policy : policies) {\n         try {\n           checkOperation(OperationCategory.WRITE);\n           checkNameNodeSafeMode(\"Cannot add erasure coding policy\");\n           ErasureCodingPolicy newPolicy \u003d\n               FSDirErasureCodingOp.addErasureCodePolicy(this, policy);\n           addECPolicyName \u003d newPolicy.getName();\n           responses.add(new AddECPolicyResponse(newPolicy));\n-        } catch (IllegalECPolicyException e) {\n+        } catch (HadoopIllegalArgumentException e) {\n           responses.add(new AddECPolicyResponse(policy, e));\n         }\n       }\n       success \u003d true;\n       return responses.toArray(new AddECPolicyResponse[0]);\n     } finally {\n       writeUnlock(operationName);\n       if (success) {\n         getEditLog().logSync();\n       }\n       logAuditEvent(success, operationName, addECPolicyName, null, null);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  AddECPolicyResponse[] addErasureCodingPolicies(ErasureCodingPolicy[] policies)\n      throws IOException {\n    final String operationName \u003d \"addErasureCodingPolicies\";\n    String addECPolicyName \u003d \"\";\n    checkOperation(OperationCategory.WRITE);\n    List\u003cAddECPolicyResponse\u003e responses \u003d new ArrayList\u003c\u003e();\n    boolean success \u003d false;\n    writeLock();\n    try {\n      checkOperation(OperationCategory.WRITE);\n      for (ErasureCodingPolicy policy : policies) {\n        try {\n          checkOperation(OperationCategory.WRITE);\n          checkNameNodeSafeMode(\"Cannot add erasure coding policy\");\n          ErasureCodingPolicy newPolicy \u003d\n              FSDirErasureCodingOp.addErasureCodePolicy(this, policy);\n          addECPolicyName \u003d newPolicy.getName();\n          responses.add(new AddECPolicyResponse(newPolicy));\n        } catch (HadoopIllegalArgumentException e) {\n          responses.add(new AddECPolicyResponse(policy, e));\n        }\n      }\n      success \u003d true;\n      return responses.toArray(new AddECPolicyResponse[0]);\n    } finally {\n      writeUnlock(operationName);\n      if (success) {\n        getEditLog().logSync();\n      }\n      logAuditEvent(success, operationName, addECPolicyName, null, null);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "1040bae6fcbae7079d8126368cdeac60831a4d0c": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12054. FSNamesystem#addErasureCodingPolicies should call checkNameNodeSafeMode() to ensure Namenode is not in safemode. Contributed by lufei.\n",
      "commitDate": "15/08/17 7:38 AM",
      "commitName": "1040bae6fcbae7079d8126368cdeac60831a4d0c",
      "commitAuthor": "Wei-Chiu Chuang",
      "commitDateOld": "07/08/17 4:30 AM",
      "commitNameOld": "0b67436068899497e99c86f37fd4887ca188fae2",
      "commitAuthorOld": "Kai Zheng",
      "daysBetweenCommits": 8.13,
      "commitsBetweenForRepo": 62,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,32 @@\n   AddECPolicyResponse[] addErasureCodingPolicies(ErasureCodingPolicy[] policies)\n       throws IOException {\n     final String operationName \u003d \"addErasureCodingPolicies\";\n     String addECPolicyName \u003d \"\";\n     checkOperation(OperationCategory.WRITE);\n     List\u003cAddECPolicyResponse\u003e responses \u003d new ArrayList\u003c\u003e();\n     boolean success \u003d false;\n     writeLock();\n     try {\n       checkOperation(OperationCategory.WRITE);\n       for (ErasureCodingPolicy policy : policies) {\n         try {\n+          checkOperation(OperationCategory.WRITE);\n+          checkNameNodeSafeMode(\"Cannot add erasure coding policy\");\n           ErasureCodingPolicy newPolicy \u003d\n               FSDirErasureCodingOp.addErasureCodePolicy(this, policy);\n           addECPolicyName \u003d newPolicy.getName();\n           responses.add(new AddECPolicyResponse(newPolicy));\n         } catch (IllegalECPolicyException e) {\n           responses.add(new AddECPolicyResponse(policy, e));\n         }\n       }\n       success \u003d true;\n       return responses.toArray(new AddECPolicyResponse[0]);\n     } finally {\n       writeUnlock(operationName);\n       if (success) {\n         getEditLog().logSync();\n       }\n       logAuditEvent(success, operationName, addECPolicyName, null, null);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  AddECPolicyResponse[] addErasureCodingPolicies(ErasureCodingPolicy[] policies)\n      throws IOException {\n    final String operationName \u003d \"addErasureCodingPolicies\";\n    String addECPolicyName \u003d \"\";\n    checkOperation(OperationCategory.WRITE);\n    List\u003cAddECPolicyResponse\u003e responses \u003d new ArrayList\u003c\u003e();\n    boolean success \u003d false;\n    writeLock();\n    try {\n      checkOperation(OperationCategory.WRITE);\n      for (ErasureCodingPolicy policy : policies) {\n        try {\n          checkOperation(OperationCategory.WRITE);\n          checkNameNodeSafeMode(\"Cannot add erasure coding policy\");\n          ErasureCodingPolicy newPolicy \u003d\n              FSDirErasureCodingOp.addErasureCodePolicy(this, policy);\n          addECPolicyName \u003d newPolicy.getName();\n          responses.add(new AddECPolicyResponse(newPolicy));\n        } catch (IllegalECPolicyException e) {\n          responses.add(new AddECPolicyResponse(policy, e));\n        }\n      }\n      success \u003d true;\n      return responses.toArray(new AddECPolicyResponse[0]);\n    } finally {\n      writeUnlock(operationName);\n      if (success) {\n        getEditLog().logSync();\n      }\n      logAuditEvent(success, operationName, addECPolicyName, null, null);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "0b67436068899497e99c86f37fd4887ca188fae2": {
      "type": "Ymultichange(Yrename,Ybodychange)",
      "commitMessage": "HDFS-12306. Add audit log for some erasure coding operations. Contributed by Huafeng Wang\n",
      "commitDate": "07/08/17 4:30 AM",
      "commitName": "0b67436068899497e99c86f37fd4887ca188fae2",
      "commitAuthor": "Kai Zheng",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "HDFS-12306. Add audit log for some erasure coding operations. Contributed by Huafeng Wang\n",
          "commitDate": "07/08/17 4:30 AM",
          "commitName": "0b67436068899497e99c86f37fd4887ca188fae2",
          "commitAuthor": "Kai Zheng",
          "commitDateOld": "03/08/17 3:44 PM",
          "commitNameOld": "f4c6b00a9f48ae7667db4035b641769efc3bb7cf",
          "commitAuthorOld": "Andrew Wang",
          "daysBetweenCommits": 3.53,
          "commitsBetweenForRepo": 15,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,30 +1,30 @@\n-  AddECPolicyResponse[] addECPolicies(ErasureCodingPolicy[] policies)\n+  AddECPolicyResponse[] addErasureCodingPolicies(ErasureCodingPolicy[] policies)\n       throws IOException {\n-    final String operationName \u003d \"addECPolicies\";\n+    final String operationName \u003d \"addErasureCodingPolicies\";\n     String addECPolicyName \u003d \"\";\n     checkOperation(OperationCategory.WRITE);\n     List\u003cAddECPolicyResponse\u003e responses \u003d new ArrayList\u003c\u003e();\n     boolean success \u003d false;\n     writeLock();\n     try {\n       checkOperation(OperationCategory.WRITE);\n       for (ErasureCodingPolicy policy : policies) {\n         try {\n           ErasureCodingPolicy newPolicy \u003d\n               FSDirErasureCodingOp.addErasureCodePolicy(this, policy);\n           addECPolicyName \u003d newPolicy.getName();\n           responses.add(new AddECPolicyResponse(newPolicy));\n         } catch (IllegalECPolicyException e) {\n           responses.add(new AddECPolicyResponse(policy, e));\n         }\n       }\n       success \u003d true;\n       return responses.toArray(new AddECPolicyResponse[0]);\n     } finally {\n       writeUnlock(operationName);\n       if (success) {\n         getEditLog().logSync();\n       }\n       logAuditEvent(success, operationName, addECPolicyName, null, null);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  AddECPolicyResponse[] addErasureCodingPolicies(ErasureCodingPolicy[] policies)\n      throws IOException {\n    final String operationName \u003d \"addErasureCodingPolicies\";\n    String addECPolicyName \u003d \"\";\n    checkOperation(OperationCategory.WRITE);\n    List\u003cAddECPolicyResponse\u003e responses \u003d new ArrayList\u003c\u003e();\n    boolean success \u003d false;\n    writeLock();\n    try {\n      checkOperation(OperationCategory.WRITE);\n      for (ErasureCodingPolicy policy : policies) {\n        try {\n          ErasureCodingPolicy newPolicy \u003d\n              FSDirErasureCodingOp.addErasureCodePolicy(this, policy);\n          addECPolicyName \u003d newPolicy.getName();\n          responses.add(new AddECPolicyResponse(newPolicy));\n        } catch (IllegalECPolicyException e) {\n          responses.add(new AddECPolicyResponse(policy, e));\n        }\n      }\n      success \u003d true;\n      return responses.toArray(new AddECPolicyResponse[0]);\n    } finally {\n      writeUnlock(operationName);\n      if (success) {\n        getEditLog().logSync();\n      }\n      logAuditEvent(success, operationName, addECPolicyName, null, null);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
          "extendedDetails": {
            "oldValue": "addECPolicies",
            "newValue": "addErasureCodingPolicies"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-12306. Add audit log for some erasure coding operations. Contributed by Huafeng Wang\n",
          "commitDate": "07/08/17 4:30 AM",
          "commitName": "0b67436068899497e99c86f37fd4887ca188fae2",
          "commitAuthor": "Kai Zheng",
          "commitDateOld": "03/08/17 3:44 PM",
          "commitNameOld": "f4c6b00a9f48ae7667db4035b641769efc3bb7cf",
          "commitAuthorOld": "Andrew Wang",
          "daysBetweenCommits": 3.53,
          "commitsBetweenForRepo": 15,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,30 +1,30 @@\n-  AddECPolicyResponse[] addECPolicies(ErasureCodingPolicy[] policies)\n+  AddECPolicyResponse[] addErasureCodingPolicies(ErasureCodingPolicy[] policies)\n       throws IOException {\n-    final String operationName \u003d \"addECPolicies\";\n+    final String operationName \u003d \"addErasureCodingPolicies\";\n     String addECPolicyName \u003d \"\";\n     checkOperation(OperationCategory.WRITE);\n     List\u003cAddECPolicyResponse\u003e responses \u003d new ArrayList\u003c\u003e();\n     boolean success \u003d false;\n     writeLock();\n     try {\n       checkOperation(OperationCategory.WRITE);\n       for (ErasureCodingPolicy policy : policies) {\n         try {\n           ErasureCodingPolicy newPolicy \u003d\n               FSDirErasureCodingOp.addErasureCodePolicy(this, policy);\n           addECPolicyName \u003d newPolicy.getName();\n           responses.add(new AddECPolicyResponse(newPolicy));\n         } catch (IllegalECPolicyException e) {\n           responses.add(new AddECPolicyResponse(policy, e));\n         }\n       }\n       success \u003d true;\n       return responses.toArray(new AddECPolicyResponse[0]);\n     } finally {\n       writeUnlock(operationName);\n       if (success) {\n         getEditLog().logSync();\n       }\n       logAuditEvent(success, operationName, addECPolicyName, null, null);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  AddECPolicyResponse[] addErasureCodingPolicies(ErasureCodingPolicy[] policies)\n      throws IOException {\n    final String operationName \u003d \"addErasureCodingPolicies\";\n    String addECPolicyName \u003d \"\";\n    checkOperation(OperationCategory.WRITE);\n    List\u003cAddECPolicyResponse\u003e responses \u003d new ArrayList\u003c\u003e();\n    boolean success \u003d false;\n    writeLock();\n    try {\n      checkOperation(OperationCategory.WRITE);\n      for (ErasureCodingPolicy policy : policies) {\n        try {\n          ErasureCodingPolicy newPolicy \u003d\n              FSDirErasureCodingOp.addErasureCodePolicy(this, policy);\n          addECPolicyName \u003d newPolicy.getName();\n          responses.add(new AddECPolicyResponse(newPolicy));\n        } catch (IllegalECPolicyException e) {\n          responses.add(new AddECPolicyResponse(policy, e));\n        }\n      }\n      success \u003d true;\n      return responses.toArray(new AddECPolicyResponse[0]);\n    } finally {\n      writeUnlock(operationName);\n      if (success) {\n        getEditLog().logSync();\n      }\n      logAuditEvent(success, operationName, addECPolicyName, null, null);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
          "extendedDetails": {}
        }
      ]
    },
    "f99b6d19de77c6e730fed8444f8848a7e63d6130": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11870. Add CLI cmd to enable/disable an erasure code policy. Contributed by lufei.\n",
      "commitDate": "28/06/17 10:54 AM",
      "commitName": "f99b6d19de77c6e730fed8444f8848a7e63d6130",
      "commitAuthor": "Wei-Chiu Chuang",
      "commitDateOld": "20/06/17 11:01 PM",
      "commitNameOld": "5db3f9846882c51991d16853a5c431664f3f801f",
      "commitAuthorOld": "Kai Zheng",
      "daysBetweenCommits": 7.49,
      "commitsBetweenForRepo": 36,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,30 @@\n   AddECPolicyResponse[] addECPolicies(ErasureCodingPolicy[] policies)\n       throws IOException {\n     final String operationName \u003d \"addECPolicies\";\n+    String addECPolicyName \u003d \"\";\n     checkOperation(OperationCategory.WRITE);\n     List\u003cAddECPolicyResponse\u003e responses \u003d new ArrayList\u003c\u003e();\n     boolean success \u003d false;\n     writeLock();\n     try {\n       checkOperation(OperationCategory.WRITE);\n       for (ErasureCodingPolicy policy : policies) {\n         try {\n           ErasureCodingPolicy newPolicy \u003d\n               FSDirErasureCodingOp.addErasureCodePolicy(this, policy);\n+          addECPolicyName \u003d newPolicy.getName();\n           responses.add(new AddECPolicyResponse(newPolicy));\n         } catch (IllegalECPolicyException e) {\n           responses.add(new AddECPolicyResponse(policy, e));\n         }\n       }\n       success \u003d true;\n       return responses.toArray(new AddECPolicyResponse[0]);\n     } finally {\n       writeUnlock(operationName);\n       if (success) {\n         getEditLog().logSync();\n       }\n-      logAuditEvent(success, operationName, null, null, null);\n+      logAuditEvent(success, operationName, addECPolicyName, null, null);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  AddECPolicyResponse[] addECPolicies(ErasureCodingPolicy[] policies)\n      throws IOException {\n    final String operationName \u003d \"addECPolicies\";\n    String addECPolicyName \u003d \"\";\n    checkOperation(OperationCategory.WRITE);\n    List\u003cAddECPolicyResponse\u003e responses \u003d new ArrayList\u003c\u003e();\n    boolean success \u003d false;\n    writeLock();\n    try {\n      checkOperation(OperationCategory.WRITE);\n      for (ErasureCodingPolicy policy : policies) {\n        try {\n          ErasureCodingPolicy newPolicy \u003d\n              FSDirErasureCodingOp.addErasureCodePolicy(this, policy);\n          addECPolicyName \u003d newPolicy.getName();\n          responses.add(new AddECPolicyResponse(newPolicy));\n        } catch (IllegalECPolicyException e) {\n          responses.add(new AddECPolicyResponse(policy, e));\n        }\n      }\n      success \u003d true;\n      return responses.toArray(new AddECPolicyResponse[0]);\n    } finally {\n      writeUnlock(operationName);\n      if (success) {\n        getEditLog().logSync();\n      }\n      logAuditEvent(success, operationName, addECPolicyName, null, null);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "a62be38a5e5d3a61dfb59054b3f5fd5b1b7053b3": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-11793. Allow to enable user defined erasure coding policy. Contributed by Sammi Chen\n",
      "commitDate": "24/05/17 3:45 AM",
      "commitName": "a62be38a5e5d3a61dfb59054b3f5fd5b1b7053b3",
      "commitAuthor": "Kai Zheng",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-11793. Allow to enable user defined erasure coding policy. Contributed by Sammi Chen\n",
          "commitDate": "24/05/17 3:45 AM",
          "commitName": "a62be38a5e5d3a61dfb59054b3f5fd5b1b7053b3",
          "commitAuthor": "Kai Zheng",
          "commitDateOld": "23/05/17 4:33 AM",
          "commitNameOld": "1b5451bf054c335188e4cd66f7b4a1d80013e86d",
          "commitAuthorOld": "Rakesh Radhakrishnan",
          "daysBetweenCommits": 0.97,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,28 @@\n-  AddingECPolicyResponse[] addECPolicies(ErasureCodingPolicy[] policies)\n+  AddECPolicyResponse[] addECPolicies(ErasureCodingPolicy[] policies)\n       throws IOException {\n+    final String operationName \u003d \"addECPolicies\";\n     checkOperation(OperationCategory.WRITE);\n-    List\u003cAddingECPolicyResponse\u003e responses \u003d new ArrayList\u003c\u003e();\n+    List\u003cAddECPolicyResponse\u003e responses \u003d new ArrayList\u003c\u003e();\n+    boolean success \u003d false;\n     writeLock();\n-    for (ErasureCodingPolicy policy : policies) {\n-      try {\n-        FSDirErasureCodingOp.addErasureCodePolicy(this, policy);\n-        responses.add(new AddingECPolicyResponse(policy));\n-      } catch (IllegalECPolicyException e) {\n-        responses.add(new AddingECPolicyResponse(policy, e));\n+    try {\n+      checkOperation(OperationCategory.WRITE);\n+      for (ErasureCodingPolicy policy : policies) {\n+        try {\n+          ErasureCodingPolicy newPolicy \u003d\n+              FSDirErasureCodingOp.addErasureCodePolicy(this, policy);\n+          responses.add(new AddECPolicyResponse(newPolicy));\n+        } catch (IllegalECPolicyException e) {\n+          responses.add(new AddECPolicyResponse(policy, e));\n+        }\n       }\n+      success \u003d true;\n+      return responses.toArray(new AddECPolicyResponse[0]);\n+    } finally {\n+      writeUnlock(operationName);\n+      if (success) {\n+        getEditLog().logSync();\n+      }\n+      logAuditEvent(success, operationName, null, null, null);\n     }\n-    writeUnlock(\"addECPolicies\");\n-    return responses.toArray(new AddingECPolicyResponse[0]);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  AddECPolicyResponse[] addECPolicies(ErasureCodingPolicy[] policies)\n      throws IOException {\n    final String operationName \u003d \"addECPolicies\";\n    checkOperation(OperationCategory.WRITE);\n    List\u003cAddECPolicyResponse\u003e responses \u003d new ArrayList\u003c\u003e();\n    boolean success \u003d false;\n    writeLock();\n    try {\n      checkOperation(OperationCategory.WRITE);\n      for (ErasureCodingPolicy policy : policies) {\n        try {\n          ErasureCodingPolicy newPolicy \u003d\n              FSDirErasureCodingOp.addErasureCodePolicy(this, policy);\n          responses.add(new AddECPolicyResponse(newPolicy));\n        } catch (IllegalECPolicyException e) {\n          responses.add(new AddECPolicyResponse(policy, e));\n        }\n      }\n      success \u003d true;\n      return responses.toArray(new AddECPolicyResponse[0]);\n    } finally {\n      writeUnlock(operationName);\n      if (success) {\n        getEditLog().logSync();\n      }\n      logAuditEvent(success, operationName, null, null, null);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
          "extendedDetails": {
            "oldValue": "AddingECPolicyResponse[]",
            "newValue": "AddECPolicyResponse[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-11793. Allow to enable user defined erasure coding policy. Contributed by Sammi Chen\n",
          "commitDate": "24/05/17 3:45 AM",
          "commitName": "a62be38a5e5d3a61dfb59054b3f5fd5b1b7053b3",
          "commitAuthor": "Kai Zheng",
          "commitDateOld": "23/05/17 4:33 AM",
          "commitNameOld": "1b5451bf054c335188e4cd66f7b4a1d80013e86d",
          "commitAuthorOld": "Rakesh Radhakrishnan",
          "daysBetweenCommits": 0.97,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,28 @@\n-  AddingECPolicyResponse[] addECPolicies(ErasureCodingPolicy[] policies)\n+  AddECPolicyResponse[] addECPolicies(ErasureCodingPolicy[] policies)\n       throws IOException {\n+    final String operationName \u003d \"addECPolicies\";\n     checkOperation(OperationCategory.WRITE);\n-    List\u003cAddingECPolicyResponse\u003e responses \u003d new ArrayList\u003c\u003e();\n+    List\u003cAddECPolicyResponse\u003e responses \u003d new ArrayList\u003c\u003e();\n+    boolean success \u003d false;\n     writeLock();\n-    for (ErasureCodingPolicy policy : policies) {\n-      try {\n-        FSDirErasureCodingOp.addErasureCodePolicy(this, policy);\n-        responses.add(new AddingECPolicyResponse(policy));\n-      } catch (IllegalECPolicyException e) {\n-        responses.add(new AddingECPolicyResponse(policy, e));\n+    try {\n+      checkOperation(OperationCategory.WRITE);\n+      for (ErasureCodingPolicy policy : policies) {\n+        try {\n+          ErasureCodingPolicy newPolicy \u003d\n+              FSDirErasureCodingOp.addErasureCodePolicy(this, policy);\n+          responses.add(new AddECPolicyResponse(newPolicy));\n+        } catch (IllegalECPolicyException e) {\n+          responses.add(new AddECPolicyResponse(policy, e));\n+        }\n       }\n+      success \u003d true;\n+      return responses.toArray(new AddECPolicyResponse[0]);\n+    } finally {\n+      writeUnlock(operationName);\n+      if (success) {\n+        getEditLog().logSync();\n+      }\n+      logAuditEvent(success, operationName, null, null, null);\n     }\n-    writeUnlock(\"addECPolicies\");\n-    return responses.toArray(new AddingECPolicyResponse[0]);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  AddECPolicyResponse[] addECPolicies(ErasureCodingPolicy[] policies)\n      throws IOException {\n    final String operationName \u003d \"addECPolicies\";\n    checkOperation(OperationCategory.WRITE);\n    List\u003cAddECPolicyResponse\u003e responses \u003d new ArrayList\u003c\u003e();\n    boolean success \u003d false;\n    writeLock();\n    try {\n      checkOperation(OperationCategory.WRITE);\n      for (ErasureCodingPolicy policy : policies) {\n        try {\n          ErasureCodingPolicy newPolicy \u003d\n              FSDirErasureCodingOp.addErasureCodePolicy(this, policy);\n          responses.add(new AddECPolicyResponse(newPolicy));\n        } catch (IllegalECPolicyException e) {\n          responses.add(new AddECPolicyResponse(policy, e));\n        }\n      }\n      success \u003d true;\n      return responses.toArray(new AddECPolicyResponse[0]);\n    } finally {\n      writeUnlock(operationName);\n      if (success) {\n        getEditLog().logSync();\n      }\n      logAuditEvent(success, operationName, null, null, null);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
          "extendedDetails": {}
        }
      ]
    },
    "cb672a45a0bbd8950b9b5e304c2e03f516945903": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-11605. Allow user to customize new erasure code policies. Contributed by Huafeng Wang\n",
      "commitDate": "27/04/17 10:18 PM",
      "commitName": "cb672a45a0bbd8950b9b5e304c2e03f516945903",
      "commitAuthor": "Kai Zheng",
      "diff": "@@ -0,0 +1,16 @@\n+  AddingECPolicyResponse[] addECPolicies(ErasureCodingPolicy[] policies)\n+      throws IOException {\n+    checkOperation(OperationCategory.WRITE);\n+    List\u003cAddingECPolicyResponse\u003e responses \u003d new ArrayList\u003c\u003e();\n+    writeLock();\n+    for (ErasureCodingPolicy policy : policies) {\n+      try {\n+        FSDirErasureCodingOp.addErasureCodePolicy(this, policy);\n+        responses.add(new AddingECPolicyResponse(policy));\n+      } catch (IllegalECPolicyException e) {\n+        responses.add(new AddingECPolicyResponse(policy, e));\n+      }\n+    }\n+    writeUnlock(\"addECPolicies\");\n+    return responses.toArray(new AddingECPolicyResponse[0]);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  AddingECPolicyResponse[] addECPolicies(ErasureCodingPolicy[] policies)\n      throws IOException {\n    checkOperation(OperationCategory.WRITE);\n    List\u003cAddingECPolicyResponse\u003e responses \u003d new ArrayList\u003c\u003e();\n    writeLock();\n    for (ErasureCodingPolicy policy : policies) {\n      try {\n        FSDirErasureCodingOp.addErasureCodePolicy(this, policy);\n        responses.add(new AddingECPolicyResponse(policy));\n      } catch (IllegalECPolicyException e) {\n        responses.add(new AddingECPolicyResponse(policy, e));\n      }\n    }\n    writeUnlock(\"addECPolicies\");\n    return responses.toArray(new AddingECPolicyResponse[0]);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java"
    }
  }
}