{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NMLeveldbStateStoreService.java",
  "functionName": "markStoreUnHealthy",
  "functionId": "markStoreUnHealthy___dbErr-DBException",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/recovery/NMLeveldbStateStoreService.java",
  "functionStartLine": 218,
  "functionEndLine": 234,
  "numCommitsSeen": 43,
  "timeTaken": 1407,
  "changeHistory": [
    "7f515f57ede74dae787994f37bfafd5d20c9aa4c"
  ],
  "changeHistoryShort": {
    "7f515f57ede74dae787994f37bfafd5d20c9aa4c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7f515f57ede74dae787994f37bfafd5d20c9aa4c": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7585. NodeManager should go unhealthy when state store throws DBException. Contributed by Wilfred Spiegelenburg.\n",
      "commitDate": "02/01/18 6:03 PM",
      "commitName": "7f515f57ede74dae787994f37bfafd5d20c9aa4c",
      "commitAuthor": "Miklos Szegedi",
      "diff": "@@ -0,0 +1,17 @@\n+  private void markStoreUnHealthy(DBException dbErr) {\n+    // Always log the error here, we might not see the error in the caller\n+    LOG.error(\"Statestore exception: \", dbErr);\n+    // We have already been marked unhealthy so no need to do it again.\n+    if (!isHealthy) {\n+      return;\n+    }\n+    // Mark unhealthy, an out of band heartbeat will be sent and the state\n+    // will remain unhealthy (not recoverable).\n+    // No need to close the store: does not make any difference at this point.\n+    isHealthy \u003d false;\n+    // We could get here before the nodeStatusUpdater is set\n+    NodeStatusUpdater nsu \u003d getNodeStatusUpdater();\n+    if (nsu !\u003d null) {\n+      nsu.reportException(dbErr);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void markStoreUnHealthy(DBException dbErr) {\n    // Always log the error here, we might not see the error in the caller\n    LOG.error(\"Statestore exception: \", dbErr);\n    // We have already been marked unhealthy so no need to do it again.\n    if (!isHealthy) {\n      return;\n    }\n    // Mark unhealthy, an out of band heartbeat will be sent and the state\n    // will remain unhealthy (not recoverable).\n    // No need to close the store: does not make any difference at this point.\n    isHealthy \u003d false;\n    // We could get here before the nodeStatusUpdater is set\n    NodeStatusUpdater nsu \u003d getNodeStatusUpdater();\n    if (nsu !\u003d null) {\n      nsu.reportException(dbErr);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/recovery/NMLeveldbStateStoreService.java"
    }
  }
}