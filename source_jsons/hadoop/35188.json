{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NMLeveldbStateStoreService.java",
  "functionName": "loadLocalizationState",
  "functionId": "loadLocalizationState",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/recovery/NMLeveldbStateStoreService.java",
  "functionStartLine": 846,
  "functionEndLine": 853,
  "numCommitsSeen": 43,
  "timeTaken": 3088,
  "changeHistory": [
    "250b50018e8c94d8ca83ff981b01f26bb68c0842",
    "65e7469712be6cf393e29ef73cc94727eec81227",
    "2050e0dad661bade3e140d7a5692cfe1999badc3",
    "98238a8d4a3aacb7bf5e9d97660f3c2fbf030eaa",
    "66598697a6e777615334ebde5ba7738135da83ae"
  ],
  "changeHistoryShort": {
    "250b50018e8c94d8ca83ff981b01f26bb68c0842": "Ybodychange",
    "65e7469712be6cf393e29ef73cc94727eec81227": "Ybodychange",
    "2050e0dad661bade3e140d7a5692cfe1999badc3": "Ybodychange",
    "98238a8d4a3aacb7bf5e9d97660f3c2fbf030eaa": "Ybodychange",
    "66598697a6e777615334ebde5ba7738135da83ae": "Yintroduced"
  },
  "changeHistoryDetails": {
    "250b50018e8c94d8ca83ff981b01f26bb68c0842": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8680. YARN NM: Implement Iterable Abstraction for LocalResourceTracker state. Contributed by Pradeep Ambati\n",
      "commitDate": "13/09/18 11:28 AM",
      "commitName": "250b50018e8c94d8ca83ff981b01f26bb68c0842",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "20/08/18 8:14 AM",
      "commitNameOld": "65e7469712be6cf393e29ef73cc94727eec81227",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 24.13,
      "commitsBetweenForRepo": 188,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,8 @@\n   public RecoveredLocalizationState loadLocalizationState()\n       throws IOException {\n     RecoveredLocalizationState state \u003d new RecoveredLocalizationState();\n-    LeveldbIterator it \u003d getLevelDBIterator(LOCALIZATION_PUBLIC_KEY_PREFIX);\n-    state.publicTrackerState \u003d loadResourceTrackerState(it,\n+    state.publicTrackerState \u003d loadResourceTrackerState(\n         LOCALIZATION_PUBLIC_KEY_PREFIX);\n     state.it \u003d new UserResourcesIterator();\n     return state;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public RecoveredLocalizationState loadLocalizationState()\n      throws IOException {\n    RecoveredLocalizationState state \u003d new RecoveredLocalizationState();\n    state.publicTrackerState \u003d loadResourceTrackerState(\n        LOCALIZATION_PUBLIC_KEY_PREFIX);\n    state.it \u003d new UserResourcesIterator();\n    return state;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/recovery/NMLeveldbStateStoreService.java",
      "extendedDetails": {}
    },
    "65e7469712be6cf393e29ef73cc94727eec81227": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8242. YARN NM: OOM error while reading back the state store on recovery. Contributed by Pradeep Ambati and Kanwaljeet Sachdev\n",
      "commitDate": "20/08/18 8:14 AM",
      "commitName": "65e7469712be6cf393e29ef73cc94727eec81227",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "28/07/18 8:22 AM",
      "commitNameOld": "3d586841aba99c7df98b2b4d3e48ec0144bad086",
      "commitAuthorOld": "bibinchundatt",
      "daysBetweenCommits": 22.99,
      "commitsBetweenForRepo": 209,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,9 @@\n   public RecoveredLocalizationState loadLocalizationState()\n       throws IOException {\n     RecoveredLocalizationState state \u003d new RecoveredLocalizationState();\n-\n-    LeveldbIterator iter \u003d null;\n-    try {\n-      iter \u003d new LeveldbIterator(db);\n-      iter.seek(bytes(LOCALIZATION_PUBLIC_KEY_PREFIX));\n-      state.publicTrackerState \u003d loadResourceTrackerState(iter,\n-          LOCALIZATION_PUBLIC_KEY_PREFIX);\n-\n-      iter.seek(bytes(LOCALIZATION_PRIVATE_KEY_PREFIX));\n-      while (iter.hasNext()) {\n-        Entry\u003cbyte[],byte[]\u003e entry \u003d iter.peekNext();\n-        String key \u003d asString(entry.getKey());\n-        if (!key.startsWith(LOCALIZATION_PRIVATE_KEY_PREFIX)) {\n-          break;\n-        }\n-\n-        int userEndPos \u003d key.indexOf(\u0027/\u0027,\n-            LOCALIZATION_PRIVATE_KEY_PREFIX.length());\n-        if (userEndPos \u003c 0) {\n-          throw new IOException(\"Unable to determine user in resource key: \"\n-              + key);\n-        }\n-        String user \u003d key.substring(\n-            LOCALIZATION_PRIVATE_KEY_PREFIX.length(), userEndPos);\n-        state.userResources.put(user, loadUserLocalizedResources(iter,\n-            key.substring(0, userEndPos+1)));\n-      }\n-    } catch (DBException e) {\n-      throw new IOException(e);\n-    } finally {\n-      if (iter !\u003d null) {\n-        iter.close();\n-      }\n-    }\n-\n+    LeveldbIterator it \u003d getLevelDBIterator(LOCALIZATION_PUBLIC_KEY_PREFIX);\n+    state.publicTrackerState \u003d loadResourceTrackerState(it,\n+        LOCALIZATION_PUBLIC_KEY_PREFIX);\n+    state.it \u003d new UserResourcesIterator();\n     return state;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public RecoveredLocalizationState loadLocalizationState()\n      throws IOException {\n    RecoveredLocalizationState state \u003d new RecoveredLocalizationState();\n    LeveldbIterator it \u003d getLevelDBIterator(LOCALIZATION_PUBLIC_KEY_PREFIX);\n    state.publicTrackerState \u003d loadResourceTrackerState(it,\n        LOCALIZATION_PUBLIC_KEY_PREFIX);\n    state.it \u003d new UserResourcesIterator();\n    return state;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/recovery/NMLeveldbStateStoreService.java",
      "extendedDetails": {}
    },
    "2050e0dad661bade3e140d7a5692cfe1999badc3": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1342. Recover container tokens upon nodemanager restart. Contributed by Jason Lowe.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1612995 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/07/14 10:02 PM",
      "commitName": "2050e0dad661bade3e140d7a5692cfe1999badc3",
      "commitAuthor": "Devarajulu K",
      "commitDateOld": "21/07/14 7:43 AM",
      "commitNameOld": "8a8708582091c87e81e90f7a442624ac1e34ed33",
      "commitAuthorOld": "Jason Darrell Lowe",
      "daysBetweenCommits": 2.6,
      "commitsBetweenForRepo": 39,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,40 @@\n   public RecoveredLocalizationState loadLocalizationState()\n       throws IOException {\n     RecoveredLocalizationState state \u003d new RecoveredLocalizationState();\n \n     LeveldbIterator iter \u003d null;\n     try {\n       iter \u003d new LeveldbIterator(db);\n       iter.seek(bytes(LOCALIZATION_PUBLIC_KEY_PREFIX));\n       state.publicTrackerState \u003d loadResourceTrackerState(iter,\n           LOCALIZATION_PUBLIC_KEY_PREFIX);\n \n       iter.seek(bytes(LOCALIZATION_PRIVATE_KEY_PREFIX));\n       while (iter.hasNext()) {\n         Entry\u003cbyte[],byte[]\u003e entry \u003d iter.peekNext();\n         String key \u003d asString(entry.getKey());\n         if (!key.startsWith(LOCALIZATION_PRIVATE_KEY_PREFIX)) {\n           break;\n         }\n \n         int userEndPos \u003d key.indexOf(\u0027/\u0027,\n             LOCALIZATION_PRIVATE_KEY_PREFIX.length());\n         if (userEndPos \u003c 0) {\n           throw new IOException(\"Unable to determine user in resource key: \"\n               + key);\n         }\n         String user \u003d key.substring(\n             LOCALIZATION_PRIVATE_KEY_PREFIX.length(), userEndPos);\n         state.userResources.put(user, loadUserLocalizedResources(iter,\n             key.substring(0, userEndPos+1)));\n       }\n     } catch (DBException e) {\n-      throw new IOException(e.getMessage(), e);\n+      throw new IOException(e);\n     } finally {\n       if (iter !\u003d null) {\n         iter.close();\n       }\n     }\n \n     return state;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public RecoveredLocalizationState loadLocalizationState()\n      throws IOException {\n    RecoveredLocalizationState state \u003d new RecoveredLocalizationState();\n\n    LeveldbIterator iter \u003d null;\n    try {\n      iter \u003d new LeveldbIterator(db);\n      iter.seek(bytes(LOCALIZATION_PUBLIC_KEY_PREFIX));\n      state.publicTrackerState \u003d loadResourceTrackerState(iter,\n          LOCALIZATION_PUBLIC_KEY_PREFIX);\n\n      iter.seek(bytes(LOCALIZATION_PRIVATE_KEY_PREFIX));\n      while (iter.hasNext()) {\n        Entry\u003cbyte[],byte[]\u003e entry \u003d iter.peekNext();\n        String key \u003d asString(entry.getKey());\n        if (!key.startsWith(LOCALIZATION_PRIVATE_KEY_PREFIX)) {\n          break;\n        }\n\n        int userEndPos \u003d key.indexOf(\u0027/\u0027,\n            LOCALIZATION_PRIVATE_KEY_PREFIX.length());\n        if (userEndPos \u003c 0) {\n          throw new IOException(\"Unable to determine user in resource key: \"\n              + key);\n        }\n        String user \u003d key.substring(\n            LOCALIZATION_PRIVATE_KEY_PREFIX.length(), userEndPos);\n        state.userResources.put(user, loadUserLocalizedResources(iter,\n            key.substring(0, userEndPos+1)));\n      }\n    } catch (DBException e) {\n      throw new IOException(e);\n    } finally {\n      if (iter !\u003d null) {\n        iter.close();\n      }\n    }\n\n    return state;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/recovery/NMLeveldbStateStoreService.java",
      "extendedDetails": {}
    },
    "98238a8d4a3aacb7bf5e9d97660f3c2fbf030eaa": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2167. LeveldbIterator should get closed in NMLeveldbStateStoreService#loadLocalizationState() within finally block. Contributed by Junping Du\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1603039 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/06/14 7:12 PM",
      "commitName": "98238a8d4a3aacb7bf5e9d97660f3c2fbf030eaa",
      "commitAuthor": "Jason Darrell Lowe",
      "commitDateOld": "16/06/14 6:02 PM",
      "commitNameOld": "072360d1286cf1de3f83664755144b4d468dae6e",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 0.05,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,40 @@\n   public RecoveredLocalizationState loadLocalizationState()\n       throws IOException {\n     RecoveredLocalizationState state \u003d new RecoveredLocalizationState();\n \n+    LeveldbIterator iter \u003d null;\n     try {\n-      LeveldbIterator iter \u003d new LeveldbIterator(db);\n+      iter \u003d new LeveldbIterator(db);\n       iter.seek(bytes(LOCALIZATION_PUBLIC_KEY_PREFIX));\n       state.publicTrackerState \u003d loadResourceTrackerState(iter,\n           LOCALIZATION_PUBLIC_KEY_PREFIX);\n \n       iter.seek(bytes(LOCALIZATION_PRIVATE_KEY_PREFIX));\n       while (iter.hasNext()) {\n         Entry\u003cbyte[],byte[]\u003e entry \u003d iter.peekNext();\n         String key \u003d asString(entry.getKey());\n         if (!key.startsWith(LOCALIZATION_PRIVATE_KEY_PREFIX)) {\n           break;\n         }\n \n         int userEndPos \u003d key.indexOf(\u0027/\u0027,\n             LOCALIZATION_PRIVATE_KEY_PREFIX.length());\n         if (userEndPos \u003c 0) {\n           throw new IOException(\"Unable to determine user in resource key: \"\n               + key);\n         }\n         String user \u003d key.substring(\n             LOCALIZATION_PRIVATE_KEY_PREFIX.length(), userEndPos);\n         state.userResources.put(user, loadUserLocalizedResources(iter,\n             key.substring(0, userEndPos+1)));\n       }\n     } catch (DBException e) {\n       throw new IOException(e.getMessage(), e);\n+    } finally {\n+      if (iter !\u003d null) {\n+        iter.close();\n+      }\n     }\n \n     return state;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public RecoveredLocalizationState loadLocalizationState()\n      throws IOException {\n    RecoveredLocalizationState state \u003d new RecoveredLocalizationState();\n\n    LeveldbIterator iter \u003d null;\n    try {\n      iter \u003d new LeveldbIterator(db);\n      iter.seek(bytes(LOCALIZATION_PUBLIC_KEY_PREFIX));\n      state.publicTrackerState \u003d loadResourceTrackerState(iter,\n          LOCALIZATION_PUBLIC_KEY_PREFIX);\n\n      iter.seek(bytes(LOCALIZATION_PRIVATE_KEY_PREFIX));\n      while (iter.hasNext()) {\n        Entry\u003cbyte[],byte[]\u003e entry \u003d iter.peekNext();\n        String key \u003d asString(entry.getKey());\n        if (!key.startsWith(LOCALIZATION_PRIVATE_KEY_PREFIX)) {\n          break;\n        }\n\n        int userEndPos \u003d key.indexOf(\u0027/\u0027,\n            LOCALIZATION_PRIVATE_KEY_PREFIX.length());\n        if (userEndPos \u003c 0) {\n          throw new IOException(\"Unable to determine user in resource key: \"\n              + key);\n        }\n        String user \u003d key.substring(\n            LOCALIZATION_PRIVATE_KEY_PREFIX.length(), userEndPos);\n        state.userResources.put(user, loadUserLocalizedResources(iter,\n            key.substring(0, userEndPos+1)));\n      }\n    } catch (DBException e) {\n      throw new IOException(e.getMessage(), e);\n    } finally {\n      if (iter !\u003d null) {\n        iter.close();\n      }\n    }\n\n    return state;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/recovery/NMLeveldbStateStoreService.java",
      "extendedDetails": {}
    },
    "66598697a6e777615334ebde5ba7738135da83ae": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1338. Recover localized resource cache state upon nodemanager restart (Contributed by Jason Lowe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1598640 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/05/14 8:37 AM",
      "commitName": "66598697a6e777615334ebde5ba7738135da83ae",
      "commitAuthor": "Junping Du",
      "diff": "@@ -0,0 +1,35 @@\n+  public RecoveredLocalizationState loadLocalizationState()\n+      throws IOException {\n+    RecoveredLocalizationState state \u003d new RecoveredLocalizationState();\n+\n+    try {\n+      LeveldbIterator iter \u003d new LeveldbIterator(db);\n+      iter.seek(bytes(LOCALIZATION_PUBLIC_KEY_PREFIX));\n+      state.publicTrackerState \u003d loadResourceTrackerState(iter,\n+          LOCALIZATION_PUBLIC_KEY_PREFIX);\n+\n+      iter.seek(bytes(LOCALIZATION_PRIVATE_KEY_PREFIX));\n+      while (iter.hasNext()) {\n+        Entry\u003cbyte[],byte[]\u003e entry \u003d iter.peekNext();\n+        String key \u003d asString(entry.getKey());\n+        if (!key.startsWith(LOCALIZATION_PRIVATE_KEY_PREFIX)) {\n+          break;\n+        }\n+\n+        int userEndPos \u003d key.indexOf(\u0027/\u0027,\n+            LOCALIZATION_PRIVATE_KEY_PREFIX.length());\n+        if (userEndPos \u003c 0) {\n+          throw new IOException(\"Unable to determine user in resource key: \"\n+              + key);\n+        }\n+        String user \u003d key.substring(\n+            LOCALIZATION_PRIVATE_KEY_PREFIX.length(), userEndPos);\n+        state.userResources.put(user, loadUserLocalizedResources(iter,\n+            key.substring(0, userEndPos+1)));\n+      }\n+    } catch (DBException e) {\n+      throw new IOException(e.getMessage(), e);\n+    }\n+\n+    return state;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public RecoveredLocalizationState loadLocalizationState()\n      throws IOException {\n    RecoveredLocalizationState state \u003d new RecoveredLocalizationState();\n\n    try {\n      LeveldbIterator iter \u003d new LeveldbIterator(db);\n      iter.seek(bytes(LOCALIZATION_PUBLIC_KEY_PREFIX));\n      state.publicTrackerState \u003d loadResourceTrackerState(iter,\n          LOCALIZATION_PUBLIC_KEY_PREFIX);\n\n      iter.seek(bytes(LOCALIZATION_PRIVATE_KEY_PREFIX));\n      while (iter.hasNext()) {\n        Entry\u003cbyte[],byte[]\u003e entry \u003d iter.peekNext();\n        String key \u003d asString(entry.getKey());\n        if (!key.startsWith(LOCALIZATION_PRIVATE_KEY_PREFIX)) {\n          break;\n        }\n\n        int userEndPos \u003d key.indexOf(\u0027/\u0027,\n            LOCALIZATION_PRIVATE_KEY_PREFIX.length());\n        if (userEndPos \u003c 0) {\n          throw new IOException(\"Unable to determine user in resource key: \"\n              + key);\n        }\n        String user \u003d key.substring(\n            LOCALIZATION_PRIVATE_KEY_PREFIX.length(), userEndPos);\n        state.userResources.put(user, loadUserLocalizedResources(iter,\n            key.substring(0, userEndPos+1)));\n      }\n    } catch (DBException e) {\n      throw new IOException(e.getMessage(), e);\n    }\n\n    return state;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/recovery/NMLeveldbStateStoreService.java"
    }
  }
}