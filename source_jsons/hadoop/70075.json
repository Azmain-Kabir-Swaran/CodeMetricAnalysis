{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AbfsConfiguration.java",
  "functionName": "getTokenProviderClass",
  "functionId": "getTokenProviderClass___authType-AuthType__name-String__defaultValue-Class__? extends U____xface-Class__U__",
  "sourceFilePath": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/AbfsConfiguration.java",
  "functionStartLine": 338,
  "functionEndLine": 356,
  "numCommitsSeen": 33,
  "timeTaken": 532,
  "changeHistory": [
    "4c5cd751e3911e350c7437dcb28c0ed67735f635"
  ],
  "changeHistoryShort": {
    "4c5cd751e3911e350c7437dcb28c0ed67735f635": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4c5cd751e3911e350c7437dcb28c0ed67735f635": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-17053. ABFS: Fix Account-specific OAuth config setting parsing\n\nContributed by Sneha Vijayarajan",
      "commitDate": "27/05/20 1:56 PM",
      "commitName": "4c5cd751e3911e350c7437dcb28c0ed67735f635",
      "commitAuthor": "Sneha Vijayarajan",
      "diff": "@@ -0,0 +1,19 @@\n+  public \u003cU\u003e Class\u003c? extends U\u003e getTokenProviderClass(AuthType authType,\n+      String name,\n+      Class\u003c? extends U\u003e defaultValue,\n+      Class\u003cU\u003e xface) {\n+    Class\u003c?\u003e tokenProviderClass \u003d getAccountSpecificClass(name, defaultValue,\n+        xface);\n+\n+    // If there is none set specific for account\n+    // fall back to generic setting if Auth Type matches\n+    if ((tokenProviderClass \u003d\u003d null)\n+        \u0026\u0026 (authType \u003d\u003d getAccountAgnosticEnum(\n+        FS_AZURE_ACCOUNT_AUTH_TYPE_PROPERTY_NAME, AuthType.SharedKey))) {\n+      tokenProviderClass \u003d getAccountAgnosticClass(name, defaultValue, xface);\n+    }\n+\n+    return (tokenProviderClass \u003d\u003d null)\n+        ? null\n+        : tokenProviderClass.asSubclass(xface);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public \u003cU\u003e Class\u003c? extends U\u003e getTokenProviderClass(AuthType authType,\n      String name,\n      Class\u003c? extends U\u003e defaultValue,\n      Class\u003cU\u003e xface) {\n    Class\u003c?\u003e tokenProviderClass \u003d getAccountSpecificClass(name, defaultValue,\n        xface);\n\n    // If there is none set specific for account\n    // fall back to generic setting if Auth Type matches\n    if ((tokenProviderClass \u003d\u003d null)\n        \u0026\u0026 (authType \u003d\u003d getAccountAgnosticEnum(\n        FS_AZURE_ACCOUNT_AUTH_TYPE_PROPERTY_NAME, AuthType.SharedKey))) {\n      tokenProviderClass \u003d getAccountAgnosticClass(name, defaultValue, xface);\n    }\n\n    return (tokenProviderClass \u003d\u003d null)\n        ? null\n        : tokenProviderClass.asSubclass(xface);\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/AbfsConfiguration.java"
    }
  }
}