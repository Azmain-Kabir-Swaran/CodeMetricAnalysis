{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JMXGet.java",
  "functionName": "parseArgs",
  "functionId": "parseArgs___opts-Options__args-String",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/JMXGet.java",
  "functionStartLine": 247,
  "functionEndLine": 293,
  "numCommitsSeen": 8,
  "timeTaken": 4422,
  "changeHistory": [
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private static CommandLine parseArgs(Options opts, String... args)\n  throws IllegalArgumentException {\n\n    OptionBuilder.withArgName(\"NameNode|DataNode\");\n    OptionBuilder.hasArg();\n    OptionBuilder.withDescription(\"specify jmx service (NameNode by default)\");\n    Option jmx_service \u003d OptionBuilder.create(\"service\");\n\n    OptionBuilder.withArgName(\"mbean server\");\n    OptionBuilder.hasArg();\n    OptionBuilder\n    .withDescription(\"specify mbean server (localhost by default)\");\n    Option jmx_server \u003d OptionBuilder.create(\"server\");\n\n    OptionBuilder.withDescription(\"print help\");\n    Option jmx_help \u003d OptionBuilder.create(\"help\");\n\n    OptionBuilder.withArgName(\"mbean server port\");\n    OptionBuilder.hasArg();\n    OptionBuilder.withDescription(\"specify mbean server port, \"\n        + \"if missing - it will try to connect to MBean Server in the same VM\");\n    Option jmx_port \u003d OptionBuilder.create(\"port\");\n\n    OptionBuilder.withArgName(\"VM\u0027s connector url\");\n    OptionBuilder.hasArg();\n    OptionBuilder.withDescription(\"connect to the VM on the same machine;\"\n        + \"\\n use:\\n jstat -J-Djstat.showUnsupported\u003dtrue -snap \u003cvmpid\u003e | \"\n        + \"grep sun.management.JMXConnectorServer.address\\n \"\n        + \"to find the url\");\n    Option jmx_localVM \u003d OptionBuilder.create(\"localVM\");\n\n    opts.addOption(jmx_server);\n    opts.addOption(jmx_help);\n    opts.addOption(jmx_service);\n    opts.addOption(jmx_port);\n    opts.addOption(jmx_localVM);\n\n    CommandLine commandLine \u003d null;\n    CommandLineParser parser \u003d new GnuParser();\n    try {\n      commandLine \u003d parser.parse(opts, args, true);\n    } catch (ParseException e) {\n      printUsage(opts);\n      throw new IllegalArgumentException(\"invalid args: \" + e.getMessage());\n    }\n    return commandLine;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/JMXGet.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/JMXGet.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/JMXGet.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private static CommandLine parseArgs(Options opts, String... args)\n  throws IllegalArgumentException {\n\n    OptionBuilder.withArgName(\"NameNode|DataNode\");\n    OptionBuilder.hasArg();\n    OptionBuilder.withDescription(\"specify jmx service (NameNode by default)\");\n    Option jmx_service \u003d OptionBuilder.create(\"service\");\n\n    OptionBuilder.withArgName(\"mbean server\");\n    OptionBuilder.hasArg();\n    OptionBuilder\n    .withDescription(\"specify mbean server (localhost by default)\");\n    Option jmx_server \u003d OptionBuilder.create(\"server\");\n\n    OptionBuilder.withDescription(\"print help\");\n    Option jmx_help \u003d OptionBuilder.create(\"help\");\n\n    OptionBuilder.withArgName(\"mbean server port\");\n    OptionBuilder.hasArg();\n    OptionBuilder.withDescription(\"specify mbean server port, \"\n        + \"if missing - it will try to connect to MBean Server in the same VM\");\n    Option jmx_port \u003d OptionBuilder.create(\"port\");\n\n    OptionBuilder.withArgName(\"VM\u0027s connector url\");\n    OptionBuilder.hasArg();\n    OptionBuilder.withDescription(\"connect to the VM on the same machine;\"\n        + \"\\n use:\\n jstat -J-Djstat.showUnsupported\u003dtrue -snap \u003cvmpid\u003e | \"\n        + \"grep sun.management.JMXConnectorServer.address\\n \"\n        + \"to find the url\");\n    Option jmx_localVM \u003d OptionBuilder.create(\"localVM\");\n\n    opts.addOption(jmx_server);\n    opts.addOption(jmx_help);\n    opts.addOption(jmx_service);\n    opts.addOption(jmx_port);\n    opts.addOption(jmx_localVM);\n\n    CommandLine commandLine \u003d null;\n    CommandLineParser parser \u003d new GnuParser();\n    try {\n      commandLine \u003d parser.parse(opts, args, true);\n    } catch (ParseException e) {\n      printUsage(opts);\n      throw new IllegalArgumentException(\"invalid args: \" + e.getMessage());\n    }\n    return commandLine;\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/JMXGet.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/tools/JMXGet.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/JMXGet.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,47 @@\n+  private static CommandLine parseArgs(Options opts, String... args)\n+  throws IllegalArgumentException {\n+\n+    OptionBuilder.withArgName(\"NameNode|DataNode\");\n+    OptionBuilder.hasArg();\n+    OptionBuilder.withDescription(\"specify jmx service (NameNode by default)\");\n+    Option jmx_service \u003d OptionBuilder.create(\"service\");\n+\n+    OptionBuilder.withArgName(\"mbean server\");\n+    OptionBuilder.hasArg();\n+    OptionBuilder\n+    .withDescription(\"specify mbean server (localhost by default)\");\n+    Option jmx_server \u003d OptionBuilder.create(\"server\");\n+\n+    OptionBuilder.withDescription(\"print help\");\n+    Option jmx_help \u003d OptionBuilder.create(\"help\");\n+\n+    OptionBuilder.withArgName(\"mbean server port\");\n+    OptionBuilder.hasArg();\n+    OptionBuilder.withDescription(\"specify mbean server port, \"\n+        + \"if missing - it will try to connect to MBean Server in the same VM\");\n+    Option jmx_port \u003d OptionBuilder.create(\"port\");\n+\n+    OptionBuilder.withArgName(\"VM\u0027s connector url\");\n+    OptionBuilder.hasArg();\n+    OptionBuilder.withDescription(\"connect to the VM on the same machine;\"\n+        + \"\\n use:\\n jstat -J-Djstat.showUnsupported\u003dtrue -snap \u003cvmpid\u003e | \"\n+        + \"grep sun.management.JMXConnectorServer.address\\n \"\n+        + \"to find the url\");\n+    Option jmx_localVM \u003d OptionBuilder.create(\"localVM\");\n+\n+    opts.addOption(jmx_server);\n+    opts.addOption(jmx_help);\n+    opts.addOption(jmx_service);\n+    opts.addOption(jmx_port);\n+    opts.addOption(jmx_localVM);\n+\n+    CommandLine commandLine \u003d null;\n+    CommandLineParser parser \u003d new GnuParser();\n+    try {\n+      commandLine \u003d parser.parse(opts, args, true);\n+    } catch (ParseException e) {\n+      printUsage(opts);\n+      throw new IllegalArgumentException(\"invalid args: \" + e.getMessage());\n+    }\n+    return commandLine;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static CommandLine parseArgs(Options opts, String... args)\n  throws IllegalArgumentException {\n\n    OptionBuilder.withArgName(\"NameNode|DataNode\");\n    OptionBuilder.hasArg();\n    OptionBuilder.withDescription(\"specify jmx service (NameNode by default)\");\n    Option jmx_service \u003d OptionBuilder.create(\"service\");\n\n    OptionBuilder.withArgName(\"mbean server\");\n    OptionBuilder.hasArg();\n    OptionBuilder\n    .withDescription(\"specify mbean server (localhost by default)\");\n    Option jmx_server \u003d OptionBuilder.create(\"server\");\n\n    OptionBuilder.withDescription(\"print help\");\n    Option jmx_help \u003d OptionBuilder.create(\"help\");\n\n    OptionBuilder.withArgName(\"mbean server port\");\n    OptionBuilder.hasArg();\n    OptionBuilder.withDescription(\"specify mbean server port, \"\n        + \"if missing - it will try to connect to MBean Server in the same VM\");\n    Option jmx_port \u003d OptionBuilder.create(\"port\");\n\n    OptionBuilder.withArgName(\"VM\u0027s connector url\");\n    OptionBuilder.hasArg();\n    OptionBuilder.withDescription(\"connect to the VM on the same machine;\"\n        + \"\\n use:\\n jstat -J-Djstat.showUnsupported\u003dtrue -snap \u003cvmpid\u003e | \"\n        + \"grep sun.management.JMXConnectorServer.address\\n \"\n        + \"to find the url\");\n    Option jmx_localVM \u003d OptionBuilder.create(\"localVM\");\n\n    opts.addOption(jmx_server);\n    opts.addOption(jmx_help);\n    opts.addOption(jmx_service);\n    opts.addOption(jmx_port);\n    opts.addOption(jmx_localVM);\n\n    CommandLine commandLine \u003d null;\n    CommandLineParser parser \u003d new GnuParser();\n    try {\n      commandLine \u003d parser.parse(opts, args, true);\n    } catch (ParseException e) {\n      printUsage(opts);\n      throw new IllegalArgumentException(\"invalid args: \" + e.getMessage());\n    }\n    return commandLine;\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/tools/JMXGet.java"
    }
  }
}