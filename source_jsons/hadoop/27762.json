{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FederationRMFailoverProxyProvider.java",
  "functionName": "updateRMAddress",
  "functionId": "updateRMAddress___subClusterInfo-SubClusterInfo",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/failover/FederationRMFailoverProxyProvider.java",
  "functionStartLine": 166,
  "functionEndLine": 179,
  "numCommitsSeen": 7,
  "timeTaken": 748,
  "changeHistory": [
    "bdfad4523f1a5a776e20773c371ce99d0c538ac1"
  ],
  "changeHistoryShort": {
    "bdfad4523f1a5a776e20773c371ce99d0c538ac1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bdfad4523f1a5a776e20773c371ce99d0c538ac1": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3673. Create a FailoverProxy for Federation services. Contributed by Subru Krishnan\n\n(cherry picked from commit 3307564a5f8c8abc5fe84efcd05ee0f7dfdd921c)\n",
      "commitDate": "01/08/17 5:28 PM",
      "commitName": "bdfad4523f1a5a776e20773c371ce99d0c538ac1",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,14 @@\n+  private void updateRMAddress(SubClusterInfo subClusterInfo) {\n+    if (subClusterInfo !\u003d null) {\n+      if (protocol \u003d\u003d ApplicationClientProtocol.class) {\n+        conf.set(YarnConfiguration.RM_ADDRESS,\n+            subClusterInfo.getClientRMServiceAddress());\n+      } else if (protocol \u003d\u003d ApplicationMasterProtocol.class) {\n+        conf.set(YarnConfiguration.RM_SCHEDULER_ADDRESS,\n+            subClusterInfo.getAMRMServiceAddress());\n+      } else if (protocol \u003d\u003d ResourceManagerAdministrationProtocol.class) {\n+        conf.set(YarnConfiguration.RM_ADMIN_ADDRESS,\n+            subClusterInfo.getRMAdminServiceAddress());\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void updateRMAddress(SubClusterInfo subClusterInfo) {\n    if (subClusterInfo !\u003d null) {\n      if (protocol \u003d\u003d ApplicationClientProtocol.class) {\n        conf.set(YarnConfiguration.RM_ADDRESS,\n            subClusterInfo.getClientRMServiceAddress());\n      } else if (protocol \u003d\u003d ApplicationMasterProtocol.class) {\n        conf.set(YarnConfiguration.RM_SCHEDULER_ADDRESS,\n            subClusterInfo.getAMRMServiceAddress());\n      } else if (protocol \u003d\u003d ResourceManagerAdministrationProtocol.class) {\n        conf.set(YarnConfiguration.RM_ADMIN_ADDRESS,\n            subClusterInfo.getRMAdminServiceAddress());\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/failover/FederationRMFailoverProxyProvider.java"
    }
  }
}