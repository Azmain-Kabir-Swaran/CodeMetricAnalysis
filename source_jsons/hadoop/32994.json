{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LogAggregationService.java",
  "functionName": "getAggregatorThreadPoolSize",
  "functionId": "getAggregatorThreadPoolSize___conf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/LogAggregationService.java",
  "functionStartLine": 440,
  "functionEndLine": 459,
  "numCommitsSeen": 36,
  "timeTaken": 1119,
  "changeHistory": [
    "954dd57043d2de4f962876c1b89753bfc7e4ce55"
  ],
  "changeHistoryShort": {
    "954dd57043d2de4f962876c1b89753bfc7e4ce55": "Yintroduced"
  },
  "changeHistoryDetails": {
    "954dd57043d2de4f962876c1b89753bfc7e4ce55": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4697. NM aggregation thread pool is not bound by limits (haibochen via rkanter)\n",
      "commitDate": "24/02/16 3:00 PM",
      "commitName": "954dd57043d2de4f962876c1b89753bfc7e4ce55",
      "commitAuthor": "Robert Kanter",
      "diff": "@@ -0,0 +1,20 @@\n+  private int getAggregatorThreadPoolSize(Configuration conf) {\n+    int threadPoolSize;\n+    try {\n+      threadPoolSize \u003d conf.getInt(YarnConfiguration\n+          .NM_LOG_AGGREGATION_THREAD_POOL_SIZE,\n+          YarnConfiguration.DEFAULT_NM_LOG_AGGREGATION_THREAD_POOL_SIZE);\n+    } catch (NumberFormatException ex) {\n+      LOG.warn(\"Invalid thread pool size. Setting it to the default value \" +\n+          \"in YarnConfiguration\");\n+      threadPoolSize \u003d YarnConfiguration.\n+          DEFAULT_NM_LOG_AGGREGATION_THREAD_POOL_SIZE;\n+    }\n+    if(threadPoolSize \u003c\u003d 0) {\n+      LOG.warn(\"Invalid thread pool size. Setting it to the default value \" +\n+          \"in YarnConfiguration\");\n+      threadPoolSize \u003d YarnConfiguration.\n+          DEFAULT_NM_LOG_AGGREGATION_THREAD_POOL_SIZE;\n+    }\n+    return threadPoolSize;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private int getAggregatorThreadPoolSize(Configuration conf) {\n    int threadPoolSize;\n    try {\n      threadPoolSize \u003d conf.getInt(YarnConfiguration\n          .NM_LOG_AGGREGATION_THREAD_POOL_SIZE,\n          YarnConfiguration.DEFAULT_NM_LOG_AGGREGATION_THREAD_POOL_SIZE);\n    } catch (NumberFormatException ex) {\n      LOG.warn(\"Invalid thread pool size. Setting it to the default value \" +\n          \"in YarnConfiguration\");\n      threadPoolSize \u003d YarnConfiguration.\n          DEFAULT_NM_LOG_AGGREGATION_THREAD_POOL_SIZE;\n    }\n    if(threadPoolSize \u003c\u003d 0) {\n      LOG.warn(\"Invalid thread pool size. Setting it to the default value \" +\n          \"in YarnConfiguration\");\n      threadPoolSize \u003d YarnConfiguration.\n          DEFAULT_NM_LOG_AGGREGATION_THREAD_POOL_SIZE;\n    }\n    return threadPoolSize;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/LogAggregationService.java"
    }
  }
}