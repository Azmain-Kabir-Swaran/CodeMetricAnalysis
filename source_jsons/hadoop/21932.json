{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CountersStrings.java",
  "functionName": "parseEscapedCompactString",
  "functionId": "parseEscapedCompactString___compactString-String__counters-T",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/util/CountersStrings.java",
  "functionStartLine": 213,
  "functionEndLine": 272,
  "numCommitsSeen": 5,
  "timeTaken": 1382,
  "changeHistory": [
    "def0b949d442ecd27ff1a9623405624db691ecfe",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "24676e8c2ef48e67265d33c053badb31aecad616"
  ],
  "changeHistoryShort": {
    "def0b949d442ecd27ff1a9623405624db691ecfe": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yfilerename",
    "24676e8c2ef48e67265d33c053badb31aecad616": "Yintroduced"
  },
  "changeHistoryDetails": {
    "def0b949d442ecd27ff1a9623405624db691ecfe": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-4229. Intern counter names in the JT (bobby via daryn)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1401467 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/10/12 1:57 PM",
      "commitName": "def0b949d442ecd27ff1a9623405624db691ecfe",
      "commitAuthor": "Daryn Sharp",
      "commitDateOld": "24/08/11 5:14 PM",
      "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 425.86,
      "commitsBetweenForRepo": 2813,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,60 +1,60 @@\n   T parseEscapedCompactString(String compactString, T counters)\n       throws ParseException {\n     IntWritable index \u003d new IntWritable(0);\n \n     // Get the group to work on\n     String groupString \u003d\n       getBlock(compactString, GROUP_OPEN, GROUP_CLOSE, index);\n \n     while (groupString !\u003d null) {\n       IntWritable groupIndex \u003d new IntWritable(0);\n \n       // Get the actual name\n       String groupName \u003d\n-        getBlock(groupString, UNIT_OPEN, UNIT_CLOSE, groupIndex);\n-      groupName \u003d unescape(groupName);\n+          StringInterner.weakIntern(getBlock(groupString, UNIT_OPEN, UNIT_CLOSE, groupIndex));\n+      groupName \u003d StringInterner.weakIntern(unescape(groupName));\n \n       // Get the display name\n       String groupDisplayName \u003d\n-        getBlock(groupString, UNIT_OPEN, UNIT_CLOSE, groupIndex);\n-      groupDisplayName \u003d unescape(groupDisplayName);\n+          StringInterner.weakIntern(getBlock(groupString, UNIT_OPEN, UNIT_CLOSE, groupIndex));\n+      groupDisplayName \u003d StringInterner.weakIntern(unescape(groupDisplayName));\n \n       // Get the counters\n       G group \u003d counters.getGroup(groupName);\n       group.setDisplayName(groupDisplayName);\n \n       String counterString \u003d\n         getBlock(groupString, COUNTER_OPEN, COUNTER_CLOSE, groupIndex);\n \n       while (counterString !\u003d null) {\n         IntWritable counterIndex \u003d new IntWritable(0);\n \n         // Get the actual name\n         String counterName \u003d\n-          getBlock(counterString, UNIT_OPEN, UNIT_CLOSE, counterIndex);\n-        counterName \u003d unescape(counterName);\n+            StringInterner.weakIntern(getBlock(counterString, UNIT_OPEN, UNIT_CLOSE, counterIndex));\n+        counterName \u003d StringInterner.weakIntern(unescape(counterName));\n \n         // Get the display name\n         String counterDisplayName \u003d\n-          getBlock(counterString, UNIT_OPEN, UNIT_CLOSE, counterIndex);\n-        counterDisplayName \u003d unescape(counterDisplayName);\n+            StringInterner.weakIntern(getBlock(counterString, UNIT_OPEN, UNIT_CLOSE, counterIndex));\n+        counterDisplayName \u003d StringInterner.weakIntern(unescape(counterDisplayName));\n \n         // Get the value\n         long value \u003d\n           Long.parseLong(getBlock(counterString, UNIT_OPEN, UNIT_CLOSE,\n                                   counterIndex));\n \n         // Add the counter\n         Counter counter \u003d group.findCounter(counterName);\n         counter.setDisplayName(counterDisplayName);\n         counter.increment(value);\n \n         // Get the next counter\n         counterString \u003d\n           getBlock(groupString, COUNTER_OPEN, COUNTER_CLOSE, groupIndex);\n       }\n \n       groupString \u003d getBlock(compactString, GROUP_OPEN, GROUP_CLOSE, index);\n     }\n     return counters;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  T parseEscapedCompactString(String compactString, T counters)\n      throws ParseException {\n    IntWritable index \u003d new IntWritable(0);\n\n    // Get the group to work on\n    String groupString \u003d\n      getBlock(compactString, GROUP_OPEN, GROUP_CLOSE, index);\n\n    while (groupString !\u003d null) {\n      IntWritable groupIndex \u003d new IntWritable(0);\n\n      // Get the actual name\n      String groupName \u003d\n          StringInterner.weakIntern(getBlock(groupString, UNIT_OPEN, UNIT_CLOSE, groupIndex));\n      groupName \u003d StringInterner.weakIntern(unescape(groupName));\n\n      // Get the display name\n      String groupDisplayName \u003d\n          StringInterner.weakIntern(getBlock(groupString, UNIT_OPEN, UNIT_CLOSE, groupIndex));\n      groupDisplayName \u003d StringInterner.weakIntern(unescape(groupDisplayName));\n\n      // Get the counters\n      G group \u003d counters.getGroup(groupName);\n      group.setDisplayName(groupDisplayName);\n\n      String counterString \u003d\n        getBlock(groupString, COUNTER_OPEN, COUNTER_CLOSE, groupIndex);\n\n      while (counterString !\u003d null) {\n        IntWritable counterIndex \u003d new IntWritable(0);\n\n        // Get the actual name\n        String counterName \u003d\n            StringInterner.weakIntern(getBlock(counterString, UNIT_OPEN, UNIT_CLOSE, counterIndex));\n        counterName \u003d StringInterner.weakIntern(unescape(counterName));\n\n        // Get the display name\n        String counterDisplayName \u003d\n            StringInterner.weakIntern(getBlock(counterString, UNIT_OPEN, UNIT_CLOSE, counterIndex));\n        counterDisplayName \u003d StringInterner.weakIntern(unescape(counterDisplayName));\n\n        // Get the value\n        long value \u003d\n          Long.parseLong(getBlock(counterString, UNIT_OPEN, UNIT_CLOSE,\n                                  counterIndex));\n\n        // Add the counter\n        Counter counter \u003d group.findCounter(counterName);\n        counter.setDisplayName(counterDisplayName);\n        counter.increment(value);\n\n        // Get the next counter\n        counterString \u003d\n          getBlock(groupString, COUNTER_OPEN, COUNTER_CLOSE, groupIndex);\n      }\n\n      groupString \u003d getBlock(compactString, GROUP_OPEN, GROUP_CLOSE, index);\n    }\n    return counters;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/util/CountersStrings.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  T parseEscapedCompactString(String compactString, T counters)\n      throws ParseException {\n    IntWritable index \u003d new IntWritable(0);\n\n    // Get the group to work on\n    String groupString \u003d\n      getBlock(compactString, GROUP_OPEN, GROUP_CLOSE, index);\n\n    while (groupString !\u003d null) {\n      IntWritable groupIndex \u003d new IntWritable(0);\n\n      // Get the actual name\n      String groupName \u003d\n        getBlock(groupString, UNIT_OPEN, UNIT_CLOSE, groupIndex);\n      groupName \u003d unescape(groupName);\n\n      // Get the display name\n      String groupDisplayName \u003d\n        getBlock(groupString, UNIT_OPEN, UNIT_CLOSE, groupIndex);\n      groupDisplayName \u003d unescape(groupDisplayName);\n\n      // Get the counters\n      G group \u003d counters.getGroup(groupName);\n      group.setDisplayName(groupDisplayName);\n\n      String counterString \u003d\n        getBlock(groupString, COUNTER_OPEN, COUNTER_CLOSE, groupIndex);\n\n      while (counterString !\u003d null) {\n        IntWritable counterIndex \u003d new IntWritable(0);\n\n        // Get the actual name\n        String counterName \u003d\n          getBlock(counterString, UNIT_OPEN, UNIT_CLOSE, counterIndex);\n        counterName \u003d unescape(counterName);\n\n        // Get the display name\n        String counterDisplayName \u003d\n          getBlock(counterString, UNIT_OPEN, UNIT_CLOSE, counterIndex);\n        counterDisplayName \u003d unescape(counterDisplayName);\n\n        // Get the value\n        long value \u003d\n          Long.parseLong(getBlock(counterString, UNIT_OPEN, UNIT_CLOSE,\n                                  counterIndex));\n\n        // Add the counter\n        Counter counter \u003d group.findCounter(counterName);\n        counter.setDisplayName(counterDisplayName);\n        counter.increment(value);\n\n        // Get the next counter\n        counterString \u003d\n          getBlock(groupString, COUNTER_OPEN, COUNTER_CLOSE, groupIndex);\n      }\n\n      groupString \u003d getBlock(compactString, GROUP_OPEN, GROUP_CLOSE, index);\n    }\n    return counters;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/util/CountersStrings.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/util/CountersStrings.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/util/CountersStrings.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  T parseEscapedCompactString(String compactString, T counters)\n      throws ParseException {\n    IntWritable index \u003d new IntWritable(0);\n\n    // Get the group to work on\n    String groupString \u003d\n      getBlock(compactString, GROUP_OPEN, GROUP_CLOSE, index);\n\n    while (groupString !\u003d null) {\n      IntWritable groupIndex \u003d new IntWritable(0);\n\n      // Get the actual name\n      String groupName \u003d\n        getBlock(groupString, UNIT_OPEN, UNIT_CLOSE, groupIndex);\n      groupName \u003d unescape(groupName);\n\n      // Get the display name\n      String groupDisplayName \u003d\n        getBlock(groupString, UNIT_OPEN, UNIT_CLOSE, groupIndex);\n      groupDisplayName \u003d unescape(groupDisplayName);\n\n      // Get the counters\n      G group \u003d counters.getGroup(groupName);\n      group.setDisplayName(groupDisplayName);\n\n      String counterString \u003d\n        getBlock(groupString, COUNTER_OPEN, COUNTER_CLOSE, groupIndex);\n\n      while (counterString !\u003d null) {\n        IntWritable counterIndex \u003d new IntWritable(0);\n\n        // Get the actual name\n        String counterName \u003d\n          getBlock(counterString, UNIT_OPEN, UNIT_CLOSE, counterIndex);\n        counterName \u003d unescape(counterName);\n\n        // Get the display name\n        String counterDisplayName \u003d\n          getBlock(counterString, UNIT_OPEN, UNIT_CLOSE, counterIndex);\n        counterDisplayName \u003d unescape(counterDisplayName);\n\n        // Get the value\n        long value \u003d\n          Long.parseLong(getBlock(counterString, UNIT_OPEN, UNIT_CLOSE,\n                                  counterIndex));\n\n        // Add the counter\n        Counter counter \u003d group.findCounter(counterName);\n        counter.setDisplayName(counterDisplayName);\n        counter.increment(value);\n\n        // Get the next counter\n        counterString \u003d\n          getBlock(groupString, COUNTER_OPEN, COUNTER_CLOSE, groupIndex);\n      }\n\n      groupString \u003d getBlock(compactString, GROUP_OPEN, GROUP_CLOSE, index);\n    }\n    return counters;\n  }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/util/CountersStrings.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/java/org/apache/hadoop/mapreduce/util/CountersStrings.java",
        "newPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/util/CountersStrings.java"
      }
    },
    "24676e8c2ef48e67265d33c053badb31aecad616": {
      "type": "Yintroduced",
      "commitMessage": " MAPREDUCE-901. Efficient framework counters. Contributed by Luke Lu.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1157290 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/08/11 4:25 PM",
      "commitName": "24676e8c2ef48e67265d33c053badb31aecad616",
      "commitAuthor": "Arun Murthy",
      "diff": "@@ -0,0 +1,60 @@\n+  T parseEscapedCompactString(String compactString, T counters)\n+      throws ParseException {\n+    IntWritable index \u003d new IntWritable(0);\n+\n+    // Get the group to work on\n+    String groupString \u003d\n+      getBlock(compactString, GROUP_OPEN, GROUP_CLOSE, index);\n+\n+    while (groupString !\u003d null) {\n+      IntWritable groupIndex \u003d new IntWritable(0);\n+\n+      // Get the actual name\n+      String groupName \u003d\n+        getBlock(groupString, UNIT_OPEN, UNIT_CLOSE, groupIndex);\n+      groupName \u003d unescape(groupName);\n+\n+      // Get the display name\n+      String groupDisplayName \u003d\n+        getBlock(groupString, UNIT_OPEN, UNIT_CLOSE, groupIndex);\n+      groupDisplayName \u003d unescape(groupDisplayName);\n+\n+      // Get the counters\n+      G group \u003d counters.getGroup(groupName);\n+      group.setDisplayName(groupDisplayName);\n+\n+      String counterString \u003d\n+        getBlock(groupString, COUNTER_OPEN, COUNTER_CLOSE, groupIndex);\n+\n+      while (counterString !\u003d null) {\n+        IntWritable counterIndex \u003d new IntWritable(0);\n+\n+        // Get the actual name\n+        String counterName \u003d\n+          getBlock(counterString, UNIT_OPEN, UNIT_CLOSE, counterIndex);\n+        counterName \u003d unescape(counterName);\n+\n+        // Get the display name\n+        String counterDisplayName \u003d\n+          getBlock(counterString, UNIT_OPEN, UNIT_CLOSE, counterIndex);\n+        counterDisplayName \u003d unescape(counterDisplayName);\n+\n+        // Get the value\n+        long value \u003d\n+          Long.parseLong(getBlock(counterString, UNIT_OPEN, UNIT_CLOSE,\n+                                  counterIndex));\n+\n+        // Add the counter\n+        Counter counter \u003d group.findCounter(counterName);\n+        counter.setDisplayName(counterDisplayName);\n+        counter.increment(value);\n+\n+        // Get the next counter\n+        counterString \u003d\n+          getBlock(groupString, COUNTER_OPEN, COUNTER_CLOSE, groupIndex);\n+      }\n+\n+      groupString \u003d getBlock(compactString, GROUP_OPEN, GROUP_CLOSE, index);\n+    }\n+    return counters;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  T parseEscapedCompactString(String compactString, T counters)\n      throws ParseException {\n    IntWritable index \u003d new IntWritable(0);\n\n    // Get the group to work on\n    String groupString \u003d\n      getBlock(compactString, GROUP_OPEN, GROUP_CLOSE, index);\n\n    while (groupString !\u003d null) {\n      IntWritable groupIndex \u003d new IntWritable(0);\n\n      // Get the actual name\n      String groupName \u003d\n        getBlock(groupString, UNIT_OPEN, UNIT_CLOSE, groupIndex);\n      groupName \u003d unescape(groupName);\n\n      // Get the display name\n      String groupDisplayName \u003d\n        getBlock(groupString, UNIT_OPEN, UNIT_CLOSE, groupIndex);\n      groupDisplayName \u003d unescape(groupDisplayName);\n\n      // Get the counters\n      G group \u003d counters.getGroup(groupName);\n      group.setDisplayName(groupDisplayName);\n\n      String counterString \u003d\n        getBlock(groupString, COUNTER_OPEN, COUNTER_CLOSE, groupIndex);\n\n      while (counterString !\u003d null) {\n        IntWritable counterIndex \u003d new IntWritable(0);\n\n        // Get the actual name\n        String counterName \u003d\n          getBlock(counterString, UNIT_OPEN, UNIT_CLOSE, counterIndex);\n        counterName \u003d unescape(counterName);\n\n        // Get the display name\n        String counterDisplayName \u003d\n          getBlock(counterString, UNIT_OPEN, UNIT_CLOSE, counterIndex);\n        counterDisplayName \u003d unescape(counterDisplayName);\n\n        // Get the value\n        long value \u003d\n          Long.parseLong(getBlock(counterString, UNIT_OPEN, UNIT_CLOSE,\n                                  counterIndex));\n\n        // Add the counter\n        Counter counter \u003d group.findCounter(counterName);\n        counter.setDisplayName(counterDisplayName);\n        counter.increment(value);\n\n        // Get the next counter\n        counterString \u003d\n          getBlock(groupString, COUNTER_OPEN, COUNTER_CLOSE, groupIndex);\n      }\n\n      groupString \u003d getBlock(compactString, GROUP_OPEN, GROUP_CLOSE, index);\n    }\n    return counters;\n  }",
      "path": "mapreduce/src/java/org/apache/hadoop/mapreduce/util/CountersStrings.java"
    }
  }
}