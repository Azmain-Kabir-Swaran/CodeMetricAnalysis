{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DistributedCache.java",
  "functionName": "addFileToClassPath",
  "functionId": "addFileToClassPath___file-Path__conf-Configuration__fs-FileSystem__addToCache-boolean",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/filecache/DistributedCache.java",
  "functionStartLine": 358,
  "functionEndLine": 368,
  "numCommitsSeen": 19,
  "timeTaken": 2811,
  "changeHistory": [
    "605b4b61364781fc99ed27035c793153a20d8f71",
    "c27de4bd0b42262a9dbf56830be77fe382f82fd7"
  ],
  "changeHistoryShort": {
    "605b4b61364781fc99ed27035c793153a20d8f71": "Ymultichange(Yparameterchange,Yexceptionschange,Ybodychange)",
    "c27de4bd0b42262a9dbf56830be77fe382f82fd7": "Yintroduced"
  },
  "changeHistoryDetails": {
    "605b4b61364781fc99ed27035c793153a20d8f71": {
      "type": "Ymultichange(Yparameterchange,Yexceptionschange,Ybodychange)",
      "commitMessage": "MAPREDUCE-6719. The list of -libjars archives should be replaced with a wildcard in the distributed cache to reduce the application footprint in the state store (Daniel Templeton via sjlee)\n",
      "commitDate": "21/06/16 11:25 AM",
      "commitName": "605b4b61364781fc99ed27035c793153a20d8f71",
      "commitAuthor": "Sangjin Lee",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "MAPREDUCE-6719. The list of -libjars archives should be replaced with a wildcard in the distributed cache to reduce the application footprint in the state store (Daniel Templeton via sjlee)\n",
          "commitDate": "21/06/16 11:25 AM",
          "commitName": "605b4b61364781fc99ed27035c793153a20d8f71",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "03/03/15 1:06 AM",
          "commitNameOld": "9ae7f9eb7baeb244e1b95aabc93ad8124870b9a9",
          "commitAuthorOld": "Tsuyoshi Ozawa",
          "daysBetweenCommits": 476.39,
          "commitsBetweenForRepo": 3558,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,11 @@\n-  public static void addFileToClassPath\n-           (Path file, Configuration conf, FileSystem fs)\n-        throws IOException {\n+  public static void addFileToClassPath(Path file, Configuration conf,\n+      FileSystem fs, boolean addToCache) {\n     String classpath \u003d conf.get(MRJobConfig.CLASSPATH_FILES);\n     conf.set(MRJobConfig.CLASSPATH_FILES, classpath \u003d\u003d null ? file.toString()\n              : classpath + \",\" + file.toString());\n-    URI uri \u003d fs.makeQualified(file).toUri();\n-    addCacheFile(uri, conf);\n+\n+    if (addToCache) {\n+      URI uri \u003d fs.makeQualified(file).toUri();\n+      addCacheFile(uri, conf);\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void addFileToClassPath(Path file, Configuration conf,\n      FileSystem fs, boolean addToCache) {\n    String classpath \u003d conf.get(MRJobConfig.CLASSPATH_FILES);\n    conf.set(MRJobConfig.CLASSPATH_FILES, classpath \u003d\u003d null ? file.toString()\n             : classpath + \",\" + file.toString());\n\n    if (addToCache) {\n      URI uri \u003d fs.makeQualified(file).toUri();\n      addCacheFile(uri, conf);\n    }\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/filecache/DistributedCache.java",
          "extendedDetails": {
            "oldValue": "[file-Path, conf-Configuration, fs-FileSystem]",
            "newValue": "[file-Path, conf-Configuration, fs-FileSystem, addToCache-boolean]"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "MAPREDUCE-6719. The list of -libjars archives should be replaced with a wildcard in the distributed cache to reduce the application footprint in the state store (Daniel Templeton via sjlee)\n",
          "commitDate": "21/06/16 11:25 AM",
          "commitName": "605b4b61364781fc99ed27035c793153a20d8f71",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "03/03/15 1:06 AM",
          "commitNameOld": "9ae7f9eb7baeb244e1b95aabc93ad8124870b9a9",
          "commitAuthorOld": "Tsuyoshi Ozawa",
          "daysBetweenCommits": 476.39,
          "commitsBetweenForRepo": 3558,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,11 @@\n-  public static void addFileToClassPath\n-           (Path file, Configuration conf, FileSystem fs)\n-        throws IOException {\n+  public static void addFileToClassPath(Path file, Configuration conf,\n+      FileSystem fs, boolean addToCache) {\n     String classpath \u003d conf.get(MRJobConfig.CLASSPATH_FILES);\n     conf.set(MRJobConfig.CLASSPATH_FILES, classpath \u003d\u003d null ? file.toString()\n              : classpath + \",\" + file.toString());\n-    URI uri \u003d fs.makeQualified(file).toUri();\n-    addCacheFile(uri, conf);\n+\n+    if (addToCache) {\n+      URI uri \u003d fs.makeQualified(file).toUri();\n+      addCacheFile(uri, conf);\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void addFileToClassPath(Path file, Configuration conf,\n      FileSystem fs, boolean addToCache) {\n    String classpath \u003d conf.get(MRJobConfig.CLASSPATH_FILES);\n    conf.set(MRJobConfig.CLASSPATH_FILES, classpath \u003d\u003d null ? file.toString()\n             : classpath + \",\" + file.toString());\n\n    if (addToCache) {\n      URI uri \u003d fs.makeQualified(file).toUri();\n      addCacheFile(uri, conf);\n    }\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/filecache/DistributedCache.java",
          "extendedDetails": {
            "oldValue": "[IOException]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-6719. The list of -libjars archives should be replaced with a wildcard in the distributed cache to reduce the application footprint in the state store (Daniel Templeton via sjlee)\n",
          "commitDate": "21/06/16 11:25 AM",
          "commitName": "605b4b61364781fc99ed27035c793153a20d8f71",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "03/03/15 1:06 AM",
          "commitNameOld": "9ae7f9eb7baeb244e1b95aabc93ad8124870b9a9",
          "commitAuthorOld": "Tsuyoshi Ozawa",
          "daysBetweenCommits": 476.39,
          "commitsBetweenForRepo": 3558,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,11 @@\n-  public static void addFileToClassPath\n-           (Path file, Configuration conf, FileSystem fs)\n-        throws IOException {\n+  public static void addFileToClassPath(Path file, Configuration conf,\n+      FileSystem fs, boolean addToCache) {\n     String classpath \u003d conf.get(MRJobConfig.CLASSPATH_FILES);\n     conf.set(MRJobConfig.CLASSPATH_FILES, classpath \u003d\u003d null ? file.toString()\n              : classpath + \",\" + file.toString());\n-    URI uri \u003d fs.makeQualified(file).toUri();\n-    addCacheFile(uri, conf);\n+\n+    if (addToCache) {\n+      URI uri \u003d fs.makeQualified(file).toUri();\n+      addCacheFile(uri, conf);\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void addFileToClassPath(Path file, Configuration conf,\n      FileSystem fs, boolean addToCache) {\n    String classpath \u003d conf.get(MRJobConfig.CLASSPATH_FILES);\n    conf.set(MRJobConfig.CLASSPATH_FILES, classpath \u003d\u003d null ? file.toString()\n             : classpath + \",\" + file.toString());\n\n    if (addToCache) {\n      URI uri \u003d fs.makeQualified(file).toUri();\n      addCacheFile(uri, conf);\n    }\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/filecache/DistributedCache.java",
          "extendedDetails": {}
        }
      ]
    },
    "c27de4bd0b42262a9dbf56830be77fe382f82fd7": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-1744. DistributedCache creates its own FileSytem instance when adding a file/archive to the path. (Dick King via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1227238 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/01/12 9:51 AM",
      "commitName": "c27de4bd0b42262a9dbf56830be77fe382f82fd7",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,9 @@\n+  public static void addFileToClassPath\n+           (Path file, Configuration conf, FileSystem fs)\n+        throws IOException {\n+    String classpath \u003d conf.get(MRJobConfig.CLASSPATH_FILES);\n+    conf.set(MRJobConfig.CLASSPATH_FILES, classpath \u003d\u003d null ? file.toString()\n+             : classpath + \",\" + file.toString());\n+    URI uri \u003d fs.makeQualified(file).toUri();\n+    addCacheFile(uri, conf);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static void addFileToClassPath\n           (Path file, Configuration conf, FileSystem fs)\n        throws IOException {\n    String classpath \u003d conf.get(MRJobConfig.CLASSPATH_FILES);\n    conf.set(MRJobConfig.CLASSPATH_FILES, classpath \u003d\u003d null ? file.toString()\n             : classpath + \",\" + file.toString());\n    URI uri \u003d fs.makeQualified(file).toUri();\n    addCacheFile(uri, conf);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/filecache/DistributedCache.java"
    }
  }
}