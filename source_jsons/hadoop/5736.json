{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSDirMkdirOp.java",
  "functionName": "createSingleDirectory",
  "functionId": "createSingleDirectory___fsd-FSDirectory__existing-INodesInPath__localName-byte[]__perm-PermissionStatus",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirMkdirOp.java",
  "functionStartLine": 165,
  "functionEndLine": 186,
  "numCommitsSeen": 28,
  "timeTaken": 3327,
  "changeHistory": [
    "8b7adf4ddf420a93c586c4b2eac27dd0f649682e",
    "6ae39199dac6ac7be6802b31452552c76da16e24",
    "a5fb298e56220a35d61b8d2bda716d8fb8ef8bb7",
    "5caebbae8c2fc9ba2e32384657aee21641a1a6d0"
  ],
  "changeHistoryShort": {
    "8b7adf4ddf420a93c586c4b2eac27dd0f649682e": "Ymultichange(Yparameterchange,Ybodychange)",
    "6ae39199dac6ac7be6802b31452552c76da16e24": "Ybodychange",
    "a5fb298e56220a35d61b8d2bda716d8fb8ef8bb7": "Ybodychange",
    "5caebbae8c2fc9ba2e32384657aee21641a1a6d0": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8b7adf4ddf420a93c586c4b2eac27dd0f649682e": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-10768. Optimize mkdir ops. Contributed by Daryn Sharp.\n",
      "commitDate": "26/08/16 1:39 PM",
      "commitName": "8b7adf4ddf420a93c586c4b2eac27dd0f649682e",
      "commitAuthor": "Kihwal Lee",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-10768. Optimize mkdir ops. Contributed by Daryn Sharp.\n",
          "commitDate": "26/08/16 1:39 PM",
          "commitName": "8b7adf4ddf420a93c586c4b2eac27dd0f649682e",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "17/08/16 1:53 PM",
          "commitNameOld": "869393643de23dcb010cc33091c8eb398de0fd6c",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 8.99,
          "commitsBetweenForRepo": 69,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,22 @@\n   private static INodesInPath createSingleDirectory(FSDirectory fsd,\n-      INodesInPath existing, String localName, PermissionStatus perm)\n+      INodesInPath existing, byte[] localName, PermissionStatus perm)\n       throws IOException {\n     assert fsd.hasWriteLock();\n     existing \u003d unprotectedMkdir(fsd, fsd.allocateNewInodeId(), existing,\n-        DFSUtil.string2Bytes(localName), perm, null, now());\n+        localName, perm, null, now());\n     if (existing \u003d\u003d null) {\n       return null;\n     }\n \n     final INode newNode \u003d existing.getLastINode();\n     // Directory creation also count towards FilesCreated\n     // to match count of FilesDeleted metric.\n     NameNode.getNameNodeMetrics().incrFilesCreated();\n \n     String cur \u003d existing.getPath();\n     fsd.getEditLog().logMkDir(cur, newNode);\n     if (NameNode.stateChangeLog.isDebugEnabled()) {\n       NameNode.stateChangeLog.debug(\"mkdirs: created directory \" + cur);\n     }\n     return existing;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static INodesInPath createSingleDirectory(FSDirectory fsd,\n      INodesInPath existing, byte[] localName, PermissionStatus perm)\n      throws IOException {\n    assert fsd.hasWriteLock();\n    existing \u003d unprotectedMkdir(fsd, fsd.allocateNewInodeId(), existing,\n        localName, perm, null, now());\n    if (existing \u003d\u003d null) {\n      return null;\n    }\n\n    final INode newNode \u003d existing.getLastINode();\n    // Directory creation also count towards FilesCreated\n    // to match count of FilesDeleted metric.\n    NameNode.getNameNodeMetrics().incrFilesCreated();\n\n    String cur \u003d existing.getPath();\n    fsd.getEditLog().logMkDir(cur, newNode);\n    if (NameNode.stateChangeLog.isDebugEnabled()) {\n      NameNode.stateChangeLog.debug(\"mkdirs: created directory \" + cur);\n    }\n    return existing;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirMkdirOp.java",
          "extendedDetails": {
            "oldValue": "[fsd-FSDirectory, existing-INodesInPath, localName-String, perm-PermissionStatus]",
            "newValue": "[fsd-FSDirectory, existing-INodesInPath, localName-byte[], perm-PermissionStatus]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-10768. Optimize mkdir ops. Contributed by Daryn Sharp.\n",
          "commitDate": "26/08/16 1:39 PM",
          "commitName": "8b7adf4ddf420a93c586c4b2eac27dd0f649682e",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "17/08/16 1:53 PM",
          "commitNameOld": "869393643de23dcb010cc33091c8eb398de0fd6c",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 8.99,
          "commitsBetweenForRepo": 69,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,22 @@\n   private static INodesInPath createSingleDirectory(FSDirectory fsd,\n-      INodesInPath existing, String localName, PermissionStatus perm)\n+      INodesInPath existing, byte[] localName, PermissionStatus perm)\n       throws IOException {\n     assert fsd.hasWriteLock();\n     existing \u003d unprotectedMkdir(fsd, fsd.allocateNewInodeId(), existing,\n-        DFSUtil.string2Bytes(localName), perm, null, now());\n+        localName, perm, null, now());\n     if (existing \u003d\u003d null) {\n       return null;\n     }\n \n     final INode newNode \u003d existing.getLastINode();\n     // Directory creation also count towards FilesCreated\n     // to match count of FilesDeleted metric.\n     NameNode.getNameNodeMetrics().incrFilesCreated();\n \n     String cur \u003d existing.getPath();\n     fsd.getEditLog().logMkDir(cur, newNode);\n     if (NameNode.stateChangeLog.isDebugEnabled()) {\n       NameNode.stateChangeLog.debug(\"mkdirs: created directory \" + cur);\n     }\n     return existing;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static INodesInPath createSingleDirectory(FSDirectory fsd,\n      INodesInPath existing, byte[] localName, PermissionStatus perm)\n      throws IOException {\n    assert fsd.hasWriteLock();\n    existing \u003d unprotectedMkdir(fsd, fsd.allocateNewInodeId(), existing,\n        localName, perm, null, now());\n    if (existing \u003d\u003d null) {\n      return null;\n    }\n\n    final INode newNode \u003d existing.getLastINode();\n    // Directory creation also count towards FilesCreated\n    // to match count of FilesDeleted metric.\n    NameNode.getNameNodeMetrics().incrFilesCreated();\n\n    String cur \u003d existing.getPath();\n    fsd.getEditLog().logMkDir(cur, newNode);\n    if (NameNode.stateChangeLog.isDebugEnabled()) {\n      NameNode.stateChangeLog.debug(\"mkdirs: created directory \" + cur);\n    }\n    return existing;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirMkdirOp.java",
          "extendedDetails": {}
        }
      ]
    },
    "6ae39199dac6ac7be6802b31452552c76da16e24": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10662. Optimize UTF8 string/byte conversions. Contributed by Daryn Sharp.\n",
      "commitDate": "04/08/16 7:07 AM",
      "commitName": "6ae39199dac6ac7be6802b31452552c76da16e24",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "02/08/16 1:07 AM",
      "commitNameOld": "a5fb298e56220a35d61b8d2bda716d8fb8ef8bb7",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 2.25,
      "commitsBetweenForRepo": 28,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n   private static INodesInPath createSingleDirectory(FSDirectory fsd,\n       INodesInPath existing, String localName, PermissionStatus perm)\n       throws IOException {\n     assert fsd.hasWriteLock();\n     existing \u003d unprotectedMkdir(fsd, fsd.allocateNewInodeId(), existing,\n-        localName.getBytes(StandardCharsets.UTF_8), perm, null, now());\n+        DFSUtil.string2Bytes(localName), perm, null, now());\n     if (existing \u003d\u003d null) {\n       return null;\n     }\n \n     final INode newNode \u003d existing.getLastINode();\n     // Directory creation also count towards FilesCreated\n     // to match count of FilesDeleted metric.\n     NameNode.getNameNodeMetrics().incrFilesCreated();\n \n     String cur \u003d existing.getPath();\n     fsd.getEditLog().logMkDir(cur, newNode);\n     if (NameNode.stateChangeLog.isDebugEnabled()) {\n       NameNode.stateChangeLog.debug(\"mkdirs: created directory \" + cur);\n     }\n     return existing;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static INodesInPath createSingleDirectory(FSDirectory fsd,\n      INodesInPath existing, String localName, PermissionStatus perm)\n      throws IOException {\n    assert fsd.hasWriteLock();\n    existing \u003d unprotectedMkdir(fsd, fsd.allocateNewInodeId(), existing,\n        DFSUtil.string2Bytes(localName), perm, null, now());\n    if (existing \u003d\u003d null) {\n      return null;\n    }\n\n    final INode newNode \u003d existing.getLastINode();\n    // Directory creation also count towards FilesCreated\n    // to match count of FilesDeleted metric.\n    NameNode.getNameNodeMetrics().incrFilesCreated();\n\n    String cur \u003d existing.getPath();\n    fsd.getEditLog().logMkDir(cur, newNode);\n    if (NameNode.stateChangeLog.isDebugEnabled()) {\n      NameNode.stateChangeLog.debug(\"mkdirs: created directory \" + cur);\n    }\n    return existing;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirMkdirOp.java",
      "extendedDetails": {}
    },
    "a5fb298e56220a35d61b8d2bda716d8fb8ef8bb7": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10707. Replace org.apache.commons.io.Charsets with java.nio.charset.StandardCharsets. Contributed by Vincent Poon.\n",
      "commitDate": "02/08/16 1:07 AM",
      "commitName": "a5fb298e56220a35d61b8d2bda716d8fb8ef8bb7",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "22/12/14 11:19 PM",
      "commitNameOld": "5caebbae8c2fc9ba2e32384657aee21641a1a6d0",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 588.03,
      "commitsBetweenForRepo": 4488,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n   private static INodesInPath createSingleDirectory(FSDirectory fsd,\n       INodesInPath existing, String localName, PermissionStatus perm)\n       throws IOException {\n     assert fsd.hasWriteLock();\n     existing \u003d unprotectedMkdir(fsd, fsd.allocateNewInodeId(), existing,\n-        localName.getBytes(Charsets.UTF_8), perm, null, now());\n+        localName.getBytes(StandardCharsets.UTF_8), perm, null, now());\n     if (existing \u003d\u003d null) {\n       return null;\n     }\n \n     final INode newNode \u003d existing.getLastINode();\n     // Directory creation also count towards FilesCreated\n     // to match count of FilesDeleted metric.\n     NameNode.getNameNodeMetrics().incrFilesCreated();\n \n     String cur \u003d existing.getPath();\n     fsd.getEditLog().logMkDir(cur, newNode);\n     if (NameNode.stateChangeLog.isDebugEnabled()) {\n       NameNode.stateChangeLog.debug(\"mkdirs: created directory \" + cur);\n     }\n     return existing;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static INodesInPath createSingleDirectory(FSDirectory fsd,\n      INodesInPath existing, String localName, PermissionStatus perm)\n      throws IOException {\n    assert fsd.hasWriteLock();\n    existing \u003d unprotectedMkdir(fsd, fsd.allocateNewInodeId(), existing,\n        localName.getBytes(StandardCharsets.UTF_8), perm, null, now());\n    if (existing \u003d\u003d null) {\n      return null;\n    }\n\n    final INode newNode \u003d existing.getLastINode();\n    // Directory creation also count towards FilesCreated\n    // to match count of FilesDeleted metric.\n    NameNode.getNameNodeMetrics().incrFilesCreated();\n\n    String cur \u003d existing.getPath();\n    fsd.getEditLog().logMkDir(cur, newNode);\n    if (NameNode.stateChangeLog.isDebugEnabled()) {\n      NameNode.stateChangeLog.debug(\"mkdirs: created directory \" + cur);\n    }\n    return existing;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirMkdirOp.java",
      "extendedDetails": {}
    },
    "5caebbae8c2fc9ba2e32384657aee21641a1a6d0": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-7484. Make FSDirectory#addINode take existing INodes as its parameter. Contributed by Jing Zhao.\n",
      "commitDate": "22/12/14 11:19 PM",
      "commitName": "5caebbae8c2fc9ba2e32384657aee21641a1a6d0",
      "commitAuthor": "Jing Zhao",
      "diff": "@@ -0,0 +1,22 @@\n+  private static INodesInPath createSingleDirectory(FSDirectory fsd,\n+      INodesInPath existing, String localName, PermissionStatus perm)\n+      throws IOException {\n+    assert fsd.hasWriteLock();\n+    existing \u003d unprotectedMkdir(fsd, fsd.allocateNewInodeId(), existing,\n+        localName.getBytes(Charsets.UTF_8), perm, null, now());\n+    if (existing \u003d\u003d null) {\n+      return null;\n+    }\n+\n+    final INode newNode \u003d existing.getLastINode();\n+    // Directory creation also count towards FilesCreated\n+    // to match count of FilesDeleted metric.\n+    NameNode.getNameNodeMetrics().incrFilesCreated();\n+\n+    String cur \u003d existing.getPath();\n+    fsd.getEditLog().logMkDir(cur, newNode);\n+    if (NameNode.stateChangeLog.isDebugEnabled()) {\n+      NameNode.stateChangeLog.debug(\"mkdirs: created directory \" + cur);\n+    }\n+    return existing;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static INodesInPath createSingleDirectory(FSDirectory fsd,\n      INodesInPath existing, String localName, PermissionStatus perm)\n      throws IOException {\n    assert fsd.hasWriteLock();\n    existing \u003d unprotectedMkdir(fsd, fsd.allocateNewInodeId(), existing,\n        localName.getBytes(Charsets.UTF_8), perm, null, now());\n    if (existing \u003d\u003d null) {\n      return null;\n    }\n\n    final INode newNode \u003d existing.getLastINode();\n    // Directory creation also count towards FilesCreated\n    // to match count of FilesDeleted metric.\n    NameNode.getNameNodeMetrics().incrFilesCreated();\n\n    String cur \u003d existing.getPath();\n    fsd.getEditLog().logMkDir(cur, newNode);\n    if (NameNode.stateChangeLog.isDebugEnabled()) {\n      NameNode.stateChangeLog.debug(\"mkdirs: created directory \" + cur);\n    }\n    return existing;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirMkdirOp.java"
    }
  }
}