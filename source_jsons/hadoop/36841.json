{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMWebServices.java",
  "functionName": "createNewReservation",
  "functionId": "createNewReservation___hsr-HttpServletRequest(annotations-@Context)",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
  "functionStartLine": 2057,
  "functionEndLine": 2065,
  "numCommitsSeen": 106,
  "timeTaken": 3522,
  "changeHistory": [
    "d76fbbc9b82e720d7d5188f9ae2f56a8d78f3a98",
    "013532a95e63d7c53e601be530021d6d5a15ab7f"
  ],
  "changeHistoryShort": {
    "d76fbbc9b82e720d7d5188f9ae2f56a8d78f3a98": "Ybodychange",
    "013532a95e63d7c53e601be530021d6d5a15ab7f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d76fbbc9b82e720d7d5188f9ae2f56a8d78f3a98": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8249. Fixed few REST APIs in RMWebServices to have static-user check. Contributed by Sunil Govindan.\n",
      "commitDate": "10/05/18 7:05 PM",
      "commitName": "d76fbbc9b82e720d7d5188f9ae2f56a8d78f3a98",
      "commitAuthor": "Vinod Kumar Vavilapalli (I am also known as @tshooter.)",
      "commitDateOld": "27/04/18 10:28 AM",
      "commitNameOld": "ef3ecc308dbea41c6a88bd4d16739c7bbc10cdda",
      "commitAuthorOld": "Rohith Sharma K S",
      "daysBetweenCommits": 13.36,
      "commitsBetweenForRepo": 87,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,9 @@\n   public Response createNewReservation(@Context HttpServletRequest hsr)\n       throws AuthorizationException, IOException, InterruptedException {\n-    init();\n     UserGroupInformation callerUGI \u003d getCallerUserGroupInformation(hsr, true);\n-    if (callerUGI \u003d\u003d null) {\n-      throw new AuthorizationException(\n-          \"Unable to obtain user name, \" + \"user not authenticated\");\n-    }\n-    if (UserGroupInformation.isSecurityEnabled() \u0026\u0026 isStaticUser(callerUGI)) {\n-      String msg \u003d \"The default static user cannot carry out this operation.\";\n-      return Response.status(Status.FORBIDDEN).entity(msg).build();\n-    }\n+    initForWritableEndpoints(callerUGI, false);\n \n     NewReservation reservationId \u003d createNewReservation();\n     return Response.status(Status.OK).entity(reservationId).build();\n \n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Response createNewReservation(@Context HttpServletRequest hsr)\n      throws AuthorizationException, IOException, InterruptedException {\n    UserGroupInformation callerUGI \u003d getCallerUserGroupInformation(hsr, true);\n    initForWritableEndpoints(callerUGI, false);\n\n    NewReservation reservationId \u003d createNewReservation();\n    return Response.status(Status.OK).entity(reservationId).build();\n\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
      "extendedDetails": {}
    },
    "013532a95e63d7c53e601be530021d6d5a15ab7f": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4957. Add getNewReservation in ApplicationClientProtocol (Sean Po via curino)\n",
      "commitDate": "25/05/16 4:55 PM",
      "commitName": "013532a95e63d7c53e601be530021d6d5a15ab7f",
      "commitAuthor": "Carlo Curino",
      "diff": "@@ -0,0 +1,17 @@\n+  public Response createNewReservation(@Context HttpServletRequest hsr)\n+    throws AuthorizationException, IOException, InterruptedException {\n+    init();\n+    UserGroupInformation callerUGI \u003d getCallerUserGroupInformation(hsr, true);\n+    if (callerUGI \u003d\u003d null) {\n+      throw new AuthorizationException(\"Unable to obtain user name, \"\n+        + \"user not authenticated\");\n+    }\n+    if (UserGroupInformation.isSecurityEnabled() \u0026\u0026 isStaticUser(callerUGI)) {\n+      String msg \u003d \"The default static user cannot carry out this operation.\";\n+      return Response.status(Status.FORBIDDEN).entity(msg).build();\n+    }\n+\n+    NewReservation reservationId \u003d createNewReservation();\n+    return Response.status(Status.OK).entity(reservationId).build();\n+\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Response createNewReservation(@Context HttpServletRequest hsr)\n    throws AuthorizationException, IOException, InterruptedException {\n    init();\n    UserGroupInformation callerUGI \u003d getCallerUserGroupInformation(hsr, true);\n    if (callerUGI \u003d\u003d null) {\n      throw new AuthorizationException(\"Unable to obtain user name, \"\n        + \"user not authenticated\");\n    }\n    if (UserGroupInformation.isSecurityEnabled() \u0026\u0026 isStaticUser(callerUGI)) {\n      String msg \u003d \"The default static user cannot carry out this operation.\";\n      return Response.status(Status.FORBIDDEN).entity(msg).build();\n    }\n\n    NewReservation reservationId \u003d createNewReservation();\n    return Response.status(Status.OK).entity(reservationId).build();\n\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java"
    }
  }
}