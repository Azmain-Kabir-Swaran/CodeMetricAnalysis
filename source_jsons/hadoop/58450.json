{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NodeLabelUtil.java",
  "functionName": "validateNodeAttributes",
  "functionId": "validateNodeAttributes___attributeSet-Set__NodeAttribute__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/nodelabels/NodeLabelUtil.java",
  "functionStartLine": 139,
  "functionEndLine": 159,
  "numCommitsSeen": 6,
  "timeTaken": 1432,
  "changeHistory": [
    "f659485ee83f3f34e3717631983adfc8fa1e53dc",
    "8cf6a9a2bde9d4ccad95a514885634792889ec7f",
    "ffcabd24c33fc8c663cc75b57d7562db4c199713"
  ],
  "changeHistoryShort": {
    "f659485ee83f3f34e3717631983adfc8fa1e53dc": "Ybodychange",
    "8cf6a9a2bde9d4ccad95a514885634792889ec7f": "Ybodychange",
    "ffcabd24c33fc8c663cc75b57d7562db4c199713": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f659485ee83f3f34e3717631983adfc8fa1e53dc": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8925. Updating distributed node attributes only when necessary. Contributed by Tao Yang.\n",
      "commitDate": "20/12/18 6:56 PM",
      "commitName": "f659485ee83f3f34e3717631983adfc8fa1e53dc",
      "commitAuthor": "Weiwei Yang",
      "commitDateOld": "12/09/18 3:31 AM",
      "commitNameOld": "8c947398ab2de642cb49a59e5e9508d196d4bc30",
      "commitAuthorOld": "Naganarasimha",
      "daysBetweenCommits": 99.68,
      "commitsBetweenForRepo": 846,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,21 @@\n   public static void validateNodeAttributes(Set\u003cNodeAttribute\u003e attributeSet)\n       throws IOException {\n     if (attributeSet !\u003d null \u0026\u0026 !attributeSet.isEmpty()) {\n       for (NodeAttribute nodeAttribute : attributeSet) {\n         NodeAttributeKey attributeKey \u003d nodeAttribute.getAttributeKey();\n         if (attributeKey \u003d\u003d null) {\n           throw new IOException(\"AttributeKey  must be set\");\n         }\n         String prefix \u003d attributeKey.getAttributePrefix();\n         if (Strings.isNullOrEmpty(prefix)) {\n           throw new IOException(\"Attribute prefix must be set\");\n         }\n         // Verify attribute prefix format.\n         checkAndThrowAttributePrefix(prefix);\n         // Verify attribute name format.\n-        checkAndThrowLabelName(attributeKey.getAttributeName());\n+        checkAndThrowAttributeName(attributeKey.getAttributeName());\n+        // Verify attribute value format.\n+        checkAndThrowAttributeValue(nodeAttribute.getAttributeValue());\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void validateNodeAttributes(Set\u003cNodeAttribute\u003e attributeSet)\n      throws IOException {\n    if (attributeSet !\u003d null \u0026\u0026 !attributeSet.isEmpty()) {\n      for (NodeAttribute nodeAttribute : attributeSet) {\n        NodeAttributeKey attributeKey \u003d nodeAttribute.getAttributeKey();\n        if (attributeKey \u003d\u003d null) {\n          throw new IOException(\"AttributeKey  must be set\");\n        }\n        String prefix \u003d attributeKey.getAttributePrefix();\n        if (Strings.isNullOrEmpty(prefix)) {\n          throw new IOException(\"Attribute prefix must be set\");\n        }\n        // Verify attribute prefix format.\n        checkAndThrowAttributePrefix(prefix);\n        // Verify attribute name format.\n        checkAndThrowAttributeName(attributeKey.getAttributeName());\n        // Verify attribute value format.\n        checkAndThrowAttributeValue(nodeAttribute.getAttributeValue());\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/nodelabels/NodeLabelUtil.java",
      "extendedDetails": {}
    },
    "8cf6a9a2bde9d4ccad95a514885634792889ec7f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7892. Revisit NodeAttribute class structure. Contributed by  Naganarasimha G R.\n",
      "commitDate": "12/09/18 3:31 AM",
      "commitName": "8cf6a9a2bde9d4ccad95a514885634792889ec7f",
      "commitAuthor": "bibinchundatt",
      "commitDateOld": "12/09/18 3:31 AM",
      "commitNameOld": "3b3b6efe2103244febfe6b4f61989e92bd7bb08a",
      "commitAuthorOld": "Naganarasimha",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,19 @@\n   public static void validateNodeAttributes(Set\u003cNodeAttribute\u003e attributeSet)\n       throws IOException {\n     if (attributeSet !\u003d null \u0026\u0026 !attributeSet.isEmpty()) {\n       for (NodeAttribute nodeAttribute : attributeSet) {\n-        String prefix \u003d nodeAttribute.getAttributePrefix();\n+        NodeAttributeKey attributeKey \u003d nodeAttribute.getAttributeKey();\n+        if (attributeKey \u003d\u003d null) {\n+          throw new IOException(\"AttributeKey  must be set\");\n+        }\n+        String prefix \u003d attributeKey.getAttributePrefix();\n         if (Strings.isNullOrEmpty(prefix)) {\n           throw new IOException(\"Attribute prefix must be set\");\n         }\n         // Verify attribute prefix format.\n         checkAndThrowAttributePrefix(prefix);\n         // Verify attribute name format.\n-        checkAndThrowLabelName(nodeAttribute.getAttributeName());\n+        checkAndThrowLabelName(attributeKey.getAttributeName());\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void validateNodeAttributes(Set\u003cNodeAttribute\u003e attributeSet)\n      throws IOException {\n    if (attributeSet !\u003d null \u0026\u0026 !attributeSet.isEmpty()) {\n      for (NodeAttribute nodeAttribute : attributeSet) {\n        NodeAttributeKey attributeKey \u003d nodeAttribute.getAttributeKey();\n        if (attributeKey \u003d\u003d null) {\n          throw new IOException(\"AttributeKey  must be set\");\n        }\n        String prefix \u003d attributeKey.getAttributePrefix();\n        if (Strings.isNullOrEmpty(prefix)) {\n          throw new IOException(\"Attribute prefix must be set\");\n        }\n        // Verify attribute prefix format.\n        checkAndThrowAttributePrefix(prefix);\n        // Verify attribute name format.\n        checkAndThrowLabelName(attributeKey.getAttributeName());\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/nodelabels/NodeLabelUtil.java",
      "extendedDetails": {}
    },
    "ffcabd24c33fc8c663cc75b57d7562db4c199713": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7856. Validate Node Attributes from NM. Contributed by Weiwei Yang.\n",
      "commitDate": "12/09/18 3:31 AM",
      "commitName": "ffcabd24c33fc8c663cc75b57d7562db4c199713",
      "commitAuthor": "Sunil G",
      "diff": "@@ -0,0 +1,15 @@\n+  public static void validateNodeAttributes(Set\u003cNodeAttribute\u003e attributeSet)\n+      throws IOException {\n+    if (attributeSet !\u003d null \u0026\u0026 !attributeSet.isEmpty()) {\n+      for (NodeAttribute nodeAttribute : attributeSet) {\n+        String prefix \u003d nodeAttribute.getAttributePrefix();\n+        if (Strings.isNullOrEmpty(prefix)) {\n+          throw new IOException(\"Attribute prefix must be set\");\n+        }\n+        // Verify attribute prefix format.\n+        checkAndThrowAttributePrefix(prefix);\n+        // Verify attribute name format.\n+        checkAndThrowLabelName(nodeAttribute.getAttributeName());\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static void validateNodeAttributes(Set\u003cNodeAttribute\u003e attributeSet)\n      throws IOException {\n    if (attributeSet !\u003d null \u0026\u0026 !attributeSet.isEmpty()) {\n      for (NodeAttribute nodeAttribute : attributeSet) {\n        String prefix \u003d nodeAttribute.getAttributePrefix();\n        if (Strings.isNullOrEmpty(prefix)) {\n          throw new IOException(\"Attribute prefix must be set\");\n        }\n        // Verify attribute prefix format.\n        checkAndThrowAttributePrefix(prefix);\n        // Verify attribute name format.\n        checkAndThrowLabelName(nodeAttribute.getAttributeName());\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/nodelabels/NodeLabelUtil.java"
    }
  }
}