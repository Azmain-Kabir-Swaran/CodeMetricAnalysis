{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NodesListManager.java",
  "functionName": "refreshHostsReader",
  "functionId": "refreshHostsReader___yarnConf-Configuration__graceful-boolean__timeout-Integer",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/NodesListManager.java",
  "functionStartLine": 227,
  "functionEndLine": 261,
  "numCommitsSeen": 58,
  "timeTaken": 4367,
  "changeHistory": [
    "27642367ef3409a9ca93747c6c2cc279c087a4c0",
    "b46ca7e73b8bac3fdbff0b13afe009308078acf2",
    "0da69c324dee9baab0f0b9700db1cc5b623f8421",
    "feb90ffcca536e7deac50976b8a8774450fe089f",
    "fad9d7e85b1ba0934ab592daa9d3c9550b2bb501"
  ],
  "changeHistoryShort": {
    "27642367ef3409a9ca93747c6c2cc279c087a4c0": "Ybodychange",
    "b46ca7e73b8bac3fdbff0b13afe009308078acf2": "Ybodychange",
    "0da69c324dee9baab0f0b9700db1cc5b623f8421": "Ymultichange(Yparameterchange,Ybodychange)",
    "feb90ffcca536e7deac50976b8a8774450fe089f": "Ybodychange",
    "fad9d7e85b1ba0934ab592daa9d3c9550b2bb501": "Yintroduced"
  },
  "changeHistoryDetails": {
    "27642367ef3409a9ca93747c6c2cc279c087a4c0": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9011. Race condition during decommissioning. Contributed by Peter Bacsko\n",
      "commitDate": "18/11/19 7:29 AM",
      "commitName": "27642367ef3409a9ca93747c6c2cc279c087a4c0",
      "commitAuthor": "Szilard Nemeth",
      "commitDateOld": "15/03/19 4:20 PM",
      "commitNameOld": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 247.67,
      "commitsBetweenForRepo": 1751,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,35 @@\n   private void refreshHostsReader(\n       Configuration yarnConf, boolean graceful, Integer timeout)\n           throws IOException, YarnException {\n     // resolve the default timeout to the decommission timeout that is\n     // configured at this moment\n     if (null \u003d\u003d timeout) {\n       timeout \u003d readDecommissioningTimeout(yarnConf);\n     }\n     if (null \u003d\u003d yarnConf) {\n       yarnConf \u003d new YarnConfiguration();\n     }\n     includesFile \u003d\n         yarnConf.get(YarnConfiguration.RM_NODES_INCLUDE_FILE_PATH,\n             YarnConfiguration.DEFAULT_RM_NODES_INCLUDE_FILE_PATH);\n     excludesFile \u003d\n         yarnConf.get(YarnConfiguration.RM_NODES_EXCLUDE_FILE_PATH,\n             YarnConfiguration.DEFAULT_RM_NODES_EXCLUDE_FILE_PATH);\n     LOG.info(\"refreshNodes excludesFile \" + excludesFile);\n-    hostsReader.refresh(includesFile, excludesFile);\n-    printConfiguredHosts();\n+\n+    if (graceful) {\n+      // update hosts, but don\u0027t make it visible just yet\n+      hostsReader.lazyRefresh(includesFile, excludesFile);\n+    } else {\n+      hostsReader.refresh(includesFile, excludesFile);\n+    }\n+\n+    printConfiguredHosts(graceful);\n \n     LOG.info(\"hostsReader include:{\" +\n         StringUtils.join(\",\", hostsReader.getHosts()) +\n         \"} exclude:{\" +\n         StringUtils.join(\",\", hostsReader.getExcludedHosts()) + \"}\");\n \n     handleExcludeNodeList(graceful, timeout);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void refreshHostsReader(\n      Configuration yarnConf, boolean graceful, Integer timeout)\n          throws IOException, YarnException {\n    // resolve the default timeout to the decommission timeout that is\n    // configured at this moment\n    if (null \u003d\u003d timeout) {\n      timeout \u003d readDecommissioningTimeout(yarnConf);\n    }\n    if (null \u003d\u003d yarnConf) {\n      yarnConf \u003d new YarnConfiguration();\n    }\n    includesFile \u003d\n        yarnConf.get(YarnConfiguration.RM_NODES_INCLUDE_FILE_PATH,\n            YarnConfiguration.DEFAULT_RM_NODES_INCLUDE_FILE_PATH);\n    excludesFile \u003d\n        yarnConf.get(YarnConfiguration.RM_NODES_EXCLUDE_FILE_PATH,\n            YarnConfiguration.DEFAULT_RM_NODES_EXCLUDE_FILE_PATH);\n    LOG.info(\"refreshNodes excludesFile \" + excludesFile);\n\n    if (graceful) {\n      // update hosts, but don\u0027t make it visible just yet\n      hostsReader.lazyRefresh(includesFile, excludesFile);\n    } else {\n      hostsReader.refresh(includesFile, excludesFile);\n    }\n\n    printConfiguredHosts(graceful);\n\n    LOG.info(\"hostsReader include:{\" +\n        StringUtils.join(\",\", hostsReader.getHosts()) +\n        \"} exclude:{\" +\n        StringUtils.join(\",\", hostsReader.getExcludedHosts()) + \"}\");\n\n    handleExcludeNodeList(graceful, timeout);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/NodesListManager.java",
      "extendedDetails": {}
    },
    "b46ca7e73b8bac3fdbff0b13afe009308078acf2": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6483. Add nodes transitioning to DECOMMISSIONING state to the list of updated nodes returned to the AM. (Juan Rodriguez Hortala via asuresh)\n",
      "commitDate": "22/11/17 7:18 PM",
      "commitName": "b46ca7e73b8bac3fdbff0b13afe009308078acf2",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "16/05/17 7:57 PM",
      "commitNameOld": "d87a63a9019d74a1c338c724e050952843a153e5",
      "commitAuthorOld": "Rohith Sharma K S",
      "daysBetweenCommits": 190.01,
      "commitsBetweenForRepo": 1400,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,28 @@\n   private void refreshHostsReader(\n       Configuration yarnConf, boolean graceful, Integer timeout)\n           throws IOException, YarnException {\n+    // resolve the default timeout to the decommission timeout that is\n+    // configured at this moment\n+    if (null \u003d\u003d timeout) {\n+      timeout \u003d readDecommissioningTimeout(yarnConf);\n+    }\n     if (null \u003d\u003d yarnConf) {\n       yarnConf \u003d new YarnConfiguration();\n     }\n     includesFile \u003d\n         yarnConf.get(YarnConfiguration.RM_NODES_INCLUDE_FILE_PATH,\n             YarnConfiguration.DEFAULT_RM_NODES_INCLUDE_FILE_PATH);\n     excludesFile \u003d\n         yarnConf.get(YarnConfiguration.RM_NODES_EXCLUDE_FILE_PATH,\n             YarnConfiguration.DEFAULT_RM_NODES_EXCLUDE_FILE_PATH);\n     LOG.info(\"refreshNodes excludesFile \" + excludesFile);\n     hostsReader.refresh(includesFile, excludesFile);\n     printConfiguredHosts();\n \n     LOG.info(\"hostsReader include:{\" +\n         StringUtils.join(\",\", hostsReader.getHosts()) +\n         \"} exclude:{\" +\n         StringUtils.join(\",\", hostsReader.getExcludedHosts()) + \"}\");\n \n     handleExcludeNodeList(graceful, timeout);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void refreshHostsReader(\n      Configuration yarnConf, boolean graceful, Integer timeout)\n          throws IOException, YarnException {\n    // resolve the default timeout to the decommission timeout that is\n    // configured at this moment\n    if (null \u003d\u003d timeout) {\n      timeout \u003d readDecommissioningTimeout(yarnConf);\n    }\n    if (null \u003d\u003d yarnConf) {\n      yarnConf \u003d new YarnConfiguration();\n    }\n    includesFile \u003d\n        yarnConf.get(YarnConfiguration.RM_NODES_INCLUDE_FILE_PATH,\n            YarnConfiguration.DEFAULT_RM_NODES_INCLUDE_FILE_PATH);\n    excludesFile \u003d\n        yarnConf.get(YarnConfiguration.RM_NODES_EXCLUDE_FILE_PATH,\n            YarnConfiguration.DEFAULT_RM_NODES_EXCLUDE_FILE_PATH);\n    LOG.info(\"refreshNodes excludesFile \" + excludesFile);\n    hostsReader.refresh(includesFile, excludesFile);\n    printConfiguredHosts();\n\n    LOG.info(\"hostsReader include:{\" +\n        StringUtils.join(\",\", hostsReader.getHosts()) +\n        \"} exclude:{\" +\n        StringUtils.join(\",\", hostsReader.getExcludedHosts()) + \"}\");\n\n    handleExcludeNodeList(graceful, timeout);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/NodesListManager.java",
      "extendedDetails": {}
    },
    "0da69c324dee9baab0f0b9700db1cc5b623f8421": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-4676. Automatic and Asynchronous Decommissioning Nodes Status Tracking. Contributed by Diniel Zhi.\n(cherry picked from commit d464483bf7f0b3e3be3ba32cd6c3eee546747ab5)\n\nConflicts:\n\n\thadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceTrackerService.java\n\thadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmnode/RMNode.java\n\thadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmnode/RMNodeImpl.java\n",
      "commitDate": "18/08/16 7:27 AM",
      "commitName": "0da69c324dee9baab0f0b9700db1cc5b623f8421",
      "commitAuthor": "Junping Du",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-4676. Automatic and Asynchronous Decommissioning Nodes Status Tracking. Contributed by Diniel Zhi.\n(cherry picked from commit d464483bf7f0b3e3be3ba32cd6c3eee546747ab5)\n\nConflicts:\n\n\thadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceTrackerService.java\n\thadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmnode/RMNode.java\n\thadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmnode/RMNodeImpl.java\n",
          "commitDate": "18/08/16 7:27 AM",
          "commitName": "0da69c324dee9baab0f0b9700db1cc5b623f8421",
          "commitAuthor": "Junping Du",
          "commitDateOld": "19/05/16 1:01 PM",
          "commitNameOld": "feb90ffcca536e7deac50976b8a8774450fe089f",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 90.77,
          "commitsBetweenForRepo": 735,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,23 @@\n-  private void refreshHostsReader(Configuration yarnConf) throws IOException,\n-      YarnException {\n+  private void refreshHostsReader(\n+      Configuration yarnConf, boolean graceful, Integer timeout)\n+          throws IOException, YarnException {\n     if (null \u003d\u003d yarnConf) {\n       yarnConf \u003d new YarnConfiguration();\n     }\n     includesFile \u003d\n         yarnConf.get(YarnConfiguration.RM_NODES_INCLUDE_FILE_PATH,\n             YarnConfiguration.DEFAULT_RM_NODES_INCLUDE_FILE_PATH);\n     excludesFile \u003d\n         yarnConf.get(YarnConfiguration.RM_NODES_EXCLUDE_FILE_PATH,\n             YarnConfiguration.DEFAULT_RM_NODES_EXCLUDE_FILE_PATH);\n+    LOG.info(\"refreshNodes excludesFile \" + excludesFile);\n     hostsReader.refresh(includesFile, excludesFile);\n     printConfiguredHosts();\n+\n+    LOG.info(\"hostsReader include:{\" +\n+        StringUtils.join(\",\", hostsReader.getHosts()) +\n+        \"} exclude:{\" +\n+        StringUtils.join(\",\", hostsReader.getExcludedHosts()) + \"}\");\n+\n+    handleExcludeNodeList(graceful, timeout);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void refreshHostsReader(\n      Configuration yarnConf, boolean graceful, Integer timeout)\n          throws IOException, YarnException {\n    if (null \u003d\u003d yarnConf) {\n      yarnConf \u003d new YarnConfiguration();\n    }\n    includesFile \u003d\n        yarnConf.get(YarnConfiguration.RM_NODES_INCLUDE_FILE_PATH,\n            YarnConfiguration.DEFAULT_RM_NODES_INCLUDE_FILE_PATH);\n    excludesFile \u003d\n        yarnConf.get(YarnConfiguration.RM_NODES_EXCLUDE_FILE_PATH,\n            YarnConfiguration.DEFAULT_RM_NODES_EXCLUDE_FILE_PATH);\n    LOG.info(\"refreshNodes excludesFile \" + excludesFile);\n    hostsReader.refresh(includesFile, excludesFile);\n    printConfiguredHosts();\n\n    LOG.info(\"hostsReader include:{\" +\n        StringUtils.join(\",\", hostsReader.getHosts()) +\n        \"} exclude:{\" +\n        StringUtils.join(\",\", hostsReader.getExcludedHosts()) + \"}\");\n\n    handleExcludeNodeList(graceful, timeout);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/NodesListManager.java",
          "extendedDetails": {
            "oldValue": "[yarnConf-Configuration]",
            "newValue": "[yarnConf-Configuration, graceful-boolean, timeout-Integer]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4676. Automatic and Asynchronous Decommissioning Nodes Status Tracking. Contributed by Diniel Zhi.\n(cherry picked from commit d464483bf7f0b3e3be3ba32cd6c3eee546747ab5)\n\nConflicts:\n\n\thadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceTrackerService.java\n\thadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmnode/RMNode.java\n\thadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmnode/RMNodeImpl.java\n",
          "commitDate": "18/08/16 7:27 AM",
          "commitName": "0da69c324dee9baab0f0b9700db1cc5b623f8421",
          "commitAuthor": "Junping Du",
          "commitDateOld": "19/05/16 1:01 PM",
          "commitNameOld": "feb90ffcca536e7deac50976b8a8774450fe089f",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 90.77,
          "commitsBetweenForRepo": 735,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,23 @@\n-  private void refreshHostsReader(Configuration yarnConf) throws IOException,\n-      YarnException {\n+  private void refreshHostsReader(\n+      Configuration yarnConf, boolean graceful, Integer timeout)\n+          throws IOException, YarnException {\n     if (null \u003d\u003d yarnConf) {\n       yarnConf \u003d new YarnConfiguration();\n     }\n     includesFile \u003d\n         yarnConf.get(YarnConfiguration.RM_NODES_INCLUDE_FILE_PATH,\n             YarnConfiguration.DEFAULT_RM_NODES_INCLUDE_FILE_PATH);\n     excludesFile \u003d\n         yarnConf.get(YarnConfiguration.RM_NODES_EXCLUDE_FILE_PATH,\n             YarnConfiguration.DEFAULT_RM_NODES_EXCLUDE_FILE_PATH);\n+    LOG.info(\"refreshNodes excludesFile \" + excludesFile);\n     hostsReader.refresh(includesFile, excludesFile);\n     printConfiguredHosts();\n+\n+    LOG.info(\"hostsReader include:{\" +\n+        StringUtils.join(\",\", hostsReader.getHosts()) +\n+        \"} exclude:{\" +\n+        StringUtils.join(\",\", hostsReader.getExcludedHosts()) + \"}\");\n+\n+    handleExcludeNodeList(graceful, timeout);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void refreshHostsReader(\n      Configuration yarnConf, boolean graceful, Integer timeout)\n          throws IOException, YarnException {\n    if (null \u003d\u003d yarnConf) {\n      yarnConf \u003d new YarnConfiguration();\n    }\n    includesFile \u003d\n        yarnConf.get(YarnConfiguration.RM_NODES_INCLUDE_FILE_PATH,\n            YarnConfiguration.DEFAULT_RM_NODES_INCLUDE_FILE_PATH);\n    excludesFile \u003d\n        yarnConf.get(YarnConfiguration.RM_NODES_EXCLUDE_FILE_PATH,\n            YarnConfiguration.DEFAULT_RM_NODES_EXCLUDE_FILE_PATH);\n    LOG.info(\"refreshNodes excludesFile \" + excludesFile);\n    hostsReader.refresh(includesFile, excludesFile);\n    printConfiguredHosts();\n\n    LOG.info(\"hostsReader include:{\" +\n        StringUtils.join(\",\", hostsReader.getHosts()) +\n        \"} exclude:{\" +\n        StringUtils.join(\",\", hostsReader.getExcludedHosts()) + \"}\");\n\n    handleExcludeNodeList(graceful, timeout);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/NodesListManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "feb90ffcca536e7deac50976b8a8774450fe089f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4002. Make ResourceTrackerService#nodeHeartbeat more concurrent. Contributed by Rohith Sharma K S \u0026 Zhiguo Hong\n",
      "commitDate": "19/05/16 1:01 PM",
      "commitName": "feb90ffcca536e7deac50976b8a8774450fe089f",
      "commitAuthor": "Jian He",
      "commitDateOld": "05/05/16 7:07 AM",
      "commitNameOld": "d0da13229cf692579c8c9db47a93f6c6255392c8",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 14.25,
      "commitsBetweenForRepo": 109,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,14 @@\n   private void refreshHostsReader(Configuration yarnConf) throws IOException,\n       YarnException {\n-    synchronized (hostsReader) {\n-      if (null \u003d\u003d yarnConf) {\n-        yarnConf \u003d new YarnConfiguration();\n-      }\n-      includesFile \u003d\n-          yarnConf.get(YarnConfiguration.RM_NODES_INCLUDE_FILE_PATH,\n-              YarnConfiguration.DEFAULT_RM_NODES_INCLUDE_FILE_PATH);\n-      excludesFile \u003d\n-          yarnConf.get(YarnConfiguration.RM_NODES_EXCLUDE_FILE_PATH,\n-              YarnConfiguration.DEFAULT_RM_NODES_EXCLUDE_FILE_PATH);\n-      hostsReader.updateFileNames(includesFile, excludesFile);\n-      hostsReader.refresh(\n-          includesFile.isEmpty() ? null : this.rmContext\n-              .getConfigurationProvider().getConfigurationInputStream(\n-                  this.conf, includesFile), excludesFile.isEmpty() ? null\n-              : this.rmContext.getConfigurationProvider()\n-                  .getConfigurationInputStream(this.conf, excludesFile));\n-      printConfiguredHosts();\n+    if (null \u003d\u003d yarnConf) {\n+      yarnConf \u003d new YarnConfiguration();\n     }\n+    includesFile \u003d\n+        yarnConf.get(YarnConfiguration.RM_NODES_INCLUDE_FILE_PATH,\n+            YarnConfiguration.DEFAULT_RM_NODES_INCLUDE_FILE_PATH);\n+    excludesFile \u003d\n+        yarnConf.get(YarnConfiguration.RM_NODES_EXCLUDE_FILE_PATH,\n+            YarnConfiguration.DEFAULT_RM_NODES_EXCLUDE_FILE_PATH);\n+    hostsReader.refresh(includesFile, excludesFile);\n+    printConfiguredHosts();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void refreshHostsReader(Configuration yarnConf) throws IOException,\n      YarnException {\n    if (null \u003d\u003d yarnConf) {\n      yarnConf \u003d new YarnConfiguration();\n    }\n    includesFile \u003d\n        yarnConf.get(YarnConfiguration.RM_NODES_INCLUDE_FILE_PATH,\n            YarnConfiguration.DEFAULT_RM_NODES_INCLUDE_FILE_PATH);\n    excludesFile \u003d\n        yarnConf.get(YarnConfiguration.RM_NODES_EXCLUDE_FILE_PATH,\n            YarnConfiguration.DEFAULT_RM_NODES_EXCLUDE_FILE_PATH);\n    hostsReader.refresh(includesFile, excludesFile);\n    printConfiguredHosts();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/NodesListManager.java",
      "extendedDetails": {}
    },
    "fad9d7e85b1ba0934ab592daa9d3c9550b2bb501": {
      "type": "Yintroduced",
      "commitMessage": "New parameter of CLI for decommissioning node gracefully in RMAdmin CLI. Contributed by Devaraj K\n",
      "commitDate": "22/04/15 10:07 AM",
      "commitName": "fad9d7e85b1ba0934ab592daa9d3c9550b2bb501",
      "commitAuthor": "Junping Du",
      "diff": "@@ -0,0 +1,22 @@\n+  private void refreshHostsReader(Configuration yarnConf) throws IOException,\n+      YarnException {\n+    synchronized (hostsReader) {\n+      if (null \u003d\u003d yarnConf) {\n+        yarnConf \u003d new YarnConfiguration();\n+      }\n+      includesFile \u003d\n+          yarnConf.get(YarnConfiguration.RM_NODES_INCLUDE_FILE_PATH,\n+              YarnConfiguration.DEFAULT_RM_NODES_INCLUDE_FILE_PATH);\n+      excludesFile \u003d\n+          yarnConf.get(YarnConfiguration.RM_NODES_EXCLUDE_FILE_PATH,\n+              YarnConfiguration.DEFAULT_RM_NODES_EXCLUDE_FILE_PATH);\n+      hostsReader.updateFileNames(includesFile, excludesFile);\n+      hostsReader.refresh(\n+          includesFile.isEmpty() ? null : this.rmContext\n+              .getConfigurationProvider().getConfigurationInputStream(\n+                  this.conf, includesFile), excludesFile.isEmpty() ? null\n+              : this.rmContext.getConfigurationProvider()\n+                  .getConfigurationInputStream(this.conf, excludesFile));\n+      printConfiguredHosts();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void refreshHostsReader(Configuration yarnConf) throws IOException,\n      YarnException {\n    synchronized (hostsReader) {\n      if (null \u003d\u003d yarnConf) {\n        yarnConf \u003d new YarnConfiguration();\n      }\n      includesFile \u003d\n          yarnConf.get(YarnConfiguration.RM_NODES_INCLUDE_FILE_PATH,\n              YarnConfiguration.DEFAULT_RM_NODES_INCLUDE_FILE_PATH);\n      excludesFile \u003d\n          yarnConf.get(YarnConfiguration.RM_NODES_EXCLUDE_FILE_PATH,\n              YarnConfiguration.DEFAULT_RM_NODES_EXCLUDE_FILE_PATH);\n      hostsReader.updateFileNames(includesFile, excludesFile);\n      hostsReader.refresh(\n          includesFile.isEmpty() ? null : this.rmContext\n              .getConfigurationProvider().getConfigurationInputStream(\n                  this.conf, includesFile), excludesFile.isEmpty() ? null\n              : this.rmContext.getConfigurationProvider()\n                  .getConfigurationInputStream(this.conf, excludesFile));\n      printConfiguredHosts();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/NodesListManager.java"
    }
  }
}