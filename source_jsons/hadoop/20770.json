{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JobResourceUploader.java",
  "functionName": "copyLog4jPropertyFile",
  "functionId": "copyLog4jPropertyFile___job-Job__submitJobDir-Path__replication-short",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/JobResourceUploader.java",
  "functionStartLine": 820,
  "functionEndLine": 853,
  "numCommitsSeen": 42,
  "timeTaken": 1866,
  "changeHistory": [
    "5af572b6443715b7a741296c1bd520a1840f9a7c",
    "c66c3ac6bf9f63177279feec3f2917e4b882e2bc",
    "ed63b116465290fdb0acdf89170025f47b307599"
  ],
  "changeHistoryShort": {
    "5af572b6443715b7a741296c1bd520a1840f9a7c": "Ybodychange",
    "c66c3ac6bf9f63177279feec3f2917e4b882e2bc": "Ymovefromfile",
    "ed63b116465290fdb0acdf89170025f47b307599": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5af572b6443715b7a741296c1bd520a1840f9a7c": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13427. Eliminate needless uses of FileSystem#{exists(), isFile(), isDirectory()}. Contributed by Steve Loughran and Mingliang Liu\n",
      "commitDate": "15/11/16 10:57 AM",
      "commitName": "5af572b6443715b7a741296c1bd520a1840f9a7c",
      "commitAuthor": "Mingliang Liu",
      "commitDateOld": "17/08/16 9:22 AM",
      "commitNameOld": "f80a7298325a4626638ee24467e2012442e480d4",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 90.11,
      "commitsBetweenForRepo": 677,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,34 @@\n   private void copyLog4jPropertyFile(Job job, Path submitJobDir,\n       short replication) throws IOException {\n     Configuration conf \u003d job.getConfiguration();\n \n     String file \u003d\n         validateFilePath(\n             conf.get(MRJobConfig.MAPREDUCE_JOB_LOG4J_PROPERTIES_FILE), conf);\n     LOG.debug(\"default FileSystem: \" + jtFs.getUri());\n     FsPermission mapredSysPerms \u003d\n         new FsPermission(JobSubmissionFiles.JOB_DIR_PERMISSION);\n-    if (!jtFs.exists(submitJobDir)) {\n+    try {\n+      jtFs.getFileStatus(submitJobDir);\n+    } catch (FileNotFoundException e) {\n       throw new IOException(\"Cannot find job submission directory! \"\n-          + \"It should just be created, so something wrong here.\");\n+          + \"It should just be created, so something wrong here.\", e);\n     }\n \n     Path fileDir \u003d JobSubmissionFiles.getJobLog4jFile(submitJobDir);\n \n     // first copy local log4j.properties file to HDFS under submitJobDir\n     if (file !\u003d null) {\n       FileSystem.mkdirs(jtFs, fileDir, mapredSysPerms);\n       URI tmpURI \u003d null;\n       try {\n         tmpURI \u003d new URI(file);\n       } catch (URISyntaxException e) {\n         throw new IllegalArgumentException(e);\n       }\n       Path tmp \u003d new Path(tmpURI);\n       Path newPath \u003d copyRemoteFiles(fileDir, tmp, conf, replication);\n       DistributedCache.addFileToClassPath(new Path(newPath.toUri().getPath()),\n           conf);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void copyLog4jPropertyFile(Job job, Path submitJobDir,\n      short replication) throws IOException {\n    Configuration conf \u003d job.getConfiguration();\n\n    String file \u003d\n        validateFilePath(\n            conf.get(MRJobConfig.MAPREDUCE_JOB_LOG4J_PROPERTIES_FILE), conf);\n    LOG.debug(\"default FileSystem: \" + jtFs.getUri());\n    FsPermission mapredSysPerms \u003d\n        new FsPermission(JobSubmissionFiles.JOB_DIR_PERMISSION);\n    try {\n      jtFs.getFileStatus(submitJobDir);\n    } catch (FileNotFoundException e) {\n      throw new IOException(\"Cannot find job submission directory! \"\n          + \"It should just be created, so something wrong here.\", e);\n    }\n\n    Path fileDir \u003d JobSubmissionFiles.getJobLog4jFile(submitJobDir);\n\n    // first copy local log4j.properties file to HDFS under submitJobDir\n    if (file !\u003d null) {\n      FileSystem.mkdirs(jtFs, fileDir, mapredSysPerms);\n      URI tmpURI \u003d null;\n      try {\n        tmpURI \u003d new URI(file);\n      } catch (URISyntaxException e) {\n        throw new IllegalArgumentException(e);\n      }\n      Path tmp \u003d new Path(tmpURI);\n      Path newPath \u003d copyRemoteFiles(fileDir, tmp, conf, replication);\n      DistributedCache.addFileToClassPath(new Path(newPath.toUri().getPath()),\n          conf);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/JobResourceUploader.java",
      "extendedDetails": {}
    },
    "c66c3ac6bf9f63177279feec3f2917e4b882e2bc": {
      "type": "Ymovefromfile",
      "commitMessage": "MAPREDUCE-6267. Refactor JobSubmitter#copyAndConfigureFiles into it\u0027s own class. (Chris Trezzo via kasha)\n",
      "commitDate": "04/03/15 2:42 PM",
      "commitName": "c66c3ac6bf9f63177279feec3f2917e4b882e2bc",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "04/03/15 10:30 AM",
      "commitNameOld": "ed70fa142cabdbc1065e4dbbc95e99c8850c4751",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 0.17,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,32 @@\n   private void copyLog4jPropertyFile(Job job, Path submitJobDir,\n       short replication) throws IOException {\n     Configuration conf \u003d job.getConfiguration();\n \n-    String file \u003d validateFilePath(\n-        conf.get(MRJobConfig.MAPREDUCE_JOB_LOG4J_PROPERTIES_FILE), conf);\n+    String file \u003d\n+        validateFilePath(\n+            conf.get(MRJobConfig.MAPREDUCE_JOB_LOG4J_PROPERTIES_FILE), conf);\n     LOG.debug(\"default FileSystem: \" + jtFs.getUri());\n-    FsPermission mapredSysPerms \u003d \n-      new FsPermission(JobSubmissionFiles.JOB_DIR_PERMISSION);\n+    FsPermission mapredSysPerms \u003d\n+        new FsPermission(JobSubmissionFiles.JOB_DIR_PERMISSION);\n     if (!jtFs.exists(submitJobDir)) {\n-      throw new IOException(\"Cannot find job submission directory! \" \n+      throw new IOException(\"Cannot find job submission directory! \"\n           + \"It should just be created, so something wrong here.\");\n     }\n-    \n+\n     Path fileDir \u003d JobSubmissionFiles.getJobLog4jFile(submitJobDir);\n \n     // first copy local log4j.properties file to HDFS under submitJobDir\n     if (file !\u003d null) {\n       FileSystem.mkdirs(jtFs, fileDir, mapredSysPerms);\n       URI tmpURI \u003d null;\n       try {\n         tmpURI \u003d new URI(file);\n       } catch (URISyntaxException e) {\n         throw new IllegalArgumentException(e);\n       }\n       Path tmp \u003d new Path(tmpURI);\n       Path newPath \u003d copyRemoteFiles(fileDir, tmp, conf, replication);\n-      DistributedCache.addFileToClassPath(new Path(newPath.toUri().getPath()), conf);\n+      DistributedCache.addFileToClassPath(new Path(newPath.toUri().getPath()),\n+          conf);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void copyLog4jPropertyFile(Job job, Path submitJobDir,\n      short replication) throws IOException {\n    Configuration conf \u003d job.getConfiguration();\n\n    String file \u003d\n        validateFilePath(\n            conf.get(MRJobConfig.MAPREDUCE_JOB_LOG4J_PROPERTIES_FILE), conf);\n    LOG.debug(\"default FileSystem: \" + jtFs.getUri());\n    FsPermission mapredSysPerms \u003d\n        new FsPermission(JobSubmissionFiles.JOB_DIR_PERMISSION);\n    if (!jtFs.exists(submitJobDir)) {\n      throw new IOException(\"Cannot find job submission directory! \"\n          + \"It should just be created, so something wrong here.\");\n    }\n\n    Path fileDir \u003d JobSubmissionFiles.getJobLog4jFile(submitJobDir);\n\n    // first copy local log4j.properties file to HDFS under submitJobDir\n    if (file !\u003d null) {\n      FileSystem.mkdirs(jtFs, fileDir, mapredSysPerms);\n      URI tmpURI \u003d null;\n      try {\n        tmpURI \u003d new URI(file);\n      } catch (URISyntaxException e) {\n        throw new IllegalArgumentException(e);\n      }\n      Path tmp \u003d new Path(tmpURI);\n      Path newPath \u003d copyRemoteFiles(fileDir, tmp, conf, replication);\n      DistributedCache.addFileToClassPath(new Path(newPath.toUri().getPath()),\n          conf);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/JobResourceUploader.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/JobSubmitter.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/JobResourceUploader.java",
        "oldMethodName": "copyLog4jPropertyFile",
        "newMethodName": "copyLog4jPropertyFile"
      }
    },
    "ed63b116465290fdb0acdf89170025f47b307599": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-6052. Supported overriding the default container-log4j.properties file per job. Contributed by Junping Du.\n",
      "commitDate": "01/11/14 12:47 AM",
      "commitName": "ed63b116465290fdb0acdf89170025f47b307599",
      "commitAuthor": "Zhijie Shen",
      "diff": "@@ -0,0 +1,30 @@\n+  private void copyLog4jPropertyFile(Job job, Path submitJobDir,\n+      short replication) throws IOException {\n+    Configuration conf \u003d job.getConfiguration();\n+\n+    String file \u003d validateFilePath(\n+        conf.get(MRJobConfig.MAPREDUCE_JOB_LOG4J_PROPERTIES_FILE), conf);\n+    LOG.debug(\"default FileSystem: \" + jtFs.getUri());\n+    FsPermission mapredSysPerms \u003d \n+      new FsPermission(JobSubmissionFiles.JOB_DIR_PERMISSION);\n+    if (!jtFs.exists(submitJobDir)) {\n+      throw new IOException(\"Cannot find job submission directory! \" \n+          + \"It should just be created, so something wrong here.\");\n+    }\n+    \n+    Path fileDir \u003d JobSubmissionFiles.getJobLog4jFile(submitJobDir);\n+\n+    // first copy local log4j.properties file to HDFS under submitJobDir\n+    if (file !\u003d null) {\n+      FileSystem.mkdirs(jtFs, fileDir, mapredSysPerms);\n+      URI tmpURI \u003d null;\n+      try {\n+        tmpURI \u003d new URI(file);\n+      } catch (URISyntaxException e) {\n+        throw new IllegalArgumentException(e);\n+      }\n+      Path tmp \u003d new Path(tmpURI);\n+      Path newPath \u003d copyRemoteFiles(fileDir, tmp, conf, replication);\n+      DistributedCache.addFileToClassPath(new Path(newPath.toUri().getPath()), conf);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void copyLog4jPropertyFile(Job job, Path submitJobDir,\n      short replication) throws IOException {\n    Configuration conf \u003d job.getConfiguration();\n\n    String file \u003d validateFilePath(\n        conf.get(MRJobConfig.MAPREDUCE_JOB_LOG4J_PROPERTIES_FILE), conf);\n    LOG.debug(\"default FileSystem: \" + jtFs.getUri());\n    FsPermission mapredSysPerms \u003d \n      new FsPermission(JobSubmissionFiles.JOB_DIR_PERMISSION);\n    if (!jtFs.exists(submitJobDir)) {\n      throw new IOException(\"Cannot find job submission directory! \" \n          + \"It should just be created, so something wrong here.\");\n    }\n    \n    Path fileDir \u003d JobSubmissionFiles.getJobLog4jFile(submitJobDir);\n\n    // first copy local log4j.properties file to HDFS under submitJobDir\n    if (file !\u003d null) {\n      FileSystem.mkdirs(jtFs, fileDir, mapredSysPerms);\n      URI tmpURI \u003d null;\n      try {\n        tmpURI \u003d new URI(file);\n      } catch (URISyntaxException e) {\n        throw new IllegalArgumentException(e);\n      }\n      Path tmp \u003d new Path(tmpURI);\n      Path newPath \u003d copyRemoteFiles(fileDir, tmp, conf, replication);\n      DistributedCache.addFileToClassPath(new Path(newPath.toUri().getPath()), conf);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/JobSubmitter.java"
    }
  }
}