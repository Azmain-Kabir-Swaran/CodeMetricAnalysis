{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TimelineDataManager.java",
  "functionName": "doPutDomain",
  "functionId": "doPutDomain___domain-TimelineDomain__callerUGI-UserGroupInformation",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/TimelineDataManager.java",
  "functionStartLine": 412,
  "functionEndLine": 432,
  "numCommitsSeen": 15,
  "timeTaken": 1076,
  "changeHistory": [
    "4c659ddbf7629aae92e66a5b54893e9c1c68dfb0"
  ],
  "changeHistoryShort": {
    "4c659ddbf7629aae92e66a5b54893e9c1c68dfb0": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4c659ddbf7629aae92e66a5b54893e9c1c68dfb0": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3360. Add JMX metrics to TimelineDataManager (Jason Lowe via jeagles)\n",
      "commitDate": "24/06/15 2:16 PM",
      "commitName": "4c659ddbf7629aae92e66a5b54893e9c1c68dfb0",
      "commitAuthor": "Jonathan Eagles",
      "diff": "@@ -0,0 +1,21 @@\n+  private void doPutDomain(TimelineDomain domain,\n+      UserGroupInformation callerUGI) throws YarnException, IOException {\n+    TimelineDomain existingDomain \u003d\n+        store.getDomain(domain.getId());\n+    if (existingDomain !\u003d null) {\n+      if (!timelineACLsManager.checkAccess(callerUGI, existingDomain)) {\n+        throw new YarnException(callerUGI.getShortUserName() +\n+            \" is not allowed to override an existing domain \" +\n+            existingDomain.getId());\n+      }\n+      // Set it again in case ACLs are not enabled: The domain can be\n+      // modified by every body, but the owner is not changed.\n+      domain.setOwner(existingDomain.getOwner());\n+    }\n+    store.put(domain);\n+    // If the domain exists already, it is likely to be in the cache.\n+    // We need to invalidate it.\n+    if (existingDomain !\u003d null) {\n+      timelineACLsManager.replaceIfExist(domain);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void doPutDomain(TimelineDomain domain,\n      UserGroupInformation callerUGI) throws YarnException, IOException {\n    TimelineDomain existingDomain \u003d\n        store.getDomain(domain.getId());\n    if (existingDomain !\u003d null) {\n      if (!timelineACLsManager.checkAccess(callerUGI, existingDomain)) {\n        throw new YarnException(callerUGI.getShortUserName() +\n            \" is not allowed to override an existing domain \" +\n            existingDomain.getId());\n      }\n      // Set it again in case ACLs are not enabled: The domain can be\n      // modified by every body, but the owner is not changed.\n      domain.setOwner(existingDomain.getOwner());\n    }\n    store.put(domain);\n    // If the domain exists already, it is likely to be in the cache.\n    // We need to invalidate it.\n    if (existingDomain !\u003d null) {\n      timelineACLsManager.replaceIfExist(domain);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/TimelineDataManager.java"
    }
  }
}