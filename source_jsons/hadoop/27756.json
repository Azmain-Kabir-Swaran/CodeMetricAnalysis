{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FederationProxyProviderUtil.java",
  "functionName": "createRMProxy",
  "functionId": "createRMProxy___configuration-Configuration__protocol-Class__T__(modifiers-final)__subClusterId-SubClusterId__user-UserGroupInformation__token-Token__? extends TokenIdentifier__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/failover/FederationProxyProviderUtil.java",
  "functionStartLine": 95,
  "functionEndLine": 102,
  "numCommitsSeen": 6,
  "timeTaken": 1974,
  "changeHistory": [
    "859aa1f9d621d07693825e610bdc0149f7a2770a",
    "bdfad4523f1a5a776e20773c371ce99d0c538ac1"
  ],
  "changeHistoryShort": {
    "859aa1f9d621d07693825e610bdc0149f7a2770a": "Ymultichange(Yparameterchange,Ybodychange,Yparametermetachange)",
    "bdfad4523f1a5a776e20773c371ce99d0c538ac1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "859aa1f9d621d07693825e610bdc0149f7a2770a": {
      "type": "Ymultichange(Yparameterchange,Ybodychange,Yparametermetachange)",
      "commitMessage": "YARN-5531. UnmanagedAM pool manager for federating application across clusters. (Botong Huang via Subru).\n\n(cherry picked from commit 73bb2102ce4b82b3a3bed91319f7c8f067ddc3e8)\n",
      "commitDate": "01/08/17 5:28 PM",
      "commitName": "859aa1f9d621d07693825e610bdc0149f7a2770a",
      "commitAuthor": "Subru Krishnan",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-5531. UnmanagedAM pool manager for federating application across clusters. (Botong Huang via Subru).\n\n(cherry picked from commit 73bb2102ce4b82b3a3bed91319f7c8f067ddc3e8)\n",
          "commitDate": "01/08/17 5:28 PM",
          "commitName": "859aa1f9d621d07693825e610bdc0149f7a2770a",
          "commitAuthor": "Subru Krishnan",
          "commitDateOld": "01/08/17 5:28 PM",
          "commitNameOld": "94a24567d65469091c8b521987dc2003d0327159",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 21,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,35 +1,8 @@\n-  public static \u003cT\u003e T createRMProxy(final Configuration configuration,\n+  public static \u003cT\u003e T createRMProxy(Configuration configuration,\n       final Class\u003cT\u003e protocol, SubClusterId subClusterId,\n-      UserGroupInformation user, final Token token) throws IOException {\n-    try {\n-      final YarnConfiguration conf \u003d new YarnConfiguration(configuration);\n-      updateConf(conf, subClusterId);\n-      if (token !\u003d null) {\n-        LOG.info(\n-            \"Creating RMProxy with a token: {} to subcluster: {}\"\n-                + \" for protocol: {}\",\n-            token, subClusterId, protocol.getSimpleName());\n-        user.addToken(token);\n-        setAuthModeInConf(conf);\n-      } else {\n-        LOG.info(\"Creating RMProxy without a token to subcluster: {}\"\n-            + \" for protocol: {}\", subClusterId, protocol.getSimpleName());\n-      }\n-      final T proxyConnection \u003d user.doAs(new PrivilegedExceptionAction\u003cT\u003e() {\n-        @Override\n-        public T run() throws Exception {\n-          return ClientRMProxy.createRMProxy(conf, protocol);\n-        }\n-      });\n-\n-      return proxyConnection;\n-    } catch (IOException e) {\n-      String message \u003d\n-          \"Error while creating of RM application master service proxy for\"\n-              + \" appAttemptId: \" + user;\n-      LOG.info(message);\n-      throw new YarnRuntimeException(message, e);\n-    } catch (InterruptedException e) {\n-      throw new YarnRuntimeException(e);\n-    }\n+      UserGroupInformation user, Token\u003c? extends TokenIdentifier\u003e token)\n+      throws IOException {\n+    final YarnConfiguration config \u003d new YarnConfiguration(configuration);\n+    updateConfForFederation(config, subClusterId.getId());\n+    return AMRMClientUtils.createRMProxy(config, protocol, user, token);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static \u003cT\u003e T createRMProxy(Configuration configuration,\n      final Class\u003cT\u003e protocol, SubClusterId subClusterId,\n      UserGroupInformation user, Token\u003c? extends TokenIdentifier\u003e token)\n      throws IOException {\n    final YarnConfiguration config \u003d new YarnConfiguration(configuration);\n    updateConfForFederation(config, subClusterId.getId());\n    return AMRMClientUtils.createRMProxy(config, protocol, user, token);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/failover/FederationProxyProviderUtil.java",
          "extendedDetails": {
            "oldValue": "[configuration-Configuration(modifiers-final), protocol-Class\u003cT\u003e(modifiers-final), subClusterId-SubClusterId, user-UserGroupInformation, token-Token(modifiers-final)]",
            "newValue": "[configuration-Configuration, protocol-Class\u003cT\u003e(modifiers-final), subClusterId-SubClusterId, user-UserGroupInformation, token-Token\u003c? extends TokenIdentifier\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-5531. UnmanagedAM pool manager for federating application across clusters. (Botong Huang via Subru).\n\n(cherry picked from commit 73bb2102ce4b82b3a3bed91319f7c8f067ddc3e8)\n",
          "commitDate": "01/08/17 5:28 PM",
          "commitName": "859aa1f9d621d07693825e610bdc0149f7a2770a",
          "commitAuthor": "Subru Krishnan",
          "commitDateOld": "01/08/17 5:28 PM",
          "commitNameOld": "94a24567d65469091c8b521987dc2003d0327159",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 21,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,35 +1,8 @@\n-  public static \u003cT\u003e T createRMProxy(final Configuration configuration,\n+  public static \u003cT\u003e T createRMProxy(Configuration configuration,\n       final Class\u003cT\u003e protocol, SubClusterId subClusterId,\n-      UserGroupInformation user, final Token token) throws IOException {\n-    try {\n-      final YarnConfiguration conf \u003d new YarnConfiguration(configuration);\n-      updateConf(conf, subClusterId);\n-      if (token !\u003d null) {\n-        LOG.info(\n-            \"Creating RMProxy with a token: {} to subcluster: {}\"\n-                + \" for protocol: {}\",\n-            token, subClusterId, protocol.getSimpleName());\n-        user.addToken(token);\n-        setAuthModeInConf(conf);\n-      } else {\n-        LOG.info(\"Creating RMProxy without a token to subcluster: {}\"\n-            + \" for protocol: {}\", subClusterId, protocol.getSimpleName());\n-      }\n-      final T proxyConnection \u003d user.doAs(new PrivilegedExceptionAction\u003cT\u003e() {\n-        @Override\n-        public T run() throws Exception {\n-          return ClientRMProxy.createRMProxy(conf, protocol);\n-        }\n-      });\n-\n-      return proxyConnection;\n-    } catch (IOException e) {\n-      String message \u003d\n-          \"Error while creating of RM application master service proxy for\"\n-              + \" appAttemptId: \" + user;\n-      LOG.info(message);\n-      throw new YarnRuntimeException(message, e);\n-    } catch (InterruptedException e) {\n-      throw new YarnRuntimeException(e);\n-    }\n+      UserGroupInformation user, Token\u003c? extends TokenIdentifier\u003e token)\n+      throws IOException {\n+    final YarnConfiguration config \u003d new YarnConfiguration(configuration);\n+    updateConfForFederation(config, subClusterId.getId());\n+    return AMRMClientUtils.createRMProxy(config, protocol, user, token);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static \u003cT\u003e T createRMProxy(Configuration configuration,\n      final Class\u003cT\u003e protocol, SubClusterId subClusterId,\n      UserGroupInformation user, Token\u003c? extends TokenIdentifier\u003e token)\n      throws IOException {\n    final YarnConfiguration config \u003d new YarnConfiguration(configuration);\n    updateConfForFederation(config, subClusterId.getId());\n    return AMRMClientUtils.createRMProxy(config, protocol, user, token);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/failover/FederationProxyProviderUtil.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparametermetachange",
          "commitMessage": "YARN-5531. UnmanagedAM pool manager for federating application across clusters. (Botong Huang via Subru).\n\n(cherry picked from commit 73bb2102ce4b82b3a3bed91319f7c8f067ddc3e8)\n",
          "commitDate": "01/08/17 5:28 PM",
          "commitName": "859aa1f9d621d07693825e610bdc0149f7a2770a",
          "commitAuthor": "Subru Krishnan",
          "commitDateOld": "01/08/17 5:28 PM",
          "commitNameOld": "94a24567d65469091c8b521987dc2003d0327159",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 21,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,35 +1,8 @@\n-  public static \u003cT\u003e T createRMProxy(final Configuration configuration,\n+  public static \u003cT\u003e T createRMProxy(Configuration configuration,\n       final Class\u003cT\u003e protocol, SubClusterId subClusterId,\n-      UserGroupInformation user, final Token token) throws IOException {\n-    try {\n-      final YarnConfiguration conf \u003d new YarnConfiguration(configuration);\n-      updateConf(conf, subClusterId);\n-      if (token !\u003d null) {\n-        LOG.info(\n-            \"Creating RMProxy with a token: {} to subcluster: {}\"\n-                + \" for protocol: {}\",\n-            token, subClusterId, protocol.getSimpleName());\n-        user.addToken(token);\n-        setAuthModeInConf(conf);\n-      } else {\n-        LOG.info(\"Creating RMProxy without a token to subcluster: {}\"\n-            + \" for protocol: {}\", subClusterId, protocol.getSimpleName());\n-      }\n-      final T proxyConnection \u003d user.doAs(new PrivilegedExceptionAction\u003cT\u003e() {\n-        @Override\n-        public T run() throws Exception {\n-          return ClientRMProxy.createRMProxy(conf, protocol);\n-        }\n-      });\n-\n-      return proxyConnection;\n-    } catch (IOException e) {\n-      String message \u003d\n-          \"Error while creating of RM application master service proxy for\"\n-              + \" appAttemptId: \" + user;\n-      LOG.info(message);\n-      throw new YarnRuntimeException(message, e);\n-    } catch (InterruptedException e) {\n-      throw new YarnRuntimeException(e);\n-    }\n+      UserGroupInformation user, Token\u003c? extends TokenIdentifier\u003e token)\n+      throws IOException {\n+    final YarnConfiguration config \u003d new YarnConfiguration(configuration);\n+    updateConfForFederation(config, subClusterId.getId());\n+    return AMRMClientUtils.createRMProxy(config, protocol, user, token);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static \u003cT\u003e T createRMProxy(Configuration configuration,\n      final Class\u003cT\u003e protocol, SubClusterId subClusterId,\n      UserGroupInformation user, Token\u003c? extends TokenIdentifier\u003e token)\n      throws IOException {\n    final YarnConfiguration config \u003d new YarnConfiguration(configuration);\n    updateConfForFederation(config, subClusterId.getId());\n    return AMRMClientUtils.createRMProxy(config, protocol, user, token);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/failover/FederationProxyProviderUtil.java",
          "extendedDetails": {
            "oldValue": "[configuration-Configuration(modifiers-final), protocol-Class\u003cT\u003e(modifiers-final), subClusterId-SubClusterId, user-UserGroupInformation, token-Token(modifiers-final)]",
            "newValue": "[configuration-Configuration, protocol-Class\u003cT\u003e(modifiers-final), subClusterId-SubClusterId, user-UserGroupInformation, token-Token\u003c? extends TokenIdentifier\u003e]"
          }
        }
      ]
    },
    "bdfad4523f1a5a776e20773c371ce99d0c538ac1": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3673. Create a FailoverProxy for Federation services. Contributed by Subru Krishnan\n\n(cherry picked from commit 3307564a5f8c8abc5fe84efcd05ee0f7dfdd921c)\n",
      "commitDate": "01/08/17 5:28 PM",
      "commitName": "bdfad4523f1a5a776e20773c371ce99d0c538ac1",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,35 @@\n+  public static \u003cT\u003e T createRMProxy(final Configuration configuration,\n+      final Class\u003cT\u003e protocol, SubClusterId subClusterId,\n+      UserGroupInformation user, final Token token) throws IOException {\n+    try {\n+      final YarnConfiguration conf \u003d new YarnConfiguration(configuration);\n+      updateConf(conf, subClusterId);\n+      if (token !\u003d null) {\n+        LOG.info(\n+            \"Creating RMProxy with a token: {} to subcluster: {}\"\n+                + \" for protocol: {}\",\n+            token, subClusterId, protocol.getSimpleName());\n+        user.addToken(token);\n+        setAuthModeInConf(conf);\n+      } else {\n+        LOG.info(\"Creating RMProxy without a token to subcluster: {}\"\n+            + \" for protocol: {}\", subClusterId, protocol.getSimpleName());\n+      }\n+      final T proxyConnection \u003d user.doAs(new PrivilegedExceptionAction\u003cT\u003e() {\n+        @Override\n+        public T run() throws Exception {\n+          return ClientRMProxy.createRMProxy(conf, protocol);\n+        }\n+      });\n+\n+      return proxyConnection;\n+    } catch (IOException e) {\n+      String message \u003d\n+          \"Error while creating of RM application master service proxy for\"\n+              + \" appAttemptId: \" + user;\n+      LOG.info(message);\n+      throw new YarnRuntimeException(message, e);\n+    } catch (InterruptedException e) {\n+      throw new YarnRuntimeException(e);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static \u003cT\u003e T createRMProxy(final Configuration configuration,\n      final Class\u003cT\u003e protocol, SubClusterId subClusterId,\n      UserGroupInformation user, final Token token) throws IOException {\n    try {\n      final YarnConfiguration conf \u003d new YarnConfiguration(configuration);\n      updateConf(conf, subClusterId);\n      if (token !\u003d null) {\n        LOG.info(\n            \"Creating RMProxy with a token: {} to subcluster: {}\"\n                + \" for protocol: {}\",\n            token, subClusterId, protocol.getSimpleName());\n        user.addToken(token);\n        setAuthModeInConf(conf);\n      } else {\n        LOG.info(\"Creating RMProxy without a token to subcluster: {}\"\n            + \" for protocol: {}\", subClusterId, protocol.getSimpleName());\n      }\n      final T proxyConnection \u003d user.doAs(new PrivilegedExceptionAction\u003cT\u003e() {\n        @Override\n        public T run() throws Exception {\n          return ClientRMProxy.createRMProxy(conf, protocol);\n        }\n      });\n\n      return proxyConnection;\n    } catch (IOException e) {\n      String message \u003d\n          \"Error while creating of RM application master service proxy for\"\n              + \" appAttemptId: \" + user;\n      LOG.info(message);\n      throw new YarnRuntimeException(message, e);\n    } catch (InterruptedException e) {\n      throw new YarnRuntimeException(e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/failover/FederationProxyProviderUtil.java"
    }
  }
}