{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BufferPool.java",
  "functionName": "getMappedBuffer",
  "functionId": "getMappedBuffer",
  "sourceFilePath": "hadoop-cloud-storage-project/hadoop-cos/src/main/java/org/apache/hadoop/fs/cosn/BufferPool.java",
  "functionStartLine": 202,
  "functionEndLine": 212,
  "numCommitsSeen": 2,
  "timeTaken": 348,
  "changeHistory": [
    "8a9ede5cff816b66afc37e7c9d2b33aee48795d2"
  ],
  "changeHistoryShort": {
    "8a9ede5cff816b66afc37e7c9d2b33aee48795d2": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8a9ede5cff816b66afc37e7c9d2b33aee48795d2": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-15616. Incorporate Tencent Cloud COS File System Implementation. Contributed by Yang Yu.\n",
      "commitDate": "27/09/19 1:53 AM",
      "commitName": "8a9ede5cff816b66afc37e7c9d2b33aee48795d2",
      "commitAuthor": "Sammi Chen",
      "diff": "@@ -0,0 +1,11 @@\n+  private ByteBufferWrapper getMappedBuffer() throws IOException {\n+    this.checkInitialize();\n+    File tmpFile \u003d File.createTempFile(Constants.BLOCK_TMP_FILE_PREFIX,\n+        Constants.BLOCK_TMP_FILE_SUFFIX, this.diskBufferDir);\n+    tmpFile.deleteOnExit();\n+    RandomAccessFile raf \u003d new RandomAccessFile(tmpFile, \"rw\");\n+    raf.setLength(this.singleBufferSize);\n+    MappedByteBuffer buf \u003d raf.getChannel().map(\n+        FileChannel.MapMode.READ_WRITE, 0, this.singleBufferSize);\n+    return new ByteBufferWrapper(buf, raf, tmpFile);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private ByteBufferWrapper getMappedBuffer() throws IOException {\n    this.checkInitialize();\n    File tmpFile \u003d File.createTempFile(Constants.BLOCK_TMP_FILE_PREFIX,\n        Constants.BLOCK_TMP_FILE_SUFFIX, this.diskBufferDir);\n    tmpFile.deleteOnExit();\n    RandomAccessFile raf \u003d new RandomAccessFile(tmpFile, \"rw\");\n    raf.setLength(this.singleBufferSize);\n    MappedByteBuffer buf \u003d raf.getChannel().map(\n        FileChannel.MapMode.READ_WRITE, 0, this.singleBufferSize);\n    return new ByteBufferWrapper(buf, raf, tmpFile);\n  }",
      "path": "hadoop-cloud-storage-project/hadoop-cos/src/main/java/org/apache/hadoop/fs/cosn/BufferPool.java"
    }
  }
}