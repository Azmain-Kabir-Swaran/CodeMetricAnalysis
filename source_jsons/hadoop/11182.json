{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "WebHdfsHandler.java",
  "functionName": "onAppend",
  "functionId": "onAppend___ctx-ChannelHandlerContext",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/web/webhdfs/WebHdfsHandler.java",
  "functionStartLine": 233,
  "functionEndLine": 245,
  "numCommitsSeen": 19,
  "timeTaken": 1747,
  "changeHistory": [
    "bf74dbf80dc9379d669779a598950908adffb8a7",
    "2848db814a98b83e7546f65a2751e56fb5b2dbe0",
    "bf8e4332cb4c33d0287ae6ecca61b335402ac1c4"
  ],
  "changeHistoryShort": {
    "bf74dbf80dc9379d669779a598950908adffb8a7": "Ybodychange",
    "2848db814a98b83e7546f65a2751e56fb5b2dbe0": "Ybodychange",
    "bf8e4332cb4c33d0287ae6ecca61b335402ac1c4": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bf74dbf80dc9379d669779a598950908adffb8a7": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7959. WebHdfs logging is missing on Datanode (Kihwal Lee via sjlee)\n",
      "commitDate": "24/06/16 2:44 PM",
      "commitName": "bf74dbf80dc9379d669779a598950908adffb8a7",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "23/05/16 3:52 PM",
      "commitNameOld": "4b0f55b6ea1665e2118fd573f72a6fcd1fce20d6",
      "commitAuthorOld": "Allen Wittenauer",
      "daysBetweenCommits": 31.95,
      "commitsBetweenForRepo": 255,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n   private void onAppend(ChannelHandlerContext ctx) throws IOException {\n     writeContinueHeader(ctx);\n     final String nnId \u003d params.namenodeId();\n     final int bufferSize \u003d params.bufferSize();\n \n     DFSClient dfsClient \u003d newDfsClient(nnId, conf);\n     OutputStream out \u003d dfsClient.append(path, bufferSize,\n         EnumSet.of(CreateFlag.APPEND), null, null);\n-    DefaultHttpResponse resp \u003d new DefaultHttpResponse(HTTP_1_1, OK);\n+    resp \u003d new DefaultHttpResponse(HTTP_1_1, OK);\n     resp.headers().set(CONTENT_LENGTH, 0);\n     ctx.pipeline().replace(this, HdfsWriter.class.getSimpleName(),\n       new HdfsWriter(dfsClient, out, resp));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void onAppend(ChannelHandlerContext ctx) throws IOException {\n    writeContinueHeader(ctx);\n    final String nnId \u003d params.namenodeId();\n    final int bufferSize \u003d params.bufferSize();\n\n    DFSClient dfsClient \u003d newDfsClient(nnId, conf);\n    OutputStream out \u003d dfsClient.append(path, bufferSize,\n        EnumSet.of(CreateFlag.APPEND), null, null);\n    resp \u003d new DefaultHttpResponse(HTTP_1_1, OK);\n    resp.headers().set(CONTENT_LENGTH, 0);\n    ctx.pipeline().replace(this, HdfsWriter.class.getSimpleName(),\n      new HdfsWriter(dfsClient, out, resp));\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/web/webhdfs/WebHdfsHandler.java",
      "extendedDetails": {}
    },
    "2848db814a98b83e7546f65a2751e56fb5b2dbe0": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3689. Add support for variable length block. Contributed by Jing Zhao.\n",
      "commitDate": "27/01/15 12:58 PM",
      "commitName": "2848db814a98b83e7546f65a2751e56fb5b2dbe0",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "11/12/14 12:36 PM",
      "commitNameOld": "b9f6d0c956f0278c8b9b83e05b523a442a730ebb",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 47.02,
      "commitsBetweenForRepo": 264,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,13 @@\n   private void onAppend(ChannelHandlerContext ctx) throws IOException {\n     writeContinueHeader(ctx);\n     final String nnId \u003d params.namenodeId();\n     final int bufferSize \u003d params.bufferSize();\n \n     DFSClient dfsClient \u003d newDfsClient(nnId, conf);\n-    OutputStream out \u003d dfsClient.append(path, bufferSize, null, null);\n+    OutputStream out \u003d dfsClient.append(path, bufferSize,\n+        EnumSet.of(CreateFlag.APPEND), null, null);\n     DefaultHttpResponse resp \u003d new DefaultHttpResponse(HTTP_1_1, OK);\n     resp.headers().set(CONTENT_LENGTH, 0);\n     ctx.pipeline().replace(this, HdfsWriter.class.getSimpleName(),\n       new HdfsWriter(dfsClient, out, resp));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void onAppend(ChannelHandlerContext ctx) throws IOException {\n    writeContinueHeader(ctx);\n    final String nnId \u003d params.namenodeId();\n    final int bufferSize \u003d params.bufferSize();\n\n    DFSClient dfsClient \u003d newDfsClient(nnId, conf);\n    OutputStream out \u003d dfsClient.append(path, bufferSize,\n        EnumSet.of(CreateFlag.APPEND), null, null);\n    DefaultHttpResponse resp \u003d new DefaultHttpResponse(HTTP_1_1, OK);\n    resp.headers().set(CONTENT_LENGTH, 0);\n    ctx.pipeline().replace(this, HdfsWriter.class.getSimpleName(),\n      new HdfsWriter(dfsClient, out, resp));\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/web/webhdfs/WebHdfsHandler.java",
      "extendedDetails": {}
    },
    "bf8e4332cb4c33d0287ae6ecca61b335402ac1c4": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-7279. Use netty to implement DatanodeWebHdfsMethods. Contributed by Haohui Mai.\n",
      "commitDate": "17/11/14 11:42 AM",
      "commitName": "bf8e4332cb4c33d0287ae6ecca61b335402ac1c4",
      "commitAuthor": "Haohui Mai",
      "diff": "@@ -0,0 +1,12 @@\n+  private void onAppend(ChannelHandlerContext ctx) throws IOException {\n+    writeContinueHeader(ctx);\n+    final String nnId \u003d params.namenodeId();\n+    final int bufferSize \u003d params.bufferSize();\n+\n+    DFSClient dfsClient \u003d newDfsClient(nnId, conf);\n+    OutputStream out \u003d dfsClient.append(path, bufferSize, null, null);\n+    DefaultHttpResponse resp \u003d new DefaultHttpResponse(HTTP_1_1, OK);\n+    resp.headers().set(CONTENT_LENGTH, 0);\n+    ctx.pipeline().replace(this, HdfsWriter.class.getSimpleName(),\n+      new HdfsWriter(dfsClient, out, resp));\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void onAppend(ChannelHandlerContext ctx) throws IOException {\n    writeContinueHeader(ctx);\n    final String nnId \u003d params.namenodeId();\n    final int bufferSize \u003d params.bufferSize();\n\n    DFSClient dfsClient \u003d newDfsClient(nnId, conf);\n    OutputStream out \u003d dfsClient.append(path, bufferSize, null, null);\n    DefaultHttpResponse resp \u003d new DefaultHttpResponse(HTTP_1_1, OK);\n    resp.headers().set(CONTENT_LENGTH, 0);\n    ctx.pipeline().replace(this, HdfsWriter.class.getSimpleName(),\n      new HdfsWriter(dfsClient, out, resp));\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/web/webhdfs/WebHdfsHandler.java"
    }
  }
}