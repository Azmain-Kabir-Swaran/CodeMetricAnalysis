{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMContainerImpl.java",
  "functionName": "setContainerId",
  "functionId": "setContainerId___containerId-ContainerId",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmcontainer/RMContainerImpl.java",
  "functionStartLine": 912,
  "functionEndLine": 921,
  "numCommitsSeen": 69,
  "timeTaken": 3665,
  "changeHistory": [
    "f93ecf5c1e0b3db27424963814fc01ec43eb76e0",
    "296c5de0cfee88389cf9f90263280b2034e54cd5",
    "de3b4aac561258ad242a3c5ed1c919428893fd4c"
  ],
  "changeHistoryShort": {
    "f93ecf5c1e0b3db27424963814fc01ec43eb76e0": "Ybodychange",
    "296c5de0cfee88389cf9f90263280b2034e54cd5": "Ybodychange",
    "de3b4aac561258ad242a3c5ed1c919428893fd4c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f93ecf5c1e0b3db27424963814fc01ec43eb76e0": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8330.  Improved publishing ALLOCATED events to ATS.\n            Contributed by Suma Shivaprasad\n",
      "commitDate": "25/07/18 3:49 PM",
      "commitName": "f93ecf5c1e0b3db27424963814fc01ec43eb76e0",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "16/07/18 10:54 AM",
      "commitNameOld": "752dcce5f4cf0f6ebcb40a61f622f1a885c4bda7",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 9.2,
      "commitsBetweenForRepo": 67,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,10 @@\n   public void setContainerId(ContainerId containerId) {\n     // In some cases, for example, global scheduling. It is possible that\n     // container created without container-id assigned, so we will publish\n     // container creation event to timeline service when id assigned.\n     container.setId(containerId);\n \n     if (containerId !\u003d null) {\n       rmContext.getRMApplicationHistoryWriter().containerStarted(this);\n     }\n-    // If saveNonAMContainerMetaInfo is true, store system metrics for all\n-    // containers. If false, and if this container is marked as the AM, metrics\n-    // will still be published for this container, but that calculation happens\n-    // later.\n-    if (saveNonAMContainerMetaInfo \u0026\u0026 null !\u003d container.getId()) {\n-      rmContext.getSystemMetricsPublisher().containerCreated(\n-          this, this.creationTime);\n-    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setContainerId(ContainerId containerId) {\n    // In some cases, for example, global scheduling. It is possible that\n    // container created without container-id assigned, so we will publish\n    // container creation event to timeline service when id assigned.\n    container.setId(containerId);\n\n    if (containerId !\u003d null) {\n      rmContext.getRMApplicationHistoryWriter().containerStarted(this);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmcontainer/RMContainerImpl.java",
      "extendedDetails": {}
    },
    "296c5de0cfee88389cf9f90263280b2034e54cd5": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5873. RM crashes with NPE if generic application history is enabled. Contributed by Varun Saxena.\n",
      "commitDate": "14/11/16 9:26 PM",
      "commitName": "296c5de0cfee88389cf9f90263280b2034e54cd5",
      "commitAuthor": "Rohith Sharma K S",
      "commitDateOld": "10/11/16 2:35 PM",
      "commitNameOld": "93eeb13164707d0e3556c2bf737bd2ee09a335c6",
      "commitAuthorOld": "Eric Payne",
      "daysBetweenCommits": 4.29,
      "commitsBetweenForRepo": 20,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,18 @@\n   public void setContainerId(ContainerId containerId) {\n     // In some cases, for example, global scheduling. It is possible that\n     // container created without container-id assigned, so we will publish\n     // container creation event to timeline service when id assigned.\n     container.setId(containerId);\n \n+    if (containerId !\u003d null) {\n+      rmContext.getRMApplicationHistoryWriter().containerStarted(this);\n+    }\n     // If saveNonAMContainerMetaInfo is true, store system metrics for all\n     // containers. If false, and if this container is marked as the AM, metrics\n     // will still be published for this container, but that calculation happens\n     // later.\n     if (saveNonAMContainerMetaInfo \u0026\u0026 null !\u003d container.getId()) {\n       rmContext.getSystemMetricsPublisher().containerCreated(\n           this, this.creationTime);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setContainerId(ContainerId containerId) {\n    // In some cases, for example, global scheduling. It is possible that\n    // container created without container-id assigned, so we will publish\n    // container creation event to timeline service when id assigned.\n    container.setId(containerId);\n\n    if (containerId !\u003d null) {\n      rmContext.getRMApplicationHistoryWriter().containerStarted(this);\n    }\n    // If saveNonAMContainerMetaInfo is true, store system metrics for all\n    // containers. If false, and if this container is marked as the AM, metrics\n    // will still be published for this container, but that calculation happens\n    // later.\n    if (saveNonAMContainerMetaInfo \u0026\u0026 null !\u003d container.getId()) {\n      rmContext.getSystemMetricsPublisher().containerCreated(\n          this, this.creationTime);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmcontainer/RMContainerImpl.java",
      "extendedDetails": {}
    },
    "de3b4aac561258ad242a3c5ed1c919428893fd4c": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5716. Add global scheduler interface definition and update CapacityScheduler to use it. Contributed by Wangda Tan\n",
      "commitDate": "07/11/16 10:14 AM",
      "commitName": "de3b4aac561258ad242a3c5ed1c919428893fd4c",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,15 @@\n+  public void setContainerId(ContainerId containerId) {\n+    // In some cases, for example, global scheduling. It is possible that\n+    // container created without container-id assigned, so we will publish\n+    // container creation event to timeline service when id assigned.\n+    container.setId(containerId);\n+\n+    // If saveNonAMContainerMetaInfo is true, store system metrics for all\n+    // containers. If false, and if this container is marked as the AM, metrics\n+    // will still be published for this container, but that calculation happens\n+    // later.\n+    if (saveNonAMContainerMetaInfo \u0026\u0026 null !\u003d container.getId()) {\n+      rmContext.getSystemMetricsPublisher().containerCreated(\n+          this, this.creationTime);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void setContainerId(ContainerId containerId) {\n    // In some cases, for example, global scheduling. It is possible that\n    // container created without container-id assigned, so we will publish\n    // container creation event to timeline service when id assigned.\n    container.setId(containerId);\n\n    // If saveNonAMContainerMetaInfo is true, store system metrics for all\n    // containers. If false, and if this container is marked as the AM, metrics\n    // will still be published for this container, but that calculation happens\n    // later.\n    if (saveNonAMContainerMetaInfo \u0026\u0026 null !\u003d container.getId()) {\n      rmContext.getSystemMetricsPublisher().containerCreated(\n          this, this.creationTime);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmcontainer/RMContainerImpl.java"
    }
  }
}