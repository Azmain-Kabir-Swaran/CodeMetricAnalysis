{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TempQueuePerPartition.java",
  "functionName": "deductActuallyToBePreempted",
  "functionId": "deductActuallyToBePreempted___rc-ResourceCalculator__cluster-Resource__toBeDeduct-Resource",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/TempQueuePerPartition.java",
  "functionStartLine": 299,
  "functionEndLine": 307,
  "numCommitsSeen": 14,
  "timeTaken": 2368,
  "changeHistory": [
    "90dd3a8148468ac37a3f2173ad8d45e38bfcb0c9",
    "bb62e0592566b2fcae7136b30972aad2d3ac55b0"
  ],
  "changeHistoryShort": {
    "90dd3a8148468ac37a3f2173ad8d45e38bfcb0c9": "Ybodychange",
    "bb62e0592566b2fcae7136b30972aad2d3ac55b0": "Yintroduced"
  },
  "changeHistoryDetails": {
    "90dd3a8148468ac37a3f2173ad8d45e38bfcb0c9": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2009. CapacityScheduler: Add intra-queue preemption for app priority support. (Sunil G via wangda)\n",
      "commitDate": "31/10/16 3:18 PM",
      "commitName": "90dd3a8148468ac37a3f2173ad8d45e38bfcb0c9",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "29/05/16 8:54 AM",
      "commitNameOld": "42f90ab885d9693fcc1e52f9637f7de4111110ae",
      "commitAuthorOld": "Varun Vasudev",
      "daysBetweenCommits": 155.27,
      "commitsBetweenForRepo": 1196,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,9 @@\n   public void deductActuallyToBePreempted(ResourceCalculator rc,\n       Resource cluster, Resource toBeDeduct) {\n-    if (Resources.greaterThan(rc, cluster, actuallyToBePreempted, toBeDeduct)) {\n-      Resources.subtractFrom(actuallyToBePreempted, toBeDeduct);\n+    if (Resources.greaterThan(rc, cluster, getActuallyToBePreempted(),\n+        toBeDeduct)) {\n+      Resources.subtractFrom(getActuallyToBePreempted(), toBeDeduct);\n     }\n-    actuallyToBePreempted \u003d Resources.max(rc, cluster, actuallyToBePreempted,\n-        Resources.none());\n+    setActuallyToBePreempted(Resources.max(rc, cluster,\n+        getActuallyToBePreempted(), Resources.none()));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void deductActuallyToBePreempted(ResourceCalculator rc,\n      Resource cluster, Resource toBeDeduct) {\n    if (Resources.greaterThan(rc, cluster, getActuallyToBePreempted(),\n        toBeDeduct)) {\n      Resources.subtractFrom(getActuallyToBePreempted(), toBeDeduct);\n    }\n    setActuallyToBePreempted(Resources.max(rc, cluster,\n        getActuallyToBePreempted(), Resources.none()));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/TempQueuePerPartition.java",
      "extendedDetails": {}
    },
    "bb62e0592566b2fcae7136b30972aad2d3ac55b0": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4390. Do surgical preemption based on reserved container in CapacityScheduler. Contributed by Wangda Tan\n",
      "commitDate": "05/05/16 12:56 PM",
      "commitName": "bb62e0592566b2fcae7136b30972aad2d3ac55b0",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,8 @@\n+  public void deductActuallyToBePreempted(ResourceCalculator rc,\n+      Resource cluster, Resource toBeDeduct) {\n+    if (Resources.greaterThan(rc, cluster, actuallyToBePreempted, toBeDeduct)) {\n+      Resources.subtractFrom(actuallyToBePreempted, toBeDeduct);\n+    }\n+    actuallyToBePreempted \u003d Resources.max(rc, cluster, actuallyToBePreempted,\n+        Resources.none());\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void deductActuallyToBePreempted(ResourceCalculator rc,\n      Resource cluster, Resource toBeDeduct) {\n    if (Resources.greaterThan(rc, cluster, actuallyToBePreempted, toBeDeduct)) {\n      Resources.subtractFrom(actuallyToBePreempted, toBeDeduct);\n    }\n    actuallyToBePreempted \u003d Resources.max(rc, cluster, actuallyToBePreempted,\n        Resources.none());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/TempQueuePerPartition.java"
    }
  }
}