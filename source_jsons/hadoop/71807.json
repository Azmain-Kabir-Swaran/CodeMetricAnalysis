{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "KMSACLs.java",
  "functionName": "hasAccess",
  "functionId": "hasAccess___type-Type__ugi-UserGroupInformation",
  "sourceFilePath": "hadoop-common-project/hadoop-kms/src/main/java/org/apache/hadoop/crypto/key/kms/server/KMSACLs.java",
  "functionStartLine": 237,
  "functionEndLine": 261,
  "numCommitsSeen": 17,
  "timeTaken": 2035,
  "changeHistory": [
    "438ef4951a38171f193eaf2631da31d0f4bc3c62",
    "be529dade182dd2f3718fc52133f43e83dce191f",
    "d9a03e272adbf3e9fde501610400f18fb4f6b865",
    "e86c9ef6517313aaa0e4575261a462f2f55d43dc",
    "80d7f0911cf42eee001fe1a3d6958b82635df671",
    "17d4fbbf0af9b93de9502afb274e91533140d1c6"
  ],
  "changeHistoryShort": {
    "438ef4951a38171f193eaf2631da31d0f4bc3c62": "Ybodychange",
    "be529dade182dd2f3718fc52133f43e83dce191f": "Ybodychange",
    "d9a03e272adbf3e9fde501610400f18fb4f6b865": "Ybodychange",
    "e86c9ef6517313aaa0e4575261a462f2f55d43dc": "Ymultichange(Yparameterchange,Ybodychange)",
    "80d7f0911cf42eee001fe1a3d6958b82635df671": "Ybodychange",
    "17d4fbbf0af9b93de9502afb274e91533140d1c6": "Yintroduced"
  },
  "changeHistoryDetails": {
    "438ef4951a38171f193eaf2631da31d0f4bc3c62": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15455. Incorrect debug message in KMSACL#hasAccess. Contributed by Yuen-Kuei Hsueh.\n",
      "commitDate": "28/05/18 5:32 PM",
      "commitName": "438ef4951a38171f193eaf2631da31d0f4bc3c62",
      "commitAuthor": "Wei-Chiu Chuang",
      "commitDateOld": "16/10/17 2:19 PM",
      "commitNameOld": "b7ff624c767f76ca007d695afdc7a3815fceb04c",
      "commitAuthorOld": "Xiao Chen",
      "daysBetweenCommits": 224.13,
      "commitsBetweenForRepo": 2158,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n   public boolean hasAccess(Type type, UserGroupInformation ugi) {\n     boolean access \u003d acls.get(type).isUserAllowed(ugi);\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Checking user [{}] for: {} {} \", ugi.getShortUserName(),\n           type.toString(), acls.get(type).getAclString());\n     }\n     if (access) {\n       AccessControlList blacklist \u003d blacklistedAcls.get(type);\n       access \u003d (blacklist \u003d\u003d null) || !blacklist.isUserInList(ugi);\n       if (LOG.isDebugEnabled()) {\n         if (blacklist \u003d\u003d null) {\n           LOG.debug(\"No blacklist for {}\", type.toString());\n         } else if (access) {\n-          LOG.debug(\"user is in {}\" , blacklist.getAclString());\n-        } else {\n           LOG.debug(\"user is not in {}\" , blacklist.getAclString());\n+        } else {\n+          LOG.debug(\"user is in {}\" , blacklist.getAclString());\n         }\n       }\n     }\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"User: [{}], Type: {} Result: {}\", ugi.getShortUserName(),\n           type.toString(), access);\n     }\n     return access;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean hasAccess(Type type, UserGroupInformation ugi) {\n    boolean access \u003d acls.get(type).isUserAllowed(ugi);\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Checking user [{}] for: {} {} \", ugi.getShortUserName(),\n          type.toString(), acls.get(type).getAclString());\n    }\n    if (access) {\n      AccessControlList blacklist \u003d blacklistedAcls.get(type);\n      access \u003d (blacklist \u003d\u003d null) || !blacklist.isUserInList(ugi);\n      if (LOG.isDebugEnabled()) {\n        if (blacklist \u003d\u003d null) {\n          LOG.debug(\"No blacklist for {}\", type.toString());\n        } else if (access) {\n          LOG.debug(\"user is not in {}\" , blacklist.getAclString());\n        } else {\n          LOG.debug(\"user is in {}\" , blacklist.getAclString());\n        }\n      }\n    }\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"User: [{}], Type: {} Result: {}\", ugi.getShortUserName(),\n          type.toString(), access);\n    }\n    return access;\n  }",
      "path": "hadoop-common-project/hadoop-kms/src/main/java/org/apache/hadoop/crypto/key/kms/server/KMSACLs.java",
      "extendedDetails": {}
    },
    "be529dade182dd2f3718fc52133f43e83dce191f": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13903. Improvements to KMS logging to help debug authorization errors. (Tristan Stevens via asuresh)\n",
      "commitDate": "11/01/17 12:26 AM",
      "commitName": "be529dade182dd2f3718fc52133f43e83dce191f",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "15/08/16 6:14 PM",
      "commitNameOld": "9daa9979a1f92fb3230361c10ddfcc1633795c0e",
      "commitAuthorOld": "Xiao Chen",
      "daysBetweenCommits": 148.3,
      "commitsBetweenForRepo": 992,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,25 @@\n   public boolean hasAccess(Type type, UserGroupInformation ugi) {\n     boolean access \u003d acls.get(type).isUserAllowed(ugi);\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"Checking user [{}] for: {} {} \", ugi.getShortUserName(),\n+          type.toString(), acls.get(type).getAclString());\n+    }\n     if (access) {\n       AccessControlList blacklist \u003d blacklistedAcls.get(type);\n       access \u003d (blacklist \u003d\u003d null) || !blacklist.isUserInList(ugi);\n+      if (LOG.isDebugEnabled()) {\n+        if (blacklist \u003d\u003d null) {\n+          LOG.debug(\"No blacklist for {}\", type.toString());\n+        } else if (access) {\n+          LOG.debug(\"user is in {}\" , blacklist.getAclString());\n+        } else {\n+          LOG.debug(\"user is not in {}\" , blacklist.getAclString());\n+        }\n+      }\n+    }\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"User: [{}], Type: {} Result: {}\", ugi.getShortUserName(),\n+          type.toString(), access);\n     }\n     return access;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean hasAccess(Type type, UserGroupInformation ugi) {\n    boolean access \u003d acls.get(type).isUserAllowed(ugi);\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Checking user [{}] for: {} {} \", ugi.getShortUserName(),\n          type.toString(), acls.get(type).getAclString());\n    }\n    if (access) {\n      AccessControlList blacklist \u003d blacklistedAcls.get(type);\n      access \u003d (blacklist \u003d\u003d null) || !blacklist.isUserInList(ugi);\n      if (LOG.isDebugEnabled()) {\n        if (blacklist \u003d\u003d null) {\n          LOG.debug(\"No blacklist for {}\", type.toString());\n        } else if (access) {\n          LOG.debug(\"user is in {}\" , blacklist.getAclString());\n        } else {\n          LOG.debug(\"user is not in {}\" , blacklist.getAclString());\n        }\n      }\n    }\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"User: [{}], Type: {} Result: {}\", ugi.getShortUserName(),\n          type.toString(), access);\n    }\n    return access;\n  }",
      "path": "hadoop-common-project/hadoop-kms/src/main/java/org/apache/hadoop/crypto/key/kms/server/KMSACLs.java",
      "extendedDetails": {}
    },
    "d9a03e272adbf3e9fde501610400f18fb4f6b865": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10863. KMS should have a blacklist for decrypting EEKs. (asuresh via tucu)\n",
      "commitDate": "03/09/14 3:08 PM",
      "commitName": "d9a03e272adbf3e9fde501610400f18fb4f6b865",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "14/08/14 10:03 PM",
      "commitNameOld": "e86c9ef6517313aaa0e4575261a462f2f55d43dc",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 19.71,
      "commitsBetweenForRepo": 126,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,3 +1,8 @@\n   public boolean hasAccess(Type type, UserGroupInformation ugi) {\n-    return acls.get(type).isUserAllowed(ugi);\n+    boolean access \u003d acls.get(type).isUserAllowed(ugi);\n+    if (access) {\n+      AccessControlList blacklist \u003d blacklistedAcls.get(type);\n+      access \u003d (blacklist \u003d\u003d null) || !blacklist.isUserInList(ugi);\n+    }\n+    return access;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean hasAccess(Type type, UserGroupInformation ugi) {\n    boolean access \u003d acls.get(type).isUserAllowed(ugi);\n    if (access) {\n      AccessControlList blacklist \u003d blacklistedAcls.get(type);\n      access \u003d (blacklist \u003d\u003d null) || !blacklist.isUserInList(ugi);\n    }\n    return access;\n  }",
      "path": "hadoop-common-project/hadoop-kms/src/main/java/org/apache/hadoop/crypto/key/kms/server/KMSACLs.java",
      "extendedDetails": {}
    },
    "e86c9ef6517313aaa0e4575261a462f2f55d43dc": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-10770. KMS add delegation token support. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1618096 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/08/14 10:03 PM",
      "commitName": "e86c9ef6517313aaa0e4575261a462f2f55d43dc",
      "commitAuthor": "Alejandro Abdelnur",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-10770. KMS add delegation token support. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1618096 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "14/08/14 10:03 PM",
          "commitName": "e86c9ef6517313aaa0e4575261a462f2f55d43dc",
          "commitAuthor": "Alejandro Abdelnur",
          "commitDateOld": "21/07/14 1:55 PM",
          "commitNameOld": "0c1469ece38556cf02a0c7bd23761d6bf79d9a64",
          "commitAuthorOld": "Alejandro Abdelnur",
          "daysBetweenCommits": 24.34,
          "commitsBetweenForRepo": 206,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,4 +1,3 @@\n-  public boolean hasAccess(Type type, String user) {\n-    UserGroupInformation ugi \u003d UserGroupInformation.createRemoteUser(user);\n+  public boolean hasAccess(Type type, UserGroupInformation ugi) {\n     return acls.get(type).isUserAllowed(ugi);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean hasAccess(Type type, UserGroupInformation ugi) {\n    return acls.get(type).isUserAllowed(ugi);\n  }",
          "path": "hadoop-common-project/hadoop-kms/src/main/java/org/apache/hadoop/crypto/key/kms/server/KMSACLs.java",
          "extendedDetails": {
            "oldValue": "[type-Type, user-String]",
            "newValue": "[type-Type, ugi-UserGroupInformation]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-10770. KMS add delegation token support. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1618096 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "14/08/14 10:03 PM",
          "commitName": "e86c9ef6517313aaa0e4575261a462f2f55d43dc",
          "commitAuthor": "Alejandro Abdelnur",
          "commitDateOld": "21/07/14 1:55 PM",
          "commitNameOld": "0c1469ece38556cf02a0c7bd23761d6bf79d9a64",
          "commitAuthorOld": "Alejandro Abdelnur",
          "daysBetweenCommits": 24.34,
          "commitsBetweenForRepo": 206,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,4 +1,3 @@\n-  public boolean hasAccess(Type type, String user) {\n-    UserGroupInformation ugi \u003d UserGroupInformation.createRemoteUser(user);\n+  public boolean hasAccess(Type type, UserGroupInformation ugi) {\n     return acls.get(type).isUserAllowed(ugi);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean hasAccess(Type type, UserGroupInformation ugi) {\n    return acls.get(type).isUserAllowed(ugi);\n  }",
          "path": "hadoop-common-project/hadoop-kms/src/main/java/org/apache/hadoop/crypto/key/kms/server/KMSACLs.java",
          "extendedDetails": {}
        }
      ]
    },
    "80d7f0911cf42eee001fe1a3d6958b82635df671": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10824. Refactor KMSACLs to avoid locking. (Benoy Antony via umamahesh)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1610969 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/07/14 4:24 AM",
      "commitName": "80d7f0911cf42eee001fe1a3d6958b82635df671",
      "commitAuthor": "Uma Maheswara Rao G",
      "commitDateOld": "05/05/14 2:43 PM",
      "commitNameOld": "17d4fbbf0af9b93de9502afb274e91533140d1c6",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 71.57,
      "commitsBetweenForRepo": 441,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,4 @@\n   public boolean hasAccess(Type type, String user) {\n     UserGroupInformation ugi \u003d UserGroupInformation.createRemoteUser(user);\n-    AccessControlList acl \u003d null;\n-    lock.readLock().lock();\n-    try {\n-      acl \u003d acls.get(type);\n-    } finally {\n-      lock.readLock().unlock();\n-    }\n-    return acl.isUserAllowed(ugi);\n+    return acls.get(type).isUserAllowed(ugi);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean hasAccess(Type type, String user) {\n    UserGroupInformation ugi \u003d UserGroupInformation.createRemoteUser(user);\n    return acls.get(type).isUserAllowed(ugi);\n  }",
      "path": "hadoop-common-project/hadoop-kms/src/main/java/org/apache/hadoop/crypto/key/kms/server/KMSACLs.java",
      "extendedDetails": {}
    },
    "17d4fbbf0af9b93de9502afb274e91533140d1c6": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-10433. Key Management Server based on KeyProvider API. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1592637 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/05/14 2:43 PM",
      "commitName": "17d4fbbf0af9b93de9502afb274e91533140d1c6",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,11 @@\n+  public boolean hasAccess(Type type, String user) {\n+    UserGroupInformation ugi \u003d UserGroupInformation.createRemoteUser(user);\n+    AccessControlList acl \u003d null;\n+    lock.readLock().lock();\n+    try {\n+      acl \u003d acls.get(type);\n+    } finally {\n+      lock.readLock().unlock();\n+    }\n+    return acl.isUserAllowed(ugi);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean hasAccess(Type type, String user) {\n    UserGroupInformation ugi \u003d UserGroupInformation.createRemoteUser(user);\n    AccessControlList acl \u003d null;\n    lock.readLock().lock();\n    try {\n      acl \u003d acls.get(type);\n    } finally {\n      lock.readLock().unlock();\n    }\n    return acl.isUserAllowed(ugi);\n  }",
      "path": "hadoop-common-project/hadoop-kms/src/main/java/org/apache/hadoop/crypto/key/kms/server/KMSACLs.java"
    }
  }
}