{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CommandWithDestination.java",
  "functionName": "processArguments",
  "functionId": "processArguments___args-LinkedList__PathData__",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/CommandWithDestination.java",
  "functionStartLine": 217,
  "functionEndLine": 238,
  "numCommitsSeen": 33,
  "timeTaken": 1928,
  "changeHistory": [
    "9221704f857e33a5f9e00c19d3705e46e94f427b",
    "8bfaa80037365c0790083313a905d1e7d88b0682",
    "97d104767d57629290cdab74941862cc45f09ee5",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "77b4fd6572d6f928ea5bd86c8b00caeba7bb3b99"
  ],
  "changeHistoryShort": {
    "9221704f857e33a5f9e00c19d3705e46e94f427b": "Ybodychange",
    "8bfaa80037365c0790083313a905d1e7d88b0682": "Ybodychange",
    "97d104767d57629290cdab74941862cc45f09ee5": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "77b4fd6572d6f928ea5bd86c8b00caeba7bb3b99": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9221704f857e33a5f9e00c19d3705e46e94f427b": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16490. Avoid/handle cached 404s during S3A file creation.\n\nContributed by Steve Loughran.\n\nThis patch avoids issuing any HEAD path request when creating a file with overwrite\u003dtrue,\nso 404s will not end up in the S3 load balancers unless someone calls getFileStatus/exists/isFile\nin their own code.\n\nThe Hadoop FsShell CommandWithDestination class is modified to not register uncreated files\nfor deleteOnExit(), because that calls exists() and so can place the 404 in the cache, even\nafter S3A is patched to not do it itself.\n\nBecause S3Guard knows when a file should be present, it adds a special FileNotFound retry policy\nindependently configurable from other retry policies; it is also exponential, but with\ndifferent parameters. This is because every HEAD request will refresh any 404 cached in\nthe S3 Load Balancers. It\u0027s not enough to retry: we have to have a suitable gap between\nattempts to (hopefully) ensure any cached entry wil be gone.\n\nThe options and values are:\n\nfs.s3a.s3guard.consistency.retry.interval: 2s\nfs.s3a.s3guard.consistency.retry.limit: 7\n\nThe S3A copy() method used during rename() raises a RemoteFileChangedException which is not caught\nso not downgraded to false. Thus: when a rename is unrecoverable, this fact is propagated.\n\nCopy operations without S3Guard lack the confidence that the file exists, so don\u0027t retry the same way:\nit will fail fast with a different error message. However, because create(path, overwrite\u003dfalse) no\nlonger does HEAD path, we can at least be confident that S3A itself is not creating those cached\n404 markers.\n\nChange-Id: Ia7807faad8b9a8546836cb19f816cccf17cca26d\n",
      "commitDate": "11/09/19 8:46 AM",
      "commitName": "9221704f857e33a5f9e00c19d3705e46e94f427b",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "29/01/19 4:45 PM",
      "commitNameOld": "b3bc94ebfd7cbf959bd33b8d85be80c4a8a46574",
      "commitAuthorOld": "Hanisha Koneru",
      "daysBetweenCommits": 224.63,
      "commitsBetweenForRepo": 1743,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,22 @@\n   protected void processArguments(LinkedList\u003cPathData\u003e args)\n   throws IOException {\n     // if more than one arg, the destination must be a directory\n     // if one arg, the dst must not exist or must be a directory\n     if (args.size() \u003e 1) {\n       if (!dst.exists) {\n         throw new PathNotFoundException(dst.toString());\n       }\n       if (!dst.stat.isDirectory()) {\n         throw new PathIsNotDirectoryException(dst.toString());\n       }\n     } else if (dst.exists) {\n       if (!dst.stat.isDirectory() \u0026\u0026 !overwrite) {\n+        LOG.debug(\"Destination file exists: {}\", dst.stat);\n         throw new PathExistsException(dst.toString());\n       }\n     } else if (!dst.parentExists()) {\n       throw new PathNotFoundException(dst.toString())\n           .withFullyQualifiedPath(dst.path.toUri().toString());\n     }\n     super.processArguments(args);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void processArguments(LinkedList\u003cPathData\u003e args)\n  throws IOException {\n    // if more than one arg, the destination must be a directory\n    // if one arg, the dst must not exist or must be a directory\n    if (args.size() \u003e 1) {\n      if (!dst.exists) {\n        throw new PathNotFoundException(dst.toString());\n      }\n      if (!dst.stat.isDirectory()) {\n        throw new PathIsNotDirectoryException(dst.toString());\n      }\n    } else if (dst.exists) {\n      if (!dst.stat.isDirectory() \u0026\u0026 !overwrite) {\n        LOG.debug(\"Destination file exists: {}\", dst.stat);\n        throw new PathExistsException(dst.toString());\n      }\n    } else if (!dst.parentExists()) {\n      throw new PathNotFoundException(dst.toString())\n          .withFullyQualifiedPath(dst.path.toUri().toString());\n    }\n    super.processArguments(args);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/CommandWithDestination.java",
      "extendedDetails": {}
    },
    "8bfaa80037365c0790083313a905d1e7d88b0682": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10965. Print fully qualified path in CommandWithDestination error messages. Contributed by John Zhuge.\n",
      "commitDate": "28/03/16 2:13 PM",
      "commitName": "8bfaa80037365c0790083313a905d1e7d88b0682",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "24/09/15 9:36 PM",
      "commitNameOld": "3187dbd7a8b6376134a00e5c9c4693d8eb762c9d",
      "commitAuthorOld": "Yongjun Zhang",
      "daysBetweenCommits": 185.69,
      "commitsBetweenForRepo": 1233,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,21 @@\n   protected void processArguments(LinkedList\u003cPathData\u003e args)\n   throws IOException {\n     // if more than one arg, the destination must be a directory\n     // if one arg, the dst must not exist or must be a directory\n     if (args.size() \u003e 1) {\n       if (!dst.exists) {\n         throw new PathNotFoundException(dst.toString());\n       }\n       if (!dst.stat.isDirectory()) {\n         throw new PathIsNotDirectoryException(dst.toString());\n       }\n     } else if (dst.exists) {\n       if (!dst.stat.isDirectory() \u0026\u0026 !overwrite) {\n         throw new PathExistsException(dst.toString());\n       }\n     } else if (!dst.parentExists()) {\n-      throw new PathNotFoundException(dst.toString());\n+      throw new PathNotFoundException(dst.toString())\n+          .withFullyQualifiedPath(dst.path.toUri().toString());\n     }\n     super.processArguments(args);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void processArguments(LinkedList\u003cPathData\u003e args)\n  throws IOException {\n    // if more than one arg, the destination must be a directory\n    // if one arg, the dst must not exist or must be a directory\n    if (args.size() \u003e 1) {\n      if (!dst.exists) {\n        throw new PathNotFoundException(dst.toString());\n      }\n      if (!dst.stat.isDirectory()) {\n        throw new PathIsNotDirectoryException(dst.toString());\n      }\n    } else if (dst.exists) {\n      if (!dst.stat.isDirectory() \u0026\u0026 !overwrite) {\n        throw new PathExistsException(dst.toString());\n      }\n    } else if (!dst.parentExists()) {\n      throw new PathNotFoundException(dst.toString())\n          .withFullyQualifiedPath(dst.path.toUri().toString());\n    }\n    super.processArguments(args);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/CommandWithDestination.java",
      "extendedDetails": {}
    },
    "97d104767d57629290cdab74941862cc45f09ee5": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-8131. FsShell put doesn\u0027t correctly handle a non-existent dir (Daryn Sharp via bobby)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1296386 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/03/12 11:03 AM",
      "commitName": "97d104767d57629290cdab74941862cc45f09ee5",
      "commitAuthor": "Robert Joseph Evans",
      "commitDateOld": "09/02/12 8:41 AM",
      "commitNameOld": "7f7b05226e3ae1fdf3c440f8d26814f4d955f734",
      "commitAuthorOld": "Robert Joseph Evans",
      "daysBetweenCommits": 22.1,
      "commitsBetweenForRepo": 134,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,20 @@\n   protected void processArguments(LinkedList\u003cPathData\u003e args)\n   throws IOException {\n     // if more than one arg, the destination must be a directory\n     // if one arg, the dst must not exist or must be a directory\n     if (args.size() \u003e 1) {\n       if (!dst.exists) {\n         throw new PathNotFoundException(dst.toString());\n       }\n       if (!dst.stat.isDirectory()) {\n         throw new PathIsNotDirectoryException(dst.toString());\n       }\n-    } else {\n-      if (dst.exists \u0026\u0026 !dst.stat.isDirectory() \u0026\u0026 !overwrite) {\n+    } else if (dst.exists) {\n+      if (!dst.stat.isDirectory() \u0026\u0026 !overwrite) {\n         throw new PathExistsException(dst.toString());\n       }\n+    } else if (!dst.parentExists()) {\n+      throw new PathNotFoundException(dst.toString());\n     }\n     super.processArguments(args);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void processArguments(LinkedList\u003cPathData\u003e args)\n  throws IOException {\n    // if more than one arg, the destination must be a directory\n    // if one arg, the dst must not exist or must be a directory\n    if (args.size() \u003e 1) {\n      if (!dst.exists) {\n        throw new PathNotFoundException(dst.toString());\n      }\n      if (!dst.stat.isDirectory()) {\n        throw new PathIsNotDirectoryException(dst.toString());\n      }\n    } else if (dst.exists) {\n      if (!dst.stat.isDirectory() \u0026\u0026 !overwrite) {\n        throw new PathExistsException(dst.toString());\n      }\n    } else if (!dst.parentExists()) {\n      throw new PathNotFoundException(dst.toString());\n    }\n    super.processArguments(args);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/CommandWithDestination.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected void processArguments(LinkedList\u003cPathData\u003e args)\n  throws IOException {\n    // if more than one arg, the destination must be a directory\n    // if one arg, the dst must not exist or must be a directory\n    if (args.size() \u003e 1) {\n      if (!dst.exists) {\n        throw new PathNotFoundException(dst.toString());\n      }\n      if (!dst.stat.isDirectory()) {\n        throw new PathIsNotDirectoryException(dst.toString());\n      }\n    } else {\n      if (dst.exists \u0026\u0026 !dst.stat.isDirectory() \u0026\u0026 !overwrite) {\n        throw new PathExistsException(dst.toString());\n      }\n    }\n    super.processArguments(args);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/CommandWithDestination.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/shell/CommandWithDestination.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/CommandWithDestination.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected void processArguments(LinkedList\u003cPathData\u003e args)\n  throws IOException {\n    // if more than one arg, the destination must be a directory\n    // if one arg, the dst must not exist or must be a directory\n    if (args.size() \u003e 1) {\n      if (!dst.exists) {\n        throw new PathNotFoundException(dst.toString());\n      }\n      if (!dst.stat.isDirectory()) {\n        throw new PathIsNotDirectoryException(dst.toString());\n      }\n    } else {\n      if (dst.exists \u0026\u0026 !dst.stat.isDirectory() \u0026\u0026 !overwrite) {\n        throw new PathExistsException(dst.toString());\n      }\n    }\n    super.processArguments(args);\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/fs/shell/CommandWithDestination.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/fs/shell/CommandWithDestination.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/shell/CommandWithDestination.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected void processArguments(LinkedList\u003cPathData\u003e args)\n  throws IOException {\n    // if more than one arg, the destination must be a directory\n    // if one arg, the dst must not exist or must be a directory\n    if (args.size() \u003e 1) {\n      if (!dst.exists) {\n        throw new PathNotFoundException(dst.toString());\n      }\n      if (!dst.stat.isDirectory()) {\n        throw new PathIsNotDirectoryException(dst.toString());\n      }\n    } else {\n      if (dst.exists \u0026\u0026 !dst.stat.isDirectory() \u0026\u0026 !overwrite) {\n        throw new PathExistsException(dst.toString());\n      }\n    }\n    super.processArguments(args);\n  }",
      "path": "common/src/java/org/apache/hadoop/fs/shell/CommandWithDestination.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/fs/shell/CommandWithDestination.java",
        "newPath": "common/src/java/org/apache/hadoop/fs/shell/CommandWithDestination.java"
      }
    },
    "77b4fd6572d6f928ea5bd86c8b00caeba7bb3b99": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7320. Refactor the copy and move commands to conform to new FsCommand class. Contributed by Daryn Sharp.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1127591 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/05/11 10:29 AM",
      "commitName": "77b4fd6572d6f928ea5bd86c8b00caeba7bb3b99",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,18 @@\n+  protected void processArguments(LinkedList\u003cPathData\u003e args)\n+  throws IOException {\n+    // if more than one arg, the destination must be a directory\n+    // if one arg, the dst must not exist or must be a directory\n+    if (args.size() \u003e 1) {\n+      if (!dst.exists) {\n+        throw new PathNotFoundException(dst.toString());\n+      }\n+      if (!dst.stat.isDirectory()) {\n+        throw new PathIsNotDirectoryException(dst.toString());\n+      }\n+    } else {\n+      if (dst.exists \u0026\u0026 !dst.stat.isDirectory() \u0026\u0026 !overwrite) {\n+        throw new PathExistsException(dst.toString());\n+      }\n+    }\n+    super.processArguments(args);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void processArguments(LinkedList\u003cPathData\u003e args)\n  throws IOException {\n    // if more than one arg, the destination must be a directory\n    // if one arg, the dst must not exist or must be a directory\n    if (args.size() \u003e 1) {\n      if (!dst.exists) {\n        throw new PathNotFoundException(dst.toString());\n      }\n      if (!dst.stat.isDirectory()) {\n        throw new PathIsNotDirectoryException(dst.toString());\n      }\n    } else {\n      if (dst.exists \u0026\u0026 !dst.stat.isDirectory() \u0026\u0026 !overwrite) {\n        throw new PathExistsException(dst.toString());\n      }\n    }\n    super.processArguments(args);\n  }",
      "path": "src/java/org/apache/hadoop/fs/shell/CommandWithDestination.java"
    }
  }
}