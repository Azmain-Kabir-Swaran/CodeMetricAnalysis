{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CompositeGroupsMapping.java",
  "functionName": "prepareConf",
  "functionId": "prepareConf___providerName-String",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/CompositeGroupsMapping.java",
  "functionStartLine": 152,
  "functionEndLine": 168,
  "numCommitsSeen": 3,
  "timeTaken": 540,
  "changeHistory": [
    "f194aaa0d1205b861ff55d6dc8b3a8fb3f3718c5"
  ],
  "changeHistoryShort": {
    "f194aaa0d1205b861ff55d6dc8b3a8fb3f3718c5": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f194aaa0d1205b861ff55d6dc8b3a8fb3f3718c5": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-8943. Support multiple group mapping providers. Contributed by Kai Zheng\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1605857 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "26/06/14 10:14 AM",
      "commitName": "f194aaa0d1205b861ff55d6dc8b3a8fb3f3718c5",
      "commitAuthor": "Brandon Li",
      "diff": "@@ -0,0 +1,17 @@\n+  private Configuration prepareConf(String providerName) {\n+    Configuration newConf \u003d new Configuration();\n+    Iterator\u003cMap.Entry\u003cString, String\u003e\u003e entries \u003d conf.iterator();\n+    String providerKey \u003d MAPPING_PROVIDER_CONFIG_PREFIX + \".\" + providerName;\n+    while (entries.hasNext()) {\n+      Map.Entry\u003cString, String\u003e entry \u003d entries.next();\n+      String key \u003d entry.getKey();\n+      // get a property like \"hadoop.security.group.mapping.provider.PROVIDER-X.ldap.url\"\n+      if (key.startsWith(providerKey) \u0026\u0026 !key.equals(providerKey)) {\n+        // restore to be the one like \"hadoop.security.group.mapping.ldap.url\" \n+        // so that can be used by original provider.\n+        key \u003d key.replace(\".provider.\" + providerName, \"\");\n+        newConf.set(key, entry.getValue());\n+      }\n+    }\n+    return newConf;\n+  }  \n\\ No newline at end of file\n",
      "actualSource": "  private Configuration prepareConf(String providerName) {\n    Configuration newConf \u003d new Configuration();\n    Iterator\u003cMap.Entry\u003cString, String\u003e\u003e entries \u003d conf.iterator();\n    String providerKey \u003d MAPPING_PROVIDER_CONFIG_PREFIX + \".\" + providerName;\n    while (entries.hasNext()) {\n      Map.Entry\u003cString, String\u003e entry \u003d entries.next();\n      String key \u003d entry.getKey();\n      // get a property like \"hadoop.security.group.mapping.provider.PROVIDER-X.ldap.url\"\n      if (key.startsWith(providerKey) \u0026\u0026 !key.equals(providerKey)) {\n        // restore to be the one like \"hadoop.security.group.mapping.ldap.url\" \n        // so that can be used by original provider.\n        key \u003d key.replace(\".provider.\" + providerName, \"\");\n        newConf.set(key, entry.getValue());\n      }\n    }\n    return newConf;\n  }  ",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/CompositeGroupsMapping.java"
    }
  }
}