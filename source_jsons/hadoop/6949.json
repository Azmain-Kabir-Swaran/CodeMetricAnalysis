{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSDirectory.java",
  "functionName": "updateCountForQuota",
  "functionId": "updateCountForQuota___initThreads-int",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
  "functionStartLine": 817,
  "functionEndLine": 835,
  "numCommitsSeen": 695,
  "timeTaken": 8789,
  "changeHistory": [
    "50849ec9eb9bad90586a95d2b2380ee6e8724d6b",
    "a40342b0dab1f9137ae4b3679a5aca7f2a57d23d",
    "de928d566a119f0b7fa5f171719642cd86be0af7",
    "b6ceee9bf42eec15891f60a014bbfa47e03f563c",
    "72f6bd4893dcf10d6dad24753f9be99505a87a1f",
    "5dae97a584d30cef3e34141edfaca49c4ec57913",
    "82ff2d3f2e569879500d851f4d67dfa2d02b5c9b",
    "0fa5cad0b27780c27a284c23101b1099d4886506",
    "0b101bd7e875ee5597ddb8f0d887159076310ffa"
  ],
  "changeHistoryShort": {
    "50849ec9eb9bad90586a95d2b2380ee6e8724d6b": "Ybodychange",
    "a40342b0dab1f9137ae4b3679a5aca7f2a57d23d": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yparameterchange)",
    "de928d566a119f0b7fa5f171719642cd86be0af7": "Ybodychange",
    "b6ceee9bf42eec15891f60a014bbfa47e03f563c": "Ymultichange(Yparameterchange,Ybodychange)",
    "72f6bd4893dcf10d6dad24753f9be99505a87a1f": "Ybodychange",
    "5dae97a584d30cef3e34141edfaca49c4ec57913": "Ymultichange(Yparameterchange,Ybodychange)",
    "82ff2d3f2e569879500d851f4d67dfa2d02b5c9b": "Yparameterchange",
    "0fa5cad0b27780c27a284c23101b1099d4886506": "Ybodychange",
    "0b101bd7e875ee5597ddb8f0d887159076310ffa": "Ymultichange(Yparameterchange,Ybodychange)"
  },
  "changeHistoryDetails": {
    "50849ec9eb9bad90586a95d2b2380ee6e8724d6b": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12526. FSDirectory should use Time.monotonicNow for durations. Contributed by Bharat Viswanadham.\n",
      "commitDate": "21/09/17 3:27 AM",
      "commitName": "50849ec9eb9bad90586a95d2b2380ee6e8724d6b",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "07/09/17 9:50 AM",
      "commitNameOld": "d77ed238a911fc85d6f4bbce606cac7ec44f557f",
      "commitAuthorOld": "Yongjun Zhang",
      "daysBetweenCommits": 13.73,
      "commitsBetweenForRepo": 165,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n   void updateCountForQuota(int initThreads) {\n     writeLock();\n     try {\n       int threads \u003d (initThreads \u003c 1) ? 1 : initThreads;\n       LOG.info(\"Initializing quota with \" + threads + \" thread(s)\");\n-      long start \u003d Time.now();\n+      long start \u003d Time.monotonicNow();\n       QuotaCounts counts \u003d new QuotaCounts.Builder().build();\n       ForkJoinPool p \u003d new ForkJoinPool(threads);\n       RecursiveAction task \u003d new InitQuotaTask(getBlockStoragePolicySuite(),\n           rootDir.getStoragePolicyID(), rootDir, counts);\n       p.execute(task);\n       task.join();\n       p.shutdown();\n-      LOG.info(\"Quota initialization completed in \" + (Time.now() - start) +\n+      LOG.info(\"Quota initialization completed in \" + (Time.monotonicNow() - start) +\n           \" milliseconds\\n\" + counts);\n     } finally {\n       writeUnlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void updateCountForQuota(int initThreads) {\n    writeLock();\n    try {\n      int threads \u003d (initThreads \u003c 1) ? 1 : initThreads;\n      LOG.info(\"Initializing quota with \" + threads + \" thread(s)\");\n      long start \u003d Time.monotonicNow();\n      QuotaCounts counts \u003d new QuotaCounts.Builder().build();\n      ForkJoinPool p \u003d new ForkJoinPool(threads);\n      RecursiveAction task \u003d new InitQuotaTask(getBlockStoragePolicySuite(),\n          rootDir.getStoragePolicyID(), rootDir, counts);\n      p.execute(task);\n      task.join();\n      p.shutdown();\n      LOG.info(\"Quota initialization completed in \" + (Time.monotonicNow() - start) +\n          \" milliseconds\\n\" + counts);\n    } finally {\n      writeUnlock();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
      "extendedDetails": {}
    },
    "a40342b0dab1f9137ae4b3679a5aca7f2a57d23d": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yparameterchange)",
      "commitMessage": "HDFS-6763. Initialize file system-wide quota once on transitioning to active. Contributed by Kihwal Lee\n",
      "commitDate": "10/09/15 7:16 AM",
      "commitName": "a40342b0dab1f9137ae4b3679a5aca7f2a57d23d",
      "commitAuthor": "Kihwal Lee",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-6763. Initialize file system-wide quota once on transitioning to active. Contributed by Kihwal Lee\n",
          "commitDate": "10/09/15 7:16 AM",
          "commitName": "a40342b0dab1f9137ae4b3679a5aca7f2a57d23d",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "10/09/15 12:45 AM",
          "commitNameOld": "7b5b2c5822ac722893ef5db753144f18d5056f5b",
          "commitAuthorOld": "Akira Ajisaka",
          "daysBetweenCommits": 0.27,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,19 @@\n-  static void updateCountForQuota(BlockStoragePolicySuite bsps,\n-      INodeDirectory root, int threads) {\n-    threads \u003d (threads \u003c 1) ? 1 : threads;\n-    LOG.info(\"Initializing quota with \" + threads + \" thread(s)\");\n-    long start \u003d Time.now();\n-    QuotaCounts counts \u003d new QuotaCounts.Builder().build();\n-    ForkJoinPool p \u003d new ForkJoinPool(threads);\n-    RecursiveAction task \u003d new InitQuotaTask(bsps, root.getStoragePolicyID(),\n-        root, counts);\n-    p.execute(task);\n-    task.join();\n-    p.shutdown();\n-    LOG.info(\"Quota initialization completed in \" + (Time.now() - start) +\n-        \" milliseconds\\n\" + counts);\n+  void updateCountForQuota(int initThreads) {\n+    writeLock();\n+    try {\n+      int threads \u003d (initThreads \u003c 1) ? 1 : initThreads;\n+      LOG.info(\"Initializing quota with \" + threads + \" thread(s)\");\n+      long start \u003d Time.now();\n+      QuotaCounts counts \u003d new QuotaCounts.Builder().build();\n+      ForkJoinPool p \u003d new ForkJoinPool(threads);\n+      RecursiveAction task \u003d new InitQuotaTask(getBlockStoragePolicySuite(),\n+          rootDir.getStoragePolicyID(), rootDir, counts);\n+      p.execute(task);\n+      task.join();\n+      p.shutdown();\n+      LOG.info(\"Quota initialization completed in \" + (Time.now() - start) +\n+          \" milliseconds\\n\" + counts);\n+    } finally {\n+      writeUnlock();\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void updateCountForQuota(int initThreads) {\n    writeLock();\n    try {\n      int threads \u003d (initThreads \u003c 1) ? 1 : initThreads;\n      LOG.info(\"Initializing quota with \" + threads + \" thread(s)\");\n      long start \u003d Time.now();\n      QuotaCounts counts \u003d new QuotaCounts.Builder().build();\n      ForkJoinPool p \u003d new ForkJoinPool(threads);\n      RecursiveAction task \u003d new InitQuotaTask(getBlockStoragePolicySuite(),\n          rootDir.getStoragePolicyID(), rootDir, counts);\n      p.execute(task);\n      task.join();\n      p.shutdown();\n      LOG.info(\"Quota initialization completed in \" + (Time.now() - start) +\n          \" milliseconds\\n\" + counts);\n    } finally {\n      writeUnlock();\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImage.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
            "oldMethodName": "updateCountForQuota",
            "newMethodName": "updateCountForQuota"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-6763. Initialize file system-wide quota once on transitioning to active. Contributed by Kihwal Lee\n",
          "commitDate": "10/09/15 7:16 AM",
          "commitName": "a40342b0dab1f9137ae4b3679a5aca7f2a57d23d",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "10/09/15 12:45 AM",
          "commitNameOld": "7b5b2c5822ac722893ef5db753144f18d5056f5b",
          "commitAuthorOld": "Akira Ajisaka",
          "daysBetweenCommits": 0.27,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,19 @@\n-  static void updateCountForQuota(BlockStoragePolicySuite bsps,\n-      INodeDirectory root, int threads) {\n-    threads \u003d (threads \u003c 1) ? 1 : threads;\n-    LOG.info(\"Initializing quota with \" + threads + \" thread(s)\");\n-    long start \u003d Time.now();\n-    QuotaCounts counts \u003d new QuotaCounts.Builder().build();\n-    ForkJoinPool p \u003d new ForkJoinPool(threads);\n-    RecursiveAction task \u003d new InitQuotaTask(bsps, root.getStoragePolicyID(),\n-        root, counts);\n-    p.execute(task);\n-    task.join();\n-    p.shutdown();\n-    LOG.info(\"Quota initialization completed in \" + (Time.now() - start) +\n-        \" milliseconds\\n\" + counts);\n+  void updateCountForQuota(int initThreads) {\n+    writeLock();\n+    try {\n+      int threads \u003d (initThreads \u003c 1) ? 1 : initThreads;\n+      LOG.info(\"Initializing quota with \" + threads + \" thread(s)\");\n+      long start \u003d Time.now();\n+      QuotaCounts counts \u003d new QuotaCounts.Builder().build();\n+      ForkJoinPool p \u003d new ForkJoinPool(threads);\n+      RecursiveAction task \u003d new InitQuotaTask(getBlockStoragePolicySuite(),\n+          rootDir.getStoragePolicyID(), rootDir, counts);\n+      p.execute(task);\n+      task.join();\n+      p.shutdown();\n+      LOG.info(\"Quota initialization completed in \" + (Time.now() - start) +\n+          \" milliseconds\\n\" + counts);\n+    } finally {\n+      writeUnlock();\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void updateCountForQuota(int initThreads) {\n    writeLock();\n    try {\n      int threads \u003d (initThreads \u003c 1) ? 1 : initThreads;\n      LOG.info(\"Initializing quota with \" + threads + \" thread(s)\");\n      long start \u003d Time.now();\n      QuotaCounts counts \u003d new QuotaCounts.Builder().build();\n      ForkJoinPool p \u003d new ForkJoinPool(threads);\n      RecursiveAction task \u003d new InitQuotaTask(getBlockStoragePolicySuite(),\n          rootDir.getStoragePolicyID(), rootDir, counts);\n      p.execute(task);\n      task.join();\n      p.shutdown();\n      LOG.info(\"Quota initialization completed in \" + (Time.now() - start) +\n          \" milliseconds\\n\" + counts);\n    } finally {\n      writeUnlock();\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
          "extendedDetails": {
            "oldValue": "[static]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-6763. Initialize file system-wide quota once on transitioning to active. Contributed by Kihwal Lee\n",
          "commitDate": "10/09/15 7:16 AM",
          "commitName": "a40342b0dab1f9137ae4b3679a5aca7f2a57d23d",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "10/09/15 12:45 AM",
          "commitNameOld": "7b5b2c5822ac722893ef5db753144f18d5056f5b",
          "commitAuthorOld": "Akira Ajisaka",
          "daysBetweenCommits": 0.27,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,19 @@\n-  static void updateCountForQuota(BlockStoragePolicySuite bsps,\n-      INodeDirectory root, int threads) {\n-    threads \u003d (threads \u003c 1) ? 1 : threads;\n-    LOG.info(\"Initializing quota with \" + threads + \" thread(s)\");\n-    long start \u003d Time.now();\n-    QuotaCounts counts \u003d new QuotaCounts.Builder().build();\n-    ForkJoinPool p \u003d new ForkJoinPool(threads);\n-    RecursiveAction task \u003d new InitQuotaTask(bsps, root.getStoragePolicyID(),\n-        root, counts);\n-    p.execute(task);\n-    task.join();\n-    p.shutdown();\n-    LOG.info(\"Quota initialization completed in \" + (Time.now() - start) +\n-        \" milliseconds\\n\" + counts);\n+  void updateCountForQuota(int initThreads) {\n+    writeLock();\n+    try {\n+      int threads \u003d (initThreads \u003c 1) ? 1 : initThreads;\n+      LOG.info(\"Initializing quota with \" + threads + \" thread(s)\");\n+      long start \u003d Time.now();\n+      QuotaCounts counts \u003d new QuotaCounts.Builder().build();\n+      ForkJoinPool p \u003d new ForkJoinPool(threads);\n+      RecursiveAction task \u003d new InitQuotaTask(getBlockStoragePolicySuite(),\n+          rootDir.getStoragePolicyID(), rootDir, counts);\n+      p.execute(task);\n+      task.join();\n+      p.shutdown();\n+      LOG.info(\"Quota initialization completed in \" + (Time.now() - start) +\n+          \" milliseconds\\n\" + counts);\n+    } finally {\n+      writeUnlock();\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void updateCountForQuota(int initThreads) {\n    writeLock();\n    try {\n      int threads \u003d (initThreads \u003c 1) ? 1 : initThreads;\n      LOG.info(\"Initializing quota with \" + threads + \" thread(s)\");\n      long start \u003d Time.now();\n      QuotaCounts counts \u003d new QuotaCounts.Builder().build();\n      ForkJoinPool p \u003d new ForkJoinPool(threads);\n      RecursiveAction task \u003d new InitQuotaTask(getBlockStoragePolicySuite(),\n          rootDir.getStoragePolicyID(), rootDir, counts);\n      p.execute(task);\n      task.join();\n      p.shutdown();\n      LOG.info(\"Quota initialization completed in \" + (Time.now() - start) +\n          \" milliseconds\\n\" + counts);\n    } finally {\n      writeUnlock();\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-6763. Initialize file system-wide quota once on transitioning to active. Contributed by Kihwal Lee\n",
          "commitDate": "10/09/15 7:16 AM",
          "commitName": "a40342b0dab1f9137ae4b3679a5aca7f2a57d23d",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "10/09/15 12:45 AM",
          "commitNameOld": "7b5b2c5822ac722893ef5db753144f18d5056f5b",
          "commitAuthorOld": "Akira Ajisaka",
          "daysBetweenCommits": 0.27,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,19 @@\n-  static void updateCountForQuota(BlockStoragePolicySuite bsps,\n-      INodeDirectory root, int threads) {\n-    threads \u003d (threads \u003c 1) ? 1 : threads;\n-    LOG.info(\"Initializing quota with \" + threads + \" thread(s)\");\n-    long start \u003d Time.now();\n-    QuotaCounts counts \u003d new QuotaCounts.Builder().build();\n-    ForkJoinPool p \u003d new ForkJoinPool(threads);\n-    RecursiveAction task \u003d new InitQuotaTask(bsps, root.getStoragePolicyID(),\n-        root, counts);\n-    p.execute(task);\n-    task.join();\n-    p.shutdown();\n-    LOG.info(\"Quota initialization completed in \" + (Time.now() - start) +\n-        \" milliseconds\\n\" + counts);\n+  void updateCountForQuota(int initThreads) {\n+    writeLock();\n+    try {\n+      int threads \u003d (initThreads \u003c 1) ? 1 : initThreads;\n+      LOG.info(\"Initializing quota with \" + threads + \" thread(s)\");\n+      long start \u003d Time.now();\n+      QuotaCounts counts \u003d new QuotaCounts.Builder().build();\n+      ForkJoinPool p \u003d new ForkJoinPool(threads);\n+      RecursiveAction task \u003d new InitQuotaTask(getBlockStoragePolicySuite(),\n+          rootDir.getStoragePolicyID(), rootDir, counts);\n+      p.execute(task);\n+      task.join();\n+      p.shutdown();\n+      LOG.info(\"Quota initialization completed in \" + (Time.now() - start) +\n+          \" milliseconds\\n\" + counts);\n+    } finally {\n+      writeUnlock();\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void updateCountForQuota(int initThreads) {\n    writeLock();\n    try {\n      int threads \u003d (initThreads \u003c 1) ? 1 : initThreads;\n      LOG.info(\"Initializing quota with \" + threads + \" thread(s)\");\n      long start \u003d Time.now();\n      QuotaCounts counts \u003d new QuotaCounts.Builder().build();\n      ForkJoinPool p \u003d new ForkJoinPool(threads);\n      RecursiveAction task \u003d new InitQuotaTask(getBlockStoragePolicySuite(),\n          rootDir.getStoragePolicyID(), rootDir, counts);\n      p.execute(task);\n      task.join();\n      p.shutdown();\n      LOG.info(\"Quota initialization completed in \" + (Time.now() - start) +\n          \" milliseconds\\n\" + counts);\n    } finally {\n      writeUnlock();\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
          "extendedDetails": {
            "oldValue": "[bsps-BlockStoragePolicySuite, root-INodeDirectory, threads-int]",
            "newValue": "[initThreads-int]"
          }
        }
      ]
    },
    "de928d566a119f0b7fa5f171719642cd86be0af7": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9003. ForkJoin thread pool leaks. Contributed by Kihwal Lee.\n",
      "commitDate": "02/09/15 3:19 PM",
      "commitName": "de928d566a119f0b7fa5f171719642cd86be0af7",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "28/08/15 11:14 AM",
      "commitNameOld": "b6ceee9bf42eec15891f60a014bbfa47e03f563c",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 5.17,
      "commitsBetweenForRepo": 30,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,15 @@\n   static void updateCountForQuota(BlockStoragePolicySuite bsps,\n       INodeDirectory root, int threads) {\n     threads \u003d (threads \u003c 1) ? 1 : threads;\n     LOG.info(\"Initializing quota with \" + threads + \" thread(s)\");\n     long start \u003d Time.now();\n     QuotaCounts counts \u003d new QuotaCounts.Builder().build();\n     ForkJoinPool p \u003d new ForkJoinPool(threads);\n     RecursiveAction task \u003d new InitQuotaTask(bsps, root.getStoragePolicyID(),\n         root, counts);\n     p.execute(task);\n     task.join();\n+    p.shutdown();\n     LOG.info(\"Quota initialization completed in \" + (Time.now() - start) +\n         \" milliseconds\\n\" + counts);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static void updateCountForQuota(BlockStoragePolicySuite bsps,\n      INodeDirectory root, int threads) {\n    threads \u003d (threads \u003c 1) ? 1 : threads;\n    LOG.info(\"Initializing quota with \" + threads + \" thread(s)\");\n    long start \u003d Time.now();\n    QuotaCounts counts \u003d new QuotaCounts.Builder().build();\n    ForkJoinPool p \u003d new ForkJoinPool(threads);\n    RecursiveAction task \u003d new InitQuotaTask(bsps, root.getStoragePolicyID(),\n        root, counts);\n    p.execute(task);\n    task.join();\n    p.shutdown();\n    LOG.info(\"Quota initialization completed in \" + (Time.now() - start) +\n        \" milliseconds\\n\" + counts);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImage.java",
      "extendedDetails": {}
    },
    "b6ceee9bf42eec15891f60a014bbfa47e03f563c": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-8865. Improve quota initialization performance. Contributed by Kihwal Lee.\n",
      "commitDate": "28/08/15 11:14 AM",
      "commitName": "b6ceee9bf42eec15891f60a014bbfa47e03f563c",
      "commitAuthor": "Kihwal Lee",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-8865. Improve quota initialization performance. Contributed by Kihwal Lee.\n",
          "commitDate": "28/08/15 11:14 AM",
          "commitName": "b6ceee9bf42eec15891f60a014bbfa47e03f563c",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "12/08/15 3:20 PM",
          "commitNameOld": "3e715a4f4c46bcd8b3054cb0566e526c46bd5d66",
          "commitAuthorOld": "Xiaoyu Yao",
          "daysBetweenCommits": 15.83,
          "commitsBetweenForRepo": 95,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,5 +1,14 @@\n   static void updateCountForQuota(BlockStoragePolicySuite bsps,\n-                                  INodeDirectory root) {\n-    updateCountForQuotaRecursively(bsps, root.getStoragePolicyID(), root,\n-        new QuotaCounts.Builder().build());\n- }\n\\ No newline at end of file\n+      INodeDirectory root, int threads) {\n+    threads \u003d (threads \u003c 1) ? 1 : threads;\n+    LOG.info(\"Initializing quota with \" + threads + \" thread(s)\");\n+    long start \u003d Time.now();\n+    QuotaCounts counts \u003d new QuotaCounts.Builder().build();\n+    ForkJoinPool p \u003d new ForkJoinPool(threads);\n+    RecursiveAction task \u003d new InitQuotaTask(bsps, root.getStoragePolicyID(),\n+        root, counts);\n+    p.execute(task);\n+    task.join();\n+    LOG.info(\"Quota initialization completed in \" + (Time.now() - start) +\n+        \" milliseconds\\n\" + counts);\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  static void updateCountForQuota(BlockStoragePolicySuite bsps,\n      INodeDirectory root, int threads) {\n    threads \u003d (threads \u003c 1) ? 1 : threads;\n    LOG.info(\"Initializing quota with \" + threads + \" thread(s)\");\n    long start \u003d Time.now();\n    QuotaCounts counts \u003d new QuotaCounts.Builder().build();\n    ForkJoinPool p \u003d new ForkJoinPool(threads);\n    RecursiveAction task \u003d new InitQuotaTask(bsps, root.getStoragePolicyID(),\n        root, counts);\n    p.execute(task);\n    task.join();\n    LOG.info(\"Quota initialization completed in \" + (Time.now() - start) +\n        \" milliseconds\\n\" + counts);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImage.java",
          "extendedDetails": {
            "oldValue": "[bsps-BlockStoragePolicySuite, root-INodeDirectory]",
            "newValue": "[bsps-BlockStoragePolicySuite, root-INodeDirectory, threads-int]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-8865. Improve quota initialization performance. Contributed by Kihwal Lee.\n",
          "commitDate": "28/08/15 11:14 AM",
          "commitName": "b6ceee9bf42eec15891f60a014bbfa47e03f563c",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "12/08/15 3:20 PM",
          "commitNameOld": "3e715a4f4c46bcd8b3054cb0566e526c46bd5d66",
          "commitAuthorOld": "Xiaoyu Yao",
          "daysBetweenCommits": 15.83,
          "commitsBetweenForRepo": 95,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,5 +1,14 @@\n   static void updateCountForQuota(BlockStoragePolicySuite bsps,\n-                                  INodeDirectory root) {\n-    updateCountForQuotaRecursively(bsps, root.getStoragePolicyID(), root,\n-        new QuotaCounts.Builder().build());\n- }\n\\ No newline at end of file\n+      INodeDirectory root, int threads) {\n+    threads \u003d (threads \u003c 1) ? 1 : threads;\n+    LOG.info(\"Initializing quota with \" + threads + \" thread(s)\");\n+    long start \u003d Time.now();\n+    QuotaCounts counts \u003d new QuotaCounts.Builder().build();\n+    ForkJoinPool p \u003d new ForkJoinPool(threads);\n+    RecursiveAction task \u003d new InitQuotaTask(bsps, root.getStoragePolicyID(),\n+        root, counts);\n+    p.execute(task);\n+    task.join();\n+    LOG.info(\"Quota initialization completed in \" + (Time.now() - start) +\n+        \" milliseconds\\n\" + counts);\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  static void updateCountForQuota(BlockStoragePolicySuite bsps,\n      INodeDirectory root, int threads) {\n    threads \u003d (threads \u003c 1) ? 1 : threads;\n    LOG.info(\"Initializing quota with \" + threads + \" thread(s)\");\n    long start \u003d Time.now();\n    QuotaCounts counts \u003d new QuotaCounts.Builder().build();\n    ForkJoinPool p \u003d new ForkJoinPool(threads);\n    RecursiveAction task \u003d new InitQuotaTask(bsps, root.getStoragePolicyID(),\n        root, counts);\n    p.execute(task);\n    task.join();\n    LOG.info(\"Quota initialization completed in \" + (Time.now() - start) +\n        \" milliseconds\\n\" + counts);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImage.java",
          "extendedDetails": {}
        }
      ]
    },
    "72f6bd4893dcf10d6dad24753f9be99505a87a1f": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7811. Avoid recursive call getStoragePolicyID in INodeFile#computeQuotaUsage. Contributed by Xiaoyu Yao and Jing Zhao.\n",
      "commitDate": "02/04/15 9:20 PM",
      "commitName": "72f6bd4893dcf10d6dad24753f9be99505a87a1f",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "25/03/15 10:38 AM",
      "commitNameOld": "5e21e4ca377f68e030f8f3436cd93fd7a74dc5e0",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 8.45,
      "commitsBetweenForRepo": 79,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,4 +1,5 @@\n   static void updateCountForQuota(BlockStoragePolicySuite bsps,\n                                   INodeDirectory root) {\n-    updateCountForQuotaRecursively(bsps, root, new QuotaCounts.Builder().build());\n+    updateCountForQuotaRecursively(bsps, root.getStoragePolicyID(), root,\n+        new QuotaCounts.Builder().build());\n  }\n\\ No newline at end of file\n",
      "actualSource": "  static void updateCountForQuota(BlockStoragePolicySuite bsps,\n                                  INodeDirectory root) {\n    updateCountForQuotaRecursively(bsps, root.getStoragePolicyID(), root,\n        new QuotaCounts.Builder().build());\n }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImage.java",
      "extendedDetails": {}
    },
    "5dae97a584d30cef3e34141edfaca49c4ec57913": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-7723. Quota By Storage Type namenode implemenation. (Contributed by Xiaoyu Yao)\n",
      "commitDate": "11/02/15 10:41 AM",
      "commitName": "5dae97a584d30cef3e34141edfaca49c4ec57913",
      "commitAuthor": "Arpit Agarwal",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-7723. Quota By Storage Type namenode implemenation. (Contributed by Xiaoyu Yao)\n",
          "commitDate": "11/02/15 10:41 AM",
          "commitName": "5dae97a584d30cef3e34141edfaca49c4ec57913",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "22/01/15 4:26 PM",
          "commitNameOld": "d3268c4b10a0f728b554ddb6d69b666a9ca13f12",
          "commitAuthorOld": "cnauroth",
          "daysBetweenCommits": 19.76,
          "commitsBetweenForRepo": 184,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,3 +1,4 @@\n-  static void updateCountForQuota(INodeDirectory root) {\n-    updateCountForQuotaRecursively(root, Quota.Counts.newInstance());\n-  }\n\\ No newline at end of file\n+  static void updateCountForQuota(BlockStoragePolicySuite bsps,\n+                                  INodeDirectory root) {\n+    updateCountForQuotaRecursively(bsps, root, new QuotaCounts.Builder().build());\n+ }\n\\ No newline at end of file\n",
          "actualSource": "  static void updateCountForQuota(BlockStoragePolicySuite bsps,\n                                  INodeDirectory root) {\n    updateCountForQuotaRecursively(bsps, root, new QuotaCounts.Builder().build());\n }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImage.java",
          "extendedDetails": {
            "oldValue": "[root-INodeDirectory]",
            "newValue": "[bsps-BlockStoragePolicySuite, root-INodeDirectory]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-7723. Quota By Storage Type namenode implemenation. (Contributed by Xiaoyu Yao)\n",
          "commitDate": "11/02/15 10:41 AM",
          "commitName": "5dae97a584d30cef3e34141edfaca49c4ec57913",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "22/01/15 4:26 PM",
          "commitNameOld": "d3268c4b10a0f728b554ddb6d69b666a9ca13f12",
          "commitAuthorOld": "cnauroth",
          "daysBetweenCommits": 19.76,
          "commitsBetweenForRepo": 184,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,3 +1,4 @@\n-  static void updateCountForQuota(INodeDirectory root) {\n-    updateCountForQuotaRecursively(root, Quota.Counts.newInstance());\n-  }\n\\ No newline at end of file\n+  static void updateCountForQuota(BlockStoragePolicySuite bsps,\n+                                  INodeDirectory root) {\n+    updateCountForQuotaRecursively(bsps, root, new QuotaCounts.Builder().build());\n+ }\n\\ No newline at end of file\n",
          "actualSource": "  static void updateCountForQuota(BlockStoragePolicySuite bsps,\n                                  INodeDirectory root) {\n    updateCountForQuotaRecursively(bsps, root, new QuotaCounts.Builder().build());\n }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImage.java",
          "extendedDetails": {}
        }
      ]
    },
    "82ff2d3f2e569879500d851f4d67dfa2d02b5c9b": {
      "type": "Yparameterchange",
      "commitMessage": "HDFS-5286. Flatten INodeDirectory hierarchy: Replace INodeDirectoryWithQuota with DirectoryWithQuotaFeature.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1545768 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "26/11/13 10:33 AM",
      "commitName": "82ff2d3f2e569879500d851f4d67dfa2d02b5c9b",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "20/11/13 7:17 PM",
      "commitNameOld": "5f458ef23f097c784f12a973b326f7e1254ae0b2",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 5.64,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,3 +1,3 @@\n-  static void updateCountForQuota(INodeDirectoryWithQuota root) {\n+  static void updateCountForQuota(INodeDirectory root) {\n     updateCountForQuotaRecursively(root, Quota.Counts.newInstance());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static void updateCountForQuota(INodeDirectory root) {\n    updateCountForQuotaRecursively(root, Quota.Counts.newInstance());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImage.java",
      "extendedDetails": {
        "oldValue": "[root-INodeDirectoryWithQuota]",
        "newValue": "[root-INodeDirectory]"
      }
    },
    "0fa5cad0b27780c27a284c23101b1099d4886506": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4686. Update quota computation for rename and INodeReference.  Contributed by Jing Zhao\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1471647 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/04/13 1:31 PM",
      "commitName": "0fa5cad0b27780c27a284c23101b1099d4886506",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "20/04/13 9:57 AM",
      "commitNameOld": "0b101bd7e875ee5597ddb8f0d887159076310ffa",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 4.15,
      "commitsBetweenForRepo": 18,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,3 +1,3 @@\n   static void updateCountForQuota(INodeDirectoryWithQuota root) {\n-    updateCountForQuotaRecursively(root, new Quota.Counts());\n+    updateCountForQuotaRecursively(root, Quota.Counts.newInstance());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static void updateCountForQuota(INodeDirectoryWithQuota root) {\n    updateCountForQuotaRecursively(root, Quota.Counts.newInstance());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImage.java",
      "extendedDetails": {}
    },
    "0b101bd7e875ee5597ddb8f0d887159076310ffa": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-4434. Reverting change r1470089 that merges trunk to HDFS-2802.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1470194 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "20/04/13 9:57 AM",
      "commitName": "0b101bd7e875ee5597ddb8f0d887159076310ffa",
      "commitAuthor": "Suresh Srinivas",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-4434. Reverting change r1470089 that merges trunk to HDFS-2802.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1470194 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "20/04/13 9:57 AM",
          "commitName": "0b101bd7e875ee5597ddb8f0d887159076310ffa",
          "commitAuthor": "Suresh Srinivas",
          "commitDateOld": "19/04/13 5:02 PM",
          "commitNameOld": "9af0babe7ef9c4bc956b77aac250f8eee6c8450f",
          "commitAuthorOld": "",
          "daysBetweenCommits": 0.7,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,4 +1,3 @@\n-  static void updateCountForQuota(FSDirectory fsd, \n-      INodeDirectoryWithQuota root) {\n-    updateCountForQuotaRecursively(fsd, root, new Quota.Counts());\n+  static void updateCountForQuota(INodeDirectoryWithQuota root) {\n+    updateCountForQuotaRecursively(root, new Quota.Counts());\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static void updateCountForQuota(INodeDirectoryWithQuota root) {\n    updateCountForQuotaRecursively(root, new Quota.Counts());\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImage.java",
          "extendedDetails": {
            "oldValue": "[fsd-FSDirectory, root-INodeDirectoryWithQuota]",
            "newValue": "[root-INodeDirectoryWithQuota]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-4434. Reverting change r1470089 that merges trunk to HDFS-2802.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1470194 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "20/04/13 9:57 AM",
          "commitName": "0b101bd7e875ee5597ddb8f0d887159076310ffa",
          "commitAuthor": "Suresh Srinivas",
          "commitDateOld": "19/04/13 5:02 PM",
          "commitNameOld": "9af0babe7ef9c4bc956b77aac250f8eee6c8450f",
          "commitAuthorOld": "",
          "daysBetweenCommits": 0.7,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,4 +1,3 @@\n-  static void updateCountForQuota(FSDirectory fsd, \n-      INodeDirectoryWithQuota root) {\n-    updateCountForQuotaRecursively(fsd, root, new Quota.Counts());\n+  static void updateCountForQuota(INodeDirectoryWithQuota root) {\n+    updateCountForQuotaRecursively(root, new Quota.Counts());\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static void updateCountForQuota(INodeDirectoryWithQuota root) {\n    updateCountForQuotaRecursively(root, new Quota.Counts());\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImage.java",
          "extendedDetails": {}
        }
      ]
    }
  }
}