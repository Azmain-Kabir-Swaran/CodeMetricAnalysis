{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SchedulerPageUtil.java",
  "functionName": "storeExpandedQueue",
  "functionId": "storeExpandedQueue___html-Block",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/SchedulerPageUtil.java",
  "functionStartLine": 59,
  "functionEndLine": 172,
  "numCommitsSeen": 3,
  "timeTaken": 1593,
  "changeHistory": [
    "29ff7fb1400efecfb71491ac97194a229d0af8de",
    "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397",
    "9ff520b7d69c831b9bc9276c9158a121a4b44be0"
  ],
  "changeHistoryShort": {
    "29ff7fb1400efecfb71491ac97194a229d0af8de": "Ybodychange",
    "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397": "Ybodychange",
    "9ff520b7d69c831b9bc9276c9158a121a4b44be0": "Yintroduced"
  },
  "changeHistoryDetails": {
    "29ff7fb1400efecfb71491ac97194a229d0af8de": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9493. Scheduler Page does not display the right page by query string. Contributed by Wanqiang Ji.\n",
      "commitDate": "13/05/19 10:57 AM",
      "commitName": "29ff7fb1400efecfb71491ac97194a229d0af8de",
      "commitAuthor": "Giovanni Matteo Fumarola",
      "commitDateOld": "27/07/17 5:10 PM",
      "commitNameOld": "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 654.74,
      "commitsBetweenForRepo": 5522,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,113 +1,114 @@\n     private void storeExpandedQueue (Block html) {\n       html.\n           script().$type(\"text/javascript\").\n           __(\"function storeExpandedQueue(e, data) {\",\n             \"  var OPEN_QUEUES \u003d \u0027openQueues\u0027;\",\n             \"  var ACTION_OPEN \u003d \u0027open\u0027;\",\n             \"  var ACTION_CLOSED \u003d \u0027closed\u0027;\",\n             \"  var $li \u003d $(data.args[0]);\",\n             \"  var action \u003d ACTION_CLOSED;  //closed or open\",\n             \"  var queueName \u003d \u0027\u0027\",\n             \"  if ($li.hasClass(\u0027jstree-open\u0027)) {\",\n             \"      action\u003dACTION_OPEN;\",\n             \"  }\",\n             \"  queueName \u003d $li.find(\u0027.q\u0027).html();\",\n             \"  // http://localhost:8088/cluster/scheduler?openQueues\u003dq1#q2\u0026param1\u003dvalue1\u0026param2\u003dvalue2 \",\n             \"  //   \u003d\u003d\u003e [http://localhost:8088/cluster/scheduler , openQueues\u003dq1#q2\u0026param1\u003dvalue1\u0026param2\u003dvalue2]\",\n             \"  var currentParam \u003d window.location.href.split(\u0027?\u0027);\",\n             \"  var tmpCurrentParam \u003d currentParam;\",\n             \"  var queryString \u003d \u0027\u0027;\",\n             \"  if (tmpCurrentParam.length \u003e 1) {\",\n             \"    // openQueues\u003dq1#q2\u0026param1\u003dvalue1\u0026param2\u003dvalue2\",\n             \"    tmpCurrentParam \u003d tmpCurrentParam[1];\",\n             \"    currentParam \u003d tmpCurrentParam;\",\n             \"    tmpCurrentParam \u003d tmpCurrentParam.split(\u0027\u0026\u0027);\",\n             \"    var len \u003d tmpCurrentParam.length;\",\n             \"    var paramExist \u003d false;\",\n             \"    if (len \u003e 1) {    // Currently no query param are present but in future if any are added for that handling it now\",\n             \"      queryString \u003d \u0027\u0027;\",\n             \"      for (var i \u003d 0 ; i \u003c len ; i++) {  // searching for param openQueues\",\n             \"        if (tmpCurrentParam[i].substr(0,11) \u003d\u003d OPEN_QUEUES + \u0027\u003d\u0027) {\",\n             \"          if (action \u003d\u003d ACTION_OPEN) {\",\n             \"            tmpCurrentParam[i] \u003d addQueueName(tmpCurrentParam[i],queueName);\",\n             \"          }\",\n             \"          else if (action \u003d\u003d ACTION_CLOSED) {\",\n             \"            tmpCurrentParam[i] \u003d removeQueueName(tmpCurrentParam[i] , queueName);\",\n             \"          }\",\n             \"          paramExist \u003d true;\",\n             \"        }\",\n             \"        if (i \u003e 0) {\",\n             \"          queryString +\u003d \u0027\u0026\u0027;\",\n             \"        }\",\n             \"        queryString +\u003d tmpCurrentParam[i];\",\n             \"      }\",\n             \"      // If in existing query string OPEN_QUEUES param is not present\",\n             \"      if (action \u003d\u003d ACTION_OPEN \u0026\u0026 !paramExist) {\",\n             \"        queryString \u003d currentParam + \u0027\u0026\u0027 + OPEN_QUEUES + \u0027\u003d\u0027 + queueName;\",\n             \"      }\",\n             \"    } \",\n             \"    // Only one param is present in current query string\",\n             \"    else {\",\n             \"      tmpCurrentParam\u003dtmpCurrentParam[0];\",\n             \"      // checking if the only param present in query string is OPEN_QUEUES or not and making queryString accordingly\",\n             \"      if (tmpCurrentParam.substr(0,11) \u003d\u003d OPEN_QUEUES + \u0027\u003d\u0027) {\",\n             \"        if (action \u003d\u003d ACTION_OPEN) {\",\n             \"          queryString \u003d addQueueName(tmpCurrentParam,queueName);\",\n             \"        }\",\n             \"        else if (action \u003d\u003d ACTION_CLOSED) {\",\n             \"          queryString \u003d removeQueueName(tmpCurrentParam , queueName);\",\n             \"        }\",\n             \"      }\",\n             \"      else {\",\n             \"        if (action \u003d\u003d ACTION_OPEN) {\",\n             \"          queryString \u003d tmpCurrentParam + \u0027\u0026\u0027 + OPEN_QUEUES + \u0027\u003d\u0027 + queueName;\",\n             \"        }\",\n             \"      }\",\n             \"    }\",\n             \"  } else {\",\n             \"    if (action \u003d\u003d ACTION_OPEN) {\",\n             \"      tmpCurrentParam \u003d \u0027\u0027;\",\n             \"      currentParam \u003d tmpCurrentParam;\",\n             \"      queryString \u003d OPEN_QUEUES+\u0027\u003d\u0027+queueName;\",\n             \"    }\",\n             \"  }\",\n             \"  if (queryString !\u003d \u0027\u0027) {\",\n             \"    queryString \u003d \u0027?\u0027 + queryString;\",\n             \"  }\",\n             \"  var url \u003d window.location.protocol + \u0027//\u0027 + window.location.host + window.location.pathname + queryString;\",\n             \"  window.history.pushState( { path : url }, \u0027\u0027, url);\",\n             \"};\",\n             \"\",\n             \"function removeQueueName(queryString, queueName) {\",\n+            \"  queryString \u003d decodeURIComponent(queryString);\",\n             \"  var index \u003d queryString.indexOf(queueName);\",\n             \"  // Finding if queue is present in query param then only remove it\",\n             \"  if (index !\u003d -1) {\",\n             \"    // removing openQueues\u003d\",\n             \"    var tmp \u003d queryString.substr(11, queryString.length);\",\n             \"    tmp \u003d tmp.split(\u0027#\u0027);\",\n             \"    var len \u003d tmp.length;\",\n             \"    var newQueryString \u003d \u0027\u0027;\",\n             \"    for (var i \u003d 0 ; i \u003c len ; i++) {\",\n             \"      if (tmp[i] !\u003d queueName) {\",\n             \"        if (newQueryString !\u003d \u0027\u0027) {\",\n             \"          newQueryString +\u003d \u0027#\u0027;\",\n             \"        }\",\n             \"        newQueryString +\u003d tmp[i];\",\n             \"      }\",\n             \"    }\",\n             \"    queryString \u003d newQueryString;\",\n             \"    if (newQueryString !\u003d \u0027\u0027) {\",\n             \"      queryString \u003d \u0027openQueues\u003d\u0027 + newQueryString;\",\n             \"    }\",\n             \"  }\",\n             \"  return queryString;\",\n             \"}\",\n             \"\",\n             \"function addQueueName(queryString, queueName) {\",\n             \"  queueArray \u003d queryString.split(\u0027#\u0027);\",\n             \"  if ($.inArray(queueArray, queueName) \u003d\u003d -1) {\",\n             \"    queryString \u003d queryString + \u0027#\u0027 + queueName;\",\n             \"  }\",\n             \"  return queryString;\",\n             \"}\").__();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void storeExpandedQueue (Block html) {\n      html.\n          script().$type(\"text/javascript\").\n          __(\"function storeExpandedQueue(e, data) {\",\n            \"  var OPEN_QUEUES \u003d \u0027openQueues\u0027;\",\n            \"  var ACTION_OPEN \u003d \u0027open\u0027;\",\n            \"  var ACTION_CLOSED \u003d \u0027closed\u0027;\",\n            \"  var $li \u003d $(data.args[0]);\",\n            \"  var action \u003d ACTION_CLOSED;  //closed or open\",\n            \"  var queueName \u003d \u0027\u0027\",\n            \"  if ($li.hasClass(\u0027jstree-open\u0027)) {\",\n            \"      action\u003dACTION_OPEN;\",\n            \"  }\",\n            \"  queueName \u003d $li.find(\u0027.q\u0027).html();\",\n            \"  // http://localhost:8088/cluster/scheduler?openQueues\u003dq1#q2\u0026param1\u003dvalue1\u0026param2\u003dvalue2 \",\n            \"  //   \u003d\u003d\u003e [http://localhost:8088/cluster/scheduler , openQueues\u003dq1#q2\u0026param1\u003dvalue1\u0026param2\u003dvalue2]\",\n            \"  var currentParam \u003d window.location.href.split(\u0027?\u0027);\",\n            \"  var tmpCurrentParam \u003d currentParam;\",\n            \"  var queryString \u003d \u0027\u0027;\",\n            \"  if (tmpCurrentParam.length \u003e 1) {\",\n            \"    // openQueues\u003dq1#q2\u0026param1\u003dvalue1\u0026param2\u003dvalue2\",\n            \"    tmpCurrentParam \u003d tmpCurrentParam[1];\",\n            \"    currentParam \u003d tmpCurrentParam;\",\n            \"    tmpCurrentParam \u003d tmpCurrentParam.split(\u0027\u0026\u0027);\",\n            \"    var len \u003d tmpCurrentParam.length;\",\n            \"    var paramExist \u003d false;\",\n            \"    if (len \u003e 1) {    // Currently no query param are present but in future if any are added for that handling it now\",\n            \"      queryString \u003d \u0027\u0027;\",\n            \"      for (var i \u003d 0 ; i \u003c len ; i++) {  // searching for param openQueues\",\n            \"        if (tmpCurrentParam[i].substr(0,11) \u003d\u003d OPEN_QUEUES + \u0027\u003d\u0027) {\",\n            \"          if (action \u003d\u003d ACTION_OPEN) {\",\n            \"            tmpCurrentParam[i] \u003d addQueueName(tmpCurrentParam[i],queueName);\",\n            \"          }\",\n            \"          else if (action \u003d\u003d ACTION_CLOSED) {\",\n            \"            tmpCurrentParam[i] \u003d removeQueueName(tmpCurrentParam[i] , queueName);\",\n            \"          }\",\n            \"          paramExist \u003d true;\",\n            \"        }\",\n            \"        if (i \u003e 0) {\",\n            \"          queryString +\u003d \u0027\u0026\u0027;\",\n            \"        }\",\n            \"        queryString +\u003d tmpCurrentParam[i];\",\n            \"      }\",\n            \"      // If in existing query string OPEN_QUEUES param is not present\",\n            \"      if (action \u003d\u003d ACTION_OPEN \u0026\u0026 !paramExist) {\",\n            \"        queryString \u003d currentParam + \u0027\u0026\u0027 + OPEN_QUEUES + \u0027\u003d\u0027 + queueName;\",\n            \"      }\",\n            \"    } \",\n            \"    // Only one param is present in current query string\",\n            \"    else {\",\n            \"      tmpCurrentParam\u003dtmpCurrentParam[0];\",\n            \"      // checking if the only param present in query string is OPEN_QUEUES or not and making queryString accordingly\",\n            \"      if (tmpCurrentParam.substr(0,11) \u003d\u003d OPEN_QUEUES + \u0027\u003d\u0027) {\",\n            \"        if (action \u003d\u003d ACTION_OPEN) {\",\n            \"          queryString \u003d addQueueName(tmpCurrentParam,queueName);\",\n            \"        }\",\n            \"        else if (action \u003d\u003d ACTION_CLOSED) {\",\n            \"          queryString \u003d removeQueueName(tmpCurrentParam , queueName);\",\n            \"        }\",\n            \"      }\",\n            \"      else {\",\n            \"        if (action \u003d\u003d ACTION_OPEN) {\",\n            \"          queryString \u003d tmpCurrentParam + \u0027\u0026\u0027 + OPEN_QUEUES + \u0027\u003d\u0027 + queueName;\",\n            \"        }\",\n            \"      }\",\n            \"    }\",\n            \"  } else {\",\n            \"    if (action \u003d\u003d ACTION_OPEN) {\",\n            \"      tmpCurrentParam \u003d \u0027\u0027;\",\n            \"      currentParam \u003d tmpCurrentParam;\",\n            \"      queryString \u003d OPEN_QUEUES+\u0027\u003d\u0027+queueName;\",\n            \"    }\",\n            \"  }\",\n            \"  if (queryString !\u003d \u0027\u0027) {\",\n            \"    queryString \u003d \u0027?\u0027 + queryString;\",\n            \"  }\",\n            \"  var url \u003d window.location.protocol + \u0027//\u0027 + window.location.host + window.location.pathname + queryString;\",\n            \"  window.history.pushState( { path : url }, \u0027\u0027, url);\",\n            \"};\",\n            \"\",\n            \"function removeQueueName(queryString, queueName) {\",\n            \"  queryString \u003d decodeURIComponent(queryString);\",\n            \"  var index \u003d queryString.indexOf(queueName);\",\n            \"  // Finding if queue is present in query param then only remove it\",\n            \"  if (index !\u003d -1) {\",\n            \"    // removing openQueues\u003d\",\n            \"    var tmp \u003d queryString.substr(11, queryString.length);\",\n            \"    tmp \u003d tmp.split(\u0027#\u0027);\",\n            \"    var len \u003d tmp.length;\",\n            \"    var newQueryString \u003d \u0027\u0027;\",\n            \"    for (var i \u003d 0 ; i \u003c len ; i++) {\",\n            \"      if (tmp[i] !\u003d queueName) {\",\n            \"        if (newQueryString !\u003d \u0027\u0027) {\",\n            \"          newQueryString +\u003d \u0027#\u0027;\",\n            \"        }\",\n            \"        newQueryString +\u003d tmp[i];\",\n            \"      }\",\n            \"    }\",\n            \"    queryString \u003d newQueryString;\",\n            \"    if (newQueryString !\u003d \u0027\u0027) {\",\n            \"      queryString \u003d \u0027openQueues\u003d\u0027 + newQueryString;\",\n            \"    }\",\n            \"  }\",\n            \"  return queryString;\",\n            \"}\",\n            \"\",\n            \"function addQueueName(queryString, queueName) {\",\n            \"  queueArray \u003d queryString.split(\u0027#\u0027);\",\n            \"  if ($.inArray(queueArray, queueName) \u003d\u003d -1) {\",\n            \"    queryString \u003d queryString + \u0027#\u0027 + queueName;\",\n            \"  }\",\n            \"  return queryString;\",\n            \"}\").__();\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/SchedulerPageUtil.java",
      "extendedDetails": {}
    },
    "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11875. [JDK9] Adding a second copy of Hamlet without _ as a one-character identifier.\n",
      "commitDate": "27/07/17 5:10 PM",
      "commitName": "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "19/11/13 1:00 AM",
      "commitNameOld": "9ff520b7d69c831b9bc9276c9158a121a4b44be0",
      "commitAuthorOld": "Sanford Ryza",
      "daysBetweenCommits": 1346.63,
      "commitsBetweenForRepo": 9711,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,113 +1,113 @@\n     private void storeExpandedQueue (Block html) {\n       html.\n           script().$type(\"text/javascript\").\n-          _(\"function storeExpandedQueue(e, data) {\",\n+          __(\"function storeExpandedQueue(e, data) {\",\n             \"  var OPEN_QUEUES \u003d \u0027openQueues\u0027;\",\n             \"  var ACTION_OPEN \u003d \u0027open\u0027;\",\n             \"  var ACTION_CLOSED \u003d \u0027closed\u0027;\",\n             \"  var $li \u003d $(data.args[0]);\",\n             \"  var action \u003d ACTION_CLOSED;  //closed or open\",\n             \"  var queueName \u003d \u0027\u0027\",\n             \"  if ($li.hasClass(\u0027jstree-open\u0027)) {\",\n             \"      action\u003dACTION_OPEN;\",\n             \"  }\",\n             \"  queueName \u003d $li.find(\u0027.q\u0027).html();\",\n             \"  // http://localhost:8088/cluster/scheduler?openQueues\u003dq1#q2\u0026param1\u003dvalue1\u0026param2\u003dvalue2 \",\n             \"  //   \u003d\u003d\u003e [http://localhost:8088/cluster/scheduler , openQueues\u003dq1#q2\u0026param1\u003dvalue1\u0026param2\u003dvalue2]\",\n             \"  var currentParam \u003d window.location.href.split(\u0027?\u0027);\",\n             \"  var tmpCurrentParam \u003d currentParam;\",\n             \"  var queryString \u003d \u0027\u0027;\",\n             \"  if (tmpCurrentParam.length \u003e 1) {\",\n             \"    // openQueues\u003dq1#q2\u0026param1\u003dvalue1\u0026param2\u003dvalue2\",\n             \"    tmpCurrentParam \u003d tmpCurrentParam[1];\",\n             \"    currentParam \u003d tmpCurrentParam;\",\n             \"    tmpCurrentParam \u003d tmpCurrentParam.split(\u0027\u0026\u0027);\",\n             \"    var len \u003d tmpCurrentParam.length;\",\n             \"    var paramExist \u003d false;\",\n             \"    if (len \u003e 1) {    // Currently no query param are present but in future if any are added for that handling it now\",\n             \"      queryString \u003d \u0027\u0027;\",\n             \"      for (var i \u003d 0 ; i \u003c len ; i++) {  // searching for param openQueues\",\n             \"        if (tmpCurrentParam[i].substr(0,11) \u003d\u003d OPEN_QUEUES + \u0027\u003d\u0027) {\",\n             \"          if (action \u003d\u003d ACTION_OPEN) {\",\n             \"            tmpCurrentParam[i] \u003d addQueueName(tmpCurrentParam[i],queueName);\",\n             \"          }\",\n             \"          else if (action \u003d\u003d ACTION_CLOSED) {\",\n             \"            tmpCurrentParam[i] \u003d removeQueueName(tmpCurrentParam[i] , queueName);\",\n             \"          }\",\n             \"          paramExist \u003d true;\",\n             \"        }\",\n             \"        if (i \u003e 0) {\",\n             \"          queryString +\u003d \u0027\u0026\u0027;\",\n             \"        }\",\n             \"        queryString +\u003d tmpCurrentParam[i];\",\n             \"      }\",\n             \"      // If in existing query string OPEN_QUEUES param is not present\",\n             \"      if (action \u003d\u003d ACTION_OPEN \u0026\u0026 !paramExist) {\",\n             \"        queryString \u003d currentParam + \u0027\u0026\u0027 + OPEN_QUEUES + \u0027\u003d\u0027 + queueName;\",\n             \"      }\",\n             \"    } \",\n             \"    // Only one param is present in current query string\",\n             \"    else {\",\n             \"      tmpCurrentParam\u003dtmpCurrentParam[0];\",\n             \"      // checking if the only param present in query string is OPEN_QUEUES or not and making queryString accordingly\",\n             \"      if (tmpCurrentParam.substr(0,11) \u003d\u003d OPEN_QUEUES + \u0027\u003d\u0027) {\",\n             \"        if (action \u003d\u003d ACTION_OPEN) {\",\n             \"          queryString \u003d addQueueName(tmpCurrentParam,queueName);\",\n             \"        }\",\n             \"        else if (action \u003d\u003d ACTION_CLOSED) {\",\n             \"          queryString \u003d removeQueueName(tmpCurrentParam , queueName);\",\n             \"        }\",\n             \"      }\",\n             \"      else {\",\n             \"        if (action \u003d\u003d ACTION_OPEN) {\",\n             \"          queryString \u003d tmpCurrentParam + \u0027\u0026\u0027 + OPEN_QUEUES + \u0027\u003d\u0027 + queueName;\",\n             \"        }\",\n             \"      }\",\n             \"    }\",\n             \"  } else {\",\n             \"    if (action \u003d\u003d ACTION_OPEN) {\",\n             \"      tmpCurrentParam \u003d \u0027\u0027;\",\n             \"      currentParam \u003d tmpCurrentParam;\",\n             \"      queryString \u003d OPEN_QUEUES+\u0027\u003d\u0027+queueName;\",\n             \"    }\",\n             \"  }\",\n             \"  if (queryString !\u003d \u0027\u0027) {\",\n             \"    queryString \u003d \u0027?\u0027 + queryString;\",\n             \"  }\",\n             \"  var url \u003d window.location.protocol + \u0027//\u0027 + window.location.host + window.location.pathname + queryString;\",\n             \"  window.history.pushState( { path : url }, \u0027\u0027, url);\",\n             \"};\",\n             \"\",\n             \"function removeQueueName(queryString, queueName) {\",\n             \"  var index \u003d queryString.indexOf(queueName);\",\n             \"  // Finding if queue is present in query param then only remove it\",\n             \"  if (index !\u003d -1) {\",\n             \"    // removing openQueues\u003d\",\n             \"    var tmp \u003d queryString.substr(11, queryString.length);\",\n             \"    tmp \u003d tmp.split(\u0027#\u0027);\",\n             \"    var len \u003d tmp.length;\",\n             \"    var newQueryString \u003d \u0027\u0027;\",\n             \"    for (var i \u003d 0 ; i \u003c len ; i++) {\",\n             \"      if (tmp[i] !\u003d queueName) {\",\n             \"        if (newQueryString !\u003d \u0027\u0027) {\",\n             \"          newQueryString +\u003d \u0027#\u0027;\",\n             \"        }\",\n             \"        newQueryString +\u003d tmp[i];\",\n             \"      }\",\n             \"    }\",\n             \"    queryString \u003d newQueryString;\",\n             \"    if (newQueryString !\u003d \u0027\u0027) {\",\n             \"      queryString \u003d \u0027openQueues\u003d\u0027 + newQueryString;\",\n             \"    }\",\n             \"  }\",\n             \"  return queryString;\",\n             \"}\",\n             \"\",\n             \"function addQueueName(queryString, queueName) {\",\n             \"  queueArray \u003d queryString.split(\u0027#\u0027);\",\n             \"  if ($.inArray(queueArray, queueName) \u003d\u003d -1) {\",\n             \"    queryString \u003d queryString + \u0027#\u0027 + queueName;\",\n             \"  }\",\n             \"  return queryString;\",\n-            \"}\")._();\n+            \"}\").__();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void storeExpandedQueue (Block html) {\n      html.\n          script().$type(\"text/javascript\").\n          __(\"function storeExpandedQueue(e, data) {\",\n            \"  var OPEN_QUEUES \u003d \u0027openQueues\u0027;\",\n            \"  var ACTION_OPEN \u003d \u0027open\u0027;\",\n            \"  var ACTION_CLOSED \u003d \u0027closed\u0027;\",\n            \"  var $li \u003d $(data.args[0]);\",\n            \"  var action \u003d ACTION_CLOSED;  //closed or open\",\n            \"  var queueName \u003d \u0027\u0027\",\n            \"  if ($li.hasClass(\u0027jstree-open\u0027)) {\",\n            \"      action\u003dACTION_OPEN;\",\n            \"  }\",\n            \"  queueName \u003d $li.find(\u0027.q\u0027).html();\",\n            \"  // http://localhost:8088/cluster/scheduler?openQueues\u003dq1#q2\u0026param1\u003dvalue1\u0026param2\u003dvalue2 \",\n            \"  //   \u003d\u003d\u003e [http://localhost:8088/cluster/scheduler , openQueues\u003dq1#q2\u0026param1\u003dvalue1\u0026param2\u003dvalue2]\",\n            \"  var currentParam \u003d window.location.href.split(\u0027?\u0027);\",\n            \"  var tmpCurrentParam \u003d currentParam;\",\n            \"  var queryString \u003d \u0027\u0027;\",\n            \"  if (tmpCurrentParam.length \u003e 1) {\",\n            \"    // openQueues\u003dq1#q2\u0026param1\u003dvalue1\u0026param2\u003dvalue2\",\n            \"    tmpCurrentParam \u003d tmpCurrentParam[1];\",\n            \"    currentParam \u003d tmpCurrentParam;\",\n            \"    tmpCurrentParam \u003d tmpCurrentParam.split(\u0027\u0026\u0027);\",\n            \"    var len \u003d tmpCurrentParam.length;\",\n            \"    var paramExist \u003d false;\",\n            \"    if (len \u003e 1) {    // Currently no query param are present but in future if any are added for that handling it now\",\n            \"      queryString \u003d \u0027\u0027;\",\n            \"      for (var i \u003d 0 ; i \u003c len ; i++) {  // searching for param openQueues\",\n            \"        if (tmpCurrentParam[i].substr(0,11) \u003d\u003d OPEN_QUEUES + \u0027\u003d\u0027) {\",\n            \"          if (action \u003d\u003d ACTION_OPEN) {\",\n            \"            tmpCurrentParam[i] \u003d addQueueName(tmpCurrentParam[i],queueName);\",\n            \"          }\",\n            \"          else if (action \u003d\u003d ACTION_CLOSED) {\",\n            \"            tmpCurrentParam[i] \u003d removeQueueName(tmpCurrentParam[i] , queueName);\",\n            \"          }\",\n            \"          paramExist \u003d true;\",\n            \"        }\",\n            \"        if (i \u003e 0) {\",\n            \"          queryString +\u003d \u0027\u0026\u0027;\",\n            \"        }\",\n            \"        queryString +\u003d tmpCurrentParam[i];\",\n            \"      }\",\n            \"      // If in existing query string OPEN_QUEUES param is not present\",\n            \"      if (action \u003d\u003d ACTION_OPEN \u0026\u0026 !paramExist) {\",\n            \"        queryString \u003d currentParam + \u0027\u0026\u0027 + OPEN_QUEUES + \u0027\u003d\u0027 + queueName;\",\n            \"      }\",\n            \"    } \",\n            \"    // Only one param is present in current query string\",\n            \"    else {\",\n            \"      tmpCurrentParam\u003dtmpCurrentParam[0];\",\n            \"      // checking if the only param present in query string is OPEN_QUEUES or not and making queryString accordingly\",\n            \"      if (tmpCurrentParam.substr(0,11) \u003d\u003d OPEN_QUEUES + \u0027\u003d\u0027) {\",\n            \"        if (action \u003d\u003d ACTION_OPEN) {\",\n            \"          queryString \u003d addQueueName(tmpCurrentParam,queueName);\",\n            \"        }\",\n            \"        else if (action \u003d\u003d ACTION_CLOSED) {\",\n            \"          queryString \u003d removeQueueName(tmpCurrentParam , queueName);\",\n            \"        }\",\n            \"      }\",\n            \"      else {\",\n            \"        if (action \u003d\u003d ACTION_OPEN) {\",\n            \"          queryString \u003d tmpCurrentParam + \u0027\u0026\u0027 + OPEN_QUEUES + \u0027\u003d\u0027 + queueName;\",\n            \"        }\",\n            \"      }\",\n            \"    }\",\n            \"  } else {\",\n            \"    if (action \u003d\u003d ACTION_OPEN) {\",\n            \"      tmpCurrentParam \u003d \u0027\u0027;\",\n            \"      currentParam \u003d tmpCurrentParam;\",\n            \"      queryString \u003d OPEN_QUEUES+\u0027\u003d\u0027+queueName;\",\n            \"    }\",\n            \"  }\",\n            \"  if (queryString !\u003d \u0027\u0027) {\",\n            \"    queryString \u003d \u0027?\u0027 + queryString;\",\n            \"  }\",\n            \"  var url \u003d window.location.protocol + \u0027//\u0027 + window.location.host + window.location.pathname + queryString;\",\n            \"  window.history.pushState( { path : url }, \u0027\u0027, url);\",\n            \"};\",\n            \"\",\n            \"function removeQueueName(queryString, queueName) {\",\n            \"  var index \u003d queryString.indexOf(queueName);\",\n            \"  // Finding if queue is present in query param then only remove it\",\n            \"  if (index !\u003d -1) {\",\n            \"    // removing openQueues\u003d\",\n            \"    var tmp \u003d queryString.substr(11, queryString.length);\",\n            \"    tmp \u003d tmp.split(\u0027#\u0027);\",\n            \"    var len \u003d tmp.length;\",\n            \"    var newQueryString \u003d \u0027\u0027;\",\n            \"    for (var i \u003d 0 ; i \u003c len ; i++) {\",\n            \"      if (tmp[i] !\u003d queueName) {\",\n            \"        if (newQueryString !\u003d \u0027\u0027) {\",\n            \"          newQueryString +\u003d \u0027#\u0027;\",\n            \"        }\",\n            \"        newQueryString +\u003d tmp[i];\",\n            \"      }\",\n            \"    }\",\n            \"    queryString \u003d newQueryString;\",\n            \"    if (newQueryString !\u003d \u0027\u0027) {\",\n            \"      queryString \u003d \u0027openQueues\u003d\u0027 + newQueryString;\",\n            \"    }\",\n            \"  }\",\n            \"  return queryString;\",\n            \"}\",\n            \"\",\n            \"function addQueueName(queryString, queueName) {\",\n            \"  queueArray \u003d queryString.split(\u0027#\u0027);\",\n            \"  if ($.inArray(queueArray, queueName) \u003d\u003d -1) {\",\n            \"    queryString \u003d queryString + \u0027#\u0027 + queueName;\",\n            \"  }\",\n            \"  return queryString;\",\n            \"}\").__();\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/SchedulerPageUtil.java",
      "extendedDetails": {}
    },
    "9ff520b7d69c831b9bc9276c9158a121a4b44be0": {
      "type": "Yintroduced",
      "commitMessage": "YARN-584. In scheduler web UIs, queues unexpand on refresh. (Harshit Daga via Sandy Ryza)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1543350 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/11/13 1:00 AM",
      "commitName": "9ff520b7d69c831b9bc9276c9158a121a4b44be0",
      "commitAuthor": "Sanford Ryza",
      "diff": "@@ -0,0 +1,113 @@\n+    private void storeExpandedQueue (Block html) {\n+      html.\n+          script().$type(\"text/javascript\").\n+          _(\"function storeExpandedQueue(e, data) {\",\n+            \"  var OPEN_QUEUES \u003d \u0027openQueues\u0027;\",\n+            \"  var ACTION_OPEN \u003d \u0027open\u0027;\",\n+            \"  var ACTION_CLOSED \u003d \u0027closed\u0027;\",\n+            \"  var $li \u003d $(data.args[0]);\",\n+            \"  var action \u003d ACTION_CLOSED;  //closed or open\",\n+            \"  var queueName \u003d \u0027\u0027\",\n+            \"  if ($li.hasClass(\u0027jstree-open\u0027)) {\",\n+            \"      action\u003dACTION_OPEN;\",\n+            \"  }\",\n+            \"  queueName \u003d $li.find(\u0027.q\u0027).html();\",\n+            \"  // http://localhost:8088/cluster/scheduler?openQueues\u003dq1#q2\u0026param1\u003dvalue1\u0026param2\u003dvalue2 \",\n+            \"  //   \u003d\u003d\u003e [http://localhost:8088/cluster/scheduler , openQueues\u003dq1#q2\u0026param1\u003dvalue1\u0026param2\u003dvalue2]\",\n+            \"  var currentParam \u003d window.location.href.split(\u0027?\u0027);\",\n+            \"  var tmpCurrentParam \u003d currentParam;\",\n+            \"  var queryString \u003d \u0027\u0027;\",\n+            \"  if (tmpCurrentParam.length \u003e 1) {\",\n+            \"    // openQueues\u003dq1#q2\u0026param1\u003dvalue1\u0026param2\u003dvalue2\",\n+            \"    tmpCurrentParam \u003d tmpCurrentParam[1];\",\n+            \"    currentParam \u003d tmpCurrentParam;\",\n+            \"    tmpCurrentParam \u003d tmpCurrentParam.split(\u0027\u0026\u0027);\",\n+            \"    var len \u003d tmpCurrentParam.length;\",\n+            \"    var paramExist \u003d false;\",\n+            \"    if (len \u003e 1) {    // Currently no query param are present but in future if any are added for that handling it now\",\n+            \"      queryString \u003d \u0027\u0027;\",\n+            \"      for (var i \u003d 0 ; i \u003c len ; i++) {  // searching for param openQueues\",\n+            \"        if (tmpCurrentParam[i].substr(0,11) \u003d\u003d OPEN_QUEUES + \u0027\u003d\u0027) {\",\n+            \"          if (action \u003d\u003d ACTION_OPEN) {\",\n+            \"            tmpCurrentParam[i] \u003d addQueueName(tmpCurrentParam[i],queueName);\",\n+            \"          }\",\n+            \"          else if (action \u003d\u003d ACTION_CLOSED) {\",\n+            \"            tmpCurrentParam[i] \u003d removeQueueName(tmpCurrentParam[i] , queueName);\",\n+            \"          }\",\n+            \"          paramExist \u003d true;\",\n+            \"        }\",\n+            \"        if (i \u003e 0) {\",\n+            \"          queryString +\u003d \u0027\u0026\u0027;\",\n+            \"        }\",\n+            \"        queryString +\u003d tmpCurrentParam[i];\",\n+            \"      }\",\n+            \"      // If in existing query string OPEN_QUEUES param is not present\",\n+            \"      if (action \u003d\u003d ACTION_OPEN \u0026\u0026 !paramExist) {\",\n+            \"        queryString \u003d currentParam + \u0027\u0026\u0027 + OPEN_QUEUES + \u0027\u003d\u0027 + queueName;\",\n+            \"      }\",\n+            \"    } \",\n+            \"    // Only one param is present in current query string\",\n+            \"    else {\",\n+            \"      tmpCurrentParam\u003dtmpCurrentParam[0];\",\n+            \"      // checking if the only param present in query string is OPEN_QUEUES or not and making queryString accordingly\",\n+            \"      if (tmpCurrentParam.substr(0,11) \u003d\u003d OPEN_QUEUES + \u0027\u003d\u0027) {\",\n+            \"        if (action \u003d\u003d ACTION_OPEN) {\",\n+            \"          queryString \u003d addQueueName(tmpCurrentParam,queueName);\",\n+            \"        }\",\n+            \"        else if (action \u003d\u003d ACTION_CLOSED) {\",\n+            \"          queryString \u003d removeQueueName(tmpCurrentParam , queueName);\",\n+            \"        }\",\n+            \"      }\",\n+            \"      else {\",\n+            \"        if (action \u003d\u003d ACTION_OPEN) {\",\n+            \"          queryString \u003d tmpCurrentParam + \u0027\u0026\u0027 + OPEN_QUEUES + \u0027\u003d\u0027 + queueName;\",\n+            \"        }\",\n+            \"      }\",\n+            \"    }\",\n+            \"  } else {\",\n+            \"    if (action \u003d\u003d ACTION_OPEN) {\",\n+            \"      tmpCurrentParam \u003d \u0027\u0027;\",\n+            \"      currentParam \u003d tmpCurrentParam;\",\n+            \"      queryString \u003d OPEN_QUEUES+\u0027\u003d\u0027+queueName;\",\n+            \"    }\",\n+            \"  }\",\n+            \"  if (queryString !\u003d \u0027\u0027) {\",\n+            \"    queryString \u003d \u0027?\u0027 + queryString;\",\n+            \"  }\",\n+            \"  var url \u003d window.location.protocol + \u0027//\u0027 + window.location.host + window.location.pathname + queryString;\",\n+            \"  window.history.pushState( { path : url }, \u0027\u0027, url);\",\n+            \"};\",\n+            \"\",\n+            \"function removeQueueName(queryString, queueName) {\",\n+            \"  var index \u003d queryString.indexOf(queueName);\",\n+            \"  // Finding if queue is present in query param then only remove it\",\n+            \"  if (index !\u003d -1) {\",\n+            \"    // removing openQueues\u003d\",\n+            \"    var tmp \u003d queryString.substr(11, queryString.length);\",\n+            \"    tmp \u003d tmp.split(\u0027#\u0027);\",\n+            \"    var len \u003d tmp.length;\",\n+            \"    var newQueryString \u003d \u0027\u0027;\",\n+            \"    for (var i \u003d 0 ; i \u003c len ; i++) {\",\n+            \"      if (tmp[i] !\u003d queueName) {\",\n+            \"        if (newQueryString !\u003d \u0027\u0027) {\",\n+            \"          newQueryString +\u003d \u0027#\u0027;\",\n+            \"        }\",\n+            \"        newQueryString +\u003d tmp[i];\",\n+            \"      }\",\n+            \"    }\",\n+            \"    queryString \u003d newQueryString;\",\n+            \"    if (newQueryString !\u003d \u0027\u0027) {\",\n+            \"      queryString \u003d \u0027openQueues\u003d\u0027 + newQueryString;\",\n+            \"    }\",\n+            \"  }\",\n+            \"  return queryString;\",\n+            \"}\",\n+            \"\",\n+            \"function addQueueName(queryString, queueName) {\",\n+            \"  queueArray \u003d queryString.split(\u0027#\u0027);\",\n+            \"  if ($.inArray(queueArray, queueName) \u003d\u003d -1) {\",\n+            \"    queryString \u003d queryString + \u0027#\u0027 + queueName;\",\n+            \"  }\",\n+            \"  return queryString;\",\n+            \"}\")._();\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private void storeExpandedQueue (Block html) {\n      html.\n          script().$type(\"text/javascript\").\n          _(\"function storeExpandedQueue(e, data) {\",\n            \"  var OPEN_QUEUES \u003d \u0027openQueues\u0027;\",\n            \"  var ACTION_OPEN \u003d \u0027open\u0027;\",\n            \"  var ACTION_CLOSED \u003d \u0027closed\u0027;\",\n            \"  var $li \u003d $(data.args[0]);\",\n            \"  var action \u003d ACTION_CLOSED;  //closed or open\",\n            \"  var queueName \u003d \u0027\u0027\",\n            \"  if ($li.hasClass(\u0027jstree-open\u0027)) {\",\n            \"      action\u003dACTION_OPEN;\",\n            \"  }\",\n            \"  queueName \u003d $li.find(\u0027.q\u0027).html();\",\n            \"  // http://localhost:8088/cluster/scheduler?openQueues\u003dq1#q2\u0026param1\u003dvalue1\u0026param2\u003dvalue2 \",\n            \"  //   \u003d\u003d\u003e [http://localhost:8088/cluster/scheduler , openQueues\u003dq1#q2\u0026param1\u003dvalue1\u0026param2\u003dvalue2]\",\n            \"  var currentParam \u003d window.location.href.split(\u0027?\u0027);\",\n            \"  var tmpCurrentParam \u003d currentParam;\",\n            \"  var queryString \u003d \u0027\u0027;\",\n            \"  if (tmpCurrentParam.length \u003e 1) {\",\n            \"    // openQueues\u003dq1#q2\u0026param1\u003dvalue1\u0026param2\u003dvalue2\",\n            \"    tmpCurrentParam \u003d tmpCurrentParam[1];\",\n            \"    currentParam \u003d tmpCurrentParam;\",\n            \"    tmpCurrentParam \u003d tmpCurrentParam.split(\u0027\u0026\u0027);\",\n            \"    var len \u003d tmpCurrentParam.length;\",\n            \"    var paramExist \u003d false;\",\n            \"    if (len \u003e 1) {    // Currently no query param are present but in future if any are added for that handling it now\",\n            \"      queryString \u003d \u0027\u0027;\",\n            \"      for (var i \u003d 0 ; i \u003c len ; i++) {  // searching for param openQueues\",\n            \"        if (tmpCurrentParam[i].substr(0,11) \u003d\u003d OPEN_QUEUES + \u0027\u003d\u0027) {\",\n            \"          if (action \u003d\u003d ACTION_OPEN) {\",\n            \"            tmpCurrentParam[i] \u003d addQueueName(tmpCurrentParam[i],queueName);\",\n            \"          }\",\n            \"          else if (action \u003d\u003d ACTION_CLOSED) {\",\n            \"            tmpCurrentParam[i] \u003d removeQueueName(tmpCurrentParam[i] , queueName);\",\n            \"          }\",\n            \"          paramExist \u003d true;\",\n            \"        }\",\n            \"        if (i \u003e 0) {\",\n            \"          queryString +\u003d \u0027\u0026\u0027;\",\n            \"        }\",\n            \"        queryString +\u003d tmpCurrentParam[i];\",\n            \"      }\",\n            \"      // If in existing query string OPEN_QUEUES param is not present\",\n            \"      if (action \u003d\u003d ACTION_OPEN \u0026\u0026 !paramExist) {\",\n            \"        queryString \u003d currentParam + \u0027\u0026\u0027 + OPEN_QUEUES + \u0027\u003d\u0027 + queueName;\",\n            \"      }\",\n            \"    } \",\n            \"    // Only one param is present in current query string\",\n            \"    else {\",\n            \"      tmpCurrentParam\u003dtmpCurrentParam[0];\",\n            \"      // checking if the only param present in query string is OPEN_QUEUES or not and making queryString accordingly\",\n            \"      if (tmpCurrentParam.substr(0,11) \u003d\u003d OPEN_QUEUES + \u0027\u003d\u0027) {\",\n            \"        if (action \u003d\u003d ACTION_OPEN) {\",\n            \"          queryString \u003d addQueueName(tmpCurrentParam,queueName);\",\n            \"        }\",\n            \"        else if (action \u003d\u003d ACTION_CLOSED) {\",\n            \"          queryString \u003d removeQueueName(tmpCurrentParam , queueName);\",\n            \"        }\",\n            \"      }\",\n            \"      else {\",\n            \"        if (action \u003d\u003d ACTION_OPEN) {\",\n            \"          queryString \u003d tmpCurrentParam + \u0027\u0026\u0027 + OPEN_QUEUES + \u0027\u003d\u0027 + queueName;\",\n            \"        }\",\n            \"      }\",\n            \"    }\",\n            \"  } else {\",\n            \"    if (action \u003d\u003d ACTION_OPEN) {\",\n            \"      tmpCurrentParam \u003d \u0027\u0027;\",\n            \"      currentParam \u003d tmpCurrentParam;\",\n            \"      queryString \u003d OPEN_QUEUES+\u0027\u003d\u0027+queueName;\",\n            \"    }\",\n            \"  }\",\n            \"  if (queryString !\u003d \u0027\u0027) {\",\n            \"    queryString \u003d \u0027?\u0027 + queryString;\",\n            \"  }\",\n            \"  var url \u003d window.location.protocol + \u0027//\u0027 + window.location.host + window.location.pathname + queryString;\",\n            \"  window.history.pushState( { path : url }, \u0027\u0027, url);\",\n            \"};\",\n            \"\",\n            \"function removeQueueName(queryString, queueName) {\",\n            \"  var index \u003d queryString.indexOf(queueName);\",\n            \"  // Finding if queue is present in query param then only remove it\",\n            \"  if (index !\u003d -1) {\",\n            \"    // removing openQueues\u003d\",\n            \"    var tmp \u003d queryString.substr(11, queryString.length);\",\n            \"    tmp \u003d tmp.split(\u0027#\u0027);\",\n            \"    var len \u003d tmp.length;\",\n            \"    var newQueryString \u003d \u0027\u0027;\",\n            \"    for (var i \u003d 0 ; i \u003c len ; i++) {\",\n            \"      if (tmp[i] !\u003d queueName) {\",\n            \"        if (newQueryString !\u003d \u0027\u0027) {\",\n            \"          newQueryString +\u003d \u0027#\u0027;\",\n            \"        }\",\n            \"        newQueryString +\u003d tmp[i];\",\n            \"      }\",\n            \"    }\",\n            \"    queryString \u003d newQueryString;\",\n            \"    if (newQueryString !\u003d \u0027\u0027) {\",\n            \"      queryString \u003d \u0027openQueues\u003d\u0027 + newQueryString;\",\n            \"    }\",\n            \"  }\",\n            \"  return queryString;\",\n            \"}\",\n            \"\",\n            \"function addQueueName(queryString, queueName) {\",\n            \"  queueArray \u003d queryString.split(\u0027#\u0027);\",\n            \"  if ($.inArray(queueArray, queueName) \u003d\u003d -1) {\",\n            \"    queryString \u003d queryString + \u0027#\u0027 + queueName;\",\n            \"  }\",\n            \"  return queryString;\",\n            \"}\")._();\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/SchedulerPageUtil.java"
    }
  }
}