{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ActiveStandbyElector.java",
  "functionName": "waitForZKConnectionEvent",
  "functionId": "waitForZKConnectionEvent___connectionTimeoutMs-int",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/ActiveStandbyElector.java",
  "functionStartLine": 1163,
  "functionEndLine": 1177,
  "numCommitsSeen": 38,
  "timeTaken": 1597,
  "changeHistory": [
    "f20dc0d5770d3876954faf0a6e8dcce6539ffc23",
    "d863f7a1e452ecb26c3cb92bc6c90e552731304b",
    "22a78a75b4cc700464fdbbe84eff321b8460f70e"
  ],
  "changeHistoryShort": {
    "f20dc0d5770d3876954faf0a6e8dcce6539ffc23": "Ybodychange",
    "d863f7a1e452ecb26c3cb92bc6c90e552731304b": "Ybodychange",
    "22a78a75b4cc700464fdbbe84eff321b8460f70e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f20dc0d5770d3876954faf0a6e8dcce6539ffc23": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10571. Use Log.*(Object, Throwable) overload to log exceptions.\nContributed by Andras Bokor.\n",
      "commitDate": "14/02/18 8:20 AM",
      "commitName": "f20dc0d5770d3876954faf0a6e8dcce6539ffc23",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "17/07/17 9:32 PM",
      "commitNameOld": "ccaf036662e22da14583942054898c99fa51dae5",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 211.49,
      "commitsBetweenForRepo": 1578,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n     private void waitForZKConnectionEvent(int connectionTimeoutMs)\n         throws KeeperException, IOException {\n       try {\n         if (!hasReceivedEvent.await(connectionTimeoutMs, TimeUnit.MILLISECONDS)) {\n-          LOG.error(\"Connection timed out: couldn\u0027t connect to ZooKeeper in \"\n-              + connectionTimeoutMs + \" milliseconds\");\n+          LOG.error(\"Connection timed out: couldn\u0027t connect to ZooKeeper in \" +\n+              \"{} milliseconds\", connectionTimeoutMs);\n           zk.close();\n           throw KeeperException.create(Code.CONNECTIONLOSS);\n         }\n       } catch (InterruptedException e) {\n         Thread.currentThread().interrupt();\n         throw new IOException(\n             \"Interrupted when connecting to zookeeper server\", e);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void waitForZKConnectionEvent(int connectionTimeoutMs)\n        throws KeeperException, IOException {\n      try {\n        if (!hasReceivedEvent.await(connectionTimeoutMs, TimeUnit.MILLISECONDS)) {\n          LOG.error(\"Connection timed out: couldn\u0027t connect to ZooKeeper in \" +\n              \"{} milliseconds\", connectionTimeoutMs);\n          zk.close();\n          throw KeeperException.create(Code.CONNECTIONLOSS);\n        }\n      } catch (InterruptedException e) {\n        Thread.currentThread().interrupt();\n        throw new IOException(\n            \"Interrupted when connecting to zookeeper server\", e);\n      }\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/ActiveStandbyElector.java",
      "extendedDetails": {}
    },
    "d863f7a1e452ecb26c3cb92bc6c90e552731304b": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-9183. Potential deadlock in ActiveStandbyElector.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1431251 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/01/13 2:05 AM",
      "commitName": "d863f7a1e452ecb26c3cb92bc6c90e552731304b",
      "commitAuthor": "Thomas White",
      "commitDateOld": "10/12/12 2:09 PM",
      "commitNameOld": "22a78a75b4cc700464fdbbe84eff321b8460f70e",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 30.5,
      "commitsBetweenForRepo": 125,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,15 @@\n     private void waitForZKConnectionEvent(int connectionTimeoutMs)\n         throws KeeperException, IOException {\n       try {\n         if (!hasReceivedEvent.await(connectionTimeoutMs, TimeUnit.MILLISECONDS)) {\n           LOG.error(\"Connection timed out: couldn\u0027t connect to ZooKeeper in \"\n               + connectionTimeoutMs + \" milliseconds\");\n-          synchronized (this) {\n-            zk.close();\n-          }\n+          zk.close();\n           throw KeeperException.create(Code.CONNECTIONLOSS);\n         }\n       } catch (InterruptedException e) {\n         Thread.currentThread().interrupt();\n         throw new IOException(\n             \"Interrupted when connecting to zookeeper server\", e);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void waitForZKConnectionEvent(int connectionTimeoutMs)\n        throws KeeperException, IOException {\n      try {\n        if (!hasReceivedEvent.await(connectionTimeoutMs, TimeUnit.MILLISECONDS)) {\n          LOG.error(\"Connection timed out: couldn\u0027t connect to ZooKeeper in \"\n              + connectionTimeoutMs + \" milliseconds\");\n          zk.close();\n          throw KeeperException.create(Code.CONNECTIONLOSS);\n        }\n      } catch (InterruptedException e) {\n        Thread.currentThread().interrupt();\n        throw new IOException(\n            \"Interrupted when connecting to zookeeper server\", e);\n      }\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/ActiveStandbyElector.java",
      "extendedDetails": {}
    },
    "22a78a75b4cc700464fdbbe84eff321b8460f70e": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-9126. FormatZK and ZKFC startup can fail due to zkclient connection establishment delay. Contributed by Rakesh R and Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1419831 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/12/12 2:09 PM",
      "commitName": "22a78a75b4cc700464fdbbe84eff321b8460f70e",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,17 @@\n+    private void waitForZKConnectionEvent(int connectionTimeoutMs)\n+        throws KeeperException, IOException {\n+      try {\n+        if (!hasReceivedEvent.await(connectionTimeoutMs, TimeUnit.MILLISECONDS)) {\n+          LOG.error(\"Connection timed out: couldn\u0027t connect to ZooKeeper in \"\n+              + connectionTimeoutMs + \" milliseconds\");\n+          synchronized (this) {\n+            zk.close();\n+          }\n+          throw KeeperException.create(Code.CONNECTIONLOSS);\n+        }\n+      } catch (InterruptedException e) {\n+        Thread.currentThread().interrupt();\n+        throw new IOException(\n+            \"Interrupted when connecting to zookeeper server\", e);\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private void waitForZKConnectionEvent(int connectionTimeoutMs)\n        throws KeeperException, IOException {\n      try {\n        if (!hasReceivedEvent.await(connectionTimeoutMs, TimeUnit.MILLISECONDS)) {\n          LOG.error(\"Connection timed out: couldn\u0027t connect to ZooKeeper in \"\n              + connectionTimeoutMs + \" milliseconds\");\n          synchronized (this) {\n            zk.close();\n          }\n          throw KeeperException.create(Code.CONNECTIONLOSS);\n        }\n      } catch (InterruptedException e) {\n        Thread.currentThread().interrupt();\n        throw new IOException(\n            \"Interrupted when connecting to zookeeper server\", e);\n      }\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/ActiveStandbyElector.java"
    }
  }
}