{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "GreedyPlanner.java",
  "functionName": "plan",
  "functionId": "plan___node-DiskBalancerDataNode",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/diskbalancer/planner/GreedyPlanner.java",
  "functionStartLine": 66,
  "functionEndLine": 83,
  "numCommitsSeen": 8,
  "timeTaken": 1189,
  "changeHistory": [
    "69489ff2d18a26be9c56d632672079e134f1cd99",
    "66fa34c839c89733839cb67878fdfdc4b1f65ab8",
    "5724a103161424f4b293ba937f0d0540179f36ac"
  ],
  "changeHistoryShort": {
    "69489ff2d18a26be9c56d632672079e134f1cd99": "Ybodychange",
    "66fa34c839c89733839cb67878fdfdc4b1f65ab8": "Ybodychange",
    "5724a103161424f4b293ba937f0d0540179f36ac": "Yintroduced"
  },
  "changeHistoryDetails": {
    "69489ff2d18a26be9c56d632672079e134f1cd99": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14119. Improve GreedyPlanner Parameter Logging. Contributed by Beluga Behr.\n",
      "commitDate": "03/12/18 12:55 PM",
      "commitName": "69489ff2d18a26be9c56d632672079e134f1cd99",
      "commitAuthor": "Giovanni Matteo Fumarola",
      "commitDateOld": "30/10/18 10:43 PM",
      "commitNameOld": "fac9f91b2944cee641049fffcafa6b65e0cf68f2",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 33.63,
      "commitsBetweenForRepo": 232,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,18 @@\n   public NodePlan plan(DiskBalancerDataNode node) throws Exception {\n-    long startTime \u003d Time.monotonicNow();\n+    final long startTime \u003d Time.monotonicNow();\n     NodePlan plan \u003d new NodePlan(node.getDataNodeName(),\n         node.getDataNodePort());\n     LOG.info(\"Starting plan for Node : {}:{}\",\n         node.getDataNodeName(), node.getDataNodePort());\n     while (node.isBalancingNeeded(this.threshold)) {\n       for (DiskBalancerVolumeSet vSet : node.getVolumeSets().values()) {\n         balanceVolumeSet(node, vSet, plan);\n       }\n     }\n \n-    long endTime \u003d Time.monotonicNow();\n-    String message \u003d String\n-        .format(\"Compute Plan for Node : %s:%d took %d ms \",\n-            node.getDataNodeName(), node.getDataNodePort(),\n-            endTime - startTime);\n-    LOG.info(message);\n+    final long endTime \u003d Time.monotonicNow();\n+    LOG.info(\"Compute Plan for Node : {}:{} took {} ms\",\n+        node.getDataNodeName(), node.getDataNodePort(), endTime - startTime);\n+\n     return plan;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public NodePlan plan(DiskBalancerDataNode node) throws Exception {\n    final long startTime \u003d Time.monotonicNow();\n    NodePlan plan \u003d new NodePlan(node.getDataNodeName(),\n        node.getDataNodePort());\n    LOG.info(\"Starting plan for Node : {}:{}\",\n        node.getDataNodeName(), node.getDataNodePort());\n    while (node.isBalancingNeeded(this.threshold)) {\n      for (DiskBalancerVolumeSet vSet : node.getVolumeSets().values()) {\n        balanceVolumeSet(node, vSet, plan);\n      }\n    }\n\n    final long endTime \u003d Time.monotonicNow();\n    LOG.info(\"Compute Plan for Node : {}:{} took {} ms\",\n        node.getDataNodeName(), node.getDataNodePort(), endTime - startTime);\n\n    return plan;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/diskbalancer/planner/GreedyPlanner.java",
      "extendedDetails": {}
    },
    "66fa34c839c89733839cb67878fdfdc4b1f65ab8": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10557. Fix handling of the -fs Generic option. (Arpit Agarwal)\n",
      "commitDate": "23/06/16 6:27 PM",
      "commitName": "66fa34c839c89733839cb67878fdfdc4b1f65ab8",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "23/06/16 6:21 PM",
      "commitNameOld": "75882ec0b096da862b8b373b70a091c19f281b2a",
      "commitAuthorOld": "Anu Engineer",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 20,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,20 @@\n   public NodePlan plan(DiskBalancerDataNode node) throws Exception {\n     long startTime \u003d Time.monotonicNow();\n     NodePlan plan \u003d new NodePlan(node.getDataNodeName(),\n         node.getDataNodePort());\n-    LOG.info(\"Starting plan for Node : \" + node.getDataNodeUUID());\n+    LOG.info(\"Starting plan for Node : {}:{}\",\n+        node.getDataNodeName(), node.getDataNodePort());\n     while (node.isBalancingNeeded(this.threshold)) {\n       for (DiskBalancerVolumeSet vSet : node.getVolumeSets().values()) {\n         balanceVolumeSet(node, vSet, plan);\n       }\n     }\n \n     long endTime \u003d Time.monotonicNow();\n     String message \u003d String\n-        .format(\"Compute Plan for Node : %s took %d ms \",\n-            node.getDataNodeUUID(), endTime - startTime);\n+        .format(\"Compute Plan for Node : %s:%d took %d ms \",\n+            node.getDataNodeName(), node.getDataNodePort(),\n+            endTime - startTime);\n     LOG.info(message);\n     return plan;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public NodePlan plan(DiskBalancerDataNode node) throws Exception {\n    long startTime \u003d Time.monotonicNow();\n    NodePlan plan \u003d new NodePlan(node.getDataNodeName(),\n        node.getDataNodePort());\n    LOG.info(\"Starting plan for Node : {}:{}\",\n        node.getDataNodeName(), node.getDataNodePort());\n    while (node.isBalancingNeeded(this.threshold)) {\n      for (DiskBalancerVolumeSet vSet : node.getVolumeSets().values()) {\n        balanceVolumeSet(node, vSet, plan);\n      }\n    }\n\n    long endTime \u003d Time.monotonicNow();\n    String message \u003d String\n        .format(\"Compute Plan for Node : %s:%d took %d ms \",\n            node.getDataNodeName(), node.getDataNodePort(),\n            endTime - startTime);\n    LOG.info(message);\n    return plan;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/diskbalancer/planner/GreedyPlanner.java",
      "extendedDetails": {}
    },
    "5724a103161424f4b293ba937f0d0540179f36ac": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-9469. DiskBalancer: Add Planner. (Contributed by Anu Engineer)\n",
      "commitDate": "23/06/16 6:18 PM",
      "commitName": "5724a103161424f4b293ba937f0d0540179f36ac",
      "commitAuthor": "Arpit Agarwal",
      "diff": "@@ -0,0 +1,18 @@\n+  public NodePlan plan(DiskBalancerDataNode node) throws Exception {\n+    long startTime \u003d Time.monotonicNow();\n+    NodePlan plan \u003d new NodePlan(node.getDataNodeName(),\n+        node.getDataNodePort());\n+    LOG.info(\"Starting plan for Node : \" + node.getDataNodeUUID());\n+    while (node.isBalancingNeeded(this.threshold)) {\n+      for (DiskBalancerVolumeSet vSet : node.getVolumeSets().values()) {\n+        balanceVolumeSet(node, vSet, plan);\n+      }\n+    }\n+\n+    long endTime \u003d Time.monotonicNow();\n+    String message \u003d String\n+        .format(\"Compute Plan for Node : %s took %d ms \",\n+            node.getDataNodeUUID(), endTime - startTime);\n+    LOG.info(message);\n+    return plan;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public NodePlan plan(DiskBalancerDataNode node) throws Exception {\n    long startTime \u003d Time.monotonicNow();\n    NodePlan plan \u003d new NodePlan(node.getDataNodeName(),\n        node.getDataNodePort());\n    LOG.info(\"Starting plan for Node : \" + node.getDataNodeUUID());\n    while (node.isBalancingNeeded(this.threshold)) {\n      for (DiskBalancerVolumeSet vSet : node.getVolumeSets().values()) {\n        balanceVolumeSet(node, vSet, plan);\n      }\n    }\n\n    long endTime \u003d Time.monotonicNow();\n    String message \u003d String\n        .format(\"Compute Plan for Node : %s took %d ms \",\n            node.getDataNodeUUID(), endTime - startTime);\n    LOG.info(message);\n    return plan;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/diskbalancer/planner/GreedyPlanner.java"
    }
  }
}