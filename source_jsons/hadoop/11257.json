{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BPOfferService.java",
  "functionName": "scheduleBlockReport",
  "functionId": "scheduleBlockReport___delay-long",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPOfferService.java",
  "functionStartLine": 497,
  "functionEndLine": 501,
  "numCommitsSeen": 121,
  "timeTaken": 7217,
  "changeHistory": [
    "2059f255d39510cddbb954b21ed4871a737bd2dc",
    "dfc1c4c303cf15afc6c3361ed9d3238562f73cbd",
    "1e346aa829519f8a2aa830e76d9856f914861805",
    "39ce694d05c6d8c428bd87bc1b9c95f94dfdf6fd",
    "905a127850d5e0cba85c2e075f989fa0f5cf129a",
    "0864ef19089f703232107d8aa26c4a7571ff132e",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "710e5a960e8af1d4c73e386041096aacfee8b828",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "2059f255d39510cddbb954b21ed4871a737bd2dc": "Ybodychange",
    "dfc1c4c303cf15afc6c3361ed9d3238562f73cbd": "Ybodychange",
    "1e346aa829519f8a2aa830e76d9856f914861805": "Ybodychange",
    "39ce694d05c6d8c428bd87bc1b9c95f94dfdf6fd": "Ymovefromfile",
    "905a127850d5e0cba85c2e075f989fa0f5cf129a": "Ybodychange",
    "0864ef19089f703232107d8aa26c4a7571ff132e": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "710e5a960e8af1d4c73e386041096aacfee8b828": "Ybodychange",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2059f255d39510cddbb954b21ed4871a737bd2dc": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-15167. Block Report Interval shouldn\u0027t be reset apart from first Block Report. Contributed by Ayush Saxena.\n",
      "commitDate": "27/02/20 12:38 AM",
      "commitName": "2059f255d39510cddbb954b21ed4871a737bd2dc",
      "commitAuthor": "Surendra Singh Lilhore",
      "commitDateOld": "03/01/20 8:55 AM",
      "commitNameOld": "037ec8cfb1406ea3a8225a1b6306c2e78440353b",
      "commitAuthorOld": "Masatake Iwasaki",
      "daysBetweenCommits": 54.65,
      "commitsBetweenForRepo": 193,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,5 +1,5 @@\n   void scheduleBlockReport(long delay) {\n     for (BPServiceActor actor : bpServices) {\n-      actor.getScheduler().scheduleBlockReport(delay);\n+      actor.getScheduler().scheduleBlockReport(delay, false);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void scheduleBlockReport(long delay) {\n    for (BPServiceActor actor : bpServices) {\n      actor.getScheduler().scheduleBlockReport(delay, false);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPOfferService.java",
      "extendedDetails": {}
    },
    "dfc1c4c303cf15afc6c3361ed9d3238562f73cbd": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8163. Using monotonicNow for block report scheduling causes test failures on recently restarted systems. (Arpit Agarwal)\n",
      "commitDate": "21/04/15 10:58 AM",
      "commitName": "dfc1c4c303cf15afc6c3361ed9d3238562f73cbd",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "08/04/15 11:28 PM",
      "commitNameOld": "9d8952f97f638ede27e4336b9601507d7bb1de7b",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 12.48,
      "commitsBetweenForRepo": 84,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,5 +1,5 @@\n   void scheduleBlockReport(long delay) {\n     for (BPServiceActor actor : bpServices) {\n-      actor.scheduleBlockReport(delay);\n+      actor.getScheduler().scheduleBlockReport(delay);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void scheduleBlockReport(long delay) {\n    for (BPServiceActor actor : bpServices) {\n      actor.getScheduler().scheduleBlockReport(delay);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPOfferService.java",
      "extendedDetails": {}
    },
    "1e346aa829519f8a2aa830e76d9856f914861805": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-1971. Send block report from datanode to both active and standby namenodes. (sanjay, todd via suresh)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1208925 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/11/11 5:10 PM",
      "commitName": "1e346aa829519f8a2aa830e76d9856f914861805",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "21/11/11 11:27 AM",
      "commitNameOld": "39ce694d05c6d8c428bd87bc1b9c95f94dfdf6fd",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 9.24,
      "commitsBetweenForRepo": 53,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,5 @@\n   void scheduleBlockReport(long delay) {\n-    if (delay \u003e 0) { // send BR after random delay\n-      lastBlockReport \u003d System.currentTimeMillis()\n-      - ( dnConf.blockReportInterval - DFSUtil.getRandom().nextInt((int)(delay)));\n-    } else { // send at next heartbeat\n-      lastBlockReport \u003d lastHeartbeat - dnConf.blockReportInterval;\n+    for (BPServiceActor actor : bpServices) {\n+      actor.scheduleBlockReport(delay);\n     }\n-    resetBlockReportTime \u003d true; // reset future BRs for randomness\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void scheduleBlockReport(long delay) {\n    for (BPServiceActor actor : bpServices) {\n      actor.scheduleBlockReport(delay);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPOfferService.java",
      "extendedDetails": {}
    },
    "39ce694d05c6d8c428bd87bc1b9c95f94dfdf6fd": {
      "type": "Ymovefromfile",
      "commitMessage": "HDFS-2566. Move BPOfferService to be a non-inner class. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1204659 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/11/11 11:27 AM",
      "commitName": "39ce694d05c6d8c428bd87bc1b9c95f94dfdf6fd",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "21/11/11 11:03 AM",
      "commitNameOld": "68173af69d2fbda3292404c90a5077483e14d6f4",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n-    void scheduleBlockReport(long delay) {\n-      if (delay \u003e 0) { // send BR after random delay\n-        lastBlockReport \u003d System.currentTimeMillis()\n-        - ( dnConf.blockReportInterval - DFSUtil.getRandom().nextInt((int)(delay)));\n-      } else { // send at next heartbeat\n-        lastBlockReport \u003d lastHeartbeat - dnConf.blockReportInterval;\n-      }\n-      resetBlockReportTime \u003d true; // reset future BRs for randomness\n-    }\n\\ No newline at end of file\n+  void scheduleBlockReport(long delay) {\n+    if (delay \u003e 0) { // send BR after random delay\n+      lastBlockReport \u003d System.currentTimeMillis()\n+      - ( dnConf.blockReportInterval - DFSUtil.getRandom().nextInt((int)(delay)));\n+    } else { // send at next heartbeat\n+      lastBlockReport \u003d lastHeartbeat - dnConf.blockReportInterval;\n+    }\n+    resetBlockReportTime \u003d true; // reset future BRs for randomness\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  void scheduleBlockReport(long delay) {\n    if (delay \u003e 0) { // send BR after random delay\n      lastBlockReport \u003d System.currentTimeMillis()\n      - ( dnConf.blockReportInterval - DFSUtil.getRandom().nextInt((int)(delay)));\n    } else { // send at next heartbeat\n      lastBlockReport \u003d lastHeartbeat - dnConf.blockReportInterval;\n    }\n    resetBlockReportTime \u003d true; // reset future BRs for randomness\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPOfferService.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataNode.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPOfferService.java",
        "oldMethodName": "scheduleBlockReport",
        "newMethodName": "scheduleBlockReport"
      }
    },
    "905a127850d5e0cba85c2e075f989fa0f5cf129a": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2562. Refactor DN configuration variables out of DataNode class. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1203543 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/11/11 1:04 AM",
      "commitName": "905a127850d5e0cba85c2e075f989fa0f5cf129a",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "17/11/11 4:45 PM",
      "commitNameOld": "0864ef19089f703232107d8aa26c4a7571ff132e",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.35,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n     void scheduleBlockReport(long delay) {\n       if (delay \u003e 0) { // send BR after random delay\n         lastBlockReport \u003d System.currentTimeMillis()\n-        - ( dn.blockReportInterval - DFSUtil.getRandom().nextInt((int)(delay)));\n+        - ( dnConf.blockReportInterval - DFSUtil.getRandom().nextInt((int)(delay)));\n       } else { // send at next heartbeat\n-        lastBlockReport \u003d lastHeartbeat - dn.blockReportInterval;\n+        lastBlockReport \u003d lastHeartbeat - dnConf.blockReportInterval;\n       }\n       resetBlockReportTime \u003d true; // reset future BRs for randomness\n     }\n\\ No newline at end of file\n",
      "actualSource": "    void scheduleBlockReport(long delay) {\n      if (delay \u003e 0) { // send BR after random delay\n        lastBlockReport \u003d System.currentTimeMillis()\n        - ( dnConf.blockReportInterval - DFSUtil.getRandom().nextInt((int)(delay)));\n      } else { // send at next heartbeat\n        lastBlockReport \u003d lastHeartbeat - dnConf.blockReportInterval;\n      }\n      resetBlockReportTime \u003d true; // reset future BRs for randomness\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataNode.java",
      "extendedDetails": {}
    },
    "0864ef19089f703232107d8aa26c4a7571ff132e": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2560. Refactor BPOfferService to be a static inner class. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1203444 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/11/11 4:45 PM",
      "commitName": "0864ef19089f703232107d8aa26c4a7571ff132e",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "31/10/11 10:17 PM",
      "commitNameOld": "1c940637b14eee777a65d153d0d712a1aea3866c",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 16.81,
      "commitsBetweenForRepo": 71,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n     void scheduleBlockReport(long delay) {\n       if (delay \u003e 0) { // send BR after random delay\n         lastBlockReport \u003d System.currentTimeMillis()\n-        - ( blockReportInterval - DFSUtil.getRandom().nextInt((int)(delay)));\n+        - ( dn.blockReportInterval - DFSUtil.getRandom().nextInt((int)(delay)));\n       } else { // send at next heartbeat\n-        lastBlockReport \u003d lastHeartbeat - blockReportInterval;\n+        lastBlockReport \u003d lastHeartbeat - dn.blockReportInterval;\n       }\n       resetBlockReportTime \u003d true; // reset future BRs for randomness\n     }\n\\ No newline at end of file\n",
      "actualSource": "    void scheduleBlockReport(long delay) {\n      if (delay \u003e 0) { // send BR after random delay\n        lastBlockReport \u003d System.currentTimeMillis()\n        - ( dn.blockReportInterval - DFSUtil.getRandom().nextInt((int)(delay)));\n      } else { // send at next heartbeat\n        lastBlockReport \u003d lastHeartbeat - dn.blockReportInterval;\n      }\n      resetBlockReportTime \u003d true; // reset future BRs for randomness\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataNode.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    void scheduleBlockReport(long delay) {\n      if (delay \u003e 0) { // send BR after random delay\n        lastBlockReport \u003d System.currentTimeMillis()\n        - ( blockReportInterval - DFSUtil.getRandom().nextInt((int)(delay)));\n      } else { // send at next heartbeat\n        lastBlockReport \u003d lastHeartbeat - blockReportInterval;\n      }\n      resetBlockReportTime \u003d true; // reset future BRs for randomness\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataNode.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataNode.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataNode.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    void scheduleBlockReport(long delay) {\n      if (delay \u003e 0) { // send BR after random delay\n        lastBlockReport \u003d System.currentTimeMillis()\n        - ( blockReportInterval - DFSUtil.getRandom().nextInt((int)(delay)));\n      } else { // send at next heartbeat\n        lastBlockReport \u003d lastHeartbeat - blockReportInterval;\n      }\n      resetBlockReportTime \u003d true; // reset future BRs for randomness\n    }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataNode.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/datanode/DataNode.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataNode.java"
      }
    },
    "710e5a960e8af1d4c73e386041096aacfee8b828": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2161. Move createNamenode(..), createClientDatanodeProtocolProxy(..) and Random object creation to DFSUtil; move DFSClient.stringifyToken(..) to DelegationTokenIdentifier.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1148348 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/07/11 7:23 AM",
      "commitName": "710e5a960e8af1d4c73e386041096aacfee8b828",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "13/07/11 4:44 PM",
      "commitNameOld": "c54c117407bc441b539b8acfdb022586f17dafc1",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 5.61,
      "commitsBetweenForRepo": 17,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n     void scheduleBlockReport(long delay) {\n       if (delay \u003e 0) { // send BR after random delay\n         lastBlockReport \u003d System.currentTimeMillis()\n-        - ( blockReportInterval - R.nextInt((int)(delay)));\n+        - ( blockReportInterval - DFSUtil.getRandom().nextInt((int)(delay)));\n       } else { // send at next heartbeat\n         lastBlockReport \u003d lastHeartbeat - blockReportInterval;\n       }\n       resetBlockReportTime \u003d true; // reset future BRs for randomness\n     }\n\\ No newline at end of file\n",
      "actualSource": "    void scheduleBlockReport(long delay) {\n      if (delay \u003e 0) { // send BR after random delay\n        lastBlockReport \u003d System.currentTimeMillis()\n        - ( blockReportInterval - DFSUtil.getRandom().nextInt((int)(delay)));\n      } else { // send at next heartbeat\n        lastBlockReport \u003d lastHeartbeat - blockReportInterval;\n      }\n      resetBlockReportTime \u003d true; // reset future BRs for randomness\n    }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/datanode/DataNode.java",
      "extendedDetails": {}
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,9 @@\n+    void scheduleBlockReport(long delay) {\n+      if (delay \u003e 0) { // send BR after random delay\n+        lastBlockReport \u003d System.currentTimeMillis()\n+        - ( blockReportInterval - R.nextInt((int)(delay)));\n+      } else { // send at next heartbeat\n+        lastBlockReport \u003d lastHeartbeat - blockReportInterval;\n+      }\n+      resetBlockReportTime \u003d true; // reset future BRs for randomness\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    void scheduleBlockReport(long delay) {\n      if (delay \u003e 0) { // send BR after random delay\n        lastBlockReport \u003d System.currentTimeMillis()\n        - ( blockReportInterval - R.nextInt((int)(delay)));\n      } else { // send at next heartbeat\n        lastBlockReport \u003d lastHeartbeat - blockReportInterval;\n      }\n      resetBlockReportTime \u003d true; // reset future BRs for randomness\n    }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/datanode/DataNode.java"
    }
  }
}