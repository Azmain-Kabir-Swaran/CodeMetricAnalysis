{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JavaKeyStoreProvider.java",
  "functionName": "tryLoadFromPath",
  "functionId": "tryLoadFromPath___path-Path__backupPath-Path",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/JavaKeyStoreProvider.java",
  "functionStartLine": 188,
  "functionEndLine": 216,
  "numCommitsSeen": 26,
  "timeTaken": 1336,
  "changeHistory": [
    "5af572b6443715b7a741296c1bd520a1840f9a7c",
    "5582b0f1d469e7c98811a341c4b4c78eaa64ede5",
    "74fe84393d9a8c412f69bbf0cd0ad06f3cc85e85"
  ],
  "changeHistoryShort": {
    "5af572b6443715b7a741296c1bd520a1840f9a7c": "Ybodychange",
    "5582b0f1d469e7c98811a341c4b4c78eaa64ede5": "Ybodychange",
    "74fe84393d9a8c412f69bbf0cd0ad06f3cc85e85": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5af572b6443715b7a741296c1bd520a1840f9a7c": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13427. Eliminate needless uses of FileSystem#{exists(), isFile(), isDirectory()}. Contributed by Steve Loughran and Mingliang Liu\n",
      "commitDate": "15/11/16 10:57 AM",
      "commitName": "5af572b6443715b7a741296c1bd520a1840f9a7c",
      "commitAuthor": "Mingliang Liu",
      "commitDateOld": "17/05/16 5:44 PM",
      "commitNameOld": "7154ace71212e9fb9dd6209a92165fb075df7806",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 181.76,
      "commitsBetweenForRepo": 1418,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,29 @@\n   private FsPermission tryLoadFromPath(Path path, Path backupPath)\n       throws NoSuchAlgorithmException, CertificateException,\n       IOException {\n     FsPermission perm \u003d null;\n     try {\n       perm \u003d loadFromPath(path, password);\n       // Remove _OLD if exists\n-      if (fs.exists(backupPath)) {\n-        fs.delete(backupPath, true);\n-      }\n+      fs.delete(backupPath, true);\n       LOG.debug(\"KeyStore loaded successfully !!\");\n     } catch (IOException ioe) {\n       // If file is corrupted for some reason other than\n       // wrong password try the _OLD file if exits\n       if (!isBadorWrongPassword(ioe)) {\n         perm \u003d loadFromPath(backupPath, password);\n         // Rename CURRENT to CORRUPTED\n         renameOrFail(path, new Path(path.toString() + \"_CORRUPTED_\"\n             + System.currentTimeMillis()));\n         renameOrFail(backupPath, path);\n         if (LOG.isDebugEnabled()) {\n           LOG.debug(String.format(\n               \"KeyStore loaded successfully from \u0027%s\u0027 since \u0027%s\u0027\"\n                   + \"was corrupted !!\", backupPath, path));\n         }\n       } else {\n         throw ioe;\n       }\n     }\n     return perm;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private FsPermission tryLoadFromPath(Path path, Path backupPath)\n      throws NoSuchAlgorithmException, CertificateException,\n      IOException {\n    FsPermission perm \u003d null;\n    try {\n      perm \u003d loadFromPath(path, password);\n      // Remove _OLD if exists\n      fs.delete(backupPath, true);\n      LOG.debug(\"KeyStore loaded successfully !!\");\n    } catch (IOException ioe) {\n      // If file is corrupted for some reason other than\n      // wrong password try the _OLD file if exits\n      if (!isBadorWrongPassword(ioe)) {\n        perm \u003d loadFromPath(backupPath, password);\n        // Rename CURRENT to CORRUPTED\n        renameOrFail(path, new Path(path.toString() + \"_CORRUPTED_\"\n            + System.currentTimeMillis()));\n        renameOrFail(backupPath, path);\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(String.format(\n              \"KeyStore loaded successfully from \u0027%s\u0027 since \u0027%s\u0027\"\n                  + \"was corrupted !!\", backupPath, path));\n        }\n      } else {\n        throw ioe;\n      }\n    }\n    return perm;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/JavaKeyStoreProvider.java",
      "extendedDetails": {}
    },
    "5582b0f1d469e7c98811a341c4b4c78eaa64ede5": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11741. Add LOG.isDebugEnabled() guard for some LOG.debug(). Contributed by Walter Su.\n",
      "commitDate": "25/03/15 12:36 AM",
      "commitName": "5582b0f1d469e7c98811a341c4b4c78eaa64ede5",
      "commitAuthor": "Tsuyoshi Ozawa",
      "commitDateOld": "02/03/15 9:17 PM",
      "commitNameOld": "d1c6accb6f87b08975175580e15f1ff1fe29ab04",
      "commitAuthorOld": "Tsuyoshi Ozawa",
      "daysBetweenCommits": 22.1,
      "commitsBetweenForRepo": 200,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,31 @@\n   private FsPermission tryLoadFromPath(Path path, Path backupPath)\n       throws NoSuchAlgorithmException, CertificateException,\n       IOException {\n     FsPermission perm \u003d null;\n     try {\n       perm \u003d loadFromPath(path, password);\n       // Remove _OLD if exists\n       if (fs.exists(backupPath)) {\n         fs.delete(backupPath, true);\n       }\n       LOG.debug(\"KeyStore loaded successfully !!\");\n     } catch (IOException ioe) {\n       // If file is corrupted for some reason other than\n       // wrong password try the _OLD file if exits\n       if (!isBadorWrongPassword(ioe)) {\n         perm \u003d loadFromPath(backupPath, password);\n         // Rename CURRENT to CORRUPTED\n         renameOrFail(path, new Path(path.toString() + \"_CORRUPTED_\"\n             + System.currentTimeMillis()));\n         renameOrFail(backupPath, path);\n-        LOG.debug(String.format(\n-            \"KeyStore loaded successfully from \u0027%s\u0027 since \u0027%s\u0027\"\n-                + \"was corrupted !!\", backupPath, path));\n+        if (LOG.isDebugEnabled()) {\n+          LOG.debug(String.format(\n+              \"KeyStore loaded successfully from \u0027%s\u0027 since \u0027%s\u0027\"\n+                  + \"was corrupted !!\", backupPath, path));\n+        }\n       } else {\n         throw ioe;\n       }\n     }\n     return perm;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private FsPermission tryLoadFromPath(Path path, Path backupPath)\n      throws NoSuchAlgorithmException, CertificateException,\n      IOException {\n    FsPermission perm \u003d null;\n    try {\n      perm \u003d loadFromPath(path, password);\n      // Remove _OLD if exists\n      if (fs.exists(backupPath)) {\n        fs.delete(backupPath, true);\n      }\n      LOG.debug(\"KeyStore loaded successfully !!\");\n    } catch (IOException ioe) {\n      // If file is corrupted for some reason other than\n      // wrong password try the _OLD file if exits\n      if (!isBadorWrongPassword(ioe)) {\n        perm \u003d loadFromPath(backupPath, password);\n        // Rename CURRENT to CORRUPTED\n        renameOrFail(path, new Path(path.toString() + \"_CORRUPTED_\"\n            + System.currentTimeMillis()));\n        renameOrFail(backupPath, path);\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(String.format(\n              \"KeyStore loaded successfully from \u0027%s\u0027 since \u0027%s\u0027\"\n                  + \"was corrupted !!\", backupPath, path));\n        }\n      } else {\n        throw ioe;\n      }\n    }\n    return perm;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/JavaKeyStoreProvider.java",
      "extendedDetails": {}
    },
    "74fe84393d9a8c412f69bbf0cd0ad06f3cc85e85": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-10224. JavaKeyStoreProvider has to protect against corrupting underlying store. (asuresh via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1616908 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/08/14 5:00 PM",
      "commitName": "74fe84393d9a8c412f69bbf0cd0ad06f3cc85e85",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,29 @@\n+  private FsPermission tryLoadFromPath(Path path, Path backupPath)\n+      throws NoSuchAlgorithmException, CertificateException,\n+      IOException {\n+    FsPermission perm \u003d null;\n+    try {\n+      perm \u003d loadFromPath(path, password);\n+      // Remove _OLD if exists\n+      if (fs.exists(backupPath)) {\n+        fs.delete(backupPath, true);\n+      }\n+      LOG.debug(\"KeyStore loaded successfully !!\");\n+    } catch (IOException ioe) {\n+      // If file is corrupted for some reason other than\n+      // wrong password try the _OLD file if exits\n+      if (!isBadorWrongPassword(ioe)) {\n+        perm \u003d loadFromPath(backupPath, password);\n+        // Rename CURRENT to CORRUPTED\n+        renameOrFail(path, new Path(path.toString() + \"_CORRUPTED_\"\n+            + System.currentTimeMillis()));\n+        renameOrFail(backupPath, path);\n+        LOG.debug(String.format(\n+            \"KeyStore loaded successfully from \u0027%s\u0027 since \u0027%s\u0027\"\n+                + \"was corrupted !!\", backupPath, path));\n+      } else {\n+        throw ioe;\n+      }\n+    }\n+    return perm;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private FsPermission tryLoadFromPath(Path path, Path backupPath)\n      throws NoSuchAlgorithmException, CertificateException,\n      IOException {\n    FsPermission perm \u003d null;\n    try {\n      perm \u003d loadFromPath(path, password);\n      // Remove _OLD if exists\n      if (fs.exists(backupPath)) {\n        fs.delete(backupPath, true);\n      }\n      LOG.debug(\"KeyStore loaded successfully !!\");\n    } catch (IOException ioe) {\n      // If file is corrupted for some reason other than\n      // wrong password try the _OLD file if exits\n      if (!isBadorWrongPassword(ioe)) {\n        perm \u003d loadFromPath(backupPath, password);\n        // Rename CURRENT to CORRUPTED\n        renameOrFail(path, new Path(path.toString() + \"_CORRUPTED_\"\n            + System.currentTimeMillis()));\n        renameOrFail(backupPath, path);\n        LOG.debug(String.format(\n            \"KeyStore loaded successfully from \u0027%s\u0027 since \u0027%s\u0027\"\n                + \"was corrupted !!\", backupPath, path));\n      } else {\n        throw ioe;\n      }\n    }\n    return perm;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/JavaKeyStoreProvider.java"
    }
  }
}