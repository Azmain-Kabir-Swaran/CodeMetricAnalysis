{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LoadBalancingKMSClientProvider.java",
  "functionName": "selectDelegationToken",
  "functionId": "selectDelegationToken___creds-Credentials",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/LoadBalancingKMSClientProvider.java",
  "functionStartLine": 148,
  "functionEndLine": 164,
  "numCommitsSeen": 17,
  "timeTaken": 1788,
  "changeHistory": [
    "f41f938b2e498161da96bfad77410871a3a85728",
    "5ec86b445cc492f52c33639efb6a09a0d2f27475"
  ],
  "changeHistoryShort": {
    "f41f938b2e498161da96bfad77410871a3a85728": "Ybodychange",
    "5ec86b445cc492f52c33639efb6a09a0d2f27475": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f41f938b2e498161da96bfad77410871a3a85728": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16199. KMSLoadBlanceClientProvider does not select token correctly. Contributed by Xiaoyu Yao.\n\nThis closes  #642.",
      "commitDate": "28/03/19 9:55 PM",
      "commitName": "f41f938b2e498161da96bfad77410871a3a85728",
      "commitAuthor": "Xiaoyu Yao",
      "commitDateOld": "12/10/18 9:35 AM",
      "commitNameOld": "5ec86b445cc492f52c33639efb6a09a0d2f27475",
      "commitAuthorOld": "Xiao Chen",
      "daysBetweenCommits": 167.51,
      "commitsBetweenForRepo": 1259,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,17 @@\n       selectDelegationToken(Credentials creds) {\n     Token\u003c? extends TokenIdentifier\u003e token \u003d\n         KMSClientProvider.selectDelegationToken(creds, canonicalService);\n+    if (token \u003d\u003d null) {\n+      token \u003d KMSClientProvider.selectDelegationToken(creds, dtService);\n+    }\n     // fallback to querying each sub-provider.\n     if (token \u003d\u003d null) {\n       for (KMSClientProvider provider : getProviders()) {\n         token \u003d provider.selectDelegationToken(creds);\n         if (token !\u003d null) {\n           break;\n         }\n       }\n     }\n     return token;\n   }\n\\ No newline at end of file\n",
      "actualSource": "      selectDelegationToken(Credentials creds) {\n    Token\u003c? extends TokenIdentifier\u003e token \u003d\n        KMSClientProvider.selectDelegationToken(creds, canonicalService);\n    if (token \u003d\u003d null) {\n      token \u003d KMSClientProvider.selectDelegationToken(creds, dtService);\n    }\n    // fallback to querying each sub-provider.\n    if (token \u003d\u003d null) {\n      for (KMSClientProvider provider : getProviders()) {\n        token \u003d provider.selectDelegationToken(creds);\n        if (token !\u003d null) {\n          break;\n        }\n      }\n    }\n    return token;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/LoadBalancingKMSClientProvider.java",
      "extendedDetails": {}
    },
    "5ec86b445cc492f52c33639efb6a09a0d2f27475": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-14445. Use DelegationTokenIssuer to create KMS delegation tokens that can authenticate to all KMS instances.\nContributed by Daryn Sharp, Xiao Chen, Rushabh S Shah.\n",
      "commitDate": "12/10/18 9:35 AM",
      "commitName": "5ec86b445cc492f52c33639efb6a09a0d2f27475",
      "commitAuthor": "Xiao Chen",
      "diff": "@@ -0,0 +1,14 @@\n+      selectDelegationToken(Credentials creds) {\n+    Token\u003c? extends TokenIdentifier\u003e token \u003d\n+        KMSClientProvider.selectDelegationToken(creds, canonicalService);\n+    // fallback to querying each sub-provider.\n+    if (token \u003d\u003d null) {\n+      for (KMSClientProvider provider : getProviders()) {\n+        token \u003d provider.selectDelegationToken(creds);\n+        if (token !\u003d null) {\n+          break;\n+        }\n+      }\n+    }\n+    return token;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "      selectDelegationToken(Credentials creds) {\n    Token\u003c? extends TokenIdentifier\u003e token \u003d\n        KMSClientProvider.selectDelegationToken(creds, canonicalService);\n    // fallback to querying each sub-provider.\n    if (token \u003d\u003d null) {\n      for (KMSClientProvider provider : getProviders()) {\n        token \u003d provider.selectDelegationToken(creds);\n        if (token !\u003d null) {\n          break;\n        }\n      }\n    }\n    return token;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/LoadBalancingKMSClientProvider.java"
    }
  }
}