{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMAppImpl.java",
  "functionName": "getLogAggregationFailureMessagesForNM",
  "functionId": "getLogAggregationFailureMessagesForNM___nodeId-NodeId",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppImpl.java",
  "functionStartLine": 1772,
  "functionEndLine": 1774,
  "numCommitsSeen": 170,
  "timeTaken": 4260,
  "changeHistory": [
    "4456ea67b949553b85e101e866b4b3f4b335f1f0",
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
    "15ccd967ee3e7046a50522089f67ba01f36ec76a"
  ],
  "changeHistoryShort": {
    "4456ea67b949553b85e101e866b4b3f4b335f1f0": "Ybodychange",
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": "Ybodychange",
    "15ccd967ee3e7046a50522089f67ba01f36ec76a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4456ea67b949553b85e101e866b4b3f4b335f1f0": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8586. Extract log aggregation related fields and methods from RMAppImpl. Contributed by Peter Bacsko\n",
      "commitDate": "16/08/19 2:36 AM",
      "commitName": "4456ea67b949553b85e101e866b4b3f4b335f1f0",
      "commitAuthor": "Szilard Nemeth",
      "commitDateOld": "11/06/19 10:41 AM",
      "commitNameOld": "60c95e9b6a899e37ecdc8bce7bb6d9ed0dc7a6be",
      "commitAuthorOld": "bibinchundatt",
      "daysBetweenCommits": 65.66,
      "commitsBetweenForRepo": 585,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,3 @@\n   public String getLogAggregationFailureMessagesForNM(NodeId nodeId) {\n-    this.readLock.lock();\n-    try {\n-      List\u003cString\u003e failureMessages \u003d\n-          this.logAggregationFailureMessagesForNMs.get(nodeId);\n-      if (failureMessages \u003d\u003d null || failureMessages.isEmpty()) {\n-        return StringUtils.EMPTY;\n-      }\n-      return StringUtils.join(failureMessages, \"\\n\");\n-    } finally {\n-      this.readLock.unlock();\n-    }\n+    return logAggregation.getLogAggregationFailureMessagesForNM(nodeId);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String getLogAggregationFailureMessagesForNM(NodeId nodeId) {\n    return logAggregation.getLogAggregationFailureMessagesForNM(nodeId);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppImpl.java",
      "extendedDetails": {}
    },
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9341.  Fixed enentrant lock usage in YARN project.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "07/03/19 1:47 PM",
      "commitName": "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "04/03/19 9:10 PM",
      "commitNameOld": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
      "commitAuthorOld": "Prabhu Joseph",
      "daysBetweenCommits": 2.69,
      "commitsBetweenForRepo": 39,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n   public String getLogAggregationFailureMessagesForNM(NodeId nodeId) {\n+    this.readLock.lock();\n     try {\n-      this.readLock.lock();\n       List\u003cString\u003e failureMessages \u003d\n           this.logAggregationFailureMessagesForNMs.get(nodeId);\n       if (failureMessages \u003d\u003d null || failureMessages.isEmpty()) {\n         return StringUtils.EMPTY;\n       }\n       return StringUtils.join(failureMessages, \"\\n\");\n     } finally {\n       this.readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String getLogAggregationFailureMessagesForNM(NodeId nodeId) {\n    this.readLock.lock();\n    try {\n      List\u003cString\u003e failureMessages \u003d\n          this.logAggregationFailureMessagesForNMs.get(nodeId);\n      if (failureMessages \u003d\u003d null || failureMessages.isEmpty()) {\n        return StringUtils.EMPTY;\n      }\n      return StringUtils.join(failureMessages, \"\\n\");\n    } finally {\n      this.readLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppImpl.java",
      "extendedDetails": {}
    },
    "15ccd967ee3e7046a50522089f67ba01f36ec76a": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3505. Node\u0027s Log Aggregation Report with SUCCEED should not cached in RMApps. Contributed by Xuan Gong.\n",
      "commitDate": "14/05/15 10:58 AM",
      "commitName": "15ccd967ee3e7046a50522089f67ba01f36ec76a",
      "commitAuthor": "Junping Du",
      "diff": "@@ -0,0 +1,13 @@\n+  public String getLogAggregationFailureMessagesForNM(NodeId nodeId) {\n+    try {\n+      this.readLock.lock();\n+      List\u003cString\u003e failureMessages \u003d\n+          this.logAggregationFailureMessagesForNMs.get(nodeId);\n+      if (failureMessages \u003d\u003d null || failureMessages.isEmpty()) {\n+        return StringUtils.EMPTY;\n+      }\n+      return StringUtils.join(failureMessages, \"\\n\");\n+    } finally {\n+      this.readLock.unlock();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public String getLogAggregationFailureMessagesForNM(NodeId nodeId) {\n    try {\n      this.readLock.lock();\n      List\u003cString\u003e failureMessages \u003d\n          this.logAggregationFailureMessagesForNMs.get(nodeId);\n      if (failureMessages \u003d\u003d null || failureMessages.isEmpty()) {\n        return StringUtils.EMPTY;\n      }\n      return StringUtils.join(failureMessages, \"\\n\");\n    } finally {\n      this.readLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppImpl.java"
    }
  }
}