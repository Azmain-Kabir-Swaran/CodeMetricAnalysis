{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "KMSClientProvider.java",
  "functionName": "createURL",
  "functionId": "createURL___collection-String__resource-String__subResource-String__parameters-Map__String,?__",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/KMSClientProvider.java",
  "functionStartLine": 454,
  "functionEndLine": 485,
  "numCommitsSeen": 71,
  "timeTaken": 1611,
  "changeHistory": [
    "e86c9ef6517313aaa0e4575261a462f2f55d43dc",
    "17d4fbbf0af9b93de9502afb274e91533140d1c6"
  ],
  "changeHistoryShort": {
    "e86c9ef6517313aaa0e4575261a462f2f55d43dc": "Ybodychange",
    "17d4fbbf0af9b93de9502afb274e91533140d1c6": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e86c9ef6517313aaa0e4575261a462f2f55d43dc": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10770. KMS add delegation token support. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1618096 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/08/14 10:03 PM",
      "commitName": "e86c9ef6517313aaa0e4575261a462f2f55d43dc",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "08/08/14 4:10 PM",
      "commitNameOld": "021ae471153ce2566924b0f6d29809669074c06d",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 6.25,
      "commitsBetweenForRepo": 59,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,32 @@\n   private URL createURL(String collection, String resource, String subResource,\n       Map\u003cString, ?\u003e parameters) throws IOException {\n     try {\n       StringBuilder sb \u003d new StringBuilder();\n       sb.append(kmsUrl);\n-      sb.append(collection);\n-      if (resource !\u003d null) {\n-        sb.append(\"/\").append(URLEncoder.encode(resource, UTF8));\n-      }\n-      if (subResource !\u003d null) {\n-        sb.append(\"/\").append(subResource);\n+      if (collection !\u003d null) {\n+        sb.append(collection);\n+        if (resource !\u003d null) {\n+          sb.append(\"/\").append(URLEncoder.encode(resource, UTF8));\n+          if (subResource !\u003d null) {\n+            sb.append(\"/\").append(subResource);\n+          }\n+        }\n       }\n       URIBuilder uriBuilder \u003d new URIBuilder(sb.toString());\n       if (parameters !\u003d null) {\n         for (Map.Entry\u003cString, ?\u003e param : parameters.entrySet()) {\n           Object value \u003d param.getValue();\n           if (value instanceof String) {\n             uriBuilder.addParameter(param.getKey(), (String) value);\n           } else {\n             for (String s : (String[]) value) {\n               uriBuilder.addParameter(param.getKey(), s);\n             }\n           }\n         }\n       }\n       return uriBuilder.build().toURL();\n     } catch (URISyntaxException ex) {\n       throw new IOException(ex);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private URL createURL(String collection, String resource, String subResource,\n      Map\u003cString, ?\u003e parameters) throws IOException {\n    try {\n      StringBuilder sb \u003d new StringBuilder();\n      sb.append(kmsUrl);\n      if (collection !\u003d null) {\n        sb.append(collection);\n        if (resource !\u003d null) {\n          sb.append(\"/\").append(URLEncoder.encode(resource, UTF8));\n          if (subResource !\u003d null) {\n            sb.append(\"/\").append(subResource);\n          }\n        }\n      }\n      URIBuilder uriBuilder \u003d new URIBuilder(sb.toString());\n      if (parameters !\u003d null) {\n        for (Map.Entry\u003cString, ?\u003e param : parameters.entrySet()) {\n          Object value \u003d param.getValue();\n          if (value instanceof String) {\n            uriBuilder.addParameter(param.getKey(), (String) value);\n          } else {\n            for (String s : (String[]) value) {\n              uriBuilder.addParameter(param.getKey(), s);\n            }\n          }\n        }\n      }\n      return uriBuilder.build().toURL();\n    } catch (URISyntaxException ex) {\n      throw new IOException(ex);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/KMSClientProvider.java",
      "extendedDetails": {}
    },
    "17d4fbbf0af9b93de9502afb274e91533140d1c6": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-10433. Key Management Server based on KeyProvider API. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1592637 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/05/14 2:43 PM",
      "commitName": "17d4fbbf0af9b93de9502afb274e91533140d1c6",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,30 @@\n+  private URL createURL(String collection, String resource, String subResource,\n+      Map\u003cString, ?\u003e parameters) throws IOException {\n+    try {\n+      StringBuilder sb \u003d new StringBuilder();\n+      sb.append(kmsUrl);\n+      sb.append(collection);\n+      if (resource !\u003d null) {\n+        sb.append(\"/\").append(URLEncoder.encode(resource, UTF8));\n+      }\n+      if (subResource !\u003d null) {\n+        sb.append(\"/\").append(subResource);\n+      }\n+      URIBuilder uriBuilder \u003d new URIBuilder(sb.toString());\n+      if (parameters !\u003d null) {\n+        for (Map.Entry\u003cString, ?\u003e param : parameters.entrySet()) {\n+          Object value \u003d param.getValue();\n+          if (value instanceof String) {\n+            uriBuilder.addParameter(param.getKey(), (String) value);\n+          } else {\n+            for (String s : (String[]) value) {\n+              uriBuilder.addParameter(param.getKey(), s);\n+            }\n+          }\n+        }\n+      }\n+      return uriBuilder.build().toURL();\n+    } catch (URISyntaxException ex) {\n+      throw new IOException(ex);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private URL createURL(String collection, String resource, String subResource,\n      Map\u003cString, ?\u003e parameters) throws IOException {\n    try {\n      StringBuilder sb \u003d new StringBuilder();\n      sb.append(kmsUrl);\n      sb.append(collection);\n      if (resource !\u003d null) {\n        sb.append(\"/\").append(URLEncoder.encode(resource, UTF8));\n      }\n      if (subResource !\u003d null) {\n        sb.append(\"/\").append(subResource);\n      }\n      URIBuilder uriBuilder \u003d new URIBuilder(sb.toString());\n      if (parameters !\u003d null) {\n        for (Map.Entry\u003cString, ?\u003e param : parameters.entrySet()) {\n          Object value \u003d param.getValue();\n          if (value instanceof String) {\n            uriBuilder.addParameter(param.getKey(), (String) value);\n          } else {\n            for (String s : (String[]) value) {\n              uriBuilder.addParameter(param.getKey(), s);\n            }\n          }\n        }\n      }\n      return uriBuilder.build().toURL();\n    } catch (URISyntaxException ex) {\n      throw new IOException(ex);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/KMSClientProvider.java"
    }
  }
}