{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ResourceGzMojo.java",
  "functionName": "accept",
  "functionId": "accept___path-Path",
  "sourceFilePath": "hadoop-maven-plugins/src/main/java/org/apache/hadoop/maven/plugin/resourcegz/ResourceGzMojo.java",
  "functionStartLine": 100,
  "functionEndLine": 125,
  "numCommitsSeen": 3,
  "timeTaken": 3213,
  "changeHistory": [
    "ebb88231f802918096159da453bed2c4839e6042",
    "5877f20f9c3f6f0afa505715e9a2ee312475af17"
  ],
  "changeHistoryShort": {
    "ebb88231f802918096159da453bed2c4839e6042": "Ybodychange",
    "5877f20f9c3f6f0afa505715e9a2ee312475af17": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ebb88231f802918096159da453bed2c4839e6042": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10075. addendum to fix compilation on Windows\n",
      "commitDate": "28/10/16 5:35 PM",
      "commitName": "ebb88231f802918096159da453bed2c4839e6042",
      "commitAuthor": "Robert Kanter",
      "commitDateOld": "27/10/16 4:09 PM",
      "commitNameOld": "5877f20f9c3f6f0afa505715e9a2ee312475af17",
      "commitAuthorOld": "Robert Kanter",
      "daysBetweenCommits": 1.06,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,26 @@\n     public void accept(Path path) {\n       if (throwable !\u003d null) {\n         return;\n       }\n       try {\n         File outFile \u003d new File(outputDir, path.toFile().getCanonicalPath()\n-            .replaceFirst(inputDir.getCanonicalPath(), \"\") + \".gz\");\n-        outFile.getParentFile().mkdirs();\n-        try (\n-            GZIPOutputStream os \u003d new GZIPOutputStream(\n-                new FileOutputStream(outFile));\n-            BufferedReader is \u003d Files.newBufferedReader(path)\n-        ) {\n-          getLog().info(\"Compressing \" + path + \" to \" + outFile);\n-          IOUtils.copy(is, os);\n-        } catch (Throwable t) {\n-          this.throwable \u003d t;\n+            .replaceFirst(Matcher.quoteReplacement(\n+                inputDir.getCanonicalPath()), \"\") + \".gz\");\n+        if (outFile.getParentFile().isDirectory() ||\n+            outFile.getParentFile().mkdirs()) {\n+          try (\n+              GZIPOutputStream os \u003d new GZIPOutputStream(\n+                  new FileOutputStream(outFile));\n+              BufferedReader is \u003d Files.newBufferedReader(path)\n+          ) {\n+            getLog().info(\"Compressing \" + path + \" to \" + outFile);\n+            IOUtils.copy(is, os);\n+          }\n+        } else {\n+          throw new IOException(\"Directory \" + outFile.getParent()\n+              + \" does not exist or was unable to be created\");\n         }\n       } catch (Throwable t) {\n         this.throwable \u003d t;\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void accept(Path path) {\n      if (throwable !\u003d null) {\n        return;\n      }\n      try {\n        File outFile \u003d new File(outputDir, path.toFile().getCanonicalPath()\n            .replaceFirst(Matcher.quoteReplacement(\n                inputDir.getCanonicalPath()), \"\") + \".gz\");\n        if (outFile.getParentFile().isDirectory() ||\n            outFile.getParentFile().mkdirs()) {\n          try (\n              GZIPOutputStream os \u003d new GZIPOutputStream(\n                  new FileOutputStream(outFile));\n              BufferedReader is \u003d Files.newBufferedReader(path)\n          ) {\n            getLog().info(\"Compressing \" + path + \" to \" + outFile);\n            IOUtils.copy(is, os);\n          }\n        } else {\n          throw new IOException(\"Directory \" + outFile.getParent()\n              + \" does not exist or was unable to be created\");\n        }\n      } catch (Throwable t) {\n        this.throwable \u003d t;\n      }\n    }",
      "path": "hadoop-maven-plugins/src/main/java/org/apache/hadoop/maven/plugin/resourcegz/ResourceGzMojo.java",
      "extendedDetails": {}
    },
    "5877f20f9c3f6f0afa505715e9a2ee312475af17": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-10075. Update jetty dependency to version 9 (rkanter)\n",
      "commitDate": "27/10/16 4:09 PM",
      "commitName": "5877f20f9c3f6f0afa505715e9a2ee312475af17",
      "commitAuthor": "Robert Kanter",
      "diff": "@@ -0,0 +1,22 @@\n+    public void accept(Path path) {\n+      if (throwable !\u003d null) {\n+        return;\n+      }\n+      try {\n+        File outFile \u003d new File(outputDir, path.toFile().getCanonicalPath()\n+            .replaceFirst(inputDir.getCanonicalPath(), \"\") + \".gz\");\n+        outFile.getParentFile().mkdirs();\n+        try (\n+            GZIPOutputStream os \u003d new GZIPOutputStream(\n+                new FileOutputStream(outFile));\n+            BufferedReader is \u003d Files.newBufferedReader(path)\n+        ) {\n+          getLog().info(\"Compressing \" + path + \" to \" + outFile);\n+          IOUtils.copy(is, os);\n+        } catch (Throwable t) {\n+          this.throwable \u003d t;\n+        }\n+      } catch (Throwable t) {\n+        this.throwable \u003d t;\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void accept(Path path) {\n      if (throwable !\u003d null) {\n        return;\n      }\n      try {\n        File outFile \u003d new File(outputDir, path.toFile().getCanonicalPath()\n            .replaceFirst(inputDir.getCanonicalPath(), \"\") + \".gz\");\n        outFile.getParentFile().mkdirs();\n        try (\n            GZIPOutputStream os \u003d new GZIPOutputStream(\n                new FileOutputStream(outFile));\n            BufferedReader is \u003d Files.newBufferedReader(path)\n        ) {\n          getLog().info(\"Compressing \" + path + \" to \" + outFile);\n          IOUtils.copy(is, os);\n        } catch (Throwable t) {\n          this.throwable \u003d t;\n        }\n      } catch (Throwable t) {\n        this.throwable \u003d t;\n      }\n    }",
      "path": "hadoop-maven-plugins/src/main/java/org/apache/hadoop/maven/plugin/resourcegz/ResourceGzMojo.java"
    }
  }
}