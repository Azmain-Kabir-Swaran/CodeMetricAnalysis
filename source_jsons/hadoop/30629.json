{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LeveldbTimelineStore.java",
  "functionName": "checkVersion",
  "functionId": "checkVersion",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/LeveldbTimelineStore.java",
  "functionStartLine": 1608,
  "functionEndLine": 1624,
  "numCommitsSeen": 19,
  "timeTaken": 2578,
  "changeHistory": [
    "839e077faf4019d6efdcd89d95930023cd0b0a08",
    "a4aa1cb40504299d3401008fdabc795eafb28713",
    "1a78c0ff016097930edf68e8278f826b637e918c",
    "3bfdb0091d3ab716f6c908364a1dc86c5b602166"
  ],
  "changeHistoryShort": {
    "839e077faf4019d6efdcd89d95930023cd0b0a08": "Ybodychange",
    "a4aa1cb40504299d3401008fdabc795eafb28713": "Ybodychange",
    "1a78c0ff016097930edf68e8278f826b637e918c": "Ybodychange",
    "3bfdb0091d3ab716f6c908364a1dc86c5b602166": "Yintroduced"
  },
  "changeHistoryDetails": {
    "839e077faf4019d6efdcd89d95930023cd0b0a08": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6873. Moving logging APIs over to slf4j in hadoop-yarn-server-applicationhistoryservice. Contributed by Yeliang Cang.\n",
      "commitDate": "07/08/17 2:56 AM",
      "commitName": "839e077faf4019d6efdcd89d95930023cd0b0a08",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "31/07/17 8:15 PM",
      "commitNameOld": "a4aa1cb40504299d3401008fdabc795eafb28713",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 6.28,
      "commitsBetweenForRepo": 91,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   private void checkVersion() throws IOException {\n     Version loadedVersion \u003d loadVersion();\n     LOG.info(\"Loaded timeline store version info \" + loadedVersion);\n     if (loadedVersion.equals(getCurrentVersion())) {\n       return;\n     }\n     if (loadedVersion.isCompatibleTo(getCurrentVersion())) {\n       LOG.info(\"Storing timeline store version info \" + getCurrentVersion());\n       dbStoreVersion(CURRENT_VERSION_INFO);\n     } else {\n       String incompatibleMessage \u003d \n           \"Incompatible version for timeline store: expecting version \" \n               + getCurrentVersion() + \", but loading version \" + loadedVersion;\n-      LOG.fatal(incompatibleMessage);\n+      LOG.error(incompatibleMessage);\n       throw new IOException(incompatibleMessage);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void checkVersion() throws IOException {\n    Version loadedVersion \u003d loadVersion();\n    LOG.info(\"Loaded timeline store version info \" + loadedVersion);\n    if (loadedVersion.equals(getCurrentVersion())) {\n      return;\n    }\n    if (loadedVersion.isCompatibleTo(getCurrentVersion())) {\n      LOG.info(\"Storing timeline store version info \" + getCurrentVersion());\n      dbStoreVersion(CURRENT_VERSION_INFO);\n    } else {\n      String incompatibleMessage \u003d \n          \"Incompatible version for timeline store: expecting version \" \n              + getCurrentVersion() + \", but loading version \" + loadedVersion;\n      LOG.error(incompatibleMessage);\n      throw new IOException(incompatibleMessage);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/LeveldbTimelineStore.java",
      "extendedDetails": {}
    },
    "a4aa1cb40504299d3401008fdabc795eafb28713": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"YARN-6873. Moving logging APIs over to slf4j in hadoop-yarn-server-applicationhistoryservice. Contributed by Yeliang Cang.\"\n\nThis reverts commit 1a78c0ff016097930edf68e8278f826b637e918c.\n",
      "commitDate": "31/07/17 8:15 PM",
      "commitName": "a4aa1cb40504299d3401008fdabc795eafb28713",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "31/07/17 6:53 PM",
      "commitNameOld": "1a78c0ff016097930edf68e8278f826b637e918c",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 0.06,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   private void checkVersion() throws IOException {\n     Version loadedVersion \u003d loadVersion();\n     LOG.info(\"Loaded timeline store version info \" + loadedVersion);\n     if (loadedVersion.equals(getCurrentVersion())) {\n       return;\n     }\n     if (loadedVersion.isCompatibleTo(getCurrentVersion())) {\n       LOG.info(\"Storing timeline store version info \" + getCurrentVersion());\n       dbStoreVersion(CURRENT_VERSION_INFO);\n     } else {\n       String incompatibleMessage \u003d \n           \"Incompatible version for timeline store: expecting version \" \n               + getCurrentVersion() + \", but loading version \" + loadedVersion;\n-      LOG.error(incompatibleMessage);\n+      LOG.fatal(incompatibleMessage);\n       throw new IOException(incompatibleMessage);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void checkVersion() throws IOException {\n    Version loadedVersion \u003d loadVersion();\n    LOG.info(\"Loaded timeline store version info \" + loadedVersion);\n    if (loadedVersion.equals(getCurrentVersion())) {\n      return;\n    }\n    if (loadedVersion.isCompatibleTo(getCurrentVersion())) {\n      LOG.info(\"Storing timeline store version info \" + getCurrentVersion());\n      dbStoreVersion(CURRENT_VERSION_INFO);\n    } else {\n      String incompatibleMessage \u003d \n          \"Incompatible version for timeline store: expecting version \" \n              + getCurrentVersion() + \", but loading version \" + loadedVersion;\n      LOG.fatal(incompatibleMessage);\n      throw new IOException(incompatibleMessage);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/LeveldbTimelineStore.java",
      "extendedDetails": {}
    },
    "1a78c0ff016097930edf68e8278f826b637e918c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6873. Moving logging APIs over to slf4j in hadoop-yarn-server-applicationhistoryservice. Contributed by Yeliang Cang.\n",
      "commitDate": "31/07/17 6:53 PM",
      "commitName": "1a78c0ff016097930edf68e8278f826b637e918c",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "10/01/17 2:24 AM",
      "commitNameOld": "4c431a694059e40e78365b02a1497a6c7e479a70",
      "commitAuthorOld": "Naganarasimha",
      "daysBetweenCommits": 202.65,
      "commitsBetweenForRepo": 1063,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   private void checkVersion() throws IOException {\n     Version loadedVersion \u003d loadVersion();\n     LOG.info(\"Loaded timeline store version info \" + loadedVersion);\n     if (loadedVersion.equals(getCurrentVersion())) {\n       return;\n     }\n     if (loadedVersion.isCompatibleTo(getCurrentVersion())) {\n       LOG.info(\"Storing timeline store version info \" + getCurrentVersion());\n       dbStoreVersion(CURRENT_VERSION_INFO);\n     } else {\n       String incompatibleMessage \u003d \n           \"Incompatible version for timeline store: expecting version \" \n               + getCurrentVersion() + \", but loading version \" + loadedVersion;\n-      LOG.fatal(incompatibleMessage);\n+      LOG.error(incompatibleMessage);\n       throw new IOException(incompatibleMessage);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void checkVersion() throws IOException {\n    Version loadedVersion \u003d loadVersion();\n    LOG.info(\"Loaded timeline store version info \" + loadedVersion);\n    if (loadedVersion.equals(getCurrentVersion())) {\n      return;\n    }\n    if (loadedVersion.isCompatibleTo(getCurrentVersion())) {\n      LOG.info(\"Storing timeline store version info \" + getCurrentVersion());\n      dbStoreVersion(CURRENT_VERSION_INFO);\n    } else {\n      String incompatibleMessage \u003d \n          \"Incompatible version for timeline store: expecting version \" \n              + getCurrentVersion() + \", but loading version \" + loadedVersion;\n      LOG.error(incompatibleMessage);\n      throw new IOException(incompatibleMessage);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/LeveldbTimelineStore.java",
      "extendedDetails": {}
    },
    "3bfdb0091d3ab716f6c908364a1dc86c5b602166": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2288. Made persisted data in LevelDB timeline store be versioned. Contributed by Junping Du.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1616540 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/14 10:02 AM",
      "commitName": "3bfdb0091d3ab716f6c908364a1dc86c5b602166",
      "commitAuthor": "Zhijie Shen",
      "diff": "@@ -0,0 +1,17 @@\n+  private void checkVersion() throws IOException {\n+    Version loadedVersion \u003d loadVersion();\n+    LOG.info(\"Loaded timeline store version info \" + loadedVersion);\n+    if (loadedVersion.equals(getCurrentVersion())) {\n+      return;\n+    }\n+    if (loadedVersion.isCompatibleTo(getCurrentVersion())) {\n+      LOG.info(\"Storing timeline store version info \" + getCurrentVersion());\n+      dbStoreVersion(CURRENT_VERSION_INFO);\n+    } else {\n+      String incompatibleMessage \u003d \n+          \"Incompatible version for timeline store: expecting version \" \n+              + getCurrentVersion() + \", but loading version \" + loadedVersion;\n+      LOG.fatal(incompatibleMessage);\n+      throw new IOException(incompatibleMessage);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void checkVersion() throws IOException {\n    Version loadedVersion \u003d loadVersion();\n    LOG.info(\"Loaded timeline store version info \" + loadedVersion);\n    if (loadedVersion.equals(getCurrentVersion())) {\n      return;\n    }\n    if (loadedVersion.isCompatibleTo(getCurrentVersion())) {\n      LOG.info(\"Storing timeline store version info \" + getCurrentVersion());\n      dbStoreVersion(CURRENT_VERSION_INFO);\n    } else {\n      String incompatibleMessage \u003d \n          \"Incompatible version for timeline store: expecting version \" \n              + getCurrentVersion() + \", but loading version \" + loadedVersion;\n      LOG.fatal(incompatibleMessage);\n      throw new IOException(incompatibleMessage);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/LeveldbTimelineStore.java"
    }
  }
}