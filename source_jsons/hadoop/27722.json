{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LocalityMulticastAMRMProxyPolicy.java",
  "functionName": "splitAnyRequests",
  "functionId": "splitAnyRequests___originalResourceRequests-List__ResourceRequest____allocationBookkeeper-AllocationBookkeeper",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/policies/amrmproxy/LocalityMulticastAMRMProxyPolicy.java",
  "functionStartLine": 294,
  "functionEndLine": 314,
  "numCommitsSeen": 11,
  "timeTaken": 738,
  "changeHistory": [
    "1dadd0b45a6a605da72eb304808edb49fc66da45"
  ],
  "changeHistoryShort": {
    "1dadd0b45a6a605da72eb304808edb49fc66da45": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1dadd0b45a6a605da72eb304808edb49fc66da45": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5325. Stateless ARMRMProxy policies implementation. (Carlo Curino via Subru).\n\n(cherry picked from commit 11c5336522d3504598fb94eee288d54df73418c6)\n",
      "commitDate": "01/08/17 5:28 PM",
      "commitName": "1dadd0b45a6a605da72eb304808edb49fc66da45",
      "commitAuthor": "Subru Krishnan",
      "diff": "@@ -0,0 +1,21 @@\n+  private void splitAnyRequests(List\u003cResourceRequest\u003e originalResourceRequests,\n+      AllocationBookkeeper allocationBookkeeper) throws YarnException {\n+\n+    for (ResourceRequest resourceRequest : originalResourceRequests) {\n+\n+      // FIRST: pick the target set of subclusters (based on whether this RR\n+      // is associated with other localized requests via an allocationId)\n+      Long allocationId \u003d resourceRequest.getAllocationRequestId();\n+      Set\u003cSubClusterId\u003e targetSubclusters;\n+      if (allocationBookkeeper.getSubClustersForId(allocationId) !\u003d null) {\n+        targetSubclusters \u003d\n+            allocationBookkeeper.getSubClustersForId(allocationId);\n+      } else {\n+        targetSubclusters \u003d allocationBookkeeper.getActiveAndEnabledSC();\n+      }\n+\n+      // SECOND: pick how much to ask to each RM for each request\n+      splitIndividualAny(resourceRequest, targetSubclusters,\n+          allocationBookkeeper);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void splitAnyRequests(List\u003cResourceRequest\u003e originalResourceRequests,\n      AllocationBookkeeper allocationBookkeeper) throws YarnException {\n\n    for (ResourceRequest resourceRequest : originalResourceRequests) {\n\n      // FIRST: pick the target set of subclusters (based on whether this RR\n      // is associated with other localized requests via an allocationId)\n      Long allocationId \u003d resourceRequest.getAllocationRequestId();\n      Set\u003cSubClusterId\u003e targetSubclusters;\n      if (allocationBookkeeper.getSubClustersForId(allocationId) !\u003d null) {\n        targetSubclusters \u003d\n            allocationBookkeeper.getSubClustersForId(allocationId);\n      } else {\n        targetSubclusters \u003d allocationBookkeeper.getActiveAndEnabledSC();\n      }\n\n      // SECOND: pick how much to ask to each RM for each request\n      splitIndividualAny(resourceRequest, targetSubclusters,\n          allocationBookkeeper);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/policies/amrmproxy/LocalityMulticastAMRMProxyPolicy.java"
    }
  }
}