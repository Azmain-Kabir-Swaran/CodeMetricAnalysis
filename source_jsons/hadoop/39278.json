{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CapacityScheduler.java",
  "functionName": "getOrCreateQueueFromPlacementContext",
  "functionId": "getOrCreateQueueFromPlacementContext___applicationId-ApplicationId__user-String__queueName-String__placementContext-ApplicationPlacementContext__isRecovery-boolean",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
  "functionStartLine": 886,
  "functionEndLine": 929,
  "numCommitsSeen": 239,
  "timeTaken": 4019,
  "changeHistory": [
    "e40e2d6ad5cbe782c3a067229270738b501ed27e",
    "d9ba6f3656e8dc97d2813181e27d12e52dca4328",
    "cb87e4dc927731e32b0bbcf678bb5600835ff28d"
  ],
  "changeHistoryShort": {
    "e40e2d6ad5cbe782c3a067229270738b501ed27e": "Ybodychange",
    "d9ba6f3656e8dc97d2813181e27d12e52dca4328": "Ybodychange",
    "cb87e4dc927731e32b0bbcf678bb5600835ff28d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e40e2d6ad5cbe782c3a067229270738b501ed27e": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7243. Moving logging APIs over to slf4j in hadoop-yarn-server-resourcemanager.\n\nSigned-off-by: Akira Ajisaka \u003caajisaka@apache.org\u003e\n",
      "commitDate": "04/03/19 9:10 PM",
      "commitName": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
      "commitAuthor": "Prabhu Joseph",
      "commitDateOld": "24/02/19 6:17 AM",
      "commitNameOld": "50094d7fefafaf0e88798b43cdce291ae067e3fd",
      "commitAuthorOld": "Weiwei Yang",
      "daysBetweenCommits": 8.62,
      "commitsBetweenForRepo": 82,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,44 +1,44 @@\n   private CSQueue getOrCreateQueueFromPlacementContext(ApplicationId\n       applicationId, String user, String queueName,\n       ApplicationPlacementContext placementContext,\n        boolean isRecovery) {\n \n     CSQueue queue \u003d getQueue(queueName);\n \n     if (queue \u003d\u003d null) {\n       if (placementContext !\u003d null \u0026\u0026 placementContext.hasParentQueue()) {\n         try {\n           return autoCreateLeafQueue(placementContext);\n         } catch (YarnException | IOException e) {\n           if (isRecovery) {\n             if (!getConfiguration().shouldAppFailFast(getConfig())) {\n               LOG.error(\"Could not auto-create leaf queue \" + queueName +\n                   \" due to : \", e);\n               this.rmContext.getDispatcher().getEventHandler().handle(\n                   new RMAppEvent(applicationId, RMAppEventType.KILL,\n                       \"Application killed on recovery\"\n                           + \" as it was submitted to queue \" + queueName\n                           + \" which could not be auto-created\"));\n             } else{\n               String queueErrorMsg \u003d\n                   \"Queue named \" + queueName + \" could not be \"\n                       + \"auto-created during application recovery.\";\n-              LOG.fatal(queueErrorMsg, e);\n+              LOG.error(FATAL, queueErrorMsg, e);\n               throw new QueueInvalidException(queueErrorMsg);\n             }\n           } else{\n             LOG.error(\"Could not auto-create leaf queue due to : \", e);\n             final String message \u003d\n                 \"Application \" + applicationId + \" submission by user : \"\n                     + user\n                     + \" to  queue : \" + queueName + \" failed : \" + e\n                     .getMessage();\n             this.rmContext.getDispatcher().getEventHandler().handle(\n                 new RMAppEvent(applicationId, RMAppEventType.APP_REJECTED,\n                     message));\n           }\n         }\n       }\n     }\n     return queue;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private CSQueue getOrCreateQueueFromPlacementContext(ApplicationId\n      applicationId, String user, String queueName,\n      ApplicationPlacementContext placementContext,\n       boolean isRecovery) {\n\n    CSQueue queue \u003d getQueue(queueName);\n\n    if (queue \u003d\u003d null) {\n      if (placementContext !\u003d null \u0026\u0026 placementContext.hasParentQueue()) {\n        try {\n          return autoCreateLeafQueue(placementContext);\n        } catch (YarnException | IOException e) {\n          if (isRecovery) {\n            if (!getConfiguration().shouldAppFailFast(getConfig())) {\n              LOG.error(\"Could not auto-create leaf queue \" + queueName +\n                  \" due to : \", e);\n              this.rmContext.getDispatcher().getEventHandler().handle(\n                  new RMAppEvent(applicationId, RMAppEventType.KILL,\n                      \"Application killed on recovery\"\n                          + \" as it was submitted to queue \" + queueName\n                          + \" which could not be auto-created\"));\n            } else{\n              String queueErrorMsg \u003d\n                  \"Queue named \" + queueName + \" could not be \"\n                      + \"auto-created during application recovery.\";\n              LOG.error(FATAL, queueErrorMsg, e);\n              throw new QueueInvalidException(queueErrorMsg);\n            }\n          } else{\n            LOG.error(\"Could not auto-create leaf queue due to : \", e);\n            final String message \u003d\n                \"Application \" + applicationId + \" submission by user : \"\n                    + user\n                    + \" to  queue : \" + queueName + \" failed : \" + e\n                    .getMessage();\n            this.rmContext.getDispatcher().getEventHandler().handle(\n                new RMAppEvent(applicationId, RMAppEventType.APP_REJECTED,\n                    message));\n          }\n        }\n      }\n    }\n    return queue;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
      "extendedDetails": {}
    },
    "d9ba6f3656e8dc97d2813181e27d12e52dca4328": {
      "type": "Ybodychange",
      "commitMessage": "yarn.resourcemanager.fail-fast is used inconsistently. Contributed by Yuanbo Liu.\n",
      "commitDate": "02/07/18 11:46 PM",
      "commitName": "d9ba6f3656e8dc97d2813181e27d12e52dca4328",
      "commitAuthor": "Junping Du",
      "commitDateOld": "26/06/18 7:27 PM",
      "commitNameOld": "bedc4fe0799cf3b161100acc521fc62a97793427",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 6.18,
      "commitsBetweenForRepo": 35,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,44 +1,44 @@\n   private CSQueue getOrCreateQueueFromPlacementContext(ApplicationId\n       applicationId, String user, String queueName,\n       ApplicationPlacementContext placementContext,\n        boolean isRecovery) {\n \n     CSQueue queue \u003d getQueue(queueName);\n \n     if (queue \u003d\u003d null) {\n       if (placementContext !\u003d null \u0026\u0026 placementContext.hasParentQueue()) {\n         try {\n           return autoCreateLeafQueue(placementContext);\n         } catch (YarnException | IOException e) {\n           if (isRecovery) {\n-            if (!YarnConfiguration.shouldRMFailFast(getConfig())) {\n+            if (!getConfiguration().shouldAppFailFast(getConfig())) {\n               LOG.error(\"Could not auto-create leaf queue \" + queueName +\n                   \" due to : \", e);\n               this.rmContext.getDispatcher().getEventHandler().handle(\n                   new RMAppEvent(applicationId, RMAppEventType.KILL,\n                       \"Application killed on recovery\"\n                           + \" as it was submitted to queue \" + queueName\n                           + \" which could not be auto-created\"));\n             } else{\n               String queueErrorMsg \u003d\n                   \"Queue named \" + queueName + \" could not be \"\n                       + \"auto-created during application recovery.\";\n               LOG.fatal(queueErrorMsg, e);\n               throw new QueueInvalidException(queueErrorMsg);\n             }\n           } else{\n             LOG.error(\"Could not auto-create leaf queue due to : \", e);\n             final String message \u003d\n                 \"Application \" + applicationId + \" submission by user : \"\n                     + user\n                     + \" to  queue : \" + queueName + \" failed : \" + e\n                     .getMessage();\n             this.rmContext.getDispatcher().getEventHandler().handle(\n                 new RMAppEvent(applicationId, RMAppEventType.APP_REJECTED,\n                     message));\n           }\n         }\n       }\n     }\n     return queue;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private CSQueue getOrCreateQueueFromPlacementContext(ApplicationId\n      applicationId, String user, String queueName,\n      ApplicationPlacementContext placementContext,\n       boolean isRecovery) {\n\n    CSQueue queue \u003d getQueue(queueName);\n\n    if (queue \u003d\u003d null) {\n      if (placementContext !\u003d null \u0026\u0026 placementContext.hasParentQueue()) {\n        try {\n          return autoCreateLeafQueue(placementContext);\n        } catch (YarnException | IOException e) {\n          if (isRecovery) {\n            if (!getConfiguration().shouldAppFailFast(getConfig())) {\n              LOG.error(\"Could not auto-create leaf queue \" + queueName +\n                  \" due to : \", e);\n              this.rmContext.getDispatcher().getEventHandler().handle(\n                  new RMAppEvent(applicationId, RMAppEventType.KILL,\n                      \"Application killed on recovery\"\n                          + \" as it was submitted to queue \" + queueName\n                          + \" which could not be auto-created\"));\n            } else{\n              String queueErrorMsg \u003d\n                  \"Queue named \" + queueName + \" could not be \"\n                      + \"auto-created during application recovery.\";\n              LOG.fatal(queueErrorMsg, e);\n              throw new QueueInvalidException(queueErrorMsg);\n            }\n          } else{\n            LOG.error(\"Could not auto-create leaf queue due to : \", e);\n            final String message \u003d\n                \"Application \" + applicationId + \" submission by user : \"\n                    + user\n                    + \" to  queue : \" + queueName + \" failed : \" + e\n                    .getMessage();\n            this.rmContext.getDispatcher().getEventHandler().handle(\n                new RMAppEvent(applicationId, RMAppEventType.APP_REJECTED,\n                    message));\n          }\n        }\n      }\n    }\n    return queue;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
      "extendedDetails": {}
    },
    "cb87e4dc927731e32b0bbcf678bb5600835ff28d": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7643. Handle recovery of applications in case of auto-created leaf queue mapping. Contributed by Suma Shivaprasad.\n",
      "commitDate": "13/12/17 9:19 AM",
      "commitName": "cb87e4dc927731e32b0bbcf678bb5600835ff28d",
      "commitAuthor": "Sunil G",
      "diff": "@@ -0,0 +1,44 @@\n+  private CSQueue getOrCreateQueueFromPlacementContext(ApplicationId\n+      applicationId, String user, String queueName,\n+      ApplicationPlacementContext placementContext,\n+       boolean isRecovery) {\n+\n+    CSQueue queue \u003d getQueue(queueName);\n+\n+    if (queue \u003d\u003d null) {\n+      if (placementContext !\u003d null \u0026\u0026 placementContext.hasParentQueue()) {\n+        try {\n+          return autoCreateLeafQueue(placementContext);\n+        } catch (YarnException | IOException e) {\n+          if (isRecovery) {\n+            if (!YarnConfiguration.shouldRMFailFast(getConfig())) {\n+              LOG.error(\"Could not auto-create leaf queue \" + queueName +\n+                  \" due to : \", e);\n+              this.rmContext.getDispatcher().getEventHandler().handle(\n+                  new RMAppEvent(applicationId, RMAppEventType.KILL,\n+                      \"Application killed on recovery\"\n+                          + \" as it was submitted to queue \" + queueName\n+                          + \" which could not be auto-created\"));\n+            } else{\n+              String queueErrorMsg \u003d\n+                  \"Queue named \" + queueName + \" could not be \"\n+                      + \"auto-created during application recovery.\";\n+              LOG.fatal(queueErrorMsg, e);\n+              throw new QueueInvalidException(queueErrorMsg);\n+            }\n+          } else{\n+            LOG.error(\"Could not auto-create leaf queue due to : \", e);\n+            final String message \u003d\n+                \"Application \" + applicationId + \" submission by user : \"\n+                    + user\n+                    + \" to  queue : \" + queueName + \" failed : \" + e\n+                    .getMessage();\n+            this.rmContext.getDispatcher().getEventHandler().handle(\n+                new RMAppEvent(applicationId, RMAppEventType.APP_REJECTED,\n+                    message));\n+          }\n+        }\n+      }\n+    }\n+    return queue;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private CSQueue getOrCreateQueueFromPlacementContext(ApplicationId\n      applicationId, String user, String queueName,\n      ApplicationPlacementContext placementContext,\n       boolean isRecovery) {\n\n    CSQueue queue \u003d getQueue(queueName);\n\n    if (queue \u003d\u003d null) {\n      if (placementContext !\u003d null \u0026\u0026 placementContext.hasParentQueue()) {\n        try {\n          return autoCreateLeafQueue(placementContext);\n        } catch (YarnException | IOException e) {\n          if (isRecovery) {\n            if (!YarnConfiguration.shouldRMFailFast(getConfig())) {\n              LOG.error(\"Could not auto-create leaf queue \" + queueName +\n                  \" due to : \", e);\n              this.rmContext.getDispatcher().getEventHandler().handle(\n                  new RMAppEvent(applicationId, RMAppEventType.KILL,\n                      \"Application killed on recovery\"\n                          + \" as it was submitted to queue \" + queueName\n                          + \" which could not be auto-created\"));\n            } else{\n              String queueErrorMsg \u003d\n                  \"Queue named \" + queueName + \" could not be \"\n                      + \"auto-created during application recovery.\";\n              LOG.fatal(queueErrorMsg, e);\n              throw new QueueInvalidException(queueErrorMsg);\n            }\n          } else{\n            LOG.error(\"Could not auto-create leaf queue due to : \", e);\n            final String message \u003d\n                \"Application \" + applicationId + \" submission by user : \"\n                    + user\n                    + \" to  queue : \" + queueName + \" failed : \" + e\n                    .getMessage();\n            this.rmContext.getDispatcher().getEventHandler().handle(\n                new RMAppEvent(applicationId, RMAppEventType.APP_REJECTED,\n                    message));\n          }\n        }\n      }\n    }\n    return queue;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java"
    }
  }
}