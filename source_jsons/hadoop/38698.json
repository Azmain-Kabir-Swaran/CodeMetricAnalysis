{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FiCaSchedulerApp.java",
  "functionName": "anyContainerInFinalState",
  "functionId": "anyContainerInFinalState___request-ResourceCommitRequest__FiCaSchedulerApp,FiCaSchedulerNode__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerApp.java",
  "functionStartLine": 300,
  "functionEndLine": 345,
  "numCommitsSeen": 93,
  "timeTaken": 3000,
  "changeHistory": [
    "2064ca015d1584263aac0cc20c60b925a3aff612",
    "de3b4aac561258ad242a3c5ed1c919428893fd4c"
  ],
  "changeHistoryShort": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": "Ybodychange",
    "de3b4aac561258ad242a3c5ed1c919428893fd4c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9349.  Changed logging to use slf4j api.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "15/03/19 4:20 PM",
      "commitName": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "07/03/19 1:47 PM",
      "commitNameOld": "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 8.06,
      "commitsBetweenForRepo": 69,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,55 +1,46 @@\n   private boolean anyContainerInFinalState(\n       ResourceCommitRequest\u003cFiCaSchedulerApp, FiCaSchedulerNode\u003e request) {\n     for (SchedulerContainer\u003cFiCaSchedulerApp, FiCaSchedulerNode\u003e c : request\n         .getContainersToRelease()) {\n       if (rmContainerInFinalState(c.getRmContainer())) {\n-        if (LOG.isDebugEnabled()) {\n-          LOG.debug(\"To-release container\u003d\" + c.getRmContainer()\n-              + \" is in final state\");\n-        }\n+        LOG.debug(\"To-release container\u003d{} is in final state\",\n+            c.getRmContainer());\n         return true;\n       }\n     }\n \n     for (ContainerAllocationProposal\u003cFiCaSchedulerApp, FiCaSchedulerNode\u003e c : request\n         .getContainersToAllocate()) {\n       for (SchedulerContainer\u003cFiCaSchedulerApp, FiCaSchedulerNode\u003e r : c\n           .getToRelease()) {\n         if (rmContainerInFinalState(r.getRmContainer())) {\n-          if (LOG.isDebugEnabled()) {\n-            LOG.debug(\"To-release container\u003d\" + r.getRmContainer()\n-                + \", for to a new allocated container, is in final state\");\n-          }\n+          LOG.debug(\"To-release container\u003d{}, for to a new allocated\"\n+              + \" container, is in final state\", r.getRmContainer());\n           return true;\n         }\n       }\n \n       if (null !\u003d c.getAllocateFromReservedContainer()) {\n         if (rmContainerInFinalState(\n             c.getAllocateFromReservedContainer().getRmContainer())) {\n-          if (LOG.isDebugEnabled()) {\n-            LOG.debug(\"Allocate from reserved container\" + c\n-                .getAllocateFromReservedContainer().getRmContainer()\n-                + \" is in final state\");\n-          }\n+          LOG.debug(\"Allocate from reserved container {} is in final state\",\n+              c.getAllocateFromReservedContainer().getRmContainer());\n           return true;\n         }\n       }\n     }\n \n     for (ContainerAllocationProposal\u003cFiCaSchedulerApp, FiCaSchedulerNode\u003e c : request\n         .getContainersToReserve()) {\n       for (SchedulerContainer\u003cFiCaSchedulerApp, FiCaSchedulerNode\u003e r : c\n           .getToRelease()) {\n         if (rmContainerInFinalState(r.getRmContainer())) {\n-          if (LOG.isDebugEnabled()) {\n-            LOG.debug(\"To-release container\u003d\" + r.getRmContainer()\n-                + \", for a reserved container, is in final state\");\n-          }\n+          LOG.debug(\"To-release container\u003d{}, for a reserved container,\"\n+              + \" is in final state\", r.getRmContainer());\n           return true;\n         }\n       }\n     }\n \n     return false;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean anyContainerInFinalState(\n      ResourceCommitRequest\u003cFiCaSchedulerApp, FiCaSchedulerNode\u003e request) {\n    for (SchedulerContainer\u003cFiCaSchedulerApp, FiCaSchedulerNode\u003e c : request\n        .getContainersToRelease()) {\n      if (rmContainerInFinalState(c.getRmContainer())) {\n        LOG.debug(\"To-release container\u003d{} is in final state\",\n            c.getRmContainer());\n        return true;\n      }\n    }\n\n    for (ContainerAllocationProposal\u003cFiCaSchedulerApp, FiCaSchedulerNode\u003e c : request\n        .getContainersToAllocate()) {\n      for (SchedulerContainer\u003cFiCaSchedulerApp, FiCaSchedulerNode\u003e r : c\n          .getToRelease()) {\n        if (rmContainerInFinalState(r.getRmContainer())) {\n          LOG.debug(\"To-release container\u003d{}, for to a new allocated\"\n              + \" container, is in final state\", r.getRmContainer());\n          return true;\n        }\n      }\n\n      if (null !\u003d c.getAllocateFromReservedContainer()) {\n        if (rmContainerInFinalState(\n            c.getAllocateFromReservedContainer().getRmContainer())) {\n          LOG.debug(\"Allocate from reserved container {} is in final state\",\n              c.getAllocateFromReservedContainer().getRmContainer());\n          return true;\n        }\n      }\n    }\n\n    for (ContainerAllocationProposal\u003cFiCaSchedulerApp, FiCaSchedulerNode\u003e c : request\n        .getContainersToReserve()) {\n      for (SchedulerContainer\u003cFiCaSchedulerApp, FiCaSchedulerNode\u003e r : c\n          .getToRelease()) {\n        if (rmContainerInFinalState(r.getRmContainer())) {\n          LOG.debug(\"To-release container\u003d{}, for a reserved container,\"\n              + \" is in final state\", r.getRmContainer());\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerApp.java",
      "extendedDetails": {}
    },
    "de3b4aac561258ad242a3c5ed1c919428893fd4c": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5716. Add global scheduler interface definition and update CapacityScheduler to use it. Contributed by Wangda Tan\n",
      "commitDate": "07/11/16 10:14 AM",
      "commitName": "de3b4aac561258ad242a3c5ed1c919428893fd4c",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,55 @@\n+  private boolean anyContainerInFinalState(\n+      ResourceCommitRequest\u003cFiCaSchedulerApp, FiCaSchedulerNode\u003e request) {\n+    for (SchedulerContainer\u003cFiCaSchedulerApp, FiCaSchedulerNode\u003e c : request\n+        .getContainersToRelease()) {\n+      if (rmContainerInFinalState(c.getRmContainer())) {\n+        if (LOG.isDebugEnabled()) {\n+          LOG.debug(\"To-release container\u003d\" + c.getRmContainer()\n+              + \" is in final state\");\n+        }\n+        return true;\n+      }\n+    }\n+\n+    for (ContainerAllocationProposal\u003cFiCaSchedulerApp, FiCaSchedulerNode\u003e c : request\n+        .getContainersToAllocate()) {\n+      for (SchedulerContainer\u003cFiCaSchedulerApp, FiCaSchedulerNode\u003e r : c\n+          .getToRelease()) {\n+        if (rmContainerInFinalState(r.getRmContainer())) {\n+          if (LOG.isDebugEnabled()) {\n+            LOG.debug(\"To-release container\u003d\" + r.getRmContainer()\n+                + \", for to a new allocated container, is in final state\");\n+          }\n+          return true;\n+        }\n+      }\n+\n+      if (null !\u003d c.getAllocateFromReservedContainer()) {\n+        if (rmContainerInFinalState(\n+            c.getAllocateFromReservedContainer().getRmContainer())) {\n+          if (LOG.isDebugEnabled()) {\n+            LOG.debug(\"Allocate from reserved container\" + c\n+                .getAllocateFromReservedContainer().getRmContainer()\n+                + \" is in final state\");\n+          }\n+          return true;\n+        }\n+      }\n+    }\n+\n+    for (ContainerAllocationProposal\u003cFiCaSchedulerApp, FiCaSchedulerNode\u003e c : request\n+        .getContainersToReserve()) {\n+      for (SchedulerContainer\u003cFiCaSchedulerApp, FiCaSchedulerNode\u003e r : c\n+          .getToRelease()) {\n+        if (rmContainerInFinalState(r.getRmContainer())) {\n+          if (LOG.isDebugEnabled()) {\n+            LOG.debug(\"To-release container\u003d\" + r.getRmContainer()\n+                + \", for a reserved container, is in final state\");\n+          }\n+          return true;\n+        }\n+      }\n+    }\n+\n+    return false;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean anyContainerInFinalState(\n      ResourceCommitRequest\u003cFiCaSchedulerApp, FiCaSchedulerNode\u003e request) {\n    for (SchedulerContainer\u003cFiCaSchedulerApp, FiCaSchedulerNode\u003e c : request\n        .getContainersToRelease()) {\n      if (rmContainerInFinalState(c.getRmContainer())) {\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"To-release container\u003d\" + c.getRmContainer()\n              + \" is in final state\");\n        }\n        return true;\n      }\n    }\n\n    for (ContainerAllocationProposal\u003cFiCaSchedulerApp, FiCaSchedulerNode\u003e c : request\n        .getContainersToAllocate()) {\n      for (SchedulerContainer\u003cFiCaSchedulerApp, FiCaSchedulerNode\u003e r : c\n          .getToRelease()) {\n        if (rmContainerInFinalState(r.getRmContainer())) {\n          if (LOG.isDebugEnabled()) {\n            LOG.debug(\"To-release container\u003d\" + r.getRmContainer()\n                + \", for to a new allocated container, is in final state\");\n          }\n          return true;\n        }\n      }\n\n      if (null !\u003d c.getAllocateFromReservedContainer()) {\n        if (rmContainerInFinalState(\n            c.getAllocateFromReservedContainer().getRmContainer())) {\n          if (LOG.isDebugEnabled()) {\n            LOG.debug(\"Allocate from reserved container\" + c\n                .getAllocateFromReservedContainer().getRmContainer()\n                + \" is in final state\");\n          }\n          return true;\n        }\n      }\n    }\n\n    for (ContainerAllocationProposal\u003cFiCaSchedulerApp, FiCaSchedulerNode\u003e c : request\n        .getContainersToReserve()) {\n      for (SchedulerContainer\u003cFiCaSchedulerApp, FiCaSchedulerNode\u003e r : c\n          .getToRelease()) {\n        if (rmContainerInFinalState(r.getRmContainer())) {\n          if (LOG.isDebugEnabled()) {\n            LOG.debug(\"To-release container\u003d\" + r.getRmContainer()\n                + \", for a reserved container, is in final state\");\n          }\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerApp.java"
    }
  }
}