{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TimelineCollector.java",
  "functionName": "putEntitiesAsync",
  "functionId": "putEntitiesAsync___entities-TimelineEntities__callerUgi-UserGroupInformation",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/TimelineCollector.java",
  "functionStartLine": 225,
  "functionEndLine": 239,
  "numCommitsSeen": 24,
  "timeTaken": 3202,
  "changeHistory": [
    "22362c876d28c081c37dd74f6f1ae8139695e254",
    "2064ca015d1584263aac0cc20c60b925a3aff612",
    "9f6540535d9148abbea836d54a9e94d25319c5d5",
    "063b513b1c10987461caab3d26c8543c6e657bf7",
    "d67c9bdb4db2b075484a779802ecf3296bad5cd4",
    "2188a07e5bea1da26bf679ca0ece26ab596d3438",
    "bf54d32750f8b27a170d7a0a8d8f022430327341",
    "7c8abec0a8fc8b10f57438c60b77f48dac679b68"
  ],
  "changeHistoryShort": {
    "22362c876d28c081c37dd74f6f1ae8139695e254": "Ybodychange",
    "2064ca015d1584263aac0cc20c60b925a3aff612": "Ybodychange",
    "9f6540535d9148abbea836d54a9e94d25319c5d5": "Ybodychange",
    "063b513b1c10987461caab3d26c8543c6e657bf7": "Ymultichange(Yexceptionschange,Ybodychange)",
    "d67c9bdb4db2b075484a779802ecf3296bad5cd4": "Ymultichange(Yrename,Ybodychange)",
    "2188a07e5bea1da26bf679ca0ece26ab596d3438": "Yfilerename",
    "bf54d32750f8b27a170d7a0a8d8f022430327341": "Yfilerename",
    "7c8abec0a8fc8b10f57438c60b77f48dac679b68": "Yintroduced"
  },
  "changeHistoryDetails": {
    "22362c876d28c081c37dd74f6f1ae8139695e254": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9335 [atsv2] Restrict the number of elements held in timeline collector when backend is unreachable for async calls. Contributed by Abhishesk Modi.\n",
      "commitDate": "05/04/19 12:06 PM",
      "commitName": "22362c876d28c081c37dd74f6f1ae8139695e254",
      "commitAuthor": "Vrushali C",
      "commitDateOld": "15/03/19 4:20 PM",
      "commitNameOld": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 20.82,
      "commitsBetweenForRepo": 153,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,15 @@\n   public void putEntitiesAsync(TimelineEntities entities,\n       UserGroupInformation callerUgi) throws IOException {\n     LOG.debug(\"putEntitiesAsync(entities\u003d{}, callerUgi\u003d{})\", entities,\n         callerUgi);\n \n-    writeTimelineEntities(entities, callerUgi);\n+    pool.execute(new Runnable() {\n+      @Override public void run() {\n+        try {\n+          writeTimelineEntities(entities, callerUgi);\n+        } catch (IOException ie) {\n+          LOG.error(\"Got an exception while writing entity\", ie);\n+        }\n+      }\n+    });\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void putEntitiesAsync(TimelineEntities entities,\n      UserGroupInformation callerUgi) throws IOException {\n    LOG.debug(\"putEntitiesAsync(entities\u003d{}, callerUgi\u003d{})\", entities,\n        callerUgi);\n\n    pool.execute(new Runnable() {\n      @Override public void run() {\n        try {\n          writeTimelineEntities(entities, callerUgi);\n        } catch (IOException ie) {\n          LOG.error(\"Got an exception while writing entity\", ie);\n        }\n      }\n    });\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/TimelineCollector.java",
      "extendedDetails": {}
    },
    "2064ca015d1584263aac0cc20c60b925a3aff612": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9349.  Changed logging to use slf4j api.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "15/03/19 4:20 PM",
      "commitName": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "16/05/18 1:00 PM",
      "commitNameOld": "e3b7d7ac1694b8766ae11bc7e8ecf09763bb26db",
      "commitAuthorOld": "Haibo Chen",
      "daysBetweenCommits": 303.14,
      "commitsBetweenForRepo": 2382,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,7 @@\n   public void putEntitiesAsync(TimelineEntities entities,\n       UserGroupInformation callerUgi) throws IOException {\n-    if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"putEntitiesAsync(entities\u003d\" + entities + \", callerUgi\u003d\" +\n-          callerUgi + \")\");\n-    }\n+    LOG.debug(\"putEntitiesAsync(entities\u003d{}, callerUgi\u003d{})\", entities,\n+        callerUgi);\n \n     writeTimelineEntities(entities, callerUgi);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void putEntitiesAsync(TimelineEntities entities,\n      UserGroupInformation callerUgi) throws IOException {\n    LOG.debug(\"putEntitiesAsync(entities\u003d{}, callerUgi\u003d{})\", entities,\n        callerUgi);\n\n    writeTimelineEntities(entities, callerUgi);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/TimelineCollector.java",
      "extendedDetails": {}
    },
    "9f6540535d9148abbea836d54a9e94d25319c5d5": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6734. Ensure sub-application user is extracted \u0026 sent to timeline service (Rohith Sharma K S via Varun Saxena)\n",
      "commitDate": "29/08/17 10:59 PM",
      "commitName": "9f6540535d9148abbea836d54a9e94d25319c5d5",
      "commitAuthor": "Varun Saxena",
      "commitDateOld": "09/08/17 7:58 AM",
      "commitNameOld": "63cfcb90ac6fbb79ba9ed6b3044cd999fc74e58c",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 20.63,
      "commitsBetweenForRepo": 159,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n   public void putEntitiesAsync(TimelineEntities entities,\n       UserGroupInformation callerUgi) throws IOException {\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"putEntitiesAsync(entities\u003d\" + entities + \", callerUgi\u003d\" +\n           callerUgi + \")\");\n     }\n \n-    writeTimelineEntities(entities);\n+    writeTimelineEntities(entities, callerUgi);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void putEntitiesAsync(TimelineEntities entities,\n      UserGroupInformation callerUgi) throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"putEntitiesAsync(entities\u003d\" + entities + \", callerUgi\u003d\" +\n          callerUgi + \")\");\n    }\n\n    writeTimelineEntities(entities, callerUgi);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/TimelineCollector.java",
      "extendedDetails": {}
    },
    "063b513b1c10987461caab3d26c8543c6e657bf7": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "YARN-6357. Implement putEntitiesAsync API in TimelineCollector (Haibo Chen via Varun Saxena)\n",
      "commitDate": "28/03/17 3:18 PM",
      "commitName": "063b513b1c10987461caab3d26c8543c6e657bf7",
      "commitAuthor": "Varun Saxena",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "YARN-6357. Implement putEntitiesAsync API in TimelineCollector (Haibo Chen via Varun Saxena)\n",
          "commitDate": "28/03/17 3:18 PM",
          "commitName": "063b513b1c10987461caab3d26c8543c6e657bf7",
          "commitAuthor": "Varun Saxena",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "a1b6d7456fa37b7b418dd08178ea73ed5c1de124",
          "commitAuthorOld": "Sangjin Lee",
          "daysBetweenCommits": 261.27,
          "commitsBetweenForRepo": 1672,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,9 @@\n   public void putEntitiesAsync(TimelineEntities entities,\n-      UserGroupInformation callerUgi) {\n-    // TODO implement\n+      UserGroupInformation callerUgi) throws IOException {\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"putEntitiesAsync(entities\u003d\" + entities + \", callerUgi\u003d\" +\n           callerUgi + \")\");\n     }\n+\n+    writeTimelineEntities(entities);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void putEntitiesAsync(TimelineEntities entities,\n      UserGroupInformation callerUgi) throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"putEntitiesAsync(entities\u003d\" + entities + \", callerUgi\u003d\" +\n          callerUgi + \")\");\n    }\n\n    writeTimelineEntities(entities);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/TimelineCollector.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[IOException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-6357. Implement putEntitiesAsync API in TimelineCollector (Haibo Chen via Varun Saxena)\n",
          "commitDate": "28/03/17 3:18 PM",
          "commitName": "063b513b1c10987461caab3d26c8543c6e657bf7",
          "commitAuthor": "Varun Saxena",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "a1b6d7456fa37b7b418dd08178ea73ed5c1de124",
          "commitAuthorOld": "Sangjin Lee",
          "daysBetweenCommits": 261.27,
          "commitsBetweenForRepo": 1672,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,9 @@\n   public void putEntitiesAsync(TimelineEntities entities,\n-      UserGroupInformation callerUgi) {\n-    // TODO implement\n+      UserGroupInformation callerUgi) throws IOException {\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"putEntitiesAsync(entities\u003d\" + entities + \", callerUgi\u003d\" +\n           callerUgi + \")\");\n     }\n+\n+    writeTimelineEntities(entities);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void putEntitiesAsync(TimelineEntities entities,\n      UserGroupInformation callerUgi) throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"putEntitiesAsync(entities\u003d\" + entities + \", callerUgi\u003d\" +\n          callerUgi + \")\");\n    }\n\n    writeTimelineEntities(entities);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/TimelineCollector.java",
          "extendedDetails": {}
        }
      ]
    },
    "d67c9bdb4db2b075484a779802ecf3296bad5cd4": {
      "type": "Ymultichange(Yrename,Ybodychange)",
      "commitMessage": "YARN-3040. Make putEntities operation be aware of the app\u0027s context. Contributed by Zhijie Shen\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "d67c9bdb4db2b075484a779802ecf3296bad5cd4",
      "commitAuthor": "Junping Du",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-3040. Make putEntities operation be aware of the app\u0027s context. Contributed by Zhijie Shen\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "d67c9bdb4db2b075484a779802ecf3296bad5cd4",
          "commitAuthor": "Junping Du",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "2188a07e5bea1da26bf679ca0ece26ab596d3438",
          "commitAuthorOld": "Junping Du",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,8 @@\n-  public void postEntitiesAsync(TimelineEntities entities,\n+  public void putEntitiesAsync(TimelineEntities entities,\n       UserGroupInformation callerUgi) {\n     // TODO implement\n     if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"postEntitiesAsync(entities\u003d\" + entities + \", callerUgi\u003d\" +\n+      LOG.debug(\"putEntitiesAsync(entities\u003d\" + entities + \", callerUgi\u003d\" +\n           callerUgi + \")\");\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void putEntitiesAsync(TimelineEntities entities,\n      UserGroupInformation callerUgi) {\n    // TODO implement\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"putEntitiesAsync(entities\u003d\" + entities + \", callerUgi\u003d\" +\n          callerUgi + \")\");\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/TimelineCollector.java",
          "extendedDetails": {
            "oldValue": "postEntitiesAsync",
            "newValue": "putEntitiesAsync"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3040. Make putEntities operation be aware of the app\u0027s context. Contributed by Zhijie Shen\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "d67c9bdb4db2b075484a779802ecf3296bad5cd4",
          "commitAuthor": "Junping Du",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "2188a07e5bea1da26bf679ca0ece26ab596d3438",
          "commitAuthorOld": "Junping Du",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,8 @@\n-  public void postEntitiesAsync(TimelineEntities entities,\n+  public void putEntitiesAsync(TimelineEntities entities,\n       UserGroupInformation callerUgi) {\n     // TODO implement\n     if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"postEntitiesAsync(entities\u003d\" + entities + \", callerUgi\u003d\" +\n+      LOG.debug(\"putEntitiesAsync(entities\u003d\" + entities + \", callerUgi\u003d\" +\n           callerUgi + \")\");\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void putEntitiesAsync(TimelineEntities entities,\n      UserGroupInformation callerUgi) {\n    // TODO implement\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"putEntitiesAsync(entities\u003d\" + entities + \", callerUgi\u003d\" +\n          callerUgi + \")\");\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/TimelineCollector.java",
          "extendedDetails": {}
        }
      ]
    },
    "2188a07e5bea1da26bf679ca0ece26ab596d3438": {
      "type": "Yfilerename",
      "commitMessage": "YARN-3333. Rename TimelineAggregator etc. to TimelineCollector. Contributed by Sangjin Lee\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "2188a07e5bea1da26bf679ca0ece26ab596d3438",
      "commitAuthor": "Junping Du",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "9b5636408005676ae580f8d929f8e912c27828e7",
      "commitAuthorOld": "Zhijie Shen",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void postEntitiesAsync(TimelineEntities entities,\n      UserGroupInformation callerUgi) {\n    // TODO implement\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"postEntitiesAsync(entities\u003d\" + entities + \", callerUgi\u003d\" +\n          callerUgi + \")\");\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/TimelineCollector.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/aggregator/TimelineAggregator.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/TimelineCollector.java"
      }
    },
    "bf54d32750f8b27a170d7a0a8d8f022430327341": {
      "type": "Yfilerename",
      "commitMessage": "YARN-3210. Refactored timeline aggregator according to new code organization proposed in YARN-3166. Contributed by Li Lu.\n\n(cherry picked from commit d3ff7f06cbc66d3a23c2551e7d4c752689f46afe)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "bf54d32750f8b27a170d7a0a8d8f022430327341",
      "commitAuthor": "Zhijie Shen",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "d45ff878c4cb8b359abb17ecf09d24b6f862874c",
      "commitAuthorOld": "Zhijie Shen",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void postEntitiesAsync(TimelineEntities entities,\n      UserGroupInformation callerUgi) {\n    // TODO implement\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"postEntitiesAsync(entities\u003d\" + entities + \", callerUgi\u003d\" +\n          callerUgi + \")\");\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/aggregator/TimelineAggregator.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/aggregator/BaseAggregatorService.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/aggregator/TimelineAggregator.java"
      }
    },
    "7c8abec0a8fc8b10f57438c60b77f48dac679b68": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3030. Set up TS aggregator with basic request serving structure and lifecycle. Contributed by Sangjin Lee.\n\n(cherry picked from commit f26941b39028ac30c77547e2be2d657bb5bf044a)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "7c8abec0a8fc8b10f57438c60b77f48dac679b68",
      "commitAuthor": "Zhijie Shen",
      "diff": "@@ -0,0 +1,8 @@\n+  public void postEntitiesAsync(TimelineEntities entities,\n+      UserGroupInformation callerUgi) {\n+    // TODO implement\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"postEntitiesAsync(entities\u003d\" + entities + \", callerUgi\u003d\" +\n+          callerUgi + \")\");\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void postEntitiesAsync(TimelineEntities entities,\n      UserGroupInformation callerUgi) {\n    // TODO implement\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"postEntitiesAsync(entities\u003d\" + entities + \", callerUgi\u003d\" +\n          callerUgi + \")\");\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/aggregator/BaseAggregatorService.java"
    }
  }
}