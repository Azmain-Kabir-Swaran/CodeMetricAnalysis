{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SLSRunner.java",
  "functionName": "start",
  "functionId": "start",
  "sourceFilePath": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/SLSRunner.java",
  "functionStartLine": 246,
  "functionEndLine": 268,
  "numCommitsSeen": 40,
  "timeTaken": 2086,
  "changeHistory": [
    "2478cbafe6deaf3a190360120234610d6208394b",
    "de69d6e81128470dd5d2fd865d4b3a79188f740b",
    "6a5516c2381f107d96b8326939514de3c6e53d3d",
    "e07f3c87cd3542760efcf713f909375b69eec00f",
    "58b08e11b9f04c9190ab4a07473f0ee04e01ec6b"
  ],
  "changeHistoryShort": {
    "2478cbafe6deaf3a190360120234610d6208394b": "Ybodychange",
    "de69d6e81128470dd5d2fd865d4b3a79188f740b": "Yexceptionschange",
    "6a5516c2381f107d96b8326939514de3c6e53d3d": "Ybodychange",
    "e07f3c87cd3542760efcf713f909375b69eec00f": "Ybodychange",
    "58b08e11b9f04c9190ab4a07473f0ee04e01ec6b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2478cbafe6deaf3a190360120234610d6208394b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9782. Avoid DNS resolution while running SLS. Contributed by Abhishek Modi.\n",
      "commitDate": "04/10/19 2:15 AM",
      "commitName": "2478cbafe6deaf3a190360120234610d6208394b",
      "commitAuthor": "Abhishek Modi",
      "commitDateOld": "28/08/19 11:13 PM",
      "commitNameOld": "16576fde8e3697025e1d37a4c21f8ad904208f8e",
      "commitAuthorOld": "Abhishek Modi",
      "daysBetweenCommits": 36.13,
      "commitsBetweenForRepo": 309,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,23 @@\n   public void start() throws IOException, ClassNotFoundException, YarnException,\n       InterruptedException {\n+\n+    enableDNSCaching(getConf());\n+\n     // start resource manager\n     startRM();\n     // start node managers\n     startNM();\n     // start application masters\n     startAM();\n     // set queue \u0026 tracked apps information\n     ((SchedulerWrapper) rm.getResourceScheduler()).getTracker()\n         .setQueueSet(this.queueAppNumMap.keySet());\n     ((SchedulerWrapper) rm.getResourceScheduler()).getTracker()\n         .setTrackedAppSet(this.trackedApps);\n     // print out simulation info\n     printSimulationInfo();\n     // blocked until all nodes RUNNING\n     waitForNodesRunning();\n     // starting the runner once everything is ready to go,\n     runner.start();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void start() throws IOException, ClassNotFoundException, YarnException,\n      InterruptedException {\n\n    enableDNSCaching(getConf());\n\n    // start resource manager\n    startRM();\n    // start node managers\n    startNM();\n    // start application masters\n    startAM();\n    // set queue \u0026 tracked apps information\n    ((SchedulerWrapper) rm.getResourceScheduler()).getTracker()\n        .setQueueSet(this.queueAppNumMap.keySet());\n    ((SchedulerWrapper) rm.getResourceScheduler()).getTracker()\n        .setTrackedAppSet(this.trackedApps);\n    // print out simulation info\n    printSimulationInfo();\n    // blocked until all nodes RUNNING\n    waitForNodesRunning();\n    // starting the runner once everything is ready to go,\n    runner.start();\n  }",
      "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/SLSRunner.java",
      "extendedDetails": {}
    },
    "de69d6e81128470dd5d2fd865d4b3a79188f740b": {
      "type": "Yexceptionschange",
      "commitMessage": "YARN-6363. Extending SLS: Synthetic Load Generator. (Carlo Curino via wangda)\n",
      "commitDate": "20/04/17 9:54 PM",
      "commitName": "de69d6e81128470dd5d2fd865d4b3a79188f740b",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "29/03/17 4:18 PM",
      "commitNameOld": "6a5516c2381f107d96b8326939514de3c6e53d3d",
      "commitAuthorOld": "Robert Kanter",
      "daysBetweenCommits": 22.23,
      "commitsBetweenForRepo": 128,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,20 @@\n-  public void start() throws Exception {\n+  public void start() throws IOException, ClassNotFoundException, YarnException,\n+      InterruptedException {\n     // start resource manager\n     startRM();\n     // start node managers\n     startNM();\n     // start application masters\n     startAM();\n     // set queue \u0026 tracked apps information\n     ((SchedulerWrapper) rm.getResourceScheduler()).getTracker()\n-                            .setQueueSet(this.queueAppNumMap.keySet());\n+        .setQueueSet(this.queueAppNumMap.keySet());\n     ((SchedulerWrapper) rm.getResourceScheduler()).getTracker()\n-                            .setTrackedAppSet(this.trackedApps);\n+        .setTrackedAppSet(this.trackedApps);\n     // print out simulation info\n     printSimulationInfo();\n     // blocked until all nodes RUNNING\n     waitForNodesRunning();\n     // starting the runner once everything is ready to go,\n     runner.start();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void start() throws IOException, ClassNotFoundException, YarnException,\n      InterruptedException {\n    // start resource manager\n    startRM();\n    // start node managers\n    startNM();\n    // start application masters\n    startAM();\n    // set queue \u0026 tracked apps information\n    ((SchedulerWrapper) rm.getResourceScheduler()).getTracker()\n        .setQueueSet(this.queueAppNumMap.keySet());\n    ((SchedulerWrapper) rm.getResourceScheduler()).getTracker()\n        .setTrackedAppSet(this.trackedApps);\n    // print out simulation info\n    printSimulationInfo();\n    // blocked until all nodes RUNNING\n    waitForNodesRunning();\n    // starting the runner once everything is ready to go,\n    runner.start();\n  }",
      "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/SLSRunner.java",
      "extendedDetails": {
        "oldValue": "[Exception]",
        "newValue": "[IOException, ClassNotFoundException, YarnException, InterruptedException]"
      }
    },
    "6a5516c2381f107d96b8326939514de3c6e53d3d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5654. Not be able to run SLS with FairScheduler (yufeigu via rkanter)\n",
      "commitDate": "29/03/17 4:18 PM",
      "commitName": "6a5516c2381f107d96b8326939514de3c6e53d3d",
      "commitAuthor": "Robert Kanter",
      "commitDateOld": "24/02/17 8:09 AM",
      "commitNameOld": "b32ffa2753e83615b980721b6067fcc35ce54372",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 33.3,
      "commitsBetweenForRepo": 203,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n   public void start() throws Exception {\n     // start resource manager\n     startRM();\n     // start node managers\n     startNM();\n     // start application masters\n     startAM();\n     // set queue \u0026 tracked apps information\n-    ((SchedulerWrapper) rm.getResourceScheduler())\n+    ((SchedulerWrapper) rm.getResourceScheduler()).getTracker()\n                             .setQueueSet(this.queueAppNumMap.keySet());\n-    ((SchedulerWrapper) rm.getResourceScheduler())\n+    ((SchedulerWrapper) rm.getResourceScheduler()).getTracker()\n                             .setTrackedAppSet(this.trackedApps);\n     // print out simulation info\n     printSimulationInfo();\n     // blocked until all nodes RUNNING\n     waitForNodesRunning();\n     // starting the runner once everything is ready to go,\n     runner.start();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void start() throws Exception {\n    // start resource manager\n    startRM();\n    // start node managers\n    startNM();\n    // start application masters\n    startAM();\n    // set queue \u0026 tracked apps information\n    ((SchedulerWrapper) rm.getResourceScheduler()).getTracker()\n                            .setQueueSet(this.queueAppNumMap.keySet());\n    ((SchedulerWrapper) rm.getResourceScheduler()).getTracker()\n                            .setTrackedAppSet(this.trackedApps);\n    // print out simulation info\n    printSimulationInfo();\n    // blocked until all nodes RUNNING\n    waitForNodesRunning();\n    // starting the runner once everything is ready to go,\n    runner.start();\n  }",
      "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/SLSRunner.java",
      "extendedDetails": {}
    },
    "e07f3c87cd3542760efcf713f909375b69eec00f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1471. Preserve scheduler typeinfo in simulator to work with resource monitors.\nContributed by Carlo Curino.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1552173 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/12/13 4:07 PM",
      "commitName": "e07f3c87cd3542760efcf713f909375b69eec00f",
      "commitAuthor": "Christopher Douglas",
      "commitDateOld": "27/09/13 1:23 PM",
      "commitNameOld": "58b08e11b9f04c9190ab4a07473f0ee04e01ec6b",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 82.16,
      "commitsBetweenForRepo": 548,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n   public void start() throws Exception {\n     // start resource manager\n     startRM();\n     // start node managers\n     startNM();\n     // start application masters\n     startAM();\n     // set queue \u0026 tracked apps information\n-    ((ResourceSchedulerWrapper) rm.getResourceScheduler())\n+    ((SchedulerWrapper) rm.getResourceScheduler())\n                             .setQueueSet(this.queueAppNumMap.keySet());\n-    ((ResourceSchedulerWrapper) rm.getResourceScheduler())\n+    ((SchedulerWrapper) rm.getResourceScheduler())\n                             .setTrackedAppSet(this.trackedApps);\n     // print out simulation info\n     printSimulationInfo();\n     // blocked until all nodes RUNNING\n     waitForNodesRunning();\n     // starting the runner once everything is ready to go,\n     runner.start();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void start() throws Exception {\n    // start resource manager\n    startRM();\n    // start node managers\n    startNM();\n    // start application masters\n    startAM();\n    // set queue \u0026 tracked apps information\n    ((SchedulerWrapper) rm.getResourceScheduler())\n                            .setQueueSet(this.queueAppNumMap.keySet());\n    ((SchedulerWrapper) rm.getResourceScheduler())\n                            .setTrackedAppSet(this.trackedApps);\n    // print out simulation info\n    printSimulationInfo();\n    // blocked until all nodes RUNNING\n    waitForNodesRunning();\n    // starting the runner once everything is ready to go,\n    runner.start();\n  }",
      "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/SLSRunner.java",
      "extendedDetails": {}
    },
    "58b08e11b9f04c9190ab4a07473f0ee04e01ec6b": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1021. Yarn Scheduler Load Simulator. (ywskycn via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1527059 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/09/13 1:23 PM",
      "commitName": "58b08e11b9f04c9190ab4a07473f0ee04e01ec6b",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,19 @@\n+  public void start() throws Exception {\n+    // start resource manager\n+    startRM();\n+    // start node managers\n+    startNM();\n+    // start application masters\n+    startAM();\n+    // set queue \u0026 tracked apps information\n+    ((ResourceSchedulerWrapper) rm.getResourceScheduler())\n+                            .setQueueSet(this.queueAppNumMap.keySet());\n+    ((ResourceSchedulerWrapper) rm.getResourceScheduler())\n+                            .setTrackedAppSet(this.trackedApps);\n+    // print out simulation info\n+    printSimulationInfo();\n+    // blocked until all nodes RUNNING\n+    waitForNodesRunning();\n+    // starting the runner once everything is ready to go,\n+    runner.start();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void start() throws Exception {\n    // start resource manager\n    startRM();\n    // start node managers\n    startNM();\n    // start application masters\n    startAM();\n    // set queue \u0026 tracked apps information\n    ((ResourceSchedulerWrapper) rm.getResourceScheduler())\n                            .setQueueSet(this.queueAppNumMap.keySet());\n    ((ResourceSchedulerWrapper) rm.getResourceScheduler())\n                            .setTrackedAppSet(this.trackedApps);\n    // print out simulation info\n    printSimulationInfo();\n    // blocked until all nodes RUNNING\n    waitForNodesRunning();\n    // starting the runner once everything is ready to go,\n    runner.start();\n  }",
      "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/SLSRunner.java"
    }
  }
}