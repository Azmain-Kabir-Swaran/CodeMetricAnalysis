{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DockerLinuxContainerRuntime.java",
  "functionName": "pullImageFromRemote",
  "functionId": "pullImageFromRemote___containerIdStr-String__imageName-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/runtime/DockerLinuxContainerRuntime.java",
  "functionStartLine": 1187,
  "functionEndLine": 1203,
  "numCommitsSeen": 91,
  "timeTaken": 1981,
  "changeHistory": [
    "2064ca015d1584263aac0cc20c60b925a3aff612",
    "3dc252326693170ac1b31bf2914bae72ca73d31a"
  ],
  "changeHistoryShort": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": "Ybodychange",
    "3dc252326693170ac1b31bf2914bae72ca73d31a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9349.  Changed logging to use slf4j api.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "15/03/19 4:20 PM",
      "commitName": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "12/02/19 1:16 PM",
      "commitNameOld": "3dc252326693170ac1b31bf2914bae72ca73d31a",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 31.09,
      "commitsBetweenForRepo": 294,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,17 @@\n   public void pullImageFromRemote(String containerIdStr, String imageName)\n       throws ContainerExecutionException {\n     long start \u003d System.currentTimeMillis();\n     DockerPullCommand dockerPullCommand \u003d new DockerPullCommand(imageName);\n-    LOG.debug(\"now pulling docker image.\" + \" image name: \" + imageName + \",\"\n-        + \" container: \" + containerIdStr);\n+    LOG.debug(\"now pulling docker image. image name: {}, container: {}\",\n+        imageName, containerIdStr);\n \n     DockerCommandExecutor.executeDockerCommand(dockerPullCommand,\n         containerIdStr, null,\n         privilegedOperationExecutor, false, nmContext);\n \n     long end \u003d System.currentTimeMillis();\n     long pullImageTimeMs \u003d end - start;\n-    LOG.debug(\"pull docker image done with \"\n-        + String.valueOf(pullImageTimeMs) + \"ms spent.\"\n-        + \" image name: \" + imageName + \",\"\n-        + \" container: \" + containerIdStr);\n+\n+    LOG.debug(\"pull docker image done with {}ms specnt. image name: {},\"\n+        + \" container: {}\", pullImageTimeMs, imageName, containerIdStr);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void pullImageFromRemote(String containerIdStr, String imageName)\n      throws ContainerExecutionException {\n    long start \u003d System.currentTimeMillis();\n    DockerPullCommand dockerPullCommand \u003d new DockerPullCommand(imageName);\n    LOG.debug(\"now pulling docker image. image name: {}, container: {}\",\n        imageName, containerIdStr);\n\n    DockerCommandExecutor.executeDockerCommand(dockerPullCommand,\n        containerIdStr, null,\n        privilegedOperationExecutor, false, nmContext);\n\n    long end \u003d System.currentTimeMillis();\n    long pullImageTimeMs \u003d end - start;\n\n    LOG.debug(\"pull docker image done with {}ms specnt. image name: {},\"\n        + \" container: {}\", pullImageTimeMs, imageName, containerIdStr);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/runtime/DockerLinuxContainerRuntime.java",
      "extendedDetails": {}
    },
    "3dc252326693170ac1b31bf2914bae72ca73d31a": {
      "type": "Yintroduced",
      "commitMessage": "YARN-9184. Add a system flag to allow update to latest docker images.\n           Contributed by Zhaohui Xin\n",
      "commitDate": "12/02/19 1:16 PM",
      "commitName": "3dc252326693170ac1b31bf2914bae72ca73d31a",
      "commitAuthor": "Eric Yang",
      "diff": "@@ -0,0 +1,18 @@\n+  public void pullImageFromRemote(String containerIdStr, String imageName)\n+      throws ContainerExecutionException {\n+    long start \u003d System.currentTimeMillis();\n+    DockerPullCommand dockerPullCommand \u003d new DockerPullCommand(imageName);\n+    LOG.debug(\"now pulling docker image.\" + \" image name: \" + imageName + \",\"\n+        + \" container: \" + containerIdStr);\n+\n+    DockerCommandExecutor.executeDockerCommand(dockerPullCommand,\n+        containerIdStr, null,\n+        privilegedOperationExecutor, false, nmContext);\n+\n+    long end \u003d System.currentTimeMillis();\n+    long pullImageTimeMs \u003d end - start;\n+    LOG.debug(\"pull docker image done with \"\n+        + String.valueOf(pullImageTimeMs) + \"ms spent.\"\n+        + \" image name: \" + imageName + \",\"\n+        + \" container: \" + containerIdStr);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void pullImageFromRemote(String containerIdStr, String imageName)\n      throws ContainerExecutionException {\n    long start \u003d System.currentTimeMillis();\n    DockerPullCommand dockerPullCommand \u003d new DockerPullCommand(imageName);\n    LOG.debug(\"now pulling docker image.\" + \" image name: \" + imageName + \",\"\n        + \" container: \" + containerIdStr);\n\n    DockerCommandExecutor.executeDockerCommand(dockerPullCommand,\n        containerIdStr, null,\n        privilegedOperationExecutor, false, nmContext);\n\n    long end \u003d System.currentTimeMillis();\n    long pullImageTimeMs \u003d end - start;\n    LOG.debug(\"pull docker image done with \"\n        + String.valueOf(pullImageTimeMs) + \"ms spent.\"\n        + \" image name: \" + imageName + \",\"\n        + \" container: \" + containerIdStr);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/runtime/DockerLinuxContainerRuntime.java"
    }
  }
}