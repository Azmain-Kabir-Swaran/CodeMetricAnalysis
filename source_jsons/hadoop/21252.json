{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HumanReadableHistoryViewerPrinter.java",
  "functionName": "printJobDetails",
  "functionId": "printJobDetails___ps-PrintStream",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/jobhistory/HumanReadableHistoryViewerPrinter.java",
  "functionStartLine": 111,
  "functionEndLine": 136,
  "numCommitsSeen": 12,
  "timeTaken": 10340,
  "changeHistory": [
    "8eee59ce6b3044cb73bb41fed6b7ece959e7c2f8",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "8eee59ce6b3044cb73bb41fed6b7ece959e7c2f8": "Ymultichange(Ymovefromfile,Ybodychange,Yparameterchange)",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Ymovefromfile",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8eee59ce6b3044cb73bb41fed6b7ece959e7c2f8": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange,Yparameterchange)",
      "commitMessage": "MAPREDUCE-6627. Add machine-readable output to mapred job -history command (rkanter)\n",
      "commitDate": "18/02/16 5:58 PM",
      "commitName": "8eee59ce6b3044cb73bb41fed6b7ece959e7c2f8",
      "commitAuthor": "Robert Kanter",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "MAPREDUCE-6627. Add machine-readable output to mapred job -history command (rkanter)\n",
          "commitDate": "18/02/16 5:58 PM",
          "commitName": "8eee59ce6b3044cb73bb41fed6b7ece959e7c2f8",
          "commitAuthor": "Robert Kanter",
          "commitDateOld": "18/02/16 2:06 PM",
          "commitNameOld": "8ab7658025616d154decd97578de3327ec6f9109",
          "commitAuthorOld": "cnauroth",
          "daysBetweenCommits": 0.16,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,26 @@\n-  private void printJobDetails() {\n-    StringBuffer jobDetails \u003d new StringBuffer();\n-    jobDetails.append(\"\\nHadoop job: \" ).append(job.getJobId());\n+  private void printJobDetails(PrintStream ps) {\n+    StringBuilder jobDetails \u003d new StringBuilder();\n+    jobDetails.append(\"\\nHadoop job: \").append(job.getJobId());\n     jobDetails.append(\"\\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");\n-    jobDetails.append(\"\\nUser: \").append(job.getUsername()); \n-    jobDetails.append(\"\\nJobName: \").append(job.getJobname()); \n-    jobDetails.append(\"\\nJobConf: \").append(job.getJobConfPath()); \n+    jobDetails.append(\"\\nUser: \").append(job.getUsername());\n+    jobDetails.append(\"\\nJobName: \").append(job.getJobname());\n+    jobDetails.append(\"\\nJobConf: \").append(job.getJobConfPath());\n     jobDetails.append(\"\\nSubmitted At: \").append(StringUtils.\n-                        getFormattedTimeWithDiff(dateFormat,\n-                        job.getSubmitTime(), 0)); \n+        getFormattedTimeWithDiff(dateFormat,\n+            job.getSubmitTime(), 0));\n     jobDetails.append(\"\\nLaunched At: \").append(StringUtils.\n-                        getFormattedTimeWithDiff(dateFormat,\n-                        job.getLaunchTime(),\n-                        job.getSubmitTime()));\n+        getFormattedTimeWithDiff(dateFormat,\n+            job.getLaunchTime(),\n+            job.getSubmitTime()));\n     jobDetails.append(\"\\nFinished At: \").append(StringUtils.\n-                        getFormattedTimeWithDiff(dateFormat,\n-                        job.getFinishTime(),\n-                        job.getLaunchTime()));\n-    jobDetails.append(\"\\nStatus: \").append(((job.getJobStatus() \u003d\u003d null) ? \n-                      \"Incomplete\" :job.getJobStatus()));\n-    printCounters(jobDetails, job.getTotalCounters(), job.getMapCounters(),\n+        getFormattedTimeWithDiff(dateFormat,\n+            job.getFinishTime(),\n+            job.getLaunchTime()));\n+    jobDetails.append(\"\\nStatus: \").append(((job.getJobStatus() \u003d\u003d null) ?\n+        \"Incomplete\" :job.getJobStatus()));\n+    printJobCounters(jobDetails, job.getTotalCounters(), job.getMapCounters(),\n         job.getReduceCounters());\n     jobDetails.append(\"\\n\");\n     jobDetails.append(\"\\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");\n-    System.out.println(jobDetails.toString());\n+    ps.println(jobDetails);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void printJobDetails(PrintStream ps) {\n    StringBuilder jobDetails \u003d new StringBuilder();\n    jobDetails.append(\"\\nHadoop job: \").append(job.getJobId());\n    jobDetails.append(\"\\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");\n    jobDetails.append(\"\\nUser: \").append(job.getUsername());\n    jobDetails.append(\"\\nJobName: \").append(job.getJobname());\n    jobDetails.append(\"\\nJobConf: \").append(job.getJobConfPath());\n    jobDetails.append(\"\\nSubmitted At: \").append(StringUtils.\n        getFormattedTimeWithDiff(dateFormat,\n            job.getSubmitTime(), 0));\n    jobDetails.append(\"\\nLaunched At: \").append(StringUtils.\n        getFormattedTimeWithDiff(dateFormat,\n            job.getLaunchTime(),\n            job.getSubmitTime()));\n    jobDetails.append(\"\\nFinished At: \").append(StringUtils.\n        getFormattedTimeWithDiff(dateFormat,\n            job.getFinishTime(),\n            job.getLaunchTime()));\n    jobDetails.append(\"\\nStatus: \").append(((job.getJobStatus() \u003d\u003d null) ?\n        \"Incomplete\" :job.getJobStatus()));\n    printJobCounters(jobDetails, job.getTotalCounters(), job.getMapCounters(),\n        job.getReduceCounters());\n    jobDetails.append(\"\\n\");\n    jobDetails.append(\"\\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");\n    ps.println(jobDetails);\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/jobhistory/HumanReadableHistoryViewerPrinter.java",
          "extendedDetails": {
            "oldPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/jobhistory/HistoryViewer.java",
            "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/jobhistory/HumanReadableHistoryViewerPrinter.java",
            "oldMethodName": "printJobDetails",
            "newMethodName": "printJobDetails"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-6627. Add machine-readable output to mapred job -history command (rkanter)\n",
          "commitDate": "18/02/16 5:58 PM",
          "commitName": "8eee59ce6b3044cb73bb41fed6b7ece959e7c2f8",
          "commitAuthor": "Robert Kanter",
          "commitDateOld": "18/02/16 2:06 PM",
          "commitNameOld": "8ab7658025616d154decd97578de3327ec6f9109",
          "commitAuthorOld": "cnauroth",
          "daysBetweenCommits": 0.16,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,26 @@\n-  private void printJobDetails() {\n-    StringBuffer jobDetails \u003d new StringBuffer();\n-    jobDetails.append(\"\\nHadoop job: \" ).append(job.getJobId());\n+  private void printJobDetails(PrintStream ps) {\n+    StringBuilder jobDetails \u003d new StringBuilder();\n+    jobDetails.append(\"\\nHadoop job: \").append(job.getJobId());\n     jobDetails.append(\"\\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");\n-    jobDetails.append(\"\\nUser: \").append(job.getUsername()); \n-    jobDetails.append(\"\\nJobName: \").append(job.getJobname()); \n-    jobDetails.append(\"\\nJobConf: \").append(job.getJobConfPath()); \n+    jobDetails.append(\"\\nUser: \").append(job.getUsername());\n+    jobDetails.append(\"\\nJobName: \").append(job.getJobname());\n+    jobDetails.append(\"\\nJobConf: \").append(job.getJobConfPath());\n     jobDetails.append(\"\\nSubmitted At: \").append(StringUtils.\n-                        getFormattedTimeWithDiff(dateFormat,\n-                        job.getSubmitTime(), 0)); \n+        getFormattedTimeWithDiff(dateFormat,\n+            job.getSubmitTime(), 0));\n     jobDetails.append(\"\\nLaunched At: \").append(StringUtils.\n-                        getFormattedTimeWithDiff(dateFormat,\n-                        job.getLaunchTime(),\n-                        job.getSubmitTime()));\n+        getFormattedTimeWithDiff(dateFormat,\n+            job.getLaunchTime(),\n+            job.getSubmitTime()));\n     jobDetails.append(\"\\nFinished At: \").append(StringUtils.\n-                        getFormattedTimeWithDiff(dateFormat,\n-                        job.getFinishTime(),\n-                        job.getLaunchTime()));\n-    jobDetails.append(\"\\nStatus: \").append(((job.getJobStatus() \u003d\u003d null) ? \n-                      \"Incomplete\" :job.getJobStatus()));\n-    printCounters(jobDetails, job.getTotalCounters(), job.getMapCounters(),\n+        getFormattedTimeWithDiff(dateFormat,\n+            job.getFinishTime(),\n+            job.getLaunchTime()));\n+    jobDetails.append(\"\\nStatus: \").append(((job.getJobStatus() \u003d\u003d null) ?\n+        \"Incomplete\" :job.getJobStatus()));\n+    printJobCounters(jobDetails, job.getTotalCounters(), job.getMapCounters(),\n         job.getReduceCounters());\n     jobDetails.append(\"\\n\");\n     jobDetails.append(\"\\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");\n-    System.out.println(jobDetails.toString());\n+    ps.println(jobDetails);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void printJobDetails(PrintStream ps) {\n    StringBuilder jobDetails \u003d new StringBuilder();\n    jobDetails.append(\"\\nHadoop job: \").append(job.getJobId());\n    jobDetails.append(\"\\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");\n    jobDetails.append(\"\\nUser: \").append(job.getUsername());\n    jobDetails.append(\"\\nJobName: \").append(job.getJobname());\n    jobDetails.append(\"\\nJobConf: \").append(job.getJobConfPath());\n    jobDetails.append(\"\\nSubmitted At: \").append(StringUtils.\n        getFormattedTimeWithDiff(dateFormat,\n            job.getSubmitTime(), 0));\n    jobDetails.append(\"\\nLaunched At: \").append(StringUtils.\n        getFormattedTimeWithDiff(dateFormat,\n            job.getLaunchTime(),\n            job.getSubmitTime()));\n    jobDetails.append(\"\\nFinished At: \").append(StringUtils.\n        getFormattedTimeWithDiff(dateFormat,\n            job.getFinishTime(),\n            job.getLaunchTime()));\n    jobDetails.append(\"\\nStatus: \").append(((job.getJobStatus() \u003d\u003d null) ?\n        \"Incomplete\" :job.getJobStatus()));\n    printJobCounters(jobDetails, job.getTotalCounters(), job.getMapCounters(),\n        job.getReduceCounters());\n    jobDetails.append(\"\\n\");\n    jobDetails.append(\"\\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");\n    ps.println(jobDetails);\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/jobhistory/HumanReadableHistoryViewerPrinter.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "MAPREDUCE-6627. Add machine-readable output to mapred job -history command (rkanter)\n",
          "commitDate": "18/02/16 5:58 PM",
          "commitName": "8eee59ce6b3044cb73bb41fed6b7ece959e7c2f8",
          "commitAuthor": "Robert Kanter",
          "commitDateOld": "18/02/16 2:06 PM",
          "commitNameOld": "8ab7658025616d154decd97578de3327ec6f9109",
          "commitAuthorOld": "cnauroth",
          "daysBetweenCommits": 0.16,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,26 @@\n-  private void printJobDetails() {\n-    StringBuffer jobDetails \u003d new StringBuffer();\n-    jobDetails.append(\"\\nHadoop job: \" ).append(job.getJobId());\n+  private void printJobDetails(PrintStream ps) {\n+    StringBuilder jobDetails \u003d new StringBuilder();\n+    jobDetails.append(\"\\nHadoop job: \").append(job.getJobId());\n     jobDetails.append(\"\\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");\n-    jobDetails.append(\"\\nUser: \").append(job.getUsername()); \n-    jobDetails.append(\"\\nJobName: \").append(job.getJobname()); \n-    jobDetails.append(\"\\nJobConf: \").append(job.getJobConfPath()); \n+    jobDetails.append(\"\\nUser: \").append(job.getUsername());\n+    jobDetails.append(\"\\nJobName: \").append(job.getJobname());\n+    jobDetails.append(\"\\nJobConf: \").append(job.getJobConfPath());\n     jobDetails.append(\"\\nSubmitted At: \").append(StringUtils.\n-                        getFormattedTimeWithDiff(dateFormat,\n-                        job.getSubmitTime(), 0)); \n+        getFormattedTimeWithDiff(dateFormat,\n+            job.getSubmitTime(), 0));\n     jobDetails.append(\"\\nLaunched At: \").append(StringUtils.\n-                        getFormattedTimeWithDiff(dateFormat,\n-                        job.getLaunchTime(),\n-                        job.getSubmitTime()));\n+        getFormattedTimeWithDiff(dateFormat,\n+            job.getLaunchTime(),\n+            job.getSubmitTime()));\n     jobDetails.append(\"\\nFinished At: \").append(StringUtils.\n-                        getFormattedTimeWithDiff(dateFormat,\n-                        job.getFinishTime(),\n-                        job.getLaunchTime()));\n-    jobDetails.append(\"\\nStatus: \").append(((job.getJobStatus() \u003d\u003d null) ? \n-                      \"Incomplete\" :job.getJobStatus()));\n-    printCounters(jobDetails, job.getTotalCounters(), job.getMapCounters(),\n+        getFormattedTimeWithDiff(dateFormat,\n+            job.getFinishTime(),\n+            job.getLaunchTime()));\n+    jobDetails.append(\"\\nStatus: \").append(((job.getJobStatus() \u003d\u003d null) ?\n+        \"Incomplete\" :job.getJobStatus()));\n+    printJobCounters(jobDetails, job.getTotalCounters(), job.getMapCounters(),\n         job.getReduceCounters());\n     jobDetails.append(\"\\n\");\n     jobDetails.append(\"\\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");\n-    System.out.println(jobDetails.toString());\n+    ps.println(jobDetails);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void printJobDetails(PrintStream ps) {\n    StringBuilder jobDetails \u003d new StringBuilder();\n    jobDetails.append(\"\\nHadoop job: \").append(job.getJobId());\n    jobDetails.append(\"\\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");\n    jobDetails.append(\"\\nUser: \").append(job.getUsername());\n    jobDetails.append(\"\\nJobName: \").append(job.getJobname());\n    jobDetails.append(\"\\nJobConf: \").append(job.getJobConfPath());\n    jobDetails.append(\"\\nSubmitted At: \").append(StringUtils.\n        getFormattedTimeWithDiff(dateFormat,\n            job.getSubmitTime(), 0));\n    jobDetails.append(\"\\nLaunched At: \").append(StringUtils.\n        getFormattedTimeWithDiff(dateFormat,\n            job.getLaunchTime(),\n            job.getSubmitTime()));\n    jobDetails.append(\"\\nFinished At: \").append(StringUtils.\n        getFormattedTimeWithDiff(dateFormat,\n            job.getFinishTime(),\n            job.getLaunchTime()));\n    jobDetails.append(\"\\nStatus: \").append(((job.getJobStatus() \u003d\u003d null) ?\n        \"Incomplete\" :job.getJobStatus()));\n    printJobCounters(jobDetails, job.getTotalCounters(), job.getMapCounters(),\n        job.getReduceCounters());\n    jobDetails.append(\"\\n\");\n    jobDetails.append(\"\\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");\n    ps.println(jobDetails);\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/jobhistory/HumanReadableHistoryViewerPrinter.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[ps-PrintStream]"
          }
        }
      ]
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void printJobDetails() {\n    StringBuffer jobDetails \u003d new StringBuffer();\n    jobDetails.append(\"\\nHadoop job: \" ).append(job.getJobId());\n    jobDetails.append(\"\\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");\n    jobDetails.append(\"\\nUser: \").append(job.getUsername()); \n    jobDetails.append(\"\\nJobName: \").append(job.getJobname()); \n    jobDetails.append(\"\\nJobConf: \").append(job.getJobConfPath()); \n    jobDetails.append(\"\\nSubmitted At: \").append(StringUtils.\n                        getFormattedTimeWithDiff(dateFormat,\n                        job.getSubmitTime(), 0)); \n    jobDetails.append(\"\\nLaunched At: \").append(StringUtils.\n                        getFormattedTimeWithDiff(dateFormat,\n                        job.getLaunchTime(),\n                        job.getSubmitTime()));\n    jobDetails.append(\"\\nFinished At: \").append(StringUtils.\n                        getFormattedTimeWithDiff(dateFormat,\n                        job.getFinishTime(),\n                        job.getLaunchTime()));\n    jobDetails.append(\"\\nStatus: \").append(((job.getJobStatus() \u003d\u003d null) ? \n                      \"Incomplete\" :job.getJobStatus()));\n    printCounters(jobDetails, job.getTotalCounters(), job.getMapCounters(),\n        job.getReduceCounters());\n    jobDetails.append(\"\\n\");\n    jobDetails.append(\"\\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");\n    System.out.println(jobDetails.toString());\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/jobhistory/HistoryViewer.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/jobhistory/HistoryViewer.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/jobhistory/HistoryViewer.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Ymovefromfile",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void printJobDetails() {\n    StringBuffer jobDetails \u003d new StringBuffer();\n    jobDetails.append(\"\\nHadoop job: \" ).append(job.getJobId());\n    jobDetails.append(\"\\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");\n    jobDetails.append(\"\\nUser: \").append(job.getUsername()); \n    jobDetails.append(\"\\nJobName: \").append(job.getJobname()); \n    jobDetails.append(\"\\nJobConf: \").append(job.getJobConfPath()); \n    jobDetails.append(\"\\nSubmitted At: \").append(StringUtils.\n                        getFormattedTimeWithDiff(dateFormat,\n                        job.getSubmitTime(), 0)); \n    jobDetails.append(\"\\nLaunched At: \").append(StringUtils.\n                        getFormattedTimeWithDiff(dateFormat,\n                        job.getLaunchTime(),\n                        job.getSubmitTime()));\n    jobDetails.append(\"\\nFinished At: \").append(StringUtils.\n                        getFormattedTimeWithDiff(dateFormat,\n                        job.getFinishTime(),\n                        job.getLaunchTime()));\n    jobDetails.append(\"\\nStatus: \").append(((job.getJobStatus() \u003d\u003d null) ? \n                      \"Incomplete\" :job.getJobStatus()));\n    printCounters(jobDetails, job.getTotalCounters(), job.getMapCounters(),\n        job.getReduceCounters());\n    jobDetails.append(\"\\n\");\n    jobDetails.append(\"\\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");\n    System.out.println(jobDetails.toString());\n  }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/jobhistory/HistoryViewer.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/java/org/apache/hadoop/mapreduce/jobhistory/HistoryViewer.java",
        "newPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/jobhistory/HistoryViewer.java",
        "oldMethodName": "printJobDetails",
        "newMethodName": "printJobDetails"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,26 @@\n+  private void printJobDetails() {\n+    StringBuffer jobDetails \u003d new StringBuffer();\n+    jobDetails.append(\"\\nHadoop job: \" ).append(job.getJobId());\n+    jobDetails.append(\"\\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");\n+    jobDetails.append(\"\\nUser: \").append(job.getUsername()); \n+    jobDetails.append(\"\\nJobName: \").append(job.getJobname()); \n+    jobDetails.append(\"\\nJobConf: \").append(job.getJobConfPath()); \n+    jobDetails.append(\"\\nSubmitted At: \").append(StringUtils.\n+                        getFormattedTimeWithDiff(dateFormat,\n+                        job.getSubmitTime(), 0)); \n+    jobDetails.append(\"\\nLaunched At: \").append(StringUtils.\n+                        getFormattedTimeWithDiff(dateFormat,\n+                        job.getLaunchTime(),\n+                        job.getSubmitTime()));\n+    jobDetails.append(\"\\nFinished At: \").append(StringUtils.\n+                        getFormattedTimeWithDiff(dateFormat,\n+                        job.getFinishTime(),\n+                        job.getLaunchTime()));\n+    jobDetails.append(\"\\nStatus: \").append(((job.getJobStatus() \u003d\u003d null) ? \n+                      \"Incomplete\" :job.getJobStatus()));\n+    printCounters(jobDetails, job.getTotalCounters(), job.getMapCounters(),\n+        job.getReduceCounters());\n+    jobDetails.append(\"\\n\");\n+    jobDetails.append(\"\\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");\n+    System.out.println(jobDetails.toString());\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void printJobDetails() {\n    StringBuffer jobDetails \u003d new StringBuffer();\n    jobDetails.append(\"\\nHadoop job: \" ).append(job.getJobId());\n    jobDetails.append(\"\\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");\n    jobDetails.append(\"\\nUser: \").append(job.getUsername()); \n    jobDetails.append(\"\\nJobName: \").append(job.getJobname()); \n    jobDetails.append(\"\\nJobConf: \").append(job.getJobConfPath()); \n    jobDetails.append(\"\\nSubmitted At: \").append(StringUtils.\n                        getFormattedTimeWithDiff(dateFormat,\n                        job.getSubmitTime(), 0)); \n    jobDetails.append(\"\\nLaunched At: \").append(StringUtils.\n                        getFormattedTimeWithDiff(dateFormat,\n                        job.getLaunchTime(),\n                        job.getSubmitTime()));\n    jobDetails.append(\"\\nFinished At: \").append(StringUtils.\n                        getFormattedTimeWithDiff(dateFormat,\n                        job.getFinishTime(),\n                        job.getLaunchTime()));\n    jobDetails.append(\"\\nStatus: \").append(((job.getJobStatus() \u003d\u003d null) ? \n                      \"Incomplete\" :job.getJobStatus()));\n    printCounters(jobDetails, job.getTotalCounters(), job.getMapCounters(),\n        job.getReduceCounters());\n    jobDetails.append(\"\\n\");\n    jobDetails.append(\"\\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");\n    System.out.println(jobDetails.toString());\n  }",
      "path": "mapreduce/src/java/org/apache/hadoop/mapreduce/jobhistory/HistoryViewer.java"
    }
  }
}