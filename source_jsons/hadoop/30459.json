{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TimelineWebServices.java",
  "functionName": "getDomains",
  "functionId": "getDomains___req-HttpServletRequest(annotations-@Context)__res-HttpServletResponse(annotations-@Context)__owner-String(annotations-@QueryParam(\"owner\"))",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/webapp/TimelineWebServices.java",
  "functionStartLine": 329,
  "functionEndLine": 351,
  "numCommitsSeen": 19,
  "timeTaken": 1368,
  "changeHistory": [
    "d78b452a4f413c6931a494c33df0666ce9b44973"
  ],
  "changeHistoryShort": {
    "d78b452a4f413c6931a494c33df0666ce9b44973": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d78b452a4f413c6931a494c33df0666ce9b44973": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2102. Added the concept of a Timeline Domain to handle read/write ACLs on Timeline service event data. Contributed by Zhijie Shen.\n",
      "commitDate": "24/09/14 11:27 AM",
      "commitName": "d78b452a4f413c6931a494c33df0666ce9b44973",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,23 @@\n+  public TimelineDomains getDomains(\n+      @Context HttpServletRequest req,\n+      @Context HttpServletResponse res,\n+      @QueryParam(\"owner\") String owner) {\n+    init(res);\n+    owner \u003d parseStr(owner);\n+    UserGroupInformation callerUGI \u003d getUser(req);\n+    if (owner \u003d\u003d null || owner.length() \u003d\u003d 0) {\n+      if (callerUGI \u003d\u003d null) {\n+        throw new BadRequestException(\"Domain owner is not specified.\");\n+      } else {\n+        // By default it\u0027s going to list the caller\u0027s domains\n+        owner \u003d callerUGI.getShortUserName();\n+      }\n+    }\n+    try {\n+      return timelineDataManager.getDomains(owner, callerUGI);\n+    } catch (Exception e) {\n+      LOG.error(\"Error getting domains\", e);\n+      throw new WebApplicationException(e,\n+          Response.Status.INTERNAL_SERVER_ERROR);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public TimelineDomains getDomains(\n      @Context HttpServletRequest req,\n      @Context HttpServletResponse res,\n      @QueryParam(\"owner\") String owner) {\n    init(res);\n    owner \u003d parseStr(owner);\n    UserGroupInformation callerUGI \u003d getUser(req);\n    if (owner \u003d\u003d null || owner.length() \u003d\u003d 0) {\n      if (callerUGI \u003d\u003d null) {\n        throw new BadRequestException(\"Domain owner is not specified.\");\n      } else {\n        // By default it\u0027s going to list the caller\u0027s domains\n        owner \u003d callerUGI.getShortUserName();\n      }\n    }\n    try {\n      return timelineDataManager.getDomains(owner, callerUGI);\n    } catch (Exception e) {\n      LOG.error(\"Error getting domains\", e);\n      throw new WebApplicationException(e,\n          Response.Status.INTERNAL_SERVER_ERROR);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/webapp/TimelineWebServices.java"
    }
  }
}