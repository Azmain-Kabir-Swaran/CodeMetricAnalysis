{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ServiceClient.java",
  "functionName": "compressFiles",
  "functionId": "compressFiles___files-Collection__File____output-File__bundleRoot-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
  "functionStartLine": 1063,
  "functionEndLine": 1074,
  "numCommitsSeen": 53,
  "timeTaken": 1064,
  "changeHistory": [
    "d07e873b7db6cb317eccb4768607c1afb505c99b"
  ],
  "changeHistoryShort": {
    "d07e873b7db6cb317eccb4768607c1afb505c99b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d07e873b7db6cb317eccb4768607c1afb505c99b": {
      "type": "Yintroduced",
      "commitMessage": "YARN-8569. Create an interface to provide cluster information to application. Contributed by Eric Yang\n",
      "commitDate": "26/10/18 5:57 PM",
      "commitName": "d07e873b7db6cb317eccb4768607c1afb505c99b",
      "commitAuthor": "Billie Rinaldi",
      "diff": "@@ -0,0 +1,12 @@\n+  public static File compressFiles(Collection\u003cFile\u003e files, File output,\n+      String bundleRoot) throws IOException {\n+    try (FileOutputStream fos \u003d new FileOutputStream(output);\n+        TarArchiveOutputStream taos \u003d new TarArchiveOutputStream(\n+            new BufferedOutputStream(fos))) {\n+      taos.setLongFileMode(TarArchiveOutputStream.LONGFILE_GNU);\n+      for (File f : files) {\n+        addFilesToCompression(taos, f, \"sysfs\", bundleRoot);\n+      }\n+    }\n+    return output;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static File compressFiles(Collection\u003cFile\u003e files, File output,\n      String bundleRoot) throws IOException {\n    try (FileOutputStream fos \u003d new FileOutputStream(output);\n        TarArchiveOutputStream taos \u003d new TarArchiveOutputStream(\n            new BufferedOutputStream(fos))) {\n      taos.setLongFileMode(TarArchiveOutputStream.LONGFILE_GNU);\n      for (File f : files) {\n        addFilesToCompression(taos, f, \"sysfs\", bundleRoot);\n      }\n    }\n    return output;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java"
    }
  }
}