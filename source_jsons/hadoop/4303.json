{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "WhitelistBasedTrustedChannelResolver.java",
  "functionName": "setConf",
  "functionId": "setConf___conf-Configuration",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/datatransfer/WhitelistBasedTrustedChannelResolver.java",
  "functionStartLine": 80,
  "functionEndLine": 106,
  "numCommitsSeen": 1,
  "timeTaken": 551,
  "changeHistory": [
    "1b5139b29a808f9cdb8edfd956eac9a5bfb83b99"
  ],
  "changeHistoryShort": {
    "1b5139b29a808f9cdb8edfd956eac9a5bfb83b99": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1b5139b29a808f9cdb8edfd956eac9a5bfb83b99": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-6188. An ip whitelist based implementation of TrustedChannelResolver. (Contributed by Benoy Antony)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1618727 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/14 1:50 PM",
      "commitName": "1b5139b29a808f9cdb8edfd956eac9a5bfb83b99",
      "commitAuthor": "Arpit Agarwal",
      "diff": "@@ -0,0 +1,27 @@\n+  public void setConf(Configuration conf) {\n+    super.setConf(conf);\n+    String fixedFile \u003d conf.get(DFS_DATATRANSFER_SERVER_FIXEDWHITELIST_FILE,\n+        FIXEDWHITELIST_DEFAULT_LOCATION);\n+    String variableFile \u003d null;\n+    long expiryTime \u003d 0;\n+\n+    if (conf.getBoolean(DFS_DATATRANSFER_SERVER_VARIABLEWHITELIST_ENABLE, false)) {\n+      variableFile \u003d conf.get(DFS_DATATRANSFER_SERVER_VARIABLEWHITELIST_FILE,\n+          VARIABLEWHITELIST_DEFAULT_LOCATION);\n+      expiryTime \u003d\n+        conf.getLong(DFS_DATATRANSFER_SERVER_VARIABLEWHITELIST_CACHE_SECS,3600) * 1000;\n+    }\n+\n+    whiteListForServer \u003d new CombinedIPWhiteList(fixedFile,variableFile,expiryTime);\n+\n+    fixedFile \u003d conf.get(DFS_DATATRANSFER_CLIENT_FIXEDWHITELIST_FILE, fixedFile);\n+    expiryTime \u003d 0;\n+\n+    if (conf.getBoolean(DFS_DATATRANSFER_CLIENT_VARIABLEWHITELIST_ENABLE, false)) {\n+      variableFile \u003d conf.get(DFS_DATATRANSFER_CLIENT_VARIABLEWHITELIST_FILE,variableFile);\n+      expiryTime \u003d\n+        conf.getLong(DFS_DATATRANSFER_CLIENT_VARIABLEWHITELIST_CACHE_SECS,3600) * 1000;\n+    }\n+\n+    whitelistForClient \u003d new CombinedIPWhiteList(fixedFile,variableFile,expiryTime);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void setConf(Configuration conf) {\n    super.setConf(conf);\n    String fixedFile \u003d conf.get(DFS_DATATRANSFER_SERVER_FIXEDWHITELIST_FILE,\n        FIXEDWHITELIST_DEFAULT_LOCATION);\n    String variableFile \u003d null;\n    long expiryTime \u003d 0;\n\n    if (conf.getBoolean(DFS_DATATRANSFER_SERVER_VARIABLEWHITELIST_ENABLE, false)) {\n      variableFile \u003d conf.get(DFS_DATATRANSFER_SERVER_VARIABLEWHITELIST_FILE,\n          VARIABLEWHITELIST_DEFAULT_LOCATION);\n      expiryTime \u003d\n        conf.getLong(DFS_DATATRANSFER_SERVER_VARIABLEWHITELIST_CACHE_SECS,3600) * 1000;\n    }\n\n    whiteListForServer \u003d new CombinedIPWhiteList(fixedFile,variableFile,expiryTime);\n\n    fixedFile \u003d conf.get(DFS_DATATRANSFER_CLIENT_FIXEDWHITELIST_FILE, fixedFile);\n    expiryTime \u003d 0;\n\n    if (conf.getBoolean(DFS_DATATRANSFER_CLIENT_VARIABLEWHITELIST_ENABLE, false)) {\n      variableFile \u003d conf.get(DFS_DATATRANSFER_CLIENT_VARIABLEWHITELIST_FILE,variableFile);\n      expiryTime \u003d\n        conf.getLong(DFS_DATATRANSFER_CLIENT_VARIABLEWHITELIST_CACHE_SECS,3600) * 1000;\n    }\n\n    whitelistForClient \u003d new CombinedIPWhiteList(fixedFile,variableFile,expiryTime);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocol/datatransfer/WhitelistBasedTrustedChannelResolver.java"
    }
  }
}