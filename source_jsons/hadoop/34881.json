{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FederationInterceptor.java",
  "functionName": "getTimedOutSCs",
  "functionId": "getTimedOutSCs___verbose-boolean",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/amrmproxy/FederationInterceptor.java",
  "functionStartLine": 1600,
  "functionEndLine": 1621,
  "numCommitsSeen": 21,
  "timeTaken": 924,
  "changeHistory": [
    "b5ec85d96615e8214c14b57f8980a1dee6197ffa"
  ],
  "changeHistoryShort": {
    "b5ec85d96615e8214c14b57f8980a1dee6197ffa": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b5ec85d96615e8214c14b57f8980a1dee6197ffa": {
      "type": "Yintroduced",
      "commitMessage": "YARN-8933. [AMRMProxy] Fix potential empty fields in allocation response, move SubClusterTimeout to FederationInterceptor. Contributed by Botong Huang.\n",
      "commitDate": "11/11/18 11:12 AM",
      "commitName": "b5ec85d96615e8214c14b57f8980a1dee6197ffa",
      "commitAuthor": "Botong Huang",
      "diff": "@@ -0,0 +1,22 @@\n+  protected Set\u003cSubClusterId\u003e getTimedOutSCs(boolean verbose) {\n+    Set\u003cSubClusterId\u003e timedOutSCs \u003d new HashSet\u003c\u003e();\n+    for (Map.Entry\u003cSubClusterId, Long\u003e entry : this.lastSCResponseTime\n+        .entrySet()) {\n+      if (entry.getValue() \u003e this.lastAMHeartbeatTime) {\n+        // AM haven\u0027t heartbeat to us (and thus we to all SCs) for a long time,\n+        // should not consider the SC as timed out\n+        continue;\n+      }\n+      long duration \u003d this.clock.getTime() - entry.getValue();\n+      if (duration \u003e this.subClusterTimeOut) {\n+        if (verbose) {\n+          LOG.warn(\n+              \"Subcluster {} doesn\u0027t have a successful heartbeat\"\n+                  + \" for {} seconds for {}\",\n+              entry.getKey(), (double) duration / 1000, this.attemptId);\n+        }\n+        timedOutSCs.add(entry.getKey());\n+      }\n+    }\n+    return timedOutSCs;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected Set\u003cSubClusterId\u003e getTimedOutSCs(boolean verbose) {\n    Set\u003cSubClusterId\u003e timedOutSCs \u003d new HashSet\u003c\u003e();\n    for (Map.Entry\u003cSubClusterId, Long\u003e entry : this.lastSCResponseTime\n        .entrySet()) {\n      if (entry.getValue() \u003e this.lastAMHeartbeatTime) {\n        // AM haven\u0027t heartbeat to us (and thus we to all SCs) for a long time,\n        // should not consider the SC as timed out\n        continue;\n      }\n      long duration \u003d this.clock.getTime() - entry.getValue();\n      if (duration \u003e this.subClusterTimeOut) {\n        if (verbose) {\n          LOG.warn(\n              \"Subcluster {} doesn\u0027t have a successful heartbeat\"\n                  + \" for {} seconds for {}\",\n              entry.getKey(), (double) duration / 1000, this.attemptId);\n        }\n        timedOutSCs.add(entry.getKey());\n      }\n    }\n    return timedOutSCs;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/amrmproxy/FederationInterceptor.java"
    }
  }
}