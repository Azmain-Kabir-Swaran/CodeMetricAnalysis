{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ContainerScheduler.java",
  "functionName": "hasSufficientResources",
  "functionId": "hasSufficientResources___resourcesToFreeUp-ResourceUtilization",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/scheduler/ContainerScheduler.java",
  "functionStartLine": 593,
  "functionEndLine": 598,
  "numCommitsSeen": 22,
  "timeTaken": 2502,
  "changeHistory": [
    "766b78ee074df29d5acd2ba2face5712dd20437f",
    "890e14c02a612c772cecd5dff2411060efd418a3",
    "3219b7b4ac7d12aee343f6ab2980b3357fc618b6"
  ],
  "changeHistoryShort": {
    "766b78ee074df29d5acd2ba2face5712dd20437f": "Ybodychange",
    "890e14c02a612c772cecd5dff2411060efd418a3": "Ybodychange",
    "3219b7b4ac7d12aee343f6ab2980b3357fc618b6": "Yintroduced"
  },
  "changeHistoryDetails": {
    "766b78ee074df29d5acd2ba2face5712dd20437f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8911. ContainerScheduler incorrectly uses percentage number as the cpu resource utlization.\n",
      "commitDate": "24/10/18 7:58 AM",
      "commitName": "766b78ee074df29d5acd2ba2face5712dd20437f",
      "commitAuthor": "Haibo Chen",
      "commitDateOld": "23/07/18 11:07 AM",
      "commitNameOld": "9d3c39e9dd88b8f32223c01328581bb68507d415",
      "commitAuthorOld": "Haibo Chen",
      "daysBetweenCommits": 92.87,
      "commitsBetweenForRepo": 879,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,6 @@\n   private boolean hasSufficientResources(\n       ResourceUtilization resourcesToFreeUp) {\n     return resourcesToFreeUp.getPhysicalMemory() \u003c\u003d 0 \u0026\u0026\n         resourcesToFreeUp.getVirtualMemory() \u003c\u003d 0 \u0026\u0026\n-        // Convert the number of cores to nearest integral number, due to\n-        // imprecision of direct float comparison.\n-        Math.round(resourcesToFreeUp.getCPU()\n-            * getContainersMonitor().getVCoresAllocatedForContainers()) \u003c\u003d 0;\n+        resourcesToFreeUp.getCPU() \u003c\u003d 0;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean hasSufficientResources(\n      ResourceUtilization resourcesToFreeUp) {\n    return resourcesToFreeUp.getPhysicalMemory() \u003c\u003d 0 \u0026\u0026\n        resourcesToFreeUp.getVirtualMemory() \u003c\u003d 0 \u0026\u0026\n        resourcesToFreeUp.getCPU() \u003c\u003d 0;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/scheduler/ContainerScheduler.java",
      "extendedDetails": {}
    },
    "890e14c02a612c772cecd5dff2411060efd418a3": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6870. Fix floating point inaccuracies in resource availability check in AllocationBasedResourceUtilizationTracker. (Brook Zhou via asuresh)\n",
      "commitDate": "28/07/17 4:32 PM",
      "commitName": "890e14c02a612c772cecd5dff2411060efd418a3",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "17/07/17 2:11 PM",
      "commitNameOld": "5b007921cdf01ecc8ed97c164b7d327b8304c529",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 11.1,
      "commitsBetweenForRepo": 60,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,9 @@\n   private boolean hasSufficientResources(\n       ResourceUtilization resourcesToFreeUp) {\n     return resourcesToFreeUp.getPhysicalMemory() \u003c\u003d 0 \u0026\u0026\n         resourcesToFreeUp.getVirtualMemory() \u003c\u003d 0 \u0026\u0026\n-        resourcesToFreeUp.getCPU() \u003c\u003d 0.0f;\n+        // Convert the number of cores to nearest integral number, due to\n+        // imprecision of direct float comparison.\n+        Math.round(resourcesToFreeUp.getCPU()\n+            * getContainersMonitor().getVCoresAllocatedForContainers()) \u003c\u003d 0;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean hasSufficientResources(\n      ResourceUtilization resourcesToFreeUp) {\n    return resourcesToFreeUp.getPhysicalMemory() \u003c\u003d 0 \u0026\u0026\n        resourcesToFreeUp.getVirtualMemory() \u003c\u003d 0 \u0026\u0026\n        // Convert the number of cores to nearest integral number, due to\n        // imprecision of direct float comparison.\n        Math.round(resourcesToFreeUp.getCPU()\n            * getContainersMonitor().getVCoresAllocatedForContainers()) \u003c\u003d 0;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/scheduler/ContainerScheduler.java",
      "extendedDetails": {}
    },
    "3219b7b4ac7d12aee343f6ab2980b3357fc618b6": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4597. Introduce ContainerScheduler and a SCHEDULED state to NodeManager container lifecycle. (asuresh)\n",
      "commitDate": "15/11/16 7:56 AM",
      "commitName": "3219b7b4ac7d12aee343f6ab2980b3357fc618b6",
      "commitAuthor": "Arun Suresh",
      "diff": "@@ -0,0 +1,6 @@\n+  private boolean hasSufficientResources(\n+      ResourceUtilization resourcesToFreeUp) {\n+    return resourcesToFreeUp.getPhysicalMemory() \u003c\u003d 0 \u0026\u0026\n+        resourcesToFreeUp.getVirtualMemory() \u003c\u003d 0 \u0026\u0026\n+        resourcesToFreeUp.getCPU() \u003c\u003d 0.0f;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean hasSufficientResources(\n      ResourceUtilization resourcesToFreeUp) {\n    return resourcesToFreeUp.getPhysicalMemory() \u003c\u003d 0 \u0026\u0026\n        resourcesToFreeUp.getVirtualMemory() \u003c\u003d 0 \u0026\u0026\n        resourcesToFreeUp.getCPU() \u003c\u003d 0.0f;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/scheduler/ContainerScheduler.java"
    }
  }
}