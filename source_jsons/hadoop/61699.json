{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Apps.java",
  "functionName": "shouldCountTowardsNodeBlacklisting",
  "functionId": "shouldCountTowardsNodeBlacklisting___exitStatus-int",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/Apps.java",
  "functionStartLine": 274,
  "functionEndLine": 304,
  "numCommitsSeen": 19,
  "timeTaken": 2676,
  "changeHistory": [
    "1888318c89776f0bf354c1b13e3ee169e14ff638"
  ],
  "changeHistoryShort": {
    "1888318c89776f0bf354c1b13e3ee169e14ff638": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1888318c89776f0bf354c1b13e3ee169e14ff638": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6903. Yarn-native-service framework core rewrite. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "1888318c89776f0bf354c1b13e3ee169e14ff638",
      "commitAuthor": "Billie Rinaldi",
      "diff": "@@ -0,0 +1,31 @@\n+  public static boolean shouldCountTowardsNodeBlacklisting(int exitStatus) {\n+    switch (exitStatus) {\n+    case ContainerExitStatus.PREEMPTED:\n+    case ContainerExitStatus.KILLED_BY_RESOURCEMANAGER:\n+    case ContainerExitStatus.KILLED_BY_APPMASTER:\n+    case ContainerExitStatus.KILLED_AFTER_APP_COMPLETION:\n+    case ContainerExitStatus.ABORTED:\n+      // Neither the app\u0027s fault nor the system\u0027s fault. This happens by design,\n+      // so no need for skipping nodes\n+      return false;\n+    case ContainerExitStatus.DISKS_FAILED:\n+      // This container is marked with this exit-status means that the node is\n+      // already marked as unhealthy given that most of the disks failed. So, no\n+      // need for any explicit skipping of nodes.\n+      return false;\n+    case ContainerExitStatus.KILLED_EXCEEDED_VMEM:\n+    case ContainerExitStatus.KILLED_EXCEEDED_PMEM:\n+      // No point in skipping the node as it\u0027s not the system\u0027s fault\n+      return false;\n+    case ContainerExitStatus.SUCCESS:\n+      return false;\n+    case ContainerExitStatus.INVALID:\n+      // Ideally, this shouldn\u0027t be considered for skipping a node. But in\n+      // reality, it seems like there are cases where we are not setting\n+      // exit-code correctly and so it\u0027s better to be conservative. See\n+      // YARN-4284.\n+      return true;\n+    default:\n+      return true;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static boolean shouldCountTowardsNodeBlacklisting(int exitStatus) {\n    switch (exitStatus) {\n    case ContainerExitStatus.PREEMPTED:\n    case ContainerExitStatus.KILLED_BY_RESOURCEMANAGER:\n    case ContainerExitStatus.KILLED_BY_APPMASTER:\n    case ContainerExitStatus.KILLED_AFTER_APP_COMPLETION:\n    case ContainerExitStatus.ABORTED:\n      // Neither the app\u0027s fault nor the system\u0027s fault. This happens by design,\n      // so no need for skipping nodes\n      return false;\n    case ContainerExitStatus.DISKS_FAILED:\n      // This container is marked with this exit-status means that the node is\n      // already marked as unhealthy given that most of the disks failed. So, no\n      // need for any explicit skipping of nodes.\n      return false;\n    case ContainerExitStatus.KILLED_EXCEEDED_VMEM:\n    case ContainerExitStatus.KILLED_EXCEEDED_PMEM:\n      // No point in skipping the node as it\u0027s not the system\u0027s fault\n      return false;\n    case ContainerExitStatus.SUCCESS:\n      return false;\n    case ContainerExitStatus.INVALID:\n      // Ideally, this shouldn\u0027t be considered for skipping a node. But in\n      // reality, it seems like there are cases where we are not setting\n      // exit-code correctly and so it\u0027s better to be conservative. See\n      // YARN-4284.\n      return true;\n    default:\n      return true;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/Apps.java"
    }
  }
}