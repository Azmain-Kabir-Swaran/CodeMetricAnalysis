{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSQueue.java",
  "functionName": "updatePreemptionVariables",
  "functionId": "updatePreemptionVariables",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSQueue.java",
  "functionStartLine": 378,
  "functionEndLine": 406,
  "numCommitsSeen": 85,
  "timeTaken": 2915,
  "changeHistory": [
    "e224c9623493d6c4c2f3ff731fd3c72c0f448b19",
    "fb238d7e5dcd96466c8938b13ca7f13cedecb08a",
    "1dcaba9a7aa27f7ca4ba693e3abb56ab3c59c8a7",
    "0f34e6f3873aee0f4932740ca790c6dd2a13b5d9"
  ],
  "changeHistoryShort": {
    "e224c9623493d6c4c2f3ff731fd3c72c0f448b19": "Ymultichange(Ymodifierchange,Ybodychange)",
    "fb238d7e5dcd96466c8938b13ca7f13cedecb08a": "Ybodychange",
    "1dcaba9a7aa27f7ca4ba693e3abb56ab3c59c8a7": "Ymultichange(Yrename,Ybodychange)",
    "0f34e6f3873aee0f4932740ca790c6dd2a13b5d9": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e224c9623493d6c4c2f3ff731fd3c72c0f448b19": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-5831. FairScheduler: Propagate allowPreemptionFrom flag all the way down to the app. (Yufei Gu via kasha)\n",
      "commitDate": "17/01/17 5:01 PM",
      "commitName": "e224c9623493d6c4c2f3ff731fd3c72c0f448b19",
      "commitAuthor": "Karthik Kambatla",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-5831. FairScheduler: Propagate allowPreemptionFrom flag all the way down to the app. (Yufei Gu via kasha)\n",
          "commitDate": "17/01/17 5:01 PM",
          "commitName": "e224c9623493d6c4c2f3ff731fd3c72c0f448b19",
          "commitAuthor": "Karthik Kambatla",
          "commitDateOld": "30/11/16 9:50 AM",
          "commitNameOld": "b3befc021b0e2d63d1a3710ea450797d1129f1f5",
          "commitAuthorOld": "Daniel Templeton",
          "daysBetweenCommits": 48.3,
          "commitsBetweenForRepo": 238,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,29 @@\n-  public void updatePreemptionVariables() {\n+  private void updatePreemptionVariables() {\n     // For min share timeout\n     minSharePreemptionTimeout \u003d scheduler.getAllocationConfiguration()\n         .getMinSharePreemptionTimeout(getName());\n     if (minSharePreemptionTimeout \u003d\u003d -1 \u0026\u0026 parent !\u003d null) {\n       minSharePreemptionTimeout \u003d parent.getMinSharePreemptionTimeout();\n     }\n     // For fair share timeout\n     fairSharePreemptionTimeout \u003d scheduler.getAllocationConfiguration()\n         .getFairSharePreemptionTimeout(getName());\n     if (fairSharePreemptionTimeout \u003d\u003d -1 \u0026\u0026 parent !\u003d null) {\n       fairSharePreemptionTimeout \u003d parent.getFairSharePreemptionTimeout();\n     }\n     // For fair share preemption threshold\n     fairSharePreemptionThreshold \u003d scheduler.getAllocationConfiguration()\n         .getFairSharePreemptionThreshold(getName());\n     if (fairSharePreemptionThreshold \u003c 0 \u0026\u0026 parent !\u003d null) {\n       fairSharePreemptionThreshold \u003d parent.getFairSharePreemptionThreshold();\n     }\n-    // For option whether allow preemption from this queue\n-    preemptable \u003d scheduler.getAllocationConfiguration()\n-        .isPreemptable(getName());\n+    // For option whether allow preemption from this queue.\n+    // If the parent is non-preemptable, this queue is non-preemptable as well,\n+    // otherwise get the value from the allocation file.\n+    if (parent !\u003d null \u0026\u0026 !parent.isPreemptable()) {\n+      preemptable \u003d false;\n+    } else {\n+      preemptable \u003d scheduler.getAllocationConfiguration()\n+          .isPreemptable(getName());\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void updatePreemptionVariables() {\n    // For min share timeout\n    minSharePreemptionTimeout \u003d scheduler.getAllocationConfiguration()\n        .getMinSharePreemptionTimeout(getName());\n    if (minSharePreemptionTimeout \u003d\u003d -1 \u0026\u0026 parent !\u003d null) {\n      minSharePreemptionTimeout \u003d parent.getMinSharePreemptionTimeout();\n    }\n    // For fair share timeout\n    fairSharePreemptionTimeout \u003d scheduler.getAllocationConfiguration()\n        .getFairSharePreemptionTimeout(getName());\n    if (fairSharePreemptionTimeout \u003d\u003d -1 \u0026\u0026 parent !\u003d null) {\n      fairSharePreemptionTimeout \u003d parent.getFairSharePreemptionTimeout();\n    }\n    // For fair share preemption threshold\n    fairSharePreemptionThreshold \u003d scheduler.getAllocationConfiguration()\n        .getFairSharePreemptionThreshold(getName());\n    if (fairSharePreemptionThreshold \u003c 0 \u0026\u0026 parent !\u003d null) {\n      fairSharePreemptionThreshold \u003d parent.getFairSharePreemptionThreshold();\n    }\n    // For option whether allow preemption from this queue.\n    // If the parent is non-preemptable, this queue is non-preemptable as well,\n    // otherwise get the value from the allocation file.\n    if (parent !\u003d null \u0026\u0026 !parent.isPreemptable()) {\n      preemptable \u003d false;\n    } else {\n      preemptable \u003d scheduler.getAllocationConfiguration()\n          .isPreemptable(getName());\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSQueue.java",
          "extendedDetails": {
            "oldValue": "[public]",
            "newValue": "[private]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-5831. FairScheduler: Propagate allowPreemptionFrom flag all the way down to the app. (Yufei Gu via kasha)\n",
          "commitDate": "17/01/17 5:01 PM",
          "commitName": "e224c9623493d6c4c2f3ff731fd3c72c0f448b19",
          "commitAuthor": "Karthik Kambatla",
          "commitDateOld": "30/11/16 9:50 AM",
          "commitNameOld": "b3befc021b0e2d63d1a3710ea450797d1129f1f5",
          "commitAuthorOld": "Daniel Templeton",
          "daysBetweenCommits": 48.3,
          "commitsBetweenForRepo": 238,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,29 @@\n-  public void updatePreemptionVariables() {\n+  private void updatePreemptionVariables() {\n     // For min share timeout\n     minSharePreemptionTimeout \u003d scheduler.getAllocationConfiguration()\n         .getMinSharePreemptionTimeout(getName());\n     if (minSharePreemptionTimeout \u003d\u003d -1 \u0026\u0026 parent !\u003d null) {\n       minSharePreemptionTimeout \u003d parent.getMinSharePreemptionTimeout();\n     }\n     // For fair share timeout\n     fairSharePreemptionTimeout \u003d scheduler.getAllocationConfiguration()\n         .getFairSharePreemptionTimeout(getName());\n     if (fairSharePreemptionTimeout \u003d\u003d -1 \u0026\u0026 parent !\u003d null) {\n       fairSharePreemptionTimeout \u003d parent.getFairSharePreemptionTimeout();\n     }\n     // For fair share preemption threshold\n     fairSharePreemptionThreshold \u003d scheduler.getAllocationConfiguration()\n         .getFairSharePreemptionThreshold(getName());\n     if (fairSharePreemptionThreshold \u003c 0 \u0026\u0026 parent !\u003d null) {\n       fairSharePreemptionThreshold \u003d parent.getFairSharePreemptionThreshold();\n     }\n-    // For option whether allow preemption from this queue\n-    preemptable \u003d scheduler.getAllocationConfiguration()\n-        .isPreemptable(getName());\n+    // For option whether allow preemption from this queue.\n+    // If the parent is non-preemptable, this queue is non-preemptable as well,\n+    // otherwise get the value from the allocation file.\n+    if (parent !\u003d null \u0026\u0026 !parent.isPreemptable()) {\n+      preemptable \u003d false;\n+    } else {\n+      preemptable \u003d scheduler.getAllocationConfiguration()\n+          .isPreemptable(getName());\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void updatePreemptionVariables() {\n    // For min share timeout\n    minSharePreemptionTimeout \u003d scheduler.getAllocationConfiguration()\n        .getMinSharePreemptionTimeout(getName());\n    if (minSharePreemptionTimeout \u003d\u003d -1 \u0026\u0026 parent !\u003d null) {\n      minSharePreemptionTimeout \u003d parent.getMinSharePreemptionTimeout();\n    }\n    // For fair share timeout\n    fairSharePreemptionTimeout \u003d scheduler.getAllocationConfiguration()\n        .getFairSharePreemptionTimeout(getName());\n    if (fairSharePreemptionTimeout \u003d\u003d -1 \u0026\u0026 parent !\u003d null) {\n      fairSharePreemptionTimeout \u003d parent.getFairSharePreemptionTimeout();\n    }\n    // For fair share preemption threshold\n    fairSharePreemptionThreshold \u003d scheduler.getAllocationConfiguration()\n        .getFairSharePreemptionThreshold(getName());\n    if (fairSharePreemptionThreshold \u003c 0 \u0026\u0026 parent !\u003d null) {\n      fairSharePreemptionThreshold \u003d parent.getFairSharePreemptionThreshold();\n    }\n    // For option whether allow preemption from this queue.\n    // If the parent is non-preemptable, this queue is non-preemptable as well,\n    // otherwise get the value from the allocation file.\n    if (parent !\u003d null \u0026\u0026 !parent.isPreemptable()) {\n      preemptable \u003d false;\n    } else {\n      preemptable \u003d scheduler.getAllocationConfiguration()\n          .isPreemptable(getName());\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSQueue.java",
          "extendedDetails": {}
        }
      ]
    },
    "fb238d7e5dcd96466c8938b13ca7f13cedecb08a": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4462. FairScheduler: Disallow preemption from a queue. (Tao Jie via kasha)\n",
      "commitDate": "27/01/16 12:29 PM",
      "commitName": "fb238d7e5dcd96466c8938b13ca7f13cedecb08a",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "21/07/15 9:57 AM",
      "commitNameOld": "c39ca541f498712133890961598bbff50d89d68b",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 190.15,
      "commitsBetweenForRepo": 1272,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,23 @@\n   public void updatePreemptionVariables() {\n     // For min share timeout\n     minSharePreemptionTimeout \u003d scheduler.getAllocationConfiguration()\n         .getMinSharePreemptionTimeout(getName());\n     if (minSharePreemptionTimeout \u003d\u003d -1 \u0026\u0026 parent !\u003d null) {\n       minSharePreemptionTimeout \u003d parent.getMinSharePreemptionTimeout();\n     }\n     // For fair share timeout\n     fairSharePreemptionTimeout \u003d scheduler.getAllocationConfiguration()\n         .getFairSharePreemptionTimeout(getName());\n     if (fairSharePreemptionTimeout \u003d\u003d -1 \u0026\u0026 parent !\u003d null) {\n       fairSharePreemptionTimeout \u003d parent.getFairSharePreemptionTimeout();\n     }\n     // For fair share preemption threshold\n     fairSharePreemptionThreshold \u003d scheduler.getAllocationConfiguration()\n         .getFairSharePreemptionThreshold(getName());\n     if (fairSharePreemptionThreshold \u003c 0 \u0026\u0026 parent !\u003d null) {\n       fairSharePreemptionThreshold \u003d parent.getFairSharePreemptionThreshold();\n     }\n+    // For option whether allow preemption from this queue\n+    preemptable \u003d scheduler.getAllocationConfiguration()\n+        .isPreemptable(getName());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void updatePreemptionVariables() {\n    // For min share timeout\n    minSharePreemptionTimeout \u003d scheduler.getAllocationConfiguration()\n        .getMinSharePreemptionTimeout(getName());\n    if (minSharePreemptionTimeout \u003d\u003d -1 \u0026\u0026 parent !\u003d null) {\n      minSharePreemptionTimeout \u003d parent.getMinSharePreemptionTimeout();\n    }\n    // For fair share timeout\n    fairSharePreemptionTimeout \u003d scheduler.getAllocationConfiguration()\n        .getFairSharePreemptionTimeout(getName());\n    if (fairSharePreemptionTimeout \u003d\u003d -1 \u0026\u0026 parent !\u003d null) {\n      fairSharePreemptionTimeout \u003d parent.getFairSharePreemptionTimeout();\n    }\n    // For fair share preemption threshold\n    fairSharePreemptionThreshold \u003d scheduler.getAllocationConfiguration()\n        .getFairSharePreemptionThreshold(getName());\n    if (fairSharePreemptionThreshold \u003c 0 \u0026\u0026 parent !\u003d null) {\n      fairSharePreemptionThreshold \u003d parent.getFairSharePreemptionThreshold();\n    }\n    // For option whether allow preemption from this queue\n    preemptable \u003d scheduler.getAllocationConfiguration()\n        .isPreemptable(getName());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSQueue.java",
      "extendedDetails": {}
    },
    "1dcaba9a7aa27f7ca4ba693e3abb56ab3c59c8a7": {
      "type": "Ymultichange(Yrename,Ybodychange)",
      "commitMessage": "YARN-2394. FairScheduler: Configure fairSharePreemptionThreshold per queue. (Wei Yan via kasha)\n",
      "commitDate": "03/09/14 10:27 AM",
      "commitName": "1dcaba9a7aa27f7ca4ba693e3abb56ab3c59c8a7",
      "commitAuthor": "Karthik Kambatla",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-2394. FairScheduler: Configure fairSharePreemptionThreshold per queue. (Wei Yan via kasha)\n",
          "commitDate": "03/09/14 10:27 AM",
          "commitName": "1dcaba9a7aa27f7ca4ba693e3abb56ab3c59c8a7",
          "commitAuthor": "Karthik Kambatla",
          "commitDateOld": "30/08/14 1:17 AM",
          "commitNameOld": "0f34e6f3873aee0f4932740ca790c6dd2a13b5d9",
          "commitAuthorOld": "Karthik Kambatla",
          "daysBetweenCommits": 4.38,
          "commitsBetweenForRepo": 15,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,20 @@\n-  public void updatePreemptionTimeouts() {\n-    // For min share\n+  public void updatePreemptionVariables() {\n+    // For min share timeout\n     minSharePreemptionTimeout \u003d scheduler.getAllocationConfiguration()\n         .getMinSharePreemptionTimeout(getName());\n     if (minSharePreemptionTimeout \u003d\u003d -1 \u0026\u0026 parent !\u003d null) {\n       minSharePreemptionTimeout \u003d parent.getMinSharePreemptionTimeout();\n     }\n-    // For fair share\n+    // For fair share timeout\n     fairSharePreemptionTimeout \u003d scheduler.getAllocationConfiguration()\n         .getFairSharePreemptionTimeout(getName());\n     if (fairSharePreemptionTimeout \u003d\u003d -1 \u0026\u0026 parent !\u003d null) {\n       fairSharePreemptionTimeout \u003d parent.getFairSharePreemptionTimeout();\n     }\n+    // For fair share preemption threshold\n+    fairSharePreemptionThreshold \u003d scheduler.getAllocationConfiguration()\n+        .getFairSharePreemptionThreshold(getName());\n+    if (fairSharePreemptionThreshold \u003c 0 \u0026\u0026 parent !\u003d null) {\n+      fairSharePreemptionThreshold \u003d parent.getFairSharePreemptionThreshold();\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void updatePreemptionVariables() {\n    // For min share timeout\n    minSharePreemptionTimeout \u003d scheduler.getAllocationConfiguration()\n        .getMinSharePreemptionTimeout(getName());\n    if (minSharePreemptionTimeout \u003d\u003d -1 \u0026\u0026 parent !\u003d null) {\n      minSharePreemptionTimeout \u003d parent.getMinSharePreemptionTimeout();\n    }\n    // For fair share timeout\n    fairSharePreemptionTimeout \u003d scheduler.getAllocationConfiguration()\n        .getFairSharePreemptionTimeout(getName());\n    if (fairSharePreemptionTimeout \u003d\u003d -1 \u0026\u0026 parent !\u003d null) {\n      fairSharePreemptionTimeout \u003d parent.getFairSharePreemptionTimeout();\n    }\n    // For fair share preemption threshold\n    fairSharePreemptionThreshold \u003d scheduler.getAllocationConfiguration()\n        .getFairSharePreemptionThreshold(getName());\n    if (fairSharePreemptionThreshold \u003c 0 \u0026\u0026 parent !\u003d null) {\n      fairSharePreemptionThreshold \u003d parent.getFairSharePreemptionThreshold();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSQueue.java",
          "extendedDetails": {
            "oldValue": "updatePreemptionTimeouts",
            "newValue": "updatePreemptionVariables"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-2394. FairScheduler: Configure fairSharePreemptionThreshold per queue. (Wei Yan via kasha)\n",
          "commitDate": "03/09/14 10:27 AM",
          "commitName": "1dcaba9a7aa27f7ca4ba693e3abb56ab3c59c8a7",
          "commitAuthor": "Karthik Kambatla",
          "commitDateOld": "30/08/14 1:17 AM",
          "commitNameOld": "0f34e6f3873aee0f4932740ca790c6dd2a13b5d9",
          "commitAuthorOld": "Karthik Kambatla",
          "daysBetweenCommits": 4.38,
          "commitsBetweenForRepo": 15,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,20 @@\n-  public void updatePreemptionTimeouts() {\n-    // For min share\n+  public void updatePreemptionVariables() {\n+    // For min share timeout\n     minSharePreemptionTimeout \u003d scheduler.getAllocationConfiguration()\n         .getMinSharePreemptionTimeout(getName());\n     if (minSharePreemptionTimeout \u003d\u003d -1 \u0026\u0026 parent !\u003d null) {\n       minSharePreemptionTimeout \u003d parent.getMinSharePreemptionTimeout();\n     }\n-    // For fair share\n+    // For fair share timeout\n     fairSharePreemptionTimeout \u003d scheduler.getAllocationConfiguration()\n         .getFairSharePreemptionTimeout(getName());\n     if (fairSharePreemptionTimeout \u003d\u003d -1 \u0026\u0026 parent !\u003d null) {\n       fairSharePreemptionTimeout \u003d parent.getFairSharePreemptionTimeout();\n     }\n+    // For fair share preemption threshold\n+    fairSharePreemptionThreshold \u003d scheduler.getAllocationConfiguration()\n+        .getFairSharePreemptionThreshold(getName());\n+    if (fairSharePreemptionThreshold \u003c 0 \u0026\u0026 parent !\u003d null) {\n+      fairSharePreemptionThreshold \u003d parent.getFairSharePreemptionThreshold();\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void updatePreemptionVariables() {\n    // For min share timeout\n    minSharePreemptionTimeout \u003d scheduler.getAllocationConfiguration()\n        .getMinSharePreemptionTimeout(getName());\n    if (minSharePreemptionTimeout \u003d\u003d -1 \u0026\u0026 parent !\u003d null) {\n      minSharePreemptionTimeout \u003d parent.getMinSharePreemptionTimeout();\n    }\n    // For fair share timeout\n    fairSharePreemptionTimeout \u003d scheduler.getAllocationConfiguration()\n        .getFairSharePreemptionTimeout(getName());\n    if (fairSharePreemptionTimeout \u003d\u003d -1 \u0026\u0026 parent !\u003d null) {\n      fairSharePreemptionTimeout \u003d parent.getFairSharePreemptionTimeout();\n    }\n    // For fair share preemption threshold\n    fairSharePreemptionThreshold \u003d scheduler.getAllocationConfiguration()\n        .getFairSharePreemptionThreshold(getName());\n    if (fairSharePreemptionThreshold \u003c 0 \u0026\u0026 parent !\u003d null) {\n      fairSharePreemptionThreshold \u003d parent.getFairSharePreemptionThreshold();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSQueue.java",
          "extendedDetails": {}
        }
      ]
    },
    "0f34e6f3873aee0f4932740ca790c6dd2a13b5d9": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2395. FairScheduler: Preemption timeout should be configurable per queue. (Wei Yan via kasha)\n",
      "commitDate": "30/08/14 1:17 AM",
      "commitName": "0f34e6f3873aee0f4932740ca790c6dd2a13b5d9",
      "commitAuthor": "Karthik Kambatla",
      "diff": "@@ -0,0 +1,14 @@\n+  public void updatePreemptionTimeouts() {\n+    // For min share\n+    minSharePreemptionTimeout \u003d scheduler.getAllocationConfiguration()\n+        .getMinSharePreemptionTimeout(getName());\n+    if (minSharePreemptionTimeout \u003d\u003d -1 \u0026\u0026 parent !\u003d null) {\n+      minSharePreemptionTimeout \u003d parent.getMinSharePreemptionTimeout();\n+    }\n+    // For fair share\n+    fairSharePreemptionTimeout \u003d scheduler.getAllocationConfiguration()\n+        .getFairSharePreemptionTimeout(getName());\n+    if (fairSharePreemptionTimeout \u003d\u003d -1 \u0026\u0026 parent !\u003d null) {\n+      fairSharePreemptionTimeout \u003d parent.getFairSharePreemptionTimeout();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void updatePreemptionTimeouts() {\n    // For min share\n    minSharePreemptionTimeout \u003d scheduler.getAllocationConfiguration()\n        .getMinSharePreemptionTimeout(getName());\n    if (minSharePreemptionTimeout \u003d\u003d -1 \u0026\u0026 parent !\u003d null) {\n      minSharePreemptionTimeout \u003d parent.getMinSharePreemptionTimeout();\n    }\n    // For fair share\n    fairSharePreemptionTimeout \u003d scheduler.getAllocationConfiguration()\n        .getFairSharePreemptionTimeout(getName());\n    if (fairSharePreemptionTimeout \u003d\u003d -1 \u0026\u0026 parent !\u003d null) {\n      fairSharePreemptionTimeout \u003d parent.getFairSharePreemptionTimeout();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSQueue.java"
    }
  }
}