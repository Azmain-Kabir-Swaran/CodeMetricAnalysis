{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ShellBasedUnixGroupsMapping.java",
  "functionName": "parsePartialGroupNames",
  "functionId": "parsePartialGroupNames___groupNames-String__groupIDs-String",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/ShellBasedUnixGroupsMapping.java",
  "functionStartLine": 245,
  "functionEndLine": 272,
  "numCommitsSeen": 10,
  "timeTaken": 853,
  "changeHistory": [
    "0348e769abc507c69d644db7bc56d31d971c51d1"
  ],
  "changeHistoryShort": {
    "0348e769abc507c69d644db7bc56d31d971c51d1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0348e769abc507c69d644db7bc56d31d971c51d1": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-12468. Partial group resolution failure should not result in user lockout. (Wei-Chiu Chuang via Yongjun Zhang)\n",
      "commitDate": "25/11/15 6:37 PM",
      "commitName": "0348e769abc507c69d644db7bc56d31d971c51d1",
      "commitAuthor": "Yongjun Zhang",
      "diff": "@@ -0,0 +1,28 @@\n+  private List\u003cString\u003e parsePartialGroupNames(String groupNames,\n+      String groupIDs) throws PartialGroupNameException {\n+    StringTokenizer nameTokenizer \u003d\n+        new StringTokenizer(groupNames, Shell.TOKEN_SEPARATOR_REGEX);\n+    StringTokenizer idTokenizer \u003d\n+        new StringTokenizer(groupIDs, Shell.TOKEN_SEPARATOR_REGEX);\n+    List\u003cString\u003e groups \u003d new LinkedList\u003cString\u003e();\n+    while (nameTokenizer.hasMoreTokens()) {\n+      // check for unresolvable group names.\n+      if (!idTokenizer.hasMoreTokens()) {\n+        throw new PartialGroupNameException(\"Number of group names and ids do\"\n+        + \" not match. group name \u003d\" + groupNames + \", group id \u003d \" + groupIDs);\n+      }\n+      String groupName \u003d nameTokenizer.nextToken();\n+      String groupID \u003d idTokenizer.nextToken();\n+      if (!StringUtils.isNumeric(groupName) ||\n+          !groupName.equals(groupID)) {\n+        // if the group name is non-numeric, it is resolved.\n+        // if the group name is numeric, but is not the same as group id,\n+        // regard it as a group name.\n+        // if unfortunately, some group names are not resolvable, and\n+        // the group name is the same as the group id, regard it as not\n+        // resolved.\n+        groups.add(groupName);\n+      }\n+    }\n+    return groups;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private List\u003cString\u003e parsePartialGroupNames(String groupNames,\n      String groupIDs) throws PartialGroupNameException {\n    StringTokenizer nameTokenizer \u003d\n        new StringTokenizer(groupNames, Shell.TOKEN_SEPARATOR_REGEX);\n    StringTokenizer idTokenizer \u003d\n        new StringTokenizer(groupIDs, Shell.TOKEN_SEPARATOR_REGEX);\n    List\u003cString\u003e groups \u003d new LinkedList\u003cString\u003e();\n    while (nameTokenizer.hasMoreTokens()) {\n      // check for unresolvable group names.\n      if (!idTokenizer.hasMoreTokens()) {\n        throw new PartialGroupNameException(\"Number of group names and ids do\"\n        + \" not match. group name \u003d\" + groupNames + \", group id \u003d \" + groupIDs);\n      }\n      String groupName \u003d nameTokenizer.nextToken();\n      String groupID \u003d idTokenizer.nextToken();\n      if (!StringUtils.isNumeric(groupName) ||\n          !groupName.equals(groupID)) {\n        // if the group name is non-numeric, it is resolved.\n        // if the group name is numeric, but is not the same as group id,\n        // regard it as a group name.\n        // if unfortunately, some group names are not resolvable, and\n        // the group name is the same as the group id, regard it as not\n        // resolved.\n        groups.add(groupName);\n      }\n    }\n    return groups;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/ShellBasedUnixGroupsMapping.java"
    }
  }
}