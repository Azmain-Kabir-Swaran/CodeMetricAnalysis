{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CommonNodeLabelsManager.java",
  "functionName": "checkAddLabelsToNode",
  "functionId": "checkAddLabelsToNode___addedLabelsToNode-Map__NodeId,Set__String____",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/nodelabels/CommonNodeLabelsManager.java",
  "functionStartLine": 353,
  "functionEndLine": 392,
  "numCommitsSeen": 42,
  "timeTaken": 1374,
  "changeHistory": [
    "c1957fef29b07fea70938e971b30532a1e131fd0",
    "db7f1653198b950e89567c06898d64f6b930a0ee"
  ],
  "changeHistoryShort": {
    "c1957fef29b07fea70938e971b30532a1e131fd0": "Ybodychange",
    "db7f1653198b950e89567c06898d64f6b930a0ee": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c1957fef29b07fea70938e971b30532a1e131fd0": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2694. Ensure only single node label specified in ResourceRequest. Contributed by Wangda Tan\n",
      "commitDate": "06/02/15 11:34 AM",
      "commitName": "c1957fef29b07fea70938e971b30532a1e131fd0",
      "commitAuthor": "Jian He",
      "commitDateOld": "03/02/15 12:52 PM",
      "commitNameOld": "5bd984691b3e3df5d8aac910295138996e7a5839",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 2.95,
      "commitsBetweenForRepo": 50,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,40 @@\n   protected void checkAddLabelsToNode(\n       Map\u003cNodeId, Set\u003cString\u003e\u003e addedLabelsToNode) throws IOException {\n     if (null \u003d\u003d addedLabelsToNode || addedLabelsToNode.isEmpty()) {\n       return;\n     }\n \n     // check all labels being added existed\n     Set\u003cString\u003e knownLabels \u003d labelCollections.keySet();\n     for (Entry\u003cNodeId, Set\u003cString\u003e\u003e entry : addedLabelsToNode.entrySet()) {\n-      if (!knownLabels.containsAll(entry.getValue())) {\n+      NodeId nodeId \u003d entry.getKey();\n+      Set\u003cString\u003e labels \u003d entry.getValue();\n+      \n+      if (!knownLabels.containsAll(labels)) {\n         String msg \u003d\n             \"Not all labels being added contained by known \"\n                 + \"label collections, please check\" + \", added labels\u003d[\"\n-                + StringUtils.join(entry.getValue(), \",\") + \"]\";\n+                + StringUtils.join(labels, \",\") + \"]\";\n         LOG.error(msg);\n         throw new IOException(msg);\n       }\n+      \n+      // In YARN-2694, we temporarily disable user add more than 1 labels on a\n+      // same host\n+      if (!labels.isEmpty()) {\n+        Set\u003cString\u003e newLabels \u003d new HashSet\u003cString\u003e(getLabelsByNode(nodeId));\n+        newLabels.addAll(labels);\n+        // we don\u0027t allow number of labels on a node \u003e 1 after added labels\n+        if (newLabels.size() \u003e 1) {\n+          String msg \u003d\n+              String.format(\n+                      \"%d labels specified on host\u003d%s after add labels to node\"\n+                          + \", please note that we do not support specifying multiple\"\n+                          + \" labels on a single host for now.\",\n+                      newLabels.size(), nodeId.getHost());\n+          LOG.error(msg);\n+          throw new IOException(msg);\n+        }\n+      }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void checkAddLabelsToNode(\n      Map\u003cNodeId, Set\u003cString\u003e\u003e addedLabelsToNode) throws IOException {\n    if (null \u003d\u003d addedLabelsToNode || addedLabelsToNode.isEmpty()) {\n      return;\n    }\n\n    // check all labels being added existed\n    Set\u003cString\u003e knownLabels \u003d labelCollections.keySet();\n    for (Entry\u003cNodeId, Set\u003cString\u003e\u003e entry : addedLabelsToNode.entrySet()) {\n      NodeId nodeId \u003d entry.getKey();\n      Set\u003cString\u003e labels \u003d entry.getValue();\n      \n      if (!knownLabels.containsAll(labels)) {\n        String msg \u003d\n            \"Not all labels being added contained by known \"\n                + \"label collections, please check\" + \", added labels\u003d[\"\n                + StringUtils.join(labels, \",\") + \"]\";\n        LOG.error(msg);\n        throw new IOException(msg);\n      }\n      \n      // In YARN-2694, we temporarily disable user add more than 1 labels on a\n      // same host\n      if (!labels.isEmpty()) {\n        Set\u003cString\u003e newLabels \u003d new HashSet\u003cString\u003e(getLabelsByNode(nodeId));\n        newLabels.addAll(labels);\n        // we don\u0027t allow number of labels on a node \u003e 1 after added labels\n        if (newLabels.size() \u003e 1) {\n          String msg \u003d\n              String.format(\n                      \"%d labels specified on host\u003d%s after add labels to node\"\n                          + \", please note that we do not support specifying multiple\"\n                          + \" labels on a single host for now.\",\n                      newLabels.size(), nodeId.getHost());\n          LOG.error(msg);\n          throw new IOException(msg);\n        }\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/nodelabels/CommonNodeLabelsManager.java",
      "extendedDetails": {}
    },
    "db7f1653198b950e89567c06898d64f6b930a0ee": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2494. Added NodeLabels Manager internal API and implementation. Contributed by Wangda Tan.\n",
      "commitDate": "10/10/14 11:44 AM",
      "commitName": "db7f1653198b950e89567c06898d64f6b930a0ee",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,19 @@\n+  protected void checkAddLabelsToNode(\n+      Map\u003cNodeId, Set\u003cString\u003e\u003e addedLabelsToNode) throws IOException {\n+    if (null \u003d\u003d addedLabelsToNode || addedLabelsToNode.isEmpty()) {\n+      return;\n+    }\n+\n+    // check all labels being added existed\n+    Set\u003cString\u003e knownLabels \u003d labelCollections.keySet();\n+    for (Entry\u003cNodeId, Set\u003cString\u003e\u003e entry : addedLabelsToNode.entrySet()) {\n+      if (!knownLabels.containsAll(entry.getValue())) {\n+        String msg \u003d\n+            \"Not all labels being added contained by known \"\n+                + \"label collections, please check\" + \", added labels\u003d[\"\n+                + StringUtils.join(entry.getValue(), \",\") + \"]\";\n+        LOG.error(msg);\n+        throw new IOException(msg);\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void checkAddLabelsToNode(\n      Map\u003cNodeId, Set\u003cString\u003e\u003e addedLabelsToNode) throws IOException {\n    if (null \u003d\u003d addedLabelsToNode || addedLabelsToNode.isEmpty()) {\n      return;\n    }\n\n    // check all labels being added existed\n    Set\u003cString\u003e knownLabels \u003d labelCollections.keySet();\n    for (Entry\u003cNodeId, Set\u003cString\u003e\u003e entry : addedLabelsToNode.entrySet()) {\n      if (!knownLabels.containsAll(entry.getValue())) {\n        String msg \u003d\n            \"Not all labels being added contained by known \"\n                + \"label collections, please check\" + \", added labels\u003d[\"\n                + StringUtils.join(entry.getValue(), \",\") + \"]\";\n        LOG.error(msg);\n        throw new IOException(msg);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/nodelabels/CommonNodeLabelsManager.java"
    }
  }
}