{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TaskAttemptListenerImpl.java",
  "functionName": "startRpcServer",
  "functionId": "startRpcServer",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapred/TaskAttemptListenerImpl.java",
  "functionStartLine": 155,
  "functionEndLine": 180,
  "numCommitsSeen": 39,
  "timeTaken": 8102,
  "changeHistory": [
    "d401e63b6c3695d1f8f3f4958b8d592b15342b17",
    "e52f67e3897a67a0b6d29e557a31cfa881738821",
    "a690a215dba6180090214675393431a589c37f24",
    "a83fb61ac07c0468cbc7a38526e92683883dd932",
    "48414b08277b86cdbc34ae36d7c4d204fd838294",
    "03d46dc571bc5b0f1b3c0cb5daa52e7ee324dd54",
    "d19cfe01642f9582e1fe5d567beb480399c37a01",
    "fafe8cd28e726566509c679e19d7da622f29f90d",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "d401e63b6c3695d1f8f3f4958b8d592b15342b17": "Ybodychange",
    "e52f67e3897a67a0b6d29e557a31cfa881738821": "Ybodychange",
    "a690a215dba6180090214675393431a589c37f24": "Ybodychange",
    "a83fb61ac07c0468cbc7a38526e92683883dd932": "Ybodychange",
    "48414b08277b86cdbc34ae36d7c4d204fd838294": "Ybodychange",
    "03d46dc571bc5b0f1b3c0cb5daa52e7ee324dd54": "Ybodychange",
    "d19cfe01642f9582e1fe5d567beb480399c37a01": "Ybodychange",
    "fafe8cd28e726566509c679e19d7da622f29f90d": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d401e63b6c3695d1f8f3f4958b8d592b15342b17": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6338. MR AppMaster does not honor ephemeral port range. Contributed by Frank Nguyen.\n",
      "commitDate": "05/02/17 7:28 PM",
      "commitName": "d401e63b6c3695d1f8f3f4958b8d592b15342b17",
      "commitAuthor": "Junping Du",
      "commitDateOld": "16/09/16 9:49 PM",
      "commitNameOld": "7d21c280a82b2f02675bf0048f0e965d99a05ae7",
      "commitAuthorOld": "Naganarasimha",
      "daysBetweenCommits": 141.94,
      "commitsBetweenForRepo": 905,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,26 @@\n   protected void startRpcServer() {\n     Configuration conf \u003d getConfig();\n     try {\n-      server \u003d \n-          new RPC.Builder(conf).setProtocol(TaskUmbilicalProtocol.class)\n-            .setInstance(this).setBindAddress(\"0.0.0.0\")\n-            .setPort(0).setNumHandlers(\n-                conf.getInt(MRJobConfig.MR_AM_TASK_LISTENER_THREAD_COUNT, \n-                    MRJobConfig.DEFAULT_MR_AM_TASK_LISTENER_THREAD_COUNT))\n-                    .setVerbose(false).setSecretManager(jobTokenSecretManager)\n-                    .build();\n-      \n+      server \u003d new RPC.Builder(conf).setProtocol(TaskUmbilicalProtocol.class)\n+          .setInstance(this).setBindAddress(\"0.0.0.0\")\n+          .setPortRangeConfig(MRJobConfig.MR_AM_JOB_CLIENT_PORT_RANGE)\n+          .setNumHandlers(\n+          conf.getInt(MRJobConfig.MR_AM_TASK_LISTENER_THREAD_COUNT, \n+          MRJobConfig.DEFAULT_MR_AM_TASK_LISTENER_THREAD_COUNT))\n+          .setVerbose(false).setSecretManager(jobTokenSecretManager).build();\n+\n       // Enable service authorization?\n       if (conf.getBoolean(\n           CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION, \n           false)) {\n         refreshServiceAcls(conf, new MRAMPolicyProvider());\n       }\n \n       server.start();\n       this.address \u003d NetUtils.createSocketAddrForHost(\n           context.getNMHostname(),\n           server.getListenerAddress().getPort());\n     } catch (IOException e) {\n       throw new YarnRuntimeException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void startRpcServer() {\n    Configuration conf \u003d getConfig();\n    try {\n      server \u003d new RPC.Builder(conf).setProtocol(TaskUmbilicalProtocol.class)\n          .setInstance(this).setBindAddress(\"0.0.0.0\")\n          .setPortRangeConfig(MRJobConfig.MR_AM_JOB_CLIENT_PORT_RANGE)\n          .setNumHandlers(\n          conf.getInt(MRJobConfig.MR_AM_TASK_LISTENER_THREAD_COUNT, \n          MRJobConfig.DEFAULT_MR_AM_TASK_LISTENER_THREAD_COUNT))\n          .setVerbose(false).setSecretManager(jobTokenSecretManager).build();\n\n      // Enable service authorization?\n      if (conf.getBoolean(\n          CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION, \n          false)) {\n        refreshServiceAcls(conf, new MRAMPolicyProvider());\n      }\n\n      server.start();\n      this.address \u003d NetUtils.createSocketAddrForHost(\n          context.getNMHostname(),\n          server.getListenerAddress().getPort());\n    } catch (IOException e) {\n      throw new YarnRuntimeException(e);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapred/TaskAttemptListenerImpl.java",
      "extendedDetails": {}
    },
    "e52f67e3897a67a0b6d29e557a31cfa881738821": {
      "type": "Ybodychange",
      "commitMessage": "    YARN-1994. Expose YARN/MR endpoints on multiple interfaces. Contributed by Craig Welch, Milan Potocnik,and Arpit Agarwal\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1614981 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/07/14 1:06 PM",
      "commitName": "e52f67e3897a67a0b6d29e557a31cfa881738821",
      "commitAuthor": "Xuan Gong",
      "commitDateOld": "26/02/14 5:29 PM",
      "commitNameOld": "cd67d5abcd9ac99f882de52d4db9d4a30845cdcf",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 154.78,
      "commitsBetweenForRepo": 1022,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,27 @@\n   protected void startRpcServer() {\n     Configuration conf \u003d getConfig();\n     try {\n       server \u003d \n           new RPC.Builder(conf).setProtocol(TaskUmbilicalProtocol.class)\n             .setInstance(this).setBindAddress(\"0.0.0.0\")\n             .setPort(0).setNumHandlers(\n                 conf.getInt(MRJobConfig.MR_AM_TASK_LISTENER_THREAD_COUNT, \n                     MRJobConfig.DEFAULT_MR_AM_TASK_LISTENER_THREAD_COUNT))\n                     .setVerbose(false).setSecretManager(jobTokenSecretManager)\n                     .build();\n       \n       // Enable service authorization?\n       if (conf.getBoolean(\n           CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION, \n           false)) {\n         refreshServiceAcls(conf, new MRAMPolicyProvider());\n       }\n \n       server.start();\n-      this.address \u003d NetUtils.getConnectAddress(server);\n+      this.address \u003d NetUtils.createSocketAddrForHost(\n+          context.getNMHostname(),\n+          server.getListenerAddress().getPort());\n     } catch (IOException e) {\n       throw new YarnRuntimeException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void startRpcServer() {\n    Configuration conf \u003d getConfig();\n    try {\n      server \u003d \n          new RPC.Builder(conf).setProtocol(TaskUmbilicalProtocol.class)\n            .setInstance(this).setBindAddress(\"0.0.0.0\")\n            .setPort(0).setNumHandlers(\n                conf.getInt(MRJobConfig.MR_AM_TASK_LISTENER_THREAD_COUNT, \n                    MRJobConfig.DEFAULT_MR_AM_TASK_LISTENER_THREAD_COUNT))\n                    .setVerbose(false).setSecretManager(jobTokenSecretManager)\n                    .build();\n      \n      // Enable service authorization?\n      if (conf.getBoolean(\n          CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION, \n          false)) {\n        refreshServiceAcls(conf, new MRAMPolicyProvider());\n      }\n\n      server.start();\n      this.address \u003d NetUtils.createSocketAddrForHost(\n          context.getNMHostname(),\n          server.getListenerAddress().getPort());\n    } catch (IOException e) {\n      throw new YarnRuntimeException(e);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapred/TaskAttemptListenerImpl.java",
      "extendedDetails": {}
    },
    "a690a215dba6180090214675393431a589c37f24": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-9756. Remove the deprecated getServer(..) methods from RPC.  Contributed by Junping Du\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1507259 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "26/07/13 3:59 AM",
      "commitName": "a690a215dba6180090214675393431a589c37f24",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "16/06/13 11:39 PM",
      "commitNameOld": "b9efe6bd4a1277b4067ecde715a7713a85968886",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 39.18,
      "commitsBetweenForRepo": 222,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,25 @@\n   protected void startRpcServer() {\n     Configuration conf \u003d getConfig();\n     try {\n-      server \u003d\n-          RPC.getServer(TaskUmbilicalProtocol.class, this, \"0.0.0.0\", 0, \n-              conf.getInt(MRJobConfig.MR_AM_TASK_LISTENER_THREAD_COUNT, \n-                  MRJobConfig.DEFAULT_MR_AM_TASK_LISTENER_THREAD_COUNT),\n-              false, conf, jobTokenSecretManager);\n+      server \u003d \n+          new RPC.Builder(conf).setProtocol(TaskUmbilicalProtocol.class)\n+            .setInstance(this).setBindAddress(\"0.0.0.0\")\n+            .setPort(0).setNumHandlers(\n+                conf.getInt(MRJobConfig.MR_AM_TASK_LISTENER_THREAD_COUNT, \n+                    MRJobConfig.DEFAULT_MR_AM_TASK_LISTENER_THREAD_COUNT))\n+                    .setVerbose(false).setSecretManager(jobTokenSecretManager)\n+                    .build();\n       \n       // Enable service authorization?\n       if (conf.getBoolean(\n           CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION, \n           false)) {\n         refreshServiceAcls(conf, new MRAMPolicyProvider());\n       }\n \n       server.start();\n       this.address \u003d NetUtils.getConnectAddress(server);\n     } catch (IOException e) {\n       throw new YarnRuntimeException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void startRpcServer() {\n    Configuration conf \u003d getConfig();\n    try {\n      server \u003d \n          new RPC.Builder(conf).setProtocol(TaskUmbilicalProtocol.class)\n            .setInstance(this).setBindAddress(\"0.0.0.0\")\n            .setPort(0).setNumHandlers(\n                conf.getInt(MRJobConfig.MR_AM_TASK_LISTENER_THREAD_COUNT, \n                    MRJobConfig.DEFAULT_MR_AM_TASK_LISTENER_THREAD_COUNT))\n                    .setVerbose(false).setSecretManager(jobTokenSecretManager)\n                    .build();\n      \n      // Enable service authorization?\n      if (conf.getBoolean(\n          CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION, \n          false)) {\n        refreshServiceAcls(conf, new MRAMPolicyProvider());\n      }\n\n      server.start();\n      this.address \u003d NetUtils.getConnectAddress(server);\n    } catch (IOException e) {\n      throw new YarnRuntimeException(e);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapred/TaskAttemptListenerImpl.java",
      "extendedDetails": {}
    },
    "a83fb61ac07c0468cbc7a38526e92683883dd932": {
      "type": "Ybodychange",
      "commitMessage": "YARN-635. Renamed YarnRemoteException to YarnException. Contributed by Siddharth Seth.\nMAPREDUCE-5301. Updated MR code to work with YARN-635 changes of renaming YarnRemoteException to YarnException. Contributed by Siddharth Seth\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1489283 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/06/13 9:05 PM",
      "commitName": "a83fb61ac07c0468cbc7a38526e92683883dd932",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "22/01/13 11:07 AM",
      "commitNameOld": "74ffc7a74dc6cdd5a615cd2267400873f3c65ceb",
      "commitAuthorOld": "Siddharth Seth",
      "daysBetweenCommits": 132.37,
      "commitsBetweenForRepo": 764,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n   protected void startRpcServer() {\n     Configuration conf \u003d getConfig();\n     try {\n       server \u003d\n           RPC.getServer(TaskUmbilicalProtocol.class, this, \"0.0.0.0\", 0, \n               conf.getInt(MRJobConfig.MR_AM_TASK_LISTENER_THREAD_COUNT, \n                   MRJobConfig.DEFAULT_MR_AM_TASK_LISTENER_THREAD_COUNT),\n               false, conf, jobTokenSecretManager);\n       \n       // Enable service authorization?\n       if (conf.getBoolean(\n           CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION, \n           false)) {\n         refreshServiceAcls(conf, new MRAMPolicyProvider());\n       }\n \n       server.start();\n       this.address \u003d NetUtils.getConnectAddress(server);\n     } catch (IOException e) {\n-      throw new YarnException(e);\n+      throw new YarnRuntimeException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void startRpcServer() {\n    Configuration conf \u003d getConfig();\n    try {\n      server \u003d\n          RPC.getServer(TaskUmbilicalProtocol.class, this, \"0.0.0.0\", 0, \n              conf.getInt(MRJobConfig.MR_AM_TASK_LISTENER_THREAD_COUNT, \n                  MRJobConfig.DEFAULT_MR_AM_TASK_LISTENER_THREAD_COUNT),\n              false, conf, jobTokenSecretManager);\n      \n      // Enable service authorization?\n      if (conf.getBoolean(\n          CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION, \n          false)) {\n        refreshServiceAcls(conf, new MRAMPolicyProvider());\n      }\n\n      server.start();\n      this.address \u003d NetUtils.getConnectAddress(server);\n    } catch (IOException e) {\n      throw new YarnRuntimeException(e);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapred/TaskAttemptListenerImpl.java",
      "extendedDetails": {}
    },
    "48414b08277b86cdbc34ae36d7c4d204fd838294": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-4163. consistently set the bind address (Daryn Sharp via bobby)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1333579 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/05/12 11:35 AM",
      "commitName": "48414b08277b86cdbc34ae36d7c4d204fd838294",
      "commitAuthor": "Robert Joseph Evans",
      "commitDateOld": "02/04/12 1:20 PM",
      "commitNameOld": "bb74427da27ab90ade868c4fd89ed8ac3310aea2",
      "commitAuthorOld": "Thomas Graves",
      "daysBetweenCommits": 30.93,
      "commitsBetweenForRepo": 243,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,22 @@\n   protected void startRpcServer() {\n     Configuration conf \u003d getConfig();\n     try {\n       server \u003d\n           RPC.getServer(TaskUmbilicalProtocol.class, this, \"0.0.0.0\", 0, \n               conf.getInt(MRJobConfig.MR_AM_TASK_LISTENER_THREAD_COUNT, \n                   MRJobConfig.DEFAULT_MR_AM_TASK_LISTENER_THREAD_COUNT),\n               false, conf, jobTokenSecretManager);\n       \n       // Enable service authorization?\n       if (conf.getBoolean(\n           CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION, \n           false)) {\n         refreshServiceAcls(conf, new MRAMPolicyProvider());\n       }\n \n       server.start();\n-      InetSocketAddress listenerAddress \u003d server.getListenerAddress();\n-      listenerAddress.getAddress();\n-      this.address \u003d NetUtils.createSocketAddr(InetAddress.getLocalHost()\n-        .getCanonicalHostName() + \":\" + listenerAddress.getPort());\n+      this.address \u003d NetUtils.getConnectAddress(server);\n     } catch (IOException e) {\n       throw new YarnException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void startRpcServer() {\n    Configuration conf \u003d getConfig();\n    try {\n      server \u003d\n          RPC.getServer(TaskUmbilicalProtocol.class, this, \"0.0.0.0\", 0, \n              conf.getInt(MRJobConfig.MR_AM_TASK_LISTENER_THREAD_COUNT, \n                  MRJobConfig.DEFAULT_MR_AM_TASK_LISTENER_THREAD_COUNT),\n              false, conf, jobTokenSecretManager);\n      \n      // Enable service authorization?\n      if (conf.getBoolean(\n          CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION, \n          false)) {\n        refreshServiceAcls(conf, new MRAMPolicyProvider());\n      }\n\n      server.start();\n      this.address \u003d NetUtils.getConnectAddress(server);\n    } catch (IOException e) {\n      throw new YarnException(e);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapred/TaskAttemptListenerImpl.java",
      "extendedDetails": {}
    },
    "03d46dc571bc5b0f1b3c0cb5daa52e7ee324dd54": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3569. TaskAttemptListener holds a global lock for all task-updates. (Contributed by Vinod Kumar Vavilapalli)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1227485 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/01/12 9:19 PM",
      "commitName": "03d46dc571bc5b0f1b3c0cb5daa52e7ee324dd54",
      "commitAuthor": "Siddharth Seth",
      "commitDateOld": "30/10/11 4:29 AM",
      "commitNameOld": "1c8d64f38a86b92f3c5a56105cd0cd51d8b8529b",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 66.74,
      "commitsBetweenForRepo": 347,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,25 @@\n   protected void startRpcServer() {\n     Configuration conf \u003d getConfig();\n     try {\n       server \u003d\n           RPC.getServer(TaskUmbilicalProtocol.class, this, \"0.0.0.0\", 0, \n               conf.getInt(MRJobConfig.MR_AM_TASK_LISTENER_THREAD_COUNT, \n                   MRJobConfig.DEFAULT_MR_AM_TASK_LISTENER_THREAD_COUNT),\n               false, conf, jobTokenSecretManager);\n       \n       // Enable service authorization?\n       if (conf.getBoolean(\n           CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION, \n           false)) {\n         refreshServiceAcls(conf, new MRAMPolicyProvider());\n       }\n \n       server.start();\n       InetSocketAddress listenerAddress \u003d server.getListenerAddress();\n-      this.address \u003d\n-          NetUtils.createSocketAddr(listenerAddress.getAddress()\n-              .getLocalHost().getCanonicalHostName()\n-              + \":\" + listenerAddress.getPort());\n+      listenerAddress.getAddress();\n+      this.address \u003d NetUtils.createSocketAddr(InetAddress.getLocalHost()\n+        .getCanonicalHostName() + \":\" + listenerAddress.getPort());\n     } catch (IOException e) {\n       throw new YarnException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void startRpcServer() {\n    Configuration conf \u003d getConfig();\n    try {\n      server \u003d\n          RPC.getServer(TaskUmbilicalProtocol.class, this, \"0.0.0.0\", 0, \n              conf.getInt(MRJobConfig.MR_AM_TASK_LISTENER_THREAD_COUNT, \n                  MRJobConfig.DEFAULT_MR_AM_TASK_LISTENER_THREAD_COUNT),\n              false, conf, jobTokenSecretManager);\n      \n      // Enable service authorization?\n      if (conf.getBoolean(\n          CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION, \n          false)) {\n        refreshServiceAcls(conf, new MRAMPolicyProvider());\n      }\n\n      server.start();\n      InetSocketAddress listenerAddress \u003d server.getListenerAddress();\n      listenerAddress.getAddress();\n      this.address \u003d NetUtils.createSocketAddr(InetAddress.getLocalHost()\n        .getCanonicalHostName() + \":\" + listenerAddress.getPort());\n    } catch (IOException e) {\n      throw new YarnException(e);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapred/TaskAttemptListenerImpl.java",
      "extendedDetails": {}
    },
    "d19cfe01642f9582e1fe5d567beb480399c37a01": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2746. Yarn servers can\u0027t communicate with each other with hadoop.security.authorization set to true (acmurthy via mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1188522 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/10/11 11:07 PM",
      "commitName": "d19cfe01642f9582e1fe5d567beb480399c37a01",
      "commitAuthor": "Mahadev Konar",
      "commitDateOld": "17/10/11 8:17 AM",
      "commitNameOld": "a26b1672a85e97bea973cfcc7eab22b4cca01448",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 7.62,
      "commitsBetweenForRepo": 64,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,26 @@\n   protected void startRpcServer() {\n     Configuration conf \u003d getConfig();\n     try {\n       server \u003d\n           RPC.getServer(TaskUmbilicalProtocol.class, this, \"0.0.0.0\", 0, \n               conf.getInt(MRJobConfig.MR_AM_TASK_LISTENER_THREAD_COUNT, \n                   MRJobConfig.DEFAULT_MR_AM_TASK_LISTENER_THREAD_COUNT),\n               false, conf, jobTokenSecretManager);\n+      \n+      // Enable service authorization?\n+      if (conf.getBoolean(\n+          CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION, \n+          false)) {\n+        refreshServiceAcls(conf, new MRAMPolicyProvider());\n+      }\n+\n       server.start();\n       InetSocketAddress listenerAddress \u003d server.getListenerAddress();\n       this.address \u003d\n           NetUtils.createSocketAddr(listenerAddress.getAddress()\n               .getLocalHost().getCanonicalHostName()\n               + \":\" + listenerAddress.getPort());\n     } catch (IOException e) {\n       throw new YarnException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void startRpcServer() {\n    Configuration conf \u003d getConfig();\n    try {\n      server \u003d\n          RPC.getServer(TaskUmbilicalProtocol.class, this, \"0.0.0.0\", 0, \n              conf.getInt(MRJobConfig.MR_AM_TASK_LISTENER_THREAD_COUNT, \n                  MRJobConfig.DEFAULT_MR_AM_TASK_LISTENER_THREAD_COUNT),\n              false, conf, jobTokenSecretManager);\n      \n      // Enable service authorization?\n      if (conf.getBoolean(\n          CommonConfigurationKeysPublic.HADOOP_SECURITY_AUTHORIZATION, \n          false)) {\n        refreshServiceAcls(conf, new MRAMPolicyProvider());\n      }\n\n      server.start();\n      InetSocketAddress listenerAddress \u003d server.getListenerAddress();\n      this.address \u003d\n          NetUtils.createSocketAddr(listenerAddress.getAddress()\n              .getLocalHost().getCanonicalHostName()\n              + \":\" + listenerAddress.getPort());\n    } catch (IOException e) {\n      throw new YarnException(e);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapred/TaskAttemptListenerImpl.java",
      "extendedDetails": {}
    },
    "fafe8cd28e726566509c679e19d7da622f29f90d": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2864. Normalize configuration variable names for YARN. Contributed by Robert Evans.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1166955 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/09/11 6:44 PM",
      "commitName": "fafe8cd28e726566509c679e19d7da622f29f90d",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:14 PM",
      "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 15.06,
      "commitsBetweenForRepo": 86,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   protected void startRpcServer() {\n     Configuration conf \u003d getConfig();\n     try {\n       server \u003d\n           RPC.getServer(TaskUmbilicalProtocol.class, this, \"0.0.0.0\", 0, \n-              conf.getInt(AMConstants.AM_TASK_LISTENER_THREADS, \n-                  AMConstants.DEFAULT_AM_TASK_LISTENER_THREADS),\n+              conf.getInt(MRJobConfig.MR_AM_TASK_LISTENER_THREAD_COUNT, \n+                  MRJobConfig.DEFAULT_MR_AM_TASK_LISTENER_THREAD_COUNT),\n               false, conf, jobTokenSecretManager);\n       server.start();\n       InetSocketAddress listenerAddress \u003d server.getListenerAddress();\n       this.address \u003d\n           NetUtils.createSocketAddr(listenerAddress.getAddress()\n               .getLocalHost().getCanonicalHostName()\n               + \":\" + listenerAddress.getPort());\n     } catch (IOException e) {\n       throw new YarnException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void startRpcServer() {\n    Configuration conf \u003d getConfig();\n    try {\n      server \u003d\n          RPC.getServer(TaskUmbilicalProtocol.class, this, \"0.0.0.0\", 0, \n              conf.getInt(MRJobConfig.MR_AM_TASK_LISTENER_THREAD_COUNT, \n                  MRJobConfig.DEFAULT_MR_AM_TASK_LISTENER_THREAD_COUNT),\n              false, conf, jobTokenSecretManager);\n      server.start();\n      InetSocketAddress listenerAddress \u003d server.getListenerAddress();\n      this.address \u003d\n          NetUtils.createSocketAddr(listenerAddress.getAddress()\n              .getLocalHost().getCanonicalHostName()\n              + \":\" + listenerAddress.getPort());\n    } catch (IOException e) {\n      throw new YarnException(e);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapred/TaskAttemptListenerImpl.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected void startRpcServer() {\n    Configuration conf \u003d getConfig();\n    try {\n      server \u003d\n          RPC.getServer(TaskUmbilicalProtocol.class, this, \"0.0.0.0\", 0, \n              conf.getInt(AMConstants.AM_TASK_LISTENER_THREADS, \n                  AMConstants.DEFAULT_AM_TASK_LISTENER_THREADS),\n              false, conf, jobTokenSecretManager);\n      server.start();\n      InetSocketAddress listenerAddress \u003d server.getListenerAddress();\n      this.address \u003d\n          NetUtils.createSocketAddr(listenerAddress.getAddress()\n              .getLocalHost().getCanonicalHostName()\n              + \":\" + listenerAddress.getPort());\n    } catch (IOException e) {\n      throw new YarnException(e);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapred/TaskAttemptListenerImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapred/TaskAttemptListenerImpl.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapred/TaskAttemptListenerImpl.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,18 @@\n+  protected void startRpcServer() {\n+    Configuration conf \u003d getConfig();\n+    try {\n+      server \u003d\n+          RPC.getServer(TaskUmbilicalProtocol.class, this, \"0.0.0.0\", 0, \n+              conf.getInt(AMConstants.AM_TASK_LISTENER_THREADS, \n+                  AMConstants.DEFAULT_AM_TASK_LISTENER_THREADS),\n+              false, conf, jobTokenSecretManager);\n+      server.start();\n+      InetSocketAddress listenerAddress \u003d server.getListenerAddress();\n+      this.address \u003d\n+          NetUtils.createSocketAddr(listenerAddress.getAddress()\n+              .getLocalHost().getCanonicalHostName()\n+              + \":\" + listenerAddress.getPort());\n+    } catch (IOException e) {\n+      throw new YarnException(e);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void startRpcServer() {\n    Configuration conf \u003d getConfig();\n    try {\n      server \u003d\n          RPC.getServer(TaskUmbilicalProtocol.class, this, \"0.0.0.0\", 0, \n              conf.getInt(AMConstants.AM_TASK_LISTENER_THREADS, \n                  AMConstants.DEFAULT_AM_TASK_LISTENER_THREADS),\n              false, conf, jobTokenSecretManager);\n      server.start();\n      InetSocketAddress listenerAddress \u003d server.getListenerAddress();\n      this.address \u003d\n          NetUtils.createSocketAddr(listenerAddress.getAddress()\n              .getLocalHost().getCanonicalHostName()\n              + \":\" + listenerAddress.getPort());\n    } catch (IOException e) {\n      throw new YarnException(e);\n    }\n  }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapred/TaskAttemptListenerImpl.java"
    }
  }
}