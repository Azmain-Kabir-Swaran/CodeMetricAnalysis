{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DecayRpcScheduler.java",
  "functionName": "addTopNCallerSummary",
  "functionId": "addTopNCallerSummary___rb-MetricsRecordBuilder",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/DecayRpcScheduler.java",
  "functionStartLine": 933,
  "functionEndLine": 950,
  "numCommitsSeen": 19,
  "timeTaken": 1574,
  "changeHistory": [
    "4ca8859583839761663fc1fc1de1b3ce2e3fc5b5",
    "94784848456a92a6502f3a3c0074e44fba4b19c9",
    "5bd7b592e5fbe4d448fd127c15d29f3121b8a833"
  ],
  "changeHistoryShort": {
    "4ca8859583839761663fc1fc1de1b3ce2e3fc5b5": "Ybodychange",
    "94784848456a92a6502f3a3c0074e44fba4b19c9": "Ybodychange",
    "5bd7b592e5fbe4d448fd127c15d29f3121b8a833": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4ca8859583839761663fc1fc1de1b3ce2e3fc5b5": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13197. Add non-decayed call metrics for DecayRpcScheduler. Contributed by Xiaoyu Yao.\n",
      "commitDate": "27/05/16 6:07 PM",
      "commitName": "4ca8859583839761663fc1fc1de1b3ce2e3fc5b5",
      "commitAuthor": "Xiaoyu Yao",
      "commitDateOld": "17/05/16 2:58 PM",
      "commitNameOld": "94784848456a92a6502f3a3c0074e44fba4b19c9",
      "commitAuthorOld": "Xiaoyu Yao",
      "daysBetweenCommits": 10.13,
      "commitsBetweenForRepo": 84,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,18 @@\n   private void addTopNCallerSummary(MetricsRecordBuilder rb) {\n-    final int topCallerCount \u003d 10;\n-    TopN topNCallers \u003d getTopCallers(topCallerCount);\n+    TopN topNCallers \u003d getTopCallers(topUsersCount);\n     Map\u003cObject, Integer\u003e decisions \u003d scheduleCacheRef.get();\n     final int actualCallerCount \u003d topNCallers.size();\n     for (int i \u003d 0; i \u003c actualCallerCount; i++) {\n       NameValuePair entry \u003d  topNCallers.poll();\n-      String topCaller \u003d \"Top.\" + (actualCallerCount - i) + \".\" +\n-          \"Caller(\" + entry.getName() + \")\";\n+      String topCaller \u003d \"Caller(\" + entry.getName() + \")\";\n       String topCallerVolume \u003d topCaller + \".Volume\";\n       String topCallerPriority \u003d topCaller + \".Priority\";\n       rb.addCounter(Interns.info(topCallerVolume, topCallerVolume),\n           entry.getValue());\n       Integer priority \u003d decisions.get(entry.getName());\n       if (priority !\u003d null) {\n         rb.addCounter(Interns.info(topCallerPriority, topCallerPriority),\n             priority);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void addTopNCallerSummary(MetricsRecordBuilder rb) {\n    TopN topNCallers \u003d getTopCallers(topUsersCount);\n    Map\u003cObject, Integer\u003e decisions \u003d scheduleCacheRef.get();\n    final int actualCallerCount \u003d topNCallers.size();\n    for (int i \u003d 0; i \u003c actualCallerCount; i++) {\n      NameValuePair entry \u003d  topNCallers.poll();\n      String topCaller \u003d \"Caller(\" + entry.getName() + \")\";\n      String topCallerVolume \u003d topCaller + \".Volume\";\n      String topCallerPriority \u003d topCaller + \".Priority\";\n      rb.addCounter(Interns.info(topCallerVolume, topCallerVolume),\n          entry.getValue());\n      Integer priority \u003d decisions.get(entry.getName());\n      if (priority !\u003d null) {\n        rb.addCounter(Interns.info(topCallerPriority, topCallerPriority),\n            priority);\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/DecayRpcScheduler.java",
      "extendedDetails": {}
    },
    "94784848456a92a6502f3a3c0074e44fba4b19c9": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13159. Fix potential NPE in Metrics2 source for DecayRpcScheduler. Contributed by Xiaoyu Yao.\n",
      "commitDate": "17/05/16 2:58 PM",
      "commitName": "94784848456a92a6502f3a3c0074e44fba4b19c9",
      "commitAuthor": "Xiaoyu Yao",
      "commitDateOld": "20/04/16 11:10 PM",
      "commitNameOld": "5bd7b592e5fbe4d448fd127c15d29f3121b8a833",
      "commitAuthorOld": "Xiaoyu Yao",
      "daysBetweenCommits": 26.66,
      "commitsBetweenForRepo": 178,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,20 @@\n   private void addTopNCallerSummary(MetricsRecordBuilder rb) {\n     final int topCallerCount \u003d 10;\n     TopN topNCallers \u003d getTopCallers(topCallerCount);\n     Map\u003cObject, Integer\u003e decisions \u003d scheduleCacheRef.get();\n-    for (int i\u003d0; i \u003c topNCallers.size(); i++) {\n+    final int actualCallerCount \u003d topNCallers.size();\n+    for (int i \u003d 0; i \u003c actualCallerCount; i++) {\n       NameValuePair entry \u003d  topNCallers.poll();\n-      String topCaller \u003d \"Top.\" + (topCallerCount - i) + \".\" +\n+      String topCaller \u003d \"Top.\" + (actualCallerCount - i) + \".\" +\n           \"Caller(\" + entry.getName() + \")\";\n       String topCallerVolume \u003d topCaller + \".Volume\";\n       String topCallerPriority \u003d topCaller + \".Priority\";\n       rb.addCounter(Interns.info(topCallerVolume, topCallerVolume),\n           entry.getValue());\n       Integer priority \u003d decisions.get(entry.getName());\n       if (priority !\u003d null) {\n         rb.addCounter(Interns.info(topCallerPriority, topCallerPriority),\n             priority);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void addTopNCallerSummary(MetricsRecordBuilder rb) {\n    final int topCallerCount \u003d 10;\n    TopN topNCallers \u003d getTopCallers(topCallerCount);\n    Map\u003cObject, Integer\u003e decisions \u003d scheduleCacheRef.get();\n    final int actualCallerCount \u003d topNCallers.size();\n    for (int i \u003d 0; i \u003c actualCallerCount; i++) {\n      NameValuePair entry \u003d  topNCallers.poll();\n      String topCaller \u003d \"Top.\" + (actualCallerCount - i) + \".\" +\n          \"Caller(\" + entry.getName() + \")\";\n      String topCallerVolume \u003d topCaller + \".Volume\";\n      String topCallerPriority \u003d topCaller + \".Priority\";\n      rb.addCounter(Interns.info(topCallerVolume, topCallerVolume),\n          entry.getValue());\n      Integer priority \u003d decisions.get(entry.getName());\n      if (priority !\u003d null) {\n        rb.addCounter(Interns.info(topCallerPriority, topCallerPriority),\n            priority);\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/DecayRpcScheduler.java",
      "extendedDetails": {}
    },
    "5bd7b592e5fbe4d448fd127c15d29f3121b8a833": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-12985. Support MetricsSource interface for DecayRpcScheduler Metrics. Contributed by Xiaoyu Yao.\n",
      "commitDate": "20/04/16 11:10 PM",
      "commitName": "5bd7b592e5fbe4d448fd127c15d29f3121b8a833",
      "commitAuthor": "Xiaoyu Yao",
      "diff": "@@ -0,0 +1,19 @@\n+  private void addTopNCallerSummary(MetricsRecordBuilder rb) {\n+    final int topCallerCount \u003d 10;\n+    TopN topNCallers \u003d getTopCallers(topCallerCount);\n+    Map\u003cObject, Integer\u003e decisions \u003d scheduleCacheRef.get();\n+    for (int i\u003d0; i \u003c topNCallers.size(); i++) {\n+      NameValuePair entry \u003d  topNCallers.poll();\n+      String topCaller \u003d \"Top.\" + (topCallerCount - i) + \".\" +\n+          \"Caller(\" + entry.getName() + \")\";\n+      String topCallerVolume \u003d topCaller + \".Volume\";\n+      String topCallerPriority \u003d topCaller + \".Priority\";\n+      rb.addCounter(Interns.info(topCallerVolume, topCallerVolume),\n+          entry.getValue());\n+      Integer priority \u003d decisions.get(entry.getName());\n+      if (priority !\u003d null) {\n+        rb.addCounter(Interns.info(topCallerPriority, topCallerPriority),\n+            priority);\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void addTopNCallerSummary(MetricsRecordBuilder rb) {\n    final int topCallerCount \u003d 10;\n    TopN topNCallers \u003d getTopCallers(topCallerCount);\n    Map\u003cObject, Integer\u003e decisions \u003d scheduleCacheRef.get();\n    for (int i\u003d0; i \u003c topNCallers.size(); i++) {\n      NameValuePair entry \u003d  topNCallers.poll();\n      String topCaller \u003d \"Top.\" + (topCallerCount - i) + \".\" +\n          \"Caller(\" + entry.getName() + \")\";\n      String topCallerVolume \u003d topCaller + \".Volume\";\n      String topCallerPriority \u003d topCaller + \".Priority\";\n      rb.addCounter(Interns.info(topCallerVolume, topCallerVolume),\n          entry.getValue());\n      Integer priority \u003d decisions.get(entry.getName());\n      if (priority !\u003d null) {\n        rb.addCounter(Interns.info(topCallerPriority, topCallerPriority),\n            priority);\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/DecayRpcScheduler.java"
    }
  }
}