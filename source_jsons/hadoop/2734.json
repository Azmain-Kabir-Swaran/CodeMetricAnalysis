{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ObserverReadProxyProvider.java",
  "functionName": "getHAServiceState",
  "functionId": "getHAServiceState___proxyInfo-NNProxyInfo__T__",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/ObserverReadProxyProvider.java",
  "functionStartLine": 299,
  "functionEndLine": 320,
  "numCommitsSeen": 24,
  "timeTaken": 924,
  "changeHistory": [
    "2adcc3c932fd4f39a42724390ba81b2d431d7782",
    "5847e0014343f60f853cb796781ca1fa03a72efd",
    "174b7d3126e215c519b1c4a74892c7020712f9df"
  ],
  "changeHistoryShort": {
    "2adcc3c932fd4f39a42724390ba81b2d431d7782": "Ybodychange",
    "5847e0014343f60f853cb796781ca1fa03a72efd": "Ybodychange",
    "174b7d3126e215c519b1c4a74892c7020712f9df": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2adcc3c932fd4f39a42724390ba81b2d431d7782": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14785. [SBN read] Change client logging to be less aggressive. Contributed by Chen Liang.\n",
      "commitDate": "26/09/19 3:48 PM",
      "commitName": "2adcc3c932fd4f39a42724390ba81b2d431d7782",
      "commitAuthor": "Chen Liang",
      "commitDateOld": "13/05/19 8:39 AM",
      "commitNameOld": "5847e0014343f60f853cb796781ca1fa03a72efd",
      "commitAuthorOld": "Erik Krogen",
      "daysBetweenCommits": 136.3,
      "commitsBetweenForRepo": 1145,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,22 @@\n   private HAServiceState getHAServiceState(NNProxyInfo\u003cT\u003e proxyInfo) {\n     IOException ioe;\n     try {\n       return getProxyAsClientProtocol(proxyInfo.proxy).getHAServiceState();\n     } catch (RemoteException re) {\n       // Though a Standby will allow a getHAServiceState call, it won\u0027t allow\n       // delegation token lookup, so if DT is used it throws StandbyException\n       if (re.unwrapRemoteException() instanceof StandbyException) {\n         LOG.debug(\"NameNode {} threw StandbyException when fetching HAState\",\n             proxyInfo.getAddress());\n         return HAServiceState.STANDBY;\n       }\n       ioe \u003d re;\n     } catch (IOException e) {\n       ioe \u003d e;\n     }\n-    LOG.warn(\"Failed to connect to {} while fetching HAServiceState\",\n-        proxyInfo.getAddress(), ioe);\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"Failed to connect to {} while fetching HAServiceState\",\n+          proxyInfo.getAddress(), ioe);\n+    }\n     return null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private HAServiceState getHAServiceState(NNProxyInfo\u003cT\u003e proxyInfo) {\n    IOException ioe;\n    try {\n      return getProxyAsClientProtocol(proxyInfo.proxy).getHAServiceState();\n    } catch (RemoteException re) {\n      // Though a Standby will allow a getHAServiceState call, it won\u0027t allow\n      // delegation token lookup, so if DT is used it throws StandbyException\n      if (re.unwrapRemoteException() instanceof StandbyException) {\n        LOG.debug(\"NameNode {} threw StandbyException when fetching HAState\",\n            proxyInfo.getAddress());\n        return HAServiceState.STANDBY;\n      }\n      ioe \u003d re;\n    } catch (IOException e) {\n      ioe \u003d e;\n    }\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Failed to connect to {} while fetching HAServiceState\",\n          proxyInfo.getAddress(), ioe);\n    }\n    return null;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/ObserverReadProxyProvider.java",
      "extendedDetails": {}
    },
    "5847e0014343f60f853cb796781ca1fa03a72efd": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14245. [SBN read] Enable ObserverReadProxyProvider to work with non-ClientProtocol proxy types. Contributed by Erik Krogen.\n",
      "commitDate": "13/05/19 8:39 AM",
      "commitName": "5847e0014343f60f853cb796781ca1fa03a72efd",
      "commitAuthor": "Erik Krogen",
      "commitDateOld": "22/04/19 1:29 PM",
      "commitNameOld": "174b7d3126e215c519b1c4a74892c7020712f9df",
      "commitAuthorOld": "Erik Krogen",
      "daysBetweenCommits": 20.8,
      "commitsBetweenForRepo": 98,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   private HAServiceState getHAServiceState(NNProxyInfo\u003cT\u003e proxyInfo) {\n     IOException ioe;\n     try {\n-      return proxyInfo.proxy.getHAServiceState();\n+      return getProxyAsClientProtocol(proxyInfo.proxy).getHAServiceState();\n     } catch (RemoteException re) {\n       // Though a Standby will allow a getHAServiceState call, it won\u0027t allow\n       // delegation token lookup, so if DT is used it throws StandbyException\n       if (re.unwrapRemoteException() instanceof StandbyException) {\n         LOG.debug(\"NameNode {} threw StandbyException when fetching HAState\",\n             proxyInfo.getAddress());\n         return HAServiceState.STANDBY;\n       }\n       ioe \u003d re;\n     } catch (IOException e) {\n       ioe \u003d e;\n     }\n-    LOG.info(\"Failed to connect to {}. Assuming Standby state\",\n+    LOG.warn(\"Failed to connect to {} while fetching HAServiceState\",\n         proxyInfo.getAddress(), ioe);\n-    return HAServiceState.STANDBY;\n+    return null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private HAServiceState getHAServiceState(NNProxyInfo\u003cT\u003e proxyInfo) {\n    IOException ioe;\n    try {\n      return getProxyAsClientProtocol(proxyInfo.proxy).getHAServiceState();\n    } catch (RemoteException re) {\n      // Though a Standby will allow a getHAServiceState call, it won\u0027t allow\n      // delegation token lookup, so if DT is used it throws StandbyException\n      if (re.unwrapRemoteException() instanceof StandbyException) {\n        LOG.debug(\"NameNode {} threw StandbyException when fetching HAState\",\n            proxyInfo.getAddress());\n        return HAServiceState.STANDBY;\n      }\n      ioe \u003d re;\n    } catch (IOException e) {\n      ioe \u003d e;\n    }\n    LOG.warn(\"Failed to connect to {} while fetching HAServiceState\",\n        proxyInfo.getAddress(), ioe);\n    return null;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/ObserverReadProxyProvider.java",
      "extendedDetails": {}
    },
    "174b7d3126e215c519b1c4a74892c7020712f9df": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-14435. [SBN Read] Enable ObserverReadProxyProvider to gracefully handle StandbyException when fetching HAServiceState. Contributed by Erik Krogen.\n",
      "commitDate": "22/04/19 1:29 PM",
      "commitName": "174b7d3126e215c519b1c4a74892c7020712f9df",
      "commitAuthor": "Erik Krogen",
      "diff": "@@ -0,0 +1,20 @@\n+  private HAServiceState getHAServiceState(NNProxyInfo\u003cT\u003e proxyInfo) {\n+    IOException ioe;\n+    try {\n+      return proxyInfo.proxy.getHAServiceState();\n+    } catch (RemoteException re) {\n+      // Though a Standby will allow a getHAServiceState call, it won\u0027t allow\n+      // delegation token lookup, so if DT is used it throws StandbyException\n+      if (re.unwrapRemoteException() instanceof StandbyException) {\n+        LOG.debug(\"NameNode {} threw StandbyException when fetching HAState\",\n+            proxyInfo.getAddress());\n+        return HAServiceState.STANDBY;\n+      }\n+      ioe \u003d re;\n+    } catch (IOException e) {\n+      ioe \u003d e;\n+    }\n+    LOG.info(\"Failed to connect to {}. Assuming Standby state\",\n+        proxyInfo.getAddress(), ioe);\n+    return HAServiceState.STANDBY;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private HAServiceState getHAServiceState(NNProxyInfo\u003cT\u003e proxyInfo) {\n    IOException ioe;\n    try {\n      return proxyInfo.proxy.getHAServiceState();\n    } catch (RemoteException re) {\n      // Though a Standby will allow a getHAServiceState call, it won\u0027t allow\n      // delegation token lookup, so if DT is used it throws StandbyException\n      if (re.unwrapRemoteException() instanceof StandbyException) {\n        LOG.debug(\"NameNode {} threw StandbyException when fetching HAState\",\n            proxyInfo.getAddress());\n        return HAServiceState.STANDBY;\n      }\n      ioe \u003d re;\n    } catch (IOException e) {\n      ioe \u003d e;\n    }\n    LOG.info(\"Failed to connect to {}. Assuming Standby state\",\n        proxyInfo.getAddress(), ioe);\n    return HAServiceState.STANDBY;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/ObserverReadProxyProvider.java"
    }
  }
}