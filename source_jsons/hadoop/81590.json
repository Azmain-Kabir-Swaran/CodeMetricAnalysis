{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "InstrumentedReadLock.java",
  "functionName": "unlock",
  "functionId": "unlock",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/InstrumentedReadLock.java",
  "functionStartLine": 71,
  "functionEndLine": 80,
  "numCommitsSeen": 3,
  "timeTaken": 1311,
  "changeHistory": [
    "0cfff16ac040bd5fb6783333d0d027369c68dead",
    "ae8bccd5090d8b42dae9a8e0c13a9766a7c42ecb"
  ],
  "changeHistoryShort": {
    "0cfff16ac040bd5fb6783333d0d027369c68dead": "Ybodychange",
    "ae8bccd5090d8b42dae9a8e0c13a9766a7c42ecb": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0cfff16ac040bd5fb6783333d0d027369c68dead": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16833. InstrumentedLock should log lock queue time. Contributed by Stephen O\u0027Donnell.\n\nChange-Id: Idddff05051b6f642b88e51694b40c5bb1bef0026\n",
      "commitDate": "18/02/20 9:50 AM",
      "commitName": "0cfff16ac040bd5fb6783333d0d027369c68dead",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "20/06/17 7:19 PM",
      "commitNameOld": "1a598479a9faec787706bcf924dfbd88a80e1b82",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 972.65,
      "commitsBetweenForRepo": 7410,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,10 @@\n   public void unlock() {\n     boolean needReport \u003d readWriteLock.getReadHoldCount() \u003d\u003d 1;\n     long localLockReleaseTime \u003d getTimer().monotonicNow();\n     long localLockAcquireTime \u003d readLockHeldTimeStamp.get();\n     getLock().unlock();\n     if (needReport) {\n       readLockHeldTimeStamp.remove();\n-      check(localLockAcquireTime, localLockReleaseTime);\n+      check(localLockAcquireTime, localLockReleaseTime, true);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void unlock() {\n    boolean needReport \u003d readWriteLock.getReadHoldCount() \u003d\u003d 1;\n    long localLockReleaseTime \u003d getTimer().monotonicNow();\n    long localLockAcquireTime \u003d readLockHeldTimeStamp.get();\n    getLock().unlock();\n    if (needReport) {\n      readLockHeldTimeStamp.remove();\n      check(localLockAcquireTime, localLockReleaseTime, true);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/InstrumentedReadLock.java",
      "extendedDetails": {}
    },
    "ae8bccd5090d8b42dae9a8e0c13a9766a7c42ecb": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-13702. Add instrumented ReadWriteLock. Contributed by Jingcheng Du\n",
      "commitDate": "21/10/16 12:59 PM",
      "commitName": "ae8bccd5090d8b42dae9a8e0c13a9766a7c42ecb",
      "commitAuthor": "Chris Douglas",
      "diff": "@@ -0,0 +1,10 @@\n+  public void unlock() {\n+    boolean needReport \u003d readWriteLock.getReadHoldCount() \u003d\u003d 1;\n+    long localLockReleaseTime \u003d getTimer().monotonicNow();\n+    long localLockAcquireTime \u003d readLockHeldTimeStamp.get();\n+    getLock().unlock();\n+    if (needReport) {\n+      readLockHeldTimeStamp.remove();\n+      check(localLockAcquireTime, localLockReleaseTime);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void unlock() {\n    boolean needReport \u003d readWriteLock.getReadHoldCount() \u003d\u003d 1;\n    long localLockReleaseTime \u003d getTimer().monotonicNow();\n    long localLockAcquireTime \u003d readLockHeldTimeStamp.get();\n    getLock().unlock();\n    if (needReport) {\n      readLockHeldTimeStamp.remove();\n      check(localLockAcquireTime, localLockReleaseTime);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/InstrumentedReadLock.java"
    }
  }
}