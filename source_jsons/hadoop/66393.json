{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SLSCapacityScheduler.java",
  "functionName": "setConf",
  "functionId": "setConf___conf-Configuration",
  "sourceFilePath": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/SLSCapacityScheduler.java",
  "functionStartLine": 87,
  "functionEndLine": 100,
  "numCommitsSeen": 21,
  "timeTaken": 1464,
  "changeHistory": [
    "de69d6e81128470dd5d2fd865d4b3a79188f740b",
    "6a5516c2381f107d96b8326939514de3c6e53d3d",
    "e07f3c87cd3542760efcf713f909375b69eec00f"
  ],
  "changeHistoryShort": {
    "de69d6e81128470dd5d2fd865d4b3a79188f740b": "Ybodychange",
    "6a5516c2381f107d96b8326939514de3c6e53d3d": "Ybodychange",
    "e07f3c87cd3542760efcf713f909375b69eec00f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "de69d6e81128470dd5d2fd865d4b3a79188f740b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6363. Extending SLS: Synthetic Load Generator. (Carlo Curino via wangda)\n",
      "commitDate": "20/04/17 9:54 PM",
      "commitName": "de69d6e81128470dd5d2fd865d4b3a79188f740b",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "29/03/17 4:18 PM",
      "commitNameOld": "6a5516c2381f107d96b8326939514de3c6e53d3d",
      "commitAuthorOld": "Robert Kanter",
      "daysBetweenCommits": 22.23,
      "commitsBetweenForRepo": 128,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,14 @@\n   public void setConf(Configuration conf) {\n     this.conf \u003d conf;\n     super.setConf(conf);\n     metricsON \u003d conf.getBoolean(SLSConfiguration.METRICS_SWITCH, true);\n     if (metricsON) {\n       try {\n         schedulerMetrics \u003d SchedulerMetrics.getInstance(conf,\n             CapacityScheduler.class);\n         schedulerMetrics.init(this, conf);\n       } catch (Exception e) {\n         e.printStackTrace();\n       }\n-\n-      ShutdownHookManager.get().addShutdownHook(new Runnable() {\n-        @Override public void run() {\n-          try {\n-            schedulerMetrics.tearDown();\n-          } catch (Exception e) {\n-            e.printStackTrace();\n-          }\n-        }\n-      }, SLSUtils.SHUTDOWN_HOOK_PRIORITY);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setConf(Configuration conf) {\n    this.conf \u003d conf;\n    super.setConf(conf);\n    metricsON \u003d conf.getBoolean(SLSConfiguration.METRICS_SWITCH, true);\n    if (metricsON) {\n      try {\n        schedulerMetrics \u003d SchedulerMetrics.getInstance(conf,\n            CapacityScheduler.class);\n        schedulerMetrics.init(this, conf);\n      } catch (Exception e) {\n        e.printStackTrace();\n      }\n    }\n  }",
      "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/SLSCapacityScheduler.java",
      "extendedDetails": {}
    },
    "6a5516c2381f107d96b8326939514de3c6e53d3d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5654. Not be able to run SLS with FairScheduler (yufeigu via rkanter)\n",
      "commitDate": "29/03/17 4:18 PM",
      "commitName": "6a5516c2381f107d96b8326939514de3c6e53d3d",
      "commitAuthor": "Robert Kanter",
      "commitDateOld": "21/03/17 3:21 PM",
      "commitNameOld": "cc938e99ec0904824c8072184eff75619fcaf040",
      "commitAuthorOld": "Robert Kanter",
      "daysBetweenCommits": 8.04,
      "commitsBetweenForRepo": 51,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,24 @@\n   public void setConf(Configuration conf) {\n     this.conf \u003d conf;\n     super.setConf(conf);\n-    // start metrics\n     metricsON \u003d conf.getBoolean(SLSConfiguration.METRICS_SWITCH, true);\n     if (metricsON) {\n       try {\n-        initMetrics();\n+        schedulerMetrics \u003d SchedulerMetrics.getInstance(conf,\n+            CapacityScheduler.class);\n+        schedulerMetrics.init(this, conf);\n       } catch (Exception e) {\n         e.printStackTrace();\n       }\n-    }\n \n-    ShutdownHookManager.get().addShutdownHook(new Runnable() {\n-      @Override\n-      public void run() {\n-        try {\n-          if (metricsLogBW !\u003d null)  {\n-            metricsLogBW.write(\"]\");\n-            metricsLogBW.close();\n+      ShutdownHookManager.get().addShutdownHook(new Runnable() {\n+        @Override public void run() {\n+          try {\n+            schedulerMetrics.tearDown();\n+          } catch (Exception e) {\n+            e.printStackTrace();\n           }\n-          if (web !\u003d null) {\n-            web.stop();\n-          }\n-          tearDown();\n-        } catch (Exception e) {\n-          e.printStackTrace();\n         }\n-      }\n-    }, SHUTDOWN_HOOK_PRIORITY);\n+      }, SLSUtils.SHUTDOWN_HOOK_PRIORITY);\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setConf(Configuration conf) {\n    this.conf \u003d conf;\n    super.setConf(conf);\n    metricsON \u003d conf.getBoolean(SLSConfiguration.METRICS_SWITCH, true);\n    if (metricsON) {\n      try {\n        schedulerMetrics \u003d SchedulerMetrics.getInstance(conf,\n            CapacityScheduler.class);\n        schedulerMetrics.init(this, conf);\n      } catch (Exception e) {\n        e.printStackTrace();\n      }\n\n      ShutdownHookManager.get().addShutdownHook(new Runnable() {\n        @Override public void run() {\n          try {\n            schedulerMetrics.tearDown();\n          } catch (Exception e) {\n            e.printStackTrace();\n          }\n        }\n      }, SLSUtils.SHUTDOWN_HOOK_PRIORITY);\n    }\n  }",
      "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/SLSCapacityScheduler.java",
      "extendedDetails": {}
    },
    "e07f3c87cd3542760efcf713f909375b69eec00f": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1471. Preserve scheduler typeinfo in simulator to work with resource monitors.\nContributed by Carlo Curino.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1552173 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/12/13 4:07 PM",
      "commitName": "e07f3c87cd3542760efcf713f909375b69eec00f",
      "commitAuthor": "Christopher Douglas",
      "diff": "@@ -0,0 +1,31 @@\n+  public void setConf(Configuration conf) {\n+    this.conf \u003d conf;\n+    super.setConf(conf);\n+    // start metrics\n+    metricsON \u003d conf.getBoolean(SLSConfiguration.METRICS_SWITCH, true);\n+    if (metricsON) {\n+      try {\n+        initMetrics();\n+      } catch (Exception e) {\n+        e.printStackTrace();\n+      }\n+    }\n+\n+    ShutdownHookManager.get().addShutdownHook(new Runnable() {\n+      @Override\n+      public void run() {\n+        try {\n+          if (metricsLogBW !\u003d null)  {\n+            metricsLogBW.write(\"]\");\n+            metricsLogBW.close();\n+          }\n+          if (web !\u003d null) {\n+            web.stop();\n+          }\n+          tearDown();\n+        } catch (Exception e) {\n+          e.printStackTrace();\n+        }\n+      }\n+    }, SHUTDOWN_HOOK_PRIORITY);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void setConf(Configuration conf) {\n    this.conf \u003d conf;\n    super.setConf(conf);\n    // start metrics\n    metricsON \u003d conf.getBoolean(SLSConfiguration.METRICS_SWITCH, true);\n    if (metricsON) {\n      try {\n        initMetrics();\n      } catch (Exception e) {\n        e.printStackTrace();\n      }\n    }\n\n    ShutdownHookManager.get().addShutdownHook(new Runnable() {\n      @Override\n      public void run() {\n        try {\n          if (metricsLogBW !\u003d null)  {\n            metricsLogBW.write(\"]\");\n            metricsLogBW.close();\n          }\n          if (web !\u003d null) {\n            web.stop();\n          }\n          tearDown();\n        } catch (Exception e) {\n          e.printStackTrace();\n        }\n      }\n    }, SHUTDOWN_HOOK_PRIORITY);\n  }",
      "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/SLSCapacityScheduler.java"
    }
  }
}