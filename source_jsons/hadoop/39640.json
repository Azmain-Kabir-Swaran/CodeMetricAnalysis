{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LeafQueue.java",
  "functionName": "submitApplication",
  "functionId": "submitApplication___applicationId-ApplicationId__userName-String__queue-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
  "functionStartLine": 594,
  "functionEndLine": 608,
  "numCommitsSeen": 288,
  "timeTaken": 12371,
  "changeHistory": [
    "563480dccd0136d82730f4228f1df44449ed5822",
    "2b66d9ec5bdaec7e6b278926fbb6f222c4e3afaa",
    "8310b2e9ff3d6804bad703c4c15458b0dfeeb4af",
    "7360cec692be5dcc3377ae5082fe22870caac96b",
    "f677175f35f68bde9df72e648dffacbd31cfd620",
    "a45017a5f17ec11814db7e206d1e80aaa4dd8d8f",
    "1c5b49eeafc2253d4fa92456e6ccf0f35290c889",
    "cc523683cfa76c1255667a3aedc48b08e5daabc7",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "7f2b1eadc1b0807ec1302a0c3488bf6e7a59bc76",
    "d74bec2f883b562d377cc564ca86473c498a618a",
    "f3cc8911485385713395a04a5b292ae375ff83a3",
    "72d34e6594371112bb4e9835817b382bd4161a6d",
    "df2991c0cbc3f35c2640b93680667507c4f810dd",
    "6b608aad7d52b524fa94955a538e8b3524d42d93",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "563480dccd0136d82730f4228f1df44449ed5822": "Ybodychange",
    "2b66d9ec5bdaec7e6b278926fbb6f222c4e3afaa": "Ybodychange",
    "8310b2e9ff3d6804bad703c4c15458b0dfeeb4af": "Ybodychange",
    "7360cec692be5dcc3377ae5082fe22870caac96b": "Ybodychange",
    "f677175f35f68bde9df72e648dffacbd31cfd620": "Ybodychange",
    "a45017a5f17ec11814db7e206d1e80aaa4dd8d8f": "Ymultichange(Yparameterchange,Ybodychange)",
    "1c5b49eeafc2253d4fa92456e6ccf0f35290c889": "Ybodychange",
    "cc523683cfa76c1255667a3aedc48b08e5daabc7": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "7f2b1eadc1b0807ec1302a0c3488bf6e7a59bc76": "Yparameterchange",
    "d74bec2f883b562d377cc564ca86473c498a618a": "Ybodychange",
    "f3cc8911485385713395a04a5b292ae375ff83a3": "Ybodychange",
    "72d34e6594371112bb4e9835817b382bd4161a6d": "Ybodychange",
    "df2991c0cbc3f35c2640b93680667507c4f810dd": "Ybodychange",
    "6b608aad7d52b524fa94955a538e8b3524d42d93": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "563480dccd0136d82730f4228f1df44449ed5822": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5932. Retrospect moveApplicationToQueue in align with YARN-5611. Contributed by Sunil G.\n",
      "commitDate": "06/12/16 9:09 PM",
      "commitName": "563480dccd0136d82730f4228f1df44449ed5822",
      "commitAuthor": "Rohith Sharma K S",
      "commitDateOld": "11/11/16 7:18 AM",
      "commitNameOld": "503e73e849cbdd1194cc0d16b4969c60929aca11",
      "commitAuthorOld": "Naganarasimha",
      "daysBetweenCommits": 25.58,
      "commitsBetweenForRepo": 154,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,47 +1,15 @@\n   public void submitApplication(ApplicationId applicationId, String userName,\n       String queue)  throws AccessControlException {\n     // Careful! Locking order is important!\n-    try {\n-      writeLock.lock();\n-      // Check if the queue is accepting jobs\n-      if (getState() !\u003d QueueState.RUNNING) {\n-        String msg \u003d \"Queue \" + getQueuePath()\n-            + \" is STOPPED. Cannot accept submission of application: \"\n-            + applicationId;\n-        LOG.info(msg);\n-        throw new AccessControlException(msg);\n-      }\n-\n-      // Check submission limits for queues\n-      if (getNumApplications() \u003e\u003d getMaxApplications()) {\n-        String msg \u003d\n-            \"Queue \" + getQueuePath() + \" already has \" + getNumApplications()\n-                + \" applications,\"\n-                + \" cannot accept submission of application: \" + applicationId;\n-        LOG.info(msg);\n-        throw new AccessControlException(msg);\n-      }\n-\n-      // Check submission limits for the user on this queue\n-      User user \u003d getUserAndAddIfAbsent(userName);\n-      if (user.getTotalApplications() \u003e\u003d getMaxApplicationsPerUser()) {\n-        String msg \u003d \"Queue \" + getQueuePath() + \" already has \" + user\n-            .getTotalApplications() + \" applications from user \" + userName\n-            + \" cannot accept submission of application: \" + applicationId;\n-        LOG.info(msg);\n-        throw new AccessControlException(msg);\n-      }\n-    } finally {\n-      writeLock.unlock();\n-    }\n+    validateSubmitApplication(applicationId, userName, queue);\n \n     // Inform the parent queue\n     try {\n       getParent().submitApplication(applicationId, userName, queue);\n     } catch (AccessControlException ace) {\n-      LOG.info(\"Failed to submit application to parent-queue: \" + \n+      LOG.info(\"Failed to submit application to parent-queue: \" +\n           getParent().getQueuePath(), ace);\n       throw ace;\n     }\n \n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void submitApplication(ApplicationId applicationId, String userName,\n      String queue)  throws AccessControlException {\n    // Careful! Locking order is important!\n    validateSubmitApplication(applicationId, userName, queue);\n\n    // Inform the parent queue\n    try {\n      getParent().submitApplication(applicationId, userName, queue);\n    } catch (AccessControlException ace) {\n      LOG.info(\"Failed to submit application to parent-queue: \" +\n          getParent().getQueuePath(), ace);\n      throw ace;\n    }\n\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {}
    },
    "2b66d9ec5bdaec7e6b278926fbb6f222c4e3afaa": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3140. Improve locks in AbstractCSQueue/LeafQueue/ParentQueue. Contributed by Wangda Tan\n",
      "commitDate": "20/09/16 12:03 AM",
      "commitName": "2b66d9ec5bdaec7e6b278926fbb6f222c4e3afaa",
      "commitAuthor": "Jian He",
      "commitDateOld": "16/09/16 10:05 PM",
      "commitNameOld": "4174b9756c8c7877797545c4356b1f40df603ec5",
      "commitAuthorOld": "Naganarasimha",
      "daysBetweenCommits": 3.08,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,46 +1,47 @@\n   public void submitApplication(ApplicationId applicationId, String userName,\n       String queue)  throws AccessControlException {\n     // Careful! Locking order is important!\n-\n-    User user \u003d null;\n-    synchronized (this) {\n-\n+    try {\n+      writeLock.lock();\n       // Check if the queue is accepting jobs\n       if (getState() !\u003d QueueState.RUNNING) {\n-        String msg \u003d \"Queue \" + getQueuePath() +\n-        \" is STOPPED. Cannot accept submission of application: \" + applicationId;\n+        String msg \u003d \"Queue \" + getQueuePath()\n+            + \" is STOPPED. Cannot accept submission of application: \"\n+            + applicationId;\n         LOG.info(msg);\n         throw new AccessControlException(msg);\n       }\n \n       // Check submission limits for queues\n       if (getNumApplications() \u003e\u003d getMaxApplications()) {\n-        String msg \u003d \"Queue \" + getQueuePath() + \n-        \" already has \" + getNumApplications() + \" applications,\" +\n-        \" cannot accept submission of application: \" + applicationId;\n+        String msg \u003d\n+            \"Queue \" + getQueuePath() + \" already has \" + getNumApplications()\n+                + \" applications,\"\n+                + \" cannot accept submission of application: \" + applicationId;\n         LOG.info(msg);\n         throw new AccessControlException(msg);\n       }\n \n       // Check submission limits for the user on this queue\n-      user \u003d getUser(userName);\n+      User user \u003d getUserAndAddIfAbsent(userName);\n       if (user.getTotalApplications() \u003e\u003d getMaxApplicationsPerUser()) {\n-        String msg \u003d \"Queue \" + getQueuePath() + \n-        \" already has \" + user.getTotalApplications() + \n-        \" applications from user \" + userName + \n-        \" cannot accept submission of application: \" + applicationId;\n+        String msg \u003d \"Queue \" + getQueuePath() + \" already has \" + user\n+            .getTotalApplications() + \" applications from user \" + userName\n+            + \" cannot accept submission of application: \" + applicationId;\n         LOG.info(msg);\n         throw new AccessControlException(msg);\n       }\n+    } finally {\n+      writeLock.unlock();\n     }\n \n     // Inform the parent queue\n     try {\n       getParent().submitApplication(applicationId, userName, queue);\n     } catch (AccessControlException ace) {\n       LOG.info(\"Failed to submit application to parent-queue: \" + \n           getParent().getQueuePath(), ace);\n       throw ace;\n     }\n \n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void submitApplication(ApplicationId applicationId, String userName,\n      String queue)  throws AccessControlException {\n    // Careful! Locking order is important!\n    try {\n      writeLock.lock();\n      // Check if the queue is accepting jobs\n      if (getState() !\u003d QueueState.RUNNING) {\n        String msg \u003d \"Queue \" + getQueuePath()\n            + \" is STOPPED. Cannot accept submission of application: \"\n            + applicationId;\n        LOG.info(msg);\n        throw new AccessControlException(msg);\n      }\n\n      // Check submission limits for queues\n      if (getNumApplications() \u003e\u003d getMaxApplications()) {\n        String msg \u003d\n            \"Queue \" + getQueuePath() + \" already has \" + getNumApplications()\n                + \" applications,\"\n                + \" cannot accept submission of application: \" + applicationId;\n        LOG.info(msg);\n        throw new AccessControlException(msg);\n      }\n\n      // Check submission limits for the user on this queue\n      User user \u003d getUserAndAddIfAbsent(userName);\n      if (user.getTotalApplications() \u003e\u003d getMaxApplicationsPerUser()) {\n        String msg \u003d \"Queue \" + getQueuePath() + \" already has \" + user\n            .getTotalApplications() + \" applications from user \" + userName\n            + \" cannot accept submission of application: \" + applicationId;\n        LOG.info(msg);\n        throw new AccessControlException(msg);\n      }\n    } finally {\n      writeLock.unlock();\n    }\n\n    // Inform the parent queue\n    try {\n      getParent().submitApplication(applicationId, userName, queue);\n    } catch (AccessControlException ace) {\n      LOG.info(\"Failed to submit application to parent-queue: \" + \n          getParent().getQueuePath(), ace);\n      throw ace;\n    }\n\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {}
    },
    "8310b2e9ff3d6804bad703c4c15458b0dfeeb4af": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4522. Queue acl can be checked at app submission. (Jian He via wangda)\n",
      "commitDate": "30/12/15 3:30 PM",
      "commitName": "8310b2e9ff3d6804bad703c4c15458b0dfeeb4af",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "16/12/15 3:22 PM",
      "commitNameOld": "91828fef6b9314f72d1f973f00e81404dc6bba91",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 14.01,
      "commitsBetweenForRepo": 69,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,54 +1,46 @@\n   public void submitApplication(ApplicationId applicationId, String userName,\n       String queue)  throws AccessControlException {\n     // Careful! Locking order is important!\n \n-    // Check queue ACLs\n-    UserGroupInformation userUgi \u003d UserGroupInformation.createRemoteUser(userName);\n-    if (!hasAccess(QueueACL.SUBMIT_APPLICATIONS, userUgi)\n-        \u0026\u0026 !hasAccess(QueueACL.ADMINISTER_QUEUE, userUgi)) {\n-      throw new AccessControlException(\"User \" + userName + \" cannot submit\" +\n-          \" applications to queue \" + getQueuePath());\n-    }\n-\n     User user \u003d null;\n     synchronized (this) {\n \n       // Check if the queue is accepting jobs\n       if (getState() !\u003d QueueState.RUNNING) {\n         String msg \u003d \"Queue \" + getQueuePath() +\n         \" is STOPPED. Cannot accept submission of application: \" + applicationId;\n         LOG.info(msg);\n         throw new AccessControlException(msg);\n       }\n \n       // Check submission limits for queues\n       if (getNumApplications() \u003e\u003d getMaxApplications()) {\n         String msg \u003d \"Queue \" + getQueuePath() + \n         \" already has \" + getNumApplications() + \" applications,\" +\n         \" cannot accept submission of application: \" + applicationId;\n         LOG.info(msg);\n         throw new AccessControlException(msg);\n       }\n \n       // Check submission limits for the user on this queue\n       user \u003d getUser(userName);\n       if (user.getTotalApplications() \u003e\u003d getMaxApplicationsPerUser()) {\n         String msg \u003d \"Queue \" + getQueuePath() + \n         \" already has \" + user.getTotalApplications() + \n         \" applications from user \" + userName + \n         \" cannot accept submission of application: \" + applicationId;\n         LOG.info(msg);\n         throw new AccessControlException(msg);\n       }\n     }\n \n     // Inform the parent queue\n     try {\n       getParent().submitApplication(applicationId, userName, queue);\n     } catch (AccessControlException ace) {\n       LOG.info(\"Failed to submit application to parent-queue: \" + \n           getParent().getQueuePath(), ace);\n       throw ace;\n     }\n \n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void submitApplication(ApplicationId applicationId, String userName,\n      String queue)  throws AccessControlException {\n    // Careful! Locking order is important!\n\n    User user \u003d null;\n    synchronized (this) {\n\n      // Check if the queue is accepting jobs\n      if (getState() !\u003d QueueState.RUNNING) {\n        String msg \u003d \"Queue \" + getQueuePath() +\n        \" is STOPPED. Cannot accept submission of application: \" + applicationId;\n        LOG.info(msg);\n        throw new AccessControlException(msg);\n      }\n\n      // Check submission limits for queues\n      if (getNumApplications() \u003e\u003d getMaxApplications()) {\n        String msg \u003d \"Queue \" + getQueuePath() + \n        \" already has \" + getNumApplications() + \" applications,\" +\n        \" cannot accept submission of application: \" + applicationId;\n        LOG.info(msg);\n        throw new AccessControlException(msg);\n      }\n\n      // Check submission limits for the user on this queue\n      user \u003d getUser(userName);\n      if (user.getTotalApplications() \u003e\u003d getMaxApplicationsPerUser()) {\n        String msg \u003d \"Queue \" + getQueuePath() + \n        \" already has \" + user.getTotalApplications() + \n        \" applications from user \" + userName + \n        \" cannot accept submission of application: \" + applicationId;\n        LOG.info(msg);\n        throw new AccessControlException(msg);\n      }\n    }\n\n    // Inform the parent queue\n    try {\n      getParent().submitApplication(applicationId, userName, queue);\n    } catch (AccessControlException ace) {\n      LOG.info(\"Failed to submit application to parent-queue: \" + \n          getParent().getQueuePath(), ace);\n      throw ace;\n    }\n\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {}
    },
    "7360cec692be5dcc3377ae5082fe22870caac96b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2378. Added support for moving applications across queues in CapacityScheduler. Contributed by Subramaniam Venkatraman Krishnan\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1618106 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/08/14 11:00 PM",
      "commitName": "7360cec692be5dcc3377ae5082fe22870caac96b",
      "commitAuthor": "Jian He",
      "commitDateOld": "07/08/14 1:00 PM",
      "commitNameOld": "8437df8ba943e348b6a5d6370b4e0a74ff350a90",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 7.42,
      "commitsBetweenForRepo": 82,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,55 +1,54 @@\n   public void submitApplication(ApplicationId applicationId, String userName,\n       String queue)  throws AccessControlException {\n     // Careful! Locking order is important!\n \n     // Check queue ACLs\n     UserGroupInformation userUgi \u003d UserGroupInformation.createRemoteUser(userName);\n     if (!hasAccess(QueueACL.SUBMIT_APPLICATIONS, userUgi)\n         \u0026\u0026 !hasAccess(QueueACL.ADMINISTER_QUEUE, userUgi)) {\n       throw new AccessControlException(\"User \" + userName + \" cannot submit\" +\n           \" applications to queue \" + getQueuePath());\n     }\n \n     User user \u003d null;\n     synchronized (this) {\n \n       // Check if the queue is accepting jobs\n       if (getState() !\u003d QueueState.RUNNING) {\n         String msg \u003d \"Queue \" + getQueuePath() +\n         \" is STOPPED. Cannot accept submission of application: \" + applicationId;\n         LOG.info(msg);\n         throw new AccessControlException(msg);\n       }\n \n       // Check submission limits for queues\n       if (getNumApplications() \u003e\u003d getMaxApplications()) {\n         String msg \u003d \"Queue \" + getQueuePath() + \n         \" already has \" + getNumApplications() + \" applications,\" +\n         \" cannot accept submission of application: \" + applicationId;\n         LOG.info(msg);\n         throw new AccessControlException(msg);\n       }\n \n       // Check submission limits for the user on this queue\n       user \u003d getUser(userName);\n       if (user.getTotalApplications() \u003e\u003d getMaxApplicationsPerUser()) {\n         String msg \u003d \"Queue \" + getQueuePath() + \n         \" already has \" + user.getTotalApplications() + \n         \" applications from user \" + userName + \n         \" cannot accept submission of application: \" + applicationId;\n         LOG.info(msg);\n         throw new AccessControlException(msg);\n       }\n     }\n \n     // Inform the parent queue\n     try {\n       getParent().submitApplication(applicationId, userName, queue);\n     } catch (AccessControlException ace) {\n       LOG.info(\"Failed to submit application to parent-queue: \" + \n           getParent().getQueuePath(), ace);\n       throw ace;\n     }\n \n-    metrics.submitApp(userName);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void submitApplication(ApplicationId applicationId, String userName,\n      String queue)  throws AccessControlException {\n    // Careful! Locking order is important!\n\n    // Check queue ACLs\n    UserGroupInformation userUgi \u003d UserGroupInformation.createRemoteUser(userName);\n    if (!hasAccess(QueueACL.SUBMIT_APPLICATIONS, userUgi)\n        \u0026\u0026 !hasAccess(QueueACL.ADMINISTER_QUEUE, userUgi)) {\n      throw new AccessControlException(\"User \" + userName + \" cannot submit\" +\n          \" applications to queue \" + getQueuePath());\n    }\n\n    User user \u003d null;\n    synchronized (this) {\n\n      // Check if the queue is accepting jobs\n      if (getState() !\u003d QueueState.RUNNING) {\n        String msg \u003d \"Queue \" + getQueuePath() +\n        \" is STOPPED. Cannot accept submission of application: \" + applicationId;\n        LOG.info(msg);\n        throw new AccessControlException(msg);\n      }\n\n      // Check submission limits for queues\n      if (getNumApplications() \u003e\u003d getMaxApplications()) {\n        String msg \u003d \"Queue \" + getQueuePath() + \n        \" already has \" + getNumApplications() + \" applications,\" +\n        \" cannot accept submission of application: \" + applicationId;\n        LOG.info(msg);\n        throw new AccessControlException(msg);\n      }\n\n      // Check submission limits for the user on this queue\n      user \u003d getUser(userName);\n      if (user.getTotalApplications() \u003e\u003d getMaxApplicationsPerUser()) {\n        String msg \u003d \"Queue \" + getQueuePath() + \n        \" already has \" + user.getTotalApplications() + \n        \" applications from user \" + userName + \n        \" cannot accept submission of application: \" + applicationId;\n        LOG.info(msg);\n        throw new AccessControlException(msg);\n      }\n    }\n\n    // Inform the parent queue\n    try {\n      getParent().submitApplication(applicationId, userName, queue);\n    } catch (AccessControlException ace) {\n      LOG.info(\"Failed to submit application to parent-queue: \" + \n          getParent().getQueuePath(), ace);\n      throw ace;\n    }\n\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {}
    },
    "f677175f35f68bde9df72e648dffacbd31cfd620": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1166. Fixed app-specific and attempt-specific QueueMetrics to be triggered by accordingly app event and attempt event. Contributed by Zhijie Shen\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1557296 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/01/14 5:15 PM",
      "commitName": "f677175f35f68bde9df72e648dffacbd31cfd620",
      "commitAuthor": "Jian He",
      "commitDateOld": "02/01/14 12:19 PM",
      "commitNameOld": "a45017a5f17ec11814db7e206d1e80aaa4dd8d8f",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 8.21,
      "commitsBetweenForRepo": 40,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,53 +1,55 @@\n   public void submitApplication(ApplicationId applicationId, String userName,\n       String queue)  throws AccessControlException {\n     // Careful! Locking order is important!\n \n     // Check queue ACLs\n     UserGroupInformation userUgi \u003d UserGroupInformation.createRemoteUser(userName);\n     if (!hasAccess(QueueACL.SUBMIT_APPLICATIONS, userUgi)\n         \u0026\u0026 !hasAccess(QueueACL.ADMINISTER_QUEUE, userUgi)) {\n       throw new AccessControlException(\"User \" + userName + \" cannot submit\" +\n           \" applications to queue \" + getQueuePath());\n     }\n \n     User user \u003d null;\n     synchronized (this) {\n \n       // Check if the queue is accepting jobs\n       if (getState() !\u003d QueueState.RUNNING) {\n         String msg \u003d \"Queue \" + getQueuePath() +\n         \" is STOPPED. Cannot accept submission of application: \" + applicationId;\n         LOG.info(msg);\n         throw new AccessControlException(msg);\n       }\n \n       // Check submission limits for queues\n       if (getNumApplications() \u003e\u003d getMaxApplications()) {\n         String msg \u003d \"Queue \" + getQueuePath() + \n         \" already has \" + getNumApplications() + \" applications,\" +\n         \" cannot accept submission of application: \" + applicationId;\n         LOG.info(msg);\n         throw new AccessControlException(msg);\n       }\n \n       // Check submission limits for the user on this queue\n       user \u003d getUser(userName);\n       if (user.getTotalApplications() \u003e\u003d getMaxApplicationsPerUser()) {\n         String msg \u003d \"Queue \" + getQueuePath() + \n         \" already has \" + user.getTotalApplications() + \n         \" applications from user \" + userName + \n         \" cannot accept submission of application: \" + applicationId;\n         LOG.info(msg);\n         throw new AccessControlException(msg);\n       }\n     }\n \n     // Inform the parent queue\n     try {\n       getParent().submitApplication(applicationId, userName, queue);\n     } catch (AccessControlException ace) {\n       LOG.info(\"Failed to submit application to parent-queue: \" + \n           getParent().getQueuePath(), ace);\n       throw ace;\n     }\n+\n+    metrics.submitApp(userName);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void submitApplication(ApplicationId applicationId, String userName,\n      String queue)  throws AccessControlException {\n    // Careful! Locking order is important!\n\n    // Check queue ACLs\n    UserGroupInformation userUgi \u003d UserGroupInformation.createRemoteUser(userName);\n    if (!hasAccess(QueueACL.SUBMIT_APPLICATIONS, userUgi)\n        \u0026\u0026 !hasAccess(QueueACL.ADMINISTER_QUEUE, userUgi)) {\n      throw new AccessControlException(\"User \" + userName + \" cannot submit\" +\n          \" applications to queue \" + getQueuePath());\n    }\n\n    User user \u003d null;\n    synchronized (this) {\n\n      // Check if the queue is accepting jobs\n      if (getState() !\u003d QueueState.RUNNING) {\n        String msg \u003d \"Queue \" + getQueuePath() +\n        \" is STOPPED. Cannot accept submission of application: \" + applicationId;\n        LOG.info(msg);\n        throw new AccessControlException(msg);\n      }\n\n      // Check submission limits for queues\n      if (getNumApplications() \u003e\u003d getMaxApplications()) {\n        String msg \u003d \"Queue \" + getQueuePath() + \n        \" already has \" + getNumApplications() + \" applications,\" +\n        \" cannot accept submission of application: \" + applicationId;\n        LOG.info(msg);\n        throw new AccessControlException(msg);\n      }\n\n      // Check submission limits for the user on this queue\n      user \u003d getUser(userName);\n      if (user.getTotalApplications() \u003e\u003d getMaxApplicationsPerUser()) {\n        String msg \u003d \"Queue \" + getQueuePath() + \n        \" already has \" + user.getTotalApplications() + \n        \" applications from user \" + userName + \n        \" cannot accept submission of application: \" + applicationId;\n        LOG.info(msg);\n        throw new AccessControlException(msg);\n      }\n    }\n\n    // Inform the parent queue\n    try {\n      getParent().submitApplication(applicationId, userName, queue);\n    } catch (AccessControlException ace) {\n      LOG.info(\"Failed to submit application to parent-queue: \" + \n          getParent().getQueuePath(), ace);\n      throw ace;\n    }\n\n    metrics.submitApp(userName);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {}
    },
    "a45017a5f17ec11814db7e206d1e80aaa4dd8d8f": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-1493. Changed ResourceManager and Scheduler interfacing to recognize app-attempts separately from apps. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1554896 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/01/14 12:19 PM",
      "commitName": "a45017a5f17ec11814db7e206d1e80aaa4dd8d8f",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-1493. Changed ResourceManager and Scheduler interfacing to recognize app-attempts separately from apps. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1554896 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "02/01/14 12:19 PM",
          "commitName": "a45017a5f17ec11814db7e206d1e80aaa4dd8d8f",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "07/12/13 7:09 PM",
          "commitNameOld": "e1d3670f4c233696dc673c37b578ce46b44a6876",
          "commitAuthorOld": "Sanford Ryza",
          "daysBetweenCommits": 25.72,
          "commitsBetweenForRepo": 114,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,63 +1,53 @@\n-  public void submitApplication(FiCaSchedulerApp application, String userName,\n+  public void submitApplication(ApplicationId applicationId, String userName,\n       String queue)  throws AccessControlException {\n     // Careful! Locking order is important!\n \n     // Check queue ACLs\n     UserGroupInformation userUgi \u003d UserGroupInformation.createRemoteUser(userName);\n     if (!hasAccess(QueueACL.SUBMIT_APPLICATIONS, userUgi)\n         \u0026\u0026 !hasAccess(QueueACL.ADMINISTER_QUEUE, userUgi)) {\n       throw new AccessControlException(\"User \" + userName + \" cannot submit\" +\n           \" applications to queue \" + getQueuePath());\n     }\n \n     User user \u003d null;\n     synchronized (this) {\n \n       // Check if the queue is accepting jobs\n       if (getState() !\u003d QueueState.RUNNING) {\n         String msg \u003d \"Queue \" + getQueuePath() +\n-        \" is STOPPED. Cannot accept submission of application: \" +\n-        application.getApplicationId();\n+        \" is STOPPED. Cannot accept submission of application: \" + applicationId;\n         LOG.info(msg);\n         throw new AccessControlException(msg);\n       }\n \n       // Check submission limits for queues\n       if (getNumApplications() \u003e\u003d getMaxApplications()) {\n         String msg \u003d \"Queue \" + getQueuePath() + \n         \" already has \" + getNumApplications() + \" applications,\" +\n-        \" cannot accept submission of application: \" + \n-        application.getApplicationId();\n+        \" cannot accept submission of application: \" + applicationId;\n         LOG.info(msg);\n         throw new AccessControlException(msg);\n       }\n \n       // Check submission limits for the user on this queue\n       user \u003d getUser(userName);\n       if (user.getTotalApplications() \u003e\u003d getMaxApplicationsPerUser()) {\n         String msg \u003d \"Queue \" + getQueuePath() + \n         \" already has \" + user.getTotalApplications() + \n         \" applications from user \" + userName + \n-        \" cannot accept submission of application: \" + \n-        application.getApplicationId();\n+        \" cannot accept submission of application: \" + applicationId;\n         LOG.info(msg);\n         throw new AccessControlException(msg);\n       }\n-\n-      // Add the application to our data-structures\n-      addApplication(application, user);\n     }\n \n-    int attemptId \u003d application.getApplicationAttemptId().getAttemptId();\n-    metrics.submitApp(userName, attemptId);\n-\n     // Inform the parent queue\n     try {\n-      getParent().submitApplication(application, userName, queue);\n+      getParent().submitApplication(applicationId, userName, queue);\n     } catch (AccessControlException ace) {\n       LOG.info(\"Failed to submit application to parent-queue: \" + \n           getParent().getQueuePath(), ace);\n-      removeApplication(application, user);\n       throw ace;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void submitApplication(ApplicationId applicationId, String userName,\n      String queue)  throws AccessControlException {\n    // Careful! Locking order is important!\n\n    // Check queue ACLs\n    UserGroupInformation userUgi \u003d UserGroupInformation.createRemoteUser(userName);\n    if (!hasAccess(QueueACL.SUBMIT_APPLICATIONS, userUgi)\n        \u0026\u0026 !hasAccess(QueueACL.ADMINISTER_QUEUE, userUgi)) {\n      throw new AccessControlException(\"User \" + userName + \" cannot submit\" +\n          \" applications to queue \" + getQueuePath());\n    }\n\n    User user \u003d null;\n    synchronized (this) {\n\n      // Check if the queue is accepting jobs\n      if (getState() !\u003d QueueState.RUNNING) {\n        String msg \u003d \"Queue \" + getQueuePath() +\n        \" is STOPPED. Cannot accept submission of application: \" + applicationId;\n        LOG.info(msg);\n        throw new AccessControlException(msg);\n      }\n\n      // Check submission limits for queues\n      if (getNumApplications() \u003e\u003d getMaxApplications()) {\n        String msg \u003d \"Queue \" + getQueuePath() + \n        \" already has \" + getNumApplications() + \" applications,\" +\n        \" cannot accept submission of application: \" + applicationId;\n        LOG.info(msg);\n        throw new AccessControlException(msg);\n      }\n\n      // Check submission limits for the user on this queue\n      user \u003d getUser(userName);\n      if (user.getTotalApplications() \u003e\u003d getMaxApplicationsPerUser()) {\n        String msg \u003d \"Queue \" + getQueuePath() + \n        \" already has \" + user.getTotalApplications() + \n        \" applications from user \" + userName + \n        \" cannot accept submission of application: \" + applicationId;\n        LOG.info(msg);\n        throw new AccessControlException(msg);\n      }\n    }\n\n    // Inform the parent queue\n    try {\n      getParent().submitApplication(applicationId, userName, queue);\n    } catch (AccessControlException ace) {\n      LOG.info(\"Failed to submit application to parent-queue: \" + \n          getParent().getQueuePath(), ace);\n      throw ace;\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
          "extendedDetails": {
            "oldValue": "[application-FiCaSchedulerApp, userName-String, queue-String]",
            "newValue": "[applicationId-ApplicationId, userName-String, queue-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-1493. Changed ResourceManager and Scheduler interfacing to recognize app-attempts separately from apps. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1554896 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "02/01/14 12:19 PM",
          "commitName": "a45017a5f17ec11814db7e206d1e80aaa4dd8d8f",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "07/12/13 7:09 PM",
          "commitNameOld": "e1d3670f4c233696dc673c37b578ce46b44a6876",
          "commitAuthorOld": "Sanford Ryza",
          "daysBetweenCommits": 25.72,
          "commitsBetweenForRepo": 114,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,63 +1,53 @@\n-  public void submitApplication(FiCaSchedulerApp application, String userName,\n+  public void submitApplication(ApplicationId applicationId, String userName,\n       String queue)  throws AccessControlException {\n     // Careful! Locking order is important!\n \n     // Check queue ACLs\n     UserGroupInformation userUgi \u003d UserGroupInformation.createRemoteUser(userName);\n     if (!hasAccess(QueueACL.SUBMIT_APPLICATIONS, userUgi)\n         \u0026\u0026 !hasAccess(QueueACL.ADMINISTER_QUEUE, userUgi)) {\n       throw new AccessControlException(\"User \" + userName + \" cannot submit\" +\n           \" applications to queue \" + getQueuePath());\n     }\n \n     User user \u003d null;\n     synchronized (this) {\n \n       // Check if the queue is accepting jobs\n       if (getState() !\u003d QueueState.RUNNING) {\n         String msg \u003d \"Queue \" + getQueuePath() +\n-        \" is STOPPED. Cannot accept submission of application: \" +\n-        application.getApplicationId();\n+        \" is STOPPED. Cannot accept submission of application: \" + applicationId;\n         LOG.info(msg);\n         throw new AccessControlException(msg);\n       }\n \n       // Check submission limits for queues\n       if (getNumApplications() \u003e\u003d getMaxApplications()) {\n         String msg \u003d \"Queue \" + getQueuePath() + \n         \" already has \" + getNumApplications() + \" applications,\" +\n-        \" cannot accept submission of application: \" + \n-        application.getApplicationId();\n+        \" cannot accept submission of application: \" + applicationId;\n         LOG.info(msg);\n         throw new AccessControlException(msg);\n       }\n \n       // Check submission limits for the user on this queue\n       user \u003d getUser(userName);\n       if (user.getTotalApplications() \u003e\u003d getMaxApplicationsPerUser()) {\n         String msg \u003d \"Queue \" + getQueuePath() + \n         \" already has \" + user.getTotalApplications() + \n         \" applications from user \" + userName + \n-        \" cannot accept submission of application: \" + \n-        application.getApplicationId();\n+        \" cannot accept submission of application: \" + applicationId;\n         LOG.info(msg);\n         throw new AccessControlException(msg);\n       }\n-\n-      // Add the application to our data-structures\n-      addApplication(application, user);\n     }\n \n-    int attemptId \u003d application.getApplicationAttemptId().getAttemptId();\n-    metrics.submitApp(userName, attemptId);\n-\n     // Inform the parent queue\n     try {\n-      getParent().submitApplication(application, userName, queue);\n+      getParent().submitApplication(applicationId, userName, queue);\n     } catch (AccessControlException ace) {\n       LOG.info(\"Failed to submit application to parent-queue: \" + \n           getParent().getQueuePath(), ace);\n-      removeApplication(application, user);\n       throw ace;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void submitApplication(ApplicationId applicationId, String userName,\n      String queue)  throws AccessControlException {\n    // Careful! Locking order is important!\n\n    // Check queue ACLs\n    UserGroupInformation userUgi \u003d UserGroupInformation.createRemoteUser(userName);\n    if (!hasAccess(QueueACL.SUBMIT_APPLICATIONS, userUgi)\n        \u0026\u0026 !hasAccess(QueueACL.ADMINISTER_QUEUE, userUgi)) {\n      throw new AccessControlException(\"User \" + userName + \" cannot submit\" +\n          \" applications to queue \" + getQueuePath());\n    }\n\n    User user \u003d null;\n    synchronized (this) {\n\n      // Check if the queue is accepting jobs\n      if (getState() !\u003d QueueState.RUNNING) {\n        String msg \u003d \"Queue \" + getQueuePath() +\n        \" is STOPPED. Cannot accept submission of application: \" + applicationId;\n        LOG.info(msg);\n        throw new AccessControlException(msg);\n      }\n\n      // Check submission limits for queues\n      if (getNumApplications() \u003e\u003d getMaxApplications()) {\n        String msg \u003d \"Queue \" + getQueuePath() + \n        \" already has \" + getNumApplications() + \" applications,\" +\n        \" cannot accept submission of application: \" + applicationId;\n        LOG.info(msg);\n        throw new AccessControlException(msg);\n      }\n\n      // Check submission limits for the user on this queue\n      user \u003d getUser(userName);\n      if (user.getTotalApplications() \u003e\u003d getMaxApplicationsPerUser()) {\n        String msg \u003d \"Queue \" + getQueuePath() + \n        \" already has \" + user.getTotalApplications() + \n        \" applications from user \" + userName + \n        \" cannot accept submission of application: \" + applicationId;\n        LOG.info(msg);\n        throw new AccessControlException(msg);\n      }\n    }\n\n    // Inform the parent queue\n    try {\n      getParent().submitApplication(applicationId, userName, queue);\n    } catch (AccessControlException ace) {\n      LOG.info(\"Failed to submit application to parent-queue: \" + \n          getParent().getQueuePath(), ace);\n      throw ace;\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
          "extendedDetails": {}
        }
      ]
    },
    "1c5b49eeafc2253d4fa92456e6ccf0f35290c889": {
      "type": "Ybodychange",
      "commitMessage": "YARN-899. Added back queue level administrator-acls so that there is no regression w.r.t 1.x. Contributed by Xuan Gong.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1527282 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/09/13 1:21 AM",
      "commitName": "1c5b49eeafc2253d4fa92456e6ccf0f35290c889",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "16/09/13 6:31 PM",
      "commitNameOld": "90f43b1c1817b8c7d8bcf3102b0c1ce3d67b035f",
      "commitAuthorOld": "Christopher Douglas",
      "daysBetweenCommits": 12.29,
      "commitsBetweenForRepo": 72,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,62 +1,63 @@\n   public void submitApplication(FiCaSchedulerApp application, String userName,\n       String queue)  throws AccessControlException {\n     // Careful! Locking order is important!\n \n     // Check queue ACLs\n     UserGroupInformation userUgi \u003d UserGroupInformation.createRemoteUser(userName);\n-    if (!hasAccess(QueueACL.SUBMIT_APPLICATIONS, userUgi)) {\n+    if (!hasAccess(QueueACL.SUBMIT_APPLICATIONS, userUgi)\n+        \u0026\u0026 !hasAccess(QueueACL.ADMINISTER_QUEUE, userUgi)) {\n       throw new AccessControlException(\"User \" + userName + \" cannot submit\" +\n           \" applications to queue \" + getQueuePath());\n     }\n \n     User user \u003d null;\n     synchronized (this) {\n \n       // Check if the queue is accepting jobs\n       if (getState() !\u003d QueueState.RUNNING) {\n         String msg \u003d \"Queue \" + getQueuePath() +\n         \" is STOPPED. Cannot accept submission of application: \" +\n         application.getApplicationId();\n         LOG.info(msg);\n         throw new AccessControlException(msg);\n       }\n \n       // Check submission limits for queues\n       if (getNumApplications() \u003e\u003d getMaxApplications()) {\n         String msg \u003d \"Queue \" + getQueuePath() + \n         \" already has \" + getNumApplications() + \" applications,\" +\n         \" cannot accept submission of application: \" + \n         application.getApplicationId();\n         LOG.info(msg);\n         throw new AccessControlException(msg);\n       }\n \n       // Check submission limits for the user on this queue\n       user \u003d getUser(userName);\n       if (user.getTotalApplications() \u003e\u003d getMaxApplicationsPerUser()) {\n         String msg \u003d \"Queue \" + getQueuePath() + \n         \" already has \" + user.getTotalApplications() + \n         \" applications from user \" + userName + \n         \" cannot accept submission of application: \" + \n         application.getApplicationId();\n         LOG.info(msg);\n         throw new AccessControlException(msg);\n       }\n \n       // Add the application to our data-structures\n       addApplication(application, user);\n     }\n \n     int attemptId \u003d application.getApplicationAttemptId().getAttemptId();\n     metrics.submitApp(userName, attemptId);\n \n     // Inform the parent queue\n     try {\n       getParent().submitApplication(application, userName, queue);\n     } catch (AccessControlException ace) {\n       LOG.info(\"Failed to submit application to parent-queue: \" + \n           getParent().getQueuePath(), ace);\n       removeApplication(application, user);\n       throw ace;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void submitApplication(FiCaSchedulerApp application, String userName,\n      String queue)  throws AccessControlException {\n    // Careful! Locking order is important!\n\n    // Check queue ACLs\n    UserGroupInformation userUgi \u003d UserGroupInformation.createRemoteUser(userName);\n    if (!hasAccess(QueueACL.SUBMIT_APPLICATIONS, userUgi)\n        \u0026\u0026 !hasAccess(QueueACL.ADMINISTER_QUEUE, userUgi)) {\n      throw new AccessControlException(\"User \" + userName + \" cannot submit\" +\n          \" applications to queue \" + getQueuePath());\n    }\n\n    User user \u003d null;\n    synchronized (this) {\n\n      // Check if the queue is accepting jobs\n      if (getState() !\u003d QueueState.RUNNING) {\n        String msg \u003d \"Queue \" + getQueuePath() +\n        \" is STOPPED. Cannot accept submission of application: \" +\n        application.getApplicationId();\n        LOG.info(msg);\n        throw new AccessControlException(msg);\n      }\n\n      // Check submission limits for queues\n      if (getNumApplications() \u003e\u003d getMaxApplications()) {\n        String msg \u003d \"Queue \" + getQueuePath() + \n        \" already has \" + getNumApplications() + \" applications,\" +\n        \" cannot accept submission of application: \" + \n        application.getApplicationId();\n        LOG.info(msg);\n        throw new AccessControlException(msg);\n      }\n\n      // Check submission limits for the user on this queue\n      user \u003d getUser(userName);\n      if (user.getTotalApplications() \u003e\u003d getMaxApplicationsPerUser()) {\n        String msg \u003d \"Queue \" + getQueuePath() + \n        \" already has \" + user.getTotalApplications() + \n        \" applications from user \" + userName + \n        \" cannot accept submission of application: \" + \n        application.getApplicationId();\n        LOG.info(msg);\n        throw new AccessControlException(msg);\n      }\n\n      // Add the application to our data-structures\n      addApplication(application, user);\n    }\n\n    int attemptId \u003d application.getApplicationAttemptId().getAttemptId();\n    metrics.submitApp(userName, attemptId);\n\n    // Inform the parent queue\n    try {\n      getParent().submitApplication(application, userName, queue);\n    } catch (AccessControlException ace) {\n      LOG.info(\"Failed to submit application to parent-queue: \" + \n          getParent().getQueuePath(), ace);\n      removeApplication(application, user);\n      throw ace;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {}
    },
    "cc523683cfa76c1255667a3aedc48b08e5daabc7": {
      "type": "Ybodychange",
      "commitMessage": "YARN-177. CapacityScheduler - adding a queue while the RM is running has wacky results (acmurthy vai tgraves)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1401668 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/10/12 6:21 AM",
      "commitName": "cc523683cfa76c1255667a3aedc48b08e5daabc7",
      "commitAuthor": "Thomas Graves",
      "commitDateOld": "26/09/12 8:43 PM",
      "commitNameOld": "40062e1aaa09628c6f45d20298fd66d799fd1f3f",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 27.4,
      "commitsBetweenForRepo": 163,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,62 +1,62 @@\n   public void submitApplication(FiCaSchedulerApp application, String userName,\n       String queue)  throws AccessControlException {\n     // Careful! Locking order is important!\n \n     // Check queue ACLs\n     UserGroupInformation userUgi \u003d UserGroupInformation.createRemoteUser(userName);\n     if (!hasAccess(QueueACL.SUBMIT_APPLICATIONS, userUgi)) {\n       throw new AccessControlException(\"User \" + userName + \" cannot submit\" +\n           \" applications to queue \" + getQueuePath());\n     }\n \n     User user \u003d null;\n     synchronized (this) {\n \n       // Check if the queue is accepting jobs\n       if (getState() !\u003d QueueState.RUNNING) {\n         String msg \u003d \"Queue \" + getQueuePath() +\n         \" is STOPPED. Cannot accept submission of application: \" +\n         application.getApplicationId();\n         LOG.info(msg);\n         throw new AccessControlException(msg);\n       }\n \n       // Check submission limits for queues\n       if (getNumApplications() \u003e\u003d getMaxApplications()) {\n         String msg \u003d \"Queue \" + getQueuePath() + \n         \" already has \" + getNumApplications() + \" applications,\" +\n         \" cannot accept submission of application: \" + \n         application.getApplicationId();\n         LOG.info(msg);\n         throw new AccessControlException(msg);\n       }\n \n       // Check submission limits for the user on this queue\n       user \u003d getUser(userName);\n       if (user.getTotalApplications() \u003e\u003d getMaxApplicationsPerUser()) {\n         String msg \u003d \"Queue \" + getQueuePath() + \n         \" already has \" + user.getTotalApplications() + \n         \" applications from user \" + userName + \n         \" cannot accept submission of application: \" + \n         application.getApplicationId();\n         LOG.info(msg);\n         throw new AccessControlException(msg);\n       }\n \n       // Add the application to our data-structures\n       addApplication(application, user);\n     }\n \n     int attemptId \u003d application.getApplicationAttemptId().getAttemptId();\n     metrics.submitApp(userName, attemptId);\n \n     // Inform the parent queue\n     try {\n-      parent.submitApplication(application, userName, queue);\n+      getParent().submitApplication(application, userName, queue);\n     } catch (AccessControlException ace) {\n       LOG.info(\"Failed to submit application to parent-queue: \" + \n-          parent.getQueuePath(), ace);\n+          getParent().getQueuePath(), ace);\n       removeApplication(application, user);\n       throw ace;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void submitApplication(FiCaSchedulerApp application, String userName,\n      String queue)  throws AccessControlException {\n    // Careful! Locking order is important!\n\n    // Check queue ACLs\n    UserGroupInformation userUgi \u003d UserGroupInformation.createRemoteUser(userName);\n    if (!hasAccess(QueueACL.SUBMIT_APPLICATIONS, userUgi)) {\n      throw new AccessControlException(\"User \" + userName + \" cannot submit\" +\n          \" applications to queue \" + getQueuePath());\n    }\n\n    User user \u003d null;\n    synchronized (this) {\n\n      // Check if the queue is accepting jobs\n      if (getState() !\u003d QueueState.RUNNING) {\n        String msg \u003d \"Queue \" + getQueuePath() +\n        \" is STOPPED. Cannot accept submission of application: \" +\n        application.getApplicationId();\n        LOG.info(msg);\n        throw new AccessControlException(msg);\n      }\n\n      // Check submission limits for queues\n      if (getNumApplications() \u003e\u003d getMaxApplications()) {\n        String msg \u003d \"Queue \" + getQueuePath() + \n        \" already has \" + getNumApplications() + \" applications,\" +\n        \" cannot accept submission of application: \" + \n        application.getApplicationId();\n        LOG.info(msg);\n        throw new AccessControlException(msg);\n      }\n\n      // Check submission limits for the user on this queue\n      user \u003d getUser(userName);\n      if (user.getTotalApplications() \u003e\u003d getMaxApplicationsPerUser()) {\n        String msg \u003d \"Queue \" + getQueuePath() + \n        \" already has \" + user.getTotalApplications() + \n        \" applications from user \" + userName + \n        \" cannot accept submission of application: \" + \n        application.getApplicationId();\n        LOG.info(msg);\n        throw new AccessControlException(msg);\n      }\n\n      // Add the application to our data-structures\n      addApplication(application, user);\n    }\n\n    int attemptId \u003d application.getApplicationAttemptId().getAttemptId();\n    metrics.submitApp(userName, attemptId);\n\n    // Inform the parent queue\n    try {\n      getParent().submitApplication(application, userName, queue);\n    } catch (AccessControlException ace) {\n      LOG.info(\"Failed to submit application to parent-queue: \" + \n          getParent().getQueuePath(), ace);\n      removeApplication(application, user);\n      throw ace;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void submitApplication(FiCaSchedulerApp application, String userName,\n      String queue)  throws AccessControlException {\n    // Careful! Locking order is important!\n\n    // Check queue ACLs\n    UserGroupInformation userUgi \u003d UserGroupInformation.createRemoteUser(userName);\n    if (!hasAccess(QueueACL.SUBMIT_APPLICATIONS, userUgi)) {\n      throw new AccessControlException(\"User \" + userName + \" cannot submit\" +\n          \" applications to queue \" + getQueuePath());\n    }\n\n    User user \u003d null;\n    synchronized (this) {\n\n      // Check if the queue is accepting jobs\n      if (getState() !\u003d QueueState.RUNNING) {\n        String msg \u003d \"Queue \" + getQueuePath() +\n        \" is STOPPED. Cannot accept submission of application: \" +\n        application.getApplicationId();\n        LOG.info(msg);\n        throw new AccessControlException(msg);\n      }\n\n      // Check submission limits for queues\n      if (getNumApplications() \u003e\u003d getMaxApplications()) {\n        String msg \u003d \"Queue \" + getQueuePath() + \n        \" already has \" + getNumApplications() + \" applications,\" +\n        \" cannot accept submission of application: \" + \n        application.getApplicationId();\n        LOG.info(msg);\n        throw new AccessControlException(msg);\n      }\n\n      // Check submission limits for the user on this queue\n      user \u003d getUser(userName);\n      if (user.getTotalApplications() \u003e\u003d getMaxApplicationsPerUser()) {\n        String msg \u003d \"Queue \" + getQueuePath() + \n        \" already has \" + user.getTotalApplications() + \n        \" applications from user \" + userName + \n        \" cannot accept submission of application: \" + \n        application.getApplicationId();\n        LOG.info(msg);\n        throw new AccessControlException(msg);\n      }\n\n      // Add the application to our data-structures\n      addApplication(application, user);\n    }\n\n    int attemptId \u003d application.getApplicationAttemptId().getAttemptId();\n    metrics.submitApp(userName, attemptId);\n\n    // Inform the parent queue\n    try {\n      parent.submitApplication(application, userName, queue);\n    } catch (AccessControlException ace) {\n      LOG.info(\"Failed to submit application to parent-queue: \" + \n          parent.getQueuePath(), ace);\n      removeApplication(application, user);\n      throw ace;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java"
      }
    },
    "7f2b1eadc1b0807ec1302a0c3488bf6e7a59bc76": {
      "type": "Yparameterchange",
      "commitMessage": "MAPREDUCE-4440. Changed SchedulerApp and SchedulerNode to be a minimal interface to allow schedulers to maintain their own.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1362332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/07/12 6:43 PM",
      "commitName": "7f2b1eadc1b0807ec1302a0c3488bf6e7a59bc76",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "10/07/12 2:26 PM",
      "commitNameOld": "3bfb26ad3b5ac46f992a632541c97ca2bc897638",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 6.18,
      "commitsBetweenForRepo": 55,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,62 +1,62 @@\n-  public void submitApplication(SchedulerApp application, String userName,\n+  public void submitApplication(FiCaSchedulerApp application, String userName,\n       String queue)  throws AccessControlException {\n     // Careful! Locking order is important!\n \n     // Check queue ACLs\n     UserGroupInformation userUgi \u003d UserGroupInformation.createRemoteUser(userName);\n     if (!hasAccess(QueueACL.SUBMIT_APPLICATIONS, userUgi)) {\n       throw new AccessControlException(\"User \" + userName + \" cannot submit\" +\n           \" applications to queue \" + getQueuePath());\n     }\n \n     User user \u003d null;\n     synchronized (this) {\n \n       // Check if the queue is accepting jobs\n       if (getState() !\u003d QueueState.RUNNING) {\n         String msg \u003d \"Queue \" + getQueuePath() +\n         \" is STOPPED. Cannot accept submission of application: \" +\n         application.getApplicationId();\n         LOG.info(msg);\n         throw new AccessControlException(msg);\n       }\n \n       // Check submission limits for queues\n       if (getNumApplications() \u003e\u003d getMaxApplications()) {\n         String msg \u003d \"Queue \" + getQueuePath() + \n         \" already has \" + getNumApplications() + \" applications,\" +\n         \" cannot accept submission of application: \" + \n         application.getApplicationId();\n         LOG.info(msg);\n         throw new AccessControlException(msg);\n       }\n \n       // Check submission limits for the user on this queue\n       user \u003d getUser(userName);\n       if (user.getTotalApplications() \u003e\u003d getMaxApplicationsPerUser()) {\n         String msg \u003d \"Queue \" + getQueuePath() + \n         \" already has \" + user.getTotalApplications() + \n         \" applications from user \" + userName + \n         \" cannot accept submission of application: \" + \n         application.getApplicationId();\n         LOG.info(msg);\n         throw new AccessControlException(msg);\n       }\n \n       // Add the application to our data-structures\n       addApplication(application, user);\n     }\n \n     int attemptId \u003d application.getApplicationAttemptId().getAttemptId();\n     metrics.submitApp(userName, attemptId);\n \n     // Inform the parent queue\n     try {\n       parent.submitApplication(application, userName, queue);\n     } catch (AccessControlException ace) {\n       LOG.info(\"Failed to submit application to parent-queue: \" + \n           parent.getQueuePath(), ace);\n       removeApplication(application, user);\n       throw ace;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void submitApplication(FiCaSchedulerApp application, String userName,\n      String queue)  throws AccessControlException {\n    // Careful! Locking order is important!\n\n    // Check queue ACLs\n    UserGroupInformation userUgi \u003d UserGroupInformation.createRemoteUser(userName);\n    if (!hasAccess(QueueACL.SUBMIT_APPLICATIONS, userUgi)) {\n      throw new AccessControlException(\"User \" + userName + \" cannot submit\" +\n          \" applications to queue \" + getQueuePath());\n    }\n\n    User user \u003d null;\n    synchronized (this) {\n\n      // Check if the queue is accepting jobs\n      if (getState() !\u003d QueueState.RUNNING) {\n        String msg \u003d \"Queue \" + getQueuePath() +\n        \" is STOPPED. Cannot accept submission of application: \" +\n        application.getApplicationId();\n        LOG.info(msg);\n        throw new AccessControlException(msg);\n      }\n\n      // Check submission limits for queues\n      if (getNumApplications() \u003e\u003d getMaxApplications()) {\n        String msg \u003d \"Queue \" + getQueuePath() + \n        \" already has \" + getNumApplications() + \" applications,\" +\n        \" cannot accept submission of application: \" + \n        application.getApplicationId();\n        LOG.info(msg);\n        throw new AccessControlException(msg);\n      }\n\n      // Check submission limits for the user on this queue\n      user \u003d getUser(userName);\n      if (user.getTotalApplications() \u003e\u003d getMaxApplicationsPerUser()) {\n        String msg \u003d \"Queue \" + getQueuePath() + \n        \" already has \" + user.getTotalApplications() + \n        \" applications from user \" + userName + \n        \" cannot accept submission of application: \" + \n        application.getApplicationId();\n        LOG.info(msg);\n        throw new AccessControlException(msg);\n      }\n\n      // Add the application to our data-structures\n      addApplication(application, user);\n    }\n\n    int attemptId \u003d application.getApplicationAttemptId().getAttemptId();\n    metrics.submitApp(userName, attemptId);\n\n    // Inform the parent queue\n    try {\n      parent.submitApplication(application, userName, queue);\n    } catch (AccessControlException ace) {\n      LOG.info(\"Failed to submit application to parent-queue: \" + \n          parent.getQueuePath(), ace);\n      removeApplication(application, user);\n      throw ace;\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {
        "oldValue": "[application-SchedulerApp, userName-String, queue-String]",
        "newValue": "[application-FiCaSchedulerApp, userName-String, queue-String]"
      }
    },
    "d74bec2f883b562d377cc564ca86473c498a618a": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3870. Invalid App Metrics (Bhallamudi Venkata Siva Kamesh via tgraves).\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1341160 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/05/12 12:15 PM",
      "commitName": "d74bec2f883b562d377cc564ca86473c498a618a",
      "commitAuthor": "Thomas Graves",
      "commitDateOld": "13/04/12 3:24 PM",
      "commitNameOld": "9a10b4e773ac937b59b458343457bbbd686d7f1e",
      "commitAuthorOld": "Siddharth Seth",
      "daysBetweenCommits": 37.87,
      "commitsBetweenForRepo": 238,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,64 +1,62 @@\n   public void submitApplication(SchedulerApp application, String userName,\n       String queue)  throws AccessControlException {\n     // Careful! Locking order is important!\n \n     // Check queue ACLs\n     UserGroupInformation userUgi \u003d UserGroupInformation.createRemoteUser(userName);\n     if (!hasAccess(QueueACL.SUBMIT_APPLICATIONS, userUgi)) {\n       throw new AccessControlException(\"User \" + userName + \" cannot submit\" +\n           \" applications to queue \" + getQueuePath());\n     }\n \n     User user \u003d null;\n     synchronized (this) {\n \n       // Check if the queue is accepting jobs\n       if (getState() !\u003d QueueState.RUNNING) {\n         String msg \u003d \"Queue \" + getQueuePath() +\n         \" is STOPPED. Cannot accept submission of application: \" +\n         application.getApplicationId();\n         LOG.info(msg);\n         throw new AccessControlException(msg);\n       }\n \n       // Check submission limits for queues\n       if (getNumApplications() \u003e\u003d getMaxApplications()) {\n         String msg \u003d \"Queue \" + getQueuePath() + \n         \" already has \" + getNumApplications() + \" applications,\" +\n         \" cannot accept submission of application: \" + \n         application.getApplicationId();\n         LOG.info(msg);\n         throw new AccessControlException(msg);\n       }\n \n       // Check submission limits for the user on this queue\n       user \u003d getUser(userName);\n       if (user.getTotalApplications() \u003e\u003d getMaxApplicationsPerUser()) {\n         String msg \u003d \"Queue \" + getQueuePath() + \n         \" already has \" + user.getTotalApplications() + \n         \" applications from user \" + userName + \n         \" cannot accept submission of application: \" + \n         application.getApplicationId();\n         LOG.info(msg);\n         throw new AccessControlException(msg);\n       }\n \n       // Add the application to our data-structures\n       addApplication(application, user);\n     }\n \n     int attemptId \u003d application.getApplicationAttemptId().getAttemptId();\n-    if (attemptId \u003d\u003d 1) {\n-      metrics.submitApp(userName);\n-    }\n+    metrics.submitApp(userName, attemptId);\n \n     // Inform the parent queue\n     try {\n       parent.submitApplication(application, userName, queue);\n     } catch (AccessControlException ace) {\n       LOG.info(\"Failed to submit application to parent-queue: \" + \n           parent.getQueuePath(), ace);\n       removeApplication(application, user);\n       throw ace;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void submitApplication(SchedulerApp application, String userName,\n      String queue)  throws AccessControlException {\n    // Careful! Locking order is important!\n\n    // Check queue ACLs\n    UserGroupInformation userUgi \u003d UserGroupInformation.createRemoteUser(userName);\n    if (!hasAccess(QueueACL.SUBMIT_APPLICATIONS, userUgi)) {\n      throw new AccessControlException(\"User \" + userName + \" cannot submit\" +\n          \" applications to queue \" + getQueuePath());\n    }\n\n    User user \u003d null;\n    synchronized (this) {\n\n      // Check if the queue is accepting jobs\n      if (getState() !\u003d QueueState.RUNNING) {\n        String msg \u003d \"Queue \" + getQueuePath() +\n        \" is STOPPED. Cannot accept submission of application: \" +\n        application.getApplicationId();\n        LOG.info(msg);\n        throw new AccessControlException(msg);\n      }\n\n      // Check submission limits for queues\n      if (getNumApplications() \u003e\u003d getMaxApplications()) {\n        String msg \u003d \"Queue \" + getQueuePath() + \n        \" already has \" + getNumApplications() + \" applications,\" +\n        \" cannot accept submission of application: \" + \n        application.getApplicationId();\n        LOG.info(msg);\n        throw new AccessControlException(msg);\n      }\n\n      // Check submission limits for the user on this queue\n      user \u003d getUser(userName);\n      if (user.getTotalApplications() \u003e\u003d getMaxApplicationsPerUser()) {\n        String msg \u003d \"Queue \" + getQueuePath() + \n        \" already has \" + user.getTotalApplications() + \n        \" applications from user \" + userName + \n        \" cannot accept submission of application: \" + \n        application.getApplicationId();\n        LOG.info(msg);\n        throw new AccessControlException(msg);\n      }\n\n      // Add the application to our data-structures\n      addApplication(application, user);\n    }\n\n    int attemptId \u003d application.getApplicationAttemptId().getAttemptId();\n    metrics.submitApp(userName, attemptId);\n\n    // Inform the parent queue\n    try {\n      parent.submitApplication(application, userName, queue);\n    } catch (AccessControlException ace) {\n      LOG.info(\"Failed to submit application to parent-queue: \" + \n          parent.getQueuePath(), ace);\n      removeApplication(application, user);\n      throw ace;\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {}
    },
    "f3cc8911485385713395a04a5b292ae375ff83a3": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3910. Fixed a bug in CapacityScheduler LeafQueue which was causing app-submission to fail. Contributed by John George.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1293750 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/02/12 10:49 PM",
      "commitName": "f3cc8911485385713395a04a5b292ae375ff83a3",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "05/02/12 7:38 PM",
      "commitNameOld": "c7007a8a3508a24a6f023302516fe8fbe270eab1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 20.13,
      "commitsBetweenForRepo": 135,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,69 +1,64 @@\n   public void submitApplication(SchedulerApp application, String userName,\n       String queue)  throws AccessControlException {\n     // Careful! Locking order is important!\n \n     // Check queue ACLs\n-    UserGroupInformation userUgi;\n-    try {\n-      userUgi \u003d UserGroupInformation.getCurrentUser();\n-    } catch (IOException ioe) {\n-      throw new AccessControlException(ioe);\n-    }\n+    UserGroupInformation userUgi \u003d UserGroupInformation.createRemoteUser(userName);\n     if (!hasAccess(QueueACL.SUBMIT_APPLICATIONS, userUgi)) {\n       throw new AccessControlException(\"User \" + userName + \" cannot submit\" +\n           \" applications to queue \" + getQueuePath());\n     }\n \n     User user \u003d null;\n     synchronized (this) {\n \n       // Check if the queue is accepting jobs\n       if (getState() !\u003d QueueState.RUNNING) {\n         String msg \u003d \"Queue \" + getQueuePath() +\n         \" is STOPPED. Cannot accept submission of application: \" +\n         application.getApplicationId();\n         LOG.info(msg);\n         throw new AccessControlException(msg);\n       }\n \n       // Check submission limits for queues\n       if (getNumApplications() \u003e\u003d getMaxApplications()) {\n         String msg \u003d \"Queue \" + getQueuePath() + \n         \" already has \" + getNumApplications() + \" applications,\" +\n         \" cannot accept submission of application: \" + \n         application.getApplicationId();\n         LOG.info(msg);\n         throw new AccessControlException(msg);\n       }\n \n       // Check submission limits for the user on this queue\n       user \u003d getUser(userName);\n       if (user.getTotalApplications() \u003e\u003d getMaxApplicationsPerUser()) {\n         String msg \u003d \"Queue \" + getQueuePath() + \n         \" already has \" + user.getTotalApplications() + \n         \" applications from user \" + userName + \n         \" cannot accept submission of application: \" + \n         application.getApplicationId();\n         LOG.info(msg);\n         throw new AccessControlException(msg);\n       }\n \n       // Add the application to our data-structures\n       addApplication(application, user);\n     }\n \n     int attemptId \u003d application.getApplicationAttemptId().getAttemptId();\n     if (attemptId \u003d\u003d 1) {\n       metrics.submitApp(userName);\n     }\n \n     // Inform the parent queue\n     try {\n       parent.submitApplication(application, userName, queue);\n     } catch (AccessControlException ace) {\n       LOG.info(\"Failed to submit application to parent-queue: \" + \n           parent.getQueuePath(), ace);\n       removeApplication(application, user);\n       throw ace;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void submitApplication(SchedulerApp application, String userName,\n      String queue)  throws AccessControlException {\n    // Careful! Locking order is important!\n\n    // Check queue ACLs\n    UserGroupInformation userUgi \u003d UserGroupInformation.createRemoteUser(userName);\n    if (!hasAccess(QueueACL.SUBMIT_APPLICATIONS, userUgi)) {\n      throw new AccessControlException(\"User \" + userName + \" cannot submit\" +\n          \" applications to queue \" + getQueuePath());\n    }\n\n    User user \u003d null;\n    synchronized (this) {\n\n      // Check if the queue is accepting jobs\n      if (getState() !\u003d QueueState.RUNNING) {\n        String msg \u003d \"Queue \" + getQueuePath() +\n        \" is STOPPED. Cannot accept submission of application: \" +\n        application.getApplicationId();\n        LOG.info(msg);\n        throw new AccessControlException(msg);\n      }\n\n      // Check submission limits for queues\n      if (getNumApplications() \u003e\u003d getMaxApplications()) {\n        String msg \u003d \"Queue \" + getQueuePath() + \n        \" already has \" + getNumApplications() + \" applications,\" +\n        \" cannot accept submission of application: \" + \n        application.getApplicationId();\n        LOG.info(msg);\n        throw new AccessControlException(msg);\n      }\n\n      // Check submission limits for the user on this queue\n      user \u003d getUser(userName);\n      if (user.getTotalApplications() \u003e\u003d getMaxApplicationsPerUser()) {\n        String msg \u003d \"Queue \" + getQueuePath() + \n        \" already has \" + user.getTotalApplications() + \n        \" applications from user \" + userName + \n        \" cannot accept submission of application: \" + \n        application.getApplicationId();\n        LOG.info(msg);\n        throw new AccessControlException(msg);\n      }\n\n      // Add the application to our data-structures\n      addApplication(application, user);\n    }\n\n    int attemptId \u003d application.getApplicationAttemptId().getAttemptId();\n    if (attemptId \u003d\u003d 1) {\n      metrics.submitApp(userName);\n    }\n\n    // Inform the parent queue\n    try {\n      parent.submitApplication(application, userName, queue);\n    } catch (AccessControlException ace) {\n      LOG.info(\"Failed to submit application to parent-queue: \" + \n          parent.getQueuePath(), ace);\n      removeApplication(application, user);\n      throw ace;\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {}
    },
    "72d34e6594371112bb4e9835817b382bd4161a6d": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3708. Metrics: Incorrect Apps Submitted Count (Bhallamudi via mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1239954 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/02/12 4:33 PM",
      "commitName": "72d34e6594371112bb4e9835817b382bd4161a6d",
      "commitAuthor": "Mahadev Konar",
      "commitDateOld": "01/02/12 6:31 PM",
      "commitNameOld": "70bc14f2344f31ec75f512256e8c8c3d36af5e78",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.92,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,66 +1,69 @@\n   public void submitApplication(SchedulerApp application, String userName,\n       String queue)  throws AccessControlException {\n     // Careful! Locking order is important!\n \n     // Check queue ACLs\n     UserGroupInformation userUgi;\n     try {\n       userUgi \u003d UserGroupInformation.getCurrentUser();\n     } catch (IOException ioe) {\n       throw new AccessControlException(ioe);\n     }\n     if (!hasAccess(QueueACL.SUBMIT_APPLICATIONS, userUgi)) {\n       throw new AccessControlException(\"User \" + userName + \" cannot submit\" +\n           \" applications to queue \" + getQueuePath());\n     }\n \n     User user \u003d null;\n     synchronized (this) {\n \n       // Check if the queue is accepting jobs\n       if (getState() !\u003d QueueState.RUNNING) {\n         String msg \u003d \"Queue \" + getQueuePath() +\n         \" is STOPPED. Cannot accept submission of application: \" +\n         application.getApplicationId();\n         LOG.info(msg);\n         throw new AccessControlException(msg);\n       }\n \n       // Check submission limits for queues\n       if (getNumApplications() \u003e\u003d getMaxApplications()) {\n         String msg \u003d \"Queue \" + getQueuePath() + \n         \" already has \" + getNumApplications() + \" applications,\" +\n         \" cannot accept submission of application: \" + \n         application.getApplicationId();\n         LOG.info(msg);\n         throw new AccessControlException(msg);\n       }\n \n       // Check submission limits for the user on this queue\n       user \u003d getUser(userName);\n       if (user.getTotalApplications() \u003e\u003d getMaxApplicationsPerUser()) {\n         String msg \u003d \"Queue \" + getQueuePath() + \n         \" already has \" + user.getTotalApplications() + \n         \" applications from user \" + userName + \n         \" cannot accept submission of application: \" + \n         application.getApplicationId();\n         LOG.info(msg);\n         throw new AccessControlException(msg);\n       }\n \n       // Add the application to our data-structures\n       addApplication(application, user);\n     }\n \n-    metrics.submitApp(userName);\n+    int attemptId \u003d application.getApplicationAttemptId().getAttemptId();\n+    if (attemptId \u003d\u003d 1) {\n+      metrics.submitApp(userName);\n+    }\n \n     // Inform the parent queue\n     try {\n       parent.submitApplication(application, userName, queue);\n     } catch (AccessControlException ace) {\n       LOG.info(\"Failed to submit application to parent-queue: \" + \n           parent.getQueuePath(), ace);\n       removeApplication(application, user);\n       throw ace;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void submitApplication(SchedulerApp application, String userName,\n      String queue)  throws AccessControlException {\n    // Careful! Locking order is important!\n\n    // Check queue ACLs\n    UserGroupInformation userUgi;\n    try {\n      userUgi \u003d UserGroupInformation.getCurrentUser();\n    } catch (IOException ioe) {\n      throw new AccessControlException(ioe);\n    }\n    if (!hasAccess(QueueACL.SUBMIT_APPLICATIONS, userUgi)) {\n      throw new AccessControlException(\"User \" + userName + \" cannot submit\" +\n          \" applications to queue \" + getQueuePath());\n    }\n\n    User user \u003d null;\n    synchronized (this) {\n\n      // Check if the queue is accepting jobs\n      if (getState() !\u003d QueueState.RUNNING) {\n        String msg \u003d \"Queue \" + getQueuePath() +\n        \" is STOPPED. Cannot accept submission of application: \" +\n        application.getApplicationId();\n        LOG.info(msg);\n        throw new AccessControlException(msg);\n      }\n\n      // Check submission limits for queues\n      if (getNumApplications() \u003e\u003d getMaxApplications()) {\n        String msg \u003d \"Queue \" + getQueuePath() + \n        \" already has \" + getNumApplications() + \" applications,\" +\n        \" cannot accept submission of application: \" + \n        application.getApplicationId();\n        LOG.info(msg);\n        throw new AccessControlException(msg);\n      }\n\n      // Check submission limits for the user on this queue\n      user \u003d getUser(userName);\n      if (user.getTotalApplications() \u003e\u003d getMaxApplicationsPerUser()) {\n        String msg \u003d \"Queue \" + getQueuePath() + \n        \" already has \" + user.getTotalApplications() + \n        \" applications from user \" + userName + \n        \" cannot accept submission of application: \" + \n        application.getApplicationId();\n        LOG.info(msg);\n        throw new AccessControlException(msg);\n      }\n\n      // Add the application to our data-structures\n      addApplication(application, user);\n    }\n\n    int attemptId \u003d application.getApplicationAttemptId().getAttemptId();\n    if (attemptId \u003d\u003d 1) {\n      metrics.submitApp(userName);\n    }\n\n    // Inform the parent queue\n    try {\n      parent.submitApplication(application, userName, queue);\n    } catch (AccessControlException ace) {\n      LOG.info(\"Failed to submit application to parent-queue: \" + \n          parent.getQueuePath(), ace);\n      removeApplication(application, user);\n      throw ace;\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {}
    },
    "df2991c0cbc3f35c2640b93680667507c4f810dd": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3104. Implemented Application-acls. (vinodkv)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1186748 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "20/10/11 4:45 AM",
      "commitName": "df2991c0cbc3f35c2640b93680667507c4f810dd",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "11/10/11 11:24 AM",
      "commitNameOld": "b8f0836f9420e71652404c41471653bb15f62a48",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 8.72,
      "commitsBetweenForRepo": 78,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,66 +1,66 @@\n   public void submitApplication(SchedulerApp application, String userName,\n       String queue)  throws AccessControlException {\n     // Careful! Locking order is important!\n \n     // Check queue ACLs\n     UserGroupInformation userUgi;\n     try {\n       userUgi \u003d UserGroupInformation.getCurrentUser();\n     } catch (IOException ioe) {\n       throw new AccessControlException(ioe);\n     }\n-    if (!hasAccess(QueueACL.SUBMIT_JOB, userUgi)) {\n+    if (!hasAccess(QueueACL.SUBMIT_APPLICATIONS, userUgi)) {\n       throw new AccessControlException(\"User \" + userName + \" cannot submit\" +\n-          \" jobs to queue \" + getQueuePath());\n+          \" applications to queue \" + getQueuePath());\n     }\n \n     User user \u003d null;\n     synchronized (this) {\n \n       // Check if the queue is accepting jobs\n       if (getState() !\u003d QueueState.RUNNING) {\n         String msg \u003d \"Queue \" + getQueuePath() +\n         \" is STOPPED. Cannot accept submission of application: \" +\n         application.getApplicationId();\n         LOG.info(msg);\n         throw new AccessControlException(msg);\n       }\n \n       // Check submission limits for queues\n       if (getNumApplications() \u003e\u003d getMaxApplications()) {\n         String msg \u003d \"Queue \" + getQueuePath() + \n         \" already has \" + getNumApplications() + \" applications,\" +\n         \" cannot accept submission of application: \" + \n         application.getApplicationId();\n         LOG.info(msg);\n         throw new AccessControlException(msg);\n       }\n \n       // Check submission limits for the user on this queue\n       user \u003d getUser(userName);\n       if (user.getTotalApplications() \u003e\u003d getMaxApplicationsPerUser()) {\n         String msg \u003d \"Queue \" + getQueuePath() + \n         \" already has \" + user.getTotalApplications() + \n         \" applications from user \" + userName + \n         \" cannot accept submission of application: \" + \n         application.getApplicationId();\n         LOG.info(msg);\n         throw new AccessControlException(msg);\n       }\n \n       // Add the application to our data-structures\n       addApplication(application, user);\n     }\n \n     metrics.submitApp(userName);\n \n     // Inform the parent queue\n     try {\n       parent.submitApplication(application, userName, queue);\n     } catch (AccessControlException ace) {\n       LOG.info(\"Failed to submit application to parent-queue: \" + \n           parent.getQueuePath(), ace);\n       removeApplication(application, user);\n       throw ace;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void submitApplication(SchedulerApp application, String userName,\n      String queue)  throws AccessControlException {\n    // Careful! Locking order is important!\n\n    // Check queue ACLs\n    UserGroupInformation userUgi;\n    try {\n      userUgi \u003d UserGroupInformation.getCurrentUser();\n    } catch (IOException ioe) {\n      throw new AccessControlException(ioe);\n    }\n    if (!hasAccess(QueueACL.SUBMIT_APPLICATIONS, userUgi)) {\n      throw new AccessControlException(\"User \" + userName + \" cannot submit\" +\n          \" applications to queue \" + getQueuePath());\n    }\n\n    User user \u003d null;\n    synchronized (this) {\n\n      // Check if the queue is accepting jobs\n      if (getState() !\u003d QueueState.RUNNING) {\n        String msg \u003d \"Queue \" + getQueuePath() +\n        \" is STOPPED. Cannot accept submission of application: \" +\n        application.getApplicationId();\n        LOG.info(msg);\n        throw new AccessControlException(msg);\n      }\n\n      // Check submission limits for queues\n      if (getNumApplications() \u003e\u003d getMaxApplications()) {\n        String msg \u003d \"Queue \" + getQueuePath() + \n        \" already has \" + getNumApplications() + \" applications,\" +\n        \" cannot accept submission of application: \" + \n        application.getApplicationId();\n        LOG.info(msg);\n        throw new AccessControlException(msg);\n      }\n\n      // Check submission limits for the user on this queue\n      user \u003d getUser(userName);\n      if (user.getTotalApplications() \u003e\u003d getMaxApplicationsPerUser()) {\n        String msg \u003d \"Queue \" + getQueuePath() + \n        \" already has \" + user.getTotalApplications() + \n        \" applications from user \" + userName + \n        \" cannot accept submission of application: \" + \n        application.getApplicationId();\n        LOG.info(msg);\n        throw new AccessControlException(msg);\n      }\n\n      // Add the application to our data-structures\n      addApplication(application, user);\n    }\n\n    metrics.submitApp(userName);\n\n    // Inform the parent queue\n    try {\n      parent.submitApplication(application, userName, queue);\n    } catch (AccessControlException ace) {\n      LOG.info(\"Failed to submit application to parent-queue: \" + \n          parent.getQueuePath(), ace);\n      removeApplication(application, user);\n      throw ace;\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {}
    },
    "6b608aad7d52b524fa94955a538e8b3524d42d93": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2697. Enhance CapacityScheduler to cap concurrently running applications per-queue \u0026 per-user.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1165403 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/09/11 12:49 PM",
      "commitName": "6b608aad7d52b524fa94955a538e8b3524d42d93",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "31/08/11 12:52 PM",
      "commitNameOld": "b9a5fd51904a074a7a33f38266378f0f6f97b531",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 5.0,
      "commitsBetweenForRepo": 17,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,66 +1,66 @@\n   public void submitApplication(SchedulerApp application, String userName,\n       String queue)  throws AccessControlException {\n     // Careful! Locking order is important!\n \n     // Check queue ACLs\n     UserGroupInformation userUgi;\n     try {\n       userUgi \u003d UserGroupInformation.getCurrentUser();\n     } catch (IOException ioe) {\n       throw new AccessControlException(ioe);\n     }\n     if (!hasAccess(QueueACL.SUBMIT_JOB, userUgi)) {\n       throw new AccessControlException(\"User \" + userName + \" cannot submit\" +\n           \" jobs to queue \" + getQueuePath());\n     }\n \n     User user \u003d null;\n     synchronized (this) {\n \n       // Check if the queue is accepting jobs\n-      if (state !\u003d QueueState.RUNNING) {\n+      if (getState() !\u003d QueueState.RUNNING) {\n         String msg \u003d \"Queue \" + getQueuePath() +\n         \" is STOPPED. Cannot accept submission of application: \" +\n         application.getApplicationId();\n         LOG.info(msg);\n         throw new AccessControlException(msg);\n       }\n \n       // Check submission limits for queues\n-      if (getNumApplications() \u003e\u003d maxApplications) {\n+      if (getNumApplications() \u003e\u003d getMaxApplications()) {\n         String msg \u003d \"Queue \" + getQueuePath() + \n         \" already has \" + getNumApplications() + \" applications,\" +\n         \" cannot accept submission of application: \" + \n         application.getApplicationId();\n         LOG.info(msg);\n         throw new AccessControlException(msg);\n       }\n \n       // Check submission limits for the user on this queue\n       user \u003d getUser(userName);\n-      if (user.getApplications() \u003e\u003d maxApplicationsPerUser) {\n+      if (user.getTotalApplications() \u003e\u003d getMaxApplicationsPerUser()) {\n         String msg \u003d \"Queue \" + getQueuePath() + \n-        \" already has \" + user.getApplications() + \n+        \" already has \" + user.getTotalApplications() + \n         \" applications from user \" + userName + \n         \" cannot accept submission of application: \" + \n         application.getApplicationId();\n         LOG.info(msg);\n         throw new AccessControlException(msg);\n       }\n \n       // Add the application to our data-structures\n       addApplication(application, user);\n     }\n \n     metrics.submitApp(userName);\n \n     // Inform the parent queue\n     try {\n       parent.submitApplication(application, userName, queue);\n     } catch (AccessControlException ace) {\n       LOG.info(\"Failed to submit application to parent-queue: \" + \n           parent.getQueuePath(), ace);\n       removeApplication(application, user);\n       throw ace;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void submitApplication(SchedulerApp application, String userName,\n      String queue)  throws AccessControlException {\n    // Careful! Locking order is important!\n\n    // Check queue ACLs\n    UserGroupInformation userUgi;\n    try {\n      userUgi \u003d UserGroupInformation.getCurrentUser();\n    } catch (IOException ioe) {\n      throw new AccessControlException(ioe);\n    }\n    if (!hasAccess(QueueACL.SUBMIT_JOB, userUgi)) {\n      throw new AccessControlException(\"User \" + userName + \" cannot submit\" +\n          \" jobs to queue \" + getQueuePath());\n    }\n\n    User user \u003d null;\n    synchronized (this) {\n\n      // Check if the queue is accepting jobs\n      if (getState() !\u003d QueueState.RUNNING) {\n        String msg \u003d \"Queue \" + getQueuePath() +\n        \" is STOPPED. Cannot accept submission of application: \" +\n        application.getApplicationId();\n        LOG.info(msg);\n        throw new AccessControlException(msg);\n      }\n\n      // Check submission limits for queues\n      if (getNumApplications() \u003e\u003d getMaxApplications()) {\n        String msg \u003d \"Queue \" + getQueuePath() + \n        \" already has \" + getNumApplications() + \" applications,\" +\n        \" cannot accept submission of application: \" + \n        application.getApplicationId();\n        LOG.info(msg);\n        throw new AccessControlException(msg);\n      }\n\n      // Check submission limits for the user on this queue\n      user \u003d getUser(userName);\n      if (user.getTotalApplications() \u003e\u003d getMaxApplicationsPerUser()) {\n        String msg \u003d \"Queue \" + getQueuePath() + \n        \" already has \" + user.getTotalApplications() + \n        \" applications from user \" + userName + \n        \" cannot accept submission of application: \" + \n        application.getApplicationId();\n        LOG.info(msg);\n        throw new AccessControlException(msg);\n      }\n\n      // Add the application to our data-structures\n      addApplication(application, user);\n    }\n\n    metrics.submitApp(userName);\n\n    // Inform the parent queue\n    try {\n      parent.submitApplication(application, userName, queue);\n    } catch (AccessControlException ace) {\n      LOG.info(\"Failed to submit application to parent-queue: \" + \n          parent.getQueuePath(), ace);\n      removeApplication(application, user);\n      throw ace;\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void submitApplication(SchedulerApp application, String userName,\n      String queue)  throws AccessControlException {\n    // Careful! Locking order is important!\n\n    // Check queue ACLs\n    UserGroupInformation userUgi;\n    try {\n      userUgi \u003d UserGroupInformation.getCurrentUser();\n    } catch (IOException ioe) {\n      throw new AccessControlException(ioe);\n    }\n    if (!hasAccess(QueueACL.SUBMIT_JOB, userUgi)) {\n      throw new AccessControlException(\"User \" + userName + \" cannot submit\" +\n          \" jobs to queue \" + getQueuePath());\n    }\n\n    User user \u003d null;\n    synchronized (this) {\n\n      // Check if the queue is accepting jobs\n      if (state !\u003d QueueState.RUNNING) {\n        String msg \u003d \"Queue \" + getQueuePath() +\n        \" is STOPPED. Cannot accept submission of application: \" +\n        application.getApplicationId();\n        LOG.info(msg);\n        throw new AccessControlException(msg);\n      }\n\n      // Check submission limits for queues\n      if (getNumApplications() \u003e\u003d maxApplications) {\n        String msg \u003d \"Queue \" + getQueuePath() + \n        \" already has \" + getNumApplications() + \" applications,\" +\n        \" cannot accept submission of application: \" + \n        application.getApplicationId();\n        LOG.info(msg);\n        throw new AccessControlException(msg);\n      }\n\n      // Check submission limits for the user on this queue\n      user \u003d getUser(userName);\n      if (user.getApplications() \u003e\u003d maxApplicationsPerUser) {\n        String msg \u003d \"Queue \" + getQueuePath() + \n        \" already has \" + user.getApplications() + \n        \" applications from user \" + userName + \n        \" cannot accept submission of application: \" + \n        application.getApplicationId();\n        LOG.info(msg);\n        throw new AccessControlException(msg);\n      }\n\n      // Add the application to our data-structures\n      addApplication(application, user);\n    }\n\n    metrics.submitApp(userName);\n\n    // Inform the parent queue\n    try {\n      parent.submitApplication(application, userName, queue);\n    } catch (AccessControlException ace) {\n      LOG.info(\"Failed to submit application to parent-queue: \" + \n          parent.getQueuePath(), ace);\n      removeApplication(application, user);\n      throw ace;\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,66 @@\n+  public void submitApplication(SchedulerApp application, String userName,\n+      String queue)  throws AccessControlException {\n+    // Careful! Locking order is important!\n+\n+    // Check queue ACLs\n+    UserGroupInformation userUgi;\n+    try {\n+      userUgi \u003d UserGroupInformation.getCurrentUser();\n+    } catch (IOException ioe) {\n+      throw new AccessControlException(ioe);\n+    }\n+    if (!hasAccess(QueueACL.SUBMIT_JOB, userUgi)) {\n+      throw new AccessControlException(\"User \" + userName + \" cannot submit\" +\n+          \" jobs to queue \" + getQueuePath());\n+    }\n+\n+    User user \u003d null;\n+    synchronized (this) {\n+\n+      // Check if the queue is accepting jobs\n+      if (state !\u003d QueueState.RUNNING) {\n+        String msg \u003d \"Queue \" + getQueuePath() +\n+        \" is STOPPED. Cannot accept submission of application: \" +\n+        application.getApplicationId();\n+        LOG.info(msg);\n+        throw new AccessControlException(msg);\n+      }\n+\n+      // Check submission limits for queues\n+      if (getNumApplications() \u003e\u003d maxApplications) {\n+        String msg \u003d \"Queue \" + getQueuePath() + \n+        \" already has \" + getNumApplications() + \" applications,\" +\n+        \" cannot accept submission of application: \" + \n+        application.getApplicationId();\n+        LOG.info(msg);\n+        throw new AccessControlException(msg);\n+      }\n+\n+      // Check submission limits for the user on this queue\n+      user \u003d getUser(userName);\n+      if (user.getApplications() \u003e\u003d maxApplicationsPerUser) {\n+        String msg \u003d \"Queue \" + getQueuePath() + \n+        \" already has \" + user.getApplications() + \n+        \" applications from user \" + userName + \n+        \" cannot accept submission of application: \" + \n+        application.getApplicationId();\n+        LOG.info(msg);\n+        throw new AccessControlException(msg);\n+      }\n+\n+      // Add the application to our data-structures\n+      addApplication(application, user);\n+    }\n+\n+    metrics.submitApp(userName);\n+\n+    // Inform the parent queue\n+    try {\n+      parent.submitApplication(application, userName, queue);\n+    } catch (AccessControlException ace) {\n+      LOG.info(\"Failed to submit application to parent-queue: \" + \n+          parent.getQueuePath(), ace);\n+      removeApplication(application, user);\n+      throw ace;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void submitApplication(SchedulerApp application, String userName,\n      String queue)  throws AccessControlException {\n    // Careful! Locking order is important!\n\n    // Check queue ACLs\n    UserGroupInformation userUgi;\n    try {\n      userUgi \u003d UserGroupInformation.getCurrentUser();\n    } catch (IOException ioe) {\n      throw new AccessControlException(ioe);\n    }\n    if (!hasAccess(QueueACL.SUBMIT_JOB, userUgi)) {\n      throw new AccessControlException(\"User \" + userName + \" cannot submit\" +\n          \" jobs to queue \" + getQueuePath());\n    }\n\n    User user \u003d null;\n    synchronized (this) {\n\n      // Check if the queue is accepting jobs\n      if (state !\u003d QueueState.RUNNING) {\n        String msg \u003d \"Queue \" + getQueuePath() +\n        \" is STOPPED. Cannot accept submission of application: \" +\n        application.getApplicationId();\n        LOG.info(msg);\n        throw new AccessControlException(msg);\n      }\n\n      // Check submission limits for queues\n      if (getNumApplications() \u003e\u003d maxApplications) {\n        String msg \u003d \"Queue \" + getQueuePath() + \n        \" already has \" + getNumApplications() + \" applications,\" +\n        \" cannot accept submission of application: \" + \n        application.getApplicationId();\n        LOG.info(msg);\n        throw new AccessControlException(msg);\n      }\n\n      // Check submission limits for the user on this queue\n      user \u003d getUser(userName);\n      if (user.getApplications() \u003e\u003d maxApplicationsPerUser) {\n        String msg \u003d \"Queue \" + getQueuePath() + \n        \" already has \" + user.getApplications() + \n        \" applications from user \" + userName + \n        \" cannot accept submission of application: \" + \n        application.getApplicationId();\n        LOG.info(msg);\n        throw new AccessControlException(msg);\n      }\n\n      // Add the application to our data-structures\n      addApplication(application, user);\n    }\n\n    metrics.submitApp(userName);\n\n    // Inform the parent queue\n    try {\n      parent.submitApplication(application, userName, queue);\n    } catch (AccessControlException ace) {\n      LOG.info(\"Failed to submit application to parent-queue: \" + \n          parent.getQueuePath(), ace);\n      removeApplication(application, user);\n      throw ace;\n    }\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java"
    }
  }
}