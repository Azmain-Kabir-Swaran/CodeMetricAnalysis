{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ExecutorHelper.java",
  "functionName": "logThrowableFromAfterExecute",
  "functionId": "logThrowableFromAfterExecute___r-Runnable__t-Throwable",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/concurrent/ExecutorHelper.java",
  "functionStartLine": 35,
  "functionEndLine": 66,
  "numCommitsSeen": 3,
  "timeTaken": 836,
  "changeHistory": [
    "6b8122458ede9ececb138bed99d368580e5439a1",
    "d37eb828ffa09d55936964f555ea351b946d286e"
  ],
  "changeHistoryShort": {
    "6b8122458ede9ececb138bed99d368580e5439a1": "Ybodychange",
    "d37eb828ffa09d55936964f555ea351b946d286e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6b8122458ede9ececb138bed99d368580e5439a1": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14966. Handle JDK-8071638 for hadoop-common. Contributed by Bibin A Chundatt.\n",
      "commitDate": "23/10/17 11:12 AM",
      "commitName": "6b8122458ede9ececb138bed99d368580e5439a1",
      "commitAuthor": "Naganarasimha",
      "commitDateOld": "17/07/17 9:32 PM",
      "commitNameOld": "ccaf036662e22da14583942054898c99fa51dae5",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 97.57,
      "commitsBetweenForRepo": 817,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,32 @@\n   static void logThrowableFromAfterExecute(Runnable r, Throwable t) {\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"afterExecute in thread: \" + Thread.currentThread()\n           .getName() + \", runnable type: \" + r.getClass().getName());\n     }\n \n     //For additional information, see: https://docs.oracle\n     // .com/javase/7/docs/api/java/util/concurrent/ThreadPoolExecutor\n-    // .html#afterExecute(java.lang.Runnable,%20java.lang.Throwable) .\n+    // .html#afterExecute(java.lang.Runnable,%20java.lang.Throwable)\n \n-    if (t \u003d\u003d null \u0026\u0026 r instanceof Future\u003c?\u003e) {\n+    // Handle JDK-8071638\n+    if (t \u003d\u003d null \u0026\u0026 r instanceof Future\u003c?\u003e \u0026\u0026 ((Future\u003c?\u003e) r).isDone()) {\n       try {\n         ((Future\u003c?\u003e) r).get();\n       } catch (ExecutionException ee) {\n-        LOG.warn(\"Execution exception when running task in \" +\n-            Thread.currentThread().getName());\n+        LOG.warn(\n+            \"Execution exception when running task in \" + Thread.currentThread()\n+                .getName());\n         t \u003d ee.getCause();\n       } catch (InterruptedException ie) {\n         LOG.warn(\"Thread (\" + Thread.currentThread() + \") interrupted: \", ie);\n         Thread.currentThread().interrupt();\n       } catch (Throwable throwable) {\n         t \u003d throwable;\n       }\n     }\n \n     if (t !\u003d null) {\n       LOG.warn(\"Caught exception in thread \" + Thread\n           .currentThread().getName() + \": \", t);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static void logThrowableFromAfterExecute(Runnable r, Throwable t) {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"afterExecute in thread: \" + Thread.currentThread()\n          .getName() + \", runnable type: \" + r.getClass().getName());\n    }\n\n    //For additional information, see: https://docs.oracle\n    // .com/javase/7/docs/api/java/util/concurrent/ThreadPoolExecutor\n    // .html#afterExecute(java.lang.Runnable,%20java.lang.Throwable)\n\n    // Handle JDK-8071638\n    if (t \u003d\u003d null \u0026\u0026 r instanceof Future\u003c?\u003e \u0026\u0026 ((Future\u003c?\u003e) r).isDone()) {\n      try {\n        ((Future\u003c?\u003e) r).get();\n      } catch (ExecutionException ee) {\n        LOG.warn(\n            \"Execution exception when running task in \" + Thread.currentThread()\n                .getName());\n        t \u003d ee.getCause();\n      } catch (InterruptedException ie) {\n        LOG.warn(\"Thread (\" + Thread.currentThread() + \") interrupted: \", ie);\n        Thread.currentThread().interrupt();\n      } catch (Throwable throwable) {\n        t \u003d throwable;\n      }\n    }\n\n    if (t !\u003d null) {\n      LOG.warn(\"Caught exception in thread \" + Thread\n          .currentThread().getName() + \": \", t);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/concurrent/ExecutorHelper.java",
      "extendedDetails": {}
    },
    "d37eb828ffa09d55936964f555ea351b946d286e": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-12749. Create a threadpoolexecutor that overrides afterExecute to log uncaught exceptions/errors. Contributed by Sidharta Seethana.\n",
      "commitDate": "08/02/16 6:49 AM",
      "commitName": "d37eb828ffa09d55936964f555ea351b946d286e",
      "commitAuthor": "Varun Vasudev",
      "diff": "@@ -0,0 +1,30 @@\n+  static void logThrowableFromAfterExecute(Runnable r, Throwable t) {\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"afterExecute in thread: \" + Thread.currentThread()\n+          .getName() + \", runnable type: \" + r.getClass().getName());\n+    }\n+\n+    //For additional information, see: https://docs.oracle\n+    // .com/javase/7/docs/api/java/util/concurrent/ThreadPoolExecutor\n+    // .html#afterExecute(java.lang.Runnable,%20java.lang.Throwable) .\n+\n+    if (t \u003d\u003d null \u0026\u0026 r instanceof Future\u003c?\u003e) {\n+      try {\n+        ((Future\u003c?\u003e) r).get();\n+      } catch (ExecutionException ee) {\n+        LOG.warn(\"Execution exception when running task in \" +\n+            Thread.currentThread().getName());\n+        t \u003d ee.getCause();\n+      } catch (InterruptedException ie) {\n+        LOG.warn(\"Thread (\" + Thread.currentThread() + \") interrupted: \", ie);\n+        Thread.currentThread().interrupt();\n+      } catch (Throwable throwable) {\n+        t \u003d throwable;\n+      }\n+    }\n+\n+    if (t !\u003d null) {\n+      LOG.warn(\"Caught exception in thread \" + Thread\n+          .currentThread().getName() + \": \", t);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  static void logThrowableFromAfterExecute(Runnable r, Throwable t) {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"afterExecute in thread: \" + Thread.currentThread()\n          .getName() + \", runnable type: \" + r.getClass().getName());\n    }\n\n    //For additional information, see: https://docs.oracle\n    // .com/javase/7/docs/api/java/util/concurrent/ThreadPoolExecutor\n    // .html#afterExecute(java.lang.Runnable,%20java.lang.Throwable) .\n\n    if (t \u003d\u003d null \u0026\u0026 r instanceof Future\u003c?\u003e) {\n      try {\n        ((Future\u003c?\u003e) r).get();\n      } catch (ExecutionException ee) {\n        LOG.warn(\"Execution exception when running task in \" +\n            Thread.currentThread().getName());\n        t \u003d ee.getCause();\n      } catch (InterruptedException ie) {\n        LOG.warn(\"Thread (\" + Thread.currentThread() + \") interrupted: \", ie);\n        Thread.currentThread().interrupt();\n      } catch (Throwable throwable) {\n        t \u003d throwable;\n      }\n    }\n\n    if (t !\u003d null) {\n      LOG.warn(\"Caught exception in thread \" + Thread\n          .currentThread().getName() + \": \", t);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/concurrent/ExecutorHelper.java"
    }
  }
}