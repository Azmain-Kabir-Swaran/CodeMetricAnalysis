{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AuthenticationFilter.java",
  "functionName": "createAuthCookie",
  "functionId": "createAuthCookie___resp-HttpServletResponse__token-String__domain-String__path-String__expires-long__isCookiePersistent-boolean__isSecure-boolean",
  "sourceFilePath": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/server/AuthenticationFilter.java",
  "functionStartLine": 663,
  "functionEndLine": 695,
  "numCommitsSeen": 64,
  "timeTaken": 3490,
  "changeHistory": [
    "e20b19543ba148cf0242884a3e553ad2f39421b3",
    "a815cc157ceb24e02189634a85abed8e874568e0",
    "5c900b522e70b512498ab7689f56eb1c5e4b963f",
    "156e6a4f8aed69febec408af423b2a8ac313c643",
    "4ac6e1d8951149e194eeab0fa4e0463d113732c4",
    "95ebf9ecc4809b8a977a0a847515649486a004c4",
    "2b016dac8232e0f5c43293adcbdf7164f5fca74c",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "a0f120ce68dddb0cb31b64c89f3224313f3cb5af"
  ],
  "changeHistoryShort": {
    "e20b19543ba148cf0242884a3e553ad2f39421b3": "Ybodychange",
    "a815cc157ceb24e02189634a85abed8e874568e0": "Ymultichange(Yparameterchange,Ybodychange)",
    "5c900b522e70b512498ab7689f56eb1c5e4b963f": "Ybodychange",
    "156e6a4f8aed69febec408af423b2a8ac313c643": "Ybodychange",
    "4ac6e1d8951149e194eeab0fa4e0463d113732c4": "Ybodychange",
    "95ebf9ecc4809b8a977a0a847515649486a004c4": "Ymultichange(Yrename,Yparameterchange,Yreturntypechange,Ymodifierchange,Ybodychange)",
    "2b016dac8232e0f5c43293adcbdf7164f5fca74c": "Yfilerename",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "a0f120ce68dddb0cb31b64c89f3224313f3cb5af": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e20b19543ba148cf0242884a3e553ad2f39421b3": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15681. AuthenticationFilter should generate valid date format for Set-Cookie header regardless of default Locale. Contributed by Cao Manh Dat.\n",
      "commitDate": "01/08/19 5:35 PM",
      "commitName": "e20b19543ba148cf0242884a3e553ad2f39421b3",
      "commitAuthor": "Wei-Chiu Chuang",
      "commitDateOld": "08/06/17 9:34 PM",
      "commitNameOld": "0202480742b8539aa7aa1e94dc9cab75d863cc4e",
      "commitAuthorOld": "Xiao Chen",
      "daysBetweenCommits": 783.83,
      "commitsBetweenForRepo": 6369,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,33 @@\n   public static void createAuthCookie(HttpServletResponse resp, String token,\n                                       String domain, String path, long expires,\n                                       boolean isCookiePersistent,\n                                       boolean isSecure) {\n     StringBuilder sb \u003d new StringBuilder(AuthenticatedURL.AUTH_COOKIE)\n                            .append(\"\u003d\");\n     if (token !\u003d null \u0026\u0026 token.length() \u003e 0) {\n       sb.append(\"\\\"\").append(token).append(\"\\\"\");\n     }\n \n     if (path !\u003d null) {\n       sb.append(\"; Path\u003d\").append(path);\n     }\n \n     if (domain !\u003d null) {\n       sb.append(\"; Domain\u003d\").append(domain);\n     }\n \n     if (expires \u003e\u003d 0 \u0026\u0026 isCookiePersistent) {\n       Date date \u003d new Date(expires);\n       SimpleDateFormat df \u003d new SimpleDateFormat(\"EEE, \" +\n-              \"dd-MMM-yyyy HH:mm:ss zzz\");\n+              \"dd-MMM-yyyy HH:mm:ss zzz\", Locale.US);\n       df.setTimeZone(TimeZone.getTimeZone(\"GMT\"));\n       sb.append(\"; Expires\u003d\").append(df.format(date));\n     }\n \n     if (isSecure) {\n       sb.append(\"; Secure\");\n     }\n \n     sb.append(\"; HttpOnly\");\n     resp.addHeader(\"Set-Cookie\", sb.toString());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void createAuthCookie(HttpServletResponse resp, String token,\n                                      String domain, String path, long expires,\n                                      boolean isCookiePersistent,\n                                      boolean isSecure) {\n    StringBuilder sb \u003d new StringBuilder(AuthenticatedURL.AUTH_COOKIE)\n                           .append(\"\u003d\");\n    if (token !\u003d null \u0026\u0026 token.length() \u003e 0) {\n      sb.append(\"\\\"\").append(token).append(\"\\\"\");\n    }\n\n    if (path !\u003d null) {\n      sb.append(\"; Path\u003d\").append(path);\n    }\n\n    if (domain !\u003d null) {\n      sb.append(\"; Domain\u003d\").append(domain);\n    }\n\n    if (expires \u003e\u003d 0 \u0026\u0026 isCookiePersistent) {\n      Date date \u003d new Date(expires);\n      SimpleDateFormat df \u003d new SimpleDateFormat(\"EEE, \" +\n              \"dd-MMM-yyyy HH:mm:ss zzz\", Locale.US);\n      df.setTimeZone(TimeZone.getTimeZone(\"GMT\"));\n      sb.append(\"; Expires\u003d\").append(df.format(date));\n    }\n\n    if (isSecure) {\n      sb.append(\"; Secure\");\n    }\n\n    sb.append(\"; HttpOnly\");\n    resp.addHeader(\"Set-Cookie\", sb.toString());\n  }",
      "path": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/server/AuthenticationFilter.java",
      "extendedDetails": {}
    },
    "a815cc157ceb24e02189634a85abed8e874568e0": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-12049. Control http authentication cookie persistence via configuration. Contributed by Huizhi Lu.\n",
      "commitDate": "24/06/15 3:59 PM",
      "commitName": "a815cc157ceb24e02189634a85abed8e874568e0",
      "commitAuthor": "Benoy Antony",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-12049. Control http authentication cookie persistence via configuration. Contributed by Huizhi Lu.\n",
          "commitDate": "24/06/15 3:59 PM",
          "commitName": "a815cc157ceb24e02189634a85abed8e874568e0",
          "commitAuthor": "Benoy Antony",
          "commitDateOld": "27/04/15 1:25 PM",
          "commitNameOld": "9fec02c069f9bb24b5ee99031917075b4c7a7682",
          "commitAuthorOld": "Robert Kanter",
          "daysBetweenCommits": 58.11,
          "commitsBetweenForRepo": 520,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,32 +1,33 @@\n   public static void createAuthCookie(HttpServletResponse resp, String token,\n                                       String domain, String path, long expires,\n+                                      boolean isCookiePersistent,\n                                       boolean isSecure) {\n     StringBuilder sb \u003d new StringBuilder(AuthenticatedURL.AUTH_COOKIE)\n                            .append(\"\u003d\");\n     if (token !\u003d null \u0026\u0026 token.length() \u003e 0) {\n       sb.append(\"\\\"\").append(token).append(\"\\\"\");\n     }\n \n     if (path !\u003d null) {\n       sb.append(\"; Path\u003d\").append(path);\n     }\n \n     if (domain !\u003d null) {\n       sb.append(\"; Domain\u003d\").append(domain);\n     }\n \n-    if (expires \u003e\u003d 0) {\n+    if (expires \u003e\u003d 0 \u0026\u0026 isCookiePersistent) {\n       Date date \u003d new Date(expires);\n       SimpleDateFormat df \u003d new SimpleDateFormat(\"EEE, \" +\n               \"dd-MMM-yyyy HH:mm:ss zzz\");\n       df.setTimeZone(TimeZone.getTimeZone(\"GMT\"));\n       sb.append(\"; Expires\u003d\").append(df.format(date));\n     }\n \n     if (isSecure) {\n       sb.append(\"; Secure\");\n     }\n \n     sb.append(\"; HttpOnly\");\n     resp.addHeader(\"Set-Cookie\", sb.toString());\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void createAuthCookie(HttpServletResponse resp, String token,\n                                      String domain, String path, long expires,\n                                      boolean isCookiePersistent,\n                                      boolean isSecure) {\n    StringBuilder sb \u003d new StringBuilder(AuthenticatedURL.AUTH_COOKIE)\n                           .append(\"\u003d\");\n    if (token !\u003d null \u0026\u0026 token.length() \u003e 0) {\n      sb.append(\"\\\"\").append(token).append(\"\\\"\");\n    }\n\n    if (path !\u003d null) {\n      sb.append(\"; Path\u003d\").append(path);\n    }\n\n    if (domain !\u003d null) {\n      sb.append(\"; Domain\u003d\").append(domain);\n    }\n\n    if (expires \u003e\u003d 0 \u0026\u0026 isCookiePersistent) {\n      Date date \u003d new Date(expires);\n      SimpleDateFormat df \u003d new SimpleDateFormat(\"EEE, \" +\n              \"dd-MMM-yyyy HH:mm:ss zzz\");\n      df.setTimeZone(TimeZone.getTimeZone(\"GMT\"));\n      sb.append(\"; Expires\u003d\").append(df.format(date));\n    }\n\n    if (isSecure) {\n      sb.append(\"; Secure\");\n    }\n\n    sb.append(\"; HttpOnly\");\n    resp.addHeader(\"Set-Cookie\", sb.toString());\n  }",
          "path": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/server/AuthenticationFilter.java",
          "extendedDetails": {
            "oldValue": "[resp-HttpServletResponse, token-String, domain-String, path-String, expires-long, isSecure-boolean]",
            "newValue": "[resp-HttpServletResponse, token-String, domain-String, path-String, expires-long, isCookiePersistent-boolean, isSecure-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-12049. Control http authentication cookie persistence via configuration. Contributed by Huizhi Lu.\n",
          "commitDate": "24/06/15 3:59 PM",
          "commitName": "a815cc157ceb24e02189634a85abed8e874568e0",
          "commitAuthor": "Benoy Antony",
          "commitDateOld": "27/04/15 1:25 PM",
          "commitNameOld": "9fec02c069f9bb24b5ee99031917075b4c7a7682",
          "commitAuthorOld": "Robert Kanter",
          "daysBetweenCommits": 58.11,
          "commitsBetweenForRepo": 520,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,32 +1,33 @@\n   public static void createAuthCookie(HttpServletResponse resp, String token,\n                                       String domain, String path, long expires,\n+                                      boolean isCookiePersistent,\n                                       boolean isSecure) {\n     StringBuilder sb \u003d new StringBuilder(AuthenticatedURL.AUTH_COOKIE)\n                            .append(\"\u003d\");\n     if (token !\u003d null \u0026\u0026 token.length() \u003e 0) {\n       sb.append(\"\\\"\").append(token).append(\"\\\"\");\n     }\n \n     if (path !\u003d null) {\n       sb.append(\"; Path\u003d\").append(path);\n     }\n \n     if (domain !\u003d null) {\n       sb.append(\"; Domain\u003d\").append(domain);\n     }\n \n-    if (expires \u003e\u003d 0) {\n+    if (expires \u003e\u003d 0 \u0026\u0026 isCookiePersistent) {\n       Date date \u003d new Date(expires);\n       SimpleDateFormat df \u003d new SimpleDateFormat(\"EEE, \" +\n               \"dd-MMM-yyyy HH:mm:ss zzz\");\n       df.setTimeZone(TimeZone.getTimeZone(\"GMT\"));\n       sb.append(\"; Expires\u003d\").append(df.format(date));\n     }\n \n     if (isSecure) {\n       sb.append(\"; Secure\");\n     }\n \n     sb.append(\"; HttpOnly\");\n     resp.addHeader(\"Set-Cookie\", sb.toString());\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void createAuthCookie(HttpServletResponse resp, String token,\n                                      String domain, String path, long expires,\n                                      boolean isCookiePersistent,\n                                      boolean isSecure) {\n    StringBuilder sb \u003d new StringBuilder(AuthenticatedURL.AUTH_COOKIE)\n                           .append(\"\u003d\");\n    if (token !\u003d null \u0026\u0026 token.length() \u003e 0) {\n      sb.append(\"\\\"\").append(token).append(\"\\\"\");\n    }\n\n    if (path !\u003d null) {\n      sb.append(\"; Path\u003d\").append(path);\n    }\n\n    if (domain !\u003d null) {\n      sb.append(\"; Domain\u003d\").append(domain);\n    }\n\n    if (expires \u003e\u003d 0 \u0026\u0026 isCookiePersistent) {\n      Date date \u003d new Date(expires);\n      SimpleDateFormat df \u003d new SimpleDateFormat(\"EEE, \" +\n              \"dd-MMM-yyyy HH:mm:ss zzz\");\n      df.setTimeZone(TimeZone.getTimeZone(\"GMT\"));\n      sb.append(\"; Expires\u003d\").append(df.format(date));\n    }\n\n    if (isSecure) {\n      sb.append(\"; Secure\");\n    }\n\n    sb.append(\"; HttpOnly\");\n    resp.addHeader(\"Set-Cookie\", sb.toString());\n  }",
          "path": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/server/AuthenticationFilter.java",
          "extendedDetails": {}
        }
      ]
    },
    "5c900b522e70b512498ab7689f56eb1c5e4b963f": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11068. Match hadoop.auth cookie format to jetty output. Contributed by Gregory Chanan.\n",
      "commitDate": "29/10/14 11:18 AM",
      "commitName": "5c900b522e70b512498ab7689f56eb1c5e4b963f",
      "commitAuthor": "cnauroth",
      "commitDateOld": "15/09/14 5:05 PM",
      "commitNameOld": "932ae036acb96634c5dd435d57ba02ce4d5e8918",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 43.76,
      "commitsBetweenForRepo": 451,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,32 @@\n   public static void createAuthCookie(HttpServletResponse resp, String token,\n                                       String domain, String path, long expires,\n                                       boolean isSecure) {\n     StringBuilder sb \u003d new StringBuilder(AuthenticatedURL.AUTH_COOKIE)\n                            .append(\"\u003d\");\n     if (token !\u003d null \u0026\u0026 token.length() \u003e 0) {\n-      sb.append(token);\n+      sb.append(\"\\\"\").append(token).append(\"\\\"\");\n     }\n-    sb.append(\"; Version\u003d1\");\n \n     if (path !\u003d null) {\n       sb.append(\"; Path\u003d\").append(path);\n     }\n \n     if (domain !\u003d null) {\n       sb.append(\"; Domain\u003d\").append(domain);\n     }\n \n     if (expires \u003e\u003d 0) {\n       Date date \u003d new Date(expires);\n       SimpleDateFormat df \u003d new SimpleDateFormat(\"EEE, \" +\n               \"dd-MMM-yyyy HH:mm:ss zzz\");\n       df.setTimeZone(TimeZone.getTimeZone(\"GMT\"));\n       sb.append(\"; Expires\u003d\").append(df.format(date));\n     }\n \n     if (isSecure) {\n       sb.append(\"; Secure\");\n     }\n \n     sb.append(\"; HttpOnly\");\n     resp.addHeader(\"Set-Cookie\", sb.toString());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void createAuthCookie(HttpServletResponse resp, String token,\n                                      String domain, String path, long expires,\n                                      boolean isSecure) {\n    StringBuilder sb \u003d new StringBuilder(AuthenticatedURL.AUTH_COOKIE)\n                           .append(\"\u003d\");\n    if (token !\u003d null \u0026\u0026 token.length() \u003e 0) {\n      sb.append(\"\\\"\").append(token).append(\"\\\"\");\n    }\n\n    if (path !\u003d null) {\n      sb.append(\"; Path\u003d\").append(path);\n    }\n\n    if (domain !\u003d null) {\n      sb.append(\"; Domain\u003d\").append(domain);\n    }\n\n    if (expires \u003e\u003d 0) {\n      Date date \u003d new Date(expires);\n      SimpleDateFormat df \u003d new SimpleDateFormat(\"EEE, \" +\n              \"dd-MMM-yyyy HH:mm:ss zzz\");\n      df.setTimeZone(TimeZone.getTimeZone(\"GMT\"));\n      sb.append(\"; Expires\u003d\").append(df.format(date));\n    }\n\n    if (isSecure) {\n      sb.append(\"; Secure\");\n    }\n\n    sb.append(\"; HttpOnly\");\n    resp.addHeader(\"Set-Cookie\", sb.toString());\n  }",
      "path": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/server/AuthenticationFilter.java",
      "extendedDetails": {}
    },
    "156e6a4f8aed69febec408af423b2a8ac313c643": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10911. hadoop.auth cookie after HADOOP-10710 still not proper according to RFC2109. (gchanan via tucu)\n",
      "commitDate": "29/08/14 11:23 AM",
      "commitName": "156e6a4f8aed69febec408af423b2a8ac313c643",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "11/08/14 5:10 PM",
      "commitNameOld": "6d7a6766bd55b355e44dbdcc4dfa22b050b1a509",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 17.76,
      "commitsBetweenForRepo": 144,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,33 @@\n   public static void createAuthCookie(HttpServletResponse resp, String token,\n                                       String domain, String path, long expires,\n                                       boolean isSecure) {\n     StringBuilder sb \u003d new StringBuilder(AuthenticatedURL.AUTH_COOKIE)\n                            .append(\"\u003d\");\n     if (token !\u003d null \u0026\u0026 token.length() \u003e 0) {\n-      sb.append(\"\\\"\")\n-          .append(token)\n-          .append(\"\\\"\");\n+      sb.append(token);\n     }\n     sb.append(\"; Version\u003d1\");\n \n     if (path !\u003d null) {\n       sb.append(\"; Path\u003d\").append(path);\n     }\n \n     if (domain !\u003d null) {\n       sb.append(\"; Domain\u003d\").append(domain);\n     }\n \n     if (expires \u003e\u003d 0) {\n       Date date \u003d new Date(expires);\n       SimpleDateFormat df \u003d new SimpleDateFormat(\"EEE, \" +\n               \"dd-MMM-yyyy HH:mm:ss zzz\");\n       df.setTimeZone(TimeZone.getTimeZone(\"GMT\"));\n       sb.append(\"; Expires\u003d\").append(df.format(date));\n     }\n \n     if (isSecure) {\n       sb.append(\"; Secure\");\n     }\n \n     sb.append(\"; HttpOnly\");\n     resp.addHeader(\"Set-Cookie\", sb.toString());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void createAuthCookie(HttpServletResponse resp, String token,\n                                      String domain, String path, long expires,\n                                      boolean isSecure) {\n    StringBuilder sb \u003d new StringBuilder(AuthenticatedURL.AUTH_COOKIE)\n                           .append(\"\u003d\");\n    if (token !\u003d null \u0026\u0026 token.length() \u003e 0) {\n      sb.append(token);\n    }\n    sb.append(\"; Version\u003d1\");\n\n    if (path !\u003d null) {\n      sb.append(\"; Path\u003d\").append(path);\n    }\n\n    if (domain !\u003d null) {\n      sb.append(\"; Domain\u003d\").append(domain);\n    }\n\n    if (expires \u003e\u003d 0) {\n      Date date \u003d new Date(expires);\n      SimpleDateFormat df \u003d new SimpleDateFormat(\"EEE, \" +\n              \"dd-MMM-yyyy HH:mm:ss zzz\");\n      df.setTimeZone(TimeZone.getTimeZone(\"GMT\"));\n      sb.append(\"; Expires\u003d\").append(df.format(date));\n    }\n\n    if (isSecure) {\n      sb.append(\"; Secure\");\n    }\n\n    sb.append(\"; HttpOnly\");\n    resp.addHeader(\"Set-Cookie\", sb.toString());\n  }",
      "path": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/server/AuthenticationFilter.java",
      "extendedDetails": {}
    },
    "4ac6e1d8951149e194eeab0fa4e0463d113732c4": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10710. hadoop.auth cookie is not properly constructed according to RFC2109. (Juan Yu via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1606923 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/06/14 1:41 PM",
      "commitName": "4ac6e1d8951149e194eeab0fa4e0463d113732c4",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "24/06/14 3:31 AM",
      "commitNameOld": "22b9a60964ad5c30270bc4b259c46f6a6e879a2e",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 6.42,
      "commitsBetweenForRepo": 45,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,35 @@\n   public static void createAuthCookie(HttpServletResponse resp, String token,\n                                       String domain, String path, long expires,\n                                       boolean isSecure) {\n-    StringBuilder sb \u003d new StringBuilder(AuthenticatedURL.AUTH_COOKIE).append\n-            (\"\u003d\").append(token);\n+    StringBuilder sb \u003d new StringBuilder(AuthenticatedURL.AUTH_COOKIE)\n+                           .append(\"\u003d\");\n+    if (token !\u003d null \u0026\u0026 token.length() \u003e 0) {\n+      sb.append(\"\\\"\")\n+          .append(token)\n+          .append(\"\\\"\");\n+    }\n+    sb.append(\"; Version\u003d1\");\n \n     if (path !\u003d null) {\n       sb.append(\"; Path\u003d\").append(path);\n     }\n \n     if (domain !\u003d null) {\n       sb.append(\"; Domain\u003d\").append(domain);\n     }\n \n     if (expires \u003e\u003d 0) {\n       Date date \u003d new Date(expires);\n       SimpleDateFormat df \u003d new SimpleDateFormat(\"EEE, \" +\n               \"dd-MMM-yyyy HH:mm:ss zzz\");\n       df.setTimeZone(TimeZone.getTimeZone(\"GMT\"));\n       sb.append(\"; Expires\u003d\").append(df.format(date));\n     }\n \n     if (isSecure) {\n       sb.append(\"; Secure\");\n     }\n \n     sb.append(\"; HttpOnly\");\n     resp.addHeader(\"Set-Cookie\", sb.toString());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void createAuthCookie(HttpServletResponse resp, String token,\n                                      String domain, String path, long expires,\n                                      boolean isSecure) {\n    StringBuilder sb \u003d new StringBuilder(AuthenticatedURL.AUTH_COOKIE)\n                           .append(\"\u003d\");\n    if (token !\u003d null \u0026\u0026 token.length() \u003e 0) {\n      sb.append(\"\\\"\")\n          .append(token)\n          .append(\"\\\"\");\n    }\n    sb.append(\"; Version\u003d1\");\n\n    if (path !\u003d null) {\n      sb.append(\"; Path\u003d\").append(path);\n    }\n\n    if (domain !\u003d null) {\n      sb.append(\"; Domain\u003d\").append(domain);\n    }\n\n    if (expires \u003e\u003d 0) {\n      Date date \u003d new Date(expires);\n      SimpleDateFormat df \u003d new SimpleDateFormat(\"EEE, \" +\n              \"dd-MMM-yyyy HH:mm:ss zzz\");\n      df.setTimeZone(TimeZone.getTimeZone(\"GMT\"));\n      sb.append(\"; Expires\u003d\").append(df.format(date));\n    }\n\n    if (isSecure) {\n      sb.append(\"; Secure\");\n    }\n\n    sb.append(\"; HttpOnly\");\n    resp.addHeader(\"Set-Cookie\", sb.toString());\n  }",
      "path": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/server/AuthenticationFilter.java",
      "extendedDetails": {}
    },
    "95ebf9ecc4809b8a977a0a847515649486a004c4": {
      "type": "Ymultichange(Yrename,Yparameterchange,Yreturntypechange,Ymodifierchange,Ybodychange)",
      "commitMessage": "HADOOP-10379. Protect authentication cookies with the HttpOnly and Secure flags. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1574283 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/03/14 5:48 PM",
      "commitName": "95ebf9ecc4809b8a977a0a847515649486a004c4",
      "commitAuthor": "Haohui Mai",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "HADOOP-10379. Protect authentication cookies with the HttpOnly and Secure flags. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1574283 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "04/03/14 5:48 PM",
          "commitName": "95ebf9ecc4809b8a977a0a847515649486a004c4",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "12/06/12 7:22 PM",
          "commitNameOld": "5a2e0ee4d293ed4e5da32edc7331ae350432def6",
          "commitAuthorOld": "Alejandro Abdelnur",
          "daysBetweenCommits": 629.98,
          "commitsBetweenForRepo": 3840,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,29 @@\n-  protected Cookie createCookie(String token) {\n-    Cookie cookie \u003d new Cookie(AuthenticatedURL.AUTH_COOKIE, token);\n-    if (getCookieDomain() !\u003d null) {\n-      cookie.setDomain(getCookieDomain());\n+  public static void createAuthCookie(HttpServletResponse resp, String token,\n+                                      String domain, String path, long expires,\n+                                      boolean isSecure) {\n+    StringBuilder sb \u003d new StringBuilder(AuthenticatedURL.AUTH_COOKIE).append\n+            (\"\u003d\").append(token);\n+\n+    if (path !\u003d null) {\n+      sb.append(\"; Path\u003d\").append(path);\n     }\n-    if (getCookiePath() !\u003d null) {\n-      cookie.setPath(getCookiePath());\n+\n+    if (domain !\u003d null) {\n+      sb.append(\"; Domain\u003d\").append(domain);\n     }\n-    return cookie;\n+\n+    if (expires \u003e\u003d 0) {\n+      Date date \u003d new Date(expires);\n+      SimpleDateFormat df \u003d new SimpleDateFormat(\"EEE, \" +\n+              \"dd-MMM-yyyy HH:mm:ss zzz\");\n+      df.setTimeZone(TimeZone.getTimeZone(\"GMT\"));\n+      sb.append(\"; Expires\u003d\").append(df.format(date));\n+    }\n+\n+    if (isSecure) {\n+      sb.append(\"; Secure\");\n+    }\n+\n+    sb.append(\"; HttpOnly\");\n+    resp.addHeader(\"Set-Cookie\", sb.toString());\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void createAuthCookie(HttpServletResponse resp, String token,\n                                      String domain, String path, long expires,\n                                      boolean isSecure) {\n    StringBuilder sb \u003d new StringBuilder(AuthenticatedURL.AUTH_COOKIE).append\n            (\"\u003d\").append(token);\n\n    if (path !\u003d null) {\n      sb.append(\"; Path\u003d\").append(path);\n    }\n\n    if (domain !\u003d null) {\n      sb.append(\"; Domain\u003d\").append(domain);\n    }\n\n    if (expires \u003e\u003d 0) {\n      Date date \u003d new Date(expires);\n      SimpleDateFormat df \u003d new SimpleDateFormat(\"EEE, \" +\n              \"dd-MMM-yyyy HH:mm:ss zzz\");\n      df.setTimeZone(TimeZone.getTimeZone(\"GMT\"));\n      sb.append(\"; Expires\u003d\").append(df.format(date));\n    }\n\n    if (isSecure) {\n      sb.append(\"; Secure\");\n    }\n\n    sb.append(\"; HttpOnly\");\n    resp.addHeader(\"Set-Cookie\", sb.toString());\n  }",
          "path": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/server/AuthenticationFilter.java",
          "extendedDetails": {
            "oldValue": "createCookie",
            "newValue": "createAuthCookie"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-10379. Protect authentication cookies with the HttpOnly and Secure flags. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1574283 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "04/03/14 5:48 PM",
          "commitName": "95ebf9ecc4809b8a977a0a847515649486a004c4",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "12/06/12 7:22 PM",
          "commitNameOld": "5a2e0ee4d293ed4e5da32edc7331ae350432def6",
          "commitAuthorOld": "Alejandro Abdelnur",
          "daysBetweenCommits": 629.98,
          "commitsBetweenForRepo": 3840,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,29 @@\n-  protected Cookie createCookie(String token) {\n-    Cookie cookie \u003d new Cookie(AuthenticatedURL.AUTH_COOKIE, token);\n-    if (getCookieDomain() !\u003d null) {\n-      cookie.setDomain(getCookieDomain());\n+  public static void createAuthCookie(HttpServletResponse resp, String token,\n+                                      String domain, String path, long expires,\n+                                      boolean isSecure) {\n+    StringBuilder sb \u003d new StringBuilder(AuthenticatedURL.AUTH_COOKIE).append\n+            (\"\u003d\").append(token);\n+\n+    if (path !\u003d null) {\n+      sb.append(\"; Path\u003d\").append(path);\n     }\n-    if (getCookiePath() !\u003d null) {\n-      cookie.setPath(getCookiePath());\n+\n+    if (domain !\u003d null) {\n+      sb.append(\"; Domain\u003d\").append(domain);\n     }\n-    return cookie;\n+\n+    if (expires \u003e\u003d 0) {\n+      Date date \u003d new Date(expires);\n+      SimpleDateFormat df \u003d new SimpleDateFormat(\"EEE, \" +\n+              \"dd-MMM-yyyy HH:mm:ss zzz\");\n+      df.setTimeZone(TimeZone.getTimeZone(\"GMT\"));\n+      sb.append(\"; Expires\u003d\").append(df.format(date));\n+    }\n+\n+    if (isSecure) {\n+      sb.append(\"; Secure\");\n+    }\n+\n+    sb.append(\"; HttpOnly\");\n+    resp.addHeader(\"Set-Cookie\", sb.toString());\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void createAuthCookie(HttpServletResponse resp, String token,\n                                      String domain, String path, long expires,\n                                      boolean isSecure) {\n    StringBuilder sb \u003d new StringBuilder(AuthenticatedURL.AUTH_COOKIE).append\n            (\"\u003d\").append(token);\n\n    if (path !\u003d null) {\n      sb.append(\"; Path\u003d\").append(path);\n    }\n\n    if (domain !\u003d null) {\n      sb.append(\"; Domain\u003d\").append(domain);\n    }\n\n    if (expires \u003e\u003d 0) {\n      Date date \u003d new Date(expires);\n      SimpleDateFormat df \u003d new SimpleDateFormat(\"EEE, \" +\n              \"dd-MMM-yyyy HH:mm:ss zzz\");\n      df.setTimeZone(TimeZone.getTimeZone(\"GMT\"));\n      sb.append(\"; Expires\u003d\").append(df.format(date));\n    }\n\n    if (isSecure) {\n      sb.append(\"; Secure\");\n    }\n\n    sb.append(\"; HttpOnly\");\n    resp.addHeader(\"Set-Cookie\", sb.toString());\n  }",
          "path": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/server/AuthenticationFilter.java",
          "extendedDetails": {
            "oldValue": "[token-String]",
            "newValue": "[resp-HttpServletResponse, token-String, domain-String, path-String, expires-long, isSecure-boolean]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "HADOOP-10379. Protect authentication cookies with the HttpOnly and Secure flags. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1574283 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "04/03/14 5:48 PM",
          "commitName": "95ebf9ecc4809b8a977a0a847515649486a004c4",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "12/06/12 7:22 PM",
          "commitNameOld": "5a2e0ee4d293ed4e5da32edc7331ae350432def6",
          "commitAuthorOld": "Alejandro Abdelnur",
          "daysBetweenCommits": 629.98,
          "commitsBetweenForRepo": 3840,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,29 @@\n-  protected Cookie createCookie(String token) {\n-    Cookie cookie \u003d new Cookie(AuthenticatedURL.AUTH_COOKIE, token);\n-    if (getCookieDomain() !\u003d null) {\n-      cookie.setDomain(getCookieDomain());\n+  public static void createAuthCookie(HttpServletResponse resp, String token,\n+                                      String domain, String path, long expires,\n+                                      boolean isSecure) {\n+    StringBuilder sb \u003d new StringBuilder(AuthenticatedURL.AUTH_COOKIE).append\n+            (\"\u003d\").append(token);\n+\n+    if (path !\u003d null) {\n+      sb.append(\"; Path\u003d\").append(path);\n     }\n-    if (getCookiePath() !\u003d null) {\n-      cookie.setPath(getCookiePath());\n+\n+    if (domain !\u003d null) {\n+      sb.append(\"; Domain\u003d\").append(domain);\n     }\n-    return cookie;\n+\n+    if (expires \u003e\u003d 0) {\n+      Date date \u003d new Date(expires);\n+      SimpleDateFormat df \u003d new SimpleDateFormat(\"EEE, \" +\n+              \"dd-MMM-yyyy HH:mm:ss zzz\");\n+      df.setTimeZone(TimeZone.getTimeZone(\"GMT\"));\n+      sb.append(\"; Expires\u003d\").append(df.format(date));\n+    }\n+\n+    if (isSecure) {\n+      sb.append(\"; Secure\");\n+    }\n+\n+    sb.append(\"; HttpOnly\");\n+    resp.addHeader(\"Set-Cookie\", sb.toString());\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void createAuthCookie(HttpServletResponse resp, String token,\n                                      String domain, String path, long expires,\n                                      boolean isSecure) {\n    StringBuilder sb \u003d new StringBuilder(AuthenticatedURL.AUTH_COOKIE).append\n            (\"\u003d\").append(token);\n\n    if (path !\u003d null) {\n      sb.append(\"; Path\u003d\").append(path);\n    }\n\n    if (domain !\u003d null) {\n      sb.append(\"; Domain\u003d\").append(domain);\n    }\n\n    if (expires \u003e\u003d 0) {\n      Date date \u003d new Date(expires);\n      SimpleDateFormat df \u003d new SimpleDateFormat(\"EEE, \" +\n              \"dd-MMM-yyyy HH:mm:ss zzz\");\n      df.setTimeZone(TimeZone.getTimeZone(\"GMT\"));\n      sb.append(\"; Expires\u003d\").append(df.format(date));\n    }\n\n    if (isSecure) {\n      sb.append(\"; Secure\");\n    }\n\n    sb.append(\"; HttpOnly\");\n    resp.addHeader(\"Set-Cookie\", sb.toString());\n  }",
          "path": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/server/AuthenticationFilter.java",
          "extendedDetails": {
            "oldValue": "Cookie",
            "newValue": "void"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HADOOP-10379. Protect authentication cookies with the HttpOnly and Secure flags. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1574283 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "04/03/14 5:48 PM",
          "commitName": "95ebf9ecc4809b8a977a0a847515649486a004c4",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "12/06/12 7:22 PM",
          "commitNameOld": "5a2e0ee4d293ed4e5da32edc7331ae350432def6",
          "commitAuthorOld": "Alejandro Abdelnur",
          "daysBetweenCommits": 629.98,
          "commitsBetweenForRepo": 3840,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,29 @@\n-  protected Cookie createCookie(String token) {\n-    Cookie cookie \u003d new Cookie(AuthenticatedURL.AUTH_COOKIE, token);\n-    if (getCookieDomain() !\u003d null) {\n-      cookie.setDomain(getCookieDomain());\n+  public static void createAuthCookie(HttpServletResponse resp, String token,\n+                                      String domain, String path, long expires,\n+                                      boolean isSecure) {\n+    StringBuilder sb \u003d new StringBuilder(AuthenticatedURL.AUTH_COOKIE).append\n+            (\"\u003d\").append(token);\n+\n+    if (path !\u003d null) {\n+      sb.append(\"; Path\u003d\").append(path);\n     }\n-    if (getCookiePath() !\u003d null) {\n-      cookie.setPath(getCookiePath());\n+\n+    if (domain !\u003d null) {\n+      sb.append(\"; Domain\u003d\").append(domain);\n     }\n-    return cookie;\n+\n+    if (expires \u003e\u003d 0) {\n+      Date date \u003d new Date(expires);\n+      SimpleDateFormat df \u003d new SimpleDateFormat(\"EEE, \" +\n+              \"dd-MMM-yyyy HH:mm:ss zzz\");\n+      df.setTimeZone(TimeZone.getTimeZone(\"GMT\"));\n+      sb.append(\"; Expires\u003d\").append(df.format(date));\n+    }\n+\n+    if (isSecure) {\n+      sb.append(\"; Secure\");\n+    }\n+\n+    sb.append(\"; HttpOnly\");\n+    resp.addHeader(\"Set-Cookie\", sb.toString());\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void createAuthCookie(HttpServletResponse resp, String token,\n                                      String domain, String path, long expires,\n                                      boolean isSecure) {\n    StringBuilder sb \u003d new StringBuilder(AuthenticatedURL.AUTH_COOKIE).append\n            (\"\u003d\").append(token);\n\n    if (path !\u003d null) {\n      sb.append(\"; Path\u003d\").append(path);\n    }\n\n    if (domain !\u003d null) {\n      sb.append(\"; Domain\u003d\").append(domain);\n    }\n\n    if (expires \u003e\u003d 0) {\n      Date date \u003d new Date(expires);\n      SimpleDateFormat df \u003d new SimpleDateFormat(\"EEE, \" +\n              \"dd-MMM-yyyy HH:mm:ss zzz\");\n      df.setTimeZone(TimeZone.getTimeZone(\"GMT\"));\n      sb.append(\"; Expires\u003d\").append(df.format(date));\n    }\n\n    if (isSecure) {\n      sb.append(\"; Secure\");\n    }\n\n    sb.append(\"; HttpOnly\");\n    resp.addHeader(\"Set-Cookie\", sb.toString());\n  }",
          "path": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/server/AuthenticationFilter.java",
          "extendedDetails": {
            "oldValue": "[protected]",
            "newValue": "[public, static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-10379. Protect authentication cookies with the HttpOnly and Secure flags. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1574283 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "04/03/14 5:48 PM",
          "commitName": "95ebf9ecc4809b8a977a0a847515649486a004c4",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "12/06/12 7:22 PM",
          "commitNameOld": "5a2e0ee4d293ed4e5da32edc7331ae350432def6",
          "commitAuthorOld": "Alejandro Abdelnur",
          "daysBetweenCommits": 629.98,
          "commitsBetweenForRepo": 3840,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,29 @@\n-  protected Cookie createCookie(String token) {\n-    Cookie cookie \u003d new Cookie(AuthenticatedURL.AUTH_COOKIE, token);\n-    if (getCookieDomain() !\u003d null) {\n-      cookie.setDomain(getCookieDomain());\n+  public static void createAuthCookie(HttpServletResponse resp, String token,\n+                                      String domain, String path, long expires,\n+                                      boolean isSecure) {\n+    StringBuilder sb \u003d new StringBuilder(AuthenticatedURL.AUTH_COOKIE).append\n+            (\"\u003d\").append(token);\n+\n+    if (path !\u003d null) {\n+      sb.append(\"; Path\u003d\").append(path);\n     }\n-    if (getCookiePath() !\u003d null) {\n-      cookie.setPath(getCookiePath());\n+\n+    if (domain !\u003d null) {\n+      sb.append(\"; Domain\u003d\").append(domain);\n     }\n-    return cookie;\n+\n+    if (expires \u003e\u003d 0) {\n+      Date date \u003d new Date(expires);\n+      SimpleDateFormat df \u003d new SimpleDateFormat(\"EEE, \" +\n+              \"dd-MMM-yyyy HH:mm:ss zzz\");\n+      df.setTimeZone(TimeZone.getTimeZone(\"GMT\"));\n+      sb.append(\"; Expires\u003d\").append(df.format(date));\n+    }\n+\n+    if (isSecure) {\n+      sb.append(\"; Secure\");\n+    }\n+\n+    sb.append(\"; HttpOnly\");\n+    resp.addHeader(\"Set-Cookie\", sb.toString());\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void createAuthCookie(HttpServletResponse resp, String token,\n                                      String domain, String path, long expires,\n                                      boolean isSecure) {\n    StringBuilder sb \u003d new StringBuilder(AuthenticatedURL.AUTH_COOKIE).append\n            (\"\u003d\").append(token);\n\n    if (path !\u003d null) {\n      sb.append(\"; Path\u003d\").append(path);\n    }\n\n    if (domain !\u003d null) {\n      sb.append(\"; Domain\u003d\").append(domain);\n    }\n\n    if (expires \u003e\u003d 0) {\n      Date date \u003d new Date(expires);\n      SimpleDateFormat df \u003d new SimpleDateFormat(\"EEE, \" +\n              \"dd-MMM-yyyy HH:mm:ss zzz\");\n      df.setTimeZone(TimeZone.getTimeZone(\"GMT\"));\n      sb.append(\"; Expires\u003d\").append(df.format(date));\n    }\n\n    if (isSecure) {\n      sb.append(\"; Secure\");\n    }\n\n    sb.append(\"; HttpOnly\");\n    resp.addHeader(\"Set-Cookie\", sb.toString());\n  }",
          "path": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/server/AuthenticationFilter.java",
          "extendedDetails": {}
        }
      ]
    },
    "2b016dac8232e0f5c43293adcbdf7164f5fca74c": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7579. Rename package names from alfredo to auth.  Contributed by Alejandro Abdelnur\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1163852 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/08/11 3:40 PM",
      "commitName": "2b016dac8232e0f5c43293adcbdf7164f5fca74c",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "31/08/11 2:18 PM",
      "commitNameOld": "4f1a0e36fab1f18e6e2c5fcc72cd9a7634967fcd",
      "commitAuthorOld": "Konstantin Shvachko",
      "daysBetweenCommits": 0.06,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected Cookie createCookie(String token) {\n    Cookie cookie \u003d new Cookie(AuthenticatedURL.AUTH_COOKIE, token);\n    if (getCookieDomain() !\u003d null) {\n      cookie.setDomain(getCookieDomain());\n    }\n    if (getCookiePath() !\u003d null) {\n      cookie.setPath(getCookiePath());\n    }\n    return cookie;\n  }",
      "path": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/server/AuthenticationFilter.java",
      "extendedDetails": {
        "oldPath": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/alfredo/server/AuthenticationFilter.java",
        "newPath": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/server/AuthenticationFilter.java"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected Cookie createCookie(String token) {\n    Cookie cookie \u003d new Cookie(AuthenticatedURL.AUTH_COOKIE, token);\n    if (getCookieDomain() !\u003d null) {\n      cookie.setDomain(getCookieDomain());\n    }\n    if (getCookiePath() !\u003d null) {\n      cookie.setPath(getCookiePath());\n    }\n    return cookie;\n  }",
      "path": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/alfredo/server/AuthenticationFilter.java",
      "extendedDetails": {
        "oldPath": "hadoop-alfredo/src/main/java/org/apache/hadoop/alfredo/server/AuthenticationFilter.java",
        "newPath": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/alfredo/server/AuthenticationFilter.java"
      }
    },
    "a0f120ce68dddb0cb31b64c89f3224313f3cb5af": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7119. add Kerberos HTTP SPNEGO authentication support to Hadoop JT/NN/DN/TT web-consoles. (Alejandro Abdelnur via atm)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159804 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 3:31 PM",
      "commitName": "a0f120ce68dddb0cb31b64c89f3224313f3cb5af",
      "commitAuthor": "Aaron Myers",
      "diff": "@@ -0,0 +1,10 @@\n+  protected Cookie createCookie(String token) {\n+    Cookie cookie \u003d new Cookie(AuthenticatedURL.AUTH_COOKIE, token);\n+    if (getCookieDomain() !\u003d null) {\n+      cookie.setDomain(getCookieDomain());\n+    }\n+    if (getCookiePath() !\u003d null) {\n+      cookie.setPath(getCookiePath());\n+    }\n+    return cookie;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected Cookie createCookie(String token) {\n    Cookie cookie \u003d new Cookie(AuthenticatedURL.AUTH_COOKIE, token);\n    if (getCookieDomain() !\u003d null) {\n      cookie.setDomain(getCookieDomain());\n    }\n    if (getCookiePath() !\u003d null) {\n      cookie.setPath(getCookiePath());\n    }\n    return cookie;\n  }",
      "path": "hadoop-alfredo/src/main/java/org/apache/hadoop/alfredo/server/AuthenticationFilter.java"
    }
  }
}