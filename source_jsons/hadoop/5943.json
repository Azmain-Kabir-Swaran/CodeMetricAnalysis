{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSDirEncryptionZoneOp.java",
  "functionName": "reencryptEncryptionZone",
  "functionId": "reencryptEncryptionZone___fsd-FSDirectory(modifiers-final)__iip-INodesInPath(modifiers-final)__keyVersionName-String(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirEncryptionZoneOp.java",
  "functionStartLine": 227,
  "functionEndLine": 231,
  "numCommitsSeen": 41,
  "timeTaken": 3829,
  "changeHistory": [
    "0ba8ff4b77db11fb68111f20fb077cffddd24f17",
    "1000a2af04b24c123a3b08168f36b4e90420cab7"
  ],
  "changeHistoryShort": {
    "0ba8ff4b77db11fb68111f20fb077cffddd24f17": "Ymultichange(Yparameterchange,Yreturntypechange,Ybodychange)",
    "1000a2af04b24c123a3b08168f36b4e90420cab7": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0ba8ff4b77db11fb68111f20fb077cffddd24f17": {
      "type": "Ymultichange(Yparameterchange,Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-12359. Re-encryption should operate with minimum KMS ACL requirements.\n",
      "commitDate": "05/09/17 10:08 AM",
      "commitName": "0ba8ff4b77db11fb68111f20fb077cffddd24f17",
      "commitAuthor": "Xiao Chen",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-12359. Re-encryption should operate with minimum KMS ACL requirements.\n",
          "commitDate": "05/09/17 10:08 AM",
          "commitName": "0ba8ff4b77db11fb68111f20fb077cffddd24f17",
          "commitAuthor": "Xiao Chen",
          "commitDateOld": "23/08/17 5:06 PM",
          "commitNameOld": "1000a2af04b24c123a3b08168f36b4e90420cab7",
          "commitAuthorOld": "Xiao Chen",
          "daysBetweenCommits": 12.71,
          "commitsBetweenForRepo": 132,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,5 @@\n-  static void reencryptEncryptionZone(final FSDirectory fsd,\n-      final String zone, final String keyVersionName,\n-      final boolean logRetryCache) throws IOException {\n-    final List\u003cXAttr\u003e xAttrs \u003d Lists.newArrayListWithCapacity(1);\n-    final FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n-    fsd.writeLock();\n-    try {\n-      final INodesInPath iip \u003d fsd.resolvePath(pc, zone, DirOp.WRITE);\n-      final XAttr xattr \u003d fsd.ezManager\n-          .reencryptEncryptionZone(iip, keyVersionName);\n-      xAttrs.add(xattr);\n-    } finally {\n-      fsd.writeUnlock();\n-    }\n-    fsd.getEditLog().logSetXAttrs(zone, xAttrs, logRetryCache);\n+  static List\u003cXAttr\u003e reencryptEncryptionZone(final FSDirectory fsd,\n+      final INodesInPath iip, final String keyVersionName) throws IOException {\n+    assert keyVersionName !\u003d null;\n+    return fsd.ezManager.reencryptEncryptionZone(iip, keyVersionName);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static List\u003cXAttr\u003e reencryptEncryptionZone(final FSDirectory fsd,\n      final INodesInPath iip, final String keyVersionName) throws IOException {\n    assert keyVersionName !\u003d null;\n    return fsd.ezManager.reencryptEncryptionZone(iip, keyVersionName);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirEncryptionZoneOp.java",
          "extendedDetails": {
            "oldValue": "[fsd-FSDirectory(modifiers-final), zone-String(modifiers-final), keyVersionName-String(modifiers-final), logRetryCache-boolean(modifiers-final)]",
            "newValue": "[fsd-FSDirectory(modifiers-final), iip-INodesInPath(modifiers-final), keyVersionName-String(modifiers-final)]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-12359. Re-encryption should operate with minimum KMS ACL requirements.\n",
          "commitDate": "05/09/17 10:08 AM",
          "commitName": "0ba8ff4b77db11fb68111f20fb077cffddd24f17",
          "commitAuthor": "Xiao Chen",
          "commitDateOld": "23/08/17 5:06 PM",
          "commitNameOld": "1000a2af04b24c123a3b08168f36b4e90420cab7",
          "commitAuthorOld": "Xiao Chen",
          "daysBetweenCommits": 12.71,
          "commitsBetweenForRepo": 132,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,5 @@\n-  static void reencryptEncryptionZone(final FSDirectory fsd,\n-      final String zone, final String keyVersionName,\n-      final boolean logRetryCache) throws IOException {\n-    final List\u003cXAttr\u003e xAttrs \u003d Lists.newArrayListWithCapacity(1);\n-    final FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n-    fsd.writeLock();\n-    try {\n-      final INodesInPath iip \u003d fsd.resolvePath(pc, zone, DirOp.WRITE);\n-      final XAttr xattr \u003d fsd.ezManager\n-          .reencryptEncryptionZone(iip, keyVersionName);\n-      xAttrs.add(xattr);\n-    } finally {\n-      fsd.writeUnlock();\n-    }\n-    fsd.getEditLog().logSetXAttrs(zone, xAttrs, logRetryCache);\n+  static List\u003cXAttr\u003e reencryptEncryptionZone(final FSDirectory fsd,\n+      final INodesInPath iip, final String keyVersionName) throws IOException {\n+    assert keyVersionName !\u003d null;\n+    return fsd.ezManager.reencryptEncryptionZone(iip, keyVersionName);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static List\u003cXAttr\u003e reencryptEncryptionZone(final FSDirectory fsd,\n      final INodesInPath iip, final String keyVersionName) throws IOException {\n    assert keyVersionName !\u003d null;\n    return fsd.ezManager.reencryptEncryptionZone(iip, keyVersionName);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirEncryptionZoneOp.java",
          "extendedDetails": {
            "oldValue": "void",
            "newValue": "List\u003cXAttr\u003e"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-12359. Re-encryption should operate with minimum KMS ACL requirements.\n",
          "commitDate": "05/09/17 10:08 AM",
          "commitName": "0ba8ff4b77db11fb68111f20fb077cffddd24f17",
          "commitAuthor": "Xiao Chen",
          "commitDateOld": "23/08/17 5:06 PM",
          "commitNameOld": "1000a2af04b24c123a3b08168f36b4e90420cab7",
          "commitAuthorOld": "Xiao Chen",
          "daysBetweenCommits": 12.71,
          "commitsBetweenForRepo": 132,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,5 @@\n-  static void reencryptEncryptionZone(final FSDirectory fsd,\n-      final String zone, final String keyVersionName,\n-      final boolean logRetryCache) throws IOException {\n-    final List\u003cXAttr\u003e xAttrs \u003d Lists.newArrayListWithCapacity(1);\n-    final FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n-    fsd.writeLock();\n-    try {\n-      final INodesInPath iip \u003d fsd.resolvePath(pc, zone, DirOp.WRITE);\n-      final XAttr xattr \u003d fsd.ezManager\n-          .reencryptEncryptionZone(iip, keyVersionName);\n-      xAttrs.add(xattr);\n-    } finally {\n-      fsd.writeUnlock();\n-    }\n-    fsd.getEditLog().logSetXAttrs(zone, xAttrs, logRetryCache);\n+  static List\u003cXAttr\u003e reencryptEncryptionZone(final FSDirectory fsd,\n+      final INodesInPath iip, final String keyVersionName) throws IOException {\n+    assert keyVersionName !\u003d null;\n+    return fsd.ezManager.reencryptEncryptionZone(iip, keyVersionName);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static List\u003cXAttr\u003e reencryptEncryptionZone(final FSDirectory fsd,\n      final INodesInPath iip, final String keyVersionName) throws IOException {\n    assert keyVersionName !\u003d null;\n    return fsd.ezManager.reencryptEncryptionZone(iip, keyVersionName);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirEncryptionZoneOp.java",
          "extendedDetails": {}
        }
      ]
    },
    "1000a2af04b24c123a3b08168f36b4e90420cab7": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-10899. Add functionality to re-encrypt EDEKs.\n",
      "commitDate": "23/08/17 5:06 PM",
      "commitName": "1000a2af04b24c123a3b08168f36b4e90420cab7",
      "commitAuthor": "Xiao Chen",
      "diff": "@@ -0,0 +1,16 @@\n+  static void reencryptEncryptionZone(final FSDirectory fsd,\n+      final String zone, final String keyVersionName,\n+      final boolean logRetryCache) throws IOException {\n+    final List\u003cXAttr\u003e xAttrs \u003d Lists.newArrayListWithCapacity(1);\n+    final FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n+    fsd.writeLock();\n+    try {\n+      final INodesInPath iip \u003d fsd.resolvePath(pc, zone, DirOp.WRITE);\n+      final XAttr xattr \u003d fsd.ezManager\n+          .reencryptEncryptionZone(iip, keyVersionName);\n+      xAttrs.add(xattr);\n+    } finally {\n+      fsd.writeUnlock();\n+    }\n+    fsd.getEditLog().logSetXAttrs(zone, xAttrs, logRetryCache);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  static void reencryptEncryptionZone(final FSDirectory fsd,\n      final String zone, final String keyVersionName,\n      final boolean logRetryCache) throws IOException {\n    final List\u003cXAttr\u003e xAttrs \u003d Lists.newArrayListWithCapacity(1);\n    final FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n    fsd.writeLock();\n    try {\n      final INodesInPath iip \u003d fsd.resolvePath(pc, zone, DirOp.WRITE);\n      final XAttr xattr \u003d fsd.ezManager\n          .reencryptEncryptionZone(iip, keyVersionName);\n      xAttrs.add(xattr);\n    } finally {\n      fsd.writeUnlock();\n    }\n    fsd.getEditLog().logSetXAttrs(zone, xAttrs, logRetryCache);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirEncryptionZoneOp.java"
    }
  }
}