{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ReconfigurableBase.java",
  "functionName": "reconfigureProperty",
  "functionId": "reconfigureProperty___property-String__newVal-String",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/ReconfigurableBase.java",
  "functionStartLine": 221,
  "functionEndLine": 238,
  "numCommitsSeen": 15,
  "timeTaken": 1359,
  "changeHistory": [
    "1de1641f17f890059e85e57304ce33c7070a08de",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "04f1e7a41874bb93434c91c80544eda24afbb215"
  ],
  "changeHistoryShort": {
    "1de1641f17f890059e85e57304ce33c7070a08de": "Ymultichange(Yreturntypechange,Ybodychange)",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "04f1e7a41874bb93434c91c80544eda24afbb215": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1de1641f17f890059e85e57304ce33c7070a08de": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-9801. ReconfigurableBase should update the cached configuration. (Arpit Agarwal)\n",
      "commitDate": "12/02/16 12:41 PM",
      "commitName": "1de1641f17f890059e85e57304ce33c7070a08de",
      "commitAuthor": "Arpit Agarwal",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-9801. ReconfigurableBase should update the cached configuration. (Arpit Agarwal)\n",
          "commitDate": "12/02/16 12:41 PM",
          "commitName": "1de1641f17f890059e85e57304ce33c7070a08de",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "19/06/15 7:14 PM",
          "commitNameOld": "d112d183242f447d4b742139f3a4ea531a997f45",
          "commitAuthorOld": "Colin Patrick Mccabe",
          "daysBetweenCommits": 237.77,
          "commitsBetweenForRepo": 1609,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,18 @@\n-  public final String reconfigureProperty(String property, String newVal) \n+  public final void reconfigureProperty(String property, String newVal)\n     throws ReconfigurationException {\n     if (isPropertyReconfigurable(property)) {\n       LOG.info(\"changing property \" + property + \" to \" + newVal);\n-      String oldVal;\n       synchronized(getConf()) {\n-        oldVal \u003d getConf().get(property);\n-        reconfigurePropertyImpl(property, newVal);\n+        getConf().get(property);\n+        String effectiveValue \u003d reconfigurePropertyImpl(property, newVal);\n         if (newVal !\u003d null) {\n-          getConf().set(property, newVal);\n+          getConf().set(property, effectiveValue);\n         } else {\n           getConf().unset(property);\n         }\n       }\n-      return oldVal;\n     } else {\n       throw new ReconfigurationException(property, newVal,\n                                              getConf().get(property));\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public final void reconfigureProperty(String property, String newVal)\n    throws ReconfigurationException {\n    if (isPropertyReconfigurable(property)) {\n      LOG.info(\"changing property \" + property + \" to \" + newVal);\n      synchronized(getConf()) {\n        getConf().get(property);\n        String effectiveValue \u003d reconfigurePropertyImpl(property, newVal);\n        if (newVal !\u003d null) {\n          getConf().set(property, effectiveValue);\n        } else {\n          getConf().unset(property);\n        }\n      }\n    } else {\n      throw new ReconfigurationException(property, newVal,\n                                             getConf().get(property));\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/ReconfigurableBase.java",
          "extendedDetails": {
            "oldValue": "String",
            "newValue": "void"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-9801. ReconfigurableBase should update the cached configuration. (Arpit Agarwal)\n",
          "commitDate": "12/02/16 12:41 PM",
          "commitName": "1de1641f17f890059e85e57304ce33c7070a08de",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "19/06/15 7:14 PM",
          "commitNameOld": "d112d183242f447d4b742139f3a4ea531a997f45",
          "commitAuthorOld": "Colin Patrick Mccabe",
          "daysBetweenCommits": 237.77,
          "commitsBetweenForRepo": 1609,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,18 @@\n-  public final String reconfigureProperty(String property, String newVal) \n+  public final void reconfigureProperty(String property, String newVal)\n     throws ReconfigurationException {\n     if (isPropertyReconfigurable(property)) {\n       LOG.info(\"changing property \" + property + \" to \" + newVal);\n-      String oldVal;\n       synchronized(getConf()) {\n-        oldVal \u003d getConf().get(property);\n-        reconfigurePropertyImpl(property, newVal);\n+        getConf().get(property);\n+        String effectiveValue \u003d reconfigurePropertyImpl(property, newVal);\n         if (newVal !\u003d null) {\n-          getConf().set(property, newVal);\n+          getConf().set(property, effectiveValue);\n         } else {\n           getConf().unset(property);\n         }\n       }\n-      return oldVal;\n     } else {\n       throw new ReconfigurationException(property, newVal,\n                                              getConf().get(property));\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public final void reconfigureProperty(String property, String newVal)\n    throws ReconfigurationException {\n    if (isPropertyReconfigurable(property)) {\n      LOG.info(\"changing property \" + property + \" to \" + newVal);\n      synchronized(getConf()) {\n        getConf().get(property);\n        String effectiveValue \u003d reconfigurePropertyImpl(property, newVal);\n        if (newVal !\u003d null) {\n          getConf().set(property, effectiveValue);\n        } else {\n          getConf().unset(property);\n        }\n      }\n    } else {\n      throw new ReconfigurationException(property, newVal,\n                                             getConf().get(property));\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/ReconfigurableBase.java",
          "extendedDetails": {}
        }
      ]
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public final String reconfigureProperty(String property, String newVal) \n    throws ReconfigurationException {\n    if (isPropertyReconfigurable(property)) {\n      LOG.info(\"changing property \" + property + \" to \" + newVal);\n      String oldVal;\n      synchronized(getConf()) {\n        oldVal \u003d getConf().get(property);\n        reconfigurePropertyImpl(property, newVal);\n        if (newVal !\u003d null) {\n          getConf().set(property, newVal);\n        } else {\n          getConf().unset(property);\n        }\n      }\n      return oldVal;\n    } else {\n      throw new ReconfigurationException(property, newVal,\n                                             getConf().get(property));\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/ReconfigurableBase.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/conf/ReconfigurableBase.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/ReconfigurableBase.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public final String reconfigureProperty(String property, String newVal) \n    throws ReconfigurationException {\n    if (isPropertyReconfigurable(property)) {\n      LOG.info(\"changing property \" + property + \" to \" + newVal);\n      String oldVal;\n      synchronized(getConf()) {\n        oldVal \u003d getConf().get(property);\n        reconfigurePropertyImpl(property, newVal);\n        if (newVal !\u003d null) {\n          getConf().set(property, newVal);\n        } else {\n          getConf().unset(property);\n        }\n      }\n      return oldVal;\n    } else {\n      throw new ReconfigurationException(property, newVal,\n                                             getConf().get(property));\n    }\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/conf/ReconfigurableBase.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/conf/ReconfigurableBase.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/conf/ReconfigurableBase.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public final String reconfigureProperty(String property, String newVal) \n    throws ReconfigurationException {\n    if (isPropertyReconfigurable(property)) {\n      LOG.info(\"changing property \" + property + \" to \" + newVal);\n      String oldVal;\n      synchronized(getConf()) {\n        oldVal \u003d getConf().get(property);\n        reconfigurePropertyImpl(property, newVal);\n        if (newVal !\u003d null) {\n          getConf().set(property, newVal);\n        } else {\n          getConf().unset(property);\n        }\n      }\n      return oldVal;\n    } else {\n      throw new ReconfigurationException(property, newVal,\n                                             getConf().get(property));\n    }\n  }",
      "path": "common/src/java/org/apache/hadoop/conf/ReconfigurableBase.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/conf/ReconfigurableBase.java",
        "newPath": "common/src/java/org/apache/hadoop/conf/ReconfigurableBase.java"
      }
    },
    "04f1e7a41874bb93434c91c80544eda24afbb215": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7001.  Configuration changes can occur via the Reconfigurable\ninterface. (Patrick Kline via dhruba)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1038480 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/11/10 9:13 PM",
      "commitName": "04f1e7a41874bb93434c91c80544eda24afbb215",
      "commitAuthor": "Dhruba Borthakur",
      "diff": "@@ -0,0 +1,20 @@\n+  public final String reconfigureProperty(String property, String newVal) \n+    throws ReconfigurationException {\n+    if (isPropertyReconfigurable(property)) {\n+      LOG.info(\"changing property \" + property + \" to \" + newVal);\n+      String oldVal;\n+      synchronized(getConf()) {\n+        oldVal \u003d getConf().get(property);\n+        reconfigurePropertyImpl(property, newVal);\n+        if (newVal !\u003d null) {\n+          getConf().set(property, newVal);\n+        } else {\n+          getConf().unset(property);\n+        }\n+      }\n+      return oldVal;\n+    } else {\n+      throw new ReconfigurationException(property, newVal,\n+                                             getConf().get(property));\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public final String reconfigureProperty(String property, String newVal) \n    throws ReconfigurationException {\n    if (isPropertyReconfigurable(property)) {\n      LOG.info(\"changing property \" + property + \" to \" + newVal);\n      String oldVal;\n      synchronized(getConf()) {\n        oldVal \u003d getConf().get(property);\n        reconfigurePropertyImpl(property, newVal);\n        if (newVal !\u003d null) {\n          getConf().set(property, newVal);\n        } else {\n          getConf().unset(property);\n        }\n      }\n      return oldVal;\n    } else {\n      throw new ReconfigurationException(property, newVal,\n                                             getConf().get(property));\n    }\n  }",
      "path": "src/java/org/apache/hadoop/conf/ReconfigurableBase.java"
    }
  }
}