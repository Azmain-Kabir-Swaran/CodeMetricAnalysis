{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DFSUtilClient.java",
  "functionName": "locatedBlocks2Locations",
  "functionId": "locatedBlocks2Locations___blocks-LocatedBlocks",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSUtilClient.java",
  "functionStartLine": 265,
  "functionEndLine": 270,
  "numCommitsSeen": 148,
  "timeTaken": 6595,
  "changeHistory": [
    "bcf89ddc7d52e04725caf104f5958e33d9f51b35",
    "fccace6116713c85cd59a808c565ea39fb5d6944",
    "be7dd8333a7e56e732171db0781786987de03195",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "bcf89ddc7d52e04725caf104f5958e33d9f51b35": "Ymovefromfile",
    "fccace6116713c85cd59a808c565ea39fb5d6944": "Ybodychange",
    "be7dd8333a7e56e732171db0781786987de03195": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bcf89ddc7d52e04725caf104f5958e33d9f51b35": {
      "type": "Ymovefromfile",
      "commitMessage": "HDFS-8052. Move WebHdfsFileSystem into hadoop-hdfs-client. Contributed by Haohui Mai.\n",
      "commitDate": "23/04/15 5:33 PM",
      "commitName": "bcf89ddc7d52e04725caf104f5958e33d9f51b35",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "23/04/15 4:40 PM",
      "commitNameOld": "0b3f8957a87ada1a275c9904b211fdbdcefafb02",
      "commitAuthorOld": "Xuan",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static BlockLocation[] locatedBlocks2Locations(LocatedBlocks blocks) {\n    if (blocks \u003d\u003d null) {\n      return new BlockLocation[0];\n    }\n    return locatedBlocks2Locations(blocks.getLocatedBlocks());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSUtilClient.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSUtilClient.java",
        "oldMethodName": "locatedBlocks2Locations",
        "newMethodName": "locatedBlocks2Locations"
      }
    },
    "fccace6116713c85cd59a808c565ea39fb5d6944": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3672. Expose disk-location information for blocks to enable better scheduling. Contributed by Andrew Wang.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1374355 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/08/12 9:52 AM",
      "commitName": "fccace6116713c85cd59a808c565ea39fb5d6944",
      "commitAuthor": "Aaron Myers",
      "commitDateOld": "14/08/12 5:28 PM",
      "commitNameOld": "28e87740c5797e87a9038d7f151c8b21a5b04592",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 2.68,
      "commitsBetweenForRepo": 28,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,6 @@\n   public static BlockLocation[] locatedBlocks2Locations(LocatedBlocks blocks) {\n     if (blocks \u003d\u003d null) {\n       return new BlockLocation[0];\n     }\n-    int nrBlocks \u003d blocks.locatedBlockCount();\n-    BlockLocation[] blkLocations \u003d new BlockLocation[nrBlocks];\n-    if (nrBlocks \u003d\u003d 0) {\n-      return blkLocations;\n-    }\n-    int idx \u003d 0;\n-    for (LocatedBlock blk : blocks.getLocatedBlocks()) {\n-      assert idx \u003c nrBlocks : \"Incorrect index\";\n-      DatanodeInfo[] locations \u003d blk.getLocations();\n-      String[] hosts \u003d new String[locations.length];\n-      String[] xferAddrs \u003d new String[locations.length];\n-      String[] racks \u003d new String[locations.length];\n-      for (int hCnt \u003d 0; hCnt \u003c locations.length; hCnt++) {\n-        hosts[hCnt] \u003d locations[hCnt].getHostName();\n-        xferAddrs[hCnt] \u003d locations[hCnt].getXferAddr();\n-        NodeBase node \u003d new NodeBase(xferAddrs[hCnt], \n-                                     locations[hCnt].getNetworkLocation());\n-        racks[hCnt] \u003d node.toString();\n-      }\n-      blkLocations[idx] \u003d new BlockLocation(xferAddrs, hosts, racks,\n-                                            blk.getStartOffset(),\n-                                            blk.getBlockSize(),\n-                                            blk.isCorrupt());\n-      idx++;\n-    }\n-    return blkLocations;\n+    return locatedBlocks2Locations(blocks.getLocatedBlocks());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static BlockLocation[] locatedBlocks2Locations(LocatedBlocks blocks) {\n    if (blocks \u003d\u003d null) {\n      return new BlockLocation[0];\n    }\n    return locatedBlocks2Locations(blocks.getLocatedBlocks());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java",
      "extendedDetails": {}
    },
    "be7dd8333a7e56e732171db0781786987de03195": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3144. Refactor DatanodeID#getName by use. Contributed by Eli Collins\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1308205 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "01/04/12 3:12 PM",
      "commitName": "be7dd8333a7e56e732171db0781786987de03195",
      "commitAuthor": "Eli Collins",
      "commitDateOld": "01/03/12 5:48 PM",
      "commitNameOld": "87d1c6794422fc32cac01715ac485519766c72f1",
      "commitAuthorOld": "",
      "daysBetweenCommits": 30.85,
      "commitsBetweenForRepo": 179,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,31 @@\n   public static BlockLocation[] locatedBlocks2Locations(LocatedBlocks blocks) {\n     if (blocks \u003d\u003d null) {\n       return new BlockLocation[0];\n     }\n     int nrBlocks \u003d blocks.locatedBlockCount();\n     BlockLocation[] blkLocations \u003d new BlockLocation[nrBlocks];\n     if (nrBlocks \u003d\u003d 0) {\n       return blkLocations;\n     }\n     int idx \u003d 0;\n     for (LocatedBlock blk : blocks.getLocatedBlocks()) {\n       assert idx \u003c nrBlocks : \"Incorrect index\";\n       DatanodeInfo[] locations \u003d blk.getLocations();\n       String[] hosts \u003d new String[locations.length];\n-      String[] names \u003d new String[locations.length];\n+      String[] xferAddrs \u003d new String[locations.length];\n       String[] racks \u003d new String[locations.length];\n       for (int hCnt \u003d 0; hCnt \u003c locations.length; hCnt++) {\n         hosts[hCnt] \u003d locations[hCnt].getHostName();\n-        names[hCnt] \u003d locations[hCnt].getName();\n-        NodeBase node \u003d new NodeBase(names[hCnt], \n+        xferAddrs[hCnt] \u003d locations[hCnt].getXferAddr();\n+        NodeBase node \u003d new NodeBase(xferAddrs[hCnt], \n                                      locations[hCnt].getNetworkLocation());\n         racks[hCnt] \u003d node.toString();\n       }\n-      blkLocations[idx] \u003d new BlockLocation(names, hosts, racks,\n+      blkLocations[idx] \u003d new BlockLocation(xferAddrs, hosts, racks,\n                                             blk.getStartOffset(),\n                                             blk.getBlockSize(),\n                                             blk.isCorrupt());\n       idx++;\n     }\n     return blkLocations;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static BlockLocation[] locatedBlocks2Locations(LocatedBlocks blocks) {\n    if (blocks \u003d\u003d null) {\n      return new BlockLocation[0];\n    }\n    int nrBlocks \u003d blocks.locatedBlockCount();\n    BlockLocation[] blkLocations \u003d new BlockLocation[nrBlocks];\n    if (nrBlocks \u003d\u003d 0) {\n      return blkLocations;\n    }\n    int idx \u003d 0;\n    for (LocatedBlock blk : blocks.getLocatedBlocks()) {\n      assert idx \u003c nrBlocks : \"Incorrect index\";\n      DatanodeInfo[] locations \u003d blk.getLocations();\n      String[] hosts \u003d new String[locations.length];\n      String[] xferAddrs \u003d new String[locations.length];\n      String[] racks \u003d new String[locations.length];\n      for (int hCnt \u003d 0; hCnt \u003c locations.length; hCnt++) {\n        hosts[hCnt] \u003d locations[hCnt].getHostName();\n        xferAddrs[hCnt] \u003d locations[hCnt].getXferAddr();\n        NodeBase node \u003d new NodeBase(xferAddrs[hCnt], \n                                     locations[hCnt].getNetworkLocation());\n        racks[hCnt] \u003d node.toString();\n      }\n      blkLocations[idx] \u003d new BlockLocation(xferAddrs, hosts, racks,\n                                            blk.getStartOffset(),\n                                            blk.getBlockSize(),\n                                            blk.isCorrupt());\n      idx++;\n    }\n    return blkLocations;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static BlockLocation[] locatedBlocks2Locations(LocatedBlocks blocks) {\n    if (blocks \u003d\u003d null) {\n      return new BlockLocation[0];\n    }\n    int nrBlocks \u003d blocks.locatedBlockCount();\n    BlockLocation[] blkLocations \u003d new BlockLocation[nrBlocks];\n    if (nrBlocks \u003d\u003d 0) {\n      return blkLocations;\n    }\n    int idx \u003d 0;\n    for (LocatedBlock blk : blocks.getLocatedBlocks()) {\n      assert idx \u003c nrBlocks : \"Incorrect index\";\n      DatanodeInfo[] locations \u003d blk.getLocations();\n      String[] hosts \u003d new String[locations.length];\n      String[] names \u003d new String[locations.length];\n      String[] racks \u003d new String[locations.length];\n      for (int hCnt \u003d 0; hCnt \u003c locations.length; hCnt++) {\n        hosts[hCnt] \u003d locations[hCnt].getHostName();\n        names[hCnt] \u003d locations[hCnt].getName();\n        NodeBase node \u003d new NodeBase(names[hCnt], \n                                     locations[hCnt].getNetworkLocation());\n        racks[hCnt] \u003d node.toString();\n      }\n      blkLocations[idx] \u003d new BlockLocation(names, hosts, racks,\n                                            blk.getStartOffset(),\n                                            blk.getBlockSize(),\n                                            blk.isCorrupt());\n      idx++;\n    }\n    return blkLocations;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static BlockLocation[] locatedBlocks2Locations(LocatedBlocks blocks) {\n    if (blocks \u003d\u003d null) {\n      return new BlockLocation[0];\n    }\n    int nrBlocks \u003d blocks.locatedBlockCount();\n    BlockLocation[] blkLocations \u003d new BlockLocation[nrBlocks];\n    if (nrBlocks \u003d\u003d 0) {\n      return blkLocations;\n    }\n    int idx \u003d 0;\n    for (LocatedBlock blk : blocks.getLocatedBlocks()) {\n      assert idx \u003c nrBlocks : \"Incorrect index\";\n      DatanodeInfo[] locations \u003d blk.getLocations();\n      String[] hosts \u003d new String[locations.length];\n      String[] names \u003d new String[locations.length];\n      String[] racks \u003d new String[locations.length];\n      for (int hCnt \u003d 0; hCnt \u003c locations.length; hCnt++) {\n        hosts[hCnt] \u003d locations[hCnt].getHostName();\n        names[hCnt] \u003d locations[hCnt].getName();\n        NodeBase node \u003d new NodeBase(names[hCnt], \n                                     locations[hCnt].getNetworkLocation());\n        racks[hCnt] \u003d node.toString();\n      }\n      blkLocations[idx] \u003d new BlockLocation(names, hosts, racks,\n                                            blk.getStartOffset(),\n                                            blk.getBlockSize(),\n                                            blk.isCorrupt());\n      idx++;\n    }\n    return blkLocations;\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/DFSUtil.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,31 @@\n+  public static BlockLocation[] locatedBlocks2Locations(LocatedBlocks blocks) {\n+    if (blocks \u003d\u003d null) {\n+      return new BlockLocation[0];\n+    }\n+    int nrBlocks \u003d blocks.locatedBlockCount();\n+    BlockLocation[] blkLocations \u003d new BlockLocation[nrBlocks];\n+    if (nrBlocks \u003d\u003d 0) {\n+      return blkLocations;\n+    }\n+    int idx \u003d 0;\n+    for (LocatedBlock blk : blocks.getLocatedBlocks()) {\n+      assert idx \u003c nrBlocks : \"Incorrect index\";\n+      DatanodeInfo[] locations \u003d blk.getLocations();\n+      String[] hosts \u003d new String[locations.length];\n+      String[] names \u003d new String[locations.length];\n+      String[] racks \u003d new String[locations.length];\n+      for (int hCnt \u003d 0; hCnt \u003c locations.length; hCnt++) {\n+        hosts[hCnt] \u003d locations[hCnt].getHostName();\n+        names[hCnt] \u003d locations[hCnt].getName();\n+        NodeBase node \u003d new NodeBase(names[hCnt], \n+                                     locations[hCnt].getNetworkLocation());\n+        racks[hCnt] \u003d node.toString();\n+      }\n+      blkLocations[idx] \u003d new BlockLocation(names, hosts, racks,\n+                                            blk.getStartOffset(),\n+                                            blk.getBlockSize(),\n+                                            blk.isCorrupt());\n+      idx++;\n+    }\n+    return blkLocations;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static BlockLocation[] locatedBlocks2Locations(LocatedBlocks blocks) {\n    if (blocks \u003d\u003d null) {\n      return new BlockLocation[0];\n    }\n    int nrBlocks \u003d blocks.locatedBlockCount();\n    BlockLocation[] blkLocations \u003d new BlockLocation[nrBlocks];\n    if (nrBlocks \u003d\u003d 0) {\n      return blkLocations;\n    }\n    int idx \u003d 0;\n    for (LocatedBlock blk : blocks.getLocatedBlocks()) {\n      assert idx \u003c nrBlocks : \"Incorrect index\";\n      DatanodeInfo[] locations \u003d blk.getLocations();\n      String[] hosts \u003d new String[locations.length];\n      String[] names \u003d new String[locations.length];\n      String[] racks \u003d new String[locations.length];\n      for (int hCnt \u003d 0; hCnt \u003c locations.length; hCnt++) {\n        hosts[hCnt] \u003d locations[hCnt].getHostName();\n        names[hCnt] \u003d locations[hCnt].getName();\n        NodeBase node \u003d new NodeBase(names[hCnt], \n                                     locations[hCnt].getNetworkLocation());\n        racks[hCnt] \u003d node.toString();\n      }\n      blkLocations[idx] \u003d new BlockLocation(names, hosts, racks,\n                                            blk.getStartOffset(),\n                                            blk.getBlockSize(),\n                                            blk.isCorrupt());\n      idx++;\n    }\n    return blkLocations;\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/DFSUtil.java"
    }
  }
}