{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSNamesystem.java",
  "functionName": "finalizeINodeFileUnderConstruction",
  "functionId": "finalizeINodeFileUnderConstruction___src-String__pendingFile-INodeFile__latestSnapshot-int__allowCommittedBlock-boolean",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
  "functionStartLine": 3792,
  "functionEndLine": 3817,
  "numCommitsSeen": 2115,
  "timeTaken": 45412,
  "changeHistory": [
    "864f878d5912c82f3204f1582cfb7eb7c9f1a1da",
    "8c84a2a93c22a93b4ff46dd917f6efb995675fbd",
    "bd909ed9f2d853f614f04a50e2230a7932732776",
    "3fa33b5c2c289ceaced30c6c5451f3569110459d",
    "8928729c80af0a154524e06fb13ed9b191986a78",
    "e5afac5896a1a88e152746598527d91f73cbb724",
    "00fe1ed3a4b3ee35fe24be257ec36445d2f44d63",
    "c78e3a7cdd10c40454e9acb06986ba6d8573cb19",
    "80691b073fe7c104a8684c0a8900a1657bcdc03f",
    "a4e0ff5e052abad498595ee198b49c5310c9ec0d",
    "e98529858edeed11c4f900b0db30d7e4eb2ab1ec",
    "70cff9e2f0c8f78c1dc54a064182971bb2106795",
    "44a6560b5da3f79d2299579a36e7a2a60a91f823",
    "ce68f410b05a58ad05965f32ad7f5b246b363a75",
    "3a3e0f573129c8308332d4b301a9319ee579d85a"
  ],
  "changeHistoryShort": {
    "864f878d5912c82f3204f1582cfb7eb7c9f1a1da": "Ybodychange",
    "8c84a2a93c22a93b4ff46dd917f6efb995675fbd": "Ybodychange",
    "bd909ed9f2d853f614f04a50e2230a7932732776": "Ymultichange(Yparameterchange,Ybodychange)",
    "3fa33b5c2c289ceaced30c6c5451f3569110459d": "Ybodychange",
    "8928729c80af0a154524e06fb13ed9b191986a78": "Ybodychange",
    "e5afac5896a1a88e152746598527d91f73cbb724": "Ymodifierchange",
    "00fe1ed3a4b3ee35fe24be257ec36445d2f44d63": "Ybodychange",
    "c78e3a7cdd10c40454e9acb06986ba6d8573cb19": "Ymultichange(Yexceptionschange,Ybodychange)",
    "80691b073fe7c104a8684c0a8900a1657bcdc03f": "Ybodychange",
    "a4e0ff5e052abad498595ee198b49c5310c9ec0d": "Ybodychange",
    "e98529858edeed11c4f900b0db30d7e4eb2ab1ec": "Ybodychange",
    "70cff9e2f0c8f78c1dc54a064182971bb2106795": "Yparameterchange",
    "44a6560b5da3f79d2299579a36e7a2a60a91f823": "Ybodychange",
    "ce68f410b05a58ad05965f32ad7f5b246b363a75": "Ymultichange(Yparameterchange,Ybodychange)",
    "3a3e0f573129c8308332d4b301a9319ee579d85a": "Ybodychange"
  },
  "changeHistoryDetails": {
    "864f878d5912c82f3204f1582cfb7eb7c9f1a1da": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10763. Open files can leak permanently due to inconsistent lease update. Contributed by Kihwal Lee.\n",
      "commitDate": "15/08/16 3:28 PM",
      "commitName": "864f878d5912c82f3204f1582cfb7eb7c9f1a1da",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "15/08/16 2:45 PM",
      "commitNameOld": "03dea65e0b17ca2f9460bb6110f6ab3a321b8bf2",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 0.03,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,26 @@\n   void finalizeINodeFileUnderConstruction(String src, INodeFile pendingFile,\n       int latestSnapshot, boolean allowCommittedBlock) throws IOException {\n     assert hasWriteLock();\n \n     FileUnderConstructionFeature uc \u003d pendingFile.getFileUnderConstructionFeature();\n     if (uc \u003d\u003d null) {\n       throw new IOException(\"Cannot finalize file \" + src\n           + \" because it is not under construction\");\n     }\n-    leaseManager.removeLease(uc.getClientName(), pendingFile);\n \n     pendingFile.recordModification(latestSnapshot);\n \n     // The file is no longer pending.\n     // Create permanent INode, update blocks. No need to replace the inode here\n     // since we just remove the uc feature from pendingFile\n     pendingFile.toCompleteFile(now(),\n         allowCommittedBlock? numCommittedAllowed: 0,\n         blockManager.getMinReplication());\n \n+    leaseManager.removeLease(uc.getClientName(), pendingFile);\n+\n     // close file and persist block allocations for this file\n     closeFile(src, pendingFile);\n \n     blockManager.checkRedundancy(pendingFile);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void finalizeINodeFileUnderConstruction(String src, INodeFile pendingFile,\n      int latestSnapshot, boolean allowCommittedBlock) throws IOException {\n    assert hasWriteLock();\n\n    FileUnderConstructionFeature uc \u003d pendingFile.getFileUnderConstructionFeature();\n    if (uc \u003d\u003d null) {\n      throw new IOException(\"Cannot finalize file \" + src\n          + \" because it is not under construction\");\n    }\n\n    pendingFile.recordModification(latestSnapshot);\n\n    // The file is no longer pending.\n    // Create permanent INode, update blocks. No need to replace the inode here\n    // since we just remove the uc feature from pendingFile\n    pendingFile.toCompleteFile(now(),\n        allowCommittedBlock? numCommittedAllowed: 0,\n        blockManager.getMinReplication());\n\n    leaseManager.removeLease(uc.getClientName(), pendingFile);\n\n    // close file and persist block allocations for this file\n    closeFile(src, pendingFile);\n\n    blockManager.checkRedundancy(pendingFile);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "8c84a2a93c22a93b4ff46dd917f6efb995675fbd": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10236. Erasure Coding: Rename replication-based names in BlockManager to more generic [part-3]. Contributed by Rakesh R.\n",
      "commitDate": "26/05/16 4:50 PM",
      "commitName": "8c84a2a93c22a93b4ff46dd917f6efb995675fbd",
      "commitAuthor": "Zhe Zhang",
      "commitDateOld": "29/04/16 1:50 PM",
      "commitNameOld": "7da540d03eccc2f97950bf47e8b35ce8c889d1e0",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 27.13,
      "commitsBetweenForRepo": 187,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n   void finalizeINodeFileUnderConstruction(String src, INodeFile pendingFile,\n       int latestSnapshot, boolean allowCommittedBlock) throws IOException {\n     assert hasWriteLock();\n \n     FileUnderConstructionFeature uc \u003d pendingFile.getFileUnderConstructionFeature();\n     if (uc \u003d\u003d null) {\n       throw new IOException(\"Cannot finalize file \" + src\n           + \" because it is not under construction\");\n     }\n     leaseManager.removeLease(uc.getClientName(), pendingFile);\n \n     pendingFile.recordModification(latestSnapshot);\n \n     // The file is no longer pending.\n     // Create permanent INode, update blocks. No need to replace the inode here\n     // since we just remove the uc feature from pendingFile\n     pendingFile.toCompleteFile(now(),\n         allowCommittedBlock? numCommittedAllowed: 0,\n         blockManager.getMinReplication());\n \n     // close file and persist block allocations for this file\n     closeFile(src, pendingFile);\n \n-    blockManager.checkReplication(pendingFile);\n+    blockManager.checkRedundancy(pendingFile);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void finalizeINodeFileUnderConstruction(String src, INodeFile pendingFile,\n      int latestSnapshot, boolean allowCommittedBlock) throws IOException {\n    assert hasWriteLock();\n\n    FileUnderConstructionFeature uc \u003d pendingFile.getFileUnderConstructionFeature();\n    if (uc \u003d\u003d null) {\n      throw new IOException(\"Cannot finalize file \" + src\n          + \" because it is not under construction\");\n    }\n    leaseManager.removeLease(uc.getClientName(), pendingFile);\n\n    pendingFile.recordModification(latestSnapshot);\n\n    // The file is no longer pending.\n    // Create permanent INode, update blocks. No need to replace the inode here\n    // since we just remove the uc feature from pendingFile\n    pendingFile.toCompleteFile(now(),\n        allowCommittedBlock? numCommittedAllowed: 0,\n        blockManager.getMinReplication());\n\n    // close file and persist block allocations for this file\n    closeFile(src, pendingFile);\n\n    blockManager.checkRedundancy(pendingFile);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "bd909ed9f2d853f614f04a50e2230a7932732776": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-8999. Allow a file to be closed with COMMITTED but not yet COMPLETE blocks.\n",
      "commitDate": "25/01/16 6:32 PM",
      "commitName": "bd909ed9f2d853f614f04a50e2230a7932732776",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-8999. Allow a file to be closed with COMMITTED but not yet COMPLETE blocks.\n",
          "commitDate": "25/01/16 6:32 PM",
          "commitName": "bd909ed9f2d853f614f04a50e2230a7932732776",
          "commitAuthor": "Tsz-Wo Nicholas Sze",
          "commitDateOld": "24/01/16 2:19 PM",
          "commitNameOld": "10a2bc0dffaece216eb9a6bac3236a086b9ece31",
          "commitAuthorOld": "Eric Yang",
          "daysBetweenCommits": 1.18,
          "commitsBetweenForRepo": 11,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,25 @@\n-  void finalizeINodeFileUnderConstruction(\n-      String src, INodeFile pendingFile, int latestSnapshot) throws IOException {\n+  void finalizeINodeFileUnderConstruction(String src, INodeFile pendingFile,\n+      int latestSnapshot, boolean allowCommittedBlock) throws IOException {\n     assert hasWriteLock();\n \n     FileUnderConstructionFeature uc \u003d pendingFile.getFileUnderConstructionFeature();\n     if (uc \u003d\u003d null) {\n       throw new IOException(\"Cannot finalize file \" + src\n           + \" because it is not under construction\");\n     }\n     leaseManager.removeLease(uc.getClientName(), pendingFile);\n \n     pendingFile.recordModification(latestSnapshot);\n \n     // The file is no longer pending.\n     // Create permanent INode, update blocks. No need to replace the inode here\n     // since we just remove the uc feature from pendingFile\n-    pendingFile.toCompleteFile(now());\n+    pendingFile.toCompleteFile(now(),\n+        allowCommittedBlock? numCommittedAllowed: 0,\n+        blockManager.getMinReplication());\n \n     // close file and persist block allocations for this file\n     closeFile(src, pendingFile);\n \n     blockManager.checkReplication(pendingFile);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void finalizeINodeFileUnderConstruction(String src, INodeFile pendingFile,\n      int latestSnapshot, boolean allowCommittedBlock) throws IOException {\n    assert hasWriteLock();\n\n    FileUnderConstructionFeature uc \u003d pendingFile.getFileUnderConstructionFeature();\n    if (uc \u003d\u003d null) {\n      throw new IOException(\"Cannot finalize file \" + src\n          + \" because it is not under construction\");\n    }\n    leaseManager.removeLease(uc.getClientName(), pendingFile);\n\n    pendingFile.recordModification(latestSnapshot);\n\n    // The file is no longer pending.\n    // Create permanent INode, update blocks. No need to replace the inode here\n    // since we just remove the uc feature from pendingFile\n    pendingFile.toCompleteFile(now(),\n        allowCommittedBlock? numCommittedAllowed: 0,\n        blockManager.getMinReplication());\n\n    // close file and persist block allocations for this file\n    closeFile(src, pendingFile);\n\n    blockManager.checkReplication(pendingFile);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
          "extendedDetails": {
            "oldValue": "[src-String, pendingFile-INodeFile, latestSnapshot-int]",
            "newValue": "[src-String, pendingFile-INodeFile, latestSnapshot-int, allowCommittedBlock-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-8999. Allow a file to be closed with COMMITTED but not yet COMPLETE blocks.\n",
          "commitDate": "25/01/16 6:32 PM",
          "commitName": "bd909ed9f2d853f614f04a50e2230a7932732776",
          "commitAuthor": "Tsz-Wo Nicholas Sze",
          "commitDateOld": "24/01/16 2:19 PM",
          "commitNameOld": "10a2bc0dffaece216eb9a6bac3236a086b9ece31",
          "commitAuthorOld": "Eric Yang",
          "daysBetweenCommits": 1.18,
          "commitsBetweenForRepo": 11,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,25 @@\n-  void finalizeINodeFileUnderConstruction(\n-      String src, INodeFile pendingFile, int latestSnapshot) throws IOException {\n+  void finalizeINodeFileUnderConstruction(String src, INodeFile pendingFile,\n+      int latestSnapshot, boolean allowCommittedBlock) throws IOException {\n     assert hasWriteLock();\n \n     FileUnderConstructionFeature uc \u003d pendingFile.getFileUnderConstructionFeature();\n     if (uc \u003d\u003d null) {\n       throw new IOException(\"Cannot finalize file \" + src\n           + \" because it is not under construction\");\n     }\n     leaseManager.removeLease(uc.getClientName(), pendingFile);\n \n     pendingFile.recordModification(latestSnapshot);\n \n     // The file is no longer pending.\n     // Create permanent INode, update blocks. No need to replace the inode here\n     // since we just remove the uc feature from pendingFile\n-    pendingFile.toCompleteFile(now());\n+    pendingFile.toCompleteFile(now(),\n+        allowCommittedBlock? numCommittedAllowed: 0,\n+        blockManager.getMinReplication());\n \n     // close file and persist block allocations for this file\n     closeFile(src, pendingFile);\n \n     blockManager.checkReplication(pendingFile);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void finalizeINodeFileUnderConstruction(String src, INodeFile pendingFile,\n      int latestSnapshot, boolean allowCommittedBlock) throws IOException {\n    assert hasWriteLock();\n\n    FileUnderConstructionFeature uc \u003d pendingFile.getFileUnderConstructionFeature();\n    if (uc \u003d\u003d null) {\n      throw new IOException(\"Cannot finalize file \" + src\n          + \" because it is not under construction\");\n    }\n    leaseManager.removeLease(uc.getClientName(), pendingFile);\n\n    pendingFile.recordModification(latestSnapshot);\n\n    // The file is no longer pending.\n    // Create permanent INode, update blocks. No need to replace the inode here\n    // since we just remove the uc feature from pendingFile\n    pendingFile.toCompleteFile(now(),\n        allowCommittedBlock? numCommittedAllowed: 0,\n        blockManager.getMinReplication());\n\n    // close file and persist block allocations for this file\n    closeFile(src, pendingFile);\n\n    blockManager.checkReplication(pendingFile);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
          "extendedDetails": {}
        }
      ]
    },
    "3fa33b5c2c289ceaced30c6c5451f3569110459d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9430 Remove waitForLoadingFSImage since checkNNStartup has ensured image loaded and namenode started. (Brahma Reddy Battula via mingma)\n",
      "commitDate": "04/12/15 9:47 AM",
      "commitName": "3fa33b5c2c289ceaced30c6c5451f3569110459d",
      "commitAuthor": "Ming Ma",
      "commitDateOld": "01/12/15 4:09 PM",
      "commitNameOld": "a49cc74b4c72195dee1dfb6f9548e5e411dff553",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 2.74,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,23 @@\n   void finalizeINodeFileUnderConstruction(\n       String src, INodeFile pendingFile, int latestSnapshot) throws IOException {\n     assert hasWriteLock();\n \n     FileUnderConstructionFeature uc \u003d pendingFile.getFileUnderConstructionFeature();\n     if (uc \u003d\u003d null) {\n       throw new IOException(\"Cannot finalize file \" + src\n           + \" because it is not under construction\");\n     }\n     leaseManager.removeLease(uc.getClientName(), pendingFile);\n \n     pendingFile.recordModification(latestSnapshot);\n \n     // The file is no longer pending.\n     // Create permanent INode, update blocks. No need to replace the inode here\n     // since we just remove the uc feature from pendingFile\n     pendingFile.toCompleteFile(now());\n \n-    waitForLoadingFSImage();\n     // close file and persist block allocations for this file\n     closeFile(src, pendingFile);\n \n     blockManager.checkReplication(pendingFile);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void finalizeINodeFileUnderConstruction(\n      String src, INodeFile pendingFile, int latestSnapshot) throws IOException {\n    assert hasWriteLock();\n\n    FileUnderConstructionFeature uc \u003d pendingFile.getFileUnderConstructionFeature();\n    if (uc \u003d\u003d null) {\n      throw new IOException(\"Cannot finalize file \" + src\n          + \" because it is not under construction\");\n    }\n    leaseManager.removeLease(uc.getClientName(), pendingFile);\n\n    pendingFile.recordModification(latestSnapshot);\n\n    // The file is no longer pending.\n    // Create permanent INode, update blocks. No need to replace the inode here\n    // since we just remove the uc feature from pendingFile\n    pendingFile.toCompleteFile(now());\n\n    // close file and persist block allocations for this file\n    closeFile(src, pendingFile);\n\n    blockManager.checkReplication(pendingFile);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "8928729c80af0a154524e06fb13ed9b191986a78": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8384. Allow NN to startup if there are files having a lease but are not under construction. Contributed by Jing Zhao.\n",
      "commitDate": "04/09/15 11:42 AM",
      "commitName": "8928729c80af0a154524e06fb13ed9b191986a78",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "01/09/15 10:28 PM",
      "commitNameOld": "65ccf2b1252a5c83755fa24a93cf1d30ee59b2c3",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 2.55,
      "commitsBetweenForRepo": 21,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,24 @@\n   void finalizeINodeFileUnderConstruction(\n       String src, INodeFile pendingFile, int latestSnapshot) throws IOException {\n     assert hasWriteLock();\n \n     FileUnderConstructionFeature uc \u003d pendingFile.getFileUnderConstructionFeature();\n-    Preconditions.checkArgument(uc !\u003d null);\n+    if (uc \u003d\u003d null) {\n+      throw new IOException(\"Cannot finalize file \" + src\n+          + \" because it is not under construction\");\n+    }\n     leaseManager.removeLease(uc.getClientName(), pendingFile);\n \n     pendingFile.recordModification(latestSnapshot);\n \n     // The file is no longer pending.\n     // Create permanent INode, update blocks. No need to replace the inode here\n     // since we just remove the uc feature from pendingFile\n     pendingFile.toCompleteFile(now());\n \n     waitForLoadingFSImage();\n     // close file and persist block allocations for this file\n     closeFile(src, pendingFile);\n \n     blockManager.checkReplication(pendingFile);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void finalizeINodeFileUnderConstruction(\n      String src, INodeFile pendingFile, int latestSnapshot) throws IOException {\n    assert hasWriteLock();\n\n    FileUnderConstructionFeature uc \u003d pendingFile.getFileUnderConstructionFeature();\n    if (uc \u003d\u003d null) {\n      throw new IOException(\"Cannot finalize file \" + src\n          + \" because it is not under construction\");\n    }\n    leaseManager.removeLease(uc.getClientName(), pendingFile);\n\n    pendingFile.recordModification(latestSnapshot);\n\n    // The file is no longer pending.\n    // Create permanent INode, update blocks. No need to replace the inode here\n    // since we just remove the uc feature from pendingFile\n    pendingFile.toCompleteFile(now());\n\n    waitForLoadingFSImage();\n    // close file and persist block allocations for this file\n    closeFile(src, pendingFile);\n\n    blockManager.checkReplication(pendingFile);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "e5afac5896a1a88e152746598527d91f73cbb724": {
      "type": "Ymodifierchange",
      "commitMessage": "HDFS-8394. Move getAdditionalBlock() and related functionalities into a separate class. Contributed by Haohui Mai.\n",
      "commitDate": "15/05/15 7:09 PM",
      "commitName": "e5afac5896a1a88e152746598527d91f73cbb724",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "14/05/15 10:37 PM",
      "commitNameOld": "3bef7c80a97709b367781180b2e11fc50653d3c8",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 0.86,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n-  private void finalizeINodeFileUnderConstruction(String src,\n-      INodeFile pendingFile, int latestSnapshot) throws IOException {\n+  void finalizeINodeFileUnderConstruction(\n+      String src, INodeFile pendingFile, int latestSnapshot) throws IOException {\n     assert hasWriteLock();\n \n     FileUnderConstructionFeature uc \u003d pendingFile.getFileUnderConstructionFeature();\n     Preconditions.checkArgument(uc !\u003d null);\n     leaseManager.removeLease(uc.getClientName(), pendingFile);\n-    \n+\n     pendingFile.recordModification(latestSnapshot);\n \n     // The file is no longer pending.\n     // Create permanent INode, update blocks. No need to replace the inode here\n     // since we just remove the uc feature from pendingFile\n     pendingFile.toCompleteFile(now());\n \n     waitForLoadingFSImage();\n     // close file and persist block allocations for this file\n     closeFile(src, pendingFile);\n \n     blockManager.checkReplication(pendingFile);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void finalizeINodeFileUnderConstruction(\n      String src, INodeFile pendingFile, int latestSnapshot) throws IOException {\n    assert hasWriteLock();\n\n    FileUnderConstructionFeature uc \u003d pendingFile.getFileUnderConstructionFeature();\n    Preconditions.checkArgument(uc !\u003d null);\n    leaseManager.removeLease(uc.getClientName(), pendingFile);\n\n    pendingFile.recordModification(latestSnapshot);\n\n    // The file is no longer pending.\n    // Create permanent INode, update blocks. No need to replace the inode here\n    // since we just remove the uc feature from pendingFile\n    pendingFile.toCompleteFile(now());\n\n    waitForLoadingFSImage();\n    // close file and persist block allocations for this file\n    closeFile(src, pendingFile);\n\n    blockManager.checkReplication(pendingFile);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {
        "oldValue": "[private]",
        "newValue": "[]"
      }
    },
    "00fe1ed3a4b3ee35fe24be257ec36445d2f44d63": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6757. Simplify lease manager with INodeID. Contributed by Haohui Mai.\n",
      "commitDate": "08/05/15 11:04 PM",
      "commitName": "00fe1ed3a4b3ee35fe24be257ec36445d2f44d63",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "08/05/15 7:30 AM",
      "commitNameOld": "6f622672b62aa8d719060063ef0e47480cdc8655",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 0.65,
      "commitsBetweenForRepo": 28,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n   private void finalizeINodeFileUnderConstruction(String src,\n       INodeFile pendingFile, int latestSnapshot) throws IOException {\n     assert hasWriteLock();\n \n     FileUnderConstructionFeature uc \u003d pendingFile.getFileUnderConstructionFeature();\n     Preconditions.checkArgument(uc !\u003d null);\n-    leaseManager.removeLease(uc.getClientName(), src);\n+    leaseManager.removeLease(uc.getClientName(), pendingFile);\n     \n     pendingFile.recordModification(latestSnapshot);\n \n     // The file is no longer pending.\n     // Create permanent INode, update blocks. No need to replace the inode here\n     // since we just remove the uc feature from pendingFile\n     pendingFile.toCompleteFile(now());\n \n     waitForLoadingFSImage();\n     // close file and persist block allocations for this file\n     closeFile(src, pendingFile);\n \n     blockManager.checkReplication(pendingFile);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void finalizeINodeFileUnderConstruction(String src,\n      INodeFile pendingFile, int latestSnapshot) throws IOException {\n    assert hasWriteLock();\n\n    FileUnderConstructionFeature uc \u003d pendingFile.getFileUnderConstructionFeature();\n    Preconditions.checkArgument(uc !\u003d null);\n    leaseManager.removeLease(uc.getClientName(), pendingFile);\n    \n    pendingFile.recordModification(latestSnapshot);\n\n    // The file is no longer pending.\n    // Create permanent INode, update blocks. No need to replace the inode here\n    // since we just remove the uc feature from pendingFile\n    pendingFile.toCompleteFile(now());\n\n    waitForLoadingFSImage();\n    // close file and persist block allocations for this file\n    closeFile(src, pendingFile);\n\n    blockManager.checkReplication(pendingFile);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "c78e3a7cdd10c40454e9acb06986ba6d8573cb19": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "HDFS-7059. Avoid resolving path multiple times. Contributed by Jing Zhao.\n",
      "commitDate": "12/12/14 3:13 PM",
      "commitName": "c78e3a7cdd10c40454e9acb06986ba6d8573cb19",
      "commitAuthor": "Jing Zhao",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "HDFS-7059. Avoid resolving path multiple times. Contributed by Jing Zhao.\n",
          "commitDate": "12/12/14 3:13 PM",
          "commitName": "c78e3a7cdd10c40454e9acb06986ba6d8573cb19",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "12/12/14 11:51 AM",
          "commitNameOld": "46612c7a5135d20b20403780b47dd00654aab057",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 0.14,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,21 @@\n   private void finalizeINodeFileUnderConstruction(String src,\n-      INodeFile pendingFile, int latestSnapshot) throws IOException,\n-      UnresolvedLinkException {\n+      INodeFile pendingFile, int latestSnapshot) throws IOException {\n     assert hasWriteLock();\n \n     FileUnderConstructionFeature uc \u003d pendingFile.getFileUnderConstructionFeature();\n     Preconditions.checkArgument(uc !\u003d null);\n     leaseManager.removeLease(uc.getClientName(), src);\n     \n     pendingFile.recordModification(latestSnapshot);\n \n     // The file is no longer pending.\n     // Create permanent INode, update blocks. No need to replace the inode here\n     // since we just remove the uc feature from pendingFile\n-    final INodeFile newFile \u003d pendingFile.toCompleteFile(now());\n+    pendingFile.toCompleteFile(now());\n \n     waitForLoadingFSImage();\n     // close file and persist block allocations for this file\n-    closeFile(src, newFile);\n+    closeFile(src, pendingFile);\n \n-    blockManager.checkReplication(newFile);\n+    blockManager.checkReplication(pendingFile);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void finalizeINodeFileUnderConstruction(String src,\n      INodeFile pendingFile, int latestSnapshot) throws IOException {\n    assert hasWriteLock();\n\n    FileUnderConstructionFeature uc \u003d pendingFile.getFileUnderConstructionFeature();\n    Preconditions.checkArgument(uc !\u003d null);\n    leaseManager.removeLease(uc.getClientName(), src);\n    \n    pendingFile.recordModification(latestSnapshot);\n\n    // The file is no longer pending.\n    // Create permanent INode, update blocks. No need to replace the inode here\n    // since we just remove the uc feature from pendingFile\n    pendingFile.toCompleteFile(now());\n\n    waitForLoadingFSImage();\n    // close file and persist block allocations for this file\n    closeFile(src, pendingFile);\n\n    blockManager.checkReplication(pendingFile);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
          "extendedDetails": {
            "oldValue": "[IOException, UnresolvedLinkException]",
            "newValue": "[IOException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-7059. Avoid resolving path multiple times. Contributed by Jing Zhao.\n",
          "commitDate": "12/12/14 3:13 PM",
          "commitName": "c78e3a7cdd10c40454e9acb06986ba6d8573cb19",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "12/12/14 11:51 AM",
          "commitNameOld": "46612c7a5135d20b20403780b47dd00654aab057",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 0.14,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,21 @@\n   private void finalizeINodeFileUnderConstruction(String src,\n-      INodeFile pendingFile, int latestSnapshot) throws IOException,\n-      UnresolvedLinkException {\n+      INodeFile pendingFile, int latestSnapshot) throws IOException {\n     assert hasWriteLock();\n \n     FileUnderConstructionFeature uc \u003d pendingFile.getFileUnderConstructionFeature();\n     Preconditions.checkArgument(uc !\u003d null);\n     leaseManager.removeLease(uc.getClientName(), src);\n     \n     pendingFile.recordModification(latestSnapshot);\n \n     // The file is no longer pending.\n     // Create permanent INode, update blocks. No need to replace the inode here\n     // since we just remove the uc feature from pendingFile\n-    final INodeFile newFile \u003d pendingFile.toCompleteFile(now());\n+    pendingFile.toCompleteFile(now());\n \n     waitForLoadingFSImage();\n     // close file and persist block allocations for this file\n-    closeFile(src, newFile);\n+    closeFile(src, pendingFile);\n \n-    blockManager.checkReplication(newFile);\n+    blockManager.checkReplication(pendingFile);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void finalizeINodeFileUnderConstruction(String src,\n      INodeFile pendingFile, int latestSnapshot) throws IOException {\n    assert hasWriteLock();\n\n    FileUnderConstructionFeature uc \u003d pendingFile.getFileUnderConstructionFeature();\n    Preconditions.checkArgument(uc !\u003d null);\n    leaseManager.removeLease(uc.getClientName(), src);\n    \n    pendingFile.recordModification(latestSnapshot);\n\n    // The file is no longer pending.\n    // Create permanent INode, update blocks. No need to replace the inode here\n    // since we just remove the uc feature from pendingFile\n    pendingFile.toCompleteFile(now());\n\n    waitForLoadingFSImage();\n    // close file and persist block allocations for this file\n    closeFile(src, pendingFile);\n\n    blockManager.checkReplication(pendingFile);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
          "extendedDetails": {}
        }
      ]
    },
    "80691b073fe7c104a8684c0a8900a1657bcdc03f": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6838. Code cleanup for unnecessary INode replacement. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1617361 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/08/14 2:28 PM",
      "commitName": "80691b073fe7c104a8684c0a8900a1657bcdc03f",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "07/08/14 10:41 PM",
      "commitNameOld": "d3a2fe280775e9320181b671d5951f06837bddad",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 3.66,
      "commitsBetweenForRepo": 22,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n   private void finalizeINodeFileUnderConstruction(String src,\n       INodeFile pendingFile, int latestSnapshot) throws IOException,\n       UnresolvedLinkException {\n     assert hasWriteLock();\n \n     FileUnderConstructionFeature uc \u003d pendingFile.getFileUnderConstructionFeature();\n     Preconditions.checkArgument(uc !\u003d null);\n     leaseManager.removeLease(uc.getClientName(), src);\n     \n-    pendingFile \u003d pendingFile.recordModification(latestSnapshot);\n+    pendingFile.recordModification(latestSnapshot);\n \n     // The file is no longer pending.\n     // Create permanent INode, update blocks. No need to replace the inode here\n     // since we just remove the uc feature from pendingFile\n     final INodeFile newFile \u003d pendingFile.toCompleteFile(now());\n \n     waitForLoadingFSImage();\n     // close file and persist block allocations for this file\n     closeFile(src, newFile);\n \n     blockManager.checkReplication(newFile);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void finalizeINodeFileUnderConstruction(String src,\n      INodeFile pendingFile, int latestSnapshot) throws IOException,\n      UnresolvedLinkException {\n    assert hasWriteLock();\n\n    FileUnderConstructionFeature uc \u003d pendingFile.getFileUnderConstructionFeature();\n    Preconditions.checkArgument(uc !\u003d null);\n    leaseManager.removeLease(uc.getClientName(), src);\n    \n    pendingFile.recordModification(latestSnapshot);\n\n    // The file is no longer pending.\n    // Create permanent INode, update blocks. No need to replace the inode here\n    // since we just remove the uc feature from pendingFile\n    final INodeFile newFile \u003d pendingFile.toCompleteFile(now());\n\n    waitForLoadingFSImage();\n    // close file and persist block allocations for this file\n    closeFile(src, newFile);\n\n    blockManager.checkReplication(newFile);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "a4e0ff5e052abad498595ee198b49c5310c9ec0d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6480. Move waitForReady() from FSDirectory to FSNamesystem. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1603705 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/06/14 9:13 PM",
      "commitName": "a4e0ff5e052abad498595ee198b49c5310c9ec0d",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "17/06/14 6:00 PM",
      "commitNameOld": "8e8a769e7f5ce806ffdf584f017512ab58cd84e8",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 1.13,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,22 @@\n   private void finalizeINodeFileUnderConstruction(String src,\n       INodeFile pendingFile, int latestSnapshot) throws IOException,\n       UnresolvedLinkException {\n     assert hasWriteLock();\n+\n     FileUnderConstructionFeature uc \u003d pendingFile.getFileUnderConstructionFeature();\n     Preconditions.checkArgument(uc !\u003d null);\n     leaseManager.removeLease(uc.getClientName(), src);\n     \n     pendingFile \u003d pendingFile.recordModification(latestSnapshot);\n \n     // The file is no longer pending.\n     // Create permanent INode, update blocks. No need to replace the inode here\n     // since we just remove the uc feature from pendingFile\n     final INodeFile newFile \u003d pendingFile.toCompleteFile(now());\n \n+    waitForLoadingFSImage();\n     // close file and persist block allocations for this file\n     closeFile(src, newFile);\n \n     blockManager.checkReplication(newFile);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void finalizeINodeFileUnderConstruction(String src,\n      INodeFile pendingFile, int latestSnapshot) throws IOException,\n      UnresolvedLinkException {\n    assert hasWriteLock();\n\n    FileUnderConstructionFeature uc \u003d pendingFile.getFileUnderConstructionFeature();\n    Preconditions.checkArgument(uc !\u003d null);\n    leaseManager.removeLease(uc.getClientName(), src);\n    \n    pendingFile \u003d pendingFile.recordModification(latestSnapshot);\n\n    // The file is no longer pending.\n    // Create permanent INode, update blocks. No need to replace the inode here\n    // since we just remove the uc feature from pendingFile\n    final INodeFile newFile \u003d pendingFile.toCompleteFile(now());\n\n    waitForLoadingFSImage();\n    // close file and persist block allocations for this file\n    closeFile(src, newFile);\n\n    blockManager.checkReplication(newFile);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "e98529858edeed11c4f900b0db30d7e4eb2ab1ec": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6315. Decouple recording edit logs from FSDirectory. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1601960 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/06/14 10:22 AM",
      "commitName": "e98529858edeed11c4f900b0db30d7e4eb2ab1ec",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "03/06/14 11:33 AM",
      "commitNameOld": "02fcb6b6bae7c3fe2a10b00b2a563e4098ff225e",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 7.95,
      "commitsBetweenForRepo": 35,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   private void finalizeINodeFileUnderConstruction(String src,\n       INodeFile pendingFile, int latestSnapshot) throws IOException,\n       UnresolvedLinkException {\n     assert hasWriteLock();\n     FileUnderConstructionFeature uc \u003d pendingFile.getFileUnderConstructionFeature();\n     Preconditions.checkArgument(uc !\u003d null);\n     leaseManager.removeLease(uc.getClientName(), src);\n     \n     pendingFile \u003d pendingFile.recordModification(latestSnapshot);\n \n     // The file is no longer pending.\n     // Create permanent INode, update blocks. No need to replace the inode here\n     // since we just remove the uc feature from pendingFile\n     final INodeFile newFile \u003d pendingFile.toCompleteFile(now());\n \n     // close file and persist block allocations for this file\n-    dir.closeFile(src, newFile);\n+    closeFile(src, newFile);\n \n     blockManager.checkReplication(newFile);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void finalizeINodeFileUnderConstruction(String src,\n      INodeFile pendingFile, int latestSnapshot) throws IOException,\n      UnresolvedLinkException {\n    assert hasWriteLock();\n    FileUnderConstructionFeature uc \u003d pendingFile.getFileUnderConstructionFeature();\n    Preconditions.checkArgument(uc !\u003d null);\n    leaseManager.removeLease(uc.getClientName(), src);\n    \n    pendingFile \u003d pendingFile.recordModification(latestSnapshot);\n\n    // The file is no longer pending.\n    // Create permanent INode, update blocks. No need to replace the inode here\n    // since we just remove the uc feature from pendingFile\n    final INodeFile newFile \u003d pendingFile.toCompleteFile(now());\n\n    // close file and persist block allocations for this file\n    closeFile(src, newFile);\n\n    blockManager.checkReplication(newFile);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "70cff9e2f0c8f78c1dc54a064182971bb2106795": {
      "type": "Yparameterchange",
      "commitMessage": "HDFS-5715. Use Snapshot ID to indicate the corresponding Snapshot for a FileDiff/DirectoryDiff. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1556353 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/01/14 12:52 PM",
      "commitName": "70cff9e2f0c8f78c1dc54a064182971bb2106795",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "02/01/14 6:45 PM",
      "commitNameOld": "d85c017d0488930d806f267141057fc73e68c728",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 4.75,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   private void finalizeINodeFileUnderConstruction(String src,\n-      INodeFile pendingFile, Snapshot latestSnapshot) throws IOException,\n+      INodeFile pendingFile, int latestSnapshot) throws IOException,\n       UnresolvedLinkException {\n     assert hasWriteLock();\n     FileUnderConstructionFeature uc \u003d pendingFile.getFileUnderConstructionFeature();\n     Preconditions.checkArgument(uc !\u003d null);\n     leaseManager.removeLease(uc.getClientName(), src);\n     \n     pendingFile \u003d pendingFile.recordModification(latestSnapshot);\n \n     // The file is no longer pending.\n     // Create permanent INode, update blocks. No need to replace the inode here\n     // since we just remove the uc feature from pendingFile\n     final INodeFile newFile \u003d pendingFile.toCompleteFile(now());\n \n     // close file and persist block allocations for this file\n     dir.closeFile(src, newFile);\n \n     blockManager.checkReplication(newFile);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void finalizeINodeFileUnderConstruction(String src,\n      INodeFile pendingFile, int latestSnapshot) throws IOException,\n      UnresolvedLinkException {\n    assert hasWriteLock();\n    FileUnderConstructionFeature uc \u003d pendingFile.getFileUnderConstructionFeature();\n    Preconditions.checkArgument(uc !\u003d null);\n    leaseManager.removeLease(uc.getClientName(), src);\n    \n    pendingFile \u003d pendingFile.recordModification(latestSnapshot);\n\n    // The file is no longer pending.\n    // Create permanent INode, update blocks. No need to replace the inode here\n    // since we just remove the uc feature from pendingFile\n    final INodeFile newFile \u003d pendingFile.toCompleteFile(now());\n\n    // close file and persist block allocations for this file\n    dir.closeFile(src, newFile);\n\n    blockManager.checkReplication(newFile);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {
        "oldValue": "[src-String, pendingFile-INodeFile, latestSnapshot-Snapshot]",
        "newValue": "[src-String, pendingFile-INodeFile, latestSnapshot-int]"
      }
    },
    "44a6560b5da3f79d2299579a36e7a2a60a91f823": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5632. Flatten INodeDirectory hierarchy: Replace INodeDirectoryWithSnapshot with DirectoryWithSnapshotFeature.  Contributed by jing9 \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1550917 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/12/13 2:13 AM",
      "commitName": "44a6560b5da3f79d2299579a36e7a2a60a91f823",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "09/12/13 9:38 AM",
      "commitNameOld": "43c33491fcfa5155455efd8161cf7a11b3630b2d",
      "commitAuthorOld": "",
      "daysBetweenCommits": 4.69,
      "commitsBetweenForRepo": 33,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,20 @@\n   private void finalizeINodeFileUnderConstruction(String src,\n       INodeFile pendingFile, Snapshot latestSnapshot) throws IOException,\n       UnresolvedLinkException {\n     assert hasWriteLock();\n     FileUnderConstructionFeature uc \u003d pendingFile.getFileUnderConstructionFeature();\n     Preconditions.checkArgument(uc !\u003d null);\n     leaseManager.removeLease(uc.getClientName(), src);\n     \n-    pendingFile \u003d pendingFile.recordModification(latestSnapshot,\n-        dir.getINodeMap());\n+    pendingFile \u003d pendingFile.recordModification(latestSnapshot);\n \n     // The file is no longer pending.\n     // Create permanent INode, update blocks. No need to replace the inode here\n     // since we just remove the uc feature from pendingFile\n     final INodeFile newFile \u003d pendingFile.toCompleteFile(now());\n \n     // close file and persist block allocations for this file\n     dir.closeFile(src, newFile);\n \n     blockManager.checkReplication(newFile);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void finalizeINodeFileUnderConstruction(String src,\n      INodeFile pendingFile, Snapshot latestSnapshot) throws IOException,\n      UnresolvedLinkException {\n    assert hasWriteLock();\n    FileUnderConstructionFeature uc \u003d pendingFile.getFileUnderConstructionFeature();\n    Preconditions.checkArgument(uc !\u003d null);\n    leaseManager.removeLease(uc.getClientName(), src);\n    \n    pendingFile \u003d pendingFile.recordModification(latestSnapshot);\n\n    // The file is no longer pending.\n    // Create permanent INode, update blocks. No need to replace the inode here\n    // since we just remove the uc feature from pendingFile\n    final INodeFile newFile \u003d pendingFile.toCompleteFile(now());\n\n    // close file and persist block allocations for this file\n    dir.closeFile(src, newFile);\n\n    blockManager.checkReplication(newFile);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "ce68f410b05a58ad05965f32ad7f5b246b363a75": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-5285. Flatten INodeFile hierarchy: Replace INodeFileUnderConstruction and INodeFileUnderConstructionWithSnapshot with FileUnderContructionFeature.  Contributed by jing9\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1544389 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/11/13 5:39 PM",
      "commitName": "ce68f410b05a58ad05965f32ad7f5b246b363a75",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-5285. Flatten INodeFile hierarchy: Replace INodeFileUnderConstruction and INodeFileUnderConstructionWithSnapshot with FileUnderContructionFeature.  Contributed by jing9\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1544389 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "21/11/13 5:39 PM",
          "commitName": "ce68f410b05a58ad05965f32ad7f5b246b363a75",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "21/11/13 9:12 AM",
          "commitNameOld": "f91a45a96c21db9e5d40097c7d3f5d005ae10dde",
          "commitAuthorOld": "Colin McCabe",
          "daysBetweenCommits": 0.35,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,21 @@\n-  private void finalizeINodeFileUnderConstruction(String src, \n-      INodeFileUnderConstruction pendingFile, Snapshot latestSnapshot) \n-      throws IOException, UnresolvedLinkException {\n+  private void finalizeINodeFileUnderConstruction(String src,\n+      INodeFile pendingFile, Snapshot latestSnapshot) throws IOException,\n+      UnresolvedLinkException {\n     assert hasWriteLock();\n-    leaseManager.removeLease(pendingFile.getClientName(), src);\n+    FileUnderConstructionFeature uc \u003d pendingFile.getFileUnderConstructionFeature();\n+    Preconditions.checkArgument(uc !\u003d null);\n+    leaseManager.removeLease(uc.getClientName(), src);\n     \n     pendingFile \u003d pendingFile.recordModification(latestSnapshot,\n         dir.getINodeMap());\n \n     // The file is no longer pending.\n-    // Create permanent INode, update blocks\n-    final INodeFile newFile \u003d pendingFile.toINodeFile(now());\n-    dir.replaceINodeFile(src, pendingFile, newFile);\n+    // Create permanent INode, update blocks. No need to replace the inode here\n+    // since we just remove the uc feature from pendingFile\n+    final INodeFile newFile \u003d pendingFile.toCompleteFile(now());\n \n     // close file and persist block allocations for this file\n     dir.closeFile(src, newFile);\n \n     blockManager.checkReplication(newFile);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void finalizeINodeFileUnderConstruction(String src,\n      INodeFile pendingFile, Snapshot latestSnapshot) throws IOException,\n      UnresolvedLinkException {\n    assert hasWriteLock();\n    FileUnderConstructionFeature uc \u003d pendingFile.getFileUnderConstructionFeature();\n    Preconditions.checkArgument(uc !\u003d null);\n    leaseManager.removeLease(uc.getClientName(), src);\n    \n    pendingFile \u003d pendingFile.recordModification(latestSnapshot,\n        dir.getINodeMap());\n\n    // The file is no longer pending.\n    // Create permanent INode, update blocks. No need to replace the inode here\n    // since we just remove the uc feature from pendingFile\n    final INodeFile newFile \u003d pendingFile.toCompleteFile(now());\n\n    // close file and persist block allocations for this file\n    dir.closeFile(src, newFile);\n\n    blockManager.checkReplication(newFile);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
          "extendedDetails": {
            "oldValue": "[src-String, pendingFile-INodeFileUnderConstruction, latestSnapshot-Snapshot]",
            "newValue": "[src-String, pendingFile-INodeFile, latestSnapshot-Snapshot]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-5285. Flatten INodeFile hierarchy: Replace INodeFileUnderConstruction and INodeFileUnderConstructionWithSnapshot with FileUnderContructionFeature.  Contributed by jing9\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1544389 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "21/11/13 5:39 PM",
          "commitName": "ce68f410b05a58ad05965f32ad7f5b246b363a75",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "21/11/13 9:12 AM",
          "commitNameOld": "f91a45a96c21db9e5d40097c7d3f5d005ae10dde",
          "commitAuthorOld": "Colin McCabe",
          "daysBetweenCommits": 0.35,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,21 @@\n-  private void finalizeINodeFileUnderConstruction(String src, \n-      INodeFileUnderConstruction pendingFile, Snapshot latestSnapshot) \n-      throws IOException, UnresolvedLinkException {\n+  private void finalizeINodeFileUnderConstruction(String src,\n+      INodeFile pendingFile, Snapshot latestSnapshot) throws IOException,\n+      UnresolvedLinkException {\n     assert hasWriteLock();\n-    leaseManager.removeLease(pendingFile.getClientName(), src);\n+    FileUnderConstructionFeature uc \u003d pendingFile.getFileUnderConstructionFeature();\n+    Preconditions.checkArgument(uc !\u003d null);\n+    leaseManager.removeLease(uc.getClientName(), src);\n     \n     pendingFile \u003d pendingFile.recordModification(latestSnapshot,\n         dir.getINodeMap());\n \n     // The file is no longer pending.\n-    // Create permanent INode, update blocks\n-    final INodeFile newFile \u003d pendingFile.toINodeFile(now());\n-    dir.replaceINodeFile(src, pendingFile, newFile);\n+    // Create permanent INode, update blocks. No need to replace the inode here\n+    // since we just remove the uc feature from pendingFile\n+    final INodeFile newFile \u003d pendingFile.toCompleteFile(now());\n \n     // close file and persist block allocations for this file\n     dir.closeFile(src, newFile);\n \n     blockManager.checkReplication(newFile);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void finalizeINodeFileUnderConstruction(String src,\n      INodeFile pendingFile, Snapshot latestSnapshot) throws IOException,\n      UnresolvedLinkException {\n    assert hasWriteLock();\n    FileUnderConstructionFeature uc \u003d pendingFile.getFileUnderConstructionFeature();\n    Preconditions.checkArgument(uc !\u003d null);\n    leaseManager.removeLease(uc.getClientName(), src);\n    \n    pendingFile \u003d pendingFile.recordModification(latestSnapshot,\n        dir.getINodeMap());\n\n    // The file is no longer pending.\n    // Create permanent INode, update blocks. No need to replace the inode here\n    // since we just remove the uc feature from pendingFile\n    final INodeFile newFile \u003d pendingFile.toCompleteFile(now());\n\n    // close file and persist block allocations for this file\n    dir.closeFile(src, newFile);\n\n    blockManager.checkReplication(newFile);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
          "extendedDetails": {}
        }
      ]
    },
    "3a3e0f573129c8308332d4b301a9319ee579d85a": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4760. Update inodeMap after node replacement.  Contributed by Jing Zhao\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1477827 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/04/13 2:05 PM",
      "commitName": "3a3e0f573129c8308332d4b301a9319ee579d85a",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "26/04/13 4:50 PM",
      "commitNameOld": "60341dae1922c37acadc8629bff7443a6a0871cb",
      "commitAuthorOld": "",
      "daysBetweenCommits": 3.89,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,19 @@\n   private void finalizeINodeFileUnderConstruction(String src, \n       INodeFileUnderConstruction pendingFile, Snapshot latestSnapshot) \n       throws IOException, UnresolvedLinkException {\n     assert hasWriteLock();\n     leaseManager.removeLease(pendingFile.getClientName(), src);\n     \n-    pendingFile \u003d pendingFile.recordModification(latestSnapshot);\n+    pendingFile \u003d pendingFile.recordModification(latestSnapshot,\n+        dir.getINodeMap());\n \n     // The file is no longer pending.\n     // Create permanent INode, update blocks\n     final INodeFile newFile \u003d pendingFile.toINodeFile(now());\n     dir.replaceINodeFile(src, pendingFile, newFile);\n \n     // close file and persist block allocations for this file\n     dir.closeFile(src, newFile);\n \n     blockManager.checkReplication(newFile);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void finalizeINodeFileUnderConstruction(String src, \n      INodeFileUnderConstruction pendingFile, Snapshot latestSnapshot) \n      throws IOException, UnresolvedLinkException {\n    assert hasWriteLock();\n    leaseManager.removeLease(pendingFile.getClientName(), src);\n    \n    pendingFile \u003d pendingFile.recordModification(latestSnapshot,\n        dir.getINodeMap());\n\n    // The file is no longer pending.\n    // Create permanent INode, update blocks\n    final INodeFile newFile \u003d pendingFile.toINodeFile(now());\n    dir.replaceINodeFile(src, pendingFile, newFile);\n\n    // close file and persist block allocations for this file\n    dir.closeFile(src, newFile);\n\n    blockManager.checkReplication(newFile);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    }
  }
}