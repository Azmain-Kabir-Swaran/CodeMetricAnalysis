{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SSLFactory.java",
  "functionName": "readSSLConfiguration",
  "functionId": "readSSLConfiguration___conf-Configuration__mode-Mode",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/ssl/SSLFactory.java",
  "functionStartLine": 154,
  "functionEndLine": 169,
  "numCommitsSeen": 35,
  "timeTaken": 2234,
  "changeHistory": [
    "ebd40056a07df5807baf0652a47ea97334038f4d",
    "5d182949badb2eb80393de7ba3838102d006488b",
    "9d16c9354b0c05edb30d23003dcdec4cc44ed925"
  ],
  "changeHistoryShort": {
    "ebd40056a07df5807baf0652a47ea97334038f4d": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
    "5d182949badb2eb80393de7ba3838102d006488b": "Ybodychange",
    "9d16c9354b0c05edb30d23003dcdec4cc44ed925": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ebd40056a07df5807baf0652a47ea97334038f4d": {
      "type": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
      "commitMessage": "HADOOP-13992. KMS should load SSL configuration the same way as SSLFactory. Contributed by John Zhuge.\n",
      "commitDate": "27/01/17 10:49 AM",
      "commitName": "ebd40056a07df5807baf0652a47ea97334038f4d",
      "commitAuthor": "Xiao Chen",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-13992. KMS should load SSL configuration the same way as SSLFactory. Contributed by John Zhuge.\n",
          "commitDate": "27/01/17 10:49 AM",
          "commitName": "ebd40056a07df5807baf0652a47ea97334038f4d",
          "commitAuthor": "Xiao Chen",
          "commitDateOld": "18/01/17 1:11 AM",
          "commitNameOld": "9130af3f74a7923fff3f80360ba043ab2c6558a9",
          "commitAuthorOld": "Akira Ajisaka",
          "daysBetweenCommits": 9.4,
          "commitsBetweenForRepo": 61,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,16 @@\n-  private Configuration readSSLConfiguration(Mode mode) {\n+  public static Configuration readSSLConfiguration(Configuration conf,\n+                                                   Mode mode) {\n     Configuration sslConf \u003d new Configuration(false);\n-    sslConf.setBoolean(SSL_REQUIRE_CLIENT_CERT_KEY, requireClientCert);\n+    sslConf.setBoolean(SSL_REQUIRE_CLIENT_CERT_KEY, conf.getBoolean(\n+        SSL_REQUIRE_CLIENT_CERT_KEY, SSL_REQUIRE_CLIENT_CERT_DEFAULT));\n     String sslConfResource;\n     if (mode \u003d\u003d Mode.CLIENT) {\n       sslConfResource \u003d conf.get(SSL_CLIENT_CONF_KEY,\n           SSL_CLIENT_CONF_DEFAULT);\n     } else {\n       sslConfResource \u003d conf.get(SSL_SERVER_CONF_KEY,\n           SSL_SERVER_CONF_DEFAULT);\n     }\n     sslConf.addResource(sslConfResource);\n     return sslConf;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static Configuration readSSLConfiguration(Configuration conf,\n                                                   Mode mode) {\n    Configuration sslConf \u003d new Configuration(false);\n    sslConf.setBoolean(SSL_REQUIRE_CLIENT_CERT_KEY, conf.getBoolean(\n        SSL_REQUIRE_CLIENT_CERT_KEY, SSL_REQUIRE_CLIENT_CERT_DEFAULT));\n    String sslConfResource;\n    if (mode \u003d\u003d Mode.CLIENT) {\n      sslConfResource \u003d conf.get(SSL_CLIENT_CONF_KEY,\n          SSL_CLIENT_CONF_DEFAULT);\n    } else {\n      sslConfResource \u003d conf.get(SSL_SERVER_CONF_KEY,\n          SSL_SERVER_CONF_DEFAULT);\n    }\n    sslConf.addResource(sslConfResource);\n    return sslConf;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/ssl/SSLFactory.java",
          "extendedDetails": {
            "oldValue": "[mode-Mode]",
            "newValue": "[conf-Configuration, mode-Mode]"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HADOOP-13992. KMS should load SSL configuration the same way as SSLFactory. Contributed by John Zhuge.\n",
          "commitDate": "27/01/17 10:49 AM",
          "commitName": "ebd40056a07df5807baf0652a47ea97334038f4d",
          "commitAuthor": "Xiao Chen",
          "commitDateOld": "18/01/17 1:11 AM",
          "commitNameOld": "9130af3f74a7923fff3f80360ba043ab2c6558a9",
          "commitAuthorOld": "Akira Ajisaka",
          "daysBetweenCommits": 9.4,
          "commitsBetweenForRepo": 61,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,16 @@\n-  private Configuration readSSLConfiguration(Mode mode) {\n+  public static Configuration readSSLConfiguration(Configuration conf,\n+                                                   Mode mode) {\n     Configuration sslConf \u003d new Configuration(false);\n-    sslConf.setBoolean(SSL_REQUIRE_CLIENT_CERT_KEY, requireClientCert);\n+    sslConf.setBoolean(SSL_REQUIRE_CLIENT_CERT_KEY, conf.getBoolean(\n+        SSL_REQUIRE_CLIENT_CERT_KEY, SSL_REQUIRE_CLIENT_CERT_DEFAULT));\n     String sslConfResource;\n     if (mode \u003d\u003d Mode.CLIENT) {\n       sslConfResource \u003d conf.get(SSL_CLIENT_CONF_KEY,\n           SSL_CLIENT_CONF_DEFAULT);\n     } else {\n       sslConfResource \u003d conf.get(SSL_SERVER_CONF_KEY,\n           SSL_SERVER_CONF_DEFAULT);\n     }\n     sslConf.addResource(sslConfResource);\n     return sslConf;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static Configuration readSSLConfiguration(Configuration conf,\n                                                   Mode mode) {\n    Configuration sslConf \u003d new Configuration(false);\n    sslConf.setBoolean(SSL_REQUIRE_CLIENT_CERT_KEY, conf.getBoolean(\n        SSL_REQUIRE_CLIENT_CERT_KEY, SSL_REQUIRE_CLIENT_CERT_DEFAULT));\n    String sslConfResource;\n    if (mode \u003d\u003d Mode.CLIENT) {\n      sslConfResource \u003d conf.get(SSL_CLIENT_CONF_KEY,\n          SSL_CLIENT_CONF_DEFAULT);\n    } else {\n      sslConfResource \u003d conf.get(SSL_SERVER_CONF_KEY,\n          SSL_SERVER_CONF_DEFAULT);\n    }\n    sslConf.addResource(sslConfResource);\n    return sslConf;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/ssl/SSLFactory.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[public, static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-13992. KMS should load SSL configuration the same way as SSLFactory. Contributed by John Zhuge.\n",
          "commitDate": "27/01/17 10:49 AM",
          "commitName": "ebd40056a07df5807baf0652a47ea97334038f4d",
          "commitAuthor": "Xiao Chen",
          "commitDateOld": "18/01/17 1:11 AM",
          "commitNameOld": "9130af3f74a7923fff3f80360ba043ab2c6558a9",
          "commitAuthorOld": "Akira Ajisaka",
          "daysBetweenCommits": 9.4,
          "commitsBetweenForRepo": 61,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,16 @@\n-  private Configuration readSSLConfiguration(Mode mode) {\n+  public static Configuration readSSLConfiguration(Configuration conf,\n+                                                   Mode mode) {\n     Configuration sslConf \u003d new Configuration(false);\n-    sslConf.setBoolean(SSL_REQUIRE_CLIENT_CERT_KEY, requireClientCert);\n+    sslConf.setBoolean(SSL_REQUIRE_CLIENT_CERT_KEY, conf.getBoolean(\n+        SSL_REQUIRE_CLIENT_CERT_KEY, SSL_REQUIRE_CLIENT_CERT_DEFAULT));\n     String sslConfResource;\n     if (mode \u003d\u003d Mode.CLIENT) {\n       sslConfResource \u003d conf.get(SSL_CLIENT_CONF_KEY,\n           SSL_CLIENT_CONF_DEFAULT);\n     } else {\n       sslConfResource \u003d conf.get(SSL_SERVER_CONF_KEY,\n           SSL_SERVER_CONF_DEFAULT);\n     }\n     sslConf.addResource(sslConfResource);\n     return sslConf;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static Configuration readSSLConfiguration(Configuration conf,\n                                                   Mode mode) {\n    Configuration sslConf \u003d new Configuration(false);\n    sslConf.setBoolean(SSL_REQUIRE_CLIENT_CERT_KEY, conf.getBoolean(\n        SSL_REQUIRE_CLIENT_CERT_KEY, SSL_REQUIRE_CLIENT_CERT_DEFAULT));\n    String sslConfResource;\n    if (mode \u003d\u003d Mode.CLIENT) {\n      sslConfResource \u003d conf.get(SSL_CLIENT_CONF_KEY,\n          SSL_CLIENT_CONF_DEFAULT);\n    } else {\n      sslConfResource \u003d conf.get(SSL_SERVER_CONF_KEY,\n          SSL_SERVER_CONF_DEFAULT);\n    }\n    sslConf.addResource(sslConfResource);\n    return sslConf;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/ssl/SSLFactory.java",
          "extendedDetails": {}
        }
      ]
    },
    "5d182949badb2eb80393de7ba3838102d006488b": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13597. Switch KMS from Tomcat to Jetty. Contributed by John Zhuge.\n",
      "commitDate": "05/01/17 5:21 PM",
      "commitName": "5d182949badb2eb80393de7ba3838102d006488b",
      "commitAuthor": "Xiao Chen",
      "commitDateOld": "30/03/16 2:13 PM",
      "commitNameOld": "e4fc609d5d3739b7809057954c5233cfd1d1117b",
      "commitAuthorOld": "Zhe ZHang",
      "daysBetweenCommits": 281.17,
      "commitsBetweenForRepo": 1999,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,14 @@\n   private Configuration readSSLConfiguration(Mode mode) {\n     Configuration sslConf \u003d new Configuration(false);\n     sslConf.setBoolean(SSL_REQUIRE_CLIENT_CERT_KEY, requireClientCert);\n     String sslConfResource;\n     if (mode \u003d\u003d Mode.CLIENT) {\n-      sslConfResource \u003d conf.get(SSL_CLIENT_CONF_KEY, \"ssl-client.xml\");\n+      sslConfResource \u003d conf.get(SSL_CLIENT_CONF_KEY,\n+          SSL_CLIENT_CONF_DEFAULT);\n     } else {\n-      sslConfResource \u003d conf.get(SSL_SERVER_CONF_KEY, \"ssl-server.xml\");\n+      sslConfResource \u003d conf.get(SSL_SERVER_CONF_KEY,\n+          SSL_SERVER_CONF_DEFAULT);\n     }\n     sslConf.addResource(sslConfResource);\n     return sslConf;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private Configuration readSSLConfiguration(Mode mode) {\n    Configuration sslConf \u003d new Configuration(false);\n    sslConf.setBoolean(SSL_REQUIRE_CLIENT_CERT_KEY, requireClientCert);\n    String sslConfResource;\n    if (mode \u003d\u003d Mode.CLIENT) {\n      sslConfResource \u003d conf.get(SSL_CLIENT_CONF_KEY,\n          SSL_CLIENT_CONF_DEFAULT);\n    } else {\n      sslConfResource \u003d conf.get(SSL_SERVER_CONF_KEY,\n          SSL_SERVER_CONF_DEFAULT);\n    }\n    sslConf.addResource(sslConfResource);\n    return sslConf;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/ssl/SSLFactory.java",
      "extendedDetails": {}
    },
    "9d16c9354b0c05edb30d23003dcdec4cc44ed925": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-4417. add support for encrypted shuffle (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1365979 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "26/07/12 6:23 AM",
      "commitName": "9d16c9354b0c05edb30d23003dcdec4cc44ed925",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,12 @@\n+  private Configuration readSSLConfiguration(Mode mode) {\n+    Configuration sslConf \u003d new Configuration(false);\n+    sslConf.setBoolean(SSL_REQUIRE_CLIENT_CERT_KEY, requireClientCert);\n+    String sslConfResource;\n+    if (mode \u003d\u003d Mode.CLIENT) {\n+      sslConfResource \u003d conf.get(SSL_CLIENT_CONF_KEY, \"ssl-client.xml\");\n+    } else {\n+      sslConfResource \u003d conf.get(SSL_SERVER_CONF_KEY, \"ssl-server.xml\");\n+    }\n+    sslConf.addResource(sslConfResource);\n+    return sslConf;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private Configuration readSSLConfiguration(Mode mode) {\n    Configuration sslConf \u003d new Configuration(false);\n    sslConf.setBoolean(SSL_REQUIRE_CLIENT_CERT_KEY, requireClientCert);\n    String sslConfResource;\n    if (mode \u003d\u003d Mode.CLIENT) {\n      sslConfResource \u003d conf.get(SSL_CLIENT_CONF_KEY, \"ssl-client.xml\");\n    } else {\n      sslConfResource \u003d conf.get(SSL_SERVER_CONF_KEY, \"ssl-server.xml\");\n    }\n    sslConf.addResource(sslConfResource);\n    return sslConf;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/ssl/SSLFactory.java"
    }
  }
}