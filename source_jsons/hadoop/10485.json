{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DataStorage.java",
  "functionName": "isPreUpgradableLayout",
  "functionId": "isPreUpgradableLayout___sd-StorageDirectory",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataStorage.java",
  "functionStartLine": 672,
  "functionEndLine": 692,
  "numCommitsSeen": 79,
  "timeTaken": 6222,
  "changeHistory": [
    "b3ae11d59790bb08b81848e9f944db7d3afbbd8a",
    "1403b84b122fb76ef2b085a728b5402c32499c1f",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "b3ae11d59790bb08b81848e9f944db7d3afbbd8a": "Ybodychange",
    "1403b84b122fb76ef2b085a728b5402c32499c1f": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b3ae11d59790bb08b81848e9f944db7d3afbbd8a": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12997. Move logging to slf4j in BlockPoolSliceStorage and Storage. Contributed by Ajay Kumar.\n",
      "commitDate": "01/02/18 10:45 AM",
      "commitName": "b3ae11d59790bb08b81848e9f944db7d3afbbd8a",
      "commitAuthor": "Xiaoyu Yao",
      "commitDateOld": "15/12/17 5:51 PM",
      "commitNameOld": "8239e3afb31d3c4485817d4b8b8b195b554acbe7",
      "commitAuthorOld": "Virajith Jalaparti",
      "daysBetweenCommits": 47.7,
      "commitsBetweenForRepo": 240,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n   public boolean isPreUpgradableLayout(StorageDirectory sd) throws IOException {\n     File oldF \u003d new File(sd.getRoot(), \"storage\");\n     if (!oldF.exists()) {\n       return false;\n     }\n     // check the layout version inside the storage file\n     // Lock and Read old storage file\n     try (RandomAccessFile oldFile \u003d new RandomAccessFile(oldF, \"rws\");\n       FileLock oldLock \u003d oldFile.getChannel().tryLock()) {\n       if (null \u003d\u003d oldLock) {\n-        LOG.error(\"Unable to acquire file lock on path \" + oldF.toString());\n+        LOG.error(\"Unable to acquire file lock on path {}\", oldF);\n         throw new OverlappingFileLockException();\n       }\n       oldFile.seek(0);\n       int oldVersion \u003d oldFile.readInt();\n       if (oldVersion \u003c LAST_PRE_UPGRADE_LAYOUT_VERSION) {\n         return false;\n       }\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean isPreUpgradableLayout(StorageDirectory sd) throws IOException {\n    File oldF \u003d new File(sd.getRoot(), \"storage\");\n    if (!oldF.exists()) {\n      return false;\n    }\n    // check the layout version inside the storage file\n    // Lock and Read old storage file\n    try (RandomAccessFile oldFile \u003d new RandomAccessFile(oldF, \"rws\");\n      FileLock oldLock \u003d oldFile.getChannel().tryLock()) {\n      if (null \u003d\u003d oldLock) {\n        LOG.error(\"Unable to acquire file lock on path {}\", oldF);\n        throw new OverlappingFileLockException();\n      }\n      oldFile.seek(0);\n      int oldVersion \u003d oldFile.readInt();\n      if (oldVersion \u003c LAST_PRE_UPGRADE_LAYOUT_VERSION) {\n        return false;\n      }\n    }\n    return true;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataStorage.java",
      "extendedDetails": {}
    },
    "1403b84b122fb76ef2b085a728b5402c32499c1f": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8546. Use try with resources in DataStorage and Storage.\n",
      "commitDate": "25/06/15 5:50 PM",
      "commitName": "1403b84b122fb76ef2b085a728b5402c32499c1f",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "06/06/15 9:17 AM",
      "commitNameOld": "e46cb800028c95f9bce575d05268cd10d0913222",
      "commitAuthorOld": "cnauroth",
      "daysBetweenCommits": 19.36,
      "commitsBetweenForRepo": 121,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,21 @@\n   public boolean isPreUpgradableLayout(StorageDirectory sd) throws IOException {\n     File oldF \u003d new File(sd.getRoot(), \"storage\");\n-    if (!oldF.exists())\n+    if (!oldF.exists()) {\n       return false;\n+    }\n     // check the layout version inside the storage file\n     // Lock and Read old storage file\n-    RandomAccessFile oldFile \u003d new RandomAccessFile(oldF, \"rws\");\n-    FileLock oldLock \u003d oldFile.getChannel().tryLock();\n-    try {\n+    try (RandomAccessFile oldFile \u003d new RandomAccessFile(oldF, \"rws\");\n+      FileLock oldLock \u003d oldFile.getChannel().tryLock()) {\n+      if (null \u003d\u003d oldLock) {\n+        LOG.error(\"Unable to acquire file lock on path \" + oldF.toString());\n+        throw new OverlappingFileLockException();\n+      }\n       oldFile.seek(0);\n       int oldVersion \u003d oldFile.readInt();\n-      if (oldVersion \u003c LAST_PRE_UPGRADE_LAYOUT_VERSION)\n+      if (oldVersion \u003c LAST_PRE_UPGRADE_LAYOUT_VERSION) {\n         return false;\n-    } finally {\n-      oldLock.release();\n-      oldFile.close();\n+      }\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean isPreUpgradableLayout(StorageDirectory sd) throws IOException {\n    File oldF \u003d new File(sd.getRoot(), \"storage\");\n    if (!oldF.exists()) {\n      return false;\n    }\n    // check the layout version inside the storage file\n    // Lock and Read old storage file\n    try (RandomAccessFile oldFile \u003d new RandomAccessFile(oldF, \"rws\");\n      FileLock oldLock \u003d oldFile.getChannel().tryLock()) {\n      if (null \u003d\u003d oldLock) {\n        LOG.error(\"Unable to acquire file lock on path \" + oldF.toString());\n        throw new OverlappingFileLockException();\n      }\n      oldFile.seek(0);\n      int oldVersion \u003d oldFile.readInt();\n      if (oldVersion \u003c LAST_PRE_UPGRADE_LAYOUT_VERSION) {\n        return false;\n      }\n    }\n    return true;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataStorage.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public boolean isPreUpgradableLayout(StorageDirectory sd) throws IOException {\n    File oldF \u003d new File(sd.getRoot(), \"storage\");\n    if (!oldF.exists())\n      return false;\n    // check the layout version inside the storage file\n    // Lock and Read old storage file\n    RandomAccessFile oldFile \u003d new RandomAccessFile(oldF, \"rws\");\n    FileLock oldLock \u003d oldFile.getChannel().tryLock();\n    try {\n      oldFile.seek(0);\n      int oldVersion \u003d oldFile.readInt();\n      if (oldVersion \u003c LAST_PRE_UPGRADE_LAYOUT_VERSION)\n        return false;\n    } finally {\n      oldLock.release();\n      oldFile.close();\n    }\n    return true;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataStorage.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataStorage.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataStorage.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public boolean isPreUpgradableLayout(StorageDirectory sd) throws IOException {\n    File oldF \u003d new File(sd.getRoot(), \"storage\");\n    if (!oldF.exists())\n      return false;\n    // check the layout version inside the storage file\n    // Lock and Read old storage file\n    RandomAccessFile oldFile \u003d new RandomAccessFile(oldF, \"rws\");\n    FileLock oldLock \u003d oldFile.getChannel().tryLock();\n    try {\n      oldFile.seek(0);\n      int oldVersion \u003d oldFile.readInt();\n      if (oldVersion \u003c LAST_PRE_UPGRADE_LAYOUT_VERSION)\n        return false;\n    } finally {\n      oldLock.release();\n      oldFile.close();\n    }\n    return true;\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataStorage.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/datanode/DataStorage.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataStorage.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,19 @@\n+  public boolean isPreUpgradableLayout(StorageDirectory sd) throws IOException {\n+    File oldF \u003d new File(sd.getRoot(), \"storage\");\n+    if (!oldF.exists())\n+      return false;\n+    // check the layout version inside the storage file\n+    // Lock and Read old storage file\n+    RandomAccessFile oldFile \u003d new RandomAccessFile(oldF, \"rws\");\n+    FileLock oldLock \u003d oldFile.getChannel().tryLock();\n+    try {\n+      oldFile.seek(0);\n+      int oldVersion \u003d oldFile.readInt();\n+      if (oldVersion \u003c LAST_PRE_UPGRADE_LAYOUT_VERSION)\n+        return false;\n+    } finally {\n+      oldLock.release();\n+      oldFile.close();\n+    }\n+    return true;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean isPreUpgradableLayout(StorageDirectory sd) throws IOException {\n    File oldF \u003d new File(sd.getRoot(), \"storage\");\n    if (!oldF.exists())\n      return false;\n    // check the layout version inside the storage file\n    // Lock and Read old storage file\n    RandomAccessFile oldFile \u003d new RandomAccessFile(oldF, \"rws\");\n    FileLock oldLock \u003d oldFile.getChannel().tryLock();\n    try {\n      oldFile.seek(0);\n      int oldVersion \u003d oldFile.readInt();\n      if (oldVersion \u003c LAST_PRE_UPGRADE_LAYOUT_VERSION)\n        return false;\n    } finally {\n      oldLock.release();\n      oldFile.close();\n    }\n    return true;\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/datanode/DataStorage.java"
    }
  }
}