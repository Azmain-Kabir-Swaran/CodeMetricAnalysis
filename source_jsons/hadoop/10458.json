{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FileIoProvider.java",
  "functionName": "onFailure",
  "functionId": "onFailure___volume-FsVolumeSpi(annotations-@Nullable)__begin-long",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/FileIoProvider.java",
  "functionStartLine": 1062,
  "functionEndLine": 1067,
  "numCommitsSeen": 14,
  "timeTaken": 3638,
  "changeHistory": [
    "4046794a5365f80f9fa002e3889e41c6d29e13a8",
    "603f3ef1386048111940b66f3a0750ab84d0588f"
  ],
  "changeHistoryShort": {
    "4046794a5365f80f9fa002e3889e41c6d29e13a8": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yparameterchange)",
    "603f3ef1386048111940b66f3a0750ab84d0588f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4046794a5365f80f9fa002e3889e41c6d29e13a8": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yparameterchange)",
      "commitMessage": "HDFS-11299. Support multiple Datanode File IO hooks. Contributed by Hanisha Koneru.\n",
      "commitDate": "10/01/17 10:43 AM",
      "commitName": "4046794a5365f80f9fa002e3889e41c6d29e13a8",
      "commitAuthor": "Arpit Agarwal",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-11299. Support multiple Datanode File IO hooks. Contributed by Hanisha Koneru.\n",
          "commitDate": "10/01/17 10:43 AM",
          "commitName": "4046794a5365f80f9fa002e3889e41c6d29e13a8",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "10/01/17 3:37 AM",
          "commitNameOld": "c18590fce283378edb09acd4e764706a9a4a8b5f",
          "commitAuthorOld": "Lei Xu",
          "daysBetweenCommits": 0.3,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,6 @@\n-  void onFailure(DataNode datanode,\n-      @Nullable FsVolumeSpi volume, OPERATION op, Exception e, long begin) {\n-    onFailure(volume, op, e, begin);\n+  private void onFailure(@Nullable FsVolumeSpi volume, long begin) {\n     if (datanode !\u003d null \u0026\u0026 volume !\u003d null) {\n       datanode.checkDiskErrorAsync(volume);\n     }\n+    profilingEventHook.onFailure(volume, begin);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void onFailure(@Nullable FsVolumeSpi volume, long begin) {\n    if (datanode !\u003d null \u0026\u0026 volume !\u003d null) {\n      datanode.checkDiskErrorAsync(volume);\n    }\n    profilingEventHook.onFailure(volume, begin);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/FileIoProvider.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/FileIoEvents.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/FileIoProvider.java",
            "oldMethodName": "onFailure",
            "newMethodName": "onFailure"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-11299. Support multiple Datanode File IO hooks. Contributed by Hanisha Koneru.\n",
          "commitDate": "10/01/17 10:43 AM",
          "commitName": "4046794a5365f80f9fa002e3889e41c6d29e13a8",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "10/01/17 3:37 AM",
          "commitNameOld": "c18590fce283378edb09acd4e764706a9a4a8b5f",
          "commitAuthorOld": "Lei Xu",
          "daysBetweenCommits": 0.3,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,6 @@\n-  void onFailure(DataNode datanode,\n-      @Nullable FsVolumeSpi volume, OPERATION op, Exception e, long begin) {\n-    onFailure(volume, op, e, begin);\n+  private void onFailure(@Nullable FsVolumeSpi volume, long begin) {\n     if (datanode !\u003d null \u0026\u0026 volume !\u003d null) {\n       datanode.checkDiskErrorAsync(volume);\n     }\n+    profilingEventHook.onFailure(volume, begin);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void onFailure(@Nullable FsVolumeSpi volume, long begin) {\n    if (datanode !\u003d null \u0026\u0026 volume !\u003d null) {\n      datanode.checkDiskErrorAsync(volume);\n    }\n    profilingEventHook.onFailure(volume, begin);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/FileIoProvider.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[private]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-11299. Support multiple Datanode File IO hooks. Contributed by Hanisha Koneru.\n",
          "commitDate": "10/01/17 10:43 AM",
          "commitName": "4046794a5365f80f9fa002e3889e41c6d29e13a8",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "10/01/17 3:37 AM",
          "commitNameOld": "c18590fce283378edb09acd4e764706a9a4a8b5f",
          "commitAuthorOld": "Lei Xu",
          "daysBetweenCommits": 0.3,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,6 @@\n-  void onFailure(DataNode datanode,\n-      @Nullable FsVolumeSpi volume, OPERATION op, Exception e, long begin) {\n-    onFailure(volume, op, e, begin);\n+  private void onFailure(@Nullable FsVolumeSpi volume, long begin) {\n     if (datanode !\u003d null \u0026\u0026 volume !\u003d null) {\n       datanode.checkDiskErrorAsync(volume);\n     }\n+    profilingEventHook.onFailure(volume, begin);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void onFailure(@Nullable FsVolumeSpi volume, long begin) {\n    if (datanode !\u003d null \u0026\u0026 volume !\u003d null) {\n      datanode.checkDiskErrorAsync(volume);\n    }\n    profilingEventHook.onFailure(volume, begin);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/FileIoProvider.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-11299. Support multiple Datanode File IO hooks. Contributed by Hanisha Koneru.\n",
          "commitDate": "10/01/17 10:43 AM",
          "commitName": "4046794a5365f80f9fa002e3889e41c6d29e13a8",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "10/01/17 3:37 AM",
          "commitNameOld": "c18590fce283378edb09acd4e764706a9a4a8b5f",
          "commitAuthorOld": "Lei Xu",
          "daysBetweenCommits": 0.3,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,6 @@\n-  void onFailure(DataNode datanode,\n-      @Nullable FsVolumeSpi volume, OPERATION op, Exception e, long begin) {\n-    onFailure(volume, op, e, begin);\n+  private void onFailure(@Nullable FsVolumeSpi volume, long begin) {\n     if (datanode !\u003d null \u0026\u0026 volume !\u003d null) {\n       datanode.checkDiskErrorAsync(volume);\n     }\n+    profilingEventHook.onFailure(volume, begin);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void onFailure(@Nullable FsVolumeSpi volume, long begin) {\n    if (datanode !\u003d null \u0026\u0026 volume !\u003d null) {\n      datanode.checkDiskErrorAsync(volume);\n    }\n    profilingEventHook.onFailure(volume, begin);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/FileIoProvider.java",
          "extendedDetails": {
            "oldValue": "[datanode-DataNode, volume-FsVolumeSpi(annotations-@Nullable), op-OPERATION, e-Exception, begin-long]",
            "newValue": "[volume-FsVolumeSpi(annotations-@Nullable), begin-long]"
          }
        }
      ]
    },
    "603f3ef1386048111940b66f3a0750ab84d0588f": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-11274. Datanode should only check the failed volume upon IO errors. Contributed by Xiaoyu Yao.\n",
      "commitDate": "28/12/16 10:08 PM",
      "commitName": "603f3ef1386048111940b66f3a0750ab84d0588f",
      "commitAuthor": "Xiaoyu Yao",
      "diff": "@@ -0,0 +1,7 @@\n+  void onFailure(DataNode datanode,\n+      @Nullable FsVolumeSpi volume, OPERATION op, Exception e, long begin) {\n+    onFailure(volume, op, e, begin);\n+    if (datanode !\u003d null \u0026\u0026 volume !\u003d null) {\n+      datanode.checkDiskErrorAsync(volume);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  void onFailure(DataNode datanode,\n      @Nullable FsVolumeSpi volume, OPERATION op, Exception e, long begin) {\n    onFailure(volume, op, e, begin);\n    if (datanode !\u003d null \u0026\u0026 volume !\u003d null) {\n      datanode.checkDiskErrorAsync(volume);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/FileIoEvents.java"
    }
  }
}