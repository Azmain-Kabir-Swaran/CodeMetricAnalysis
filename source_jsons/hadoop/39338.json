{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CapacityScheduler.java",
  "functionName": "attemptAllocationOnNode",
  "functionId": "attemptAllocationOnNode___appAttempt-SchedulerApplicationAttempt__schedulingRequest-SchedulingRequest__schedulerNode-SchedulerNode",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
  "functionStartLine": 2855,
  "functionEndLine": 2890,
  "numCommitsSeen": 239,
  "timeTaken": 5724,
  "changeHistory": [
    "67ae81f0e0ac7f107261ee15f2eb4d189e3b1983",
    "6e5ba9366fc05719906ff2789b1a0fd26001182b",
    "8bf7c444368f48f63f8011cf155f551c6b51ee21",
    "28fe7f331837b36e78fa34ed990993677dddeaee",
    "38af23796971193fa529c3d08ffde8fcd6e607b6",
    "4eda58c13641c14c4b248843a2589781cbcd343f",
    "88d8d3f40b2923fab23a933bce1cd2e9c320ae84"
  ],
  "changeHistoryShort": {
    "67ae81f0e0ac7f107261ee15f2eb4d189e3b1983": "Ybodychange",
    "6e5ba9366fc05719906ff2789b1a0fd26001182b": "Ybodychange",
    "8bf7c444368f48f63f8011cf155f551c6b51ee21": "Ybodychange",
    "28fe7f331837b36e78fa34ed990993677dddeaee": "Ybodychange",
    "38af23796971193fa529c3d08ffde8fcd6e607b6": "Ybodychange",
    "4eda58c13641c14c4b248843a2589781cbcd343f": "Ybodychange",
    "88d8d3f40b2923fab23a933bce1cd2e9c320ae84": "Yintroduced"
  },
  "changeHistoryDetails": {
    "67ae81f0e0ac7f107261ee15f2eb4d189e3b1983": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7863. Modify placement constraints to support node attributes. Contributed by Sunil Govindan.\n",
      "commitDate": "12/09/18 3:31 AM",
      "commitName": "67ae81f0e0ac7f107261ee15f2eb4d189e3b1983",
      "commitAuthor": "Naganarasimha",
      "commitDateOld": "28/08/18 8:13 PM",
      "commitNameOld": "3fa46394214181ed1cc7f06b886282bbdf67a10f",
      "commitAuthorOld": "Weiwei Yang",
      "daysBetweenCommits": 14.3,
      "commitsBetweenForRepo": 112,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,36 @@\n   public boolean attemptAllocationOnNode(SchedulerApplicationAttempt appAttempt,\n       SchedulingRequest schedulingRequest, SchedulerNode schedulerNode) {\n     if (schedulingRequest.getResourceSizing() !\u003d null) {\n       if (schedulingRequest.getResourceSizing().getNumAllocations() \u003e 1) {\n         LOG.warn(\"The SchedulingRequest has requested more than 1 allocation,\" +\n             \" but only 1 will be attempted !!\");\n       }\n       if (!appAttempt.isStopped()) {\n         ResourceCommitRequest\u003cFiCaSchedulerApp, FiCaSchedulerNode\u003e\n             resourceCommitRequest \u003d createResourceCommitRequest(\n             appAttempt, schedulingRequest, schedulerNode);\n \n         // Validate placement constraint is satisfied before\n         // committing the request.\n         try {\n           if (!PlacementConstraintsUtil.canSatisfyConstraints(\n               appAttempt.getApplicationId(),\n               schedulingRequest, schedulerNode,\n               rmContext.getPlacementConstraintManager(),\n               rmContext.getAllocationTagsManager())) {\n-            LOG.debug(\"Failed to allocate container for application \"\n+            LOG.info(\"Failed to allocate container for application \"\n                 + appAttempt.getApplicationId() + \" on node \"\n                 + schedulerNode.getNodeName()\n                 + \" because this allocation violates the\"\n                 + \" placement constraint.\");\n             return false;\n           }\n         } catch (InvalidAllocationTagsQueryException e) {\n           LOG.warn(\"Unable to allocate container\", e);\n           return false;\n         }\n         return tryCommit(getClusterResource(), resourceCommitRequest, false);\n       }\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean attemptAllocationOnNode(SchedulerApplicationAttempt appAttempt,\n      SchedulingRequest schedulingRequest, SchedulerNode schedulerNode) {\n    if (schedulingRequest.getResourceSizing() !\u003d null) {\n      if (schedulingRequest.getResourceSizing().getNumAllocations() \u003e 1) {\n        LOG.warn(\"The SchedulingRequest has requested more than 1 allocation,\" +\n            \" but only 1 will be attempted !!\");\n      }\n      if (!appAttempt.isStopped()) {\n        ResourceCommitRequest\u003cFiCaSchedulerApp, FiCaSchedulerNode\u003e\n            resourceCommitRequest \u003d createResourceCommitRequest(\n            appAttempt, schedulingRequest, schedulerNode);\n\n        // Validate placement constraint is satisfied before\n        // committing the request.\n        try {\n          if (!PlacementConstraintsUtil.canSatisfyConstraints(\n              appAttempt.getApplicationId(),\n              schedulingRequest, schedulerNode,\n              rmContext.getPlacementConstraintManager(),\n              rmContext.getAllocationTagsManager())) {\n            LOG.info(\"Failed to allocate container for application \"\n                + appAttempt.getApplicationId() + \" on node \"\n                + schedulerNode.getNodeName()\n                + \" because this allocation violates the\"\n                + \" placement constraint.\");\n            return false;\n          }\n        } catch (InvalidAllocationTagsQueryException e) {\n          LOG.warn(\"Unable to allocate container\", e);\n          return false;\n        }\n        return tryCommit(getClusterResource(), resourceCommitRequest, false);\n      }\n    }\n    return false;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
      "extendedDetails": {}
    },
    "6e5ba9366fc05719906ff2789b1a0fd26001182b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7839. Modify PlacementAlgorithm to Check node capacity before placing request on node. (Panagiotis Garefalakis via asuresh)\n",
      "commitDate": "02/02/18 10:28 AM",
      "commitName": "6e5ba9366fc05719906ff2789b1a0fd26001182b",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "31/01/18 1:30 AM",
      "commitNameOld": "c23980c4f2cf4c751a99fd310e60149cb32ea7c7",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 2.37,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,36 @@\n   public boolean attemptAllocationOnNode(SchedulerApplicationAttempt appAttempt,\n       SchedulingRequest schedulingRequest, SchedulerNode schedulerNode) {\n     if (schedulingRequest.getResourceSizing() !\u003d null) {\n       if (schedulingRequest.getResourceSizing().getNumAllocations() \u003e 1) {\n         LOG.warn(\"The SchedulingRequest has requested more than 1 allocation,\" +\n             \" but only 1 will be attempted !!\");\n       }\n       if (!appAttempt.isStopped()) {\n-        Resource resource \u003d\n-            schedulingRequest.getResourceSizing().getResources();\n-        schedulingRequest.getResourceSizing().setResources(\n-            getNormalizedResource(resource));\n         ResourceCommitRequest\u003cFiCaSchedulerApp, FiCaSchedulerNode\u003e\n             resourceCommitRequest \u003d createResourceCommitRequest(\n             appAttempt, schedulingRequest, schedulerNode);\n \n         // Validate placement constraint is satisfied before\n         // committing the request.\n         try {\n           if (!PlacementConstraintsUtil.canSatisfyConstraints(\n               appAttempt.getApplicationId(),\n               schedulingRequest, schedulerNode,\n               rmContext.getPlacementConstraintManager(),\n               rmContext.getAllocationTagsManager())) {\n             LOG.debug(\"Failed to allocate container for application \"\n                 + appAttempt.getApplicationId() + \" on node \"\n                 + schedulerNode.getNodeName()\n                 + \" because this allocation violates the\"\n                 + \" placement constraint.\");\n             return false;\n           }\n         } catch (InvalidAllocationTagsQueryException e) {\n           LOG.warn(\"Unable to allocate container\", e);\n           return false;\n         }\n         return tryCommit(getClusterResource(), resourceCommitRequest, false);\n       }\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean attemptAllocationOnNode(SchedulerApplicationAttempt appAttempt,\n      SchedulingRequest schedulingRequest, SchedulerNode schedulerNode) {\n    if (schedulingRequest.getResourceSizing() !\u003d null) {\n      if (schedulingRequest.getResourceSizing().getNumAllocations() \u003e 1) {\n        LOG.warn(\"The SchedulingRequest has requested more than 1 allocation,\" +\n            \" but only 1 will be attempted !!\");\n      }\n      if (!appAttempt.isStopped()) {\n        ResourceCommitRequest\u003cFiCaSchedulerApp, FiCaSchedulerNode\u003e\n            resourceCommitRequest \u003d createResourceCommitRequest(\n            appAttempt, schedulingRequest, schedulerNode);\n\n        // Validate placement constraint is satisfied before\n        // committing the request.\n        try {\n          if (!PlacementConstraintsUtil.canSatisfyConstraints(\n              appAttempt.getApplicationId(),\n              schedulingRequest, schedulerNode,\n              rmContext.getPlacementConstraintManager(),\n              rmContext.getAllocationTagsManager())) {\n            LOG.debug(\"Failed to allocate container for application \"\n                + appAttempt.getApplicationId() + \" on node \"\n                + schedulerNode.getNodeName()\n                + \" because this allocation violates the\"\n                + \" placement constraint.\");\n            return false;\n          }\n        } catch (InvalidAllocationTagsQueryException e) {\n          LOG.warn(\"Unable to allocate container\", e);\n          return false;\n        }\n        return tryCommit(getClusterResource(), resourceCommitRequest, false);\n      }\n    }\n    return false;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
      "extendedDetails": {}
    },
    "8bf7c444368f48f63f8011cf155f551c6b51ee21": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7763. Allow Constraints specified in the SchedulingRequest to override application level constraints. (Weiwei Yang via asuresh)\n",
      "commitDate": "31/01/18 1:30 AM",
      "commitName": "8bf7c444368f48f63f8011cf155f551c6b51ee21",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "31/01/18 1:30 AM",
      "commitNameOld": "28fe7f331837b36e78fa34ed990993677dddeaee",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,40 @@\n   public boolean attemptAllocationOnNode(SchedulerApplicationAttempt appAttempt,\n       SchedulingRequest schedulingRequest, SchedulerNode schedulerNode) {\n     if (schedulingRequest.getResourceSizing() !\u003d null) {\n       if (schedulingRequest.getResourceSizing().getNumAllocations() \u003e 1) {\n         LOG.warn(\"The SchedulingRequest has requested more than 1 allocation,\" +\n             \" but only 1 will be attempted !!\");\n       }\n       if (!appAttempt.isStopped()) {\n         Resource resource \u003d\n             schedulingRequest.getResourceSizing().getResources();\n         schedulingRequest.getResourceSizing().setResources(\n             getNormalizedResource(resource));\n         ResourceCommitRequest\u003cFiCaSchedulerApp, FiCaSchedulerNode\u003e\n             resourceCommitRequest \u003d createResourceCommitRequest(\n             appAttempt, schedulingRequest, schedulerNode);\n \n         // Validate placement constraint is satisfied before\n         // committing the request.\n         try {\n-          if (!PlacementConstraintsUtil.canSatisfySingleConstraint(\n+          if (!PlacementConstraintsUtil.canSatisfyConstraints(\n               appAttempt.getApplicationId(),\n-              schedulingRequest.getAllocationTags(), schedulerNode,\n+              schedulingRequest, schedulerNode,\n               rmContext.getPlacementConstraintManager(),\n               rmContext.getAllocationTagsManager())) {\n             LOG.debug(\"Failed to allocate container for application \"\n                 + appAttempt.getApplicationId() + \" on node \"\n                 + schedulerNode.getNodeName()\n                 + \" because this allocation violates the\"\n                 + \" placement constraint.\");\n             return false;\n           }\n         } catch (InvalidAllocationTagsQueryException e) {\n           LOG.warn(\"Unable to allocate container\", e);\n           return false;\n         }\n         return tryCommit(getClusterResource(), resourceCommitRequest, false);\n       }\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean attemptAllocationOnNode(SchedulerApplicationAttempt appAttempt,\n      SchedulingRequest schedulingRequest, SchedulerNode schedulerNode) {\n    if (schedulingRequest.getResourceSizing() !\u003d null) {\n      if (schedulingRequest.getResourceSizing().getNumAllocations() \u003e 1) {\n        LOG.warn(\"The SchedulingRequest has requested more than 1 allocation,\" +\n            \" but only 1 will be attempted !!\");\n      }\n      if (!appAttempt.isStopped()) {\n        Resource resource \u003d\n            schedulingRequest.getResourceSizing().getResources();\n        schedulingRequest.getResourceSizing().setResources(\n            getNormalizedResource(resource));\n        ResourceCommitRequest\u003cFiCaSchedulerApp, FiCaSchedulerNode\u003e\n            resourceCommitRequest \u003d createResourceCommitRequest(\n            appAttempt, schedulingRequest, schedulerNode);\n\n        // Validate placement constraint is satisfied before\n        // committing the request.\n        try {\n          if (!PlacementConstraintsUtil.canSatisfyConstraints(\n              appAttempt.getApplicationId(),\n              schedulingRequest, schedulerNode,\n              rmContext.getPlacementConstraintManager(),\n              rmContext.getAllocationTagsManager())) {\n            LOG.debug(\"Failed to allocate container for application \"\n                + appAttempt.getApplicationId() + \" on node \"\n                + schedulerNode.getNodeName()\n                + \" because this allocation violates the\"\n                + \" placement constraint.\");\n            return false;\n          }\n        } catch (InvalidAllocationTagsQueryException e) {\n          LOG.warn(\"Unable to allocate container\", e);\n          return false;\n        }\n        return tryCommit(getClusterResource(), resourceCommitRequest, false);\n      }\n    }\n    return false;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
      "extendedDetails": {}
    },
    "28fe7f331837b36e78fa34ed990993677dddeaee": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7774. Miscellaneous fixes to the PlacementProcessor. (asuresh)\n",
      "commitDate": "31/01/18 1:30 AM",
      "commitName": "28fe7f331837b36e78fa34ed990993677dddeaee",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "31/01/18 1:30 AM",
      "commitNameOld": "38af23796971193fa529c3d08ffde8fcd6e607b6",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,40 @@\n   public boolean attemptAllocationOnNode(SchedulerApplicationAttempt appAttempt,\n       SchedulingRequest schedulingRequest, SchedulerNode schedulerNode) {\n     if (schedulingRequest.getResourceSizing() !\u003d null) {\n       if (schedulingRequest.getResourceSizing().getNumAllocations() \u003e 1) {\n         LOG.warn(\"The SchedulingRequest has requested more than 1 allocation,\" +\n             \" but only 1 will be attempted !!\");\n       }\n       if (!appAttempt.isStopped()) {\n+        Resource resource \u003d\n+            schedulingRequest.getResourceSizing().getResources();\n+        schedulingRequest.getResourceSizing().setResources(\n+            getNormalizedResource(resource));\n         ResourceCommitRequest\u003cFiCaSchedulerApp, FiCaSchedulerNode\u003e\n             resourceCommitRequest \u003d createResourceCommitRequest(\n             appAttempt, schedulingRequest, schedulerNode);\n \n         // Validate placement constraint is satisfied before\n         // committing the request.\n         try {\n           if (!PlacementConstraintsUtil.canSatisfySingleConstraint(\n               appAttempt.getApplicationId(),\n               schedulingRequest.getAllocationTags(), schedulerNode,\n               rmContext.getPlacementConstraintManager(),\n               rmContext.getAllocationTagsManager())) {\n             LOG.debug(\"Failed to allocate container for application \"\n                 + appAttempt.getApplicationId() + \" on node \"\n                 + schedulerNode.getNodeName()\n                 + \" because this allocation violates the\"\n                 + \" placement constraint.\");\n             return false;\n           }\n         } catch (InvalidAllocationTagsQueryException e) {\n           LOG.warn(\"Unable to allocate container\", e);\n           return false;\n         }\n         return tryCommit(getClusterResource(), resourceCommitRequest, false);\n       }\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean attemptAllocationOnNode(SchedulerApplicationAttempt appAttempt,\n      SchedulingRequest schedulingRequest, SchedulerNode schedulerNode) {\n    if (schedulingRequest.getResourceSizing() !\u003d null) {\n      if (schedulingRequest.getResourceSizing().getNumAllocations() \u003e 1) {\n        LOG.warn(\"The SchedulingRequest has requested more than 1 allocation,\" +\n            \" but only 1 will be attempted !!\");\n      }\n      if (!appAttempt.isStopped()) {\n        Resource resource \u003d\n            schedulingRequest.getResourceSizing().getResources();\n        schedulingRequest.getResourceSizing().setResources(\n            getNormalizedResource(resource));\n        ResourceCommitRequest\u003cFiCaSchedulerApp, FiCaSchedulerNode\u003e\n            resourceCommitRequest \u003d createResourceCommitRequest(\n            appAttempt, schedulingRequest, schedulerNode);\n\n        // Validate placement constraint is satisfied before\n        // committing the request.\n        try {\n          if (!PlacementConstraintsUtil.canSatisfySingleConstraint(\n              appAttempt.getApplicationId(),\n              schedulingRequest.getAllocationTags(), schedulerNode,\n              rmContext.getPlacementConstraintManager(),\n              rmContext.getAllocationTagsManager())) {\n            LOG.debug(\"Failed to allocate container for application \"\n                + appAttempt.getApplicationId() + \" on node \"\n                + schedulerNode.getNodeName()\n                + \" because this allocation violates the\"\n                + \" placement constraint.\");\n            return false;\n          }\n        } catch (InvalidAllocationTagsQueryException e) {\n          LOG.warn(\"Unable to allocate container\", e);\n          return false;\n        }\n        return tryCommit(getClusterResource(), resourceCommitRequest, false);\n      }\n    }\n    return false;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
      "extendedDetails": {}
    },
    "38af23796971193fa529c3d08ffde8fcd6e607b6": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6599. Support anti-affinity constraint via AppPlacementAllocator. (Wangda Tan via asuresh)\n",
      "commitDate": "31/01/18 1:30 AM",
      "commitName": "38af23796971193fa529c3d08ffde8fcd6e607b6",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "31/01/18 1:30 AM",
      "commitNameOld": "4eda58c13641c14c4b248843a2589781cbcd343f",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,36 @@\n   public boolean attemptAllocationOnNode(SchedulerApplicationAttempt appAttempt,\n       SchedulingRequest schedulingRequest, SchedulerNode schedulerNode) {\n     if (schedulingRequest.getResourceSizing() !\u003d null) {\n       if (schedulingRequest.getResourceSizing().getNumAllocations() \u003e 1) {\n         LOG.warn(\"The SchedulingRequest has requested more than 1 allocation,\" +\n             \" but only 1 will be attempted !!\");\n       }\n       if (!appAttempt.isStopped()) {\n         ResourceCommitRequest\u003cFiCaSchedulerApp, FiCaSchedulerNode\u003e\n             resourceCommitRequest \u003d createResourceCommitRequest(\n             appAttempt, schedulingRequest, schedulerNode);\n \n         // Validate placement constraint is satisfied before\n         // committing the request.\n         try {\n-          if (!PlacementConstraintsUtil.canSatisfyConstraints(\n+          if (!PlacementConstraintsUtil.canSatisfySingleConstraint(\n               appAttempt.getApplicationId(),\n-              schedulingRequest.getAllocationTags(),\n-              schedulerNode,\n+              schedulingRequest.getAllocationTags(), schedulerNode,\n               rmContext.getPlacementConstraintManager(),\n               rmContext.getAllocationTagsManager())) {\n             LOG.debug(\"Failed to allocate container for application \"\n                 + appAttempt.getApplicationId() + \" on node \"\n                 + schedulerNode.getNodeName()\n                 + \" because this allocation violates the\"\n                 + \" placement constraint.\");\n             return false;\n           }\n         } catch (InvalidAllocationTagsQueryException e) {\n           LOG.warn(\"Unable to allocate container\", e);\n           return false;\n         }\n         return tryCommit(getClusterResource(), resourceCommitRequest, false);\n       }\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean attemptAllocationOnNode(SchedulerApplicationAttempt appAttempt,\n      SchedulingRequest schedulingRequest, SchedulerNode schedulerNode) {\n    if (schedulingRequest.getResourceSizing() !\u003d null) {\n      if (schedulingRequest.getResourceSizing().getNumAllocations() \u003e 1) {\n        LOG.warn(\"The SchedulingRequest has requested more than 1 allocation,\" +\n            \" but only 1 will be attempted !!\");\n      }\n      if (!appAttempt.isStopped()) {\n        ResourceCommitRequest\u003cFiCaSchedulerApp, FiCaSchedulerNode\u003e\n            resourceCommitRequest \u003d createResourceCommitRequest(\n            appAttempt, schedulingRequest, schedulerNode);\n\n        // Validate placement constraint is satisfied before\n        // committing the request.\n        try {\n          if (!PlacementConstraintsUtil.canSatisfySingleConstraint(\n              appAttempt.getApplicationId(),\n              schedulingRequest.getAllocationTags(), schedulerNode,\n              rmContext.getPlacementConstraintManager(),\n              rmContext.getAllocationTagsManager())) {\n            LOG.debug(\"Failed to allocate container for application \"\n                + appAttempt.getApplicationId() + \" on node \"\n                + schedulerNode.getNodeName()\n                + \" because this allocation violates the\"\n                + \" placement constraint.\");\n            return false;\n          }\n        } catch (InvalidAllocationTagsQueryException e) {\n          LOG.warn(\"Unable to allocate container\", e);\n          return false;\n        }\n        return tryCommit(getClusterResource(), resourceCommitRequest, false);\n      }\n    }\n    return false;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
      "extendedDetails": {}
    },
    "4eda58c13641c14c4b248843a2589781cbcd343f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7681. Double-check placement constraints in scheduling phase before actual allocation is made. (Weiwei Yang via asuresh)\n",
      "commitDate": "31/01/18 1:30 AM",
      "commitName": "4eda58c13641c14c4b248843a2589781cbcd343f",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "31/01/18 1:30 AM",
      "commitNameOld": "f9af15d659f59fd0cf564fe1ecc8e06c6429ba68",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,37 @@\n   public boolean attemptAllocationOnNode(SchedulerApplicationAttempt appAttempt,\n       SchedulingRequest schedulingRequest, SchedulerNode schedulerNode) {\n     if (schedulingRequest.getResourceSizing() !\u003d null) {\n       if (schedulingRequest.getResourceSizing().getNumAllocations() \u003e 1) {\n         LOG.warn(\"The SchedulingRequest has requested more than 1 allocation,\" +\n             \" but only 1 will be attempted !!\");\n       }\n       if (!appAttempt.isStopped()) {\n         ResourceCommitRequest\u003cFiCaSchedulerApp, FiCaSchedulerNode\u003e\n             resourceCommitRequest \u003d createResourceCommitRequest(\n             appAttempt, schedulingRequest, schedulerNode);\n+\n+        // Validate placement constraint is satisfied before\n+        // committing the request.\n+        try {\n+          if (!PlacementConstraintsUtil.canSatisfyConstraints(\n+              appAttempt.getApplicationId(),\n+              schedulingRequest.getAllocationTags(),\n+              schedulerNode,\n+              rmContext.getPlacementConstraintManager(),\n+              rmContext.getAllocationTagsManager())) {\n+            LOG.debug(\"Failed to allocate container for application \"\n+                + appAttempt.getApplicationId() + \" on node \"\n+                + schedulerNode.getNodeName()\n+                + \" because this allocation violates the\"\n+                + \" placement constraint.\");\n+            return false;\n+          }\n+        } catch (InvalidAllocationTagsQueryException e) {\n+          LOG.warn(\"Unable to allocate container\", e);\n+          return false;\n+        }\n         return tryCommit(getClusterResource(), resourceCommitRequest, false);\n       }\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean attemptAllocationOnNode(SchedulerApplicationAttempt appAttempt,\n      SchedulingRequest schedulingRequest, SchedulerNode schedulerNode) {\n    if (schedulingRequest.getResourceSizing() !\u003d null) {\n      if (schedulingRequest.getResourceSizing().getNumAllocations() \u003e 1) {\n        LOG.warn(\"The SchedulingRequest has requested more than 1 allocation,\" +\n            \" but only 1 will be attempted !!\");\n      }\n      if (!appAttempt.isStopped()) {\n        ResourceCommitRequest\u003cFiCaSchedulerApp, FiCaSchedulerNode\u003e\n            resourceCommitRequest \u003d createResourceCommitRequest(\n            appAttempt, schedulingRequest, schedulerNode);\n\n        // Validate placement constraint is satisfied before\n        // committing the request.\n        try {\n          if (!PlacementConstraintsUtil.canSatisfyConstraints(\n              appAttempt.getApplicationId(),\n              schedulingRequest.getAllocationTags(),\n              schedulerNode,\n              rmContext.getPlacementConstraintManager(),\n              rmContext.getAllocationTagsManager())) {\n            LOG.debug(\"Failed to allocate container for application \"\n                + appAttempt.getApplicationId() + \" on node \"\n                + schedulerNode.getNodeName()\n                + \" because this allocation violates the\"\n                + \" placement constraint.\");\n            return false;\n          }\n        } catch (InvalidAllocationTagsQueryException e) {\n          LOG.warn(\"Unable to allocate container\", e);\n          return false;\n        }\n        return tryCommit(getClusterResource(), resourceCommitRequest, false);\n      }\n    }\n    return false;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
      "extendedDetails": {}
    },
    "88d8d3f40b2923fab23a933bce1cd2e9c320ae84": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7670. Modifications to the ResourceScheduler API to support SchedulingRequests. (asuresh)\n",
      "commitDate": "31/01/18 1:30 AM",
      "commitName": "88d8d3f40b2923fab23a933bce1cd2e9c320ae84",
      "commitAuthor": "Arun Suresh",
      "diff": "@@ -0,0 +1,16 @@\n+  public boolean attemptAllocationOnNode(SchedulerApplicationAttempt appAttempt,\n+      SchedulingRequest schedulingRequest, SchedulerNode schedulerNode) {\n+    if (schedulingRequest.getResourceSizing() !\u003d null) {\n+      if (schedulingRequest.getResourceSizing().getNumAllocations() \u003e 1) {\n+        LOG.warn(\"The SchedulingRequest has requested more than 1 allocation,\" +\n+            \" but only 1 will be attempted !!\");\n+      }\n+      if (!appAttempt.isStopped()) {\n+        ResourceCommitRequest\u003cFiCaSchedulerApp, FiCaSchedulerNode\u003e\n+            resourceCommitRequest \u003d createResourceCommitRequest(\n+            appAttempt, schedulingRequest, schedulerNode);\n+        return tryCommit(getClusterResource(), resourceCommitRequest, false);\n+      }\n+    }\n+    return false;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean attemptAllocationOnNode(SchedulerApplicationAttempt appAttempt,\n      SchedulingRequest schedulingRequest, SchedulerNode schedulerNode) {\n    if (schedulingRequest.getResourceSizing() !\u003d null) {\n      if (schedulingRequest.getResourceSizing().getNumAllocations() \u003e 1) {\n        LOG.warn(\"The SchedulingRequest has requested more than 1 allocation,\" +\n            \" but only 1 will be attempted !!\");\n      }\n      if (!appAttempt.isStopped()) {\n        ResourceCommitRequest\u003cFiCaSchedulerApp, FiCaSchedulerNode\u003e\n            resourceCommitRequest \u003d createResourceCommitRequest(\n            appAttempt, schedulingRequest, schedulerNode);\n        return tryCommit(getClusterResource(), resourceCommitRequest, false);\n      }\n    }\n    return false;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java"
    }
  }
}