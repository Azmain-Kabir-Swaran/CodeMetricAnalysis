{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "YarnServerSecurityUtils.java",
  "functionName": "parseCredentials",
  "functionId": "parseCredentials___launchContext-ContainerLaunchContext",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/utils/YarnServerSecurityUtils.java",
  "functionStartLine": 144,
  "functionEndLine": 162,
  "numCommitsSeen": 56,
  "timeTaken": 3532,
  "changeHistory": [
    "2064ca015d1584263aac0cc20c60b925a3aff612",
    "6f72f1e6003ab11679bebeb96f27f1f62b3b3e02",
    "c2febdcbaa12078db42403fe8fd74180fb58a84b",
    "243bcd367ff3130d74676280233041f88aca62a5"
  ],
  "changeHistoryShort": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": "Ybodychange",
    "6f72f1e6003ab11679bebeb96f27f1f62b3b3e02": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange)",
    "c2febdcbaa12078db42403fe8fd74180fb58a84b": "Ymultichange(Yexceptionschange,Ybodychange)",
    "243bcd367ff3130d74676280233041f88aca62a5": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9349.  Changed logging to use slf4j api.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "15/03/19 4:20 PM",
      "commitName": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "01/08/17 5:28 PM",
      "commitNameOld": "859aa1f9d621d07693825e610bdc0149f7a2770a",
      "commitAuthorOld": "Subru Krishnan",
      "daysBetweenCommits": 590.95,
      "commitsBetweenForRepo": 5104,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n   public static Credentials parseCredentials(\n       ContainerLaunchContext launchContext) throws IOException {\n     Credentials credentials \u003d new Credentials();\n     ByteBuffer tokens \u003d launchContext.getTokens();\n \n     if (tokens !\u003d null) {\n       DataInputByteBuffer buf \u003d new DataInputByteBuffer();\n       tokens.rewind();\n       buf.reset(tokens);\n       credentials.readTokenStorageStream(buf);\n       if (LOG.isDebugEnabled()) {\n         for (Token\u003c? extends TokenIdentifier\u003e tk : credentials.getAllTokens()) {\n-          LOG.debug(tk.getService() + \" \u003d \" + tk.toString());\n+          LOG.debug(\"{}\u003d{}\", tk.getService(), tk);\n         }\n       }\n     }\n \n     return credentials;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static Credentials parseCredentials(\n      ContainerLaunchContext launchContext) throws IOException {\n    Credentials credentials \u003d new Credentials();\n    ByteBuffer tokens \u003d launchContext.getTokens();\n\n    if (tokens !\u003d null) {\n      DataInputByteBuffer buf \u003d new DataInputByteBuffer();\n      tokens.rewind();\n      buf.reset(tokens);\n      credentials.readTokenStorageStream(buf);\n      if (LOG.isDebugEnabled()) {\n        for (Token\u003c? extends TokenIdentifier\u003e tk : credentials.getAllTokens()) {\n          LOG.debug(\"{}\u003d{}\", tk.getService(), tk);\n        }\n      }\n    }\n\n    return credentials;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/utils/YarnServerSecurityUtils.java",
      "extendedDetails": {}
    },
    "6f72f1e6003ab11679bebeb96f27f1f62b3b3e02": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-2884. Added a proxy service in NM to proxy the the communication between AM and RM. Contributed by Kishore Chaliparambil\n",
      "commitDate": "07/09/15 6:35 PM",
      "commitName": "6f72f1e6003ab11679bebeb96f27f1f62b3b3e02",
      "commitAuthor": "Jian He",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-2884. Added a proxy service in NM to proxy the the communication between AM and RM. Contributed by Kishore Chaliparambil\n",
          "commitDate": "07/09/15 6:35 PM",
          "commitName": "6f72f1e6003ab11679bebeb96f27f1f62b3b3e02",
          "commitAuthor": "Jian He",
          "commitDateOld": "07/09/15 5:45 PM",
          "commitNameOld": "9b78e6e33d8c117c1e909df414f20d9db56efe4b",
          "commitAuthorOld": "Xuan",
          "daysBetweenCommits": 0.03,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,20 @@\n-  private Credentials parseCredentials(ContainerLaunchContext launchContext)\n-      throws IOException {\n+  public static Credentials parseCredentials(\n+      ContainerLaunchContext launchContext) throws IOException {\n     Credentials credentials \u003d new Credentials();\n-    // //////////// Parse credentials\n     ByteBuffer tokens \u003d launchContext.getTokens();\n \n     if (tokens !\u003d null) {\n       DataInputByteBuffer buf \u003d new DataInputByteBuffer();\n       tokens.rewind();\n       buf.reset(tokens);\n       credentials.readTokenStorageStream(buf);\n       if (LOG.isDebugEnabled()) {\n-        for (Token\u003c? extends TokenIdentifier\u003e tk : credentials.getAllTokens()) {\n+        for (Token\u003c? extends TokenIdentifier\u003e tk : credentials\n+            .getAllTokens()) {\n           LOG.debug(tk.getService() + \" \u003d \" + tk.toString());\n         }\n       }\n     }\n-    // //////////// End of parsing credentials\n+\n     return credentials;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static Credentials parseCredentials(\n      ContainerLaunchContext launchContext) throws IOException {\n    Credentials credentials \u003d new Credentials();\n    ByteBuffer tokens \u003d launchContext.getTokens();\n\n    if (tokens !\u003d null) {\n      DataInputByteBuffer buf \u003d new DataInputByteBuffer();\n      tokens.rewind();\n      buf.reset(tokens);\n      credentials.readTokenStorageStream(buf);\n      if (LOG.isDebugEnabled()) {\n        for (Token\u003c? extends TokenIdentifier\u003e tk : credentials\n            .getAllTokens()) {\n          LOG.debug(tk.getService() + \" \u003d \" + tk.toString());\n        }\n      }\n    }\n\n    return credentials;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/utils/YarnServerSecurityUtils.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/utils/YarnServerSecurityUtils.java",
            "oldMethodName": "parseCredentials",
            "newMethodName": "parseCredentials"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-2884. Added a proxy service in NM to proxy the the communication between AM and RM. Contributed by Kishore Chaliparambil\n",
          "commitDate": "07/09/15 6:35 PM",
          "commitName": "6f72f1e6003ab11679bebeb96f27f1f62b3b3e02",
          "commitAuthor": "Jian He",
          "commitDateOld": "07/09/15 5:45 PM",
          "commitNameOld": "9b78e6e33d8c117c1e909df414f20d9db56efe4b",
          "commitAuthorOld": "Xuan",
          "daysBetweenCommits": 0.03,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,20 @@\n-  private Credentials parseCredentials(ContainerLaunchContext launchContext)\n-      throws IOException {\n+  public static Credentials parseCredentials(\n+      ContainerLaunchContext launchContext) throws IOException {\n     Credentials credentials \u003d new Credentials();\n-    // //////////// Parse credentials\n     ByteBuffer tokens \u003d launchContext.getTokens();\n \n     if (tokens !\u003d null) {\n       DataInputByteBuffer buf \u003d new DataInputByteBuffer();\n       tokens.rewind();\n       buf.reset(tokens);\n       credentials.readTokenStorageStream(buf);\n       if (LOG.isDebugEnabled()) {\n-        for (Token\u003c? extends TokenIdentifier\u003e tk : credentials.getAllTokens()) {\n+        for (Token\u003c? extends TokenIdentifier\u003e tk : credentials\n+            .getAllTokens()) {\n           LOG.debug(tk.getService() + \" \u003d \" + tk.toString());\n         }\n       }\n     }\n-    // //////////// End of parsing credentials\n+\n     return credentials;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static Credentials parseCredentials(\n      ContainerLaunchContext launchContext) throws IOException {\n    Credentials credentials \u003d new Credentials();\n    ByteBuffer tokens \u003d launchContext.getTokens();\n\n    if (tokens !\u003d null) {\n      DataInputByteBuffer buf \u003d new DataInputByteBuffer();\n      tokens.rewind();\n      buf.reset(tokens);\n      credentials.readTokenStorageStream(buf);\n      if (LOG.isDebugEnabled()) {\n        for (Token\u003c? extends TokenIdentifier\u003e tk : credentials\n            .getAllTokens()) {\n          LOG.debug(tk.getService() + \" \u003d \" + tk.toString());\n        }\n      }\n    }\n\n    return credentials;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/utils/YarnServerSecurityUtils.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[public, static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-2884. Added a proxy service in NM to proxy the the communication between AM and RM. Contributed by Kishore Chaliparambil\n",
          "commitDate": "07/09/15 6:35 PM",
          "commitName": "6f72f1e6003ab11679bebeb96f27f1f62b3b3e02",
          "commitAuthor": "Jian He",
          "commitDateOld": "07/09/15 5:45 PM",
          "commitNameOld": "9b78e6e33d8c117c1e909df414f20d9db56efe4b",
          "commitAuthorOld": "Xuan",
          "daysBetweenCommits": 0.03,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,20 @@\n-  private Credentials parseCredentials(ContainerLaunchContext launchContext)\n-      throws IOException {\n+  public static Credentials parseCredentials(\n+      ContainerLaunchContext launchContext) throws IOException {\n     Credentials credentials \u003d new Credentials();\n-    // //////////// Parse credentials\n     ByteBuffer tokens \u003d launchContext.getTokens();\n \n     if (tokens !\u003d null) {\n       DataInputByteBuffer buf \u003d new DataInputByteBuffer();\n       tokens.rewind();\n       buf.reset(tokens);\n       credentials.readTokenStorageStream(buf);\n       if (LOG.isDebugEnabled()) {\n-        for (Token\u003c? extends TokenIdentifier\u003e tk : credentials.getAllTokens()) {\n+        for (Token\u003c? extends TokenIdentifier\u003e tk : credentials\n+            .getAllTokens()) {\n           LOG.debug(tk.getService() + \" \u003d \" + tk.toString());\n         }\n       }\n     }\n-    // //////////// End of parsing credentials\n+\n     return credentials;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static Credentials parseCredentials(\n      ContainerLaunchContext launchContext) throws IOException {\n    Credentials credentials \u003d new Credentials();\n    ByteBuffer tokens \u003d launchContext.getTokens();\n\n    if (tokens !\u003d null) {\n      DataInputByteBuffer buf \u003d new DataInputByteBuffer();\n      tokens.rewind();\n      buf.reset(tokens);\n      credentials.readTokenStorageStream(buf);\n      if (LOG.isDebugEnabled()) {\n        for (Token\u003c? extends TokenIdentifier\u003e tk : credentials\n            .getAllTokens()) {\n          LOG.debug(tk.getService() + \" \u003d \" + tk.toString());\n        }\n      }\n    }\n\n    return credentials;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/utils/YarnServerSecurityUtils.java",
          "extendedDetails": {}
        }
      ]
    },
    "c2febdcbaa12078db42403fe8fd74180fb58a84b": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "YARN-1337. Recover containers upon nodemanager restart. (Contributed by Jason Lowe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1617448 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/08/14 3:56 AM",
      "commitName": "c2febdcbaa12078db42403fe8fd74180fb58a84b",
      "commitAuthor": "Junping Du",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "YARN-1337. Recover containers upon nodemanager restart. (Contributed by Jason Lowe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1617448 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "12/08/14 3:56 AM",
          "commitName": "c2febdcbaa12078db42403fe8fd74180fb58a84b",
          "commitAuthor": "Junping Du",
          "commitDateOld": "04/08/14 6:25 AM",
          "commitNameOld": "b8f151231ba37247b9daa23ecce1211fdca0e49f",
          "commitAuthorOld": "Junping Du",
          "daysBetweenCommits": 7.9,
          "commitsBetweenForRepo": 64,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,20 @@\n   private Credentials parseCredentials(ContainerLaunchContext launchContext)\n-      throws YarnException {\n+      throws IOException {\n     Credentials credentials \u003d new Credentials();\n     // //////////// Parse credentials\n     ByteBuffer tokens \u003d launchContext.getTokens();\n \n     if (tokens !\u003d null) {\n       DataInputByteBuffer buf \u003d new DataInputByteBuffer();\n       tokens.rewind();\n       buf.reset(tokens);\n-      try {\n-        credentials.readTokenStorageStream(buf);\n-        if (LOG.isDebugEnabled()) {\n-          for (Token\u003c? extends TokenIdentifier\u003e tk : credentials.getAllTokens()) {\n-            LOG.debug(tk.getService() + \" \u003d \" + tk.toString());\n-          }\n+      credentials.readTokenStorageStream(buf);\n+      if (LOG.isDebugEnabled()) {\n+        for (Token\u003c? extends TokenIdentifier\u003e tk : credentials.getAllTokens()) {\n+          LOG.debug(tk.getService() + \" \u003d \" + tk.toString());\n         }\n-      } catch (IOException e) {\n-        throw RPCUtil.getRemoteException(e);\n       }\n     }\n     // //////////// End of parsing credentials\n     return credentials;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private Credentials parseCredentials(ContainerLaunchContext launchContext)\n      throws IOException {\n    Credentials credentials \u003d new Credentials();\n    // //////////// Parse credentials\n    ByteBuffer tokens \u003d launchContext.getTokens();\n\n    if (tokens !\u003d null) {\n      DataInputByteBuffer buf \u003d new DataInputByteBuffer();\n      tokens.rewind();\n      buf.reset(tokens);\n      credentials.readTokenStorageStream(buf);\n      if (LOG.isDebugEnabled()) {\n        for (Token\u003c? extends TokenIdentifier\u003e tk : credentials.getAllTokens()) {\n          LOG.debug(tk.getService() + \" \u003d \" + tk.toString());\n        }\n      }\n    }\n    // //////////// End of parsing credentials\n    return credentials;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java",
          "extendedDetails": {
            "oldValue": "[YarnException]",
            "newValue": "[IOException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-1337. Recover containers upon nodemanager restart. (Contributed by Jason Lowe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1617448 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "12/08/14 3:56 AM",
          "commitName": "c2febdcbaa12078db42403fe8fd74180fb58a84b",
          "commitAuthor": "Junping Du",
          "commitDateOld": "04/08/14 6:25 AM",
          "commitNameOld": "b8f151231ba37247b9daa23ecce1211fdca0e49f",
          "commitAuthorOld": "Junping Du",
          "daysBetweenCommits": 7.9,
          "commitsBetweenForRepo": 64,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,20 @@\n   private Credentials parseCredentials(ContainerLaunchContext launchContext)\n-      throws YarnException {\n+      throws IOException {\n     Credentials credentials \u003d new Credentials();\n     // //////////// Parse credentials\n     ByteBuffer tokens \u003d launchContext.getTokens();\n \n     if (tokens !\u003d null) {\n       DataInputByteBuffer buf \u003d new DataInputByteBuffer();\n       tokens.rewind();\n       buf.reset(tokens);\n-      try {\n-        credentials.readTokenStorageStream(buf);\n-        if (LOG.isDebugEnabled()) {\n-          for (Token\u003c? extends TokenIdentifier\u003e tk : credentials.getAllTokens()) {\n-            LOG.debug(tk.getService() + \" \u003d \" + tk.toString());\n-          }\n+      credentials.readTokenStorageStream(buf);\n+      if (LOG.isDebugEnabled()) {\n+        for (Token\u003c? extends TokenIdentifier\u003e tk : credentials.getAllTokens()) {\n+          LOG.debug(tk.getService() + \" \u003d \" + tk.toString());\n         }\n-      } catch (IOException e) {\n-        throw RPCUtil.getRemoteException(e);\n       }\n     }\n     // //////////// End of parsing credentials\n     return credentials;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private Credentials parseCredentials(ContainerLaunchContext launchContext)\n      throws IOException {\n    Credentials credentials \u003d new Credentials();\n    // //////////// Parse credentials\n    ByteBuffer tokens \u003d launchContext.getTokens();\n\n    if (tokens !\u003d null) {\n      DataInputByteBuffer buf \u003d new DataInputByteBuffer();\n      tokens.rewind();\n      buf.reset(tokens);\n      credentials.readTokenStorageStream(buf);\n      if (LOG.isDebugEnabled()) {\n        for (Token\u003c? extends TokenIdentifier\u003e tk : credentials.getAllTokens()) {\n          LOG.debug(tk.getService() + \" \u003d \" + tk.toString());\n        }\n      }\n    }\n    // //////////// End of parsing credentials\n    return credentials;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "243bcd367ff3130d74676280233041f88aca62a5": {
      "type": "Yintroduced",
      "commitMessage": "YARN-694. Starting to use NMTokens to authenticate all communication with NodeManagers. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1494369 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/06/13 4:19 PM",
      "commitName": "243bcd367ff3130d74676280233041f88aca62a5",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,24 @@\n+  private Credentials parseCredentials(ContainerLaunchContext launchContext)\n+      throws YarnException {\n+    Credentials credentials \u003d new Credentials();\n+    // //////////// Parse credentials\n+    ByteBuffer tokens \u003d launchContext.getTokens();\n+\n+    if (tokens !\u003d null) {\n+      DataInputByteBuffer buf \u003d new DataInputByteBuffer();\n+      tokens.rewind();\n+      buf.reset(tokens);\n+      try {\n+        credentials.readTokenStorageStream(buf);\n+        if (LOG.isDebugEnabled()) {\n+          for (Token\u003c? extends TokenIdentifier\u003e tk : credentials.getAllTokens()) {\n+            LOG.debug(tk.getService() + \" \u003d \" + tk.toString());\n+          }\n+        }\n+      } catch (IOException e) {\n+        throw RPCUtil.getRemoteException(e);\n+      }\n+    }\n+    // //////////// End of parsing credentials\n+    return credentials;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private Credentials parseCredentials(ContainerLaunchContext launchContext)\n      throws YarnException {\n    Credentials credentials \u003d new Credentials();\n    // //////////// Parse credentials\n    ByteBuffer tokens \u003d launchContext.getTokens();\n\n    if (tokens !\u003d null) {\n      DataInputByteBuffer buf \u003d new DataInputByteBuffer();\n      tokens.rewind();\n      buf.reset(tokens);\n      try {\n        credentials.readTokenStorageStream(buf);\n        if (LOG.isDebugEnabled()) {\n          for (Token\u003c? extends TokenIdentifier\u003e tk : credentials.getAllTokens()) {\n            LOG.debug(tk.getService() + \" \u003d \" + tk.toString());\n          }\n        }\n      } catch (IOException e) {\n        throw RPCUtil.getRemoteException(e);\n      }\n    }\n    // //////////// End of parsing credentials\n    return credentials;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java"
    }
  }
}