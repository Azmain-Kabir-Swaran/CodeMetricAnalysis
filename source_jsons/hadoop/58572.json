{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CommonNodeLabelsManager.java",
  "functionName": "isExclusiveNodeLabel",
  "functionId": "isExclusiveNodeLabel___nodeLabel-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/nodelabels/CommonNodeLabelsManager.java",
  "functionStartLine": 951,
  "functionEndLine": 969,
  "numCommitsSeen": 42,
  "timeTaken": 2224,
  "changeHistory": [
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
    "ee89ac84e68d3e181b75c63f74a0444f9d28146f",
    "e1feb4ea1a532d680d6ca69b55ffcae1552d64f0"
  ],
  "changeHistoryShort": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": "Ybodychange",
    "ee89ac84e68d3e181b75c63f74a0444f9d28146f": "Ybodychange",
    "e1feb4ea1a532d680d6ca69b55ffcae1552d64f0": "Yintroduced"
  },
  "changeHistoryDetails": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9341.  Fixed enentrant lock usage in YARN project.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "07/03/19 1:47 PM",
      "commitName": "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "03/03/19 11:59 PM",
      "commitNameOld": "bd8d299ded742813cabd4b4e7ce1e33e0d1f9509",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 3.58,
      "commitsBetweenForRepo": 49,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n   public boolean isExclusiveNodeLabel(String nodeLabel) throws IOException {\n     if (nodeLabel.equals(NO_LABEL)) {\n       return noNodeLabel.getIsExclusive();\n     }\n+    readLock.lock();\n     try {\n-      readLock.lock();\n       RMNodeLabel label \u003d labelCollections.get(nodeLabel);\n       if (label \u003d\u003d null) {\n         String message \u003d\n           \"Getting is-exclusive-node-label, node-label \u003d \" + nodeLabel\n             + \", is not existed.\";\n         LOG.error(message);\n         throw new IOException(message);\n       }\n       return label.getIsExclusive();\n     } finally {\n       readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean isExclusiveNodeLabel(String nodeLabel) throws IOException {\n    if (nodeLabel.equals(NO_LABEL)) {\n      return noNodeLabel.getIsExclusive();\n    }\n    readLock.lock();\n    try {\n      RMNodeLabel label \u003d labelCollections.get(nodeLabel);\n      if (label \u003d\u003d null) {\n        String message \u003d\n          \"Getting is-exclusive-node-label, node-label \u003d \" + nodeLabel\n            + \", is not existed.\";\n        LOG.error(message);\n        throw new IOException(message);\n      }\n      return label.getIsExclusive();\n    } finally {\n      readLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/nodelabels/CommonNodeLabelsManager.java",
      "extendedDetails": {}
    },
    "ee89ac84e68d3e181b75c63f74a0444f9d28146f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6680. Avoid locking overhead for NO_LABEL lookups. Contributed by Daryn Sharp\n",
      "commitDate": "19/06/17 10:12 AM",
      "commitName": "ee89ac84e68d3e181b75c63f74a0444f9d28146f",
      "commitAuthor": "Naganarasimha",
      "commitDateOld": "27/03/17 5:23 PM",
      "commitNameOld": "9bae6720cb8432efd78c909dc624c00e367cedf5",
      "commitAuthorOld": "Robert Kanter",
      "daysBetweenCommits": 83.7,
      "commitsBetweenForRepo": 438,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,19 @@\n   public boolean isExclusiveNodeLabel(String nodeLabel) throws IOException {\n+    if (nodeLabel.equals(NO_LABEL)) {\n+      return noNodeLabel.getIsExclusive();\n+    }\n     try {\n       readLock.lock();\n       RMNodeLabel label \u003d labelCollections.get(nodeLabel);\n       if (label \u003d\u003d null) {\n         String message \u003d\n           \"Getting is-exclusive-node-label, node-label \u003d \" + nodeLabel\n             + \", is not existed.\";\n         LOG.error(message);\n         throw new IOException(message);\n       }\n       return label.getIsExclusive();\n     } finally {\n       readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean isExclusiveNodeLabel(String nodeLabel) throws IOException {\n    if (nodeLabel.equals(NO_LABEL)) {\n      return noNodeLabel.getIsExclusive();\n    }\n    try {\n      readLock.lock();\n      RMNodeLabel label \u003d labelCollections.get(nodeLabel);\n      if (label \u003d\u003d null) {\n        String message \u003d\n          \"Getting is-exclusive-node-label, node-label \u003d \" + nodeLabel\n            + \", is not existed.\";\n        LOG.error(message);\n        throw new IOException(message);\n      }\n      return label.getIsExclusive();\n    } finally {\n      readLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/nodelabels/CommonNodeLabelsManager.java",
      "extendedDetails": {}
    },
    "e1feb4ea1a532d680d6ca69b55ffcae1552d64f0": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3345. Add non-exclusive node label API. Contributed by Wangda Tan\n",
      "commitDate": "20/03/15 7:04 PM",
      "commitName": "e1feb4ea1a532d680d6ca69b55ffcae1552d64f0",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,16 @@\n+  public boolean isExclusiveNodeLabel(String nodeLabel) throws IOException {\n+    try {\n+      readLock.lock();\n+      RMNodeLabel label \u003d labelCollections.get(nodeLabel);\n+      if (label \u003d\u003d null) {\n+        String message \u003d\n+          \"Getting is-exclusive-node-label, node-label \u003d \" + nodeLabel\n+            + \", is not existed.\";\n+        LOG.error(message);\n+        throw new IOException(message);\n+      }\n+      return label.getIsExclusive();\n+    } finally {\n+      readLock.unlock();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean isExclusiveNodeLabel(String nodeLabel) throws IOException {\n    try {\n      readLock.lock();\n      RMNodeLabel label \u003d labelCollections.get(nodeLabel);\n      if (label \u003d\u003d null) {\n        String message \u003d\n          \"Getting is-exclusive-node-label, node-label \u003d \" + nodeLabel\n            + \", is not existed.\";\n        LOG.error(message);\n        throw new IOException(message);\n      }\n      return label.getIsExclusive();\n    } finally {\n      readLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/nodelabels/CommonNodeLabelsManager.java"
    }
  }
}