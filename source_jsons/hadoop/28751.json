{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "OpportunisticContainerContext.java",
  "functionName": "updateNodeList",
  "functionId": "updateNodeList___newNodeList-List__RemoteNode__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/scheduler/OpportunisticContainerContext.java",
  "functionStartLine": 90,
  "functionEndLine": 102,
  "numCommitsSeen": 10,
  "timeTaken": 2200,
  "changeHistory": [
    "aa3cab1eb29c56368d15882d7260a994e615e8d8",
    "10be45986cdf86a89055065b752959bd6369d54f"
  ],
  "changeHistoryShort": {
    "aa3cab1eb29c56368d15882d7260a994e615e8d8": "Ymultichange(Yparameterchange,Ybodychange)",
    "10be45986cdf86a89055065b752959bd6369d54f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "aa3cab1eb29c56368d15882d7260a994e615e8d8": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-5799. Fix Opportunistic Allocation to set the correct value of Node Http Address. (asuresh)\n",
      "commitDate": "29/10/16 2:03 AM",
      "commitName": "aa3cab1eb29c56368d15882d7260a994e615e8d8",
      "commitAuthor": "Arun Suresh",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-5799. Fix Opportunistic Allocation to set the correct value of Node Http Address. (asuresh)\n",
          "commitDate": "29/10/16 2:03 AM",
          "commitName": "aa3cab1eb29c56368d15882d7260a994e615e8d8",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "29/09/16 3:11 PM",
          "commitNameOld": "10be45986cdf86a89055065b752959bd6369d54f",
          "commitAuthorOld": "Arun Suresh",
          "daysBetweenCommits": 29.45,
          "commitsBetweenForRepo": 258,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,13 @@\n-  public synchronized void updateNodeList(List\u003cNodeId\u003e newNodeList) {\n+  public synchronized void updateNodeList(List\u003cRemoteNode\u003e newNodeList) {\n     // This is an optimization for centralized placement. The\n     // OppContainerAllocatorAMService has a cached list of nodes which it sets\n     // here. The nodeMap needs to be updated only if the backing node list is\n     // modified.\n     if (newNodeList !\u003d nodeList) {\n       nodeList \u003d newNodeList;\n       nodeMap.clear();\n-      for (NodeId n : nodeList) {\n-        nodeMap.put(n.getHost(), n);\n+      for (RemoteNode n : nodeList) {\n+        nodeMap.put(n.getNodeId().getHost(), n);\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void updateNodeList(List\u003cRemoteNode\u003e newNodeList) {\n    // This is an optimization for centralized placement. The\n    // OppContainerAllocatorAMService has a cached list of nodes which it sets\n    // here. The nodeMap needs to be updated only if the backing node list is\n    // modified.\n    if (newNodeList !\u003d nodeList) {\n      nodeList \u003d newNodeList;\n      nodeMap.clear();\n      for (RemoteNode n : nodeList) {\n        nodeMap.put(n.getNodeId().getHost(), n);\n      }\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/scheduler/OpportunisticContainerContext.java",
          "extendedDetails": {
            "oldValue": "[newNodeList-List\u003cNodeId\u003e]",
            "newValue": "[newNodeList-List\u003cRemoteNode\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-5799. Fix Opportunistic Allocation to set the correct value of Node Http Address. (asuresh)\n",
          "commitDate": "29/10/16 2:03 AM",
          "commitName": "aa3cab1eb29c56368d15882d7260a994e615e8d8",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "29/09/16 3:11 PM",
          "commitNameOld": "10be45986cdf86a89055065b752959bd6369d54f",
          "commitAuthorOld": "Arun Suresh",
          "daysBetweenCommits": 29.45,
          "commitsBetweenForRepo": 258,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,13 @@\n-  public synchronized void updateNodeList(List\u003cNodeId\u003e newNodeList) {\n+  public synchronized void updateNodeList(List\u003cRemoteNode\u003e newNodeList) {\n     // This is an optimization for centralized placement. The\n     // OppContainerAllocatorAMService has a cached list of nodes which it sets\n     // here. The nodeMap needs to be updated only if the backing node list is\n     // modified.\n     if (newNodeList !\u003d nodeList) {\n       nodeList \u003d newNodeList;\n       nodeMap.clear();\n-      for (NodeId n : nodeList) {\n-        nodeMap.put(n.getHost(), n);\n+      for (RemoteNode n : nodeList) {\n+        nodeMap.put(n.getNodeId().getHost(), n);\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void updateNodeList(List\u003cRemoteNode\u003e newNodeList) {\n    // This is an optimization for centralized placement. The\n    // OppContainerAllocatorAMService has a cached list of nodes which it sets\n    // here. The nodeMap needs to be updated only if the backing node list is\n    // modified.\n    if (newNodeList !\u003d nodeList) {\n      nodeList \u003d newNodeList;\n      nodeMap.clear();\n      for (RemoteNode n : nodeList) {\n        nodeMap.put(n.getNodeId().getHost(), n);\n      }\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/scheduler/OpportunisticContainerContext.java",
          "extendedDetails": {}
        }
      ]
    },
    "10be45986cdf86a89055065b752959bd6369d54f": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5486. Update OpportunisticContainerAllocatorAMService::allocate method to handle OPPORTUNISTIC container requests. (Konstantinos Karanasos via asuresh)\n",
      "commitDate": "29/09/16 3:11 PM",
      "commitName": "10be45986cdf86a89055065b752959bd6369d54f",
      "commitAuthor": "Arun Suresh",
      "diff": "@@ -0,0 +1,13 @@\n+  public synchronized void updateNodeList(List\u003cNodeId\u003e newNodeList) {\n+    // This is an optimization for centralized placement. The\n+    // OppContainerAllocatorAMService has a cached list of nodes which it sets\n+    // here. The nodeMap needs to be updated only if the backing node list is\n+    // modified.\n+    if (newNodeList !\u003d nodeList) {\n+      nodeList \u003d newNodeList;\n+      nodeMap.clear();\n+      for (NodeId n : nodeList) {\n+        nodeMap.put(n.getHost(), n);\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void updateNodeList(List\u003cNodeId\u003e newNodeList) {\n    // This is an optimization for centralized placement. The\n    // OppContainerAllocatorAMService has a cached list of nodes which it sets\n    // here. The nodeMap needs to be updated only if the backing node list is\n    // modified.\n    if (newNodeList !\u003d nodeList) {\n      nodeList \u003d newNodeList;\n      nodeMap.clear();\n      for (NodeId n : nodeList) {\n        nodeMap.put(n.getHost(), n);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/scheduler/OpportunisticContainerContext.java"
    }
  }
}