{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CosNFileSystem.java",
  "functionName": "create",
  "functionId": "create___f-Path__permission-FsPermission__overwrite-boolean__bufferSize-int__replication-short__blockSize-long__progress-Progressable",
  "sourceFilePath": "hadoop-cloud-storage-project/hadoop-cos/src/main/java/org/apache/hadoop/fs/cosn/CosNFileSystem.java",
  "functionStartLine": 240,
  "functionEndLine": 264,
  "numCommitsSeen": 1,
  "timeTaken": 355,
  "changeHistory": [
    "8a9ede5cff816b66afc37e7c9d2b33aee48795d2"
  ],
  "changeHistoryShort": {
    "8a9ede5cff816b66afc37e7c9d2b33aee48795d2": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8a9ede5cff816b66afc37e7c9d2b33aee48795d2": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-15616. Incorporate Tencent Cloud COS File System Implementation. Contributed by Yang Yu.\n",
      "commitDate": "27/09/19 1:53 AM",
      "commitName": "8a9ede5cff816b66afc37e7c9d2b33aee48795d2",
      "commitAuthor": "Sammi Chen",
      "diff": "@@ -0,0 +1,25 @@\n+  public FSDataOutputStream create(Path f, FsPermission permission,\n+      boolean overwrite, int bufferSize, short replication, long blockSize,\n+      Progressable progress) throws IOException {\n+    FileStatus fileStatus;\n+\n+    try {\n+      fileStatus \u003d getFileStatus(f);\n+      if (fileStatus.isDirectory()) {\n+        throw new FileAlreadyExistsException(f + \" is a directory\");\n+      }\n+      if (!overwrite) {\n+        // path references a file and overwrite is disabled\n+        throw new FileAlreadyExistsException(f + \" already exists\");\n+      }\n+\n+    } catch (FileNotFoundException e) {\n+      LOG.debug(\"Creating a new file: [{}] in COS.\", f);\n+    }\n+\n+    Path absolutePath \u003d makeAbsolute(f);\n+    String key \u003d pathToKey(absolutePath);\n+    return new FSDataOutputStream(\n+        new CosNOutputStream(getConf(), store, key, blockSize,\n+            this.boundedIOThreadPool), statistics);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public FSDataOutputStream create(Path f, FsPermission permission,\n      boolean overwrite, int bufferSize, short replication, long blockSize,\n      Progressable progress) throws IOException {\n    FileStatus fileStatus;\n\n    try {\n      fileStatus \u003d getFileStatus(f);\n      if (fileStatus.isDirectory()) {\n        throw new FileAlreadyExistsException(f + \" is a directory\");\n      }\n      if (!overwrite) {\n        // path references a file and overwrite is disabled\n        throw new FileAlreadyExistsException(f + \" already exists\");\n      }\n\n    } catch (FileNotFoundException e) {\n      LOG.debug(\"Creating a new file: [{}] in COS.\", f);\n    }\n\n    Path absolutePath \u003d makeAbsolute(f);\n    String key \u003d pathToKey(absolutePath);\n    return new FSDataOutputStream(\n        new CosNOutputStream(getConf(), store, key, blockSize,\n            this.boundedIOThreadPool), statistics);\n  }",
      "path": "hadoop-cloud-storage-project/hadoop-cos/src/main/java/org/apache/hadoop/fs/cosn/CosNFileSystem.java"
    }
  }
}