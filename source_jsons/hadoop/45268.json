{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AMRMClientImpl.java",
  "functionName": "resolveRacks",
  "functionId": "resolveRacks___nodes-List__String__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java",
  "functionStartLine": 764,
  "functionEndLine": 780,
  "numCommitsSeen": 69,
  "timeTaken": 2070,
  "changeHistory": [
    "945e8c60640ceb938ad8d27767d44eec53a15038",
    "7ef54faad4bee4346da082a3f8cc5d6ea405d74a",
    "02f87683e3febeef28de028dfedc1e12ea39abad"
  ],
  "changeHistoryShort": {
    "945e8c60640ceb938ad8d27767d44eec53a15038": "Ybodychange",
    "7ef54faad4bee4346da082a3f8cc5d6ea405d74a": "Yfilerename",
    "02f87683e3febeef28de028dfedc1e12ea39abad": "Yintroduced"
  },
  "changeHistoryDetails": {
    "945e8c60640ceb938ad8d27767d44eec53a15038": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9394. Use new API of RackResolver to get better performance. Contributed by Lantao Jin.\n",
      "commitDate": "04/04/19 3:05 AM",
      "commitName": "945e8c60640ceb938ad8d27767d44eec53a15038",
      "commitAuthor": "Weiwei Yang",
      "commitDateOld": "22/11/18 12:52 AM",
      "commitNameOld": "176bb3f812e49b0fe3abddf54eebfc7219b5d718",
      "commitAuthorOld": "Weiwei Yang",
      "daysBetweenCommits": 133.05,
      "commitsBetweenForRepo": 958,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   private Set\u003cString\u003e resolveRacks(List\u003cString\u003e nodes) {\n     Set\u003cString\u003e racks \u003d new HashSet\u003cString\u003e();    \n     if (nodes !\u003d null) {\n-      for (String node : nodes) {\n+      List\u003cNode\u003e tmpList \u003d RackResolver.resolve(nodes);\n+      for (Node node : tmpList) {\n+        String rack \u003d node.getNetworkLocation();\n         // Ensure node requests are accompanied by requests for\n         // corresponding rack\n-        String rack \u003d RackResolver.resolve(node).getNetworkLocation();\n         if (rack \u003d\u003d null) {\n           LOG.warn(\"Failed to resolve rack for node \" + node + \".\");\n         } else {\n           racks.add(rack);\n         }\n       }\n     }\n-    \n     return racks;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private Set\u003cString\u003e resolveRacks(List\u003cString\u003e nodes) {\n    Set\u003cString\u003e racks \u003d new HashSet\u003cString\u003e();    \n    if (nodes !\u003d null) {\n      List\u003cNode\u003e tmpList \u003d RackResolver.resolve(nodes);\n      for (Node node : tmpList) {\n        String rack \u003d node.getNetworkLocation();\n        // Ensure node requests are accompanied by requests for\n        // corresponding rack\n        if (rack \u003d\u003d null) {\n          LOG.warn(\"Failed to resolve rack for node \" + node + \".\");\n        } else {\n          racks.add(rack);\n        }\n      }\n    }\n    return racks;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java",
      "extendedDetails": {}
    },
    "7ef54faad4bee4346da082a3f8cc5d6ea405d74a": {
      "type": "Yfilerename",
      "commitMessage": "YARN-834. Fixed annotations for yarn-client module, reorganized packages and clearly differentiated *Async apis. Contributed by Arun C Murthy and Zhijie Shen.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1494017 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/06/13 9:02 PM",
      "commitName": "7ef54faad4bee4346da082a3f8cc5d6ea405d74a",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/06/13 8:10 PM",
      "commitNameOld": "2b14656ab5050dd75935b64681cdc25fb49db94f",
      "commitAuthorOld": "Siddharth Seth",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private Set\u003cString\u003e resolveRacks(List\u003cString\u003e nodes) {\n    Set\u003cString\u003e racks \u003d new HashSet\u003cString\u003e();    \n    if (nodes !\u003d null) {\n      for (String node : nodes) {\n        // Ensure node requests are accompanied by requests for\n        // corresponding rack\n        String rack \u003d RackResolver.resolve(node).getNetworkLocation();\n        if (rack \u003d\u003d null) {\n          LOG.warn(\"Failed to resolve rack for node \" + node + \".\");\n        } else {\n          racks.add(rack);\n        }\n      }\n    }\n    \n    return racks;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/AMRMClientImpl.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/AMRMClientImpl.java"
      }
    },
    "02f87683e3febeef28de028dfedc1e12ea39abad": {
      "type": "Yintroduced",
      "commitMessage": "YARN-752. In AMRMClient, automatically add corresponding rack requests for requested nodes. (sandyr via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1493599 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/06/13 3:11 PM",
      "commitName": "02f87683e3febeef28de028dfedc1e12ea39abad",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,17 @@\n+  private Set\u003cString\u003e resolveRacks(List\u003cString\u003e nodes) {\n+    Set\u003cString\u003e racks \u003d new HashSet\u003cString\u003e();    \n+    if (nodes !\u003d null) {\n+      for (String node : nodes) {\n+        // Ensure node requests are accompanied by requests for\n+        // corresponding rack\n+        String rack \u003d RackResolver.resolve(node).getNetworkLocation();\n+        if (rack \u003d\u003d null) {\n+          LOG.warn(\"Failed to resolve rack for node \" + node + \".\");\n+        } else {\n+          racks.add(rack);\n+        }\n+      }\n+    }\n+    \n+    return racks;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private Set\u003cString\u003e resolveRacks(List\u003cString\u003e nodes) {\n    Set\u003cString\u003e racks \u003d new HashSet\u003cString\u003e();    \n    if (nodes !\u003d null) {\n      for (String node : nodes) {\n        // Ensure node requests are accompanied by requests for\n        // corresponding rack\n        String rack \u003d RackResolver.resolve(node).getNetworkLocation();\n        if (rack \u003d\u003d null) {\n          LOG.warn(\"Failed to resolve rack for node \" + node + \".\");\n        } else {\n          racks.add(rack);\n        }\n      }\n    }\n    \n    return racks;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/AMRMClientImpl.java"
    }
  }
}