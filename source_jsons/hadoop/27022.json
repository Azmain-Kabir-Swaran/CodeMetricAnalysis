{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AmIpFilter.java",
  "functionName": "findRedirectUrl",
  "functionId": "findRedirectUrl",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-web-proxy/src/main/java/org/apache/hadoop/yarn/server/webproxy/amfilter/AmIpFilter.java",
  "functionStartLine": 191,
  "functionEndLine": 211,
  "numCommitsSeen": 11,
  "timeTaken": 3017,
  "changeHistory": [
    "4111e6c7819d66e17e0932302c589777a355dbae",
    "9e0cde1469b8ffeb59619c64d6ece86b62424f04",
    "4224e613409ec97ff52ba28a7cedfe0485577257"
  ],
  "changeHistoryShort": {
    "4111e6c7819d66e17e0932302c589777a355dbae": "Ybodychange",
    "9e0cde1469b8ffeb59619c64d6ece86b62424f04": "Ymultichange(Ymodifierchange,Ybodychange)",
    "4224e613409ec97ff52ba28a7cedfe0485577257": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4111e6c7819d66e17e0932302c589777a355dbae": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7269. Tracking URL in the app state does not get redirected to ApplicationMaster for Running applications. Contributed by Wangda Tan\n",
      "commitDate": "03/10/17 9:54 AM",
      "commitName": "4111e6c7819d66e17e0932302c589777a355dbae",
      "commitAuthor": "Jian He",
      "commitDateOld": "14/07/17 2:10 PM",
      "commitNameOld": "9e0cde1469b8ffeb59619c64d6ece86b62424f04",
      "commitAuthorOld": "Yufei Gu",
      "daysBetweenCommits": 80.82,
      "commitsBetweenForRepo": 674,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,21 @@\n   public String findRedirectUrl() throws ServletException {\n     String addr \u003d null;\n     if (proxyUriBases.size() \u003d\u003d 1) {\n       // external proxy or not RM HA\n       addr \u003d proxyUriBases.values().iterator().next();\n-    } else {\n-      // RM HA\n-      YarnConfiguration conf \u003d new YarnConfiguration();\n-      for (String rmId : getRmIds(conf)) {\n-        String url \u003d getUrlByRmId(conf, rmId);\n-        if (isValidUrl(url)) {\n-          addr \u003d url;\n+    } else if (rmUrls !\u003d null) {\n+      for (String url : rmUrls) {\n+        String host \u003d proxyUriBases.get(url);\n+        if (isValidUrl(host)) {\n+          addr \u003d host;\n           break;\n         }\n       }\n     }\n \n     if (addr \u003d\u003d null) {\n       throw new ServletException(\n           \"Could not determine the proxy server for redirection\");\n     }\n     return addr;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String findRedirectUrl() throws ServletException {\n    String addr \u003d null;\n    if (proxyUriBases.size() \u003d\u003d 1) {\n      // external proxy or not RM HA\n      addr \u003d proxyUriBases.values().iterator().next();\n    } else if (rmUrls !\u003d null) {\n      for (String url : rmUrls) {\n        String host \u003d proxyUriBases.get(url);\n        if (isValidUrl(host)) {\n          addr \u003d host;\n          break;\n        }\n      }\n    }\n\n    if (addr \u003d\u003d null) {\n      throw new ServletException(\n          \"Could not determine the proxy server for redirection\");\n    }\n    return addr;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-web-proxy/src/main/java/org/apache/hadoop/yarn/server/webproxy/amfilter/AmIpFilter.java",
      "extendedDetails": {}
    },
    "9e0cde1469b8ffeb59619c64d6ece86b62424f04": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-6625. yarn application -list returns a tracking URL for AM that doesn\u0027t work in secured and HA environment. (Yufei Gu)\n",
      "commitDate": "14/07/17 2:10 PM",
      "commitName": "9e0cde1469b8ffeb59619c64d6ece86b62424f04",
      "commitAuthor": "Yufei Gu",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-6625. yarn application -list returns a tracking URL for AM that doesn\u0027t work in secured and HA environment. (Yufei Gu)\n",
          "commitDate": "14/07/17 2:10 PM",
          "commitName": "9e0cde1469b8ffeb59619c64d6ece86b62424f04",
          "commitAuthor": "Yufei Gu",
          "commitDateOld": "24/05/17 9:22 AM",
          "commitNameOld": "8bf1949c0efed700781eb47cf18f9f88443ed506",
          "commitAuthorOld": "Jason Lowe",
          "daysBetweenCommits": 51.2,
          "commitsBetweenForRepo": 251,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,23 @@\n-  protected String findRedirectUrl() throws ServletException {\n-    String addr;\n-    if (proxyUriBases.size() \u003d\u003d 1) {  // external proxy or not RM HA\n+  public String findRedirectUrl() throws ServletException {\n+    String addr \u003d null;\n+    if (proxyUriBases.size() \u003d\u003d 1) {\n+      // external proxy or not RM HA\n       addr \u003d proxyUriBases.values().iterator().next();\n-    } else {                          // RM HA\n+    } else {\n+      // RM HA\n       YarnConfiguration conf \u003d new YarnConfiguration();\n-      String activeRMId \u003d RMHAUtils.findActiveRMHAId(conf);\n-      String addressPropertyPrefix \u003d YarnConfiguration.useHttps(conf)\n-          ? YarnConfiguration.RM_WEBAPP_HTTPS_ADDRESS\n-          : YarnConfiguration.RM_WEBAPP_ADDRESS;\n-      String host \u003d conf.get(\n-          HAUtil.addSuffix(addressPropertyPrefix, activeRMId));\n-      addr \u003d proxyUriBases.get(host);\n+      for (String rmId : getRmIds(conf)) {\n+        String url \u003d getUrlByRmId(conf, rmId);\n+        if (isValidUrl(url)) {\n+          addr \u003d url;\n+          break;\n+        }\n+      }\n     }\n+\n     if (addr \u003d\u003d null) {\n       throw new ServletException(\n           \"Could not determine the proxy server for redirection\");\n     }\n     return addr;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public String findRedirectUrl() throws ServletException {\n    String addr \u003d null;\n    if (proxyUriBases.size() \u003d\u003d 1) {\n      // external proxy or not RM HA\n      addr \u003d proxyUriBases.values().iterator().next();\n    } else {\n      // RM HA\n      YarnConfiguration conf \u003d new YarnConfiguration();\n      for (String rmId : getRmIds(conf)) {\n        String url \u003d getUrlByRmId(conf, rmId);\n        if (isValidUrl(url)) {\n          addr \u003d url;\n          break;\n        }\n      }\n    }\n\n    if (addr \u003d\u003d null) {\n      throw new ServletException(\n          \"Could not determine the proxy server for redirection\");\n    }\n    return addr;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-web-proxy/src/main/java/org/apache/hadoop/yarn/server/webproxy/amfilter/AmIpFilter.java",
          "extendedDetails": {
            "oldValue": "[protected]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-6625. yarn application -list returns a tracking URL for AM that doesn\u0027t work in secured and HA environment. (Yufei Gu)\n",
          "commitDate": "14/07/17 2:10 PM",
          "commitName": "9e0cde1469b8ffeb59619c64d6ece86b62424f04",
          "commitAuthor": "Yufei Gu",
          "commitDateOld": "24/05/17 9:22 AM",
          "commitNameOld": "8bf1949c0efed700781eb47cf18f9f88443ed506",
          "commitAuthorOld": "Jason Lowe",
          "daysBetweenCommits": 51.2,
          "commitsBetweenForRepo": 251,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,23 @@\n-  protected String findRedirectUrl() throws ServletException {\n-    String addr;\n-    if (proxyUriBases.size() \u003d\u003d 1) {  // external proxy or not RM HA\n+  public String findRedirectUrl() throws ServletException {\n+    String addr \u003d null;\n+    if (proxyUriBases.size() \u003d\u003d 1) {\n+      // external proxy or not RM HA\n       addr \u003d proxyUriBases.values().iterator().next();\n-    } else {                          // RM HA\n+    } else {\n+      // RM HA\n       YarnConfiguration conf \u003d new YarnConfiguration();\n-      String activeRMId \u003d RMHAUtils.findActiveRMHAId(conf);\n-      String addressPropertyPrefix \u003d YarnConfiguration.useHttps(conf)\n-          ? YarnConfiguration.RM_WEBAPP_HTTPS_ADDRESS\n-          : YarnConfiguration.RM_WEBAPP_ADDRESS;\n-      String host \u003d conf.get(\n-          HAUtil.addSuffix(addressPropertyPrefix, activeRMId));\n-      addr \u003d proxyUriBases.get(host);\n+      for (String rmId : getRmIds(conf)) {\n+        String url \u003d getUrlByRmId(conf, rmId);\n+        if (isValidUrl(url)) {\n+          addr \u003d url;\n+          break;\n+        }\n+      }\n     }\n+\n     if (addr \u003d\u003d null) {\n       throw new ServletException(\n           \"Could not determine the proxy server for redirection\");\n     }\n     return addr;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public String findRedirectUrl() throws ServletException {\n    String addr \u003d null;\n    if (proxyUriBases.size() \u003d\u003d 1) {\n      // external proxy or not RM HA\n      addr \u003d proxyUriBases.values().iterator().next();\n    } else {\n      // RM HA\n      YarnConfiguration conf \u003d new YarnConfiguration();\n      for (String rmId : getRmIds(conf)) {\n        String url \u003d getUrlByRmId(conf, rmId);\n        if (isValidUrl(url)) {\n          addr \u003d url;\n          break;\n        }\n      }\n    }\n\n    if (addr \u003d\u003d null) {\n      throw new ServletException(\n          \"Could not determine the proxy server for redirection\");\n    }\n    return addr;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-web-proxy/src/main/java/org/apache/hadoop/yarn/server/webproxy/amfilter/AmIpFilter.java",
          "extendedDetails": {}
        }
      ]
    },
    "4224e613409ec97ff52ba28a7cedfe0485577257": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1811. Fixed AMFilters in YARN to correctly accept requests from either web-app proxy or the RMs when HA is enabled. Contributed by Robert Kanter.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1579877 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "20/03/14 9:20 PM",
      "commitName": "4224e613409ec97ff52ba28a7cedfe0485577257",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,20 @@\n+  protected String findRedirectUrl() throws ServletException {\n+    String addr;\n+    if (proxyUriBases.size() \u003d\u003d 1) {  // external proxy or not RM HA\n+      addr \u003d proxyUriBases.values().iterator().next();\n+    } else {                          // RM HA\n+      YarnConfiguration conf \u003d new YarnConfiguration();\n+      String activeRMId \u003d RMHAUtils.findActiveRMHAId(conf);\n+      String addressPropertyPrefix \u003d YarnConfiguration.useHttps(conf)\n+          ? YarnConfiguration.RM_WEBAPP_HTTPS_ADDRESS\n+          : YarnConfiguration.RM_WEBAPP_ADDRESS;\n+      String host \u003d conf.get(\n+          HAUtil.addSuffix(addressPropertyPrefix, activeRMId));\n+      addr \u003d proxyUriBases.get(host);\n+    }\n+    if (addr \u003d\u003d null) {\n+      throw new ServletException(\n+          \"Could not determine the proxy server for redirection\");\n+    }\n+    return addr;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected String findRedirectUrl() throws ServletException {\n    String addr;\n    if (proxyUriBases.size() \u003d\u003d 1) {  // external proxy or not RM HA\n      addr \u003d proxyUriBases.values().iterator().next();\n    } else {                          // RM HA\n      YarnConfiguration conf \u003d new YarnConfiguration();\n      String activeRMId \u003d RMHAUtils.findActiveRMHAId(conf);\n      String addressPropertyPrefix \u003d YarnConfiguration.useHttps(conf)\n          ? YarnConfiguration.RM_WEBAPP_HTTPS_ADDRESS\n          : YarnConfiguration.RM_WEBAPP_ADDRESS;\n      String host \u003d conf.get(\n          HAUtil.addSuffix(addressPropertyPrefix, activeRMId));\n      addr \u003d proxyUriBases.get(host);\n    }\n    if (addr \u003d\u003d null) {\n      throw new ServletException(\n          \"Could not determine the proxy server for redirection\");\n    }\n    return addr;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-web-proxy/src/main/java/org/apache/hadoop/yarn/server/webproxy/amfilter/AmIpFilter.java"
    }
  }
}