{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JobImpl.java",
  "functionName": "getReport",
  "functionId": "getReport",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java",
  "functionStartLine": 870,
  "functionEndLine": 901,
  "numCommitsSeen": 96,
  "timeTaken": 8780,
  "changeHistory": [
    "cf953b6258b036fc482456b4591cfb98054f48f2",
    "ecfa05227489724f12775b94a9f9184b66e865af",
    "022f7b4a25c73b8c43985e8d1bac717b96373ac6",
    "229a79bbc3c0855aae7c3c3ff0a48ead98767a47",
    "ccc2807d86d5b9f6b2eb77a5fc3bdf3c3e67c6ab",
    "fcbad14a3da7fadbb601bf245552ecca2fbc5026",
    "b7ae5a6cb7b2d3e3112ac53007e984caeb07de58",
    "47a381e306877750b5a3ce5d76e0a5ff652ec188",
    "0b3c654d83c5e73fe946de194f3aea0a9fe06f5a",
    "312a7e71001d55f88781e56b331ab1b40a72a980",
    "6bdf5746d5d677f9c17598768c4ae86384c000c6",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "cf953b6258b036fc482456b4591cfb98054f48f2": "Ybodychange",
    "ecfa05227489724f12775b94a9f9184b66e865af": "Ybodychange",
    "022f7b4a25c73b8c43985e8d1bac717b96373ac6": "Ybodychange",
    "229a79bbc3c0855aae7c3c3ff0a48ead98767a47": "Ybodychange",
    "ccc2807d86d5b9f6b2eb77a5fc3bdf3c3e67c6ab": "Ybodychange",
    "fcbad14a3da7fadbb601bf245552ecca2fbc5026": "Ybodychange",
    "b7ae5a6cb7b2d3e3112ac53007e984caeb07de58": "Ybodychange",
    "47a381e306877750b5a3ce5d76e0a5ff652ec188": "Ybodychange",
    "0b3c654d83c5e73fe946de194f3aea0a9fe06f5a": "Ybodychange",
    "312a7e71001d55f88781e56b331ab1b40a72a980": "Ybodychange",
    "6bdf5746d5d677f9c17598768c4ae86384c000c6": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cf953b6258b036fc482456b4591cfb98054f48f2": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6515. Update Application priority in AM side from AM-RM heartbeat. Contributed by Sunil G\n",
      "commitDate": "29/10/15 11:05 AM",
      "commitName": "cf953b6258b036fc482456b4591cfb98054f48f2",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "14/08/15 12:29 PM",
      "commitNameOld": "27d24f96ab8d17e839a1ef0d7076efc78d28724a",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 75.94,
      "commitsBetweenForRepo": 561,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,32 @@\n   public JobReport getReport() {\n     readLock.lock();\n     try {\n       JobState state \u003d getState();\n \n       // jobFile can be null if the job is not yet inited.\n       String jobFile \u003d\n           remoteJobConfFile \u003d\u003d null ? \"\" : remoteJobConfFile.toString();\n \n       StringBuilder diagsb \u003d new StringBuilder();\n       for (String s : getDiagnostics()) {\n         diagsb.append(s).append(\"\\n\");\n       }\n \n       if (getInternalState() \u003d\u003d JobStateInternal.NEW) {\n         return MRBuilderUtils.newJobReport(jobId, jobName, reporterUserName,\n             state, appSubmitTime, startTime, finishTime, setupProgress, 0.0f,\n             0.0f, cleanupProgress, jobFile, amInfos, isUber, diagsb.toString());\n       }\n \n       computeProgress();\n       JobReport report \u003d MRBuilderUtils.newJobReport(jobId, jobName,\n           reporterUserName,\n           state, appSubmitTime, startTime, finishTime, setupProgress,\n           this.mapProgress, this.reduceProgress,\n-          cleanupProgress, jobFile, amInfos, isUber, diagsb.toString());\n+          cleanupProgress, jobFile, amInfos, isUber, diagsb.toString(),\n+          jobPriority);\n       return report;\n     } finally {\n       readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public JobReport getReport() {\n    readLock.lock();\n    try {\n      JobState state \u003d getState();\n\n      // jobFile can be null if the job is not yet inited.\n      String jobFile \u003d\n          remoteJobConfFile \u003d\u003d null ? \"\" : remoteJobConfFile.toString();\n\n      StringBuilder diagsb \u003d new StringBuilder();\n      for (String s : getDiagnostics()) {\n        diagsb.append(s).append(\"\\n\");\n      }\n\n      if (getInternalState() \u003d\u003d JobStateInternal.NEW) {\n        return MRBuilderUtils.newJobReport(jobId, jobName, reporterUserName,\n            state, appSubmitTime, startTime, finishTime, setupProgress, 0.0f,\n            0.0f, cleanupProgress, jobFile, amInfos, isUber, diagsb.toString());\n      }\n\n      computeProgress();\n      JobReport report \u003d MRBuilderUtils.newJobReport(jobId, jobName,\n          reporterUserName,\n          state, appSubmitTime, startTime, finishTime, setupProgress,\n          this.mapProgress, this.reduceProgress,\n          cleanupProgress, jobFile, amInfos, isUber, diagsb.toString(),\n          jobPriority);\n      return report;\n    } finally {\n      readLock.unlock();\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java",
      "extendedDetails": {}
    },
    "ecfa05227489724f12775b94a9f9184b66e865af": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6079. Rename JobImpl#username to reporterUserName. Contributed by Tsuyoshi Ozawa.\n",
      "commitDate": "08/05/15 2:16 AM",
      "commitName": "ecfa05227489724f12775b94a9f9184b66e865af",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "05/09/14 6:42 AM",
      "commitNameOld": "45efc966ee1a1bda0271464dcee2564862d53b1f",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 244.82,
      "commitsBetweenForRepo": 2136,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,31 @@\n   public JobReport getReport() {\n     readLock.lock();\n     try {\n       JobState state \u003d getState();\n \n       // jobFile can be null if the job is not yet inited.\n       String jobFile \u003d\n           remoteJobConfFile \u003d\u003d null ? \"\" : remoteJobConfFile.toString();\n \n       StringBuilder diagsb \u003d new StringBuilder();\n       for (String s : getDiagnostics()) {\n         diagsb.append(s).append(\"\\n\");\n       }\n \n       if (getInternalState() \u003d\u003d JobStateInternal.NEW) {\n-        return MRBuilderUtils.newJobReport(jobId, jobName, username, state,\n-            appSubmitTime, startTime, finishTime, setupProgress, 0.0f, 0.0f,\n-            cleanupProgress, jobFile, amInfos, isUber, diagsb.toString());\n+        return MRBuilderUtils.newJobReport(jobId, jobName, reporterUserName,\n+            state, appSubmitTime, startTime, finishTime, setupProgress, 0.0f,\n+            0.0f, cleanupProgress, jobFile, amInfos, isUber, diagsb.toString());\n       }\n \n       computeProgress();\n-      JobReport report \u003d MRBuilderUtils.newJobReport(jobId, jobName, username,\n+      JobReport report \u003d MRBuilderUtils.newJobReport(jobId, jobName,\n+          reporterUserName,\n           state, appSubmitTime, startTime, finishTime, setupProgress,\n           this.mapProgress, this.reduceProgress,\n           cleanupProgress, jobFile, amInfos, isUber, diagsb.toString());\n       return report;\n     } finally {\n       readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public JobReport getReport() {\n    readLock.lock();\n    try {\n      JobState state \u003d getState();\n\n      // jobFile can be null if the job is not yet inited.\n      String jobFile \u003d\n          remoteJobConfFile \u003d\u003d null ? \"\" : remoteJobConfFile.toString();\n\n      StringBuilder diagsb \u003d new StringBuilder();\n      for (String s : getDiagnostics()) {\n        diagsb.append(s).append(\"\\n\");\n      }\n\n      if (getInternalState() \u003d\u003d JobStateInternal.NEW) {\n        return MRBuilderUtils.newJobReport(jobId, jobName, reporterUserName,\n            state, appSubmitTime, startTime, finishTime, setupProgress, 0.0f,\n            0.0f, cleanupProgress, jobFile, amInfos, isUber, diagsb.toString());\n      }\n\n      computeProgress();\n      JobReport report \u003d MRBuilderUtils.newJobReport(jobId, jobName,\n          reporterUserName,\n          state, appSubmitTime, startTime, finishTime, setupProgress,\n          this.mapProgress, this.reduceProgress,\n          cleanupProgress, jobFile, amInfos, isUber, diagsb.toString());\n      return report;\n    } finally {\n      readLock.unlock();\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java",
      "extendedDetails": {}
    },
    "022f7b4a25c73b8c43985e8d1bac717b96373ac6": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-4596. Split StateMachine state from states seen by MRClientProtocol for Job, Task and TaskAttempt. Contributed by Siddarth Seth.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1399976 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/10/12 10:57 PM",
      "commitName": "022f7b4a25c73b8c43985e8d1bac717b96373ac6",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "11/09/12 5:59 PM",
      "commitNameOld": "229a79bbc3c0855aae7c3c3ff0a48ead98767a47",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 37.21,
      "commitsBetweenForRepo": 209,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,30 @@\n   public JobReport getReport() {\n     readLock.lock();\n     try {\n       JobState state \u003d getState();\n \n       // jobFile can be null if the job is not yet inited.\n       String jobFile \u003d\n           remoteJobConfFile \u003d\u003d null ? \"\" : remoteJobConfFile.toString();\n \n       StringBuilder diagsb \u003d new StringBuilder();\n       for (String s : getDiagnostics()) {\n         diagsb.append(s).append(\"\\n\");\n       }\n \n-      if (getState() \u003d\u003d JobState.NEW) {\n+      if (getInternalState() \u003d\u003d JobStateInternal.NEW) {\n         return MRBuilderUtils.newJobReport(jobId, jobName, username, state,\n             appSubmitTime, startTime, finishTime, setupProgress, 0.0f, 0.0f,\n             cleanupProgress, jobFile, amInfos, isUber, diagsb.toString());\n       }\n \n       computeProgress();\n       JobReport report \u003d MRBuilderUtils.newJobReport(jobId, jobName, username,\n           state, appSubmitTime, startTime, finishTime, setupProgress,\n           this.mapProgress, this.reduceProgress,\n           cleanupProgress, jobFile, amInfos, isUber, diagsb.toString());\n       return report;\n     } finally {\n       readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public JobReport getReport() {\n    readLock.lock();\n    try {\n      JobState state \u003d getState();\n\n      // jobFile can be null if the job is not yet inited.\n      String jobFile \u003d\n          remoteJobConfFile \u003d\u003d null ? \"\" : remoteJobConfFile.toString();\n\n      StringBuilder diagsb \u003d new StringBuilder();\n      for (String s : getDiagnostics()) {\n        diagsb.append(s).append(\"\\n\");\n      }\n\n      if (getInternalState() \u003d\u003d JobStateInternal.NEW) {\n        return MRBuilderUtils.newJobReport(jobId, jobName, username, state,\n            appSubmitTime, startTime, finishTime, setupProgress, 0.0f, 0.0f,\n            cleanupProgress, jobFile, amInfos, isUber, diagsb.toString());\n      }\n\n      computeProgress();\n      JobReport report \u003d MRBuilderUtils.newJobReport(jobId, jobName, username,\n          state, appSubmitTime, startTime, finishTime, setupProgress,\n          this.mapProgress, this.reduceProgress,\n          cleanupProgress, jobFile, amInfos, isUber, diagsb.toString());\n      return report;\n    } finally {\n      readLock.unlock();\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java",
      "extendedDetails": {}
    },
    "229a79bbc3c0855aae7c3c3ff0a48ead98767a47": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-4646. Fixed MR framework to send diagnostic information correctly to clients in case of failed jobs also. Contributed by Jason Lowe.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1383709 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/09/12 5:59 PM",
      "commitName": "229a79bbc3c0855aae7c3c3ff0a48ead98767a47",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "06/09/12 3:20 PM",
      "commitNameOld": "09038b741d7a956cfd6ff263521f3f5679f31e71",
      "commitAuthorOld": "Robert Joseph Evans",
      "daysBetweenCommits": 5.11,
      "commitsBetweenForRepo": 29,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,30 @@\n   public JobReport getReport() {\n     readLock.lock();\n     try {\n       JobState state \u003d getState();\n \n       // jobFile can be null if the job is not yet inited.\n       String jobFile \u003d\n           remoteJobConfFile \u003d\u003d null ? \"\" : remoteJobConfFile.toString();\n \n+      StringBuilder diagsb \u003d new StringBuilder();\n+      for (String s : getDiagnostics()) {\n+        diagsb.append(s).append(\"\\n\");\n+      }\n+\n       if (getState() \u003d\u003d JobState.NEW) {\n         return MRBuilderUtils.newJobReport(jobId, jobName, username, state,\n             appSubmitTime, startTime, finishTime, setupProgress, 0.0f, 0.0f,\n-            cleanupProgress, jobFile, amInfos, isUber);\n+            cleanupProgress, jobFile, amInfos, isUber, diagsb.toString());\n       }\n \n       computeProgress();\n-      return MRBuilderUtils.newJobReport(jobId, jobName, username, state,\n-          appSubmitTime, startTime, finishTime, setupProgress,\n+      JobReport report \u003d MRBuilderUtils.newJobReport(jobId, jobName, username,\n+          state, appSubmitTime, startTime, finishTime, setupProgress,\n           this.mapProgress, this.reduceProgress,\n-          cleanupProgress, jobFile, amInfos, isUber);\n+          cleanupProgress, jobFile, amInfos, isUber, diagsb.toString());\n+      return report;\n     } finally {\n       readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public JobReport getReport() {\n    readLock.lock();\n    try {\n      JobState state \u003d getState();\n\n      // jobFile can be null if the job is not yet inited.\n      String jobFile \u003d\n          remoteJobConfFile \u003d\u003d null ? \"\" : remoteJobConfFile.toString();\n\n      StringBuilder diagsb \u003d new StringBuilder();\n      for (String s : getDiagnostics()) {\n        diagsb.append(s).append(\"\\n\");\n      }\n\n      if (getState() \u003d\u003d JobState.NEW) {\n        return MRBuilderUtils.newJobReport(jobId, jobName, username, state,\n            appSubmitTime, startTime, finishTime, setupProgress, 0.0f, 0.0f,\n            cleanupProgress, jobFile, amInfos, isUber, diagsb.toString());\n      }\n\n      computeProgress();\n      JobReport report \u003d MRBuilderUtils.newJobReport(jobId, jobName, username,\n          state, appSubmitTime, startTime, finishTime, setupProgress,\n          this.mapProgress, this.reduceProgress,\n          cleanupProgress, jobFile, amInfos, isUber, diagsb.toString());\n      return report;\n    } finally {\n      readLock.unlock();\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java",
      "extendedDetails": {}
    },
    "ccc2807d86d5b9f6b2eb77a5fc3bdf3c3e67c6ab": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3823. Ensure counters are calculated only once after a job finishes. (Contributed by Vinod Kumar Vavilapalli)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1241692 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/02/12 3:07 PM",
      "commitName": "ccc2807d86d5b9f6b2eb77a5fc3bdf3c3e67c6ab",
      "commitAuthor": "Siddharth Seth",
      "commitDateOld": "03/02/12 5:21 PM",
      "commitNameOld": "fe1cf3b0aca5f4d7a8af02a915b218f9b1de0fa6",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 3.91,
      "commitsBetweenForRepo": 36,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,24 @@\n   public JobReport getReport() {\n     readLock.lock();\n     try {\n       JobState state \u003d getState();\n \n+      // jobFile can be null if the job is not yet inited.\n+      String jobFile \u003d\n+          remoteJobConfFile \u003d\u003d null ? \"\" : remoteJobConfFile.toString();\n+\n       if (getState() \u003d\u003d JobState.NEW) {\n         return MRBuilderUtils.newJobReport(jobId, jobName, username, state,\n             appSubmitTime, startTime, finishTime, setupProgress, 0.0f, 0.0f,\n-            cleanupProgress, remoteJobConfFile.toString(), amInfos, isUber);\n+            cleanupProgress, jobFile, amInfos, isUber);\n       }\n \n       computeProgress();\n       return MRBuilderUtils.newJobReport(jobId, jobName, username, state,\n           appSubmitTime, startTime, finishTime, setupProgress,\n           this.mapProgress, this.reduceProgress,\n-          cleanupProgress, remoteJobConfFile.toString(), amInfos, isUber);\n+          cleanupProgress, jobFile, amInfos, isUber);\n     } finally {\n       readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public JobReport getReport() {\n    readLock.lock();\n    try {\n      JobState state \u003d getState();\n\n      // jobFile can be null if the job is not yet inited.\n      String jobFile \u003d\n          remoteJobConfFile \u003d\u003d null ? \"\" : remoteJobConfFile.toString();\n\n      if (getState() \u003d\u003d JobState.NEW) {\n        return MRBuilderUtils.newJobReport(jobId, jobName, username, state,\n            appSubmitTime, startTime, finishTime, setupProgress, 0.0f, 0.0f,\n            cleanupProgress, jobFile, amInfos, isUber);\n      }\n\n      computeProgress();\n      return MRBuilderUtils.newJobReport(jobId, jobName, username, state,\n          appSubmitTime, startTime, finishTime, setupProgress,\n          this.mapProgress, this.reduceProgress,\n          cleanupProgress, jobFile, amInfos, isUber);\n    } finally {\n      readLock.unlock();\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java",
      "extendedDetails": {}
    },
    "fcbad14a3da7fadbb601bf245552ecca2fbc5026": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3568. Optimized Job\u0027s progress calculations in MR AM. (vinodkv)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1224995 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/12/11 11:54 AM",
      "commitName": "fcbad14a3da7fadbb601bf245552ecca2fbc5026",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "22/12/11 2:34 PM",
      "commitNameOld": "8fa0a3c737f27ff9d12fb657a7b22865754a5fd8",
      "commitAuthorOld": "Siddharth Seth",
      "daysBetweenCommits": 4.89,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,20 @@\n   public JobReport getReport() {\n     readLock.lock();\n     try {\n       JobState state \u003d getState();\n \n       if (getState() \u003d\u003d JobState.NEW) {\n         return MRBuilderUtils.newJobReport(jobId, jobName, username, state,\n             appSubmitTime, startTime, finishTime, setupProgress, 0.0f, 0.0f,\n             cleanupProgress, remoteJobConfFile.toString(), amInfos, isUber);\n       }\n \n+      computeProgress();\n       return MRBuilderUtils.newJobReport(jobId, jobName, username, state,\n           appSubmitTime, startTime, finishTime, setupProgress,\n-          computeProgress(mapTasks), computeProgress(reduceTasks),\n+          this.mapProgress, this.reduceProgress,\n           cleanupProgress, remoteJobConfFile.toString(), amInfos, isUber);\n     } finally {\n       readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public JobReport getReport() {\n    readLock.lock();\n    try {\n      JobState state \u003d getState();\n\n      if (getState() \u003d\u003d JobState.NEW) {\n        return MRBuilderUtils.newJobReport(jobId, jobName, username, state,\n            appSubmitTime, startTime, finishTime, setupProgress, 0.0f, 0.0f,\n            cleanupProgress, remoteJobConfFile.toString(), amInfos, isUber);\n      }\n\n      computeProgress();\n      return MRBuilderUtils.newJobReport(jobId, jobName, username, state,\n          appSubmitTime, startTime, finishTime, setupProgress,\n          this.mapProgress, this.reduceProgress,\n          cleanupProgress, remoteJobConfFile.toString(), amInfos, isUber);\n    } finally {\n      readLock.unlock();\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java",
      "extendedDetails": {}
    },
    "b7ae5a6cb7b2d3e3112ac53007e984caeb07de58": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3426. Fixed MR AM in uber mode to write map intermediate outputs in the correct directory to work properly in secure mode. Contributed by Hitesh Shah.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1213987 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/12/11 3:35 PM",
      "commitName": "b7ae5a6cb7b2d3e3112ac53007e984caeb07de58",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "07/11/11 11:28 PM",
      "commitNameOld": "9fe9f42c8fad872f7aab5f9bbdac4a860edb0d43",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 35.67,
      "commitsBetweenForRepo": 192,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n   public JobReport getReport() {\n     readLock.lock();\n     try {\n       JobState state \u003d getState();\n \n       if (getState() \u003d\u003d JobState.NEW) {\n         return MRBuilderUtils.newJobReport(jobId, jobName, username, state,\n             appSubmitTime, startTime, finishTime, setupProgress, 0.0f, 0.0f,\n-            cleanupProgress, remoteJobConfFile.toString(), amInfos);\n+            cleanupProgress, remoteJobConfFile.toString(), amInfos, isUber);\n       }\n \n       return MRBuilderUtils.newJobReport(jobId, jobName, username, state,\n           appSubmitTime, startTime, finishTime, setupProgress,\n           computeProgress(mapTasks), computeProgress(reduceTasks),\n-          cleanupProgress, remoteJobConfFile.toString(), amInfos);\n+          cleanupProgress, remoteJobConfFile.toString(), amInfos, isUber);\n     } finally {\n       readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public JobReport getReport() {\n    readLock.lock();\n    try {\n      JobState state \u003d getState();\n\n      if (getState() \u003d\u003d JobState.NEW) {\n        return MRBuilderUtils.newJobReport(jobId, jobName, username, state,\n            appSubmitTime, startTime, finishTime, setupProgress, 0.0f, 0.0f,\n            cleanupProgress, remoteJobConfFile.toString(), amInfos, isUber);\n      }\n\n      return MRBuilderUtils.newJobReport(jobId, jobName, username, state,\n          appSubmitTime, startTime, finishTime, setupProgress,\n          computeProgress(mapTasks), computeProgress(reduceTasks),\n          cleanupProgress, remoteJobConfFile.toString(), amInfos, isUber);\n    } finally {\n      readLock.unlock();\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java",
      "extendedDetails": {}
    },
    "47a381e306877750b5a3ce5d76e0a5ff652ec188": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3146. Added a MR specific command line to dump logs for a given TaskAttemptID. Contributed by Siddharth Seth.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1195349 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/10/11 11:42 PM",
      "commitName": "47a381e306877750b5a3ce5d76e0a5ff652ec188",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "24/10/11 1:41 AM",
      "commitNameOld": "408656614495674992349fbda3981559ada3de0b",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 6.92,
      "commitsBetweenForRepo": 91,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,19 @@\n   public JobReport getReport() {\n     readLock.lock();\n     try {\n       JobState state \u003d getState();\n \n       if (getState() \u003d\u003d JobState.NEW) {\n         return MRBuilderUtils.newJobReport(jobId, jobName, username, state,\n-            startTime, finishTime, setupProgress, 0.0f,\n-            0.0f, cleanupProgress, remoteJobConfFile.toString());\n+            appSubmitTime, startTime, finishTime, setupProgress, 0.0f, 0.0f,\n+            cleanupProgress, remoteJobConfFile.toString(), amInfos);\n       }\n \n       return MRBuilderUtils.newJobReport(jobId, jobName, username, state,\n-          startTime, finishTime, setupProgress, computeProgress(mapTasks),\n-          computeProgress(reduceTasks), cleanupProgress, remoteJobConfFile.toString());\n+          appSubmitTime, startTime, finishTime, setupProgress,\n+          computeProgress(mapTasks), computeProgress(reduceTasks),\n+          cleanupProgress, remoteJobConfFile.toString(), amInfos);\n     } finally {\n       readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public JobReport getReport() {\n    readLock.lock();\n    try {\n      JobState state \u003d getState();\n\n      if (getState() \u003d\u003d JobState.NEW) {\n        return MRBuilderUtils.newJobReport(jobId, jobName, username, state,\n            appSubmitTime, startTime, finishTime, setupProgress, 0.0f, 0.0f,\n            cleanupProgress, remoteJobConfFile.toString(), amInfos);\n      }\n\n      return MRBuilderUtils.newJobReport(jobId, jobName, username, state,\n          appSubmitTime, startTime, finishTime, setupProgress,\n          computeProgress(mapTasks), computeProgress(reduceTasks),\n          cleanupProgress, remoteJobConfFile.toString(), amInfos);\n    } finally {\n      readLock.unlock();\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java",
      "extendedDetails": {}
    },
    "0b3c654d83c5e73fe946de194f3aea0a9fe06f5a": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2791. Added missing info on \u0027job -status\u0027 output. Contributed by Devaraj K.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1177487 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/09/11 8:08 PM",
      "commitName": "0b3c654d83c5e73fe946de194f3aea0a9fe06f5a",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "28/09/11 12:31 AM",
      "commitNameOld": "312a7e71001d55f88781e56b331ab1b40a72a980",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 1.82,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   public JobReport getReport() {\n     readLock.lock();\n     try {\n       JobState state \u003d getState();\n \n       if (getState() \u003d\u003d JobState.NEW) {\n         return MRBuilderUtils.newJobReport(jobId, jobName, username, state,\n             startTime, finishTime, setupProgress, 0.0f,\n-            0.0f, cleanupProgress);\n+            0.0f, cleanupProgress, remoteJobConfFile.toString());\n       }\n \n       return MRBuilderUtils.newJobReport(jobId, jobName, username, state,\n           startTime, finishTime, setupProgress, computeProgress(mapTasks),\n-          computeProgress(reduceTasks), cleanupProgress);\n+          computeProgress(reduceTasks), cleanupProgress, remoteJobConfFile.toString());\n     } finally {\n       readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public JobReport getReport() {\n    readLock.lock();\n    try {\n      JobState state \u003d getState();\n\n      if (getState() \u003d\u003d JobState.NEW) {\n        return MRBuilderUtils.newJobReport(jobId, jobName, username, state,\n            startTime, finishTime, setupProgress, 0.0f,\n            0.0f, cleanupProgress, remoteJobConfFile.toString());\n      }\n\n      return MRBuilderUtils.newJobReport(jobId, jobName, username, state,\n          startTime, finishTime, setupProgress, computeProgress(mapTasks),\n          computeProgress(reduceTasks), cleanupProgress, remoteJobConfFile.toString());\n    } finally {\n      readLock.unlock();\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java",
      "extendedDetails": {}
    },
    "312a7e71001d55f88781e56b331ab1b40a72a980": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3078. Ensure MapReduce AM reports progress correctly for displaying on the RM Web-UI. Contributed by Vinod K V. \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1176762 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/09/11 12:31 AM",
      "commitName": "312a7e71001d55f88781e56b331ab1b40a72a980",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "26/09/11 1:44 AM",
      "commitNameOld": "c9a7d3dbf902244902b636bf566154c09ecd1116",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 1.95,
      "commitsBetweenForRepo": 23,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,18 @@\n   public JobReport getReport() {\n     readLock.lock();\n     try {\n-      JobReport report \u003d recordFactory.newRecordInstance(JobReport.class);\n-      report.setJobId(jobId);\n-      report.setJobState(getState());\n-      \n-      // TODO - Fix to correctly setup report and to check state\n-      if (report.getJobState() \u003d\u003d JobState.NEW) {\n-        return report;\n-      }\n-      \n-      report.setStartTime(startTime);\n-      report.setFinishTime(finishTime);\n-      report.setSetupProgress(setupProgress);\n-      report.setCleanupProgress(cleanupProgress);\n-      report.setMapProgress(computeProgress(mapTasks));\n-      report.setReduceProgress(computeProgress(reduceTasks));\n-      report.setJobName(jobName);\n-      report.setUser(username);\n+      JobState state \u003d getState();\n \n-      return report;\n+      if (getState() \u003d\u003d JobState.NEW) {\n+        return MRBuilderUtils.newJobReport(jobId, jobName, username, state,\n+            startTime, finishTime, setupProgress, 0.0f,\n+            0.0f, cleanupProgress);\n+      }\n+\n+      return MRBuilderUtils.newJobReport(jobId, jobName, username, state,\n+          startTime, finishTime, setupProgress, computeProgress(mapTasks),\n+          computeProgress(reduceTasks), cleanupProgress);\n     } finally {\n       readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public JobReport getReport() {\n    readLock.lock();\n    try {\n      JobState state \u003d getState();\n\n      if (getState() \u003d\u003d JobState.NEW) {\n        return MRBuilderUtils.newJobReport(jobId, jobName, username, state,\n            startTime, finishTime, setupProgress, 0.0f,\n            0.0f, cleanupProgress);\n      }\n\n      return MRBuilderUtils.newJobReport(jobId, jobName, username, state,\n          startTime, finishTime, setupProgress, computeProgress(mapTasks),\n          computeProgress(reduceTasks), cleanupProgress);\n    } finally {\n      readLock.unlock();\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java",
      "extendedDetails": {}
    },
    "6bdf5746d5d677f9c17598768c4ae86384c000c6": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2716. MRReliabilityTest job fails because of missing job-file. Contributed by Jeffrey Naisbitt.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1164805 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/09/11 11:22 PM",
      "commitName": "6bdf5746d5d677f9c17598768c4ae86384c000c6",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "24/08/11 5:14 PM",
      "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 9.26,
      "commitsBetweenForRepo": 52,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,26 @@\n   public JobReport getReport() {\n     readLock.lock();\n     try {\n       JobReport report \u003d recordFactory.newRecordInstance(JobReport.class);\n       report.setJobId(jobId);\n       report.setJobState(getState());\n       \n       // TODO - Fix to correctly setup report and to check state\n       if (report.getJobState() \u003d\u003d JobState.NEW) {\n         return report;\n       }\n       \n       report.setStartTime(startTime);\n       report.setFinishTime(finishTime);\n       report.setSetupProgress(setupProgress);\n       report.setCleanupProgress(cleanupProgress);\n       report.setMapProgress(computeProgress(mapTasks));\n       report.setReduceProgress(computeProgress(reduceTasks));\n+      report.setJobName(jobName);\n+      report.setUser(username);\n \n       return report;\n     } finally {\n       readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public JobReport getReport() {\n    readLock.lock();\n    try {\n      JobReport report \u003d recordFactory.newRecordInstance(JobReport.class);\n      report.setJobId(jobId);\n      report.setJobState(getState());\n      \n      // TODO - Fix to correctly setup report and to check state\n      if (report.getJobState() \u003d\u003d JobState.NEW) {\n        return report;\n      }\n      \n      report.setStartTime(startTime);\n      report.setFinishTime(finishTime);\n      report.setSetupProgress(setupProgress);\n      report.setCleanupProgress(cleanupProgress);\n      report.setMapProgress(computeProgress(mapTasks));\n      report.setReduceProgress(computeProgress(reduceTasks));\n      report.setJobName(jobName);\n      report.setUser(username);\n\n      return report;\n    } finally {\n      readLock.unlock();\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public JobReport getReport() {\n    readLock.lock();\n    try {\n      JobReport report \u003d recordFactory.newRecordInstance(JobReport.class);\n      report.setJobId(jobId);\n      report.setJobState(getState());\n      \n      // TODO - Fix to correctly setup report and to check state\n      if (report.getJobState() \u003d\u003d JobState.NEW) {\n        return report;\n      }\n      \n      report.setStartTime(startTime);\n      report.setFinishTime(finishTime);\n      report.setSetupProgress(setupProgress);\n      report.setCleanupProgress(cleanupProgress);\n      report.setMapProgress(computeProgress(mapTasks));\n      report.setReduceProgress(computeProgress(reduceTasks));\n\n      return report;\n    } finally {\n      readLock.unlock();\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,24 @@\n+  public JobReport getReport() {\n+    readLock.lock();\n+    try {\n+      JobReport report \u003d recordFactory.newRecordInstance(JobReport.class);\n+      report.setJobId(jobId);\n+      report.setJobState(getState());\n+      \n+      // TODO - Fix to correctly setup report and to check state\n+      if (report.getJobState() \u003d\u003d JobState.NEW) {\n+        return report;\n+      }\n+      \n+      report.setStartTime(startTime);\n+      report.setFinishTime(finishTime);\n+      report.setSetupProgress(setupProgress);\n+      report.setCleanupProgress(cleanupProgress);\n+      report.setMapProgress(computeProgress(mapTasks));\n+      report.setReduceProgress(computeProgress(reduceTasks));\n+\n+      return report;\n+    } finally {\n+      readLock.unlock();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public JobReport getReport() {\n    readLock.lock();\n    try {\n      JobReport report \u003d recordFactory.newRecordInstance(JobReport.class);\n      report.setJobId(jobId);\n      report.setJobState(getState());\n      \n      // TODO - Fix to correctly setup report and to check state\n      if (report.getJobState() \u003d\u003d JobState.NEW) {\n        return report;\n      }\n      \n      report.setStartTime(startTime);\n      report.setFinishTime(finishTime);\n      report.setSetupProgress(setupProgress);\n      report.setCleanupProgress(cleanupProgress);\n      report.setMapProgress(computeProgress(mapTasks));\n      report.setReduceProgress(computeProgress(reduceTasks));\n\n      return report;\n    } finally {\n      readLock.unlock();\n    }\n  }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java"
    }
  }
}