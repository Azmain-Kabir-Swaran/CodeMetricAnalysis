{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CopyMapper.java",
  "functionName": "copyFileWithRetry",
  "functionId": "copyFileWithRetry___description-String__sourceFileStatus-CopyListingFileStatus__target-Path__targrtFileStatus-FileStatus__context-Context__action-FileAction__fileAttributes-EnumSet__FileAttribute____sourceStatus-FileStatus",
  "sourceFilePath": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/mapred/CopyMapper.java",
  "functionStartLine": 253,
  "functionEndLine": 280,
  "numCommitsSeen": 86,
  "timeTaken": 8214,
  "changeHistory": [
    "c757cb61ebc9e69d9f6f143da91189b9f0517ee9",
    "de804e53b9d20a2df75a4c7252bf83ed52011488",
    "63720ef574df6d79a9bab0628edb915d1e3a7c30",
    "a1a0281e12ea96476e75b076f76d5b5eb5254eea",
    "7e2c971fedd1195a51203ff12fdfdeb4642f2082",
    "fa5a54cac7e0f70ef28ebfe94aee95ffbbaf20e8",
    "8ef07f767f0421b006b0fc77e5daf36c7b06abf1",
    "3671a5e16fbddbe5a0516289ce98e1305e02291c",
    "e57843e02a846e5b3bb19c4bf9c3f61675d3e8ff",
    "d06948002fb0cabf72cc0d46bf2fa67d45370f67"
  ],
  "changeHistoryShort": {
    "c757cb61ebc9e69d9f6f143da91189b9f0517ee9": "Ymultichange(Yparameterchange,Ybodychange)",
    "de804e53b9d20a2df75a4c7252bf83ed52011488": "Ybodychange",
    "63720ef574df6d79a9bab0628edb915d1e3a7c30": "Ymultichange(Yparameterchange,Yexceptionschange,Ybodychange)",
    "a1a0281e12ea96476e75b076f76d5b5eb5254eea": "Yparameterchange",
    "7e2c971fedd1195a51203ff12fdfdeb4642f2082": "Ybodychange",
    "fa5a54cac7e0f70ef28ebfe94aee95ffbbaf20e8": "Ybodychange",
    "8ef07f767f0421b006b0fc77e5daf36c7b06abf1": "Ybodychange",
    "3671a5e16fbddbe5a0516289ce98e1305e02291c": "Ymultichange(Yparameterchange,Ybodychange)",
    "e57843e02a846e5b3bb19c4bf9c3f61675d3e8ff": "Ybodychange",
    "d06948002fb0cabf72cc0d46bf2fa67d45370f67": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c757cb61ebc9e69d9f6f143da91189b9f0517ee9": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-14254. Add a Distcp option to preserve Erasure Coding attributes. Contributed by Ayush Saxena.\n",
      "commitDate": "13/05/20 12:01 PM",
      "commitName": "c757cb61ebc9e69d9f6f143da91189b9f0517ee9",
      "commitAuthor": "Ayush Saxena",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-14254. Add a Distcp option to preserve Erasure Coding attributes. Contributed by Ayush Saxena.\n",
          "commitDate": "13/05/20 12:01 PM",
          "commitName": "c757cb61ebc9e69d9f6f143da91189b9f0517ee9",
          "commitAuthor": "Ayush Saxena",
          "commitDateOld": "24/09/19 3:23 AM",
          "commitNameOld": "51c64b357d4bd1a0038e61df3d4b8ea0a3ad7449",
          "commitAuthorOld": "Mukund Thakur",
          "daysBetweenCommits": 232.36,
          "commitsBetweenForRepo": 893,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,28 @@\n   private void copyFileWithRetry(String description,\n       CopyListingFileStatus sourceFileStatus, Path target,\n       FileStatus targrtFileStatus, Context context, FileAction action,\n-      EnumSet\u003cDistCpOptions.FileAttribute\u003e fileAttributes)\n+      EnumSet\u003cFileAttribute\u003e fileAttributes, FileStatus sourceStatus)\n       throws IOException, InterruptedException {\n     long bytesCopied;\n     try {\n       bytesCopied \u003d (Long) new RetriableFileCopyCommand(skipCrc, description,\n           action, directWrite).execute(sourceFileStatus, target, context,\n-              fileAttributes);\n+              fileAttributes, sourceStatus);\n     } catch (Exception e) {\n       context.setStatus(\"Copy Failure: \" + sourceFileStatus.getPath());\n       throw new IOException(\"File copy failed: \" + sourceFileStatus.getPath() +\n           \" --\u003e \" + target, e);\n     }\n     incrementCounter(context, Counter.BYTESEXPECTED, sourceFileStatus.getLen());\n     incrementCounter(context, Counter.BYTESCOPIED, bytesCopied);\n     incrementCounter(context, Counter.COPY, 1);\n     totalBytesCopied +\u003d bytesCopied;\n \n     if (verboseLog) {\n       context.write(null,\n           new Text(\"FILE_COPIED: source\u003d\" + sourceFileStatus.getPath() + \",\"\n           + \" size\u003d\" + sourceFileStatus.getLen() + \" --\u003e \"\n           + \"target\u003d\" + target + \", size\u003d\" + (targrtFileStatus \u003d\u003d null ?\n               0 : targrtFileStatus.getLen())));\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void copyFileWithRetry(String description,\n      CopyListingFileStatus sourceFileStatus, Path target,\n      FileStatus targrtFileStatus, Context context, FileAction action,\n      EnumSet\u003cFileAttribute\u003e fileAttributes, FileStatus sourceStatus)\n      throws IOException, InterruptedException {\n    long bytesCopied;\n    try {\n      bytesCopied \u003d (Long) new RetriableFileCopyCommand(skipCrc, description,\n          action, directWrite).execute(sourceFileStatus, target, context,\n              fileAttributes, sourceStatus);\n    } catch (Exception e) {\n      context.setStatus(\"Copy Failure: \" + sourceFileStatus.getPath());\n      throw new IOException(\"File copy failed: \" + sourceFileStatus.getPath() +\n          \" --\u003e \" + target, e);\n    }\n    incrementCounter(context, Counter.BYTESEXPECTED, sourceFileStatus.getLen());\n    incrementCounter(context, Counter.BYTESCOPIED, bytesCopied);\n    incrementCounter(context, Counter.COPY, 1);\n    totalBytesCopied +\u003d bytesCopied;\n\n    if (verboseLog) {\n      context.write(null,\n          new Text(\"FILE_COPIED: source\u003d\" + sourceFileStatus.getPath() + \",\"\n          + \" size\u003d\" + sourceFileStatus.getLen() + \" --\u003e \"\n          + \"target\u003d\" + target + \", size\u003d\" + (targrtFileStatus \u003d\u003d null ?\n              0 : targrtFileStatus.getLen())));\n    }\n  }",
          "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/mapred/CopyMapper.java",
          "extendedDetails": {
            "oldValue": "[description-String, sourceFileStatus-CopyListingFileStatus, target-Path, targrtFileStatus-FileStatus, context-Context, action-FileAction, fileAttributes-EnumSet\u003cDistCpOptions.FileAttribute\u003e]",
            "newValue": "[description-String, sourceFileStatus-CopyListingFileStatus, target-Path, targrtFileStatus-FileStatus, context-Context, action-FileAction, fileAttributes-EnumSet\u003cFileAttribute\u003e, sourceStatus-FileStatus]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-14254. Add a Distcp option to preserve Erasure Coding attributes. Contributed by Ayush Saxena.\n",
          "commitDate": "13/05/20 12:01 PM",
          "commitName": "c757cb61ebc9e69d9f6f143da91189b9f0517ee9",
          "commitAuthor": "Ayush Saxena",
          "commitDateOld": "24/09/19 3:23 AM",
          "commitNameOld": "51c64b357d4bd1a0038e61df3d4b8ea0a3ad7449",
          "commitAuthorOld": "Mukund Thakur",
          "daysBetweenCommits": 232.36,
          "commitsBetweenForRepo": 893,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,28 @@\n   private void copyFileWithRetry(String description,\n       CopyListingFileStatus sourceFileStatus, Path target,\n       FileStatus targrtFileStatus, Context context, FileAction action,\n-      EnumSet\u003cDistCpOptions.FileAttribute\u003e fileAttributes)\n+      EnumSet\u003cFileAttribute\u003e fileAttributes, FileStatus sourceStatus)\n       throws IOException, InterruptedException {\n     long bytesCopied;\n     try {\n       bytesCopied \u003d (Long) new RetriableFileCopyCommand(skipCrc, description,\n           action, directWrite).execute(sourceFileStatus, target, context,\n-              fileAttributes);\n+              fileAttributes, sourceStatus);\n     } catch (Exception e) {\n       context.setStatus(\"Copy Failure: \" + sourceFileStatus.getPath());\n       throw new IOException(\"File copy failed: \" + sourceFileStatus.getPath() +\n           \" --\u003e \" + target, e);\n     }\n     incrementCounter(context, Counter.BYTESEXPECTED, sourceFileStatus.getLen());\n     incrementCounter(context, Counter.BYTESCOPIED, bytesCopied);\n     incrementCounter(context, Counter.COPY, 1);\n     totalBytesCopied +\u003d bytesCopied;\n \n     if (verboseLog) {\n       context.write(null,\n           new Text(\"FILE_COPIED: source\u003d\" + sourceFileStatus.getPath() + \",\"\n           + \" size\u003d\" + sourceFileStatus.getLen() + \" --\u003e \"\n           + \"target\u003d\" + target + \", size\u003d\" + (targrtFileStatus \u003d\u003d null ?\n               0 : targrtFileStatus.getLen())));\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void copyFileWithRetry(String description,\n      CopyListingFileStatus sourceFileStatus, Path target,\n      FileStatus targrtFileStatus, Context context, FileAction action,\n      EnumSet\u003cFileAttribute\u003e fileAttributes, FileStatus sourceStatus)\n      throws IOException, InterruptedException {\n    long bytesCopied;\n    try {\n      bytesCopied \u003d (Long) new RetriableFileCopyCommand(skipCrc, description,\n          action, directWrite).execute(sourceFileStatus, target, context,\n              fileAttributes, sourceStatus);\n    } catch (Exception e) {\n      context.setStatus(\"Copy Failure: \" + sourceFileStatus.getPath());\n      throw new IOException(\"File copy failed: \" + sourceFileStatus.getPath() +\n          \" --\u003e \" + target, e);\n    }\n    incrementCounter(context, Counter.BYTESEXPECTED, sourceFileStatus.getLen());\n    incrementCounter(context, Counter.BYTESCOPIED, bytesCopied);\n    incrementCounter(context, Counter.COPY, 1);\n    totalBytesCopied +\u003d bytesCopied;\n\n    if (verboseLog) {\n      context.write(null,\n          new Text(\"FILE_COPIED: source\u003d\" + sourceFileStatus.getPath() + \",\"\n          + \" size\u003d\" + sourceFileStatus.getLen() + \" --\u003e \"\n          + \"target\u003d\" + target + \", size\u003d\" + (targrtFileStatus \u003d\u003d null ?\n              0 : targrtFileStatus.getLen())));\n    }\n  }",
          "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/mapred/CopyMapper.java",
          "extendedDetails": {}
        }
      ]
    },
    "de804e53b9d20a2df75a4c7252bf83ed52011488": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15281. Distcp to add no-rename copy option.\n\nContributed by Andrew Olson.\n",
      "commitDate": "07/02/19 2:07 AM",
      "commitName": "de804e53b9d20a2df75a4c7252bf83ed52011488",
      "commitAuthor": "Andrew Olson",
      "commitDateOld": "15/08/18 8:31 AM",
      "commitNameOld": "3e3963b035911703c61e6d9a2939eb894da5644c",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 175.77,
      "commitsBetweenForRepo": 1362,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,28 @@\n   private void copyFileWithRetry(String description,\n       CopyListingFileStatus sourceFileStatus, Path target,\n       FileStatus targrtFileStatus, Context context, FileAction action,\n       EnumSet\u003cDistCpOptions.FileAttribute\u003e fileAttributes)\n       throws IOException, InterruptedException {\n     long bytesCopied;\n     try {\n       bytesCopied \u003d (Long) new RetriableFileCopyCommand(skipCrc, description,\n-          action).execute(sourceFileStatus, target, context, fileAttributes);\n+          action, directWrite).execute(sourceFileStatus, target, context,\n+              fileAttributes);\n     } catch (Exception e) {\n       context.setStatus(\"Copy Failure: \" + sourceFileStatus.getPath());\n       throw new IOException(\"File copy failed: \" + sourceFileStatus.getPath() +\n           \" --\u003e \" + target, e);\n     }\n     incrementCounter(context, Counter.BYTESEXPECTED, sourceFileStatus.getLen());\n     incrementCounter(context, Counter.BYTESCOPIED, bytesCopied);\n     incrementCounter(context, Counter.COPY, 1);\n     totalBytesCopied +\u003d bytesCopied;\n \n     if (verboseLog) {\n       context.write(null,\n           new Text(\"FILE_COPIED: source\u003d\" + sourceFileStatus.getPath() + \",\"\n           + \" size\u003d\" + sourceFileStatus.getLen() + \" --\u003e \"\n           + \"target\u003d\" + target + \", size\u003d\" + (targrtFileStatus \u003d\u003d null ?\n               0 : targrtFileStatus.getLen())));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void copyFileWithRetry(String description,\n      CopyListingFileStatus sourceFileStatus, Path target,\n      FileStatus targrtFileStatus, Context context, FileAction action,\n      EnumSet\u003cDistCpOptions.FileAttribute\u003e fileAttributes)\n      throws IOException, InterruptedException {\n    long bytesCopied;\n    try {\n      bytesCopied \u003d (Long) new RetriableFileCopyCommand(skipCrc, description,\n          action, directWrite).execute(sourceFileStatus, target, context,\n              fileAttributes);\n    } catch (Exception e) {\n      context.setStatus(\"Copy Failure: \" + sourceFileStatus.getPath());\n      throw new IOException(\"File copy failed: \" + sourceFileStatus.getPath() +\n          \" --\u003e \" + target, e);\n    }\n    incrementCounter(context, Counter.BYTESEXPECTED, sourceFileStatus.getLen());\n    incrementCounter(context, Counter.BYTESCOPIED, bytesCopied);\n    incrementCounter(context, Counter.COPY, 1);\n    totalBytesCopied +\u003d bytesCopied;\n\n    if (verboseLog) {\n      context.write(null,\n          new Text(\"FILE_COPIED: source\u003d\" + sourceFileStatus.getPath() + \",\"\n          + \" size\u003d\" + sourceFileStatus.getLen() + \" --\u003e \"\n          + \"target\u003d\" + target + \", size\u003d\" + (targrtFileStatus \u003d\u003d null ?\n              0 : targrtFileStatus.getLen())));\n    }\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/mapred/CopyMapper.java",
      "extendedDetails": {}
    },
    "63720ef574df6d79a9bab0628edb915d1e3a7c30": {
      "type": "Ymultichange(Yparameterchange,Yexceptionschange,Ybodychange)",
      "commitMessage": "HADOOP-14839. DistCp log output should contain copied and deleted files and directories. Contributed by Yiqun Lin.\n",
      "commitDate": "05/09/17 11:34 PM",
      "commitName": "63720ef574df6d79a9bab0628edb915d1e3a7c30",
      "commitAuthor": "Xiaoyu Yao",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-14839. DistCp log output should contain copied and deleted files and directories. Contributed by Yiqun Lin.\n",
          "commitDate": "05/09/17 11:34 PM",
          "commitName": "63720ef574df6d79a9bab0628edb915d1e3a7c30",
          "commitAuthor": "Xiaoyu Yao",
          "commitDateOld": "30/03/17 5:38 PM",
          "commitNameOld": "bf3fb585aaf2b179836e139c041fc87920a3c886",
          "commitAuthorOld": "Yongjun Zhang",
          "daysBetweenCommits": 159.25,
          "commitsBetweenForRepo": 958,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,27 @@\n   private void copyFileWithRetry(String description,\n-      CopyListingFileStatus sourceFileStatus, Path target, Context context,\n-      FileAction action, EnumSet\u003cDistCpOptions.FileAttribute\u003e fileAttributes)\n-      throws IOException {\n+      CopyListingFileStatus sourceFileStatus, Path target,\n+      FileStatus targrtFileStatus, Context context, FileAction action,\n+      EnumSet\u003cDistCpOptions.FileAttribute\u003e fileAttributes)\n+      throws IOException, InterruptedException {\n     long bytesCopied;\n     try {\n       bytesCopied \u003d (Long) new RetriableFileCopyCommand(skipCrc, description,\n           action).execute(sourceFileStatus, target, context, fileAttributes);\n     } catch (Exception e) {\n       context.setStatus(\"Copy Failure: \" + sourceFileStatus.getPath());\n       throw new IOException(\"File copy failed: \" + sourceFileStatus.getPath() +\n           \" --\u003e \" + target, e);\n     }\n     incrementCounter(context, Counter.BYTESEXPECTED, sourceFileStatus.getLen());\n     incrementCounter(context, Counter.BYTESCOPIED, bytesCopied);\n     incrementCounter(context, Counter.COPY, 1);\n     totalBytesCopied +\u003d bytesCopied;\n+\n+    if (verboseLog) {\n+      context.write(null,\n+          new Text(\"FILE_COPIED: source\u003d\" + sourceFileStatus.getPath() + \",\"\n+          + \" size\u003d\" + sourceFileStatus.getLen() + \" --\u003e \"\n+          + \"target\u003d\" + target + \", size\u003d\" + (targrtFileStatus \u003d\u003d null ?\n+              0 : targrtFileStatus.getLen())));\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void copyFileWithRetry(String description,\n      CopyListingFileStatus sourceFileStatus, Path target,\n      FileStatus targrtFileStatus, Context context, FileAction action,\n      EnumSet\u003cDistCpOptions.FileAttribute\u003e fileAttributes)\n      throws IOException, InterruptedException {\n    long bytesCopied;\n    try {\n      bytesCopied \u003d (Long) new RetriableFileCopyCommand(skipCrc, description,\n          action).execute(sourceFileStatus, target, context, fileAttributes);\n    } catch (Exception e) {\n      context.setStatus(\"Copy Failure: \" + sourceFileStatus.getPath());\n      throw new IOException(\"File copy failed: \" + sourceFileStatus.getPath() +\n          \" --\u003e \" + target, e);\n    }\n    incrementCounter(context, Counter.BYTESEXPECTED, sourceFileStatus.getLen());\n    incrementCounter(context, Counter.BYTESCOPIED, bytesCopied);\n    incrementCounter(context, Counter.COPY, 1);\n    totalBytesCopied +\u003d bytesCopied;\n\n    if (verboseLog) {\n      context.write(null,\n          new Text(\"FILE_COPIED: source\u003d\" + sourceFileStatus.getPath() + \",\"\n          + \" size\u003d\" + sourceFileStatus.getLen() + \" --\u003e \"\n          + \"target\u003d\" + target + \", size\u003d\" + (targrtFileStatus \u003d\u003d null ?\n              0 : targrtFileStatus.getLen())));\n    }\n  }",
          "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/mapred/CopyMapper.java",
          "extendedDetails": {
            "oldValue": "[description-String, sourceFileStatus-CopyListingFileStatus, target-Path, context-Context, action-FileAction, fileAttributes-EnumSet\u003cDistCpOptions.FileAttribute\u003e]",
            "newValue": "[description-String, sourceFileStatus-CopyListingFileStatus, target-Path, targrtFileStatus-FileStatus, context-Context, action-FileAction, fileAttributes-EnumSet\u003cDistCpOptions.FileAttribute\u003e]"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "HADOOP-14839. DistCp log output should contain copied and deleted files and directories. Contributed by Yiqun Lin.\n",
          "commitDate": "05/09/17 11:34 PM",
          "commitName": "63720ef574df6d79a9bab0628edb915d1e3a7c30",
          "commitAuthor": "Xiaoyu Yao",
          "commitDateOld": "30/03/17 5:38 PM",
          "commitNameOld": "bf3fb585aaf2b179836e139c041fc87920a3c886",
          "commitAuthorOld": "Yongjun Zhang",
          "daysBetweenCommits": 159.25,
          "commitsBetweenForRepo": 958,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,27 @@\n   private void copyFileWithRetry(String description,\n-      CopyListingFileStatus sourceFileStatus, Path target, Context context,\n-      FileAction action, EnumSet\u003cDistCpOptions.FileAttribute\u003e fileAttributes)\n-      throws IOException {\n+      CopyListingFileStatus sourceFileStatus, Path target,\n+      FileStatus targrtFileStatus, Context context, FileAction action,\n+      EnumSet\u003cDistCpOptions.FileAttribute\u003e fileAttributes)\n+      throws IOException, InterruptedException {\n     long bytesCopied;\n     try {\n       bytesCopied \u003d (Long) new RetriableFileCopyCommand(skipCrc, description,\n           action).execute(sourceFileStatus, target, context, fileAttributes);\n     } catch (Exception e) {\n       context.setStatus(\"Copy Failure: \" + sourceFileStatus.getPath());\n       throw new IOException(\"File copy failed: \" + sourceFileStatus.getPath() +\n           \" --\u003e \" + target, e);\n     }\n     incrementCounter(context, Counter.BYTESEXPECTED, sourceFileStatus.getLen());\n     incrementCounter(context, Counter.BYTESCOPIED, bytesCopied);\n     incrementCounter(context, Counter.COPY, 1);\n     totalBytesCopied +\u003d bytesCopied;\n+\n+    if (verboseLog) {\n+      context.write(null,\n+          new Text(\"FILE_COPIED: source\u003d\" + sourceFileStatus.getPath() + \",\"\n+          + \" size\u003d\" + sourceFileStatus.getLen() + \" --\u003e \"\n+          + \"target\u003d\" + target + \", size\u003d\" + (targrtFileStatus \u003d\u003d null ?\n+              0 : targrtFileStatus.getLen())));\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void copyFileWithRetry(String description,\n      CopyListingFileStatus sourceFileStatus, Path target,\n      FileStatus targrtFileStatus, Context context, FileAction action,\n      EnumSet\u003cDistCpOptions.FileAttribute\u003e fileAttributes)\n      throws IOException, InterruptedException {\n    long bytesCopied;\n    try {\n      bytesCopied \u003d (Long) new RetriableFileCopyCommand(skipCrc, description,\n          action).execute(sourceFileStatus, target, context, fileAttributes);\n    } catch (Exception e) {\n      context.setStatus(\"Copy Failure: \" + sourceFileStatus.getPath());\n      throw new IOException(\"File copy failed: \" + sourceFileStatus.getPath() +\n          \" --\u003e \" + target, e);\n    }\n    incrementCounter(context, Counter.BYTESEXPECTED, sourceFileStatus.getLen());\n    incrementCounter(context, Counter.BYTESCOPIED, bytesCopied);\n    incrementCounter(context, Counter.COPY, 1);\n    totalBytesCopied +\u003d bytesCopied;\n\n    if (verboseLog) {\n      context.write(null,\n          new Text(\"FILE_COPIED: source\u003d\" + sourceFileStatus.getPath() + \",\"\n          + \" size\u003d\" + sourceFileStatus.getLen() + \" --\u003e \"\n          + \"target\u003d\" + target + \", size\u003d\" + (targrtFileStatus \u003d\u003d null ?\n              0 : targrtFileStatus.getLen())));\n    }\n  }",
          "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/mapred/CopyMapper.java",
          "extendedDetails": {
            "oldValue": "[IOException]",
            "newValue": "[IOException, InterruptedException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-14839. DistCp log output should contain copied and deleted files and directories. Contributed by Yiqun Lin.\n",
          "commitDate": "05/09/17 11:34 PM",
          "commitName": "63720ef574df6d79a9bab0628edb915d1e3a7c30",
          "commitAuthor": "Xiaoyu Yao",
          "commitDateOld": "30/03/17 5:38 PM",
          "commitNameOld": "bf3fb585aaf2b179836e139c041fc87920a3c886",
          "commitAuthorOld": "Yongjun Zhang",
          "daysBetweenCommits": 159.25,
          "commitsBetweenForRepo": 958,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,27 @@\n   private void copyFileWithRetry(String description,\n-      CopyListingFileStatus sourceFileStatus, Path target, Context context,\n-      FileAction action, EnumSet\u003cDistCpOptions.FileAttribute\u003e fileAttributes)\n-      throws IOException {\n+      CopyListingFileStatus sourceFileStatus, Path target,\n+      FileStatus targrtFileStatus, Context context, FileAction action,\n+      EnumSet\u003cDistCpOptions.FileAttribute\u003e fileAttributes)\n+      throws IOException, InterruptedException {\n     long bytesCopied;\n     try {\n       bytesCopied \u003d (Long) new RetriableFileCopyCommand(skipCrc, description,\n           action).execute(sourceFileStatus, target, context, fileAttributes);\n     } catch (Exception e) {\n       context.setStatus(\"Copy Failure: \" + sourceFileStatus.getPath());\n       throw new IOException(\"File copy failed: \" + sourceFileStatus.getPath() +\n           \" --\u003e \" + target, e);\n     }\n     incrementCounter(context, Counter.BYTESEXPECTED, sourceFileStatus.getLen());\n     incrementCounter(context, Counter.BYTESCOPIED, bytesCopied);\n     incrementCounter(context, Counter.COPY, 1);\n     totalBytesCopied +\u003d bytesCopied;\n+\n+    if (verboseLog) {\n+      context.write(null,\n+          new Text(\"FILE_COPIED: source\u003d\" + sourceFileStatus.getPath() + \",\"\n+          + \" size\u003d\" + sourceFileStatus.getLen() + \" --\u003e \"\n+          + \"target\u003d\" + target + \", size\u003d\" + (targrtFileStatus \u003d\u003d null ?\n+              0 : targrtFileStatus.getLen())));\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void copyFileWithRetry(String description,\n      CopyListingFileStatus sourceFileStatus, Path target,\n      FileStatus targrtFileStatus, Context context, FileAction action,\n      EnumSet\u003cDistCpOptions.FileAttribute\u003e fileAttributes)\n      throws IOException, InterruptedException {\n    long bytesCopied;\n    try {\n      bytesCopied \u003d (Long) new RetriableFileCopyCommand(skipCrc, description,\n          action).execute(sourceFileStatus, target, context, fileAttributes);\n    } catch (Exception e) {\n      context.setStatus(\"Copy Failure: \" + sourceFileStatus.getPath());\n      throw new IOException(\"File copy failed: \" + sourceFileStatus.getPath() +\n          \" --\u003e \" + target, e);\n    }\n    incrementCounter(context, Counter.BYTESEXPECTED, sourceFileStatus.getLen());\n    incrementCounter(context, Counter.BYTESCOPIED, bytesCopied);\n    incrementCounter(context, Counter.COPY, 1);\n    totalBytesCopied +\u003d bytesCopied;\n\n    if (verboseLog) {\n      context.write(null,\n          new Text(\"FILE_COPIED: source\u003d\" + sourceFileStatus.getPath() + \",\"\n          + \" size\u003d\" + sourceFileStatus.getLen() + \" --\u003e \"\n          + \"target\u003d\" + target + \", size\u003d\" + (targrtFileStatus \u003d\u003d null ?\n              0 : targrtFileStatus.getLen())));\n    }\n  }",
          "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/mapred/CopyMapper.java",
          "extendedDetails": {}
        }
      ]
    },
    "a1a0281e12ea96476e75b076f76d5b5eb5254eea": {
      "type": "Yparameterchange",
      "commitMessage": "HADOOP-13626. Remove distcp dependency on FileStatus serialization\n",
      "commitDate": "24/10/16 12:46 PM",
      "commitName": "a1a0281e12ea96476e75b076f76d5b5eb5254eea",
      "commitAuthor": "Chris Douglas",
      "commitDateOld": "17/05/16 5:00 AM",
      "commitNameOld": "c69a649257a331da55c1a1bf61c819e289015a6b",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 160.32,
      "commitsBetweenForRepo": 1196,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   private void copyFileWithRetry(String description,\n-      FileStatus sourceFileStatus, Path target, Context context,\n+      CopyListingFileStatus sourceFileStatus, Path target, Context context,\n       FileAction action, EnumSet\u003cDistCpOptions.FileAttribute\u003e fileAttributes)\n       throws IOException {\n     long bytesCopied;\n     try {\n       bytesCopied \u003d (Long) new RetriableFileCopyCommand(skipCrc, description,\n           action).execute(sourceFileStatus, target, context, fileAttributes);\n     } catch (Exception e) {\n       context.setStatus(\"Copy Failure: \" + sourceFileStatus.getPath());\n       throw new IOException(\"File copy failed: \" + sourceFileStatus.getPath() +\n           \" --\u003e \" + target, e);\n     }\n     incrementCounter(context, Counter.BYTESEXPECTED, sourceFileStatus.getLen());\n     incrementCounter(context, Counter.BYTESCOPIED, bytesCopied);\n     incrementCounter(context, Counter.COPY, 1);\n     totalBytesCopied +\u003d bytesCopied;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void copyFileWithRetry(String description,\n      CopyListingFileStatus sourceFileStatus, Path target, Context context,\n      FileAction action, EnumSet\u003cDistCpOptions.FileAttribute\u003e fileAttributes)\n      throws IOException {\n    long bytesCopied;\n    try {\n      bytesCopied \u003d (Long) new RetriableFileCopyCommand(skipCrc, description,\n          action).execute(sourceFileStatus, target, context, fileAttributes);\n    } catch (Exception e) {\n      context.setStatus(\"Copy Failure: \" + sourceFileStatus.getPath());\n      throw new IOException(\"File copy failed: \" + sourceFileStatus.getPath() +\n          \" --\u003e \" + target, e);\n    }\n    incrementCounter(context, Counter.BYTESEXPECTED, sourceFileStatus.getLen());\n    incrementCounter(context, Counter.BYTESCOPIED, bytesCopied);\n    incrementCounter(context, Counter.COPY, 1);\n    totalBytesCopied +\u003d bytesCopied;\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/mapred/CopyMapper.java",
      "extendedDetails": {
        "oldValue": "[description-String, sourceFileStatus-FileStatus, target-Path, context-Context, action-FileAction, fileAttributes-EnumSet\u003cDistCpOptions.FileAttribute\u003e]",
        "newValue": "[description-String, sourceFileStatus-CopyListingFileStatus, target-Path, context-Context, action-FileAction, fileAttributes-EnumSet\u003cDistCpOptions.FileAttribute\u003e]"
      }
    },
    "7e2c971fedd1195a51203ff12fdfdeb4642f2082": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"HADOOP-12469. distcp shout not ignore the ignoreFailures option. Contributed by Mingliang Liu.\"\n\nThis reverts commit fa5a54cac7e0f70ef28ebfe94aee95ffbbaf20e8.\n",
      "commitDate": "10/10/15 3:24 AM",
      "commitName": "7e2c971fedd1195a51203ff12fdfdeb4642f2082",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "09/10/15 10:38 PM",
      "commitNameOld": "fa5a54cac7e0f70ef28ebfe94aee95ffbbaf20e8",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 0.2,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   private void copyFileWithRetry(String description,\n       FileStatus sourceFileStatus, Path target, Context context,\n       FileAction action, EnumSet\u003cDistCpOptions.FileAttribute\u003e fileAttributes)\n       throws IOException {\n     long bytesCopied;\n     try {\n       bytesCopied \u003d (Long) new RetriableFileCopyCommand(skipCrc, description,\n           action).execute(sourceFileStatus, target, context, fileAttributes);\n     } catch (Exception e) {\n       context.setStatus(\"Copy Failure: \" + sourceFileStatus.getPath());\n       throw new IOException(\"File copy failed: \" + sourceFileStatus.getPath() +\n-          \" --\u003e \" + target, e.getCause());\n+          \" --\u003e \" + target, e);\n     }\n     incrementCounter(context, Counter.BYTESEXPECTED, sourceFileStatus.getLen());\n     incrementCounter(context, Counter.BYTESCOPIED, bytesCopied);\n     incrementCounter(context, Counter.COPY, 1);\n     totalBytesCopied +\u003d bytesCopied;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void copyFileWithRetry(String description,\n      FileStatus sourceFileStatus, Path target, Context context,\n      FileAction action, EnumSet\u003cDistCpOptions.FileAttribute\u003e fileAttributes)\n      throws IOException {\n    long bytesCopied;\n    try {\n      bytesCopied \u003d (Long) new RetriableFileCopyCommand(skipCrc, description,\n          action).execute(sourceFileStatus, target, context, fileAttributes);\n    } catch (Exception e) {\n      context.setStatus(\"Copy Failure: \" + sourceFileStatus.getPath());\n      throw new IOException(\"File copy failed: \" + sourceFileStatus.getPath() +\n          \" --\u003e \" + target, e);\n    }\n    incrementCounter(context, Counter.BYTESEXPECTED, sourceFileStatus.getLen());\n    incrementCounter(context, Counter.BYTESCOPIED, bytesCopied);\n    incrementCounter(context, Counter.COPY, 1);\n    totalBytesCopied +\u003d bytesCopied;\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/mapred/CopyMapper.java",
      "extendedDetails": {}
    },
    "fa5a54cac7e0f70ef28ebfe94aee95ffbbaf20e8": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12469. distcp shout not ignore the ignoreFailures option. Contributed by Mingliang Liu.\n",
      "commitDate": "09/10/15 10:38 PM",
      "commitName": "fa5a54cac7e0f70ef28ebfe94aee95ffbbaf20e8",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "25/06/15 9:22 PM",
      "commitNameOld": "8ef07f767f0421b006b0fc77e5daf36c7b06abf1",
      "commitAuthorOld": "Amareshwari Sriramadasu",
      "daysBetweenCommits": 106.05,
      "commitsBetweenForRepo": 697,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   private void copyFileWithRetry(String description,\n       FileStatus sourceFileStatus, Path target, Context context,\n       FileAction action, EnumSet\u003cDistCpOptions.FileAttribute\u003e fileAttributes)\n       throws IOException {\n     long bytesCopied;\n     try {\n       bytesCopied \u003d (Long) new RetriableFileCopyCommand(skipCrc, description,\n           action).execute(sourceFileStatus, target, context, fileAttributes);\n     } catch (Exception e) {\n       context.setStatus(\"Copy Failure: \" + sourceFileStatus.getPath());\n       throw new IOException(\"File copy failed: \" + sourceFileStatus.getPath() +\n-          \" --\u003e \" + target, e);\n+          \" --\u003e \" + target, e.getCause());\n     }\n     incrementCounter(context, Counter.BYTESEXPECTED, sourceFileStatus.getLen());\n     incrementCounter(context, Counter.BYTESCOPIED, bytesCopied);\n     incrementCounter(context, Counter.COPY, 1);\n     totalBytesCopied +\u003d bytesCopied;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void copyFileWithRetry(String description,\n      FileStatus sourceFileStatus, Path target, Context context,\n      FileAction action, EnumSet\u003cDistCpOptions.FileAttribute\u003e fileAttributes)\n      throws IOException {\n    long bytesCopied;\n    try {\n      bytesCopied \u003d (Long) new RetriableFileCopyCommand(skipCrc, description,\n          action).execute(sourceFileStatus, target, context, fileAttributes);\n    } catch (Exception e) {\n      context.setStatus(\"Copy Failure: \" + sourceFileStatus.getPath());\n      throw new IOException(\"File copy failed: \" + sourceFileStatus.getPath() +\n          \" --\u003e \" + target, e.getCause());\n    }\n    incrementCounter(context, Counter.BYTESEXPECTED, sourceFileStatus.getLen());\n    incrementCounter(context, Counter.BYTESCOPIED, bytesCopied);\n    incrementCounter(context, Counter.COPY, 1);\n    totalBytesCopied +\u003d bytesCopied;\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/mapred/CopyMapper.java",
      "extendedDetails": {}
    },
    "8ef07f767f0421b006b0fc77e5daf36c7b06abf1": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11203. Allow ditscp to accept bandwitdh in fraction MegaBytes. Contributed by Raju Bairishetti\n",
      "commitDate": "25/06/15 9:22 PM",
      "commitName": "8ef07f767f0421b006b0fc77e5daf36c7b06abf1",
      "commitAuthor": "Amareshwari Sriramadasu",
      "commitDateOld": "03/03/15 1:06 AM",
      "commitNameOld": "9ae7f9eb7baeb244e1b95aabc93ad8124870b9a9",
      "commitAuthorOld": "Tsuyoshi Ozawa",
      "daysBetweenCommits": 114.8,
      "commitsBetweenForRepo": 1014,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,18 @@\n   private void copyFileWithRetry(String description,\n       FileStatus sourceFileStatus, Path target, Context context,\n       FileAction action, EnumSet\u003cDistCpOptions.FileAttribute\u003e fileAttributes)\n       throws IOException {\n     long bytesCopied;\n     try {\n       bytesCopied \u003d (Long) new RetriableFileCopyCommand(skipCrc, description,\n           action).execute(sourceFileStatus, target, context, fileAttributes);\n     } catch (Exception e) {\n       context.setStatus(\"Copy Failure: \" + sourceFileStatus.getPath());\n       throw new IOException(\"File copy failed: \" + sourceFileStatus.getPath() +\n           \" --\u003e \" + target, e);\n     }\n     incrementCounter(context, Counter.BYTESEXPECTED, sourceFileStatus.getLen());\n     incrementCounter(context, Counter.BYTESCOPIED, bytesCopied);\n     incrementCounter(context, Counter.COPY, 1);\n+    totalBytesCopied +\u003d bytesCopied;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void copyFileWithRetry(String description,\n      FileStatus sourceFileStatus, Path target, Context context,\n      FileAction action, EnumSet\u003cDistCpOptions.FileAttribute\u003e fileAttributes)\n      throws IOException {\n    long bytesCopied;\n    try {\n      bytesCopied \u003d (Long) new RetriableFileCopyCommand(skipCrc, description,\n          action).execute(sourceFileStatus, target, context, fileAttributes);\n    } catch (Exception e) {\n      context.setStatus(\"Copy Failure: \" + sourceFileStatus.getPath());\n      throw new IOException(\"File copy failed: \" + sourceFileStatus.getPath() +\n          \" --\u003e \" + target, e);\n    }\n    incrementCounter(context, Counter.BYTESEXPECTED, sourceFileStatus.getLen());\n    incrementCounter(context, Counter.BYTESCOPIED, bytesCopied);\n    incrementCounter(context, Counter.COPY, 1);\n    totalBytesCopied +\u003d bytesCopied;\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/mapred/CopyMapper.java",
      "extendedDetails": {}
    },
    "3671a5e16fbddbe5a0516289ce98e1305e02291c": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "MAPREDUCE-5899. Support incremental data copy in DistCp. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1596931 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/05/14 11:17 AM",
      "commitName": "3671a5e16fbddbe5a0516289ce98e1305e02291c",
      "commitAuthor": "Jing Zhao",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "MAPREDUCE-5899. Support incremental data copy in DistCp. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1596931 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/05/14 11:17 AM",
          "commitName": "3671a5e16fbddbe5a0516289ce98e1305e02291c",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "16/05/14 11:25 AM",
          "commitNameOld": "11be7334c4e04b1b3fe12d86f4646cc83c068b05",
          "commitAuthorOld": "Chris Nauroth",
          "daysBetweenCommits": 5.99,
          "commitsBetweenForRepo": 31,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n-  private void copyFileWithRetry(String description, FileStatus sourceFileStatus,\n-               Path target, Context context,\n-               EnumSet\u003cDistCpOptions.FileAttribute\u003e fileAttributes) throws IOException {\n-\n+  private void copyFileWithRetry(String description,\n+      FileStatus sourceFileStatus, Path target, Context context,\n+      FileAction action, EnumSet\u003cDistCpOptions.FileAttribute\u003e fileAttributes)\n+      throws IOException {\n     long bytesCopied;\n     try {\n-      bytesCopied \u003d (Long)new RetriableFileCopyCommand(skipCrc, description)\n-                       .execute(sourceFileStatus, target, context, fileAttributes);\n+      bytesCopied \u003d (Long) new RetriableFileCopyCommand(skipCrc, description,\n+          action).execute(sourceFileStatus, target, context, fileAttributes);\n     } catch (Exception e) {\n       context.setStatus(\"Copy Failure: \" + sourceFileStatus.getPath());\n       throw new IOException(\"File copy failed: \" + sourceFileStatus.getPath() +\n           \" --\u003e \" + target, e);\n     }\n     incrementCounter(context, Counter.BYTESEXPECTED, sourceFileStatus.getLen());\n     incrementCounter(context, Counter.BYTESCOPIED, bytesCopied);\n     incrementCounter(context, Counter.COPY, 1);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void copyFileWithRetry(String description,\n      FileStatus sourceFileStatus, Path target, Context context,\n      FileAction action, EnumSet\u003cDistCpOptions.FileAttribute\u003e fileAttributes)\n      throws IOException {\n    long bytesCopied;\n    try {\n      bytesCopied \u003d (Long) new RetriableFileCopyCommand(skipCrc, description,\n          action).execute(sourceFileStatus, target, context, fileAttributes);\n    } catch (Exception e) {\n      context.setStatus(\"Copy Failure: \" + sourceFileStatus.getPath());\n      throw new IOException(\"File copy failed: \" + sourceFileStatus.getPath() +\n          \" --\u003e \" + target, e);\n    }\n    incrementCounter(context, Counter.BYTESEXPECTED, sourceFileStatus.getLen());\n    incrementCounter(context, Counter.BYTESCOPIED, bytesCopied);\n    incrementCounter(context, Counter.COPY, 1);\n  }",
          "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/mapred/CopyMapper.java",
          "extendedDetails": {
            "oldValue": "[description-String, sourceFileStatus-FileStatus, target-Path, context-Context, fileAttributes-EnumSet\u003cDistCpOptions.FileAttribute\u003e]",
            "newValue": "[description-String, sourceFileStatus-FileStatus, target-Path, context-Context, action-FileAction, fileAttributes-EnumSet\u003cDistCpOptions.FileAttribute\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-5899. Support incremental data copy in DistCp. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1596931 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/05/14 11:17 AM",
          "commitName": "3671a5e16fbddbe5a0516289ce98e1305e02291c",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "16/05/14 11:25 AM",
          "commitNameOld": "11be7334c4e04b1b3fe12d86f4646cc83c068b05",
          "commitAuthorOld": "Chris Nauroth",
          "daysBetweenCommits": 5.99,
          "commitsBetweenForRepo": 31,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n-  private void copyFileWithRetry(String description, FileStatus sourceFileStatus,\n-               Path target, Context context,\n-               EnumSet\u003cDistCpOptions.FileAttribute\u003e fileAttributes) throws IOException {\n-\n+  private void copyFileWithRetry(String description,\n+      FileStatus sourceFileStatus, Path target, Context context,\n+      FileAction action, EnumSet\u003cDistCpOptions.FileAttribute\u003e fileAttributes)\n+      throws IOException {\n     long bytesCopied;\n     try {\n-      bytesCopied \u003d (Long)new RetriableFileCopyCommand(skipCrc, description)\n-                       .execute(sourceFileStatus, target, context, fileAttributes);\n+      bytesCopied \u003d (Long) new RetriableFileCopyCommand(skipCrc, description,\n+          action).execute(sourceFileStatus, target, context, fileAttributes);\n     } catch (Exception e) {\n       context.setStatus(\"Copy Failure: \" + sourceFileStatus.getPath());\n       throw new IOException(\"File copy failed: \" + sourceFileStatus.getPath() +\n           \" --\u003e \" + target, e);\n     }\n     incrementCounter(context, Counter.BYTESEXPECTED, sourceFileStatus.getLen());\n     incrementCounter(context, Counter.BYTESCOPIED, bytesCopied);\n     incrementCounter(context, Counter.COPY, 1);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void copyFileWithRetry(String description,\n      FileStatus sourceFileStatus, Path target, Context context,\n      FileAction action, EnumSet\u003cDistCpOptions.FileAttribute\u003e fileAttributes)\n      throws IOException {\n    long bytesCopied;\n    try {\n      bytesCopied \u003d (Long) new RetriableFileCopyCommand(skipCrc, description,\n          action).execute(sourceFileStatus, target, context, fileAttributes);\n    } catch (Exception e) {\n      context.setStatus(\"Copy Failure: \" + sourceFileStatus.getPath());\n      throw new IOException(\"File copy failed: \" + sourceFileStatus.getPath() +\n          \" --\u003e \" + target, e);\n    }\n    incrementCounter(context, Counter.BYTESEXPECTED, sourceFileStatus.getLen());\n    incrementCounter(context, Counter.BYTESCOPIED, bytesCopied);\n    incrementCounter(context, Counter.COPY, 1);\n  }",
          "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/mapred/CopyMapper.java",
          "extendedDetails": {}
        }
      ]
    },
    "e57843e02a846e5b3bb19c4bf9c3f61675d3e8ff": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3054. distcp -skipcrccheck has no effect. Contributed by Colin Patrick McCabe.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1381296 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/09/12 11:54 AM",
      "commitName": "e57843e02a846e5b3bb19c4bf9c3f61675d3e8ff",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "25/01/12 10:36 PM",
      "commitNameOld": "d06948002fb0cabf72cc0d46bf2fa67d45370f67",
      "commitAuthorOld": "Mahadev Konar",
      "daysBetweenCommits": 223.51,
      "commitsBetweenForRepo": 1465,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   private void copyFileWithRetry(String description, FileStatus sourceFileStatus,\n                Path target, Context context,\n                EnumSet\u003cDistCpOptions.FileAttribute\u003e fileAttributes) throws IOException {\n \n     long bytesCopied;\n     try {\n-      bytesCopied \u003d (Long)new RetriableFileCopyCommand(description)\n+      bytesCopied \u003d (Long)new RetriableFileCopyCommand(skipCrc, description)\n                        .execute(sourceFileStatus, target, context, fileAttributes);\n     } catch (Exception e) {\n       context.setStatus(\"Copy Failure: \" + sourceFileStatus.getPath());\n       throw new IOException(\"File copy failed: \" + sourceFileStatus.getPath() +\n           \" --\u003e \" + target, e);\n     }\n     incrementCounter(context, Counter.BYTESEXPECTED, sourceFileStatus.getLen());\n     incrementCounter(context, Counter.BYTESCOPIED, bytesCopied);\n     incrementCounter(context, Counter.COPY, 1);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void copyFileWithRetry(String description, FileStatus sourceFileStatus,\n               Path target, Context context,\n               EnumSet\u003cDistCpOptions.FileAttribute\u003e fileAttributes) throws IOException {\n\n    long bytesCopied;\n    try {\n      bytesCopied \u003d (Long)new RetriableFileCopyCommand(skipCrc, description)\n                       .execute(sourceFileStatus, target, context, fileAttributes);\n    } catch (Exception e) {\n      context.setStatus(\"Copy Failure: \" + sourceFileStatus.getPath());\n      throw new IOException(\"File copy failed: \" + sourceFileStatus.getPath() +\n          \" --\u003e \" + target, e);\n    }\n    incrementCounter(context, Counter.BYTESEXPECTED, sourceFileStatus.getLen());\n    incrementCounter(context, Counter.BYTESCOPIED, bytesCopied);\n    incrementCounter(context, Counter.COPY, 1);\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/mapred/CopyMapper.java",
      "extendedDetails": {}
    },
    "d06948002fb0cabf72cc0d46bf2fa67d45370f67": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-2765. DistCp Rewrite. (Mithun Radhakrishnan via mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1236045 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/01/12 10:36 PM",
      "commitName": "d06948002fb0cabf72cc0d46bf2fa67d45370f67",
      "commitAuthor": "Mahadev Konar",
      "diff": "@@ -0,0 +1,17 @@\n+  private void copyFileWithRetry(String description, FileStatus sourceFileStatus,\n+               Path target, Context context,\n+               EnumSet\u003cDistCpOptions.FileAttribute\u003e fileAttributes) throws IOException {\n+\n+    long bytesCopied;\n+    try {\n+      bytesCopied \u003d (Long)new RetriableFileCopyCommand(description)\n+                       .execute(sourceFileStatus, target, context, fileAttributes);\n+    } catch (Exception e) {\n+      context.setStatus(\"Copy Failure: \" + sourceFileStatus.getPath());\n+      throw new IOException(\"File copy failed: \" + sourceFileStatus.getPath() +\n+          \" --\u003e \" + target, e);\n+    }\n+    incrementCounter(context, Counter.BYTESEXPECTED, sourceFileStatus.getLen());\n+    incrementCounter(context, Counter.BYTESCOPIED, bytesCopied);\n+    incrementCounter(context, Counter.COPY, 1);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void copyFileWithRetry(String description, FileStatus sourceFileStatus,\n               Path target, Context context,\n               EnumSet\u003cDistCpOptions.FileAttribute\u003e fileAttributes) throws IOException {\n\n    long bytesCopied;\n    try {\n      bytesCopied \u003d (Long)new RetriableFileCopyCommand(description)\n                       .execute(sourceFileStatus, target, context, fileAttributes);\n    } catch (Exception e) {\n      context.setStatus(\"Copy Failure: \" + sourceFileStatus.getPath());\n      throw new IOException(\"File copy failed: \" + sourceFileStatus.getPath() +\n          \" --\u003e \" + target, e);\n    }\n    incrementCounter(context, Counter.BYTESEXPECTED, sourceFileStatus.getLen());\n    incrementCounter(context, Counter.BYTESCOPIED, bytesCopied);\n    incrementCounter(context, Counter.COPY, 1);\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/mapred/CopyMapper.java"
    }
  }
}