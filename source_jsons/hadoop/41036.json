{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSConfigToCSConfigConverter.java",
  "functionName": "handleFairSchedulerConfig",
  "functionId": "handleFairSchedulerConfig___params-FSConfigToCSConfigConverterParams__conf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/converter/FSConfigToCSConfigConverter.java",
  "functionStartLine": 191,
  "functionEndLine": 215,
  "numCommitsSeen": 9,
  "timeTaken": 1011,
  "changeHistory": [
    "5cc7873a4723a6c8e8e001d008fcd522eec0433d"
  ],
  "changeHistoryShort": {
    "5cc7873a4723a6c8e8e001d008fcd522eec0433d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5cc7873a4723a6c8e8e001d008fcd522eec0433d": {
      "type": "Yintroduced",
      "commitMessage": "YARN-9699. Migration tool that help to generate CS config based on FS config [Phase 1]. Contributed by Peter Bacsko\n",
      "commitDate": "14/10/19 8:19 AM",
      "commitName": "5cc7873a4723a6c8e8e001d008fcd522eec0433d",
      "commitAuthor": "Szilard Nemeth",
      "diff": "@@ -0,0 +1,25 @@\n+  private void handleFairSchedulerConfig(\n+      FSConfigToCSConfigConverterParams params, Configuration conf) {\n+    String fairSchedulerXmlConfig \u003d params.getFairSchedulerXmlConfig();\n+\n+    // Don\u0027t override allocation file in conf yet, as it would ruin the second\n+    // condition here\n+    if (fairSchedulerXmlConfig !\u003d null) {\n+      LOG.info(\"Using explicitly defined \" + FAIR_SCHEDULER_XML);\n+    } else if (conf.get(FairSchedulerConfiguration.ALLOCATION_FILE) !\u003d null) {\n+      LOG.info(\"Using \" + FAIR_SCHEDULER_XML + \" defined in \" +\n+          YARN_SITE_XML + \" by key: \" +\n+          FairSchedulerConfiguration.ALLOCATION_FILE);\n+    } else {\n+      throw new PreconditionException(\"\" + FAIR_SCHEDULER_XML +\n+          \" is not defined neither in \" + YARN_SITE_XML +\n+          \"(with property: \" + FairSchedulerConfiguration.ALLOCATION_FILE +\n+          \") nor directly with its own parameter!\");\n+    }\n+\n+    // We can now safely override allocation file in conf\n+    if (fairSchedulerXmlConfig !\u003d null) {\n+      conf.set(FairSchedulerConfiguration.ALLOCATION_FILE,\n+          params.getFairSchedulerXmlConfig());\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void handleFairSchedulerConfig(\n      FSConfigToCSConfigConverterParams params, Configuration conf) {\n    String fairSchedulerXmlConfig \u003d params.getFairSchedulerXmlConfig();\n\n    // Don\u0027t override allocation file in conf yet, as it would ruin the second\n    // condition here\n    if (fairSchedulerXmlConfig !\u003d null) {\n      LOG.info(\"Using explicitly defined \" + FAIR_SCHEDULER_XML);\n    } else if (conf.get(FairSchedulerConfiguration.ALLOCATION_FILE) !\u003d null) {\n      LOG.info(\"Using \" + FAIR_SCHEDULER_XML + \" defined in \" +\n          YARN_SITE_XML + \" by key: \" +\n          FairSchedulerConfiguration.ALLOCATION_FILE);\n    } else {\n      throw new PreconditionException(\"\" + FAIR_SCHEDULER_XML +\n          \" is not defined neither in \" + YARN_SITE_XML +\n          \"(with property: \" + FairSchedulerConfiguration.ALLOCATION_FILE +\n          \") nor directly with its own parameter!\");\n    }\n\n    // We can now safely override allocation file in conf\n    if (fairSchedulerXmlConfig !\u003d null) {\n      conf.set(FairSchedulerConfiguration.ALLOCATION_FILE,\n          params.getFairSchedulerXmlConfig());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/converter/FSConfigToCSConfigConverter.java"
    }
  }
}