{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RuncContainerRuntime.java",
  "functionName": "writeCommandToFile",
  "functionId": "writeCommandToFile___runcContainerExecutorConfig-RuncContainerExecutorConfig__container-Container",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/runtime/RuncContainerRuntime.java",
  "functionStartLine": 726,
  "functionEndLine": 761,
  "numCommitsSeen": 1,
  "timeTaken": 1397,
  "changeHistory": [
    "0e22e9ab83438af37d821cb2f96e31f9a19ace2c"
  ],
  "changeHistoryShort": {
    "0e22e9ab83438af37d821cb2f96e31f9a19ace2c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0e22e9ab83438af37d821cb2f96e31f9a19ace2c": {
      "type": "Yintroduced",
      "commitMessage": "YARN-9562. Add Java changes for the new RuncContainerRuntime. Contributed by Eric Badger\n",
      "commitDate": "18/11/19 1:56 PM",
      "commitName": "0e22e9ab83438af37d821cb2f96e31f9a19ace2c",
      "commitAuthor": "Eric Badger",
      "diff": "@@ -0,0 +1,36 @@\n+  public String writeCommandToFile(\n+      RuncContainerExecutorConfig runcContainerExecutorConfig,\n+      Container container)\n+      throws ContainerExecutionException {\n+    ContainerId containerId \u003d container.getContainerId();\n+    String filePrefix \u003d containerId.toString();\n+    ApplicationId appId \u003d containerId.getApplicationAttemptId()\n+        .getApplicationId();\n+    File commandFile;\n+    try {\n+      File cmdDir \u003d null;\n+\n+      if(nmContext !\u003d null \u0026\u0026 nmContext.getLocalDirsHandler() !\u003d null) {\n+        String cmdDirStr \u003d nmContext.getLocalDirsHandler().getLocalPathForWrite(\n+            ResourceLocalizationService.NM_PRIVATE_DIR + Path.SEPARATOR +\n+            appId + Path.SEPARATOR + filePrefix + Path.SEPARATOR).toString();\n+        cmdDir \u003d new File(cmdDirStr);\n+        if (!cmdDir.mkdirs() \u0026\u0026 !cmdDir.exists()) {\n+          throw new IOException(\"Cannot create container private directory \"\n+              + cmdDir);\n+        }\n+      }\n+      commandFile \u003d new File(cmdDir + \"/runc-config.json\");\n+\n+      try {\n+        mapper.writeValue(commandFile, runcContainerExecutorConfig);\n+      } catch (IOException ioe) {\n+        throw new ContainerExecutionException(ioe);\n+      }\n+\n+      return commandFile.getAbsolutePath();\n+    } catch (IOException e) {\n+      LOG.warn(\"Unable to write runc config.json to temporary file!\");\n+      throw new ContainerExecutionException(e);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public String writeCommandToFile(\n      RuncContainerExecutorConfig runcContainerExecutorConfig,\n      Container container)\n      throws ContainerExecutionException {\n    ContainerId containerId \u003d container.getContainerId();\n    String filePrefix \u003d containerId.toString();\n    ApplicationId appId \u003d containerId.getApplicationAttemptId()\n        .getApplicationId();\n    File commandFile;\n    try {\n      File cmdDir \u003d null;\n\n      if(nmContext !\u003d null \u0026\u0026 nmContext.getLocalDirsHandler() !\u003d null) {\n        String cmdDirStr \u003d nmContext.getLocalDirsHandler().getLocalPathForWrite(\n            ResourceLocalizationService.NM_PRIVATE_DIR + Path.SEPARATOR +\n            appId + Path.SEPARATOR + filePrefix + Path.SEPARATOR).toString();\n        cmdDir \u003d new File(cmdDirStr);\n        if (!cmdDir.mkdirs() \u0026\u0026 !cmdDir.exists()) {\n          throw new IOException(\"Cannot create container private directory \"\n              + cmdDir);\n        }\n      }\n      commandFile \u003d new File(cmdDir + \"/runc-config.json\");\n\n      try {\n        mapper.writeValue(commandFile, runcContainerExecutorConfig);\n      } catch (IOException ioe) {\n        throw new ContainerExecutionException(ioe);\n      }\n\n      return commandFile.getAbsolutePath();\n    } catch (IOException e) {\n      LOG.warn(\"Unable to write runc config.json to temporary file!\");\n      throw new ContainerExecutionException(e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/runtime/RuncContainerRuntime.java"
    }
  }
}