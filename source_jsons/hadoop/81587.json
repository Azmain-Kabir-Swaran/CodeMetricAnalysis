{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "KMSUtil.java",
  "functionName": "parseJSONKeyVersion",
  "functionId": "parseJSONKeyVersion___valueMap-Map",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/KMSUtil.java",
  "functionStartLine": 186,
  "functionEndLine": 202,
  "numCommitsSeen": 59,
  "timeTaken": 3477,
  "changeHistory": [
    "4ec5acc70418a3f2327cf83ecae1789a057fdd99",
    "7b5295513dce9768083ae53282013e31d74573c6",
    "17d4fbbf0af9b93de9502afb274e91533140d1c6"
  ],
  "changeHistoryShort": {
    "4ec5acc70418a3f2327cf83ecae1789a057fdd99": "Ymultichange(Ymovefromfile,Yreturntypechange,Ymodifierchange,Ybodychange)",
    "7b5295513dce9768083ae53282013e31d74573c6": "Ybodychange",
    "17d4fbbf0af9b93de9502afb274e91533140d1c6": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4ec5acc70418a3f2327cf83ecae1789a057fdd99": {
      "type": "Ymultichange(Ymovefromfile,Yreturntypechange,Ymodifierchange,Ybodychange)",
      "commitMessage": "HADOOP-14705. Add batched interface reencryptEncryptedKeys to KMS.\n",
      "commitDate": "22/08/17 7:47 AM",
      "commitName": "4ec5acc70418a3f2327cf83ecae1789a057fdd99",
      "commitAuthor": "Xiao Chen",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HADOOP-14705. Add batched interface reencryptEncryptedKeys to KMS.\n",
          "commitDate": "22/08/17 7:47 AM",
          "commitName": "4ec5acc70418a3f2327cf83ecae1789a057fdd99",
          "commitAuthor": "Xiao Chen",
          "commitDateOld": "22/08/17 3:55 AM",
          "commitNameOld": "27ab5f7385c70f16fd593edc336c573c69f19331",
          "commitAuthorOld": "Steve Loughran",
          "daysBetweenCommits": 0.16,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,17 @@\n-  private static KeyVersion parseJSONKeyVersion(Map valueMap) {\n-    KeyVersion keyVersion \u003d null;\n+  public static KeyProvider.KeyVersion parseJSONKeyVersion(Map valueMap) {\n+    checkNotNull(valueMap, \"valueMap\");\n+    KeyProvider.KeyVersion keyVersion \u003d null;\n     if (!valueMap.isEmpty()) {\n-      byte[] material \u003d (valueMap.containsKey(KMSRESTConstants.MATERIAL_FIELD))\n-          ? Base64.decodeBase64((String) valueMap.get(KMSRESTConstants.MATERIAL_FIELD))\n-          : null;\n-      String versionName \u003d (String)valueMap.get(KMSRESTConstants.VERSION_NAME_FIELD);\n-      String keyName \u003d (String)valueMap.get(KMSRESTConstants.NAME_FIELD);\n-      keyVersion \u003d new KMSKeyVersion(keyName, versionName, material);\n+      byte[] material \u003d\n+          (valueMap.containsKey(KMSRESTConstants.MATERIAL_FIELD)) ?\n+              Base64.decodeBase64(\n+                  (String) valueMap.get(KMSRESTConstants.MATERIAL_FIELD)) :\n+              null;\n+      String versionName \u003d\n+          (String) valueMap.get(KMSRESTConstants.VERSION_NAME_FIELD);\n+      String keyName \u003d (String) valueMap.get(KMSRESTConstants.NAME_FIELD);\n+      keyVersion \u003d\n+          new KMSClientProvider.KMSKeyVersion(keyName, versionName, material);\n     }\n     return keyVersion;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static KeyProvider.KeyVersion parseJSONKeyVersion(Map valueMap) {\n    checkNotNull(valueMap, \"valueMap\");\n    KeyProvider.KeyVersion keyVersion \u003d null;\n    if (!valueMap.isEmpty()) {\n      byte[] material \u003d\n          (valueMap.containsKey(KMSRESTConstants.MATERIAL_FIELD)) ?\n              Base64.decodeBase64(\n                  (String) valueMap.get(KMSRESTConstants.MATERIAL_FIELD)) :\n              null;\n      String versionName \u003d\n          (String) valueMap.get(KMSRESTConstants.VERSION_NAME_FIELD);\n      String keyName \u003d (String) valueMap.get(KMSRESTConstants.NAME_FIELD);\n      keyVersion \u003d\n          new KMSClientProvider.KMSKeyVersion(keyName, versionName, material);\n    }\n    return keyVersion;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/KMSUtil.java",
          "extendedDetails": {
            "oldPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/KMSClientProvider.java",
            "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/KMSUtil.java",
            "oldMethodName": "parseJSONKeyVersion",
            "newMethodName": "parseJSONKeyVersion"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "HADOOP-14705. Add batched interface reencryptEncryptedKeys to KMS.\n",
          "commitDate": "22/08/17 7:47 AM",
          "commitName": "4ec5acc70418a3f2327cf83ecae1789a057fdd99",
          "commitAuthor": "Xiao Chen",
          "commitDateOld": "22/08/17 3:55 AM",
          "commitNameOld": "27ab5f7385c70f16fd593edc336c573c69f19331",
          "commitAuthorOld": "Steve Loughran",
          "daysBetweenCommits": 0.16,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,17 @@\n-  private static KeyVersion parseJSONKeyVersion(Map valueMap) {\n-    KeyVersion keyVersion \u003d null;\n+  public static KeyProvider.KeyVersion parseJSONKeyVersion(Map valueMap) {\n+    checkNotNull(valueMap, \"valueMap\");\n+    KeyProvider.KeyVersion keyVersion \u003d null;\n     if (!valueMap.isEmpty()) {\n-      byte[] material \u003d (valueMap.containsKey(KMSRESTConstants.MATERIAL_FIELD))\n-          ? Base64.decodeBase64((String) valueMap.get(KMSRESTConstants.MATERIAL_FIELD))\n-          : null;\n-      String versionName \u003d (String)valueMap.get(KMSRESTConstants.VERSION_NAME_FIELD);\n-      String keyName \u003d (String)valueMap.get(KMSRESTConstants.NAME_FIELD);\n-      keyVersion \u003d new KMSKeyVersion(keyName, versionName, material);\n+      byte[] material \u003d\n+          (valueMap.containsKey(KMSRESTConstants.MATERIAL_FIELD)) ?\n+              Base64.decodeBase64(\n+                  (String) valueMap.get(KMSRESTConstants.MATERIAL_FIELD)) :\n+              null;\n+      String versionName \u003d\n+          (String) valueMap.get(KMSRESTConstants.VERSION_NAME_FIELD);\n+      String keyName \u003d (String) valueMap.get(KMSRESTConstants.NAME_FIELD);\n+      keyVersion \u003d\n+          new KMSClientProvider.KMSKeyVersion(keyName, versionName, material);\n     }\n     return keyVersion;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static KeyProvider.KeyVersion parseJSONKeyVersion(Map valueMap) {\n    checkNotNull(valueMap, \"valueMap\");\n    KeyProvider.KeyVersion keyVersion \u003d null;\n    if (!valueMap.isEmpty()) {\n      byte[] material \u003d\n          (valueMap.containsKey(KMSRESTConstants.MATERIAL_FIELD)) ?\n              Base64.decodeBase64(\n                  (String) valueMap.get(KMSRESTConstants.MATERIAL_FIELD)) :\n              null;\n      String versionName \u003d\n          (String) valueMap.get(KMSRESTConstants.VERSION_NAME_FIELD);\n      String keyName \u003d (String) valueMap.get(KMSRESTConstants.NAME_FIELD);\n      keyVersion \u003d\n          new KMSClientProvider.KMSKeyVersion(keyName, versionName, material);\n    }\n    return keyVersion;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/KMSUtil.java",
          "extendedDetails": {
            "oldValue": "KeyVersion",
            "newValue": "KeyProvider.KeyVersion"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HADOOP-14705. Add batched interface reencryptEncryptedKeys to KMS.\n",
          "commitDate": "22/08/17 7:47 AM",
          "commitName": "4ec5acc70418a3f2327cf83ecae1789a057fdd99",
          "commitAuthor": "Xiao Chen",
          "commitDateOld": "22/08/17 3:55 AM",
          "commitNameOld": "27ab5f7385c70f16fd593edc336c573c69f19331",
          "commitAuthorOld": "Steve Loughran",
          "daysBetweenCommits": 0.16,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,17 @@\n-  private static KeyVersion parseJSONKeyVersion(Map valueMap) {\n-    KeyVersion keyVersion \u003d null;\n+  public static KeyProvider.KeyVersion parseJSONKeyVersion(Map valueMap) {\n+    checkNotNull(valueMap, \"valueMap\");\n+    KeyProvider.KeyVersion keyVersion \u003d null;\n     if (!valueMap.isEmpty()) {\n-      byte[] material \u003d (valueMap.containsKey(KMSRESTConstants.MATERIAL_FIELD))\n-          ? Base64.decodeBase64((String) valueMap.get(KMSRESTConstants.MATERIAL_FIELD))\n-          : null;\n-      String versionName \u003d (String)valueMap.get(KMSRESTConstants.VERSION_NAME_FIELD);\n-      String keyName \u003d (String)valueMap.get(KMSRESTConstants.NAME_FIELD);\n-      keyVersion \u003d new KMSKeyVersion(keyName, versionName, material);\n+      byte[] material \u003d\n+          (valueMap.containsKey(KMSRESTConstants.MATERIAL_FIELD)) ?\n+              Base64.decodeBase64(\n+                  (String) valueMap.get(KMSRESTConstants.MATERIAL_FIELD)) :\n+              null;\n+      String versionName \u003d\n+          (String) valueMap.get(KMSRESTConstants.VERSION_NAME_FIELD);\n+      String keyName \u003d (String) valueMap.get(KMSRESTConstants.NAME_FIELD);\n+      keyVersion \u003d\n+          new KMSClientProvider.KMSKeyVersion(keyName, versionName, material);\n     }\n     return keyVersion;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static KeyProvider.KeyVersion parseJSONKeyVersion(Map valueMap) {\n    checkNotNull(valueMap, \"valueMap\");\n    KeyProvider.KeyVersion keyVersion \u003d null;\n    if (!valueMap.isEmpty()) {\n      byte[] material \u003d\n          (valueMap.containsKey(KMSRESTConstants.MATERIAL_FIELD)) ?\n              Base64.decodeBase64(\n                  (String) valueMap.get(KMSRESTConstants.MATERIAL_FIELD)) :\n              null;\n      String versionName \u003d\n          (String) valueMap.get(KMSRESTConstants.VERSION_NAME_FIELD);\n      String keyName \u003d (String) valueMap.get(KMSRESTConstants.NAME_FIELD);\n      keyVersion \u003d\n          new KMSClientProvider.KMSKeyVersion(keyName, versionName, material);\n    }\n    return keyVersion;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/KMSUtil.java",
          "extendedDetails": {
            "oldValue": "[private, static]",
            "newValue": "[public, static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-14705. Add batched interface reencryptEncryptedKeys to KMS.\n",
          "commitDate": "22/08/17 7:47 AM",
          "commitName": "4ec5acc70418a3f2327cf83ecae1789a057fdd99",
          "commitAuthor": "Xiao Chen",
          "commitDateOld": "22/08/17 3:55 AM",
          "commitNameOld": "27ab5f7385c70f16fd593edc336c573c69f19331",
          "commitAuthorOld": "Steve Loughran",
          "daysBetweenCommits": 0.16,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,17 @@\n-  private static KeyVersion parseJSONKeyVersion(Map valueMap) {\n-    KeyVersion keyVersion \u003d null;\n+  public static KeyProvider.KeyVersion parseJSONKeyVersion(Map valueMap) {\n+    checkNotNull(valueMap, \"valueMap\");\n+    KeyProvider.KeyVersion keyVersion \u003d null;\n     if (!valueMap.isEmpty()) {\n-      byte[] material \u003d (valueMap.containsKey(KMSRESTConstants.MATERIAL_FIELD))\n-          ? Base64.decodeBase64((String) valueMap.get(KMSRESTConstants.MATERIAL_FIELD))\n-          : null;\n-      String versionName \u003d (String)valueMap.get(KMSRESTConstants.VERSION_NAME_FIELD);\n-      String keyName \u003d (String)valueMap.get(KMSRESTConstants.NAME_FIELD);\n-      keyVersion \u003d new KMSKeyVersion(keyName, versionName, material);\n+      byte[] material \u003d\n+          (valueMap.containsKey(KMSRESTConstants.MATERIAL_FIELD)) ?\n+              Base64.decodeBase64(\n+                  (String) valueMap.get(KMSRESTConstants.MATERIAL_FIELD)) :\n+              null;\n+      String versionName \u003d\n+          (String) valueMap.get(KMSRESTConstants.VERSION_NAME_FIELD);\n+      String keyName \u003d (String) valueMap.get(KMSRESTConstants.NAME_FIELD);\n+      keyVersion \u003d\n+          new KMSClientProvider.KMSKeyVersion(keyName, versionName, material);\n     }\n     return keyVersion;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static KeyProvider.KeyVersion parseJSONKeyVersion(Map valueMap) {\n    checkNotNull(valueMap, \"valueMap\");\n    KeyProvider.KeyVersion keyVersion \u003d null;\n    if (!valueMap.isEmpty()) {\n      byte[] material \u003d\n          (valueMap.containsKey(KMSRESTConstants.MATERIAL_FIELD)) ?\n              Base64.decodeBase64(\n                  (String) valueMap.get(KMSRESTConstants.MATERIAL_FIELD)) :\n              null;\n      String versionName \u003d\n          (String) valueMap.get(KMSRESTConstants.VERSION_NAME_FIELD);\n      String keyName \u003d (String) valueMap.get(KMSRESTConstants.NAME_FIELD);\n      keyVersion \u003d\n          new KMSClientProvider.KMSKeyVersion(keyName, versionName, material);\n    }\n    return keyVersion;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/KMSUtil.java",
          "extendedDetails": {}
        }
      ]
    },
    "7b5295513dce9768083ae53282013e31d74573c6": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10757. KeyProvider KeyVersion should provide the key name. (asuresh via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1607896 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/07/14 10:31 AM",
      "commitName": "7b5295513dce9768083ae53282013e31d74573c6",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "30/06/14 1:54 PM",
      "commitNameOld": "950ae82571bd05e8bac449c20bed1fa12dbfb56b",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 3.86,
      "commitsBetweenForRepo": 31,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,12 @@\n   private static KeyVersion parseJSONKeyVersion(Map valueMap) {\n     KeyVersion keyVersion \u003d null;\n     if (!valueMap.isEmpty()) {\n       byte[] material \u003d (valueMap.containsKey(KMSRESTConstants.MATERIAL_FIELD))\n           ? Base64.decodeBase64((String) valueMap.get(KMSRESTConstants.MATERIAL_FIELD))\n           : null;\n-      keyVersion \u003d new KMSKeyVersion((String)\n-          valueMap.get(KMSRESTConstants.VERSION_NAME_FIELD), material);\n+      String versionName \u003d (String)valueMap.get(KMSRESTConstants.VERSION_NAME_FIELD);\n+      String keyName \u003d (String)valueMap.get(KMSRESTConstants.NAME_FIELD);\n+      keyVersion \u003d new KMSKeyVersion(keyName, versionName, material);\n     }\n     return keyVersion;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static KeyVersion parseJSONKeyVersion(Map valueMap) {\n    KeyVersion keyVersion \u003d null;\n    if (!valueMap.isEmpty()) {\n      byte[] material \u003d (valueMap.containsKey(KMSRESTConstants.MATERIAL_FIELD))\n          ? Base64.decodeBase64((String) valueMap.get(KMSRESTConstants.MATERIAL_FIELD))\n          : null;\n      String versionName \u003d (String)valueMap.get(KMSRESTConstants.VERSION_NAME_FIELD);\n      String keyName \u003d (String)valueMap.get(KMSRESTConstants.NAME_FIELD);\n      keyVersion \u003d new KMSKeyVersion(keyName, versionName, material);\n    }\n    return keyVersion;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/KMSClientProvider.java",
      "extendedDetails": {}
    },
    "17d4fbbf0af9b93de9502afb274e91533140d1c6": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-10433. Key Management Server based on KeyProvider API. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1592637 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/05/14 2:43 PM",
      "commitName": "17d4fbbf0af9b93de9502afb274e91533140d1c6",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,11 @@\n+  private static KeyVersion parseJSONKeyVersion(Map valueMap) {\n+    KeyVersion keyVersion \u003d null;\n+    if (!valueMap.isEmpty()) {\n+      byte[] material \u003d (valueMap.containsKey(KMSRESTConstants.MATERIAL_FIELD))\n+          ? Base64.decodeBase64((String) valueMap.get(KMSRESTConstants.MATERIAL_FIELD))\n+          : null;\n+      keyVersion \u003d new KMSKeyVersion((String)\n+          valueMap.get(KMSRESTConstants.VERSION_NAME_FIELD), material);\n+    }\n+    return keyVersion;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static KeyVersion parseJSONKeyVersion(Map valueMap) {\n    KeyVersion keyVersion \u003d null;\n    if (!valueMap.isEmpty()) {\n      byte[] material \u003d (valueMap.containsKey(KMSRESTConstants.MATERIAL_FIELD))\n          ? Base64.decodeBase64((String) valueMap.get(KMSRESTConstants.MATERIAL_FIELD))\n          : null;\n      keyVersion \u003d new KMSKeyVersion((String)\n          valueMap.get(KMSRESTConstants.VERSION_NAME_FIELD), material);\n    }\n    return keyVersion;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/KMSClientProvider.java"
    }
  }
}