{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CapacityScheduler.java",
  "functionName": "run",
  "functionId": "run",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
  "functionStartLine": 587,
  "functionEndLine": 616,
  "numCommitsSeen": 239,
  "timeTaken": 6947,
  "changeHistory": [
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
    "e40e2d6ad5cbe782c3a067229270738b501ed27e",
    "88d8d3f40b2923fab23a933bce1cd2e9c320ae84",
    "834e91ee91d22d74866afbf6252107e969bf8370",
    "de3b4aac561258ad242a3c5ed1c919428893fd4c",
    "57cdf8626a32b8595a645b7551f46ab950db4789"
  ],
  "changeHistoryShort": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": "Ybodychange",
    "e40e2d6ad5cbe782c3a067229270738b501ed27e": "Ybodychange",
    "88d8d3f40b2923fab23a933bce1cd2e9c320ae84": "Ybodychange",
    "834e91ee91d22d74866afbf6252107e969bf8370": "Ybodychange",
    "de3b4aac561258ad242a3c5ed1c919428893fd4c": "Ybodychange",
    "57cdf8626a32b8595a645b7551f46ab950db4789": "Yintroduced"
  },
  "changeHistoryDetails": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9341.  Fixed enentrant lock usage in YARN project.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "07/03/19 1:47 PM",
      "commitName": "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "04/03/19 9:10 PM",
      "commitNameOld": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
      "commitAuthorOld": "Prabhu Joseph",
      "daysBetweenCommits": 2.69,
      "commitsBetweenForRepo": 39,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,19 @@\n     public void run() {\n       while (!Thread.currentThread().isInterrupted()) {\n         try {\n           ResourceCommitRequest\u003cFiCaSchedulerApp, FiCaSchedulerNode\u003e request \u003d\n               backlogs.take();\n-\n+          cs.writeLock.lock();\n           try {\n-            cs.writeLock.lock();\n             cs.tryCommit(cs.getClusterResource(), request, true);\n           } finally {\n             cs.writeLock.unlock();\n           }\n \n         } catch (InterruptedException e) {\n           LOG.error(e.toString());\n           Thread.currentThread().interrupt();\n         }\n       }\n       LOG.info(\"ResourceCommitterService exited!\");\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      while (!Thread.currentThread().isInterrupted()) {\n        try {\n          ResourceCommitRequest\u003cFiCaSchedulerApp, FiCaSchedulerNode\u003e request \u003d\n              backlogs.take();\n          cs.writeLock.lock();\n          try {\n            cs.tryCommit(cs.getClusterResource(), request, true);\n          } finally {\n            cs.writeLock.unlock();\n          }\n\n        } catch (InterruptedException e) {\n          LOG.error(e.toString());\n          Thread.currentThread().interrupt();\n        }\n      }\n      LOG.info(\"ResourceCommitterService exited!\");\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
      "extendedDetails": {}
    },
    "e40e2d6ad5cbe782c3a067229270738b501ed27e": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7243. Moving logging APIs over to slf4j in hadoop-yarn-server-resourcemanager.\n\nSigned-off-by: Akira Ajisaka \u003caajisaka@apache.org\u003e\n",
      "commitDate": "04/03/19 9:10 PM",
      "commitName": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
      "commitAuthor": "Prabhu Joseph",
      "commitDateOld": "24/02/19 6:17 AM",
      "commitNameOld": "50094d7fefafaf0e88798b43cdce291ae067e3fd",
      "commitAuthorOld": "Weiwei Yang",
      "daysBetweenCommits": 8.62,
      "commitsBetweenForRepo": 82,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n     public void run() {\n       while (!Thread.currentThread().isInterrupted()) {\n         try {\n           ResourceCommitRequest\u003cFiCaSchedulerApp, FiCaSchedulerNode\u003e request \u003d\n               backlogs.take();\n \n           try {\n             cs.writeLock.lock();\n             cs.tryCommit(cs.getClusterResource(), request, true);\n           } finally {\n             cs.writeLock.unlock();\n           }\n \n         } catch (InterruptedException e) {\n-          LOG.error(e);\n+          LOG.error(e.toString());\n           Thread.currentThread().interrupt();\n         }\n       }\n       LOG.info(\"ResourceCommitterService exited!\");\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      while (!Thread.currentThread().isInterrupted()) {\n        try {\n          ResourceCommitRequest\u003cFiCaSchedulerApp, FiCaSchedulerNode\u003e request \u003d\n              backlogs.take();\n\n          try {\n            cs.writeLock.lock();\n            cs.tryCommit(cs.getClusterResource(), request, true);\n          } finally {\n            cs.writeLock.unlock();\n          }\n\n        } catch (InterruptedException e) {\n          LOG.error(e.toString());\n          Thread.currentThread().interrupt();\n        }\n      }\n      LOG.info(\"ResourceCommitterService exited!\");\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
      "extendedDetails": {}
    },
    "88d8d3f40b2923fab23a933bce1cd2e9c320ae84": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7670. Modifications to the ResourceScheduler API to support SchedulingRequests. (asuresh)\n",
      "commitDate": "31/01/18 1:30 AM",
      "commitName": "88d8d3f40b2923fab23a933bce1cd2e9c320ae84",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "29/01/18 7:14 AM",
      "commitNameOld": "e9c72d04beddfe0252d2e81123a9fe66bdf04078",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 1.76,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n     public void run() {\n       while (!Thread.currentThread().isInterrupted()) {\n         try {\n           ResourceCommitRequest\u003cFiCaSchedulerApp, FiCaSchedulerNode\u003e request \u003d\n               backlogs.take();\n \n           try {\n             cs.writeLock.lock();\n-            cs.tryCommit(cs.getClusterResource(), request);\n+            cs.tryCommit(cs.getClusterResource(), request, true);\n           } finally {\n             cs.writeLock.unlock();\n           }\n \n         } catch (InterruptedException e) {\n           LOG.error(e);\n           Thread.currentThread().interrupt();\n         }\n       }\n       LOG.info(\"ResourceCommitterService exited!\");\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      while (!Thread.currentThread().isInterrupted()) {\n        try {\n          ResourceCommitRequest\u003cFiCaSchedulerApp, FiCaSchedulerNode\u003e request \u003d\n              backlogs.take();\n\n          try {\n            cs.writeLock.lock();\n            cs.tryCommit(cs.getClusterResource(), request, true);\n          } finally {\n            cs.writeLock.unlock();\n          }\n\n        } catch (InterruptedException e) {\n          LOG.error(e);\n          Thread.currentThread().interrupt();\n        }\n      }\n      LOG.info(\"ResourceCommitterService exited!\");\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
      "extendedDetails": {}
    },
    "834e91ee91d22d74866afbf6252107e969bf8370": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7509. AsyncScheduleThread and ResourceCommitterService are still running after RM is transitioned to standby. (Tao Yang via wangda)\n\nChange-Id: I7477fe355419fd4a0a6e2bdda7319abad4c4c748\n",
      "commitDate": "23/11/17 7:59 PM",
      "commitName": "834e91ee91d22d74866afbf6252107e969bf8370",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "16/11/17 11:25 AM",
      "commitNameOld": "0987a7b8cbbbb2c1e4c2095821d98a7db19644df",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 7.36,
      "commitsBetweenForRepo": 26,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,20 @@\n     public void run() {\n       while (!Thread.currentThread().isInterrupted()) {\n         try {\n           ResourceCommitRequest\u003cFiCaSchedulerApp, FiCaSchedulerNode\u003e request \u003d\n               backlogs.take();\n \n           try {\n             cs.writeLock.lock();\n             cs.tryCommit(cs.getClusterResource(), request);\n           } finally {\n             cs.writeLock.unlock();\n           }\n \n         } catch (InterruptedException e) {\n           LOG.error(e);\n+          Thread.currentThread().interrupt();\n         }\n       }\n+      LOG.info(\"ResourceCommitterService exited!\");\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      while (!Thread.currentThread().isInterrupted()) {\n        try {\n          ResourceCommitRequest\u003cFiCaSchedulerApp, FiCaSchedulerNode\u003e request \u003d\n              backlogs.take();\n\n          try {\n            cs.writeLock.lock();\n            cs.tryCommit(cs.getClusterResource(), request);\n          } finally {\n            cs.writeLock.unlock();\n          }\n\n        } catch (InterruptedException e) {\n          LOG.error(e);\n          Thread.currentThread().interrupt();\n        }\n      }\n      LOG.info(\"ResourceCommitterService exited!\");\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
      "extendedDetails": {}
    },
    "de3b4aac561258ad242a3c5ed1c919428893fd4c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5716. Add global scheduler interface definition and update CapacityScheduler to use it. Contributed by Wangda Tan\n",
      "commitDate": "07/11/16 10:14 AM",
      "commitName": "de3b4aac561258ad242a3c5ed1c919428893fd4c",
      "commitAuthor": "Jian He",
      "commitDateOld": "01/11/16 3:02 AM",
      "commitNameOld": "7d2d8d25ba0cb10a3c6192d4123f27ede5ef2ba6",
      "commitAuthorOld": "Varun Saxena",
      "daysBetweenCommits": 6.34,
      "commitsBetweenForRepo": 78,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,18 @@\n     public void run() {\n-      while (true) {\n-        if (!runSchedules.get()) {\n+      while (!Thread.currentThread().isInterrupted()) {\n+        try {\n+          ResourceCommitRequest\u003cFiCaSchedulerApp, FiCaSchedulerNode\u003e request \u003d\n+              backlogs.take();\n+\n           try {\n-            Thread.sleep(100);\n-          } catch (InterruptedException ie) {}\n-        } else {\n-          schedule(cs);\n+            cs.writeLock.lock();\n+            cs.tryCommit(cs.getClusterResource(), request);\n+          } finally {\n+            cs.writeLock.unlock();\n+          }\n+\n+        } catch (InterruptedException e) {\n+          LOG.error(e);\n         }\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      while (!Thread.currentThread().isInterrupted()) {\n        try {\n          ResourceCommitRequest\u003cFiCaSchedulerApp, FiCaSchedulerNode\u003e request \u003d\n              backlogs.take();\n\n          try {\n            cs.writeLock.lock();\n            cs.tryCommit(cs.getClusterResource(), request);\n          } finally {\n            cs.writeLock.unlock();\n          }\n\n        } catch (InterruptedException e) {\n          LOG.error(e);\n        }\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
      "extendedDetails": {}
    },
    "57cdf8626a32b8595a645b7551f46ab950db4789": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1512. Enhanced CapacityScheduler to be able to decouple scheduling from node-heartbeats. Contributed by Arun C Murthy.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1578722 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/03/14 7:53 PM",
      "commitName": "57cdf8626a32b8595a645b7551f46ab950db4789",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,11 @@\n+    public void run() {\n+      while (true) {\n+        if (!runSchedules.get()) {\n+          try {\n+            Thread.sleep(100);\n+          } catch (InterruptedException ie) {}\n+        } else {\n+          schedule(cs);\n+        }\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      while (true) {\n        if (!runSchedules.get()) {\n          try {\n            Thread.sleep(100);\n          } catch (InterruptedException ie) {}\n        } else {\n          schedule(cs);\n        }\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java"
    }
  }
}