{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DiskChecker.java",
  "functionName": "checkDir",
  "functionId": "checkDir___localFS-LocalFileSystem__dir-Path__expected-FsPermission",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/DiskChecker.java",
  "functionStartLine": 113,
  "functionEndLine": 117,
  "numCommitsSeen": 18,
  "timeTaken": 2152,
  "changeHistory": [
    "bcc8e76badc1341a6cf995c8e44fa5e422158de8",
    "1b6ecaf016aaf7f6a09a4d576294b5e0a6850a1f",
    "262827cf75bf9c48cd95335eb04fd8ff1d64c538",
    "f5227eb51ca257ee776b705420964d27060c8255",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "7578282edce0eba3f24c96355c944c02156ece79",
    "f4d31cd029f8369b8e41de2667f6ba2bd95ca701"
  ],
  "changeHistoryShort": {
    "bcc8e76badc1341a6cf995c8e44fa5e422158de8": "Ybodychange",
    "1b6ecaf016aaf7f6a09a4d576294b5e0a6850a1f": "Ybodychange",
    "262827cf75bf9c48cd95335eb04fd8ff1d64c538": "Ybodychange",
    "f5227eb51ca257ee776b705420964d27060c8255": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "7578282edce0eba3f24c96355c944c02156ece79": "Ybodychange",
    "f4d31cd029f8369b8e41de2667f6ba2bd95ca701": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bcc8e76badc1341a6cf995c8e44fa5e422158de8": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15450. Avoid fsync storm triggered by DiskChecker and handle disk full situation. Contributed by Arpit Agarwal.\n",
      "commitDate": "22/05/18 9:20 AM",
      "commitName": "bcc8e76badc1341a6cf995c8e44fa5e422158de8",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "01/11/16 6:02 PM",
      "commitNameOld": "1b6ecaf016aaf7f6a09a4d576294b5e0a6850a1f",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 566.64,
      "commitsBetweenForRepo": 4285,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,5 @@\n   public static void checkDir(LocalFileSystem localFS, Path dir,\n                               FsPermission expected)\n-  throws DiskErrorException, IOException {\n-    mkdirsWithExistsAndPermissionCheck(localFS, dir, expected);\n-    checkAccessByFileMethods(localFS.pathToFile(dir));\n-    doDiskIo(localFS.pathToFile(dir));\n+      throws DiskErrorException, IOException {\n+    checkDirInternal(localFS, dir, expected);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void checkDir(LocalFileSystem localFS, Path dir,\n                              FsPermission expected)\n      throws DiskErrorException, IOException {\n    checkDirInternal(localFS, dir, expected);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/DiskChecker.java",
      "extendedDetails": {}
    },
    "1b6ecaf016aaf7f6a09a4d576294b5e0a6850a1f": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13738. DiskChecker should perform some disk IO.\n",
      "commitDate": "01/11/16 6:02 PM",
      "commitName": "1b6ecaf016aaf7f6a09a4d576294b5e0a6850a1f",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "20/10/16 1:35 PM",
      "commitNameOld": "262827cf75bf9c48cd95335eb04fd8ff1d64c538",
      "commitAuthorOld": "Anu Engineer",
      "daysBetweenCommits": 12.19,
      "commitsBetweenForRepo": 132,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,7 @@\n   public static void checkDir(LocalFileSystem localFS, Path dir,\n                               FsPermission expected)\n   throws DiskErrorException, IOException {\n     mkdirsWithExistsAndPermissionCheck(localFS, dir, expected);\n     checkAccessByFileMethods(localFS.pathToFile(dir));\n+    doDiskIo(localFS.pathToFile(dir));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void checkDir(LocalFileSystem localFS, Path dir,\n                              FsPermission expected)\n  throws DiskErrorException, IOException {\n    mkdirsWithExistsAndPermissionCheck(localFS, dir, expected);\n    checkAccessByFileMethods(localFS.pathToFile(dir));\n    doDiskIo(localFS.pathToFile(dir));\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/DiskChecker.java",
      "extendedDetails": {}
    },
    "262827cf75bf9c48cd95335eb04fd8ff1d64c538": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13737. Cleanup DiskChecker interface. Contributed by Arpit Agarwal.\n",
      "commitDate": "20/10/16 1:35 PM",
      "commitName": "262827cf75bf9c48cd95335eb04fd8ff1d64c538",
      "commitAuthor": "Anu Engineer",
      "commitDateOld": "05/06/15 1:52 PM",
      "commitNameOld": "bc11e158b1726174fae2c7d2e8aa1f5005bf42eb",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 502.99,
      "commitsBetweenForRepo": 3460,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,6 @@\n   public static void checkDir(LocalFileSystem localFS, Path dir,\n                               FsPermission expected)\n   throws DiskErrorException, IOException {\n     mkdirsWithExistsAndPermissionCheck(localFS, dir, expected);\n-    checkDirAccess(localFS.pathToFile(dir));\n+    checkAccessByFileMethods(localFS.pathToFile(dir));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void checkDir(LocalFileSystem localFS, Path dir,\n                              FsPermission expected)\n  throws DiskErrorException, IOException {\n    mkdirsWithExistsAndPermissionCheck(localFS, dir, expected);\n    checkAccessByFileMethods(localFS.pathToFile(dir));\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/DiskChecker.java",
      "extendedDetails": {}
    },
    "f5227eb51ca257ee776b705420964d27060c8255": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-8973. DiskChecker cannot reliably detect an inaccessible disk on Windows with NTFS ACLs. Contributed by Chris Nauroth.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1454889 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/03/13 11:17 AM",
      "commitName": "f5227eb51ca257ee776b705420964d27060c8255",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "15/07/12 8:33 AM",
      "commitNameOld": "7351a01259eaf3f31d948bf3835550de14b7d9ae",
      "commitAuthorOld": "Harsh J",
      "daysBetweenCommits": 238.11,
      "commitsBetweenForRepo": 1210,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,6 @@\n   public static void checkDir(LocalFileSystem localFS, Path dir,\n                               FsPermission expected)\n   throws DiskErrorException, IOException {\n     mkdirsWithExistsAndPermissionCheck(localFS, dir, expected);\n-\n-    FileStatus stat \u003d localFS.getFileStatus(dir);\n-    FsPermission actual \u003d stat.getPermission();\n-\n-    if (!stat.isDirectory())\n-      throw new DiskErrorException(\"not a directory: \"+ dir.toString());\n-\n-    FsAction user \u003d actual.getUserAction();\n-    if (!user.implies(FsAction.READ))\n-      throw new DiskErrorException(\"directory is not readable: \"\n-                                   + dir.toString());\n-\n-    if (!user.implies(FsAction.WRITE))\n-      throw new DiskErrorException(\"directory is not writable: \"\n-                                   + dir.toString());\n-\n-    if (!user.implies(FsAction.EXECUTE))\n-      throw new DiskErrorException(\"directory is not listable: \"\n-                                   + dir.toString());\n+    checkDirAccess(localFS.pathToFile(dir));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void checkDir(LocalFileSystem localFS, Path dir,\n                              FsPermission expected)\n  throws DiskErrorException, IOException {\n    mkdirsWithExistsAndPermissionCheck(localFS, dir, expected);\n    checkDirAccess(localFS.pathToFile(dir));\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/DiskChecker.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static void checkDir(LocalFileSystem localFS, Path dir,\n                              FsPermission expected)\n  throws DiskErrorException, IOException {\n    mkdirsWithExistsAndPermissionCheck(localFS, dir, expected);\n\n    FileStatus stat \u003d localFS.getFileStatus(dir);\n    FsPermission actual \u003d stat.getPermission();\n\n    if (!stat.isDirectory())\n      throw new DiskErrorException(\"not a directory: \"+ dir.toString());\n\n    FsAction user \u003d actual.getUserAction();\n    if (!user.implies(FsAction.READ))\n      throw new DiskErrorException(\"directory is not readable: \"\n                                   + dir.toString());\n\n    if (!user.implies(FsAction.WRITE))\n      throw new DiskErrorException(\"directory is not writable: \"\n                                   + dir.toString());\n\n    if (!user.implies(FsAction.EXECUTE))\n      throw new DiskErrorException(\"directory is not listable: \"\n                                   + dir.toString());\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/DiskChecker.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/util/DiskChecker.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/DiskChecker.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static void checkDir(LocalFileSystem localFS, Path dir,\n                              FsPermission expected)\n  throws DiskErrorException, IOException {\n    mkdirsWithExistsAndPermissionCheck(localFS, dir, expected);\n\n    FileStatus stat \u003d localFS.getFileStatus(dir);\n    FsPermission actual \u003d stat.getPermission();\n\n    if (!stat.isDirectory())\n      throw new DiskErrorException(\"not a directory: \"+ dir.toString());\n\n    FsAction user \u003d actual.getUserAction();\n    if (!user.implies(FsAction.READ))\n      throw new DiskErrorException(\"directory is not readable: \"\n                                   + dir.toString());\n\n    if (!user.implies(FsAction.WRITE))\n      throw new DiskErrorException(\"directory is not writable: \"\n                                   + dir.toString());\n\n    if (!user.implies(FsAction.EXECUTE))\n      throw new DiskErrorException(\"directory is not listable: \"\n                                   + dir.toString());\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/util/DiskChecker.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/util/DiskChecker.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/util/DiskChecker.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static void checkDir(LocalFileSystem localFS, Path dir,\n                              FsPermission expected)\n  throws DiskErrorException, IOException {\n    mkdirsWithExistsAndPermissionCheck(localFS, dir, expected);\n\n    FileStatus stat \u003d localFS.getFileStatus(dir);\n    FsPermission actual \u003d stat.getPermission();\n\n    if (!stat.isDirectory())\n      throw new DiskErrorException(\"not a directory: \"+ dir.toString());\n\n    FsAction user \u003d actual.getUserAction();\n    if (!user.implies(FsAction.READ))\n      throw new DiskErrorException(\"directory is not readable: \"\n                                   + dir.toString());\n\n    if (!user.implies(FsAction.WRITE))\n      throw new DiskErrorException(\"directory is not writable: \"\n                                   + dir.toString());\n\n    if (!user.implies(FsAction.EXECUTE))\n      throw new DiskErrorException(\"directory is not listable: \"\n                                   + dir.toString());\n  }",
      "path": "common/src/java/org/apache/hadoop/util/DiskChecker.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/util/DiskChecker.java",
        "newPath": "common/src/java/org/apache/hadoop/util/DiskChecker.java"
      }
    },
    "7578282edce0eba3f24c96355c944c02156ece79": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-6585.  Add FileStatus#isDirectory and isFile.  Contributed by Eli Collins.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@949658 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/05/10 8:14 PM",
      "commitName": "7578282edce0eba3f24c96355c944c02156ece79",
      "commitAuthor": "Thomas White",
      "commitDateOld": "26/03/10 1:25 AM",
      "commitNameOld": "f4d31cd029f8369b8e41de2667f6ba2bd95ca701",
      "commitAuthorOld": "Christopher Douglas",
      "daysBetweenCommits": 65.78,
      "commitsBetweenForRepo": 69,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n   public static void checkDir(LocalFileSystem localFS, Path dir,\n                               FsPermission expected)\n   throws DiskErrorException, IOException {\n     mkdirsWithExistsAndPermissionCheck(localFS, dir, expected);\n \n     FileStatus stat \u003d localFS.getFileStatus(dir);\n     FsPermission actual \u003d stat.getPermission();\n \n-    if (!stat.isDir())\n+    if (!stat.isDirectory())\n       throw new DiskErrorException(\"not a directory: \"+ dir.toString());\n \n     FsAction user \u003d actual.getUserAction();\n     if (!user.implies(FsAction.READ))\n       throw new DiskErrorException(\"directory is not readable: \"\n                                    + dir.toString());\n \n     if (!user.implies(FsAction.WRITE))\n       throw new DiskErrorException(\"directory is not writable: \"\n                                    + dir.toString());\n \n     if (!user.implies(FsAction.EXECUTE))\n       throw new DiskErrorException(\"directory is not listable: \"\n                                    + dir.toString());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void checkDir(LocalFileSystem localFS, Path dir,\n                              FsPermission expected)\n  throws DiskErrorException, IOException {\n    mkdirsWithExistsAndPermissionCheck(localFS, dir, expected);\n\n    FileStatus stat \u003d localFS.getFileStatus(dir);\n    FsPermission actual \u003d stat.getPermission();\n\n    if (!stat.isDirectory())\n      throw new DiskErrorException(\"not a directory: \"+ dir.toString());\n\n    FsAction user \u003d actual.getUserAction();\n    if (!user.implies(FsAction.READ))\n      throw new DiskErrorException(\"directory is not readable: \"\n                                   + dir.toString());\n\n    if (!user.implies(FsAction.WRITE))\n      throw new DiskErrorException(\"directory is not writable: \"\n                                   + dir.toString());\n\n    if (!user.implies(FsAction.EXECUTE))\n      throw new DiskErrorException(\"directory is not listable: \"\n                                   + dir.toString());\n  }",
      "path": "src/java/org/apache/hadoop/util/DiskChecker.java",
      "extendedDetails": {}
    },
    "f4d31cd029f8369b8e41de2667f6ba2bd95ca701": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-6566. Add methods supporting, enforcing narrower permissions on local daemon directories.\nContributed by Arun Murthy and Luke Lu\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@927728 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "26/03/10 1:25 AM",
      "commitName": "f4d31cd029f8369b8e41de2667f6ba2bd95ca701",
      "commitAuthor": "Christopher Douglas",
      "diff": "@@ -0,0 +1,24 @@\n+  public static void checkDir(LocalFileSystem localFS, Path dir,\n+                              FsPermission expected)\n+  throws DiskErrorException, IOException {\n+    mkdirsWithExistsAndPermissionCheck(localFS, dir, expected);\n+\n+    FileStatus stat \u003d localFS.getFileStatus(dir);\n+    FsPermission actual \u003d stat.getPermission();\n+\n+    if (!stat.isDir())\n+      throw new DiskErrorException(\"not a directory: \"+ dir.toString());\n+\n+    FsAction user \u003d actual.getUserAction();\n+    if (!user.implies(FsAction.READ))\n+      throw new DiskErrorException(\"directory is not readable: \"\n+                                   + dir.toString());\n+\n+    if (!user.implies(FsAction.WRITE))\n+      throw new DiskErrorException(\"directory is not writable: \"\n+                                   + dir.toString());\n+\n+    if (!user.implies(FsAction.EXECUTE))\n+      throw new DiskErrorException(\"directory is not listable: \"\n+                                   + dir.toString());\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static void checkDir(LocalFileSystem localFS, Path dir,\n                              FsPermission expected)\n  throws DiskErrorException, IOException {\n    mkdirsWithExistsAndPermissionCheck(localFS, dir, expected);\n\n    FileStatus stat \u003d localFS.getFileStatus(dir);\n    FsPermission actual \u003d stat.getPermission();\n\n    if (!stat.isDir())\n      throw new DiskErrorException(\"not a directory: \"+ dir.toString());\n\n    FsAction user \u003d actual.getUserAction();\n    if (!user.implies(FsAction.READ))\n      throw new DiskErrorException(\"directory is not readable: \"\n                                   + dir.toString());\n\n    if (!user.implies(FsAction.WRITE))\n      throw new DiskErrorException(\"directory is not writable: \"\n                                   + dir.toString());\n\n    if (!user.implies(FsAction.EXECUTE))\n      throw new DiskErrorException(\"directory is not listable: \"\n                                   + dir.toString());\n  }",
      "path": "src/java/org/apache/hadoop/util/DiskChecker.java"
    }
  }
}