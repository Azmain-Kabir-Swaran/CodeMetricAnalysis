{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMAppAttemptMetrics.java",
  "functionName": "updateUsageMap",
  "functionId": "updateUsageMap___sourceMap-Map__String,Long____targetMap-Map__String,AtomicLong__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptMetrics.java",
  "functionStartLine": 197,
  "functionEndLine": 209,
  "numCommitsSeen": 15,
  "timeTaken": 2097,
  "changeHistory": [
    "dae65f3bef8ffa34d02a37041f1dfdfeeee91845"
  ],
  "changeHistoryShort": {
    "dae65f3bef8ffa34d02a37041f1dfdfeeee91845": "Yintroduced"
  },
  "changeHistoryDetails": {
    "dae65f3bef8ffa34d02a37041f1dfdfeeee91845": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6232. Update resource usage and preempted resource calculations to take into account all resource types. Contributed by Varun Vasudev.\n",
      "commitDate": "12/09/17 9:19 AM",
      "commitName": "dae65f3bef8ffa34d02a37041f1dfdfeeee91845",
      "commitAuthor": "Sunil G",
      "diff": "@@ -0,0 +1,13 @@\n+  private void updateUsageMap(Map\u003cString, Long\u003e sourceMap,\n+      Map\u003cString, AtomicLong\u003e targetMap) {\n+    for (Map.Entry\u003cString, Long\u003e entry : sourceMap.entrySet()) {\n+      AtomicLong resourceUsed;\n+      if (!targetMap.containsKey(entry.getKey())) {\n+        resourceUsed \u003d new AtomicLong(0);\n+        targetMap.put(entry.getKey(), resourceUsed);\n+\n+      }\n+      resourceUsed \u003d targetMap.get(entry.getKey());\n+      resourceUsed.set(entry.getValue());\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void updateUsageMap(Map\u003cString, Long\u003e sourceMap,\n      Map\u003cString, AtomicLong\u003e targetMap) {\n    for (Map.Entry\u003cString, Long\u003e entry : sourceMap.entrySet()) {\n      AtomicLong resourceUsed;\n      if (!targetMap.containsKey(entry.getKey())) {\n        resourceUsed \u003d new AtomicLong(0);\n        targetMap.put(entry.getKey(), resourceUsed);\n\n      }\n      resourceUsed \u003d targetMap.get(entry.getKey());\n      resourceUsed.set(entry.getValue());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptMetrics.java"
    }
  }
}