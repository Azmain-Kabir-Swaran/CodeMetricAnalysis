{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NMTimelinePublisher.java",
  "functionName": "publishLocalizationEvent",
  "functionId": "publishLocalizationEvent___event-LocalizationEvent",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/timelineservice/NMTimelinePublisher.java",
  "functionStartLine": 483,
  "functionEndLine": 499,
  "numCommitsSeen": 28,
  "timeTaken": 1949,
  "changeHistory": [
    "2064ca015d1584263aac0cc20c60b925a3aff612",
    "e6fcfe28e304062c7d09231db757acb2953703ce",
    "84c35ac6c4a76c31d9bf9c87b87ed29394564611",
    "89e5c44f9e891a3579384c3fa3766937cd4970f1",
    "477a30f536277bf95d7181bf1b2fdda52d83bf51"
  ],
  "changeHistoryShort": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": "Ybodychange",
    "e6fcfe28e304062c7d09231db757acb2953703ce": "Ybodychange",
    "84c35ac6c4a76c31d9bf9c87b87ed29394564611": "Ybodychange",
    "89e5c44f9e891a3579384c3fa3766937cd4970f1": "Ybodychange",
    "477a30f536277bf95d7181bf1b2fdda52d83bf51": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9349.  Changed logging to use slf4j api.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "15/03/19 4:20 PM",
      "commitName": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "05/02/19 12:18 AM",
      "commitNameOld": "e3ec18b0c4fb93bd00c12d90057c2b982ca8a676",
      "commitAuthorOld": "Rohith Sharma K S",
      "daysBetweenCommits": 38.63,
      "commitsBetweenForRepo": 349,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,17 @@\n   public void publishLocalizationEvent(LocalizationEvent event) {\n     // publish only when the desired event is received\n     switch (event.getType()) {\n     case CONTAINER_RESOURCES_LOCALIZED:\n       publishContainerLocalizationEvent((ContainerLocalizationEvent) event,\n           ContainerMetricsConstants.LOCALIZATION_FINISHED_EVENT_TYPE);\n       break;\n     case LOCALIZE_CONTAINER_RESOURCES:\n       publishContainerLocalizationEvent((ContainerLocalizationEvent) event,\n           ContainerMetricsConstants.LOCALIZATION_START_EVENT_TYPE);\n       break;\n     default:\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(event.getType()\n-            + \" is not a desired LocalizationEvent which needs to be published\"\n-            + \" by NMTimelinePublisher\");\n-      }\n+      LOG.debug(\"{} is not a desired LocalizationEvent which needs to be\"\n+            + \" published by NMTimelinePublisher\", event.getType());\n       break;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void publishLocalizationEvent(LocalizationEvent event) {\n    // publish only when the desired event is received\n    switch (event.getType()) {\n    case CONTAINER_RESOURCES_LOCALIZED:\n      publishContainerLocalizationEvent((ContainerLocalizationEvent) event,\n          ContainerMetricsConstants.LOCALIZATION_FINISHED_EVENT_TYPE);\n      break;\n    case LOCALIZE_CONTAINER_RESOURCES:\n      publishContainerLocalizationEvent((ContainerLocalizationEvent) event,\n          ContainerMetricsConstants.LOCALIZATION_START_EVENT_TYPE);\n      break;\n    default:\n      LOG.debug(\"{} is not a desired LocalizationEvent which needs to be\"\n            + \" published by NMTimelinePublisher\", event.getType());\n      break;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/timelineservice/NMTimelinePublisher.java",
      "extendedDetails": {}
    },
    "e6fcfe28e304062c7d09231db757acb2953703ce": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5576. Allow resource localization while container is running. Contributed by Jian He.\n",
      "commitDate": "06/09/16 7:31 AM",
      "commitName": "e6fcfe28e304062c7d09231db757acb2953703ce",
      "commitAuthor": "Varun Vasudev",
      "commitDateOld": "15/07/16 2:04 AM",
      "commitNameOld": "b5ee7dbd8dde756bc556f823327328f511048021",
      "commitAuthorOld": "Naganarasimha",
      "daysBetweenCommits": 53.23,
      "commitsBetweenForRepo": 339,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   public void publishLocalizationEvent(LocalizationEvent event) {\n     // publish only when the desired event is received\n     switch (event.getType()) {\n     case CONTAINER_RESOURCES_LOCALIZED:\n       publishContainerLocalizationEvent((ContainerLocalizationEvent) event,\n           ContainerMetricsConstants.LOCALIZATION_FINISHED_EVENT_TYPE);\n       break;\n-    case INIT_CONTAINER_RESOURCES:\n+    case LOCALIZE_CONTAINER_RESOURCES:\n       publishContainerLocalizationEvent((ContainerLocalizationEvent) event,\n           ContainerMetricsConstants.LOCALIZATION_START_EVENT_TYPE);\n       break;\n     default:\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(event.getType()\n             + \" is not a desired LocalizationEvent which needs to be published\"\n             + \" by NMTimelinePublisher\");\n       }\n       break;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void publishLocalizationEvent(LocalizationEvent event) {\n    // publish only when the desired event is received\n    switch (event.getType()) {\n    case CONTAINER_RESOURCES_LOCALIZED:\n      publishContainerLocalizationEvent((ContainerLocalizationEvent) event,\n          ContainerMetricsConstants.LOCALIZATION_FINISHED_EVENT_TYPE);\n      break;\n    case LOCALIZE_CONTAINER_RESOURCES:\n      publishContainerLocalizationEvent((ContainerLocalizationEvent) event,\n          ContainerMetricsConstants.LOCALIZATION_START_EVENT_TYPE);\n      break;\n    default:\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(event.getType()\n            + \" is not a desired LocalizationEvent which needs to be published\"\n            + \" by NMTimelinePublisher\");\n      }\n      break;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/timelineservice/NMTimelinePublisher.java",
      "extendedDetails": {}
    },
    "84c35ac6c4a76c31d9bf9c87b87ed29394564611": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4711. NM is going down with NPE\u0027s due to single thread processing of events by Timeline client (Naganarasimha G R via sjlee)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "84c35ac6c4a76c31d9bf9c87b87ed29394564611",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "6f6cc647d6e77f6cc4c66e0534f8c73bc1612a1b",
      "commitAuthorOld": "Varun Saxena",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,20 @@\n   public void publishLocalizationEvent(LocalizationEvent event) {\n     // publish only when the desired event is received\n     switch (event.getType()) {\n     case CONTAINER_RESOURCES_LOCALIZED:\n-    case INIT_CONTAINER_RESOURCES:\n-      dispatcher.getEventHandler().handle(event);\n+      publishContainerLocalizationEvent((ContainerLocalizationEvent) event,\n+          ContainerMetricsConstants.LOCALIZATION_FINISHED_EVENT_TYPE);\n       break;\n-\n+    case INIT_CONTAINER_RESOURCES:\n+      publishContainerLocalizationEvent((ContainerLocalizationEvent) event,\n+          ContainerMetricsConstants.LOCALIZATION_START_EVENT_TYPE);\n+      break;\n     default:\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(event.getType()\n             + \" is not a desired LocalizationEvent which needs to be published\"\n             + \" by NMTimelinePublisher\");\n       }\n       break;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void publishLocalizationEvent(LocalizationEvent event) {\n    // publish only when the desired event is received\n    switch (event.getType()) {\n    case CONTAINER_RESOURCES_LOCALIZED:\n      publishContainerLocalizationEvent((ContainerLocalizationEvent) event,\n          ContainerMetricsConstants.LOCALIZATION_FINISHED_EVENT_TYPE);\n      break;\n    case INIT_CONTAINER_RESOURCES:\n      publishContainerLocalizationEvent((ContainerLocalizationEvent) event,\n          ContainerMetricsConstants.LOCALIZATION_START_EVENT_TYPE);\n      break;\n    default:\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(event.getType()\n            + \" is not a desired LocalizationEvent which needs to be published\"\n            + \" by NMTimelinePublisher\");\n      }\n      break;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/timelineservice/NMTimelinePublisher.java",
      "extendedDetails": {}
    },
    "89e5c44f9e891a3579384c3fa3766937cd4970f1": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4356. Ensure the timeline service v.2 is disabled cleanly and has no\nimpact when it\u0027s turned off. Contributed by Sangjin Lee.\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "89e5c44f9e891a3579384c3fa3766937cd4970f1",
      "commitAuthor": "Li Lu",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "477a30f536277bf95d7181bf1b2fdda52d83bf51",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 21,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,17 @@\n   public void publishLocalizationEvent(LocalizationEvent event) {\n-    if (!publishSystemMetrics) {\n-      return;\n-    }\n     // publish only when the desired event is received\n     switch (event.getType()) {\n     case CONTAINER_RESOURCES_LOCALIZED:\n     case INIT_CONTAINER_RESOURCES:\n       dispatcher.getEventHandler().handle(event);\n       break;\n \n     default:\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(event.getType()\n             + \" is not a desired LocalizationEvent which needs to be published\"\n             + \" by NMTimelinePublisher\");\n       }\n       break;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void publishLocalizationEvent(LocalizationEvent event) {\n    // publish only when the desired event is received\n    switch (event.getType()) {\n    case CONTAINER_RESOURCES_LOCALIZED:\n    case INIT_CONTAINER_RESOURCES:\n      dispatcher.getEventHandler().handle(event);\n      break;\n\n    default:\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(event.getType()\n            + \" is not a desired LocalizationEvent which needs to be published\"\n            + \" by NMTimelinePublisher\");\n      }\n      break;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/timelineservice/NMTimelinePublisher.java",
      "extendedDetails": {}
    },
    "477a30f536277bf95d7181bf1b2fdda52d83bf51": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3045. Implement NM writing container lifecycle events to Timeline Service v2. Contributed by Naganarasimha G R.\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "477a30f536277bf95d7181bf1b2fdda52d83bf51",
      "commitAuthor": "Junping Du",
      "diff": "@@ -0,0 +1,20 @@\n+  public void publishLocalizationEvent(LocalizationEvent event) {\n+    if (!publishSystemMetrics) {\n+      return;\n+    }\n+    // publish only when the desired event is received\n+    switch (event.getType()) {\n+    case CONTAINER_RESOURCES_LOCALIZED:\n+    case INIT_CONTAINER_RESOURCES:\n+      dispatcher.getEventHandler().handle(event);\n+      break;\n+\n+    default:\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(event.getType()\n+            + \" is not a desired LocalizationEvent which needs to be published\"\n+            + \" by NMTimelinePublisher\");\n+      }\n+      break;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void publishLocalizationEvent(LocalizationEvent event) {\n    if (!publishSystemMetrics) {\n      return;\n    }\n    // publish only when the desired event is received\n    switch (event.getType()) {\n    case CONTAINER_RESOURCES_LOCALIZED:\n    case INIT_CONTAINER_RESOURCES:\n      dispatcher.getEventHandler().handle(event);\n      break;\n\n    default:\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(event.getType()\n            + \" is not a desired LocalizationEvent which needs to be published\"\n            + \" by NMTimelinePublisher\");\n      }\n      break;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/timelineservice/NMTimelinePublisher.java"
    }
  }
}