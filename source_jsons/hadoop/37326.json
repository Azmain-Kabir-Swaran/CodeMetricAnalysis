{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CapacitySchedulerPlanFollower.java",
  "functionName": "getReservationQueueResourceIfExists",
  "functionId": "getReservationQueueResourceIfExists___plan-Plan__reservationId-ReservationId",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/reservation/CapacitySchedulerPlanFollower.java",
  "functionStartLine": 144,
  "functionEndLine": 153,
  "numCommitsSeen": 7,
  "timeTaken": 1452,
  "changeHistory": [
    "e7257acd8a7adb74d81cd1d009d4a99f023ed844"
  ],
  "changeHistoryShort": {
    "e7257acd8a7adb74d81cd1d009d4a99f023ed844": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e7257acd8a7adb74d81cd1d009d4a99f023ed844": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2998. Abstract out scheduler independent PlanFollower components. (Anubhav Dhoot via kasha)\n",
      "commitDate": "30/12/14 7:55 PM",
      "commitName": "e7257acd8a7adb74d81cd1d009d4a99f023ed844",
      "commitAuthor": "Karthik Kambatla",
      "diff": "@@ -0,0 +1,10 @@\n+  protected Resource getReservationQueueResourceIfExists(Plan plan,\n+      ReservationId reservationId) {\n+    CSQueue resQueue \u003d cs.getQueue(reservationId.toString());\n+    Resource reservationResource \u003d null;\n+    if (resQueue !\u003d null) {\n+      reservationResource \u003d Resources.multiply(cs.getClusterResource(),\n+          resQueue.getAbsoluteCapacity());\n+    }\n+    return reservationResource;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected Resource getReservationQueueResourceIfExists(Plan plan,\n      ReservationId reservationId) {\n    CSQueue resQueue \u003d cs.getQueue(reservationId.toString());\n    Resource reservationResource \u003d null;\n    if (resQueue !\u003d null) {\n      reservationResource \u003d Resources.multiply(cs.getClusterResource(),\n          resQueue.getAbsoluteCapacity());\n    }\n    return reservationResource;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/reservation/CapacitySchedulerPlanFollower.java"
    }
  }
}