{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NetworkBinding.java",
  "functionName": "logDnsLookup",
  "functionId": "logDnsLookup___conf-Configuration",
  "sourceFilePath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/impl/NetworkBinding.java",
  "functionStartLine": 137,
  "functionEndLine": 155,
  "numCommitsSeen": 6,
  "timeTaken": 1309,
  "changeHistory": [
    "56350664a76b1ea8e1a942a251880ae3fab12f0c"
  ],
  "changeHistoryShort": {
    "56350664a76b1ea8e1a942a251880ae3fab12f0c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "56350664a76b1ea8e1a942a251880ae3fab12f0c": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-13873. log DNS addresses on s3a initialization.\n\nContributed by Mukund Thakur.\n\nIf you set the log org.apache.hadoop.fs.s3a.impl.NetworkBinding\nto DEBUG, then when the S3A bucket probe is made -the DNS address\nof the S3 endpoint is calculated and printed.\n\nThis is useful to see if a large set of processes are all using\nthe same IP address from the pool of load balancers to which AWS\ndirects clients when an AWS S3 endpoint is resolved.\n\nThis can have implications for performance: if all clients\naccess the same load balancer performance may be suboptimal.\n\nNote: if bucket probes are disabled, fs.s3a.bucket.probe \u003d 0,\nthe DNS logging does not take place.\n\nChange-Id: I21b3ac429dc0b543f03e357fdeb94c2d2a328dd8\n",
      "commitDate": "17/04/20 6:15 AM",
      "commitName": "56350664a76b1ea8e1a942a251880ae3fab12f0c",
      "commitAuthor": "Mukund Thakur",
      "diff": "@@ -0,0 +1,19 @@\n+  public static void logDnsLookup(Configuration conf) {\n+    String endPoint \u003d conf.getTrimmed(ENDPOINT, DEFAULT_ENDPOINT);\n+    String hostName \u003d endPoint;\n+    if (!endPoint.isEmpty() \u0026\u0026 LOG.isDebugEnabled()) {\n+      // Updating the hostname if there is a scheme present.\n+      if (endPoint.contains(\"://\")) {\n+        try {\n+          URI uri \u003d new URI(endPoint);\n+          hostName \u003d uri.getHost();\n+        } catch (URISyntaxException e) {\n+          LOG.debug(\"Got URISyntaxException, ignoring\");\n+        }\n+      }\n+      LOG.debug(\"Bucket endpoint : {}, Hostname : {}, DNSAddress : {}\",\n+              endPoint,\n+              hostName,\n+              NetUtils.normalizeHostName(hostName));\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static void logDnsLookup(Configuration conf) {\n    String endPoint \u003d conf.getTrimmed(ENDPOINT, DEFAULT_ENDPOINT);\n    String hostName \u003d endPoint;\n    if (!endPoint.isEmpty() \u0026\u0026 LOG.isDebugEnabled()) {\n      // Updating the hostname if there is a scheme present.\n      if (endPoint.contains(\"://\")) {\n        try {\n          URI uri \u003d new URI(endPoint);\n          hostName \u003d uri.getHost();\n        } catch (URISyntaxException e) {\n          LOG.debug(\"Got URISyntaxException, ignoring\");\n        }\n      }\n      LOG.debug(\"Bucket endpoint : {}, Hostname : {}, DNSAddress : {}\",\n              endPoint,\n              hostName,\n              NetUtils.normalizeHostName(hostName));\n    }\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/impl/NetworkBinding.java"
    }
  }
}