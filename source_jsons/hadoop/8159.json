{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FileJournalManager.java",
  "functionName": "matchEditLogs",
  "functionId": "matchEditLogs___filesInStorage-File[]__forPurging-boolean",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FileJournalManager.java",
  "functionStartLine": 313,
  "functionEndLine": 366,
  "numCommitsSeen": 97,
  "timeTaken": 4516,
  "changeHistory": [
    "6ae2a0d048e133b43249c248a75a4d77d9abb80d",
    "b9f6d0c956f0278c8b9b83e05b523a442a730ebb",
    "2bb650146ddb36830ea9c0d248fd3df1f6aa7534",
    "14556cc5d8fee8f8a846e4f65572828553be386c",
    "74d4573a23db5586c6e47ff2277aa7c35237da34",
    "bdc3720d5b67a1c8fc2dfb29be16e4155c0e7f15",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "23762da4fa17ce6ea7b70722147977123a28a7e6",
    "28e6a4e44a3e920dcaf858f9a74a6358226b3a63"
  ],
  "changeHistoryShort": {
    "6ae2a0d048e133b43249c248a75a4d77d9abb80d": "Ybodychange",
    "b9f6d0c956f0278c8b9b83e05b523a442a730ebb": "Ybodychange",
    "2bb650146ddb36830ea9c0d248fd3df1f6aa7534": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
    "14556cc5d8fee8f8a846e4f65572828553be386c": "Ybodychange",
    "74d4573a23db5586c6e47ff2277aa7c35237da34": "Ybodychange",
    "bdc3720d5b67a1c8fc2dfb29be16e4155c0e7f15": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "23762da4fa17ce6ea7b70722147977123a28a7e6": "Ymultichange(Ymovefromfile,Yreturntypechange,Ybodychange)",
    "28e6a4e44a3e920dcaf858f9a74a6358226b3a63": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6ae2a0d048e133b43249c248a75a4d77d9abb80d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8249. Separate HdfsConstants into the client and the server side class. Contributed by Haohui Mai.\n",
      "commitDate": "02/05/15 10:03 AM",
      "commitName": "6ae2a0d048e133b43249c248a75a4d77d9abb80d",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "01/04/15 12:54 PM",
      "commitNameOld": "ed72daa5df97669906234e8ac9a406d78136b206",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 30.88,
      "commitsBetweenForRepo": 266,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,54 +1,54 @@\n   private static List\u003cEditLogFile\u003e matchEditLogs(File[] filesInStorage,\n       boolean forPurging) {\n     List\u003cEditLogFile\u003e ret \u003d Lists.newArrayList();\n     for (File f : filesInStorage) {\n       String name \u003d f.getName();\n       // Check for edits\n       Matcher editsMatch \u003d EDITS_REGEX.matcher(name);\n       if (editsMatch.matches()) {\n         try {\n           long startTxId \u003d Long.parseLong(editsMatch.group(1));\n           long endTxId \u003d Long.parseLong(editsMatch.group(2));\n           ret.add(new EditLogFile(f, startTxId, endTxId));\n           continue;\n         } catch (NumberFormatException nfe) {\n           LOG.error(\"Edits file \" + f + \" has improperly formatted \" +\n                     \"transaction ID\");\n           // skip\n         }\n       }\n       \n       // Check for in-progress edits\n       Matcher inProgressEditsMatch \u003d EDITS_INPROGRESS_REGEX.matcher(name);\n       if (inProgressEditsMatch.matches()) {\n         try {\n           long startTxId \u003d Long.parseLong(inProgressEditsMatch.group(1));\n           ret.add(\n-              new EditLogFile(f, startTxId, HdfsConstants.INVALID_TXID, true));\n+              new EditLogFile(f, startTxId, HdfsServerConstants.INVALID_TXID, true));\n           continue;\n         } catch (NumberFormatException nfe) {\n           LOG.error(\"In-progress edits file \" + f + \" has improperly \" +\n                     \"formatted transaction ID\");\n           // skip\n         }\n       }\n       if (forPurging) {\n         // Check for in-progress stale edits\n         Matcher staleInprogressEditsMatch \u003d EDITS_INPROGRESS_STALE_REGEX\n             .matcher(name);\n         if (staleInprogressEditsMatch.matches()) {\n           try {\n             long startTxId \u003d Long.parseLong(staleInprogressEditsMatch.group(1));\n-            ret.add(new EditLogFile(f, startTxId, HdfsConstants.INVALID_TXID,\n+            ret.add(new EditLogFile(f, startTxId, HdfsServerConstants.INVALID_TXID,\n                 true));\n             continue;\n           } catch (NumberFormatException nfe) {\n             LOG.error(\"In-progress stale edits file \" + f + \" has improperly \"\n                 + \"formatted transaction ID\");\n             // skip\n           }\n         }\n       }\n     }\n     return ret;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static List\u003cEditLogFile\u003e matchEditLogs(File[] filesInStorage,\n      boolean forPurging) {\n    List\u003cEditLogFile\u003e ret \u003d Lists.newArrayList();\n    for (File f : filesInStorage) {\n      String name \u003d f.getName();\n      // Check for edits\n      Matcher editsMatch \u003d EDITS_REGEX.matcher(name);\n      if (editsMatch.matches()) {\n        try {\n          long startTxId \u003d Long.parseLong(editsMatch.group(1));\n          long endTxId \u003d Long.parseLong(editsMatch.group(2));\n          ret.add(new EditLogFile(f, startTxId, endTxId));\n          continue;\n        } catch (NumberFormatException nfe) {\n          LOG.error(\"Edits file \" + f + \" has improperly formatted \" +\n                    \"transaction ID\");\n          // skip\n        }\n      }\n      \n      // Check for in-progress edits\n      Matcher inProgressEditsMatch \u003d EDITS_INPROGRESS_REGEX.matcher(name);\n      if (inProgressEditsMatch.matches()) {\n        try {\n          long startTxId \u003d Long.parseLong(inProgressEditsMatch.group(1));\n          ret.add(\n              new EditLogFile(f, startTxId, HdfsServerConstants.INVALID_TXID, true));\n          continue;\n        } catch (NumberFormatException nfe) {\n          LOG.error(\"In-progress edits file \" + f + \" has improperly \" +\n                    \"formatted transaction ID\");\n          // skip\n        }\n      }\n      if (forPurging) {\n        // Check for in-progress stale edits\n        Matcher staleInprogressEditsMatch \u003d EDITS_INPROGRESS_STALE_REGEX\n            .matcher(name);\n        if (staleInprogressEditsMatch.matches()) {\n          try {\n            long startTxId \u003d Long.parseLong(staleInprogressEditsMatch.group(1));\n            ret.add(new EditLogFile(f, startTxId, HdfsServerConstants.INVALID_TXID,\n                true));\n            continue;\n          } catch (NumberFormatException nfe) {\n            LOG.error(\"In-progress stale edits file \" + f + \" has improperly \"\n                + \"formatted transaction ID\");\n            // skip\n          }\n        }\n      }\n    }\n    return ret;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FileJournalManager.java",
      "extendedDetails": {}
    },
    "b9f6d0c956f0278c8b9b83e05b523a442a730ebb": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7515. Fix new findbugs warnings in hadoop-hdfs. Contributed by Haohui Mai.\n",
      "commitDate": "11/12/14 12:36 PM",
      "commitName": "b9f6d0c956f0278c8b9b83e05b523a442a730ebb",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "02/09/14 2:02 PM",
      "commitNameOld": "faa4455be512e070fa420084be8d1be5c72f3b08",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 99.98,
      "commitsBetweenForRepo": 944,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,54 +1,54 @@\n   private static List\u003cEditLogFile\u003e matchEditLogs(File[] filesInStorage,\n       boolean forPurging) {\n     List\u003cEditLogFile\u003e ret \u003d Lists.newArrayList();\n     for (File f : filesInStorage) {\n       String name \u003d f.getName();\n       // Check for edits\n       Matcher editsMatch \u003d EDITS_REGEX.matcher(name);\n       if (editsMatch.matches()) {\n         try {\n           long startTxId \u003d Long.parseLong(editsMatch.group(1));\n           long endTxId \u003d Long.parseLong(editsMatch.group(2));\n           ret.add(new EditLogFile(f, startTxId, endTxId));\n           continue;\n         } catch (NumberFormatException nfe) {\n           LOG.error(\"Edits file \" + f + \" has improperly formatted \" +\n                     \"transaction ID\");\n           // skip\n         }\n       }\n       \n       // Check for in-progress edits\n       Matcher inProgressEditsMatch \u003d EDITS_INPROGRESS_REGEX.matcher(name);\n       if (inProgressEditsMatch.matches()) {\n         try {\n           long startTxId \u003d Long.parseLong(inProgressEditsMatch.group(1));\n           ret.add(\n               new EditLogFile(f, startTxId, HdfsConstants.INVALID_TXID, true));\n           continue;\n         } catch (NumberFormatException nfe) {\n           LOG.error(\"In-progress edits file \" + f + \" has improperly \" +\n                     \"formatted transaction ID\");\n           // skip\n         }\n       }\n       if (forPurging) {\n         // Check for in-progress stale edits\n         Matcher staleInprogressEditsMatch \u003d EDITS_INPROGRESS_STALE_REGEX\n             .matcher(name);\n         if (staleInprogressEditsMatch.matches()) {\n           try {\n-            long startTxId \u003d Long.valueOf(staleInprogressEditsMatch.group(1));\n+            long startTxId \u003d Long.parseLong(staleInprogressEditsMatch.group(1));\n             ret.add(new EditLogFile(f, startTxId, HdfsConstants.INVALID_TXID,\n                 true));\n             continue;\n           } catch (NumberFormatException nfe) {\n             LOG.error(\"In-progress stale edits file \" + f + \" has improperly \"\n                 + \"formatted transaction ID\");\n             // skip\n           }\n         }\n       }\n     }\n     return ret;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static List\u003cEditLogFile\u003e matchEditLogs(File[] filesInStorage,\n      boolean forPurging) {\n    List\u003cEditLogFile\u003e ret \u003d Lists.newArrayList();\n    for (File f : filesInStorage) {\n      String name \u003d f.getName();\n      // Check for edits\n      Matcher editsMatch \u003d EDITS_REGEX.matcher(name);\n      if (editsMatch.matches()) {\n        try {\n          long startTxId \u003d Long.parseLong(editsMatch.group(1));\n          long endTxId \u003d Long.parseLong(editsMatch.group(2));\n          ret.add(new EditLogFile(f, startTxId, endTxId));\n          continue;\n        } catch (NumberFormatException nfe) {\n          LOG.error(\"Edits file \" + f + \" has improperly formatted \" +\n                    \"transaction ID\");\n          // skip\n        }\n      }\n      \n      // Check for in-progress edits\n      Matcher inProgressEditsMatch \u003d EDITS_INPROGRESS_REGEX.matcher(name);\n      if (inProgressEditsMatch.matches()) {\n        try {\n          long startTxId \u003d Long.parseLong(inProgressEditsMatch.group(1));\n          ret.add(\n              new EditLogFile(f, startTxId, HdfsConstants.INVALID_TXID, true));\n          continue;\n        } catch (NumberFormatException nfe) {\n          LOG.error(\"In-progress edits file \" + f + \" has improperly \" +\n                    \"formatted transaction ID\");\n          // skip\n        }\n      }\n      if (forPurging) {\n        // Check for in-progress stale edits\n        Matcher staleInprogressEditsMatch \u003d EDITS_INPROGRESS_STALE_REGEX\n            .matcher(name);\n        if (staleInprogressEditsMatch.matches()) {\n          try {\n            long startTxId \u003d Long.parseLong(staleInprogressEditsMatch.group(1));\n            ret.add(new EditLogFile(f, startTxId, HdfsConstants.INVALID_TXID,\n                true));\n            continue;\n          } catch (NumberFormatException nfe) {\n            LOG.error(\"In-progress stale edits file \" + f + \" has improperly \"\n                + \"formatted transaction ID\");\n            // skip\n          }\n        }\n      }\n    }\n    return ret;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FileJournalManager.java",
      "extendedDetails": {}
    },
    "2bb650146ddb36830ea9c0d248fd3df1f6aa7534": {
      "type": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
      "commitMessage": "HDFS-5919. FileJournalManager doesn\u0027t purge empty and corrupt inprogress edits files (vinayakumarb)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1613355 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/07/14 12:02 AM",
      "commitName": "2bb650146ddb36830ea9c0d248fd3df1f6aa7534",
      "commitAuthor": "Vinayakumar B",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-5919. FileJournalManager doesn\u0027t purge empty and corrupt inprogress edits files (vinayakumarb)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1613355 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "25/07/14 12:02 AM",
          "commitName": "2bb650146ddb36830ea9c0d248fd3df1f6aa7534",
          "commitAuthor": "Vinayakumar B",
          "commitDateOld": "13/06/14 7:14 PM",
          "commitNameOld": "d18af7edd494ca6de1849da6ee30997c035eb35b",
          "commitAuthorOld": "Aaron Myers",
          "daysBetweenCommits": 41.2,
          "commitsBetweenForRepo": 292,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,34 +1,54 @@\n-  static List\u003cEditLogFile\u003e matchEditLogs(File[] filesInStorage) {\n+  private static List\u003cEditLogFile\u003e matchEditLogs(File[] filesInStorage,\n+      boolean forPurging) {\n     List\u003cEditLogFile\u003e ret \u003d Lists.newArrayList();\n     for (File f : filesInStorage) {\n       String name \u003d f.getName();\n       // Check for edits\n       Matcher editsMatch \u003d EDITS_REGEX.matcher(name);\n       if (editsMatch.matches()) {\n         try {\n           long startTxId \u003d Long.parseLong(editsMatch.group(1));\n           long endTxId \u003d Long.parseLong(editsMatch.group(2));\n           ret.add(new EditLogFile(f, startTxId, endTxId));\n+          continue;\n         } catch (NumberFormatException nfe) {\n           LOG.error(\"Edits file \" + f + \" has improperly formatted \" +\n                     \"transaction ID\");\n           // skip\n         }\n       }\n       \n       // Check for in-progress edits\n       Matcher inProgressEditsMatch \u003d EDITS_INPROGRESS_REGEX.matcher(name);\n       if (inProgressEditsMatch.matches()) {\n         try {\n           long startTxId \u003d Long.parseLong(inProgressEditsMatch.group(1));\n           ret.add(\n               new EditLogFile(f, startTxId, HdfsConstants.INVALID_TXID, true));\n+          continue;\n         } catch (NumberFormatException nfe) {\n           LOG.error(\"In-progress edits file \" + f + \" has improperly \" +\n                     \"formatted transaction ID\");\n           // skip\n         }\n       }\n+      if (forPurging) {\n+        // Check for in-progress stale edits\n+        Matcher staleInprogressEditsMatch \u003d EDITS_INPROGRESS_STALE_REGEX\n+            .matcher(name);\n+        if (staleInprogressEditsMatch.matches()) {\n+          try {\n+            long startTxId \u003d Long.valueOf(staleInprogressEditsMatch.group(1));\n+            ret.add(new EditLogFile(f, startTxId, HdfsConstants.INVALID_TXID,\n+                true));\n+            continue;\n+          } catch (NumberFormatException nfe) {\n+            LOG.error(\"In-progress stale edits file \" + f + \" has improperly \"\n+                + \"formatted transaction ID\");\n+            // skip\n+          }\n+        }\n+      }\n     }\n     return ret;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static List\u003cEditLogFile\u003e matchEditLogs(File[] filesInStorage,\n      boolean forPurging) {\n    List\u003cEditLogFile\u003e ret \u003d Lists.newArrayList();\n    for (File f : filesInStorage) {\n      String name \u003d f.getName();\n      // Check for edits\n      Matcher editsMatch \u003d EDITS_REGEX.matcher(name);\n      if (editsMatch.matches()) {\n        try {\n          long startTxId \u003d Long.parseLong(editsMatch.group(1));\n          long endTxId \u003d Long.parseLong(editsMatch.group(2));\n          ret.add(new EditLogFile(f, startTxId, endTxId));\n          continue;\n        } catch (NumberFormatException nfe) {\n          LOG.error(\"Edits file \" + f + \" has improperly formatted \" +\n                    \"transaction ID\");\n          // skip\n        }\n      }\n      \n      // Check for in-progress edits\n      Matcher inProgressEditsMatch \u003d EDITS_INPROGRESS_REGEX.matcher(name);\n      if (inProgressEditsMatch.matches()) {\n        try {\n          long startTxId \u003d Long.parseLong(inProgressEditsMatch.group(1));\n          ret.add(\n              new EditLogFile(f, startTxId, HdfsConstants.INVALID_TXID, true));\n          continue;\n        } catch (NumberFormatException nfe) {\n          LOG.error(\"In-progress edits file \" + f + \" has improperly \" +\n                    \"formatted transaction ID\");\n          // skip\n        }\n      }\n      if (forPurging) {\n        // Check for in-progress stale edits\n        Matcher staleInprogressEditsMatch \u003d EDITS_INPROGRESS_STALE_REGEX\n            .matcher(name);\n        if (staleInprogressEditsMatch.matches()) {\n          try {\n            long startTxId \u003d Long.valueOf(staleInprogressEditsMatch.group(1));\n            ret.add(new EditLogFile(f, startTxId, HdfsConstants.INVALID_TXID,\n                true));\n            continue;\n          } catch (NumberFormatException nfe) {\n            LOG.error(\"In-progress stale edits file \" + f + \" has improperly \"\n                + \"formatted transaction ID\");\n            // skip\n          }\n        }\n      }\n    }\n    return ret;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FileJournalManager.java",
          "extendedDetails": {
            "oldValue": "[filesInStorage-File[]]",
            "newValue": "[filesInStorage-File[], forPurging-boolean]"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-5919. FileJournalManager doesn\u0027t purge empty and corrupt inprogress edits files (vinayakumarb)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1613355 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "25/07/14 12:02 AM",
          "commitName": "2bb650146ddb36830ea9c0d248fd3df1f6aa7534",
          "commitAuthor": "Vinayakumar B",
          "commitDateOld": "13/06/14 7:14 PM",
          "commitNameOld": "d18af7edd494ca6de1849da6ee30997c035eb35b",
          "commitAuthorOld": "Aaron Myers",
          "daysBetweenCommits": 41.2,
          "commitsBetweenForRepo": 292,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,34 +1,54 @@\n-  static List\u003cEditLogFile\u003e matchEditLogs(File[] filesInStorage) {\n+  private static List\u003cEditLogFile\u003e matchEditLogs(File[] filesInStorage,\n+      boolean forPurging) {\n     List\u003cEditLogFile\u003e ret \u003d Lists.newArrayList();\n     for (File f : filesInStorage) {\n       String name \u003d f.getName();\n       // Check for edits\n       Matcher editsMatch \u003d EDITS_REGEX.matcher(name);\n       if (editsMatch.matches()) {\n         try {\n           long startTxId \u003d Long.parseLong(editsMatch.group(1));\n           long endTxId \u003d Long.parseLong(editsMatch.group(2));\n           ret.add(new EditLogFile(f, startTxId, endTxId));\n+          continue;\n         } catch (NumberFormatException nfe) {\n           LOG.error(\"Edits file \" + f + \" has improperly formatted \" +\n                     \"transaction ID\");\n           // skip\n         }\n       }\n       \n       // Check for in-progress edits\n       Matcher inProgressEditsMatch \u003d EDITS_INPROGRESS_REGEX.matcher(name);\n       if (inProgressEditsMatch.matches()) {\n         try {\n           long startTxId \u003d Long.parseLong(inProgressEditsMatch.group(1));\n           ret.add(\n               new EditLogFile(f, startTxId, HdfsConstants.INVALID_TXID, true));\n+          continue;\n         } catch (NumberFormatException nfe) {\n           LOG.error(\"In-progress edits file \" + f + \" has improperly \" +\n                     \"formatted transaction ID\");\n           // skip\n         }\n       }\n+      if (forPurging) {\n+        // Check for in-progress stale edits\n+        Matcher staleInprogressEditsMatch \u003d EDITS_INPROGRESS_STALE_REGEX\n+            .matcher(name);\n+        if (staleInprogressEditsMatch.matches()) {\n+          try {\n+            long startTxId \u003d Long.valueOf(staleInprogressEditsMatch.group(1));\n+            ret.add(new EditLogFile(f, startTxId, HdfsConstants.INVALID_TXID,\n+                true));\n+            continue;\n+          } catch (NumberFormatException nfe) {\n+            LOG.error(\"In-progress stale edits file \" + f + \" has improperly \"\n+                + \"formatted transaction ID\");\n+            // skip\n+          }\n+        }\n+      }\n     }\n     return ret;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static List\u003cEditLogFile\u003e matchEditLogs(File[] filesInStorage,\n      boolean forPurging) {\n    List\u003cEditLogFile\u003e ret \u003d Lists.newArrayList();\n    for (File f : filesInStorage) {\n      String name \u003d f.getName();\n      // Check for edits\n      Matcher editsMatch \u003d EDITS_REGEX.matcher(name);\n      if (editsMatch.matches()) {\n        try {\n          long startTxId \u003d Long.parseLong(editsMatch.group(1));\n          long endTxId \u003d Long.parseLong(editsMatch.group(2));\n          ret.add(new EditLogFile(f, startTxId, endTxId));\n          continue;\n        } catch (NumberFormatException nfe) {\n          LOG.error(\"Edits file \" + f + \" has improperly formatted \" +\n                    \"transaction ID\");\n          // skip\n        }\n      }\n      \n      // Check for in-progress edits\n      Matcher inProgressEditsMatch \u003d EDITS_INPROGRESS_REGEX.matcher(name);\n      if (inProgressEditsMatch.matches()) {\n        try {\n          long startTxId \u003d Long.parseLong(inProgressEditsMatch.group(1));\n          ret.add(\n              new EditLogFile(f, startTxId, HdfsConstants.INVALID_TXID, true));\n          continue;\n        } catch (NumberFormatException nfe) {\n          LOG.error(\"In-progress edits file \" + f + \" has improperly \" +\n                    \"formatted transaction ID\");\n          // skip\n        }\n      }\n      if (forPurging) {\n        // Check for in-progress stale edits\n        Matcher staleInprogressEditsMatch \u003d EDITS_INPROGRESS_STALE_REGEX\n            .matcher(name);\n        if (staleInprogressEditsMatch.matches()) {\n          try {\n            long startTxId \u003d Long.valueOf(staleInprogressEditsMatch.group(1));\n            ret.add(new EditLogFile(f, startTxId, HdfsConstants.INVALID_TXID,\n                true));\n            continue;\n          } catch (NumberFormatException nfe) {\n            LOG.error(\"In-progress stale edits file \" + f + \" has improperly \"\n                + \"formatted transaction ID\");\n            // skip\n          }\n        }\n      }\n    }\n    return ret;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FileJournalManager.java",
          "extendedDetails": {
            "oldValue": "[static]",
            "newValue": "[private, static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-5919. FileJournalManager doesn\u0027t purge empty and corrupt inprogress edits files (vinayakumarb)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1613355 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "25/07/14 12:02 AM",
          "commitName": "2bb650146ddb36830ea9c0d248fd3df1f6aa7534",
          "commitAuthor": "Vinayakumar B",
          "commitDateOld": "13/06/14 7:14 PM",
          "commitNameOld": "d18af7edd494ca6de1849da6ee30997c035eb35b",
          "commitAuthorOld": "Aaron Myers",
          "daysBetweenCommits": 41.2,
          "commitsBetweenForRepo": 292,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,34 +1,54 @@\n-  static List\u003cEditLogFile\u003e matchEditLogs(File[] filesInStorage) {\n+  private static List\u003cEditLogFile\u003e matchEditLogs(File[] filesInStorage,\n+      boolean forPurging) {\n     List\u003cEditLogFile\u003e ret \u003d Lists.newArrayList();\n     for (File f : filesInStorage) {\n       String name \u003d f.getName();\n       // Check for edits\n       Matcher editsMatch \u003d EDITS_REGEX.matcher(name);\n       if (editsMatch.matches()) {\n         try {\n           long startTxId \u003d Long.parseLong(editsMatch.group(1));\n           long endTxId \u003d Long.parseLong(editsMatch.group(2));\n           ret.add(new EditLogFile(f, startTxId, endTxId));\n+          continue;\n         } catch (NumberFormatException nfe) {\n           LOG.error(\"Edits file \" + f + \" has improperly formatted \" +\n                     \"transaction ID\");\n           // skip\n         }\n       }\n       \n       // Check for in-progress edits\n       Matcher inProgressEditsMatch \u003d EDITS_INPROGRESS_REGEX.matcher(name);\n       if (inProgressEditsMatch.matches()) {\n         try {\n           long startTxId \u003d Long.parseLong(inProgressEditsMatch.group(1));\n           ret.add(\n               new EditLogFile(f, startTxId, HdfsConstants.INVALID_TXID, true));\n+          continue;\n         } catch (NumberFormatException nfe) {\n           LOG.error(\"In-progress edits file \" + f + \" has improperly \" +\n                     \"formatted transaction ID\");\n           // skip\n         }\n       }\n+      if (forPurging) {\n+        // Check for in-progress stale edits\n+        Matcher staleInprogressEditsMatch \u003d EDITS_INPROGRESS_STALE_REGEX\n+            .matcher(name);\n+        if (staleInprogressEditsMatch.matches()) {\n+          try {\n+            long startTxId \u003d Long.valueOf(staleInprogressEditsMatch.group(1));\n+            ret.add(new EditLogFile(f, startTxId, HdfsConstants.INVALID_TXID,\n+                true));\n+            continue;\n+          } catch (NumberFormatException nfe) {\n+            LOG.error(\"In-progress stale edits file \" + f + \" has improperly \"\n+                + \"formatted transaction ID\");\n+            // skip\n+          }\n+        }\n+      }\n     }\n     return ret;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static List\u003cEditLogFile\u003e matchEditLogs(File[] filesInStorage,\n      boolean forPurging) {\n    List\u003cEditLogFile\u003e ret \u003d Lists.newArrayList();\n    for (File f : filesInStorage) {\n      String name \u003d f.getName();\n      // Check for edits\n      Matcher editsMatch \u003d EDITS_REGEX.matcher(name);\n      if (editsMatch.matches()) {\n        try {\n          long startTxId \u003d Long.parseLong(editsMatch.group(1));\n          long endTxId \u003d Long.parseLong(editsMatch.group(2));\n          ret.add(new EditLogFile(f, startTxId, endTxId));\n          continue;\n        } catch (NumberFormatException nfe) {\n          LOG.error(\"Edits file \" + f + \" has improperly formatted \" +\n                    \"transaction ID\");\n          // skip\n        }\n      }\n      \n      // Check for in-progress edits\n      Matcher inProgressEditsMatch \u003d EDITS_INPROGRESS_REGEX.matcher(name);\n      if (inProgressEditsMatch.matches()) {\n        try {\n          long startTxId \u003d Long.parseLong(inProgressEditsMatch.group(1));\n          ret.add(\n              new EditLogFile(f, startTxId, HdfsConstants.INVALID_TXID, true));\n          continue;\n        } catch (NumberFormatException nfe) {\n          LOG.error(\"In-progress edits file \" + f + \" has improperly \" +\n                    \"formatted transaction ID\");\n          // skip\n        }\n      }\n      if (forPurging) {\n        // Check for in-progress stale edits\n        Matcher staleInprogressEditsMatch \u003d EDITS_INPROGRESS_STALE_REGEX\n            .matcher(name);\n        if (staleInprogressEditsMatch.matches()) {\n          try {\n            long startTxId \u003d Long.valueOf(staleInprogressEditsMatch.group(1));\n            ret.add(new EditLogFile(f, startTxId, HdfsConstants.INVALID_TXID,\n                true));\n            continue;\n          } catch (NumberFormatException nfe) {\n            LOG.error(\"In-progress stale edits file \" + f + \" has improperly \"\n                + \"formatted transaction ID\");\n            // skip\n          }\n        }\n      }\n    }\n    return ret;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FileJournalManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "14556cc5d8fee8f8a846e4f65572828553be386c": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6155. Fix Boxing/unboxing to parse a primitive findbugs warnings. Contributed by Suresh Srinivas.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1582068 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "26/03/14 2:27 PM",
      "commitName": "14556cc5d8fee8f8a846e4f65572828553be386c",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "20/03/14 4:06 PM",
      "commitNameOld": "9dab514b22f49322738935cfd915c2b4eba50b88",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 5.93,
      "commitsBetweenForRepo": 56,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,34 @@\n   static List\u003cEditLogFile\u003e matchEditLogs(File[] filesInStorage) {\n     List\u003cEditLogFile\u003e ret \u003d Lists.newArrayList();\n     for (File f : filesInStorage) {\n       String name \u003d f.getName();\n       // Check for edits\n       Matcher editsMatch \u003d EDITS_REGEX.matcher(name);\n       if (editsMatch.matches()) {\n         try {\n-          long startTxId \u003d Long.valueOf(editsMatch.group(1));\n-          long endTxId \u003d Long.valueOf(editsMatch.group(2));\n+          long startTxId \u003d Long.parseLong(editsMatch.group(1));\n+          long endTxId \u003d Long.parseLong(editsMatch.group(2));\n           ret.add(new EditLogFile(f, startTxId, endTxId));\n         } catch (NumberFormatException nfe) {\n           LOG.error(\"Edits file \" + f + \" has improperly formatted \" +\n                     \"transaction ID\");\n           // skip\n         }\n       }\n       \n       // Check for in-progress edits\n       Matcher inProgressEditsMatch \u003d EDITS_INPROGRESS_REGEX.matcher(name);\n       if (inProgressEditsMatch.matches()) {\n         try {\n-          long startTxId \u003d Long.valueOf(inProgressEditsMatch.group(1));\n+          long startTxId \u003d Long.parseLong(inProgressEditsMatch.group(1));\n           ret.add(\n               new EditLogFile(f, startTxId, HdfsConstants.INVALID_TXID, true));\n         } catch (NumberFormatException nfe) {\n           LOG.error(\"In-progress edits file \" + f + \" has improperly \" +\n                     \"formatted transaction ID\");\n           // skip\n         }\n       }\n     }\n     return ret;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static List\u003cEditLogFile\u003e matchEditLogs(File[] filesInStorage) {\n    List\u003cEditLogFile\u003e ret \u003d Lists.newArrayList();\n    for (File f : filesInStorage) {\n      String name \u003d f.getName();\n      // Check for edits\n      Matcher editsMatch \u003d EDITS_REGEX.matcher(name);\n      if (editsMatch.matches()) {\n        try {\n          long startTxId \u003d Long.parseLong(editsMatch.group(1));\n          long endTxId \u003d Long.parseLong(editsMatch.group(2));\n          ret.add(new EditLogFile(f, startTxId, endTxId));\n        } catch (NumberFormatException nfe) {\n          LOG.error(\"Edits file \" + f + \" has improperly formatted \" +\n                    \"transaction ID\");\n          // skip\n        }\n      }\n      \n      // Check for in-progress edits\n      Matcher inProgressEditsMatch \u003d EDITS_INPROGRESS_REGEX.matcher(name);\n      if (inProgressEditsMatch.matches()) {\n        try {\n          long startTxId \u003d Long.parseLong(inProgressEditsMatch.group(1));\n          ret.add(\n              new EditLogFile(f, startTxId, HdfsConstants.INVALID_TXID, true));\n        } catch (NumberFormatException nfe) {\n          LOG.error(\"In-progress edits file \" + f + \" has improperly \" +\n                    \"formatted transaction ID\");\n          // skip\n        }\n      }\n    }\n    return ret;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FileJournalManager.java",
      "extendedDetails": {}
    },
    "74d4573a23db5586c6e47ff2277aa7c35237da34": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3077. Quorum-based protocol for reading and writing edit logs. Contributed by Todd Lipcon based on initial work from Brandon Li and Hari Mankude.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3077@1363596 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/07/12 5:25 PM",
      "commitName": "74d4573a23db5586c6e47ff2277aa7c35237da34",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "15/07/12 7:58 PM",
      "commitNameOld": "0e8e499ff482c165d21c8e4f5ff9c33f306ca0d9",
      "commitAuthorOld": "Harsh J",
      "daysBetweenCommits": 3.89,
      "commitsBetweenForRepo": 38,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,34 @@\n   static List\u003cEditLogFile\u003e matchEditLogs(File[] filesInStorage) {\n     List\u003cEditLogFile\u003e ret \u003d Lists.newArrayList();\n     for (File f : filesInStorage) {\n       String name \u003d f.getName();\n       // Check for edits\n       Matcher editsMatch \u003d EDITS_REGEX.matcher(name);\n       if (editsMatch.matches()) {\n         try {\n           long startTxId \u003d Long.valueOf(editsMatch.group(1));\n           long endTxId \u003d Long.valueOf(editsMatch.group(2));\n           ret.add(new EditLogFile(f, startTxId, endTxId));\n         } catch (NumberFormatException nfe) {\n           LOG.error(\"Edits file \" + f + \" has improperly formatted \" +\n                     \"transaction ID\");\n           // skip\n         }\n       }\n       \n       // Check for in-progress edits\n       Matcher inProgressEditsMatch \u003d EDITS_INPROGRESS_REGEX.matcher(name);\n       if (inProgressEditsMatch.matches()) {\n         try {\n           long startTxId \u003d Long.valueOf(inProgressEditsMatch.group(1));\n           ret.add(\n-              new EditLogFile(f, startTxId, startTxId, true));\n+              new EditLogFile(f, startTxId, HdfsConstants.INVALID_TXID, true));\n         } catch (NumberFormatException nfe) {\n           LOG.error(\"In-progress edits file \" + f + \" has improperly \" +\n                     \"formatted transaction ID\");\n           // skip\n         }\n       }\n     }\n     return ret;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static List\u003cEditLogFile\u003e matchEditLogs(File[] filesInStorage) {\n    List\u003cEditLogFile\u003e ret \u003d Lists.newArrayList();\n    for (File f : filesInStorage) {\n      String name \u003d f.getName();\n      // Check for edits\n      Matcher editsMatch \u003d EDITS_REGEX.matcher(name);\n      if (editsMatch.matches()) {\n        try {\n          long startTxId \u003d Long.valueOf(editsMatch.group(1));\n          long endTxId \u003d Long.valueOf(editsMatch.group(2));\n          ret.add(new EditLogFile(f, startTxId, endTxId));\n        } catch (NumberFormatException nfe) {\n          LOG.error(\"Edits file \" + f + \" has improperly formatted \" +\n                    \"transaction ID\");\n          // skip\n        }\n      }\n      \n      // Check for in-progress edits\n      Matcher inProgressEditsMatch \u003d EDITS_INPROGRESS_REGEX.matcher(name);\n      if (inProgressEditsMatch.matches()) {\n        try {\n          long startTxId \u003d Long.valueOf(inProgressEditsMatch.group(1));\n          ret.add(\n              new EditLogFile(f, startTxId, HdfsConstants.INVALID_TXID, true));\n        } catch (NumberFormatException nfe) {\n          LOG.error(\"In-progress edits file \" + f + \" has improperly \" +\n                    \"formatted transaction ID\");\n          // skip\n        }\n      }\n    }\n    return ret;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FileJournalManager.java",
      "extendedDetails": {}
    },
    "bdc3720d5b67a1c8fc2dfb29be16e4155c0e7f15": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2018. Move all journal stream management code into one place. Contributed by Ivan Kelly.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1165826 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/09/11 1:27 PM",
      "commitName": "bdc3720d5b67a1c8fc2dfb29be16e4155c0e7f15",
      "commitAuthor": "Jitendra Nath Pandey",
      "commitDateOld": "24/08/11 5:14 PM",
      "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 12.84,
      "commitsBetweenForRepo": 62,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,34 @@\n   static List\u003cEditLogFile\u003e matchEditLogs(File[] filesInStorage) {\n     List\u003cEditLogFile\u003e ret \u003d Lists.newArrayList();\n     for (File f : filesInStorage) {\n       String name \u003d f.getName();\n       // Check for edits\n       Matcher editsMatch \u003d EDITS_REGEX.matcher(name);\n       if (editsMatch.matches()) {\n         try {\n           long startTxId \u003d Long.valueOf(editsMatch.group(1));\n           long endTxId \u003d Long.valueOf(editsMatch.group(2));\n           ret.add(new EditLogFile(f, startTxId, endTxId));\n         } catch (NumberFormatException nfe) {\n           LOG.error(\"Edits file \" + f + \" has improperly formatted \" +\n                     \"transaction ID\");\n           // skip\n         }          \n       }\n       \n       // Check for in-progress edits\n       Matcher inProgressEditsMatch \u003d EDITS_INPROGRESS_REGEX.matcher(name);\n       if (inProgressEditsMatch.matches()) {\n         try {\n           long startTxId \u003d Long.valueOf(inProgressEditsMatch.group(1));\n           ret.add(\n-            new EditLogFile(f, startTxId, EditLogFile.UNKNOWN_END));\n+              new EditLogFile(f, startTxId, startTxId, true));\n         } catch (NumberFormatException nfe) {\n           LOG.error(\"In-progress edits file \" + f + \" has improperly \" +\n                     \"formatted transaction ID\");\n           // skip\n-        }          \n+        }\n       }\n     }\n     return ret;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static List\u003cEditLogFile\u003e matchEditLogs(File[] filesInStorage) {\n    List\u003cEditLogFile\u003e ret \u003d Lists.newArrayList();\n    for (File f : filesInStorage) {\n      String name \u003d f.getName();\n      // Check for edits\n      Matcher editsMatch \u003d EDITS_REGEX.matcher(name);\n      if (editsMatch.matches()) {\n        try {\n          long startTxId \u003d Long.valueOf(editsMatch.group(1));\n          long endTxId \u003d Long.valueOf(editsMatch.group(2));\n          ret.add(new EditLogFile(f, startTxId, endTxId));\n        } catch (NumberFormatException nfe) {\n          LOG.error(\"Edits file \" + f + \" has improperly formatted \" +\n                    \"transaction ID\");\n          // skip\n        }          \n      }\n      \n      // Check for in-progress edits\n      Matcher inProgressEditsMatch \u003d EDITS_INPROGRESS_REGEX.matcher(name);\n      if (inProgressEditsMatch.matches()) {\n        try {\n          long startTxId \u003d Long.valueOf(inProgressEditsMatch.group(1));\n          ret.add(\n              new EditLogFile(f, startTxId, startTxId, true));\n        } catch (NumberFormatException nfe) {\n          LOG.error(\"In-progress edits file \" + f + \" has improperly \" +\n                    \"formatted transaction ID\");\n          // skip\n        }\n      }\n    }\n    return ret;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FileJournalManager.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  static List\u003cEditLogFile\u003e matchEditLogs(File[] filesInStorage) {\n    List\u003cEditLogFile\u003e ret \u003d Lists.newArrayList();\n    for (File f : filesInStorage) {\n      String name \u003d f.getName();\n      // Check for edits\n      Matcher editsMatch \u003d EDITS_REGEX.matcher(name);\n      if (editsMatch.matches()) {\n        try {\n          long startTxId \u003d Long.valueOf(editsMatch.group(1));\n          long endTxId \u003d Long.valueOf(editsMatch.group(2));\n          ret.add(new EditLogFile(f, startTxId, endTxId));\n        } catch (NumberFormatException nfe) {\n          LOG.error(\"Edits file \" + f + \" has improperly formatted \" +\n                    \"transaction ID\");\n          // skip\n        }          \n      }\n      \n      // Check for in-progress edits\n      Matcher inProgressEditsMatch \u003d EDITS_INPROGRESS_REGEX.matcher(name);\n      if (inProgressEditsMatch.matches()) {\n        try {\n          long startTxId \u003d Long.valueOf(inProgressEditsMatch.group(1));\n          ret.add(\n            new EditLogFile(f, startTxId, EditLogFile.UNKNOWN_END));\n        } catch (NumberFormatException nfe) {\n          LOG.error(\"In-progress edits file \" + f + \" has improperly \" +\n                    \"formatted transaction ID\");\n          // skip\n        }          \n      }\n    }\n    return ret;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FileJournalManager.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FileJournalManager.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FileJournalManager.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  static List\u003cEditLogFile\u003e matchEditLogs(File[] filesInStorage) {\n    List\u003cEditLogFile\u003e ret \u003d Lists.newArrayList();\n    for (File f : filesInStorage) {\n      String name \u003d f.getName();\n      // Check for edits\n      Matcher editsMatch \u003d EDITS_REGEX.matcher(name);\n      if (editsMatch.matches()) {\n        try {\n          long startTxId \u003d Long.valueOf(editsMatch.group(1));\n          long endTxId \u003d Long.valueOf(editsMatch.group(2));\n          ret.add(new EditLogFile(f, startTxId, endTxId));\n        } catch (NumberFormatException nfe) {\n          LOG.error(\"Edits file \" + f + \" has improperly formatted \" +\n                    \"transaction ID\");\n          // skip\n        }          \n      }\n      \n      // Check for in-progress edits\n      Matcher inProgressEditsMatch \u003d EDITS_INPROGRESS_REGEX.matcher(name);\n      if (inProgressEditsMatch.matches()) {\n        try {\n          long startTxId \u003d Long.valueOf(inProgressEditsMatch.group(1));\n          ret.add(\n            new EditLogFile(f, startTxId, EditLogFile.UNKNOWN_END));\n        } catch (NumberFormatException nfe) {\n          LOG.error(\"In-progress edits file \" + f + \" has improperly \" +\n                    \"formatted transaction ID\");\n          // skip\n        }          \n      }\n    }\n    return ret;\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FileJournalManager.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FileJournalManager.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FileJournalManager.java"
      }
    },
    "23762da4fa17ce6ea7b70722147977123a28a7e6": {
      "type": "Ymultichange(Ymovefromfile,Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-2225. Refactor file management so it\u0027s not in classes which should be generic. Contributed by Ivan Kelly.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1154029 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/08/11 2:56 PM",
      "commitName": "23762da4fa17ce6ea7b70722147977123a28a7e6",
      "commitAuthor": "Todd Lipcon",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-2225. Refactor file management so it\u0027s not in classes which should be generic. Contributed by Ivan Kelly.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1154029 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "04/08/11 2:56 PM",
          "commitName": "23762da4fa17ce6ea7b70722147977123a28a7e6",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "04/08/11 1:22 PM",
          "commitNameOld": "53190cfa1d43762e463bcb957929097742db08ba",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.07,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,34 +1,34 @@\n-  static List\u003cFoundEditLog\u003e matchEditLogs(File[] filesInStorage) {\n-    List\u003cFoundEditLog\u003e ret \u003d Lists.newArrayList();\n+  static List\u003cEditLogFile\u003e matchEditLogs(File[] filesInStorage) {\n+    List\u003cEditLogFile\u003e ret \u003d Lists.newArrayList();\n     for (File f : filesInStorage) {\n       String name \u003d f.getName();\n       // Check for edits\n       Matcher editsMatch \u003d EDITS_REGEX.matcher(name);\n       if (editsMatch.matches()) {\n         try {\n           long startTxId \u003d Long.valueOf(editsMatch.group(1));\n           long endTxId \u003d Long.valueOf(editsMatch.group(2));\n-          ret.add(new FoundEditLog(f, startTxId, endTxId));\n+          ret.add(new EditLogFile(f, startTxId, endTxId));\n         } catch (NumberFormatException nfe) {\n           LOG.error(\"Edits file \" + f + \" has improperly formatted \" +\n                     \"transaction ID\");\n           // skip\n         }          \n       }\n       \n       // Check for in-progress edits\n       Matcher inProgressEditsMatch \u003d EDITS_INPROGRESS_REGEX.matcher(name);\n       if (inProgressEditsMatch.matches()) {\n         try {\n           long startTxId \u003d Long.valueOf(inProgressEditsMatch.group(1));\n           ret.add(\n-            new FoundEditLog(f, startTxId, FoundEditLog.UNKNOWN_END));\n+            new EditLogFile(f, startTxId, EditLogFile.UNKNOWN_END));\n         } catch (NumberFormatException nfe) {\n           LOG.error(\"In-progress edits file \" + f + \" has improperly \" +\n                     \"formatted transaction ID\");\n           // skip\n         }          \n       }\n     }\n     return ret;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static List\u003cEditLogFile\u003e matchEditLogs(File[] filesInStorage) {\n    List\u003cEditLogFile\u003e ret \u003d Lists.newArrayList();\n    for (File f : filesInStorage) {\n      String name \u003d f.getName();\n      // Check for edits\n      Matcher editsMatch \u003d EDITS_REGEX.matcher(name);\n      if (editsMatch.matches()) {\n        try {\n          long startTxId \u003d Long.valueOf(editsMatch.group(1));\n          long endTxId \u003d Long.valueOf(editsMatch.group(2));\n          ret.add(new EditLogFile(f, startTxId, endTxId));\n        } catch (NumberFormatException nfe) {\n          LOG.error(\"Edits file \" + f + \" has improperly formatted \" +\n                    \"transaction ID\");\n          // skip\n        }          \n      }\n      \n      // Check for in-progress edits\n      Matcher inProgressEditsMatch \u003d EDITS_INPROGRESS_REGEX.matcher(name);\n      if (inProgressEditsMatch.matches()) {\n        try {\n          long startTxId \u003d Long.valueOf(inProgressEditsMatch.group(1));\n          ret.add(\n            new EditLogFile(f, startTxId, EditLogFile.UNKNOWN_END));\n        } catch (NumberFormatException nfe) {\n          LOG.error(\"In-progress edits file \" + f + \" has improperly \" +\n                    \"formatted transaction ID\");\n          // skip\n        }          \n      }\n    }\n    return ret;\n  }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FileJournalManager.java",
          "extendedDetails": {
            "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FSImageTransactionalStorageInspector.java",
            "newPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FileJournalManager.java",
            "oldMethodName": "matchEditLogs",
            "newMethodName": "matchEditLogs"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-2225. Refactor file management so it\u0027s not in classes which should be generic. Contributed by Ivan Kelly.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1154029 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "04/08/11 2:56 PM",
          "commitName": "23762da4fa17ce6ea7b70722147977123a28a7e6",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "04/08/11 1:22 PM",
          "commitNameOld": "53190cfa1d43762e463bcb957929097742db08ba",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.07,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,34 +1,34 @@\n-  static List\u003cFoundEditLog\u003e matchEditLogs(File[] filesInStorage) {\n-    List\u003cFoundEditLog\u003e ret \u003d Lists.newArrayList();\n+  static List\u003cEditLogFile\u003e matchEditLogs(File[] filesInStorage) {\n+    List\u003cEditLogFile\u003e ret \u003d Lists.newArrayList();\n     for (File f : filesInStorage) {\n       String name \u003d f.getName();\n       // Check for edits\n       Matcher editsMatch \u003d EDITS_REGEX.matcher(name);\n       if (editsMatch.matches()) {\n         try {\n           long startTxId \u003d Long.valueOf(editsMatch.group(1));\n           long endTxId \u003d Long.valueOf(editsMatch.group(2));\n-          ret.add(new FoundEditLog(f, startTxId, endTxId));\n+          ret.add(new EditLogFile(f, startTxId, endTxId));\n         } catch (NumberFormatException nfe) {\n           LOG.error(\"Edits file \" + f + \" has improperly formatted \" +\n                     \"transaction ID\");\n           // skip\n         }          \n       }\n       \n       // Check for in-progress edits\n       Matcher inProgressEditsMatch \u003d EDITS_INPROGRESS_REGEX.matcher(name);\n       if (inProgressEditsMatch.matches()) {\n         try {\n           long startTxId \u003d Long.valueOf(inProgressEditsMatch.group(1));\n           ret.add(\n-            new FoundEditLog(f, startTxId, FoundEditLog.UNKNOWN_END));\n+            new EditLogFile(f, startTxId, EditLogFile.UNKNOWN_END));\n         } catch (NumberFormatException nfe) {\n           LOG.error(\"In-progress edits file \" + f + \" has improperly \" +\n                     \"formatted transaction ID\");\n           // skip\n         }          \n       }\n     }\n     return ret;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static List\u003cEditLogFile\u003e matchEditLogs(File[] filesInStorage) {\n    List\u003cEditLogFile\u003e ret \u003d Lists.newArrayList();\n    for (File f : filesInStorage) {\n      String name \u003d f.getName();\n      // Check for edits\n      Matcher editsMatch \u003d EDITS_REGEX.matcher(name);\n      if (editsMatch.matches()) {\n        try {\n          long startTxId \u003d Long.valueOf(editsMatch.group(1));\n          long endTxId \u003d Long.valueOf(editsMatch.group(2));\n          ret.add(new EditLogFile(f, startTxId, endTxId));\n        } catch (NumberFormatException nfe) {\n          LOG.error(\"Edits file \" + f + \" has improperly formatted \" +\n                    \"transaction ID\");\n          // skip\n        }          \n      }\n      \n      // Check for in-progress edits\n      Matcher inProgressEditsMatch \u003d EDITS_INPROGRESS_REGEX.matcher(name);\n      if (inProgressEditsMatch.matches()) {\n        try {\n          long startTxId \u003d Long.valueOf(inProgressEditsMatch.group(1));\n          ret.add(\n            new EditLogFile(f, startTxId, EditLogFile.UNKNOWN_END));\n        } catch (NumberFormatException nfe) {\n          LOG.error(\"In-progress edits file \" + f + \" has improperly \" +\n                    \"formatted transaction ID\");\n          // skip\n        }          \n      }\n    }\n    return ret;\n  }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FileJournalManager.java",
          "extendedDetails": {
            "oldValue": "List\u003cFoundEditLog\u003e",
            "newValue": "List\u003cEditLogFile\u003e"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-2225. Refactor file management so it\u0027s not in classes which should be generic. Contributed by Ivan Kelly.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1154029 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "04/08/11 2:56 PM",
          "commitName": "23762da4fa17ce6ea7b70722147977123a28a7e6",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "04/08/11 1:22 PM",
          "commitNameOld": "53190cfa1d43762e463bcb957929097742db08ba",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.07,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,34 +1,34 @@\n-  static List\u003cFoundEditLog\u003e matchEditLogs(File[] filesInStorage) {\n-    List\u003cFoundEditLog\u003e ret \u003d Lists.newArrayList();\n+  static List\u003cEditLogFile\u003e matchEditLogs(File[] filesInStorage) {\n+    List\u003cEditLogFile\u003e ret \u003d Lists.newArrayList();\n     for (File f : filesInStorage) {\n       String name \u003d f.getName();\n       // Check for edits\n       Matcher editsMatch \u003d EDITS_REGEX.matcher(name);\n       if (editsMatch.matches()) {\n         try {\n           long startTxId \u003d Long.valueOf(editsMatch.group(1));\n           long endTxId \u003d Long.valueOf(editsMatch.group(2));\n-          ret.add(new FoundEditLog(f, startTxId, endTxId));\n+          ret.add(new EditLogFile(f, startTxId, endTxId));\n         } catch (NumberFormatException nfe) {\n           LOG.error(\"Edits file \" + f + \" has improperly formatted \" +\n                     \"transaction ID\");\n           // skip\n         }          \n       }\n       \n       // Check for in-progress edits\n       Matcher inProgressEditsMatch \u003d EDITS_INPROGRESS_REGEX.matcher(name);\n       if (inProgressEditsMatch.matches()) {\n         try {\n           long startTxId \u003d Long.valueOf(inProgressEditsMatch.group(1));\n           ret.add(\n-            new FoundEditLog(f, startTxId, FoundEditLog.UNKNOWN_END));\n+            new EditLogFile(f, startTxId, EditLogFile.UNKNOWN_END));\n         } catch (NumberFormatException nfe) {\n           LOG.error(\"In-progress edits file \" + f + \" has improperly \" +\n                     \"formatted transaction ID\");\n           // skip\n         }          \n       }\n     }\n     return ret;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static List\u003cEditLogFile\u003e matchEditLogs(File[] filesInStorage) {\n    List\u003cEditLogFile\u003e ret \u003d Lists.newArrayList();\n    for (File f : filesInStorage) {\n      String name \u003d f.getName();\n      // Check for edits\n      Matcher editsMatch \u003d EDITS_REGEX.matcher(name);\n      if (editsMatch.matches()) {\n        try {\n          long startTxId \u003d Long.valueOf(editsMatch.group(1));\n          long endTxId \u003d Long.valueOf(editsMatch.group(2));\n          ret.add(new EditLogFile(f, startTxId, endTxId));\n        } catch (NumberFormatException nfe) {\n          LOG.error(\"Edits file \" + f + \" has improperly formatted \" +\n                    \"transaction ID\");\n          // skip\n        }          \n      }\n      \n      // Check for in-progress edits\n      Matcher inProgressEditsMatch \u003d EDITS_INPROGRESS_REGEX.matcher(name);\n      if (inProgressEditsMatch.matches()) {\n        try {\n          long startTxId \u003d Long.valueOf(inProgressEditsMatch.group(1));\n          ret.add(\n            new EditLogFile(f, startTxId, EditLogFile.UNKNOWN_END));\n        } catch (NumberFormatException nfe) {\n          LOG.error(\"In-progress edits file \" + f + \" has improperly \" +\n                    \"formatted transaction ID\");\n          // skip\n        }          \n      }\n    }\n    return ret;\n  }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FileJournalManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "28e6a4e44a3e920dcaf858f9a74a6358226b3a63": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-1073. Redesign the NameNode\u0027s storage layout for image checkpoints and edit logs to introduce transaction IDs and be more robust. Contributed by Todd Lipcon and Ivan Kelly.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1152295 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/07/11 9:28 AM",
      "commitName": "28e6a4e44a3e920dcaf858f9a74a6358226b3a63",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,34 @@\n+  static List\u003cFoundEditLog\u003e matchEditLogs(File[] filesInStorage) {\n+    List\u003cFoundEditLog\u003e ret \u003d Lists.newArrayList();\n+    for (File f : filesInStorage) {\n+      String name \u003d f.getName();\n+      // Check for edits\n+      Matcher editsMatch \u003d EDITS_REGEX.matcher(name);\n+      if (editsMatch.matches()) {\n+        try {\n+          long startTxId \u003d Long.valueOf(editsMatch.group(1));\n+          long endTxId \u003d Long.valueOf(editsMatch.group(2));\n+          ret.add(new FoundEditLog(f, startTxId, endTxId));\n+        } catch (NumberFormatException nfe) {\n+          LOG.error(\"Edits file \" + f + \" has improperly formatted \" +\n+                    \"transaction ID\");\n+          // skip\n+        }          \n+      }\n+      \n+      // Check for in-progress edits\n+      Matcher inProgressEditsMatch \u003d EDITS_INPROGRESS_REGEX.matcher(name);\n+      if (inProgressEditsMatch.matches()) {\n+        try {\n+          long startTxId \u003d Long.valueOf(inProgressEditsMatch.group(1));\n+          ret.add(\n+            new FoundEditLog(f, startTxId, FoundEditLog.UNKNOWN_END));\n+        } catch (NumberFormatException nfe) {\n+          LOG.error(\"In-progress edits file \" + f + \" has improperly \" +\n+                    \"formatted transaction ID\");\n+          // skip\n+        }          \n+      }\n+    }\n+    return ret;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  static List\u003cFoundEditLog\u003e matchEditLogs(File[] filesInStorage) {\n    List\u003cFoundEditLog\u003e ret \u003d Lists.newArrayList();\n    for (File f : filesInStorage) {\n      String name \u003d f.getName();\n      // Check for edits\n      Matcher editsMatch \u003d EDITS_REGEX.matcher(name);\n      if (editsMatch.matches()) {\n        try {\n          long startTxId \u003d Long.valueOf(editsMatch.group(1));\n          long endTxId \u003d Long.valueOf(editsMatch.group(2));\n          ret.add(new FoundEditLog(f, startTxId, endTxId));\n        } catch (NumberFormatException nfe) {\n          LOG.error(\"Edits file \" + f + \" has improperly formatted \" +\n                    \"transaction ID\");\n          // skip\n        }          \n      }\n      \n      // Check for in-progress edits\n      Matcher inProgressEditsMatch \u003d EDITS_INPROGRESS_REGEX.matcher(name);\n      if (inProgressEditsMatch.matches()) {\n        try {\n          long startTxId \u003d Long.valueOf(inProgressEditsMatch.group(1));\n          ret.add(\n            new FoundEditLog(f, startTxId, FoundEditLog.UNKNOWN_END));\n        } catch (NumberFormatException nfe) {\n          LOG.error(\"In-progress edits file \" + f + \" has improperly \" +\n                    \"formatted transaction ID\");\n          // skip\n        }          \n      }\n    }\n    return ret;\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FSImageTransactionalStorageInspector.java"
    }
  }
}