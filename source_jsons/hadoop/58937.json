{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "GetAllResourceTypeInfoResponsePBImpl.java",
  "functionName": "addResourceTypeInfosToProto",
  "functionId": "addResourceTypeInfosToProto",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/GetAllResourceTypeInfoResponsePBImpl.java",
  "functionStartLine": 141,
  "functionEndLine": 174,
  "numCommitsSeen": 2,
  "timeTaken": 1076,
  "changeHistory": [
    "df3855541af98a3805958f2b5b9db6be705d52ab"
  ],
  "changeHistoryShort": {
    "df3855541af98a3805958f2b5b9db6be705d52ab": "Yintroduced"
  },
  "changeHistoryDetails": {
    "df3855541af98a3805958f2b5b9db6be705d52ab": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6789. Add Client API to get all supported resource types from RM. (Sunil G via wangda)\n\nChange-Id: I366d8db6f6700acd087db5acb7a1be7e41b2b68d\n",
      "commitDate": "12/09/17 9:19 AM",
      "commitName": "df3855541af98a3805958f2b5b9db6be705d52ab",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,34 @@\n+  private void addResourceTypeInfosToProto() {\n+    maybeInitBuilder();\n+    builder.clearResourceTypeInfo();\n+    if (resourceTypeInfo \u003d\u003d null) {\n+      return;\n+    }\n+    Iterable\u003cResourceTypeInfoProto\u003e iterable \u003d new Iterable\u003cResourceTypeInfoProto\u003e() {\n+      @Override\n+      public Iterator\u003cResourceTypeInfoProto\u003e iterator() {\n+        return new Iterator\u003cResourceTypeInfoProto\u003e() {\n+\n+          Iterator\u003cResourceTypeInfo\u003e iter \u003d resourceTypeInfo.iterator();\n+\n+          @Override\n+          public boolean hasNext() {\n+            return iter.hasNext();\n+          }\n+\n+          @Override\n+          public ResourceTypeInfoProto next() {\n+            return convertToProtoFormat(iter.next());\n+          }\n+\n+          @Override\n+          public void remove() {\n+            throw new UnsupportedOperationException();\n+\n+          }\n+        };\n+\n+      }\n+    };\n+    builder.addAllResourceTypeInfo(iterable);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void addResourceTypeInfosToProto() {\n    maybeInitBuilder();\n    builder.clearResourceTypeInfo();\n    if (resourceTypeInfo \u003d\u003d null) {\n      return;\n    }\n    Iterable\u003cResourceTypeInfoProto\u003e iterable \u003d new Iterable\u003cResourceTypeInfoProto\u003e() {\n      @Override\n      public Iterator\u003cResourceTypeInfoProto\u003e iterator() {\n        return new Iterator\u003cResourceTypeInfoProto\u003e() {\n\n          Iterator\u003cResourceTypeInfo\u003e iter \u003d resourceTypeInfo.iterator();\n\n          @Override\n          public boolean hasNext() {\n            return iter.hasNext();\n          }\n\n          @Override\n          public ResourceTypeInfoProto next() {\n            return convertToProtoFormat(iter.next());\n          }\n\n          @Override\n          public void remove() {\n            throw new UnsupportedOperationException();\n\n          }\n        };\n\n      }\n    };\n    builder.addAllResourceTypeInfo(iterable);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/GetAllResourceTypeInfoResponsePBImpl.java"
    }
  }
}