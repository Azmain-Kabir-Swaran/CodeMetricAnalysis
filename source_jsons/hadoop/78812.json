{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FileContext.java",
  "functionName": "globStatus",
  "functionId": "globStatus___pathPattern-Path(modifiers-final)__filter-PathFilter(modifiers-final)",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileContext.java",
  "functionStartLine": 2129,
  "functionEndLine": 2133,
  "numCommitsSeen": 98,
  "timeTaken": 2732,
  "changeHistory": [
    "95f9a515aac3c19e14a39539f490203f5867dcc5",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "1ab5aa5279fc0ee9c27c859b57f6b017c27459bc",
    "3f371a0a644181b204111ee4e12c995fc7b5e5f5",
    "64f537da0a216055d5b6eae49a2a9129189cacbf",
    "0294c49df60150bd9b363af5cfbc312222c12c69"
  ],
  "changeHistoryShort": {
    "95f9a515aac3c19e14a39539f490203f5867dcc5": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "1ab5aa5279fc0ee9c27c859b57f6b017c27459bc": "Yexceptionschange",
    "3f371a0a644181b204111ee4e12c995fc7b5e5f5": "Ybodychange",
    "64f537da0a216055d5b6eae49a2a9129189cacbf": "Ymultichange(Ybodychange,Yparametermetachange)",
    "0294c49df60150bd9b363af5cfbc312222c12c69": "Yintroduced"
  },
  "changeHistoryDetails": {
    "95f9a515aac3c19e14a39539f490203f5867dcc5": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-9817. FileSystem#globStatus and FileContext#globStatus need to work with symlinks. (Colin Patrick McCabe via Andrew Wang)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1510807 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/08/13 4:28 PM",
      "commitName": "95f9a515aac3c19e14a39539f490203f5867dcc5",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "31/07/13 6:04 PM",
      "commitNameOld": "9ad19eec6f20530c9f2b9b80ee858ac9ca02827b",
      "commitAuthorOld": "Colin McCabe",
      "daysBetweenCommits": 4.93,
      "commitsBetweenForRepo": 30,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,5 @@\n     public FileStatus[] globStatus(final Path pathPattern,\n         final PathFilter filter) throws AccessControlException,\n         UnsupportedFileSystemException, IOException {\n-      URI uri \u003d getFSofPath(fixRelativePart(pathPattern)).getUri();\n-\n-      String filename \u003d pathPattern.toUri().getPath();\n-\n-      List\u003cString\u003e filePatterns \u003d GlobExpander.expand(filename);\n-      if (filePatterns.size() \u003d\u003d 1) {\n-        Path absPathPattern \u003d fixRelativePart(pathPattern);\n-        return globStatusInternal(uri, new Path(absPathPattern.toUri()\n-            .getPath()), filter);\n-      } else {\n-        List\u003cFileStatus\u003e results \u003d new ArrayList\u003cFileStatus\u003e();\n-        for (String iFilePattern : filePatterns) {\n-          Path iAbsFilePattern \u003d fixRelativePart(new Path(iFilePattern));\n-          FileStatus[] files \u003d globStatusInternal(uri, iAbsFilePattern, filter);\n-          for (FileStatus file : files) {\n-            results.add(file);\n-          }\n-        }\n-        return results.toArray(new FileStatus[results.size()]);\n-      }\n+      return new Globber(FileContext.this, pathPattern, filter).glob();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public FileStatus[] globStatus(final Path pathPattern,\n        final PathFilter filter) throws AccessControlException,\n        UnsupportedFileSystemException, IOException {\n      return new Globber(FileContext.this, pathPattern, filter).glob();\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileContext.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public FileStatus[] globStatus(final Path pathPattern,\n        final PathFilter filter) throws AccessControlException,\n        UnsupportedFileSystemException, IOException {\n      URI uri \u003d getFSofPath(fixRelativePart(pathPattern)).getUri();\n\n      String filename \u003d pathPattern.toUri().getPath();\n\n      List\u003cString\u003e filePatterns \u003d GlobExpander.expand(filename);\n      if (filePatterns.size() \u003d\u003d 1) {\n        Path absPathPattern \u003d fixRelativePart(pathPattern);\n        return globStatusInternal(uri, new Path(absPathPattern.toUri()\n            .getPath()), filter);\n      } else {\n        List\u003cFileStatus\u003e results \u003d new ArrayList\u003cFileStatus\u003e();\n        for (String iFilePattern : filePatterns) {\n          Path iAbsFilePattern \u003d fixRelativePart(new Path(iFilePattern));\n          FileStatus[] files \u003d globStatusInternal(uri, iAbsFilePattern, filter);\n          for (FileStatus file : files) {\n            results.add(file);\n          }\n        }\n        return results.toArray(new FileStatus[results.size()]);\n      }\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileContext.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/FileContext.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileContext.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public FileStatus[] globStatus(final Path pathPattern,\n        final PathFilter filter) throws AccessControlException,\n        UnsupportedFileSystemException, IOException {\n      URI uri \u003d getFSofPath(fixRelativePart(pathPattern)).getUri();\n\n      String filename \u003d pathPattern.toUri().getPath();\n\n      List\u003cString\u003e filePatterns \u003d GlobExpander.expand(filename);\n      if (filePatterns.size() \u003d\u003d 1) {\n        Path absPathPattern \u003d fixRelativePart(pathPattern);\n        return globStatusInternal(uri, new Path(absPathPattern.toUri()\n            .getPath()), filter);\n      } else {\n        List\u003cFileStatus\u003e results \u003d new ArrayList\u003cFileStatus\u003e();\n        for (String iFilePattern : filePatterns) {\n          Path iAbsFilePattern \u003d fixRelativePart(new Path(iFilePattern));\n          FileStatus[] files \u003d globStatusInternal(uri, iAbsFilePattern, filter);\n          for (FileStatus file : files) {\n            results.add(file);\n          }\n        }\n        return results.toArray(new FileStatus[results.size()]);\n      }\n    }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/fs/FileContext.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/fs/FileContext.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/FileContext.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public FileStatus[] globStatus(final Path pathPattern,\n        final PathFilter filter) throws AccessControlException,\n        UnsupportedFileSystemException, IOException {\n      URI uri \u003d getFSofPath(fixRelativePart(pathPattern)).getUri();\n\n      String filename \u003d pathPattern.toUri().getPath();\n\n      List\u003cString\u003e filePatterns \u003d GlobExpander.expand(filename);\n      if (filePatterns.size() \u003d\u003d 1) {\n        Path absPathPattern \u003d fixRelativePart(pathPattern);\n        return globStatusInternal(uri, new Path(absPathPattern.toUri()\n            .getPath()), filter);\n      } else {\n        List\u003cFileStatus\u003e results \u003d new ArrayList\u003cFileStatus\u003e();\n        for (String iFilePattern : filePatterns) {\n          Path iAbsFilePattern \u003d fixRelativePart(new Path(iFilePattern));\n          FileStatus[] files \u003d globStatusInternal(uri, iAbsFilePattern, filter);\n          for (FileStatus file : files) {\n            results.add(file);\n          }\n        }\n        return results.toArray(new FileStatus[results.size()]);\n      }\n    }",
      "path": "common/src/java/org/apache/hadoop/fs/FileContext.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/fs/FileContext.java",
        "newPath": "common/src/java/org/apache/hadoop/fs/FileContext.java"
      }
    },
    "1ab5aa5279fc0ee9c27c859b57f6b017c27459bc": {
      "type": "Yexceptionschange",
      "commitMessage": "   HADOOP-6537 Declare more detailed exceptions in FileContext and AbstractFileSystem\n   (Suresh Srinivas via Sanjay Radia)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@918309 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/03/10 6:48 PM",
      "commitName": "1ab5aa5279fc0ee9c27c859b57f6b017c27459bc",
      "commitAuthor": "Sanjay Radia",
      "commitDateOld": "16/02/10 1:43 PM",
      "commitNameOld": "ea605b8cd79163444feead75d7b55dbd4ab537a0",
      "commitAuthorOld": "Sanjay Radia",
      "daysBetweenCommits": 14.21,
      "commitsBetweenForRepo": 24,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,24 @@\n     public FileStatus[] globStatus(final Path pathPattern,\n-        final PathFilter filter) throws IOException {\n+        final PathFilter filter) throws AccessControlException,\n+        UnsupportedFileSystemException, IOException {\n       URI uri \u003d getFSofPath(fixRelativePart(pathPattern)).getUri();\n \n       String filename \u003d pathPattern.toUri().getPath();\n \n       List\u003cString\u003e filePatterns \u003d GlobExpander.expand(filename);\n       if (filePatterns.size() \u003d\u003d 1) {\n         Path absPathPattern \u003d fixRelativePart(pathPattern);\n         return globStatusInternal(uri, new Path(absPathPattern.toUri()\n             .getPath()), filter);\n       } else {\n         List\u003cFileStatus\u003e results \u003d new ArrayList\u003cFileStatus\u003e();\n         for (String iFilePattern : filePatterns) {\n           Path iAbsFilePattern \u003d fixRelativePart(new Path(iFilePattern));\n           FileStatus[] files \u003d globStatusInternal(uri, iAbsFilePattern, filter);\n           for (FileStatus file : files) {\n             results.add(file);\n           }\n         }\n         return results.toArray(new FileStatus[results.size()]);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public FileStatus[] globStatus(final Path pathPattern,\n        final PathFilter filter) throws AccessControlException,\n        UnsupportedFileSystemException, IOException {\n      URI uri \u003d getFSofPath(fixRelativePart(pathPattern)).getUri();\n\n      String filename \u003d pathPattern.toUri().getPath();\n\n      List\u003cString\u003e filePatterns \u003d GlobExpander.expand(filename);\n      if (filePatterns.size() \u003d\u003d 1) {\n        Path absPathPattern \u003d fixRelativePart(pathPattern);\n        return globStatusInternal(uri, new Path(absPathPattern.toUri()\n            .getPath()), filter);\n      } else {\n        List\u003cFileStatus\u003e results \u003d new ArrayList\u003cFileStatus\u003e();\n        for (String iFilePattern : filePatterns) {\n          Path iAbsFilePattern \u003d fixRelativePart(new Path(iFilePattern));\n          FileStatus[] files \u003d globStatusInternal(uri, iAbsFilePattern, filter);\n          for (FileStatus file : files) {\n            results.add(file);\n          }\n        }\n        return results.toArray(new FileStatus[results.size()]);\n      }\n    }",
      "path": "src/java/org/apache/hadoop/fs/FileContext.java",
      "extendedDetails": {
        "oldValue": "[IOException]",
        "newValue": "[AccessControlException, UnsupportedFileSystemException, IOException]"
      }
    },
    "3f371a0a644181b204111ee4e12c995fc7b5e5f5": {
      "type": "Ybodychange",
      "commitMessage": "Hadoop-6223. Add new file system interface AbstractFileSystem with implementation of some file systems that delegate to old FileSystem. Contributed by Sanjay Radia.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@831475 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/10/09 3:24 PM",
      "commitName": "3f371a0a644181b204111ee4e12c995fc7b5e5f5",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "07/10/09 10:07 AM",
      "commitNameOld": "64f537da0a216055d5b6eae49a2a9129189cacbf",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 23.22,
      "commitsBetweenForRepo": 23,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,23 @@\n-    public FileStatus[] globStatus(final Path pathPattern, final PathFilter filter)\n-      throws IOException {\n-      \n+    public FileStatus[] globStatus(final Path pathPattern,\n+        final PathFilter filter) throws IOException {\n+      URI uri \u003d getFSofPath(fixRelativePart(pathPattern)).getUri();\n+\n       String filename \u003d pathPattern.toUri().getPath();\n-      \n+\n       List\u003cString\u003e filePatterns \u003d GlobExpander.expand(filename);\n       if (filePatterns.size() \u003d\u003d 1) {\n-        Path p \u003d fixRelativePart(pathPattern);\n-        FileSystem fs \u003d getFSofPath(p);\n-        URI uri \u003d fs.getUri();\n-        return globStatusInternal(uri, p, filter);\n+        Path absPathPattern \u003d fixRelativePart(pathPattern);\n+        return globStatusInternal(uri, new Path(absPathPattern.toUri()\n+            .getPath()), filter);\n       } else {\n         List\u003cFileStatus\u003e results \u003d new ArrayList\u003cFileStatus\u003e();\n-        for (String filePattern : filePatterns) {\n-          Path p \u003d new Path(filePattern);\n-          p \u003d fixRelativePart(p);\n-          FileSystem fs \u003d getFSofPath(p);\n-          URI uri \u003d fs.getUri();\n-          FileStatus[] files \u003d globStatusInternal(uri, p, filter);\n+        for (String iFilePattern : filePatterns) {\n+          Path iAbsFilePattern \u003d fixRelativePart(new Path(iFilePattern));\n+          FileStatus[] files \u003d globStatusInternal(uri, iAbsFilePattern, filter);\n           for (FileStatus file : files) {\n             results.add(file);\n           }\n         }\n         return results.toArray(new FileStatus[results.size()]);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public FileStatus[] globStatus(final Path pathPattern,\n        final PathFilter filter) throws IOException {\n      URI uri \u003d getFSofPath(fixRelativePart(pathPattern)).getUri();\n\n      String filename \u003d pathPattern.toUri().getPath();\n\n      List\u003cString\u003e filePatterns \u003d GlobExpander.expand(filename);\n      if (filePatterns.size() \u003d\u003d 1) {\n        Path absPathPattern \u003d fixRelativePart(pathPattern);\n        return globStatusInternal(uri, new Path(absPathPattern.toUri()\n            .getPath()), filter);\n      } else {\n        List\u003cFileStatus\u003e results \u003d new ArrayList\u003cFileStatus\u003e();\n        for (String iFilePattern : filePatterns) {\n          Path iAbsFilePattern \u003d fixRelativePart(new Path(iFilePattern));\n          FileStatus[] files \u003d globStatusInternal(uri, iAbsFilePattern, filter);\n          for (FileStatus file : files) {\n            results.add(file);\n          }\n        }\n        return results.toArray(new FileStatus[results.size()]);\n      }\n    }",
      "path": "src/java/org/apache/hadoop/fs/FileContext.java",
      "extendedDetails": {}
    },
    "64f537da0a216055d5b6eae49a2a9129189cacbf": {
      "type": "Ymultichange(Ybodychange,Yparametermetachange)",
      "commitMessage": "HADOOP-6286. Fix bugs in related to URI handling in glob methods in FileContext. Contributed by Boris Shkolnik.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@822805 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/10/09 10:07 AM",
      "commitName": "64f537da0a216055d5b6eae49a2a9129189cacbf",
      "commitAuthor": "Suresh Srinivas",
      "subchanges": [
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-6286. Fix bugs in related to URI handling in glob methods in FileContext. Contributed by Boris Shkolnik.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@822805 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "07/10/09 10:07 AM",
          "commitName": "64f537da0a216055d5b6eae49a2a9129189cacbf",
          "commitAuthor": "Suresh Srinivas",
          "commitDateOld": "18/09/09 5:03 PM",
          "commitNameOld": "fa48d9ea17e754e7bf2d5d0f71d98bfa94d177e0",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 18.71,
          "commitsBetweenForRepo": 11,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,26 @@\n-    public FileStatus[] globStatus(Path pathPattern, PathFilter filter)\n+    public FileStatus[] globStatus(final Path pathPattern, final PathFilter filter)\n       throws IOException {\n+      \n       String filename \u003d pathPattern.toUri().getPath();\n+      \n       List\u003cString\u003e filePatterns \u003d GlobExpander.expand(filename);\n       if (filePatterns.size() \u003d\u003d 1) {\n-        return globStatusInternal(pathPattern, filter);\n+        Path p \u003d fixRelativePart(pathPattern);\n+        FileSystem fs \u003d getFSofPath(p);\n+        URI uri \u003d fs.getUri();\n+        return globStatusInternal(uri, p, filter);\n       } else {\n         List\u003cFileStatus\u003e results \u003d new ArrayList\u003cFileStatus\u003e();\n         for (String filePattern : filePatterns) {\n-          FileStatus[] files \u003d \n-                      globStatusInternal(new Path(filePattern), filter);\n+          Path p \u003d new Path(filePattern);\n+          p \u003d fixRelativePart(p);\n+          FileSystem fs \u003d getFSofPath(p);\n+          URI uri \u003d fs.getUri();\n+          FileStatus[] files \u003d globStatusInternal(uri, p, filter);\n           for (FileStatus file : files) {\n             results.add(file);\n           }\n         }\n         return results.toArray(new FileStatus[results.size()]);\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public FileStatus[] globStatus(final Path pathPattern, final PathFilter filter)\n      throws IOException {\n      \n      String filename \u003d pathPattern.toUri().getPath();\n      \n      List\u003cString\u003e filePatterns \u003d GlobExpander.expand(filename);\n      if (filePatterns.size() \u003d\u003d 1) {\n        Path p \u003d fixRelativePart(pathPattern);\n        FileSystem fs \u003d getFSofPath(p);\n        URI uri \u003d fs.getUri();\n        return globStatusInternal(uri, p, filter);\n      } else {\n        List\u003cFileStatus\u003e results \u003d new ArrayList\u003cFileStatus\u003e();\n        for (String filePattern : filePatterns) {\n          Path p \u003d new Path(filePattern);\n          p \u003d fixRelativePart(p);\n          FileSystem fs \u003d getFSofPath(p);\n          URI uri \u003d fs.getUri();\n          FileStatus[] files \u003d globStatusInternal(uri, p, filter);\n          for (FileStatus file : files) {\n            results.add(file);\n          }\n        }\n        return results.toArray(new FileStatus[results.size()]);\n      }\n    }",
          "path": "src/java/org/apache/hadoop/fs/FileContext.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparametermetachange",
          "commitMessage": "HADOOP-6286. Fix bugs in related to URI handling in glob methods in FileContext. Contributed by Boris Shkolnik.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@822805 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "07/10/09 10:07 AM",
          "commitName": "64f537da0a216055d5b6eae49a2a9129189cacbf",
          "commitAuthor": "Suresh Srinivas",
          "commitDateOld": "18/09/09 5:03 PM",
          "commitNameOld": "fa48d9ea17e754e7bf2d5d0f71d98bfa94d177e0",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 18.71,
          "commitsBetweenForRepo": 11,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,26 @@\n-    public FileStatus[] globStatus(Path pathPattern, PathFilter filter)\n+    public FileStatus[] globStatus(final Path pathPattern, final PathFilter filter)\n       throws IOException {\n+      \n       String filename \u003d pathPattern.toUri().getPath();\n+      \n       List\u003cString\u003e filePatterns \u003d GlobExpander.expand(filename);\n       if (filePatterns.size() \u003d\u003d 1) {\n-        return globStatusInternal(pathPattern, filter);\n+        Path p \u003d fixRelativePart(pathPattern);\n+        FileSystem fs \u003d getFSofPath(p);\n+        URI uri \u003d fs.getUri();\n+        return globStatusInternal(uri, p, filter);\n       } else {\n         List\u003cFileStatus\u003e results \u003d new ArrayList\u003cFileStatus\u003e();\n         for (String filePattern : filePatterns) {\n-          FileStatus[] files \u003d \n-                      globStatusInternal(new Path(filePattern), filter);\n+          Path p \u003d new Path(filePattern);\n+          p \u003d fixRelativePart(p);\n+          FileSystem fs \u003d getFSofPath(p);\n+          URI uri \u003d fs.getUri();\n+          FileStatus[] files \u003d globStatusInternal(uri, p, filter);\n           for (FileStatus file : files) {\n             results.add(file);\n           }\n         }\n         return results.toArray(new FileStatus[results.size()]);\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public FileStatus[] globStatus(final Path pathPattern, final PathFilter filter)\n      throws IOException {\n      \n      String filename \u003d pathPattern.toUri().getPath();\n      \n      List\u003cString\u003e filePatterns \u003d GlobExpander.expand(filename);\n      if (filePatterns.size() \u003d\u003d 1) {\n        Path p \u003d fixRelativePart(pathPattern);\n        FileSystem fs \u003d getFSofPath(p);\n        URI uri \u003d fs.getUri();\n        return globStatusInternal(uri, p, filter);\n      } else {\n        List\u003cFileStatus\u003e results \u003d new ArrayList\u003cFileStatus\u003e();\n        for (String filePattern : filePatterns) {\n          Path p \u003d new Path(filePattern);\n          p \u003d fixRelativePart(p);\n          FileSystem fs \u003d getFSofPath(p);\n          URI uri \u003d fs.getUri();\n          FileStatus[] files \u003d globStatusInternal(uri, p, filter);\n          for (FileStatus file : files) {\n            results.add(file);\n          }\n        }\n        return results.toArray(new FileStatus[results.size()]);\n      }\n    }",
          "path": "src/java/org/apache/hadoop/fs/FileContext.java",
          "extendedDetails": {
            "oldValue": "[pathPattern-Path, filter-PathFilter]",
            "newValue": "[pathPattern-Path(modifiers-final), filter-PathFilter(modifiers-final)]"
          }
        }
      ]
    },
    "0294c49df60150bd9b363af5cfbc312222c12c69": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-4952. Add new improved file system interface FileContext for the application writer. Contributed by Sanjay Radia.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@816398 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/09/09 3:27 PM",
      "commitName": "0294c49df60150bd9b363af5cfbc312222c12c69",
      "commitAuthor": "Suresh Srinivas",
      "diff": "@@ -0,0 +1,18 @@\n+    public FileStatus[] globStatus(Path pathPattern, PathFilter filter)\n+      throws IOException {\n+      String filename \u003d pathPattern.toUri().getPath();\n+      List\u003cString\u003e filePatterns \u003d GlobExpander.expand(filename);\n+      if (filePatterns.size() \u003d\u003d 1) {\n+        return globStatusInternal(pathPattern, filter);\n+      } else {\n+        List\u003cFileStatus\u003e results \u003d new ArrayList\u003cFileStatus\u003e();\n+        for (String filePattern : filePatterns) {\n+          FileStatus[] files \u003d \n+                      globStatusInternal(new Path(filePattern), filter);\n+          for (FileStatus file : files) {\n+            results.add(file);\n+          }\n+        }\n+        return results.toArray(new FileStatus[results.size()]);\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public FileStatus[] globStatus(Path pathPattern, PathFilter filter)\n      throws IOException {\n      String filename \u003d pathPattern.toUri().getPath();\n      List\u003cString\u003e filePatterns \u003d GlobExpander.expand(filename);\n      if (filePatterns.size() \u003d\u003d 1) {\n        return globStatusInternal(pathPattern, filter);\n      } else {\n        List\u003cFileStatus\u003e results \u003d new ArrayList\u003cFileStatus\u003e();\n        for (String filePattern : filePatterns) {\n          FileStatus[] files \u003d \n                      globStatusInternal(new Path(filePattern), filter);\n          for (FileStatus file : files) {\n            results.add(file);\n          }\n        }\n        return results.toArray(new FileStatus[results.size()]);\n      }\n    }",
      "path": "src/java/org/apache/hadoop/fs/FileContext.java"
    }
  }
}