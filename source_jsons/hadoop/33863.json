{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ResourceHandlerModule.java",
  "functionName": "parseConfiguredCGroupPath",
  "functionId": "parseConfiguredCGroupPath___cgroupMountPath-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/resources/ResourceHandlerModule.java",
  "functionStartLine": 369,
  "functionEndLine": 396,
  "numCommitsSeen": 15,
  "timeTaken": 2317,
  "changeHistory": [
    "d5bc9582793de6ab2d2e489cde293bf076229a1c",
    "47b145b9b4e81d781891abce8a6638f0b436acc4"
  ],
  "changeHistoryShort": {
    "d5bc9582793de6ab2d2e489cde293bf076229a1c": "Ybodychange",
    "47b145b9b4e81d781891abce8a6638f0b436acc4": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d5bc9582793de6ab2d2e489cde293bf076229a1c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7099. ResourceHandlerModule.parseConfiguredCGroupPath only works for privileged yarn users. (Contributed by Miklos Szegedi via Yufei Gu)\n",
      "commitDate": "28/08/17 10:09 AM",
      "commitName": "d5bc9582793de6ab2d2e489cde293bf076229a1c",
      "commitAuthor": "Yufei Gu",
      "commitDateOld": "22/08/17 1:14 AM",
      "commitNameOld": "d5ff57a08fac983f8b5d201064ce07945f0f216e",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 6.37,
      "commitsBetweenForRepo": 31,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,28 @@\n   public static Map\u003cString, Set\u003cString\u003e\u003e parseConfiguredCGroupPath(\n       String cgroupMountPath) throws IOException {\n     File cgroupDir \u003d new File(cgroupMountPath);\n     File[] list \u003d cgroupDir.listFiles();\n     if (list \u003d\u003d null) {\n       throw new IOException(\"Empty cgroup mount directory specified: \" +\n           cgroupMountPath);\n     }\n \n     Map\u003cString, Set\u003cString\u003e\u003e pathSubsystemMappings \u003d new HashMap\u003c\u003e();\n     Set\u003cString\u003e validCGroups \u003d\n         CGroupsHandler.CGroupController.getValidCGroups();\n     for (File candidate: list) {\n       Set\u003cString\u003e cgroupList \u003d\n           new HashSet\u003c\u003e(Arrays.asList(candidate.getName().split(\",\")));\n       // Collect the valid subsystem names\n       cgroupList.retainAll(validCGroups);\n       if (!cgroupList.isEmpty()) {\n-        if (candidate.isDirectory() \u0026\u0026 candidate.canWrite()) {\n+        if (candidate.isDirectory()) {\n           pathSubsystemMappings.put(candidate.getAbsolutePath(), cgroupList);\n         } else {\n-          LOG.warn(\"The following cgroup is not a directory or it is not\"\n-              + \" writable\" + candidate.getAbsolutePath());\n+          LOG.warn(\"The following cgroup is not a directory \" +\n+              candidate.getAbsolutePath());\n         }\n       }\n     }\n     return pathSubsystemMappings;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static Map\u003cString, Set\u003cString\u003e\u003e parseConfiguredCGroupPath(\n      String cgroupMountPath) throws IOException {\n    File cgroupDir \u003d new File(cgroupMountPath);\n    File[] list \u003d cgroupDir.listFiles();\n    if (list \u003d\u003d null) {\n      throw new IOException(\"Empty cgroup mount directory specified: \" +\n          cgroupMountPath);\n    }\n\n    Map\u003cString, Set\u003cString\u003e\u003e pathSubsystemMappings \u003d new HashMap\u003c\u003e();\n    Set\u003cString\u003e validCGroups \u003d\n        CGroupsHandler.CGroupController.getValidCGroups();\n    for (File candidate: list) {\n      Set\u003cString\u003e cgroupList \u003d\n          new HashSet\u003c\u003e(Arrays.asList(candidate.getName().split(\",\")));\n      // Collect the valid subsystem names\n      cgroupList.retainAll(validCGroups);\n      if (!cgroupList.isEmpty()) {\n        if (candidate.isDirectory()) {\n          pathSubsystemMappings.put(candidate.getAbsolutePath(), cgroupList);\n        } else {\n          LOG.warn(\"The following cgroup is not a directory \" +\n              candidate.getAbsolutePath());\n        }\n      }\n    }\n    return pathSubsystemMappings;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/resources/ResourceHandlerModule.java",
      "extendedDetails": {}
    },
    "47b145b9b4e81d781891abce8a6638f0b436acc4": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6757. Refactor the usage of yarn.nodemanager.linux-container-executor.cgroups.mount-path\n(Contributed by Miklos Szegedi via Daniel Templeton)\n",
      "commitDate": "08/08/17 10:33 AM",
      "commitName": "47b145b9b4e81d781891abce8a6638f0b436acc4",
      "commitAuthor": "Daniel Templeton",
      "diff": "@@ -0,0 +1,28 @@\n+  public static Map\u003cString, Set\u003cString\u003e\u003e parseConfiguredCGroupPath(\n+      String cgroupMountPath) throws IOException {\n+    File cgroupDir \u003d new File(cgroupMountPath);\n+    File[] list \u003d cgroupDir.listFiles();\n+    if (list \u003d\u003d null) {\n+      throw new IOException(\"Empty cgroup mount directory specified: \" +\n+          cgroupMountPath);\n+    }\n+\n+    Map\u003cString, Set\u003cString\u003e\u003e pathSubsystemMappings \u003d new HashMap\u003c\u003e();\n+    Set\u003cString\u003e validCGroups \u003d\n+        CGroupsHandler.CGroupController.getValidCGroups();\n+    for (File candidate: list) {\n+      Set\u003cString\u003e cgroupList \u003d\n+          new HashSet\u003c\u003e(Arrays.asList(candidate.getName().split(\",\")));\n+      // Collect the valid subsystem names\n+      cgroupList.retainAll(validCGroups);\n+      if (!cgroupList.isEmpty()) {\n+        if (candidate.isDirectory() \u0026\u0026 candidate.canWrite()) {\n+          pathSubsystemMappings.put(candidate.getAbsolutePath(), cgroupList);\n+        } else {\n+          LOG.warn(\"The following cgroup is not a directory or it is not\"\n+              + \" writable\" + candidate.getAbsolutePath());\n+        }\n+      }\n+    }\n+    return pathSubsystemMappings;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static Map\u003cString, Set\u003cString\u003e\u003e parseConfiguredCGroupPath(\n      String cgroupMountPath) throws IOException {\n    File cgroupDir \u003d new File(cgroupMountPath);\n    File[] list \u003d cgroupDir.listFiles();\n    if (list \u003d\u003d null) {\n      throw new IOException(\"Empty cgroup mount directory specified: \" +\n          cgroupMountPath);\n    }\n\n    Map\u003cString, Set\u003cString\u003e\u003e pathSubsystemMappings \u003d new HashMap\u003c\u003e();\n    Set\u003cString\u003e validCGroups \u003d\n        CGroupsHandler.CGroupController.getValidCGroups();\n    for (File candidate: list) {\n      Set\u003cString\u003e cgroupList \u003d\n          new HashSet\u003c\u003e(Arrays.asList(candidate.getName().split(\",\")));\n      // Collect the valid subsystem names\n      cgroupList.retainAll(validCGroups);\n      if (!cgroupList.isEmpty()) {\n        if (candidate.isDirectory() \u0026\u0026 candidate.canWrite()) {\n          pathSubsystemMappings.put(candidate.getAbsolutePath(), cgroupList);\n        } else {\n          LOG.warn(\"The following cgroup is not a directory or it is not\"\n              + \" writable\" + candidate.getAbsolutePath());\n        }\n      }\n    }\n    return pathSubsystemMappings;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/resources/ResourceHandlerModule.java"
    }
  }
}