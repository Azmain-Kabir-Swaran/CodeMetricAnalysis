{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AbstractDelegationTokenSecretManager.java",
  "functionName": "removeExpiredToken",
  "functionId": "removeExpiredToken",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java",
  "functionStartLine": 626,
  "functionEndLine": 643,
  "numCommitsSeen": 46,
  "timeTaken": 2368,
  "changeHistory": [
    "2dd960de983a30bf0d9ee957bdb09f825f9d40a3",
    "0202480742b8539aa7aa1e94dc9cab75d863cc4e",
    "fdfedf4c31fa1d8338fc915a631dfc57c1ca38da",
    "f863543206a67ba295454609d618e16f91309b84",
    "4a5ba3b7bd2360fd9605863630b477d362874e1e",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "27ab7f3db9a1489d81ecf32cc3493d1f4efae68b",
    "38c59c0af7595897dbff8e5f13b7ff6978b9c08b"
  ],
  "changeHistoryShort": {
    "2dd960de983a30bf0d9ee957bdb09f825f9d40a3": "Ybodychange",
    "0202480742b8539aa7aa1e94dc9cab75d863cc4e": "Ybodychange",
    "fdfedf4c31fa1d8338fc915a631dfc57c1ca38da": "Ybodychange",
    "f863543206a67ba295454609d618e16f91309b84": "Ymultichange(Ymodifierchange,Yexceptionschange,Ybodychange)",
    "4a5ba3b7bd2360fd9605863630b477d362874e1e": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "27ab7f3db9a1489d81ecf32cc3493d1f4efae68b": "Ymultichange(Ymodifierchange,Ybodychange)",
    "38c59c0af7595897dbff8e5f13b7ff6978b9c08b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2dd960de983a30bf0d9ee957bdb09f825f9d40a3": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15212. Add independent secret manager method for logging expired tokens. Contributed by Daryn Sharp.\n",
      "commitDate": "06/02/18 1:33 PM",
      "commitName": "2dd960de983a30bf0d9ee957bdb09f825f9d40a3",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "17/07/17 9:32 PM",
      "commitNameOld": "ccaf036662e22da14583942054898c99fa51dae5",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 203.71,
      "commitsBetweenForRepo": 1538,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,18 @@\n   private void removeExpiredToken() throws IOException {\n     long now \u003d Time.now();\n     Set\u003cTokenIdent\u003e expiredTokens \u003d new HashSet\u003cTokenIdent\u003e();\n     synchronized (this) {\n       Iterator\u003cMap.Entry\u003cTokenIdent, DelegationTokenInformation\u003e\u003e i \u003d\n           currentTokens.entrySet().iterator();\n       while (i.hasNext()) {\n         Map.Entry\u003cTokenIdent, DelegationTokenInformation\u003e entry \u003d i.next();\n         long renewDate \u003d entry.getValue().getRenewDate();\n         if (renewDate \u003c now) {\n           expiredTokens.add(entry.getKey());\n           i.remove();\n         }\n       }\n     }\n     // don\u0027t hold lock on \u0027this\u0027 to avoid edit log updates blocking token ops\n-    for (TokenIdent ident : expiredTokens) {\n-      logExpireToken(ident);\n-      LOG.info(\"Removing expired token \" + formatTokenId(ident));\n-      removeStoredToken(ident);\n-    }\n+    logExpireTokens(expiredTokens);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void removeExpiredToken() throws IOException {\n    long now \u003d Time.now();\n    Set\u003cTokenIdent\u003e expiredTokens \u003d new HashSet\u003cTokenIdent\u003e();\n    synchronized (this) {\n      Iterator\u003cMap.Entry\u003cTokenIdent, DelegationTokenInformation\u003e\u003e i \u003d\n          currentTokens.entrySet().iterator();\n      while (i.hasNext()) {\n        Map.Entry\u003cTokenIdent, DelegationTokenInformation\u003e entry \u003d i.next();\n        long renewDate \u003d entry.getValue().getRenewDate();\n        if (renewDate \u003c now) {\n          expiredTokens.add(entry.getKey());\n          i.remove();\n        }\n      }\n    }\n    // don\u0027t hold lock on \u0027this\u0027 to avoid edit log updates blocking token ops\n    logExpireTokens(expiredTokens);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java",
      "extendedDetails": {}
    },
    "0202480742b8539aa7aa1e94dc9cab75d863cc4e": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13174. Add more debug logs for delegation tokens and authentication.\n",
      "commitDate": "08/06/17 9:34 PM",
      "commitName": "0202480742b8539aa7aa1e94dc9cab75d863cc4e",
      "commitAuthor": "Xiao Chen",
      "commitDateOld": "19/01/17 12:56 AM",
      "commitNameOld": "176346721006a03f41d028560e9e29b5931d5be2",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 140.82,
      "commitsBetweenForRepo": 766,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,22 @@\n   private void removeExpiredToken() throws IOException {\n     long now \u003d Time.now();\n     Set\u003cTokenIdent\u003e expiredTokens \u003d new HashSet\u003cTokenIdent\u003e();\n     synchronized (this) {\n       Iterator\u003cMap.Entry\u003cTokenIdent, DelegationTokenInformation\u003e\u003e i \u003d\n           currentTokens.entrySet().iterator();\n       while (i.hasNext()) {\n         Map.Entry\u003cTokenIdent, DelegationTokenInformation\u003e entry \u003d i.next();\n         long renewDate \u003d entry.getValue().getRenewDate();\n         if (renewDate \u003c now) {\n           expiredTokens.add(entry.getKey());\n           i.remove();\n         }\n       }\n     }\n     // don\u0027t hold lock on \u0027this\u0027 to avoid edit log updates blocking token ops\n     for (TokenIdent ident : expiredTokens) {\n       logExpireToken(ident);\n+      LOG.info(\"Removing expired token \" + formatTokenId(ident));\n       removeStoredToken(ident);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void removeExpiredToken() throws IOException {\n    long now \u003d Time.now();\n    Set\u003cTokenIdent\u003e expiredTokens \u003d new HashSet\u003cTokenIdent\u003e();\n    synchronized (this) {\n      Iterator\u003cMap.Entry\u003cTokenIdent, DelegationTokenInformation\u003e\u003e i \u003d\n          currentTokens.entrySet().iterator();\n      while (i.hasNext()) {\n        Map.Entry\u003cTokenIdent, DelegationTokenInformation\u003e entry \u003d i.next();\n        long renewDate \u003d entry.getValue().getRenewDate();\n        if (renewDate \u003c now) {\n          expiredTokens.add(entry.getKey());\n          i.remove();\n        }\n      }\n    }\n    // don\u0027t hold lock on \u0027this\u0027 to avoid edit log updates blocking token ops\n    for (TokenIdent ident : expiredTokens) {\n      logExpireToken(ident);\n      LOG.info(\"Removing expired token \" + formatTokenId(ident));\n      removeStoredToken(ident);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java",
      "extendedDetails": {}
    },
    "fdfedf4c31fa1d8338fc915a631dfc57c1ca38da": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-9574. Added new methods in AbstractDelegationTokenSecretManager for helping YARN ResourceManager to reuse code for RM restart. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1487692 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/05/13 5:52 PM",
      "commitName": "fdfedf4c31fa1d8338fc915a631dfc57c1ca38da",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "12/04/13 8:18 AM",
      "commitNameOld": "f863543206a67ba295454609d618e16f91309b84",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 47.4,
      "commitsBetweenForRepo": 266,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,21 @@\n   private void removeExpiredToken() throws IOException {\n     long now \u003d Time.now();\n     Set\u003cTokenIdent\u003e expiredTokens \u003d new HashSet\u003cTokenIdent\u003e();\n     synchronized (this) {\n       Iterator\u003cMap.Entry\u003cTokenIdent, DelegationTokenInformation\u003e\u003e i \u003d\n           currentTokens.entrySet().iterator();\n       while (i.hasNext()) {\n         Map.Entry\u003cTokenIdent, DelegationTokenInformation\u003e entry \u003d i.next();\n         long renewDate \u003d entry.getValue().getRenewDate();\n         if (renewDate \u003c now) {\n           expiredTokens.add(entry.getKey());\n           i.remove();\n         }\n       }\n     }\n     // don\u0027t hold lock on \u0027this\u0027 to avoid edit log updates blocking token ops\n     for (TokenIdent ident : expiredTokens) {\n       logExpireToken(ident);\n+      removeStoredToken(ident);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void removeExpiredToken() throws IOException {\n    long now \u003d Time.now();\n    Set\u003cTokenIdent\u003e expiredTokens \u003d new HashSet\u003cTokenIdent\u003e();\n    synchronized (this) {\n      Iterator\u003cMap.Entry\u003cTokenIdent, DelegationTokenInformation\u003e\u003e i \u003d\n          currentTokens.entrySet().iterator();\n      while (i.hasNext()) {\n        Map.Entry\u003cTokenIdent, DelegationTokenInformation\u003e entry \u003d i.next();\n        long renewDate \u003d entry.getValue().getRenewDate();\n        if (renewDate \u003c now) {\n          expiredTokens.add(entry.getKey());\n          i.remove();\n        }\n      }\n    }\n    // don\u0027t hold lock on \u0027this\u0027 to avoid edit log updates blocking token ops\n    for (TokenIdent ident : expiredTokens) {\n      logExpireToken(ident);\n      removeStoredToken(ident);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java",
      "extendedDetails": {}
    },
    "f863543206a67ba295454609d618e16f91309b84": {
      "type": "Ymultichange(Ymodifierchange,Yexceptionschange,Ybodychange)",
      "commitMessage": "HDFS-4477. Secondary namenode may retain old tokens. Contributed by Daryn Sharp.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1467307 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/04/13 8:18 AM",
      "commitName": "f863543206a67ba295454609d618e16f91309b84",
      "commitAuthor": "Kihwal Lee",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-4477. Secondary namenode may retain old tokens. Contributed by Daryn Sharp.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1467307 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "12/04/13 8:18 AM",
          "commitName": "f863543206a67ba295454609d618e16f91309b84",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "19/09/12 9:06 PM",
          "commitNameOld": "4c56bccf5ee1d6ec1fcef0804eacae785c4d7c18",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 204.47,
          "commitsBetweenForRepo": 997,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,20 @@\n-  private synchronized void removeExpiredToken() {\n+  private void removeExpiredToken() throws IOException {\n     long now \u003d Time.now();\n-    Iterator\u003cDelegationTokenInformation\u003e i \u003d currentTokens.values().iterator();\n-    while (i.hasNext()) {\n-      long renewDate \u003d i.next().getRenewDate();\n-      if (now \u003e renewDate) {\n-        i.remove();\n+    Set\u003cTokenIdent\u003e expiredTokens \u003d new HashSet\u003cTokenIdent\u003e();\n+    synchronized (this) {\n+      Iterator\u003cMap.Entry\u003cTokenIdent, DelegationTokenInformation\u003e\u003e i \u003d\n+          currentTokens.entrySet().iterator();\n+      while (i.hasNext()) {\n+        Map.Entry\u003cTokenIdent, DelegationTokenInformation\u003e entry \u003d i.next();\n+        long renewDate \u003d entry.getValue().getRenewDate();\n+        if (renewDate \u003c now) {\n+          expiredTokens.add(entry.getKey());\n+          i.remove();\n+        }\n       }\n     }\n+    // don\u0027t hold lock on \u0027this\u0027 to avoid edit log updates blocking token ops\n+    for (TokenIdent ident : expiredTokens) {\n+      logExpireToken(ident);\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void removeExpiredToken() throws IOException {\n    long now \u003d Time.now();\n    Set\u003cTokenIdent\u003e expiredTokens \u003d new HashSet\u003cTokenIdent\u003e();\n    synchronized (this) {\n      Iterator\u003cMap.Entry\u003cTokenIdent, DelegationTokenInformation\u003e\u003e i \u003d\n          currentTokens.entrySet().iterator();\n      while (i.hasNext()) {\n        Map.Entry\u003cTokenIdent, DelegationTokenInformation\u003e entry \u003d i.next();\n        long renewDate \u003d entry.getValue().getRenewDate();\n        if (renewDate \u003c now) {\n          expiredTokens.add(entry.getKey());\n          i.remove();\n        }\n      }\n    }\n    // don\u0027t hold lock on \u0027this\u0027 to avoid edit log updates blocking token ops\n    for (TokenIdent ident : expiredTokens) {\n      logExpireToken(ident);\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java",
          "extendedDetails": {
            "oldValue": "[private, synchronized]",
            "newValue": "[private]"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "HDFS-4477. Secondary namenode may retain old tokens. Contributed by Daryn Sharp.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1467307 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "12/04/13 8:18 AM",
          "commitName": "f863543206a67ba295454609d618e16f91309b84",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "19/09/12 9:06 PM",
          "commitNameOld": "4c56bccf5ee1d6ec1fcef0804eacae785c4d7c18",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 204.47,
          "commitsBetweenForRepo": 997,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,20 @@\n-  private synchronized void removeExpiredToken() {\n+  private void removeExpiredToken() throws IOException {\n     long now \u003d Time.now();\n-    Iterator\u003cDelegationTokenInformation\u003e i \u003d currentTokens.values().iterator();\n-    while (i.hasNext()) {\n-      long renewDate \u003d i.next().getRenewDate();\n-      if (now \u003e renewDate) {\n-        i.remove();\n+    Set\u003cTokenIdent\u003e expiredTokens \u003d new HashSet\u003cTokenIdent\u003e();\n+    synchronized (this) {\n+      Iterator\u003cMap.Entry\u003cTokenIdent, DelegationTokenInformation\u003e\u003e i \u003d\n+          currentTokens.entrySet().iterator();\n+      while (i.hasNext()) {\n+        Map.Entry\u003cTokenIdent, DelegationTokenInformation\u003e entry \u003d i.next();\n+        long renewDate \u003d entry.getValue().getRenewDate();\n+        if (renewDate \u003c now) {\n+          expiredTokens.add(entry.getKey());\n+          i.remove();\n+        }\n       }\n     }\n+    // don\u0027t hold lock on \u0027this\u0027 to avoid edit log updates blocking token ops\n+    for (TokenIdent ident : expiredTokens) {\n+      logExpireToken(ident);\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void removeExpiredToken() throws IOException {\n    long now \u003d Time.now();\n    Set\u003cTokenIdent\u003e expiredTokens \u003d new HashSet\u003cTokenIdent\u003e();\n    synchronized (this) {\n      Iterator\u003cMap.Entry\u003cTokenIdent, DelegationTokenInformation\u003e\u003e i \u003d\n          currentTokens.entrySet().iterator();\n      while (i.hasNext()) {\n        Map.Entry\u003cTokenIdent, DelegationTokenInformation\u003e entry \u003d i.next();\n        long renewDate \u003d entry.getValue().getRenewDate();\n        if (renewDate \u003c now) {\n          expiredTokens.add(entry.getKey());\n          i.remove();\n        }\n      }\n    }\n    // don\u0027t hold lock on \u0027this\u0027 to avoid edit log updates blocking token ops\n    for (TokenIdent ident : expiredTokens) {\n      logExpireToken(ident);\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[IOException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-4477. Secondary namenode may retain old tokens. Contributed by Daryn Sharp.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1467307 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "12/04/13 8:18 AM",
          "commitName": "f863543206a67ba295454609d618e16f91309b84",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "19/09/12 9:06 PM",
          "commitNameOld": "4c56bccf5ee1d6ec1fcef0804eacae785c4d7c18",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 204.47,
          "commitsBetweenForRepo": 997,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,20 @@\n-  private synchronized void removeExpiredToken() {\n+  private void removeExpiredToken() throws IOException {\n     long now \u003d Time.now();\n-    Iterator\u003cDelegationTokenInformation\u003e i \u003d currentTokens.values().iterator();\n-    while (i.hasNext()) {\n-      long renewDate \u003d i.next().getRenewDate();\n-      if (now \u003e renewDate) {\n-        i.remove();\n+    Set\u003cTokenIdent\u003e expiredTokens \u003d new HashSet\u003cTokenIdent\u003e();\n+    synchronized (this) {\n+      Iterator\u003cMap.Entry\u003cTokenIdent, DelegationTokenInformation\u003e\u003e i \u003d\n+          currentTokens.entrySet().iterator();\n+      while (i.hasNext()) {\n+        Map.Entry\u003cTokenIdent, DelegationTokenInformation\u003e entry \u003d i.next();\n+        long renewDate \u003d entry.getValue().getRenewDate();\n+        if (renewDate \u003c now) {\n+          expiredTokens.add(entry.getKey());\n+          i.remove();\n+        }\n       }\n     }\n+    // don\u0027t hold lock on \u0027this\u0027 to avoid edit log updates blocking token ops\n+    for (TokenIdent ident : expiredTokens) {\n+      logExpireToken(ident);\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void removeExpiredToken() throws IOException {\n    long now \u003d Time.now();\n    Set\u003cTokenIdent\u003e expiredTokens \u003d new HashSet\u003cTokenIdent\u003e();\n    synchronized (this) {\n      Iterator\u003cMap.Entry\u003cTokenIdent, DelegationTokenInformation\u003e\u003e i \u003d\n          currentTokens.entrySet().iterator();\n      while (i.hasNext()) {\n        Map.Entry\u003cTokenIdent, DelegationTokenInformation\u003e entry \u003d i.next();\n        long renewDate \u003d entry.getValue().getRenewDate();\n        if (renewDate \u003c now) {\n          expiredTokens.add(entry.getKey());\n          i.remove();\n        }\n      }\n    }\n    // don\u0027t hold lock on \u0027this\u0027 to avoid edit log updates blocking token ops\n    for (TokenIdent ident : expiredTokens) {\n      logExpireToken(ident);\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "4a5ba3b7bd2360fd9605863630b477d362874e1e": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3641. Move server Util time methods to common and use now instead of System#currentTimeMillis. Contributed by Eli Collins\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1360858 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/07/12 12:01 PM",
      "commitName": "4a5ba3b7bd2360fd9605863630b477d362874e1e",
      "commitAuthor": "Eli Collins",
      "commitDateOld": "08/02/12 10:12 PM",
      "commitNameOld": "e918b91e23985fa1bb353c54a2e733f8ba6dbe49",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 154.53,
      "commitsBetweenForRepo": 990,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,10 @@\n   private synchronized void removeExpiredToken() {\n-    long now \u003d System.currentTimeMillis();\n+    long now \u003d Time.now();\n     Iterator\u003cDelegationTokenInformation\u003e i \u003d currentTokens.values().iterator();\n     while (i.hasNext()) {\n       long renewDate \u003d i.next().getRenewDate();\n       if (now \u003e renewDate) {\n         i.remove();\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void removeExpiredToken() {\n    long now \u003d Time.now();\n    Iterator\u003cDelegationTokenInformation\u003e i \u003d currentTokens.values().iterator();\n    while (i.hasNext()) {\n      long renewDate \u003d i.next().getRenewDate();\n      if (now \u003e renewDate) {\n        i.remove();\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private synchronized void removeExpiredToken() {\n    long now \u003d System.currentTimeMillis();\n    Iterator\u003cDelegationTokenInformation\u003e i \u003d currentTokens.values().iterator();\n    while (i.hasNext()) {\n      long renewDate \u003d i.next().getRenewDate();\n      if (now \u003e renewDate) {\n        i.remove();\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private synchronized void removeExpiredToken() {\n    long now \u003d System.currentTimeMillis();\n    Iterator\u003cDelegationTokenInformation\u003e i \u003d currentTokens.values().iterator();\n    while (i.hasNext()) {\n      long renewDate \u003d i.next().getRenewDate();\n      if (now \u003e renewDate) {\n        i.remove();\n      }\n    }\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private synchronized void removeExpiredToken() {\n    long now \u003d System.currentTimeMillis();\n    Iterator\u003cDelegationTokenInformation\u003e i \u003d currentTokens.values().iterator();\n    while (i.hasNext()) {\n      long renewDate \u003d i.next().getRenewDate();\n      if (now \u003e renewDate) {\n        i.remove();\n      }\n    }\n  }",
      "path": "common/src/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java",
        "newPath": "common/src/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java"
      }
    },
    "27ab7f3db9a1489d81ecf32cc3493d1f4efae68b": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "HADOOP-6573. Support for persistent delegation tokens. Contributed by Jitendra Pandey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@916468 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/02/10 1:43 PM",
      "commitName": "27ab7f3db9a1489d81ecf32cc3493d1f4efae68b",
      "commitAuthor": "Konstantin Shvachko",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "HADOOP-6573. Support for persistent delegation tokens. Contributed by Jitendra Pandey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@916468 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "25/02/10 1:43 PM",
          "commitName": "27ab7f3db9a1489d81ecf32cc3493d1f4efae68b",
          "commitAuthor": "Konstantin Shvachko",
          "commitDateOld": "19/02/10 12:49 AM",
          "commitNameOld": "a417a8faeaa1a40e140c7f86463e699d92404454",
          "commitAuthorOld": "Owen O\u0027Malley",
          "daysBetweenCommits": 6.54,
          "commitsBetweenForRepo": 10,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,10 @@\n-  private void removeExpiredToken() {\n+  private synchronized void removeExpiredToken() {\n     long now \u003d System.currentTimeMillis();\n-    synchronized (currentTokens) {\n-      Iterator\u003cDelegationTokenInformation\u003e i \u003d currentTokens.values().iterator();\n-      while (i.hasNext()) {\n-        long renewDate \u003d i.next().getRenewDate();\n-        if (now \u003e renewDate) {\n-          i.remove();\n-        }\n+    Iterator\u003cDelegationTokenInformation\u003e i \u003d currentTokens.values().iterator();\n+    while (i.hasNext()) {\n+      long renewDate \u003d i.next().getRenewDate();\n+      if (now \u003e renewDate) {\n+        i.remove();\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private synchronized void removeExpiredToken() {\n    long now \u003d System.currentTimeMillis();\n    Iterator\u003cDelegationTokenInformation\u003e i \u003d currentTokens.values().iterator();\n    while (i.hasNext()) {\n      long renewDate \u003d i.next().getRenewDate();\n      if (now \u003e renewDate) {\n        i.remove();\n      }\n    }\n  }",
          "path": "src/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[private, synchronized]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-6573. Support for persistent delegation tokens. Contributed by Jitendra Pandey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@916468 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "25/02/10 1:43 PM",
          "commitName": "27ab7f3db9a1489d81ecf32cc3493d1f4efae68b",
          "commitAuthor": "Konstantin Shvachko",
          "commitDateOld": "19/02/10 12:49 AM",
          "commitNameOld": "a417a8faeaa1a40e140c7f86463e699d92404454",
          "commitAuthorOld": "Owen O\u0027Malley",
          "daysBetweenCommits": 6.54,
          "commitsBetweenForRepo": 10,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,10 @@\n-  private void removeExpiredToken() {\n+  private synchronized void removeExpiredToken() {\n     long now \u003d System.currentTimeMillis();\n-    synchronized (currentTokens) {\n-      Iterator\u003cDelegationTokenInformation\u003e i \u003d currentTokens.values().iterator();\n-      while (i.hasNext()) {\n-        long renewDate \u003d i.next().getRenewDate();\n-        if (now \u003e renewDate) {\n-          i.remove();\n-        }\n+    Iterator\u003cDelegationTokenInformation\u003e i \u003d currentTokens.values().iterator();\n+    while (i.hasNext()) {\n+      long renewDate \u003d i.next().getRenewDate();\n+      if (now \u003e renewDate) {\n+        i.remove();\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private synchronized void removeExpiredToken() {\n    long now \u003d System.currentTimeMillis();\n    Iterator\u003cDelegationTokenInformation\u003e i \u003d currentTokens.values().iterator();\n    while (i.hasNext()) {\n      long renewDate \u003d i.next().getRenewDate();\n      if (now \u003e renewDate) {\n        i.remove();\n      }\n    }\n  }",
          "path": "src/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "38c59c0af7595897dbff8e5f13b7ff6978b9c08b": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-6547. Move DelegationToken into Common, so that it can be used by\nMapReduce also. (devaraj via omalley)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@907956 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/02/10 12:10 AM",
      "commitName": "38c59c0af7595897dbff8e5f13b7ff6978b9c08b",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,12 @@\n+  private void removeExpiredToken() {\n+    long now \u003d System.currentTimeMillis();\n+    synchronized (currentTokens) {\n+      Iterator\u003cDelegationTokenInformation\u003e i \u003d currentTokens.values().iterator();\n+      while (i.hasNext()) {\n+        long renewDate \u003d i.next().getRenewDate();\n+        if (now \u003e renewDate) {\n+          i.remove();\n+        }\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void removeExpiredToken() {\n    long now \u003d System.currentTimeMillis();\n    synchronized (currentTokens) {\n      Iterator\u003cDelegationTokenInformation\u003e i \u003d currentTokens.values().iterator();\n      while (i.hasNext()) {\n        long renewDate \u003d i.next().getRenewDate();\n        if (now \u003e renewDate) {\n          i.remove();\n        }\n      }\n    }\n  }",
      "path": "src/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java"
    }
  }
}