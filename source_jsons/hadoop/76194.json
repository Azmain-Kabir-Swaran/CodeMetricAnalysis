{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CBZip2InputStream.java",
  "functionName": "hbCreateDecodeTables",
  "functionId": "hbCreateDecodeTables___limit-int[](modifiers-final)__base-int[](modifiers-final)__perm-int[](modifiers-final)__length-char[](modifiers-final)__minLen-int(modifiers-final)__maxLen-int(modifiers-final)__alphaSize-int(modifiers-final)",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/compress/bzip2/CBZip2InputStream.java",
  "functionStartLine": 657,
  "functionEndLine": 693,
  "numCommitsSeen": 10,
  "timeTaken": 976,
  "changeHistory": [
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36"
  ],
  "changeHistoryShort": {
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private static void hbCreateDecodeTables(final int[] limit,\n      final int[] base, final int[] perm, final char[] length,\n      final int minLen, final int maxLen, final int alphaSize) {\n    for (int i \u003d minLen, pp \u003d 0; i \u003c\u003d maxLen; i++) {\n      for (int j \u003d 0; j \u003c alphaSize; j++) {\n        if (length[j] \u003d\u003d i) {\n          perm[pp++] \u003d j;\n        }\n      }\n    }\n\n    for (int i \u003d MAX_CODE_LEN; --i \u003e 0;) {\n      base[i] \u003d 0;\n      limit[i] \u003d 0;\n    }\n\n    for (int i \u003d 0; i \u003c alphaSize; i++) {\n      base[length[i] + 1]++;\n    }\n\n    for (int i \u003d 1, b \u003d base[0]; i \u003c MAX_CODE_LEN; i++) {\n      b +\u003d base[i];\n      base[i] \u003d b;\n    }\n\n    for (int i \u003d minLen, vec \u003d 0, b \u003d base[i]; i \u003c\u003d maxLen; i++) {\n      final int nb \u003d base[i + 1];\n      vec +\u003d nb - b;\n      b \u003d nb;\n      limit[i] \u003d vec - 1;\n      vec \u003c\u003c\u003d 1;\n    }\n\n    for (int i \u003d minLen + 1; i \u003c\u003d maxLen; i++) {\n      base[i] \u003d ((limit[i - 1] + 1) \u003c\u003c 1) - base[i];\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/compress/bzip2/CBZip2InputStream.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/io/compress/bzip2/CBZip2InputStream.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/compress/bzip2/CBZip2InputStream.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private static void hbCreateDecodeTables(final int[] limit,\n      final int[] base, final int[] perm, final char[] length,\n      final int minLen, final int maxLen, final int alphaSize) {\n    for (int i \u003d minLen, pp \u003d 0; i \u003c\u003d maxLen; i++) {\n      for (int j \u003d 0; j \u003c alphaSize; j++) {\n        if (length[j] \u003d\u003d i) {\n          perm[pp++] \u003d j;\n        }\n      }\n    }\n\n    for (int i \u003d MAX_CODE_LEN; --i \u003e 0;) {\n      base[i] \u003d 0;\n      limit[i] \u003d 0;\n    }\n\n    for (int i \u003d 0; i \u003c alphaSize; i++) {\n      base[length[i] + 1]++;\n    }\n\n    for (int i \u003d 1, b \u003d base[0]; i \u003c MAX_CODE_LEN; i++) {\n      b +\u003d base[i];\n      base[i] \u003d b;\n    }\n\n    for (int i \u003d minLen, vec \u003d 0, b \u003d base[i]; i \u003c\u003d maxLen; i++) {\n      final int nb \u003d base[i + 1];\n      vec +\u003d nb - b;\n      b \u003d nb;\n      limit[i] \u003d vec - 1;\n      vec \u003c\u003c\u003d 1;\n    }\n\n    for (int i \u003d minLen + 1; i \u003c\u003d maxLen; i++) {\n      base[i] \u003d ((limit[i - 1] + 1) \u003c\u003c 1) - base[i];\n    }\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/io/compress/bzip2/CBZip2InputStream.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/io/compress/bzip2/CBZip2InputStream.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/io/compress/bzip2/CBZip2InputStream.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private static void hbCreateDecodeTables(final int[] limit,\n      final int[] base, final int[] perm, final char[] length,\n      final int minLen, final int maxLen, final int alphaSize) {\n    for (int i \u003d minLen, pp \u003d 0; i \u003c\u003d maxLen; i++) {\n      for (int j \u003d 0; j \u003c alphaSize; j++) {\n        if (length[j] \u003d\u003d i) {\n          perm[pp++] \u003d j;\n        }\n      }\n    }\n\n    for (int i \u003d MAX_CODE_LEN; --i \u003e 0;) {\n      base[i] \u003d 0;\n      limit[i] \u003d 0;\n    }\n\n    for (int i \u003d 0; i \u003c alphaSize; i++) {\n      base[length[i] + 1]++;\n    }\n\n    for (int i \u003d 1, b \u003d base[0]; i \u003c MAX_CODE_LEN; i++) {\n      b +\u003d base[i];\n      base[i] \u003d b;\n    }\n\n    for (int i \u003d minLen, vec \u003d 0, b \u003d base[i]; i \u003c\u003d maxLen; i++) {\n      final int nb \u003d base[i + 1];\n      vec +\u003d nb - b;\n      b \u003d nb;\n      limit[i] \u003d vec - 1;\n      vec \u003c\u003c\u003d 1;\n    }\n\n    for (int i \u003d minLen + 1; i \u003c\u003d maxLen; i++) {\n      base[i] \u003d ((limit[i - 1] + 1) \u003c\u003c 1) - base[i];\n    }\n  }",
      "path": "common/src/java/org/apache/hadoop/io/compress/bzip2/CBZip2InputStream.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/io/compress/bzip2/CBZip2InputStream.java",
        "newPath": "common/src/java/org/apache/hadoop/io/compress/bzip2/CBZip2InputStream.java"
      }
    },
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-4687 Moving src directories on branch\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/core/branches/HADOOP-4687/core@776174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/05/09 9:20 PM",
      "commitName": "5128a9a453d64bfe1ed978cf9ffed27985eeef36",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,37 @@\n+  private static void hbCreateDecodeTables(final int[] limit,\n+      final int[] base, final int[] perm, final char[] length,\n+      final int minLen, final int maxLen, final int alphaSize) {\n+    for (int i \u003d minLen, pp \u003d 0; i \u003c\u003d maxLen; i++) {\n+      for (int j \u003d 0; j \u003c alphaSize; j++) {\n+        if (length[j] \u003d\u003d i) {\n+          perm[pp++] \u003d j;\n+        }\n+      }\n+    }\n+\n+    for (int i \u003d MAX_CODE_LEN; --i \u003e 0;) {\n+      base[i] \u003d 0;\n+      limit[i] \u003d 0;\n+    }\n+\n+    for (int i \u003d 0; i \u003c alphaSize; i++) {\n+      base[length[i] + 1]++;\n+    }\n+\n+    for (int i \u003d 1, b \u003d base[0]; i \u003c MAX_CODE_LEN; i++) {\n+      b +\u003d base[i];\n+      base[i] \u003d b;\n+    }\n+\n+    for (int i \u003d minLen, vec \u003d 0, b \u003d base[i]; i \u003c\u003d maxLen; i++) {\n+      final int nb \u003d base[i + 1];\n+      vec +\u003d nb - b;\n+      b \u003d nb;\n+      limit[i] \u003d vec - 1;\n+      vec \u003c\u003c\u003d 1;\n+    }\n+\n+    for (int i \u003d minLen + 1; i \u003c\u003d maxLen; i++) {\n+      base[i] \u003d ((limit[i - 1] + 1) \u003c\u003c 1) - base[i];\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static void hbCreateDecodeTables(final int[] limit,\n      final int[] base, final int[] perm, final char[] length,\n      final int minLen, final int maxLen, final int alphaSize) {\n    for (int i \u003d minLen, pp \u003d 0; i \u003c\u003d maxLen; i++) {\n      for (int j \u003d 0; j \u003c alphaSize; j++) {\n        if (length[j] \u003d\u003d i) {\n          perm[pp++] \u003d j;\n        }\n      }\n    }\n\n    for (int i \u003d MAX_CODE_LEN; --i \u003e 0;) {\n      base[i] \u003d 0;\n      limit[i] \u003d 0;\n    }\n\n    for (int i \u003d 0; i \u003c alphaSize; i++) {\n      base[length[i] + 1]++;\n    }\n\n    for (int i \u003d 1, b \u003d base[0]; i \u003c MAX_CODE_LEN; i++) {\n      b +\u003d base[i];\n      base[i] \u003d b;\n    }\n\n    for (int i \u003d minLen, vec \u003d 0, b \u003d base[i]; i \u003c\u003d maxLen; i++) {\n      final int nb \u003d base[i + 1];\n      vec +\u003d nb - b;\n      b \u003d nb;\n      limit[i] \u003d vec - 1;\n      vec \u003c\u003c\u003d 1;\n    }\n\n    for (int i \u003d minLen + 1; i \u003c\u003d maxLen; i++) {\n      base[i] \u003d ((limit[i - 1] + 1) \u003c\u003c 1) - base[i];\n    }\n  }",
      "path": "src/java/org/apache/hadoop/io/compress/bzip2/CBZip2InputStream.java"
    }
  }
}