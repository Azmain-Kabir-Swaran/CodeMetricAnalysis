{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NodeHeartbeatRequestPBImpl.java",
  "functionName": "initLogAggregationReportsForApps",
  "functionId": "initLogAggregationReportsForApps",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/NodeHeartbeatRequestPBImpl.java",
  "functionStartLine": 435,
  "functionEndLine": 443,
  "numCommitsSeen": 19,
  "timeTaken": 1373,
  "changeHistory": [
    "15ccd967ee3e7046a50522089f67ba01f36ec76a",
    "92431c961741747b5d6442f4025016d48d9a6863"
  ],
  "changeHistoryShort": {
    "15ccd967ee3e7046a50522089f67ba01f36ec76a": "Ybodychange",
    "92431c961741747b5d6442f4025016d48d9a6863": "Yintroduced"
  },
  "changeHistoryDetails": {
    "15ccd967ee3e7046a50522089f67ba01f36ec76a": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3505. Node\u0027s Log Aggregation Report with SUCCEED should not cached in RMApps. Contributed by Xuan Gong.\n",
      "commitDate": "14/05/15 10:58 AM",
      "commitName": "15ccd967ee3e7046a50522089f67ba01f36ec76a",
      "commitAuthor": "Junping Du",
      "commitDateOld": "10/04/15 8:56 AM",
      "commitNameOld": "92431c961741747b5d6442f4025016d48d9a6863",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 34.08,
      "commitsBetweenForRepo": 367,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,9 @@\n   private void initLogAggregationReportsForApps() {\n     NodeHeartbeatRequestProtoOrBuilder p \u003d viaProto ? proto : builder;\n-    List\u003cLogAggregationReportsForAppsProto\u003e list \u003d\n+    List\u003cLogAggregationReportProto\u003e list \u003d\n         p.getLogAggregationReportsForAppsList();\n-    this.logAggregationReportsForApps \u003d\n-        new HashMap\u003cApplicationId, LogAggregationReport\u003e();\n-    for (LogAggregationReportsForAppsProto c : list) {\n-      ApplicationId appId \u003d convertFromProtoFormat(c.getAppId());\n-      LogAggregationReport report \u003d\n-          convertFromProtoFormat(c.getLogAggregationReport());\n-      this.logAggregationReportsForApps.put(appId, report);\n+    this.logAggregationReportsForApps \u003d new ArrayList\u003cLogAggregationReport\u003e();\n+    for (LogAggregationReportProto c : list) {\n+      this.logAggregationReportsForApps.add(convertFromProtoFormat(c));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void initLogAggregationReportsForApps() {\n    NodeHeartbeatRequestProtoOrBuilder p \u003d viaProto ? proto : builder;\n    List\u003cLogAggregationReportProto\u003e list \u003d\n        p.getLogAggregationReportsForAppsList();\n    this.logAggregationReportsForApps \u003d new ArrayList\u003cLogAggregationReport\u003e();\n    for (LogAggregationReportProto c : list) {\n      this.logAggregationReportsForApps.add(convertFromProtoFormat(c));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/NodeHeartbeatRequestPBImpl.java",
      "extendedDetails": {}
    },
    "92431c961741747b5d6442f4025016d48d9a6863": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1376. NM need to notify the log aggregation status to RM through Node heartbeat. Contributed by Xuan Gong.\n",
      "commitDate": "10/04/15 8:56 AM",
      "commitName": "92431c961741747b5d6442f4025016d48d9a6863",
      "commitAuthor": "Junping Du",
      "diff": "@@ -0,0 +1,13 @@\n+  private void initLogAggregationReportsForApps() {\n+    NodeHeartbeatRequestProtoOrBuilder p \u003d viaProto ? proto : builder;\n+    List\u003cLogAggregationReportsForAppsProto\u003e list \u003d\n+        p.getLogAggregationReportsForAppsList();\n+    this.logAggregationReportsForApps \u003d\n+        new HashMap\u003cApplicationId, LogAggregationReport\u003e();\n+    for (LogAggregationReportsForAppsProto c : list) {\n+      ApplicationId appId \u003d convertFromProtoFormat(c.getAppId());\n+      LogAggregationReport report \u003d\n+          convertFromProtoFormat(c.getLogAggregationReport());\n+      this.logAggregationReportsForApps.put(appId, report);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void initLogAggregationReportsForApps() {\n    NodeHeartbeatRequestProtoOrBuilder p \u003d viaProto ? proto : builder;\n    List\u003cLogAggregationReportsForAppsProto\u003e list \u003d\n        p.getLogAggregationReportsForAppsList();\n    this.logAggregationReportsForApps \u003d\n        new HashMap\u003cApplicationId, LogAggregationReport\u003e();\n    for (LogAggregationReportsForAppsProto c : list) {\n      ApplicationId appId \u003d convertFromProtoFormat(c.getAppId());\n      LogAggregationReport report \u003d\n          convertFromProtoFormat(c.getLogAggregationReport());\n      this.logAggregationReportsForApps.put(appId, report);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/NodeHeartbeatRequestPBImpl.java"
    }
  }
}