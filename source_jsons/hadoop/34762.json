{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AMRMProxyService.java",
  "functionName": "getInterceptorClassNames",
  "functionId": "getInterceptorClassNames___conf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/amrmproxy/AMRMProxyService.java",
  "functionStartLine": 723,
  "functionEndLine": 742,
  "numCommitsSeen": 17,
  "timeTaken": 1523,
  "changeHistory": [
    "e5766b1dbee02ae0ef89618e172f3fb227af19e8",
    "c282a08f3892e2e8ceb58e1e9a411062fbd1fb2b",
    "6f72f1e6003ab11679bebeb96f27f1f62b3b3e02"
  ],
  "changeHistoryShort": {
    "e5766b1dbee02ae0ef89618e172f3fb227af19e8": "Ybodychange",
    "c282a08f3892e2e8ceb58e1e9a411062fbd1fb2b": "Ybodychange",
    "6f72f1e6003ab11679bebeb96f27f1f62b3b3e02": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e5766b1dbee02ae0ef89618e172f3fb227af19e8": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5113. Refactoring and other clean-up for distributed scheduling. (Konstantinos Karanasos via asuresh)\n",
      "commitDate": "31/07/16 11:48 AM",
      "commitName": "e5766b1dbee02ae0ef89618e172f3fb227af19e8",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "24/04/16 10:38 PM",
      "commitNameOld": "c282a08f3892e2e8ceb58e1e9a411062fbd1fb2b",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 97.55,
      "commitsBetweenForRepo": 769,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,20 @@\n   private List\u003cString\u003e getInterceptorClassNames(Configuration conf) {\n     String configuredInterceptorClassNames \u003d\n         conf.get(\n             YarnConfiguration.AMRM_PROXY_INTERCEPTOR_CLASS_PIPELINE,\n             YarnConfiguration.DEFAULT_AMRM_PROXY_INTERCEPTOR_CLASS_PIPELINE);\n \n     List\u003cString\u003e interceptorClassNames \u003d new ArrayList\u003cString\u003e();\n     Collection\u003cString\u003e tempList \u003d\n         StringUtils.getStringCollection(configuredInterceptorClassNames);\n     for (String item : tempList) {\n       interceptorClassNames.add(item.trim());\n     }\n \n-    // Make sure LocalScheduler is present at the beginning\n-    // of the chain..\n+    // Make sure DistributedScheduler is present at the beginning of the chain.\n     if (this.nmContext.isDistributedSchedulingEnabled()) {\n-      interceptorClassNames.add(0, LocalScheduler.class.getName());\n+      interceptorClassNames.add(0, DistributedScheduler.class.getName());\n     }\n \n     return interceptorClassNames;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private List\u003cString\u003e getInterceptorClassNames(Configuration conf) {\n    String configuredInterceptorClassNames \u003d\n        conf.get(\n            YarnConfiguration.AMRM_PROXY_INTERCEPTOR_CLASS_PIPELINE,\n            YarnConfiguration.DEFAULT_AMRM_PROXY_INTERCEPTOR_CLASS_PIPELINE);\n\n    List\u003cString\u003e interceptorClassNames \u003d new ArrayList\u003cString\u003e();\n    Collection\u003cString\u003e tempList \u003d\n        StringUtils.getStringCollection(configuredInterceptorClassNames);\n    for (String item : tempList) {\n      interceptorClassNames.add(item.trim());\n    }\n\n    // Make sure DistributedScheduler is present at the beginning of the chain.\n    if (this.nmContext.isDistributedSchedulingEnabled()) {\n      interceptorClassNames.add(0, DistributedScheduler.class.getName());\n    }\n\n    return interceptorClassNames;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/amrmproxy/AMRMProxyService.java",
      "extendedDetails": {}
    },
    "c282a08f3892e2e8ceb58e1e9a411062fbd1fb2b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2885. Create AMRMProxy request interceptor and ContainerAllocator to distribute OPPORTUNISTIC containers to appropriate Nodes (asuresh)\n\n(cherry picked from commit 2bf025278a318b0452fdc9ece4427b4c42124e39)\n",
      "commitDate": "24/04/16 10:38 PM",
      "commitName": "c282a08f3892e2e8ceb58e1e9a411062fbd1fb2b",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "27/03/16 8:22 PM",
      "commitNameOld": "55ae1439233e8585d624b2872e1e4753ef63eebb",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 28.09,
      "commitsBetweenForRepo": 183,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,21 @@\n   private List\u003cString\u003e getInterceptorClassNames(Configuration conf) {\n     String configuredInterceptorClassNames \u003d\n         conf.get(\n             YarnConfiguration.AMRM_PROXY_INTERCEPTOR_CLASS_PIPELINE,\n             YarnConfiguration.DEFAULT_AMRM_PROXY_INTERCEPTOR_CLASS_PIPELINE);\n \n     List\u003cString\u003e interceptorClassNames \u003d new ArrayList\u003cString\u003e();\n     Collection\u003cString\u003e tempList \u003d\n         StringUtils.getStringCollection(configuredInterceptorClassNames);\n     for (String item : tempList) {\n       interceptorClassNames.add(item.trim());\n     }\n \n+    // Make sure LocalScheduler is present at the beginning\n+    // of the chain..\n+    if (this.nmContext.isDistributedSchedulingEnabled()) {\n+      interceptorClassNames.add(0, LocalScheduler.class.getName());\n+    }\n+\n     return interceptorClassNames;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private List\u003cString\u003e getInterceptorClassNames(Configuration conf) {\n    String configuredInterceptorClassNames \u003d\n        conf.get(\n            YarnConfiguration.AMRM_PROXY_INTERCEPTOR_CLASS_PIPELINE,\n            YarnConfiguration.DEFAULT_AMRM_PROXY_INTERCEPTOR_CLASS_PIPELINE);\n\n    List\u003cString\u003e interceptorClassNames \u003d new ArrayList\u003cString\u003e();\n    Collection\u003cString\u003e tempList \u003d\n        StringUtils.getStringCollection(configuredInterceptorClassNames);\n    for (String item : tempList) {\n      interceptorClassNames.add(item.trim());\n    }\n\n    // Make sure LocalScheduler is present at the beginning\n    // of the chain..\n    if (this.nmContext.isDistributedSchedulingEnabled()) {\n      interceptorClassNames.add(0, LocalScheduler.class.getName());\n    }\n\n    return interceptorClassNames;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/amrmproxy/AMRMProxyService.java",
      "extendedDetails": {}
    },
    "6f72f1e6003ab11679bebeb96f27f1f62b3b3e02": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2884. Added a proxy service in NM to proxy the the communication between AM and RM. Contributed by Kishore Chaliparambil\n",
      "commitDate": "07/09/15 6:35 PM",
      "commitName": "6f72f1e6003ab11679bebeb96f27f1f62b3b3e02",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,15 @@\n+  private List\u003cString\u003e getInterceptorClassNames(Configuration conf) {\n+    String configuredInterceptorClassNames \u003d\n+        conf.get(\n+            YarnConfiguration.AMRM_PROXY_INTERCEPTOR_CLASS_PIPELINE,\n+            YarnConfiguration.DEFAULT_AMRM_PROXY_INTERCEPTOR_CLASS_PIPELINE);\n+\n+    List\u003cString\u003e interceptorClassNames \u003d new ArrayList\u003cString\u003e();\n+    Collection\u003cString\u003e tempList \u003d\n+        StringUtils.getStringCollection(configuredInterceptorClassNames);\n+    for (String item : tempList) {\n+      interceptorClassNames.add(item.trim());\n+    }\n+\n+    return interceptorClassNames;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private List\u003cString\u003e getInterceptorClassNames(Configuration conf) {\n    String configuredInterceptorClassNames \u003d\n        conf.get(\n            YarnConfiguration.AMRM_PROXY_INTERCEPTOR_CLASS_PIPELINE,\n            YarnConfiguration.DEFAULT_AMRM_PROXY_INTERCEPTOR_CLASS_PIPELINE);\n\n    List\u003cString\u003e interceptorClassNames \u003d new ArrayList\u003cString\u003e();\n    Collection\u003cString\u003e tempList \u003d\n        StringUtils.getStringCollection(configuredInterceptorClassNames);\n    for (String item : tempList) {\n      interceptorClassNames.add(item.trim());\n    }\n\n    return interceptorClassNames;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/amrmproxy/AMRMProxyService.java"
    }
  }
}