{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NativeAzureFileSystem.java",
  "functionName": "prepareAtomicFolderRename",
  "functionId": "prepareAtomicFolderRename___srcKey-String__dstKey-String",
  "sourceFilePath": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/NativeAzureFileSystem.java",
  "functionStartLine": 3373,
  "functionEndLine": 3393,
  "numCommitsSeen": 66,
  "timeTaken": 3174,
  "changeHistory": [
    "2ed58c40e5dcbf5c5303c00e85096085b1055f85",
    "2217e2f8ff418b88eac6ad36cafe3a9795a11f40"
  ],
  "changeHistoryShort": {
    "2ed58c40e5dcbf5c5303c00e85096085b1055f85": "Ymodifierchange",
    "2217e2f8ff418b88eac6ad36cafe3a9795a11f40": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2ed58c40e5dcbf5c5303c00e85096085b1055f85": {
      "type": "Ymodifierchange",
      "commitMessage": "HADOOP-13403. AzureNativeFileSystem rename/delete performance improvements. Contributed by Subramanyam Pattipaka.\n",
      "commitDate": "08/08/16 12:28 PM",
      "commitName": "2ed58c40e5dcbf5c5303c00e85096085b1055f85",
      "commitAuthor": "Chris Nauroth",
      "commitDateOld": "08/04/16 1:36 PM",
      "commitNameOld": "843ee8d59d8bacbca0d87ccf0790772e39d16138",
      "commitAuthorOld": "Chris Nauroth",
      "daysBetweenCommits": 121.95,
      "commitsBetweenForRepo": 924,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n-  private FolderRenamePending prepareAtomicFolderRename(\n+  FolderRenamePending prepareAtomicFolderRename(\n       String srcKey, String dstKey) throws IOException {\n \n     if (store.isAtomicRenameKey(srcKey)) {\n \n       // Block unwanted concurrent access to source folder.\n       SelfRenewingLease lease \u003d leaseSourceFolder(srcKey);\n \n       // Prepare in-memory information needed to do or redo a folder rename.\n       FolderRenamePending renamePending \u003d\n           new FolderRenamePending(srcKey, dstKey, lease, this);\n \n       // Save it to persistent storage to help recover if the operation fails.\n       renamePending.writeFile(this);\n       return renamePending;\n     } else {\n       FolderRenamePending renamePending \u003d\n           new FolderRenamePending(srcKey, dstKey, null, this);\n       return renamePending;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  FolderRenamePending prepareAtomicFolderRename(\n      String srcKey, String dstKey) throws IOException {\n\n    if (store.isAtomicRenameKey(srcKey)) {\n\n      // Block unwanted concurrent access to source folder.\n      SelfRenewingLease lease \u003d leaseSourceFolder(srcKey);\n\n      // Prepare in-memory information needed to do or redo a folder rename.\n      FolderRenamePending renamePending \u003d\n          new FolderRenamePending(srcKey, dstKey, lease, this);\n\n      // Save it to persistent storage to help recover if the operation fails.\n      renamePending.writeFile(this);\n      return renamePending;\n    } else {\n      FolderRenamePending renamePending \u003d\n          new FolderRenamePending(srcKey, dstKey, null, this);\n      return renamePending;\n    }\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/NativeAzureFileSystem.java",
      "extendedDetails": {
        "oldValue": "[private]",
        "newValue": "[]"
      }
    },
    "2217e2f8ff418b88eac6ad36cafe3a9795a11f40": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-10809. hadoop-azure: page blob support. Contributed by Dexter Bradshaw, Mostafa Elhemali, Eric Hanson, and Mike Liddell.\n",
      "commitDate": "08/10/14 2:20 PM",
      "commitName": "2217e2f8ff418b88eac6ad36cafe3a9795a11f40",
      "commitAuthor": "cnauroth",
      "diff": "@@ -0,0 +1,21 @@\n+  private FolderRenamePending prepareAtomicFolderRename(\n+      String srcKey, String dstKey) throws IOException {\n+\n+    if (store.isAtomicRenameKey(srcKey)) {\n+\n+      // Block unwanted concurrent access to source folder.\n+      SelfRenewingLease lease \u003d leaseSourceFolder(srcKey);\n+\n+      // Prepare in-memory information needed to do or redo a folder rename.\n+      FolderRenamePending renamePending \u003d\n+          new FolderRenamePending(srcKey, dstKey, lease, this);\n+\n+      // Save it to persistent storage to help recover if the operation fails.\n+      renamePending.writeFile(this);\n+      return renamePending;\n+    } else {\n+      FolderRenamePending renamePending \u003d\n+          new FolderRenamePending(srcKey, dstKey, null, this);\n+      return renamePending;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private FolderRenamePending prepareAtomicFolderRename(\n      String srcKey, String dstKey) throws IOException {\n\n    if (store.isAtomicRenameKey(srcKey)) {\n\n      // Block unwanted concurrent access to source folder.\n      SelfRenewingLease lease \u003d leaseSourceFolder(srcKey);\n\n      // Prepare in-memory information needed to do or redo a folder rename.\n      FolderRenamePending renamePending \u003d\n          new FolderRenamePending(srcKey, dstKey, lease, this);\n\n      // Save it to persistent storage to help recover if the operation fails.\n      renamePending.writeFile(this);\n      return renamePending;\n    } else {\n      FolderRenamePending renamePending \u003d\n          new FolderRenamePending(srcKey, dstKey, null, this);\n      return renamePending;\n    }\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/NativeAzureFileSystem.java"
    }
  }
}