{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PrimaryGroupPlacementRule.java",
  "functionName": "getPlacementForApp",
  "functionId": "getPlacementForApp___asc-ApplicationSubmissionContext__user-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/placement/PrimaryGroupPlacementRule.java",
  "functionStartLine": 60,
  "functionEndLine": 103,
  "numCommitsSeen": 4,
  "timeTaken": 605,
  "changeHistory": [
    "0aefe2846fbda5b3402879e343e65484355849c9"
  ],
  "changeHistoryShort": {
    "0aefe2846fbda5b3402879e343e65484355849c9": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0aefe2846fbda5b3402879e343e65484355849c9": {
      "type": "Yintroduced",
      "commitMessage": "YARN-9298. Implement FS placement rules using PlacementRule interface. Contributed by Wilfred Spiegelenburg.\n",
      "commitDate": "04/03/19 11:49 PM",
      "commitName": "0aefe2846fbda5b3402879e343e65484355849c9",
      "commitAuthor": "Yufei Gu",
      "diff": "@@ -0,0 +1,44 @@\n+  public ApplicationPlacementContext getPlacementForApp(\n+      ApplicationSubmissionContext asc, String user) throws YarnException {\n+\n+    // All users should have at least one group the primary group. If no groups\n+    // are returned then there is a real issue.\n+    final List\u003cString\u003e groupList;\n+    try {\n+      groupList \u003d groupProvider.getGroups(user);\n+    } catch (IOException ioe) {\n+      throw new YarnException(\"Group resolution failed\", ioe);\n+    }\n+    if (groupList.isEmpty()) {\n+      LOG.error(\"Group placement rule failed: No groups returned for user {}\",\n+          user);\n+      throw new YarnException(\"No groups returned for user \" + user);\n+    }\n+\n+    String cleanGroup \u003d cleanName(groupList.get(0));\n+    String queueName;\n+    PlacementRule parentRule \u003d getParentRule();\n+\n+    if (getParentRule() !\u003d null) {\n+      LOG.debug(\"PrimaryGroup rule: parent rule found: {}\",\n+          parentRule.getName());\n+      ApplicationPlacementContext parent \u003d\n+          parentRule.getPlacementForApp(asc, user);\n+      if (parent \u003d\u003d null || getQueueManager().\n+          getQueue(parent.getQueue()) instanceof FSLeafQueue) {\n+        LOG.debug(\"PrimaryGroup rule: parent rule failed\");\n+        return null;\n+      }\n+      LOG.debug(\"PrimaryGroup rule: parent rule result: {}\",\n+          parent.getQueue());\n+      queueName \u003d parent.getQueue() + DOT + cleanGroup;\n+    } else {\n+      queueName \u003d assureRoot(cleanGroup);\n+    }\n+\n+    // If we can create the queue in the rule or the queue exists return it\n+    if (createQueue || configuredQueue(queueName)) {\n+      return new ApplicationPlacementContext(queueName);\n+    }\n+    return null;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public ApplicationPlacementContext getPlacementForApp(\n      ApplicationSubmissionContext asc, String user) throws YarnException {\n\n    // All users should have at least one group the primary group. If no groups\n    // are returned then there is a real issue.\n    final List\u003cString\u003e groupList;\n    try {\n      groupList \u003d groupProvider.getGroups(user);\n    } catch (IOException ioe) {\n      throw new YarnException(\"Group resolution failed\", ioe);\n    }\n    if (groupList.isEmpty()) {\n      LOG.error(\"Group placement rule failed: No groups returned for user {}\",\n          user);\n      throw new YarnException(\"No groups returned for user \" + user);\n    }\n\n    String cleanGroup \u003d cleanName(groupList.get(0));\n    String queueName;\n    PlacementRule parentRule \u003d getParentRule();\n\n    if (getParentRule() !\u003d null) {\n      LOG.debug(\"PrimaryGroup rule: parent rule found: {}\",\n          parentRule.getName());\n      ApplicationPlacementContext parent \u003d\n          parentRule.getPlacementForApp(asc, user);\n      if (parent \u003d\u003d null || getQueueManager().\n          getQueue(parent.getQueue()) instanceof FSLeafQueue) {\n        LOG.debug(\"PrimaryGroup rule: parent rule failed\");\n        return null;\n      }\n      LOG.debug(\"PrimaryGroup rule: parent rule result: {}\",\n          parent.getQueue());\n      queueName \u003d parent.getQueue() + DOT + cleanGroup;\n    } else {\n      queueName \u003d assureRoot(cleanGroup);\n    }\n\n    // If we can create the queue in the rule or the queue exists return it\n    if (createQueue || configuredQueue(queueName)) {\n      return new ApplicationPlacementContext(queueName);\n    }\n    return null;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/placement/PrimaryGroupPlacementRule.java"
    }
  }
}