{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSParentQueue.java",
  "functionName": "isEmpty",
  "functionId": "isEmpty",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSParentQueue.java",
  "functionStartLine": 272,
  "functionEndLine": 284,
  "numCommitsSeen": 92,
  "timeTaken": 4985,
  "changeHistory": [
    "a41b648e98b6a1c5a9cdb7393e73e576a97f56d4",
    "86bc6425d425913899f1d951498bd040e453b3d0",
    "24ee9e3431d27811530ffa01d8d241133fd643fe",
    "f4fd050dee83ecbff0a92b28c3a51ae353f95c24"
  ],
  "changeHistoryShort": {
    "a41b648e98b6a1c5a9cdb7393e73e576a97f56d4": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yparameterchange)",
    "86bc6425d425913899f1d951498bd040e453b3d0": "Ybodychange",
    "24ee9e3431d27811530ffa01d8d241133fd643fe": "Ybodychange",
    "f4fd050dee83ecbff0a92b28c3a51ae353f95c24": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a41b648e98b6a1c5a9cdb7393e73e576a97f56d4": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yparameterchange)",
      "commitMessage": "YARN-8992. Fair scheduler can delete a dynamic queue while an application attempt is being added to the queue. (Contributed by Wilfred Spiegelenburg)\n",
      "commitDate": "20/11/18 2:12 PM",
      "commitName": "a41b648e98b6a1c5a9cdb7393e73e576a97f56d4",
      "commitAuthor": "Haibo Chen",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-8992. Fair scheduler can delete a dynamic queue while an application attempt is being added to the queue. (Contributed by Wilfred Spiegelenburg)\n",
          "commitDate": "20/11/18 2:12 PM",
          "commitName": "a41b648e98b6a1c5a9cdb7393e73e576a97f56d4",
          "commitAuthor": "Haibo Chen",
          "commitDateOld": "20/11/18 11:37 AM",
          "commitNameOld": "1734ace35f1c92ff37ccf7f8545b4d74ecbc1cca",
          "commitAuthorOld": "Shashikant Banerjee",
          "daysBetweenCommits": 0.11,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,13 @@\n-  protected boolean isEmpty(FSQueue queue) {\n-    if (queue instanceof FSLeafQueue) {\n-      FSLeafQueue leafQueue \u003d (FSLeafQueue)queue;\n-      return queue.getNumRunnableApps() \u003d\u003d 0 \u0026\u0026\n-          leafQueue.getNumNonRunnableApps() \u003d\u003d 0 \u0026\u0026\n-          leafQueue.getNumAssignedApps() \u003d\u003d 0;\n-    } else {\n-      for (FSQueue child : queue.getChildQueues()) {\n-        if (!isEmpty(child)) {\n+  public boolean isEmpty() {\n+    readLock.lock();\n+    try {\n+      for (FSQueue queue: childQueues) {\n+        if (!queue.isEmpty()) {\n           return false;\n         }\n       }\n-      return true;\n+    } finally {\n+      readLock.unlock();\n     }\n+    return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean isEmpty() {\n    readLock.lock();\n    try {\n      for (FSQueue queue: childQueues) {\n        if (!queue.isEmpty()) {\n          return false;\n        }\n      }\n    } finally {\n      readLock.unlock();\n    }\n    return true;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSParentQueue.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/QueueManager.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSParentQueue.java",
            "oldMethodName": "isEmpty",
            "newMethodName": "isEmpty"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-8992. Fair scheduler can delete a dynamic queue while an application attempt is being added to the queue. (Contributed by Wilfred Spiegelenburg)\n",
          "commitDate": "20/11/18 2:12 PM",
          "commitName": "a41b648e98b6a1c5a9cdb7393e73e576a97f56d4",
          "commitAuthor": "Haibo Chen",
          "commitDateOld": "20/11/18 11:37 AM",
          "commitNameOld": "1734ace35f1c92ff37ccf7f8545b4d74ecbc1cca",
          "commitAuthorOld": "Shashikant Banerjee",
          "daysBetweenCommits": 0.11,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,13 @@\n-  protected boolean isEmpty(FSQueue queue) {\n-    if (queue instanceof FSLeafQueue) {\n-      FSLeafQueue leafQueue \u003d (FSLeafQueue)queue;\n-      return queue.getNumRunnableApps() \u003d\u003d 0 \u0026\u0026\n-          leafQueue.getNumNonRunnableApps() \u003d\u003d 0 \u0026\u0026\n-          leafQueue.getNumAssignedApps() \u003d\u003d 0;\n-    } else {\n-      for (FSQueue child : queue.getChildQueues()) {\n-        if (!isEmpty(child)) {\n+  public boolean isEmpty() {\n+    readLock.lock();\n+    try {\n+      for (FSQueue queue: childQueues) {\n+        if (!queue.isEmpty()) {\n           return false;\n         }\n       }\n-      return true;\n+    } finally {\n+      readLock.unlock();\n     }\n+    return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean isEmpty() {\n    readLock.lock();\n    try {\n      for (FSQueue queue: childQueues) {\n        if (!queue.isEmpty()) {\n          return false;\n        }\n      }\n    } finally {\n      readLock.unlock();\n    }\n    return true;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSParentQueue.java",
          "extendedDetails": {
            "oldValue": "[protected]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-8992. Fair scheduler can delete a dynamic queue while an application attempt is being added to the queue. (Contributed by Wilfred Spiegelenburg)\n",
          "commitDate": "20/11/18 2:12 PM",
          "commitName": "a41b648e98b6a1c5a9cdb7393e73e576a97f56d4",
          "commitAuthor": "Haibo Chen",
          "commitDateOld": "20/11/18 11:37 AM",
          "commitNameOld": "1734ace35f1c92ff37ccf7f8545b4d74ecbc1cca",
          "commitAuthorOld": "Shashikant Banerjee",
          "daysBetweenCommits": 0.11,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,13 @@\n-  protected boolean isEmpty(FSQueue queue) {\n-    if (queue instanceof FSLeafQueue) {\n-      FSLeafQueue leafQueue \u003d (FSLeafQueue)queue;\n-      return queue.getNumRunnableApps() \u003d\u003d 0 \u0026\u0026\n-          leafQueue.getNumNonRunnableApps() \u003d\u003d 0 \u0026\u0026\n-          leafQueue.getNumAssignedApps() \u003d\u003d 0;\n-    } else {\n-      for (FSQueue child : queue.getChildQueues()) {\n-        if (!isEmpty(child)) {\n+  public boolean isEmpty() {\n+    readLock.lock();\n+    try {\n+      for (FSQueue queue: childQueues) {\n+        if (!queue.isEmpty()) {\n           return false;\n         }\n       }\n-      return true;\n+    } finally {\n+      readLock.unlock();\n     }\n+    return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean isEmpty() {\n    readLock.lock();\n    try {\n      for (FSQueue queue: childQueues) {\n        if (!queue.isEmpty()) {\n          return false;\n        }\n      }\n    } finally {\n      readLock.unlock();\n    }\n    return true;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSParentQueue.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-8992. Fair scheduler can delete a dynamic queue while an application attempt is being added to the queue. (Contributed by Wilfred Spiegelenburg)\n",
          "commitDate": "20/11/18 2:12 PM",
          "commitName": "a41b648e98b6a1c5a9cdb7393e73e576a97f56d4",
          "commitAuthor": "Haibo Chen",
          "commitDateOld": "20/11/18 11:37 AM",
          "commitNameOld": "1734ace35f1c92ff37ccf7f8545b4d74ecbc1cca",
          "commitAuthorOld": "Shashikant Banerjee",
          "daysBetweenCommits": 0.11,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,13 @@\n-  protected boolean isEmpty(FSQueue queue) {\n-    if (queue instanceof FSLeafQueue) {\n-      FSLeafQueue leafQueue \u003d (FSLeafQueue)queue;\n-      return queue.getNumRunnableApps() \u003d\u003d 0 \u0026\u0026\n-          leafQueue.getNumNonRunnableApps() \u003d\u003d 0 \u0026\u0026\n-          leafQueue.getNumAssignedApps() \u003d\u003d 0;\n-    } else {\n-      for (FSQueue child : queue.getChildQueues()) {\n-        if (!isEmpty(child)) {\n+  public boolean isEmpty() {\n+    readLock.lock();\n+    try {\n+      for (FSQueue queue: childQueues) {\n+        if (!queue.isEmpty()) {\n           return false;\n         }\n       }\n-      return true;\n+    } finally {\n+      readLock.unlock();\n     }\n+    return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean isEmpty() {\n    readLock.lock();\n    try {\n      for (FSQueue queue: childQueues) {\n        if (!queue.isEmpty()) {\n          return false;\n        }\n      }\n    } finally {\n      readLock.unlock();\n    }\n    return true;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSParentQueue.java",
          "extendedDetails": {
            "oldValue": "[queue-FSQueue]",
            "newValue": "[]"
          }
        }
      ]
    },
    "86bc6425d425913899f1d951498bd040e453b3d0": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8191. Fair scheduler: queue deletion without RM restart. (Gergo Repas via Haibo Chen)\n",
      "commitDate": "24/05/18 5:12 PM",
      "commitName": "86bc6425d425913899f1d951498bd040e453b3d0",
      "commitAuthor": "Haibo Chen",
      "commitDateOld": "05/10/17 11:51 PM",
      "commitNameOld": "99292adcefdc6b8f280b8e100605fb39f755c38a",
      "commitAuthorOld": "Yufei Gu",
      "daysBetweenCommits": 230.72,
      "commitsBetweenForRepo": 2231,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,15 @@\n   protected boolean isEmpty(FSQueue queue) {\n     if (queue instanceof FSLeafQueue) {\n       FSLeafQueue leafQueue \u003d (FSLeafQueue)queue;\n       return queue.getNumRunnableApps() \u003d\u003d 0 \u0026\u0026\n-          leafQueue.getNumNonRunnableApps() \u003d\u003d 0;\n+          leafQueue.getNumNonRunnableApps() \u003d\u003d 0 \u0026\u0026\n+          leafQueue.getNumAssignedApps() \u003d\u003d 0;\n     } else {\n       for (FSQueue child : queue.getChildQueues()) {\n         if (!isEmpty(child)) {\n           return false;\n         }\n       }\n       return true;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected boolean isEmpty(FSQueue queue) {\n    if (queue instanceof FSLeafQueue) {\n      FSLeafQueue leafQueue \u003d (FSLeafQueue)queue;\n      return queue.getNumRunnableApps() \u003d\u003d 0 \u0026\u0026\n          leafQueue.getNumNonRunnableApps() \u003d\u003d 0 \u0026\u0026\n          leafQueue.getNumAssignedApps() \u003d\u003d 0;\n    } else {\n      for (FSQueue child : queue.getChildQueues()) {\n        if (!isEmpty(child)) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/QueueManager.java",
      "extendedDetails": {}
    },
    "24ee9e3431d27811530ffa01d8d241133fd643fe": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2975. FSLeafQueue app lists are accessed without required locks. (kasha)\n",
      "commitDate": "20/12/14 12:17 PM",
      "commitName": "24ee9e3431d27811530ffa01d8d241133fd643fe",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "03/09/14 10:27 AM",
      "commitNameOld": "1dcaba9a7aa27f7ca4ba693e3abb56ab3c59c8a7",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 108.12,
      "commitsBetweenForRepo": 1010,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n   protected boolean isEmpty(FSQueue queue) {\n     if (queue instanceof FSLeafQueue) {\n       FSLeafQueue leafQueue \u003d (FSLeafQueue)queue;\n       return queue.getNumRunnableApps() \u003d\u003d 0 \u0026\u0026\n-          leafQueue.getNonRunnableAppSchedulables().isEmpty();\n+          leafQueue.getNumNonRunnableApps() \u003d\u003d 0;\n     } else {\n       for (FSQueue child : queue.getChildQueues()) {\n         if (!isEmpty(child)) {\n           return false;\n         }\n       }\n       return true;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected boolean isEmpty(FSQueue queue) {\n    if (queue instanceof FSLeafQueue) {\n      FSLeafQueue leafQueue \u003d (FSLeafQueue)queue;\n      return queue.getNumRunnableApps() \u003d\u003d 0 \u0026\u0026\n          leafQueue.getNumNonRunnableApps() \u003d\u003d 0;\n    } else {\n      for (FSQueue child : queue.getChildQueues()) {\n        if (!isEmpty(child)) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/QueueManager.java",
      "extendedDetails": {}
    },
    "f4fd050dee83ecbff0a92b28c3a51ae353f95c24": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1567. In Fair Scheduler, allow empty queues to change between leaf and parent on allocation file reload (Sandy Ryza)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1558228 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/01/14 2:33 PM",
      "commitName": "f4fd050dee83ecbff0a92b28c3a51ae353f95c24",
      "commitAuthor": "Sanford Ryza",
      "diff": "@@ -0,0 +1,14 @@\n+  protected boolean isEmpty(FSQueue queue) {\n+    if (queue instanceof FSLeafQueue) {\n+      FSLeafQueue leafQueue \u003d (FSLeafQueue)queue;\n+      return queue.getNumRunnableApps() \u003d\u003d 0 \u0026\u0026\n+          leafQueue.getNonRunnableAppSchedulables().isEmpty();\n+    } else {\n+      for (FSQueue child : queue.getChildQueues()) {\n+        if (!isEmpty(child)) {\n+          return false;\n+        }\n+      }\n+      return true;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected boolean isEmpty(FSQueue queue) {\n    if (queue instanceof FSLeafQueue) {\n      FSLeafQueue leafQueue \u003d (FSLeafQueue)queue;\n      return queue.getNumRunnableApps() \u003d\u003d 0 \u0026\u0026\n          leafQueue.getNonRunnableAppSchedulables().isEmpty();\n    } else {\n      for (FSQueue child : queue.getChildQueues()) {\n        if (!isEmpty(child)) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/QueueManager.java"
    }
  }
}