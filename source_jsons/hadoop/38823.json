{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NodeQueueLoadMonitor.java",
  "functionName": "removeNode",
  "functionId": "removeNode___removedRMNode-RMNode",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/distributed/NodeQueueLoadMonitor.java",
  "functionStartLine": 233,
  "functionEndLine": 252,
  "numCommitsSeen": 13,
  "timeTaken": 3386,
  "changeHistory": [
    "fb512f50877438acb01fe6b3ec96c12b4db61694",
    "2064ca015d1584263aac0cc20c60b925a3aff612",
    "10be45986cdf86a89055065b752959bd6369d54f",
    "f0ac18d001d97914a9ee810b1fab56c5cebff830",
    "341888a0aa23f24458b4e6e34868794b9735c06a"
  ],
  "changeHistoryShort": {
    "fb512f50877438acb01fe6b3ec96c12b4db61694": "Ybodychange",
    "2064ca015d1584263aac0cc20c60b925a3aff612": "Ybodychange",
    "10be45986cdf86a89055065b752959bd6369d54f": "Ybodychange",
    "f0ac18d001d97914a9ee810b1fab56c5cebff830": "Yfilerename",
    "341888a0aa23f24458b4e6e34868794b9735c06a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "fb512f50877438acb01fe6b3ec96c12b4db61694": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9697. Efficient allocation of Opportunistic containers. Contributed by Abhishek Modi.\n",
      "commitDate": "12/11/19 3:04 AM",
      "commitName": "fb512f50877438acb01fe6b3ec96c12b4db61694",
      "commitAuthor": "Abhishek Modi",
      "commitDateOld": "21/03/19 12:04 PM",
      "commitNameOld": "548997d6c9c5a1b9734ee00d065ce48a189458e6",
      "commitAuthorOld": "Giovanni Matteo Fumarola",
      "daysBetweenCommits": 235.67,
      "commitsBetweenForRepo": 1690,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,20 @@\n   public void removeNode(RMNode removedRMNode) {\n-    LOG.debug(\"Node delete event for: {}\", removedRMNode.getNode().getName());\n+    LOG.info(\"Node delete event for: {}\", removedRMNode.getNode().getName());\n+    this.nodeByHostName.remove(removedRMNode.getHostName());\n+    removeFromNodeIdsByRack(removedRMNode);\n     ReentrantReadWriteLock.WriteLock writeLock \u003d clusterNodesLock.writeLock();\n     writeLock.lock();\n     ClusterNode node;\n     try {\n       node \u003d this.clusterNodes.remove(removedRMNode.getNodeID());\n     } finally {\n       writeLock.unlock();\n     }\n     if (LOG.isDebugEnabled()) {\n       if (node !\u003d null) {\n         LOG.debug(\"Delete ClusterNode: \" + removedRMNode.getNodeID());\n       } else {\n         LOG.debug(\"Node not in list!\");\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void removeNode(RMNode removedRMNode) {\n    LOG.info(\"Node delete event for: {}\", removedRMNode.getNode().getName());\n    this.nodeByHostName.remove(removedRMNode.getHostName());\n    removeFromNodeIdsByRack(removedRMNode);\n    ReentrantReadWriteLock.WriteLock writeLock \u003d clusterNodesLock.writeLock();\n    writeLock.lock();\n    ClusterNode node;\n    try {\n      node \u003d this.clusterNodes.remove(removedRMNode.getNodeID());\n    } finally {\n      writeLock.unlock();\n    }\n    if (LOG.isDebugEnabled()) {\n      if (node !\u003d null) {\n        LOG.debug(\"Delete ClusterNode: \" + removedRMNode.getNodeID());\n      } else {\n        LOG.debug(\"Node not in list!\");\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/distributed/NodeQueueLoadMonitor.java",
      "extendedDetails": {}
    },
    "2064ca015d1584263aac0cc20c60b925a3aff612": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9349.  Changed logging to use slf4j api.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "15/03/19 4:20 PM",
      "commitName": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "04/03/19 9:10 PM",
      "commitNameOld": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
      "commitAuthorOld": "Prabhu Joseph",
      "daysBetweenCommits": 10.76,
      "commitsBetweenForRepo": 108,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   public void removeNode(RMNode removedRMNode) {\n-    LOG.debug(\"Node delete event for: \" + removedRMNode.getNode().getName());\n+    LOG.debug(\"Node delete event for: {}\", removedRMNode.getNode().getName());\n     ReentrantReadWriteLock.WriteLock writeLock \u003d clusterNodesLock.writeLock();\n     writeLock.lock();\n     ClusterNode node;\n     try {\n       node \u003d this.clusterNodes.remove(removedRMNode.getNodeID());\n     } finally {\n       writeLock.unlock();\n     }\n     if (LOG.isDebugEnabled()) {\n       if (node !\u003d null) {\n         LOG.debug(\"Delete ClusterNode: \" + removedRMNode.getNodeID());\n       } else {\n         LOG.debug(\"Node not in list!\");\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void removeNode(RMNode removedRMNode) {\n    LOG.debug(\"Node delete event for: {}\", removedRMNode.getNode().getName());\n    ReentrantReadWriteLock.WriteLock writeLock \u003d clusterNodesLock.writeLock();\n    writeLock.lock();\n    ClusterNode node;\n    try {\n      node \u003d this.clusterNodes.remove(removedRMNode.getNodeID());\n    } finally {\n      writeLock.unlock();\n    }\n    if (LOG.isDebugEnabled()) {\n      if (node !\u003d null) {\n        LOG.debug(\"Delete ClusterNode: \" + removedRMNode.getNodeID());\n      } else {\n        LOG.debug(\"Node not in list!\");\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/distributed/NodeQueueLoadMonitor.java",
      "extendedDetails": {}
    },
    "10be45986cdf86a89055065b752959bd6369d54f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5486. Update OpportunisticContainerAllocatorAMService::allocate method to handle OPPORTUNISTIC container requests. (Konstantinos Karanasos via asuresh)\n",
      "commitDate": "29/09/16 3:11 PM",
      "commitName": "10be45986cdf86a89055065b752959bd6369d54f",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "18/05/16 6:46 PM",
      "commitNameOld": "1597630681c784a3d59f5605b87e96197b8139d7",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 133.85,
      "commitsBetweenForRepo": 988,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,18 @@\n   public void removeNode(RMNode removedRMNode) {\n     LOG.debug(\"Node delete event for: \" + removedRMNode.getNode().getName());\n-    synchronized (this.clusterNodes) {\n-      if (this.clusterNodes.containsKey(removedRMNode.getNodeID())) {\n-        this.clusterNodes.remove(removedRMNode.getNodeID());\n+    ReentrantReadWriteLock.WriteLock writeLock \u003d clusterNodesLock.writeLock();\n+    writeLock.lock();\n+    ClusterNode node;\n+    try {\n+      node \u003d this.clusterNodes.remove(removedRMNode.getNodeID());\n+    } finally {\n+      writeLock.unlock();\n+    }\n+    if (LOG.isDebugEnabled()) {\n+      if (node !\u003d null) {\n         LOG.debug(\"Delete ClusterNode: \" + removedRMNode.getNodeID());\n       } else {\n         LOG.debug(\"Node not in list!\");\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void removeNode(RMNode removedRMNode) {\n    LOG.debug(\"Node delete event for: \" + removedRMNode.getNode().getName());\n    ReentrantReadWriteLock.WriteLock writeLock \u003d clusterNodesLock.writeLock();\n    writeLock.lock();\n    ClusterNode node;\n    try {\n      node \u003d this.clusterNodes.remove(removedRMNode.getNodeID());\n    } finally {\n      writeLock.unlock();\n    }\n    if (LOG.isDebugEnabled()) {\n      if (node !\u003d null) {\n        LOG.debug(\"Delete ClusterNode: \" + removedRMNode.getNodeID());\n      } else {\n        LOG.debug(\"Node not in list!\");\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/distributed/NodeQueueLoadMonitor.java",
      "extendedDetails": {}
    },
    "f0ac18d001d97914a9ee810b1fab56c5cebff830": {
      "type": "Yfilerename",
      "commitMessage": "YARN-2888. Corrective mechanisms for rebalancing NM container queues. (asuresh)\n",
      "commitDate": "13/05/16 1:38 PM",
      "commitName": "f0ac18d001d97914a9ee810b1fab56c5cebff830",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "13/05/16 10:01 AM",
      "commitNameOld": "1f2794b4faf119a1ab66c8184ac84cec710d52a0",
      "commitAuthorOld": "Sangjin Lee",
      "daysBetweenCommits": 0.15,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void removeNode(RMNode removedRMNode) {\n    LOG.debug(\"Node delete event for: \" + removedRMNode.getNode().getName());\n    synchronized (this.clusterNodes) {\n      if (this.clusterNodes.containsKey(removedRMNode.getNodeID())) {\n        this.clusterNodes.remove(removedRMNode.getNodeID());\n        LOG.debug(\"Delete ClusterNode: \" + removedRMNode.getNodeID());\n      } else {\n        LOG.debug(\"Node not in list!\");\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/distributed/NodeQueueLoadMonitor.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/distributed/TopKNodeSelector.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/distributed/NodeQueueLoadMonitor.java"
      }
    },
    "341888a0aa23f24458b4e6e34868794b9735c06a": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4412. Create ClusterMonitor to compute ordered list of preferred NMs for OPPORTUNITIC containers. (asuresh)\n",
      "commitDate": "26/04/16 8:12 PM",
      "commitName": "341888a0aa23f24458b4e6e34868794b9735c06a",
      "commitAuthor": "Arun Suresh",
      "diff": "@@ -0,0 +1,11 @@\n+  public void removeNode(RMNode removedRMNode) {\n+    LOG.debug(\"Node delete event for: \" + removedRMNode.getNode().getName());\n+    synchronized (this.clusterNodes) {\n+      if (this.clusterNodes.containsKey(removedRMNode.getNodeID())) {\n+        this.clusterNodes.remove(removedRMNode.getNodeID());\n+        LOG.debug(\"Delete ClusterNode: \" + removedRMNode.getNodeID());\n+      } else {\n+        LOG.debug(\"Node not in list!\");\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void removeNode(RMNode removedRMNode) {\n    LOG.debug(\"Node delete event for: \" + removedRMNode.getNode().getName());\n    synchronized (this.clusterNodes) {\n      if (this.clusterNodes.containsKey(removedRMNode.getNodeID())) {\n        this.clusterNodes.remove(removedRMNode.getNodeID());\n        LOG.debug(\"Delete ClusterNode: \" + removedRMNode.getNodeID());\n      } else {\n        LOG.debug(\"Node not in list!\");\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/distributed/TopKNodeSelector.java"
    }
  }
}