{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LogsCLI.java",
  "functionName": "getMatchedContainerLogFiles",
  "functionId": "getMatchedContainerLogFiles___request-ContainerLogsRequest__useRegex-boolean__ignoreSizeLimit-boolean",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/LogsCLI.java",
  "functionStartLine": 1426,
  "functionEndLine": 1440,
  "numCommitsSeen": 93,
  "timeTaken": 3229,
  "changeHistory": [
    "ec2ae3060a807c8754826af2135a68c08b2e4f13",
    "3fddabc2fe4fbdb8ef3f9ce7558955c4f0794dcc",
    "871dc420f8a4f151189c0925e062c64859a8f275",
    "8528d85a68c0e6ea71026df4d3026e7edc206b2d",
    "e3037c564117fe53742c130665b047dd17eff6d0"
  ],
  "changeHistoryShort": {
    "ec2ae3060a807c8754826af2135a68c08b2e4f13": "Ymultichange(Yparameterchange,Ybodychange)",
    "3fddabc2fe4fbdb8ef3f9ce7558955c4f0794dcc": "Ybodychange",
    "871dc420f8a4f151189c0925e062c64859a8f275": "Ybodychange",
    "8528d85a68c0e6ea71026df4d3026e7edc206b2d": "Ybodychange",
    "e3037c564117fe53742c130665b047dd17eff6d0": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ec2ae3060a807c8754826af2135a68c08b2e4f13": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-6509. Add a size threshold beyond which yarn logs will require a force option. (Xuan Gong via wangda)\n\nChange-Id: I755fe903337d4ff9ec35dae5b9cce638794e1d0f\n",
      "commitDate": "29/09/17 4:42 PM",
      "commitName": "ec2ae3060a807c8754826af2135a68c08b2e4f13",
      "commitAuthor": "Wangda Tan",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-6509. Add a size threshold beyond which yarn logs will require a force option. (Xuan Gong via wangda)\n\nChange-Id: I755fe903337d4ff9ec35dae5b9cce638794e1d0f\n",
          "commitDate": "29/09/17 4:42 PM",
          "commitName": "ec2ae3060a807c8754826af2135a68c08b2e4f13",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "15/09/17 3:33 PM",
          "commitNameOld": "1a84c24b0cf6674fa755403971fa57d8e412b320",
          "commitAuthorOld": "Junping Du",
          "daysBetweenCommits": 14.05,
          "commitsBetweenForRepo": 103,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,15 @@\n   public Set\u003cString\u003e getMatchedContainerLogFiles(ContainerLogsRequest request,\n-      boolean useRegex) throws IOException {\n+      boolean useRegex, boolean ignoreSizeLimit) throws IOException {\n     // fetch all the log files for the container\n     // filter the log files based on the given -log_files pattern\n     List\u003cPair\u003cContainerLogFileInfo, String\u003e\u003e allLogFileInfos\u003d\n         getContainerLogFiles(getConf(), request.getContainerId(),\n             request.getNodeHttpAddress());\n-    List\u003cString\u003e fileNames \u003d new ArrayList\u003cString\u003e();\n+    List\u003cContainerLogFileInfo\u003e fileNames \u003d new ArrayList\u003c\n+        ContainerLogFileInfo\u003e();\n     for (Pair\u003cContainerLogFileInfo, String\u003e fileInfo : allLogFileInfos) {\n-      fileNames.add(fileInfo.getKey().getFileName());\n+      fileNames.add(fileInfo.getKey());\n     }\n     return getMatchedLogFiles(request, fileNames,\n-        useRegex);\n+        useRegex, ignoreSizeLimit);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Set\u003cString\u003e getMatchedContainerLogFiles(ContainerLogsRequest request,\n      boolean useRegex, boolean ignoreSizeLimit) throws IOException {\n    // fetch all the log files for the container\n    // filter the log files based on the given -log_files pattern\n    List\u003cPair\u003cContainerLogFileInfo, String\u003e\u003e allLogFileInfos\u003d\n        getContainerLogFiles(getConf(), request.getContainerId(),\n            request.getNodeHttpAddress());\n    List\u003cContainerLogFileInfo\u003e fileNames \u003d new ArrayList\u003c\n        ContainerLogFileInfo\u003e();\n    for (Pair\u003cContainerLogFileInfo, String\u003e fileInfo : allLogFileInfos) {\n      fileNames.add(fileInfo.getKey());\n    }\n    return getMatchedLogFiles(request, fileNames,\n        useRegex, ignoreSizeLimit);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/LogsCLI.java",
          "extendedDetails": {
            "oldValue": "[request-ContainerLogsRequest, useRegex-boolean]",
            "newValue": "[request-ContainerLogsRequest, useRegex-boolean, ignoreSizeLimit-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-6509. Add a size threshold beyond which yarn logs will require a force option. (Xuan Gong via wangda)\n\nChange-Id: I755fe903337d4ff9ec35dae5b9cce638794e1d0f\n",
          "commitDate": "29/09/17 4:42 PM",
          "commitName": "ec2ae3060a807c8754826af2135a68c08b2e4f13",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "15/09/17 3:33 PM",
          "commitNameOld": "1a84c24b0cf6674fa755403971fa57d8e412b320",
          "commitAuthorOld": "Junping Du",
          "daysBetweenCommits": 14.05,
          "commitsBetweenForRepo": 103,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,15 @@\n   public Set\u003cString\u003e getMatchedContainerLogFiles(ContainerLogsRequest request,\n-      boolean useRegex) throws IOException {\n+      boolean useRegex, boolean ignoreSizeLimit) throws IOException {\n     // fetch all the log files for the container\n     // filter the log files based on the given -log_files pattern\n     List\u003cPair\u003cContainerLogFileInfo, String\u003e\u003e allLogFileInfos\u003d\n         getContainerLogFiles(getConf(), request.getContainerId(),\n             request.getNodeHttpAddress());\n-    List\u003cString\u003e fileNames \u003d new ArrayList\u003cString\u003e();\n+    List\u003cContainerLogFileInfo\u003e fileNames \u003d new ArrayList\u003c\n+        ContainerLogFileInfo\u003e();\n     for (Pair\u003cContainerLogFileInfo, String\u003e fileInfo : allLogFileInfos) {\n-      fileNames.add(fileInfo.getKey().getFileName());\n+      fileNames.add(fileInfo.getKey());\n     }\n     return getMatchedLogFiles(request, fileNames,\n-        useRegex);\n+        useRegex, ignoreSizeLimit);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Set\u003cString\u003e getMatchedContainerLogFiles(ContainerLogsRequest request,\n      boolean useRegex, boolean ignoreSizeLimit) throws IOException {\n    // fetch all the log files for the container\n    // filter the log files based on the given -log_files pattern\n    List\u003cPair\u003cContainerLogFileInfo, String\u003e\u003e allLogFileInfos\u003d\n        getContainerLogFiles(getConf(), request.getContainerId(),\n            request.getNodeHttpAddress());\n    List\u003cContainerLogFileInfo\u003e fileNames \u003d new ArrayList\u003c\n        ContainerLogFileInfo\u003e();\n    for (Pair\u003cContainerLogFileInfo, String\u003e fileInfo : allLogFileInfos) {\n      fileNames.add(fileInfo.getKey());\n    }\n    return getMatchedLogFiles(request, fileNames,\n        useRegex, ignoreSizeLimit);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/LogsCLI.java",
          "extendedDetails": {}
        }
      ]
    },
    "3fddabc2fe4fbdb8ef3f9ce7558955c4f0794dcc": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7072. Add a new log aggregation file format controller. Contributed by Xuan Gong.\n",
      "commitDate": "08/09/17 3:16 PM",
      "commitName": "3fddabc2fe4fbdb8ef3f9ce7558955c4f0794dcc",
      "commitAuthor": "Junping Du",
      "commitDateOld": "01/05/17 6:08 AM",
      "commitNameOld": "64f68cb0b8c0b93d37699893b812b37c4b05c939",
      "commitAuthorOld": "Naganarasimha",
      "daysBetweenCommits": 130.38,
      "commitsBetweenForRepo": 830,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n   public Set\u003cString\u003e getMatchedContainerLogFiles(ContainerLogsRequest request,\n       boolean useRegex) throws IOException {\n     // fetch all the log files for the container\n     // filter the log files based on the given -log_files pattern\n-    List\u003cPair\u003cPerContainerLogFileInfo, String\u003e\u003e allLogFileInfos\u003d\n+    List\u003cPair\u003cContainerLogFileInfo, String\u003e\u003e allLogFileInfos\u003d\n         getContainerLogFiles(getConf(), request.getContainerId(),\n             request.getNodeHttpAddress());\n     List\u003cString\u003e fileNames \u003d new ArrayList\u003cString\u003e();\n-    for (Pair\u003cPerContainerLogFileInfo, String\u003e fileInfo : allLogFileInfos) {\n+    for (Pair\u003cContainerLogFileInfo, String\u003e fileInfo : allLogFileInfos) {\n       fileNames.add(fileInfo.getKey().getFileName());\n     }\n     return getMatchedLogFiles(request, fileNames,\n         useRegex);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Set\u003cString\u003e getMatchedContainerLogFiles(ContainerLogsRequest request,\n      boolean useRegex) throws IOException {\n    // fetch all the log files for the container\n    // filter the log files based on the given -log_files pattern\n    List\u003cPair\u003cContainerLogFileInfo, String\u003e\u003e allLogFileInfos\u003d\n        getContainerLogFiles(getConf(), request.getContainerId(),\n            request.getNodeHttpAddress());\n    List\u003cString\u003e fileNames \u003d new ArrayList\u003cString\u003e();\n    for (Pair\u003cContainerLogFileInfo, String\u003e fileInfo : allLogFileInfos) {\n      fileNames.add(fileInfo.getKey().getFileName());\n    }\n    return getMatchedLogFiles(request, fileNames,\n        useRegex);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/LogsCLI.java",
      "extendedDetails": {}
    },
    "871dc420f8a4f151189c0925e062c64859a8f275": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6313. YARN logs cli should provide logs for a completed container even when application is still running. Contributed by Xuan Gong.\n\n(cherry picked from commit b88f5e0f7858d1d89b79dfd325b767c34416052d)\n",
      "commitDate": "14/03/17 12:58 PM",
      "commitName": "871dc420f8a4f151189c0925e062c64859a8f275",
      "commitAuthor": "Junping Du",
      "commitDateOld": "02/02/17 12:41 AM",
      "commitNameOld": "327c9980aafce52cc02d2b8885fc4e9f628ab23c",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 40.47,
      "commitsBetweenForRepo": 227,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n   public Set\u003cString\u003e getMatchedContainerLogFiles(ContainerLogsRequest request,\n       boolean useRegex) throws IOException {\n     // fetch all the log files for the container\n     // filter the log files based on the given -log_files pattern\n-    List\u003cPerContainerLogFileInfo\u003e allLogFileInfos\u003d\n+    List\u003cPair\u003cPerContainerLogFileInfo, String\u003e\u003e allLogFileInfos\u003d\n         getContainerLogFiles(getConf(), request.getContainerId(),\n             request.getNodeHttpAddress());\n     List\u003cString\u003e fileNames \u003d new ArrayList\u003cString\u003e();\n-    for (PerContainerLogFileInfo fileInfo : allLogFileInfos) {\n-      fileNames.add(fileInfo.getFileName());\n+    for (Pair\u003cPerContainerLogFileInfo, String\u003e fileInfo : allLogFileInfos) {\n+      fileNames.add(fileInfo.getKey().getFileName());\n     }\n     return getMatchedLogFiles(request, fileNames,\n         useRegex);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Set\u003cString\u003e getMatchedContainerLogFiles(ContainerLogsRequest request,\n      boolean useRegex) throws IOException {\n    // fetch all the log files for the container\n    // filter the log files based on the given -log_files pattern\n    List\u003cPair\u003cPerContainerLogFileInfo, String\u003e\u003e allLogFileInfos\u003d\n        getContainerLogFiles(getConf(), request.getContainerId(),\n            request.getNodeHttpAddress());\n    List\u003cString\u003e fileNames \u003d new ArrayList\u003cString\u003e();\n    for (Pair\u003cPerContainerLogFileInfo, String\u003e fileInfo : allLogFileInfos) {\n      fileNames.add(fileInfo.getKey().getFileName());\n    }\n    return getMatchedLogFiles(request, fileNames,\n        useRegex);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/LogsCLI.java",
      "extendedDetails": {}
    },
    "8528d85a68c0e6ea71026df4d3026e7edc206b2d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6099. Improve webservice to list aggregated log files. Contributed by Xuan Gong.\n",
      "commitDate": "24/01/17 3:26 PM",
      "commitName": "8528d85a68c0e6ea71026df4d3026e7edc206b2d",
      "commitAuthor": "Junping Du",
      "commitDateOld": "19/12/16 5:06 PM",
      "commitNameOld": "358341398adfe8f59bb2165472b50751de3ffb98",
      "commitAuthorOld": "Naganarasimha",
      "daysBetweenCommits": 35.93,
      "commitsBetweenForRepo": 171,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n   public Set\u003cString\u003e getMatchedContainerLogFiles(ContainerLogsRequest request,\n       boolean useRegex) throws IOException {\n     // fetch all the log files for the container\n     // filter the log files based on the given -log_files pattern\n-    List\u003cPerLogFileInfo\u003e allLogFileInfos\u003d\n+    List\u003cPerContainerLogFileInfo\u003e allLogFileInfos\u003d\n         getContainerLogFiles(getConf(), request.getContainerId(),\n             request.getNodeHttpAddress());\n     List\u003cString\u003e fileNames \u003d new ArrayList\u003cString\u003e();\n-    for (PerLogFileInfo fileInfo : allLogFileInfos) {\n+    for (PerContainerLogFileInfo fileInfo : allLogFileInfos) {\n       fileNames.add(fileInfo.getFileName());\n     }\n     return getMatchedLogFiles(request, fileNames,\n         useRegex);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Set\u003cString\u003e getMatchedContainerLogFiles(ContainerLogsRequest request,\n      boolean useRegex) throws IOException {\n    // fetch all the log files for the container\n    // filter the log files based on the given -log_files pattern\n    List\u003cPerContainerLogFileInfo\u003e allLogFileInfos\u003d\n        getContainerLogFiles(getConf(), request.getContainerId(),\n            request.getNodeHttpAddress());\n    List\u003cString\u003e fileNames \u003d new ArrayList\u003cString\u003e();\n    for (PerContainerLogFileInfo fileInfo : allLogFileInfos) {\n      fileNames.add(fileInfo.getFileName());\n    }\n    return getMatchedLogFiles(request, fileNames,\n        useRegex);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/LogsCLI.java",
      "extendedDetails": {}
    },
    "e3037c564117fe53742c130665b047dd17eff6d0": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5523. Yarn running container log fetching causes OutOfMemoryError (Xuan Gong via Varun Saxena)\n",
      "commitDate": "17/08/16 1:15 PM",
      "commitName": "e3037c564117fe53742c130665b047dd17eff6d0",
      "commitAuthor": "Varun Saxena",
      "diff": "@@ -0,0 +1,14 @@\n+  public Set\u003cString\u003e getMatchedContainerLogFiles(ContainerLogsRequest request,\n+      boolean useRegex) throws IOException {\n+    // fetch all the log files for the container\n+    // filter the log files based on the given -log_files pattern\n+    List\u003cPerLogFileInfo\u003e allLogFileInfos\u003d\n+        getContainerLogFiles(getConf(), request.getContainerId(),\n+            request.getNodeHttpAddress());\n+    List\u003cString\u003e fileNames \u003d new ArrayList\u003cString\u003e();\n+    for (PerLogFileInfo fileInfo : allLogFileInfos) {\n+      fileNames.add(fileInfo.getFileName());\n+    }\n+    return getMatchedLogFiles(request, fileNames,\n+        useRegex);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Set\u003cString\u003e getMatchedContainerLogFiles(ContainerLogsRequest request,\n      boolean useRegex) throws IOException {\n    // fetch all the log files for the container\n    // filter the log files based on the given -log_files pattern\n    List\u003cPerLogFileInfo\u003e allLogFileInfos\u003d\n        getContainerLogFiles(getConf(), request.getContainerId(),\n            request.getNodeHttpAddress());\n    List\u003cString\u003e fileNames \u003d new ArrayList\u003cString\u003e();\n    for (PerLogFileInfo fileInfo : allLogFileInfos) {\n      fileNames.add(fileInfo.getFileName());\n    }\n    return getMatchedLogFiles(request, fileNames,\n        useRegex);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/LogsCLI.java"
    }
  }
}