{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ApplicationMaster.java",
  "functionName": "run",
  "functionId": "run",
  "sourceFilePath": "hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/java/org/apache/hadoop/tools/dynamometer/ApplicationMaster.java",
  "functionStartLine": 756,
  "functionEndLine": 782,
  "numCommitsSeen": 2,
  "timeTaken": 452,
  "changeHistory": [
    "ab0b180ddb5d0775a2452d5eeb7badd252aadb91"
  ],
  "changeHistoryShort": {
    "ab0b180ddb5d0775a2452d5eeb7badd252aadb91": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ab0b180ddb5d0775a2452d5eeb7badd252aadb91": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-12345 Add Dynamometer to hadoop-tools, a tool for scale testing the HDFS NameNode with real metadata and workloads. Contributed by Erik Krogen.\n",
      "commitDate": "25/06/19 8:07 AM",
      "commitName": "ab0b180ddb5d0775a2452d5eeb7badd252aadb91",
      "commitAuthor": "Erik Krogen",
      "diff": "@@ -0,0 +1,27 @@\n+    public void run() {\n+      LOG.info(\"Setting up container launch context for containerid\u003d\"\n+          + container.getId() + \", isNameNode\u003d\" + isNameNodeLauncher);\n+      ContainerLaunchContext ctx \u003d Records\n+          .newRecord(ContainerLaunchContext.class);\n+\n+      // Set the environment\n+      ctx.setEnvironment(amOptions.getShellEnv());\n+      ctx.setApplicationACLs(applicationAcls);\n+\n+      try {\n+        ctx.setLocalResources(getLocalResources());\n+\n+        ctx.setCommands(getContainerStartCommand());\n+      } catch (IOException e) {\n+        LOG.error(\"Error while configuring container!\", e);\n+        return;\n+      }\n+\n+      // Set up tokens for the container\n+      ctx.setTokens(allTokens.duplicate());\n+\n+      nmClientAsync.startContainerAsync(container, ctx);\n+      LOG.info(\"Starting {}; track at: http://{}/node/containerlogs/{}/{}/\",\n+          isNameNodeLauncher ? \"NAMENODE\" : \"DATANODE\",\n+          container.getNodeHttpAddress(), container.getId(), launchingUser);\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      LOG.info(\"Setting up container launch context for containerid\u003d\"\n          + container.getId() + \", isNameNode\u003d\" + isNameNodeLauncher);\n      ContainerLaunchContext ctx \u003d Records\n          .newRecord(ContainerLaunchContext.class);\n\n      // Set the environment\n      ctx.setEnvironment(amOptions.getShellEnv());\n      ctx.setApplicationACLs(applicationAcls);\n\n      try {\n        ctx.setLocalResources(getLocalResources());\n\n        ctx.setCommands(getContainerStartCommand());\n      } catch (IOException e) {\n        LOG.error(\"Error while configuring container!\", e);\n        return;\n      }\n\n      // Set up tokens for the container\n      ctx.setTokens(allTokens.duplicate());\n\n      nmClientAsync.startContainerAsync(container, ctx);\n      LOG.info(\"Starting {}; track at: http://{}/node/containerlogs/{}/{}/\",\n          isNameNodeLauncher ? \"NAMENODE\" : \"DATANODE\",\n          container.getNodeHttpAddress(), container.getId(), launchingUser);\n    }",
      "path": "hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/java/org/apache/hadoop/tools/dynamometer/ApplicationMaster.java"
    }
  }
}