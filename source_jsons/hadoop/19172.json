{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "QueueConfigurationParser.java",
  "functionName": "parseResource",
  "functionId": "parseResource___queuesNode-Element",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/QueueConfigurationParser.java",
  "functionStartLine": 185,
  "functionEndLine": 238,
  "numCommitsSeen": 5,
  "timeTaken": 4255,
  "changeHistory": [
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private Queue parseResource(Element queuesNode) {\n    Queue rootNode \u003d null;\n    try {\n      if (!QUEUES_TAG.equals(queuesNode.getTagName())) {\n        LOG.info(\"Bad conf file: top-level element not \u003cqueues\u003e\");\n        throw new RuntimeException(\"No queues defined \");\n      }\n      NamedNodeMap nmp \u003d queuesNode.getAttributes();\n      Node acls \u003d nmp.getNamedItem(ACLS_ENABLED_TAG);\n\n      if (acls !\u003d null) {\n        LOG.warn(\"Configuring \" + ACLS_ENABLED_TAG + \" flag in \" +\n            QueueManager.QUEUE_CONF_FILE_NAME + \" is not valid. \" +\n            \"This tag is ignored. Configure \" +\n            MRConfig.MR_ACLS_ENABLED + \" in mapred-site.xml. See the \" +\n            \" documentation of \" + MRConfig.MR_ACLS_ENABLED +\n            \", which is used for enabling job level authorization and \" +\n            \" queue level authorization.\");\n      }\n\n      NodeList props \u003d queuesNode.getChildNodes();\n      if (props \u003d\u003d null || props.getLength() \u003c\u003d 0) {\n        LOG.info(\" Bad configuration no queues defined \");\n        throw new RuntimeException(\" No queues defined \");\n      }\n\n      //We have root level nodes.\n      for (int i \u003d 0; i \u003c props.getLength(); i++) {\n        Node propNode \u003d props.item(i);\n        if (!(propNode instanceof Element)) {\n          continue;\n        }\n\n        if (!propNode.getNodeName().equals(QUEUE_TAG)) {\n          LOG.info(\"At root level only \\\" queue \\\" tags are allowed \");\n          throw\n            new RuntimeException(\"Malformed xml document no queue defined \");\n        }\n\n        Element prop \u003d (Element) propNode;\n        //Add children to root.\n        Queue q \u003d createHierarchy(\"\", prop);\n        if(rootNode \u003d\u003d null) {\n          rootNode \u003d new Queue();\n          rootNode.setName(\"\");\n        }\n        rootNode.addChild(q);\n      }\n      return rootNode;\n    } catch (DOMException e) {\n      LOG.info(\"Error parsing conf file: \" + e);\n      throw new RuntimeException(e);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/QueueConfigurationParser.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/QueueConfigurationParser.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/QueueConfigurationParser.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private Queue parseResource(Element queuesNode) {\n    Queue rootNode \u003d null;\n    try {\n      if (!QUEUES_TAG.equals(queuesNode.getTagName())) {\n        LOG.info(\"Bad conf file: top-level element not \u003cqueues\u003e\");\n        throw new RuntimeException(\"No queues defined \");\n      }\n      NamedNodeMap nmp \u003d queuesNode.getAttributes();\n      Node acls \u003d nmp.getNamedItem(ACLS_ENABLED_TAG);\n\n      if (acls !\u003d null) {\n        LOG.warn(\"Configuring \" + ACLS_ENABLED_TAG + \" flag in \" +\n            QueueManager.QUEUE_CONF_FILE_NAME + \" is not valid. \" +\n            \"This tag is ignored. Configure \" +\n            MRConfig.MR_ACLS_ENABLED + \" in mapred-site.xml. See the \" +\n            \" documentation of \" + MRConfig.MR_ACLS_ENABLED +\n            \", which is used for enabling job level authorization and \" +\n            \" queue level authorization.\");\n      }\n\n      NodeList props \u003d queuesNode.getChildNodes();\n      if (props \u003d\u003d null || props.getLength() \u003c\u003d 0) {\n        LOG.info(\" Bad configuration no queues defined \");\n        throw new RuntimeException(\" No queues defined \");\n      }\n\n      //We have root level nodes.\n      for (int i \u003d 0; i \u003c props.getLength(); i++) {\n        Node propNode \u003d props.item(i);\n        if (!(propNode instanceof Element)) {\n          continue;\n        }\n\n        if (!propNode.getNodeName().equals(QUEUE_TAG)) {\n          LOG.info(\"At root level only \\\" queue \\\" tags are allowed \");\n          throw\n            new RuntimeException(\"Malformed xml document no queue defined \");\n        }\n\n        Element prop \u003d (Element) propNode;\n        //Add children to root.\n        Queue q \u003d createHierarchy(\"\", prop);\n        if(rootNode \u003d\u003d null) {\n          rootNode \u003d new Queue();\n          rootNode.setName(\"\");\n        }\n        rootNode.addChild(q);\n      }\n      return rootNode;\n    } catch (DOMException e) {\n      LOG.info(\"Error parsing conf file: \" + e);\n      throw new RuntimeException(e);\n    }\n  }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/QueueConfigurationParser.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/java/org/apache/hadoop/mapred/QueueConfigurationParser.java",
        "newPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/QueueConfigurationParser.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,54 @@\n+  private Queue parseResource(Element queuesNode) {\n+    Queue rootNode \u003d null;\n+    try {\n+      if (!QUEUES_TAG.equals(queuesNode.getTagName())) {\n+        LOG.info(\"Bad conf file: top-level element not \u003cqueues\u003e\");\n+        throw new RuntimeException(\"No queues defined \");\n+      }\n+      NamedNodeMap nmp \u003d queuesNode.getAttributes();\n+      Node acls \u003d nmp.getNamedItem(ACLS_ENABLED_TAG);\n+\n+      if (acls !\u003d null) {\n+        LOG.warn(\"Configuring \" + ACLS_ENABLED_TAG + \" flag in \" +\n+            QueueManager.QUEUE_CONF_FILE_NAME + \" is not valid. \" +\n+            \"This tag is ignored. Configure \" +\n+            MRConfig.MR_ACLS_ENABLED + \" in mapred-site.xml. See the \" +\n+            \" documentation of \" + MRConfig.MR_ACLS_ENABLED +\n+            \", which is used for enabling job level authorization and \" +\n+            \" queue level authorization.\");\n+      }\n+\n+      NodeList props \u003d queuesNode.getChildNodes();\n+      if (props \u003d\u003d null || props.getLength() \u003c\u003d 0) {\n+        LOG.info(\" Bad configuration no queues defined \");\n+        throw new RuntimeException(\" No queues defined \");\n+      }\n+\n+      //We have root level nodes.\n+      for (int i \u003d 0; i \u003c props.getLength(); i++) {\n+        Node propNode \u003d props.item(i);\n+        if (!(propNode instanceof Element)) {\n+          continue;\n+        }\n+\n+        if (!propNode.getNodeName().equals(QUEUE_TAG)) {\n+          LOG.info(\"At root level only \\\" queue \\\" tags are allowed \");\n+          throw\n+            new RuntimeException(\"Malformed xml document no queue defined \");\n+        }\n+\n+        Element prop \u003d (Element) propNode;\n+        //Add children to root.\n+        Queue q \u003d createHierarchy(\"\", prop);\n+        if(rootNode \u003d\u003d null) {\n+          rootNode \u003d new Queue();\n+          rootNode.setName(\"\");\n+        }\n+        rootNode.addChild(q);\n+      }\n+      return rootNode;\n+    } catch (DOMException e) {\n+      LOG.info(\"Error parsing conf file: \" + e);\n+      throw new RuntimeException(e);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private Queue parseResource(Element queuesNode) {\n    Queue rootNode \u003d null;\n    try {\n      if (!QUEUES_TAG.equals(queuesNode.getTagName())) {\n        LOG.info(\"Bad conf file: top-level element not \u003cqueues\u003e\");\n        throw new RuntimeException(\"No queues defined \");\n      }\n      NamedNodeMap nmp \u003d queuesNode.getAttributes();\n      Node acls \u003d nmp.getNamedItem(ACLS_ENABLED_TAG);\n\n      if (acls !\u003d null) {\n        LOG.warn(\"Configuring \" + ACLS_ENABLED_TAG + \" flag in \" +\n            QueueManager.QUEUE_CONF_FILE_NAME + \" is not valid. \" +\n            \"This tag is ignored. Configure \" +\n            MRConfig.MR_ACLS_ENABLED + \" in mapred-site.xml. See the \" +\n            \" documentation of \" + MRConfig.MR_ACLS_ENABLED +\n            \", which is used for enabling job level authorization and \" +\n            \" queue level authorization.\");\n      }\n\n      NodeList props \u003d queuesNode.getChildNodes();\n      if (props \u003d\u003d null || props.getLength() \u003c\u003d 0) {\n        LOG.info(\" Bad configuration no queues defined \");\n        throw new RuntimeException(\" No queues defined \");\n      }\n\n      //We have root level nodes.\n      for (int i \u003d 0; i \u003c props.getLength(); i++) {\n        Node propNode \u003d props.item(i);\n        if (!(propNode instanceof Element)) {\n          continue;\n        }\n\n        if (!propNode.getNodeName().equals(QUEUE_TAG)) {\n          LOG.info(\"At root level only \\\" queue \\\" tags are allowed \");\n          throw\n            new RuntimeException(\"Malformed xml document no queue defined \");\n        }\n\n        Element prop \u003d (Element) propNode;\n        //Add children to root.\n        Queue q \u003d createHierarchy(\"\", prop);\n        if(rootNode \u003d\u003d null) {\n          rootNode \u003d new Queue();\n          rootNode.setName(\"\");\n        }\n        rootNode.addChild(q);\n      }\n      return rootNode;\n    } catch (DOMException e) {\n      LOG.info(\"Error parsing conf file: \" + e);\n      throw new RuntimeException(e);\n    }\n  }",
      "path": "mapreduce/src/java/org/apache/hadoop/mapred/QueueConfigurationParser.java"
    }
  }
}