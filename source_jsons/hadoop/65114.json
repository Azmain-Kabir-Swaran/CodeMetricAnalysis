{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CommitOperations.java",
  "functionName": "abortAllSinglePendingCommits",
  "functionId": "abortAllSinglePendingCommits___pendingDir-Path__recursive-boolean",
  "sourceFilePath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/commit/CommitOperations.java",
  "functionStartLine": 304,
  "functionEndLine": 339,
  "numCommitsSeen": 12,
  "timeTaken": 1640,
  "changeHistory": [
    "9a013b255f301c557c3868dc1ad657202e9e7a67",
    "de8b6ca5ef8614de6d6277b7617e27c788b0555c"
  ],
  "changeHistoryShort": {
    "9a013b255f301c557c3868dc1ad657202e9e7a67": "Ybodychange",
    "de8b6ca5ef8614de6d6277b7617e27c788b0555c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9a013b255f301c557c3868dc1ad657202e9e7a67": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15176. Enhance IAM Assumed Role support in S3A client.\nContributed by Steve Loughran\n\n(cherry picked from commit 96c047fbb98c2378eed9693a724d4cbbd03c00fd)\n",
      "commitDate": "15/02/18 7:57 AM",
      "commitName": "9a013b255f301c557c3868dc1ad657202e9e7a67",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "18/01/18 5:13 AM",
      "commitNameOld": "1093a73689912f78547e6d23023be2fd1c7ddc85",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 28.11,
      "commitsBetweenForRepo": 184,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,36 @@\n   public MaybeIOE abortAllSinglePendingCommits(Path pendingDir,\n       boolean recursive)\n       throws IOException {\n     Preconditions.checkArgument(pendingDir !\u003d null, \"null pendingDir\");\n     LOG.debug(\"Aborting all pending commit filess under {}\"\n             + \" (recursive\u003d{}\", pendingDir, recursive);\n     RemoteIterator\u003cLocatedFileStatus\u003e pendingFiles;\n     try {\n       pendingFiles \u003d ls(pendingDir, recursive);\n     } catch (FileNotFoundException fnfe) {\n       LOG.info(\"No directory to abort {}\", pendingDir);\n       return MaybeIOE.NONE;\n     }\n     MaybeIOE outcome \u003d MaybeIOE.NONE;\n     if (!pendingFiles.hasNext()) {\n       LOG.debug(\"No files to abort under {}\", pendingDir);\n     }\n     while (pendingFiles.hasNext()) {\n       Path pendingFile \u003d pendingFiles.next().getPath();\n       if (pendingFile.getName().endsWith(CommitConstants.PENDING_SUFFIX)) {\n         try {\n           abortSingleCommit(SinglePendingCommit.load(fs, pendingFile));\n         } catch (FileNotFoundException e) {\n           LOG.debug(\"listed file already deleted: {}\", pendingFile);\n         } catch (IOException | IllegalArgumentException e) {\n-          if (outcome \u003d\u003d null) {\n+          if (MaybeIOE.NONE.equals(outcome)) {\n             outcome \u003d new MaybeIOE(makeIOE(pendingFile.toString(), e));\n           }\n         } finally {\n           // quietly try to delete the pending file\n           S3AUtils.deleteQuietly(fs, pendingFile, false);\n         }\n       }\n     }\n     return outcome;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public MaybeIOE abortAllSinglePendingCommits(Path pendingDir,\n      boolean recursive)\n      throws IOException {\n    Preconditions.checkArgument(pendingDir !\u003d null, \"null pendingDir\");\n    LOG.debug(\"Aborting all pending commit filess under {}\"\n            + \" (recursive\u003d{}\", pendingDir, recursive);\n    RemoteIterator\u003cLocatedFileStatus\u003e pendingFiles;\n    try {\n      pendingFiles \u003d ls(pendingDir, recursive);\n    } catch (FileNotFoundException fnfe) {\n      LOG.info(\"No directory to abort {}\", pendingDir);\n      return MaybeIOE.NONE;\n    }\n    MaybeIOE outcome \u003d MaybeIOE.NONE;\n    if (!pendingFiles.hasNext()) {\n      LOG.debug(\"No files to abort under {}\", pendingDir);\n    }\n    while (pendingFiles.hasNext()) {\n      Path pendingFile \u003d pendingFiles.next().getPath();\n      if (pendingFile.getName().endsWith(CommitConstants.PENDING_SUFFIX)) {\n        try {\n          abortSingleCommit(SinglePendingCommit.load(fs, pendingFile));\n        } catch (FileNotFoundException e) {\n          LOG.debug(\"listed file already deleted: {}\", pendingFile);\n        } catch (IOException | IllegalArgumentException e) {\n          if (MaybeIOE.NONE.equals(outcome)) {\n            outcome \u003d new MaybeIOE(makeIOE(pendingFile.toString(), e));\n          }\n        } finally {\n          // quietly try to delete the pending file\n          S3AUtils.deleteQuietly(fs, pendingFile, false);\n        }\n      }\n    }\n    return outcome;\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/commit/CommitOperations.java",
      "extendedDetails": {}
    },
    "de8b6ca5ef8614de6d6277b7617e27c788b0555c": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-13786 Add S3A committer for zero-rename commits to S3 endpoints.\nContributed by Steve Loughran and Ryan Blue.\n",
      "commitDate": "22/11/17 7:28 AM",
      "commitName": "de8b6ca5ef8614de6d6277b7617e27c788b0555c",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,36 @@\n+  public MaybeIOE abortAllSinglePendingCommits(Path pendingDir,\n+      boolean recursive)\n+      throws IOException {\n+    Preconditions.checkArgument(pendingDir !\u003d null, \"null pendingDir\");\n+    LOG.debug(\"Aborting all pending commit filess under {}\"\n+            + \" (recursive\u003d{}\", pendingDir, recursive);\n+    RemoteIterator\u003cLocatedFileStatus\u003e pendingFiles;\n+    try {\n+      pendingFiles \u003d ls(pendingDir, recursive);\n+    } catch (FileNotFoundException fnfe) {\n+      LOG.info(\"No directory to abort {}\", pendingDir);\n+      return MaybeIOE.NONE;\n+    }\n+    MaybeIOE outcome \u003d MaybeIOE.NONE;\n+    if (!pendingFiles.hasNext()) {\n+      LOG.debug(\"No files to abort under {}\", pendingDir);\n+    }\n+    while (pendingFiles.hasNext()) {\n+      Path pendingFile \u003d pendingFiles.next().getPath();\n+      if (pendingFile.getName().endsWith(CommitConstants.PENDING_SUFFIX)) {\n+        try {\n+          abortSingleCommit(SinglePendingCommit.load(fs, pendingFile));\n+        } catch (FileNotFoundException e) {\n+          LOG.debug(\"listed file already deleted: {}\", pendingFile);\n+        } catch (IOException | IllegalArgumentException e) {\n+          if (outcome \u003d\u003d null) {\n+            outcome \u003d new MaybeIOE(makeIOE(pendingFile.toString(), e));\n+          }\n+        } finally {\n+          // quietly try to delete the pending file\n+          S3AUtils.deleteQuietly(fs, pendingFile, false);\n+        }\n+      }\n+    }\n+    return outcome;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public MaybeIOE abortAllSinglePendingCommits(Path pendingDir,\n      boolean recursive)\n      throws IOException {\n    Preconditions.checkArgument(pendingDir !\u003d null, \"null pendingDir\");\n    LOG.debug(\"Aborting all pending commit filess under {}\"\n            + \" (recursive\u003d{}\", pendingDir, recursive);\n    RemoteIterator\u003cLocatedFileStatus\u003e pendingFiles;\n    try {\n      pendingFiles \u003d ls(pendingDir, recursive);\n    } catch (FileNotFoundException fnfe) {\n      LOG.info(\"No directory to abort {}\", pendingDir);\n      return MaybeIOE.NONE;\n    }\n    MaybeIOE outcome \u003d MaybeIOE.NONE;\n    if (!pendingFiles.hasNext()) {\n      LOG.debug(\"No files to abort under {}\", pendingDir);\n    }\n    while (pendingFiles.hasNext()) {\n      Path pendingFile \u003d pendingFiles.next().getPath();\n      if (pendingFile.getName().endsWith(CommitConstants.PENDING_SUFFIX)) {\n        try {\n          abortSingleCommit(SinglePendingCommit.load(fs, pendingFile));\n        } catch (FileNotFoundException e) {\n          LOG.debug(\"listed file already deleted: {}\", pendingFile);\n        } catch (IOException | IllegalArgumentException e) {\n          if (outcome \u003d\u003d null) {\n            outcome \u003d new MaybeIOE(makeIOE(pendingFile.toString(), e));\n          }\n        } finally {\n          // quietly try to delete the pending file\n          S3AUtils.deleteQuietly(fs, pendingFile, false);\n        }\n      }\n    }\n    return outcome;\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/commit/CommitOperations.java"
    }
  }
}