{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSDirEncryptionZoneOp.java",
  "functionName": "run",
  "functionId": "run",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirEncryptionZoneOp.java",
  "functionStartLine": 99,
  "functionEndLine": 105,
  "numCommitsSeen": 25,
  "timeTaken": 2438,
  "changeHistory": [
    "ce3d68e9c3512b6f370e7597c411560d8a61052d",
    "709a814fe0153e86a37806796ea27c8252d9c6d1",
    "e3bb38d62567eafe57d16b78deeba1b71c58e41c"
  ],
  "changeHistoryShort": {
    "ce3d68e9c3512b6f370e7597c411560d8a61052d": "Ybodychange",
    "709a814fe0153e86a37806796ea27c8252d9c6d1": "Ybodychange",
    "e3bb38d62567eafe57d16b78deeba1b71c58e41c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ce3d68e9c3512b6f370e7597c411560d8a61052d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10676. Add namenode metric to measure time spent in generating EDEKs. Contributed by Hanisha Koneru.\n",
      "commitDate": "28/07/16 4:07 PM",
      "commitName": "ce3d68e9c3512b6f370e7597c411560d8a61052d",
      "commitAuthor": "Xiaoyu Yao",
      "commitDateOld": "13/06/16 11:50 AM",
      "commitNameOld": "709a814fe0153e86a37806796ea27c8252d9c6d1",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 45.18,
      "commitsBetweenForRepo": 429,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,48 +1,51 @@\n     public void run() {\n       NameNode.LOG.info(\"Warming up {} EDEKs... (initialDelay\u003d{}, \"\n           + \"retryInterval\u003d{})\", keyNames.length, initialDelay, retryInterval);\n       try {\n         Thread.sleep(initialDelay);\n       } catch (InterruptedException ie) {\n         NameNode.LOG.info(\"EDEKCacheLoader interrupted before warming up.\");\n         return;\n       }\n \n       final int logCoolDown \u003d 10000; // periodically print error log (if any)\n       int sinceLastLog \u003d logCoolDown; // always print the first failure\n       boolean success \u003d false;\n       IOException lastSeenIOE \u003d null;\n+      long warmUpEDEKStartTime \u003d monotonicNow();\n       while (true) {\n         try {\n           kp.warmUpEncryptedKeys(keyNames);\n           NameNode.LOG\n               .info(\"Successfully warmed up {} EDEKs.\", keyNames.length);\n           success \u003d true;\n           break;\n         } catch (IOException ioe) {\n           lastSeenIOE \u003d ioe;\n           if (sinceLastLog \u003e\u003d logCoolDown) {\n             NameNode.LOG.info(\"Failed to warm up EDEKs.\", ioe);\n             sinceLastLog \u003d 0;\n           } else {\n             NameNode.LOG.debug(\"Failed to warm up EDEKs.\", ioe);\n           }\n         } catch (Exception e) {\n           NameNode.LOG.error(\"Cannot warm up EDEKs.\", e);\n           throw e;\n         }\n         try {\n           Thread.sleep(retryInterval);\n         } catch (InterruptedException ie) {\n           NameNode.LOG.info(\"EDEKCacheLoader interrupted during retry.\");\n           break;\n         }\n         sinceLastLog +\u003d retryInterval;\n       }\n+      long warmUpEDEKTime \u003d monotonicNow() - warmUpEDEKStartTime;\n+      NameNode.getNameNodeMetrics().addWarmUpEDEKTime(warmUpEDEKTime);\n       if (!success) {\n         NameNode.LOG.warn(\"Unable to warm up EDEKs.\");\n         if (lastSeenIOE !\u003d null) {\n           NameNode.LOG.warn(\"Last seen exception:\", lastSeenIOE);\n         }\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      NameNode.LOG.info(\"Warming up {} EDEKs... (initialDelay\u003d{}, \"\n          + \"retryInterval\u003d{})\", keyNames.length, initialDelay, retryInterval);\n      try {\n        Thread.sleep(initialDelay);\n      } catch (InterruptedException ie) {\n        NameNode.LOG.info(\"EDEKCacheLoader interrupted before warming up.\");\n        return;\n      }\n\n      final int logCoolDown \u003d 10000; // periodically print error log (if any)\n      int sinceLastLog \u003d logCoolDown; // always print the first failure\n      boolean success \u003d false;\n      IOException lastSeenIOE \u003d null;\n      long warmUpEDEKStartTime \u003d monotonicNow();\n      while (true) {\n        try {\n          kp.warmUpEncryptedKeys(keyNames);\n          NameNode.LOG\n              .info(\"Successfully warmed up {} EDEKs.\", keyNames.length);\n          success \u003d true;\n          break;\n        } catch (IOException ioe) {\n          lastSeenIOE \u003d ioe;\n          if (sinceLastLog \u003e\u003d logCoolDown) {\n            NameNode.LOG.info(\"Failed to warm up EDEKs.\", ioe);\n            sinceLastLog \u003d 0;\n          } else {\n            NameNode.LOG.debug(\"Failed to warm up EDEKs.\", ioe);\n          }\n        } catch (Exception e) {\n          NameNode.LOG.error(\"Cannot warm up EDEKs.\", e);\n          throw e;\n        }\n        try {\n          Thread.sleep(retryInterval);\n        } catch (InterruptedException ie) {\n          NameNode.LOG.info(\"EDEKCacheLoader interrupted during retry.\");\n          break;\n        }\n        sinceLastLog +\u003d retryInterval;\n      }\n      long warmUpEDEKTime \u003d monotonicNow() - warmUpEDEKStartTime;\n      NameNode.getNameNodeMetrics().addWarmUpEDEKTime(warmUpEDEKTime);\n      if (!success) {\n        NameNode.LOG.warn(\"Unable to warm up EDEKs.\");\n        if (lastSeenIOE !\u003d null) {\n          NameNode.LOG.warn(\"Last seen exception:\", lastSeenIOE);\n        }\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirEncryptionZoneOp.java",
      "extendedDetails": {}
    },
    "709a814fe0153e86a37806796ea27c8252d9c6d1": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10516. Fix bug when warming up EDEK cache of more than one encryption zone. Contributed by Xiao Chen.\n",
      "commitDate": "13/06/16 11:50 AM",
      "commitName": "709a814fe0153e86a37806796ea27c8252d9c6d1",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "06/06/16 3:52 PM",
      "commitNameOld": "6de9213df111a9a4ed875db995d67af72d08a798",
      "commitAuthorOld": "Zhe Zhang",
      "daysBetweenCommits": 6.83,
      "commitsBetweenForRepo": 40,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,45 +1,48 @@\n     public void run() {\n       NameNode.LOG.info(\"Warming up {} EDEKs... (initialDelay\u003d{}, \"\n           + \"retryInterval\u003d{})\", keyNames.length, initialDelay, retryInterval);\n       try {\n         Thread.sleep(initialDelay);\n       } catch (InterruptedException ie) {\n         NameNode.LOG.info(\"EDEKCacheLoader interrupted before warming up.\");\n         return;\n       }\n \n       final int logCoolDown \u003d 10000; // periodically print error log (if any)\n       int sinceLastLog \u003d logCoolDown; // always print the first failure\n       boolean success \u003d false;\n       IOException lastSeenIOE \u003d null;\n       while (true) {\n         try {\n           kp.warmUpEncryptedKeys(keyNames);\n           NameNode.LOG\n               .info(\"Successfully warmed up {} EDEKs.\", keyNames.length);\n           success \u003d true;\n           break;\n         } catch (IOException ioe) {\n           lastSeenIOE \u003d ioe;\n           if (sinceLastLog \u003e\u003d logCoolDown) {\n             NameNode.LOG.info(\"Failed to warm up EDEKs.\", ioe);\n             sinceLastLog \u003d 0;\n           } else {\n             NameNode.LOG.debug(\"Failed to warm up EDEKs.\", ioe);\n           }\n+        } catch (Exception e) {\n+          NameNode.LOG.error(\"Cannot warm up EDEKs.\", e);\n+          throw e;\n         }\n         try {\n           Thread.sleep(retryInterval);\n         } catch (InterruptedException ie) {\n           NameNode.LOG.info(\"EDEKCacheLoader interrupted during retry.\");\n           break;\n         }\n         sinceLastLog +\u003d retryInterval;\n       }\n       if (!success) {\n         NameNode.LOG.warn(\"Unable to warm up EDEKs.\");\n         if (lastSeenIOE !\u003d null) {\n           NameNode.LOG.warn(\"Last seen exception:\", lastSeenIOE);\n         }\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      NameNode.LOG.info(\"Warming up {} EDEKs... (initialDelay\u003d{}, \"\n          + \"retryInterval\u003d{})\", keyNames.length, initialDelay, retryInterval);\n      try {\n        Thread.sleep(initialDelay);\n      } catch (InterruptedException ie) {\n        NameNode.LOG.info(\"EDEKCacheLoader interrupted before warming up.\");\n        return;\n      }\n\n      final int logCoolDown \u003d 10000; // periodically print error log (if any)\n      int sinceLastLog \u003d logCoolDown; // always print the first failure\n      boolean success \u003d false;\n      IOException lastSeenIOE \u003d null;\n      while (true) {\n        try {\n          kp.warmUpEncryptedKeys(keyNames);\n          NameNode.LOG\n              .info(\"Successfully warmed up {} EDEKs.\", keyNames.length);\n          success \u003d true;\n          break;\n        } catch (IOException ioe) {\n          lastSeenIOE \u003d ioe;\n          if (sinceLastLog \u003e\u003d logCoolDown) {\n            NameNode.LOG.info(\"Failed to warm up EDEKs.\", ioe);\n            sinceLastLog \u003d 0;\n          } else {\n            NameNode.LOG.debug(\"Failed to warm up EDEKs.\", ioe);\n          }\n        } catch (Exception e) {\n          NameNode.LOG.error(\"Cannot warm up EDEKs.\", e);\n          throw e;\n        }\n        try {\n          Thread.sleep(retryInterval);\n        } catch (InterruptedException ie) {\n          NameNode.LOG.info(\"EDEKCacheLoader interrupted during retry.\");\n          break;\n        }\n        sinceLastLog +\u003d retryInterval;\n      }\n      if (!success) {\n        NameNode.LOG.warn(\"Unable to warm up EDEKs.\");\n        if (lastSeenIOE !\u003d null) {\n          NameNode.LOG.warn(\"Last seen exception:\", lastSeenIOE);\n        }\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirEncryptionZoneOp.java",
      "extendedDetails": {}
    },
    "e3bb38d62567eafe57d16b78deeba1b71c58e41c": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-9405. Warmup NameNode EDEK caches in background thread. Contributed by Xiao Chen.\n",
      "commitDate": "21/03/16 11:39 AM",
      "commitName": "e3bb38d62567eafe57d16b78deeba1b71c58e41c",
      "commitAuthor": "Andrew Wang",
      "diff": "@@ -0,0 +1,45 @@\n+    public void run() {\n+      NameNode.LOG.info(\"Warming up {} EDEKs... (initialDelay\u003d{}, \"\n+          + \"retryInterval\u003d{})\", keyNames.length, initialDelay, retryInterval);\n+      try {\n+        Thread.sleep(initialDelay);\n+      } catch (InterruptedException ie) {\n+        NameNode.LOG.info(\"EDEKCacheLoader interrupted before warming up.\");\n+        return;\n+      }\n+\n+      final int logCoolDown \u003d 10000; // periodically print error log (if any)\n+      int sinceLastLog \u003d logCoolDown; // always print the first failure\n+      boolean success \u003d false;\n+      IOException lastSeenIOE \u003d null;\n+      while (true) {\n+        try {\n+          kp.warmUpEncryptedKeys(keyNames);\n+          NameNode.LOG\n+              .info(\"Successfully warmed up {} EDEKs.\", keyNames.length);\n+          success \u003d true;\n+          break;\n+        } catch (IOException ioe) {\n+          lastSeenIOE \u003d ioe;\n+          if (sinceLastLog \u003e\u003d logCoolDown) {\n+            NameNode.LOG.info(\"Failed to warm up EDEKs.\", ioe);\n+            sinceLastLog \u003d 0;\n+          } else {\n+            NameNode.LOG.debug(\"Failed to warm up EDEKs.\", ioe);\n+          }\n+        }\n+        try {\n+          Thread.sleep(retryInterval);\n+        } catch (InterruptedException ie) {\n+          NameNode.LOG.info(\"EDEKCacheLoader interrupted during retry.\");\n+          break;\n+        }\n+        sinceLastLog +\u003d retryInterval;\n+      }\n+      if (!success) {\n+        NameNode.LOG.warn(\"Unable to warm up EDEKs.\");\n+        if (lastSeenIOE !\u003d null) {\n+          NameNode.LOG.warn(\"Last seen exception:\", lastSeenIOE);\n+        }\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      NameNode.LOG.info(\"Warming up {} EDEKs... (initialDelay\u003d{}, \"\n          + \"retryInterval\u003d{})\", keyNames.length, initialDelay, retryInterval);\n      try {\n        Thread.sleep(initialDelay);\n      } catch (InterruptedException ie) {\n        NameNode.LOG.info(\"EDEKCacheLoader interrupted before warming up.\");\n        return;\n      }\n\n      final int logCoolDown \u003d 10000; // periodically print error log (if any)\n      int sinceLastLog \u003d logCoolDown; // always print the first failure\n      boolean success \u003d false;\n      IOException lastSeenIOE \u003d null;\n      while (true) {\n        try {\n          kp.warmUpEncryptedKeys(keyNames);\n          NameNode.LOG\n              .info(\"Successfully warmed up {} EDEKs.\", keyNames.length);\n          success \u003d true;\n          break;\n        } catch (IOException ioe) {\n          lastSeenIOE \u003d ioe;\n          if (sinceLastLog \u003e\u003d logCoolDown) {\n            NameNode.LOG.info(\"Failed to warm up EDEKs.\", ioe);\n            sinceLastLog \u003d 0;\n          } else {\n            NameNode.LOG.debug(\"Failed to warm up EDEKs.\", ioe);\n          }\n        }\n        try {\n          Thread.sleep(retryInterval);\n        } catch (InterruptedException ie) {\n          NameNode.LOG.info(\"EDEKCacheLoader interrupted during retry.\");\n          break;\n        }\n        sinceLastLog +\u003d retryInterval;\n      }\n      if (!success) {\n        NameNode.LOG.warn(\"Unable to warm up EDEKs.\");\n        if (lastSeenIOE !\u003d null) {\n          NameNode.LOG.warn(\"Last seen exception:\", lastSeenIOE);\n        }\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirEncryptionZoneOp.java"
    }
  }
}