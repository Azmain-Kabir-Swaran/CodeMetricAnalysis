{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TaskAttemptImpl.java",
  "functionName": "createJobCounterUpdateEventTAKilled",
  "functionId": "createJobCounterUpdateEventTAKilled___taskAttempt-TaskAttemptImpl__taskAlreadyCompleted-boolean",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java",
  "functionStartLine": 1668,
  "functionEndLine": 1682,
  "numCommitsSeen": 146,
  "timeTaken": 2850,
  "changeHistory": [
    "2a20fe8370c83c7472632871a396811b1e4d4463",
    "eff9fa1aad7e22d445a11e4ba732b4d49cdaca65",
    "d99c2958dd33fcbebee9208ab8388faa0725c699"
  ],
  "changeHistoryShort": {
    "2a20fe8370c83c7472632871a396811b1e4d4463": "Ybodychange",
    "eff9fa1aad7e22d445a11e4ba732b4d49cdaca65": "Ymultichange(Yparameterchange,Ybodychange)",
    "d99c2958dd33fcbebee9208ab8388faa0725c699": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2a20fe8370c83c7472632871a396811b1e4d4463": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5464. Add analogs of the SLOTS_MILLIS counters that jive with the YARN resource model (Sandy Ryza)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1562216 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/01/14 12:15 PM",
      "commitName": "2a20fe8370c83c7472632871a396811b1e4d4463",
      "commitAuthor": "Sanford Ryza",
      "commitDateOld": "28/12/13 1:58 PM",
      "commitNameOld": "47cca0cb6d1f4e5979d11d9a624b005e6e666f2f",
      "commitAuthorOld": "Christopher Douglas",
      "daysBetweenCommits": 30.93,
      "commitsBetweenForRepo": 150,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,15 @@\n   private static JobCounterUpdateEvent createJobCounterUpdateEventTAKilled(\n       TaskAttemptImpl taskAttempt, boolean taskAlreadyCompleted) {\n     TaskType taskType \u003d taskAttempt.getID().getTaskId().getTaskType();\n     JobCounterUpdateEvent jce \u003d new JobCounterUpdateEvent(taskAttempt.getID().getTaskId().getJobId());\n     \n-    long slotMillisIncrement \u003d computeSlotMillis(taskAttempt);\n-    \n     if (taskType \u003d\u003d TaskType.MAP) {\n       jce.addCounterUpdate(JobCounter.NUM_KILLED_MAPS, 1);\n-      if(!taskAlreadyCompleted) {\n-        // dont double count the elapsed time\n-        jce.addCounterUpdate(JobCounter.SLOTS_MILLIS_MAPS, slotMillisIncrement);\n-      }\n     } else {\n       jce.addCounterUpdate(JobCounter.NUM_KILLED_REDUCES, 1);\n-      if(!taskAlreadyCompleted) {\n-        // dont double count the elapsed time\n-        jce.addCounterUpdate(JobCounter.SLOTS_MILLIS_REDUCES, slotMillisIncrement);\n-      }\n+    }\n+    if (!taskAlreadyCompleted) {\n+      updateMillisCounters(jce, taskAttempt);\n     }\n     return jce;\n   }  \n\\ No newline at end of file\n",
      "actualSource": "  private static JobCounterUpdateEvent createJobCounterUpdateEventTAKilled(\n      TaskAttemptImpl taskAttempt, boolean taskAlreadyCompleted) {\n    TaskType taskType \u003d taskAttempt.getID().getTaskId().getTaskType();\n    JobCounterUpdateEvent jce \u003d new JobCounterUpdateEvent(taskAttempt.getID().getTaskId().getJobId());\n    \n    if (taskType \u003d\u003d TaskType.MAP) {\n      jce.addCounterUpdate(JobCounter.NUM_KILLED_MAPS, 1);\n    } else {\n      jce.addCounterUpdate(JobCounter.NUM_KILLED_REDUCES, 1);\n    }\n    if (!taskAlreadyCompleted) {\n      updateMillisCounters(jce, taskAttempt);\n    }\n    return jce;\n  }  ",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java",
      "extendedDetails": {}
    },
    "eff9fa1aad7e22d445a11e4ba732b4d49cdaca65": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "MAPREDUCE-3921. MR AM should act on node health status changes. Contributed by Bikas Saha.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1349065 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/06/12 4:14 PM",
      "commitName": "eff9fa1aad7e22d445a11e4ba732b4d49cdaca65",
      "commitAuthor": "Siddharth Seth",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "MAPREDUCE-3921. MR AM should act on node health status changes. Contributed by Bikas Saha.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1349065 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "11/06/12 4:14 PM",
          "commitName": "eff9fa1aad7e22d445a11e4ba732b4d49cdaca65",
          "commitAuthor": "Siddharth Seth",
          "commitDateOld": "30/05/12 7:48 AM",
          "commitNameOld": "0a80f82a304fc8bb3d9cf5ec016e12e6415270fc",
          "commitAuthorOld": "Robert Joseph Evans",
          "daysBetweenCommits": 12.35,
          "commitsBetweenForRepo": 56,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,22 @@\n   private static JobCounterUpdateEvent createJobCounterUpdateEventTAKilled(\n-      TaskAttemptImpl taskAttempt) {\n+      TaskAttemptImpl taskAttempt, boolean taskAlreadyCompleted) {\n     TaskType taskType \u003d taskAttempt.getID().getTaskId().getTaskType();\n     JobCounterUpdateEvent jce \u003d new JobCounterUpdateEvent(taskAttempt.getID().getTaskId().getJobId());\n     \n     long slotMillisIncrement \u003d computeSlotMillis(taskAttempt);\n     \n     if (taskType \u003d\u003d TaskType.MAP) {\n       jce.addCounterUpdate(JobCounter.NUM_KILLED_MAPS, 1);\n-      jce.addCounterUpdate(JobCounter.SLOTS_MILLIS_MAPS, slotMillisIncrement);\n+      if(!taskAlreadyCompleted) {\n+        // dont double count the elapsed time\n+        jce.addCounterUpdate(JobCounter.SLOTS_MILLIS_MAPS, slotMillisIncrement);\n+      }\n     } else {\n       jce.addCounterUpdate(JobCounter.NUM_KILLED_REDUCES, 1);\n-      jce.addCounterUpdate(JobCounter.SLOTS_MILLIS_REDUCES, slotMillisIncrement);\n+      if(!taskAlreadyCompleted) {\n+        // dont double count the elapsed time\n+        jce.addCounterUpdate(JobCounter.SLOTS_MILLIS_REDUCES, slotMillisIncrement);\n+      }\n     }\n     return jce;\n   }  \n\\ No newline at end of file\n",
          "actualSource": "  private static JobCounterUpdateEvent createJobCounterUpdateEventTAKilled(\n      TaskAttemptImpl taskAttempt, boolean taskAlreadyCompleted) {\n    TaskType taskType \u003d taskAttempt.getID().getTaskId().getTaskType();\n    JobCounterUpdateEvent jce \u003d new JobCounterUpdateEvent(taskAttempt.getID().getTaskId().getJobId());\n    \n    long slotMillisIncrement \u003d computeSlotMillis(taskAttempt);\n    \n    if (taskType \u003d\u003d TaskType.MAP) {\n      jce.addCounterUpdate(JobCounter.NUM_KILLED_MAPS, 1);\n      if(!taskAlreadyCompleted) {\n        // dont double count the elapsed time\n        jce.addCounterUpdate(JobCounter.SLOTS_MILLIS_MAPS, slotMillisIncrement);\n      }\n    } else {\n      jce.addCounterUpdate(JobCounter.NUM_KILLED_REDUCES, 1);\n      if(!taskAlreadyCompleted) {\n        // dont double count the elapsed time\n        jce.addCounterUpdate(JobCounter.SLOTS_MILLIS_REDUCES, slotMillisIncrement);\n      }\n    }\n    return jce;\n  }  ",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java",
          "extendedDetails": {
            "oldValue": "[taskAttempt-TaskAttemptImpl]",
            "newValue": "[taskAttempt-TaskAttemptImpl, taskAlreadyCompleted-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-3921. MR AM should act on node health status changes. Contributed by Bikas Saha.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1349065 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "11/06/12 4:14 PM",
          "commitName": "eff9fa1aad7e22d445a11e4ba732b4d49cdaca65",
          "commitAuthor": "Siddharth Seth",
          "commitDateOld": "30/05/12 7:48 AM",
          "commitNameOld": "0a80f82a304fc8bb3d9cf5ec016e12e6415270fc",
          "commitAuthorOld": "Robert Joseph Evans",
          "daysBetweenCommits": 12.35,
          "commitsBetweenForRepo": 56,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,22 @@\n   private static JobCounterUpdateEvent createJobCounterUpdateEventTAKilled(\n-      TaskAttemptImpl taskAttempt) {\n+      TaskAttemptImpl taskAttempt, boolean taskAlreadyCompleted) {\n     TaskType taskType \u003d taskAttempt.getID().getTaskId().getTaskType();\n     JobCounterUpdateEvent jce \u003d new JobCounterUpdateEvent(taskAttempt.getID().getTaskId().getJobId());\n     \n     long slotMillisIncrement \u003d computeSlotMillis(taskAttempt);\n     \n     if (taskType \u003d\u003d TaskType.MAP) {\n       jce.addCounterUpdate(JobCounter.NUM_KILLED_MAPS, 1);\n-      jce.addCounterUpdate(JobCounter.SLOTS_MILLIS_MAPS, slotMillisIncrement);\n+      if(!taskAlreadyCompleted) {\n+        // dont double count the elapsed time\n+        jce.addCounterUpdate(JobCounter.SLOTS_MILLIS_MAPS, slotMillisIncrement);\n+      }\n     } else {\n       jce.addCounterUpdate(JobCounter.NUM_KILLED_REDUCES, 1);\n-      jce.addCounterUpdate(JobCounter.SLOTS_MILLIS_REDUCES, slotMillisIncrement);\n+      if(!taskAlreadyCompleted) {\n+        // dont double count the elapsed time\n+        jce.addCounterUpdate(JobCounter.SLOTS_MILLIS_REDUCES, slotMillisIncrement);\n+      }\n     }\n     return jce;\n   }  \n\\ No newline at end of file\n",
          "actualSource": "  private static JobCounterUpdateEvent createJobCounterUpdateEventTAKilled(\n      TaskAttemptImpl taskAttempt, boolean taskAlreadyCompleted) {\n    TaskType taskType \u003d taskAttempt.getID().getTaskId().getTaskType();\n    JobCounterUpdateEvent jce \u003d new JobCounterUpdateEvent(taskAttempt.getID().getTaskId().getJobId());\n    \n    long slotMillisIncrement \u003d computeSlotMillis(taskAttempt);\n    \n    if (taskType \u003d\u003d TaskType.MAP) {\n      jce.addCounterUpdate(JobCounter.NUM_KILLED_MAPS, 1);\n      if(!taskAlreadyCompleted) {\n        // dont double count the elapsed time\n        jce.addCounterUpdate(JobCounter.SLOTS_MILLIS_MAPS, slotMillisIncrement);\n      }\n    } else {\n      jce.addCounterUpdate(JobCounter.NUM_KILLED_REDUCES, 1);\n      if(!taskAlreadyCompleted) {\n        // dont double count the elapsed time\n        jce.addCounterUpdate(JobCounter.SLOTS_MILLIS_REDUCES, slotMillisIncrement);\n      }\n    }\n    return jce;\n  }  ",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "d99c2958dd33fcbebee9208ab8388faa0725c699": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-3672. Killed maps shouldn\u0027t be counted towards JobCounter.NUM_FAILED_MAPS. (Anupam Seth via tgraves)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1309401 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/04/12 7:17 AM",
      "commitName": "d99c2958dd33fcbebee9208ab8388faa0725c699",
      "commitAuthor": "Thomas Graves",
      "diff": "@@ -0,0 +1,16 @@\n+  private static JobCounterUpdateEvent createJobCounterUpdateEventTAKilled(\n+      TaskAttemptImpl taskAttempt) {\n+    TaskType taskType \u003d taskAttempt.getID().getTaskId().getTaskType();\n+    JobCounterUpdateEvent jce \u003d new JobCounterUpdateEvent(taskAttempt.getID().getTaskId().getJobId());\n+    \n+    long slotMillisIncrement \u003d computeSlotMillis(taskAttempt);\n+    \n+    if (taskType \u003d\u003d TaskType.MAP) {\n+      jce.addCounterUpdate(JobCounter.NUM_KILLED_MAPS, 1);\n+      jce.addCounterUpdate(JobCounter.SLOTS_MILLIS_MAPS, slotMillisIncrement);\n+    } else {\n+      jce.addCounterUpdate(JobCounter.NUM_KILLED_REDUCES, 1);\n+      jce.addCounterUpdate(JobCounter.SLOTS_MILLIS_REDUCES, slotMillisIncrement);\n+    }\n+    return jce;\n+  }  \n\\ No newline at end of file\n",
      "actualSource": "  private static JobCounterUpdateEvent createJobCounterUpdateEventTAKilled(\n      TaskAttemptImpl taskAttempt) {\n    TaskType taskType \u003d taskAttempt.getID().getTaskId().getTaskType();\n    JobCounterUpdateEvent jce \u003d new JobCounterUpdateEvent(taskAttempt.getID().getTaskId().getJobId());\n    \n    long slotMillisIncrement \u003d computeSlotMillis(taskAttempt);\n    \n    if (taskType \u003d\u003d TaskType.MAP) {\n      jce.addCounterUpdate(JobCounter.NUM_KILLED_MAPS, 1);\n      jce.addCounterUpdate(JobCounter.SLOTS_MILLIS_MAPS, slotMillisIncrement);\n    } else {\n      jce.addCounterUpdate(JobCounter.NUM_KILLED_REDUCES, 1);\n      jce.addCounterUpdate(JobCounter.SLOTS_MILLIS_REDUCES, slotMillisIncrement);\n    }\n    return jce;\n  }  ",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java"
    }
  }
}