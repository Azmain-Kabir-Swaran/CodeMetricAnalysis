{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RouterWebServiceUtil.java",
  "functionName": "mergeAMWithUAM",
  "functionId": "mergeAMWithUAM___am-AppInfo__uam-AppInfo",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-router/src/main/java/org/apache/hadoop/yarn/server/router/webapp/RouterWebServiceUtil.java",
  "functionStartLine": 331,
  "functionEndLine": 359,
  "numCommitsSeen": 8,
  "timeTaken": 1123,
  "changeHistory": [
    "cc8893edc0b7960e958723c81062986c12f06ade"
  ],
  "changeHistoryShort": {
    "cc8893edc0b7960e958723c81062986c12f06ade": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cc8893edc0b7960e958723c81062986c12f06ade": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7010. Federation: routing REST invocations transparently to multiple RMs (part 2 - getApps). (Contributed by Giovanni Matteo Fumarola via curino)\n",
      "commitDate": "29/08/17 2:53 PM",
      "commitName": "cc8893edc0b7960e958723c81062986c12f06ade",
      "commitAuthor": "Carlo Curino",
      "diff": "@@ -0,0 +1,29 @@\n+  private static void mergeAMWithUAM(AppInfo am, AppInfo uam) {\n+    am.setPreemptedResourceMB(\n+        am.getPreemptedResourceMB() + uam.getPreemptedResourceMB());\n+    am.setPreemptedResourceVCores(\n+        am.getPreemptedResourceVCores() + uam.getPreemptedResourceVCores());\n+    am.setNumNonAMContainerPreempted(am.getNumNonAMContainerPreempted()\n+        + uam.getNumNonAMContainerPreempted());\n+    am.setNumAMContainerPreempted(\n+        am.getNumAMContainerPreempted() + uam.getNumAMContainerPreempted());\n+    am.setPreemptedMemorySeconds(\n+        am.getPreemptedMemorySeconds() + uam.getPreemptedMemorySeconds());\n+    am.setPreemptedVcoreSeconds(\n+        am.getPreemptedVcoreSeconds() + uam.getPreemptedVcoreSeconds());\n+\n+    if (am.getState() \u003d\u003d YarnApplicationState.RUNNING\n+        \u0026\u0026 uam.getState() \u003d\u003d am.getState()) {\n+\n+      am.getResourceRequests().addAll(uam.getResourceRequests());\n+\n+      am.setAllocatedMB(am.getAllocatedMB() + uam.getAllocatedMB());\n+      am.setAllocatedVCores(am.getAllocatedVCores() + uam.getAllocatedVCores());\n+      am.setReservedMB(am.getReservedMB() + uam.getReservedMB());\n+      am.setReservedVCores(am.getReservedVCores() + uam.getReservedMB());\n+      am.setRunningContainers(\n+          am.getRunningContainers() + uam.getRunningContainers());\n+      am.setMemorySeconds(am.getMemorySeconds() + uam.getMemorySeconds());\n+      am.setVcoreSeconds(am.getVcoreSeconds() + uam.getVcoreSeconds());\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static void mergeAMWithUAM(AppInfo am, AppInfo uam) {\n    am.setPreemptedResourceMB(\n        am.getPreemptedResourceMB() + uam.getPreemptedResourceMB());\n    am.setPreemptedResourceVCores(\n        am.getPreemptedResourceVCores() + uam.getPreemptedResourceVCores());\n    am.setNumNonAMContainerPreempted(am.getNumNonAMContainerPreempted()\n        + uam.getNumNonAMContainerPreempted());\n    am.setNumAMContainerPreempted(\n        am.getNumAMContainerPreempted() + uam.getNumAMContainerPreempted());\n    am.setPreemptedMemorySeconds(\n        am.getPreemptedMemorySeconds() + uam.getPreemptedMemorySeconds());\n    am.setPreemptedVcoreSeconds(\n        am.getPreemptedVcoreSeconds() + uam.getPreemptedVcoreSeconds());\n\n    if (am.getState() \u003d\u003d YarnApplicationState.RUNNING\n        \u0026\u0026 uam.getState() \u003d\u003d am.getState()) {\n\n      am.getResourceRequests().addAll(uam.getResourceRequests());\n\n      am.setAllocatedMB(am.getAllocatedMB() + uam.getAllocatedMB());\n      am.setAllocatedVCores(am.getAllocatedVCores() + uam.getAllocatedVCores());\n      am.setReservedMB(am.getReservedMB() + uam.getReservedMB());\n      am.setReservedVCores(am.getReservedVCores() + uam.getReservedMB());\n      am.setRunningContainers(\n          am.getRunningContainers() + uam.getRunningContainers());\n      am.setMemorySeconds(am.getMemorySeconds() + uam.getMemorySeconds());\n      am.setVcoreSeconds(am.getVcoreSeconds() + uam.getVcoreSeconds());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-router/src/main/java/org/apache/hadoop/yarn/server/router/webapp/RouterWebServiceUtil.java"
    }
  }
}