{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PlacementConstraintProcessor.java",
  "functionName": "allocate",
  "functionId": "allocate___appAttemptId-ApplicationAttemptId__request-AllocateRequest__response-AllocateResponse",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/constraint/processor/PlacementConstraintProcessor.java",
  "functionStartLine": 156,
  "functionEndLine": 173,
  "numCommitsSeen": 7,
  "timeTaken": 2376,
  "changeHistory": [
    "0b489e564ce5a50324a530e29c18aa8a75276c50",
    "38af23796971193fa529c3d08ffde8fcd6e607b6",
    "f9af15d659f59fd0cf564fe1ecc8e06c6429ba68"
  ],
  "changeHistoryShort": {
    "0b489e564ce5a50324a530e29c18aa8a75276c50": "Yfilerename",
    "38af23796971193fa529c3d08ffde8fcd6e607b6": "Ybodychange",
    "f9af15d659f59fd0cf564fe1ecc8e06c6429ba68": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0b489e564ce5a50324a530e29c18aa8a75276c50": {
      "type": "Yfilerename",
      "commitMessage": "YARN-7920. Simplify configuration for PlacementConstraints. Contributed by Wangda Tan.\n",
      "commitDate": "15/02/18 2:23 PM",
      "commitName": "0b489e564ce5a50324a530e29c18aa8a75276c50",
      "commitAuthor": "Konstantinos Karanasos",
      "commitDateOld": "15/02/18 1:32 PM",
      "commitNameOld": "47473952e56b0380147d42f4110ad03c2276c961",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void allocate(ApplicationAttemptId appAttemptId,\n      AllocateRequest request, AllocateResponse response) throws YarnException {\n    // Copy the scheduling request since we will clear it later after sending\n    // to dispatcher\n    List\u003cSchedulingRequest\u003e schedulingRequests \u003d\n        new ArrayList\u003c\u003e(request.getSchedulingRequests());\n    dispatchRequestsForPlacement(appAttemptId, schedulingRequests);\n    reDispatchRetryableRequests(appAttemptId);\n    schedulePlacedRequests(appAttemptId);\n\n    // Remove SchedulingRequest from AllocateRequest to avoid SchedulingRequest\n    // added to scheduler.\n    request.setSchedulingRequests(Collections.emptyList());\n\n    nextAMSProcessor.allocate(appAttemptId, request, response);\n\n    handleRejectedRequests(appAttemptId, response);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/constraint/processor/PlacementConstraintProcessor.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/constraint/processor/PlacementProcessor.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/constraint/processor/PlacementConstraintProcessor.java"
      }
    },
    "38af23796971193fa529c3d08ffde8fcd6e607b6": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6599. Support anti-affinity constraint via AppPlacementAllocator. (Wangda Tan via asuresh)\n",
      "commitDate": "31/01/18 1:30 AM",
      "commitName": "38af23796971193fa529c3d08ffde8fcd6e607b6",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "31/01/18 1:30 AM",
      "commitNameOld": "a52d11fb8c103f14e42692600a058ba3b56e2ecf",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,18 @@\n   public void allocate(ApplicationAttemptId appAttemptId,\n       AllocateRequest request, AllocateResponse response) throws YarnException {\n+    // Copy the scheduling request since we will clear it later after sending\n+    // to dispatcher\n     List\u003cSchedulingRequest\u003e schedulingRequests \u003d\n-        request.getSchedulingRequests();\n+        new ArrayList\u003c\u003e(request.getSchedulingRequests());\n     dispatchRequestsForPlacement(appAttemptId, schedulingRequests);\n     reDispatchRetryableRequests(appAttemptId);\n     schedulePlacedRequests(appAttemptId);\n \n+    // Remove SchedulingRequest from AllocateRequest to avoid SchedulingRequest\n+    // added to scheduler.\n+    request.setSchedulingRequests(Collections.emptyList());\n+\n     nextAMSProcessor.allocate(appAttemptId, request, response);\n \n     handleRejectedRequests(appAttemptId, response);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void allocate(ApplicationAttemptId appAttemptId,\n      AllocateRequest request, AllocateResponse response) throws YarnException {\n    // Copy the scheduling request since we will clear it later after sending\n    // to dispatcher\n    List\u003cSchedulingRequest\u003e schedulingRequests \u003d\n        new ArrayList\u003c\u003e(request.getSchedulingRequests());\n    dispatchRequestsForPlacement(appAttemptId, schedulingRequests);\n    reDispatchRetryableRequests(appAttemptId);\n    schedulePlacedRequests(appAttemptId);\n\n    // Remove SchedulingRequest from AllocateRequest to avoid SchedulingRequest\n    // added to scheduler.\n    request.setSchedulingRequests(Collections.emptyList());\n\n    nextAMSProcessor.allocate(appAttemptId, request, response);\n\n    handleRejectedRequests(appAttemptId, response);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/constraint/processor/PlacementProcessor.java",
      "extendedDetails": {}
    },
    "f9af15d659f59fd0cf564fe1ecc8e06c6429ba68": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7612. Add Processor Framework for Rich Placement Constraints. (asuresh)\n",
      "commitDate": "31/01/18 1:30 AM",
      "commitName": "f9af15d659f59fd0cf564fe1ecc8e06c6429ba68",
      "commitAuthor": "Arun Suresh",
      "diff": "@@ -0,0 +1,12 @@\n+  public void allocate(ApplicationAttemptId appAttemptId,\n+      AllocateRequest request, AllocateResponse response) throws YarnException {\n+    List\u003cSchedulingRequest\u003e schedulingRequests \u003d\n+        request.getSchedulingRequests();\n+    dispatchRequestsForPlacement(appAttemptId, schedulingRequests);\n+    reDispatchRetryableRequests(appAttemptId);\n+    schedulePlacedRequests(appAttemptId);\n+\n+    nextAMSProcessor.allocate(appAttemptId, request, response);\n+\n+    handleRejectedRequests(appAttemptId, response);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void allocate(ApplicationAttemptId appAttemptId,\n      AllocateRequest request, AllocateResponse response) throws YarnException {\n    List\u003cSchedulingRequest\u003e schedulingRequests \u003d\n        request.getSchedulingRequests();\n    dispatchRequestsForPlacement(appAttemptId, schedulingRequests);\n    reDispatchRetryableRequests(appAttemptId);\n    schedulePlacedRequests(appAttemptId);\n\n    nextAMSProcessor.allocate(appAttemptId, request, response);\n\n    handleRejectedRequests(appAttemptId, response);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/constraint/processor/PlacementProcessor.java"
    }
  }
}