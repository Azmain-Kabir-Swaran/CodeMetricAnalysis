{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AllocateResponse.java",
  "functionName": "newInstance",
  "functionId": "newInstance___responseId-int__completedContainers-List__ContainerStatus____allocatedContainers-List__Container____updatedNodes-List__NodeReport____availResources-Resource__command-AMCommand__numClusterNodes-int__preempt-PreemptionMessage__nmTokens-List__NMToken____amRMToken-Token__updatedContainers-List__UpdatedContainer____collectorInfo-CollectorInfo",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse.java",
  "functionStartLine": 134,
  "functionEndLine": 148,
  "numCommitsSeen": 87,
  "timeTaken": 5450,
  "changeHistory": [
    "7594d1de7bbc34cd2e64202095a5e1757154d7d0",
    "ede1a473f5061cf40f6affc1c8c30a645c1fef6c",
    "d6d9cff21b7b6141ed88359652cf22e8973c0661",
    "2188a07e5bea1da26bf679ca0ece26ab596d3438",
    "9b5636408005676ae580f8d929f8e912c27828e7"
  ],
  "changeHistoryShort": {
    "7594d1de7bbc34cd2e64202095a5e1757154d7d0": "Ymultichange(Yparameterchange,Ybodychange)",
    "ede1a473f5061cf40f6affc1c8c30a645c1fef6c": "Ybodychange",
    "d6d9cff21b7b6141ed88359652cf22e8973c0661": "Ymultichange(Yparameterchange,Ybodychange)",
    "2188a07e5bea1da26bf679ca0ece26ab596d3438": "Ymultichange(Yparameterchange,Ybodychange)",
    "9b5636408005676ae580f8d929f8e912c27828e7": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7594d1de7bbc34cd2e64202095a5e1757154d7d0": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-6130. [ATSv2 Security] Generate a delegation token for AM when app collector is created and pass it to AM via NM and RM. Contributed by Varun Saxena.\n",
      "commitDate": "29/08/17 10:59 PM",
      "commitName": "7594d1de7bbc34cd2e64202095a5e1757154d7d0",
      "commitAuthor": "Rohith Sharma K S",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-6130. [ATSv2 Security] Generate a delegation token for AM when app collector is created and pass it to AM via NM and RM. Contributed by Varun Saxena.\n",
          "commitDate": "29/08/17 10:59 PM",
          "commitName": "7594d1de7bbc34cd2e64202095a5e1757154d7d0",
          "commitAuthor": "Rohith Sharma K S",
          "commitDateOld": "11/11/16 1:34 PM",
          "commitNameOld": "ede1a473f5061cf40f6affc1c8c30a645c1fef6c",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 291.35,
          "commitsBetweenForRepo": 1649,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,15 @@\n   public static AllocateResponse newInstance(int responseId,\n       List\u003cContainerStatus\u003e completedContainers,\n       List\u003cContainer\u003e allocatedContainers, List\u003cNodeReport\u003e updatedNodes,\n       Resource availResources, AMCommand command, int numClusterNodes,\n       PreemptionMessage preempt, List\u003cNMToken\u003e nmTokens, Token amRMToken,\n-      List\u003cUpdatedContainer\u003e updatedContainers, String collectorAddr) {\n+      List\u003cUpdatedContainer\u003e updatedContainers, CollectorInfo collectorInfo) {\n     return AllocateResponse.newBuilder().numClusterNodes(numClusterNodes)\n         .responseId(responseId)\n         .completedContainersStatuses(completedContainers)\n         .allocatedContainers(allocatedContainers).updatedNodes(updatedNodes)\n         .availableResources(availResources).amCommand(command)\n         .preemptionMessage(preempt).nmTokens(nmTokens)\n         .updatedContainers(updatedContainers).amRmToken(amRMToken)\n-        .collectorAddr(collectorAddr).build();\n+        .collectorInfo(collectorInfo).build();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static AllocateResponse newInstance(int responseId,\n      List\u003cContainerStatus\u003e completedContainers,\n      List\u003cContainer\u003e allocatedContainers, List\u003cNodeReport\u003e updatedNodes,\n      Resource availResources, AMCommand command, int numClusterNodes,\n      PreemptionMessage preempt, List\u003cNMToken\u003e nmTokens, Token amRMToken,\n      List\u003cUpdatedContainer\u003e updatedContainers, CollectorInfo collectorInfo) {\n    return AllocateResponse.newBuilder().numClusterNodes(numClusterNodes)\n        .responseId(responseId)\n        .completedContainersStatuses(completedContainers)\n        .allocatedContainers(allocatedContainers).updatedNodes(updatedNodes)\n        .availableResources(availResources).amCommand(command)\n        .preemptionMessage(preempt).nmTokens(nmTokens)\n        .updatedContainers(updatedContainers).amRmToken(amRMToken)\n        .collectorInfo(collectorInfo).build();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse.java",
          "extendedDetails": {
            "oldValue": "[responseId-int, completedContainers-List\u003cContainerStatus\u003e, allocatedContainers-List\u003cContainer\u003e, updatedNodes-List\u003cNodeReport\u003e, availResources-Resource, command-AMCommand, numClusterNodes-int, preempt-PreemptionMessage, nmTokens-List\u003cNMToken\u003e, amRMToken-Token, updatedContainers-List\u003cUpdatedContainer\u003e, collectorAddr-String]",
            "newValue": "[responseId-int, completedContainers-List\u003cContainerStatus\u003e, allocatedContainers-List\u003cContainer\u003e, updatedNodes-List\u003cNodeReport\u003e, availResources-Resource, command-AMCommand, numClusterNodes-int, preempt-PreemptionMessage, nmTokens-List\u003cNMToken\u003e, amRMToken-Token, updatedContainers-List\u003cUpdatedContainer\u003e, collectorInfo-CollectorInfo]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-6130. [ATSv2 Security] Generate a delegation token for AM when app collector is created and pass it to AM via NM and RM. Contributed by Varun Saxena.\n",
          "commitDate": "29/08/17 10:59 PM",
          "commitName": "7594d1de7bbc34cd2e64202095a5e1757154d7d0",
          "commitAuthor": "Rohith Sharma K S",
          "commitDateOld": "11/11/16 1:34 PM",
          "commitNameOld": "ede1a473f5061cf40f6affc1c8c30a645c1fef6c",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 291.35,
          "commitsBetweenForRepo": 1649,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,15 @@\n   public static AllocateResponse newInstance(int responseId,\n       List\u003cContainerStatus\u003e completedContainers,\n       List\u003cContainer\u003e allocatedContainers, List\u003cNodeReport\u003e updatedNodes,\n       Resource availResources, AMCommand command, int numClusterNodes,\n       PreemptionMessage preempt, List\u003cNMToken\u003e nmTokens, Token amRMToken,\n-      List\u003cUpdatedContainer\u003e updatedContainers, String collectorAddr) {\n+      List\u003cUpdatedContainer\u003e updatedContainers, CollectorInfo collectorInfo) {\n     return AllocateResponse.newBuilder().numClusterNodes(numClusterNodes)\n         .responseId(responseId)\n         .completedContainersStatuses(completedContainers)\n         .allocatedContainers(allocatedContainers).updatedNodes(updatedNodes)\n         .availableResources(availResources).amCommand(command)\n         .preemptionMessage(preempt).nmTokens(nmTokens)\n         .updatedContainers(updatedContainers).amRmToken(amRMToken)\n-        .collectorAddr(collectorAddr).build();\n+        .collectorInfo(collectorInfo).build();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static AllocateResponse newInstance(int responseId,\n      List\u003cContainerStatus\u003e completedContainers,\n      List\u003cContainer\u003e allocatedContainers, List\u003cNodeReport\u003e updatedNodes,\n      Resource availResources, AMCommand command, int numClusterNodes,\n      PreemptionMessage preempt, List\u003cNMToken\u003e nmTokens, Token amRMToken,\n      List\u003cUpdatedContainer\u003e updatedContainers, CollectorInfo collectorInfo) {\n    return AllocateResponse.newBuilder().numClusterNodes(numClusterNodes)\n        .responseId(responseId)\n        .completedContainersStatuses(completedContainers)\n        .allocatedContainers(allocatedContainers).updatedNodes(updatedNodes)\n        .availableResources(availResources).amCommand(command)\n        .preemptionMessage(preempt).nmTokens(nmTokens)\n        .updatedContainers(updatedContainers).amRmToken(amRMToken)\n        .collectorInfo(collectorInfo).build();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse.java",
          "extendedDetails": {}
        }
      ]
    },
    "ede1a473f5061cf40f6affc1c8c30a645c1fef6c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5552. Add Builder methods for common yarn API records. (Tao Jie via wangda)\n",
      "commitDate": "11/11/16 1:34 PM",
      "commitName": "ede1a473f5061cf40f6affc1c8c30a645c1fef6c",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "30/08/16 3:52 PM",
      "commitNameOld": "d6d9cff21b7b6141ed88359652cf22e8973c0661",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 72.95,
      "commitsBetweenForRepo": 568,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,15 @@\n   public static AllocateResponse newInstance(int responseId,\n       List\u003cContainerStatus\u003e completedContainers,\n       List\u003cContainer\u003e allocatedContainers, List\u003cNodeReport\u003e updatedNodes,\n       Resource availResources, AMCommand command, int numClusterNodes,\n       PreemptionMessage preempt, List\u003cNMToken\u003e nmTokens, Token amRMToken,\n       List\u003cUpdatedContainer\u003e updatedContainers, String collectorAddr) {\n-    AllocateResponse response \u003d\n-        newInstance(responseId, completedContainers, allocatedContainers,\n-          updatedNodes, availResources, command, numClusterNodes, preempt,\n-          nmTokens, updatedContainers);\n-    response.setAMRMToken(amRMToken);\n-    response.setCollectorAddr(collectorAddr);\n-    return response;\n+    return AllocateResponse.newBuilder().numClusterNodes(numClusterNodes)\n+        .responseId(responseId)\n+        .completedContainersStatuses(completedContainers)\n+        .allocatedContainers(allocatedContainers).updatedNodes(updatedNodes)\n+        .availableResources(availResources).amCommand(command)\n+        .preemptionMessage(preempt).nmTokens(nmTokens)\n+        .updatedContainers(updatedContainers).amRmToken(amRMToken)\n+        .collectorAddr(collectorAddr).build();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static AllocateResponse newInstance(int responseId,\n      List\u003cContainerStatus\u003e completedContainers,\n      List\u003cContainer\u003e allocatedContainers, List\u003cNodeReport\u003e updatedNodes,\n      Resource availResources, AMCommand command, int numClusterNodes,\n      PreemptionMessage preempt, List\u003cNMToken\u003e nmTokens, Token amRMToken,\n      List\u003cUpdatedContainer\u003e updatedContainers, String collectorAddr) {\n    return AllocateResponse.newBuilder().numClusterNodes(numClusterNodes)\n        .responseId(responseId)\n        .completedContainersStatuses(completedContainers)\n        .allocatedContainers(allocatedContainers).updatedNodes(updatedNodes)\n        .availableResources(availResources).amCommand(command)\n        .preemptionMessage(preempt).nmTokens(nmTokens)\n        .updatedContainers(updatedContainers).amRmToken(amRMToken)\n        .collectorAddr(collectorAddr).build();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse.java",
      "extendedDetails": {}
    },
    "d6d9cff21b7b6141ed88359652cf22e8973c0661": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-5221. Expose UpdateResourceRequest API to allow AM to request for change in container properties. (asuresh)\n",
      "commitDate": "30/08/16 3:52 PM",
      "commitName": "d6d9cff21b7b6141ed88359652cf22e8973c0661",
      "commitAuthor": "Arun Suresh",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-5221. Expose UpdateResourceRequest API to allow AM to request for change in container properties. (asuresh)\n",
          "commitDate": "30/08/16 3:52 PM",
          "commitName": "d6d9cff21b7b6141ed88359652cf22e8973c0661",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "05/08/16 3:57 AM",
          "commitNameOld": "4a26221021ec228a1726fd4905693473cd525796",
          "commitAuthorOld": "Varun Saxena",
          "daysBetweenCommits": 25.5,
          "commitsBetweenForRepo": 176,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,14 @@\n   public static AllocateResponse newInstance(int responseId,\n       List\u003cContainerStatus\u003e completedContainers,\n       List\u003cContainer\u003e allocatedContainers, List\u003cNodeReport\u003e updatedNodes,\n       Resource availResources, AMCommand command, int numClusterNodes,\n       PreemptionMessage preempt, List\u003cNMToken\u003e nmTokens, Token amRMToken,\n-      List\u003cContainer\u003e increasedContainers,\n-      List\u003cContainer\u003e decreasedContainers,\n-      String collectorAddr) {\n+      List\u003cUpdatedContainer\u003e updatedContainers, String collectorAddr) {\n     AllocateResponse response \u003d\n         newInstance(responseId, completedContainers, allocatedContainers,\n           updatedNodes, availResources, command, numClusterNodes, preempt,\n-          nmTokens, increasedContainers, decreasedContainers);\n+          nmTokens, updatedContainers);\n     response.setAMRMToken(amRMToken);\n     response.setCollectorAddr(collectorAddr);\n     return response;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static AllocateResponse newInstance(int responseId,\n      List\u003cContainerStatus\u003e completedContainers,\n      List\u003cContainer\u003e allocatedContainers, List\u003cNodeReport\u003e updatedNodes,\n      Resource availResources, AMCommand command, int numClusterNodes,\n      PreemptionMessage preempt, List\u003cNMToken\u003e nmTokens, Token amRMToken,\n      List\u003cUpdatedContainer\u003e updatedContainers, String collectorAddr) {\n    AllocateResponse response \u003d\n        newInstance(responseId, completedContainers, allocatedContainers,\n          updatedNodes, availResources, command, numClusterNodes, preempt,\n          nmTokens, updatedContainers);\n    response.setAMRMToken(amRMToken);\n    response.setCollectorAddr(collectorAddr);\n    return response;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse.java",
          "extendedDetails": {
            "oldValue": "[responseId-int, completedContainers-List\u003cContainerStatus\u003e, allocatedContainers-List\u003cContainer\u003e, updatedNodes-List\u003cNodeReport\u003e, availResources-Resource, command-AMCommand, numClusterNodes-int, preempt-PreemptionMessage, nmTokens-List\u003cNMToken\u003e, amRMToken-Token, increasedContainers-List\u003cContainer\u003e, decreasedContainers-List\u003cContainer\u003e, collectorAddr-String]",
            "newValue": "[responseId-int, completedContainers-List\u003cContainerStatus\u003e, allocatedContainers-List\u003cContainer\u003e, updatedNodes-List\u003cNodeReport\u003e, availResources-Resource, command-AMCommand, numClusterNodes-int, preempt-PreemptionMessage, nmTokens-List\u003cNMToken\u003e, amRMToken-Token, updatedContainers-List\u003cUpdatedContainer\u003e, collectorAddr-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-5221. Expose UpdateResourceRequest API to allow AM to request for change in container properties. (asuresh)\n",
          "commitDate": "30/08/16 3:52 PM",
          "commitName": "d6d9cff21b7b6141ed88359652cf22e8973c0661",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "05/08/16 3:57 AM",
          "commitNameOld": "4a26221021ec228a1726fd4905693473cd525796",
          "commitAuthorOld": "Varun Saxena",
          "daysBetweenCommits": 25.5,
          "commitsBetweenForRepo": 176,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,14 @@\n   public static AllocateResponse newInstance(int responseId,\n       List\u003cContainerStatus\u003e completedContainers,\n       List\u003cContainer\u003e allocatedContainers, List\u003cNodeReport\u003e updatedNodes,\n       Resource availResources, AMCommand command, int numClusterNodes,\n       PreemptionMessage preempt, List\u003cNMToken\u003e nmTokens, Token amRMToken,\n-      List\u003cContainer\u003e increasedContainers,\n-      List\u003cContainer\u003e decreasedContainers,\n-      String collectorAddr) {\n+      List\u003cUpdatedContainer\u003e updatedContainers, String collectorAddr) {\n     AllocateResponse response \u003d\n         newInstance(responseId, completedContainers, allocatedContainers,\n           updatedNodes, availResources, command, numClusterNodes, preempt,\n-          nmTokens, increasedContainers, decreasedContainers);\n+          nmTokens, updatedContainers);\n     response.setAMRMToken(amRMToken);\n     response.setCollectorAddr(collectorAddr);\n     return response;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static AllocateResponse newInstance(int responseId,\n      List\u003cContainerStatus\u003e completedContainers,\n      List\u003cContainer\u003e allocatedContainers, List\u003cNodeReport\u003e updatedNodes,\n      Resource availResources, AMCommand command, int numClusterNodes,\n      PreemptionMessage preempt, List\u003cNMToken\u003e nmTokens, Token amRMToken,\n      List\u003cUpdatedContainer\u003e updatedContainers, String collectorAddr) {\n    AllocateResponse response \u003d\n        newInstance(responseId, completedContainers, allocatedContainers,\n          updatedNodes, availResources, command, numClusterNodes, preempt,\n          nmTokens, updatedContainers);\n    response.setAMRMToken(amRMToken);\n    response.setCollectorAddr(collectorAddr);\n    return response;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse.java",
          "extendedDetails": {}
        }
      ]
    },
    "2188a07e5bea1da26bf679ca0ece26ab596d3438": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-3333. Rename TimelineAggregator etc. to TimelineCollector. Contributed by Sangjin Lee\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "2188a07e5bea1da26bf679ca0ece26ab596d3438",
      "commitAuthor": "Junping Du",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-3333. Rename TimelineAggregator etc. to TimelineCollector. Contributed by Sangjin Lee\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "2188a07e5bea1da26bf679ca0ece26ab596d3438",
          "commitAuthor": "Junping Du",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "9b5636408005676ae580f8d929f8e912c27828e7",
          "commitAuthorOld": "Zhijie Shen",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,16 @@\n   public static AllocateResponse newInstance(int responseId,\n       List\u003cContainerStatus\u003e completedContainers,\n       List\u003cContainer\u003e allocatedContainers, List\u003cNodeReport\u003e updatedNodes,\n       Resource availResources, AMCommand command, int numClusterNodes,\n       PreemptionMessage preempt, List\u003cNMToken\u003e nmTokens, Token amRMToken,\n       List\u003cContainer\u003e increasedContainers,\n       List\u003cContainer\u003e decreasedContainers,\n-      String aggregatorAddr) {\n+      String collectorAddr) {\n     AllocateResponse response \u003d\n         newInstance(responseId, completedContainers, allocatedContainers,\n           updatedNodes, availResources, command, numClusterNodes, preempt,\n           nmTokens, increasedContainers, decreasedContainers);\n     response.setAMRMToken(amRMToken);\n-    response.setAggregatorAddr(aggregatorAddr);\n+    response.setCollectorAddr(collectorAddr);\n     return response;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static AllocateResponse newInstance(int responseId,\n      List\u003cContainerStatus\u003e completedContainers,\n      List\u003cContainer\u003e allocatedContainers, List\u003cNodeReport\u003e updatedNodes,\n      Resource availResources, AMCommand command, int numClusterNodes,\n      PreemptionMessage preempt, List\u003cNMToken\u003e nmTokens, Token amRMToken,\n      List\u003cContainer\u003e increasedContainers,\n      List\u003cContainer\u003e decreasedContainers,\n      String collectorAddr) {\n    AllocateResponse response \u003d\n        newInstance(responseId, completedContainers, allocatedContainers,\n          updatedNodes, availResources, command, numClusterNodes, preempt,\n          nmTokens, increasedContainers, decreasedContainers);\n    response.setAMRMToken(amRMToken);\n    response.setCollectorAddr(collectorAddr);\n    return response;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse.java",
          "extendedDetails": {
            "oldValue": "[responseId-int, completedContainers-List\u003cContainerStatus\u003e, allocatedContainers-List\u003cContainer\u003e, updatedNodes-List\u003cNodeReport\u003e, availResources-Resource, command-AMCommand, numClusterNodes-int, preempt-PreemptionMessage, nmTokens-List\u003cNMToken\u003e, amRMToken-Token, increasedContainers-List\u003cContainer\u003e, decreasedContainers-List\u003cContainer\u003e, aggregatorAddr-String]",
            "newValue": "[responseId-int, completedContainers-List\u003cContainerStatus\u003e, allocatedContainers-List\u003cContainer\u003e, updatedNodes-List\u003cNodeReport\u003e, availResources-Resource, command-AMCommand, numClusterNodes-int, preempt-PreemptionMessage, nmTokens-List\u003cNMToken\u003e, amRMToken-Token, increasedContainers-List\u003cContainer\u003e, decreasedContainers-List\u003cContainer\u003e, collectorAddr-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3333. Rename TimelineAggregator etc. to TimelineCollector. Contributed by Sangjin Lee\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "2188a07e5bea1da26bf679ca0ece26ab596d3438",
          "commitAuthor": "Junping Du",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "9b5636408005676ae580f8d929f8e912c27828e7",
          "commitAuthorOld": "Zhijie Shen",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,16 @@\n   public static AllocateResponse newInstance(int responseId,\n       List\u003cContainerStatus\u003e completedContainers,\n       List\u003cContainer\u003e allocatedContainers, List\u003cNodeReport\u003e updatedNodes,\n       Resource availResources, AMCommand command, int numClusterNodes,\n       PreemptionMessage preempt, List\u003cNMToken\u003e nmTokens, Token amRMToken,\n       List\u003cContainer\u003e increasedContainers,\n       List\u003cContainer\u003e decreasedContainers,\n-      String aggregatorAddr) {\n+      String collectorAddr) {\n     AllocateResponse response \u003d\n         newInstance(responseId, completedContainers, allocatedContainers,\n           updatedNodes, availResources, command, numClusterNodes, preempt,\n           nmTokens, increasedContainers, decreasedContainers);\n     response.setAMRMToken(amRMToken);\n-    response.setAggregatorAddr(aggregatorAddr);\n+    response.setCollectorAddr(collectorAddr);\n     return response;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static AllocateResponse newInstance(int responseId,\n      List\u003cContainerStatus\u003e completedContainers,\n      List\u003cContainer\u003e allocatedContainers, List\u003cNodeReport\u003e updatedNodes,\n      Resource availResources, AMCommand command, int numClusterNodes,\n      PreemptionMessage preempt, List\u003cNMToken\u003e nmTokens, Token amRMToken,\n      List\u003cContainer\u003e increasedContainers,\n      List\u003cContainer\u003e decreasedContainers,\n      String collectorAddr) {\n    AllocateResponse response \u003d\n        newInstance(responseId, completedContainers, allocatedContainers,\n          updatedNodes, availResources, command, numClusterNodes, preempt,\n          nmTokens, increasedContainers, decreasedContainers);\n    response.setAMRMToken(amRMToken);\n    response.setCollectorAddr(collectorAddr);\n    return response;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse.java",
          "extendedDetails": {}
        }
      ]
    },
    "9b5636408005676ae580f8d929f8e912c27828e7": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3039. Implemented the app-level timeline aggregator discovery service. Contributed by Junping Du.\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "9b5636408005676ae580f8d929f8e912c27828e7",
      "commitAuthor": "Zhijie Shen",
      "diff": "@@ -0,0 +1,16 @@\n+  public static AllocateResponse newInstance(int responseId,\n+      List\u003cContainerStatus\u003e completedContainers,\n+      List\u003cContainer\u003e allocatedContainers, List\u003cNodeReport\u003e updatedNodes,\n+      Resource availResources, AMCommand command, int numClusterNodes,\n+      PreemptionMessage preempt, List\u003cNMToken\u003e nmTokens, Token amRMToken,\n+      List\u003cContainer\u003e increasedContainers,\n+      List\u003cContainer\u003e decreasedContainers,\n+      String aggregatorAddr) {\n+    AllocateResponse response \u003d\n+        newInstance(responseId, completedContainers, allocatedContainers,\n+          updatedNodes, availResources, command, numClusterNodes, preempt,\n+          nmTokens, increasedContainers, decreasedContainers);\n+    response.setAMRMToken(amRMToken);\n+    response.setAggregatorAddr(aggregatorAddr);\n+    return response;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static AllocateResponse newInstance(int responseId,\n      List\u003cContainerStatus\u003e completedContainers,\n      List\u003cContainer\u003e allocatedContainers, List\u003cNodeReport\u003e updatedNodes,\n      Resource availResources, AMCommand command, int numClusterNodes,\n      PreemptionMessage preempt, List\u003cNMToken\u003e nmTokens, Token amRMToken,\n      List\u003cContainer\u003e increasedContainers,\n      List\u003cContainer\u003e decreasedContainers,\n      String aggregatorAddr) {\n    AllocateResponse response \u003d\n        newInstance(responseId, completedContainers, allocatedContainers,\n          updatedNodes, availResources, command, numClusterNodes, preempt,\n          nmTokens, increasedContainers, decreasedContainers);\n    response.setAMRMToken(amRMToken);\n    response.setAggregatorAddr(aggregatorAddr);\n    return response;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/AllocateResponse.java"
    }
  }
}