{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ServiceScheduler.java",
  "functionName": "terminateServiceIfDominantComponentFinished",
  "functionId": "terminateServiceIfDominantComponentFinished___component-Component",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/ServiceScheduler.java",
  "functionStartLine": 962,
  "functionEndLine": 989,
  "numCommitsSeen": 31,
  "timeTaken": 879,
  "changeHistory": [
    "824dfa3b099a09f18db6b0a3285eb4379ab72c2d"
  ],
  "changeHistoryShort": {
    "824dfa3b099a09f18db6b0a3285eb4379ab72c2d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "824dfa3b099a09f18db6b0a3285eb4379ab72c2d": {
      "type": "Yintroduced",
      "commitMessage": "YARN-8489.  Support \"dominant\" component concept in YARN service.\n            Contributed by Zac Zhou\n",
      "commitDate": "18/01/19 5:23 PM",
      "commitName": "824dfa3b099a09f18db6b0a3285eb4379ab72c2d",
      "commitAuthor": "Eric Yang",
      "diff": "@@ -0,0 +1,28 @@\n+  private boolean terminateServiceIfDominantComponentFinished(Component\n+      component) {\n+    boolean shouldTerminate \u003d false;\n+    boolean componentIsDominant \u003d component.getComponentSpec()\n+        .getConfiguration().getPropertyBool(\n+            CONTAINER_STATE_REPORT_AS_SERVICE_STATE, false);\n+    if (componentIsDominant) {\n+      ComponentRestartPolicy restartPolicy \u003d\n+          component.getRestartPolicyHandler();\n+      if (restartPolicy.shouldTerminate(component)) {\n+        shouldTerminate \u003d true;\n+        boolean isSucceeded \u003d restartPolicy.hasCompletedSuccessfully(component);\n+        org.apache.hadoop.yarn.service.api.records.ComponentState state\n+            \u003d isSucceeded ?\n+            org.apache.hadoop.yarn.service.api.records.ComponentState.SUCCEEDED\n+            : org.apache.hadoop.yarn.service.api.records.ComponentState.FAILED;\n+        LOG.info(\"{} Component state changed from {} to {}\",\n+            component.getName(), component.getComponentSpec().getState(),\n+            state);\n+        component.getComponentSpec().setState(state);\n+        LOG.info(\"Dominate component {} finished, exiting Service Master... \" +\n+                \", final status\u003d\" + (isSucceeded ? \"Succeeded\" : \"Failed\"),\n+            component.getName());\n+        terminateService(isSucceeded);\n+      }\n+    }\n+    return shouldTerminate;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean terminateServiceIfDominantComponentFinished(Component\n      component) {\n    boolean shouldTerminate \u003d false;\n    boolean componentIsDominant \u003d component.getComponentSpec()\n        .getConfiguration().getPropertyBool(\n            CONTAINER_STATE_REPORT_AS_SERVICE_STATE, false);\n    if (componentIsDominant) {\n      ComponentRestartPolicy restartPolicy \u003d\n          component.getRestartPolicyHandler();\n      if (restartPolicy.shouldTerminate(component)) {\n        shouldTerminate \u003d true;\n        boolean isSucceeded \u003d restartPolicy.hasCompletedSuccessfully(component);\n        org.apache.hadoop.yarn.service.api.records.ComponentState state\n            \u003d isSucceeded ?\n            org.apache.hadoop.yarn.service.api.records.ComponentState.SUCCEEDED\n            : org.apache.hadoop.yarn.service.api.records.ComponentState.FAILED;\n        LOG.info(\"{} Component state changed from {} to {}\",\n            component.getName(), component.getComponentSpec().getState(),\n            state);\n        component.getComponentSpec().setState(state);\n        LOG.info(\"Dominate component {} finished, exiting Service Master... \" +\n                \", final status\u003d\" + (isSucceeded ? \"Succeeded\" : \"Failed\"),\n            component.getName());\n        terminateService(isSucceeded);\n      }\n    }\n    return shouldTerminate;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/ServiceScheduler.java"
    }
  }
}