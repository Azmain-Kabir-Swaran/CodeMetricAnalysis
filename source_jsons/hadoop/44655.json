{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ApplicationCLI.java",
  "functionName": "updateApplicationTimeout",
  "functionId": "updateApplicationTimeout___applicationId-String__timeoutType-ApplicationTimeoutType__timeoutInSec-long",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/ApplicationCLI.java",
  "functionStartLine": 270,
  "functionEndLine": 295,
  "numCommitsSeen": 72,
  "timeTaken": 1856,
  "changeHistory": [
    "56d93d2e39ead89bb79c4f4096554820dc77e84b",
    "eb0a483ed07399c7a06ed9db4bfbec382de470da"
  ],
  "changeHistoryShort": {
    "56d93d2e39ead89bb79c4f4096554820dc77e84b": "Ybodychange",
    "eb0a483ed07399c7a06ed9db4bfbec382de470da": "Yintroduced"
  },
  "changeHistoryDetails": {
    "56d93d2e39ead89bb79c4f4096554820dc77e84b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6600. Introduce default and max lifetime of application at LeafQueue level. Contributed by Rohith Sharma K S.\n",
      "commitDate": "07/09/17 6:45 PM",
      "commitName": "56d93d2e39ead89bb79c4f4096554820dc77e84b",
      "commitAuthor": "Sunil G",
      "commitDateOld": "27/12/16 10:46 PM",
      "commitNameOld": "e297be74ed4c4334bf48dd01d3b10e302147041d",
      "commitAuthorOld": "Rohith Sharma K S",
      "daysBetweenCommits": 253.79,
      "commitsBetweenForRepo": 1483,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,26 @@\n   private void updateApplicationTimeout(String applicationId,\n       ApplicationTimeoutType timeoutType, long timeoutInSec)\n       throws YarnException, IOException {\n     ApplicationId appId \u003d ApplicationId.fromString(applicationId);\n     String newTimeout \u003d\n         Times.formatISO8601(System.currentTimeMillis() + timeoutInSec * 1000);\n     sysout.println(\"Updating timeout for given timeoutType: \"\n         + timeoutType.toString() + \" of an application \" + applicationId);\n     UpdateApplicationTimeoutsRequest request \u003d UpdateApplicationTimeoutsRequest\n         .newInstance(appId, Collections.singletonMap(timeoutType, newTimeout));\n-    client.updateApplicationTimeouts(request);\n+    UpdateApplicationTimeoutsResponse updateApplicationTimeouts \u003d\n+        client.updateApplicationTimeouts(request);\n+    String updatedTimeout \u003d\n+        updateApplicationTimeouts.getApplicationTimeouts().get(timeoutType);\n+\n+    if (timeoutType.equals(ApplicationTimeoutType.LIFETIME)\n+        \u0026\u0026 !newTimeout.equals(updatedTimeout)) {\n+      sysout.println(\"Updated lifetime of an application  \" + applicationId\n+          + \" to queue max/default lifetime.\" + \" New expiry time is \"\n+          + updatedTimeout);\n+      return;\n+    }\n     sysout.println(\n         \"Successfully updated \" + timeoutType.toString() + \" of an application \"\n-            + applicationId + \". New expiry time is \" + newTimeout);\n+            + applicationId + \". New expiry time is \" + updatedTimeout);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void updateApplicationTimeout(String applicationId,\n      ApplicationTimeoutType timeoutType, long timeoutInSec)\n      throws YarnException, IOException {\n    ApplicationId appId \u003d ApplicationId.fromString(applicationId);\n    String newTimeout \u003d\n        Times.formatISO8601(System.currentTimeMillis() + timeoutInSec * 1000);\n    sysout.println(\"Updating timeout for given timeoutType: \"\n        + timeoutType.toString() + \" of an application \" + applicationId);\n    UpdateApplicationTimeoutsRequest request \u003d UpdateApplicationTimeoutsRequest\n        .newInstance(appId, Collections.singletonMap(timeoutType, newTimeout));\n    UpdateApplicationTimeoutsResponse updateApplicationTimeouts \u003d\n        client.updateApplicationTimeouts(request);\n    String updatedTimeout \u003d\n        updateApplicationTimeouts.getApplicationTimeouts().get(timeoutType);\n\n    if (timeoutType.equals(ApplicationTimeoutType.LIFETIME)\n        \u0026\u0026 !newTimeout.equals(updatedTimeout)) {\n      sysout.println(\"Updated lifetime of an application  \" + applicationId\n          + \" to queue max/default lifetime.\" + \" New expiry time is \"\n          + updatedTimeout);\n      return;\n    }\n    sysout.println(\n        \"Successfully updated \" + timeoutType.toString() + \" of an application \"\n            + applicationId + \". New expiry time is \" + updatedTimeout);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/ApplicationCLI.java",
      "extendedDetails": {}
    },
    "eb0a483ed07399c7a06ed9db4bfbec382de470da": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4206. Add Application timeouts in Application report and CLI. Contributed by Rohith Sharma K S.\n",
      "commitDate": "24/11/16 4:48 AM",
      "commitName": "eb0a483ed07399c7a06ed9db4bfbec382de470da",
      "commitAuthor": "Sunil",
      "diff": "@@ -0,0 +1,15 @@\n+  private void updateApplicationTimeout(String applicationId,\n+      ApplicationTimeoutType timeoutType, long timeoutInSec)\n+      throws YarnException, IOException {\n+    ApplicationId appId \u003d ApplicationId.fromString(applicationId);\n+    String newTimeout \u003d\n+        Times.formatISO8601(System.currentTimeMillis() + timeoutInSec * 1000);\n+    sysout.println(\"Updating timeout for given timeoutType: \"\n+        + timeoutType.toString() + \" of an application \" + applicationId);\n+    UpdateApplicationTimeoutsRequest request \u003d UpdateApplicationTimeoutsRequest\n+        .newInstance(appId, Collections.singletonMap(timeoutType, newTimeout));\n+    client.updateApplicationTimeouts(request);\n+    sysout.println(\n+        \"Successfully updated \" + timeoutType.toString() + \" of an application \"\n+            + applicationId + \". New expiry time is \" + newTimeout);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void updateApplicationTimeout(String applicationId,\n      ApplicationTimeoutType timeoutType, long timeoutInSec)\n      throws YarnException, IOException {\n    ApplicationId appId \u003d ApplicationId.fromString(applicationId);\n    String newTimeout \u003d\n        Times.formatISO8601(System.currentTimeMillis() + timeoutInSec * 1000);\n    sysout.println(\"Updating timeout for given timeoutType: \"\n        + timeoutType.toString() + \" of an application \" + applicationId);\n    UpdateApplicationTimeoutsRequest request \u003d UpdateApplicationTimeoutsRequest\n        .newInstance(appId, Collections.singletonMap(timeoutType, newTimeout));\n    client.updateApplicationTimeouts(request);\n    sysout.println(\n        \"Successfully updated \" + timeoutType.toString() + \" of an application \"\n            + applicationId + \". New expiry time is \" + newTimeout);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/ApplicationCLI.java"
    }
  }
}