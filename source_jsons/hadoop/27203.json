{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TimelineStorageUtils.java",
  "functionName": "matchKeyValuesFilter",
  "functionId": "matchKeyValuesFilter___entity-TimelineEntity__keyValuesFilter-TimelineKeyValuesFilter__entityFiltersType-TimelineEntityFiltersType",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/common/TimelineStorageUtils.java",
  "functionStartLine": 58,
  "functionEndLine": 87,
  "numCommitsSeen": 12,
  "timeTaken": 1025,
  "changeHistory": [
    "c2efdc415a13496da43a9a8d13c73d88ca8565a1"
  ],
  "changeHistoryShort": {
    "c2efdc415a13496da43a9a8d13c73d88ca8565a1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c2efdc415a13496da43a9a8d13c73d88ca8565a1": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3863. Support complex filters in TimelineReader (Varun Saxena via sjlee)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "c2efdc415a13496da43a9a8d13c73d88ca8565a1",
      "commitAuthor": "Sangjin Lee",
      "diff": "@@ -0,0 +1,30 @@\n+  private static boolean matchKeyValuesFilter(TimelineEntity entity,\n+      TimelineKeyValuesFilter keyValuesFilter,\n+      TimelineEntityFiltersType entityFiltersType) {\n+    Map\u003cString, Set\u003cString\u003e\u003e relations \u003d null;\n+    if (entityFiltersType \u003d\u003d TimelineEntityFiltersType.IS_RELATED_TO) {\n+      relations \u003d entity.getIsRelatedToEntities();\n+    } else if (entityFiltersType \u003d\u003d TimelineEntityFiltersType.RELATES_TO) {\n+      relations \u003d entity.getRelatesToEntities();\n+    }\n+    if (relations \u003d\u003d null) {\n+      return false;\n+    }\n+    Set\u003cString\u003e ids \u003d relations.get(keyValuesFilter.getKey());\n+    if (ids \u003d\u003d null) {\n+      return false;\n+    }\n+    boolean matched \u003d false;\n+    for (Object id : keyValuesFilter.getValues()) {\n+      // Matches if id is found amongst the relationships for an entity and\n+      // filter\u0027s compare op is EQUAL.\n+      // If compare op is NOT_EQUAL, for a match to occur, id should not be\n+      // found amongst relationships for an entity.\n+      matched \u003d !(ids.contains(id) ^\n+          keyValuesFilter.getCompareOp() \u003d\u003d TimelineCompareOp.EQUAL);\n+      if (!matched) {\n+        return false;\n+      }\n+    }\n+    return true;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static boolean matchKeyValuesFilter(TimelineEntity entity,\n      TimelineKeyValuesFilter keyValuesFilter,\n      TimelineEntityFiltersType entityFiltersType) {\n    Map\u003cString, Set\u003cString\u003e\u003e relations \u003d null;\n    if (entityFiltersType \u003d\u003d TimelineEntityFiltersType.IS_RELATED_TO) {\n      relations \u003d entity.getIsRelatedToEntities();\n    } else if (entityFiltersType \u003d\u003d TimelineEntityFiltersType.RELATES_TO) {\n      relations \u003d entity.getRelatesToEntities();\n    }\n    if (relations \u003d\u003d null) {\n      return false;\n    }\n    Set\u003cString\u003e ids \u003d relations.get(keyValuesFilter.getKey());\n    if (ids \u003d\u003d null) {\n      return false;\n    }\n    boolean matched \u003d false;\n    for (Object id : keyValuesFilter.getValues()) {\n      // Matches if id is found amongst the relationships for an entity and\n      // filter\u0027s compare op is EQUAL.\n      // If compare op is NOT_EQUAL, for a match to occur, id should not be\n      // found amongst relationships for an entity.\n      matched \u003d !(ids.contains(id) ^\n          keyValuesFilter.getCompareOp() \u003d\u003d TimelineCompareOp.EQUAL);\n      if (!matched) {\n        return false;\n      }\n    }\n    return true;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/common/TimelineStorageUtils.java"
    }
  }
}