{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DirectoryScanner.java",
  "functionName": "reconcile",
  "functionId": "reconcile",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DirectoryScanner.java",
  "functionStartLine": 428,
  "functionEndLine": 453,
  "numCommitsSeen": 60,
  "timeTaken": 8944,
  "changeHistory": [
    "ecd461f940efcd8c75f4833cf09bc7a52cc0b559",
    "313b76f8e92643e3412a98dc73f83437729f3984",
    "57f737017465cccb0f6b5ab6e3130ef49a02d4c2",
    "b58a35f374a9a750fddc2fc92e7f7a7ae8a4d3a4",
    "1dc0adfac0ee4821c67366728c70be9b59477b0f",
    "b668eb91556b8c85c2b4925808ccb1f769031c20",
    "a317bd7b02c37bd57743bfad59593ec12f53f4ed",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "ecd461f940efcd8c75f4833cf09bc7a52cc0b559": "Ybodychange",
    "313b76f8e92643e3412a98dc73f83437729f3984": "Ybodychange",
    "57f737017465cccb0f6b5ab6e3130ef49a02d4c2": "Ybodychange",
    "b58a35f374a9a750fddc2fc92e7f7a7ae8a4d3a4": "Ybodychange",
    "1dc0adfac0ee4821c67366728c70be9b59477b0f": "Ybodychange",
    "b668eb91556b8c85c2b4925808ccb1f769031c20": "Ymultichange(Ymodifierchange,Ybodychange)",
    "a317bd7b02c37bd57743bfad59593ec12f53f4ed": "Yexceptionschange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ecd461f940efcd8c75f4833cf09bc7a52cc0b559": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14751. Synchronize on diffs in DirectoryScanner. Contributed by Lisheng Sun.\n",
      "commitDate": "06/12/19 3:10 PM",
      "commitName": "ecd461f940efcd8c75f4833cf09bc7a52cc0b559",
      "commitAuthor": "Wei-Chiu Chuang",
      "commitDateOld": "06/12/19 3:10 PM",
      "commitNameOld": "313b76f8e92643e3412a98dc73f83437729f3984",
      "commitAuthorOld": "Wei-Chiu Chuang",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,26 @@\n   public void reconcile() throws IOException {\n     LOG.debug(\"reconcile start DirectoryScanning\");\n     scan();\n \n     // HDFS-14476: run checkAndUpadte with batch to avoid holding the lock too\n     // long\n     int loopCount \u003d 0;\n-    for (final Map.Entry\u003cString, ScanInfo\u003e entry : diffs.getEntries()) {\n-      dataset.checkAndUpdate(entry.getKey(), entry.getValue());\n+    synchronized (diffs) {\n+      for (final Map.Entry\u003cString, ScanInfo\u003e entry : diffs.getEntries()) {\n+        dataset.checkAndUpdate(entry.getKey(), entry.getValue());\n \n-      if (loopCount % RECONCILE_BLOCKS_BATCH_SIZE \u003d\u003d 0) {\n-        try {\n-          Thread.sleep(2000);\n-        } catch (InterruptedException e) {\n-          // do nothing\n+        if (loopCount % RECONCILE_BLOCKS_BATCH_SIZE \u003d\u003d 0) {\n+          try {\n+            Thread.sleep(2000);\n+          } catch (InterruptedException e) {\n+            // do nothing\n+          }\n         }\n+        loopCount++;\n       }\n-      loopCount++;\n     }\n \n     if (!retainDiffs) {\n       clear();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void reconcile() throws IOException {\n    LOG.debug(\"reconcile start DirectoryScanning\");\n    scan();\n\n    // HDFS-14476: run checkAndUpadte with batch to avoid holding the lock too\n    // long\n    int loopCount \u003d 0;\n    synchronized (diffs) {\n      for (final Map.Entry\u003cString, ScanInfo\u003e entry : diffs.getEntries()) {\n        dataset.checkAndUpdate(entry.getKey(), entry.getValue());\n\n        if (loopCount % RECONCILE_BLOCKS_BATCH_SIZE \u003d\u003d 0) {\n          try {\n            Thread.sleep(2000);\n          } catch (InterruptedException e) {\n            // do nothing\n          }\n        }\n        loopCount++;\n      }\n    }\n\n    if (!retainDiffs) {\n      clear();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DirectoryScanner.java",
      "extendedDetails": {}
    },
    "313b76f8e92643e3412a98dc73f83437729f3984": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14476. lock too long when fix inconsistent blocks between disk and in-memory. Contributed by Sean Chow.\n",
      "commitDate": "06/12/19 3:10 PM",
      "commitName": "313b76f8e92643e3412a98dc73f83437729f3984",
      "commitAuthor": "Wei-Chiu Chuang",
      "commitDateOld": "21/08/19 8:59 AM",
      "commitNameOld": "57f737017465cccb0f6b5ab6e3130ef49a02d4c2",
      "commitAuthorOld": "Wei-Chiu Chuang",
      "daysBetweenCommits": 107.3,
      "commitsBetweenForRepo": 659,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,24 @@\n   public void reconcile() throws IOException {\n+    LOG.debug(\"reconcile start DirectoryScanning\");\n     scan();\n \n+    // HDFS-14476: run checkAndUpadte with batch to avoid holding the lock too\n+    // long\n+    int loopCount \u003d 0;\n     for (final Map.Entry\u003cString, ScanInfo\u003e entry : diffs.getEntries()) {\n       dataset.checkAndUpdate(entry.getKey(), entry.getValue());\n+\n+      if (loopCount % RECONCILE_BLOCKS_BATCH_SIZE \u003d\u003d 0) {\n+        try {\n+          Thread.sleep(2000);\n+        } catch (InterruptedException e) {\n+          // do nothing\n+        }\n+      }\n+      loopCount++;\n     }\n \n     if (!retainDiffs) {\n       clear();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void reconcile() throws IOException {\n    LOG.debug(\"reconcile start DirectoryScanning\");\n    scan();\n\n    // HDFS-14476: run checkAndUpadte with batch to avoid holding the lock too\n    // long\n    int loopCount \u003d 0;\n    for (final Map.Entry\u003cString, ScanInfo\u003e entry : diffs.getEntries()) {\n      dataset.checkAndUpdate(entry.getKey(), entry.getValue());\n\n      if (loopCount % RECONCILE_BLOCKS_BATCH_SIZE \u003d\u003d 0) {\n        try {\n          Thread.sleep(2000);\n        } catch (InterruptedException e) {\n          // do nothing\n        }\n      }\n      loopCount++;\n    }\n\n    if (!retainDiffs) {\n      clear();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DirectoryScanner.java",
      "extendedDetails": {}
    },
    "57f737017465cccb0f6b5ab6e3130ef49a02d4c2": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"HDFS-14476. lock too long when fix inconsistent blocks between disk and in-memory. Contributed by Sean Chow.\"\n\nThis reverts commit b58a35f374a9a750fddc2fc92e7f7a7ae8a4d3a4.\n",
      "commitDate": "21/08/19 8:59 AM",
      "commitName": "57f737017465cccb0f6b5ab6e3130ef49a02d4c2",
      "commitAuthor": "Wei-Chiu Chuang",
      "commitDateOld": "18/08/19 5:46 PM",
      "commitNameOld": "b58a35f374a9a750fddc2fc92e7f7a7ae8a4d3a4",
      "commitAuthorOld": "Wei-Chiu Chuang",
      "daysBetweenCommits": 2.63,
      "commitsBetweenForRepo": 26,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,11 @@\n   public void reconcile() throws IOException {\n-    LOG.debug(\"reconcile start DirectoryScanning\");\n     scan();\n \n-    // HDFS-14476: run checkAndUpadte with batch to avoid holding the lock too\n-    // long\n-    int loopCount \u003d 0;\n     for (final Map.Entry\u003cString, ScanInfo\u003e entry : diffs.getEntries()) {\n       dataset.checkAndUpdate(entry.getKey(), entry.getValue());\n-\n-      if (loopCount % RECONCILE_BLOCKS_BATCH_SIZE \u003d\u003d 0) {\n-        try {\n-          Thread.sleep(2000);\n-        } catch (InterruptedException e) {\n-          // do nothing\n-        }\n-      }\n-      loopCount++;\n     }\n \n     if (!retainDiffs) {\n       clear();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void reconcile() throws IOException {\n    scan();\n\n    for (final Map.Entry\u003cString, ScanInfo\u003e entry : diffs.getEntries()) {\n      dataset.checkAndUpdate(entry.getKey(), entry.getValue());\n    }\n\n    if (!retainDiffs) {\n      clear();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DirectoryScanner.java",
      "extendedDetails": {}
    },
    "b58a35f374a9a750fddc2fc92e7f7a7ae8a4d3a4": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14476. lock too long when fix inconsistent blocks between disk and in-memory. Contributed by Sean Chow.\n",
      "commitDate": "18/08/19 5:46 PM",
      "commitName": "b58a35f374a9a750fddc2fc92e7f7a7ae8a4d3a4",
      "commitAuthor": "Wei-Chiu Chuang",
      "commitDateOld": "30/10/18 10:43 PM",
      "commitNameOld": "fac9f91b2944cee641049fffcafa6b65e0cf68f2",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 291.79,
      "commitsBetweenForRepo": 2133,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,24 @@\n   public void reconcile() throws IOException {\n+    LOG.debug(\"reconcile start DirectoryScanning\");\n     scan();\n \n+    // HDFS-14476: run checkAndUpadte with batch to avoid holding the lock too\n+    // long\n+    int loopCount \u003d 0;\n     for (final Map.Entry\u003cString, ScanInfo\u003e entry : diffs.getEntries()) {\n       dataset.checkAndUpdate(entry.getKey(), entry.getValue());\n+\n+      if (loopCount % RECONCILE_BLOCKS_BATCH_SIZE \u003d\u003d 0) {\n+        try {\n+          Thread.sleep(2000);\n+        } catch (InterruptedException e) {\n+          // do nothing\n+        }\n+      }\n+      loopCount++;\n     }\n \n     if (!retainDiffs) {\n       clear();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void reconcile() throws IOException {\n    LOG.debug(\"reconcile start DirectoryScanning\");\n    scan();\n\n    // HDFS-14476: run checkAndUpadte with batch to avoid holding the lock too\n    // long\n    int loopCount \u003d 0;\n    for (final Map.Entry\u003cString, ScanInfo\u003e entry : diffs.getEntries()) {\n      dataset.checkAndUpdate(entry.getKey(), entry.getValue());\n\n      if (loopCount % RECONCILE_BLOCKS_BATCH_SIZE \u003d\u003d 0) {\n        try {\n          Thread.sleep(2000);\n        } catch (InterruptedException e) {\n          // do nothing\n        }\n      }\n      loopCount++;\n    }\n\n    if (!retainDiffs) {\n      clear();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DirectoryScanner.java",
      "extendedDetails": {}
    },
    "1dc0adfac0ee4821c67366728c70be9b59477b0f": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13947. Review of DirectoryScanner Class. Contributed by BELUGA BEHR.\n",
      "commitDate": "03/10/18 11:19 AM",
      "commitName": "1dc0adfac0ee4821c67366728c70be9b59477b0f",
      "commitAuthor": "Inigo Goiri",
      "commitDateOld": "06/09/18 2:48 PM",
      "commitNameOld": "eca1a4bfe952fc184fe90dde50bac9b0e5293568",
      "commitAuthorOld": "Giovanni Matteo Fumarola",
      "daysBetweenCommits": 26.86,
      "commitsBetweenForRepo": 283,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,11 @@\n   public void reconcile() throws IOException {\n     scan();\n-    for (Entry\u003cString, LinkedList\u003cScanInfo\u003e\u003e entry : diffs.entrySet()) {\n-      String bpid \u003d entry.getKey();\n-      LinkedList\u003cScanInfo\u003e diff \u003d entry.getValue();\n-      \n-      for (ScanInfo info : diff) {\n-        dataset.checkAndUpdate(bpid, info);\n-      }\n+\n+    for (final Map.Entry\u003cString, ScanInfo\u003e entry : diffs.getEntries()) {\n+      dataset.checkAndUpdate(entry.getKey(), entry.getValue());\n     }\n-    if (!retainDiffs) clear();\n+\n+    if (!retainDiffs) {\n+      clear();\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void reconcile() throws IOException {\n    scan();\n\n    for (final Map.Entry\u003cString, ScanInfo\u003e entry : diffs.getEntries()) {\n      dataset.checkAndUpdate(entry.getKey(), entry.getValue());\n    }\n\n    if (!retainDiffs) {\n      clear();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DirectoryScanner.java",
      "extendedDetails": {}
    },
    "b668eb91556b8c85c2b4925808ccb1f769031c20": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "HDFS-10675. Datanode support to read from external stores.\n",
      "commitDate": "15/12/17 5:51 PM",
      "commitName": "b668eb91556b8c85c2b4925808ccb1f769031c20",
      "commitAuthor": "Virajith Jalaparti",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-10675. Datanode support to read from external stores.\n",
          "commitDate": "15/12/17 5:51 PM",
          "commitName": "b668eb91556b8c85c2b4925808ccb1f769031c20",
          "commitAuthor": "Virajith Jalaparti",
          "commitDateOld": "25/08/17 10:41 AM",
          "commitNameOld": "4b2c442d4e34f4708fa2ca442208427ca10798c1",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 112.34,
          "commitsBetweenForRepo": 958,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,12 @@\n-  void reconcile() throws IOException {\n+  public void reconcile() throws IOException {\n     scan();\n     for (Entry\u003cString, LinkedList\u003cScanInfo\u003e\u003e entry : diffs.entrySet()) {\n       String bpid \u003d entry.getKey();\n       LinkedList\u003cScanInfo\u003e diff \u003d entry.getValue();\n       \n       for (ScanInfo info : diff) {\n-        dataset.checkAndUpdate(bpid, info.getBlockId(), info.getBlockFile(),\n-            info.getMetaFile(), info.getVolume());\n+        dataset.checkAndUpdate(bpid, info);\n       }\n     }\n     if (!retainDiffs) clear();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void reconcile() throws IOException {\n    scan();\n    for (Entry\u003cString, LinkedList\u003cScanInfo\u003e\u003e entry : diffs.entrySet()) {\n      String bpid \u003d entry.getKey();\n      LinkedList\u003cScanInfo\u003e diff \u003d entry.getValue();\n      \n      for (ScanInfo info : diff) {\n        dataset.checkAndUpdate(bpid, info);\n      }\n    }\n    if (!retainDiffs) clear();\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DirectoryScanner.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-10675. Datanode support to read from external stores.\n",
          "commitDate": "15/12/17 5:51 PM",
          "commitName": "b668eb91556b8c85c2b4925808ccb1f769031c20",
          "commitAuthor": "Virajith Jalaparti",
          "commitDateOld": "25/08/17 10:41 AM",
          "commitNameOld": "4b2c442d4e34f4708fa2ca442208427ca10798c1",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 112.34,
          "commitsBetweenForRepo": 958,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,12 @@\n-  void reconcile() throws IOException {\n+  public void reconcile() throws IOException {\n     scan();\n     for (Entry\u003cString, LinkedList\u003cScanInfo\u003e\u003e entry : diffs.entrySet()) {\n       String bpid \u003d entry.getKey();\n       LinkedList\u003cScanInfo\u003e diff \u003d entry.getValue();\n       \n       for (ScanInfo info : diff) {\n-        dataset.checkAndUpdate(bpid, info.getBlockId(), info.getBlockFile(),\n-            info.getMetaFile(), info.getVolume());\n+        dataset.checkAndUpdate(bpid, info);\n       }\n     }\n     if (!retainDiffs) clear();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void reconcile() throws IOException {\n    scan();\n    for (Entry\u003cString, LinkedList\u003cScanInfo\u003e\u003e entry : diffs.entrySet()) {\n      String bpid \u003d entry.getKey();\n      LinkedList\u003cScanInfo\u003e diff \u003d entry.getValue();\n      \n      for (ScanInfo info : diff) {\n        dataset.checkAndUpdate(bpid, info);\n      }\n    }\n    if (!retainDiffs) clear();\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DirectoryScanner.java",
          "extendedDetails": {}
        }
      ]
    },
    "a317bd7b02c37bd57743bfad59593ec12f53f4ed": {
      "type": "Yexceptionschange",
      "commitMessage": "HDFS-6925. DataNode should attempt to place replicas on transient storage first if lazyPersist flag is received. (Arpit Agarwal)\n",
      "commitDate": "27/08/14 9:47 PM",
      "commitName": "a317bd7b02c37bd57743bfad59593ec12f53f4ed",
      "commitAuthor": "arp",
      "commitDateOld": "23/04/14 1:13 PM",
      "commitNameOld": "876fd8ab7913a259ff9f69c16cc2d9af46ad3f9b",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 126.36,
      "commitsBetweenForRepo": 897,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n-  void reconcile() {\n+  void reconcile() throws IOException {\n     scan();\n     for (Entry\u003cString, LinkedList\u003cScanInfo\u003e\u003e entry : diffs.entrySet()) {\n       String bpid \u003d entry.getKey();\n       LinkedList\u003cScanInfo\u003e diff \u003d entry.getValue();\n       \n       for (ScanInfo info : diff) {\n         dataset.checkAndUpdate(bpid, info.getBlockId(), info.getBlockFile(),\n             info.getMetaFile(), info.getVolume());\n       }\n     }\n     if (!retainDiffs) clear();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void reconcile() throws IOException {\n    scan();\n    for (Entry\u003cString, LinkedList\u003cScanInfo\u003e\u003e entry : diffs.entrySet()) {\n      String bpid \u003d entry.getKey();\n      LinkedList\u003cScanInfo\u003e diff \u003d entry.getValue();\n      \n      for (ScanInfo info : diff) {\n        dataset.checkAndUpdate(bpid, info.getBlockId(), info.getBlockFile(),\n            info.getMetaFile(), info.getVolume());\n      }\n    }\n    if (!retainDiffs) clear();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DirectoryScanner.java",
      "extendedDetails": {
        "oldValue": "[]",
        "newValue": "[IOException]"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  void reconcile() {\n    scan();\n    for (Entry\u003cString, LinkedList\u003cScanInfo\u003e\u003e entry : diffs.entrySet()) {\n      String bpid \u003d entry.getKey();\n      LinkedList\u003cScanInfo\u003e diff \u003d entry.getValue();\n      \n      for (ScanInfo info : diff) {\n        dataset.checkAndUpdate(bpid, info.getBlockId(), info.getBlockFile(),\n            info.getMetaFile(), info.getVolume());\n      }\n    }\n    if (!retainDiffs) clear();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DirectoryScanner.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DirectoryScanner.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DirectoryScanner.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  void reconcile() {\n    scan();\n    for (Entry\u003cString, LinkedList\u003cScanInfo\u003e\u003e entry : diffs.entrySet()) {\n      String bpid \u003d entry.getKey();\n      LinkedList\u003cScanInfo\u003e diff \u003d entry.getValue();\n      \n      for (ScanInfo info : diff) {\n        dataset.checkAndUpdate(bpid, info.getBlockId(), info.getBlockFile(),\n            info.getMetaFile(), info.getVolume());\n      }\n    }\n    if (!retainDiffs) clear();\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DirectoryScanner.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/datanode/DirectoryScanner.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DirectoryScanner.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,13 @@\n+  void reconcile() {\n+    scan();\n+    for (Entry\u003cString, LinkedList\u003cScanInfo\u003e\u003e entry : diffs.entrySet()) {\n+      String bpid \u003d entry.getKey();\n+      LinkedList\u003cScanInfo\u003e diff \u003d entry.getValue();\n+      \n+      for (ScanInfo info : diff) {\n+        dataset.checkAndUpdate(bpid, info.getBlockId(), info.getBlockFile(),\n+            info.getMetaFile(), info.getVolume());\n+      }\n+    }\n+    if (!retainDiffs) clear();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  void reconcile() {\n    scan();\n    for (Entry\u003cString, LinkedList\u003cScanInfo\u003e\u003e entry : diffs.entrySet()) {\n      String bpid \u003d entry.getKey();\n      LinkedList\u003cScanInfo\u003e diff \u003d entry.getValue();\n      \n      for (ScanInfo info : diff) {\n        dataset.checkAndUpdate(bpid, info.getBlockId(), info.getBlockFile(),\n            info.getMetaFile(), info.getVolume());\n      }\n    }\n    if (!retainDiffs) clear();\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/datanode/DirectoryScanner.java"
    }
  }
}