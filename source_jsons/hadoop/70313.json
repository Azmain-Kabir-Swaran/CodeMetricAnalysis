{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NativeAzureFileSystem.java",
  "functionName": "seek",
  "functionId": "seek___pos-long",
  "sourceFilePath": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/NativeAzureFileSystem.java",
  "functionStartLine": 927,
  "functionEndLine": 960,
  "numCommitsSeen": 66,
  "timeTaken": 4653,
  "changeHistory": [
    "d670c3a4da7dd80dccf6c6308603bb3bb013b3b0",
    "5fd9742c83fbeae96bf0913bdcdf77fafbf15b2f",
    "3369a4f6916f12e9d6b97072badd1b176be443bd",
    "8bc93db2e7c64830b6a662f28c8917a9eef4e7c9",
    "0e76f1fceaaaeb66bdb4818f43b9a55fc092bf79",
    "3ce0a6502e78240f551c29bb27a2324ce359cd70",
    "5f6edb30c2bb648d5564c951edc25645e17e6636",
    "2217e2f8ff418b88eac6ad36cafe3a9795a11f40",
    "81bc395deb3ba00567dc067d6ca71bacf9e3bc82"
  ],
  "changeHistoryShort": {
    "d670c3a4da7dd80dccf6c6308603bb3bb013b3b0": "Ybodychange",
    "5fd9742c83fbeae96bf0913bdcdf77fafbf15b2f": "Ybodychange",
    "3369a4f6916f12e9d6b97072badd1b176be443bd": "Ybodychange",
    "8bc93db2e7c64830b6a662f28c8917a9eef4e7c9": "Ybodychange",
    "0e76f1fceaaaeb66bdb4818f43b9a55fc092bf79": "Ybodychange",
    "3ce0a6502e78240f551c29bb27a2324ce359cd70": "Ymultichange(Yexceptionschange,Ybodychange)",
    "5f6edb30c2bb648d5564c951edc25645e17e6636": "Ybodychange",
    "2217e2f8ff418b88eac6ad36cafe3a9795a11f40": "Ybodychange",
    "81bc395deb3ba00567dc067d6ca71bacf9e3bc82": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d670c3a4da7dd80dccf6c6308603bb3bb013b3b0": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14535 wasb: implement high-performance random access and seek of block blobs.\nContributed by Thomas Marquardt\n",
      "commitDate": "11/07/17 1:34 PM",
      "commitName": "d670c3a4da7dd80dccf6c6308603bb3bb013b3b0",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "30/06/17 4:53 PM",
      "commitNameOld": "38996fdcf0987d1da00ce46f8284d8fcdce57329",
      "commitAuthorOld": "Mingliang Liu",
      "daysBetweenCommits": 10.86,
      "commitsBetweenForRepo": 32,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,34 @@\n     public synchronized void seek(long pos) throws FileNotFoundException, EOFException, IOException {\n       try {\n         checkNotClosed();\n         if (pos \u003c 0) {\n           throw new EOFException(FSExceptionMessages.NEGATIVE_SEEK);\n         }\n         if (this.pos \u003e pos) {\n-          IOUtils.closeStream(in);\n-          in \u003d store.retrieve(key);\n-          this.pos \u003d in.skip(pos);\n+          if (in instanceof Seekable) {\n+            ((Seekable) in).seek(pos);\n+            this.pos \u003d pos;\n+          } else {\n+            IOUtils.closeStream(in);\n+            in \u003d store.retrieve(key);\n+            this.pos \u003d in.skip(pos);\n+          }\n         } else {\n           this.pos +\u003d in.skip(pos - this.pos);\n         }\n         LOG.debug(\"Seek to position {}. Bytes skipped {}\", pos,\n           this.pos);\n       } catch(IOException e) {\n \n         Throwable innerException \u003d NativeAzureFileSystemHelper.checkForAzureStorageException(e);\n \n         if (innerException instanceof StorageException\n             \u0026\u0026 NativeAzureFileSystemHelper.isFileNotFoundException((StorageException) innerException)) {\n           throw new FileNotFoundException(String.format(\"%s is not found\", key));\n         }\n \n         throw e;\n       } catch(IndexOutOfBoundsException e) {\n         throw new EOFException(FSExceptionMessages.CANNOT_SEEK_PAST_EOF);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public synchronized void seek(long pos) throws FileNotFoundException, EOFException, IOException {\n      try {\n        checkNotClosed();\n        if (pos \u003c 0) {\n          throw new EOFException(FSExceptionMessages.NEGATIVE_SEEK);\n        }\n        if (this.pos \u003e pos) {\n          if (in instanceof Seekable) {\n            ((Seekable) in).seek(pos);\n            this.pos \u003d pos;\n          } else {\n            IOUtils.closeStream(in);\n            in \u003d store.retrieve(key);\n            this.pos \u003d in.skip(pos);\n          }\n        } else {\n          this.pos +\u003d in.skip(pos - this.pos);\n        }\n        LOG.debug(\"Seek to position {}. Bytes skipped {}\", pos,\n          this.pos);\n      } catch(IOException e) {\n\n        Throwable innerException \u003d NativeAzureFileSystemHelper.checkForAzureStorageException(e);\n\n        if (innerException instanceof StorageException\n            \u0026\u0026 NativeAzureFileSystemHelper.isFileNotFoundException((StorageException) innerException)) {\n          throw new FileNotFoundException(String.format(\"%s is not found\", key));\n        }\n\n        throw e;\n      } catch(IndexOutOfBoundsException e) {\n        throw new EOFException(FSExceptionMessages.CANNOT_SEEK_PAST_EOF);\n      }\n    }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/NativeAzureFileSystem.java",
      "extendedDetails": {}
    },
    "5fd9742c83fbeae96bf0913bdcdf77fafbf15b2f": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14478. Optimize NativeAzureFsInputStream for positional reads. Contributed by Rajesh Balamohan\n",
      "commitDate": "05/06/17 3:56 PM",
      "commitName": "5fd9742c83fbeae96bf0913bdcdf77fafbf15b2f",
      "commitAuthor": "Mingliang Liu",
      "commitDateOld": "26/05/17 5:54 PM",
      "commitNameOld": "89bb8bfe582ba85566cede321b233bb642f1c675",
      "commitAuthorOld": "Mingliang Liu",
      "daysBetweenCommits": 9.92,
      "commitsBetweenForRepo": 36,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,29 @@\n     public synchronized void seek(long pos) throws FileNotFoundException, EOFException, IOException {\n       try {\n         checkNotClosed();\n         if (pos \u003c 0) {\n           throw new EOFException(FSExceptionMessages.NEGATIVE_SEEK);\n         }\n-        IOUtils.closeStream(in);\n-        in \u003d store.retrieve(key);\n-        this.pos \u003d in.skip(pos);\n+        if (this.pos \u003e pos) {\n+          IOUtils.closeStream(in);\n+          in \u003d store.retrieve(key);\n+          this.pos \u003d in.skip(pos);\n+        } else {\n+          this.pos +\u003d in.skip(pos - this.pos);\n+        }\n         LOG.debug(\"Seek to position {}. Bytes skipped {}\", pos,\n           this.pos);\n       } catch(IOException e) {\n \n         Throwable innerException \u003d NativeAzureFileSystemHelper.checkForAzureStorageException(e);\n \n         if (innerException instanceof StorageException\n             \u0026\u0026 NativeAzureFileSystemHelper.isFileNotFoundException((StorageException) innerException)) {\n           throw new FileNotFoundException(String.format(\"%s is not found\", key));\n         }\n \n         throw e;\n       } catch(IndexOutOfBoundsException e) {\n         throw new EOFException(FSExceptionMessages.CANNOT_SEEK_PAST_EOF);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public synchronized void seek(long pos) throws FileNotFoundException, EOFException, IOException {\n      try {\n        checkNotClosed();\n        if (pos \u003c 0) {\n          throw new EOFException(FSExceptionMessages.NEGATIVE_SEEK);\n        }\n        if (this.pos \u003e pos) {\n          IOUtils.closeStream(in);\n          in \u003d store.retrieve(key);\n          this.pos \u003d in.skip(pos);\n        } else {\n          this.pos +\u003d in.skip(pos - this.pos);\n        }\n        LOG.debug(\"Seek to position {}. Bytes skipped {}\", pos,\n          this.pos);\n      } catch(IOException e) {\n\n        Throwable innerException \u003d NativeAzureFileSystemHelper.checkForAzureStorageException(e);\n\n        if (innerException instanceof StorageException\n            \u0026\u0026 NativeAzureFileSystemHelper.isFileNotFoundException((StorageException) innerException)) {\n          throw new FileNotFoundException(String.format(\"%s is not found\", key));\n        }\n\n        throw e;\n      } catch(IndexOutOfBoundsException e) {\n        throw new EOFException(FSExceptionMessages.CANNOT_SEEK_PAST_EOF);\n      }\n    }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/NativeAzureFileSystem.java",
      "extendedDetails": {}
    },
    "3369a4f6916f12e9d6b97072badd1b176be443bd": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12535. Run FileSystem contract tests with hadoop-azure. Contributed by Madhumita Chakraborty.\n",
      "commitDate": "23/02/16 9:37 PM",
      "commitName": "3369a4f6916f12e9d6b97072badd1b176be443bd",
      "commitAuthor": "cnauroth",
      "commitDateOld": "12/02/16 3:50 PM",
      "commitNameOld": "91a96eaa534dbb27e81b6c24bbb8138200a80a83",
      "commitAuthorOld": "cnauroth",
      "daysBetweenCommits": 11.24,
      "commitsBetweenForRepo": 65,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,25 @@\n     public synchronized void seek(long pos) throws FileNotFoundException, EOFException, IOException {\n       try {\n         checkNotClosed();\n         if (pos \u003c 0) {\n           throw new EOFException(FSExceptionMessages.NEGATIVE_SEEK);\n         }\n         IOUtils.closeStream(in);\n         in \u003d store.retrieve(key);\n         this.pos \u003d in.skip(pos);\n         LOG.debug(\"Seek to position {}. Bytes skipped {}\", pos,\n           this.pos);\n       } catch(IOException e) {\n \n         Throwable innerException \u003d NativeAzureFileSystemHelper.checkForAzureStorageException(e);\n \n         if (innerException instanceof StorageException\n             \u0026\u0026 NativeAzureFileSystemHelper.isFileNotFoundException((StorageException) innerException)) {\n           throw new FileNotFoundException(String.format(\"%s is not found\", key));\n         }\n \n         throw e;\n+      } catch(IndexOutOfBoundsException e) {\n+        throw new EOFException(FSExceptionMessages.CANNOT_SEEK_PAST_EOF);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public synchronized void seek(long pos) throws FileNotFoundException, EOFException, IOException {\n      try {\n        checkNotClosed();\n        if (pos \u003c 0) {\n          throw new EOFException(FSExceptionMessages.NEGATIVE_SEEK);\n        }\n        IOUtils.closeStream(in);\n        in \u003d store.retrieve(key);\n        this.pos \u003d in.skip(pos);\n        LOG.debug(\"Seek to position {}. Bytes skipped {}\", pos,\n          this.pos);\n      } catch(IOException e) {\n\n        Throwable innerException \u003d NativeAzureFileSystemHelper.checkForAzureStorageException(e);\n\n        if (innerException instanceof StorageException\n            \u0026\u0026 NativeAzureFileSystemHelper.isFileNotFoundException((StorageException) innerException)) {\n          throw new FileNotFoundException(String.format(\"%s is not found\", key));\n        }\n\n        throw e;\n      } catch(IndexOutOfBoundsException e) {\n        throw new EOFException(FSExceptionMessages.CANNOT_SEEK_PAST_EOF);\n      }\n    }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/NativeAzureFileSystem.java",
      "extendedDetails": {}
    },
    "8bc93db2e7c64830b6a662f28c8917a9eef4e7c9": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12635. Adding Append API support for WASB. Contributed by Dushyanth.\n",
      "commitDate": "18/01/16 9:08 AM",
      "commitName": "8bc93db2e7c64830b6a662f28c8917a9eef4e7c9",
      "commitAuthor": "cnauroth",
      "commitDateOld": "09/01/16 10:18 PM",
      "commitNameOld": "0e76f1fceaaaeb66bdb4818f43b9a55fc092bf79",
      "commitAuthorOld": "cnauroth",
      "daysBetweenCommits": 8.45,
      "commitsBetweenForRepo": 64,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n     public synchronized void seek(long pos) throws FileNotFoundException, EOFException, IOException {\n       try {\n         checkNotClosed();\n         if (pos \u003c 0) {\n           throw new EOFException(FSExceptionMessages.NEGATIVE_SEEK);\n         }\n         IOUtils.closeStream(in);\n         in \u003d store.retrieve(key);\n         this.pos \u003d in.skip(pos);\n         LOG.debug(\"Seek to position {}. Bytes skipped {}\", pos,\n           this.pos);\n       } catch(IOException e) {\n \n-        Throwable innerException \u003d NativeAzureFileSystem.checkForAzureStorageException(e);\n+        Throwable innerException \u003d NativeAzureFileSystemHelper.checkForAzureStorageException(e);\n \n         if (innerException instanceof StorageException\n-            \u0026\u0026 NativeAzureFileSystem.isFileNotFoundException((StorageException) innerException)) {\n+            \u0026\u0026 NativeAzureFileSystemHelper.isFileNotFoundException((StorageException) innerException)) {\n           throw new FileNotFoundException(String.format(\"%s is not found\", key));\n         }\n \n         throw e;\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public synchronized void seek(long pos) throws FileNotFoundException, EOFException, IOException {\n      try {\n        checkNotClosed();\n        if (pos \u003c 0) {\n          throw new EOFException(FSExceptionMessages.NEGATIVE_SEEK);\n        }\n        IOUtils.closeStream(in);\n        in \u003d store.retrieve(key);\n        this.pos \u003d in.skip(pos);\n        LOG.debug(\"Seek to position {}. Bytes skipped {}\", pos,\n          this.pos);\n      } catch(IOException e) {\n\n        Throwable innerException \u003d NativeAzureFileSystemHelper.checkForAzureStorageException(e);\n\n        if (innerException instanceof StorageException\n            \u0026\u0026 NativeAzureFileSystemHelper.isFileNotFoundException((StorageException) innerException)) {\n          throw new FileNotFoundException(String.format(\"%s is not found\", key));\n        }\n\n        throw e;\n      }\n    }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/NativeAzureFileSystem.java",
      "extendedDetails": {}
    },
    "0e76f1fceaaaeb66bdb4818f43b9a55fc092bf79": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12551. Introduce FileNotFoundException for WASB FileSystem API. Contributed by Dushyanth.\n",
      "commitDate": "09/01/16 10:18 PM",
      "commitName": "0e76f1fceaaaeb66bdb4818f43b9a55fc092bf79",
      "commitAuthor": "cnauroth",
      "commitDateOld": "08/01/16 8:18 PM",
      "commitNameOld": "f0fa6d869b9abb5a900ea1c9eb4eb19ec9831dc4",
      "commitAuthorOld": "cnauroth",
      "daysBetweenCommits": 1.08,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n     public synchronized void seek(long pos) throws FileNotFoundException, EOFException, IOException {\n       try {\n         checkNotClosed();\n         if (pos \u003c 0) {\n           throw new EOFException(FSExceptionMessages.NEGATIVE_SEEK);\n         }\n         IOUtils.closeStream(in);\n         in \u003d store.retrieve(key);\n         this.pos \u003d in.skip(pos);\n         LOG.debug(\"Seek to position {}. Bytes skipped {}\", pos,\n           this.pos);\n       } catch(IOException e) {\n \n-        Throwable innerException \u003d checkForAzureStorageException(e);\n+        Throwable innerException \u003d NativeAzureFileSystem.checkForAzureStorageException(e);\n \n         if (innerException instanceof StorageException\n-             \u0026\u0026 isFileNotFoundException((StorageException) innerException)) {\n+            \u0026\u0026 NativeAzureFileSystem.isFileNotFoundException((StorageException) innerException)) {\n           throw new FileNotFoundException(String.format(\"%s is not found\", key));\n         }\n \n         throw e;\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public synchronized void seek(long pos) throws FileNotFoundException, EOFException, IOException {\n      try {\n        checkNotClosed();\n        if (pos \u003c 0) {\n          throw new EOFException(FSExceptionMessages.NEGATIVE_SEEK);\n        }\n        IOUtils.closeStream(in);\n        in \u003d store.retrieve(key);\n        this.pos \u003d in.skip(pos);\n        LOG.debug(\"Seek to position {}. Bytes skipped {}\", pos,\n          this.pos);\n      } catch(IOException e) {\n\n        Throwable innerException \u003d NativeAzureFileSystem.checkForAzureStorageException(e);\n\n        if (innerException instanceof StorageException\n            \u0026\u0026 NativeAzureFileSystem.isFileNotFoundException((StorageException) innerException)) {\n          throw new FileNotFoundException(String.format(\"%s is not found\", key));\n        }\n\n        throw e;\n      }\n    }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/NativeAzureFileSystem.java",
      "extendedDetails": {}
    },
    "3ce0a6502e78240f551c29bb27a2324ce359cd70": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "HADOOP-12533. Introduce FileNotFoundException in WASB for read and seek API. Contributed by Dushyanth.\n",
      "commitDate": "02/11/15 10:17 AM",
      "commitName": "3ce0a6502e78240f551c29bb27a2324ce359cd70",
      "commitAuthor": "cnauroth",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "HADOOP-12533. Introduce FileNotFoundException in WASB for read and seek API. Contributed by Dushyanth.\n",
          "commitDate": "02/11/15 10:17 AM",
          "commitName": "3ce0a6502e78240f551c29bb27a2324ce359cd70",
          "commitAuthor": "cnauroth",
          "commitDateOld": "27/10/15 10:56 PM",
          "commitNameOld": "1f7ecb0c84042783f9fcf3f77d7d889dc58c9ead",
          "commitAuthorOld": "cnauroth",
          "daysBetweenCommits": 5.51,
          "commitsBetweenForRepo": 52,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,23 @@\n-    public synchronized void seek(long pos) throws IOException {\n-     in.close();\n-     in \u003d store.retrieve(key);\n-     this.pos \u003d in.skip(pos);\n-     LOG.debug(\"Seek to position {}. Bytes skipped {}\", pos,\n-         this.pos);\n+    public synchronized void seek(long pos) throws FileNotFoundException, EOFException, IOException {\n+      try {\n+        checkNotClosed();\n+        if (pos \u003c 0) {\n+          throw new EOFException(FSExceptionMessages.NEGATIVE_SEEK);\n+        }\n+        IOUtils.closeStream(in);\n+        in \u003d store.retrieve(key);\n+        this.pos \u003d in.skip(pos);\n+        LOG.debug(\"Seek to position {}. Bytes skipped {}\", pos,\n+          this.pos);\n+      } catch(IOException e) {\n+\n+        Throwable innerException \u003d checkForAzureStorageException(e);\n+\n+        if (innerException instanceof StorageException\n+             \u0026\u0026 isFileNotFoundException((StorageException) innerException)) {\n+          throw new FileNotFoundException(String.format(\"%s is not found\", key));\n+        }\n+\n+        throw e;\n+      }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public synchronized void seek(long pos) throws FileNotFoundException, EOFException, IOException {\n      try {\n        checkNotClosed();\n        if (pos \u003c 0) {\n          throw new EOFException(FSExceptionMessages.NEGATIVE_SEEK);\n        }\n        IOUtils.closeStream(in);\n        in \u003d store.retrieve(key);\n        this.pos \u003d in.skip(pos);\n        LOG.debug(\"Seek to position {}. Bytes skipped {}\", pos,\n          this.pos);\n      } catch(IOException e) {\n\n        Throwable innerException \u003d checkForAzureStorageException(e);\n\n        if (innerException instanceof StorageException\n             \u0026\u0026 isFileNotFoundException((StorageException) innerException)) {\n          throw new FileNotFoundException(String.format(\"%s is not found\", key));\n        }\n\n        throw e;\n      }\n    }",
          "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/NativeAzureFileSystem.java",
          "extendedDetails": {
            "oldValue": "[IOException]",
            "newValue": "[FileNotFoundException, EOFException, IOException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-12533. Introduce FileNotFoundException in WASB for read and seek API. Contributed by Dushyanth.\n",
          "commitDate": "02/11/15 10:17 AM",
          "commitName": "3ce0a6502e78240f551c29bb27a2324ce359cd70",
          "commitAuthor": "cnauroth",
          "commitDateOld": "27/10/15 10:56 PM",
          "commitNameOld": "1f7ecb0c84042783f9fcf3f77d7d889dc58c9ead",
          "commitAuthorOld": "cnauroth",
          "daysBetweenCommits": 5.51,
          "commitsBetweenForRepo": 52,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,23 @@\n-    public synchronized void seek(long pos) throws IOException {\n-     in.close();\n-     in \u003d store.retrieve(key);\n-     this.pos \u003d in.skip(pos);\n-     LOG.debug(\"Seek to position {}. Bytes skipped {}\", pos,\n-         this.pos);\n+    public synchronized void seek(long pos) throws FileNotFoundException, EOFException, IOException {\n+      try {\n+        checkNotClosed();\n+        if (pos \u003c 0) {\n+          throw new EOFException(FSExceptionMessages.NEGATIVE_SEEK);\n+        }\n+        IOUtils.closeStream(in);\n+        in \u003d store.retrieve(key);\n+        this.pos \u003d in.skip(pos);\n+        LOG.debug(\"Seek to position {}. Bytes skipped {}\", pos,\n+          this.pos);\n+      } catch(IOException e) {\n+\n+        Throwable innerException \u003d checkForAzureStorageException(e);\n+\n+        if (innerException instanceof StorageException\n+             \u0026\u0026 isFileNotFoundException((StorageException) innerException)) {\n+          throw new FileNotFoundException(String.format(\"%s is not found\", key));\n+        }\n+\n+        throw e;\n+      }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public synchronized void seek(long pos) throws FileNotFoundException, EOFException, IOException {\n      try {\n        checkNotClosed();\n        if (pos \u003c 0) {\n          throw new EOFException(FSExceptionMessages.NEGATIVE_SEEK);\n        }\n        IOUtils.closeStream(in);\n        in \u003d store.retrieve(key);\n        this.pos \u003d in.skip(pos);\n        LOG.debug(\"Seek to position {}. Bytes skipped {}\", pos,\n          this.pos);\n      } catch(IOException e) {\n\n        Throwable innerException \u003d checkForAzureStorageException(e);\n\n        if (innerException instanceof StorageException\n             \u0026\u0026 isFileNotFoundException((StorageException) innerException)) {\n          throw new FileNotFoundException(String.format(\"%s is not found\", key));\n        }\n\n        throw e;\n      }\n    }",
          "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/NativeAzureFileSystem.java",
          "extendedDetails": {}
        }
      ]
    },
    "5f6edb30c2bb648d5564c951edc25645e17e6636": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12350. WASB Logging: Improve WASB Logging around deletes, reads and writes. Contributed by Dushyanth.\n",
      "commitDate": "05/10/15 8:11 PM",
      "commitName": "5f6edb30c2bb648d5564c951edc25645e17e6636",
      "commitAuthor": "cnauroth",
      "commitDateOld": "28/09/15 3:31 PM",
      "commitNameOld": "3abbdc929bde05f8819f5410cef1eaeb8940203f",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 7.19,
      "commitsBetweenForRepo": 44,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,7 @@\n     public synchronized void seek(long pos) throws IOException {\n      in.close();\n      in \u003d store.retrieve(key);\n      this.pos \u003d in.skip(pos);\n-     if (LOG.isDebugEnabled()) {\n-       LOG.debug(String.format(\"Seek to position %d. Bytes skipped %d\", pos,\n-         this.pos));\n-     }\n+     LOG.debug(\"Seek to position {}. Bytes skipped {}\", pos,\n+         this.pos);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public synchronized void seek(long pos) throws IOException {\n     in.close();\n     in \u003d store.retrieve(key);\n     this.pos \u003d in.skip(pos);\n     LOG.debug(\"Seek to position {}. Bytes skipped {}\", pos,\n         this.pos);\n    }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/NativeAzureFileSystem.java",
      "extendedDetails": {}
    },
    "2217e2f8ff418b88eac6ad36cafe3a9795a11f40": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10809. hadoop-azure: page blob support. Contributed by Dexter Bradshaw, Mostafa Elhemali, Eric Hanson, and Mike Liddell.\n",
      "commitDate": "08/10/14 2:20 PM",
      "commitName": "2217e2f8ff418b88eac6ad36cafe3a9795a11f40",
      "commitAuthor": "cnauroth",
      "commitDateOld": "19/09/14 11:33 AM",
      "commitNameOld": "9f03a7c018bb2c497cd0ef758f1a3e08e8163d06",
      "commitAuthorOld": "Allen Wittenauer",
      "daysBetweenCommits": 19.12,
      "commitsBetweenForRepo": 199,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,5 +1,9 @@\n     public synchronized void seek(long pos) throws IOException {\n-      in.close();\n-      in \u003d store.retrieve(key, pos);\n-      this.pos \u003d pos;\n+     in.close();\n+     in \u003d store.retrieve(key);\n+     this.pos \u003d in.skip(pos);\n+     if (LOG.isDebugEnabled()) {\n+       LOG.debug(String.format(\"Seek to position %d. Bytes skipped %d\", pos,\n+         this.pos));\n+     }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public synchronized void seek(long pos) throws IOException {\n     in.close();\n     in \u003d store.retrieve(key);\n     this.pos \u003d in.skip(pos);\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(String.format(\"Seek to position %d. Bytes skipped %d\", pos,\n         this.pos));\n     }\n    }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/NativeAzureFileSystem.java",
      "extendedDetails": {}
    },
    "81bc395deb3ba00567dc067d6ca71bacf9e3bc82": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-9629. Support Windows Azure Storage - Blob as a file system in Hadoop. Contributed by Dexter Bradshaw, Mostafa Elhemali, Xi Fang, Johannes Klein, David Lao, Mike Liddell, Chuan Liu, Lengning Liu, Ivan Mitic, Michael Rys, Alexander Stojanovic, Brian Swan, and Min Wei.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1601781 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/06/14 3:26 PM",
      "commitName": "81bc395deb3ba00567dc067d6ca71bacf9e3bc82",
      "commitAuthor": "Chris Nauroth",
      "diff": "@@ -0,0 +1,5 @@\n+    public synchronized void seek(long pos) throws IOException {\n+      in.close();\n+      in \u003d store.retrieve(key, pos);\n+      this.pos \u003d pos;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public synchronized void seek(long pos) throws IOException {\n      in.close();\n      in \u003d store.retrieve(key, pos);\n      this.pos \u003d pos;\n    }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/NativeAzureFileSystem.java"
    }
  }
}