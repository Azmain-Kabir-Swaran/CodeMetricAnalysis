{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BlockManager.java",
  "functionName": "verifyReplication",
  "functionId": "verifyReplication___src-String__replication-short__clientName-String",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
  "functionStartLine": 1593,
  "functionEndLine": 1608,
  "numCommitsSeen": 507,
  "timeTaken": 18761,
  "changeHistory": [
    "796a676d18bd7cd3ed4113d002e0e69cf261d6d1",
    "afc88b396f06488c331564e0f6987013bb920d3e",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "09b6f98de431628c80bc8a6faf0070eeaf72ff2a",
    "97b6ca4dd7d1233e8f8c90b1c01e47228c044e13",
    "1bcfe45e47775b98cce5541f328c4fd46e5eb13d",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "796a676d18bd7cd3ed4113d002e0e69cf261d6d1": "Ybodychange",
    "afc88b396f06488c331564e0f6987013bb920d3e": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "09b6f98de431628c80bc8a6faf0070eeaf72ff2a": "Ymultichange(Yfilerename,Ymodifierchange)",
    "97b6ca4dd7d1233e8f8c90b1c01e47228c044e13": "Ymultichange(Yfilerename,Ymodifierchange)",
    "1bcfe45e47775b98cce5541f328c4fd46e5eb13d": "Ymultichange(Yfilerename,Ymodifierchange)",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "796a676d18bd7cd3ed4113d002e0e69cf261d6d1": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9528. Cleanup namenode audit/log/exception messages. (szetszwo via umamahesh)\n",
      "commitDate": "11/12/15 5:57 PM",
      "commitName": "796a676d18bd7cd3ed4113d002e0e69cf261d6d1",
      "commitAuthor": "Uma Mahesh",
      "commitDateOld": "09/12/15 5:55 PM",
      "commitNameOld": "132478e805ba0f955345217b8ad87c2d17cccb2d",
      "commitAuthorOld": "Tsz-Wo Nicholas Sze",
      "daysBetweenCommits": 2.0,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,16 @@\n    public void verifyReplication(String src,\n                           short replication,\n                           String clientName) throws IOException {\n+    String err \u003d null;\n+    if (replication \u003e maxReplication) {\n+      err \u003d \" exceeds maximum of \" + maxReplication;\n+    } else if (replication \u003c minReplication) {\n+      err \u003d \" is less than the required minimum of \" + minReplication;\n+    }\n \n-    if (replication \u003c minReplication || replication \u003e maxReplication) {\n-      StringBuilder msg \u003d new StringBuilder(\"Requested replication factor of \");\n-\n-      msg.append(replication);\n-\n-      if (replication \u003e maxReplication) {\n-        msg.append(\" exceeds maximum of \");\n-        msg.append(maxReplication);\n-      } else {\n-        msg.append(\" is less than the required minimum of \");\n-        msg.append(minReplication);\n-      }\n-\n-      msg.append(\" for \").append(src);\n-\n-      if (clientName !\u003d null) {\n-        msg.append(\" from \").append(clientName);\n-      }\n-\n-      throw new IOException(msg.toString());\n+    if (err !\u003d null) {\n+      throw new IOException(\"Requested replication factor of \" + replication\n+          + err + \" for \" + src\n+          + (clientName \u003d\u003d null? \"\": \", clientName\u003d\" + clientName));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "   public void verifyReplication(String src,\n                          short replication,\n                          String clientName) throws IOException {\n    String err \u003d null;\n    if (replication \u003e maxReplication) {\n      err \u003d \" exceeds maximum of \" + maxReplication;\n    } else if (replication \u003c minReplication) {\n      err \u003d \" is less than the required minimum of \" + minReplication;\n    }\n\n    if (err !\u003d null) {\n      throw new IOException(\"Requested replication factor of \" + replication\n          + err + \" for \" + src\n          + (clientName \u003d\u003d null? \"\": \", clientName\u003d\" + clientName));\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "extendedDetails": {}
    },
    "afc88b396f06488c331564e0f6987013bb920d3e": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-328. Improve fs -setrep error message for invalid replication factors. Contributed by Daniel Templeton.\n",
      "commitDate": "02/09/15 1:46 PM",
      "commitName": "afc88b396f06488c331564e0f6987013bb920d3e",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "31/08/15 11:48 AM",
      "commitNameOld": "caa04de149030691b7bc952b534c6128db217ed2",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 2.08,
      "commitsBetweenForRepo": 20,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,26 @@\n    public void verifyReplication(String src,\n                           short replication,\n                           String clientName) throws IOException {\n \n-    if (replication \u003e\u003d minReplication \u0026\u0026 replication \u003c\u003d maxReplication) {\n-      //common case. avoid building \u0027text\u0027\n-      return;\n+    if (replication \u003c minReplication || replication \u003e maxReplication) {\n+      StringBuilder msg \u003d new StringBuilder(\"Requested replication factor of \");\n+\n+      msg.append(replication);\n+\n+      if (replication \u003e maxReplication) {\n+        msg.append(\" exceeds maximum of \");\n+        msg.append(maxReplication);\n+      } else {\n+        msg.append(\" is less than the required minimum of \");\n+        msg.append(minReplication);\n+      }\n+\n+      msg.append(\" for \").append(src);\n+\n+      if (clientName !\u003d null) {\n+        msg.append(\" from \").append(clientName);\n+      }\n+\n+      throw new IOException(msg.toString());\n     }\n-    \n-    String text \u003d \"file \" + src \n-      + ((clientName !\u003d null) ? \" on client \" + clientName : \"\")\n-      + \".\\n\"\n-      + \"Requested replication \" + replication;\n-\n-    if (replication \u003e maxReplication)\n-      throw new IOException(text + \" exceeds maximum \" + maxReplication);\n-\n-    if (replication \u003c minReplication)\n-      throw new IOException(text + \" is less than the required minimum \" +\n-                            minReplication);\n   }\n\\ No newline at end of file\n",
      "actualSource": "   public void verifyReplication(String src,\n                          short replication,\n                          String clientName) throws IOException {\n\n    if (replication \u003c minReplication || replication \u003e maxReplication) {\n      StringBuilder msg \u003d new StringBuilder(\"Requested replication factor of \");\n\n      msg.append(replication);\n\n      if (replication \u003e maxReplication) {\n        msg.append(\" exceeds maximum of \");\n        msg.append(maxReplication);\n      } else {\n        msg.append(\" is less than the required minimum of \");\n        msg.append(minReplication);\n      }\n\n      msg.append(\" for \").append(src);\n\n      if (clientName !\u003d null) {\n        msg.append(\" from \").append(clientName);\n      }\n\n      throw new IOException(msg.toString());\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "   public void verifyReplication(String src,\n                          short replication,\n                          String clientName) throws IOException {\n\n    if (replication \u003e\u003d minReplication \u0026\u0026 replication \u003c\u003d maxReplication) {\n      //common case. avoid building \u0027text\u0027\n      return;\n    }\n    \n    String text \u003d \"file \" + src \n      + ((clientName !\u003d null) ? \" on client \" + clientName : \"\")\n      + \".\\n\"\n      + \"Requested replication \" + replication;\n\n    if (replication \u003e maxReplication)\n      throw new IOException(text + \" exceeds maximum \" + maxReplication);\n\n    if (replication \u003c minReplication)\n      throw new IOException(text + \" is less than the required minimum \" +\n                            minReplication);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "   public void verifyReplication(String src,\n                          short replication,\n                          String clientName) throws IOException {\n\n    if (replication \u003e\u003d minReplication \u0026\u0026 replication \u003c\u003d maxReplication) {\n      //common case. avoid building \u0027text\u0027\n      return;\n    }\n    \n    String text \u003d \"file \" + src \n      + ((clientName !\u003d null) ? \" on client \" + clientName : \"\")\n      + \".\\n\"\n      + \"Requested replication \" + replication;\n\n    if (replication \u003e maxReplication)\n      throw new IOException(text + \" exceeds maximum \" + maxReplication);\n\n    if (replication \u003c minReplication)\n      throw new IOException(text + \" is less than the required minimum \" +\n                            minReplication);\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java"
      }
    },
    "09b6f98de431628c80bc8a6faf0070eeaf72ff2a": {
      "type": "Ymultichange(Yfilerename,Ymodifierchange)",
      "commitMessage": "HDFS-2107. Move block management code from o.a.h.h.s.namenode to a new package o.a.h.h.s.blockmanagement.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1140939 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/06/11 6:31 PM",
      "commitName": "09b6f98de431628c80bc8a6faf0070eeaf72ff2a",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "HDFS-2107. Move block management code from o.a.h.h.s.namenode to a new package o.a.h.h.s.blockmanagement.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1140939 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "28/06/11 6:31 PM",
          "commitName": "09b6f98de431628c80bc8a6faf0070eeaf72ff2a",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "28/06/11 5:26 PM",
          "commitNameOld": "97b6ca4dd7d1233e8f8c90b1c01e47228c044e13",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 0.04,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n-   void verifyReplication(String src,\n+   public void verifyReplication(String src,\n                           short replication,\n                           String clientName) throws IOException {\n \n     if (replication \u003e\u003d minReplication \u0026\u0026 replication \u003c\u003d maxReplication) {\n       //common case. avoid building \u0027text\u0027\n       return;\n     }\n     \n     String text \u003d \"file \" + src \n       + ((clientName !\u003d null) ? \" on client \" + clientName : \"\")\n       + \".\\n\"\n       + \"Requested replication \" + replication;\n \n     if (replication \u003e maxReplication)\n       throw new IOException(text + \" exceeds maximum \" + maxReplication);\n \n     if (replication \u003c minReplication)\n       throw new IOException(text + \" is less than the required minimum \" +\n                             minReplication);\n   }\n\\ No newline at end of file\n",
          "actualSource": "   public void verifyReplication(String src,\n                          short replication,\n                          String clientName) throws IOException {\n\n    if (replication \u003e\u003d minReplication \u0026\u0026 replication \u003c\u003d maxReplication) {\n      //common case. avoid building \u0027text\u0027\n      return;\n    }\n    \n    String text \u003d \"file \" + src \n      + ((clientName !\u003d null) ? \" on client \" + clientName : \"\")\n      + \".\\n\"\n      + \"Requested replication \" + replication;\n\n    if (replication \u003e maxReplication)\n      throw new IOException(text + \" exceeds maximum \" + maxReplication);\n\n    if (replication \u003c minReplication)\n      throw new IOException(text + \" is less than the required minimum \" +\n                            minReplication);\n  }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
          "extendedDetails": {
            "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/BlockManager.java",
            "newPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-2107. Move block management code from o.a.h.h.s.namenode to a new package o.a.h.h.s.blockmanagement.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1140939 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "28/06/11 6:31 PM",
          "commitName": "09b6f98de431628c80bc8a6faf0070eeaf72ff2a",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "28/06/11 5:26 PM",
          "commitNameOld": "97b6ca4dd7d1233e8f8c90b1c01e47228c044e13",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 0.04,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n-   void verifyReplication(String src,\n+   public void verifyReplication(String src,\n                           short replication,\n                           String clientName) throws IOException {\n \n     if (replication \u003e\u003d minReplication \u0026\u0026 replication \u003c\u003d maxReplication) {\n       //common case. avoid building \u0027text\u0027\n       return;\n     }\n     \n     String text \u003d \"file \" + src \n       + ((clientName !\u003d null) ? \" on client \" + clientName : \"\")\n       + \".\\n\"\n       + \"Requested replication \" + replication;\n \n     if (replication \u003e maxReplication)\n       throw new IOException(text + \" exceeds maximum \" + maxReplication);\n \n     if (replication \u003c minReplication)\n       throw new IOException(text + \" is less than the required minimum \" +\n                             minReplication);\n   }\n\\ No newline at end of file\n",
          "actualSource": "   public void verifyReplication(String src,\n                          short replication,\n                          String clientName) throws IOException {\n\n    if (replication \u003e\u003d minReplication \u0026\u0026 replication \u003c\u003d maxReplication) {\n      //common case. avoid building \u0027text\u0027\n      return;\n    }\n    \n    String text \u003d \"file \" + src \n      + ((clientName !\u003d null) ? \" on client \" + clientName : \"\")\n      + \".\\n\"\n      + \"Requested replication \" + replication;\n\n    if (replication \u003e maxReplication)\n      throw new IOException(text + \" exceeds maximum \" + maxReplication);\n\n    if (replication \u003c minReplication)\n      throw new IOException(text + \" is less than the required minimum \" +\n                            minReplication);\n  }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[public]"
          }
        }
      ]
    },
    "97b6ca4dd7d1233e8f8c90b1c01e47228c044e13": {
      "type": "Ymultichange(Yfilerename,Ymodifierchange)",
      "commitMessage": "Revert 1140913 and 1140909 for HDFS-2107.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1140920 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/06/11 5:26 PM",
      "commitName": "97b6ca4dd7d1233e8f8c90b1c01e47228c044e13",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "Revert 1140913 and 1140909 for HDFS-2107.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1140920 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "28/06/11 5:26 PM",
          "commitName": "97b6ca4dd7d1233e8f8c90b1c01e47228c044e13",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "28/06/11 4:57 PM",
          "commitNameOld": "d58e3efe9269efe00c309ed0e9726d2f94bcd03a",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n-   public void verifyReplication(String src,\n+   void verifyReplication(String src,\n                           short replication,\n                           String clientName) throws IOException {\n \n     if (replication \u003e\u003d minReplication \u0026\u0026 replication \u003c\u003d maxReplication) {\n       //common case. avoid building \u0027text\u0027\n       return;\n     }\n     \n     String text \u003d \"file \" + src \n       + ((clientName !\u003d null) ? \" on client \" + clientName : \"\")\n       + \".\\n\"\n       + \"Requested replication \" + replication;\n \n     if (replication \u003e maxReplication)\n       throw new IOException(text + \" exceeds maximum \" + maxReplication);\n \n     if (replication \u003c minReplication)\n       throw new IOException(text + \" is less than the required minimum \" +\n                             minReplication);\n   }\n\\ No newline at end of file\n",
          "actualSource": "   void verifyReplication(String src,\n                          short replication,\n                          String clientName) throws IOException {\n\n    if (replication \u003e\u003d minReplication \u0026\u0026 replication \u003c\u003d maxReplication) {\n      //common case. avoid building \u0027text\u0027\n      return;\n    }\n    \n    String text \u003d \"file \" + src \n      + ((clientName !\u003d null) ? \" on client \" + clientName : \"\")\n      + \".\\n\"\n      + \"Requested replication \" + replication;\n\n    if (replication \u003e maxReplication)\n      throw new IOException(text + \" exceeds maximum \" + maxReplication);\n\n    if (replication \u003c minReplication)\n      throw new IOException(text + \" is less than the required minimum \" +\n                            minReplication);\n  }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/BlockManager.java",
          "extendedDetails": {
            "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
            "newPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/BlockManager.java"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "Revert 1140913 and 1140909 for HDFS-2107.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1140920 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "28/06/11 5:26 PM",
          "commitName": "97b6ca4dd7d1233e8f8c90b1c01e47228c044e13",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "28/06/11 4:57 PM",
          "commitNameOld": "d58e3efe9269efe00c309ed0e9726d2f94bcd03a",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n-   public void verifyReplication(String src,\n+   void verifyReplication(String src,\n                           short replication,\n                           String clientName) throws IOException {\n \n     if (replication \u003e\u003d minReplication \u0026\u0026 replication \u003c\u003d maxReplication) {\n       //common case. avoid building \u0027text\u0027\n       return;\n     }\n     \n     String text \u003d \"file \" + src \n       + ((clientName !\u003d null) ? \" on client \" + clientName : \"\")\n       + \".\\n\"\n       + \"Requested replication \" + replication;\n \n     if (replication \u003e maxReplication)\n       throw new IOException(text + \" exceeds maximum \" + maxReplication);\n \n     if (replication \u003c minReplication)\n       throw new IOException(text + \" is less than the required minimum \" +\n                             minReplication);\n   }\n\\ No newline at end of file\n",
          "actualSource": "   void verifyReplication(String src,\n                          short replication,\n                          String clientName) throws IOException {\n\n    if (replication \u003e\u003d minReplication \u0026\u0026 replication \u003c\u003d maxReplication) {\n      //common case. avoid building \u0027text\u0027\n      return;\n    }\n    \n    String text \u003d \"file \" + src \n      + ((clientName !\u003d null) ? \" on client \" + clientName : \"\")\n      + \".\\n\"\n      + \"Requested replication \" + replication;\n\n    if (replication \u003e maxReplication)\n      throw new IOException(text + \" exceeds maximum \" + maxReplication);\n\n    if (replication \u003c minReplication)\n      throw new IOException(text + \" is less than the required minimum \" +\n                            minReplication);\n  }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/BlockManager.java",
          "extendedDetails": {
            "oldValue": "[public]",
            "newValue": "[]"
          }
        }
      ]
    },
    "1bcfe45e47775b98cce5541f328c4fd46e5eb13d": {
      "type": "Ymultichange(Yfilerename,Ymodifierchange)",
      "commitMessage": "HDFS-2106. Move block management code from o.a.h.h.s.namenode to a new package o.a.h.h.s.blockmanagement.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1140909 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/06/11 4:43 PM",
      "commitName": "1bcfe45e47775b98cce5541f328c4fd46e5eb13d",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "HDFS-2106. Move block management code from o.a.h.h.s.namenode to a new package o.a.h.h.s.blockmanagement.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1140909 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "28/06/11 4:43 PM",
          "commitName": "1bcfe45e47775b98cce5541f328c4fd46e5eb13d",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "28/06/11 9:21 AM",
          "commitNameOld": "1834fb99f516b2f2cd5e0ab1f89d407f98a7237a",
          "commitAuthorOld": "Eli Collins",
          "daysBetweenCommits": 0.31,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n-   void verifyReplication(String src,\n+   public void verifyReplication(String src,\n                           short replication,\n                           String clientName) throws IOException {\n \n     if (replication \u003e\u003d minReplication \u0026\u0026 replication \u003c\u003d maxReplication) {\n       //common case. avoid building \u0027text\u0027\n       return;\n     }\n     \n     String text \u003d \"file \" + src \n       + ((clientName !\u003d null) ? \" on client \" + clientName : \"\")\n       + \".\\n\"\n       + \"Requested replication \" + replication;\n \n     if (replication \u003e maxReplication)\n       throw new IOException(text + \" exceeds maximum \" + maxReplication);\n \n     if (replication \u003c minReplication)\n       throw new IOException(text + \" is less than the required minimum \" +\n                             minReplication);\n   }\n\\ No newline at end of file\n",
          "actualSource": "   public void verifyReplication(String src,\n                          short replication,\n                          String clientName) throws IOException {\n\n    if (replication \u003e\u003d minReplication \u0026\u0026 replication \u003c\u003d maxReplication) {\n      //common case. avoid building \u0027text\u0027\n      return;\n    }\n    \n    String text \u003d \"file \" + src \n      + ((clientName !\u003d null) ? \" on client \" + clientName : \"\")\n      + \".\\n\"\n      + \"Requested replication \" + replication;\n\n    if (replication \u003e maxReplication)\n      throw new IOException(text + \" exceeds maximum \" + maxReplication);\n\n    if (replication \u003c minReplication)\n      throw new IOException(text + \" is less than the required minimum \" +\n                            minReplication);\n  }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
          "extendedDetails": {
            "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/BlockManager.java",
            "newPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-2106. Move block management code from o.a.h.h.s.namenode to a new package o.a.h.h.s.blockmanagement.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1140909 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "28/06/11 4:43 PM",
          "commitName": "1bcfe45e47775b98cce5541f328c4fd46e5eb13d",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "28/06/11 9:21 AM",
          "commitNameOld": "1834fb99f516b2f2cd5e0ab1f89d407f98a7237a",
          "commitAuthorOld": "Eli Collins",
          "daysBetweenCommits": 0.31,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n-   void verifyReplication(String src,\n+   public void verifyReplication(String src,\n                           short replication,\n                           String clientName) throws IOException {\n \n     if (replication \u003e\u003d minReplication \u0026\u0026 replication \u003c\u003d maxReplication) {\n       //common case. avoid building \u0027text\u0027\n       return;\n     }\n     \n     String text \u003d \"file \" + src \n       + ((clientName !\u003d null) ? \" on client \" + clientName : \"\")\n       + \".\\n\"\n       + \"Requested replication \" + replication;\n \n     if (replication \u003e maxReplication)\n       throw new IOException(text + \" exceeds maximum \" + maxReplication);\n \n     if (replication \u003c minReplication)\n       throw new IOException(text + \" is less than the required minimum \" +\n                             minReplication);\n   }\n\\ No newline at end of file\n",
          "actualSource": "   public void verifyReplication(String src,\n                          short replication,\n                          String clientName) throws IOException {\n\n    if (replication \u003e\u003d minReplication \u0026\u0026 replication \u003c\u003d maxReplication) {\n      //common case. avoid building \u0027text\u0027\n      return;\n    }\n    \n    String text \u003d \"file \" + src \n      + ((clientName !\u003d null) ? \" on client \" + clientName : \"\")\n      + \".\\n\"\n      + \"Requested replication \" + replication;\n\n    if (replication \u003e maxReplication)\n      throw new IOException(text + \" exceeds maximum \" + maxReplication);\n\n    if (replication \u003c minReplication)\n      throw new IOException(text + \" is less than the required minimum \" +\n                            minReplication);\n  }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[public]"
          }
        }
      ]
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,21 @@\n+   void verifyReplication(String src,\n+                          short replication,\n+                          String clientName) throws IOException {\n+\n+    if (replication \u003e\u003d minReplication \u0026\u0026 replication \u003c\u003d maxReplication) {\n+      //common case. avoid building \u0027text\u0027\n+      return;\n+    }\n+    \n+    String text \u003d \"file \" + src \n+      + ((clientName !\u003d null) ? \" on client \" + clientName : \"\")\n+      + \".\\n\"\n+      + \"Requested replication \" + replication;\n+\n+    if (replication \u003e maxReplication)\n+      throw new IOException(text + \" exceeds maximum \" + maxReplication);\n+\n+    if (replication \u003c minReplication)\n+      throw new IOException(text + \" is less than the required minimum \" +\n+                            minReplication);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "   void verifyReplication(String src,\n                          short replication,\n                          String clientName) throws IOException {\n\n    if (replication \u003e\u003d minReplication \u0026\u0026 replication \u003c\u003d maxReplication) {\n      //common case. avoid building \u0027text\u0027\n      return;\n    }\n    \n    String text \u003d \"file \" + src \n      + ((clientName !\u003d null) ? \" on client \" + clientName : \"\")\n      + \".\\n\"\n      + \"Requested replication \" + replication;\n\n    if (replication \u003e maxReplication)\n      throw new IOException(text + \" exceeds maximum \" + maxReplication);\n\n    if (replication \u003c minReplication)\n      throw new IOException(text + \" is less than the required minimum \" +\n                            minReplication);\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/BlockManager.java"
    }
  }
}