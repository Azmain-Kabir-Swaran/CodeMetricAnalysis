{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FlowScanner.java",
  "functionName": "getValueConverter",
  "functionId": "getValueConverter___colQualifierBytes-byte[]",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-server/hadoop-yarn-server-timelineservice-hbase-server-2/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowScanner.java",
  "functionStartLine": 152,
  "functionEndLine": 172,
  "numCommitsSeen": 4,
  "timeTaken": 754,
  "changeHistory": [
    "55ba49dd071b66e72c47a1c41e88b9a5feddf53b"
  ],
  "changeHistoryShort": {
    "55ba49dd071b66e72c47a1c41e88b9a5feddf53b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "55ba49dd071b66e72c47a1c41e88b9a5feddf53b": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7346. Add a profile to allow optional compilation for ATSv2 with HBase-2.0. Contributed by Haibo Chen and Rohith.\n",
      "commitDate": "05/03/18 10:25 PM",
      "commitName": "55ba49dd071b66e72c47a1c41e88b9a5feddf53b",
      "commitAuthor": "Rohith Sharma K S",
      "diff": "@@ -0,0 +1,21 @@\n+  private static ValueConverter getValueConverter(byte[] colQualifierBytes) {\n+    // Iterate over all the column prefixes for flow run table and get the\n+    // appropriate converter for the column qualifier passed if prefix matches.\n+    for (FlowRunColumnPrefix colPrefix : FlowRunColumnPrefix.values()) {\n+      byte[] colPrefixBytes \u003d colPrefix.getColumnPrefixBytes(\"\");\n+      if (Bytes.compareTo(colPrefixBytes, 0, colPrefixBytes.length,\n+          colQualifierBytes, 0, colPrefixBytes.length) \u003d\u003d 0) {\n+        return colPrefix.getValueConverter();\n+      }\n+    }\n+    // Iterate over all the columns for flow run table and get the\n+    // appropriate converter for the column qualifier passed if match occurs.\n+    for (FlowRunColumn column : FlowRunColumn.values()) {\n+      if (Bytes.compareTo(\n+          column.getColumnQualifierBytes(), colQualifierBytes) \u003d\u003d 0) {\n+        return column.getValueConverter();\n+      }\n+    }\n+    // Return generic converter if nothing matches.\n+    return GenericConverter.getInstance();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static ValueConverter getValueConverter(byte[] colQualifierBytes) {\n    // Iterate over all the column prefixes for flow run table and get the\n    // appropriate converter for the column qualifier passed if prefix matches.\n    for (FlowRunColumnPrefix colPrefix : FlowRunColumnPrefix.values()) {\n      byte[] colPrefixBytes \u003d colPrefix.getColumnPrefixBytes(\"\");\n      if (Bytes.compareTo(colPrefixBytes, 0, colPrefixBytes.length,\n          colQualifierBytes, 0, colPrefixBytes.length) \u003d\u003d 0) {\n        return colPrefix.getValueConverter();\n      }\n    }\n    // Iterate over all the columns for flow run table and get the\n    // appropriate converter for the column qualifier passed if match occurs.\n    for (FlowRunColumn column : FlowRunColumn.values()) {\n      if (Bytes.compareTo(\n          column.getColumnQualifierBytes(), colQualifierBytes) \u003d\u003d 0) {\n        return column.getValueConverter();\n      }\n    }\n    // Return generic converter if nothing matches.\n    return GenericConverter.getInstance();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-server/hadoop-yarn-server-timelineservice-hbase-server-2/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/flow/FlowScanner.java"
    }
  }
}