{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Dispatcher.java",
  "functionName": "isGoodBlockCandidate",
  "functionId": "isGoodBlockCandidate___source-StorageGroup__target-StorageGroup__targetStorageType-StorageType__block-DBlock",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Dispatcher.java",
  "functionStartLine": 1292,
  "functionEndLine": 1321,
  "numCommitsSeen": 50,
  "timeTaken": 2531,
  "changeHistory": [
    "ec414600ede8e305c584818565b50e055ea5d2b5",
    "673280df24f0228bf01777035ceeab8807da8c40",
    "5639bf02da716b3ecda785979b3d08cdca15972d",
    "dc27ee9ae9e1d5d8ea081edbcc72d6ed65e0d9fd"
  ],
  "changeHistoryShort": {
    "ec414600ede8e305c584818565b50e055ea5d2b5": "Ybodychange",
    "673280df24f0228bf01777035ceeab8807da8c40": "Ybodychange",
    "5639bf02da716b3ecda785979b3d08cdca15972d": "Ybodychange",
    "dc27ee9ae9e1d5d8ea081edbcc72d6ed65e0d9fd": "Ybodychange"
  },
  "changeHistoryDetails": {
    "ec414600ede8e305c584818565b50e055ea5d2b5": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9007. Fix HDFS Balancer to honor upgrade domain policy. (Ming Ma via lei)\n",
      "commitDate": "04/11/15 10:22 AM",
      "commitName": "ec414600ede8e305c584818565b50e055ea5d2b5",
      "commitAuthor": "Lei Xu",
      "commitDateOld": "02/10/15 12:00 PM",
      "commitNameOld": "1037ee580f87e6bf13155834c36f26794381678b",
      "commitAuthorOld": "Yongjun Zhang",
      "daysBetweenCommits": 32.97,
      "commitsBetweenForRepo": 286,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,30 @@\n   private boolean isGoodBlockCandidate(StorageGroup source, StorageGroup target,\n       StorageType targetStorageType, DBlock block) {\n     if (source.equals(target)) {\n       return false;\n     }\n     if (target.storageType !\u003d targetStorageType) {\n       return false;\n     }\n     // check if the block is moved or not\n     if (movedBlocks.contains(block.getBlock())) {\n       return false;\n     }\n     final DatanodeInfo targetDatanode \u003d target.getDatanodeInfo();\n     if (source.getDatanodeInfo().equals(targetDatanode)) {\n       // the reportedBlock is moved inside same DN\n       return true;\n     }\n \n     // check if block has replica in target node\n     for (StorageGroup blockLocation : block.getLocations()) {\n       if (blockLocation.getDatanodeInfo().equals(targetDatanode)) {\n         return false;\n       }\n     }\n \n-    if (cluster.isNodeGroupAware()\n-        \u0026\u0026 isOnSameNodeGroupWithReplicas(source, target, block)) {\n-      return false;\n-    }\n-    if (reduceNumOfRacks(source, target, block)) {\n+    if (!isGoodBlockCandidateForPlacementPolicy(source, target, block)) {\n       return false;\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean isGoodBlockCandidate(StorageGroup source, StorageGroup target,\n      StorageType targetStorageType, DBlock block) {\n    if (source.equals(target)) {\n      return false;\n    }\n    if (target.storageType !\u003d targetStorageType) {\n      return false;\n    }\n    // check if the block is moved or not\n    if (movedBlocks.contains(block.getBlock())) {\n      return false;\n    }\n    final DatanodeInfo targetDatanode \u003d target.getDatanodeInfo();\n    if (source.getDatanodeInfo().equals(targetDatanode)) {\n      // the reportedBlock is moved inside same DN\n      return true;\n    }\n\n    // check if block has replica in target node\n    for (StorageGroup blockLocation : block.getLocations()) {\n      if (blockLocation.getDatanodeInfo().equals(targetDatanode)) {\n        return false;\n      }\n    }\n\n    if (!isGoodBlockCandidateForPlacementPolicy(source, target, block)) {\n      return false;\n    }\n    return true;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Dispatcher.java",
      "extendedDetails": {}
    },
    "673280df24f0228bf01777035ceeab8807da8c40": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7621. Erasure Coding: update the Balancer/Mover data migration logic. Contributed by Walter Su.\n",
      "commitDate": "03/06/15 11:51 AM",
      "commitName": "673280df24f0228bf01777035ceeab8807da8c40",
      "commitAuthor": "Zhe Zhang",
      "commitDateOld": "05/05/15 3:41 PM",
      "commitNameOld": "4da8490b512a33a255ed27309860859388d7c168",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 28.84,
      "commitsBetweenForRepo": 380,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,34 @@\n   private boolean isGoodBlockCandidate(StorageGroup source, StorageGroup target,\n       StorageType targetStorageType, DBlock block) {\n     if (source.equals(target)) {\n       return false;\n     }\n     if (target.storageType !\u003d targetStorageType) {\n       return false;\n     }\n     // check if the block is moved or not\n     if (movedBlocks.contains(block.getBlock())) {\n       return false;\n     }\n     final DatanodeInfo targetDatanode \u003d target.getDatanodeInfo();\n     if (source.getDatanodeInfo().equals(targetDatanode)) {\n-      // the block is moved inside same DN\n+      // the reportedBlock is moved inside same DN\n       return true;\n     }\n \n     // check if block has replica in target node\n     for (StorageGroup blockLocation : block.getLocations()) {\n       if (blockLocation.getDatanodeInfo().equals(targetDatanode)) {\n         return false;\n       }\n     }\n \n     if (cluster.isNodeGroupAware()\n         \u0026\u0026 isOnSameNodeGroupWithReplicas(source, target, block)) {\n       return false;\n     }\n     if (reduceNumOfRacks(source, target, block)) {\n       return false;\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean isGoodBlockCandidate(StorageGroup source, StorageGroup target,\n      StorageType targetStorageType, DBlock block) {\n    if (source.equals(target)) {\n      return false;\n    }\n    if (target.storageType !\u003d targetStorageType) {\n      return false;\n    }\n    // check if the block is moved or not\n    if (movedBlocks.contains(block.getBlock())) {\n      return false;\n    }\n    final DatanodeInfo targetDatanode \u003d target.getDatanodeInfo();\n    if (source.getDatanodeInfo().equals(targetDatanode)) {\n      // the reportedBlock is moved inside same DN\n      return true;\n    }\n\n    // check if block has replica in target node\n    for (StorageGroup blockLocation : block.getLocations()) {\n      if (blockLocation.getDatanodeInfo().equals(targetDatanode)) {\n        return false;\n      }\n    }\n\n    if (cluster.isNodeGroupAware()\n        \u0026\u0026 isOnSameNodeGroupWithReplicas(source, target, block)) {\n      return false;\n    }\n    if (reduceNumOfRacks(source, target, block)) {\n      return false;\n    }\n    return true;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Dispatcher.java",
      "extendedDetails": {}
    },
    "5639bf02da716b3ecda785979b3d08cdca15972d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8204. Mover/Balancer should not schedule two replicas to the same datanode.  Contributed by Walter Su\n",
      "commitDate": "28/04/15 1:05 PM",
      "commitName": "5639bf02da716b3ecda785979b3d08cdca15972d",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "commitDateOld": "23/04/15 11:55 AM",
      "commitNameOld": "416b84354ebcc6f6f23598a5a254e62eb606680d",
      "commitAuthorOld": "Tsz-Wo Nicholas Sze",
      "daysBetweenCommits": 5.05,
      "commitsBetweenForRepo": 46,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,34 @@\n   private boolean isGoodBlockCandidate(StorageGroup source, StorageGroup target,\n       StorageType targetStorageType, DBlock block) {\n+    if (source.equals(target)) {\n+      return false;\n+    }\n     if (target.storageType !\u003d targetStorageType) {\n       return false;\n     }\n     // check if the block is moved or not\n     if (movedBlocks.contains(block.getBlock())) {\n       return false;\n     }\n-    if (block.isLocatedOn(target)) {\n-      return false;\n+    final DatanodeInfo targetDatanode \u003d target.getDatanodeInfo();\n+    if (source.getDatanodeInfo().equals(targetDatanode)) {\n+      // the block is moved inside same DN\n+      return true;\n     }\n+\n+    // check if block has replica in target node\n+    for (StorageGroup blockLocation : block.getLocations()) {\n+      if (blockLocation.getDatanodeInfo().equals(targetDatanode)) {\n+        return false;\n+      }\n+    }\n+\n     if (cluster.isNodeGroupAware()\n         \u0026\u0026 isOnSameNodeGroupWithReplicas(source, target, block)) {\n       return false;\n     }\n     if (reduceNumOfRacks(source, target, block)) {\n       return false;\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean isGoodBlockCandidate(StorageGroup source, StorageGroup target,\n      StorageType targetStorageType, DBlock block) {\n    if (source.equals(target)) {\n      return false;\n    }\n    if (target.storageType !\u003d targetStorageType) {\n      return false;\n    }\n    // check if the block is moved or not\n    if (movedBlocks.contains(block.getBlock())) {\n      return false;\n    }\n    final DatanodeInfo targetDatanode \u003d target.getDatanodeInfo();\n    if (source.getDatanodeInfo().equals(targetDatanode)) {\n      // the block is moved inside same DN\n      return true;\n    }\n\n    // check if block has replica in target node\n    for (StorageGroup blockLocation : block.getLocations()) {\n      if (blockLocation.getDatanodeInfo().equals(targetDatanode)) {\n        return false;\n      }\n    }\n\n    if (cluster.isNodeGroupAware()\n        \u0026\u0026 isOnSameNodeGroupWithReplicas(source, target, block)) {\n      return false;\n    }\n    if (reduceNumOfRacks(source, target, block)) {\n      return false;\n    }\n    return true;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Dispatcher.java",
      "extendedDetails": {}
    },
    "dc27ee9ae9e1d5d8ea081edbcc72d6ed65e0d9fd": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7039. Archival Storage: fix Balancer tests. Contributed by Tsz Wo Nicholas Sze.\n",
      "commitDate": "11/09/14 2:19 PM",
      "commitName": "dc27ee9ae9e1d5d8ea081edbcc72d6ed65e0d9fd",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "11/09/14 1:04 PM",
      "commitNameOld": "8de20a1987a3ca26eb006cd261d70155b3307db9",
      "commitAuthorOld": "",
      "daysBetweenCommits": 0.05,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,21 @@\n   private boolean isGoodBlockCandidate(StorageGroup source, StorageGroup target,\n       StorageType targetStorageType, DBlock block) {\n     if (target.storageType !\u003d targetStorageType) {\n       return false;\n     }\n-    if (!target.hasSpaceForScheduling(block.getNumBytes())) {\n-      return false;\n-    }\n     // check if the block is moved or not\n     if (movedBlocks.contains(block.getBlock())) {\n       return false;\n     }\n     if (block.isLocatedOn(target)) {\n       return false;\n     }\n     if (cluster.isNodeGroupAware()\n         \u0026\u0026 isOnSameNodeGroupWithReplicas(source, target, block)) {\n       return false;\n     }\n     if (reduceNumOfRacks(source, target, block)) {\n       return false;\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean isGoodBlockCandidate(StorageGroup source, StorageGroup target,\n      StorageType targetStorageType, DBlock block) {\n    if (target.storageType !\u003d targetStorageType) {\n      return false;\n    }\n    // check if the block is moved or not\n    if (movedBlocks.contains(block.getBlock())) {\n      return false;\n    }\n    if (block.isLocatedOn(target)) {\n      return false;\n    }\n    if (cluster.isNodeGroupAware()\n        \u0026\u0026 isOnSameNodeGroupWithReplicas(source, target, block)) {\n      return false;\n    }\n    if (reduceNumOfRacks(source, target, block)) {\n      return false;\n    }\n    return true;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Dispatcher.java",
      "extendedDetails": {}
    }
  }
}