{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Client.java",
  "functionName": "get",
  "functionId": "get___timeout-long__unit-TimeUnit",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Client.java",
  "functionStartLine": 1479,
  "functionEndLine": 1495,
  "numCommitsSeen": 400,
  "timeTaken": 5537,
  "changeHistory": [
    "574dcd34c0da1903d25e37dc5757642a584dc3d0",
    "aa20fa150d522b9fe469dd99a8e24d7e27d888ea",
    "4d36b221a24e3b626bb91093b0bb0fd377061cae",
    "e4450d47f19131818e1c040b6bd8d85ae8250475",
    "42c22f7e3d6e88bf1115f617f6e803288886d1ac",
    "1b9f18623ab55507bea94888317c7d63d0f4a6f2",
    "a62637a413ad88c4273d3251892b8fc1c05afa34"
  ],
  "changeHistoryShort": {
    "574dcd34c0da1903d25e37dc5757642a584dc3d0": "Ymultichange(Yparameterchange,Yexceptionschange,Ybodychange)",
    "aa20fa150d522b9fe469dd99a8e24d7e27d888ea": "Ybodychange",
    "4d36b221a24e3b626bb91093b0bb0fd377061cae": "Ybodychange",
    "e4450d47f19131818e1c040b6bd8d85ae8250475": "Ymultichange(Yparameterchange,Yexceptionschange,Ybodychange)",
    "42c22f7e3d6e88bf1115f617f6e803288886d1ac": "Ymultichange(Yparameterchange,Yexceptionschange,Ybodychange)",
    "1b9f18623ab55507bea94888317c7d63d0f4a6f2": "Ybodychange",
    "a62637a413ad88c4273d3251892b8fc1c05afa34": "Yintroduced"
  },
  "changeHistoryDetails": {
    "574dcd34c0da1903d25e37dc5757642a584dc3d0": {
      "type": "Ymultichange(Yparameterchange,Yexceptionschange,Ybodychange)",
      "commitMessage": "Revert \"Revert \"HADOOP-13168. Support Future.get with timeout in ipc async calls.\"\"\n\nThis reverts commit e4450d47f19131818e1c040b6bd8d85ae8250475.\n",
      "commitDate": "06/06/16 1:31 AM",
      "commitName": "574dcd34c0da1903d25e37dc5757642a584dc3d0",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Revert \"Revert \"HADOOP-13168. Support Future.get with timeout in ipc async calls.\"\"\n\nThis reverts commit e4450d47f19131818e1c040b6bd8d85ae8250475.\n",
          "commitDate": "06/06/16 1:31 AM",
          "commitName": "574dcd34c0da1903d25e37dc5757642a584dc3d0",
          "commitAuthor": "Tsz-Wo Nicholas Sze",
          "commitDateOld": "06/06/16 1:28 AM",
          "commitNameOld": "aa20fa150d522b9fe469dd99a8e24d7e27d888ea",
          "commitAuthorOld": "Tsz-Wo Nicholas Sze",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,17 @@\n-        public Writable get() throws InterruptedException, ExecutionException {\n-          if (callled.compareAndSet(false, true)) {\n-            try {\n-              set(getRpcResponse(call, connection));\n-            } catch (IOException ie) {\n-              setException(ie);\n-            } finally {\n+        public Writable get(long timeout, TimeUnit unit)\n+            throws IOException, TimeoutException{\n+          boolean done \u003d true;\n+          try {\n+            final Writable w \u003d getRpcResponse(call, connection, timeout, unit);\n+            if (w \u003d\u003d null) {\n+              done \u003d false;\n+              throw new TimeoutException(call + \" timed out \"\n+                  + timeout + \" \" + unit);\n+            }\n+            return w;\n+          } finally {\n+            if (done) {\n               releaseAsyncCall();\n             }\n           }\n-          return super.get();\n         }\n\\ No newline at end of file\n",
          "actualSource": "        public Writable get(long timeout, TimeUnit unit)\n            throws IOException, TimeoutException{\n          boolean done \u003d true;\n          try {\n            final Writable w \u003d getRpcResponse(call, connection, timeout, unit);\n            if (w \u003d\u003d null) {\n              done \u003d false;\n              throw new TimeoutException(call + \" timed out \"\n                  + timeout + \" \" + unit);\n            }\n            return w;\n          } finally {\n            if (done) {\n              releaseAsyncCall();\n            }\n          }\n        }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Client.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[timeout-long, unit-TimeUnit]"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "Revert \"Revert \"HADOOP-13168. Support Future.get with timeout in ipc async calls.\"\"\n\nThis reverts commit e4450d47f19131818e1c040b6bd8d85ae8250475.\n",
          "commitDate": "06/06/16 1:31 AM",
          "commitName": "574dcd34c0da1903d25e37dc5757642a584dc3d0",
          "commitAuthor": "Tsz-Wo Nicholas Sze",
          "commitDateOld": "06/06/16 1:28 AM",
          "commitNameOld": "aa20fa150d522b9fe469dd99a8e24d7e27d888ea",
          "commitAuthorOld": "Tsz-Wo Nicholas Sze",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,17 @@\n-        public Writable get() throws InterruptedException, ExecutionException {\n-          if (callled.compareAndSet(false, true)) {\n-            try {\n-              set(getRpcResponse(call, connection));\n-            } catch (IOException ie) {\n-              setException(ie);\n-            } finally {\n+        public Writable get(long timeout, TimeUnit unit)\n+            throws IOException, TimeoutException{\n+          boolean done \u003d true;\n+          try {\n+            final Writable w \u003d getRpcResponse(call, connection, timeout, unit);\n+            if (w \u003d\u003d null) {\n+              done \u003d false;\n+              throw new TimeoutException(call + \" timed out \"\n+                  + timeout + \" \" + unit);\n+            }\n+            return w;\n+          } finally {\n+            if (done) {\n               releaseAsyncCall();\n             }\n           }\n-          return super.get();\n         }\n\\ No newline at end of file\n",
          "actualSource": "        public Writable get(long timeout, TimeUnit unit)\n            throws IOException, TimeoutException{\n          boolean done \u003d true;\n          try {\n            final Writable w \u003d getRpcResponse(call, connection, timeout, unit);\n            if (w \u003d\u003d null) {\n              done \u003d false;\n              throw new TimeoutException(call + \" timed out \"\n                  + timeout + \" \" + unit);\n            }\n            return w;\n          } finally {\n            if (done) {\n              releaseAsyncCall();\n            }\n          }\n        }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Client.java",
          "extendedDetails": {
            "oldValue": "[InterruptedException, ExecutionException]",
            "newValue": "[IOException, TimeoutException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Revert \"Revert \"HADOOP-13168. Support Future.get with timeout in ipc async calls.\"\"\n\nThis reverts commit e4450d47f19131818e1c040b6bd8d85ae8250475.\n",
          "commitDate": "06/06/16 1:31 AM",
          "commitName": "574dcd34c0da1903d25e37dc5757642a584dc3d0",
          "commitAuthor": "Tsz-Wo Nicholas Sze",
          "commitDateOld": "06/06/16 1:28 AM",
          "commitNameOld": "aa20fa150d522b9fe469dd99a8e24d7e27d888ea",
          "commitAuthorOld": "Tsz-Wo Nicholas Sze",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,17 @@\n-        public Writable get() throws InterruptedException, ExecutionException {\n-          if (callled.compareAndSet(false, true)) {\n-            try {\n-              set(getRpcResponse(call, connection));\n-            } catch (IOException ie) {\n-              setException(ie);\n-            } finally {\n+        public Writable get(long timeout, TimeUnit unit)\n+            throws IOException, TimeoutException{\n+          boolean done \u003d true;\n+          try {\n+            final Writable w \u003d getRpcResponse(call, connection, timeout, unit);\n+            if (w \u003d\u003d null) {\n+              done \u003d false;\n+              throw new TimeoutException(call + \" timed out \"\n+                  + timeout + \" \" + unit);\n+            }\n+            return w;\n+          } finally {\n+            if (done) {\n               releaseAsyncCall();\n             }\n           }\n-          return super.get();\n         }\n\\ No newline at end of file\n",
          "actualSource": "        public Writable get(long timeout, TimeUnit unit)\n            throws IOException, TimeoutException{\n          boolean done \u003d true;\n          try {\n            final Writable w \u003d getRpcResponse(call, connection, timeout, unit);\n            if (w \u003d\u003d null) {\n              done \u003d false;\n              throw new TimeoutException(call + \" timed out \"\n                  + timeout + \" \" + unit);\n            }\n            return w;\n          } finally {\n            if (done) {\n              releaseAsyncCall();\n            }\n          }\n        }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Client.java",
          "extendedDetails": {}
        }
      ]
    },
    "aa20fa150d522b9fe469dd99a8e24d7e27d888ea": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"Revert \"HADOOP-12957. Limit the number of outstanding async calls.  Contributed by Xiaobing Zhou\"\"\n\nThis reverts commit 4d36b221a24e3b626bb91093b0bb0fd377061cae.\n",
      "commitDate": "06/06/16 1:28 AM",
      "commitName": "aa20fa150d522b9fe469dd99a8e24d7e27d888ea",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "commitDateOld": "06/06/16 1:28 AM",
      "commitNameOld": "eded3d109e4c5225d8c5cd3c2d82e7ac93841263",
      "commitAuthorOld": "Tsz-Wo Nicholas Sze",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,12 @@\n         public Writable get() throws InterruptedException, ExecutionException {\n-          try {\n-            set(getRpcResponse(call, connection));\n-          } catch (IOException ie) {\n-            setException(ie);\n+          if (callled.compareAndSet(false, true)) {\n+            try {\n+              set(getRpcResponse(call, connection));\n+            } catch (IOException ie) {\n+              setException(ie);\n+            } finally {\n+              releaseAsyncCall();\n+            }\n           }\n           return super.get();\n         }\n\\ No newline at end of file\n",
      "actualSource": "        public Writable get() throws InterruptedException, ExecutionException {\n          if (callled.compareAndSet(false, true)) {\n            try {\n              set(getRpcResponse(call, connection));\n            } catch (IOException ie) {\n              setException(ie);\n            } finally {\n              releaseAsyncCall();\n            }\n          }\n          return super.get();\n        }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Client.java",
      "extendedDetails": {}
    },
    "4d36b221a24e3b626bb91093b0bb0fd377061cae": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"HADOOP-12957. Limit the number of outstanding async calls.  Contributed by Xiaobing Zhou\"\n\nThis reverts commit 1b9f18623ab55507bea94888317c7d63d0f4a6f2.\n",
      "commitDate": "03/06/16 6:09 PM",
      "commitName": "4d36b221a24e3b626bb91093b0bb0fd377061cae",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "03/06/16 6:09 PM",
      "commitNameOld": "e4450d47f19131818e1c040b6bd8d85ae8250475",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,8 @@\n         public Writable get() throws InterruptedException, ExecutionException {\n-          if (callled.compareAndSet(false, true)) {\n-            try {\n-              set(getRpcResponse(call, connection));\n-            } catch (IOException ie) {\n-              setException(ie);\n-            } finally {\n-              releaseAsyncCall();\n-            }\n+          try {\n+            set(getRpcResponse(call, connection));\n+          } catch (IOException ie) {\n+            setException(ie);\n           }\n           return super.get();\n         }\n\\ No newline at end of file\n",
      "actualSource": "        public Writable get() throws InterruptedException, ExecutionException {\n          try {\n            set(getRpcResponse(call, connection));\n          } catch (IOException ie) {\n            setException(ie);\n          }\n          return super.get();\n        }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Client.java",
      "extendedDetails": {}
    },
    "e4450d47f19131818e1c040b6bd8d85ae8250475": {
      "type": "Ymultichange(Yparameterchange,Yexceptionschange,Ybodychange)",
      "commitMessage": "Revert \"HADOOP-13168. Support Future.get with timeout in ipc async calls.\"\n\nThis reverts commit 42c22f7e3d6e88bf1115f617f6e803288886d1ac.\n",
      "commitDate": "03/06/16 6:09 PM",
      "commitName": "e4450d47f19131818e1c040b6bd8d85ae8250475",
      "commitAuthor": "Andrew Wang",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Revert \"HADOOP-13168. Support Future.get with timeout in ipc async calls.\"\n\nThis reverts commit 42c22f7e3d6e88bf1115f617f6e803288886d1ac.\n",
          "commitDate": "03/06/16 6:09 PM",
          "commitName": "e4450d47f19131818e1c040b6bd8d85ae8250475",
          "commitAuthor": "Andrew Wang",
          "commitDateOld": "03/06/16 6:09 PM",
          "commitNameOld": "5360da8bd9f720384860f411bee081aef13b4bd4",
          "commitAuthorOld": "Andrew Wang",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 4,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,12 @@\n-        public Writable get(long timeout, TimeUnit unit)\n-            throws IOException, TimeoutException{\n-          boolean done \u003d true;\n-          try {\n-            final Writable w \u003d getRpcResponse(call, connection, timeout, unit);\n-            if (w \u003d\u003d null) {\n-              done \u003d false;\n-              throw new TimeoutException(call + \" timed out \"\n-                  + timeout + \" \" + unit);\n-            }\n-            return w;\n-          } finally {\n-            if (done) {\n+        public Writable get() throws InterruptedException, ExecutionException {\n+          if (callled.compareAndSet(false, true)) {\n+            try {\n+              set(getRpcResponse(call, connection));\n+            } catch (IOException ie) {\n+              setException(ie);\n+            } finally {\n               releaseAsyncCall();\n             }\n           }\n+          return super.get();\n         }\n\\ No newline at end of file\n",
          "actualSource": "        public Writable get() throws InterruptedException, ExecutionException {\n          if (callled.compareAndSet(false, true)) {\n            try {\n              set(getRpcResponse(call, connection));\n            } catch (IOException ie) {\n              setException(ie);\n            } finally {\n              releaseAsyncCall();\n            }\n          }\n          return super.get();\n        }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Client.java",
          "extendedDetails": {
            "oldValue": "[timeout-long, unit-TimeUnit]",
            "newValue": "[]"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "Revert \"HADOOP-13168. Support Future.get with timeout in ipc async calls.\"\n\nThis reverts commit 42c22f7e3d6e88bf1115f617f6e803288886d1ac.\n",
          "commitDate": "03/06/16 6:09 PM",
          "commitName": "e4450d47f19131818e1c040b6bd8d85ae8250475",
          "commitAuthor": "Andrew Wang",
          "commitDateOld": "03/06/16 6:09 PM",
          "commitNameOld": "5360da8bd9f720384860f411bee081aef13b4bd4",
          "commitAuthorOld": "Andrew Wang",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 4,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,12 @@\n-        public Writable get(long timeout, TimeUnit unit)\n-            throws IOException, TimeoutException{\n-          boolean done \u003d true;\n-          try {\n-            final Writable w \u003d getRpcResponse(call, connection, timeout, unit);\n-            if (w \u003d\u003d null) {\n-              done \u003d false;\n-              throw new TimeoutException(call + \" timed out \"\n-                  + timeout + \" \" + unit);\n-            }\n-            return w;\n-          } finally {\n-            if (done) {\n+        public Writable get() throws InterruptedException, ExecutionException {\n+          if (callled.compareAndSet(false, true)) {\n+            try {\n+              set(getRpcResponse(call, connection));\n+            } catch (IOException ie) {\n+              setException(ie);\n+            } finally {\n               releaseAsyncCall();\n             }\n           }\n+          return super.get();\n         }\n\\ No newline at end of file\n",
          "actualSource": "        public Writable get() throws InterruptedException, ExecutionException {\n          if (callled.compareAndSet(false, true)) {\n            try {\n              set(getRpcResponse(call, connection));\n            } catch (IOException ie) {\n              setException(ie);\n            } finally {\n              releaseAsyncCall();\n            }\n          }\n          return super.get();\n        }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Client.java",
          "extendedDetails": {
            "oldValue": "[IOException, TimeoutException]",
            "newValue": "[InterruptedException, ExecutionException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Revert \"HADOOP-13168. Support Future.get with timeout in ipc async calls.\"\n\nThis reverts commit 42c22f7e3d6e88bf1115f617f6e803288886d1ac.\n",
          "commitDate": "03/06/16 6:09 PM",
          "commitName": "e4450d47f19131818e1c040b6bd8d85ae8250475",
          "commitAuthor": "Andrew Wang",
          "commitDateOld": "03/06/16 6:09 PM",
          "commitNameOld": "5360da8bd9f720384860f411bee081aef13b4bd4",
          "commitAuthorOld": "Andrew Wang",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 4,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,12 @@\n-        public Writable get(long timeout, TimeUnit unit)\n-            throws IOException, TimeoutException{\n-          boolean done \u003d true;\n-          try {\n-            final Writable w \u003d getRpcResponse(call, connection, timeout, unit);\n-            if (w \u003d\u003d null) {\n-              done \u003d false;\n-              throw new TimeoutException(call + \" timed out \"\n-                  + timeout + \" \" + unit);\n-            }\n-            return w;\n-          } finally {\n-            if (done) {\n+        public Writable get() throws InterruptedException, ExecutionException {\n+          if (callled.compareAndSet(false, true)) {\n+            try {\n+              set(getRpcResponse(call, connection));\n+            } catch (IOException ie) {\n+              setException(ie);\n+            } finally {\n               releaseAsyncCall();\n             }\n           }\n+          return super.get();\n         }\n\\ No newline at end of file\n",
          "actualSource": "        public Writable get() throws InterruptedException, ExecutionException {\n          if (callled.compareAndSet(false, true)) {\n            try {\n              set(getRpcResponse(call, connection));\n            } catch (IOException ie) {\n              setException(ie);\n            } finally {\n              releaseAsyncCall();\n            }\n          }\n          return super.get();\n        }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Client.java",
          "extendedDetails": {}
        }
      ]
    },
    "42c22f7e3d6e88bf1115f617f6e803288886d1ac": {
      "type": "Ymultichange(Yparameterchange,Yexceptionschange,Ybodychange)",
      "commitMessage": "HADOOP-13168. Support Future.get with timeout in ipc async calls.\n",
      "commitDate": "19/05/16 3:34 PM",
      "commitName": "42c22f7e3d6e88bf1115f617f6e803288886d1ac",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-13168. Support Future.get with timeout in ipc async calls.\n",
          "commitDate": "19/05/16 3:34 PM",
          "commitName": "42c22f7e3d6e88bf1115f617f6e803288886d1ac",
          "commitAuthor": "Tsz-Wo Nicholas Sze",
          "commitDateOld": "02/05/16 11:16 AM",
          "commitNameOld": "1b9f18623ab55507bea94888317c7d63d0f4a6f2",
          "commitAuthorOld": "Tsz-Wo Nicholas Sze",
          "daysBetweenCommits": 17.18,
          "commitsBetweenForRepo": 134,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,17 @@\n-        public Writable get() throws InterruptedException, ExecutionException {\n-          if (callled.compareAndSet(false, true)) {\n-            try {\n-              set(getRpcResponse(call, connection));\n-            } catch (IOException ie) {\n-              setException(ie);\n-            } finally {\n+        public Writable get(long timeout, TimeUnit unit)\n+            throws IOException, TimeoutException{\n+          boolean done \u003d true;\n+          try {\n+            final Writable w \u003d getRpcResponse(call, connection, timeout, unit);\n+            if (w \u003d\u003d null) {\n+              done \u003d false;\n+              throw new TimeoutException(call + \" timed out \"\n+                  + timeout + \" \" + unit);\n+            }\n+            return w;\n+          } finally {\n+            if (done) {\n               releaseAsyncCall();\n             }\n           }\n-          return super.get();\n         }\n\\ No newline at end of file\n",
          "actualSource": "        public Writable get(long timeout, TimeUnit unit)\n            throws IOException, TimeoutException{\n          boolean done \u003d true;\n          try {\n            final Writable w \u003d getRpcResponse(call, connection, timeout, unit);\n            if (w \u003d\u003d null) {\n              done \u003d false;\n              throw new TimeoutException(call + \" timed out \"\n                  + timeout + \" \" + unit);\n            }\n            return w;\n          } finally {\n            if (done) {\n              releaseAsyncCall();\n            }\n          }\n        }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Client.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[timeout-long, unit-TimeUnit]"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "HADOOP-13168. Support Future.get with timeout in ipc async calls.\n",
          "commitDate": "19/05/16 3:34 PM",
          "commitName": "42c22f7e3d6e88bf1115f617f6e803288886d1ac",
          "commitAuthor": "Tsz-Wo Nicholas Sze",
          "commitDateOld": "02/05/16 11:16 AM",
          "commitNameOld": "1b9f18623ab55507bea94888317c7d63d0f4a6f2",
          "commitAuthorOld": "Tsz-Wo Nicholas Sze",
          "daysBetweenCommits": 17.18,
          "commitsBetweenForRepo": 134,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,17 @@\n-        public Writable get() throws InterruptedException, ExecutionException {\n-          if (callled.compareAndSet(false, true)) {\n-            try {\n-              set(getRpcResponse(call, connection));\n-            } catch (IOException ie) {\n-              setException(ie);\n-            } finally {\n+        public Writable get(long timeout, TimeUnit unit)\n+            throws IOException, TimeoutException{\n+          boolean done \u003d true;\n+          try {\n+            final Writable w \u003d getRpcResponse(call, connection, timeout, unit);\n+            if (w \u003d\u003d null) {\n+              done \u003d false;\n+              throw new TimeoutException(call + \" timed out \"\n+                  + timeout + \" \" + unit);\n+            }\n+            return w;\n+          } finally {\n+            if (done) {\n               releaseAsyncCall();\n             }\n           }\n-          return super.get();\n         }\n\\ No newline at end of file\n",
          "actualSource": "        public Writable get(long timeout, TimeUnit unit)\n            throws IOException, TimeoutException{\n          boolean done \u003d true;\n          try {\n            final Writable w \u003d getRpcResponse(call, connection, timeout, unit);\n            if (w \u003d\u003d null) {\n              done \u003d false;\n              throw new TimeoutException(call + \" timed out \"\n                  + timeout + \" \" + unit);\n            }\n            return w;\n          } finally {\n            if (done) {\n              releaseAsyncCall();\n            }\n          }\n        }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Client.java",
          "extendedDetails": {
            "oldValue": "[InterruptedException, ExecutionException]",
            "newValue": "[IOException, TimeoutException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-13168. Support Future.get with timeout in ipc async calls.\n",
          "commitDate": "19/05/16 3:34 PM",
          "commitName": "42c22f7e3d6e88bf1115f617f6e803288886d1ac",
          "commitAuthor": "Tsz-Wo Nicholas Sze",
          "commitDateOld": "02/05/16 11:16 AM",
          "commitNameOld": "1b9f18623ab55507bea94888317c7d63d0f4a6f2",
          "commitAuthorOld": "Tsz-Wo Nicholas Sze",
          "daysBetweenCommits": 17.18,
          "commitsBetweenForRepo": 134,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,17 @@\n-        public Writable get() throws InterruptedException, ExecutionException {\n-          if (callled.compareAndSet(false, true)) {\n-            try {\n-              set(getRpcResponse(call, connection));\n-            } catch (IOException ie) {\n-              setException(ie);\n-            } finally {\n+        public Writable get(long timeout, TimeUnit unit)\n+            throws IOException, TimeoutException{\n+          boolean done \u003d true;\n+          try {\n+            final Writable w \u003d getRpcResponse(call, connection, timeout, unit);\n+            if (w \u003d\u003d null) {\n+              done \u003d false;\n+              throw new TimeoutException(call + \" timed out \"\n+                  + timeout + \" \" + unit);\n+            }\n+            return w;\n+          } finally {\n+            if (done) {\n               releaseAsyncCall();\n             }\n           }\n-          return super.get();\n         }\n\\ No newline at end of file\n",
          "actualSource": "        public Writable get(long timeout, TimeUnit unit)\n            throws IOException, TimeoutException{\n          boolean done \u003d true;\n          try {\n            final Writable w \u003d getRpcResponse(call, connection, timeout, unit);\n            if (w \u003d\u003d null) {\n              done \u003d false;\n              throw new TimeoutException(call + \" timed out \"\n                  + timeout + \" \" + unit);\n            }\n            return w;\n          } finally {\n            if (done) {\n              releaseAsyncCall();\n            }\n          }\n        }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Client.java",
          "extendedDetails": {}
        }
      ]
    },
    "1b9f18623ab55507bea94888317c7d63d0f4a6f2": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12957. Limit the number of outstanding async calls.  Contributed by Xiaobing Zhou\n",
      "commitDate": "02/05/16 11:16 AM",
      "commitName": "1b9f18623ab55507bea94888317c7d63d0f4a6f2",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "commitDateOld": "26/04/16 5:10 PM",
      "commitNameOld": "fc94810d3f537e51e826fc21ade7867892b9d8dc",
      "commitAuthorOld": "Tsz-Wo Nicholas Sze",
      "daysBetweenCommits": 5.75,
      "commitsBetweenForRepo": 29,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,12 @@\n         public Writable get() throws InterruptedException, ExecutionException {\n-          try {\n-            set(getRpcResponse(call, connection));\n-          } catch (IOException ie) {\n-            setException(ie);\n+          if (callled.compareAndSet(false, true)) {\n+            try {\n+              set(getRpcResponse(call, connection));\n+            } catch (IOException ie) {\n+              setException(ie);\n+            } finally {\n+              releaseAsyncCall();\n+            }\n           }\n           return super.get();\n         }\n\\ No newline at end of file\n",
      "actualSource": "        public Writable get() throws InterruptedException, ExecutionException {\n          if (callled.compareAndSet(false, true)) {\n            try {\n              set(getRpcResponse(call, connection));\n            } catch (IOException ie) {\n              setException(ie);\n            } finally {\n              releaseAsyncCall();\n            }\n          }\n          return super.get();\n        }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Client.java",
      "extendedDetails": {}
    },
    "a62637a413ad88c4273d3251892b8fc1c05afa34": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-12909. Change ipc.Client to support asynchronous calls.  Contributed by  Xiaobing Zhou\n",
      "commitDate": "06/04/16 11:02 PM",
      "commitName": "a62637a413ad88c4273d3251892b8fc1c05afa34",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "diff": "@@ -0,0 +1,8 @@\n+        public Writable get() throws InterruptedException, ExecutionException {\n+          try {\n+            set(getRpcResponse(call, connection));\n+          } catch (IOException ie) {\n+            setException(ie);\n+          }\n+          return super.get();\n+        }\n\\ No newline at end of file\n",
      "actualSource": "        public Writable get() throws InterruptedException, ExecutionException {\n          try {\n            set(getRpcResponse(call, connection));\n          } catch (IOException ie) {\n            setException(ie);\n          }\n          return super.get();\n        }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Client.java"
    }
  }
}