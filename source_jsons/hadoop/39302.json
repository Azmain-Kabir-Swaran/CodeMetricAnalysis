{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CapacityScheduler.java",
  "functionName": "updateNodeLabelsAndQueueResource",
  "functionId": "updateNodeLabelsAndQueueResource___labelUpdateEvent-NodeLabelsUpdateSchedulerEvent",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
  "functionStartLine": 1994,
  "functionEndLine": 2019,
  "numCommitsSeen": 239,
  "timeTaken": 5362,
  "changeHistory": [
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
    "9c3fc3ef2865164aa5f121793ac914cfeb21a181",
    "69fb70c31aa277f7fb14b05c0185ddc5cd90793d",
    "7d2d8d25ba0cb10a3c6192d4123f27ede5ef2ba6"
  ],
  "changeHistoryShort": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": "Ybodychange",
    "9c3fc3ef2865164aa5f121793ac914cfeb21a181": "Ybodychange",
    "69fb70c31aa277f7fb14b05c0185ddc5cd90793d": "Ybodychange",
    "7d2d8d25ba0cb10a3c6192d4123f27ede5ef2ba6": "Yintroduced"
  },
  "changeHistoryDetails": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9341.  Fixed enentrant lock usage in YARN project.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "07/03/19 1:47 PM",
      "commitName": "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "04/03/19 9:10 PM",
      "commitNameOld": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
      "commitAuthorOld": "Prabhu Joseph",
      "daysBetweenCommits": 2.69,
      "commitsBetweenForRepo": 39,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n   private void updateNodeLabelsAndQueueResource(\n       NodeLabelsUpdateSchedulerEvent labelUpdateEvent) {\n+    writeLock.lock();\n     try {\n-      writeLock.lock();\n       Set\u003cString\u003e updateLabels \u003d new HashSet\u003cString\u003e();\n       for (Entry\u003cNodeId, Set\u003cString\u003e\u003e entry : labelUpdateEvent\n           .getUpdatedNodeToLabels().entrySet()) {\n         NodeId id \u003d entry.getKey();\n         Set\u003cString\u003e labels \u003d entry.getValue();\n         FiCaSchedulerNode node \u003d nodeTracker.getNode(id);\n \n         if (node !\u003d null) {\n           // Update old partition to list.\n           updateLabels.add(node.getPartition());\n         }\n         updateLabelsOnNode(id, labels);\n         updateLabels.addAll(labels);\n       }\n       refreshLabelToNodeCache(updateLabels);\n       Resource clusterResource \u003d getClusterResource();\n       getRootQueue().updateClusterResource(clusterResource,\n           new ResourceLimits(clusterResource));\n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void updateNodeLabelsAndQueueResource(\n      NodeLabelsUpdateSchedulerEvent labelUpdateEvent) {\n    writeLock.lock();\n    try {\n      Set\u003cString\u003e updateLabels \u003d new HashSet\u003cString\u003e();\n      for (Entry\u003cNodeId, Set\u003cString\u003e\u003e entry : labelUpdateEvent\n          .getUpdatedNodeToLabels().entrySet()) {\n        NodeId id \u003d entry.getKey();\n        Set\u003cString\u003e labels \u003d entry.getValue();\n        FiCaSchedulerNode node \u003d nodeTracker.getNode(id);\n\n        if (node !\u003d null) {\n          // Update old partition to list.\n          updateLabels.add(node.getPartition());\n        }\n        updateLabelsOnNode(id, labels);\n        updateLabels.addAll(labels);\n      }\n      refreshLabelToNodeCache(updateLabels);\n      Resource clusterResource \u003d getClusterResource();\n      getRootQueue().updateClusterResource(clusterResource,\n          new ResourceLimits(clusterResource));\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
      "extendedDetails": {}
    },
    "9c3fc3ef2865164aa5f121793ac914cfeb21a181": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7494. Add muti-node lookup mechanism and pluggable nodes sorting policies to optimize placement decision. Contributed by Sunil Govindan.\n",
      "commitDate": "21/08/18 7:42 AM",
      "commitName": "9c3fc3ef2865164aa5f121793ac914cfeb21a181",
      "commitAuthor": "Weiwei Yang",
      "commitDateOld": "31/07/18 8:03 PM",
      "commitNameOld": "6310c0d17d6422a595f856a55b4f1fb82be43739",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 20.49,
      "commitsBetweenForRepo": 195,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,26 @@\n   private void updateNodeLabelsAndQueueResource(\n       NodeLabelsUpdateSchedulerEvent labelUpdateEvent) {\n     try {\n       writeLock.lock();\n+      Set\u003cString\u003e updateLabels \u003d new HashSet\u003cString\u003e();\n       for (Entry\u003cNodeId, Set\u003cString\u003e\u003e entry : labelUpdateEvent\n           .getUpdatedNodeToLabels().entrySet()) {\n         NodeId id \u003d entry.getKey();\n         Set\u003cString\u003e labels \u003d entry.getValue();\n+        FiCaSchedulerNode node \u003d nodeTracker.getNode(id);\n+\n+        if (node !\u003d null) {\n+          // Update old partition to list.\n+          updateLabels.add(node.getPartition());\n+        }\n         updateLabelsOnNode(id, labels);\n+        updateLabels.addAll(labels);\n       }\n+      refreshLabelToNodeCache(updateLabels);\n       Resource clusterResource \u003d getClusterResource();\n       getRootQueue().updateClusterResource(clusterResource,\n           new ResourceLimits(clusterResource));\n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void updateNodeLabelsAndQueueResource(\n      NodeLabelsUpdateSchedulerEvent labelUpdateEvent) {\n    try {\n      writeLock.lock();\n      Set\u003cString\u003e updateLabels \u003d new HashSet\u003cString\u003e();\n      for (Entry\u003cNodeId, Set\u003cString\u003e\u003e entry : labelUpdateEvent\n          .getUpdatedNodeToLabels().entrySet()) {\n        NodeId id \u003d entry.getKey();\n        Set\u003cString\u003e labels \u003d entry.getValue();\n        FiCaSchedulerNode node \u003d nodeTracker.getNode(id);\n\n        if (node !\u003d null) {\n          // Update old partition to list.\n          updateLabels.add(node.getPartition());\n        }\n        updateLabelsOnNode(id, labels);\n        updateLabels.addAll(labels);\n      }\n      refreshLabelToNodeCache(updateLabels);\n      Resource clusterResource \u003d getClusterResource();\n      getRootQueue().updateClusterResource(clusterResource,\n          new ResourceLimits(clusterResource));\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
      "extendedDetails": {}
    },
    "69fb70c31aa277f7fb14b05c0185ddc5cd90793d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5761. Separate QueueManager from Scheduler. (Xuan Gong via gtcarrera9)\n",
      "commitDate": "30/11/16 1:38 PM",
      "commitName": "69fb70c31aa277f7fb14b05c0185ddc5cd90793d",
      "commitAuthor": "Li Lu",
      "commitDateOld": "29/11/16 9:40 AM",
      "commitNameOld": "25f9872be63423ada6a18481eaad2888e731fdac",
      "commitAuthorOld": "Daniel Templeton",
      "daysBetweenCommits": 1.17,
      "commitsBetweenForRepo": 16,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   private void updateNodeLabelsAndQueueResource(\n       NodeLabelsUpdateSchedulerEvent labelUpdateEvent) {\n     try {\n       writeLock.lock();\n       for (Entry\u003cNodeId, Set\u003cString\u003e\u003e entry : labelUpdateEvent\n           .getUpdatedNodeToLabels().entrySet()) {\n         NodeId id \u003d entry.getKey();\n         Set\u003cString\u003e labels \u003d entry.getValue();\n         updateLabelsOnNode(id, labels);\n       }\n       Resource clusterResource \u003d getClusterResource();\n-      root.updateClusterResource(clusterResource,\n+      getRootQueue().updateClusterResource(clusterResource,\n           new ResourceLimits(clusterResource));\n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void updateNodeLabelsAndQueueResource(\n      NodeLabelsUpdateSchedulerEvent labelUpdateEvent) {\n    try {\n      writeLock.lock();\n      for (Entry\u003cNodeId, Set\u003cString\u003e\u003e entry : labelUpdateEvent\n          .getUpdatedNodeToLabels().entrySet()) {\n        NodeId id \u003d entry.getKey();\n        Set\u003cString\u003e labels \u003d entry.getValue();\n        updateLabelsOnNode(id, labels);\n      }\n      Resource clusterResource \u003d getClusterResource();\n      getRootQueue().updateClusterResource(clusterResource,\n          new ResourceLimits(clusterResource));\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java",
      "extendedDetails": {}
    },
    "7d2d8d25ba0cb10a3c6192d4123f27ede5ef2ba6": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5788. Apps not activiated and AM limit resource in UI and REST not updated after -replaceLabelsOnNode (Bibin A Chundatt via Varun Saxena)\n",
      "commitDate": "01/11/16 3:02 AM",
      "commitName": "7d2d8d25ba0cb10a3c6192d4123f27ede5ef2ba6",
      "commitAuthor": "Varun Saxena",
      "diff": "@@ -0,0 +1,17 @@\n+  private void updateNodeLabelsAndQueueResource(\n+      NodeLabelsUpdateSchedulerEvent labelUpdateEvent) {\n+    try {\n+      writeLock.lock();\n+      for (Entry\u003cNodeId, Set\u003cString\u003e\u003e entry : labelUpdateEvent\n+          .getUpdatedNodeToLabels().entrySet()) {\n+        NodeId id \u003d entry.getKey();\n+        Set\u003cString\u003e labels \u003d entry.getValue();\n+        updateLabelsOnNode(id, labels);\n+      }\n+      Resource clusterResource \u003d getClusterResource();\n+      root.updateClusterResource(clusterResource,\n+          new ResourceLimits(clusterResource));\n+    } finally {\n+      writeLock.unlock();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void updateNodeLabelsAndQueueResource(\n      NodeLabelsUpdateSchedulerEvent labelUpdateEvent) {\n    try {\n      writeLock.lock();\n      for (Entry\u003cNodeId, Set\u003cString\u003e\u003e entry : labelUpdateEvent\n          .getUpdatedNodeToLabels().entrySet()) {\n        NodeId id \u003d entry.getKey();\n        Set\u003cString\u003e labels \u003d entry.getValue();\n        updateLabelsOnNode(id, labels);\n      }\n      Resource clusterResource \u003d getClusterResource();\n      root.updateClusterResource(clusterResource,\n          new ResourceLimits(clusterResource));\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java"
    }
  }
}