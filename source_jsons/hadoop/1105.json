{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ShortCircuitShm.java",
  "functionName": "addAnchor",
  "functionId": "addAnchor",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/shortcircuit/ShortCircuitShm.java",
  "functionStartLine": 385,
  "functionEndLine": 404,
  "numCommitsSeen": 11,
  "timeTaken": 2490,
  "changeHistory": [
    "490bb5ebd6c6d6f9c08fcad167f976687fc3aa42",
    "f93d99990a9a02ce693cd74466c2e5f127c1f560",
    "dd049a2f6097da189ccce2f5890a2b9bc77fa73f",
    "140246bad816ae7bf06eda193cc624e1e62923e0"
  ],
  "changeHistoryShort": {
    "490bb5ebd6c6d6f9c08fcad167f976687fc3aa42": "Yfilerename",
    "f93d99990a9a02ce693cd74466c2e5f127c1f560": "Yfilerename",
    "dd049a2f6097da189ccce2f5890a2b9bc77fa73f": "Ymultichange(Ymovefromfile,Ybodychange)",
    "140246bad816ae7bf06eda193cc624e1e62923e0": "Yintroduced"
  },
  "changeHistoryDetails": {
    "490bb5ebd6c6d6f9c08fcad167f976687fc3aa42": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-8934. Move ShortCircuitShm to hdfs-client. Contributed by Mingliang Liu.\n",
      "commitDate": "22/08/15 1:31 PM",
      "commitName": "490bb5ebd6c6d6f9c08fcad167f976687fc3aa42",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "22/08/15 12:39 AM",
      "commitNameOld": "61bf9cae6f3882c6e9a9222f59457b9be91e3018",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 0.54,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public boolean addAnchor() {\n      long prev;\n      do {\n        prev \u003d unsafe.getLongVolatile(null, this.slotAddress);\n        if ((prev \u0026 VALID_FLAG) \u003d\u003d 0) {\n          // Slot is no longer valid.\n          return false;\n        }\n        if ((prev \u0026 ANCHORABLE_FLAG) \u003d\u003d 0) {\n          // Slot can\u0027t be anchored right now.\n          return false;\n        }\n        if ((prev \u0026 0x7fffffff) \u003d\u003d 0x7fffffff) {\n          // Too many other threads have anchored the slot (2 billion?)\n          return false;\n        }\n      } while (!unsafe.compareAndSwapLong(null, this.slotAddress,\n                  prev, prev + 1));\n      return true;\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/shortcircuit/ShortCircuitShm.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/shortcircuit/ShortCircuitShm.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/shortcircuit/ShortCircuitShm.java"
      }
    },
    "f93d99990a9a02ce693cd74466c2e5f127c1f560": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-6167. Relocate the non-public API classes in the hdfs.client package.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1583878 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "01/04/14 10:09 PM",
      "commitName": "f93d99990a9a02ce693cd74466c2e5f127c1f560",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "01/04/14 6:00 PM",
      "commitNameOld": "5c7cb51775bd3d4a6e3e1bd501b3a8d747733fe3",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 0.17,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public boolean addAnchor() {\n      long prev;\n      do {\n        prev \u003d unsafe.getLongVolatile(null, this.slotAddress);\n        if ((prev \u0026 VALID_FLAG) \u003d\u003d 0) {\n          // Slot is no longer valid.\n          return false;\n        }\n        if ((prev \u0026 ANCHORABLE_FLAG) \u003d\u003d 0) {\n          // Slot can\u0027t be anchored right now.\n          return false;\n        }\n        if ((prev \u0026 0x7fffffff) \u003d\u003d 0x7fffffff) {\n          // Too many other threads have anchored the slot (2 billion?)\n          return false;\n        }\n      } while (!unsafe.compareAndSwapLong(null, this.slotAddress,\n                  prev, prev + 1));\n      return true;\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/shortcircuit/ShortCircuitShm.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/ShortCircuitShm.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/shortcircuit/ShortCircuitShm.java"
      }
    },
    "dd049a2f6097da189ccce2f5890a2b9bc77fa73f": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "HDFS-5950. The DFSClient and DataNode should use shared memory segments to communicate short-circuit information (cmccabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1573433 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/03/14 7:58 PM",
      "commitName": "dd049a2f6097da189ccce2f5890a2b9bc77fa73f",
      "commitAuthor": "Colin McCabe",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-5950. The DFSClient and DataNode should use shared memory segments to communicate short-circuit information (cmccabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1573433 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "02/03/14 7:58 PM",
          "commitName": "dd049a2f6097da189ccce2f5890a2b9bc77fa73f",
          "commitAuthor": "Colin McCabe",
          "commitDateOld": "01/03/14 12:46 AM",
          "commitNameOld": "8caeb0af9da019ca2382988e304083a06aeb7d23",
          "commitAuthorOld": "Karthik Kambatla",
          "daysBetweenCommits": 1.8,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,20 @@\n     public boolean addAnchor() {\n       long prev;\n       do {\n         prev \u003d unsafe.getLongVolatile(null, this.slotAddress);\n-        if ((prev \u0026 0x7fffffff) \u003d\u003d 0x7fffffff) {\n-          // Too many other threads have anchored the slot (2 billion?)\n+        if ((prev \u0026 VALID_FLAG) \u003d\u003d 0) {\n+          // Slot is no longer valid.\n           return false;\n         }\n         if ((prev \u0026 ANCHORABLE_FLAG) \u003d\u003d 0) {\n           // Slot can\u0027t be anchored right now.\n           return false;\n         }\n+        if ((prev \u0026 0x7fffffff) \u003d\u003d 0x7fffffff) {\n+          // Too many other threads have anchored the slot (2 billion?)\n+          return false;\n+        }\n       } while (!unsafe.compareAndSwapLong(null, this.slotAddress,\n                   prev, prev + 1));\n       return true;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public boolean addAnchor() {\n      long prev;\n      do {\n        prev \u003d unsafe.getLongVolatile(null, this.slotAddress);\n        if ((prev \u0026 VALID_FLAG) \u003d\u003d 0) {\n          // Slot is no longer valid.\n          return false;\n        }\n        if ((prev \u0026 ANCHORABLE_FLAG) \u003d\u003d 0) {\n          // Slot can\u0027t be anchored right now.\n          return false;\n        }\n        if ((prev \u0026 0x7fffffff) \u003d\u003d 0x7fffffff) {\n          // Too many other threads have anchored the slot (2 billion?)\n          return false;\n        }\n      } while (!unsafe.compareAndSwapLong(null, this.slotAddress,\n                  prev, prev + 1));\n      return true;\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/ShortCircuitShm.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/client/ShortCircuitSharedMemorySegment.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/ShortCircuitShm.java",
            "oldMethodName": "addAnchor",
            "newMethodName": "addAnchor"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-5950. The DFSClient and DataNode should use shared memory segments to communicate short-circuit information (cmccabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1573433 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "02/03/14 7:58 PM",
          "commitName": "dd049a2f6097da189ccce2f5890a2b9bc77fa73f",
          "commitAuthor": "Colin McCabe",
          "commitDateOld": "01/03/14 12:46 AM",
          "commitNameOld": "8caeb0af9da019ca2382988e304083a06aeb7d23",
          "commitAuthorOld": "Karthik Kambatla",
          "daysBetweenCommits": 1.8,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,20 @@\n     public boolean addAnchor() {\n       long prev;\n       do {\n         prev \u003d unsafe.getLongVolatile(null, this.slotAddress);\n-        if ((prev \u0026 0x7fffffff) \u003d\u003d 0x7fffffff) {\n-          // Too many other threads have anchored the slot (2 billion?)\n+        if ((prev \u0026 VALID_FLAG) \u003d\u003d 0) {\n+          // Slot is no longer valid.\n           return false;\n         }\n         if ((prev \u0026 ANCHORABLE_FLAG) \u003d\u003d 0) {\n           // Slot can\u0027t be anchored right now.\n           return false;\n         }\n+        if ((prev \u0026 0x7fffffff) \u003d\u003d 0x7fffffff) {\n+          // Too many other threads have anchored the slot (2 billion?)\n+          return false;\n+        }\n       } while (!unsafe.compareAndSwapLong(null, this.slotAddress,\n                   prev, prev + 1));\n       return true;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public boolean addAnchor() {\n      long prev;\n      do {\n        prev \u003d unsafe.getLongVolatile(null, this.slotAddress);\n        if ((prev \u0026 VALID_FLAG) \u003d\u003d 0) {\n          // Slot is no longer valid.\n          return false;\n        }\n        if ((prev \u0026 ANCHORABLE_FLAG) \u003d\u003d 0) {\n          // Slot can\u0027t be anchored right now.\n          return false;\n        }\n        if ((prev \u0026 0x7fffffff) \u003d\u003d 0x7fffffff) {\n          // Too many other threads have anchored the slot (2 billion?)\n          return false;\n        }\n      } while (!unsafe.compareAndSwapLong(null, this.slotAddress,\n                  prev, prev + 1));\n      return true;\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/ShortCircuitShm.java",
          "extendedDetails": {}
        }
      ]
    },
    "140246bad816ae7bf06eda193cc624e1e62923e0": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-5746.  Add ShortCircuitSharedMemorySegment (cmccabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1563362 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/01/14 6:25 PM",
      "commitName": "140246bad816ae7bf06eda193cc624e1e62923e0",
      "commitAuthor": "Colin McCabe",
      "diff": "@@ -0,0 +1,16 @@\n+    public boolean addAnchor() {\n+      long prev;\n+      do {\n+        prev \u003d unsafe.getLongVolatile(null, this.slotAddress);\n+        if ((prev \u0026 0x7fffffff) \u003d\u003d 0x7fffffff) {\n+          // Too many other threads have anchored the slot (2 billion?)\n+          return false;\n+        }\n+        if ((prev \u0026 ANCHORABLE_FLAG) \u003d\u003d 0) {\n+          // Slot can\u0027t be anchored right now.\n+          return false;\n+        }\n+      } while (!unsafe.compareAndSwapLong(null, this.slotAddress,\n+                  prev, prev + 1));\n+      return true;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public boolean addAnchor() {\n      long prev;\n      do {\n        prev \u003d unsafe.getLongVolatile(null, this.slotAddress);\n        if ((prev \u0026 0x7fffffff) \u003d\u003d 0x7fffffff) {\n          // Too many other threads have anchored the slot (2 billion?)\n          return false;\n        }\n        if ((prev \u0026 ANCHORABLE_FLAG) \u003d\u003d 0) {\n          // Slot can\u0027t be anchored right now.\n          return false;\n        }\n      } while (!unsafe.compareAndSwapLong(null, this.slotAddress,\n                  prev, prev + 1));\n      return true;\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/client/ShortCircuitSharedMemorySegment.java"
    }
  }
}