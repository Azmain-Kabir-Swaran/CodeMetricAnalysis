{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PBImageTextWriter.java",
  "functionName": "outputINodes",
  "functionId": "outputINodes___in-InputStream",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/PBImageTextWriter.java",
  "functionStartLine": 770,
  "functionEndLine": 801,
  "numCommitsSeen": 9,
  "timeTaken": 1702,
  "changeHistory": [
    "fb10803dfa67394650072bdea327296f8ad2a744",
    "9d494f0c0eaa05417f3a3e88487d878d1731da36",
    "caf7298e49f646a40023af999f62d61846fde5e2"
  ],
  "changeHistoryShort": {
    "fb10803dfa67394650072bdea327296f8ad2a744": "Ybodychange",
    "9d494f0c0eaa05417f3a3e88487d878d1731da36": "Ybodychange",
    "caf7298e49f646a40023af999f62d61846fde5e2": "Yintroduced"
  },
  "changeHistoryDetails": {
    "fb10803dfa67394650072bdea327296f8ad2a744": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13818. Extend OIV to detect FSImage corruption. Contributed by Adam Antal.\n\nSigned-off-by: Wei-Chiu Chuang \u003cweichiu@apache.org\u003e\n",
      "commitDate": "03/12/18 10:34 AM",
      "commitName": "fb10803dfa67394650072bdea327296f8ad2a744",
      "commitAuthor": "Adam Antal",
      "commitDateOld": "26/10/18 4:41 PM",
      "commitNameOld": "4f10d7e23fc0b757a9e94bc448187a6211b90f10",
      "commitAuthorOld": "Anu Engineer",
      "daysBetweenCommits": 37.79,
      "commitsBetweenForRepo": 254,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,32 @@\n   private void outputINodes(InputStream in) throws IOException {\n     INodeSection s \u003d INodeSection.parseDelimitedFrom(in);\n     LOG.info(\"Found {} INodes in the INode section\", s.getNumInodes());\n     long ignored \u003d 0;\n     long ignoredSnapshots \u003d 0;\n     for (int i \u003d 0; i \u003c s.getNumInodes(); ++i) {\n       INode p \u003d INode.parseDelimitedFrom(in);\n       try {\n         String parentPath \u003d metadataMap.getParentPath(p.getId());\n-        out.println(getEntry(parentPath, p));\n+        printIfNotEmpty(getEntry(parentPath, p));\n       } catch (IOException ioe) {\n         ignored++;\n         if (!(ioe instanceof IgnoreSnapshotException)) {\n           LOG.warn(\"Exception caught, ignoring node:{}\", p.getId(), ioe);\n         } else {\n           ignoredSnapshots++;\n           if (LOG.isDebugEnabled()) {\n             LOG.debug(\"Exception caught, ignoring node:{}.\", p.getId(), ioe);\n           }\n         }\n       }\n \n       if (LOG.isDebugEnabled() \u0026\u0026 i % 100000 \u003d\u003d 0) {\n         LOG.debug(\"Outputted {} INodes.\", i);\n       }\n     }\n     if (ignored \u003e 0) {\n       LOG.warn(\"Ignored {} nodes, including {} in snapshots. Please turn on\"\n               + \" debug log for details\", ignored, ignoredSnapshots);\n     }\n     LOG.info(\"Outputted {} INodes.\", s.getNumInodes());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void outputINodes(InputStream in) throws IOException {\n    INodeSection s \u003d INodeSection.parseDelimitedFrom(in);\n    LOG.info(\"Found {} INodes in the INode section\", s.getNumInodes());\n    long ignored \u003d 0;\n    long ignoredSnapshots \u003d 0;\n    for (int i \u003d 0; i \u003c s.getNumInodes(); ++i) {\n      INode p \u003d INode.parseDelimitedFrom(in);\n      try {\n        String parentPath \u003d metadataMap.getParentPath(p.getId());\n        printIfNotEmpty(getEntry(parentPath, p));\n      } catch (IOException ioe) {\n        ignored++;\n        if (!(ioe instanceof IgnoreSnapshotException)) {\n          LOG.warn(\"Exception caught, ignoring node:{}\", p.getId(), ioe);\n        } else {\n          ignoredSnapshots++;\n          if (LOG.isDebugEnabled()) {\n            LOG.debug(\"Exception caught, ignoring node:{}.\", p.getId(), ioe);\n          }\n        }\n      }\n\n      if (LOG.isDebugEnabled() \u0026\u0026 i % 100000 \u003d\u003d 0) {\n        LOG.debug(\"Outputted {} INodes.\", i);\n      }\n    }\n    if (ignored \u003e 0) {\n      LOG.warn(\"Ignored {} nodes, including {} in snapshots. Please turn on\"\n              + \" debug log for details\", ignored, ignoredSnapshots);\n    }\n    LOG.info(\"Outputted {} INodes.\", s.getNumInodes());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/PBImageTextWriter.java",
      "extendedDetails": {}
    },
    "9d494f0c0eaa05417f3a3e88487d878d1731da36": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9721. Allow Delimited PB OIV tool to run upon fsimage that contains INodeReference. (Xiao Chen via lei)\n",
      "commitDate": "02/02/16 10:42 AM",
      "commitName": "9d494f0c0eaa05417f3a3e88487d878d1731da36",
      "commitAuthor": "Lei Xu",
      "commitDateOld": "07/04/15 2:23 PM",
      "commitNameOld": "1e72d98c69bef3526cf0eb617de69e0b6d2fc13c",
      "commitAuthorOld": "cnauroth",
      "daysBetweenCommits": 300.89,
      "commitsBetweenForRepo": 2355,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,32 @@\n   private void outputINodes(InputStream in) throws IOException {\n     INodeSection s \u003d INodeSection.parseDelimitedFrom(in);\n     LOG.info(\"Found {} INodes in the INode section\", s.getNumInodes());\n+    long ignored \u003d 0;\n+    long ignoredSnapshots \u003d 0;\n     for (int i \u003d 0; i \u003c s.getNumInodes(); ++i) {\n       INode p \u003d INode.parseDelimitedFrom(in);\n-      String parentPath \u003d metadataMap.getParentPath(p.getId());\n-      out.println(getEntry(parentPath, p));\n+      try {\n+        String parentPath \u003d metadataMap.getParentPath(p.getId());\n+        out.println(getEntry(parentPath, p));\n+      } catch (IOException ioe) {\n+        ignored++;\n+        if (!(ioe instanceof IgnoreSnapshotException)) {\n+          LOG.warn(\"Exception caught, ignoring node:{}\", p.getId(), ioe);\n+        } else {\n+          ignoredSnapshots++;\n+          if (LOG.isDebugEnabled()) {\n+            LOG.debug(\"Exception caught, ignoring node:{}.\", p.getId(), ioe);\n+          }\n+        }\n+      }\n \n       if (LOG.isDebugEnabled() \u0026\u0026 i % 100000 \u003d\u003d 0) {\n         LOG.debug(\"Outputted {} INodes.\", i);\n       }\n     }\n+    if (ignored \u003e 0) {\n+      LOG.warn(\"Ignored {} nodes, including {} in snapshots. Please turn on\"\n+              + \" debug log for details\", ignored, ignoredSnapshots);\n+    }\n     LOG.info(\"Outputted {} INodes.\", s.getNumInodes());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void outputINodes(InputStream in) throws IOException {\n    INodeSection s \u003d INodeSection.parseDelimitedFrom(in);\n    LOG.info(\"Found {} INodes in the INode section\", s.getNumInodes());\n    long ignored \u003d 0;\n    long ignoredSnapshots \u003d 0;\n    for (int i \u003d 0; i \u003c s.getNumInodes(); ++i) {\n      INode p \u003d INode.parseDelimitedFrom(in);\n      try {\n        String parentPath \u003d metadataMap.getParentPath(p.getId());\n        out.println(getEntry(parentPath, p));\n      } catch (IOException ioe) {\n        ignored++;\n        if (!(ioe instanceof IgnoreSnapshotException)) {\n          LOG.warn(\"Exception caught, ignoring node:{}\", p.getId(), ioe);\n        } else {\n          ignoredSnapshots++;\n          if (LOG.isDebugEnabled()) {\n            LOG.debug(\"Exception caught, ignoring node:{}.\", p.getId(), ioe);\n          }\n        }\n      }\n\n      if (LOG.isDebugEnabled() \u0026\u0026 i % 100000 \u003d\u003d 0) {\n        LOG.debug(\"Outputted {} INodes.\", i);\n      }\n    }\n    if (ignored \u003e 0) {\n      LOG.warn(\"Ignored {} nodes, including {} in snapshots. Please turn on\"\n              + \" debug log for details\", ignored, ignoredSnapshots);\n    }\n    LOG.info(\"Outputted {} INodes.\", s.getNumInodes());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/PBImageTextWriter.java",
      "extendedDetails": {}
    },
    "caf7298e49f646a40023af999f62d61846fde5e2": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-6673. Add delimited format support to PB OIV tool. Contributed by Eddy Xu.\n",
      "commitDate": "28/01/15 12:36 PM",
      "commitName": "caf7298e49f646a40023af999f62d61846fde5e2",
      "commitAuthor": "Andrew Wang",
      "diff": "@@ -0,0 +1,14 @@\n+  private void outputINodes(InputStream in) throws IOException {\n+    INodeSection s \u003d INodeSection.parseDelimitedFrom(in);\n+    LOG.info(\"Found {} INodes in the INode section\", s.getNumInodes());\n+    for (int i \u003d 0; i \u003c s.getNumInodes(); ++i) {\n+      INode p \u003d INode.parseDelimitedFrom(in);\n+      String parentPath \u003d metadataMap.getParentPath(p.getId());\n+      out.println(getEntry(parentPath, p));\n+\n+      if (LOG.isDebugEnabled() \u0026\u0026 i % 100000 \u003d\u003d 0) {\n+        LOG.debug(\"Outputted {} INodes.\", i);\n+      }\n+    }\n+    LOG.info(\"Outputted {} INodes.\", s.getNumInodes());\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void outputINodes(InputStream in) throws IOException {\n    INodeSection s \u003d INodeSection.parseDelimitedFrom(in);\n    LOG.info(\"Found {} INodes in the INode section\", s.getNumInodes());\n    for (int i \u003d 0; i \u003c s.getNumInodes(); ++i) {\n      INode p \u003d INode.parseDelimitedFrom(in);\n      String parentPath \u003d metadataMap.getParentPath(p.getId());\n      out.println(getEntry(parentPath, p));\n\n      if (LOG.isDebugEnabled() \u0026\u0026 i % 100000 \u003d\u003d 0) {\n        LOG.debug(\"Outputted {} INodes.\", i);\n      }\n    }\n    LOG.info(\"Outputted {} INodes.\", s.getNumInodes());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/PBImageTextWriter.java"
    }
  }
}