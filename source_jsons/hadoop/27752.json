{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FederationPolicyUtils.java",
  "functionName": "getWeightedRandom",
  "functionId": "getWeightedRandom___weights-ArrayList__Float__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/policies/FederationPolicyUtils.java",
  "functionStartLine": 217,
  "functionEndLine": 243,
  "numCommitsSeen": 5,
  "timeTaken": 1253,
  "changeHistory": [
    "bf8686f43f0176f51bdb9b41f63be6801f26413f",
    "13fcfb3d46ee7a0d606b4bb221d1cd66ef2a5a7c"
  ],
  "changeHistoryShort": {
    "bf8686f43f0176f51bdb9b41f63be6801f26413f": "Ybodychange",
    "13fcfb3d46ee7a0d606b4bb221d1cd66ef2a5a7c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bf8686f43f0176f51bdb9b41f63be6801f26413f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8982. [Router] Add locality policy. Contributed by Young Chen.\n",
      "commitDate": "30/01/20 4:59 PM",
      "commitName": "bf8686f43f0176f51bdb9b41f63be6801f26413f",
      "commitAuthor": "Giovanni Matteo Fumarola",
      "commitDateOld": "12/10/17 10:38 AM",
      "commitNameOld": "13fcfb3d46ee7a0d606b4bb221d1cd66ef2a5a7c",
      "commitAuthorOld": "Carlo Curino",
      "daysBetweenCommits": 840.31,
      "commitsBetweenForRepo": 6479,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n   public static int getWeightedRandom(ArrayList\u003cFloat\u003e weights) {\n     int i;\n     float totalWeight \u003d 0;\n     for (i \u003d 0; i \u003c weights.size(); i++) {\n       if (weights.get(i) \u003e 0) {\n         totalWeight +\u003d weights.get(i);\n       }\n     }\n     if (totalWeight \u003d\u003d 0) {\n       return -1;\n     }\n-    float samplePoint \u003d RAND.nextFloat() * totalWeight;\n+    float samplePoint \u003d rand.nextFloat() * totalWeight;\n     int lastIndex \u003d 0;\n     for (i \u003d 0; i \u003c weights.size(); i++) {\n       if (weights.get(i) \u003e 0) {\n         if (samplePoint \u003c\u003d weights.get(i)) {\n           return i;\n         } else {\n           lastIndex \u003d i;\n           samplePoint -\u003d weights.get(i);\n         }\n       }\n     }\n     // This can only happen if samplePoint is very close to totoalWeight and\n     // float rounding kicks in during subtractions\n     return lastIndex;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static int getWeightedRandom(ArrayList\u003cFloat\u003e weights) {\n    int i;\n    float totalWeight \u003d 0;\n    for (i \u003d 0; i \u003c weights.size(); i++) {\n      if (weights.get(i) \u003e 0) {\n        totalWeight +\u003d weights.get(i);\n      }\n    }\n    if (totalWeight \u003d\u003d 0) {\n      return -1;\n    }\n    float samplePoint \u003d rand.nextFloat() * totalWeight;\n    int lastIndex \u003d 0;\n    for (i \u003d 0; i \u003c weights.size(); i++) {\n      if (weights.get(i) \u003e 0) {\n        if (samplePoint \u003c\u003d weights.get(i)) {\n          return i;\n        } else {\n          lastIndex \u003d i;\n          samplePoint -\u003d weights.get(i);\n        }\n      }\n    }\n    // This can only happen if samplePoint is very close to totoalWeight and\n    // float rounding kicks in during subtractions\n    return lastIndex;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/policies/FederationPolicyUtils.java",
      "extendedDetails": {}
    },
    "13fcfb3d46ee7a0d606b4bb221d1cd66ef2a5a7c": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7317. Fix overallocation resulted from ceiling in LocalityMulticastAMRMProxyPolicy. (contributed by Botong Huang via curino)\n",
      "commitDate": "12/10/17 10:38 AM",
      "commitName": "13fcfb3d46ee7a0d606b4bb221d1cd66ef2a5a7c",
      "commitAuthor": "Carlo Curino",
      "diff": "@@ -0,0 +1,27 @@\n+  public static int getWeightedRandom(ArrayList\u003cFloat\u003e weights) {\n+    int i;\n+    float totalWeight \u003d 0;\n+    for (i \u003d 0; i \u003c weights.size(); i++) {\n+      if (weights.get(i) \u003e 0) {\n+        totalWeight +\u003d weights.get(i);\n+      }\n+    }\n+    if (totalWeight \u003d\u003d 0) {\n+      return -1;\n+    }\n+    float samplePoint \u003d RAND.nextFloat() * totalWeight;\n+    int lastIndex \u003d 0;\n+    for (i \u003d 0; i \u003c weights.size(); i++) {\n+      if (weights.get(i) \u003e 0) {\n+        if (samplePoint \u003c\u003d weights.get(i)) {\n+          return i;\n+        } else {\n+          lastIndex \u003d i;\n+          samplePoint -\u003d weights.get(i);\n+        }\n+      }\n+    }\n+    // This can only happen if samplePoint is very close to totoalWeight and\n+    // float rounding kicks in during subtractions\n+    return lastIndex;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static int getWeightedRandom(ArrayList\u003cFloat\u003e weights) {\n    int i;\n    float totalWeight \u003d 0;\n    for (i \u003d 0; i \u003c weights.size(); i++) {\n      if (weights.get(i) \u003e 0) {\n        totalWeight +\u003d weights.get(i);\n      }\n    }\n    if (totalWeight \u003d\u003d 0) {\n      return -1;\n    }\n    float samplePoint \u003d RAND.nextFloat() * totalWeight;\n    int lastIndex \u003d 0;\n    for (i \u003d 0; i \u003c weights.size(); i++) {\n      if (weights.get(i) \u003e 0) {\n        if (samplePoint \u003c\u003d weights.get(i)) {\n          return i;\n        } else {\n          lastIndex \u003d i;\n          samplePoint -\u003d weights.get(i);\n        }\n      }\n    }\n    // This can only happen if samplePoint is very close to totoalWeight and\n    // float rounding kicks in during subtractions\n    return lastIndex;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/policies/FederationPolicyUtils.java"
    }
  }
}