{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NamenodeWebHdfsMethods.java",
  "functionName": "doAsExternalCall",
  "functionId": "doAsExternalCall___ugi-UserGroupInformation(modifiers-final)__action-PrivilegedExceptionAction__T__(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/web/resources/NamenodeWebHdfsMethods.java",
  "functionStartLine": 207,
  "functionEndLine": 250,
  "numCommitsSeen": 104,
  "timeTaken": 2935,
  "changeHistory": [
    "6e31a090842f8aeedb331b653b075499f8df6c60",
    "85cd06f6636f295ad1f3bf2a90063f4714c9cca7"
  ],
  "changeHistoryShort": {
    "6e31a090842f8aeedb331b653b075499f8df6c60": "Ybodychange",
    "85cd06f6636f295ad1f3bf2a90063f4714c9cca7": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6e31a090842f8aeedb331b653b075499f8df6c60": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12512. RBF: Add WebHDFS.\n",
      "commitDate": "23/03/18 8:32 AM",
      "commitName": "6e31a090842f8aeedb331b653b075499f8df6c60",
      "commitAuthor": "weiy",
      "commitDateOld": "12/03/18 8:41 PM",
      "commitNameOld": "0355ec20ebeb988679c7192c7024bef7a2a3bced",
      "commitAuthorOld": "Xiaoyu Yao",
      "daysBetweenCommits": 10.49,
      "commitsBetweenForRepo": 212,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,44 +1,44 @@\n   private \u003cT\u003e T doAsExternalCall(final UserGroupInformation ugi,\n       final PrivilegedExceptionAction\u003cT\u003e action)\n           throws IOException, InterruptedException {\n     // set the remote address, if coming in via a trust proxy server then\n     // the address with be that of the proxied client\n     ExternalCall\u003cT\u003e call \u003d new ExternalCall\u003cT\u003e(action){\n       @Override\n       public UserGroupInformation getRemoteUser() {\n         return ugi;\n       }\n       @Override\n       public String getProtocol() {\n         return \"webhdfs\";\n       }\n       @Override\n       public String getHostAddress() {\n-        return remoteAddr;\n+        return getRemoteAddr();\n       }\n       @Override\n       public InetAddress getHostInetAddress() {\n         try {\n           return InetAddress.getByName(getHostAddress());\n         } catch (UnknownHostException e) {\n           return null;\n         }\n       }\n     };\n-    final NameNode namenode \u003d (NameNode)context.getAttribute(\"name.node\");\n-    namenode.queueExternalCall(call);\n+\n+    queueExternalCall(call);\n     T result \u003d null;\n     try {\n       result \u003d call.get();\n     } catch (ExecutionException ee) {\n       Throwable t \u003d ee.getCause();\n       if (t instanceof RuntimeException) {\n         throw (RuntimeException)t;\n       } else if (t instanceof IOException) {\n         throw (IOException)t;\n       } else {\n         throw new IOException(t);\n       }\n     }\n     return result;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private \u003cT\u003e T doAsExternalCall(final UserGroupInformation ugi,\n      final PrivilegedExceptionAction\u003cT\u003e action)\n          throws IOException, InterruptedException {\n    // set the remote address, if coming in via a trust proxy server then\n    // the address with be that of the proxied client\n    ExternalCall\u003cT\u003e call \u003d new ExternalCall\u003cT\u003e(action){\n      @Override\n      public UserGroupInformation getRemoteUser() {\n        return ugi;\n      }\n      @Override\n      public String getProtocol() {\n        return \"webhdfs\";\n      }\n      @Override\n      public String getHostAddress() {\n        return getRemoteAddr();\n      }\n      @Override\n      public InetAddress getHostInetAddress() {\n        try {\n          return InetAddress.getByName(getHostAddress());\n        } catch (UnknownHostException e) {\n          return null;\n        }\n      }\n    };\n\n    queueExternalCall(call);\n    T result \u003d null;\n    try {\n      result \u003d call.get();\n    } catch (ExecutionException ee) {\n      Throwable t \u003d ee.getCause();\n      if (t instanceof RuntimeException) {\n        throw (RuntimeException)t;\n      } else if (t instanceof IOException) {\n        throw (IOException)t;\n      } else {\n        throw new IOException(t);\n      }\n    }\n    return result;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/web/resources/NamenodeWebHdfsMethods.java",
      "extendedDetails": {}
    },
    "85cd06f6636f295ad1f3bf2a90063f4714c9cca7": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-10789. Route webhdfs through the RPC call queue. Contributed by Daryn Sharp and Rushabh S Shah.\n",
      "commitDate": "12/10/16 1:11 PM",
      "commitName": "85cd06f6636f295ad1f3bf2a90063f4714c9cca7",
      "commitAuthor": "Kihwal Lee",
      "diff": "@@ -0,0 +1,44 @@\n+  private \u003cT\u003e T doAsExternalCall(final UserGroupInformation ugi,\n+      final PrivilegedExceptionAction\u003cT\u003e action)\n+          throws IOException, InterruptedException {\n+    // set the remote address, if coming in via a trust proxy server then\n+    // the address with be that of the proxied client\n+    ExternalCall\u003cT\u003e call \u003d new ExternalCall\u003cT\u003e(action){\n+      @Override\n+      public UserGroupInformation getRemoteUser() {\n+        return ugi;\n+      }\n+      @Override\n+      public String getProtocol() {\n+        return \"webhdfs\";\n+      }\n+      @Override\n+      public String getHostAddress() {\n+        return remoteAddr;\n+      }\n+      @Override\n+      public InetAddress getHostInetAddress() {\n+        try {\n+          return InetAddress.getByName(getHostAddress());\n+        } catch (UnknownHostException e) {\n+          return null;\n+        }\n+      }\n+    };\n+    final NameNode namenode \u003d (NameNode)context.getAttribute(\"name.node\");\n+    namenode.queueExternalCall(call);\n+    T result \u003d null;\n+    try {\n+      result \u003d call.get();\n+    } catch (ExecutionException ee) {\n+      Throwable t \u003d ee.getCause();\n+      if (t instanceof RuntimeException) {\n+        throw (RuntimeException)t;\n+      } else if (t instanceof IOException) {\n+        throw (IOException)t;\n+      } else {\n+        throw new IOException(t);\n+      }\n+    }\n+    return result;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private \u003cT\u003e T doAsExternalCall(final UserGroupInformation ugi,\n      final PrivilegedExceptionAction\u003cT\u003e action)\n          throws IOException, InterruptedException {\n    // set the remote address, if coming in via a trust proxy server then\n    // the address with be that of the proxied client\n    ExternalCall\u003cT\u003e call \u003d new ExternalCall\u003cT\u003e(action){\n      @Override\n      public UserGroupInformation getRemoteUser() {\n        return ugi;\n      }\n      @Override\n      public String getProtocol() {\n        return \"webhdfs\";\n      }\n      @Override\n      public String getHostAddress() {\n        return remoteAddr;\n      }\n      @Override\n      public InetAddress getHostInetAddress() {\n        try {\n          return InetAddress.getByName(getHostAddress());\n        } catch (UnknownHostException e) {\n          return null;\n        }\n      }\n    };\n    final NameNode namenode \u003d (NameNode)context.getAttribute(\"name.node\");\n    namenode.queueExternalCall(call);\n    T result \u003d null;\n    try {\n      result \u003d call.get();\n    } catch (ExecutionException ee) {\n      Throwable t \u003d ee.getCause();\n      if (t instanceof RuntimeException) {\n        throw (RuntimeException)t;\n      } else if (t instanceof IOException) {\n        throw (IOException)t;\n      } else {\n        throw new IOException(t);\n      }\n    }\n    return result;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/web/resources/NamenodeWebHdfsMethods.java"
    }
  }
}