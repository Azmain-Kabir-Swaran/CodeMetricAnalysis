{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BlockPlacementPolicyDefault.java",
  "functionName": "verifyBlockPlacement",
  "functionId": "verifyBlockPlacement___locs-DatanodeInfo[]__numberOfReplicas-int",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockPlacementPolicyDefault.java",
  "functionStartLine": 1087,
  "functionEndLine": 1104,
  "numCommitsSeen": 193,
  "timeTaken": 8406,
  "changeHistory": [
    "300f560fcca879d212eadffaa59fbbb7017c9a3f",
    "e54cc2931262bf49682a8323da9811976218c03b",
    "ec414600ede8e305c584818565b50e055ea5d2b5",
    "e27c2ae8bafc94f18eb38f5d839dcef5652d424e",
    "df87ed34f2b18b42cfbc8253bd28431063654e19",
    "d01caeee77f4ea00173db7f20a945f6cbfd0c9f7",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "09b6f98de431628c80bc8a6faf0070eeaf72ff2a",
    "97b6ca4dd7d1233e8f8c90b1c01e47228c044e13",
    "1bcfe45e47775b98cce5541f328c4fd46e5eb13d",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "300f560fcca879d212eadffaa59fbbb7017c9a3f": "Ybodychange",
    "e54cc2931262bf49682a8323da9811976218c03b": "Ybodychange",
    "ec414600ede8e305c584818565b50e055ea5d2b5": "Ybodychange",
    "e27c2ae8bafc94f18eb38f5d839dcef5652d424e": "Ymultichange(Yparameterchange,Ybodychange)",
    "df87ed34f2b18b42cfbc8253bd28431063654e19": "Ymultichange(Yparameterchange,Yreturntypechange,Ybodychange)",
    "d01caeee77f4ea00173db7f20a945f6cbfd0c9f7": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "09b6f98de431628c80bc8a6faf0070eeaf72ff2a": "Yfilerename",
    "97b6ca4dd7d1233e8f8c90b1c01e47228c044e13": "Yfilerename",
    "1bcfe45e47775b98cce5541f328c4fd46e5eb13d": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "300f560fcca879d212eadffaa59fbbb7017c9a3f": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14102. Performance improvement in BlockPlacementPolicyDefault. Contributed by Beluga Behr.\n",
      "commitDate": "28/11/18 11:33 AM",
      "commitName": "300f560fcca879d212eadffaa59fbbb7017c9a3f",
      "commitAuthor": "Giovanni Matteo Fumarola",
      "commitDateOld": "18/09/18 8:23 PM",
      "commitNameOld": "27978bcb66a9130cbf26d37ec454c0b7fcdc2530",
      "commitAuthorOld": "Shweta",
      "daysBetweenCommits": 70.67,
      "commitsBetweenForRepo": 592,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   public BlockPlacementStatus verifyBlockPlacement(DatanodeInfo[] locs,\n       int numberOfReplicas) {\n-    if (locs \u003d\u003d null)\n+    if (locs \u003d\u003d null) {\n       locs \u003d DatanodeDescriptor.EMPTY_ARRAY;\n+    }\n     if (!clusterMap.hasClusterEverBeenMultiRack()) {\n       // only one rack\n-      return new BlockPlacementStatusDefault(1, 1, 1);\n+      return ONE_RACK_PLACEMENT;\n     }\n-    int minRacks \u003d 2;\n-    minRacks \u003d Math.min(minRacks, numberOfReplicas);\n+    final int minRacks \u003d Math.min(2, numberOfReplicas);\n     // 1. Check that all locations are different.\n     // 2. Count locations on different racks.\n-    Set\u003cString\u003e racks \u003d new TreeSet\u003c\u003e();\n-    for (DatanodeInfo dn : locs)\n-      racks.add(dn.getNetworkLocation());\n-    return new BlockPlacementStatusDefault(racks.size(), minRacks,\n-        clusterMap.getNumOfRacks());\n+    final long rackCount \u003d Arrays.asList(locs).stream()\n+        .map(dn -\u003e dn.getNetworkLocation()).distinct().count();\n+\n+    return new BlockPlacementStatusDefault(Math.toIntExact(rackCount),\n+        minRacks, clusterMap.getNumOfRacks());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public BlockPlacementStatus verifyBlockPlacement(DatanodeInfo[] locs,\n      int numberOfReplicas) {\n    if (locs \u003d\u003d null) {\n      locs \u003d DatanodeDescriptor.EMPTY_ARRAY;\n    }\n    if (!clusterMap.hasClusterEverBeenMultiRack()) {\n      // only one rack\n      return ONE_RACK_PLACEMENT;\n    }\n    final int minRacks \u003d Math.min(2, numberOfReplicas);\n    // 1. Check that all locations are different.\n    // 2. Count locations on different racks.\n    final long rackCount \u003d Arrays.asList(locs).stream()\n        .map(dn -\u003e dn.getNetworkLocation()).distinct().count();\n\n    return new BlockPlacementStatusDefault(Math.toIntExact(rackCount),\n        minRacks, clusterMap.getNumOfRacks());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockPlacementPolicyDefault.java",
      "extendedDetails": {}
    },
    "e54cc2931262bf49682a8323da9811976218c03b": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9818. Correctly handle EC reconstruction work caused by not enough racks. Contributed by Jing Zhao.\n",
      "commitDate": "19/02/16 7:02 PM",
      "commitName": "e54cc2931262bf49682a8323da9811976218c03b",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "18/02/16 11:21 AM",
      "commitNameOld": "ba6d5ed955aa34cdcb7aaa4b1025da6ee5e91355",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 1.32,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,18 @@\n   public BlockPlacementStatus verifyBlockPlacement(DatanodeInfo[] locs,\n       int numberOfReplicas) {\n     if (locs \u003d\u003d null)\n       locs \u003d DatanodeDescriptor.EMPTY_ARRAY;\n     if (!clusterMap.hasClusterEverBeenMultiRack()) {\n       // only one rack\n-      return new BlockPlacementStatusDefault(1, 1);\n+      return new BlockPlacementStatusDefault(1, 1, 1);\n     }\n     int minRacks \u003d 2;\n     minRacks \u003d Math.min(minRacks, numberOfReplicas);\n     // 1. Check that all locations are different.\n     // 2. Count locations on different racks.\n     Set\u003cString\u003e racks \u003d new TreeSet\u003c\u003e();\n     for (DatanodeInfo dn : locs)\n       racks.add(dn.getNetworkLocation());\n-    return new BlockPlacementStatusDefault(racks.size(), minRacks);\n+    return new BlockPlacementStatusDefault(racks.size(), minRacks,\n+        clusterMap.getNumOfRacks());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public BlockPlacementStatus verifyBlockPlacement(DatanodeInfo[] locs,\n      int numberOfReplicas) {\n    if (locs \u003d\u003d null)\n      locs \u003d DatanodeDescriptor.EMPTY_ARRAY;\n    if (!clusterMap.hasClusterEverBeenMultiRack()) {\n      // only one rack\n      return new BlockPlacementStatusDefault(1, 1, 1);\n    }\n    int minRacks \u003d 2;\n    minRacks \u003d Math.min(minRacks, numberOfReplicas);\n    // 1. Check that all locations are different.\n    // 2. Count locations on different racks.\n    Set\u003cString\u003e racks \u003d new TreeSet\u003c\u003e();\n    for (DatanodeInfo dn : locs)\n      racks.add(dn.getNetworkLocation());\n    return new BlockPlacementStatusDefault(racks.size(), minRacks,\n        clusterMap.getNumOfRacks());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockPlacementPolicyDefault.java",
      "extendedDetails": {}
    },
    "ec414600ede8e305c584818565b50e055ea5d2b5": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9007. Fix HDFS Balancer to honor upgrade domain policy. (Ming Ma via lei)\n",
      "commitDate": "04/11/15 10:22 AM",
      "commitName": "ec414600ede8e305c584818565b50e055ea5d2b5",
      "commitAuthor": "Lei Xu",
      "commitDateOld": "02/11/15 7:36 PM",
      "commitNameOld": "d565480da2f646b40c3180e1ccb2935c9863dfef",
      "commitAuthorOld": "Ming Ma",
      "daysBetweenCommits": 1.62,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   public BlockPlacementStatus verifyBlockPlacement(DatanodeInfo[] locs,\n       int numberOfReplicas) {\n     if (locs \u003d\u003d null)\n       locs \u003d DatanodeDescriptor.EMPTY_ARRAY;\n     if (!clusterMap.hasClusterEverBeenMultiRack()) {\n       // only one rack\n       return new BlockPlacementStatusDefault(1, 1);\n     }\n     int minRacks \u003d 2;\n     minRacks \u003d Math.min(minRacks, numberOfReplicas);\n     // 1. Check that all locations are different.\n     // 2. Count locations on different racks.\n-    Set\u003cString\u003e racks \u003d new TreeSet\u003cString\u003e();\n+    Set\u003cString\u003e racks \u003d new TreeSet\u003c\u003e();\n     for (DatanodeInfo dn : locs)\n       racks.add(dn.getNetworkLocation());\n     return new BlockPlacementStatusDefault(racks.size(), minRacks);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public BlockPlacementStatus verifyBlockPlacement(DatanodeInfo[] locs,\n      int numberOfReplicas) {\n    if (locs \u003d\u003d null)\n      locs \u003d DatanodeDescriptor.EMPTY_ARRAY;\n    if (!clusterMap.hasClusterEverBeenMultiRack()) {\n      // only one rack\n      return new BlockPlacementStatusDefault(1, 1);\n    }\n    int minRacks \u003d 2;\n    minRacks \u003d Math.min(minRacks, numberOfReplicas);\n    // 1. Check that all locations are different.\n    // 2. Count locations on different racks.\n    Set\u003cString\u003e racks \u003d new TreeSet\u003c\u003e();\n    for (DatanodeInfo dn : locs)\n      racks.add(dn.getNetworkLocation());\n    return new BlockPlacementStatusDefault(racks.size(), minRacks);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockPlacementPolicyDefault.java",
      "extendedDetails": {}
    },
    "e27c2ae8bafc94f18eb38f5d839dcef5652d424e": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-8647. Abstract BlockManager\u0027s rack policy into BlockPlacementPolicy. (Brahma Reddy Battula via mingma)\n",
      "commitDate": "21/10/15 8:06 AM",
      "commitName": "e27c2ae8bafc94f18eb38f5d839dcef5652d424e",
      "commitAuthor": "Ming Ma",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-8647. Abstract BlockManager\u0027s rack policy into BlockPlacementPolicy. (Brahma Reddy Battula via mingma)\n",
          "commitDate": "21/10/15 8:06 AM",
          "commitName": "e27c2ae8bafc94f18eb38f5d839dcef5652d424e",
          "commitAuthor": "Ming Ma",
          "commitDateOld": "12/10/15 4:24 PM",
          "commitNameOld": "0f5f9846edab3ea7e80f35000072136f998bcd46",
          "commitAuthorOld": "Lei Xu",
          "daysBetweenCommits": 8.65,
          "commitsBetweenForRepo": 75,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n-  public BlockPlacementStatus verifyBlockPlacement(String srcPath,\n-      LocatedBlock lBlk, int numberOfReplicas) {\n-    DatanodeInfo[] locs \u003d lBlk.getLocations();\n+  public BlockPlacementStatus verifyBlockPlacement(DatanodeInfo[] locs,\n+      int numberOfReplicas) {\n     if (locs \u003d\u003d null)\n       locs \u003d DatanodeDescriptor.EMPTY_ARRAY;\n-    int numRacks \u003d clusterMap.getNumOfRacks();\n-    if(numRacks \u003c\u003d 1) // only one rack\n-      return new BlockPlacementStatusDefault(\n-          Math.min(numRacks, numberOfReplicas), numRacks);\n-    int minRacks \u003d Math.min(2, numberOfReplicas);\n+    if (!clusterMap.hasClusterEverBeenMultiRack()) {\n+      // only one rack\n+      return new BlockPlacementStatusDefault(1, 1);\n+    }\n+    int minRacks \u003d 2;\n+    minRacks \u003d Math.min(minRacks, numberOfReplicas);\n     // 1. Check that all locations are different.\n     // 2. Count locations on different racks.\n     Set\u003cString\u003e racks \u003d new TreeSet\u003cString\u003e();\n     for (DatanodeInfo dn : locs)\n       racks.add(dn.getNetworkLocation());\n     return new BlockPlacementStatusDefault(racks.size(), minRacks);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public BlockPlacementStatus verifyBlockPlacement(DatanodeInfo[] locs,\n      int numberOfReplicas) {\n    if (locs \u003d\u003d null)\n      locs \u003d DatanodeDescriptor.EMPTY_ARRAY;\n    if (!clusterMap.hasClusterEverBeenMultiRack()) {\n      // only one rack\n      return new BlockPlacementStatusDefault(1, 1);\n    }\n    int minRacks \u003d 2;\n    minRacks \u003d Math.min(minRacks, numberOfReplicas);\n    // 1. Check that all locations are different.\n    // 2. Count locations on different racks.\n    Set\u003cString\u003e racks \u003d new TreeSet\u003cString\u003e();\n    for (DatanodeInfo dn : locs)\n      racks.add(dn.getNetworkLocation());\n    return new BlockPlacementStatusDefault(racks.size(), minRacks);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockPlacementPolicyDefault.java",
          "extendedDetails": {
            "oldValue": "[srcPath-String, lBlk-LocatedBlock, numberOfReplicas-int]",
            "newValue": "[locs-DatanodeInfo[], numberOfReplicas-int]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-8647. Abstract BlockManager\u0027s rack policy into BlockPlacementPolicy. (Brahma Reddy Battula via mingma)\n",
          "commitDate": "21/10/15 8:06 AM",
          "commitName": "e27c2ae8bafc94f18eb38f5d839dcef5652d424e",
          "commitAuthor": "Ming Ma",
          "commitDateOld": "12/10/15 4:24 PM",
          "commitNameOld": "0f5f9846edab3ea7e80f35000072136f998bcd46",
          "commitAuthorOld": "Lei Xu",
          "daysBetweenCommits": 8.65,
          "commitsBetweenForRepo": 75,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n-  public BlockPlacementStatus verifyBlockPlacement(String srcPath,\n-      LocatedBlock lBlk, int numberOfReplicas) {\n-    DatanodeInfo[] locs \u003d lBlk.getLocations();\n+  public BlockPlacementStatus verifyBlockPlacement(DatanodeInfo[] locs,\n+      int numberOfReplicas) {\n     if (locs \u003d\u003d null)\n       locs \u003d DatanodeDescriptor.EMPTY_ARRAY;\n-    int numRacks \u003d clusterMap.getNumOfRacks();\n-    if(numRacks \u003c\u003d 1) // only one rack\n-      return new BlockPlacementStatusDefault(\n-          Math.min(numRacks, numberOfReplicas), numRacks);\n-    int minRacks \u003d Math.min(2, numberOfReplicas);\n+    if (!clusterMap.hasClusterEverBeenMultiRack()) {\n+      // only one rack\n+      return new BlockPlacementStatusDefault(1, 1);\n+    }\n+    int minRacks \u003d 2;\n+    minRacks \u003d Math.min(minRacks, numberOfReplicas);\n     // 1. Check that all locations are different.\n     // 2. Count locations on different racks.\n     Set\u003cString\u003e racks \u003d new TreeSet\u003cString\u003e();\n     for (DatanodeInfo dn : locs)\n       racks.add(dn.getNetworkLocation());\n     return new BlockPlacementStatusDefault(racks.size(), minRacks);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public BlockPlacementStatus verifyBlockPlacement(DatanodeInfo[] locs,\n      int numberOfReplicas) {\n    if (locs \u003d\u003d null)\n      locs \u003d DatanodeDescriptor.EMPTY_ARRAY;\n    if (!clusterMap.hasClusterEverBeenMultiRack()) {\n      // only one rack\n      return new BlockPlacementStatusDefault(1, 1);\n    }\n    int minRacks \u003d 2;\n    minRacks \u003d Math.min(minRacks, numberOfReplicas);\n    // 1. Check that all locations are different.\n    // 2. Count locations on different racks.\n    Set\u003cString\u003e racks \u003d new TreeSet\u003cString\u003e();\n    for (DatanodeInfo dn : locs)\n      racks.add(dn.getNetworkLocation());\n    return new BlockPlacementStatusDefault(racks.size(), minRacks);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockPlacementPolicyDefault.java",
          "extendedDetails": {}
        }
      ]
    },
    "df87ed34f2b18b42cfbc8253bd28431063654e19": {
      "type": "Ymultichange(Yparameterchange,Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-4885. Improve the verifyBlockPlacement() API in BlockPlacementPolicy. Contributed by Junping Du\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1534426 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/10/13 5:20 PM",
      "commitName": "df87ed34f2b18b42cfbc8253bd28431063654e19",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-4885. Improve the verifyBlockPlacement() API in BlockPlacementPolicy. Contributed by Junping Du\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1534426 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "21/10/13 5:20 PM",
          "commitName": "df87ed34f2b18b42cfbc8253bd28431063654e19",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "16/09/13 7:38 PM",
          "commitNameOld": "f98c343c7f11c165bcc0f7cdbaa2a3998b12cfd2",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 34.9,
          "commitsBetweenForRepo": 236,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n-  public int verifyBlockPlacement(String srcPath,\n-                                  LocatedBlock lBlk,\n-                                  int minRacks) {\n+  public BlockPlacementStatus verifyBlockPlacement(String srcPath,\n+      LocatedBlock lBlk, int numberOfReplicas) {\n     DatanodeInfo[] locs \u003d lBlk.getLocations();\n     if (locs \u003d\u003d null)\n       locs \u003d DatanodeDescriptor.EMPTY_ARRAY;\n     int numRacks \u003d clusterMap.getNumOfRacks();\n     if(numRacks \u003c\u003d 1) // only one rack\n-      return 0;\n-    minRacks \u003d Math.min(minRacks, numRacks);\n+      return new BlockPlacementStatusDefault(\n+          Math.min(numRacks, numberOfReplicas), numRacks);\n+    int minRacks \u003d Math.min(2, numberOfReplicas);\n     // 1. Check that all locations are different.\n     // 2. Count locations on different racks.\n     Set\u003cString\u003e racks \u003d new TreeSet\u003cString\u003e();\n     for (DatanodeInfo dn : locs)\n       racks.add(dn.getNetworkLocation());\n-    return minRacks - racks.size();\n+    return new BlockPlacementStatusDefault(racks.size(), minRacks);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public BlockPlacementStatus verifyBlockPlacement(String srcPath,\n      LocatedBlock lBlk, int numberOfReplicas) {\n    DatanodeInfo[] locs \u003d lBlk.getLocations();\n    if (locs \u003d\u003d null)\n      locs \u003d DatanodeDescriptor.EMPTY_ARRAY;\n    int numRacks \u003d clusterMap.getNumOfRacks();\n    if(numRacks \u003c\u003d 1) // only one rack\n      return new BlockPlacementStatusDefault(\n          Math.min(numRacks, numberOfReplicas), numRacks);\n    int minRacks \u003d Math.min(2, numberOfReplicas);\n    // 1. Check that all locations are different.\n    // 2. Count locations on different racks.\n    Set\u003cString\u003e racks \u003d new TreeSet\u003cString\u003e();\n    for (DatanodeInfo dn : locs)\n      racks.add(dn.getNetworkLocation());\n    return new BlockPlacementStatusDefault(racks.size(), minRacks);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockPlacementPolicyDefault.java",
          "extendedDetails": {
            "oldValue": "[srcPath-String, lBlk-LocatedBlock, minRacks-int]",
            "newValue": "[srcPath-String, lBlk-LocatedBlock, numberOfReplicas-int]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-4885. Improve the verifyBlockPlacement() API in BlockPlacementPolicy. Contributed by Junping Du\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1534426 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "21/10/13 5:20 PM",
          "commitName": "df87ed34f2b18b42cfbc8253bd28431063654e19",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "16/09/13 7:38 PM",
          "commitNameOld": "f98c343c7f11c165bcc0f7cdbaa2a3998b12cfd2",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 34.9,
          "commitsBetweenForRepo": 236,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n-  public int verifyBlockPlacement(String srcPath,\n-                                  LocatedBlock lBlk,\n-                                  int minRacks) {\n+  public BlockPlacementStatus verifyBlockPlacement(String srcPath,\n+      LocatedBlock lBlk, int numberOfReplicas) {\n     DatanodeInfo[] locs \u003d lBlk.getLocations();\n     if (locs \u003d\u003d null)\n       locs \u003d DatanodeDescriptor.EMPTY_ARRAY;\n     int numRacks \u003d clusterMap.getNumOfRacks();\n     if(numRacks \u003c\u003d 1) // only one rack\n-      return 0;\n-    minRacks \u003d Math.min(minRacks, numRacks);\n+      return new BlockPlacementStatusDefault(\n+          Math.min(numRacks, numberOfReplicas), numRacks);\n+    int minRacks \u003d Math.min(2, numberOfReplicas);\n     // 1. Check that all locations are different.\n     // 2. Count locations on different racks.\n     Set\u003cString\u003e racks \u003d new TreeSet\u003cString\u003e();\n     for (DatanodeInfo dn : locs)\n       racks.add(dn.getNetworkLocation());\n-    return minRacks - racks.size();\n+    return new BlockPlacementStatusDefault(racks.size(), minRacks);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public BlockPlacementStatus verifyBlockPlacement(String srcPath,\n      LocatedBlock lBlk, int numberOfReplicas) {\n    DatanodeInfo[] locs \u003d lBlk.getLocations();\n    if (locs \u003d\u003d null)\n      locs \u003d DatanodeDescriptor.EMPTY_ARRAY;\n    int numRacks \u003d clusterMap.getNumOfRacks();\n    if(numRacks \u003c\u003d 1) // only one rack\n      return new BlockPlacementStatusDefault(\n          Math.min(numRacks, numberOfReplicas), numRacks);\n    int minRacks \u003d Math.min(2, numberOfReplicas);\n    // 1. Check that all locations are different.\n    // 2. Count locations on different racks.\n    Set\u003cString\u003e racks \u003d new TreeSet\u003cString\u003e();\n    for (DatanodeInfo dn : locs)\n      racks.add(dn.getNetworkLocation());\n    return new BlockPlacementStatusDefault(racks.size(), minRacks);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockPlacementPolicyDefault.java",
          "extendedDetails": {
            "oldValue": "int",
            "newValue": "BlockPlacementStatus"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-4885. Improve the verifyBlockPlacement() API in BlockPlacementPolicy. Contributed by Junping Du\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1534426 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "21/10/13 5:20 PM",
          "commitName": "df87ed34f2b18b42cfbc8253bd28431063654e19",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "16/09/13 7:38 PM",
          "commitNameOld": "f98c343c7f11c165bcc0f7cdbaa2a3998b12cfd2",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 34.9,
          "commitsBetweenForRepo": 236,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n-  public int verifyBlockPlacement(String srcPath,\n-                                  LocatedBlock lBlk,\n-                                  int minRacks) {\n+  public BlockPlacementStatus verifyBlockPlacement(String srcPath,\n+      LocatedBlock lBlk, int numberOfReplicas) {\n     DatanodeInfo[] locs \u003d lBlk.getLocations();\n     if (locs \u003d\u003d null)\n       locs \u003d DatanodeDescriptor.EMPTY_ARRAY;\n     int numRacks \u003d clusterMap.getNumOfRacks();\n     if(numRacks \u003c\u003d 1) // only one rack\n-      return 0;\n-    minRacks \u003d Math.min(minRacks, numRacks);\n+      return new BlockPlacementStatusDefault(\n+          Math.min(numRacks, numberOfReplicas), numRacks);\n+    int minRacks \u003d Math.min(2, numberOfReplicas);\n     // 1. Check that all locations are different.\n     // 2. Count locations on different racks.\n     Set\u003cString\u003e racks \u003d new TreeSet\u003cString\u003e();\n     for (DatanodeInfo dn : locs)\n       racks.add(dn.getNetworkLocation());\n-    return minRacks - racks.size();\n+    return new BlockPlacementStatusDefault(racks.size(), minRacks);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public BlockPlacementStatus verifyBlockPlacement(String srcPath,\n      LocatedBlock lBlk, int numberOfReplicas) {\n    DatanodeInfo[] locs \u003d lBlk.getLocations();\n    if (locs \u003d\u003d null)\n      locs \u003d DatanodeDescriptor.EMPTY_ARRAY;\n    int numRacks \u003d clusterMap.getNumOfRacks();\n    if(numRacks \u003c\u003d 1) // only one rack\n      return new BlockPlacementStatusDefault(\n          Math.min(numRacks, numberOfReplicas), numRacks);\n    int minRacks \u003d Math.min(2, numberOfReplicas);\n    // 1. Check that all locations are different.\n    // 2. Count locations on different racks.\n    Set\u003cString\u003e racks \u003d new TreeSet\u003cString\u003e();\n    for (DatanodeInfo dn : locs)\n      racks.add(dn.getNetworkLocation());\n    return new BlockPlacementStatusDefault(racks.size(), minRacks);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockPlacementPolicyDefault.java",
          "extendedDetails": {}
        }
      ]
    },
    "d01caeee77f4ea00173db7f20a945f6cbfd0c9f7": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5188. In BlockPlacementPolicy, reduce the number of chooseTarget(..) methods; replace HashMap with Map in parameter declarations and cleanup some related code.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1523400 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/09/13 9:15 PM",
      "commitName": "d01caeee77f4ea00173db7f20a945f6cbfd0c9f7",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "08/09/13 9:54 PM",
      "commitNameOld": "4f2bf68b73df98f1bb5f80e6e192bd03b935b03b",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 5.97,
      "commitsBetweenForRepo": 33,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   public int verifyBlockPlacement(String srcPath,\n                                   LocatedBlock lBlk,\n                                   int minRacks) {\n     DatanodeInfo[] locs \u003d lBlk.getLocations();\n     if (locs \u003d\u003d null)\n-      locs \u003d new DatanodeInfo[0];\n+      locs \u003d DatanodeDescriptor.EMPTY_ARRAY;\n     int numRacks \u003d clusterMap.getNumOfRacks();\n     if(numRacks \u003c\u003d 1) // only one rack\n       return 0;\n     minRacks \u003d Math.min(minRacks, numRacks);\n     // 1. Check that all locations are different.\n     // 2. Count locations on different racks.\n     Set\u003cString\u003e racks \u003d new TreeSet\u003cString\u003e();\n     for (DatanodeInfo dn : locs)\n       racks.add(dn.getNetworkLocation());\n     return minRacks - racks.size();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int verifyBlockPlacement(String srcPath,\n                                  LocatedBlock lBlk,\n                                  int minRacks) {\n    DatanodeInfo[] locs \u003d lBlk.getLocations();\n    if (locs \u003d\u003d null)\n      locs \u003d DatanodeDescriptor.EMPTY_ARRAY;\n    int numRacks \u003d clusterMap.getNumOfRacks();\n    if(numRacks \u003c\u003d 1) // only one rack\n      return 0;\n    minRacks \u003d Math.min(minRacks, numRacks);\n    // 1. Check that all locations are different.\n    // 2. Count locations on different racks.\n    Set\u003cString\u003e racks \u003d new TreeSet\u003cString\u003e();\n    for (DatanodeInfo dn : locs)\n      racks.add(dn.getNetworkLocation());\n    return minRacks - racks.size();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockPlacementPolicyDefault.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public int verifyBlockPlacement(String srcPath,\n                                  LocatedBlock lBlk,\n                                  int minRacks) {\n    DatanodeInfo[] locs \u003d lBlk.getLocations();\n    if (locs \u003d\u003d null)\n      locs \u003d new DatanodeInfo[0];\n    int numRacks \u003d clusterMap.getNumOfRacks();\n    if(numRacks \u003c\u003d 1) // only one rack\n      return 0;\n    minRacks \u003d Math.min(minRacks, numRacks);\n    // 1. Check that all locations are different.\n    // 2. Count locations on different racks.\n    Set\u003cString\u003e racks \u003d new TreeSet\u003cString\u003e();\n    for (DatanodeInfo dn : locs)\n      racks.add(dn.getNetworkLocation());\n    return minRacks - racks.size();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockPlacementPolicyDefault.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockPlacementPolicyDefault.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockPlacementPolicyDefault.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public int verifyBlockPlacement(String srcPath,\n                                  LocatedBlock lBlk,\n                                  int minRacks) {\n    DatanodeInfo[] locs \u003d lBlk.getLocations();\n    if (locs \u003d\u003d null)\n      locs \u003d new DatanodeInfo[0];\n    int numRacks \u003d clusterMap.getNumOfRacks();\n    if(numRacks \u003c\u003d 1) // only one rack\n      return 0;\n    minRacks \u003d Math.min(minRacks, numRacks);\n    // 1. Check that all locations are different.\n    // 2. Count locations on different racks.\n    Set\u003cString\u003e racks \u003d new TreeSet\u003cString\u003e();\n    for (DatanodeInfo dn : locs)\n      racks.add(dn.getNetworkLocation());\n    return minRacks - racks.size();\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockPlacementPolicyDefault.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockPlacementPolicyDefault.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockPlacementPolicyDefault.java"
      }
    },
    "09b6f98de431628c80bc8a6faf0070eeaf72ff2a": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2107. Move block management code from o.a.h.h.s.namenode to a new package o.a.h.h.s.blockmanagement.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1140939 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/06/11 6:31 PM",
      "commitName": "09b6f98de431628c80bc8a6faf0070eeaf72ff2a",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "28/06/11 5:26 PM",
      "commitNameOld": "97b6ca4dd7d1233e8f8c90b1c01e47228c044e13",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public int verifyBlockPlacement(String srcPath,\n                                  LocatedBlock lBlk,\n                                  int minRacks) {\n    DatanodeInfo[] locs \u003d lBlk.getLocations();\n    if (locs \u003d\u003d null)\n      locs \u003d new DatanodeInfo[0];\n    int numRacks \u003d clusterMap.getNumOfRacks();\n    if(numRacks \u003c\u003d 1) // only one rack\n      return 0;\n    minRacks \u003d Math.min(minRacks, numRacks);\n    // 1. Check that all locations are different.\n    // 2. Count locations on different racks.\n    Set\u003cString\u003e racks \u003d new TreeSet\u003cString\u003e();\n    for (DatanodeInfo dn : locs)\n      racks.add(dn.getNetworkLocation());\n    return minRacks - racks.size();\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockPlacementPolicyDefault.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/BlockPlacementPolicyDefault.java",
        "newPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockPlacementPolicyDefault.java"
      }
    },
    "97b6ca4dd7d1233e8f8c90b1c01e47228c044e13": {
      "type": "Yfilerename",
      "commitMessage": "Revert 1140913 and 1140909 for HDFS-2107.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1140920 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/06/11 5:26 PM",
      "commitName": "97b6ca4dd7d1233e8f8c90b1c01e47228c044e13",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "28/06/11 4:57 PM",
      "commitNameOld": "d58e3efe9269efe00c309ed0e9726d2f94bcd03a",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public int verifyBlockPlacement(String srcPath,\n                                  LocatedBlock lBlk,\n                                  int minRacks) {\n    DatanodeInfo[] locs \u003d lBlk.getLocations();\n    if (locs \u003d\u003d null)\n      locs \u003d new DatanodeInfo[0];\n    int numRacks \u003d clusterMap.getNumOfRacks();\n    if(numRacks \u003c\u003d 1) // only one rack\n      return 0;\n    minRacks \u003d Math.min(minRacks, numRacks);\n    // 1. Check that all locations are different.\n    // 2. Count locations on different racks.\n    Set\u003cString\u003e racks \u003d new TreeSet\u003cString\u003e();\n    for (DatanodeInfo dn : locs)\n      racks.add(dn.getNetworkLocation());\n    return minRacks - racks.size();\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/BlockPlacementPolicyDefault.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockPlacementPolicyDefault.java",
        "newPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/BlockPlacementPolicyDefault.java"
      }
    },
    "1bcfe45e47775b98cce5541f328c4fd46e5eb13d": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2106. Move block management code from o.a.h.h.s.namenode to a new package o.a.h.h.s.blockmanagement.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1140909 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/06/11 4:43 PM",
      "commitName": "1bcfe45e47775b98cce5541f328c4fd46e5eb13d",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "28/06/11 9:21 AM",
      "commitNameOld": "1834fb99f516b2f2cd5e0ab1f89d407f98a7237a",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.31,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public int verifyBlockPlacement(String srcPath,\n                                  LocatedBlock lBlk,\n                                  int minRacks) {\n    DatanodeInfo[] locs \u003d lBlk.getLocations();\n    if (locs \u003d\u003d null)\n      locs \u003d new DatanodeInfo[0];\n    int numRacks \u003d clusterMap.getNumOfRacks();\n    if(numRacks \u003c\u003d 1) // only one rack\n      return 0;\n    minRacks \u003d Math.min(minRacks, numRacks);\n    // 1. Check that all locations are different.\n    // 2. Count locations on different racks.\n    Set\u003cString\u003e racks \u003d new TreeSet\u003cString\u003e();\n    for (DatanodeInfo dn : locs)\n      racks.add(dn.getNetworkLocation());\n    return minRacks - racks.size();\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockPlacementPolicyDefault.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/BlockPlacementPolicyDefault.java",
        "newPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockPlacementPolicyDefault.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,17 @@\n+  public int verifyBlockPlacement(String srcPath,\n+                                  LocatedBlock lBlk,\n+                                  int minRacks) {\n+    DatanodeInfo[] locs \u003d lBlk.getLocations();\n+    if (locs \u003d\u003d null)\n+      locs \u003d new DatanodeInfo[0];\n+    int numRacks \u003d clusterMap.getNumOfRacks();\n+    if(numRacks \u003c\u003d 1) // only one rack\n+      return 0;\n+    minRacks \u003d Math.min(minRacks, numRacks);\n+    // 1. Check that all locations are different.\n+    // 2. Count locations on different racks.\n+    Set\u003cString\u003e racks \u003d new TreeSet\u003cString\u003e();\n+    for (DatanodeInfo dn : locs)\n+      racks.add(dn.getNetworkLocation());\n+    return minRacks - racks.size();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public int verifyBlockPlacement(String srcPath,\n                                  LocatedBlock lBlk,\n                                  int minRacks) {\n    DatanodeInfo[] locs \u003d lBlk.getLocations();\n    if (locs \u003d\u003d null)\n      locs \u003d new DatanodeInfo[0];\n    int numRacks \u003d clusterMap.getNumOfRacks();\n    if(numRacks \u003c\u003d 1) // only one rack\n      return 0;\n    minRacks \u003d Math.min(minRacks, numRacks);\n    // 1. Check that all locations are different.\n    // 2. Count locations on different racks.\n    Set\u003cString\u003e racks \u003d new TreeSet\u003cString\u003e();\n    for (DatanodeInfo dn : locs)\n      racks.add(dn.getNetworkLocation());\n    return minRacks - racks.size();\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/BlockPlacementPolicyDefault.java"
    }
  }
}