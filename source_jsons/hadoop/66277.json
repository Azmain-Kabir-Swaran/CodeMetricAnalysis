{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SLSUtils.java",
  "functionName": "addNodes",
  "functionId": "addNodes___nodeSet-Set__NodeDetails____jsonEntry-Map",
  "sourceFilePath": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/utils/SLSUtils.java",
  "functionStartLine": 140,
  "functionEndLine": 163,
  "numCommitsSeen": 26,
  "timeTaken": 2432,
  "changeHistory": [
    "9fea5c9ee76bd36f273ae93afef5f3ef3c477a53",
    "99880d0a16727c770da053464da87960c5b02065",
    "3082552b3b991df846caf572b58e44308ddf8eeb"
  ],
  "changeHistoryShort": {
    "9fea5c9ee76bd36f273ae93afef5f3ef3c477a53": "Ymultichange(Yparameterchange,Ybodychange)",
    "99880d0a16727c770da053464da87960c5b02065": "Ybodychange",
    "3082552b3b991df846caf572b58e44308ddf8eeb": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9fea5c9ee76bd36f273ae93afef5f3ef3c477a53": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-8175. Add support for Node Labels in SLS. Contributed by Abhishek Modi.\n",
      "commitDate": "31/07/18 9:36 AM",
      "commitName": "9fea5c9ee76bd36f273ae93afef5f3ef3c477a53",
      "commitAuthor": "Inigo Goiri",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-8175. Add support for Node Labels in SLS. Contributed by Abhishek Modi.\n",
          "commitDate": "31/07/18 9:36 AM",
          "commitName": "9fea5c9ee76bd36f273ae93afef5f3ef3c477a53",
          "commitAuthor": "Inigo Goiri",
          "commitDateOld": "17/04/18 1:11 PM",
          "commitNameOld": "78860372bd8048168c6aa27a9526c40f5869cf2c",
          "commitAuthorOld": "Inigo Goiri",
          "daysBetweenCommits": 104.85,
          "commitsBetweenForRepo": 1242,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,24 @@\n-  private static void addNodes(Set\u003cString\u003e nodeSet, Map jsonEntry) {\n+  private static void addNodes(Set\u003cNodeDetails\u003e nodeSet,\n+      Map jsonEntry) {\n     if (jsonEntry.containsKey(SLSConfiguration.NUM_NODES)) {\n       int numNodes \u003d Integer.parseInt(\n           jsonEntry.get(SLSConfiguration.NUM_NODES).toString());\n       int numRacks \u003d 1;\n       if (jsonEntry.containsKey(SLSConfiguration.NUM_RACKS)) {\n         numRacks \u003d Integer.parseInt(\n             jsonEntry.get(SLSConfiguration.NUM_RACKS).toString());\n       }\n       nodeSet.addAll(generateNodes(numNodes, numRacks));\n     }\n \n     if (jsonEntry.containsKey(SLSConfiguration.JOB_TASKS)) {\n       List tasks \u003d (List) jsonEntry.get(SLSConfiguration.JOB_TASKS);\n       for (Object o : tasks) {\n         Map jsonTask \u003d (Map) o;\n         String hostname \u003d (String) jsonTask.get(SLSConfiguration.TASK_HOST);\n         if (hostname !\u003d null) {\n-          nodeSet.add(hostname);\n+          nodeSet.add(new NodeDetails(hostname));\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void addNodes(Set\u003cNodeDetails\u003e nodeSet,\n      Map jsonEntry) {\n    if (jsonEntry.containsKey(SLSConfiguration.NUM_NODES)) {\n      int numNodes \u003d Integer.parseInt(\n          jsonEntry.get(SLSConfiguration.NUM_NODES).toString());\n      int numRacks \u003d 1;\n      if (jsonEntry.containsKey(SLSConfiguration.NUM_RACKS)) {\n        numRacks \u003d Integer.parseInt(\n            jsonEntry.get(SLSConfiguration.NUM_RACKS).toString());\n      }\n      nodeSet.addAll(generateNodes(numNodes, numRacks));\n    }\n\n    if (jsonEntry.containsKey(SLSConfiguration.JOB_TASKS)) {\n      List tasks \u003d (List) jsonEntry.get(SLSConfiguration.JOB_TASKS);\n      for (Object o : tasks) {\n        Map jsonTask \u003d (Map) o;\n        String hostname \u003d (String) jsonTask.get(SLSConfiguration.TASK_HOST);\n        if (hostname !\u003d null) {\n          nodeSet.add(new NodeDetails(hostname));\n        }\n      }\n    }\n  }",
          "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/utils/SLSUtils.java",
          "extendedDetails": {
            "oldValue": "[nodeSet-Set\u003cString\u003e, jsonEntry-Map]",
            "newValue": "[nodeSet-Set\u003cNodeDetails\u003e, jsonEntry-Map]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-8175. Add support for Node Labels in SLS. Contributed by Abhishek Modi.\n",
          "commitDate": "31/07/18 9:36 AM",
          "commitName": "9fea5c9ee76bd36f273ae93afef5f3ef3c477a53",
          "commitAuthor": "Inigo Goiri",
          "commitDateOld": "17/04/18 1:11 PM",
          "commitNameOld": "78860372bd8048168c6aa27a9526c40f5869cf2c",
          "commitAuthorOld": "Inigo Goiri",
          "daysBetweenCommits": 104.85,
          "commitsBetweenForRepo": 1242,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,24 @@\n-  private static void addNodes(Set\u003cString\u003e nodeSet, Map jsonEntry) {\n+  private static void addNodes(Set\u003cNodeDetails\u003e nodeSet,\n+      Map jsonEntry) {\n     if (jsonEntry.containsKey(SLSConfiguration.NUM_NODES)) {\n       int numNodes \u003d Integer.parseInt(\n           jsonEntry.get(SLSConfiguration.NUM_NODES).toString());\n       int numRacks \u003d 1;\n       if (jsonEntry.containsKey(SLSConfiguration.NUM_RACKS)) {\n         numRacks \u003d Integer.parseInt(\n             jsonEntry.get(SLSConfiguration.NUM_RACKS).toString());\n       }\n       nodeSet.addAll(generateNodes(numNodes, numRacks));\n     }\n \n     if (jsonEntry.containsKey(SLSConfiguration.JOB_TASKS)) {\n       List tasks \u003d (List) jsonEntry.get(SLSConfiguration.JOB_TASKS);\n       for (Object o : tasks) {\n         Map jsonTask \u003d (Map) o;\n         String hostname \u003d (String) jsonTask.get(SLSConfiguration.TASK_HOST);\n         if (hostname !\u003d null) {\n-          nodeSet.add(hostname);\n+          nodeSet.add(new NodeDetails(hostname));\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void addNodes(Set\u003cNodeDetails\u003e nodeSet,\n      Map jsonEntry) {\n    if (jsonEntry.containsKey(SLSConfiguration.NUM_NODES)) {\n      int numNodes \u003d Integer.parseInt(\n          jsonEntry.get(SLSConfiguration.NUM_NODES).toString());\n      int numRacks \u003d 1;\n      if (jsonEntry.containsKey(SLSConfiguration.NUM_RACKS)) {\n        numRacks \u003d Integer.parseInt(\n            jsonEntry.get(SLSConfiguration.NUM_RACKS).toString());\n      }\n      nodeSet.addAll(generateNodes(numNodes, numRacks));\n    }\n\n    if (jsonEntry.containsKey(SLSConfiguration.JOB_TASKS)) {\n      List tasks \u003d (List) jsonEntry.get(SLSConfiguration.JOB_TASKS);\n      for (Object o : tasks) {\n        Map jsonTask \u003d (Map) o;\n        String hostname \u003d (String) jsonTask.get(SLSConfiguration.TASK_HOST);\n        if (hostname !\u003d null) {\n          nodeSet.add(new NodeDetails(hostname));\n        }\n      }\n    }\n  }",
          "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/utils/SLSUtils.java",
          "extendedDetails": {}
        }
      ]
    },
    "99880d0a16727c770da053464da87960c5b02065": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6505. Define the strings used in SLS JSON input file format. (Contributed by Gergely Novak)\n",
      "commitDate": "27/10/17 2:41 PM",
      "commitName": "99880d0a16727c770da053464da87960c5b02065",
      "commitAuthor": "Yufei Gu",
      "commitDateOld": "04/05/17 5:21 PM",
      "commitNameOld": "3082552b3b991df846caf572b58e44308ddf8eeb",
      "commitAuthorOld": "Robert Kanter",
      "daysBetweenCommits": 175.89,
      "commitsBetweenForRepo": 1207,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,23 @@\n   private static void addNodes(Set\u003cString\u003e nodeSet, Map jsonEntry) {\n-    if (jsonEntry.containsKey(\"num.nodes\")) {\n-      int numNodes \u003d Integer.parseInt(jsonEntry.get(\"num.nodes\").toString());\n+    if (jsonEntry.containsKey(SLSConfiguration.NUM_NODES)) {\n+      int numNodes \u003d Integer.parseInt(\n+          jsonEntry.get(SLSConfiguration.NUM_NODES).toString());\n       int numRacks \u003d 1;\n-      if (jsonEntry.containsKey(\"num.racks\")) {\n+      if (jsonEntry.containsKey(SLSConfiguration.NUM_RACKS)) {\n         numRacks \u003d Integer.parseInt(\n-            jsonEntry.get(\"num.racks\").toString());\n+            jsonEntry.get(SLSConfiguration.NUM_RACKS).toString());\n       }\n       nodeSet.addAll(generateNodes(numNodes, numRacks));\n     }\n \n-    if (jsonEntry.containsKey(\"job.tasks\")) {\n-      List tasks \u003d (List) jsonEntry.get(\"job.tasks\");\n+    if (jsonEntry.containsKey(SLSConfiguration.JOB_TASKS)) {\n+      List tasks \u003d (List) jsonEntry.get(SLSConfiguration.JOB_TASKS);\n       for (Object o : tasks) {\n         Map jsonTask \u003d (Map) o;\n-        String hostname \u003d (String) jsonTask.get(\"container.host\");\n+        String hostname \u003d (String) jsonTask.get(SLSConfiguration.TASK_HOST);\n         if (hostname !\u003d null) {\n           nodeSet.add(hostname);\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void addNodes(Set\u003cString\u003e nodeSet, Map jsonEntry) {\n    if (jsonEntry.containsKey(SLSConfiguration.NUM_NODES)) {\n      int numNodes \u003d Integer.parseInt(\n          jsonEntry.get(SLSConfiguration.NUM_NODES).toString());\n      int numRacks \u003d 1;\n      if (jsonEntry.containsKey(SLSConfiguration.NUM_RACKS)) {\n        numRacks \u003d Integer.parseInt(\n            jsonEntry.get(SLSConfiguration.NUM_RACKS).toString());\n      }\n      nodeSet.addAll(generateNodes(numNodes, numRacks));\n    }\n\n    if (jsonEntry.containsKey(SLSConfiguration.JOB_TASKS)) {\n      List tasks \u003d (List) jsonEntry.get(SLSConfiguration.JOB_TASKS);\n      for (Object o : tasks) {\n        Map jsonTask \u003d (Map) o;\n        String hostname \u003d (String) jsonTask.get(SLSConfiguration.TASK_HOST);\n        if (hostname !\u003d null) {\n          nodeSet.add(hostname);\n        }\n      }\n    }\n  }",
      "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/utils/SLSUtils.java",
      "extendedDetails": {}
    },
    "3082552b3b991df846caf572b58e44308ddf8eeb": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6522. Make SLS JSON input file format simple and scalable (yufeigu via rkanter)\n",
      "commitDate": "04/05/17 5:21 PM",
      "commitName": "3082552b3b991df846caf572b58e44308ddf8eeb",
      "commitAuthor": "Robert Kanter",
      "diff": "@@ -0,0 +1,22 @@\n+  private static void addNodes(Set\u003cString\u003e nodeSet, Map jsonEntry) {\n+    if (jsonEntry.containsKey(\"num.nodes\")) {\n+      int numNodes \u003d Integer.parseInt(jsonEntry.get(\"num.nodes\").toString());\n+      int numRacks \u003d 1;\n+      if (jsonEntry.containsKey(\"num.racks\")) {\n+        numRacks \u003d Integer.parseInt(\n+            jsonEntry.get(\"num.racks\").toString());\n+      }\n+      nodeSet.addAll(generateNodes(numNodes, numRacks));\n+    }\n+\n+    if (jsonEntry.containsKey(\"job.tasks\")) {\n+      List tasks \u003d (List) jsonEntry.get(\"job.tasks\");\n+      for (Object o : tasks) {\n+        Map jsonTask \u003d (Map) o;\n+        String hostname \u003d (String) jsonTask.get(\"container.host\");\n+        if (hostname !\u003d null) {\n+          nodeSet.add(hostname);\n+        }\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static void addNodes(Set\u003cString\u003e nodeSet, Map jsonEntry) {\n    if (jsonEntry.containsKey(\"num.nodes\")) {\n      int numNodes \u003d Integer.parseInt(jsonEntry.get(\"num.nodes\").toString());\n      int numRacks \u003d 1;\n      if (jsonEntry.containsKey(\"num.racks\")) {\n        numRacks \u003d Integer.parseInt(\n            jsonEntry.get(\"num.racks\").toString());\n      }\n      nodeSet.addAll(generateNodes(numNodes, numRacks));\n    }\n\n    if (jsonEntry.containsKey(\"job.tasks\")) {\n      List tasks \u003d (List) jsonEntry.get(\"job.tasks\");\n      for (Object o : tasks) {\n        Map jsonTask \u003d (Map) o;\n        String hostname \u003d (String) jsonTask.get(\"container.host\");\n        if (hostname !\u003d null) {\n          nodeSet.add(hostname);\n        }\n      }\n    }\n  }",
      "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/utils/SLSUtils.java"
    }
  }
}