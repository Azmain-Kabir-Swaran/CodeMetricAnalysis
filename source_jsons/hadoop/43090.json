{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ApiServiceClient.java",
  "functionName": "actionDecommissionInstances",
  "functionId": "actionDecommissionInstances___appName-String__componentInstances-List__String__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/client/ApiServiceClient.java",
  "functionStartLine": 726,
  "functionEndLine": 751,
  "numCommitsSeen": 18,
  "timeTaken": 1431,
  "changeHistory": [
    "4c465f5535054dad2ef0b18128fb115129f6939e"
  ],
  "changeHistoryShort": {
    "4c465f5535054dad2ef0b18128fb115129f6939e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4c465f5535054dad2ef0b18128fb115129f6939e": {
      "type": "Yintroduced",
      "commitMessage": "YARN-8761. Service AM support for decommissioning component instances.\n           Contributed by Billie Rinaldi\n",
      "commitDate": "12/11/18 4:53 PM",
      "commitName": "4c465f5535054dad2ef0b18128fb115129f6939e",
      "commitAuthor": "Eric Yang",
      "diff": "@@ -0,0 +1,26 @@\n+  public int actionDecommissionInstances(String appName, List\u003cString\u003e\n+      componentInstances) throws IOException, YarnException {\n+    int result \u003d EXIT_SUCCESS;\n+    try {\n+      Service service \u003d new Service();\n+      service.setName(appName);\n+      for (String instance : componentInstances) {\n+        String componentName \u003d ServiceApiUtil.parseComponentName(instance);\n+        Component component \u003d service.getComponent(componentName);\n+        if (component \u003d\u003d null) {\n+          component \u003d new Component();\n+          component.setName(componentName);\n+          service.addComponent(component);\n+        }\n+        component.addDecommissionedInstance(instance);\n+      }\n+      String buffer \u003d jsonSerDeser.toJson(service);\n+      ClientResponse response \u003d getApiClient(getServicePath(appName))\n+          .put(ClientResponse.class, buffer);\n+      result \u003d processResponse(response);\n+    } catch (Exception e) {\n+      LOG.error(\"Fail to decommission instance: \", e);\n+      result \u003d EXIT_EXCEPTION_THROWN;\n+    }\n+    return result;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public int actionDecommissionInstances(String appName, List\u003cString\u003e\n      componentInstances) throws IOException, YarnException {\n    int result \u003d EXIT_SUCCESS;\n    try {\n      Service service \u003d new Service();\n      service.setName(appName);\n      for (String instance : componentInstances) {\n        String componentName \u003d ServiceApiUtil.parseComponentName(instance);\n        Component component \u003d service.getComponent(componentName);\n        if (component \u003d\u003d null) {\n          component \u003d new Component();\n          component.setName(componentName);\n          service.addComponent(component);\n        }\n        component.addDecommissionedInstance(instance);\n      }\n      String buffer \u003d jsonSerDeser.toJson(service);\n      ClientResponse response \u003d getApiClient(getServicePath(appName))\n          .put(ClientResponse.class, buffer);\n      result \u003d processResponse(response);\n    } catch (Exception e) {\n      LOG.error(\"Fail to decommission instance: \", e);\n      result \u003d EXIT_EXCEPTION_THROWN;\n    }\n    return result;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/service/client/ApiServiceClient.java"
    }
  }
}