{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMWebServices.java",
  "functionName": "getLabelsToNodes",
  "functionId": "getLabelsToNodes___labels-Set__String__(annotations-@QueryParam(RMWSConsts.LABELS))",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
  "functionStartLine": 1228,
  "functionEndLine": 1252,
  "numCommitsSeen": 169,
  "timeTaken": 5000,
  "changeHistory": [
    "d76fbbc9b82e720d7d5188f9ae2f56a8d78f3a98",
    "547cb53e8ae2f19b55f9de7670b91b009d8f3bdd",
    "ec0a852a37d5c91a62d3d0ff3ddbd9d58235b312",
    "7f19e7a2549a098236d06b29b7076bb037533f05",
    "e48cedc663b8a26fd62140c8e2907f9b4edd9785"
  ],
  "changeHistoryShort": {
    "d76fbbc9b82e720d7d5188f9ae2f56a8d78f3a98": "Ybodychange",
    "547cb53e8ae2f19b55f9de7670b91b009d8f3bdd": "Yparametermetachange",
    "ec0a852a37d5c91a62d3d0ff3ddbd9d58235b312": "Ybodychange",
    "7f19e7a2549a098236d06b29b7076bb037533f05": "Ybodychange",
    "e48cedc663b8a26fd62140c8e2907f9b4edd9785": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d76fbbc9b82e720d7d5188f9ae2f56a8d78f3a98": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8249. Fixed few REST APIs in RMWebServices to have static-user check. Contributed by Sunil Govindan.\n",
      "commitDate": "10/05/18 7:05 PM",
      "commitName": "d76fbbc9b82e720d7d5188f9ae2f56a8d78f3a98",
      "commitAuthor": "Vinod Kumar Vavilapalli (I am also known as @tshooter.)",
      "commitDateOld": "27/04/18 10:28 AM",
      "commitNameOld": "ef3ecc308dbea41c6a88bd4d16739c7bbc10cdda",
      "commitAuthorOld": "Rohith Sharma K S",
      "daysBetweenCommits": 13.36,
      "commitsBetweenForRepo": 87,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n   public LabelsToNodesInfo getLabelsToNodes(\n       @QueryParam(RMWSConsts.LABELS) Set\u003cString\u003e labels) throws IOException {\n-    init();\n+    initForReadableEndpoints();\n \n     LabelsToNodesInfo lts \u003d new LabelsToNodesInfo();\n     Map\u003cNodeLabelInfo, NodeIDsInfo\u003e ltsMap \u003d lts.getLabelsToNodes();\n     Map\u003cNodeLabel, Set\u003cNodeId\u003e\u003e labelsToNodeId \u003d null;\n     if (labels \u003d\u003d null || labels.size() \u003d\u003d 0) {\n       labelsToNodeId \u003d\n           rm.getRMContext().getNodeLabelManager().getLabelsInfoToNodes();\n     } else {\n       labelsToNodeId \u003d\n           rm.getRMContext().getNodeLabelManager().getLabelsInfoToNodes(labels);\n     }\n \n     for (Entry\u003cNodeLabel, Set\u003cNodeId\u003e\u003e entry : labelsToNodeId.entrySet()) {\n       List\u003cString\u003e nodeIdStrList \u003d new ArrayList\u003cString\u003e();\n       for (NodeId nodeId : entry.getValue()) {\n         nodeIdStrList.add(nodeId.toString());\n       }\n       ltsMap.put(new NodeLabelInfo(entry.getKey()),\n           new NodeIDsInfo(nodeIdStrList));\n     }\n     return lts;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public LabelsToNodesInfo getLabelsToNodes(\n      @QueryParam(RMWSConsts.LABELS) Set\u003cString\u003e labels) throws IOException {\n    initForReadableEndpoints();\n\n    LabelsToNodesInfo lts \u003d new LabelsToNodesInfo();\n    Map\u003cNodeLabelInfo, NodeIDsInfo\u003e ltsMap \u003d lts.getLabelsToNodes();\n    Map\u003cNodeLabel, Set\u003cNodeId\u003e\u003e labelsToNodeId \u003d null;\n    if (labels \u003d\u003d null || labels.size() \u003d\u003d 0) {\n      labelsToNodeId \u003d\n          rm.getRMContext().getNodeLabelManager().getLabelsInfoToNodes();\n    } else {\n      labelsToNodeId \u003d\n          rm.getRMContext().getNodeLabelManager().getLabelsInfoToNodes(labels);\n    }\n\n    for (Entry\u003cNodeLabel, Set\u003cNodeId\u003e\u003e entry : labelsToNodeId.entrySet()) {\n      List\u003cString\u003e nodeIdStrList \u003d new ArrayList\u003cString\u003e();\n      for (NodeId nodeId : entry.getValue()) {\n        nodeIdStrList.add(nodeId.toString());\n      }\n      ltsMap.put(new NodeLabelInfo(entry.getKey()),\n          new NodeIDsInfo(nodeIdStrList));\n    }\n    return lts;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
      "extendedDetails": {}
    },
    "547cb53e8ae2f19b55f9de7670b91b009d8f3bdd": {
      "type": "Yparametermetachange",
      "commitMessage": "YARN-6634. [API] Refactor ResourceManager WebServices to make API explicit. (Giovanni Matteo Fumarola via curino)\n",
      "commitDate": "07/06/17 1:41 PM",
      "commitName": "547cb53e8ae2f19b55f9de7670b91b009d8f3bdd",
      "commitAuthor": "Carlo Curino",
      "commitDateOld": "08/12/16 2:23 AM",
      "commitNameOld": "74d0066d3392169bec872f438a0818e2f5323010",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 181.43,
      "commitsBetweenForRepo": 954,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n   public LabelsToNodesInfo getLabelsToNodes(\n-      @QueryParam(\"labels\") Set\u003cString\u003e labels) throws IOException {\n+      @QueryParam(RMWSConsts.LABELS) Set\u003cString\u003e labels) throws IOException {\n     init();\n \n     LabelsToNodesInfo lts \u003d new LabelsToNodesInfo();\n     Map\u003cNodeLabelInfo, NodeIDsInfo\u003e ltsMap \u003d lts.getLabelsToNodes();\n     Map\u003cNodeLabel, Set\u003cNodeId\u003e\u003e labelsToNodeId \u003d null;\n     if (labels \u003d\u003d null || labels.size() \u003d\u003d 0) {\n       labelsToNodeId \u003d\n           rm.getRMContext().getNodeLabelManager().getLabelsInfoToNodes();\n     } else {\n       labelsToNodeId \u003d\n           rm.getRMContext().getNodeLabelManager().getLabelsInfoToNodes(labels);\n     }\n \n     for (Entry\u003cNodeLabel, Set\u003cNodeId\u003e\u003e entry : labelsToNodeId.entrySet()) {\n       List\u003cString\u003e nodeIdStrList \u003d new ArrayList\u003cString\u003e();\n       for (NodeId nodeId : entry.getValue()) {\n         nodeIdStrList.add(nodeId.toString());\n       }\n-      ltsMap.put(new NodeLabelInfo(entry.getKey()), new NodeIDsInfo(\n-          nodeIdStrList));\n+      ltsMap.put(new NodeLabelInfo(entry.getKey()),\n+          new NodeIDsInfo(nodeIdStrList));\n     }\n     return lts;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public LabelsToNodesInfo getLabelsToNodes(\n      @QueryParam(RMWSConsts.LABELS) Set\u003cString\u003e labels) throws IOException {\n    init();\n\n    LabelsToNodesInfo lts \u003d new LabelsToNodesInfo();\n    Map\u003cNodeLabelInfo, NodeIDsInfo\u003e ltsMap \u003d lts.getLabelsToNodes();\n    Map\u003cNodeLabel, Set\u003cNodeId\u003e\u003e labelsToNodeId \u003d null;\n    if (labels \u003d\u003d null || labels.size() \u003d\u003d 0) {\n      labelsToNodeId \u003d\n          rm.getRMContext().getNodeLabelManager().getLabelsInfoToNodes();\n    } else {\n      labelsToNodeId \u003d\n          rm.getRMContext().getNodeLabelManager().getLabelsInfoToNodes(labels);\n    }\n\n    for (Entry\u003cNodeLabel, Set\u003cNodeId\u003e\u003e entry : labelsToNodeId.entrySet()) {\n      List\u003cString\u003e nodeIdStrList \u003d new ArrayList\u003cString\u003e();\n      for (NodeId nodeId : entry.getValue()) {\n        nodeIdStrList.add(nodeId.toString());\n      }\n      ltsMap.put(new NodeLabelInfo(entry.getKey()),\n          new NodeIDsInfo(nodeIdStrList));\n    }\n    return lts;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
      "extendedDetails": {
        "oldValue": "[labels-Set\u003cString\u003e(annotations-@QueryParam(\"labels\"))]",
        "newValue": "[labels-Set\u003cString\u003e(annotations-@QueryParam(RMWSConsts.LABELS))]"
      }
    },
    "ec0a852a37d5c91a62d3d0ff3ddbd9d58235b312": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3647. RMWebServices api\u0027s should use updated api from CommonNodeLabelsManager to get NodeLabel object. (Sunil G via wangda)\n",
      "commitDate": "27/05/15 12:51 PM",
      "commitName": "ec0a852a37d5c91a62d3d0ff3ddbd9d58235b312",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "13/05/15 5:00 PM",
      "commitNameOld": "0e85044e26da698c45185585310ae0e99448cd80",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 13.83,
      "commitsBetweenForRepo": 94,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n   public LabelsToNodesInfo getLabelsToNodes(\n       @QueryParam(\"labels\") Set\u003cString\u003e labels) throws IOException {\n     init();\n \n     LabelsToNodesInfo lts \u003d new LabelsToNodesInfo();\n     Map\u003cNodeLabelInfo, NodeIDsInfo\u003e ltsMap \u003d lts.getLabelsToNodes();\n-    Map\u003cString, Set\u003cNodeId\u003e\u003e labelsToNodeId \u003d null;\n+    Map\u003cNodeLabel, Set\u003cNodeId\u003e\u003e labelsToNodeId \u003d null;\n     if (labels \u003d\u003d null || labels.size() \u003d\u003d 0) {\n       labelsToNodeId \u003d\n-          rm.getRMContext().getNodeLabelManager().getLabelsToNodes();\n+          rm.getRMContext().getNodeLabelManager().getLabelsInfoToNodes();\n     } else {\n       labelsToNodeId \u003d\n-          rm.getRMContext().getNodeLabelManager().getLabelsToNodes(labels);\n+          rm.getRMContext().getNodeLabelManager().getLabelsInfoToNodes(labels);\n     }\n \n-    for (Entry\u003cString, Set\u003cNodeId\u003e\u003e entry : labelsToNodeId.entrySet()) {\n+    for (Entry\u003cNodeLabel, Set\u003cNodeId\u003e\u003e entry : labelsToNodeId.entrySet()) {\n       List\u003cString\u003e nodeIdStrList \u003d new ArrayList\u003cString\u003e();\n       for (NodeId nodeId : entry.getValue()) {\n         nodeIdStrList.add(nodeId.toString());\n       }\n       ltsMap.put(new NodeLabelInfo(entry.getKey()), new NodeIDsInfo(\n           nodeIdStrList));\n     }\n     return lts;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public LabelsToNodesInfo getLabelsToNodes(\n      @QueryParam(\"labels\") Set\u003cString\u003e labels) throws IOException {\n    init();\n\n    LabelsToNodesInfo lts \u003d new LabelsToNodesInfo();\n    Map\u003cNodeLabelInfo, NodeIDsInfo\u003e ltsMap \u003d lts.getLabelsToNodes();\n    Map\u003cNodeLabel, Set\u003cNodeId\u003e\u003e labelsToNodeId \u003d null;\n    if (labels \u003d\u003d null || labels.size() \u003d\u003d 0) {\n      labelsToNodeId \u003d\n          rm.getRMContext().getNodeLabelManager().getLabelsInfoToNodes();\n    } else {\n      labelsToNodeId \u003d\n          rm.getRMContext().getNodeLabelManager().getLabelsInfoToNodes(labels);\n    }\n\n    for (Entry\u003cNodeLabel, Set\u003cNodeId\u003e\u003e entry : labelsToNodeId.entrySet()) {\n      List\u003cString\u003e nodeIdStrList \u003d new ArrayList\u003cString\u003e();\n      for (NodeId nodeId : entry.getValue()) {\n        nodeIdStrList.add(nodeId.toString());\n      }\n      ltsMap.put(new NodeLabelInfo(entry.getKey()), new NodeIDsInfo(\n          nodeIdStrList));\n    }\n    return lts;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
      "extendedDetails": {}
    },
    "7f19e7a2549a098236d06b29b7076bb037533f05": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3521. Support return structured NodeLabel objects in REST API (Sunil G via wangda)\n",
      "commitDate": "13/05/15 1:43 PM",
      "commitName": "7f19e7a2549a098236d06b29b7076bb037533f05",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "29/04/15 2:25 PM",
      "commitNameOld": "2e215484bd05cd5e3b7a81d3558c6879a05dd2d2",
      "commitAuthorOld": "tgraves",
      "daysBetweenCommits": 13.97,
      "commitsBetweenForRepo": 201,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,25 @@\n   public LabelsToNodesInfo getLabelsToNodes(\n       @QueryParam(\"labels\") Set\u003cString\u003e labels) throws IOException {\n     init();\n \n     LabelsToNodesInfo lts \u003d new LabelsToNodesInfo();\n-    Map\u003cString, NodeIDsInfo\u003e ltsMap \u003d lts.getLabelsToNodes();\n+    Map\u003cNodeLabelInfo, NodeIDsInfo\u003e ltsMap \u003d lts.getLabelsToNodes();\n     Map\u003cString, Set\u003cNodeId\u003e\u003e labelsToNodeId \u003d null;\n     if (labels \u003d\u003d null || labels.size() \u003d\u003d 0) {\n       labelsToNodeId \u003d\n           rm.getRMContext().getNodeLabelManager().getLabelsToNodes();\n     } else {\n       labelsToNodeId \u003d\n           rm.getRMContext().getNodeLabelManager().getLabelsToNodes(labels);\n     }\n \n     for (Entry\u003cString, Set\u003cNodeId\u003e\u003e entry : labelsToNodeId.entrySet()) {\n       List\u003cString\u003e nodeIdStrList \u003d new ArrayList\u003cString\u003e();\n       for (NodeId nodeId : entry.getValue()) {\n         nodeIdStrList.add(nodeId.toString());\n       }\n-      ltsMap.put(entry.getKey(), new NodeIDsInfo(nodeIdStrList));\n+      ltsMap.put(new NodeLabelInfo(entry.getKey()), new NodeIDsInfo(\n+          nodeIdStrList));\n     }\n     return lts;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public LabelsToNodesInfo getLabelsToNodes(\n      @QueryParam(\"labels\") Set\u003cString\u003e labels) throws IOException {\n    init();\n\n    LabelsToNodesInfo lts \u003d new LabelsToNodesInfo();\n    Map\u003cNodeLabelInfo, NodeIDsInfo\u003e ltsMap \u003d lts.getLabelsToNodes();\n    Map\u003cString, Set\u003cNodeId\u003e\u003e labelsToNodeId \u003d null;\n    if (labels \u003d\u003d null || labels.size() \u003d\u003d 0) {\n      labelsToNodeId \u003d\n          rm.getRMContext().getNodeLabelManager().getLabelsToNodes();\n    } else {\n      labelsToNodeId \u003d\n          rm.getRMContext().getNodeLabelManager().getLabelsToNodes(labels);\n    }\n\n    for (Entry\u003cString, Set\u003cNodeId\u003e\u003e entry : labelsToNodeId.entrySet()) {\n      List\u003cString\u003e nodeIdStrList \u003d new ArrayList\u003cString\u003e();\n      for (NodeId nodeId : entry.getValue()) {\n        nodeIdStrList.add(nodeId.toString());\n      }\n      ltsMap.put(new NodeLabelInfo(entry.getKey()), new NodeIDsInfo(\n          nodeIdStrList));\n    }\n    return lts;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java",
      "extendedDetails": {}
    },
    "e48cedc663b8a26fd62140c8e2907f9b4edd9785": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3326. Support RESTful API for getLabelsToNodes. Contributed by Naganarasimha G R.\n",
      "commitDate": "15/04/15 12:03 PM",
      "commitName": "e48cedc663b8a26fd62140c8e2907f9b4edd9785",
      "commitAuthor": "Tsuyoshi Ozawa",
      "diff": "@@ -0,0 +1,24 @@\n+  public LabelsToNodesInfo getLabelsToNodes(\n+      @QueryParam(\"labels\") Set\u003cString\u003e labels) throws IOException {\n+    init();\n+\n+    LabelsToNodesInfo lts \u003d new LabelsToNodesInfo();\n+    Map\u003cString, NodeIDsInfo\u003e ltsMap \u003d lts.getLabelsToNodes();\n+    Map\u003cString, Set\u003cNodeId\u003e\u003e labelsToNodeId \u003d null;\n+    if (labels \u003d\u003d null || labels.size() \u003d\u003d 0) {\n+      labelsToNodeId \u003d\n+          rm.getRMContext().getNodeLabelManager().getLabelsToNodes();\n+    } else {\n+      labelsToNodeId \u003d\n+          rm.getRMContext().getNodeLabelManager().getLabelsToNodes(labels);\n+    }\n+\n+    for (Entry\u003cString, Set\u003cNodeId\u003e\u003e entry : labelsToNodeId.entrySet()) {\n+      List\u003cString\u003e nodeIdStrList \u003d new ArrayList\u003cString\u003e();\n+      for (NodeId nodeId : entry.getValue()) {\n+        nodeIdStrList.add(nodeId.toString());\n+      }\n+      ltsMap.put(entry.getKey(), new NodeIDsInfo(nodeIdStrList));\n+    }\n+    return lts;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public LabelsToNodesInfo getLabelsToNodes(\n      @QueryParam(\"labels\") Set\u003cString\u003e labels) throws IOException {\n    init();\n\n    LabelsToNodesInfo lts \u003d new LabelsToNodesInfo();\n    Map\u003cString, NodeIDsInfo\u003e ltsMap \u003d lts.getLabelsToNodes();\n    Map\u003cString, Set\u003cNodeId\u003e\u003e labelsToNodeId \u003d null;\n    if (labels \u003d\u003d null || labels.size() \u003d\u003d 0) {\n      labelsToNodeId \u003d\n          rm.getRMContext().getNodeLabelManager().getLabelsToNodes();\n    } else {\n      labelsToNodeId \u003d\n          rm.getRMContext().getNodeLabelManager().getLabelsToNodes(labels);\n    }\n\n    for (Entry\u003cString, Set\u003cNodeId\u003e\u003e entry : labelsToNodeId.entrySet()) {\n      List\u003cString\u003e nodeIdStrList \u003d new ArrayList\u003cString\u003e();\n      for (NodeId nodeId : entry.getValue()) {\n        nodeIdStrList.add(nodeId.toString());\n      }\n      ltsMap.put(entry.getKey(), new NodeIDsInfo(nodeIdStrList));\n    }\n    return lts;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebServices.java"
    }
  }
}