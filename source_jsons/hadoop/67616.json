{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CopyListing.java",
  "functionName": "getCopyListing",
  "functionId": "getCopyListing___configuration-Configuration__credentials-Credentials__context-DistCpContext",
  "sourceFilePath": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/CopyListing.java",
  "functionStartLine": 282,
  "functionEndLine": 306,
  "numCommitsSeen": 26,
  "timeTaken": 1917,
  "changeHistory": [
    "26172a94d6431e70d7fe15d66be9a7e195f79f60",
    "0bc15cb6e60dc60885234e01dec1c7cb4557a926",
    "ed70fa142cabdbc1065e4dbbc95e99c8850c4751",
    "6f92ad9868b008eb523ae3279e05004de31a08ce",
    "d06948002fb0cabf72cc0d46bf2fa67d45370f67"
  ],
  "changeHistoryShort": {
    "26172a94d6431e70d7fe15d66be9a7e195f79f60": "Ymultichange(Yparameterchange,Ybodychange)",
    "0bc15cb6e60dc60885234e01dec1c7cb4557a926": "Ybodychange",
    "ed70fa142cabdbc1065e4dbbc95e99c8850c4751": "Ybodychange",
    "6f92ad9868b008eb523ae3279e05004de31a08ce": "Ymultichange(Yexceptionschange,Ybodychange)",
    "d06948002fb0cabf72cc0d46bf2fa67d45370f67": "Yintroduced"
  },
  "changeHistoryDetails": {
    "26172a94d6431e70d7fe15d66be9a7e195f79f60": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-14267. Make DistCpOptions immutable. Contributed by Mingliang Liu\n",
      "commitDate": "31/03/17 8:04 PM",
      "commitName": "26172a94d6431e70d7fe15d66be9a7e195f79f60",
      "commitAuthor": "Mingliang Liu",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-14267. Make DistCpOptions immutable. Contributed by Mingliang Liu\n",
          "commitDate": "31/03/17 8:04 PM",
          "commitName": "26172a94d6431e70d7fe15d66be9a7e195f79f60",
          "commitAuthor": "Mingliang Liu",
          "commitDateOld": "30/03/17 5:38 PM",
          "commitNameOld": "bf3fb585aaf2b179836e139c041fc87920a3c886",
          "commitAuthorOld": "Yongjun Zhang",
          "daysBetweenCommits": 1.1,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,25 @@\n   public static CopyListing getCopyListing(Configuration configuration,\n-                                           Credentials credentials,\n-                                           DistCpOptions options)\n-      throws IOException {\n+      Credentials credentials, DistCpContext context) throws IOException {\n     String copyListingClassName \u003d configuration.get(DistCpConstants.\n         CONF_LABEL_COPY_LISTING_CLASS, \"\");\n     Class\u003c? extends CopyListing\u003e copyListingClass;\n     try {\n       if (! copyListingClassName.isEmpty()) {\n         copyListingClass \u003d configuration.getClass(DistCpConstants.\n             CONF_LABEL_COPY_LISTING_CLASS, GlobbedCopyListing.class,\n             CopyListing.class);\n       } else {\n-        if (options.getSourceFileListing() \u003d\u003d null) {\n+        if (context.getSourceFileListing() \u003d\u003d null) {\n             copyListingClass \u003d GlobbedCopyListing.class;\n         } else {\n             copyListingClass \u003d FileBasedCopyListing.class;\n         }\n       }\n       copyListingClassName \u003d copyListingClass.getName();\n       Constructor\u003c? extends CopyListing\u003e constructor \u003d copyListingClass.\n           getDeclaredConstructor(Configuration.class, Credentials.class);\n       return constructor.newInstance(configuration, credentials);\n     } catch (Exception e) {\n       throw new IOException(\"Unable to instantiate \" + copyListingClassName, e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static CopyListing getCopyListing(Configuration configuration,\n      Credentials credentials, DistCpContext context) throws IOException {\n    String copyListingClassName \u003d configuration.get(DistCpConstants.\n        CONF_LABEL_COPY_LISTING_CLASS, \"\");\n    Class\u003c? extends CopyListing\u003e copyListingClass;\n    try {\n      if (! copyListingClassName.isEmpty()) {\n        copyListingClass \u003d configuration.getClass(DistCpConstants.\n            CONF_LABEL_COPY_LISTING_CLASS, GlobbedCopyListing.class,\n            CopyListing.class);\n      } else {\n        if (context.getSourceFileListing() \u003d\u003d null) {\n            copyListingClass \u003d GlobbedCopyListing.class;\n        } else {\n            copyListingClass \u003d FileBasedCopyListing.class;\n        }\n      }\n      copyListingClassName \u003d copyListingClass.getName();\n      Constructor\u003c? extends CopyListing\u003e constructor \u003d copyListingClass.\n          getDeclaredConstructor(Configuration.class, Credentials.class);\n      return constructor.newInstance(configuration, credentials);\n    } catch (Exception e) {\n      throw new IOException(\"Unable to instantiate \" + copyListingClassName, e);\n    }\n  }",
          "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/CopyListing.java",
          "extendedDetails": {
            "oldValue": "[configuration-Configuration, credentials-Credentials, options-DistCpOptions]",
            "newValue": "[configuration-Configuration, credentials-Credentials, context-DistCpContext]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-14267. Make DistCpOptions immutable. Contributed by Mingliang Liu\n",
          "commitDate": "31/03/17 8:04 PM",
          "commitName": "26172a94d6431e70d7fe15d66be9a7e195f79f60",
          "commitAuthor": "Mingliang Liu",
          "commitDateOld": "30/03/17 5:38 PM",
          "commitNameOld": "bf3fb585aaf2b179836e139c041fc87920a3c886",
          "commitAuthorOld": "Yongjun Zhang",
          "daysBetweenCommits": 1.1,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,25 @@\n   public static CopyListing getCopyListing(Configuration configuration,\n-                                           Credentials credentials,\n-                                           DistCpOptions options)\n-      throws IOException {\n+      Credentials credentials, DistCpContext context) throws IOException {\n     String copyListingClassName \u003d configuration.get(DistCpConstants.\n         CONF_LABEL_COPY_LISTING_CLASS, \"\");\n     Class\u003c? extends CopyListing\u003e copyListingClass;\n     try {\n       if (! copyListingClassName.isEmpty()) {\n         copyListingClass \u003d configuration.getClass(DistCpConstants.\n             CONF_LABEL_COPY_LISTING_CLASS, GlobbedCopyListing.class,\n             CopyListing.class);\n       } else {\n-        if (options.getSourceFileListing() \u003d\u003d null) {\n+        if (context.getSourceFileListing() \u003d\u003d null) {\n             copyListingClass \u003d GlobbedCopyListing.class;\n         } else {\n             copyListingClass \u003d FileBasedCopyListing.class;\n         }\n       }\n       copyListingClassName \u003d copyListingClass.getName();\n       Constructor\u003c? extends CopyListing\u003e constructor \u003d copyListingClass.\n           getDeclaredConstructor(Configuration.class, Credentials.class);\n       return constructor.newInstance(configuration, credentials);\n     } catch (Exception e) {\n       throw new IOException(\"Unable to instantiate \" + copyListingClassName, e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static CopyListing getCopyListing(Configuration configuration,\n      Credentials credentials, DistCpContext context) throws IOException {\n    String copyListingClassName \u003d configuration.get(DistCpConstants.\n        CONF_LABEL_COPY_LISTING_CLASS, \"\");\n    Class\u003c? extends CopyListing\u003e copyListingClass;\n    try {\n      if (! copyListingClassName.isEmpty()) {\n        copyListingClass \u003d configuration.getClass(DistCpConstants.\n            CONF_LABEL_COPY_LISTING_CLASS, GlobbedCopyListing.class,\n            CopyListing.class);\n      } else {\n        if (context.getSourceFileListing() \u003d\u003d null) {\n            copyListingClass \u003d GlobbedCopyListing.class;\n        } else {\n            copyListingClass \u003d FileBasedCopyListing.class;\n        }\n      }\n      copyListingClassName \u003d copyListingClass.getName();\n      Constructor\u003c? extends CopyListing\u003e constructor \u003d copyListingClass.\n          getDeclaredConstructor(Configuration.class, Credentials.class);\n      return constructor.newInstance(configuration, credentials);\n    } catch (Exception e) {\n      throw new IOException(\"Unable to instantiate \" + copyListingClassName, e);\n    }\n  }",
          "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/CopyListing.java",
          "extendedDetails": {}
        }
      ]
    },
    "0bc15cb6e60dc60885234e01dec1c7cb4557a926": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8828. Utilize Snapshot diff report to build diff copy list in distcp. (Yufei Gu via Yongjun Zhang)\n",
      "commitDate": "20/08/15 8:02 AM",
      "commitName": "0bc15cb6e60dc60885234e01dec1c7cb4557a926",
      "commitAuthor": "Yongjun Zhang",
      "commitDateOld": "04/03/15 10:30 AM",
      "commitNameOld": "ed70fa142cabdbc1065e4dbbc95e99c8850c4751",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 168.86,
      "commitsBetweenForRepo": 1325,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,27 @@\n   public static CopyListing getCopyListing(Configuration configuration,\n                                            Credentials credentials,\n                                            DistCpOptions options)\n       throws IOException {\n-    if (options.shouldUseDiff()) {\n-      return new GlobbedCopyListing(configuration, credentials);\n-    }\n     String copyListingClassName \u003d configuration.get(DistCpConstants.\n         CONF_LABEL_COPY_LISTING_CLASS, \"\");\n     Class\u003c? extends CopyListing\u003e copyListingClass;\n     try {\n       if (! copyListingClassName.isEmpty()) {\n         copyListingClass \u003d configuration.getClass(DistCpConstants.\n             CONF_LABEL_COPY_LISTING_CLASS, GlobbedCopyListing.class,\n             CopyListing.class);\n       } else {\n         if (options.getSourceFileListing() \u003d\u003d null) {\n             copyListingClass \u003d GlobbedCopyListing.class;\n         } else {\n             copyListingClass \u003d FileBasedCopyListing.class;\n         }\n       }\n       copyListingClassName \u003d copyListingClass.getName();\n       Constructor\u003c? extends CopyListing\u003e constructor \u003d copyListingClass.\n           getDeclaredConstructor(Configuration.class, Credentials.class);\n       return constructor.newInstance(configuration, credentials);\n     } catch (Exception e) {\n       throw new IOException(\"Unable to instantiate \" + copyListingClassName, e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static CopyListing getCopyListing(Configuration configuration,\n                                           Credentials credentials,\n                                           DistCpOptions options)\n      throws IOException {\n    String copyListingClassName \u003d configuration.get(DistCpConstants.\n        CONF_LABEL_COPY_LISTING_CLASS, \"\");\n    Class\u003c? extends CopyListing\u003e copyListingClass;\n    try {\n      if (! copyListingClassName.isEmpty()) {\n        copyListingClass \u003d configuration.getClass(DistCpConstants.\n            CONF_LABEL_COPY_LISTING_CLASS, GlobbedCopyListing.class,\n            CopyListing.class);\n      } else {\n        if (options.getSourceFileListing() \u003d\u003d null) {\n            copyListingClass \u003d GlobbedCopyListing.class;\n        } else {\n            copyListingClass \u003d FileBasedCopyListing.class;\n        }\n      }\n      copyListingClassName \u003d copyListingClass.getName();\n      Constructor\u003c? extends CopyListing\u003e constructor \u003d copyListingClass.\n          getDeclaredConstructor(Configuration.class, Credentials.class);\n      return constructor.newInstance(configuration, credentials);\n    } catch (Exception e) {\n      throw new IOException(\"Unable to instantiate \" + copyListingClassName, e);\n    }\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/CopyListing.java",
      "extendedDetails": {}
    },
    "ed70fa142cabdbc1065e4dbbc95e99c8850c4751": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7535. Utilize Snapshot diff report for distcp. Contributed by Jing Zhao.\n",
      "commitDate": "04/03/15 10:30 AM",
      "commitName": "ed70fa142cabdbc1065e4dbbc95e99c8850c4751",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "03/03/15 1:06 AM",
      "commitNameOld": "9ae7f9eb7baeb244e1b95aabc93ad8124870b9a9",
      "commitAuthorOld": "Tsuyoshi Ozawa",
      "daysBetweenCommits": 1.39,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,30 @@\n   public static CopyListing getCopyListing(Configuration configuration,\n                                            Credentials credentials,\n                                            DistCpOptions options)\n       throws IOException {\n-\n+    if (options.shouldUseDiff()) {\n+      return new GlobbedCopyListing(configuration, credentials);\n+    }\n     String copyListingClassName \u003d configuration.get(DistCpConstants.\n         CONF_LABEL_COPY_LISTING_CLASS, \"\");\n     Class\u003c? extends CopyListing\u003e copyListingClass;\n     try {\n       if (! copyListingClassName.isEmpty()) {\n         copyListingClass \u003d configuration.getClass(DistCpConstants.\n             CONF_LABEL_COPY_LISTING_CLASS, GlobbedCopyListing.class,\n             CopyListing.class);\n       } else {\n         if (options.getSourceFileListing() \u003d\u003d null) {\n             copyListingClass \u003d GlobbedCopyListing.class;\n         } else {\n             copyListingClass \u003d FileBasedCopyListing.class;\n         }\n       }\n       copyListingClassName \u003d copyListingClass.getName();\n       Constructor\u003c? extends CopyListing\u003e constructor \u003d copyListingClass.\n           getDeclaredConstructor(Configuration.class, Credentials.class);\n       return constructor.newInstance(configuration, credentials);\n     } catch (Exception e) {\n       throw new IOException(\"Unable to instantiate \" + copyListingClassName, e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static CopyListing getCopyListing(Configuration configuration,\n                                           Credentials credentials,\n                                           DistCpOptions options)\n      throws IOException {\n    if (options.shouldUseDiff()) {\n      return new GlobbedCopyListing(configuration, credentials);\n    }\n    String copyListingClassName \u003d configuration.get(DistCpConstants.\n        CONF_LABEL_COPY_LISTING_CLASS, \"\");\n    Class\u003c? extends CopyListing\u003e copyListingClass;\n    try {\n      if (! copyListingClassName.isEmpty()) {\n        copyListingClass \u003d configuration.getClass(DistCpConstants.\n            CONF_LABEL_COPY_LISTING_CLASS, GlobbedCopyListing.class,\n            CopyListing.class);\n      } else {\n        if (options.getSourceFileListing() \u003d\u003d null) {\n            copyListingClass \u003d GlobbedCopyListing.class;\n        } else {\n            copyListingClass \u003d FileBasedCopyListing.class;\n        }\n      }\n      copyListingClassName \u003d copyListingClass.getName();\n      Constructor\u003c? extends CopyListing\u003e constructor \u003d copyListingClass.\n          getDeclaredConstructor(Configuration.class, Credentials.class);\n      return constructor.newInstance(configuration, credentials);\n    } catch (Exception e) {\n      throw new IOException(\"Unable to instantiate \" + copyListingClassName, e);\n    }\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/CopyListing.java",
      "extendedDetails": {}
    },
    "6f92ad9868b008eb523ae3279e05004de31a08ce": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "MAPREDUCE-5014. Extend Distcp to accept a custom CopyListing. Contributed by Srikanth Sundarrajan\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1459690 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/03/13 3:09 AM",
      "commitName": "6f92ad9868b008eb523ae3279e05004de31a08ce",
      "commitAuthor": "Amareshwari Sri Ramadasu",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "MAPREDUCE-5014. Extend Distcp to accept a custom CopyListing. Contributed by Srikanth Sundarrajan\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1459690 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/03/13 3:09 AM",
          "commitName": "6f92ad9868b008eb523ae3279e05004de31a08ce",
          "commitAuthor": "Amareshwari Sri Ramadasu",
          "commitDateOld": "25/01/12 10:36 PM",
          "commitNameOld": "d06948002fb0cabf72cc0d46bf2fa67d45370f67",
          "commitAuthorOld": "Mahadev Konar",
          "daysBetweenCommits": 421.15,
          "commitsBetweenForRepo": 2459,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,28 @@\n   public static CopyListing getCopyListing(Configuration configuration,\n                                            Credentials credentials,\n-                                           DistCpOptions options) {\n-    if (options.getSourceFileListing() \u003d\u003d null) {\n-      return new GlobbedCopyListing(configuration, credentials);\n-    } else {\n-      return new FileBasedCopyListing(configuration, credentials);\n+                                           DistCpOptions options)\n+      throws IOException {\n+\n+    String copyListingClassName \u003d configuration.get(DistCpConstants.\n+        CONF_LABEL_COPY_LISTING_CLASS, \"\");\n+    Class\u003c? extends CopyListing\u003e copyListingClass;\n+    try {\n+      if (! copyListingClassName.isEmpty()) {\n+        copyListingClass \u003d configuration.getClass(DistCpConstants.\n+            CONF_LABEL_COPY_LISTING_CLASS, GlobbedCopyListing.class,\n+            CopyListing.class);\n+      } else {\n+        if (options.getSourceFileListing() \u003d\u003d null) {\n+            copyListingClass \u003d GlobbedCopyListing.class;\n+        } else {\n+            copyListingClass \u003d FileBasedCopyListing.class;\n+        }\n+      }\n+      copyListingClassName \u003d copyListingClass.getName();\n+      Constructor\u003c? extends CopyListing\u003e constructor \u003d copyListingClass.\n+          getDeclaredConstructor(Configuration.class, Credentials.class);\n+      return constructor.newInstance(configuration, credentials);\n+    } catch (Exception e) {\n+      throw new IOException(\"Unable to instantiate \" + copyListingClassName, e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static CopyListing getCopyListing(Configuration configuration,\n                                           Credentials credentials,\n                                           DistCpOptions options)\n      throws IOException {\n\n    String copyListingClassName \u003d configuration.get(DistCpConstants.\n        CONF_LABEL_COPY_LISTING_CLASS, \"\");\n    Class\u003c? extends CopyListing\u003e copyListingClass;\n    try {\n      if (! copyListingClassName.isEmpty()) {\n        copyListingClass \u003d configuration.getClass(DistCpConstants.\n            CONF_LABEL_COPY_LISTING_CLASS, GlobbedCopyListing.class,\n            CopyListing.class);\n      } else {\n        if (options.getSourceFileListing() \u003d\u003d null) {\n            copyListingClass \u003d GlobbedCopyListing.class;\n        } else {\n            copyListingClass \u003d FileBasedCopyListing.class;\n        }\n      }\n      copyListingClassName \u003d copyListingClass.getName();\n      Constructor\u003c? extends CopyListing\u003e constructor \u003d copyListingClass.\n          getDeclaredConstructor(Configuration.class, Credentials.class);\n      return constructor.newInstance(configuration, credentials);\n    } catch (Exception e) {\n      throw new IOException(\"Unable to instantiate \" + copyListingClassName, e);\n    }\n  }",
          "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/CopyListing.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[IOException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-5014. Extend Distcp to accept a custom CopyListing. Contributed by Srikanth Sundarrajan\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1459690 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/03/13 3:09 AM",
          "commitName": "6f92ad9868b008eb523ae3279e05004de31a08ce",
          "commitAuthor": "Amareshwari Sri Ramadasu",
          "commitDateOld": "25/01/12 10:36 PM",
          "commitNameOld": "d06948002fb0cabf72cc0d46bf2fa67d45370f67",
          "commitAuthorOld": "Mahadev Konar",
          "daysBetweenCommits": 421.15,
          "commitsBetweenForRepo": 2459,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,28 @@\n   public static CopyListing getCopyListing(Configuration configuration,\n                                            Credentials credentials,\n-                                           DistCpOptions options) {\n-    if (options.getSourceFileListing() \u003d\u003d null) {\n-      return new GlobbedCopyListing(configuration, credentials);\n-    } else {\n-      return new FileBasedCopyListing(configuration, credentials);\n+                                           DistCpOptions options)\n+      throws IOException {\n+\n+    String copyListingClassName \u003d configuration.get(DistCpConstants.\n+        CONF_LABEL_COPY_LISTING_CLASS, \"\");\n+    Class\u003c? extends CopyListing\u003e copyListingClass;\n+    try {\n+      if (! copyListingClassName.isEmpty()) {\n+        copyListingClass \u003d configuration.getClass(DistCpConstants.\n+            CONF_LABEL_COPY_LISTING_CLASS, GlobbedCopyListing.class,\n+            CopyListing.class);\n+      } else {\n+        if (options.getSourceFileListing() \u003d\u003d null) {\n+            copyListingClass \u003d GlobbedCopyListing.class;\n+        } else {\n+            copyListingClass \u003d FileBasedCopyListing.class;\n+        }\n+      }\n+      copyListingClassName \u003d copyListingClass.getName();\n+      Constructor\u003c? extends CopyListing\u003e constructor \u003d copyListingClass.\n+          getDeclaredConstructor(Configuration.class, Credentials.class);\n+      return constructor.newInstance(configuration, credentials);\n+    } catch (Exception e) {\n+      throw new IOException(\"Unable to instantiate \" + copyListingClassName, e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static CopyListing getCopyListing(Configuration configuration,\n                                           Credentials credentials,\n                                           DistCpOptions options)\n      throws IOException {\n\n    String copyListingClassName \u003d configuration.get(DistCpConstants.\n        CONF_LABEL_COPY_LISTING_CLASS, \"\");\n    Class\u003c? extends CopyListing\u003e copyListingClass;\n    try {\n      if (! copyListingClassName.isEmpty()) {\n        copyListingClass \u003d configuration.getClass(DistCpConstants.\n            CONF_LABEL_COPY_LISTING_CLASS, GlobbedCopyListing.class,\n            CopyListing.class);\n      } else {\n        if (options.getSourceFileListing() \u003d\u003d null) {\n            copyListingClass \u003d GlobbedCopyListing.class;\n        } else {\n            copyListingClass \u003d FileBasedCopyListing.class;\n        }\n      }\n      copyListingClassName \u003d copyListingClass.getName();\n      Constructor\u003c? extends CopyListing\u003e constructor \u003d copyListingClass.\n          getDeclaredConstructor(Configuration.class, Credentials.class);\n      return constructor.newInstance(configuration, credentials);\n    } catch (Exception e) {\n      throw new IOException(\"Unable to instantiate \" + copyListingClassName, e);\n    }\n  }",
          "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/CopyListing.java",
          "extendedDetails": {}
        }
      ]
    },
    "d06948002fb0cabf72cc0d46bf2fa67d45370f67": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-2765. DistCp Rewrite. (Mithun Radhakrishnan via mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1236045 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/01/12 10:36 PM",
      "commitName": "d06948002fb0cabf72cc0d46bf2fa67d45370f67",
      "commitAuthor": "Mahadev Konar",
      "diff": "@@ -0,0 +1,9 @@\n+  public static CopyListing getCopyListing(Configuration configuration,\n+                                           Credentials credentials,\n+                                           DistCpOptions options) {\n+    if (options.getSourceFileListing() \u003d\u003d null) {\n+      return new GlobbedCopyListing(configuration, credentials);\n+    } else {\n+      return new FileBasedCopyListing(configuration, credentials);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static CopyListing getCopyListing(Configuration configuration,\n                                           Credentials credentials,\n                                           DistCpOptions options) {\n    if (options.getSourceFileListing() \u003d\u003d null) {\n      return new GlobbedCopyListing(configuration, credentials);\n    } else {\n      return new FileBasedCopyListing(configuration, credentials);\n    }\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/CopyListing.java"
    }
  }
}