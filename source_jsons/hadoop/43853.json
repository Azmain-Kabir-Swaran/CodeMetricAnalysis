{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ServiceMetricsSink.java",
  "functionName": "putMetrics",
  "functionId": "putMetrics___record-MetricsRecord",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/timelineservice/ServiceMetricsSink.java",
  "functionStartLine": 57,
  "functionEndLine": 89,
  "numCommitsSeen": 4,
  "timeTaken": 2438,
  "changeHistory": [
    "2064ca015d1584263aac0cc20c60b925a3aff612",
    "40ab068eabe50875449d601471619a4e82fff86d",
    "1888318c89776f0bf354c1b13e3ee169e14ff638",
    "f4216b7bba511cc79439e7dab9f0282d831a16b2"
  ],
  "changeHistoryShort": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": "Ybodychange",
    "40ab068eabe50875449d601471619a4e82fff86d": "Yfilerename",
    "1888318c89776f0bf354c1b13e3ee169e14ff638": "Ymultichange(Yfilerename,Ybodychange)",
    "f4216b7bba511cc79439e7dab9f0282d831a16b2": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9349.  Changed logging to use slf4j api.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "15/03/19 4:20 PM",
      "commitName": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "40ab068eabe50875449d601471619a4e82fff86d",
      "commitAuthorOld": "Billie Rinaldi",
      "daysBetweenCommits": 494.08,
      "commitsBetweenForRepo": 4234,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,33 @@\n   public void putMetrics(MetricsRecord record) {\n     if (serviceTimelinePublisher.isStopped()) {\n       log.warn(\"ServiceTimelinePublisher has stopped. \"\n           + \"Not publishing any more metrics to ATS.\");\n       return;\n     }\n \n     boolean isServiceMetrics \u003d false;\n     boolean isComponentMetrics \u003d false;\n     String appId \u003d null;\n     for (MetricsTag tag : record.tags()) {\n       if (tag.name().equals(\"type\") \u0026\u0026 tag.value().equals(\"service\")) {\n         isServiceMetrics \u003d true;\n       } else if (tag.name().equals(\"type\") \u0026\u0026 tag.value().equals(\"component\")) {\n         isComponentMetrics \u003d true;\n         break; // if component metrics, no more information required from tag so\n                // break the loop\n       } else if (tag.name().equals(\"appId\")) {\n         appId \u003d tag.value();\n       }\n     }\n \n     if (isServiceMetrics \u0026\u0026 appId !\u003d null) {\n-      if (log.isDebugEnabled()) {\n-        log.debug(\"Publishing service metrics. \" + record);\n-      }\n+      log.debug(\"Publishing service metrics. {}\", record);\n       serviceTimelinePublisher.publishMetrics(record.metrics(), appId,\n           ServiceTimelineEntityType.SERVICE_ATTEMPT.toString(),\n           record.timestamp());\n     } else if (isComponentMetrics) {\n-      if (log.isDebugEnabled()) {\n-        log.debug(\"Publishing Component metrics. \" + record);\n-      }\n+      log.debug(\"Publishing Component metrics. {}\", record);\n       serviceTimelinePublisher.publishMetrics(record.metrics(), record.name(),\n           ServiceTimelineEntityType.COMPONENT.toString(), record.timestamp());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void putMetrics(MetricsRecord record) {\n    if (serviceTimelinePublisher.isStopped()) {\n      log.warn(\"ServiceTimelinePublisher has stopped. \"\n          + \"Not publishing any more metrics to ATS.\");\n      return;\n    }\n\n    boolean isServiceMetrics \u003d false;\n    boolean isComponentMetrics \u003d false;\n    String appId \u003d null;\n    for (MetricsTag tag : record.tags()) {\n      if (tag.name().equals(\"type\") \u0026\u0026 tag.value().equals(\"service\")) {\n        isServiceMetrics \u003d true;\n      } else if (tag.name().equals(\"type\") \u0026\u0026 tag.value().equals(\"component\")) {\n        isComponentMetrics \u003d true;\n        break; // if component metrics, no more information required from tag so\n               // break the loop\n      } else if (tag.name().equals(\"appId\")) {\n        appId \u003d tag.value();\n      }\n    }\n\n    if (isServiceMetrics \u0026\u0026 appId !\u003d null) {\n      log.debug(\"Publishing service metrics. {}\", record);\n      serviceTimelinePublisher.publishMetrics(record.metrics(), appId,\n          ServiceTimelineEntityType.SERVICE_ATTEMPT.toString(),\n          record.timestamp());\n    } else if (isComponentMetrics) {\n      log.debug(\"Publishing Component metrics. {}\", record);\n      serviceTimelinePublisher.publishMetrics(record.metrics(), record.name(),\n          ServiceTimelineEntityType.COMPONENT.toString(), record.timestamp());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/timelineservice/ServiceMetricsSink.java",
      "extendedDetails": {}
    },
    "40ab068eabe50875449d601471619a4e82fff86d": {
      "type": "Yfilerename",
      "commitMessage": "YARN-7091. Rename application to service in yarn-native-services. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "40ab068eabe50875449d601471619a4e82fff86d",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "2ba38ce8ecb1cf3836fab48cdb2c5ae7e1b5427d",
      "commitAuthorOld": "Gour Saha",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void putMetrics(MetricsRecord record) {\n    if (serviceTimelinePublisher.isStopped()) {\n      log.warn(\"ServiceTimelinePublisher has stopped. \"\n          + \"Not publishing any more metrics to ATS.\");\n      return;\n    }\n\n    boolean isServiceMetrics \u003d false;\n    boolean isComponentMetrics \u003d false;\n    String appId \u003d null;\n    for (MetricsTag tag : record.tags()) {\n      if (tag.name().equals(\"type\") \u0026\u0026 tag.value().equals(\"service\")) {\n        isServiceMetrics \u003d true;\n      } else if (tag.name().equals(\"type\") \u0026\u0026 tag.value().equals(\"component\")) {\n        isComponentMetrics \u003d true;\n        break; // if component metrics, no more information required from tag so\n               // break the loop\n      } else if (tag.name().equals(\"appId\")) {\n        appId \u003d tag.value();\n      }\n    }\n\n    if (isServiceMetrics \u0026\u0026 appId !\u003d null) {\n      if (log.isDebugEnabled()) {\n        log.debug(\"Publishing service metrics. \" + record);\n      }\n      serviceTimelinePublisher.publishMetrics(record.metrics(), appId,\n          ServiceTimelineEntityType.SERVICE_ATTEMPT.toString(),\n          record.timestamp());\n    } else if (isComponentMetrics) {\n      if (log.isDebugEnabled()) {\n        log.debug(\"Publishing Component metrics. \" + record);\n      }\n      serviceTimelinePublisher.publishMetrics(record.metrics(), record.name(),\n          ServiceTimelineEntityType.COMPONENT.toString(), record.timestamp());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/timelineservice/ServiceMetricsSink.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/timelineservice/ServiceMetricsSink.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/timelineservice/ServiceMetricsSink.java"
      }
    },
    "1888318c89776f0bf354c1b13e3ee169e14ff638": {
      "type": "Ymultichange(Yfilerename,Ybodychange)",
      "commitMessage": "YARN-6903. Yarn-native-service framework core rewrite. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "1888318c89776f0bf354c1b13e3ee169e14ff638",
      "commitAuthor": "Billie Rinaldi",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "YARN-6903. Yarn-native-service framework core rewrite. Contributed by Jian He\n",
          "commitDate": "06/11/17 1:30 PM",
          "commitName": "1888318c89776f0bf354c1b13e3ee169e14ff638",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "06/11/17 1:30 PM",
          "commitNameOld": "27dcc679596edaaeb18dc42d2a812957a9d34e89",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,37 +1,37 @@\n   public void putMetrics(MetricsRecord record) {\n     if (serviceTimelinePublisher.isStopped()) {\n       log.warn(\"ServiceTimelinePublisher has stopped. \"\n           + \"Not publishing any more metrics to ATS.\");\n       return;\n     }\n \n     boolean isServiceMetrics \u003d false;\n     boolean isComponentMetrics \u003d false;\n     String appId \u003d null;\n     for (MetricsTag tag : record.tags()) {\n       if (tag.name().equals(\"type\") \u0026\u0026 tag.value().equals(\"service\")) {\n         isServiceMetrics \u003d true;\n       } else if (tag.name().equals(\"type\") \u0026\u0026 tag.value().equals(\"component\")) {\n         isComponentMetrics \u003d true;\n         break; // if component metrics, no more information required from tag so\n                // break the loop\n       } else if (tag.name().equals(\"appId\")) {\n         appId \u003d tag.value();\n       }\n     }\n \n     if (isServiceMetrics \u0026\u0026 appId !\u003d null) {\n       if (log.isDebugEnabled()) {\n         log.debug(\"Publishing service metrics. \" + record);\n       }\n       serviceTimelinePublisher.publishMetrics(record.metrics(), appId,\n-          SliderTimelineEntityType.SERVICE_ATTEMPT.toString(),\n+          ServiceTimelineEntityType.SERVICE_ATTEMPT.toString(),\n           record.timestamp());\n     } else if (isComponentMetrics) {\n       if (log.isDebugEnabled()) {\n         log.debug(\"Publishing Component metrics. \" + record);\n       }\n       serviceTimelinePublisher.publishMetrics(record.metrics(), record.name(),\n-          SliderTimelineEntityType.COMPONENT.toString(), record.timestamp());\n+          ServiceTimelineEntityType.COMPONENT.toString(), record.timestamp());\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void putMetrics(MetricsRecord record) {\n    if (serviceTimelinePublisher.isStopped()) {\n      log.warn(\"ServiceTimelinePublisher has stopped. \"\n          + \"Not publishing any more metrics to ATS.\");\n      return;\n    }\n\n    boolean isServiceMetrics \u003d false;\n    boolean isComponentMetrics \u003d false;\n    String appId \u003d null;\n    for (MetricsTag tag : record.tags()) {\n      if (tag.name().equals(\"type\") \u0026\u0026 tag.value().equals(\"service\")) {\n        isServiceMetrics \u003d true;\n      } else if (tag.name().equals(\"type\") \u0026\u0026 tag.value().equals(\"component\")) {\n        isComponentMetrics \u003d true;\n        break; // if component metrics, no more information required from tag so\n               // break the loop\n      } else if (tag.name().equals(\"appId\")) {\n        appId \u003d tag.value();\n      }\n    }\n\n    if (isServiceMetrics \u0026\u0026 appId !\u003d null) {\n      if (log.isDebugEnabled()) {\n        log.debug(\"Publishing service metrics. \" + record);\n      }\n      serviceTimelinePublisher.publishMetrics(record.metrics(), appId,\n          ServiceTimelineEntityType.SERVICE_ATTEMPT.toString(),\n          record.timestamp());\n    } else if (isComponentMetrics) {\n      if (log.isDebugEnabled()) {\n        log.debug(\"Publishing Component metrics. \" + record);\n      }\n      serviceTimelinePublisher.publishMetrics(record.metrics(), record.name(),\n          ServiceTimelineEntityType.COMPONENT.toString(), record.timestamp());\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/timelineservice/ServiceMetricsSink.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/slider/server/appmaster/timelineservice/SliderMetricsSink.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/timelineservice/ServiceMetricsSink.java"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-6903. Yarn-native-service framework core rewrite. Contributed by Jian He\n",
          "commitDate": "06/11/17 1:30 PM",
          "commitName": "1888318c89776f0bf354c1b13e3ee169e14ff638",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "06/11/17 1:30 PM",
          "commitNameOld": "27dcc679596edaaeb18dc42d2a812957a9d34e89",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,37 +1,37 @@\n   public void putMetrics(MetricsRecord record) {\n     if (serviceTimelinePublisher.isStopped()) {\n       log.warn(\"ServiceTimelinePublisher has stopped. \"\n           + \"Not publishing any more metrics to ATS.\");\n       return;\n     }\n \n     boolean isServiceMetrics \u003d false;\n     boolean isComponentMetrics \u003d false;\n     String appId \u003d null;\n     for (MetricsTag tag : record.tags()) {\n       if (tag.name().equals(\"type\") \u0026\u0026 tag.value().equals(\"service\")) {\n         isServiceMetrics \u003d true;\n       } else if (tag.name().equals(\"type\") \u0026\u0026 tag.value().equals(\"component\")) {\n         isComponentMetrics \u003d true;\n         break; // if component metrics, no more information required from tag so\n                // break the loop\n       } else if (tag.name().equals(\"appId\")) {\n         appId \u003d tag.value();\n       }\n     }\n \n     if (isServiceMetrics \u0026\u0026 appId !\u003d null) {\n       if (log.isDebugEnabled()) {\n         log.debug(\"Publishing service metrics. \" + record);\n       }\n       serviceTimelinePublisher.publishMetrics(record.metrics(), appId,\n-          SliderTimelineEntityType.SERVICE_ATTEMPT.toString(),\n+          ServiceTimelineEntityType.SERVICE_ATTEMPT.toString(),\n           record.timestamp());\n     } else if (isComponentMetrics) {\n       if (log.isDebugEnabled()) {\n         log.debug(\"Publishing Component metrics. \" + record);\n       }\n       serviceTimelinePublisher.publishMetrics(record.metrics(), record.name(),\n-          SliderTimelineEntityType.COMPONENT.toString(), record.timestamp());\n+          ServiceTimelineEntityType.COMPONENT.toString(), record.timestamp());\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void putMetrics(MetricsRecord record) {\n    if (serviceTimelinePublisher.isStopped()) {\n      log.warn(\"ServiceTimelinePublisher has stopped. \"\n          + \"Not publishing any more metrics to ATS.\");\n      return;\n    }\n\n    boolean isServiceMetrics \u003d false;\n    boolean isComponentMetrics \u003d false;\n    String appId \u003d null;\n    for (MetricsTag tag : record.tags()) {\n      if (tag.name().equals(\"type\") \u0026\u0026 tag.value().equals(\"service\")) {\n        isServiceMetrics \u003d true;\n      } else if (tag.name().equals(\"type\") \u0026\u0026 tag.value().equals(\"component\")) {\n        isComponentMetrics \u003d true;\n        break; // if component metrics, no more information required from tag so\n               // break the loop\n      } else if (tag.name().equals(\"appId\")) {\n        appId \u003d tag.value();\n      }\n    }\n\n    if (isServiceMetrics \u0026\u0026 appId !\u003d null) {\n      if (log.isDebugEnabled()) {\n        log.debug(\"Publishing service metrics. \" + record);\n      }\n      serviceTimelinePublisher.publishMetrics(record.metrics(), appId,\n          ServiceTimelineEntityType.SERVICE_ATTEMPT.toString(),\n          record.timestamp());\n    } else if (isComponentMetrics) {\n      if (log.isDebugEnabled()) {\n        log.debug(\"Publishing Component metrics. \" + record);\n      }\n      serviceTimelinePublisher.publishMetrics(record.metrics(), record.name(),\n          ServiceTimelineEntityType.COMPONENT.toString(), record.timestamp());\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/timelineservice/ServiceMetricsSink.java",
          "extendedDetails": {}
        }
      ]
    },
    "f4216b7bba511cc79439e7dab9f0282d831a16b2": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6395. Integrate service app master to write data into ATSv2. Contributed by Rohith Sharma K S\n",
      "commitDate": "06/11/17 1:28 PM",
      "commitName": "f4216b7bba511cc79439e7dab9f0282d831a16b2",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,37 @@\n+  public void putMetrics(MetricsRecord record) {\n+    if (serviceTimelinePublisher.isStopped()) {\n+      log.warn(\"ServiceTimelinePublisher has stopped. \"\n+          + \"Not publishing any more metrics to ATS.\");\n+      return;\n+    }\n+\n+    boolean isServiceMetrics \u003d false;\n+    boolean isComponentMetrics \u003d false;\n+    String appId \u003d null;\n+    for (MetricsTag tag : record.tags()) {\n+      if (tag.name().equals(\"type\") \u0026\u0026 tag.value().equals(\"service\")) {\n+        isServiceMetrics \u003d true;\n+      } else if (tag.name().equals(\"type\") \u0026\u0026 tag.value().equals(\"component\")) {\n+        isComponentMetrics \u003d true;\n+        break; // if component metrics, no more information required from tag so\n+               // break the loop\n+      } else if (tag.name().equals(\"appId\")) {\n+        appId \u003d tag.value();\n+      }\n+    }\n+\n+    if (isServiceMetrics \u0026\u0026 appId !\u003d null) {\n+      if (log.isDebugEnabled()) {\n+        log.debug(\"Publishing service metrics. \" + record);\n+      }\n+      serviceTimelinePublisher.publishMetrics(record.metrics(), appId,\n+          SliderTimelineEntityType.SERVICE_ATTEMPT.toString(),\n+          record.timestamp());\n+    } else if (isComponentMetrics) {\n+      if (log.isDebugEnabled()) {\n+        log.debug(\"Publishing Component metrics. \" + record);\n+      }\n+      serviceTimelinePublisher.publishMetrics(record.metrics(), record.name(),\n+          SliderTimelineEntityType.COMPONENT.toString(), record.timestamp());\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void putMetrics(MetricsRecord record) {\n    if (serviceTimelinePublisher.isStopped()) {\n      log.warn(\"ServiceTimelinePublisher has stopped. \"\n          + \"Not publishing any more metrics to ATS.\");\n      return;\n    }\n\n    boolean isServiceMetrics \u003d false;\n    boolean isComponentMetrics \u003d false;\n    String appId \u003d null;\n    for (MetricsTag tag : record.tags()) {\n      if (tag.name().equals(\"type\") \u0026\u0026 tag.value().equals(\"service\")) {\n        isServiceMetrics \u003d true;\n      } else if (tag.name().equals(\"type\") \u0026\u0026 tag.value().equals(\"component\")) {\n        isComponentMetrics \u003d true;\n        break; // if component metrics, no more information required from tag so\n               // break the loop\n      } else if (tag.name().equals(\"appId\")) {\n        appId \u003d tag.value();\n      }\n    }\n\n    if (isServiceMetrics \u0026\u0026 appId !\u003d null) {\n      if (log.isDebugEnabled()) {\n        log.debug(\"Publishing service metrics. \" + record);\n      }\n      serviceTimelinePublisher.publishMetrics(record.metrics(), appId,\n          SliderTimelineEntityType.SERVICE_ATTEMPT.toString(),\n          record.timestamp());\n    } else if (isComponentMetrics) {\n      if (log.isDebugEnabled()) {\n        log.debug(\"Publishing Component metrics. \" + record);\n      }\n      serviceTimelinePublisher.publishMetrics(record.metrics(), record.name(),\n          SliderTimelineEntityType.COMPONENT.toString(), record.timestamp());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/slider/server/appmaster/timelineservice/SliderMetricsSink.java"
    }
  }
}