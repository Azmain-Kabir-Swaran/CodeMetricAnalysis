{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMAppAttemptImpl.java",
  "functionName": "createApplicationAttemptReport",
  "functionId": "createApplicationAttemptReport",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java",
  "functionStartLine": 2255,
  "functionEndLine": 2272,
  "numCommitsSeen": 155,
  "timeTaken": 3677,
  "changeHistory": [
    "a277bdc9edc66bef419fcd063b832073e512f234",
    "6779467ab6fcc6a02d0e8c80b138cc9df1aa831e",
    "6b8b1608e64e300e4e1d23c60476febaca29ca38",
    "ef9634bf796807501e3c1937a8ea8a70205cb990",
    "6af044bb75fe3ddf184841483cce5e222ad1853a"
  ],
  "changeHistoryShort": {
    "a277bdc9edc66bef419fcd063b832073e512f234": "Ybodychange",
    "6779467ab6fcc6a02d0e8c80b138cc9df1aa831e": "Ybodychange",
    "6b8b1608e64e300e4e1d23c60476febaca29ca38": "Ybodychange",
    "ef9634bf796807501e3c1937a8ea8a70205cb990": "Ybodychange",
    "6af044bb75fe3ddf184841483cce5e222ad1853a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a277bdc9edc66bef419fcd063b832073e512f234": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4411. RMAppAttemptImpl#createApplicationAttemptReport throws\nIllegalArgumentException. Contributed by Bibin A Chundatt and yarntime.\n",
      "commitDate": "29/01/16 12:21 AM",
      "commitName": "a277bdc9edc66bef419fcd063b832073e512f234",
      "commitAuthor": "Devaraj K",
      "commitDateOld": "22/01/16 6:57 AM",
      "commitNameOld": "d6258b33a7428a0725ead96bc43f4dd444c7c8f1",
      "commitAuthorOld": "rohithsharmaks",
      "daysBetweenCommits": 6.72,
      "commitsBetweenForRepo": 49,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   public ApplicationAttemptReport createApplicationAttemptReport() {\n     this.readLock.lock();\n     ApplicationAttemptReport attemptReport \u003d null;\n     try {\n       // AM container maybe not yet allocated. and also unmangedAM doesn\u0027t have\n       // am container.\n       ContainerId amId \u003d\n           masterContainer \u003d\u003d null ? null : masterContainer.getId();\n-      attemptReport \u003d ApplicationAttemptReport.newInstance(this\n-          .getAppAttemptId(), this.getHost(), this.getRpcPort(), this\n-          .getTrackingUrl(), this.getOriginalTrackingUrl(), this.getDiagnostics(),\n-              YarnApplicationAttemptState.valueOf(this.getState().toString()),\n-              amId, this.startTime, this.finishTime);\n+      attemptReport \u003d ApplicationAttemptReport.newInstance(\n+          this.getAppAttemptId(), this.getHost(), this.getRpcPort(),\n+          this.getTrackingUrl(), this.getOriginalTrackingUrl(),\n+          this.getDiagnostics(), createApplicationAttemptState(), amId,\n+          this.startTime, this.finishTime);\n     } finally {\n       this.readLock.unlock();\n     }\n     return attemptReport;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ApplicationAttemptReport createApplicationAttemptReport() {\n    this.readLock.lock();\n    ApplicationAttemptReport attemptReport \u003d null;\n    try {\n      // AM container maybe not yet allocated. and also unmangedAM doesn\u0027t have\n      // am container.\n      ContainerId amId \u003d\n          masterContainer \u003d\u003d null ? null : masterContainer.getId();\n      attemptReport \u003d ApplicationAttemptReport.newInstance(\n          this.getAppAttemptId(), this.getHost(), this.getRpcPort(),\n          this.getTrackingUrl(), this.getOriginalTrackingUrl(),\n          this.getDiagnostics(), createApplicationAttemptState(), amId,\n          this.startTime, this.finishTime);\n    } finally {\n      this.readLock.unlock();\n    }\n    return attemptReport;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java",
      "extendedDetails": {}
    },
    "6779467ab6fcc6a02d0e8c80b138cc9df1aa831e": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3451. Display attempt start time and elapsed time on the web UI. Contributed by Rohith Sharmaks\n",
      "commitDate": "17/04/15 3:55 PM",
      "commitName": "6779467ab6fcc6a02d0e8c80b138cc9df1aa831e",
      "commitAuthor": "Jian He",
      "commitDateOld": "14/04/15 11:45 AM",
      "commitNameOld": "0fefda645bca935b87b6bb8ca63e6f18340d59f5",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 3.17,
      "commitsBetweenForRepo": 23,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,18 @@\n   public ApplicationAttemptReport createApplicationAttemptReport() {\n     this.readLock.lock();\n     ApplicationAttemptReport attemptReport \u003d null;\n     try {\n       // AM container maybe not yet allocated. and also unmangedAM doesn\u0027t have\n       // am container.\n       ContainerId amId \u003d\n           masterContainer \u003d\u003d null ? null : masterContainer.getId();\n       attemptReport \u003d ApplicationAttemptReport.newInstance(this\n           .getAppAttemptId(), this.getHost(), this.getRpcPort(), this\n           .getTrackingUrl(), this.getOriginalTrackingUrl(), this.getDiagnostics(),\n-          YarnApplicationAttemptState .valueOf(this.getState().toString()), amId);\n+              YarnApplicationAttemptState.valueOf(this.getState().toString()),\n+              amId, this.startTime, this.finishTime);\n     } finally {\n       this.readLock.unlock();\n     }\n     return attemptReport;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ApplicationAttemptReport createApplicationAttemptReport() {\n    this.readLock.lock();\n    ApplicationAttemptReport attemptReport \u003d null;\n    try {\n      // AM container maybe not yet allocated. and also unmangedAM doesn\u0027t have\n      // am container.\n      ContainerId amId \u003d\n          masterContainer \u003d\u003d null ? null : masterContainer.getId();\n      attemptReport \u003d ApplicationAttemptReport.newInstance(this\n          .getAppAttemptId(), this.getHost(), this.getRpcPort(), this\n          .getTrackingUrl(), this.getOriginalTrackingUrl(), this.getDiagnostics(),\n              YarnApplicationAttemptState.valueOf(this.getState().toString()),\n              amId, this.startTime, this.finishTime);\n    } finally {\n      this.readLock.unlock();\n    }\n    return attemptReport;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java",
      "extendedDetails": {}
    },
    "6b8b1608e64e300e4e1d23c60476febaca29ca38": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2033. Merging generic-history into the Timeline Store (Contributed by Zhijie Shen)\n",
      "commitDate": "11/09/14 7:04 PM",
      "commitName": "6b8b1608e64e300e4e1d23c60476febaca29ca38",
      "commitAuthor": "junping_du",
      "commitDateOld": "10/09/14 6:20 PM",
      "commitNameOld": "83be3ad44484bf8a24cb90de4b9c26ab59d226a8",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 1.03,
      "commitsBetweenForRepo": 14,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   public ApplicationAttemptReport createApplicationAttemptReport() {\n     this.readLock.lock();\n     ApplicationAttemptReport attemptReport \u003d null;\n     try {\n       // AM container maybe not yet allocated. and also unmangedAM doesn\u0027t have\n       // am container.\n       ContainerId amId \u003d\n           masterContainer \u003d\u003d null ? null : masterContainer.getId();\n       attemptReport \u003d ApplicationAttemptReport.newInstance(this\n           .getAppAttemptId(), this.getHost(), this.getRpcPort(), this\n-          .getTrackingUrl(), this.getDiagnostics(), YarnApplicationAttemptState\n-          .valueOf(this.getState().toString()), amId);\n+          .getTrackingUrl(), this.getOriginalTrackingUrl(), this.getDiagnostics(),\n+          YarnApplicationAttemptState .valueOf(this.getState().toString()), amId);\n     } finally {\n       this.readLock.unlock();\n     }\n     return attemptReport;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ApplicationAttemptReport createApplicationAttemptReport() {\n    this.readLock.lock();\n    ApplicationAttemptReport attemptReport \u003d null;\n    try {\n      // AM container maybe not yet allocated. and also unmangedAM doesn\u0027t have\n      // am container.\n      ContainerId amId \u003d\n          masterContainer \u003d\u003d null ? null : masterContainer.getId();\n      attemptReport \u003d ApplicationAttemptReport.newInstance(this\n          .getAppAttemptId(), this.getHost(), this.getRpcPort(), this\n          .getTrackingUrl(), this.getOriginalTrackingUrl(), this.getDiagnostics(),\n          YarnApplicationAttemptState .valueOf(this.getState().toString()), amId);\n    } finally {\n      this.readLock.unlock();\n    }\n    return attemptReport;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java",
      "extendedDetails": {}
    },
    "ef9634bf796807501e3c1937a8ea8a70205cb990": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1577. Made UnmanagedAMLauncher do launchAM after the attempt reaches the LAUNCHED state. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1580164 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/03/14 9:35 PM",
      "commitName": "ef9634bf796807501e3c1937a8ea8a70205cb990",
      "commitAuthor": "Zhijie Shen",
      "commitDateOld": "21/03/14 3:53 PM",
      "commitNameOld": "f67218809c50b194e463af6e6196db298353c8c1",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 0.24,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,17 @@\n   public ApplicationAttemptReport createApplicationAttemptReport() {\n     this.readLock.lock();\n     ApplicationAttemptReport attemptReport \u003d null;\n     try {\n+      // AM container maybe not yet allocated. and also unmangedAM doesn\u0027t have\n+      // am container.\n+      ContainerId amId \u003d\n+          masterContainer \u003d\u003d null ? null : masterContainer.getId();\n       attemptReport \u003d ApplicationAttemptReport.newInstance(this\n           .getAppAttemptId(), this.getHost(), this.getRpcPort(), this\n           .getTrackingUrl(), this.getDiagnostics(), YarnApplicationAttemptState\n-          .valueOf(this.getState().toString()), this.getMasterContainer()\n-          .getId());\n+          .valueOf(this.getState().toString()), amId);\n     } finally {\n       this.readLock.unlock();\n     }\n     return attemptReport;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ApplicationAttemptReport createApplicationAttemptReport() {\n    this.readLock.lock();\n    ApplicationAttemptReport attemptReport \u003d null;\n    try {\n      // AM container maybe not yet allocated. and also unmangedAM doesn\u0027t have\n      // am container.\n      ContainerId amId \u003d\n          masterContainer \u003d\u003d null ? null : masterContainer.getId();\n      attemptReport \u003d ApplicationAttemptReport.newInstance(this\n          .getAppAttemptId(), this.getHost(), this.getRpcPort(), this\n          .getTrackingUrl(), this.getDiagnostics(), YarnApplicationAttemptState\n          .valueOf(this.getState().toString()), amId);\n    } finally {\n      this.readLock.unlock();\n    }\n    return attemptReport;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java",
      "extendedDetails": {}
    },
    "6af044bb75fe3ddf184841483cce5e222ad1853a": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1389. Made ApplicationClientProtocol and ApplicationHistoryProtocol expose analogous getApplication(s)/Attempt(s)/Container(s) APIs. Contributed by Mayank Bansal.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1577052 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/03/14 12:42 AM",
      "commitName": "6af044bb75fe3ddf184841483cce5e222ad1853a",
      "commitAuthor": "Zhijie Shen",
      "diff": "@@ -0,0 +1,14 @@\n+  public ApplicationAttemptReport createApplicationAttemptReport() {\n+    this.readLock.lock();\n+    ApplicationAttemptReport attemptReport \u003d null;\n+    try {\n+      attemptReport \u003d ApplicationAttemptReport.newInstance(this\n+          .getAppAttemptId(), this.getHost(), this.getRpcPort(), this\n+          .getTrackingUrl(), this.getDiagnostics(), YarnApplicationAttemptState\n+          .valueOf(this.getState().toString()), this.getMasterContainer()\n+          .getId());\n+    } finally {\n+      this.readLock.unlock();\n+    }\n+    return attemptReport;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public ApplicationAttemptReport createApplicationAttemptReport() {\n    this.readLock.lock();\n    ApplicationAttemptReport attemptReport \u003d null;\n    try {\n      attemptReport \u003d ApplicationAttemptReport.newInstance(this\n          .getAppAttemptId(), this.getHost(), this.getRpcPort(), this\n          .getTrackingUrl(), this.getDiagnostics(), YarnApplicationAttemptState\n          .valueOf(this.getState().toString()), this.getMasterContainer()\n          .getId());\n    } finally {\n      this.readLock.unlock();\n    }\n    return attemptReport;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java"
    }
  }
}