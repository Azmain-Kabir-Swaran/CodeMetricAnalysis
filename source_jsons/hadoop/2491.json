{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PBHelperClient.java",
  "functionName": "convert",
  "functionId": "convert___fsStats-long[]",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelperClient.java",
  "functionStartLine": 2390,
  "functionEndLine": 2424,
  "numCommitsSeen": 226,
  "timeTaken": 7013,
  "changeHistory": [
    "10a2bc0dffaece216eb9a6bac3236a086b9ece31",
    "86c92227fc56b6e06d879d250728e8dc8cbe98fe",
    "06022b8fdc40e50eaac63758246353058e8cfa6d",
    "8c5b23b5473e447384f818d69d907d5c35ed6d6a",
    "48da033901d3471ef176a94104158546152353e9"
  ],
  "changeHistoryShort": {
    "10a2bc0dffaece216eb9a6bac3236a086b9ece31": "Ybodychange",
    "86c92227fc56b6e06d879d250728e8dc8cbe98fe": "Ybodychange",
    "06022b8fdc40e50eaac63758246353058e8cfa6d": "Ymovefromfile",
    "8c5b23b5473e447384f818d69d907d5c35ed6d6a": "Ybodychange",
    "48da033901d3471ef176a94104158546152353e9": "Yintroduced"
  },
  "changeHistoryDetails": {
    "10a2bc0dffaece216eb9a6bac3236a086b9ece31": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9653.  Added blocks pending deletion report to dfsadmin.\n(Weiwei Yang via eyang)\n",
      "commitDate": "24/01/16 2:19 PM",
      "commitName": "10a2bc0dffaece216eb9a6bac3236a086b9ece31",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "22/01/16 7:10 AM",
      "commitNameOld": "2fd19b9674420e025af54a5bed12eb96478f8c48",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 2.3,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,35 @@\n   public static GetFsStatsResponseProto convert(long[] fsStats) {\n     GetFsStatsResponseProto.Builder result \u003d GetFsStatsResponseProto\n         .newBuilder();\n     if (fsStats.length \u003e\u003d ClientProtocol.GET_STATS_CAPACITY_IDX + 1)\n       result.setCapacity(fsStats[ClientProtocol.GET_STATS_CAPACITY_IDX]);\n     if (fsStats.length \u003e\u003d ClientProtocol.GET_STATS_USED_IDX + 1)\n       result.setUsed(fsStats[ClientProtocol.GET_STATS_USED_IDX]);\n     if (fsStats.length \u003e\u003d ClientProtocol.GET_STATS_REMAINING_IDX + 1)\n       result.setRemaining(fsStats[ClientProtocol.GET_STATS_REMAINING_IDX]);\n     if (fsStats.length \u003e\u003d ClientProtocol.GET_STATS_UNDER_REPLICATED_IDX + 1)\n       result.setUnderReplicated(\n           fsStats[ClientProtocol.GET_STATS_UNDER_REPLICATED_IDX]);\n     if (fsStats.length \u003e\u003d ClientProtocol.GET_STATS_CORRUPT_BLOCKS_IDX + 1)\n       result.setCorruptBlocks(\n           fsStats[ClientProtocol.GET_STATS_CORRUPT_BLOCKS_IDX]);\n     if (fsStats.length \u003e\u003d ClientProtocol.GET_STATS_MISSING_BLOCKS_IDX + 1)\n       result.setMissingBlocks(\n           fsStats[ClientProtocol.GET_STATS_MISSING_BLOCKS_IDX]);\n     if (fsStats.length \u003e\u003d\n         ClientProtocol.GET_STATS_MISSING_REPL_ONE_BLOCKS_IDX + 1)\n       result.setMissingReplOneBlocks(\n           fsStats[ClientProtocol.GET_STATS_MISSING_REPL_ONE_BLOCKS_IDX]);\n \n     if (fsStats.length \u003e\u003d\n         ClientProtocol.GET_STATS_BYTES_IN_FUTURE_BLOCKS_IDX + 1) {\n       result.setBlocksInFuture(\n           fsStats[ClientProtocol.GET_STATS_BYTES_IN_FUTURE_BLOCKS_IDX]);\n     }\n+    if (fsStats.length \u003e\u003d\n+        ClientProtocol.GET_STATS_PENDING_DELETION_BLOCKS_IDX + 1) {\n+      result.setPendingDeletionBlocks(\n+          fsStats[ClientProtocol.GET_STATS_PENDING_DELETION_BLOCKS_IDX]);\n+    }\n     return result.build();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static GetFsStatsResponseProto convert(long[] fsStats) {\n    GetFsStatsResponseProto.Builder result \u003d GetFsStatsResponseProto\n        .newBuilder();\n    if (fsStats.length \u003e\u003d ClientProtocol.GET_STATS_CAPACITY_IDX + 1)\n      result.setCapacity(fsStats[ClientProtocol.GET_STATS_CAPACITY_IDX]);\n    if (fsStats.length \u003e\u003d ClientProtocol.GET_STATS_USED_IDX + 1)\n      result.setUsed(fsStats[ClientProtocol.GET_STATS_USED_IDX]);\n    if (fsStats.length \u003e\u003d ClientProtocol.GET_STATS_REMAINING_IDX + 1)\n      result.setRemaining(fsStats[ClientProtocol.GET_STATS_REMAINING_IDX]);\n    if (fsStats.length \u003e\u003d ClientProtocol.GET_STATS_UNDER_REPLICATED_IDX + 1)\n      result.setUnderReplicated(\n          fsStats[ClientProtocol.GET_STATS_UNDER_REPLICATED_IDX]);\n    if (fsStats.length \u003e\u003d ClientProtocol.GET_STATS_CORRUPT_BLOCKS_IDX + 1)\n      result.setCorruptBlocks(\n          fsStats[ClientProtocol.GET_STATS_CORRUPT_BLOCKS_IDX]);\n    if (fsStats.length \u003e\u003d ClientProtocol.GET_STATS_MISSING_BLOCKS_IDX + 1)\n      result.setMissingBlocks(\n          fsStats[ClientProtocol.GET_STATS_MISSING_BLOCKS_IDX]);\n    if (fsStats.length \u003e\u003d\n        ClientProtocol.GET_STATS_MISSING_REPL_ONE_BLOCKS_IDX + 1)\n      result.setMissingReplOneBlocks(\n          fsStats[ClientProtocol.GET_STATS_MISSING_REPL_ONE_BLOCKS_IDX]);\n\n    if (fsStats.length \u003e\u003d\n        ClientProtocol.GET_STATS_BYTES_IN_FUTURE_BLOCKS_IDX + 1) {\n      result.setBlocksInFuture(\n          fsStats[ClientProtocol.GET_STATS_BYTES_IN_FUTURE_BLOCKS_IDX]);\n    }\n    if (fsStats.length \u003e\u003d\n        ClientProtocol.GET_STATS_PENDING_DELETION_BLOCKS_IDX + 1) {\n      result.setPendingDeletionBlocks(\n          fsStats[ClientProtocol.GET_STATS_PENDING_DELETION_BLOCKS_IDX]);\n    }\n    return result.build();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelperClient.java",
      "extendedDetails": {}
    },
    "86c92227fc56b6e06d879d250728e8dc8cbe98fe": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4015. Safemode should count and report orphaned blocks. (Contributed by Anu Engineer)\n",
      "commitDate": "23/10/15 6:07 PM",
      "commitName": "86c92227fc56b6e06d879d250728e8dc8cbe98fe",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "06/10/15 3:12 AM",
      "commitNameOld": "874c8ed2399ff5f760d358abae3e98c013f48d22",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 17.62,
      "commitsBetweenForRepo": 155,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,30 @@\n   public static GetFsStatsResponseProto convert(long[] fsStats) {\n     GetFsStatsResponseProto.Builder result \u003d GetFsStatsResponseProto\n         .newBuilder();\n     if (fsStats.length \u003e\u003d ClientProtocol.GET_STATS_CAPACITY_IDX + 1)\n       result.setCapacity(fsStats[ClientProtocol.GET_STATS_CAPACITY_IDX]);\n     if (fsStats.length \u003e\u003d ClientProtocol.GET_STATS_USED_IDX + 1)\n       result.setUsed(fsStats[ClientProtocol.GET_STATS_USED_IDX]);\n     if (fsStats.length \u003e\u003d ClientProtocol.GET_STATS_REMAINING_IDX + 1)\n       result.setRemaining(fsStats[ClientProtocol.GET_STATS_REMAINING_IDX]);\n     if (fsStats.length \u003e\u003d ClientProtocol.GET_STATS_UNDER_REPLICATED_IDX + 1)\n       result.setUnderReplicated(\n           fsStats[ClientProtocol.GET_STATS_UNDER_REPLICATED_IDX]);\n     if (fsStats.length \u003e\u003d ClientProtocol.GET_STATS_CORRUPT_BLOCKS_IDX + 1)\n       result.setCorruptBlocks(\n           fsStats[ClientProtocol.GET_STATS_CORRUPT_BLOCKS_IDX]);\n     if (fsStats.length \u003e\u003d ClientProtocol.GET_STATS_MISSING_BLOCKS_IDX + 1)\n       result.setMissingBlocks(\n           fsStats[ClientProtocol.GET_STATS_MISSING_BLOCKS_IDX]);\n     if (fsStats.length \u003e\u003d\n         ClientProtocol.GET_STATS_MISSING_REPL_ONE_BLOCKS_IDX + 1)\n       result.setMissingReplOneBlocks(\n           fsStats[ClientProtocol.GET_STATS_MISSING_REPL_ONE_BLOCKS_IDX]);\n+\n+    if (fsStats.length \u003e\u003d\n+        ClientProtocol.GET_STATS_BYTES_IN_FUTURE_BLOCKS_IDX + 1) {\n+      result.setBlocksInFuture(\n+          fsStats[ClientProtocol.GET_STATS_BYTES_IN_FUTURE_BLOCKS_IDX]);\n+    }\n     return result.build();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static GetFsStatsResponseProto convert(long[] fsStats) {\n    GetFsStatsResponseProto.Builder result \u003d GetFsStatsResponseProto\n        .newBuilder();\n    if (fsStats.length \u003e\u003d ClientProtocol.GET_STATS_CAPACITY_IDX + 1)\n      result.setCapacity(fsStats[ClientProtocol.GET_STATS_CAPACITY_IDX]);\n    if (fsStats.length \u003e\u003d ClientProtocol.GET_STATS_USED_IDX + 1)\n      result.setUsed(fsStats[ClientProtocol.GET_STATS_USED_IDX]);\n    if (fsStats.length \u003e\u003d ClientProtocol.GET_STATS_REMAINING_IDX + 1)\n      result.setRemaining(fsStats[ClientProtocol.GET_STATS_REMAINING_IDX]);\n    if (fsStats.length \u003e\u003d ClientProtocol.GET_STATS_UNDER_REPLICATED_IDX + 1)\n      result.setUnderReplicated(\n          fsStats[ClientProtocol.GET_STATS_UNDER_REPLICATED_IDX]);\n    if (fsStats.length \u003e\u003d ClientProtocol.GET_STATS_CORRUPT_BLOCKS_IDX + 1)\n      result.setCorruptBlocks(\n          fsStats[ClientProtocol.GET_STATS_CORRUPT_BLOCKS_IDX]);\n    if (fsStats.length \u003e\u003d ClientProtocol.GET_STATS_MISSING_BLOCKS_IDX + 1)\n      result.setMissingBlocks(\n          fsStats[ClientProtocol.GET_STATS_MISSING_BLOCKS_IDX]);\n    if (fsStats.length \u003e\u003d\n        ClientProtocol.GET_STATS_MISSING_REPL_ONE_BLOCKS_IDX + 1)\n      result.setMissingReplOneBlocks(\n          fsStats[ClientProtocol.GET_STATS_MISSING_REPL_ONE_BLOCKS_IDX]);\n\n    if (fsStats.length \u003e\u003d\n        ClientProtocol.GET_STATS_BYTES_IN_FUTURE_BLOCKS_IDX + 1) {\n      result.setBlocksInFuture(\n          fsStats[ClientProtocol.GET_STATS_BYTES_IN_FUTURE_BLOCKS_IDX]);\n    }\n    return result.build();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelperClient.java",
      "extendedDetails": {}
    },
    "06022b8fdc40e50eaac63758246353058e8cfa6d": {
      "type": "Ymovefromfile",
      "commitMessage": "HDFS-9111. Move hdfs-client protobuf convert methods from PBHelper to PBHelperClient. Contributed by Mingliang Liu.\n",
      "commitDate": "21/09/15 6:53 PM",
      "commitName": "06022b8fdc40e50eaac63758246353058e8cfa6d",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "21/09/15 5:51 PM",
      "commitNameOld": "8e01b0d97ac3d74b049a801dfa1cc6e77d8f680a",
      "commitAuthorOld": "Chris Douglas",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static GetFsStatsResponseProto convert(long[] fsStats) {\n    GetFsStatsResponseProto.Builder result \u003d GetFsStatsResponseProto\n        .newBuilder();\n    if (fsStats.length \u003e\u003d ClientProtocol.GET_STATS_CAPACITY_IDX + 1)\n      result.setCapacity(fsStats[ClientProtocol.GET_STATS_CAPACITY_IDX]);\n    if (fsStats.length \u003e\u003d ClientProtocol.GET_STATS_USED_IDX + 1)\n      result.setUsed(fsStats[ClientProtocol.GET_STATS_USED_IDX]);\n    if (fsStats.length \u003e\u003d ClientProtocol.GET_STATS_REMAINING_IDX + 1)\n      result.setRemaining(fsStats[ClientProtocol.GET_STATS_REMAINING_IDX]);\n    if (fsStats.length \u003e\u003d ClientProtocol.GET_STATS_UNDER_REPLICATED_IDX + 1)\n      result.setUnderReplicated(\n              fsStats[ClientProtocol.GET_STATS_UNDER_REPLICATED_IDX]);\n    if (fsStats.length \u003e\u003d ClientProtocol.GET_STATS_CORRUPT_BLOCKS_IDX + 1)\n      result.setCorruptBlocks(\n          fsStats[ClientProtocol.GET_STATS_CORRUPT_BLOCKS_IDX]);\n    if (fsStats.length \u003e\u003d ClientProtocol.GET_STATS_MISSING_BLOCKS_IDX + 1)\n      result.setMissingBlocks(\n          fsStats[ClientProtocol.GET_STATS_MISSING_BLOCKS_IDX]);\n    if (fsStats.length \u003e\u003d ClientProtocol.GET_STATS_MISSING_REPL_ONE_BLOCKS_IDX + 1)\n      result.setMissingReplOneBlocks(\n          fsStats[ClientProtocol.GET_STATS_MISSING_REPL_ONE_BLOCKS_IDX]);\n    return result.build();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelperClient.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelperClient.java",
        "oldMethodName": "convert",
        "newMethodName": "convert"
      }
    },
    "8c5b23b5473e447384f818d69d907d5c35ed6d6a": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7165. Separate block metrics for files with replication count 1. (Zhe Zhang via wang)\n",
      "commitDate": "23/10/14 12:28 PM",
      "commitName": "8c5b23b5473e447384f818d69d907d5c35ed6d6a",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "29/09/14 10:27 PM",
      "commitNameOld": "bb84f1fccb18c6c7373851e05d2451d55e908242",
      "commitAuthorOld": "arp",
      "daysBetweenCommits": 23.58,
      "commitsBetweenForRepo": 201,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,23 @@\n   public static GetFsStatsResponseProto convert(long[] fsStats) {\n     GetFsStatsResponseProto.Builder result \u003d GetFsStatsResponseProto\n         .newBuilder();\n     if (fsStats.length \u003e\u003d ClientProtocol.GET_STATS_CAPACITY_IDX + 1)\n       result.setCapacity(fsStats[ClientProtocol.GET_STATS_CAPACITY_IDX]);\n     if (fsStats.length \u003e\u003d ClientProtocol.GET_STATS_USED_IDX + 1)\n       result.setUsed(fsStats[ClientProtocol.GET_STATS_USED_IDX]);\n     if (fsStats.length \u003e\u003d ClientProtocol.GET_STATS_REMAINING_IDX + 1)\n       result.setRemaining(fsStats[ClientProtocol.GET_STATS_REMAINING_IDX]);\n     if (fsStats.length \u003e\u003d ClientProtocol.GET_STATS_UNDER_REPLICATED_IDX + 1)\n       result.setUnderReplicated(\n               fsStats[ClientProtocol.GET_STATS_UNDER_REPLICATED_IDX]);\n     if (fsStats.length \u003e\u003d ClientProtocol.GET_STATS_CORRUPT_BLOCKS_IDX + 1)\n       result.setCorruptBlocks(\n           fsStats[ClientProtocol.GET_STATS_CORRUPT_BLOCKS_IDX]);\n     if (fsStats.length \u003e\u003d ClientProtocol.GET_STATS_MISSING_BLOCKS_IDX + 1)\n       result.setMissingBlocks(\n           fsStats[ClientProtocol.GET_STATS_MISSING_BLOCKS_IDX]);\n+    if (fsStats.length \u003e\u003d ClientProtocol.GET_STATS_MISSING_REPL_ONE_BLOCKS_IDX + 1)\n+      result.setMissingReplOneBlocks(\n+          fsStats[ClientProtocol.GET_STATS_MISSING_REPL_ONE_BLOCKS_IDX]);\n     return result.build();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static GetFsStatsResponseProto convert(long[] fsStats) {\n    GetFsStatsResponseProto.Builder result \u003d GetFsStatsResponseProto\n        .newBuilder();\n    if (fsStats.length \u003e\u003d ClientProtocol.GET_STATS_CAPACITY_IDX + 1)\n      result.setCapacity(fsStats[ClientProtocol.GET_STATS_CAPACITY_IDX]);\n    if (fsStats.length \u003e\u003d ClientProtocol.GET_STATS_USED_IDX + 1)\n      result.setUsed(fsStats[ClientProtocol.GET_STATS_USED_IDX]);\n    if (fsStats.length \u003e\u003d ClientProtocol.GET_STATS_REMAINING_IDX + 1)\n      result.setRemaining(fsStats[ClientProtocol.GET_STATS_REMAINING_IDX]);\n    if (fsStats.length \u003e\u003d ClientProtocol.GET_STATS_UNDER_REPLICATED_IDX + 1)\n      result.setUnderReplicated(\n              fsStats[ClientProtocol.GET_STATS_UNDER_REPLICATED_IDX]);\n    if (fsStats.length \u003e\u003d ClientProtocol.GET_STATS_CORRUPT_BLOCKS_IDX + 1)\n      result.setCorruptBlocks(\n          fsStats[ClientProtocol.GET_STATS_CORRUPT_BLOCKS_IDX]);\n    if (fsStats.length \u003e\u003d ClientProtocol.GET_STATS_MISSING_BLOCKS_IDX + 1)\n      result.setMissingBlocks(\n          fsStats[ClientProtocol.GET_STATS_MISSING_BLOCKS_IDX]);\n    if (fsStats.length \u003e\u003d ClientProtocol.GET_STATS_MISSING_REPL_ONE_BLOCKS_IDX + 1)\n      result.setMissingReplOneBlocks(\n          fsStats[ClientProtocol.GET_STATS_MISSING_REPL_ONE_BLOCKS_IDX]);\n    return result.build();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java",
      "extendedDetails": {}
    },
    "48da033901d3471ef176a94104158546152353e9": {
      "type": "Yintroduced",
      "commitMessage": "    HDFS-2651 ClientNameNodeProtocol Translators for Protocol Buffers (sanjay)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1213143 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/12/11 9:36 PM",
      "commitName": "48da033901d3471ef176a94104158546152353e9",
      "commitAuthor": "Sanjay Radia",
      "diff": "@@ -0,0 +1,20 @@\n+  public static GetFsStatsResponseProto convert(long[] fsStats) {\n+    GetFsStatsResponseProto.Builder result \u003d GetFsStatsResponseProto\n+        .newBuilder();\n+    if (fsStats.length \u003e\u003d ClientProtocol.GET_STATS_CAPACITY_IDX + 1)\n+      result.setCapacity(fsStats[ClientProtocol.GET_STATS_CAPACITY_IDX]);\n+    if (fsStats.length \u003e\u003d ClientProtocol.GET_STATS_USED_IDX + 1)\n+      result.setUsed(fsStats[ClientProtocol.GET_STATS_USED_IDX]);\n+    if (fsStats.length \u003e\u003d ClientProtocol.GET_STATS_REMAINING_IDX + 1)\n+      result.setRemaining(fsStats[ClientProtocol.GET_STATS_REMAINING_IDX]);\n+    if (fsStats.length \u003e\u003d ClientProtocol.GET_STATS_UNDER_REPLICATED_IDX + 1)\n+      result.setUnderReplicated(\n+              fsStats[ClientProtocol.GET_STATS_UNDER_REPLICATED_IDX]);\n+    if (fsStats.length \u003e\u003d ClientProtocol.GET_STATS_CORRUPT_BLOCKS_IDX + 1)\n+      result.setCorruptBlocks(\n+          fsStats[ClientProtocol.GET_STATS_CORRUPT_BLOCKS_IDX]);\n+    if (fsStats.length \u003e\u003d ClientProtocol.GET_STATS_MISSING_BLOCKS_IDX + 1)\n+      result.setMissingBlocks(\n+          fsStats[ClientProtocol.GET_STATS_MISSING_BLOCKS_IDX]);\n+    return result.build();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static GetFsStatsResponseProto convert(long[] fsStats) {\n    GetFsStatsResponseProto.Builder result \u003d GetFsStatsResponseProto\n        .newBuilder();\n    if (fsStats.length \u003e\u003d ClientProtocol.GET_STATS_CAPACITY_IDX + 1)\n      result.setCapacity(fsStats[ClientProtocol.GET_STATS_CAPACITY_IDX]);\n    if (fsStats.length \u003e\u003d ClientProtocol.GET_STATS_USED_IDX + 1)\n      result.setUsed(fsStats[ClientProtocol.GET_STATS_USED_IDX]);\n    if (fsStats.length \u003e\u003d ClientProtocol.GET_STATS_REMAINING_IDX + 1)\n      result.setRemaining(fsStats[ClientProtocol.GET_STATS_REMAINING_IDX]);\n    if (fsStats.length \u003e\u003d ClientProtocol.GET_STATS_UNDER_REPLICATED_IDX + 1)\n      result.setUnderReplicated(\n              fsStats[ClientProtocol.GET_STATS_UNDER_REPLICATED_IDX]);\n    if (fsStats.length \u003e\u003d ClientProtocol.GET_STATS_CORRUPT_BLOCKS_IDX + 1)\n      result.setCorruptBlocks(\n          fsStats[ClientProtocol.GET_STATS_CORRUPT_BLOCKS_IDX]);\n    if (fsStats.length \u003e\u003d ClientProtocol.GET_STATS_MISSING_BLOCKS_IDX + 1)\n      result.setMissingBlocks(\n          fsStats[ClientProtocol.GET_STATS_MISSING_BLOCKS_IDX]);\n    return result.build();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java"
    }
  }
}