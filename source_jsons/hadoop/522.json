{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DfsClientConf.java",
  "functionName": "getChecksumType",
  "functionId": "getChecksumType___conf-Configuration",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/client/impl/DfsClientConf.java",
  "functionStartLine": 335,
  "functionEndLine": 347,
  "numCommitsSeen": 227,
  "timeTaken": 7732,
  "changeHistory": [
    "c5573e6a7599da17cad733cd274e7a9b75b22bb0",
    "3aac4758b007a56e3d66998d457b2156effca528",
    "2cc9514ad643ae49d30524743420ee9744e571bd",
    "3cab01ba6e0349126a23063e135cd5c814a4ae18",
    "f84552ac35bb5221290be68fece9c779ebeaf4bc"
  ],
  "changeHistoryShort": {
    "c5573e6a7599da17cad733cd274e7a9b75b22bb0": "Ymodifierchange",
    "3aac4758b007a56e3d66998d457b2156effca528": "Ymultichange(Yfilerename,Ybodychange)",
    "2cc9514ad643ae49d30524743420ee9744e571bd": "Ymultichange(Ymovefromfile,Ybodychange)",
    "3cab01ba6e0349126a23063e135cd5c814a4ae18": "Ymultichange(Yreturntypechange,Ybodychange)",
    "f84552ac35bb5221290be68fece9c779ebeaf4bc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c5573e6a7599da17cad733cd274e7a9b75b22bb0": {
      "type": "Ymodifierchange",
      "commitMessage": "HDFS-11009. Add a tool to reconstruct block meta file from CLI.\n",
      "commitDate": "18/10/16 10:42 PM",
      "commitName": "c5573e6a7599da17cad733cd274e7a9b75b22bb0",
      "commitAuthor": "Xiao Chen",
      "commitDateOld": "06/09/16 10:38 AM",
      "commitNameOld": "d37dc5d1b8e022a7085118a2e7066623483c293f",
      "commitAuthorOld": "Chris Douglas",
      "daysBetweenCommits": 42.5,
      "commitsBetweenForRepo": 291,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n-  private DataChecksum.Type getChecksumType(Configuration conf) {\n+  private static DataChecksum.Type getChecksumType(Configuration conf) {\n     final String checksum \u003d conf.get(\n         DFS_CHECKSUM_TYPE_KEY,\n         DFS_CHECKSUM_TYPE_DEFAULT);\n     try {\n       return DataChecksum.Type.valueOf(checksum);\n     } catch(IllegalArgumentException iae) {\n       LOG.warn(\"Bad checksum type: {}. Using default {}\", checksum,\n                DFS_CHECKSUM_TYPE_DEFAULT);\n       return DataChecksum.Type.valueOf(\n           DFS_CHECKSUM_TYPE_DEFAULT);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static DataChecksum.Type getChecksumType(Configuration conf) {\n    final String checksum \u003d conf.get(\n        DFS_CHECKSUM_TYPE_KEY,\n        DFS_CHECKSUM_TYPE_DEFAULT);\n    try {\n      return DataChecksum.Type.valueOf(checksum);\n    } catch(IllegalArgumentException iae) {\n      LOG.warn(\"Bad checksum type: {}. Using default {}\", checksum,\n               DFS_CHECKSUM_TYPE_DEFAULT);\n      return DataChecksum.Type.valueOf(\n          DFS_CHECKSUM_TYPE_DEFAULT);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/client/impl/DfsClientConf.java",
      "extendedDetails": {
        "oldValue": "[private]",
        "newValue": "[private, static]"
      }
    },
    "3aac4758b007a56e3d66998d457b2156effca528": {
      "type": "Ymultichange(Yfilerename,Ybodychange)",
      "commitMessage": "HDFS-8803. Move DfsClientConf to hdfs-client. Contributed by Mingliang Liu.\n",
      "commitDate": "19/08/15 11:28 AM",
      "commitName": "3aac4758b007a56e3d66998d457b2156effca528",
      "commitAuthor": "Haohui Mai",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "HDFS-8803. Move DfsClientConf to hdfs-client. Contributed by Mingliang Liu.\n",
          "commitDate": "19/08/15 11:28 AM",
          "commitName": "3aac4758b007a56e3d66998d457b2156effca528",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "19/08/15 10:36 AM",
          "commitNameOld": "f61120d964a609ae5eabeb5c4d6c9afe0a15cad8",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 0.04,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,13 @@\n   private DataChecksum.Type getChecksumType(Configuration conf) {\n     final String checksum \u003d conf.get(\n-        DFSConfigKeys.DFS_CHECKSUM_TYPE_KEY,\n-        DFSConfigKeys.DFS_CHECKSUM_TYPE_DEFAULT);\n+        DFS_CHECKSUM_TYPE_KEY,\n+        DFS_CHECKSUM_TYPE_DEFAULT);\n     try {\n       return DataChecksum.Type.valueOf(checksum);\n     } catch(IllegalArgumentException iae) {\n-      DFSClient.LOG.warn(\"Bad checksum type: \" + checksum + \". Using default \"\n-          + DFSConfigKeys.DFS_CHECKSUM_TYPE_DEFAULT);\n+      LOG.warn(\"Bad checksum type: {}. Using default {}\", checksum,\n+               DFS_CHECKSUM_TYPE_DEFAULT);\n       return DataChecksum.Type.valueOf(\n-          DFSConfigKeys.DFS_CHECKSUM_TYPE_DEFAULT); \n+          DFS_CHECKSUM_TYPE_DEFAULT);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private DataChecksum.Type getChecksumType(Configuration conf) {\n    final String checksum \u003d conf.get(\n        DFS_CHECKSUM_TYPE_KEY,\n        DFS_CHECKSUM_TYPE_DEFAULT);\n    try {\n      return DataChecksum.Type.valueOf(checksum);\n    } catch(IllegalArgumentException iae) {\n      LOG.warn(\"Bad checksum type: {}. Using default {}\", checksum,\n               DFS_CHECKSUM_TYPE_DEFAULT);\n      return DataChecksum.Type.valueOf(\n          DFS_CHECKSUM_TYPE_DEFAULT);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/client/impl/DfsClientConf.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/client/impl/DfsClientConf.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/client/impl/DfsClientConf.java"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-8803. Move DfsClientConf to hdfs-client. Contributed by Mingliang Liu.\n",
          "commitDate": "19/08/15 11:28 AM",
          "commitName": "3aac4758b007a56e3d66998d457b2156effca528",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "19/08/15 10:36 AM",
          "commitNameOld": "f61120d964a609ae5eabeb5c4d6c9afe0a15cad8",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 0.04,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,13 @@\n   private DataChecksum.Type getChecksumType(Configuration conf) {\n     final String checksum \u003d conf.get(\n-        DFSConfigKeys.DFS_CHECKSUM_TYPE_KEY,\n-        DFSConfigKeys.DFS_CHECKSUM_TYPE_DEFAULT);\n+        DFS_CHECKSUM_TYPE_KEY,\n+        DFS_CHECKSUM_TYPE_DEFAULT);\n     try {\n       return DataChecksum.Type.valueOf(checksum);\n     } catch(IllegalArgumentException iae) {\n-      DFSClient.LOG.warn(\"Bad checksum type: \" + checksum + \". Using default \"\n-          + DFSConfigKeys.DFS_CHECKSUM_TYPE_DEFAULT);\n+      LOG.warn(\"Bad checksum type: {}. Using default {}\", checksum,\n+               DFS_CHECKSUM_TYPE_DEFAULT);\n       return DataChecksum.Type.valueOf(\n-          DFSConfigKeys.DFS_CHECKSUM_TYPE_DEFAULT); \n+          DFS_CHECKSUM_TYPE_DEFAULT);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private DataChecksum.Type getChecksumType(Configuration conf) {\n    final String checksum \u003d conf.get(\n        DFS_CHECKSUM_TYPE_KEY,\n        DFS_CHECKSUM_TYPE_DEFAULT);\n    try {\n      return DataChecksum.Type.valueOf(checksum);\n    } catch(IllegalArgumentException iae) {\n      LOG.warn(\"Bad checksum type: {}. Using default {}\", checksum,\n               DFS_CHECKSUM_TYPE_DEFAULT);\n      return DataChecksum.Type.valueOf(\n          DFS_CHECKSUM_TYPE_DEFAULT);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/client/impl/DfsClientConf.java",
          "extendedDetails": {}
        }
      ]
    },
    "2cc9514ad643ae49d30524743420ee9744e571bd": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "HDFS-8100. Refactor DFSClient.Conf to a standalone class and separates short-circuit related conf to ShortCircuitConf.\n",
      "commitDate": "10/04/15 2:48 PM",
      "commitName": "2cc9514ad643ae49d30524743420ee9744e571bd",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-8100. Refactor DFSClient.Conf to a standalone class and separates short-circuit related conf to ShortCircuitConf.\n",
          "commitDate": "10/04/15 2:48 PM",
          "commitName": "2cc9514ad643ae49d30524743420ee9744e571bd",
          "commitAuthor": "Tsz-Wo Nicholas Sze",
          "commitDateOld": "10/04/15 11:40 AM",
          "commitNameOld": "7660da95cb67cbfe034aa8fa2a5bf0f8c9fdf41a",
          "commitAuthorOld": "Arun Suresh",
          "daysBetweenCommits": 0.13,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,13 @@\n-    private DataChecksum.Type getChecksumType(Configuration conf) {\n-      final String checksum \u003d conf.get(\n-          DFSConfigKeys.DFS_CHECKSUM_TYPE_KEY,\n-          DFSConfigKeys.DFS_CHECKSUM_TYPE_DEFAULT);\n-      try {\n-        return DataChecksum.Type.valueOf(checksum);\n-      } catch(IllegalArgumentException iae) {\n-        LOG.warn(\"Bad checksum type: \" + checksum + \". Using default \"\n-            + DFSConfigKeys.DFS_CHECKSUM_TYPE_DEFAULT);\n-        return DataChecksum.Type.valueOf(\n-            DFSConfigKeys.DFS_CHECKSUM_TYPE_DEFAULT); \n-      }\n-    }\n\\ No newline at end of file\n+  private DataChecksum.Type getChecksumType(Configuration conf) {\n+    final String checksum \u003d conf.get(\n+        DFSConfigKeys.DFS_CHECKSUM_TYPE_KEY,\n+        DFSConfigKeys.DFS_CHECKSUM_TYPE_DEFAULT);\n+    try {\n+      return DataChecksum.Type.valueOf(checksum);\n+    } catch(IllegalArgumentException iae) {\n+      DFSClient.LOG.warn(\"Bad checksum type: \" + checksum + \". Using default \"\n+          + DFSConfigKeys.DFS_CHECKSUM_TYPE_DEFAULT);\n+      return DataChecksum.Type.valueOf(\n+          DFSConfigKeys.DFS_CHECKSUM_TYPE_DEFAULT); \n+    }\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  private DataChecksum.Type getChecksumType(Configuration conf) {\n    final String checksum \u003d conf.get(\n        DFSConfigKeys.DFS_CHECKSUM_TYPE_KEY,\n        DFSConfigKeys.DFS_CHECKSUM_TYPE_DEFAULT);\n    try {\n      return DataChecksum.Type.valueOf(checksum);\n    } catch(IllegalArgumentException iae) {\n      DFSClient.LOG.warn(\"Bad checksum type: \" + checksum + \". Using default \"\n          + DFSConfigKeys.DFS_CHECKSUM_TYPE_DEFAULT);\n      return DataChecksum.Type.valueOf(\n          DFSConfigKeys.DFS_CHECKSUM_TYPE_DEFAULT); \n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/client/impl/DfsClientConf.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/client/impl/DfsClientConf.java",
            "oldMethodName": "getChecksumType",
            "newMethodName": "getChecksumType"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-8100. Refactor DFSClient.Conf to a standalone class and separates short-circuit related conf to ShortCircuitConf.\n",
          "commitDate": "10/04/15 2:48 PM",
          "commitName": "2cc9514ad643ae49d30524743420ee9744e571bd",
          "commitAuthor": "Tsz-Wo Nicholas Sze",
          "commitDateOld": "10/04/15 11:40 AM",
          "commitNameOld": "7660da95cb67cbfe034aa8fa2a5bf0f8c9fdf41a",
          "commitAuthorOld": "Arun Suresh",
          "daysBetweenCommits": 0.13,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,13 @@\n-    private DataChecksum.Type getChecksumType(Configuration conf) {\n-      final String checksum \u003d conf.get(\n-          DFSConfigKeys.DFS_CHECKSUM_TYPE_KEY,\n-          DFSConfigKeys.DFS_CHECKSUM_TYPE_DEFAULT);\n-      try {\n-        return DataChecksum.Type.valueOf(checksum);\n-      } catch(IllegalArgumentException iae) {\n-        LOG.warn(\"Bad checksum type: \" + checksum + \". Using default \"\n-            + DFSConfigKeys.DFS_CHECKSUM_TYPE_DEFAULT);\n-        return DataChecksum.Type.valueOf(\n-            DFSConfigKeys.DFS_CHECKSUM_TYPE_DEFAULT); \n-      }\n-    }\n\\ No newline at end of file\n+  private DataChecksum.Type getChecksumType(Configuration conf) {\n+    final String checksum \u003d conf.get(\n+        DFSConfigKeys.DFS_CHECKSUM_TYPE_KEY,\n+        DFSConfigKeys.DFS_CHECKSUM_TYPE_DEFAULT);\n+    try {\n+      return DataChecksum.Type.valueOf(checksum);\n+    } catch(IllegalArgumentException iae) {\n+      DFSClient.LOG.warn(\"Bad checksum type: \" + checksum + \". Using default \"\n+          + DFSConfigKeys.DFS_CHECKSUM_TYPE_DEFAULT);\n+      return DataChecksum.Type.valueOf(\n+          DFSConfigKeys.DFS_CHECKSUM_TYPE_DEFAULT); \n+    }\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  private DataChecksum.Type getChecksumType(Configuration conf) {\n    final String checksum \u003d conf.get(\n        DFSConfigKeys.DFS_CHECKSUM_TYPE_KEY,\n        DFSConfigKeys.DFS_CHECKSUM_TYPE_DEFAULT);\n    try {\n      return DataChecksum.Type.valueOf(checksum);\n    } catch(IllegalArgumentException iae) {\n      DFSClient.LOG.warn(\"Bad checksum type: \" + checksum + \". Using default \"\n          + DFSConfigKeys.DFS_CHECKSUM_TYPE_DEFAULT);\n      return DataChecksum.Type.valueOf(\n          DFSConfigKeys.DFS_CHECKSUM_TYPE_DEFAULT); \n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/client/impl/DfsClientConf.java",
          "extendedDetails": {}
        }
      ]
    },
    "3cab01ba6e0349126a23063e135cd5c814a4ae18": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "HADOOP-8700.  Use enum to define the checksum constants in DataChecksum.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1373683 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "15/08/12 6:32 PM",
      "commitName": "3cab01ba6e0349126a23063e135cd5c814a4ae18",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "HADOOP-8700.  Use enum to define the checksum constants in DataChecksum.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1373683 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "15/08/12 6:32 PM",
          "commitName": "3cab01ba6e0349126a23063e135cd5c814a4ae18",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "14/08/12 1:59 PM",
          "commitNameOld": "f98d8eb291be364102b5c3011ce72e8f43eab389",
          "commitAuthorOld": "Eli Collins",
          "daysBetweenCommits": 1.19,
          "commitsBetweenForRepo": 17,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,13 @@\n-    private int getChecksumType(Configuration conf) {\n-      String checksum \u003d conf.get(DFSConfigKeys.DFS_CHECKSUM_TYPE_KEY,\n+    private DataChecksum.Type getChecksumType(Configuration conf) {\n+      final String checksum \u003d conf.get(\n+          DFSConfigKeys.DFS_CHECKSUM_TYPE_KEY,\n           DFSConfigKeys.DFS_CHECKSUM_TYPE_DEFAULT);\n-      if (\"CRC32\".equals(checksum)) {\n-        return DataChecksum.CHECKSUM_CRC32;\n-      } else if (\"CRC32C\".equals(checksum)) {\n-        return DataChecksum.CHECKSUM_CRC32C;\n-      } else if (\"NULL\".equals(checksum)) {\n-        return DataChecksum.CHECKSUM_NULL;\n-      } else {\n-        LOG.warn(\"Bad checksum type: \" + checksum + \". Using default.\");\n-        return DataChecksum.CHECKSUM_CRC32C;\n+      try {\n+        return DataChecksum.Type.valueOf(checksum);\n+      } catch(IllegalArgumentException iae) {\n+        LOG.warn(\"Bad checksum type: \" + checksum + \". Using default \"\n+            + DFSConfigKeys.DFS_CHECKSUM_TYPE_DEFAULT);\n+        return DataChecksum.Type.valueOf(\n+            DFSConfigKeys.DFS_CHECKSUM_TYPE_DEFAULT); \n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private DataChecksum.Type getChecksumType(Configuration conf) {\n      final String checksum \u003d conf.get(\n          DFSConfigKeys.DFS_CHECKSUM_TYPE_KEY,\n          DFSConfigKeys.DFS_CHECKSUM_TYPE_DEFAULT);\n      try {\n        return DataChecksum.Type.valueOf(checksum);\n      } catch(IllegalArgumentException iae) {\n        LOG.warn(\"Bad checksum type: \" + checksum + \". Using default \"\n            + DFSConfigKeys.DFS_CHECKSUM_TYPE_DEFAULT);\n        return DataChecksum.Type.valueOf(\n            DFSConfigKeys.DFS_CHECKSUM_TYPE_DEFAULT); \n      }\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
          "extendedDetails": {
            "oldValue": "int",
            "newValue": "DataChecksum.Type"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-8700.  Use enum to define the checksum constants in DataChecksum.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1373683 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "15/08/12 6:32 PM",
          "commitName": "3cab01ba6e0349126a23063e135cd5c814a4ae18",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "14/08/12 1:59 PM",
          "commitNameOld": "f98d8eb291be364102b5c3011ce72e8f43eab389",
          "commitAuthorOld": "Eli Collins",
          "daysBetweenCommits": 1.19,
          "commitsBetweenForRepo": 17,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,13 @@\n-    private int getChecksumType(Configuration conf) {\n-      String checksum \u003d conf.get(DFSConfigKeys.DFS_CHECKSUM_TYPE_KEY,\n+    private DataChecksum.Type getChecksumType(Configuration conf) {\n+      final String checksum \u003d conf.get(\n+          DFSConfigKeys.DFS_CHECKSUM_TYPE_KEY,\n           DFSConfigKeys.DFS_CHECKSUM_TYPE_DEFAULT);\n-      if (\"CRC32\".equals(checksum)) {\n-        return DataChecksum.CHECKSUM_CRC32;\n-      } else if (\"CRC32C\".equals(checksum)) {\n-        return DataChecksum.CHECKSUM_CRC32C;\n-      } else if (\"NULL\".equals(checksum)) {\n-        return DataChecksum.CHECKSUM_NULL;\n-      } else {\n-        LOG.warn(\"Bad checksum type: \" + checksum + \". Using default.\");\n-        return DataChecksum.CHECKSUM_CRC32C;\n+      try {\n+        return DataChecksum.Type.valueOf(checksum);\n+      } catch(IllegalArgumentException iae) {\n+        LOG.warn(\"Bad checksum type: \" + checksum + \". Using default \"\n+            + DFSConfigKeys.DFS_CHECKSUM_TYPE_DEFAULT);\n+        return DataChecksum.Type.valueOf(\n+            DFSConfigKeys.DFS_CHECKSUM_TYPE_DEFAULT); \n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private DataChecksum.Type getChecksumType(Configuration conf) {\n      final String checksum \u003d conf.get(\n          DFSConfigKeys.DFS_CHECKSUM_TYPE_KEY,\n          DFSConfigKeys.DFS_CHECKSUM_TYPE_DEFAULT);\n      try {\n        return DataChecksum.Type.valueOf(checksum);\n      } catch(IllegalArgumentException iae) {\n        LOG.warn(\"Bad checksum type: \" + checksum + \". Using default \"\n            + DFSConfigKeys.DFS_CHECKSUM_TYPE_DEFAULT);\n        return DataChecksum.Type.valueOf(\n            DFSConfigKeys.DFS_CHECKSUM_TYPE_DEFAULT); \n      }\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
          "extendedDetails": {}
        }
      ]
    },
    "f84552ac35bb5221290be68fece9c779ebeaf4bc": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-2130. Switch default checksum to CRC32C. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1196889 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/11/11 5:35 PM",
      "commitName": "f84552ac35bb5221290be68fece9c779ebeaf4bc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,14 @@\n+    private int getChecksumType(Configuration conf) {\n+      String checksum \u003d conf.get(DFSConfigKeys.DFS_CHECKSUM_TYPE_KEY,\n+          DFSConfigKeys.DFS_CHECKSUM_TYPE_DEFAULT);\n+      if (\"CRC32\".equals(checksum)) {\n+        return DataChecksum.CHECKSUM_CRC32;\n+      } else if (\"CRC32C\".equals(checksum)) {\n+        return DataChecksum.CHECKSUM_CRC32C;\n+      } else if (\"NULL\".equals(checksum)) {\n+        return DataChecksum.CHECKSUM_NULL;\n+      } else {\n+        LOG.warn(\"Bad checksum type: \" + checksum + \". Using default.\");\n+        return DataChecksum.CHECKSUM_CRC32C;\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private int getChecksumType(Configuration conf) {\n      String checksum \u003d conf.get(DFSConfigKeys.DFS_CHECKSUM_TYPE_KEY,\n          DFSConfigKeys.DFS_CHECKSUM_TYPE_DEFAULT);\n      if (\"CRC32\".equals(checksum)) {\n        return DataChecksum.CHECKSUM_CRC32;\n      } else if (\"CRC32C\".equals(checksum)) {\n        return DataChecksum.CHECKSUM_CRC32C;\n      } else if (\"NULL\".equals(checksum)) {\n        return DataChecksum.CHECKSUM_NULL;\n      } else {\n        LOG.warn(\"Bad checksum type: \" + checksum + \". Using default.\");\n        return DataChecksum.CHECKSUM_CRC32C;\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java"
    }
  }
}