{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NMLeveldbStateStoreService.java",
  "functionName": "removeAMRMProxyAppContext",
  "functionId": "removeAMRMProxyAppContext___attempt-ApplicationAttemptId",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/recovery/NMLeveldbStateStoreService.java",
  "functionStartLine": 1632,
  "functionEndLine": 1667,
  "numCommitsSeen": 43,
  "timeTaken": 1926,
  "changeHistory": [
    "7f515f57ede74dae787994f37bfafd5d20c9aa4c",
    "49aa60e50d20f8c18ed6f00fa8966244536fe7da"
  ],
  "changeHistoryShort": {
    "7f515f57ede74dae787994f37bfafd5d20c9aa4c": "Ybodychange",
    "49aa60e50d20f8c18ed6f00fa8966244536fe7da": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7f515f57ede74dae787994f37bfafd5d20c9aa4c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7585. NodeManager should go unhealthy when state store throws DBException. Contributed by Wilfred Spiegelenburg.\n",
      "commitDate": "02/01/18 6:03 PM",
      "commitName": "7f515f57ede74dae787994f37bfafd5d20c9aa4c",
      "commitAuthor": "Miklos Szegedi",
      "commitDateOld": "28/10/17 10:38 PM",
      "commitNameOld": "9114d7a5a0159bbe70e9c289dbe1fc5db9101db5",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 65.85,
      "commitsBetweenForRepo": 464,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,36 @@\n   public void removeAMRMProxyAppContext(ApplicationAttemptId attempt)\n       throws IOException {\n     Set\u003cString\u003e candidates \u003d new HashSet\u003c\u003e();\n     String keyPrefix \u003d AMRMPROXY_KEY_PREFIX + attempt + \"/\";\n     LeveldbIterator iter \u003d null;\n     try {\n       iter \u003d new LeveldbIterator(db);\n       iter.seek(bytes(keyPrefix));\n       while (iter.hasNext()) {\n         Entry\u003cbyte[], byte[]\u003e entry \u003d iter.next();\n         String key \u003d asString(entry.getKey());\n         if (!key.startsWith(keyPrefix)) {\n           break;\n         }\n         // Do this because iter.remove() is not supported here\n         candidates.add(key);\n       }\n     } catch (DBException e) {\n+      markStoreUnHealthy(e);\n       throw new IOException(e);\n     } finally {\n       if (iter !\u003d null) {\n         iter.close();\n       }\n     }\n \n     // Delete all candidate keys\n     try {\n       for (String key : candidates) {\n         db.delete(bytes(key));\n       }\n     } catch (DBException e) {\n+      markStoreUnHealthy(e);\n       throw new IOException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void removeAMRMProxyAppContext(ApplicationAttemptId attempt)\n      throws IOException {\n    Set\u003cString\u003e candidates \u003d new HashSet\u003c\u003e();\n    String keyPrefix \u003d AMRMPROXY_KEY_PREFIX + attempt + \"/\";\n    LeveldbIterator iter \u003d null;\n    try {\n      iter \u003d new LeveldbIterator(db);\n      iter.seek(bytes(keyPrefix));\n      while (iter.hasNext()) {\n        Entry\u003cbyte[], byte[]\u003e entry \u003d iter.next();\n        String key \u003d asString(entry.getKey());\n        if (!key.startsWith(keyPrefix)) {\n          break;\n        }\n        // Do this because iter.remove() is not supported here\n        candidates.add(key);\n      }\n    } catch (DBException e) {\n      markStoreUnHealthy(e);\n      throw new IOException(e);\n    } finally {\n      if (iter !\u003d null) {\n        iter.close();\n      }\n    }\n\n    // Delete all candidate keys\n    try {\n      for (String key : candidates) {\n        db.delete(bytes(key));\n      }\n    } catch (DBException e) {\n      markStoreUnHealthy(e);\n      throw new IOException(e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/recovery/NMLeveldbStateStoreService.java",
      "extendedDetails": {}
    },
    "49aa60e50d20f8c18ed6f00fa8966244536fe7da": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6127. Add support for work preserving NM restart when AMRMProxy is enabled. (Botong Huang via asuresh).\n",
      "commitDate": "22/06/17 11:27 AM",
      "commitName": "49aa60e50d20f8c18ed6f00fa8966244536fe7da",
      "commitAuthor": "Arun Suresh",
      "diff": "@@ -0,0 +1,34 @@\n+  public void removeAMRMProxyAppContext(ApplicationAttemptId attempt)\n+      throws IOException {\n+    Set\u003cString\u003e candidates \u003d new HashSet\u003c\u003e();\n+    String keyPrefix \u003d AMRMPROXY_KEY_PREFIX + attempt + \"/\";\n+    LeveldbIterator iter \u003d null;\n+    try {\n+      iter \u003d new LeveldbIterator(db);\n+      iter.seek(bytes(keyPrefix));\n+      while (iter.hasNext()) {\n+        Entry\u003cbyte[], byte[]\u003e entry \u003d iter.next();\n+        String key \u003d asString(entry.getKey());\n+        if (!key.startsWith(keyPrefix)) {\n+          break;\n+        }\n+        // Do this because iter.remove() is not supported here\n+        candidates.add(key);\n+      }\n+    } catch (DBException e) {\n+      throw new IOException(e);\n+    } finally {\n+      if (iter !\u003d null) {\n+        iter.close();\n+      }\n+    }\n+\n+    // Delete all candidate keys\n+    try {\n+      for (String key : candidates) {\n+        db.delete(bytes(key));\n+      }\n+    } catch (DBException e) {\n+      throw new IOException(e);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void removeAMRMProxyAppContext(ApplicationAttemptId attempt)\n      throws IOException {\n    Set\u003cString\u003e candidates \u003d new HashSet\u003c\u003e();\n    String keyPrefix \u003d AMRMPROXY_KEY_PREFIX + attempt + \"/\";\n    LeveldbIterator iter \u003d null;\n    try {\n      iter \u003d new LeveldbIterator(db);\n      iter.seek(bytes(keyPrefix));\n      while (iter.hasNext()) {\n        Entry\u003cbyte[], byte[]\u003e entry \u003d iter.next();\n        String key \u003d asString(entry.getKey());\n        if (!key.startsWith(keyPrefix)) {\n          break;\n        }\n        // Do this because iter.remove() is not supported here\n        candidates.add(key);\n      }\n    } catch (DBException e) {\n      throw new IOException(e);\n    } finally {\n      if (iter !\u003d null) {\n        iter.close();\n      }\n    }\n\n    // Delete all candidate keys\n    try {\n      for (String key : candidates) {\n        db.delete(bytes(key));\n      }\n    } catch (DBException e) {\n      throw new IOException(e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/recovery/NMLeveldbStateStoreService.java"
    }
  }
}