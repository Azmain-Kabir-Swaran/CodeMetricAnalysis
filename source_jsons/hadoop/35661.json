{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TimelineServiceV2Publisher.java",
  "functionName": "appAttemptRegistered",
  "functionId": "appAttemptRegistered___appAttempt-RMAppAttempt__registeredTime-long",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/metrics/TimelineServiceV2Publisher.java",
  "functionStartLine": 313,
  "functionEndLine": 348,
  "numCommitsSeen": 54,
  "timeTaken": 5473,
  "changeHistory": [
    "eb7b256cc2c74e1b461e45444179584668d34ac6",
    "092fead5d9875fb3760206bcdd76cdafec5e9481",
    "1f304b0c7f261369dd68839507bb609a949965ad",
    "34f02f07d5bf9fbfa1d07d1b219225c298539105",
    "10ec5586fba20d80dd91d8d0ddb442c66d39a0d4",
    "f3c661e8dddc80726f1084ff27815d179540889c",
    "50bd067e1d63d4c80dc1e7bf4024bfaf42cf4416",
    "6b8b1608e64e300e4e1d23c60476febaca29ca38"
  ],
  "changeHistoryShort": {
    "eb7b256cc2c74e1b461e45444179584668d34ac6": "Ybodychange",
    "092fead5d9875fb3760206bcdd76cdafec5e9481": "Ybodychange",
    "1f304b0c7f261369dd68839507bb609a949965ad": "Ybodychange",
    "34f02f07d5bf9fbfa1d07d1b219225c298539105": "Ybodychange",
    "10ec5586fba20d80dd91d8d0ddb442c66d39a0d4": "Ymultichange(Yrename,Yparameterchange,Ymodifierchange,Ybodychange)",
    "f3c661e8dddc80726f1084ff27815d179540889c": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange)",
    "50bd067e1d63d4c80dc1e7bf4024bfaf42cf4416": "Ybodychange",
    "6b8b1608e64e300e4e1d23c60476febaca29ca38": "Yintroduced"
  },
  "changeHistoryDetails": {
    "eb7b256cc2c74e1b461e45444179584668d34ac6": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8239. [UI2] Clicking on Node Manager UI under AM container info / App Attempt page goes to old RM UI. Contributed by Sunil G.\n",
      "commitDate": "08/05/18 11:30 PM",
      "commitName": "eb7b256cc2c74e1b461e45444179584668d34ac6",
      "commitAuthor": "Rohith Sharma K S",
      "commitDateOld": "26/04/18 9:56 PM",
      "commitNameOld": "1634de0fc1430d86b7688d16259a81462fba482f",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 12.07,
      "commitsBetweenForRepo": 74,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,36 @@\n   public void appAttemptRegistered(RMAppAttempt appAttempt,\n       long registeredTime) {\n     ApplicationAttemptId attemptId \u003d appAttempt.getAppAttemptId();\n     TimelineEntity entity \u003d createAppAttemptEntity(attemptId);\n     entity.setCreatedTime(registeredTime);\n \n     TimelineEvent tEvent \u003d new TimelineEvent();\n     tEvent.setId(AppAttemptMetricsConstants.REGISTERED_EVENT_TYPE);\n     tEvent.setTimestamp(registeredTime);\n     entity.addEvent(tEvent);\n \n     Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n     entityInfo.put(AppAttemptMetricsConstants.TRACKING_URL_INFO,\n         appAttempt.getTrackingUrl());\n     entityInfo.put(AppAttemptMetricsConstants.ORIGINAL_TRACKING_URL_INFO,\n         appAttempt.getOriginalTrackingUrl());\n     entityInfo.put(AppAttemptMetricsConstants.HOST_INFO,\n         appAttempt.getHost());\n     entityInfo.put(AppAttemptMetricsConstants.RPC_PORT_INFO,\n         appAttempt.getRpcPort());\n     if (appAttempt.getMasterContainer() !\u003d null) {\n       entityInfo.put(AppAttemptMetricsConstants.MASTER_CONTAINER_INFO,\n           appAttempt.getMasterContainer().getId().toString());\n+      entityInfo.put(AppAttemptMetricsConstants.MASTER_NODE_ADDRESS,\n+          appAttempt.getMasterContainer().getNodeHttpAddress());\n+      entityInfo.put(AppAttemptMetricsConstants.MASTER_NODE_ID,\n+          appAttempt.getMasterContainer().getNodeId().toString());\n     }\n     entity.setInfo(entityInfo);\n     entity.setIdPrefix(\n         TimelineServiceHelper.invertLong(attemptId.getAttemptId()));\n \n     getDispatcher().getEventHandler().handle(\n         new TimelineV2PublishEvent(SystemMetricsEventType.PUBLISH_ENTITY,\n             entity, appAttempt.getAppAttemptId().getApplicationId()));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void appAttemptRegistered(RMAppAttempt appAttempt,\n      long registeredTime) {\n    ApplicationAttemptId attemptId \u003d appAttempt.getAppAttemptId();\n    TimelineEntity entity \u003d createAppAttemptEntity(attemptId);\n    entity.setCreatedTime(registeredTime);\n\n    TimelineEvent tEvent \u003d new TimelineEvent();\n    tEvent.setId(AppAttemptMetricsConstants.REGISTERED_EVENT_TYPE);\n    tEvent.setTimestamp(registeredTime);\n    entity.addEvent(tEvent);\n\n    Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n    entityInfo.put(AppAttemptMetricsConstants.TRACKING_URL_INFO,\n        appAttempt.getTrackingUrl());\n    entityInfo.put(AppAttemptMetricsConstants.ORIGINAL_TRACKING_URL_INFO,\n        appAttempt.getOriginalTrackingUrl());\n    entityInfo.put(AppAttemptMetricsConstants.HOST_INFO,\n        appAttempt.getHost());\n    entityInfo.put(AppAttemptMetricsConstants.RPC_PORT_INFO,\n        appAttempt.getRpcPort());\n    if (appAttempt.getMasterContainer() !\u003d null) {\n      entityInfo.put(AppAttemptMetricsConstants.MASTER_CONTAINER_INFO,\n          appAttempt.getMasterContainer().getId().toString());\n      entityInfo.put(AppAttemptMetricsConstants.MASTER_NODE_ADDRESS,\n          appAttempt.getMasterContainer().getNodeHttpAddress());\n      entityInfo.put(AppAttemptMetricsConstants.MASTER_NODE_ID,\n          appAttempt.getMasterContainer().getNodeId().toString());\n    }\n    entity.setInfo(entityInfo);\n    entity.setIdPrefix(\n        TimelineServiceHelper.invertLong(attemptId.getAttemptId()));\n\n    getDispatcher().getEventHandler().handle(\n        new TimelineV2PublishEvent(SystemMetricsEventType.PUBLISH_ENTITY,\n            entity, appAttempt.getAppAttemptId().getApplicationId()));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/metrics/TimelineServiceV2Publisher.java",
      "extendedDetails": {}
    },
    "092fead5d9875fb3760206bcdd76cdafec5e9481": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5792. Adopt the id prefix for YARN, MR, and DS entities. Contributed by Varun Saxena.\n",
      "commitDate": "29/08/17 10:59 PM",
      "commitName": "092fead5d9875fb3760206bcdd76cdafec5e9481",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "23/07/17 11:09 PM",
      "commitNameOld": "e3153284288d6cfa7a28511dfefe1c8a7d6b4eda",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 36.99,
      "commitsBetweenForRepo": 293,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,32 @@\n   public void appAttemptRegistered(RMAppAttempt appAttempt,\n       long registeredTime) {\n-    TimelineEntity entity \u003d\n-        createAppAttemptEntity(appAttempt.getAppAttemptId());\n+    ApplicationAttemptId attemptId \u003d appAttempt.getAppAttemptId();\n+    TimelineEntity entity \u003d createAppAttemptEntity(attemptId);\n     entity.setCreatedTime(registeredTime);\n \n     TimelineEvent tEvent \u003d new TimelineEvent();\n     tEvent.setId(AppAttemptMetricsConstants.REGISTERED_EVENT_TYPE);\n     tEvent.setTimestamp(registeredTime);\n     entity.addEvent(tEvent);\n \n     Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n     entityInfo.put(AppAttemptMetricsConstants.TRACKING_URL_INFO,\n         appAttempt.getTrackingUrl());\n     entityInfo.put(AppAttemptMetricsConstants.ORIGINAL_TRACKING_URL_INFO,\n         appAttempt.getOriginalTrackingUrl());\n     entityInfo.put(AppAttemptMetricsConstants.HOST_INFO,\n         appAttempt.getHost());\n     entityInfo.put(AppAttemptMetricsConstants.RPC_PORT_INFO,\n         appAttempt.getRpcPort());\n     if (appAttempt.getMasterContainer() !\u003d null) {\n       entityInfo.put(AppAttemptMetricsConstants.MASTER_CONTAINER_INFO,\n           appAttempt.getMasterContainer().getId().toString());\n     }\n     entity.setInfo(entityInfo);\n+    entity.setIdPrefix(\n+        TimelineServiceHelper.invertLong(attemptId.getAttemptId()));\n \n     getDispatcher().getEventHandler().handle(\n         new TimelineV2PublishEvent(SystemMetricsEventType.PUBLISH_ENTITY,\n             entity, appAttempt.getAppAttemptId().getApplicationId()));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void appAttemptRegistered(RMAppAttempt appAttempt,\n      long registeredTime) {\n    ApplicationAttemptId attemptId \u003d appAttempt.getAppAttemptId();\n    TimelineEntity entity \u003d createAppAttemptEntity(attemptId);\n    entity.setCreatedTime(registeredTime);\n\n    TimelineEvent tEvent \u003d new TimelineEvent();\n    tEvent.setId(AppAttemptMetricsConstants.REGISTERED_EVENT_TYPE);\n    tEvent.setTimestamp(registeredTime);\n    entity.addEvent(tEvent);\n\n    Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n    entityInfo.put(AppAttemptMetricsConstants.TRACKING_URL_INFO,\n        appAttempt.getTrackingUrl());\n    entityInfo.put(AppAttemptMetricsConstants.ORIGINAL_TRACKING_URL_INFO,\n        appAttempt.getOriginalTrackingUrl());\n    entityInfo.put(AppAttemptMetricsConstants.HOST_INFO,\n        appAttempt.getHost());\n    entityInfo.put(AppAttemptMetricsConstants.RPC_PORT_INFO,\n        appAttempt.getRpcPort());\n    if (appAttempt.getMasterContainer() !\u003d null) {\n      entityInfo.put(AppAttemptMetricsConstants.MASTER_CONTAINER_INFO,\n          appAttempt.getMasterContainer().getId().toString());\n    }\n    entity.setInfo(entityInfo);\n    entity.setIdPrefix(\n        TimelineServiceHelper.invertLong(attemptId.getAttemptId()));\n\n    getDispatcher().getEventHandler().handle(\n        new TimelineV2PublishEvent(SystemMetricsEventType.PUBLISH_ENTITY,\n            entity, appAttempt.getAppAttemptId().getApplicationId()));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/metrics/TimelineServiceV2Publisher.java",
      "extendedDetails": {}
    },
    "1f304b0c7f261369dd68839507bb609a949965ad": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5699. Retrospect yarn entity fields which are publishing in events info fields. Contributed by Rohith Sharma K S.\n",
      "commitDate": "15/10/16 1:54 PM",
      "commitName": "1f304b0c7f261369dd68839507bb609a949965ad",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "28/09/16 3:40 AM",
      "commitNameOld": "9b0fd01d2ee002ac4c30c2862e18ca8f1626fa8d",
      "commitAuthorOld": "Varun Saxena",
      "daysBetweenCommits": 17.43,
      "commitsBetweenForRepo": 134,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,30 @@\n   public void appAttemptRegistered(RMAppAttempt appAttempt,\n       long registeredTime) {\n     TimelineEntity entity \u003d\n         createAppAttemptEntity(appAttempt.getAppAttemptId());\n     entity.setCreatedTime(registeredTime);\n \n     TimelineEvent tEvent \u003d new TimelineEvent();\n     tEvent.setId(AppAttemptMetricsConstants.REGISTERED_EVENT_TYPE);\n     tEvent.setTimestamp(registeredTime);\n-    Map\u003cString, Object\u003e eventInfo \u003d new HashMap\u003cString, Object\u003e();\n-    eventInfo.put(AppAttemptMetricsConstants.TRACKING_URL_EVENT_INFO,\n+    entity.addEvent(tEvent);\n+\n+    Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n+    entityInfo.put(AppAttemptMetricsConstants.TRACKING_URL_INFO,\n         appAttempt.getTrackingUrl());\n-    eventInfo.put(AppAttemptMetricsConstants.ORIGINAL_TRACKING_URL_EVENT_INFO,\n+    entityInfo.put(AppAttemptMetricsConstants.ORIGINAL_TRACKING_URL_INFO,\n         appAttempt.getOriginalTrackingUrl());\n-    eventInfo.put(AppAttemptMetricsConstants.HOST_EVENT_INFO,\n+    entityInfo.put(AppAttemptMetricsConstants.HOST_INFO,\n         appAttempt.getHost());\n-    eventInfo.put(AppAttemptMetricsConstants.RPC_PORT_EVENT_INFO,\n+    entityInfo.put(AppAttemptMetricsConstants.RPC_PORT_INFO,\n         appAttempt.getRpcPort());\n     if (appAttempt.getMasterContainer() !\u003d null) {\n-      eventInfo.put(AppAttemptMetricsConstants.MASTER_CONTAINER_EVENT_INFO,\n+      entityInfo.put(AppAttemptMetricsConstants.MASTER_CONTAINER_INFO,\n           appAttempt.getMasterContainer().getId().toString());\n     }\n-    tEvent.setInfo(eventInfo);\n-    entity.addEvent(tEvent);\n+    entity.setInfo(entityInfo);\n+\n     getDispatcher().getEventHandler().handle(\n         new TimelineV2PublishEvent(SystemMetricsEventType.PUBLISH_ENTITY,\n             entity, appAttempt.getAppAttemptId().getApplicationId()));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void appAttemptRegistered(RMAppAttempt appAttempt,\n      long registeredTime) {\n    TimelineEntity entity \u003d\n        createAppAttemptEntity(appAttempt.getAppAttemptId());\n    entity.setCreatedTime(registeredTime);\n\n    TimelineEvent tEvent \u003d new TimelineEvent();\n    tEvent.setId(AppAttemptMetricsConstants.REGISTERED_EVENT_TYPE);\n    tEvent.setTimestamp(registeredTime);\n    entity.addEvent(tEvent);\n\n    Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n    entityInfo.put(AppAttemptMetricsConstants.TRACKING_URL_INFO,\n        appAttempt.getTrackingUrl());\n    entityInfo.put(AppAttemptMetricsConstants.ORIGINAL_TRACKING_URL_INFO,\n        appAttempt.getOriginalTrackingUrl());\n    entityInfo.put(AppAttemptMetricsConstants.HOST_INFO,\n        appAttempt.getHost());\n    entityInfo.put(AppAttemptMetricsConstants.RPC_PORT_INFO,\n        appAttempt.getRpcPort());\n    if (appAttempt.getMasterContainer() !\u003d null) {\n      entityInfo.put(AppAttemptMetricsConstants.MASTER_CONTAINER_INFO,\n          appAttempt.getMasterContainer().getId().toString());\n    }\n    entity.setInfo(entityInfo);\n\n    getDispatcher().getEventHandler().handle(\n        new TimelineV2PublishEvent(SystemMetricsEventType.PUBLISH_ENTITY,\n            entity, appAttempt.getAppAttemptId().getApplicationId()));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/metrics/TimelineServiceV2Publisher.java",
      "extendedDetails": {}
    },
    "34f02f07d5bf9fbfa1d07d1b219225c298539105": {
      "type": "Ybodychange",
      "commitMessage": "Rebase to latest trunk\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "34f02f07d5bf9fbfa1d07d1b219225c298539105",
      "commitAuthor": "Li Lu",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "c4d7bbda5cb3ceaf54a022f3cf97109e8e190d71",
      "commitAuthorOld": "Varun Saxena",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,28 @@\n   public void appAttemptRegistered(RMAppAttempt appAttempt,\n       long registeredTime) {\n     TimelineEntity entity \u003d\n         createAppAttemptEntity(appAttempt.getAppAttemptId());\n     entity.setCreatedTime(registeredTime);\n \n     TimelineEvent tEvent \u003d new TimelineEvent();\n     tEvent.setId(AppAttemptMetricsConstants.REGISTERED_EVENT_TYPE);\n     tEvent.setTimestamp(registeredTime);\n     Map\u003cString, Object\u003e eventInfo \u003d new HashMap\u003cString, Object\u003e();\n     eventInfo.put(AppAttemptMetricsConstants.TRACKING_URL_EVENT_INFO,\n         appAttempt.getTrackingUrl());\n     eventInfo.put(AppAttemptMetricsConstants.ORIGINAL_TRACKING_URL_EVENT_INFO,\n         appAttempt.getOriginalTrackingUrl());\n     eventInfo.put(AppAttemptMetricsConstants.HOST_EVENT_INFO,\n         appAttempt.getHost());\n     eventInfo.put(AppAttemptMetricsConstants.RPC_PORT_EVENT_INFO,\n         appAttempt.getRpcPort());\n-    eventInfo.put(AppAttemptMetricsConstants.MASTER_CONTAINER_EVENT_INFO,\n-        appAttempt.getMasterContainer().getId().toString());\n+    if (appAttempt.getMasterContainer() !\u003d null) {\n+      eventInfo.put(AppAttemptMetricsConstants.MASTER_CONTAINER_EVENT_INFO,\n+          appAttempt.getMasterContainer().getId().toString());\n+    }\n     tEvent.setInfo(eventInfo);\n     entity.addEvent(tEvent);\n     getDispatcher().getEventHandler().handle(\n         new TimelineV2PublishEvent(SystemMetricsEventType.PUBLISH_ENTITY,\n             entity, appAttempt.getAppAttemptId().getApplicationId()));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void appAttemptRegistered(RMAppAttempt appAttempt,\n      long registeredTime) {\n    TimelineEntity entity \u003d\n        createAppAttemptEntity(appAttempt.getAppAttemptId());\n    entity.setCreatedTime(registeredTime);\n\n    TimelineEvent tEvent \u003d new TimelineEvent();\n    tEvent.setId(AppAttemptMetricsConstants.REGISTERED_EVENT_TYPE);\n    tEvent.setTimestamp(registeredTime);\n    Map\u003cString, Object\u003e eventInfo \u003d new HashMap\u003cString, Object\u003e();\n    eventInfo.put(AppAttemptMetricsConstants.TRACKING_URL_EVENT_INFO,\n        appAttempt.getTrackingUrl());\n    eventInfo.put(AppAttemptMetricsConstants.ORIGINAL_TRACKING_URL_EVENT_INFO,\n        appAttempt.getOriginalTrackingUrl());\n    eventInfo.put(AppAttemptMetricsConstants.HOST_EVENT_INFO,\n        appAttempt.getHost());\n    eventInfo.put(AppAttemptMetricsConstants.RPC_PORT_EVENT_INFO,\n        appAttempt.getRpcPort());\n    if (appAttempt.getMasterContainer() !\u003d null) {\n      eventInfo.put(AppAttemptMetricsConstants.MASTER_CONTAINER_EVENT_INFO,\n          appAttempt.getMasterContainer().getId().toString());\n    }\n    tEvent.setInfo(eventInfo);\n    entity.addEvent(tEvent);\n    getDispatcher().getEventHandler().handle(\n        new TimelineV2PublishEvent(SystemMetricsEventType.PUBLISH_ENTITY,\n            entity, appAttempt.getAppAttemptId().getApplicationId()));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/metrics/TimelineServiceV2Publisher.java",
      "extendedDetails": {}
    },
    "10ec5586fba20d80dd91d8d0ddb442c66d39a0d4": {
      "type": "Ymultichange(Yrename,Yparameterchange,Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-4129. Refactor the SystemMetricPublisher in RM to better support newer events (Naganarasimha G R via sjlee)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "10ec5586fba20d80dd91d8d0ddb442c66d39a0d4",
      "commitAuthor": "Sangjin Lee",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-4129. Refactor the SystemMetricPublisher in RM to better support newer events (Naganarasimha G R via sjlee)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "10ec5586fba20d80dd91d8d0ddb442c66d39a0d4",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "8d9476ec5f64795e2bdd60bea4d643eaafed2c50",
          "commitAuthorOld": "Sangjin Lee",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 11,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,26 @@\n-  void publishAppAttemptRegisteredEvent(AppAttemptRegisteredEvent event) {\n+  public void appAttemptRegistered(RMAppAttempt appAttempt,\n+      long registeredTime) {\n     TimelineEntity entity \u003d\n-        createAppAttemptEntity(event.getApplicationAttemptId());\n+        createAppAttemptEntity(appAttempt.getAppAttemptId());\n+    entity.setCreatedTime(registeredTime);\n+\n     TimelineEvent tEvent \u003d new TimelineEvent();\n     tEvent.setId(AppAttemptMetricsConstants.REGISTERED_EVENT_TYPE);\n-    tEvent.setTimestamp(event.getTimestamp());\n+    tEvent.setTimestamp(registeredTime);\n     Map\u003cString, Object\u003e eventInfo \u003d new HashMap\u003cString, Object\u003e();\n-    eventInfo.put(\n-        AppAttemptMetricsConstants.TRACKING_URL_EVENT_INFO,\n-        event.getTrackingUrl());\n-    eventInfo.put(\n-        AppAttemptMetricsConstants.ORIGINAL_TRACKING_URL_EVENT_INFO,\n-        event.getOriginalTrackingURL());\n+    eventInfo.put(AppAttemptMetricsConstants.TRACKING_URL_EVENT_INFO,\n+        appAttempt.getTrackingUrl());\n+    eventInfo.put(AppAttemptMetricsConstants.ORIGINAL_TRACKING_URL_EVENT_INFO,\n+        appAttempt.getOriginalTrackingUrl());\n     eventInfo.put(AppAttemptMetricsConstants.HOST_EVENT_INFO,\n-        event.getHost());\n+        appAttempt.getHost());\n     eventInfo.put(AppAttemptMetricsConstants.RPC_PORT_EVENT_INFO,\n-        event.getRpcPort());\n-    if (event.getMasterContainerId() !\u003d null) {\n-      eventInfo.put(AppAttemptMetricsConstants.MASTER_CONTAINER_EVENT_INFO,\n-          event.getMasterContainerId().toString());\n-    }\n+        appAttempt.getRpcPort());\n+    eventInfo.put(AppAttemptMetricsConstants.MASTER_CONTAINER_EVENT_INFO,\n+        appAttempt.getMasterContainer().getId().toString());\n     tEvent.setInfo(eventInfo);\n     entity.addEvent(tEvent);\n-    putEntity(entity, event.getApplicationAttemptId().getApplicationId());\n+    getDispatcher().getEventHandler().handle(\n+        new TimelineV2PublishEvent(SystemMetricsEventType.PUBLISH_ENTITY,\n+            entity, appAttempt.getAppAttemptId().getApplicationId()));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void appAttemptRegistered(RMAppAttempt appAttempt,\n      long registeredTime) {\n    TimelineEntity entity \u003d\n        createAppAttemptEntity(appAttempt.getAppAttemptId());\n    entity.setCreatedTime(registeredTime);\n\n    TimelineEvent tEvent \u003d new TimelineEvent();\n    tEvent.setId(AppAttemptMetricsConstants.REGISTERED_EVENT_TYPE);\n    tEvent.setTimestamp(registeredTime);\n    Map\u003cString, Object\u003e eventInfo \u003d new HashMap\u003cString, Object\u003e();\n    eventInfo.put(AppAttemptMetricsConstants.TRACKING_URL_EVENT_INFO,\n        appAttempt.getTrackingUrl());\n    eventInfo.put(AppAttemptMetricsConstants.ORIGINAL_TRACKING_URL_EVENT_INFO,\n        appAttempt.getOriginalTrackingUrl());\n    eventInfo.put(AppAttemptMetricsConstants.HOST_EVENT_INFO,\n        appAttempt.getHost());\n    eventInfo.put(AppAttemptMetricsConstants.RPC_PORT_EVENT_INFO,\n        appAttempt.getRpcPort());\n    eventInfo.put(AppAttemptMetricsConstants.MASTER_CONTAINER_EVENT_INFO,\n        appAttempt.getMasterContainer().getId().toString());\n    tEvent.setInfo(eventInfo);\n    entity.addEvent(tEvent);\n    getDispatcher().getEventHandler().handle(\n        new TimelineV2PublishEvent(SystemMetricsEventType.PUBLISH_ENTITY,\n            entity, appAttempt.getAppAttemptId().getApplicationId()));\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/metrics/TimelineServiceV2Publisher.java",
          "extendedDetails": {
            "oldValue": "publishAppAttemptRegisteredEvent",
            "newValue": "appAttemptRegistered"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-4129. Refactor the SystemMetricPublisher in RM to better support newer events (Naganarasimha G R via sjlee)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "10ec5586fba20d80dd91d8d0ddb442c66d39a0d4",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "8d9476ec5f64795e2bdd60bea4d643eaafed2c50",
          "commitAuthorOld": "Sangjin Lee",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 11,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,26 @@\n-  void publishAppAttemptRegisteredEvent(AppAttemptRegisteredEvent event) {\n+  public void appAttemptRegistered(RMAppAttempt appAttempt,\n+      long registeredTime) {\n     TimelineEntity entity \u003d\n-        createAppAttemptEntity(event.getApplicationAttemptId());\n+        createAppAttemptEntity(appAttempt.getAppAttemptId());\n+    entity.setCreatedTime(registeredTime);\n+\n     TimelineEvent tEvent \u003d new TimelineEvent();\n     tEvent.setId(AppAttemptMetricsConstants.REGISTERED_EVENT_TYPE);\n-    tEvent.setTimestamp(event.getTimestamp());\n+    tEvent.setTimestamp(registeredTime);\n     Map\u003cString, Object\u003e eventInfo \u003d new HashMap\u003cString, Object\u003e();\n-    eventInfo.put(\n-        AppAttemptMetricsConstants.TRACKING_URL_EVENT_INFO,\n-        event.getTrackingUrl());\n-    eventInfo.put(\n-        AppAttemptMetricsConstants.ORIGINAL_TRACKING_URL_EVENT_INFO,\n-        event.getOriginalTrackingURL());\n+    eventInfo.put(AppAttemptMetricsConstants.TRACKING_URL_EVENT_INFO,\n+        appAttempt.getTrackingUrl());\n+    eventInfo.put(AppAttemptMetricsConstants.ORIGINAL_TRACKING_URL_EVENT_INFO,\n+        appAttempt.getOriginalTrackingUrl());\n     eventInfo.put(AppAttemptMetricsConstants.HOST_EVENT_INFO,\n-        event.getHost());\n+        appAttempt.getHost());\n     eventInfo.put(AppAttemptMetricsConstants.RPC_PORT_EVENT_INFO,\n-        event.getRpcPort());\n-    if (event.getMasterContainerId() !\u003d null) {\n-      eventInfo.put(AppAttemptMetricsConstants.MASTER_CONTAINER_EVENT_INFO,\n-          event.getMasterContainerId().toString());\n-    }\n+        appAttempt.getRpcPort());\n+    eventInfo.put(AppAttemptMetricsConstants.MASTER_CONTAINER_EVENT_INFO,\n+        appAttempt.getMasterContainer().getId().toString());\n     tEvent.setInfo(eventInfo);\n     entity.addEvent(tEvent);\n-    putEntity(entity, event.getApplicationAttemptId().getApplicationId());\n+    getDispatcher().getEventHandler().handle(\n+        new TimelineV2PublishEvent(SystemMetricsEventType.PUBLISH_ENTITY,\n+            entity, appAttempt.getAppAttemptId().getApplicationId()));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void appAttemptRegistered(RMAppAttempt appAttempt,\n      long registeredTime) {\n    TimelineEntity entity \u003d\n        createAppAttemptEntity(appAttempt.getAppAttemptId());\n    entity.setCreatedTime(registeredTime);\n\n    TimelineEvent tEvent \u003d new TimelineEvent();\n    tEvent.setId(AppAttemptMetricsConstants.REGISTERED_EVENT_TYPE);\n    tEvent.setTimestamp(registeredTime);\n    Map\u003cString, Object\u003e eventInfo \u003d new HashMap\u003cString, Object\u003e();\n    eventInfo.put(AppAttemptMetricsConstants.TRACKING_URL_EVENT_INFO,\n        appAttempt.getTrackingUrl());\n    eventInfo.put(AppAttemptMetricsConstants.ORIGINAL_TRACKING_URL_EVENT_INFO,\n        appAttempt.getOriginalTrackingUrl());\n    eventInfo.put(AppAttemptMetricsConstants.HOST_EVENT_INFO,\n        appAttempt.getHost());\n    eventInfo.put(AppAttemptMetricsConstants.RPC_PORT_EVENT_INFO,\n        appAttempt.getRpcPort());\n    eventInfo.put(AppAttemptMetricsConstants.MASTER_CONTAINER_EVENT_INFO,\n        appAttempt.getMasterContainer().getId().toString());\n    tEvent.setInfo(eventInfo);\n    entity.addEvent(tEvent);\n    getDispatcher().getEventHandler().handle(\n        new TimelineV2PublishEvent(SystemMetricsEventType.PUBLISH_ENTITY,\n            entity, appAttempt.getAppAttemptId().getApplicationId()));\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/metrics/TimelineServiceV2Publisher.java",
          "extendedDetails": {
            "oldValue": "[event-AppAttemptRegisteredEvent]",
            "newValue": "[appAttempt-RMAppAttempt, registeredTime-long]"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-4129. Refactor the SystemMetricPublisher in RM to better support newer events (Naganarasimha G R via sjlee)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "10ec5586fba20d80dd91d8d0ddb442c66d39a0d4",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "8d9476ec5f64795e2bdd60bea4d643eaafed2c50",
          "commitAuthorOld": "Sangjin Lee",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 11,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,26 @@\n-  void publishAppAttemptRegisteredEvent(AppAttemptRegisteredEvent event) {\n+  public void appAttemptRegistered(RMAppAttempt appAttempt,\n+      long registeredTime) {\n     TimelineEntity entity \u003d\n-        createAppAttemptEntity(event.getApplicationAttemptId());\n+        createAppAttemptEntity(appAttempt.getAppAttemptId());\n+    entity.setCreatedTime(registeredTime);\n+\n     TimelineEvent tEvent \u003d new TimelineEvent();\n     tEvent.setId(AppAttemptMetricsConstants.REGISTERED_EVENT_TYPE);\n-    tEvent.setTimestamp(event.getTimestamp());\n+    tEvent.setTimestamp(registeredTime);\n     Map\u003cString, Object\u003e eventInfo \u003d new HashMap\u003cString, Object\u003e();\n-    eventInfo.put(\n-        AppAttemptMetricsConstants.TRACKING_URL_EVENT_INFO,\n-        event.getTrackingUrl());\n-    eventInfo.put(\n-        AppAttemptMetricsConstants.ORIGINAL_TRACKING_URL_EVENT_INFO,\n-        event.getOriginalTrackingURL());\n+    eventInfo.put(AppAttemptMetricsConstants.TRACKING_URL_EVENT_INFO,\n+        appAttempt.getTrackingUrl());\n+    eventInfo.put(AppAttemptMetricsConstants.ORIGINAL_TRACKING_URL_EVENT_INFO,\n+        appAttempt.getOriginalTrackingUrl());\n     eventInfo.put(AppAttemptMetricsConstants.HOST_EVENT_INFO,\n-        event.getHost());\n+        appAttempt.getHost());\n     eventInfo.put(AppAttemptMetricsConstants.RPC_PORT_EVENT_INFO,\n-        event.getRpcPort());\n-    if (event.getMasterContainerId() !\u003d null) {\n-      eventInfo.put(AppAttemptMetricsConstants.MASTER_CONTAINER_EVENT_INFO,\n-          event.getMasterContainerId().toString());\n-    }\n+        appAttempt.getRpcPort());\n+    eventInfo.put(AppAttemptMetricsConstants.MASTER_CONTAINER_EVENT_INFO,\n+        appAttempt.getMasterContainer().getId().toString());\n     tEvent.setInfo(eventInfo);\n     entity.addEvent(tEvent);\n-    putEntity(entity, event.getApplicationAttemptId().getApplicationId());\n+    getDispatcher().getEventHandler().handle(\n+        new TimelineV2PublishEvent(SystemMetricsEventType.PUBLISH_ENTITY,\n+            entity, appAttempt.getAppAttemptId().getApplicationId()));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void appAttemptRegistered(RMAppAttempt appAttempt,\n      long registeredTime) {\n    TimelineEntity entity \u003d\n        createAppAttemptEntity(appAttempt.getAppAttemptId());\n    entity.setCreatedTime(registeredTime);\n\n    TimelineEvent tEvent \u003d new TimelineEvent();\n    tEvent.setId(AppAttemptMetricsConstants.REGISTERED_EVENT_TYPE);\n    tEvent.setTimestamp(registeredTime);\n    Map\u003cString, Object\u003e eventInfo \u003d new HashMap\u003cString, Object\u003e();\n    eventInfo.put(AppAttemptMetricsConstants.TRACKING_URL_EVENT_INFO,\n        appAttempt.getTrackingUrl());\n    eventInfo.put(AppAttemptMetricsConstants.ORIGINAL_TRACKING_URL_EVENT_INFO,\n        appAttempt.getOriginalTrackingUrl());\n    eventInfo.put(AppAttemptMetricsConstants.HOST_EVENT_INFO,\n        appAttempt.getHost());\n    eventInfo.put(AppAttemptMetricsConstants.RPC_PORT_EVENT_INFO,\n        appAttempt.getRpcPort());\n    eventInfo.put(AppAttemptMetricsConstants.MASTER_CONTAINER_EVENT_INFO,\n        appAttempt.getMasterContainer().getId().toString());\n    tEvent.setInfo(eventInfo);\n    entity.addEvent(tEvent);\n    getDispatcher().getEventHandler().handle(\n        new TimelineV2PublishEvent(SystemMetricsEventType.PUBLISH_ENTITY,\n            entity, appAttempt.getAppAttemptId().getApplicationId()));\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/metrics/TimelineServiceV2Publisher.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4129. Refactor the SystemMetricPublisher in RM to better support newer events (Naganarasimha G R via sjlee)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "10ec5586fba20d80dd91d8d0ddb442c66d39a0d4",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "8d9476ec5f64795e2bdd60bea4d643eaafed2c50",
          "commitAuthorOld": "Sangjin Lee",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 11,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,26 @@\n-  void publishAppAttemptRegisteredEvent(AppAttemptRegisteredEvent event) {\n+  public void appAttemptRegistered(RMAppAttempt appAttempt,\n+      long registeredTime) {\n     TimelineEntity entity \u003d\n-        createAppAttemptEntity(event.getApplicationAttemptId());\n+        createAppAttemptEntity(appAttempt.getAppAttemptId());\n+    entity.setCreatedTime(registeredTime);\n+\n     TimelineEvent tEvent \u003d new TimelineEvent();\n     tEvent.setId(AppAttemptMetricsConstants.REGISTERED_EVENT_TYPE);\n-    tEvent.setTimestamp(event.getTimestamp());\n+    tEvent.setTimestamp(registeredTime);\n     Map\u003cString, Object\u003e eventInfo \u003d new HashMap\u003cString, Object\u003e();\n-    eventInfo.put(\n-        AppAttemptMetricsConstants.TRACKING_URL_EVENT_INFO,\n-        event.getTrackingUrl());\n-    eventInfo.put(\n-        AppAttemptMetricsConstants.ORIGINAL_TRACKING_URL_EVENT_INFO,\n-        event.getOriginalTrackingURL());\n+    eventInfo.put(AppAttemptMetricsConstants.TRACKING_URL_EVENT_INFO,\n+        appAttempt.getTrackingUrl());\n+    eventInfo.put(AppAttemptMetricsConstants.ORIGINAL_TRACKING_URL_EVENT_INFO,\n+        appAttempt.getOriginalTrackingUrl());\n     eventInfo.put(AppAttemptMetricsConstants.HOST_EVENT_INFO,\n-        event.getHost());\n+        appAttempt.getHost());\n     eventInfo.put(AppAttemptMetricsConstants.RPC_PORT_EVENT_INFO,\n-        event.getRpcPort());\n-    if (event.getMasterContainerId() !\u003d null) {\n-      eventInfo.put(AppAttemptMetricsConstants.MASTER_CONTAINER_EVENT_INFO,\n-          event.getMasterContainerId().toString());\n-    }\n+        appAttempt.getRpcPort());\n+    eventInfo.put(AppAttemptMetricsConstants.MASTER_CONTAINER_EVENT_INFO,\n+        appAttempt.getMasterContainer().getId().toString());\n     tEvent.setInfo(eventInfo);\n     entity.addEvent(tEvent);\n-    putEntity(entity, event.getApplicationAttemptId().getApplicationId());\n+    getDispatcher().getEventHandler().handle(\n+        new TimelineV2PublishEvent(SystemMetricsEventType.PUBLISH_ENTITY,\n+            entity, appAttempt.getAppAttemptId().getApplicationId()));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void appAttemptRegistered(RMAppAttempt appAttempt,\n      long registeredTime) {\n    TimelineEntity entity \u003d\n        createAppAttemptEntity(appAttempt.getAppAttemptId());\n    entity.setCreatedTime(registeredTime);\n\n    TimelineEvent tEvent \u003d new TimelineEvent();\n    tEvent.setId(AppAttemptMetricsConstants.REGISTERED_EVENT_TYPE);\n    tEvent.setTimestamp(registeredTime);\n    Map\u003cString, Object\u003e eventInfo \u003d new HashMap\u003cString, Object\u003e();\n    eventInfo.put(AppAttemptMetricsConstants.TRACKING_URL_EVENT_INFO,\n        appAttempt.getTrackingUrl());\n    eventInfo.put(AppAttemptMetricsConstants.ORIGINAL_TRACKING_URL_EVENT_INFO,\n        appAttempt.getOriginalTrackingUrl());\n    eventInfo.put(AppAttemptMetricsConstants.HOST_EVENT_INFO,\n        appAttempt.getHost());\n    eventInfo.put(AppAttemptMetricsConstants.RPC_PORT_EVENT_INFO,\n        appAttempt.getRpcPort());\n    eventInfo.put(AppAttemptMetricsConstants.MASTER_CONTAINER_EVENT_INFO,\n        appAttempt.getMasterContainer().getId().toString());\n    tEvent.setInfo(eventInfo);\n    entity.addEvent(tEvent);\n    getDispatcher().getEventHandler().handle(\n        new TimelineV2PublishEvent(SystemMetricsEventType.PUBLISH_ENTITY,\n            entity, appAttempt.getAppAttemptId().getApplicationId()));\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/metrics/TimelineServiceV2Publisher.java",
          "extendedDetails": {}
        }
      ]
    },
    "f3c661e8dddc80726f1084ff27815d179540889c": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-3044. Made RM write app, attempt and optional container lifecycle events to timeline service v2. Contributed by Naganarasimha G R.\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "f3c661e8dddc80726f1084ff27815d179540889c",
      "commitAuthor": "Zhijie Shen",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-3044. Made RM write app, attempt and optional container lifecycle events to timeline service v2. Contributed by Naganarasimha G R.\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "f3c661e8dddc80726f1084ff27815d179540889c",
          "commitAuthor": "Zhijie Shen",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "42d7864b84e42fafb529f9920c6633ff59c55217",
          "commitAuthorOld": "Zhijie Shen",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,25 @@\n-      publishAppAttemptRegisteredEvent(AppAttemptRegisteredEvent event) {\n+  void publishAppAttemptRegisteredEvent(AppAttemptRegisteredEvent event) {\n     TimelineEntity entity \u003d\n         createAppAttemptEntity(event.getApplicationAttemptId());\n     TimelineEvent tEvent \u003d new TimelineEvent();\n-    tEvent.setEventType(\n-        AppAttemptMetricsConstants.REGISTERED_EVENT_TYPE);\n+    tEvent.setId(AppAttemptMetricsConstants.REGISTERED_EVENT_TYPE);\n     tEvent.setTimestamp(event.getTimestamp());\n     Map\u003cString, Object\u003e eventInfo \u003d new HashMap\u003cString, Object\u003e();\n     eventInfo.put(\n         AppAttemptMetricsConstants.TRACKING_URL_EVENT_INFO,\n         event.getTrackingUrl());\n     eventInfo.put(\n         AppAttemptMetricsConstants.ORIGINAL_TRACKING_URL_EVENT_INFO,\n         event.getOriginalTrackingURL());\n     eventInfo.put(AppAttemptMetricsConstants.HOST_EVENT_INFO,\n         event.getHost());\n     eventInfo.put(AppAttemptMetricsConstants.RPC_PORT_EVENT_INFO,\n         event.getRpcPort());\n     if (event.getMasterContainerId() !\u003d null) {\n       eventInfo.put(AppAttemptMetricsConstants.MASTER_CONTAINER_EVENT_INFO,\n           event.getMasterContainerId().toString());\n     }\n-    tEvent.setEventInfo(eventInfo);\n+    tEvent.setInfo(eventInfo);\n     entity.addEvent(tEvent);\n-    putEntity(entity);\n+    putEntity(entity, event.getApplicationAttemptId().getApplicationId());\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void publishAppAttemptRegisteredEvent(AppAttemptRegisteredEvent event) {\n    TimelineEntity entity \u003d\n        createAppAttemptEntity(event.getApplicationAttemptId());\n    TimelineEvent tEvent \u003d new TimelineEvent();\n    tEvent.setId(AppAttemptMetricsConstants.REGISTERED_EVENT_TYPE);\n    tEvent.setTimestamp(event.getTimestamp());\n    Map\u003cString, Object\u003e eventInfo \u003d new HashMap\u003cString, Object\u003e();\n    eventInfo.put(\n        AppAttemptMetricsConstants.TRACKING_URL_EVENT_INFO,\n        event.getTrackingUrl());\n    eventInfo.put(\n        AppAttemptMetricsConstants.ORIGINAL_TRACKING_URL_EVENT_INFO,\n        event.getOriginalTrackingURL());\n    eventInfo.put(AppAttemptMetricsConstants.HOST_EVENT_INFO,\n        event.getHost());\n    eventInfo.put(AppAttemptMetricsConstants.RPC_PORT_EVENT_INFO,\n        event.getRpcPort());\n    if (event.getMasterContainerId() !\u003d null) {\n      eventInfo.put(AppAttemptMetricsConstants.MASTER_CONTAINER_EVENT_INFO,\n          event.getMasterContainerId().toString());\n    }\n    tEvent.setInfo(eventInfo);\n    entity.addEvent(tEvent);\n    putEntity(entity, event.getApplicationAttemptId().getApplicationId());\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/metrics/TimelineServiceV2Publisher.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/metrics/SystemMetricsPublisher.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/metrics/TimelineServiceV2Publisher.java",
            "oldMethodName": "publishAppAttemptRegisteredEvent",
            "newMethodName": "publishAppAttemptRegisteredEvent"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-3044. Made RM write app, attempt and optional container lifecycle events to timeline service v2. Contributed by Naganarasimha G R.\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "f3c661e8dddc80726f1084ff27815d179540889c",
          "commitAuthor": "Zhijie Shen",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "42d7864b84e42fafb529f9920c6633ff59c55217",
          "commitAuthorOld": "Zhijie Shen",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,25 @@\n-      publishAppAttemptRegisteredEvent(AppAttemptRegisteredEvent event) {\n+  void publishAppAttemptRegisteredEvent(AppAttemptRegisteredEvent event) {\n     TimelineEntity entity \u003d\n         createAppAttemptEntity(event.getApplicationAttemptId());\n     TimelineEvent tEvent \u003d new TimelineEvent();\n-    tEvent.setEventType(\n-        AppAttemptMetricsConstants.REGISTERED_EVENT_TYPE);\n+    tEvent.setId(AppAttemptMetricsConstants.REGISTERED_EVENT_TYPE);\n     tEvent.setTimestamp(event.getTimestamp());\n     Map\u003cString, Object\u003e eventInfo \u003d new HashMap\u003cString, Object\u003e();\n     eventInfo.put(\n         AppAttemptMetricsConstants.TRACKING_URL_EVENT_INFO,\n         event.getTrackingUrl());\n     eventInfo.put(\n         AppAttemptMetricsConstants.ORIGINAL_TRACKING_URL_EVENT_INFO,\n         event.getOriginalTrackingURL());\n     eventInfo.put(AppAttemptMetricsConstants.HOST_EVENT_INFO,\n         event.getHost());\n     eventInfo.put(AppAttemptMetricsConstants.RPC_PORT_EVENT_INFO,\n         event.getRpcPort());\n     if (event.getMasterContainerId() !\u003d null) {\n       eventInfo.put(AppAttemptMetricsConstants.MASTER_CONTAINER_EVENT_INFO,\n           event.getMasterContainerId().toString());\n     }\n-    tEvent.setEventInfo(eventInfo);\n+    tEvent.setInfo(eventInfo);\n     entity.addEvent(tEvent);\n-    putEntity(entity);\n+    putEntity(entity, event.getApplicationAttemptId().getApplicationId());\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void publishAppAttemptRegisteredEvent(AppAttemptRegisteredEvent event) {\n    TimelineEntity entity \u003d\n        createAppAttemptEntity(event.getApplicationAttemptId());\n    TimelineEvent tEvent \u003d new TimelineEvent();\n    tEvent.setId(AppAttemptMetricsConstants.REGISTERED_EVENT_TYPE);\n    tEvent.setTimestamp(event.getTimestamp());\n    Map\u003cString, Object\u003e eventInfo \u003d new HashMap\u003cString, Object\u003e();\n    eventInfo.put(\n        AppAttemptMetricsConstants.TRACKING_URL_EVENT_INFO,\n        event.getTrackingUrl());\n    eventInfo.put(\n        AppAttemptMetricsConstants.ORIGINAL_TRACKING_URL_EVENT_INFO,\n        event.getOriginalTrackingURL());\n    eventInfo.put(AppAttemptMetricsConstants.HOST_EVENT_INFO,\n        event.getHost());\n    eventInfo.put(AppAttemptMetricsConstants.RPC_PORT_EVENT_INFO,\n        event.getRpcPort());\n    if (event.getMasterContainerId() !\u003d null) {\n      eventInfo.put(AppAttemptMetricsConstants.MASTER_CONTAINER_EVENT_INFO,\n          event.getMasterContainerId().toString());\n    }\n    tEvent.setInfo(eventInfo);\n    entity.addEvent(tEvent);\n    putEntity(entity, event.getApplicationAttemptId().getApplicationId());\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/metrics/TimelineServiceV2Publisher.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3044. Made RM write app, attempt and optional container lifecycle events to timeline service v2. Contributed by Naganarasimha G R.\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "f3c661e8dddc80726f1084ff27815d179540889c",
          "commitAuthor": "Zhijie Shen",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "42d7864b84e42fafb529f9920c6633ff59c55217",
          "commitAuthorOld": "Zhijie Shen",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,25 @@\n-      publishAppAttemptRegisteredEvent(AppAttemptRegisteredEvent event) {\n+  void publishAppAttemptRegisteredEvent(AppAttemptRegisteredEvent event) {\n     TimelineEntity entity \u003d\n         createAppAttemptEntity(event.getApplicationAttemptId());\n     TimelineEvent tEvent \u003d new TimelineEvent();\n-    tEvent.setEventType(\n-        AppAttemptMetricsConstants.REGISTERED_EVENT_TYPE);\n+    tEvent.setId(AppAttemptMetricsConstants.REGISTERED_EVENT_TYPE);\n     tEvent.setTimestamp(event.getTimestamp());\n     Map\u003cString, Object\u003e eventInfo \u003d new HashMap\u003cString, Object\u003e();\n     eventInfo.put(\n         AppAttemptMetricsConstants.TRACKING_URL_EVENT_INFO,\n         event.getTrackingUrl());\n     eventInfo.put(\n         AppAttemptMetricsConstants.ORIGINAL_TRACKING_URL_EVENT_INFO,\n         event.getOriginalTrackingURL());\n     eventInfo.put(AppAttemptMetricsConstants.HOST_EVENT_INFO,\n         event.getHost());\n     eventInfo.put(AppAttemptMetricsConstants.RPC_PORT_EVENT_INFO,\n         event.getRpcPort());\n     if (event.getMasterContainerId() !\u003d null) {\n       eventInfo.put(AppAttemptMetricsConstants.MASTER_CONTAINER_EVENT_INFO,\n           event.getMasterContainerId().toString());\n     }\n-    tEvent.setEventInfo(eventInfo);\n+    tEvent.setInfo(eventInfo);\n     entity.addEvent(tEvent);\n-    putEntity(entity);\n+    putEntity(entity, event.getApplicationAttemptId().getApplicationId());\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void publishAppAttemptRegisteredEvent(AppAttemptRegisteredEvent event) {\n    TimelineEntity entity \u003d\n        createAppAttemptEntity(event.getApplicationAttemptId());\n    TimelineEvent tEvent \u003d new TimelineEvent();\n    tEvent.setId(AppAttemptMetricsConstants.REGISTERED_EVENT_TYPE);\n    tEvent.setTimestamp(event.getTimestamp());\n    Map\u003cString, Object\u003e eventInfo \u003d new HashMap\u003cString, Object\u003e();\n    eventInfo.put(\n        AppAttemptMetricsConstants.TRACKING_URL_EVENT_INFO,\n        event.getTrackingUrl());\n    eventInfo.put(\n        AppAttemptMetricsConstants.ORIGINAL_TRACKING_URL_EVENT_INFO,\n        event.getOriginalTrackingURL());\n    eventInfo.put(AppAttemptMetricsConstants.HOST_EVENT_INFO,\n        event.getHost());\n    eventInfo.put(AppAttemptMetricsConstants.RPC_PORT_EVENT_INFO,\n        event.getRpcPort());\n    if (event.getMasterContainerId() !\u003d null) {\n      eventInfo.put(AppAttemptMetricsConstants.MASTER_CONTAINER_EVENT_INFO,\n          event.getMasterContainerId().toString());\n    }\n    tEvent.setInfo(eventInfo);\n    entity.addEvent(tEvent);\n    putEntity(entity, event.getApplicationAttemptId().getApplicationId());\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/metrics/TimelineServiceV2Publisher.java",
          "extendedDetails": {}
        }
      ]
    },
    "50bd067e1d63d4c80dc1e7bf4024bfaf42cf4416": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4452. NPE when submit Unmanaged application. Contributed by Naganarasimha G R.\n",
      "commitDate": "16/12/15 10:57 AM",
      "commitName": "50bd067e1d63d4c80dc1e7bf4024bfaf42cf4416",
      "commitAuthor": "Junping Du",
      "commitDateOld": "07/12/15 1:04 PM",
      "commitNameOld": "4ff973f96ae7f77cda3b52b38427e2991819ad31",
      "commitAuthorOld": "Jonathan Eagles",
      "daysBetweenCommits": 8.91,
      "commitsBetweenForRepo": 51,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,26 @@\n       publishAppAttemptRegisteredEvent(AppAttemptRegisteredEvent event) {\n     TimelineEntity entity \u003d\n         createAppAttemptEntity(event.getApplicationAttemptId());\n     TimelineEvent tEvent \u003d new TimelineEvent();\n     tEvent.setEventType(\n         AppAttemptMetricsConstants.REGISTERED_EVENT_TYPE);\n     tEvent.setTimestamp(event.getTimestamp());\n     Map\u003cString, Object\u003e eventInfo \u003d new HashMap\u003cString, Object\u003e();\n     eventInfo.put(\n         AppAttemptMetricsConstants.TRACKING_URL_EVENT_INFO,\n         event.getTrackingUrl());\n     eventInfo.put(\n         AppAttemptMetricsConstants.ORIGINAL_TRACKING_URL_EVENT_INFO,\n         event.getOriginalTrackingURL());\n     eventInfo.put(AppAttemptMetricsConstants.HOST_EVENT_INFO,\n         event.getHost());\n     eventInfo.put(AppAttemptMetricsConstants.RPC_PORT_EVENT_INFO,\n         event.getRpcPort());\n-    eventInfo.put(\n-        AppAttemptMetricsConstants.MASTER_CONTAINER_EVENT_INFO,\n-        event.getMasterContainerId().toString());\n+    if (event.getMasterContainerId() !\u003d null) {\n+      eventInfo.put(AppAttemptMetricsConstants.MASTER_CONTAINER_EVENT_INFO,\n+          event.getMasterContainerId().toString());\n+    }\n     tEvent.setEventInfo(eventInfo);\n     entity.addEvent(tEvent);\n     putEntity(entity);\n   }\n\\ No newline at end of file\n",
      "actualSource": "      publishAppAttemptRegisteredEvent(AppAttemptRegisteredEvent event) {\n    TimelineEntity entity \u003d\n        createAppAttemptEntity(event.getApplicationAttemptId());\n    TimelineEvent tEvent \u003d new TimelineEvent();\n    tEvent.setEventType(\n        AppAttemptMetricsConstants.REGISTERED_EVENT_TYPE);\n    tEvent.setTimestamp(event.getTimestamp());\n    Map\u003cString, Object\u003e eventInfo \u003d new HashMap\u003cString, Object\u003e();\n    eventInfo.put(\n        AppAttemptMetricsConstants.TRACKING_URL_EVENT_INFO,\n        event.getTrackingUrl());\n    eventInfo.put(\n        AppAttemptMetricsConstants.ORIGINAL_TRACKING_URL_EVENT_INFO,\n        event.getOriginalTrackingURL());\n    eventInfo.put(AppAttemptMetricsConstants.HOST_EVENT_INFO,\n        event.getHost());\n    eventInfo.put(AppAttemptMetricsConstants.RPC_PORT_EVENT_INFO,\n        event.getRpcPort());\n    if (event.getMasterContainerId() !\u003d null) {\n      eventInfo.put(AppAttemptMetricsConstants.MASTER_CONTAINER_EVENT_INFO,\n          event.getMasterContainerId().toString());\n    }\n    tEvent.setEventInfo(eventInfo);\n    entity.addEvent(tEvent);\n    putEntity(entity);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/metrics/SystemMetricsPublisher.java",
      "extendedDetails": {}
    },
    "6b8b1608e64e300e4e1d23c60476febaca29ca38": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2033. Merging generic-history into the Timeline Store (Contributed by Zhijie Shen)\n",
      "commitDate": "11/09/14 7:04 PM",
      "commitName": "6b8b1608e64e300e4e1d23c60476febaca29ca38",
      "commitAuthor": "junping_du",
      "diff": "@@ -0,0 +1,25 @@\n+      publishAppAttemptRegisteredEvent(AppAttemptRegisteredEvent event) {\n+    TimelineEntity entity \u003d\n+        createAppAttemptEntity(event.getApplicationAttemptId());\n+    TimelineEvent tEvent \u003d new TimelineEvent();\n+    tEvent.setEventType(\n+        AppAttemptMetricsConstants.REGISTERED_EVENT_TYPE);\n+    tEvent.setTimestamp(event.getTimestamp());\n+    Map\u003cString, Object\u003e eventInfo \u003d new HashMap\u003cString, Object\u003e();\n+    eventInfo.put(\n+        AppAttemptMetricsConstants.TRACKING_URL_EVENT_INFO,\n+        event.getTrackingUrl());\n+    eventInfo.put(\n+        AppAttemptMetricsConstants.ORIGINAL_TRACKING_URL_EVENT_INFO,\n+        event.getOriginalTrackingURL());\n+    eventInfo.put(AppAttemptMetricsConstants.HOST_EVENT_INFO,\n+        event.getHost());\n+    eventInfo.put(AppAttemptMetricsConstants.RPC_PORT_EVENT_INFO,\n+        event.getRpcPort());\n+    eventInfo.put(\n+        AppAttemptMetricsConstants.MASTER_CONTAINER_EVENT_INFO,\n+        event.getMasterContainerId().toString());\n+    tEvent.setEventInfo(eventInfo);\n+    entity.addEvent(tEvent);\n+    putEntity(entity);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "      publishAppAttemptRegisteredEvent(AppAttemptRegisteredEvent event) {\n    TimelineEntity entity \u003d\n        createAppAttemptEntity(event.getApplicationAttemptId());\n    TimelineEvent tEvent \u003d new TimelineEvent();\n    tEvent.setEventType(\n        AppAttemptMetricsConstants.REGISTERED_EVENT_TYPE);\n    tEvent.setTimestamp(event.getTimestamp());\n    Map\u003cString, Object\u003e eventInfo \u003d new HashMap\u003cString, Object\u003e();\n    eventInfo.put(\n        AppAttemptMetricsConstants.TRACKING_URL_EVENT_INFO,\n        event.getTrackingUrl());\n    eventInfo.put(\n        AppAttemptMetricsConstants.ORIGINAL_TRACKING_URL_EVENT_INFO,\n        event.getOriginalTrackingURL());\n    eventInfo.put(AppAttemptMetricsConstants.HOST_EVENT_INFO,\n        event.getHost());\n    eventInfo.put(AppAttemptMetricsConstants.RPC_PORT_EVENT_INFO,\n        event.getRpcPort());\n    eventInfo.put(\n        AppAttemptMetricsConstants.MASTER_CONTAINER_EVENT_INFO,\n        event.getMasterContainerId().toString());\n    tEvent.setEventInfo(eventInfo);\n    entity.addEvent(tEvent);\n    putEntity(entity);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/metrics/SystemMetricsPublisher.java"
    }
  }
}