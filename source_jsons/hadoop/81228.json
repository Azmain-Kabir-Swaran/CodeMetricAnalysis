{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NetworkTopology.java",
  "functionName": "getDatanodesInRack",
  "functionId": "getDatanodesInRack___loc-String",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/NetworkTopology.java",
  "functionStartLine": 191,
  "functionEndLine": 206,
  "numCommitsSeen": 49,
  "timeTaken": 1912,
  "changeHistory": [
    "5d2ffde68e2c14ee33fa2ba4a34cb42fbd14b5ec"
  ],
  "changeHistoryShort": {
    "5d2ffde68e2c14ee33fa2ba4a34cb42fbd14b5ec": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5d2ffde68e2c14ee33fa2ba4a34cb42fbd14b5ec": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-2576. Enhances the DistributedFileSystem\u0027s create API so that clients can specify favored datanodes for a file\u0027s blocks. Contributed by Devaraj Das and Pritam Damania.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1476395 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "26/04/13 1:39 PM",
      "commitName": "5d2ffde68e2c14ee33fa2ba4a34cb42fbd14b5ec",
      "commitAuthor": "Devaraj Das",
      "diff": "@@ -0,0 +1,16 @@\n+  public List\u003cNode\u003e getDatanodesInRack(String loc) {\n+    netlock.readLock().lock();\n+    try {\n+      loc \u003d NodeBase.normalize(loc);\n+      if (!NodeBase.ROOT.equals(loc)) {\n+        loc \u003d loc.substring(1);\n+      }\n+      InnerNode rack \u003d (InnerNode) clusterMap.getLoc(loc);\n+      if (rack \u003d\u003d null) {\n+        return null;\n+      }\n+      return new ArrayList\u003cNode\u003e(rack.getChildren());\n+    } finally {\n+      netlock.readLock().unlock();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public List\u003cNode\u003e getDatanodesInRack(String loc) {\n    netlock.readLock().lock();\n    try {\n      loc \u003d NodeBase.normalize(loc);\n      if (!NodeBase.ROOT.equals(loc)) {\n        loc \u003d loc.substring(1);\n      }\n      InnerNode rack \u003d (InnerNode) clusterMap.getLoc(loc);\n      if (rack \u003d\u003d null) {\n        return null;\n      }\n      return new ArrayList\u003cNode\u003e(rack.getChildren());\n    } finally {\n      netlock.readLock().unlock();\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/net/NetworkTopology.java"
    }
  }
}