{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ZombieJob.java",
  "functionName": "getLocality",
  "functionId": "getLocality___loggedTask-LoggedTask__loggedAttempt-LoggedTaskAttempt",
  "sourceFilePath": "hadoop-tools/hadoop-rumen/src/main/java/org/apache/hadoop/tools/rumen/ZombieJob.java",
  "functionStartLine": 552,
  "functionEndLine": 577,
  "numCommitsSeen": 10,
  "timeTaken": 4504,
  "changeHistory": [
    "10325d97329c214bb3899c8535df5a366bc86d2f",
    "a238f931ea7dce0ca620d1798156c84ff77097ff",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "10325d97329c214bb3899c8535df5a366bc86d2f": "Yfilerename",
    "a238f931ea7dce0ca620d1798156c84ff77097ff": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "10325d97329c214bb3899c8535df5a366bc86d2f": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-3582. Move successfully passing MR1 tests to MR2 maven tree.(ahmed via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1233090 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/01/12 2:10 PM",
      "commitName": "10325d97329c214bb3899c8535df5a366bc86d2f",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "18/01/12 10:20 AM",
      "commitNameOld": "8b2f6909ec7df5cffb5ef417f5c9cffdee43e38a",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.16,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private int getLocality(LoggedTask loggedTask, LoggedTaskAttempt loggedAttempt) {\n    int distance \u003d cluster.getMaximumDistance();\n    String rackHostName \u003d loggedAttempt.getHostName().getValue();\n    if (rackHostName \u003d\u003d null) {\n      return distance;\n    }\n    MachineNode mn \u003d getMachineNode(rackHostName);\n    if (mn \u003d\u003d null) {\n      return distance;\n    }\n    List\u003cLoggedLocation\u003e locations \u003d loggedTask.getPreferredLocations();\n    if (locations !\u003d null) {\n      for (LoggedLocation location : locations) {\n        List\u003cNodeName\u003e layers \u003d location.getLayers();\n        if ((layers \u003d\u003d null) || (layers.isEmpty())) {\n          continue;\n        }\n        String dataNodeName \u003d layers.get(layers.size()-1).getValue();\n        MachineNode dataNode \u003d cluster.getMachineByName(dataNodeName);\n        if (dataNode !\u003d null) {\n          distance \u003d Math.min(distance, cluster.distance(mn, dataNode));\n        }\n      }\n    }\n    return distance;\n  }",
      "path": "hadoop-tools/hadoop-rumen/src/main/java/org/apache/hadoop/tools/rumen/ZombieJob.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/src/tools/org/apache/hadoop/tools/rumen/ZombieJob.java",
        "newPath": "hadoop-tools/hadoop-rumen/src/main/java/org/apache/hadoop/tools/rumen/ZombieJob.java"
      }
    },
    "a238f931ea7dce0ca620d1798156c84ff77097ff": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-778. Rumen Anonymizer. (Amar Kamat and Chris Douglas via amarrk)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1215141 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/12/11 6:20 AM",
      "commitName": "a238f931ea7dce0ca620d1798156c84ff77097ff",
      "commitAuthor": "Amar Kamat",
      "commitDateOld": "24/08/11 5:14 PM",
      "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 113.59,
      "commitsBetweenForRepo": 787,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n   private int getLocality(LoggedTask loggedTask, LoggedTaskAttempt loggedAttempt) {\n     int distance \u003d cluster.getMaximumDistance();\n-    String rackHostName \u003d loggedAttempt.getHostName();\n+    String rackHostName \u003d loggedAttempt.getHostName().getValue();\n     if (rackHostName \u003d\u003d null) {\n       return distance;\n     }\n     MachineNode mn \u003d getMachineNode(rackHostName);\n     if (mn \u003d\u003d null) {\n       return distance;\n     }\n     List\u003cLoggedLocation\u003e locations \u003d loggedTask.getPreferredLocations();\n     if (locations !\u003d null) {\n       for (LoggedLocation location : locations) {\n-        List\u003cString\u003e layers \u003d location.getLayers();\n+        List\u003cNodeName\u003e layers \u003d location.getLayers();\n         if ((layers \u003d\u003d null) || (layers.isEmpty())) {\n           continue;\n         }\n-        String dataNodeName \u003d layers.get(layers.size()-1);\n+        String dataNodeName \u003d layers.get(layers.size()-1).getValue();\n         MachineNode dataNode \u003d cluster.getMachineByName(dataNodeName);\n         if (dataNode !\u003d null) {\n           distance \u003d Math.min(distance, cluster.distance(mn, dataNode));\n         }\n       }\n     }\n     return distance;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private int getLocality(LoggedTask loggedTask, LoggedTaskAttempt loggedAttempt) {\n    int distance \u003d cluster.getMaximumDistance();\n    String rackHostName \u003d loggedAttempt.getHostName().getValue();\n    if (rackHostName \u003d\u003d null) {\n      return distance;\n    }\n    MachineNode mn \u003d getMachineNode(rackHostName);\n    if (mn \u003d\u003d null) {\n      return distance;\n    }\n    List\u003cLoggedLocation\u003e locations \u003d loggedTask.getPreferredLocations();\n    if (locations !\u003d null) {\n      for (LoggedLocation location : locations) {\n        List\u003cNodeName\u003e layers \u003d location.getLayers();\n        if ((layers \u003d\u003d null) || (layers.isEmpty())) {\n          continue;\n        }\n        String dataNodeName \u003d layers.get(layers.size()-1).getValue();\n        MachineNode dataNode \u003d cluster.getMachineByName(dataNodeName);\n        if (dataNode !\u003d null) {\n          distance \u003d Math.min(distance, cluster.distance(mn, dataNode));\n        }\n      }\n    }\n    return distance;\n  }",
      "path": "hadoop-mapreduce-project/src/tools/org/apache/hadoop/tools/rumen/ZombieJob.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private int getLocality(LoggedTask loggedTask, LoggedTaskAttempt loggedAttempt) {\n    int distance \u003d cluster.getMaximumDistance();\n    String rackHostName \u003d loggedAttempt.getHostName();\n    if (rackHostName \u003d\u003d null) {\n      return distance;\n    }\n    MachineNode mn \u003d getMachineNode(rackHostName);\n    if (mn \u003d\u003d null) {\n      return distance;\n    }\n    List\u003cLoggedLocation\u003e locations \u003d loggedTask.getPreferredLocations();\n    if (locations !\u003d null) {\n      for (LoggedLocation location : locations) {\n        List\u003cString\u003e layers \u003d location.getLayers();\n        if ((layers \u003d\u003d null) || (layers.isEmpty())) {\n          continue;\n        }\n        String dataNodeName \u003d layers.get(layers.size()-1);\n        MachineNode dataNode \u003d cluster.getMachineByName(dataNodeName);\n        if (dataNode !\u003d null) {\n          distance \u003d Math.min(distance, cluster.distance(mn, dataNode));\n        }\n      }\n    }\n    return distance;\n  }",
      "path": "hadoop-mapreduce-project/src/tools/org/apache/hadoop/tools/rumen/ZombieJob.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/src/tools/org/apache/hadoop/tools/rumen/ZombieJob.java",
        "newPath": "hadoop-mapreduce-project/src/tools/org/apache/hadoop/tools/rumen/ZombieJob.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private int getLocality(LoggedTask loggedTask, LoggedTaskAttempt loggedAttempt) {\n    int distance \u003d cluster.getMaximumDistance();\n    String rackHostName \u003d loggedAttempt.getHostName();\n    if (rackHostName \u003d\u003d null) {\n      return distance;\n    }\n    MachineNode mn \u003d getMachineNode(rackHostName);\n    if (mn \u003d\u003d null) {\n      return distance;\n    }\n    List\u003cLoggedLocation\u003e locations \u003d loggedTask.getPreferredLocations();\n    if (locations !\u003d null) {\n      for (LoggedLocation location : locations) {\n        List\u003cString\u003e layers \u003d location.getLayers();\n        if ((layers \u003d\u003d null) || (layers.isEmpty())) {\n          continue;\n        }\n        String dataNodeName \u003d layers.get(layers.size()-1);\n        MachineNode dataNode \u003d cluster.getMachineByName(dataNodeName);\n        if (dataNode !\u003d null) {\n          distance \u003d Math.min(distance, cluster.distance(mn, dataNode));\n        }\n      }\n    }\n    return distance;\n  }",
      "path": "hadoop-mapreduce/src/tools/org/apache/hadoop/tools/rumen/ZombieJob.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/tools/org/apache/hadoop/tools/rumen/ZombieJob.java",
        "newPath": "hadoop-mapreduce/src/tools/org/apache/hadoop/tools/rumen/ZombieJob.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,26 @@\n+  private int getLocality(LoggedTask loggedTask, LoggedTaskAttempt loggedAttempt) {\n+    int distance \u003d cluster.getMaximumDistance();\n+    String rackHostName \u003d loggedAttempt.getHostName();\n+    if (rackHostName \u003d\u003d null) {\n+      return distance;\n+    }\n+    MachineNode mn \u003d getMachineNode(rackHostName);\n+    if (mn \u003d\u003d null) {\n+      return distance;\n+    }\n+    List\u003cLoggedLocation\u003e locations \u003d loggedTask.getPreferredLocations();\n+    if (locations !\u003d null) {\n+      for (LoggedLocation location : locations) {\n+        List\u003cString\u003e layers \u003d location.getLayers();\n+        if ((layers \u003d\u003d null) || (layers.isEmpty())) {\n+          continue;\n+        }\n+        String dataNodeName \u003d layers.get(layers.size()-1);\n+        MachineNode dataNode \u003d cluster.getMachineByName(dataNodeName);\n+        if (dataNode !\u003d null) {\n+          distance \u003d Math.min(distance, cluster.distance(mn, dataNode));\n+        }\n+      }\n+    }\n+    return distance;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private int getLocality(LoggedTask loggedTask, LoggedTaskAttempt loggedAttempt) {\n    int distance \u003d cluster.getMaximumDistance();\n    String rackHostName \u003d loggedAttempt.getHostName();\n    if (rackHostName \u003d\u003d null) {\n      return distance;\n    }\n    MachineNode mn \u003d getMachineNode(rackHostName);\n    if (mn \u003d\u003d null) {\n      return distance;\n    }\n    List\u003cLoggedLocation\u003e locations \u003d loggedTask.getPreferredLocations();\n    if (locations !\u003d null) {\n      for (LoggedLocation location : locations) {\n        List\u003cString\u003e layers \u003d location.getLayers();\n        if ((layers \u003d\u003d null) || (layers.isEmpty())) {\n          continue;\n        }\n        String dataNodeName \u003d layers.get(layers.size()-1);\n        MachineNode dataNode \u003d cluster.getMachineByName(dataNodeName);\n        if (dataNode !\u003d null) {\n          distance \u003d Math.min(distance, cluster.distance(mn, dataNode));\n        }\n      }\n    }\n    return distance;\n  }",
      "path": "mapreduce/src/tools/org/apache/hadoop/tools/rumen/ZombieJob.java"
    }
  }
}