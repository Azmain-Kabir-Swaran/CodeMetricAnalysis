{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ClientNamenodeProtocolServerSideTranslatorPB.java",
  "functionName": "getBatchedListing",
  "functionId": "getBatchedListing___controller-RpcController__request-GetBatchedListingRequestProto",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolServerSideTranslatorPB.java",
  "functionStartLine": 767,
  "functionEndLine": 807,
  "numCommitsSeen": 141,
  "timeTaken": 2472,
  "changeHistory": [
    "d7c4f8ab21c56a52afcfbd0a56d9120e61376d0c"
  ],
  "changeHistoryShort": {
    "d7c4f8ab21c56a52afcfbd0a56d9120e61376d0c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d7c4f8ab21c56a52afcfbd0a56d9120e61376d0c": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-13616. Batch listing of multiple directories (#1725)\n\n",
      "commitDate": "15/01/20 5:22 PM",
      "commitName": "d7c4f8ab21c56a52afcfbd0a56d9120e61376d0c",
      "commitAuthor": "Chao Sun",
      "diff": "@@ -0,0 +1,41 @@\n+  public GetBatchedListingResponseProto getBatchedListing(\n+      RpcController controller,\n+      GetBatchedListingRequestProto request) throws ServiceException {\n+    try {\n+      BatchedDirectoryListing result \u003d server.getBatchedListing(\n+          request.getPathsList().toArray(new String[] {}),\n+          request.getStartAfter().toByteArray(),\n+          request.getNeedLocation());\n+      if (result !\u003d null) {\n+        GetBatchedListingResponseProto.Builder builder \u003d\n+            GetBatchedListingResponseProto.newBuilder();\n+        for (HdfsPartialListing partialListing : result.getListings()) {\n+          BatchedDirectoryListingProto.Builder listingBuilder \u003d\n+              BatchedDirectoryListingProto.newBuilder();\n+          if (partialListing.getException() !\u003d null) {\n+            RemoteException ex \u003d partialListing.getException();\n+            RemoteExceptionProto.Builder rexBuilder \u003d\n+                RemoteExceptionProto.newBuilder();\n+            rexBuilder.setClassName(ex.getClassName());\n+            if (ex.getMessage() !\u003d null) {\n+              rexBuilder.setMessage(ex.getMessage());\n+            }\n+            listingBuilder.setException(rexBuilder.build());\n+          } else {\n+            for (HdfsFileStatus f : partialListing.getPartialListing()) {\n+              listingBuilder.addPartialListing(PBHelperClient.convert(f));\n+            }\n+          }\n+          listingBuilder.setParentIdx(partialListing.getParentIdx());\n+          builder.addListings(listingBuilder);\n+        }\n+        builder.setHasMore(result.hasMore());\n+        builder.setStartAfter(ByteString.copyFrom(result.getStartAfter()));\n+        return builder.build();\n+      } else {\n+        return VOID_GETBATCHEDLISTING_RESPONSE;\n+      }\n+    } catch (IOException e) {\n+      throw new ServiceException(e);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public GetBatchedListingResponseProto getBatchedListing(\n      RpcController controller,\n      GetBatchedListingRequestProto request) throws ServiceException {\n    try {\n      BatchedDirectoryListing result \u003d server.getBatchedListing(\n          request.getPathsList().toArray(new String[] {}),\n          request.getStartAfter().toByteArray(),\n          request.getNeedLocation());\n      if (result !\u003d null) {\n        GetBatchedListingResponseProto.Builder builder \u003d\n            GetBatchedListingResponseProto.newBuilder();\n        for (HdfsPartialListing partialListing : result.getListings()) {\n          BatchedDirectoryListingProto.Builder listingBuilder \u003d\n              BatchedDirectoryListingProto.newBuilder();\n          if (partialListing.getException() !\u003d null) {\n            RemoteException ex \u003d partialListing.getException();\n            RemoteExceptionProto.Builder rexBuilder \u003d\n                RemoteExceptionProto.newBuilder();\n            rexBuilder.setClassName(ex.getClassName());\n            if (ex.getMessage() !\u003d null) {\n              rexBuilder.setMessage(ex.getMessage());\n            }\n            listingBuilder.setException(rexBuilder.build());\n          } else {\n            for (HdfsFileStatus f : partialListing.getPartialListing()) {\n              listingBuilder.addPartialListing(PBHelperClient.convert(f));\n            }\n          }\n          listingBuilder.setParentIdx(partialListing.getParentIdx());\n          builder.addListings(listingBuilder);\n        }\n        builder.setHasMore(result.hasMore());\n        builder.setStartAfter(ByteString.copyFrom(result.getStartAfter()));\n        return builder.build();\n      } else {\n        return VOID_GETBATCHEDLISTING_RESPONSE;\n      }\n    } catch (IOException e) {\n      throw new ServiceException(e);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolServerSideTranslatorPB.java"
    }
  }
}