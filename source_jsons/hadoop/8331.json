{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "EditLogBackupOutputStream.java",
  "functionName": "flushAndSync",
  "functionId": "flushAndSync___durable-boolean",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/EditLogBackupOutputStream.java",
  "functionStartLine": 123,
  "functionEndLine": 144,
  "numCommitsSeen": 27,
  "timeTaken": 5107,
  "changeHistory": [
    "7b70a688ac030824a75ddaafab8643c8a184c7b9",
    "ca4582222e89114e4c61d38fbf973a66d2867abf",
    "74b4b45651037fc8d2a97d3b2de51334dcbf759c",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "28e6a4e44a3e920dcaf858f9a74a6358226b3a63",
    "44320eed1732ea59bd9ec83009eb10e0e6f13023",
    "438c32aaf9fb0c63f55044cf5ef1b2e0adcf7fea",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "7b70a688ac030824a75ddaafab8643c8a184c7b9": "Ybodychange",
    "ca4582222e89114e4c61d38fbf973a66d2867abf": "Yparameterchange",
    "74b4b45651037fc8d2a97d3b2de51334dcbf759c": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "28e6a4e44a3e920dcaf858f9a74a6358226b3a63": "Ybodychange",
    "44320eed1732ea59bd9ec83009eb10e0e6f13023": "Ybodychange",
    "438c32aaf9fb0c63f55044cf5ef1b2e0adcf7fea": "Ybodychange",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7b70a688ac030824a75ddaafab8643c8a184c7b9": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4349. Add test for reading files from BackupNode. Contributed by Konstantin Shvachko.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1427290 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/12/12 7:39 PM",
      "commitName": "7b70a688ac030824a75ddaafab8643c8a184c7b9",
      "commitAuthor": "Konstantin Shvachko",
      "commitDateOld": "10/09/12 11:51 AM",
      "commitNameOld": "ca4582222e89114e4c61d38fbf973a66d2867abf",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 112.37,
      "commitsBetweenForRepo": 539,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,22 @@\n   protected void flushAndSync(boolean durable) throws IOException {\n     assert out.getLength() \u003d\u003d 0 : \"Output buffer is not empty\";\n     \n+    if (doubleBuf.isFlushed()) {\n+      LOG.info(\"Nothing to flush\");\n+      return;\n+    }\n+\n     int numReadyTxns \u003d doubleBuf.countReadyTxns();\n     long firstTxToFlush \u003d doubleBuf.getFirstReadyTxId();\n     \n     doubleBuf.flushTo(out);\n     if (out.getLength() \u003e 0) {\n       assert numReadyTxns \u003e 0;\n       \n       byte[] data \u003d Arrays.copyOf(out.getData(), out.getLength());\n       out.reset();\n       assert out.getLength() \u003d\u003d 0 : \"Output buffer is not empty\";\n \n       backupNode.journal(journalInfo, 0, firstTxToFlush, numReadyTxns, data);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void flushAndSync(boolean durable) throws IOException {\n    assert out.getLength() \u003d\u003d 0 : \"Output buffer is not empty\";\n    \n    if (doubleBuf.isFlushed()) {\n      LOG.info(\"Nothing to flush\");\n      return;\n    }\n\n    int numReadyTxns \u003d doubleBuf.countReadyTxns();\n    long firstTxToFlush \u003d doubleBuf.getFirstReadyTxId();\n    \n    doubleBuf.flushTo(out);\n    if (out.getLength() \u003e 0) {\n      assert numReadyTxns \u003e 0;\n      \n      byte[] data \u003d Arrays.copyOf(out.getData(), out.getLength());\n      out.reset();\n      assert out.getLength() \u003d\u003d 0 : \"Output buffer is not empty\";\n\n      backupNode.journal(journalInfo, 0, firstTxToFlush, numReadyTxns, data);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/EditLogBackupOutputStream.java",
      "extendedDetails": {}
    },
    "ca4582222e89114e4c61d38fbf973a66d2867abf": {
      "type": "Yparameterchange",
      "commitMessage": "HDFS-3885. QJM: optimize log sync when JN is lagging behind. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3077@1383039 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/09/12 11:51 AM",
      "commitName": "ca4582222e89114e4c61d38fbf973a66d2867abf",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "06/04/12 5:52 PM",
      "commitNameOld": "74b4b45651037fc8d2a97d3b2de51334dcbf759c",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 156.75,
      "commitsBetweenForRepo": 919,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n-  protected void flushAndSync() throws IOException {\n+  protected void flushAndSync(boolean durable) throws IOException {\n     assert out.getLength() \u003d\u003d 0 : \"Output buffer is not empty\";\n     \n     int numReadyTxns \u003d doubleBuf.countReadyTxns();\n     long firstTxToFlush \u003d doubleBuf.getFirstReadyTxId();\n     \n     doubleBuf.flushTo(out);\n     if (out.getLength() \u003e 0) {\n       assert numReadyTxns \u003e 0;\n       \n       byte[] data \u003d Arrays.copyOf(out.getData(), out.getLength());\n       out.reset();\n       assert out.getLength() \u003d\u003d 0 : \"Output buffer is not empty\";\n \n       backupNode.journal(journalInfo, 0, firstTxToFlush, numReadyTxns, data);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void flushAndSync(boolean durable) throws IOException {\n    assert out.getLength() \u003d\u003d 0 : \"Output buffer is not empty\";\n    \n    int numReadyTxns \u003d doubleBuf.countReadyTxns();\n    long firstTxToFlush \u003d doubleBuf.getFirstReadyTxId();\n    \n    doubleBuf.flushTo(out);\n    if (out.getLength() \u003e 0) {\n      assert numReadyTxns \u003e 0;\n      \n      byte[] data \u003d Arrays.copyOf(out.getData(), out.getLength());\n      out.reset();\n      assert out.getLength() \u003d\u003d 0 : \"Output buffer is not empty\";\n\n      backupNode.journal(journalInfo, 0, firstTxToFlush, numReadyTxns, data);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/EditLogBackupOutputStream.java",
      "extendedDetails": {
        "oldValue": "[]",
        "newValue": "[durable-boolean]"
      }
    },
    "74b4b45651037fc8d2a97d3b2de51334dcbf759c": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3211. Add fence(..) and replace NamenodeRegistration with JournalInfo and epoch in JournalProtocol.  Contributed by suresh \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1310649 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/04/12 5:52 PM",
      "commitName": "74b4b45651037fc8d2a97d3b2de51334dcbf759c",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "28/02/12 12:09 PM",
      "commitNameOld": "c69dfdd5e14af490790dff8227b11962ec816577",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 38.2,
      "commitsBetweenForRepo": 292,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,17 @@\n   protected void flushAndSync() throws IOException {\n     assert out.getLength() \u003d\u003d 0 : \"Output buffer is not empty\";\n     \n     int numReadyTxns \u003d doubleBuf.countReadyTxns();\n     long firstTxToFlush \u003d doubleBuf.getFirstReadyTxId();\n     \n     doubleBuf.flushTo(out);\n     if (out.getLength() \u003e 0) {\n       assert numReadyTxns \u003e 0;\n       \n       byte[] data \u003d Arrays.copyOf(out.getData(), out.getLength());\n       out.reset();\n       assert out.getLength() \u003d\u003d 0 : \"Output buffer is not empty\";\n \n-      backupNode.journal(nnRegistration,\n-          firstTxToFlush, numReadyTxns, data);\n+      backupNode.journal(journalInfo, 0, firstTxToFlush, numReadyTxns, data);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void flushAndSync() throws IOException {\n    assert out.getLength() \u003d\u003d 0 : \"Output buffer is not empty\";\n    \n    int numReadyTxns \u003d doubleBuf.countReadyTxns();\n    long firstTxToFlush \u003d doubleBuf.getFirstReadyTxId();\n    \n    doubleBuf.flushTo(out);\n    if (out.getLength() \u003e 0) {\n      assert numReadyTxns \u003e 0;\n      \n      byte[] data \u003d Arrays.copyOf(out.getData(), out.getLength());\n      out.reset();\n      assert out.getLength() \u003d\u003d 0 : \"Output buffer is not empty\";\n\n      backupNode.journal(journalInfo, 0, firstTxToFlush, numReadyTxns, data);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/EditLogBackupOutputStream.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected void flushAndSync() throws IOException {\n    assert out.getLength() \u003d\u003d 0 : \"Output buffer is not empty\";\n    \n    int numReadyTxns \u003d doubleBuf.countReadyTxns();\n    long firstTxToFlush \u003d doubleBuf.getFirstReadyTxId();\n    \n    doubleBuf.flushTo(out);\n    if (out.getLength() \u003e 0) {\n      assert numReadyTxns \u003e 0;\n      \n      byte[] data \u003d Arrays.copyOf(out.getData(), out.getLength());\n      out.reset();\n      assert out.getLength() \u003d\u003d 0 : \"Output buffer is not empty\";\n\n      backupNode.journal(nnRegistration,\n          firstTxToFlush, numReadyTxns, data);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/EditLogBackupOutputStream.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/EditLogBackupOutputStream.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/EditLogBackupOutputStream.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected void flushAndSync() throws IOException {\n    assert out.getLength() \u003d\u003d 0 : \"Output buffer is not empty\";\n    \n    int numReadyTxns \u003d doubleBuf.countReadyTxns();\n    long firstTxToFlush \u003d doubleBuf.getFirstReadyTxId();\n    \n    doubleBuf.flushTo(out);\n    if (out.getLength() \u003e 0) {\n      assert numReadyTxns \u003e 0;\n      \n      byte[] data \u003d Arrays.copyOf(out.getData(), out.getLength());\n      out.reset();\n      assert out.getLength() \u003d\u003d 0 : \"Output buffer is not empty\";\n\n      backupNode.journal(nnRegistration,\n          firstTxToFlush, numReadyTxns, data);\n    }\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/EditLogBackupOutputStream.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/EditLogBackupOutputStream.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/EditLogBackupOutputStream.java"
      }
    },
    "28e6a4e44a3e920dcaf858f9a74a6358226b3a63": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-1073. Redesign the NameNode\u0027s storage layout for image checkpoints and edit logs to introduce transaction IDs and be more robust. Contributed by Todd Lipcon and Ivan Kelly.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1152295 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/07/11 9:28 AM",
      "commitName": "28e6a4e44a3e920dcaf858f9a74a6358226b3a63",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "27/07/11 10:46 PM",
      "commitNameOld": "44320eed1732ea59bd9ec83009eb10e0e6f13023",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 1.45,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,18 @@\n   protected void flushAndSync() throws IOException {\n-    // XXX: this code won\u0027t work in trunk, but it\u0027s redone\n-    // in HDFS-1073 where it\u0027s simpler.\n+    assert out.getLength() \u003d\u003d 0 : \"Output buffer is not empty\";\n+    \n+    int numReadyTxns \u003d doubleBuf.countReadyTxns();\n+    long firstTxToFlush \u003d doubleBuf.getFirstReadyTxId();\n+    \n     doubleBuf.flushTo(out);\n-    if (out.size() \u003e 0) {\n-      send(NamenodeProtocol.JA_JOURNAL);\n+    if (out.getLength() \u003e 0) {\n+      assert numReadyTxns \u003e 0;\n+      \n+      byte[] data \u003d Arrays.copyOf(out.getData(), out.getLength());\n+      out.reset();\n+      assert out.getLength() \u003d\u003d 0 : \"Output buffer is not empty\";\n+\n+      backupNode.journal(nnRegistration,\n+          firstTxToFlush, numReadyTxns, data);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void flushAndSync() throws IOException {\n    assert out.getLength() \u003d\u003d 0 : \"Output buffer is not empty\";\n    \n    int numReadyTxns \u003d doubleBuf.countReadyTxns();\n    long firstTxToFlush \u003d doubleBuf.getFirstReadyTxId();\n    \n    doubleBuf.flushTo(out);\n    if (out.getLength() \u003e 0) {\n      assert numReadyTxns \u003e 0;\n      \n      byte[] data \u003d Arrays.copyOf(out.getData(), out.getLength());\n      out.reset();\n      assert out.getLength() \u003d\u003d 0 : \"Output buffer is not empty\";\n\n      backupNode.journal(nnRegistration,\n          firstTxToFlush, numReadyTxns, data);\n    }\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/EditLogBackupOutputStream.java",
      "extendedDetails": {}
    },
    "44320eed1732ea59bd9ec83009eb10e0e6f13023": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2212. Refactor double-buffering code out of EditLogOutputStreams. Contributed by Todd Lipcon\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1151736 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/07/11 10:46 PM",
      "commitName": "44320eed1732ea59bd9ec83009eb10e0e6f13023",
      "commitAuthor": "Eli Collins",
      "commitDateOld": "26/07/11 1:46 PM",
      "commitNameOld": "438c32aaf9fb0c63f55044cf5ef1b2e0adcf7fea",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 1.37,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,8 @@\n   protected void flushAndSync() throws IOException {\n-    assert out.size() \u003d\u003d 0 : \"Output buffer is not empty\";\n-    int bufReadySize \u003d bufReady.size();\n-    for(int idx \u003d 0; idx \u003c bufReadySize; idx++) {\n-      BufferedOp jRec \u003d null;\n-      for(; idx \u003c bufReadySize; idx++) {\n-        jRec \u003d bufReady.get(idx);\n-        if(jRec.opCode.getOpCode() \n-           \u003e\u003d FSEditLogOpCodes.OP_JSPOOL_START.getOpCode())\n-          break;  // special operation should be sent in a separate call to BN\n-        out.write(jRec.bytes, 0, jRec.bytes.length);\n-      }\n-      if(out.size() \u003e 0)\n-        send(NamenodeProtocol.JA_JOURNAL);\n-      if(idx \u003d\u003d bufReadySize)\n-        break;\n-      // operation like start journal spool or increment checkpoint time\n-      // is a separate call to BN\n-      out.write(jRec.bytes, 0, jRec.bytes.length);\n-      send(jRec.opCode.getOpCode());\n+    // XXX: this code won\u0027t work in trunk, but it\u0027s redone\n+    // in HDFS-1073 where it\u0027s simpler.\n+    doubleBuf.flushTo(out);\n+    if (out.size() \u003e 0) {\n+      send(NamenodeProtocol.JA_JOURNAL);\n     }\n-    bufReady.clear();         // erase all data in the buffer\n-    out.reset();              // reset buffer to the start position\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void flushAndSync() throws IOException {\n    // XXX: this code won\u0027t work in trunk, but it\u0027s redone\n    // in HDFS-1073 where it\u0027s simpler.\n    doubleBuf.flushTo(out);\n    if (out.size() \u003e 0) {\n      send(NamenodeProtocol.JA_JOURNAL);\n    }\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/EditLogBackupOutputStream.java",
      "extendedDetails": {}
    },
    "438c32aaf9fb0c63f55044cf5ef1b2e0adcf7fea": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2149. Move EditLogOp serialization formats into FsEditLogOp implementations. Contributed by Ivan Kelly.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1151238 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "26/07/11 1:46 PM",
      "commitName": "438c32aaf9fb0c63f55044cf5ef1b2e0adcf7fea",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "12/06/11 3:00 PM",
      "commitNameOld": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 43.95,
      "commitsBetweenForRepo": 147,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,24 @@\n   protected void flushAndSync() throws IOException {\n     assert out.size() \u003d\u003d 0 : \"Output buffer is not empty\";\n     int bufReadySize \u003d bufReady.size();\n     for(int idx \u003d 0; idx \u003c bufReadySize; idx++) {\n-      JournalRecord jRec \u003d null;\n+      BufferedOp jRec \u003d null;\n       for(; idx \u003c bufReadySize; idx++) {\n         jRec \u003d bufReady.get(idx);\n-        if(jRec.op \u003e\u003d FSEditLogOpCodes.OP_JSPOOL_START.getOpCode())\n+        if(jRec.opCode.getOpCode() \n+           \u003e\u003d FSEditLogOpCodes.OP_JSPOOL_START.getOpCode())\n           break;  // special operation should be sent in a separate call to BN\n-        jRec.write(out);\n+        out.write(jRec.bytes, 0, jRec.bytes.length);\n       }\n       if(out.size() \u003e 0)\n         send(NamenodeProtocol.JA_JOURNAL);\n       if(idx \u003d\u003d bufReadySize)\n         break;\n       // operation like start journal spool or increment checkpoint time\n       // is a separate call to BN\n-      jRec.write(out);\n-      send(jRec.op);\n+      out.write(jRec.bytes, 0, jRec.bytes.length);\n+      send(jRec.opCode.getOpCode());\n     }\n     bufReady.clear();         // erase all data in the buffer\n     out.reset();              // reset buffer to the start position\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void flushAndSync() throws IOException {\n    assert out.size() \u003d\u003d 0 : \"Output buffer is not empty\";\n    int bufReadySize \u003d bufReady.size();\n    for(int idx \u003d 0; idx \u003c bufReadySize; idx++) {\n      BufferedOp jRec \u003d null;\n      for(; idx \u003c bufReadySize; idx++) {\n        jRec \u003d bufReady.get(idx);\n        if(jRec.opCode.getOpCode() \n           \u003e\u003d FSEditLogOpCodes.OP_JSPOOL_START.getOpCode())\n          break;  // special operation should be sent in a separate call to BN\n        out.write(jRec.bytes, 0, jRec.bytes.length);\n      }\n      if(out.size() \u003e 0)\n        send(NamenodeProtocol.JA_JOURNAL);\n      if(idx \u003d\u003d bufReadySize)\n        break;\n      // operation like start journal spool or increment checkpoint time\n      // is a separate call to BN\n      out.write(jRec.bytes, 0, jRec.bytes.length);\n      send(jRec.opCode.getOpCode());\n    }\n    bufReady.clear();         // erase all data in the buffer\n    out.reset();              // reset buffer to the start position\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/EditLogBackupOutputStream.java",
      "extendedDetails": {}
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,23 @@\n+  protected void flushAndSync() throws IOException {\n+    assert out.size() \u003d\u003d 0 : \"Output buffer is not empty\";\n+    int bufReadySize \u003d bufReady.size();\n+    for(int idx \u003d 0; idx \u003c bufReadySize; idx++) {\n+      JournalRecord jRec \u003d null;\n+      for(; idx \u003c bufReadySize; idx++) {\n+        jRec \u003d bufReady.get(idx);\n+        if(jRec.op \u003e\u003d FSEditLogOpCodes.OP_JSPOOL_START.getOpCode())\n+          break;  // special operation should be sent in a separate call to BN\n+        jRec.write(out);\n+      }\n+      if(out.size() \u003e 0)\n+        send(NamenodeProtocol.JA_JOURNAL);\n+      if(idx \u003d\u003d bufReadySize)\n+        break;\n+      // operation like start journal spool or increment checkpoint time\n+      // is a separate call to BN\n+      jRec.write(out);\n+      send(jRec.op);\n+    }\n+    bufReady.clear();         // erase all data in the buffer\n+    out.reset();              // reset buffer to the start position\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void flushAndSync() throws IOException {\n    assert out.size() \u003d\u003d 0 : \"Output buffer is not empty\";\n    int bufReadySize \u003d bufReady.size();\n    for(int idx \u003d 0; idx \u003c bufReadySize; idx++) {\n      JournalRecord jRec \u003d null;\n      for(; idx \u003c bufReadySize; idx++) {\n        jRec \u003d bufReady.get(idx);\n        if(jRec.op \u003e\u003d FSEditLogOpCodes.OP_JSPOOL_START.getOpCode())\n          break;  // special operation should be sent in a separate call to BN\n        jRec.write(out);\n      }\n      if(out.size() \u003e 0)\n        send(NamenodeProtocol.JA_JOURNAL);\n      if(idx \u003d\u003d bufReadySize)\n        break;\n      // operation like start journal spool or increment checkpoint time\n      // is a separate call to BN\n      jRec.write(out);\n      send(jRec.op);\n    }\n    bufReady.clear();         // erase all data in the buffer\n    out.reset();              // reset buffer to the start position\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/EditLogBackupOutputStream.java"
    }
  }
}