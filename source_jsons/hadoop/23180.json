{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FileOutputCommitter.java",
  "functionName": "commitTask",
  "functionId": "commitTask___context-TaskAttemptContext__taskAttemptPath-Path",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/output/FileOutputCommitter.java",
  "functionStartLine": 573,
  "functionEndLine": 627,
  "numCommitsSeen": 22,
  "timeTaken": 2365,
  "changeHistory": [
    "4d8de7ab690ef919b392b12d856482a6a1f2bb3d",
    "6e42d058292d9656e9ebc9a47be13280e3c919ea",
    "aa92b764a7ddb888d097121c4d610089a0053d11",
    "94242c93857a06fb9c56ee571a47d6ca18f00f48"
  ],
  "changeHistoryShort": {
    "4d8de7ab690ef919b392b12d856482a6a1f2bb3d": "Ybodychange",
    "6e42d058292d9656e9ebc9a47be13280e3c919ea": "Ybodychange",
    "aa92b764a7ddb888d097121c4d610089a0053d11": "Ybodychange",
    "94242c93857a06fb9c56ee571a47d6ca18f00f48": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4d8de7ab690ef919b392b12d856482a6a1f2bb3d": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-7164. FileOutputCommitter does not report progress while merging paths. Contributed by Kuhu Shukla\n",
      "commitDate": "28/11/18 12:54 PM",
      "commitName": "4d8de7ab690ef919b392b12d856482a6a1f2bb3d",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "17/01/18 6:14 AM",
      "commitNameOld": "6e42d058292d9656e9ebc9a47be13280e3c919ea",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 315.28,
      "commitsBetweenForRepo": 3035,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,55 +1,55 @@\n   public void commitTask(TaskAttemptContext context, Path taskAttemptPath) \n       throws IOException {\n \n     TaskAttemptID attemptId \u003d context.getTaskAttemptID();\n     if (hasOutputPath()) {\n       context.progress();\n       if(taskAttemptPath \u003d\u003d null) {\n         taskAttemptPath \u003d getTaskAttemptPath(context);\n       }\n       FileSystem fs \u003d taskAttemptPath.getFileSystem(context.getConfiguration());\n       FileStatus taskAttemptDirStatus;\n       try {\n         taskAttemptDirStatus \u003d fs.getFileStatus(taskAttemptPath);\n       } catch (FileNotFoundException e) {\n         taskAttemptDirStatus \u003d null;\n       }\n \n       if (taskAttemptDirStatus !\u003d null) {\n         if (algorithmVersion \u003d\u003d 1) {\n           Path committedTaskPath \u003d getCommittedTaskPath(context);\n           if (fs.exists(committedTaskPath)) {\n              if (!fs.delete(committedTaskPath, true)) {\n                throw new IOException(\"Could not delete \" + committedTaskPath);\n              }\n           }\n           if (!fs.rename(taskAttemptPath, committedTaskPath)) {\n             throw new IOException(\"Could not rename \" + taskAttemptPath + \" to \"\n                 + committedTaskPath);\n           }\n           LOG.info(\"Saved output of task \u0027\" + attemptId + \"\u0027 to \" +\n               committedTaskPath);\n         } else {\n           // directly merge everything from taskAttemptPath to output directory\n-          mergePaths(fs, taskAttemptDirStatus, outputPath);\n+          mergePaths(fs, taskAttemptDirStatus, outputPath, context);\n           LOG.info(\"Saved output of task \u0027\" + attemptId + \"\u0027 to \" +\n               outputPath);\n \n           if (context.getConfiguration().getBoolean(\n               FILEOUTPUTCOMMITTER_TASK_CLEANUP_ENABLED,\n               FILEOUTPUTCOMMITTER_TASK_CLEANUP_ENABLED_DEFAULT)) {\n             LOG.debug(String.format(\n                 \"Deleting the temporary directory of \u0027%s\u0027: \u0027%s\u0027\",\n                 attemptId, taskAttemptPath));\n             if(!fs.delete(taskAttemptPath, true)) {\n               LOG.warn(\"Could not delete \" + taskAttemptPath);\n             }\n           }\n         }\n       } else {\n         LOG.warn(\"No Output found for \" + attemptId);\n       }\n     } else {\n       LOG.warn(\"Output Path is null in commitTask()\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void commitTask(TaskAttemptContext context, Path taskAttemptPath) \n      throws IOException {\n\n    TaskAttemptID attemptId \u003d context.getTaskAttemptID();\n    if (hasOutputPath()) {\n      context.progress();\n      if(taskAttemptPath \u003d\u003d null) {\n        taskAttemptPath \u003d getTaskAttemptPath(context);\n      }\n      FileSystem fs \u003d taskAttemptPath.getFileSystem(context.getConfiguration());\n      FileStatus taskAttemptDirStatus;\n      try {\n        taskAttemptDirStatus \u003d fs.getFileStatus(taskAttemptPath);\n      } catch (FileNotFoundException e) {\n        taskAttemptDirStatus \u003d null;\n      }\n\n      if (taskAttemptDirStatus !\u003d null) {\n        if (algorithmVersion \u003d\u003d 1) {\n          Path committedTaskPath \u003d getCommittedTaskPath(context);\n          if (fs.exists(committedTaskPath)) {\n             if (!fs.delete(committedTaskPath, true)) {\n               throw new IOException(\"Could not delete \" + committedTaskPath);\n             }\n          }\n          if (!fs.rename(taskAttemptPath, committedTaskPath)) {\n            throw new IOException(\"Could not rename \" + taskAttemptPath + \" to \"\n                + committedTaskPath);\n          }\n          LOG.info(\"Saved output of task \u0027\" + attemptId + \"\u0027 to \" +\n              committedTaskPath);\n        } else {\n          // directly merge everything from taskAttemptPath to output directory\n          mergePaths(fs, taskAttemptDirStatus, outputPath, context);\n          LOG.info(\"Saved output of task \u0027\" + attemptId + \"\u0027 to \" +\n              outputPath);\n\n          if (context.getConfiguration().getBoolean(\n              FILEOUTPUTCOMMITTER_TASK_CLEANUP_ENABLED,\n              FILEOUTPUTCOMMITTER_TASK_CLEANUP_ENABLED_DEFAULT)) {\n            LOG.debug(String.format(\n                \"Deleting the temporary directory of \u0027%s\u0027: \u0027%s\u0027\",\n                attemptId, taskAttemptPath));\n            if(!fs.delete(taskAttemptPath, true)) {\n              LOG.warn(\"Could not delete \" + taskAttemptPath);\n            }\n          }\n        }\n      } else {\n        LOG.warn(\"No Output found for \" + attemptId);\n      }\n    } else {\n      LOG.warn(\"Output Path is null in commitTask()\");\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/output/FileOutputCommitter.java",
      "extendedDetails": {}
    },
    "6e42d058292d9656e9ebc9a47be13280e3c919ea": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-7029. FileOutputCommitter is slow on filesystems lacking recursive delete. Contributed by Karthik Palaniappan\n",
      "commitDate": "17/01/18 6:14 AM",
      "commitName": "6e42d058292d9656e9ebc9a47be13280e3c919ea",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "22/11/17 7:28 AM",
      "commitNameOld": "de8b6ca5ef8614de6d6277b7617e27c788b0555c",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 55.95,
      "commitsBetweenForRepo": 297,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,44 +1,55 @@\n   public void commitTask(TaskAttemptContext context, Path taskAttemptPath) \n       throws IOException {\n \n     TaskAttemptID attemptId \u003d context.getTaskAttemptID();\n     if (hasOutputPath()) {\n       context.progress();\n       if(taskAttemptPath \u003d\u003d null) {\n         taskAttemptPath \u003d getTaskAttemptPath(context);\n       }\n       FileSystem fs \u003d taskAttemptPath.getFileSystem(context.getConfiguration());\n       FileStatus taskAttemptDirStatus;\n       try {\n         taskAttemptDirStatus \u003d fs.getFileStatus(taskAttemptPath);\n       } catch (FileNotFoundException e) {\n         taskAttemptDirStatus \u003d null;\n       }\n \n       if (taskAttemptDirStatus !\u003d null) {\n         if (algorithmVersion \u003d\u003d 1) {\n           Path committedTaskPath \u003d getCommittedTaskPath(context);\n           if (fs.exists(committedTaskPath)) {\n              if (!fs.delete(committedTaskPath, true)) {\n                throw new IOException(\"Could not delete \" + committedTaskPath);\n              }\n           }\n           if (!fs.rename(taskAttemptPath, committedTaskPath)) {\n             throw new IOException(\"Could not rename \" + taskAttemptPath + \" to \"\n                 + committedTaskPath);\n           }\n           LOG.info(\"Saved output of task \u0027\" + attemptId + \"\u0027 to \" +\n               committedTaskPath);\n         } else {\n           // directly merge everything from taskAttemptPath to output directory\n           mergePaths(fs, taskAttemptDirStatus, outputPath);\n           LOG.info(\"Saved output of task \u0027\" + attemptId + \"\u0027 to \" +\n               outputPath);\n+\n+          if (context.getConfiguration().getBoolean(\n+              FILEOUTPUTCOMMITTER_TASK_CLEANUP_ENABLED,\n+              FILEOUTPUTCOMMITTER_TASK_CLEANUP_ENABLED_DEFAULT)) {\n+            LOG.debug(String.format(\n+                \"Deleting the temporary directory of \u0027%s\u0027: \u0027%s\u0027\",\n+                attemptId, taskAttemptPath));\n+            if(!fs.delete(taskAttemptPath, true)) {\n+              LOG.warn(\"Could not delete \" + taskAttemptPath);\n+            }\n+          }\n         }\n       } else {\n         LOG.warn(\"No Output found for \" + attemptId);\n       }\n     } else {\n       LOG.warn(\"Output Path is null in commitTask()\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void commitTask(TaskAttemptContext context, Path taskAttemptPath) \n      throws IOException {\n\n    TaskAttemptID attemptId \u003d context.getTaskAttemptID();\n    if (hasOutputPath()) {\n      context.progress();\n      if(taskAttemptPath \u003d\u003d null) {\n        taskAttemptPath \u003d getTaskAttemptPath(context);\n      }\n      FileSystem fs \u003d taskAttemptPath.getFileSystem(context.getConfiguration());\n      FileStatus taskAttemptDirStatus;\n      try {\n        taskAttemptDirStatus \u003d fs.getFileStatus(taskAttemptPath);\n      } catch (FileNotFoundException e) {\n        taskAttemptDirStatus \u003d null;\n      }\n\n      if (taskAttemptDirStatus !\u003d null) {\n        if (algorithmVersion \u003d\u003d 1) {\n          Path committedTaskPath \u003d getCommittedTaskPath(context);\n          if (fs.exists(committedTaskPath)) {\n             if (!fs.delete(committedTaskPath, true)) {\n               throw new IOException(\"Could not delete \" + committedTaskPath);\n             }\n          }\n          if (!fs.rename(taskAttemptPath, committedTaskPath)) {\n            throw new IOException(\"Could not rename \" + taskAttemptPath + \" to \"\n                + committedTaskPath);\n          }\n          LOG.info(\"Saved output of task \u0027\" + attemptId + \"\u0027 to \" +\n              committedTaskPath);\n        } else {\n          // directly merge everything from taskAttemptPath to output directory\n          mergePaths(fs, taskAttemptDirStatus, outputPath);\n          LOG.info(\"Saved output of task \u0027\" + attemptId + \"\u0027 to \" +\n              outputPath);\n\n          if (context.getConfiguration().getBoolean(\n              FILEOUTPUTCOMMITTER_TASK_CLEANUP_ENABLED,\n              FILEOUTPUTCOMMITTER_TASK_CLEANUP_ENABLED_DEFAULT)) {\n            LOG.debug(String.format(\n                \"Deleting the temporary directory of \u0027%s\u0027: \u0027%s\u0027\",\n                attemptId, taskAttemptPath));\n            if(!fs.delete(taskAttemptPath, true)) {\n              LOG.warn(\"Could not delete \" + taskAttemptPath);\n            }\n          }\n        }\n      } else {\n        LOG.warn(\"No Output found for \" + attemptId);\n      }\n    } else {\n      LOG.warn(\"Output Path is null in commitTask()\");\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/output/FileOutputCommitter.java",
      "extendedDetails": {}
    },
    "aa92b764a7ddb888d097121c4d610089a0053d11": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-4815. Speed up FileOutputCommitter#commitJob for many output files. (Siqi Li via gera)\n",
      "commitDate": "10/03/15 11:32 AM",
      "commitName": "aa92b764a7ddb888d097121c4d610089a0053d11",
      "commitAuthor": "Gera Shegalov",
      "commitDateOld": "28/04/14 8:18 AM",
      "commitNameOld": "bb7ce82816574f67aa1898f67e0e0cff54fa67be",
      "commitAuthorOld": "Jason Darrell Lowe",
      "daysBetweenCommits": 316.13,
      "commitsBetweenForRepo": 2567,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,44 @@\n   public void commitTask(TaskAttemptContext context, Path taskAttemptPath) \n-  throws IOException {\n+      throws IOException {\n+\n     TaskAttemptID attemptId \u003d context.getTaskAttemptID();\n     if (hasOutputPath()) {\n       context.progress();\n       if(taskAttemptPath \u003d\u003d null) {\n         taskAttemptPath \u003d getTaskAttemptPath(context);\n       }\n-      Path committedTaskPath \u003d getCommittedTaskPath(context);\n       FileSystem fs \u003d taskAttemptPath.getFileSystem(context.getConfiguration());\n-      if (fs.exists(taskAttemptPath)) {\n-        if(fs.exists(committedTaskPath)) {\n-          if(!fs.delete(committedTaskPath, true)) {\n-            throw new IOException(\"Could not delete \" + committedTaskPath);\n+      FileStatus taskAttemptDirStatus;\n+      try {\n+        taskAttemptDirStatus \u003d fs.getFileStatus(taskAttemptPath);\n+      } catch (FileNotFoundException e) {\n+        taskAttemptDirStatus \u003d null;\n+      }\n+\n+      if (taskAttemptDirStatus !\u003d null) {\n+        if (algorithmVersion \u003d\u003d 1) {\n+          Path committedTaskPath \u003d getCommittedTaskPath(context);\n+          if (fs.exists(committedTaskPath)) {\n+             if (!fs.delete(committedTaskPath, true)) {\n+               throw new IOException(\"Could not delete \" + committedTaskPath);\n+             }\n           }\n+          if (!fs.rename(taskAttemptPath, committedTaskPath)) {\n+            throw new IOException(\"Could not rename \" + taskAttemptPath + \" to \"\n+                + committedTaskPath);\n+          }\n+          LOG.info(\"Saved output of task \u0027\" + attemptId + \"\u0027 to \" +\n+              committedTaskPath);\n+        } else {\n+          // directly merge everything from taskAttemptPath to output directory\n+          mergePaths(fs, taskAttemptDirStatus, outputPath);\n+          LOG.info(\"Saved output of task \u0027\" + attemptId + \"\u0027 to \" +\n+              outputPath);\n         }\n-        if(!fs.rename(taskAttemptPath, committedTaskPath)) {\n-          throw new IOException(\"Could not rename \" + taskAttemptPath + \" to \"\n-              + committedTaskPath);\n-        }\n-        LOG.info(\"Saved output of task \u0027\" + attemptId + \"\u0027 to \" + \n-            committedTaskPath);\n       } else {\n         LOG.warn(\"No Output found for \" + attemptId);\n       }\n     } else {\n       LOG.warn(\"Output Path is null in commitTask()\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void commitTask(TaskAttemptContext context, Path taskAttemptPath) \n      throws IOException {\n\n    TaskAttemptID attemptId \u003d context.getTaskAttemptID();\n    if (hasOutputPath()) {\n      context.progress();\n      if(taskAttemptPath \u003d\u003d null) {\n        taskAttemptPath \u003d getTaskAttemptPath(context);\n      }\n      FileSystem fs \u003d taskAttemptPath.getFileSystem(context.getConfiguration());\n      FileStatus taskAttemptDirStatus;\n      try {\n        taskAttemptDirStatus \u003d fs.getFileStatus(taskAttemptPath);\n      } catch (FileNotFoundException e) {\n        taskAttemptDirStatus \u003d null;\n      }\n\n      if (taskAttemptDirStatus !\u003d null) {\n        if (algorithmVersion \u003d\u003d 1) {\n          Path committedTaskPath \u003d getCommittedTaskPath(context);\n          if (fs.exists(committedTaskPath)) {\n             if (!fs.delete(committedTaskPath, true)) {\n               throw new IOException(\"Could not delete \" + committedTaskPath);\n             }\n          }\n          if (!fs.rename(taskAttemptPath, committedTaskPath)) {\n            throw new IOException(\"Could not rename \" + taskAttemptPath + \" to \"\n                + committedTaskPath);\n          }\n          LOG.info(\"Saved output of task \u0027\" + attemptId + \"\u0027 to \" +\n              committedTaskPath);\n        } else {\n          // directly merge everything from taskAttemptPath to output directory\n          mergePaths(fs, taskAttemptDirStatus, outputPath);\n          LOG.info(\"Saved output of task \u0027\" + attemptId + \"\u0027 to \" +\n              outputPath);\n        }\n      } else {\n        LOG.warn(\"No Output found for \" + attemptId);\n      }\n    } else {\n      LOG.warn(\"Output Path is null in commitTask()\");\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/output/FileOutputCommitter.java",
      "extendedDetails": {}
    },
    "94242c93857a06fb9c56ee571a47d6ca18f00f48": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-3711. Fixed MR AM recovery so that only single selected task output is recovered and thus reduce the unnecessarily bloated recovery time. Contributed by Robert Joseph Evans.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1240413 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/02/12 4:04 PM",
      "commitName": "94242c93857a06fb9c56ee571a47d6ca18f00f48",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,29 @@\n+  public void commitTask(TaskAttemptContext context, Path taskAttemptPath) \n+  throws IOException {\n+    TaskAttemptID attemptId \u003d context.getTaskAttemptID();\n+    if (hasOutputPath()) {\n+      context.progress();\n+      if(taskAttemptPath \u003d\u003d null) {\n+        taskAttemptPath \u003d getTaskAttemptPath(context);\n+      }\n+      Path committedTaskPath \u003d getCommittedTaskPath(context);\n+      FileSystem fs \u003d taskAttemptPath.getFileSystem(context.getConfiguration());\n+      if (fs.exists(taskAttemptPath)) {\n+        if(fs.exists(committedTaskPath)) {\n+          if(!fs.delete(committedTaskPath, true)) {\n+            throw new IOException(\"Could not delete \" + committedTaskPath);\n+          }\n+        }\n+        if(!fs.rename(taskAttemptPath, committedTaskPath)) {\n+          throw new IOException(\"Could not rename \" + taskAttemptPath + \" to \"\n+              + committedTaskPath);\n+        }\n+        LOG.info(\"Saved output of task \u0027\" + attemptId + \"\u0027 to \" + \n+            committedTaskPath);\n+      } else {\n+        LOG.warn(\"No Output found for \" + attemptId);\n+      }\n+    } else {\n+      LOG.warn(\"Output Path is null in commitTask()\");\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void commitTask(TaskAttemptContext context, Path taskAttemptPath) \n  throws IOException {\n    TaskAttemptID attemptId \u003d context.getTaskAttemptID();\n    if (hasOutputPath()) {\n      context.progress();\n      if(taskAttemptPath \u003d\u003d null) {\n        taskAttemptPath \u003d getTaskAttemptPath(context);\n      }\n      Path committedTaskPath \u003d getCommittedTaskPath(context);\n      FileSystem fs \u003d taskAttemptPath.getFileSystem(context.getConfiguration());\n      if (fs.exists(taskAttemptPath)) {\n        if(fs.exists(committedTaskPath)) {\n          if(!fs.delete(committedTaskPath, true)) {\n            throw new IOException(\"Could not delete \" + committedTaskPath);\n          }\n        }\n        if(!fs.rename(taskAttemptPath, committedTaskPath)) {\n          throw new IOException(\"Could not rename \" + taskAttemptPath + \" to \"\n              + committedTaskPath);\n        }\n        LOG.info(\"Saved output of task \u0027\" + attemptId + \"\u0027 to \" + \n            committedTaskPath);\n      } else {\n        LOG.warn(\"No Output found for \" + attemptId);\n      }\n    } else {\n      LOG.warn(\"Output Path is null in commitTask()\");\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/output/FileOutputCommitter.java"
    }
  }
}