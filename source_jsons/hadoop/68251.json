{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HttpInputStreamWithRelease.java",
  "functionName": "read",
  "functionId": "read___b-byte[]__off-int__len-int",
  "sourceFilePath": "hadoop-tools/hadoop-openstack/src/main/java/org/apache/hadoop/fs/swift/http/HttpInputStreamWithRelease.java",
  "functionStartLine": 187,
  "functionEndLine": 209,
  "numCommitsSeen": 4,
  "timeTaken": 1212,
  "changeHistory": [
    "f20dc0d5770d3876954faf0a6e8dcce6539ffc23",
    "0bdd263d82a4510f16df49238d57c9f78ac28ae7",
    "3caca924bc72fe4a0e5b1ea89adb098cc1eb7874"
  ],
  "changeHistoryShort": {
    "f20dc0d5770d3876954faf0a6e8dcce6539ffc23": "Ybodychange",
    "0bdd263d82a4510f16df49238d57c9f78ac28ae7": "Ybodychange",
    "3caca924bc72fe4a0e5b1ea89adb098cc1eb7874": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f20dc0d5770d3876954faf0a6e8dcce6539ffc23": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10571. Use Log.*(Object, Throwable) overload to log exceptions.\nContributed by Andras Bokor.\n",
      "commitDate": "14/02/18 8:20 AM",
      "commitName": "f20dc0d5770d3876954faf0a6e8dcce6539ffc23",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "27/04/17 12:57 AM",
      "commitNameOld": "62579b69a0a294ba1ea14cf76c650b640f89f331",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 293.35,
      "commitsBetweenForRepo": 1987,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,23 @@\n   public int read(byte[] b, int off, int len) throws IOException {\n     SwiftUtils.validateReadArgs(b, off, len);\n     if (len \u003d\u003d 0) {\n       return 0;\n     }\n     //if the stream is already closed, then report an exception.\n     assumeNotReleased();\n     //now read in a buffer, reacting differently to different operations\n     int read;\n     try {\n       read \u003d inStream.read(b, off, len);\n     } catch (EOFException e) {\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"EOF exception \" + e, e);\n-      }\n+      LOG.debug(\"EOF exception\", e);\n       read \u003d -1;\n     } catch (IOException e) {\n       throw releaseAndRethrow(\"read(b, off, \" + len + \")\", e);\n     }\n     if (read \u003c 0) {\n       dataConsumed \u003d true;\n       release(\"read() -all data consumed\", null);\n     }\n     return read;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int read(byte[] b, int off, int len) throws IOException {\n    SwiftUtils.validateReadArgs(b, off, len);\n    if (len \u003d\u003d 0) {\n      return 0;\n    }\n    //if the stream is already closed, then report an exception.\n    assumeNotReleased();\n    //now read in a buffer, reacting differently to different operations\n    int read;\n    try {\n      read \u003d inStream.read(b, off, len);\n    } catch (EOFException e) {\n      LOG.debug(\"EOF exception\", e);\n      read \u003d -1;\n    } catch (IOException e) {\n      throw releaseAndRethrow(\"read(b, off, \" + len + \")\", e);\n    }\n    if (read \u003c 0) {\n      dataConsumed \u003d true;\n      release(\"read() -all data consumed\", null);\n    }\n    return read;\n  }",
      "path": "hadoop-tools/hadoop-openstack/src/main/java/org/apache/hadoop/fs/swift/http/HttpInputStreamWithRelease.java",
      "extendedDetails": {}
    },
    "0bdd263d82a4510f16df49238d57c9f78ac28ae7": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13017. Implementations of InputStream.read(buffer, offset, bytes) to exit 0 if bytes\u003d\u003d0. Contributed by Steve Loughran.\n",
      "commitDate": "26/10/16 11:46 PM",
      "commitName": "0bdd263d82a4510f16df49238d57c9f78ac28ae7",
      "commitAuthor": "Masatake Iwasaki",
      "commitDateOld": "27/09/13 4:32 AM",
      "commitNameOld": "3caca924bc72fe4a0e5b1ea89adb098cc1eb7874",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 1125.8,
      "commitsBetweenForRepo": 8556,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,25 @@\n   public int read(byte[] b, int off, int len) throws IOException {\n     SwiftUtils.validateReadArgs(b, off, len);\n+    if (len \u003d\u003d 0) {\n+      return 0;\n+    }\n     //if the stream is already closed, then report an exception.\n     assumeNotReleased();\n     //now read in a buffer, reacting differently to different operations\n     int read;\n     try {\n       read \u003d inStream.read(b, off, len);\n     } catch (EOFException e) {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"EOF exception \" + e, e);\n       }\n       read \u003d -1;\n     } catch (IOException e) {\n       throw releaseAndRethrow(\"read(b, off, \" + len + \")\", e);\n     }\n     if (read \u003c 0) {\n       dataConsumed \u003d true;\n       release(\"read() -all data consumed\", null);\n     }\n     return read;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int read(byte[] b, int off, int len) throws IOException {\n    SwiftUtils.validateReadArgs(b, off, len);\n    if (len \u003d\u003d 0) {\n      return 0;\n    }\n    //if the stream is already closed, then report an exception.\n    assumeNotReleased();\n    //now read in a buffer, reacting differently to different operations\n    int read;\n    try {\n      read \u003d inStream.read(b, off, len);\n    } catch (EOFException e) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"EOF exception \" + e, e);\n      }\n      read \u003d -1;\n    } catch (IOException e) {\n      throw releaseAndRethrow(\"read(b, off, \" + len + \")\", e);\n    }\n    if (read \u003c 0) {\n      dataConsumed \u003d true;\n      release(\"read() -all data consumed\", null);\n    }\n    return read;\n  }",
      "path": "hadoop-tools/hadoop-openstack/src/main/java/org/apache/hadoop/fs/swift/http/HttpInputStreamWithRelease.java",
      "extendedDetails": {}
    },
    "3caca924bc72fe4a0e5b1ea89adb098cc1eb7874": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-8545. Filesystem Implementation for OpenStack Swift\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1526854 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/09/13 4:32 AM",
      "commitName": "3caca924bc72fe4a0e5b1ea89adb098cc1eb7874",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,22 @@\n+  public int read(byte[] b, int off, int len) throws IOException {\n+    SwiftUtils.validateReadArgs(b, off, len);\n+    //if the stream is already closed, then report an exception.\n+    assumeNotReleased();\n+    //now read in a buffer, reacting differently to different operations\n+    int read;\n+    try {\n+      read \u003d inStream.read(b, off, len);\n+    } catch (EOFException e) {\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"EOF exception \" + e, e);\n+      }\n+      read \u003d -1;\n+    } catch (IOException e) {\n+      throw releaseAndRethrow(\"read(b, off, \" + len + \")\", e);\n+    }\n+    if (read \u003c 0) {\n+      dataConsumed \u003d true;\n+      release(\"read() -all data consumed\", null);\n+    }\n+    return read;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public int read(byte[] b, int off, int len) throws IOException {\n    SwiftUtils.validateReadArgs(b, off, len);\n    //if the stream is already closed, then report an exception.\n    assumeNotReleased();\n    //now read in a buffer, reacting differently to different operations\n    int read;\n    try {\n      read \u003d inStream.read(b, off, len);\n    } catch (EOFException e) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"EOF exception \" + e, e);\n      }\n      read \u003d -1;\n    } catch (IOException e) {\n      throw releaseAndRethrow(\"read(b, off, \" + len + \")\", e);\n    }\n    if (read \u003c 0) {\n      dataConsumed \u003d true;\n      release(\"read() -all data consumed\", null);\n    }\n    return read;\n  }",
      "path": "hadoop-tools/hadoop-openstack/src/main/java/org/apache/hadoop/fs/swift/http/HttpInputStreamWithRelease.java"
    }
  }
}