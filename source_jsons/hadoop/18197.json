{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RouterAdmin.java",
  "functionName": "validateMax",
  "functionId": "validateMax___arg-String[]",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/tools/federation/RouterAdmin.java",
  "functionStartLine": 194,
  "functionEndLine": 224,
  "numCommitsSeen": 27,
  "timeTaken": 2661,
  "changeHistory": [
    "93bb368094e48e752c0732d979fbcd24e432bfc1",
    "c3abfcefdd256650b2a45ae2aac53c4a22721a46",
    "8b8ff5ccbc677d98a91092b2fa64999a99d1595d",
    "41c94a636b1a6ede9fa9cabff5487d305d06b48f",
    "780df9034f265a8e602856b34cc21d9be02f5c48"
  ],
  "changeHistoryShort": {
    "93bb368094e48e752c0732d979fbcd24e432bfc1": "Ybodychange",
    "c3abfcefdd256650b2a45ae2aac53c4a22721a46": "Ybodychange",
    "8b8ff5ccbc677d98a91092b2fa64999a99d1595d": "Ybodychange",
    "41c94a636b1a6ede9fa9cabff5487d305d06b48f": "Ybodychange",
    "780df9034f265a8e602856b34cc21d9be02f5c48": "Yintroduced"
  },
  "changeHistoryDetails": {
    "93bb368094e48e752c0732d979fbcd24e432bfc1": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14983. RBF: Add dfsrouteradmin -refreshSuperUserGroupsConfiguration command option. Contributed by Xieming Li\n",
      "commitDate": "11/12/19 5:56 PM",
      "commitName": "93bb368094e48e752c0732d979fbcd24e432bfc1",
      "commitAuthor": "Takanobu Asanuma",
      "commitDateOld": "21/11/19 10:12 PM",
      "commitNameOld": "c422e36397920311bd2823deb0206a97cf288bf0",
      "commitAuthorOld": "Ayush Saxena",
      "daysBetweenCommits": 19.82,
      "commitsBetweenForRepo": 74,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,31 @@\n   private void validateMax(String[] arg) {\n     if (arg[0].equals(\"-ls\")) {\n       if (arg.length \u003e 3) {\n         throw new IllegalArgumentException(\n             \"Too many arguments, Max\u003d2 argument allowed\");\n       }\n     } else if (arg[0].equals(\"-getDestination\")) {\n       if (arg.length \u003e 2) {\n         throw new IllegalArgumentException(\n             \"Too many arguments, Max\u003d1 argument allowed only\");\n       }\n     } else if (arg[0].equals(\"-safemode\")) {\n       if (arg.length \u003e 2) {\n         throw new IllegalArgumentException(\n             \"Too many arguments, Max\u003d1 argument allowed only\");\n       }\n     } else if (arg[0].equals(\"-nameservice\")) {\n       if (arg.length \u003e 3) {\n         throw new IllegalArgumentException(\n             \"Too many arguments, Max\u003d2 arguments allowed\");\n       }\n     } else if (arg[0].equals(\"-getDisabledNameservices\")) {\n       if (arg.length \u003e 1) {\n         throw new IllegalArgumentException(\"No arguments allowed\");\n       }\n+    } else if (arg[0].equals(\"-refreshSuperUserGroupsConfiguration\")) {\n+      if (arg.length \u003e 1) {\n+        throw new IllegalArgumentException(\"No arguments allowed\");\n+      }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void validateMax(String[] arg) {\n    if (arg[0].equals(\"-ls\")) {\n      if (arg.length \u003e 3) {\n        throw new IllegalArgumentException(\n            \"Too many arguments, Max\u003d2 argument allowed\");\n      }\n    } else if (arg[0].equals(\"-getDestination\")) {\n      if (arg.length \u003e 2) {\n        throw new IllegalArgumentException(\n            \"Too many arguments, Max\u003d1 argument allowed only\");\n      }\n    } else if (arg[0].equals(\"-safemode\")) {\n      if (arg.length \u003e 2) {\n        throw new IllegalArgumentException(\n            \"Too many arguments, Max\u003d1 argument allowed only\");\n      }\n    } else if (arg[0].equals(\"-nameservice\")) {\n      if (arg.length \u003e 3) {\n        throw new IllegalArgumentException(\n            \"Too many arguments, Max\u003d2 arguments allowed\");\n      }\n    } else if (arg[0].equals(\"-getDisabledNameservices\")) {\n      if (arg.length \u003e 1) {\n        throw new IllegalArgumentException(\"No arguments allowed\");\n      }\n    } else if (arg[0].equals(\"-refreshSuperUserGroupsConfiguration\")) {\n      if (arg.length \u003e 1) {\n        throw new IllegalArgumentException(\"No arguments allowed\");\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/tools/federation/RouterAdmin.java",
      "extendedDetails": {}
    },
    "c3abfcefdd256650b2a45ae2aac53c4a22721a46": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13843. RBF: Add optional parameter -d for detailed listing of mount points. Contributed by Ayush Saxena.\n",
      "commitDate": "01/09/19 6:54 PM",
      "commitName": "c3abfcefdd256650b2a45ae2aac53c4a22721a46",
      "commitAuthor": "Ayush Saxena",
      "commitDateOld": "14/08/19 8:14 AM",
      "commitNameOld": "b06c2345efffde2955b8c2d5fd954ad73b5d8677",
      "commitAuthorOld": "Ayush Saxena",
      "daysBetweenCommits": 18.44,
      "commitsBetweenForRepo": 175,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n   private void validateMax(String[] arg) {\n     if (arg[0].equals(\"-ls\")) {\n-      if (arg.length \u003e 2) {\n+      if (arg.length \u003e 3) {\n         throw new IllegalArgumentException(\n-            \"Too many arguments, Max\u003d1 argument allowed\");\n+            \"Too many arguments, Max\u003d2 argument allowed\");\n       }\n     } else if (arg[0].equals(\"-getDestination\")) {\n       if (arg.length \u003e 2) {\n         throw new IllegalArgumentException(\n             \"Too many arguments, Max\u003d1 argument allowed only\");\n       }\n     } else if (arg[0].equals(\"-safemode\")) {\n       if (arg.length \u003e 2) {\n         throw new IllegalArgumentException(\n             \"Too many arguments, Max\u003d1 argument allowed only\");\n       }\n     } else if (arg[0].equals(\"-nameservice\")) {\n       if (arg.length \u003e 3) {\n         throw new IllegalArgumentException(\n             \"Too many arguments, Max\u003d2 arguments allowed\");\n       }\n     } else if (arg[0].equals(\"-getDisabledNameservices\")) {\n       if (arg.length \u003e 1) {\n         throw new IllegalArgumentException(\"No arguments allowed\");\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void validateMax(String[] arg) {\n    if (arg[0].equals(\"-ls\")) {\n      if (arg.length \u003e 3) {\n        throw new IllegalArgumentException(\n            \"Too many arguments, Max\u003d2 argument allowed\");\n      }\n    } else if (arg[0].equals(\"-getDestination\")) {\n      if (arg.length \u003e 2) {\n        throw new IllegalArgumentException(\n            \"Too many arguments, Max\u003d1 argument allowed only\");\n      }\n    } else if (arg[0].equals(\"-safemode\")) {\n      if (arg.length \u003e 2) {\n        throw new IllegalArgumentException(\n            \"Too many arguments, Max\u003d1 argument allowed only\");\n      }\n    } else if (arg[0].equals(\"-nameservice\")) {\n      if (arg.length \u003e 3) {\n        throw new IllegalArgumentException(\n            \"Too many arguments, Max\u003d2 arguments allowed\");\n      }\n    } else if (arg[0].equals(\"-getDisabledNameservices\")) {\n      if (arg.length \u003e 1) {\n        throw new IllegalArgumentException(\"No arguments allowed\");\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/tools/federation/RouterAdmin.java",
      "extendedDetails": {}
    },
    "8b8ff5ccbc677d98a91092b2fa64999a99d1595d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14249. RBF: Tooling to identify the subcluster location of a file. Contributed by Inigo Goiri.\n",
      "commitDate": "24/06/19 9:33 AM",
      "commitName": "8b8ff5ccbc677d98a91092b2fa64999a99d1595d",
      "commitAuthor": "Giovanni Matteo Fumarola",
      "commitDateOld": "24/06/19 9:33 AM",
      "commitNameOld": "f4e2bfce585d762eaf26096613d135203f080eb3",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 17,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,27 @@\n   private void validateMax(String[] arg) {\n     if (arg[0].equals(\"-ls\")) {\n       if (arg.length \u003e 2) {\n         throw new IllegalArgumentException(\n             \"Too many arguments, Max\u003d1 argument allowed\");\n       }\n+    } else if (arg[0].equals(\"-getDestination\")) {\n+      if (arg.length \u003e 2) {\n+        throw new IllegalArgumentException(\n+            \"Too many arguments, Max\u003d1 argument allowed only\");\n+      }\n     } else if (arg[0].equals(\"-safemode\")) {\n       if (arg.length \u003e 2) {\n         throw new IllegalArgumentException(\n             \"Too many arguments, Max\u003d1 argument allowed only\");\n       }\n     } else if (arg[0].equals(\"-nameservice\")) {\n       if (arg.length \u003e 3) {\n         throw new IllegalArgumentException(\n             \"Too many arguments, Max\u003d2 arguments allowed\");\n       }\n     } else if (arg[0].equals(\"-getDisabledNameservices\")) {\n       if (arg.length \u003e 1) {\n         throw new IllegalArgumentException(\"No arguments allowed\");\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void validateMax(String[] arg) {\n    if (arg[0].equals(\"-ls\")) {\n      if (arg.length \u003e 2) {\n        throw new IllegalArgumentException(\n            \"Too many arguments, Max\u003d1 argument allowed\");\n      }\n    } else if (arg[0].equals(\"-getDestination\")) {\n      if (arg.length \u003e 2) {\n        throw new IllegalArgumentException(\n            \"Too many arguments, Max\u003d1 argument allowed only\");\n      }\n    } else if (arg[0].equals(\"-safemode\")) {\n      if (arg.length \u003e 2) {\n        throw new IllegalArgumentException(\n            \"Too many arguments, Max\u003d1 argument allowed only\");\n      }\n    } else if (arg[0].equals(\"-nameservice\")) {\n      if (arg.length \u003e 3) {\n        throw new IllegalArgumentException(\n            \"Too many arguments, Max\u003d2 arguments allowed\");\n      }\n    } else if (arg[0].equals(\"-getDisabledNameservices\")) {\n      if (arg.length \u003e 1) {\n        throw new IllegalArgumentException(\"No arguments allowed\");\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/tools/federation/RouterAdmin.java",
      "extendedDetails": {}
    },
    "41c94a636b1a6ede9fa9cabff5487d305d06b48f": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13906. RBF: Add multiple paths for dfsrouteradmin \u0027rm\u0027 and \u0027clrquota\u0027 commands. Contributed by Ayush Saxena.\n",
      "commitDate": "24/06/19 9:33 AM",
      "commitName": "41c94a636b1a6ede9fa9cabff5487d305d06b48f",
      "commitAuthor": "Vinayakumar B",
      "commitDateOld": "02/10/18 8:48 PM",
      "commitNameOld": "fa7f7078a713c44783425195a891582bcf8a6d5c",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 264.53,
      "commitsBetweenForRepo": 1925,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,22 @@\n   private void validateMax(String[] arg) {\n-    if (arg[0].equals(\"-rm\")) {\n-      if (arg.length \u003e 2) {\n-        throw new IllegalArgumentException(\n-            \"Too many arguments, Max\u003d1 argument allowed\");\n-      }\n-    } else if (arg[0].equals(\"-ls\")) {\n-      if (arg.length \u003e 2) {\n-        throw new IllegalArgumentException(\n-            \"Too many arguments, Max\u003d1 argument allowed\");\n-      }\n-    } else if (arg[0].equals(\"-clrQuota\")) {\n+    if (arg[0].equals(\"-ls\")) {\n       if (arg.length \u003e 2) {\n         throw new IllegalArgumentException(\n             \"Too many arguments, Max\u003d1 argument allowed\");\n       }\n     } else if (arg[0].equals(\"-safemode\")) {\n       if (arg.length \u003e 2) {\n         throw new IllegalArgumentException(\n             \"Too many arguments, Max\u003d1 argument allowed only\");\n       }\n     } else if (arg[0].equals(\"-nameservice\")) {\n       if (arg.length \u003e 3) {\n         throw new IllegalArgumentException(\n             \"Too many arguments, Max\u003d2 arguments allowed\");\n       }\n     } else if (arg[0].equals(\"-getDisabledNameservices\")) {\n       if (arg.length \u003e 1) {\n         throw new IllegalArgumentException(\"No arguments allowed\");\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void validateMax(String[] arg) {\n    if (arg[0].equals(\"-ls\")) {\n      if (arg.length \u003e 2) {\n        throw new IllegalArgumentException(\n            \"Too many arguments, Max\u003d1 argument allowed\");\n      }\n    } else if (arg[0].equals(\"-safemode\")) {\n      if (arg.length \u003e 2) {\n        throw new IllegalArgumentException(\n            \"Too many arguments, Max\u003d1 argument allowed only\");\n      }\n    } else if (arg[0].equals(\"-nameservice\")) {\n      if (arg.length \u003e 3) {\n        throw new IllegalArgumentException(\n            \"Too many arguments, Max\u003d2 arguments allowed\");\n      }\n    } else if (arg[0].equals(\"-getDisabledNameservices\")) {\n      if (arg.length \u003e 1) {\n        throw new IllegalArgumentException(\"No arguments allowed\");\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/tools/federation/RouterAdmin.java",
      "extendedDetails": {}
    },
    "780df9034f265a8e602856b34cc21d9be02f5c48": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-13867. RBF: Add validation for max arguments for Router admin ls, clrQuota, setQuota, rm and nameservice commands. Contributed by Ayush Saxena.\n",
      "commitDate": "03/09/18 1:58 AM",
      "commitName": "780df9034f265a8e602856b34cc21d9be02f5c48",
      "commitAuthor": "Vinayakumar B",
      "diff": "@@ -0,0 +1,32 @@\n+  private void validateMax(String[] arg) {\n+    if (arg[0].equals(\"-rm\")) {\n+      if (arg.length \u003e 2) {\n+        throw new IllegalArgumentException(\n+            \"Too many arguments, Max\u003d1 argument allowed\");\n+      }\n+    } else if (arg[0].equals(\"-ls\")) {\n+      if (arg.length \u003e 2) {\n+        throw new IllegalArgumentException(\n+            \"Too many arguments, Max\u003d1 argument allowed\");\n+      }\n+    } else if (arg[0].equals(\"-clrQuota\")) {\n+      if (arg.length \u003e 2) {\n+        throw new IllegalArgumentException(\n+            \"Too many arguments, Max\u003d1 argument allowed\");\n+      }\n+    } else if (arg[0].equals(\"-safemode\")) {\n+      if (arg.length \u003e 2) {\n+        throw new IllegalArgumentException(\n+            \"Too many arguments, Max\u003d1 argument allowed only\");\n+      }\n+    } else if (arg[0].equals(\"-nameservice\")) {\n+      if (arg.length \u003e 3) {\n+        throw new IllegalArgumentException(\n+            \"Too many arguments, Max\u003d2 arguments allowed\");\n+      }\n+    } else if (arg[0].equals(\"-getDisabledNameservices\")) {\n+      if (arg.length \u003e 1) {\n+        throw new IllegalArgumentException(\"No arguments allowed\");\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void validateMax(String[] arg) {\n    if (arg[0].equals(\"-rm\")) {\n      if (arg.length \u003e 2) {\n        throw new IllegalArgumentException(\n            \"Too many arguments, Max\u003d1 argument allowed\");\n      }\n    } else if (arg[0].equals(\"-ls\")) {\n      if (arg.length \u003e 2) {\n        throw new IllegalArgumentException(\n            \"Too many arguments, Max\u003d1 argument allowed\");\n      }\n    } else if (arg[0].equals(\"-clrQuota\")) {\n      if (arg.length \u003e 2) {\n        throw new IllegalArgumentException(\n            \"Too many arguments, Max\u003d1 argument allowed\");\n      }\n    } else if (arg[0].equals(\"-safemode\")) {\n      if (arg.length \u003e 2) {\n        throw new IllegalArgumentException(\n            \"Too many arguments, Max\u003d1 argument allowed only\");\n      }\n    } else if (arg[0].equals(\"-nameservice\")) {\n      if (arg.length \u003e 3) {\n        throw new IllegalArgumentException(\n            \"Too many arguments, Max\u003d2 arguments allowed\");\n      }\n    } else if (arg[0].equals(\"-getDisabledNameservices\")) {\n      if (arg.length \u003e 1) {\n        throw new IllegalArgumentException(\"No arguments allowed\");\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/tools/federation/RouterAdmin.java"
    }
  }
}