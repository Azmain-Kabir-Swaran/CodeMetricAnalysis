{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AbstractDelegationTokenSecretManager.java",
  "functionName": "checkToken",
  "functionId": "checkToken___identifier-TokenIdent",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java",
  "functionStartLine": 435,
  "functionEndLine": 450,
  "numCommitsSeen": 32,
  "timeTaken": 1778,
  "changeHistory": [
    "fd2f22adec5c2f21f792045dbfde9385c21403ec",
    "db890eef3208cc557476fa510f7a253ba22bc68a",
    "f7eaacc103344f5fd81dd69584c93fb99d8b94c9"
  ],
  "changeHistoryShort": {
    "fd2f22adec5c2f21f792045dbfde9385c21403ec": "Ybodychange",
    "db890eef3208cc557476fa510f7a253ba22bc68a": "Ybodychange",
    "f7eaacc103344f5fd81dd69584c93fb99d8b94c9": "Yintroduced"
  },
  "changeHistoryDetails": {
    "fd2f22adec5c2f21f792045dbfde9385c21403ec": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13720. Add more info to the msgs printed in AbstractDelegationTokenSecretManager. Contributed by Yongjun Zhang.\n",
      "commitDate": "10/11/16 10:42 PM",
      "commitName": "fd2f22adec5c2f21f792045dbfde9385c21403ec",
      "commitAuthor": "Yongjun Zhang",
      "commitDateOld": "20/09/16 1:20 PM",
      "commitNameOld": "e80386d69d5fb6a08aa3366e42d2518747af569f",
      "commitAuthorOld": "Mingliang Liu",
      "daysBetweenCommits": 51.43,
      "commitsBetweenForRepo": 451,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,16 @@\n   protected DelegationTokenInformation checkToken(TokenIdent identifier)\n       throws InvalidToken {\n     assert Thread.holdsLock(this);\n     DelegationTokenInformation info \u003d getTokenInfo(identifier);\n     if (info \u003d\u003d null) {\n-      throw new InvalidToken(\"token (\" + identifier.toString()\n-          + \") can\u0027t be found in cache\");\n+      throw new InvalidToken(\"token \" + formatTokenId(identifier)\n+          + \" can\u0027t be found in cache\");\n     }\n-    if (info.getRenewDate() \u003c Time.now()) {\n-      throw new InvalidToken(\"token (\" + identifier.toString() + \") is expired\");\n+    long now \u003d Time.now();\n+    if (info.getRenewDate() \u003c now) {\n+      throw new InvalidToken(\"token \" + formatTokenId(identifier) + \" is \" +\n+          \"expired, current time: \" + Time.formatTime(now) +\n+          \" expected renewal time: \" + Time.formatTime(info.getRenewDate()));\n     }\n     return info;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected DelegationTokenInformation checkToken(TokenIdent identifier)\n      throws InvalidToken {\n    assert Thread.holdsLock(this);\n    DelegationTokenInformation info \u003d getTokenInfo(identifier);\n    if (info \u003d\u003d null) {\n      throw new InvalidToken(\"token \" + formatTokenId(identifier)\n          + \" can\u0027t be found in cache\");\n    }\n    long now \u003d Time.now();\n    if (info.getRenewDate() \u003c now) {\n      throw new InvalidToken(\"token \" + formatTokenId(identifier) + \" is \" +\n          \"expired, current time: \" + Time.formatTime(now) +\n          \" expected renewal time: \" + Time.formatTime(info.getRenewDate()));\n    }\n    return info;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java",
      "extendedDetails": {}
    },
    "db890eef3208cc557476fa510f7a253ba22bc68a": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11017. KMS delegation token secret manager should be able to use zookeeper as store. (asuresh via tucu)\n",
      "commitDate": "20/09/14 8:21 AM",
      "commitName": "db890eef3208cc557476fa510f7a253ba22bc68a",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "02/05/14 11:38 AM",
      "commitNameOld": "bee448cacd142a4125e60c840022b65cc5fe9efa",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 140.86,
      "commitsBetweenForRepo": 1122,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n   protected DelegationTokenInformation checkToken(TokenIdent identifier)\n       throws InvalidToken {\n     assert Thread.holdsLock(this);\n-    DelegationTokenInformation info \u003d currentTokens.get(identifier);\n+    DelegationTokenInformation info \u003d getTokenInfo(identifier);\n     if (info \u003d\u003d null) {\n       throw new InvalidToken(\"token (\" + identifier.toString()\n           + \") can\u0027t be found in cache\");\n     }\n     if (info.getRenewDate() \u003c Time.now()) {\n       throw new InvalidToken(\"token (\" + identifier.toString() + \") is expired\");\n     }\n     return info;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected DelegationTokenInformation checkToken(TokenIdent identifier)\n      throws InvalidToken {\n    assert Thread.holdsLock(this);\n    DelegationTokenInformation info \u003d getTokenInfo(identifier);\n    if (info \u003d\u003d null) {\n      throw new InvalidToken(\"token (\" + identifier.toString()\n          + \") can\u0027t be found in cache\");\n    }\n    if (info.getRenewDate() \u003c Time.now()) {\n      throw new InvalidToken(\"token (\" + identifier.toString() + \") is expired\");\n    }\n    return info;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java",
      "extendedDetails": {}
    },
    "f7eaacc103344f5fd81dd69584c93fb99d8b94c9": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-5322. HDFS delegation token not found in cache errors seen on secure HA clusters. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1531436 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/10/13 2:49 PM",
      "commitName": "f7eaacc103344f5fd81dd69584c93fb99d8b94c9",
      "commitAuthor": "Jing Zhao",
      "diff": "@@ -0,0 +1,13 @@\n+  protected DelegationTokenInformation checkToken(TokenIdent identifier)\n+      throws InvalidToken {\n+    assert Thread.holdsLock(this);\n+    DelegationTokenInformation info \u003d currentTokens.get(identifier);\n+    if (info \u003d\u003d null) {\n+      throw new InvalidToken(\"token (\" + identifier.toString()\n+          + \") can\u0027t be found in cache\");\n+    }\n+    if (info.getRenewDate() \u003c Time.now()) {\n+      throw new InvalidToken(\"token (\" + identifier.toString() + \") is expired\");\n+    }\n+    return info;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected DelegationTokenInformation checkToken(TokenIdent identifier)\n      throws InvalidToken {\n    assert Thread.holdsLock(this);\n    DelegationTokenInformation info \u003d currentTokens.get(identifier);\n    if (info \u003d\u003d null) {\n      throw new InvalidToken(\"token (\" + identifier.toString()\n          + \") can\u0027t be found in cache\");\n    }\n    if (info.getRenewDate() \u003c Time.now()) {\n      throw new InvalidToken(\"token (\" + identifier.toString() + \") is expired\");\n    }\n    return info;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/AbstractDelegationTokenSecretManager.java"
    }
  }
}