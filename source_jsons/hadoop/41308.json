{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSAppAttempt.java",
  "functionName": "getUsageAfterPreemptingContainer",
  "functionId": "getUsageAfterPreemptingContainer___containerResources-Resource__alreadyConsideringForPreemption-Resource",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSAppAttempt.java",
  "functionStartLine": 626,
  "functionEndLine": 642,
  "numCommitsSeen": 76,
  "timeTaken": 1069,
  "changeHistory": [
    "2bde3aedf139368fc71f053d8dd6580b498ff46d"
  ],
  "changeHistoryShort": {
    "2bde3aedf139368fc71f053d8dd6580b498ff46d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2bde3aedf139368fc71f053d8dd6580b498ff46d": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7290. Method canContainerBePreempted can return true when it shouldn\u0027t. (Contributed by Steven Rand)\n",
      "commitDate": "24/11/17 11:32 PM",
      "commitName": "2bde3aedf139368fc71f053d8dd6580b498ff46d",
      "commitAuthor": "Yufei Gu",
      "diff": "@@ -0,0 +1,17 @@\n+  private Resource getUsageAfterPreemptingContainer(Resource containerResources,\n+          Resource alreadyConsideringForPreemption) {\n+    Resource usageAfterPreemption \u003d Resources.clone(getResourceUsage());\n+\n+    // Subtract resources of containers already queued for preemption\n+    synchronized (preemptionVariablesLock) {\n+      Resources.subtractFrom(usageAfterPreemption, resourcesToBePreempted);\n+    }\n+\n+    // Subtract resources of this container and other containers of this app\n+    // that the FSPreemptionThread is already considering for preemption.\n+    Resources.subtractFrom(usageAfterPreemption, containerResources);\n+    Resources.subtractFrom(usageAfterPreemption,\n+            alreadyConsideringForPreemption);\n+\n+    return usageAfterPreemption;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private Resource getUsageAfterPreemptingContainer(Resource containerResources,\n          Resource alreadyConsideringForPreemption) {\n    Resource usageAfterPreemption \u003d Resources.clone(getResourceUsage());\n\n    // Subtract resources of containers already queued for preemption\n    synchronized (preemptionVariablesLock) {\n      Resources.subtractFrom(usageAfterPreemption, resourcesToBePreempted);\n    }\n\n    // Subtract resources of this container and other containers of this app\n    // that the FSPreemptionThread is already considering for preemption.\n    Resources.subtractFrom(usageAfterPreemption, containerResources);\n    Resources.subtractFrom(usageAfterPreemption,\n            alreadyConsideringForPreemption);\n\n    return usageAfterPreemption;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSAppAttempt.java"
    }
  }
}