{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RouterClientProtocol.java",
  "functionName": "getFileInfoAll",
  "functionId": "getFileInfoAll___locations-List__RemoteLocation__(modifiers-final)__method-RemoteMethod(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterClientProtocol.java",
  "functionStartLine": 1912,
  "functionEndLine": 1915,
  "numCommitsSeen": 64,
  "timeTaken": 3310,
  "changeHistory": [
    "6c42d4050461ab71c88f123569649793dc53aebd",
    "b320caecb32e0eb739ad925a4646bef1a85caebd",
    "6425ed27ea638da75f656204d6df4adad1d91fe1",
    "fb5b3dce6192265bce9b9d93ab663bdc5be8048e"
  ],
  "changeHistoryShort": {
    "6c42d4050461ab71c88f123569649793dc53aebd": "Ybodychange",
    "b320caecb32e0eb739ad925a4646bef1a85caebd": "Ybodychange",
    "6425ed27ea638da75f656204d6df4adad1d91fe1": "Ymovefromfile",
    "fb5b3dce6192265bce9b9d93ab663bdc5be8048e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6c42d4050461ab71c88f123569649793dc53aebd": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14316. RBF: Support unavailable subclusters for mount points with multiple destinations. Contributed by Inigo Goiri.\n",
      "commitDate": "24/06/19 9:33 AM",
      "commitName": "6c42d4050461ab71c88f123569649793dc53aebd",
      "commitAuthor": "Ayush Saxena",
      "commitDateOld": "24/06/19 9:33 AM",
      "commitNameOld": "f539e2a4ee93c4ee479fe25e8062c8ab4c7f8ba8",
      "commitAuthorOld": "Giovanni Matteo Fumarola",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,4 @@\n   private HdfsFileStatus getFileInfoAll(final List\u003cRemoteLocation\u003e locations,\n       final RemoteMethod method) throws IOException {\n-\n-    // Get the file info from everybody\n-    Map\u003cRemoteLocation, HdfsFileStatus\u003e results \u003d\n-        rpcClient.invokeConcurrent(locations, method, HdfsFileStatus.class);\n-    int children \u003d 0;\n-    // We return the first file\n-    HdfsFileStatus dirStatus \u003d null;\n-    for (RemoteLocation loc : locations) {\n-      HdfsFileStatus fileStatus \u003d results.get(loc);\n-      if (fileStatus !\u003d null) {\n-        children +\u003d fileStatus.getChildrenNum();\n-        if (!fileStatus.isDirectory()) {\n-          return fileStatus;\n-        } else if (dirStatus \u003d\u003d null) {\n-          dirStatus \u003d fileStatus;\n-        }\n-      }\n-    }\n-    if (dirStatus !\u003d null) {\n-      return updateMountPointStatus(dirStatus, children);\n-    }\n-    return null;\n+    return getFileInfoAll(locations, method, -1);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private HdfsFileStatus getFileInfoAll(final List\u003cRemoteLocation\u003e locations,\n      final RemoteMethod method) throws IOException {\n    return getFileInfoAll(locations, method, -1);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterClientProtocol.java",
      "extendedDetails": {}
    },
    "b320caecb32e0eb739ad925a4646bef1a85caebd": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14085. RBF: LS command for root shows wrong owner and permission information. Contributed by Ayush Saxena.\n",
      "commitDate": "24/06/19 9:33 AM",
      "commitName": "b320caecb32e0eb739ad925a4646bef1a85caebd",
      "commitAuthor": "Surendra Singh Lilhore",
      "commitDateOld": "24/06/19 9:33 AM",
      "commitNameOld": "f2355c706361594b7b2ef8b65b37060eab1d66df",
      "commitAuthorOld": "Brahma Reddy Battula",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,25 @@\n   private HdfsFileStatus getFileInfoAll(final List\u003cRemoteLocation\u003e locations,\n       final RemoteMethod method) throws IOException {\n \n     // Get the file info from everybody\n     Map\u003cRemoteLocation, HdfsFileStatus\u003e results \u003d\n         rpcClient.invokeConcurrent(locations, method, HdfsFileStatus.class);\n-\n+    int children\u003d0;\n     // We return the first file\n     HdfsFileStatus dirStatus \u003d null;\n     for (RemoteLocation loc : locations) {\n       HdfsFileStatus fileStatus \u003d results.get(loc);\n       if (fileStatus !\u003d null) {\n+        children +\u003d fileStatus.getChildrenNum();\n         if (!fileStatus.isDirectory()) {\n           return fileStatus;\n         } else if (dirStatus \u003d\u003d null) {\n           dirStatus \u003d fileStatus;\n         }\n       }\n     }\n-    return dirStatus;\n+    if (dirStatus !\u003d null) {\n+      return updateMountPointStatus(dirStatus, children);\n+    }\n+    return null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private HdfsFileStatus getFileInfoAll(final List\u003cRemoteLocation\u003e locations,\n      final RemoteMethod method) throws IOException {\n\n    // Get the file info from everybody\n    Map\u003cRemoteLocation, HdfsFileStatus\u003e results \u003d\n        rpcClient.invokeConcurrent(locations, method, HdfsFileStatus.class);\n    int children\u003d0;\n    // We return the first file\n    HdfsFileStatus dirStatus \u003d null;\n    for (RemoteLocation loc : locations) {\n      HdfsFileStatus fileStatus \u003d results.get(loc);\n      if (fileStatus !\u003d null) {\n        children +\u003d fileStatus.getChildrenNum();\n        if (!fileStatus.isDirectory()) {\n          return fileStatus;\n        } else if (dirStatus \u003d\u003d null) {\n          dirStatus \u003d fileStatus;\n        }\n      }\n    }\n    if (dirStatus !\u003d null) {\n      return updateMountPointStatus(dirStatus, children);\n    }\n    return null;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterClientProtocol.java",
      "extendedDetails": {}
    },
    "6425ed27ea638da75f656204d6df4adad1d91fe1": {
      "type": "Ymovefromfile",
      "commitMessage": "HDFS-13790. RBF: Move ClientProtocol APIs to its own module. Contributed by Chao Sun.\n",
      "commitDate": "19/08/18 11:50 PM",
      "commitName": "6425ed27ea638da75f656204d6df4adad1d91fe1",
      "commitAuthor": "Brahma Reddy Battula",
      "commitDateOld": "17/08/18 9:56 PM",
      "commitNameOld": "4aacbfff605262aaf3dbd926258afcadc86c72c0",
      "commitAuthorOld": "Rohith Sharma K S",
      "daysBetweenCommits": 2.08,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private HdfsFileStatus getFileInfoAll(final List\u003cRemoteLocation\u003e locations,\n      final RemoteMethod method) throws IOException {\n\n    // Get the file info from everybody\n    Map\u003cRemoteLocation, HdfsFileStatus\u003e results \u003d\n        rpcClient.invokeConcurrent(locations, method, HdfsFileStatus.class);\n\n    // We return the first file\n    HdfsFileStatus dirStatus \u003d null;\n    for (RemoteLocation loc : locations) {\n      HdfsFileStatus fileStatus \u003d results.get(loc);\n      if (fileStatus !\u003d null) {\n        if (!fileStatus.isDirectory()) {\n          return fileStatus;\n        } else if (dirStatus \u003d\u003d null) {\n          dirStatus \u003d fileStatus;\n        }\n      }\n    }\n    return dirStatus;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterClientProtocol.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterRpcServer.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterClientProtocol.java",
        "oldMethodName": "getFileInfoAll",
        "newMethodName": "getFileInfoAll"
      }
    },
    "fb5b3dce6192265bce9b9d93ab663bdc5be8048e": {
      "type": "Yintroduced",
      "commitMessage": "Revert \"HDFS-13790. RBF: Move ClientProtocol APIs to its own module. Contributed by Chao Sun.\"\n\nThis reverts commit fa121eb66bc42e9cb5586f8c2e268cfdc2ed187a.\n",
      "commitDate": "17/08/18 8:01 AM",
      "commitName": "fb5b3dce6192265bce9b9d93ab663bdc5be8048e",
      "commitAuthor": "Xiaoyu Yao",
      "diff": "@@ -0,0 +1,21 @@\n+  private HdfsFileStatus getFileInfoAll(final List\u003cRemoteLocation\u003e locations,\n+      final RemoteMethod method) throws IOException {\n+\n+    // Get the file info from everybody\n+    Map\u003cRemoteLocation, HdfsFileStatus\u003e results \u003d\n+        rpcClient.invokeConcurrent(locations, method, HdfsFileStatus.class);\n+\n+    // We return the first file\n+    HdfsFileStatus dirStatus \u003d null;\n+    for (RemoteLocation loc : locations) {\n+      HdfsFileStatus fileStatus \u003d results.get(loc);\n+      if (fileStatus !\u003d null) {\n+        if (!fileStatus.isDirectory()) {\n+          return fileStatus;\n+        } else if (dirStatus \u003d\u003d null) {\n+          dirStatus \u003d fileStatus;\n+        }\n+      }\n+    }\n+    return dirStatus;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private HdfsFileStatus getFileInfoAll(final List\u003cRemoteLocation\u003e locations,\n      final RemoteMethod method) throws IOException {\n\n    // Get the file info from everybody\n    Map\u003cRemoteLocation, HdfsFileStatus\u003e results \u003d\n        rpcClient.invokeConcurrent(locations, method, HdfsFileStatus.class);\n\n    // We return the first file\n    HdfsFileStatus dirStatus \u003d null;\n    for (RemoteLocation loc : locations) {\n      HdfsFileStatus fileStatus \u003d results.get(loc);\n      if (fileStatus !\u003d null) {\n        if (!fileStatus.isDirectory()) {\n          return fileStatus;\n        } else if (dirStatus \u003d\u003d null) {\n          dirStatus \u003d fileStatus;\n        }\n      }\n    }\n    return dirStatus;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterRpcServer.java"
    }
  }
}