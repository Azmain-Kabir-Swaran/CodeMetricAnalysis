{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSImageLoader.java",
  "functionName": "loadINodeReferenceSection",
  "functionId": "loadINodeReferenceSection___in-InputStream",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/FSImageLoader.java",
  "functionStartLine": 215,
  "functionEndLine": 232,
  "numCommitsSeen": 22,
  "timeTaken": 1688,
  "changeHistory": [
    "9d494f0c0eaa05417f3a3e88487d878d1731da36",
    "1f5b42ac4881b734c799bfb527884c0d117929bd",
    "54c1daa580e1cceee541be86fc2b694fa1be26df"
  ],
  "changeHistoryShort": {
    "9d494f0c0eaa05417f3a3e88487d878d1731da36": "Ymodifierchange",
    "1f5b42ac4881b734c799bfb527884c0d117929bd": "Ymultichange(Yreturntypechange,Ybodychange)",
    "54c1daa580e1cceee541be86fc2b694fa1be26df": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9d494f0c0eaa05417f3a3e88487d878d1731da36": {
      "type": "Ymodifierchange",
      "commitMessage": "HDFS-9721. Allow Delimited PB OIV tool to run upon fsimage that contains INodeReference. (Xiao Chen via lei)\n",
      "commitDate": "02/02/16 10:42 AM",
      "commitName": "9d494f0c0eaa05417f3a3e88487d878d1731da36",
      "commitAuthor": "Lei Xu",
      "commitDateOld": "12/08/15 7:31 PM",
      "commitNameOld": "40f815131e822f5b7a8e6a6827f4b85b31220c43",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 173.67,
      "commitsBetweenForRepo": 1180,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n-  private static ImmutableList\u003cLong\u003e loadINodeReferenceSection(InputStream in)\n+  static ImmutableList\u003cLong\u003e loadINodeReferenceSection(InputStream in)\n       throws IOException {\n     LOG.info(\"Loading inode references\");\n     ImmutableList.Builder\u003cLong\u003e builder \u003d ImmutableList.builder();\n     long counter \u003d 0;\n     while (true) {\n       FsImageProto.INodeReferenceSection.INodeReference e \u003d\n           FsImageProto.INodeReferenceSection.INodeReference\n               .parseDelimitedFrom(in);\n       if (e \u003d\u003d null) {\n         break;\n       }\n       ++counter;\n       builder.add(e.getReferredId());\n     }\n     LOG.info(\"Loaded \" + counter + \" inode references\");\n     return builder.build();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static ImmutableList\u003cLong\u003e loadINodeReferenceSection(InputStream in)\n      throws IOException {\n    LOG.info(\"Loading inode references\");\n    ImmutableList.Builder\u003cLong\u003e builder \u003d ImmutableList.builder();\n    long counter \u003d 0;\n    while (true) {\n      FsImageProto.INodeReferenceSection.INodeReference e \u003d\n          FsImageProto.INodeReferenceSection.INodeReference\n              .parseDelimitedFrom(in);\n      if (e \u003d\u003d null) {\n        break;\n      }\n      ++counter;\n      builder.add(e.getReferredId());\n    }\n    LOG.info(\"Loaded \" + counter + \" inode references\");\n    return builder.build();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/FSImageLoader.java",
      "extendedDetails": {
        "oldValue": "[private, static]",
        "newValue": "[static]"
      }
    },
    "1f5b42ac4881b734c799bfb527884c0d117929bd": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-7158. Reduce the memory usage of WebImageViewer. Contributed by Haohui Mai.\n",
      "commitDate": "01/10/14 10:53 AM",
      "commitName": "1f5b42ac4881b734c799bfb527884c0d117929bd",
      "commitAuthor": "Haohui Mai",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-7158. Reduce the memory usage of WebImageViewer. Contributed by Haohui Mai.\n",
          "commitDate": "01/10/14 10:53 AM",
          "commitName": "1f5b42ac4881b734c799bfb527884c0d117929bd",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "29/09/14 10:27 PM",
          "commitNameOld": "bb84f1fccb18c6c7373851e05d2451d55e908242",
          "commitAuthorOld": "arp",
          "daysBetweenCommits": 1.52,
          "commitsBetweenForRepo": 22,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,18 @@\n-  private static void loadINodeReferenceSection(InputStream in)\n+  private static ImmutableList\u003cLong\u003e loadINodeReferenceSection(InputStream in)\n       throws IOException {\n-    if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"Loading inode reference section\");\n-    }\n+    LOG.info(\"Loading inode references\");\n+    ImmutableList.Builder\u003cLong\u003e builder \u003d ImmutableList.builder();\n+    long counter \u003d 0;\n     while (true) {\n       FsImageProto.INodeReferenceSection.INodeReference e \u003d\n           FsImageProto.INodeReferenceSection.INodeReference\n               .parseDelimitedFrom(in);\n       if (e \u003d\u003d null) {\n         break;\n       }\n-      refList.add(e);\n-      if (LOG.isTraceEnabled()) {\n-        LOG.trace(\"Loaded inode reference named \u0027\" + e.getName()\n-            + \"\u0027 referring to id \" + e.getReferredId() + \"\");\n-      }\n+      ++counter;\n+      builder.add(e.getReferredId());\n     }\n-    if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"Loaded \" + refList.size() + \" inode references\");\n-    }\n+    LOG.info(\"Loaded \" + counter + \" inode references\");\n+    return builder.build();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static ImmutableList\u003cLong\u003e loadINodeReferenceSection(InputStream in)\n      throws IOException {\n    LOG.info(\"Loading inode references\");\n    ImmutableList.Builder\u003cLong\u003e builder \u003d ImmutableList.builder();\n    long counter \u003d 0;\n    while (true) {\n      FsImageProto.INodeReferenceSection.INodeReference e \u003d\n          FsImageProto.INodeReferenceSection.INodeReference\n              .parseDelimitedFrom(in);\n      if (e \u003d\u003d null) {\n        break;\n      }\n      ++counter;\n      builder.add(e.getReferredId());\n    }\n    LOG.info(\"Loaded \" + counter + \" inode references\");\n    return builder.build();\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/FSImageLoader.java",
          "extendedDetails": {
            "oldValue": "void",
            "newValue": "ImmutableList\u003cLong\u003e"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-7158. Reduce the memory usage of WebImageViewer. Contributed by Haohui Mai.\n",
          "commitDate": "01/10/14 10:53 AM",
          "commitName": "1f5b42ac4881b734c799bfb527884c0d117929bd",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "29/09/14 10:27 PM",
          "commitNameOld": "bb84f1fccb18c6c7373851e05d2451d55e908242",
          "commitAuthorOld": "arp",
          "daysBetweenCommits": 1.52,
          "commitsBetweenForRepo": 22,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,18 @@\n-  private static void loadINodeReferenceSection(InputStream in)\n+  private static ImmutableList\u003cLong\u003e loadINodeReferenceSection(InputStream in)\n       throws IOException {\n-    if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"Loading inode reference section\");\n-    }\n+    LOG.info(\"Loading inode references\");\n+    ImmutableList.Builder\u003cLong\u003e builder \u003d ImmutableList.builder();\n+    long counter \u003d 0;\n     while (true) {\n       FsImageProto.INodeReferenceSection.INodeReference e \u003d\n           FsImageProto.INodeReferenceSection.INodeReference\n               .parseDelimitedFrom(in);\n       if (e \u003d\u003d null) {\n         break;\n       }\n-      refList.add(e);\n-      if (LOG.isTraceEnabled()) {\n-        LOG.trace(\"Loaded inode reference named \u0027\" + e.getName()\n-            + \"\u0027 referring to id \" + e.getReferredId() + \"\");\n-      }\n+      ++counter;\n+      builder.add(e.getReferredId());\n     }\n-    if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"Loaded \" + refList.size() + \" inode references\");\n-    }\n+    LOG.info(\"Loaded \" + counter + \" inode references\");\n+    return builder.build();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static ImmutableList\u003cLong\u003e loadINodeReferenceSection(InputStream in)\n      throws IOException {\n    LOG.info(\"Loading inode references\");\n    ImmutableList.Builder\u003cLong\u003e builder \u003d ImmutableList.builder();\n    long counter \u003d 0;\n    while (true) {\n      FsImageProto.INodeReferenceSection.INodeReference e \u003d\n          FsImageProto.INodeReferenceSection.INodeReference\n              .parseDelimitedFrom(in);\n      if (e \u003d\u003d null) {\n        break;\n      }\n      ++counter;\n      builder.add(e.getReferredId());\n    }\n    LOG.info(\"Loaded \" + counter + \" inode references\");\n    return builder.build();\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/FSImageLoader.java",
          "extendedDetails": {}
        }
      ]
    },
    "54c1daa580e1cceee541be86fc2b694fa1be26df": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-5978. Create a tool to take fsimage and expose read-only WebHDFS API. Contributed by Akira Ajisaka.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1582433 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/03/14 11:15 AM",
      "commitName": "54c1daa580e1cceee541be86fc2b694fa1be26df",
      "commitAuthor": "Haohui Mai",
      "diff": "@@ -0,0 +1,22 @@\n+  private static void loadINodeReferenceSection(InputStream in)\n+      throws IOException {\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"Loading inode reference section\");\n+    }\n+    while (true) {\n+      FsImageProto.INodeReferenceSection.INodeReference e \u003d\n+          FsImageProto.INodeReferenceSection.INodeReference\n+              .parseDelimitedFrom(in);\n+      if (e \u003d\u003d null) {\n+        break;\n+      }\n+      refList.add(e);\n+      if (LOG.isTraceEnabled()) {\n+        LOG.trace(\"Loaded inode reference named \u0027\" + e.getName()\n+            + \"\u0027 referring to id \" + e.getReferredId() + \"\");\n+      }\n+    }\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"Loaded \" + refList.size() + \" inode references\");\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static void loadINodeReferenceSection(InputStream in)\n      throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Loading inode reference section\");\n    }\n    while (true) {\n      FsImageProto.INodeReferenceSection.INodeReference e \u003d\n          FsImageProto.INodeReferenceSection.INodeReference\n              .parseDelimitedFrom(in);\n      if (e \u003d\u003d null) {\n        break;\n      }\n      refList.add(e);\n      if (LOG.isTraceEnabled()) {\n        LOG.trace(\"Loaded inode reference named \u0027\" + e.getName()\n            + \"\u0027 referring to id \" + e.getReferredId() + \"\");\n      }\n    }\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Loaded \" + refList.size() + \" inode references\");\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/FSImageLoader.java"
    }
  }
}