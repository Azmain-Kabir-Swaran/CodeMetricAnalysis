{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SharedFileDescriptorFactory.java",
  "functionName": "create",
  "functionId": "create___prefix-String__paths-String[]",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/nativeio/SharedFileDescriptorFactory.java",
  "functionStartLine": 74,
  "functionEndLine": 100,
  "numCommitsSeen": 6,
  "timeTaken": 619,
  "changeHistory": [
    "5a3f614794f6669ef2a15307e810b373b653776a"
  ],
  "changeHistoryShort": {
    "5a3f614794f6669ef2a15307e810b373b653776a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5a3f614794f6669ef2a15307e810b373b653776a": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-6061. Allow dfs.datanode.shared.file.descriptor.path to contain multiple entries and fall back when needed (cmccabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1574796 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/03/14 12:21 AM",
      "commitName": "5a3f614794f6669ef2a15307e810b373b653776a",
      "commitAuthor": "Colin McCabe",
      "diff": "@@ -0,0 +1,27 @@\n+  public static SharedFileDescriptorFactory create(String prefix,\n+      String paths[]) throws IOException {\n+    String loadingFailureReason \u003d getLoadingFailureReason();\n+    if (loadingFailureReason !\u003d null) {\n+      throw new IOException(loadingFailureReason);\n+    }\n+    if (paths.length \u003d\u003d 0) {\n+      throw new IOException(\"no SharedFileDescriptorFactory paths were \" +\n+          \"configured.\");\n+    }\n+    StringBuilder errors \u003d new StringBuilder();\n+    String strPrefix \u003d \"\";\n+    for (String path : paths) {\n+      try {\n+        FileInputStream fis \u003d \n+            new FileInputStream(createDescriptor0(prefix + \"test\", path, 1));\n+        fis.close();\n+        deleteStaleTemporaryFiles0(prefix, path);\n+        return new SharedFileDescriptorFactory(prefix, path);\n+      } catch (IOException e) {\n+        errors.append(strPrefix).append(\"Error creating file descriptor in \").\n+               append(path).append(\": \").append(e.getMessage());\n+        strPrefix \u003d \", \";\n+      }\n+    }\n+    throw new IOException(errors.toString());\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static SharedFileDescriptorFactory create(String prefix,\n      String paths[]) throws IOException {\n    String loadingFailureReason \u003d getLoadingFailureReason();\n    if (loadingFailureReason !\u003d null) {\n      throw new IOException(loadingFailureReason);\n    }\n    if (paths.length \u003d\u003d 0) {\n      throw new IOException(\"no SharedFileDescriptorFactory paths were \" +\n          \"configured.\");\n    }\n    StringBuilder errors \u003d new StringBuilder();\n    String strPrefix \u003d \"\";\n    for (String path : paths) {\n      try {\n        FileInputStream fis \u003d \n            new FileInputStream(createDescriptor0(prefix + \"test\", path, 1));\n        fis.close();\n        deleteStaleTemporaryFiles0(prefix, path);\n        return new SharedFileDescriptorFactory(prefix, path);\n      } catch (IOException e) {\n        errors.append(strPrefix).append(\"Error creating file descriptor in \").\n               append(path).append(\": \").append(e.getMessage());\n        strPrefix \u003d \", \";\n      }\n    }\n    throw new IOException(errors.toString());\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/nativeio/SharedFileDescriptorFactory.java"
    }
  }
}