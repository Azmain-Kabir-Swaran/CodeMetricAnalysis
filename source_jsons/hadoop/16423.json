{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Quota.java",
  "functionName": "getQuotaUsage",
  "functionId": "getQuotaUsage___path-String",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/Quota.java",
  "functionStartLine": 132,
  "functionEndLine": 134,
  "numCommitsSeen": 17,
  "timeTaken": 3329,
  "changeHistory": [
    "12617fad2eb32108412dac9ecee286de6641d060",
    "761594549ec0c6bab50a28a7eb6c741aec7239d7",
    "43f7fe8aae0eca89cce4d67bfc4965fe8ce63e38",
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d",
    "d5d6a0353bb85b882cc4ef60e3a12d63243d34ba",
    "d98a2e6e2383f8b66def346409b0517aa32d298d"
  ],
  "changeHistoryShort": {
    "12617fad2eb32108412dac9ecee286de6641d060": "Ybodychange",
    "761594549ec0c6bab50a28a7eb6c741aec7239d7": "Ybodychange",
    "43f7fe8aae0eca89cce4d67bfc4965fe8ce63e38": "Ybodychange",
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d": "Yfilerename",
    "d5d6a0353bb85b882cc4ef60e3a12d63243d34ba": "Ybodychange",
    "d98a2e6e2383f8b66def346409b0517aa32d298d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "12617fad2eb32108412dac9ecee286de6641d060": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14955. RBF: getQuotaUsage() on mount point should return global quota. Contributed by Jinglun.\n",
      "commitDate": "18/11/19 2:34 AM",
      "commitName": "12617fad2eb32108412dac9ecee286de6641d060",
      "commitAuthor": "Ayush Saxena",
      "commitDateOld": "07/11/19 7:18 PM",
      "commitNameOld": "42fc8884ab9763e8778670f301896bf473ecf1d2",
      "commitAuthorOld": "Ayush Saxena",
      "daysBetweenCommits": 10.3,
      "commitsBetweenForRepo": 34,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,3 +1,3 @@\n   public QuotaUsage getQuotaUsage(String path) throws IOException {\n-    return aggregateQuota(getEachQuotaUsage(path));\n+    return aggregateQuota(path, getEachQuotaUsage(path));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public QuotaUsage getQuotaUsage(String path) throws IOException {\n    return aggregateQuota(path, getEachQuotaUsage(path));\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/Quota.java",
      "extendedDetails": {}
    },
    "761594549ec0c6bab50a28a7eb6c741aec7239d7": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14814. RBF: RouterQuotaUpdateService supports inherited rule. Contributed by Jinglun.\n",
      "commitDate": "08/10/19 1:31 AM",
      "commitName": "761594549ec0c6bab50a28a7eb6c741aec7239d7",
      "commitAuthor": "Ayush Saxena",
      "commitDateOld": "21/08/19 9:39 AM",
      "commitNameOld": "93595febaa6673eea369911c3f7fcd75d4915dbc",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 47.66,
      "commitsBetweenForRepo": 419,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,3 @@\n   public QuotaUsage getQuotaUsage(String path) throws IOException {\n-    rpcServer.checkOperation(OperationCategory.READ);\n-    if (!router.isQuotaEnabled()) {\n-      throw new IOException(\"The quota system is disabled in Router.\");\n-    }\n-\n-    final List\u003cRemoteLocation\u003e quotaLocs \u003d getValidQuotaLocations(path);\n-    RemoteMethod method \u003d new RemoteMethod(\"getQuotaUsage\",\n-        new Class\u003c?\u003e[] {String.class}, new RemoteParam());\n-    Map\u003cRemoteLocation, QuotaUsage\u003e results \u003d rpcClient.invokeConcurrent(\n-        quotaLocs, method, true, false, QuotaUsage.class);\n-\n-    return aggregateQuota(results);\n+    return aggregateQuota(getEachQuotaUsage(path));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public QuotaUsage getQuotaUsage(String path) throws IOException {\n    return aggregateQuota(getEachQuotaUsage(path));\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/Quota.java",
      "extendedDetails": {}
    },
    "43f7fe8aae0eca89cce4d67bfc4965fe8ce63e38": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13710. RBF: setQuota and getQuotaUsage should check the dfs.federation.router.quota.enable. Contributed by yanghuafeng.\n",
      "commitDate": "09/07/18 12:06 AM",
      "commitName": "43f7fe8aae0eca89cce4d67bfc4965fe8ce63e38",
      "commitAuthor": "Yiqun Lin",
      "commitDateOld": "04/07/18 12:03 AM",
      "commitNameOld": "3b637155a47d2aa93284969a96208347a647083d",
      "commitAuthorOld": "Yiqun Lin",
      "daysBetweenCommits": 5.0,
      "commitsBetweenForRepo": 17,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,14 @@\n   public QuotaUsage getQuotaUsage(String path) throws IOException {\n+    rpcServer.checkOperation(OperationCategory.READ);\n+    if (!router.isQuotaEnabled()) {\n+      throw new IOException(\"The quota system is disabled in Router.\");\n+    }\n+\n     final List\u003cRemoteLocation\u003e quotaLocs \u003d getValidQuotaLocations(path);\n     RemoteMethod method \u003d new RemoteMethod(\"getQuotaUsage\",\n         new Class\u003c?\u003e[] {String.class}, new RemoteParam());\n     Map\u003cRemoteLocation, QuotaUsage\u003e results \u003d rpcClient.invokeConcurrent(\n         quotaLocs, method, true, false, QuotaUsage.class);\n \n     return aggregateQuota(results);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public QuotaUsage getQuotaUsage(String path) throws IOException {\n    rpcServer.checkOperation(OperationCategory.READ);\n    if (!router.isQuotaEnabled()) {\n      throw new IOException(\"The quota system is disabled in Router.\");\n    }\n\n    final List\u003cRemoteLocation\u003e quotaLocs \u003d getValidQuotaLocations(path);\n    RemoteMethod method \u003d new RemoteMethod(\"getQuotaUsage\",\n        new Class\u003c?\u003e[] {String.class}, new RemoteParam());\n    Map\u003cRemoteLocation, QuotaUsage\u003e results \u003d rpcClient.invokeConcurrent(\n        quotaLocs, method, true, false, QuotaUsage.class);\n\n    return aggregateQuota(results);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/Quota.java",
      "extendedDetails": {}
    },
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-13215. RBF: Move Router to its own module. Contributed by Wei Yan\n",
      "commitDate": "19/03/18 10:13 PM",
      "commitName": "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d",
      "commitAuthor": "weiy",
      "commitDateOld": "19/03/18 5:19 PM",
      "commitNameOld": "e65ff1c8be48ef4f04ed96f96ac4caef4974944d",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 0.2,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public QuotaUsage getQuotaUsage(String path) throws IOException {\n    final List\u003cRemoteLocation\u003e quotaLocs \u003d getValidQuotaLocations(path);\n    RemoteMethod method \u003d new RemoteMethod(\"getQuotaUsage\",\n        new Class\u003c?\u003e[] {String.class}, new RemoteParam());\n    Map\u003cRemoteLocation, QuotaUsage\u003e results \u003d rpcClient.invokeConcurrent(\n        quotaLocs, method, true, false, QuotaUsage.class);\n\n    return aggregateQuota(results);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/Quota.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/federation/router/Quota.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/Quota.java"
      }
    },
    "d5d6a0353bb85b882cc4ef60e3a12d63243d34ba": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12919. RBF: Support erasure coding methods in RouterRpcServer. Contributed by Inigo Goiri.\n",
      "commitDate": "12/01/18 4:25 PM",
      "commitName": "d5d6a0353bb85b882cc4ef60e3a12d63243d34ba",
      "commitAuthor": "Inigo Goiri",
      "commitDateOld": "09/01/18 9:59 PM",
      "commitNameOld": "d98a2e6e2383f8b66def346409b0517aa32d298d",
      "commitAuthorOld": "Yiqun Lin",
      "daysBetweenCommits": 2.77,
      "commitsBetweenForRepo": 16,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n   public QuotaUsage getQuotaUsage(String path) throws IOException {\n     final List\u003cRemoteLocation\u003e quotaLocs \u003d getValidQuotaLocations(path);\n     RemoteMethod method \u003d new RemoteMethod(\"getQuotaUsage\",\n         new Class\u003c?\u003e[] {String.class}, new RemoteParam());\n-    Map\u003cRemoteLocation, Object\u003e results \u003d rpcClient.invokeConcurrent(quotaLocs,\n-        method, true, false);\n+    Map\u003cRemoteLocation, QuotaUsage\u003e results \u003d rpcClient.invokeConcurrent(\n+        quotaLocs, method, true, false, QuotaUsage.class);\n \n     return aggregateQuota(results);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public QuotaUsage getQuotaUsage(String path) throws IOException {\n    final List\u003cRemoteLocation\u003e quotaLocs \u003d getValidQuotaLocations(path);\n    RemoteMethod method \u003d new RemoteMethod(\"getQuotaUsage\",\n        new Class\u003c?\u003e[] {String.class}, new RemoteParam());\n    Map\u003cRemoteLocation, QuotaUsage\u003e results \u003d rpcClient.invokeConcurrent(\n        quotaLocs, method, true, false, QuotaUsage.class);\n\n    return aggregateQuota(results);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/federation/router/Quota.java",
      "extendedDetails": {}
    },
    "d98a2e6e2383f8b66def346409b0517aa32d298d": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-12934. RBF: Federation supports global quota. Contributed by Yiqun Lin.\n",
      "commitDate": "09/01/18 9:59 PM",
      "commitName": "d98a2e6e2383f8b66def346409b0517aa32d298d",
      "commitAuthor": "Yiqun Lin",
      "diff": "@@ -0,0 +1,9 @@\n+  public QuotaUsage getQuotaUsage(String path) throws IOException {\n+    final List\u003cRemoteLocation\u003e quotaLocs \u003d getValidQuotaLocations(path);\n+    RemoteMethod method \u003d new RemoteMethod(\"getQuotaUsage\",\n+        new Class\u003c?\u003e[] {String.class}, new RemoteParam());\n+    Map\u003cRemoteLocation, Object\u003e results \u003d rpcClient.invokeConcurrent(quotaLocs,\n+        method, true, false);\n+\n+    return aggregateQuota(results);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public QuotaUsage getQuotaUsage(String path) throws IOException {\n    final List\u003cRemoteLocation\u003e quotaLocs \u003d getValidQuotaLocations(path);\n    RemoteMethod method \u003d new RemoteMethod(\"getQuotaUsage\",\n        new Class\u003c?\u003e[] {String.class}, new RemoteParam());\n    Map\u003cRemoteLocation, Object\u003e results \u003d rpcClient.invokeConcurrent(quotaLocs,\n        method, true, false);\n\n    return aggregateQuota(results);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/federation/router/Quota.java"
    }
  }
}