{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DefaultOOMHandler.java",
  "functionName": "getCGroupsHandler",
  "functionId": "getCGroupsHandler",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/resources/DefaultOOMHandler.java",
  "functionStartLine": 71,
  "functionEndLine": 73,
  "numCommitsSeen": 5,
  "timeTaken": 993,
  "changeHistory": [
    "d5eca1a6a0e3939eead6711805b7a61c364d254b"
  ],
  "changeHistoryShort": {
    "d5eca1a6a0e3939eead6711805b7a61c364d254b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d5eca1a6a0e3939eead6711805b7a61c364d254b": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6677. Preempt opportunistic containers when root container cgroup goes over memory limit. Contributed by Haibo Chen.\n",
      "commitDate": "07/06/18 4:38 PM",
      "commitName": "d5eca1a6a0e3939eead6711805b7a61c364d254b",
      "commitAuthor": "Miklos Szegedi",
      "diff": "@@ -0,0 +1,3 @@\n+  protected CGroupsHandler getCGroupsHandler() {\n+    return ResourceHandlerModule.getCGroupsHandler();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected CGroupsHandler getCGroupsHandler() {\n    return ResourceHandlerModule.getCGroupsHandler();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/resources/DefaultOOMHandler.java"
    }
  }
}