{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AbstractReservationSystem.java",
  "functionName": "getNewReservationId",
  "functionId": "getNewReservationId",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/reservation/AbstractReservationSystem.java",
  "functionStartLine": 379,
  "functionEndLine": 389,
  "numCommitsSeen": 15,
  "timeTaken": 1146,
  "changeHistory": [
    "6261f7cc69a0eb3eebc9898c7599c7c20f432b4e"
  ],
  "changeHistoryShort": {
    "6261f7cc69a0eb3eebc9898c7599c7c20f432b4e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6261f7cc69a0eb3eebc9898c7599c7c20f432b4e": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2080. Integrating reservation system with ResourceManager and client-RM protocol. Contributed by Subru Krishnan and Carlo Curino.\n(cherry picked from commit 8baeaead8532898163f1006276b731a237b1a559)\n\nConflicts:\n\thadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppImpl.java\n",
      "commitDate": "03/10/14 3:42 PM",
      "commitName": "6261f7cc69a0eb3eebc9898c7599c7c20f432b4e",
      "commitAuthor": "subru",
      "diff": "@@ -0,0 +1,12 @@\n+  public ReservationId getNewReservationId() {\n+    writeLock.lock();\n+    try {\n+      ReservationId resId \u003d\n+          ReservationId.newInstance(ResourceManager.getClusterTimeStamp(),\n+              resCounter.incrementAndGet());\n+      LOG.info(\"Allocated new reservationId: \" + resId);\n+      return resId;\n+    } finally {\n+      writeLock.unlock();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public ReservationId getNewReservationId() {\n    writeLock.lock();\n    try {\n      ReservationId resId \u003d\n          ReservationId.newInstance(ResourceManager.getClusterTimeStamp(),\n              resCounter.incrementAndGet());\n      LOG.info(\"Allocated new reservationId: \" + resId);\n      return resId;\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/reservation/AbstractReservationSystem.java"
    }
  }
}