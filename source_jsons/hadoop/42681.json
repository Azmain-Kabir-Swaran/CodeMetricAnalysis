{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMAppAttemptImpl.java",
  "functionName": "recover",
  "functionId": "recover___state-RMState",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java",
  "functionStartLine": 960,
  "functionEndLine": 995,
  "numCommitsSeen": 155,
  "timeTaken": 7622,
  "changeHistory": [
    "6ce189c62132706d9aaee5abf020ae4dc783ba26",
    "dae65f3bef8ffa34d02a37041f1dfdfeeee91845",
    "c7a36e613053ec8b111146004b887c2f13535469",
    "f216276d2164c6564632c571fd3adbb03bc8b3e4",
    "93eeb13164707d0e3556c2bf737bd2ee09a335c6",
    "d5855c0e46404cfc1b5a63e59015e68ba668f0ea",
    "5805a81efbc024024d8172489dfdc6cf77879416",
    "e76faebc9589654e83c8244ef9aff88391e56b80",
    "14e2639fd0d53f7e0b58f2f4744af44983d4e867",
    "83be3ad44484bf8a24cb90de4b9c26ab59d226a8",
    "eeb4acd955802e2a84ea94cecf2e2341b83d5efb",
    "c9fb040c87423acb754fb7c3605d38dcf07b22ee",
    "d16470025aa0c51a04c530863a96108895d72ddf",
    "305ae48136d6e201de4451e824cb7b84f94ba2e0",
    "cfa783141fa69c2cf154d1d9e5393353d14ce5e1",
    "9f4d4e27fb1760b352cc5b301cd65a50d2d43ff6",
    "f4951e07087c99ab6d57ff5efdd962432ac641ab",
    "89fb4d8ffd32b06db42cc3e21d2a89e99deb7732",
    "74231f027607ff1a6fe7d72fad28108826963cf3",
    "6cd0736cc57849e4f7c5d38a3986432a9717fe39"
  ],
  "changeHistoryShort": {
    "6ce189c62132706d9aaee5abf020ae4dc783ba26": "Ybodychange",
    "dae65f3bef8ffa34d02a37041f1dfdfeeee91845": "Ybodychange",
    "c7a36e613053ec8b111146004b887c2f13535469": "Ybodychange",
    "f216276d2164c6564632c571fd3adbb03bc8b3e4": "Ybodychange",
    "93eeb13164707d0e3556c2bf737bd2ee09a335c6": "Ybodychange",
    "d5855c0e46404cfc1b5a63e59015e68ba668f0ea": "Ybodychange",
    "5805a81efbc024024d8172489dfdc6cf77879416": "Ybodychange",
    "e76faebc9589654e83c8244ef9aff88391e56b80": "Yexceptionschange",
    "14e2639fd0d53f7e0b58f2f4744af44983d4e867": "Ybodychange",
    "83be3ad44484bf8a24cb90de4b9c26ab59d226a8": "Ybodychange",
    "eeb4acd955802e2a84ea94cecf2e2341b83d5efb": "Ybodychange",
    "c9fb040c87423acb754fb7c3605d38dcf07b22ee": "Ybodychange",
    "d16470025aa0c51a04c530863a96108895d72ddf": "Ybodychange",
    "305ae48136d6e201de4451e824cb7b84f94ba2e0": "Ybodychange",
    "cfa783141fa69c2cf154d1d9e5393353d14ce5e1": "Ybodychange",
    "9f4d4e27fb1760b352cc5b301cd65a50d2d43ff6": "Ybodychange",
    "f4951e07087c99ab6d57ff5efdd962432ac641ab": "Yexceptionschange",
    "89fb4d8ffd32b06db42cc3e21d2a89e99deb7732": "Ybodychange",
    "74231f027607ff1a6fe7d72fad28108826963cf3": "Ybodychange",
    "6cd0736cc57849e4f7c5d38a3986432a9717fe39": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6ce189c62132706d9aaee5abf020ae4dc783ba26": {
      "type": "Ybodychange",
      "commitMessage": "YARN-10200. Add number of containers to RMAppManager summary\n",
      "commitDate": "25/03/20 10:41 AM",
      "commitName": "6ce189c62132706d9aaee5abf020ae4dc783ba26",
      "commitAuthor": "Jonathan Hung",
      "commitDateOld": "06/09/19 4:52 PM",
      "commitNameOld": "73575701ab8b3185e070491fd9c04580d7381a59",
      "commitAuthorOld": "Tao Yang",
      "daysBetweenCommits": 200.74,
      "commitsBetweenForRepo": 863,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,36 @@\n   public void recover(RMState state) {\n     ApplicationStateData appState \u003d\n         state.getApplicationState().get(getAppAttemptId().getApplicationId());\n     ApplicationAttemptStateData attemptState \u003d\n         appState.getAttempt(getAppAttemptId());\n     assert attemptState !\u003d null;\n \n     if (attemptState.getState() \u003d\u003d null) {\n       LOG.info(String.format(RECOVERY_MESSAGE, getAppAttemptId(), \"NONE\"));\n     } else if (LOG.isDebugEnabled()) {\n       LOG.debug(String.format(RECOVERY_MESSAGE, getAppAttemptId(),\n           attemptState.getState()));\n     }\n \n     this.diagnostics.append(\"Attempt recovered after RM restart\");\n     this.diagnostics.append(attemptState.getDiagnostics());\n     this.amContainerExitStatus \u003d attemptState.getAMContainerExitStatus();\n     if (amContainerExitStatus \u003d\u003d ContainerExitStatus.PREEMPTED) {\n       this.attemptMetrics.setIsPreempted();\n     }\n \n     Credentials credentials \u003d attemptState.getAppAttemptTokens();\n     setMasterContainer(attemptState.getMasterContainer());\n     recoverAppAttemptCredentials(credentials, attemptState.getState());\n     this.recoveredFinalState \u003d attemptState.getState();\n     this.originalTrackingUrl \u003d attemptState.getFinalTrackingUrl();\n     this.finalStatus \u003d attemptState.getFinalApplicationStatus();\n     this.startTime \u003d attemptState.getStartTime();\n     this.finishTime \u003d attemptState.getFinishTime();\n     this.attemptMetrics\n         .updateAggregateAppResourceUsage(attemptState.getResourceSecondsMap());\n     this.attemptMetrics.updateAggregatePreemptedAppResourceUsage(\n         attemptState.getPreemptedResourceSecondsMap());\n+    this.attemptMetrics.setTotalAllocatedContainers(\n+        attemptState.getTotalAllocatedContainers());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void recover(RMState state) {\n    ApplicationStateData appState \u003d\n        state.getApplicationState().get(getAppAttemptId().getApplicationId());\n    ApplicationAttemptStateData attemptState \u003d\n        appState.getAttempt(getAppAttemptId());\n    assert attemptState !\u003d null;\n\n    if (attemptState.getState() \u003d\u003d null) {\n      LOG.info(String.format(RECOVERY_MESSAGE, getAppAttemptId(), \"NONE\"));\n    } else if (LOG.isDebugEnabled()) {\n      LOG.debug(String.format(RECOVERY_MESSAGE, getAppAttemptId(),\n          attemptState.getState()));\n    }\n\n    this.diagnostics.append(\"Attempt recovered after RM restart\");\n    this.diagnostics.append(attemptState.getDiagnostics());\n    this.amContainerExitStatus \u003d attemptState.getAMContainerExitStatus();\n    if (amContainerExitStatus \u003d\u003d ContainerExitStatus.PREEMPTED) {\n      this.attemptMetrics.setIsPreempted();\n    }\n\n    Credentials credentials \u003d attemptState.getAppAttemptTokens();\n    setMasterContainer(attemptState.getMasterContainer());\n    recoverAppAttemptCredentials(credentials, attemptState.getState());\n    this.recoveredFinalState \u003d attemptState.getState();\n    this.originalTrackingUrl \u003d attemptState.getFinalTrackingUrl();\n    this.finalStatus \u003d attemptState.getFinalApplicationStatus();\n    this.startTime \u003d attemptState.getStartTime();\n    this.finishTime \u003d attemptState.getFinishTime();\n    this.attemptMetrics\n        .updateAggregateAppResourceUsage(attemptState.getResourceSecondsMap());\n    this.attemptMetrics.updateAggregatePreemptedAppResourceUsage(\n        attemptState.getPreemptedResourceSecondsMap());\n    this.attemptMetrics.setTotalAllocatedContainers(\n        attemptState.getTotalAllocatedContainers());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java",
      "extendedDetails": {}
    },
    "dae65f3bef8ffa34d02a37041f1dfdfeeee91845": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6232. Update resource usage and preempted resource calculations to take into account all resource types. Contributed by Varun Vasudev.\n",
      "commitDate": "12/09/17 9:19 AM",
      "commitName": "dae65f3bef8ffa34d02a37041f1dfdfeeee91845",
      "commitAuthor": "Sunil G",
      "commitDateOld": "30/08/17 5:26 PM",
      "commitNameOld": "cc23514abacb4d6589e731cc5ce5d8e6f19c955d",
      "commitAuthorOld": "Daniel Templeton",
      "daysBetweenCommits": 12.66,
      "commitsBetweenForRepo": 100,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,34 @@\n   public void recover(RMState state) {\n     ApplicationStateData appState \u003d\n         state.getApplicationState().get(getAppAttemptId().getApplicationId());\n     ApplicationAttemptStateData attemptState \u003d\n         appState.getAttempt(getAppAttemptId());\n     assert attemptState !\u003d null;\n \n     if (attemptState.getState() \u003d\u003d null) {\n       LOG.info(String.format(RECOVERY_MESSAGE, getAppAttemptId(), \"NONE\"));\n     } else if (LOG.isDebugEnabled()) {\n       LOG.debug(String.format(RECOVERY_MESSAGE, getAppAttemptId(),\n           attemptState.getState()));\n     }\n \n     this.diagnostics.append(\"Attempt recovered after RM restart\");\n     this.diagnostics.append(attemptState.getDiagnostics());\n     this.amContainerExitStatus \u003d attemptState.getAMContainerExitStatus();\n     if (amContainerExitStatus \u003d\u003d ContainerExitStatus.PREEMPTED) {\n       this.attemptMetrics.setIsPreempted();\n     }\n \n     Credentials credentials \u003d attemptState.getAppAttemptTokens();\n     setMasterContainer(attemptState.getMasterContainer());\n     recoverAppAttemptCredentials(credentials, attemptState.getState());\n     this.recoveredFinalState \u003d attemptState.getState();\n     this.originalTrackingUrl \u003d attemptState.getFinalTrackingUrl();\n     this.finalStatus \u003d attemptState.getFinalApplicationStatus();\n     this.startTime \u003d attemptState.getStartTime();\n     this.finishTime \u003d attemptState.getFinishTime();\n-    this.attemptMetrics.updateAggregateAppResourceUsage(\n-        attemptState.getMemorySeconds(), attemptState.getVcoreSeconds());\n+    this.attemptMetrics\n+        .updateAggregateAppResourceUsage(attemptState.getResourceSecondsMap());\n     this.attemptMetrics.updateAggregatePreemptedAppResourceUsage(\n-        attemptState.getPreemptedMemorySeconds(),\n-        attemptState.getPreemptedVcoreSeconds());\n+        attemptState.getPreemptedResourceSecondsMap());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void recover(RMState state) {\n    ApplicationStateData appState \u003d\n        state.getApplicationState().get(getAppAttemptId().getApplicationId());\n    ApplicationAttemptStateData attemptState \u003d\n        appState.getAttempt(getAppAttemptId());\n    assert attemptState !\u003d null;\n\n    if (attemptState.getState() \u003d\u003d null) {\n      LOG.info(String.format(RECOVERY_MESSAGE, getAppAttemptId(), \"NONE\"));\n    } else if (LOG.isDebugEnabled()) {\n      LOG.debug(String.format(RECOVERY_MESSAGE, getAppAttemptId(),\n          attemptState.getState()));\n    }\n\n    this.diagnostics.append(\"Attempt recovered after RM restart\");\n    this.diagnostics.append(attemptState.getDiagnostics());\n    this.amContainerExitStatus \u003d attemptState.getAMContainerExitStatus();\n    if (amContainerExitStatus \u003d\u003d ContainerExitStatus.PREEMPTED) {\n      this.attemptMetrics.setIsPreempted();\n    }\n\n    Credentials credentials \u003d attemptState.getAppAttemptTokens();\n    setMasterContainer(attemptState.getMasterContainer());\n    recoverAppAttemptCredentials(credentials, attemptState.getState());\n    this.recoveredFinalState \u003d attemptState.getState();\n    this.originalTrackingUrl \u003d attemptState.getFinalTrackingUrl();\n    this.finalStatus \u003d attemptState.getFinalApplicationStatus();\n    this.startTime \u003d attemptState.getStartTime();\n    this.finishTime \u003d attemptState.getFinishTime();\n    this.attemptMetrics\n        .updateAggregateAppResourceUsage(attemptState.getResourceSecondsMap());\n    this.attemptMetrics.updateAggregatePreemptedAppResourceUsage(\n        attemptState.getPreemptedResourceSecondsMap());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java",
      "extendedDetails": {}
    },
    "c7a36e613053ec8b111146004b887c2f13535469": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6125. The application attempt\u0027s diagnostic message should have a maximum size\n(Contributed by Andras Piros via Daniel Templeton)\n",
      "commitDate": "17/02/17 1:40 PM",
      "commitName": "c7a36e613053ec8b111146004b887c2f13535469",
      "commitAuthor": "Daniel Templeton",
      "commitDateOld": "15/02/17 1:18 AM",
      "commitNameOld": "b7613e0f406fb2b9bd5b1b3c79658e801f63c587",
      "commitAuthorOld": "Varun Saxena",
      "daysBetweenCommits": 2.52,
      "commitsBetweenForRepo": 23,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,35 @@\n   public void recover(RMState state) {\n     ApplicationStateData appState \u003d\n         state.getApplicationState().get(getAppAttemptId().getApplicationId());\n     ApplicationAttemptStateData attemptState \u003d\n         appState.getAttempt(getAppAttemptId());\n     assert attemptState !\u003d null;\n \n     if (attemptState.getState() \u003d\u003d null) {\n       LOG.info(String.format(RECOVERY_MESSAGE, getAppAttemptId(), \"NONE\"));\n     } else if (LOG.isDebugEnabled()) {\n       LOG.debug(String.format(RECOVERY_MESSAGE, getAppAttemptId(),\n           attemptState.getState()));\n     }\n \n-    diagnostics.append(\"Attempt recovered after RM restart\");\n-    diagnostics.append(attemptState.getDiagnostics());\n+    this.diagnostics.append(\"Attempt recovered after RM restart\");\n+    this.diagnostics.append(attemptState.getDiagnostics());\n     this.amContainerExitStatus \u003d attemptState.getAMContainerExitStatus();\n     if (amContainerExitStatus \u003d\u003d ContainerExitStatus.PREEMPTED) {\n       this.attemptMetrics.setIsPreempted();\n     }\n \n     Credentials credentials \u003d attemptState.getAppAttemptTokens();\n     setMasterContainer(attemptState.getMasterContainer());\n     recoverAppAttemptCredentials(credentials, attemptState.getState());\n     this.recoveredFinalState \u003d attemptState.getState();\n     this.originalTrackingUrl \u003d attemptState.getFinalTrackingUrl();\n     this.finalStatus \u003d attemptState.getFinalApplicationStatus();\n     this.startTime \u003d attemptState.getStartTime();\n     this.finishTime \u003d attemptState.getFinishTime();\n     this.attemptMetrics.updateAggregateAppResourceUsage(\n-        attemptState.getMemorySeconds(),attemptState.getVcoreSeconds());\n+        attemptState.getMemorySeconds(), attemptState.getVcoreSeconds());\n     this.attemptMetrics.updateAggregatePreemptedAppResourceUsage(\n         attemptState.getPreemptedMemorySeconds(),\n         attemptState.getPreemptedVcoreSeconds());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void recover(RMState state) {\n    ApplicationStateData appState \u003d\n        state.getApplicationState().get(getAppAttemptId().getApplicationId());\n    ApplicationAttemptStateData attemptState \u003d\n        appState.getAttempt(getAppAttemptId());\n    assert attemptState !\u003d null;\n\n    if (attemptState.getState() \u003d\u003d null) {\n      LOG.info(String.format(RECOVERY_MESSAGE, getAppAttemptId(), \"NONE\"));\n    } else if (LOG.isDebugEnabled()) {\n      LOG.debug(String.format(RECOVERY_MESSAGE, getAppAttemptId(),\n          attemptState.getState()));\n    }\n\n    this.diagnostics.append(\"Attempt recovered after RM restart\");\n    this.diagnostics.append(attemptState.getDiagnostics());\n    this.amContainerExitStatus \u003d attemptState.getAMContainerExitStatus();\n    if (amContainerExitStatus \u003d\u003d ContainerExitStatus.PREEMPTED) {\n      this.attemptMetrics.setIsPreempted();\n    }\n\n    Credentials credentials \u003d attemptState.getAppAttemptTokens();\n    setMasterContainer(attemptState.getMasterContainer());\n    recoverAppAttemptCredentials(credentials, attemptState.getState());\n    this.recoveredFinalState \u003d attemptState.getState();\n    this.originalTrackingUrl \u003d attemptState.getFinalTrackingUrl();\n    this.finalStatus \u003d attemptState.getFinalApplicationStatus();\n    this.startTime \u003d attemptState.getStartTime();\n    this.finishTime \u003d attemptState.getFinishTime();\n    this.attemptMetrics.updateAggregateAppResourceUsage(\n        attemptState.getMemorySeconds(), attemptState.getVcoreSeconds());\n    this.attemptMetrics.updateAggregatePreemptedAppResourceUsage(\n        attemptState.getPreemptedMemorySeconds(),\n        attemptState.getPreemptedVcoreSeconds());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java",
      "extendedDetails": {}
    },
    "f216276d2164c6564632c571fd3adbb03bc8b3e4": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4882. Change the log level to DEBUG for recovering completed applications (templedf via rkanter)\n",
      "commitDate": "28/12/16 3:21 PM",
      "commitName": "f216276d2164c6564632c571fd3adbb03bc8b3e4",
      "commitAuthor": "Robert Kanter",
      "commitDateOld": "10/11/16 2:35 PM",
      "commitNameOld": "93eeb13164707d0e3556c2bf737bd2ee09a335c6",
      "commitAuthorOld": "Eric Payne",
      "daysBetweenCommits": 48.03,
      "commitsBetweenForRepo": 261,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,35 @@\n   public void recover(RMState state) {\n     ApplicationStateData appState \u003d\n         state.getApplicationState().get(getAppAttemptId().getApplicationId());\n     ApplicationAttemptStateData attemptState \u003d\n         appState.getAttempt(getAppAttemptId());\n     assert attemptState !\u003d null;\n-    LOG.info(\"Recovering attempt: \" + getAppAttemptId() + \" with final state: \"\n-        + attemptState.getState());\n+\n+    if (attemptState.getState() \u003d\u003d null) {\n+      LOG.info(String.format(RECOVERY_MESSAGE, getAppAttemptId(), \"NONE\"));\n+    } else if (LOG.isDebugEnabled()) {\n+      LOG.debug(String.format(RECOVERY_MESSAGE, getAppAttemptId(),\n+          attemptState.getState()));\n+    }\n+\n     diagnostics.append(\"Attempt recovered after RM restart\");\n     diagnostics.append(attemptState.getDiagnostics());\n     this.amContainerExitStatus \u003d attemptState.getAMContainerExitStatus();\n     if (amContainerExitStatus \u003d\u003d ContainerExitStatus.PREEMPTED) {\n       this.attemptMetrics.setIsPreempted();\n     }\n \n     Credentials credentials \u003d attemptState.getAppAttemptTokens();\n     setMasterContainer(attemptState.getMasterContainer());\n     recoverAppAttemptCredentials(credentials, attemptState.getState());\n     this.recoveredFinalState \u003d attemptState.getState();\n     this.originalTrackingUrl \u003d attemptState.getFinalTrackingUrl();\n     this.finalStatus \u003d attemptState.getFinalApplicationStatus();\n     this.startTime \u003d attemptState.getStartTime();\n     this.finishTime \u003d attemptState.getFinishTime();\n     this.attemptMetrics.updateAggregateAppResourceUsage(\n         attemptState.getMemorySeconds(),attemptState.getVcoreSeconds());\n     this.attemptMetrics.updateAggregatePreemptedAppResourceUsage(\n         attemptState.getPreemptedMemorySeconds(),\n         attemptState.getPreemptedVcoreSeconds());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void recover(RMState state) {\n    ApplicationStateData appState \u003d\n        state.getApplicationState().get(getAppAttemptId().getApplicationId());\n    ApplicationAttemptStateData attemptState \u003d\n        appState.getAttempt(getAppAttemptId());\n    assert attemptState !\u003d null;\n\n    if (attemptState.getState() \u003d\u003d null) {\n      LOG.info(String.format(RECOVERY_MESSAGE, getAppAttemptId(), \"NONE\"));\n    } else if (LOG.isDebugEnabled()) {\n      LOG.debug(String.format(RECOVERY_MESSAGE, getAppAttemptId(),\n          attemptState.getState()));\n    }\n\n    diagnostics.append(\"Attempt recovered after RM restart\");\n    diagnostics.append(attemptState.getDiagnostics());\n    this.amContainerExitStatus \u003d attemptState.getAMContainerExitStatus();\n    if (amContainerExitStatus \u003d\u003d ContainerExitStatus.PREEMPTED) {\n      this.attemptMetrics.setIsPreempted();\n    }\n\n    Credentials credentials \u003d attemptState.getAppAttemptTokens();\n    setMasterContainer(attemptState.getMasterContainer());\n    recoverAppAttemptCredentials(credentials, attemptState.getState());\n    this.recoveredFinalState \u003d attemptState.getState();\n    this.originalTrackingUrl \u003d attemptState.getFinalTrackingUrl();\n    this.finalStatus \u003d attemptState.getFinalApplicationStatus();\n    this.startTime \u003d attemptState.getStartTime();\n    this.finishTime \u003d attemptState.getFinishTime();\n    this.attemptMetrics.updateAggregateAppResourceUsage(\n        attemptState.getMemorySeconds(),attemptState.getVcoreSeconds());\n    this.attemptMetrics.updateAggregatePreemptedAppResourceUsage(\n        attemptState.getPreemptedMemorySeconds(),\n        attemptState.getPreemptedVcoreSeconds());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java",
      "extendedDetails": {}
    },
    "93eeb13164707d0e3556c2bf737bd2ee09a335c6": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4218. Metric for resource*time that was preempted. Contributed by Chang Li.\n",
      "commitDate": "10/11/16 2:35 PM",
      "commitName": "93eeb13164707d0e3556c2bf737bd2ee09a335c6",
      "commitAuthor": "Eric Payne",
      "commitDateOld": "10/08/16 11:04 AM",
      "commitNameOld": "e0b570dffb47ede298e0378a63350b699128d96e",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 92.19,
      "commitsBetweenForRepo": 700,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,29 @@\n   public void recover(RMState state) {\n     ApplicationStateData appState \u003d\n         state.getApplicationState().get(getAppAttemptId().getApplicationId());\n     ApplicationAttemptStateData attemptState \u003d\n         appState.getAttempt(getAppAttemptId());\n     assert attemptState !\u003d null;\n     LOG.info(\"Recovering attempt: \" + getAppAttemptId() + \" with final state: \"\n         + attemptState.getState());\n     diagnostics.append(\"Attempt recovered after RM restart\");\n     diagnostics.append(attemptState.getDiagnostics());\n     this.amContainerExitStatus \u003d attemptState.getAMContainerExitStatus();\n     if (amContainerExitStatus \u003d\u003d ContainerExitStatus.PREEMPTED) {\n       this.attemptMetrics.setIsPreempted();\n     }\n \n     Credentials credentials \u003d attemptState.getAppAttemptTokens();\n     setMasterContainer(attemptState.getMasterContainer());\n     recoverAppAttemptCredentials(credentials, attemptState.getState());\n     this.recoveredFinalState \u003d attemptState.getState();\n     this.originalTrackingUrl \u003d attemptState.getFinalTrackingUrl();\n     this.finalStatus \u003d attemptState.getFinalApplicationStatus();\n     this.startTime \u003d attemptState.getStartTime();\n     this.finishTime \u003d attemptState.getFinishTime();\n     this.attemptMetrics.updateAggregateAppResourceUsage(\n         attemptState.getMemorySeconds(),attemptState.getVcoreSeconds());\n+    this.attemptMetrics.updateAggregatePreemptedAppResourceUsage(\n+        attemptState.getPreemptedMemorySeconds(),\n+        attemptState.getPreemptedVcoreSeconds());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void recover(RMState state) {\n    ApplicationStateData appState \u003d\n        state.getApplicationState().get(getAppAttemptId().getApplicationId());\n    ApplicationAttemptStateData attemptState \u003d\n        appState.getAttempt(getAppAttemptId());\n    assert attemptState !\u003d null;\n    LOG.info(\"Recovering attempt: \" + getAppAttemptId() + \" with final state: \"\n        + attemptState.getState());\n    diagnostics.append(\"Attempt recovered after RM restart\");\n    diagnostics.append(attemptState.getDiagnostics());\n    this.amContainerExitStatus \u003d attemptState.getAMContainerExitStatus();\n    if (amContainerExitStatus \u003d\u003d ContainerExitStatus.PREEMPTED) {\n      this.attemptMetrics.setIsPreempted();\n    }\n\n    Credentials credentials \u003d attemptState.getAppAttemptTokens();\n    setMasterContainer(attemptState.getMasterContainer());\n    recoverAppAttemptCredentials(credentials, attemptState.getState());\n    this.recoveredFinalState \u003d attemptState.getState();\n    this.originalTrackingUrl \u003d attemptState.getFinalTrackingUrl();\n    this.finalStatus \u003d attemptState.getFinalApplicationStatus();\n    this.startTime \u003d attemptState.getStartTime();\n    this.finishTime \u003d attemptState.getFinishTime();\n    this.attemptMetrics.updateAggregateAppResourceUsage(\n        attemptState.getMemorySeconds(),attemptState.getVcoreSeconds());\n    this.attemptMetrics.updateAggregatePreemptedAppResourceUsage(\n        attemptState.getPreemptedMemorySeconds(),\n        attemptState.getPreemptedVcoreSeconds());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java",
      "extendedDetails": {}
    },
    "d5855c0e46404cfc1b5a63e59015e68ba668f0ea": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2246. Made the proxy tracking URL always be http(s)://proxy addr:port/proxy/\u003cappId\u003e to avoid duplicate sections. Contributed by Devaraj K.\n",
      "commitDate": "10/02/15 3:24 PM",
      "commitName": "d5855c0e46404cfc1b5a63e59015e68ba668f0ea",
      "commitAuthor": "Zhijie Shen",
      "commitDateOld": "25/11/14 12:48 PM",
      "commitNameOld": "5805a81efbc024024d8172489dfdc6cf77879416",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 77.11,
      "commitsBetweenForRepo": 520,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,26 @@\n   public void recover(RMState state) {\n     ApplicationStateData appState \u003d\n         state.getApplicationState().get(getAppAttemptId().getApplicationId());\n     ApplicationAttemptStateData attemptState \u003d\n         appState.getAttempt(getAppAttemptId());\n     assert attemptState !\u003d null;\n     LOG.info(\"Recovering attempt: \" + getAppAttemptId() + \" with final state: \"\n         + attemptState.getState());\n     diagnostics.append(\"Attempt recovered after RM restart\");\n     diagnostics.append(attemptState.getDiagnostics());\n     this.amContainerExitStatus \u003d attemptState.getAMContainerExitStatus();\n     if (amContainerExitStatus \u003d\u003d ContainerExitStatus.PREEMPTED) {\n       this.attemptMetrics.setIsPreempted();\n     }\n \n     Credentials credentials \u003d attemptState.getAppAttemptTokens();\n     setMasterContainer(attemptState.getMasterContainer());\n     recoverAppAttemptCredentials(credentials, attemptState.getState());\n     this.recoveredFinalState \u003d attemptState.getState();\n     this.originalTrackingUrl \u003d attemptState.getFinalTrackingUrl();\n-    this.proxiedTrackingUrl \u003d generateProxyUriWithScheme(originalTrackingUrl);\n     this.finalStatus \u003d attemptState.getFinalApplicationStatus();\n     this.startTime \u003d attemptState.getStartTime();\n     this.finishTime \u003d attemptState.getFinishTime();\n     this.attemptMetrics.updateAggregateAppResourceUsage(\n         attemptState.getMemorySeconds(),attemptState.getVcoreSeconds());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void recover(RMState state) {\n    ApplicationStateData appState \u003d\n        state.getApplicationState().get(getAppAttemptId().getApplicationId());\n    ApplicationAttemptStateData attemptState \u003d\n        appState.getAttempt(getAppAttemptId());\n    assert attemptState !\u003d null;\n    LOG.info(\"Recovering attempt: \" + getAppAttemptId() + \" with final state: \"\n        + attemptState.getState());\n    diagnostics.append(\"Attempt recovered after RM restart\");\n    diagnostics.append(attemptState.getDiagnostics());\n    this.amContainerExitStatus \u003d attemptState.getAMContainerExitStatus();\n    if (amContainerExitStatus \u003d\u003d ContainerExitStatus.PREEMPTED) {\n      this.attemptMetrics.setIsPreempted();\n    }\n\n    Credentials credentials \u003d attemptState.getAppAttemptTokens();\n    setMasterContainer(attemptState.getMasterContainer());\n    recoverAppAttemptCredentials(credentials, attemptState.getState());\n    this.recoveredFinalState \u003d attemptState.getState();\n    this.originalTrackingUrl \u003d attemptState.getFinalTrackingUrl();\n    this.finalStatus \u003d attemptState.getFinalApplicationStatus();\n    this.startTime \u003d attemptState.getStartTime();\n    this.finishTime \u003d attemptState.getFinishTime();\n    this.attemptMetrics.updateAggregateAppResourceUsage(\n        attemptState.getMemorySeconds(),attemptState.getVcoreSeconds());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java",
      "extendedDetails": {}
    },
    "5805a81efbc024024d8172489dfdc6cf77879416": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2404. Removed ApplicationAttemptState and ApplicationState class in RMStateStore. Contributed by Tsuyoshi OZAWA\n",
      "commitDate": "25/11/14 12:48 PM",
      "commitName": "5805a81efbc024024d8172489dfdc6cf77879416",
      "commitAuthor": "Jian He",
      "commitDateOld": "19/11/14 7:50 PM",
      "commitNameOld": "c90fb84aaa902e6676de65d0016dee3a5414eb95",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 5.71,
      "commitsBetweenForRepo": 27,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,27 @@\n   public void recover(RMState state) {\n-    ApplicationState appState \u003d\n+    ApplicationStateData appState \u003d\n         state.getApplicationState().get(getAppAttemptId().getApplicationId());\n-    ApplicationAttemptState attemptState \u003d\n+    ApplicationAttemptStateData attemptState \u003d\n         appState.getAttempt(getAppAttemptId());\n     assert attemptState !\u003d null;\n     LOG.info(\"Recovering attempt: \" + getAppAttemptId() + \" with final state: \"\n         + attemptState.getState());\n     diagnostics.append(\"Attempt recovered after RM restart\");\n     diagnostics.append(attemptState.getDiagnostics());\n     this.amContainerExitStatus \u003d attemptState.getAMContainerExitStatus();\n     if (amContainerExitStatus \u003d\u003d ContainerExitStatus.PREEMPTED) {\n       this.attemptMetrics.setIsPreempted();\n     }\n+\n+    Credentials credentials \u003d attemptState.getAppAttemptTokens();\n     setMasterContainer(attemptState.getMasterContainer());\n-    recoverAppAttemptCredentials(attemptState.getAppAttemptCredentials(),\n-        attemptState.getState());\n+    recoverAppAttemptCredentials(credentials, attemptState.getState());\n     this.recoveredFinalState \u003d attemptState.getState();\n     this.originalTrackingUrl \u003d attemptState.getFinalTrackingUrl();\n     this.proxiedTrackingUrl \u003d generateProxyUriWithScheme(originalTrackingUrl);\n     this.finalStatus \u003d attemptState.getFinalApplicationStatus();\n     this.startTime \u003d attemptState.getStartTime();\n     this.finishTime \u003d attemptState.getFinishTime();\n     this.attemptMetrics.updateAggregateAppResourceUsage(\n         attemptState.getMemorySeconds(),attemptState.getVcoreSeconds());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void recover(RMState state) {\n    ApplicationStateData appState \u003d\n        state.getApplicationState().get(getAppAttemptId().getApplicationId());\n    ApplicationAttemptStateData attemptState \u003d\n        appState.getAttempt(getAppAttemptId());\n    assert attemptState !\u003d null;\n    LOG.info(\"Recovering attempt: \" + getAppAttemptId() + \" with final state: \"\n        + attemptState.getState());\n    diagnostics.append(\"Attempt recovered after RM restart\");\n    diagnostics.append(attemptState.getDiagnostics());\n    this.amContainerExitStatus \u003d attemptState.getAMContainerExitStatus();\n    if (amContainerExitStatus \u003d\u003d ContainerExitStatus.PREEMPTED) {\n      this.attemptMetrics.setIsPreempted();\n    }\n\n    Credentials credentials \u003d attemptState.getAppAttemptTokens();\n    setMasterContainer(attemptState.getMasterContainer());\n    recoverAppAttemptCredentials(credentials, attemptState.getState());\n    this.recoveredFinalState \u003d attemptState.getState();\n    this.originalTrackingUrl \u003d attemptState.getFinalTrackingUrl();\n    this.proxiedTrackingUrl \u003d generateProxyUriWithScheme(originalTrackingUrl);\n    this.finalStatus \u003d attemptState.getFinalApplicationStatus();\n    this.startTime \u003d attemptState.getStartTime();\n    this.finishTime \u003d attemptState.getFinishTime();\n    this.attemptMetrics.updateAggregateAppResourceUsage(\n        attemptState.getMemorySeconds(),attemptState.getVcoreSeconds());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java",
      "extendedDetails": {}
    },
    "e76faebc9589654e83c8244ef9aff88391e56b80": {
      "type": "Yexceptionschange",
      "commitMessage": "YARN-2834. Fixed ResourceManager to ignore token-renewal failures on recovery consistent with the (somewhat incorrect) behaviour in the non-recovery case. Contributed by Jian He.\n",
      "commitDate": "09/11/14 6:56 PM",
      "commitName": "e76faebc9589654e83c8244ef9aff88391e56b80",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "07/11/14 9:28 AM",
      "commitNameOld": "a5657182a7accebe08cd86e46b4cdeb163d4d1f2",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 2.39,
      "commitsBetweenForRepo": 22,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n-  public void recover(RMState state) throws Exception {\n+  public void recover(RMState state) {\n     ApplicationState appState \u003d\n         state.getApplicationState().get(getAppAttemptId().getApplicationId());\n     ApplicationAttemptState attemptState \u003d\n         appState.getAttempt(getAppAttemptId());\n     assert attemptState !\u003d null;\n     LOG.info(\"Recovering attempt: \" + getAppAttemptId() + \" with final state: \"\n         + attemptState.getState());\n     diagnostics.append(\"Attempt recovered after RM restart\");\n     diagnostics.append(attemptState.getDiagnostics());\n     this.amContainerExitStatus \u003d attemptState.getAMContainerExitStatus();\n     if (amContainerExitStatus \u003d\u003d ContainerExitStatus.PREEMPTED) {\n       this.attemptMetrics.setIsPreempted();\n     }\n     setMasterContainer(attemptState.getMasterContainer());\n     recoverAppAttemptCredentials(attemptState.getAppAttemptCredentials(),\n         attemptState.getState());\n     this.recoveredFinalState \u003d attemptState.getState();\n     this.originalTrackingUrl \u003d attemptState.getFinalTrackingUrl();\n     this.proxiedTrackingUrl \u003d generateProxyUriWithScheme(originalTrackingUrl);\n     this.finalStatus \u003d attemptState.getFinalApplicationStatus();\n     this.startTime \u003d attemptState.getStartTime();\n     this.finishTime \u003d attemptState.getFinishTime();\n     this.attemptMetrics.updateAggregateAppResourceUsage(\n         attemptState.getMemorySeconds(),attemptState.getVcoreSeconds());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void recover(RMState state) {\n    ApplicationState appState \u003d\n        state.getApplicationState().get(getAppAttemptId().getApplicationId());\n    ApplicationAttemptState attemptState \u003d\n        appState.getAttempt(getAppAttemptId());\n    assert attemptState !\u003d null;\n    LOG.info(\"Recovering attempt: \" + getAppAttemptId() + \" with final state: \"\n        + attemptState.getState());\n    diagnostics.append(\"Attempt recovered after RM restart\");\n    diagnostics.append(attemptState.getDiagnostics());\n    this.amContainerExitStatus \u003d attemptState.getAMContainerExitStatus();\n    if (amContainerExitStatus \u003d\u003d ContainerExitStatus.PREEMPTED) {\n      this.attemptMetrics.setIsPreempted();\n    }\n    setMasterContainer(attemptState.getMasterContainer());\n    recoverAppAttemptCredentials(attemptState.getAppAttemptCredentials(),\n        attemptState.getState());\n    this.recoveredFinalState \u003d attemptState.getState();\n    this.originalTrackingUrl \u003d attemptState.getFinalTrackingUrl();\n    this.proxiedTrackingUrl \u003d generateProxyUriWithScheme(originalTrackingUrl);\n    this.finalStatus \u003d attemptState.getFinalApplicationStatus();\n    this.startTime \u003d attemptState.getStartTime();\n    this.finishTime \u003d attemptState.getFinishTime();\n    this.attemptMetrics.updateAggregateAppResourceUsage(\n        attemptState.getMemorySeconds(),attemptState.getVcoreSeconds());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java",
      "extendedDetails": {
        "oldValue": "[Exception]",
        "newValue": "[]"
      }
    },
    "14e2639fd0d53f7e0b58f2f4744af44983d4e867": {
      "type": "Ybodychange",
      "commitMessage": "YARN-611. Added an API to let apps specify an interval beyond which AM failures should be ignored towards counting max-attempts. Contributed by Xuan Gong.\n",
      "commitDate": "13/09/14 6:04 PM",
      "commitName": "14e2639fd0d53f7e0b58f2f4744af44983d4e867",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "11/09/14 7:04 PM",
      "commitNameOld": "6b8b1608e64e300e4e1d23c60476febaca29ca38",
      "commitAuthorOld": "junping_du",
      "daysBetweenCommits": 1.96,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,26 @@\n   public void recover(RMState state) throws Exception {\n     ApplicationState appState \u003d\n         state.getApplicationState().get(getAppAttemptId().getApplicationId());\n     ApplicationAttemptState attemptState \u003d\n         appState.getAttempt(getAppAttemptId());\n     assert attemptState !\u003d null;\n     LOG.info(\"Recovering attempt: \" + getAppAttemptId() + \" with final state: \"\n         + attemptState.getState());\n     diagnostics.append(\"Attempt recovered after RM restart\");\n     diagnostics.append(attemptState.getDiagnostics());\n     this.amContainerExitStatus \u003d attemptState.getAMContainerExitStatus();\n     if (amContainerExitStatus \u003d\u003d ContainerExitStatus.PREEMPTED) {\n       this.attemptMetrics.setIsPreempted();\n     }\n     setMasterContainer(attemptState.getMasterContainer());\n     recoverAppAttemptCredentials(attemptState.getAppAttemptCredentials(),\n       attemptState.getState());\n     this.recoveredFinalState \u003d attemptState.getState();\n     this.originalTrackingUrl \u003d attemptState.getFinalTrackingUrl();\n     this.proxiedTrackingUrl \u003d generateProxyUriWithScheme(originalTrackingUrl);\n     this.finalStatus \u003d attemptState.getFinalApplicationStatus();\n     this.startTime \u003d attemptState.getStartTime();\n+    this.finishTime \u003d attemptState.getFinishTime();\n     this.attemptMetrics.updateAggregateAppResourceUsage(\n         attemptState.getMemorySeconds(),attemptState.getVcoreSeconds());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void recover(RMState state) throws Exception {\n    ApplicationState appState \u003d\n        state.getApplicationState().get(getAppAttemptId().getApplicationId());\n    ApplicationAttemptState attemptState \u003d\n        appState.getAttempt(getAppAttemptId());\n    assert attemptState !\u003d null;\n    LOG.info(\"Recovering attempt: \" + getAppAttemptId() + \" with final state: \"\n        + attemptState.getState());\n    diagnostics.append(\"Attempt recovered after RM restart\");\n    diagnostics.append(attemptState.getDiagnostics());\n    this.amContainerExitStatus \u003d attemptState.getAMContainerExitStatus();\n    if (amContainerExitStatus \u003d\u003d ContainerExitStatus.PREEMPTED) {\n      this.attemptMetrics.setIsPreempted();\n    }\n    setMasterContainer(attemptState.getMasterContainer());\n    recoverAppAttemptCredentials(attemptState.getAppAttemptCredentials(),\n      attemptState.getState());\n    this.recoveredFinalState \u003d attemptState.getState();\n    this.originalTrackingUrl \u003d attemptState.getFinalTrackingUrl();\n    this.proxiedTrackingUrl \u003d generateProxyUriWithScheme(originalTrackingUrl);\n    this.finalStatus \u003d attemptState.getFinalApplicationStatus();\n    this.startTime \u003d attemptState.getStartTime();\n    this.finishTime \u003d attemptState.getFinishTime();\n    this.attemptMetrics.updateAggregateAppResourceUsage(\n        attemptState.getMemorySeconds(),attemptState.getVcoreSeconds());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java",
      "extendedDetails": {}
    },
    "83be3ad44484bf8a24cb90de4b9c26ab59d226a8": {
      "type": "Ybodychange",
      "commitMessage": "YARN-415. Capture aggregate memory allocation at the app-level for chargeback. Contributed by Eric Payne \u0026 Andrey Klochkov\n",
      "commitDate": "10/09/14 6:20 PM",
      "commitName": "83be3ad44484bf8a24cb90de4b9c26ab59d226a8",
      "commitAuthor": "Jian He",
      "commitDateOld": "11/08/14 11:24 AM",
      "commitNameOld": "c4dc6853439d54076c6875e66accfc61dddf74d1",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 30.29,
      "commitsBetweenForRepo": 242,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,25 @@\n   public void recover(RMState state) throws Exception {\n     ApplicationState appState \u003d\n         state.getApplicationState().get(getAppAttemptId().getApplicationId());\n     ApplicationAttemptState attemptState \u003d\n         appState.getAttempt(getAppAttemptId());\n     assert attemptState !\u003d null;\n     LOG.info(\"Recovering attempt: \" + getAppAttemptId() + \" with final state: \"\n         + attemptState.getState());\n     diagnostics.append(\"Attempt recovered after RM restart\");\n     diagnostics.append(attemptState.getDiagnostics());\n     this.amContainerExitStatus \u003d attemptState.getAMContainerExitStatus();\n     if (amContainerExitStatus \u003d\u003d ContainerExitStatus.PREEMPTED) {\n       this.attemptMetrics.setIsPreempted();\n     }\n     setMasterContainer(attemptState.getMasterContainer());\n     recoverAppAttemptCredentials(attemptState.getAppAttemptCredentials(),\n       attemptState.getState());\n     this.recoveredFinalState \u003d attemptState.getState();\n     this.originalTrackingUrl \u003d attemptState.getFinalTrackingUrl();\n     this.proxiedTrackingUrl \u003d generateProxyUriWithScheme(originalTrackingUrl);\n     this.finalStatus \u003d attemptState.getFinalApplicationStatus();\n     this.startTime \u003d attemptState.getStartTime();\n+    this.attemptMetrics.updateAggregateAppResourceUsage(\n+        attemptState.getMemorySeconds(),attemptState.getVcoreSeconds());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void recover(RMState state) throws Exception {\n    ApplicationState appState \u003d\n        state.getApplicationState().get(getAppAttemptId().getApplicationId());\n    ApplicationAttemptState attemptState \u003d\n        appState.getAttempt(getAppAttemptId());\n    assert attemptState !\u003d null;\n    LOG.info(\"Recovering attempt: \" + getAppAttemptId() + \" with final state: \"\n        + attemptState.getState());\n    diagnostics.append(\"Attempt recovered after RM restart\");\n    diagnostics.append(attemptState.getDiagnostics());\n    this.amContainerExitStatus \u003d attemptState.getAMContainerExitStatus();\n    if (amContainerExitStatus \u003d\u003d ContainerExitStatus.PREEMPTED) {\n      this.attemptMetrics.setIsPreempted();\n    }\n    setMasterContainer(attemptState.getMasterContainer());\n    recoverAppAttemptCredentials(attemptState.getAppAttemptCredentials(),\n      attemptState.getState());\n    this.recoveredFinalState \u003d attemptState.getState();\n    this.originalTrackingUrl \u003d attemptState.getFinalTrackingUrl();\n    this.proxiedTrackingUrl \u003d generateProxyUriWithScheme(originalTrackingUrl);\n    this.finalStatus \u003d attemptState.getFinalApplicationStatus();\n    this.startTime \u003d attemptState.getStartTime();\n    this.attemptMetrics.updateAggregateAppResourceUsage(\n        attemptState.getMemorySeconds(),attemptState.getVcoreSeconds());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java",
      "extendedDetails": {}
    },
    "eeb4acd955802e2a84ea94cecf2e2341b83d5efb": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2212: ApplicationMaster needs to find a way to update the AMRMToken periodically. Contributed by Xuan Gong\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1616892 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/08/14 2:38 PM",
      "commitName": "eeb4acd955802e2a84ea94cecf2e2341b83d5efb",
      "commitAuthor": "Xuan Gong",
      "commitDateOld": "06/08/14 5:06 PM",
      "commitNameOld": "8feddc4c840f32c1853bc3d982cc790a9c5f42f2",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 1.9,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,23 @@\n   public void recover(RMState state) throws Exception {\n     ApplicationState appState \u003d\n         state.getApplicationState().get(getAppAttemptId().getApplicationId());\n     ApplicationAttemptState attemptState \u003d\n         appState.getAttempt(getAppAttemptId());\n     assert attemptState !\u003d null;\n     LOG.info(\"Recovering attempt: \" + getAppAttemptId() + \" with final state: \"\n         + attemptState.getState());\n     diagnostics.append(\"Attempt recovered after RM restart\");\n     diagnostics.append(attemptState.getDiagnostics());\n     this.amContainerExitStatus \u003d attemptState.getAMContainerExitStatus();\n     if (amContainerExitStatus \u003d\u003d ContainerExitStatus.PREEMPTED) {\n       this.attemptMetrics.setIsPreempted();\n     }\n     setMasterContainer(attemptState.getMasterContainer());\n-    recoverAppAttemptCredentials(attemptState.getAppAttemptCredentials());\n+    recoverAppAttemptCredentials(attemptState.getAppAttemptCredentials(),\n+      attemptState.getState());\n     this.recoveredFinalState \u003d attemptState.getState();\n     this.originalTrackingUrl \u003d attemptState.getFinalTrackingUrl();\n     this.proxiedTrackingUrl \u003d generateProxyUriWithScheme(originalTrackingUrl);\n     this.finalStatus \u003d attemptState.getFinalApplicationStatus();\n     this.startTime \u003d attemptState.getStartTime();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void recover(RMState state) throws Exception {\n    ApplicationState appState \u003d\n        state.getApplicationState().get(getAppAttemptId().getApplicationId());\n    ApplicationAttemptState attemptState \u003d\n        appState.getAttempt(getAppAttemptId());\n    assert attemptState !\u003d null;\n    LOG.info(\"Recovering attempt: \" + getAppAttemptId() + \" with final state: \"\n        + attemptState.getState());\n    diagnostics.append(\"Attempt recovered after RM restart\");\n    diagnostics.append(attemptState.getDiagnostics());\n    this.amContainerExitStatus \u003d attemptState.getAMContainerExitStatus();\n    if (amContainerExitStatus \u003d\u003d ContainerExitStatus.PREEMPTED) {\n      this.attemptMetrics.setIsPreempted();\n    }\n    setMasterContainer(attemptState.getMasterContainer());\n    recoverAppAttemptCredentials(attemptState.getAppAttemptCredentials(),\n      attemptState.getState());\n    this.recoveredFinalState \u003d attemptState.getState();\n    this.originalTrackingUrl \u003d attemptState.getFinalTrackingUrl();\n    this.proxiedTrackingUrl \u003d generateProxyUriWithScheme(originalTrackingUrl);\n    this.finalStatus \u003d attemptState.getFinalApplicationStatus();\n    this.startTime \u003d attemptState.getStartTime();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java",
      "extendedDetails": {}
    },
    "c9fb040c87423acb754fb7c3605d38dcf07b22ee": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2181. Added preemption info to logs and RM web UI. Contributed by Wangda Tan\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1609561 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/07/14 1:03 PM",
      "commitName": "c9fb040c87423acb754fb7c3605d38dcf07b22ee",
      "commitAuthor": "Jian He",
      "commitDateOld": "03/07/14 7:15 AM",
      "commitNameOld": "5cb489f9d39cdfdfcae7ec7e99f08cb86b178721",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 7.24,
      "commitsBetweenForRepo": 39,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,22 @@\n   public void recover(RMState state) throws Exception {\n     ApplicationState appState \u003d\n         state.getApplicationState().get(getAppAttemptId().getApplicationId());\n     ApplicationAttemptState attemptState \u003d\n         appState.getAttempt(getAppAttemptId());\n     assert attemptState !\u003d null;\n     LOG.info(\"Recovering attempt: \" + getAppAttemptId() + \" with final state: \"\n         + attemptState.getState());\n     diagnostics.append(\"Attempt recovered after RM restart\");\n     diagnostics.append(attemptState.getDiagnostics());\n     this.amContainerExitStatus \u003d attemptState.getAMContainerExitStatus();\n+    if (amContainerExitStatus \u003d\u003d ContainerExitStatus.PREEMPTED) {\n+      this.attemptMetrics.setIsPreempted();\n+    }\n     setMasterContainer(attemptState.getMasterContainer());\n     recoverAppAttemptCredentials(attemptState.getAppAttemptCredentials());\n     this.recoveredFinalState \u003d attemptState.getState();\n     this.originalTrackingUrl \u003d attemptState.getFinalTrackingUrl();\n     this.proxiedTrackingUrl \u003d generateProxyUriWithScheme(originalTrackingUrl);\n     this.finalStatus \u003d attemptState.getFinalApplicationStatus();\n     this.startTime \u003d attemptState.getStartTime();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void recover(RMState state) throws Exception {\n    ApplicationState appState \u003d\n        state.getApplicationState().get(getAppAttemptId().getApplicationId());\n    ApplicationAttemptState attemptState \u003d\n        appState.getAttempt(getAppAttemptId());\n    assert attemptState !\u003d null;\n    LOG.info(\"Recovering attempt: \" + getAppAttemptId() + \" with final state: \"\n        + attemptState.getState());\n    diagnostics.append(\"Attempt recovered after RM restart\");\n    diagnostics.append(attemptState.getDiagnostics());\n    this.amContainerExitStatus \u003d attemptState.getAMContainerExitStatus();\n    if (amContainerExitStatus \u003d\u003d ContainerExitStatus.PREEMPTED) {\n      this.attemptMetrics.setIsPreempted();\n    }\n    setMasterContainer(attemptState.getMasterContainer());\n    recoverAppAttemptCredentials(attemptState.getAppAttemptCredentials());\n    this.recoveredFinalState \u003d attemptState.getState();\n    this.originalTrackingUrl \u003d attemptState.getFinalTrackingUrl();\n    this.proxiedTrackingUrl \u003d generateProxyUriWithScheme(originalTrackingUrl);\n    this.finalStatus \u003d attemptState.getFinalApplicationStatus();\n    this.startTime \u003d attemptState.getStartTime();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java",
      "extendedDetails": {}
    },
    "d16470025aa0c51a04c530863a96108895d72ddf": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2074. Changed ResourceManager to not count AM preemptions towards app failures. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1605106 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/06/14 8:15 AM",
      "commitName": "d16470025aa0c51a04c530863a96108895d72ddf",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "16/06/14 4:56 PM",
      "commitNameOld": "95897ca14b7abd7fe047fdcf150473a8a2cbb024",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 7.64,
      "commitsBetweenForRepo": 55,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,19 @@\n   public void recover(RMState state) throws Exception {\n     ApplicationState appState \u003d\n         state.getApplicationState().get(getAppAttemptId().getApplicationId());\n     ApplicationAttemptState attemptState \u003d\n         appState.getAttempt(getAppAttemptId());\n     assert attemptState !\u003d null;\n     LOG.info(\"Recovering attempt: \" + getAppAttemptId() + \" with final state: \"\n         + attemptState.getState());\n     diagnostics.append(\"Attempt recovered after RM restart\");\n     diagnostics.append(attemptState.getDiagnostics());\n+    this.amContainerExitStatus \u003d attemptState.getAMContainerExitStatus();\n     setMasterContainer(attemptState.getMasterContainer());\n     recoverAppAttemptCredentials(attemptState.getAppAttemptCredentials());\n     this.recoveredFinalState \u003d attemptState.getState();\n     this.originalTrackingUrl \u003d attemptState.getFinalTrackingUrl();\n     this.proxiedTrackingUrl \u003d generateProxyUriWithScheme(originalTrackingUrl);\n     this.finalStatus \u003d attemptState.getFinalApplicationStatus();\n     this.startTime \u003d attemptState.getStartTime();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void recover(RMState state) throws Exception {\n    ApplicationState appState \u003d\n        state.getApplicationState().get(getAppAttemptId().getApplicationId());\n    ApplicationAttemptState attemptState \u003d\n        appState.getAttempt(getAppAttemptId());\n    assert attemptState !\u003d null;\n    LOG.info(\"Recovering attempt: \" + getAppAttemptId() + \" with final state: \"\n        + attemptState.getState());\n    diagnostics.append(\"Attempt recovered after RM restart\");\n    diagnostics.append(attemptState.getDiagnostics());\n    this.amContainerExitStatus \u003d attemptState.getAMContainerExitStatus();\n    setMasterContainer(attemptState.getMasterContainer());\n    recoverAppAttemptCredentials(attemptState.getAppAttemptCredentials());\n    this.recoveredFinalState \u003d attemptState.getState();\n    this.originalTrackingUrl \u003d attemptState.getFinalTrackingUrl();\n    this.proxiedTrackingUrl \u003d generateProxyUriWithScheme(originalTrackingUrl);\n    this.finalStatus \u003d attemptState.getFinalApplicationStatus();\n    this.startTime \u003d attemptState.getStartTime();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java",
      "extendedDetails": {}
    },
    "305ae48136d6e201de4451e824cb7b84f94ba2e0": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1378. Implemented a cleaner of old finished applications from the RM state-store. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1548990 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/12/13 8:17 PM",
      "commitName": "305ae48136d6e201de4451e824cb7b84f94ba2e0",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "25/11/13 3:10 PM",
      "commitNameOld": "6c243fceac85701dd4d8fd4e7d2dc2442d6eebdc",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 12.21,
      "commitsBetweenForRepo": 67,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,18 @@\n   public void recover(RMState state) throws Exception {\n     ApplicationState appState \u003d\n         state.getApplicationState().get(getAppAttemptId().getApplicationId());\n     ApplicationAttemptState attemptState \u003d\n         appState.getAttempt(getAppAttemptId());\n     assert attemptState !\u003d null;\n-    LOG.info(\"Recovered attempt: AppId: \"\n-        + getAppAttemptId().getApplicationId() + \" AttemptId: \"\n-        + getAppAttemptId() + \" MasterContainer: \" + masterContainer);\n+    LOG.info(\"Recovering attempt: \" + getAppAttemptId() + \" with final state: \"\n+        + attemptState.getState());\n     diagnostics.append(\"Attempt recovered after RM restart\");\n     diagnostics.append(attemptState.getDiagnostics());\n     setMasterContainer(attemptState.getMasterContainer());\n     recoverAppAttemptCredentials(attemptState.getAppAttemptCredentials());\n     this.recoveredFinalState \u003d attemptState.getState();\n     this.originalTrackingUrl \u003d attemptState.getFinalTrackingUrl();\n     this.proxiedTrackingUrl \u003d generateProxyUriWithScheme(originalTrackingUrl);\n     this.finalStatus \u003d attemptState.getFinalApplicationStatus();\n     this.startTime \u003d attemptState.getStartTime();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void recover(RMState state) throws Exception {\n    ApplicationState appState \u003d\n        state.getApplicationState().get(getAppAttemptId().getApplicationId());\n    ApplicationAttemptState attemptState \u003d\n        appState.getAttempt(getAppAttemptId());\n    assert attemptState !\u003d null;\n    LOG.info(\"Recovering attempt: \" + getAppAttemptId() + \" with final state: \"\n        + attemptState.getState());\n    diagnostics.append(\"Attempt recovered after RM restart\");\n    diagnostics.append(attemptState.getDiagnostics());\n    setMasterContainer(attemptState.getMasterContainer());\n    recoverAppAttemptCredentials(attemptState.getAppAttemptCredentials());\n    this.recoveredFinalState \u003d attemptState.getState();\n    this.originalTrackingUrl \u003d attemptState.getFinalTrackingUrl();\n    this.proxiedTrackingUrl \u003d generateProxyUriWithScheme(originalTrackingUrl);\n    this.finalStatus \u003d attemptState.getFinalApplicationStatus();\n    this.startTime \u003d attemptState.getStartTime();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java",
      "extendedDetails": {}
    },
    "cfa783141fa69c2cf154d1d9e5393353d14ce5e1": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1210. Changed RM to start new app-attempts on RM restart only after ensuring that previous AM exited or after expiry time. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1543310 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/11/13 9:17 PM",
      "commitName": "cfa783141fa69c2cf154d1d9e5393353d14ce5e1",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "31/10/13 7:54 PM",
      "commitNameOld": "da317f2ea5af8c12dd8ce04173239d5f9ace5d96",
      "commitAuthorOld": "Sanford Ryza",
      "daysBetweenCommits": 18.1,
      "commitsBetweenForRepo": 93,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,19 @@\n   public void recover(RMState state) throws Exception {\n     ApplicationState appState \u003d\n         state.getApplicationState().get(getAppAttemptId().getApplicationId());\n     ApplicationAttemptState attemptState \u003d\n         appState.getAttempt(getAppAttemptId());\n     assert attemptState !\u003d null;\n     LOG.info(\"Recovered attempt: AppId: \"\n         + getAppAttemptId().getApplicationId() + \" AttemptId: \"\n         + getAppAttemptId() + \" MasterContainer: \" + masterContainer);\n     diagnostics.append(\"Attempt recovered after RM restart\");\n     diagnostics.append(attemptState.getDiagnostics());\n     setMasterContainer(attemptState.getMasterContainer());\n     recoverAppAttemptCredentials(attemptState.getAppAttemptCredentials());\n     this.recoveredFinalState \u003d attemptState.getState();\n     this.originalTrackingUrl \u003d attemptState.getFinalTrackingUrl();\n     this.proxiedTrackingUrl \u003d generateProxyUriWithScheme(originalTrackingUrl);\n     this.finalStatus \u003d attemptState.getFinalApplicationStatus();\n     this.startTime \u003d attemptState.getStartTime();\n-    handle(new RMAppAttemptEvent(getAppAttemptId(),\n-      RMAppAttemptEventType.RECOVER));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void recover(RMState state) throws Exception {\n    ApplicationState appState \u003d\n        state.getApplicationState().get(getAppAttemptId().getApplicationId());\n    ApplicationAttemptState attemptState \u003d\n        appState.getAttempt(getAppAttemptId());\n    assert attemptState !\u003d null;\n    LOG.info(\"Recovered attempt: AppId: \"\n        + getAppAttemptId().getApplicationId() + \" AttemptId: \"\n        + getAppAttemptId() + \" MasterContainer: \" + masterContainer);\n    diagnostics.append(\"Attempt recovered after RM restart\");\n    diagnostics.append(attemptState.getDiagnostics());\n    setMasterContainer(attemptState.getMasterContainer());\n    recoverAppAttemptCredentials(attemptState.getAppAttemptCredentials());\n    this.recoveredFinalState \u003d attemptState.getState();\n    this.originalTrackingUrl \u003d attemptState.getFinalTrackingUrl();\n    this.proxiedTrackingUrl \u003d generateProxyUriWithScheme(originalTrackingUrl);\n    this.finalStatus \u003d attemptState.getFinalApplicationStatus();\n    this.startTime \u003d attemptState.getStartTime();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java",
      "extendedDetails": {}
    },
    "9f4d4e27fb1760b352cc5b301cd65a50d2d43ff6": {
      "type": "Ybodychange",
      "commitMessage": "YARN-891. Modified ResourceManager state-store to remember completed applications so that clients can get information about them post RM-restart. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1537560 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/10/13 10:25 AM",
      "commitName": "9f4d4e27fb1760b352cc5b301cd65a50d2d43ff6",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "09/10/13 3:49 PM",
      "commitNameOld": "9b9ddf29e28f38648c142adc8bfd8845b7cd7688",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 21.77,
      "commitsBetweenForRepo": 130,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,21 @@\n-  public void recover(RMState state) throws Exception{\n-    ApplicationState appState \u003d \n+  public void recover(RMState state) throws Exception {\n+    ApplicationState appState \u003d\n         state.getApplicationState().get(getAppAttemptId().getApplicationId());\n-    ApplicationAttemptState attemptState \u003d appState.getAttempt(getAppAttemptId());\n+    ApplicationAttemptState attemptState \u003d\n+        appState.getAttempt(getAppAttemptId());\n     assert attemptState !\u003d null;\n+    LOG.info(\"Recovered attempt: AppId: \"\n+        + getAppAttemptId().getApplicationId() + \" AttemptId: \"\n+        + getAppAttemptId() + \" MasterContainer: \" + masterContainer);\n+    diagnostics.append(\"Attempt recovered after RM restart\");\n+    diagnostics.append(attemptState.getDiagnostics());\n     setMasterContainer(attemptState.getMasterContainer());\n     recoverAppAttemptCredentials(attemptState.getAppAttemptCredentials());\n-    LOG.info(\"Recovered attempt: AppId: \" + getAppAttemptId().getApplicationId()\n-             + \" AttemptId: \" + getAppAttemptId()\n-             + \" MasterContainer: \" + masterContainer);\n-    setDiagnostics(\"Attempt recovered after RM restart\");\n-    handle(new RMAppAttemptEvent(getAppAttemptId(), \n-                                 RMAppAttemptEventType.RECOVER));\n+    this.recoveredFinalState \u003d attemptState.getState();\n+    this.originalTrackingUrl \u003d attemptState.getFinalTrackingUrl();\n+    this.proxiedTrackingUrl \u003d generateProxyUriWithScheme(originalTrackingUrl);\n+    this.finalStatus \u003d attemptState.getFinalApplicationStatus();\n+    this.startTime \u003d attemptState.getStartTime();\n+    handle(new RMAppAttemptEvent(getAppAttemptId(),\n+      RMAppAttemptEventType.RECOVER));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void recover(RMState state) throws Exception {\n    ApplicationState appState \u003d\n        state.getApplicationState().get(getAppAttemptId().getApplicationId());\n    ApplicationAttemptState attemptState \u003d\n        appState.getAttempt(getAppAttemptId());\n    assert attemptState !\u003d null;\n    LOG.info(\"Recovered attempt: AppId: \"\n        + getAppAttemptId().getApplicationId() + \" AttemptId: \"\n        + getAppAttemptId() + \" MasterContainer: \" + masterContainer);\n    diagnostics.append(\"Attempt recovered after RM restart\");\n    diagnostics.append(attemptState.getDiagnostics());\n    setMasterContainer(attemptState.getMasterContainer());\n    recoverAppAttemptCredentials(attemptState.getAppAttemptCredentials());\n    this.recoveredFinalState \u003d attemptState.getState();\n    this.originalTrackingUrl \u003d attemptState.getFinalTrackingUrl();\n    this.proxiedTrackingUrl \u003d generateProxyUriWithScheme(originalTrackingUrl);\n    this.finalStatus \u003d attemptState.getFinalApplicationStatus();\n    this.startTime \u003d attemptState.getStartTime();\n    handle(new RMAppAttemptEvent(getAppAttemptId(),\n      RMAppAttemptEventType.RECOVER));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java",
      "extendedDetails": {}
    },
    "f4951e07087c99ab6d57ff5efdd962432ac641ab": {
      "type": "Yexceptionschange",
      "commitMessage": "YARN-1116. Populate AMRMTokens back to AMRMTokenSecretManager after RM restarts (Jian He via bikas)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1523146 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/09/13 4:51 PM",
      "commitName": "f4951e07087c99ab6d57ff5efdd962432ac641ab",
      "commitAuthor": "Bikas Saha",
      "commitDateOld": "09/09/13 6:24 PM",
      "commitNameOld": "59b5490989fad4c8e80dd85c3419810cdc8332f7",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 3.94,
      "commitsBetweenForRepo": 20,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n-  public void recover(RMState state) {\n+  public void recover(RMState state) throws Exception{\n     ApplicationState appState \u003d \n         state.getApplicationState().get(getAppAttemptId().getApplicationId());\n     ApplicationAttemptState attemptState \u003d appState.getAttempt(getAppAttemptId());\n     assert attemptState !\u003d null;\n     setMasterContainer(attemptState.getMasterContainer());\n     recoverAppAttemptCredentials(attemptState.getAppAttemptCredentials());\n     LOG.info(\"Recovered attempt: AppId: \" + getAppAttemptId().getApplicationId()\n              + \" AttemptId: \" + getAppAttemptId()\n              + \" MasterContainer: \" + masterContainer);\n     setDiagnostics(\"Attempt recovered after RM restart\");\n     handle(new RMAppAttemptEvent(getAppAttemptId(), \n                                  RMAppAttemptEventType.RECOVER));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void recover(RMState state) throws Exception{\n    ApplicationState appState \u003d \n        state.getApplicationState().get(getAppAttemptId().getApplicationId());\n    ApplicationAttemptState attemptState \u003d appState.getAttempt(getAppAttemptId());\n    assert attemptState !\u003d null;\n    setMasterContainer(attemptState.getMasterContainer());\n    recoverAppAttemptCredentials(attemptState.getAppAttemptCredentials());\n    LOG.info(\"Recovered attempt: AppId: \" + getAppAttemptId().getApplicationId()\n             + \" AttemptId: \" + getAppAttemptId()\n             + \" MasterContainer: \" + masterContainer);\n    setDiagnostics(\"Attempt recovered after RM restart\");\n    handle(new RMAppAttemptEvent(getAppAttemptId(), \n                                 RMAppAttemptEventType.RECOVER));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java",
      "extendedDetails": {
        "oldValue": "[]",
        "newValue": "[Exception]"
      }
    },
    "89fb4d8ffd32b06db42cc3e21d2a89e99deb7732": {
      "type": "Ybodychange",
      "commitMessage": "YARN-707. Added user information also in the YARN ClientToken so that AMs can implement authorization based on incoming users. Contributed by Jason Lowe.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1518868 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/08/13 6:12 PM",
      "commitName": "89fb4d8ffd32b06db42cc3e21d2a89e99deb7732",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "23/08/13 6:15 PM",
      "commitNameOld": "c660339c093ee96e90e3b3778177a499e3b36404",
      "commitAuthorOld": "Jason Darrell Lowe",
      "daysBetweenCommits": 6.0,
      "commitsBetweenForRepo": 32,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n   public void recover(RMState state) {\n     ApplicationState appState \u003d \n         state.getApplicationState().get(getAppAttemptId().getApplicationId());\n     ApplicationAttemptState attemptState \u003d appState.getAttempt(getAppAttemptId());\n     assert attemptState !\u003d null;\n     setMasterContainer(attemptState.getMasterContainer());\n-    recoverAppAttemptTokens(attemptState.getAppAttemptTokens());\n+    recoverAppAttemptCredentials(attemptState.getAppAttemptCredentials());\n     LOG.info(\"Recovered attempt: AppId: \" + getAppAttemptId().getApplicationId()\n              + \" AttemptId: \" + getAppAttemptId()\n              + \" MasterContainer: \" + masterContainer);\n     setDiagnostics(\"Attempt recovered after RM restart\");\n     handle(new RMAppAttemptEvent(getAppAttemptId(), \n                                  RMAppAttemptEventType.RECOVER));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void recover(RMState state) {\n    ApplicationState appState \u003d \n        state.getApplicationState().get(getAppAttemptId().getApplicationId());\n    ApplicationAttemptState attemptState \u003d appState.getAttempt(getAppAttemptId());\n    assert attemptState !\u003d null;\n    setMasterContainer(attemptState.getMasterContainer());\n    recoverAppAttemptCredentials(attemptState.getAppAttemptCredentials());\n    LOG.info(\"Recovered attempt: AppId: \" + getAppAttemptId().getApplicationId()\n             + \" AttemptId: \" + getAppAttemptId()\n             + \" MasterContainer: \" + masterContainer);\n    setDiagnostics(\"Attempt recovered after RM restart\");\n    handle(new RMAppAttemptEvent(getAppAttemptId(), \n                                 RMAppAttemptEventType.RECOVER));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java",
      "extendedDetails": {}
    },
    "74231f027607ff1a6fe7d72fad28108826963cf3": {
      "type": "Ybodychange",
      "commitMessage": "YARN-582. Changed ResourceManager to recover Application token and client tokens for app attempt so that RM can be restarted while preserving current applications. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1480168 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/05/13 11:20 PM",
      "commitName": "74231f027607ff1a6fe7d72fad28108826963cf3",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "11/04/13 12:28 PM",
      "commitNameOld": "e4c55e17fea55e2fcbef182bb2b0c4b22686f38c",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 26.45,
      "commitsBetweenForRepo": 141,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,14 @@\n   public void recover(RMState state) {\n     ApplicationState appState \u003d \n         state.getApplicationState().get(getAppAttemptId().getApplicationId());\n     ApplicationAttemptState attemptState \u003d appState.getAttempt(getAppAttemptId());\n     assert attemptState !\u003d null;\n     setMasterContainer(attemptState.getMasterContainer());\n-    LOG.info(\"Recovered attempt: AppId: \" + getAppAttemptId().getApplicationId() \n+    recoverAppAttemptTokens(attemptState.getAppAttemptTokens());\n+    LOG.info(\"Recovered attempt: AppId: \" + getAppAttemptId().getApplicationId()\n              + \" AttemptId: \" + getAppAttemptId()\n              + \" MasterContainer: \" + masterContainer);\n     setDiagnostics(\"Attempt recovered after RM restart\");\n     handle(new RMAppAttemptEvent(getAppAttemptId(), \n                                  RMAppAttemptEventType.RECOVER));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void recover(RMState state) {\n    ApplicationState appState \u003d \n        state.getApplicationState().get(getAppAttemptId().getApplicationId());\n    ApplicationAttemptState attemptState \u003d appState.getAttempt(getAppAttemptId());\n    assert attemptState !\u003d null;\n    setMasterContainer(attemptState.getMasterContainer());\n    recoverAppAttemptTokens(attemptState.getAppAttemptTokens());\n    LOG.info(\"Recovered attempt: AppId: \" + getAppAttemptId().getApplicationId()\n             + \" AttemptId: \" + getAppAttemptId()\n             + \" MasterContainer: \" + masterContainer);\n    setDiagnostics(\"Attempt recovered after RM restart\");\n    handle(new RMAppAttemptEvent(getAppAttemptId(), \n                                 RMAppAttemptEventType.RECOVER));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java",
      "extendedDetails": {}
    },
    "6cd0736cc57849e4f7c5d38a3986432a9717fe39": {
      "type": "Yintroduced",
      "commitMessage": "YARN-230. RM Restart phase 1 - includes support for saving/restarting all applications on an RM bounce. Contributed by Bikas Saha.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1423758 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/12/12 8:21 PM",
      "commitName": "6cd0736cc57849e4f7c5d38a3986432a9717fe39",
      "commitAuthor": "Arun Murthy",
      "diff": "@@ -0,0 +1,13 @@\n+  public void recover(RMState state) {\n+    ApplicationState appState \u003d \n+        state.getApplicationState().get(getAppAttemptId().getApplicationId());\n+    ApplicationAttemptState attemptState \u003d appState.getAttempt(getAppAttemptId());\n+    assert attemptState !\u003d null;\n+    setMasterContainer(attemptState.getMasterContainer());\n+    LOG.info(\"Recovered attempt: AppId: \" + getAppAttemptId().getApplicationId() \n+             + \" AttemptId: \" + getAppAttemptId()\n+             + \" MasterContainer: \" + masterContainer);\n+    setDiagnostics(\"Attempt recovered after RM restart\");\n+    handle(new RMAppAttemptEvent(getAppAttemptId(), \n+                                 RMAppAttemptEventType.RECOVER));\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void recover(RMState state) {\n    ApplicationState appState \u003d \n        state.getApplicationState().get(getAppAttemptId().getApplicationId());\n    ApplicationAttemptState attemptState \u003d appState.getAttempt(getAppAttemptId());\n    assert attemptState !\u003d null;\n    setMasterContainer(attemptState.getMasterContainer());\n    LOG.info(\"Recovered attempt: AppId: \" + getAppAttemptId().getApplicationId() \n             + \" AttemptId: \" + getAppAttemptId()\n             + \" MasterContainer: \" + masterContainer);\n    setDiagnostics(\"Attempt recovered after RM restart\");\n    handle(new RMAppAttemptEvent(getAppAttemptId(), \n                                 RMAppAttemptEventType.RECOVER));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/attempt/RMAppAttemptImpl.java"
    }
  }
}