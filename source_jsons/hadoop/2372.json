{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PBHelperClient.java",
  "functionName": "convert",
  "functionId": "convert___blockTokenSecret-BlockTokenIdentifier",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelperClient.java",
  "functionStartLine": 721,
  "functionEndLine": 755,
  "numCommitsSeen": 80,
  "timeTaken": 3700,
  "changeHistory": [
    "8fb5ca3f405550828a17e689b9c60ddf7fb95ec1",
    "a3954ccab148bddc290cb96528e63ff19799bcc9",
    "2f73396b5901fd5fe29f6cd76fc1b3134b854b37",
    "4ed33e9ca3d85568e3904753a3ef61a85f801838"
  ],
  "changeHistoryShort": {
    "8fb5ca3f405550828a17e689b9c60ddf7fb95ec1": "Ybodychange",
    "a3954ccab148bddc290cb96528e63ff19799bcc9": "Ybodychange",
    "2f73396b5901fd5fe29f6cd76fc1b3134b854b37": "Ybodychange",
    "4ed33e9ca3d85568e3904753a3ef61a85f801838": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8fb5ca3f405550828a17e689b9c60ddf7fb95ec1": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14611. Move handshake secret field from Token to BlockAccessToken. Contributed by Chen Liang.\n",
      "commitDate": "11/07/19 1:23 PM",
      "commitName": "8fb5ca3f405550828a17e689b9c60ddf7fb95ec1",
      "commitAuthor": "Chen Liang",
      "commitDateOld": "24/06/19 5:52 PM",
      "commitNameOld": "b76b843c8bd3906aaa5ad633d8a939aebc671907",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 16.81,
      "commitsBetweenForRepo": 83,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,35 @@\n   public static BlockTokenSecretProto convert(\n       BlockTokenIdentifier blockTokenSecret) {\n     BlockTokenSecretProto.Builder builder \u003d\n         BlockTokenSecretProto.newBuilder();\n     builder.setExpiryDate(blockTokenSecret.getExpiryDate());\n     builder.setKeyId(blockTokenSecret.getKeyId());\n     String userId \u003d blockTokenSecret.getUserId();\n     if (userId !\u003d null) {\n       builder.setUserId(userId);\n     }\n \n     String blockPoolId \u003d blockTokenSecret.getBlockPoolId();\n     if (blockPoolId !\u003d null) {\n       builder.setBlockPoolId(blockPoolId);\n     }\n \n     builder.setBlockId(blockTokenSecret.getBlockId());\n \n     for (BlockTokenIdentifier.AccessMode aMode :\n         blockTokenSecret.getAccessModes()) {\n       builder.addModes(convert(aMode));\n     }\n     for (StorageType storageType : blockTokenSecret.getStorageTypes()) {\n       builder.addStorageTypes(convertStorageType(storageType));\n     }\n     for (String storageId : blockTokenSecret.getStorageIds()) {\n       builder.addStorageIds(storageId);\n     }\n+\n+    byte[] handshake \u003d blockTokenSecret.getHandshakeMsg();\n+    if (handshake !\u003d null \u0026\u0026 handshake.length \u003e 0) {\n+      builder.setHandshakeSecret(getByteString(handshake));\n+    }\n     return builder.build();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static BlockTokenSecretProto convert(\n      BlockTokenIdentifier blockTokenSecret) {\n    BlockTokenSecretProto.Builder builder \u003d\n        BlockTokenSecretProto.newBuilder();\n    builder.setExpiryDate(blockTokenSecret.getExpiryDate());\n    builder.setKeyId(blockTokenSecret.getKeyId());\n    String userId \u003d blockTokenSecret.getUserId();\n    if (userId !\u003d null) {\n      builder.setUserId(userId);\n    }\n\n    String blockPoolId \u003d blockTokenSecret.getBlockPoolId();\n    if (blockPoolId !\u003d null) {\n      builder.setBlockPoolId(blockPoolId);\n    }\n\n    builder.setBlockId(blockTokenSecret.getBlockId());\n\n    for (BlockTokenIdentifier.AccessMode aMode :\n        blockTokenSecret.getAccessModes()) {\n      builder.addModes(convert(aMode));\n    }\n    for (StorageType storageType : blockTokenSecret.getStorageTypes()) {\n      builder.addStorageTypes(convertStorageType(storageType));\n    }\n    for (String storageId : blockTokenSecret.getStorageIds()) {\n      builder.addStorageIds(storageId);\n    }\n\n    byte[] handshake \u003d blockTokenSecret.getHandshakeMsg();\n    if (handshake !\u003d null \u0026\u0026 handshake.length \u003e 0) {\n      builder.setHandshakeSecret(getByteString(handshake));\n    }\n    return builder.build();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelperClient.java",
      "extendedDetails": {}
    },
    "a3954ccab148bddc290cb96528e63ff19799bcc9": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9807. Add an optional StorageID to writes. Contributed by Ewan Higgs\n",
      "commitDate": "05/05/17 12:01 PM",
      "commitName": "a3954ccab148bddc290cb96528e63ff19799bcc9",
      "commitAuthor": "Chris Douglas",
      "commitDateOld": "04/05/17 11:39 AM",
      "commitNameOld": "c2a52ef9c29459ff9ef3e23b29e14912bfdb1405",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 1.02,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,30 @@\n   public static BlockTokenSecretProto convert(\n       BlockTokenIdentifier blockTokenSecret) {\n     BlockTokenSecretProto.Builder builder \u003d\n         BlockTokenSecretProto.newBuilder();\n     builder.setExpiryDate(blockTokenSecret.getExpiryDate());\n     builder.setKeyId(blockTokenSecret.getKeyId());\n     String userId \u003d blockTokenSecret.getUserId();\n     if (userId !\u003d null) {\n       builder.setUserId(userId);\n     }\n \n     String blockPoolId \u003d blockTokenSecret.getBlockPoolId();\n     if (blockPoolId !\u003d null) {\n       builder.setBlockPoolId(blockPoolId);\n     }\n \n     builder.setBlockId(blockTokenSecret.getBlockId());\n \n     for (BlockTokenIdentifier.AccessMode aMode :\n         blockTokenSecret.getAccessModes()) {\n       builder.addModes(convert(aMode));\n     }\n     for (StorageType storageType : blockTokenSecret.getStorageTypes()) {\n       builder.addStorageTypes(convertStorageType(storageType));\n     }\n+    for (String storageId : blockTokenSecret.getStorageIds()) {\n+      builder.addStorageIds(storageId);\n+    }\n     return builder.build();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static BlockTokenSecretProto convert(\n      BlockTokenIdentifier blockTokenSecret) {\n    BlockTokenSecretProto.Builder builder \u003d\n        BlockTokenSecretProto.newBuilder();\n    builder.setExpiryDate(blockTokenSecret.getExpiryDate());\n    builder.setKeyId(blockTokenSecret.getKeyId());\n    String userId \u003d blockTokenSecret.getUserId();\n    if (userId !\u003d null) {\n      builder.setUserId(userId);\n    }\n\n    String blockPoolId \u003d blockTokenSecret.getBlockPoolId();\n    if (blockPoolId !\u003d null) {\n      builder.setBlockPoolId(blockPoolId);\n    }\n\n    builder.setBlockId(blockTokenSecret.getBlockId());\n\n    for (BlockTokenIdentifier.AccessMode aMode :\n        blockTokenSecret.getAccessModes()) {\n      builder.addModes(convert(aMode));\n    }\n    for (StorageType storageType : blockTokenSecret.getStorageTypes()) {\n      builder.addStorageTypes(convertStorageType(storageType));\n    }\n    for (String storageId : blockTokenSecret.getStorageIds()) {\n      builder.addStorageIds(storageId);\n    }\n    return builder.build();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelperClient.java",
      "extendedDetails": {}
    },
    "2f73396b5901fd5fe29f6cd76fc1b3134b854b37": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6708. StorageType should be encoded in the block token. Contributed by Ewan Higgs\n",
      "commitDate": "25/04/17 11:57 PM",
      "commitName": "2f73396b5901fd5fe29f6cd76fc1b3134b854b37",
      "commitAuthor": "Chris Douglas",
      "commitDateOld": "12/04/17 12:24 PM",
      "commitNameOld": "966b1b5b44103f3e3952da45da264d76fb3ac384",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 13.48,
      "commitsBetweenForRepo": 56,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,27 @@\n   public static BlockTokenSecretProto convert(\n       BlockTokenIdentifier blockTokenSecret) {\n     BlockTokenSecretProto.Builder builder \u003d\n         BlockTokenSecretProto.newBuilder();\n     builder.setExpiryDate(blockTokenSecret.getExpiryDate());\n     builder.setKeyId(blockTokenSecret.getKeyId());\n     String userId \u003d blockTokenSecret.getUserId();\n     if (userId !\u003d null) {\n       builder.setUserId(userId);\n     }\n \n     String blockPoolId \u003d blockTokenSecret.getBlockPoolId();\n     if (blockPoolId !\u003d null) {\n       builder.setBlockPoolId(blockPoolId);\n     }\n \n     builder.setBlockId(blockTokenSecret.getBlockId());\n \n     for (BlockTokenIdentifier.AccessMode aMode :\n         blockTokenSecret.getAccessModes()) {\n       builder.addModes(convert(aMode));\n     }\n+    for (StorageType storageType : blockTokenSecret.getStorageTypes()) {\n+      builder.addStorageTypes(convertStorageType(storageType));\n+    }\n     return builder.build();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static BlockTokenSecretProto convert(\n      BlockTokenIdentifier blockTokenSecret) {\n    BlockTokenSecretProto.Builder builder \u003d\n        BlockTokenSecretProto.newBuilder();\n    builder.setExpiryDate(blockTokenSecret.getExpiryDate());\n    builder.setKeyId(blockTokenSecret.getKeyId());\n    String userId \u003d blockTokenSecret.getUserId();\n    if (userId !\u003d null) {\n      builder.setUserId(userId);\n    }\n\n    String blockPoolId \u003d blockTokenSecret.getBlockPoolId();\n    if (blockPoolId !\u003d null) {\n      builder.setBlockPoolId(blockPoolId);\n    }\n\n    builder.setBlockId(blockTokenSecret.getBlockId());\n\n    for (BlockTokenIdentifier.AccessMode aMode :\n        blockTokenSecret.getAccessModes()) {\n      builder.addModes(convert(aMode));\n    }\n    for (StorageType storageType : blockTokenSecret.getStorageTypes()) {\n      builder.addStorageTypes(convertStorageType(storageType));\n    }\n    return builder.build();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelperClient.java",
      "extendedDetails": {}
    },
    "4ed33e9ca3d85568e3904753a3ef61a85f801838": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-11026. Convert BlockTokenIdentifier to use Protobuf. Contributed by Ewan Higgs.\n",
      "commitDate": "13/02/17 11:29 AM",
      "commitName": "4ed33e9ca3d85568e3904753a3ef61a85f801838",
      "commitAuthor": "Chris Douglas",
      "diff": "@@ -0,0 +1,24 @@\n+  public static BlockTokenSecretProto convert(\n+      BlockTokenIdentifier blockTokenSecret) {\n+    BlockTokenSecretProto.Builder builder \u003d\n+        BlockTokenSecretProto.newBuilder();\n+    builder.setExpiryDate(blockTokenSecret.getExpiryDate());\n+    builder.setKeyId(blockTokenSecret.getKeyId());\n+    String userId \u003d blockTokenSecret.getUserId();\n+    if (userId !\u003d null) {\n+      builder.setUserId(userId);\n+    }\n+\n+    String blockPoolId \u003d blockTokenSecret.getBlockPoolId();\n+    if (blockPoolId !\u003d null) {\n+      builder.setBlockPoolId(blockPoolId);\n+    }\n+\n+    builder.setBlockId(blockTokenSecret.getBlockId());\n+\n+    for (BlockTokenIdentifier.AccessMode aMode :\n+        blockTokenSecret.getAccessModes()) {\n+      builder.addModes(convert(aMode));\n+    }\n+    return builder.build();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static BlockTokenSecretProto convert(\n      BlockTokenIdentifier blockTokenSecret) {\n    BlockTokenSecretProto.Builder builder \u003d\n        BlockTokenSecretProto.newBuilder();\n    builder.setExpiryDate(blockTokenSecret.getExpiryDate());\n    builder.setKeyId(blockTokenSecret.getKeyId());\n    String userId \u003d blockTokenSecret.getUserId();\n    if (userId !\u003d null) {\n      builder.setUserId(userId);\n    }\n\n    String blockPoolId \u003d blockTokenSecret.getBlockPoolId();\n    if (blockPoolId !\u003d null) {\n      builder.setBlockPoolId(blockPoolId);\n    }\n\n    builder.setBlockId(blockTokenSecret.getBlockId());\n\n    for (BlockTokenIdentifier.AccessMode aMode :\n        blockTokenSecret.getAccessModes()) {\n      builder.addModes(convert(aMode));\n    }\n    return builder.build();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelperClient.java"
    }
  }
}