{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FileUtil.java",
  "functionName": "setPermission",
  "functionId": "setPermission___f-File__permission-FsPermission",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileUtil.java",
  "functionStartLine": 1276,
  "functionEndLine": 1314,
  "numCommitsSeen": 52,
  "timeTaken": 2172,
  "changeHistory": [
    "638801cce16fc1dc3259c541dc30a599faaddda1"
  ],
  "changeHistoryShort": {
    "638801cce16fc1dc3259c541dc30a599faaddda1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "638801cce16fc1dc3259c541dc30a599faaddda1": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-8952. Enhancements to support Hadoop on Windows Server and Windows Azure environments. Contributed by Ivan Mitic, Chuan Liu, Ramya Sunil, Bikas Saha, Kanna Karanam, John Gordon, Brandon Li, Chris Nauroth, David Lao, Sumadhur Reddy Bolli, Arpit Agarwal, Ahmed El Baz, Mike Liddell, Jing Zhao, Thejas Nair, Steve Maine, Ganeshan Iyer, Raja Aluri, Giridharan Kesavan, Ramya Bharathi Nimmagadda.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1453486 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/03/13 11:15 AM",
      "commitName": "638801cce16fc1dc3259c541dc30a599faaddda1",
      "commitAuthor": "Suresh Srinivas",
      "diff": "@@ -0,0 +1,39 @@\n+  public static void setPermission(File f, FsPermission permission\n+                                   ) throws IOException {\n+    FsAction user \u003d permission.getUserAction();\n+    FsAction group \u003d permission.getGroupAction();\n+    FsAction other \u003d permission.getOtherAction();\n+\n+    // use the native/fork if the group/other permissions are different\n+    // or if the native is available or on Windows\n+    if (group !\u003d other || NativeIO.isAvailable() || Shell.WINDOWS) {\n+      execSetPermission(f, permission);\n+      return;\n+    }\n+    \n+    boolean rv \u003d true;\n+    \n+    // read perms\n+    rv \u003d f.setReadable(group.implies(FsAction.READ), false);\n+    checkReturnValue(rv, f, permission);\n+    if (group.implies(FsAction.READ) !\u003d user.implies(FsAction.READ)) {\n+      rv \u003d f.setReadable(user.implies(FsAction.READ), true);\n+      checkReturnValue(rv, f, permission);\n+    }\n+\n+    // write perms\n+    rv \u003d f.setWritable(group.implies(FsAction.WRITE), false);\n+    checkReturnValue(rv, f, permission);\n+    if (group.implies(FsAction.WRITE) !\u003d user.implies(FsAction.WRITE)) {\n+      rv \u003d f.setWritable(user.implies(FsAction.WRITE), true);\n+      checkReturnValue(rv, f, permission);\n+    }\n+\n+    // exec perms\n+    rv \u003d f.setExecutable(group.implies(FsAction.EXECUTE), false);\n+    checkReturnValue(rv, f, permission);\n+    if (group.implies(FsAction.EXECUTE) !\u003d user.implies(FsAction.EXECUTE)) {\n+      rv \u003d f.setExecutable(user.implies(FsAction.EXECUTE), true);\n+      checkReturnValue(rv, f, permission);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static void setPermission(File f, FsPermission permission\n                                   ) throws IOException {\n    FsAction user \u003d permission.getUserAction();\n    FsAction group \u003d permission.getGroupAction();\n    FsAction other \u003d permission.getOtherAction();\n\n    // use the native/fork if the group/other permissions are different\n    // or if the native is available or on Windows\n    if (group !\u003d other || NativeIO.isAvailable() || Shell.WINDOWS) {\n      execSetPermission(f, permission);\n      return;\n    }\n    \n    boolean rv \u003d true;\n    \n    // read perms\n    rv \u003d f.setReadable(group.implies(FsAction.READ), false);\n    checkReturnValue(rv, f, permission);\n    if (group.implies(FsAction.READ) !\u003d user.implies(FsAction.READ)) {\n      rv \u003d f.setReadable(user.implies(FsAction.READ), true);\n      checkReturnValue(rv, f, permission);\n    }\n\n    // write perms\n    rv \u003d f.setWritable(group.implies(FsAction.WRITE), false);\n    checkReturnValue(rv, f, permission);\n    if (group.implies(FsAction.WRITE) !\u003d user.implies(FsAction.WRITE)) {\n      rv \u003d f.setWritable(user.implies(FsAction.WRITE), true);\n      checkReturnValue(rv, f, permission);\n    }\n\n    // exec perms\n    rv \u003d f.setExecutable(group.implies(FsAction.EXECUTE), false);\n    checkReturnValue(rv, f, permission);\n    if (group.implies(FsAction.EXECUTE) !\u003d user.implies(FsAction.EXECUTE)) {\n      rv \u003d f.setExecutable(user.implies(FsAction.EXECUTE), true);\n      checkReturnValue(rv, f, permission);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileUtil.java"
    }
  }
}