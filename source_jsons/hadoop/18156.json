{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CachedRecordStore.java",
  "functionName": "overrideExpiredRecords",
  "functionId": "overrideExpiredRecords___query-QueryResult__R__",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/store/CachedRecordStore.java",
  "functionStartLine": 172,
  "functionEndLine": 203,
  "numCommitsSeen": 6,
  "timeTaken": 1829,
  "changeHistory": [
    "64d4abf489a0267a265591026f8e6c84bc78591e",
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d",
    "55da7fd7ebe2f3fa1c1c828dda727fddc75a1b81"
  ],
  "changeHistoryShort": {
    "64d4abf489a0267a265591026f8e6c84bc78591e": "Ybodychange",
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d": "Yfilerename",
    "55da7fd7ebe2f3fa1c1c828dda727fddc75a1b81": "Yintroduced"
  },
  "changeHistoryDetails": {
    "64d4abf489a0267a265591026f8e6c84bc78591e": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14593. RBF: Implement deletion feature for expired records in State Store. Contributed by  Takanobu Asanuma.\n",
      "commitDate": "15/07/19 10:08 AM",
      "commitName": "64d4abf489a0267a265591026f8e6c84bc78591e",
      "commitAuthor": "Ayush Saxena",
      "commitDateOld": "02/10/18 8:48 PM",
      "commitNameOld": "fa7f7078a713c44783425195a891582bcf8a6d5c",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 285.56,
      "commitsBetweenForRepo": 2119,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,32 @@\n   public void overrideExpiredRecords(QueryResult\u003cR\u003e query) throws IOException {\n     List\u003cR\u003e commitRecords \u003d new ArrayList\u003c\u003e();\n+    List\u003cR\u003e deleteRecords \u003d new ArrayList\u003c\u003e();\n     List\u003cR\u003e newRecords \u003d query.getRecords();\n     long currentDriverTime \u003d query.getTimestamp();\n     if (newRecords \u003d\u003d null || currentDriverTime \u003c\u003d 0) {\n       LOG.error(\"Cannot check overrides for record\");\n       return;\n     }\n     for (R record : newRecords) {\n-      if (record.checkExpired(currentDriverTime)) {\n+      if (record.shouldBeDeleted(currentDriverTime)) {\n+        String recordName \u003d StateStoreUtils.getRecordName(record.getClass());\n+        if (getDriver().remove(record)) {\n+          deleteRecords.add(record);\n+          LOG.info(\"Deleted State Store record {}: {}\", recordName, record);\n+        } else {\n+          LOG.warn(\"Couldn\u0027t delete State Store record {}: {}\", recordName,\n+              record);\n+        }\n+      } else if (record.checkExpired(currentDriverTime)) {\n         String recordName \u003d StateStoreUtils.getRecordName(record.getClass());\n         LOG.info(\"Override State Store record {}: {}\", recordName, record);\n         commitRecords.add(record);\n       }\n     }\n     if (commitRecords.size() \u003e 0) {\n       getDriver().putAll(commitRecords, true, false);\n     }\n+    if (deleteRecords.size() \u003e 0) {\n+      newRecords.removeAll(deleteRecords);\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void overrideExpiredRecords(QueryResult\u003cR\u003e query) throws IOException {\n    List\u003cR\u003e commitRecords \u003d new ArrayList\u003c\u003e();\n    List\u003cR\u003e deleteRecords \u003d new ArrayList\u003c\u003e();\n    List\u003cR\u003e newRecords \u003d query.getRecords();\n    long currentDriverTime \u003d query.getTimestamp();\n    if (newRecords \u003d\u003d null || currentDriverTime \u003c\u003d 0) {\n      LOG.error(\"Cannot check overrides for record\");\n      return;\n    }\n    for (R record : newRecords) {\n      if (record.shouldBeDeleted(currentDriverTime)) {\n        String recordName \u003d StateStoreUtils.getRecordName(record.getClass());\n        if (getDriver().remove(record)) {\n          deleteRecords.add(record);\n          LOG.info(\"Deleted State Store record {}: {}\", recordName, record);\n        } else {\n          LOG.warn(\"Couldn\u0027t delete State Store record {}: {}\", recordName,\n              record);\n        }\n      } else if (record.checkExpired(currentDriverTime)) {\n        String recordName \u003d StateStoreUtils.getRecordName(record.getClass());\n        LOG.info(\"Override State Store record {}: {}\", recordName, record);\n        commitRecords.add(record);\n      }\n    }\n    if (commitRecords.size() \u003e 0) {\n      getDriver().putAll(commitRecords, true, false);\n    }\n    if (deleteRecords.size() \u003e 0) {\n      newRecords.removeAll(deleteRecords);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/store/CachedRecordStore.java",
      "extendedDetails": {}
    },
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-13215. RBF: Move Router to its own module. Contributed by Wei Yan\n",
      "commitDate": "19/03/18 10:13 PM",
      "commitName": "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d",
      "commitAuthor": "weiy",
      "commitDateOld": "19/03/18 5:19 PM",
      "commitNameOld": "e65ff1c8be48ef4f04ed96f96ac4caef4974944d",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 0.2,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void overrideExpiredRecords(QueryResult\u003cR\u003e query) throws IOException {\n    List\u003cR\u003e commitRecords \u003d new ArrayList\u003c\u003e();\n    List\u003cR\u003e newRecords \u003d query.getRecords();\n    long currentDriverTime \u003d query.getTimestamp();\n    if (newRecords \u003d\u003d null || currentDriverTime \u003c\u003d 0) {\n      LOG.error(\"Cannot check overrides for record\");\n      return;\n    }\n    for (R record : newRecords) {\n      if (record.checkExpired(currentDriverTime)) {\n        String recordName \u003d StateStoreUtils.getRecordName(record.getClass());\n        LOG.info(\"Override State Store record {}: {}\", recordName, record);\n        commitRecords.add(record);\n      }\n    }\n    if (commitRecords.size() \u003e 0) {\n      getDriver().putAll(commitRecords, true, false);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/store/CachedRecordStore.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/federation/store/CachedRecordStore.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/store/CachedRecordStore.java"
      }
    },
    "55da7fd7ebe2f3fa1c1c828dda727fddc75a1b81": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-10687. Federation Membership State Store internal API. Contributed by Jason Kace and Inigo Goiri.\n\n(cherry picked from commit 95cae08849d23cf12c5d280c29f90908e6a90d40)\n",
      "commitDate": "06/10/17 6:50 PM",
      "commitName": "55da7fd7ebe2f3fa1c1c828dda727fddc75a1b81",
      "commitAuthor": "Inigo Goiri",
      "diff": "@@ -0,0 +1,19 @@\n+  public void overrideExpiredRecords(QueryResult\u003cR\u003e query) throws IOException {\n+    List\u003cR\u003e commitRecords \u003d new ArrayList\u003c\u003e();\n+    List\u003cR\u003e newRecords \u003d query.getRecords();\n+    long currentDriverTime \u003d query.getTimestamp();\n+    if (newRecords \u003d\u003d null || currentDriverTime \u003c\u003d 0) {\n+      LOG.error(\"Cannot check overrides for record\");\n+      return;\n+    }\n+    for (R record : newRecords) {\n+      if (record.checkExpired(currentDriverTime)) {\n+        String recordName \u003d StateStoreUtils.getRecordName(record.getClass());\n+        LOG.info(\"Override State Store record {}: {}\", recordName, record);\n+        commitRecords.add(record);\n+      }\n+    }\n+    if (commitRecords.size() \u003e 0) {\n+      getDriver().putAll(commitRecords, true, false);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void overrideExpiredRecords(QueryResult\u003cR\u003e query) throws IOException {\n    List\u003cR\u003e commitRecords \u003d new ArrayList\u003c\u003e();\n    List\u003cR\u003e newRecords \u003d query.getRecords();\n    long currentDriverTime \u003d query.getTimestamp();\n    if (newRecords \u003d\u003d null || currentDriverTime \u003c\u003d 0) {\n      LOG.error(\"Cannot check overrides for record\");\n      return;\n    }\n    for (R record : newRecords) {\n      if (record.checkExpired(currentDriverTime)) {\n        String recordName \u003d StateStoreUtils.getRecordName(record.getClass());\n        LOG.info(\"Override State Store record {}: {}\", recordName, record);\n        commitRecords.add(record);\n      }\n    }\n    if (commitRecords.size() \u003e 0) {\n      getDriver().putAll(commitRecords, true, false);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/federation/store/CachedRecordStore.java"
    }
  }
}