{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CosNativeFileSystemStore.java",
  "functionName": "retrieve",
  "functionId": "retrieve___key-String__byteRangeStart-long",
  "sourceFilePath": "hadoop-cloud-storage-project/hadoop-cos/src/main/java/org/apache/hadoop/fs/cosn/CosNativeFileSystemStore.java",
  "functionStartLine": 420,
  "functionEndLine": 446,
  "numCommitsSeen": 2,
  "timeTaken": 371,
  "changeHistory": [
    "8a9ede5cff816b66afc37e7c9d2b33aee48795d2"
  ],
  "changeHistoryShort": {
    "8a9ede5cff816b66afc37e7c9d2b33aee48795d2": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8a9ede5cff816b66afc37e7c9d2b33aee48795d2": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-15616. Incorporate Tencent Cloud COS File System Implementation. Contributed by Yang Yu.\n",
      "commitDate": "27/09/19 1:53 AM",
      "commitName": "8a9ede5cff816b66afc37e7c9d2b33aee48795d2",
      "commitAuthor": "Sammi Chen",
      "diff": "@@ -0,0 +1,27 @@\n+  public InputStream retrieve(String key, long byteRangeStart)\n+      throws IOException {\n+    try {\n+      LOG.debug(\"Retrieve COS key:[{}]. range start:[{}].\",\n+          key, byteRangeStart);\n+      long fileSize \u003d getFileLength(key);\n+      long byteRangeEnd \u003d fileSize - 1;\n+      GetObjectRequest getObjectRequest \u003d\n+          new GetObjectRequest(this.bucketName, key);\n+      if (byteRangeEnd \u003e\u003d byteRangeStart) {\n+        getObjectRequest.setRange(byteRangeStart, fileSize - 1);\n+      }\n+      COSObject cosObject \u003d\n+          (COSObject) callCOSClientWithRetry(getObjectRequest);\n+      return cosObject.getObjectContent();\n+    } catch (Exception e) {\n+      String errMsg \u003d\n+          String.format(\"Retrieving COS key: [%s] occurs an exception. \" +\n+                  \"byte range start: [%s], exception: [%s].\",\n+              key, byteRangeStart, e.toString());\n+      LOG.error(errMsg);\n+      handleException(new Exception(errMsg), key);\n+    }\n+\n+    // never will get here\n+    return null;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public InputStream retrieve(String key, long byteRangeStart)\n      throws IOException {\n    try {\n      LOG.debug(\"Retrieve COS key:[{}]. range start:[{}].\",\n          key, byteRangeStart);\n      long fileSize \u003d getFileLength(key);\n      long byteRangeEnd \u003d fileSize - 1;\n      GetObjectRequest getObjectRequest \u003d\n          new GetObjectRequest(this.bucketName, key);\n      if (byteRangeEnd \u003e\u003d byteRangeStart) {\n        getObjectRequest.setRange(byteRangeStart, fileSize - 1);\n      }\n      COSObject cosObject \u003d\n          (COSObject) callCOSClientWithRetry(getObjectRequest);\n      return cosObject.getObjectContent();\n    } catch (Exception e) {\n      String errMsg \u003d\n          String.format(\"Retrieving COS key: [%s] occurs an exception. \" +\n                  \"byte range start: [%s], exception: [%s].\",\n              key, byteRangeStart, e.toString());\n      LOG.error(errMsg);\n      handleException(new Exception(errMsg), key);\n    }\n\n    // never will get here\n    return null;\n  }",
      "path": "hadoop-cloud-storage-project/hadoop-cos/src/main/java/org/apache/hadoop/fs/cosn/CosNativeFileSystemStore.java"
    }
  }
}