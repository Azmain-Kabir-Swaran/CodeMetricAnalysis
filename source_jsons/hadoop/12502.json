{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Dispatcher.java",
  "functionName": "shouldIgnore",
  "functionId": "shouldIgnore___dn-DatanodeInfo",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Dispatcher.java",
  "functionStartLine": 1086,
  "functionEndLine": 1104,
  "numCommitsSeen": 101,
  "timeTaken": 3489,
  "changeHistory": [
    "b61fb267b92b2736920b4bd0c673d31e7632ebb9",
    "7ecbfd44aa57f5f54c214b7fdedda2500be76f51",
    "c3cf331dc91e2beef2afeed11105084843b02858",
    "b8597e6a10b2e8df1bee4e8ce0c8be345f7e007d"
  ],
  "changeHistoryShort": {
    "b61fb267b92b2736920b4bd0c673d31e7632ebb9": "Ybodychange",
    "7ecbfd44aa57f5f54c214b7fdedda2500be76f51": "Ybodychange",
    "c3cf331dc91e2beef2afeed11105084843b02858": "Ymultichange(Ymovefromfile,Ybodychange)",
    "b8597e6a10b2e8df1bee4e8ce0c8be345f7e007d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b61fb267b92b2736920b4bd0c673d31e7632ebb9": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9390. Block management for maintenance states.\n",
      "commitDate": "17/10/16 5:45 PM",
      "commitName": "b61fb267b92b2736920b4bd0c673d31e7632ebb9",
      "commitAuthor": "Ming Ma",
      "commitDateOld": "23/09/16 1:26 PM",
      "commitNameOld": "74b3dd514c86b46197e2e19d9824a423715cab30",
      "commitAuthorOld": "Wei-Chiu Chuang",
      "daysBetweenCommits": 24.18,
      "commitsBetweenForRepo": 171,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,19 @@\n   private boolean shouldIgnore(DatanodeInfo dn) {\n-    // ignore decommissioned nodes\n-    final boolean decommissioned \u003d dn.isDecommissioned();\n-    // ignore decommissioning nodes\n-    final boolean decommissioning \u003d dn.isDecommissionInProgress();\n+    // ignore out-of-service nodes\n+    final boolean outOfService \u003d !dn.isInService();\n     // ignore nodes in exclude list\n     final boolean excluded \u003d Util.isExcluded(excludedNodes, dn);\n     // ignore nodes not in the include list (if include list is not empty)\n     final boolean notIncluded \u003d !Util.isIncluded(includedNodes, dn);\n \n-    if (decommissioned || decommissioning || excluded || notIncluded) {\n+    if (outOfService || excluded || notIncluded) {\n       if (LOG.isTraceEnabled()) {\n         LOG.trace(\"Excluding datanode \" + dn\n-            + \": decommissioned\u003d\" + decommissioned\n-            + \", decommissioning\u003d\" + decommissioning\n+            + \": outOfService\u003d\" + outOfService\n             + \", excluded\u003d\" + excluded\n             + \", notIncluded\u003d\" + notIncluded);\n       }\n       return true;\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean shouldIgnore(DatanodeInfo dn) {\n    // ignore out-of-service nodes\n    final boolean outOfService \u003d !dn.isInService();\n    // ignore nodes in exclude list\n    final boolean excluded \u003d Util.isExcluded(excludedNodes, dn);\n    // ignore nodes not in the include list (if include list is not empty)\n    final boolean notIncluded \u003d !Util.isIncluded(includedNodes, dn);\n\n    if (outOfService || excluded || notIncluded) {\n      if (LOG.isTraceEnabled()) {\n        LOG.trace(\"Excluding datanode \" + dn\n            + \": outOfService\u003d\" + outOfService\n            + \", excluded\u003d\" + excluded\n            + \", notIncluded\u003d\" + notIncluded);\n      }\n      return true;\n    }\n    return false;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Dispatcher.java",
      "extendedDetails": {}
    },
    "7ecbfd44aa57f5f54c214b7fdedda2500be76f51": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8826. In Balancer, add an option to specify the source node list so that balancer only selects blocks to move from those nodes.\n",
      "commitDate": "18/08/15 7:25 PM",
      "commitName": "7ecbfd44aa57f5f54c214b7fdedda2500be76f51",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "commitDateOld": "14/08/15 1:03 PM",
      "commitNameOld": "2bc0a4f299fbd8035e29f62ce9cd22e209a62805",
      "commitAuthorOld": "Tsz-Wo Nicholas Sze",
      "daysBetweenCommits": 4.27,
      "commitsBetweenForRepo": 20,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,22 @@\n   private boolean shouldIgnore(DatanodeInfo dn) {\n     // ignore decommissioned nodes\n     final boolean decommissioned \u003d dn.isDecommissioned();\n     // ignore decommissioning nodes\n     final boolean decommissioning \u003d dn.isDecommissionInProgress();\n     // ignore nodes in exclude list\n     final boolean excluded \u003d Util.isExcluded(excludedNodes, dn);\n     // ignore nodes not in the include list (if include list is not empty)\n     final boolean notIncluded \u003d !Util.isIncluded(includedNodes, dn);\n \n     if (decommissioned || decommissioning || excluded || notIncluded) {\n       if (LOG.isTraceEnabled()) {\n-        LOG.trace(\"Excluding datanode \" + dn + \": \" + decommissioned + \", \"\n-            + decommissioning + \", \" + excluded + \", \" + notIncluded);\n+        LOG.trace(\"Excluding datanode \" + dn\n+            + \": decommissioned\u003d\" + decommissioned\n+            + \", decommissioning\u003d\" + decommissioning\n+            + \", excluded\u003d\" + excluded\n+            + \", notIncluded\u003d\" + notIncluded);\n       }\n       return true;\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean shouldIgnore(DatanodeInfo dn) {\n    // ignore decommissioned nodes\n    final boolean decommissioned \u003d dn.isDecommissioned();\n    // ignore decommissioning nodes\n    final boolean decommissioning \u003d dn.isDecommissionInProgress();\n    // ignore nodes in exclude list\n    final boolean excluded \u003d Util.isExcluded(excludedNodes, dn);\n    // ignore nodes not in the include list (if include list is not empty)\n    final boolean notIncluded \u003d !Util.isIncluded(includedNodes, dn);\n\n    if (decommissioned || decommissioning || excluded || notIncluded) {\n      if (LOG.isTraceEnabled()) {\n        LOG.trace(\"Excluding datanode \" + dn\n            + \": decommissioned\u003d\" + decommissioned\n            + \", decommissioning\u003d\" + decommissioning\n            + \", excluded\u003d\" + excluded\n            + \", notIncluded\u003d\" + notIncluded);\n      }\n      return true;\n    }\n    return false;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Dispatcher.java",
      "extendedDetails": {}
    },
    "c3cf331dc91e2beef2afeed11105084843b02858": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "HDFS-6828. Separate block replica dispatching from Balancer. Contributed by Tsz Wo Nicholas Sze.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1616889 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/08/14 2:33 PM",
      "commitName": "c3cf331dc91e2beef2afeed11105084843b02858",
      "commitAuthor": "Jing Zhao",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-6828. Separate block replica dispatching from Balancer. Contributed by Tsz Wo Nicholas Sze.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1616889 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "08/08/14 2:33 PM",
          "commitName": "c3cf331dc91e2beef2afeed11105084843b02858",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "08/08/14 2:22 PM",
          "commitNameOld": "05d1bf4157e6660610f11951845e59899260596e",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,19 @@\n   private boolean shouldIgnore(DatanodeInfo dn) {\n-    //ignore decommissioned nodes\n+    // ignore decommissioned nodes\n     final boolean decommissioned \u003d dn.isDecommissioned();\n-    //ignore decommissioning nodes\n+    // ignore decommissioning nodes\n     final boolean decommissioning \u003d dn.isDecommissionInProgress();\n     // ignore nodes in exclude list\n-    final boolean excluded \u003d Util.shouldBeExcluded(nodesToBeExcluded, dn);\n+    final boolean excluded \u003d Util.isExcluded(excludedNodes, dn);\n     // ignore nodes not in the include list (if include list is not empty)\n-    final boolean notIncluded \u003d !Util.shouldBeIncluded(nodesToBeIncluded, dn);\n-    \n+    final boolean notIncluded \u003d !Util.isIncluded(includedNodes, dn);\n+\n     if (decommissioned || decommissioning || excluded || notIncluded) {\n       if (LOG.isTraceEnabled()) {\n         LOG.trace(\"Excluding datanode \" + dn + \": \" + decommissioned + \", \"\n             + decommissioning + \", \" + excluded + \", \" + notIncluded);\n       }\n       return true;\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private boolean shouldIgnore(DatanodeInfo dn) {\n    // ignore decommissioned nodes\n    final boolean decommissioned \u003d dn.isDecommissioned();\n    // ignore decommissioning nodes\n    final boolean decommissioning \u003d dn.isDecommissionInProgress();\n    // ignore nodes in exclude list\n    final boolean excluded \u003d Util.isExcluded(excludedNodes, dn);\n    // ignore nodes not in the include list (if include list is not empty)\n    final boolean notIncluded \u003d !Util.isIncluded(includedNodes, dn);\n\n    if (decommissioned || decommissioning || excluded || notIncluded) {\n      if (LOG.isTraceEnabled()) {\n        LOG.trace(\"Excluding datanode \" + dn + \": \" + decommissioned + \", \"\n            + decommissioning + \", \" + excluded + \", \" + notIncluded);\n      }\n      return true;\n    }\n    return false;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Dispatcher.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Dispatcher.java",
            "oldMethodName": "shouldIgnore",
            "newMethodName": "shouldIgnore"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-6828. Separate block replica dispatching from Balancer. Contributed by Tsz Wo Nicholas Sze.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1616889 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "08/08/14 2:33 PM",
          "commitName": "c3cf331dc91e2beef2afeed11105084843b02858",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "08/08/14 2:22 PM",
          "commitNameOld": "05d1bf4157e6660610f11951845e59899260596e",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,19 @@\n   private boolean shouldIgnore(DatanodeInfo dn) {\n-    //ignore decommissioned nodes\n+    // ignore decommissioned nodes\n     final boolean decommissioned \u003d dn.isDecommissioned();\n-    //ignore decommissioning nodes\n+    // ignore decommissioning nodes\n     final boolean decommissioning \u003d dn.isDecommissionInProgress();\n     // ignore nodes in exclude list\n-    final boolean excluded \u003d Util.shouldBeExcluded(nodesToBeExcluded, dn);\n+    final boolean excluded \u003d Util.isExcluded(excludedNodes, dn);\n     // ignore nodes not in the include list (if include list is not empty)\n-    final boolean notIncluded \u003d !Util.shouldBeIncluded(nodesToBeIncluded, dn);\n-    \n+    final boolean notIncluded \u003d !Util.isIncluded(includedNodes, dn);\n+\n     if (decommissioned || decommissioning || excluded || notIncluded) {\n       if (LOG.isTraceEnabled()) {\n         LOG.trace(\"Excluding datanode \" + dn + \": \" + decommissioned + \", \"\n             + decommissioning + \", \" + excluded + \", \" + notIncluded);\n       }\n       return true;\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private boolean shouldIgnore(DatanodeInfo dn) {\n    // ignore decommissioned nodes\n    final boolean decommissioned \u003d dn.isDecommissioned();\n    // ignore decommissioning nodes\n    final boolean decommissioning \u003d dn.isDecommissionInProgress();\n    // ignore nodes in exclude list\n    final boolean excluded \u003d Util.isExcluded(excludedNodes, dn);\n    // ignore nodes not in the include list (if include list is not empty)\n    final boolean notIncluded \u003d !Util.isIncluded(includedNodes, dn);\n\n    if (decommissioned || decommissioning || excluded || notIncluded) {\n      if (LOG.isTraceEnabled()) {\n        LOG.trace(\"Excluding datanode \" + dn + \": \" + decommissioned + \", \"\n            + decommissioning + \", \" + excluded + \", \" + notIncluded);\n      }\n      return true;\n    }\n    return false;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Dispatcher.java",
          "extendedDetails": {}
        }
      ]
    },
    "b8597e6a10b2e8df1bee4e8ce0c8be345f7e007d": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-6685. Balancer should preserve storage type of replicas.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1615015 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/07/14 6:05 PM",
      "commitName": "b8597e6a10b2e8df1bee4e8ce0c8be345f7e007d",
      "commitAuthor": "Tsz-wo Sze",
      "diff": "@@ -0,0 +1,19 @@\n+  private boolean shouldIgnore(DatanodeInfo dn) {\n+    //ignore decommissioned nodes\n+    final boolean decommissioned \u003d dn.isDecommissioned();\n+    //ignore decommissioning nodes\n+    final boolean decommissioning \u003d dn.isDecommissionInProgress();\n+    // ignore nodes in exclude list\n+    final boolean excluded \u003d Util.shouldBeExcluded(nodesToBeExcluded, dn);\n+    // ignore nodes not in the include list (if include list is not empty)\n+    final boolean notIncluded \u003d !Util.shouldBeIncluded(nodesToBeIncluded, dn);\n+    \n+    if (decommissioned || decommissioning || excluded || notIncluded) {\n+      if (LOG.isTraceEnabled()) {\n+        LOG.trace(\"Excluding datanode \" + dn + \": \" + decommissioned + \", \"\n+            + decommissioning + \", \" + excluded + \", \" + notIncluded);\n+      }\n+      return true;\n+    }\n+    return false;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean shouldIgnore(DatanodeInfo dn) {\n    //ignore decommissioned nodes\n    final boolean decommissioned \u003d dn.isDecommissioned();\n    //ignore decommissioning nodes\n    final boolean decommissioning \u003d dn.isDecommissionInProgress();\n    // ignore nodes in exclude list\n    final boolean excluded \u003d Util.shouldBeExcluded(nodesToBeExcluded, dn);\n    // ignore nodes not in the include list (if include list is not empty)\n    final boolean notIncluded \u003d !Util.shouldBeIncluded(nodesToBeIncluded, dn);\n    \n    if (decommissioned || decommissioning || excluded || notIncluded) {\n      if (LOG.isTraceEnabled()) {\n        LOG.trace(\"Excluding datanode \" + dn + \": \" + decommissioned + \", \"\n            + decommissioning + \", \" + excluded + \", \" + notIncluded);\n      }\n      return true;\n    }\n    return false;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java"
    }
  }
}