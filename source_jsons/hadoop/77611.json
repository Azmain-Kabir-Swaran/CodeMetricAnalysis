{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RetryInvocationHandler.java",
  "functionName": "newCall",
  "functionId": "newCall___method-Method__args-Object[]__isRpc-boolean__callId-int",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/retry/RetryInvocationHandler.java",
  "functionStartLine": 342,
  "functionEndLine": 349,
  "numCommitsSeen": 72,
  "timeTaken": 1752,
  "changeHistory": [
    "d328e667067743f723e332d92154da8e84e65742",
    "35f255b03b1bb5c94063ec1818af1d253ceee991"
  ],
  "changeHistoryShort": {
    "d328e667067743f723e332d92154da8e84e65742": "Ymultichange(Yparameterchange,Ybodychange)",
    "35f255b03b1bb5c94063ec1818af1d253ceee991": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d328e667067743f723e332d92154da8e84e65742": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-13227. AsyncCallHandler should use an event driven architecture to handle async calls.\n",
      "commitDate": "25/06/16 12:45 AM",
      "commitName": "d328e667067743f723e332d92154da8e84e65742",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-13227. AsyncCallHandler should use an event driven architecture to handle async calls.\n",
          "commitDate": "25/06/16 12:45 AM",
          "commitName": "d328e667067743f723e332d92154da8e84e65742",
          "commitAuthor": "Tsz-Wo Nicholas Sze",
          "commitDateOld": "10/06/16 10:38 AM",
          "commitNameOld": "0bbb4ddd793063c87927035969884a34f60f2076",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 14.59,
          "commitsBetweenForRepo": 130,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,8 @@\n-  private Call newCall(Method method, Object[] args, boolean isRpc, int callId,\n-                       Counters counters) {\n+  private Call newCall(Method method, Object[] args, boolean isRpc,\n+                       int callId) {\n     if (Client.isAsynchronousMode()) {\n-      return asyncCallHandler.newAsyncCall(method, args, isRpc, callId,\n-          counters, this);\n+      return asyncCallHandler.newAsyncCall(method, args, isRpc, callId, this);\n     } else {\n-      return new Call(method, args, isRpc, callId, counters, this);\n+      return new Call(method, args, isRpc, callId, this);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private Call newCall(Method method, Object[] args, boolean isRpc,\n                       int callId) {\n    if (Client.isAsynchronousMode()) {\n      return asyncCallHandler.newAsyncCall(method, args, isRpc, callId, this);\n    } else {\n      return new Call(method, args, isRpc, callId, this);\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/retry/RetryInvocationHandler.java",
          "extendedDetails": {
            "oldValue": "[method-Method, args-Object[], isRpc-boolean, callId-int, counters-Counters]",
            "newValue": "[method-Method, args-Object[], isRpc-boolean, callId-int]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-13227. AsyncCallHandler should use an event driven architecture to handle async calls.\n",
          "commitDate": "25/06/16 12:45 AM",
          "commitName": "d328e667067743f723e332d92154da8e84e65742",
          "commitAuthor": "Tsz-Wo Nicholas Sze",
          "commitDateOld": "10/06/16 10:38 AM",
          "commitNameOld": "0bbb4ddd793063c87927035969884a34f60f2076",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 14.59,
          "commitsBetweenForRepo": 130,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,8 @@\n-  private Call newCall(Method method, Object[] args, boolean isRpc, int callId,\n-                       Counters counters) {\n+  private Call newCall(Method method, Object[] args, boolean isRpc,\n+                       int callId) {\n     if (Client.isAsynchronousMode()) {\n-      return asyncCallHandler.newAsyncCall(method, args, isRpc, callId,\n-          counters, this);\n+      return asyncCallHandler.newAsyncCall(method, args, isRpc, callId, this);\n     } else {\n-      return new Call(method, args, isRpc, callId, counters, this);\n+      return new Call(method, args, isRpc, callId, this);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private Call newCall(Method method, Object[] args, boolean isRpc,\n                       int callId) {\n    if (Client.isAsynchronousMode()) {\n      return asyncCallHandler.newAsyncCall(method, args, isRpc, callId, this);\n    } else {\n      return new Call(method, args, isRpc, callId, this);\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/retry/RetryInvocationHandler.java",
          "extendedDetails": {}
        }
      ]
    },
    "35f255b03b1bb5c94063ec1818af1d253ceee991": {
      "type": "Yintroduced",
      "commitMessage": "Revert \"Revert \"HADOOP-13226 Support async call retry and failover.\"\"\n\nThis reverts commit 5360da8bd9f720384860f411bee081aef13b4bd4.\n",
      "commitDate": "06/06/16 1:31 AM",
      "commitName": "35f255b03b1bb5c94063ec1818af1d253ceee991",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "diff": "@@ -0,0 +1,9 @@\n+  private Call newCall(Method method, Object[] args, boolean isRpc, int callId,\n+                       Counters counters) {\n+    if (Client.isAsynchronousMode()) {\n+      return asyncCallHandler.newAsyncCall(method, args, isRpc, callId,\n+          counters, this);\n+    } else {\n+      return new Call(method, args, isRpc, callId, counters, this);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private Call newCall(Method method, Object[] args, boolean isRpc, int callId,\n                       Counters counters) {\n    if (Client.isAsynchronousMode()) {\n      return asyncCallHandler.newAsyncCall(method, args, isRpc, callId,\n          counters, this);\n    } else {\n      return new Call(method, args, isRpc, callId, counters, this);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/retry/RetryInvocationHandler.java"
    }
  }
}