{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TaskAttemptImpl.java",
  "functionName": "handle",
  "functionId": "handle___event-TaskAttemptEvent",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java",
  "functionStartLine": 1364,
  "functionEndLine": 1398,
  "numCommitsSeen": 109,
  "timeTaken": 9216,
  "changeHistory": [
    "32b3dc11eba8f2d8f22ca502bf30d6aa8839460e",
    "19295b36d90e26616accee73b1f7743aab5df692",
    "022f7b4a25c73b8c43985e8d1bac717b96373ac6",
    "28a2eb9d722bb8cbbeee87a1c43b4dc4ef4467ce",
    "53f921418d25cb232c7a0e1fa24c17bda729ac35",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "32b3dc11eba8f2d8f22ca502bf30d6aa8839460e": "Ybodychange",
    "19295b36d90e26616accee73b1f7743aab5df692": "Ybodychange",
    "022f7b4a25c73b8c43985e8d1bac717b96373ac6": "Ybodychange",
    "28a2eb9d722bb8cbbeee87a1c43b4dc4ef4467ce": "Ybodychange",
    "53f921418d25cb232c7a0e1fa24c17bda729ac35": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "32b3dc11eba8f2d8f22ca502bf30d6aa8839460e": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6574. MR AM should print host of failed tasks. (Mohammad Shahid Khan via wangda)\n",
      "commitDate": "28/12/15 11:03 AM",
      "commitName": "32b3dc11eba8f2d8f22ca502bf30d6aa8839460e",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "02/10/15 8:04 AM",
      "commitNameOld": "439f43ad3defbac907eda2d139a793f153544430",
      "commitAuthorOld": "rohithsharmaks",
      "daysBetweenCommits": 87.17,
      "commitsBetweenForRepo": 612,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,35 @@\n   public void handle(TaskAttemptEvent event) {\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Processing \" + event.getTaskAttemptID() + \" of type \"\n           + event.getType());\n     }\n     writeLock.lock();\n     try {\n       final TaskAttemptStateInternal oldState \u003d getInternalState()  ;\n       try {\n         stateMachine.doTransition(event.getType(), event);\n       } catch (InvalidStateTransitionException e) {\n         LOG.error(\"Can\u0027t handle this event at current state for \"\n             + this.attemptId, e);\n         eventHandler.handle(new JobDiagnosticsUpdateEvent(\n             this.attemptId.getTaskId().getJobId(), \"Invalid event \" + event.getType() + \n             \" on TaskAttempt \" + this.attemptId));\n         eventHandler.handle(new JobEvent(this.attemptId.getTaskId().getJobId(),\n             JobEventType.INTERNAL_ERROR));\n       }\n       if (oldState !\u003d getInternalState()) {\n-          LOG.info(attemptId + \" TaskAttempt Transitioned from \" \n-           + oldState + \" to \"\n-           + getInternalState());\n+        if (getInternalState() \u003d\u003d TaskAttemptStateInternal.FAILED) {\n+          String nodeId \u003d null \u003d\u003d this.container ? \"Not-assigned\"\n+              : this.container.getNodeId().toString();\n+          LOG.info(attemptId + \" transitioned from state \" + oldState + \" to \"\n+              + getInternalState() + \", event type is \" + event.getType()\n+              + \" and nodeId\u003d\" + nodeId);\n+        } else {\n+          LOG.info(attemptId + \" TaskAttempt Transitioned from \" + oldState\n+              + \" to \" + getInternalState());\n+        }\n       }\n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void handle(TaskAttemptEvent event) {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Processing \" + event.getTaskAttemptID() + \" of type \"\n          + event.getType());\n    }\n    writeLock.lock();\n    try {\n      final TaskAttemptStateInternal oldState \u003d getInternalState()  ;\n      try {\n        stateMachine.doTransition(event.getType(), event);\n      } catch (InvalidStateTransitionException e) {\n        LOG.error(\"Can\u0027t handle this event at current state for \"\n            + this.attemptId, e);\n        eventHandler.handle(new JobDiagnosticsUpdateEvent(\n            this.attemptId.getTaskId().getJobId(), \"Invalid event \" + event.getType() + \n            \" on TaskAttempt \" + this.attemptId));\n        eventHandler.handle(new JobEvent(this.attemptId.getTaskId().getJobId(),\n            JobEventType.INTERNAL_ERROR));\n      }\n      if (oldState !\u003d getInternalState()) {\n        if (getInternalState() \u003d\u003d TaskAttemptStateInternal.FAILED) {\n          String nodeId \u003d null \u003d\u003d this.container ? \"Not-assigned\"\n              : this.container.getNodeId().toString();\n          LOG.info(attemptId + \" transitioned from state \" + oldState + \" to \"\n              + getInternalState() + \", event type is \" + event.getType()\n              + \" and nodeId\u003d\" + nodeId);\n        } else {\n          LOG.info(attemptId + \" TaskAttempt Transitioned from \" + oldState\n              + \" to \" + getInternalState());\n        }\n      }\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java",
      "extendedDetails": {}
    },
    "19295b36d90e26616accee73b1f7743aab5df692": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3381. Fix typo InvalidStateTransitonException. Contributed by Brahma Reddy Battula.\n",
      "commitDate": "13/07/15 1:52 AM",
      "commitName": "19295b36d90e26616accee73b1f7743aab5df692",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "30/06/15 2:22 PM",
      "commitNameOld": "b6ba56457c6b01dae795c11d587c3fe3855ee707",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 12.48,
      "commitsBetweenForRepo": 77,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,28 @@\n   public void handle(TaskAttemptEvent event) {\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Processing \" + event.getTaskAttemptID() + \" of type \"\n           + event.getType());\n     }\n     writeLock.lock();\n     try {\n       final TaskAttemptStateInternal oldState \u003d getInternalState()  ;\n       try {\n         stateMachine.doTransition(event.getType(), event);\n-      } catch (InvalidStateTransitonException e) {\n+      } catch (InvalidStateTransitionException e) {\n         LOG.error(\"Can\u0027t handle this event at current state for \"\n             + this.attemptId, e);\n         eventHandler.handle(new JobDiagnosticsUpdateEvent(\n             this.attemptId.getTaskId().getJobId(), \"Invalid event \" + event.getType() + \n             \" on TaskAttempt \" + this.attemptId));\n         eventHandler.handle(new JobEvent(this.attemptId.getTaskId().getJobId(),\n             JobEventType.INTERNAL_ERROR));\n       }\n       if (oldState !\u003d getInternalState()) {\n           LOG.info(attemptId + \" TaskAttempt Transitioned from \" \n            + oldState + \" to \"\n            + getInternalState());\n       }\n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void handle(TaskAttemptEvent event) {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Processing \" + event.getTaskAttemptID() + \" of type \"\n          + event.getType());\n    }\n    writeLock.lock();\n    try {\n      final TaskAttemptStateInternal oldState \u003d getInternalState()  ;\n      try {\n        stateMachine.doTransition(event.getType(), event);\n      } catch (InvalidStateTransitionException e) {\n        LOG.error(\"Can\u0027t handle this event at current state for \"\n            + this.attemptId, e);\n        eventHandler.handle(new JobDiagnosticsUpdateEvent(\n            this.attemptId.getTaskId().getJobId(), \"Invalid event \" + event.getType() + \n            \" on TaskAttempt \" + this.attemptId));\n        eventHandler.handle(new JobEvent(this.attemptId.getTaskId().getJobId(),\n            JobEventType.INTERNAL_ERROR));\n      }\n      if (oldState !\u003d getInternalState()) {\n          LOG.info(attemptId + \" TaskAttempt Transitioned from \" \n           + oldState + \" to \"\n           + getInternalState());\n      }\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java",
      "extendedDetails": {}
    },
    "022f7b4a25c73b8c43985e8d1bac717b96373ac6": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-4596. Split StateMachine state from states seen by MRClientProtocol for Job, Task and TaskAttempt. Contributed by Siddarth Seth.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1399976 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/10/12 10:57 PM",
      "commitName": "022f7b4a25c73b8c43985e8d1bac717b96373ac6",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "08/10/12 1:50 PM",
      "commitNameOld": "49b20c2ed1be55c90a057acea71b55a28a3f69fb",
      "commitAuthorOld": "Robert Joseph Evans",
      "daysBetweenCommits": 10.38,
      "commitsBetweenForRepo": 75,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,28 @@\n   public void handle(TaskAttemptEvent event) {\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Processing \" + event.getTaskAttemptID() + \" of type \"\n           + event.getType());\n     }\n     writeLock.lock();\n     try {\n-      final TaskAttemptState oldState \u003d getState();\n+      final TaskAttemptStateInternal oldState \u003d getInternalState()  ;\n       try {\n         stateMachine.doTransition(event.getType(), event);\n       } catch (InvalidStateTransitonException e) {\n         LOG.error(\"Can\u0027t handle this event at current state for \"\n             + this.attemptId, e);\n         eventHandler.handle(new JobDiagnosticsUpdateEvent(\n             this.attemptId.getTaskId().getJobId(), \"Invalid event \" + event.getType() + \n             \" on TaskAttempt \" + this.attemptId));\n         eventHandler.handle(new JobEvent(this.attemptId.getTaskId().getJobId(),\n             JobEventType.INTERNAL_ERROR));\n       }\n-      if (oldState !\u003d getState()) {\n+      if (oldState !\u003d getInternalState()) {\n           LOG.info(attemptId + \" TaskAttempt Transitioned from \" \n            + oldState + \" to \"\n-           + getState());\n+           + getInternalState());\n       }\n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void handle(TaskAttemptEvent event) {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Processing \" + event.getTaskAttemptID() + \" of type \"\n          + event.getType());\n    }\n    writeLock.lock();\n    try {\n      final TaskAttemptStateInternal oldState \u003d getInternalState()  ;\n      try {\n        stateMachine.doTransition(event.getType(), event);\n      } catch (InvalidStateTransitonException e) {\n        LOG.error(\"Can\u0027t handle this event at current state for \"\n            + this.attemptId, e);\n        eventHandler.handle(new JobDiagnosticsUpdateEvent(\n            this.attemptId.getTaskId().getJobId(), \"Invalid event \" + event.getType() + \n            \" on TaskAttempt \" + this.attemptId));\n        eventHandler.handle(new JobEvent(this.attemptId.getTaskId().getJobId(),\n            JobEventType.INTERNAL_ERROR));\n      }\n      if (oldState !\u003d getInternalState()) {\n          LOG.info(attemptId + \" TaskAttempt Transitioned from \" \n           + oldState + \" to \"\n           + getInternalState());\n      }\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java",
      "extendedDetails": {}
    },
    "28a2eb9d722bb8cbbeee87a1c43b4dc4ef4467ce": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3810. Performance tweaks - reduced logging in AM and defined hascode/equals for ResourceRequest \u0026 Priority. Contributed by Vinod K V. \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1241205 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/02/12 2:01 PM",
      "commitName": "28a2eb9d722bb8cbbeee87a1c43b4dc4ef4467ce",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/01/12 10:21 AM",
      "commitNameOld": "f73daf6af1c87c65dd97e5ec4608ba2742dc83ea",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 13.15,
      "commitsBetweenForRepo": 102,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,28 @@\n   public void handle(TaskAttemptEvent event) {\n-    LOG.info(\"Processing \" + event.getTaskAttemptID() +\n-        \" of type \" + event.getType());\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"Processing \" + event.getTaskAttemptID() + \" of type \"\n+          + event.getType());\n+    }\n     writeLock.lock();\n     try {\n       final TaskAttemptState oldState \u003d getState();\n       try {\n         stateMachine.doTransition(event.getType(), event);\n       } catch (InvalidStateTransitonException e) {\n         LOG.error(\"Can\u0027t handle this event at current state for \"\n             + this.attemptId, e);\n         eventHandler.handle(new JobDiagnosticsUpdateEvent(\n             this.attemptId.getTaskId().getJobId(), \"Invalid event \" + event.getType() + \n             \" on TaskAttempt \" + this.attemptId));\n         eventHandler.handle(new JobEvent(this.attemptId.getTaskId().getJobId(),\n             JobEventType.INTERNAL_ERROR));\n       }\n       if (oldState !\u003d getState()) {\n           LOG.info(attemptId + \" TaskAttempt Transitioned from \" \n            + oldState + \" to \"\n            + getState());\n       }\n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void handle(TaskAttemptEvent event) {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Processing \" + event.getTaskAttemptID() + \" of type \"\n          + event.getType());\n    }\n    writeLock.lock();\n    try {\n      final TaskAttemptState oldState \u003d getState();\n      try {\n        stateMachine.doTransition(event.getType(), event);\n      } catch (InvalidStateTransitonException e) {\n        LOG.error(\"Can\u0027t handle this event at current state for \"\n            + this.attemptId, e);\n        eventHandler.handle(new JobDiagnosticsUpdateEvent(\n            this.attemptId.getTaskId().getJobId(), \"Invalid event \" + event.getType() + \n            \" on TaskAttempt \" + this.attemptId));\n        eventHandler.handle(new JobEvent(this.attemptId.getTaskId().getJobId(),\n            JobEventType.INTERNAL_ERROR));\n      }\n      if (oldState !\u003d getState()) {\n          LOG.info(attemptId + \" TaskAttempt Transitioned from \" \n           + oldState + \" to \"\n           + getState());\n      }\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java",
      "extendedDetails": {}
    },
    "53f921418d25cb232c7a0e1fa24c17bda729ac35": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2995. Better handling of expired containers in MapReduce ApplicationMaster. Contributed by Vinod K V.  \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1170279 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/09/11 11:12 AM",
      "commitName": "53f921418d25cb232c7a0e1fa24c17bda729ac35",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "12/09/11 5:05 PM",
      "commitNameOld": "6165875dc6bf67d72fc3ce1d96dfc80ba312d4a1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.75,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,26 @@\n   public void handle(TaskAttemptEvent event) {\n     LOG.info(\"Processing \" + event.getTaskAttemptID() +\n         \" of type \" + event.getType());\n     writeLock.lock();\n     try {\n       final TaskAttemptState oldState \u003d getState();\n       try {\n         stateMachine.doTransition(event.getType(), event);\n       } catch (InvalidStateTransitonException e) {\n-        LOG.error(\"Can\u0027t handle this event at current state\", e);\n+        LOG.error(\"Can\u0027t handle this event at current state for \"\n+            + this.attemptId, e);\n         eventHandler.handle(new JobDiagnosticsUpdateEvent(\n             this.attemptId.getTaskId().getJobId(), \"Invalid event \" + event.getType() + \n             \" on TaskAttempt \" + this.attemptId));\n         eventHandler.handle(new JobEvent(this.attemptId.getTaskId().getJobId(),\n             JobEventType.INTERNAL_ERROR));\n       }\n       if (oldState !\u003d getState()) {\n           LOG.info(attemptId + \" TaskAttempt Transitioned from \" \n            + oldState + \" to \"\n            + getState());\n       }\n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void handle(TaskAttemptEvent event) {\n    LOG.info(\"Processing \" + event.getTaskAttemptID() +\n        \" of type \" + event.getType());\n    writeLock.lock();\n    try {\n      final TaskAttemptState oldState \u003d getState();\n      try {\n        stateMachine.doTransition(event.getType(), event);\n      } catch (InvalidStateTransitonException e) {\n        LOG.error(\"Can\u0027t handle this event at current state for \"\n            + this.attemptId, e);\n        eventHandler.handle(new JobDiagnosticsUpdateEvent(\n            this.attemptId.getTaskId().getJobId(), \"Invalid event \" + event.getType() + \n            \" on TaskAttempt \" + this.attemptId));\n        eventHandler.handle(new JobEvent(this.attemptId.getTaskId().getJobId(),\n            JobEventType.INTERNAL_ERROR));\n      }\n      if (oldState !\u003d getState()) {\n          LOG.info(attemptId + \" TaskAttempt Transitioned from \" \n           + oldState + \" to \"\n           + getState());\n      }\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void handle(TaskAttemptEvent event) {\n    LOG.info(\"Processing \" + event.getTaskAttemptID() +\n        \" of type \" + event.getType());\n    writeLock.lock();\n    try {\n      final TaskAttemptState oldState \u003d getState();\n      try {\n        stateMachine.doTransition(event.getType(), event);\n      } catch (InvalidStateTransitonException e) {\n        LOG.error(\"Can\u0027t handle this event at current state\", e);\n        eventHandler.handle(new JobDiagnosticsUpdateEvent(\n            this.attemptId.getTaskId().getJobId(), \"Invalid event \" + event.getType() + \n            \" on TaskAttempt \" + this.attemptId));\n        eventHandler.handle(new JobEvent(this.attemptId.getTaskId().getJobId(),\n            JobEventType.INTERNAL_ERROR));\n      }\n      if (oldState !\u003d getState()) {\n          LOG.info(attemptId + \" TaskAttempt Transitioned from \" \n           + oldState + \" to \"\n           + getState());\n      }\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,25 @@\n+  public void handle(TaskAttemptEvent event) {\n+    LOG.info(\"Processing \" + event.getTaskAttemptID() +\n+        \" of type \" + event.getType());\n+    writeLock.lock();\n+    try {\n+      final TaskAttemptState oldState \u003d getState();\n+      try {\n+        stateMachine.doTransition(event.getType(), event);\n+      } catch (InvalidStateTransitonException e) {\n+        LOG.error(\"Can\u0027t handle this event at current state\", e);\n+        eventHandler.handle(new JobDiagnosticsUpdateEvent(\n+            this.attemptId.getTaskId().getJobId(), \"Invalid event \" + event.getType() + \n+            \" on TaskAttempt \" + this.attemptId));\n+        eventHandler.handle(new JobEvent(this.attemptId.getTaskId().getJobId(),\n+            JobEventType.INTERNAL_ERROR));\n+      }\n+      if (oldState !\u003d getState()) {\n+          LOG.info(attemptId + \" TaskAttempt Transitioned from \" \n+           + oldState + \" to \"\n+           + getState());\n+      }\n+    } finally {\n+      writeLock.unlock();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void handle(TaskAttemptEvent event) {\n    LOG.info(\"Processing \" + event.getTaskAttemptID() +\n        \" of type \" + event.getType());\n    writeLock.lock();\n    try {\n      final TaskAttemptState oldState \u003d getState();\n      try {\n        stateMachine.doTransition(event.getType(), event);\n      } catch (InvalidStateTransitonException e) {\n        LOG.error(\"Can\u0027t handle this event at current state\", e);\n        eventHandler.handle(new JobDiagnosticsUpdateEvent(\n            this.attemptId.getTaskId().getJobId(), \"Invalid event \" + event.getType() + \n            \" on TaskAttempt \" + this.attemptId));\n        eventHandler.handle(new JobEvent(this.attemptId.getTaskId().getJobId(),\n            JobEventType.INTERNAL_ERROR));\n      }\n      if (oldState !\u003d getState()) {\n          LOG.info(attemptId + \" TaskAttempt Transitioned from \" \n           + oldState + \" to \"\n           + getState());\n      }\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java"
    }
  }
}