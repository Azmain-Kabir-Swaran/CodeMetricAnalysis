{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FieldSelectionHelper.java",
  "functionName": "extractFields",
  "functionId": "extractFields___fieldListSpec-String[]__fieldList-List__Integer__",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/fieldsel/FieldSelectionHelper.java",
  "functionStartLine": 84,
  "functionEndLine": 118,
  "numCommitsSeen": 5,
  "timeTaken": 4442,
  "changeHistory": [
    "814afa46efef201cb782072432fc744e1cb9c463",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "814afa46efef201cb782072432fc744e1cb9c463": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "814afa46efef201cb782072432fc744e1cb9c463": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6225. Fix new findbug warnings in hadoop-mapreduce-client-core. Contributed by Varun Saxena\n",
      "commitDate": "16/02/15 9:38 AM",
      "commitName": "814afa46efef201cb782072432fc744e1cb9c463",
      "commitAuthor": "Junping Du",
      "commitDateOld": "24/08/11 5:14 PM",
      "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 1271.72,
      "commitsBetweenForRepo": 8655,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,35 @@\n   private static int extractFields(String[] fieldListSpec,\n       List\u003cInteger\u003e fieldList) {\n     int allFieldsFrom \u003d -1;\n     int i \u003d 0;\n     int j \u003d 0;\n     int pos \u003d -1;\n     String fieldSpec \u003d null;\n     for (i \u003d 0; i \u003c fieldListSpec.length; i++) {\n       fieldSpec \u003d fieldListSpec[i];\n       if (fieldSpec.length() \u003d\u003d 0) {\n         continue;\n       }\n       pos \u003d fieldSpec.indexOf(\u0027-\u0027);\n       if (pos \u003c 0) {\n-        Integer fn \u003d new Integer(fieldSpec);\n+        Integer fn \u003d Integer.valueOf(fieldSpec);\n         fieldList.add(fn);\n       } else {\n         String start \u003d fieldSpec.substring(0, pos);\n         String end \u003d fieldSpec.substring(pos + 1);\n         if (start.length() \u003d\u003d 0) {\n           start \u003d \"0\";\n         }\n         if (end.length() \u003d\u003d 0) {\n           allFieldsFrom \u003d Integer.parseInt(start);\n           continue;\n         }\n         int startPos \u003d Integer.parseInt(start);\n         int endPos \u003d Integer.parseInt(end);\n         for (j \u003d startPos; j \u003c\u003d endPos; j++) {\n           fieldList.add(j);\n         }\n       }\n     }\n     return allFieldsFrom;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static int extractFields(String[] fieldListSpec,\n      List\u003cInteger\u003e fieldList) {\n    int allFieldsFrom \u003d -1;\n    int i \u003d 0;\n    int j \u003d 0;\n    int pos \u003d -1;\n    String fieldSpec \u003d null;\n    for (i \u003d 0; i \u003c fieldListSpec.length; i++) {\n      fieldSpec \u003d fieldListSpec[i];\n      if (fieldSpec.length() \u003d\u003d 0) {\n        continue;\n      }\n      pos \u003d fieldSpec.indexOf(\u0027-\u0027);\n      if (pos \u003c 0) {\n        Integer fn \u003d Integer.valueOf(fieldSpec);\n        fieldList.add(fn);\n      } else {\n        String start \u003d fieldSpec.substring(0, pos);\n        String end \u003d fieldSpec.substring(pos + 1);\n        if (start.length() \u003d\u003d 0) {\n          start \u003d \"0\";\n        }\n        if (end.length() \u003d\u003d 0) {\n          allFieldsFrom \u003d Integer.parseInt(start);\n          continue;\n        }\n        int startPos \u003d Integer.parseInt(start);\n        int endPos \u003d Integer.parseInt(end);\n        for (j \u003d startPos; j \u003c\u003d endPos; j++) {\n          fieldList.add(j);\n        }\n      }\n    }\n    return allFieldsFrom;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/fieldsel/FieldSelectionHelper.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private static int extractFields(String[] fieldListSpec,\n      List\u003cInteger\u003e fieldList) {\n    int allFieldsFrom \u003d -1;\n    int i \u003d 0;\n    int j \u003d 0;\n    int pos \u003d -1;\n    String fieldSpec \u003d null;\n    for (i \u003d 0; i \u003c fieldListSpec.length; i++) {\n      fieldSpec \u003d fieldListSpec[i];\n      if (fieldSpec.length() \u003d\u003d 0) {\n        continue;\n      }\n      pos \u003d fieldSpec.indexOf(\u0027-\u0027);\n      if (pos \u003c 0) {\n        Integer fn \u003d new Integer(fieldSpec);\n        fieldList.add(fn);\n      } else {\n        String start \u003d fieldSpec.substring(0, pos);\n        String end \u003d fieldSpec.substring(pos + 1);\n        if (start.length() \u003d\u003d 0) {\n          start \u003d \"0\";\n        }\n        if (end.length() \u003d\u003d 0) {\n          allFieldsFrom \u003d Integer.parseInt(start);\n          continue;\n        }\n        int startPos \u003d Integer.parseInt(start);\n        int endPos \u003d Integer.parseInt(end);\n        for (j \u003d startPos; j \u003c\u003d endPos; j++) {\n          fieldList.add(j);\n        }\n      }\n    }\n    return allFieldsFrom;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/fieldsel/FieldSelectionHelper.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/fieldsel/FieldSelectionHelper.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/fieldsel/FieldSelectionHelper.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private static int extractFields(String[] fieldListSpec,\n      List\u003cInteger\u003e fieldList) {\n    int allFieldsFrom \u003d -1;\n    int i \u003d 0;\n    int j \u003d 0;\n    int pos \u003d -1;\n    String fieldSpec \u003d null;\n    for (i \u003d 0; i \u003c fieldListSpec.length; i++) {\n      fieldSpec \u003d fieldListSpec[i];\n      if (fieldSpec.length() \u003d\u003d 0) {\n        continue;\n      }\n      pos \u003d fieldSpec.indexOf(\u0027-\u0027);\n      if (pos \u003c 0) {\n        Integer fn \u003d new Integer(fieldSpec);\n        fieldList.add(fn);\n      } else {\n        String start \u003d fieldSpec.substring(0, pos);\n        String end \u003d fieldSpec.substring(pos + 1);\n        if (start.length() \u003d\u003d 0) {\n          start \u003d \"0\";\n        }\n        if (end.length() \u003d\u003d 0) {\n          allFieldsFrom \u003d Integer.parseInt(start);\n          continue;\n        }\n        int startPos \u003d Integer.parseInt(start);\n        int endPos \u003d Integer.parseInt(end);\n        for (j \u003d startPos; j \u003c\u003d endPos; j++) {\n          fieldList.add(j);\n        }\n      }\n    }\n    return allFieldsFrom;\n  }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/fieldsel/FieldSelectionHelper.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/java/org/apache/hadoop/mapreduce/lib/fieldsel/FieldSelectionHelper.java",
        "newPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/fieldsel/FieldSelectionHelper.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,35 @@\n+  private static int extractFields(String[] fieldListSpec,\n+      List\u003cInteger\u003e fieldList) {\n+    int allFieldsFrom \u003d -1;\n+    int i \u003d 0;\n+    int j \u003d 0;\n+    int pos \u003d -1;\n+    String fieldSpec \u003d null;\n+    for (i \u003d 0; i \u003c fieldListSpec.length; i++) {\n+      fieldSpec \u003d fieldListSpec[i];\n+      if (fieldSpec.length() \u003d\u003d 0) {\n+        continue;\n+      }\n+      pos \u003d fieldSpec.indexOf(\u0027-\u0027);\n+      if (pos \u003c 0) {\n+        Integer fn \u003d new Integer(fieldSpec);\n+        fieldList.add(fn);\n+      } else {\n+        String start \u003d fieldSpec.substring(0, pos);\n+        String end \u003d fieldSpec.substring(pos + 1);\n+        if (start.length() \u003d\u003d 0) {\n+          start \u003d \"0\";\n+        }\n+        if (end.length() \u003d\u003d 0) {\n+          allFieldsFrom \u003d Integer.parseInt(start);\n+          continue;\n+        }\n+        int startPos \u003d Integer.parseInt(start);\n+        int endPos \u003d Integer.parseInt(end);\n+        for (j \u003d startPos; j \u003c\u003d endPos; j++) {\n+          fieldList.add(j);\n+        }\n+      }\n+    }\n+    return allFieldsFrom;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static int extractFields(String[] fieldListSpec,\n      List\u003cInteger\u003e fieldList) {\n    int allFieldsFrom \u003d -1;\n    int i \u003d 0;\n    int j \u003d 0;\n    int pos \u003d -1;\n    String fieldSpec \u003d null;\n    for (i \u003d 0; i \u003c fieldListSpec.length; i++) {\n      fieldSpec \u003d fieldListSpec[i];\n      if (fieldSpec.length() \u003d\u003d 0) {\n        continue;\n      }\n      pos \u003d fieldSpec.indexOf(\u0027-\u0027);\n      if (pos \u003c 0) {\n        Integer fn \u003d new Integer(fieldSpec);\n        fieldList.add(fn);\n      } else {\n        String start \u003d fieldSpec.substring(0, pos);\n        String end \u003d fieldSpec.substring(pos + 1);\n        if (start.length() \u003d\u003d 0) {\n          start \u003d \"0\";\n        }\n        if (end.length() \u003d\u003d 0) {\n          allFieldsFrom \u003d Integer.parseInt(start);\n          continue;\n        }\n        int startPos \u003d Integer.parseInt(start);\n        int endPos \u003d Integer.parseInt(end);\n        for (j \u003d startPos; j \u003c\u003d endPos; j++) {\n          fieldList.add(j);\n        }\n      }\n    }\n    return allFieldsFrom;\n  }",
      "path": "mapreduce/src/java/org/apache/hadoop/mapreduce/lib/fieldsel/FieldSelectionHelper.java"
    }
  }
}