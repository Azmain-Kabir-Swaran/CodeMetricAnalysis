{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PBHelper.java",
  "functionName": "convertBlockECRecoveryInfo",
  "functionId": "convertBlockECRecoveryInfo___blockEcRecoveryInfo-BlockECReconstructionInfo",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java",
  "functionStartLine": 1051,
  "functionEndLine": 1078,
  "numCommitsSeen": 371,
  "timeTaken": 3368,
  "changeHistory": [
    "4ae543fdcd6dcfbe32257b1e72a405df9aa73e17",
    "70d6f201260086a3f12beaa317fede2a99639fef",
    "61ab0440f7eaff0f631cbae0378403912f88d7ad"
  ],
  "changeHistoryShort": {
    "4ae543fdcd6dcfbe32257b1e72a405df9aa73e17": "Ymultichange(Yparameterchange,Yreturntypechange,Ybodychange)",
    "70d6f201260086a3f12beaa317fede2a99639fef": "Ybodychange",
    "61ab0440f7eaff0f631cbae0378403912f88d7ad": "Ybodychange"
  },
  "changeHistoryDetails": {
    "4ae543fdcd6dcfbe32257b1e72a405df9aa73e17": {
      "type": "Ymultichange(Yparameterchange,Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-9731. Erasure Coding: Rename BlockECRecoveryCommand to BlockECReconstructionCommand. Contributed by Rakesh R.\n\nChange-Id: I405365a8395770e494b92bfe9651f4f0366d8f28\n",
      "commitDate": "02/02/16 12:32 PM",
      "commitName": "4ae543fdcd6dcfbe32257b1e72a405df9aa73e17",
      "commitAuthor": "zhezhang",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-9731. Erasure Coding: Rename BlockECRecoveryCommand to BlockECReconstructionCommand. Contributed by Rakesh R.\n\nChange-Id: I405365a8395770e494b92bfe9651f4f0366d8f28\n",
          "commitDate": "02/02/16 12:32 PM",
          "commitName": "4ae543fdcd6dcfbe32257b1e72a405df9aa73e17",
          "commitAuthor": "zhezhang",
          "commitDateOld": "02/02/16 11:23 AM",
          "commitNameOld": "dd9ebf6eedfd4ff8b3486eae2a446de6b0c7fa8a",
          "commitAuthorOld": "Colin Patrick Mccabe",
          "daysBetweenCommits": 0.05,
          "commitsBetweenForRepo": 4,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,28 @@\n-  public static BlockECRecoveryInfoProto convertBlockECRecoveryInfo(\n-      BlockECRecoveryInfo blockEcRecoveryInfo) {\n-    BlockECRecoveryInfoProto.Builder builder \u003d BlockECRecoveryInfoProto\n-        .newBuilder();\n+  public static BlockECReconstructionInfoProto convertBlockECRecoveryInfo(\n+      BlockECReconstructionInfo blockEcRecoveryInfo) {\n+    BlockECReconstructionInfoProto.Builder builder \u003d\n+        BlockECReconstructionInfoProto.newBuilder();\n     builder.setBlock(PBHelperClient.convert(\n         blockEcRecoveryInfo.getExtendedBlock()));\n \n     DatanodeInfo[] sourceDnInfos \u003d blockEcRecoveryInfo.getSourceDnInfos();\n     builder.setSourceDnInfos(convertToDnInfosProto(sourceDnInfos));\n \n     DatanodeInfo[] targetDnInfos \u003d blockEcRecoveryInfo.getTargetDnInfos();\n     builder.setTargetDnInfos(convertToDnInfosProto(targetDnInfos));\n \n     String[] targetStorageIDs \u003d blockEcRecoveryInfo.getTargetStorageIDs();\n     builder.setTargetStorageUuids(convertStorageIDs(targetStorageIDs));\n \n     StorageType[] targetStorageTypes \u003d blockEcRecoveryInfo\n         .getTargetStorageTypes();\n     builder.setTargetStorageTypes(convertStorageTypesProto(targetStorageTypes));\n \n     byte[] liveBlockIndices \u003d blockEcRecoveryInfo.getLiveBlockIndices();\n     builder.setLiveBlockIndices(PBHelperClient.getByteString(liveBlockIndices));\n \n     builder.setEcPolicy(PBHelperClient.convertErasureCodingPolicy(\n         blockEcRecoveryInfo.getErasureCodingPolicy()));\n \n     return builder.build();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static BlockECReconstructionInfoProto convertBlockECRecoveryInfo(\n      BlockECReconstructionInfo blockEcRecoveryInfo) {\n    BlockECReconstructionInfoProto.Builder builder \u003d\n        BlockECReconstructionInfoProto.newBuilder();\n    builder.setBlock(PBHelperClient.convert(\n        blockEcRecoveryInfo.getExtendedBlock()));\n\n    DatanodeInfo[] sourceDnInfos \u003d blockEcRecoveryInfo.getSourceDnInfos();\n    builder.setSourceDnInfos(convertToDnInfosProto(sourceDnInfos));\n\n    DatanodeInfo[] targetDnInfos \u003d blockEcRecoveryInfo.getTargetDnInfos();\n    builder.setTargetDnInfos(convertToDnInfosProto(targetDnInfos));\n\n    String[] targetStorageIDs \u003d blockEcRecoveryInfo.getTargetStorageIDs();\n    builder.setTargetStorageUuids(convertStorageIDs(targetStorageIDs));\n\n    StorageType[] targetStorageTypes \u003d blockEcRecoveryInfo\n        .getTargetStorageTypes();\n    builder.setTargetStorageTypes(convertStorageTypesProto(targetStorageTypes));\n\n    byte[] liveBlockIndices \u003d blockEcRecoveryInfo.getLiveBlockIndices();\n    builder.setLiveBlockIndices(PBHelperClient.getByteString(liveBlockIndices));\n\n    builder.setEcPolicy(PBHelperClient.convertErasureCodingPolicy(\n        blockEcRecoveryInfo.getErasureCodingPolicy()));\n\n    return builder.build();\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java",
          "extendedDetails": {
            "oldValue": "[blockEcRecoveryInfo-BlockECRecoveryInfo]",
            "newValue": "[blockEcRecoveryInfo-BlockECReconstructionInfo]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-9731. Erasure Coding: Rename BlockECRecoveryCommand to BlockECReconstructionCommand. Contributed by Rakesh R.\n\nChange-Id: I405365a8395770e494b92bfe9651f4f0366d8f28\n",
          "commitDate": "02/02/16 12:32 PM",
          "commitName": "4ae543fdcd6dcfbe32257b1e72a405df9aa73e17",
          "commitAuthor": "zhezhang",
          "commitDateOld": "02/02/16 11:23 AM",
          "commitNameOld": "dd9ebf6eedfd4ff8b3486eae2a446de6b0c7fa8a",
          "commitAuthorOld": "Colin Patrick Mccabe",
          "daysBetweenCommits": 0.05,
          "commitsBetweenForRepo": 4,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,28 @@\n-  public static BlockECRecoveryInfoProto convertBlockECRecoveryInfo(\n-      BlockECRecoveryInfo blockEcRecoveryInfo) {\n-    BlockECRecoveryInfoProto.Builder builder \u003d BlockECRecoveryInfoProto\n-        .newBuilder();\n+  public static BlockECReconstructionInfoProto convertBlockECRecoveryInfo(\n+      BlockECReconstructionInfo blockEcRecoveryInfo) {\n+    BlockECReconstructionInfoProto.Builder builder \u003d\n+        BlockECReconstructionInfoProto.newBuilder();\n     builder.setBlock(PBHelperClient.convert(\n         blockEcRecoveryInfo.getExtendedBlock()));\n \n     DatanodeInfo[] sourceDnInfos \u003d blockEcRecoveryInfo.getSourceDnInfos();\n     builder.setSourceDnInfos(convertToDnInfosProto(sourceDnInfos));\n \n     DatanodeInfo[] targetDnInfos \u003d blockEcRecoveryInfo.getTargetDnInfos();\n     builder.setTargetDnInfos(convertToDnInfosProto(targetDnInfos));\n \n     String[] targetStorageIDs \u003d blockEcRecoveryInfo.getTargetStorageIDs();\n     builder.setTargetStorageUuids(convertStorageIDs(targetStorageIDs));\n \n     StorageType[] targetStorageTypes \u003d blockEcRecoveryInfo\n         .getTargetStorageTypes();\n     builder.setTargetStorageTypes(convertStorageTypesProto(targetStorageTypes));\n \n     byte[] liveBlockIndices \u003d blockEcRecoveryInfo.getLiveBlockIndices();\n     builder.setLiveBlockIndices(PBHelperClient.getByteString(liveBlockIndices));\n \n     builder.setEcPolicy(PBHelperClient.convertErasureCodingPolicy(\n         blockEcRecoveryInfo.getErasureCodingPolicy()));\n \n     return builder.build();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static BlockECReconstructionInfoProto convertBlockECRecoveryInfo(\n      BlockECReconstructionInfo blockEcRecoveryInfo) {\n    BlockECReconstructionInfoProto.Builder builder \u003d\n        BlockECReconstructionInfoProto.newBuilder();\n    builder.setBlock(PBHelperClient.convert(\n        blockEcRecoveryInfo.getExtendedBlock()));\n\n    DatanodeInfo[] sourceDnInfos \u003d blockEcRecoveryInfo.getSourceDnInfos();\n    builder.setSourceDnInfos(convertToDnInfosProto(sourceDnInfos));\n\n    DatanodeInfo[] targetDnInfos \u003d blockEcRecoveryInfo.getTargetDnInfos();\n    builder.setTargetDnInfos(convertToDnInfosProto(targetDnInfos));\n\n    String[] targetStorageIDs \u003d blockEcRecoveryInfo.getTargetStorageIDs();\n    builder.setTargetStorageUuids(convertStorageIDs(targetStorageIDs));\n\n    StorageType[] targetStorageTypes \u003d blockEcRecoveryInfo\n        .getTargetStorageTypes();\n    builder.setTargetStorageTypes(convertStorageTypesProto(targetStorageTypes));\n\n    byte[] liveBlockIndices \u003d blockEcRecoveryInfo.getLiveBlockIndices();\n    builder.setLiveBlockIndices(PBHelperClient.getByteString(liveBlockIndices));\n\n    builder.setEcPolicy(PBHelperClient.convertErasureCodingPolicy(\n        blockEcRecoveryInfo.getErasureCodingPolicy()));\n\n    return builder.build();\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java",
          "extendedDetails": {
            "oldValue": "BlockECRecoveryInfoProto",
            "newValue": "BlockECReconstructionInfoProto"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-9731. Erasure Coding: Rename BlockECRecoveryCommand to BlockECReconstructionCommand. Contributed by Rakesh R.\n\nChange-Id: I405365a8395770e494b92bfe9651f4f0366d8f28\n",
          "commitDate": "02/02/16 12:32 PM",
          "commitName": "4ae543fdcd6dcfbe32257b1e72a405df9aa73e17",
          "commitAuthor": "zhezhang",
          "commitDateOld": "02/02/16 11:23 AM",
          "commitNameOld": "dd9ebf6eedfd4ff8b3486eae2a446de6b0c7fa8a",
          "commitAuthorOld": "Colin Patrick Mccabe",
          "daysBetweenCommits": 0.05,
          "commitsBetweenForRepo": 4,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,28 @@\n-  public static BlockECRecoveryInfoProto convertBlockECRecoveryInfo(\n-      BlockECRecoveryInfo blockEcRecoveryInfo) {\n-    BlockECRecoveryInfoProto.Builder builder \u003d BlockECRecoveryInfoProto\n-        .newBuilder();\n+  public static BlockECReconstructionInfoProto convertBlockECRecoveryInfo(\n+      BlockECReconstructionInfo blockEcRecoveryInfo) {\n+    BlockECReconstructionInfoProto.Builder builder \u003d\n+        BlockECReconstructionInfoProto.newBuilder();\n     builder.setBlock(PBHelperClient.convert(\n         blockEcRecoveryInfo.getExtendedBlock()));\n \n     DatanodeInfo[] sourceDnInfos \u003d blockEcRecoveryInfo.getSourceDnInfos();\n     builder.setSourceDnInfos(convertToDnInfosProto(sourceDnInfos));\n \n     DatanodeInfo[] targetDnInfos \u003d blockEcRecoveryInfo.getTargetDnInfos();\n     builder.setTargetDnInfos(convertToDnInfosProto(targetDnInfos));\n \n     String[] targetStorageIDs \u003d blockEcRecoveryInfo.getTargetStorageIDs();\n     builder.setTargetStorageUuids(convertStorageIDs(targetStorageIDs));\n \n     StorageType[] targetStorageTypes \u003d blockEcRecoveryInfo\n         .getTargetStorageTypes();\n     builder.setTargetStorageTypes(convertStorageTypesProto(targetStorageTypes));\n \n     byte[] liveBlockIndices \u003d blockEcRecoveryInfo.getLiveBlockIndices();\n     builder.setLiveBlockIndices(PBHelperClient.getByteString(liveBlockIndices));\n \n     builder.setEcPolicy(PBHelperClient.convertErasureCodingPolicy(\n         blockEcRecoveryInfo.getErasureCodingPolicy()));\n \n     return builder.build();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static BlockECReconstructionInfoProto convertBlockECRecoveryInfo(\n      BlockECReconstructionInfo blockEcRecoveryInfo) {\n    BlockECReconstructionInfoProto.Builder builder \u003d\n        BlockECReconstructionInfoProto.newBuilder();\n    builder.setBlock(PBHelperClient.convert(\n        blockEcRecoveryInfo.getExtendedBlock()));\n\n    DatanodeInfo[] sourceDnInfos \u003d blockEcRecoveryInfo.getSourceDnInfos();\n    builder.setSourceDnInfos(convertToDnInfosProto(sourceDnInfos));\n\n    DatanodeInfo[] targetDnInfos \u003d blockEcRecoveryInfo.getTargetDnInfos();\n    builder.setTargetDnInfos(convertToDnInfosProto(targetDnInfos));\n\n    String[] targetStorageIDs \u003d blockEcRecoveryInfo.getTargetStorageIDs();\n    builder.setTargetStorageUuids(convertStorageIDs(targetStorageIDs));\n\n    StorageType[] targetStorageTypes \u003d blockEcRecoveryInfo\n        .getTargetStorageTypes();\n    builder.setTargetStorageTypes(convertStorageTypesProto(targetStorageTypes));\n\n    byte[] liveBlockIndices \u003d blockEcRecoveryInfo.getLiveBlockIndices();\n    builder.setLiveBlockIndices(PBHelperClient.getByteString(liveBlockIndices));\n\n    builder.setEcPolicy(PBHelperClient.convertErasureCodingPolicy(\n        blockEcRecoveryInfo.getErasureCodingPolicy()));\n\n    return builder.build();\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java",
          "extendedDetails": {}
        }
      ]
    },
    "70d6f201260086a3f12beaa317fede2a99639fef": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9575. Use byte array for internal block indices in a striped block.  Contributed by jing9\n",
      "commitDate": "21/12/15 10:47 PM",
      "commitName": "70d6f201260086a3f12beaa317fede2a99639fef",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "commitDateOld": "18/12/15 3:57 PM",
      "commitNameOld": "61ab0440f7eaff0f631cbae0378403912f88d7ad",
      "commitAuthorOld": "Zhe Zhang",
      "daysBetweenCommits": 3.28,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,28 @@\n   public static BlockECRecoveryInfoProto convertBlockECRecoveryInfo(\n       BlockECRecoveryInfo blockEcRecoveryInfo) {\n     BlockECRecoveryInfoProto.Builder builder \u003d BlockECRecoveryInfoProto\n         .newBuilder();\n     builder.setBlock(PBHelperClient.convert(\n         blockEcRecoveryInfo.getExtendedBlock()));\n \n     DatanodeInfo[] sourceDnInfos \u003d blockEcRecoveryInfo.getSourceDnInfos();\n     builder.setSourceDnInfos(convertToDnInfosProto(sourceDnInfos));\n \n     DatanodeInfo[] targetDnInfos \u003d blockEcRecoveryInfo.getTargetDnInfos();\n     builder.setTargetDnInfos(convertToDnInfosProto(targetDnInfos));\n \n     String[] targetStorageIDs \u003d blockEcRecoveryInfo.getTargetStorageIDs();\n     builder.setTargetStorageUuids(convertStorageIDs(targetStorageIDs));\n \n     StorageType[] targetStorageTypes \u003d blockEcRecoveryInfo\n         .getTargetStorageTypes();\n     builder.setTargetStorageTypes(convertStorageTypesProto(targetStorageTypes));\n \n-    short[] liveBlockIndices \u003d blockEcRecoveryInfo.getLiveBlockIndices();\n-    builder.addAllLiveBlockIndices(asList(liveBlockIndices));\n+    byte[] liveBlockIndices \u003d blockEcRecoveryInfo.getLiveBlockIndices();\n+    builder.setLiveBlockIndices(PBHelperClient.getByteString(liveBlockIndices));\n \n     builder.setEcPolicy(PBHelperClient.convertErasureCodingPolicy(\n         blockEcRecoveryInfo.getErasureCodingPolicy()));\n \n     return builder.build();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static BlockECRecoveryInfoProto convertBlockECRecoveryInfo(\n      BlockECRecoveryInfo blockEcRecoveryInfo) {\n    BlockECRecoveryInfoProto.Builder builder \u003d BlockECRecoveryInfoProto\n        .newBuilder();\n    builder.setBlock(PBHelperClient.convert(\n        blockEcRecoveryInfo.getExtendedBlock()));\n\n    DatanodeInfo[] sourceDnInfos \u003d blockEcRecoveryInfo.getSourceDnInfos();\n    builder.setSourceDnInfos(convertToDnInfosProto(sourceDnInfos));\n\n    DatanodeInfo[] targetDnInfos \u003d blockEcRecoveryInfo.getTargetDnInfos();\n    builder.setTargetDnInfos(convertToDnInfosProto(targetDnInfos));\n\n    String[] targetStorageIDs \u003d blockEcRecoveryInfo.getTargetStorageIDs();\n    builder.setTargetStorageUuids(convertStorageIDs(targetStorageIDs));\n\n    StorageType[] targetStorageTypes \u003d blockEcRecoveryInfo\n        .getTargetStorageTypes();\n    builder.setTargetStorageTypes(convertStorageTypesProto(targetStorageTypes));\n\n    byte[] liveBlockIndices \u003d blockEcRecoveryInfo.getLiveBlockIndices();\n    builder.setLiveBlockIndices(PBHelperClient.getByteString(liveBlockIndices));\n\n    builder.setEcPolicy(PBHelperClient.convertErasureCodingPolicy(\n        blockEcRecoveryInfo.getErasureCodingPolicy()));\n\n    return builder.build();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java",
      "extendedDetails": {}
    },
    "61ab0440f7eaff0f631cbae0378403912f88d7ad": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9173. Erasure Coding: Lease recovery for striped file. Contributed by Walter Su and Jing Zhao.\n\nChange-Id: I51703a61c9d8454f883028f3f6acb5729fde1b15\n",
      "commitDate": "18/12/15 3:57 PM",
      "commitName": "61ab0440f7eaff0f631cbae0378403912f88d7ad",
      "commitAuthor": "Zhe Zhang",
      "commitDateOld": "16/12/15 11:10 AM",
      "commitNameOld": "c470c8953d4927043b6383fad8e792289c634c09",
      "commitAuthorOld": "cnauroth",
      "daysBetweenCommits": 2.2,
      "commitsBetweenForRepo": 33,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,28 @@\n   public static BlockECRecoveryInfoProto convertBlockECRecoveryInfo(\n       BlockECRecoveryInfo blockEcRecoveryInfo) {\n     BlockECRecoveryInfoProto.Builder builder \u003d BlockECRecoveryInfoProto\n         .newBuilder();\n     builder.setBlock(PBHelperClient.convert(\n         blockEcRecoveryInfo.getExtendedBlock()));\n \n     DatanodeInfo[] sourceDnInfos \u003d blockEcRecoveryInfo.getSourceDnInfos();\n     builder.setSourceDnInfos(convertToDnInfosProto(sourceDnInfos));\n \n     DatanodeInfo[] targetDnInfos \u003d blockEcRecoveryInfo.getTargetDnInfos();\n     builder.setTargetDnInfos(convertToDnInfosProto(targetDnInfos));\n \n     String[] targetStorageIDs \u003d blockEcRecoveryInfo.getTargetStorageIDs();\n     builder.setTargetStorageUuids(convertStorageIDs(targetStorageIDs));\n \n     StorageType[] targetStorageTypes \u003d blockEcRecoveryInfo\n         .getTargetStorageTypes();\n     builder.setTargetStorageTypes(convertStorageTypesProto(targetStorageTypes));\n \n     short[] liveBlockIndices \u003d blockEcRecoveryInfo.getLiveBlockIndices();\n-    builder.addAllLiveBlockIndices(convertIntArray(liveBlockIndices));\n+    builder.addAllLiveBlockIndices(asList(liveBlockIndices));\n \n     builder.setEcPolicy(PBHelperClient.convertErasureCodingPolicy(\n         blockEcRecoveryInfo.getErasureCodingPolicy()));\n \n     return builder.build();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static BlockECRecoveryInfoProto convertBlockECRecoveryInfo(\n      BlockECRecoveryInfo blockEcRecoveryInfo) {\n    BlockECRecoveryInfoProto.Builder builder \u003d BlockECRecoveryInfoProto\n        .newBuilder();\n    builder.setBlock(PBHelperClient.convert(\n        blockEcRecoveryInfo.getExtendedBlock()));\n\n    DatanodeInfo[] sourceDnInfos \u003d blockEcRecoveryInfo.getSourceDnInfos();\n    builder.setSourceDnInfos(convertToDnInfosProto(sourceDnInfos));\n\n    DatanodeInfo[] targetDnInfos \u003d blockEcRecoveryInfo.getTargetDnInfos();\n    builder.setTargetDnInfos(convertToDnInfosProto(targetDnInfos));\n\n    String[] targetStorageIDs \u003d blockEcRecoveryInfo.getTargetStorageIDs();\n    builder.setTargetStorageUuids(convertStorageIDs(targetStorageIDs));\n\n    StorageType[] targetStorageTypes \u003d blockEcRecoveryInfo\n        .getTargetStorageTypes();\n    builder.setTargetStorageTypes(convertStorageTypesProto(targetStorageTypes));\n\n    short[] liveBlockIndices \u003d blockEcRecoveryInfo.getLiveBlockIndices();\n    builder.addAllLiveBlockIndices(asList(liveBlockIndices));\n\n    builder.setEcPolicy(PBHelperClient.convertErasureCodingPolicy(\n        blockEcRecoveryInfo.getErasureCodingPolicy()));\n\n    return builder.build();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelper.java",
      "extendedDetails": {}
    }
  }
}