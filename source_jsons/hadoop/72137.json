{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "KerberosName.java",
  "functionName": "getShortName",
  "functionId": "getShortName",
  "sourceFilePath": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/util/KerberosName.java",
  "functionStartLine": 405,
  "functionEndLine": 432,
  "numCommitsSeen": 18,
  "timeTaken": 1881,
  "changeHistory": [
    "d43af8b3db4743b4b240751b6f29de6c20cfd6e5",
    "d0edd37269bb40290b409d583bcf3b70897c13e0",
    "829a2e4d271f05afb209ddc834cd4a0e85492eda",
    "2b016dac8232e0f5c43293adcbdf7164f5fca74c",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "a0f120ce68dddb0cb31b64c89f3224313f3cb5af"
  ],
  "changeHistoryShort": {
    "d43af8b3db4743b4b240751b6f29de6c20cfd6e5": "Ybodychange",
    "d0edd37269bb40290b409d583bcf3b70897c13e0": "Ybodychange",
    "829a2e4d271f05afb209ddc834cd4a0e85492eda": "Ybodychange",
    "2b016dac8232e0f5c43293adcbdf7164f5fca74c": "Yfilerename",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "a0f120ce68dddb0cb31b64c89f3224313f3cb5af": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d43af8b3db4743b4b240751b6f29de6c20cfd6e5": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15996.  Improved Kerberos username mapping strategy in Hadoop.\n               Contributed by Bolke de Bruin\n",
      "commitDate": "04/01/19 2:54 PM",
      "commitName": "d43af8b3db4743b4b240751b6f29de6c20cfd6e5",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "29/11/18 9:52 AM",
      "commitNameOld": "d0edd37269bb40290b409d583bcf3b70897c13e0",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 36.21,
      "commitsBetweenForRepo": 207,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,28 @@\n   public String getShortName() throws IOException {\n     String[] params;\n     if (hostName \u003d\u003d null) {\n       // if it is already simple, just return it\n       if (realm \u003d\u003d null) {\n         return serviceName;\n       }\n       params \u003d new String[]{realm, serviceName};\n     } else {\n       params \u003d new String[]{realm, serviceName, hostName};\n     }\n+    String ruleMechanism \u003d this.ruleMechanism;\n+    if (ruleMechanism \u003d\u003d null \u0026\u0026 rules !\u003d null) {\n+      LOG.warn(\"auth_to_local rule mechanism not set.\"\n+      + \"Using default of \" + DEFAULT_MECHANISM);\n+      ruleMechanism \u003d DEFAULT_MECHANISM;\n+    }\n     for(Rule r: rules) {\n-      String result \u003d r.apply(params);\n+      String result \u003d r.apply(params, ruleMechanism);\n       if (result !\u003d null) {\n         return result;\n       }\n     }\n-    throw new NoMatchingRule(\"No rules applied to \" + toString());\n+    if (ruleMechanism.equalsIgnoreCase(MECHANISM_HADOOP)) {\n+      throw new NoMatchingRule(\"No rules applied to \" + toString());\n+    }\n+    return toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String getShortName() throws IOException {\n    String[] params;\n    if (hostName \u003d\u003d null) {\n      // if it is already simple, just return it\n      if (realm \u003d\u003d null) {\n        return serviceName;\n      }\n      params \u003d new String[]{realm, serviceName};\n    } else {\n      params \u003d new String[]{realm, serviceName, hostName};\n    }\n    String ruleMechanism \u003d this.ruleMechanism;\n    if (ruleMechanism \u003d\u003d null \u0026\u0026 rules !\u003d null) {\n      LOG.warn(\"auth_to_local rule mechanism not set.\"\n      + \"Using default of \" + DEFAULT_MECHANISM);\n      ruleMechanism \u003d DEFAULT_MECHANISM;\n    }\n    for(Rule r: rules) {\n      String result \u003d r.apply(params, ruleMechanism);\n      if (result !\u003d null) {\n        return result;\n      }\n    }\n    if (ruleMechanism.equalsIgnoreCase(MECHANISM_HADOOP)) {\n      throw new NoMatchingRule(\"No rules applied to \" + toString());\n    }\n    return toString();\n  }",
      "path": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/util/KerberosName.java",
      "extendedDetails": {}
    },
    "d0edd37269bb40290b409d583bcf3b70897c13e0": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15959. Revert \"HADOOP-12751. While using kerberos Hadoop incorrectly assumes names with \u0027@\u0027 to be non-simple\"\n\nThis reverts commit 829a2e4d271f05afb209ddc834cd4a0e85492eda.\n",
      "commitDate": "29/11/18 9:52 AM",
      "commitName": "d0edd37269bb40290b409d583bcf3b70897c13e0",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "22/05/17 1:40 AM",
      "commitNameOld": "b6f66b0da1cc77f4e61118404a008b4bd7e1a752",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 556.38,
      "commitsBetweenForRepo": 4717,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,19 @@\n   public String getShortName() throws IOException {\n     String[] params;\n     if (hostName \u003d\u003d null) {\n       // if it is already simple, just return it\n       if (realm \u003d\u003d null) {\n         return serviceName;\n       }\n       params \u003d new String[]{realm, serviceName};\n     } else {\n       params \u003d new String[]{realm, serviceName, hostName};\n     }\n     for(Rule r: rules) {\n       String result \u003d r.apply(params);\n       if (result !\u003d null) {\n         return result;\n       }\n     }\n-    LOG.info(\"No auth_to_local rules applied to {}\", this);\n-    return toString();\n+    throw new NoMatchingRule(\"No rules applied to \" + toString());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String getShortName() throws IOException {\n    String[] params;\n    if (hostName \u003d\u003d null) {\n      // if it is already simple, just return it\n      if (realm \u003d\u003d null) {\n        return serviceName;\n      }\n      params \u003d new String[]{realm, serviceName};\n    } else {\n      params \u003d new String[]{realm, serviceName, hostName};\n    }\n    for(Rule r: rules) {\n      String result \u003d r.apply(params);\n      if (result !\u003d null) {\n        return result;\n      }\n    }\n    throw new NoMatchingRule(\"No rules applied to \" + toString());\n  }",
      "path": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/util/KerberosName.java",
      "extendedDetails": {}
    },
    "829a2e4d271f05afb209ddc834cd4a0e85492eda": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12751. While using kerberos Hadoop incorrectly assumes names with \u0027@\u0027 to be non-simple. (Bolke de Bruin via stevel).\n",
      "commitDate": "10/05/16 1:32 PM",
      "commitName": "829a2e4d271f05afb209ddc834cd4a0e85492eda",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "04/03/16 9:48 AM",
      "commitNameOld": "3e8099a45a4cfd4c5c0e3dce4370514cb2c90da9",
      "commitAuthorOld": "Zhe Zhang",
      "daysBetweenCommits": 67.11,
      "commitsBetweenForRepo": 386,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,20 @@\n   public String getShortName() throws IOException {\n     String[] params;\n     if (hostName \u003d\u003d null) {\n       // if it is already simple, just return it\n       if (realm \u003d\u003d null) {\n         return serviceName;\n       }\n       params \u003d new String[]{realm, serviceName};\n     } else {\n       params \u003d new String[]{realm, serviceName, hostName};\n     }\n     for(Rule r: rules) {\n       String result \u003d r.apply(params);\n       if (result !\u003d null) {\n         return result;\n       }\n     }\n-    throw new NoMatchingRule(\"No rules applied to \" + toString());\n+    LOG.info(\"No auth_to_local rules applied to {}\", this);\n+    return toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String getShortName() throws IOException {\n    String[] params;\n    if (hostName \u003d\u003d null) {\n      // if it is already simple, just return it\n      if (realm \u003d\u003d null) {\n        return serviceName;\n      }\n      params \u003d new String[]{realm, serviceName};\n    } else {\n      params \u003d new String[]{realm, serviceName, hostName};\n    }\n    for(Rule r: rules) {\n      String result \u003d r.apply(params);\n      if (result !\u003d null) {\n        return result;\n      }\n    }\n    LOG.info(\"No auth_to_local rules applied to {}\", this);\n    return toString();\n  }",
      "path": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/util/KerberosName.java",
      "extendedDetails": {}
    },
    "2b016dac8232e0f5c43293adcbdf7164f5fca74c": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7579. Rename package names from alfredo to auth.  Contributed by Alejandro Abdelnur\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1163852 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/08/11 3:40 PM",
      "commitName": "2b016dac8232e0f5c43293adcbdf7164f5fca74c",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "31/08/11 2:18 PM",
      "commitNameOld": "4f1a0e36fab1f18e6e2c5fcc72cd9a7634967fcd",
      "commitAuthorOld": "Konstantin Shvachko",
      "daysBetweenCommits": 0.06,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public String getShortName() throws IOException {\n    String[] params;\n    if (hostName \u003d\u003d null) {\n      // if it is already simple, just return it\n      if (realm \u003d\u003d null) {\n        return serviceName;\n      }\n      params \u003d new String[]{realm, serviceName};\n    } else {\n      params \u003d new String[]{realm, serviceName, hostName};\n    }\n    for(Rule r: rules) {\n      String result \u003d r.apply(params);\n      if (result !\u003d null) {\n        return result;\n      }\n    }\n    throw new NoMatchingRule(\"No rules applied to \" + toString());\n  }",
      "path": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/util/KerberosName.java",
      "extendedDetails": {
        "oldPath": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/alfredo/util/KerberosName.java",
        "newPath": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/util/KerberosName.java"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public String getShortName() throws IOException {\n    String[] params;\n    if (hostName \u003d\u003d null) {\n      // if it is already simple, just return it\n      if (realm \u003d\u003d null) {\n        return serviceName;\n      }\n      params \u003d new String[]{realm, serviceName};\n    } else {\n      params \u003d new String[]{realm, serviceName, hostName};\n    }\n    for(Rule r: rules) {\n      String result \u003d r.apply(params);\n      if (result !\u003d null) {\n        return result;\n      }\n    }\n    throw new NoMatchingRule(\"No rules applied to \" + toString());\n  }",
      "path": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/alfredo/util/KerberosName.java",
      "extendedDetails": {
        "oldPath": "hadoop-alfredo/src/main/java/org/apache/hadoop/alfredo/util/KerberosName.java",
        "newPath": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/alfredo/util/KerberosName.java"
      }
    },
    "a0f120ce68dddb0cb31b64c89f3224313f3cb5af": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7119. add Kerberos HTTP SPNEGO authentication support to Hadoop JT/NN/DN/TT web-consoles. (Alejandro Abdelnur via atm)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159804 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 3:31 PM",
      "commitName": "a0f120ce68dddb0cb31b64c89f3224313f3cb5af",
      "commitAuthor": "Aaron Myers",
      "diff": "@@ -0,0 +1,19 @@\n+  public String getShortName() throws IOException {\n+    String[] params;\n+    if (hostName \u003d\u003d null) {\n+      // if it is already simple, just return it\n+      if (realm \u003d\u003d null) {\n+        return serviceName;\n+      }\n+      params \u003d new String[]{realm, serviceName};\n+    } else {\n+      params \u003d new String[]{realm, serviceName, hostName};\n+    }\n+    for(Rule r: rules) {\n+      String result \u003d r.apply(params);\n+      if (result !\u003d null) {\n+        return result;\n+      }\n+    }\n+    throw new NoMatchingRule(\"No rules applied to \" + toString());\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public String getShortName() throws IOException {\n    String[] params;\n    if (hostName \u003d\u003d null) {\n      // if it is already simple, just return it\n      if (realm \u003d\u003d null) {\n        return serviceName;\n      }\n      params \u003d new String[]{realm, serviceName};\n    } else {\n      params \u003d new String[]{realm, serviceName, hostName};\n    }\n    for(Rule r: rules) {\n      String result \u003d r.apply(params);\n      if (result !\u003d null) {\n        return result;\n      }\n    }\n    throw new NoMatchingRule(\"No rules applied to \" + toString());\n  }",
      "path": "hadoop-alfredo/src/main/java/org/apache/hadoop/alfredo/util/KerberosName.java"
    }
  }
}