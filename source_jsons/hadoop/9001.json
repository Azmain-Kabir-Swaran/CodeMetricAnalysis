{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSNamesystem.java",
  "functionName": "writeUnlock",
  "functionId": "writeUnlock",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
  "functionStartLine": 1734,
  "functionEndLine": 1736,
  "numCommitsSeen": 899,
  "timeTaken": 53632,
  "changeHistory": [
    "434c5ea75dc3d87513e49290ac9999148ff5163c",
    "059058f9614613667d5385f76022294e07e140aa",
    "407b519fb14f79f19ebc4fbdf08204336a7acf77",
    "e556c35b0596700f9ec9d0a51cf5027259d531b5",
    "d1e1925bf6c3cf7fd23ed8df5a5e18677fc299d8",
    "44eed6cbc97649c15177f9b36f6b119cc1900f7a",
    "90b399c4bd1d7a7856a7b9230fa1437a30b4eb88",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "09b6f98de431628c80bc8a6faf0070eeaf72ff2a",
    "97b6ca4dd7d1233e8f8c90b1c01e47228c044e13",
    "1bcfe45e47775b98cce5541f328c4fd46e5eb13d",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "434c5ea75dc3d87513e49290ac9999148ff5163c": "Ybodychange",
    "059058f9614613667d5385f76022294e07e140aa": "Ybodychange",
    "407b519fb14f79f19ebc4fbdf08204336a7acf77": "Ybodychange",
    "e556c35b0596700f9ec9d0a51cf5027259d531b5": "Ybodychange",
    "d1e1925bf6c3cf7fd23ed8df5a5e18677fc299d8": "Ybodychange",
    "44eed6cbc97649c15177f9b36f6b119cc1900f7a": "Ybodychange",
    "90b399c4bd1d7a7856a7b9230fa1437a30b4eb88": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "09b6f98de431628c80bc8a6faf0070eeaf72ff2a": "Ymodifierchange",
    "97b6ca4dd7d1233e8f8c90b1c01e47228c044e13": "Ymodifierchange",
    "1bcfe45e47775b98cce5541f328c4fd46e5eb13d": "Ymodifierchange",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "434c5ea75dc3d87513e49290ac9999148ff5163c": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10896. Move lock logging logic from FSNamesystem into FSNamesystemLock. Contributed by Erik Krogen.\n",
      "commitDate": "30/09/16 1:16 PM",
      "commitName": "434c5ea75dc3d87513e49290ac9999148ff5163c",
      "commitAuthor": "Zhe Zhang",
      "commitDateOld": "28/09/16 3:57 PM",
      "commitNameOld": "5f34402adae191232fe78e62990396ca07f314bb",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 1.89,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,3 @@\n   public void writeUnlock() {\n-    final boolean needReport \u003d fsLock.getWriteHoldCount() \u003d\u003d 1 \u0026\u0026\n-        fsLock.isWriteLockedByCurrentThread();\n-    final long currentTime \u003d timer.monotonicNow();\n-    final long writeLockInterval \u003d currentTime - writeLockHeldTimeStamp;\n-\n-    boolean logReport \u003d false;\n-    int numSuppressedWarnings \u003d 0;\n-    long longestLockHeldInterval \u003d 0;\n-    if (needReport \u0026\u0026 writeLockInterval \u003e\u003d this.writeLockReportingThreshold) {\n-      if (writeLockInterval \u003e longestWriteLockHeldInterval) {\n-        longestWriteLockHeldInterval \u003d writeLockInterval;\n-      }\n-      if (currentTime - timeStampOfLastWriteLockReport \u003e this\n-          .lockSuppressWarningInterval) {\n-        logReport \u003d true;\n-        numSuppressedWarnings \u003d numWriteLockWarningsSuppressed;\n-        numWriteLockWarningsSuppressed \u003d 0;\n-        longestLockHeldInterval \u003d longestWriteLockHeldInterval;\n-        longestWriteLockHeldInterval \u003d 0;\n-        timeStampOfLastWriteLockReport \u003d currentTime;\n-      } else {\n-        numWriteLockWarningsSuppressed++;\n-      }\n-    }\n-\n-    this.fsLock.writeLock().unlock();\n-\n-    if (logReport) {\n-      LOG.info(\"FSNamesystem write lock held for \" + writeLockInterval +\n-          \" ms via\\n\" + StringUtils.getStackTrace(Thread.currentThread()) +\n-          \"\\tNumber of suppressed write-lock reports: \" +\n-          numSuppressedWarnings + \"\\n\\tLongest write-lock held interval: \" +\n-              longestLockHeldInterval);\n-    }\n+    this.fsLock.writeUnlock();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void writeUnlock() {\n    this.fsLock.writeUnlock();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "059058f9614613667d5385f76022294e07e140aa": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10713. Throttle FsNameSystem lock warnings. Contributed by Hanisha Koneru.\n",
      "commitDate": "26/09/16 5:09 PM",
      "commitName": "059058f9614613667d5385f76022294e07e140aa",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "23/09/16 10:37 AM",
      "commitNameOld": "a5bb88c8e0fd4bd19b6d377fecbe1d2d441514f6",
      "commitAuthorOld": "Konstantin V Shvachko",
      "daysBetweenCommits": 3.27,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,36 @@\n   public void writeUnlock() {\n     final boolean needReport \u003d fsLock.getWriteHoldCount() \u003d\u003d 1 \u0026\u0026\n         fsLock.isWriteLockedByCurrentThread();\n-    final long writeLockInterval \u003d monotonicNow() - writeLockHeldTimeStamp;\n+    final long currentTime \u003d timer.monotonicNow();\n+    final long writeLockInterval \u003d currentTime - writeLockHeldTimeStamp;\n+\n+    boolean logReport \u003d false;\n+    int numSuppressedWarnings \u003d 0;\n+    long longestLockHeldInterval \u003d 0;\n+    if (needReport \u0026\u0026 writeLockInterval \u003e\u003d this.writeLockReportingThreshold) {\n+      if (writeLockInterval \u003e longestWriteLockHeldInterval) {\n+        longestWriteLockHeldInterval \u003d writeLockInterval;\n+      }\n+      if (currentTime - timeStampOfLastWriteLockReport \u003e this\n+          .lockSuppressWarningInterval) {\n+        logReport \u003d true;\n+        numSuppressedWarnings \u003d numWriteLockWarningsSuppressed;\n+        numWriteLockWarningsSuppressed \u003d 0;\n+        longestLockHeldInterval \u003d longestWriteLockHeldInterval;\n+        longestWriteLockHeldInterval \u003d 0;\n+        timeStampOfLastWriteLockReport \u003d currentTime;\n+      } else {\n+        numWriteLockWarningsSuppressed++;\n+      }\n+    }\n \n     this.fsLock.writeLock().unlock();\n \n-    if (needReport \u0026\u0026 writeLockInterval \u003e\u003d this.writeLockReportingThreshold) {\n+    if (logReport) {\n       LOG.info(\"FSNamesystem write lock held for \" + writeLockInterval +\n-          \" ms via\\n\" + StringUtils.getStackTrace(Thread.currentThread()));\n+          \" ms via\\n\" + StringUtils.getStackTrace(Thread.currentThread()) +\n+          \"\\tNumber of suppressed write-lock reports: \" +\n+          numSuppressedWarnings + \"\\n\\tLongest write-lock held interval: \" +\n+              longestLockHeldInterval);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void writeUnlock() {\n    final boolean needReport \u003d fsLock.getWriteHoldCount() \u003d\u003d 1 \u0026\u0026\n        fsLock.isWriteLockedByCurrentThread();\n    final long currentTime \u003d timer.monotonicNow();\n    final long writeLockInterval \u003d currentTime - writeLockHeldTimeStamp;\n\n    boolean logReport \u003d false;\n    int numSuppressedWarnings \u003d 0;\n    long longestLockHeldInterval \u003d 0;\n    if (needReport \u0026\u0026 writeLockInterval \u003e\u003d this.writeLockReportingThreshold) {\n      if (writeLockInterval \u003e longestWriteLockHeldInterval) {\n        longestWriteLockHeldInterval \u003d writeLockInterval;\n      }\n      if (currentTime - timeStampOfLastWriteLockReport \u003e this\n          .lockSuppressWarningInterval) {\n        logReport \u003d true;\n        numSuppressedWarnings \u003d numWriteLockWarningsSuppressed;\n        numWriteLockWarningsSuppressed \u003d 0;\n        longestLockHeldInterval \u003d longestWriteLockHeldInterval;\n        longestWriteLockHeldInterval \u003d 0;\n        timeStampOfLastWriteLockReport \u003d currentTime;\n      } else {\n        numWriteLockWarningsSuppressed++;\n      }\n    }\n\n    this.fsLock.writeLock().unlock();\n\n    if (logReport) {\n      LOG.info(\"FSNamesystem write lock held for \" + writeLockInterval +\n          \" ms via\\n\" + StringUtils.getStackTrace(Thread.currentThread()) +\n          \"\\tNumber of suppressed write-lock reports: \" +\n          numSuppressedWarnings + \"\\n\\tLongest write-lock held interval: \" +\n              longestLockHeldInterval);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "407b519fb14f79f19ebc4fbdf08204336a7acf77": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10798. Make the threshold of reporting FSNamesystem lock contention configurable. Contributed by Erik Krogen.\n",
      "commitDate": "26/08/16 2:19 PM",
      "commitName": "407b519fb14f79f19ebc4fbdf08204336a7acf77",
      "commitAuthor": "Zhe Zhang",
      "commitDateOld": "17/08/16 1:53 PM",
      "commitNameOld": "869393643de23dcb010cc33091c8eb398de0fd6c",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 9.02,
      "commitsBetweenForRepo": 70,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n   public void writeUnlock() {\n     final boolean needReport \u003d fsLock.getWriteHoldCount() \u003d\u003d 1 \u0026\u0026\n         fsLock.isWriteLockedByCurrentThread();\n     final long writeLockInterval \u003d monotonicNow() - writeLockHeldTimeStamp;\n \n     this.fsLock.writeLock().unlock();\n \n-    if (needReport \u0026\u0026 writeLockInterval \u003e\u003d WRITELOCK_REPORTING_THRESHOLD) {\n+    if (needReport \u0026\u0026 writeLockInterval \u003e\u003d this.writeLockReportingThreshold) {\n       LOG.info(\"FSNamesystem write lock held for \" + writeLockInterval +\n           \" ms via\\n\" + StringUtils.getStackTrace(Thread.currentThread()));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void writeUnlock() {\n    final boolean needReport \u003d fsLock.getWriteHoldCount() \u003d\u003d 1 \u0026\u0026\n        fsLock.isWriteLockedByCurrentThread();\n    final long writeLockInterval \u003d monotonicNow() - writeLockHeldTimeStamp;\n\n    this.fsLock.writeLock().unlock();\n\n    if (needReport \u0026\u0026 writeLockInterval \u003e\u003d this.writeLockReportingThreshold) {\n      LOG.info(\"FSNamesystem write lock held for \" + writeLockInterval +\n          \" ms via\\n\" + StringUtils.getStackTrace(Thread.currentThread()));\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "e556c35b0596700f9ec9d0a51cf5027259d531b5": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9467. Fix data race accessing writeLockHeldTimeStamp in FSNamesystem. Contributed by Mingliang Liu.\n",
      "commitDate": "25/11/15 2:22 PM",
      "commitName": "e556c35b0596700f9ec9d0a51cf5027259d531b5",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "24/11/15 11:41 AM",
      "commitNameOld": "db4cab21f4c661f68d6a6dec50aae00d75168486",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 1.11,
      "commitsBetweenForRepo": 24,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,12 @@\n   public void writeUnlock() {\n     final boolean needReport \u003d fsLock.getWriteHoldCount() \u003d\u003d 1 \u0026\u0026\n         fsLock.isWriteLockedByCurrentThread();\n+    final long writeLockInterval \u003d monotonicNow() - writeLockHeldTimeStamp;\n+\n     this.fsLock.writeLock().unlock();\n \n-    if (needReport) {\n-      long writeLockInterval \u003d monotonicNow() - writeLockHeldTimeStamp;\n-      if (writeLockInterval \u003e\u003d WRITELOCK_REPORTING_THRESHOLD) {\n-        LOG.info(\"FSNamesystem write lock held for \" + writeLockInterval +\n-            \" ms via\\n\" + StringUtils.getStackTrace(Thread.currentThread()));\n-      }\n+    if (needReport \u0026\u0026 writeLockInterval \u003e\u003d WRITELOCK_REPORTING_THRESHOLD) {\n+      LOG.info(\"FSNamesystem write lock held for \" + writeLockInterval +\n+          \" ms via\\n\" + StringUtils.getStackTrace(Thread.currentThread()));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void writeUnlock() {\n    final boolean needReport \u003d fsLock.getWriteHoldCount() \u003d\u003d 1 \u0026\u0026\n        fsLock.isWriteLockedByCurrentThread();\n    final long writeLockInterval \u003d monotonicNow() - writeLockHeldTimeStamp;\n\n    this.fsLock.writeLock().unlock();\n\n    if (needReport \u0026\u0026 writeLockInterval \u003e\u003d WRITELOCK_REPORTING_THRESHOLD) {\n      LOG.info(\"FSNamesystem write lock held for \" + writeLockInterval +\n          \" ms via\\n\" + StringUtils.getStackTrace(Thread.currentThread()));\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "d1e1925bf6c3cf7fd23ed8df5a5e18677fc299d8": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9145. Tracking methods that hold FSNamesytemLock for too long. Contributed by Mingliang Liu.\n",
      "commitDate": "13/10/15 1:24 PM",
      "commitName": "d1e1925bf6c3cf7fd23ed8df5a5e18677fc299d8",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "07/10/15 11:20 PM",
      "commitNameOld": "1107bd399c790467b22e55291c2611fd1c16e156",
      "commitAuthorOld": "Yongjun Zhang",
      "daysBetweenCommits": 5.59,
      "commitsBetweenForRepo": 38,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,3 +1,13 @@\n   public void writeUnlock() {\n+    final boolean needReport \u003d fsLock.getWriteHoldCount() \u003d\u003d 1 \u0026\u0026\n+        fsLock.isWriteLockedByCurrentThread();\n     this.fsLock.writeLock().unlock();\n+\n+    if (needReport) {\n+      long writeLockInterval \u003d monotonicNow() - writeLockHeldTimeStamp;\n+      if (writeLockInterval \u003e\u003d WRITELOCK_REPORTING_THRESHOLD) {\n+        LOG.info(\"FSNamesystem write lock held for \" + writeLockInterval +\n+            \" ms via\\n\" + StringUtils.getStackTrace(Thread.currentThread()));\n+      }\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void writeUnlock() {\n    final boolean needReport \u003d fsLock.getWriteHoldCount() \u003d\u003d 1 \u0026\u0026\n        fsLock.isWriteLockedByCurrentThread();\n    this.fsLock.writeLock().unlock();\n\n    if (needReport) {\n      long writeLockInterval \u003d monotonicNow() - writeLockHeldTimeStamp;\n      if (writeLockInterval \u003e\u003d WRITELOCK_REPORTING_THRESHOLD) {\n        LOG.info(\"FSNamesystem write lock held for \" + writeLockInterval +\n            \" ms via\\n\" + StringUtils.getStackTrace(Thread.currentThread()));\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "44eed6cbc97649c15177f9b36f6b119cc1900f7a": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7615. Remove longReadLock. Contributed by Kihwal Lee.\n",
      "commitDate": "15/01/15 2:39 PM",
      "commitName": "44eed6cbc97649c15177f9b36f6b119cc1900f7a",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "13/01/15 4:10 PM",
      "commitNameOld": "85aec75ce53445e1abf840076d2e10f1e3c6d69b",
      "commitAuthorOld": "cnauroth",
      "daysBetweenCommits": 1.94,
      "commitsBetweenForRepo": 18,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,4 +1,3 @@\n   public void writeUnlock() {\n     this.fsLock.writeLock().unlock();\n-    this.fsLock.longReadLock().unlock();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void writeUnlock() {\n    this.fsLock.writeLock().unlock();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "90b399c4bd1d7a7856a7b9230fa1437a30b4eb88": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5064. Standby checkpoints should not block concurrent readers. Contributed by Aaron Twining Myers.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1575448 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/03/14 3:35 PM",
      "commitName": "90b399c4bd1d7a7856a7b9230fa1437a30b4eb88",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "07/03/14 11:37 AM",
      "commitNameOld": "b1f87bbabd38c90f55c833db70f82d89eae15de6",
      "commitAuthorOld": "Chris Nauroth",
      "daysBetweenCommits": 0.17,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,3 +1,4 @@\n   public void writeUnlock() {\n     this.fsLock.writeLock().unlock();\n+    this.fsLock.longReadLock().unlock();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void writeUnlock() {\n    this.fsLock.writeLock().unlock();\n    this.fsLock.longReadLock().unlock();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void writeUnlock() {\n    this.fsLock.writeLock().unlock();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void writeUnlock() {\n    this.fsLock.writeLock().unlock();\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java"
      }
    },
    "09b6f98de431628c80bc8a6faf0070eeaf72ff2a": {
      "type": "Ymodifierchange",
      "commitMessage": "HDFS-2107. Move block management code from o.a.h.h.s.namenode to a new package o.a.h.h.s.blockmanagement.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1140939 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/06/11 6:31 PM",
      "commitName": "09b6f98de431628c80bc8a6faf0070eeaf72ff2a",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "28/06/11 5:26 PM",
      "commitNameOld": "97b6ca4dd7d1233e8f8c90b1c01e47228c044e13",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,3 +1,3 @@\n-  void writeUnlock() {\n+  public void writeUnlock() {\n     this.fsLock.writeLock().unlock();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void writeUnlock() {\n    this.fsLock.writeLock().unlock();\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {
        "oldValue": "[]",
        "newValue": "[public]"
      }
    },
    "97b6ca4dd7d1233e8f8c90b1c01e47228c044e13": {
      "type": "Ymodifierchange",
      "commitMessage": "Revert 1140913 and 1140909 for HDFS-2107.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1140920 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/06/11 5:26 PM",
      "commitName": "97b6ca4dd7d1233e8f8c90b1c01e47228c044e13",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "28/06/11 4:43 PM",
      "commitNameOld": "1bcfe45e47775b98cce5541f328c4fd46e5eb13d",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 0.03,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,3 +1,3 @@\n-  public void writeUnlock() {\n+  void writeUnlock() {\n     this.fsLock.writeLock().unlock();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void writeUnlock() {\n    this.fsLock.writeLock().unlock();\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {
        "oldValue": "[public]",
        "newValue": "[]"
      }
    },
    "1bcfe45e47775b98cce5541f328c4fd46e5eb13d": {
      "type": "Ymodifierchange",
      "commitMessage": "HDFS-2106. Move block management code from o.a.h.h.s.namenode to a new package o.a.h.h.s.blockmanagement.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1140909 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/06/11 4:43 PM",
      "commitName": "1bcfe45e47775b98cce5541f328c4fd46e5eb13d",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "23/06/11 3:13 PM",
      "commitNameOld": "42863b9bafb9f77b76d9dcd26f0fcac859ea6f6a",
      "commitAuthorOld": "Tanping Wang",
      "daysBetweenCommits": 5.06,
      "commitsBetweenForRepo": 17,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,3 +1,3 @@\n-  void writeUnlock() {\n+  public void writeUnlock() {\n     this.fsLock.writeLock().unlock();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void writeUnlock() {\n    this.fsLock.writeLock().unlock();\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {
        "oldValue": "[]",
        "newValue": "[public]"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,3 @@\n+  void writeUnlock() {\n+    this.fsLock.writeLock().unlock();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  void writeUnlock() {\n    this.fsLock.writeLock().unlock();\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java"
    }
  }
}