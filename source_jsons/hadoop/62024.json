{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HAUtil.java",
  "functionName": "getRMHAId",
  "functionId": "getRMHAId___conf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/conf/HAUtil.java",
  "functionStartLine": 230,
  "functionEndLine": 259,
  "numCommitsSeen": 19,
  "timeTaken": 1177,
  "changeHistory": [
    "3e7d56678c334a359049adf99018683113849fc8",
    "c3cc855d27470edca7ca0bdc0aa8907b544b636e",
    "116b459d2299f933ae028fbcb6d71d338d4d3e94",
    "cbab04727bf24ec77f34677d0060cfa54263faf5"
  ],
  "changeHistoryShort": {
    "3e7d56678c334a359049adf99018683113849fc8": "Ybodychange",
    "c3cc855d27470edca7ca0bdc0aa8907b544b636e": "Ymodifierchange",
    "116b459d2299f933ae028fbcb6d71d338d4d3e94": "Ymultichange(Ymodifierchange,Ybodychange)",
    "cbab04727bf24ec77f34677d0060cfa54263faf5": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3e7d56678c334a359049adf99018683113849fc8": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1639. Modified RM HA configuration handling to have a way of not requiring separate configuration files for each RM. Contributed by Xuan Gong.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1564032 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/02/14 11:53 AM",
      "commitName": "3e7d56678c334a359049adf99018683113849fc8",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "06/01/14 5:56 PM",
      "commitNameOld": "c3cc855d27470edca7ca0bdc0aa8907b544b636e",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 27.75,
      "commitsBetweenForRepo": 162,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,3 +1,30 @@\n   public static String getRMHAId(Configuration conf) {\n-    return conf.get(YarnConfiguration.RM_HA_ID);\n+    int found \u003d 0;\n+    String currentRMId \u003d conf.getTrimmed(YarnConfiguration.RM_HA_ID);\n+    if(currentRMId \u003d\u003d null) {\n+      for(String rmId : getRMHAIds(conf)) {\n+        String key \u003d addSuffix(YarnConfiguration.RM_ADDRESS, rmId);\n+        String addr \u003d conf.get(key);\n+        if (addr \u003d\u003d null) {\n+          continue;\n+        }\n+        InetSocketAddress s;\n+        try {\n+          s \u003d NetUtils.createSocketAddr(addr);\n+        } catch (Exception e) {\n+          LOG.warn(\"Exception in creating socket address \" + addr, e);\n+          continue;\n+        }\n+        if (!s.isUnresolved() \u0026\u0026 NetUtils.isLocalAddress(s.getAddress())) {\n+          currentRMId \u003d rmId.trim();\n+          found++;\n+        }\n+      }\n+    }\n+    if (found \u003e 1) { // Only one address must match the local address\n+      String msg \u003d \"The HA Configuration has multiple addresses that match \"\n+          + \"local node\u0027s address.\";\n+      throw new HadoopIllegalArgumentException(msg);\n+    }\n+    return currentRMId;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static String getRMHAId(Configuration conf) {\n    int found \u003d 0;\n    String currentRMId \u003d conf.getTrimmed(YarnConfiguration.RM_HA_ID);\n    if(currentRMId \u003d\u003d null) {\n      for(String rmId : getRMHAIds(conf)) {\n        String key \u003d addSuffix(YarnConfiguration.RM_ADDRESS, rmId);\n        String addr \u003d conf.get(key);\n        if (addr \u003d\u003d null) {\n          continue;\n        }\n        InetSocketAddress s;\n        try {\n          s \u003d NetUtils.createSocketAddr(addr);\n        } catch (Exception e) {\n          LOG.warn(\"Exception in creating socket address \" + addr, e);\n          continue;\n        }\n        if (!s.isUnresolved() \u0026\u0026 NetUtils.isLocalAddress(s.getAddress())) {\n          currentRMId \u003d rmId.trim();\n          found++;\n        }\n      }\n    }\n    if (found \u003e 1) { // Only one address must match the local address\n      String msg \u003d \"The HA Configuration has multiple addresses that match \"\n          + \"local node\u0027s address.\";\n      throw new HadoopIllegalArgumentException(msg);\n    }\n    return currentRMId;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/conf/HAUtil.java",
      "extendedDetails": {}
    },
    "c3cc855d27470edca7ca0bdc0aa8907b544b636e": {
      "type": "Ymodifierchange",
      "commitMessage": "YARN-1029. Added embedded leader election in the ResourceManager. Contributed by Karthik Kambatla.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1556103 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/01/14 5:56 PM",
      "commitName": "c3cc855d27470edca7ca0bdc0aa8907b544b636e",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "13/12/13 3:54 PM",
      "commitNameOld": "1182ca04d4a78f48487d6485f756a3ec96f5b0c2",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 24.08,
      "commitsBetweenForRepo": 97,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,3 +1,3 @@\n-  static String getRMHAId(Configuration conf) {\n+  public static String getRMHAId(Configuration conf) {\n     return conf.get(YarnConfiguration.RM_HA_ID);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static String getRMHAId(Configuration conf) {\n    return conf.get(YarnConfiguration.RM_HA_ID);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/conf/HAUtil.java",
      "extendedDetails": {
        "oldValue": "[static]",
        "newValue": "[public, static]"
      }
    },
    "116b459d2299f933ae028fbcb6d71d338d4d3e94": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-1305. RMHAProtocolService#serviceInit should handle HAUtil\u0027s IllegalArgumentException (Tsuyoshi Ozawa via bikas)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1534884 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/10/13 6:10 PM",
      "commitName": "116b459d2299f933ae028fbcb6d71d338d4d3e94",
      "commitAuthor": "Bikas Saha",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-1305. RMHAProtocolService#serviceInit should handle HAUtil\u0027s IllegalArgumentException (Tsuyoshi Ozawa via bikas)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1534884 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/10/13 6:10 PM",
          "commitName": "116b459d2299f933ae028fbcb6d71d338d4d3e94",
          "commitAuthor": "Bikas Saha",
          "commitDateOld": "04/10/13 11:40 AM",
          "commitNameOld": "cbab04727bf24ec77f34677d0060cfa54263faf5",
          "commitAuthorOld": "Bikas Saha",
          "daysBetweenCommits": 18.27,
          "commitsBetweenForRepo": 123,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,3 @@\n-  public static String getRMHAId(Configuration conf) {\n-    String rmId \u003d conf.get(YarnConfiguration.RM_HA_ID);\n-    if (rmId \u003d\u003d null) {\n-      throwBadConfigurationException(YarnConfiguration.RM_HA_ID +\n-          \" needs to be set in a HA configuration\");\n-    }\n-    return rmId;\n+  static String getRMHAId(Configuration conf) {\n+    return conf.get(YarnConfiguration.RM_HA_ID);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static String getRMHAId(Configuration conf) {\n    return conf.get(YarnConfiguration.RM_HA_ID);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/conf/HAUtil.java",
          "extendedDetails": {
            "oldValue": "[public, static]",
            "newValue": "[static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-1305. RMHAProtocolService#serviceInit should handle HAUtil\u0027s IllegalArgumentException (Tsuyoshi Ozawa via bikas)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1534884 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/10/13 6:10 PM",
          "commitName": "116b459d2299f933ae028fbcb6d71d338d4d3e94",
          "commitAuthor": "Bikas Saha",
          "commitDateOld": "04/10/13 11:40 AM",
          "commitNameOld": "cbab04727bf24ec77f34677d0060cfa54263faf5",
          "commitAuthorOld": "Bikas Saha",
          "daysBetweenCommits": 18.27,
          "commitsBetweenForRepo": 123,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,3 @@\n-  public static String getRMHAId(Configuration conf) {\n-    String rmId \u003d conf.get(YarnConfiguration.RM_HA_ID);\n-    if (rmId \u003d\u003d null) {\n-      throwBadConfigurationException(YarnConfiguration.RM_HA_ID +\n-          \" needs to be set in a HA configuration\");\n-    }\n-    return rmId;\n+  static String getRMHAId(Configuration conf) {\n+    return conf.get(YarnConfiguration.RM_HA_ID);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static String getRMHAId(Configuration conf) {\n    return conf.get(YarnConfiguration.RM_HA_ID);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/conf/HAUtil.java",
          "extendedDetails": {}
        }
      ]
    },
    "cbab04727bf24ec77f34677d0060cfa54263faf5": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1232. Configuration to support multiple RMs (Karthik Kambatla via bikas)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1529251 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/10/13 11:40 AM",
      "commitName": "cbab04727bf24ec77f34677d0060cfa54263faf5",
      "commitAuthor": "Bikas Saha",
      "diff": "@@ -0,0 +1,8 @@\n+  public static String getRMHAId(Configuration conf) {\n+    String rmId \u003d conf.get(YarnConfiguration.RM_HA_ID);\n+    if (rmId \u003d\u003d null) {\n+      throwBadConfigurationException(YarnConfiguration.RM_HA_ID +\n+          \" needs to be set in a HA configuration\");\n+    }\n+    return rmId;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static String getRMHAId(Configuration conf) {\n    String rmId \u003d conf.get(YarnConfiguration.RM_HA_ID);\n    if (rmId \u003d\u003d null) {\n      throwBadConfigurationException(YarnConfiguration.RM_HA_ID +\n          \" needs to be set in a HA configuration\");\n    }\n    return rmId;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/conf/HAUtil.java"
    }
  }
}