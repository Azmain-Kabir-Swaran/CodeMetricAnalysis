{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ActivitiesManager.java",
  "functionName": "startAppAllocationRecording",
  "functionId": "startAppAllocationRecording___nodeID-NodeId__currTS-long__application-SchedulerApplicationAttempt",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/activities/ActivitiesManager.java",
  "functionStartLine": 364,
  "functionEndLine": 381,
  "numCommitsSeen": 16,
  "timeTaken": 2295,
  "changeHistory": [
    "12b7059ddc8d8f67dd7131565f03a0e09cb92ca7",
    "7fa73fac2676875561269e9408215e012269a18c",
    "e0d131f055ee126052ad4d0f7b0d192e6c730188"
  ],
  "changeHistoryShort": {
    "12b7059ddc8d8f67dd7131565f03a0e09cb92ca7": "Ybodychange",
    "7fa73fac2676875561269e9408215e012269a18c": "Ybodychange",
    "e0d131f055ee126052ad4d0f7b0d192e6c730188": "Yintroduced"
  },
  "changeHistoryDetails": {
    "12b7059ddc8d8f67dd7131565f03a0e09cb92ca7": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9440. Improve diagnostics for scheduler and app activities. Contributed by Tao Yang.\n",
      "commitDate": "06/05/19 5:00 AM",
      "commitName": "12b7059ddc8d8f67dd7131565f03a0e09cb92ca7",
      "commitAuthor": "Weiwei Yang",
      "commitDateOld": "15/04/19 9:12 AM",
      "commitNameOld": "7fa73fac2676875561269e9408215e012269a18c",
      "commitAuthorOld": "Weiwei Yang",
      "daysBetweenCommits": 20.82,
      "commitsBetweenForRepo": 102,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,18 @@\n   void startAppAllocationRecording(NodeId nodeID, long currTS,\n       SchedulerApplicationAttempt application) {\n     ApplicationId applicationId \u003d application.getApplicationId();\n \n     Long turnOffTimestamp \u003d\n         recordingAppActivitiesUntilSpecifiedTime.get(applicationId);\n     if (turnOffTimestamp !\u003d null) {\n       if (turnOffTimestamp \u003e currTS) {\n         appsAllocation.get().put(applicationId,\n             new AppAllocation(application.getPriority(), nodeID,\n                 application.getQueueName()));\n+        // enable diagnostic collector\n+        diagnosticCollectorManager.get().enable();\n       } else {\n         turnOffActivityMonitoringForApp(applicationId);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void startAppAllocationRecording(NodeId nodeID, long currTS,\n      SchedulerApplicationAttempt application) {\n    ApplicationId applicationId \u003d application.getApplicationId();\n\n    Long turnOffTimestamp \u003d\n        recordingAppActivitiesUntilSpecifiedTime.get(applicationId);\n    if (turnOffTimestamp !\u003d null) {\n      if (turnOffTimestamp \u003e currTS) {\n        appsAllocation.get().put(applicationId,\n            new AppAllocation(application.getPriority(), nodeID,\n                application.getQueueName()));\n        // enable diagnostic collector\n        diagnosticCollectorManager.get().enable();\n      } else {\n        turnOffActivityMonitoringForApp(applicationId);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/activities/ActivitiesManager.java",
      "extendedDetails": {}
    },
    "7fa73fac2676875561269e9408215e012269a18c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9439. Support asynchronized scheduling mode and multi-node lookup mechanism for app activities. Contributed by Tao Yang.\n",
      "commitDate": "15/04/19 9:12 AM",
      "commitName": "7fa73fac2676875561269e9408215e012269a18c",
      "commitAuthor": "Weiwei Yang",
      "commitDateOld": "07/04/19 10:40 PM",
      "commitNameOld": "fc05b0e70e9bb556d6bdc00fa8735e18a6f90bc9",
      "commitAuthorOld": "Weiwei Yang",
      "daysBetweenCommits": 7.44,
      "commitsBetweenForRepo": 49,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,16 @@\n   void startAppAllocationRecording(NodeId nodeID, long currTS,\n       SchedulerApplicationAttempt application) {\n     ApplicationId applicationId \u003d application.getApplicationId();\n \n-    if (recordingAppActivitiesUntilSpecifiedTime.containsKey(applicationId)\n-        \u0026\u0026 recordingAppActivitiesUntilSpecifiedTime.get(applicationId)\n-        \u003e currTS) {\n-      appsAllocation.put(applicationId,\n-          new AppAllocation(application.getPriority(), nodeID,\n-              application.getQueueName()));\n-    }\n-\n-    if (recordingAppActivitiesUntilSpecifiedTime.containsKey(applicationId)\n-        \u0026\u0026 recordingAppActivitiesUntilSpecifiedTime.get(applicationId)\n-        \u003c\u003d currTS) {\n-      turnOffActivityMonitoringForApp(applicationId);\n+    Long turnOffTimestamp \u003d\n+        recordingAppActivitiesUntilSpecifiedTime.get(applicationId);\n+    if (turnOffTimestamp !\u003d null) {\n+      if (turnOffTimestamp \u003e currTS) {\n+        appsAllocation.get().put(applicationId,\n+            new AppAllocation(application.getPriority(), nodeID,\n+                application.getQueueName()));\n+      } else {\n+        turnOffActivityMonitoringForApp(applicationId);\n+      }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void startAppAllocationRecording(NodeId nodeID, long currTS,\n      SchedulerApplicationAttempt application) {\n    ApplicationId applicationId \u003d application.getApplicationId();\n\n    Long turnOffTimestamp \u003d\n        recordingAppActivitiesUntilSpecifiedTime.get(applicationId);\n    if (turnOffTimestamp !\u003d null) {\n      if (turnOffTimestamp \u003e currTS) {\n        appsAllocation.get().put(applicationId,\n            new AppAllocation(application.getPriority(), nodeID,\n                application.getQueueName()));\n      } else {\n        turnOffActivityMonitoringForApp(applicationId);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/activities/ActivitiesManager.java",
      "extendedDetails": {}
    },
    "e0d131f055ee126052ad4d0f7b0d192e6c730188": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4091. Add REST API to retrieve scheduler activity. (Chen Ge and Sunil G via wangda)\n",
      "commitDate": "05/08/16 10:27 AM",
      "commitName": "e0d131f055ee126052ad4d0f7b0d192e6c730188",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,18 @@\n+  void startAppAllocationRecording(NodeId nodeID, long currTS,\n+      SchedulerApplicationAttempt application) {\n+    ApplicationId applicationId \u003d application.getApplicationId();\n+\n+    if (recordingAppActivitiesUntilSpecifiedTime.containsKey(applicationId)\n+        \u0026\u0026 recordingAppActivitiesUntilSpecifiedTime.get(applicationId)\n+        \u003e currTS) {\n+      appsAllocation.put(applicationId,\n+          new AppAllocation(application.getPriority(), nodeID,\n+              application.getQueueName()));\n+    }\n+\n+    if (recordingAppActivitiesUntilSpecifiedTime.containsKey(applicationId)\n+        \u0026\u0026 recordingAppActivitiesUntilSpecifiedTime.get(applicationId)\n+        \u003c\u003d currTS) {\n+      turnOffActivityMonitoringForApp(applicationId);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  void startAppAllocationRecording(NodeId nodeID, long currTS,\n      SchedulerApplicationAttempt application) {\n    ApplicationId applicationId \u003d application.getApplicationId();\n\n    if (recordingAppActivitiesUntilSpecifiedTime.containsKey(applicationId)\n        \u0026\u0026 recordingAppActivitiesUntilSpecifiedTime.get(applicationId)\n        \u003e currTS) {\n      appsAllocation.put(applicationId,\n          new AppAllocation(application.getPriority(), nodeID,\n              application.getQueueName()));\n    }\n\n    if (recordingAppActivitiesUntilSpecifiedTime.containsKey(applicationId)\n        \u0026\u0026 recordingAppActivitiesUntilSpecifiedTime.get(applicationId)\n        \u003c\u003d currTS) {\n      turnOffActivityMonitoringForApp(applicationId);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/activities/ActivitiesManager.java"
    }
  }
}