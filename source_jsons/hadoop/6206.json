{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "XAttrPermissionFilter.java",
  "functionName": "checkPermissionForApi",
  "functionId": "checkPermissionForApi___pc-FSPermissionChecker__xAttr-XAttr__isRawPath-boolean",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/XAttrPermissionFilter.java",
  "functionStartLine": 64,
  "functionEndLine": 86,
  "numCommitsSeen": 12,
  "timeTaken": 4015,
  "changeHistory": [
    "f5a72424c0009c454aab6759c30f74b397a7e935",
    "eee0d4563c62647cfaaed6605ee713aaf69add78",
    "ea4e2e843ecadd8019ea35413f4a34b97a424923",
    "9ca2f34c8fb03227e7364ced5183562e9f805400",
    "ac23a55547716df29b3e25c98a113399e184d9d1"
  ],
  "changeHistoryShort": {
    "f5a72424c0009c454aab6759c30f74b397a7e935": "Ybodychange",
    "eee0d4563c62647cfaaed6605ee713aaf69add78": "Ybodychange",
    "ea4e2e843ecadd8019ea35413f4a34b97a424923": "Ybodychange",
    "9ca2f34c8fb03227e7364ced5183562e9f805400": "Ymultichange(Yparameterchange,Ybodychange)",
    "ac23a55547716df29b3e25c98a113399e184d9d1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f5a72424c0009c454aab6759c30f74b397a7e935": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12907. Allow read-only access to reserved raw for non-superusers. Contributed by Rushabh S Shah.\n",
      "commitDate": "14/12/17 12:58 PM",
      "commitName": "f5a72424c0009c454aab6759c30f74b397a7e935",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "25/08/15 1:16 AM",
      "commitNameOld": "eee0d4563c62647cfaaed6605ee713aaf69add78",
      "commitAuthorOld": "yliu",
      "daysBetweenCommits": 842.53,
      "commitsBetweenForRepo": 5706,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,23 @@\n   static void checkPermissionForApi(FSPermissionChecker pc, XAttr xAttr,\n       boolean isRawPath)\n       throws AccessControlException {\n     final boolean isSuperUser \u003d pc.isSuperUser();\n     if (xAttr.getNameSpace() \u003d\u003d XAttr.NameSpace.USER || \n         (xAttr.getNameSpace() \u003d\u003d XAttr.NameSpace.TRUSTED \u0026\u0026 isSuperUser)) {\n       return;\n     }\n-    if (xAttr.getNameSpace() \u003d\u003d XAttr.NameSpace.RAW \u0026\u0026\n-        isRawPath \u0026\u0026 isSuperUser) {\n+    if (xAttr.getNameSpace() \u003d\u003d XAttr.NameSpace.RAW \u0026\u0026 isRawPath) {\n       return;\n     }\n     if (XAttrHelper.getPrefixedName(xAttr).\n         equals(SECURITY_XATTR_UNREADABLE_BY_SUPERUSER)) {\n       if (xAttr.getValue() !\u003d null) {\n         throw new AccessControlException(\"Attempt to set a value for \u0027\" +\n             SECURITY_XATTR_UNREADABLE_BY_SUPERUSER +\n             \"\u0027. Values are not allowed for this xattr.\");\n       }\n       return;\n     }\n     throw new AccessControlException(\"User doesn\u0027t have permission for xattr: \"\n         + XAttrHelper.getPrefixedName(xAttr));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static void checkPermissionForApi(FSPermissionChecker pc, XAttr xAttr,\n      boolean isRawPath)\n      throws AccessControlException {\n    final boolean isSuperUser \u003d pc.isSuperUser();\n    if (xAttr.getNameSpace() \u003d\u003d XAttr.NameSpace.USER || \n        (xAttr.getNameSpace() \u003d\u003d XAttr.NameSpace.TRUSTED \u0026\u0026 isSuperUser)) {\n      return;\n    }\n    if (xAttr.getNameSpace() \u003d\u003d XAttr.NameSpace.RAW \u0026\u0026 isRawPath) {\n      return;\n    }\n    if (XAttrHelper.getPrefixedName(xAttr).\n        equals(SECURITY_XATTR_UNREADABLE_BY_SUPERUSER)) {\n      if (xAttr.getValue() !\u003d null) {\n        throw new AccessControlException(\"Attempt to set a value for \u0027\" +\n            SECURITY_XATTR_UNREADABLE_BY_SUPERUSER +\n            \"\u0027. Values are not allowed for this xattr.\");\n      }\n      return;\n    }\n    throw new AccessControlException(\"User doesn\u0027t have permission for xattr: \"\n        + XAttrHelper.getPrefixedName(xAttr));\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/XAttrPermissionFilter.java",
      "extendedDetails": {}
    },
    "eee0d4563c62647cfaaed6605ee713aaf69add78": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8900. Compact XAttrs to optimize memory footprint. (yliu)\n",
      "commitDate": "25/08/15 1:16 AM",
      "commitName": "eee0d4563c62647cfaaed6605ee713aaf69add78",
      "commitAuthor": "yliu",
      "commitDateOld": "11/12/14 12:36 PM",
      "commitNameOld": "b9f6d0c956f0278c8b9b83e05b523a442a730ebb",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 256.49,
      "commitsBetweenForRepo": 1978,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n   static void checkPermissionForApi(FSPermissionChecker pc, XAttr xAttr,\n       boolean isRawPath)\n       throws AccessControlException {\n     final boolean isSuperUser \u003d pc.isSuperUser();\n     if (xAttr.getNameSpace() \u003d\u003d XAttr.NameSpace.USER || \n         (xAttr.getNameSpace() \u003d\u003d XAttr.NameSpace.TRUSTED \u0026\u0026 isSuperUser)) {\n       return;\n     }\n     if (xAttr.getNameSpace() \u003d\u003d XAttr.NameSpace.RAW \u0026\u0026\n         isRawPath \u0026\u0026 isSuperUser) {\n       return;\n     }\n-    if (XAttrHelper.getPrefixName(xAttr).\n+    if (XAttrHelper.getPrefixedName(xAttr).\n         equals(SECURITY_XATTR_UNREADABLE_BY_SUPERUSER)) {\n       if (xAttr.getValue() !\u003d null) {\n         throw new AccessControlException(\"Attempt to set a value for \u0027\" +\n             SECURITY_XATTR_UNREADABLE_BY_SUPERUSER +\n             \"\u0027. Values are not allowed for this xattr.\");\n       }\n       return;\n     }\n     throw new AccessControlException(\"User doesn\u0027t have permission for xattr: \"\n-        + XAttrHelper.getPrefixName(xAttr));\n+        + XAttrHelper.getPrefixedName(xAttr));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static void checkPermissionForApi(FSPermissionChecker pc, XAttr xAttr,\n      boolean isRawPath)\n      throws AccessControlException {\n    final boolean isSuperUser \u003d pc.isSuperUser();\n    if (xAttr.getNameSpace() \u003d\u003d XAttr.NameSpace.USER || \n        (xAttr.getNameSpace() \u003d\u003d XAttr.NameSpace.TRUSTED \u0026\u0026 isSuperUser)) {\n      return;\n    }\n    if (xAttr.getNameSpace() \u003d\u003d XAttr.NameSpace.RAW \u0026\u0026\n        isRawPath \u0026\u0026 isSuperUser) {\n      return;\n    }\n    if (XAttrHelper.getPrefixedName(xAttr).\n        equals(SECURITY_XATTR_UNREADABLE_BY_SUPERUSER)) {\n      if (xAttr.getValue() !\u003d null) {\n        throw new AccessControlException(\"Attempt to set a value for \u0027\" +\n            SECURITY_XATTR_UNREADABLE_BY_SUPERUSER +\n            \"\u0027. Values are not allowed for this xattr.\");\n      }\n      return;\n    }\n    throw new AccessControlException(\"User doesn\u0027t have permission for xattr: \"\n        + XAttrHelper.getPrefixedName(xAttr));\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/XAttrPermissionFilter.java",
      "extendedDetails": {}
    },
    "ea4e2e843ecadd8019ea35413f4a34b97a424923": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6705. Create an XAttr that disallows the HDFS admin from accessing a file. (clamb via wang)\n",
      "commitDate": "17/09/14 11:23 AM",
      "commitName": "ea4e2e843ecadd8019ea35413f4a34b97a424923",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "29/07/14 6:35 PM",
      "commitNameOld": "9ca2f34c8fb03227e7364ced5183562e9f805400",
      "commitAuthorOld": "Charles Lamb",
      "daysBetweenCommits": 49.7,
      "commitsBetweenForRepo": 425,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,24 @@\n   static void checkPermissionForApi(FSPermissionChecker pc, XAttr xAttr,\n       boolean isRawPath)\n       throws AccessControlException {\n     final boolean isSuperUser \u003d pc.isSuperUser();\n     if (xAttr.getNameSpace() \u003d\u003d XAttr.NameSpace.USER || \n         (xAttr.getNameSpace() \u003d\u003d XAttr.NameSpace.TRUSTED \u0026\u0026 isSuperUser)) {\n       return;\n     }\n     if (xAttr.getNameSpace() \u003d\u003d XAttr.NameSpace.RAW \u0026\u0026\n         isRawPath \u0026\u0026 isSuperUser) {\n       return;\n     }\n+    if (XAttrHelper.getPrefixName(xAttr).\n+        equals(SECURITY_XATTR_UNREADABLE_BY_SUPERUSER)) {\n+      if (xAttr.getValue() !\u003d null) {\n+        throw new AccessControlException(\"Attempt to set a value for \u0027\" +\n+            SECURITY_XATTR_UNREADABLE_BY_SUPERUSER +\n+            \"\u0027. Values are not allowed for this xattr.\");\n+      }\n+      return;\n+    }\n     throw new AccessControlException(\"User doesn\u0027t have permission for xattr: \"\n         + XAttrHelper.getPrefixName(xAttr));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static void checkPermissionForApi(FSPermissionChecker pc, XAttr xAttr,\n      boolean isRawPath)\n      throws AccessControlException {\n    final boolean isSuperUser \u003d pc.isSuperUser();\n    if (xAttr.getNameSpace() \u003d\u003d XAttr.NameSpace.USER || \n        (xAttr.getNameSpace() \u003d\u003d XAttr.NameSpace.TRUSTED \u0026\u0026 isSuperUser)) {\n      return;\n    }\n    if (xAttr.getNameSpace() \u003d\u003d XAttr.NameSpace.RAW \u0026\u0026\n        isRawPath \u0026\u0026 isSuperUser) {\n      return;\n    }\n    if (XAttrHelper.getPrefixName(xAttr).\n        equals(SECURITY_XATTR_UNREADABLE_BY_SUPERUSER)) {\n      if (xAttr.getValue() !\u003d null) {\n        throw new AccessControlException(\"Attempt to set a value for \u0027\" +\n            SECURITY_XATTR_UNREADABLE_BY_SUPERUSER +\n            \"\u0027. Values are not allowed for this xattr.\");\n      }\n      return;\n    }\n    throw new AccessControlException(\"User doesn\u0027t have permission for xattr: \"\n        + XAttrHelper.getPrefixName(xAttr));\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/XAttrPermissionFilter.java",
      "extendedDetails": {}
    },
    "9ca2f34c8fb03227e7364ced5183562e9f805400": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-6730. Create a .RAW extended attribute namespace. (clamb)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1614535 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/07/14 6:35 PM",
      "commitName": "9ca2f34c8fb03227e7364ced5183562e9f805400",
      "commitAuthor": "Charles Lamb",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-6730. Create a .RAW extended attribute namespace. (clamb)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1614535 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "29/07/14 6:35 PM",
          "commitName": "9ca2f34c8fb03227e7364ced5183562e9f805400",
          "commitAuthor": "Charles Lamb",
          "commitDateOld": "23/07/14 12:05 PM",
          "commitNameOld": "5343b43fd989ec596afed807ddce29ad96c23e2d",
          "commitAuthorOld": "Uma Maheswara Rao G",
          "daysBetweenCommits": 6.27,
          "commitsBetweenForRepo": 34,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,15 @@\n-  static void checkPermissionForApi(FSPermissionChecker pc, XAttr xAttr) \n+  static void checkPermissionForApi(FSPermissionChecker pc, XAttr xAttr,\n+      boolean isRawPath)\n       throws AccessControlException {\n+    final boolean isSuperUser \u003d pc.isSuperUser();\n     if (xAttr.getNameSpace() \u003d\u003d XAttr.NameSpace.USER || \n-        (xAttr.getNameSpace() \u003d\u003d XAttr.NameSpace.TRUSTED \u0026\u0026 \n-        pc.isSuperUser())) {\n+        (xAttr.getNameSpace() \u003d\u003d XAttr.NameSpace.TRUSTED \u0026\u0026 isSuperUser)) {\n+      return;\n+    }\n+    if (xAttr.getNameSpace() \u003d\u003d XAttr.NameSpace.RAW \u0026\u0026\n+        isRawPath \u0026\u0026 isSuperUser) {\n       return;\n     }\n     throw new AccessControlException(\"User doesn\u0027t have permission for xattr: \"\n         + XAttrHelper.getPrefixName(xAttr));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static void checkPermissionForApi(FSPermissionChecker pc, XAttr xAttr,\n      boolean isRawPath)\n      throws AccessControlException {\n    final boolean isSuperUser \u003d pc.isSuperUser();\n    if (xAttr.getNameSpace() \u003d\u003d XAttr.NameSpace.USER || \n        (xAttr.getNameSpace() \u003d\u003d XAttr.NameSpace.TRUSTED \u0026\u0026 isSuperUser)) {\n      return;\n    }\n    if (xAttr.getNameSpace() \u003d\u003d XAttr.NameSpace.RAW \u0026\u0026\n        isRawPath \u0026\u0026 isSuperUser) {\n      return;\n    }\n    throw new AccessControlException(\"User doesn\u0027t have permission for xattr: \"\n        + XAttrHelper.getPrefixName(xAttr));\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/XAttrPermissionFilter.java",
          "extendedDetails": {
            "oldValue": "[pc-FSPermissionChecker, xAttr-XAttr]",
            "newValue": "[pc-FSPermissionChecker, xAttr-XAttr, isRawPath-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-6730. Create a .RAW extended attribute namespace. (clamb)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1614535 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "29/07/14 6:35 PM",
          "commitName": "9ca2f34c8fb03227e7364ced5183562e9f805400",
          "commitAuthor": "Charles Lamb",
          "commitDateOld": "23/07/14 12:05 PM",
          "commitNameOld": "5343b43fd989ec596afed807ddce29ad96c23e2d",
          "commitAuthorOld": "Uma Maheswara Rao G",
          "daysBetweenCommits": 6.27,
          "commitsBetweenForRepo": 34,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,15 @@\n-  static void checkPermissionForApi(FSPermissionChecker pc, XAttr xAttr) \n+  static void checkPermissionForApi(FSPermissionChecker pc, XAttr xAttr,\n+      boolean isRawPath)\n       throws AccessControlException {\n+    final boolean isSuperUser \u003d pc.isSuperUser();\n     if (xAttr.getNameSpace() \u003d\u003d XAttr.NameSpace.USER || \n-        (xAttr.getNameSpace() \u003d\u003d XAttr.NameSpace.TRUSTED \u0026\u0026 \n-        pc.isSuperUser())) {\n+        (xAttr.getNameSpace() \u003d\u003d XAttr.NameSpace.TRUSTED \u0026\u0026 isSuperUser)) {\n+      return;\n+    }\n+    if (xAttr.getNameSpace() \u003d\u003d XAttr.NameSpace.RAW \u0026\u0026\n+        isRawPath \u0026\u0026 isSuperUser) {\n       return;\n     }\n     throw new AccessControlException(\"User doesn\u0027t have permission for xattr: \"\n         + XAttrHelper.getPrefixName(xAttr));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static void checkPermissionForApi(FSPermissionChecker pc, XAttr xAttr,\n      boolean isRawPath)\n      throws AccessControlException {\n    final boolean isSuperUser \u003d pc.isSuperUser();\n    if (xAttr.getNameSpace() \u003d\u003d XAttr.NameSpace.USER || \n        (xAttr.getNameSpace() \u003d\u003d XAttr.NameSpace.TRUSTED \u0026\u0026 isSuperUser)) {\n      return;\n    }\n    if (xAttr.getNameSpace() \u003d\u003d XAttr.NameSpace.RAW \u0026\u0026\n        isRawPath \u0026\u0026 isSuperUser) {\n      return;\n    }\n    throw new AccessControlException(\"User doesn\u0027t have permission for xattr: \"\n        + XAttrHelper.getPrefixName(xAttr));\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/XAttrPermissionFilter.java",
          "extendedDetails": {}
        }
      ]
    },
    "ac23a55547716df29b3e25c98a113399e184d9d1": {
      "type": "Yintroduced",
      "commitMessage": "Merge HDFS-2006 HDFS XAttrs branch to Trunk\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1596575 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/05/14 6:57 AM",
      "commitName": "ac23a55547716df29b3e25c98a113399e184d9d1",
      "commitAuthor": "Uma Maheswara Rao G",
      "diff": "@@ -0,0 +1,10 @@\n+  static void checkPermissionForApi(FSPermissionChecker pc, XAttr xAttr) \n+      throws AccessControlException {\n+    if (xAttr.getNameSpace() \u003d\u003d XAttr.NameSpace.USER || \n+        (xAttr.getNameSpace() \u003d\u003d XAttr.NameSpace.TRUSTED \u0026\u0026 \n+        pc.isSuperUser())) {\n+      return;\n+    }\n+    throw new AccessControlException(\"User doesn\u0027t have permission for xattr: \"\n+        + XAttrHelper.getPrefixName(xAttr));\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  static void checkPermissionForApi(FSPermissionChecker pc, XAttr xAttr) \n      throws AccessControlException {\n    if (xAttr.getNameSpace() \u003d\u003d XAttr.NameSpace.USER || \n        (xAttr.getNameSpace() \u003d\u003d XAttr.NameSpace.TRUSTED \u0026\u0026 \n        pc.isSuperUser())) {\n      return;\n    }\n    throw new AccessControlException(\"User doesn\u0027t have permission for xattr: \"\n        + XAttrHelper.getPrefixName(xAttr));\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/XAttrPermissionFilter.java"
    }
  }
}