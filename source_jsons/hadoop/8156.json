{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FileJournalManager.java",
  "functionName": "discardEditLogSegments",
  "functionId": "discardEditLogSegments___startTxId-long",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FileJournalManager.java",
  "functionStartLine": 273,
  "functionEndLine": 293,
  "numCommitsSeen": 52,
  "timeTaken": 1485,
  "changeHistory": [
    "470d4253b246670f220eec81dd617ba0ee979623"
  ],
  "changeHistoryShort": {
    "470d4253b246670f220eec81dd617ba0ee979623": "Yintroduced"
  },
  "changeHistoryDetails": {
    "470d4253b246670f220eec81dd617ba0ee979623": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-5920. Support rollback of rolling upgrade in NameNode and JournalNodes. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-5535@1568563 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/02/14 4:28 PM",
      "commitName": "470d4253b246670f220eec81dd617ba0ee979623",
      "commitAuthor": "Jing Zhao",
      "diff": "@@ -0,0 +1,21 @@\n+  private void discardEditLogSegments(long startTxId) throws IOException {\n+    File currentDir \u003d sd.getCurrentDir();\n+    List\u003cEditLogFile\u003e allLogFiles \u003d matchEditLogs(currentDir);\n+    List\u003cEditLogFile\u003e toTrash \u003d Lists.newArrayList();\n+    LOG.info(\"Discard the EditLog files, the given start txid is \" + startTxId);\n+    // go through the editlog files to make sure the startTxId is right at the\n+    // segment boundary\n+    for (EditLogFile elf : allLogFiles) {\n+      if (elf.getFirstTxId() \u003e\u003d startTxId) {\n+        toTrash.add(elf);\n+      } else {\n+        Preconditions.checkState(elf.getLastTxId() \u003c startTxId);\n+      }\n+    }\n+\n+    for (EditLogFile elf : toTrash) {\n+      // rename these editlog file as .trash\n+      elf.moveAsideTrashFile(startTxId);\n+      LOG.info(\"Trash the EditLog file \" + elf);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void discardEditLogSegments(long startTxId) throws IOException {\n    File currentDir \u003d sd.getCurrentDir();\n    List\u003cEditLogFile\u003e allLogFiles \u003d matchEditLogs(currentDir);\n    List\u003cEditLogFile\u003e toTrash \u003d Lists.newArrayList();\n    LOG.info(\"Discard the EditLog files, the given start txid is \" + startTxId);\n    // go through the editlog files to make sure the startTxId is right at the\n    // segment boundary\n    for (EditLogFile elf : allLogFiles) {\n      if (elf.getFirstTxId() \u003e\u003d startTxId) {\n        toTrash.add(elf);\n      } else {\n        Preconditions.checkState(elf.getLastTxId() \u003c startTxId);\n      }\n    }\n\n    for (EditLogFile elf : toTrash) {\n      // rename these editlog file as .trash\n      elf.moveAsideTrashFile(startTxId);\n      LOG.info(\"Trash the EditLog file \" + elf);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FileJournalManager.java"
    }
  }
}