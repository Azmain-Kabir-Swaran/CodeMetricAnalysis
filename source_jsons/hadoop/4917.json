{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DiffListBySkipList.java",
  "functionName": "findPreviousNodes",
  "functionId": "findPreviousNodes___node-SkipListNode__nodeLevel-int",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/DiffListBySkipList.java",
  "functionStartLine": 328,
  "functionEndLine": 343,
  "numCommitsSeen": 6,
  "timeTaken": 1777,
  "changeHistory": [
    "ba82e5c488ca0081534c1e40810b3f9e7da9eaad",
    "60080fbfcf3919fc155af45975fa24bdeb6c8ffe"
  ],
  "changeHistoryShort": {
    "ba82e5c488ca0081534c1e40810b3f9e7da9eaad": "Yfilerename",
    "60080fbfcf3919fc155af45975fa24bdeb6c8ffe": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ba82e5c488ca0081534c1e40810b3f9e7da9eaad": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-13173.  Replace ArrayList with DirectoryDiffList(SnapshotSkipList) to store DirectoryDiffs.  Contributed by Shashikant Banerjee\n",
      "commitDate": "02/03/18 5:47 PM",
      "commitName": "ba82e5c488ca0081534c1e40810b3f9e7da9eaad",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "commitDateOld": "02/03/18 5:08 PM",
      "commitNameOld": "90d2bdcb752f5f32ef65765af6fd5596dd5d373b",
      "commitAuthorOld": "Andras Bokor",
      "daysBetweenCommits": 0.03,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private SkipListNode[] findPreviousNodes(SkipListNode node, int nodeLevel) {\n    final SkipListNode[] nodePath \u003d new SkipListNode[nodeLevel + 1];\n    SkipListNode cur \u003d head;\n    final int headLevel \u003d head.level();\n    for (int level \u003d headLevel \u003c nodeLevel ? headLevel : nodeLevel;\n         level \u003e\u003d 0; level--) {\n      while (cur.getSkipNode(level) !\u003d node) {\n        cur \u003d cur.getSkipNode(level);\n      }\n      nodePath[level] \u003d cur;\n    }\n    for (int level \u003d headLevel + 1; level \u003c\u003d nodeLevel; level++) {\n      nodePath[level] \u003d head;\n    }\n    return nodePath;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/DiffListBySkipList.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/DirectoryDiffList.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/DiffListBySkipList.java"
      }
    },
    "60080fbfcf3919fc155af45975fa24bdeb6c8ffe": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-13171. Handle Deletion of nodes in SnasphotSkipList.  Contributed by Shashikant Banerjee\n",
      "commitDate": "02/03/18 10:51 AM",
      "commitName": "60080fbfcf3919fc155af45975fa24bdeb6c8ffe",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "diff": "@@ -0,0 +1,16 @@\n+  private SkipListNode[] findPreviousNodes(SkipListNode node, int nodeLevel) {\n+    final SkipListNode[] nodePath \u003d new SkipListNode[nodeLevel + 1];\n+    SkipListNode cur \u003d head;\n+    final int headLevel \u003d head.level();\n+    for (int level \u003d headLevel \u003c nodeLevel ? headLevel : nodeLevel;\n+         level \u003e\u003d 0; level--) {\n+      while (cur.getSkipNode(level) !\u003d node) {\n+        cur \u003d cur.getSkipNode(level);\n+      }\n+      nodePath[level] \u003d cur;\n+    }\n+    for (int level \u003d headLevel + 1; level \u003c\u003d nodeLevel; level++) {\n+      nodePath[level] \u003d head;\n+    }\n+    return nodePath;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private SkipListNode[] findPreviousNodes(SkipListNode node, int nodeLevel) {\n    final SkipListNode[] nodePath \u003d new SkipListNode[nodeLevel + 1];\n    SkipListNode cur \u003d head;\n    final int headLevel \u003d head.level();\n    for (int level \u003d headLevel \u003c nodeLevel ? headLevel : nodeLevel;\n         level \u003e\u003d 0; level--) {\n      while (cur.getSkipNode(level) !\u003d node) {\n        cur \u003d cur.getSkipNode(level);\n      }\n      nodePath[level] \u003d cur;\n    }\n    for (int level \u003d headLevel + 1; level \u003c\u003d nodeLevel; level++) {\n      nodePath[level] \u003d head;\n    }\n    return nodePath;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/DirectoryDiffList.java"
    }
  }
}