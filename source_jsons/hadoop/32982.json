{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LogAggregationService.java",
  "functionName": "run",
  "functionId": "run",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/LogAggregationService.java",
  "functionStartLine": 293,
  "functionEndLine": 300,
  "numCommitsSeen": 50,
  "timeTaken": 7897,
  "changeHistory": [
    "df5e2b83526634ac7c1c1131bf1aad73ac353d01",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "25cceb65ceb3aafbb078d4a112169ab5dca7f200",
    "c27601fefebd0af887a12d684bfc6f90d9fc0321",
    "670fa24b48acb407c22fbfdde87ae3123dcbf449",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "df5e2b83526634ac7c1c1131bf1aad73ac353d01": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "25cceb65ceb3aafbb078d4a112169ab5dca7f200": "Ymultichange(Yreturntypechange,Yexceptionschange,Ybodychange)",
    "c27601fefebd0af887a12d684bfc6f90d9fc0321": "Ybodychange",
    "670fa24b48acb407c22fbfdde87ae3123dcbf449": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "df5e2b83526634ac7c1c1131bf1aad73ac353d01": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-4323. NM leaks filesystems (Jason Lowe via jeagles)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1375164 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "20/08/12 11:32 AM",
      "commitName": "df5e2b83526634ac7c1c1131bf1aad73ac353d01",
      "commitAuthor": "Jonathan Turner Eagles",
      "commitDateOld": "17/08/12 1:29 PM",
      "commitNameOld": "7fc6ad661d4723cc2ea1df1ff0c4611d5f534f9e",
      "commitAuthorOld": "Thomas Graves",
      "daysBetweenCommits": 2.92,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,8 @@\n       public void run() {\n         try {\n           appLogAggregator.run();\n         } finally {\n           appLogAggregators.remove(appId);\n+          closeFileSystems(userUgi);\n         }\n       }\n\\ No newline at end of file\n",
      "actualSource": "      public void run() {\n        try {\n          appLogAggregator.run();\n        } finally {\n          appLogAggregators.remove(appId);\n          closeFileSystems(userUgi);\n        }\n      }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/LogAggregationService.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "      public void run() {\n        try {\n          appLogAggregator.run();\n        } finally {\n          appLogAggregators.remove(appId);\n        }\n      }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/LogAggregationService.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/LogAggregationService.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/LogAggregationService.java"
      }
    },
    "25cceb65ceb3aafbb078d4a112169ab5dca7f200": {
      "type": "Ymultichange(Yreturntypechange,Yexceptionschange,Ybodychange)",
      "commitMessage": "MAPREDUCE-3977. LogAggregationService leaks log aggregator objects (Jason Lowe via bobby)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1297796 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/03/12 3:44 PM",
      "commitName": "25cceb65ceb3aafbb078d4a112169ab5dca7f200",
      "commitAuthor": "Robert Joseph Evans",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "MAPREDUCE-3977. LogAggregationService leaks log aggregator objects (Jason Lowe via bobby)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1297796 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "06/03/12 3:44 PM",
          "commitName": "25cceb65ceb3aafbb078d4a112169ab5dca7f200",
          "commitAuthor": "Robert Joseph Evans",
          "commitDateOld": "29/11/11 3:17 PM",
          "commitNameOld": "ea17da82f7fc4b7fcc05bba82d141e27289fd7cb",
          "commitAuthorOld": "Mahadev Konar",
          "daysBetweenCommits": 98.02,
          "commitsBetweenForRepo": 725,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,56 +1,7 @@\n-        public Object run() throws Exception {\n-          // TODO: Reuse FS for user?\n-          FileSystem remoteFS \u003d null;\n-          Path userDir \u003d null;\n-          Path suffixDir \u003d null;\n-          Path appDir \u003d null;\n-          try {\n-            remoteFS \u003d FileSystem.get(getConfig());\n-          } catch (IOException e) {\n-            LOG.error(\"Failed to get remote FileSystem while processing app \"\n-                + appId, e);\n-            throw e;\n-          }\n-          try {\n-            userDir \u003d\n-                LogAggregationUtils.getRemoteLogUserDir(\n-                    LogAggregationService.this.remoteRootLogDir, user);\n-            userDir \u003d\n-                userDir.makeQualified(remoteFS.getUri(),\n-                    remoteFS.getWorkingDirectory());\n-            createDir(remoteFS, userDir, APP_DIR_PERMISSIONS);\n-          } catch (IOException e) {\n-            LOG.error(\"Failed to create user dir [\" + userDir\n-                + \"] while processing app \" + appId);\n-            throw e;\n-          }\n-          try {\n-            suffixDir \u003d\n-                LogAggregationUtils.getRemoteLogSuffixedDir(\n-                    LogAggregationService.this.remoteRootLogDir, user,\n-                    LogAggregationService.this.remoteRootLogDirSuffix);\n-            suffixDir \u003d\n-                suffixDir.makeQualified(remoteFS.getUri(),\n-                    remoteFS.getWorkingDirectory());\n-            createDir(remoteFS, suffixDir, APP_DIR_PERMISSIONS);\n-          } catch (IOException e) {\n-            LOG.error(\"Failed to create suffixed user dir [\" + suffixDir\n-                + \"] while processing app \" + appId);\n-            throw e;\n-          }\n-          try {\n-            appDir \u003d\n-                LogAggregationUtils.getRemoteAppLogDir(\n-                    LogAggregationService.this.remoteRootLogDir, appId, user,\n-                    LogAggregationService.this.remoteRootLogDirSuffix);\n-            appDir \u003d\n-                appDir.makeQualified(remoteFS.getUri(),\n-                    remoteFS.getWorkingDirectory());\n-            createDir(remoteFS, appDir, APP_DIR_PERMISSIONS);\n-          } catch (IOException e) {\n-            LOG.error(\"Failed to  create application log dir [\" + appDir\n-                + \"] while processing app \" + appId);\n-            throw e;\n-          }\n-          return null;\n-        }\n\\ No newline at end of file\n+      public void run() {\n+        try {\n+          appLogAggregator.run();\n+        } finally {\n+          appLogAggregators.remove(appId);\n+        }\n+      }\n\\ No newline at end of file\n",
          "actualSource": "      public void run() {\n        try {\n          appLogAggregator.run();\n        } finally {\n          appLogAggregators.remove(appId);\n        }\n      }",
          "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/LogAggregationService.java",
          "extendedDetails": {
            "oldValue": "Object",
            "newValue": "void"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "MAPREDUCE-3977. LogAggregationService leaks log aggregator objects (Jason Lowe via bobby)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1297796 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "06/03/12 3:44 PM",
          "commitName": "25cceb65ceb3aafbb078d4a112169ab5dca7f200",
          "commitAuthor": "Robert Joseph Evans",
          "commitDateOld": "29/11/11 3:17 PM",
          "commitNameOld": "ea17da82f7fc4b7fcc05bba82d141e27289fd7cb",
          "commitAuthorOld": "Mahadev Konar",
          "daysBetweenCommits": 98.02,
          "commitsBetweenForRepo": 725,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,56 +1,7 @@\n-        public Object run() throws Exception {\n-          // TODO: Reuse FS for user?\n-          FileSystem remoteFS \u003d null;\n-          Path userDir \u003d null;\n-          Path suffixDir \u003d null;\n-          Path appDir \u003d null;\n-          try {\n-            remoteFS \u003d FileSystem.get(getConfig());\n-          } catch (IOException e) {\n-            LOG.error(\"Failed to get remote FileSystem while processing app \"\n-                + appId, e);\n-            throw e;\n-          }\n-          try {\n-            userDir \u003d\n-                LogAggregationUtils.getRemoteLogUserDir(\n-                    LogAggregationService.this.remoteRootLogDir, user);\n-            userDir \u003d\n-                userDir.makeQualified(remoteFS.getUri(),\n-                    remoteFS.getWorkingDirectory());\n-            createDir(remoteFS, userDir, APP_DIR_PERMISSIONS);\n-          } catch (IOException e) {\n-            LOG.error(\"Failed to create user dir [\" + userDir\n-                + \"] while processing app \" + appId);\n-            throw e;\n-          }\n-          try {\n-            suffixDir \u003d\n-                LogAggregationUtils.getRemoteLogSuffixedDir(\n-                    LogAggregationService.this.remoteRootLogDir, user,\n-                    LogAggregationService.this.remoteRootLogDirSuffix);\n-            suffixDir \u003d\n-                suffixDir.makeQualified(remoteFS.getUri(),\n-                    remoteFS.getWorkingDirectory());\n-            createDir(remoteFS, suffixDir, APP_DIR_PERMISSIONS);\n-          } catch (IOException e) {\n-            LOG.error(\"Failed to create suffixed user dir [\" + suffixDir\n-                + \"] while processing app \" + appId);\n-            throw e;\n-          }\n-          try {\n-            appDir \u003d\n-                LogAggregationUtils.getRemoteAppLogDir(\n-                    LogAggregationService.this.remoteRootLogDir, appId, user,\n-                    LogAggregationService.this.remoteRootLogDirSuffix);\n-            appDir \u003d\n-                appDir.makeQualified(remoteFS.getUri(),\n-                    remoteFS.getWorkingDirectory());\n-            createDir(remoteFS, appDir, APP_DIR_PERMISSIONS);\n-          } catch (IOException e) {\n-            LOG.error(\"Failed to  create application log dir [\" + appDir\n-                + \"] while processing app \" + appId);\n-            throw e;\n-          }\n-          return null;\n-        }\n\\ No newline at end of file\n+      public void run() {\n+        try {\n+          appLogAggregator.run();\n+        } finally {\n+          appLogAggregators.remove(appId);\n+        }\n+      }\n\\ No newline at end of file\n",
          "actualSource": "      public void run() {\n        try {\n          appLogAggregator.run();\n        } finally {\n          appLogAggregators.remove(appId);\n        }\n      }",
          "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/LogAggregationService.java",
          "extendedDetails": {
            "oldValue": "[Exception]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-3977. LogAggregationService leaks log aggregator objects (Jason Lowe via bobby)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1297796 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "06/03/12 3:44 PM",
          "commitName": "25cceb65ceb3aafbb078d4a112169ab5dca7f200",
          "commitAuthor": "Robert Joseph Evans",
          "commitDateOld": "29/11/11 3:17 PM",
          "commitNameOld": "ea17da82f7fc4b7fcc05bba82d141e27289fd7cb",
          "commitAuthorOld": "Mahadev Konar",
          "daysBetweenCommits": 98.02,
          "commitsBetweenForRepo": 725,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,56 +1,7 @@\n-        public Object run() throws Exception {\n-          // TODO: Reuse FS for user?\n-          FileSystem remoteFS \u003d null;\n-          Path userDir \u003d null;\n-          Path suffixDir \u003d null;\n-          Path appDir \u003d null;\n-          try {\n-            remoteFS \u003d FileSystem.get(getConfig());\n-          } catch (IOException e) {\n-            LOG.error(\"Failed to get remote FileSystem while processing app \"\n-                + appId, e);\n-            throw e;\n-          }\n-          try {\n-            userDir \u003d\n-                LogAggregationUtils.getRemoteLogUserDir(\n-                    LogAggregationService.this.remoteRootLogDir, user);\n-            userDir \u003d\n-                userDir.makeQualified(remoteFS.getUri(),\n-                    remoteFS.getWorkingDirectory());\n-            createDir(remoteFS, userDir, APP_DIR_PERMISSIONS);\n-          } catch (IOException e) {\n-            LOG.error(\"Failed to create user dir [\" + userDir\n-                + \"] while processing app \" + appId);\n-            throw e;\n-          }\n-          try {\n-            suffixDir \u003d\n-                LogAggregationUtils.getRemoteLogSuffixedDir(\n-                    LogAggregationService.this.remoteRootLogDir, user,\n-                    LogAggregationService.this.remoteRootLogDirSuffix);\n-            suffixDir \u003d\n-                suffixDir.makeQualified(remoteFS.getUri(),\n-                    remoteFS.getWorkingDirectory());\n-            createDir(remoteFS, suffixDir, APP_DIR_PERMISSIONS);\n-          } catch (IOException e) {\n-            LOG.error(\"Failed to create suffixed user dir [\" + suffixDir\n-                + \"] while processing app \" + appId);\n-            throw e;\n-          }\n-          try {\n-            appDir \u003d\n-                LogAggregationUtils.getRemoteAppLogDir(\n-                    LogAggregationService.this.remoteRootLogDir, appId, user,\n-                    LogAggregationService.this.remoteRootLogDirSuffix);\n-            appDir \u003d\n-                appDir.makeQualified(remoteFS.getUri(),\n-                    remoteFS.getWorkingDirectory());\n-            createDir(remoteFS, appDir, APP_DIR_PERMISSIONS);\n-          } catch (IOException e) {\n-            LOG.error(\"Failed to  create application log dir [\" + appDir\n-                + \"] while processing app \" + appId);\n-            throw e;\n-          }\n-          return null;\n-        }\n\\ No newline at end of file\n+      public void run() {\n+        try {\n+          appLogAggregator.run();\n+        } finally {\n+          appLogAggregators.remove(appId);\n+        }\n+      }\n\\ No newline at end of file\n",
          "actualSource": "      public void run() {\n        try {\n          appLogAggregator.run();\n        } finally {\n          appLogAggregators.remove(appId);\n        }\n      }",
          "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/LogAggregationService.java",
          "extendedDetails": {}
        }
      ]
    },
    "c27601fefebd0af887a12d684bfc6f90d9fc0321": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3297. Moved log related components into yarn-common so that HistoryServer and clients can use them without depending on the yarn-server-nodemanager module. Contributed by Siddharth Seth.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1196986 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/11/11 1:02 AM",
      "commitName": "c27601fefebd0af887a12d684bfc6f90d9fc0321",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "31/10/11 2:55 AM",
      "commitNameOld": "a75c4cf4e4400a2dcb3edc88df7f35a763f93c4e",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 2.92,
      "commitsBetweenForRepo": 47,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,56 +1,56 @@\n         public Object run() throws Exception {\n           // TODO: Reuse FS for user?\n           FileSystem remoteFS \u003d null;\n           Path userDir \u003d null;\n           Path suffixDir \u003d null;\n           Path appDir \u003d null;\n           try {\n             remoteFS \u003d FileSystem.get(getConfig());\n           } catch (IOException e) {\n             LOG.error(\"Failed to get remote FileSystem while processing app \"\n                 + appId, e);\n             throw e;\n           }\n           try {\n             userDir \u003d\n-                getRemoteLogUserDir(\n+                LogAggregationUtils.getRemoteLogUserDir(\n                     LogAggregationService.this.remoteRootLogDir, user);\n             userDir \u003d\n                 userDir.makeQualified(remoteFS.getUri(),\n                     remoteFS.getWorkingDirectory());\n             createDir(remoteFS, userDir, APP_DIR_PERMISSIONS);\n           } catch (IOException e) {\n             LOG.error(\"Failed to create user dir [\" + userDir\n                 + \"] while processing app \" + appId);\n             throw e;\n           }\n           try {\n             suffixDir \u003d\n-                getRemoteLogSuffixedDir(\n+                LogAggregationUtils.getRemoteLogSuffixedDir(\n                     LogAggregationService.this.remoteRootLogDir, user,\n                     LogAggregationService.this.remoteRootLogDirSuffix);\n             suffixDir \u003d\n                 suffixDir.makeQualified(remoteFS.getUri(),\n                     remoteFS.getWorkingDirectory());\n             createDir(remoteFS, suffixDir, APP_DIR_PERMISSIONS);\n           } catch (IOException e) {\n             LOG.error(\"Failed to create suffixed user dir [\" + suffixDir\n                 + \"] while processing app \" + appId);\n             throw e;\n           }\n           try {\n             appDir \u003d\n-                getRemoteAppLogDir(LogAggregationService.this.remoteRootLogDir,\n-                    appId, user,\n+                LogAggregationUtils.getRemoteAppLogDir(\n+                    LogAggregationService.this.remoteRootLogDir, appId, user,\n                     LogAggregationService.this.remoteRootLogDirSuffix);\n             appDir \u003d\n                 appDir.makeQualified(remoteFS.getUri(),\n                     remoteFS.getWorkingDirectory());\n             createDir(remoteFS, appDir, APP_DIR_PERMISSIONS);\n           } catch (IOException e) {\n             LOG.error(\"Failed to  create application log dir [\" + appDir\n                 + \"] while processing app \" + appId);\n             throw e;\n           }\n           return null;\n         }\n\\ No newline at end of file\n",
      "actualSource": "        public Object run() throws Exception {\n          // TODO: Reuse FS for user?\n          FileSystem remoteFS \u003d null;\n          Path userDir \u003d null;\n          Path suffixDir \u003d null;\n          Path appDir \u003d null;\n          try {\n            remoteFS \u003d FileSystem.get(getConfig());\n          } catch (IOException e) {\n            LOG.error(\"Failed to get remote FileSystem while processing app \"\n                + appId, e);\n            throw e;\n          }\n          try {\n            userDir \u003d\n                LogAggregationUtils.getRemoteLogUserDir(\n                    LogAggregationService.this.remoteRootLogDir, user);\n            userDir \u003d\n                userDir.makeQualified(remoteFS.getUri(),\n                    remoteFS.getWorkingDirectory());\n            createDir(remoteFS, userDir, APP_DIR_PERMISSIONS);\n          } catch (IOException e) {\n            LOG.error(\"Failed to create user dir [\" + userDir\n                + \"] while processing app \" + appId);\n            throw e;\n          }\n          try {\n            suffixDir \u003d\n                LogAggregationUtils.getRemoteLogSuffixedDir(\n                    LogAggregationService.this.remoteRootLogDir, user,\n                    LogAggregationService.this.remoteRootLogDirSuffix);\n            suffixDir \u003d\n                suffixDir.makeQualified(remoteFS.getUri(),\n                    remoteFS.getWorkingDirectory());\n            createDir(remoteFS, suffixDir, APP_DIR_PERMISSIONS);\n          } catch (IOException e) {\n            LOG.error(\"Failed to create suffixed user dir [\" + suffixDir\n                + \"] while processing app \" + appId);\n            throw e;\n          }\n          try {\n            appDir \u003d\n                LogAggregationUtils.getRemoteAppLogDir(\n                    LogAggregationService.this.remoteRootLogDir, appId, user,\n                    LogAggregationService.this.remoteRootLogDirSuffix);\n            appDir \u003d\n                appDir.makeQualified(remoteFS.getUri(),\n                    remoteFS.getWorkingDirectory());\n            createDir(remoteFS, appDir, APP_DIR_PERMISSIONS);\n          } catch (IOException e) {\n            LOG.error(\"Failed to  create application log dir [\" + appDir\n                + \"] while processing app \" + appId);\n            throw e;\n          }\n          return null;\n        }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/LogAggregationService.java",
      "extendedDetails": {}
    },
    "670fa24b48acb407c22fbfdde87ae3123dcbf449": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2989. Modified JobHistory to link to task and AM logs from the JobHistoryServer. Contributed by Siddharth Seth.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1190174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/10/11 11:45 PM",
      "commitName": "670fa24b48acb407c22fbfdde87ae3123dcbf449",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "16/10/11 12:27 PM",
      "commitNameOld": "68328ae92632afc9cdd6e75b7a8d832723ddbe3b",
      "commitAuthorOld": "Mahadev Konar",
      "daysBetweenCommits": 11.47,
      "commitsBetweenForRepo": 127,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,56 @@\n         public Object run() throws Exception {\n           // TODO: Reuse FS for user?\n-          FileSystem remoteFS \u003d FileSystem.get(getConfig());\n-          remoteFS.mkdirs(getRemoteAppLogDir(\n-              LogAggregationService.this.remoteRootLogDir, appId)\n-              .makeQualified(remoteFS.getUri(),\n-                  remoteFS.getWorkingDirectory()));\n+          FileSystem remoteFS \u003d null;\n+          Path userDir \u003d null;\n+          Path suffixDir \u003d null;\n+          Path appDir \u003d null;\n+          try {\n+            remoteFS \u003d FileSystem.get(getConfig());\n+          } catch (IOException e) {\n+            LOG.error(\"Failed to get remote FileSystem while processing app \"\n+                + appId, e);\n+            throw e;\n+          }\n+          try {\n+            userDir \u003d\n+                getRemoteLogUserDir(\n+                    LogAggregationService.this.remoteRootLogDir, user);\n+            userDir \u003d\n+                userDir.makeQualified(remoteFS.getUri(),\n+                    remoteFS.getWorkingDirectory());\n+            createDir(remoteFS, userDir, APP_DIR_PERMISSIONS);\n+          } catch (IOException e) {\n+            LOG.error(\"Failed to create user dir [\" + userDir\n+                + \"] while processing app \" + appId);\n+            throw e;\n+          }\n+          try {\n+            suffixDir \u003d\n+                getRemoteLogSuffixedDir(\n+                    LogAggregationService.this.remoteRootLogDir, user,\n+                    LogAggregationService.this.remoteRootLogDirSuffix);\n+            suffixDir \u003d\n+                suffixDir.makeQualified(remoteFS.getUri(),\n+                    remoteFS.getWorkingDirectory());\n+            createDir(remoteFS, suffixDir, APP_DIR_PERMISSIONS);\n+          } catch (IOException e) {\n+            LOG.error(\"Failed to create suffixed user dir [\" + suffixDir\n+                + \"] while processing app \" + appId);\n+            throw e;\n+          }\n+          try {\n+            appDir \u003d\n+                getRemoteAppLogDir(LogAggregationService.this.remoteRootLogDir,\n+                    appId, user,\n+                    LogAggregationService.this.remoteRootLogDirSuffix);\n+            appDir \u003d\n+                appDir.makeQualified(remoteFS.getUri(),\n+                    remoteFS.getWorkingDirectory());\n+            createDir(remoteFS, appDir, APP_DIR_PERMISSIONS);\n+          } catch (IOException e) {\n+            LOG.error(\"Failed to  create application log dir [\" + appDir\n+                + \"] while processing app \" + appId);\n+            throw e;\n+          }\n           return null;\n         }\n\\ No newline at end of file\n",
      "actualSource": "        public Object run() throws Exception {\n          // TODO: Reuse FS for user?\n          FileSystem remoteFS \u003d null;\n          Path userDir \u003d null;\n          Path suffixDir \u003d null;\n          Path appDir \u003d null;\n          try {\n            remoteFS \u003d FileSystem.get(getConfig());\n          } catch (IOException e) {\n            LOG.error(\"Failed to get remote FileSystem while processing app \"\n                + appId, e);\n            throw e;\n          }\n          try {\n            userDir \u003d\n                getRemoteLogUserDir(\n                    LogAggregationService.this.remoteRootLogDir, user);\n            userDir \u003d\n                userDir.makeQualified(remoteFS.getUri(),\n                    remoteFS.getWorkingDirectory());\n            createDir(remoteFS, userDir, APP_DIR_PERMISSIONS);\n          } catch (IOException e) {\n            LOG.error(\"Failed to create user dir [\" + userDir\n                + \"] while processing app \" + appId);\n            throw e;\n          }\n          try {\n            suffixDir \u003d\n                getRemoteLogSuffixedDir(\n                    LogAggregationService.this.remoteRootLogDir, user,\n                    LogAggregationService.this.remoteRootLogDirSuffix);\n            suffixDir \u003d\n                suffixDir.makeQualified(remoteFS.getUri(),\n                    remoteFS.getWorkingDirectory());\n            createDir(remoteFS, suffixDir, APP_DIR_PERMISSIONS);\n          } catch (IOException e) {\n            LOG.error(\"Failed to create suffixed user dir [\" + suffixDir\n                + \"] while processing app \" + appId);\n            throw e;\n          }\n          try {\n            appDir \u003d\n                getRemoteAppLogDir(LogAggregationService.this.remoteRootLogDir,\n                    appId, user,\n                    LogAggregationService.this.remoteRootLogDirSuffix);\n            appDir \u003d\n                appDir.makeQualified(remoteFS.getUri(),\n                    remoteFS.getWorkingDirectory());\n            createDir(remoteFS, appDir, APP_DIR_PERMISSIONS);\n          } catch (IOException e) {\n            LOG.error(\"Failed to  create application log dir [\" + appDir\n                + \"] while processing app \" + appId);\n            throw e;\n          }\n          return null;\n        }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/LogAggregationService.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "        public Object run() throws Exception {\n          // TODO: Reuse FS for user?\n          FileSystem remoteFS \u003d FileSystem.get(getConfig());\n          remoteFS.mkdirs(getRemoteAppLogDir(\n              LogAggregationService.this.remoteRootLogDir, appId)\n              .makeQualified(remoteFS.getUri(),\n                  remoteFS.getWorkingDirectory()));\n          return null;\n        }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/LogAggregationService.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/LogAggregationService.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/LogAggregationService.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,9 @@\n+        public Object run() throws Exception {\n+          // TODO: Reuse FS for user?\n+          FileSystem remoteFS \u003d FileSystem.get(getConfig());\n+          remoteFS.mkdirs(getRemoteAppLogDir(\n+              LogAggregationService.this.remoteRootLogDir, appId)\n+              .makeQualified(remoteFS.getUri(),\n+                  remoteFS.getWorkingDirectory()));\n+          return null;\n+        }\n\\ No newline at end of file\n",
      "actualSource": "        public Object run() throws Exception {\n          // TODO: Reuse FS for user?\n          FileSystem remoteFS \u003d FileSystem.get(getConfig());\n          remoteFS.mkdirs(getRemoteAppLogDir(\n              LogAggregationService.this.remoteRootLogDir, appId)\n              .makeQualified(remoteFS.getUri(),\n                  remoteFS.getWorkingDirectory()));\n          return null;\n        }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/LogAggregationService.java"
    }
  }
}