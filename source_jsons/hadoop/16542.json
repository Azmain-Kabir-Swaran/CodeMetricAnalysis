{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RouterSnapshot.java",
  "functionName": "getSnapshotDiffReport",
  "functionId": "getSnapshotDiffReport___snapshotRoot-String__earlierSnapshotName-String__laterSnapshotName-String",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterSnapshot.java",
  "functionStartLine": 160,
  "functionEndLine": 179,
  "numCommitsSeen": 1,
  "timeTaken": 757,
  "changeHistory": [
    "b6fff8c81e3d2245c93aa2369b42eedab0252ab9"
  ],
  "changeHistoryShort": {
    "b6fff8c81e3d2245c93aa2369b42eedab0252ab9": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b6fff8c81e3d2245c93aa2369b42eedab0252ab9": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-13787. RBF: Add Snapshot related ClientProtocol APIs. Contributed by Inigo Goiri.\n",
      "commitDate": "24/06/19 9:33 AM",
      "commitName": "b6fff8c81e3d2245c93aa2369b42eedab0252ab9",
      "commitAuthor": "Ayush Saxena",
      "diff": "@@ -0,0 +1,20 @@\n+  public SnapshotDiffReport getSnapshotDiffReport(String snapshotRoot,\n+      String earlierSnapshotName, String laterSnapshotName)\n+          throws IOException {\n+    rpcServer.checkOperation(NameNode.OperationCategory.READ);\n+\n+    final List\u003cRemoteLocation\u003e locations \u003d\n+        rpcServer.getLocationsForPath(snapshotRoot, true, false);\n+    RemoteMethod remoteMethod \u003d new RemoteMethod(\"getSnapshotDiffReport\",\n+        new Class\u003c?\u003e[] {String.class, String.class, String.class},\n+        new RemoteParam(), earlierSnapshotName, laterSnapshotName);\n+\n+    if (rpcServer.isInvokeConcurrent(snapshotRoot)) {\n+      Map\u003cRemoteLocation, SnapshotDiffReport\u003e ret \u003d rpcClient.invokeConcurrent(\n+          locations, remoteMethod, true, false, SnapshotDiffReport.class);\n+      return ret.values().iterator().next();\n+    } else {\n+      return rpcClient.invokeSequential(\n+          locations, remoteMethod, SnapshotDiffReport.class, null);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public SnapshotDiffReport getSnapshotDiffReport(String snapshotRoot,\n      String earlierSnapshotName, String laterSnapshotName)\n          throws IOException {\n    rpcServer.checkOperation(NameNode.OperationCategory.READ);\n\n    final List\u003cRemoteLocation\u003e locations \u003d\n        rpcServer.getLocationsForPath(snapshotRoot, true, false);\n    RemoteMethod remoteMethod \u003d new RemoteMethod(\"getSnapshotDiffReport\",\n        new Class\u003c?\u003e[] {String.class, String.class, String.class},\n        new RemoteParam(), earlierSnapshotName, laterSnapshotName);\n\n    if (rpcServer.isInvokeConcurrent(snapshotRoot)) {\n      Map\u003cRemoteLocation, SnapshotDiffReport\u003e ret \u003d rpcClient.invokeConcurrent(\n          locations, remoteMethod, true, false, SnapshotDiffReport.class);\n      return ret.values().iterator().next();\n    } else {\n      return rpcClient.invokeSequential(\n          locations, remoteMethod, SnapshotDiffReport.class, null);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterSnapshot.java"
    }
  }
}