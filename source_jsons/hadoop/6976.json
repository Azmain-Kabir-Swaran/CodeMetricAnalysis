{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSDirectory.java",
  "functionName": "addToInodeMap",
  "functionId": "addToInodeMap___inode-INode",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
  "functionStartLine": 1453,
  "functionEndLine": 1466,
  "numCommitsSeen": 321,
  "timeTaken": 10648,
  "changeHistory": [
    "2acc50b826fa8b00f2b09d9546c4b3215b89d46d",
    "4402f3f8557527d5c6cdad6f5bdcbd707b8cbf52",
    "8d4f74e7339abc77dc0daa162d7bd2814bd79b3d",
    "6215e35bb633706753a464ad3e8633366e6a10b2",
    "9b8e50b424d060e16c1175b1811e7abc476e2468",
    "06022b8fdc40e50eaac63758246353058e8cfa6d",
    "ed78b14ebc9a21bb57ccd088e8b49bfa457a396f",
    "eee0d4563c62647cfaaed6605ee713aaf69add78",
    "e96ce6f3e3e549202ce3c48d4733ba34098870ad",
    "1737950d0fc83c68f386881b843c41b0b1e342de",
    "04915a08141bbe71bdef26e3f539aa8b76f89ac7",
    "ceed0f6c46736323bd1b077125ff4e217c649208",
    "83702b070709a2d9ccdc233f96d5e4cd442dfe9b",
    "c38665282884122d3c82b6f68376cce036aee748",
    "3a61d25457606b93f7e99a48fe8f66984f4084b0"
  ],
  "changeHistoryShort": {
    "2acc50b826fa8b00f2b09d9546c4b3215b89d46d": "Ybodychange",
    "4402f3f8557527d5c6cdad6f5bdcbd707b8cbf52": "Ybodychange",
    "8d4f74e7339abc77dc0daa162d7bd2814bd79b3d": "Ybodychange",
    "6215e35bb633706753a464ad3e8633366e6a10b2": "Ybodychange",
    "9b8e50b424d060e16c1175b1811e7abc476e2468": "Ybodychange",
    "06022b8fdc40e50eaac63758246353058e8cfa6d": "Ybodychange",
    "ed78b14ebc9a21bb57ccd088e8b49bfa457a396f": "Ybodychange",
    "eee0d4563c62647cfaaed6605ee713aaf69add78": "Ybodychange",
    "e96ce6f3e3e549202ce3c48d4733ba34098870ad": "Ybodychange",
    "1737950d0fc83c68f386881b843c41b0b1e342de": "Ybodychange",
    "04915a08141bbe71bdef26e3f539aa8b76f89ac7": "Ybodychange",
    "ceed0f6c46736323bd1b077125ff4e217c649208": "Ybodychange",
    "83702b070709a2d9ccdc233f96d5e4cd442dfe9b": "Ybodychange",
    "c38665282884122d3c82b6f68376cce036aee748": "Ybodychange",
    "3a61d25457606b93f7e99a48fe8f66984f4084b0": "Ybodychange"
  },
  "changeHistoryDetails": {
    "2acc50b826fa8b00f2b09d9546c4b3215b89d46d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13165: [SPS]: Collects successfully moved block details via IBR. Contributed by Rakesh R.\n",
      "commitDate": "12/08/18 3:06 AM",
      "commitName": "2acc50b826fa8b00f2b09d9546c4b3215b89d46d",
      "commitAuthor": "Rakesh Radhakrishnan",
      "commitDateOld": "12/08/18 3:06 AM",
      "commitNameOld": "4402f3f8557527d5c6cdad6f5bdcbd707b8cbf52",
      "commitAuthorOld": "Uma Maheswara Rao G",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,14 @@\n   public final void addToInodeMap(INode inode) {\n     if (inode instanceof INodeWithAdditionalFields) {\n       inodeMap.put(inode);\n       if (!inode.isSymlink()) {\n         final XAttrFeature xaf \u003d inode.getXAttrFeature();\n         addEncryptionZone((INodeWithAdditionalFields) inode, xaf);\n-        if (namesystem.getBlockManager().getSPSManager().isEnabled()) {\n+        StoragePolicySatisfyManager spsManager \u003d\n+            namesystem.getBlockManager().getSPSManager();\n+        if (spsManager !\u003d null \u0026\u0026 spsManager.isEnabled()) {\n           addStoragePolicySatisfier((INodeWithAdditionalFields) inode, xaf);\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public final void addToInodeMap(INode inode) {\n    if (inode instanceof INodeWithAdditionalFields) {\n      inodeMap.put(inode);\n      if (!inode.isSymlink()) {\n        final XAttrFeature xaf \u003d inode.getXAttrFeature();\n        addEncryptionZone((INodeWithAdditionalFields) inode, xaf);\n        StoragePolicySatisfyManager spsManager \u003d\n            namesystem.getBlockManager().getSPSManager();\n        if (spsManager !\u003d null \u0026\u0026 spsManager.isEnabled()) {\n          addStoragePolicySatisfier((INodeWithAdditionalFields) inode, xaf);\n        }\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
      "extendedDetails": {}
    },
    "4402f3f8557527d5c6cdad6f5bdcbd707b8cbf52": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13097: [SPS]: Fix the branch review comments(Part1). Contributed by Surendra Singh.\n",
      "commitDate": "12/08/18 3:06 AM",
      "commitName": "4402f3f8557527d5c6cdad6f5bdcbd707b8cbf52",
      "commitAuthor": "Uma Maheswara Rao G",
      "commitDateOld": "12/08/18 3:06 AM",
      "commitNameOld": "8d4f74e7339abc77dc0daa162d7bd2814bd79b3d",
      "commitAuthorOld": "Rakesh Radhakrishnan",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n   public final void addToInodeMap(INode inode) {\n     if (inode instanceof INodeWithAdditionalFields) {\n       inodeMap.put(inode);\n       if (!inode.isSymlink()) {\n         final XAttrFeature xaf \u003d inode.getXAttrFeature();\n         addEncryptionZone((INodeWithAdditionalFields) inode, xaf);\n-        if (namesystem.getBlockManager().isSPSEnabled()) {\n+        if (namesystem.getBlockManager().getSPSManager().isEnabled()) {\n           addStoragePolicySatisfier((INodeWithAdditionalFields) inode, xaf);\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public final void addToInodeMap(INode inode) {\n    if (inode instanceof INodeWithAdditionalFields) {\n      inodeMap.put(inode);\n      if (!inode.isSymlink()) {\n        final XAttrFeature xaf \u003d inode.getXAttrFeature();\n        addEncryptionZone((INodeWithAdditionalFields) inode, xaf);\n        if (namesystem.getBlockManager().getSPSManager().isEnabled()) {\n          addStoragePolicySatisfier((INodeWithAdditionalFields) inode, xaf);\n        }\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
      "extendedDetails": {}
    },
    "8d4f74e7339abc77dc0daa162d7bd2814bd79b3d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12911. [SPS]: Modularize the SPS code and expose necessary interfaces for external/internal implementations. Contributed by Uma Maheswara Rao G\n",
      "commitDate": "12/08/18 3:06 AM",
      "commitName": "8d4f74e7339abc77dc0daa162d7bd2814bd79b3d",
      "commitAuthor": "Rakesh Radhakrishnan",
      "commitDateOld": "12/08/18 3:06 AM",
      "commitNameOld": "7ea24fc06c081e2ba6f5f66d212abb14b80c9064",
      "commitAuthorOld": "Uma Maheswara Rao G",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,12 @@\n   public final void addToInodeMap(INode inode) {\n     if (inode instanceof INodeWithAdditionalFields) {\n       inodeMap.put(inode);\n       if (!inode.isSymlink()) {\n         final XAttrFeature xaf \u003d inode.getXAttrFeature();\n         addEncryptionZone((INodeWithAdditionalFields) inode, xaf);\n-        addStoragePolicySatisfier((INodeWithAdditionalFields) inode, xaf);\n+        if (namesystem.getBlockManager().isSPSEnabled()) {\n+          addStoragePolicySatisfier((INodeWithAdditionalFields) inode, xaf);\n+        }\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public final void addToInodeMap(INode inode) {\n    if (inode instanceof INodeWithAdditionalFields) {\n      inodeMap.put(inode);\n      if (!inode.isSymlink()) {\n        final XAttrFeature xaf \u003d inode.getXAttrFeature();\n        addEncryptionZone((INodeWithAdditionalFields) inode, xaf);\n        if (namesystem.getBlockManager().isSPSEnabled()) {\n          addStoragePolicySatisfier((INodeWithAdditionalFields) inode, xaf);\n        }\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
      "extendedDetails": {}
    },
    "6215e35bb633706753a464ad3e8633366e6a10b2": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11150: [SPS]: Provide persistence when satisfying storage policy. Contributed by Yuanbo Liu\n",
      "commitDate": "12/08/18 3:05 AM",
      "commitName": "6215e35bb633706753a464ad3e8633366e6a10b2",
      "commitAuthor": "Uma Maheswara Rao G",
      "commitDateOld": "14/03/18 9:42 AM",
      "commitNameOld": "4c57fb0cd9344290a9f4f6422c1457d69465eec7",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 150.72,
      "commitsBetweenForRepo": 1678,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,10 @@\n   public final void addToInodeMap(INode inode) {\n     if (inode instanceof INodeWithAdditionalFields) {\n       inodeMap.put(inode);\n       if (!inode.isSymlink()) {\n         final XAttrFeature xaf \u003d inode.getXAttrFeature();\n         addEncryptionZone((INodeWithAdditionalFields) inode, xaf);\n+        addStoragePolicySatisfier((INodeWithAdditionalFields) inode, xaf);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public final void addToInodeMap(INode inode) {\n    if (inode instanceof INodeWithAdditionalFields) {\n      inodeMap.put(inode);\n      if (!inode.isSymlink()) {\n        final XAttrFeature xaf \u003d inode.getXAttrFeature();\n        addEncryptionZone((INodeWithAdditionalFields) inode, xaf);\n        addStoragePolicySatisfier((INodeWithAdditionalFields) inode, xaf);\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
      "extendedDetails": {}
    },
    "9b8e50b424d060e16c1175b1811e7abc476e2468": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9470. Encryption zone on root not loaded from fsimage after NN restart. Xiao Chen via wang.\n",
      "commitDate": "30/11/15 2:32 PM",
      "commitName": "9b8e50b424d060e16c1175b1811e7abc476e2468",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "11/11/15 1:24 PM",
      "commitNameOld": "a2a104f3d30182953db6690304146f0a582ed241",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 19.05,
      "commitsBetweenForRepo": 127,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,9 @@\n   public final void addToInodeMap(INode inode) {\n     if (inode instanceof INodeWithAdditionalFields) {\n       inodeMap.put(inode);\n       if (!inode.isSymlink()) {\n         final XAttrFeature xaf \u003d inode.getXAttrFeature();\n-        if (xaf !\u003d null) {\n-          XAttr xattr \u003d xaf.getXAttr(CRYPTO_XATTR_ENCRYPTION_ZONE);\n-          if (xattr !\u003d null) {\n-            try {\n-              final HdfsProtos.ZoneEncryptionInfoProto ezProto \u003d\n-                  HdfsProtos.ZoneEncryptionInfoProto.parseFrom(\n-                      xattr.getValue());\n-              ezManager.unprotectedAddEncryptionZone(inode.getId(),\n-                  PBHelperClient.convert(ezProto.getSuite()),\n-                  PBHelperClient.convert(ezProto.getCryptoProtocolVersion()),\n-                  ezProto.getKeyName());\n-            } catch (InvalidProtocolBufferException e) {\n-              NameNode.LOG.warn(\"Error parsing protocol buffer of \" +\n-                  \"EZ XAttr \" + xattr.getName());\n-            }\n-          }\n-        }\n+        addEncryptionZone((INodeWithAdditionalFields) inode, xaf);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public final void addToInodeMap(INode inode) {\n    if (inode instanceof INodeWithAdditionalFields) {\n      inodeMap.put(inode);\n      if (!inode.isSymlink()) {\n        final XAttrFeature xaf \u003d inode.getXAttrFeature();\n        addEncryptionZone((INodeWithAdditionalFields) inode, xaf);\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
      "extendedDetails": {}
    },
    "06022b8fdc40e50eaac63758246353058e8cfa6d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9111. Move hdfs-client protobuf convert methods from PBHelper to PBHelperClient. Contributed by Mingliang Liu.\n",
      "commitDate": "21/09/15 6:53 PM",
      "commitName": "06022b8fdc40e50eaac63758246353058e8cfa6d",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "10/09/15 7:16 AM",
      "commitNameOld": "a40342b0dab1f9137ae4b3679a5aca7f2a57d23d",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 11.48,
      "commitsBetweenForRepo": 76,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n   public final void addToInodeMap(INode inode) {\n     if (inode instanceof INodeWithAdditionalFields) {\n       inodeMap.put(inode);\n       if (!inode.isSymlink()) {\n         final XAttrFeature xaf \u003d inode.getXAttrFeature();\n         if (xaf !\u003d null) {\n           XAttr xattr \u003d xaf.getXAttr(CRYPTO_XATTR_ENCRYPTION_ZONE);\n           if (xattr !\u003d null) {\n             try {\n               final HdfsProtos.ZoneEncryptionInfoProto ezProto \u003d\n                   HdfsProtos.ZoneEncryptionInfoProto.parseFrom(\n                       xattr.getValue());\n               ezManager.unprotectedAddEncryptionZone(inode.getId(),\n                   PBHelperClient.convert(ezProto.getSuite()),\n-                  PBHelper.convert(ezProto.getCryptoProtocolVersion()),\n+                  PBHelperClient.convert(ezProto.getCryptoProtocolVersion()),\n                   ezProto.getKeyName());\n             } catch (InvalidProtocolBufferException e) {\n               NameNode.LOG.warn(\"Error parsing protocol buffer of \" +\n                   \"EZ XAttr \" + xattr.getName());\n             }\n           }\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public final void addToInodeMap(INode inode) {\n    if (inode instanceof INodeWithAdditionalFields) {\n      inodeMap.put(inode);\n      if (!inode.isSymlink()) {\n        final XAttrFeature xaf \u003d inode.getXAttrFeature();\n        if (xaf !\u003d null) {\n          XAttr xattr \u003d xaf.getXAttr(CRYPTO_XATTR_ENCRYPTION_ZONE);\n          if (xattr !\u003d null) {\n            try {\n              final HdfsProtos.ZoneEncryptionInfoProto ezProto \u003d\n                  HdfsProtos.ZoneEncryptionInfoProto.parseFrom(\n                      xattr.getValue());\n              ezManager.unprotectedAddEncryptionZone(inode.getId(),\n                  PBHelperClient.convert(ezProto.getSuite()),\n                  PBHelperClient.convert(ezProto.getCryptoProtocolVersion()),\n                  ezProto.getKeyName());\n            } catch (InvalidProtocolBufferException e) {\n              NameNode.LOG.warn(\"Error parsing protocol buffer of \" +\n                  \"EZ XAttr \" + xattr.getName());\n            }\n          }\n        }\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
      "extendedDetails": {}
    },
    "ed78b14ebc9a21bb57ccd088e8b49bfa457a396f": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9002. Move o.a.h.hdfs.net/*Peer classes to hdfs-client. Contributed by Mingliang Liu.\n",
      "commitDate": "03/09/15 3:32 PM",
      "commitName": "ed78b14ebc9a21bb57ccd088e8b49bfa457a396f",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "29/08/15 9:52 AM",
      "commitNameOld": "bdbe53c676dd4ff135ea2f64d3b9193fe43d7c8e",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 5.24,
      "commitsBetweenForRepo": 36,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n   public final void addToInodeMap(INode inode) {\n     if (inode instanceof INodeWithAdditionalFields) {\n       inodeMap.put(inode);\n       if (!inode.isSymlink()) {\n         final XAttrFeature xaf \u003d inode.getXAttrFeature();\n         if (xaf !\u003d null) {\n           XAttr xattr \u003d xaf.getXAttr(CRYPTO_XATTR_ENCRYPTION_ZONE);\n           if (xattr !\u003d null) {\n             try {\n               final HdfsProtos.ZoneEncryptionInfoProto ezProto \u003d\n                   HdfsProtos.ZoneEncryptionInfoProto.parseFrom(\n                       xattr.getValue());\n               ezManager.unprotectedAddEncryptionZone(inode.getId(),\n-                  PBHelper.convert(ezProto.getSuite()),\n+                  PBHelperClient.convert(ezProto.getSuite()),\n                   PBHelper.convert(ezProto.getCryptoProtocolVersion()),\n                   ezProto.getKeyName());\n             } catch (InvalidProtocolBufferException e) {\n               NameNode.LOG.warn(\"Error parsing protocol buffer of \" +\n                   \"EZ XAttr \" + xattr.getName());\n             }\n           }\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public final void addToInodeMap(INode inode) {\n    if (inode instanceof INodeWithAdditionalFields) {\n      inodeMap.put(inode);\n      if (!inode.isSymlink()) {\n        final XAttrFeature xaf \u003d inode.getXAttrFeature();\n        if (xaf !\u003d null) {\n          XAttr xattr \u003d xaf.getXAttr(CRYPTO_XATTR_ENCRYPTION_ZONE);\n          if (xattr !\u003d null) {\n            try {\n              final HdfsProtos.ZoneEncryptionInfoProto ezProto \u003d\n                  HdfsProtos.ZoneEncryptionInfoProto.parseFrom(\n                      xattr.getValue());\n              ezManager.unprotectedAddEncryptionZone(inode.getId(),\n                  PBHelperClient.convert(ezProto.getSuite()),\n                  PBHelper.convert(ezProto.getCryptoProtocolVersion()),\n                  ezProto.getKeyName());\n            } catch (InvalidProtocolBufferException e) {\n              NameNode.LOG.warn(\"Error parsing protocol buffer of \" +\n                  \"EZ XAttr \" + xattr.getName());\n            }\n          }\n        }\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
      "extendedDetails": {}
    },
    "eee0d4563c62647cfaaed6605ee713aaf69add78": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8900. Compact XAttrs to optimize memory footprint. (yliu)\n",
      "commitDate": "25/08/15 1:16 AM",
      "commitName": "eee0d4563c62647cfaaed6605ee713aaf69add78",
      "commitAuthor": "yliu",
      "commitDateOld": "22/08/15 12:09 AM",
      "commitNameOld": "745d04be59accf80feda0ad38efcc74ba362f2ca",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 3.05,
      "commitsBetweenForRepo": 14,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,25 @@\n   public final void addToInodeMap(INode inode) {\n     if (inode instanceof INodeWithAdditionalFields) {\n       inodeMap.put(inode);\n       if (!inode.isSymlink()) {\n         final XAttrFeature xaf \u003d inode.getXAttrFeature();\n         if (xaf !\u003d null) {\n-          final List\u003cXAttr\u003e xattrs \u003d xaf.getXAttrs();\n-          for (XAttr xattr : xattrs) {\n-            final String xaName \u003d XAttrHelper.getPrefixName(xattr);\n-            if (CRYPTO_XATTR_ENCRYPTION_ZONE.equals(xaName)) {\n-              try {\n-                final HdfsProtos.ZoneEncryptionInfoProto ezProto \u003d\n-                    HdfsProtos.ZoneEncryptionInfoProto.parseFrom(\n-                        xattr.getValue());\n-                ezManager.unprotectedAddEncryptionZone(inode.getId(),\n-                    PBHelper.convert(ezProto.getSuite()),\n-                    PBHelper.convert(ezProto.getCryptoProtocolVersion()),\n-                    ezProto.getKeyName());\n-              } catch (InvalidProtocolBufferException e) {\n-                NameNode.LOG.warn(\"Error parsing protocol buffer of \" +\n-                    \"EZ XAttr \" + xattr.getName());\n-              }\n+          XAttr xattr \u003d xaf.getXAttr(CRYPTO_XATTR_ENCRYPTION_ZONE);\n+          if (xattr !\u003d null) {\n+            try {\n+              final HdfsProtos.ZoneEncryptionInfoProto ezProto \u003d\n+                  HdfsProtos.ZoneEncryptionInfoProto.parseFrom(\n+                      xattr.getValue());\n+              ezManager.unprotectedAddEncryptionZone(inode.getId(),\n+                  PBHelper.convert(ezProto.getSuite()),\n+                  PBHelper.convert(ezProto.getCryptoProtocolVersion()),\n+                  ezProto.getKeyName());\n+            } catch (InvalidProtocolBufferException e) {\n+              NameNode.LOG.warn(\"Error parsing protocol buffer of \" +\n+                  \"EZ XAttr \" + xattr.getName());\n             }\n           }\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public final void addToInodeMap(INode inode) {\n    if (inode instanceof INodeWithAdditionalFields) {\n      inodeMap.put(inode);\n      if (!inode.isSymlink()) {\n        final XAttrFeature xaf \u003d inode.getXAttrFeature();\n        if (xaf !\u003d null) {\n          XAttr xattr \u003d xaf.getXAttr(CRYPTO_XATTR_ENCRYPTION_ZONE);\n          if (xattr !\u003d null) {\n            try {\n              final HdfsProtos.ZoneEncryptionInfoProto ezProto \u003d\n                  HdfsProtos.ZoneEncryptionInfoProto.parseFrom(\n                      xattr.getValue());\n              ezManager.unprotectedAddEncryptionZone(inode.getId(),\n                  PBHelper.convert(ezProto.getSuite()),\n                  PBHelper.convert(ezProto.getCryptoProtocolVersion()),\n                  ezProto.getKeyName());\n            } catch (InvalidProtocolBufferException e) {\n              NameNode.LOG.warn(\"Error parsing protocol buffer of \" +\n                  \"EZ XAttr \" + xattr.getName());\n            }\n          }\n        }\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
      "extendedDetails": {}
    },
    "e96ce6f3e3e549202ce3c48d4733ba34098870ad": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7077. Separate CipherSuite from crypto protocol version. (wang)\n",
      "commitDate": "25/09/14 6:40 PM",
      "commitName": "e96ce6f3e3e549202ce3c48d4733ba34098870ad",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "24/09/14 10:05 AM",
      "commitNameOld": "073bbd805c6680f47bbfcc6e8efd708ad729bca4",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 1.36,
      "commitsBetweenForRepo": 23,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,28 @@\n   public final void addToInodeMap(INode inode) {\n     if (inode instanceof INodeWithAdditionalFields) {\n       inodeMap.put(inode);\n       if (!inode.isSymlink()) {\n         final XAttrFeature xaf \u003d inode.getXAttrFeature();\n         if (xaf !\u003d null) {\n           final List\u003cXAttr\u003e xattrs \u003d xaf.getXAttrs();\n           for (XAttr xattr : xattrs) {\n             final String xaName \u003d XAttrHelper.getPrefixName(xattr);\n             if (CRYPTO_XATTR_ENCRYPTION_ZONE.equals(xaName)) {\n               try {\n                 final HdfsProtos.ZoneEncryptionInfoProto ezProto \u003d\n                     HdfsProtos.ZoneEncryptionInfoProto.parseFrom(\n                         xattr.getValue());\n                 ezManager.unprotectedAddEncryptionZone(inode.getId(),\n                     PBHelper.convert(ezProto.getSuite()),\n+                    PBHelper.convert(ezProto.getCryptoProtocolVersion()),\n                     ezProto.getKeyName());\n               } catch (InvalidProtocolBufferException e) {\n                 NameNode.LOG.warn(\"Error parsing protocol buffer of \" +\n                     \"EZ XAttr \" + xattr.getName());\n               }\n             }\n           }\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public final void addToInodeMap(INode inode) {\n    if (inode instanceof INodeWithAdditionalFields) {\n      inodeMap.put(inode);\n      if (!inode.isSymlink()) {\n        final XAttrFeature xaf \u003d inode.getXAttrFeature();\n        if (xaf !\u003d null) {\n          final List\u003cXAttr\u003e xattrs \u003d xaf.getXAttrs();\n          for (XAttr xattr : xattrs) {\n            final String xaName \u003d XAttrHelper.getPrefixName(xattr);\n            if (CRYPTO_XATTR_ENCRYPTION_ZONE.equals(xaName)) {\n              try {\n                final HdfsProtos.ZoneEncryptionInfoProto ezProto \u003d\n                    HdfsProtos.ZoneEncryptionInfoProto.parseFrom(\n                        xattr.getValue());\n                ezManager.unprotectedAddEncryptionZone(inode.getId(),\n                    PBHelper.convert(ezProto.getSuite()),\n                    PBHelper.convert(ezProto.getCryptoProtocolVersion()),\n                    ezProto.getKeyName());\n              } catch (InvalidProtocolBufferException e) {\n                NameNode.LOG.warn(\"Error parsing protocol buffer of \" +\n                    \"EZ XAttr \" + xattr.getName());\n              }\n            }\n          }\n        }\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
      "extendedDetails": {}
    },
    "1737950d0fc83c68f386881b843c41b0b1e342de": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6987. Move CipherSuite xattr information up to the encryption zone root. Contributed by Zhe Zhang.\n",
      "commitDate": "21/09/14 9:29 PM",
      "commitName": "1737950d0fc83c68f386881b843c41b0b1e342de",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "17/09/14 10:00 PM",
      "commitNameOld": "2d2b0009e662db75cf22e2ce8d618ed0a8e61c2f",
      "commitAuthorOld": "",
      "daysBetweenCommits": 3.98,
      "commitsBetweenForRepo": 42,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,27 @@\n   public final void addToInodeMap(INode inode) {\n     if (inode instanceof INodeWithAdditionalFields) {\n       inodeMap.put(inode);\n       if (!inode.isSymlink()) {\n         final XAttrFeature xaf \u003d inode.getXAttrFeature();\n         if (xaf !\u003d null) {\n           final List\u003cXAttr\u003e xattrs \u003d xaf.getXAttrs();\n           for (XAttr xattr : xattrs) {\n             final String xaName \u003d XAttrHelper.getPrefixName(xattr);\n             if (CRYPTO_XATTR_ENCRYPTION_ZONE.equals(xaName)) {\n-              ezManager.unprotectedAddEncryptionZone(inode.getId(),\n-                  new String(xattr.getValue()));\n+              try {\n+                final HdfsProtos.ZoneEncryptionInfoProto ezProto \u003d\n+                    HdfsProtos.ZoneEncryptionInfoProto.parseFrom(\n+                        xattr.getValue());\n+                ezManager.unprotectedAddEncryptionZone(inode.getId(),\n+                    PBHelper.convert(ezProto.getSuite()),\n+                    ezProto.getKeyName());\n+              } catch (InvalidProtocolBufferException e) {\n+                NameNode.LOG.warn(\"Error parsing protocol buffer of \" +\n+                    \"EZ XAttr \" + xattr.getName());\n+              }\n             }\n           }\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public final void addToInodeMap(INode inode) {\n    if (inode instanceof INodeWithAdditionalFields) {\n      inodeMap.put(inode);\n      if (!inode.isSymlink()) {\n        final XAttrFeature xaf \u003d inode.getXAttrFeature();\n        if (xaf !\u003d null) {\n          final List\u003cXAttr\u003e xattrs \u003d xaf.getXAttrs();\n          for (XAttr xattr : xattrs) {\n            final String xaName \u003d XAttrHelper.getPrefixName(xattr);\n            if (CRYPTO_XATTR_ENCRYPTION_ZONE.equals(xaName)) {\n              try {\n                final HdfsProtos.ZoneEncryptionInfoProto ezProto \u003d\n                    HdfsProtos.ZoneEncryptionInfoProto.parseFrom(\n                        xattr.getValue());\n                ezManager.unprotectedAddEncryptionZone(inode.getId(),\n                    PBHelper.convert(ezProto.getSuite()),\n                    ezProto.getKeyName());\n              } catch (InvalidProtocolBufferException e) {\n                NameNode.LOG.warn(\"Error parsing protocol buffer of \" +\n                    \"EZ XAttr \" + xattr.getName());\n              }\n            }\n          }\n        }\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
      "extendedDetails": {}
    },
    "04915a08141bbe71bdef26e3f539aa8b76f89ac7": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6951. Correctly persist raw namespace xattrs to edit log and fsimage. Contributed by Charles Lamb.\n",
      "commitDate": "08/09/14 4:59 PM",
      "commitName": "04915a08141bbe71bdef26e3f539aa8b76f89ac7",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "04/09/14 4:12 PM",
      "commitNameOld": "f7df24bb1b4278d27f5c2b7fecf7b69be4302c7a",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 4.03,
      "commitsBetweenForRepo": 31,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   public final void addToInodeMap(INode inode) {\n     if (inode instanceof INodeWithAdditionalFields) {\n       inodeMap.put(inode);\n       if (!inode.isSymlink()) {\n         final XAttrFeature xaf \u003d inode.getXAttrFeature();\n         if (xaf !\u003d null) {\n           final List\u003cXAttr\u003e xattrs \u003d xaf.getXAttrs();\n           for (XAttr xattr : xattrs) {\n             final String xaName \u003d XAttrHelper.getPrefixName(xattr);\n             if (CRYPTO_XATTR_ENCRYPTION_ZONE.equals(xaName)) {\n-              ezManager.addEncryptionZone(inode.getId(),\n+              ezManager.unprotectedAddEncryptionZone(inode.getId(),\n                   new String(xattr.getValue()));\n             }\n           }\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public final void addToInodeMap(INode inode) {\n    if (inode instanceof INodeWithAdditionalFields) {\n      inodeMap.put(inode);\n      if (!inode.isSymlink()) {\n        final XAttrFeature xaf \u003d inode.getXAttrFeature();\n        if (xaf !\u003d null) {\n          final List\u003cXAttr\u003e xattrs \u003d xaf.getXAttrs();\n          for (XAttr xattr : xattrs) {\n            final String xaName \u003d XAttrHelper.getPrefixName(xattr);\n            if (CRYPTO_XATTR_ENCRYPTION_ZONE.equals(xaName)) {\n              ezManager.unprotectedAddEncryptionZone(inode.getId(),\n                  new String(xattr.getValue()));\n            }\n          }\n        }\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
      "extendedDetails": {}
    },
    "ceed0f6c46736323bd1b077125ff4e217c649208": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6635. Refactor encryption zone functionality into new EncryptionZoneManager class. (wang)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1608657 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/07/14 9:34 PM",
      "commitName": "ceed0f6c46736323bd1b077125ff4e217c649208",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "07/07/14 1:43 PM",
      "commitNameOld": "dda85637df2c970d905b550c89208ac6ca63994d",
      "commitAuthorOld": "",
      "daysBetweenCommits": 0.33,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   public final void addToInodeMap(INode inode) {\n     if (inode instanceof INodeWithAdditionalFields) {\n       inodeMap.put(inode);\n       if (!inode.isSymlink()) {\n         final XAttrFeature xaf \u003d inode.getXAttrFeature();\n         if (xaf !\u003d null) {\n           final List\u003cXAttr\u003e xattrs \u003d xaf.getXAttrs();\n           for (XAttr xattr : xattrs) {\n             final String xaName \u003d XAttrHelper.getPrefixName(xattr);\n             if (CRYPTO_XATTR_ENCRYPTION_ZONE.equals(xaName)) {\n-              encryptionZones.put(inode.getId(), new EncryptionZoneInt(\n-                  new String(xattr.getValue()), inode.getId()));\n+              ezManager.addEncryptionZone(inode.getId(),\n+                  new String(xattr.getValue()));\n             }\n           }\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public final void addToInodeMap(INode inode) {\n    if (inode instanceof INodeWithAdditionalFields) {\n      inodeMap.put(inode);\n      if (!inode.isSymlink()) {\n        final XAttrFeature xaf \u003d inode.getXAttrFeature();\n        if (xaf !\u003d null) {\n          final List\u003cXAttr\u003e xattrs \u003d xaf.getXAttrs();\n          for (XAttr xattr : xattrs) {\n            final String xaName \u003d XAttrHelper.getPrefixName(xattr);\n            if (CRYPTO_XATTR_ENCRYPTION_ZONE.equals(xaName)) {\n              ezManager.addEncryptionZone(inode.getId(),\n                  new String(xattr.getValue()));\n            }\n          }\n        }\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
      "extendedDetails": {}
    },
    "83702b070709a2d9ccdc233f96d5e4cd442dfe9b": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6629. Not able to create symlinks after HDFS-6516 (umamaheswararao)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1608389 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/07/14 2:51 AM",
      "commitName": "83702b070709a2d9ccdc233f96d5e4cd442dfe9b",
      "commitAuthor": "Charles Lamb",
      "commitDateOld": "03/07/14 5:24 PM",
      "commitNameOld": "c38665282884122d3c82b6f68376cce036aee748",
      "commitAuthorOld": "Charles Lamb",
      "daysBetweenCommits": 3.39,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,18 @@\n   public final void addToInodeMap(INode inode) {\n     if (inode instanceof INodeWithAdditionalFields) {\n       inodeMap.put(inode);\n-      final XAttrFeature xaf \u003d inode.getXAttrFeature();\n-      if (xaf !\u003d null) {\n-        final List\u003cXAttr\u003e xattrs \u003d xaf.getXAttrs();\n-        for (XAttr xattr : xattrs) {\n-          final String xaName \u003d XAttrHelper.getPrefixName(xattr);\n-          if (CRYPTO_XATTR_ENCRYPTION_ZONE.equals(xaName)) {\n-            encryptionZones.put(inode.getId(),\n-              new EncryptionZoneInt(new String(xattr.getValue()),\n-                                    inode.getId()));\n+      if (!inode.isSymlink()) {\n+        final XAttrFeature xaf \u003d inode.getXAttrFeature();\n+        if (xaf !\u003d null) {\n+          final List\u003cXAttr\u003e xattrs \u003d xaf.getXAttrs();\n+          for (XAttr xattr : xattrs) {\n+            final String xaName \u003d XAttrHelper.getPrefixName(xattr);\n+            if (CRYPTO_XATTR_ENCRYPTION_ZONE.equals(xaName)) {\n+              encryptionZones.put(inode.getId(), new EncryptionZoneInt(\n+                  new String(xattr.getValue()), inode.getId()));\n+            }\n           }\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public final void addToInodeMap(INode inode) {\n    if (inode instanceof INodeWithAdditionalFields) {\n      inodeMap.put(inode);\n      if (!inode.isSymlink()) {\n        final XAttrFeature xaf \u003d inode.getXAttrFeature();\n        if (xaf !\u003d null) {\n          final List\u003cXAttr\u003e xattrs \u003d xaf.getXAttrs();\n          for (XAttr xattr : xattrs) {\n            final String xaName \u003d XAttrHelper.getPrefixName(xattr);\n            if (CRYPTO_XATTR_ENCRYPTION_ZONE.equals(xaName)) {\n              encryptionZones.put(inode.getId(), new EncryptionZoneInt(\n                  new String(xattr.getValue()), inode.getId()));\n            }\n          }\n        }\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
      "extendedDetails": {}
    },
    "c38665282884122d3c82b6f68376cce036aee748": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6516. List of Encryption Zones should be based on inodes (clamb)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1607770 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/07/14 5:24 PM",
      "commitName": "c38665282884122d3c82b6f68376cce036aee748",
      "commitAuthor": "Charles Lamb",
      "commitDateOld": "02/07/14 5:58 PM",
      "commitNameOld": "2a3bccddd939ee0d6941aa2d22edc67dea85fe35",
      "commitAuthorOld": "Charles Lamb",
      "daysBetweenCommits": 0.98,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,5 +1,17 @@\n   public final void addToInodeMap(INode inode) {\n     if (inode instanceof INodeWithAdditionalFields) {\n       inodeMap.put(inode);\n+      final XAttrFeature xaf \u003d inode.getXAttrFeature();\n+      if (xaf !\u003d null) {\n+        final List\u003cXAttr\u003e xattrs \u003d xaf.getXAttrs();\n+        for (XAttr xattr : xattrs) {\n+          final String xaName \u003d XAttrHelper.getPrefixName(xattr);\n+          if (CRYPTO_XATTR_ENCRYPTION_ZONE.equals(xaName)) {\n+            encryptionZones.put(inode.getId(),\n+              new EncryptionZoneInt(new String(xattr.getValue()),\n+                                    inode.getId()));\n+          }\n+        }\n+      }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public final void addToInodeMap(INode inode) {\n    if (inode instanceof INodeWithAdditionalFields) {\n      inodeMap.put(inode);\n      final XAttrFeature xaf \u003d inode.getXAttrFeature();\n      if (xaf !\u003d null) {\n        final List\u003cXAttr\u003e xattrs \u003d xaf.getXAttrs();\n        for (XAttr xattr : xattrs) {\n          final String xaName \u003d XAttrHelper.getPrefixName(xattr);\n          if (CRYPTO_XATTR_ENCRYPTION_ZONE.equals(xaName)) {\n            encryptionZones.put(inode.getId(),\n              new EncryptionZoneInt(new String(xattr.getValue()),\n                                    inode.getId()));\n          }\n        }\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
      "extendedDetails": {}
    },
    "3a61d25457606b93f7e99a48fe8f66984f4084b0": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6125. Cleanup unnecessary cast in HDFS code base. Contributed by Suresh Srinivas.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1581242 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/03/14 10:51 PM",
      "commitName": "3a61d25457606b93f7e99a48fe8f66984f4084b0",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "24/03/14 4:32 PM",
      "commitNameOld": "c2ef7e239eb0e81cf8a3e971378e9e696202de67",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 0.26,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,5 +1,5 @@\n   public final void addToInodeMap(INode inode) {\n     if (inode instanceof INodeWithAdditionalFields) {\n-      inodeMap.put((INodeWithAdditionalFields)inode);\n+      inodeMap.put(inode);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public final void addToInodeMap(INode inode) {\n    if (inode instanceof INodeWithAdditionalFields) {\n      inodeMap.put(inode);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
      "extendedDetails": {}
    }
  }
}