{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DatanodeManager.java",
  "functionName": "createSecondaryNodeSorter",
  "functionId": "createSecondaryNodeSorter",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeManager.java",
  "functionStartLine": 562,
  "functionEndLine": 575,
  "numCommitsSeen": 172,
  "timeTaken": 3417,
  "changeHistory": [
    "29dddb8a14e52681bca8168d29431083c9f32c4a",
    "9ca6298a9ac1ffd5c87222d5b81a561a86913840",
    "c892a879ddce3abfd51c8609c81148bf6e4f9daa"
  ],
  "changeHistoryShort": {
    "29dddb8a14e52681bca8168d29431083c9f32c4a": "Ymultichange(Yreturntypechange,Ybodychange)",
    "9ca6298a9ac1ffd5c87222d5b81a561a86913840": "Ybodychange",
    "c892a879ddce3abfd51c8609c81148bf6e4f9daa": "Yintroduced"
  },
  "changeHistoryDetails": {
    "29dddb8a14e52681bca8168d29431083c9f32c4a": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-15255. Consider StorageType when DatanodeManager#sortLocatedBlock(). Contributed by Lisheng Sun.\n",
      "commitDate": "12/05/20 7:07 AM",
      "commitName": "29dddb8a14e52681bca8168d29431083c9f32c4a",
      "commitAuthor": "S O\u0027Donnell",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-15255. Consider StorageType when DatanodeManager#sortLocatedBlock(). Contributed by Lisheng Sun.\n",
          "commitDate": "12/05/20 7:07 AM",
          "commitName": "29dddb8a14e52681bca8168d29431083c9f32c4a",
          "commitAuthor": "S O\u0027Donnell",
          "commitDateOld": "29/04/20 7:56 AM",
          "commitNameOld": "9ca6298a9ac1ffd5c87222d5b81a561a86913840",
          "commitAuthorOld": "S O\u0027Donnell",
          "daysBetweenCommits": 12.97,
          "commitsBetweenForRepo": 38,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,14 @@\n-  private Consumer\u003cList\u003cDatanodeInfo\u003e\u003e createSecondaryNodeSorter() {\n-    Consumer\u003cList\u003cDatanodeInfo\u003e\u003e secondarySort \u003d null;\n+  private Consumer\u003cList\u003cDatanodeInfoWithStorage\u003e\u003e createSecondaryNodeSorter() {\n+    Consumer\u003cList\u003cDatanodeInfoWithStorage\u003e\u003e secondarySort \u003d null;\n+    if (readConsiderStorageType) {\n+      Comparator\u003cDatanodeInfoWithStorage\u003e comp \u003d\n+          Comparator.comparing(DatanodeInfoWithStorage::getStorageType);\n+      secondarySort \u003d list -\u003e Collections.sort(list, comp);\n+    }\n     if (readConsiderLoad) {\n-      Comparator\u003cDatanodeInfo\u003e comp \u003d\n+      Comparator\u003cDatanodeInfoWithStorage\u003e comp \u003d\n           Comparator.comparingInt(DatanodeInfo::getXceiverCount);\n       secondarySort \u003d list -\u003e Collections.sort(list, comp);\n     }\n     return secondarySort;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private Consumer\u003cList\u003cDatanodeInfoWithStorage\u003e\u003e createSecondaryNodeSorter() {\n    Consumer\u003cList\u003cDatanodeInfoWithStorage\u003e\u003e secondarySort \u003d null;\n    if (readConsiderStorageType) {\n      Comparator\u003cDatanodeInfoWithStorage\u003e comp \u003d\n          Comparator.comparing(DatanodeInfoWithStorage::getStorageType);\n      secondarySort \u003d list -\u003e Collections.sort(list, comp);\n    }\n    if (readConsiderLoad) {\n      Comparator\u003cDatanodeInfoWithStorage\u003e comp \u003d\n          Comparator.comparingInt(DatanodeInfo::getXceiverCount);\n      secondarySort \u003d list -\u003e Collections.sort(list, comp);\n    }\n    return secondarySort;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeManager.java",
          "extendedDetails": {
            "oldValue": "Consumer\u003cList\u003cDatanodeInfo\u003e\u003e",
            "newValue": "Consumer\u003cList\u003cDatanodeInfoWithStorage\u003e\u003e"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-15255. Consider StorageType when DatanodeManager#sortLocatedBlock(). Contributed by Lisheng Sun.\n",
          "commitDate": "12/05/20 7:07 AM",
          "commitName": "29dddb8a14e52681bca8168d29431083c9f32c4a",
          "commitAuthor": "S O\u0027Donnell",
          "commitDateOld": "29/04/20 7:56 AM",
          "commitNameOld": "9ca6298a9ac1ffd5c87222d5b81a561a86913840",
          "commitAuthorOld": "S O\u0027Donnell",
          "daysBetweenCommits": 12.97,
          "commitsBetweenForRepo": 38,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,14 @@\n-  private Consumer\u003cList\u003cDatanodeInfo\u003e\u003e createSecondaryNodeSorter() {\n-    Consumer\u003cList\u003cDatanodeInfo\u003e\u003e secondarySort \u003d null;\n+  private Consumer\u003cList\u003cDatanodeInfoWithStorage\u003e\u003e createSecondaryNodeSorter() {\n+    Consumer\u003cList\u003cDatanodeInfoWithStorage\u003e\u003e secondarySort \u003d null;\n+    if (readConsiderStorageType) {\n+      Comparator\u003cDatanodeInfoWithStorage\u003e comp \u003d\n+          Comparator.comparing(DatanodeInfoWithStorage::getStorageType);\n+      secondarySort \u003d list -\u003e Collections.sort(list, comp);\n+    }\n     if (readConsiderLoad) {\n-      Comparator\u003cDatanodeInfo\u003e comp \u003d\n+      Comparator\u003cDatanodeInfoWithStorage\u003e comp \u003d\n           Comparator.comparingInt(DatanodeInfo::getXceiverCount);\n       secondarySort \u003d list -\u003e Collections.sort(list, comp);\n     }\n     return secondarySort;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private Consumer\u003cList\u003cDatanodeInfoWithStorage\u003e\u003e createSecondaryNodeSorter() {\n    Consumer\u003cList\u003cDatanodeInfoWithStorage\u003e\u003e secondarySort \u003d null;\n    if (readConsiderStorageType) {\n      Comparator\u003cDatanodeInfoWithStorage\u003e comp \u003d\n          Comparator.comparing(DatanodeInfoWithStorage::getStorageType);\n      secondarySort \u003d list -\u003e Collections.sort(list, comp);\n    }\n    if (readConsiderLoad) {\n      Comparator\u003cDatanodeInfoWithStorage\u003e comp \u003d\n          Comparator.comparingInt(DatanodeInfo::getXceiverCount);\n      secondarySort \u003d list -\u003e Collections.sort(list, comp);\n    }\n    return secondarySort;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "9ca6298a9ac1ffd5c87222d5b81a561a86913840": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-15285. The same distance and load nodes don\u0027t shuffle when consider DataNode load. Contributed by Lisheng Sun.\n",
      "commitDate": "29/04/20 7:56 AM",
      "commitName": "9ca6298a9ac1ffd5c87222d5b81a561a86913840",
      "commitAuthor": "S O\u0027Donnell",
      "commitDateOld": "12/03/20 5:22 PM",
      "commitNameOld": "0695f7a538fb81cc5e36d0b9187df39822bb24f4",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 47.61,
      "commitsBetweenForRepo": 158,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,9 @@\n   private Consumer\u003cList\u003cDatanodeInfo\u003e\u003e createSecondaryNodeSorter() {\n-    Consumer\u003cList\u003cDatanodeInfo\u003e\u003e secondarySort \u003d\n-        list -\u003e Collections.shuffle(list);\n+    Consumer\u003cList\u003cDatanodeInfo\u003e\u003e secondarySort \u003d null;\n     if (readConsiderLoad) {\n       Comparator\u003cDatanodeInfo\u003e comp \u003d\n           Comparator.comparingInt(DatanodeInfo::getXceiverCount);\n       secondarySort \u003d list -\u003e Collections.sort(list, comp);\n     }\n     return secondarySort;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private Consumer\u003cList\u003cDatanodeInfo\u003e\u003e createSecondaryNodeSorter() {\n    Consumer\u003cList\u003cDatanodeInfo\u003e\u003e secondarySort \u003d null;\n    if (readConsiderLoad) {\n      Comparator\u003cDatanodeInfo\u003e comp \u003d\n          Comparator.comparingInt(DatanodeInfo::getXceiverCount);\n      secondarySort \u003d list -\u003e Collections.sort(list, comp);\n    }\n    return secondarySort;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeManager.java",
      "extendedDetails": {}
    },
    "c892a879ddce3abfd51c8609c81148bf6e4f9daa": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-14882. Consider DataNode load when #getBlockLocation. Contributed by Xiaoqiao He.\n\nSigned-off-by: Wei-Chiu Chuang \u003cweichiu@apache.org\u003e\n\nReviewed-by: Inigo Goiri \u003cinigoiri@apache.org\u003e\nReviewed-by: Istvan Fajth \u003cpifta@cloudera.com\u003e\n",
      "commitDate": "15/11/19 12:16 PM",
      "commitName": "c892a879ddce3abfd51c8609c81148bf6e4f9daa",
      "commitAuthor": "He Xiaoqiao",
      "diff": "@@ -0,0 +1,10 @@\n+  private Consumer\u003cList\u003cDatanodeInfo\u003e\u003e createSecondaryNodeSorter() {\n+    Consumer\u003cList\u003cDatanodeInfo\u003e\u003e secondarySort \u003d\n+        list -\u003e Collections.shuffle(list);\n+    if (readConsiderLoad) {\n+      Comparator\u003cDatanodeInfo\u003e comp \u003d\n+          Comparator.comparingInt(DatanodeInfo::getXceiverCount);\n+      secondarySort \u003d list -\u003e Collections.sort(list, comp);\n+    }\n+    return secondarySort;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private Consumer\u003cList\u003cDatanodeInfo\u003e\u003e createSecondaryNodeSorter() {\n    Consumer\u003cList\u003cDatanodeInfo\u003e\u003e secondarySort \u003d\n        list -\u003e Collections.shuffle(list);\n    if (readConsiderLoad) {\n      Comparator\u003cDatanodeInfo\u003e comp \u003d\n          Comparator.comparingInt(DatanodeInfo::getXceiverCount);\n      secondarySort \u003d list -\u003e Collections.sort(list, comp);\n    }\n    return secondarySort;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeManager.java"
    }
  }
}