{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "MapReduceChildJVM.java",
  "functionName": "getVMCommand",
  "functionId": "getVMCommand___taskAttemptListenerAddr-InetSocketAddress__task-Task__jvmID-JVMId",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapred/MapReduceChildJVM.java",
  "functionStartLine": 107,
  "functionEndLine": 190,
  "numCommitsSeen": 41,
  "timeTaken": 8575,
  "changeHistory": [
    "03ab24aa01ffea1cacf1fa9cbbf73c3f2904d981",
    "ed63b116465290fdb0acdf89170025f47b307599",
    "0af1a2b5bc1469ba22edb63cd58f9b436b1dc4d3",
    "96e0ca2d272dc7ecd7f7f0e65a0c596fcc063bcb",
    "f667371746de02c52434af6e48f3e2a4f83917ac",
    "638801cce16fc1dc3259c541dc30a599faaddda1",
    "76b653a36738a4f420f14c53c7a0a4006dbf066e",
    "b7ae5a6cb7b2d3e3112ac53007e984caeb07de58",
    "ab787f44aabfff0cd01b79a08a52ffaf923558b3",
    "4806d7ba74c668817ea6f35421c559eaf57a997e",
    "d00b3c49f6fb3f6a617add6203c6b55f6c345940",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "03ab24aa01ffea1cacf1fa9cbbf73c3f2904d981": "Ybodychange",
    "ed63b116465290fdb0acdf89170025f47b307599": "Ybodychange",
    "0af1a2b5bc1469ba22edb63cd58f9b436b1dc4d3": "Yparameterchange",
    "96e0ca2d272dc7ecd7f7f0e65a0c596fcc063bcb": "Ybodychange",
    "f667371746de02c52434af6e48f3e2a4f83917ac": "Ybodychange",
    "638801cce16fc1dc3259c541dc30a599faaddda1": "Ybodychange",
    "76b653a36738a4f420f14c53c7a0a4006dbf066e": "Ybodychange",
    "b7ae5a6cb7b2d3e3112ac53007e984caeb07de58": "Ybodychange",
    "ab787f44aabfff0cd01b79a08a52ffaf923558b3": "Ybodychange",
    "4806d7ba74c668817ea6f35421c559eaf57a997e": "Ybodychange",
    "d00b3c49f6fb3f6a617add6203c6b55f6c345940": "Ymultichange(Yparameterchange,Ybodychange)",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "03ab24aa01ffea1cacf1fa9cbbf73c3f2904d981": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5932. Provide an option to use a dedicated reduce-side shuffle log. Contributed by Gera Shegalov\n",
      "commitDate": "03/12/14 9:02 AM",
      "commitName": "03ab24aa01ffea1cacf1fa9cbbf73c3f2904d981",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "25/11/14 4:24 PM",
      "commitNameOld": "a655973e781caf662b360c96e0fa3f5a873cf676",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 7.69,
      "commitsBetweenForRepo": 38,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,87 +1,84 @@\n   public static List\u003cString\u003e getVMCommand(\n       InetSocketAddress taskAttemptListenerAddr, Task task, \n       JVMId jvmID) {\n \n     TaskAttemptID attemptID \u003d task.getTaskID();\n     JobConf conf \u003d task.conf;\n \n     Vector\u003cString\u003e vargs \u003d new Vector\u003cString\u003e(8);\n \n     vargs.add(MRApps.crossPlatformifyMREnv(task.conf, Environment.JAVA_HOME)\n         + \"/bin/java\");\n \n     // Add child (task) java-vm options.\n     //\n     // The following symbols if present in mapred.{map|reduce}.child.java.opts \n     // value are replaced:\n     // + @taskid@ is interpolated with value of TaskID.\n     // Other occurrences of @ will not be altered.\n     //\n     // Example with multiple arguments and substitutions, showing\n     // jvm GC logging, and start of a passwordless JVM JMX agent so can\n     // connect with jconsole and the likes to watch child memory, threads\n     // and get thread dumps.\n     //\n     //  \u003cproperty\u003e\n     //    \u003cname\u003emapred.map.child.java.opts\u003c/name\u003e\n     //    \u003cvalue\u003e-Xmx 512M -verbose:gc -Xloggc:/tmp/@taskid@.gc \\\n     //           -Dcom.sun.management.jmxremote.authenticate\u003dfalse \\\n     //           -Dcom.sun.management.jmxremote.ssl\u003dfalse \\\n     //    \u003c/value\u003e\n     //  \u003c/property\u003e\n     //\n     //  \u003cproperty\u003e\n     //    \u003cname\u003emapred.reduce.child.java.opts\u003c/name\u003e\n     //    \u003cvalue\u003e-Xmx 1024M -verbose:gc -Xloggc:/tmp/@taskid@.gc \\\n     //           -Dcom.sun.management.jmxremote.authenticate\u003dfalse \\\n     //           -Dcom.sun.management.jmxremote.ssl\u003dfalse \\\n     //    \u003c/value\u003e\n     //  \u003c/property\u003e\n     //\n     String javaOpts \u003d getChildJavaOpts(conf, task.isMapTask());\n     javaOpts \u003d javaOpts.replace(\"@taskid@\", attemptID.toString());\n     String [] javaOptsSplit \u003d javaOpts.split(\" \");\n     for (int i \u003d 0; i \u003c javaOptsSplit.length; i++) {\n       vargs.add(javaOptsSplit[i]);\n     }\n \n     Path childTmpDir \u003d new Path(MRApps.crossPlatformifyMREnv(conf, Environment.PWD),\n         YarnConfiguration.DEFAULT_CONTAINER_TEMP_DIR);\n     vargs.add(\"-Djava.io.tmpdir\u003d\" + childTmpDir);\n-\n-    // Setup the log4j prop\n-    long logSize \u003d TaskLog.getTaskLogLength(conf);\n-    setupLog4jProperties(task, vargs, logSize, conf);\n+    MRApps.addLog4jSystemProperties(task, vargs, conf);\n \n     if (conf.getProfileEnabled()) {\n       if (conf.getProfileTaskRange(task.isMapTask()\n                                    ).isIncluded(task.getPartition())) {\n         final String profileParams \u003d conf.get(task.isMapTask()\n             ? MRJobConfig.TASK_MAP_PROFILE_PARAMS\n             : MRJobConfig.TASK_REDUCE_PROFILE_PARAMS, conf.getProfileParams());\n         vargs.add(String.format(profileParams,\n             getTaskLogFile(TaskLog.LogName.PROFILE)));\n       }\n     }\n \n     // Add main class and its arguments \n     vargs.add(YarnChild.class.getName());  // main of Child\n     // pass TaskAttemptListener\u0027s address\n     vargs.add(taskAttemptListenerAddr.getAddress().getHostAddress()); \n     vargs.add(Integer.toString(taskAttemptListenerAddr.getPort())); \n     vargs.add(attemptID.toString());                      // pass task identifier\n \n     // Finally add the jvmID\n     vargs.add(String.valueOf(jvmID.getId()));\n     vargs.add(\"1\u003e\" + getTaskLogFile(TaskLog.LogName.STDOUT));\n     vargs.add(\"2\u003e\" + getTaskLogFile(TaskLog.LogName.STDERR));\n \n     // Final commmand\n     StringBuilder mergedCommand \u003d new StringBuilder();\n     for (CharSequence str : vargs) {\n       mergedCommand.append(str).append(\" \");\n     }\n     Vector\u003cString\u003e vargsFinal \u003d new Vector\u003cString\u003e(1);\n     vargsFinal.add(mergedCommand.toString());\n     return vargsFinal;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static List\u003cString\u003e getVMCommand(\n      InetSocketAddress taskAttemptListenerAddr, Task task, \n      JVMId jvmID) {\n\n    TaskAttemptID attemptID \u003d task.getTaskID();\n    JobConf conf \u003d task.conf;\n\n    Vector\u003cString\u003e vargs \u003d new Vector\u003cString\u003e(8);\n\n    vargs.add(MRApps.crossPlatformifyMREnv(task.conf, Environment.JAVA_HOME)\n        + \"/bin/java\");\n\n    // Add child (task) java-vm options.\n    //\n    // The following symbols if present in mapred.{map|reduce}.child.java.opts \n    // value are replaced:\n    // + @taskid@ is interpolated with value of TaskID.\n    // Other occurrences of @ will not be altered.\n    //\n    // Example with multiple arguments and substitutions, showing\n    // jvm GC logging, and start of a passwordless JVM JMX agent so can\n    // connect with jconsole and the likes to watch child memory, threads\n    // and get thread dumps.\n    //\n    //  \u003cproperty\u003e\n    //    \u003cname\u003emapred.map.child.java.opts\u003c/name\u003e\n    //    \u003cvalue\u003e-Xmx 512M -verbose:gc -Xloggc:/tmp/@taskid@.gc \\\n    //           -Dcom.sun.management.jmxremote.authenticate\u003dfalse \\\n    //           -Dcom.sun.management.jmxremote.ssl\u003dfalse \\\n    //    \u003c/value\u003e\n    //  \u003c/property\u003e\n    //\n    //  \u003cproperty\u003e\n    //    \u003cname\u003emapred.reduce.child.java.opts\u003c/name\u003e\n    //    \u003cvalue\u003e-Xmx 1024M -verbose:gc -Xloggc:/tmp/@taskid@.gc \\\n    //           -Dcom.sun.management.jmxremote.authenticate\u003dfalse \\\n    //           -Dcom.sun.management.jmxremote.ssl\u003dfalse \\\n    //    \u003c/value\u003e\n    //  \u003c/property\u003e\n    //\n    String javaOpts \u003d getChildJavaOpts(conf, task.isMapTask());\n    javaOpts \u003d javaOpts.replace(\"@taskid@\", attemptID.toString());\n    String [] javaOptsSplit \u003d javaOpts.split(\" \");\n    for (int i \u003d 0; i \u003c javaOptsSplit.length; i++) {\n      vargs.add(javaOptsSplit[i]);\n    }\n\n    Path childTmpDir \u003d new Path(MRApps.crossPlatformifyMREnv(conf, Environment.PWD),\n        YarnConfiguration.DEFAULT_CONTAINER_TEMP_DIR);\n    vargs.add(\"-Djava.io.tmpdir\u003d\" + childTmpDir);\n    MRApps.addLog4jSystemProperties(task, vargs, conf);\n\n    if (conf.getProfileEnabled()) {\n      if (conf.getProfileTaskRange(task.isMapTask()\n                                   ).isIncluded(task.getPartition())) {\n        final String profileParams \u003d conf.get(task.isMapTask()\n            ? MRJobConfig.TASK_MAP_PROFILE_PARAMS\n            : MRJobConfig.TASK_REDUCE_PROFILE_PARAMS, conf.getProfileParams());\n        vargs.add(String.format(profileParams,\n            getTaskLogFile(TaskLog.LogName.PROFILE)));\n      }\n    }\n\n    // Add main class and its arguments \n    vargs.add(YarnChild.class.getName());  // main of Child\n    // pass TaskAttemptListener\u0027s address\n    vargs.add(taskAttemptListenerAddr.getAddress().getHostAddress()); \n    vargs.add(Integer.toString(taskAttemptListenerAddr.getPort())); \n    vargs.add(attemptID.toString());                      // pass task identifier\n\n    // Finally add the jvmID\n    vargs.add(String.valueOf(jvmID.getId()));\n    vargs.add(\"1\u003e\" + getTaskLogFile(TaskLog.LogName.STDOUT));\n    vargs.add(\"2\u003e\" + getTaskLogFile(TaskLog.LogName.STDERR));\n\n    // Final commmand\n    StringBuilder mergedCommand \u003d new StringBuilder();\n    for (CharSequence str : vargs) {\n      mergedCommand.append(str).append(\" \");\n    }\n    Vector\u003cString\u003e vargsFinal \u003d new Vector\u003cString\u003e(1);\n    vargsFinal.add(mergedCommand.toString());\n    return vargsFinal;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapred/MapReduceChildJVM.java",
      "extendedDetails": {}
    },
    "ed63b116465290fdb0acdf89170025f47b307599": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6052. Supported overriding the default container-log4j.properties file per job. Contributed by Junping Du.\n",
      "commitDate": "01/11/14 12:47 AM",
      "commitName": "ed63b116465290fdb0acdf89170025f47b307599",
      "commitAuthor": "Zhijie Shen",
      "commitDateOld": "15/10/14 3:22 PM",
      "commitNameOld": "0af1a2b5bc1469ba22edb63cd58f9b436b1dc4d3",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 16.39,
      "commitsBetweenForRepo": 164,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,87 +1,87 @@\n   public static List\u003cString\u003e getVMCommand(\n       InetSocketAddress taskAttemptListenerAddr, Task task, \n       JVMId jvmID) {\n \n     TaskAttemptID attemptID \u003d task.getTaskID();\n     JobConf conf \u003d task.conf;\n \n     Vector\u003cString\u003e vargs \u003d new Vector\u003cString\u003e(8);\n \n     vargs.add(MRApps.crossPlatformifyMREnv(task.conf, Environment.JAVA_HOME)\n         + \"/bin/java\");\n \n     // Add child (task) java-vm options.\n     //\n     // The following symbols if present in mapred.{map|reduce}.child.java.opts \n     // value are replaced:\n     // + @taskid@ is interpolated with value of TaskID.\n     // Other occurrences of @ will not be altered.\n     //\n     // Example with multiple arguments and substitutions, showing\n     // jvm GC logging, and start of a passwordless JVM JMX agent so can\n     // connect with jconsole and the likes to watch child memory, threads\n     // and get thread dumps.\n     //\n     //  \u003cproperty\u003e\n     //    \u003cname\u003emapred.map.child.java.opts\u003c/name\u003e\n     //    \u003cvalue\u003e-Xmx 512M -verbose:gc -Xloggc:/tmp/@taskid@.gc \\\n     //           -Dcom.sun.management.jmxremote.authenticate\u003dfalse \\\n     //           -Dcom.sun.management.jmxremote.ssl\u003dfalse \\\n     //    \u003c/value\u003e\n     //  \u003c/property\u003e\n     //\n     //  \u003cproperty\u003e\n     //    \u003cname\u003emapred.reduce.child.java.opts\u003c/name\u003e\n     //    \u003cvalue\u003e-Xmx 1024M -verbose:gc -Xloggc:/tmp/@taskid@.gc \\\n     //           -Dcom.sun.management.jmxremote.authenticate\u003dfalse \\\n     //           -Dcom.sun.management.jmxremote.ssl\u003dfalse \\\n     //    \u003c/value\u003e\n     //  \u003c/property\u003e\n     //\n     String javaOpts \u003d getChildJavaOpts(conf, task.isMapTask());\n     javaOpts \u003d javaOpts.replace(\"@taskid@\", attemptID.toString());\n     String [] javaOptsSplit \u003d javaOpts.split(\" \");\n     for (int i \u003d 0; i \u003c javaOptsSplit.length; i++) {\n       vargs.add(javaOptsSplit[i]);\n     }\n \n     Path childTmpDir \u003d new Path(MRApps.crossPlatformifyMREnv(conf, Environment.PWD),\n         YarnConfiguration.DEFAULT_CONTAINER_TEMP_DIR);\n     vargs.add(\"-Djava.io.tmpdir\u003d\" + childTmpDir);\n \n     // Setup the log4j prop\n     long logSize \u003d TaskLog.getTaskLogLength(conf);\n-    setupLog4jProperties(task, vargs, logSize);\n+    setupLog4jProperties(task, vargs, logSize, conf);\n \n     if (conf.getProfileEnabled()) {\n       if (conf.getProfileTaskRange(task.isMapTask()\n                                    ).isIncluded(task.getPartition())) {\n         final String profileParams \u003d conf.get(task.isMapTask()\n             ? MRJobConfig.TASK_MAP_PROFILE_PARAMS\n             : MRJobConfig.TASK_REDUCE_PROFILE_PARAMS, conf.getProfileParams());\n         vargs.add(String.format(profileParams,\n             getTaskLogFile(TaskLog.LogName.PROFILE)));\n       }\n     }\n \n     // Add main class and its arguments \n     vargs.add(YarnChild.class.getName());  // main of Child\n     // pass TaskAttemptListener\u0027s address\n     vargs.add(taskAttemptListenerAddr.getAddress().getHostAddress()); \n     vargs.add(Integer.toString(taskAttemptListenerAddr.getPort())); \n     vargs.add(attemptID.toString());                      // pass task identifier\n \n     // Finally add the jvmID\n     vargs.add(String.valueOf(jvmID.getId()));\n     vargs.add(\"1\u003e\" + getTaskLogFile(TaskLog.LogName.STDOUT));\n     vargs.add(\"2\u003e\" + getTaskLogFile(TaskLog.LogName.STDERR));\n \n     // Final commmand\n     StringBuilder mergedCommand \u003d new StringBuilder();\n     for (CharSequence str : vargs) {\n       mergedCommand.append(str).append(\" \");\n     }\n     Vector\u003cString\u003e vargsFinal \u003d new Vector\u003cString\u003e(1);\n     vargsFinal.add(mergedCommand.toString());\n     return vargsFinal;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static List\u003cString\u003e getVMCommand(\n      InetSocketAddress taskAttemptListenerAddr, Task task, \n      JVMId jvmID) {\n\n    TaskAttemptID attemptID \u003d task.getTaskID();\n    JobConf conf \u003d task.conf;\n\n    Vector\u003cString\u003e vargs \u003d new Vector\u003cString\u003e(8);\n\n    vargs.add(MRApps.crossPlatformifyMREnv(task.conf, Environment.JAVA_HOME)\n        + \"/bin/java\");\n\n    // Add child (task) java-vm options.\n    //\n    // The following symbols if present in mapred.{map|reduce}.child.java.opts \n    // value are replaced:\n    // + @taskid@ is interpolated with value of TaskID.\n    // Other occurrences of @ will not be altered.\n    //\n    // Example with multiple arguments and substitutions, showing\n    // jvm GC logging, and start of a passwordless JVM JMX agent so can\n    // connect with jconsole and the likes to watch child memory, threads\n    // and get thread dumps.\n    //\n    //  \u003cproperty\u003e\n    //    \u003cname\u003emapred.map.child.java.opts\u003c/name\u003e\n    //    \u003cvalue\u003e-Xmx 512M -verbose:gc -Xloggc:/tmp/@taskid@.gc \\\n    //           -Dcom.sun.management.jmxremote.authenticate\u003dfalse \\\n    //           -Dcom.sun.management.jmxremote.ssl\u003dfalse \\\n    //    \u003c/value\u003e\n    //  \u003c/property\u003e\n    //\n    //  \u003cproperty\u003e\n    //    \u003cname\u003emapred.reduce.child.java.opts\u003c/name\u003e\n    //    \u003cvalue\u003e-Xmx 1024M -verbose:gc -Xloggc:/tmp/@taskid@.gc \\\n    //           -Dcom.sun.management.jmxremote.authenticate\u003dfalse \\\n    //           -Dcom.sun.management.jmxremote.ssl\u003dfalse \\\n    //    \u003c/value\u003e\n    //  \u003c/property\u003e\n    //\n    String javaOpts \u003d getChildJavaOpts(conf, task.isMapTask());\n    javaOpts \u003d javaOpts.replace(\"@taskid@\", attemptID.toString());\n    String [] javaOptsSplit \u003d javaOpts.split(\" \");\n    for (int i \u003d 0; i \u003c javaOptsSplit.length; i++) {\n      vargs.add(javaOptsSplit[i]);\n    }\n\n    Path childTmpDir \u003d new Path(MRApps.crossPlatformifyMREnv(conf, Environment.PWD),\n        YarnConfiguration.DEFAULT_CONTAINER_TEMP_DIR);\n    vargs.add(\"-Djava.io.tmpdir\u003d\" + childTmpDir);\n\n    // Setup the log4j prop\n    long logSize \u003d TaskLog.getTaskLogLength(conf);\n    setupLog4jProperties(task, vargs, logSize, conf);\n\n    if (conf.getProfileEnabled()) {\n      if (conf.getProfileTaskRange(task.isMapTask()\n                                   ).isIncluded(task.getPartition())) {\n        final String profileParams \u003d conf.get(task.isMapTask()\n            ? MRJobConfig.TASK_MAP_PROFILE_PARAMS\n            : MRJobConfig.TASK_REDUCE_PROFILE_PARAMS, conf.getProfileParams());\n        vargs.add(String.format(profileParams,\n            getTaskLogFile(TaskLog.LogName.PROFILE)));\n      }\n    }\n\n    // Add main class and its arguments \n    vargs.add(YarnChild.class.getName());  // main of Child\n    // pass TaskAttemptListener\u0027s address\n    vargs.add(taskAttemptListenerAddr.getAddress().getHostAddress()); \n    vargs.add(Integer.toString(taskAttemptListenerAddr.getPort())); \n    vargs.add(attemptID.toString());                      // pass task identifier\n\n    // Finally add the jvmID\n    vargs.add(String.valueOf(jvmID.getId()));\n    vargs.add(\"1\u003e\" + getTaskLogFile(TaskLog.LogName.STDOUT));\n    vargs.add(\"2\u003e\" + getTaskLogFile(TaskLog.LogName.STDERR));\n\n    // Final commmand\n    StringBuilder mergedCommand \u003d new StringBuilder();\n    for (CharSequence str : vargs) {\n      mergedCommand.append(str).append(\" \");\n    }\n    Vector\u003cString\u003e vargsFinal \u003d new Vector\u003cString\u003e(1);\n    vargsFinal.add(mergedCommand.toString());\n    return vargsFinal;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapred/MapReduceChildJVM.java",
      "extendedDetails": {}
    },
    "0af1a2b5bc1469ba22edb63cd58f9b436b1dc4d3": {
      "type": "Yparameterchange",
      "commitMessage": "YARN-2312. Deprecated old ContainerId#getId API and updated MapReduce to use ContainerId#getContainerId instead. Contributed by Tsuyoshi OZAWA\n",
      "commitDate": "15/10/14 3:22 PM",
      "commitName": "0af1a2b5bc1469ba22edb63cd58f9b436b1dc4d3",
      "commitAuthor": "Jian He",
      "commitDateOld": "21/03/14 5:32 PM",
      "commitNameOld": "8a06949df87fe22b3a16080bc7b4155ad6f13895",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 207.91,
      "commitsBetweenForRepo": 1654,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,87 +1,87 @@\n   public static List\u003cString\u003e getVMCommand(\n       InetSocketAddress taskAttemptListenerAddr, Task task, \n-      ID jvmID) {\n+      JVMId jvmID) {\n \n     TaskAttemptID attemptID \u003d task.getTaskID();\n     JobConf conf \u003d task.conf;\n \n     Vector\u003cString\u003e vargs \u003d new Vector\u003cString\u003e(8);\n \n     vargs.add(MRApps.crossPlatformifyMREnv(task.conf, Environment.JAVA_HOME)\n         + \"/bin/java\");\n \n     // Add child (task) java-vm options.\n     //\n     // The following symbols if present in mapred.{map|reduce}.child.java.opts \n     // value are replaced:\n     // + @taskid@ is interpolated with value of TaskID.\n     // Other occurrences of @ will not be altered.\n     //\n     // Example with multiple arguments and substitutions, showing\n     // jvm GC logging, and start of a passwordless JVM JMX agent so can\n     // connect with jconsole and the likes to watch child memory, threads\n     // and get thread dumps.\n     //\n     //  \u003cproperty\u003e\n     //    \u003cname\u003emapred.map.child.java.opts\u003c/name\u003e\n     //    \u003cvalue\u003e-Xmx 512M -verbose:gc -Xloggc:/tmp/@taskid@.gc \\\n     //           -Dcom.sun.management.jmxremote.authenticate\u003dfalse \\\n     //           -Dcom.sun.management.jmxremote.ssl\u003dfalse \\\n     //    \u003c/value\u003e\n     //  \u003c/property\u003e\n     //\n     //  \u003cproperty\u003e\n     //    \u003cname\u003emapred.reduce.child.java.opts\u003c/name\u003e\n     //    \u003cvalue\u003e-Xmx 1024M -verbose:gc -Xloggc:/tmp/@taskid@.gc \\\n     //           -Dcom.sun.management.jmxremote.authenticate\u003dfalse \\\n     //           -Dcom.sun.management.jmxremote.ssl\u003dfalse \\\n     //    \u003c/value\u003e\n     //  \u003c/property\u003e\n     //\n     String javaOpts \u003d getChildJavaOpts(conf, task.isMapTask());\n     javaOpts \u003d javaOpts.replace(\"@taskid@\", attemptID.toString());\n     String [] javaOptsSplit \u003d javaOpts.split(\" \");\n     for (int i \u003d 0; i \u003c javaOptsSplit.length; i++) {\n       vargs.add(javaOptsSplit[i]);\n     }\n \n     Path childTmpDir \u003d new Path(MRApps.crossPlatformifyMREnv(conf, Environment.PWD),\n         YarnConfiguration.DEFAULT_CONTAINER_TEMP_DIR);\n     vargs.add(\"-Djava.io.tmpdir\u003d\" + childTmpDir);\n \n     // Setup the log4j prop\n     long logSize \u003d TaskLog.getTaskLogLength(conf);\n     setupLog4jProperties(task, vargs, logSize);\n \n     if (conf.getProfileEnabled()) {\n       if (conf.getProfileTaskRange(task.isMapTask()\n                                    ).isIncluded(task.getPartition())) {\n         final String profileParams \u003d conf.get(task.isMapTask()\n             ? MRJobConfig.TASK_MAP_PROFILE_PARAMS\n             : MRJobConfig.TASK_REDUCE_PROFILE_PARAMS, conf.getProfileParams());\n         vargs.add(String.format(profileParams,\n             getTaskLogFile(TaskLog.LogName.PROFILE)));\n       }\n     }\n \n     // Add main class and its arguments \n     vargs.add(YarnChild.class.getName());  // main of Child\n     // pass TaskAttemptListener\u0027s address\n     vargs.add(taskAttemptListenerAddr.getAddress().getHostAddress()); \n     vargs.add(Integer.toString(taskAttemptListenerAddr.getPort())); \n     vargs.add(attemptID.toString());                      // pass task identifier\n \n     // Finally add the jvmID\n     vargs.add(String.valueOf(jvmID.getId()));\n     vargs.add(\"1\u003e\" + getTaskLogFile(TaskLog.LogName.STDOUT));\n     vargs.add(\"2\u003e\" + getTaskLogFile(TaskLog.LogName.STDERR));\n \n     // Final commmand\n     StringBuilder mergedCommand \u003d new StringBuilder();\n     for (CharSequence str : vargs) {\n       mergedCommand.append(str).append(\" \");\n     }\n     Vector\u003cString\u003e vargsFinal \u003d new Vector\u003cString\u003e(1);\n     vargsFinal.add(mergedCommand.toString());\n     return vargsFinal;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static List\u003cString\u003e getVMCommand(\n      InetSocketAddress taskAttemptListenerAddr, Task task, \n      JVMId jvmID) {\n\n    TaskAttemptID attemptID \u003d task.getTaskID();\n    JobConf conf \u003d task.conf;\n\n    Vector\u003cString\u003e vargs \u003d new Vector\u003cString\u003e(8);\n\n    vargs.add(MRApps.crossPlatformifyMREnv(task.conf, Environment.JAVA_HOME)\n        + \"/bin/java\");\n\n    // Add child (task) java-vm options.\n    //\n    // The following symbols if present in mapred.{map|reduce}.child.java.opts \n    // value are replaced:\n    // + @taskid@ is interpolated with value of TaskID.\n    // Other occurrences of @ will not be altered.\n    //\n    // Example with multiple arguments and substitutions, showing\n    // jvm GC logging, and start of a passwordless JVM JMX agent so can\n    // connect with jconsole and the likes to watch child memory, threads\n    // and get thread dumps.\n    //\n    //  \u003cproperty\u003e\n    //    \u003cname\u003emapred.map.child.java.opts\u003c/name\u003e\n    //    \u003cvalue\u003e-Xmx 512M -verbose:gc -Xloggc:/tmp/@taskid@.gc \\\n    //           -Dcom.sun.management.jmxremote.authenticate\u003dfalse \\\n    //           -Dcom.sun.management.jmxremote.ssl\u003dfalse \\\n    //    \u003c/value\u003e\n    //  \u003c/property\u003e\n    //\n    //  \u003cproperty\u003e\n    //    \u003cname\u003emapred.reduce.child.java.opts\u003c/name\u003e\n    //    \u003cvalue\u003e-Xmx 1024M -verbose:gc -Xloggc:/tmp/@taskid@.gc \\\n    //           -Dcom.sun.management.jmxremote.authenticate\u003dfalse \\\n    //           -Dcom.sun.management.jmxremote.ssl\u003dfalse \\\n    //    \u003c/value\u003e\n    //  \u003c/property\u003e\n    //\n    String javaOpts \u003d getChildJavaOpts(conf, task.isMapTask());\n    javaOpts \u003d javaOpts.replace(\"@taskid@\", attemptID.toString());\n    String [] javaOptsSplit \u003d javaOpts.split(\" \");\n    for (int i \u003d 0; i \u003c javaOptsSplit.length; i++) {\n      vargs.add(javaOptsSplit[i]);\n    }\n\n    Path childTmpDir \u003d new Path(MRApps.crossPlatformifyMREnv(conf, Environment.PWD),\n        YarnConfiguration.DEFAULT_CONTAINER_TEMP_DIR);\n    vargs.add(\"-Djava.io.tmpdir\u003d\" + childTmpDir);\n\n    // Setup the log4j prop\n    long logSize \u003d TaskLog.getTaskLogLength(conf);\n    setupLog4jProperties(task, vargs, logSize);\n\n    if (conf.getProfileEnabled()) {\n      if (conf.getProfileTaskRange(task.isMapTask()\n                                   ).isIncluded(task.getPartition())) {\n        final String profileParams \u003d conf.get(task.isMapTask()\n            ? MRJobConfig.TASK_MAP_PROFILE_PARAMS\n            : MRJobConfig.TASK_REDUCE_PROFILE_PARAMS, conf.getProfileParams());\n        vargs.add(String.format(profileParams,\n            getTaskLogFile(TaskLog.LogName.PROFILE)));\n      }\n    }\n\n    // Add main class and its arguments \n    vargs.add(YarnChild.class.getName());  // main of Child\n    // pass TaskAttemptListener\u0027s address\n    vargs.add(taskAttemptListenerAddr.getAddress().getHostAddress()); \n    vargs.add(Integer.toString(taskAttemptListenerAddr.getPort())); \n    vargs.add(attemptID.toString());                      // pass task identifier\n\n    // Finally add the jvmID\n    vargs.add(String.valueOf(jvmID.getId()));\n    vargs.add(\"1\u003e\" + getTaskLogFile(TaskLog.LogName.STDOUT));\n    vargs.add(\"2\u003e\" + getTaskLogFile(TaskLog.LogName.STDERR));\n\n    // Final commmand\n    StringBuilder mergedCommand \u003d new StringBuilder();\n    for (CharSequence str : vargs) {\n      mergedCommand.append(str).append(\" \");\n    }\n    Vector\u003cString\u003e vargsFinal \u003d new Vector\u003cString\u003e(1);\n    vargsFinal.add(mergedCommand.toString());\n    return vargsFinal;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapred/MapReduceChildJVM.java",
      "extendedDetails": {
        "oldValue": "[taskAttemptListenerAddr-InetSocketAddress, task-Task, jvmID-ID]",
        "newValue": "[taskAttemptListenerAddr-InetSocketAddress, task-Task, jvmID-JVMId]"
      }
    },
    "96e0ca2d272dc7ecd7f7f0e65a0c596fcc063bcb": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1824. Improved NodeManager and clients to be able to handle cross platform application submissions. Contributed by Jian He.\nMAPREDUCE-4052. Improved MapReduce clients to use NodeManagers\u0027 ability to handle cross platform application submissions. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1578135 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/03/14 11:32 AM",
      "commitName": "96e0ca2d272dc7ecd7f7f0e65a0c596fcc063bcb",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/01/14 9:43 AM",
      "commitNameOld": "f667371746de02c52434af6e48f3e2a4f83917ac",
      "commitAuthorOld": "Sanford Ryza",
      "daysBetweenCommits": 58.03,
      "commitsBetweenForRepo": 506,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,86 +1,87 @@\n   public static List\u003cString\u003e getVMCommand(\n       InetSocketAddress taskAttemptListenerAddr, Task task, \n       ID jvmID) {\n \n     TaskAttemptID attemptID \u003d task.getTaskID();\n     JobConf conf \u003d task.conf;\n \n     Vector\u003cString\u003e vargs \u003d new Vector\u003cString\u003e(8);\n \n-    vargs.add(Environment.JAVA_HOME.$() + \"/bin/java\");\n+    vargs.add(MRApps.crossPlatformifyMREnv(task.conf, Environment.JAVA_HOME)\n+        + \"/bin/java\");\n \n     // Add child (task) java-vm options.\n     //\n     // The following symbols if present in mapred.{map|reduce}.child.java.opts \n     // value are replaced:\n     // + @taskid@ is interpolated with value of TaskID.\n     // Other occurrences of @ will not be altered.\n     //\n     // Example with multiple arguments and substitutions, showing\n     // jvm GC logging, and start of a passwordless JVM JMX agent so can\n     // connect with jconsole and the likes to watch child memory, threads\n     // and get thread dumps.\n     //\n     //  \u003cproperty\u003e\n     //    \u003cname\u003emapred.map.child.java.opts\u003c/name\u003e\n     //    \u003cvalue\u003e-Xmx 512M -verbose:gc -Xloggc:/tmp/@taskid@.gc \\\n     //           -Dcom.sun.management.jmxremote.authenticate\u003dfalse \\\n     //           -Dcom.sun.management.jmxremote.ssl\u003dfalse \\\n     //    \u003c/value\u003e\n     //  \u003c/property\u003e\n     //\n     //  \u003cproperty\u003e\n     //    \u003cname\u003emapred.reduce.child.java.opts\u003c/name\u003e\n     //    \u003cvalue\u003e-Xmx 1024M -verbose:gc -Xloggc:/tmp/@taskid@.gc \\\n     //           -Dcom.sun.management.jmxremote.authenticate\u003dfalse \\\n     //           -Dcom.sun.management.jmxremote.ssl\u003dfalse \\\n     //    \u003c/value\u003e\n     //  \u003c/property\u003e\n     //\n     String javaOpts \u003d getChildJavaOpts(conf, task.isMapTask());\n     javaOpts \u003d javaOpts.replace(\"@taskid@\", attemptID.toString());\n     String [] javaOptsSplit \u003d javaOpts.split(\" \");\n     for (int i \u003d 0; i \u003c javaOptsSplit.length; i++) {\n       vargs.add(javaOptsSplit[i]);\n     }\n \n-    Path childTmpDir \u003d new Path(Environment.PWD.$(),\n+    Path childTmpDir \u003d new Path(MRApps.crossPlatformifyMREnv(conf, Environment.PWD),\n         YarnConfiguration.DEFAULT_CONTAINER_TEMP_DIR);\n     vargs.add(\"-Djava.io.tmpdir\u003d\" + childTmpDir);\n \n     // Setup the log4j prop\n     long logSize \u003d TaskLog.getTaskLogLength(conf);\n     setupLog4jProperties(task, vargs, logSize);\n \n     if (conf.getProfileEnabled()) {\n       if (conf.getProfileTaskRange(task.isMapTask()\n                                    ).isIncluded(task.getPartition())) {\n         final String profileParams \u003d conf.get(task.isMapTask()\n             ? MRJobConfig.TASK_MAP_PROFILE_PARAMS\n             : MRJobConfig.TASK_REDUCE_PROFILE_PARAMS, conf.getProfileParams());\n         vargs.add(String.format(profileParams,\n             getTaskLogFile(TaskLog.LogName.PROFILE)));\n       }\n     }\n \n     // Add main class and its arguments \n     vargs.add(YarnChild.class.getName());  // main of Child\n     // pass TaskAttemptListener\u0027s address\n     vargs.add(taskAttemptListenerAddr.getAddress().getHostAddress()); \n     vargs.add(Integer.toString(taskAttemptListenerAddr.getPort())); \n     vargs.add(attemptID.toString());                      // pass task identifier\n \n     // Finally add the jvmID\n     vargs.add(String.valueOf(jvmID.getId()));\n     vargs.add(\"1\u003e\" + getTaskLogFile(TaskLog.LogName.STDOUT));\n     vargs.add(\"2\u003e\" + getTaskLogFile(TaskLog.LogName.STDERR));\n \n     // Final commmand\n     StringBuilder mergedCommand \u003d new StringBuilder();\n     for (CharSequence str : vargs) {\n       mergedCommand.append(str).append(\" \");\n     }\n     Vector\u003cString\u003e vargsFinal \u003d new Vector\u003cString\u003e(1);\n     vargsFinal.add(mergedCommand.toString());\n     return vargsFinal;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static List\u003cString\u003e getVMCommand(\n      InetSocketAddress taskAttemptListenerAddr, Task task, \n      ID jvmID) {\n\n    TaskAttemptID attemptID \u003d task.getTaskID();\n    JobConf conf \u003d task.conf;\n\n    Vector\u003cString\u003e vargs \u003d new Vector\u003cString\u003e(8);\n\n    vargs.add(MRApps.crossPlatformifyMREnv(task.conf, Environment.JAVA_HOME)\n        + \"/bin/java\");\n\n    // Add child (task) java-vm options.\n    //\n    // The following symbols if present in mapred.{map|reduce}.child.java.opts \n    // value are replaced:\n    // + @taskid@ is interpolated with value of TaskID.\n    // Other occurrences of @ will not be altered.\n    //\n    // Example with multiple arguments and substitutions, showing\n    // jvm GC logging, and start of a passwordless JVM JMX agent so can\n    // connect with jconsole and the likes to watch child memory, threads\n    // and get thread dumps.\n    //\n    //  \u003cproperty\u003e\n    //    \u003cname\u003emapred.map.child.java.opts\u003c/name\u003e\n    //    \u003cvalue\u003e-Xmx 512M -verbose:gc -Xloggc:/tmp/@taskid@.gc \\\n    //           -Dcom.sun.management.jmxremote.authenticate\u003dfalse \\\n    //           -Dcom.sun.management.jmxremote.ssl\u003dfalse \\\n    //    \u003c/value\u003e\n    //  \u003c/property\u003e\n    //\n    //  \u003cproperty\u003e\n    //    \u003cname\u003emapred.reduce.child.java.opts\u003c/name\u003e\n    //    \u003cvalue\u003e-Xmx 1024M -verbose:gc -Xloggc:/tmp/@taskid@.gc \\\n    //           -Dcom.sun.management.jmxremote.authenticate\u003dfalse \\\n    //           -Dcom.sun.management.jmxremote.ssl\u003dfalse \\\n    //    \u003c/value\u003e\n    //  \u003c/property\u003e\n    //\n    String javaOpts \u003d getChildJavaOpts(conf, task.isMapTask());\n    javaOpts \u003d javaOpts.replace(\"@taskid@\", attemptID.toString());\n    String [] javaOptsSplit \u003d javaOpts.split(\" \");\n    for (int i \u003d 0; i \u003c javaOptsSplit.length; i++) {\n      vargs.add(javaOptsSplit[i]);\n    }\n\n    Path childTmpDir \u003d new Path(MRApps.crossPlatformifyMREnv(conf, Environment.PWD),\n        YarnConfiguration.DEFAULT_CONTAINER_TEMP_DIR);\n    vargs.add(\"-Djava.io.tmpdir\u003d\" + childTmpDir);\n\n    // Setup the log4j prop\n    long logSize \u003d TaskLog.getTaskLogLength(conf);\n    setupLog4jProperties(task, vargs, logSize);\n\n    if (conf.getProfileEnabled()) {\n      if (conf.getProfileTaskRange(task.isMapTask()\n                                   ).isIncluded(task.getPartition())) {\n        final String profileParams \u003d conf.get(task.isMapTask()\n            ? MRJobConfig.TASK_MAP_PROFILE_PARAMS\n            : MRJobConfig.TASK_REDUCE_PROFILE_PARAMS, conf.getProfileParams());\n        vargs.add(String.format(profileParams,\n            getTaskLogFile(TaskLog.LogName.PROFILE)));\n      }\n    }\n\n    // Add main class and its arguments \n    vargs.add(YarnChild.class.getName());  // main of Child\n    // pass TaskAttemptListener\u0027s address\n    vargs.add(taskAttemptListenerAddr.getAddress().getHostAddress()); \n    vargs.add(Integer.toString(taskAttemptListenerAddr.getPort())); \n    vargs.add(attemptID.toString());                      // pass task identifier\n\n    // Finally add the jvmID\n    vargs.add(String.valueOf(jvmID.getId()));\n    vargs.add(\"1\u003e\" + getTaskLogFile(TaskLog.LogName.STDOUT));\n    vargs.add(\"2\u003e\" + getTaskLogFile(TaskLog.LogName.STDERR));\n\n    // Final commmand\n    StringBuilder mergedCommand \u003d new StringBuilder();\n    for (CharSequence str : vargs) {\n      mergedCommand.append(str).append(\" \");\n    }\n    Vector\u003cString\u003e vargsFinal \u003d new Vector\u003cString\u003e(1);\n    vargsFinal.add(mergedCommand.toString());\n    return vargsFinal;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapred/MapReduceChildJVM.java",
      "extendedDetails": {}
    },
    "f667371746de02c52434af6e48f3e2a4f83917ac": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5650. Job fails when hprof mapreduce.task.profile.map/reduce.params is specified (Gera Shegalov via Sandy Ryza)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1559201 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/01/14 9:43 AM",
      "commitName": "f667371746de02c52434af6e48f3e2a4f83917ac",
      "commitAuthor": "Sanford Ryza",
      "commitDateOld": "16/01/14 2:56 PM",
      "commitNameOld": "a6ea460a9150e84128ebef97ab6ea8881215de03",
      "commitAuthorOld": "Jason Darrell Lowe",
      "daysBetweenCommits": 0.78,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,94 +1,86 @@\n   public static List\u003cString\u003e getVMCommand(\n       InetSocketAddress taskAttemptListenerAddr, Task task, \n       ID jvmID) {\n \n     TaskAttemptID attemptID \u003d task.getTaskID();\n     JobConf conf \u003d task.conf;\n \n     Vector\u003cString\u003e vargs \u003d new Vector\u003cString\u003e(8);\n \n     vargs.add(Environment.JAVA_HOME.$() + \"/bin/java\");\n \n     // Add child (task) java-vm options.\n     //\n     // The following symbols if present in mapred.{map|reduce}.child.java.opts \n     // value are replaced:\n     // + @taskid@ is interpolated with value of TaskID.\n     // Other occurrences of @ will not be altered.\n     //\n     // Example with multiple arguments and substitutions, showing\n     // jvm GC logging, and start of a passwordless JVM JMX agent so can\n     // connect with jconsole and the likes to watch child memory, threads\n     // and get thread dumps.\n     //\n     //  \u003cproperty\u003e\n     //    \u003cname\u003emapred.map.child.java.opts\u003c/name\u003e\n     //    \u003cvalue\u003e-Xmx 512M -verbose:gc -Xloggc:/tmp/@taskid@.gc \\\n     //           -Dcom.sun.management.jmxremote.authenticate\u003dfalse \\\n     //           -Dcom.sun.management.jmxremote.ssl\u003dfalse \\\n     //    \u003c/value\u003e\n     //  \u003c/property\u003e\n     //\n     //  \u003cproperty\u003e\n     //    \u003cname\u003emapred.reduce.child.java.opts\u003c/name\u003e\n     //    \u003cvalue\u003e-Xmx 1024M -verbose:gc -Xloggc:/tmp/@taskid@.gc \\\n     //           -Dcom.sun.management.jmxremote.authenticate\u003dfalse \\\n     //           -Dcom.sun.management.jmxremote.ssl\u003dfalse \\\n     //    \u003c/value\u003e\n     //  \u003c/property\u003e\n     //\n     String javaOpts \u003d getChildJavaOpts(conf, task.isMapTask());\n     javaOpts \u003d javaOpts.replace(\"@taskid@\", attemptID.toString());\n     String [] javaOptsSplit \u003d javaOpts.split(\" \");\n     for (int i \u003d 0; i \u003c javaOptsSplit.length; i++) {\n       vargs.add(javaOptsSplit[i]);\n     }\n \n     Path childTmpDir \u003d new Path(Environment.PWD.$(),\n         YarnConfiguration.DEFAULT_CONTAINER_TEMP_DIR);\n     vargs.add(\"-Djava.io.tmpdir\u003d\" + childTmpDir);\n \n     // Setup the log4j prop\n     long logSize \u003d TaskLog.getTaskLogLength(conf);\n     setupLog4jProperties(task, vargs, logSize);\n \n     if (conf.getProfileEnabled()) {\n       if (conf.getProfileTaskRange(task.isMapTask()\n                                    ).isIncluded(task.getPartition())) {\n-        vargs.add(\n-            String.format(\n-                conf.getProfileParams(), \n-                getTaskLogFile(TaskLog.LogName.PROFILE)\n-                )\n-            );\n-        if (task.isMapTask()) {\n-          vargs.add(conf.get(MRJobConfig.TASK_MAP_PROFILE_PARAMS, \"\"));\n-        }\n-        else {\n-          vargs.add(conf.get(MRJobConfig.TASK_REDUCE_PROFILE_PARAMS, \"\"));\n-        }\n-        \n+        final String profileParams \u003d conf.get(task.isMapTask()\n+            ? MRJobConfig.TASK_MAP_PROFILE_PARAMS\n+            : MRJobConfig.TASK_REDUCE_PROFILE_PARAMS, conf.getProfileParams());\n+        vargs.add(String.format(profileParams,\n+            getTaskLogFile(TaskLog.LogName.PROFILE)));\n       }\n     }\n \n     // Add main class and its arguments \n     vargs.add(YarnChild.class.getName());  // main of Child\n     // pass TaskAttemptListener\u0027s address\n     vargs.add(taskAttemptListenerAddr.getAddress().getHostAddress()); \n     vargs.add(Integer.toString(taskAttemptListenerAddr.getPort())); \n     vargs.add(attemptID.toString());                      // pass task identifier\n \n     // Finally add the jvmID\n     vargs.add(String.valueOf(jvmID.getId()));\n     vargs.add(\"1\u003e\" + getTaskLogFile(TaskLog.LogName.STDOUT));\n     vargs.add(\"2\u003e\" + getTaskLogFile(TaskLog.LogName.STDERR));\n \n     // Final commmand\n     StringBuilder mergedCommand \u003d new StringBuilder();\n     for (CharSequence str : vargs) {\n       mergedCommand.append(str).append(\" \");\n     }\n     Vector\u003cString\u003e vargsFinal \u003d new Vector\u003cString\u003e(1);\n     vargsFinal.add(mergedCommand.toString());\n     return vargsFinal;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static List\u003cString\u003e getVMCommand(\n      InetSocketAddress taskAttemptListenerAddr, Task task, \n      ID jvmID) {\n\n    TaskAttemptID attemptID \u003d task.getTaskID();\n    JobConf conf \u003d task.conf;\n\n    Vector\u003cString\u003e vargs \u003d new Vector\u003cString\u003e(8);\n\n    vargs.add(Environment.JAVA_HOME.$() + \"/bin/java\");\n\n    // Add child (task) java-vm options.\n    //\n    // The following symbols if present in mapred.{map|reduce}.child.java.opts \n    // value are replaced:\n    // + @taskid@ is interpolated with value of TaskID.\n    // Other occurrences of @ will not be altered.\n    //\n    // Example with multiple arguments and substitutions, showing\n    // jvm GC logging, and start of a passwordless JVM JMX agent so can\n    // connect with jconsole and the likes to watch child memory, threads\n    // and get thread dumps.\n    //\n    //  \u003cproperty\u003e\n    //    \u003cname\u003emapred.map.child.java.opts\u003c/name\u003e\n    //    \u003cvalue\u003e-Xmx 512M -verbose:gc -Xloggc:/tmp/@taskid@.gc \\\n    //           -Dcom.sun.management.jmxremote.authenticate\u003dfalse \\\n    //           -Dcom.sun.management.jmxremote.ssl\u003dfalse \\\n    //    \u003c/value\u003e\n    //  \u003c/property\u003e\n    //\n    //  \u003cproperty\u003e\n    //    \u003cname\u003emapred.reduce.child.java.opts\u003c/name\u003e\n    //    \u003cvalue\u003e-Xmx 1024M -verbose:gc -Xloggc:/tmp/@taskid@.gc \\\n    //           -Dcom.sun.management.jmxremote.authenticate\u003dfalse \\\n    //           -Dcom.sun.management.jmxremote.ssl\u003dfalse \\\n    //    \u003c/value\u003e\n    //  \u003c/property\u003e\n    //\n    String javaOpts \u003d getChildJavaOpts(conf, task.isMapTask());\n    javaOpts \u003d javaOpts.replace(\"@taskid@\", attemptID.toString());\n    String [] javaOptsSplit \u003d javaOpts.split(\" \");\n    for (int i \u003d 0; i \u003c javaOptsSplit.length; i++) {\n      vargs.add(javaOptsSplit[i]);\n    }\n\n    Path childTmpDir \u003d new Path(Environment.PWD.$(),\n        YarnConfiguration.DEFAULT_CONTAINER_TEMP_DIR);\n    vargs.add(\"-Djava.io.tmpdir\u003d\" + childTmpDir);\n\n    // Setup the log4j prop\n    long logSize \u003d TaskLog.getTaskLogLength(conf);\n    setupLog4jProperties(task, vargs, logSize);\n\n    if (conf.getProfileEnabled()) {\n      if (conf.getProfileTaskRange(task.isMapTask()\n                                   ).isIncluded(task.getPartition())) {\n        final String profileParams \u003d conf.get(task.isMapTask()\n            ? MRJobConfig.TASK_MAP_PROFILE_PARAMS\n            : MRJobConfig.TASK_REDUCE_PROFILE_PARAMS, conf.getProfileParams());\n        vargs.add(String.format(profileParams,\n            getTaskLogFile(TaskLog.LogName.PROFILE)));\n      }\n    }\n\n    // Add main class and its arguments \n    vargs.add(YarnChild.class.getName());  // main of Child\n    // pass TaskAttemptListener\u0027s address\n    vargs.add(taskAttemptListenerAddr.getAddress().getHostAddress()); \n    vargs.add(Integer.toString(taskAttemptListenerAddr.getPort())); \n    vargs.add(attemptID.toString());                      // pass task identifier\n\n    // Finally add the jvmID\n    vargs.add(String.valueOf(jvmID.getId()));\n    vargs.add(\"1\u003e\" + getTaskLogFile(TaskLog.LogName.STDOUT));\n    vargs.add(\"2\u003e\" + getTaskLogFile(TaskLog.LogName.STDERR));\n\n    // Final commmand\n    StringBuilder mergedCommand \u003d new StringBuilder();\n    for (CharSequence str : vargs) {\n      mergedCommand.append(str).append(\" \");\n    }\n    Vector\u003cString\u003e vargsFinal \u003d new Vector\u003cString\u003e(1);\n    vargsFinal.add(mergedCommand.toString());\n    return vargsFinal;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapred/MapReduceChildJVM.java",
      "extendedDetails": {}
    },
    "638801cce16fc1dc3259c541dc30a599faaddda1": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-8952. Enhancements to support Hadoop on Windows Server and Windows Azure environments. Contributed by Ivan Mitic, Chuan Liu, Ramya Sunil, Bikas Saha, Kanna Karanam, John Gordon, Brandon Li, Chris Nauroth, David Lao, Sumadhur Reddy Bolli, Arpit Agarwal, Ahmed El Baz, Mike Liddell, Jing Zhao, Thejas Nair, Steve Maine, Ganeshan Iyer, Raja Aluri, Giridharan Kesavan, Ramya Bharathi Nimmagadda.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1453486 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/03/13 11:15 AM",
      "commitName": "638801cce16fc1dc3259c541dc30a599faaddda1",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "30/01/12 6:23 PM",
      "commitNameOld": "76b653a36738a4f420f14c53c7a0a4006dbf066e",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 400.7,
      "commitsBetweenForRepo": 2319,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,95 +1,94 @@\n   public static List\u003cString\u003e getVMCommand(\n       InetSocketAddress taskAttemptListenerAddr, Task task, \n       ID jvmID) {\n \n     TaskAttemptID attemptID \u003d task.getTaskID();\n     JobConf conf \u003d task.conf;\n \n     Vector\u003cString\u003e vargs \u003d new Vector\u003cString\u003e(8);\n \n-    vargs.add(\"exec\");\n     vargs.add(Environment.JAVA_HOME.$() + \"/bin/java\");\n \n     // Add child (task) java-vm options.\n     //\n     // The following symbols if present in mapred.{map|reduce}.child.java.opts \n     // value are replaced:\n     // + @taskid@ is interpolated with value of TaskID.\n     // Other occurrences of @ will not be altered.\n     //\n     // Example with multiple arguments and substitutions, showing\n     // jvm GC logging, and start of a passwordless JVM JMX agent so can\n     // connect with jconsole and the likes to watch child memory, threads\n     // and get thread dumps.\n     //\n     //  \u003cproperty\u003e\n     //    \u003cname\u003emapred.map.child.java.opts\u003c/name\u003e\n     //    \u003cvalue\u003e-Xmx 512M -verbose:gc -Xloggc:/tmp/@taskid@.gc \\\n     //           -Dcom.sun.management.jmxremote.authenticate\u003dfalse \\\n     //           -Dcom.sun.management.jmxremote.ssl\u003dfalse \\\n     //    \u003c/value\u003e\n     //  \u003c/property\u003e\n     //\n     //  \u003cproperty\u003e\n     //    \u003cname\u003emapred.reduce.child.java.opts\u003c/name\u003e\n     //    \u003cvalue\u003e-Xmx 1024M -verbose:gc -Xloggc:/tmp/@taskid@.gc \\\n     //           -Dcom.sun.management.jmxremote.authenticate\u003dfalse \\\n     //           -Dcom.sun.management.jmxremote.ssl\u003dfalse \\\n     //    \u003c/value\u003e\n     //  \u003c/property\u003e\n     //\n     String javaOpts \u003d getChildJavaOpts(conf, task.isMapTask());\n     javaOpts \u003d javaOpts.replace(\"@taskid@\", attemptID.toString());\n     String [] javaOptsSplit \u003d javaOpts.split(\" \");\n     for (int i \u003d 0; i \u003c javaOptsSplit.length; i++) {\n       vargs.add(javaOptsSplit[i]);\n     }\n \n     Path childTmpDir \u003d new Path(Environment.PWD.$(),\n         YarnConfiguration.DEFAULT_CONTAINER_TEMP_DIR);\n     vargs.add(\"-Djava.io.tmpdir\u003d\" + childTmpDir);\n \n     // Setup the log4j prop\n     long logSize \u003d TaskLog.getTaskLogLength(conf);\n     setupLog4jProperties(task, vargs, logSize);\n \n     if (conf.getProfileEnabled()) {\n       if (conf.getProfileTaskRange(task.isMapTask()\n                                    ).isIncluded(task.getPartition())) {\n         vargs.add(\n             String.format(\n                 conf.getProfileParams(), \n                 getTaskLogFile(TaskLog.LogName.PROFILE)\n                 )\n             );\n         if (task.isMapTask()) {\n           vargs.add(conf.get(MRJobConfig.TASK_MAP_PROFILE_PARAMS, \"\"));\n         }\n         else {\n           vargs.add(conf.get(MRJobConfig.TASK_REDUCE_PROFILE_PARAMS, \"\"));\n         }\n         \n       }\n     }\n \n     // Add main class and its arguments \n     vargs.add(YarnChild.class.getName());  // main of Child\n     // pass TaskAttemptListener\u0027s address\n     vargs.add(taskAttemptListenerAddr.getAddress().getHostAddress()); \n     vargs.add(Integer.toString(taskAttemptListenerAddr.getPort())); \n     vargs.add(attemptID.toString());                      // pass task identifier\n \n     // Finally add the jvmID\n     vargs.add(String.valueOf(jvmID.getId()));\n     vargs.add(\"1\u003e\" + getTaskLogFile(TaskLog.LogName.STDOUT));\n     vargs.add(\"2\u003e\" + getTaskLogFile(TaskLog.LogName.STDERR));\n \n     // Final commmand\n     StringBuilder mergedCommand \u003d new StringBuilder();\n     for (CharSequence str : vargs) {\n       mergedCommand.append(str).append(\" \");\n     }\n     Vector\u003cString\u003e vargsFinal \u003d new Vector\u003cString\u003e(1);\n     vargsFinal.add(mergedCommand.toString());\n     return vargsFinal;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static List\u003cString\u003e getVMCommand(\n      InetSocketAddress taskAttemptListenerAddr, Task task, \n      ID jvmID) {\n\n    TaskAttemptID attemptID \u003d task.getTaskID();\n    JobConf conf \u003d task.conf;\n\n    Vector\u003cString\u003e vargs \u003d new Vector\u003cString\u003e(8);\n\n    vargs.add(Environment.JAVA_HOME.$() + \"/bin/java\");\n\n    // Add child (task) java-vm options.\n    //\n    // The following symbols if present in mapred.{map|reduce}.child.java.opts \n    // value are replaced:\n    // + @taskid@ is interpolated with value of TaskID.\n    // Other occurrences of @ will not be altered.\n    //\n    // Example with multiple arguments and substitutions, showing\n    // jvm GC logging, and start of a passwordless JVM JMX agent so can\n    // connect with jconsole and the likes to watch child memory, threads\n    // and get thread dumps.\n    //\n    //  \u003cproperty\u003e\n    //    \u003cname\u003emapred.map.child.java.opts\u003c/name\u003e\n    //    \u003cvalue\u003e-Xmx 512M -verbose:gc -Xloggc:/tmp/@taskid@.gc \\\n    //           -Dcom.sun.management.jmxremote.authenticate\u003dfalse \\\n    //           -Dcom.sun.management.jmxremote.ssl\u003dfalse \\\n    //    \u003c/value\u003e\n    //  \u003c/property\u003e\n    //\n    //  \u003cproperty\u003e\n    //    \u003cname\u003emapred.reduce.child.java.opts\u003c/name\u003e\n    //    \u003cvalue\u003e-Xmx 1024M -verbose:gc -Xloggc:/tmp/@taskid@.gc \\\n    //           -Dcom.sun.management.jmxremote.authenticate\u003dfalse \\\n    //           -Dcom.sun.management.jmxremote.ssl\u003dfalse \\\n    //    \u003c/value\u003e\n    //  \u003c/property\u003e\n    //\n    String javaOpts \u003d getChildJavaOpts(conf, task.isMapTask());\n    javaOpts \u003d javaOpts.replace(\"@taskid@\", attemptID.toString());\n    String [] javaOptsSplit \u003d javaOpts.split(\" \");\n    for (int i \u003d 0; i \u003c javaOptsSplit.length; i++) {\n      vargs.add(javaOptsSplit[i]);\n    }\n\n    Path childTmpDir \u003d new Path(Environment.PWD.$(),\n        YarnConfiguration.DEFAULT_CONTAINER_TEMP_DIR);\n    vargs.add(\"-Djava.io.tmpdir\u003d\" + childTmpDir);\n\n    // Setup the log4j prop\n    long logSize \u003d TaskLog.getTaskLogLength(conf);\n    setupLog4jProperties(task, vargs, logSize);\n\n    if (conf.getProfileEnabled()) {\n      if (conf.getProfileTaskRange(task.isMapTask()\n                                   ).isIncluded(task.getPartition())) {\n        vargs.add(\n            String.format(\n                conf.getProfileParams(), \n                getTaskLogFile(TaskLog.LogName.PROFILE)\n                )\n            );\n        if (task.isMapTask()) {\n          vargs.add(conf.get(MRJobConfig.TASK_MAP_PROFILE_PARAMS, \"\"));\n        }\n        else {\n          vargs.add(conf.get(MRJobConfig.TASK_REDUCE_PROFILE_PARAMS, \"\"));\n        }\n        \n      }\n    }\n\n    // Add main class and its arguments \n    vargs.add(YarnChild.class.getName());  // main of Child\n    // pass TaskAttemptListener\u0027s address\n    vargs.add(taskAttemptListenerAddr.getAddress().getHostAddress()); \n    vargs.add(Integer.toString(taskAttemptListenerAddr.getPort())); \n    vargs.add(attemptID.toString());                      // pass task identifier\n\n    // Finally add the jvmID\n    vargs.add(String.valueOf(jvmID.getId()));\n    vargs.add(\"1\u003e\" + getTaskLogFile(TaskLog.LogName.STDOUT));\n    vargs.add(\"2\u003e\" + getTaskLogFile(TaskLog.LogName.STDERR));\n\n    // Final commmand\n    StringBuilder mergedCommand \u003d new StringBuilder();\n    for (CharSequence str : vargs) {\n      mergedCommand.append(str).append(\" \");\n    }\n    Vector\u003cString\u003e vargsFinal \u003d new Vector\u003cString\u003e(1);\n    vargsFinal.add(mergedCommand.toString());\n    return vargsFinal;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapred/MapReduceChildJVM.java",
      "extendedDetails": {}
    },
    "76b653a36738a4f420f14c53c7a0a4006dbf066e": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3716. Fixing YARN+MR to allow MR jobs to be able to use java.io.File.createTempFile to create temporary files as part of their tasks. Contributed by Jonathan Eagles.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1238136 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/01/12 6:23 PM",
      "commitName": "76b653a36738a4f420f14c53c7a0a4006dbf066e",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "04/01/12 5:29 PM",
      "commitNameOld": "0870734787d7005d85697549eab5b6479d97d453",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 26.04,
      "commitsBetweenForRepo": 133,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,94 +1,95 @@\n   public static List\u003cString\u003e getVMCommand(\n       InetSocketAddress taskAttemptListenerAddr, Task task, \n       ID jvmID) {\n \n     TaskAttemptID attemptID \u003d task.getTaskID();\n     JobConf conf \u003d task.conf;\n \n     Vector\u003cString\u003e vargs \u003d new Vector\u003cString\u003e(8);\n \n     vargs.add(\"exec\");\n     vargs.add(Environment.JAVA_HOME.$() + \"/bin/java\");\n \n     // Add child (task) java-vm options.\n     //\n     // The following symbols if present in mapred.{map|reduce}.child.java.opts \n     // value are replaced:\n     // + @taskid@ is interpolated with value of TaskID.\n     // Other occurrences of @ will not be altered.\n     //\n     // Example with multiple arguments and substitutions, showing\n     // jvm GC logging, and start of a passwordless JVM JMX agent so can\n     // connect with jconsole and the likes to watch child memory, threads\n     // and get thread dumps.\n     //\n     //  \u003cproperty\u003e\n     //    \u003cname\u003emapred.map.child.java.opts\u003c/name\u003e\n     //    \u003cvalue\u003e-Xmx 512M -verbose:gc -Xloggc:/tmp/@taskid@.gc \\\n     //           -Dcom.sun.management.jmxremote.authenticate\u003dfalse \\\n     //           -Dcom.sun.management.jmxremote.ssl\u003dfalse \\\n     //    \u003c/value\u003e\n     //  \u003c/property\u003e\n     //\n     //  \u003cproperty\u003e\n     //    \u003cname\u003emapred.reduce.child.java.opts\u003c/name\u003e\n     //    \u003cvalue\u003e-Xmx 1024M -verbose:gc -Xloggc:/tmp/@taskid@.gc \\\n     //           -Dcom.sun.management.jmxremote.authenticate\u003dfalse \\\n     //           -Dcom.sun.management.jmxremote.ssl\u003dfalse \\\n     //    \u003c/value\u003e\n     //  \u003c/property\u003e\n     //\n     String javaOpts \u003d getChildJavaOpts(conf, task.isMapTask());\n     javaOpts \u003d javaOpts.replace(\"@taskid@\", attemptID.toString());\n     String [] javaOptsSplit \u003d javaOpts.split(\" \");\n     for (int i \u003d 0; i \u003c javaOptsSplit.length; i++) {\n       vargs.add(javaOptsSplit[i]);\n     }\n \n-    String childTmpDir \u003d Environment.PWD.$() + Path.SEPARATOR + \"tmp\";\n+    Path childTmpDir \u003d new Path(Environment.PWD.$(),\n+        YarnConfiguration.DEFAULT_CONTAINER_TEMP_DIR);\n     vargs.add(\"-Djava.io.tmpdir\u003d\" + childTmpDir);\n \n     // Setup the log4j prop\n     long logSize \u003d TaskLog.getTaskLogLength(conf);\n     setupLog4jProperties(task, vargs, logSize);\n \n     if (conf.getProfileEnabled()) {\n       if (conf.getProfileTaskRange(task.isMapTask()\n                                    ).isIncluded(task.getPartition())) {\n         vargs.add(\n             String.format(\n                 conf.getProfileParams(), \n                 getTaskLogFile(TaskLog.LogName.PROFILE)\n                 )\n             );\n         if (task.isMapTask()) {\n           vargs.add(conf.get(MRJobConfig.TASK_MAP_PROFILE_PARAMS, \"\"));\n         }\n         else {\n           vargs.add(conf.get(MRJobConfig.TASK_REDUCE_PROFILE_PARAMS, \"\"));\n         }\n         \n       }\n     }\n \n     // Add main class and its arguments \n     vargs.add(YarnChild.class.getName());  // main of Child\n     // pass TaskAttemptListener\u0027s address\n     vargs.add(taskAttemptListenerAddr.getAddress().getHostAddress()); \n     vargs.add(Integer.toString(taskAttemptListenerAddr.getPort())); \n     vargs.add(attemptID.toString());                      // pass task identifier\n \n     // Finally add the jvmID\n     vargs.add(String.valueOf(jvmID.getId()));\n     vargs.add(\"1\u003e\" + getTaskLogFile(TaskLog.LogName.STDOUT));\n     vargs.add(\"2\u003e\" + getTaskLogFile(TaskLog.LogName.STDERR));\n \n     // Final commmand\n     StringBuilder mergedCommand \u003d new StringBuilder();\n     for (CharSequence str : vargs) {\n       mergedCommand.append(str).append(\" \");\n     }\n     Vector\u003cString\u003e vargsFinal \u003d new Vector\u003cString\u003e(1);\n     vargsFinal.add(mergedCommand.toString());\n     return vargsFinal;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static List\u003cString\u003e getVMCommand(\n      InetSocketAddress taskAttemptListenerAddr, Task task, \n      ID jvmID) {\n\n    TaskAttemptID attemptID \u003d task.getTaskID();\n    JobConf conf \u003d task.conf;\n\n    Vector\u003cString\u003e vargs \u003d new Vector\u003cString\u003e(8);\n\n    vargs.add(\"exec\");\n    vargs.add(Environment.JAVA_HOME.$() + \"/bin/java\");\n\n    // Add child (task) java-vm options.\n    //\n    // The following symbols if present in mapred.{map|reduce}.child.java.opts \n    // value are replaced:\n    // + @taskid@ is interpolated with value of TaskID.\n    // Other occurrences of @ will not be altered.\n    //\n    // Example with multiple arguments and substitutions, showing\n    // jvm GC logging, and start of a passwordless JVM JMX agent so can\n    // connect with jconsole and the likes to watch child memory, threads\n    // and get thread dumps.\n    //\n    //  \u003cproperty\u003e\n    //    \u003cname\u003emapred.map.child.java.opts\u003c/name\u003e\n    //    \u003cvalue\u003e-Xmx 512M -verbose:gc -Xloggc:/tmp/@taskid@.gc \\\n    //           -Dcom.sun.management.jmxremote.authenticate\u003dfalse \\\n    //           -Dcom.sun.management.jmxremote.ssl\u003dfalse \\\n    //    \u003c/value\u003e\n    //  \u003c/property\u003e\n    //\n    //  \u003cproperty\u003e\n    //    \u003cname\u003emapred.reduce.child.java.opts\u003c/name\u003e\n    //    \u003cvalue\u003e-Xmx 1024M -verbose:gc -Xloggc:/tmp/@taskid@.gc \\\n    //           -Dcom.sun.management.jmxremote.authenticate\u003dfalse \\\n    //           -Dcom.sun.management.jmxremote.ssl\u003dfalse \\\n    //    \u003c/value\u003e\n    //  \u003c/property\u003e\n    //\n    String javaOpts \u003d getChildJavaOpts(conf, task.isMapTask());\n    javaOpts \u003d javaOpts.replace(\"@taskid@\", attemptID.toString());\n    String [] javaOptsSplit \u003d javaOpts.split(\" \");\n    for (int i \u003d 0; i \u003c javaOptsSplit.length; i++) {\n      vargs.add(javaOptsSplit[i]);\n    }\n\n    Path childTmpDir \u003d new Path(Environment.PWD.$(),\n        YarnConfiguration.DEFAULT_CONTAINER_TEMP_DIR);\n    vargs.add(\"-Djava.io.tmpdir\u003d\" + childTmpDir);\n\n    // Setup the log4j prop\n    long logSize \u003d TaskLog.getTaskLogLength(conf);\n    setupLog4jProperties(task, vargs, logSize);\n\n    if (conf.getProfileEnabled()) {\n      if (conf.getProfileTaskRange(task.isMapTask()\n                                   ).isIncluded(task.getPartition())) {\n        vargs.add(\n            String.format(\n                conf.getProfileParams(), \n                getTaskLogFile(TaskLog.LogName.PROFILE)\n                )\n            );\n        if (task.isMapTask()) {\n          vargs.add(conf.get(MRJobConfig.TASK_MAP_PROFILE_PARAMS, \"\"));\n        }\n        else {\n          vargs.add(conf.get(MRJobConfig.TASK_REDUCE_PROFILE_PARAMS, \"\"));\n        }\n        \n      }\n    }\n\n    // Add main class and its arguments \n    vargs.add(YarnChild.class.getName());  // main of Child\n    // pass TaskAttemptListener\u0027s address\n    vargs.add(taskAttemptListenerAddr.getAddress().getHostAddress()); \n    vargs.add(Integer.toString(taskAttemptListenerAddr.getPort())); \n    vargs.add(attemptID.toString());                      // pass task identifier\n\n    // Finally add the jvmID\n    vargs.add(String.valueOf(jvmID.getId()));\n    vargs.add(\"1\u003e\" + getTaskLogFile(TaskLog.LogName.STDOUT));\n    vargs.add(\"2\u003e\" + getTaskLogFile(TaskLog.LogName.STDERR));\n\n    // Final commmand\n    StringBuilder mergedCommand \u003d new StringBuilder();\n    for (CharSequence str : vargs) {\n      mergedCommand.append(str).append(\" \");\n    }\n    Vector\u003cString\u003e vargsFinal \u003d new Vector\u003cString\u003e(1);\n    vargsFinal.add(mergedCommand.toString());\n    return vargsFinal;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapred/MapReduceChildJVM.java",
      "extendedDetails": {}
    },
    "b7ae5a6cb7b2d3e3112ac53007e984caeb07de58": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3426. Fixed MR AM in uber mode to write map intermediate outputs in the correct directory to work properly in secure mode. Contributed by Hitesh Shah.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1213987 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/12/11 3:35 PM",
      "commitName": "b7ae5a6cb7b2d3e3112ac53007e984caeb07de58",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "24/10/11 1:41 AM",
      "commitNameOld": "408656614495674992349fbda3981559ada3de0b",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 50.62,
      "commitsBetweenForRepo": 347,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,87 +1,94 @@\n   public static List\u003cString\u003e getVMCommand(\n       InetSocketAddress taskAttemptListenerAddr, Task task, \n       ID jvmID) {\n \n     TaskAttemptID attemptID \u003d task.getTaskID();\n     JobConf conf \u003d task.conf;\n \n     Vector\u003cString\u003e vargs \u003d new Vector\u003cString\u003e(8);\n \n     vargs.add(\"exec\");\n     vargs.add(Environment.JAVA_HOME.$() + \"/bin/java\");\n \n     // Add child (task) java-vm options.\n     //\n     // The following symbols if present in mapred.{map|reduce}.child.java.opts \n     // value are replaced:\n     // + @taskid@ is interpolated with value of TaskID.\n     // Other occurrences of @ will not be altered.\n     //\n     // Example with multiple arguments and substitutions, showing\n     // jvm GC logging, and start of a passwordless JVM JMX agent so can\n     // connect with jconsole and the likes to watch child memory, threads\n     // and get thread dumps.\n     //\n     //  \u003cproperty\u003e\n     //    \u003cname\u003emapred.map.child.java.opts\u003c/name\u003e\n     //    \u003cvalue\u003e-Xmx 512M -verbose:gc -Xloggc:/tmp/@taskid@.gc \\\n     //           -Dcom.sun.management.jmxremote.authenticate\u003dfalse \\\n     //           -Dcom.sun.management.jmxremote.ssl\u003dfalse \\\n     //    \u003c/value\u003e\n     //  \u003c/property\u003e\n     //\n     //  \u003cproperty\u003e\n     //    \u003cname\u003emapred.reduce.child.java.opts\u003c/name\u003e\n     //    \u003cvalue\u003e-Xmx 1024M -verbose:gc -Xloggc:/tmp/@taskid@.gc \\\n     //           -Dcom.sun.management.jmxremote.authenticate\u003dfalse \\\n     //           -Dcom.sun.management.jmxremote.ssl\u003dfalse \\\n     //    \u003c/value\u003e\n     //  \u003c/property\u003e\n     //\n     String javaOpts \u003d getChildJavaOpts(conf, task.isMapTask());\n     javaOpts \u003d javaOpts.replace(\"@taskid@\", attemptID.toString());\n     String [] javaOptsSplit \u003d javaOpts.split(\" \");\n     for (int i \u003d 0; i \u003c javaOptsSplit.length; i++) {\n       vargs.add(javaOptsSplit[i]);\n     }\n \n     String childTmpDir \u003d Environment.PWD.$() + Path.SEPARATOR + \"tmp\";\n     vargs.add(\"-Djava.io.tmpdir\u003d\" + childTmpDir);\n \n     // Setup the log4j prop\n     long logSize \u003d TaskLog.getTaskLogLength(conf);\n     setupLog4jProperties(task, vargs, logSize);\n \n     if (conf.getProfileEnabled()) {\n       if (conf.getProfileTaskRange(task.isMapTask()\n                                    ).isIncluded(task.getPartition())) {\n         vargs.add(\n             String.format(\n                 conf.getProfileParams(), \n                 getTaskLogFile(TaskLog.LogName.PROFILE)\n                 )\n             );\n+        if (task.isMapTask()) {\n+          vargs.add(conf.get(MRJobConfig.TASK_MAP_PROFILE_PARAMS, \"\"));\n+        }\n+        else {\n+          vargs.add(conf.get(MRJobConfig.TASK_REDUCE_PROFILE_PARAMS, \"\"));\n+        }\n+        \n       }\n     }\n \n     // Add main class and its arguments \n     vargs.add(YarnChild.class.getName());  // main of Child\n     // pass TaskAttemptListener\u0027s address\n     vargs.add(taskAttemptListenerAddr.getAddress().getHostAddress()); \n     vargs.add(Integer.toString(taskAttemptListenerAddr.getPort())); \n     vargs.add(attemptID.toString());                      // pass task identifier\n \n     // Finally add the jvmID\n     vargs.add(String.valueOf(jvmID.getId()));\n     vargs.add(\"1\u003e\" + getTaskLogFile(TaskLog.LogName.STDOUT));\n     vargs.add(\"2\u003e\" + getTaskLogFile(TaskLog.LogName.STDERR));\n \n     // Final commmand\n     StringBuilder mergedCommand \u003d new StringBuilder();\n     for (CharSequence str : vargs) {\n       mergedCommand.append(str).append(\" \");\n     }\n     Vector\u003cString\u003e vargsFinal \u003d new Vector\u003cString\u003e(1);\n     vargsFinal.add(mergedCommand.toString());\n     return vargsFinal;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static List\u003cString\u003e getVMCommand(\n      InetSocketAddress taskAttemptListenerAddr, Task task, \n      ID jvmID) {\n\n    TaskAttemptID attemptID \u003d task.getTaskID();\n    JobConf conf \u003d task.conf;\n\n    Vector\u003cString\u003e vargs \u003d new Vector\u003cString\u003e(8);\n\n    vargs.add(\"exec\");\n    vargs.add(Environment.JAVA_HOME.$() + \"/bin/java\");\n\n    // Add child (task) java-vm options.\n    //\n    // The following symbols if present in mapred.{map|reduce}.child.java.opts \n    // value are replaced:\n    // + @taskid@ is interpolated with value of TaskID.\n    // Other occurrences of @ will not be altered.\n    //\n    // Example with multiple arguments and substitutions, showing\n    // jvm GC logging, and start of a passwordless JVM JMX agent so can\n    // connect with jconsole and the likes to watch child memory, threads\n    // and get thread dumps.\n    //\n    //  \u003cproperty\u003e\n    //    \u003cname\u003emapred.map.child.java.opts\u003c/name\u003e\n    //    \u003cvalue\u003e-Xmx 512M -verbose:gc -Xloggc:/tmp/@taskid@.gc \\\n    //           -Dcom.sun.management.jmxremote.authenticate\u003dfalse \\\n    //           -Dcom.sun.management.jmxremote.ssl\u003dfalse \\\n    //    \u003c/value\u003e\n    //  \u003c/property\u003e\n    //\n    //  \u003cproperty\u003e\n    //    \u003cname\u003emapred.reduce.child.java.opts\u003c/name\u003e\n    //    \u003cvalue\u003e-Xmx 1024M -verbose:gc -Xloggc:/tmp/@taskid@.gc \\\n    //           -Dcom.sun.management.jmxremote.authenticate\u003dfalse \\\n    //           -Dcom.sun.management.jmxremote.ssl\u003dfalse \\\n    //    \u003c/value\u003e\n    //  \u003c/property\u003e\n    //\n    String javaOpts \u003d getChildJavaOpts(conf, task.isMapTask());\n    javaOpts \u003d javaOpts.replace(\"@taskid@\", attemptID.toString());\n    String [] javaOptsSplit \u003d javaOpts.split(\" \");\n    for (int i \u003d 0; i \u003c javaOptsSplit.length; i++) {\n      vargs.add(javaOptsSplit[i]);\n    }\n\n    String childTmpDir \u003d Environment.PWD.$() + Path.SEPARATOR + \"tmp\";\n    vargs.add(\"-Djava.io.tmpdir\u003d\" + childTmpDir);\n\n    // Setup the log4j prop\n    long logSize \u003d TaskLog.getTaskLogLength(conf);\n    setupLog4jProperties(task, vargs, logSize);\n\n    if (conf.getProfileEnabled()) {\n      if (conf.getProfileTaskRange(task.isMapTask()\n                                   ).isIncluded(task.getPartition())) {\n        vargs.add(\n            String.format(\n                conf.getProfileParams(), \n                getTaskLogFile(TaskLog.LogName.PROFILE)\n                )\n            );\n        if (task.isMapTask()) {\n          vargs.add(conf.get(MRJobConfig.TASK_MAP_PROFILE_PARAMS, \"\"));\n        }\n        else {\n          vargs.add(conf.get(MRJobConfig.TASK_REDUCE_PROFILE_PARAMS, \"\"));\n        }\n        \n      }\n    }\n\n    // Add main class and its arguments \n    vargs.add(YarnChild.class.getName());  // main of Child\n    // pass TaskAttemptListener\u0027s address\n    vargs.add(taskAttemptListenerAddr.getAddress().getHostAddress()); \n    vargs.add(Integer.toString(taskAttemptListenerAddr.getPort())); \n    vargs.add(attemptID.toString());                      // pass task identifier\n\n    // Finally add the jvmID\n    vargs.add(String.valueOf(jvmID.getId()));\n    vargs.add(\"1\u003e\" + getTaskLogFile(TaskLog.LogName.STDOUT));\n    vargs.add(\"2\u003e\" + getTaskLogFile(TaskLog.LogName.STDERR));\n\n    // Final commmand\n    StringBuilder mergedCommand \u003d new StringBuilder();\n    for (CharSequence str : vargs) {\n      mergedCommand.append(str).append(\" \");\n    }\n    Vector\u003cString\u003e vargsFinal \u003d new Vector\u003cString\u003e(1);\n    vargsFinal.add(mergedCommand.toString());\n    return vargsFinal;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapred/MapReduceChildJVM.java",
      "extendedDetails": {}
    },
    "ab787f44aabfff0cd01b79a08a52ffaf923558b3": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3165. Ensure logging options are set correctly for MR AM and tasks. Contributed by Todd Lipcon. \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1185887 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/10/11 2:45 PM",
      "commitName": "ab787f44aabfff0cd01b79a08a52ffaf923558b3",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "17/10/11 6:22 PM",
      "commitNameOld": "c1d90772b6e38bb4e4be7ed75cb5d34f3048ad7b",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.85,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,87 +1,87 @@\n   public static List\u003cString\u003e getVMCommand(\n       InetSocketAddress taskAttemptListenerAddr, Task task, \n       ID jvmID) {\n \n     TaskAttemptID attemptID \u003d task.getTaskID();\n     JobConf conf \u003d task.conf;\n \n     Vector\u003cString\u003e vargs \u003d new Vector\u003cString\u003e(8);\n \n     vargs.add(\"exec\");\n     vargs.add(Environment.JAVA_HOME.$() + \"/bin/java\");\n \n     // Add child (task) java-vm options.\n     //\n     // The following symbols if present in mapred.{map|reduce}.child.java.opts \n     // value are replaced:\n     // + @taskid@ is interpolated with value of TaskID.\n     // Other occurrences of @ will not be altered.\n     //\n     // Example with multiple arguments and substitutions, showing\n     // jvm GC logging, and start of a passwordless JVM JMX agent so can\n     // connect with jconsole and the likes to watch child memory, threads\n     // and get thread dumps.\n     //\n     //  \u003cproperty\u003e\n     //    \u003cname\u003emapred.map.child.java.opts\u003c/name\u003e\n     //    \u003cvalue\u003e-Xmx 512M -verbose:gc -Xloggc:/tmp/@taskid@.gc \\\n     //           -Dcom.sun.management.jmxremote.authenticate\u003dfalse \\\n     //           -Dcom.sun.management.jmxremote.ssl\u003dfalse \\\n     //    \u003c/value\u003e\n     //  \u003c/property\u003e\n     //\n     //  \u003cproperty\u003e\n     //    \u003cname\u003emapred.reduce.child.java.opts\u003c/name\u003e\n     //    \u003cvalue\u003e-Xmx 1024M -verbose:gc -Xloggc:/tmp/@taskid@.gc \\\n     //           -Dcom.sun.management.jmxremote.authenticate\u003dfalse \\\n     //           -Dcom.sun.management.jmxremote.ssl\u003dfalse \\\n     //    \u003c/value\u003e\n     //  \u003c/property\u003e\n     //\n     String javaOpts \u003d getChildJavaOpts(conf, task.isMapTask());\n     javaOpts \u003d javaOpts.replace(\"@taskid@\", attemptID.toString());\n     String [] javaOptsSplit \u003d javaOpts.split(\" \");\n     for (int i \u003d 0; i \u003c javaOptsSplit.length; i++) {\n       vargs.add(javaOptsSplit[i]);\n     }\n \n     String childTmpDir \u003d Environment.PWD.$() + Path.SEPARATOR + \"tmp\";\n     vargs.add(\"-Djava.io.tmpdir\u003d\" + childTmpDir);\n \n     // Setup the log4j prop\n     long logSize \u003d TaskLog.getTaskLogLength(conf);\n-    setupLog4jProperties(vargs, logSize);\n+    setupLog4jProperties(task, vargs, logSize);\n \n     if (conf.getProfileEnabled()) {\n       if (conf.getProfileTaskRange(task.isMapTask()\n                                    ).isIncluded(task.getPartition())) {\n         vargs.add(\n             String.format(\n                 conf.getProfileParams(), \n                 getTaskLogFile(TaskLog.LogName.PROFILE)\n                 )\n             );\n       }\n     }\n \n     // Add main class and its arguments \n     vargs.add(YarnChild.class.getName());  // main of Child\n     // pass TaskAttemptListener\u0027s address\n     vargs.add(taskAttemptListenerAddr.getAddress().getHostAddress()); \n     vargs.add(Integer.toString(taskAttemptListenerAddr.getPort())); \n     vargs.add(attemptID.toString());                      // pass task identifier\n \n     // Finally add the jvmID\n     vargs.add(String.valueOf(jvmID.getId()));\n     vargs.add(\"1\u003e\" + getTaskLogFile(TaskLog.LogName.STDOUT));\n     vargs.add(\"2\u003e\" + getTaskLogFile(TaskLog.LogName.STDERR));\n \n     // Final commmand\n     StringBuilder mergedCommand \u003d new StringBuilder();\n     for (CharSequence str : vargs) {\n       mergedCommand.append(str).append(\" \");\n     }\n     Vector\u003cString\u003e vargsFinal \u003d new Vector\u003cString\u003e(1);\n     vargsFinal.add(mergedCommand.toString());\n     return vargsFinal;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static List\u003cString\u003e getVMCommand(\n      InetSocketAddress taskAttemptListenerAddr, Task task, \n      ID jvmID) {\n\n    TaskAttemptID attemptID \u003d task.getTaskID();\n    JobConf conf \u003d task.conf;\n\n    Vector\u003cString\u003e vargs \u003d new Vector\u003cString\u003e(8);\n\n    vargs.add(\"exec\");\n    vargs.add(Environment.JAVA_HOME.$() + \"/bin/java\");\n\n    // Add child (task) java-vm options.\n    //\n    // The following symbols if present in mapred.{map|reduce}.child.java.opts \n    // value are replaced:\n    // + @taskid@ is interpolated with value of TaskID.\n    // Other occurrences of @ will not be altered.\n    //\n    // Example with multiple arguments and substitutions, showing\n    // jvm GC logging, and start of a passwordless JVM JMX agent so can\n    // connect with jconsole and the likes to watch child memory, threads\n    // and get thread dumps.\n    //\n    //  \u003cproperty\u003e\n    //    \u003cname\u003emapred.map.child.java.opts\u003c/name\u003e\n    //    \u003cvalue\u003e-Xmx 512M -verbose:gc -Xloggc:/tmp/@taskid@.gc \\\n    //           -Dcom.sun.management.jmxremote.authenticate\u003dfalse \\\n    //           -Dcom.sun.management.jmxremote.ssl\u003dfalse \\\n    //    \u003c/value\u003e\n    //  \u003c/property\u003e\n    //\n    //  \u003cproperty\u003e\n    //    \u003cname\u003emapred.reduce.child.java.opts\u003c/name\u003e\n    //    \u003cvalue\u003e-Xmx 1024M -verbose:gc -Xloggc:/tmp/@taskid@.gc \\\n    //           -Dcom.sun.management.jmxremote.authenticate\u003dfalse \\\n    //           -Dcom.sun.management.jmxremote.ssl\u003dfalse \\\n    //    \u003c/value\u003e\n    //  \u003c/property\u003e\n    //\n    String javaOpts \u003d getChildJavaOpts(conf, task.isMapTask());\n    javaOpts \u003d javaOpts.replace(\"@taskid@\", attemptID.toString());\n    String [] javaOptsSplit \u003d javaOpts.split(\" \");\n    for (int i \u003d 0; i \u003c javaOptsSplit.length; i++) {\n      vargs.add(javaOptsSplit[i]);\n    }\n\n    String childTmpDir \u003d Environment.PWD.$() + Path.SEPARATOR + \"tmp\";\n    vargs.add(\"-Djava.io.tmpdir\u003d\" + childTmpDir);\n\n    // Setup the log4j prop\n    long logSize \u003d TaskLog.getTaskLogLength(conf);\n    setupLog4jProperties(task, vargs, logSize);\n\n    if (conf.getProfileEnabled()) {\n      if (conf.getProfileTaskRange(task.isMapTask()\n                                   ).isIncluded(task.getPartition())) {\n        vargs.add(\n            String.format(\n                conf.getProfileParams(), \n                getTaskLogFile(TaskLog.LogName.PROFILE)\n                )\n            );\n      }\n    }\n\n    // Add main class and its arguments \n    vargs.add(YarnChild.class.getName());  // main of Child\n    // pass TaskAttemptListener\u0027s address\n    vargs.add(taskAttemptListenerAddr.getAddress().getHostAddress()); \n    vargs.add(Integer.toString(taskAttemptListenerAddr.getPort())); \n    vargs.add(attemptID.toString());                      // pass task identifier\n\n    // Finally add the jvmID\n    vargs.add(String.valueOf(jvmID.getId()));\n    vargs.add(\"1\u003e\" + getTaskLogFile(TaskLog.LogName.STDOUT));\n    vargs.add(\"2\u003e\" + getTaskLogFile(TaskLog.LogName.STDERR));\n\n    // Final commmand\n    StringBuilder mergedCommand \u003d new StringBuilder();\n    for (CharSequence str : vargs) {\n      mergedCommand.append(str).append(\" \");\n    }\n    Vector\u003cString\u003e vargsFinal \u003d new Vector\u003cString\u003e(1);\n    vargsFinal.add(mergedCommand.toString());\n    return vargsFinal;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapred/MapReduceChildJVM.java",
      "extendedDetails": {}
    },
    "4806d7ba74c668817ea6f35421c559eaf57a997e": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2754. Fixed MR AM stdout, stderr and syslog to redirect to correct log-files. Contributed by Ravi Teja Ch N V.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1174194 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/09/11 8:14 AM",
      "commitName": "4806d7ba74c668817ea6f35421c559eaf57a997e",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "21/09/11 4:52 PM",
      "commitNameOld": "3557202a92ff9efcd34dbe60ed31d75a4a33326e",
      "commitAuthorOld": "Mahadev Konar",
      "daysBetweenCommits": 0.64,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,87 +1,87 @@\n   public static List\u003cString\u003e getVMCommand(\n       InetSocketAddress taskAttemptListenerAddr, Task task, \n       ID jvmID) {\n \n     TaskAttemptID attemptID \u003d task.getTaskID();\n     JobConf conf \u003d task.conf;\n \n     Vector\u003cString\u003e vargs \u003d new Vector\u003cString\u003e(8);\n \n     vargs.add(\"exec\");\n     vargs.add(Environment.JAVA_HOME.$() + \"/bin/java\");\n \n     // Add child (task) java-vm options.\n     //\n     // The following symbols if present in mapred.{map|reduce}.child.java.opts \n     // value are replaced:\n     // + @taskid@ is interpolated with value of TaskID.\n     // Other occurrences of @ will not be altered.\n     //\n     // Example with multiple arguments and substitutions, showing\n     // jvm GC logging, and start of a passwordless JVM JMX agent so can\n     // connect with jconsole and the likes to watch child memory, threads\n     // and get thread dumps.\n     //\n     //  \u003cproperty\u003e\n     //    \u003cname\u003emapred.map.child.java.opts\u003c/name\u003e\n     //    \u003cvalue\u003e-Xmx 512M -verbose:gc -Xloggc:/tmp/@taskid@.gc \\\n     //           -Dcom.sun.management.jmxremote.authenticate\u003dfalse \\\n     //           -Dcom.sun.management.jmxremote.ssl\u003dfalse \\\n     //    \u003c/value\u003e\n     //  \u003c/property\u003e\n     //\n     //  \u003cproperty\u003e\n     //    \u003cname\u003emapred.reduce.child.java.opts\u003c/name\u003e\n     //    \u003cvalue\u003e-Xmx 1024M -verbose:gc -Xloggc:/tmp/@taskid@.gc \\\n     //           -Dcom.sun.management.jmxremote.authenticate\u003dfalse \\\n     //           -Dcom.sun.management.jmxremote.ssl\u003dfalse \\\n     //    \u003c/value\u003e\n     //  \u003c/property\u003e\n     //\n     String javaOpts \u003d getChildJavaOpts(conf, task.isMapTask());\n     javaOpts \u003d javaOpts.replace(\"@taskid@\", attemptID.toString());\n     String [] javaOptsSplit \u003d javaOpts.split(\" \");\n     for (int i \u003d 0; i \u003c javaOptsSplit.length; i++) {\n       vargs.add(javaOptsSplit[i]);\n     }\n \n     String childTmpDir \u003d Environment.PWD.$() + Path.SEPARATOR + \"tmp\";\n     vargs.add(\"-Djava.io.tmpdir\u003d\" + childTmpDir);\n \n     // Setup the log4j prop\n     long logSize \u003d TaskLog.getTaskLogLength(conf);\n     setupLog4jProperties(vargs, logSize);\n \n     if (conf.getProfileEnabled()) {\n       if (conf.getProfileTaskRange(task.isMapTask()\n                                    ).isIncluded(task.getPartition())) {\n         vargs.add(\n             String.format(\n                 conf.getProfileParams(), \n                 getTaskLogFile(TaskLog.LogName.PROFILE)\n                 )\n             );\n       }\n     }\n \n     // Add main class and its arguments \n     vargs.add(YarnChild.class.getName());  // main of Child\n     // pass TaskAttemptListener\u0027s address\n     vargs.add(taskAttemptListenerAddr.getAddress().getHostAddress()); \n     vargs.add(Integer.toString(taskAttemptListenerAddr.getPort())); \n     vargs.add(attemptID.toString());                      // pass task identifier\n \n     // Finally add the jvmID\n     vargs.add(String.valueOf(jvmID.getId()));\n-    vargs.add(\"1\u003e\" + getTaskLogFile(TaskLog.LogName.STDERR));\n-    vargs.add(\"2\u003e\" + getTaskLogFile(TaskLog.LogName.STDOUT));\n+    vargs.add(\"1\u003e\" + getTaskLogFile(TaskLog.LogName.STDOUT));\n+    vargs.add(\"2\u003e\" + getTaskLogFile(TaskLog.LogName.STDERR));\n \n     // Final commmand\n     StringBuilder mergedCommand \u003d new StringBuilder();\n     for (CharSequence str : vargs) {\n       mergedCommand.append(str).append(\" \");\n     }\n     Vector\u003cString\u003e vargsFinal \u003d new Vector\u003cString\u003e(1);\n     vargsFinal.add(mergedCommand.toString());\n     return vargsFinal;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static List\u003cString\u003e getVMCommand(\n      InetSocketAddress taskAttemptListenerAddr, Task task, \n      ID jvmID) {\n\n    TaskAttemptID attemptID \u003d task.getTaskID();\n    JobConf conf \u003d task.conf;\n\n    Vector\u003cString\u003e vargs \u003d new Vector\u003cString\u003e(8);\n\n    vargs.add(\"exec\");\n    vargs.add(Environment.JAVA_HOME.$() + \"/bin/java\");\n\n    // Add child (task) java-vm options.\n    //\n    // The following symbols if present in mapred.{map|reduce}.child.java.opts \n    // value are replaced:\n    // + @taskid@ is interpolated with value of TaskID.\n    // Other occurrences of @ will not be altered.\n    //\n    // Example with multiple arguments and substitutions, showing\n    // jvm GC logging, and start of a passwordless JVM JMX agent so can\n    // connect with jconsole and the likes to watch child memory, threads\n    // and get thread dumps.\n    //\n    //  \u003cproperty\u003e\n    //    \u003cname\u003emapred.map.child.java.opts\u003c/name\u003e\n    //    \u003cvalue\u003e-Xmx 512M -verbose:gc -Xloggc:/tmp/@taskid@.gc \\\n    //           -Dcom.sun.management.jmxremote.authenticate\u003dfalse \\\n    //           -Dcom.sun.management.jmxremote.ssl\u003dfalse \\\n    //    \u003c/value\u003e\n    //  \u003c/property\u003e\n    //\n    //  \u003cproperty\u003e\n    //    \u003cname\u003emapred.reduce.child.java.opts\u003c/name\u003e\n    //    \u003cvalue\u003e-Xmx 1024M -verbose:gc -Xloggc:/tmp/@taskid@.gc \\\n    //           -Dcom.sun.management.jmxremote.authenticate\u003dfalse \\\n    //           -Dcom.sun.management.jmxremote.ssl\u003dfalse \\\n    //    \u003c/value\u003e\n    //  \u003c/property\u003e\n    //\n    String javaOpts \u003d getChildJavaOpts(conf, task.isMapTask());\n    javaOpts \u003d javaOpts.replace(\"@taskid@\", attemptID.toString());\n    String [] javaOptsSplit \u003d javaOpts.split(\" \");\n    for (int i \u003d 0; i \u003c javaOptsSplit.length; i++) {\n      vargs.add(javaOptsSplit[i]);\n    }\n\n    String childTmpDir \u003d Environment.PWD.$() + Path.SEPARATOR + \"tmp\";\n    vargs.add(\"-Djava.io.tmpdir\u003d\" + childTmpDir);\n\n    // Setup the log4j prop\n    long logSize \u003d TaskLog.getTaskLogLength(conf);\n    setupLog4jProperties(vargs, logSize);\n\n    if (conf.getProfileEnabled()) {\n      if (conf.getProfileTaskRange(task.isMapTask()\n                                   ).isIncluded(task.getPartition())) {\n        vargs.add(\n            String.format(\n                conf.getProfileParams(), \n                getTaskLogFile(TaskLog.LogName.PROFILE)\n                )\n            );\n      }\n    }\n\n    // Add main class and its arguments \n    vargs.add(YarnChild.class.getName());  // main of Child\n    // pass TaskAttemptListener\u0027s address\n    vargs.add(taskAttemptListenerAddr.getAddress().getHostAddress()); \n    vargs.add(Integer.toString(taskAttemptListenerAddr.getPort())); \n    vargs.add(attemptID.toString());                      // pass task identifier\n\n    // Finally add the jvmID\n    vargs.add(String.valueOf(jvmID.getId()));\n    vargs.add(\"1\u003e\" + getTaskLogFile(TaskLog.LogName.STDOUT));\n    vargs.add(\"2\u003e\" + getTaskLogFile(TaskLog.LogName.STDERR));\n\n    // Final commmand\n    StringBuilder mergedCommand \u003d new StringBuilder();\n    for (CharSequence str : vargs) {\n      mergedCommand.append(str).append(\" \");\n    }\n    Vector\u003cString\u003e vargsFinal \u003d new Vector\u003cString\u003e(1);\n    vargsFinal.add(mergedCommand.toString());\n    return vargsFinal;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapred/MapReduceChildJVM.java",
      "extendedDetails": {}
    },
    "d00b3c49f6fb3f6a617add6203c6b55f6c345940": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "MAPREDUCE-2880. Improved classpath-construction for mapreduce AM and containers. Contributed by Arun C Murthy.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1173783 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/09/11 11:28 AM",
      "commitName": "d00b3c49f6fb3f6a617add6203c6b55f6c345940",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "MAPREDUCE-2880. Improved classpath-construction for mapreduce AM and containers. Contributed by Arun C Murthy.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1173783 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "21/09/11 11:28 AM",
          "commitName": "d00b3c49f6fb3f6a617add6203c6b55f6c345940",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "24/08/11 5:14 PM",
          "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 27.76,
          "commitsBetweenForRepo": 171,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,105 +1,87 @@\n   public static List\u003cString\u003e getVMCommand(\n-      InetSocketAddress taskAttemptListenerAddr, Task task, String javaHome,\n-      String workDir, String logDir, String childTmpDir, ID jvmID) {\n+      InetSocketAddress taskAttemptListenerAddr, Task task, \n+      ID jvmID) {\n \n     TaskAttemptID attemptID \u003d task.getTaskID();\n     JobConf conf \u003d task.conf;\n \n     Vector\u003cString\u003e vargs \u003d new Vector\u003cString\u003e(8);\n \n     vargs.add(\"exec\");\n-    vargs.add(javaHome + \"/bin/java\");\n+    vargs.add(Environment.JAVA_HOME.$() + \"/bin/java\");\n \n     // Add child (task) java-vm options.\n     //\n     // The following symbols if present in mapred.{map|reduce}.child.java.opts \n     // value are replaced:\n     // + @taskid@ is interpolated with value of TaskID.\n     // Other occurrences of @ will not be altered.\n     //\n     // Example with multiple arguments and substitutions, showing\n     // jvm GC logging, and start of a passwordless JVM JMX agent so can\n     // connect with jconsole and the likes to watch child memory, threads\n     // and get thread dumps.\n     //\n     //  \u003cproperty\u003e\n     //    \u003cname\u003emapred.map.child.java.opts\u003c/name\u003e\n     //    \u003cvalue\u003e-Xmx 512M -verbose:gc -Xloggc:/tmp/@taskid@.gc \\\n     //           -Dcom.sun.management.jmxremote.authenticate\u003dfalse \\\n     //           -Dcom.sun.management.jmxremote.ssl\u003dfalse \\\n     //    \u003c/value\u003e\n     //  \u003c/property\u003e\n     //\n     //  \u003cproperty\u003e\n     //    \u003cname\u003emapred.reduce.child.java.opts\u003c/name\u003e\n     //    \u003cvalue\u003e-Xmx 1024M -verbose:gc -Xloggc:/tmp/@taskid@.gc \\\n     //           -Dcom.sun.management.jmxremote.authenticate\u003dfalse \\\n     //           -Dcom.sun.management.jmxremote.ssl\u003dfalse \\\n     //    \u003c/value\u003e\n     //  \u003c/property\u003e\n     //\n     String javaOpts \u003d getChildJavaOpts(conf, task.isMapTask());\n     javaOpts \u003d javaOpts.replace(\"@taskid@\", attemptID.toString());\n     String [] javaOptsSplit \u003d javaOpts.split(\" \");\n-    \n-    // Add java.library.path; necessary for loading native libraries.\n-    //\n-    // 1. We add the \u0027cwd\u0027 of the task to it\u0027s java.library.path to help \n-    //    users distribute native libraries via the DistributedCache.\n-    // 2. The user can also specify extra paths to be added to the \n-    //    java.library.path via mapred.{map|reduce}.child.java.opts.\n-    //\n-    String libraryPath \u003d workDir;\n-    boolean hasUserLDPath \u003d false;\n-    for(int i\u003d0; i\u003cjavaOptsSplit.length ;i++) { \n-      if(javaOptsSplit[i].startsWith(\"-Djava.library.path\u003d\")) {\n-        // TODO: Does the above take care of escaped space chars\n-        javaOptsSplit[i] +\u003d SYSTEM_PATH_SEPARATOR + libraryPath;\n-        hasUserLDPath \u003d true;\n-        break;\n-      }\n-    }\n-    if(!hasUserLDPath) {\n-      vargs.add(\"-Djava.library.path\u003d\" + libraryPath);\n-    }\n     for (int i \u003d 0; i \u003c javaOptsSplit.length; i++) {\n       vargs.add(javaOptsSplit[i]);\n     }\n \n-    if (childTmpDir !\u003d null) {\n-      vargs.add(\"-Djava.io.tmpdir\u003d\" + childTmpDir);\n-    }\n+    String childTmpDir \u003d Environment.PWD.$() + Path.SEPARATOR + \"tmp\";\n+    vargs.add(\"-Djava.io.tmpdir\u003d\" + childTmpDir);\n \n     // Setup the log4j prop\n     long logSize \u003d TaskLog.getTaskLogLength(conf);\n-    setupLog4jProperties(vargs, logSize, logDir);\n+    setupLog4jProperties(vargs, logSize);\n \n     if (conf.getProfileEnabled()) {\n       if (conf.getProfileTaskRange(task.isMapTask()\n                                    ).isIncluded(task.getPartition())) {\n-        File prof \u003d getTaskLogFile(logDir, TaskLog.LogName.PROFILE);\n-        vargs.add(String.format(conf.getProfileParams(), prof.toString()));\n+        vargs.add(\n+            String.format(\n+                conf.getProfileParams(), \n+                getTaskLogFile(TaskLog.LogName.PROFILE)\n+                )\n+            );\n       }\n     }\n \n     // Add main class and its arguments \n     vargs.add(YarnChild.class.getName());  // main of Child\n     // pass TaskAttemptListener\u0027s address\n     vargs.add(taskAttemptListenerAddr.getAddress().getHostAddress()); \n     vargs.add(Integer.toString(taskAttemptListenerAddr.getPort())); \n     vargs.add(attemptID.toString());                      // pass task identifier\n \n     // Finally add the jvmID\n     vargs.add(String.valueOf(jvmID.getId()));\n-    vargs.add(\"1\u003e\" + getTaskLogFile(logDir, TaskLog.LogName.STDERR));\n-    vargs.add(\"2\u003e\" + getTaskLogFile(logDir, TaskLog.LogName.STDOUT));\n+    vargs.add(\"1\u003e\" + getTaskLogFile(TaskLog.LogName.STDERR));\n+    vargs.add(\"2\u003e\" + getTaskLogFile(TaskLog.LogName.STDOUT));\n \n     // Final commmand\n     StringBuilder mergedCommand \u003d new StringBuilder();\n     for (CharSequence str : vargs) {\n       mergedCommand.append(str).append(\" \");\n     }\n     Vector\u003cString\u003e vargsFinal \u003d new Vector\u003cString\u003e(1);\n     vargsFinal.add(mergedCommand.toString());\n     return vargsFinal;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static List\u003cString\u003e getVMCommand(\n      InetSocketAddress taskAttemptListenerAddr, Task task, \n      ID jvmID) {\n\n    TaskAttemptID attemptID \u003d task.getTaskID();\n    JobConf conf \u003d task.conf;\n\n    Vector\u003cString\u003e vargs \u003d new Vector\u003cString\u003e(8);\n\n    vargs.add(\"exec\");\n    vargs.add(Environment.JAVA_HOME.$() + \"/bin/java\");\n\n    // Add child (task) java-vm options.\n    //\n    // The following symbols if present in mapred.{map|reduce}.child.java.opts \n    // value are replaced:\n    // + @taskid@ is interpolated with value of TaskID.\n    // Other occurrences of @ will not be altered.\n    //\n    // Example with multiple arguments and substitutions, showing\n    // jvm GC logging, and start of a passwordless JVM JMX agent so can\n    // connect with jconsole and the likes to watch child memory, threads\n    // and get thread dumps.\n    //\n    //  \u003cproperty\u003e\n    //    \u003cname\u003emapred.map.child.java.opts\u003c/name\u003e\n    //    \u003cvalue\u003e-Xmx 512M -verbose:gc -Xloggc:/tmp/@taskid@.gc \\\n    //           -Dcom.sun.management.jmxremote.authenticate\u003dfalse \\\n    //           -Dcom.sun.management.jmxremote.ssl\u003dfalse \\\n    //    \u003c/value\u003e\n    //  \u003c/property\u003e\n    //\n    //  \u003cproperty\u003e\n    //    \u003cname\u003emapred.reduce.child.java.opts\u003c/name\u003e\n    //    \u003cvalue\u003e-Xmx 1024M -verbose:gc -Xloggc:/tmp/@taskid@.gc \\\n    //           -Dcom.sun.management.jmxremote.authenticate\u003dfalse \\\n    //           -Dcom.sun.management.jmxremote.ssl\u003dfalse \\\n    //    \u003c/value\u003e\n    //  \u003c/property\u003e\n    //\n    String javaOpts \u003d getChildJavaOpts(conf, task.isMapTask());\n    javaOpts \u003d javaOpts.replace(\"@taskid@\", attemptID.toString());\n    String [] javaOptsSplit \u003d javaOpts.split(\" \");\n    for (int i \u003d 0; i \u003c javaOptsSplit.length; i++) {\n      vargs.add(javaOptsSplit[i]);\n    }\n\n    String childTmpDir \u003d Environment.PWD.$() + Path.SEPARATOR + \"tmp\";\n    vargs.add(\"-Djava.io.tmpdir\u003d\" + childTmpDir);\n\n    // Setup the log4j prop\n    long logSize \u003d TaskLog.getTaskLogLength(conf);\n    setupLog4jProperties(vargs, logSize);\n\n    if (conf.getProfileEnabled()) {\n      if (conf.getProfileTaskRange(task.isMapTask()\n                                   ).isIncluded(task.getPartition())) {\n        vargs.add(\n            String.format(\n                conf.getProfileParams(), \n                getTaskLogFile(TaskLog.LogName.PROFILE)\n                )\n            );\n      }\n    }\n\n    // Add main class and its arguments \n    vargs.add(YarnChild.class.getName());  // main of Child\n    // pass TaskAttemptListener\u0027s address\n    vargs.add(taskAttemptListenerAddr.getAddress().getHostAddress()); \n    vargs.add(Integer.toString(taskAttemptListenerAddr.getPort())); \n    vargs.add(attemptID.toString());                      // pass task identifier\n\n    // Finally add the jvmID\n    vargs.add(String.valueOf(jvmID.getId()));\n    vargs.add(\"1\u003e\" + getTaskLogFile(TaskLog.LogName.STDERR));\n    vargs.add(\"2\u003e\" + getTaskLogFile(TaskLog.LogName.STDOUT));\n\n    // Final commmand\n    StringBuilder mergedCommand \u003d new StringBuilder();\n    for (CharSequence str : vargs) {\n      mergedCommand.append(str).append(\" \");\n    }\n    Vector\u003cString\u003e vargsFinal \u003d new Vector\u003cString\u003e(1);\n    vargsFinal.add(mergedCommand.toString());\n    return vargsFinal;\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapred/MapReduceChildJVM.java",
          "extendedDetails": {
            "oldValue": "[taskAttemptListenerAddr-InetSocketAddress, task-Task, javaHome-String, workDir-String, logDir-String, childTmpDir-String, jvmID-ID]",
            "newValue": "[taskAttemptListenerAddr-InetSocketAddress, task-Task, jvmID-ID]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-2880. Improved classpath-construction for mapreduce AM and containers. Contributed by Arun C Murthy.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1173783 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "21/09/11 11:28 AM",
          "commitName": "d00b3c49f6fb3f6a617add6203c6b55f6c345940",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "24/08/11 5:14 PM",
          "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 27.76,
          "commitsBetweenForRepo": 171,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,105 +1,87 @@\n   public static List\u003cString\u003e getVMCommand(\n-      InetSocketAddress taskAttemptListenerAddr, Task task, String javaHome,\n-      String workDir, String logDir, String childTmpDir, ID jvmID) {\n+      InetSocketAddress taskAttemptListenerAddr, Task task, \n+      ID jvmID) {\n \n     TaskAttemptID attemptID \u003d task.getTaskID();\n     JobConf conf \u003d task.conf;\n \n     Vector\u003cString\u003e vargs \u003d new Vector\u003cString\u003e(8);\n \n     vargs.add(\"exec\");\n-    vargs.add(javaHome + \"/bin/java\");\n+    vargs.add(Environment.JAVA_HOME.$() + \"/bin/java\");\n \n     // Add child (task) java-vm options.\n     //\n     // The following symbols if present in mapred.{map|reduce}.child.java.opts \n     // value are replaced:\n     // + @taskid@ is interpolated with value of TaskID.\n     // Other occurrences of @ will not be altered.\n     //\n     // Example with multiple arguments and substitutions, showing\n     // jvm GC logging, and start of a passwordless JVM JMX agent so can\n     // connect with jconsole and the likes to watch child memory, threads\n     // and get thread dumps.\n     //\n     //  \u003cproperty\u003e\n     //    \u003cname\u003emapred.map.child.java.opts\u003c/name\u003e\n     //    \u003cvalue\u003e-Xmx 512M -verbose:gc -Xloggc:/tmp/@taskid@.gc \\\n     //           -Dcom.sun.management.jmxremote.authenticate\u003dfalse \\\n     //           -Dcom.sun.management.jmxremote.ssl\u003dfalse \\\n     //    \u003c/value\u003e\n     //  \u003c/property\u003e\n     //\n     //  \u003cproperty\u003e\n     //    \u003cname\u003emapred.reduce.child.java.opts\u003c/name\u003e\n     //    \u003cvalue\u003e-Xmx 1024M -verbose:gc -Xloggc:/tmp/@taskid@.gc \\\n     //           -Dcom.sun.management.jmxremote.authenticate\u003dfalse \\\n     //           -Dcom.sun.management.jmxremote.ssl\u003dfalse \\\n     //    \u003c/value\u003e\n     //  \u003c/property\u003e\n     //\n     String javaOpts \u003d getChildJavaOpts(conf, task.isMapTask());\n     javaOpts \u003d javaOpts.replace(\"@taskid@\", attemptID.toString());\n     String [] javaOptsSplit \u003d javaOpts.split(\" \");\n-    \n-    // Add java.library.path; necessary for loading native libraries.\n-    //\n-    // 1. We add the \u0027cwd\u0027 of the task to it\u0027s java.library.path to help \n-    //    users distribute native libraries via the DistributedCache.\n-    // 2. The user can also specify extra paths to be added to the \n-    //    java.library.path via mapred.{map|reduce}.child.java.opts.\n-    //\n-    String libraryPath \u003d workDir;\n-    boolean hasUserLDPath \u003d false;\n-    for(int i\u003d0; i\u003cjavaOptsSplit.length ;i++) { \n-      if(javaOptsSplit[i].startsWith(\"-Djava.library.path\u003d\")) {\n-        // TODO: Does the above take care of escaped space chars\n-        javaOptsSplit[i] +\u003d SYSTEM_PATH_SEPARATOR + libraryPath;\n-        hasUserLDPath \u003d true;\n-        break;\n-      }\n-    }\n-    if(!hasUserLDPath) {\n-      vargs.add(\"-Djava.library.path\u003d\" + libraryPath);\n-    }\n     for (int i \u003d 0; i \u003c javaOptsSplit.length; i++) {\n       vargs.add(javaOptsSplit[i]);\n     }\n \n-    if (childTmpDir !\u003d null) {\n-      vargs.add(\"-Djava.io.tmpdir\u003d\" + childTmpDir);\n-    }\n+    String childTmpDir \u003d Environment.PWD.$() + Path.SEPARATOR + \"tmp\";\n+    vargs.add(\"-Djava.io.tmpdir\u003d\" + childTmpDir);\n \n     // Setup the log4j prop\n     long logSize \u003d TaskLog.getTaskLogLength(conf);\n-    setupLog4jProperties(vargs, logSize, logDir);\n+    setupLog4jProperties(vargs, logSize);\n \n     if (conf.getProfileEnabled()) {\n       if (conf.getProfileTaskRange(task.isMapTask()\n                                    ).isIncluded(task.getPartition())) {\n-        File prof \u003d getTaskLogFile(logDir, TaskLog.LogName.PROFILE);\n-        vargs.add(String.format(conf.getProfileParams(), prof.toString()));\n+        vargs.add(\n+            String.format(\n+                conf.getProfileParams(), \n+                getTaskLogFile(TaskLog.LogName.PROFILE)\n+                )\n+            );\n       }\n     }\n \n     // Add main class and its arguments \n     vargs.add(YarnChild.class.getName());  // main of Child\n     // pass TaskAttemptListener\u0027s address\n     vargs.add(taskAttemptListenerAddr.getAddress().getHostAddress()); \n     vargs.add(Integer.toString(taskAttemptListenerAddr.getPort())); \n     vargs.add(attemptID.toString());                      // pass task identifier\n \n     // Finally add the jvmID\n     vargs.add(String.valueOf(jvmID.getId()));\n-    vargs.add(\"1\u003e\" + getTaskLogFile(logDir, TaskLog.LogName.STDERR));\n-    vargs.add(\"2\u003e\" + getTaskLogFile(logDir, TaskLog.LogName.STDOUT));\n+    vargs.add(\"1\u003e\" + getTaskLogFile(TaskLog.LogName.STDERR));\n+    vargs.add(\"2\u003e\" + getTaskLogFile(TaskLog.LogName.STDOUT));\n \n     // Final commmand\n     StringBuilder mergedCommand \u003d new StringBuilder();\n     for (CharSequence str : vargs) {\n       mergedCommand.append(str).append(\" \");\n     }\n     Vector\u003cString\u003e vargsFinal \u003d new Vector\u003cString\u003e(1);\n     vargsFinal.add(mergedCommand.toString());\n     return vargsFinal;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static List\u003cString\u003e getVMCommand(\n      InetSocketAddress taskAttemptListenerAddr, Task task, \n      ID jvmID) {\n\n    TaskAttemptID attemptID \u003d task.getTaskID();\n    JobConf conf \u003d task.conf;\n\n    Vector\u003cString\u003e vargs \u003d new Vector\u003cString\u003e(8);\n\n    vargs.add(\"exec\");\n    vargs.add(Environment.JAVA_HOME.$() + \"/bin/java\");\n\n    // Add child (task) java-vm options.\n    //\n    // The following symbols if present in mapred.{map|reduce}.child.java.opts \n    // value are replaced:\n    // + @taskid@ is interpolated with value of TaskID.\n    // Other occurrences of @ will not be altered.\n    //\n    // Example with multiple arguments and substitutions, showing\n    // jvm GC logging, and start of a passwordless JVM JMX agent so can\n    // connect with jconsole and the likes to watch child memory, threads\n    // and get thread dumps.\n    //\n    //  \u003cproperty\u003e\n    //    \u003cname\u003emapred.map.child.java.opts\u003c/name\u003e\n    //    \u003cvalue\u003e-Xmx 512M -verbose:gc -Xloggc:/tmp/@taskid@.gc \\\n    //           -Dcom.sun.management.jmxremote.authenticate\u003dfalse \\\n    //           -Dcom.sun.management.jmxremote.ssl\u003dfalse \\\n    //    \u003c/value\u003e\n    //  \u003c/property\u003e\n    //\n    //  \u003cproperty\u003e\n    //    \u003cname\u003emapred.reduce.child.java.opts\u003c/name\u003e\n    //    \u003cvalue\u003e-Xmx 1024M -verbose:gc -Xloggc:/tmp/@taskid@.gc \\\n    //           -Dcom.sun.management.jmxremote.authenticate\u003dfalse \\\n    //           -Dcom.sun.management.jmxremote.ssl\u003dfalse \\\n    //    \u003c/value\u003e\n    //  \u003c/property\u003e\n    //\n    String javaOpts \u003d getChildJavaOpts(conf, task.isMapTask());\n    javaOpts \u003d javaOpts.replace(\"@taskid@\", attemptID.toString());\n    String [] javaOptsSplit \u003d javaOpts.split(\" \");\n    for (int i \u003d 0; i \u003c javaOptsSplit.length; i++) {\n      vargs.add(javaOptsSplit[i]);\n    }\n\n    String childTmpDir \u003d Environment.PWD.$() + Path.SEPARATOR + \"tmp\";\n    vargs.add(\"-Djava.io.tmpdir\u003d\" + childTmpDir);\n\n    // Setup the log4j prop\n    long logSize \u003d TaskLog.getTaskLogLength(conf);\n    setupLog4jProperties(vargs, logSize);\n\n    if (conf.getProfileEnabled()) {\n      if (conf.getProfileTaskRange(task.isMapTask()\n                                   ).isIncluded(task.getPartition())) {\n        vargs.add(\n            String.format(\n                conf.getProfileParams(), \n                getTaskLogFile(TaskLog.LogName.PROFILE)\n                )\n            );\n      }\n    }\n\n    // Add main class and its arguments \n    vargs.add(YarnChild.class.getName());  // main of Child\n    // pass TaskAttemptListener\u0027s address\n    vargs.add(taskAttemptListenerAddr.getAddress().getHostAddress()); \n    vargs.add(Integer.toString(taskAttemptListenerAddr.getPort())); \n    vargs.add(attemptID.toString());                      // pass task identifier\n\n    // Finally add the jvmID\n    vargs.add(String.valueOf(jvmID.getId()));\n    vargs.add(\"1\u003e\" + getTaskLogFile(TaskLog.LogName.STDERR));\n    vargs.add(\"2\u003e\" + getTaskLogFile(TaskLog.LogName.STDOUT));\n\n    // Final commmand\n    StringBuilder mergedCommand \u003d new StringBuilder();\n    for (CharSequence str : vargs) {\n      mergedCommand.append(str).append(\" \");\n    }\n    Vector\u003cString\u003e vargsFinal \u003d new Vector\u003cString\u003e(1);\n    vargsFinal.add(mergedCommand.toString());\n    return vargsFinal;\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapred/MapReduceChildJVM.java",
          "extendedDetails": {}
        }
      ]
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static List\u003cString\u003e getVMCommand(\n      InetSocketAddress taskAttemptListenerAddr, Task task, String javaHome,\n      String workDir, String logDir, String childTmpDir, ID jvmID) {\n\n    TaskAttemptID attemptID \u003d task.getTaskID();\n    JobConf conf \u003d task.conf;\n\n    Vector\u003cString\u003e vargs \u003d new Vector\u003cString\u003e(8);\n\n    vargs.add(\"exec\");\n    vargs.add(javaHome + \"/bin/java\");\n\n    // Add child (task) java-vm options.\n    //\n    // The following symbols if present in mapred.{map|reduce}.child.java.opts \n    // value are replaced:\n    // + @taskid@ is interpolated with value of TaskID.\n    // Other occurrences of @ will not be altered.\n    //\n    // Example with multiple arguments and substitutions, showing\n    // jvm GC logging, and start of a passwordless JVM JMX agent so can\n    // connect with jconsole and the likes to watch child memory, threads\n    // and get thread dumps.\n    //\n    //  \u003cproperty\u003e\n    //    \u003cname\u003emapred.map.child.java.opts\u003c/name\u003e\n    //    \u003cvalue\u003e-Xmx 512M -verbose:gc -Xloggc:/tmp/@taskid@.gc \\\n    //           -Dcom.sun.management.jmxremote.authenticate\u003dfalse \\\n    //           -Dcom.sun.management.jmxremote.ssl\u003dfalse \\\n    //    \u003c/value\u003e\n    //  \u003c/property\u003e\n    //\n    //  \u003cproperty\u003e\n    //    \u003cname\u003emapred.reduce.child.java.opts\u003c/name\u003e\n    //    \u003cvalue\u003e-Xmx 1024M -verbose:gc -Xloggc:/tmp/@taskid@.gc \\\n    //           -Dcom.sun.management.jmxremote.authenticate\u003dfalse \\\n    //           -Dcom.sun.management.jmxremote.ssl\u003dfalse \\\n    //    \u003c/value\u003e\n    //  \u003c/property\u003e\n    //\n    String javaOpts \u003d getChildJavaOpts(conf, task.isMapTask());\n    javaOpts \u003d javaOpts.replace(\"@taskid@\", attemptID.toString());\n    String [] javaOptsSplit \u003d javaOpts.split(\" \");\n    \n    // Add java.library.path; necessary for loading native libraries.\n    //\n    // 1. We add the \u0027cwd\u0027 of the task to it\u0027s java.library.path to help \n    //    users distribute native libraries via the DistributedCache.\n    // 2. The user can also specify extra paths to be added to the \n    //    java.library.path via mapred.{map|reduce}.child.java.opts.\n    //\n    String libraryPath \u003d workDir;\n    boolean hasUserLDPath \u003d false;\n    for(int i\u003d0; i\u003cjavaOptsSplit.length ;i++) { \n      if(javaOptsSplit[i].startsWith(\"-Djava.library.path\u003d\")) {\n        // TODO: Does the above take care of escaped space chars\n        javaOptsSplit[i] +\u003d SYSTEM_PATH_SEPARATOR + libraryPath;\n        hasUserLDPath \u003d true;\n        break;\n      }\n    }\n    if(!hasUserLDPath) {\n      vargs.add(\"-Djava.library.path\u003d\" + libraryPath);\n    }\n    for (int i \u003d 0; i \u003c javaOptsSplit.length; i++) {\n      vargs.add(javaOptsSplit[i]);\n    }\n\n    if (childTmpDir !\u003d null) {\n      vargs.add(\"-Djava.io.tmpdir\u003d\" + childTmpDir);\n    }\n\n    // Setup the log4j prop\n    long logSize \u003d TaskLog.getTaskLogLength(conf);\n    setupLog4jProperties(vargs, logSize, logDir);\n\n    if (conf.getProfileEnabled()) {\n      if (conf.getProfileTaskRange(task.isMapTask()\n                                   ).isIncluded(task.getPartition())) {\n        File prof \u003d getTaskLogFile(logDir, TaskLog.LogName.PROFILE);\n        vargs.add(String.format(conf.getProfileParams(), prof.toString()));\n      }\n    }\n\n    // Add main class and its arguments \n    vargs.add(YarnChild.class.getName());  // main of Child\n    // pass TaskAttemptListener\u0027s address\n    vargs.add(taskAttemptListenerAddr.getAddress().getHostAddress()); \n    vargs.add(Integer.toString(taskAttemptListenerAddr.getPort())); \n    vargs.add(attemptID.toString());                      // pass task identifier\n\n    // Finally add the jvmID\n    vargs.add(String.valueOf(jvmID.getId()));\n    vargs.add(\"1\u003e\" + getTaskLogFile(logDir, TaskLog.LogName.STDERR));\n    vargs.add(\"2\u003e\" + getTaskLogFile(logDir, TaskLog.LogName.STDOUT));\n\n    // Final commmand\n    StringBuilder mergedCommand \u003d new StringBuilder();\n    for (CharSequence str : vargs) {\n      mergedCommand.append(str).append(\" \");\n    }\n    Vector\u003cString\u003e vargsFinal \u003d new Vector\u003cString\u003e(1);\n    vargsFinal.add(mergedCommand.toString());\n    return vargsFinal;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapred/MapReduceChildJVM.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapred/MapReduceChildJVM.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapred/MapReduceChildJVM.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,105 @@\n+  public static List\u003cString\u003e getVMCommand(\n+      InetSocketAddress taskAttemptListenerAddr, Task task, String javaHome,\n+      String workDir, String logDir, String childTmpDir, ID jvmID) {\n+\n+    TaskAttemptID attemptID \u003d task.getTaskID();\n+    JobConf conf \u003d task.conf;\n+\n+    Vector\u003cString\u003e vargs \u003d new Vector\u003cString\u003e(8);\n+\n+    vargs.add(\"exec\");\n+    vargs.add(javaHome + \"/bin/java\");\n+\n+    // Add child (task) java-vm options.\n+    //\n+    // The following symbols if present in mapred.{map|reduce}.child.java.opts \n+    // value are replaced:\n+    // + @taskid@ is interpolated with value of TaskID.\n+    // Other occurrences of @ will not be altered.\n+    //\n+    // Example with multiple arguments and substitutions, showing\n+    // jvm GC logging, and start of a passwordless JVM JMX agent so can\n+    // connect with jconsole and the likes to watch child memory, threads\n+    // and get thread dumps.\n+    //\n+    //  \u003cproperty\u003e\n+    //    \u003cname\u003emapred.map.child.java.opts\u003c/name\u003e\n+    //    \u003cvalue\u003e-Xmx 512M -verbose:gc -Xloggc:/tmp/@taskid@.gc \\\n+    //           -Dcom.sun.management.jmxremote.authenticate\u003dfalse \\\n+    //           -Dcom.sun.management.jmxremote.ssl\u003dfalse \\\n+    //    \u003c/value\u003e\n+    //  \u003c/property\u003e\n+    //\n+    //  \u003cproperty\u003e\n+    //    \u003cname\u003emapred.reduce.child.java.opts\u003c/name\u003e\n+    //    \u003cvalue\u003e-Xmx 1024M -verbose:gc -Xloggc:/tmp/@taskid@.gc \\\n+    //           -Dcom.sun.management.jmxremote.authenticate\u003dfalse \\\n+    //           -Dcom.sun.management.jmxremote.ssl\u003dfalse \\\n+    //    \u003c/value\u003e\n+    //  \u003c/property\u003e\n+    //\n+    String javaOpts \u003d getChildJavaOpts(conf, task.isMapTask());\n+    javaOpts \u003d javaOpts.replace(\"@taskid@\", attemptID.toString());\n+    String [] javaOptsSplit \u003d javaOpts.split(\" \");\n+    \n+    // Add java.library.path; necessary for loading native libraries.\n+    //\n+    // 1. We add the \u0027cwd\u0027 of the task to it\u0027s java.library.path to help \n+    //    users distribute native libraries via the DistributedCache.\n+    // 2. The user can also specify extra paths to be added to the \n+    //    java.library.path via mapred.{map|reduce}.child.java.opts.\n+    //\n+    String libraryPath \u003d workDir;\n+    boolean hasUserLDPath \u003d false;\n+    for(int i\u003d0; i\u003cjavaOptsSplit.length ;i++) { \n+      if(javaOptsSplit[i].startsWith(\"-Djava.library.path\u003d\")) {\n+        // TODO: Does the above take care of escaped space chars\n+        javaOptsSplit[i] +\u003d SYSTEM_PATH_SEPARATOR + libraryPath;\n+        hasUserLDPath \u003d true;\n+        break;\n+      }\n+    }\n+    if(!hasUserLDPath) {\n+      vargs.add(\"-Djava.library.path\u003d\" + libraryPath);\n+    }\n+    for (int i \u003d 0; i \u003c javaOptsSplit.length; i++) {\n+      vargs.add(javaOptsSplit[i]);\n+    }\n+\n+    if (childTmpDir !\u003d null) {\n+      vargs.add(\"-Djava.io.tmpdir\u003d\" + childTmpDir);\n+    }\n+\n+    // Setup the log4j prop\n+    long logSize \u003d TaskLog.getTaskLogLength(conf);\n+    setupLog4jProperties(vargs, logSize, logDir);\n+\n+    if (conf.getProfileEnabled()) {\n+      if (conf.getProfileTaskRange(task.isMapTask()\n+                                   ).isIncluded(task.getPartition())) {\n+        File prof \u003d getTaskLogFile(logDir, TaskLog.LogName.PROFILE);\n+        vargs.add(String.format(conf.getProfileParams(), prof.toString()));\n+      }\n+    }\n+\n+    // Add main class and its arguments \n+    vargs.add(YarnChild.class.getName());  // main of Child\n+    // pass TaskAttemptListener\u0027s address\n+    vargs.add(taskAttemptListenerAddr.getAddress().getHostAddress()); \n+    vargs.add(Integer.toString(taskAttemptListenerAddr.getPort())); \n+    vargs.add(attemptID.toString());                      // pass task identifier\n+\n+    // Finally add the jvmID\n+    vargs.add(String.valueOf(jvmID.getId()));\n+    vargs.add(\"1\u003e\" + getTaskLogFile(logDir, TaskLog.LogName.STDERR));\n+    vargs.add(\"2\u003e\" + getTaskLogFile(logDir, TaskLog.LogName.STDOUT));\n+\n+    // Final commmand\n+    StringBuilder mergedCommand \u003d new StringBuilder();\n+    for (CharSequence str : vargs) {\n+      mergedCommand.append(str).append(\" \");\n+    }\n+    Vector\u003cString\u003e vargsFinal \u003d new Vector\u003cString\u003e(1);\n+    vargsFinal.add(mergedCommand.toString());\n+    return vargsFinal;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static List\u003cString\u003e getVMCommand(\n      InetSocketAddress taskAttemptListenerAddr, Task task, String javaHome,\n      String workDir, String logDir, String childTmpDir, ID jvmID) {\n\n    TaskAttemptID attemptID \u003d task.getTaskID();\n    JobConf conf \u003d task.conf;\n\n    Vector\u003cString\u003e vargs \u003d new Vector\u003cString\u003e(8);\n\n    vargs.add(\"exec\");\n    vargs.add(javaHome + \"/bin/java\");\n\n    // Add child (task) java-vm options.\n    //\n    // The following symbols if present in mapred.{map|reduce}.child.java.opts \n    // value are replaced:\n    // + @taskid@ is interpolated with value of TaskID.\n    // Other occurrences of @ will not be altered.\n    //\n    // Example with multiple arguments and substitutions, showing\n    // jvm GC logging, and start of a passwordless JVM JMX agent so can\n    // connect with jconsole and the likes to watch child memory, threads\n    // and get thread dumps.\n    //\n    //  \u003cproperty\u003e\n    //    \u003cname\u003emapred.map.child.java.opts\u003c/name\u003e\n    //    \u003cvalue\u003e-Xmx 512M -verbose:gc -Xloggc:/tmp/@taskid@.gc \\\n    //           -Dcom.sun.management.jmxremote.authenticate\u003dfalse \\\n    //           -Dcom.sun.management.jmxremote.ssl\u003dfalse \\\n    //    \u003c/value\u003e\n    //  \u003c/property\u003e\n    //\n    //  \u003cproperty\u003e\n    //    \u003cname\u003emapred.reduce.child.java.opts\u003c/name\u003e\n    //    \u003cvalue\u003e-Xmx 1024M -verbose:gc -Xloggc:/tmp/@taskid@.gc \\\n    //           -Dcom.sun.management.jmxremote.authenticate\u003dfalse \\\n    //           -Dcom.sun.management.jmxremote.ssl\u003dfalse \\\n    //    \u003c/value\u003e\n    //  \u003c/property\u003e\n    //\n    String javaOpts \u003d getChildJavaOpts(conf, task.isMapTask());\n    javaOpts \u003d javaOpts.replace(\"@taskid@\", attemptID.toString());\n    String [] javaOptsSplit \u003d javaOpts.split(\" \");\n    \n    // Add java.library.path; necessary for loading native libraries.\n    //\n    // 1. We add the \u0027cwd\u0027 of the task to it\u0027s java.library.path to help \n    //    users distribute native libraries via the DistributedCache.\n    // 2. The user can also specify extra paths to be added to the \n    //    java.library.path via mapred.{map|reduce}.child.java.opts.\n    //\n    String libraryPath \u003d workDir;\n    boolean hasUserLDPath \u003d false;\n    for(int i\u003d0; i\u003cjavaOptsSplit.length ;i++) { \n      if(javaOptsSplit[i].startsWith(\"-Djava.library.path\u003d\")) {\n        // TODO: Does the above take care of escaped space chars\n        javaOptsSplit[i] +\u003d SYSTEM_PATH_SEPARATOR + libraryPath;\n        hasUserLDPath \u003d true;\n        break;\n      }\n    }\n    if(!hasUserLDPath) {\n      vargs.add(\"-Djava.library.path\u003d\" + libraryPath);\n    }\n    for (int i \u003d 0; i \u003c javaOptsSplit.length; i++) {\n      vargs.add(javaOptsSplit[i]);\n    }\n\n    if (childTmpDir !\u003d null) {\n      vargs.add(\"-Djava.io.tmpdir\u003d\" + childTmpDir);\n    }\n\n    // Setup the log4j prop\n    long logSize \u003d TaskLog.getTaskLogLength(conf);\n    setupLog4jProperties(vargs, logSize, logDir);\n\n    if (conf.getProfileEnabled()) {\n      if (conf.getProfileTaskRange(task.isMapTask()\n                                   ).isIncluded(task.getPartition())) {\n        File prof \u003d getTaskLogFile(logDir, TaskLog.LogName.PROFILE);\n        vargs.add(String.format(conf.getProfileParams(), prof.toString()));\n      }\n    }\n\n    // Add main class and its arguments \n    vargs.add(YarnChild.class.getName());  // main of Child\n    // pass TaskAttemptListener\u0027s address\n    vargs.add(taskAttemptListenerAddr.getAddress().getHostAddress()); \n    vargs.add(Integer.toString(taskAttemptListenerAddr.getPort())); \n    vargs.add(attemptID.toString());                      // pass task identifier\n\n    // Finally add the jvmID\n    vargs.add(String.valueOf(jvmID.getId()));\n    vargs.add(\"1\u003e\" + getTaskLogFile(logDir, TaskLog.LogName.STDERR));\n    vargs.add(\"2\u003e\" + getTaskLogFile(logDir, TaskLog.LogName.STDOUT));\n\n    // Final commmand\n    StringBuilder mergedCommand \u003d new StringBuilder();\n    for (CharSequence str : vargs) {\n      mergedCommand.append(str).append(\" \");\n    }\n    Vector\u003cString\u003e vargsFinal \u003d new Vector\u003cString\u003e(1);\n    vargsFinal.add(mergedCommand.toString());\n    return vargsFinal;\n  }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapred/MapReduceChildJVM.java"
    }
  }
}