{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ContainerImpl.java",
  "functionName": "handle",
  "functionId": "handle___event-ContainerEvent",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/container/ContainerImpl.java",
  "functionStartLine": 2121,
  "functionEndLine": 2144,
  "numCommitsSeen": 118,
  "timeTaken": 12260,
  "changeHistory": [
    "9cf7401794def0d420876db5db20fcd76c52193f",
    "2064ca015d1584263aac0cc20c60b925a3aff612",
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
    "9262797e86453fc04b7ca3710b73b21fcdf9e6b4",
    "3219b7b4ac7d12aee343f6ab2980b3357fc618b6",
    "310aa4686eb697f0700a71d33106514c404dab1b",
    "19295b36d90e26616accee73b1f7743aab5df692",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "68615600985dfadf067a4967a5e08c1421e7a1c8",
    "8fb67650b146573c20ae010e28b1eca6e16433b3",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "9cf7401794def0d420876db5db20fcd76c52193f": "Ybodychange",
    "2064ca015d1584263aac0cc20c60b925a3aff612": "Ybodychange",
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": "Ybodychange",
    "9262797e86453fc04b7ca3710b73b21fcdf9e6b4": "Ybodychange",
    "3219b7b4ac7d12aee343f6ab2980b3357fc618b6": "Ybodychange",
    "310aa4686eb697f0700a71d33106514c404dab1b": "Ybodychange",
    "19295b36d90e26616accee73b1f7743aab5df692": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "68615600985dfadf067a4967a5e08c1421e7a1c8": "Ybodychange",
    "8fb67650b146573c20ae010e28b1eca6e16433b3": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9cf7401794def0d420876db5db20fcd76c52193f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9349.  Improved log level practices for InvalidStateTransitionException.\n            Contributed by Anuhan Torgonshar\n\n(cherry picked from commit fe2370e039e1ee980d74769ae85d67434e0993cf)\n",
      "commitDate": "16/04/19 4:53 PM",
      "commitName": "9cf7401794def0d420876db5db20fcd76c52193f",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "01/04/19 2:21 PM",
      "commitNameOld": "ab2bda57bd9ad617342586d5769121a4fef4eab1",
      "commitAuthorOld": "Giovanni Matteo Fumarola",
      "daysBetweenCommits": 15.11,
      "commitsBetweenForRepo": 118,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n   public void handle(ContainerEvent event) {\n     this.writeLock.lock();\n     try {\n       ContainerId containerID \u003d event.getContainerID();\n       LOG.debug(\"Processing {} of type {}\", containerID, event.getType());\n       ContainerState oldState \u003d stateMachine.getCurrentState();\n       ContainerState newState \u003d null;\n       try {\n         newState \u003d\n             stateMachine.doTransition(event.getType(), event);\n       } catch (InvalidStateTransitionException e) {\n-        LOG.warn(\"Can\u0027t handle this event at current state: Current: [\"\n+        LOG.error(\"Can\u0027t handle this event at current state: Current: [\"\n             + oldState + \"], eventType: [\" + event.getType() + \"],\" +\n             \" container: [\" + containerID + \"]\", e);\n       }\n       if (newState !\u003d null \u0026\u0026 oldState !\u003d newState) {\n         LOG.info(\"Container \" + containerID + \" transitioned from \"\n             + oldState\n             + \" to \" + newState);\n       }\n     } finally {\n       this.writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void handle(ContainerEvent event) {\n    this.writeLock.lock();\n    try {\n      ContainerId containerID \u003d event.getContainerID();\n      LOG.debug(\"Processing {} of type {}\", containerID, event.getType());\n      ContainerState oldState \u003d stateMachine.getCurrentState();\n      ContainerState newState \u003d null;\n      try {\n        newState \u003d\n            stateMachine.doTransition(event.getType(), event);\n      } catch (InvalidStateTransitionException e) {\n        LOG.error(\"Can\u0027t handle this event at current state: Current: [\"\n            + oldState + \"], eventType: [\" + event.getType() + \"],\" +\n            \" container: [\" + containerID + \"]\", e);\n      }\n      if (newState !\u003d null \u0026\u0026 oldState !\u003d newState) {\n        LOG.info(\"Container \" + containerID + \" transitioned from \"\n            + oldState\n            + \" to \" + newState);\n      }\n    } finally {\n      this.writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/container/ContainerImpl.java",
      "extendedDetails": {}
    },
    "2064ca015d1584263aac0cc20c60b925a3aff612": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9349.  Changed logging to use slf4j api.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "15/03/19 4:20 PM",
      "commitName": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "07/03/19 1:47 PM",
      "commitNameOld": "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 8.06,
      "commitsBetweenForRepo": 69,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,24 @@\n   public void handle(ContainerEvent event) {\n     this.writeLock.lock();\n     try {\n       ContainerId containerID \u003d event.getContainerID();\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Processing \" + containerID + \" of type \" + event.getType());\n-      }\n+      LOG.debug(\"Processing {} of type {}\", containerID, event.getType());\n       ContainerState oldState \u003d stateMachine.getCurrentState();\n       ContainerState newState \u003d null;\n       try {\n         newState \u003d\n             stateMachine.doTransition(event.getType(), event);\n       } catch (InvalidStateTransitionException e) {\n         LOG.warn(\"Can\u0027t handle this event at current state: Current: [\"\n             + oldState + \"], eventType: [\" + event.getType() + \"],\" +\n             \" container: [\" + containerID + \"]\", e);\n       }\n       if (newState !\u003d null \u0026\u0026 oldState !\u003d newState) {\n         LOG.info(\"Container \" + containerID + \" transitioned from \"\n             + oldState\n             + \" to \" + newState);\n       }\n     } finally {\n       this.writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void handle(ContainerEvent event) {\n    this.writeLock.lock();\n    try {\n      ContainerId containerID \u003d event.getContainerID();\n      LOG.debug(\"Processing {} of type {}\", containerID, event.getType());\n      ContainerState oldState \u003d stateMachine.getCurrentState();\n      ContainerState newState \u003d null;\n      try {\n        newState \u003d\n            stateMachine.doTransition(event.getType(), event);\n      } catch (InvalidStateTransitionException e) {\n        LOG.warn(\"Can\u0027t handle this event at current state: Current: [\"\n            + oldState + \"], eventType: [\" + event.getType() + \"],\" +\n            \" container: [\" + containerID + \"]\", e);\n      }\n      if (newState !\u003d null \u0026\u0026 oldState !\u003d newState) {\n        LOG.info(\"Container \" + containerID + \" transitioned from \"\n            + oldState\n            + \" to \" + newState);\n      }\n    } finally {\n      this.writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/container/ContainerImpl.java",
      "extendedDetails": {}
    },
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9341.  Fixed enentrant lock usage in YARN project.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "07/03/19 1:47 PM",
      "commitName": "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "28/01/19 3:05 PM",
      "commitNameOld": "2e636dd3c497a9f0042642296b127686012de57a",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 37.95,
      "commitsBetweenForRepo": 327,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,26 @@\n   public void handle(ContainerEvent event) {\n+    this.writeLock.lock();\n     try {\n-      this.writeLock.lock();\n-\n       ContainerId containerID \u003d event.getContainerID();\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Processing \" + containerID + \" of type \" + event.getType());\n       }\n       ContainerState oldState \u003d stateMachine.getCurrentState();\n       ContainerState newState \u003d null;\n       try {\n         newState \u003d\n             stateMachine.doTransition(event.getType(), event);\n       } catch (InvalidStateTransitionException e) {\n         LOG.warn(\"Can\u0027t handle this event at current state: Current: [\"\n             + oldState + \"], eventType: [\" + event.getType() + \"],\" +\n             \" container: [\" + containerID + \"]\", e);\n       }\n       if (newState !\u003d null \u0026\u0026 oldState !\u003d newState) {\n         LOG.info(\"Container \" + containerID + \" transitioned from \"\n             + oldState\n             + \" to \" + newState);\n       }\n     } finally {\n       this.writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void handle(ContainerEvent event) {\n    this.writeLock.lock();\n    try {\n      ContainerId containerID \u003d event.getContainerID();\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Processing \" + containerID + \" of type \" + event.getType());\n      }\n      ContainerState oldState \u003d stateMachine.getCurrentState();\n      ContainerState newState \u003d null;\n      try {\n        newState \u003d\n            stateMachine.doTransition(event.getType(), event);\n      } catch (InvalidStateTransitionException e) {\n        LOG.warn(\"Can\u0027t handle this event at current state: Current: [\"\n            + oldState + \"], eventType: [\" + event.getType() + \"],\" +\n            \" container: [\" + containerID + \"]\", e);\n      }\n      if (newState !\u003d null \u0026\u0026 oldState !\u003d newState) {\n        LOG.info(\"Container \" + containerID + \" transitioned from \"\n            + oldState\n            + \" to \" + newState);\n      }\n    } finally {\n      this.writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/container/ContainerImpl.java",
      "extendedDetails": {}
    },
    "9262797e86453fc04b7ca3710b73b21fcdf9e6b4": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5257. Fix unreleased resources and null dereferences (yufeigu via rkanter)\n",
      "commitDate": "27/12/16 2:14 PM",
      "commitName": "9262797e86453fc04b7ca3710b73b21fcdf9e6b4",
      "commitAuthor": "Robert Kanter",
      "commitDateOld": "15/11/16 7:56 AM",
      "commitNameOld": "3219b7b4ac7d12aee343f6ab2980b3357fc618b6",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 42.26,
      "commitsBetweenForRepo": 230,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n   public void handle(ContainerEvent event) {\n     try {\n       this.writeLock.lock();\n \n       ContainerId containerID \u003d event.getContainerID();\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Processing \" + containerID + \" of type \" + event.getType());\n       }\n       ContainerState oldState \u003d stateMachine.getCurrentState();\n       ContainerState newState \u003d null;\n       try {\n         newState \u003d\n             stateMachine.doTransition(event.getType(), event);\n       } catch (InvalidStateTransitionException e) {\n         LOG.warn(\"Can\u0027t handle this event at current state: Current: [\"\n             + oldState + \"], eventType: [\" + event.getType() + \"],\" +\n             \" container: [\" + containerID + \"]\", e);\n       }\n-      if (oldState !\u003d newState) {\n+      if (newState !\u003d null \u0026\u0026 oldState !\u003d newState) {\n         LOG.info(\"Container \" + containerID + \" transitioned from \"\n             + oldState\n             + \" to \" + newState);\n       }\n     } finally {\n       this.writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void handle(ContainerEvent event) {\n    try {\n      this.writeLock.lock();\n\n      ContainerId containerID \u003d event.getContainerID();\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Processing \" + containerID + \" of type \" + event.getType());\n      }\n      ContainerState oldState \u003d stateMachine.getCurrentState();\n      ContainerState newState \u003d null;\n      try {\n        newState \u003d\n            stateMachine.doTransition(event.getType(), event);\n      } catch (InvalidStateTransitionException e) {\n        LOG.warn(\"Can\u0027t handle this event at current state: Current: [\"\n            + oldState + \"], eventType: [\" + event.getType() + \"],\" +\n            \" container: [\" + containerID + \"]\", e);\n      }\n      if (newState !\u003d null \u0026\u0026 oldState !\u003d newState) {\n        LOG.info(\"Container \" + containerID + \" transitioned from \"\n            + oldState\n            + \" to \" + newState);\n      }\n    } finally {\n      this.writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/container/ContainerImpl.java",
      "extendedDetails": {}
    },
    "3219b7b4ac7d12aee343f6ab2980b3357fc618b6": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4597. Introduce ContainerScheduler and a SCHEDULED state to NodeManager container lifecycle. (asuresh)\n",
      "commitDate": "15/11/16 7:56 AM",
      "commitName": "3219b7b4ac7d12aee343f6ab2980b3357fc618b6",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "01/11/16 2:21 AM",
      "commitNameOld": "310aa4686eb697f0700a71d33106514c404dab1b",
      "commitAuthorOld": "Varun Saxena",
      "daysBetweenCommits": 14.27,
      "commitsBetweenForRepo": 134,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,27 @@\n   public void handle(ContainerEvent event) {\n     try {\n       this.writeLock.lock();\n \n       ContainerId containerID \u003d event.getContainerID();\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Processing \" + containerID + \" of type \" + event.getType());\n       }\n       ContainerState oldState \u003d stateMachine.getCurrentState();\n       ContainerState newState \u003d null;\n       try {\n         newState \u003d\n             stateMachine.doTransition(event.getType(), event);\n       } catch (InvalidStateTransitionException e) {\n         LOG.warn(\"Can\u0027t handle this event at current state: Current: [\"\n-            + oldState + \"], eventType: [\" + event.getType() + \"]\", e);\n+            + oldState + \"], eventType: [\" + event.getType() + \"],\" +\n+            \" container: [\" + containerID + \"]\", e);\n       }\n       if (oldState !\u003d newState) {\n         LOG.info(\"Container \" + containerID + \" transitioned from \"\n             + oldState\n             + \" to \" + newState);\n       }\n     } finally {\n       this.writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void handle(ContainerEvent event) {\n    try {\n      this.writeLock.lock();\n\n      ContainerId containerID \u003d event.getContainerID();\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Processing \" + containerID + \" of type \" + event.getType());\n      }\n      ContainerState oldState \u003d stateMachine.getCurrentState();\n      ContainerState newState \u003d null;\n      try {\n        newState \u003d\n            stateMachine.doTransition(event.getType(), event);\n      } catch (InvalidStateTransitionException e) {\n        LOG.warn(\"Can\u0027t handle this event at current state: Current: [\"\n            + oldState + \"], eventType: [\" + event.getType() + \"],\" +\n            \" container: [\" + containerID + \"]\", e);\n      }\n      if (oldState !\u003d newState) {\n        LOG.info(\"Container \" + containerID + \" transitioned from \"\n            + oldState\n            + \" to \" + newState);\n      }\n    } finally {\n      this.writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/container/ContainerImpl.java",
      "extendedDetails": {}
    },
    "310aa4686eb697f0700a71d33106514c404dab1b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5805. Add isDebugEnabled check for debug logs in nodemanager (Bibin A Chundatt via Varun Saxena)\n",
      "commitDate": "01/11/16 2:21 AM",
      "commitName": "310aa4686eb697f0700a71d33106514c404dab1b",
      "commitAuthor": "Varun Saxena",
      "commitDateOld": "27/10/16 1:42 PM",
      "commitNameOld": "7e3c327d316b33d6a09bfd4e65e7e5384943bb1d",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 4.53,
      "commitsBetweenForRepo": 42,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,26 @@\n   public void handle(ContainerEvent event) {\n     try {\n       this.writeLock.lock();\n \n       ContainerId containerID \u003d event.getContainerID();\n-      LOG.debug(\"Processing \" + containerID + \" of type \" + event.getType());\n-\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"Processing \" + containerID + \" of type \" + event.getType());\n+      }\n       ContainerState oldState \u003d stateMachine.getCurrentState();\n       ContainerState newState \u003d null;\n       try {\n         newState \u003d\n             stateMachine.doTransition(event.getType(), event);\n       } catch (InvalidStateTransitionException e) {\n         LOG.warn(\"Can\u0027t handle this event at current state: Current: [\"\n             + oldState + \"], eventType: [\" + event.getType() + \"]\", e);\n       }\n       if (oldState !\u003d newState) {\n         LOG.info(\"Container \" + containerID + \" transitioned from \"\n             + oldState\n             + \" to \" + newState);\n       }\n     } finally {\n       this.writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void handle(ContainerEvent event) {\n    try {\n      this.writeLock.lock();\n\n      ContainerId containerID \u003d event.getContainerID();\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Processing \" + containerID + \" of type \" + event.getType());\n      }\n      ContainerState oldState \u003d stateMachine.getCurrentState();\n      ContainerState newState \u003d null;\n      try {\n        newState \u003d\n            stateMachine.doTransition(event.getType(), event);\n      } catch (InvalidStateTransitionException e) {\n        LOG.warn(\"Can\u0027t handle this event at current state: Current: [\"\n            + oldState + \"], eventType: [\" + event.getType() + \"]\", e);\n      }\n      if (oldState !\u003d newState) {\n        LOG.info(\"Container \" + containerID + \" transitioned from \"\n            + oldState\n            + \" to \" + newState);\n      }\n    } finally {\n      this.writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/container/ContainerImpl.java",
      "extendedDetails": {}
    },
    "19295b36d90e26616accee73b1f7743aab5df692": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3381. Fix typo InvalidStateTransitonException. Contributed by Brahma Reddy Battula.\n",
      "commitDate": "13/07/15 1:52 AM",
      "commitName": "19295b36d90e26616accee73b1f7743aab5df692",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "29/05/15 3:34 PM",
      "commitNameOld": "6aec13cb338b0fe62ca915f78aa729c9b0b86fba",
      "commitAuthorOld": "Robert Kanter",
      "daysBetweenCommits": 44.43,
      "commitsBetweenForRepo": 288,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n   public void handle(ContainerEvent event) {\n     try {\n       this.writeLock.lock();\n \n       ContainerId containerID \u003d event.getContainerID();\n       LOG.debug(\"Processing \" + containerID + \" of type \" + event.getType());\n \n       ContainerState oldState \u003d stateMachine.getCurrentState();\n       ContainerState newState \u003d null;\n       try {\n         newState \u003d\n             stateMachine.doTransition(event.getType(), event);\n-      } catch (InvalidStateTransitonException e) {\n+      } catch (InvalidStateTransitionException e) {\n         LOG.warn(\"Can\u0027t handle this event at current state: Current: [\"\n             + oldState + \"], eventType: [\" + event.getType() + \"]\", e);\n       }\n       if (oldState !\u003d newState) {\n         LOG.info(\"Container \" + containerID + \" transitioned from \"\n             + oldState\n             + \" to \" + newState);\n       }\n     } finally {\n       this.writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void handle(ContainerEvent event) {\n    try {\n      this.writeLock.lock();\n\n      ContainerId containerID \u003d event.getContainerID();\n      LOG.debug(\"Processing \" + containerID + \" of type \" + event.getType());\n\n      ContainerState oldState \u003d stateMachine.getCurrentState();\n      ContainerState newState \u003d null;\n      try {\n        newState \u003d\n            stateMachine.doTransition(event.getType(), event);\n      } catch (InvalidStateTransitionException e) {\n        LOG.warn(\"Can\u0027t handle this event at current state: Current: [\"\n            + oldState + \"], eventType: [\" + event.getType() + \"]\", e);\n      }\n      if (oldState !\u003d newState) {\n        LOG.info(\"Container \" + containerID + \" transitioned from \"\n            + oldState\n            + \" to \" + newState);\n      }\n    } finally {\n      this.writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/container/ContainerImpl.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void handle(ContainerEvent event) {\n    try {\n      this.writeLock.lock();\n\n      ContainerId containerID \u003d event.getContainerID();\n      LOG.debug(\"Processing \" + containerID + \" of type \" + event.getType());\n\n      ContainerState oldState \u003d stateMachine.getCurrentState();\n      ContainerState newState \u003d null;\n      try {\n        newState \u003d\n            stateMachine.doTransition(event.getType(), event);\n      } catch (InvalidStateTransitonException e) {\n        LOG.warn(\"Can\u0027t handle this event at current state: Current: [\"\n            + oldState + \"], eventType: [\" + event.getType() + \"]\", e);\n      }\n      if (oldState !\u003d newState) {\n        LOG.info(\"Container \" + containerID + \" transitioned from \"\n            + oldState\n            + \" to \" + newState);\n      }\n    } finally {\n      this.writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/container/ContainerImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/container/ContainerImpl.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/container/ContainerImpl.java"
      }
    },
    "68615600985dfadf067a4967a5e08c1421e7a1c8": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3692. yarn-resourcemanager out and log files can get big. Contributed by Eli Collins\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1233605 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/01/12 2:23 PM",
      "commitName": "68615600985dfadf067a4967a5e08c1421e7a1c8",
      "commitAuthor": "Eli Collins",
      "commitDateOld": "13/01/12 1:15 PM",
      "commitNameOld": "78ff0b720e0418785d53802a1b4e72085c1a3556",
      "commitAuthorOld": "Siddharth Seth",
      "daysBetweenCommits": 6.05,
      "commitsBetweenForRepo": 20,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n   public void handle(ContainerEvent event) {\n     try {\n       this.writeLock.lock();\n \n       ContainerId containerID \u003d event.getContainerID();\n-      LOG.info(\"Processing \" + containerID + \" of type \" + event.getType());\n+      LOG.debug(\"Processing \" + containerID + \" of type \" + event.getType());\n \n       ContainerState oldState \u003d stateMachine.getCurrentState();\n       ContainerState newState \u003d null;\n       try {\n         newState \u003d\n             stateMachine.doTransition(event.getType(), event);\n       } catch (InvalidStateTransitonException e) {\n         LOG.warn(\"Can\u0027t handle this event at current state: Current: [\"\n             + oldState + \"], eventType: [\" + event.getType() + \"]\", e);\n       }\n       if (oldState !\u003d newState) {\n         LOG.info(\"Container \" + containerID + \" transitioned from \"\n             + oldState\n             + \" to \" + newState);\n       }\n     } finally {\n       this.writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void handle(ContainerEvent event) {\n    try {\n      this.writeLock.lock();\n\n      ContainerId containerID \u003d event.getContainerID();\n      LOG.debug(\"Processing \" + containerID + \" of type \" + event.getType());\n\n      ContainerState oldState \u003d stateMachine.getCurrentState();\n      ContainerState newState \u003d null;\n      try {\n        newState \u003d\n            stateMachine.doTransition(event.getType(), event);\n      } catch (InvalidStateTransitonException e) {\n        LOG.warn(\"Can\u0027t handle this event at current state: Current: [\"\n            + oldState + \"], eventType: [\" + event.getType() + \"]\", e);\n      }\n      if (oldState !\u003d newState) {\n        LOG.info(\"Container \" + containerID + \" transitioned from \"\n            + oldState\n            + \" to \" + newState);\n      }\n    } finally {\n      this.writeLock.unlock();\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/container/ContainerImpl.java",
      "extendedDetails": {}
    },
    "8fb67650b146573c20ae010e28b1eca6e16433b3": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2691. Finish up the cleanup of distributed cache file resources and related tests. Contributed by Siddharth Seth.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1167676 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/09/11 11:21 PM",
      "commitName": "8fb67650b146573c20ae010e28b1eca6e16433b3",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "06/09/11 6:24 PM",
      "commitNameOld": "cdfabf5ae289836968b3d296668593b9500b6f26",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 4.21,
      "commitsBetweenForRepo": 32,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,25 @@\n   public void handle(ContainerEvent event) {\n     try {\n       this.writeLock.lock();\n \n       ContainerId containerID \u003d event.getContainerID();\n       LOG.info(\"Processing \" + containerID + \" of type \" + event.getType());\n \n       ContainerState oldState \u003d stateMachine.getCurrentState();\n       ContainerState newState \u003d null;\n       try {\n         newState \u003d\n             stateMachine.doTransition(event.getType(), event);\n       } catch (InvalidStateTransitonException e) {\n-        LOG.warn(\"Can\u0027t handle this event at current state\", e);\n+        LOG.warn(\"Can\u0027t handle this event at current state: Current: [\"\n+            + oldState + \"], eventType: [\" + event.getType() + \"]\", e);\n       }\n       if (oldState !\u003d newState) {\n         LOG.info(\"Container \" + containerID + \" transitioned from \"\n             + oldState\n             + \" to \" + newState);\n       }\n     } finally {\n       this.writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void handle(ContainerEvent event) {\n    try {\n      this.writeLock.lock();\n\n      ContainerId containerID \u003d event.getContainerID();\n      LOG.info(\"Processing \" + containerID + \" of type \" + event.getType());\n\n      ContainerState oldState \u003d stateMachine.getCurrentState();\n      ContainerState newState \u003d null;\n      try {\n        newState \u003d\n            stateMachine.doTransition(event.getType(), event);\n      } catch (InvalidStateTransitonException e) {\n        LOG.warn(\"Can\u0027t handle this event at current state: Current: [\"\n            + oldState + \"], eventType: [\" + event.getType() + \"]\", e);\n      }\n      if (oldState !\u003d newState) {\n        LOG.info(\"Container \" + containerID + \" transitioned from \"\n            + oldState\n            + \" to \" + newState);\n      }\n    } finally {\n      this.writeLock.unlock();\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/container/ContainerImpl.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void handle(ContainerEvent event) {\n    try {\n      this.writeLock.lock();\n\n      ContainerId containerID \u003d event.getContainerID();\n      LOG.info(\"Processing \" + containerID + \" of type \" + event.getType());\n\n      ContainerState oldState \u003d stateMachine.getCurrentState();\n      ContainerState newState \u003d null;\n      try {\n        newState \u003d\n            stateMachine.doTransition(event.getType(), event);\n      } catch (InvalidStateTransitonException e) {\n        LOG.warn(\"Can\u0027t handle this event at current state\", e);\n      }\n      if (oldState !\u003d newState) {\n        LOG.info(\"Container \" + containerID + \" transitioned from \"\n            + oldState\n            + \" to \" + newState);\n      }\n    } finally {\n      this.writeLock.unlock();\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/container/ContainerImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/container/ContainerImpl.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/container/ContainerImpl.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,24 @@\n+  public void handle(ContainerEvent event) {\n+    try {\n+      this.writeLock.lock();\n+\n+      ContainerId containerID \u003d event.getContainerID();\n+      LOG.info(\"Processing \" + containerID + \" of type \" + event.getType());\n+\n+      ContainerState oldState \u003d stateMachine.getCurrentState();\n+      ContainerState newState \u003d null;\n+      try {\n+        newState \u003d\n+            stateMachine.doTransition(event.getType(), event);\n+      } catch (InvalidStateTransitonException e) {\n+        LOG.warn(\"Can\u0027t handle this event at current state\", e);\n+      }\n+      if (oldState !\u003d newState) {\n+        LOG.info(\"Container \" + containerID + \" transitioned from \"\n+            + oldState\n+            + \" to \" + newState);\n+      }\n+    } finally {\n+      this.writeLock.unlock();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void handle(ContainerEvent event) {\n    try {\n      this.writeLock.lock();\n\n      ContainerId containerID \u003d event.getContainerID();\n      LOG.info(\"Processing \" + containerID + \" of type \" + event.getType());\n\n      ContainerState oldState \u003d stateMachine.getCurrentState();\n      ContainerState newState \u003d null;\n      try {\n        newState \u003d\n            stateMachine.doTransition(event.getType(), event);\n      } catch (InvalidStateTransitonException e) {\n        LOG.warn(\"Can\u0027t handle this event at current state\", e);\n      }\n      if (oldState !\u003d newState) {\n        LOG.info(\"Container \" + containerID + \" transitioned from \"\n            + oldState\n            + \" to \" + newState);\n      }\n    } finally {\n      this.writeLock.unlock();\n    }\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/container/ContainerImpl.java"
    }
  }
}