{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Server.java",
  "functionName": "authorize",
  "functionId": "authorize___user-UserGroupInformation__protocolName-String__addr-InetAddress",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Server.java",
  "functionStartLine": 3476,
  "functionEndLine": 3491,
  "numCommitsSeen": 277,
  "timeTaken": 6034,
  "changeHistory": [
    "7ae04652a6adf0f9d04b8702a7fe3b9790afa8b9",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "c3fdd289cf26fa3bb9c0d2d9f906eba769ddd789",
    "642ed17a4808e36f1458546cc66d52e212cc5acf",
    "47d4ebebaca1d023342a93bc87dedbb00a60b2fa",
    "0fd49b35370e3c0c72abaf2007d34d4207347693",
    "fa3a3bf5d8f3167f9725a3f91a0f4ae0481f24ea",
    "d9b6103f8f63f66c254a7bd3a423a2a5fb6672e3",
    "0c5734e4aca873f405fbf994e5fe7061e31731c8",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36"
  ],
  "changeHistoryShort": {
    "7ae04652a6adf0f9d04b8702a7fe3b9790afa8b9": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "c3fdd289cf26fa3bb9c0d2d9f906eba769ddd789": "Ymultichange(Yparameterchange,Ybodychange)",
    "642ed17a4808e36f1458546cc66d52e212cc5acf": "Ybodychange",
    "47d4ebebaca1d023342a93bc87dedbb00a60b2fa": "Ybodychange",
    "0fd49b35370e3c0c72abaf2007d34d4207347693": "Ybodychange",
    "fa3a3bf5d8f3167f9725a3f91a0f4ae0481f24ea": "Ymultichange(Yparameterchange,Ybodychange)",
    "d9b6103f8f63f66c254a7bd3a423a2a5fb6672e3": "Ybodychange",
    "0c5734e4aca873f405fbf994e5fe7061e31731c8": "Ymultichange(Yparameterchange,Ybodychange)",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7ae04652a6adf0f9d04b8702a7fe3b9790afa8b9": {
      "type": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
      "commitMessage": "    HADOOP-7557 Make IPC header be extensible (sanjay radia)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1295261 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/02/12 12:43 PM",
      "commitName": "7ae04652a6adf0f9d04b8702a7fe3b9790afa8b9",
      "commitAuthor": "Sanjay Radia",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "    HADOOP-7557 Make IPC header be extensible (sanjay radia)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1295261 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "29/02/12 12:43 PM",
          "commitName": "7ae04652a6adf0f9d04b8702a7fe3b9790afa8b9",
          "commitAuthor": "Sanjay Radia",
          "commitDateOld": "23/02/12 8:05 PM",
          "commitNameOld": "22d5944c42b4bef5144a9f6426751b15717c5a3e",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 5.69,
          "commitsBetweenForRepo": 51,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,16 @@\n-  public void authorize(UserGroupInformation user, \n-                        ConnectionHeader connection,\n-                        InetAddress addr\n-                        ) throws AuthorizationException {\n+  private void authorize(UserGroupInformation user, String protocolName,\n+      InetAddress addr) throws AuthorizationException {\n     if (authorize) {\n+      if (protocolName \u003d\u003d null) {\n+        throw new AuthorizationException(\"Null protocol not authorized\");\n+      }\n       Class\u003c?\u003e protocol \u003d null;\n       try {\n-        protocol \u003d getProtocolClass(connection.getProtocol(), getConf());\n+        protocol \u003d getProtocolClass(protocolName, getConf());\n       } catch (ClassNotFoundException cfne) {\n         throw new AuthorizationException(\"Unknown protocol: \" + \n-                                         connection.getProtocol());\n+                                         protocolName);\n       }\n       serviceAuthorizationManager.authorize(user, protocol, getConf(), addr);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void authorize(UserGroupInformation user, String protocolName,\n      InetAddress addr) throws AuthorizationException {\n    if (authorize) {\n      if (protocolName \u003d\u003d null) {\n        throw new AuthorizationException(\"Null protocol not authorized\");\n      }\n      Class\u003c?\u003e protocol \u003d null;\n      try {\n        protocol \u003d getProtocolClass(protocolName, getConf());\n      } catch (ClassNotFoundException cfne) {\n        throw new AuthorizationException(\"Unknown protocol: \" + \n                                         protocolName);\n      }\n      serviceAuthorizationManager.authorize(user, protocol, getConf(), addr);\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Server.java",
          "extendedDetails": {
            "oldValue": "[user-UserGroupInformation, connection-ConnectionHeader, addr-InetAddress]",
            "newValue": "[user-UserGroupInformation, protocolName-String, addr-InetAddress]"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "    HADOOP-7557 Make IPC header be extensible (sanjay radia)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1295261 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "29/02/12 12:43 PM",
          "commitName": "7ae04652a6adf0f9d04b8702a7fe3b9790afa8b9",
          "commitAuthor": "Sanjay Radia",
          "commitDateOld": "23/02/12 8:05 PM",
          "commitNameOld": "22d5944c42b4bef5144a9f6426751b15717c5a3e",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 5.69,
          "commitsBetweenForRepo": 51,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,16 @@\n-  public void authorize(UserGroupInformation user, \n-                        ConnectionHeader connection,\n-                        InetAddress addr\n-                        ) throws AuthorizationException {\n+  private void authorize(UserGroupInformation user, String protocolName,\n+      InetAddress addr) throws AuthorizationException {\n     if (authorize) {\n+      if (protocolName \u003d\u003d null) {\n+        throw new AuthorizationException(\"Null protocol not authorized\");\n+      }\n       Class\u003c?\u003e protocol \u003d null;\n       try {\n-        protocol \u003d getProtocolClass(connection.getProtocol(), getConf());\n+        protocol \u003d getProtocolClass(protocolName, getConf());\n       } catch (ClassNotFoundException cfne) {\n         throw new AuthorizationException(\"Unknown protocol: \" + \n-                                         connection.getProtocol());\n+                                         protocolName);\n       }\n       serviceAuthorizationManager.authorize(user, protocol, getConf(), addr);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void authorize(UserGroupInformation user, String protocolName,\n      InetAddress addr) throws AuthorizationException {\n    if (authorize) {\n      if (protocolName \u003d\u003d null) {\n        throw new AuthorizationException(\"Null protocol not authorized\");\n      }\n      Class\u003c?\u003e protocol \u003d null;\n      try {\n        protocol \u003d getProtocolClass(protocolName, getConf());\n      } catch (ClassNotFoundException cfne) {\n        throw new AuthorizationException(\"Unknown protocol: \" + \n                                         protocolName);\n      }\n      serviceAuthorizationManager.authorize(user, protocol, getConf(), addr);\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Server.java",
          "extendedDetails": {
            "oldValue": "[public]",
            "newValue": "[private]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "    HADOOP-7557 Make IPC header be extensible (sanjay radia)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1295261 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "29/02/12 12:43 PM",
          "commitName": "7ae04652a6adf0f9d04b8702a7fe3b9790afa8b9",
          "commitAuthor": "Sanjay Radia",
          "commitDateOld": "23/02/12 8:05 PM",
          "commitNameOld": "22d5944c42b4bef5144a9f6426751b15717c5a3e",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 5.69,
          "commitsBetweenForRepo": 51,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,16 @@\n-  public void authorize(UserGroupInformation user, \n-                        ConnectionHeader connection,\n-                        InetAddress addr\n-                        ) throws AuthorizationException {\n+  private void authorize(UserGroupInformation user, String protocolName,\n+      InetAddress addr) throws AuthorizationException {\n     if (authorize) {\n+      if (protocolName \u003d\u003d null) {\n+        throw new AuthorizationException(\"Null protocol not authorized\");\n+      }\n       Class\u003c?\u003e protocol \u003d null;\n       try {\n-        protocol \u003d getProtocolClass(connection.getProtocol(), getConf());\n+        protocol \u003d getProtocolClass(protocolName, getConf());\n       } catch (ClassNotFoundException cfne) {\n         throw new AuthorizationException(\"Unknown protocol: \" + \n-                                         connection.getProtocol());\n+                                         protocolName);\n       }\n       serviceAuthorizationManager.authorize(user, protocol, getConf(), addr);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void authorize(UserGroupInformation user, String protocolName,\n      InetAddress addr) throws AuthorizationException {\n    if (authorize) {\n      if (protocolName \u003d\u003d null) {\n        throw new AuthorizationException(\"Null protocol not authorized\");\n      }\n      Class\u003c?\u003e protocol \u003d null;\n      try {\n        protocol \u003d getProtocolClass(protocolName, getConf());\n      } catch (ClassNotFoundException cfne) {\n        throw new AuthorizationException(\"Unknown protocol: \" + \n                                         protocolName);\n      }\n      serviceAuthorizationManager.authorize(user, protocol, getConf(), addr);\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Server.java",
          "extendedDetails": {}
        }
      ]
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void authorize(UserGroupInformation user, \n                        ConnectionHeader connection,\n                        InetAddress addr\n                        ) throws AuthorizationException {\n    if (authorize) {\n      Class\u003c?\u003e protocol \u003d null;\n      try {\n        protocol \u003d getProtocolClass(connection.getProtocol(), getConf());\n      } catch (ClassNotFoundException cfne) {\n        throw new AuthorizationException(\"Unknown protocol: \" + \n                                         connection.getProtocol());\n      }\n      serviceAuthorizationManager.authorize(user, protocol, getConf(), addr);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Server.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/ipc/Server.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Server.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void authorize(UserGroupInformation user, \n                        ConnectionHeader connection,\n                        InetAddress addr\n                        ) throws AuthorizationException {\n    if (authorize) {\n      Class\u003c?\u003e protocol \u003d null;\n      try {\n        protocol \u003d getProtocolClass(connection.getProtocol(), getConf());\n      } catch (ClassNotFoundException cfne) {\n        throw new AuthorizationException(\"Unknown protocol: \" + \n                                         connection.getProtocol());\n      }\n      serviceAuthorizationManager.authorize(user, protocol, getConf(), addr);\n    }\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/ipc/Server.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/ipc/Server.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/ipc/Server.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void authorize(UserGroupInformation user, \n                        ConnectionHeader connection,\n                        InetAddress addr\n                        ) throws AuthorizationException {\n    if (authorize) {\n      Class\u003c?\u003e protocol \u003d null;\n      try {\n        protocol \u003d getProtocolClass(connection.getProtocol(), getConf());\n      } catch (ClassNotFoundException cfne) {\n        throw new AuthorizationException(\"Unknown protocol: \" + \n                                         connection.getProtocol());\n      }\n      serviceAuthorizationManager.authorize(user, protocol, getConf(), addr);\n    }\n  }",
      "path": "common/src/java/org/apache/hadoop/ipc/Server.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/ipc/Server.java",
        "newPath": "common/src/java/org/apache/hadoop/ipc/Server.java"
      }
    },
    "c3fdd289cf26fa3bb9c0d2d9f906eba769ddd789": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-7104. Remove unnecessary DNS reverse lookups from RPC layer. Contributed by Kan Zhang\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1059235 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/01/11 6:40 PM",
      "commitName": "c3fdd289cf26fa3bb9c0d2d9f906eba769ddd789",
      "commitAuthor": "Todd Lipcon",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-7104. Remove unnecessary DNS reverse lookups from RPC layer. Contributed by Kan Zhang\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1059235 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "14/01/11 6:40 PM",
          "commitName": "c3fdd289cf26fa3bb9c0d2d9f906eba769ddd789",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "24/11/10 8:36 PM",
          "commitNameOld": "3a43e5930baa4f1ad97a45fff3c7a1800fc11649",
          "commitAuthorOld": "Hairong Kuang",
          "daysBetweenCommits": 50.92,
          "commitsBetweenForRepo": 34,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,15 @@\n   public void authorize(UserGroupInformation user, \n                         ConnectionHeader connection,\n-                        String hostname\n+                        InetAddress addr\n                         ) throws AuthorizationException {\n     if (authorize) {\n       Class\u003c?\u003e protocol \u003d null;\n       try {\n         protocol \u003d getProtocolClass(connection.getProtocol(), getConf());\n       } catch (ClassNotFoundException cfne) {\n         throw new AuthorizationException(\"Unknown protocol: \" + \n                                          connection.getProtocol());\n       }\n-      serviceAuthorizationManager.authorize(user, protocol, getConf(), hostname);\n+      serviceAuthorizationManager.authorize(user, protocol, getConf(), addr);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void authorize(UserGroupInformation user, \n                        ConnectionHeader connection,\n                        InetAddress addr\n                        ) throws AuthorizationException {\n    if (authorize) {\n      Class\u003c?\u003e protocol \u003d null;\n      try {\n        protocol \u003d getProtocolClass(connection.getProtocol(), getConf());\n      } catch (ClassNotFoundException cfne) {\n        throw new AuthorizationException(\"Unknown protocol: \" + \n                                         connection.getProtocol());\n      }\n      serviceAuthorizationManager.authorize(user, protocol, getConf(), addr);\n    }\n  }",
          "path": "src/java/org/apache/hadoop/ipc/Server.java",
          "extendedDetails": {
            "oldValue": "[user-UserGroupInformation, connection-ConnectionHeader, hostname-String]",
            "newValue": "[user-UserGroupInformation, connection-ConnectionHeader, addr-InetAddress]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-7104. Remove unnecessary DNS reverse lookups from RPC layer. Contributed by Kan Zhang\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1059235 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "14/01/11 6:40 PM",
          "commitName": "c3fdd289cf26fa3bb9c0d2d9f906eba769ddd789",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "24/11/10 8:36 PM",
          "commitNameOld": "3a43e5930baa4f1ad97a45fff3c7a1800fc11649",
          "commitAuthorOld": "Hairong Kuang",
          "daysBetweenCommits": 50.92,
          "commitsBetweenForRepo": 34,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,15 @@\n   public void authorize(UserGroupInformation user, \n                         ConnectionHeader connection,\n-                        String hostname\n+                        InetAddress addr\n                         ) throws AuthorizationException {\n     if (authorize) {\n       Class\u003c?\u003e protocol \u003d null;\n       try {\n         protocol \u003d getProtocolClass(connection.getProtocol(), getConf());\n       } catch (ClassNotFoundException cfne) {\n         throw new AuthorizationException(\"Unknown protocol: \" + \n                                          connection.getProtocol());\n       }\n-      serviceAuthorizationManager.authorize(user, protocol, getConf(), hostname);\n+      serviceAuthorizationManager.authorize(user, protocol, getConf(), addr);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void authorize(UserGroupInformation user, \n                        ConnectionHeader connection,\n                        InetAddress addr\n                        ) throws AuthorizationException {\n    if (authorize) {\n      Class\u003c?\u003e protocol \u003d null;\n      try {\n        protocol \u003d getProtocolClass(connection.getProtocol(), getConf());\n      } catch (ClassNotFoundException cfne) {\n        throw new AuthorizationException(\"Unknown protocol: \" + \n                                         connection.getProtocol());\n      }\n      serviceAuthorizationManager.authorize(user, protocol, getConf(), addr);\n    }\n  }",
          "path": "src/java/org/apache/hadoop/ipc/Server.java",
          "extendedDetails": {}
        }
      ]
    },
    "642ed17a4808e36f1458546cc66d52e212cc5acf": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-6951.  Distinct minicluster services (e.g. NN and JT) overwrite each other\u0027s service policies.  Contributed by Aaron T. Myers.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1002896 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/09/10 4:49 PM",
      "commitName": "642ed17a4808e36f1458546cc66d52e212cc5acf",
      "commitAuthor": "Thomas White",
      "commitDateOld": "24/09/10 7:41 PM",
      "commitNameOld": "47d4ebebaca1d023342a93bc87dedbb00a60b2fa",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 4.88,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n   public void authorize(UserGroupInformation user, \n                         ConnectionHeader connection,\n                         String hostname\n                         ) throws AuthorizationException {\n     if (authorize) {\n       Class\u003c?\u003e protocol \u003d null;\n       try {\n         protocol \u003d getProtocolClass(connection.getProtocol(), getConf());\n       } catch (ClassNotFoundException cfne) {\n         throw new AuthorizationException(\"Unknown protocol: \" + \n                                          connection.getProtocol());\n       }\n-      ServiceAuthorizationManager.authorize(user, protocol, getConf(), hostname);\n+      serviceAuthorizationManager.authorize(user, protocol, getConf(), hostname);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void authorize(UserGroupInformation user, \n                        ConnectionHeader connection,\n                        String hostname\n                        ) throws AuthorizationException {\n    if (authorize) {\n      Class\u003c?\u003e protocol \u003d null;\n      try {\n        protocol \u003d getProtocolClass(connection.getProtocol(), getConf());\n      } catch (ClassNotFoundException cfne) {\n        throw new AuthorizationException(\"Unknown protocol: \" + \n                                         connection.getProtocol());\n      }\n      serviceAuthorizationManager.authorize(user, protocol, getConf(), hostname);\n    }\n  }",
      "path": "src/java/org/apache/hadoop/ipc/Server.java",
      "extendedDetails": {}
    },
    "47d4ebebaca1d023342a93bc87dedbb00a60b2fa": {
      "type": "Ybodychange",
      "commitMessage": "Reverting commit 1001067 while related HDFS and MR JIRAs are tested (HADOOP-6951).\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1001127 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/09/10 7:41 PM",
      "commitName": "47d4ebebaca1d023342a93bc87dedbb00a60b2fa",
      "commitAuthor": "Thomas White",
      "commitDateOld": "24/09/10 1:48 PM",
      "commitNameOld": "0fd49b35370e3c0c72abaf2007d34d4207347693",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.24,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n   public void authorize(UserGroupInformation user, \n                         ConnectionHeader connection,\n                         String hostname\n                         ) throws AuthorizationException {\n     if (authorize) {\n       Class\u003c?\u003e protocol \u003d null;\n       try {\n         protocol \u003d getProtocolClass(connection.getProtocol(), getConf());\n       } catch (ClassNotFoundException cfne) {\n         throw new AuthorizationException(\"Unknown protocol: \" + \n                                          connection.getProtocol());\n       }\n-      serviceAuthorizationManager.authorize(user, protocol, getConf(), hostname);\n+      ServiceAuthorizationManager.authorize(user, protocol, getConf(), hostname);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void authorize(UserGroupInformation user, \n                        ConnectionHeader connection,\n                        String hostname\n                        ) throws AuthorizationException {\n    if (authorize) {\n      Class\u003c?\u003e protocol \u003d null;\n      try {\n        protocol \u003d getProtocolClass(connection.getProtocol(), getConf());\n      } catch (ClassNotFoundException cfne) {\n        throw new AuthorizationException(\"Unknown protocol: \" + \n                                         connection.getProtocol());\n      }\n      ServiceAuthorizationManager.authorize(user, protocol, getConf(), hostname);\n    }\n  }",
      "path": "src/java/org/apache/hadoop/ipc/Server.java",
      "extendedDetails": {}
    },
    "0fd49b35370e3c0c72abaf2007d34d4207347693": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-6951. Distinct minicluster services (e.g. NN and JT) overwrite each other\u0027s service policies. Contributed by Aaron T. Myers\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1001067 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/09/10 1:48 PM",
      "commitName": "0fd49b35370e3c0c72abaf2007d34d4207347693",
      "commitAuthor": "Thomas White",
      "commitDateOld": "28/08/10 3:44 PM",
      "commitNameOld": "7efb9640be26aabe3878310e82248a1b6b767a9a",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 26.92,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n   public void authorize(UserGroupInformation user, \n                         ConnectionHeader connection,\n                         String hostname\n                         ) throws AuthorizationException {\n     if (authorize) {\n       Class\u003c?\u003e protocol \u003d null;\n       try {\n         protocol \u003d getProtocolClass(connection.getProtocol(), getConf());\n       } catch (ClassNotFoundException cfne) {\n         throw new AuthorizationException(\"Unknown protocol: \" + \n                                          connection.getProtocol());\n       }\n-      ServiceAuthorizationManager.authorize(user, protocol, getConf(), hostname);\n+      serviceAuthorizationManager.authorize(user, protocol, getConf(), hostname);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void authorize(UserGroupInformation user, \n                        ConnectionHeader connection,\n                        String hostname\n                        ) throws AuthorizationException {\n    if (authorize) {\n      Class\u003c?\u003e protocol \u003d null;\n      try {\n        protocol \u003d getProtocolClass(connection.getProtocol(), getConf());\n      } catch (ClassNotFoundException cfne) {\n        throw new AuthorizationException(\"Unknown protocol: \" + \n                                         connection.getProtocol());\n      }\n      serviceAuthorizationManager.authorize(user, protocol, getConf(), hostname);\n    }\n  }",
      "path": "src/java/org/apache/hadoop/ipc/Server.java",
      "extendedDetails": {}
    },
    "fa3a3bf5d8f3167f9725a3f91a0f4ae0481f24ea": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-6632. Adds support for using different keytabs for different servers in a Hadoop cluster. In the earier implementation, all servers of a certain type \\(like TaskTracker\\), would have the same keytab and the same principal. Now the principal name is a pattern that has _HOST in it. Contributed by Kan Zhang \u0026 Jitendra Pandey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@965696 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/07/10 5:46 PM",
      "commitName": "fa3a3bf5d8f3167f9725a3f91a0f4ae0481f24ea",
      "commitAuthor": "Devaraj Das",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-6632. Adds support for using different keytabs for different servers in a Hadoop cluster. In the earier implementation, all servers of a certain type \\(like TaskTracker\\), would have the same keytab and the same principal. Now the principal name is a pattern that has _HOST in it. Contributed by Kan Zhang \u0026 Jitendra Pandey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@965696 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "19/07/10 5:46 PM",
          "commitName": "fa3a3bf5d8f3167f9725a3f91a0f4ae0481f24ea",
          "commitAuthor": "Devaraj Das",
          "commitDateOld": "11/06/10 5:13 PM",
          "commitNameOld": "8fa094ad6ad3b4f8a3102b79d4e36146f53abea8",
          "commitAuthorOld": "Devaraj Das",
          "daysBetweenCommits": 38.02,
          "commitsBetweenForRepo": 28,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,15 @@\n   public void authorize(UserGroupInformation user, \n-                        ConnectionHeader connection\n+                        ConnectionHeader connection,\n+                        String hostname\n                         ) throws AuthorizationException {\n     if (authorize) {\n       Class\u003c?\u003e protocol \u003d null;\n       try {\n         protocol \u003d getProtocolClass(connection.getProtocol(), getConf());\n       } catch (ClassNotFoundException cfne) {\n         throw new AuthorizationException(\"Unknown protocol: \" + \n                                          connection.getProtocol());\n       }\n-      ServiceAuthorizationManager.authorize(user, protocol, getConf());\n+      ServiceAuthorizationManager.authorize(user, protocol, getConf(), hostname);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void authorize(UserGroupInformation user, \n                        ConnectionHeader connection,\n                        String hostname\n                        ) throws AuthorizationException {\n    if (authorize) {\n      Class\u003c?\u003e protocol \u003d null;\n      try {\n        protocol \u003d getProtocolClass(connection.getProtocol(), getConf());\n      } catch (ClassNotFoundException cfne) {\n        throw new AuthorizationException(\"Unknown protocol: \" + \n                                         connection.getProtocol());\n      }\n      ServiceAuthorizationManager.authorize(user, protocol, getConf(), hostname);\n    }\n  }",
          "path": "src/java/org/apache/hadoop/ipc/Server.java",
          "extendedDetails": {
            "oldValue": "[user-UserGroupInformation, connection-ConnectionHeader]",
            "newValue": "[user-UserGroupInformation, connection-ConnectionHeader, hostname-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-6632. Adds support for using different keytabs for different servers in a Hadoop cluster. In the earier implementation, all servers of a certain type \\(like TaskTracker\\), would have the same keytab and the same principal. Now the principal name is a pattern that has _HOST in it. Contributed by Kan Zhang \u0026 Jitendra Pandey.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@965696 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "19/07/10 5:46 PM",
          "commitName": "fa3a3bf5d8f3167f9725a3f91a0f4ae0481f24ea",
          "commitAuthor": "Devaraj Das",
          "commitDateOld": "11/06/10 5:13 PM",
          "commitNameOld": "8fa094ad6ad3b4f8a3102b79d4e36146f53abea8",
          "commitAuthorOld": "Devaraj Das",
          "daysBetweenCommits": 38.02,
          "commitsBetweenForRepo": 28,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,15 @@\n   public void authorize(UserGroupInformation user, \n-                        ConnectionHeader connection\n+                        ConnectionHeader connection,\n+                        String hostname\n                         ) throws AuthorizationException {\n     if (authorize) {\n       Class\u003c?\u003e protocol \u003d null;\n       try {\n         protocol \u003d getProtocolClass(connection.getProtocol(), getConf());\n       } catch (ClassNotFoundException cfne) {\n         throw new AuthorizationException(\"Unknown protocol: \" + \n                                          connection.getProtocol());\n       }\n-      ServiceAuthorizationManager.authorize(user, protocol, getConf());\n+      ServiceAuthorizationManager.authorize(user, protocol, getConf(), hostname);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void authorize(UserGroupInformation user, \n                        ConnectionHeader connection,\n                        String hostname\n                        ) throws AuthorizationException {\n    if (authorize) {\n      Class\u003c?\u003e protocol \u003d null;\n      try {\n        protocol \u003d getProtocolClass(connection.getProtocol(), getConf());\n      } catch (ClassNotFoundException cfne) {\n        throw new AuthorizationException(\"Unknown protocol: \" + \n                                         connection.getProtocol());\n      }\n      ServiceAuthorizationManager.authorize(user, protocol, getConf(), hostname);\n    }\n  }",
          "path": "src/java/org/apache/hadoop/ipc/Server.java",
          "extendedDetails": {}
        }
      ]
    },
    "d9b6103f8f63f66c254a7bd3a423a2a5fb6672e3": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-6600. mechanism for authorization check for inter-server protocols\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@944012 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/05/10 1:52 PM",
      "commitName": "d9b6103f8f63f66c254a7bd3a423a2a5fb6672e3",
      "commitAuthor": "Boris Shkolnik",
      "commitDateOld": "27/04/10 11:13 AM",
      "commitNameOld": "b212ed99c5933d2fd6a6259698b00a544e432361",
      "commitAuthorOld": "Hairong Kuang",
      "daysBetweenCommits": 16.11,
      "commitsBetweenForRepo": 22,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n   public void authorize(UserGroupInformation user, \n                         ConnectionHeader connection\n                         ) throws AuthorizationException {\n     if (authorize) {\n       Class\u003c?\u003e protocol \u003d null;\n       try {\n         protocol \u003d getProtocolClass(connection.getProtocol(), getConf());\n       } catch (ClassNotFoundException cfne) {\n         throw new AuthorizationException(\"Unknown protocol: \" + \n                                          connection.getProtocol());\n       }\n-      ServiceAuthorizationManager.authorize(user, protocol);\n+      ServiceAuthorizationManager.authorize(user, protocol, getConf());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void authorize(UserGroupInformation user, \n                        ConnectionHeader connection\n                        ) throws AuthorizationException {\n    if (authorize) {\n      Class\u003c?\u003e protocol \u003d null;\n      try {\n        protocol \u003d getProtocolClass(connection.getProtocol(), getConf());\n      } catch (ClassNotFoundException cfne) {\n        throw new AuthorizationException(\"Unknown protocol: \" + \n                                         connection.getProtocol());\n      }\n      ServiceAuthorizationManager.authorize(user, protocol, getConf());\n    }\n  }",
      "path": "src/java/org/apache/hadoop/ipc/Server.java",
      "extendedDetails": {}
    },
    "0c5734e4aca873f405fbf994e5fe7061e31731c8": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-6299. Reimplement the UserGroupInformation to use the OS\nspecific and Kerberos JAAS login. (omalley)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@903560 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/01/10 12:08 AM",
      "commitName": "0c5734e4aca873f405fbf994e5fe7061e31731c8",
      "commitAuthor": "Owen O\u0027Malley",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-6299. Reimplement the UserGroupInformation to use the OS\nspecific and Kerberos JAAS login. (omalley)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@903560 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "27/01/10 12:08 AM",
          "commitName": "0c5734e4aca873f405fbf994e5fe7061e31731c8",
          "commitAuthor": "Owen O\u0027Malley",
          "commitDateOld": "23/12/09 4:47 PM",
          "commitNameOld": "29a1ba1e8fb11432404cea49e46eef47c36bb70a",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 34.31,
          "commitsBetweenForRepo": 23,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,2 +1,14 @@\n-  public void authorize(Subject user, ConnectionHeader connection) \n-  throws AuthorizationException {}\n\\ No newline at end of file\n+  public void authorize(UserGroupInformation user, \n+                        ConnectionHeader connection\n+                        ) throws AuthorizationException {\n+    if (authorize) {\n+      Class\u003c?\u003e protocol \u003d null;\n+      try {\n+        protocol \u003d getProtocolClass(connection.getProtocol(), getConf());\n+      } catch (ClassNotFoundException cfne) {\n+        throw new AuthorizationException(\"Unknown protocol: \" + \n+                                         connection.getProtocol());\n+      }\n+      ServiceAuthorizationManager.authorize(user, protocol);\n+    }\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  public void authorize(UserGroupInformation user, \n                        ConnectionHeader connection\n                        ) throws AuthorizationException {\n    if (authorize) {\n      Class\u003c?\u003e protocol \u003d null;\n      try {\n        protocol \u003d getProtocolClass(connection.getProtocol(), getConf());\n      } catch (ClassNotFoundException cfne) {\n        throw new AuthorizationException(\"Unknown protocol: \" + \n                                         connection.getProtocol());\n      }\n      ServiceAuthorizationManager.authorize(user, protocol);\n    }\n  }",
          "path": "src/java/org/apache/hadoop/ipc/Server.java",
          "extendedDetails": {
            "oldValue": "[user-Subject, connection-ConnectionHeader]",
            "newValue": "[user-UserGroupInformation, connection-ConnectionHeader]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-6299. Reimplement the UserGroupInformation to use the OS\nspecific and Kerberos JAAS login. (omalley)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@903560 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "27/01/10 12:08 AM",
          "commitName": "0c5734e4aca873f405fbf994e5fe7061e31731c8",
          "commitAuthor": "Owen O\u0027Malley",
          "commitDateOld": "23/12/09 4:47 PM",
          "commitNameOld": "29a1ba1e8fb11432404cea49e46eef47c36bb70a",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 34.31,
          "commitsBetweenForRepo": 23,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,2 +1,14 @@\n-  public void authorize(Subject user, ConnectionHeader connection) \n-  throws AuthorizationException {}\n\\ No newline at end of file\n+  public void authorize(UserGroupInformation user, \n+                        ConnectionHeader connection\n+                        ) throws AuthorizationException {\n+    if (authorize) {\n+      Class\u003c?\u003e protocol \u003d null;\n+      try {\n+        protocol \u003d getProtocolClass(connection.getProtocol(), getConf());\n+      } catch (ClassNotFoundException cfne) {\n+        throw new AuthorizationException(\"Unknown protocol: \" + \n+                                         connection.getProtocol());\n+      }\n+      ServiceAuthorizationManager.authorize(user, protocol);\n+    }\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  public void authorize(UserGroupInformation user, \n                        ConnectionHeader connection\n                        ) throws AuthorizationException {\n    if (authorize) {\n      Class\u003c?\u003e protocol \u003d null;\n      try {\n        protocol \u003d getProtocolClass(connection.getProtocol(), getConf());\n      } catch (ClassNotFoundException cfne) {\n        throw new AuthorizationException(\"Unknown protocol: \" + \n                                         connection.getProtocol());\n      }\n      ServiceAuthorizationManager.authorize(user, protocol);\n    }\n  }",
          "path": "src/java/org/apache/hadoop/ipc/Server.java",
          "extendedDetails": {}
        }
      ]
    },
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-4687 Moving src directories on branch\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/core/branches/HADOOP-4687/core@776174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/05/09 9:20 PM",
      "commitName": "5128a9a453d64bfe1ed978cf9ffed27985eeef36",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,2 @@\n+  public void authorize(Subject user, ConnectionHeader connection) \n+  throws AuthorizationException {}\n\\ No newline at end of file\n",
      "actualSource": "  public void authorize(Subject user, ConnectionHeader connection) \n  throws AuthorizationException {}",
      "path": "src/java/org/apache/hadoop/ipc/Server.java"
    }
  }
}