{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AbstractClientRequestInterceptor.java",
  "functionName": "setupUser",
  "functionId": "setupUser___userName-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-router/src/main/java/org/apache/hadoop/yarn/server/router/clientrm/AbstractClientRequestInterceptor.java",
  "functionStartLine": 104,
  "functionEndLine": 125,
  "numCommitsSeen": 3,
  "timeTaken": 845,
  "changeHistory": [
    "43a97174fe49aa0c25d03b8a970a46d4bebf1aa8"
  ],
  "changeHistoryShort": {
    "43a97174fe49aa0c25d03b8a970a46d4bebf1aa8": "Yintroduced"
  },
  "changeHistoryDetails": {
    "43a97174fe49aa0c25d03b8a970a46d4bebf1aa8": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3659. Federation: routing client invocations transparently to multiple RMs. (Giovanni Matteo Fumarola via Subru).\n\n(cherry picked from commit 52daa6d971ae408d121b3737ea8c0575e7e8516d)\n",
      "commitDate": "01/08/17 5:28 PM",
      "commitName": "43a97174fe49aa0c25d03b8a970a46d4bebf1aa8",
      "commitAuthor": "Subru Krishnan",
      "diff": "@@ -0,0 +1,22 @@\n+  private void setupUser(String userName) {\n+\n+    try {\n+      // Do not create a proxy user if user name matches the user name on\n+      // current UGI\n+      if (userName.equalsIgnoreCase(\n+          UserGroupInformation.getCurrentUser().getUserName())) {\n+        user \u003d UserGroupInformation.getCurrentUser();\n+      } else {\n+        user \u003d UserGroupInformation.createProxyUser(userName,\n+            UserGroupInformation.getCurrentUser());\n+      }\n+    } catch (IOException e) {\n+      String message \u003d \"Error while creating Router ClientRM Service for user:\";\n+      if (user !\u003d null) {\n+        message +\u003d \", user: \" + user;\n+      }\n+\n+      LOG.info(message);\n+      throw new YarnRuntimeException(message, e);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void setupUser(String userName) {\n\n    try {\n      // Do not create a proxy user if user name matches the user name on\n      // current UGI\n      if (userName.equalsIgnoreCase(\n          UserGroupInformation.getCurrentUser().getUserName())) {\n        user \u003d UserGroupInformation.getCurrentUser();\n      } else {\n        user \u003d UserGroupInformation.createProxyUser(userName,\n            UserGroupInformation.getCurrentUser());\n      }\n    } catch (IOException e) {\n      String message \u003d \"Error while creating Router ClientRM Service for user:\";\n      if (user !\u003d null) {\n        message +\u003d \", user: \" + user;\n      }\n\n      LOG.info(message);\n      throw new YarnRuntimeException(message, e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-router/src/main/java/org/apache/hadoop/yarn/server/router/clientrm/AbstractClientRequestInterceptor.java"
    }
  }
}