{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMContainerAllocator.java",
  "functionName": "processFinishedContainer",
  "functionId": "processFinishedContainer___container-ContainerStatus",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerAllocator.java",
  "functionStartLine": 896,
  "functionEndLine": 916,
  "numCommitsSeen": 82,
  "timeTaken": 1398,
  "changeHistory": [
    "a1b8251bf7a7e9b776c4483fa01f7d453420eba4"
  ],
  "changeHistoryShort": {
    "a1b8251bf7a7e9b776c4483fa01f7d453420eba4": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a1b8251bf7a7e9b776c4483fa01f7d453420eba4": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-6771. RMContainerAllocator sends container diagnostics event after corresponding completion event. Contributed by Haibo Chen\n",
      "commitDate": "29/09/16 8:27 AM",
      "commitName": "a1b8251bf7a7e9b776c4483fa01f7d453420eba4",
      "commitAuthor": "Jason Lowe",
      "diff": "@@ -0,0 +1,21 @@\n+  void processFinishedContainer(ContainerStatus container) {\n+    LOG.info(\"Received completed container \" + container.getContainerId());\n+    TaskAttemptId attemptID \u003d assignedRequests.get(container.getContainerId());\n+    if (attemptID \u003d\u003d null) {\n+      LOG.error(\"Container complete event for unknown container \"\n+          + container.getContainerId());\n+    } else {\n+      pendingRelease.remove(container.getContainerId());\n+      assignedRequests.remove(attemptID);\n+\n+      // Send the diagnostics\n+      String diagnostic \u003d StringInterner.weakIntern(container.getDiagnostics());\n+      eventHandler.handle(new TaskAttemptDiagnosticsUpdateEvent(attemptID,\n+          diagnostic));\n+\n+      // send the container completed event to Task attempt\n+      eventHandler.handle(createContainerFinishedEvent(container, attemptID));\n+\n+      preemptionPolicy.handleCompletedContainer(attemptID);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  void processFinishedContainer(ContainerStatus container) {\n    LOG.info(\"Received completed container \" + container.getContainerId());\n    TaskAttemptId attemptID \u003d assignedRequests.get(container.getContainerId());\n    if (attemptID \u003d\u003d null) {\n      LOG.error(\"Container complete event for unknown container \"\n          + container.getContainerId());\n    } else {\n      pendingRelease.remove(container.getContainerId());\n      assignedRequests.remove(attemptID);\n\n      // Send the diagnostics\n      String diagnostic \u003d StringInterner.weakIntern(container.getDiagnostics());\n      eventHandler.handle(new TaskAttemptDiagnosticsUpdateEvent(attemptID,\n          diagnostic));\n\n      // send the container completed event to Task attempt\n      eventHandler.handle(createContainerFinishedEvent(container, attemptID));\n\n      preemptionPolicy.handleCompletedContainer(attemptID);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerAllocator.java"
    }
  }
}