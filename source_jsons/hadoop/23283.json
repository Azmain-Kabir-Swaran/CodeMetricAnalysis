{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DBOutputFormat.java",
  "functionName": "getRecordWriter",
  "functionId": "getRecordWriter___context-TaskAttemptContext",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/db/DBOutputFormat.java",
  "functionStartLine": 176,
  "functionEndLine": 199,
  "numCommitsSeen": 5,
  "timeTaken": 4687,
  "changeHistory": [
    "f484a6ff602d48413556a1d046670e2003c71c2e",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "f484a6ff602d48413556a1d046670e2003c71c2e": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f484a6ff602d48413556a1d046670e2003c71c2e": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6246. DBOutputFormat.java appending extra semicolon to query which is incompatible with DB2. Contributed by ramtin and Gergely Nov√°k.\n",
      "commitDate": "07/07/17 1:26 PM",
      "commitName": "f484a6ff602d48413556a1d046670e2003c71c2e",
      "commitAuthor": "Junping Du",
      "commitDateOld": "24/08/11 5:14 PM",
      "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 2143.84,
      "commitsBetweenForRepo": 14771,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,24 @@\n   public RecordWriter\u003cK, V\u003e getRecordWriter(TaskAttemptContext context) \n       throws IOException {\n     DBConfiguration dbConf \u003d new DBConfiguration(context.getConfiguration());\n     String tableName \u003d dbConf.getOutputTableName();\n     String[] fieldNames \u003d dbConf.getOutputFieldNames();\n     \n     if(fieldNames \u003d\u003d null) {\n       fieldNames \u003d new String[dbConf.getOutputFieldCount()];\n     }\n     \n     try {\n       Connection connection \u003d dbConf.getConnection();\n       PreparedStatement statement \u003d null;\n-  \n+\n+      DatabaseMetaData dbMeta \u003d connection.getMetaData();\n+      this.dbProductName \u003d dbMeta.getDatabaseProductName().toUpperCase();\n+\n       statement \u003d connection.prepareStatement(\n                     constructQuery(tableName, fieldNames));\n       return new DBRecordWriter(connection, statement);\n     } catch (Exception ex) {\n       throw new IOException(ex.getMessage());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public RecordWriter\u003cK, V\u003e getRecordWriter(TaskAttemptContext context) \n      throws IOException {\n    DBConfiguration dbConf \u003d new DBConfiguration(context.getConfiguration());\n    String tableName \u003d dbConf.getOutputTableName();\n    String[] fieldNames \u003d dbConf.getOutputFieldNames();\n    \n    if(fieldNames \u003d\u003d null) {\n      fieldNames \u003d new String[dbConf.getOutputFieldCount()];\n    }\n    \n    try {\n      Connection connection \u003d dbConf.getConnection();\n      PreparedStatement statement \u003d null;\n\n      DatabaseMetaData dbMeta \u003d connection.getMetaData();\n      this.dbProductName \u003d dbMeta.getDatabaseProductName().toUpperCase();\n\n      statement \u003d connection.prepareStatement(\n                    constructQuery(tableName, fieldNames));\n      return new DBRecordWriter(connection, statement);\n    } catch (Exception ex) {\n      throw new IOException(ex.getMessage());\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/db/DBOutputFormat.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public RecordWriter\u003cK, V\u003e getRecordWriter(TaskAttemptContext context) \n      throws IOException {\n    DBConfiguration dbConf \u003d new DBConfiguration(context.getConfiguration());\n    String tableName \u003d dbConf.getOutputTableName();\n    String[] fieldNames \u003d dbConf.getOutputFieldNames();\n    \n    if(fieldNames \u003d\u003d null) {\n      fieldNames \u003d new String[dbConf.getOutputFieldCount()];\n    }\n    \n    try {\n      Connection connection \u003d dbConf.getConnection();\n      PreparedStatement statement \u003d null;\n  \n      statement \u003d connection.prepareStatement(\n                    constructQuery(tableName, fieldNames));\n      return new DBRecordWriter(connection, statement);\n    } catch (Exception ex) {\n      throw new IOException(ex.getMessage());\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/db/DBOutputFormat.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/db/DBOutputFormat.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/db/DBOutputFormat.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public RecordWriter\u003cK, V\u003e getRecordWriter(TaskAttemptContext context) \n      throws IOException {\n    DBConfiguration dbConf \u003d new DBConfiguration(context.getConfiguration());\n    String tableName \u003d dbConf.getOutputTableName();\n    String[] fieldNames \u003d dbConf.getOutputFieldNames();\n    \n    if(fieldNames \u003d\u003d null) {\n      fieldNames \u003d new String[dbConf.getOutputFieldCount()];\n    }\n    \n    try {\n      Connection connection \u003d dbConf.getConnection();\n      PreparedStatement statement \u003d null;\n  \n      statement \u003d connection.prepareStatement(\n                    constructQuery(tableName, fieldNames));\n      return new DBRecordWriter(connection, statement);\n    } catch (Exception ex) {\n      throw new IOException(ex.getMessage());\n    }\n  }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/db/DBOutputFormat.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/java/org/apache/hadoop/mapreduce/lib/db/DBOutputFormat.java",
        "newPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/db/DBOutputFormat.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,21 @@\n+  public RecordWriter\u003cK, V\u003e getRecordWriter(TaskAttemptContext context) \n+      throws IOException {\n+    DBConfiguration dbConf \u003d new DBConfiguration(context.getConfiguration());\n+    String tableName \u003d dbConf.getOutputTableName();\n+    String[] fieldNames \u003d dbConf.getOutputFieldNames();\n+    \n+    if(fieldNames \u003d\u003d null) {\n+      fieldNames \u003d new String[dbConf.getOutputFieldCount()];\n+    }\n+    \n+    try {\n+      Connection connection \u003d dbConf.getConnection();\n+      PreparedStatement statement \u003d null;\n+  \n+      statement \u003d connection.prepareStatement(\n+                    constructQuery(tableName, fieldNames));\n+      return new DBRecordWriter(connection, statement);\n+    } catch (Exception ex) {\n+      throw new IOException(ex.getMessage());\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public RecordWriter\u003cK, V\u003e getRecordWriter(TaskAttemptContext context) \n      throws IOException {\n    DBConfiguration dbConf \u003d new DBConfiguration(context.getConfiguration());\n    String tableName \u003d dbConf.getOutputTableName();\n    String[] fieldNames \u003d dbConf.getOutputFieldNames();\n    \n    if(fieldNames \u003d\u003d null) {\n      fieldNames \u003d new String[dbConf.getOutputFieldCount()];\n    }\n    \n    try {\n      Connection connection \u003d dbConf.getConnection();\n      PreparedStatement statement \u003d null;\n  \n      statement \u003d connection.prepareStatement(\n                    constructQuery(tableName, fieldNames));\n      return new DBRecordWriter(connection, statement);\n    } catch (Exception ex) {\n      throw new IOException(ex.getMessage());\n    }\n  }",
      "path": "mapreduce/src/java/org/apache/hadoop/mapreduce/lib/db/DBOutputFormat.java"
    }
  }
}