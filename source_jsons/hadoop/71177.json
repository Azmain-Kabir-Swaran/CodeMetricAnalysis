{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ApplicationMaster.java",
  "functionName": "getLocalResources",
  "functionId": "getLocalResources",
  "sourceFilePath": "hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/java/org/apache/hadoop/tools/dynamometer/ApplicationMaster.java",
  "functionStartLine": 719,
  "functionEndLine": 749,
  "numCommitsSeen": 2,
  "timeTaken": 405,
  "changeHistory": [
    "ab0b180ddb5d0775a2452d5eeb7badd252aadb91"
  ],
  "changeHistoryShort": {
    "ab0b180ddb5d0775a2452d5eeb7badd252aadb91": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ab0b180ddb5d0775a2452d5eeb7badd252aadb91": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-12345 Add Dynamometer to hadoop-tools, a tool for scale testing the HDFS NameNode with real metadata and workloads. Contributed by Erik Krogen.\n",
      "commitDate": "25/06/19 8:07 AM",
      "commitName": "ab0b180ddb5d0775a2452d5eeb7badd252aadb91",
      "commitAuthor": "Erik Krogen",
      "diff": "@@ -0,0 +1,31 @@\n+    private Map\u003cString, LocalResource\u003e getLocalResources() {\n+      Map\u003cString, LocalResource\u003e localResources \u003d new HashMap\u003c\u003e();\n+\n+      Map\u003cString, String\u003e envs \u003d System.getenv();\n+      addAsLocalResourceFromEnv(DynoConstants.CONF_ZIP, localResources, envs);\n+      addAsLocalResourceFromEnv(DynoConstants.START_SCRIPT, localResources,\n+          envs);\n+      addAsLocalResourceFromEnv(DynoConstants.HADOOP_BINARY, localResources,\n+          envs);\n+      addAsLocalResourceFromEnv(DynoConstants.VERSION, localResources, envs);\n+      addAsLocalResourceFromEnv(DynoConstants.DYNO_DEPENDENCIES, localResources,\n+          envs);\n+      if (isNameNodeLauncher) {\n+        addAsLocalResourceFromEnv(DynoConstants.FS_IMAGE, localResources, envs);\n+        addAsLocalResourceFromEnv(DynoConstants.FS_IMAGE_MD5, localResources,\n+            envs);\n+      } else {\n+        int blockFilesToLocalize \u003d Math.max(1,\n+            amOptions.getDataNodesPerCluster());\n+        for (int i \u003d 0; i \u003c blockFilesToLocalize; i++) {\n+          try {\n+            localResources.put(\n+                DynoConstants.BLOCK_LIST_RESOURCE_PATH_PREFIX + i,\n+                blockListFiles.remove(0));\n+          } catch (IndexOutOfBoundsException e) {\n+            break;\n+          }\n+        }\n+      }\n+      return localResources;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private Map\u003cString, LocalResource\u003e getLocalResources() {\n      Map\u003cString, LocalResource\u003e localResources \u003d new HashMap\u003c\u003e();\n\n      Map\u003cString, String\u003e envs \u003d System.getenv();\n      addAsLocalResourceFromEnv(DynoConstants.CONF_ZIP, localResources, envs);\n      addAsLocalResourceFromEnv(DynoConstants.START_SCRIPT, localResources,\n          envs);\n      addAsLocalResourceFromEnv(DynoConstants.HADOOP_BINARY, localResources,\n          envs);\n      addAsLocalResourceFromEnv(DynoConstants.VERSION, localResources, envs);\n      addAsLocalResourceFromEnv(DynoConstants.DYNO_DEPENDENCIES, localResources,\n          envs);\n      if (isNameNodeLauncher) {\n        addAsLocalResourceFromEnv(DynoConstants.FS_IMAGE, localResources, envs);\n        addAsLocalResourceFromEnv(DynoConstants.FS_IMAGE_MD5, localResources,\n            envs);\n      } else {\n        int blockFilesToLocalize \u003d Math.max(1,\n            amOptions.getDataNodesPerCluster());\n        for (int i \u003d 0; i \u003c blockFilesToLocalize; i++) {\n          try {\n            localResources.put(\n                DynoConstants.BLOCK_LIST_RESOURCE_PATH_PREFIX + i,\n                blockListFiles.remove(0));\n          } catch (IndexOutOfBoundsException e) {\n            break;\n          }\n        }\n      }\n      return localResources;\n    }",
      "path": "hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-infra/src/main/java/org/apache/hadoop/tools/dynamometer/ApplicationMaster.java"
    }
  }
}