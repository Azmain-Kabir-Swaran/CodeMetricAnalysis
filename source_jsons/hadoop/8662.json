{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NNStorageRetentionManager.java",
  "functionName": "getImageTxIdToRetain",
  "functionId": "getImageTxIdToRetain___inspector-FSImageTransactionalStorageInspector",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NNStorageRetentionManager.java",
  "functionStartLine": 187,
  "functionEndLine": 205,
  "numCommitsSeen": 21,
  "timeTaken": 2807,
  "changeHistory": [
    "ffca734c62fba26211f22232ddb5e80eae4b5d51",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "23762da4fa17ce6ea7b70722147977123a28a7e6",
    "28e6a4e44a3e920dcaf858f9a74a6358226b3a63"
  ],
  "changeHistoryShort": {
    "ffca734c62fba26211f22232ddb5e80eae4b5d51": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "23762da4fa17ce6ea7b70722147977123a28a7e6": "Ybodychange",
    "28e6a4e44a3e920dcaf858f9a74a6358226b3a63": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ffca734c62fba26211f22232ddb5e80eae4b5d51": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14104. Review getImageTxIdToRetain. Contributed by David Mollitor.\n",
      "commitDate": "29/08/19 2:18 PM",
      "commitName": "ffca734c62fba26211f22232ddb5e80eae4b5d51",
      "commitAuthor": "Inigo Goiri",
      "commitDateOld": "06/09/18 2:48 PM",
      "commitNameOld": "eca1a4bfe952fc184fe90dde50bac9b0e5293568",
      "commitAuthorOld": "Giovanni Matteo Fumarola",
      "daysBetweenCommits": 356.98,
      "commitsBetweenForRepo": 2818,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,19 @@\n-  private long getImageTxIdToRetain(FSImageTransactionalStorageInspector inspector) {\n-      \n-    List\u003cFSImageFile\u003e images \u003d inspector.getFoundImages();\n-    TreeSet\u003cLong\u003e imageTxIds \u003d Sets.newTreeSet();\n+  private long getImageTxIdToRetain(\n+      FSImageTransactionalStorageInspector inspector) {\n+\n+    final List\u003cFSImageFile\u003e images \u003d inspector.getFoundImages();\n+    if (images.isEmpty()) {\n+      return 0L;\n+    }\n+\n+    TreeSet\u003cLong\u003e imageTxIds \u003d Sets.newTreeSet(Collections.reverseOrder());\n     for (FSImageFile image : images) {\n       imageTxIds.add(image.getCheckpointTxId());\n     }\n-    \n+\n     List\u003cLong\u003e imageTxIdsList \u003d Lists.newArrayList(imageTxIds);\n-    if (imageTxIdsList.isEmpty()) {\n-      return 0;\n-    }\n-    \n-    Collections.reverse(imageTxIdsList);\n-    int toRetain \u003d Math.min(numCheckpointsToRetain, imageTxIdsList.size());    \n+    int toRetain \u003d Math.min(numCheckpointsToRetain, imageTxIdsList.size());\n     long minTxId \u003d imageTxIdsList.get(toRetain - 1);\n-    LOG.info(\"Going to retain \" + toRetain + \" images with txid \u003e\u003d \" +\n-        minTxId);\n+    LOG.info(\"Going to retain {} images with txid \u003e\u003d {}\", toRetain, minTxId);\n     return minTxId;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private long getImageTxIdToRetain(\n      FSImageTransactionalStorageInspector inspector) {\n\n    final List\u003cFSImageFile\u003e images \u003d inspector.getFoundImages();\n    if (images.isEmpty()) {\n      return 0L;\n    }\n\n    TreeSet\u003cLong\u003e imageTxIds \u003d Sets.newTreeSet(Collections.reverseOrder());\n    for (FSImageFile image : images) {\n      imageTxIds.add(image.getCheckpointTxId());\n    }\n\n    List\u003cLong\u003e imageTxIdsList \u003d Lists.newArrayList(imageTxIds);\n    int toRetain \u003d Math.min(numCheckpointsToRetain, imageTxIdsList.size());\n    long minTxId \u003d imageTxIdsList.get(toRetain - 1);\n    LOG.info(\"Going to retain {} images with txid \u003e\u003d {}\", toRetain, minTxId);\n    return minTxId;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NNStorageRetentionManager.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private long getImageTxIdToRetain(FSImageTransactionalStorageInspector inspector) {\n      \n    List\u003cFSImageFile\u003e images \u003d inspector.getFoundImages();\n    TreeSet\u003cLong\u003e imageTxIds \u003d Sets.newTreeSet();\n    for (FSImageFile image : images) {\n      imageTxIds.add(image.getCheckpointTxId());\n    }\n    \n    List\u003cLong\u003e imageTxIdsList \u003d Lists.newArrayList(imageTxIds);\n    if (imageTxIdsList.isEmpty()) {\n      return 0;\n    }\n    \n    Collections.reverse(imageTxIdsList);\n    int toRetain \u003d Math.min(numCheckpointsToRetain, imageTxIdsList.size());    \n    long minTxId \u003d imageTxIdsList.get(toRetain - 1);\n    LOG.info(\"Going to retain \" + toRetain + \" images with txid \u003e\u003d \" +\n        minTxId);\n    return minTxId;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NNStorageRetentionManager.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NNStorageRetentionManager.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NNStorageRetentionManager.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private long getImageTxIdToRetain(FSImageTransactionalStorageInspector inspector) {\n      \n    List\u003cFSImageFile\u003e images \u003d inspector.getFoundImages();\n    TreeSet\u003cLong\u003e imageTxIds \u003d Sets.newTreeSet();\n    for (FSImageFile image : images) {\n      imageTxIds.add(image.getCheckpointTxId());\n    }\n    \n    List\u003cLong\u003e imageTxIdsList \u003d Lists.newArrayList(imageTxIds);\n    if (imageTxIdsList.isEmpty()) {\n      return 0;\n    }\n    \n    Collections.reverse(imageTxIdsList);\n    int toRetain \u003d Math.min(numCheckpointsToRetain, imageTxIdsList.size());    \n    long minTxId \u003d imageTxIdsList.get(toRetain - 1);\n    LOG.info(\"Going to retain \" + toRetain + \" images with txid \u003e\u003d \" +\n        minTxId);\n    return minTxId;\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NNStorageRetentionManager.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/NNStorageRetentionManager.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/NNStorageRetentionManager.java"
      }
    },
    "23762da4fa17ce6ea7b70722147977123a28a7e6": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2225. Refactor file management so it\u0027s not in classes which should be generic. Contributed by Ivan Kelly.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1154029 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/08/11 2:56 PM",
      "commitName": "23762da4fa17ce6ea7b70722147977123a28a7e6",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "29/07/11 9:28 AM",
      "commitNameOld": "28e6a4e44a3e920dcaf858f9a74a6358226b3a63",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 6.23,
      "commitsBetweenForRepo": 20,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   private long getImageTxIdToRetain(FSImageTransactionalStorageInspector inspector) {\n       \n-    List\u003cFoundFSImage\u003e images \u003d inspector.getFoundImages();\n+    List\u003cFSImageFile\u003e images \u003d inspector.getFoundImages();\n     TreeSet\u003cLong\u003e imageTxIds \u003d Sets.newTreeSet();\n-    for (FoundFSImage image : images) {\n-      imageTxIds.add(image.getTxId());\n+    for (FSImageFile image : images) {\n+      imageTxIds.add(image.getCheckpointTxId());\n     }\n     \n     List\u003cLong\u003e imageTxIdsList \u003d Lists.newArrayList(imageTxIds);\n     if (imageTxIdsList.isEmpty()) {\n       return 0;\n     }\n     \n     Collections.reverse(imageTxIdsList);\n     int toRetain \u003d Math.min(numCheckpointsToRetain, imageTxIdsList.size());    \n     long minTxId \u003d imageTxIdsList.get(toRetain - 1);\n     LOG.info(\"Going to retain \" + toRetain + \" images with txid \u003e\u003d \" +\n         minTxId);\n     return minTxId;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private long getImageTxIdToRetain(FSImageTransactionalStorageInspector inspector) {\n      \n    List\u003cFSImageFile\u003e images \u003d inspector.getFoundImages();\n    TreeSet\u003cLong\u003e imageTxIds \u003d Sets.newTreeSet();\n    for (FSImageFile image : images) {\n      imageTxIds.add(image.getCheckpointTxId());\n    }\n    \n    List\u003cLong\u003e imageTxIdsList \u003d Lists.newArrayList(imageTxIds);\n    if (imageTxIdsList.isEmpty()) {\n      return 0;\n    }\n    \n    Collections.reverse(imageTxIdsList);\n    int toRetain \u003d Math.min(numCheckpointsToRetain, imageTxIdsList.size());    \n    long minTxId \u003d imageTxIdsList.get(toRetain - 1);\n    LOG.info(\"Going to retain \" + toRetain + \" images with txid \u003e\u003d \" +\n        minTxId);\n    return minTxId;\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/NNStorageRetentionManager.java",
      "extendedDetails": {}
    },
    "28e6a4e44a3e920dcaf858f9a74a6358226b3a63": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-1073. Redesign the NameNode\u0027s storage layout for image checkpoints and edit logs to introduce transaction IDs and be more robust. Contributed by Todd Lipcon and Ivan Kelly.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1152295 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/07/11 9:28 AM",
      "commitName": "28e6a4e44a3e920dcaf858f9a74a6358226b3a63",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,20 @@\n+  private long getImageTxIdToRetain(FSImageTransactionalStorageInspector inspector) {\n+      \n+    List\u003cFoundFSImage\u003e images \u003d inspector.getFoundImages();\n+    TreeSet\u003cLong\u003e imageTxIds \u003d Sets.newTreeSet();\n+    for (FoundFSImage image : images) {\n+      imageTxIds.add(image.getTxId());\n+    }\n+    \n+    List\u003cLong\u003e imageTxIdsList \u003d Lists.newArrayList(imageTxIds);\n+    if (imageTxIdsList.isEmpty()) {\n+      return 0;\n+    }\n+    \n+    Collections.reverse(imageTxIdsList);\n+    int toRetain \u003d Math.min(numCheckpointsToRetain, imageTxIdsList.size());    \n+    long minTxId \u003d imageTxIdsList.get(toRetain - 1);\n+    LOG.info(\"Going to retain \" + toRetain + \" images with txid \u003e\u003d \" +\n+        minTxId);\n+    return minTxId;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private long getImageTxIdToRetain(FSImageTransactionalStorageInspector inspector) {\n      \n    List\u003cFoundFSImage\u003e images \u003d inspector.getFoundImages();\n    TreeSet\u003cLong\u003e imageTxIds \u003d Sets.newTreeSet();\n    for (FoundFSImage image : images) {\n      imageTxIds.add(image.getTxId());\n    }\n    \n    List\u003cLong\u003e imageTxIdsList \u003d Lists.newArrayList(imageTxIds);\n    if (imageTxIdsList.isEmpty()) {\n      return 0;\n    }\n    \n    Collections.reverse(imageTxIdsList);\n    int toRetain \u003d Math.min(numCheckpointsToRetain, imageTxIdsList.size());    \n    long minTxId \u003d imageTxIdsList.get(toRetain - 1);\n    LOG.info(\"Going to retain \" + toRetain + \" images with txid \u003e\u003d \" +\n        minTxId);\n    return minTxId;\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/NNStorageRetentionManager.java"
    }
  }
}