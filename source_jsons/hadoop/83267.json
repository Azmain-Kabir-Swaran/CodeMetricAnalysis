{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "MetricsSourceBuilder.java",
  "functionName": "add",
  "functionId": "add___source-Object__field-Field",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/lib/MetricsSourceBuilder.java",
  "functionStartLine": 133,
  "functionEndLine": 159,
  "numCommitsSeen": 8,
  "timeTaken": 851,
  "changeHistory": [
    "41eec8a32b7b4c43094f5e5d4b55725b1b3f1441",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "827401a9b1d85fe1f443d21ebe9d917ba23153de"
  ],
  "changeHistoryShort": {
    "41eec8a32b7b4c43094f5e5d4b55725b1b3f1441": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "827401a9b1d85fe1f443d21ebe9d917ba23153de": "Yintroduced"
  },
  "changeHistoryDetails": {
    "41eec8a32b7b4c43094f5e5d4b55725b1b3f1441": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-8920. Add more javadoc to metrics2 related classes. Contributed by Suresh Srinivas.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1398640 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "15/10/12 9:29 PM",
      "commitName": "41eec8a32b7b4c43094f5e5d4b55725b1b3f1441",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "16/07/12 3:38 PM",
      "commitNameOld": "2799d9659db54aae82a719366df953710b050aa9",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 91.24,
      "commitsBetweenForRepo": 534,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,27 @@\n   private void add(Object source, Field field) {\n     for (Annotation annotation : field.getAnnotations()) {\n-      if (!(annotation instanceof Metric)) continue;\n+      if (!(annotation instanceof Metric)) {\n+        continue;\n+      }\n       try {\n         // skip fields already set\n         field.setAccessible(true);\n         if (field.get(source) !\u003d null) continue;\n       } catch (Exception e) {\n         LOG.warn(\"Error accessing field \"+ field +\" annotated with\"+\n                  annotation, e);\n         continue;\n       }\n       MutableMetric mutable \u003d factory.newForField(field, (Metric) annotation,\n                                                   registry);\n       if (mutable !\u003d null) {\n         try {\n-          field.set(source, mutable);\n+          field.set(source, mutable); // Set the source field to MutableMetric\n           hasAtMetric \u003d true;\n         } catch (Exception e) {\n           throw new MetricsException(\"Error setting field \"+ field +\n                                      \" annotated with \"+ annotation, e);\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void add(Object source, Field field) {\n    for (Annotation annotation : field.getAnnotations()) {\n      if (!(annotation instanceof Metric)) {\n        continue;\n      }\n      try {\n        // skip fields already set\n        field.setAccessible(true);\n        if (field.get(source) !\u003d null) continue;\n      } catch (Exception e) {\n        LOG.warn(\"Error accessing field \"+ field +\" annotated with\"+\n                 annotation, e);\n        continue;\n      }\n      MutableMetric mutable \u003d factory.newForField(field, (Metric) annotation,\n                                                  registry);\n      if (mutable !\u003d null) {\n        try {\n          field.set(source, mutable); // Set the source field to MutableMetric\n          hasAtMetric \u003d true;\n        } catch (Exception e) {\n          throw new MetricsException(\"Error setting field \"+ field +\n                                     \" annotated with \"+ annotation, e);\n        }\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/lib/MetricsSourceBuilder.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void add(Object source, Field field) {\n    for (Annotation annotation : field.getAnnotations()) {\n      if (!(annotation instanceof Metric)) continue;\n      try {\n        // skip fields already set\n        field.setAccessible(true);\n        if (field.get(source) !\u003d null) continue;\n      }\n      catch (Exception e) {\n        LOG.warn(\"Error accessing field \"+ field +\" annotated with\"+\n                 annotation, e);\n        continue;\n      }\n      MutableMetric mutable \u003d factory.newForField(field, (Metric) annotation,\n                                                  registry);\n      if (mutable !\u003d null) {\n        try {\n          field.set(source, mutable);\n          hasAtMetric \u003d true;\n        }\n        catch (Exception e) {\n          throw new MetricsException(\"Error setting field \"+ field +\n                                     \" annotated with \"+ annotation, e);\n        }\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/lib/MetricsSourceBuilder.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/metrics2/lib/MetricsSourceBuilder.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/lib/MetricsSourceBuilder.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void add(Object source, Field field) {\n    for (Annotation annotation : field.getAnnotations()) {\n      if (!(annotation instanceof Metric)) continue;\n      try {\n        // skip fields already set\n        field.setAccessible(true);\n        if (field.get(source) !\u003d null) continue;\n      }\n      catch (Exception e) {\n        LOG.warn(\"Error accessing field \"+ field +\" annotated with\"+\n                 annotation, e);\n        continue;\n      }\n      MutableMetric mutable \u003d factory.newForField(field, (Metric) annotation,\n                                                  registry);\n      if (mutable !\u003d null) {\n        try {\n          field.set(source, mutable);\n          hasAtMetric \u003d true;\n        }\n        catch (Exception e) {\n          throw new MetricsException(\"Error setting field \"+ field +\n                                     \" annotated with \"+ annotation, e);\n        }\n      }\n    }\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/metrics2/lib/MetricsSourceBuilder.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/metrics2/lib/MetricsSourceBuilder.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/metrics2/lib/MetricsSourceBuilder.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void add(Object source, Field field) {\n    for (Annotation annotation : field.getAnnotations()) {\n      if (!(annotation instanceof Metric)) continue;\n      try {\n        // skip fields already set\n        field.setAccessible(true);\n        if (field.get(source) !\u003d null) continue;\n      }\n      catch (Exception e) {\n        LOG.warn(\"Error accessing field \"+ field +\" annotated with\"+\n                 annotation, e);\n        continue;\n      }\n      MutableMetric mutable \u003d factory.newForField(field, (Metric) annotation,\n                                                  registry);\n      if (mutable !\u003d null) {\n        try {\n          field.set(source, mutable);\n          hasAtMetric \u003d true;\n        }\n        catch (Exception e) {\n          throw new MetricsException(\"Error setting field \"+ field +\n                                     \" annotated with \"+ annotation, e);\n        }\n      }\n    }\n  }",
      "path": "common/src/java/org/apache/hadoop/metrics2/lib/MetricsSourceBuilder.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/metrics2/lib/MetricsSourceBuilder.java",
        "newPath": "common/src/java/org/apache/hadoop/metrics2/lib/MetricsSourceBuilder.java"
      }
    },
    "827401a9b1d85fe1f443d21ebe9d917ba23153de": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-6919. New metrics2 framework. Contributed by Luke Lu.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1100113 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/05/11 12:28 AM",
      "commitName": "827401a9b1d85fe1f443d21ebe9d917ba23153de",
      "commitAuthor": "Arun Murthy",
      "diff": "@@ -0,0 +1,27 @@\n+  private void add(Object source, Field field) {\n+    for (Annotation annotation : field.getAnnotations()) {\n+      if (!(annotation instanceof Metric)) continue;\n+      try {\n+        // skip fields already set\n+        field.setAccessible(true);\n+        if (field.get(source) !\u003d null) continue;\n+      }\n+      catch (Exception e) {\n+        LOG.warn(\"Error accessing field \"+ field +\" annotated with\"+\n+                 annotation, e);\n+        continue;\n+      }\n+      MutableMetric mutable \u003d factory.newForField(field, (Metric) annotation,\n+                                                  registry);\n+      if (mutable !\u003d null) {\n+        try {\n+          field.set(source, mutable);\n+          hasAtMetric \u003d true;\n+        }\n+        catch (Exception e) {\n+          throw new MetricsException(\"Error setting field \"+ field +\n+                                     \" annotated with \"+ annotation, e);\n+        }\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void add(Object source, Field field) {\n    for (Annotation annotation : field.getAnnotations()) {\n      if (!(annotation instanceof Metric)) continue;\n      try {\n        // skip fields already set\n        field.setAccessible(true);\n        if (field.get(source) !\u003d null) continue;\n      }\n      catch (Exception e) {\n        LOG.warn(\"Error accessing field \"+ field +\" annotated with\"+\n                 annotation, e);\n        continue;\n      }\n      MutableMetric mutable \u003d factory.newForField(field, (Metric) annotation,\n                                                  registry);\n      if (mutable !\u003d null) {\n        try {\n          field.set(source, mutable);\n          hasAtMetric \u003d true;\n        }\n        catch (Exception e) {\n          throw new MetricsException(\"Error setting field \"+ field +\n                                     \" annotated with \"+ annotation, e);\n        }\n      }\n    }\n  }",
      "path": "src/java/org/apache/hadoop/metrics2/lib/MetricsSourceBuilder.java"
    }
  }
}