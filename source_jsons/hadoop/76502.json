{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NativeIO.java",
  "functionName": "copyFileUnbuffered",
  "functionId": "copyFileUnbuffered___src-File__dst-File",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/nativeio/NativeIO.java",
  "functionStartLine": 1108,
  "functionEndLine": 1131,
  "numCommitsSeen": 39,
  "timeTaken": 2333,
  "changeHistory": [
    "f8af0e2feb9f45aeaa9711dbf93115ffb1a07e5d",
    "ccaf036662e22da14583942054898c99fa51dae5",
    "c6f04f391b54e57467b3ae5d0a95bd96e7feaa82",
    "5b1dfe78b8b06335bed0bcb83f12bb936d4c021b",
    "463aec11718e47d4aabb86a7a539cb973460aae6",
    "1770bb942f9ebea38b6811ba0bc3cc249ef3ccbb"
  ],
  "changeHistoryShort": {
    "f8af0e2feb9f45aeaa9711dbf93115ffb1a07e5d": "Ybodychange",
    "ccaf036662e22da14583942054898c99fa51dae5": "Ybodychange",
    "c6f04f391b54e57467b3ae5d0a95bd96e7feaa82": "Ybodychange",
    "5b1dfe78b8b06335bed0bcb83f12bb936d4c021b": "Ybodychange",
    "463aec11718e47d4aabb86a7a539cb973460aae6": "Ybodychange",
    "1770bb942f9ebea38b6811ba0bc3cc249ef3ccbb": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f8af0e2feb9f45aeaa9711dbf93115ffb1a07e5d": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15085. Output streams closed with IOUtils suppressing write errors. Contributed by Jim Brennan\n",
      "commitDate": "14/12/17 8:18 AM",
      "commitName": "f8af0e2feb9f45aeaa9711dbf93115ffb1a07e5d",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "01/12/17 10:12 PM",
      "commitNameOld": "f9d195dfe9cc2c3e4659c3475319ac7c937b5c44",
      "commitAuthorOld": "Chris Douglas",
      "daysBetweenCommits": 12.42,
      "commitsBetweenForRepo": 78,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,24 @@\n   public static void copyFileUnbuffered(File src, File dst) throws IOException {\n     if (nativeLoaded \u0026\u0026 Shell.WINDOWS) {\n       copyFileUnbuffered0(src.getAbsolutePath(), dst.getAbsolutePath());\n     } else {\n-      FileInputStream fis \u003d null;\n-      FileOutputStream fos \u003d null;\n+      FileInputStream fis \u003d new FileInputStream(src);\n       FileChannel input \u003d null;\n-      FileChannel output \u003d null;\n       try {\n-        fis \u003d new FileInputStream(src);\n-        fos \u003d new FileOutputStream(dst);\n         input \u003d fis.getChannel();\n-        output \u003d fos.getChannel();\n-        long remaining \u003d input.size();\n-        long position \u003d 0;\n-        long transferred \u003d 0;\n-        while (remaining \u003e 0) {\n-          transferred \u003d input.transferTo(position, remaining, output);\n-          remaining -\u003d transferred;\n-          position +\u003d transferred;\n+        try (FileOutputStream fos \u003d new FileOutputStream(dst);\n+             FileChannel output \u003d fos.getChannel()) {\n+          long remaining \u003d input.size();\n+          long position \u003d 0;\n+          long transferred \u003d 0;\n+          while (remaining \u003e 0) {\n+            transferred \u003d input.transferTo(position, remaining, output);\n+            remaining -\u003d transferred;\n+            position +\u003d transferred;\n+          }\n         }\n       } finally {\n-        IOUtils.cleanupWithLogger(LOG, output);\n-        IOUtils.cleanupWithLogger(LOG, fos);\n-        IOUtils.cleanupWithLogger(LOG, input);\n-        IOUtils.cleanupWithLogger(LOG, fis);\n+        IOUtils.cleanupWithLogger(LOG, input, fis);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void copyFileUnbuffered(File src, File dst) throws IOException {\n    if (nativeLoaded \u0026\u0026 Shell.WINDOWS) {\n      copyFileUnbuffered0(src.getAbsolutePath(), dst.getAbsolutePath());\n    } else {\n      FileInputStream fis \u003d new FileInputStream(src);\n      FileChannel input \u003d null;\n      try {\n        input \u003d fis.getChannel();\n        try (FileOutputStream fos \u003d new FileOutputStream(dst);\n             FileChannel output \u003d fos.getChannel()) {\n          long remaining \u003d input.size();\n          long position \u003d 0;\n          long transferred \u003d 0;\n          while (remaining \u003e 0) {\n            transferred \u003d input.transferTo(position, remaining, output);\n            remaining -\u003d transferred;\n            position +\u003d transferred;\n          }\n        }\n      } finally {\n        IOUtils.cleanupWithLogger(LOG, input, fis);\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/nativeio/NativeIO.java",
      "extendedDetails": {}
    },
    "ccaf036662e22da14583942054898c99fa51dae5": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14539. Move commons logging APIs over to slf4j in hadoop-common. Contributed by Wenxin He.\n",
      "commitDate": "17/07/17 9:32 PM",
      "commitName": "ccaf036662e22da14583942054898c99fa51dae5",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "30/05/17 10:07 AM",
      "commitNameOld": "62857be2110aaded84a93fc9891742a1271b2b85",
      "commitAuthorOld": "Brahma Reddy Battula",
      "daysBetweenCommits": 48.48,
      "commitsBetweenForRepo": 228,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,29 @@\n   public static void copyFileUnbuffered(File src, File dst) throws IOException {\n     if (nativeLoaded \u0026\u0026 Shell.WINDOWS) {\n       copyFileUnbuffered0(src.getAbsolutePath(), dst.getAbsolutePath());\n     } else {\n       FileInputStream fis \u003d null;\n       FileOutputStream fos \u003d null;\n       FileChannel input \u003d null;\n       FileChannel output \u003d null;\n       try {\n         fis \u003d new FileInputStream(src);\n         fos \u003d new FileOutputStream(dst);\n         input \u003d fis.getChannel();\n         output \u003d fos.getChannel();\n         long remaining \u003d input.size();\n         long position \u003d 0;\n         long transferred \u003d 0;\n         while (remaining \u003e 0) {\n           transferred \u003d input.transferTo(position, remaining, output);\n           remaining -\u003d transferred;\n           position +\u003d transferred;\n         }\n       } finally {\n-        IOUtils.cleanup(LOG, output);\n-        IOUtils.cleanup(LOG, fos);\n-        IOUtils.cleanup(LOG, input);\n-        IOUtils.cleanup(LOG, fis);\n+        IOUtils.cleanupWithLogger(LOG, output);\n+        IOUtils.cleanupWithLogger(LOG, fos);\n+        IOUtils.cleanupWithLogger(LOG, input);\n+        IOUtils.cleanupWithLogger(LOG, fis);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void copyFileUnbuffered(File src, File dst) throws IOException {\n    if (nativeLoaded \u0026\u0026 Shell.WINDOWS) {\n      copyFileUnbuffered0(src.getAbsolutePath(), dst.getAbsolutePath());\n    } else {\n      FileInputStream fis \u003d null;\n      FileOutputStream fos \u003d null;\n      FileChannel input \u003d null;\n      FileChannel output \u003d null;\n      try {\n        fis \u003d new FileInputStream(src);\n        fos \u003d new FileOutputStream(dst);\n        input \u003d fis.getChannel();\n        output \u003d fos.getChannel();\n        long remaining \u003d input.size();\n        long position \u003d 0;\n        long transferred \u003d 0;\n        while (remaining \u003e 0) {\n          transferred \u003d input.transferTo(position, remaining, output);\n          remaining -\u003d transferred;\n          position +\u003d transferred;\n        }\n      } finally {\n        IOUtils.cleanupWithLogger(LOG, output);\n        IOUtils.cleanupWithLogger(LOG, fos);\n        IOUtils.cleanupWithLogger(LOG, input);\n        IOUtils.cleanupWithLogger(LOG, fis);\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/nativeio/NativeIO.java",
      "extendedDetails": {}
    },
    "c6f04f391b54e57467b3ae5d0a95bd96e7feaa82": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7291. Persist in-memory replicas with appropriate unbuffered copy API on POSIX and Windows. Contributed by Xiaoyu Yao.\n",
      "commitDate": "28/10/14 2:06 PM",
      "commitName": "c6f04f391b54e57467b3ae5d0a95bd96e7feaa82",
      "commitAuthor": "cnauroth",
      "commitDateOld": "27/10/14 12:15 PM",
      "commitNameOld": "5b1dfe78b8b06335bed0bcb83f12bb936d4c021b",
      "commitAuthorOld": "cnauroth",
      "daysBetweenCommits": 1.08,
      "commitsBetweenForRepo": 17,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,29 @@\n   public static void copyFileUnbuffered(File src, File dst) throws IOException {\n-    if ((nativeLoaded) \u0026\u0026 (Shell.WINDOWS || Shell.LINUX)) {\n+    if (nativeLoaded \u0026\u0026 Shell.WINDOWS) {\n       copyFileUnbuffered0(src.getAbsolutePath(), dst.getAbsolutePath());\n     } else {\n-      FileUtils.copyFile(src, dst);\n+      FileInputStream fis \u003d null;\n+      FileOutputStream fos \u003d null;\n+      FileChannel input \u003d null;\n+      FileChannel output \u003d null;\n+      try {\n+        fis \u003d new FileInputStream(src);\n+        fos \u003d new FileOutputStream(dst);\n+        input \u003d fis.getChannel();\n+        output \u003d fos.getChannel();\n+        long remaining \u003d input.size();\n+        long position \u003d 0;\n+        long transferred \u003d 0;\n+        while (remaining \u003e 0) {\n+          transferred \u003d input.transferTo(position, remaining, output);\n+          remaining -\u003d transferred;\n+          position +\u003d transferred;\n+        }\n+      } finally {\n+        IOUtils.cleanup(LOG, output);\n+        IOUtils.cleanup(LOG, fos);\n+        IOUtils.cleanup(LOG, input);\n+        IOUtils.cleanup(LOG, fis);\n+      }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void copyFileUnbuffered(File src, File dst) throws IOException {\n    if (nativeLoaded \u0026\u0026 Shell.WINDOWS) {\n      copyFileUnbuffered0(src.getAbsolutePath(), dst.getAbsolutePath());\n    } else {\n      FileInputStream fis \u003d null;\n      FileOutputStream fos \u003d null;\n      FileChannel input \u003d null;\n      FileChannel output \u003d null;\n      try {\n        fis \u003d new FileInputStream(src);\n        fos \u003d new FileOutputStream(dst);\n        input \u003d fis.getChannel();\n        output \u003d fos.getChannel();\n        long remaining \u003d input.size();\n        long position \u003d 0;\n        long transferred \u003d 0;\n        while (remaining \u003e 0) {\n          transferred \u003d input.transferTo(position, remaining, output);\n          remaining -\u003d transferred;\n          position +\u003d transferred;\n        }\n      } finally {\n        IOUtils.cleanup(LOG, output);\n        IOUtils.cleanup(LOG, fos);\n        IOUtils.cleanup(LOG, input);\n        IOUtils.cleanup(LOG, fis);\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/nativeio/NativeIO.java",
      "extendedDetails": {}
    },
    "5b1dfe78b8b06335bed0bcb83f12bb936d4c021b": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6934. Revert files accidentally committed.\n",
      "commitDate": "27/10/14 12:15 PM",
      "commitName": "5b1dfe78b8b06335bed0bcb83f12bb936d4c021b",
      "commitAuthor": "cnauroth",
      "commitDateOld": "27/10/14 9:38 AM",
      "commitNameOld": "463aec11718e47d4aabb86a7a539cb973460aae6",
      "commitAuthorOld": "cnauroth",
      "daysBetweenCommits": 0.11,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,7 @@\n   public static void copyFileUnbuffered(File src, File dst) throws IOException {\n-    if ((nativeLoaded) \u0026\u0026\n-        (Shell.WINDOWS || (Shell.isLinuxSendfileAvailable))) {\n+    if ((nativeLoaded) \u0026\u0026 (Shell.WINDOWS || Shell.LINUX)) {\n       copyFileUnbuffered0(src.getAbsolutePath(), dst.getAbsolutePath());\n     } else {\n       FileUtils.copyFile(src, dst);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void copyFileUnbuffered(File src, File dst) throws IOException {\n    if ((nativeLoaded) \u0026\u0026 (Shell.WINDOWS || Shell.LINUX)) {\n      copyFileUnbuffered0(src.getAbsolutePath(), dst.getAbsolutePath());\n    } else {\n      FileUtils.copyFile(src, dst);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/nativeio/NativeIO.java",
      "extendedDetails": {}
    },
    "463aec11718e47d4aabb86a7a539cb973460aae6": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6934. Move checksum computation off the hot path when writing to RAM disk. Contributed by Chris Nauroth.\n",
      "commitDate": "27/10/14 9:38 AM",
      "commitName": "463aec11718e47d4aabb86a7a539cb973460aae6",
      "commitAuthor": "cnauroth",
      "commitDateOld": "22/10/14 3:57 PM",
      "commitNameOld": "3b12fd6cfbf4cc91ef8e8616c7aafa9de006cde5",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 4.74,
      "commitsBetweenForRepo": 36,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,8 @@\n   public static void copyFileUnbuffered(File src, File dst) throws IOException {\n-    if ((nativeLoaded) \u0026\u0026 (Shell.WINDOWS || Shell.LINUX)) {\n+    if ((nativeLoaded) \u0026\u0026\n+        (Shell.WINDOWS || (Shell.isLinuxSendfileAvailable))) {\n       copyFileUnbuffered0(src.getAbsolutePath(), dst.getAbsolutePath());\n     } else {\n       FileUtils.copyFile(src, dst);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void copyFileUnbuffered(File src, File dst) throws IOException {\n    if ((nativeLoaded) \u0026\u0026\n        (Shell.WINDOWS || (Shell.isLinuxSendfileAvailable))) {\n      copyFileUnbuffered0(src.getAbsolutePath(), dst.getAbsolutePath());\n    } else {\n      FileUtils.copyFile(src, dst);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/nativeio/NativeIO.java",
      "extendedDetails": {}
    },
    "1770bb942f9ebea38b6811ba0bc3cc249ef3ccbb": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-7090. Use unbuffered writes when persisting in-memory replicas. Contributed by Xiaoyu Yao.\n",
      "commitDate": "13/10/14 10:56 AM",
      "commitName": "1770bb942f9ebea38b6811ba0bc3cc249ef3ccbb",
      "commitAuthor": "cnauroth",
      "diff": "@@ -0,0 +1,7 @@\n+  public static void copyFileUnbuffered(File src, File dst) throws IOException {\n+    if ((nativeLoaded) \u0026\u0026 (Shell.WINDOWS || Shell.LINUX)) {\n+      copyFileUnbuffered0(src.getAbsolutePath(), dst.getAbsolutePath());\n+    } else {\n+      FileUtils.copyFile(src, dst);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static void copyFileUnbuffered(File src, File dst) throws IOException {\n    if ((nativeLoaded) \u0026\u0026 (Shell.WINDOWS || Shell.LINUX)) {\n      copyFileUnbuffered0(src.getAbsolutePath(), dst.getAbsolutePath());\n    } else {\n      FileUtils.copyFile(src, dst);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/nativeio/NativeIO.java"
    }
  }
}