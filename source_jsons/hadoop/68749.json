{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "StreamXmlRecordReader.java",
  "functionName": "next",
  "functionId": "next___key-Text__value-Text",
  "sourceFilePath": "hadoop-tools/hadoop-streaming/src/main/java/org/apache/hadoop/streaming/mapreduce/StreamXmlRecordReader.java",
  "functionStartLine": 86,
  "functionEndLine": 110,
  "numCommitsSeen": 1,
  "timeTaken": 486,
  "changeHistory": [
    "9c87911c4ab35faead3e4729951b2855fb20e3b0"
  ],
  "changeHistoryShort": {
    "9c87911c4ab35faead3e4729951b2855fb20e3b0": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9c87911c4ab35faead3e4729951b2855fb20e3b0": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-8521. Port StreamInputFormat to new Map Reduce API (madhukara phatak via bobby)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1360238 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/07/12 8:44 AM",
      "commitName": "9c87911c4ab35faead3e4729951b2855fb20e3b0",
      "commitAuthor": "Robert Joseph Evans",
      "diff": "@@ -0,0 +1,25 @@\n+  public synchronized boolean next(Text key, Text value) throws IOException {\n+    numNext++;\n+    if (pos_ \u003e\u003d end_) {\n+      return false;\n+    }\n+\n+    DataOutputBuffer buf \u003d new DataOutputBuffer();\n+    if (!readUntilMatchBegin()) {\n+      return false;\n+    }\n+    if (pos_ \u003e\u003d end_ || !readUntilMatchEnd(buf)) {\n+      return false;\n+    }\n+\n+    // There is only one elem..key/value splitting is not done here.\n+    byte[] record \u003d new byte[buf.getLength()];\n+    System.arraycopy(buf.getData(), 0, record, 0, record.length);\n+\n+    numRecStats(record, 0, record.length);\n+\n+    key.set(record);\n+    value.set(\"\");\n+\n+    return true;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized boolean next(Text key, Text value) throws IOException {\n    numNext++;\n    if (pos_ \u003e\u003d end_) {\n      return false;\n    }\n\n    DataOutputBuffer buf \u003d new DataOutputBuffer();\n    if (!readUntilMatchBegin()) {\n      return false;\n    }\n    if (pos_ \u003e\u003d end_ || !readUntilMatchEnd(buf)) {\n      return false;\n    }\n\n    // There is only one elem..key/value splitting is not done here.\n    byte[] record \u003d new byte[buf.getLength()];\n    System.arraycopy(buf.getData(), 0, record, 0, record.length);\n\n    numRecStats(record, 0, record.length);\n\n    key.set(record);\n    value.set(\"\");\n\n    return true;\n  }",
      "path": "hadoop-tools/hadoop-streaming/src/main/java/org/apache/hadoop/streaming/mapreduce/StreamXmlRecordReader.java"
    }
  }
}