{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BooleanSplitter.java",
  "functionName": "split",
  "functionId": "split___conf-Configuration__results-ResultSet__colName-String",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/db/BooleanSplitter.java",
  "functionStartLine": 37,
  "functionEndLine": 70,
  "numCommitsSeen": 3,
  "timeTaken": 4274,
  "changeHistory": [
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public List\u003cInputSplit\u003e split(Configuration conf, ResultSet results, String colName)\n      throws SQLException {\n\n    List\u003cInputSplit\u003e splits \u003d new ArrayList\u003cInputSplit\u003e();\n\n    if (results.getString(1) \u003d\u003d null \u0026\u0026 results.getString(2) \u003d\u003d null) {\n      // Range is null to null. Return a null split accordingly.\n      splits.add(new DataDrivenDBInputFormat.DataDrivenDBInputSplit(\n          colName + \" IS NULL\", colName + \" IS NULL\"));\n      return splits;\n    }\n\n    boolean minVal \u003d results.getBoolean(1);\n    boolean maxVal \u003d results.getBoolean(2);\n\n    // Use one or two splits.\n    if (!minVal) {\n      splits.add(new DataDrivenDBInputFormat.DataDrivenDBInputSplit(\n          colName + \" \u003d FALSE\", colName + \" \u003d FALSE\"));\n    }\n\n    if (maxVal) {\n      splits.add(new DataDrivenDBInputFormat.DataDrivenDBInputSplit(\n          colName + \" \u003d TRUE\", colName + \" \u003d TRUE\"));\n    }\n\n    if (results.getString(1) \u003d\u003d null || results.getString(2) \u003d\u003d null) {\n      // Include a null value.\n      splits.add(new DataDrivenDBInputFormat.DataDrivenDBInputSplit(\n          colName + \" IS NULL\", colName + \" IS NULL\"));\n    }\n\n    return splits;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/db/BooleanSplitter.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/db/BooleanSplitter.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/db/BooleanSplitter.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public List\u003cInputSplit\u003e split(Configuration conf, ResultSet results, String colName)\n      throws SQLException {\n\n    List\u003cInputSplit\u003e splits \u003d new ArrayList\u003cInputSplit\u003e();\n\n    if (results.getString(1) \u003d\u003d null \u0026\u0026 results.getString(2) \u003d\u003d null) {\n      // Range is null to null. Return a null split accordingly.\n      splits.add(new DataDrivenDBInputFormat.DataDrivenDBInputSplit(\n          colName + \" IS NULL\", colName + \" IS NULL\"));\n      return splits;\n    }\n\n    boolean minVal \u003d results.getBoolean(1);\n    boolean maxVal \u003d results.getBoolean(2);\n\n    // Use one or two splits.\n    if (!minVal) {\n      splits.add(new DataDrivenDBInputFormat.DataDrivenDBInputSplit(\n          colName + \" \u003d FALSE\", colName + \" \u003d FALSE\"));\n    }\n\n    if (maxVal) {\n      splits.add(new DataDrivenDBInputFormat.DataDrivenDBInputSplit(\n          colName + \" \u003d TRUE\", colName + \" \u003d TRUE\"));\n    }\n\n    if (results.getString(1) \u003d\u003d null || results.getString(2) \u003d\u003d null) {\n      // Include a null value.\n      splits.add(new DataDrivenDBInputFormat.DataDrivenDBInputSplit(\n          colName + \" IS NULL\", colName + \" IS NULL\"));\n    }\n\n    return splits;\n  }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/db/BooleanSplitter.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/java/org/apache/hadoop/mapreduce/lib/db/BooleanSplitter.java",
        "newPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/lib/db/BooleanSplitter.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,34 @@\n+  public List\u003cInputSplit\u003e split(Configuration conf, ResultSet results, String colName)\n+      throws SQLException {\n+\n+    List\u003cInputSplit\u003e splits \u003d new ArrayList\u003cInputSplit\u003e();\n+\n+    if (results.getString(1) \u003d\u003d null \u0026\u0026 results.getString(2) \u003d\u003d null) {\n+      // Range is null to null. Return a null split accordingly.\n+      splits.add(new DataDrivenDBInputFormat.DataDrivenDBInputSplit(\n+          colName + \" IS NULL\", colName + \" IS NULL\"));\n+      return splits;\n+    }\n+\n+    boolean minVal \u003d results.getBoolean(1);\n+    boolean maxVal \u003d results.getBoolean(2);\n+\n+    // Use one or two splits.\n+    if (!minVal) {\n+      splits.add(new DataDrivenDBInputFormat.DataDrivenDBInputSplit(\n+          colName + \" \u003d FALSE\", colName + \" \u003d FALSE\"));\n+    }\n+\n+    if (maxVal) {\n+      splits.add(new DataDrivenDBInputFormat.DataDrivenDBInputSplit(\n+          colName + \" \u003d TRUE\", colName + \" \u003d TRUE\"));\n+    }\n+\n+    if (results.getString(1) \u003d\u003d null || results.getString(2) \u003d\u003d null) {\n+      // Include a null value.\n+      splits.add(new DataDrivenDBInputFormat.DataDrivenDBInputSplit(\n+          colName + \" IS NULL\", colName + \" IS NULL\"));\n+    }\n+\n+    return splits;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public List\u003cInputSplit\u003e split(Configuration conf, ResultSet results, String colName)\n      throws SQLException {\n\n    List\u003cInputSplit\u003e splits \u003d new ArrayList\u003cInputSplit\u003e();\n\n    if (results.getString(1) \u003d\u003d null \u0026\u0026 results.getString(2) \u003d\u003d null) {\n      // Range is null to null. Return a null split accordingly.\n      splits.add(new DataDrivenDBInputFormat.DataDrivenDBInputSplit(\n          colName + \" IS NULL\", colName + \" IS NULL\"));\n      return splits;\n    }\n\n    boolean minVal \u003d results.getBoolean(1);\n    boolean maxVal \u003d results.getBoolean(2);\n\n    // Use one or two splits.\n    if (!minVal) {\n      splits.add(new DataDrivenDBInputFormat.DataDrivenDBInputSplit(\n          colName + \" \u003d FALSE\", colName + \" \u003d FALSE\"));\n    }\n\n    if (maxVal) {\n      splits.add(new DataDrivenDBInputFormat.DataDrivenDBInputSplit(\n          colName + \" \u003d TRUE\", colName + \" \u003d TRUE\"));\n    }\n\n    if (results.getString(1) \u003d\u003d null || results.getString(2) \u003d\u003d null) {\n      // Include a null value.\n      splits.add(new DataDrivenDBInputFormat.DataDrivenDBInputSplit(\n          colName + \" IS NULL\", colName + \" IS NULL\"));\n    }\n\n    return splits;\n  }",
      "path": "mapreduce/src/java/org/apache/hadoop/mapreduce/lib/db/BooleanSplitter.java"
    }
  }
}