{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "IPCLoggerChannel.java",
  "functionName": "getEditLogManifest",
  "functionId": "getEditLogManifest___fromTxnId-long(modifiers-final)__inProgressOk-boolean(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/client/IPCLoggerChannel.java",
  "functionStartLine": 588,
  "functionEndLine": 601,
  "numCommitsSeen": 101,
  "timeTaken": 3585,
  "changeHistory": [
    "8dd1eeb94fef59feaf19182dd8f1fcf1389c7f34",
    "faa4455be512e070fa420084be8d1be5c72f3b08",
    "512a18a8d92305a34f3037064ceabdc5aff1f8bf",
    "87a6db45b70a1a07165e0773c4452d1327258bfa",
    "8172215e5601c3bb03fb5c0a0d88768142ea5087",
    "8c62c46046656c01b327c378e89d57b4bf37e16e",
    "939f4a9f92ab260aee697d3715946218a7ff769a",
    "74d4573a23db5586c6e47ff2277aa7c35237da34"
  ],
  "changeHistoryShort": {
    "8dd1eeb94fef59feaf19182dd8f1fcf1389c7f34": "Ybodychange",
    "faa4455be512e070fa420084be8d1be5c72f3b08": "Ybodychange",
    "512a18a8d92305a34f3037064ceabdc5aff1f8bf": "Ymultichange(Yparameterchange,Ybodychange)",
    "87a6db45b70a1a07165e0773c4452d1327258bfa": "Ybodychange",
    "8172215e5601c3bb03fb5c0a0d88768142ea5087": "Ymultichange(Yparameterchange,Ybodychange)",
    "8c62c46046656c01b327c378e89d57b4bf37e16e": "Ymultichange(Yparameterchange,Ybodychange)",
    "939f4a9f92ab260aee697d3715946218a7ff769a": "Ymultichange(Yreturntypechange,Ybodychange)",
    "74d4573a23db5586c6e47ff2277aa7c35237da34": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8dd1eeb94fef59feaf19182dd8f1fcf1389c7f34": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12553. Add nameServiceId to QJournalProtocol. Contributed by Bharat Viswanadham\n",
      "commitDate": "13/10/17 2:22 PM",
      "commitName": "8dd1eeb94fef59feaf19182dd8f1fcf1389c7f34",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "24/05/17 4:09 PM",
      "commitNameOld": "0e83ed5e7372c801c9fee01df91b6b56de467ab1",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 141.93,
      "commitsBetweenForRepo": 1026,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n   public ListenableFuture\u003cRemoteEditLogManifest\u003e getEditLogManifest(\n       final long fromTxnId, final boolean inProgressOk) {\n     return parallelExecutor.submit(new Callable\u003cRemoteEditLogManifest\u003e() {\n       @Override\n       public RemoteEditLogManifest call() throws IOException {\n         GetEditLogManifestResponseProto ret \u003d getProxy().getEditLogManifest(\n-            journalId, fromTxnId, inProgressOk);\n+            journalId, nameServiceId, fromTxnId, inProgressOk);\n         // Update the http port, since we need this to build URLs to any of the\n         // returned logs.\n         constructHttpServerURI(ret);\n         return PBHelper.convert(ret.getManifest());\n       }\n     });\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ListenableFuture\u003cRemoteEditLogManifest\u003e getEditLogManifest(\n      final long fromTxnId, final boolean inProgressOk) {\n    return parallelExecutor.submit(new Callable\u003cRemoteEditLogManifest\u003e() {\n      @Override\n      public RemoteEditLogManifest call() throws IOException {\n        GetEditLogManifestResponseProto ret \u003d getProxy().getEditLogManifest(\n            journalId, nameServiceId, fromTxnId, inProgressOk);\n        // Update the http port, since we need this to build URLs to any of the\n        // returned logs.\n        constructHttpServerURI(ret);\n        return PBHelper.convert(ret.getManifest());\n      }\n    });\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/client/IPCLoggerChannel.java",
      "extendedDetails": {}
    },
    "faa4455be512e070fa420084be8d1be5c72f3b08": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6634. inotify in HDFS. Contributed by James Thomas.\n",
      "commitDate": "02/09/14 2:02 PM",
      "commitName": "faa4455be512e070fa420084be8d1be5c72f3b08",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "24/03/14 4:32 PM",
      "commitNameOld": "c2ef7e239eb0e81cf8a3e971378e9e696202de67",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 161.9,
      "commitsBetweenForRepo": 1116,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n   public ListenableFuture\u003cRemoteEditLogManifest\u003e getEditLogManifest(\n       final long fromTxnId, final boolean inProgressOk) {\n-    return executor.submit(new Callable\u003cRemoteEditLogManifest\u003e() {\n+    return parallelExecutor.submit(new Callable\u003cRemoteEditLogManifest\u003e() {\n       @Override\n       public RemoteEditLogManifest call() throws IOException {\n         GetEditLogManifestResponseProto ret \u003d getProxy().getEditLogManifest(\n             journalId, fromTxnId, inProgressOk);\n         // Update the http port, since we need this to build URLs to any of the\n         // returned logs.\n         constructHttpServerURI(ret);\n         return PBHelper.convert(ret.getManifest());\n       }\n     });\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ListenableFuture\u003cRemoteEditLogManifest\u003e getEditLogManifest(\n      final long fromTxnId, final boolean inProgressOk) {\n    return parallelExecutor.submit(new Callable\u003cRemoteEditLogManifest\u003e() {\n      @Override\n      public RemoteEditLogManifest call() throws IOException {\n        GetEditLogManifestResponseProto ret \u003d getProxy().getEditLogManifest(\n            journalId, fromTxnId, inProgressOk);\n        // Update the http port, since we need this to build URLs to any of the\n        // returned logs.\n        constructHttpServerURI(ret);\n        return PBHelper.convert(ret.getManifest());\n      }\n    });\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/client/IPCLoggerChannel.java",
      "extendedDetails": {}
    },
    "512a18a8d92305a34f3037064ceabdc5aff1f8bf": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-5074. Allow starting up from an fsimage checkpoint in the middle of a segment. Contributed by Todd Lipcon.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1550016 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/12/13 5:32 PM",
      "commitName": "512a18a8d92305a34f3037064ceabdc5aff1f8bf",
      "commitAuthor": "Aaron Myers",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-5074. Allow starting up from an fsimage checkpoint in the middle of a segment. Contributed by Todd Lipcon.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1550016 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "10/12/13 5:32 PM",
          "commitName": "512a18a8d92305a34f3037064ceabdc5aff1f8bf",
          "commitAuthor": "Aaron Myers",
          "commitDateOld": "09/12/13 1:58 PM",
          "commitNameOld": "87a6db45b70a1a07165e0773c4452d1327258bfa",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 1.15,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,14 @@\n   public ListenableFuture\u003cRemoteEditLogManifest\u003e getEditLogManifest(\n-      final long fromTxnId, final boolean forReading, \n-      final boolean inProgressOk) {\n+      final long fromTxnId, final boolean inProgressOk) {\n     return executor.submit(new Callable\u003cRemoteEditLogManifest\u003e() {\n       @Override\n       public RemoteEditLogManifest call() throws IOException {\n         GetEditLogManifestResponseProto ret \u003d getProxy().getEditLogManifest(\n-            journalId, fromTxnId, forReading, inProgressOk);\n+            journalId, fromTxnId, inProgressOk);\n         // Update the http port, since we need this to build URLs to any of the\n         // returned logs.\n         constructHttpServerURI(ret);\n         return PBHelper.convert(ret.getManifest());\n       }\n     });\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public ListenableFuture\u003cRemoteEditLogManifest\u003e getEditLogManifest(\n      final long fromTxnId, final boolean inProgressOk) {\n    return executor.submit(new Callable\u003cRemoteEditLogManifest\u003e() {\n      @Override\n      public RemoteEditLogManifest call() throws IOException {\n        GetEditLogManifestResponseProto ret \u003d getProxy().getEditLogManifest(\n            journalId, fromTxnId, inProgressOk);\n        // Update the http port, since we need this to build URLs to any of the\n        // returned logs.\n        constructHttpServerURI(ret);\n        return PBHelper.convert(ret.getManifest());\n      }\n    });\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/client/IPCLoggerChannel.java",
          "extendedDetails": {
            "oldValue": "[fromTxnId-long(modifiers-final), forReading-boolean(modifiers-final), inProgressOk-boolean(modifiers-final)]",
            "newValue": "[fromTxnId-long(modifiers-final), inProgressOk-boolean(modifiers-final)]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-5074. Allow starting up from an fsimage checkpoint in the middle of a segment. Contributed by Todd Lipcon.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1550016 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "10/12/13 5:32 PM",
          "commitName": "512a18a8d92305a34f3037064ceabdc5aff1f8bf",
          "commitAuthor": "Aaron Myers",
          "commitDateOld": "09/12/13 1:58 PM",
          "commitNameOld": "87a6db45b70a1a07165e0773c4452d1327258bfa",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 1.15,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,14 @@\n   public ListenableFuture\u003cRemoteEditLogManifest\u003e getEditLogManifest(\n-      final long fromTxnId, final boolean forReading, \n-      final boolean inProgressOk) {\n+      final long fromTxnId, final boolean inProgressOk) {\n     return executor.submit(new Callable\u003cRemoteEditLogManifest\u003e() {\n       @Override\n       public RemoteEditLogManifest call() throws IOException {\n         GetEditLogManifestResponseProto ret \u003d getProxy().getEditLogManifest(\n-            journalId, fromTxnId, forReading, inProgressOk);\n+            journalId, fromTxnId, inProgressOk);\n         // Update the http port, since we need this to build URLs to any of the\n         // returned logs.\n         constructHttpServerURI(ret);\n         return PBHelper.convert(ret.getManifest());\n       }\n     });\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public ListenableFuture\u003cRemoteEditLogManifest\u003e getEditLogManifest(\n      final long fromTxnId, final boolean inProgressOk) {\n    return executor.submit(new Callable\u003cRemoteEditLogManifest\u003e() {\n      @Override\n      public RemoteEditLogManifest call() throws IOException {\n        GetEditLogManifestResponseProto ret \u003d getProxy().getEditLogManifest(\n            journalId, fromTxnId, inProgressOk);\n        // Update the http port, since we need this to build URLs to any of the\n        // returned logs.\n        constructHttpServerURI(ret);\n        return PBHelper.convert(ret.getManifest());\n      }\n    });\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/client/IPCLoggerChannel.java",
          "extendedDetails": {}
        }
      ]
    },
    "87a6db45b70a1a07165e0773c4452d1327258bfa": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5629. Support HTTPS in JournalNode and SecondaryNameNode. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1549692 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/12/13 1:58 PM",
      "commitName": "87a6db45b70a1a07165e0773c4452d1327258bfa",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "26/11/13 11:28 AM",
      "commitNameOld": "740cf232bd6206a5d31c0afa7b3e7a1e7bc333a1",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 13.1,
      "commitsBetweenForRepo": 65,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n   public ListenableFuture\u003cRemoteEditLogManifest\u003e getEditLogManifest(\n       final long fromTxnId, final boolean forReading, \n       final boolean inProgressOk) {\n     return executor.submit(new Callable\u003cRemoteEditLogManifest\u003e() {\n       @Override\n       public RemoteEditLogManifest call() throws IOException {\n         GetEditLogManifestResponseProto ret \u003d getProxy().getEditLogManifest(\n             journalId, fromTxnId, forReading, inProgressOk);\n         // Update the http port, since we need this to build URLs to any of the\n         // returned logs.\n-        httpPort \u003d ret.getHttpPort();\n+        constructHttpServerURI(ret);\n         return PBHelper.convert(ret.getManifest());\n       }\n     });\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ListenableFuture\u003cRemoteEditLogManifest\u003e getEditLogManifest(\n      final long fromTxnId, final boolean forReading, \n      final boolean inProgressOk) {\n    return executor.submit(new Callable\u003cRemoteEditLogManifest\u003e() {\n      @Override\n      public RemoteEditLogManifest call() throws IOException {\n        GetEditLogManifestResponseProto ret \u003d getProxy().getEditLogManifest(\n            journalId, fromTxnId, forReading, inProgressOk);\n        // Update the http port, since we need this to build URLs to any of the\n        // returned logs.\n        constructHttpServerURI(ret);\n        return PBHelper.convert(ret.getManifest());\n      }\n    });\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/client/IPCLoggerChannel.java",
      "extendedDetails": {}
    },
    "8172215e5601c3bb03fb5c0a0d88768142ea5087": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-5080. BootstrapStandby not working with QJM when the existing NN is active. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1514386 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "15/08/13 10:19 AM",
      "commitName": "8172215e5601c3bb03fb5c0a0d88768142ea5087",
      "commitAuthor": "Jing Zhao",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-5080. BootstrapStandby not working with QJM when the existing NN is active. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1514386 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "15/08/13 10:19 AM",
          "commitName": "8172215e5601c3bb03fb5c0a0d88768142ea5087",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "22/05/13 12:37 PM",
          "commitNameOld": "8c62c46046656c01b327c378e89d57b4bf37e16e",
          "commitAuthorOld": "Aaron Myers",
          "daysBetweenCommits": 84.9,
          "commitsBetweenForRepo": 539,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,15 @@\n   public ListenableFuture\u003cRemoteEditLogManifest\u003e getEditLogManifest(\n-      final long fromTxnId, final boolean forReading) {\n+      final long fromTxnId, final boolean forReading, \n+      final boolean inProgressOk) {\n     return executor.submit(new Callable\u003cRemoteEditLogManifest\u003e() {\n       @Override\n       public RemoteEditLogManifest call() throws IOException {\n         GetEditLogManifestResponseProto ret \u003d getProxy().getEditLogManifest(\n-            journalId, fromTxnId, forReading);\n+            journalId, fromTxnId, forReading, inProgressOk);\n         // Update the http port, since we need this to build URLs to any of the\n         // returned logs.\n         httpPort \u003d ret.getHttpPort();\n         return PBHelper.convert(ret.getManifest());\n       }\n     });\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public ListenableFuture\u003cRemoteEditLogManifest\u003e getEditLogManifest(\n      final long fromTxnId, final boolean forReading, \n      final boolean inProgressOk) {\n    return executor.submit(new Callable\u003cRemoteEditLogManifest\u003e() {\n      @Override\n      public RemoteEditLogManifest call() throws IOException {\n        GetEditLogManifestResponseProto ret \u003d getProxy().getEditLogManifest(\n            journalId, fromTxnId, forReading, inProgressOk);\n        // Update the http port, since we need this to build URLs to any of the\n        // returned logs.\n        httpPort \u003d ret.getHttpPort();\n        return PBHelper.convert(ret.getManifest());\n      }\n    });\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/client/IPCLoggerChannel.java",
          "extendedDetails": {
            "oldValue": "[fromTxnId-long(modifiers-final), forReading-boolean(modifiers-final)]",
            "newValue": "[fromTxnId-long(modifiers-final), forReading-boolean(modifiers-final), inProgressOk-boolean(modifiers-final)]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-5080. BootstrapStandby not working with QJM when the existing NN is active. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1514386 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "15/08/13 10:19 AM",
          "commitName": "8172215e5601c3bb03fb5c0a0d88768142ea5087",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "22/05/13 12:37 PM",
          "commitNameOld": "8c62c46046656c01b327c378e89d57b4bf37e16e",
          "commitAuthorOld": "Aaron Myers",
          "daysBetweenCommits": 84.9,
          "commitsBetweenForRepo": 539,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,15 @@\n   public ListenableFuture\u003cRemoteEditLogManifest\u003e getEditLogManifest(\n-      final long fromTxnId, final boolean forReading) {\n+      final long fromTxnId, final boolean forReading, \n+      final boolean inProgressOk) {\n     return executor.submit(new Callable\u003cRemoteEditLogManifest\u003e() {\n       @Override\n       public RemoteEditLogManifest call() throws IOException {\n         GetEditLogManifestResponseProto ret \u003d getProxy().getEditLogManifest(\n-            journalId, fromTxnId, forReading);\n+            journalId, fromTxnId, forReading, inProgressOk);\n         // Update the http port, since we need this to build URLs to any of the\n         // returned logs.\n         httpPort \u003d ret.getHttpPort();\n         return PBHelper.convert(ret.getManifest());\n       }\n     });\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public ListenableFuture\u003cRemoteEditLogManifest\u003e getEditLogManifest(\n      final long fromTxnId, final boolean forReading, \n      final boolean inProgressOk) {\n    return executor.submit(new Callable\u003cRemoteEditLogManifest\u003e() {\n      @Override\n      public RemoteEditLogManifest call() throws IOException {\n        GetEditLogManifestResponseProto ret \u003d getProxy().getEditLogManifest(\n            journalId, fromTxnId, forReading, inProgressOk);\n        // Update the http port, since we need this to build URLs to any of the\n        // returned logs.\n        httpPort \u003d ret.getHttpPort();\n        return PBHelper.convert(ret.getManifest());\n      }\n    });\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/client/IPCLoggerChannel.java",
          "extendedDetails": {}
        }
      ]
    },
    "8c62c46046656c01b327c378e89d57b4bf37e16e": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-4298. StorageRetentionManager spews warnings when used with QJM. Contributed by Aaron T. Myers.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1485371 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/05/13 12:37 PM",
      "commitName": "8c62c46046656c01b327c378e89d57b4bf37e16e",
      "commitAuthor": "Aaron Myers",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-4298. StorageRetentionManager spews warnings when used with QJM. Contributed by Aaron T. Myers.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1485371 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/05/13 12:37 PM",
          "commitName": "8c62c46046656c01b327c378e89d57b4bf37e16e",
          "commitAuthor": "Aaron Myers",
          "commitDateOld": "27/03/13 11:42 AM",
          "commitNameOld": "81192e4e415d359ca832eff50d6f64c3da7acb73",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 56.04,
          "commitsBetweenForRepo": 335,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,14 @@\n   public ListenableFuture\u003cRemoteEditLogManifest\u003e getEditLogManifest(\n-      final long fromTxnId) {\n+      final long fromTxnId, final boolean forReading) {\n     return executor.submit(new Callable\u003cRemoteEditLogManifest\u003e() {\n       @Override\n       public RemoteEditLogManifest call() throws IOException {\n         GetEditLogManifestResponseProto ret \u003d getProxy().getEditLogManifest(\n-            journalId, fromTxnId);\n+            journalId, fromTxnId, forReading);\n         // Update the http port, since we need this to build URLs to any of the\n         // returned logs.\n         httpPort \u003d ret.getHttpPort();\n         return PBHelper.convert(ret.getManifest());\n       }\n     });\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public ListenableFuture\u003cRemoteEditLogManifest\u003e getEditLogManifest(\n      final long fromTxnId, final boolean forReading) {\n    return executor.submit(new Callable\u003cRemoteEditLogManifest\u003e() {\n      @Override\n      public RemoteEditLogManifest call() throws IOException {\n        GetEditLogManifestResponseProto ret \u003d getProxy().getEditLogManifest(\n            journalId, fromTxnId, forReading);\n        // Update the http port, since we need this to build URLs to any of the\n        // returned logs.\n        httpPort \u003d ret.getHttpPort();\n        return PBHelper.convert(ret.getManifest());\n      }\n    });\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/client/IPCLoggerChannel.java",
          "extendedDetails": {
            "oldValue": "[fromTxnId-long(modifiers-final)]",
            "newValue": "[fromTxnId-long(modifiers-final), forReading-boolean(modifiers-final)]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-4298. StorageRetentionManager spews warnings when used with QJM. Contributed by Aaron T. Myers.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1485371 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/05/13 12:37 PM",
          "commitName": "8c62c46046656c01b327c378e89d57b4bf37e16e",
          "commitAuthor": "Aaron Myers",
          "commitDateOld": "27/03/13 11:42 AM",
          "commitNameOld": "81192e4e415d359ca832eff50d6f64c3da7acb73",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 56.04,
          "commitsBetweenForRepo": 335,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,14 @@\n   public ListenableFuture\u003cRemoteEditLogManifest\u003e getEditLogManifest(\n-      final long fromTxnId) {\n+      final long fromTxnId, final boolean forReading) {\n     return executor.submit(new Callable\u003cRemoteEditLogManifest\u003e() {\n       @Override\n       public RemoteEditLogManifest call() throws IOException {\n         GetEditLogManifestResponseProto ret \u003d getProxy().getEditLogManifest(\n-            journalId, fromTxnId);\n+            journalId, fromTxnId, forReading);\n         // Update the http port, since we need this to build URLs to any of the\n         // returned logs.\n         httpPort \u003d ret.getHttpPort();\n         return PBHelper.convert(ret.getManifest());\n       }\n     });\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public ListenableFuture\u003cRemoteEditLogManifest\u003e getEditLogManifest(\n      final long fromTxnId, final boolean forReading) {\n    return executor.submit(new Callable\u003cRemoteEditLogManifest\u003e() {\n      @Override\n      public RemoteEditLogManifest call() throws IOException {\n        GetEditLogManifestResponseProto ret \u003d getProxy().getEditLogManifest(\n            journalId, fromTxnId, forReading);\n        // Update the http port, since we need this to build URLs to any of the\n        // returned logs.\n        httpPort \u003d ret.getHttpPort();\n        return PBHelper.convert(ret.getManifest());\n      }\n    });\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/client/IPCLoggerChannel.java",
          "extendedDetails": {}
        }
      ]
    },
    "939f4a9f92ab260aee697d3715946218a7ff769a": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-3694. Fix getEditLogManifest to fetch httpPort if necessary. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3077@1365788 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/07/12 2:40 PM",
      "commitName": "939f4a9f92ab260aee697d3715946218a7ff769a",
      "commitAuthor": "Todd Lipcon",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-3694. Fix getEditLogManifest to fetch httpPort if necessary. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3077@1365788 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "25/07/12 2:40 PM",
          "commitName": "939f4a9f92ab260aee697d3715946218a7ff769a",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "19/07/12 5:25 PM",
          "commitNameOld": "74d4573a23db5586c6e47ff2277aa7c35237da34",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 5.89,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,14 @@\n-  public ListenableFuture\u003cGetEditLogManifestResponseProto\u003e getEditLogManifest(\n+  public ListenableFuture\u003cRemoteEditLogManifest\u003e getEditLogManifest(\n       final long fromTxnId) {\n-    return executor.submit(new Callable\u003cGetEditLogManifestResponseProto\u003e() {\n+    return executor.submit(new Callable\u003cRemoteEditLogManifest\u003e() {\n       @Override\n-      public GetEditLogManifestResponseProto call() throws IOException {\n-        return getProxy().getEditLogManifest(journalId, fromTxnId);\n+      public RemoteEditLogManifest call() throws IOException {\n+        GetEditLogManifestResponseProto ret \u003d getProxy().getEditLogManifest(\n+            journalId, fromTxnId);\n+        // Update the http port, since we need this to build URLs to any of the\n+        // returned logs.\n+        httpPort \u003d ret.getHttpPort();\n+        return PBHelper.convert(ret.getManifest());\n       }\n     });\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public ListenableFuture\u003cRemoteEditLogManifest\u003e getEditLogManifest(\n      final long fromTxnId) {\n    return executor.submit(new Callable\u003cRemoteEditLogManifest\u003e() {\n      @Override\n      public RemoteEditLogManifest call() throws IOException {\n        GetEditLogManifestResponseProto ret \u003d getProxy().getEditLogManifest(\n            journalId, fromTxnId);\n        // Update the http port, since we need this to build URLs to any of the\n        // returned logs.\n        httpPort \u003d ret.getHttpPort();\n        return PBHelper.convert(ret.getManifest());\n      }\n    });\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/client/IPCLoggerChannel.java",
          "extendedDetails": {
            "oldValue": "ListenableFuture\u003cGetEditLogManifestResponseProto\u003e",
            "newValue": "ListenableFuture\u003cRemoteEditLogManifest\u003e"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-3694. Fix getEditLogManifest to fetch httpPort if necessary. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3077@1365788 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "25/07/12 2:40 PM",
          "commitName": "939f4a9f92ab260aee697d3715946218a7ff769a",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "19/07/12 5:25 PM",
          "commitNameOld": "74d4573a23db5586c6e47ff2277aa7c35237da34",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 5.89,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,14 @@\n-  public ListenableFuture\u003cGetEditLogManifestResponseProto\u003e getEditLogManifest(\n+  public ListenableFuture\u003cRemoteEditLogManifest\u003e getEditLogManifest(\n       final long fromTxnId) {\n-    return executor.submit(new Callable\u003cGetEditLogManifestResponseProto\u003e() {\n+    return executor.submit(new Callable\u003cRemoteEditLogManifest\u003e() {\n       @Override\n-      public GetEditLogManifestResponseProto call() throws IOException {\n-        return getProxy().getEditLogManifest(journalId, fromTxnId);\n+      public RemoteEditLogManifest call() throws IOException {\n+        GetEditLogManifestResponseProto ret \u003d getProxy().getEditLogManifest(\n+            journalId, fromTxnId);\n+        // Update the http port, since we need this to build URLs to any of the\n+        // returned logs.\n+        httpPort \u003d ret.getHttpPort();\n+        return PBHelper.convert(ret.getManifest());\n       }\n     });\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public ListenableFuture\u003cRemoteEditLogManifest\u003e getEditLogManifest(\n      final long fromTxnId) {\n    return executor.submit(new Callable\u003cRemoteEditLogManifest\u003e() {\n      @Override\n      public RemoteEditLogManifest call() throws IOException {\n        GetEditLogManifestResponseProto ret \u003d getProxy().getEditLogManifest(\n            journalId, fromTxnId);\n        // Update the http port, since we need this to build URLs to any of the\n        // returned logs.\n        httpPort \u003d ret.getHttpPort();\n        return PBHelper.convert(ret.getManifest());\n      }\n    });\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/client/IPCLoggerChannel.java",
          "extendedDetails": {}
        }
      ]
    },
    "74d4573a23db5586c6e47ff2277aa7c35237da34": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-3077. Quorum-based protocol for reading and writing edit logs. Contributed by Todd Lipcon based on initial work from Brandon Li and Hari Mankude.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3077@1363596 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/07/12 5:25 PM",
      "commitName": "74d4573a23db5586c6e47ff2277aa7c35237da34",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,9 @@\n+  public ListenableFuture\u003cGetEditLogManifestResponseProto\u003e getEditLogManifest(\n+      final long fromTxnId) {\n+    return executor.submit(new Callable\u003cGetEditLogManifestResponseProto\u003e() {\n+      @Override\n+      public GetEditLogManifestResponseProto call() throws IOException {\n+        return getProxy().getEditLogManifest(journalId, fromTxnId);\n+      }\n+    });\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public ListenableFuture\u003cGetEditLogManifestResponseProto\u003e getEditLogManifest(\n      final long fromTxnId) {\n    return executor.submit(new Callable\u003cGetEditLogManifestResponseProto\u003e() {\n      @Override\n      public GetEditLogManifestResponseProto call() throws IOException {\n        return getProxy().getEditLogManifest(journalId, fromTxnId);\n      }\n    });\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/client/IPCLoggerChannel.java"
    }
  }
}