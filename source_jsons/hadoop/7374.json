{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSDirXAttrOp.java",
  "functionName": "unprotectedRemoveXAttrs",
  "functionId": "unprotectedRemoveXAttrs___fsd-FSDirectory__iip-INodesInPath(modifiers-final)__toRemove-List__XAttr__(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirXAttrOp.java",
  "functionStartLine": 200,
  "functionEndLine": 215,
  "numCommitsSeen": 418,
  "timeTaken": 10963,
  "changeHistory": [
    "39ed3a66dbb01383ed16b141183fc48bfd2e613d",
    "2acc50b826fa8b00f2b09d9546c4b3215b89d46d",
    "4402f3f8557527d5c6cdad6f5bdcbd707b8cbf52",
    "7ea24fc06c081e2ba6f5f66d212abb14b80c9064",
    "219f4c199e45f8ce7f41192493bf0dc8f1e5dc30",
    "9d175853b0170683ad5f21d9bcdeaac49fe89e04",
    "c78e3a7cdd10c40454e9acb06986ba6d8573cb19",
    "6c5bbd7a42d1e8b4416fd8870fd60c67867b35c9",
    "d417e49ce4db119cdeb01be526cdb07f24baf388",
    "ac23a55547716df29b3e25c98a113399e184d9d1"
  ],
  "changeHistoryShort": {
    "39ed3a66dbb01383ed16b141183fc48bfd2e613d": "Ybodychange",
    "2acc50b826fa8b00f2b09d9546c4b3215b89d46d": "Ybodychange",
    "4402f3f8557527d5c6cdad6f5bdcbd707b8cbf52": "Ybodychange",
    "7ea24fc06c081e2ba6f5f66d212abb14b80c9064": "Ybodychange",
    "219f4c199e45f8ce7f41192493bf0dc8f1e5dc30": "Ymultichange(Yparameterchange,Ybodychange)",
    "9d175853b0170683ad5f21d9bcdeaac49fe89e04": "Ybodychange",
    "c78e3a7cdd10c40454e9acb06986ba6d8573cb19": "Ybodychange",
    "6c5bbd7a42d1e8b4416fd8870fd60c67867b35c9": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yparameterchange)",
    "d417e49ce4db119cdeb01be526cdb07f24baf388": "Ymultichange(Yrename,Yparameterchange,Yreturntypechange,Ybodychange,Yparametermetachange)",
    "ac23a55547716df29b3e25c98a113399e184d9d1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "39ed3a66dbb01383ed16b141183fc48bfd2e613d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13076: [SPS]: Cleanup work for HDFS-10285 merge. Contributed by Rakesh R.\n",
      "commitDate": "12/08/18 3:06 AM",
      "commitName": "39ed3a66dbb01383ed16b141183fc48bfd2e613d",
      "commitAuthor": "Uma Maheswara Rao G",
      "commitDateOld": "12/08/18 3:06 AM",
      "commitNameOld": "2acc50b826fa8b00f2b09d9546c4b3215b89d46d",
      "commitAuthorOld": "Rakesh Radhakrishnan",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,16 @@\n   static List\u003cXAttr\u003e unprotectedRemoveXAttrs(\n       FSDirectory fsd, final INodesInPath iip, final List\u003cXAttr\u003e toRemove)\n       throws IOException {\n     assert fsd.hasWriteLock();\n     INode inode \u003d FSDirectory.resolveLastINode(iip);\n     int snapshotId \u003d iip.getLatestSnapshotId();\n     List\u003cXAttr\u003e existingXAttrs \u003d XAttrStorage.readINodeXAttrs(inode);\n     List\u003cXAttr\u003e removedXAttrs \u003d Lists.newArrayListWithCapacity(toRemove.size());\n     List\u003cXAttr\u003e newXAttrs \u003d filterINodeXAttrs(existingXAttrs, toRemove,\n                                               removedXAttrs);\n     if (existingXAttrs.size() !\u003d newXAttrs.size()) {\n-      for (XAttr xattr : toRemove) {\n-        if (XATTR_SATISFY_STORAGE_POLICY\n-            .equals(XAttrHelper.getPrefixedName(xattr))) {\n-          StoragePolicySatisfyManager spsManager \u003d\n-              fsd.getBlockManager().getSPSManager();\n-          if (spsManager !\u003d null) {\n-            spsManager.getInternalSPSService().clearQueue(inode.getId());\n-          }\n-          break;\n-        }\n-      }\n       XAttrStorage.updateINodeXAttrs(inode, newXAttrs, snapshotId);\n       return removedXAttrs;\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static List\u003cXAttr\u003e unprotectedRemoveXAttrs(\n      FSDirectory fsd, final INodesInPath iip, final List\u003cXAttr\u003e toRemove)\n      throws IOException {\n    assert fsd.hasWriteLock();\n    INode inode \u003d FSDirectory.resolveLastINode(iip);\n    int snapshotId \u003d iip.getLatestSnapshotId();\n    List\u003cXAttr\u003e existingXAttrs \u003d XAttrStorage.readINodeXAttrs(inode);\n    List\u003cXAttr\u003e removedXAttrs \u003d Lists.newArrayListWithCapacity(toRemove.size());\n    List\u003cXAttr\u003e newXAttrs \u003d filterINodeXAttrs(existingXAttrs, toRemove,\n                                              removedXAttrs);\n    if (existingXAttrs.size() !\u003d newXAttrs.size()) {\n      XAttrStorage.updateINodeXAttrs(inode, newXAttrs, snapshotId);\n      return removedXAttrs;\n    }\n    return null;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirXAttrOp.java",
      "extendedDetails": {}
    },
    "2acc50b826fa8b00f2b09d9546c4b3215b89d46d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13165: [SPS]: Collects successfully moved block details via IBR. Contributed by Rakesh R.\n",
      "commitDate": "12/08/18 3:06 AM",
      "commitName": "2acc50b826fa8b00f2b09d9546c4b3215b89d46d",
      "commitAuthor": "Rakesh Radhakrishnan",
      "commitDateOld": "12/08/18 3:06 AM",
      "commitNameOld": "4402f3f8557527d5c6cdad6f5bdcbd707b8cbf52",
      "commitAuthorOld": "Uma Maheswara Rao G",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,27 @@\n   static List\u003cXAttr\u003e unprotectedRemoveXAttrs(\n       FSDirectory fsd, final INodesInPath iip, final List\u003cXAttr\u003e toRemove)\n       throws IOException {\n     assert fsd.hasWriteLock();\n     INode inode \u003d FSDirectory.resolveLastINode(iip);\n     int snapshotId \u003d iip.getLatestSnapshotId();\n     List\u003cXAttr\u003e existingXAttrs \u003d XAttrStorage.readINodeXAttrs(inode);\n     List\u003cXAttr\u003e removedXAttrs \u003d Lists.newArrayListWithCapacity(toRemove.size());\n     List\u003cXAttr\u003e newXAttrs \u003d filterINodeXAttrs(existingXAttrs, toRemove,\n                                               removedXAttrs);\n     if (existingXAttrs.size() !\u003d newXAttrs.size()) {\n       for (XAttr xattr : toRemove) {\n         if (XATTR_SATISFY_STORAGE_POLICY\n             .equals(XAttrHelper.getPrefixedName(xattr))) {\n-          fsd.getBlockManager().getSPSManager().getInternalSPSService()\n-              .clearQueue(inode.getId());\n+          StoragePolicySatisfyManager spsManager \u003d\n+              fsd.getBlockManager().getSPSManager();\n+          if (spsManager !\u003d null) {\n+            spsManager.getInternalSPSService().clearQueue(inode.getId());\n+          }\n           break;\n         }\n       }\n       XAttrStorage.updateINodeXAttrs(inode, newXAttrs, snapshotId);\n       return removedXAttrs;\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static List\u003cXAttr\u003e unprotectedRemoveXAttrs(\n      FSDirectory fsd, final INodesInPath iip, final List\u003cXAttr\u003e toRemove)\n      throws IOException {\n    assert fsd.hasWriteLock();\n    INode inode \u003d FSDirectory.resolveLastINode(iip);\n    int snapshotId \u003d iip.getLatestSnapshotId();\n    List\u003cXAttr\u003e existingXAttrs \u003d XAttrStorage.readINodeXAttrs(inode);\n    List\u003cXAttr\u003e removedXAttrs \u003d Lists.newArrayListWithCapacity(toRemove.size());\n    List\u003cXAttr\u003e newXAttrs \u003d filterINodeXAttrs(existingXAttrs, toRemove,\n                                              removedXAttrs);\n    if (existingXAttrs.size() !\u003d newXAttrs.size()) {\n      for (XAttr xattr : toRemove) {\n        if (XATTR_SATISFY_STORAGE_POLICY\n            .equals(XAttrHelper.getPrefixedName(xattr))) {\n          StoragePolicySatisfyManager spsManager \u003d\n              fsd.getBlockManager().getSPSManager();\n          if (spsManager !\u003d null) {\n            spsManager.getInternalSPSService().clearQueue(inode.getId());\n          }\n          break;\n        }\n      }\n      XAttrStorage.updateINodeXAttrs(inode, newXAttrs, snapshotId);\n      return removedXAttrs;\n    }\n    return null;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirXAttrOp.java",
      "extendedDetails": {}
    },
    "4402f3f8557527d5c6cdad6f5bdcbd707b8cbf52": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13097: [SPS]: Fix the branch review comments(Part1). Contributed by Surendra Singh.\n",
      "commitDate": "12/08/18 3:06 AM",
      "commitName": "4402f3f8557527d5c6cdad6f5bdcbd707b8cbf52",
      "commitAuthor": "Uma Maheswara Rao G",
      "commitDateOld": "12/08/18 3:06 AM",
      "commitNameOld": "7ea24fc06c081e2ba6f5f66d212abb14b80c9064",
      "commitAuthorOld": "Uma Maheswara Rao G",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 16,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n   static List\u003cXAttr\u003e unprotectedRemoveXAttrs(\n       FSDirectory fsd, final INodesInPath iip, final List\u003cXAttr\u003e toRemove)\n       throws IOException {\n     assert fsd.hasWriteLock();\n     INode inode \u003d FSDirectory.resolveLastINode(iip);\n     int snapshotId \u003d iip.getLatestSnapshotId();\n     List\u003cXAttr\u003e existingXAttrs \u003d XAttrStorage.readINodeXAttrs(inode);\n     List\u003cXAttr\u003e removedXAttrs \u003d Lists.newArrayListWithCapacity(toRemove.size());\n     List\u003cXAttr\u003e newXAttrs \u003d filterINodeXAttrs(existingXAttrs, toRemove,\n                                               removedXAttrs);\n     if (existingXAttrs.size() !\u003d newXAttrs.size()) {\n       for (XAttr xattr : toRemove) {\n         if (XATTR_SATISFY_STORAGE_POLICY\n             .equals(XAttrHelper.getPrefixedName(xattr))) {\n-          fsd.getBlockManager().getStoragePolicySatisfier()\n+          fsd.getBlockManager().getSPSManager().getInternalSPSService()\n               .clearQueue(inode.getId());\n           break;\n         }\n       }\n       XAttrStorage.updateINodeXAttrs(inode, newXAttrs, snapshotId);\n       return removedXAttrs;\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static List\u003cXAttr\u003e unprotectedRemoveXAttrs(\n      FSDirectory fsd, final INodesInPath iip, final List\u003cXAttr\u003e toRemove)\n      throws IOException {\n    assert fsd.hasWriteLock();\n    INode inode \u003d FSDirectory.resolveLastINode(iip);\n    int snapshotId \u003d iip.getLatestSnapshotId();\n    List\u003cXAttr\u003e existingXAttrs \u003d XAttrStorage.readINodeXAttrs(inode);\n    List\u003cXAttr\u003e removedXAttrs \u003d Lists.newArrayListWithCapacity(toRemove.size());\n    List\u003cXAttr\u003e newXAttrs \u003d filterINodeXAttrs(existingXAttrs, toRemove,\n                                              removedXAttrs);\n    if (existingXAttrs.size() !\u003d newXAttrs.size()) {\n      for (XAttr xattr : toRemove) {\n        if (XATTR_SATISFY_STORAGE_POLICY\n            .equals(XAttrHelper.getPrefixedName(xattr))) {\n          fsd.getBlockManager().getSPSManager().getInternalSPSService()\n              .clearQueue(inode.getId());\n          break;\n        }\n      }\n      XAttrStorage.updateINodeXAttrs(inode, newXAttrs, snapshotId);\n      return removedXAttrs;\n    }\n    return null;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirXAttrOp.java",
      "extendedDetails": {}
    },
    "7ea24fc06c081e2ba6f5f66d212abb14b80c9064": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12225: [SPS]: Optimize extended attributes for tracking SPS movements. Contributed by Surendra Singh Lilhore.\n",
      "commitDate": "12/08/18 3:06 AM",
      "commitName": "7ea24fc06c081e2ba6f5f66d212abb14b80c9064",
      "commitAuthor": "Uma Maheswara Rao G",
      "commitDateOld": "12/08/18 3:05 AM",
      "commitNameOld": "5ce332dc9a072f8850ab71ba16898faf8e866c06",
      "commitAuthorOld": "Uma Maheswara Rao G",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,24 @@\n   static List\u003cXAttr\u003e unprotectedRemoveXAttrs(\n       FSDirectory fsd, final INodesInPath iip, final List\u003cXAttr\u003e toRemove)\n       throws IOException {\n     assert fsd.hasWriteLock();\n     INode inode \u003d FSDirectory.resolveLastINode(iip);\n     int snapshotId \u003d iip.getLatestSnapshotId();\n     List\u003cXAttr\u003e existingXAttrs \u003d XAttrStorage.readINodeXAttrs(inode);\n     List\u003cXAttr\u003e removedXAttrs \u003d Lists.newArrayListWithCapacity(toRemove.size());\n     List\u003cXAttr\u003e newXAttrs \u003d filterINodeXAttrs(existingXAttrs, toRemove,\n                                               removedXAttrs);\n     if (existingXAttrs.size() !\u003d newXAttrs.size()) {\n+      for (XAttr xattr : toRemove) {\n+        if (XATTR_SATISFY_STORAGE_POLICY\n+            .equals(XAttrHelper.getPrefixedName(xattr))) {\n+          fsd.getBlockManager().getStoragePolicySatisfier()\n+              .clearQueue(inode.getId());\n+          break;\n+        }\n+      }\n       XAttrStorage.updateINodeXAttrs(inode, newXAttrs, snapshotId);\n       return removedXAttrs;\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static List\u003cXAttr\u003e unprotectedRemoveXAttrs(\n      FSDirectory fsd, final INodesInPath iip, final List\u003cXAttr\u003e toRemove)\n      throws IOException {\n    assert fsd.hasWriteLock();\n    INode inode \u003d FSDirectory.resolveLastINode(iip);\n    int snapshotId \u003d iip.getLatestSnapshotId();\n    List\u003cXAttr\u003e existingXAttrs \u003d XAttrStorage.readINodeXAttrs(inode);\n    List\u003cXAttr\u003e removedXAttrs \u003d Lists.newArrayListWithCapacity(toRemove.size());\n    List\u003cXAttr\u003e newXAttrs \u003d filterINodeXAttrs(existingXAttrs, toRemove,\n                                              removedXAttrs);\n    if (existingXAttrs.size() !\u003d newXAttrs.size()) {\n      for (XAttr xattr : toRemove) {\n        if (XATTR_SATISFY_STORAGE_POLICY\n            .equals(XAttrHelper.getPrefixedName(xattr))) {\n          fsd.getBlockManager().getStoragePolicySatisfier()\n              .clearQueue(inode.getId());\n          break;\n        }\n      }\n      XAttrStorage.updateINodeXAttrs(inode, newXAttrs, snapshotId);\n      return removedXAttrs;\n    }\n    return null;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirXAttrOp.java",
      "extendedDetails": {}
    },
    "219f4c199e45f8ce7f41192493bf0dc8f1e5dc30": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-11904. Reuse iip in unprotectedRemoveXAttrs calls.\n",
      "commitDate": "01/06/17 2:13 PM",
      "commitName": "219f4c199e45f8ce7f41192493bf0dc8f1e5dc30",
      "commitAuthor": "Xiao Chen",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-11904. Reuse iip in unprotectedRemoveXAttrs calls.\n",
          "commitDate": "01/06/17 2:13 PM",
          "commitName": "219f4c199e45f8ce7f41192493bf0dc8f1e5dc30",
          "commitAuthor": "Xiao Chen",
          "commitDateOld": "16/05/17 9:28 AM",
          "commitNameOld": "9b90e52f1ec22c18cd535af2a569defcef65b093",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 16.2,
          "commitsBetweenForRepo": 91,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,16 @@\n   static List\u003cXAttr\u003e unprotectedRemoveXAttrs(\n-      FSDirectory fsd, final String src, final List\u003cXAttr\u003e toRemove)\n+      FSDirectory fsd, final INodesInPath iip, final List\u003cXAttr\u003e toRemove)\n       throws IOException {\n     assert fsd.hasWriteLock();\n-    INodesInPath iip \u003d fsd.getINodesInPath(src, DirOp.WRITE);\n     INode inode \u003d FSDirectory.resolveLastINode(iip);\n     int snapshotId \u003d iip.getLatestSnapshotId();\n     List\u003cXAttr\u003e existingXAttrs \u003d XAttrStorage.readINodeXAttrs(inode);\n     List\u003cXAttr\u003e removedXAttrs \u003d Lists.newArrayListWithCapacity(toRemove.size());\n     List\u003cXAttr\u003e newXAttrs \u003d filterINodeXAttrs(existingXAttrs, toRemove,\n                                               removedXAttrs);\n     if (existingXAttrs.size() !\u003d newXAttrs.size()) {\n       XAttrStorage.updateINodeXAttrs(inode, newXAttrs, snapshotId);\n       return removedXAttrs;\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static List\u003cXAttr\u003e unprotectedRemoveXAttrs(\n      FSDirectory fsd, final INodesInPath iip, final List\u003cXAttr\u003e toRemove)\n      throws IOException {\n    assert fsd.hasWriteLock();\n    INode inode \u003d FSDirectory.resolveLastINode(iip);\n    int snapshotId \u003d iip.getLatestSnapshotId();\n    List\u003cXAttr\u003e existingXAttrs \u003d XAttrStorage.readINodeXAttrs(inode);\n    List\u003cXAttr\u003e removedXAttrs \u003d Lists.newArrayListWithCapacity(toRemove.size());\n    List\u003cXAttr\u003e newXAttrs \u003d filterINodeXAttrs(existingXAttrs, toRemove,\n                                              removedXAttrs);\n    if (existingXAttrs.size() !\u003d newXAttrs.size()) {\n      XAttrStorage.updateINodeXAttrs(inode, newXAttrs, snapshotId);\n      return removedXAttrs;\n    }\n    return null;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirXAttrOp.java",
          "extendedDetails": {
            "oldValue": "[fsd-FSDirectory, src-String(modifiers-final), toRemove-List\u003cXAttr\u003e(modifiers-final)]",
            "newValue": "[fsd-FSDirectory, iip-INodesInPath(modifiers-final), toRemove-List\u003cXAttr\u003e(modifiers-final)]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-11904. Reuse iip in unprotectedRemoveXAttrs calls.\n",
          "commitDate": "01/06/17 2:13 PM",
          "commitName": "219f4c199e45f8ce7f41192493bf0dc8f1e5dc30",
          "commitAuthor": "Xiao Chen",
          "commitDateOld": "16/05/17 9:28 AM",
          "commitNameOld": "9b90e52f1ec22c18cd535af2a569defcef65b093",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 16.2,
          "commitsBetweenForRepo": 91,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,16 @@\n   static List\u003cXAttr\u003e unprotectedRemoveXAttrs(\n-      FSDirectory fsd, final String src, final List\u003cXAttr\u003e toRemove)\n+      FSDirectory fsd, final INodesInPath iip, final List\u003cXAttr\u003e toRemove)\n       throws IOException {\n     assert fsd.hasWriteLock();\n-    INodesInPath iip \u003d fsd.getINodesInPath(src, DirOp.WRITE);\n     INode inode \u003d FSDirectory.resolveLastINode(iip);\n     int snapshotId \u003d iip.getLatestSnapshotId();\n     List\u003cXAttr\u003e existingXAttrs \u003d XAttrStorage.readINodeXAttrs(inode);\n     List\u003cXAttr\u003e removedXAttrs \u003d Lists.newArrayListWithCapacity(toRemove.size());\n     List\u003cXAttr\u003e newXAttrs \u003d filterINodeXAttrs(existingXAttrs, toRemove,\n                                               removedXAttrs);\n     if (existingXAttrs.size() !\u003d newXAttrs.size()) {\n       XAttrStorage.updateINodeXAttrs(inode, newXAttrs, snapshotId);\n       return removedXAttrs;\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static List\u003cXAttr\u003e unprotectedRemoveXAttrs(\n      FSDirectory fsd, final INodesInPath iip, final List\u003cXAttr\u003e toRemove)\n      throws IOException {\n    assert fsd.hasWriteLock();\n    INode inode \u003d FSDirectory.resolveLastINode(iip);\n    int snapshotId \u003d iip.getLatestSnapshotId();\n    List\u003cXAttr\u003e existingXAttrs \u003d XAttrStorage.readINodeXAttrs(inode);\n    List\u003cXAttr\u003e removedXAttrs \u003d Lists.newArrayListWithCapacity(toRemove.size());\n    List\u003cXAttr\u003e newXAttrs \u003d filterINodeXAttrs(existingXAttrs, toRemove,\n                                              removedXAttrs);\n    if (existingXAttrs.size() !\u003d newXAttrs.size()) {\n      XAttrStorage.updateINodeXAttrs(inode, newXAttrs, snapshotId);\n      return removedXAttrs;\n    }\n    return null;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirXAttrOp.java",
          "extendedDetails": {}
        }
      ]
    },
    "9d175853b0170683ad5f21d9bcdeaac49fe89e04": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10997. Reduce number of path resolving methods. Contributed by Daryn Sharp.\n",
      "commitDate": "24/10/16 3:14 PM",
      "commitName": "9d175853b0170683ad5f21d9bcdeaac49fe89e04",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "06/10/16 1:11 PM",
      "commitNameOld": "f32e9fc8f7150f0e889c0774b3ad712af26fbd65",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 18.09,
      "commitsBetweenForRepo": 121,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,17 @@\n   static List\u003cXAttr\u003e unprotectedRemoveXAttrs(\n       FSDirectory fsd, final String src, final List\u003cXAttr\u003e toRemove)\n       throws IOException {\n     assert fsd.hasWriteLock();\n-    INodesInPath iip \u003d fsd.getINodesInPath4Write(\n-        FSDirectory.normalizePath(src), true);\n+    INodesInPath iip \u003d fsd.getINodesInPath(src, DirOp.WRITE);\n     INode inode \u003d FSDirectory.resolveLastINode(iip);\n     int snapshotId \u003d iip.getLatestSnapshotId();\n     List\u003cXAttr\u003e existingXAttrs \u003d XAttrStorage.readINodeXAttrs(inode);\n     List\u003cXAttr\u003e removedXAttrs \u003d Lists.newArrayListWithCapacity(toRemove.size());\n     List\u003cXAttr\u003e newXAttrs \u003d filterINodeXAttrs(existingXAttrs, toRemove,\n                                               removedXAttrs);\n     if (existingXAttrs.size() !\u003d newXAttrs.size()) {\n       XAttrStorage.updateINodeXAttrs(inode, newXAttrs, snapshotId);\n       return removedXAttrs;\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static List\u003cXAttr\u003e unprotectedRemoveXAttrs(\n      FSDirectory fsd, final String src, final List\u003cXAttr\u003e toRemove)\n      throws IOException {\n    assert fsd.hasWriteLock();\n    INodesInPath iip \u003d fsd.getINodesInPath(src, DirOp.WRITE);\n    INode inode \u003d FSDirectory.resolveLastINode(iip);\n    int snapshotId \u003d iip.getLatestSnapshotId();\n    List\u003cXAttr\u003e existingXAttrs \u003d XAttrStorage.readINodeXAttrs(inode);\n    List\u003cXAttr\u003e removedXAttrs \u003d Lists.newArrayListWithCapacity(toRemove.size());\n    List\u003cXAttr\u003e newXAttrs \u003d filterINodeXAttrs(existingXAttrs, toRemove,\n                                              removedXAttrs);\n    if (existingXAttrs.size() !\u003d newXAttrs.size()) {\n      XAttrStorage.updateINodeXAttrs(inode, newXAttrs, snapshotId);\n      return removedXAttrs;\n    }\n    return null;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirXAttrOp.java",
      "extendedDetails": {}
    },
    "c78e3a7cdd10c40454e9acb06986ba6d8573cb19": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7059. Avoid resolving path multiple times. Contributed by Jing Zhao.\n",
      "commitDate": "12/12/14 3:13 PM",
      "commitName": "c78e3a7cdd10c40454e9acb06986ba6d8573cb19",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "08/12/14 11:52 AM",
      "commitNameOld": "6c5bbd7a42d1e8b4416fd8870fd60c67867b35c9",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 4.14,
      "commitsBetweenForRepo": 47,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   static List\u003cXAttr\u003e unprotectedRemoveXAttrs(\n       FSDirectory fsd, final String src, final List\u003cXAttr\u003e toRemove)\n       throws IOException {\n     assert fsd.hasWriteLock();\n     INodesInPath iip \u003d fsd.getINodesInPath4Write(\n         FSDirectory.normalizePath(src), true);\n-    INode inode \u003d FSDirectory.resolveLastINode(src, iip);\n+    INode inode \u003d FSDirectory.resolveLastINode(iip);\n     int snapshotId \u003d iip.getLatestSnapshotId();\n     List\u003cXAttr\u003e existingXAttrs \u003d XAttrStorage.readINodeXAttrs(inode);\n     List\u003cXAttr\u003e removedXAttrs \u003d Lists.newArrayListWithCapacity(toRemove.size());\n     List\u003cXAttr\u003e newXAttrs \u003d filterINodeXAttrs(existingXAttrs, toRemove,\n                                               removedXAttrs);\n     if (existingXAttrs.size() !\u003d newXAttrs.size()) {\n       XAttrStorage.updateINodeXAttrs(inode, newXAttrs, snapshotId);\n       return removedXAttrs;\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static List\u003cXAttr\u003e unprotectedRemoveXAttrs(\n      FSDirectory fsd, final String src, final List\u003cXAttr\u003e toRemove)\n      throws IOException {\n    assert fsd.hasWriteLock();\n    INodesInPath iip \u003d fsd.getINodesInPath4Write(\n        FSDirectory.normalizePath(src), true);\n    INode inode \u003d FSDirectory.resolveLastINode(iip);\n    int snapshotId \u003d iip.getLatestSnapshotId();\n    List\u003cXAttr\u003e existingXAttrs \u003d XAttrStorage.readINodeXAttrs(inode);\n    List\u003cXAttr\u003e removedXAttrs \u003d Lists.newArrayListWithCapacity(toRemove.size());\n    List\u003cXAttr\u003e newXAttrs \u003d filterINodeXAttrs(existingXAttrs, toRemove,\n                                              removedXAttrs);\n    if (existingXAttrs.size() !\u003d newXAttrs.size()) {\n      XAttrStorage.updateINodeXAttrs(inode, newXAttrs, snapshotId);\n      return removedXAttrs;\n    }\n    return null;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirXAttrOp.java",
      "extendedDetails": {}
    },
    "6c5bbd7a42d1e8b4416fd8870fd60c67867b35c9": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yparameterchange)",
      "commitMessage": "HDFS-7486. Consolidate XAttr-related implementation into a single class. Contributed by Haohui Mai.\n",
      "commitDate": "08/12/14 11:52 AM",
      "commitName": "6c5bbd7a42d1e8b4416fd8870fd60c67867b35c9",
      "commitAuthor": "Haohui Mai",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-7486. Consolidate XAttr-related implementation into a single class. Contributed by Haohui Mai.\n",
          "commitDate": "08/12/14 11:52 AM",
          "commitName": "6c5bbd7a42d1e8b4416fd8870fd60c67867b35c9",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "08/12/14 11:08 AM",
          "commitNameOld": "57cb43be50c81daad8da34d33a45f396d9c1c35b",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 0.03,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,18 @@\n-  List\u003cXAttr\u003e unprotectedRemoveXAttrs(final String src,\n-      final List\u003cXAttr\u003e toRemove) throws IOException {\n-    assert hasWriteLock();\n-    INodesInPath iip \u003d getINodesInPath4Write(normalizePath(src), true);\n-    INode inode \u003d resolveLastINode(src, iip);\n+  static List\u003cXAttr\u003e unprotectedRemoveXAttrs(\n+      FSDirectory fsd, final String src, final List\u003cXAttr\u003e toRemove)\n+      throws IOException {\n+    assert fsd.hasWriteLock();\n+    INodesInPath iip \u003d fsd.getINodesInPath4Write(\n+        FSDirectory.normalizePath(src), true);\n+    INode inode \u003d FSDirectory.resolveLastINode(src, iip);\n     int snapshotId \u003d iip.getLatestSnapshotId();\n     List\u003cXAttr\u003e existingXAttrs \u003d XAttrStorage.readINodeXAttrs(inode);\n     List\u003cXAttr\u003e removedXAttrs \u003d Lists.newArrayListWithCapacity(toRemove.size());\n     List\u003cXAttr\u003e newXAttrs \u003d filterINodeXAttrs(existingXAttrs, toRemove,\n-        removedXAttrs);\n+                                              removedXAttrs);\n     if (existingXAttrs.size() !\u003d newXAttrs.size()) {\n       XAttrStorage.updateINodeXAttrs(inode, newXAttrs, snapshotId);\n       return removedXAttrs;\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static List\u003cXAttr\u003e unprotectedRemoveXAttrs(\n      FSDirectory fsd, final String src, final List\u003cXAttr\u003e toRemove)\n      throws IOException {\n    assert fsd.hasWriteLock();\n    INodesInPath iip \u003d fsd.getINodesInPath4Write(\n        FSDirectory.normalizePath(src), true);\n    INode inode \u003d FSDirectory.resolveLastINode(src, iip);\n    int snapshotId \u003d iip.getLatestSnapshotId();\n    List\u003cXAttr\u003e existingXAttrs \u003d XAttrStorage.readINodeXAttrs(inode);\n    List\u003cXAttr\u003e removedXAttrs \u003d Lists.newArrayListWithCapacity(toRemove.size());\n    List\u003cXAttr\u003e newXAttrs \u003d filterINodeXAttrs(existingXAttrs, toRemove,\n                                              removedXAttrs);\n    if (existingXAttrs.size() !\u003d newXAttrs.size()) {\n      XAttrStorage.updateINodeXAttrs(inode, newXAttrs, snapshotId);\n      return removedXAttrs;\n    }\n    return null;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirXAttrOp.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirXAttrOp.java",
            "oldMethodName": "unprotectedRemoveXAttrs",
            "newMethodName": "unprotectedRemoveXAttrs"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-7486. Consolidate XAttr-related implementation into a single class. Contributed by Haohui Mai.\n",
          "commitDate": "08/12/14 11:52 AM",
          "commitName": "6c5bbd7a42d1e8b4416fd8870fd60c67867b35c9",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "08/12/14 11:08 AM",
          "commitNameOld": "57cb43be50c81daad8da34d33a45f396d9c1c35b",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 0.03,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,18 @@\n-  List\u003cXAttr\u003e unprotectedRemoveXAttrs(final String src,\n-      final List\u003cXAttr\u003e toRemove) throws IOException {\n-    assert hasWriteLock();\n-    INodesInPath iip \u003d getINodesInPath4Write(normalizePath(src), true);\n-    INode inode \u003d resolveLastINode(src, iip);\n+  static List\u003cXAttr\u003e unprotectedRemoveXAttrs(\n+      FSDirectory fsd, final String src, final List\u003cXAttr\u003e toRemove)\n+      throws IOException {\n+    assert fsd.hasWriteLock();\n+    INodesInPath iip \u003d fsd.getINodesInPath4Write(\n+        FSDirectory.normalizePath(src), true);\n+    INode inode \u003d FSDirectory.resolveLastINode(src, iip);\n     int snapshotId \u003d iip.getLatestSnapshotId();\n     List\u003cXAttr\u003e existingXAttrs \u003d XAttrStorage.readINodeXAttrs(inode);\n     List\u003cXAttr\u003e removedXAttrs \u003d Lists.newArrayListWithCapacity(toRemove.size());\n     List\u003cXAttr\u003e newXAttrs \u003d filterINodeXAttrs(existingXAttrs, toRemove,\n-        removedXAttrs);\n+                                              removedXAttrs);\n     if (existingXAttrs.size() !\u003d newXAttrs.size()) {\n       XAttrStorage.updateINodeXAttrs(inode, newXAttrs, snapshotId);\n       return removedXAttrs;\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static List\u003cXAttr\u003e unprotectedRemoveXAttrs(\n      FSDirectory fsd, final String src, final List\u003cXAttr\u003e toRemove)\n      throws IOException {\n    assert fsd.hasWriteLock();\n    INodesInPath iip \u003d fsd.getINodesInPath4Write(\n        FSDirectory.normalizePath(src), true);\n    INode inode \u003d FSDirectory.resolveLastINode(src, iip);\n    int snapshotId \u003d iip.getLatestSnapshotId();\n    List\u003cXAttr\u003e existingXAttrs \u003d XAttrStorage.readINodeXAttrs(inode);\n    List\u003cXAttr\u003e removedXAttrs \u003d Lists.newArrayListWithCapacity(toRemove.size());\n    List\u003cXAttr\u003e newXAttrs \u003d filterINodeXAttrs(existingXAttrs, toRemove,\n                                              removedXAttrs);\n    if (existingXAttrs.size() !\u003d newXAttrs.size()) {\n      XAttrStorage.updateINodeXAttrs(inode, newXAttrs, snapshotId);\n      return removedXAttrs;\n    }\n    return null;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirXAttrOp.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-7486. Consolidate XAttr-related implementation into a single class. Contributed by Haohui Mai.\n",
          "commitDate": "08/12/14 11:52 AM",
          "commitName": "6c5bbd7a42d1e8b4416fd8870fd60c67867b35c9",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "08/12/14 11:08 AM",
          "commitNameOld": "57cb43be50c81daad8da34d33a45f396d9c1c35b",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 0.03,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,18 @@\n-  List\u003cXAttr\u003e unprotectedRemoveXAttrs(final String src,\n-      final List\u003cXAttr\u003e toRemove) throws IOException {\n-    assert hasWriteLock();\n-    INodesInPath iip \u003d getINodesInPath4Write(normalizePath(src), true);\n-    INode inode \u003d resolveLastINode(src, iip);\n+  static List\u003cXAttr\u003e unprotectedRemoveXAttrs(\n+      FSDirectory fsd, final String src, final List\u003cXAttr\u003e toRemove)\n+      throws IOException {\n+    assert fsd.hasWriteLock();\n+    INodesInPath iip \u003d fsd.getINodesInPath4Write(\n+        FSDirectory.normalizePath(src), true);\n+    INode inode \u003d FSDirectory.resolveLastINode(src, iip);\n     int snapshotId \u003d iip.getLatestSnapshotId();\n     List\u003cXAttr\u003e existingXAttrs \u003d XAttrStorage.readINodeXAttrs(inode);\n     List\u003cXAttr\u003e removedXAttrs \u003d Lists.newArrayListWithCapacity(toRemove.size());\n     List\u003cXAttr\u003e newXAttrs \u003d filterINodeXAttrs(existingXAttrs, toRemove,\n-        removedXAttrs);\n+                                              removedXAttrs);\n     if (existingXAttrs.size() !\u003d newXAttrs.size()) {\n       XAttrStorage.updateINodeXAttrs(inode, newXAttrs, snapshotId);\n       return removedXAttrs;\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static List\u003cXAttr\u003e unprotectedRemoveXAttrs(\n      FSDirectory fsd, final String src, final List\u003cXAttr\u003e toRemove)\n      throws IOException {\n    assert fsd.hasWriteLock();\n    INodesInPath iip \u003d fsd.getINodesInPath4Write(\n        FSDirectory.normalizePath(src), true);\n    INode inode \u003d FSDirectory.resolveLastINode(src, iip);\n    int snapshotId \u003d iip.getLatestSnapshotId();\n    List\u003cXAttr\u003e existingXAttrs \u003d XAttrStorage.readINodeXAttrs(inode);\n    List\u003cXAttr\u003e removedXAttrs \u003d Lists.newArrayListWithCapacity(toRemove.size());\n    List\u003cXAttr\u003e newXAttrs \u003d filterINodeXAttrs(existingXAttrs, toRemove,\n                                              removedXAttrs);\n    if (existingXAttrs.size() !\u003d newXAttrs.size()) {\n      XAttrStorage.updateINodeXAttrs(inode, newXAttrs, snapshotId);\n      return removedXAttrs;\n    }\n    return null;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirXAttrOp.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-7486. Consolidate XAttr-related implementation into a single class. Contributed by Haohui Mai.\n",
          "commitDate": "08/12/14 11:52 AM",
          "commitName": "6c5bbd7a42d1e8b4416fd8870fd60c67867b35c9",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "08/12/14 11:08 AM",
          "commitNameOld": "57cb43be50c81daad8da34d33a45f396d9c1c35b",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 0.03,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,18 @@\n-  List\u003cXAttr\u003e unprotectedRemoveXAttrs(final String src,\n-      final List\u003cXAttr\u003e toRemove) throws IOException {\n-    assert hasWriteLock();\n-    INodesInPath iip \u003d getINodesInPath4Write(normalizePath(src), true);\n-    INode inode \u003d resolveLastINode(src, iip);\n+  static List\u003cXAttr\u003e unprotectedRemoveXAttrs(\n+      FSDirectory fsd, final String src, final List\u003cXAttr\u003e toRemove)\n+      throws IOException {\n+    assert fsd.hasWriteLock();\n+    INodesInPath iip \u003d fsd.getINodesInPath4Write(\n+        FSDirectory.normalizePath(src), true);\n+    INode inode \u003d FSDirectory.resolveLastINode(src, iip);\n     int snapshotId \u003d iip.getLatestSnapshotId();\n     List\u003cXAttr\u003e existingXAttrs \u003d XAttrStorage.readINodeXAttrs(inode);\n     List\u003cXAttr\u003e removedXAttrs \u003d Lists.newArrayListWithCapacity(toRemove.size());\n     List\u003cXAttr\u003e newXAttrs \u003d filterINodeXAttrs(existingXAttrs, toRemove,\n-        removedXAttrs);\n+                                              removedXAttrs);\n     if (existingXAttrs.size() !\u003d newXAttrs.size()) {\n       XAttrStorage.updateINodeXAttrs(inode, newXAttrs, snapshotId);\n       return removedXAttrs;\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static List\u003cXAttr\u003e unprotectedRemoveXAttrs(\n      FSDirectory fsd, final String src, final List\u003cXAttr\u003e toRemove)\n      throws IOException {\n    assert fsd.hasWriteLock();\n    INodesInPath iip \u003d fsd.getINodesInPath4Write(\n        FSDirectory.normalizePath(src), true);\n    INode inode \u003d FSDirectory.resolveLastINode(src, iip);\n    int snapshotId \u003d iip.getLatestSnapshotId();\n    List\u003cXAttr\u003e existingXAttrs \u003d XAttrStorage.readINodeXAttrs(inode);\n    List\u003cXAttr\u003e removedXAttrs \u003d Lists.newArrayListWithCapacity(toRemove.size());\n    List\u003cXAttr\u003e newXAttrs \u003d filterINodeXAttrs(existingXAttrs, toRemove,\n                                              removedXAttrs);\n    if (existingXAttrs.size() !\u003d newXAttrs.size()) {\n      XAttrStorage.updateINodeXAttrs(inode, newXAttrs, snapshotId);\n      return removedXAttrs;\n    }\n    return null;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirXAttrOp.java",
          "extendedDetails": {
            "oldValue": "[src-String(modifiers-final), toRemove-List\u003cXAttr\u003e(modifiers-final)]",
            "newValue": "[fsd-FSDirectory, src-String(modifiers-final), toRemove-List\u003cXAttr\u003e(modifiers-final)]"
          }
        }
      ]
    },
    "d417e49ce4db119cdeb01be526cdb07f24baf388": {
      "type": "Ymultichange(Yrename,Yparameterchange,Yreturntypechange,Ybodychange,Yparametermetachange)",
      "commitMessage": "HDFS-6492. Support create-time xattrs and atomically setting multiple xattrs. (wang)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1603971 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/06/14 10:37 AM",
      "commitName": "d417e49ce4db119cdeb01be526cdb07f24baf388",
      "commitAuthor": "Andrew Wang",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "HDFS-6492. Support create-time xattrs and atomically setting multiple xattrs. (wang)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1603971 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "19/06/14 10:37 AM",
          "commitName": "d417e49ce4db119cdeb01be526cdb07f24baf388",
          "commitAuthor": "Andrew Wang",
          "commitDateOld": "18/06/14 9:13 PM",
          "commitNameOld": "a4e0ff5e052abad498595ee198b49c5310c9ec0d",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 0.56,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,16 @@\n-  XAttr unprotectedRemoveXAttr(String src,\n-      XAttr xAttr) throws IOException {\n+  List\u003cXAttr\u003e unprotectedRemoveXAttrs(final String src,\n+      final List\u003cXAttr\u003e toRemove) throws IOException {\n     assert hasWriteLock();\n     INodesInPath iip \u003d getINodesInPath4Write(normalizePath(src), true);\n     INode inode \u003d resolveLastINode(src, iip);\n     int snapshotId \u003d iip.getLatestSnapshotId();\n     List\u003cXAttr\u003e existingXAttrs \u003d XAttrStorage.readINodeXAttrs(inode);\n-    List\u003cXAttr\u003e newXAttrs \u003d filterINodeXAttr(existingXAttrs, xAttr);\n+    List\u003cXAttr\u003e removedXAttrs \u003d Lists.newArrayListWithCapacity(toRemove.size());\n+    List\u003cXAttr\u003e newXAttrs \u003d filterINodeXAttrs(existingXAttrs, toRemove,\n+        removedXAttrs);\n     if (existingXAttrs.size() !\u003d newXAttrs.size()) {\n       XAttrStorage.updateINodeXAttrs(inode, newXAttrs, snapshotId);\n-      return xAttr;\n+      return removedXAttrs;\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  List\u003cXAttr\u003e unprotectedRemoveXAttrs(final String src,\n      final List\u003cXAttr\u003e toRemove) throws IOException {\n    assert hasWriteLock();\n    INodesInPath iip \u003d getINodesInPath4Write(normalizePath(src), true);\n    INode inode \u003d resolveLastINode(src, iip);\n    int snapshotId \u003d iip.getLatestSnapshotId();\n    List\u003cXAttr\u003e existingXAttrs \u003d XAttrStorage.readINodeXAttrs(inode);\n    List\u003cXAttr\u003e removedXAttrs \u003d Lists.newArrayListWithCapacity(toRemove.size());\n    List\u003cXAttr\u003e newXAttrs \u003d filterINodeXAttrs(existingXAttrs, toRemove,\n        removedXAttrs);\n    if (existingXAttrs.size() !\u003d newXAttrs.size()) {\n      XAttrStorage.updateINodeXAttrs(inode, newXAttrs, snapshotId);\n      return removedXAttrs;\n    }\n    return null;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
          "extendedDetails": {
            "oldValue": "unprotectedRemoveXAttr",
            "newValue": "unprotectedRemoveXAttrs"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-6492. Support create-time xattrs and atomically setting multiple xattrs. (wang)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1603971 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "19/06/14 10:37 AM",
          "commitName": "d417e49ce4db119cdeb01be526cdb07f24baf388",
          "commitAuthor": "Andrew Wang",
          "commitDateOld": "18/06/14 9:13 PM",
          "commitNameOld": "a4e0ff5e052abad498595ee198b49c5310c9ec0d",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 0.56,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,16 @@\n-  XAttr unprotectedRemoveXAttr(String src,\n-      XAttr xAttr) throws IOException {\n+  List\u003cXAttr\u003e unprotectedRemoveXAttrs(final String src,\n+      final List\u003cXAttr\u003e toRemove) throws IOException {\n     assert hasWriteLock();\n     INodesInPath iip \u003d getINodesInPath4Write(normalizePath(src), true);\n     INode inode \u003d resolveLastINode(src, iip);\n     int snapshotId \u003d iip.getLatestSnapshotId();\n     List\u003cXAttr\u003e existingXAttrs \u003d XAttrStorage.readINodeXAttrs(inode);\n-    List\u003cXAttr\u003e newXAttrs \u003d filterINodeXAttr(existingXAttrs, xAttr);\n+    List\u003cXAttr\u003e removedXAttrs \u003d Lists.newArrayListWithCapacity(toRemove.size());\n+    List\u003cXAttr\u003e newXAttrs \u003d filterINodeXAttrs(existingXAttrs, toRemove,\n+        removedXAttrs);\n     if (existingXAttrs.size() !\u003d newXAttrs.size()) {\n       XAttrStorage.updateINodeXAttrs(inode, newXAttrs, snapshotId);\n-      return xAttr;\n+      return removedXAttrs;\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  List\u003cXAttr\u003e unprotectedRemoveXAttrs(final String src,\n      final List\u003cXAttr\u003e toRemove) throws IOException {\n    assert hasWriteLock();\n    INodesInPath iip \u003d getINodesInPath4Write(normalizePath(src), true);\n    INode inode \u003d resolveLastINode(src, iip);\n    int snapshotId \u003d iip.getLatestSnapshotId();\n    List\u003cXAttr\u003e existingXAttrs \u003d XAttrStorage.readINodeXAttrs(inode);\n    List\u003cXAttr\u003e removedXAttrs \u003d Lists.newArrayListWithCapacity(toRemove.size());\n    List\u003cXAttr\u003e newXAttrs \u003d filterINodeXAttrs(existingXAttrs, toRemove,\n        removedXAttrs);\n    if (existingXAttrs.size() !\u003d newXAttrs.size()) {\n      XAttrStorage.updateINodeXAttrs(inode, newXAttrs, snapshotId);\n      return removedXAttrs;\n    }\n    return null;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
          "extendedDetails": {
            "oldValue": "[src-String, xAttr-XAttr]",
            "newValue": "[src-String(modifiers-final), toRemove-List\u003cXAttr\u003e(modifiers-final)]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-6492. Support create-time xattrs and atomically setting multiple xattrs. (wang)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1603971 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "19/06/14 10:37 AM",
          "commitName": "d417e49ce4db119cdeb01be526cdb07f24baf388",
          "commitAuthor": "Andrew Wang",
          "commitDateOld": "18/06/14 9:13 PM",
          "commitNameOld": "a4e0ff5e052abad498595ee198b49c5310c9ec0d",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 0.56,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,16 @@\n-  XAttr unprotectedRemoveXAttr(String src,\n-      XAttr xAttr) throws IOException {\n+  List\u003cXAttr\u003e unprotectedRemoveXAttrs(final String src,\n+      final List\u003cXAttr\u003e toRemove) throws IOException {\n     assert hasWriteLock();\n     INodesInPath iip \u003d getINodesInPath4Write(normalizePath(src), true);\n     INode inode \u003d resolveLastINode(src, iip);\n     int snapshotId \u003d iip.getLatestSnapshotId();\n     List\u003cXAttr\u003e existingXAttrs \u003d XAttrStorage.readINodeXAttrs(inode);\n-    List\u003cXAttr\u003e newXAttrs \u003d filterINodeXAttr(existingXAttrs, xAttr);\n+    List\u003cXAttr\u003e removedXAttrs \u003d Lists.newArrayListWithCapacity(toRemove.size());\n+    List\u003cXAttr\u003e newXAttrs \u003d filterINodeXAttrs(existingXAttrs, toRemove,\n+        removedXAttrs);\n     if (existingXAttrs.size() !\u003d newXAttrs.size()) {\n       XAttrStorage.updateINodeXAttrs(inode, newXAttrs, snapshotId);\n-      return xAttr;\n+      return removedXAttrs;\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  List\u003cXAttr\u003e unprotectedRemoveXAttrs(final String src,\n      final List\u003cXAttr\u003e toRemove) throws IOException {\n    assert hasWriteLock();\n    INodesInPath iip \u003d getINodesInPath4Write(normalizePath(src), true);\n    INode inode \u003d resolveLastINode(src, iip);\n    int snapshotId \u003d iip.getLatestSnapshotId();\n    List\u003cXAttr\u003e existingXAttrs \u003d XAttrStorage.readINodeXAttrs(inode);\n    List\u003cXAttr\u003e removedXAttrs \u003d Lists.newArrayListWithCapacity(toRemove.size());\n    List\u003cXAttr\u003e newXAttrs \u003d filterINodeXAttrs(existingXAttrs, toRemove,\n        removedXAttrs);\n    if (existingXAttrs.size() !\u003d newXAttrs.size()) {\n      XAttrStorage.updateINodeXAttrs(inode, newXAttrs, snapshotId);\n      return removedXAttrs;\n    }\n    return null;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
          "extendedDetails": {
            "oldValue": "XAttr",
            "newValue": "List\u003cXAttr\u003e"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-6492. Support create-time xattrs and atomically setting multiple xattrs. (wang)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1603971 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "19/06/14 10:37 AM",
          "commitName": "d417e49ce4db119cdeb01be526cdb07f24baf388",
          "commitAuthor": "Andrew Wang",
          "commitDateOld": "18/06/14 9:13 PM",
          "commitNameOld": "a4e0ff5e052abad498595ee198b49c5310c9ec0d",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 0.56,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,16 @@\n-  XAttr unprotectedRemoveXAttr(String src,\n-      XAttr xAttr) throws IOException {\n+  List\u003cXAttr\u003e unprotectedRemoveXAttrs(final String src,\n+      final List\u003cXAttr\u003e toRemove) throws IOException {\n     assert hasWriteLock();\n     INodesInPath iip \u003d getINodesInPath4Write(normalizePath(src), true);\n     INode inode \u003d resolveLastINode(src, iip);\n     int snapshotId \u003d iip.getLatestSnapshotId();\n     List\u003cXAttr\u003e existingXAttrs \u003d XAttrStorage.readINodeXAttrs(inode);\n-    List\u003cXAttr\u003e newXAttrs \u003d filterINodeXAttr(existingXAttrs, xAttr);\n+    List\u003cXAttr\u003e removedXAttrs \u003d Lists.newArrayListWithCapacity(toRemove.size());\n+    List\u003cXAttr\u003e newXAttrs \u003d filterINodeXAttrs(existingXAttrs, toRemove,\n+        removedXAttrs);\n     if (existingXAttrs.size() !\u003d newXAttrs.size()) {\n       XAttrStorage.updateINodeXAttrs(inode, newXAttrs, snapshotId);\n-      return xAttr;\n+      return removedXAttrs;\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  List\u003cXAttr\u003e unprotectedRemoveXAttrs(final String src,\n      final List\u003cXAttr\u003e toRemove) throws IOException {\n    assert hasWriteLock();\n    INodesInPath iip \u003d getINodesInPath4Write(normalizePath(src), true);\n    INode inode \u003d resolveLastINode(src, iip);\n    int snapshotId \u003d iip.getLatestSnapshotId();\n    List\u003cXAttr\u003e existingXAttrs \u003d XAttrStorage.readINodeXAttrs(inode);\n    List\u003cXAttr\u003e removedXAttrs \u003d Lists.newArrayListWithCapacity(toRemove.size());\n    List\u003cXAttr\u003e newXAttrs \u003d filterINodeXAttrs(existingXAttrs, toRemove,\n        removedXAttrs);\n    if (existingXAttrs.size() !\u003d newXAttrs.size()) {\n      XAttrStorage.updateINodeXAttrs(inode, newXAttrs, snapshotId);\n      return removedXAttrs;\n    }\n    return null;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparametermetachange",
          "commitMessage": "HDFS-6492. Support create-time xattrs and atomically setting multiple xattrs. (wang)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1603971 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "19/06/14 10:37 AM",
          "commitName": "d417e49ce4db119cdeb01be526cdb07f24baf388",
          "commitAuthor": "Andrew Wang",
          "commitDateOld": "18/06/14 9:13 PM",
          "commitNameOld": "a4e0ff5e052abad498595ee198b49c5310c9ec0d",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 0.56,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,16 @@\n-  XAttr unprotectedRemoveXAttr(String src,\n-      XAttr xAttr) throws IOException {\n+  List\u003cXAttr\u003e unprotectedRemoveXAttrs(final String src,\n+      final List\u003cXAttr\u003e toRemove) throws IOException {\n     assert hasWriteLock();\n     INodesInPath iip \u003d getINodesInPath4Write(normalizePath(src), true);\n     INode inode \u003d resolveLastINode(src, iip);\n     int snapshotId \u003d iip.getLatestSnapshotId();\n     List\u003cXAttr\u003e existingXAttrs \u003d XAttrStorage.readINodeXAttrs(inode);\n-    List\u003cXAttr\u003e newXAttrs \u003d filterINodeXAttr(existingXAttrs, xAttr);\n+    List\u003cXAttr\u003e removedXAttrs \u003d Lists.newArrayListWithCapacity(toRemove.size());\n+    List\u003cXAttr\u003e newXAttrs \u003d filterINodeXAttrs(existingXAttrs, toRemove,\n+        removedXAttrs);\n     if (existingXAttrs.size() !\u003d newXAttrs.size()) {\n       XAttrStorage.updateINodeXAttrs(inode, newXAttrs, snapshotId);\n-      return xAttr;\n+      return removedXAttrs;\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  List\u003cXAttr\u003e unprotectedRemoveXAttrs(final String src,\n      final List\u003cXAttr\u003e toRemove) throws IOException {\n    assert hasWriteLock();\n    INodesInPath iip \u003d getINodesInPath4Write(normalizePath(src), true);\n    INode inode \u003d resolveLastINode(src, iip);\n    int snapshotId \u003d iip.getLatestSnapshotId();\n    List\u003cXAttr\u003e existingXAttrs \u003d XAttrStorage.readINodeXAttrs(inode);\n    List\u003cXAttr\u003e removedXAttrs \u003d Lists.newArrayListWithCapacity(toRemove.size());\n    List\u003cXAttr\u003e newXAttrs \u003d filterINodeXAttrs(existingXAttrs, toRemove,\n        removedXAttrs);\n    if (existingXAttrs.size() !\u003d newXAttrs.size()) {\n      XAttrStorage.updateINodeXAttrs(inode, newXAttrs, snapshotId);\n      return removedXAttrs;\n    }\n    return null;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
          "extendedDetails": {
            "oldValue": "[src-String, xAttr-XAttr]",
            "newValue": "[src-String(modifiers-final), toRemove-List\u003cXAttr\u003e(modifiers-final)]"
          }
        }
      ]
    },
    "ac23a55547716df29b3e25c98a113399e184d9d1": {
      "type": "Yintroduced",
      "commitMessage": "Merge HDFS-2006 HDFS XAttrs branch to Trunk\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1596575 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/05/14 6:57 AM",
      "commitName": "ac23a55547716df29b3e25c98a113399e184d9d1",
      "commitAuthor": "Uma Maheswara Rao G",
      "diff": "@@ -0,0 +1,14 @@\n+  XAttr unprotectedRemoveXAttr(String src,\n+      XAttr xAttr) throws IOException {\n+    assert hasWriteLock();\n+    INodesInPath iip \u003d getINodesInPath4Write(normalizePath(src), true);\n+    INode inode \u003d resolveLastINode(src, iip);\n+    int snapshotId \u003d iip.getLatestSnapshotId();\n+    List\u003cXAttr\u003e existingXAttrs \u003d XAttrStorage.readINodeXAttrs(inode);\n+    List\u003cXAttr\u003e newXAttrs \u003d filterINodeXAttr(existingXAttrs, xAttr);\n+    if (existingXAttrs.size() !\u003d newXAttrs.size()) {\n+      XAttrStorage.updateINodeXAttrs(inode, newXAttrs, snapshotId);\n+      return xAttr;\n+    }\n+    return null;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  XAttr unprotectedRemoveXAttr(String src,\n      XAttr xAttr) throws IOException {\n    assert hasWriteLock();\n    INodesInPath iip \u003d getINodesInPath4Write(normalizePath(src), true);\n    INode inode \u003d resolveLastINode(src, iip);\n    int snapshotId \u003d iip.getLatestSnapshotId();\n    List\u003cXAttr\u003e existingXAttrs \u003d XAttrStorage.readINodeXAttrs(inode);\n    List\u003cXAttr\u003e newXAttrs \u003d filterINodeXAttr(existingXAttrs, xAttr);\n    if (existingXAttrs.size() !\u003d newXAttrs.size()) {\n      XAttrStorage.updateINodeXAttrs(inode, newXAttrs, snapshotId);\n      return xAttr;\n    }\n    return null;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java"
    }
  }
}