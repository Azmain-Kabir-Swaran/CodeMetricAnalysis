{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AliyunOSSInputStream.java",
  "functionName": "seek",
  "functionId": "seek___pos-long",
  "sourceFilePath": "hadoop-tools/hadoop-aliyun/src/main/java/org/apache/hadoop/fs/aliyun/oss/AliyunOSSInputStream.java",
  "functionStartLine": 291,
  "functionEndLine": 302,
  "numCommitsSeen": 8,
  "timeTaken": 1541,
  "changeHistory": [
    "9195a6e302028ed3921d1016ac2fa5754f06ebf0",
    "cd3e59a3dcc69f68711777d448da5228a55846b3",
    "4d84c814fcaf074022593c057d8f8dec4cd461fa",
    "a5d5342228050a778b20e95adf7885bdba39985d"
  ],
  "changeHistoryShort": {
    "9195a6e302028ed3921d1016ac2fa5754f06ebf0": "Ybodychange",
    "cd3e59a3dcc69f68711777d448da5228a55846b3": "Ybodychange",
    "4d84c814fcaf074022593c057d8f8dec4cd461fa": "Ymultichange(Ymodifierchange,Ybodychange)",
    "a5d5342228050a778b20e95adf7885bdba39985d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9195a6e302028ed3921d1016ac2fa5754f06ebf0": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15027. AliyunOSS: Support multi-thread pre-read to improve sequential read from Hadoop to Aliyun OSS performance. (Contributed by Jinhu Wu)\n",
      "commitDate": "16/01/18 11:55 PM",
      "commitName": "9195a6e302028ed3921d1016ac2fa5754f06ebf0",
      "commitAuthor": "Sammi Chen",
      "commitDateOld": "15/02/17 12:34 AM",
      "commitNameOld": "cd3e59a3dcc69f68711777d448da5228a55846b3",
      "commitAuthorOld": "Kai Zheng",
      "daysBetweenCommits": 335.97,
      "commitsBetweenForRepo": 2216,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,12 @@\n   public synchronized void seek(long pos) throws IOException {\n     checkNotClosed();\n     if (position \u003d\u003d pos) {\n       return;\n     } else if (pos \u003e position \u0026\u0026 pos \u003c position + partRemaining) {\n       long len \u003d pos - position;\n-      AliyunOSSUtils.skipFully(wrappedStream, len);\n       position \u003d pos;\n       partRemaining -\u003d len;\n     } else {\n       reopen(pos);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void seek(long pos) throws IOException {\n    checkNotClosed();\n    if (position \u003d\u003d pos) {\n      return;\n    } else if (pos \u003e position \u0026\u0026 pos \u003c position + partRemaining) {\n      long len \u003d pos - position;\n      position \u003d pos;\n      partRemaining -\u003d len;\n    } else {\n      reopen(pos);\n    }\n  }",
      "path": "hadoop-tools/hadoop-aliyun/src/main/java/org/apache/hadoop/fs/aliyun/oss/AliyunOSSInputStream.java",
      "extendedDetails": {}
    },
    "cd3e59a3dcc69f68711777d448da5228a55846b3": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14072. AliyunOSS: Failed to read from stream when seek beyond the download size. Contributed by Genmao Yu\n",
      "commitDate": "15/02/17 12:34 AM",
      "commitName": "cd3e59a3dcc69f68711777d448da5228a55846b3",
      "commitAuthor": "Kai Zheng",
      "commitDateOld": "13/10/16 10:33 PM",
      "commitNameOld": "d9f73f1b7cd893a7d88baa9bfd1b809a5dec9e59",
      "commitAuthorOld": "Mingliang Liu",
      "daysBetweenCommits": 124.13,
      "commitsBetweenForRepo": 763,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,13 @@\n   public synchronized void seek(long pos) throws IOException {\n     checkNotClosed();\n     if (position \u003d\u003d pos) {\n       return;\n     } else if (pos \u003e position \u0026\u0026 pos \u003c position + partRemaining) {\n-      AliyunOSSUtils.skipFully(wrappedStream, pos - position);\n+      long len \u003d pos - position;\n+      AliyunOSSUtils.skipFully(wrappedStream, len);\n       position \u003d pos;\n+      partRemaining -\u003d len;\n     } else {\n       reopen(pos);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void seek(long pos) throws IOException {\n    checkNotClosed();\n    if (position \u003d\u003d pos) {\n      return;\n    } else if (pos \u003e position \u0026\u0026 pos \u003c position + partRemaining) {\n      long len \u003d pos - position;\n      AliyunOSSUtils.skipFully(wrappedStream, len);\n      position \u003d pos;\n      partRemaining -\u003d len;\n    } else {\n      reopen(pos);\n    }\n  }",
      "path": "hadoop-tools/hadoop-aliyun/src/main/java/org/apache/hadoop/fs/aliyun/oss/AliyunOSSInputStream.java",
      "extendedDetails": {}
    },
    "4d84c814fcaf074022593c057d8f8dec4cd461fa": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "HADOOP-13491. Fix several warnings from findbugs. Contributed by Genmao Yu.\n",
      "commitDate": "06/09/16 8:15 PM",
      "commitName": "4d84c814fcaf074022593c057d8f8dec4cd461fa",
      "commitAuthor": "Mingfei",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "HADOOP-13491. Fix several warnings from findbugs. Contributed by Genmao Yu.\n",
          "commitDate": "06/09/16 8:15 PM",
          "commitName": "4d84c814fcaf074022593c057d8f8dec4cd461fa",
          "commitAuthor": "Mingfei",
          "commitDateOld": "06/09/16 8:15 PM",
          "commitNameOld": "a5d5342228050a778b20e95adf7885bdba39985d",
          "commitAuthorOld": "Kai Zheng",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,11 @@\n-  public void seek(long pos) throws IOException {\n+  public synchronized void seek(long pos) throws IOException {\n     checkNotClosed();\n     if (position \u003d\u003d pos) {\n       return;\n     } else if (pos \u003e position \u0026\u0026 pos \u003c position + partRemaining) {\n-      wrappedStream.skip(pos - position);\n+      AliyunOSSUtils.skipFully(wrappedStream, pos - position);\n       position \u003d pos;\n     } else {\n       reopen(pos);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void seek(long pos) throws IOException {\n    checkNotClosed();\n    if (position \u003d\u003d pos) {\n      return;\n    } else if (pos \u003e position \u0026\u0026 pos \u003c position + partRemaining) {\n      AliyunOSSUtils.skipFully(wrappedStream, pos - position);\n      position \u003d pos;\n    } else {\n      reopen(pos);\n    }\n  }",
          "path": "hadoop-tools/hadoop-aliyun/src/main/java/org/apache/hadoop/fs/aliyun/oss/AliyunOSSInputStream.java",
          "extendedDetails": {
            "oldValue": "[public]",
            "newValue": "[public, synchronized]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-13491. Fix several warnings from findbugs. Contributed by Genmao Yu.\n",
          "commitDate": "06/09/16 8:15 PM",
          "commitName": "4d84c814fcaf074022593c057d8f8dec4cd461fa",
          "commitAuthor": "Mingfei",
          "commitDateOld": "06/09/16 8:15 PM",
          "commitNameOld": "a5d5342228050a778b20e95adf7885bdba39985d",
          "commitAuthorOld": "Kai Zheng",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,11 @@\n-  public void seek(long pos) throws IOException {\n+  public synchronized void seek(long pos) throws IOException {\n     checkNotClosed();\n     if (position \u003d\u003d pos) {\n       return;\n     } else if (pos \u003e position \u0026\u0026 pos \u003c position + partRemaining) {\n-      wrappedStream.skip(pos - position);\n+      AliyunOSSUtils.skipFully(wrappedStream, pos - position);\n       position \u003d pos;\n     } else {\n       reopen(pos);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void seek(long pos) throws IOException {\n    checkNotClosed();\n    if (position \u003d\u003d pos) {\n      return;\n    } else if (pos \u003e position \u0026\u0026 pos \u003c position + partRemaining) {\n      AliyunOSSUtils.skipFully(wrappedStream, pos - position);\n      position \u003d pos;\n    } else {\n      reopen(pos);\n    }\n  }",
          "path": "hadoop-tools/hadoop-aliyun/src/main/java/org/apache/hadoop/fs/aliyun/oss/AliyunOSSInputStream.java",
          "extendedDetails": {}
        }
      ]
    },
    "a5d5342228050a778b20e95adf7885bdba39985d": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-12756. Incorporate Aliyun OSS file system implementation. Contributed by Mingfei Shi and Lin Zhou\n",
      "commitDate": "06/09/16 8:15 PM",
      "commitName": "a5d5342228050a778b20e95adf7885bdba39985d",
      "commitAuthor": "Kai Zheng",
      "diff": "@@ -0,0 +1,11 @@\n+  public void seek(long pos) throws IOException {\n+    checkNotClosed();\n+    if (position \u003d\u003d pos) {\n+      return;\n+    } else if (pos \u003e position \u0026\u0026 pos \u003c position + partRemaining) {\n+      wrappedStream.skip(pos - position);\n+      position \u003d pos;\n+    } else {\n+      reopen(pos);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void seek(long pos) throws IOException {\n    checkNotClosed();\n    if (position \u003d\u003d pos) {\n      return;\n    } else if (pos \u003e position \u0026\u0026 pos \u003c position + partRemaining) {\n      wrappedStream.skip(pos - position);\n      position \u003d pos;\n    } else {\n      reopen(pos);\n    }\n  }",
      "path": "hadoop-tools/hadoop-aliyun/src/main/java/org/apache/hadoop/fs/aliyun/oss/AliyunOSSInputStream.java"
    }
  }
}