{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSImageFormatPBSnapshot.java",
  "functionName": "serializeSnapshotSection",
  "functionId": "serializeSnapshotSection___out-OutputStream",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/FSImageFormatPBSnapshot.java",
  "functionStartLine": 435,
  "functionEndLine": 469,
  "numCommitsSeen": 34,
  "timeTaken": 2426,
  "changeHistory": [
    "76a621ffd2d66bf012a554f4400091a92a5b473e",
    "d03acc756094a332f98167426a39db8faf38f450",
    "5c978a43c3052cc1466b23653c354399186b4e10",
    "a2edb11b68ae01a44092cb14ac2717a6aad93305"
  ],
  "changeHistoryShort": {
    "76a621ffd2d66bf012a554f4400091a92a5b473e": "Ybodychange",
    "d03acc756094a332f98167426a39db8faf38f450": "Ybodychange",
    "5c978a43c3052cc1466b23653c354399186b4e10": "Ybodychange",
    "a2edb11b68ae01a44092cb14ac2717a6aad93305": "Yintroduced"
  },
  "changeHistoryDetails": {
    "76a621ffd2d66bf012a554f4400091a92a5b473e": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6609. Use DirectorySnapshottableFeature to represent a snapshottable directory. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1608631 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/07/14 5:08 PM",
      "commitName": "76a621ffd2d66bf012a554f4400091a92a5b473e",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "21/05/14 6:57 AM",
      "commitNameOld": "ac23a55547716df29b3e25c98a113399e184d9d1",
      "commitAuthorOld": "Uma Maheswara Rao G",
      "daysBetweenCommits": 47.42,
      "commitsBetweenForRepo": 284,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,35 @@\n     public void serializeSnapshotSection(OutputStream out) throws IOException {\n       SnapshotManager sm \u003d fsn.getSnapshotManager();\n       SnapshotSection.Builder b \u003d SnapshotSection.newBuilder()\n           .setSnapshotCounter(sm.getSnapshotCounter())\n           .setNumSnapshots(sm.getNumSnapshots());\n \n-      INodeDirectorySnapshottable[] snapshottables \u003d sm.getSnapshottableDirs();\n-      for (INodeDirectorySnapshottable sdir : snapshottables) {\n+      INodeDirectory[] snapshottables \u003d sm.getSnapshottableDirs();\n+      for (INodeDirectory sdir : snapshottables) {\n         b.addSnapshottableDir(sdir.getId());\n       }\n       b.build().writeDelimitedTo(out);\n       int i \u003d 0;\n-      for(INodeDirectorySnapshottable sdir : snapshottables) {\n-        for(Snapshot s : sdir.getSnapshotsByNames()) {\n+      for(INodeDirectory sdir : snapshottables) {\n+        for (Snapshot s : sdir.getDirectorySnapshottableFeature()\n+            .getSnapshotList()) {\n           Root sroot \u003d s.getRoot();\n           SnapshotSection.Snapshot.Builder sb \u003d SnapshotSection.Snapshot\n               .newBuilder().setSnapshotId(s.getId());\n           INodeSection.INodeDirectory.Builder db \u003d buildINodeDirectory(sroot,\n               parent.getSaverContext());\n           INodeSection.INode r \u003d INodeSection.INode.newBuilder()\n               .setId(sroot.getId())\n               .setType(INodeSection.INode.Type.DIRECTORY)\n               .setName(ByteString.copyFrom(sroot.getLocalNameBytes()))\n               .setDirectory(db).build();\n           sb.setRoot(r).build().writeDelimitedTo(out);\n           i++;\n           if (i % FSImageFormatProtobuf.Saver.CHECK_CANCEL_INTERVAL \u003d\u003d 0) {\n             context.checkCancelled();\n           }\n         }\n       }\n       Preconditions.checkState(i \u003d\u003d sm.getNumSnapshots());\n       parent.commitSection(headers, FSImageFormatProtobuf.SectionName.SNAPSHOT);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void serializeSnapshotSection(OutputStream out) throws IOException {\n      SnapshotManager sm \u003d fsn.getSnapshotManager();\n      SnapshotSection.Builder b \u003d SnapshotSection.newBuilder()\n          .setSnapshotCounter(sm.getSnapshotCounter())\n          .setNumSnapshots(sm.getNumSnapshots());\n\n      INodeDirectory[] snapshottables \u003d sm.getSnapshottableDirs();\n      for (INodeDirectory sdir : snapshottables) {\n        b.addSnapshottableDir(sdir.getId());\n      }\n      b.build().writeDelimitedTo(out);\n      int i \u003d 0;\n      for(INodeDirectory sdir : snapshottables) {\n        for (Snapshot s : sdir.getDirectorySnapshottableFeature()\n            .getSnapshotList()) {\n          Root sroot \u003d s.getRoot();\n          SnapshotSection.Snapshot.Builder sb \u003d SnapshotSection.Snapshot\n              .newBuilder().setSnapshotId(s.getId());\n          INodeSection.INodeDirectory.Builder db \u003d buildINodeDirectory(sroot,\n              parent.getSaverContext());\n          INodeSection.INode r \u003d INodeSection.INode.newBuilder()\n              .setId(sroot.getId())\n              .setType(INodeSection.INode.Type.DIRECTORY)\n              .setName(ByteString.copyFrom(sroot.getLocalNameBytes()))\n              .setDirectory(db).build();\n          sb.setRoot(r).build().writeDelimitedTo(out);\n          i++;\n          if (i % FSImageFormatProtobuf.Saver.CHECK_CANCEL_INTERVAL \u003d\u003d 0) {\n            context.checkCancelled();\n          }\n        }\n      }\n      Preconditions.checkState(i \u003d\u003d sm.getNumSnapshots());\n      parent.commitSection(headers, FSImageFormatProtobuf.SectionName.SNAPSHOT);\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/FSImageFormatPBSnapshot.java",
      "extendedDetails": {}
    },
    "d03acc756094a332f98167426a39db8faf38f450": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5914. Incorporate ACLs with the changes from HDFS-5698. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4685@1566991 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/02/14 10:25 PM",
      "commitName": "d03acc756094a332f98167426a39db8faf38f450",
      "commitAuthor": "Chris Nauroth",
      "commitDateOld": "10/02/14 10:00 PM",
      "commitNameOld": "3bf2f04baca59ee7c74f13193a569ed1d6f5458e",
      "commitAuthorOld": "",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,34 @@\n     public void serializeSnapshotSection(OutputStream out) throws IOException {\n       SnapshotManager sm \u003d fsn.getSnapshotManager();\n       SnapshotSection.Builder b \u003d SnapshotSection.newBuilder()\n           .setSnapshotCounter(sm.getSnapshotCounter())\n           .setNumSnapshots(sm.getNumSnapshots());\n \n       INodeDirectorySnapshottable[] snapshottables \u003d sm.getSnapshottableDirs();\n       for (INodeDirectorySnapshottable sdir : snapshottables) {\n         b.addSnapshottableDir(sdir.getId());\n       }\n       b.build().writeDelimitedTo(out);\n       int i \u003d 0;\n       for(INodeDirectorySnapshottable sdir : snapshottables) {\n         for(Snapshot s : sdir.getSnapshotsByNames()) {\n           Root sroot \u003d s.getRoot();\n           SnapshotSection.Snapshot.Builder sb \u003d SnapshotSection.Snapshot\n               .newBuilder().setSnapshotId(s.getId());\n           INodeSection.INodeDirectory.Builder db \u003d buildINodeDirectory(sroot,\n-              parent.getSaverContext().getStringMap());\n+              parent.getSaverContext());\n           INodeSection.INode r \u003d INodeSection.INode.newBuilder()\n               .setId(sroot.getId())\n               .setType(INodeSection.INode.Type.DIRECTORY)\n               .setName(ByteString.copyFrom(sroot.getLocalNameBytes()))\n               .setDirectory(db).build();\n           sb.setRoot(r).build().writeDelimitedTo(out);\n           i++;\n           if (i % FSImageFormatProtobuf.Saver.CHECK_CANCEL_INTERVAL \u003d\u003d 0) {\n             context.checkCancelled();\n           }\n         }\n       }\n       Preconditions.checkState(i \u003d\u003d sm.getNumSnapshots());\n       parent.commitSection(headers, FSImageFormatProtobuf.SectionName.SNAPSHOT);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void serializeSnapshotSection(OutputStream out) throws IOException {\n      SnapshotManager sm \u003d fsn.getSnapshotManager();\n      SnapshotSection.Builder b \u003d SnapshotSection.newBuilder()\n          .setSnapshotCounter(sm.getSnapshotCounter())\n          .setNumSnapshots(sm.getNumSnapshots());\n\n      INodeDirectorySnapshottable[] snapshottables \u003d sm.getSnapshottableDirs();\n      for (INodeDirectorySnapshottable sdir : snapshottables) {\n        b.addSnapshottableDir(sdir.getId());\n      }\n      b.build().writeDelimitedTo(out);\n      int i \u003d 0;\n      for(INodeDirectorySnapshottable sdir : snapshottables) {\n        for(Snapshot s : sdir.getSnapshotsByNames()) {\n          Root sroot \u003d s.getRoot();\n          SnapshotSection.Snapshot.Builder sb \u003d SnapshotSection.Snapshot\n              .newBuilder().setSnapshotId(s.getId());\n          INodeSection.INodeDirectory.Builder db \u003d buildINodeDirectory(sroot,\n              parent.getSaverContext());\n          INodeSection.INode r \u003d INodeSection.INode.newBuilder()\n              .setId(sroot.getId())\n              .setType(INodeSection.INode.Type.DIRECTORY)\n              .setName(ByteString.copyFrom(sroot.getLocalNameBytes()))\n              .setDirectory(db).build();\n          sb.setRoot(r).build().writeDelimitedTo(out);\n          i++;\n          if (i % FSImageFormatProtobuf.Saver.CHECK_CANCEL_INTERVAL \u003d\u003d 0) {\n            context.checkCancelled();\n          }\n        }\n      }\n      Preconditions.checkState(i \u003d\u003d sm.getNumSnapshots());\n      parent.commitSection(headers, FSImageFormatProtobuf.SectionName.SNAPSHOT);\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/FSImageFormatPBSnapshot.java",
      "extendedDetails": {}
    },
    "5c978a43c3052cc1466b23653c354399186b4e10": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5915. Refactor FSImageFormatProtobuf to simplify cross section reads. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1566824 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/02/14 3:13 PM",
      "commitName": "5c978a43c3052cc1466b23653c354399186b4e10",
      "commitAuthor": "Chris Nauroth",
      "commitDateOld": "09/02/14 11:18 AM",
      "commitNameOld": "a2edb11b68ae01a44092cb14ac2717a6aad93305",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 1.16,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,34 @@\n     public void serializeSnapshotSection(OutputStream out) throws IOException {\n       SnapshotManager sm \u003d fsn.getSnapshotManager();\n       SnapshotSection.Builder b \u003d SnapshotSection.newBuilder()\n           .setSnapshotCounter(sm.getSnapshotCounter())\n           .setNumSnapshots(sm.getNumSnapshots());\n \n       INodeDirectorySnapshottable[] snapshottables \u003d sm.getSnapshottableDirs();\n       for (INodeDirectorySnapshottable sdir : snapshottables) {\n         b.addSnapshottableDir(sdir.getId());\n       }\n       b.build().writeDelimitedTo(out);\n       int i \u003d 0;\n       for(INodeDirectorySnapshottable sdir : snapshottables) {\n         for(Snapshot s : sdir.getSnapshotsByNames()) {\n           Root sroot \u003d s.getRoot();\n           SnapshotSection.Snapshot.Builder sb \u003d SnapshotSection.Snapshot\n               .newBuilder().setSnapshotId(s.getId());\n           INodeSection.INodeDirectory.Builder db \u003d buildINodeDirectory(sroot,\n-              parent.getStringMap());\n+              parent.getSaverContext().getStringMap());\n           INodeSection.INode r \u003d INodeSection.INode.newBuilder()\n               .setId(sroot.getId())\n               .setType(INodeSection.INode.Type.DIRECTORY)\n               .setName(ByteString.copyFrom(sroot.getLocalNameBytes()))\n               .setDirectory(db).build();\n           sb.setRoot(r).build().writeDelimitedTo(out);\n           i++;\n           if (i % FSImageFormatProtobuf.Saver.CHECK_CANCEL_INTERVAL \u003d\u003d 0) {\n             context.checkCancelled();\n           }\n         }\n       }\n       Preconditions.checkState(i \u003d\u003d sm.getNumSnapshots());\n       parent.commitSection(headers, FSImageFormatProtobuf.SectionName.SNAPSHOT);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void serializeSnapshotSection(OutputStream out) throws IOException {\n      SnapshotManager sm \u003d fsn.getSnapshotManager();\n      SnapshotSection.Builder b \u003d SnapshotSection.newBuilder()\n          .setSnapshotCounter(sm.getSnapshotCounter())\n          .setNumSnapshots(sm.getNumSnapshots());\n\n      INodeDirectorySnapshottable[] snapshottables \u003d sm.getSnapshottableDirs();\n      for (INodeDirectorySnapshottable sdir : snapshottables) {\n        b.addSnapshottableDir(sdir.getId());\n      }\n      b.build().writeDelimitedTo(out);\n      int i \u003d 0;\n      for(INodeDirectorySnapshottable sdir : snapshottables) {\n        for(Snapshot s : sdir.getSnapshotsByNames()) {\n          Root sroot \u003d s.getRoot();\n          SnapshotSection.Snapshot.Builder sb \u003d SnapshotSection.Snapshot\n              .newBuilder().setSnapshotId(s.getId());\n          INodeSection.INodeDirectory.Builder db \u003d buildINodeDirectory(sroot,\n              parent.getSaverContext().getStringMap());\n          INodeSection.INode r \u003d INodeSection.INode.newBuilder()\n              .setId(sroot.getId())\n              .setType(INodeSection.INode.Type.DIRECTORY)\n              .setName(ByteString.copyFrom(sroot.getLocalNameBytes()))\n              .setDirectory(db).build();\n          sb.setRoot(r).build().writeDelimitedTo(out);\n          i++;\n          if (i % FSImageFormatProtobuf.Saver.CHECK_CANCEL_INTERVAL \u003d\u003d 0) {\n            context.checkCancelled();\n          }\n        }\n      }\n      Preconditions.checkState(i \u003d\u003d sm.getNumSnapshots());\n      parent.commitSection(headers, FSImageFormatProtobuf.SectionName.SNAPSHOT);\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/FSImageFormatPBSnapshot.java",
      "extendedDetails": {}
    },
    "a2edb11b68ae01a44092cb14ac2717a6aad93305": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-5698. Use protobuf to serialize / deserialize FSImage. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1566359 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/02/14 11:18 AM",
      "commitName": "a2edb11b68ae01a44092cb14ac2717a6aad93305",
      "commitAuthor": "Jing Zhao",
      "diff": "@@ -0,0 +1,34 @@\n+    public void serializeSnapshotSection(OutputStream out) throws IOException {\n+      SnapshotManager sm \u003d fsn.getSnapshotManager();\n+      SnapshotSection.Builder b \u003d SnapshotSection.newBuilder()\n+          .setSnapshotCounter(sm.getSnapshotCounter())\n+          .setNumSnapshots(sm.getNumSnapshots());\n+\n+      INodeDirectorySnapshottable[] snapshottables \u003d sm.getSnapshottableDirs();\n+      for (INodeDirectorySnapshottable sdir : snapshottables) {\n+        b.addSnapshottableDir(sdir.getId());\n+      }\n+      b.build().writeDelimitedTo(out);\n+      int i \u003d 0;\n+      for(INodeDirectorySnapshottable sdir : snapshottables) {\n+        for(Snapshot s : sdir.getSnapshotsByNames()) {\n+          Root sroot \u003d s.getRoot();\n+          SnapshotSection.Snapshot.Builder sb \u003d SnapshotSection.Snapshot\n+              .newBuilder().setSnapshotId(s.getId());\n+          INodeSection.INodeDirectory.Builder db \u003d buildINodeDirectory(sroot,\n+              parent.getStringMap());\n+          INodeSection.INode r \u003d INodeSection.INode.newBuilder()\n+              .setId(sroot.getId())\n+              .setType(INodeSection.INode.Type.DIRECTORY)\n+              .setName(ByteString.copyFrom(sroot.getLocalNameBytes()))\n+              .setDirectory(db).build();\n+          sb.setRoot(r).build().writeDelimitedTo(out);\n+          i++;\n+          if (i % FSImageFormatProtobuf.Saver.CHECK_CANCEL_INTERVAL \u003d\u003d 0) {\n+            context.checkCancelled();\n+          }\n+        }\n+      }\n+      Preconditions.checkState(i \u003d\u003d sm.getNumSnapshots());\n+      parent.commitSection(headers, FSImageFormatProtobuf.SectionName.SNAPSHOT);\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void serializeSnapshotSection(OutputStream out) throws IOException {\n      SnapshotManager sm \u003d fsn.getSnapshotManager();\n      SnapshotSection.Builder b \u003d SnapshotSection.newBuilder()\n          .setSnapshotCounter(sm.getSnapshotCounter())\n          .setNumSnapshots(sm.getNumSnapshots());\n\n      INodeDirectorySnapshottable[] snapshottables \u003d sm.getSnapshottableDirs();\n      for (INodeDirectorySnapshottable sdir : snapshottables) {\n        b.addSnapshottableDir(sdir.getId());\n      }\n      b.build().writeDelimitedTo(out);\n      int i \u003d 0;\n      for(INodeDirectorySnapshottable sdir : snapshottables) {\n        for(Snapshot s : sdir.getSnapshotsByNames()) {\n          Root sroot \u003d s.getRoot();\n          SnapshotSection.Snapshot.Builder sb \u003d SnapshotSection.Snapshot\n              .newBuilder().setSnapshotId(s.getId());\n          INodeSection.INodeDirectory.Builder db \u003d buildINodeDirectory(sroot,\n              parent.getStringMap());\n          INodeSection.INode r \u003d INodeSection.INode.newBuilder()\n              .setId(sroot.getId())\n              .setType(INodeSection.INode.Type.DIRECTORY)\n              .setName(ByteString.copyFrom(sroot.getLocalNameBytes()))\n              .setDirectory(db).build();\n          sb.setRoot(r).build().writeDelimitedTo(out);\n          i++;\n          if (i % FSImageFormatProtobuf.Saver.CHECK_CANCEL_INTERVAL \u003d\u003d 0) {\n            context.checkCancelled();\n          }\n        }\n      }\n      Preconditions.checkState(i \u003d\u003d sm.getNumSnapshots());\n      parent.commitSection(headers, FSImageFormatProtobuf.SectionName.SNAPSHOT);\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/FSImageFormatPBSnapshot.java"
    }
  }
}