{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JobConf.java",
  "functionName": "parseMaximumHeapSizeMB",
  "functionId": "parseMaximumHeapSizeMB___javaOpts-String",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/JobConf.java",
  "functionStartLine": 2175,
  "functionEndLine": 2205,
  "numCommitsSeen": 34,
  "timeTaken": 1540,
  "changeHistory": [
    "519092322dd1bf71984bef1393d8e082643408cd",
    "a003f71cacd35834a1abbc2ffb5446a1166caf73"
  ],
  "changeHistoryShort": {
    "519092322dd1bf71984bef1393d8e082643408cd": "Ybodychange",
    "a003f71cacd35834a1abbc2ffb5446a1166caf73": "Yintroduced"
  },
  "changeHistoryDetails": {
    "519092322dd1bf71984bef1393d8e082643408cd": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6343. JobConf.parseMaximumHeapSizeMB() fails to parse value greater than 2GB expressed in bytes. (Hao Xia via kasha)\n",
      "commitDate": "28/04/15 2:05 PM",
      "commitName": "519092322dd1bf71984bef1393d8e082643408cd",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "16/03/15 12:33 PM",
      "commitNameOld": "587d8be17bb9e71bad2881e24e7372d3e15125d3",
      "commitAuthorOld": "Harsh J",
      "daysBetweenCommits": 43.06,
      "commitsBetweenForRepo": 399,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,31 @@\n   public static int parseMaximumHeapSizeMB(String javaOpts) {\n     // Find the last matching -Xmx following word boundaries\n     Matcher m \u003d JAVA_OPTS_XMX_PATTERN.matcher(javaOpts);\n     if (m.matches()) {\n-      int size \u003d Integer.parseInt(m.group(1));\n+      long size \u003d Long.parseLong(m.group(1));\n       if (size \u003c\u003d 0) {\n         return -1;\n       }\n       if (m.group(2).isEmpty()) {\n         // -Xmx specified in bytes\n-        return size / (1024 * 1024);\n+        return (int) (size / (1024 * 1024));\n       }\n       char unit \u003d m.group(2).charAt(0);\n       switch (unit) {\n         case \u0027g\u0027:\n         case \u0027G\u0027:\n           // -Xmx specified in GB\n-          return size * 1024;\n+          return (int) (size * 1024);\n         case \u0027m\u0027:\n         case \u0027M\u0027:\n           // -Xmx specified in MB\n-          return size;\n+          return (int) size;\n         case \u0027k\u0027:\n         case \u0027K\u0027:\n           // -Xmx specified in KB\n-          return size / 1024;\n+          return (int) (size / 1024);\n       }\n     }\n     // -Xmx not specified\n     return -1;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static int parseMaximumHeapSizeMB(String javaOpts) {\n    // Find the last matching -Xmx following word boundaries\n    Matcher m \u003d JAVA_OPTS_XMX_PATTERN.matcher(javaOpts);\n    if (m.matches()) {\n      long size \u003d Long.parseLong(m.group(1));\n      if (size \u003c\u003d 0) {\n        return -1;\n      }\n      if (m.group(2).isEmpty()) {\n        // -Xmx specified in bytes\n        return (int) (size / (1024 * 1024));\n      }\n      char unit \u003d m.group(2).charAt(0);\n      switch (unit) {\n        case \u0027g\u0027:\n        case \u0027G\u0027:\n          // -Xmx specified in GB\n          return (int) (size * 1024);\n        case \u0027m\u0027:\n        case \u0027M\u0027:\n          // -Xmx specified in MB\n          return (int) size;\n        case \u0027k\u0027:\n        case \u0027K\u0027:\n          // -Xmx specified in KB\n          return (int) (size / 1024);\n      }\n    }\n    // -Xmx not specified\n    return -1;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/JobConf.java",
      "extendedDetails": {}
    },
    "a003f71cacd35834a1abbc2ffb5446a1166caf73": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-5785. Derive heap size or mapreduce.*.memory.mb automatically. (Gera Shegalov and Karthik Kambatla via gera)\n",
      "commitDate": "21/01/15 6:42 PM",
      "commitName": "a003f71cacd35834a1abbc2ffb5446a1166caf73",
      "commitAuthor": "Gera Shegalov",
      "diff": "@@ -0,0 +1,31 @@\n+  public static int parseMaximumHeapSizeMB(String javaOpts) {\n+    // Find the last matching -Xmx following word boundaries\n+    Matcher m \u003d JAVA_OPTS_XMX_PATTERN.matcher(javaOpts);\n+    if (m.matches()) {\n+      int size \u003d Integer.parseInt(m.group(1));\n+      if (size \u003c\u003d 0) {\n+        return -1;\n+      }\n+      if (m.group(2).isEmpty()) {\n+        // -Xmx specified in bytes\n+        return size / (1024 * 1024);\n+      }\n+      char unit \u003d m.group(2).charAt(0);\n+      switch (unit) {\n+        case \u0027g\u0027:\n+        case \u0027G\u0027:\n+          // -Xmx specified in GB\n+          return size * 1024;\n+        case \u0027m\u0027:\n+        case \u0027M\u0027:\n+          // -Xmx specified in MB\n+          return size;\n+        case \u0027k\u0027:\n+        case \u0027K\u0027:\n+          // -Xmx specified in KB\n+          return size / 1024;\n+      }\n+    }\n+    // -Xmx not specified\n+    return -1;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static int parseMaximumHeapSizeMB(String javaOpts) {\n    // Find the last matching -Xmx following word boundaries\n    Matcher m \u003d JAVA_OPTS_XMX_PATTERN.matcher(javaOpts);\n    if (m.matches()) {\n      int size \u003d Integer.parseInt(m.group(1));\n      if (size \u003c\u003d 0) {\n        return -1;\n      }\n      if (m.group(2).isEmpty()) {\n        // -Xmx specified in bytes\n        return size / (1024 * 1024);\n      }\n      char unit \u003d m.group(2).charAt(0);\n      switch (unit) {\n        case \u0027g\u0027:\n        case \u0027G\u0027:\n          // -Xmx specified in GB\n          return size * 1024;\n        case \u0027m\u0027:\n        case \u0027M\u0027:\n          // -Xmx specified in MB\n          return size;\n        case \u0027k\u0027:\n        case \u0027K\u0027:\n          // -Xmx specified in KB\n          return size / 1024;\n      }\n    }\n    // -Xmx not specified\n    return -1;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/JobConf.java"
    }
  }
}