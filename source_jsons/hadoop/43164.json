{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ServiceClient.java",
  "functionName": "actionUpgradeExpress",
  "functionId": "actionUpgradeExpress___service-Service",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java",
  "functionStartLine": 303,
  "functionEndLine": 327,
  "numCommitsSeen": 53,
  "timeTaken": 1479,
  "changeHistory": [
    "e557c6bd8de2811a561210f672f47b4d07a9d5c6"
  ],
  "changeHistoryShort": {
    "e557c6bd8de2811a561210f672f47b4d07a9d5c6": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e557c6bd8de2811a561210f672f47b4d07a9d5c6": {
      "type": "Yintroduced",
      "commitMessage": "YARN-8298.  Added express upgrade for YARN service.\n            Contributed by Chandni Singh\n",
      "commitDate": "21/08/18 4:49 PM",
      "commitName": "e557c6bd8de2811a561210f672f47b4d07a9d5c6",
      "commitAuthor": "Eric Yang",
      "diff": "@@ -0,0 +1,25 @@\n+  public int actionUpgradeExpress(Service service) throws YarnException,\n+      IOException {\n+    ApplicationReport appReport \u003d upgradePrecheck(service);\n+    ClientAMProtocol proxy \u003d createAMProxy(service.getName(), appReport);\n+    UpgradeServiceRequestProto.Builder requestBuilder \u003d\n+        UpgradeServiceRequestProto.newBuilder();\n+    requestBuilder.setVersion(service.getVersion());\n+    if (service.getState().equals(ServiceState.UPGRADING_AUTO_FINALIZE)) {\n+      requestBuilder.setAutoFinalize(true);\n+    }\n+    if (service.getState().equals(ServiceState.EXPRESS_UPGRADING)) {\n+      requestBuilder.setExpressUpgrade(true);\n+      requestBuilder.setAutoFinalize(true);\n+    }\n+    UpgradeServiceResponseProto responseProto \u003d proxy.upgrade(\n+        requestBuilder.build());\n+    if (responseProto.hasError()) {\n+      LOG.error(\"Service {} express upgrade to version {} failed because {}\",\n+          service.getName(), service.getVersion(), responseProto.getError());\n+      throw new YarnException(\"Failed to express upgrade service \" +\n+          service.getName() + \" to version \" + service.getVersion() +\n+          \" because \" + responseProto.getError());\n+    }\n+    return EXIT_SUCCESS;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public int actionUpgradeExpress(Service service) throws YarnException,\n      IOException {\n    ApplicationReport appReport \u003d upgradePrecheck(service);\n    ClientAMProtocol proxy \u003d createAMProxy(service.getName(), appReport);\n    UpgradeServiceRequestProto.Builder requestBuilder \u003d\n        UpgradeServiceRequestProto.newBuilder();\n    requestBuilder.setVersion(service.getVersion());\n    if (service.getState().equals(ServiceState.UPGRADING_AUTO_FINALIZE)) {\n      requestBuilder.setAutoFinalize(true);\n    }\n    if (service.getState().equals(ServiceState.EXPRESS_UPGRADING)) {\n      requestBuilder.setExpressUpgrade(true);\n      requestBuilder.setAutoFinalize(true);\n    }\n    UpgradeServiceResponseProto responseProto \u003d proxy.upgrade(\n        requestBuilder.build());\n    if (responseProto.hasError()) {\n      LOG.error(\"Service {} express upgrade to version {} failed because {}\",\n          service.getName(), service.getVersion(), responseProto.getError());\n      throw new YarnException(\"Failed to express upgrade service \" +\n          service.getName() + \" to version \" + service.getVersion() +\n          \" because \" + responseProto.getError());\n    }\n    return EXIT_SUCCESS;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/client/ServiceClient.java"
    }
  }
}