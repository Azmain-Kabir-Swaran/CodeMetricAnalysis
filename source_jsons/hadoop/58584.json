{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CommonNodeLabelsManager.java",
  "functionName": "createNodeIfNonExisted",
  "functionId": "createNodeIfNonExisted___nodeId-NodeId",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/nodelabels/CommonNodeLabelsManager.java",
  "functionStartLine": 1079,
  "functionEndLine": 1088,
  "numCommitsSeen": 42,
  "timeTaken": 1693,
  "changeHistory": [
    "5bd984691b3e3df5d8aac910295138996e7a5839",
    "abae63caf9c53b404f2f2db7d482555484eaeaf8",
    "db7f1653198b950e89567c06898d64f6b930a0ee"
  ],
  "changeHistoryShort": {
    "5bd984691b3e3df5d8aac910295138996e7a5839": "Ybodychange",
    "abae63caf9c53b404f2f2db7d482555484eaeaf8": "Ymultichange(Yexceptionschange,Ybodychange)",
    "db7f1653198b950e89567c06898d64f6b930a0ee": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5bd984691b3e3df5d8aac910295138996e7a5839": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3075. NodeLabelsManager implementation to retrieve label to node mapping (Varun Saxena via wangda)\n",
      "commitDate": "03/02/15 12:52 PM",
      "commitName": "5bd984691b3e3df5d8aac910295138996e7a5839",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "23/01/15 3:37 AM",
      "commitNameOld": "24aa462673d392fed859f8088acf9679ae62a129",
      "commitAuthorOld": "Tsuyoshi Ozawa",
      "daysBetweenCommits": 11.39,
      "commitsBetweenForRepo": 81,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,10 @@\n   protected void createNodeIfNonExisted(NodeId nodeId) throws IOException {\n     Host host \u003d nodeCollections.get(nodeId.getHost());\n     if (null \u003d\u003d host) {\n       throw new IOException(\"Should create host before creating node.\");\n     }\n     Node nm \u003d host.nms.get(nodeId);\n     if (null \u003d\u003d nm) {\n-      host.nms.put(nodeId, new Node());\n+      host.nms.put(nodeId, new Node(nodeId));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void createNodeIfNonExisted(NodeId nodeId) throws IOException {\n    Host host \u003d nodeCollections.get(nodeId.getHost());\n    if (null \u003d\u003d host) {\n      throw new IOException(\"Should create host before creating node.\");\n    }\n    Node nm \u003d host.nms.get(nodeId);\n    if (null \u003d\u003d nm) {\n      host.nms.put(nodeId, new Node(nodeId));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/nodelabels/CommonNodeLabelsManager.java",
      "extendedDetails": {}
    },
    "abae63caf9c53b404f2f2db7d482555484eaeaf8": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "YARN-2699. Fixed a bug in CommonNodeLabelsManager that caused tests to fail when using ephemeral ports on NodeIDs. Contributed by Wangda Tan.\n",
      "commitDate": "17/10/14 8:58 AM",
      "commitName": "abae63caf9c53b404f2f2db7d482555484eaeaf8",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "YARN-2699. Fixed a bug in CommonNodeLabelsManager that caused tests to fail when using ephemeral ports on NodeIDs. Contributed by Wangda Tan.\n",
          "commitDate": "17/10/14 8:58 AM",
          "commitName": "abae63caf9c53b404f2f2db7d482555484eaeaf8",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "15/10/14 6:47 PM",
          "commitNameOld": "b3056c266a628a65cf7ceb61b55ab3bd0a09baf2",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 1.59,
          "commitsBetweenForRepo": 11,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,10 @@\n-  protected void createNodeIfNonExisted(NodeId nodeId) {\n+  protected void createNodeIfNonExisted(NodeId nodeId) throws IOException {\n     Host host \u003d nodeCollections.get(nodeId.getHost());\n     if (null \u003d\u003d host) {\n-      host \u003d new Host();\n-      nodeCollections.put(nodeId.getHost(), host);\n+      throw new IOException(\"Should create host before creating node.\");\n     }\n-    if (nodeId.getPort() !\u003d WILDCARD_PORT) {\n-      Node nm \u003d host.nms.get(nodeId);\n-      if (null \u003d\u003d nm) {\n-        host.nms.put(nodeId, new Node());\n-      }\n+    Node nm \u003d host.nms.get(nodeId);\n+    if (null \u003d\u003d nm) {\n+      host.nms.put(nodeId, new Node());\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void createNodeIfNonExisted(NodeId nodeId) throws IOException {\n    Host host \u003d nodeCollections.get(nodeId.getHost());\n    if (null \u003d\u003d host) {\n      throw new IOException(\"Should create host before creating node.\");\n    }\n    Node nm \u003d host.nms.get(nodeId);\n    if (null \u003d\u003d nm) {\n      host.nms.put(nodeId, new Node());\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/nodelabels/CommonNodeLabelsManager.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[IOException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-2699. Fixed a bug in CommonNodeLabelsManager that caused tests to fail when using ephemeral ports on NodeIDs. Contributed by Wangda Tan.\n",
          "commitDate": "17/10/14 8:58 AM",
          "commitName": "abae63caf9c53b404f2f2db7d482555484eaeaf8",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "15/10/14 6:47 PM",
          "commitNameOld": "b3056c266a628a65cf7ceb61b55ab3bd0a09baf2",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 1.59,
          "commitsBetweenForRepo": 11,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,10 @@\n-  protected void createNodeIfNonExisted(NodeId nodeId) {\n+  protected void createNodeIfNonExisted(NodeId nodeId) throws IOException {\n     Host host \u003d nodeCollections.get(nodeId.getHost());\n     if (null \u003d\u003d host) {\n-      host \u003d new Host();\n-      nodeCollections.put(nodeId.getHost(), host);\n+      throw new IOException(\"Should create host before creating node.\");\n     }\n-    if (nodeId.getPort() !\u003d WILDCARD_PORT) {\n-      Node nm \u003d host.nms.get(nodeId);\n-      if (null \u003d\u003d nm) {\n-        host.nms.put(nodeId, new Node());\n-      }\n+    Node nm \u003d host.nms.get(nodeId);\n+    if (null \u003d\u003d nm) {\n+      host.nms.put(nodeId, new Node());\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void createNodeIfNonExisted(NodeId nodeId) throws IOException {\n    Host host \u003d nodeCollections.get(nodeId.getHost());\n    if (null \u003d\u003d host) {\n      throw new IOException(\"Should create host before creating node.\");\n    }\n    Node nm \u003d host.nms.get(nodeId);\n    if (null \u003d\u003d nm) {\n      host.nms.put(nodeId, new Node());\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/nodelabels/CommonNodeLabelsManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "db7f1653198b950e89567c06898d64f6b930a0ee": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2494. Added NodeLabels Manager internal API and implementation. Contributed by Wangda Tan.\n",
      "commitDate": "10/10/14 11:44 AM",
      "commitName": "db7f1653198b950e89567c06898d64f6b930a0ee",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,13 @@\n+  protected void createNodeIfNonExisted(NodeId nodeId) {\n+    Host host \u003d nodeCollections.get(nodeId.getHost());\n+    if (null \u003d\u003d host) {\n+      host \u003d new Host();\n+      nodeCollections.put(nodeId.getHost(), host);\n+    }\n+    if (nodeId.getPort() !\u003d WILDCARD_PORT) {\n+      Node nm \u003d host.nms.get(nodeId);\n+      if (null \u003d\u003d nm) {\n+        host.nms.put(nodeId, new Node());\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void createNodeIfNonExisted(NodeId nodeId) {\n    Host host \u003d nodeCollections.get(nodeId.getHost());\n    if (null \u003d\u003d host) {\n      host \u003d new Host();\n      nodeCollections.put(nodeId.getHost(), host);\n    }\n    if (nodeId.getPort() !\u003d WILDCARD_PORT) {\n      Node nm \u003d host.nms.get(nodeId);\n      if (null \u003d\u003d nm) {\n        host.nms.put(nodeId, new Node());\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/nodelabels/CommonNodeLabelsManager.java"
    }
  }
}