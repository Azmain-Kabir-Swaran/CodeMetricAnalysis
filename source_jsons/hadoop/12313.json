{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "VolumeScanner.java",
  "functionName": "markSuspectBlock",
  "functionId": "markSuspectBlock___block-ExtendedBlock",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/VolumeScanner.java",
  "functionStartLine": 701,
  "functionEndLine": 722,
  "numCommitsSeen": 20,
  "timeTaken": 1456,
  "changeHistory": [
    "43a1288fff5e323895fde66b9e3eb31a7412fcc2",
    "8bb9a5000ed06856abbad268c43ce1d5ad5bdd43"
  ],
  "changeHistoryShort": {
    "43a1288fff5e323895fde66b9e3eb31a7412fcc2": "Ybodychange",
    "8bb9a5000ed06856abbad268c43ce1d5ad5bdd43": "Yintroduced"
  },
  "changeHistoryDetails": {
    "43a1288fff5e323895fde66b9e3eb31a7412fcc2": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8659. Block scanner INFO message is spamming logs. Contributed by Yongjun Zhang.\n",
      "commitDate": "29/06/15 2:43 PM",
      "commitName": "43a1288fff5e323895fde66b9e3eb31a7412fcc2",
      "commitAuthor": "Yongjun Zhang",
      "commitDateOld": "13/02/15 2:35 PM",
      "commitNameOld": "8bb9a5000ed06856abbad268c43ce1d5ad5bdd43",
      "commitAuthorOld": "Colin Patrick Mccabe",
      "daysBetweenCommits": 135.96,
      "commitsBetweenForRepo": 1179,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n   public synchronized void markSuspectBlock(ExtendedBlock block) {\n     if (stopping) {\n-      LOG.info(\"{}: Not scheduling suspect block {} for \" +\n+      LOG.debug(\"{}: Not scheduling suspect block {} for \" +\n           \"rescanning, because this volume scanner is stopping.\", this, block);\n       return;\n     }\n     Boolean recent \u003d recentSuspectBlocks.getIfPresent(block);\n     if (recent !\u003d null) {\n-      LOG.info(\"{}: Not scheduling suspect block {} for \" +\n+      LOG.debug(\"{}: Not scheduling suspect block {} for \" +\n           \"rescanning, because we rescanned it recently.\", this, block);\n       return;\n     }\n     if (suspectBlocks.contains(block)) {\n-      LOG.info(\"{}: suspect block {} is already queued for \" +\n+      LOG.debug(\"{}: suspect block {} is already queued for \" +\n           \"rescanning.\", this, block);\n       return;\n     }\n     suspectBlocks.add(block);\n     recentSuspectBlocks.put(block, true);\n-    LOG.info(\"{}: Scheduling suspect block {} for rescanning.\", this, block);\n+    LOG.debug(\"{}: Scheduling suspect block {} for rescanning.\", this, block);\n     notify(); // wake scanner thread.\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void markSuspectBlock(ExtendedBlock block) {\n    if (stopping) {\n      LOG.debug(\"{}: Not scheduling suspect block {} for \" +\n          \"rescanning, because this volume scanner is stopping.\", this, block);\n      return;\n    }\n    Boolean recent \u003d recentSuspectBlocks.getIfPresent(block);\n    if (recent !\u003d null) {\n      LOG.debug(\"{}: Not scheduling suspect block {} for \" +\n          \"rescanning, because we rescanned it recently.\", this, block);\n      return;\n    }\n    if (suspectBlocks.contains(block)) {\n      LOG.debug(\"{}: suspect block {} is already queued for \" +\n          \"rescanning.\", this, block);\n      return;\n    }\n    suspectBlocks.add(block);\n    recentSuspectBlocks.put(block, true);\n    LOG.debug(\"{}: Scheduling suspect block {} for rescanning.\", this, block);\n    notify(); // wake scanner thread.\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/VolumeScanner.java",
      "extendedDetails": {}
    },
    "8bb9a5000ed06856abbad268c43ce1d5ad5bdd43": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-7686. Re-add rapid rescan of possibly corrupt block feature to the block scanner (cmccabe)\n",
      "commitDate": "13/02/15 2:35 PM",
      "commitName": "8bb9a5000ed06856abbad268c43ce1d5ad5bdd43",
      "commitAuthor": "Colin Patrick Mccabe",
      "diff": "@@ -0,0 +1,22 @@\n+  public synchronized void markSuspectBlock(ExtendedBlock block) {\n+    if (stopping) {\n+      LOG.info(\"{}: Not scheduling suspect block {} for \" +\n+          \"rescanning, because this volume scanner is stopping.\", this, block);\n+      return;\n+    }\n+    Boolean recent \u003d recentSuspectBlocks.getIfPresent(block);\n+    if (recent !\u003d null) {\n+      LOG.info(\"{}: Not scheduling suspect block {} for \" +\n+          \"rescanning, because we rescanned it recently.\", this, block);\n+      return;\n+    }\n+    if (suspectBlocks.contains(block)) {\n+      LOG.info(\"{}: suspect block {} is already queued for \" +\n+          \"rescanning.\", this, block);\n+      return;\n+    }\n+    suspectBlocks.add(block);\n+    recentSuspectBlocks.put(block, true);\n+    LOG.info(\"{}: Scheduling suspect block {} for rescanning.\", this, block);\n+    notify(); // wake scanner thread.\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void markSuspectBlock(ExtendedBlock block) {\n    if (stopping) {\n      LOG.info(\"{}: Not scheduling suspect block {} for \" +\n          \"rescanning, because this volume scanner is stopping.\", this, block);\n      return;\n    }\n    Boolean recent \u003d recentSuspectBlocks.getIfPresent(block);\n    if (recent !\u003d null) {\n      LOG.info(\"{}: Not scheduling suspect block {} for \" +\n          \"rescanning, because we rescanned it recently.\", this, block);\n      return;\n    }\n    if (suspectBlocks.contains(block)) {\n      LOG.info(\"{}: suspect block {} is already queued for \" +\n          \"rescanning.\", this, block);\n      return;\n    }\n    suspectBlocks.add(block);\n    recentSuspectBlocks.put(block, true);\n    LOG.info(\"{}: Scheduling suspect block {} for rescanning.\", this, block);\n    notify(); // wake scanner thread.\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/VolumeScanner.java"
    }
  }
}