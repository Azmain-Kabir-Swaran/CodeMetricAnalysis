{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "QJournalProtocolTranslatorPB.java",
  "functionName": "getEditLogManifest",
  "functionId": "getEditLogManifest___jid-String__nameServiceId-String__sinceTxId-long__inProgressOk-boolean",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/protocolPB/QJournalProtocolTranslatorPB.java",
  "functionStartLine": 268,
  "functionEndLine": 286,
  "numCommitsSeen": 56,
  "timeTaken": 3978,
  "changeHistory": [
    "8dd1eeb94fef59feaf19182dd8f1fcf1389c7f34",
    "512a18a8d92305a34f3037064ceabdc5aff1f8bf",
    "8172215e5601c3bb03fb5c0a0d88768142ea5087",
    "8c62c46046656c01b327c378e89d57b4bf37e16e",
    "74d4573a23db5586c6e47ff2277aa7c35237da34"
  ],
  "changeHistoryShort": {
    "8dd1eeb94fef59feaf19182dd8f1fcf1389c7f34": "Ymultichange(Yparameterchange,Ybodychange)",
    "512a18a8d92305a34f3037064ceabdc5aff1f8bf": "Ymultichange(Yparameterchange,Ybodychange)",
    "8172215e5601c3bb03fb5c0a0d88768142ea5087": "Ymultichange(Yparameterchange,Ybodychange)",
    "8c62c46046656c01b327c378e89d57b4bf37e16e": "Ymultichange(Yparameterchange,Ybodychange)",
    "74d4573a23db5586c6e47ff2277aa7c35237da34": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8dd1eeb94fef59feaf19182dd8f1fcf1389c7f34": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-12553. Add nameServiceId to QJournalProtocol. Contributed by Bharat Viswanadham\n",
      "commitDate": "13/10/17 2:22 PM",
      "commitName": "8dd1eeb94fef59feaf19182dd8f1fcf1389c7f34",
      "commitAuthor": "Arpit Agarwal",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-12553. Add nameServiceId to QJournalProtocol. Contributed by Bharat Viswanadham\n",
          "commitDate": "13/10/17 2:22 PM",
          "commitName": "8dd1eeb94fef59feaf19182dd8f1fcf1389c7f34",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "21/09/15 6:53 PM",
          "commitNameOld": "06022b8fdc40e50eaac63758246353058e8cfa6d",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 752.81,
          "commitsBetweenForRepo": 5072,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,19 @@\n-  public GetEditLogManifestResponseProto getEditLogManifest(String jid,\n-      long sinceTxId, boolean inProgressOk)\n-      throws IOException {\n+  public GetEditLogManifestResponseProto getEditLogManifest(\n+      String jid, String nameServiceId,\n+       long sinceTxId, boolean inProgressOk) throws IOException {\n     try {\n+      GetEditLogManifestRequestProto.Builder req;\n+      req \u003d GetEditLogManifestRequestProto.newBuilder()\n+          .setJid(convertJournalId(jid))\n+          .setSinceTxId(sinceTxId)\n+          .setInProgressOk(inProgressOk);\n+      if (nameServiceId !\u003dnull) {\n+        req.setNameServiceId(nameServiceId);\n+      }\n       return rpcProxy.getEditLogManifest(NULL_CONTROLLER,\n-          GetEditLogManifestRequestProto.newBuilder()\n-            .setJid(convertJournalId(jid))\n-            .setSinceTxId(sinceTxId)\n-            .setInProgressOk(inProgressOk)\n-            .build());\n+          req.build()\n+          );\n     } catch (ServiceException e) {\n       throw ProtobufHelper.getRemoteException(e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public GetEditLogManifestResponseProto getEditLogManifest(\n      String jid, String nameServiceId,\n       long sinceTxId, boolean inProgressOk) throws IOException {\n    try {\n      GetEditLogManifestRequestProto.Builder req;\n      req \u003d GetEditLogManifestRequestProto.newBuilder()\n          .setJid(convertJournalId(jid))\n          .setSinceTxId(sinceTxId)\n          .setInProgressOk(inProgressOk);\n      if (nameServiceId !\u003dnull) {\n        req.setNameServiceId(nameServiceId);\n      }\n      return rpcProxy.getEditLogManifest(NULL_CONTROLLER,\n          req.build()\n          );\n    } catch (ServiceException e) {\n      throw ProtobufHelper.getRemoteException(e);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/protocolPB/QJournalProtocolTranslatorPB.java",
          "extendedDetails": {
            "oldValue": "[jid-String, sinceTxId-long, inProgressOk-boolean]",
            "newValue": "[jid-String, nameServiceId-String, sinceTxId-long, inProgressOk-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-12553. Add nameServiceId to QJournalProtocol. Contributed by Bharat Viswanadham\n",
          "commitDate": "13/10/17 2:22 PM",
          "commitName": "8dd1eeb94fef59feaf19182dd8f1fcf1389c7f34",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "21/09/15 6:53 PM",
          "commitNameOld": "06022b8fdc40e50eaac63758246353058e8cfa6d",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 752.81,
          "commitsBetweenForRepo": 5072,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,19 @@\n-  public GetEditLogManifestResponseProto getEditLogManifest(String jid,\n-      long sinceTxId, boolean inProgressOk)\n-      throws IOException {\n+  public GetEditLogManifestResponseProto getEditLogManifest(\n+      String jid, String nameServiceId,\n+       long sinceTxId, boolean inProgressOk) throws IOException {\n     try {\n+      GetEditLogManifestRequestProto.Builder req;\n+      req \u003d GetEditLogManifestRequestProto.newBuilder()\n+          .setJid(convertJournalId(jid))\n+          .setSinceTxId(sinceTxId)\n+          .setInProgressOk(inProgressOk);\n+      if (nameServiceId !\u003dnull) {\n+        req.setNameServiceId(nameServiceId);\n+      }\n       return rpcProxy.getEditLogManifest(NULL_CONTROLLER,\n-          GetEditLogManifestRequestProto.newBuilder()\n-            .setJid(convertJournalId(jid))\n-            .setSinceTxId(sinceTxId)\n-            .setInProgressOk(inProgressOk)\n-            .build());\n+          req.build()\n+          );\n     } catch (ServiceException e) {\n       throw ProtobufHelper.getRemoteException(e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public GetEditLogManifestResponseProto getEditLogManifest(\n      String jid, String nameServiceId,\n       long sinceTxId, boolean inProgressOk) throws IOException {\n    try {\n      GetEditLogManifestRequestProto.Builder req;\n      req \u003d GetEditLogManifestRequestProto.newBuilder()\n          .setJid(convertJournalId(jid))\n          .setSinceTxId(sinceTxId)\n          .setInProgressOk(inProgressOk);\n      if (nameServiceId !\u003dnull) {\n        req.setNameServiceId(nameServiceId);\n      }\n      return rpcProxy.getEditLogManifest(NULL_CONTROLLER,\n          req.build()\n          );\n    } catch (ServiceException e) {\n      throw ProtobufHelper.getRemoteException(e);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/protocolPB/QJournalProtocolTranslatorPB.java",
          "extendedDetails": {}
        }
      ]
    },
    "512a18a8d92305a34f3037064ceabdc5aff1f8bf": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-5074. Allow starting up from an fsimage checkpoint in the middle of a segment. Contributed by Todd Lipcon.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1550016 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/12/13 5:32 PM",
      "commitName": "512a18a8d92305a34f3037064ceabdc5aff1f8bf",
      "commitAuthor": "Aaron Myers",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-5074. Allow starting up from an fsimage checkpoint in the middle of a segment. Contributed by Todd Lipcon.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1550016 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "10/12/13 5:32 PM",
          "commitName": "512a18a8d92305a34f3037064ceabdc5aff1f8bf",
          "commitAuthor": "Aaron Myers",
          "commitDateOld": "15/08/13 10:19 AM",
          "commitNameOld": "8172215e5601c3bb03fb5c0a0d88768142ea5087",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 117.34,
          "commitsBetweenForRepo": 711,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,14 @@\n   public GetEditLogManifestResponseProto getEditLogManifest(String jid,\n-      long sinceTxId, boolean forReading, boolean inProgressOk)\n+      long sinceTxId, boolean inProgressOk)\n       throws IOException {\n     try {\n       return rpcProxy.getEditLogManifest(NULL_CONTROLLER,\n           GetEditLogManifestRequestProto.newBuilder()\n             .setJid(convertJournalId(jid))\n             .setSinceTxId(sinceTxId)\n-            .setForReading(forReading)\n             .setInProgressOk(inProgressOk)\n             .build());\n     } catch (ServiceException e) {\n       throw ProtobufHelper.getRemoteException(e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public GetEditLogManifestResponseProto getEditLogManifest(String jid,\n      long sinceTxId, boolean inProgressOk)\n      throws IOException {\n    try {\n      return rpcProxy.getEditLogManifest(NULL_CONTROLLER,\n          GetEditLogManifestRequestProto.newBuilder()\n            .setJid(convertJournalId(jid))\n            .setSinceTxId(sinceTxId)\n            .setInProgressOk(inProgressOk)\n            .build());\n    } catch (ServiceException e) {\n      throw ProtobufHelper.getRemoteException(e);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/protocolPB/QJournalProtocolTranslatorPB.java",
          "extendedDetails": {
            "oldValue": "[jid-String, sinceTxId-long, forReading-boolean, inProgressOk-boolean]",
            "newValue": "[jid-String, sinceTxId-long, inProgressOk-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-5074. Allow starting up from an fsimage checkpoint in the middle of a segment. Contributed by Todd Lipcon.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1550016 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "10/12/13 5:32 PM",
          "commitName": "512a18a8d92305a34f3037064ceabdc5aff1f8bf",
          "commitAuthor": "Aaron Myers",
          "commitDateOld": "15/08/13 10:19 AM",
          "commitNameOld": "8172215e5601c3bb03fb5c0a0d88768142ea5087",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 117.34,
          "commitsBetweenForRepo": 711,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,14 @@\n   public GetEditLogManifestResponseProto getEditLogManifest(String jid,\n-      long sinceTxId, boolean forReading, boolean inProgressOk)\n+      long sinceTxId, boolean inProgressOk)\n       throws IOException {\n     try {\n       return rpcProxy.getEditLogManifest(NULL_CONTROLLER,\n           GetEditLogManifestRequestProto.newBuilder()\n             .setJid(convertJournalId(jid))\n             .setSinceTxId(sinceTxId)\n-            .setForReading(forReading)\n             .setInProgressOk(inProgressOk)\n             .build());\n     } catch (ServiceException e) {\n       throw ProtobufHelper.getRemoteException(e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public GetEditLogManifestResponseProto getEditLogManifest(String jid,\n      long sinceTxId, boolean inProgressOk)\n      throws IOException {\n    try {\n      return rpcProxy.getEditLogManifest(NULL_CONTROLLER,\n          GetEditLogManifestRequestProto.newBuilder()\n            .setJid(convertJournalId(jid))\n            .setSinceTxId(sinceTxId)\n            .setInProgressOk(inProgressOk)\n            .build());\n    } catch (ServiceException e) {\n      throw ProtobufHelper.getRemoteException(e);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/protocolPB/QJournalProtocolTranslatorPB.java",
          "extendedDetails": {}
        }
      ]
    },
    "8172215e5601c3bb03fb5c0a0d88768142ea5087": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-5080. BootstrapStandby not working with QJM when the existing NN is active. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1514386 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "15/08/13 10:19 AM",
      "commitName": "8172215e5601c3bb03fb5c0a0d88768142ea5087",
      "commitAuthor": "Jing Zhao",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-5080. BootstrapStandby not working with QJM when the existing NN is active. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1514386 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "15/08/13 10:19 AM",
          "commitName": "8172215e5601c3bb03fb5c0a0d88768142ea5087",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "22/05/13 12:37 PM",
          "commitNameOld": "8c62c46046656c01b327c378e89d57b4bf37e16e",
          "commitAuthorOld": "Aaron Myers",
          "daysBetweenCommits": 84.9,
          "commitsBetweenForRepo": 539,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,15 @@\n   public GetEditLogManifestResponseProto getEditLogManifest(String jid,\n-      long sinceTxId, boolean forReading) throws IOException {\n+      long sinceTxId, boolean forReading, boolean inProgressOk)\n+      throws IOException {\n     try {\n       return rpcProxy.getEditLogManifest(NULL_CONTROLLER,\n           GetEditLogManifestRequestProto.newBuilder()\n             .setJid(convertJournalId(jid))\n             .setSinceTxId(sinceTxId)\n             .setForReading(forReading)\n+            .setInProgressOk(inProgressOk)\n             .build());\n     } catch (ServiceException e) {\n       throw ProtobufHelper.getRemoteException(e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public GetEditLogManifestResponseProto getEditLogManifest(String jid,\n      long sinceTxId, boolean forReading, boolean inProgressOk)\n      throws IOException {\n    try {\n      return rpcProxy.getEditLogManifest(NULL_CONTROLLER,\n          GetEditLogManifestRequestProto.newBuilder()\n            .setJid(convertJournalId(jid))\n            .setSinceTxId(sinceTxId)\n            .setForReading(forReading)\n            .setInProgressOk(inProgressOk)\n            .build());\n    } catch (ServiceException e) {\n      throw ProtobufHelper.getRemoteException(e);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/protocolPB/QJournalProtocolTranslatorPB.java",
          "extendedDetails": {
            "oldValue": "[jid-String, sinceTxId-long, forReading-boolean]",
            "newValue": "[jid-String, sinceTxId-long, forReading-boolean, inProgressOk-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-5080. BootstrapStandby not working with QJM when the existing NN is active. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1514386 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "15/08/13 10:19 AM",
          "commitName": "8172215e5601c3bb03fb5c0a0d88768142ea5087",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "22/05/13 12:37 PM",
          "commitNameOld": "8c62c46046656c01b327c378e89d57b4bf37e16e",
          "commitAuthorOld": "Aaron Myers",
          "daysBetweenCommits": 84.9,
          "commitsBetweenForRepo": 539,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,15 @@\n   public GetEditLogManifestResponseProto getEditLogManifest(String jid,\n-      long sinceTxId, boolean forReading) throws IOException {\n+      long sinceTxId, boolean forReading, boolean inProgressOk)\n+      throws IOException {\n     try {\n       return rpcProxy.getEditLogManifest(NULL_CONTROLLER,\n           GetEditLogManifestRequestProto.newBuilder()\n             .setJid(convertJournalId(jid))\n             .setSinceTxId(sinceTxId)\n             .setForReading(forReading)\n+            .setInProgressOk(inProgressOk)\n             .build());\n     } catch (ServiceException e) {\n       throw ProtobufHelper.getRemoteException(e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public GetEditLogManifestResponseProto getEditLogManifest(String jid,\n      long sinceTxId, boolean forReading, boolean inProgressOk)\n      throws IOException {\n    try {\n      return rpcProxy.getEditLogManifest(NULL_CONTROLLER,\n          GetEditLogManifestRequestProto.newBuilder()\n            .setJid(convertJournalId(jid))\n            .setSinceTxId(sinceTxId)\n            .setForReading(forReading)\n            .setInProgressOk(inProgressOk)\n            .build());\n    } catch (ServiceException e) {\n      throw ProtobufHelper.getRemoteException(e);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/protocolPB/QJournalProtocolTranslatorPB.java",
          "extendedDetails": {}
        }
      ]
    },
    "8c62c46046656c01b327c378e89d57b4bf37e16e": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-4298. StorageRetentionManager spews warnings when used with QJM. Contributed by Aaron T. Myers.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1485371 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/05/13 12:37 PM",
      "commitName": "8c62c46046656c01b327c378e89d57b4bf37e16e",
      "commitAuthor": "Aaron Myers",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-4298. StorageRetentionManager spews warnings when used with QJM. Contributed by Aaron T. Myers.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1485371 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/05/13 12:37 PM",
          "commitName": "8c62c46046656c01b327c378e89d57b4bf37e16e",
          "commitAuthor": "Aaron Myers",
          "commitDateOld": "10/09/12 11:33 PM",
          "commitNameOld": "a93ba1648ac78ae0ad9e7c75c35e8594d8c48af4",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 253.54,
          "commitsBetweenForRepo": 1400,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,13 @@\n   public GetEditLogManifestResponseProto getEditLogManifest(String jid,\n-      long sinceTxId) throws IOException {\n+      long sinceTxId, boolean forReading) throws IOException {\n     try {\n       return rpcProxy.getEditLogManifest(NULL_CONTROLLER,\n           GetEditLogManifestRequestProto.newBuilder()\n             .setJid(convertJournalId(jid))\n             .setSinceTxId(sinceTxId)\n+            .setForReading(forReading)\n             .build());\n     } catch (ServiceException e) {\n       throw ProtobufHelper.getRemoteException(e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public GetEditLogManifestResponseProto getEditLogManifest(String jid,\n      long sinceTxId, boolean forReading) throws IOException {\n    try {\n      return rpcProxy.getEditLogManifest(NULL_CONTROLLER,\n          GetEditLogManifestRequestProto.newBuilder()\n            .setJid(convertJournalId(jid))\n            .setSinceTxId(sinceTxId)\n            .setForReading(forReading)\n            .build());\n    } catch (ServiceException e) {\n      throw ProtobufHelper.getRemoteException(e);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/protocolPB/QJournalProtocolTranslatorPB.java",
          "extendedDetails": {
            "oldValue": "[jid-String, sinceTxId-long]",
            "newValue": "[jid-String, sinceTxId-long, forReading-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-4298. StorageRetentionManager spews warnings when used with QJM. Contributed by Aaron T. Myers.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1485371 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/05/13 12:37 PM",
          "commitName": "8c62c46046656c01b327c378e89d57b4bf37e16e",
          "commitAuthor": "Aaron Myers",
          "commitDateOld": "10/09/12 11:33 PM",
          "commitNameOld": "a93ba1648ac78ae0ad9e7c75c35e8594d8c48af4",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 253.54,
          "commitsBetweenForRepo": 1400,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,13 @@\n   public GetEditLogManifestResponseProto getEditLogManifest(String jid,\n-      long sinceTxId) throws IOException {\n+      long sinceTxId, boolean forReading) throws IOException {\n     try {\n       return rpcProxy.getEditLogManifest(NULL_CONTROLLER,\n           GetEditLogManifestRequestProto.newBuilder()\n             .setJid(convertJournalId(jid))\n             .setSinceTxId(sinceTxId)\n+            .setForReading(forReading)\n             .build());\n     } catch (ServiceException e) {\n       throw ProtobufHelper.getRemoteException(e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public GetEditLogManifestResponseProto getEditLogManifest(String jid,\n      long sinceTxId, boolean forReading) throws IOException {\n    try {\n      return rpcProxy.getEditLogManifest(NULL_CONTROLLER,\n          GetEditLogManifestRequestProto.newBuilder()\n            .setJid(convertJournalId(jid))\n            .setSinceTxId(sinceTxId)\n            .setForReading(forReading)\n            .build());\n    } catch (ServiceException e) {\n      throw ProtobufHelper.getRemoteException(e);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/protocolPB/QJournalProtocolTranslatorPB.java",
          "extendedDetails": {}
        }
      ]
    },
    "74d4573a23db5586c6e47ff2277aa7c35237da34": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-3077. Quorum-based protocol for reading and writing edit logs. Contributed by Todd Lipcon based on initial work from Brandon Li and Hari Mankude.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3077@1363596 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/07/12 5:25 PM",
      "commitName": "74d4573a23db5586c6e47ff2277aa7c35237da34",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,12 @@\n+  public GetEditLogManifestResponseProto getEditLogManifest(String jid,\n+      long sinceTxId) throws IOException {\n+    try {\n+      return rpcProxy.getEditLogManifest(NULL_CONTROLLER,\n+          GetEditLogManifestRequestProto.newBuilder()\n+            .setJid(convertJournalId(jid))\n+            .setSinceTxId(sinceTxId)\n+            .build());\n+    } catch (ServiceException e) {\n+      throw ProtobufHelper.getRemoteException(e);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public GetEditLogManifestResponseProto getEditLogManifest(String jid,\n      long sinceTxId) throws IOException {\n    try {\n      return rpcProxy.getEditLogManifest(NULL_CONTROLLER,\n          GetEditLogManifestRequestProto.newBuilder()\n            .setJid(convertJournalId(jid))\n            .setSinceTxId(sinceTxId)\n            .build());\n    } catch (ServiceException e) {\n      throw ProtobufHelper.getRemoteException(e);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/protocolPB/QJournalProtocolTranslatorPB.java"
    }
  }
}