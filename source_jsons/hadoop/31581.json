{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HBaseStorageMonitor.java",
  "functionName": "initialize",
  "functionId": "initialize___conf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseStorageMonitor.java",
  "functionStartLine": 51,
  "functionEndLine": 73,
  "numCommitsSeen": 1,
  "timeTaken": 527,
  "changeHistory": [
    "cda9f3374573f0cb5ae4f26ba3fbc77aae45ec58"
  ],
  "changeHistoryShort": {
    "cda9f3374573f0cb5ae4f26ba3fbc77aae45ec58": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cda9f3374573f0cb5ae4f26ba3fbc77aae45ec58": {
      "type": "Yintroduced",
      "commitMessage": "YARN-8499 ATSv2 Generalize TimelineStorageMonitor.\n           Contributed by Prabhu Joseph\n",
      "commitDate": "14/06/19 3:59 PM",
      "commitName": "cda9f3374573f0cb5ae4f26ba3fbc77aae45ec58",
      "commitAuthor": "Eric Yang",
      "diff": "@@ -0,0 +1,23 @@\n+  private void initialize(Configuration conf) throws  Exception {\n+    monitorHBaseConf \u003d HBaseTimelineStorageUtils.\n+        getTimelineServiceHBaseConf(conf);\n+    monitorHBaseConf.setInt(\"hbase.client.retries.number\", 3);\n+    monitorHBaseConf.setLong(\"hbase.client.pause\", 1000);\n+    long monitorInterval \u003d conf.getLong(\n+        YarnConfiguration.TIMELINE_SERVICE_READER_STORAGE_MONITOR_INTERVAL_MS,\n+        YarnConfiguration.DEFAULT_TIMELINE_SERVICE_STORAGE_MONITOR_INTERVAL_MS\n+    );\n+    monitorHBaseConf.setLong(\"hbase.rpc.timeout\", monitorInterval);\n+    monitorHBaseConf.setLong(\"hbase.client.scanner.timeout.period\",\n+        monitorInterval);\n+    monitorHBaseConf.setInt(\"zookeeper.recovery.retry\", 1);\n+    monitorConn \u003d ConnectionFactory.createConnection(monitorHBaseConf);\n+\n+    String clusterId \u003d conf.get(YarnConfiguration.RM_CLUSTER_ID,\n+        YarnConfiguration.DEFAULT_RM_CLUSTER_ID);\n+    TimelineReaderContext monitorContext \u003d\n+        new TimelineReaderContext(clusterId, null, null, null, null,\n+        TimelineEntityType.YARN_FLOW_ACTIVITY.toString(), null, null);\n+    reader \u003d TimelineEntityReaderFactory.createMultipleEntitiesReader(\n+        monitorContext, MONITOR_FILTERS, DATA_TO_RETRIEVE);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void initialize(Configuration conf) throws  Exception {\n    monitorHBaseConf \u003d HBaseTimelineStorageUtils.\n        getTimelineServiceHBaseConf(conf);\n    monitorHBaseConf.setInt(\"hbase.client.retries.number\", 3);\n    monitorHBaseConf.setLong(\"hbase.client.pause\", 1000);\n    long monitorInterval \u003d conf.getLong(\n        YarnConfiguration.TIMELINE_SERVICE_READER_STORAGE_MONITOR_INTERVAL_MS,\n        YarnConfiguration.DEFAULT_TIMELINE_SERVICE_STORAGE_MONITOR_INTERVAL_MS\n    );\n    monitorHBaseConf.setLong(\"hbase.rpc.timeout\", monitorInterval);\n    monitorHBaseConf.setLong(\"hbase.client.scanner.timeout.period\",\n        monitorInterval);\n    monitorHBaseConf.setInt(\"zookeeper.recovery.retry\", 1);\n    monitorConn \u003d ConnectionFactory.createConnection(monitorHBaseConf);\n\n    String clusterId \u003d conf.get(YarnConfiguration.RM_CLUSTER_ID,\n        YarnConfiguration.DEFAULT_RM_CLUSTER_ID);\n    TimelineReaderContext monitorContext \u003d\n        new TimelineReaderContext(clusterId, null, null, null, null,\n        TimelineEntityType.YARN_FLOW_ACTIVITY.toString(), null, null);\n    reader \u003d TimelineEntityReaderFactory.createMultipleEntitiesReader(\n        monitorContext, MONITOR_FILTERS, DATA_TO_RETRIEVE);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-client/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/HBaseStorageMonitor.java"
    }
  }
}