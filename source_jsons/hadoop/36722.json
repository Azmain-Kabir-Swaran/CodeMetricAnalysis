{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMWebApp.java",
  "functionName": "setup",
  "functionId": "setup",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebApp.java",
  "functionStartLine": 53,
  "functionEndLine": 77,
  "numCommitsSeen": 28,
  "timeTaken": 11467,
  "changeHistory": [
    "0940e4f692441f16e742666ac925f71a083eab27",
    "c72302157907b44b71bc15008aabd9cf3d806f12",
    "673c0db43cfa4a0e9e7a21c5ea31660ecf61b8c3",
    "9e677fa05c6a822cf034bffd25bbee0bad84084b",
    "722ee841948db1f246f0056acec9a1ac464fe1f9",
    "736d33cddd88a0cec925a451940b2523999a9c51",
    "92431c961741747b5d6442f4025016d48d9a6863",
    "bad070fe15a642cc6f3a165612fbd272187e03cb",
    "95bfd087dc89e57a93340604cc8b96042fa1a05a",
    "b7442bf92eb6e1ae64a0f9644ffc2eee4597aad5",
    "746ad6e989683fe1dfc61a611702c9be7b5cd264",
    "5f57b904f550515693d93a2959e663b0d0260696",
    "392c3aaea8e8f156b76e418157fa347256283c56",
    "d9cdcb9474528733c488d4a5c73d2e4abb1af6fb",
    "1c5b49eeafc2253d4fa92456e6ccf0f35290c889",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "d1f805f942def3f7d62cba222e764095cbe0cfd0",
    "0ea8570be578be60e2f32849900a1c50506d78d3",
    "df2991c0cbc3f35c2640b93680667507c4f810dd",
    "9a4e890f4aadc921fa468fd1292d215704429b61",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "0940e4f692441f16e742666ac925f71a083eab27": "Ybodychange",
    "c72302157907b44b71bc15008aabd9cf3d806f12": "Ybodychange",
    "673c0db43cfa4a0e9e7a21c5ea31660ecf61b8c3": "Ybodychange",
    "9e677fa05c6a822cf034bffd25bbee0bad84084b": "Ybodychange",
    "722ee841948db1f246f0056acec9a1ac464fe1f9": "Ybodychange",
    "736d33cddd88a0cec925a451940b2523999a9c51": "Ybodychange",
    "92431c961741747b5d6442f4025016d48d9a6863": "Ybodychange",
    "bad070fe15a642cc6f3a165612fbd272187e03cb": "Ybodychange",
    "95bfd087dc89e57a93340604cc8b96042fa1a05a": "Ybodychange",
    "b7442bf92eb6e1ae64a0f9644ffc2eee4597aad5": "Ybodychange",
    "746ad6e989683fe1dfc61a611702c9be7b5cd264": "Ybodychange",
    "5f57b904f550515693d93a2959e663b0d0260696": "Ybodychange",
    "392c3aaea8e8f156b76e418157fa347256283c56": "Ybodychange",
    "d9cdcb9474528733c488d4a5c73d2e4abb1af6fb": "Ybodychange",
    "1c5b49eeafc2253d4fa92456e6ccf0f35290c889": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "d1f805f942def3f7d62cba222e764095cbe0cfd0": "Ybodychange",
    "0ea8570be578be60e2f32849900a1c50506d78d3": "Ybodychange",
    "df2991c0cbc3f35c2640b93680667507c4f810dd": "Ybodychange",
    "9a4e890f4aadc921fa468fd1292d215704429b61": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0940e4f692441f16e742666ac925f71a083eab27": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7218.  Decouple YARN Services REST API namespace from RM.  (Contributed by Eric Yang)\n",
      "commitDate": "17/11/17 9:28 AM",
      "commitName": "0940e4f692441f16e742666ac925f71a083eab27",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "c72302157907b44b71bc15008aabd9cf3d806f12",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 10.83,
      "commitsBetweenForRepo": 81,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,25 @@\n   public void setup() {\n     bind(JAXBContextResolver.class);\n     bind(RMWebServices.class);\n     bind(GenericExceptionHandler.class);\n     bind(RMWebApp.class).toInstance(this);\n \n     if (rm !\u003d null) {\n-      boolean enableServiceApi \u003d rm.getConfig()\n-          .getBoolean(YarnConfiguration.YARN_API_SERVICES_ENABLE, false);\n-      if (enableServiceApi) {\n-        try {\n-          // Use reflection here to load ApiServer class,\n-          // this is done to avoid creating cyclic dependency\n-          // between maven projects.\n-          Class\u003c?\u003e apiServer \u003d Class.forName(APISERVER);\n-          bind(apiServer);\n-        } catch (ClassNotFoundException e) {\n-          LOG.warn(\"ApiServer REST API is not activated.\");\n-        }\n-      }\n       bind(ResourceManager.class).toInstance(rm);\n     }\n     route(\"/\", RmController.class);\n     route(pajoin(\"/nodes\", NODE_STATE), RmController.class, \"nodes\");\n     route(pajoin(\"/apps\", APP_STATE), RmController.class);\n     route(\"/cluster\", RmController.class, \"about\");\n     route(pajoin(\"/app\", APPLICATION_ID), RmController.class, \"app\");\n     route(\"/scheduler\", RmController.class, \"scheduler\");\n     route(pajoin(\"/queue\", QUEUE_NAME), RmController.class, \"queue\");\n     route(\"/nodelabels\", RmController.class, \"nodelabels\");\n     route(pajoin(\"/appattempt\", APPLICATION_ATTEMPT_ID), RmController.class,\n       \"appattempt\");\n     route(pajoin(\"/container\", CONTAINER_ID), RmController.class, \"container\");\n     route(\"/errors-and-warnings\", RmController.class, \"errorsAndWarnings\");\n     route(pajoin(\"/logaggregationstatus\", APPLICATION_ID),\n       RmController.class, \"logaggregationstatus\");\n     route(pajoin(\"/failure\", APPLICATION_ID), RmController.class, \"failure\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setup() {\n    bind(JAXBContextResolver.class);\n    bind(RMWebServices.class);\n    bind(GenericExceptionHandler.class);\n    bind(RMWebApp.class).toInstance(this);\n\n    if (rm !\u003d null) {\n      bind(ResourceManager.class).toInstance(rm);\n    }\n    route(\"/\", RmController.class);\n    route(pajoin(\"/nodes\", NODE_STATE), RmController.class, \"nodes\");\n    route(pajoin(\"/apps\", APP_STATE), RmController.class);\n    route(\"/cluster\", RmController.class, \"about\");\n    route(pajoin(\"/app\", APPLICATION_ID), RmController.class, \"app\");\n    route(\"/scheduler\", RmController.class, \"scheduler\");\n    route(pajoin(\"/queue\", QUEUE_NAME), RmController.class, \"queue\");\n    route(\"/nodelabels\", RmController.class, \"nodelabels\");\n    route(pajoin(\"/appattempt\", APPLICATION_ATTEMPT_ID), RmController.class,\n      \"appattempt\");\n    route(pajoin(\"/container\", CONTAINER_ID), RmController.class, \"container\");\n    route(\"/errors-and-warnings\", RmController.class, \"errorsAndWarnings\");\n    route(pajoin(\"/logaggregationstatus\", APPLICATION_ID),\n      RmController.class, \"logaggregationstatus\");\n    route(pajoin(\"/failure\", APPLICATION_ID), RmController.class, \"failure\");\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebApp.java",
      "extendedDetails": {}
    },
    "c72302157907b44b71bc15008aabd9cf3d806f12": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6626. Embed REST API service into RM. Contributed by Eric Yang\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "c72302157907b44b71bc15008aabd9cf3d806f12",
      "commitAuthor": "Jian He",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "673c0db43cfa4a0e9e7a21c5ea31660ecf61b8c3",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,38 @@\n   public void setup() {\n     bind(JAXBContextResolver.class);\n     bind(RMWebServices.class);\n     bind(GenericExceptionHandler.class);\n     bind(RMWebApp.class).toInstance(this);\n \n     if (rm !\u003d null) {\n+      boolean enableServiceApi \u003d rm.getConfig()\n+          .getBoolean(YarnConfiguration.YARN_API_SERVICES_ENABLE, false);\n+      if (enableServiceApi) {\n+        try {\n+          // Use reflection here to load ApiServer class,\n+          // this is done to avoid creating cyclic dependency\n+          // between maven projects.\n+          Class\u003c?\u003e apiServer \u003d Class.forName(APISERVER);\n+          bind(apiServer);\n+        } catch (ClassNotFoundException e) {\n+          LOG.warn(\"ApiServer REST API is not activated.\");\n+        }\n+      }\n       bind(ResourceManager.class).toInstance(rm);\n     }\n     route(\"/\", RmController.class);\n     route(pajoin(\"/nodes\", NODE_STATE), RmController.class, \"nodes\");\n     route(pajoin(\"/apps\", APP_STATE), RmController.class);\n     route(\"/cluster\", RmController.class, \"about\");\n     route(pajoin(\"/app\", APPLICATION_ID), RmController.class, \"app\");\n     route(\"/scheduler\", RmController.class, \"scheduler\");\n     route(pajoin(\"/queue\", QUEUE_NAME), RmController.class, \"queue\");\n     route(\"/nodelabels\", RmController.class, \"nodelabels\");\n     route(pajoin(\"/appattempt\", APPLICATION_ATTEMPT_ID), RmController.class,\n       \"appattempt\");\n     route(pajoin(\"/container\", CONTAINER_ID), RmController.class, \"container\");\n     route(\"/errors-and-warnings\", RmController.class, \"errorsAndWarnings\");\n     route(pajoin(\"/logaggregationstatus\", APPLICATION_ID),\n       RmController.class, \"logaggregationstatus\");\n     route(pajoin(\"/failure\", APPLICATION_ID), RmController.class, \"failure\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setup() {\n    bind(JAXBContextResolver.class);\n    bind(RMWebServices.class);\n    bind(GenericExceptionHandler.class);\n    bind(RMWebApp.class).toInstance(this);\n\n    if (rm !\u003d null) {\n      boolean enableServiceApi \u003d rm.getConfig()\n          .getBoolean(YarnConfiguration.YARN_API_SERVICES_ENABLE, false);\n      if (enableServiceApi) {\n        try {\n          // Use reflection here to load ApiServer class,\n          // this is done to avoid creating cyclic dependency\n          // between maven projects.\n          Class\u003c?\u003e apiServer \u003d Class.forName(APISERVER);\n          bind(apiServer);\n        } catch (ClassNotFoundException e) {\n          LOG.warn(\"ApiServer REST API is not activated.\");\n        }\n      }\n      bind(ResourceManager.class).toInstance(rm);\n    }\n    route(\"/\", RmController.class);\n    route(pajoin(\"/nodes\", NODE_STATE), RmController.class, \"nodes\");\n    route(pajoin(\"/apps\", APP_STATE), RmController.class);\n    route(\"/cluster\", RmController.class, \"about\");\n    route(pajoin(\"/app\", APPLICATION_ID), RmController.class, \"app\");\n    route(\"/scheduler\", RmController.class, \"scheduler\");\n    route(pajoin(\"/queue\", QUEUE_NAME), RmController.class, \"queue\");\n    route(\"/nodelabels\", RmController.class, \"nodelabels\");\n    route(pajoin(\"/appattempt\", APPLICATION_ATTEMPT_ID), RmController.class,\n      \"appattempt\");\n    route(pajoin(\"/container\", CONTAINER_ID), RmController.class, \"container\");\n    route(\"/errors-and-warnings\", RmController.class, \"errorsAndWarnings\");\n    route(pajoin(\"/logaggregationstatus\", APPLICATION_ID),\n      RmController.class, \"logaggregationstatus\");\n    route(pajoin(\"/failure\", APPLICATION_ID), RmController.class, \"failure\");\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebApp.java",
      "extendedDetails": {}
    },
    "673c0db43cfa4a0e9e7a21c5ea31660ecf61b8c3": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"YARN-6626. Embed REST API service into RM. Contributed by Eric Yang\"\n\nThis reverts commit 63d1084e9781e0fee876916190b69f6242dd00e4.\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "673c0db43cfa4a0e9e7a21c5ea31660ecf61b8c3",
      "commitAuthor": "Jian He",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "9e677fa05c6a822cf034bffd25bbee0bad84084b",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,25 @@\n   public void setup() {\n     bind(JAXBContextResolver.class);\n     bind(RMWebServices.class);\n     bind(GenericExceptionHandler.class);\n     bind(RMWebApp.class).toInstance(this);\n \n     if (rm !\u003d null) {\n-      boolean enableServiceApi \u003d rm.getConfig()\n-          .getBoolean(YarnConfiguration.YARN_API_SERVICES_ENABLE, false);\n-      if (enableServiceApi) {\n-        try {\n-          // Use reflection here to load ApiServer class,\n-          // this is done to avoid creating cyclic dependency\n-          // between maven projects.\n-          Class\u003c?\u003e apiServer \u003d Class.forName(APISERVER);\n-          bind(apiServer);\n-        } catch (ClassNotFoundException e) {\n-          LOG.warn(\"ApiServer REST API is not activated.\");\n-        }\n-      }\n       bind(ResourceManager.class).toInstance(rm);\n     }\n     route(\"/\", RmController.class);\n     route(pajoin(\"/nodes\", NODE_STATE), RmController.class, \"nodes\");\n     route(pajoin(\"/apps\", APP_STATE), RmController.class);\n     route(\"/cluster\", RmController.class, \"about\");\n     route(pajoin(\"/app\", APPLICATION_ID), RmController.class, \"app\");\n     route(\"/scheduler\", RmController.class, \"scheduler\");\n     route(pajoin(\"/queue\", QUEUE_NAME), RmController.class, \"queue\");\n     route(\"/nodelabels\", RmController.class, \"nodelabels\");\n     route(pajoin(\"/appattempt\", APPLICATION_ATTEMPT_ID), RmController.class,\n       \"appattempt\");\n     route(pajoin(\"/container\", CONTAINER_ID), RmController.class, \"container\");\n     route(\"/errors-and-warnings\", RmController.class, \"errorsAndWarnings\");\n     route(pajoin(\"/logaggregationstatus\", APPLICATION_ID),\n       RmController.class, \"logaggregationstatus\");\n     route(pajoin(\"/failure\", APPLICATION_ID), RmController.class, \"failure\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setup() {\n    bind(JAXBContextResolver.class);\n    bind(RMWebServices.class);\n    bind(GenericExceptionHandler.class);\n    bind(RMWebApp.class).toInstance(this);\n\n    if (rm !\u003d null) {\n      bind(ResourceManager.class).toInstance(rm);\n    }\n    route(\"/\", RmController.class);\n    route(pajoin(\"/nodes\", NODE_STATE), RmController.class, \"nodes\");\n    route(pajoin(\"/apps\", APP_STATE), RmController.class);\n    route(\"/cluster\", RmController.class, \"about\");\n    route(pajoin(\"/app\", APPLICATION_ID), RmController.class, \"app\");\n    route(\"/scheduler\", RmController.class, \"scheduler\");\n    route(pajoin(\"/queue\", QUEUE_NAME), RmController.class, \"queue\");\n    route(\"/nodelabels\", RmController.class, \"nodelabels\");\n    route(pajoin(\"/appattempt\", APPLICATION_ATTEMPT_ID), RmController.class,\n      \"appattempt\");\n    route(pajoin(\"/container\", CONTAINER_ID), RmController.class, \"container\");\n    route(\"/errors-and-warnings\", RmController.class, \"errorsAndWarnings\");\n    route(pajoin(\"/logaggregationstatus\", APPLICATION_ID),\n      RmController.class, \"logaggregationstatus\");\n    route(pajoin(\"/failure\", APPLICATION_ID), RmController.class, \"failure\");\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebApp.java",
      "extendedDetails": {}
    },
    "9e677fa05c6a822cf034bffd25bbee0bad84084b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6626. Embed REST API service into RM. Contributed by Eric Yang\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "9e677fa05c6a822cf034bffd25bbee0bad84084b",
      "commitAuthor": "Jian He",
      "commitDateOld": "10/09/17 9:58 PM",
      "commitNameOld": "722ee841948db1f246f0056acec9a1ac464fe1f9",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 56.69,
      "commitsBetweenForRepo": 553,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,38 @@\n   public void setup() {\n     bind(JAXBContextResolver.class);\n     bind(RMWebServices.class);\n     bind(GenericExceptionHandler.class);\n     bind(RMWebApp.class).toInstance(this);\n \n     if (rm !\u003d null) {\n+      boolean enableServiceApi \u003d rm.getConfig()\n+          .getBoolean(YarnConfiguration.YARN_API_SERVICES_ENABLE, false);\n+      if (enableServiceApi) {\n+        try {\n+          // Use reflection here to load ApiServer class,\n+          // this is done to avoid creating cyclic dependency\n+          // between maven projects.\n+          Class\u003c?\u003e apiServer \u003d Class.forName(APISERVER);\n+          bind(apiServer);\n+        } catch (ClassNotFoundException e) {\n+          LOG.warn(\"ApiServer REST API is not activated.\");\n+        }\n+      }\n       bind(ResourceManager.class).toInstance(rm);\n     }\n     route(\"/\", RmController.class);\n     route(pajoin(\"/nodes\", NODE_STATE), RmController.class, \"nodes\");\n     route(pajoin(\"/apps\", APP_STATE), RmController.class);\n     route(\"/cluster\", RmController.class, \"about\");\n     route(pajoin(\"/app\", APPLICATION_ID), RmController.class, \"app\");\n     route(\"/scheduler\", RmController.class, \"scheduler\");\n     route(pajoin(\"/queue\", QUEUE_NAME), RmController.class, \"queue\");\n     route(\"/nodelabels\", RmController.class, \"nodelabels\");\n     route(pajoin(\"/appattempt\", APPLICATION_ATTEMPT_ID), RmController.class,\n       \"appattempt\");\n     route(pajoin(\"/container\", CONTAINER_ID), RmController.class, \"container\");\n     route(\"/errors-and-warnings\", RmController.class, \"errorsAndWarnings\");\n     route(pajoin(\"/logaggregationstatus\", APPLICATION_ID),\n       RmController.class, \"logaggregationstatus\");\n     route(pajoin(\"/failure\", APPLICATION_ID), RmController.class, \"failure\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setup() {\n    bind(JAXBContextResolver.class);\n    bind(RMWebServices.class);\n    bind(GenericExceptionHandler.class);\n    bind(RMWebApp.class).toInstance(this);\n\n    if (rm !\u003d null) {\n      boolean enableServiceApi \u003d rm.getConfig()\n          .getBoolean(YarnConfiguration.YARN_API_SERVICES_ENABLE, false);\n      if (enableServiceApi) {\n        try {\n          // Use reflection here to load ApiServer class,\n          // this is done to avoid creating cyclic dependency\n          // between maven projects.\n          Class\u003c?\u003e apiServer \u003d Class.forName(APISERVER);\n          bind(apiServer);\n        } catch (ClassNotFoundException e) {\n          LOG.warn(\"ApiServer REST API is not activated.\");\n        }\n      }\n      bind(ResourceManager.class).toInstance(rm);\n    }\n    route(\"/\", RmController.class);\n    route(pajoin(\"/nodes\", NODE_STATE), RmController.class, \"nodes\");\n    route(pajoin(\"/apps\", APP_STATE), RmController.class);\n    route(\"/cluster\", RmController.class, \"about\");\n    route(pajoin(\"/app\", APPLICATION_ID), RmController.class, \"app\");\n    route(\"/scheduler\", RmController.class, \"scheduler\");\n    route(pajoin(\"/queue\", QUEUE_NAME), RmController.class, \"queue\");\n    route(\"/nodelabels\", RmController.class, \"nodelabels\");\n    route(pajoin(\"/appattempt\", APPLICATION_ATTEMPT_ID), RmController.class,\n      \"appattempt\");\n    route(pajoin(\"/container\", CONTAINER_ID), RmController.class, \"container\");\n    route(\"/errors-and-warnings\", RmController.class, \"errorsAndWarnings\");\n    route(pajoin(\"/logaggregationstatus\", APPLICATION_ID),\n      RmController.class, \"logaggregationstatus\");\n    route(pajoin(\"/failure\", APPLICATION_ID), RmController.class, \"failure\");\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebApp.java",
      "extendedDetails": {}
    },
    "722ee841948db1f246f0056acec9a1ac464fe1f9": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7163. RMContext need not to be injected to webapp and other Always Running services. Contributed by Rohith Sharma K S.\n",
      "commitDate": "10/09/17 9:58 PM",
      "commitName": "722ee841948db1f246f0056acec9a1ac464fe1f9",
      "commitAuthor": "Sunil G",
      "commitDateOld": "09/12/16 5:00 PM",
      "commitNameOld": "a6410a542e59acd9827457df4a257a843f785c29",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 275.16,
      "commitsBetweenForRepo": 1569,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,25 @@\n   public void setup() {\n     bind(JAXBContextResolver.class);\n     bind(RMWebServices.class);\n     bind(GenericExceptionHandler.class);\n     bind(RMWebApp.class).toInstance(this);\n \n     if (rm !\u003d null) {\n       bind(ResourceManager.class).toInstance(rm);\n-      bind(ApplicationBaseProtocol.class).toInstance(rm.getClientRMService());\n     }\n     route(\"/\", RmController.class);\n     route(pajoin(\"/nodes\", NODE_STATE), RmController.class, \"nodes\");\n     route(pajoin(\"/apps\", APP_STATE), RmController.class);\n     route(\"/cluster\", RmController.class, \"about\");\n     route(pajoin(\"/app\", APPLICATION_ID), RmController.class, \"app\");\n     route(\"/scheduler\", RmController.class, \"scheduler\");\n     route(pajoin(\"/queue\", QUEUE_NAME), RmController.class, \"queue\");\n     route(\"/nodelabels\", RmController.class, \"nodelabels\");\n     route(pajoin(\"/appattempt\", APPLICATION_ATTEMPT_ID), RmController.class,\n       \"appattempt\");\n     route(pajoin(\"/container\", CONTAINER_ID), RmController.class, \"container\");\n     route(\"/errors-and-warnings\", RmController.class, \"errorsAndWarnings\");\n     route(pajoin(\"/logaggregationstatus\", APPLICATION_ID),\n       RmController.class, \"logaggregationstatus\");\n     route(pajoin(\"/failure\", APPLICATION_ID), RmController.class, \"failure\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setup() {\n    bind(JAXBContextResolver.class);\n    bind(RMWebServices.class);\n    bind(GenericExceptionHandler.class);\n    bind(RMWebApp.class).toInstance(this);\n\n    if (rm !\u003d null) {\n      bind(ResourceManager.class).toInstance(rm);\n    }\n    route(\"/\", RmController.class);\n    route(pajoin(\"/nodes\", NODE_STATE), RmController.class, \"nodes\");\n    route(pajoin(\"/apps\", APP_STATE), RmController.class);\n    route(\"/cluster\", RmController.class, \"about\");\n    route(pajoin(\"/app\", APPLICATION_ID), RmController.class, \"app\");\n    route(\"/scheduler\", RmController.class, \"scheduler\");\n    route(pajoin(\"/queue\", QUEUE_NAME), RmController.class, \"queue\");\n    route(\"/nodelabels\", RmController.class, \"nodelabels\");\n    route(pajoin(\"/appattempt\", APPLICATION_ATTEMPT_ID), RmController.class,\n      \"appattempt\");\n    route(pajoin(\"/container\", CONTAINER_ID), RmController.class, \"container\");\n    route(\"/errors-and-warnings\", RmController.class, \"errorsAndWarnings\");\n    route(pajoin(\"/logaggregationstatus\", APPLICATION_ID),\n      RmController.class, \"logaggregationstatus\");\n    route(pajoin(\"/failure\", APPLICATION_ID), RmController.class, \"failure\");\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebApp.java",
      "extendedDetails": {}
    },
    "736d33cddd88a0cec925a451940b2523999a9c51": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4767. Network issues can cause persistent RM UI outage. (Daniel Templeton via kasha)\n",
      "commitDate": "03/10/16 2:35 PM",
      "commitName": "736d33cddd88a0cec925a451940b2523999a9c51",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "29/01/16 1:48 PM",
      "commitNameOld": "772ea7b41b06beaa1f4ac4fa86eac8d6e6c8cd36",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 247.99,
      "commitsBetweenForRepo": 1713,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,26 @@\n   public void setup() {\n     bind(JAXBContextResolver.class);\n     bind(RMWebServices.class);\n     bind(GenericExceptionHandler.class);\n     bind(RMWebApp.class).toInstance(this);\n \n     if (rm !\u003d null) {\n       bind(ResourceManager.class).toInstance(rm);\n       bind(ApplicationBaseProtocol.class).toInstance(rm.getClientRMService());\n     }\n     route(\"/\", RmController.class);\n     route(pajoin(\"/nodes\", NODE_STATE), RmController.class, \"nodes\");\n     route(pajoin(\"/apps\", APP_STATE), RmController.class);\n     route(\"/cluster\", RmController.class, \"about\");\n     route(pajoin(\"/app\", APPLICATION_ID), RmController.class, \"app\");\n     route(\"/scheduler\", RmController.class, \"scheduler\");\n     route(pajoin(\"/queue\", QUEUE_NAME), RmController.class, \"queue\");\n     route(\"/nodelabels\", RmController.class, \"nodelabels\");\n     route(pajoin(\"/appattempt\", APPLICATION_ATTEMPT_ID), RmController.class,\n       \"appattempt\");\n     route(pajoin(\"/container\", CONTAINER_ID), RmController.class, \"container\");\n     route(\"/errors-and-warnings\", RmController.class, \"errorsAndWarnings\");\n     route(pajoin(\"/logaggregationstatus\", APPLICATION_ID),\n       RmController.class, \"logaggregationstatus\");\n+    route(pajoin(\"/failure\", APPLICATION_ID), RmController.class, \"failure\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setup() {\n    bind(JAXBContextResolver.class);\n    bind(RMWebServices.class);\n    bind(GenericExceptionHandler.class);\n    bind(RMWebApp.class).toInstance(this);\n\n    if (rm !\u003d null) {\n      bind(ResourceManager.class).toInstance(rm);\n      bind(ApplicationBaseProtocol.class).toInstance(rm.getClientRMService());\n    }\n    route(\"/\", RmController.class);\n    route(pajoin(\"/nodes\", NODE_STATE), RmController.class, \"nodes\");\n    route(pajoin(\"/apps\", APP_STATE), RmController.class);\n    route(\"/cluster\", RmController.class, \"about\");\n    route(pajoin(\"/app\", APPLICATION_ID), RmController.class, \"app\");\n    route(\"/scheduler\", RmController.class, \"scheduler\");\n    route(pajoin(\"/queue\", QUEUE_NAME), RmController.class, \"queue\");\n    route(\"/nodelabels\", RmController.class, \"nodelabels\");\n    route(pajoin(\"/appattempt\", APPLICATION_ATTEMPT_ID), RmController.class,\n      \"appattempt\");\n    route(pajoin(\"/container\", CONTAINER_ID), RmController.class, \"container\");\n    route(\"/errors-and-warnings\", RmController.class, \"errorsAndWarnings\");\n    route(pajoin(\"/logaggregationstatus\", APPLICATION_ID),\n      RmController.class, \"logaggregationstatus\");\n    route(pajoin(\"/failure\", APPLICATION_ID), RmController.class, \"failure\");\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebApp.java",
      "extendedDetails": {}
    },
    "92431c961741747b5d6442f4025016d48d9a6863": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1376. NM need to notify the log aggregation status to RM through Node heartbeat. Contributed by Xuan Gong.\n",
      "commitDate": "10/04/15 8:56 AM",
      "commitName": "92431c961741747b5d6442f4025016d48d9a6863",
      "commitAuthor": "Junping Du",
      "commitDateOld": "02/04/15 5:23 PM",
      "commitNameOld": "bad070fe15a642cc6f3a165612fbd272187e03cb",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 7.65,
      "commitsBetweenForRepo": 65,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,25 @@\n   public void setup() {\n     bind(JAXBContextResolver.class);\n     bind(RMWebServices.class);\n     bind(GenericExceptionHandler.class);\n     bind(RMWebApp.class).toInstance(this);\n \n     if (rm !\u003d null) {\n       bind(ResourceManager.class).toInstance(rm);\n       bind(ApplicationBaseProtocol.class).toInstance(rm.getClientRMService());\n     }\n     route(\"/\", RmController.class);\n     route(pajoin(\"/nodes\", NODE_STATE), RmController.class, \"nodes\");\n     route(pajoin(\"/apps\", APP_STATE), RmController.class);\n     route(\"/cluster\", RmController.class, \"about\");\n     route(pajoin(\"/app\", APPLICATION_ID), RmController.class, \"app\");\n     route(\"/scheduler\", RmController.class, \"scheduler\");\n     route(pajoin(\"/queue\", QUEUE_NAME), RmController.class, \"queue\");\n     route(\"/nodelabels\", RmController.class, \"nodelabels\");\n     route(pajoin(\"/appattempt\", APPLICATION_ATTEMPT_ID), RmController.class,\n       \"appattempt\");\n     route(pajoin(\"/container\", CONTAINER_ID), RmController.class, \"container\");\n     route(\"/errors-and-warnings\", RmController.class, \"errorsAndWarnings\");\n+    route(pajoin(\"/logaggregationstatus\", APPLICATION_ID),\n+      RmController.class, \"logaggregationstatus\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setup() {\n    bind(JAXBContextResolver.class);\n    bind(RMWebServices.class);\n    bind(GenericExceptionHandler.class);\n    bind(RMWebApp.class).toInstance(this);\n\n    if (rm !\u003d null) {\n      bind(ResourceManager.class).toInstance(rm);\n      bind(ApplicationBaseProtocol.class).toInstance(rm.getClientRMService());\n    }\n    route(\"/\", RmController.class);\n    route(pajoin(\"/nodes\", NODE_STATE), RmController.class, \"nodes\");\n    route(pajoin(\"/apps\", APP_STATE), RmController.class);\n    route(\"/cluster\", RmController.class, \"about\");\n    route(pajoin(\"/app\", APPLICATION_ID), RmController.class, \"app\");\n    route(\"/scheduler\", RmController.class, \"scheduler\");\n    route(pajoin(\"/queue\", QUEUE_NAME), RmController.class, \"queue\");\n    route(\"/nodelabels\", RmController.class, \"nodelabels\");\n    route(pajoin(\"/appattempt\", APPLICATION_ATTEMPT_ID), RmController.class,\n      \"appattempt\");\n    route(pajoin(\"/container\", CONTAINER_ID), RmController.class, \"container\");\n    route(\"/errors-and-warnings\", RmController.class, \"errorsAndWarnings\");\n    route(pajoin(\"/logaggregationstatus\", APPLICATION_ID),\n      RmController.class, \"logaggregationstatus\");\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebApp.java",
      "extendedDetails": {}
    },
    "bad070fe15a642cc6f3a165612fbd272187e03cb": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2901. Add errors and warning metrics page to RM, NM web UI. (Varun Vasudev via wangda)\n",
      "commitDate": "02/04/15 5:23 PM",
      "commitName": "bad070fe15a642cc6f3a165612fbd272187e03cb",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "05/03/15 9:20 PM",
      "commitNameOld": "95bfd087dc89e57a93340604cc8b96042fa1a05a",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 27.79,
      "commitsBetweenForRepo": 254,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,23 @@\n   public void setup() {\n     bind(JAXBContextResolver.class);\n     bind(RMWebServices.class);\n     bind(GenericExceptionHandler.class);\n     bind(RMWebApp.class).toInstance(this);\n \n     if (rm !\u003d null) {\n       bind(ResourceManager.class).toInstance(rm);\n       bind(ApplicationBaseProtocol.class).toInstance(rm.getClientRMService());\n     }\n     route(\"/\", RmController.class);\n     route(pajoin(\"/nodes\", NODE_STATE), RmController.class, \"nodes\");\n     route(pajoin(\"/apps\", APP_STATE), RmController.class);\n     route(\"/cluster\", RmController.class, \"about\");\n     route(pajoin(\"/app\", APPLICATION_ID), RmController.class, \"app\");\n     route(\"/scheduler\", RmController.class, \"scheduler\");\n     route(pajoin(\"/queue\", QUEUE_NAME), RmController.class, \"queue\");\n     route(\"/nodelabels\", RmController.class, \"nodelabels\");\n     route(pajoin(\"/appattempt\", APPLICATION_ATTEMPT_ID), RmController.class,\n       \"appattempt\");\n     route(pajoin(\"/container\", CONTAINER_ID), RmController.class, \"container\");\n+    route(\"/errors-and-warnings\", RmController.class, \"errorsAndWarnings\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setup() {\n    bind(JAXBContextResolver.class);\n    bind(RMWebServices.class);\n    bind(GenericExceptionHandler.class);\n    bind(RMWebApp.class).toInstance(this);\n\n    if (rm !\u003d null) {\n      bind(ResourceManager.class).toInstance(rm);\n      bind(ApplicationBaseProtocol.class).toInstance(rm.getClientRMService());\n    }\n    route(\"/\", RmController.class);\n    route(pajoin(\"/nodes\", NODE_STATE), RmController.class, \"nodes\");\n    route(pajoin(\"/apps\", APP_STATE), RmController.class);\n    route(\"/cluster\", RmController.class, \"about\");\n    route(pajoin(\"/app\", APPLICATION_ID), RmController.class, \"app\");\n    route(\"/scheduler\", RmController.class, \"scheduler\");\n    route(pajoin(\"/queue\", QUEUE_NAME), RmController.class, \"queue\");\n    route(\"/nodelabels\", RmController.class, \"nodelabels\");\n    route(pajoin(\"/appattempt\", APPLICATION_ATTEMPT_ID), RmController.class,\n      \"appattempt\");\n    route(pajoin(\"/container\", CONTAINER_ID), RmController.class, \"container\");\n    route(\"/errors-and-warnings\", RmController.class, \"errorsAndWarnings\");\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebApp.java",
      "extendedDetails": {}
    },
    "95bfd087dc89e57a93340604cc8b96042fa1a05a": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1809. Synchronize RM and TimeLineServer Web-UIs. Contributed by Zhijie Shen and Xuan Gong\n",
      "commitDate": "05/03/15 9:20 PM",
      "commitName": "95bfd087dc89e57a93340604cc8b96042fa1a05a",
      "commitAuthor": "Jian He",
      "commitDateOld": "30/12/14 4:49 PM",
      "commitNameOld": "b7442bf92eb6e1ae64a0f9644ffc2eee4597aad5",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 65.19,
      "commitsBetweenForRepo": 540,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,22 @@\n   public void setup() {\n     bind(JAXBContextResolver.class);\n     bind(RMWebServices.class);\n     bind(GenericExceptionHandler.class);\n     bind(RMWebApp.class).toInstance(this);\n \n     if (rm !\u003d null) {\n       bind(ResourceManager.class).toInstance(rm);\n+      bind(ApplicationBaseProtocol.class).toInstance(rm.getClientRMService());\n     }\n     route(\"/\", RmController.class);\n     route(pajoin(\"/nodes\", NODE_STATE), RmController.class, \"nodes\");\n     route(pajoin(\"/apps\", APP_STATE), RmController.class);\n     route(\"/cluster\", RmController.class, \"about\");\n     route(pajoin(\"/app\", APPLICATION_ID), RmController.class, \"app\");\n     route(\"/scheduler\", RmController.class, \"scheduler\");\n     route(pajoin(\"/queue\", QUEUE_NAME), RmController.class, \"queue\");\n     route(\"/nodelabels\", RmController.class, \"nodelabels\");\n+    route(pajoin(\"/appattempt\", APPLICATION_ATTEMPT_ID), RmController.class,\n+      \"appattempt\");\n+    route(pajoin(\"/container\", CONTAINER_ID), RmController.class, \"container\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setup() {\n    bind(JAXBContextResolver.class);\n    bind(RMWebServices.class);\n    bind(GenericExceptionHandler.class);\n    bind(RMWebApp.class).toInstance(this);\n\n    if (rm !\u003d null) {\n      bind(ResourceManager.class).toInstance(rm);\n      bind(ApplicationBaseProtocol.class).toInstance(rm.getClientRMService());\n    }\n    route(\"/\", RmController.class);\n    route(pajoin(\"/nodes\", NODE_STATE), RmController.class, \"nodes\");\n    route(pajoin(\"/apps\", APP_STATE), RmController.class);\n    route(\"/cluster\", RmController.class, \"about\");\n    route(pajoin(\"/app\", APPLICATION_ID), RmController.class, \"app\");\n    route(\"/scheduler\", RmController.class, \"scheduler\");\n    route(pajoin(\"/queue\", QUEUE_NAME), RmController.class, \"queue\");\n    route(\"/nodelabels\", RmController.class, \"nodelabels\");\n    route(pajoin(\"/appattempt\", APPLICATION_ATTEMPT_ID), RmController.class,\n      \"appattempt\");\n    route(pajoin(\"/container\", CONTAINER_ID), RmController.class, \"container\");\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebApp.java",
      "extendedDetails": {}
    },
    "b7442bf92eb6e1ae64a0f9644ffc2eee4597aad5": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2493. Added node-labels page on RM web UI. Contributed by Wangda Tan\n",
      "commitDate": "30/12/14 4:49 PM",
      "commitName": "b7442bf92eb6e1ae64a0f9644ffc2eee4597aad5",
      "commitAuthor": "Jian He",
      "commitDateOld": "30/12/14 4:48 PM",
      "commitNameOld": "746ad6e989683fe1dfc61a611702c9be7b5cd264",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,18 @@\n   public void setup() {\n     bind(JAXBContextResolver.class);\n     bind(RMWebServices.class);\n     bind(GenericExceptionHandler.class);\n     bind(RMWebApp.class).toInstance(this);\n \n     if (rm !\u003d null) {\n       bind(ResourceManager.class).toInstance(rm);\n     }\n     route(\"/\", RmController.class);\n     route(pajoin(\"/nodes\", NODE_STATE), RmController.class, \"nodes\");\n     route(pajoin(\"/apps\", APP_STATE), RmController.class);\n     route(\"/cluster\", RmController.class, \"about\");\n     route(pajoin(\"/app\", APPLICATION_ID), RmController.class, \"app\");\n     route(\"/scheduler\", RmController.class, \"scheduler\");\n     route(pajoin(\"/queue\", QUEUE_NAME), RmController.class, \"queue\");\n+    route(\"/nodelabels\", RmController.class, \"nodelabels\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setup() {\n    bind(JAXBContextResolver.class);\n    bind(RMWebServices.class);\n    bind(GenericExceptionHandler.class);\n    bind(RMWebApp.class).toInstance(this);\n\n    if (rm !\u003d null) {\n      bind(ResourceManager.class).toInstance(rm);\n    }\n    route(\"/\", RmController.class);\n    route(pajoin(\"/nodes\", NODE_STATE), RmController.class, \"nodes\");\n    route(pajoin(\"/apps\", APP_STATE), RmController.class);\n    route(\"/cluster\", RmController.class, \"about\");\n    route(pajoin(\"/app\", APPLICATION_ID), RmController.class, \"app\");\n    route(\"/scheduler\", RmController.class, \"scheduler\");\n    route(pajoin(\"/queue\", QUEUE_NAME), RmController.class, \"queue\");\n    route(\"/nodelabels\", RmController.class, \"nodelabels\");\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebApp.java",
      "extendedDetails": {}
    },
    "746ad6e989683fe1dfc61a611702c9be7b5cd264": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"YARN-2492(wrong jira number). Added node-labels page on RM web UI. Contributed by Wangda Tan\"\n\nThis reverts commit 5f57b904f550515693d93a2959e663b0d0260696.\n",
      "commitDate": "30/12/14 4:48 PM",
      "commitName": "746ad6e989683fe1dfc61a611702c9be7b5cd264",
      "commitAuthor": "Jian He",
      "commitDateOld": "30/12/14 3:38 PM",
      "commitNameOld": "5f57b904f550515693d93a2959e663b0d0260696",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 0.05,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,17 @@\n   public void setup() {\n     bind(JAXBContextResolver.class);\n     bind(RMWebServices.class);\n     bind(GenericExceptionHandler.class);\n     bind(RMWebApp.class).toInstance(this);\n \n     if (rm !\u003d null) {\n       bind(ResourceManager.class).toInstance(rm);\n     }\n     route(\"/\", RmController.class);\n     route(pajoin(\"/nodes\", NODE_STATE), RmController.class, \"nodes\");\n     route(pajoin(\"/apps\", APP_STATE), RmController.class);\n     route(\"/cluster\", RmController.class, \"about\");\n     route(pajoin(\"/app\", APPLICATION_ID), RmController.class, \"app\");\n     route(\"/scheduler\", RmController.class, \"scheduler\");\n     route(pajoin(\"/queue\", QUEUE_NAME), RmController.class, \"queue\");\n-    route(\"/nodelabels\", RmController.class, \"nodelabels\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setup() {\n    bind(JAXBContextResolver.class);\n    bind(RMWebServices.class);\n    bind(GenericExceptionHandler.class);\n    bind(RMWebApp.class).toInstance(this);\n\n    if (rm !\u003d null) {\n      bind(ResourceManager.class).toInstance(rm);\n    }\n    route(\"/\", RmController.class);\n    route(pajoin(\"/nodes\", NODE_STATE), RmController.class, \"nodes\");\n    route(pajoin(\"/apps\", APP_STATE), RmController.class);\n    route(\"/cluster\", RmController.class, \"about\");\n    route(pajoin(\"/app\", APPLICATION_ID), RmController.class, \"app\");\n    route(\"/scheduler\", RmController.class, \"scheduler\");\n    route(pajoin(\"/queue\", QUEUE_NAME), RmController.class, \"queue\");\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebApp.java",
      "extendedDetails": {}
    },
    "5f57b904f550515693d93a2959e663b0d0260696": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2492. Added node-labels page on RM web UI. Contributed by Wangda Tan\n",
      "commitDate": "30/12/14 3:38 PM",
      "commitName": "5f57b904f550515693d93a2959e663b0d0260696",
      "commitAuthor": "Jian He",
      "commitDateOld": "02/12/14 5:16 PM",
      "commitNameOld": "392c3aaea8e8f156b76e418157fa347256283c56",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 27.93,
      "commitsBetweenForRepo": 176,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,18 @@\n   public void setup() {\n     bind(JAXBContextResolver.class);\n     bind(RMWebServices.class);\n     bind(GenericExceptionHandler.class);\n     bind(RMWebApp.class).toInstance(this);\n \n     if (rm !\u003d null) {\n       bind(ResourceManager.class).toInstance(rm);\n     }\n     route(\"/\", RmController.class);\n     route(pajoin(\"/nodes\", NODE_STATE), RmController.class, \"nodes\");\n     route(pajoin(\"/apps\", APP_STATE), RmController.class);\n     route(\"/cluster\", RmController.class, \"about\");\n     route(pajoin(\"/app\", APPLICATION_ID), RmController.class, \"app\");\n     route(\"/scheduler\", RmController.class, \"scheduler\");\n     route(pajoin(\"/queue\", QUEUE_NAME), RmController.class, \"queue\");\n+    route(\"/nodelabels\", RmController.class, \"nodelabels\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setup() {\n    bind(JAXBContextResolver.class);\n    bind(RMWebServices.class);\n    bind(GenericExceptionHandler.class);\n    bind(RMWebApp.class).toInstance(this);\n\n    if (rm !\u003d null) {\n      bind(ResourceManager.class).toInstance(rm);\n    }\n    route(\"/\", RmController.class);\n    route(pajoin(\"/nodes\", NODE_STATE), RmController.class, \"nodes\");\n    route(pajoin(\"/apps\", APP_STATE), RmController.class);\n    route(\"/cluster\", RmController.class, \"about\");\n    route(pajoin(\"/app\", APPLICATION_ID), RmController.class, \"app\");\n    route(\"/scheduler\", RmController.class, \"scheduler\");\n    route(pajoin(\"/queue\", QUEUE_NAME), RmController.class, \"queue\");\n    route(\"/nodelabels\", RmController.class, \"nodelabels\");\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebApp.java",
      "extendedDetails": {}
    },
    "392c3aaea8e8f156b76e418157fa347256283c56": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2894. Fixed a bug regarding application view acl when RM fails over. Contributed by Rohith Sharmaks\n",
      "commitDate": "02/12/14 5:16 PM",
      "commitName": "392c3aaea8e8f156b76e418157fa347256283c56",
      "commitAuthor": "Jian He",
      "commitDateOld": "20/03/14 9:20 PM",
      "commitNameOld": "4224e613409ec97ff52ba28a7cedfe0485577257",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 256.87,
      "commitsBetweenForRepo": 2069,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,17 @@\n   public void setup() {\n     bind(JAXBContextResolver.class);\n     bind(RMWebServices.class);\n     bind(GenericExceptionHandler.class);\n     bind(RMWebApp.class).toInstance(this);\n \n     if (rm !\u003d null) {\n       bind(ResourceManager.class).toInstance(rm);\n-      bind(RMContext.class).toInstance(rm.getRMContext());\n-      bind(ApplicationACLsManager.class).toInstance(\n-          rm.getApplicationACLsManager());\n-      bind(QueueACLsManager.class).toInstance(rm.getQueueACLsManager());\n     }\n     route(\"/\", RmController.class);\n     route(pajoin(\"/nodes\", NODE_STATE), RmController.class, \"nodes\");\n     route(pajoin(\"/apps\", APP_STATE), RmController.class);\n     route(\"/cluster\", RmController.class, \"about\");\n     route(pajoin(\"/app\", APPLICATION_ID), RmController.class, \"app\");\n     route(\"/scheduler\", RmController.class, \"scheduler\");\n     route(pajoin(\"/queue\", QUEUE_NAME), RmController.class, \"queue\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setup() {\n    bind(JAXBContextResolver.class);\n    bind(RMWebServices.class);\n    bind(GenericExceptionHandler.class);\n    bind(RMWebApp.class).toInstance(this);\n\n    if (rm !\u003d null) {\n      bind(ResourceManager.class).toInstance(rm);\n    }\n    route(\"/\", RmController.class);\n    route(pajoin(\"/nodes\", NODE_STATE), RmController.class, \"nodes\");\n    route(pajoin(\"/apps\", APP_STATE), RmController.class);\n    route(\"/cluster\", RmController.class, \"about\");\n    route(pajoin(\"/app\", APPLICATION_ID), RmController.class, \"app\");\n    route(\"/scheduler\", RmController.class, \"scheduler\");\n    route(pajoin(\"/queue\", QUEUE_NAME), RmController.class, \"queue\");\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebApp.java",
      "extendedDetails": {}
    },
    "d9cdcb9474528733c488d4a5c73d2e4abb1af6fb": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1658. Modified web-app framework to let standby RMs redirect web-service calls to the active RM. Contributed by Cindy Li.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1577408 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/03/14 7:39 PM",
      "commitName": "d9cdcb9474528733c488d4a5c73d2e4abb1af6fb",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "06/03/14 8:34 PM",
      "commitNameOld": "9b15c5b11a565251f85b7cb67be6ee0deee6e0d6",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 6.92,
      "commitsBetweenForRepo": 62,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,21 @@\n   public void setup() {\n     bind(JAXBContextResolver.class);\n     bind(RMWebServices.class);\n     bind(GenericExceptionHandler.class);\n+    bind(RMWebApp.class).toInstance(this);\n+\n     if (rm !\u003d null) {\n       bind(ResourceManager.class).toInstance(rm);\n       bind(RMContext.class).toInstance(rm.getRMContext());\n       bind(ApplicationACLsManager.class).toInstance(\n           rm.getApplicationACLsManager());\n       bind(QueueACLsManager.class).toInstance(rm.getQueueACLsManager());\n     }\n     route(\"/\", RmController.class);\n     route(pajoin(\"/nodes\", NODE_STATE), RmController.class, \"nodes\");\n     route(pajoin(\"/apps\", APP_STATE), RmController.class);\n     route(\"/cluster\", RmController.class, \"about\");\n     route(pajoin(\"/app\", APPLICATION_ID), RmController.class, \"app\");\n     route(\"/scheduler\", RmController.class, \"scheduler\");\n     route(pajoin(\"/queue\", QUEUE_NAME), RmController.class, \"queue\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setup() {\n    bind(JAXBContextResolver.class);\n    bind(RMWebServices.class);\n    bind(GenericExceptionHandler.class);\n    bind(RMWebApp.class).toInstance(this);\n\n    if (rm !\u003d null) {\n      bind(ResourceManager.class).toInstance(rm);\n      bind(RMContext.class).toInstance(rm.getRMContext());\n      bind(ApplicationACLsManager.class).toInstance(\n          rm.getApplicationACLsManager());\n      bind(QueueACLsManager.class).toInstance(rm.getQueueACLsManager());\n    }\n    route(\"/\", RmController.class);\n    route(pajoin(\"/nodes\", NODE_STATE), RmController.class, \"nodes\");\n    route(pajoin(\"/apps\", APP_STATE), RmController.class);\n    route(\"/cluster\", RmController.class, \"about\");\n    route(pajoin(\"/app\", APPLICATION_ID), RmController.class, \"app\");\n    route(\"/scheduler\", RmController.class, \"scheduler\");\n    route(pajoin(\"/queue\", QUEUE_NAME), RmController.class, \"queue\");\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebApp.java",
      "extendedDetails": {}
    },
    "1c5b49eeafc2253d4fa92456e6ccf0f35290c889": {
      "type": "Ybodychange",
      "commitMessage": "YARN-899. Added back queue level administrator-acls so that there is no regression w.r.t 1.x. Contributed by Xuan Gong.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1527282 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/09/13 1:21 AM",
      "commitName": "1c5b49eeafc2253d4fa92456e6ccf0f35290c889",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "07/08/12 10:22 PM",
      "commitNameOld": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 417.12,
      "commitsBetweenForRepo": 2420,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,19 @@\n   public void setup() {\n     bind(JAXBContextResolver.class);\n     bind(RMWebServices.class);\n     bind(GenericExceptionHandler.class);\n     if (rm !\u003d null) {\n       bind(ResourceManager.class).toInstance(rm);\n       bind(RMContext.class).toInstance(rm.getRMContext());\n       bind(ApplicationACLsManager.class).toInstance(\n           rm.getApplicationACLsManager());\n+      bind(QueueACLsManager.class).toInstance(rm.getQueueACLsManager());\n     }\n     route(\"/\", RmController.class);\n     route(pajoin(\"/nodes\", NODE_STATE), RmController.class, \"nodes\");\n     route(pajoin(\"/apps\", APP_STATE), RmController.class);\n     route(\"/cluster\", RmController.class, \"about\");\n     route(pajoin(\"/app\", APPLICATION_ID), RmController.class, \"app\");\n     route(\"/scheduler\", RmController.class, \"scheduler\");\n     route(pajoin(\"/queue\", QUEUE_NAME), RmController.class, \"queue\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setup() {\n    bind(JAXBContextResolver.class);\n    bind(RMWebServices.class);\n    bind(GenericExceptionHandler.class);\n    if (rm !\u003d null) {\n      bind(ResourceManager.class).toInstance(rm);\n      bind(RMContext.class).toInstance(rm.getRMContext());\n      bind(ApplicationACLsManager.class).toInstance(\n          rm.getApplicationACLsManager());\n      bind(QueueACLsManager.class).toInstance(rm.getQueueACLsManager());\n    }\n    route(\"/\", RmController.class);\n    route(pajoin(\"/nodes\", NODE_STATE), RmController.class, \"nodes\");\n    route(pajoin(\"/apps\", APP_STATE), RmController.class);\n    route(\"/cluster\", RmController.class, \"about\");\n    route(pajoin(\"/app\", APPLICATION_ID), RmController.class, \"app\");\n    route(\"/scheduler\", RmController.class, \"scheduler\");\n    route(pajoin(\"/queue\", QUEUE_NAME), RmController.class, \"queue\");\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebApp.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void setup() {\n    bind(JAXBContextResolver.class);\n    bind(RMWebServices.class);\n    bind(GenericExceptionHandler.class);\n    if (rm !\u003d null) {\n      bind(ResourceManager.class).toInstance(rm);\n      bind(RMContext.class).toInstance(rm.getRMContext());\n      bind(ApplicationACLsManager.class).toInstance(\n          rm.getApplicationACLsManager());\n    }\n    route(\"/\", RmController.class);\n    route(pajoin(\"/nodes\", NODE_STATE), RmController.class, \"nodes\");\n    route(pajoin(\"/apps\", APP_STATE), RmController.class);\n    route(\"/cluster\", RmController.class, \"about\");\n    route(pajoin(\"/app\", APPLICATION_ID), RmController.class, \"app\");\n    route(\"/scheduler\", RmController.class, \"scheduler\");\n    route(pajoin(\"/queue\", QUEUE_NAME), RmController.class, \"queue\");\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebApp.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebApp.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebApp.java"
      }
    },
    "d1f805f942def3f7d62cba222e764095cbe0cfd0": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3754. Modified RM UI to filter applications based on state of the applications. (vinodkv)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1238887 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/01/12 4:51 PM",
      "commitName": "d1f805f942def3f7d62cba222e764095cbe0cfd0",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "13/12/11 3:05 PM",
      "commitNameOld": "0ea8570be578be60e2f32849900a1c50506d78d3",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 49.07,
      "commitsBetweenForRepo": 233,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   public void setup() {\n     bind(JAXBContextResolver.class);\n     bind(RMWebServices.class);\n     bind(GenericExceptionHandler.class);\n     if (rm !\u003d null) {\n       bind(ResourceManager.class).toInstance(rm);\n       bind(RMContext.class).toInstance(rm.getRMContext());\n       bind(ApplicationACLsManager.class).toInstance(\n           rm.getApplicationACLsManager());\n     }\n     route(\"/\", RmController.class);\n     route(pajoin(\"/nodes\", NODE_STATE), RmController.class, \"nodes\");\n-    route(\"/apps\", RmController.class);\n+    route(pajoin(\"/apps\", APP_STATE), RmController.class);\n     route(\"/cluster\", RmController.class, \"about\");\n-    route(pajoin(\"/app\", APP_ID), RmController.class, \"app\");\n+    route(pajoin(\"/app\", APPLICATION_ID), RmController.class, \"app\");\n     route(\"/scheduler\", RmController.class, \"scheduler\");\n     route(pajoin(\"/queue\", QUEUE_NAME), RmController.class, \"queue\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setup() {\n    bind(JAXBContextResolver.class);\n    bind(RMWebServices.class);\n    bind(GenericExceptionHandler.class);\n    if (rm !\u003d null) {\n      bind(ResourceManager.class).toInstance(rm);\n      bind(RMContext.class).toInstance(rm.getRMContext());\n      bind(ApplicationACLsManager.class).toInstance(\n          rm.getApplicationACLsManager());\n    }\n    route(\"/\", RmController.class);\n    route(pajoin(\"/nodes\", NODE_STATE), RmController.class, \"nodes\");\n    route(pajoin(\"/apps\", APP_STATE), RmController.class);\n    route(\"/cluster\", RmController.class, \"about\");\n    route(pajoin(\"/app\", APPLICATION_ID), RmController.class, \"app\");\n    route(\"/scheduler\", RmController.class, \"scheduler\");\n    route(pajoin(\"/queue\", QUEUE_NAME), RmController.class, \"queue\");\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebApp.java",
      "extendedDetails": {}
    },
    "0ea8570be578be60e2f32849900a1c50506d78d3": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2863. Support web services for YARN and MR components. (Thomas Graves via vinodkv)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1213975 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/12/11 3:05 PM",
      "commitName": "0ea8570be578be60e2f32849900a1c50506d78d3",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "20/10/11 4:45 AM",
      "commitNameOld": "df2991c0cbc3f35c2640b93680667507c4f810dd",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 54.47,
      "commitsBetweenForRepo": 362,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,18 @@\n   public void setup() {\n+    bind(JAXBContextResolver.class);\n+    bind(RMWebServices.class);\n+    bind(GenericExceptionHandler.class);\n     if (rm !\u003d null) {\n       bind(ResourceManager.class).toInstance(rm);\n       bind(RMContext.class).toInstance(rm.getRMContext());\n       bind(ApplicationACLsManager.class).toInstance(\n           rm.getApplicationACLsManager());\n     }\n     route(\"/\", RmController.class);\n     route(pajoin(\"/nodes\", NODE_STATE), RmController.class, \"nodes\");\n     route(\"/apps\", RmController.class);\n     route(\"/cluster\", RmController.class, \"about\");\n     route(pajoin(\"/app\", APP_ID), RmController.class, \"app\");\n     route(\"/scheduler\", RmController.class, \"scheduler\");\n     route(pajoin(\"/queue\", QUEUE_NAME), RmController.class, \"queue\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setup() {\n    bind(JAXBContextResolver.class);\n    bind(RMWebServices.class);\n    bind(GenericExceptionHandler.class);\n    if (rm !\u003d null) {\n      bind(ResourceManager.class).toInstance(rm);\n      bind(RMContext.class).toInstance(rm.getRMContext());\n      bind(ApplicationACLsManager.class).toInstance(\n          rm.getApplicationACLsManager());\n    }\n    route(\"/\", RmController.class);\n    route(pajoin(\"/nodes\", NODE_STATE), RmController.class, \"nodes\");\n    route(\"/apps\", RmController.class);\n    route(\"/cluster\", RmController.class, \"about\");\n    route(pajoin(\"/app\", APP_ID), RmController.class, \"app\");\n    route(\"/scheduler\", RmController.class, \"scheduler\");\n    route(pajoin(\"/queue\", QUEUE_NAME), RmController.class, \"queue\");\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebApp.java",
      "extendedDetails": {}
    },
    "df2991c0cbc3f35c2640b93680667507c4f810dd": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3104. Implemented Application-acls. (vinodkv)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1186748 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "20/10/11 4:45 AM",
      "commitName": "df2991c0cbc3f35c2640b93680667507c4f810dd",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "05/10/11 7:01 AM",
      "commitNameOld": "9a4e890f4aadc921fa468fd1292d215704429b61",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 14.91,
      "commitsBetweenForRepo": 121,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,15 @@\n   public void setup() {\n     if (rm !\u003d null) {\n       bind(ResourceManager.class).toInstance(rm);\n       bind(RMContext.class).toInstance(rm.getRMContext());\n+      bind(ApplicationACLsManager.class).toInstance(\n+          rm.getApplicationACLsManager());\n     }\n     route(\"/\", RmController.class);\n     route(pajoin(\"/nodes\", NODE_STATE), RmController.class, \"nodes\");\n     route(\"/apps\", RmController.class);\n     route(\"/cluster\", RmController.class, \"about\");\n     route(pajoin(\"/app\", APP_ID), RmController.class, \"app\");\n     route(\"/scheduler\", RmController.class, \"scheduler\");\n     route(pajoin(\"/queue\", QUEUE_NAME), RmController.class, \"queue\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setup() {\n    if (rm !\u003d null) {\n      bind(ResourceManager.class).toInstance(rm);\n      bind(RMContext.class).toInstance(rm.getRMContext());\n      bind(ApplicationACLsManager.class).toInstance(\n          rm.getApplicationACLsManager());\n    }\n    route(\"/\", RmController.class);\n    route(pajoin(\"/nodes\", NODE_STATE), RmController.class, \"nodes\");\n    route(\"/apps\", RmController.class);\n    route(\"/cluster\", RmController.class, \"about\");\n    route(pajoin(\"/app\", APP_ID), RmController.class, \"app\");\n    route(\"/scheduler\", RmController.class, \"scheduler\");\n    route(pajoin(\"/queue\", QUEUE_NAME), RmController.class, \"queue\");\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebApp.java",
      "extendedDetails": {}
    },
    "9a4e890f4aadc921fa468fd1292d215704429b61": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2738. Added the missing cluster level statisticss on the RM web UI. Contributed by Robert Joseph Evans.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1179229 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/10/11 7:01 AM",
      "commitName": "9a4e890f4aadc921fa468fd1292d215704429b61",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "24/08/11 5:14 PM",
      "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 41.57,
      "commitsBetweenForRepo": 271,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n   public void setup() {\n     if (rm !\u003d null) {\n       bind(ResourceManager.class).toInstance(rm);\n       bind(RMContext.class).toInstance(rm.getRMContext());\n     }\n     route(\"/\", RmController.class);\n-    route(\"/nodes\", RmController.class, \"nodes\");\n+    route(pajoin(\"/nodes\", NODE_STATE), RmController.class, \"nodes\");\n     route(\"/apps\", RmController.class);\n-    route(\"/cluster\", RmController.class, \"info\");\n+    route(\"/cluster\", RmController.class, \"about\");\n     route(pajoin(\"/app\", APP_ID), RmController.class, \"app\");\n     route(\"/scheduler\", RmController.class, \"scheduler\");\n     route(pajoin(\"/queue\", QUEUE_NAME), RmController.class, \"queue\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setup() {\n    if (rm !\u003d null) {\n      bind(ResourceManager.class).toInstance(rm);\n      bind(RMContext.class).toInstance(rm.getRMContext());\n    }\n    route(\"/\", RmController.class);\n    route(pajoin(\"/nodes\", NODE_STATE), RmController.class, \"nodes\");\n    route(\"/apps\", RmController.class);\n    route(\"/cluster\", RmController.class, \"about\");\n    route(pajoin(\"/app\", APP_ID), RmController.class, \"app\");\n    route(\"/scheduler\", RmController.class, \"scheduler\");\n    route(pajoin(\"/queue\", QUEUE_NAME), RmController.class, \"queue\");\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebApp.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void setup() {\n    if (rm !\u003d null) {\n      bind(ResourceManager.class).toInstance(rm);\n      bind(RMContext.class).toInstance(rm.getRMContext());\n    }\n    route(\"/\", RmController.class);\n    route(\"/nodes\", RmController.class, \"nodes\");\n    route(\"/apps\", RmController.class);\n    route(\"/cluster\", RmController.class, \"info\");\n    route(pajoin(\"/app\", APP_ID), RmController.class, \"app\");\n    route(\"/scheduler\", RmController.class, \"scheduler\");\n    route(pajoin(\"/queue\", QUEUE_NAME), RmController.class, \"queue\");\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebApp.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebApp.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebApp.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,13 @@\n+  public void setup() {\n+    if (rm !\u003d null) {\n+      bind(ResourceManager.class).toInstance(rm);\n+      bind(RMContext.class).toInstance(rm.getRMContext());\n+    }\n+    route(\"/\", RmController.class);\n+    route(\"/nodes\", RmController.class, \"nodes\");\n+    route(\"/apps\", RmController.class);\n+    route(\"/cluster\", RmController.class, \"info\");\n+    route(pajoin(\"/app\", APP_ID), RmController.class, \"app\");\n+    route(\"/scheduler\", RmController.class, \"scheduler\");\n+    route(pajoin(\"/queue\", QUEUE_NAME), RmController.class, \"queue\");\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void setup() {\n    if (rm !\u003d null) {\n      bind(ResourceManager.class).toInstance(rm);\n      bind(RMContext.class).toInstance(rm.getRMContext());\n    }\n    route(\"/\", RmController.class);\n    route(\"/nodes\", RmController.class, \"nodes\");\n    route(\"/apps\", RmController.class);\n    route(\"/cluster\", RmController.class, \"info\");\n    route(pajoin(\"/app\", APP_ID), RmController.class, \"app\");\n    route(\"/scheduler\", RmController.class, \"scheduler\");\n    route(pajoin(\"/queue\", QUEUE_NAME), RmController.class, \"queue\");\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/RMWebApp.java"
    }
  }
}