{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ByteBufferDataReader.java",
  "functionName": "readLine",
  "functionId": "readLine",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/java/org/apache/hadoop/mapred/nativetask/buffer/ByteBufferDataReader.java",
  "functionStartLine": 130,
  "functionEndLine": 132,
  "numCommitsSeen": 3,
  "timeTaken": 846,
  "changeHistory": [
    "663518032449940f136ae8a9f149ed453837a8d8",
    "b2551c06a09fb80a9e69adbc01c4c34b93ad0139"
  ],
  "changeHistoryShort": {
    "663518032449940f136ae8a9f149ed453837a8d8": "Ybodychange",
    "b2551c06a09fb80a9e69adbc01c4c34b93ad0139": "Yintroduced"
  },
  "changeHistoryDetails": {
    "663518032449940f136ae8a9f149ed453837a8d8": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6000. native-task: Simplify ByteBufferDataReader/Writer. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/MR-2841@1613036 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/07/14 1:24 AM",
      "commitName": "663518032449940f136ae8a9f149ed453837a8d8",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "17/07/14 10:44 AM",
      "commitNameOld": "b2551c06a09fb80a9e69adbc01c4c34b93ad0139",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 6.61,
      "commitsBetweenForRepo": 70,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,46 +1,3 @@\n   public String readLine() throws IOException {\n-\n-    InputStream in \u003d this;\n-\n-    char buf[] \u003d lineCache;\n-\n-    if (buf \u003d\u003d null) {\n-      buf \u003d lineCache \u003d new char[128];\n-    }\n-\n-    int room \u003d buf.length;\n-    int offset \u003d 0;\n-    int c;\n-\n-    loop: while (true) {\n-      switch (c \u003d in.read()) {\n-      case -1:\n-      case \u0027\\n\u0027:\n-        break loop;\n-\n-      case \u0027\\r\u0027:\n-        final int c2 \u003d in.read();\n-        if ((c2 !\u003d \u0027\\n\u0027) \u0026\u0026 (c2 !\u003d -1)) {\n-          if (!(in instanceof PushbackInputStream)) {\n-            in \u003d new PushbackInputStream(in);\n-          }\n-          ((PushbackInputStream) in).unread(c2);\n-        }\n-        break loop;\n-\n-      default:\n-        if (--room \u003c 0) {\n-          buf \u003d new char[offset + 128];\n-          room \u003d buf.length - offset - 1;\n-          System.arraycopy(lineCache, 0, buf, 0, offset);\n-          lineCache \u003d buf;\n-        }\n-        buf[offset++] \u003d (char) c;\n-        break;\n-      }\n-    }\n-    if ((c \u003d\u003d -1) \u0026\u0026 (offset \u003d\u003d 0)) {\n-      return null;\n-    }\n-    return String.copyValueOf(buf, 0, offset);\n+    return javaReader.readLine();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String readLine() throws IOException {\n    return javaReader.readLine();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/java/org/apache/hadoop/mapred/nativetask/buffer/ByteBufferDataReader.java",
      "extendedDetails": {}
    },
    "b2551c06a09fb80a9e69adbc01c4c34b93ad0139": {
      "type": "Yintroduced",
      "commitMessage": "Import initial code for MAPREDUCE-2841 (native output collector)\n\nContributed by:\n  Binglin Chang\n  Yang Dong\n  Sean Zhong\n  Manu Zhang\n  Zhongliang Zhu\n  Vincent Wang\n  Yan Dong\n  Cheng Lian\n  Xusen Yin\n  Fangqin Dai\n  Jiang Weihua\n  Gansha Wu\n  Avik Dey\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/MR-2841@1611413 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/07/14 10:44 AM",
      "commitName": "b2551c06a09fb80a9e69adbc01c4c34b93ad0139",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,46 @@\n+  public String readLine() throws IOException {\n+\n+    InputStream in \u003d this;\n+\n+    char buf[] \u003d lineCache;\n+\n+    if (buf \u003d\u003d null) {\n+      buf \u003d lineCache \u003d new char[128];\n+    }\n+\n+    int room \u003d buf.length;\n+    int offset \u003d 0;\n+    int c;\n+\n+    loop: while (true) {\n+      switch (c \u003d in.read()) {\n+      case -1:\n+      case \u0027\\n\u0027:\n+        break loop;\n+\n+      case \u0027\\r\u0027:\n+        final int c2 \u003d in.read();\n+        if ((c2 !\u003d \u0027\\n\u0027) \u0026\u0026 (c2 !\u003d -1)) {\n+          if (!(in instanceof PushbackInputStream)) {\n+            in \u003d new PushbackInputStream(in);\n+          }\n+          ((PushbackInputStream) in).unread(c2);\n+        }\n+        break loop;\n+\n+      default:\n+        if (--room \u003c 0) {\n+          buf \u003d new char[offset + 128];\n+          room \u003d buf.length - offset - 1;\n+          System.arraycopy(lineCache, 0, buf, 0, offset);\n+          lineCache \u003d buf;\n+        }\n+        buf[offset++] \u003d (char) c;\n+        break;\n+      }\n+    }\n+    if ((c \u003d\u003d -1) \u0026\u0026 (offset \u003d\u003d 0)) {\n+      return null;\n+    }\n+    return String.copyValueOf(buf, 0, offset);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public String readLine() throws IOException {\n\n    InputStream in \u003d this;\n\n    char buf[] \u003d lineCache;\n\n    if (buf \u003d\u003d null) {\n      buf \u003d lineCache \u003d new char[128];\n    }\n\n    int room \u003d buf.length;\n    int offset \u003d 0;\n    int c;\n\n    loop: while (true) {\n      switch (c \u003d in.read()) {\n      case -1:\n      case \u0027\\n\u0027:\n        break loop;\n\n      case \u0027\\r\u0027:\n        final int c2 \u003d in.read();\n        if ((c2 !\u003d \u0027\\n\u0027) \u0026\u0026 (c2 !\u003d -1)) {\n          if (!(in instanceof PushbackInputStream)) {\n            in \u003d new PushbackInputStream(in);\n          }\n          ((PushbackInputStream) in).unread(c2);\n        }\n        break loop;\n\n      default:\n        if (--room \u003c 0) {\n          buf \u003d new char[offset + 128];\n          room \u003d buf.length - offset - 1;\n          System.arraycopy(lineCache, 0, buf, 0, offset);\n          lineCache \u003d buf;\n        }\n        buf[offset++] \u003d (char) c;\n        break;\n      }\n    }\n    if ((c \u003d\u003d -1) \u0026\u0026 (offset \u003d\u003d 0)) {\n      return null;\n    }\n    return String.copyValueOf(buf, 0, offset);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-nativetask/src/main/java/org/apache/hadoop/mapred/nativetask/buffer/ByteBufferDataReader.java"
    }
  }
}