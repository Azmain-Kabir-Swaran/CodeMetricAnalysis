{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSNamesystem.java",
  "functionName": "removeXAttr",
  "functionId": "removeXAttr___src-String__xAttr-XAttr__logRetryCache-boolean",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
  "functionStartLine": 8349,
  "functionEndLine": 8373,
  "numCommitsSeen": 1340,
  "timeTaken": 37749,
  "changeHistory": [
    "1824aee9da4056de0fb638906b2172e486bbebe7",
    "4b95c242eca540455a4d5d0899aaf73b6064b5ea",
    "f600fbb6c4987c69292faea6b5abf022bb213ffd",
    "84a1321f6aa0af6895564a7c47f8f264656f0294",
    "9b90e52f1ec22c18cd535af2a569defcef65b093",
    "ff0b99eafeda035ebe0dc82cfe689808047a8893",
    "7817674a3a4d097b647dd77f1345787dd376d5ea",
    "6c5bbd7a42d1e8b4416fd8870fd60c67867b35c9",
    "8e253cb93030642f5a7324bad0f161cd0ad33206",
    "5343b43fd989ec596afed807ddce29ad96c23e2d",
    "78cafe34e6ed218b409057aac09828bf1c9fae9c",
    "d417e49ce4db119cdeb01be526cdb07f24baf388",
    "e98529858edeed11c4f900b0db30d7e4eb2ab1ec",
    "ac23a55547716df29b3e25c98a113399e184d9d1"
  ],
  "changeHistoryShort": {
    "1824aee9da4056de0fb638906b2172e486bbebe7": "Ybodychange",
    "4b95c242eca540455a4d5d0899aaf73b6064b5ea": "Ybodychange",
    "f600fbb6c4987c69292faea6b5abf022bb213ffd": "Ybodychange",
    "84a1321f6aa0af6895564a7c47f8f264656f0294": "Ybodychange",
    "9b90e52f1ec22c18cd535af2a569defcef65b093": "Ybodychange",
    "ff0b99eafeda035ebe0dc82cfe689808047a8893": "Ybodychange",
    "7817674a3a4d097b647dd77f1345787dd376d5ea": "Ybodychange",
    "6c5bbd7a42d1e8b4416fd8870fd60c67867b35c9": "Ybodychange",
    "8e253cb93030642f5a7324bad0f161cd0ad33206": "Ymultichange(Yparameterchange,Ybodychange)",
    "5343b43fd989ec596afed807ddce29ad96c23e2d": "Ybodychange",
    "78cafe34e6ed218b409057aac09828bf1c9fae9c": "Ybodychange",
    "d417e49ce4db119cdeb01be526cdb07f24baf388": "Ybodychange",
    "e98529858edeed11c4f900b0db30d7e4eb2ab1ec": "Ybodychange",
    "ac23a55547716df29b3e25c98a113399e184d9d1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1824aee9da4056de0fb638906b2172e486bbebe7": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-15217 Add more information to longest write/read lock held log\n\n",
      "commitDate": "18/04/20 1:52 PM",
      "commitName": "1824aee9da4056de0fb638906b2172e486bbebe7",
      "commitAuthor": "Toshihiro Suzuki",
      "commitDateOld": "25/03/20 10:28 AM",
      "commitNameOld": "a700803a18fb957d2799001a2ce1dcb70f75c080",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 24.14,
      "commitsBetweenForRepo": 78,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,25 @@\n   void removeXAttr(String src, XAttr xAttr, boolean logRetryCache)\n       throws IOException {\n     final String operationName \u003d \"removeXAttr\";\n     FileStatus auditStat \u003d null;\n     checkOperation(OperationCategory.WRITE);\n     final FSPermissionChecker pc \u003d getPermissionChecker();\n     FSPermissionChecker.setOperationType(operationName);\n     try {\n       writeLock();\n       try {\n         checkOperation(OperationCategory.WRITE);\n         checkNameNodeSafeMode(\"Cannot remove XAttr entry on \" + src);\n         auditStat \u003d FSDirXAttrOp.removeXAttr(dir, pc, src, xAttr,\n             logRetryCache);\n       } finally {\n-        writeUnlock(operationName);\n+        writeUnlock(operationName,\n+            getLockReportInfoSupplier(src, null, auditStat));\n       }\n     } catch (AccessControlException e) {\n       logAuditEvent(false, operationName, src);\n       throw e;\n     }\n     getEditLog().logSync();\n     logAuditEvent(true, operationName, src, null, auditStat);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void removeXAttr(String src, XAttr xAttr, boolean logRetryCache)\n      throws IOException {\n    final String operationName \u003d \"removeXAttr\";\n    FileStatus auditStat \u003d null;\n    checkOperation(OperationCategory.WRITE);\n    final FSPermissionChecker pc \u003d getPermissionChecker();\n    FSPermissionChecker.setOperationType(operationName);\n    try {\n      writeLock();\n      try {\n        checkOperation(OperationCategory.WRITE);\n        checkNameNodeSafeMode(\"Cannot remove XAttr entry on \" + src);\n        auditStat \u003d FSDirXAttrOp.removeXAttr(dir, pc, src, xAttr,\n            logRetryCache);\n      } finally {\n        writeUnlock(operationName,\n            getLockReportInfoSupplier(src, null, auditStat));\n      }\n    } catch (AccessControlException e) {\n      logAuditEvent(false, operationName, src);\n      throw e;\n    }\n    getEditLog().logSync();\n    logAuditEvent(true, operationName, src, null, auditStat);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "4b95c242eca540455a4d5d0899aaf73b6064b5ea": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14743. Enhance INodeAttributeProvider/ AccessControlEnforcer Interface in HDFS to support Authorization of mkdir, rm, rmdir, copy, move etc... (#1829)\n\nReviewed-by: Xiaoyu Yao \u003cxyao@apache.org\u003e",
      "commitDate": "13/03/20 11:29 AM",
      "commitName": "4b95c242eca540455a4d5d0899aaf73b6064b5ea",
      "commitAuthor": "Wei-Chiu Chuang",
      "commitDateOld": "27/02/20 8:49 AM",
      "commitNameOld": "cd2c6b1aac470991b9b90339ce2721ba179e7c48",
      "commitAuthorOld": "Ayush Saxena",
      "daysBetweenCommits": 15.07,
      "commitsBetweenForRepo": 51,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,24 @@\n   void removeXAttr(String src, XAttr xAttr, boolean logRetryCache)\n       throws IOException {\n     final String operationName \u003d \"removeXAttr\";\n     FileStatus auditStat \u003d null;\n     checkOperation(OperationCategory.WRITE);\n     final FSPermissionChecker pc \u003d getPermissionChecker();\n+    FSPermissionChecker.setOperationType(operationName);\n     try {\n       writeLock();\n       try {\n         checkOperation(OperationCategory.WRITE);\n         checkNameNodeSafeMode(\"Cannot remove XAttr entry on \" + src);\n         auditStat \u003d FSDirXAttrOp.removeXAttr(dir, pc, src, xAttr,\n             logRetryCache);\n       } finally {\n         writeUnlock(operationName);\n       }\n     } catch (AccessControlException e) {\n       logAuditEvent(false, operationName, src);\n       throw e;\n     }\n     getEditLog().logSync();\n     logAuditEvent(true, operationName, src, null, auditStat);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void removeXAttr(String src, XAttr xAttr, boolean logRetryCache)\n      throws IOException {\n    final String operationName \u003d \"removeXAttr\";\n    FileStatus auditStat \u003d null;\n    checkOperation(OperationCategory.WRITE);\n    final FSPermissionChecker pc \u003d getPermissionChecker();\n    FSPermissionChecker.setOperationType(operationName);\n    try {\n      writeLock();\n      try {\n        checkOperation(OperationCategory.WRITE);\n        checkNameNodeSafeMode(\"Cannot remove XAttr entry on \" + src);\n        auditStat \u003d FSDirXAttrOp.removeXAttr(dir, pc, src, xAttr,\n            logRetryCache);\n      } finally {\n        writeUnlock(operationName);\n      }\n    } catch (AccessControlException e) {\n      logAuditEvent(false, operationName, src);\n      throw e;\n    }\n    getEditLog().logSync();\n    logAuditEvent(true, operationName, src, null, auditStat);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "f600fbb6c4987c69292faea6b5abf022bb213ffd": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11246. FSNameSystem#logAuditEvent should be called outside the read or write locks. Contributed by He Xiaoqiao, Kuhu Shukla.\n\nSigned-off-by: Wei-Chiu Chuang \u003cweichiu@apache.org\u003e\nCo-authored-by: Kuhu Shukla \u003ckshukla@apache.org\u003e\n",
      "commitDate": "29/08/19 10:10 AM",
      "commitName": "f600fbb6c4987c69292faea6b5abf022bb213ffd",
      "commitAuthor": "He Xiaoqiao",
      "commitDateOld": "27/08/19 3:26 PM",
      "commitNameOld": "dde9399b37bffb77da17c025f0b9b673d7088bc6",
      "commitAuthorOld": "He Xiaoqiao",
      "daysBetweenCommits": 1.78,
      "commitsBetweenForRepo": 27,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,23 @@\n   void removeXAttr(String src, XAttr xAttr, boolean logRetryCache)\n       throws IOException {\n     final String operationName \u003d \"removeXAttr\";\n     FileStatus auditStat \u003d null;\n     checkOperation(OperationCategory.WRITE);\n     final FSPermissionChecker pc \u003d getPermissionChecker();\n-    writeLock();\n     try {\n-      checkOperation(OperationCategory.WRITE);\n-      checkNameNodeSafeMode(\"Cannot remove XAttr entry on \" + src);\n-      auditStat \u003d FSDirXAttrOp.removeXAttr(dir, pc, src, xAttr, logRetryCache);\n+      writeLock();\n+      try {\n+        checkOperation(OperationCategory.WRITE);\n+        checkNameNodeSafeMode(\"Cannot remove XAttr entry on \" + src);\n+        auditStat \u003d FSDirXAttrOp.removeXAttr(dir, pc, src, xAttr,\n+            logRetryCache);\n+      } finally {\n+        writeUnlock(operationName);\n+      }\n     } catch (AccessControlException e) {\n       logAuditEvent(false, operationName, src);\n       throw e;\n-    } finally {\n-      writeUnlock(operationName);\n     }\n     getEditLog().logSync();\n     logAuditEvent(true, operationName, src, null, auditStat);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void removeXAttr(String src, XAttr xAttr, boolean logRetryCache)\n      throws IOException {\n    final String operationName \u003d \"removeXAttr\";\n    FileStatus auditStat \u003d null;\n    checkOperation(OperationCategory.WRITE);\n    final FSPermissionChecker pc \u003d getPermissionChecker();\n    try {\n      writeLock();\n      try {\n        checkOperation(OperationCategory.WRITE);\n        checkNameNodeSafeMode(\"Cannot remove XAttr entry on \" + src);\n        auditStat \u003d FSDirXAttrOp.removeXAttr(dir, pc, src, xAttr,\n            logRetryCache);\n      } finally {\n        writeUnlock(operationName);\n      }\n    } catch (AccessControlException e) {\n      logAuditEvent(false, operationName, src);\n      throw e;\n    }\n    getEditLog().logSync();\n    logAuditEvent(true, operationName, src, null, auditStat);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "84a1321f6aa0af6895564a7c47f8f264656f0294": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13136. Avoid taking FSN lock while doing group member lookup for FSD permission check. Contributed by Xiaoyu Yao.\n",
      "commitDate": "22/02/18 11:32 AM",
      "commitName": "84a1321f6aa0af6895564a7c47f8f264656f0294",
      "commitAuthor": "Xiaoyu Yao",
      "commitDateOld": "15/02/18 1:32 PM",
      "commitNameOld": "47473952e56b0380147d42f4110ad03c2276c961",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 6.92,
      "commitsBetweenForRepo": 36,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,20 @@\n   void removeXAttr(String src, XAttr xAttr, boolean logRetryCache)\n       throws IOException {\n     final String operationName \u003d \"removeXAttr\";\n     FileStatus auditStat \u003d null;\n+    checkOperation(OperationCategory.WRITE);\n+    final FSPermissionChecker pc \u003d getPermissionChecker();\n     writeLock();\n     try {\n       checkOperation(OperationCategory.WRITE);\n       checkNameNodeSafeMode(\"Cannot remove XAttr entry on \" + src);\n-      auditStat \u003d FSDirXAttrOp.removeXAttr(dir, src, xAttr, logRetryCache);\n+      auditStat \u003d FSDirXAttrOp.removeXAttr(dir, pc, src, xAttr, logRetryCache);\n     } catch (AccessControlException e) {\n       logAuditEvent(false, operationName, src);\n       throw e;\n     } finally {\n       writeUnlock(operationName);\n     }\n     getEditLog().logSync();\n     logAuditEvent(true, operationName, src, null, auditStat);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void removeXAttr(String src, XAttr xAttr, boolean logRetryCache)\n      throws IOException {\n    final String operationName \u003d \"removeXAttr\";\n    FileStatus auditStat \u003d null;\n    checkOperation(OperationCategory.WRITE);\n    final FSPermissionChecker pc \u003d getPermissionChecker();\n    writeLock();\n    try {\n      checkOperation(OperationCategory.WRITE);\n      checkNameNodeSafeMode(\"Cannot remove XAttr entry on \" + src);\n      auditStat \u003d FSDirXAttrOp.removeXAttr(dir, pc, src, xAttr, logRetryCache);\n    } catch (AccessControlException e) {\n      logAuditEvent(false, operationName, src);\n      throw e;\n    } finally {\n      writeUnlock(operationName);\n    }\n    getEditLog().logSync();\n    logAuditEvent(true, operationName, src, null, auditStat);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "9b90e52f1ec22c18cd535af2a569defcef65b093": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11641. Reduce cost of audit logging by using FileStatus instead of HdfsFileStatus. Contributed by Daryn Sharp.\n",
      "commitDate": "16/05/17 9:28 AM",
      "commitName": "9b90e52f1ec22c18cd535af2a569defcef65b093",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "04/05/17 11:39 AM",
      "commitNameOld": "c2a52ef9c29459ff9ef3e23b29e14912bfdb1405",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 11.91,
      "commitsBetweenForRepo": 58,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   void removeXAttr(String src, XAttr xAttr, boolean logRetryCache)\n       throws IOException {\n     final String operationName \u003d \"removeXAttr\";\n-    HdfsFileStatus auditStat \u003d null;\n+    FileStatus auditStat \u003d null;\n     writeLock();\n     try {\n       checkOperation(OperationCategory.WRITE);\n       checkNameNodeSafeMode(\"Cannot remove XAttr entry on \" + src);\n       auditStat \u003d FSDirXAttrOp.removeXAttr(dir, src, xAttr, logRetryCache);\n     } catch (AccessControlException e) {\n       logAuditEvent(false, operationName, src);\n       throw e;\n     } finally {\n       writeUnlock(operationName);\n     }\n     getEditLog().logSync();\n     logAuditEvent(true, operationName, src, null, auditStat);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void removeXAttr(String src, XAttr xAttr, boolean logRetryCache)\n      throws IOException {\n    final String operationName \u003d \"removeXAttr\";\n    FileStatus auditStat \u003d null;\n    writeLock();\n    try {\n      checkOperation(OperationCategory.WRITE);\n      checkNameNodeSafeMode(\"Cannot remove XAttr entry on \" + src);\n      auditStat \u003d FSDirXAttrOp.removeXAttr(dir, src, xAttr, logRetryCache);\n    } catch (AccessControlException e) {\n      logAuditEvent(false, operationName, src);\n      throw e;\n    } finally {\n      writeUnlock(operationName);\n    }\n    getEditLog().logSync();\n    logAuditEvent(true, operationName, src, null, auditStat);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "ff0b99eafeda035ebe0dc82cfe689808047a8893": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10872. Add MutableRate metrics for FSNamesystemLock operations. Contributed by Erik Krogen.\n",
      "commitDate": "14/11/16 11:05 AM",
      "commitName": "ff0b99eafeda035ebe0dc82cfe689808047a8893",
      "commitAuthor": "Zhe Zhang",
      "commitDateOld": "08/11/16 6:17 PM",
      "commitNameOld": "ed0bebabaaf27cd730f7f8eb002d92c9c7db327d",
      "commitAuthorOld": "Brahma Reddy Battula",
      "daysBetweenCommits": 5.7,
      "commitsBetweenForRepo": 36,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,18 @@\n   void removeXAttr(String src, XAttr xAttr, boolean logRetryCache)\n       throws IOException {\n+    final String operationName \u003d \"removeXAttr\";\n     HdfsFileStatus auditStat \u003d null;\n     writeLock();\n     try {\n       checkOperation(OperationCategory.WRITE);\n       checkNameNodeSafeMode(\"Cannot remove XAttr entry on \" + src);\n       auditStat \u003d FSDirXAttrOp.removeXAttr(dir, src, xAttr, logRetryCache);\n     } catch (AccessControlException e) {\n-      logAuditEvent(false, \"removeXAttr\", src);\n+      logAuditEvent(false, operationName, src);\n       throw e;\n     } finally {\n-      writeUnlock();\n+      writeUnlock(operationName);\n     }\n     getEditLog().logSync();\n-    logAuditEvent(true, \"removeXAttr\", src, null, auditStat);\n+    logAuditEvent(true, operationName, src, null, auditStat);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void removeXAttr(String src, XAttr xAttr, boolean logRetryCache)\n      throws IOException {\n    final String operationName \u003d \"removeXAttr\";\n    HdfsFileStatus auditStat \u003d null;\n    writeLock();\n    try {\n      checkOperation(OperationCategory.WRITE);\n      checkNameNodeSafeMode(\"Cannot remove XAttr entry on \" + src);\n      auditStat \u003d FSDirXAttrOp.removeXAttr(dir, src, xAttr, logRetryCache);\n    } catch (AccessControlException e) {\n      logAuditEvent(false, operationName, src);\n      throw e;\n    } finally {\n      writeUnlock(operationName);\n    }\n    getEditLog().logSync();\n    logAuditEvent(true, operationName, src, null, auditStat);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "7817674a3a4d097b647dd77f1345787dd376d5ea": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7609. Avoid retry cache collision when Standby NameNode loading edits. Contributed by Ming Ma.\n",
      "commitDate": "29/05/15 11:05 AM",
      "commitName": "7817674a3a4d097b647dd77f1345787dd376d5ea",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "27/05/15 3:42 PM",
      "commitNameOld": "4928f5473394981829e5ffd4b16ea0801baf5c45",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 1.81,
      "commitsBetweenForRepo": 27,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,17 @@\n   void removeXAttr(String src, XAttr xAttr, boolean logRetryCache)\n       throws IOException {\n-    checkOperation(OperationCategory.WRITE);\n     HdfsFileStatus auditStat \u003d null;\n     writeLock();\n     try {\n       checkOperation(OperationCategory.WRITE);\n       checkNameNodeSafeMode(\"Cannot remove XAttr entry on \" + src);\n       auditStat \u003d FSDirXAttrOp.removeXAttr(dir, src, xAttr, logRetryCache);\n     } catch (AccessControlException e) {\n       logAuditEvent(false, \"removeXAttr\", src);\n       throw e;\n     } finally {\n       writeUnlock();\n     }\n     getEditLog().logSync();\n     logAuditEvent(true, \"removeXAttr\", src, null, auditStat);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void removeXAttr(String src, XAttr xAttr, boolean logRetryCache)\n      throws IOException {\n    HdfsFileStatus auditStat \u003d null;\n    writeLock();\n    try {\n      checkOperation(OperationCategory.WRITE);\n      checkNameNodeSafeMode(\"Cannot remove XAttr entry on \" + src);\n      auditStat \u003d FSDirXAttrOp.removeXAttr(dir, src, xAttr, logRetryCache);\n    } catch (AccessControlException e) {\n      logAuditEvent(false, \"removeXAttr\", src);\n      throw e;\n    } finally {\n      writeUnlock();\n    }\n    getEditLog().logSync();\n    logAuditEvent(true, \"removeXAttr\", src, null, auditStat);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "6c5bbd7a42d1e8b4416fd8870fd60c67867b35c9": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7486. Consolidate XAttr-related implementation into a single class. Contributed by Haohui Mai.\n",
      "commitDate": "08/12/14 11:52 AM",
      "commitName": "6c5bbd7a42d1e8b4416fd8870fd60c67867b35c9",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "06/12/14 2:20 PM",
      "commitNameOld": "9297f980c2de8886ff970946a2513e6890cd5552",
      "commitAuthorOld": "cnauroth",
      "daysBetweenCommits": 1.9,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,18 @@\n   void removeXAttr(String src, XAttr xAttr, boolean logRetryCache)\n       throws IOException {\n+    checkOperation(OperationCategory.WRITE);\n+    HdfsFileStatus auditStat \u003d null;\n+    writeLock();\n     try {\n-      removeXAttrInt(src, xAttr, logRetryCache);\n+      checkOperation(OperationCategory.WRITE);\n+      checkNameNodeSafeMode(\"Cannot remove XAttr entry on \" + src);\n+      auditStat \u003d FSDirXAttrOp.removeXAttr(dir, src, xAttr, logRetryCache);\n     } catch (AccessControlException e) {\n       logAuditEvent(false, \"removeXAttr\", src);\n       throw e;\n+    } finally {\n+      writeUnlock();\n     }\n+    getEditLog().logSync();\n+    logAuditEvent(true, \"removeXAttr\", src, null, auditStat);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void removeXAttr(String src, XAttr xAttr, boolean logRetryCache)\n      throws IOException {\n    checkOperation(OperationCategory.WRITE);\n    HdfsFileStatus auditStat \u003d null;\n    writeLock();\n    try {\n      checkOperation(OperationCategory.WRITE);\n      checkNameNodeSafeMode(\"Cannot remove XAttr entry on \" + src);\n      auditStat \u003d FSDirXAttrOp.removeXAttr(dir, src, xAttr, logRetryCache);\n    } catch (AccessControlException e) {\n      logAuditEvent(false, \"removeXAttr\", src);\n      throw e;\n    } finally {\n      writeUnlock();\n    }\n    getEditLog().logSync();\n    logAuditEvent(true, \"removeXAttr\", src, null, auditStat);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "8e253cb93030642f5a7324bad0f161cd0ad33206": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-7412. Move RetryCache to NameNodeRpcServer. Contributed by Haohui Mai.\n",
      "commitDate": "24/11/14 11:11 AM",
      "commitName": "8e253cb93030642f5a7324bad0f161cd0ad33206",
      "commitAuthor": "Haohui Mai",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-7412. Move RetryCache to NameNodeRpcServer. Contributed by Haohui Mai.\n",
          "commitDate": "24/11/14 11:11 AM",
          "commitName": "8e253cb93030642f5a7324bad0f161cd0ad33206",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "24/11/14 10:46 AM",
          "commitNameOld": "daacbc18d739d030822df0b75205eeb067f89850",
          "commitAuthorOld": "Colin Patrick Mccabe",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,9 @@\n-  void removeXAttr(String src, XAttr xAttr) throws IOException {\n-    CacheEntry cacheEntry \u003d RetryCache.waitForCompletion(retryCache);\n-    if (cacheEntry !\u003d null \u0026\u0026 cacheEntry.isSuccess()) {\n-      return; // Return previous response\n-    }\n-    boolean success \u003d false;\n+  void removeXAttr(String src, XAttr xAttr, boolean logRetryCache)\n+      throws IOException {\n     try {\n-      removeXAttrInt(src, xAttr, cacheEntry !\u003d null);\n-      success \u003d true;\n+      removeXAttrInt(src, xAttr, logRetryCache);\n     } catch (AccessControlException e) {\n       logAuditEvent(false, \"removeXAttr\", src);\n       throw e;\n-    } finally {\n-      RetryCache.setState(cacheEntry, success);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void removeXAttr(String src, XAttr xAttr, boolean logRetryCache)\n      throws IOException {\n    try {\n      removeXAttrInt(src, xAttr, logRetryCache);\n    } catch (AccessControlException e) {\n      logAuditEvent(false, \"removeXAttr\", src);\n      throw e;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
          "extendedDetails": {
            "oldValue": "[src-String, xAttr-XAttr]",
            "newValue": "[src-String, xAttr-XAttr, logRetryCache-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-7412. Move RetryCache to NameNodeRpcServer. Contributed by Haohui Mai.\n",
          "commitDate": "24/11/14 11:11 AM",
          "commitName": "8e253cb93030642f5a7324bad0f161cd0ad33206",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "24/11/14 10:46 AM",
          "commitNameOld": "daacbc18d739d030822df0b75205eeb067f89850",
          "commitAuthorOld": "Colin Patrick Mccabe",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,9 @@\n-  void removeXAttr(String src, XAttr xAttr) throws IOException {\n-    CacheEntry cacheEntry \u003d RetryCache.waitForCompletion(retryCache);\n-    if (cacheEntry !\u003d null \u0026\u0026 cacheEntry.isSuccess()) {\n-      return; // Return previous response\n-    }\n-    boolean success \u003d false;\n+  void removeXAttr(String src, XAttr xAttr, boolean logRetryCache)\n+      throws IOException {\n     try {\n-      removeXAttrInt(src, xAttr, cacheEntry !\u003d null);\n-      success \u003d true;\n+      removeXAttrInt(src, xAttr, logRetryCache);\n     } catch (AccessControlException e) {\n       logAuditEvent(false, \"removeXAttr\", src);\n       throw e;\n-    } finally {\n-      RetryCache.setState(cacheEntry, success);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void removeXAttr(String src, XAttr xAttr, boolean logRetryCache)\n      throws IOException {\n    try {\n      removeXAttrInt(src, xAttr, logRetryCache);\n    } catch (AccessControlException e) {\n      logAuditEvent(false, \"removeXAttr\", src);\n      throw e;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
          "extendedDetails": {}
        }
      ]
    },
    "5343b43fd989ec596afed807ddce29ad96c23e2d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6422. getfattr in CLI doesn\u0027t throw exception or return non-0 return code when xattr doesn\u0027t exist. (Charles Lamb via umamahesh)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1612922 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/07/14 12:05 PM",
      "commitName": "5343b43fd989ec596afed807ddce29ad96c23e2d",
      "commitAuthor": "Uma Maheswara Rao G",
      "commitDateOld": "22/07/14 10:47 AM",
      "commitNameOld": "c83c5b868ea34925ecb1597cf1ceb88524ded185",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 1.05,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,16 @@\n   void removeXAttr(String src, XAttr xAttr) throws IOException {\n-    nnConf.checkXAttrsConfigFlag();\n-    HdfsFileStatus resultingStat \u003d null;\n-    FSPermissionChecker pc \u003d getPermissionChecker();\n-    try {\n-      XAttrPermissionFilter.checkPermissionForApi(pc, xAttr);\n-    } catch (AccessControlException e) {\n-      logAuditEvent(false, \"removeXAttr\", src);\n-      throw e;\n+    CacheEntry cacheEntry \u003d RetryCache.waitForCompletion(retryCache);\n+    if (cacheEntry !\u003d null \u0026\u0026 cacheEntry.isSuccess()) {\n+      return; // Return previous response\n     }\n-    checkOperation(OperationCategory.WRITE);\n-    byte[][] pathComponents \u003d FSDirectory.getPathComponentsForReservedPath(src);\n-    writeLock();\n+    boolean success \u003d false;\n     try {\n-      checkOperation(OperationCategory.WRITE);\n-      checkNameNodeSafeMode(\"Cannot remove XAttr entry on \" + src);\n-      src \u003d FSDirectory.resolvePath(src, pathComponents, dir);\n-      checkXAttrChangeAccess(src, xAttr, pc);\n-\n-      List\u003cXAttr\u003e xAttrs \u003d Lists.newArrayListWithCapacity(1);\n-      xAttrs.add(xAttr);\n-      List\u003cXAttr\u003e removedXAttrs \u003d dir.removeXAttrs(src, xAttrs);\n-      if (removedXAttrs !\u003d null \u0026\u0026 !removedXAttrs.isEmpty()) {\n-        getEditLog().logRemoveXAttrs(src, removedXAttrs);\n-      }\n-      resultingStat \u003d getAuditFileInfo(src, false);\n+      removeXAttrInt(src, xAttr, cacheEntry !\u003d null);\n+      success \u003d true;\n     } catch (AccessControlException e) {\n       logAuditEvent(false, \"removeXAttr\", src);\n       throw e;\n     } finally {\n-      writeUnlock();\n+      RetryCache.setState(cacheEntry, success);\n     }\n-    getEditLog().logSync();\n-    logAuditEvent(true, \"removeXAttr\", src, null, resultingStat);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void removeXAttr(String src, XAttr xAttr) throws IOException {\n    CacheEntry cacheEntry \u003d RetryCache.waitForCompletion(retryCache);\n    if (cacheEntry !\u003d null \u0026\u0026 cacheEntry.isSuccess()) {\n      return; // Return previous response\n    }\n    boolean success \u003d false;\n    try {\n      removeXAttrInt(src, xAttr, cacheEntry !\u003d null);\n      success \u003d true;\n    } catch (AccessControlException e) {\n      logAuditEvent(false, \"removeXAttr\", src);\n      throw e;\n    } finally {\n      RetryCache.setState(cacheEntry, success);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "78cafe34e6ed218b409057aac09828bf1c9fae9c": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6556. Refine XAttr permissions. Contributed by Uma Maheswara Rao G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1606320 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/06/14 4:40 AM",
      "commitName": "78cafe34e6ed218b409057aac09828bf1c9fae9c",
      "commitAuthor": "Uma Maheswara Rao G",
      "commitDateOld": "24/06/14 12:59 PM",
      "commitNameOld": "bdf3de9f6b377b6bfeaa95faadd12e7b29ece5dc",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 3.65,
      "commitsBetweenForRepo": 26,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,35 @@\n   void removeXAttr(String src, XAttr xAttr) throws IOException {\n     nnConf.checkXAttrsConfigFlag();\n     HdfsFileStatus resultingStat \u003d null;\n     FSPermissionChecker pc \u003d getPermissionChecker();\n     try {\n       XAttrPermissionFilter.checkPermissionForApi(pc, xAttr);\n     } catch (AccessControlException e) {\n       logAuditEvent(false, \"removeXAttr\", src);\n       throw e;\n     }\n     checkOperation(OperationCategory.WRITE);\n     byte[][] pathComponents \u003d FSDirectory.getPathComponentsForReservedPath(src);\n     writeLock();\n     try {\n       checkOperation(OperationCategory.WRITE);\n       checkNameNodeSafeMode(\"Cannot remove XAttr entry on \" + src);\n       src \u003d FSDirectory.resolvePath(src, pathComponents, dir);\n-      if (isPermissionEnabled) {\n-        checkOwner(pc, src);\n-        checkPathAccess(pc, src, FsAction.WRITE);\n-      }\n+      checkXAttrChangeAccess(src, xAttr, pc);\n \n       List\u003cXAttr\u003e xAttrs \u003d Lists.newArrayListWithCapacity(1);\n       xAttrs.add(xAttr);\n       List\u003cXAttr\u003e removedXAttrs \u003d dir.removeXAttrs(src, xAttrs);\n       if (removedXAttrs !\u003d null \u0026\u0026 !removedXAttrs.isEmpty()) {\n         getEditLog().logRemoveXAttrs(src, removedXAttrs);\n       }\n       resultingStat \u003d getAuditFileInfo(src, false);\n     } catch (AccessControlException e) {\n       logAuditEvent(false, \"removeXAttr\", src);\n       throw e;\n     } finally {\n       writeUnlock();\n     }\n     getEditLog().logSync();\n     logAuditEvent(true, \"removeXAttr\", src, null, resultingStat);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void removeXAttr(String src, XAttr xAttr) throws IOException {\n    nnConf.checkXAttrsConfigFlag();\n    HdfsFileStatus resultingStat \u003d null;\n    FSPermissionChecker pc \u003d getPermissionChecker();\n    try {\n      XAttrPermissionFilter.checkPermissionForApi(pc, xAttr);\n    } catch (AccessControlException e) {\n      logAuditEvent(false, \"removeXAttr\", src);\n      throw e;\n    }\n    checkOperation(OperationCategory.WRITE);\n    byte[][] pathComponents \u003d FSDirectory.getPathComponentsForReservedPath(src);\n    writeLock();\n    try {\n      checkOperation(OperationCategory.WRITE);\n      checkNameNodeSafeMode(\"Cannot remove XAttr entry on \" + src);\n      src \u003d FSDirectory.resolvePath(src, pathComponents, dir);\n      checkXAttrChangeAccess(src, xAttr, pc);\n\n      List\u003cXAttr\u003e xAttrs \u003d Lists.newArrayListWithCapacity(1);\n      xAttrs.add(xAttr);\n      List\u003cXAttr\u003e removedXAttrs \u003d dir.removeXAttrs(src, xAttrs);\n      if (removedXAttrs !\u003d null \u0026\u0026 !removedXAttrs.isEmpty()) {\n        getEditLog().logRemoveXAttrs(src, removedXAttrs);\n      }\n      resultingStat \u003d getAuditFileInfo(src, false);\n    } catch (AccessControlException e) {\n      logAuditEvent(false, \"removeXAttr\", src);\n      throw e;\n    } finally {\n      writeUnlock();\n    }\n    getEditLog().logSync();\n    logAuditEvent(true, \"removeXAttr\", src, null, resultingStat);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "d417e49ce4db119cdeb01be526cdb07f24baf388": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6492. Support create-time xattrs and atomically setting multiple xattrs. (wang)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1603971 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/06/14 10:37 AM",
      "commitName": "d417e49ce4db119cdeb01be526cdb07f24baf388",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "18/06/14 9:13 PM",
      "commitNameOld": "a4e0ff5e052abad498595ee198b49c5310c9ec0d",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 0.56,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,38 @@\n   void removeXAttr(String src, XAttr xAttr) throws IOException {\n     nnConf.checkXAttrsConfigFlag();\n     HdfsFileStatus resultingStat \u003d null;\n     FSPermissionChecker pc \u003d getPermissionChecker();\n     try {\n       XAttrPermissionFilter.checkPermissionForApi(pc, xAttr);\n     } catch (AccessControlException e) {\n       logAuditEvent(false, \"removeXAttr\", src);\n       throw e;\n     }\n     checkOperation(OperationCategory.WRITE);\n     byte[][] pathComponents \u003d FSDirectory.getPathComponentsForReservedPath(src);\n     writeLock();\n     try {\n       checkOperation(OperationCategory.WRITE);\n       checkNameNodeSafeMode(\"Cannot remove XAttr entry on \" + src);\n       src \u003d FSDirectory.resolvePath(src, pathComponents, dir);\n       if (isPermissionEnabled) {\n         checkOwner(pc, src);\n         checkPathAccess(pc, src, FsAction.WRITE);\n       }\n-      \n-      XAttr removedXAttr \u003d dir.removeXAttr(src, xAttr);\n-      if (removedXAttr !\u003d null) {\n-        getEditLog().logRemoveXAttr(src, removedXAttr);\n+\n+      List\u003cXAttr\u003e xAttrs \u003d Lists.newArrayListWithCapacity(1);\n+      xAttrs.add(xAttr);\n+      List\u003cXAttr\u003e removedXAttrs \u003d dir.removeXAttrs(src, xAttrs);\n+      if (removedXAttrs !\u003d null \u0026\u0026 !removedXAttrs.isEmpty()) {\n+        getEditLog().logRemoveXAttrs(src, removedXAttrs);\n       }\n       resultingStat \u003d getAuditFileInfo(src, false);\n     } catch (AccessControlException e) {\n       logAuditEvent(false, \"removeXAttr\", src);\n       throw e;\n     } finally {\n       writeUnlock();\n     }\n     getEditLog().logSync();\n     logAuditEvent(true, \"removeXAttr\", src, null, resultingStat);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void removeXAttr(String src, XAttr xAttr) throws IOException {\n    nnConf.checkXAttrsConfigFlag();\n    HdfsFileStatus resultingStat \u003d null;\n    FSPermissionChecker pc \u003d getPermissionChecker();\n    try {\n      XAttrPermissionFilter.checkPermissionForApi(pc, xAttr);\n    } catch (AccessControlException e) {\n      logAuditEvent(false, \"removeXAttr\", src);\n      throw e;\n    }\n    checkOperation(OperationCategory.WRITE);\n    byte[][] pathComponents \u003d FSDirectory.getPathComponentsForReservedPath(src);\n    writeLock();\n    try {\n      checkOperation(OperationCategory.WRITE);\n      checkNameNodeSafeMode(\"Cannot remove XAttr entry on \" + src);\n      src \u003d FSDirectory.resolvePath(src, pathComponents, dir);\n      if (isPermissionEnabled) {\n        checkOwner(pc, src);\n        checkPathAccess(pc, src, FsAction.WRITE);\n      }\n\n      List\u003cXAttr\u003e xAttrs \u003d Lists.newArrayListWithCapacity(1);\n      xAttrs.add(xAttr);\n      List\u003cXAttr\u003e removedXAttrs \u003d dir.removeXAttrs(src, xAttrs);\n      if (removedXAttrs !\u003d null \u0026\u0026 !removedXAttrs.isEmpty()) {\n        getEditLog().logRemoveXAttrs(src, removedXAttrs);\n      }\n      resultingStat \u003d getAuditFileInfo(src, false);\n    } catch (AccessControlException e) {\n      logAuditEvent(false, \"removeXAttr\", src);\n      throw e;\n    } finally {\n      writeUnlock();\n    }\n    getEditLog().logSync();\n    logAuditEvent(true, \"removeXAttr\", src, null, resultingStat);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "e98529858edeed11c4f900b0db30d7e4eb2ab1ec": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6315. Decouple recording edit logs from FSDirectory. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1601960 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/06/14 10:22 AM",
      "commitName": "e98529858edeed11c4f900b0db30d7e4eb2ab1ec",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "03/06/14 11:33 AM",
      "commitNameOld": "02fcb6b6bae7c3fe2a10b00b2a563e4098ff225e",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 7.95,
      "commitsBetweenForRepo": 35,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,36 @@\n   void removeXAttr(String src, XAttr xAttr) throws IOException {\n     nnConf.checkXAttrsConfigFlag();\n     HdfsFileStatus resultingStat \u003d null;\n     FSPermissionChecker pc \u003d getPermissionChecker();\n     try {\n       XAttrPermissionFilter.checkPermissionForApi(pc, xAttr);\n     } catch (AccessControlException e) {\n       logAuditEvent(false, \"removeXAttr\", src);\n       throw e;\n     }\n     checkOperation(OperationCategory.WRITE);\n     byte[][] pathComponents \u003d FSDirectory.getPathComponentsForReservedPath(src);\n     writeLock();\n     try {\n       checkOperation(OperationCategory.WRITE);\n       checkNameNodeSafeMode(\"Cannot remove XAttr entry on \" + src);\n       src \u003d FSDirectory.resolvePath(src, pathComponents, dir);\n       if (isPermissionEnabled) {\n         checkOwner(pc, src);\n         checkPathAccess(pc, src, FsAction.WRITE);\n       }\n       \n-      dir.removeXAttr(src, xAttr);\n+      XAttr removedXAttr \u003d dir.removeXAttr(src, xAttr);\n+      if (removedXAttr !\u003d null) {\n+        getEditLog().logRemoveXAttr(src, removedXAttr);\n+      }\n       resultingStat \u003d getAuditFileInfo(src, false);\n     } catch (AccessControlException e) {\n       logAuditEvent(false, \"removeXAttr\", src);\n       throw e;\n     } finally {\n       writeUnlock();\n     }\n     getEditLog().logSync();\n     logAuditEvent(true, \"removeXAttr\", src, null, resultingStat);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void removeXAttr(String src, XAttr xAttr) throws IOException {\n    nnConf.checkXAttrsConfigFlag();\n    HdfsFileStatus resultingStat \u003d null;\n    FSPermissionChecker pc \u003d getPermissionChecker();\n    try {\n      XAttrPermissionFilter.checkPermissionForApi(pc, xAttr);\n    } catch (AccessControlException e) {\n      logAuditEvent(false, \"removeXAttr\", src);\n      throw e;\n    }\n    checkOperation(OperationCategory.WRITE);\n    byte[][] pathComponents \u003d FSDirectory.getPathComponentsForReservedPath(src);\n    writeLock();\n    try {\n      checkOperation(OperationCategory.WRITE);\n      checkNameNodeSafeMode(\"Cannot remove XAttr entry on \" + src);\n      src \u003d FSDirectory.resolvePath(src, pathComponents, dir);\n      if (isPermissionEnabled) {\n        checkOwner(pc, src);\n        checkPathAccess(pc, src, FsAction.WRITE);\n      }\n      \n      XAttr removedXAttr \u003d dir.removeXAttr(src, xAttr);\n      if (removedXAttr !\u003d null) {\n        getEditLog().logRemoveXAttr(src, removedXAttr);\n      }\n      resultingStat \u003d getAuditFileInfo(src, false);\n    } catch (AccessControlException e) {\n      logAuditEvent(false, \"removeXAttr\", src);\n      throw e;\n    } finally {\n      writeUnlock();\n    }\n    getEditLog().logSync();\n    logAuditEvent(true, \"removeXAttr\", src, null, resultingStat);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "ac23a55547716df29b3e25c98a113399e184d9d1": {
      "type": "Yintroduced",
      "commitMessage": "Merge HDFS-2006 HDFS XAttrs branch to Trunk\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1596575 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/05/14 6:57 AM",
      "commitName": "ac23a55547716df29b3e25c98a113399e184d9d1",
      "commitAuthor": "Uma Maheswara Rao G",
      "diff": "@@ -0,0 +1,33 @@\n+  void removeXAttr(String src, XAttr xAttr) throws IOException {\n+    nnConf.checkXAttrsConfigFlag();\n+    HdfsFileStatus resultingStat \u003d null;\n+    FSPermissionChecker pc \u003d getPermissionChecker();\n+    try {\n+      XAttrPermissionFilter.checkPermissionForApi(pc, xAttr);\n+    } catch (AccessControlException e) {\n+      logAuditEvent(false, \"removeXAttr\", src);\n+      throw e;\n+    }\n+    checkOperation(OperationCategory.WRITE);\n+    byte[][] pathComponents \u003d FSDirectory.getPathComponentsForReservedPath(src);\n+    writeLock();\n+    try {\n+      checkOperation(OperationCategory.WRITE);\n+      checkNameNodeSafeMode(\"Cannot remove XAttr entry on \" + src);\n+      src \u003d FSDirectory.resolvePath(src, pathComponents, dir);\n+      if (isPermissionEnabled) {\n+        checkOwner(pc, src);\n+        checkPathAccess(pc, src, FsAction.WRITE);\n+      }\n+      \n+      dir.removeXAttr(src, xAttr);\n+      resultingStat \u003d getAuditFileInfo(src, false);\n+    } catch (AccessControlException e) {\n+      logAuditEvent(false, \"removeXAttr\", src);\n+      throw e;\n+    } finally {\n+      writeUnlock();\n+    }\n+    getEditLog().logSync();\n+    logAuditEvent(true, \"removeXAttr\", src, null, resultingStat);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  void removeXAttr(String src, XAttr xAttr) throws IOException {\n    nnConf.checkXAttrsConfigFlag();\n    HdfsFileStatus resultingStat \u003d null;\n    FSPermissionChecker pc \u003d getPermissionChecker();\n    try {\n      XAttrPermissionFilter.checkPermissionForApi(pc, xAttr);\n    } catch (AccessControlException e) {\n      logAuditEvent(false, \"removeXAttr\", src);\n      throw e;\n    }\n    checkOperation(OperationCategory.WRITE);\n    byte[][] pathComponents \u003d FSDirectory.getPathComponentsForReservedPath(src);\n    writeLock();\n    try {\n      checkOperation(OperationCategory.WRITE);\n      checkNameNodeSafeMode(\"Cannot remove XAttr entry on \" + src);\n      src \u003d FSDirectory.resolvePath(src, pathComponents, dir);\n      if (isPermissionEnabled) {\n        checkOwner(pc, src);\n        checkPathAccess(pc, src, FsAction.WRITE);\n      }\n      \n      dir.removeXAttr(src, xAttr);\n      resultingStat \u003d getAuditFileInfo(src, false);\n    } catch (AccessControlException e) {\n      logAuditEvent(false, \"removeXAttr\", src);\n      throw e;\n    } finally {\n      writeUnlock();\n    }\n    getEditLog().logSync();\n    logAuditEvent(true, \"removeXAttr\", src, null, resultingStat);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java"
    }
  }
}