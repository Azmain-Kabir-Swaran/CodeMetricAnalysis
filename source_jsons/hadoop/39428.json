{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PreemptionManager.java",
  "functionName": "getShallowCopyOfPreemptableQueues",
  "functionId": "getShallowCopyOfPreemptableQueues",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/preemption/PreemptionManager.java",
  "functionStartLine": 149,
  "functionEndLine": 164,
  "numCommitsSeen": 9,
  "timeTaken": 3191,
  "changeHistory": [
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
    "60e4116bf1d00afed91010e57357fe54057e4e39",
    "ae14e5d07f1b6702a5160637438028bb03d9387e"
  ],
  "changeHistoryShort": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": "Ybodychange",
    "60e4116bf1d00afed91010e57357fe54057e4e39": "Yrename",
    "ae14e5d07f1b6702a5160637438028bb03d9387e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9341.  Fixed enentrant lock usage in YARN project.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "07/03/19 1:47 PM",
      "commitName": "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "30/03/16 12:43 PM",
      "commitNameOld": "60e4116bf1d00afed91010e57357fe54057e4e39",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 1072.09,
      "commitsBetweenForRepo": 8169,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   public Map\u003cString, PreemptableQueue\u003e getShallowCopyOfPreemptableQueues() {\n+    readLock.lock();\n     try {\n-      readLock.lock();\n       Map\u003cString, PreemptableQueue\u003e map \u003d new HashMap\u003c\u003e();\n       for (Map.Entry\u003cString, PreemptableQueue\u003e entry : entities.entrySet()) {\n         String key \u003d entry.getKey();\n         PreemptableQueue entity \u003d entry.getValue();\n         map.put(key, new PreemptableQueue(\n             new HashMap\u003c\u003e(entity.getTotalKillableResources()),\n             new HashMap\u003c\u003e(entity.getKillableContainers())));\n       }\n       return map;\n     } finally {\n       readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Map\u003cString, PreemptableQueue\u003e getShallowCopyOfPreemptableQueues() {\n    readLock.lock();\n    try {\n      Map\u003cString, PreemptableQueue\u003e map \u003d new HashMap\u003c\u003e();\n      for (Map.Entry\u003cString, PreemptableQueue\u003e entry : entities.entrySet()) {\n        String key \u003d entry.getKey();\n        PreemptableQueue entity \u003d entry.getValue();\n        map.put(key, new PreemptableQueue(\n            new HashMap\u003c\u003e(entity.getTotalKillableResources()),\n            new HashMap\u003c\u003e(entity.getKillableContainers())));\n      }\n      return map;\n    } finally {\n      readLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/preemption/PreemptionManager.java",
      "extendedDetails": {}
    },
    "60e4116bf1d00afed91010e57357fe54057e4e39": {
      "type": "Yrename",
      "commitMessage": "YARN-4822. Refactor existing Preemption Policy of CS for easier adding new approach to select preemption candidates. Contributed by Wangda Tan\n",
      "commitDate": "30/03/16 12:43 PM",
      "commitName": "60e4116bf1d00afed91010e57357fe54057e4e39",
      "commitAuthor": "Jian He",
      "commitDateOld": "16/03/16 5:02 PM",
      "commitNameOld": "ae14e5d07f1b6702a5160637438028bb03d9387e",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 13.82,
      "commitsBetweenForRepo": 69,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n-  public Map\u003cString, PreemptableQueue\u003e getShallowCopyOfPreemptableEntities() {\n+  public Map\u003cString, PreemptableQueue\u003e getShallowCopyOfPreemptableQueues() {\n     try {\n       readLock.lock();\n       Map\u003cString, PreemptableQueue\u003e map \u003d new HashMap\u003c\u003e();\n       for (Map.Entry\u003cString, PreemptableQueue\u003e entry : entities.entrySet()) {\n         String key \u003d entry.getKey();\n         PreemptableQueue entity \u003d entry.getValue();\n         map.put(key, new PreemptableQueue(\n             new HashMap\u003c\u003e(entity.getTotalKillableResources()),\n             new HashMap\u003c\u003e(entity.getKillableContainers())));\n       }\n       return map;\n     } finally {\n       readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Map\u003cString, PreemptableQueue\u003e getShallowCopyOfPreemptableQueues() {\n    try {\n      readLock.lock();\n      Map\u003cString, PreemptableQueue\u003e map \u003d new HashMap\u003c\u003e();\n      for (Map.Entry\u003cString, PreemptableQueue\u003e entry : entities.entrySet()) {\n        String key \u003d entry.getKey();\n        PreemptableQueue entity \u003d entry.getValue();\n        map.put(key, new PreemptableQueue(\n            new HashMap\u003c\u003e(entity.getTotalKillableResources()),\n            new HashMap\u003c\u003e(entity.getKillableContainers())));\n      }\n      return map;\n    } finally {\n      readLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/preemption/PreemptionManager.java",
      "extendedDetails": {
        "oldValue": "getShallowCopyOfPreemptableEntities",
        "newValue": "getShallowCopyOfPreemptableQueues"
      }
    },
    "ae14e5d07f1b6702a5160637438028bb03d9387e": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4108. CapacityScheduler: Improve preemption to only kill containers that would satisfy the incoming request. (Wangda Tan)\n\n(cherry picked from commit 7e8c9beb4156dcaeb3a11e60aaa06d2370626913)\n",
      "commitDate": "16/03/16 5:02 PM",
      "commitName": "ae14e5d07f1b6702a5160637438028bb03d9387e",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,16 @@\n+  public Map\u003cString, PreemptableQueue\u003e getShallowCopyOfPreemptableEntities() {\n+    try {\n+      readLock.lock();\n+      Map\u003cString, PreemptableQueue\u003e map \u003d new HashMap\u003c\u003e();\n+      for (Map.Entry\u003cString, PreemptableQueue\u003e entry : entities.entrySet()) {\n+        String key \u003d entry.getKey();\n+        PreemptableQueue entity \u003d entry.getValue();\n+        map.put(key, new PreemptableQueue(\n+            new HashMap\u003c\u003e(entity.getTotalKillableResources()),\n+            new HashMap\u003c\u003e(entity.getKillableContainers())));\n+      }\n+      return map;\n+    } finally {\n+      readLock.unlock();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Map\u003cString, PreemptableQueue\u003e getShallowCopyOfPreemptableEntities() {\n    try {\n      readLock.lock();\n      Map\u003cString, PreemptableQueue\u003e map \u003d new HashMap\u003c\u003e();\n      for (Map.Entry\u003cString, PreemptableQueue\u003e entry : entities.entrySet()) {\n        String key \u003d entry.getKey();\n        PreemptableQueue entity \u003d entry.getValue();\n        map.put(key, new PreemptableQueue(\n            new HashMap\u003c\u003e(entity.getTotalKillableResources()),\n            new HashMap\u003c\u003e(entity.getKillableContainers())));\n      }\n      return map;\n    } finally {\n      readLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/preemption/PreemptionManager.java"
    }
  }
}