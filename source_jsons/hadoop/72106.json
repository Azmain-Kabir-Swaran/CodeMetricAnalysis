{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "KerberosUtil.java",
  "functionName": "getDomainRealm",
  "functionId": "getDomainRealm___shortprinc-String",
  "sourceFilePath": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/util/KerberosUtil.java",
  "functionStartLine": 143,
  "functionEndLine": 168,
  "numCommitsSeen": 13,
  "timeTaken": 558,
  "changeHistory": [
    "ada9c2c410c15e95d0a21ea2941986195606aad8"
  ],
  "changeHistoryShort": {
    "ada9c2c410c15e95d0a21ea2941986195606aad8": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ada9c2c410c15e95d0a21ea2941986195606aad8": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-12617. SPNEGO authentication request to non-default realm gets default realm name inserted in target server principal. (mattf)\n",
      "commitDate": "08/12/15 5:27 PM",
      "commitName": "ada9c2c410c15e95d0a21ea2941986195606aad8",
      "commitAuthor": "mattf",
      "diff": "@@ -0,0 +1,26 @@\n+  public static String getDomainRealm(String shortprinc) {\n+    Class\u003c?\u003e classRef;\n+    Object principalName; //of type sun.security.krb5.PrincipalName or IBM equiv\n+    String realmString \u003d null;\n+    try {\n+      if (IBM_JAVA) {\n+        classRef \u003d Class.forName(\"com.ibm.security.krb5.PrincipalName\");\n+      } else {\n+        classRef \u003d Class.forName(\"sun.security.krb5.PrincipalName\");\n+      }\n+      int tKrbNtSrvHst \u003d classRef.getField(\"KRB_NT_SRV_HST\").getInt(null);\n+      principalName \u003d classRef.getConstructor(String.class, int.class).\n+          newInstance(shortprinc, tKrbNtSrvHst);\n+      realmString \u003d (String)classRef.getMethod(\"getRealmString\", new Class[0]).\n+          invoke(principalName, new Object[0]);\n+    } catch (RuntimeException rte) {\n+      //silently catch everything\n+    } catch (Exception e) {\n+      //silently return default realm (which may itself be null)\n+    }\n+    if (null \u003d\u003d realmString || realmString.equals(\"\")) {\n+      return getDefaultRealmProtected();\n+    } else {\n+      return realmString;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static String getDomainRealm(String shortprinc) {\n    Class\u003c?\u003e classRef;\n    Object principalName; //of type sun.security.krb5.PrincipalName or IBM equiv\n    String realmString \u003d null;\n    try {\n      if (IBM_JAVA) {\n        classRef \u003d Class.forName(\"com.ibm.security.krb5.PrincipalName\");\n      } else {\n        classRef \u003d Class.forName(\"sun.security.krb5.PrincipalName\");\n      }\n      int tKrbNtSrvHst \u003d classRef.getField(\"KRB_NT_SRV_HST\").getInt(null);\n      principalName \u003d classRef.getConstructor(String.class, int.class).\n          newInstance(shortprinc, tKrbNtSrvHst);\n      realmString \u003d (String)classRef.getMethod(\"getRealmString\", new Class[0]).\n          invoke(principalName, new Object[0]);\n    } catch (RuntimeException rte) {\n      //silently catch everything\n    } catch (Exception e) {\n      //silently return default realm (which may itself be null)\n    }\n    if (null \u003d\u003d realmString || realmString.equals(\"\")) {\n      return getDefaultRealmProtected();\n    } else {\n      return realmString;\n    }\n  }",
      "path": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/util/KerberosUtil.java"
    }
  }
}