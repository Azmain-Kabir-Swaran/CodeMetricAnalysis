{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LocalReplicaInPipeline.java",
  "functionName": "moveReplicaFrom",
  "functionId": "moveReplicaFrom___oldReplicaInfo-ReplicaInfo__newBlkFile-File",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/LocalReplicaInPipeline.java",
  "functionStartLine": 409,
  "functionEndLine": 445,
  "numCommitsSeen": 7,
  "timeTaken": 3423,
  "changeHistory": [
    "6ba9587d370fbf39c129c08c00ebbb894ccc1389",
    "df983b524ab68ea0c70cee9033bfff2d28052cbf",
    "dcedb72af468128458e597f08d22f5c34b744ae5",
    "aeecfa24f4fb6af289920cbf8830c394e66bd78e",
    "86c9862bec0248d671e657aa56094a2919b8ac14"
  ],
  "changeHistoryShort": {
    "6ba9587d370fbf39c129c08c00ebbb894ccc1389": "Ybodychange",
    "df983b524ab68ea0c70cee9033bfff2d28052cbf": "Ybodychange",
    "dcedb72af468128458e597f08d22f5c34b744ae5": "Ybodychange",
    "aeecfa24f4fb6af289920cbf8830c394e66bd78e": "Ybodychange",
    "86c9862bec0248d671e657aa56094a2919b8ac14": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6ba9587d370fbf39c129c08c00ebbb894ccc1389": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10958. Add instrumentation hooks around Datanode disk IO.\n",
      "commitDate": "14/12/16 11:18 AM",
      "commitName": "6ba9587d370fbf39c129c08c00ebbb894ccc1389",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "06/12/16 11:05 AM",
      "commitNameOld": "df983b524ab68ea0c70cee9033bfff2d28052cbf",
      "commitAuthorOld": "Xiaoyu Yao",
      "daysBetweenCommits": 8.01,
      "commitsBetweenForRepo": 51,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,37 @@\n   public void moveReplicaFrom(ReplicaInfo oldReplicaInfo, File newBlkFile)\n       throws IOException {\n \n     if (!(oldReplicaInfo instanceof LocalReplica)) {\n       throw new IOException(\"The source replica with blk id \"\n           + oldReplicaInfo.getBlockId()\n           + \" should be derived from LocalReplica\");\n     }\n \n-    LocalReplica oldReplica \u003d (LocalReplica) oldReplicaInfo;\n-    File oldmeta \u003d oldReplica.getMetaFile();\n-    File newmeta \u003d getMetaFile();\n+    final LocalReplica oldReplica \u003d (LocalReplica) oldReplicaInfo;\n+    final File oldBlockFile \u003d oldReplica.getBlockFile();\n+    final File oldmeta \u003d oldReplica.getMetaFile();\n+    final File newmeta \u003d getMetaFile();\n+    final FileIoProvider fileIoProvider \u003d getFileIoProvider();\n \n     try {\n-      oldReplica.renameMeta(newmeta);\n+      fileIoProvider.rename(getVolume(), oldmeta, newmeta);\n     } catch (IOException e) {\n       throw new IOException(\"Block \" + oldReplicaInfo + \" reopen failed. \" +\n                             \" Unable to move meta file  \" + oldmeta +\n                             \" to rbw dir \" + newmeta, e);\n     }\n \n     try {\n-      oldReplica.renameBlock(newBlkFile);\n+      fileIoProvider.rename(getVolume(), oldBlockFile, newBlkFile);\n     } catch (IOException e) {\n       try {\n-        renameMeta(oldmeta);\n+        fileIoProvider.rename(getVolume(), newmeta, oldmeta);\n       } catch (IOException ex) {\n         LOG.warn(\"Cannot move meta file \" + newmeta +\n             \"back to the finalized directory \" + oldmeta, ex);\n       }\n       throw new IOException(\"Block \" + oldReplicaInfo + \" reopen failed. \" +\n           \" Unable to move block file \" + oldReplica.getBlockFile() +\n           \" to rbw dir \" + newBlkFile, e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void moveReplicaFrom(ReplicaInfo oldReplicaInfo, File newBlkFile)\n      throws IOException {\n\n    if (!(oldReplicaInfo instanceof LocalReplica)) {\n      throw new IOException(\"The source replica with blk id \"\n          + oldReplicaInfo.getBlockId()\n          + \" should be derived from LocalReplica\");\n    }\n\n    final LocalReplica oldReplica \u003d (LocalReplica) oldReplicaInfo;\n    final File oldBlockFile \u003d oldReplica.getBlockFile();\n    final File oldmeta \u003d oldReplica.getMetaFile();\n    final File newmeta \u003d getMetaFile();\n    final FileIoProvider fileIoProvider \u003d getFileIoProvider();\n\n    try {\n      fileIoProvider.rename(getVolume(), oldmeta, newmeta);\n    } catch (IOException e) {\n      throw new IOException(\"Block \" + oldReplicaInfo + \" reopen failed. \" +\n                            \" Unable to move meta file  \" + oldmeta +\n                            \" to rbw dir \" + newmeta, e);\n    }\n\n    try {\n      fileIoProvider.rename(getVolume(), oldBlockFile, newBlkFile);\n    } catch (IOException e) {\n      try {\n        fileIoProvider.rename(getVolume(), newmeta, oldmeta);\n      } catch (IOException ex) {\n        LOG.warn(\"Cannot move meta file \" + newmeta +\n            \"back to the finalized directory \" + oldmeta, ex);\n      }\n      throw new IOException(\"Block \" + oldReplicaInfo + \" reopen failed. \" +\n          \" Unable to move block file \" + oldReplica.getBlockFile() +\n          \" to rbw dir \" + newBlkFile, e);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/LocalReplicaInPipeline.java",
      "extendedDetails": {}
    },
    "df983b524ab68ea0c70cee9033bfff2d28052cbf": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10930. Refactor: Wrap Datanode IO related operations. Contributed by Xiaoyu Yao.\n",
      "commitDate": "06/12/16 11:05 AM",
      "commitName": "df983b524ab68ea0c70cee9033bfff2d28052cbf",
      "commitAuthor": "Xiaoyu Yao",
      "commitDateOld": "05/12/16 12:44 PM",
      "commitNameOld": "dcedb72af468128458e597f08d22f5c34b744ae5",
      "commitAuthorOld": "Xiaoyu Yao",
      "daysBetweenCommits": 0.93,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,45 +1,35 @@\n   public void moveReplicaFrom(ReplicaInfo oldReplicaInfo, File newBlkFile)\n       throws IOException {\n \n     if (!(oldReplicaInfo instanceof LocalReplica)) {\n       throw new IOException(\"The source replica with blk id \"\n           + oldReplicaInfo.getBlockId()\n           + \" should be derived from LocalReplica\");\n     }\n \n-    LocalReplica localReplica \u003d (LocalReplica) oldReplicaInfo;\n-\n-    File oldmeta \u003d localReplica.getMetaFile();\n+    LocalReplica oldReplica \u003d (LocalReplica) oldReplicaInfo;\n+    File oldmeta \u003d oldReplica.getMetaFile();\n     File newmeta \u003d getMetaFile();\n \n-    if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"Renaming \" + oldmeta + \" to \" + newmeta);\n-    }\n     try {\n-      NativeIO.renameTo(oldmeta, newmeta);\n+      oldReplica.renameMeta(newmeta);\n     } catch (IOException e) {\n       throw new IOException(\"Block \" + oldReplicaInfo + \" reopen failed. \" +\n                             \" Unable to move meta file  \" + oldmeta +\n                             \" to rbw dir \" + newmeta, e);\n     }\n \n-    File blkfile \u003d localReplica.getBlockFile();\n-\n-    if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"Renaming \" + blkfile + \" to \" + newBlkFile\n-          + \", file length\u003d\" + blkfile.length());\n-    }\n     try {\n-      NativeIO.renameTo(blkfile, newBlkFile);\n+      oldReplica.renameBlock(newBlkFile);\n     } catch (IOException e) {\n       try {\n-        NativeIO.renameTo(newmeta, oldmeta);\n+        renameMeta(oldmeta);\n       } catch (IOException ex) {\n         LOG.warn(\"Cannot move meta file \" + newmeta +\n             \"back to the finalized directory \" + oldmeta, ex);\n       }\n       throw new IOException(\"Block \" + oldReplicaInfo + \" reopen failed. \" +\n-                              \" Unable to move block file \" + blkfile +\n-                              \" to rbw dir \" + newBlkFile, e);\n+          \" Unable to move block file \" + oldReplica.getBlockFile() +\n+          \" to rbw dir \" + newBlkFile, e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void moveReplicaFrom(ReplicaInfo oldReplicaInfo, File newBlkFile)\n      throws IOException {\n\n    if (!(oldReplicaInfo instanceof LocalReplica)) {\n      throw new IOException(\"The source replica with blk id \"\n          + oldReplicaInfo.getBlockId()\n          + \" should be derived from LocalReplica\");\n    }\n\n    LocalReplica oldReplica \u003d (LocalReplica) oldReplicaInfo;\n    File oldmeta \u003d oldReplica.getMetaFile();\n    File newmeta \u003d getMetaFile();\n\n    try {\n      oldReplica.renameMeta(newmeta);\n    } catch (IOException e) {\n      throw new IOException(\"Block \" + oldReplicaInfo + \" reopen failed. \" +\n                            \" Unable to move meta file  \" + oldmeta +\n                            \" to rbw dir \" + newmeta, e);\n    }\n\n    try {\n      oldReplica.renameBlock(newBlkFile);\n    } catch (IOException e) {\n      try {\n        renameMeta(oldmeta);\n      } catch (IOException ex) {\n        LOG.warn(\"Cannot move meta file \" + newmeta +\n            \"back to the finalized directory \" + oldmeta, ex);\n      }\n      throw new IOException(\"Block \" + oldReplicaInfo + \" reopen failed. \" +\n          \" Unable to move block file \" + oldReplica.getBlockFile() +\n          \" to rbw dir \" + newBlkFile, e);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/LocalReplicaInPipeline.java",
      "extendedDetails": {}
    },
    "dcedb72af468128458e597f08d22f5c34b744ae5": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"HADOOP-10930. Refactor: Wrap Datanode IO related operations. Contributed by Xiaoyu Yao.\"\n\nThis reverts commit aeecfa24f4fb6af289920cbf8830c394e66bd78e.\n",
      "commitDate": "05/12/16 12:44 PM",
      "commitName": "dcedb72af468128458e597f08d22f5c34b744ae5",
      "commitAuthor": "Xiaoyu Yao",
      "commitDateOld": "29/11/16 8:52 PM",
      "commitNameOld": "aeecfa24f4fb6af289920cbf8830c394e66bd78e",
      "commitAuthorOld": "Xiaoyu Yao",
      "daysBetweenCommits": 5.66,
      "commitsBetweenForRepo": 32,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,45 @@\n   public void moveReplicaFrom(ReplicaInfo oldReplicaInfo, File newBlkFile)\n       throws IOException {\n \n     if (!(oldReplicaInfo instanceof LocalReplica)) {\n       throw new IOException(\"The source replica with blk id \"\n           + oldReplicaInfo.getBlockId()\n           + \" should be derived from LocalReplica\");\n     }\n \n-    LocalReplica oldReplica \u003d (LocalReplica) oldReplicaInfo;\n-    File oldmeta \u003d oldReplica.getMetaFile();\n+    LocalReplica localReplica \u003d (LocalReplica) oldReplicaInfo;\n+\n+    File oldmeta \u003d localReplica.getMetaFile();\n     File newmeta \u003d getMetaFile();\n \n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"Renaming \" + oldmeta + \" to \" + newmeta);\n+    }\n     try {\n-      oldReplica.renameMeta(newmeta);\n+      NativeIO.renameTo(oldmeta, newmeta);\n     } catch (IOException e) {\n       throw new IOException(\"Block \" + oldReplicaInfo + \" reopen failed. \" +\n                             \" Unable to move meta file  \" + oldmeta +\n                             \" to rbw dir \" + newmeta, e);\n     }\n \n+    File blkfile \u003d localReplica.getBlockFile();\n+\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"Renaming \" + blkfile + \" to \" + newBlkFile\n+          + \", file length\u003d\" + blkfile.length());\n+    }\n     try {\n-      oldReplica.renameBlock(newBlkFile);\n+      NativeIO.renameTo(blkfile, newBlkFile);\n     } catch (IOException e) {\n       try {\n-        renameMeta(oldmeta);\n+        NativeIO.renameTo(newmeta, oldmeta);\n       } catch (IOException ex) {\n         LOG.warn(\"Cannot move meta file \" + newmeta +\n             \"back to the finalized directory \" + oldmeta, ex);\n       }\n       throw new IOException(\"Block \" + oldReplicaInfo + \" reopen failed. \" +\n-          \" Unable to move block file \" + oldReplica.getBlockFile() +\n-          \" to rbw dir \" + newBlkFile, e);\n+                              \" Unable to move block file \" + blkfile +\n+                              \" to rbw dir \" + newBlkFile, e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void moveReplicaFrom(ReplicaInfo oldReplicaInfo, File newBlkFile)\n      throws IOException {\n\n    if (!(oldReplicaInfo instanceof LocalReplica)) {\n      throw new IOException(\"The source replica with blk id \"\n          + oldReplicaInfo.getBlockId()\n          + \" should be derived from LocalReplica\");\n    }\n\n    LocalReplica localReplica \u003d (LocalReplica) oldReplicaInfo;\n\n    File oldmeta \u003d localReplica.getMetaFile();\n    File newmeta \u003d getMetaFile();\n\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Renaming \" + oldmeta + \" to \" + newmeta);\n    }\n    try {\n      NativeIO.renameTo(oldmeta, newmeta);\n    } catch (IOException e) {\n      throw new IOException(\"Block \" + oldReplicaInfo + \" reopen failed. \" +\n                            \" Unable to move meta file  \" + oldmeta +\n                            \" to rbw dir \" + newmeta, e);\n    }\n\n    File blkfile \u003d localReplica.getBlockFile();\n\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Renaming \" + blkfile + \" to \" + newBlkFile\n          + \", file length\u003d\" + blkfile.length());\n    }\n    try {\n      NativeIO.renameTo(blkfile, newBlkFile);\n    } catch (IOException e) {\n      try {\n        NativeIO.renameTo(newmeta, oldmeta);\n      } catch (IOException ex) {\n        LOG.warn(\"Cannot move meta file \" + newmeta +\n            \"back to the finalized directory \" + oldmeta, ex);\n      }\n      throw new IOException(\"Block \" + oldReplicaInfo + \" reopen failed. \" +\n                              \" Unable to move block file \" + blkfile +\n                              \" to rbw dir \" + newBlkFile, e);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/LocalReplicaInPipeline.java",
      "extendedDetails": {}
    },
    "aeecfa24f4fb6af289920cbf8830c394e66bd78e": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10930. Refactor: Wrap Datanode IO related operations. Contributed by Xiaoyu Yao.\n",
      "commitDate": "29/11/16 8:52 PM",
      "commitName": "aeecfa24f4fb6af289920cbf8830c394e66bd78e",
      "commitAuthor": "Xiaoyu Yao",
      "commitDateOld": "13/09/16 12:54 PM",
      "commitNameOld": "86c9862bec0248d671e657aa56094a2919b8ac14",
      "commitAuthorOld": "Lei Xu",
      "daysBetweenCommits": 77.37,
      "commitsBetweenForRepo": 595,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,45 +1,35 @@\n   public void moveReplicaFrom(ReplicaInfo oldReplicaInfo, File newBlkFile)\n       throws IOException {\n \n     if (!(oldReplicaInfo instanceof LocalReplica)) {\n       throw new IOException(\"The source replica with blk id \"\n           + oldReplicaInfo.getBlockId()\n           + \" should be derived from LocalReplica\");\n     }\n \n-    LocalReplica localReplica \u003d (LocalReplica) oldReplicaInfo;\n-\n-    File oldmeta \u003d localReplica.getMetaFile();\n+    LocalReplica oldReplica \u003d (LocalReplica) oldReplicaInfo;\n+    File oldmeta \u003d oldReplica.getMetaFile();\n     File newmeta \u003d getMetaFile();\n \n-    if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"Renaming \" + oldmeta + \" to \" + newmeta);\n-    }\n     try {\n-      NativeIO.renameTo(oldmeta, newmeta);\n+      oldReplica.renameMeta(newmeta);\n     } catch (IOException e) {\n       throw new IOException(\"Block \" + oldReplicaInfo + \" reopen failed. \" +\n                             \" Unable to move meta file  \" + oldmeta +\n                             \" to rbw dir \" + newmeta, e);\n     }\n \n-    File blkfile \u003d localReplica.getBlockFile();\n-\n-    if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"Renaming \" + blkfile + \" to \" + newBlkFile\n-          + \", file length\u003d\" + blkfile.length());\n-    }\n     try {\n-      NativeIO.renameTo(blkfile, newBlkFile);\n+      oldReplica.renameBlock(newBlkFile);\n     } catch (IOException e) {\n       try {\n-        NativeIO.renameTo(newmeta, oldmeta);\n+        renameMeta(oldmeta);\n       } catch (IOException ex) {\n         LOG.warn(\"Cannot move meta file \" + newmeta +\n             \"back to the finalized directory \" + oldmeta, ex);\n       }\n       throw new IOException(\"Block \" + oldReplicaInfo + \" reopen failed. \" +\n-                              \" Unable to move block file \" + blkfile +\n-                              \" to rbw dir \" + newBlkFile, e);\n+          \" Unable to move block file \" + oldReplica.getBlockFile() +\n+          \" to rbw dir \" + newBlkFile, e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void moveReplicaFrom(ReplicaInfo oldReplicaInfo, File newBlkFile)\n      throws IOException {\n\n    if (!(oldReplicaInfo instanceof LocalReplica)) {\n      throw new IOException(\"The source replica with blk id \"\n          + oldReplicaInfo.getBlockId()\n          + \" should be derived from LocalReplica\");\n    }\n\n    LocalReplica oldReplica \u003d (LocalReplica) oldReplicaInfo;\n    File oldmeta \u003d oldReplica.getMetaFile();\n    File newmeta \u003d getMetaFile();\n\n    try {\n      oldReplica.renameMeta(newmeta);\n    } catch (IOException e) {\n      throw new IOException(\"Block \" + oldReplicaInfo + \" reopen failed. \" +\n                            \" Unable to move meta file  \" + oldmeta +\n                            \" to rbw dir \" + newmeta, e);\n    }\n\n    try {\n      oldReplica.renameBlock(newBlkFile);\n    } catch (IOException e) {\n      try {\n        renameMeta(oldmeta);\n      } catch (IOException ex) {\n        LOG.warn(\"Cannot move meta file \" + newmeta +\n            \"back to the finalized directory \" + oldmeta, ex);\n      }\n      throw new IOException(\"Block \" + oldReplicaInfo + \" reopen failed. \" +\n          \" Unable to move block file \" + oldReplica.getBlockFile() +\n          \" to rbw dir \" + newBlkFile, e);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/LocalReplicaInPipeline.java",
      "extendedDetails": {}
    },
    "86c9862bec0248d671e657aa56094a2919b8ac14": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-10636. Modify ReplicaInfo to remove the assumption that replica metadata and data are stored in java.io.File. (Virajith Jalaparti via lei)\n",
      "commitDate": "13/09/16 12:54 PM",
      "commitName": "86c9862bec0248d671e657aa56094a2919b8ac14",
      "commitAuthor": "Lei Xu",
      "diff": "@@ -0,0 +1,45 @@\n+  public void moveReplicaFrom(ReplicaInfo oldReplicaInfo, File newBlkFile)\n+      throws IOException {\n+\n+    if (!(oldReplicaInfo instanceof LocalReplica)) {\n+      throw new IOException(\"The source replica with blk id \"\n+          + oldReplicaInfo.getBlockId()\n+          + \" should be derived from LocalReplica\");\n+    }\n+\n+    LocalReplica localReplica \u003d (LocalReplica) oldReplicaInfo;\n+\n+    File oldmeta \u003d localReplica.getMetaFile();\n+    File newmeta \u003d getMetaFile();\n+\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"Renaming \" + oldmeta + \" to \" + newmeta);\n+    }\n+    try {\n+      NativeIO.renameTo(oldmeta, newmeta);\n+    } catch (IOException e) {\n+      throw new IOException(\"Block \" + oldReplicaInfo + \" reopen failed. \" +\n+                            \" Unable to move meta file  \" + oldmeta +\n+                            \" to rbw dir \" + newmeta, e);\n+    }\n+\n+    File blkfile \u003d localReplica.getBlockFile();\n+\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"Renaming \" + blkfile + \" to \" + newBlkFile\n+          + \", file length\u003d\" + blkfile.length());\n+    }\n+    try {\n+      NativeIO.renameTo(blkfile, newBlkFile);\n+    } catch (IOException e) {\n+      try {\n+        NativeIO.renameTo(newmeta, oldmeta);\n+      } catch (IOException ex) {\n+        LOG.warn(\"Cannot move meta file \" + newmeta +\n+            \"back to the finalized directory \" + oldmeta, ex);\n+      }\n+      throw new IOException(\"Block \" + oldReplicaInfo + \" reopen failed. \" +\n+                              \" Unable to move block file \" + blkfile +\n+                              \" to rbw dir \" + newBlkFile, e);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void moveReplicaFrom(ReplicaInfo oldReplicaInfo, File newBlkFile)\n      throws IOException {\n\n    if (!(oldReplicaInfo instanceof LocalReplica)) {\n      throw new IOException(\"The source replica with blk id \"\n          + oldReplicaInfo.getBlockId()\n          + \" should be derived from LocalReplica\");\n    }\n\n    LocalReplica localReplica \u003d (LocalReplica) oldReplicaInfo;\n\n    File oldmeta \u003d localReplica.getMetaFile();\n    File newmeta \u003d getMetaFile();\n\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Renaming \" + oldmeta + \" to \" + newmeta);\n    }\n    try {\n      NativeIO.renameTo(oldmeta, newmeta);\n    } catch (IOException e) {\n      throw new IOException(\"Block \" + oldReplicaInfo + \" reopen failed. \" +\n                            \" Unable to move meta file  \" + oldmeta +\n                            \" to rbw dir \" + newmeta, e);\n    }\n\n    File blkfile \u003d localReplica.getBlockFile();\n\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Renaming \" + blkfile + \" to \" + newBlkFile\n          + \", file length\u003d\" + blkfile.length());\n    }\n    try {\n      NativeIO.renameTo(blkfile, newBlkFile);\n    } catch (IOException e) {\n      try {\n        NativeIO.renameTo(newmeta, oldmeta);\n      } catch (IOException ex) {\n        LOG.warn(\"Cannot move meta file \" + newmeta +\n            \"back to the finalized directory \" + oldmeta, ex);\n      }\n      throw new IOException(\"Block \" + oldReplicaInfo + \" reopen failed. \" +\n                              \" Unable to move block file \" + blkfile +\n                              \" to rbw dir \" + newBlkFile, e);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/LocalReplicaInPipeline.java"
    }
  }
}