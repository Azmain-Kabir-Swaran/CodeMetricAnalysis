{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LeaseManager.java",
  "functionName": "getNumUnderConstructionBlocks",
  "functionId": "getNumUnderConstructionBlocks",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/LeaseManager.java",
  "functionStartLine": 149,
  "functionEndLine": 180,
  "numCommitsSeen": 51,
  "timeTaken": 4119,
  "changeHistory": [
    "f491f717e9ee6b75ad5cfca48da9c6297e94a8f7",
    "96be795656039c0c12031ec31becfcd35fbb1b70",
    "8928729c80af0a154524e06fb13ed9b191986a78",
    "4928f5473394981829e5ffd4b16ea0801baf5c45",
    "9f2f583f401189c3f4a2687795a9e3e0b288322b",
    "00fe1ed3a4b3ee35fe24be257ec36445d2f44d63",
    "1382ae525c67bf95d8f3a436b547dbc72cfbb177",
    "daacbc18d739d030822df0b75205eeb067f89850"
  ],
  "changeHistoryShort": {
    "f491f717e9ee6b75ad5cfca48da9c6297e94a8f7": "Ybodychange",
    "96be795656039c0c12031ec31becfcd35fbb1b70": "Ybodychange",
    "8928729c80af0a154524e06fb13ed9b191986a78": "Ybodychange",
    "4928f5473394981829e5ffd4b16ea0801baf5c45": "Ybodychange",
    "9f2f583f401189c3f4a2687795a9e3e0b288322b": "Ybodychange",
    "00fe1ed3a4b3ee35fe24be257ec36445d2f44d63": "Ybodychange",
    "1382ae525c67bf95d8f3a436b547dbc72cfbb177": "Ybodychange",
    "daacbc18d739d030822df0b75205eeb067f89850": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f491f717e9ee6b75ad5cfca48da9c6297e94a8f7": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13115. In getNumUnderConstructionBlocks(), ignore the inodeIds for which the inodes have been deleted. Contributed by Yongjun Zhang.\n",
      "commitDate": "07/02/18 12:58 PM",
      "commitName": "f491f717e9ee6b75ad5cfca48da9c6297e94a8f7",
      "commitAuthor": "Yongjun Zhang",
      "commitDateOld": "05/01/18 10:31 PM",
      "commitNameOld": "bf5c94899537011465350d5d999fad9ffaeb605d",
      "commitAuthorOld": "Yiqun Lin",
      "daysBetweenCommits": 32.6,
      "commitsBetweenForRepo": 207,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,32 @@\n   synchronized long getNumUnderConstructionBlocks() {\n     assert this.fsnamesystem.hasReadLock() : \"The FSNamesystem read lock wasn\u0027t\"\n       + \"acquired before counting under construction blocks\";\n     long numUCBlocks \u003d 0;\n     for (Long id : getINodeIdWithLeases()) {\n-      final INodeFile cons \u003d fsnamesystem.getFSDirectory().getInode(id).asFile();\n+      INode inode \u003d fsnamesystem.getFSDirectory().getInode(id);\n+      if (inode \u003d\u003d null) {\n+        // The inode could have been deleted after getINodeIdWithLeases() is\n+        // called, check here, and ignore it if so\n+        LOG.warn(\"Failed to find inode {} in getNumUnderConstructionBlocks().\",\n+            id);\n+        continue;\n+      }\n+      final INodeFile cons \u003d inode.asFile();\n       if (!cons.isUnderConstruction()) {\n         LOG.warn(\"The file {} is not under construction but has lease.\",\n             cons.getFullPathName());\n         continue;\n       }\n       BlockInfo[] blocks \u003d cons.getBlocks();\n       if(blocks \u003d\u003d null) {\n         continue;\n       }\n       for(BlockInfo b : blocks) {\n-        if(!b.isComplete())\n+        if(!b.isComplete()) {\n           numUCBlocks++;\n         }\n       }\n+    }\n     LOG.info(\"Number of blocks under construction: {}\", numUCBlocks);\n     return numUCBlocks;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized long getNumUnderConstructionBlocks() {\n    assert this.fsnamesystem.hasReadLock() : \"The FSNamesystem read lock wasn\u0027t\"\n      + \"acquired before counting under construction blocks\";\n    long numUCBlocks \u003d 0;\n    for (Long id : getINodeIdWithLeases()) {\n      INode inode \u003d fsnamesystem.getFSDirectory().getInode(id);\n      if (inode \u003d\u003d null) {\n        // The inode could have been deleted after getINodeIdWithLeases() is\n        // called, check here, and ignore it if so\n        LOG.warn(\"Failed to find inode {} in getNumUnderConstructionBlocks().\",\n            id);\n        continue;\n      }\n      final INodeFile cons \u003d inode.asFile();\n      if (!cons.isUnderConstruction()) {\n        LOG.warn(\"The file {} is not under construction but has lease.\",\n            cons.getFullPathName());\n        continue;\n      }\n      BlockInfo[] blocks \u003d cons.getBlocks();\n      if(blocks \u003d\u003d null) {\n        continue;\n      }\n      for(BlockInfo b : blocks) {\n        if(!b.isComplete()) {\n          numUCBlocks++;\n        }\n      }\n    }\n    LOG.info(\"Number of blocks under construction: {}\", numUCBlocks);\n    return numUCBlocks;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/LeaseManager.java",
      "extendedDetails": {}
    },
    "96be795656039c0c12031ec31becfcd35fbb1b70": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12650. Use slf4j instead of log4j in LeaseManager. Contributed by Ajay Kumar.\n",
      "commitDate": "23/10/17 1:20 PM",
      "commitName": "96be795656039c0c12031ec31becfcd35fbb1b70",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "07/09/17 4:30 PM",
      "commitNameOld": "52b894db33bc68b46eec5cdf2735dfcf4030853a",
      "commitAuthorOld": "Xiao Chen",
      "daysBetweenCommits": 45.87,
      "commitsBetweenForRepo": 392,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   synchronized long getNumUnderConstructionBlocks() {\n     assert this.fsnamesystem.hasReadLock() : \"The FSNamesystem read lock wasn\u0027t\"\n       + \"acquired before counting under construction blocks\";\n     long numUCBlocks \u003d 0;\n     for (Long id : getINodeIdWithLeases()) {\n       final INodeFile cons \u003d fsnamesystem.getFSDirectory().getInode(id).asFile();\n       if (!cons.isUnderConstruction()) {\n-        LOG.warn(\"The file \" + cons.getFullPathName()\n-            + \" is not under construction but has lease.\");\n+        LOG.warn(\"The file {} is not under construction but has lease.\",\n+            cons.getFullPathName());\n         continue;\n       }\n       BlockInfo[] blocks \u003d cons.getBlocks();\n       if(blocks \u003d\u003d null) {\n         continue;\n       }\n       for(BlockInfo b : blocks) {\n         if(!b.isComplete())\n           numUCBlocks++;\n         }\n       }\n-    LOG.info(\"Number of blocks under construction: \" + numUCBlocks);\n+    LOG.info(\"Number of blocks under construction: {}\", numUCBlocks);\n     return numUCBlocks;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized long getNumUnderConstructionBlocks() {\n    assert this.fsnamesystem.hasReadLock() : \"The FSNamesystem read lock wasn\u0027t\"\n      + \"acquired before counting under construction blocks\";\n    long numUCBlocks \u003d 0;\n    for (Long id : getINodeIdWithLeases()) {\n      final INodeFile cons \u003d fsnamesystem.getFSDirectory().getInode(id).asFile();\n      if (!cons.isUnderConstruction()) {\n        LOG.warn(\"The file {} is not under construction but has lease.\",\n            cons.getFullPathName());\n        continue;\n      }\n      BlockInfo[] blocks \u003d cons.getBlocks();\n      if(blocks \u003d\u003d null) {\n        continue;\n      }\n      for(BlockInfo b : blocks) {\n        if(!b.isComplete())\n          numUCBlocks++;\n        }\n      }\n    LOG.info(\"Number of blocks under construction: {}\", numUCBlocks);\n    return numUCBlocks;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/LeaseManager.java",
      "extendedDetails": {}
    },
    "8928729c80af0a154524e06fb13ed9b191986a78": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8384. Allow NN to startup if there are files having a lease but are not under construction. Contributed by Jing Zhao.\n",
      "commitDate": "04/09/15 11:42 AM",
      "commitName": "8928729c80af0a154524e06fb13ed9b191986a78",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "06/08/15 6:51 PM",
      "commitNameOld": "6d4eee718a3fe1450a627128eb94728011bd9b68",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 28.7,
      "commitsBetweenForRepo": 155,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,23 @@\n   synchronized long getNumUnderConstructionBlocks() {\n     assert this.fsnamesystem.hasReadLock() : \"The FSNamesystem read lock wasn\u0027t\"\n       + \"acquired before counting under construction blocks\";\n     long numUCBlocks \u003d 0;\n     for (Long id : getINodeIdWithLeases()) {\n       final INodeFile cons \u003d fsnamesystem.getFSDirectory().getInode(id).asFile();\n-      Preconditions.checkState(cons.isUnderConstruction());\n+      if (!cons.isUnderConstruction()) {\n+        LOG.warn(\"The file \" + cons.getFullPathName()\n+            + \" is not under construction but has lease.\");\n+        continue;\n+      }\n       BlockInfo[] blocks \u003d cons.getBlocks();\n       if(blocks \u003d\u003d null) {\n         continue;\n       }\n       for(BlockInfo b : blocks) {\n         if(!b.isComplete())\n           numUCBlocks++;\n       }\n     }\n     LOG.info(\"Number of blocks under construction: \" + numUCBlocks);\n     return numUCBlocks;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized long getNumUnderConstructionBlocks() {\n    assert this.fsnamesystem.hasReadLock() : \"The FSNamesystem read lock wasn\u0027t\"\n      + \"acquired before counting under construction blocks\";\n    long numUCBlocks \u003d 0;\n    for (Long id : getINodeIdWithLeases()) {\n      final INodeFile cons \u003d fsnamesystem.getFSDirectory().getInode(id).asFile();\n      if (!cons.isUnderConstruction()) {\n        LOG.warn(\"The file \" + cons.getFullPathName()\n            + \" is not under construction but has lease.\");\n        continue;\n      }\n      BlockInfo[] blocks \u003d cons.getBlocks();\n      if(blocks \u003d\u003d null) {\n        continue;\n      }\n      for(BlockInfo b : blocks) {\n        if(!b.isComplete())\n          numUCBlocks++;\n      }\n    }\n    LOG.info(\"Number of blocks under construction: \" + numUCBlocks);\n    return numUCBlocks;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/LeaseManager.java",
      "extendedDetails": {}
    },
    "4928f5473394981829e5ffd4b16ea0801baf5c45": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8482. Rename BlockInfoContiguous to BlockInfo. Contributed by Zhe Zhang.\n",
      "commitDate": "27/05/15 3:42 PM",
      "commitName": "4928f5473394981829e5ffd4b16ea0801baf5c45",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "18/05/15 12:37 PM",
      "commitNameOld": "cdfae446ad285db979a79bf55665363fd943702c",
      "commitAuthorOld": "Ravi Prakash",
      "daysBetweenCommits": 9.13,
      "commitsBetweenForRepo": 64,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n   synchronized long getNumUnderConstructionBlocks() {\n     assert this.fsnamesystem.hasReadLock() : \"The FSNamesystem read lock wasn\u0027t\"\n       + \"acquired before counting under construction blocks\";\n     long numUCBlocks \u003d 0;\n     for (Long id : getINodeIdWithLeases()) {\n       final INodeFile cons \u003d fsnamesystem.getFSDirectory().getInode(id).asFile();\n       Preconditions.checkState(cons.isUnderConstruction());\n-      BlockInfoContiguous[] blocks \u003d cons.getBlocks();\n+      BlockInfo[] blocks \u003d cons.getBlocks();\n       if(blocks \u003d\u003d null) {\n         continue;\n       }\n-      for(BlockInfoContiguous b : blocks) {\n+      for(BlockInfo b : blocks) {\n         if(!b.isComplete())\n           numUCBlocks++;\n       }\n     }\n     LOG.info(\"Number of blocks under construction: \" + numUCBlocks);\n     return numUCBlocks;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized long getNumUnderConstructionBlocks() {\n    assert this.fsnamesystem.hasReadLock() : \"The FSNamesystem read lock wasn\u0027t\"\n      + \"acquired before counting under construction blocks\";\n    long numUCBlocks \u003d 0;\n    for (Long id : getINodeIdWithLeases()) {\n      final INodeFile cons \u003d fsnamesystem.getFSDirectory().getInode(id).asFile();\n      Preconditions.checkState(cons.isUnderConstruction());\n      BlockInfo[] blocks \u003d cons.getBlocks();\n      if(blocks \u003d\u003d null) {\n        continue;\n      }\n      for(BlockInfo b : blocks) {\n        if(!b.isComplete())\n          numUCBlocks++;\n      }\n    }\n    LOG.info(\"Number of blocks under construction: \" + numUCBlocks);\n    return numUCBlocks;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/LeaseManager.java",
      "extendedDetails": {}
    },
    "9f2f583f401189c3f4a2687795a9e3e0b288322b": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7749. Erasure Coding: Add striped block support in INodeFile. Contributed by Jing Zhao.\n",
      "commitDate": "26/05/15 11:07 AM",
      "commitName": "9f2f583f401189c3f4a2687795a9e3e0b288322b",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "18/05/15 12:37 PM",
      "commitNameOld": "cdfae446ad285db979a79bf55665363fd943702c",
      "commitAuthorOld": "Ravi Prakash",
      "daysBetweenCommits": 7.94,
      "commitsBetweenForRepo": 62,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n   synchronized long getNumUnderConstructionBlocks() {\n     assert this.fsnamesystem.hasReadLock() : \"The FSNamesystem read lock wasn\u0027t\"\n       + \"acquired before counting under construction blocks\";\n     long numUCBlocks \u003d 0;\n     for (Long id : getINodeIdWithLeases()) {\n       final INodeFile cons \u003d fsnamesystem.getFSDirectory().getInode(id).asFile();\n       Preconditions.checkState(cons.isUnderConstruction());\n-      BlockInfoContiguous[] blocks \u003d cons.getBlocks();\n+      BlockInfo[] blocks \u003d cons.getBlocks();\n       if(blocks \u003d\u003d null) {\n         continue;\n       }\n-      for(BlockInfoContiguous b : blocks) {\n+      for(BlockInfo b : blocks) {\n         if(!b.isComplete())\n           numUCBlocks++;\n+        }\n       }\n-    }\n     LOG.info(\"Number of blocks under construction: \" + numUCBlocks);\n     return numUCBlocks;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized long getNumUnderConstructionBlocks() {\n    assert this.fsnamesystem.hasReadLock() : \"The FSNamesystem read lock wasn\u0027t\"\n      + \"acquired before counting under construction blocks\";\n    long numUCBlocks \u003d 0;\n    for (Long id : getINodeIdWithLeases()) {\n      final INodeFile cons \u003d fsnamesystem.getFSDirectory().getInode(id).asFile();\n      Preconditions.checkState(cons.isUnderConstruction());\n      BlockInfo[] blocks \u003d cons.getBlocks();\n      if(blocks \u003d\u003d null) {\n        continue;\n      }\n      for(BlockInfo b : blocks) {\n        if(!b.isComplete())\n          numUCBlocks++;\n        }\n      }\n    LOG.info(\"Number of blocks under construction: \" + numUCBlocks);\n    return numUCBlocks;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/LeaseManager.java",
      "extendedDetails": {}
    },
    "00fe1ed3a4b3ee35fe24be257ec36445d2f44d63": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6757. Simplify lease manager with INodeID. Contributed by Haohui Mai.\n",
      "commitDate": "08/05/15 11:04 PM",
      "commitName": "00fe1ed3a4b3ee35fe24be257ec36445d2f44d63",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "02/05/15 10:03 AM",
      "commitNameOld": "6ae2a0d048e133b43249c248a75a4d77d9abb80d",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 6.54,
      "commitsBetweenForRepo": 129,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,19 @@\n   synchronized long getNumUnderConstructionBlocks() {\n     assert this.fsnamesystem.hasReadLock() : \"The FSNamesystem read lock wasn\u0027t\"\n       + \"acquired before counting under construction blocks\";\n     long numUCBlocks \u003d 0;\n-    for (Lease lease : sortedLeases) {\n-      for (String path : lease.getPaths()) {\n-        final INodeFile cons;\n-        try {\n-          cons \u003d this.fsnamesystem.getFSDirectory().getINode(path).asFile();\n-          Preconditions.checkState(cons.isUnderConstruction());\n-        } catch (UnresolvedLinkException e) {\n-          throw new AssertionError(\"Lease files should reside on this FS\");\n-        }\n-        BlockInfoContiguous[] blocks \u003d cons.getBlocks();\n-        if(blocks \u003d\u003d null)\n-          continue;\n-        for(BlockInfoContiguous b : blocks) {\n-          if(!b.isComplete())\n-            numUCBlocks++;\n-        }\n+    for (Long id : getINodeIdWithLeases()) {\n+      final INodeFile cons \u003d fsnamesystem.getFSDirectory().getInode(id).asFile();\n+      Preconditions.checkState(cons.isUnderConstruction());\n+      BlockInfoContiguous[] blocks \u003d cons.getBlocks();\n+      if(blocks \u003d\u003d null) {\n+        continue;\n+      }\n+      for(BlockInfoContiguous b : blocks) {\n+        if(!b.isComplete())\n+          numUCBlocks++;\n       }\n     }\n     LOG.info(\"Number of blocks under construction: \" + numUCBlocks);\n     return numUCBlocks;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized long getNumUnderConstructionBlocks() {\n    assert this.fsnamesystem.hasReadLock() : \"The FSNamesystem read lock wasn\u0027t\"\n      + \"acquired before counting under construction blocks\";\n    long numUCBlocks \u003d 0;\n    for (Long id : getINodeIdWithLeases()) {\n      final INodeFile cons \u003d fsnamesystem.getFSDirectory().getInode(id).asFile();\n      Preconditions.checkState(cons.isUnderConstruction());\n      BlockInfoContiguous[] blocks \u003d cons.getBlocks();\n      if(blocks \u003d\u003d null) {\n        continue;\n      }\n      for(BlockInfoContiguous b : blocks) {\n        if(!b.isComplete())\n          numUCBlocks++;\n      }\n    }\n    LOG.info(\"Number of blocks under construction: \" + numUCBlocks);\n    return numUCBlocks;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/LeaseManager.java",
      "extendedDetails": {}
    },
    "1382ae525c67bf95d8f3a436b547dbc72cfbb177": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7743. Code cleanup of BlockInfo and rename BlockInfo to BlockInfoContiguous. Contributed by Jing Zhao.\n",
      "commitDate": "08/02/15 11:51 AM",
      "commitName": "1382ae525c67bf95d8f3a436b547dbc72cfbb177",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "12/12/14 3:13 PM",
      "commitNameOld": "c78e3a7cdd10c40454e9acb06986ba6d8573cb19",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 57.86,
      "commitsBetweenForRepo": 371,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n   synchronized long getNumUnderConstructionBlocks() {\n     assert this.fsnamesystem.hasReadLock() : \"The FSNamesystem read lock wasn\u0027t\"\n       + \"acquired before counting under construction blocks\";\n     long numUCBlocks \u003d 0;\n     for (Lease lease : sortedLeases) {\n       for (String path : lease.getPaths()) {\n         final INodeFile cons;\n         try {\n           cons \u003d this.fsnamesystem.getFSDirectory().getINode(path).asFile();\n           Preconditions.checkState(cons.isUnderConstruction());\n         } catch (UnresolvedLinkException e) {\n           throw new AssertionError(\"Lease files should reside on this FS\");\n         }\n-        BlockInfo[] blocks \u003d cons.getBlocks();\n+        BlockInfoContiguous[] blocks \u003d cons.getBlocks();\n         if(blocks \u003d\u003d null)\n           continue;\n-        for(BlockInfo b : blocks) {\n+        for(BlockInfoContiguous b : blocks) {\n           if(!b.isComplete())\n             numUCBlocks++;\n         }\n       }\n     }\n     LOG.info(\"Number of blocks under construction: \" + numUCBlocks);\n     return numUCBlocks;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized long getNumUnderConstructionBlocks() {\n    assert this.fsnamesystem.hasReadLock() : \"The FSNamesystem read lock wasn\u0027t\"\n      + \"acquired before counting under construction blocks\";\n    long numUCBlocks \u003d 0;\n    for (Lease lease : sortedLeases) {\n      for (String path : lease.getPaths()) {\n        final INodeFile cons;\n        try {\n          cons \u003d this.fsnamesystem.getFSDirectory().getINode(path).asFile();\n          Preconditions.checkState(cons.isUnderConstruction());\n        } catch (UnresolvedLinkException e) {\n          throw new AssertionError(\"Lease files should reside on this FS\");\n        }\n        BlockInfoContiguous[] blocks \u003d cons.getBlocks();\n        if(blocks \u003d\u003d null)\n          continue;\n        for(BlockInfoContiguous b : blocks) {\n          if(!b.isComplete())\n            numUCBlocks++;\n        }\n      }\n    }\n    LOG.info(\"Number of blocks under construction: \" + numUCBlocks);\n    return numUCBlocks;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/LeaseManager.java",
      "extendedDetails": {}
    },
    "daacbc18d739d030822df0b75205eeb067f89850": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-4882. Prevent the Namenode\u0027s LeaseManager from looping forever in checkLeases (Ravi Prakash via Colin P. McCabe)\n",
      "commitDate": "24/11/14 10:46 AM",
      "commitName": "daacbc18d739d030822df0b75205eeb067f89850",
      "commitAuthor": "Colin Patrick Mccabe",
      "diff": "@@ -0,0 +1,25 @@\n+  synchronized long getNumUnderConstructionBlocks() {\n+    assert this.fsnamesystem.hasReadLock() : \"The FSNamesystem read lock wasn\u0027t\"\n+      + \"acquired before counting under construction blocks\";\n+    long numUCBlocks \u003d 0;\n+    for (Lease lease : sortedLeases) {\n+      for (String path : lease.getPaths()) {\n+        final INodeFile cons;\n+        try {\n+          cons \u003d this.fsnamesystem.getFSDirectory().getINode(path).asFile();\n+            Preconditions.checkState(cons.isUnderConstruction());\n+        } catch (UnresolvedLinkException e) {\n+          throw new AssertionError(\"Lease files should reside on this FS\");\n+        }\n+        BlockInfo[] blocks \u003d cons.getBlocks();\n+        if(blocks \u003d\u003d null)\n+          continue;\n+        for(BlockInfo b : blocks) {\n+          if(!b.isComplete())\n+            numUCBlocks++;\n+        }\n+      }\n+    }\n+    LOG.info(\"Number of blocks under construction: \" + numUCBlocks);\n+    return numUCBlocks;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized long getNumUnderConstructionBlocks() {\n    assert this.fsnamesystem.hasReadLock() : \"The FSNamesystem read lock wasn\u0027t\"\n      + \"acquired before counting under construction blocks\";\n    long numUCBlocks \u003d 0;\n    for (Lease lease : sortedLeases) {\n      for (String path : lease.getPaths()) {\n        final INodeFile cons;\n        try {\n          cons \u003d this.fsnamesystem.getFSDirectory().getINode(path).asFile();\n            Preconditions.checkState(cons.isUnderConstruction());\n        } catch (UnresolvedLinkException e) {\n          throw new AssertionError(\"Lease files should reside on this FS\");\n        }\n        BlockInfo[] blocks \u003d cons.getBlocks();\n        if(blocks \u003d\u003d null)\n          continue;\n        for(BlockInfo b : blocks) {\n          if(!b.isComplete())\n            numUCBlocks++;\n        }\n      }\n    }\n    LOG.info(\"Number of blocks under construction: \" + numUCBlocks);\n    return numUCBlocks;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/LeaseManager.java"
    }
  }
}