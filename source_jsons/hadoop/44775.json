{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMAdminCLI.java",
  "functionName": "updateNodeResource",
  "functionId": "updateNodeResource___nodeIdStr-String__resource-Resource__overCommitTimeout-int",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/RMAdminCLI.java",
  "functionStartLine": 479,
  "functionEndLine": 494,
  "numCommitsSeen": 94,
  "timeTaken": 4450,
  "changeHistory": [
    "2564b4d07f63de142fe1909d61904831c108667c",
    "c77a1095dc556e8bea87df6d8ddf36e898f27e86",
    "23c625ec571b01c0a2811728608890da38f86890",
    "06a70311b90a7bc676af86e778ec7bcd8dd6ea82",
    "73e3a49eb0d58f08549dc6b7054eb5c1f62819dc"
  ],
  "changeHistoryShort": {
    "2564b4d07f63de142fe1909d61904831c108667c": "Ymultichange(Yparameterchange,Yexceptionschange,Ybodychange)",
    "c77a1095dc556e8bea87df6d8ddf36e898f27e86": "Ybodychange",
    "23c625ec571b01c0a2811728608890da38f86890": "Ybodychange",
    "06a70311b90a7bc676af86e778ec7bcd8dd6ea82": "Ybodychange",
    "73e3a49eb0d58f08549dc6b7054eb5c1f62819dc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2564b4d07f63de142fe1909d61904831c108667c": {
      "type": "Ymultichange(Yparameterchange,Yexceptionschange,Ybodychange)",
      "commitMessage": "YARN-7119. Support multiple resource types in rmadmin updateNodeResource command. Contributed by Manikandan R.\n",
      "commitDate": "14/12/17 2:41 AM",
      "commitName": "2564b4d07f63de142fe1909d61904831c108667c",
      "commitAuthor": "Sunil G",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-7119. Support multiple resource types in rmadmin updateNodeResource command. Contributed by Manikandan R.\n",
          "commitDate": "14/12/17 2:41 AM",
          "commitName": "2564b4d07f63de142fe1909d61904831c108667c",
          "commitAuthor": "Sunil G",
          "commitDateOld": "30/08/17 6:04 PM",
          "commitNameOld": "ce79f7be29dfbad444614cb340c59e4ff8137e89",
          "commitAuthorOld": "Robert Kanter",
          "daysBetweenCommits": 105.4,
          "commitsBetweenForRepo": 847,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,16 @@\n-  private int updateNodeResource(String nodeIdStr, int memSize,\n-      int cores, int overCommitTimeout) throws IOException, YarnException {\n-    // check resource value first\n-    if (invalidResourceValue(memSize, cores)) {\n-      throw new IllegalArgumentException(\"Invalid resource value: \" + \"(\" +\n-          memSize + \",\" + cores + \") for updateNodeResource.\");\n-    }\n-    // Refresh the nodes\n+  private int updateNodeResource(String nodeIdStr, Resource resource,\n+      int overCommitTimeout) throws YarnException, IOException {\n+\n     ResourceManagerAdministrationProtocol adminProtocol \u003d createAdminProtocol();\n     UpdateNodeResourceRequest request \u003d\n       recordFactory.newRecordInstance(UpdateNodeResourceRequest.class);\n     NodeId nodeId \u003d NodeId.fromString(nodeIdStr);\n-    \n-    Resource resource \u003d Resources.createResource(memSize, cores);\n+\n     Map\u003cNodeId, ResourceOption\u003e resourceMap \u003d\n         new HashMap\u003cNodeId, ResourceOption\u003e();\n     resourceMap.put(\n         nodeId, ResourceOption.newInstance(resource, overCommitTimeout));\n     request.setNodeResourceMap(resourceMap);\n     adminProtocol.updateNodeResource(request);\n     return 0;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private int updateNodeResource(String nodeIdStr, Resource resource,\n      int overCommitTimeout) throws YarnException, IOException {\n\n    ResourceManagerAdministrationProtocol adminProtocol \u003d createAdminProtocol();\n    UpdateNodeResourceRequest request \u003d\n      recordFactory.newRecordInstance(UpdateNodeResourceRequest.class);\n    NodeId nodeId \u003d NodeId.fromString(nodeIdStr);\n\n    Map\u003cNodeId, ResourceOption\u003e resourceMap \u003d\n        new HashMap\u003cNodeId, ResourceOption\u003e();\n    resourceMap.put(\n        nodeId, ResourceOption.newInstance(resource, overCommitTimeout));\n    request.setNodeResourceMap(resourceMap);\n    adminProtocol.updateNodeResource(request);\n    return 0;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/RMAdminCLI.java",
          "extendedDetails": {
            "oldValue": "[nodeIdStr-String, memSize-int, cores-int, overCommitTimeout-int]",
            "newValue": "[nodeIdStr-String, resource-Resource, overCommitTimeout-int]"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "YARN-7119. Support multiple resource types in rmadmin updateNodeResource command. Contributed by Manikandan R.\n",
          "commitDate": "14/12/17 2:41 AM",
          "commitName": "2564b4d07f63de142fe1909d61904831c108667c",
          "commitAuthor": "Sunil G",
          "commitDateOld": "30/08/17 6:04 PM",
          "commitNameOld": "ce79f7be29dfbad444614cb340c59e4ff8137e89",
          "commitAuthorOld": "Robert Kanter",
          "daysBetweenCommits": 105.4,
          "commitsBetweenForRepo": 847,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,16 @@\n-  private int updateNodeResource(String nodeIdStr, int memSize,\n-      int cores, int overCommitTimeout) throws IOException, YarnException {\n-    // check resource value first\n-    if (invalidResourceValue(memSize, cores)) {\n-      throw new IllegalArgumentException(\"Invalid resource value: \" + \"(\" +\n-          memSize + \",\" + cores + \") for updateNodeResource.\");\n-    }\n-    // Refresh the nodes\n+  private int updateNodeResource(String nodeIdStr, Resource resource,\n+      int overCommitTimeout) throws YarnException, IOException {\n+\n     ResourceManagerAdministrationProtocol adminProtocol \u003d createAdminProtocol();\n     UpdateNodeResourceRequest request \u003d\n       recordFactory.newRecordInstance(UpdateNodeResourceRequest.class);\n     NodeId nodeId \u003d NodeId.fromString(nodeIdStr);\n-    \n-    Resource resource \u003d Resources.createResource(memSize, cores);\n+\n     Map\u003cNodeId, ResourceOption\u003e resourceMap \u003d\n         new HashMap\u003cNodeId, ResourceOption\u003e();\n     resourceMap.put(\n         nodeId, ResourceOption.newInstance(resource, overCommitTimeout));\n     request.setNodeResourceMap(resourceMap);\n     adminProtocol.updateNodeResource(request);\n     return 0;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private int updateNodeResource(String nodeIdStr, Resource resource,\n      int overCommitTimeout) throws YarnException, IOException {\n\n    ResourceManagerAdministrationProtocol adminProtocol \u003d createAdminProtocol();\n    UpdateNodeResourceRequest request \u003d\n      recordFactory.newRecordInstance(UpdateNodeResourceRequest.class);\n    NodeId nodeId \u003d NodeId.fromString(nodeIdStr);\n\n    Map\u003cNodeId, ResourceOption\u003e resourceMap \u003d\n        new HashMap\u003cNodeId, ResourceOption\u003e();\n    resourceMap.put(\n        nodeId, ResourceOption.newInstance(resource, overCommitTimeout));\n    request.setNodeResourceMap(resourceMap);\n    adminProtocol.updateNodeResource(request);\n    return 0;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/RMAdminCLI.java",
          "extendedDetails": {
            "oldValue": "[IOException, YarnException]",
            "newValue": "[YarnException, IOException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7119. Support multiple resource types in rmadmin updateNodeResource command. Contributed by Manikandan R.\n",
          "commitDate": "14/12/17 2:41 AM",
          "commitName": "2564b4d07f63de142fe1909d61904831c108667c",
          "commitAuthor": "Sunil G",
          "commitDateOld": "30/08/17 6:04 PM",
          "commitNameOld": "ce79f7be29dfbad444614cb340c59e4ff8137e89",
          "commitAuthorOld": "Robert Kanter",
          "daysBetweenCommits": 105.4,
          "commitsBetweenForRepo": 847,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,16 @@\n-  private int updateNodeResource(String nodeIdStr, int memSize,\n-      int cores, int overCommitTimeout) throws IOException, YarnException {\n-    // check resource value first\n-    if (invalidResourceValue(memSize, cores)) {\n-      throw new IllegalArgumentException(\"Invalid resource value: \" + \"(\" +\n-          memSize + \",\" + cores + \") for updateNodeResource.\");\n-    }\n-    // Refresh the nodes\n+  private int updateNodeResource(String nodeIdStr, Resource resource,\n+      int overCommitTimeout) throws YarnException, IOException {\n+\n     ResourceManagerAdministrationProtocol adminProtocol \u003d createAdminProtocol();\n     UpdateNodeResourceRequest request \u003d\n       recordFactory.newRecordInstance(UpdateNodeResourceRequest.class);\n     NodeId nodeId \u003d NodeId.fromString(nodeIdStr);\n-    \n-    Resource resource \u003d Resources.createResource(memSize, cores);\n+\n     Map\u003cNodeId, ResourceOption\u003e resourceMap \u003d\n         new HashMap\u003cNodeId, ResourceOption\u003e();\n     resourceMap.put(\n         nodeId, ResourceOption.newInstance(resource, overCommitTimeout));\n     request.setNodeResourceMap(resourceMap);\n     adminProtocol.updateNodeResource(request);\n     return 0;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private int updateNodeResource(String nodeIdStr, Resource resource,\n      int overCommitTimeout) throws YarnException, IOException {\n\n    ResourceManagerAdministrationProtocol adminProtocol \u003d createAdminProtocol();\n    UpdateNodeResourceRequest request \u003d\n      recordFactory.newRecordInstance(UpdateNodeResourceRequest.class);\n    NodeId nodeId \u003d NodeId.fromString(nodeIdStr);\n\n    Map\u003cNodeId, ResourceOption\u003e resourceMap \u003d\n        new HashMap\u003cNodeId, ResourceOption\u003e();\n    resourceMap.put(\n        nodeId, ResourceOption.newInstance(resource, overCommitTimeout));\n    request.setNodeResourceMap(resourceMap);\n    adminProtocol.updateNodeResource(request);\n    return 0;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/RMAdminCLI.java",
          "extendedDetails": {}
        }
      ]
    },
    "c77a1095dc556e8bea87df6d8ddf36e898f27e86": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1942. Deprecate toString/fromString methods from ConverterUtils and move them to records classes like ContainerId/ApplicationId, etc. (wangda)\n",
      "commitDate": "14/06/16 3:06 PM",
      "commitName": "c77a1095dc556e8bea87df6d8ddf36e898f27e86",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "18/02/16 12:40 AM",
      "commitNameOld": "c1afac3a98a4889d30a6ec7574a364fcbb6bb5b0",
      "commitAuthorOld": "Rohith Sharma K S",
      "daysBetweenCommits": 117.56,
      "commitsBetweenForRepo": 743,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n   private int updateNodeResource(String nodeIdStr, int memSize,\n       int cores, int overCommitTimeout) throws IOException, YarnException {\n     // check resource value first\n     if (invalidResourceValue(memSize, cores)) {\n       throw new IllegalArgumentException(\"Invalid resource value: \" + \"(\" +\n           memSize + \",\" + cores + \") for updateNodeResource.\");\n     }\n     // Refresh the nodes\n     ResourceManagerAdministrationProtocol adminProtocol \u003d createAdminProtocol();\n     UpdateNodeResourceRequest request \u003d\n       recordFactory.newRecordInstance(UpdateNodeResourceRequest.class);\n-    NodeId nodeId \u003d ConverterUtils.toNodeId(nodeIdStr);\n+    NodeId nodeId \u003d NodeId.fromString(nodeIdStr);\n     \n     Resource resource \u003d Resources.createResource(memSize, cores);\n     Map\u003cNodeId, ResourceOption\u003e resourceMap \u003d\n         new HashMap\u003cNodeId, ResourceOption\u003e();\n     resourceMap.put(\n         nodeId, ResourceOption.newInstance(resource, overCommitTimeout));\n     request.setNodeResourceMap(resourceMap);\n     adminProtocol.updateNodeResource(request);\n     return 0;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private int updateNodeResource(String nodeIdStr, int memSize,\n      int cores, int overCommitTimeout) throws IOException, YarnException {\n    // check resource value first\n    if (invalidResourceValue(memSize, cores)) {\n      throw new IllegalArgumentException(\"Invalid resource value: \" + \"(\" +\n          memSize + \",\" + cores + \") for updateNodeResource.\");\n    }\n    // Refresh the nodes\n    ResourceManagerAdministrationProtocol adminProtocol \u003d createAdminProtocol();\n    UpdateNodeResourceRequest request \u003d\n      recordFactory.newRecordInstance(UpdateNodeResourceRequest.class);\n    NodeId nodeId \u003d NodeId.fromString(nodeIdStr);\n    \n    Resource resource \u003d Resources.createResource(memSize, cores);\n    Map\u003cNodeId, ResourceOption\u003e resourceMap \u003d\n        new HashMap\u003cNodeId, ResourceOption\u003e();\n    resourceMap.put(\n        nodeId, ResourceOption.newInstance(resource, overCommitTimeout));\n    request.setNodeResourceMap(resourceMap);\n    adminProtocol.updateNodeResource(request);\n    return 0;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/RMAdminCLI.java",
      "extendedDetails": {}
    },
    "23c625ec571b01c0a2811728608890da38f86890": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4384. updateNodeResource CLI should not accept negative values for resource. (Junping Du via wangda)\n",
      "commitDate": "24/11/15 4:35 PM",
      "commitName": "23c625ec571b01c0a2811728608890da38f86890",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "12/11/15 6:49 AM",
      "commitNameOld": "06a70311b90a7bc676af86e778ec7bcd8dd6ea82",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 12.41,
      "commitsBetweenForRepo": 99,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,22 @@\n   private int updateNodeResource(String nodeIdStr, int memSize,\n       int cores, int overCommitTimeout) throws IOException, YarnException {\n+    // check resource value first\n+    if (invalidResourceValue(memSize, cores)) {\n+      throw new IllegalArgumentException(\"Invalid resource value: \" + \"(\" +\n+          memSize + \",\" + cores + \") for updateNodeResource.\");\n+    }\n     // Refresh the nodes\n     ResourceManagerAdministrationProtocol adminProtocol \u003d createAdminProtocol();\n     UpdateNodeResourceRequest request \u003d\n       recordFactory.newRecordInstance(UpdateNodeResourceRequest.class);\n     NodeId nodeId \u003d ConverterUtils.toNodeId(nodeIdStr);\n+    \n     Resource resource \u003d Resources.createResource(memSize, cores);\n     Map\u003cNodeId, ResourceOption\u003e resourceMap \u003d\n         new HashMap\u003cNodeId, ResourceOption\u003e();\n     resourceMap.put(\n         nodeId, ResourceOption.newInstance(resource, overCommitTimeout));\n     request.setNodeResourceMap(resourceMap);\n     adminProtocol.updateNodeResource(request);\n     return 0;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private int updateNodeResource(String nodeIdStr, int memSize,\n      int cores, int overCommitTimeout) throws IOException, YarnException {\n    // check resource value first\n    if (invalidResourceValue(memSize, cores)) {\n      throw new IllegalArgumentException(\"Invalid resource value: \" + \"(\" +\n          memSize + \",\" + cores + \") for updateNodeResource.\");\n    }\n    // Refresh the nodes\n    ResourceManagerAdministrationProtocol adminProtocol \u003d createAdminProtocol();\n    UpdateNodeResourceRequest request \u003d\n      recordFactory.newRecordInstance(UpdateNodeResourceRequest.class);\n    NodeId nodeId \u003d ConverterUtils.toNodeId(nodeIdStr);\n    \n    Resource resource \u003d Resources.createResource(memSize, cores);\n    Map\u003cNodeId, ResourceOption\u003e resourceMap \u003d\n        new HashMap\u003cNodeId, ResourceOption\u003e();\n    resourceMap.put(\n        nodeId, ResourceOption.newInstance(resource, overCommitTimeout));\n    request.setNodeResourceMap(resourceMap);\n    adminProtocol.updateNodeResource(request);\n    return 0;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/RMAdminCLI.java",
      "extendedDetails": {}
    },
    "06a70311b90a7bc676af86e778ec7bcd8dd6ea82": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4345. yarn rmadmin -updateNodeResource doesn\u0027t work. Contributed by Junping Du\n",
      "commitDate": "12/11/15 6:49 AM",
      "commitName": "06a70311b90a7bc676af86e778ec7bcd8dd6ea82",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "15/09/15 7:56 AM",
      "commitNameOld": "73e3a49eb0d58f08549dc6b7054eb5c1f62819dc",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 57.99,
      "commitsBetweenForRepo": 475,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,16 @@\n   private int updateNodeResource(String nodeIdStr, int memSize,\n       int cores, int overCommitTimeout) throws IOException, YarnException {\n     // Refresh the nodes\n     ResourceManagerAdministrationProtocol adminProtocol \u003d createAdminProtocol();\n     UpdateNodeResourceRequest request \u003d\n       recordFactory.newRecordInstance(UpdateNodeResourceRequest.class);\n     NodeId nodeId \u003d ConverterUtils.toNodeId(nodeIdStr);\n     Resource resource \u003d Resources.createResource(memSize, cores);\n     Map\u003cNodeId, ResourceOption\u003e resourceMap \u003d\n         new HashMap\u003cNodeId, ResourceOption\u003e();\n     resourceMap.put(\n         nodeId, ResourceOption.newInstance(resource, overCommitTimeout));\n+    request.setNodeResourceMap(resourceMap);\n     adminProtocol.updateNodeResource(request);\n     return 0;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private int updateNodeResource(String nodeIdStr, int memSize,\n      int cores, int overCommitTimeout) throws IOException, YarnException {\n    // Refresh the nodes\n    ResourceManagerAdministrationProtocol adminProtocol \u003d createAdminProtocol();\n    UpdateNodeResourceRequest request \u003d\n      recordFactory.newRecordInstance(UpdateNodeResourceRequest.class);\n    NodeId nodeId \u003d ConverterUtils.toNodeId(nodeIdStr);\n    Resource resource \u003d Resources.createResource(memSize, cores);\n    Map\u003cNodeId, ResourceOption\u003e resourceMap \u003d\n        new HashMap\u003cNodeId, ResourceOption\u003e();\n    resourceMap.put(\n        nodeId, ResourceOption.newInstance(resource, overCommitTimeout));\n    request.setNodeResourceMap(resourceMap);\n    adminProtocol.updateNodeResource(request);\n    return 0;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/RMAdminCLI.java",
      "extendedDetails": {}
    },
    "73e3a49eb0d58f08549dc6b7054eb5c1f62819dc": {
      "type": "Yintroduced",
      "commitMessage": "YARN-313. Add Admin API for supporting node resource configuration in command line. (Contributed by Inigo Goiri, Kenji Kikushima and Junping Du)\n",
      "commitDate": "15/09/15 7:56 AM",
      "commitName": "73e3a49eb0d58f08549dc6b7054eb5c1f62819dc",
      "commitAuthor": "Junping Du",
      "diff": "@@ -0,0 +1,15 @@\n+  private int updateNodeResource(String nodeIdStr, int memSize,\n+      int cores, int overCommitTimeout) throws IOException, YarnException {\n+    // Refresh the nodes\n+    ResourceManagerAdministrationProtocol adminProtocol \u003d createAdminProtocol();\n+    UpdateNodeResourceRequest request \u003d\n+      recordFactory.newRecordInstance(UpdateNodeResourceRequest.class);\n+    NodeId nodeId \u003d ConverterUtils.toNodeId(nodeIdStr);\n+    Resource resource \u003d Resources.createResource(memSize, cores);\n+    Map\u003cNodeId, ResourceOption\u003e resourceMap \u003d\n+        new HashMap\u003cNodeId, ResourceOption\u003e();\n+    resourceMap.put(\n+        nodeId, ResourceOption.newInstance(resource, overCommitTimeout));\n+    adminProtocol.updateNodeResource(request);\n+    return 0;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private int updateNodeResource(String nodeIdStr, int memSize,\n      int cores, int overCommitTimeout) throws IOException, YarnException {\n    // Refresh the nodes\n    ResourceManagerAdministrationProtocol adminProtocol \u003d createAdminProtocol();\n    UpdateNodeResourceRequest request \u003d\n      recordFactory.newRecordInstance(UpdateNodeResourceRequest.class);\n    NodeId nodeId \u003d ConverterUtils.toNodeId(nodeIdStr);\n    Resource resource \u003d Resources.createResource(memSize, cores);\n    Map\u003cNodeId, ResourceOption\u003e resourceMap \u003d\n        new HashMap\u003cNodeId, ResourceOption\u003e();\n    resourceMap.put(\n        nodeId, ResourceOption.newInstance(resource, overCommitTimeout));\n    adminProtocol.updateNodeResource(request);\n    return 0;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/RMAdminCLI.java"
    }
  }
}