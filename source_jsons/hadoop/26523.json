{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TaskAttemptImpl.java",
  "functionName": "configureEnv",
  "functionId": "configureEnv___conf-Configuration",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java",
  "functionStartLine": 944,
  "functionEndLine": 969,
  "numCommitsSeen": 108,
  "timeTaken": 1978,
  "changeHistory": [
    "4571351cccf6d4977469d3d623cf045b06a5f5f0",
    "845529b3ab338e759665a687eb525fb2cccde7bf"
  ],
  "changeHistoryShort": {
    "4571351cccf6d4977469d3d623cf045b06a5f5f0": "Ybodychange",
    "845529b3ab338e759665a687eb525fb2cccde7bf": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4571351cccf6d4977469d3d623cf045b06a5f5f0": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-7069. Add ability to specify user environment variables individually. Contributed by Jim Brennan\n",
      "commitDate": "12/04/18 9:12 AM",
      "commitName": "4571351cccf6d4977469d3d623cf045b06a5f5f0",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "26/01/18 12:36 PM",
      "commitNameOld": "a37e7f0ad8b68c7ed16c242bedf62f4cde48d6fd",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 75.82,
      "commitsBetweenForRepo": 635,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n   private static Map\u003cString, String\u003e configureEnv(Configuration conf)\n       throws IOException {\n     Map\u003cString, String\u003e environment \u003d new HashMap\u003cString, String\u003e();\n     MRApps.addToEnvironment(environment, Environment.CLASSPATH.name(),\n         getInitialClasspath(conf), conf);\n \n     if (initialAppClasspath !\u003d null) {\n       MRApps.addToEnvironment(environment, Environment.APP_CLASSPATH.name(),\n           initialAppClasspath, conf);\n     }\n \n     // Shell\n     environment.put(Environment.SHELL.name(), conf\n         .get(MRJobConfig.MAPRED_ADMIN_USER_SHELL, MRJobConfig.DEFAULT_SHELL));\n \n     // Add pwd to LD_LIBRARY_PATH, add this before adding anything else\n     MRApps.addToEnvironment(environment, Environment.LD_LIBRARY_PATH.name(),\n         MRApps.crossPlatformifyMREnv(conf, Environment.PWD), conf);\n \n     // Add the env variables passed by the admin\n-    MRApps.setEnvFromInputString(environment,\n-        conf.get(MRJobConfig.MAPRED_ADMIN_USER_ENV,\n-            MRJobConfig.DEFAULT_MAPRED_ADMIN_USER_ENV),\n-        conf);\n+    MRApps.setEnvFromInputProperty(environment,\n+        MRJobConfig.MAPRED_ADMIN_USER_ENV,\n+        MRJobConfig.DEFAULT_MAPRED_ADMIN_USER_ENV, conf);\n+\n     return environment;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static Map\u003cString, String\u003e configureEnv(Configuration conf)\n      throws IOException {\n    Map\u003cString, String\u003e environment \u003d new HashMap\u003cString, String\u003e();\n    MRApps.addToEnvironment(environment, Environment.CLASSPATH.name(),\n        getInitialClasspath(conf), conf);\n\n    if (initialAppClasspath !\u003d null) {\n      MRApps.addToEnvironment(environment, Environment.APP_CLASSPATH.name(),\n          initialAppClasspath, conf);\n    }\n\n    // Shell\n    environment.put(Environment.SHELL.name(), conf\n        .get(MRJobConfig.MAPRED_ADMIN_USER_SHELL, MRJobConfig.DEFAULT_SHELL));\n\n    // Add pwd to LD_LIBRARY_PATH, add this before adding anything else\n    MRApps.addToEnvironment(environment, Environment.LD_LIBRARY_PATH.name(),\n        MRApps.crossPlatformifyMREnv(conf, Environment.PWD), conf);\n\n    // Add the env variables passed by the admin\n    MRApps.setEnvFromInputProperty(environment,\n        MRJobConfig.MAPRED_ADMIN_USER_ENV,\n        MRJobConfig.DEFAULT_MAPRED_ADMIN_USER_ENV, conf);\n\n    return environment;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java",
      "extendedDetails": {}
    },
    "845529b3ab338e759665a687eb525fb2cccde7bf": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-6824. TaskAttemptImpl#createCommonContainerLaunchContext is longer than 150 lines. Contributed by Chris Trezzo.\n",
      "commitDate": "02/04/17 9:06 PM",
      "commitName": "845529b3ab338e759665a687eb525fb2cccde7bf",
      "commitAuthor": "Akira Ajisaka",
      "diff": "@@ -0,0 +1,26 @@\n+  private static Map\u003cString, String\u003e configureEnv(Configuration conf)\n+      throws IOException {\n+    Map\u003cString, String\u003e environment \u003d new HashMap\u003cString, String\u003e();\n+    MRApps.addToEnvironment(environment, Environment.CLASSPATH.name(),\n+        getInitialClasspath(conf), conf);\n+\n+    if (initialAppClasspath !\u003d null) {\n+      MRApps.addToEnvironment(environment, Environment.APP_CLASSPATH.name(),\n+          initialAppClasspath, conf);\n+    }\n+\n+    // Shell\n+    environment.put(Environment.SHELL.name(), conf\n+        .get(MRJobConfig.MAPRED_ADMIN_USER_SHELL, MRJobConfig.DEFAULT_SHELL));\n+\n+    // Add pwd to LD_LIBRARY_PATH, add this before adding anything else\n+    MRApps.addToEnvironment(environment, Environment.LD_LIBRARY_PATH.name(),\n+        MRApps.crossPlatformifyMREnv(conf, Environment.PWD), conf);\n+\n+    // Add the env variables passed by the admin\n+    MRApps.setEnvFromInputString(environment,\n+        conf.get(MRJobConfig.MAPRED_ADMIN_USER_ENV,\n+            MRJobConfig.DEFAULT_MAPRED_ADMIN_USER_ENV),\n+        conf);\n+    return environment;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static Map\u003cString, String\u003e configureEnv(Configuration conf)\n      throws IOException {\n    Map\u003cString, String\u003e environment \u003d new HashMap\u003cString, String\u003e();\n    MRApps.addToEnvironment(environment, Environment.CLASSPATH.name(),\n        getInitialClasspath(conf), conf);\n\n    if (initialAppClasspath !\u003d null) {\n      MRApps.addToEnvironment(environment, Environment.APP_CLASSPATH.name(),\n          initialAppClasspath, conf);\n    }\n\n    // Shell\n    environment.put(Environment.SHELL.name(), conf\n        .get(MRJobConfig.MAPRED_ADMIN_USER_SHELL, MRJobConfig.DEFAULT_SHELL));\n\n    // Add pwd to LD_LIBRARY_PATH, add this before adding anything else\n    MRApps.addToEnvironment(environment, Environment.LD_LIBRARY_PATH.name(),\n        MRApps.crossPlatformifyMREnv(conf, Environment.PWD), conf);\n\n    // Add the env variables passed by the admin\n    MRApps.setEnvFromInputString(environment,\n        conf.get(MRJobConfig.MAPRED_ADMIN_USER_ENV,\n            MRJobConfig.DEFAULT_MAPRED_ADMIN_USER_ENV),\n        conf);\n    return environment;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java"
    }
  }
}