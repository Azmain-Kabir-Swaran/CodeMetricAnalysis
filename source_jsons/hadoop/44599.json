{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LogsCLI.java",
  "functionName": "filterContainersInfo",
  "functionId": "filterContainersInfo___options-ContainerLogsRequest__containers-List__ContainerReport__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/LogsCLI.java",
  "functionStartLine": 1326,
  "functionEndLine": 1354,
  "numCommitsSeen": 52,
  "timeTaken": 1422,
  "changeHistory": [
    "eb471632349deac4b62f8dec853c8ceb64c9617a"
  ],
  "changeHistoryShort": {
    "eb471632349deac4b62f8dec853c8ceb64c9617a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "eb471632349deac4b62f8dec853c8ceb64c9617a": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5200. Enhanced \"yarn logs\" to be able to get a list of containers whose logs are aggregated via a \"show_container_log_info\" option. Contributed by Xuan Gong.\n",
      "commitDate": "13/07/16 10:54 AM",
      "commitName": "eb471632349deac4b62f8dec853c8ceb64c9617a",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,29 @@\n+  private List\u003cContainerReport\u003e filterContainersInfo(\n+      ContainerLogsRequest options, List\u003cContainerReport\u003e containers) {\n+    List\u003cContainerReport\u003e filterReports \u003d new ArrayList\u003cContainerReport\u003e(\n+        containers);\n+    String nodeId \u003d options.getNodeId();\n+    boolean filterBasedOnNodeId \u003d (nodeId !\u003d null \u0026\u0026 !nodeId.isEmpty());\n+    String containerId \u003d options.getContainerId();\n+    boolean filterBasedOnContainerId \u003d (containerId !\u003d null\n+        \u0026\u0026 !containerId.isEmpty());\n+\n+    if (filterBasedOnNodeId || filterBasedOnContainerId) {\n+    // filter the reports based on the containerId and.or nodeId\n+      for(ContainerReport report : containers) {\n+        if (filterBasedOnContainerId) {\n+          if (!report.getContainerId().toString()\n+              .equalsIgnoreCase(containerId)) {\n+            filterReports.remove(report);\n+          }\n+        }\n+\n+        if (filterBasedOnNodeId) {\n+          if (!report.getAssignedNode().toString().equalsIgnoreCase(nodeId)) {\n+            filterReports.remove(report);\n+          }\n+        }\n+      }\n+    }\n+    return filterReports;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private List\u003cContainerReport\u003e filterContainersInfo(\n      ContainerLogsRequest options, List\u003cContainerReport\u003e containers) {\n    List\u003cContainerReport\u003e filterReports \u003d new ArrayList\u003cContainerReport\u003e(\n        containers);\n    String nodeId \u003d options.getNodeId();\n    boolean filterBasedOnNodeId \u003d (nodeId !\u003d null \u0026\u0026 !nodeId.isEmpty());\n    String containerId \u003d options.getContainerId();\n    boolean filterBasedOnContainerId \u003d (containerId !\u003d null\n        \u0026\u0026 !containerId.isEmpty());\n\n    if (filterBasedOnNodeId || filterBasedOnContainerId) {\n    // filter the reports based on the containerId and.or nodeId\n      for(ContainerReport report : containers) {\n        if (filterBasedOnContainerId) {\n          if (!report.getContainerId().toString()\n              .equalsIgnoreCase(containerId)) {\n            filterReports.remove(report);\n          }\n        }\n\n        if (filterBasedOnNodeId) {\n          if (!report.getAssignedNode().toString().equalsIgnoreCase(nodeId)) {\n            filterReports.remove(report);\n          }\n        }\n      }\n    }\n    return filterReports;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/LogsCLI.java"
    }
  }
}