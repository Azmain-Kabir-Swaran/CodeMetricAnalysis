{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BlockReportLeaseManager.java",
  "functionName": "pruneIfExpired",
  "functionId": "pruneIfExpired___monotonicNowMs-long__node-NodeData",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockReportLeaseManager.java",
  "functionStartLine": 268,
  "functionEndLine": 279,
  "numCommitsSeen": 5,
  "timeTaken": 1627,
  "changeHistory": [
    "12b5b06c063d93e6c683c9b6fac9a96912f59e59"
  ],
  "changeHistoryShort": {
    "12b5b06c063d93e6c683c9b6fac9a96912f59e59": "Yintroduced"
  },
  "changeHistoryDetails": {
    "12b5b06c063d93e6c683c9b6fac9a96912f59e59": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-7923. The DataNodes should rate-limit their full block reports by asking the NN on heartbeat messages (cmccabe)\n",
      "commitDate": "12/06/15 11:17 AM",
      "commitName": "12b5b06c063d93e6c683c9b6fac9a96912f59e59",
      "commitAuthor": "Colin Patrick Mccabe",
      "diff": "@@ -0,0 +1,12 @@\n+  private synchronized boolean pruneIfExpired(long monotonicNowMs,\n+                                              NodeData node) {\n+    if (monotonicNowMs \u003c node.leaseTimeMs + leaseExpiryMs) {\n+      return false;\n+    }\n+    LOG.info(\"Removing expired block report lease 0x{} for DN {}.\",\n+        Long.toHexString(node.leaseId), node.datanodeUuid);\n+    Preconditions.checkState(node.leaseId !\u003d 0);\n+    remove(node);\n+    deferredHead.addToBeginning(node);\n+    return true;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized boolean pruneIfExpired(long monotonicNowMs,\n                                              NodeData node) {\n    if (monotonicNowMs \u003c node.leaseTimeMs + leaseExpiryMs) {\n      return false;\n    }\n    LOG.info(\"Removing expired block report lease 0x{} for DN {}.\",\n        Long.toHexString(node.leaseId), node.datanodeUuid);\n    Preconditions.checkState(node.leaseId !\u003d 0);\n    remove(node);\n    deferredHead.addToBeginning(node);\n    return true;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockReportLeaseManager.java"
    }
  }
}