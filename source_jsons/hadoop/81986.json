{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ApplicationClassLoader.java",
  "functionName": "isSystemClass",
  "functionId": "isSystemClass___name-String__systemClasses-List__String__",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ApplicationClassLoader.java",
  "functionStartLine": 216,
  "functionEndLine": 244,
  "numCommitsSeen": 11,
  "timeTaken": 1604,
  "changeHistory": [
    "0bcea111e5daa9a4315346cf6919a4cfc8d90e0d",
    "b4ca7276902ad362f746ea997f7e977a7a6abd0e",
    "da4ba50269254456650c08c739f2b394d1182ee4",
    "b0e80d1a4768ed14398b2d22ba33206788f321d3",
    "d6143a5b3177e81056a319cb605e4a90063b1401"
  ],
  "changeHistoryShort": {
    "0bcea111e5daa9a4315346cf6919a4cfc8d90e0d": "Ybodychange",
    "b4ca7276902ad362f746ea997f7e977a7a6abd0e": "Ybodychange",
    "da4ba50269254456650c08c739f2b394d1182ee4": "Ymovefromfile",
    "b0e80d1a4768ed14398b2d22ba33206788f321d3": "Ymodifierchange",
    "d6143a5b3177e81056a319cb605e4a90063b1401": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0bcea111e5daa9a4315346cf6919a4cfc8d90e0d": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11211. mapreduce.job.classloader.system.classes semantics should be order-independent. (Yitong Zhou via gera)\n",
      "commitDate": "11/12/14 1:12 PM",
      "commitName": "0bcea111e5daa9a4315346cf6919a4cfc8d90e0d",
      "commitAuthor": "Gera Shegalov",
      "commitDateOld": "18/11/14 9:22 AM",
      "commitNameOld": "b4ca7276902ad362f746ea997f7e977a7a6abd0e",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 23.16,
      "commitsBetweenForRepo": 155,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,29 @@\n   public static boolean isSystemClass(String name, List\u003cString\u003e systemClasses) {\n+    boolean result \u003d false;\n     if (systemClasses !\u003d null) {\n       String canonicalName \u003d name.replace(\u0027/\u0027, \u0027.\u0027);\n       while (canonicalName.startsWith(\".\")) {\n         canonicalName\u003dcanonicalName.substring(1);\n       }\n       for (String c : systemClasses) {\n-        boolean result \u003d true;\n+        boolean shouldInclude \u003d true;\n         if (c.startsWith(\"-\")) {\n           c \u003d c.substring(1);\n-          result \u003d false;\n+          shouldInclude \u003d false;\n         }\n         if (canonicalName.startsWith(c)) {\n           if (   c.endsWith(\".\")                                   // package\n               || canonicalName.length() \u003d\u003d c.length()              // class\n               ||    canonicalName.length() \u003e c.length()            // nested\n                  \u0026\u0026 canonicalName.charAt(c.length()) \u003d\u003d \u0027$\u0027 ) {\n-            return result;\n+            if (shouldInclude) {\n+              result \u003d true;\n+            } else {\n+              return false;\n+            }\n           }\n         }\n       }\n     }\n-    return false;\n+    return result;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static boolean isSystemClass(String name, List\u003cString\u003e systemClasses) {\n    boolean result \u003d false;\n    if (systemClasses !\u003d null) {\n      String canonicalName \u003d name.replace(\u0027/\u0027, \u0027.\u0027);\n      while (canonicalName.startsWith(\".\")) {\n        canonicalName\u003dcanonicalName.substring(1);\n      }\n      for (String c : systemClasses) {\n        boolean shouldInclude \u003d true;\n        if (c.startsWith(\"-\")) {\n          c \u003d c.substring(1);\n          shouldInclude \u003d false;\n        }\n        if (canonicalName.startsWith(c)) {\n          if (   c.endsWith(\".\")                                   // package\n              || canonicalName.length() \u003d\u003d c.length()              // class\n              ||    canonicalName.length() \u003e c.length()            // nested\n                 \u0026\u0026 canonicalName.charAt(c.length()) \u003d\u003d \u0027$\u0027 ) {\n            if (shouldInclude) {\n              result \u003d true;\n            } else {\n              return false;\n            }\n          }\n        }\n      }\n    }\n    return result;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ApplicationClassLoader.java",
      "extendedDetails": {}
    },
    "b4ca7276902ad362f746ea997f7e977a7a6abd0e": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11309. System class pattern package.Foo should match package.Foo$Bar, too. Contributed by Gera Shegalov\n",
      "commitDate": "18/11/14 9:22 AM",
      "commitName": "b4ca7276902ad362f746ea997f7e977a7a6abd0e",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "29/09/14 7:36 AM",
      "commitNameOld": "cf4631d7c9448205f4952341c071e1650e7922dc",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 50.12,
      "commitsBetweenForRepo": 485,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,24 @@\n   public static boolean isSystemClass(String name, List\u003cString\u003e systemClasses) {\n     if (systemClasses !\u003d null) {\n       String canonicalName \u003d name.replace(\u0027/\u0027, \u0027.\u0027);\n       while (canonicalName.startsWith(\".\")) {\n         canonicalName\u003dcanonicalName.substring(1);\n       }\n       for (String c : systemClasses) {\n         boolean result \u003d true;\n         if (c.startsWith(\"-\")) {\n           c \u003d c.substring(1);\n           result \u003d false;\n         }\n-        if (c.endsWith(\".\") \u0026\u0026 canonicalName.startsWith(c)) {\n-          return result;\n-        } else if (canonicalName.equals(c)) {\n-          return result;\n+        if (canonicalName.startsWith(c)) {\n+          if (   c.endsWith(\".\")                                   // package\n+              || canonicalName.length() \u003d\u003d c.length()              // class\n+              ||    canonicalName.length() \u003e c.length()            // nested\n+                 \u0026\u0026 canonicalName.charAt(c.length()) \u003d\u003d \u0027$\u0027 ) {\n+            return result;\n+          }\n         }\n       }\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static boolean isSystemClass(String name, List\u003cString\u003e systemClasses) {\n    if (systemClasses !\u003d null) {\n      String canonicalName \u003d name.replace(\u0027/\u0027, \u0027.\u0027);\n      while (canonicalName.startsWith(\".\")) {\n        canonicalName\u003dcanonicalName.substring(1);\n      }\n      for (String c : systemClasses) {\n        boolean result \u003d true;\n        if (c.startsWith(\"-\")) {\n          c \u003d c.substring(1);\n          result \u003d false;\n        }\n        if (canonicalName.startsWith(c)) {\n          if (   c.endsWith(\".\")                                   // package\n              || canonicalName.length() \u003d\u003d c.length()              // class\n              ||    canonicalName.length() \u003e c.length()            // nested\n                 \u0026\u0026 canonicalName.charAt(c.length()) \u003d\u003d \u0027$\u0027 ) {\n            return result;\n          }\n        }\n      }\n    }\n    return false;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ApplicationClassLoader.java",
      "extendedDetails": {}
    },
    "da4ba50269254456650c08c739f2b394d1182ee4": {
      "type": "Ymovefromfile",
      "commitMessage": "HADOOP-10893. isolated classloader on the client side. Contributed by Sangjin Lee\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1619604 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/08/14 2:38 PM",
      "commitName": "da4ba50269254456650c08c739f2b394d1182ee4",
      "commitAuthor": "Jason Darrell Lowe",
      "commitDateOld": "21/08/14 2:33 PM",
      "commitNameOld": "cbbb899aedacd59040f55ac5ed911c1e62bf3879",
      "commitAuthorOld": "Allen Wittenauer",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static boolean isSystemClass(String name, List\u003cString\u003e systemClasses) {\n    if (systemClasses !\u003d null) {\n      String canonicalName \u003d name.replace(\u0027/\u0027, \u0027.\u0027);\n      while (canonicalName.startsWith(\".\")) {\n        canonicalName\u003dcanonicalName.substring(1);\n      }\n      for (String c : systemClasses) {\n        boolean result \u003d true;\n        if (c.startsWith(\"-\")) {\n          c \u003d c.substring(1);\n          result \u003d false;\n        }\n        if (c.endsWith(\".\") \u0026\u0026 canonicalName.startsWith(c)) {\n          return result;\n        } else if (canonicalName.equals(c)) {\n          return result;\n        }\n      }\n    }\n    return false;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ApplicationClassLoader.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/ApplicationClassLoader.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ApplicationClassLoader.java",
        "oldMethodName": "isSystemClass",
        "newMethodName": "isSystemClass"
      }
    },
    "b0e80d1a4768ed14398b2d22ba33206788f321d3": {
      "type": "Ymodifierchange",
      "commitMessage": "MAPREDUCE-5814. fat jar with *-default.xml may fail when mapreduce.job.classloader\u003dtrue. Contributed by Gera Shegalov\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1594326 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/05/14 11:55 AM",
      "commitName": "b0e80d1a4768ed14398b2d22ba33206788f321d3",
      "commitAuthor": "Jason Darrell Lowe",
      "commitDateOld": "16/06/13 8:32 PM",
      "commitNameOld": "f5f8f3bca4eeaedeff8181812452ec363c4db744",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 330.64,
      "commitsBetweenForRepo": 2190,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n-  static boolean isSystemClass(String name, List\u003cString\u003e systemClasses) {\n+  public static boolean isSystemClass(String name, List\u003cString\u003e systemClasses) {\n     if (systemClasses !\u003d null) {\n       String canonicalName \u003d name.replace(\u0027/\u0027, \u0027.\u0027);\n       while (canonicalName.startsWith(\".\")) {\n         canonicalName\u003dcanonicalName.substring(1);\n       }\n       for (String c : systemClasses) {\n         boolean result \u003d true;\n         if (c.startsWith(\"-\")) {\n           c \u003d c.substring(1);\n           result \u003d false;\n         }\n         if (c.endsWith(\".\") \u0026\u0026 canonicalName.startsWith(c)) {\n           return result;\n         } else if (canonicalName.equals(c)) {\n           return result;\n         }\n       }\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static boolean isSystemClass(String name, List\u003cString\u003e systemClasses) {\n    if (systemClasses !\u003d null) {\n      String canonicalName \u003d name.replace(\u0027/\u0027, \u0027.\u0027);\n      while (canonicalName.startsWith(\".\")) {\n        canonicalName\u003dcanonicalName.substring(1);\n      }\n      for (String c : systemClasses) {\n        boolean result \u003d true;\n        if (c.startsWith(\"-\")) {\n          c \u003d c.substring(1);\n          result \u003d false;\n        }\n        if (c.endsWith(\".\") \u0026\u0026 canonicalName.startsWith(c)) {\n          return result;\n        } else if (canonicalName.equals(c)) {\n          return result;\n        }\n      }\n    }\n    return false;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/ApplicationClassLoader.java",
      "extendedDetails": {
        "oldValue": "[static]",
        "newValue": "[public, static]"
      }
    },
    "d6143a5b3177e81056a319cb605e4a90063b1401": {
      "type": "Yintroduced",
      "commitMessage": "YARN-286. Add a YARN ApplicationClassLoader.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1428781 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/01/13 3:00 AM",
      "commitName": "d6143a5b3177e81056a319cb605e4a90063b1401",
      "commitAuthor": "Thomas White",
      "diff": "@@ -0,0 +1,21 @@\n+  static boolean isSystemClass(String name, List\u003cString\u003e systemClasses) {\n+    if (systemClasses !\u003d null) {\n+      String canonicalName \u003d name.replace(\u0027/\u0027, \u0027.\u0027);\n+      while (canonicalName.startsWith(\".\")) {\n+        canonicalName\u003dcanonicalName.substring(1);\n+      }\n+      for (String c : systemClasses) {\n+        boolean result \u003d true;\n+        if (c.startsWith(\"-\")) {\n+          c \u003d c.substring(1);\n+          result \u003d false;\n+        }\n+        if (c.endsWith(\".\") \u0026\u0026 canonicalName.startsWith(c)) {\n+          return result;\n+        } else if (canonicalName.equals(c)) {\n+          return result;\n+        }\n+      }\n+    }\n+    return false;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  static boolean isSystemClass(String name, List\u003cString\u003e systemClasses) {\n    if (systemClasses !\u003d null) {\n      String canonicalName \u003d name.replace(\u0027/\u0027, \u0027.\u0027);\n      while (canonicalName.startsWith(\".\")) {\n        canonicalName\u003dcanonicalName.substring(1);\n      }\n      for (String c : systemClasses) {\n        boolean result \u003d true;\n        if (c.startsWith(\"-\")) {\n          c \u003d c.substring(1);\n          result \u003d false;\n        }\n        if (c.endsWith(\".\") \u0026\u0026 canonicalName.startsWith(c)) {\n          return result;\n        } else if (canonicalName.equals(c)) {\n          return result;\n        }\n      }\n    }\n    return false;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/ApplicationClassLoader.java"
    }
  }
}