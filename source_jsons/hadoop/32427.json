{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ContainerLogsUtils.java",
  "functionName": "getContainerLogDirs",
  "functionId": "getContainerLogDirs___containerId-ContainerId__remoteUser-String__context-Context",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ContainerLogsUtils.java",
  "functionStartLine": 55,
  "functionEndLine": 72,
  "numCommitsSeen": 31,
  "timeTaken": 8162,
  "changeHistory": [
    "6a89e57b8dc4b5d0ace167e4c30d1fca737468e8",
    "a759abcd898224c3481c55aa7e424bc286f60b15",
    "67673227f22f0599593081d3f62378cce3c8cae5",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "ea17da82f7fc4b7fcc05bba82d141e27289fd7cb",
    "6165875dc6bf67d72fc3ce1d96dfc80ba312d4a1",
    "fafe8cd28e726566509c679e19d7da622f29f90d",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "6a89e57b8dc4b5d0ace167e4c30d1fca737468e8": "Ybodychange",
    "a759abcd898224c3481c55aa7e424bc286f60b15": "Ymultichange(Ymovefromfile,Ymodifierchange,Yexceptionschange,Ybodychange,Yparameterchange)",
    "67673227f22f0599593081d3f62378cce3c8cae5": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "ea17da82f7fc4b7fcc05bba82d141e27289fd7cb": "Ymultichange(Yparameterchange,Ybodychange)",
    "6165875dc6bf67d72fc3ce1d96dfc80ba312d4a1": "Ybodychange",
    "fafe8cd28e726566509c679e19d7da622f29f90d": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6a89e57b8dc4b5d0ace167e4c30d1fca737468e8": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1206. Fixed AM container log to show on NM web page after application finishes if log-aggregation is disabled. Contributed by Rohith Sharmaks\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1578614 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/03/14 2:49 PM",
      "commitName": "6a89e57b8dc4b5d0ace167e4c30d1fca737468e8",
      "commitAuthor": "Jian He",
      "commitDateOld": "01/09/13 5:09 PM",
      "commitNameOld": "a759abcd898224c3481c55aa7e424bc286f60b15",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 196.9,
      "commitsBetweenForRepo": 1369,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,18 @@\n   public static List\u003cFile\u003e getContainerLogDirs(ContainerId containerId,\n       String remoteUser, Context context) throws YarnException {\n     Container container \u003d context.getContainers().get(containerId);\n-    if (container \u003d\u003d null) {\n-      throw new YarnException(\"Container does not exist.\");\n-    }\n \n     Application application \u003d getApplicationForContainer(containerId, context);\n     checkAccess(remoteUser, application, context);\n-    checkState(container.getContainerState());\n+    // It is not required to have null check for container ( container \u003d\u003d null )\n+    // and throw back exception.Because when container is completed, NodeManager\n+    // remove container information from its NMContext.Configuring log\n+    // aggregation to false, container log view request is forwarded to NM. NM\n+    // does not have completed container information,but still NM serve request for\n+    // reading container logs. \n+    if (container !\u003d null) {\n+      checkState(container.getContainerState());\n+    }\n     \n     return getContainerLogDirs(containerId, context.getLocalDirsHandler());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static List\u003cFile\u003e getContainerLogDirs(ContainerId containerId,\n      String remoteUser, Context context) throws YarnException {\n    Container container \u003d context.getContainers().get(containerId);\n\n    Application application \u003d getApplicationForContainer(containerId, context);\n    checkAccess(remoteUser, application, context);\n    // It is not required to have null check for container ( container \u003d\u003d null )\n    // and throw back exception.Because when container is completed, NodeManager\n    // remove container information from its NMContext.Configuring log\n    // aggregation to false, container log view request is forwarded to NM. NM\n    // does not have completed container information,but still NM serve request for\n    // reading container logs. \n    if (container !\u003d null) {\n      checkState(container.getContainerState());\n    }\n    \n    return getContainerLogDirs(containerId, context.getLocalDirsHandler());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ContainerLogsUtils.java",
      "extendedDetails": {}
    },
    "a759abcd898224c3481c55aa7e424bc286f60b15": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Yexceptionschange,Ybodychange,Yparameterchange)",
      "commitMessage": "YARN-649. Added a new NM web-service to serve container logs in plain text over HTTP. Contributed by Sandy Ryza.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1519326 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "01/09/13 5:09 PM",
      "commitName": "a759abcd898224c3481c55aa7e424bc286f60b15",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-649. Added a new NM web-service to serve container logs in plain text over HTTP. Contributed by Sandy Ryza.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1519326 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "01/09/13 5:09 PM",
          "commitName": "a759abcd898224c3481c55aa7e424bc286f60b15",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "31/08/13 2:12 PM",
          "commitNameOld": "cbca1668317f3f2d295eea53d7bd020bda4a810f",
          "commitAuthorOld": "Brandon Li",
          "daysBetweenCommits": 1.12,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,13 @@\n-    static List\u003cFile\u003e getContainerLogDirs(ContainerId containerId,\n-        LocalDirsHandlerService dirsHandler) {\n-      List\u003cString\u003e logDirs \u003d dirsHandler.getLogDirs();\n-      List\u003cFile\u003e containerLogDirs \u003d new ArrayList\u003cFile\u003e(logDirs.size());\n-      for (String logDir : logDirs) {\n-        try {\n-          logDir \u003d new URI(logDir).getPath();\n-        } catch (URISyntaxException e) {\n-          Log.warn(e.getMessage());\n-        }\n-        String appIdStr \u003d ConverterUtils.toString(containerId\n-            .getApplicationAttemptId().getApplicationId());\n-        File appLogDir \u003d new File(logDir, appIdStr);\n-        String containerIdStr \u003d ConverterUtils.toString(containerId);\n-        containerLogDirs.add(new File(appLogDir, containerIdStr));\n-      }\n-      return containerLogDirs;\n-    }\n\\ No newline at end of file\n+  public static List\u003cFile\u003e getContainerLogDirs(ContainerId containerId,\n+      String remoteUser, Context context) throws YarnException {\n+    Container container \u003d context.getContainers().get(containerId);\n+    if (container \u003d\u003d null) {\n+      throw new YarnException(\"Container does not exist.\");\n+    }\n+\n+    Application application \u003d getApplicationForContainer(containerId, context);\n+    checkAccess(remoteUser, application, context);\n+    checkState(container.getContainerState());\n+    \n+    return getContainerLogDirs(containerId, context.getLocalDirsHandler());\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  public static List\u003cFile\u003e getContainerLogDirs(ContainerId containerId,\n      String remoteUser, Context context) throws YarnException {\n    Container container \u003d context.getContainers().get(containerId);\n    if (container \u003d\u003d null) {\n      throw new YarnException(\"Container does not exist.\");\n    }\n\n    Application application \u003d getApplicationForContainer(containerId, context);\n    checkAccess(remoteUser, application, context);\n    checkState(container.getContainerState());\n    \n    return getContainerLogDirs(containerId, context.getLocalDirsHandler());\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ContainerLogsUtils.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ContainerLogsPage.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ContainerLogsUtils.java",
            "oldMethodName": "getContainerLogDirs",
            "newMethodName": "getContainerLogDirs"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-649. Added a new NM web-service to serve container logs in plain text over HTTP. Contributed by Sandy Ryza.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1519326 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "01/09/13 5:09 PM",
          "commitName": "a759abcd898224c3481c55aa7e424bc286f60b15",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "31/08/13 2:12 PM",
          "commitNameOld": "cbca1668317f3f2d295eea53d7bd020bda4a810f",
          "commitAuthorOld": "Brandon Li",
          "daysBetweenCommits": 1.12,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,13 @@\n-    static List\u003cFile\u003e getContainerLogDirs(ContainerId containerId,\n-        LocalDirsHandlerService dirsHandler) {\n-      List\u003cString\u003e logDirs \u003d dirsHandler.getLogDirs();\n-      List\u003cFile\u003e containerLogDirs \u003d new ArrayList\u003cFile\u003e(logDirs.size());\n-      for (String logDir : logDirs) {\n-        try {\n-          logDir \u003d new URI(logDir).getPath();\n-        } catch (URISyntaxException e) {\n-          Log.warn(e.getMessage());\n-        }\n-        String appIdStr \u003d ConverterUtils.toString(containerId\n-            .getApplicationAttemptId().getApplicationId());\n-        File appLogDir \u003d new File(logDir, appIdStr);\n-        String containerIdStr \u003d ConverterUtils.toString(containerId);\n-        containerLogDirs.add(new File(appLogDir, containerIdStr));\n-      }\n-      return containerLogDirs;\n-    }\n\\ No newline at end of file\n+  public static List\u003cFile\u003e getContainerLogDirs(ContainerId containerId,\n+      String remoteUser, Context context) throws YarnException {\n+    Container container \u003d context.getContainers().get(containerId);\n+    if (container \u003d\u003d null) {\n+      throw new YarnException(\"Container does not exist.\");\n+    }\n+\n+    Application application \u003d getApplicationForContainer(containerId, context);\n+    checkAccess(remoteUser, application, context);\n+    checkState(container.getContainerState());\n+    \n+    return getContainerLogDirs(containerId, context.getLocalDirsHandler());\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  public static List\u003cFile\u003e getContainerLogDirs(ContainerId containerId,\n      String remoteUser, Context context) throws YarnException {\n    Container container \u003d context.getContainers().get(containerId);\n    if (container \u003d\u003d null) {\n      throw new YarnException(\"Container does not exist.\");\n    }\n\n    Application application \u003d getApplicationForContainer(containerId, context);\n    checkAccess(remoteUser, application, context);\n    checkState(container.getContainerState());\n    \n    return getContainerLogDirs(containerId, context.getLocalDirsHandler());\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ContainerLogsUtils.java",
          "extendedDetails": {
            "oldValue": "[static]",
            "newValue": "[public, static]"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "YARN-649. Added a new NM web-service to serve container logs in plain text over HTTP. Contributed by Sandy Ryza.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1519326 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "01/09/13 5:09 PM",
          "commitName": "a759abcd898224c3481c55aa7e424bc286f60b15",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "31/08/13 2:12 PM",
          "commitNameOld": "cbca1668317f3f2d295eea53d7bd020bda4a810f",
          "commitAuthorOld": "Brandon Li",
          "daysBetweenCommits": 1.12,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,13 @@\n-    static List\u003cFile\u003e getContainerLogDirs(ContainerId containerId,\n-        LocalDirsHandlerService dirsHandler) {\n-      List\u003cString\u003e logDirs \u003d dirsHandler.getLogDirs();\n-      List\u003cFile\u003e containerLogDirs \u003d new ArrayList\u003cFile\u003e(logDirs.size());\n-      for (String logDir : logDirs) {\n-        try {\n-          logDir \u003d new URI(logDir).getPath();\n-        } catch (URISyntaxException e) {\n-          Log.warn(e.getMessage());\n-        }\n-        String appIdStr \u003d ConverterUtils.toString(containerId\n-            .getApplicationAttemptId().getApplicationId());\n-        File appLogDir \u003d new File(logDir, appIdStr);\n-        String containerIdStr \u003d ConverterUtils.toString(containerId);\n-        containerLogDirs.add(new File(appLogDir, containerIdStr));\n-      }\n-      return containerLogDirs;\n-    }\n\\ No newline at end of file\n+  public static List\u003cFile\u003e getContainerLogDirs(ContainerId containerId,\n+      String remoteUser, Context context) throws YarnException {\n+    Container container \u003d context.getContainers().get(containerId);\n+    if (container \u003d\u003d null) {\n+      throw new YarnException(\"Container does not exist.\");\n+    }\n+\n+    Application application \u003d getApplicationForContainer(containerId, context);\n+    checkAccess(remoteUser, application, context);\n+    checkState(container.getContainerState());\n+    \n+    return getContainerLogDirs(containerId, context.getLocalDirsHandler());\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  public static List\u003cFile\u003e getContainerLogDirs(ContainerId containerId,\n      String remoteUser, Context context) throws YarnException {\n    Container container \u003d context.getContainers().get(containerId);\n    if (container \u003d\u003d null) {\n      throw new YarnException(\"Container does not exist.\");\n    }\n\n    Application application \u003d getApplicationForContainer(containerId, context);\n    checkAccess(remoteUser, application, context);\n    checkState(container.getContainerState());\n    \n    return getContainerLogDirs(containerId, context.getLocalDirsHandler());\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ContainerLogsUtils.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[YarnException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-649. Added a new NM web-service to serve container logs in plain text over HTTP. Contributed by Sandy Ryza.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1519326 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "01/09/13 5:09 PM",
          "commitName": "a759abcd898224c3481c55aa7e424bc286f60b15",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "31/08/13 2:12 PM",
          "commitNameOld": "cbca1668317f3f2d295eea53d7bd020bda4a810f",
          "commitAuthorOld": "Brandon Li",
          "daysBetweenCommits": 1.12,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,13 @@\n-    static List\u003cFile\u003e getContainerLogDirs(ContainerId containerId,\n-        LocalDirsHandlerService dirsHandler) {\n-      List\u003cString\u003e logDirs \u003d dirsHandler.getLogDirs();\n-      List\u003cFile\u003e containerLogDirs \u003d new ArrayList\u003cFile\u003e(logDirs.size());\n-      for (String logDir : logDirs) {\n-        try {\n-          logDir \u003d new URI(logDir).getPath();\n-        } catch (URISyntaxException e) {\n-          Log.warn(e.getMessage());\n-        }\n-        String appIdStr \u003d ConverterUtils.toString(containerId\n-            .getApplicationAttemptId().getApplicationId());\n-        File appLogDir \u003d new File(logDir, appIdStr);\n-        String containerIdStr \u003d ConverterUtils.toString(containerId);\n-        containerLogDirs.add(new File(appLogDir, containerIdStr));\n-      }\n-      return containerLogDirs;\n-    }\n\\ No newline at end of file\n+  public static List\u003cFile\u003e getContainerLogDirs(ContainerId containerId,\n+      String remoteUser, Context context) throws YarnException {\n+    Container container \u003d context.getContainers().get(containerId);\n+    if (container \u003d\u003d null) {\n+      throw new YarnException(\"Container does not exist.\");\n+    }\n+\n+    Application application \u003d getApplicationForContainer(containerId, context);\n+    checkAccess(remoteUser, application, context);\n+    checkState(container.getContainerState());\n+    \n+    return getContainerLogDirs(containerId, context.getLocalDirsHandler());\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  public static List\u003cFile\u003e getContainerLogDirs(ContainerId containerId,\n      String remoteUser, Context context) throws YarnException {\n    Container container \u003d context.getContainers().get(containerId);\n    if (container \u003d\u003d null) {\n      throw new YarnException(\"Container does not exist.\");\n    }\n\n    Application application \u003d getApplicationForContainer(containerId, context);\n    checkAccess(remoteUser, application, context);\n    checkState(container.getContainerState());\n    \n    return getContainerLogDirs(containerId, context.getLocalDirsHandler());\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ContainerLogsUtils.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-649. Added a new NM web-service to serve container logs in plain text over HTTP. Contributed by Sandy Ryza.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1519326 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "01/09/13 5:09 PM",
          "commitName": "a759abcd898224c3481c55aa7e424bc286f60b15",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "31/08/13 2:12 PM",
          "commitNameOld": "cbca1668317f3f2d295eea53d7bd020bda4a810f",
          "commitAuthorOld": "Brandon Li",
          "daysBetweenCommits": 1.12,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,13 @@\n-    static List\u003cFile\u003e getContainerLogDirs(ContainerId containerId,\n-        LocalDirsHandlerService dirsHandler) {\n-      List\u003cString\u003e logDirs \u003d dirsHandler.getLogDirs();\n-      List\u003cFile\u003e containerLogDirs \u003d new ArrayList\u003cFile\u003e(logDirs.size());\n-      for (String logDir : logDirs) {\n-        try {\n-          logDir \u003d new URI(logDir).getPath();\n-        } catch (URISyntaxException e) {\n-          Log.warn(e.getMessage());\n-        }\n-        String appIdStr \u003d ConverterUtils.toString(containerId\n-            .getApplicationAttemptId().getApplicationId());\n-        File appLogDir \u003d new File(logDir, appIdStr);\n-        String containerIdStr \u003d ConverterUtils.toString(containerId);\n-        containerLogDirs.add(new File(appLogDir, containerIdStr));\n-      }\n-      return containerLogDirs;\n-    }\n\\ No newline at end of file\n+  public static List\u003cFile\u003e getContainerLogDirs(ContainerId containerId,\n+      String remoteUser, Context context) throws YarnException {\n+    Container container \u003d context.getContainers().get(containerId);\n+    if (container \u003d\u003d null) {\n+      throw new YarnException(\"Container does not exist.\");\n+    }\n+\n+    Application application \u003d getApplicationForContainer(containerId, context);\n+    checkAccess(remoteUser, application, context);\n+    checkState(container.getContainerState());\n+    \n+    return getContainerLogDirs(containerId, context.getLocalDirsHandler());\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  public static List\u003cFile\u003e getContainerLogDirs(ContainerId containerId,\n      String remoteUser, Context context) throws YarnException {\n    Container container \u003d context.getContainers().get(containerId);\n    if (container \u003d\u003d null) {\n      throw new YarnException(\"Container does not exist.\");\n    }\n\n    Application application \u003d getApplicationForContainer(containerId, context);\n    checkAccess(remoteUser, application, context);\n    checkState(container.getContainerState());\n    \n    return getContainerLogDirs(containerId, context.getLocalDirsHandler());\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ContainerLogsUtils.java",
          "extendedDetails": {
            "oldValue": "[containerId-ContainerId, dirsHandler-LocalDirsHandlerService]",
            "newValue": "[containerId-ContainerId, remoteUser-String, context-Context]"
          }
        }
      ]
    },
    "67673227f22f0599593081d3f62378cce3c8cae5": {
      "type": "Ybodychange",
      "commitMessage": "YARN-22. Fix ContainerLogs to work if the log-dir is specified as a URI. (Contributed by Mayank Bansal)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1375829 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/08/12 3:27 PM",
      "commitName": "67673227f22f0599593081d3f62378cce3c8cae5",
      "commitAuthor": "Siddharth Seth",
      "commitDateOld": "07/08/12 10:22 PM",
      "commitNameOld": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 13.71,
      "commitsBetweenForRepo": 81,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,18 @@\n     static List\u003cFile\u003e getContainerLogDirs(ContainerId containerId,\n-            LocalDirsHandlerService dirsHandler) {\n+        LocalDirsHandlerService dirsHandler) {\n       List\u003cString\u003e logDirs \u003d dirsHandler.getLogDirs();\n       List\u003cFile\u003e containerLogDirs \u003d new ArrayList\u003cFile\u003e(logDirs.size());\n       for (String logDir : logDirs) {\n-        String appIdStr \u003d \n-            ConverterUtils.toString(\n-                containerId.getApplicationAttemptId().getApplicationId());\n+        try {\n+          logDir \u003d new URI(logDir).getPath();\n+        } catch (URISyntaxException e) {\n+          Log.warn(e.getMessage());\n+        }\n+        String appIdStr \u003d ConverterUtils.toString(containerId\n+            .getApplicationAttemptId().getApplicationId());\n         File appLogDir \u003d new File(logDir, appIdStr);\n         String containerIdStr \u003d ConverterUtils.toString(containerId);\n         containerLogDirs.add(new File(appLogDir, containerIdStr));\n       }\n       return containerLogDirs;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    static List\u003cFile\u003e getContainerLogDirs(ContainerId containerId,\n        LocalDirsHandlerService dirsHandler) {\n      List\u003cString\u003e logDirs \u003d dirsHandler.getLogDirs();\n      List\u003cFile\u003e containerLogDirs \u003d new ArrayList\u003cFile\u003e(logDirs.size());\n      for (String logDir : logDirs) {\n        try {\n          logDir \u003d new URI(logDir).getPath();\n        } catch (URISyntaxException e) {\n          Log.warn(e.getMessage());\n        }\n        String appIdStr \u003d ConverterUtils.toString(containerId\n            .getApplicationAttemptId().getApplicationId());\n        File appLogDir \u003d new File(logDir, appIdStr);\n        String containerIdStr \u003d ConverterUtils.toString(containerId);\n        containerLogDirs.add(new File(appLogDir, containerIdStr));\n      }\n      return containerLogDirs;\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ContainerLogsPage.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    static List\u003cFile\u003e getContainerLogDirs(ContainerId containerId,\n            LocalDirsHandlerService dirsHandler) {\n      List\u003cString\u003e logDirs \u003d dirsHandler.getLogDirs();\n      List\u003cFile\u003e containerLogDirs \u003d new ArrayList\u003cFile\u003e(logDirs.size());\n      for (String logDir : logDirs) {\n        String appIdStr \u003d \n            ConverterUtils.toString(\n                containerId.getApplicationAttemptId().getApplicationId());\n        File appLogDir \u003d new File(logDir, appIdStr);\n        String containerIdStr \u003d ConverterUtils.toString(containerId);\n        containerLogDirs.add(new File(appLogDir, containerIdStr));\n      }\n      return containerLogDirs;\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ContainerLogsPage.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ContainerLogsPage.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ContainerLogsPage.java"
      }
    },
    "ea17da82f7fc4b7fcc05bba82d141e27289fd7cb": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "MAPREDUCE-3121. NodeManager should handle disk-failures (Ravi Gummadi via mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1208131 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/11/11 3:17 PM",
      "commitName": "ea17da82f7fc4b7fcc05bba82d141e27289fd7cb",
      "commitAuthor": "Mahadev Konar",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "MAPREDUCE-3121. NodeManager should handle disk-failures (Ravi Gummadi via mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1208131 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "29/11/11 3:17 PM",
          "commitName": "ea17da82f7fc4b7fcc05bba82d141e27289fd7cb",
          "commitAuthor": "Mahadev Konar",
          "commitDateOld": "03/11/11 1:02 AM",
          "commitNameOld": "c27601fefebd0af887a12d684bfc6f90d9fc0321",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 26.64,
          "commitsBetweenForRepo": 114,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,14 @@\n-        getContainerLogDirs(Configuration conf, ContainerId containerId) {\n-      String[] logDirs \u003d conf.getStrings(YarnConfiguration.NM_LOG_DIRS,\n-          YarnConfiguration.DEFAULT_NM_LOG_DIRS);\n-      List\u003cFile\u003e containerLogDirs \u003d new ArrayList\u003cFile\u003e(logDirs.length);\n+    static List\u003cFile\u003e getContainerLogDirs(ContainerId containerId,\n+            LocalDirsHandlerService dirsHandler) {\n+      List\u003cString\u003e logDirs \u003d dirsHandler.getLogDirs();\n+      List\u003cFile\u003e containerLogDirs \u003d new ArrayList\u003cFile\u003e(logDirs.size());\n       for (String logDir : logDirs) {\n         String appIdStr \u003d \n             ConverterUtils.toString(\n                 containerId.getApplicationAttemptId().getApplicationId());\n         File appLogDir \u003d new File(logDir, appIdStr);\n         String containerIdStr \u003d ConverterUtils.toString(containerId);\n         containerLogDirs.add(new File(appLogDir, containerIdStr));\n       }\n       return containerLogDirs;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    static List\u003cFile\u003e getContainerLogDirs(ContainerId containerId,\n            LocalDirsHandlerService dirsHandler) {\n      List\u003cString\u003e logDirs \u003d dirsHandler.getLogDirs();\n      List\u003cFile\u003e containerLogDirs \u003d new ArrayList\u003cFile\u003e(logDirs.size());\n      for (String logDir : logDirs) {\n        String appIdStr \u003d \n            ConverterUtils.toString(\n                containerId.getApplicationAttemptId().getApplicationId());\n        File appLogDir \u003d new File(logDir, appIdStr);\n        String containerIdStr \u003d ConverterUtils.toString(containerId);\n        containerLogDirs.add(new File(appLogDir, containerIdStr));\n      }\n      return containerLogDirs;\n    }",
          "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ContainerLogsPage.java",
          "extendedDetails": {
            "oldValue": "[conf-Configuration, containerId-ContainerId]",
            "newValue": "[containerId-ContainerId, dirsHandler-LocalDirsHandlerService]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-3121. NodeManager should handle disk-failures (Ravi Gummadi via mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1208131 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "29/11/11 3:17 PM",
          "commitName": "ea17da82f7fc4b7fcc05bba82d141e27289fd7cb",
          "commitAuthor": "Mahadev Konar",
          "commitDateOld": "03/11/11 1:02 AM",
          "commitNameOld": "c27601fefebd0af887a12d684bfc6f90d9fc0321",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 26.64,
          "commitsBetweenForRepo": 114,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,14 @@\n-        getContainerLogDirs(Configuration conf, ContainerId containerId) {\n-      String[] logDirs \u003d conf.getStrings(YarnConfiguration.NM_LOG_DIRS,\n-          YarnConfiguration.DEFAULT_NM_LOG_DIRS);\n-      List\u003cFile\u003e containerLogDirs \u003d new ArrayList\u003cFile\u003e(logDirs.length);\n+    static List\u003cFile\u003e getContainerLogDirs(ContainerId containerId,\n+            LocalDirsHandlerService dirsHandler) {\n+      List\u003cString\u003e logDirs \u003d dirsHandler.getLogDirs();\n+      List\u003cFile\u003e containerLogDirs \u003d new ArrayList\u003cFile\u003e(logDirs.size());\n       for (String logDir : logDirs) {\n         String appIdStr \u003d \n             ConverterUtils.toString(\n                 containerId.getApplicationAttemptId().getApplicationId());\n         File appLogDir \u003d new File(logDir, appIdStr);\n         String containerIdStr \u003d ConverterUtils.toString(containerId);\n         containerLogDirs.add(new File(appLogDir, containerIdStr));\n       }\n       return containerLogDirs;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    static List\u003cFile\u003e getContainerLogDirs(ContainerId containerId,\n            LocalDirsHandlerService dirsHandler) {\n      List\u003cString\u003e logDirs \u003d dirsHandler.getLogDirs();\n      List\u003cFile\u003e containerLogDirs \u003d new ArrayList\u003cFile\u003e(logDirs.size());\n      for (String logDir : logDirs) {\n        String appIdStr \u003d \n            ConverterUtils.toString(\n                containerId.getApplicationAttemptId().getApplicationId());\n        File appLogDir \u003d new File(logDir, appIdStr);\n        String containerIdStr \u003d ConverterUtils.toString(containerId);\n        containerLogDirs.add(new File(appLogDir, containerIdStr));\n      }\n      return containerLogDirs;\n    }",
          "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ContainerLogsPage.java",
          "extendedDetails": {}
        }
      ]
    },
    "6165875dc6bf67d72fc3ce1d96dfc80ba312d4a1": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2896. Simplify all apis to in org.apache.hadoop.yarn.api.records.* to be get/set only. Added javadocs to all public records.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1169980 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/09/11 5:05 PM",
      "commitName": "6165875dc6bf67d72fc3ce1d96dfc80ba312d4a1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "08/09/11 6:44 PM",
      "commitNameOld": "fafe8cd28e726566509c679e19d7da622f29f90d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 3.93,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,14 @@\n         getContainerLogDirs(Configuration conf, ContainerId containerId) {\n       String[] logDirs \u003d\n           conf.getStrings(YarnConfiguration.NM_LOG_DIRS, YarnConfiguration.DEFAULT_NM_LOG_DIRS);\n       List\u003cFile\u003e containerLogDirs \u003d new ArrayList\u003cFile\u003e(logDirs.length);\n       for (String logDir : logDirs) {\n-        String appIdStr \u003d ConverterUtils.toString(containerId.getAppId());\n+        String appIdStr \u003d \n+            ConverterUtils.toString(\n+                containerId.getApplicationAttemptId().getApplicationId());\n         File appLogDir \u003d new File(logDir, appIdStr);\n         String containerIdStr \u003d ConverterUtils.toString(containerId);\n         containerLogDirs.add(new File(appLogDir, containerIdStr));\n       }\n       return containerLogDirs;\n     }\n\\ No newline at end of file\n",
      "actualSource": "        getContainerLogDirs(Configuration conf, ContainerId containerId) {\n      String[] logDirs \u003d\n          conf.getStrings(YarnConfiguration.NM_LOG_DIRS, YarnConfiguration.DEFAULT_NM_LOG_DIRS);\n      List\u003cFile\u003e containerLogDirs \u003d new ArrayList\u003cFile\u003e(logDirs.length);\n      for (String logDir : logDirs) {\n        String appIdStr \u003d \n            ConverterUtils.toString(\n                containerId.getApplicationAttemptId().getApplicationId());\n        File appLogDir \u003d new File(logDir, appIdStr);\n        String containerIdStr \u003d ConverterUtils.toString(containerId);\n        containerLogDirs.add(new File(appLogDir, containerIdStr));\n      }\n      return containerLogDirs;\n    }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ContainerLogsPage.java",
      "extendedDetails": {}
    },
    "fafe8cd28e726566509c679e19d7da622f29f90d": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2864. Normalize configuration variable names for YARN. Contributed by Robert Evans.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1166955 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/09/11 6:44 PM",
      "commitName": "fafe8cd28e726566509c679e19d7da622f29f90d",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:14 PM",
      "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 15.06,
      "commitsBetweenForRepo": 86,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n         getContainerLogDirs(Configuration conf, ContainerId containerId) {\n       String[] logDirs \u003d\n-          conf.getStrings(NM_LOG_DIR, DEFAULT_NM_LOG_DIR);\n+          conf.getStrings(YarnConfiguration.NM_LOG_DIRS, YarnConfiguration.DEFAULT_NM_LOG_DIRS);\n       List\u003cFile\u003e containerLogDirs \u003d new ArrayList\u003cFile\u003e(logDirs.length);\n       for (String logDir : logDirs) {\n         String appIdStr \u003d ConverterUtils.toString(containerId.getAppId());\n         File appLogDir \u003d new File(logDir, appIdStr);\n         String containerIdStr \u003d ConverterUtils.toString(containerId);\n         containerLogDirs.add(new File(appLogDir, containerIdStr));\n       }\n       return containerLogDirs;\n     }\n\\ No newline at end of file\n",
      "actualSource": "        getContainerLogDirs(Configuration conf, ContainerId containerId) {\n      String[] logDirs \u003d\n          conf.getStrings(YarnConfiguration.NM_LOG_DIRS, YarnConfiguration.DEFAULT_NM_LOG_DIRS);\n      List\u003cFile\u003e containerLogDirs \u003d new ArrayList\u003cFile\u003e(logDirs.length);\n      for (String logDir : logDirs) {\n        String appIdStr \u003d ConverterUtils.toString(containerId.getAppId());\n        File appLogDir \u003d new File(logDir, appIdStr);\n        String containerIdStr \u003d ConverterUtils.toString(containerId);\n        containerLogDirs.add(new File(appLogDir, containerIdStr));\n      }\n      return containerLogDirs;\n    }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ContainerLogsPage.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "        getContainerLogDirs(Configuration conf, ContainerId containerId) {\n      String[] logDirs \u003d\n          conf.getStrings(NM_LOG_DIR, DEFAULT_NM_LOG_DIR);\n      List\u003cFile\u003e containerLogDirs \u003d new ArrayList\u003cFile\u003e(logDirs.length);\n      for (String logDir : logDirs) {\n        String appIdStr \u003d ConverterUtils.toString(containerId.getAppId());\n        File appLogDir \u003d new File(logDir, appIdStr);\n        String containerIdStr \u003d ConverterUtils.toString(containerId);\n        containerLogDirs.add(new File(appLogDir, containerIdStr));\n      }\n      return containerLogDirs;\n    }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ContainerLogsPage.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ContainerLogsPage.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ContainerLogsPage.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,12 @@\n+        getContainerLogDirs(Configuration conf, ContainerId containerId) {\n+      String[] logDirs \u003d\n+          conf.getStrings(NM_LOG_DIR, DEFAULT_NM_LOG_DIR);\n+      List\u003cFile\u003e containerLogDirs \u003d new ArrayList\u003cFile\u003e(logDirs.length);\n+      for (String logDir : logDirs) {\n+        String appIdStr \u003d ConverterUtils.toString(containerId.getAppId());\n+        File appLogDir \u003d new File(logDir, appIdStr);\n+        String containerIdStr \u003d ConverterUtils.toString(containerId);\n+        containerLogDirs.add(new File(appLogDir, containerIdStr));\n+      }\n+      return containerLogDirs;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "        getContainerLogDirs(Configuration conf, ContainerId containerId) {\n      String[] logDirs \u003d\n          conf.getStrings(NM_LOG_DIR, DEFAULT_NM_LOG_DIR);\n      List\u003cFile\u003e containerLogDirs \u003d new ArrayList\u003cFile\u003e(logDirs.length);\n      for (String logDir : logDirs) {\n        String appIdStr \u003d ConverterUtils.toString(containerId.getAppId());\n        File appLogDir \u003d new File(logDir, appIdStr);\n        String containerIdStr \u003d ConverterUtils.toString(containerId);\n        containerLogDirs.add(new File(appLogDir, containerIdStr));\n      }\n      return containerLogDirs;\n    }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ContainerLogsPage.java"
    }
  }
}