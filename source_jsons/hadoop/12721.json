{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "InMemoryAliasMap.java",
  "functionName": "addFileToTarGzRecursively",
  "functionId": "addFileToTarGzRecursively___tOut-TarArchiveOutputStream__file-File__prefix-String__conf-Configuration",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/aliasmap/InMemoryAliasMap.java",
  "functionStartLine": 349,
  "functionEndLine": 373,
  "numCommitsSeen": 7,
  "timeTaken": 1356,
  "changeHistory": [
    "8fc0d04517912766a3102f3e611f7d0fabd2f815"
  ],
  "changeHistoryShort": {
    "8fc0d04517912766a3102f3e611f7d0fabd2f815": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8fc0d04517912766a3102f3e611f7d0fabd2f815": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-14001. [PROVIDED Storage] bootstrapStandby should manage the InMemoryAliasMap. Contributed by Virajith Jalaparti.\n",
      "commitDate": "07/12/18 6:30 PM",
      "commitName": "8fc0d04517912766a3102f3e611f7d0fabd2f815",
      "commitAuthor": "Inigo Goiri",
      "diff": "@@ -0,0 +1,25 @@\n+  private static void addFileToTarGzRecursively(TarArchiveOutputStream tOut,\n+      File file, String prefix, Configuration conf) throws IOException {\n+    String entryName \u003d prefix + file.getName();\n+    TarArchiveEntry tarEntry \u003d new TarArchiveEntry(file, entryName);\n+    tOut.putArchiveEntry(tarEntry);\n+\n+    LOG.debug(\"Adding entry {} to alias map archive\", entryName);\n+    if (file.isFile()) {\n+      try (FileInputStream in \u003d new FileInputStream(file)) {\n+        IOUtils.copyBytes(in, tOut, conf, false);\n+      }\n+      tOut.closeArchiveEntry();\n+    } else {\n+      tOut.closeArchiveEntry();\n+      File[] children \u003d file.listFiles();\n+      if (children !\u003d null) {\n+        for (File child : children) {\n+          // skip the LOCK file\n+          if (!child.getName().equals(\"LOCK\")) {\n+            addFileToTarGzRecursively(tOut, child, entryName + \"/\", conf);\n+          }\n+        }\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static void addFileToTarGzRecursively(TarArchiveOutputStream tOut,\n      File file, String prefix, Configuration conf) throws IOException {\n    String entryName \u003d prefix + file.getName();\n    TarArchiveEntry tarEntry \u003d new TarArchiveEntry(file, entryName);\n    tOut.putArchiveEntry(tarEntry);\n\n    LOG.debug(\"Adding entry {} to alias map archive\", entryName);\n    if (file.isFile()) {\n      try (FileInputStream in \u003d new FileInputStream(file)) {\n        IOUtils.copyBytes(in, tOut, conf, false);\n      }\n      tOut.closeArchiveEntry();\n    } else {\n      tOut.closeArchiveEntry();\n      File[] children \u003d file.listFiles();\n      if (children !\u003d null) {\n        for (File child : children) {\n          // skip the LOCK file\n          if (!child.getName().equals(\"LOCK\")) {\n            addFileToTarGzRecursively(tOut, child, entryName + \"/\", conf);\n          }\n        }\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/aliasmap/InMemoryAliasMap.java"
    }
  }
}