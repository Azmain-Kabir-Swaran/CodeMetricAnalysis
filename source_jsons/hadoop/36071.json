{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "MetricsOverviewTable.java",
  "functionName": "render",
  "functionId": "render___html-Block",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/MetricsOverviewTable.java",
  "functionStartLine": 55,
  "functionEndLine": 202,
  "numCommitsSeen": 15,
  "timeTaken": 3293,
  "changeHistory": [
    "a333ba54e3f5a1ca57b0fc94bfd008f3cbd5b14b",
    "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397",
    "1de56b0448d332717c8316c621b4f6af542a85cc",
    "6c6e734f0baaa7b0f8d6b85963e1ce87bac28b17",
    "d7e7f6aa03c67b6a6ccf664adcb06d90bc963e58",
    "658097d6da1b1aac8e01db459f0c3b456e99652f",
    "392c3aaea8e8f156b76e418157fa347256283c56",
    "1f9a0fd927ab7bef13db42dd80368fd781b3d2d1",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "c7007a8a3508a24a6f023302516fe8fbe270eab1",
    "3cdc100369ce920701fdddae12d7f7247332b3f3",
    "0ea8570be578be60e2f32849900a1c50506d78d3",
    "066cddb44e1f8dac3fdef36ee04d593f44078292",
    "cbdb07f4ca358b9507296868a913977ad82ed716",
    "9a4e890f4aadc921fa468fd1292d215704429b61"
  ],
  "changeHistoryShort": {
    "a333ba54e3f5a1ca57b0fc94bfd008f3cbd5b14b": "Ybodychange",
    "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397": "Ybodychange",
    "1de56b0448d332717c8316c621b4f6af542a85cc": "Ybodychange",
    "6c6e734f0baaa7b0f8d6b85963e1ce87bac28b17": "Ybodychange",
    "d7e7f6aa03c67b6a6ccf664adcb06d90bc963e58": "Ybodychange",
    "658097d6da1b1aac8e01db459f0c3b456e99652f": "Ybodychange",
    "392c3aaea8e8f156b76e418157fa347256283c56": "Ybodychange",
    "1f9a0fd927ab7bef13db42dd80368fd781b3d2d1": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "c7007a8a3508a24a6f023302516fe8fbe270eab1": "Ybodychange",
    "3cdc100369ce920701fdddae12d7f7247332b3f3": "Ybodychange",
    "0ea8570be578be60e2f32849900a1c50506d78d3": "Ybodychange",
    "066cddb44e1f8dac3fdef36ee04d593f44078292": "Ybodychange",
    "cbdb07f4ca358b9507296868a913977ad82ed716": "Ybodychange",
    "9a4e890f4aadc921fa468fd1292d215704429b61": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a333ba54e3f5a1ca57b0fc94bfd008f3cbd5b14b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7067. [YARN-3926] Optimize ResourceType information display in UI. Contributed by Wangda Tan.\n",
      "commitDate": "12/09/17 9:19 AM",
      "commitName": "a333ba54e3f5a1ca57b0fc94bfd008f3cbd5b14b",
      "commitAuthor": "Sunil G",
      "commitDateOld": "27/07/17 5:10 PM",
      "commitNameOld": "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 46.67,
      "commitsBetweenForRepo": 438,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,147 +1,148 @@\n   protected void render(Block html) {\n     //Yes this is a hack, but there is no other way to insert\n     //CSS in the correct spot\n     html.style(\".metrics {margin-bottom:5px}\"); \n     \n     ClusterMetricsInfo clusterMetrics \u003d new ClusterMetricsInfo(this.rm);\n     \n     DIV\u003cHamlet\u003e div \u003d html.div().$class(\"metrics\");\n     \n     div.h3(\"Cluster Metrics\").\n     table(\"#metricsoverview\").\n     thead().$class(\"ui-widget-header\").\n       tr().\n         th().$class(\"ui-state-default\").__(\"Apps Submitted\").__().\n         th().$class(\"ui-state-default\").__(\"Apps Pending\").__().\n         th().$class(\"ui-state-default\").__(\"Apps Running\").__().\n         th().$class(\"ui-state-default\").__(\"Apps Completed\").__().\n         th().$class(\"ui-state-default\").__(\"Containers Running\").__().\n         th().$class(\"ui-state-default\").__(\"Memory Used\").__().\n         th().$class(\"ui-state-default\").__(\"Memory Total\").__().\n         th().$class(\"ui-state-default\").__(\"Memory Reserved\").__().\n         th().$class(\"ui-state-default\").__(\"VCores Used\").__().\n         th().$class(\"ui-state-default\").__(\"VCores Total\").__().\n         th().$class(\"ui-state-default\").__(\"VCores Reserved\").__().\n         __().\n         __().\n     tbody().$class(\"ui-widget-content\").\n       tr().\n         td(String.valueOf(clusterMetrics.getAppsSubmitted())).\n         td(String.valueOf(clusterMetrics.getAppsPending())).\n         td(String.valueOf(clusterMetrics.getAppsRunning())).\n         td(\n             String.valueOf(\n                 clusterMetrics.getAppsCompleted() + \n                 clusterMetrics.getAppsFailed() + clusterMetrics.getAppsKilled()\n                 )\n             ).\n         td(String.valueOf(clusterMetrics.getContainersAllocated())).\n         td(StringUtils.byteDesc(clusterMetrics.getAllocatedMB() * BYTES_IN_MB)).\n         td(StringUtils.byteDesc(clusterMetrics.getTotalMB() * BYTES_IN_MB)).\n         td(StringUtils.byteDesc(clusterMetrics.getReservedMB() * BYTES_IN_MB)).\n         td(String.valueOf(clusterMetrics.getAllocatedVirtualCores())).\n         td(String.valueOf(clusterMetrics.getTotalVirtualCores())).\n         td(String.valueOf(clusterMetrics.getReservedVirtualCores())).\n         __().\n         __().__();\n \n     div.h3(\"Cluster Nodes Metrics\").\n     table(\"#nodemetricsoverview\").\n     thead().$class(\"ui-widget-header\").\n       tr().\n         th().$class(\"ui-state-default\").__(\"Active Nodes\").__().\n         th().$class(\"ui-state-default\").__(\"Decommissioning Nodes\").__().\n         th().$class(\"ui-state-default\").__(\"Decommissioned Nodes\").__().\n         th().$class(\"ui-state-default\").__(\"Lost Nodes\").__().\n         th().$class(\"ui-state-default\").__(\"Unhealthy Nodes\").__().\n         th().$class(\"ui-state-default\").__(\"Rebooted Nodes\").__().\n         th().$class(\"ui-state-default\").__(\"Shutdown Nodes\").__().\n         __().\n         __().\n     tbody().$class(\"ui-widget-content\").\n       tr().\n         td().a(url(\"nodes\"), String.valueOf(clusterMetrics.getActiveNodes())).__().\n         td().a(url(\"nodes/decommissioning\"), String.valueOf(clusterMetrics.getDecommissioningNodes())).__().\n         td().a(url(\"nodes/decommissioned\"), String.valueOf(clusterMetrics.getDecommissionedNodes())).__().\n         td().a(url(\"nodes/lost\"), String.valueOf(clusterMetrics.getLostNodes())).__().\n         td().a(url(\"nodes/unhealthy\"), String.valueOf(clusterMetrics.getUnhealthyNodes())).__().\n         td().a(url(\"nodes/rebooted\"), String.valueOf(clusterMetrics.getRebootedNodes())).__().\n         td().a(url(\"nodes/shutdown\"), String.valueOf(clusterMetrics.getShutdownNodes())).__().\n         __().\n         __().__();\n \n     String user \u003d request().getRemoteUser();\n     if (user !\u003d null) {\n       UserMetricsInfo userMetrics \u003d new UserMetricsInfo(this.rm, user);\n       if (userMetrics.metricsAvailable()) {\n         div.h3(\"User Metrics for \" + user).\n         table(\"#usermetricsoverview\").\n         thead().$class(\"ui-widget-header\").\n           tr().\n             th().$class(\"ui-state-default\").__(\"Apps Submitted\").__().\n             th().$class(\"ui-state-default\").__(\"Apps Pending\").__().\n             th().$class(\"ui-state-default\").__(\"Apps Running\").__().\n             th().$class(\"ui-state-default\").__(\"Apps Completed\").__().\n             th().$class(\"ui-state-default\").__(\"Containers Running\").__().\n             th().$class(\"ui-state-default\").__(\"Containers Pending\").__().\n             th().$class(\"ui-state-default\").__(\"Containers Reserved\").__().\n             th().$class(\"ui-state-default\").__(\"Memory Used\").__().\n             th().$class(\"ui-state-default\").__(\"Memory Pending\").__().\n             th().$class(\"ui-state-default\").__(\"Memory Reserved\").__().\n             th().$class(\"ui-state-default\").__(\"VCores Used\").__().\n             th().$class(\"ui-state-default\").__(\"VCores Pending\").__().\n             th().$class(\"ui-state-default\").__(\"VCores Reserved\").__().\n             __().\n             __().\n         tbody().$class(\"ui-widget-content\").\n           tr().\n             td(String.valueOf(userMetrics.getAppsSubmitted())).\n             td(String.valueOf(userMetrics.getAppsPending())).\n             td(String.valueOf(userMetrics.getAppsRunning())).\n             td(\n                 String.valueOf(\n                     (userMetrics.getAppsCompleted() + \n                      userMetrics.getAppsFailed() + userMetrics.getAppsKilled())\n                     )\n               ).\n             td(String.valueOf(userMetrics.getRunningContainers())).\n             td(String.valueOf(userMetrics.getPendingContainers())).\n             td(String.valueOf(userMetrics.getReservedContainers())).\n             td(StringUtils.byteDesc(userMetrics.getAllocatedMB() * BYTES_IN_MB)).\n             td(StringUtils.byteDesc(userMetrics.getPendingMB() * BYTES_IN_MB)).\n             td(StringUtils.byteDesc(userMetrics.getReservedMB() * BYTES_IN_MB)).\n             td(String.valueOf(userMetrics.getAllocatedVirtualCores())).\n             td(String.valueOf(userMetrics.getPendingVirtualCores())).\n             td(String.valueOf(userMetrics.getReservedVirtualCores())).\n             __().\n             __().__();\n         \n       }\n     }\n-    \n-    SchedulerInfo schedulerInfo\u003dnew SchedulerInfo(this.rm);\n+\n+    SchedulerInfo schedulerInfo \u003d new SchedulerInfo(this.rm);\n     \n     div.h3(\"Scheduler Metrics\").\n     table(\"#schedulermetricsoverview\").\n     thead().$class(\"ui-widget-header\").\n       tr().\n         th().$class(\"ui-state-default\").__(\"Scheduler Type\").__().\n         th().$class(\"ui-state-default\").__(\"Scheduling Resource Type\").__().\n         th().$class(\"ui-state-default\").__(\"Minimum Allocation\").__().\n         th().$class(\"ui-state-default\").__(\"Maximum Allocation\").__().\n         th().$class(\"ui-state-default\")\n             .__(\"Maximum Cluster Application Priority\").__().\n         __().\n         __().\n     tbody().$class(\"ui-widget-content\").\n       tr().\n         td(String.valueOf(schedulerInfo.getSchedulerType())).\n-        td(String.valueOf(schedulerInfo.getSchedulerResourceTypes())).\n+        td(String.valueOf(Arrays.toString(ResourceUtils.getResourcesTypeInfo()\n+            .toArray(new ResourceTypeInfo[0])))).\n         td(schedulerInfo.getMinAllocation().toString()).\n         td(schedulerInfo.getMaxAllocation().toString()).\n         td(String.valueOf(schedulerInfo.getMaxClusterLevelAppPriority())).\n         __().\n         __().__();\n \n     div.__();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void render(Block html) {\n    //Yes this is a hack, but there is no other way to insert\n    //CSS in the correct spot\n    html.style(\".metrics {margin-bottom:5px}\"); \n    \n    ClusterMetricsInfo clusterMetrics \u003d new ClusterMetricsInfo(this.rm);\n    \n    DIV\u003cHamlet\u003e div \u003d html.div().$class(\"metrics\");\n    \n    div.h3(\"Cluster Metrics\").\n    table(\"#metricsoverview\").\n    thead().$class(\"ui-widget-header\").\n      tr().\n        th().$class(\"ui-state-default\").__(\"Apps Submitted\").__().\n        th().$class(\"ui-state-default\").__(\"Apps Pending\").__().\n        th().$class(\"ui-state-default\").__(\"Apps Running\").__().\n        th().$class(\"ui-state-default\").__(\"Apps Completed\").__().\n        th().$class(\"ui-state-default\").__(\"Containers Running\").__().\n        th().$class(\"ui-state-default\").__(\"Memory Used\").__().\n        th().$class(\"ui-state-default\").__(\"Memory Total\").__().\n        th().$class(\"ui-state-default\").__(\"Memory Reserved\").__().\n        th().$class(\"ui-state-default\").__(\"VCores Used\").__().\n        th().$class(\"ui-state-default\").__(\"VCores Total\").__().\n        th().$class(\"ui-state-default\").__(\"VCores Reserved\").__().\n        __().\n        __().\n    tbody().$class(\"ui-widget-content\").\n      tr().\n        td(String.valueOf(clusterMetrics.getAppsSubmitted())).\n        td(String.valueOf(clusterMetrics.getAppsPending())).\n        td(String.valueOf(clusterMetrics.getAppsRunning())).\n        td(\n            String.valueOf(\n                clusterMetrics.getAppsCompleted() + \n                clusterMetrics.getAppsFailed() + clusterMetrics.getAppsKilled()\n                )\n            ).\n        td(String.valueOf(clusterMetrics.getContainersAllocated())).\n        td(StringUtils.byteDesc(clusterMetrics.getAllocatedMB() * BYTES_IN_MB)).\n        td(StringUtils.byteDesc(clusterMetrics.getTotalMB() * BYTES_IN_MB)).\n        td(StringUtils.byteDesc(clusterMetrics.getReservedMB() * BYTES_IN_MB)).\n        td(String.valueOf(clusterMetrics.getAllocatedVirtualCores())).\n        td(String.valueOf(clusterMetrics.getTotalVirtualCores())).\n        td(String.valueOf(clusterMetrics.getReservedVirtualCores())).\n        __().\n        __().__();\n\n    div.h3(\"Cluster Nodes Metrics\").\n    table(\"#nodemetricsoverview\").\n    thead().$class(\"ui-widget-header\").\n      tr().\n        th().$class(\"ui-state-default\").__(\"Active Nodes\").__().\n        th().$class(\"ui-state-default\").__(\"Decommissioning Nodes\").__().\n        th().$class(\"ui-state-default\").__(\"Decommissioned Nodes\").__().\n        th().$class(\"ui-state-default\").__(\"Lost Nodes\").__().\n        th().$class(\"ui-state-default\").__(\"Unhealthy Nodes\").__().\n        th().$class(\"ui-state-default\").__(\"Rebooted Nodes\").__().\n        th().$class(\"ui-state-default\").__(\"Shutdown Nodes\").__().\n        __().\n        __().\n    tbody().$class(\"ui-widget-content\").\n      tr().\n        td().a(url(\"nodes\"), String.valueOf(clusterMetrics.getActiveNodes())).__().\n        td().a(url(\"nodes/decommissioning\"), String.valueOf(clusterMetrics.getDecommissioningNodes())).__().\n        td().a(url(\"nodes/decommissioned\"), String.valueOf(clusterMetrics.getDecommissionedNodes())).__().\n        td().a(url(\"nodes/lost\"), String.valueOf(clusterMetrics.getLostNodes())).__().\n        td().a(url(\"nodes/unhealthy\"), String.valueOf(clusterMetrics.getUnhealthyNodes())).__().\n        td().a(url(\"nodes/rebooted\"), String.valueOf(clusterMetrics.getRebootedNodes())).__().\n        td().a(url(\"nodes/shutdown\"), String.valueOf(clusterMetrics.getShutdownNodes())).__().\n        __().\n        __().__();\n\n    String user \u003d request().getRemoteUser();\n    if (user !\u003d null) {\n      UserMetricsInfo userMetrics \u003d new UserMetricsInfo(this.rm, user);\n      if (userMetrics.metricsAvailable()) {\n        div.h3(\"User Metrics for \" + user).\n        table(\"#usermetricsoverview\").\n        thead().$class(\"ui-widget-header\").\n          tr().\n            th().$class(\"ui-state-default\").__(\"Apps Submitted\").__().\n            th().$class(\"ui-state-default\").__(\"Apps Pending\").__().\n            th().$class(\"ui-state-default\").__(\"Apps Running\").__().\n            th().$class(\"ui-state-default\").__(\"Apps Completed\").__().\n            th().$class(\"ui-state-default\").__(\"Containers Running\").__().\n            th().$class(\"ui-state-default\").__(\"Containers Pending\").__().\n            th().$class(\"ui-state-default\").__(\"Containers Reserved\").__().\n            th().$class(\"ui-state-default\").__(\"Memory Used\").__().\n            th().$class(\"ui-state-default\").__(\"Memory Pending\").__().\n            th().$class(\"ui-state-default\").__(\"Memory Reserved\").__().\n            th().$class(\"ui-state-default\").__(\"VCores Used\").__().\n            th().$class(\"ui-state-default\").__(\"VCores Pending\").__().\n            th().$class(\"ui-state-default\").__(\"VCores Reserved\").__().\n            __().\n            __().\n        tbody().$class(\"ui-widget-content\").\n          tr().\n            td(String.valueOf(userMetrics.getAppsSubmitted())).\n            td(String.valueOf(userMetrics.getAppsPending())).\n            td(String.valueOf(userMetrics.getAppsRunning())).\n            td(\n                String.valueOf(\n                    (userMetrics.getAppsCompleted() + \n                     userMetrics.getAppsFailed() + userMetrics.getAppsKilled())\n                    )\n              ).\n            td(String.valueOf(userMetrics.getRunningContainers())).\n            td(String.valueOf(userMetrics.getPendingContainers())).\n            td(String.valueOf(userMetrics.getReservedContainers())).\n            td(StringUtils.byteDesc(userMetrics.getAllocatedMB() * BYTES_IN_MB)).\n            td(StringUtils.byteDesc(userMetrics.getPendingMB() * BYTES_IN_MB)).\n            td(StringUtils.byteDesc(userMetrics.getReservedMB() * BYTES_IN_MB)).\n            td(String.valueOf(userMetrics.getAllocatedVirtualCores())).\n            td(String.valueOf(userMetrics.getPendingVirtualCores())).\n            td(String.valueOf(userMetrics.getReservedVirtualCores())).\n            __().\n            __().__();\n        \n      }\n    }\n\n    SchedulerInfo schedulerInfo \u003d new SchedulerInfo(this.rm);\n    \n    div.h3(\"Scheduler Metrics\").\n    table(\"#schedulermetricsoverview\").\n    thead().$class(\"ui-widget-header\").\n      tr().\n        th().$class(\"ui-state-default\").__(\"Scheduler Type\").__().\n        th().$class(\"ui-state-default\").__(\"Scheduling Resource Type\").__().\n        th().$class(\"ui-state-default\").__(\"Minimum Allocation\").__().\n        th().$class(\"ui-state-default\").__(\"Maximum Allocation\").__().\n        th().$class(\"ui-state-default\")\n            .__(\"Maximum Cluster Application Priority\").__().\n        __().\n        __().\n    tbody().$class(\"ui-widget-content\").\n      tr().\n        td(String.valueOf(schedulerInfo.getSchedulerType())).\n        td(String.valueOf(Arrays.toString(ResourceUtils.getResourcesTypeInfo()\n            .toArray(new ResourceTypeInfo[0])))).\n        td(schedulerInfo.getMinAllocation().toString()).\n        td(schedulerInfo.getMaxAllocation().toString()).\n        td(String.valueOf(schedulerInfo.getMaxClusterLevelAppPriority())).\n        __().\n        __().__();\n\n    div.__();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/MetricsOverviewTable.java",
      "extendedDetails": {}
    },
    "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11875. [JDK9] Adding a second copy of Hamlet without _ as a one-character identifier.\n",
      "commitDate": "27/07/17 5:10 PM",
      "commitName": "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "17/12/15 3:20 PM",
      "commitNameOld": "1de56b0448d332717c8316c621b4f6af542a85cc",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 588.04,
      "commitsBetweenForRepo": 3696,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,147 +1,147 @@\n   protected void render(Block html) {\n     //Yes this is a hack, but there is no other way to insert\n     //CSS in the correct spot\n     html.style(\".metrics {margin-bottom:5px}\"); \n     \n     ClusterMetricsInfo clusterMetrics \u003d new ClusterMetricsInfo(this.rm);\n     \n     DIV\u003cHamlet\u003e div \u003d html.div().$class(\"metrics\");\n     \n     div.h3(\"Cluster Metrics\").\n     table(\"#metricsoverview\").\n     thead().$class(\"ui-widget-header\").\n       tr().\n-        th().$class(\"ui-state-default\")._(\"Apps Submitted\")._().\n-        th().$class(\"ui-state-default\")._(\"Apps Pending\")._().\n-        th().$class(\"ui-state-default\")._(\"Apps Running\")._().\n-        th().$class(\"ui-state-default\")._(\"Apps Completed\")._().\n-        th().$class(\"ui-state-default\")._(\"Containers Running\")._().\n-        th().$class(\"ui-state-default\")._(\"Memory Used\")._().\n-        th().$class(\"ui-state-default\")._(\"Memory Total\")._().\n-        th().$class(\"ui-state-default\")._(\"Memory Reserved\")._().\n-        th().$class(\"ui-state-default\")._(\"VCores Used\")._().\n-        th().$class(\"ui-state-default\")._(\"VCores Total\")._().\n-        th().$class(\"ui-state-default\")._(\"VCores Reserved\")._().\n-      _().\n-    _().\n+        th().$class(\"ui-state-default\").__(\"Apps Submitted\").__().\n+        th().$class(\"ui-state-default\").__(\"Apps Pending\").__().\n+        th().$class(\"ui-state-default\").__(\"Apps Running\").__().\n+        th().$class(\"ui-state-default\").__(\"Apps Completed\").__().\n+        th().$class(\"ui-state-default\").__(\"Containers Running\").__().\n+        th().$class(\"ui-state-default\").__(\"Memory Used\").__().\n+        th().$class(\"ui-state-default\").__(\"Memory Total\").__().\n+        th().$class(\"ui-state-default\").__(\"Memory Reserved\").__().\n+        th().$class(\"ui-state-default\").__(\"VCores Used\").__().\n+        th().$class(\"ui-state-default\").__(\"VCores Total\").__().\n+        th().$class(\"ui-state-default\").__(\"VCores Reserved\").__().\n+        __().\n+        __().\n     tbody().$class(\"ui-widget-content\").\n       tr().\n         td(String.valueOf(clusterMetrics.getAppsSubmitted())).\n         td(String.valueOf(clusterMetrics.getAppsPending())).\n         td(String.valueOf(clusterMetrics.getAppsRunning())).\n         td(\n             String.valueOf(\n                 clusterMetrics.getAppsCompleted() + \n                 clusterMetrics.getAppsFailed() + clusterMetrics.getAppsKilled()\n                 )\n             ).\n         td(String.valueOf(clusterMetrics.getContainersAllocated())).\n         td(StringUtils.byteDesc(clusterMetrics.getAllocatedMB() * BYTES_IN_MB)).\n         td(StringUtils.byteDesc(clusterMetrics.getTotalMB() * BYTES_IN_MB)).\n         td(StringUtils.byteDesc(clusterMetrics.getReservedMB() * BYTES_IN_MB)).\n         td(String.valueOf(clusterMetrics.getAllocatedVirtualCores())).\n         td(String.valueOf(clusterMetrics.getTotalVirtualCores())).\n         td(String.valueOf(clusterMetrics.getReservedVirtualCores())).\n-      _().\n-    _()._();\n+        __().\n+        __().__();\n \n     div.h3(\"Cluster Nodes Metrics\").\n     table(\"#nodemetricsoverview\").\n     thead().$class(\"ui-widget-header\").\n       tr().\n-        th().$class(\"ui-state-default\")._(\"Active Nodes\")._().\n-        th().$class(\"ui-state-default\")._(\"Decommissioning Nodes\")._().\n-        th().$class(\"ui-state-default\")._(\"Decommissioned Nodes\")._().\n-        th().$class(\"ui-state-default\")._(\"Lost Nodes\")._().\n-        th().$class(\"ui-state-default\")._(\"Unhealthy Nodes\")._().\n-        th().$class(\"ui-state-default\")._(\"Rebooted Nodes\")._().\n-        th().$class(\"ui-state-default\")._(\"Shutdown Nodes\")._().\n-      _().\n-    _().\n+        th().$class(\"ui-state-default\").__(\"Active Nodes\").__().\n+        th().$class(\"ui-state-default\").__(\"Decommissioning Nodes\").__().\n+        th().$class(\"ui-state-default\").__(\"Decommissioned Nodes\").__().\n+        th().$class(\"ui-state-default\").__(\"Lost Nodes\").__().\n+        th().$class(\"ui-state-default\").__(\"Unhealthy Nodes\").__().\n+        th().$class(\"ui-state-default\").__(\"Rebooted Nodes\").__().\n+        th().$class(\"ui-state-default\").__(\"Shutdown Nodes\").__().\n+        __().\n+        __().\n     tbody().$class(\"ui-widget-content\").\n       tr().\n-        td().a(url(\"nodes\"),String.valueOf(clusterMetrics.getActiveNodes()))._().\n-        td().a(url(\"nodes/decommissioning\"), String.valueOf(clusterMetrics.getDecommissioningNodes()))._().\n-        td().a(url(\"nodes/decommissioned\"),String.valueOf(clusterMetrics.getDecommissionedNodes()))._().\n-        td().a(url(\"nodes/lost\"),String.valueOf(clusterMetrics.getLostNodes()))._().\n-        td().a(url(\"nodes/unhealthy\"),String.valueOf(clusterMetrics.getUnhealthyNodes()))._().\n-        td().a(url(\"nodes/rebooted\"),String.valueOf(clusterMetrics.getRebootedNodes()))._().\n-        td().a(url(\"nodes/shutdown\"),String.valueOf(clusterMetrics.getShutdownNodes()))._().\n-      _().\n-    _()._();\n+        td().a(url(\"nodes\"), String.valueOf(clusterMetrics.getActiveNodes())).__().\n+        td().a(url(\"nodes/decommissioning\"), String.valueOf(clusterMetrics.getDecommissioningNodes())).__().\n+        td().a(url(\"nodes/decommissioned\"), String.valueOf(clusterMetrics.getDecommissionedNodes())).__().\n+        td().a(url(\"nodes/lost\"), String.valueOf(clusterMetrics.getLostNodes())).__().\n+        td().a(url(\"nodes/unhealthy\"), String.valueOf(clusterMetrics.getUnhealthyNodes())).__().\n+        td().a(url(\"nodes/rebooted\"), String.valueOf(clusterMetrics.getRebootedNodes())).__().\n+        td().a(url(\"nodes/shutdown\"), String.valueOf(clusterMetrics.getShutdownNodes())).__().\n+        __().\n+        __().__();\n \n     String user \u003d request().getRemoteUser();\n     if (user !\u003d null) {\n       UserMetricsInfo userMetrics \u003d new UserMetricsInfo(this.rm, user);\n       if (userMetrics.metricsAvailable()) {\n         div.h3(\"User Metrics for \" + user).\n         table(\"#usermetricsoverview\").\n         thead().$class(\"ui-widget-header\").\n           tr().\n-            th().$class(\"ui-state-default\")._(\"Apps Submitted\")._().\n-            th().$class(\"ui-state-default\")._(\"Apps Pending\")._().\n-            th().$class(\"ui-state-default\")._(\"Apps Running\")._().\n-            th().$class(\"ui-state-default\")._(\"Apps Completed\")._().\n-            th().$class(\"ui-state-default\")._(\"Containers Running\")._().\n-            th().$class(\"ui-state-default\")._(\"Containers Pending\")._().\n-            th().$class(\"ui-state-default\")._(\"Containers Reserved\")._().\n-            th().$class(\"ui-state-default\")._(\"Memory Used\")._().\n-            th().$class(\"ui-state-default\")._(\"Memory Pending\")._().\n-            th().$class(\"ui-state-default\")._(\"Memory Reserved\")._().\n-            th().$class(\"ui-state-default\")._(\"VCores Used\")._().\n-            th().$class(\"ui-state-default\")._(\"VCores Pending\")._().\n-            th().$class(\"ui-state-default\")._(\"VCores Reserved\")._().\n-          _().\n-        _().\n+            th().$class(\"ui-state-default\").__(\"Apps Submitted\").__().\n+            th().$class(\"ui-state-default\").__(\"Apps Pending\").__().\n+            th().$class(\"ui-state-default\").__(\"Apps Running\").__().\n+            th().$class(\"ui-state-default\").__(\"Apps Completed\").__().\n+            th().$class(\"ui-state-default\").__(\"Containers Running\").__().\n+            th().$class(\"ui-state-default\").__(\"Containers Pending\").__().\n+            th().$class(\"ui-state-default\").__(\"Containers Reserved\").__().\n+            th().$class(\"ui-state-default\").__(\"Memory Used\").__().\n+            th().$class(\"ui-state-default\").__(\"Memory Pending\").__().\n+            th().$class(\"ui-state-default\").__(\"Memory Reserved\").__().\n+            th().$class(\"ui-state-default\").__(\"VCores Used\").__().\n+            th().$class(\"ui-state-default\").__(\"VCores Pending\").__().\n+            th().$class(\"ui-state-default\").__(\"VCores Reserved\").__().\n+            __().\n+            __().\n         tbody().$class(\"ui-widget-content\").\n           tr().\n             td(String.valueOf(userMetrics.getAppsSubmitted())).\n             td(String.valueOf(userMetrics.getAppsPending())).\n             td(String.valueOf(userMetrics.getAppsRunning())).\n             td(\n                 String.valueOf(\n                     (userMetrics.getAppsCompleted() + \n                      userMetrics.getAppsFailed() + userMetrics.getAppsKilled())\n                     )\n               ).\n             td(String.valueOf(userMetrics.getRunningContainers())).\n             td(String.valueOf(userMetrics.getPendingContainers())).\n             td(String.valueOf(userMetrics.getReservedContainers())).\n             td(StringUtils.byteDesc(userMetrics.getAllocatedMB() * BYTES_IN_MB)).\n             td(StringUtils.byteDesc(userMetrics.getPendingMB() * BYTES_IN_MB)).\n             td(StringUtils.byteDesc(userMetrics.getReservedMB() * BYTES_IN_MB)).\n             td(String.valueOf(userMetrics.getAllocatedVirtualCores())).\n             td(String.valueOf(userMetrics.getPendingVirtualCores())).\n             td(String.valueOf(userMetrics.getReservedVirtualCores())).\n-          _().\n-        _()._();\n+            __().\n+            __().__();\n         \n       }\n     }\n     \n     SchedulerInfo schedulerInfo\u003dnew SchedulerInfo(this.rm);\n     \n     div.h3(\"Scheduler Metrics\").\n     table(\"#schedulermetricsoverview\").\n     thead().$class(\"ui-widget-header\").\n       tr().\n-        th().$class(\"ui-state-default\")._(\"Scheduler Type\")._().\n-        th().$class(\"ui-state-default\")._(\"Scheduling Resource Type\")._().\n-        th().$class(\"ui-state-default\")._(\"Minimum Allocation\")._().\n-        th().$class(\"ui-state-default\")._(\"Maximum Allocation\")._().\n+        th().$class(\"ui-state-default\").__(\"Scheduler Type\").__().\n+        th().$class(\"ui-state-default\").__(\"Scheduling Resource Type\").__().\n+        th().$class(\"ui-state-default\").__(\"Minimum Allocation\").__().\n+        th().$class(\"ui-state-default\").__(\"Maximum Allocation\").__().\n         th().$class(\"ui-state-default\")\n-            ._(\"Maximum Cluster Application Priority\")._().\n-      _().\n-    _().\n+            .__(\"Maximum Cluster Application Priority\").__().\n+        __().\n+        __().\n     tbody().$class(\"ui-widget-content\").\n       tr().\n         td(String.valueOf(schedulerInfo.getSchedulerType())).\n         td(String.valueOf(schedulerInfo.getSchedulerResourceTypes())).\n         td(schedulerInfo.getMinAllocation().toString()).\n         td(schedulerInfo.getMaxAllocation().toString()).\n         td(String.valueOf(schedulerInfo.getMaxClusterLevelAppPriority())).\n-      _().\n-    _()._();\n+        __().\n+        __().__();\n \n-    div._();\n+    div.__();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void render(Block html) {\n    //Yes this is a hack, but there is no other way to insert\n    //CSS in the correct spot\n    html.style(\".metrics {margin-bottom:5px}\"); \n    \n    ClusterMetricsInfo clusterMetrics \u003d new ClusterMetricsInfo(this.rm);\n    \n    DIV\u003cHamlet\u003e div \u003d html.div().$class(\"metrics\");\n    \n    div.h3(\"Cluster Metrics\").\n    table(\"#metricsoverview\").\n    thead().$class(\"ui-widget-header\").\n      tr().\n        th().$class(\"ui-state-default\").__(\"Apps Submitted\").__().\n        th().$class(\"ui-state-default\").__(\"Apps Pending\").__().\n        th().$class(\"ui-state-default\").__(\"Apps Running\").__().\n        th().$class(\"ui-state-default\").__(\"Apps Completed\").__().\n        th().$class(\"ui-state-default\").__(\"Containers Running\").__().\n        th().$class(\"ui-state-default\").__(\"Memory Used\").__().\n        th().$class(\"ui-state-default\").__(\"Memory Total\").__().\n        th().$class(\"ui-state-default\").__(\"Memory Reserved\").__().\n        th().$class(\"ui-state-default\").__(\"VCores Used\").__().\n        th().$class(\"ui-state-default\").__(\"VCores Total\").__().\n        th().$class(\"ui-state-default\").__(\"VCores Reserved\").__().\n        __().\n        __().\n    tbody().$class(\"ui-widget-content\").\n      tr().\n        td(String.valueOf(clusterMetrics.getAppsSubmitted())).\n        td(String.valueOf(clusterMetrics.getAppsPending())).\n        td(String.valueOf(clusterMetrics.getAppsRunning())).\n        td(\n            String.valueOf(\n                clusterMetrics.getAppsCompleted() + \n                clusterMetrics.getAppsFailed() + clusterMetrics.getAppsKilled()\n                )\n            ).\n        td(String.valueOf(clusterMetrics.getContainersAllocated())).\n        td(StringUtils.byteDesc(clusterMetrics.getAllocatedMB() * BYTES_IN_MB)).\n        td(StringUtils.byteDesc(clusterMetrics.getTotalMB() * BYTES_IN_MB)).\n        td(StringUtils.byteDesc(clusterMetrics.getReservedMB() * BYTES_IN_MB)).\n        td(String.valueOf(clusterMetrics.getAllocatedVirtualCores())).\n        td(String.valueOf(clusterMetrics.getTotalVirtualCores())).\n        td(String.valueOf(clusterMetrics.getReservedVirtualCores())).\n        __().\n        __().__();\n\n    div.h3(\"Cluster Nodes Metrics\").\n    table(\"#nodemetricsoverview\").\n    thead().$class(\"ui-widget-header\").\n      tr().\n        th().$class(\"ui-state-default\").__(\"Active Nodes\").__().\n        th().$class(\"ui-state-default\").__(\"Decommissioning Nodes\").__().\n        th().$class(\"ui-state-default\").__(\"Decommissioned Nodes\").__().\n        th().$class(\"ui-state-default\").__(\"Lost Nodes\").__().\n        th().$class(\"ui-state-default\").__(\"Unhealthy Nodes\").__().\n        th().$class(\"ui-state-default\").__(\"Rebooted Nodes\").__().\n        th().$class(\"ui-state-default\").__(\"Shutdown Nodes\").__().\n        __().\n        __().\n    tbody().$class(\"ui-widget-content\").\n      tr().\n        td().a(url(\"nodes\"), String.valueOf(clusterMetrics.getActiveNodes())).__().\n        td().a(url(\"nodes/decommissioning\"), String.valueOf(clusterMetrics.getDecommissioningNodes())).__().\n        td().a(url(\"nodes/decommissioned\"), String.valueOf(clusterMetrics.getDecommissionedNodes())).__().\n        td().a(url(\"nodes/lost\"), String.valueOf(clusterMetrics.getLostNodes())).__().\n        td().a(url(\"nodes/unhealthy\"), String.valueOf(clusterMetrics.getUnhealthyNodes())).__().\n        td().a(url(\"nodes/rebooted\"), String.valueOf(clusterMetrics.getRebootedNodes())).__().\n        td().a(url(\"nodes/shutdown\"), String.valueOf(clusterMetrics.getShutdownNodes())).__().\n        __().\n        __().__();\n\n    String user \u003d request().getRemoteUser();\n    if (user !\u003d null) {\n      UserMetricsInfo userMetrics \u003d new UserMetricsInfo(this.rm, user);\n      if (userMetrics.metricsAvailable()) {\n        div.h3(\"User Metrics for \" + user).\n        table(\"#usermetricsoverview\").\n        thead().$class(\"ui-widget-header\").\n          tr().\n            th().$class(\"ui-state-default\").__(\"Apps Submitted\").__().\n            th().$class(\"ui-state-default\").__(\"Apps Pending\").__().\n            th().$class(\"ui-state-default\").__(\"Apps Running\").__().\n            th().$class(\"ui-state-default\").__(\"Apps Completed\").__().\n            th().$class(\"ui-state-default\").__(\"Containers Running\").__().\n            th().$class(\"ui-state-default\").__(\"Containers Pending\").__().\n            th().$class(\"ui-state-default\").__(\"Containers Reserved\").__().\n            th().$class(\"ui-state-default\").__(\"Memory Used\").__().\n            th().$class(\"ui-state-default\").__(\"Memory Pending\").__().\n            th().$class(\"ui-state-default\").__(\"Memory Reserved\").__().\n            th().$class(\"ui-state-default\").__(\"VCores Used\").__().\n            th().$class(\"ui-state-default\").__(\"VCores Pending\").__().\n            th().$class(\"ui-state-default\").__(\"VCores Reserved\").__().\n            __().\n            __().\n        tbody().$class(\"ui-widget-content\").\n          tr().\n            td(String.valueOf(userMetrics.getAppsSubmitted())).\n            td(String.valueOf(userMetrics.getAppsPending())).\n            td(String.valueOf(userMetrics.getAppsRunning())).\n            td(\n                String.valueOf(\n                    (userMetrics.getAppsCompleted() + \n                     userMetrics.getAppsFailed() + userMetrics.getAppsKilled())\n                    )\n              ).\n            td(String.valueOf(userMetrics.getRunningContainers())).\n            td(String.valueOf(userMetrics.getPendingContainers())).\n            td(String.valueOf(userMetrics.getReservedContainers())).\n            td(StringUtils.byteDesc(userMetrics.getAllocatedMB() * BYTES_IN_MB)).\n            td(StringUtils.byteDesc(userMetrics.getPendingMB() * BYTES_IN_MB)).\n            td(StringUtils.byteDesc(userMetrics.getReservedMB() * BYTES_IN_MB)).\n            td(String.valueOf(userMetrics.getAllocatedVirtualCores())).\n            td(String.valueOf(userMetrics.getPendingVirtualCores())).\n            td(String.valueOf(userMetrics.getReservedVirtualCores())).\n            __().\n            __().__();\n        \n      }\n    }\n    \n    SchedulerInfo schedulerInfo\u003dnew SchedulerInfo(this.rm);\n    \n    div.h3(\"Scheduler Metrics\").\n    table(\"#schedulermetricsoverview\").\n    thead().$class(\"ui-widget-header\").\n      tr().\n        th().$class(\"ui-state-default\").__(\"Scheduler Type\").__().\n        th().$class(\"ui-state-default\").__(\"Scheduling Resource Type\").__().\n        th().$class(\"ui-state-default\").__(\"Minimum Allocation\").__().\n        th().$class(\"ui-state-default\").__(\"Maximum Allocation\").__().\n        th().$class(\"ui-state-default\")\n            .__(\"Maximum Cluster Application Priority\").__().\n        __().\n        __().\n    tbody().$class(\"ui-widget-content\").\n      tr().\n        td(String.valueOf(schedulerInfo.getSchedulerType())).\n        td(String.valueOf(schedulerInfo.getSchedulerResourceTypes())).\n        td(schedulerInfo.getMinAllocation().toString()).\n        td(schedulerInfo.getMaxAllocation().toString()).\n        td(String.valueOf(schedulerInfo.getMaxClusterLevelAppPriority())).\n        __().\n        __().__();\n\n    div.__();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/MetricsOverviewTable.java",
      "extendedDetails": {}
    },
    "1de56b0448d332717c8316c621b4f6af542a85cc": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3226. UI changes for decommissioning node. Contributed by Sunil G.\n",
      "commitDate": "17/12/15 3:20 PM",
      "commitName": "1de56b0448d332717c8316c621b4f6af542a85cc",
      "commitAuthor": "Junping Du",
      "commitDateOld": "16/09/15 11:55 PM",
      "commitNameOld": "6c6e734f0baaa7b0f8d6b85963e1ce87bac28b17",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 91.68,
      "commitsBetweenForRepo": 689,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,135 +1,147 @@\n   protected void render(Block html) {\n     //Yes this is a hack, but there is no other way to insert\n     //CSS in the correct spot\n     html.style(\".metrics {margin-bottom:5px}\"); \n     \n-    ClusterMetricsInfo clusterMetrics \u003d \n- new ClusterMetricsInfo(this.rm);\n+    ClusterMetricsInfo clusterMetrics \u003d new ClusterMetricsInfo(this.rm);\n     \n     DIV\u003cHamlet\u003e div \u003d html.div().$class(\"metrics\");\n     \n     div.h3(\"Cluster Metrics\").\n     table(\"#metricsoverview\").\n     thead().$class(\"ui-widget-header\").\n       tr().\n         th().$class(\"ui-state-default\")._(\"Apps Submitted\")._().\n         th().$class(\"ui-state-default\")._(\"Apps Pending\")._().\n         th().$class(\"ui-state-default\")._(\"Apps Running\")._().\n         th().$class(\"ui-state-default\")._(\"Apps Completed\")._().\n         th().$class(\"ui-state-default\")._(\"Containers Running\")._().\n         th().$class(\"ui-state-default\")._(\"Memory Used\")._().\n         th().$class(\"ui-state-default\")._(\"Memory Total\")._().\n         th().$class(\"ui-state-default\")._(\"Memory Reserved\")._().\n         th().$class(\"ui-state-default\")._(\"VCores Used\")._().\n         th().$class(\"ui-state-default\")._(\"VCores Total\")._().\n         th().$class(\"ui-state-default\")._(\"VCores Reserved\")._().\n-        th().$class(\"ui-state-default\")._(\"Active Nodes\")._().\n-        th().$class(\"ui-state-default\")._(\"Decommissioned Nodes\")._().\n-        th().$class(\"ui-state-default\")._(\"Lost Nodes\")._().\n-        th().$class(\"ui-state-default\")._(\"Unhealthy Nodes\")._().\n-        th().$class(\"ui-state-default\")._(\"Rebooted Nodes\")._().\n-        th().$class(\"ui-state-default\")._(\"Shutdown Nodes\")._().\n       _().\n     _().\n     tbody().$class(\"ui-widget-content\").\n       tr().\n         td(String.valueOf(clusterMetrics.getAppsSubmitted())).\n         td(String.valueOf(clusterMetrics.getAppsPending())).\n         td(String.valueOf(clusterMetrics.getAppsRunning())).\n         td(\n             String.valueOf(\n                 clusterMetrics.getAppsCompleted() + \n                 clusterMetrics.getAppsFailed() + clusterMetrics.getAppsKilled()\n                 )\n             ).\n         td(String.valueOf(clusterMetrics.getContainersAllocated())).\n         td(StringUtils.byteDesc(clusterMetrics.getAllocatedMB() * BYTES_IN_MB)).\n         td(StringUtils.byteDesc(clusterMetrics.getTotalMB() * BYTES_IN_MB)).\n         td(StringUtils.byteDesc(clusterMetrics.getReservedMB() * BYTES_IN_MB)).\n         td(String.valueOf(clusterMetrics.getAllocatedVirtualCores())).\n         td(String.valueOf(clusterMetrics.getTotalVirtualCores())).\n         td(String.valueOf(clusterMetrics.getReservedVirtualCores())).\n+      _().\n+    _()._();\n+\n+    div.h3(\"Cluster Nodes Metrics\").\n+    table(\"#nodemetricsoverview\").\n+    thead().$class(\"ui-widget-header\").\n+      tr().\n+        th().$class(\"ui-state-default\")._(\"Active Nodes\")._().\n+        th().$class(\"ui-state-default\")._(\"Decommissioning Nodes\")._().\n+        th().$class(\"ui-state-default\")._(\"Decommissioned Nodes\")._().\n+        th().$class(\"ui-state-default\")._(\"Lost Nodes\")._().\n+        th().$class(\"ui-state-default\")._(\"Unhealthy Nodes\")._().\n+        th().$class(\"ui-state-default\")._(\"Rebooted Nodes\")._().\n+        th().$class(\"ui-state-default\")._(\"Shutdown Nodes\")._().\n+      _().\n+    _().\n+    tbody().$class(\"ui-widget-content\").\n+      tr().\n         td().a(url(\"nodes\"),String.valueOf(clusterMetrics.getActiveNodes()))._().\n+        td().a(url(\"nodes/decommissioning\"), String.valueOf(clusterMetrics.getDecommissioningNodes()))._().\n         td().a(url(\"nodes/decommissioned\"),String.valueOf(clusterMetrics.getDecommissionedNodes()))._().\n         td().a(url(\"nodes/lost\"),String.valueOf(clusterMetrics.getLostNodes()))._().\n         td().a(url(\"nodes/unhealthy\"),String.valueOf(clusterMetrics.getUnhealthyNodes()))._().\n         td().a(url(\"nodes/rebooted\"),String.valueOf(clusterMetrics.getRebootedNodes()))._().\n         td().a(url(\"nodes/shutdown\"),String.valueOf(clusterMetrics.getShutdownNodes()))._().\n       _().\n     _()._();\n-    \n+\n     String user \u003d request().getRemoteUser();\n     if (user !\u003d null) {\n       UserMetricsInfo userMetrics \u003d new UserMetricsInfo(this.rm, user);\n       if (userMetrics.metricsAvailable()) {\n         div.h3(\"User Metrics for \" + user).\n         table(\"#usermetricsoverview\").\n         thead().$class(\"ui-widget-header\").\n           tr().\n             th().$class(\"ui-state-default\")._(\"Apps Submitted\")._().\n             th().$class(\"ui-state-default\")._(\"Apps Pending\")._().\n             th().$class(\"ui-state-default\")._(\"Apps Running\")._().\n             th().$class(\"ui-state-default\")._(\"Apps Completed\")._().\n             th().$class(\"ui-state-default\")._(\"Containers Running\")._().\n             th().$class(\"ui-state-default\")._(\"Containers Pending\")._().\n             th().$class(\"ui-state-default\")._(\"Containers Reserved\")._().\n             th().$class(\"ui-state-default\")._(\"Memory Used\")._().\n             th().$class(\"ui-state-default\")._(\"Memory Pending\")._().\n             th().$class(\"ui-state-default\")._(\"Memory Reserved\")._().\n             th().$class(\"ui-state-default\")._(\"VCores Used\")._().\n             th().$class(\"ui-state-default\")._(\"VCores Pending\")._().\n             th().$class(\"ui-state-default\")._(\"VCores Reserved\")._().\n           _().\n         _().\n         tbody().$class(\"ui-widget-content\").\n           tr().\n             td(String.valueOf(userMetrics.getAppsSubmitted())).\n             td(String.valueOf(userMetrics.getAppsPending())).\n             td(String.valueOf(userMetrics.getAppsRunning())).\n             td(\n                 String.valueOf(\n                     (userMetrics.getAppsCompleted() + \n                      userMetrics.getAppsFailed() + userMetrics.getAppsKilled())\n                     )\n               ).\n             td(String.valueOf(userMetrics.getRunningContainers())).\n             td(String.valueOf(userMetrics.getPendingContainers())).\n             td(String.valueOf(userMetrics.getReservedContainers())).\n             td(StringUtils.byteDesc(userMetrics.getAllocatedMB() * BYTES_IN_MB)).\n             td(StringUtils.byteDesc(userMetrics.getPendingMB() * BYTES_IN_MB)).\n             td(StringUtils.byteDesc(userMetrics.getReservedMB() * BYTES_IN_MB)).\n             td(String.valueOf(userMetrics.getAllocatedVirtualCores())).\n             td(String.valueOf(userMetrics.getPendingVirtualCores())).\n             td(String.valueOf(userMetrics.getReservedVirtualCores())).\n           _().\n         _()._();\n         \n       }\n     }\n     \n     SchedulerInfo schedulerInfo\u003dnew SchedulerInfo(this.rm);\n     \n     div.h3(\"Scheduler Metrics\").\n     table(\"#schedulermetricsoverview\").\n     thead().$class(\"ui-widget-header\").\n       tr().\n         th().$class(\"ui-state-default\")._(\"Scheduler Type\")._().\n         th().$class(\"ui-state-default\")._(\"Scheduling Resource Type\")._().\n         th().$class(\"ui-state-default\")._(\"Minimum Allocation\")._().\n         th().$class(\"ui-state-default\")._(\"Maximum Allocation\")._().\n         th().$class(\"ui-state-default\")\n             ._(\"Maximum Cluster Application Priority\")._().\n       _().\n     _().\n     tbody().$class(\"ui-widget-content\").\n       tr().\n         td(String.valueOf(schedulerInfo.getSchedulerType())).\n         td(String.valueOf(schedulerInfo.getSchedulerResourceTypes())).\n         td(schedulerInfo.getMinAllocation().toString()).\n         td(schedulerInfo.getMaxAllocation().toString()).\n         td(String.valueOf(schedulerInfo.getMaxClusterLevelAppPriority())).\n       _().\n     _()._();\n \n     div._();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void render(Block html) {\n    //Yes this is a hack, but there is no other way to insert\n    //CSS in the correct spot\n    html.style(\".metrics {margin-bottom:5px}\"); \n    \n    ClusterMetricsInfo clusterMetrics \u003d new ClusterMetricsInfo(this.rm);\n    \n    DIV\u003cHamlet\u003e div \u003d html.div().$class(\"metrics\");\n    \n    div.h3(\"Cluster Metrics\").\n    table(\"#metricsoverview\").\n    thead().$class(\"ui-widget-header\").\n      tr().\n        th().$class(\"ui-state-default\")._(\"Apps Submitted\")._().\n        th().$class(\"ui-state-default\")._(\"Apps Pending\")._().\n        th().$class(\"ui-state-default\")._(\"Apps Running\")._().\n        th().$class(\"ui-state-default\")._(\"Apps Completed\")._().\n        th().$class(\"ui-state-default\")._(\"Containers Running\")._().\n        th().$class(\"ui-state-default\")._(\"Memory Used\")._().\n        th().$class(\"ui-state-default\")._(\"Memory Total\")._().\n        th().$class(\"ui-state-default\")._(\"Memory Reserved\")._().\n        th().$class(\"ui-state-default\")._(\"VCores Used\")._().\n        th().$class(\"ui-state-default\")._(\"VCores Total\")._().\n        th().$class(\"ui-state-default\")._(\"VCores Reserved\")._().\n      _().\n    _().\n    tbody().$class(\"ui-widget-content\").\n      tr().\n        td(String.valueOf(clusterMetrics.getAppsSubmitted())).\n        td(String.valueOf(clusterMetrics.getAppsPending())).\n        td(String.valueOf(clusterMetrics.getAppsRunning())).\n        td(\n            String.valueOf(\n                clusterMetrics.getAppsCompleted() + \n                clusterMetrics.getAppsFailed() + clusterMetrics.getAppsKilled()\n                )\n            ).\n        td(String.valueOf(clusterMetrics.getContainersAllocated())).\n        td(StringUtils.byteDesc(clusterMetrics.getAllocatedMB() * BYTES_IN_MB)).\n        td(StringUtils.byteDesc(clusterMetrics.getTotalMB() * BYTES_IN_MB)).\n        td(StringUtils.byteDesc(clusterMetrics.getReservedMB() * BYTES_IN_MB)).\n        td(String.valueOf(clusterMetrics.getAllocatedVirtualCores())).\n        td(String.valueOf(clusterMetrics.getTotalVirtualCores())).\n        td(String.valueOf(clusterMetrics.getReservedVirtualCores())).\n      _().\n    _()._();\n\n    div.h3(\"Cluster Nodes Metrics\").\n    table(\"#nodemetricsoverview\").\n    thead().$class(\"ui-widget-header\").\n      tr().\n        th().$class(\"ui-state-default\")._(\"Active Nodes\")._().\n        th().$class(\"ui-state-default\")._(\"Decommissioning Nodes\")._().\n        th().$class(\"ui-state-default\")._(\"Decommissioned Nodes\")._().\n        th().$class(\"ui-state-default\")._(\"Lost Nodes\")._().\n        th().$class(\"ui-state-default\")._(\"Unhealthy Nodes\")._().\n        th().$class(\"ui-state-default\")._(\"Rebooted Nodes\")._().\n        th().$class(\"ui-state-default\")._(\"Shutdown Nodes\")._().\n      _().\n    _().\n    tbody().$class(\"ui-widget-content\").\n      tr().\n        td().a(url(\"nodes\"),String.valueOf(clusterMetrics.getActiveNodes()))._().\n        td().a(url(\"nodes/decommissioning\"), String.valueOf(clusterMetrics.getDecommissioningNodes()))._().\n        td().a(url(\"nodes/decommissioned\"),String.valueOf(clusterMetrics.getDecommissionedNodes()))._().\n        td().a(url(\"nodes/lost\"),String.valueOf(clusterMetrics.getLostNodes()))._().\n        td().a(url(\"nodes/unhealthy\"),String.valueOf(clusterMetrics.getUnhealthyNodes()))._().\n        td().a(url(\"nodes/rebooted\"),String.valueOf(clusterMetrics.getRebootedNodes()))._().\n        td().a(url(\"nodes/shutdown\"),String.valueOf(clusterMetrics.getShutdownNodes()))._().\n      _().\n    _()._();\n\n    String user \u003d request().getRemoteUser();\n    if (user !\u003d null) {\n      UserMetricsInfo userMetrics \u003d new UserMetricsInfo(this.rm, user);\n      if (userMetrics.metricsAvailable()) {\n        div.h3(\"User Metrics for \" + user).\n        table(\"#usermetricsoverview\").\n        thead().$class(\"ui-widget-header\").\n          tr().\n            th().$class(\"ui-state-default\")._(\"Apps Submitted\")._().\n            th().$class(\"ui-state-default\")._(\"Apps Pending\")._().\n            th().$class(\"ui-state-default\")._(\"Apps Running\")._().\n            th().$class(\"ui-state-default\")._(\"Apps Completed\")._().\n            th().$class(\"ui-state-default\")._(\"Containers Running\")._().\n            th().$class(\"ui-state-default\")._(\"Containers Pending\")._().\n            th().$class(\"ui-state-default\")._(\"Containers Reserved\")._().\n            th().$class(\"ui-state-default\")._(\"Memory Used\")._().\n            th().$class(\"ui-state-default\")._(\"Memory Pending\")._().\n            th().$class(\"ui-state-default\")._(\"Memory Reserved\")._().\n            th().$class(\"ui-state-default\")._(\"VCores Used\")._().\n            th().$class(\"ui-state-default\")._(\"VCores Pending\")._().\n            th().$class(\"ui-state-default\")._(\"VCores Reserved\")._().\n          _().\n        _().\n        tbody().$class(\"ui-widget-content\").\n          tr().\n            td(String.valueOf(userMetrics.getAppsSubmitted())).\n            td(String.valueOf(userMetrics.getAppsPending())).\n            td(String.valueOf(userMetrics.getAppsRunning())).\n            td(\n                String.valueOf(\n                    (userMetrics.getAppsCompleted() + \n                     userMetrics.getAppsFailed() + userMetrics.getAppsKilled())\n                    )\n              ).\n            td(String.valueOf(userMetrics.getRunningContainers())).\n            td(String.valueOf(userMetrics.getPendingContainers())).\n            td(String.valueOf(userMetrics.getReservedContainers())).\n            td(StringUtils.byteDesc(userMetrics.getAllocatedMB() * BYTES_IN_MB)).\n            td(StringUtils.byteDesc(userMetrics.getPendingMB() * BYTES_IN_MB)).\n            td(StringUtils.byteDesc(userMetrics.getReservedMB() * BYTES_IN_MB)).\n            td(String.valueOf(userMetrics.getAllocatedVirtualCores())).\n            td(String.valueOf(userMetrics.getPendingVirtualCores())).\n            td(String.valueOf(userMetrics.getReservedVirtualCores())).\n          _().\n        _()._();\n        \n      }\n    }\n    \n    SchedulerInfo schedulerInfo\u003dnew SchedulerInfo(this.rm);\n    \n    div.h3(\"Scheduler Metrics\").\n    table(\"#schedulermetricsoverview\").\n    thead().$class(\"ui-widget-header\").\n      tr().\n        th().$class(\"ui-state-default\")._(\"Scheduler Type\")._().\n        th().$class(\"ui-state-default\")._(\"Scheduling Resource Type\")._().\n        th().$class(\"ui-state-default\")._(\"Minimum Allocation\")._().\n        th().$class(\"ui-state-default\")._(\"Maximum Allocation\")._().\n        th().$class(\"ui-state-default\")\n            ._(\"Maximum Cluster Application Priority\")._().\n      _().\n    _().\n    tbody().$class(\"ui-widget-content\").\n      tr().\n        td(String.valueOf(schedulerInfo.getSchedulerType())).\n        td(String.valueOf(schedulerInfo.getSchedulerResourceTypes())).\n        td(schedulerInfo.getMinAllocation().toString()).\n        td(schedulerInfo.getMaxAllocation().toString()).\n        td(String.valueOf(schedulerInfo.getMaxClusterLevelAppPriority())).\n      _().\n    _()._();\n\n    div._();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/MetricsOverviewTable.java",
      "extendedDetails": {}
    },
    "6c6e734f0baaa7b0f8d6b85963e1ce87bac28b17": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4034. Render cluster Max Priority in scheduler metrics in RM web UI. Contributed by Rohith Sharma K S\n",
      "commitDate": "16/09/15 11:55 PM",
      "commitName": "6c6e734f0baaa7b0f8d6b85963e1ce87bac28b17",
      "commitAuthor": "Jian He",
      "commitDateOld": "04/06/15 4:59 AM",
      "commitNameOld": "d7e7f6aa03c67b6a6ccf664adcb06d90bc963e58",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 104.79,
      "commitsBetweenForRepo": 628,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,132 +1,135 @@\n   protected void render(Block html) {\n     //Yes this is a hack, but there is no other way to insert\n     //CSS in the correct spot\n     html.style(\".metrics {margin-bottom:5px}\"); \n     \n     ClusterMetricsInfo clusterMetrics \u003d \n  new ClusterMetricsInfo(this.rm);\n     \n     DIV\u003cHamlet\u003e div \u003d html.div().$class(\"metrics\");\n     \n     div.h3(\"Cluster Metrics\").\n     table(\"#metricsoverview\").\n     thead().$class(\"ui-widget-header\").\n       tr().\n         th().$class(\"ui-state-default\")._(\"Apps Submitted\")._().\n         th().$class(\"ui-state-default\")._(\"Apps Pending\")._().\n         th().$class(\"ui-state-default\")._(\"Apps Running\")._().\n         th().$class(\"ui-state-default\")._(\"Apps Completed\")._().\n         th().$class(\"ui-state-default\")._(\"Containers Running\")._().\n         th().$class(\"ui-state-default\")._(\"Memory Used\")._().\n         th().$class(\"ui-state-default\")._(\"Memory Total\")._().\n         th().$class(\"ui-state-default\")._(\"Memory Reserved\")._().\n         th().$class(\"ui-state-default\")._(\"VCores Used\")._().\n         th().$class(\"ui-state-default\")._(\"VCores Total\")._().\n         th().$class(\"ui-state-default\")._(\"VCores Reserved\")._().\n         th().$class(\"ui-state-default\")._(\"Active Nodes\")._().\n         th().$class(\"ui-state-default\")._(\"Decommissioned Nodes\")._().\n         th().$class(\"ui-state-default\")._(\"Lost Nodes\")._().\n         th().$class(\"ui-state-default\")._(\"Unhealthy Nodes\")._().\n         th().$class(\"ui-state-default\")._(\"Rebooted Nodes\")._().\n         th().$class(\"ui-state-default\")._(\"Shutdown Nodes\")._().\n       _().\n     _().\n     tbody().$class(\"ui-widget-content\").\n       tr().\n         td(String.valueOf(clusterMetrics.getAppsSubmitted())).\n         td(String.valueOf(clusterMetrics.getAppsPending())).\n         td(String.valueOf(clusterMetrics.getAppsRunning())).\n         td(\n             String.valueOf(\n                 clusterMetrics.getAppsCompleted() + \n                 clusterMetrics.getAppsFailed() + clusterMetrics.getAppsKilled()\n                 )\n             ).\n         td(String.valueOf(clusterMetrics.getContainersAllocated())).\n         td(StringUtils.byteDesc(clusterMetrics.getAllocatedMB() * BYTES_IN_MB)).\n         td(StringUtils.byteDesc(clusterMetrics.getTotalMB() * BYTES_IN_MB)).\n         td(StringUtils.byteDesc(clusterMetrics.getReservedMB() * BYTES_IN_MB)).\n         td(String.valueOf(clusterMetrics.getAllocatedVirtualCores())).\n         td(String.valueOf(clusterMetrics.getTotalVirtualCores())).\n         td(String.valueOf(clusterMetrics.getReservedVirtualCores())).\n         td().a(url(\"nodes\"),String.valueOf(clusterMetrics.getActiveNodes()))._().\n         td().a(url(\"nodes/decommissioned\"),String.valueOf(clusterMetrics.getDecommissionedNodes()))._().\n         td().a(url(\"nodes/lost\"),String.valueOf(clusterMetrics.getLostNodes()))._().\n         td().a(url(\"nodes/unhealthy\"),String.valueOf(clusterMetrics.getUnhealthyNodes()))._().\n         td().a(url(\"nodes/rebooted\"),String.valueOf(clusterMetrics.getRebootedNodes()))._().\n         td().a(url(\"nodes/shutdown\"),String.valueOf(clusterMetrics.getShutdownNodes()))._().\n       _().\n     _()._();\n     \n     String user \u003d request().getRemoteUser();\n     if (user !\u003d null) {\n       UserMetricsInfo userMetrics \u003d new UserMetricsInfo(this.rm, user);\n       if (userMetrics.metricsAvailable()) {\n         div.h3(\"User Metrics for \" + user).\n         table(\"#usermetricsoverview\").\n         thead().$class(\"ui-widget-header\").\n           tr().\n             th().$class(\"ui-state-default\")._(\"Apps Submitted\")._().\n             th().$class(\"ui-state-default\")._(\"Apps Pending\")._().\n             th().$class(\"ui-state-default\")._(\"Apps Running\")._().\n             th().$class(\"ui-state-default\")._(\"Apps Completed\")._().\n             th().$class(\"ui-state-default\")._(\"Containers Running\")._().\n             th().$class(\"ui-state-default\")._(\"Containers Pending\")._().\n             th().$class(\"ui-state-default\")._(\"Containers Reserved\")._().\n             th().$class(\"ui-state-default\")._(\"Memory Used\")._().\n             th().$class(\"ui-state-default\")._(\"Memory Pending\")._().\n             th().$class(\"ui-state-default\")._(\"Memory Reserved\")._().\n             th().$class(\"ui-state-default\")._(\"VCores Used\")._().\n             th().$class(\"ui-state-default\")._(\"VCores Pending\")._().\n             th().$class(\"ui-state-default\")._(\"VCores Reserved\")._().\n           _().\n         _().\n         tbody().$class(\"ui-widget-content\").\n           tr().\n             td(String.valueOf(userMetrics.getAppsSubmitted())).\n             td(String.valueOf(userMetrics.getAppsPending())).\n             td(String.valueOf(userMetrics.getAppsRunning())).\n             td(\n                 String.valueOf(\n                     (userMetrics.getAppsCompleted() + \n                      userMetrics.getAppsFailed() + userMetrics.getAppsKilled())\n                     )\n               ).\n             td(String.valueOf(userMetrics.getRunningContainers())).\n             td(String.valueOf(userMetrics.getPendingContainers())).\n             td(String.valueOf(userMetrics.getReservedContainers())).\n             td(StringUtils.byteDesc(userMetrics.getAllocatedMB() * BYTES_IN_MB)).\n             td(StringUtils.byteDesc(userMetrics.getPendingMB() * BYTES_IN_MB)).\n             td(StringUtils.byteDesc(userMetrics.getReservedMB() * BYTES_IN_MB)).\n             td(String.valueOf(userMetrics.getAllocatedVirtualCores())).\n             td(String.valueOf(userMetrics.getPendingVirtualCores())).\n             td(String.valueOf(userMetrics.getReservedVirtualCores())).\n           _().\n         _()._();\n         \n       }\n     }\n     \n     SchedulerInfo schedulerInfo\u003dnew SchedulerInfo(this.rm);\n     \n     div.h3(\"Scheduler Metrics\").\n     table(\"#schedulermetricsoverview\").\n     thead().$class(\"ui-widget-header\").\n       tr().\n         th().$class(\"ui-state-default\")._(\"Scheduler Type\")._().\n         th().$class(\"ui-state-default\")._(\"Scheduling Resource Type\")._().\n         th().$class(\"ui-state-default\")._(\"Minimum Allocation\")._().\n         th().$class(\"ui-state-default\")._(\"Maximum Allocation\")._().\n+        th().$class(\"ui-state-default\")\n+            ._(\"Maximum Cluster Application Priority\")._().\n       _().\n     _().\n     tbody().$class(\"ui-widget-content\").\n       tr().\n         td(String.valueOf(schedulerInfo.getSchedulerType())).\n         td(String.valueOf(schedulerInfo.getSchedulerResourceTypes())).\n         td(schedulerInfo.getMinAllocation().toString()).\n         td(schedulerInfo.getMaxAllocation().toString()).\n+        td(String.valueOf(schedulerInfo.getMaxClusterLevelAppPriority())).\n       _().\n     _()._();\n \n     div._();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void render(Block html) {\n    //Yes this is a hack, but there is no other way to insert\n    //CSS in the correct spot\n    html.style(\".metrics {margin-bottom:5px}\"); \n    \n    ClusterMetricsInfo clusterMetrics \u003d \n new ClusterMetricsInfo(this.rm);\n    \n    DIV\u003cHamlet\u003e div \u003d html.div().$class(\"metrics\");\n    \n    div.h3(\"Cluster Metrics\").\n    table(\"#metricsoverview\").\n    thead().$class(\"ui-widget-header\").\n      tr().\n        th().$class(\"ui-state-default\")._(\"Apps Submitted\")._().\n        th().$class(\"ui-state-default\")._(\"Apps Pending\")._().\n        th().$class(\"ui-state-default\")._(\"Apps Running\")._().\n        th().$class(\"ui-state-default\")._(\"Apps Completed\")._().\n        th().$class(\"ui-state-default\")._(\"Containers Running\")._().\n        th().$class(\"ui-state-default\")._(\"Memory Used\")._().\n        th().$class(\"ui-state-default\")._(\"Memory Total\")._().\n        th().$class(\"ui-state-default\")._(\"Memory Reserved\")._().\n        th().$class(\"ui-state-default\")._(\"VCores Used\")._().\n        th().$class(\"ui-state-default\")._(\"VCores Total\")._().\n        th().$class(\"ui-state-default\")._(\"VCores Reserved\")._().\n        th().$class(\"ui-state-default\")._(\"Active Nodes\")._().\n        th().$class(\"ui-state-default\")._(\"Decommissioned Nodes\")._().\n        th().$class(\"ui-state-default\")._(\"Lost Nodes\")._().\n        th().$class(\"ui-state-default\")._(\"Unhealthy Nodes\")._().\n        th().$class(\"ui-state-default\")._(\"Rebooted Nodes\")._().\n        th().$class(\"ui-state-default\")._(\"Shutdown Nodes\")._().\n      _().\n    _().\n    tbody().$class(\"ui-widget-content\").\n      tr().\n        td(String.valueOf(clusterMetrics.getAppsSubmitted())).\n        td(String.valueOf(clusterMetrics.getAppsPending())).\n        td(String.valueOf(clusterMetrics.getAppsRunning())).\n        td(\n            String.valueOf(\n                clusterMetrics.getAppsCompleted() + \n                clusterMetrics.getAppsFailed() + clusterMetrics.getAppsKilled()\n                )\n            ).\n        td(String.valueOf(clusterMetrics.getContainersAllocated())).\n        td(StringUtils.byteDesc(clusterMetrics.getAllocatedMB() * BYTES_IN_MB)).\n        td(StringUtils.byteDesc(clusterMetrics.getTotalMB() * BYTES_IN_MB)).\n        td(StringUtils.byteDesc(clusterMetrics.getReservedMB() * BYTES_IN_MB)).\n        td(String.valueOf(clusterMetrics.getAllocatedVirtualCores())).\n        td(String.valueOf(clusterMetrics.getTotalVirtualCores())).\n        td(String.valueOf(clusterMetrics.getReservedVirtualCores())).\n        td().a(url(\"nodes\"),String.valueOf(clusterMetrics.getActiveNodes()))._().\n        td().a(url(\"nodes/decommissioned\"),String.valueOf(clusterMetrics.getDecommissionedNodes()))._().\n        td().a(url(\"nodes/lost\"),String.valueOf(clusterMetrics.getLostNodes()))._().\n        td().a(url(\"nodes/unhealthy\"),String.valueOf(clusterMetrics.getUnhealthyNodes()))._().\n        td().a(url(\"nodes/rebooted\"),String.valueOf(clusterMetrics.getRebootedNodes()))._().\n        td().a(url(\"nodes/shutdown\"),String.valueOf(clusterMetrics.getShutdownNodes()))._().\n      _().\n    _()._();\n    \n    String user \u003d request().getRemoteUser();\n    if (user !\u003d null) {\n      UserMetricsInfo userMetrics \u003d new UserMetricsInfo(this.rm, user);\n      if (userMetrics.metricsAvailable()) {\n        div.h3(\"User Metrics for \" + user).\n        table(\"#usermetricsoverview\").\n        thead().$class(\"ui-widget-header\").\n          tr().\n            th().$class(\"ui-state-default\")._(\"Apps Submitted\")._().\n            th().$class(\"ui-state-default\")._(\"Apps Pending\")._().\n            th().$class(\"ui-state-default\")._(\"Apps Running\")._().\n            th().$class(\"ui-state-default\")._(\"Apps Completed\")._().\n            th().$class(\"ui-state-default\")._(\"Containers Running\")._().\n            th().$class(\"ui-state-default\")._(\"Containers Pending\")._().\n            th().$class(\"ui-state-default\")._(\"Containers Reserved\")._().\n            th().$class(\"ui-state-default\")._(\"Memory Used\")._().\n            th().$class(\"ui-state-default\")._(\"Memory Pending\")._().\n            th().$class(\"ui-state-default\")._(\"Memory Reserved\")._().\n            th().$class(\"ui-state-default\")._(\"VCores Used\")._().\n            th().$class(\"ui-state-default\")._(\"VCores Pending\")._().\n            th().$class(\"ui-state-default\")._(\"VCores Reserved\")._().\n          _().\n        _().\n        tbody().$class(\"ui-widget-content\").\n          tr().\n            td(String.valueOf(userMetrics.getAppsSubmitted())).\n            td(String.valueOf(userMetrics.getAppsPending())).\n            td(String.valueOf(userMetrics.getAppsRunning())).\n            td(\n                String.valueOf(\n                    (userMetrics.getAppsCompleted() + \n                     userMetrics.getAppsFailed() + userMetrics.getAppsKilled())\n                    )\n              ).\n            td(String.valueOf(userMetrics.getRunningContainers())).\n            td(String.valueOf(userMetrics.getPendingContainers())).\n            td(String.valueOf(userMetrics.getReservedContainers())).\n            td(StringUtils.byteDesc(userMetrics.getAllocatedMB() * BYTES_IN_MB)).\n            td(StringUtils.byteDesc(userMetrics.getPendingMB() * BYTES_IN_MB)).\n            td(StringUtils.byteDesc(userMetrics.getReservedMB() * BYTES_IN_MB)).\n            td(String.valueOf(userMetrics.getAllocatedVirtualCores())).\n            td(String.valueOf(userMetrics.getPendingVirtualCores())).\n            td(String.valueOf(userMetrics.getReservedVirtualCores())).\n          _().\n        _()._();\n        \n      }\n    }\n    \n    SchedulerInfo schedulerInfo\u003dnew SchedulerInfo(this.rm);\n    \n    div.h3(\"Scheduler Metrics\").\n    table(\"#schedulermetricsoverview\").\n    thead().$class(\"ui-widget-header\").\n      tr().\n        th().$class(\"ui-state-default\")._(\"Scheduler Type\")._().\n        th().$class(\"ui-state-default\")._(\"Scheduling Resource Type\")._().\n        th().$class(\"ui-state-default\")._(\"Minimum Allocation\")._().\n        th().$class(\"ui-state-default\")._(\"Maximum Allocation\")._().\n        th().$class(\"ui-state-default\")\n            ._(\"Maximum Cluster Application Priority\")._().\n      _().\n    _().\n    tbody().$class(\"ui-widget-content\").\n      tr().\n        td(String.valueOf(schedulerInfo.getSchedulerType())).\n        td(String.valueOf(schedulerInfo.getSchedulerResourceTypes())).\n        td(schedulerInfo.getMinAllocation().toString()).\n        td(schedulerInfo.getMaxAllocation().toString()).\n        td(String.valueOf(schedulerInfo.getMaxClusterLevelAppPriority())).\n      _().\n    _()._();\n\n    div._();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/MetricsOverviewTable.java",
      "extendedDetails": {}
    },
    "d7e7f6aa03c67b6a6ccf664adcb06d90bc963e58": {
      "type": "Ybodychange",
      "commitMessage": "YARN-41. The RM should handle the graceful shutdown of the NM. Contributed by Devaraj K.\n",
      "commitDate": "04/06/15 4:59 AM",
      "commitName": "d7e7f6aa03c67b6a6ccf664adcb06d90bc963e58",
      "commitAuthor": "Junping Du",
      "commitDateOld": "17/03/15 9:30 PM",
      "commitNameOld": "658097d6da1b1aac8e01db459f0c3b456e99652f",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 78.31,
      "commitsBetweenForRepo": 753,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,130 +1,132 @@\n   protected void render(Block html) {\n     //Yes this is a hack, but there is no other way to insert\n     //CSS in the correct spot\n     html.style(\".metrics {margin-bottom:5px}\"); \n     \n     ClusterMetricsInfo clusterMetrics \u003d \n  new ClusterMetricsInfo(this.rm);\n     \n     DIV\u003cHamlet\u003e div \u003d html.div().$class(\"metrics\");\n     \n     div.h3(\"Cluster Metrics\").\n     table(\"#metricsoverview\").\n     thead().$class(\"ui-widget-header\").\n       tr().\n         th().$class(\"ui-state-default\")._(\"Apps Submitted\")._().\n         th().$class(\"ui-state-default\")._(\"Apps Pending\")._().\n         th().$class(\"ui-state-default\")._(\"Apps Running\")._().\n         th().$class(\"ui-state-default\")._(\"Apps Completed\")._().\n         th().$class(\"ui-state-default\")._(\"Containers Running\")._().\n         th().$class(\"ui-state-default\")._(\"Memory Used\")._().\n         th().$class(\"ui-state-default\")._(\"Memory Total\")._().\n         th().$class(\"ui-state-default\")._(\"Memory Reserved\")._().\n         th().$class(\"ui-state-default\")._(\"VCores Used\")._().\n         th().$class(\"ui-state-default\")._(\"VCores Total\")._().\n         th().$class(\"ui-state-default\")._(\"VCores Reserved\")._().\n         th().$class(\"ui-state-default\")._(\"Active Nodes\")._().\n         th().$class(\"ui-state-default\")._(\"Decommissioned Nodes\")._().\n         th().$class(\"ui-state-default\")._(\"Lost Nodes\")._().\n         th().$class(\"ui-state-default\")._(\"Unhealthy Nodes\")._().\n         th().$class(\"ui-state-default\")._(\"Rebooted Nodes\")._().\n+        th().$class(\"ui-state-default\")._(\"Shutdown Nodes\")._().\n       _().\n     _().\n     tbody().$class(\"ui-widget-content\").\n       tr().\n         td(String.valueOf(clusterMetrics.getAppsSubmitted())).\n         td(String.valueOf(clusterMetrics.getAppsPending())).\n         td(String.valueOf(clusterMetrics.getAppsRunning())).\n         td(\n             String.valueOf(\n                 clusterMetrics.getAppsCompleted() + \n                 clusterMetrics.getAppsFailed() + clusterMetrics.getAppsKilled()\n                 )\n             ).\n         td(String.valueOf(clusterMetrics.getContainersAllocated())).\n         td(StringUtils.byteDesc(clusterMetrics.getAllocatedMB() * BYTES_IN_MB)).\n         td(StringUtils.byteDesc(clusterMetrics.getTotalMB() * BYTES_IN_MB)).\n         td(StringUtils.byteDesc(clusterMetrics.getReservedMB() * BYTES_IN_MB)).\n         td(String.valueOf(clusterMetrics.getAllocatedVirtualCores())).\n         td(String.valueOf(clusterMetrics.getTotalVirtualCores())).\n         td(String.valueOf(clusterMetrics.getReservedVirtualCores())).\n         td().a(url(\"nodes\"),String.valueOf(clusterMetrics.getActiveNodes()))._().\n         td().a(url(\"nodes/decommissioned\"),String.valueOf(clusterMetrics.getDecommissionedNodes()))._().\n         td().a(url(\"nodes/lost\"),String.valueOf(clusterMetrics.getLostNodes()))._().\n         td().a(url(\"nodes/unhealthy\"),String.valueOf(clusterMetrics.getUnhealthyNodes()))._().\n         td().a(url(\"nodes/rebooted\"),String.valueOf(clusterMetrics.getRebootedNodes()))._().\n+        td().a(url(\"nodes/shutdown\"),String.valueOf(clusterMetrics.getShutdownNodes()))._().\n       _().\n     _()._();\n     \n     String user \u003d request().getRemoteUser();\n     if (user !\u003d null) {\n       UserMetricsInfo userMetrics \u003d new UserMetricsInfo(this.rm, user);\n       if (userMetrics.metricsAvailable()) {\n         div.h3(\"User Metrics for \" + user).\n         table(\"#usermetricsoverview\").\n         thead().$class(\"ui-widget-header\").\n           tr().\n             th().$class(\"ui-state-default\")._(\"Apps Submitted\")._().\n             th().$class(\"ui-state-default\")._(\"Apps Pending\")._().\n             th().$class(\"ui-state-default\")._(\"Apps Running\")._().\n             th().$class(\"ui-state-default\")._(\"Apps Completed\")._().\n             th().$class(\"ui-state-default\")._(\"Containers Running\")._().\n             th().$class(\"ui-state-default\")._(\"Containers Pending\")._().\n             th().$class(\"ui-state-default\")._(\"Containers Reserved\")._().\n             th().$class(\"ui-state-default\")._(\"Memory Used\")._().\n             th().$class(\"ui-state-default\")._(\"Memory Pending\")._().\n             th().$class(\"ui-state-default\")._(\"Memory Reserved\")._().\n             th().$class(\"ui-state-default\")._(\"VCores Used\")._().\n             th().$class(\"ui-state-default\")._(\"VCores Pending\")._().\n             th().$class(\"ui-state-default\")._(\"VCores Reserved\")._().\n           _().\n         _().\n         tbody().$class(\"ui-widget-content\").\n           tr().\n             td(String.valueOf(userMetrics.getAppsSubmitted())).\n             td(String.valueOf(userMetrics.getAppsPending())).\n             td(String.valueOf(userMetrics.getAppsRunning())).\n             td(\n                 String.valueOf(\n                     (userMetrics.getAppsCompleted() + \n                      userMetrics.getAppsFailed() + userMetrics.getAppsKilled())\n                     )\n               ).\n             td(String.valueOf(userMetrics.getRunningContainers())).\n             td(String.valueOf(userMetrics.getPendingContainers())).\n             td(String.valueOf(userMetrics.getReservedContainers())).\n             td(StringUtils.byteDesc(userMetrics.getAllocatedMB() * BYTES_IN_MB)).\n             td(StringUtils.byteDesc(userMetrics.getPendingMB() * BYTES_IN_MB)).\n             td(StringUtils.byteDesc(userMetrics.getReservedMB() * BYTES_IN_MB)).\n             td(String.valueOf(userMetrics.getAllocatedVirtualCores())).\n             td(String.valueOf(userMetrics.getPendingVirtualCores())).\n             td(String.valueOf(userMetrics.getReservedVirtualCores())).\n           _().\n         _()._();\n         \n       }\n     }\n     \n     SchedulerInfo schedulerInfo\u003dnew SchedulerInfo(this.rm);\n     \n     div.h3(\"Scheduler Metrics\").\n     table(\"#schedulermetricsoverview\").\n     thead().$class(\"ui-widget-header\").\n       tr().\n         th().$class(\"ui-state-default\")._(\"Scheduler Type\")._().\n         th().$class(\"ui-state-default\")._(\"Scheduling Resource Type\")._().\n         th().$class(\"ui-state-default\")._(\"Minimum Allocation\")._().\n         th().$class(\"ui-state-default\")._(\"Maximum Allocation\")._().\n       _().\n     _().\n     tbody().$class(\"ui-widget-content\").\n       tr().\n         td(String.valueOf(schedulerInfo.getSchedulerType())).\n         td(String.valueOf(schedulerInfo.getSchedulerResourceTypes())).\n         td(schedulerInfo.getMinAllocation().toString()).\n         td(schedulerInfo.getMaxAllocation().toString()).\n       _().\n     _()._();\n \n     div._();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void render(Block html) {\n    //Yes this is a hack, but there is no other way to insert\n    //CSS in the correct spot\n    html.style(\".metrics {margin-bottom:5px}\"); \n    \n    ClusterMetricsInfo clusterMetrics \u003d \n new ClusterMetricsInfo(this.rm);\n    \n    DIV\u003cHamlet\u003e div \u003d html.div().$class(\"metrics\");\n    \n    div.h3(\"Cluster Metrics\").\n    table(\"#metricsoverview\").\n    thead().$class(\"ui-widget-header\").\n      tr().\n        th().$class(\"ui-state-default\")._(\"Apps Submitted\")._().\n        th().$class(\"ui-state-default\")._(\"Apps Pending\")._().\n        th().$class(\"ui-state-default\")._(\"Apps Running\")._().\n        th().$class(\"ui-state-default\")._(\"Apps Completed\")._().\n        th().$class(\"ui-state-default\")._(\"Containers Running\")._().\n        th().$class(\"ui-state-default\")._(\"Memory Used\")._().\n        th().$class(\"ui-state-default\")._(\"Memory Total\")._().\n        th().$class(\"ui-state-default\")._(\"Memory Reserved\")._().\n        th().$class(\"ui-state-default\")._(\"VCores Used\")._().\n        th().$class(\"ui-state-default\")._(\"VCores Total\")._().\n        th().$class(\"ui-state-default\")._(\"VCores Reserved\")._().\n        th().$class(\"ui-state-default\")._(\"Active Nodes\")._().\n        th().$class(\"ui-state-default\")._(\"Decommissioned Nodes\")._().\n        th().$class(\"ui-state-default\")._(\"Lost Nodes\")._().\n        th().$class(\"ui-state-default\")._(\"Unhealthy Nodes\")._().\n        th().$class(\"ui-state-default\")._(\"Rebooted Nodes\")._().\n        th().$class(\"ui-state-default\")._(\"Shutdown Nodes\")._().\n      _().\n    _().\n    tbody().$class(\"ui-widget-content\").\n      tr().\n        td(String.valueOf(clusterMetrics.getAppsSubmitted())).\n        td(String.valueOf(clusterMetrics.getAppsPending())).\n        td(String.valueOf(clusterMetrics.getAppsRunning())).\n        td(\n            String.valueOf(\n                clusterMetrics.getAppsCompleted() + \n                clusterMetrics.getAppsFailed() + clusterMetrics.getAppsKilled()\n                )\n            ).\n        td(String.valueOf(clusterMetrics.getContainersAllocated())).\n        td(StringUtils.byteDesc(clusterMetrics.getAllocatedMB() * BYTES_IN_MB)).\n        td(StringUtils.byteDesc(clusterMetrics.getTotalMB() * BYTES_IN_MB)).\n        td(StringUtils.byteDesc(clusterMetrics.getReservedMB() * BYTES_IN_MB)).\n        td(String.valueOf(clusterMetrics.getAllocatedVirtualCores())).\n        td(String.valueOf(clusterMetrics.getTotalVirtualCores())).\n        td(String.valueOf(clusterMetrics.getReservedVirtualCores())).\n        td().a(url(\"nodes\"),String.valueOf(clusterMetrics.getActiveNodes()))._().\n        td().a(url(\"nodes/decommissioned\"),String.valueOf(clusterMetrics.getDecommissionedNodes()))._().\n        td().a(url(\"nodes/lost\"),String.valueOf(clusterMetrics.getLostNodes()))._().\n        td().a(url(\"nodes/unhealthy\"),String.valueOf(clusterMetrics.getUnhealthyNodes()))._().\n        td().a(url(\"nodes/rebooted\"),String.valueOf(clusterMetrics.getRebootedNodes()))._().\n        td().a(url(\"nodes/shutdown\"),String.valueOf(clusterMetrics.getShutdownNodes()))._().\n      _().\n    _()._();\n    \n    String user \u003d request().getRemoteUser();\n    if (user !\u003d null) {\n      UserMetricsInfo userMetrics \u003d new UserMetricsInfo(this.rm, user);\n      if (userMetrics.metricsAvailable()) {\n        div.h3(\"User Metrics for \" + user).\n        table(\"#usermetricsoverview\").\n        thead().$class(\"ui-widget-header\").\n          tr().\n            th().$class(\"ui-state-default\")._(\"Apps Submitted\")._().\n            th().$class(\"ui-state-default\")._(\"Apps Pending\")._().\n            th().$class(\"ui-state-default\")._(\"Apps Running\")._().\n            th().$class(\"ui-state-default\")._(\"Apps Completed\")._().\n            th().$class(\"ui-state-default\")._(\"Containers Running\")._().\n            th().$class(\"ui-state-default\")._(\"Containers Pending\")._().\n            th().$class(\"ui-state-default\")._(\"Containers Reserved\")._().\n            th().$class(\"ui-state-default\")._(\"Memory Used\")._().\n            th().$class(\"ui-state-default\")._(\"Memory Pending\")._().\n            th().$class(\"ui-state-default\")._(\"Memory Reserved\")._().\n            th().$class(\"ui-state-default\")._(\"VCores Used\")._().\n            th().$class(\"ui-state-default\")._(\"VCores Pending\")._().\n            th().$class(\"ui-state-default\")._(\"VCores Reserved\")._().\n          _().\n        _().\n        tbody().$class(\"ui-widget-content\").\n          tr().\n            td(String.valueOf(userMetrics.getAppsSubmitted())).\n            td(String.valueOf(userMetrics.getAppsPending())).\n            td(String.valueOf(userMetrics.getAppsRunning())).\n            td(\n                String.valueOf(\n                    (userMetrics.getAppsCompleted() + \n                     userMetrics.getAppsFailed() + userMetrics.getAppsKilled())\n                    )\n              ).\n            td(String.valueOf(userMetrics.getRunningContainers())).\n            td(String.valueOf(userMetrics.getPendingContainers())).\n            td(String.valueOf(userMetrics.getReservedContainers())).\n            td(StringUtils.byteDesc(userMetrics.getAllocatedMB() * BYTES_IN_MB)).\n            td(StringUtils.byteDesc(userMetrics.getPendingMB() * BYTES_IN_MB)).\n            td(StringUtils.byteDesc(userMetrics.getReservedMB() * BYTES_IN_MB)).\n            td(String.valueOf(userMetrics.getAllocatedVirtualCores())).\n            td(String.valueOf(userMetrics.getPendingVirtualCores())).\n            td(String.valueOf(userMetrics.getReservedVirtualCores())).\n          _().\n        _()._();\n        \n      }\n    }\n    \n    SchedulerInfo schedulerInfo\u003dnew SchedulerInfo(this.rm);\n    \n    div.h3(\"Scheduler Metrics\").\n    table(\"#schedulermetricsoverview\").\n    thead().$class(\"ui-widget-header\").\n      tr().\n        th().$class(\"ui-state-default\")._(\"Scheduler Type\")._().\n        th().$class(\"ui-state-default\")._(\"Scheduling Resource Type\")._().\n        th().$class(\"ui-state-default\")._(\"Minimum Allocation\")._().\n        th().$class(\"ui-state-default\")._(\"Maximum Allocation\")._().\n      _().\n    _().\n    tbody().$class(\"ui-widget-content\").\n      tr().\n        td(String.valueOf(schedulerInfo.getSchedulerType())).\n        td(String.valueOf(schedulerInfo.getSchedulerResourceTypes())).\n        td(schedulerInfo.getMinAllocation().toString()).\n        td(schedulerInfo.getMaxAllocation().toString()).\n      _().\n    _()._();\n\n    div._();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/MetricsOverviewTable.java",
      "extendedDetails": {}
    },
    "658097d6da1b1aac8e01db459f0c3b456e99652f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3273. Improve scheduler UI to facilitate scheduling analysis and debugging. Contributed Rohith Sharmaks\n",
      "commitDate": "17/03/15 9:30 PM",
      "commitName": "658097d6da1b1aac8e01db459f0c3b456e99652f",
      "commitAuthor": "Jian He",
      "commitDateOld": "02/12/14 5:16 PM",
      "commitNameOld": "392c3aaea8e8f156b76e418157fa347256283c56",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 105.13,
      "commitsBetweenForRepo": 808,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,109 +1,130 @@\n   protected void render(Block html) {\n     //Yes this is a hack, but there is no other way to insert\n     //CSS in the correct spot\n     html.style(\".metrics {margin-bottom:5px}\"); \n     \n     ClusterMetricsInfo clusterMetrics \u003d \n  new ClusterMetricsInfo(this.rm);\n     \n     DIV\u003cHamlet\u003e div \u003d html.div().$class(\"metrics\");\n     \n     div.h3(\"Cluster Metrics\").\n     table(\"#metricsoverview\").\n     thead().$class(\"ui-widget-header\").\n       tr().\n         th().$class(\"ui-state-default\")._(\"Apps Submitted\")._().\n         th().$class(\"ui-state-default\")._(\"Apps Pending\")._().\n         th().$class(\"ui-state-default\")._(\"Apps Running\")._().\n         th().$class(\"ui-state-default\")._(\"Apps Completed\")._().\n         th().$class(\"ui-state-default\")._(\"Containers Running\")._().\n         th().$class(\"ui-state-default\")._(\"Memory Used\")._().\n         th().$class(\"ui-state-default\")._(\"Memory Total\")._().\n         th().$class(\"ui-state-default\")._(\"Memory Reserved\")._().\n         th().$class(\"ui-state-default\")._(\"VCores Used\")._().\n         th().$class(\"ui-state-default\")._(\"VCores Total\")._().\n         th().$class(\"ui-state-default\")._(\"VCores Reserved\")._().\n         th().$class(\"ui-state-default\")._(\"Active Nodes\")._().\n         th().$class(\"ui-state-default\")._(\"Decommissioned Nodes\")._().\n         th().$class(\"ui-state-default\")._(\"Lost Nodes\")._().\n         th().$class(\"ui-state-default\")._(\"Unhealthy Nodes\")._().\n         th().$class(\"ui-state-default\")._(\"Rebooted Nodes\")._().\n       _().\n     _().\n     tbody().$class(\"ui-widget-content\").\n       tr().\n         td(String.valueOf(clusterMetrics.getAppsSubmitted())).\n         td(String.valueOf(clusterMetrics.getAppsPending())).\n         td(String.valueOf(clusterMetrics.getAppsRunning())).\n         td(\n             String.valueOf(\n                 clusterMetrics.getAppsCompleted() + \n                 clusterMetrics.getAppsFailed() + clusterMetrics.getAppsKilled()\n                 )\n             ).\n         td(String.valueOf(clusterMetrics.getContainersAllocated())).\n         td(StringUtils.byteDesc(clusterMetrics.getAllocatedMB() * BYTES_IN_MB)).\n         td(StringUtils.byteDesc(clusterMetrics.getTotalMB() * BYTES_IN_MB)).\n         td(StringUtils.byteDesc(clusterMetrics.getReservedMB() * BYTES_IN_MB)).\n         td(String.valueOf(clusterMetrics.getAllocatedVirtualCores())).\n         td(String.valueOf(clusterMetrics.getTotalVirtualCores())).\n         td(String.valueOf(clusterMetrics.getReservedVirtualCores())).\n         td().a(url(\"nodes\"),String.valueOf(clusterMetrics.getActiveNodes()))._().\n         td().a(url(\"nodes/decommissioned\"),String.valueOf(clusterMetrics.getDecommissionedNodes()))._().\n         td().a(url(\"nodes/lost\"),String.valueOf(clusterMetrics.getLostNodes()))._().\n         td().a(url(\"nodes/unhealthy\"),String.valueOf(clusterMetrics.getUnhealthyNodes()))._().\n         td().a(url(\"nodes/rebooted\"),String.valueOf(clusterMetrics.getRebootedNodes()))._().\n       _().\n     _()._();\n     \n     String user \u003d request().getRemoteUser();\n     if (user !\u003d null) {\n       UserMetricsInfo userMetrics \u003d new UserMetricsInfo(this.rm, user);\n       if (userMetrics.metricsAvailable()) {\n         div.h3(\"User Metrics for \" + user).\n         table(\"#usermetricsoverview\").\n         thead().$class(\"ui-widget-header\").\n           tr().\n             th().$class(\"ui-state-default\")._(\"Apps Submitted\")._().\n             th().$class(\"ui-state-default\")._(\"Apps Pending\")._().\n             th().$class(\"ui-state-default\")._(\"Apps Running\")._().\n             th().$class(\"ui-state-default\")._(\"Apps Completed\")._().\n             th().$class(\"ui-state-default\")._(\"Containers Running\")._().\n             th().$class(\"ui-state-default\")._(\"Containers Pending\")._().\n             th().$class(\"ui-state-default\")._(\"Containers Reserved\")._().\n             th().$class(\"ui-state-default\")._(\"Memory Used\")._().\n             th().$class(\"ui-state-default\")._(\"Memory Pending\")._().\n             th().$class(\"ui-state-default\")._(\"Memory Reserved\")._().\n             th().$class(\"ui-state-default\")._(\"VCores Used\")._().\n             th().$class(\"ui-state-default\")._(\"VCores Pending\")._().\n             th().$class(\"ui-state-default\")._(\"VCores Reserved\")._().\n           _().\n         _().\n         tbody().$class(\"ui-widget-content\").\n           tr().\n             td(String.valueOf(userMetrics.getAppsSubmitted())).\n             td(String.valueOf(userMetrics.getAppsPending())).\n             td(String.valueOf(userMetrics.getAppsRunning())).\n             td(\n                 String.valueOf(\n                     (userMetrics.getAppsCompleted() + \n                      userMetrics.getAppsFailed() + userMetrics.getAppsKilled())\n                     )\n               ).\n             td(String.valueOf(userMetrics.getRunningContainers())).\n             td(String.valueOf(userMetrics.getPendingContainers())).\n             td(String.valueOf(userMetrics.getReservedContainers())).\n             td(StringUtils.byteDesc(userMetrics.getAllocatedMB() * BYTES_IN_MB)).\n             td(StringUtils.byteDesc(userMetrics.getPendingMB() * BYTES_IN_MB)).\n             td(StringUtils.byteDesc(userMetrics.getReservedMB() * BYTES_IN_MB)).\n             td(String.valueOf(userMetrics.getAllocatedVirtualCores())).\n             td(String.valueOf(userMetrics.getPendingVirtualCores())).\n             td(String.valueOf(userMetrics.getReservedVirtualCores())).\n           _().\n         _()._();\n         \n       }\n     }\n+    \n+    SchedulerInfo schedulerInfo\u003dnew SchedulerInfo(this.rm);\n+    \n+    div.h3(\"Scheduler Metrics\").\n+    table(\"#schedulermetricsoverview\").\n+    thead().$class(\"ui-widget-header\").\n+      tr().\n+        th().$class(\"ui-state-default\")._(\"Scheduler Type\")._().\n+        th().$class(\"ui-state-default\")._(\"Scheduling Resource Type\")._().\n+        th().$class(\"ui-state-default\")._(\"Minimum Allocation\")._().\n+        th().$class(\"ui-state-default\")._(\"Maximum Allocation\")._().\n+      _().\n+    _().\n+    tbody().$class(\"ui-widget-content\").\n+      tr().\n+        td(String.valueOf(schedulerInfo.getSchedulerType())).\n+        td(String.valueOf(schedulerInfo.getSchedulerResourceTypes())).\n+        td(schedulerInfo.getMinAllocation().toString()).\n+        td(schedulerInfo.getMaxAllocation().toString()).\n+      _().\n+    _()._();\n \n     div._();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void render(Block html) {\n    //Yes this is a hack, but there is no other way to insert\n    //CSS in the correct spot\n    html.style(\".metrics {margin-bottom:5px}\"); \n    \n    ClusterMetricsInfo clusterMetrics \u003d \n new ClusterMetricsInfo(this.rm);\n    \n    DIV\u003cHamlet\u003e div \u003d html.div().$class(\"metrics\");\n    \n    div.h3(\"Cluster Metrics\").\n    table(\"#metricsoverview\").\n    thead().$class(\"ui-widget-header\").\n      tr().\n        th().$class(\"ui-state-default\")._(\"Apps Submitted\")._().\n        th().$class(\"ui-state-default\")._(\"Apps Pending\")._().\n        th().$class(\"ui-state-default\")._(\"Apps Running\")._().\n        th().$class(\"ui-state-default\")._(\"Apps Completed\")._().\n        th().$class(\"ui-state-default\")._(\"Containers Running\")._().\n        th().$class(\"ui-state-default\")._(\"Memory Used\")._().\n        th().$class(\"ui-state-default\")._(\"Memory Total\")._().\n        th().$class(\"ui-state-default\")._(\"Memory Reserved\")._().\n        th().$class(\"ui-state-default\")._(\"VCores Used\")._().\n        th().$class(\"ui-state-default\")._(\"VCores Total\")._().\n        th().$class(\"ui-state-default\")._(\"VCores Reserved\")._().\n        th().$class(\"ui-state-default\")._(\"Active Nodes\")._().\n        th().$class(\"ui-state-default\")._(\"Decommissioned Nodes\")._().\n        th().$class(\"ui-state-default\")._(\"Lost Nodes\")._().\n        th().$class(\"ui-state-default\")._(\"Unhealthy Nodes\")._().\n        th().$class(\"ui-state-default\")._(\"Rebooted Nodes\")._().\n      _().\n    _().\n    tbody().$class(\"ui-widget-content\").\n      tr().\n        td(String.valueOf(clusterMetrics.getAppsSubmitted())).\n        td(String.valueOf(clusterMetrics.getAppsPending())).\n        td(String.valueOf(clusterMetrics.getAppsRunning())).\n        td(\n            String.valueOf(\n                clusterMetrics.getAppsCompleted() + \n                clusterMetrics.getAppsFailed() + clusterMetrics.getAppsKilled()\n                )\n            ).\n        td(String.valueOf(clusterMetrics.getContainersAllocated())).\n        td(StringUtils.byteDesc(clusterMetrics.getAllocatedMB() * BYTES_IN_MB)).\n        td(StringUtils.byteDesc(clusterMetrics.getTotalMB() * BYTES_IN_MB)).\n        td(StringUtils.byteDesc(clusterMetrics.getReservedMB() * BYTES_IN_MB)).\n        td(String.valueOf(clusterMetrics.getAllocatedVirtualCores())).\n        td(String.valueOf(clusterMetrics.getTotalVirtualCores())).\n        td(String.valueOf(clusterMetrics.getReservedVirtualCores())).\n        td().a(url(\"nodes\"),String.valueOf(clusterMetrics.getActiveNodes()))._().\n        td().a(url(\"nodes/decommissioned\"),String.valueOf(clusterMetrics.getDecommissionedNodes()))._().\n        td().a(url(\"nodes/lost\"),String.valueOf(clusterMetrics.getLostNodes()))._().\n        td().a(url(\"nodes/unhealthy\"),String.valueOf(clusterMetrics.getUnhealthyNodes()))._().\n        td().a(url(\"nodes/rebooted\"),String.valueOf(clusterMetrics.getRebootedNodes()))._().\n      _().\n    _()._();\n    \n    String user \u003d request().getRemoteUser();\n    if (user !\u003d null) {\n      UserMetricsInfo userMetrics \u003d new UserMetricsInfo(this.rm, user);\n      if (userMetrics.metricsAvailable()) {\n        div.h3(\"User Metrics for \" + user).\n        table(\"#usermetricsoverview\").\n        thead().$class(\"ui-widget-header\").\n          tr().\n            th().$class(\"ui-state-default\")._(\"Apps Submitted\")._().\n            th().$class(\"ui-state-default\")._(\"Apps Pending\")._().\n            th().$class(\"ui-state-default\")._(\"Apps Running\")._().\n            th().$class(\"ui-state-default\")._(\"Apps Completed\")._().\n            th().$class(\"ui-state-default\")._(\"Containers Running\")._().\n            th().$class(\"ui-state-default\")._(\"Containers Pending\")._().\n            th().$class(\"ui-state-default\")._(\"Containers Reserved\")._().\n            th().$class(\"ui-state-default\")._(\"Memory Used\")._().\n            th().$class(\"ui-state-default\")._(\"Memory Pending\")._().\n            th().$class(\"ui-state-default\")._(\"Memory Reserved\")._().\n            th().$class(\"ui-state-default\")._(\"VCores Used\")._().\n            th().$class(\"ui-state-default\")._(\"VCores Pending\")._().\n            th().$class(\"ui-state-default\")._(\"VCores Reserved\")._().\n          _().\n        _().\n        tbody().$class(\"ui-widget-content\").\n          tr().\n            td(String.valueOf(userMetrics.getAppsSubmitted())).\n            td(String.valueOf(userMetrics.getAppsPending())).\n            td(String.valueOf(userMetrics.getAppsRunning())).\n            td(\n                String.valueOf(\n                    (userMetrics.getAppsCompleted() + \n                     userMetrics.getAppsFailed() + userMetrics.getAppsKilled())\n                    )\n              ).\n            td(String.valueOf(userMetrics.getRunningContainers())).\n            td(String.valueOf(userMetrics.getPendingContainers())).\n            td(String.valueOf(userMetrics.getReservedContainers())).\n            td(StringUtils.byteDesc(userMetrics.getAllocatedMB() * BYTES_IN_MB)).\n            td(StringUtils.byteDesc(userMetrics.getPendingMB() * BYTES_IN_MB)).\n            td(StringUtils.byteDesc(userMetrics.getReservedMB() * BYTES_IN_MB)).\n            td(String.valueOf(userMetrics.getAllocatedVirtualCores())).\n            td(String.valueOf(userMetrics.getPendingVirtualCores())).\n            td(String.valueOf(userMetrics.getReservedVirtualCores())).\n          _().\n        _()._();\n        \n      }\n    }\n    \n    SchedulerInfo schedulerInfo\u003dnew SchedulerInfo(this.rm);\n    \n    div.h3(\"Scheduler Metrics\").\n    table(\"#schedulermetricsoverview\").\n    thead().$class(\"ui-widget-header\").\n      tr().\n        th().$class(\"ui-state-default\")._(\"Scheduler Type\")._().\n        th().$class(\"ui-state-default\")._(\"Scheduling Resource Type\")._().\n        th().$class(\"ui-state-default\")._(\"Minimum Allocation\")._().\n        th().$class(\"ui-state-default\")._(\"Maximum Allocation\")._().\n      _().\n    _().\n    tbody().$class(\"ui-widget-content\").\n      tr().\n        td(String.valueOf(schedulerInfo.getSchedulerType())).\n        td(String.valueOf(schedulerInfo.getSchedulerResourceTypes())).\n        td(schedulerInfo.getMinAllocation().toString()).\n        td(schedulerInfo.getMaxAllocation().toString()).\n      _().\n    _()._();\n\n    div._();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/MetricsOverviewTable.java",
      "extendedDetails": {}
    },
    "392c3aaea8e8f156b76e418157fa347256283c56": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2894. Fixed a bug regarding application view acl when RM fails over. Contributed by Rohith Sharmaks\n",
      "commitDate": "02/12/14 5:16 PM",
      "commitName": "392c3aaea8e8f156b76e418157fa347256283c56",
      "commitAuthor": "Jian He",
      "commitDateOld": "24/06/14 12:34 PM",
      "commitNameOld": "1f9a0fd927ab7bef13db42dd80368fd781b3d2d1",
      "commitAuthorOld": "Thomas Graves",
      "daysBetweenCommits": 161.24,
      "commitsBetweenForRepo": 1470,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,109 +1,109 @@\n   protected void render(Block html) {\n     //Yes this is a hack, but there is no other way to insert\n     //CSS in the correct spot\n     html.style(\".metrics {margin-bottom:5px}\"); \n     \n     ClusterMetricsInfo clusterMetrics \u003d \n-        new ClusterMetricsInfo(this.rm, this.rmContext);\n+ new ClusterMetricsInfo(this.rm);\n     \n     DIV\u003cHamlet\u003e div \u003d html.div().$class(\"metrics\");\n     \n     div.h3(\"Cluster Metrics\").\n     table(\"#metricsoverview\").\n     thead().$class(\"ui-widget-header\").\n       tr().\n         th().$class(\"ui-state-default\")._(\"Apps Submitted\")._().\n         th().$class(\"ui-state-default\")._(\"Apps Pending\")._().\n         th().$class(\"ui-state-default\")._(\"Apps Running\")._().\n         th().$class(\"ui-state-default\")._(\"Apps Completed\")._().\n         th().$class(\"ui-state-default\")._(\"Containers Running\")._().\n         th().$class(\"ui-state-default\")._(\"Memory Used\")._().\n         th().$class(\"ui-state-default\")._(\"Memory Total\")._().\n         th().$class(\"ui-state-default\")._(\"Memory Reserved\")._().\n         th().$class(\"ui-state-default\")._(\"VCores Used\")._().\n         th().$class(\"ui-state-default\")._(\"VCores Total\")._().\n         th().$class(\"ui-state-default\")._(\"VCores Reserved\")._().\n         th().$class(\"ui-state-default\")._(\"Active Nodes\")._().\n         th().$class(\"ui-state-default\")._(\"Decommissioned Nodes\")._().\n         th().$class(\"ui-state-default\")._(\"Lost Nodes\")._().\n         th().$class(\"ui-state-default\")._(\"Unhealthy Nodes\")._().\n         th().$class(\"ui-state-default\")._(\"Rebooted Nodes\")._().\n       _().\n     _().\n     tbody().$class(\"ui-widget-content\").\n       tr().\n         td(String.valueOf(clusterMetrics.getAppsSubmitted())).\n         td(String.valueOf(clusterMetrics.getAppsPending())).\n         td(String.valueOf(clusterMetrics.getAppsRunning())).\n         td(\n             String.valueOf(\n                 clusterMetrics.getAppsCompleted() + \n                 clusterMetrics.getAppsFailed() + clusterMetrics.getAppsKilled()\n                 )\n             ).\n         td(String.valueOf(clusterMetrics.getContainersAllocated())).\n         td(StringUtils.byteDesc(clusterMetrics.getAllocatedMB() * BYTES_IN_MB)).\n         td(StringUtils.byteDesc(clusterMetrics.getTotalMB() * BYTES_IN_MB)).\n         td(StringUtils.byteDesc(clusterMetrics.getReservedMB() * BYTES_IN_MB)).\n         td(String.valueOf(clusterMetrics.getAllocatedVirtualCores())).\n         td(String.valueOf(clusterMetrics.getTotalVirtualCores())).\n         td(String.valueOf(clusterMetrics.getReservedVirtualCores())).\n         td().a(url(\"nodes\"),String.valueOf(clusterMetrics.getActiveNodes()))._().\n         td().a(url(\"nodes/decommissioned\"),String.valueOf(clusterMetrics.getDecommissionedNodes()))._().\n         td().a(url(\"nodes/lost\"),String.valueOf(clusterMetrics.getLostNodes()))._().\n         td().a(url(\"nodes/unhealthy\"),String.valueOf(clusterMetrics.getUnhealthyNodes()))._().\n         td().a(url(\"nodes/rebooted\"),String.valueOf(clusterMetrics.getRebootedNodes()))._().\n       _().\n     _()._();\n     \n     String user \u003d request().getRemoteUser();\n     if (user !\u003d null) {\n-      UserMetricsInfo userMetrics \u003d new UserMetricsInfo(this.rm, this.rmContext, user);\n+      UserMetricsInfo userMetrics \u003d new UserMetricsInfo(this.rm, user);\n       if (userMetrics.metricsAvailable()) {\n         div.h3(\"User Metrics for \" + user).\n         table(\"#usermetricsoverview\").\n         thead().$class(\"ui-widget-header\").\n           tr().\n             th().$class(\"ui-state-default\")._(\"Apps Submitted\")._().\n             th().$class(\"ui-state-default\")._(\"Apps Pending\")._().\n             th().$class(\"ui-state-default\")._(\"Apps Running\")._().\n             th().$class(\"ui-state-default\")._(\"Apps Completed\")._().\n             th().$class(\"ui-state-default\")._(\"Containers Running\")._().\n             th().$class(\"ui-state-default\")._(\"Containers Pending\")._().\n             th().$class(\"ui-state-default\")._(\"Containers Reserved\")._().\n             th().$class(\"ui-state-default\")._(\"Memory Used\")._().\n             th().$class(\"ui-state-default\")._(\"Memory Pending\")._().\n             th().$class(\"ui-state-default\")._(\"Memory Reserved\")._().\n             th().$class(\"ui-state-default\")._(\"VCores Used\")._().\n             th().$class(\"ui-state-default\")._(\"VCores Pending\")._().\n             th().$class(\"ui-state-default\")._(\"VCores Reserved\")._().\n           _().\n         _().\n         tbody().$class(\"ui-widget-content\").\n           tr().\n             td(String.valueOf(userMetrics.getAppsSubmitted())).\n             td(String.valueOf(userMetrics.getAppsPending())).\n             td(String.valueOf(userMetrics.getAppsRunning())).\n             td(\n                 String.valueOf(\n                     (userMetrics.getAppsCompleted() + \n                      userMetrics.getAppsFailed() + userMetrics.getAppsKilled())\n                     )\n               ).\n             td(String.valueOf(userMetrics.getRunningContainers())).\n             td(String.valueOf(userMetrics.getPendingContainers())).\n             td(String.valueOf(userMetrics.getReservedContainers())).\n             td(StringUtils.byteDesc(userMetrics.getAllocatedMB() * BYTES_IN_MB)).\n             td(StringUtils.byteDesc(userMetrics.getPendingMB() * BYTES_IN_MB)).\n             td(StringUtils.byteDesc(userMetrics.getReservedMB() * BYTES_IN_MB)).\n             td(String.valueOf(userMetrics.getAllocatedVirtualCores())).\n             td(String.valueOf(userMetrics.getPendingVirtualCores())).\n             td(String.valueOf(userMetrics.getReservedVirtualCores())).\n           _().\n         _()._();\n         \n       }\n     }\n \n     div._();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void render(Block html) {\n    //Yes this is a hack, but there is no other way to insert\n    //CSS in the correct spot\n    html.style(\".metrics {margin-bottom:5px}\"); \n    \n    ClusterMetricsInfo clusterMetrics \u003d \n new ClusterMetricsInfo(this.rm);\n    \n    DIV\u003cHamlet\u003e div \u003d html.div().$class(\"metrics\");\n    \n    div.h3(\"Cluster Metrics\").\n    table(\"#metricsoverview\").\n    thead().$class(\"ui-widget-header\").\n      tr().\n        th().$class(\"ui-state-default\")._(\"Apps Submitted\")._().\n        th().$class(\"ui-state-default\")._(\"Apps Pending\")._().\n        th().$class(\"ui-state-default\")._(\"Apps Running\")._().\n        th().$class(\"ui-state-default\")._(\"Apps Completed\")._().\n        th().$class(\"ui-state-default\")._(\"Containers Running\")._().\n        th().$class(\"ui-state-default\")._(\"Memory Used\")._().\n        th().$class(\"ui-state-default\")._(\"Memory Total\")._().\n        th().$class(\"ui-state-default\")._(\"Memory Reserved\")._().\n        th().$class(\"ui-state-default\")._(\"VCores Used\")._().\n        th().$class(\"ui-state-default\")._(\"VCores Total\")._().\n        th().$class(\"ui-state-default\")._(\"VCores Reserved\")._().\n        th().$class(\"ui-state-default\")._(\"Active Nodes\")._().\n        th().$class(\"ui-state-default\")._(\"Decommissioned Nodes\")._().\n        th().$class(\"ui-state-default\")._(\"Lost Nodes\")._().\n        th().$class(\"ui-state-default\")._(\"Unhealthy Nodes\")._().\n        th().$class(\"ui-state-default\")._(\"Rebooted Nodes\")._().\n      _().\n    _().\n    tbody().$class(\"ui-widget-content\").\n      tr().\n        td(String.valueOf(clusterMetrics.getAppsSubmitted())).\n        td(String.valueOf(clusterMetrics.getAppsPending())).\n        td(String.valueOf(clusterMetrics.getAppsRunning())).\n        td(\n            String.valueOf(\n                clusterMetrics.getAppsCompleted() + \n                clusterMetrics.getAppsFailed() + clusterMetrics.getAppsKilled()\n                )\n            ).\n        td(String.valueOf(clusterMetrics.getContainersAllocated())).\n        td(StringUtils.byteDesc(clusterMetrics.getAllocatedMB() * BYTES_IN_MB)).\n        td(StringUtils.byteDesc(clusterMetrics.getTotalMB() * BYTES_IN_MB)).\n        td(StringUtils.byteDesc(clusterMetrics.getReservedMB() * BYTES_IN_MB)).\n        td(String.valueOf(clusterMetrics.getAllocatedVirtualCores())).\n        td(String.valueOf(clusterMetrics.getTotalVirtualCores())).\n        td(String.valueOf(clusterMetrics.getReservedVirtualCores())).\n        td().a(url(\"nodes\"),String.valueOf(clusterMetrics.getActiveNodes()))._().\n        td().a(url(\"nodes/decommissioned\"),String.valueOf(clusterMetrics.getDecommissionedNodes()))._().\n        td().a(url(\"nodes/lost\"),String.valueOf(clusterMetrics.getLostNodes()))._().\n        td().a(url(\"nodes/unhealthy\"),String.valueOf(clusterMetrics.getUnhealthyNodes()))._().\n        td().a(url(\"nodes/rebooted\"),String.valueOf(clusterMetrics.getRebootedNodes()))._().\n      _().\n    _()._();\n    \n    String user \u003d request().getRemoteUser();\n    if (user !\u003d null) {\n      UserMetricsInfo userMetrics \u003d new UserMetricsInfo(this.rm, user);\n      if (userMetrics.metricsAvailable()) {\n        div.h3(\"User Metrics for \" + user).\n        table(\"#usermetricsoverview\").\n        thead().$class(\"ui-widget-header\").\n          tr().\n            th().$class(\"ui-state-default\")._(\"Apps Submitted\")._().\n            th().$class(\"ui-state-default\")._(\"Apps Pending\")._().\n            th().$class(\"ui-state-default\")._(\"Apps Running\")._().\n            th().$class(\"ui-state-default\")._(\"Apps Completed\")._().\n            th().$class(\"ui-state-default\")._(\"Containers Running\")._().\n            th().$class(\"ui-state-default\")._(\"Containers Pending\")._().\n            th().$class(\"ui-state-default\")._(\"Containers Reserved\")._().\n            th().$class(\"ui-state-default\")._(\"Memory Used\")._().\n            th().$class(\"ui-state-default\")._(\"Memory Pending\")._().\n            th().$class(\"ui-state-default\")._(\"Memory Reserved\")._().\n            th().$class(\"ui-state-default\")._(\"VCores Used\")._().\n            th().$class(\"ui-state-default\")._(\"VCores Pending\")._().\n            th().$class(\"ui-state-default\")._(\"VCores Reserved\")._().\n          _().\n        _().\n        tbody().$class(\"ui-widget-content\").\n          tr().\n            td(String.valueOf(userMetrics.getAppsSubmitted())).\n            td(String.valueOf(userMetrics.getAppsPending())).\n            td(String.valueOf(userMetrics.getAppsRunning())).\n            td(\n                String.valueOf(\n                    (userMetrics.getAppsCompleted() + \n                     userMetrics.getAppsFailed() + userMetrics.getAppsKilled())\n                    )\n              ).\n            td(String.valueOf(userMetrics.getRunningContainers())).\n            td(String.valueOf(userMetrics.getPendingContainers())).\n            td(String.valueOf(userMetrics.getReservedContainers())).\n            td(StringUtils.byteDesc(userMetrics.getAllocatedMB() * BYTES_IN_MB)).\n            td(StringUtils.byteDesc(userMetrics.getPendingMB() * BYTES_IN_MB)).\n            td(StringUtils.byteDesc(userMetrics.getReservedMB() * BYTES_IN_MB)).\n            td(String.valueOf(userMetrics.getAllocatedVirtualCores())).\n            td(String.valueOf(userMetrics.getPendingVirtualCores())).\n            td(String.valueOf(userMetrics.getReservedVirtualCores())).\n          _().\n        _()._();\n        \n      }\n    }\n\n    div._();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/MetricsOverviewTable.java",
      "extendedDetails": {}
    },
    "1f9a0fd927ab7bef13db42dd80368fd781b3d2d1": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2072. RM/NM UIs and webservices are missing vcore information. (Nathan Roberts via tgraves)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1605162 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/06/14 12:34 PM",
      "commitName": "1f9a0fd927ab7bef13db42dd80368fd781b3d2d1",
      "commitAuthor": "Thomas Graves",
      "commitDateOld": "07/08/12 10:22 PM",
      "commitNameOld": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 685.59,
      "commitsBetweenForRepo": 4274,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,97 +1,109 @@\n   protected void render(Block html) {\n     //Yes this is a hack, but there is no other way to insert\n     //CSS in the correct spot\n     html.style(\".metrics {margin-bottom:5px}\"); \n     \n     ClusterMetricsInfo clusterMetrics \u003d \n         new ClusterMetricsInfo(this.rm, this.rmContext);\n     \n     DIV\u003cHamlet\u003e div \u003d html.div().$class(\"metrics\");\n     \n     div.h3(\"Cluster Metrics\").\n     table(\"#metricsoverview\").\n     thead().$class(\"ui-widget-header\").\n       tr().\n         th().$class(\"ui-state-default\")._(\"Apps Submitted\")._().\n         th().$class(\"ui-state-default\")._(\"Apps Pending\")._().\n         th().$class(\"ui-state-default\")._(\"Apps Running\")._().\n         th().$class(\"ui-state-default\")._(\"Apps Completed\")._().\n         th().$class(\"ui-state-default\")._(\"Containers Running\")._().\n         th().$class(\"ui-state-default\")._(\"Memory Used\")._().\n         th().$class(\"ui-state-default\")._(\"Memory Total\")._().\n         th().$class(\"ui-state-default\")._(\"Memory Reserved\")._().\n+        th().$class(\"ui-state-default\")._(\"VCores Used\")._().\n+        th().$class(\"ui-state-default\")._(\"VCores Total\")._().\n+        th().$class(\"ui-state-default\")._(\"VCores Reserved\")._().\n         th().$class(\"ui-state-default\")._(\"Active Nodes\")._().\n         th().$class(\"ui-state-default\")._(\"Decommissioned Nodes\")._().\n         th().$class(\"ui-state-default\")._(\"Lost Nodes\")._().\n         th().$class(\"ui-state-default\")._(\"Unhealthy Nodes\")._().\n         th().$class(\"ui-state-default\")._(\"Rebooted Nodes\")._().\n       _().\n     _().\n     tbody().$class(\"ui-widget-content\").\n       tr().\n         td(String.valueOf(clusterMetrics.getAppsSubmitted())).\n         td(String.valueOf(clusterMetrics.getAppsPending())).\n         td(String.valueOf(clusterMetrics.getAppsRunning())).\n         td(\n             String.valueOf(\n                 clusterMetrics.getAppsCompleted() + \n                 clusterMetrics.getAppsFailed() + clusterMetrics.getAppsKilled()\n                 )\n             ).\n         td(String.valueOf(clusterMetrics.getContainersAllocated())).\n         td(StringUtils.byteDesc(clusterMetrics.getAllocatedMB() * BYTES_IN_MB)).\n         td(StringUtils.byteDesc(clusterMetrics.getTotalMB() * BYTES_IN_MB)).\n         td(StringUtils.byteDesc(clusterMetrics.getReservedMB() * BYTES_IN_MB)).\n+        td(String.valueOf(clusterMetrics.getAllocatedVirtualCores())).\n+        td(String.valueOf(clusterMetrics.getTotalVirtualCores())).\n+        td(String.valueOf(clusterMetrics.getReservedVirtualCores())).\n         td().a(url(\"nodes\"),String.valueOf(clusterMetrics.getActiveNodes()))._().\n         td().a(url(\"nodes/decommissioned\"),String.valueOf(clusterMetrics.getDecommissionedNodes()))._().\n         td().a(url(\"nodes/lost\"),String.valueOf(clusterMetrics.getLostNodes()))._().\n         td().a(url(\"nodes/unhealthy\"),String.valueOf(clusterMetrics.getUnhealthyNodes()))._().\n         td().a(url(\"nodes/rebooted\"),String.valueOf(clusterMetrics.getRebootedNodes()))._().\n       _().\n     _()._();\n     \n     String user \u003d request().getRemoteUser();\n     if (user !\u003d null) {\n       UserMetricsInfo userMetrics \u003d new UserMetricsInfo(this.rm, this.rmContext, user);\n       if (userMetrics.metricsAvailable()) {\n         div.h3(\"User Metrics for \" + user).\n         table(\"#usermetricsoverview\").\n         thead().$class(\"ui-widget-header\").\n           tr().\n             th().$class(\"ui-state-default\")._(\"Apps Submitted\")._().\n             th().$class(\"ui-state-default\")._(\"Apps Pending\")._().\n             th().$class(\"ui-state-default\")._(\"Apps Running\")._().\n             th().$class(\"ui-state-default\")._(\"Apps Completed\")._().\n             th().$class(\"ui-state-default\")._(\"Containers Running\")._().\n             th().$class(\"ui-state-default\")._(\"Containers Pending\")._().\n             th().$class(\"ui-state-default\")._(\"Containers Reserved\")._().\n             th().$class(\"ui-state-default\")._(\"Memory Used\")._().\n             th().$class(\"ui-state-default\")._(\"Memory Pending\")._().\n             th().$class(\"ui-state-default\")._(\"Memory Reserved\")._().\n+            th().$class(\"ui-state-default\")._(\"VCores Used\")._().\n+            th().$class(\"ui-state-default\")._(\"VCores Pending\")._().\n+            th().$class(\"ui-state-default\")._(\"VCores Reserved\")._().\n           _().\n         _().\n         tbody().$class(\"ui-widget-content\").\n           tr().\n             td(String.valueOf(userMetrics.getAppsSubmitted())).\n             td(String.valueOf(userMetrics.getAppsPending())).\n             td(String.valueOf(userMetrics.getAppsRunning())).\n             td(\n                 String.valueOf(\n                     (userMetrics.getAppsCompleted() + \n                      userMetrics.getAppsFailed() + userMetrics.getAppsKilled())\n                     )\n               ).\n             td(String.valueOf(userMetrics.getRunningContainers())).\n             td(String.valueOf(userMetrics.getPendingContainers())).\n             td(String.valueOf(userMetrics.getReservedContainers())).\n             td(StringUtils.byteDesc(userMetrics.getAllocatedMB() * BYTES_IN_MB)).\n             td(StringUtils.byteDesc(userMetrics.getPendingMB() * BYTES_IN_MB)).\n             td(StringUtils.byteDesc(userMetrics.getReservedMB() * BYTES_IN_MB)).\n+            td(String.valueOf(userMetrics.getAllocatedVirtualCores())).\n+            td(String.valueOf(userMetrics.getPendingVirtualCores())).\n+            td(String.valueOf(userMetrics.getReservedVirtualCores())).\n           _().\n         _()._();\n         \n       }\n     }\n \n     div._();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void render(Block html) {\n    //Yes this is a hack, but there is no other way to insert\n    //CSS in the correct spot\n    html.style(\".metrics {margin-bottom:5px}\"); \n    \n    ClusterMetricsInfo clusterMetrics \u003d \n        new ClusterMetricsInfo(this.rm, this.rmContext);\n    \n    DIV\u003cHamlet\u003e div \u003d html.div().$class(\"metrics\");\n    \n    div.h3(\"Cluster Metrics\").\n    table(\"#metricsoverview\").\n    thead().$class(\"ui-widget-header\").\n      tr().\n        th().$class(\"ui-state-default\")._(\"Apps Submitted\")._().\n        th().$class(\"ui-state-default\")._(\"Apps Pending\")._().\n        th().$class(\"ui-state-default\")._(\"Apps Running\")._().\n        th().$class(\"ui-state-default\")._(\"Apps Completed\")._().\n        th().$class(\"ui-state-default\")._(\"Containers Running\")._().\n        th().$class(\"ui-state-default\")._(\"Memory Used\")._().\n        th().$class(\"ui-state-default\")._(\"Memory Total\")._().\n        th().$class(\"ui-state-default\")._(\"Memory Reserved\")._().\n        th().$class(\"ui-state-default\")._(\"VCores Used\")._().\n        th().$class(\"ui-state-default\")._(\"VCores Total\")._().\n        th().$class(\"ui-state-default\")._(\"VCores Reserved\")._().\n        th().$class(\"ui-state-default\")._(\"Active Nodes\")._().\n        th().$class(\"ui-state-default\")._(\"Decommissioned Nodes\")._().\n        th().$class(\"ui-state-default\")._(\"Lost Nodes\")._().\n        th().$class(\"ui-state-default\")._(\"Unhealthy Nodes\")._().\n        th().$class(\"ui-state-default\")._(\"Rebooted Nodes\")._().\n      _().\n    _().\n    tbody().$class(\"ui-widget-content\").\n      tr().\n        td(String.valueOf(clusterMetrics.getAppsSubmitted())).\n        td(String.valueOf(clusterMetrics.getAppsPending())).\n        td(String.valueOf(clusterMetrics.getAppsRunning())).\n        td(\n            String.valueOf(\n                clusterMetrics.getAppsCompleted() + \n                clusterMetrics.getAppsFailed() + clusterMetrics.getAppsKilled()\n                )\n            ).\n        td(String.valueOf(clusterMetrics.getContainersAllocated())).\n        td(StringUtils.byteDesc(clusterMetrics.getAllocatedMB() * BYTES_IN_MB)).\n        td(StringUtils.byteDesc(clusterMetrics.getTotalMB() * BYTES_IN_MB)).\n        td(StringUtils.byteDesc(clusterMetrics.getReservedMB() * BYTES_IN_MB)).\n        td(String.valueOf(clusterMetrics.getAllocatedVirtualCores())).\n        td(String.valueOf(clusterMetrics.getTotalVirtualCores())).\n        td(String.valueOf(clusterMetrics.getReservedVirtualCores())).\n        td().a(url(\"nodes\"),String.valueOf(clusterMetrics.getActiveNodes()))._().\n        td().a(url(\"nodes/decommissioned\"),String.valueOf(clusterMetrics.getDecommissionedNodes()))._().\n        td().a(url(\"nodes/lost\"),String.valueOf(clusterMetrics.getLostNodes()))._().\n        td().a(url(\"nodes/unhealthy\"),String.valueOf(clusterMetrics.getUnhealthyNodes()))._().\n        td().a(url(\"nodes/rebooted\"),String.valueOf(clusterMetrics.getRebootedNodes()))._().\n      _().\n    _()._();\n    \n    String user \u003d request().getRemoteUser();\n    if (user !\u003d null) {\n      UserMetricsInfo userMetrics \u003d new UserMetricsInfo(this.rm, this.rmContext, user);\n      if (userMetrics.metricsAvailable()) {\n        div.h3(\"User Metrics for \" + user).\n        table(\"#usermetricsoverview\").\n        thead().$class(\"ui-widget-header\").\n          tr().\n            th().$class(\"ui-state-default\")._(\"Apps Submitted\")._().\n            th().$class(\"ui-state-default\")._(\"Apps Pending\")._().\n            th().$class(\"ui-state-default\")._(\"Apps Running\")._().\n            th().$class(\"ui-state-default\")._(\"Apps Completed\")._().\n            th().$class(\"ui-state-default\")._(\"Containers Running\")._().\n            th().$class(\"ui-state-default\")._(\"Containers Pending\")._().\n            th().$class(\"ui-state-default\")._(\"Containers Reserved\")._().\n            th().$class(\"ui-state-default\")._(\"Memory Used\")._().\n            th().$class(\"ui-state-default\")._(\"Memory Pending\")._().\n            th().$class(\"ui-state-default\")._(\"Memory Reserved\")._().\n            th().$class(\"ui-state-default\")._(\"VCores Used\")._().\n            th().$class(\"ui-state-default\")._(\"VCores Pending\")._().\n            th().$class(\"ui-state-default\")._(\"VCores Reserved\")._().\n          _().\n        _().\n        tbody().$class(\"ui-widget-content\").\n          tr().\n            td(String.valueOf(userMetrics.getAppsSubmitted())).\n            td(String.valueOf(userMetrics.getAppsPending())).\n            td(String.valueOf(userMetrics.getAppsRunning())).\n            td(\n                String.valueOf(\n                    (userMetrics.getAppsCompleted() + \n                     userMetrics.getAppsFailed() + userMetrics.getAppsKilled())\n                    )\n              ).\n            td(String.valueOf(userMetrics.getRunningContainers())).\n            td(String.valueOf(userMetrics.getPendingContainers())).\n            td(String.valueOf(userMetrics.getReservedContainers())).\n            td(StringUtils.byteDesc(userMetrics.getAllocatedMB() * BYTES_IN_MB)).\n            td(StringUtils.byteDesc(userMetrics.getPendingMB() * BYTES_IN_MB)).\n            td(StringUtils.byteDesc(userMetrics.getReservedMB() * BYTES_IN_MB)).\n            td(String.valueOf(userMetrics.getAllocatedVirtualCores())).\n            td(String.valueOf(userMetrics.getPendingVirtualCores())).\n            td(String.valueOf(userMetrics.getReservedVirtualCores())).\n          _().\n        _()._();\n        \n      }\n    }\n\n    div._();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/MetricsOverviewTable.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected void render(Block html) {\n    //Yes this is a hack, but there is no other way to insert\n    //CSS in the correct spot\n    html.style(\".metrics {margin-bottom:5px}\"); \n    \n    ClusterMetricsInfo clusterMetrics \u003d \n        new ClusterMetricsInfo(this.rm, this.rmContext);\n    \n    DIV\u003cHamlet\u003e div \u003d html.div().$class(\"metrics\");\n    \n    div.h3(\"Cluster Metrics\").\n    table(\"#metricsoverview\").\n    thead().$class(\"ui-widget-header\").\n      tr().\n        th().$class(\"ui-state-default\")._(\"Apps Submitted\")._().\n        th().$class(\"ui-state-default\")._(\"Apps Pending\")._().\n        th().$class(\"ui-state-default\")._(\"Apps Running\")._().\n        th().$class(\"ui-state-default\")._(\"Apps Completed\")._().\n        th().$class(\"ui-state-default\")._(\"Containers Running\")._().\n        th().$class(\"ui-state-default\")._(\"Memory Used\")._().\n        th().$class(\"ui-state-default\")._(\"Memory Total\")._().\n        th().$class(\"ui-state-default\")._(\"Memory Reserved\")._().\n        th().$class(\"ui-state-default\")._(\"Active Nodes\")._().\n        th().$class(\"ui-state-default\")._(\"Decommissioned Nodes\")._().\n        th().$class(\"ui-state-default\")._(\"Lost Nodes\")._().\n        th().$class(\"ui-state-default\")._(\"Unhealthy Nodes\")._().\n        th().$class(\"ui-state-default\")._(\"Rebooted Nodes\")._().\n      _().\n    _().\n    tbody().$class(\"ui-widget-content\").\n      tr().\n        td(String.valueOf(clusterMetrics.getAppsSubmitted())).\n        td(String.valueOf(clusterMetrics.getAppsPending())).\n        td(String.valueOf(clusterMetrics.getAppsRunning())).\n        td(\n            String.valueOf(\n                clusterMetrics.getAppsCompleted() + \n                clusterMetrics.getAppsFailed() + clusterMetrics.getAppsKilled()\n                )\n            ).\n        td(String.valueOf(clusterMetrics.getContainersAllocated())).\n        td(StringUtils.byteDesc(clusterMetrics.getAllocatedMB() * BYTES_IN_MB)).\n        td(StringUtils.byteDesc(clusterMetrics.getTotalMB() * BYTES_IN_MB)).\n        td(StringUtils.byteDesc(clusterMetrics.getReservedMB() * BYTES_IN_MB)).\n        td().a(url(\"nodes\"),String.valueOf(clusterMetrics.getActiveNodes()))._().\n        td().a(url(\"nodes/decommissioned\"),String.valueOf(clusterMetrics.getDecommissionedNodes()))._().\n        td().a(url(\"nodes/lost\"),String.valueOf(clusterMetrics.getLostNodes()))._().\n        td().a(url(\"nodes/unhealthy\"),String.valueOf(clusterMetrics.getUnhealthyNodes()))._().\n        td().a(url(\"nodes/rebooted\"),String.valueOf(clusterMetrics.getRebootedNodes()))._().\n      _().\n    _()._();\n    \n    String user \u003d request().getRemoteUser();\n    if (user !\u003d null) {\n      UserMetricsInfo userMetrics \u003d new UserMetricsInfo(this.rm, this.rmContext, user);\n      if (userMetrics.metricsAvailable()) {\n        div.h3(\"User Metrics for \" + user).\n        table(\"#usermetricsoverview\").\n        thead().$class(\"ui-widget-header\").\n          tr().\n            th().$class(\"ui-state-default\")._(\"Apps Submitted\")._().\n            th().$class(\"ui-state-default\")._(\"Apps Pending\")._().\n            th().$class(\"ui-state-default\")._(\"Apps Running\")._().\n            th().$class(\"ui-state-default\")._(\"Apps Completed\")._().\n            th().$class(\"ui-state-default\")._(\"Containers Running\")._().\n            th().$class(\"ui-state-default\")._(\"Containers Pending\")._().\n            th().$class(\"ui-state-default\")._(\"Containers Reserved\")._().\n            th().$class(\"ui-state-default\")._(\"Memory Used\")._().\n            th().$class(\"ui-state-default\")._(\"Memory Pending\")._().\n            th().$class(\"ui-state-default\")._(\"Memory Reserved\")._().\n          _().\n        _().\n        tbody().$class(\"ui-widget-content\").\n          tr().\n            td(String.valueOf(userMetrics.getAppsSubmitted())).\n            td(String.valueOf(userMetrics.getAppsPending())).\n            td(String.valueOf(userMetrics.getAppsRunning())).\n            td(\n                String.valueOf(\n                    (userMetrics.getAppsCompleted() + \n                     userMetrics.getAppsFailed() + userMetrics.getAppsKilled())\n                    )\n              ).\n            td(String.valueOf(userMetrics.getRunningContainers())).\n            td(String.valueOf(userMetrics.getPendingContainers())).\n            td(String.valueOf(userMetrics.getReservedContainers())).\n            td(StringUtils.byteDesc(userMetrics.getAllocatedMB() * BYTES_IN_MB)).\n            td(StringUtils.byteDesc(userMetrics.getPendingMB() * BYTES_IN_MB)).\n            td(StringUtils.byteDesc(userMetrics.getReservedMB() * BYTES_IN_MB)).\n          _().\n        _()._();\n        \n      }\n    }\n\n    div._();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/MetricsOverviewTable.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/MetricsOverviewTable.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/MetricsOverviewTable.java"
      }
    },
    "c7007a8a3508a24a6f023302516fe8fbe270eab1": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3747. Initialize queue metrics upfront and added start/finish time to RM Web-UI. \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1240886 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/02/12 7:38 PM",
      "commitName": "c7007a8a3508a24a6f023302516fe8fbe270eab1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "26/01/12 2:56 PM",
      "commitNameOld": "3cdc100369ce920701fdddae12d7f7247332b3f3",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 10.2,
      "commitsBetweenForRepo": 74,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,72 +1,97 @@\n   protected void render(Block html) {\n     //Yes this is a hack, but there is no other way to insert\n     //CSS in the correct spot\n     html.style(\".metrics {margin-bottom:5px}\"); \n     \n-    ClusterMetricsInfo clusterMetrics \u003d new ClusterMetricsInfo(this.rm, this.rmContext);\n-\n+    ClusterMetricsInfo clusterMetrics \u003d \n+        new ClusterMetricsInfo(this.rm, this.rmContext);\n     \n     DIV\u003cHamlet\u003e div \u003d html.div().$class(\"metrics\");\n     \n-    div.table(\"#metricsoverview\").\n+    div.h3(\"Cluster Metrics\").\n+    table(\"#metricsoverview\").\n     thead().$class(\"ui-widget-header\").\n       tr().\n         th().$class(\"ui-state-default\")._(\"Apps Submitted\")._().\n+        th().$class(\"ui-state-default\")._(\"Apps Pending\")._().\n+        th().$class(\"ui-state-default\")._(\"Apps Running\")._().\n+        th().$class(\"ui-state-default\")._(\"Apps Completed\")._().\n         th().$class(\"ui-state-default\")._(\"Containers Running\")._().\n         th().$class(\"ui-state-default\")._(\"Memory Used\")._().\n         th().$class(\"ui-state-default\")._(\"Memory Total\")._().\n         th().$class(\"ui-state-default\")._(\"Memory Reserved\")._().\n         th().$class(\"ui-state-default\")._(\"Active Nodes\")._().\n         th().$class(\"ui-state-default\")._(\"Decommissioned Nodes\")._().\n         th().$class(\"ui-state-default\")._(\"Lost Nodes\")._().\n         th().$class(\"ui-state-default\")._(\"Unhealthy Nodes\")._().\n         th().$class(\"ui-state-default\")._(\"Rebooted Nodes\")._().\n       _().\n     _().\n     tbody().$class(\"ui-widget-content\").\n       tr().\n         td(String.valueOf(clusterMetrics.getAppsSubmitted())).\n+        td(String.valueOf(clusterMetrics.getAppsPending())).\n+        td(String.valueOf(clusterMetrics.getAppsRunning())).\n+        td(\n+            String.valueOf(\n+                clusterMetrics.getAppsCompleted() + \n+                clusterMetrics.getAppsFailed() + clusterMetrics.getAppsKilled()\n+                )\n+            ).\n         td(String.valueOf(clusterMetrics.getContainersAllocated())).\n         td(StringUtils.byteDesc(clusterMetrics.getAllocatedMB() * BYTES_IN_MB)).\n         td(StringUtils.byteDesc(clusterMetrics.getTotalMB() * BYTES_IN_MB)).\n         td(StringUtils.byteDesc(clusterMetrics.getReservedMB() * BYTES_IN_MB)).\n         td().a(url(\"nodes\"),String.valueOf(clusterMetrics.getActiveNodes()))._().\n         td().a(url(\"nodes/decommissioned\"),String.valueOf(clusterMetrics.getDecommissionedNodes()))._().\n         td().a(url(\"nodes/lost\"),String.valueOf(clusterMetrics.getLostNodes()))._().\n         td().a(url(\"nodes/unhealthy\"),String.valueOf(clusterMetrics.getUnhealthyNodes()))._().\n         td().a(url(\"nodes/rebooted\"),String.valueOf(clusterMetrics.getRebootedNodes()))._().\n       _().\n     _()._();\n-\n+    \n     String user \u003d request().getRemoteUser();\n     if (user !\u003d null) {\n       UserMetricsInfo userMetrics \u003d new UserMetricsInfo(this.rm, this.rmContext, user);\n       if (userMetrics.metricsAvailable()) {\n-        div.table(\"#usermetricsoverview\").\n+        div.h3(\"User Metrics for \" + user).\n+        table(\"#usermetricsoverview\").\n         thead().$class(\"ui-widget-header\").\n           tr().\n-            th().$class(\"ui-state-default\")._(\"Apps Submitted (\"+user+\")\")._().\n-            th().$class(\"ui-state-default\")._(\"Containers Running (\"+user+\")\")._().\n-            th().$class(\"ui-state-default\")._(\"Containers Pending (\"+user+\")\")._().\n-            th().$class(\"ui-state-default\")._(\"Containers Reserved (\"+user+\")\")._().\n-            th().$class(\"ui-state-default\")._(\"Memory Used (\"+user+\")\")._().\n-            th().$class(\"ui-state-default\")._(\"Memory Pending (\"+user+\")\")._().\n-            th().$class(\"ui-state-default\")._(\"Memory Reserved (\"+user+\")\")._().\n+            th().$class(\"ui-state-default\")._(\"Apps Submitted\")._().\n+            th().$class(\"ui-state-default\")._(\"Apps Pending\")._().\n+            th().$class(\"ui-state-default\")._(\"Apps Running\")._().\n+            th().$class(\"ui-state-default\")._(\"Apps Completed\")._().\n+            th().$class(\"ui-state-default\")._(\"Containers Running\")._().\n+            th().$class(\"ui-state-default\")._(\"Containers Pending\")._().\n+            th().$class(\"ui-state-default\")._(\"Containers Reserved\")._().\n+            th().$class(\"ui-state-default\")._(\"Memory Used\")._().\n+            th().$class(\"ui-state-default\")._(\"Memory Pending\")._().\n+            th().$class(\"ui-state-default\")._(\"Memory Reserved\")._().\n           _().\n         _().\n         tbody().$class(\"ui-widget-content\").\n           tr().\n             td(String.valueOf(userMetrics.getAppsSubmitted())).\n+            td(String.valueOf(userMetrics.getAppsPending())).\n+            td(String.valueOf(userMetrics.getAppsRunning())).\n+            td(\n+                String.valueOf(\n+                    (userMetrics.getAppsCompleted() + \n+                     userMetrics.getAppsFailed() + userMetrics.getAppsKilled())\n+                    )\n+              ).\n             td(String.valueOf(userMetrics.getRunningContainers())).\n             td(String.valueOf(userMetrics.getPendingContainers())).\n             td(String.valueOf(userMetrics.getReservedContainers())).\n             td(StringUtils.byteDesc(userMetrics.getAllocatedMB() * BYTES_IN_MB)).\n             td(StringUtils.byteDesc(userMetrics.getPendingMB() * BYTES_IN_MB)).\n             td(StringUtils.byteDesc(userMetrics.getReservedMB() * BYTES_IN_MB)).\n           _().\n         _()._();\n+        \n       }\n     }\n \n     div._();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void render(Block html) {\n    //Yes this is a hack, but there is no other way to insert\n    //CSS in the correct spot\n    html.style(\".metrics {margin-bottom:5px}\"); \n    \n    ClusterMetricsInfo clusterMetrics \u003d \n        new ClusterMetricsInfo(this.rm, this.rmContext);\n    \n    DIV\u003cHamlet\u003e div \u003d html.div().$class(\"metrics\");\n    \n    div.h3(\"Cluster Metrics\").\n    table(\"#metricsoverview\").\n    thead().$class(\"ui-widget-header\").\n      tr().\n        th().$class(\"ui-state-default\")._(\"Apps Submitted\")._().\n        th().$class(\"ui-state-default\")._(\"Apps Pending\")._().\n        th().$class(\"ui-state-default\")._(\"Apps Running\")._().\n        th().$class(\"ui-state-default\")._(\"Apps Completed\")._().\n        th().$class(\"ui-state-default\")._(\"Containers Running\")._().\n        th().$class(\"ui-state-default\")._(\"Memory Used\")._().\n        th().$class(\"ui-state-default\")._(\"Memory Total\")._().\n        th().$class(\"ui-state-default\")._(\"Memory Reserved\")._().\n        th().$class(\"ui-state-default\")._(\"Active Nodes\")._().\n        th().$class(\"ui-state-default\")._(\"Decommissioned Nodes\")._().\n        th().$class(\"ui-state-default\")._(\"Lost Nodes\")._().\n        th().$class(\"ui-state-default\")._(\"Unhealthy Nodes\")._().\n        th().$class(\"ui-state-default\")._(\"Rebooted Nodes\")._().\n      _().\n    _().\n    tbody().$class(\"ui-widget-content\").\n      tr().\n        td(String.valueOf(clusterMetrics.getAppsSubmitted())).\n        td(String.valueOf(clusterMetrics.getAppsPending())).\n        td(String.valueOf(clusterMetrics.getAppsRunning())).\n        td(\n            String.valueOf(\n                clusterMetrics.getAppsCompleted() + \n                clusterMetrics.getAppsFailed() + clusterMetrics.getAppsKilled()\n                )\n            ).\n        td(String.valueOf(clusterMetrics.getContainersAllocated())).\n        td(StringUtils.byteDesc(clusterMetrics.getAllocatedMB() * BYTES_IN_MB)).\n        td(StringUtils.byteDesc(clusterMetrics.getTotalMB() * BYTES_IN_MB)).\n        td(StringUtils.byteDesc(clusterMetrics.getReservedMB() * BYTES_IN_MB)).\n        td().a(url(\"nodes\"),String.valueOf(clusterMetrics.getActiveNodes()))._().\n        td().a(url(\"nodes/decommissioned\"),String.valueOf(clusterMetrics.getDecommissionedNodes()))._().\n        td().a(url(\"nodes/lost\"),String.valueOf(clusterMetrics.getLostNodes()))._().\n        td().a(url(\"nodes/unhealthy\"),String.valueOf(clusterMetrics.getUnhealthyNodes()))._().\n        td().a(url(\"nodes/rebooted\"),String.valueOf(clusterMetrics.getRebootedNodes()))._().\n      _().\n    _()._();\n    \n    String user \u003d request().getRemoteUser();\n    if (user !\u003d null) {\n      UserMetricsInfo userMetrics \u003d new UserMetricsInfo(this.rm, this.rmContext, user);\n      if (userMetrics.metricsAvailable()) {\n        div.h3(\"User Metrics for \" + user).\n        table(\"#usermetricsoverview\").\n        thead().$class(\"ui-widget-header\").\n          tr().\n            th().$class(\"ui-state-default\")._(\"Apps Submitted\")._().\n            th().$class(\"ui-state-default\")._(\"Apps Pending\")._().\n            th().$class(\"ui-state-default\")._(\"Apps Running\")._().\n            th().$class(\"ui-state-default\")._(\"Apps Completed\")._().\n            th().$class(\"ui-state-default\")._(\"Containers Running\")._().\n            th().$class(\"ui-state-default\")._(\"Containers Pending\")._().\n            th().$class(\"ui-state-default\")._(\"Containers Reserved\")._().\n            th().$class(\"ui-state-default\")._(\"Memory Used\")._().\n            th().$class(\"ui-state-default\")._(\"Memory Pending\")._().\n            th().$class(\"ui-state-default\")._(\"Memory Reserved\")._().\n          _().\n        _().\n        tbody().$class(\"ui-widget-content\").\n          tr().\n            td(String.valueOf(userMetrics.getAppsSubmitted())).\n            td(String.valueOf(userMetrics.getAppsPending())).\n            td(String.valueOf(userMetrics.getAppsRunning())).\n            td(\n                String.valueOf(\n                    (userMetrics.getAppsCompleted() + \n                     userMetrics.getAppsFailed() + userMetrics.getAppsKilled())\n                    )\n              ).\n            td(String.valueOf(userMetrics.getRunningContainers())).\n            td(String.valueOf(userMetrics.getPendingContainers())).\n            td(String.valueOf(userMetrics.getReservedContainers())).\n            td(StringUtils.byteDesc(userMetrics.getAllocatedMB() * BYTES_IN_MB)).\n            td(StringUtils.byteDesc(userMetrics.getPendingMB() * BYTES_IN_MB)).\n            td(StringUtils.byteDesc(userMetrics.getReservedMB() * BYTES_IN_MB)).\n          _().\n        _()._();\n        \n      }\n    }\n\n    div._();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/MetricsOverviewTable.java",
      "extendedDetails": {}
    },
    "3cdc100369ce920701fdddae12d7f7247332b3f3": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3360. Added information about lost/rebooted/decommissioned nodes on the webapps. Contributed by Bhallamudi Venkata Siva Kamesh and Jason Lowe.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1236433 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "26/01/12 2:56 PM",
      "commitName": "3cdc100369ce920701fdddae12d7f7247332b3f3",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "13/12/11 3:05 PM",
      "commitNameOld": "0ea8570be578be60e2f32849900a1c50506d78d3",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 43.99,
      "commitsBetweenForRepo": 201,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,72 +1,72 @@\n   protected void render(Block html) {\n     //Yes this is a hack, but there is no other way to insert\n     //CSS in the correct spot\n     html.style(\".metrics {margin-bottom:5px}\"); \n     \n     ClusterMetricsInfo clusterMetrics \u003d new ClusterMetricsInfo(this.rm, this.rmContext);\n \n     \n     DIV\u003cHamlet\u003e div \u003d html.div().$class(\"metrics\");\n     \n     div.table(\"#metricsoverview\").\n     thead().$class(\"ui-widget-header\").\n       tr().\n         th().$class(\"ui-state-default\")._(\"Apps Submitted\")._().\n         th().$class(\"ui-state-default\")._(\"Containers Running\")._().\n         th().$class(\"ui-state-default\")._(\"Memory Used\")._().\n         th().$class(\"ui-state-default\")._(\"Memory Total\")._().\n         th().$class(\"ui-state-default\")._(\"Memory Reserved\")._().\n-        th().$class(\"ui-state-default\")._(\"Total Nodes\")._().\n+        th().$class(\"ui-state-default\")._(\"Active Nodes\")._().\n         th().$class(\"ui-state-default\")._(\"Decommissioned Nodes\")._().\n         th().$class(\"ui-state-default\")._(\"Lost Nodes\")._().\n         th().$class(\"ui-state-default\")._(\"Unhealthy Nodes\")._().\n         th().$class(\"ui-state-default\")._(\"Rebooted Nodes\")._().\n       _().\n     _().\n     tbody().$class(\"ui-widget-content\").\n       tr().\n         td(String.valueOf(clusterMetrics.getAppsSubmitted())).\n         td(String.valueOf(clusterMetrics.getContainersAllocated())).\n         td(StringUtils.byteDesc(clusterMetrics.getAllocatedMB() * BYTES_IN_MB)).\n         td(StringUtils.byteDesc(clusterMetrics.getTotalMB() * BYTES_IN_MB)).\n         td(StringUtils.byteDesc(clusterMetrics.getReservedMB() * BYTES_IN_MB)).\n-        td().a(url(\"nodes\"),String.valueOf(clusterMetrics.getTotalNodes()))._().\n+        td().a(url(\"nodes\"),String.valueOf(clusterMetrics.getActiveNodes()))._().\n         td().a(url(\"nodes/decommissioned\"),String.valueOf(clusterMetrics.getDecommissionedNodes()))._().\n         td().a(url(\"nodes/lost\"),String.valueOf(clusterMetrics.getLostNodes()))._().\n         td().a(url(\"nodes/unhealthy\"),String.valueOf(clusterMetrics.getUnhealthyNodes()))._().\n         td().a(url(\"nodes/rebooted\"),String.valueOf(clusterMetrics.getRebootedNodes()))._().\n       _().\n     _()._();\n \n     String user \u003d request().getRemoteUser();\n     if (user !\u003d null) {\n       UserMetricsInfo userMetrics \u003d new UserMetricsInfo(this.rm, this.rmContext, user);\n       if (userMetrics.metricsAvailable()) {\n         div.table(\"#usermetricsoverview\").\n         thead().$class(\"ui-widget-header\").\n           tr().\n             th().$class(\"ui-state-default\")._(\"Apps Submitted (\"+user+\")\")._().\n             th().$class(\"ui-state-default\")._(\"Containers Running (\"+user+\")\")._().\n             th().$class(\"ui-state-default\")._(\"Containers Pending (\"+user+\")\")._().\n             th().$class(\"ui-state-default\")._(\"Containers Reserved (\"+user+\")\")._().\n             th().$class(\"ui-state-default\")._(\"Memory Used (\"+user+\")\")._().\n             th().$class(\"ui-state-default\")._(\"Memory Pending (\"+user+\")\")._().\n             th().$class(\"ui-state-default\")._(\"Memory Reserved (\"+user+\")\")._().\n           _().\n         _().\n         tbody().$class(\"ui-widget-content\").\n           tr().\n             td(String.valueOf(userMetrics.getAppsSubmitted())).\n             td(String.valueOf(userMetrics.getRunningContainers())).\n             td(String.valueOf(userMetrics.getPendingContainers())).\n             td(String.valueOf(userMetrics.getReservedContainers())).\n             td(StringUtils.byteDesc(userMetrics.getAllocatedMB() * BYTES_IN_MB)).\n             td(StringUtils.byteDesc(userMetrics.getPendingMB() * BYTES_IN_MB)).\n             td(StringUtils.byteDesc(userMetrics.getReservedMB() * BYTES_IN_MB)).\n           _().\n         _()._();\n       }\n     }\n \n     div._();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void render(Block html) {\n    //Yes this is a hack, but there is no other way to insert\n    //CSS in the correct spot\n    html.style(\".metrics {margin-bottom:5px}\"); \n    \n    ClusterMetricsInfo clusterMetrics \u003d new ClusterMetricsInfo(this.rm, this.rmContext);\n\n    \n    DIV\u003cHamlet\u003e div \u003d html.div().$class(\"metrics\");\n    \n    div.table(\"#metricsoverview\").\n    thead().$class(\"ui-widget-header\").\n      tr().\n        th().$class(\"ui-state-default\")._(\"Apps Submitted\")._().\n        th().$class(\"ui-state-default\")._(\"Containers Running\")._().\n        th().$class(\"ui-state-default\")._(\"Memory Used\")._().\n        th().$class(\"ui-state-default\")._(\"Memory Total\")._().\n        th().$class(\"ui-state-default\")._(\"Memory Reserved\")._().\n        th().$class(\"ui-state-default\")._(\"Active Nodes\")._().\n        th().$class(\"ui-state-default\")._(\"Decommissioned Nodes\")._().\n        th().$class(\"ui-state-default\")._(\"Lost Nodes\")._().\n        th().$class(\"ui-state-default\")._(\"Unhealthy Nodes\")._().\n        th().$class(\"ui-state-default\")._(\"Rebooted Nodes\")._().\n      _().\n    _().\n    tbody().$class(\"ui-widget-content\").\n      tr().\n        td(String.valueOf(clusterMetrics.getAppsSubmitted())).\n        td(String.valueOf(clusterMetrics.getContainersAllocated())).\n        td(StringUtils.byteDesc(clusterMetrics.getAllocatedMB() * BYTES_IN_MB)).\n        td(StringUtils.byteDesc(clusterMetrics.getTotalMB() * BYTES_IN_MB)).\n        td(StringUtils.byteDesc(clusterMetrics.getReservedMB() * BYTES_IN_MB)).\n        td().a(url(\"nodes\"),String.valueOf(clusterMetrics.getActiveNodes()))._().\n        td().a(url(\"nodes/decommissioned\"),String.valueOf(clusterMetrics.getDecommissionedNodes()))._().\n        td().a(url(\"nodes/lost\"),String.valueOf(clusterMetrics.getLostNodes()))._().\n        td().a(url(\"nodes/unhealthy\"),String.valueOf(clusterMetrics.getUnhealthyNodes()))._().\n        td().a(url(\"nodes/rebooted\"),String.valueOf(clusterMetrics.getRebootedNodes()))._().\n      _().\n    _()._();\n\n    String user \u003d request().getRemoteUser();\n    if (user !\u003d null) {\n      UserMetricsInfo userMetrics \u003d new UserMetricsInfo(this.rm, this.rmContext, user);\n      if (userMetrics.metricsAvailable()) {\n        div.table(\"#usermetricsoverview\").\n        thead().$class(\"ui-widget-header\").\n          tr().\n            th().$class(\"ui-state-default\")._(\"Apps Submitted (\"+user+\")\")._().\n            th().$class(\"ui-state-default\")._(\"Containers Running (\"+user+\")\")._().\n            th().$class(\"ui-state-default\")._(\"Containers Pending (\"+user+\")\")._().\n            th().$class(\"ui-state-default\")._(\"Containers Reserved (\"+user+\")\")._().\n            th().$class(\"ui-state-default\")._(\"Memory Used (\"+user+\")\")._().\n            th().$class(\"ui-state-default\")._(\"Memory Pending (\"+user+\")\")._().\n            th().$class(\"ui-state-default\")._(\"Memory Reserved (\"+user+\")\")._().\n          _().\n        _().\n        tbody().$class(\"ui-widget-content\").\n          tr().\n            td(String.valueOf(userMetrics.getAppsSubmitted())).\n            td(String.valueOf(userMetrics.getRunningContainers())).\n            td(String.valueOf(userMetrics.getPendingContainers())).\n            td(String.valueOf(userMetrics.getReservedContainers())).\n            td(StringUtils.byteDesc(userMetrics.getAllocatedMB() * BYTES_IN_MB)).\n            td(StringUtils.byteDesc(userMetrics.getPendingMB() * BYTES_IN_MB)).\n            td(StringUtils.byteDesc(userMetrics.getReservedMB() * BYTES_IN_MB)).\n          _().\n        _()._();\n      }\n    }\n\n    div._();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/MetricsOverviewTable.java",
      "extendedDetails": {}
    },
    "0ea8570be578be60e2f32849900a1c50506d78d3": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2863. Support web services for YARN and MR components. (Thomas Graves via vinodkv)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1213975 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/12/11 3:05 PM",
      "commitName": "0ea8570be578be60e2f32849900a1c50506d78d3",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "08/12/11 5:58 PM",
      "commitNameOld": "066cddb44e1f8dac3fdef36ee04d593f44078292",
      "commitAuthorOld": "Mahadev Konar",
      "daysBetweenCommits": 4.88,
      "commitsBetweenForRepo": 36,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,94 +1,72 @@\n   protected void render(Block html) {\n     //Yes this is a hack, but there is no other way to insert\n     //CSS in the correct spot\n     html.style(\".metrics {margin-bottom:5px}\"); \n     \n-    ResourceScheduler rs \u003d rm.getResourceScheduler();\n-    QueueMetrics metrics \u003d rs.getRootQueueMetrics();\n-    ClusterMetrics clusterMetrics \u003d ClusterMetrics.getMetrics();\n-    \n-    int appsSubmitted \u003d metrics.getAppsSubmitted();\n-    int reservedGB \u003d metrics.getReservedGB();\n-    int availableGB \u003d metrics.getAvailableGB();\n-    int allocatedGB \u003d metrics.getAllocatedGB();\n-    int containersAllocated \u003d metrics.getAllocatedContainers();\n-    int totalGB \u003d availableGB + reservedGB + allocatedGB;\n-\n-    int totalNodes \u003d clusterMetrics.getNumNMs();\n-    int lostNodes \u003d clusterMetrics.getNumLostNMs();\n-    int unhealthyNodes \u003d clusterMetrics.getUnhealthyNMs();\n-    int decommissionedNodes \u003d clusterMetrics.getNumDecommisionedNMs();\n-    int rebootedNodes \u003d clusterMetrics.getNumRebootedNMs();\n+    ClusterMetricsInfo clusterMetrics \u003d new ClusterMetricsInfo(this.rm, this.rmContext);\n \n     \n     DIV\u003cHamlet\u003e div \u003d html.div().$class(\"metrics\");\n     \n     div.table(\"#metricsoverview\").\n     thead().$class(\"ui-widget-header\").\n       tr().\n         th().$class(\"ui-state-default\")._(\"Apps Submitted\")._().\n         th().$class(\"ui-state-default\")._(\"Containers Running\")._().\n         th().$class(\"ui-state-default\")._(\"Memory Used\")._().\n         th().$class(\"ui-state-default\")._(\"Memory Total\")._().\n         th().$class(\"ui-state-default\")._(\"Memory Reserved\")._().\n         th().$class(\"ui-state-default\")._(\"Total Nodes\")._().\n         th().$class(\"ui-state-default\")._(\"Decommissioned Nodes\")._().\n         th().$class(\"ui-state-default\")._(\"Lost Nodes\")._().\n         th().$class(\"ui-state-default\")._(\"Unhealthy Nodes\")._().\n         th().$class(\"ui-state-default\")._(\"Rebooted Nodes\")._().\n       _().\n     _().\n     tbody().$class(\"ui-widget-content\").\n       tr().\n-        td(String.valueOf(appsSubmitted)).\n-        td(String.valueOf(containersAllocated)).\n-        td(StringUtils.byteDesc(allocatedGB * BYTES_IN_GB)).\n-        td(StringUtils.byteDesc(totalGB * BYTES_IN_GB)).\n-        td(StringUtils.byteDesc(reservedGB * BYTES_IN_GB)).\n-        td().a(url(\"nodes\"),String.valueOf(totalNodes))._(). \n-        td().a(url(\"nodes/decommissioned\"),String.valueOf(decommissionedNodes))._(). \n-        td().a(url(\"nodes/lost\"),String.valueOf(lostNodes))._().\n-        td().a(url(\"nodes/unhealthy\"),String.valueOf(unhealthyNodes))._().\n-        td().a(url(\"nodes/rebooted\"),String.valueOf(rebootedNodes))._().\n+        td(String.valueOf(clusterMetrics.getAppsSubmitted())).\n+        td(String.valueOf(clusterMetrics.getContainersAllocated())).\n+        td(StringUtils.byteDesc(clusterMetrics.getAllocatedMB() * BYTES_IN_MB)).\n+        td(StringUtils.byteDesc(clusterMetrics.getTotalMB() * BYTES_IN_MB)).\n+        td(StringUtils.byteDesc(clusterMetrics.getReservedMB() * BYTES_IN_MB)).\n+        td().a(url(\"nodes\"),String.valueOf(clusterMetrics.getTotalNodes()))._().\n+        td().a(url(\"nodes/decommissioned\"),String.valueOf(clusterMetrics.getDecommissionedNodes()))._().\n+        td().a(url(\"nodes/lost\"),String.valueOf(clusterMetrics.getLostNodes()))._().\n+        td().a(url(\"nodes/unhealthy\"),String.valueOf(clusterMetrics.getUnhealthyNodes()))._().\n+        td().a(url(\"nodes/rebooted\"),String.valueOf(clusterMetrics.getRebootedNodes()))._().\n       _().\n     _()._();\n-    \n+\n     String user \u003d request().getRemoteUser();\n     if (user !\u003d null) {\n-      QueueMetrics userMetrics \u003d metrics.getUserMetrics(user);\n-      if(userMetrics !\u003d null) {\n-        int myAppsSubmitted \u003d userMetrics.getAppsSubmitted();\n-        int myRunningContainers \u003d userMetrics.getAllocatedContainers();\n-        int myPendingContainers \u003d userMetrics.getPendingContainers();\n-        int myReservedContainers \u003d userMetrics.getReservedContainers();\n-        int myReservedGB \u003d userMetrics.getReservedGB();\n-        int myPendingGB \u003d userMetrics.getPendingGB();\n-        int myAllocatedGB \u003d userMetrics.getAllocatedGB();\n+      UserMetricsInfo userMetrics \u003d new UserMetricsInfo(this.rm, this.rmContext, user);\n+      if (userMetrics.metricsAvailable()) {\n         div.table(\"#usermetricsoverview\").\n         thead().$class(\"ui-widget-header\").\n           tr().\n             th().$class(\"ui-state-default\")._(\"Apps Submitted (\"+user+\")\")._().\n             th().$class(\"ui-state-default\")._(\"Containers Running (\"+user+\")\")._().\n             th().$class(\"ui-state-default\")._(\"Containers Pending (\"+user+\")\")._().\n             th().$class(\"ui-state-default\")._(\"Containers Reserved (\"+user+\")\")._().\n             th().$class(\"ui-state-default\")._(\"Memory Used (\"+user+\")\")._().\n             th().$class(\"ui-state-default\")._(\"Memory Pending (\"+user+\")\")._().\n             th().$class(\"ui-state-default\")._(\"Memory Reserved (\"+user+\")\")._().\n           _().\n         _().\n         tbody().$class(\"ui-widget-content\").\n           tr().\n-            td(String.valueOf(myAppsSubmitted)).\n-            td(String.valueOf(myRunningContainers)).\n-            td(String.valueOf(myPendingContainers)).\n-            td(String.valueOf(myReservedContainers)).\n-            td(StringUtils.byteDesc(myAllocatedGB * BYTES_IN_GB)).\n-            td(StringUtils.byteDesc(myPendingGB * BYTES_IN_GB)).\n-            td(StringUtils.byteDesc(myReservedGB * BYTES_IN_GB)).\n+            td(String.valueOf(userMetrics.getAppsSubmitted())).\n+            td(String.valueOf(userMetrics.getRunningContainers())).\n+            td(String.valueOf(userMetrics.getPendingContainers())).\n+            td(String.valueOf(userMetrics.getReservedContainers())).\n+            td(StringUtils.byteDesc(userMetrics.getAllocatedMB() * BYTES_IN_MB)).\n+            td(StringUtils.byteDesc(userMetrics.getPendingMB() * BYTES_IN_MB)).\n+            td(StringUtils.byteDesc(userMetrics.getReservedMB() * BYTES_IN_MB)).\n           _().\n         _()._();\n       }\n     }\n \n     div._();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void render(Block html) {\n    //Yes this is a hack, but there is no other way to insert\n    //CSS in the correct spot\n    html.style(\".metrics {margin-bottom:5px}\"); \n    \n    ClusterMetricsInfo clusterMetrics \u003d new ClusterMetricsInfo(this.rm, this.rmContext);\n\n    \n    DIV\u003cHamlet\u003e div \u003d html.div().$class(\"metrics\");\n    \n    div.table(\"#metricsoverview\").\n    thead().$class(\"ui-widget-header\").\n      tr().\n        th().$class(\"ui-state-default\")._(\"Apps Submitted\")._().\n        th().$class(\"ui-state-default\")._(\"Containers Running\")._().\n        th().$class(\"ui-state-default\")._(\"Memory Used\")._().\n        th().$class(\"ui-state-default\")._(\"Memory Total\")._().\n        th().$class(\"ui-state-default\")._(\"Memory Reserved\")._().\n        th().$class(\"ui-state-default\")._(\"Total Nodes\")._().\n        th().$class(\"ui-state-default\")._(\"Decommissioned Nodes\")._().\n        th().$class(\"ui-state-default\")._(\"Lost Nodes\")._().\n        th().$class(\"ui-state-default\")._(\"Unhealthy Nodes\")._().\n        th().$class(\"ui-state-default\")._(\"Rebooted Nodes\")._().\n      _().\n    _().\n    tbody().$class(\"ui-widget-content\").\n      tr().\n        td(String.valueOf(clusterMetrics.getAppsSubmitted())).\n        td(String.valueOf(clusterMetrics.getContainersAllocated())).\n        td(StringUtils.byteDesc(clusterMetrics.getAllocatedMB() * BYTES_IN_MB)).\n        td(StringUtils.byteDesc(clusterMetrics.getTotalMB() * BYTES_IN_MB)).\n        td(StringUtils.byteDesc(clusterMetrics.getReservedMB() * BYTES_IN_MB)).\n        td().a(url(\"nodes\"),String.valueOf(clusterMetrics.getTotalNodes()))._().\n        td().a(url(\"nodes/decommissioned\"),String.valueOf(clusterMetrics.getDecommissionedNodes()))._().\n        td().a(url(\"nodes/lost\"),String.valueOf(clusterMetrics.getLostNodes()))._().\n        td().a(url(\"nodes/unhealthy\"),String.valueOf(clusterMetrics.getUnhealthyNodes()))._().\n        td().a(url(\"nodes/rebooted\"),String.valueOf(clusterMetrics.getRebootedNodes()))._().\n      _().\n    _()._();\n\n    String user \u003d request().getRemoteUser();\n    if (user !\u003d null) {\n      UserMetricsInfo userMetrics \u003d new UserMetricsInfo(this.rm, this.rmContext, user);\n      if (userMetrics.metricsAvailable()) {\n        div.table(\"#usermetricsoverview\").\n        thead().$class(\"ui-widget-header\").\n          tr().\n            th().$class(\"ui-state-default\")._(\"Apps Submitted (\"+user+\")\")._().\n            th().$class(\"ui-state-default\")._(\"Containers Running (\"+user+\")\")._().\n            th().$class(\"ui-state-default\")._(\"Containers Pending (\"+user+\")\")._().\n            th().$class(\"ui-state-default\")._(\"Containers Reserved (\"+user+\")\")._().\n            th().$class(\"ui-state-default\")._(\"Memory Used (\"+user+\")\")._().\n            th().$class(\"ui-state-default\")._(\"Memory Pending (\"+user+\")\")._().\n            th().$class(\"ui-state-default\")._(\"Memory Reserved (\"+user+\")\")._().\n          _().\n        _().\n        tbody().$class(\"ui-widget-content\").\n          tr().\n            td(String.valueOf(userMetrics.getAppsSubmitted())).\n            td(String.valueOf(userMetrics.getRunningContainers())).\n            td(String.valueOf(userMetrics.getPendingContainers())).\n            td(String.valueOf(userMetrics.getReservedContainers())).\n            td(StringUtils.byteDesc(userMetrics.getAllocatedMB() * BYTES_IN_MB)).\n            td(StringUtils.byteDesc(userMetrics.getPendingMB() * BYTES_IN_MB)).\n            td(StringUtils.byteDesc(userMetrics.getReservedMB() * BYTES_IN_MB)).\n          _().\n        _()._();\n      }\n    }\n\n    div._();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/MetricsOverviewTable.java",
      "extendedDetails": {}
    },
    "066cddb44e1f8dac3fdef36ee04d593f44078292": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3513. Capacity Scheduler web UI has a spelling mistake for Memory. (chackaravarthy via mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1212215 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/12/11 5:58 PM",
      "commitName": "066cddb44e1f8dac3fdef36ee04d593f44078292",
      "commitAuthor": "Mahadev Konar",
      "commitDateOld": "28/10/11 10:31 AM",
      "commitNameOld": "cbdb07f4ca358b9507296868a913977ad82ed716",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 41.35,
      "commitsBetweenForRepo": 234,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,94 +1,94 @@\n   protected void render(Block html) {\n     //Yes this is a hack, but there is no other way to insert\n     //CSS in the correct spot\n     html.style(\".metrics {margin-bottom:5px}\"); \n     \n     ResourceScheduler rs \u003d rm.getResourceScheduler();\n     QueueMetrics metrics \u003d rs.getRootQueueMetrics();\n     ClusterMetrics clusterMetrics \u003d ClusterMetrics.getMetrics();\n     \n     int appsSubmitted \u003d metrics.getAppsSubmitted();\n     int reservedGB \u003d metrics.getReservedGB();\n     int availableGB \u003d metrics.getAvailableGB();\n     int allocatedGB \u003d metrics.getAllocatedGB();\n     int containersAllocated \u003d metrics.getAllocatedContainers();\n     int totalGB \u003d availableGB + reservedGB + allocatedGB;\n \n     int totalNodes \u003d clusterMetrics.getNumNMs();\n     int lostNodes \u003d clusterMetrics.getNumLostNMs();\n     int unhealthyNodes \u003d clusterMetrics.getUnhealthyNMs();\n     int decommissionedNodes \u003d clusterMetrics.getNumDecommisionedNMs();\n     int rebootedNodes \u003d clusterMetrics.getNumRebootedNMs();\n \n     \n     DIV\u003cHamlet\u003e div \u003d html.div().$class(\"metrics\");\n     \n     div.table(\"#metricsoverview\").\n     thead().$class(\"ui-widget-header\").\n       tr().\n         th().$class(\"ui-state-default\")._(\"Apps Submitted\")._().\n         th().$class(\"ui-state-default\")._(\"Containers Running\")._().\n         th().$class(\"ui-state-default\")._(\"Memory Used\")._().\n-        th().$class(\"ui-state-default\")._(\"Memopry Total\")._().\n+        th().$class(\"ui-state-default\")._(\"Memory Total\")._().\n         th().$class(\"ui-state-default\")._(\"Memory Reserved\")._().\n         th().$class(\"ui-state-default\")._(\"Total Nodes\")._().\n         th().$class(\"ui-state-default\")._(\"Decommissioned Nodes\")._().\n         th().$class(\"ui-state-default\")._(\"Lost Nodes\")._().\n         th().$class(\"ui-state-default\")._(\"Unhealthy Nodes\")._().\n         th().$class(\"ui-state-default\")._(\"Rebooted Nodes\")._().\n       _().\n     _().\n     tbody().$class(\"ui-widget-content\").\n       tr().\n         td(String.valueOf(appsSubmitted)).\n         td(String.valueOf(containersAllocated)).\n         td(StringUtils.byteDesc(allocatedGB * BYTES_IN_GB)).\n         td(StringUtils.byteDesc(totalGB * BYTES_IN_GB)).\n         td(StringUtils.byteDesc(reservedGB * BYTES_IN_GB)).\n         td().a(url(\"nodes\"),String.valueOf(totalNodes))._(). \n         td().a(url(\"nodes/decommissioned\"),String.valueOf(decommissionedNodes))._(). \n         td().a(url(\"nodes/lost\"),String.valueOf(lostNodes))._().\n         td().a(url(\"nodes/unhealthy\"),String.valueOf(unhealthyNodes))._().\n         td().a(url(\"nodes/rebooted\"),String.valueOf(rebootedNodes))._().\n       _().\n     _()._();\n     \n     String user \u003d request().getRemoteUser();\n     if (user !\u003d null) {\n       QueueMetrics userMetrics \u003d metrics.getUserMetrics(user);\n       if(userMetrics !\u003d null) {\n         int myAppsSubmitted \u003d userMetrics.getAppsSubmitted();\n         int myRunningContainers \u003d userMetrics.getAllocatedContainers();\n         int myPendingContainers \u003d userMetrics.getPendingContainers();\n         int myReservedContainers \u003d userMetrics.getReservedContainers();\n         int myReservedGB \u003d userMetrics.getReservedGB();\n         int myPendingGB \u003d userMetrics.getPendingGB();\n         int myAllocatedGB \u003d userMetrics.getAllocatedGB();\n         div.table(\"#usermetricsoverview\").\n         thead().$class(\"ui-widget-header\").\n           tr().\n             th().$class(\"ui-state-default\")._(\"Apps Submitted (\"+user+\")\")._().\n             th().$class(\"ui-state-default\")._(\"Containers Running (\"+user+\")\")._().\n             th().$class(\"ui-state-default\")._(\"Containers Pending (\"+user+\")\")._().\n             th().$class(\"ui-state-default\")._(\"Containers Reserved (\"+user+\")\")._().\n             th().$class(\"ui-state-default\")._(\"Memory Used (\"+user+\")\")._().\n             th().$class(\"ui-state-default\")._(\"Memory Pending (\"+user+\")\")._().\n             th().$class(\"ui-state-default\")._(\"Memory Reserved (\"+user+\")\")._().\n           _().\n         _().\n         tbody().$class(\"ui-widget-content\").\n           tr().\n             td(String.valueOf(myAppsSubmitted)).\n             td(String.valueOf(myRunningContainers)).\n             td(String.valueOf(myPendingContainers)).\n             td(String.valueOf(myReservedContainers)).\n             td(StringUtils.byteDesc(myAllocatedGB * BYTES_IN_GB)).\n             td(StringUtils.byteDesc(myPendingGB * BYTES_IN_GB)).\n             td(StringUtils.byteDesc(myReservedGB * BYTES_IN_GB)).\n           _().\n         _()._();\n       }\n     }\n \n     div._();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void render(Block html) {\n    //Yes this is a hack, but there is no other way to insert\n    //CSS in the correct spot\n    html.style(\".metrics {margin-bottom:5px}\"); \n    \n    ResourceScheduler rs \u003d rm.getResourceScheduler();\n    QueueMetrics metrics \u003d rs.getRootQueueMetrics();\n    ClusterMetrics clusterMetrics \u003d ClusterMetrics.getMetrics();\n    \n    int appsSubmitted \u003d metrics.getAppsSubmitted();\n    int reservedGB \u003d metrics.getReservedGB();\n    int availableGB \u003d metrics.getAvailableGB();\n    int allocatedGB \u003d metrics.getAllocatedGB();\n    int containersAllocated \u003d metrics.getAllocatedContainers();\n    int totalGB \u003d availableGB + reservedGB + allocatedGB;\n\n    int totalNodes \u003d clusterMetrics.getNumNMs();\n    int lostNodes \u003d clusterMetrics.getNumLostNMs();\n    int unhealthyNodes \u003d clusterMetrics.getUnhealthyNMs();\n    int decommissionedNodes \u003d clusterMetrics.getNumDecommisionedNMs();\n    int rebootedNodes \u003d clusterMetrics.getNumRebootedNMs();\n\n    \n    DIV\u003cHamlet\u003e div \u003d html.div().$class(\"metrics\");\n    \n    div.table(\"#metricsoverview\").\n    thead().$class(\"ui-widget-header\").\n      tr().\n        th().$class(\"ui-state-default\")._(\"Apps Submitted\")._().\n        th().$class(\"ui-state-default\")._(\"Containers Running\")._().\n        th().$class(\"ui-state-default\")._(\"Memory Used\")._().\n        th().$class(\"ui-state-default\")._(\"Memory Total\")._().\n        th().$class(\"ui-state-default\")._(\"Memory Reserved\")._().\n        th().$class(\"ui-state-default\")._(\"Total Nodes\")._().\n        th().$class(\"ui-state-default\")._(\"Decommissioned Nodes\")._().\n        th().$class(\"ui-state-default\")._(\"Lost Nodes\")._().\n        th().$class(\"ui-state-default\")._(\"Unhealthy Nodes\")._().\n        th().$class(\"ui-state-default\")._(\"Rebooted Nodes\")._().\n      _().\n    _().\n    tbody().$class(\"ui-widget-content\").\n      tr().\n        td(String.valueOf(appsSubmitted)).\n        td(String.valueOf(containersAllocated)).\n        td(StringUtils.byteDesc(allocatedGB * BYTES_IN_GB)).\n        td(StringUtils.byteDesc(totalGB * BYTES_IN_GB)).\n        td(StringUtils.byteDesc(reservedGB * BYTES_IN_GB)).\n        td().a(url(\"nodes\"),String.valueOf(totalNodes))._(). \n        td().a(url(\"nodes/decommissioned\"),String.valueOf(decommissionedNodes))._(). \n        td().a(url(\"nodes/lost\"),String.valueOf(lostNodes))._().\n        td().a(url(\"nodes/unhealthy\"),String.valueOf(unhealthyNodes))._().\n        td().a(url(\"nodes/rebooted\"),String.valueOf(rebootedNodes))._().\n      _().\n    _()._();\n    \n    String user \u003d request().getRemoteUser();\n    if (user !\u003d null) {\n      QueueMetrics userMetrics \u003d metrics.getUserMetrics(user);\n      if(userMetrics !\u003d null) {\n        int myAppsSubmitted \u003d userMetrics.getAppsSubmitted();\n        int myRunningContainers \u003d userMetrics.getAllocatedContainers();\n        int myPendingContainers \u003d userMetrics.getPendingContainers();\n        int myReservedContainers \u003d userMetrics.getReservedContainers();\n        int myReservedGB \u003d userMetrics.getReservedGB();\n        int myPendingGB \u003d userMetrics.getPendingGB();\n        int myAllocatedGB \u003d userMetrics.getAllocatedGB();\n        div.table(\"#usermetricsoverview\").\n        thead().$class(\"ui-widget-header\").\n          tr().\n            th().$class(\"ui-state-default\")._(\"Apps Submitted (\"+user+\")\")._().\n            th().$class(\"ui-state-default\")._(\"Containers Running (\"+user+\")\")._().\n            th().$class(\"ui-state-default\")._(\"Containers Pending (\"+user+\")\")._().\n            th().$class(\"ui-state-default\")._(\"Containers Reserved (\"+user+\")\")._().\n            th().$class(\"ui-state-default\")._(\"Memory Used (\"+user+\")\")._().\n            th().$class(\"ui-state-default\")._(\"Memory Pending (\"+user+\")\")._().\n            th().$class(\"ui-state-default\")._(\"Memory Reserved (\"+user+\")\")._().\n          _().\n        _().\n        tbody().$class(\"ui-widget-content\").\n          tr().\n            td(String.valueOf(myAppsSubmitted)).\n            td(String.valueOf(myRunningContainers)).\n            td(String.valueOf(myPendingContainers)).\n            td(String.valueOf(myReservedContainers)).\n            td(StringUtils.byteDesc(myAllocatedGB * BYTES_IN_GB)).\n            td(StringUtils.byteDesc(myPendingGB * BYTES_IN_GB)).\n            td(StringUtils.byteDesc(myReservedGB * BYTES_IN_GB)).\n          _().\n        _()._();\n      }\n    }\n\n    div._();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/MetricsOverviewTable.java",
      "extendedDetails": {}
    },
    "cbdb07f4ca358b9507296868a913977ad82ed716": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2775. Fixed ResourceManager and NodeManager to force a decommissioned node to shutdown. Contributed by Devaraj K.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1190467 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/10/11 10:31 AM",
      "commitName": "cbdb07f4ca358b9507296868a913977ad82ed716",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "05/10/11 7:01 AM",
      "commitNameOld": "9a4e890f4aadc921fa468fd1292d215704429b61",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 23.15,
      "commitsBetweenForRepo": 213,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,108 +1,94 @@\n   protected void render(Block html) {\n     //Yes this is a hack, but there is no other way to insert\n     //CSS in the correct spot\n     html.style(\".metrics {margin-bottom:5px}\"); \n     \n     ResourceScheduler rs \u003d rm.getResourceScheduler();\n     QueueMetrics metrics \u003d rs.getRootQueueMetrics();\n+    ClusterMetrics clusterMetrics \u003d ClusterMetrics.getMetrics();\n     \n     int appsSubmitted \u003d metrics.getAppsSubmitted();\n     int reservedGB \u003d metrics.getReservedGB();\n     int availableGB \u003d metrics.getAvailableGB();\n     int allocatedGB \u003d metrics.getAllocatedGB();\n     int containersAllocated \u003d metrics.getAllocatedContainers();\n     int totalGB \u003d availableGB + reservedGB + allocatedGB;\n-    \n-    ConcurrentMap\u003cNodeId,RMNode\u003e nodes \u003d rmContext.getRMNodes();\n-    int totalNodes \u003d nodes.size();\n-    int lostNodes \u003d 0;\n-    int unhealthyNodes \u003d 0;\n-    int decommissionedNodes \u003d 0;\n-    for(RMNode node: nodes.values()) {\n-      if(node \u003d\u003d null || node.getState() \u003d\u003d null) {\n-        lostNodes++;\n-        continue;\n-      }\n-      switch(node.getState()) {\n-      case DECOMMISSIONED:\n-        decommissionedNodes++;\n-        break;\n-      case LOST:\n-        lostNodes++;\n-        break;\n-      case UNHEALTHY:\n-        unhealthyNodes++;\n-        break;\n-      //RUNNING noop\n-      }\n-    }\n+\n+    int totalNodes \u003d clusterMetrics.getNumNMs();\n+    int lostNodes \u003d clusterMetrics.getNumLostNMs();\n+    int unhealthyNodes \u003d clusterMetrics.getUnhealthyNMs();\n+    int decommissionedNodes \u003d clusterMetrics.getNumDecommisionedNMs();\n+    int rebootedNodes \u003d clusterMetrics.getNumRebootedNMs();\n+\n     \n     DIV\u003cHamlet\u003e div \u003d html.div().$class(\"metrics\");\n     \n     div.table(\"#metricsoverview\").\n     thead().$class(\"ui-widget-header\").\n       tr().\n         th().$class(\"ui-state-default\")._(\"Apps Submitted\")._().\n         th().$class(\"ui-state-default\")._(\"Containers Running\")._().\n         th().$class(\"ui-state-default\")._(\"Memory Used\")._().\n         th().$class(\"ui-state-default\")._(\"Memopry Total\")._().\n         th().$class(\"ui-state-default\")._(\"Memory Reserved\")._().\n         th().$class(\"ui-state-default\")._(\"Total Nodes\")._().\n         th().$class(\"ui-state-default\")._(\"Decommissioned Nodes\")._().\n         th().$class(\"ui-state-default\")._(\"Lost Nodes\")._().\n         th().$class(\"ui-state-default\")._(\"Unhealthy Nodes\")._().\n+        th().$class(\"ui-state-default\")._(\"Rebooted Nodes\")._().\n       _().\n     _().\n     tbody().$class(\"ui-widget-content\").\n       tr().\n         td(String.valueOf(appsSubmitted)).\n         td(String.valueOf(containersAllocated)).\n         td(StringUtils.byteDesc(allocatedGB * BYTES_IN_GB)).\n         td(StringUtils.byteDesc(totalGB * BYTES_IN_GB)).\n         td(StringUtils.byteDesc(reservedGB * BYTES_IN_GB)).\n         td().a(url(\"nodes\"),String.valueOf(totalNodes))._(). \n-        td().a(url(\"nodes/DECOMMISSIONED\"),String.valueOf(decommissionedNodes))._(). \n-        td().a(url(\"nodes/LOST\"),String.valueOf(lostNodes))._().\n-        td().a(url(\"nodes/UNHEALTHY\"),String.valueOf(unhealthyNodes))._().\n+        td().a(url(\"nodes/decommissioned\"),String.valueOf(decommissionedNodes))._(). \n+        td().a(url(\"nodes/lost\"),String.valueOf(lostNodes))._().\n+        td().a(url(\"nodes/unhealthy\"),String.valueOf(unhealthyNodes))._().\n+        td().a(url(\"nodes/rebooted\"),String.valueOf(rebootedNodes))._().\n       _().\n     _()._();\n     \n     String user \u003d request().getRemoteUser();\n     if (user !\u003d null) {\n       QueueMetrics userMetrics \u003d metrics.getUserMetrics(user);\n       if(userMetrics !\u003d null) {\n         int myAppsSubmitted \u003d userMetrics.getAppsSubmitted();\n         int myRunningContainers \u003d userMetrics.getAllocatedContainers();\n         int myPendingContainers \u003d userMetrics.getPendingContainers();\n         int myReservedContainers \u003d userMetrics.getReservedContainers();\n         int myReservedGB \u003d userMetrics.getReservedGB();\n         int myPendingGB \u003d userMetrics.getPendingGB();\n         int myAllocatedGB \u003d userMetrics.getAllocatedGB();\n         div.table(\"#usermetricsoverview\").\n         thead().$class(\"ui-widget-header\").\n           tr().\n             th().$class(\"ui-state-default\")._(\"Apps Submitted (\"+user+\")\")._().\n             th().$class(\"ui-state-default\")._(\"Containers Running (\"+user+\")\")._().\n             th().$class(\"ui-state-default\")._(\"Containers Pending (\"+user+\")\")._().\n             th().$class(\"ui-state-default\")._(\"Containers Reserved (\"+user+\")\")._().\n             th().$class(\"ui-state-default\")._(\"Memory Used (\"+user+\")\")._().\n             th().$class(\"ui-state-default\")._(\"Memory Pending (\"+user+\")\")._().\n             th().$class(\"ui-state-default\")._(\"Memory Reserved (\"+user+\")\")._().\n           _().\n         _().\n         tbody().$class(\"ui-widget-content\").\n           tr().\n             td(String.valueOf(myAppsSubmitted)).\n             td(String.valueOf(myRunningContainers)).\n             td(String.valueOf(myPendingContainers)).\n             td(String.valueOf(myReservedContainers)).\n             td(StringUtils.byteDesc(myAllocatedGB * BYTES_IN_GB)).\n             td(StringUtils.byteDesc(myPendingGB * BYTES_IN_GB)).\n             td(StringUtils.byteDesc(myReservedGB * BYTES_IN_GB)).\n           _().\n         _()._();\n       }\n     }\n \n     div._();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void render(Block html) {\n    //Yes this is a hack, but there is no other way to insert\n    //CSS in the correct spot\n    html.style(\".metrics {margin-bottom:5px}\"); \n    \n    ResourceScheduler rs \u003d rm.getResourceScheduler();\n    QueueMetrics metrics \u003d rs.getRootQueueMetrics();\n    ClusterMetrics clusterMetrics \u003d ClusterMetrics.getMetrics();\n    \n    int appsSubmitted \u003d metrics.getAppsSubmitted();\n    int reservedGB \u003d metrics.getReservedGB();\n    int availableGB \u003d metrics.getAvailableGB();\n    int allocatedGB \u003d metrics.getAllocatedGB();\n    int containersAllocated \u003d metrics.getAllocatedContainers();\n    int totalGB \u003d availableGB + reservedGB + allocatedGB;\n\n    int totalNodes \u003d clusterMetrics.getNumNMs();\n    int lostNodes \u003d clusterMetrics.getNumLostNMs();\n    int unhealthyNodes \u003d clusterMetrics.getUnhealthyNMs();\n    int decommissionedNodes \u003d clusterMetrics.getNumDecommisionedNMs();\n    int rebootedNodes \u003d clusterMetrics.getNumRebootedNMs();\n\n    \n    DIV\u003cHamlet\u003e div \u003d html.div().$class(\"metrics\");\n    \n    div.table(\"#metricsoverview\").\n    thead().$class(\"ui-widget-header\").\n      tr().\n        th().$class(\"ui-state-default\")._(\"Apps Submitted\")._().\n        th().$class(\"ui-state-default\")._(\"Containers Running\")._().\n        th().$class(\"ui-state-default\")._(\"Memory Used\")._().\n        th().$class(\"ui-state-default\")._(\"Memopry Total\")._().\n        th().$class(\"ui-state-default\")._(\"Memory Reserved\")._().\n        th().$class(\"ui-state-default\")._(\"Total Nodes\")._().\n        th().$class(\"ui-state-default\")._(\"Decommissioned Nodes\")._().\n        th().$class(\"ui-state-default\")._(\"Lost Nodes\")._().\n        th().$class(\"ui-state-default\")._(\"Unhealthy Nodes\")._().\n        th().$class(\"ui-state-default\")._(\"Rebooted Nodes\")._().\n      _().\n    _().\n    tbody().$class(\"ui-widget-content\").\n      tr().\n        td(String.valueOf(appsSubmitted)).\n        td(String.valueOf(containersAllocated)).\n        td(StringUtils.byteDesc(allocatedGB * BYTES_IN_GB)).\n        td(StringUtils.byteDesc(totalGB * BYTES_IN_GB)).\n        td(StringUtils.byteDesc(reservedGB * BYTES_IN_GB)).\n        td().a(url(\"nodes\"),String.valueOf(totalNodes))._(). \n        td().a(url(\"nodes/decommissioned\"),String.valueOf(decommissionedNodes))._(). \n        td().a(url(\"nodes/lost\"),String.valueOf(lostNodes))._().\n        td().a(url(\"nodes/unhealthy\"),String.valueOf(unhealthyNodes))._().\n        td().a(url(\"nodes/rebooted\"),String.valueOf(rebootedNodes))._().\n      _().\n    _()._();\n    \n    String user \u003d request().getRemoteUser();\n    if (user !\u003d null) {\n      QueueMetrics userMetrics \u003d metrics.getUserMetrics(user);\n      if(userMetrics !\u003d null) {\n        int myAppsSubmitted \u003d userMetrics.getAppsSubmitted();\n        int myRunningContainers \u003d userMetrics.getAllocatedContainers();\n        int myPendingContainers \u003d userMetrics.getPendingContainers();\n        int myReservedContainers \u003d userMetrics.getReservedContainers();\n        int myReservedGB \u003d userMetrics.getReservedGB();\n        int myPendingGB \u003d userMetrics.getPendingGB();\n        int myAllocatedGB \u003d userMetrics.getAllocatedGB();\n        div.table(\"#usermetricsoverview\").\n        thead().$class(\"ui-widget-header\").\n          tr().\n            th().$class(\"ui-state-default\")._(\"Apps Submitted (\"+user+\")\")._().\n            th().$class(\"ui-state-default\")._(\"Containers Running (\"+user+\")\")._().\n            th().$class(\"ui-state-default\")._(\"Containers Pending (\"+user+\")\")._().\n            th().$class(\"ui-state-default\")._(\"Containers Reserved (\"+user+\")\")._().\n            th().$class(\"ui-state-default\")._(\"Memory Used (\"+user+\")\")._().\n            th().$class(\"ui-state-default\")._(\"Memory Pending (\"+user+\")\")._().\n            th().$class(\"ui-state-default\")._(\"Memory Reserved (\"+user+\")\")._().\n          _().\n        _().\n        tbody().$class(\"ui-widget-content\").\n          tr().\n            td(String.valueOf(myAppsSubmitted)).\n            td(String.valueOf(myRunningContainers)).\n            td(String.valueOf(myPendingContainers)).\n            td(String.valueOf(myReservedContainers)).\n            td(StringUtils.byteDesc(myAllocatedGB * BYTES_IN_GB)).\n            td(StringUtils.byteDesc(myPendingGB * BYTES_IN_GB)).\n            td(StringUtils.byteDesc(myReservedGB * BYTES_IN_GB)).\n          _().\n        _()._();\n      }\n    }\n\n    div._();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/MetricsOverviewTable.java",
      "extendedDetails": {}
    },
    "9a4e890f4aadc921fa468fd1292d215704429b61": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-2738. Added the missing cluster level statisticss on the RM web UI. Contributed by Robert Joseph Evans.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1179229 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/10/11 7:01 AM",
      "commitName": "9a4e890f4aadc921fa468fd1292d215704429b61",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,108 @@\n+  protected void render(Block html) {\n+    //Yes this is a hack, but there is no other way to insert\n+    //CSS in the correct spot\n+    html.style(\".metrics {margin-bottom:5px}\"); \n+    \n+    ResourceScheduler rs \u003d rm.getResourceScheduler();\n+    QueueMetrics metrics \u003d rs.getRootQueueMetrics();\n+    \n+    int appsSubmitted \u003d metrics.getAppsSubmitted();\n+    int reservedGB \u003d metrics.getReservedGB();\n+    int availableGB \u003d metrics.getAvailableGB();\n+    int allocatedGB \u003d metrics.getAllocatedGB();\n+    int containersAllocated \u003d metrics.getAllocatedContainers();\n+    int totalGB \u003d availableGB + reservedGB + allocatedGB;\n+    \n+    ConcurrentMap\u003cNodeId,RMNode\u003e nodes \u003d rmContext.getRMNodes();\n+    int totalNodes \u003d nodes.size();\n+    int lostNodes \u003d 0;\n+    int unhealthyNodes \u003d 0;\n+    int decommissionedNodes \u003d 0;\n+    for(RMNode node: nodes.values()) {\n+      if(node \u003d\u003d null || node.getState() \u003d\u003d null) {\n+        lostNodes++;\n+        continue;\n+      }\n+      switch(node.getState()) {\n+      case DECOMMISSIONED:\n+        decommissionedNodes++;\n+        break;\n+      case LOST:\n+        lostNodes++;\n+        break;\n+      case UNHEALTHY:\n+        unhealthyNodes++;\n+        break;\n+      //RUNNING noop\n+      }\n+    }\n+    \n+    DIV\u003cHamlet\u003e div \u003d html.div().$class(\"metrics\");\n+    \n+    div.table(\"#metricsoverview\").\n+    thead().$class(\"ui-widget-header\").\n+      tr().\n+        th().$class(\"ui-state-default\")._(\"Apps Submitted\")._().\n+        th().$class(\"ui-state-default\")._(\"Containers Running\")._().\n+        th().$class(\"ui-state-default\")._(\"Memory Used\")._().\n+        th().$class(\"ui-state-default\")._(\"Memopry Total\")._().\n+        th().$class(\"ui-state-default\")._(\"Memory Reserved\")._().\n+        th().$class(\"ui-state-default\")._(\"Total Nodes\")._().\n+        th().$class(\"ui-state-default\")._(\"Decommissioned Nodes\")._().\n+        th().$class(\"ui-state-default\")._(\"Lost Nodes\")._().\n+        th().$class(\"ui-state-default\")._(\"Unhealthy Nodes\")._().\n+      _().\n+    _().\n+    tbody().$class(\"ui-widget-content\").\n+      tr().\n+        td(String.valueOf(appsSubmitted)).\n+        td(String.valueOf(containersAllocated)).\n+        td(StringUtils.byteDesc(allocatedGB * BYTES_IN_GB)).\n+        td(StringUtils.byteDesc(totalGB * BYTES_IN_GB)).\n+        td(StringUtils.byteDesc(reservedGB * BYTES_IN_GB)).\n+        td().a(url(\"nodes\"),String.valueOf(totalNodes))._(). \n+        td().a(url(\"nodes/DECOMMISSIONED\"),String.valueOf(decommissionedNodes))._(). \n+        td().a(url(\"nodes/LOST\"),String.valueOf(lostNodes))._().\n+        td().a(url(\"nodes/UNHEALTHY\"),String.valueOf(unhealthyNodes))._().\n+      _().\n+    _()._();\n+    \n+    String user \u003d request().getRemoteUser();\n+    if (user !\u003d null) {\n+      QueueMetrics userMetrics \u003d metrics.getUserMetrics(user);\n+      if(userMetrics !\u003d null) {\n+        int myAppsSubmitted \u003d userMetrics.getAppsSubmitted();\n+        int myRunningContainers \u003d userMetrics.getAllocatedContainers();\n+        int myPendingContainers \u003d userMetrics.getPendingContainers();\n+        int myReservedContainers \u003d userMetrics.getReservedContainers();\n+        int myReservedGB \u003d userMetrics.getReservedGB();\n+        int myPendingGB \u003d userMetrics.getPendingGB();\n+        int myAllocatedGB \u003d userMetrics.getAllocatedGB();\n+        div.table(\"#usermetricsoverview\").\n+        thead().$class(\"ui-widget-header\").\n+          tr().\n+            th().$class(\"ui-state-default\")._(\"Apps Submitted (\"+user+\")\")._().\n+            th().$class(\"ui-state-default\")._(\"Containers Running (\"+user+\")\")._().\n+            th().$class(\"ui-state-default\")._(\"Containers Pending (\"+user+\")\")._().\n+            th().$class(\"ui-state-default\")._(\"Containers Reserved (\"+user+\")\")._().\n+            th().$class(\"ui-state-default\")._(\"Memory Used (\"+user+\")\")._().\n+            th().$class(\"ui-state-default\")._(\"Memory Pending (\"+user+\")\")._().\n+            th().$class(\"ui-state-default\")._(\"Memory Reserved (\"+user+\")\")._().\n+          _().\n+        _().\n+        tbody().$class(\"ui-widget-content\").\n+          tr().\n+            td(String.valueOf(myAppsSubmitted)).\n+            td(String.valueOf(myRunningContainers)).\n+            td(String.valueOf(myPendingContainers)).\n+            td(String.valueOf(myReservedContainers)).\n+            td(StringUtils.byteDesc(myAllocatedGB * BYTES_IN_GB)).\n+            td(StringUtils.byteDesc(myPendingGB * BYTES_IN_GB)).\n+            td(StringUtils.byteDesc(myReservedGB * BYTES_IN_GB)).\n+          _().\n+        _()._();\n+      }\n+    }\n+\n+    div._();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void render(Block html) {\n    //Yes this is a hack, but there is no other way to insert\n    //CSS in the correct spot\n    html.style(\".metrics {margin-bottom:5px}\"); \n    \n    ResourceScheduler rs \u003d rm.getResourceScheduler();\n    QueueMetrics metrics \u003d rs.getRootQueueMetrics();\n    \n    int appsSubmitted \u003d metrics.getAppsSubmitted();\n    int reservedGB \u003d metrics.getReservedGB();\n    int availableGB \u003d metrics.getAvailableGB();\n    int allocatedGB \u003d metrics.getAllocatedGB();\n    int containersAllocated \u003d metrics.getAllocatedContainers();\n    int totalGB \u003d availableGB + reservedGB + allocatedGB;\n    \n    ConcurrentMap\u003cNodeId,RMNode\u003e nodes \u003d rmContext.getRMNodes();\n    int totalNodes \u003d nodes.size();\n    int lostNodes \u003d 0;\n    int unhealthyNodes \u003d 0;\n    int decommissionedNodes \u003d 0;\n    for(RMNode node: nodes.values()) {\n      if(node \u003d\u003d null || node.getState() \u003d\u003d null) {\n        lostNodes++;\n        continue;\n      }\n      switch(node.getState()) {\n      case DECOMMISSIONED:\n        decommissionedNodes++;\n        break;\n      case LOST:\n        lostNodes++;\n        break;\n      case UNHEALTHY:\n        unhealthyNodes++;\n        break;\n      //RUNNING noop\n      }\n    }\n    \n    DIV\u003cHamlet\u003e div \u003d html.div().$class(\"metrics\");\n    \n    div.table(\"#metricsoverview\").\n    thead().$class(\"ui-widget-header\").\n      tr().\n        th().$class(\"ui-state-default\")._(\"Apps Submitted\")._().\n        th().$class(\"ui-state-default\")._(\"Containers Running\")._().\n        th().$class(\"ui-state-default\")._(\"Memory Used\")._().\n        th().$class(\"ui-state-default\")._(\"Memopry Total\")._().\n        th().$class(\"ui-state-default\")._(\"Memory Reserved\")._().\n        th().$class(\"ui-state-default\")._(\"Total Nodes\")._().\n        th().$class(\"ui-state-default\")._(\"Decommissioned Nodes\")._().\n        th().$class(\"ui-state-default\")._(\"Lost Nodes\")._().\n        th().$class(\"ui-state-default\")._(\"Unhealthy Nodes\")._().\n      _().\n    _().\n    tbody().$class(\"ui-widget-content\").\n      tr().\n        td(String.valueOf(appsSubmitted)).\n        td(String.valueOf(containersAllocated)).\n        td(StringUtils.byteDesc(allocatedGB * BYTES_IN_GB)).\n        td(StringUtils.byteDesc(totalGB * BYTES_IN_GB)).\n        td(StringUtils.byteDesc(reservedGB * BYTES_IN_GB)).\n        td().a(url(\"nodes\"),String.valueOf(totalNodes))._(). \n        td().a(url(\"nodes/DECOMMISSIONED\"),String.valueOf(decommissionedNodes))._(). \n        td().a(url(\"nodes/LOST\"),String.valueOf(lostNodes))._().\n        td().a(url(\"nodes/UNHEALTHY\"),String.valueOf(unhealthyNodes))._().\n      _().\n    _()._();\n    \n    String user \u003d request().getRemoteUser();\n    if (user !\u003d null) {\n      QueueMetrics userMetrics \u003d metrics.getUserMetrics(user);\n      if(userMetrics !\u003d null) {\n        int myAppsSubmitted \u003d userMetrics.getAppsSubmitted();\n        int myRunningContainers \u003d userMetrics.getAllocatedContainers();\n        int myPendingContainers \u003d userMetrics.getPendingContainers();\n        int myReservedContainers \u003d userMetrics.getReservedContainers();\n        int myReservedGB \u003d userMetrics.getReservedGB();\n        int myPendingGB \u003d userMetrics.getPendingGB();\n        int myAllocatedGB \u003d userMetrics.getAllocatedGB();\n        div.table(\"#usermetricsoverview\").\n        thead().$class(\"ui-widget-header\").\n          tr().\n            th().$class(\"ui-state-default\")._(\"Apps Submitted (\"+user+\")\")._().\n            th().$class(\"ui-state-default\")._(\"Containers Running (\"+user+\")\")._().\n            th().$class(\"ui-state-default\")._(\"Containers Pending (\"+user+\")\")._().\n            th().$class(\"ui-state-default\")._(\"Containers Reserved (\"+user+\")\")._().\n            th().$class(\"ui-state-default\")._(\"Memory Used (\"+user+\")\")._().\n            th().$class(\"ui-state-default\")._(\"Memory Pending (\"+user+\")\")._().\n            th().$class(\"ui-state-default\")._(\"Memory Reserved (\"+user+\")\")._().\n          _().\n        _().\n        tbody().$class(\"ui-widget-content\").\n          tr().\n            td(String.valueOf(myAppsSubmitted)).\n            td(String.valueOf(myRunningContainers)).\n            td(String.valueOf(myPendingContainers)).\n            td(String.valueOf(myReservedContainers)).\n            td(StringUtils.byteDesc(myAllocatedGB * BYTES_IN_GB)).\n            td(StringUtils.byteDesc(myPendingGB * BYTES_IN_GB)).\n            td(StringUtils.byteDesc(myReservedGB * BYTES_IN_GB)).\n          _().\n        _()._();\n      }\n    }\n\n    div._();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/MetricsOverviewTable.java"
    }
  }
}