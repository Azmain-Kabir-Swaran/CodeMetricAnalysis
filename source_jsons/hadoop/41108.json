{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ComputeFairShares.java",
  "functionName": "computeShare",
  "functionId": "computeShare___sched-Schedulable__w2rRatio-double__type-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/policies/ComputeFairShares.java",
  "functionStartLine": 200,
  "functionEndLine": 206,
  "numCommitsSeen": 30,
  "timeTaken": 5477,
  "changeHistory": [
    "d027a24f0349b60efa5125c330058f123771748f",
    "09b476e6dabe8039a41dde7930c8a9c0d14bb750",
    "e60fbbcc2e6a0d27d588b620817d29d1c70893a5",
    "c1b635ed4826b0f9c8574d262dfeb13fa5ceb650",
    "df55edd5dec9c944a6c38f08d6f1f0fdb901c880",
    "e74d1f0435c2bcdfae2c26f6c340a5a487d20aa3",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "1ef64e64c05ae5318cd4cb47d03a0494d742fb7c"
  ],
  "changeHistoryShort": {
    "d027a24f0349b60efa5125c330058f123771748f": "Ymultichange(Yreturntypechange,Ybodychange)",
    "09b476e6dabe8039a41dde7930c8a9c0d14bb750": "Ymultichange(Yparameterchange,Ybodychange)",
    "e60fbbcc2e6a0d27d588b620817d29d1c70893a5": "Ymultichange(Ymovefromfile,Yreturntypechange,Ybodychange,Yparameterchange)",
    "c1b635ed4826b0f9c8574d262dfeb13fa5ceb650": "Ybodychange",
    "df55edd5dec9c944a6c38f08d6f1f0fdb901c880": "Yfilerename",
    "e74d1f0435c2bcdfae2c26f6c340a5a487d20aa3": "Yfilerename",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "1ef64e64c05ae5318cd4cb47d03a0494d742fb7c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d027a24f0349b60efa5125c330058f123771748f": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "YARN-8833. Avoid potential integer overflow when computing fair shares. Contributed by liyakun.\n",
      "commitDate": "18/11/18 7:18 AM",
      "commitName": "d027a24f0349b60efa5125c330058f123771748f",
      "commitAuthor": "Weiwei Yang",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "YARN-8833. Avoid potential integer overflow when computing fair shares. Contributed by liyakun.\n",
          "commitDate": "18/11/18 7:18 AM",
          "commitName": "d027a24f0349b60efa5125c330058f123771748f",
          "commitAuthor": "Weiwei Yang",
          "commitDateOld": "14/09/17 11:23 AM",
          "commitNameOld": "09b476e6dabe8039a41dde7930c8a9c0d14bb750",
          "commitAuthorOld": "Yufei Gu",
          "daysBetweenCommits": 429.87,
          "commitsBetweenForRepo": 3832,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,7 @@\n-  private static int computeShare(Schedulable sched, double w2rRatio,\n+  private static long computeShare(Schedulable sched, double w2rRatio,\n       String type) {\n     double share \u003d sched.getWeight() * w2rRatio;\n     share \u003d Math.max(share, sched.getMinShare().getResourceValue(type));\n     share \u003d Math.min(share, sched.getMaxShare().getResourceValue(type));\n-    return (int) share;\n+    return (long) share;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static long computeShare(Schedulable sched, double w2rRatio,\n      String type) {\n    double share \u003d sched.getWeight() * w2rRatio;\n    share \u003d Math.max(share, sched.getMinShare().getResourceValue(type));\n    share \u003d Math.min(share, sched.getMaxShare().getResourceValue(type));\n    return (long) share;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/policies/ComputeFairShares.java",
          "extendedDetails": {
            "oldValue": "int",
            "newValue": "long"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-8833. Avoid potential integer overflow when computing fair shares. Contributed by liyakun.\n",
          "commitDate": "18/11/18 7:18 AM",
          "commitName": "d027a24f0349b60efa5125c330058f123771748f",
          "commitAuthor": "Weiwei Yang",
          "commitDateOld": "14/09/17 11:23 AM",
          "commitNameOld": "09b476e6dabe8039a41dde7930c8a9c0d14bb750",
          "commitAuthorOld": "Yufei Gu",
          "daysBetweenCommits": 429.87,
          "commitsBetweenForRepo": 3832,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,7 @@\n-  private static int computeShare(Schedulable sched, double w2rRatio,\n+  private static long computeShare(Schedulable sched, double w2rRatio,\n       String type) {\n     double share \u003d sched.getWeight() * w2rRatio;\n     share \u003d Math.max(share, sched.getMinShare().getResourceValue(type));\n     share \u003d Math.min(share, sched.getMaxShare().getResourceValue(type));\n-    return (int) share;\n+    return (long) share;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static long computeShare(Schedulable sched, double w2rRatio,\n      String type) {\n    double share \u003d sched.getWeight() * w2rRatio;\n    share \u003d Math.max(share, sched.getMinShare().getResourceValue(type));\n    share \u003d Math.min(share, sched.getMaxShare().getResourceValue(type));\n    return (long) share;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/policies/ComputeFairShares.java",
          "extendedDetails": {}
        }
      ]
    },
    "09b476e6dabe8039a41dde7930c8a9c0d14bb750": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-6612. Update fair scheduler policies to be aware of resource types. (Contributed by Daniel Templeton via Yufei Gu)\n",
      "commitDate": "14/09/17 11:23 AM",
      "commitName": "09b476e6dabe8039a41dde7930c8a9c0d14bb750",
      "commitAuthor": "Yufei Gu",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-6612. Update fair scheduler policies to be aware of resource types. (Contributed by Daniel Templeton via Yufei Gu)\n",
          "commitDate": "14/09/17 11:23 AM",
          "commitName": "09b476e6dabe8039a41dde7930c8a9c0d14bb750",
          "commitAuthor": "Yufei Gu",
          "commitDateOld": "11/07/16 10:36 PM",
          "commitNameOld": "819224dcf9c683aa52f58633ac8e13663f1916d8",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 429.53,
          "commitsBetweenForRepo": 2748,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,7 @@\n   private static int computeShare(Schedulable sched, double w2rRatio,\n-      ResourceType type) {\n-    double share \u003d sched.getWeights().getWeight(type) * w2rRatio;\n-    share \u003d Math.max(share, getResourceValue(sched.getMinShare(), type));\n-    share \u003d Math.min(share, getResourceValue(sched.getMaxShare(), type));\n+      String type) {\n+    double share \u003d sched.getWeight() * w2rRatio;\n+    share \u003d Math.max(share, sched.getMinShare().getResourceValue(type));\n+    share \u003d Math.min(share, sched.getMaxShare().getResourceValue(type));\n     return (int) share;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static int computeShare(Schedulable sched, double w2rRatio,\n      String type) {\n    double share \u003d sched.getWeight() * w2rRatio;\n    share \u003d Math.max(share, sched.getMinShare().getResourceValue(type));\n    share \u003d Math.min(share, sched.getMaxShare().getResourceValue(type));\n    return (int) share;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/policies/ComputeFairShares.java",
          "extendedDetails": {
            "oldValue": "[sched-Schedulable, w2rRatio-double, type-ResourceType]",
            "newValue": "[sched-Schedulable, w2rRatio-double, type-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-6612. Update fair scheduler policies to be aware of resource types. (Contributed by Daniel Templeton via Yufei Gu)\n",
          "commitDate": "14/09/17 11:23 AM",
          "commitName": "09b476e6dabe8039a41dde7930c8a9c0d14bb750",
          "commitAuthor": "Yufei Gu",
          "commitDateOld": "11/07/16 10:36 PM",
          "commitNameOld": "819224dcf9c683aa52f58633ac8e13663f1916d8",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 429.53,
          "commitsBetweenForRepo": 2748,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,7 @@\n   private static int computeShare(Schedulable sched, double w2rRatio,\n-      ResourceType type) {\n-    double share \u003d sched.getWeights().getWeight(type) * w2rRatio;\n-    share \u003d Math.max(share, getResourceValue(sched.getMinShare(), type));\n-    share \u003d Math.min(share, getResourceValue(sched.getMaxShare(), type));\n+      String type) {\n+    double share \u003d sched.getWeight() * w2rRatio;\n+    share \u003d Math.max(share, sched.getMinShare().getResourceValue(type));\n+    share \u003d Math.min(share, sched.getMaxShare().getResourceValue(type));\n     return (int) share;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static int computeShare(Schedulable sched, double w2rRatio,\n      String type) {\n    double share \u003d sched.getWeight() * w2rRatio;\n    share \u003d Math.max(share, sched.getMinShare().getResourceValue(type));\n    share \u003d Math.min(share, sched.getMaxShare().getResourceValue(type));\n    return (int) share;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/policies/ComputeFairShares.java",
          "extendedDetails": {}
        }
      ]
    },
    "e60fbbcc2e6a0d27d588b620817d29d1c70893a5": {
      "type": "Ymultichange(Ymovefromfile,Yreturntypechange,Ybodychange,Yparameterchange)",
      "commitMessage": "YARN-736. Add a multi-resource fair sharing metric. (sandyr via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1496153 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/06/13 11:33 AM",
      "commitName": "e60fbbcc2e6a0d27d588b620817d29d1c70893a5",
      "commitAuthor": "Alejandro Abdelnur",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-736. Add a multi-resource fair sharing metric. (sandyr via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1496153 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "24/06/13 11:33 AM",
          "commitName": "e60fbbcc2e6a0d27d588b620817d29d1c70893a5",
          "commitAuthor": "Alejandro Abdelnur",
          "commitDateOld": "24/06/13 9:21 AM",
          "commitNameOld": "ca35235b04b7eb60635a62a0f517d214adc32ba7",
          "commitAuthorOld": "Colin McCabe",
          "daysBetweenCommits": 0.09,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,7 @@\n-  private static Resource computeShare(Schedulable sched, double r2sRatio) {\n-    double share \u003d sched.getWeights().getWeight(ResourceType.MEMORY) * r2sRatio;\n-    share \u003d Math.max(share, sched.getMinShare().getMemory());\n-    share \u003d Math.min(share, sched.getDemand().getMemory());\n-    return Resources.createResource((int) share);\n+  private static int computeShare(Schedulable sched, double w2rRatio,\n+      ResourceType type) {\n+    double share \u003d sched.getWeights().getWeight(type) * w2rRatio;\n+    share \u003d Math.max(share, getResourceValue(sched.getMinShare(), type));\n+    share \u003d Math.min(share, getResourceValue(sched.getMaxShare(), type));\n+    return (int) share;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static int computeShare(Schedulable sched, double w2rRatio,\n      ResourceType type) {\n    double share \u003d sched.getWeights().getWeight(type) * w2rRatio;\n    share \u003d Math.max(share, getResourceValue(sched.getMinShare(), type));\n    share \u003d Math.min(share, getResourceValue(sched.getMaxShare(), type));\n    return (int) share;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/policies/ComputeFairShares.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/policies/FairSharePolicy.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/policies/ComputeFairShares.java",
            "oldMethodName": "computeShare",
            "newMethodName": "computeShare"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "YARN-736. Add a multi-resource fair sharing metric. (sandyr via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1496153 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "24/06/13 11:33 AM",
          "commitName": "e60fbbcc2e6a0d27d588b620817d29d1c70893a5",
          "commitAuthor": "Alejandro Abdelnur",
          "commitDateOld": "24/06/13 9:21 AM",
          "commitNameOld": "ca35235b04b7eb60635a62a0f517d214adc32ba7",
          "commitAuthorOld": "Colin McCabe",
          "daysBetweenCommits": 0.09,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,7 @@\n-  private static Resource computeShare(Schedulable sched, double r2sRatio) {\n-    double share \u003d sched.getWeights().getWeight(ResourceType.MEMORY) * r2sRatio;\n-    share \u003d Math.max(share, sched.getMinShare().getMemory());\n-    share \u003d Math.min(share, sched.getDemand().getMemory());\n-    return Resources.createResource((int) share);\n+  private static int computeShare(Schedulable sched, double w2rRatio,\n+      ResourceType type) {\n+    double share \u003d sched.getWeights().getWeight(type) * w2rRatio;\n+    share \u003d Math.max(share, getResourceValue(sched.getMinShare(), type));\n+    share \u003d Math.min(share, getResourceValue(sched.getMaxShare(), type));\n+    return (int) share;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static int computeShare(Schedulable sched, double w2rRatio,\n      ResourceType type) {\n    double share \u003d sched.getWeights().getWeight(type) * w2rRatio;\n    share \u003d Math.max(share, getResourceValue(sched.getMinShare(), type));\n    share \u003d Math.min(share, getResourceValue(sched.getMaxShare(), type));\n    return (int) share;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/policies/ComputeFairShares.java",
          "extendedDetails": {
            "oldValue": "Resource",
            "newValue": "int"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-736. Add a multi-resource fair sharing metric. (sandyr via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1496153 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "24/06/13 11:33 AM",
          "commitName": "e60fbbcc2e6a0d27d588b620817d29d1c70893a5",
          "commitAuthor": "Alejandro Abdelnur",
          "commitDateOld": "24/06/13 9:21 AM",
          "commitNameOld": "ca35235b04b7eb60635a62a0f517d214adc32ba7",
          "commitAuthorOld": "Colin McCabe",
          "daysBetweenCommits": 0.09,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,7 @@\n-  private static Resource computeShare(Schedulable sched, double r2sRatio) {\n-    double share \u003d sched.getWeights().getWeight(ResourceType.MEMORY) * r2sRatio;\n-    share \u003d Math.max(share, sched.getMinShare().getMemory());\n-    share \u003d Math.min(share, sched.getDemand().getMemory());\n-    return Resources.createResource((int) share);\n+  private static int computeShare(Schedulable sched, double w2rRatio,\n+      ResourceType type) {\n+    double share \u003d sched.getWeights().getWeight(type) * w2rRatio;\n+    share \u003d Math.max(share, getResourceValue(sched.getMinShare(), type));\n+    share \u003d Math.min(share, getResourceValue(sched.getMaxShare(), type));\n+    return (int) share;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static int computeShare(Schedulable sched, double w2rRatio,\n      ResourceType type) {\n    double share \u003d sched.getWeights().getWeight(type) * w2rRatio;\n    share \u003d Math.max(share, getResourceValue(sched.getMinShare(), type));\n    share \u003d Math.min(share, getResourceValue(sched.getMaxShare(), type));\n    return (int) share;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/policies/ComputeFairShares.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-736. Add a multi-resource fair sharing metric. (sandyr via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1496153 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "24/06/13 11:33 AM",
          "commitName": "e60fbbcc2e6a0d27d588b620817d29d1c70893a5",
          "commitAuthor": "Alejandro Abdelnur",
          "commitDateOld": "24/06/13 9:21 AM",
          "commitNameOld": "ca35235b04b7eb60635a62a0f517d214adc32ba7",
          "commitAuthorOld": "Colin McCabe",
          "daysBetweenCommits": 0.09,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,7 @@\n-  private static Resource computeShare(Schedulable sched, double r2sRatio) {\n-    double share \u003d sched.getWeights().getWeight(ResourceType.MEMORY) * r2sRatio;\n-    share \u003d Math.max(share, sched.getMinShare().getMemory());\n-    share \u003d Math.min(share, sched.getDemand().getMemory());\n-    return Resources.createResource((int) share);\n+  private static int computeShare(Schedulable sched, double w2rRatio,\n+      ResourceType type) {\n+    double share \u003d sched.getWeights().getWeight(type) * w2rRatio;\n+    share \u003d Math.max(share, getResourceValue(sched.getMinShare(), type));\n+    share \u003d Math.min(share, getResourceValue(sched.getMaxShare(), type));\n+    return (int) share;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static int computeShare(Schedulable sched, double w2rRatio,\n      ResourceType type) {\n    double share \u003d sched.getWeights().getWeight(type) * w2rRatio;\n    share \u003d Math.max(share, getResourceValue(sched.getMinShare(), type));\n    share \u003d Math.min(share, getResourceValue(sched.getMaxShare(), type));\n    return (int) share;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/policies/ComputeFairShares.java",
          "extendedDetails": {
            "oldValue": "[sched-Schedulable, r2sRatio-double]",
            "newValue": "[sched-Schedulable, w2rRatio-double, type-ResourceType]"
          }
        }
      ]
    },
    "c1b635ed4826b0f9c8574d262dfeb13fa5ceb650": {
      "type": "Ybodychange",
      "commitMessage": "YARN-326. Add multi-resource scheduling to the fair scheduler. (sandyr via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1489070 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/06/13 10:33 AM",
      "commitName": "c1b635ed4826b0f9c8574d262dfeb13fa5ceb650",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "09/05/13 2:47 PM",
      "commitNameOld": "c7bfd17ad1cbfdb411bdf26572084efc2fb8dee0",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 24.82,
      "commitsBetweenForRepo": 130,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,6 @@\n   private static Resource computeShare(Schedulable sched, double r2sRatio) {\n-    double share \u003d sched.getWeight() * r2sRatio;\n+    double share \u003d sched.getWeights().getWeight(ResourceType.MEMORY) * r2sRatio;\n     share \u003d Math.max(share, sched.getMinShare().getMemory());\n     share \u003d Math.min(share, sched.getDemand().getMemory());\n     return Resources.createResource((int) share);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static Resource computeShare(Schedulable sched, double r2sRatio) {\n    double share \u003d sched.getWeights().getWeight(ResourceType.MEMORY) * r2sRatio;\n    share \u003d Math.max(share, sched.getMinShare().getMemory());\n    share \u003d Math.min(share, sched.getDemand().getMemory());\n    return Resources.createResource((int) share);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/policies/FairSharePolicy.java",
      "extendedDetails": {}
    },
    "df55edd5dec9c944a6c38f08d6f1f0fdb901c880": {
      "type": "Yfilerename",
      "commitMessage": "YARN-482. FS: Extend SchedulingMode to intermediate queues. (kkambatl via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1469506 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/04/13 11:11 AM",
      "commitName": "df55edd5dec9c944a6c38f08d6f1f0fdb901c880",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "18/04/13 10:49 AM",
      "commitNameOld": "d219c904d32641c70f80f5d33c99cc81c79cf055",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private static Resource computeShare(Schedulable sched, double r2sRatio) {\n    double share \u003d sched.getWeight() * r2sRatio;\n    share \u003d Math.max(share, sched.getMinShare().getMemory());\n    share \u003d Math.min(share, sched.getDemand().getMemory());\n    return Resources.createResource((int) share);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/policies/FairSharePolicy.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/modes/FairSchedulingMode.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/policies/FairSharePolicy.java"
      }
    },
    "e74d1f0435c2bcdfae2c26f6c340a5a487d20aa3": {
      "type": "Yfilerename",
      "commitMessage": "YARN-469. Make scheduling mode in FS pluggable. (kkambatl via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1460961 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/03/13 8:25 PM",
      "commitName": "e74d1f0435c2bcdfae2c26f6c340a5a487d20aa3",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "25/03/13 7:34 PM",
      "commitNameOld": "2aed48a67f408c290e90c83af9f76165d695f91a",
      "commitAuthorOld": "Bikas Saha",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private static Resource computeShare(Schedulable sched, double r2sRatio) {\n    double share \u003d sched.getWeight() * r2sRatio;\n    share \u003d Math.max(share, sched.getMinShare().getMemory());\n    share \u003d Math.min(share, sched.getDemand().getMemory());\n    return Resources.createResource((int) share);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/modes/FairSchedulingMode.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/SchedulingAlgorithms.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/modes/FairSchedulingMode.java"
      }
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private static Resource computeShare(Schedulable sched, double r2sRatio) {\n    double share \u003d sched.getWeight() * r2sRatio;\n    share \u003d Math.max(share, sched.getMinShare().getMemory());\n    share \u003d Math.min(share, sched.getDemand().getMemory());\n    return Resources.createResource((int) share);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/SchedulingAlgorithms.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/SchedulingAlgorithms.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/SchedulingAlgorithms.java"
      }
    },
    "1ef64e64c05ae5318cd4cb47d03a0494d742fb7c": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-3451. Port Fair Scheduler to MR2 (pwendell via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1361020 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/07/12 5:43 PM",
      "commitName": "1ef64e64c05ae5318cd4cb47d03a0494d742fb7c",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,6 @@\n+  private static Resource computeShare(Schedulable sched, double r2sRatio) {\n+    double share \u003d sched.getWeight() * r2sRatio;\n+    share \u003d Math.max(share, sched.getMinShare().getMemory());\n+    share \u003d Math.min(share, sched.getDemand().getMemory());\n+    return Resources.createResource((int) share);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static Resource computeShare(Schedulable sched, double r2sRatio) {\n    double share \u003d sched.getWeight() * r2sRatio;\n    share \u003d Math.max(share, sched.getMinShare().getMemory());\n    share \u003d Math.min(share, sched.getDemand().getMemory());\n    return Resources.createResource((int) share);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/SchedulingAlgorithms.java"
    }
  }
}