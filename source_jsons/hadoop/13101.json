{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BlockManagerSafeMode.java",
  "functionName": "adjustBlockTotals",
  "functionId": "adjustBlockTotals___deltaSafe-int__deltaTotal-int",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManagerSafeMode.java",
  "functionStartLine": 245,
  "functionEndLine": 265,
  "numCommitsSeen": 663,
  "timeTaken": 37429,
  "changeHistory": [
    "a49cc74b4c72195dee1dfb6f9548e5e411dff553",
    "7be4e5bd222c6f1c40f88ee8b24b1587e157a87e"
  ],
  "changeHistoryShort": {
    "a49cc74b4c72195dee1dfb6f9548e5e411dff553": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange)",
    "7be4e5bd222c6f1c40f88ee8b24b1587e157a87e": "Ymodifierchange"
  },
  "changeHistoryDetails": {
    "a49cc74b4c72195dee1dfb6f9548e5e411dff553": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange)",
      "commitMessage": "HDFS-9129. Move the safemode block count into BlockManager. Contributed by Mingliang Liu.\n",
      "commitDate": "01/12/15 4:09 PM",
      "commitName": "a49cc74b4c72195dee1dfb6f9548e5e411dff553",
      "commitAuthor": "Jing Zhao",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-9129. Move the safemode block count into BlockManager. Contributed by Mingliang Liu.\n",
          "commitDate": "01/12/15 4:09 PM",
          "commitName": "a49cc74b4c72195dee1dfb6f9548e5e411dff553",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "01/12/15 1:32 PM",
          "commitNameOld": "58f6f54eeac779428ac995d196b60ffb90563f97",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 0.11,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,21 @@\n-    private synchronized void adjustBlockTotals(int deltaSafe, int deltaTotal) {\n-      if (!shouldIncrementallyTrackBlocks) {\n-        return;\n-      }\n-      assert haEnabled;\n-      \n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Adjusting block totals from \" +\n-            blockSafe + \"/\" + blockTotal + \" to \" +\n-            (blockSafe + deltaSafe) + \"/\" + (blockTotal + deltaTotal));\n-      }\n+  void adjustBlockTotals(int deltaSafe, int deltaTotal) {\n+    assert namesystem.hasWriteLock();\n+    if (!isSafeModeTrackingBlocks()) {\n+      return;\n+    }\n+\n+    long newBlockTotal;\n+    synchronized (this) {\n+      LOG.debug(\"Adjusting block totals from {}/{} to {}/{}\",  blockSafe,\n+          blockTotal, blockSafe + deltaSafe, blockTotal + deltaTotal);\n       assert blockSafe + deltaSafe \u003e\u003d 0 : \"Can\u0027t reduce blockSafe \" +\n-        blockSafe + \" by \" + deltaSafe + \": would be negative\";\n+          blockSafe + \" by \" + deltaSafe + \": would be negative\";\n       assert blockTotal + deltaTotal \u003e\u003d 0 : \"Can\u0027t reduce blockTotal \" +\n-        blockTotal + \" by \" + deltaTotal + \": would be negative\";\n-      \n+          blockTotal + \" by \" + deltaTotal + \": would be negative\";\n+\n       blockSafe +\u003d deltaSafe;\n-      setBlockTotal(blockTotal + deltaTotal);\n-    }\n\\ No newline at end of file\n+      newBlockTotal \u003d blockTotal + deltaTotal;\n+    }\n+    setBlockTotal(newBlockTotal);\n+    checkSafeMode();\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  void adjustBlockTotals(int deltaSafe, int deltaTotal) {\n    assert namesystem.hasWriteLock();\n    if (!isSafeModeTrackingBlocks()) {\n      return;\n    }\n\n    long newBlockTotal;\n    synchronized (this) {\n      LOG.debug(\"Adjusting block totals from {}/{} to {}/{}\",  blockSafe,\n          blockTotal, blockSafe + deltaSafe, blockTotal + deltaTotal);\n      assert blockSafe + deltaSafe \u003e\u003d 0 : \"Can\u0027t reduce blockSafe \" +\n          blockSafe + \" by \" + deltaSafe + \": would be negative\";\n      assert blockTotal + deltaTotal \u003e\u003d 0 : \"Can\u0027t reduce blockTotal \" +\n          blockTotal + \" by \" + deltaTotal + \": would be negative\";\n\n      blockSafe +\u003d deltaSafe;\n      newBlockTotal \u003d blockTotal + deltaTotal;\n    }\n    setBlockTotal(newBlockTotal);\n    checkSafeMode();\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManagerSafeMode.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManagerSafeMode.java",
            "oldMethodName": "adjustBlockTotals",
            "newMethodName": "adjustBlockTotals"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-9129. Move the safemode block count into BlockManager. Contributed by Mingliang Liu.\n",
          "commitDate": "01/12/15 4:09 PM",
          "commitName": "a49cc74b4c72195dee1dfb6f9548e5e411dff553",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "01/12/15 1:32 PM",
          "commitNameOld": "58f6f54eeac779428ac995d196b60ffb90563f97",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 0.11,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,21 @@\n-    private synchronized void adjustBlockTotals(int deltaSafe, int deltaTotal) {\n-      if (!shouldIncrementallyTrackBlocks) {\n-        return;\n-      }\n-      assert haEnabled;\n-      \n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Adjusting block totals from \" +\n-            blockSafe + \"/\" + blockTotal + \" to \" +\n-            (blockSafe + deltaSafe) + \"/\" + (blockTotal + deltaTotal));\n-      }\n+  void adjustBlockTotals(int deltaSafe, int deltaTotal) {\n+    assert namesystem.hasWriteLock();\n+    if (!isSafeModeTrackingBlocks()) {\n+      return;\n+    }\n+\n+    long newBlockTotal;\n+    synchronized (this) {\n+      LOG.debug(\"Adjusting block totals from {}/{} to {}/{}\",  blockSafe,\n+          blockTotal, blockSafe + deltaSafe, blockTotal + deltaTotal);\n       assert blockSafe + deltaSafe \u003e\u003d 0 : \"Can\u0027t reduce blockSafe \" +\n-        blockSafe + \" by \" + deltaSafe + \": would be negative\";\n+          blockSafe + \" by \" + deltaSafe + \": would be negative\";\n       assert blockTotal + deltaTotal \u003e\u003d 0 : \"Can\u0027t reduce blockTotal \" +\n-        blockTotal + \" by \" + deltaTotal + \": would be negative\";\n-      \n+          blockTotal + \" by \" + deltaTotal + \": would be negative\";\n+\n       blockSafe +\u003d deltaSafe;\n-      setBlockTotal(blockTotal + deltaTotal);\n-    }\n\\ No newline at end of file\n+      newBlockTotal \u003d blockTotal + deltaTotal;\n+    }\n+    setBlockTotal(newBlockTotal);\n+    checkSafeMode();\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  void adjustBlockTotals(int deltaSafe, int deltaTotal) {\n    assert namesystem.hasWriteLock();\n    if (!isSafeModeTrackingBlocks()) {\n      return;\n    }\n\n    long newBlockTotal;\n    synchronized (this) {\n      LOG.debug(\"Adjusting block totals from {}/{} to {}/{}\",  blockSafe,\n          blockTotal, blockSafe + deltaSafe, blockTotal + deltaTotal);\n      assert blockSafe + deltaSafe \u003e\u003d 0 : \"Can\u0027t reduce blockSafe \" +\n          blockSafe + \" by \" + deltaSafe + \": would be negative\";\n      assert blockTotal + deltaTotal \u003e\u003d 0 : \"Can\u0027t reduce blockTotal \" +\n          blockTotal + \" by \" + deltaTotal + \": would be negative\";\n\n      blockSafe +\u003d deltaSafe;\n      newBlockTotal \u003d blockTotal + deltaTotal;\n    }\n    setBlockTotal(newBlockTotal);\n    checkSafeMode();\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManagerSafeMode.java",
          "extendedDetails": {
            "oldValue": "[private, synchronized]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-9129. Move the safemode block count into BlockManager. Contributed by Mingliang Liu.\n",
          "commitDate": "01/12/15 4:09 PM",
          "commitName": "a49cc74b4c72195dee1dfb6f9548e5e411dff553",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "01/12/15 1:32 PM",
          "commitNameOld": "58f6f54eeac779428ac995d196b60ffb90563f97",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 0.11,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,21 @@\n-    private synchronized void adjustBlockTotals(int deltaSafe, int deltaTotal) {\n-      if (!shouldIncrementallyTrackBlocks) {\n-        return;\n-      }\n-      assert haEnabled;\n-      \n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Adjusting block totals from \" +\n-            blockSafe + \"/\" + blockTotal + \" to \" +\n-            (blockSafe + deltaSafe) + \"/\" + (blockTotal + deltaTotal));\n-      }\n+  void adjustBlockTotals(int deltaSafe, int deltaTotal) {\n+    assert namesystem.hasWriteLock();\n+    if (!isSafeModeTrackingBlocks()) {\n+      return;\n+    }\n+\n+    long newBlockTotal;\n+    synchronized (this) {\n+      LOG.debug(\"Adjusting block totals from {}/{} to {}/{}\",  blockSafe,\n+          blockTotal, blockSafe + deltaSafe, blockTotal + deltaTotal);\n       assert blockSafe + deltaSafe \u003e\u003d 0 : \"Can\u0027t reduce blockSafe \" +\n-        blockSafe + \" by \" + deltaSafe + \": would be negative\";\n+          blockSafe + \" by \" + deltaSafe + \": would be negative\";\n       assert blockTotal + deltaTotal \u003e\u003d 0 : \"Can\u0027t reduce blockTotal \" +\n-        blockTotal + \" by \" + deltaTotal + \": would be negative\";\n-      \n+          blockTotal + \" by \" + deltaTotal + \": would be negative\";\n+\n       blockSafe +\u003d deltaSafe;\n-      setBlockTotal(blockTotal + deltaTotal);\n-    }\n\\ No newline at end of file\n+      newBlockTotal \u003d blockTotal + deltaTotal;\n+    }\n+    setBlockTotal(newBlockTotal);\n+    checkSafeMode();\n+  }\n\\ No newline at end of file\n",
          "actualSource": "  void adjustBlockTotals(int deltaSafe, int deltaTotal) {\n    assert namesystem.hasWriteLock();\n    if (!isSafeModeTrackingBlocks()) {\n      return;\n    }\n\n    long newBlockTotal;\n    synchronized (this) {\n      LOG.debug(\"Adjusting block totals from {}/{} to {}/{}\",  blockSafe,\n          blockTotal, blockSafe + deltaSafe, blockTotal + deltaTotal);\n      assert blockSafe + deltaSafe \u003e\u003d 0 : \"Can\u0027t reduce blockSafe \" +\n          blockSafe + \" by \" + deltaSafe + \": would be negative\";\n      assert blockTotal + deltaTotal \u003e\u003d 0 : \"Can\u0027t reduce blockTotal \" +\n          blockTotal + \" by \" + deltaTotal + \": would be negative\";\n\n      blockSafe +\u003d deltaSafe;\n      newBlockTotal \u003d blockTotal + deltaTotal;\n    }\n    setBlockTotal(newBlockTotal);\n    checkSafeMode();\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManagerSafeMode.java",
          "extendedDetails": {}
        }
      ]
    },
    "7be4e5bd222c6f1c40f88ee8b24b1587e157a87e": {
      "type": "Ymodifierchange",
      "commitMessage": "HDFS-3039. Address findbugs and javadoc warnings on branch. Contributed by Todd Lipcon.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1296017 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "01/03/12 5:32 PM",
      "commitName": "7be4e5bd222c6f1c40f88ee8b24b1587e157a87e",
      "commitAuthor": "Aaron Myers",
      "commitDateOld": "29/02/12 3:47 PM",
      "commitNameOld": "1ba357553aafe30ecf33b9c7863c44c0b8021e78",
      "commitAuthorOld": "",
      "daysBetweenCommits": 1.07,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n-    private void adjustBlockTotals(int deltaSafe, int deltaTotal) {\n+    private synchronized void adjustBlockTotals(int deltaSafe, int deltaTotal) {\n       if (!shouldIncrementallyTrackBlocks) {\n         return;\n       }\n       assert haEnabled;\n       \n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Adjusting block totals from \" +\n             blockSafe + \"/\" + blockTotal + \" to \" +\n             (blockSafe + deltaSafe) + \"/\" + (blockTotal + deltaTotal));\n       }\n       assert blockSafe + deltaSafe \u003e\u003d 0 : \"Can\u0027t reduce blockSafe \" +\n         blockSafe + \" by \" + deltaSafe + \": would be negative\";\n       assert blockTotal + deltaTotal \u003e\u003d 0 : \"Can\u0027t reduce blockTotal \" +\n         blockTotal + \" by \" + deltaTotal + \": would be negative\";\n       \n       blockSafe +\u003d deltaSafe;\n       setBlockTotal(blockTotal + deltaTotal);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private synchronized void adjustBlockTotals(int deltaSafe, int deltaTotal) {\n      if (!shouldIncrementallyTrackBlocks) {\n        return;\n      }\n      assert haEnabled;\n      \n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Adjusting block totals from \" +\n            blockSafe + \"/\" + blockTotal + \" to \" +\n            (blockSafe + deltaSafe) + \"/\" + (blockTotal + deltaTotal));\n      }\n      assert blockSafe + deltaSafe \u003e\u003d 0 : \"Can\u0027t reduce blockSafe \" +\n        blockSafe + \" by \" + deltaSafe + \": would be negative\";\n      assert blockTotal + deltaTotal \u003e\u003d 0 : \"Can\u0027t reduce blockTotal \" +\n        blockTotal + \" by \" + deltaTotal + \": would be negative\";\n      \n      blockSafe +\u003d deltaSafe;\n      setBlockTotal(blockTotal + deltaTotal);\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {
        "oldValue": "[private]",
        "newValue": "[private, synchronized]"
      }
    }
  }
}