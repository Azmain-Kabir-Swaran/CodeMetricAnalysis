{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HeartbeatManager.java",
  "functionName": "startMaintenance",
  "functionId": "startMaintenance___node-DatanodeDescriptor(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/HeartbeatManager.java",
  "functionStartLine": 289,
  "functionEndLine": 308,
  "numCommitsSeen": 34,
  "timeTaken": 2146,
  "changeHistory": [
    "b61fb267b92b2736920b4bd0c673d31e7632ebb9",
    "9dcbdbdb5a34d85910707f81ebc1bb1f81c99978"
  ],
  "changeHistoryShort": {
    "b61fb267b92b2736920b4bd0c673d31e7632ebb9": "Ybodychange",
    "9dcbdbdb5a34d85910707f81ebc1bb1f81c99978": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b61fb267b92b2736920b4bd0c673d31e7632ebb9": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9390. Block management for maintenance states.\n",
      "commitDate": "17/10/16 5:45 PM",
      "commitName": "b61fb267b92b2736920b4bd0c673d31e7632ebb9",
      "commitAuthor": "Ming Ma",
      "commitDateOld": "30/08/16 2:00 PM",
      "commitNameOld": "9dcbdbdb5a34d85910707f81ebc1bb1f81c99978",
      "commitAuthorOld": "Ming Ma",
      "daysBetweenCommits": 48.16,
      "commitsBetweenForRepo": 304,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,20 @@\n   synchronized void startMaintenance(final DatanodeDescriptor node) {\n     if (!node.isAlive()) {\n       LOG.info(\"Dead node {} is put in maintenance state immediately.\", node);\n       node.setInMaintenance();\n-    } else if (node.isDecommissioned()) {\n-      LOG.info(\"Decommissioned node \" + node + \" is put in maintenance state\"\n-          + \" immediately.\");\n-      node.setInMaintenance();\n     } else {\n       stats.subtract(node);\n-      node.startMaintenance();\n+      if (node.isDecommissioned()) {\n+        LOG.info(\"Decommissioned node \" + node + \" is put in maintenance state\"\n+            + \" immediately.\");\n+        node.setInMaintenance();\n+      } else if (blockManager.getMinReplicationToBeInMaintenance() \u003d\u003d 0) {\n+        LOG.info(\"MinReplicationToBeInMaintenance is set to zero. \" + node +\n+            \" is put in maintenance state\" + \" immediately.\");\n+        node.setInMaintenance();\n+      } else {\n+        node.startMaintenance();\n+      }\n       stats.add(node);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized void startMaintenance(final DatanodeDescriptor node) {\n    if (!node.isAlive()) {\n      LOG.info(\"Dead node {} is put in maintenance state immediately.\", node);\n      node.setInMaintenance();\n    } else {\n      stats.subtract(node);\n      if (node.isDecommissioned()) {\n        LOG.info(\"Decommissioned node \" + node + \" is put in maintenance state\"\n            + \" immediately.\");\n        node.setInMaintenance();\n      } else if (blockManager.getMinReplicationToBeInMaintenance() \u003d\u003d 0) {\n        LOG.info(\"MinReplicationToBeInMaintenance is set to zero. \" + node +\n            \" is put in maintenance state\" + \" immediately.\");\n        node.setInMaintenance();\n      } else {\n        node.startMaintenance();\n      }\n      stats.add(node);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/HeartbeatManager.java",
      "extendedDetails": {}
    },
    "9dcbdbdb5a34d85910707f81ebc1bb1f81c99978": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-9392. Admins support for maintenance state. Contributed by Ming Ma.\n",
      "commitDate": "30/08/16 2:00 PM",
      "commitName": "9dcbdbdb5a34d85910707f81ebc1bb1f81c99978",
      "commitAuthor": "Ming Ma",
      "diff": "@@ -0,0 +1,14 @@\n+  synchronized void startMaintenance(final DatanodeDescriptor node) {\n+    if (!node.isAlive()) {\n+      LOG.info(\"Dead node {} is put in maintenance state immediately.\", node);\n+      node.setInMaintenance();\n+    } else if (node.isDecommissioned()) {\n+      LOG.info(\"Decommissioned node \" + node + \" is put in maintenance state\"\n+          + \" immediately.\");\n+      node.setInMaintenance();\n+    } else {\n+      stats.subtract(node);\n+      node.startMaintenance();\n+      stats.add(node);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized void startMaintenance(final DatanodeDescriptor node) {\n    if (!node.isAlive()) {\n      LOG.info(\"Dead node {} is put in maintenance state immediately.\", node);\n      node.setInMaintenance();\n    } else if (node.isDecommissioned()) {\n      LOG.info(\"Decommissioned node \" + node + \" is put in maintenance state\"\n          + \" immediately.\");\n      node.setInMaintenance();\n    } else {\n      stats.subtract(node);\n      node.startMaintenance();\n      stats.add(node);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/HeartbeatManager.java"
    }
  }
}