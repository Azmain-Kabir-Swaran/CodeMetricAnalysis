{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JMXGet.java",
  "functionName": "printAllMatchedAttributes",
  "functionId": "printAllMatchedAttributes___attrRegExp-String",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/JMXGet.java",
  "functionStartLine": 113,
  "functionEndLine": 128,
  "numCommitsSeen": 6,
  "timeTaken": 1247,
  "changeHistory": [
    "5e8b6973527e5f714652641ed95e8a4509e18cfa"
  ],
  "changeHistoryShort": {
    "5e8b6973527e5f714652641ed95e8a4509e18cfa": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5e8b6973527e5f714652641ed95e8a4509e18cfa": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-7129. Metrics to track usage of memory for writes. (Contributed by Xiaoyu Yao)\n",
      "commitDate": "30/09/14 12:53 AM",
      "commitName": "5e8b6973527e5f714652641ed95e8a4509e18cfa",
      "commitAuthor": "arp",
      "diff": "@@ -0,0 +1,16 @@\n+  public void printAllMatchedAttributes(String attrRegExp) throws Exception {\n+    err(\"List of the keys matching \" + attrRegExp + \" :\");\n+    Object val \u003d null;\n+    Pattern p \u003d Pattern.compile(attrRegExp);\n+    for (ObjectName oname : hadoopObjectNames) {\n+      err(\"\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003ejmx name: \" + oname.getCanonicalKeyPropertyListString());\n+      MBeanInfo mbinfo \u003d mbsc.getMBeanInfo(oname);\n+      MBeanAttributeInfo[] mbinfos \u003d mbinfo.getAttributes();\n+      for (MBeanAttributeInfo mb : mbinfos) {\n+        if (p.matcher(mb.getName()).lookingAt()) {\n+          val \u003d mbsc.getAttribute(oname, mb.getName());\n+          System.out.format(format, mb.getName(), (val \u003d\u003d null) ? \"\" : val.toString());\n+        }\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void printAllMatchedAttributes(String attrRegExp) throws Exception {\n    err(\"List of the keys matching \" + attrRegExp + \" :\");\n    Object val \u003d null;\n    Pattern p \u003d Pattern.compile(attrRegExp);\n    for (ObjectName oname : hadoopObjectNames) {\n      err(\"\u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003ejmx name: \" + oname.getCanonicalKeyPropertyListString());\n      MBeanInfo mbinfo \u003d mbsc.getMBeanInfo(oname);\n      MBeanAttributeInfo[] mbinfos \u003d mbinfo.getAttributes();\n      for (MBeanAttributeInfo mb : mbinfos) {\n        if (p.matcher(mb.getName()).lookingAt()) {\n          val \u003d mbsc.getAttribute(oname, mb.getName());\n          System.out.format(format, mb.getName(), (val \u003d\u003d null) ? \"\" : val.toString());\n        }\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/JMXGet.java"
    }
  }
}