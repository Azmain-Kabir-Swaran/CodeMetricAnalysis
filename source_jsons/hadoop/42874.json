{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMAppImpl.java",
  "functionName": "removeExcessAttempts",
  "functionId": "removeExcessAttempts___app-RMAppImpl",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppImpl.java",
  "functionStartLine": 1613,
  "functionEndLine": 1631,
  "numCommitsSeen": 170,
  "timeTaken": 3125,
  "changeHistory": [
    "e30668106dc246f68db36fbd1f2db6ec08cd96f2",
    "52734134116eb4b18686e308d00e71e7e903383e"
  ],
  "changeHistoryShort": {
    "e30668106dc246f68db36fbd1f2db6ec08cd96f2": "Ybodychange",
    "52734134116eb4b18686e308d00e71e7e903383e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e30668106dc246f68db36fbd1f2db6ec08cd96f2": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4584. RM startup failure when AM attempts greater than max-attempts. (Bibin A Chundatt via rohithsharmaks)\n",
      "commitDate": "21/01/16 8:44 PM",
      "commitName": "e30668106dc246f68db36fbd1f2db6ec08cd96f2",
      "commitAuthor": "Rohith Sharma K S",
      "commitDateOld": "18/01/16 1:58 AM",
      "commitNameOld": "d40859fab1ad977636457a6cc96b6a4f9b903afc",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 3.78,
      "commitsBetweenForRepo": 32,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,19 @@\n     private void removeExcessAttempts(RMAppImpl app) {\n-      while (app.nextAttemptId - app.firstAttemptIdInStateStore\n-          \u003e app.maxAppAttempts) {\n+      while (app.nextAttemptId\n+          - app.firstAttemptIdInStateStore \u003e app.maxAppAttempts) {\n         // attempts\u0027 first element is oldest attempt because it is a\n         // LinkedHashMap\n         ApplicationAttemptId attemptId \u003d ApplicationAttemptId.newInstance(\n             app.getApplicationId(), app.firstAttemptIdInStateStore);\n-        app.firstAttemptIdInStateStore++;\n-        LOG.info(\"Remove attempt from state store : \" + attemptId);\n-        app.rmContext.getStateStore().removeApplicationAttempt(attemptId);\n+        RMAppAttempt rmAppAttempt \u003d app.getRMAppAttempt(attemptId);\n+        long endTime \u003d app.systemClock.getTime();\n+        if (rmAppAttempt.getFinishTime() \u003c (endTime\n+            - app.attemptFailuresValidityInterval)) {\n+          app.firstAttemptIdInStateStore++;\n+          LOG.info(\"Remove attempt from state store : \" + attemptId);\n+          app.rmContext.getStateStore().removeApplicationAttempt(attemptId);\n+        } else {\n+          break;\n+        }\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void removeExcessAttempts(RMAppImpl app) {\n      while (app.nextAttemptId\n          - app.firstAttemptIdInStateStore \u003e app.maxAppAttempts) {\n        // attempts\u0027 first element is oldest attempt because it is a\n        // LinkedHashMap\n        ApplicationAttemptId attemptId \u003d ApplicationAttemptId.newInstance(\n            app.getApplicationId(), app.firstAttemptIdInStateStore);\n        RMAppAttempt rmAppAttempt \u003d app.getRMAppAttempt(attemptId);\n        long endTime \u003d app.systemClock.getTime();\n        if (rmAppAttempt.getFinishTime() \u003c (endTime\n            - app.attemptFailuresValidityInterval)) {\n          app.firstAttemptIdInStateStore++;\n          LOG.info(\"Remove attempt from state store : \" + attemptId);\n          app.rmContext.getStateStore().removeApplicationAttempt(attemptId);\n        } else {\n          break;\n        }\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppImpl.java",
      "extendedDetails": {}
    },
    "52734134116eb4b18686e308d00e71e7e903383e": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3480. Remove attempts that are beyond max-attempt limit from state store. Contributed by Jun Gong\n",
      "commitDate": "29/12/15 3:58 PM",
      "commitName": "52734134116eb4b18686e308d00e71e7e903383e",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,12 @@\n+    private void removeExcessAttempts(RMAppImpl app) {\n+      while (app.nextAttemptId - app.firstAttemptIdInStateStore\n+          \u003e app.maxAppAttempts) {\n+        // attempts\u0027 first element is oldest attempt because it is a\n+        // LinkedHashMap\n+        ApplicationAttemptId attemptId \u003d ApplicationAttemptId.newInstance(\n+            app.getApplicationId(), app.firstAttemptIdInStateStore);\n+        app.firstAttemptIdInStateStore++;\n+        LOG.info(\"Remove attempt from state store : \" + attemptId);\n+        app.rmContext.getStateStore().removeApplicationAttempt(attemptId);\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private void removeExcessAttempts(RMAppImpl app) {\n      while (app.nextAttemptId - app.firstAttemptIdInStateStore\n          \u003e app.maxAppAttempts) {\n        // attempts\u0027 first element is oldest attempt because it is a\n        // LinkedHashMap\n        ApplicationAttemptId attemptId \u003d ApplicationAttemptId.newInstance(\n            app.getApplicationId(), app.firstAttemptIdInStateStore);\n        app.firstAttemptIdInStateStore++;\n        LOG.info(\"Remove attempt from state store : \" + attemptId);\n        app.rmContext.getStateStore().removeApplicationAttempt(attemptId);\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppImpl.java"
    }
  }
}