{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ProtocolProxy.java",
  "functionName": "isMethodSupported",
  "functionId": "isMethodSupported___methodName-String__parameterTypes-Class__?__",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/ProtocolProxy.java",
  "functionStartLine": 94,
  "functionEndLine": 116,
  "numCommitsSeen": 9,
  "timeTaken": 1042,
  "changeHistory": [
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "78a7b9768dcde23face399d9924f6168e4b1c1a8",
    "28a6a8301ef9deee04f4794806529177f8612f7f",
    "accf84fd108b6adb07e45fe27963720c58b4e3a5",
    "b1e3037296e5687ef04e86a35e1f00195faab244"
  ],
  "changeHistoryShort": {
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "78a7b9768dcde23face399d9924f6168e4b1c1a8": "Ymultichange(Ymodifierchange,Ybodychange)",
    "28a6a8301ef9deee04f4794806529177f8612f7f": "Ymultichange(Ymodifierchange,Ybodychange)",
    "accf84fd108b6adb07e45fe27963720c58b4e3a5": "Ymultichange(Ymodifierchange,Ybodychange)",
    "b1e3037296e5687ef04e86a35e1f00195faab244": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public synchronized boolean isMethodSupported(String methodName,\n                                   Class\u003c?\u003e... parameterTypes)\n  throws IOException {\n    if (!supportServerMethodCheck) {\n      return true;\n    }\n    Method method;\n    try {\n      method \u003d protocol.getDeclaredMethod(methodName, parameterTypes);\n    } catch (SecurityException e) {\n      throw new IOException(e);\n    } catch (NoSuchMethodException e) {\n      throw new IOException(e);\n    }\n    if (!serverMethodsFetched) {\n      fetchServerMethods(method);\n    }\n    if (serverMethods \u003d\u003d null) { // client \u0026 server have the same protocol\n      return true;\n    }\n    return serverMethods.contains(\n        Integer.valueOf(ProtocolSignature.getFingerprint(method)));\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/ProtocolProxy.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/ipc/ProtocolProxy.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/ProtocolProxy.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public synchronized boolean isMethodSupported(String methodName,\n                                   Class\u003c?\u003e... parameterTypes)\n  throws IOException {\n    if (!supportServerMethodCheck) {\n      return true;\n    }\n    Method method;\n    try {\n      method \u003d protocol.getDeclaredMethod(methodName, parameterTypes);\n    } catch (SecurityException e) {\n      throw new IOException(e);\n    } catch (NoSuchMethodException e) {\n      throw new IOException(e);\n    }\n    if (!serverMethodsFetched) {\n      fetchServerMethods(method);\n    }\n    if (serverMethods \u003d\u003d null) { // client \u0026 server have the same protocol\n      return true;\n    }\n    return serverMethods.contains(\n        Integer.valueOf(ProtocolSignature.getFingerprint(method)));\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/ipc/ProtocolProxy.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/ipc/ProtocolProxy.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/ipc/ProtocolProxy.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public synchronized boolean isMethodSupported(String methodName,\n                                   Class\u003c?\u003e... parameterTypes)\n  throws IOException {\n    if (!supportServerMethodCheck) {\n      return true;\n    }\n    Method method;\n    try {\n      method \u003d protocol.getDeclaredMethod(methodName, parameterTypes);\n    } catch (SecurityException e) {\n      throw new IOException(e);\n    } catch (NoSuchMethodException e) {\n      throw new IOException(e);\n    }\n    if (!serverMethodsFetched) {\n      fetchServerMethods(method);\n    }\n    if (serverMethods \u003d\u003d null) { // client \u0026 server have the same protocol\n      return true;\n    }\n    return serverMethods.contains(\n        Integer.valueOf(ProtocolSignature.getFingerprint(method)));\n  }",
      "path": "common/src/java/org/apache/hadoop/ipc/ProtocolProxy.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/ipc/ProtocolProxy.java",
        "newPath": "common/src/java/org/apache/hadoop/ipc/ProtocolProxy.java"
      }
    },
    "78a7b9768dcde23face399d9924f6168e4b1c1a8": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "HADOOP-7227. Remove protocol version check at proxy creation in Hadoop RPC. Contributed by jitendra.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1099284 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/05/11 3:16 PM",
      "commitName": "78a7b9768dcde23face399d9924f6168e4b1c1a8",
      "commitAuthor": "Jitendra Nath Pandey",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "HADOOP-7227. Remove protocol version check at proxy creation in Hadoop RPC. Contributed by jitendra.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1099284 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "03/05/11 3:16 PM",
          "commitName": "78a7b9768dcde23face399d9924f6168e4b1c1a8",
          "commitAuthor": "Jitendra Nath Pandey",
          "commitDateOld": "02/05/11 4:03 PM",
          "commitNameOld": "28a6a8301ef9deee04f4794806529177f8612f7f",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.97,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,23 @@\n-  public boolean isMethodSupported(String methodName,\n+  public synchronized boolean isMethodSupported(String methodName,\n                                    Class\u003c?\u003e... parameterTypes)\n   throws IOException {\n-    if (serverMethods \u003d\u003d null) { // client \u0026 server have the same protocol\n+    if (!supportServerMethodCheck) {\n       return true;\n     }\n     Method method;\n     try {\n       method \u003d protocol.getDeclaredMethod(methodName, parameterTypes);\n     } catch (SecurityException e) {\n       throw new IOException(e);\n     } catch (NoSuchMethodException e) {\n       throw new IOException(e);\n     }\n+    if (!serverMethodsFetched) {\n+      fetchServerMethods(method);\n+    }\n+    if (serverMethods \u003d\u003d null) { // client \u0026 server have the same protocol\n+      return true;\n+    }\n     return serverMethods.contains(\n         Integer.valueOf(ProtocolSignature.getFingerprint(method)));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized boolean isMethodSupported(String methodName,\n                                   Class\u003c?\u003e... parameterTypes)\n  throws IOException {\n    if (!supportServerMethodCheck) {\n      return true;\n    }\n    Method method;\n    try {\n      method \u003d protocol.getDeclaredMethod(methodName, parameterTypes);\n    } catch (SecurityException e) {\n      throw new IOException(e);\n    } catch (NoSuchMethodException e) {\n      throw new IOException(e);\n    }\n    if (!serverMethodsFetched) {\n      fetchServerMethods(method);\n    }\n    if (serverMethods \u003d\u003d null) { // client \u0026 server have the same protocol\n      return true;\n    }\n    return serverMethods.contains(\n        Integer.valueOf(ProtocolSignature.getFingerprint(method)));\n  }",
          "path": "src/java/org/apache/hadoop/ipc/ProtocolProxy.java",
          "extendedDetails": {
            "oldValue": "[public]",
            "newValue": "[public, synchronized]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-7227. Remove protocol version check at proxy creation in Hadoop RPC. Contributed by jitendra.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1099284 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "03/05/11 3:16 PM",
          "commitName": "78a7b9768dcde23face399d9924f6168e4b1c1a8",
          "commitAuthor": "Jitendra Nath Pandey",
          "commitDateOld": "02/05/11 4:03 PM",
          "commitNameOld": "28a6a8301ef9deee04f4794806529177f8612f7f",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.97,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,23 @@\n-  public boolean isMethodSupported(String methodName,\n+  public synchronized boolean isMethodSupported(String methodName,\n                                    Class\u003c?\u003e... parameterTypes)\n   throws IOException {\n-    if (serverMethods \u003d\u003d null) { // client \u0026 server have the same protocol\n+    if (!supportServerMethodCheck) {\n       return true;\n     }\n     Method method;\n     try {\n       method \u003d protocol.getDeclaredMethod(methodName, parameterTypes);\n     } catch (SecurityException e) {\n       throw new IOException(e);\n     } catch (NoSuchMethodException e) {\n       throw new IOException(e);\n     }\n+    if (!serverMethodsFetched) {\n+      fetchServerMethods(method);\n+    }\n+    if (serverMethods \u003d\u003d null) { // client \u0026 server have the same protocol\n+      return true;\n+    }\n     return serverMethods.contains(\n         Integer.valueOf(ProtocolSignature.getFingerprint(method)));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized boolean isMethodSupported(String methodName,\n                                   Class\u003c?\u003e... parameterTypes)\n  throws IOException {\n    if (!supportServerMethodCheck) {\n      return true;\n    }\n    Method method;\n    try {\n      method \u003d protocol.getDeclaredMethod(methodName, parameterTypes);\n    } catch (SecurityException e) {\n      throw new IOException(e);\n    } catch (NoSuchMethodException e) {\n      throw new IOException(e);\n    }\n    if (!serverMethodsFetched) {\n      fetchServerMethods(method);\n    }\n    if (serverMethods \u003d\u003d null) { // client \u0026 server have the same protocol\n      return true;\n    }\n    return serverMethods.contains(\n        Integer.valueOf(ProtocolSignature.getFingerprint(method)));\n  }",
          "path": "src/java/org/apache/hadoop/ipc/ProtocolProxy.java",
          "extendedDetails": {}
        }
      ]
    },
    "28a6a8301ef9deee04f4794806529177f8612f7f": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "Revert HADOOP-7227 from r1098792 since it broke HDFS and MR builds.\n\n( svn merge -c -1098792 )\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1098840 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/05/11 4:03 PM",
      "commitName": "28a6a8301ef9deee04f4794806529177f8612f7f",
      "commitAuthor": "Todd Lipcon",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "Revert HADOOP-7227 from r1098792 since it broke HDFS and MR builds.\n\n( svn merge -c -1098792 )\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1098840 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "02/05/11 4:03 PM",
          "commitName": "28a6a8301ef9deee04f4794806529177f8612f7f",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "02/05/11 1:57 PM",
          "commitNameOld": "accf84fd108b6adb07e45fe27963720c58b4e3a5",
          "commitAuthorOld": "Jitendra Nath Pandey",
          "daysBetweenCommits": 0.09,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,17 @@\n-  public synchronized boolean isMethodSupported(String methodName,\n+  public boolean isMethodSupported(String methodName,\n                                    Class\u003c?\u003e... parameterTypes)\n   throws IOException {\n-    if (!supportServerMethodCheck) {\n+    if (serverMethods \u003d\u003d null) { // client \u0026 server have the same protocol\n       return true;\n     }\n     Method method;\n     try {\n       method \u003d protocol.getDeclaredMethod(methodName, parameterTypes);\n     } catch (SecurityException e) {\n       throw new IOException(e);\n     } catch (NoSuchMethodException e) {\n       throw new IOException(e);\n     }\n-    if (!serverMethodsFetched) {\n-      fetchServerMethods(method);\n-    }\n-    if (serverMethods \u003d\u003d null) { // client \u0026 server have the same protocol\n-      return true;\n-    }\n     return serverMethods.contains(\n         Integer.valueOf(ProtocolSignature.getFingerprint(method)));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean isMethodSupported(String methodName,\n                                   Class\u003c?\u003e... parameterTypes)\n  throws IOException {\n    if (serverMethods \u003d\u003d null) { // client \u0026 server have the same protocol\n      return true;\n    }\n    Method method;\n    try {\n      method \u003d protocol.getDeclaredMethod(methodName, parameterTypes);\n    } catch (SecurityException e) {\n      throw new IOException(e);\n    } catch (NoSuchMethodException e) {\n      throw new IOException(e);\n    }\n    return serverMethods.contains(\n        Integer.valueOf(ProtocolSignature.getFingerprint(method)));\n  }",
          "path": "src/java/org/apache/hadoop/ipc/ProtocolProxy.java",
          "extendedDetails": {
            "oldValue": "[public, synchronized]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Revert HADOOP-7227 from r1098792 since it broke HDFS and MR builds.\n\n( svn merge -c -1098792 )\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1098840 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "02/05/11 4:03 PM",
          "commitName": "28a6a8301ef9deee04f4794806529177f8612f7f",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "02/05/11 1:57 PM",
          "commitNameOld": "accf84fd108b6adb07e45fe27963720c58b4e3a5",
          "commitAuthorOld": "Jitendra Nath Pandey",
          "daysBetweenCommits": 0.09,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,17 @@\n-  public synchronized boolean isMethodSupported(String methodName,\n+  public boolean isMethodSupported(String methodName,\n                                    Class\u003c?\u003e... parameterTypes)\n   throws IOException {\n-    if (!supportServerMethodCheck) {\n+    if (serverMethods \u003d\u003d null) { // client \u0026 server have the same protocol\n       return true;\n     }\n     Method method;\n     try {\n       method \u003d protocol.getDeclaredMethod(methodName, parameterTypes);\n     } catch (SecurityException e) {\n       throw new IOException(e);\n     } catch (NoSuchMethodException e) {\n       throw new IOException(e);\n     }\n-    if (!serverMethodsFetched) {\n-      fetchServerMethods(method);\n-    }\n-    if (serverMethods \u003d\u003d null) { // client \u0026 server have the same protocol\n-      return true;\n-    }\n     return serverMethods.contains(\n         Integer.valueOf(ProtocolSignature.getFingerprint(method)));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean isMethodSupported(String methodName,\n                                   Class\u003c?\u003e... parameterTypes)\n  throws IOException {\n    if (serverMethods \u003d\u003d null) { // client \u0026 server have the same protocol\n      return true;\n    }\n    Method method;\n    try {\n      method \u003d protocol.getDeclaredMethod(methodName, parameterTypes);\n    } catch (SecurityException e) {\n      throw new IOException(e);\n    } catch (NoSuchMethodException e) {\n      throw new IOException(e);\n    }\n    return serverMethods.contains(\n        Integer.valueOf(ProtocolSignature.getFingerprint(method)));\n  }",
          "path": "src/java/org/apache/hadoop/ipc/ProtocolProxy.java",
          "extendedDetails": {}
        }
      ]
    },
    "accf84fd108b6adb07e45fe27963720c58b4e3a5": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "HADOOP-7227. Remove protocol version check at proxy creation in Hadoop RPC. Contributed by jitendra.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1098792 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/05/11 1:57 PM",
      "commitName": "accf84fd108b6adb07e45fe27963720c58b4e3a5",
      "commitAuthor": "Jitendra Nath Pandey",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "HADOOP-7227. Remove protocol version check at proxy creation in Hadoop RPC. Contributed by jitendra.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1098792 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "02/05/11 1:57 PM",
          "commitName": "accf84fd108b6adb07e45fe27963720c58b4e3a5",
          "commitAuthor": "Jitendra Nath Pandey",
          "commitDateOld": "28/01/11 2:45 PM",
          "commitNameOld": "b1e3037296e5687ef04e86a35e1f00195faab244",
          "commitAuthorOld": "Hairong Kuang",
          "daysBetweenCommits": 93.92,
          "commitsBetweenForRepo": 78,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,23 @@\n-  public boolean isMethodSupported(String methodName,\n+  public synchronized boolean isMethodSupported(String methodName,\n                                    Class\u003c?\u003e... parameterTypes)\n   throws IOException {\n-    if (serverMethods \u003d\u003d null) { // client \u0026 server have the same protocol\n+    if (!supportServerMethodCheck) {\n       return true;\n     }\n     Method method;\n     try {\n       method \u003d protocol.getDeclaredMethod(methodName, parameterTypes);\n     } catch (SecurityException e) {\n       throw new IOException(e);\n     } catch (NoSuchMethodException e) {\n       throw new IOException(e);\n     }\n+    if (!serverMethodsFetched) {\n+      fetchServerMethods(method);\n+    }\n+    if (serverMethods \u003d\u003d null) { // client \u0026 server have the same protocol\n+      return true;\n+    }\n     return serverMethods.contains(\n         Integer.valueOf(ProtocolSignature.getFingerprint(method)));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized boolean isMethodSupported(String methodName,\n                                   Class\u003c?\u003e... parameterTypes)\n  throws IOException {\n    if (!supportServerMethodCheck) {\n      return true;\n    }\n    Method method;\n    try {\n      method \u003d protocol.getDeclaredMethod(methodName, parameterTypes);\n    } catch (SecurityException e) {\n      throw new IOException(e);\n    } catch (NoSuchMethodException e) {\n      throw new IOException(e);\n    }\n    if (!serverMethodsFetched) {\n      fetchServerMethods(method);\n    }\n    if (serverMethods \u003d\u003d null) { // client \u0026 server have the same protocol\n      return true;\n    }\n    return serverMethods.contains(\n        Integer.valueOf(ProtocolSignature.getFingerprint(method)));\n  }",
          "path": "src/java/org/apache/hadoop/ipc/ProtocolProxy.java",
          "extendedDetails": {
            "oldValue": "[public]",
            "newValue": "[public, synchronized]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-7227. Remove protocol version check at proxy creation in Hadoop RPC. Contributed by jitendra.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1098792 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "02/05/11 1:57 PM",
          "commitName": "accf84fd108b6adb07e45fe27963720c58b4e3a5",
          "commitAuthor": "Jitendra Nath Pandey",
          "commitDateOld": "28/01/11 2:45 PM",
          "commitNameOld": "b1e3037296e5687ef04e86a35e1f00195faab244",
          "commitAuthorOld": "Hairong Kuang",
          "daysBetweenCommits": 93.92,
          "commitsBetweenForRepo": 78,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,23 @@\n-  public boolean isMethodSupported(String methodName,\n+  public synchronized boolean isMethodSupported(String methodName,\n                                    Class\u003c?\u003e... parameterTypes)\n   throws IOException {\n-    if (serverMethods \u003d\u003d null) { // client \u0026 server have the same protocol\n+    if (!supportServerMethodCheck) {\n       return true;\n     }\n     Method method;\n     try {\n       method \u003d protocol.getDeclaredMethod(methodName, parameterTypes);\n     } catch (SecurityException e) {\n       throw new IOException(e);\n     } catch (NoSuchMethodException e) {\n       throw new IOException(e);\n     }\n+    if (!serverMethodsFetched) {\n+      fetchServerMethods(method);\n+    }\n+    if (serverMethods \u003d\u003d null) { // client \u0026 server have the same protocol\n+      return true;\n+    }\n     return serverMethods.contains(\n         Integer.valueOf(ProtocolSignature.getFingerprint(method)));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized boolean isMethodSupported(String methodName,\n                                   Class\u003c?\u003e... parameterTypes)\n  throws IOException {\n    if (!supportServerMethodCheck) {\n      return true;\n    }\n    Method method;\n    try {\n      method \u003d protocol.getDeclaredMethod(methodName, parameterTypes);\n    } catch (SecurityException e) {\n      throw new IOException(e);\n    } catch (NoSuchMethodException e) {\n      throw new IOException(e);\n    }\n    if (!serverMethodsFetched) {\n      fetchServerMethods(method);\n    }\n    if (serverMethods \u003d\u003d null) { // client \u0026 server have the same protocol\n      return true;\n    }\n    return serverMethods.contains(\n        Integer.valueOf(ProtocolSignature.getFingerprint(method)));\n  }",
          "path": "src/java/org/apache/hadoop/ipc/ProtocolProxy.java",
          "extendedDetails": {}
        }
      ]
    },
    "b1e3037296e5687ef04e86a35e1f00195faab244": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-6904. Support method based RPC compatiblity. Contributed by Hairong Kuang.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1064919 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/01/11 2:45 PM",
      "commitName": "b1e3037296e5687ef04e86a35e1f00195faab244",
      "commitAuthor": "Hairong Kuang",
      "diff": "@@ -0,0 +1,17 @@\n+  public boolean isMethodSupported(String methodName,\n+                                   Class\u003c?\u003e... parameterTypes)\n+  throws IOException {\n+    if (serverMethods \u003d\u003d null) { // client \u0026 server have the same protocol\n+      return true;\n+    }\n+    Method method;\n+    try {\n+      method \u003d protocol.getDeclaredMethod(methodName, parameterTypes);\n+    } catch (SecurityException e) {\n+      throw new IOException(e);\n+    } catch (NoSuchMethodException e) {\n+      throw new IOException(e);\n+    }\n+    return serverMethods.contains(\n+        Integer.valueOf(ProtocolSignature.getFingerprint(method)));\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean isMethodSupported(String methodName,\n                                   Class\u003c?\u003e... parameterTypes)\n  throws IOException {\n    if (serverMethods \u003d\u003d null) { // client \u0026 server have the same protocol\n      return true;\n    }\n    Method method;\n    try {\n      method \u003d protocol.getDeclaredMethod(methodName, parameterTypes);\n    } catch (SecurityException e) {\n      throw new IOException(e);\n    } catch (NoSuchMethodException e) {\n      throw new IOException(e);\n    }\n    return serverMethods.contains(\n        Integer.valueOf(ProtocolSignature.getFingerprint(method)));\n  }",
      "path": "src/java/org/apache/hadoop/ipc/ProtocolProxy.java"
    }
  }
}