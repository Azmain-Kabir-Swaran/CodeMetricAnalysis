{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NMContainerStatus.java",
  "functionName": "newInstance",
  "functionId": "newInstance___containerId-ContainerId__version-int__containerState-ContainerState__allocatedResource-Resource__diagnostics-String__containerExitStatus-int__priority-Priority__creationTime-long__nodeLabelExpression-String__executionType-ExecutionType__allocationRequestId-long",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/NMContainerStatus.java",
  "functionStartLine": 50,
  "functionEndLine": 69,
  "numCommitsSeen": 20,
  "timeTaken": 6503,
  "changeHistory": [
    "a55d0738f1eba225c45578bbdabd0e5a6d6f5392",
    "1f53ae79728065417c6a99eb6fcc8d3a080ab4cc",
    "d6d9cff21b7b6141ed88359652cf22e8973c0661",
    "1b89a3e173f8e905074ed6714a7be5c003c0e2c4"
  ],
  "changeHistoryShort": {
    "a55d0738f1eba225c45578bbdabd0e5a6d6f5392": "Ymultichange(Yparameterchange,Ybodychange)",
    "1f53ae79728065417c6a99eb6fcc8d3a080ab4cc": "Ymultichange(Yparameterchange,Ybodychange)",
    "d6d9cff21b7b6141ed88359652cf22e8973c0661": "Ymultichange(Yparameterchange,Ybodychange)",
    "1b89a3e173f8e905074ed6714a7be5c003c0e2c4": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a55d0738f1eba225c45578bbdabd0e5a6d6f5392": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-7371. Added allocateRequestId in NMContainerStatus for recovery. Contributed by Chandni Singh\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "a55d0738f1eba225c45578bbdabd0e5a6d6f5392",
      "commitAuthor": "Jian He",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-7371. Added allocateRequestId in NMContainerStatus for recovery. Contributed by Chandni Singh\n",
          "commitDate": "06/11/17 1:30 PM",
          "commitName": "a55d0738f1eba225c45578bbdabd0e5a6d6f5392",
          "commitAuthor": "Jian He",
          "commitDateOld": "08/09/17 9:24 AM",
          "commitNameOld": "1f53ae79728065417c6a99eb6fcc8d3a080ab4cc",
          "commitAuthorOld": "Arun Suresh",
          "daysBetweenCommits": 59.21,
          "commitsBetweenForRepo": 577,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,20 @@\n   public static NMContainerStatus newInstance(ContainerId containerId,\n       int version, ContainerState containerState, Resource allocatedResource,\n       String diagnostics, int containerExitStatus, Priority priority,\n       long creationTime, String nodeLabelExpression,\n-      ExecutionType executionType) {\n+      ExecutionType executionType, long allocationRequestId) {\n     NMContainerStatus status \u003d\n         Records.newRecord(NMContainerStatus.class);\n     status.setContainerId(containerId);\n     status.setVersion(version);\n     status.setContainerState(containerState);\n     status.setAllocatedResource(allocatedResource);\n     status.setDiagnostics(diagnostics);\n     status.setContainerExitStatus(containerExitStatus);\n     status.setPriority(priority);\n     status.setCreationTime(creationTime);\n     status.setNodeLabelExpression(nodeLabelExpression);\n     status.setExecutionType(executionType);\n+    status.setAllocationRequestId(allocationRequestId);\n     return status;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static NMContainerStatus newInstance(ContainerId containerId,\n      int version, ContainerState containerState, Resource allocatedResource,\n      String diagnostics, int containerExitStatus, Priority priority,\n      long creationTime, String nodeLabelExpression,\n      ExecutionType executionType, long allocationRequestId) {\n    NMContainerStatus status \u003d\n        Records.newRecord(NMContainerStatus.class);\n    status.setContainerId(containerId);\n    status.setVersion(version);\n    status.setContainerState(containerState);\n    status.setAllocatedResource(allocatedResource);\n    status.setDiagnostics(diagnostics);\n    status.setContainerExitStatus(containerExitStatus);\n    status.setPriority(priority);\n    status.setCreationTime(creationTime);\n    status.setNodeLabelExpression(nodeLabelExpression);\n    status.setExecutionType(executionType);\n    status.setAllocationRequestId(allocationRequestId);\n    return status;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/NMContainerStatus.java",
          "extendedDetails": {
            "oldValue": "[containerId-ContainerId, version-int, containerState-ContainerState, allocatedResource-Resource, diagnostics-String, containerExitStatus-int, priority-Priority, creationTime-long, nodeLabelExpression-String, executionType-ExecutionType]",
            "newValue": "[containerId-ContainerId, version-int, containerState-ContainerState, allocatedResource-Resource, diagnostics-String, containerExitStatus-int, priority-Priority, creationTime-long, nodeLabelExpression-String, executionType-ExecutionType, allocationRequestId-long]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7371. Added allocateRequestId in NMContainerStatus for recovery. Contributed by Chandni Singh\n",
          "commitDate": "06/11/17 1:30 PM",
          "commitName": "a55d0738f1eba225c45578bbdabd0e5a6d6f5392",
          "commitAuthor": "Jian He",
          "commitDateOld": "08/09/17 9:24 AM",
          "commitNameOld": "1f53ae79728065417c6a99eb6fcc8d3a080ab4cc",
          "commitAuthorOld": "Arun Suresh",
          "daysBetweenCommits": 59.21,
          "commitsBetweenForRepo": 577,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,20 @@\n   public static NMContainerStatus newInstance(ContainerId containerId,\n       int version, ContainerState containerState, Resource allocatedResource,\n       String diagnostics, int containerExitStatus, Priority priority,\n       long creationTime, String nodeLabelExpression,\n-      ExecutionType executionType) {\n+      ExecutionType executionType, long allocationRequestId) {\n     NMContainerStatus status \u003d\n         Records.newRecord(NMContainerStatus.class);\n     status.setContainerId(containerId);\n     status.setVersion(version);\n     status.setContainerState(containerState);\n     status.setAllocatedResource(allocatedResource);\n     status.setDiagnostics(diagnostics);\n     status.setContainerExitStatus(containerExitStatus);\n     status.setPriority(priority);\n     status.setCreationTime(creationTime);\n     status.setNodeLabelExpression(nodeLabelExpression);\n     status.setExecutionType(executionType);\n+    status.setAllocationRequestId(allocationRequestId);\n     return status;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static NMContainerStatus newInstance(ContainerId containerId,\n      int version, ContainerState containerState, Resource allocatedResource,\n      String diagnostics, int containerExitStatus, Priority priority,\n      long creationTime, String nodeLabelExpression,\n      ExecutionType executionType, long allocationRequestId) {\n    NMContainerStatus status \u003d\n        Records.newRecord(NMContainerStatus.class);\n    status.setContainerId(containerId);\n    status.setVersion(version);\n    status.setContainerState(containerState);\n    status.setAllocatedResource(allocatedResource);\n    status.setDiagnostics(diagnostics);\n    status.setContainerExitStatus(containerExitStatus);\n    status.setPriority(priority);\n    status.setCreationTime(creationTime);\n    status.setNodeLabelExpression(nodeLabelExpression);\n    status.setExecutionType(executionType);\n    status.setAllocationRequestId(allocationRequestId);\n    return status;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/NMContainerStatus.java",
          "extendedDetails": {}
        }
      ]
    },
    "1f53ae79728065417c6a99eb6fcc8d3a080ab4cc": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-6849. NMContainerStatus should have the Container ExecutionType. (Kartheek Muthyala via asuresh)\n",
      "commitDate": "08/09/17 9:24 AM",
      "commitName": "1f53ae79728065417c6a99eb6fcc8d3a080ab4cc",
      "commitAuthor": "Arun Suresh",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-6849. NMContainerStatus should have the Container ExecutionType. (Kartheek Muthyala via asuresh)\n",
          "commitDate": "08/09/17 9:24 AM",
          "commitName": "1f53ae79728065417c6a99eb6fcc8d3a080ab4cc",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "30/08/16 3:52 PM",
          "commitNameOld": "d6d9cff21b7b6141ed88359652cf22e8973c0661",
          "commitAuthorOld": "Arun Suresh",
          "daysBetweenCommits": 373.73,
          "commitsBetweenForRepo": 2306,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,19 @@\n   public static NMContainerStatus newInstance(ContainerId containerId,\n       int version, ContainerState containerState, Resource allocatedResource,\n       String diagnostics, int containerExitStatus, Priority priority,\n-      long creationTime, String nodeLabelExpression) {\n+      long creationTime, String nodeLabelExpression,\n+      ExecutionType executionType) {\n     NMContainerStatus status \u003d\n         Records.newRecord(NMContainerStatus.class);\n     status.setContainerId(containerId);\n     status.setVersion(version);\n     status.setContainerState(containerState);\n     status.setAllocatedResource(allocatedResource);\n     status.setDiagnostics(diagnostics);\n     status.setContainerExitStatus(containerExitStatus);\n     status.setPriority(priority);\n     status.setCreationTime(creationTime);\n     status.setNodeLabelExpression(nodeLabelExpression);\n+    status.setExecutionType(executionType);\n     return status;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static NMContainerStatus newInstance(ContainerId containerId,\n      int version, ContainerState containerState, Resource allocatedResource,\n      String diagnostics, int containerExitStatus, Priority priority,\n      long creationTime, String nodeLabelExpression,\n      ExecutionType executionType) {\n    NMContainerStatus status \u003d\n        Records.newRecord(NMContainerStatus.class);\n    status.setContainerId(containerId);\n    status.setVersion(version);\n    status.setContainerState(containerState);\n    status.setAllocatedResource(allocatedResource);\n    status.setDiagnostics(diagnostics);\n    status.setContainerExitStatus(containerExitStatus);\n    status.setPriority(priority);\n    status.setCreationTime(creationTime);\n    status.setNodeLabelExpression(nodeLabelExpression);\n    status.setExecutionType(executionType);\n    return status;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/NMContainerStatus.java",
          "extendedDetails": {
            "oldValue": "[containerId-ContainerId, version-int, containerState-ContainerState, allocatedResource-Resource, diagnostics-String, containerExitStatus-int, priority-Priority, creationTime-long, nodeLabelExpression-String]",
            "newValue": "[containerId-ContainerId, version-int, containerState-ContainerState, allocatedResource-Resource, diagnostics-String, containerExitStatus-int, priority-Priority, creationTime-long, nodeLabelExpression-String, executionType-ExecutionType]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-6849. NMContainerStatus should have the Container ExecutionType. (Kartheek Muthyala via asuresh)\n",
          "commitDate": "08/09/17 9:24 AM",
          "commitName": "1f53ae79728065417c6a99eb6fcc8d3a080ab4cc",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "30/08/16 3:52 PM",
          "commitNameOld": "d6d9cff21b7b6141ed88359652cf22e8973c0661",
          "commitAuthorOld": "Arun Suresh",
          "daysBetweenCommits": 373.73,
          "commitsBetweenForRepo": 2306,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,19 @@\n   public static NMContainerStatus newInstance(ContainerId containerId,\n       int version, ContainerState containerState, Resource allocatedResource,\n       String diagnostics, int containerExitStatus, Priority priority,\n-      long creationTime, String nodeLabelExpression) {\n+      long creationTime, String nodeLabelExpression,\n+      ExecutionType executionType) {\n     NMContainerStatus status \u003d\n         Records.newRecord(NMContainerStatus.class);\n     status.setContainerId(containerId);\n     status.setVersion(version);\n     status.setContainerState(containerState);\n     status.setAllocatedResource(allocatedResource);\n     status.setDiagnostics(diagnostics);\n     status.setContainerExitStatus(containerExitStatus);\n     status.setPriority(priority);\n     status.setCreationTime(creationTime);\n     status.setNodeLabelExpression(nodeLabelExpression);\n+    status.setExecutionType(executionType);\n     return status;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static NMContainerStatus newInstance(ContainerId containerId,\n      int version, ContainerState containerState, Resource allocatedResource,\n      String diagnostics, int containerExitStatus, Priority priority,\n      long creationTime, String nodeLabelExpression,\n      ExecutionType executionType) {\n    NMContainerStatus status \u003d\n        Records.newRecord(NMContainerStatus.class);\n    status.setContainerId(containerId);\n    status.setVersion(version);\n    status.setContainerState(containerState);\n    status.setAllocatedResource(allocatedResource);\n    status.setDiagnostics(diagnostics);\n    status.setContainerExitStatus(containerExitStatus);\n    status.setPriority(priority);\n    status.setCreationTime(creationTime);\n    status.setNodeLabelExpression(nodeLabelExpression);\n    status.setExecutionType(executionType);\n    return status;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/NMContainerStatus.java",
          "extendedDetails": {}
        }
      ]
    },
    "d6d9cff21b7b6141ed88359652cf22e8973c0661": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-5221. Expose UpdateResourceRequest API to allow AM to request for change in container properties. (asuresh)\n",
      "commitDate": "30/08/16 3:52 PM",
      "commitName": "d6d9cff21b7b6141ed88359652cf22e8973c0661",
      "commitAuthor": "Arun Suresh",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-5221. Expose UpdateResourceRequest API to allow AM to request for change in container properties. (asuresh)\n",
          "commitDate": "30/08/16 3:52 PM",
          "commitName": "d6d9cff21b7b6141ed88359652cf22e8973c0661",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "15/04/15 1:57 PM",
          "commitNameOld": "1b89a3e173f8e905074ed6714a7be5c003c0e2c4",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 503.08,
          "commitsBetweenForRepo": 3787,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,17 @@\n   public static NMContainerStatus newInstance(ContainerId containerId,\n-      ContainerState containerState, Resource allocatedResource,\n+      int version, ContainerState containerState, Resource allocatedResource,\n       String diagnostics, int containerExitStatus, Priority priority,\n       long creationTime, String nodeLabelExpression) {\n     NMContainerStatus status \u003d\n         Records.newRecord(NMContainerStatus.class);\n     status.setContainerId(containerId);\n+    status.setVersion(version);\n     status.setContainerState(containerState);\n     status.setAllocatedResource(allocatedResource);\n     status.setDiagnostics(diagnostics);\n     status.setContainerExitStatus(containerExitStatus);\n     status.setPriority(priority);\n     status.setCreationTime(creationTime);\n     status.setNodeLabelExpression(nodeLabelExpression);\n     return status;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static NMContainerStatus newInstance(ContainerId containerId,\n      int version, ContainerState containerState, Resource allocatedResource,\n      String diagnostics, int containerExitStatus, Priority priority,\n      long creationTime, String nodeLabelExpression) {\n    NMContainerStatus status \u003d\n        Records.newRecord(NMContainerStatus.class);\n    status.setContainerId(containerId);\n    status.setVersion(version);\n    status.setContainerState(containerState);\n    status.setAllocatedResource(allocatedResource);\n    status.setDiagnostics(diagnostics);\n    status.setContainerExitStatus(containerExitStatus);\n    status.setPriority(priority);\n    status.setCreationTime(creationTime);\n    status.setNodeLabelExpression(nodeLabelExpression);\n    return status;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/NMContainerStatus.java",
          "extendedDetails": {
            "oldValue": "[containerId-ContainerId, containerState-ContainerState, allocatedResource-Resource, diagnostics-String, containerExitStatus-int, priority-Priority, creationTime-long, nodeLabelExpression-String]",
            "newValue": "[containerId-ContainerId, version-int, containerState-ContainerState, allocatedResource-Resource, diagnostics-String, containerExitStatus-int, priority-Priority, creationTime-long, nodeLabelExpression-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-5221. Expose UpdateResourceRequest API to allow AM to request for change in container properties. (asuresh)\n",
          "commitDate": "30/08/16 3:52 PM",
          "commitName": "d6d9cff21b7b6141ed88359652cf22e8973c0661",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "15/04/15 1:57 PM",
          "commitNameOld": "1b89a3e173f8e905074ed6714a7be5c003c0e2c4",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 503.08,
          "commitsBetweenForRepo": 3787,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,17 @@\n   public static NMContainerStatus newInstance(ContainerId containerId,\n-      ContainerState containerState, Resource allocatedResource,\n+      int version, ContainerState containerState, Resource allocatedResource,\n       String diagnostics, int containerExitStatus, Priority priority,\n       long creationTime, String nodeLabelExpression) {\n     NMContainerStatus status \u003d\n         Records.newRecord(NMContainerStatus.class);\n     status.setContainerId(containerId);\n+    status.setVersion(version);\n     status.setContainerState(containerState);\n     status.setAllocatedResource(allocatedResource);\n     status.setDiagnostics(diagnostics);\n     status.setContainerExitStatus(containerExitStatus);\n     status.setPriority(priority);\n     status.setCreationTime(creationTime);\n     status.setNodeLabelExpression(nodeLabelExpression);\n     return status;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static NMContainerStatus newInstance(ContainerId containerId,\n      int version, ContainerState containerState, Resource allocatedResource,\n      String diagnostics, int containerExitStatus, Priority priority,\n      long creationTime, String nodeLabelExpression) {\n    NMContainerStatus status \u003d\n        Records.newRecord(NMContainerStatus.class);\n    status.setContainerId(containerId);\n    status.setVersion(version);\n    status.setContainerState(containerState);\n    status.setAllocatedResource(allocatedResource);\n    status.setDiagnostics(diagnostics);\n    status.setContainerExitStatus(containerExitStatus);\n    status.setPriority(priority);\n    status.setCreationTime(creationTime);\n    status.setNodeLabelExpression(nodeLabelExpression);\n    return status;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/NMContainerStatus.java",
          "extendedDetails": {}
        }
      ]
    },
    "1b89a3e173f8e905074ed6714a7be5c003c0e2c4": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3354. Add node label expression in ContainerTokenIdentifier to support RM recovery. Contributed by Wangda Tan\n",
      "commitDate": "15/04/15 1:57 PM",
      "commitName": "1b89a3e173f8e905074ed6714a7be5c003c0e2c4",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,16 @@\n+  public static NMContainerStatus newInstance(ContainerId containerId,\n+      ContainerState containerState, Resource allocatedResource,\n+      String diagnostics, int containerExitStatus, Priority priority,\n+      long creationTime, String nodeLabelExpression) {\n+    NMContainerStatus status \u003d\n+        Records.newRecord(NMContainerStatus.class);\n+    status.setContainerId(containerId);\n+    status.setContainerState(containerState);\n+    status.setAllocatedResource(allocatedResource);\n+    status.setDiagnostics(diagnostics);\n+    status.setContainerExitStatus(containerExitStatus);\n+    status.setPriority(priority);\n+    status.setCreationTime(creationTime);\n+    status.setNodeLabelExpression(nodeLabelExpression);\n+    return status;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static NMContainerStatus newInstance(ContainerId containerId,\n      ContainerState containerState, Resource allocatedResource,\n      String diagnostics, int containerExitStatus, Priority priority,\n      long creationTime, String nodeLabelExpression) {\n    NMContainerStatus status \u003d\n        Records.newRecord(NMContainerStatus.class);\n    status.setContainerId(containerId);\n    status.setContainerState(containerState);\n    status.setAllocatedResource(allocatedResource);\n    status.setDiagnostics(diagnostics);\n    status.setContainerExitStatus(containerExitStatus);\n    status.setPriority(priority);\n    status.setCreationTime(creationTime);\n    status.setNodeLabelExpression(nodeLabelExpression);\n    return status;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/NMContainerStatus.java"
    }
  }
}