{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "QueuePlacementRuleUtils.java",
  "functionName": "validateQueueMappingUnderParentQueue",
  "functionId": "validateQueueMappingUnderParentQueue___parentQueue-CSQueue__parentQueueName-String__leafQueuePath-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/placement/QueuePlacementRuleUtils.java",
  "functionStartLine": 45,
  "functionEndLine": 66,
  "numCommitsSeen": 11,
  "timeTaken": 3910,
  "changeHistory": [
    "cdb2107066a2d8557270888c0a9a75f29a6853bf",
    "f8e36e03b4e65f173bf2330715dceafdb6111190",
    "a90471b3e65326cc18ed31fe21aef654833b5883"
  ],
  "changeHistoryShort": {
    "cdb2107066a2d8557270888c0a9a75f29a6853bf": "Ymultichange(Yparameterchange,Ybodychange)",
    "f8e36e03b4e65f173bf2330715dceafdb6111190": "Ymodifierchange",
    "a90471b3e65326cc18ed31fe21aef654833b5883": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cdb2107066a2d8557270888c0a9a75f29a6853bf": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-9879. Allow multiple leaf queues with the same name in CapacityScheduler. Contributed by Gergely Pollak.\n",
      "commitDate": "25/03/20 4:20 AM",
      "commitName": "cdb2107066a2d8557270888c0a9a75f29a6853bf",
      "commitAuthor": "Sunil G",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-9879. Allow multiple leaf queues with the same name in CapacityScheduler. Contributed by Gergely Pollak.\n",
          "commitDate": "25/03/20 4:20 AM",
          "commitName": "cdb2107066a2d8557270888c0a9a75f29a6853bf",
          "commitAuthor": "Sunil G",
          "commitDateOld": "24/11/19 10:28 PM",
          "commitNameOld": "f8e36e03b4e65f173bf2330715dceafdb6111190",
          "commitAuthorOld": "HUAN-PING SU",
          "daysBetweenCommits": 121.2,
          "commitsBetweenForRepo": 405,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,22 @@\n   public static void validateQueueMappingUnderParentQueue(\n             CSQueue parentQueue, String parentQueueName,\n-            String leafQueueName) throws IOException {\n+            String leafQueuePath) throws IOException {\n     if (parentQueue \u003d\u003d null) {\n       throw new IOException(\n-          \"mapping contains invalid or non-leaf queue [\" + leafQueueName\n+          \"mapping contains invalid or non-leaf queue [\" + leafQueuePath\n               + \"] and invalid parent queue [\" + parentQueueName + \"]\");\n     } else if (!(parentQueue instanceof ManagedParentQueue)) {\n-      throw new IOException(\"mapping contains leaf queue [\" + leafQueueName\n+      throw new IOException(\"mapping contains leaf queue [\" + leafQueuePath\n           + \"] and invalid parent queue which \"\n           + \"does not have auto creation of leaf queues enabled [\"\n           + parentQueueName + \"]\");\n-    } else if (!parentQueue.getQueueName().equals(parentQueueName)) {\n+    } else if (!parentQueue.getQueueShortName().equals(parentQueueName)\n+        \u0026\u0026 !parentQueue.getQueuePath().equals(parentQueueName)) {\n       throw new IOException(\n-          \"mapping contains invalid or non-leaf queue [\" + leafQueueName\n+          \"mapping contains invalid or non-leaf queue [\" + leafQueuePath\n               + \"] and invalid parent queue \"\n               + \"which does not match existing leaf queue\u0027s parent : [\"\n               + parentQueueName + \"] does not match [ \" + parentQueue\n-              .getQueueName() + \"]\");\n+              .getQueueShortName() + \"]\");\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void validateQueueMappingUnderParentQueue(\n            CSQueue parentQueue, String parentQueueName,\n            String leafQueuePath) throws IOException {\n    if (parentQueue \u003d\u003d null) {\n      throw new IOException(\n          \"mapping contains invalid or non-leaf queue [\" + leafQueuePath\n              + \"] and invalid parent queue [\" + parentQueueName + \"]\");\n    } else if (!(parentQueue instanceof ManagedParentQueue)) {\n      throw new IOException(\"mapping contains leaf queue [\" + leafQueuePath\n          + \"] and invalid parent queue which \"\n          + \"does not have auto creation of leaf queues enabled [\"\n          + parentQueueName + \"]\");\n    } else if (!parentQueue.getQueueShortName().equals(parentQueueName)\n        \u0026\u0026 !parentQueue.getQueuePath().equals(parentQueueName)) {\n      throw new IOException(\n          \"mapping contains invalid or non-leaf queue [\" + leafQueuePath\n              + \"] and invalid parent queue \"\n              + \"which does not match existing leaf queue\u0027s parent : [\"\n              + parentQueueName + \"] does not match [ \" + parentQueue\n              .getQueueShortName() + \"]\");\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/placement/QueuePlacementRuleUtils.java",
          "extendedDetails": {
            "oldValue": "[parentQueue-CSQueue, parentQueueName-String, leafQueueName-String]",
            "newValue": "[parentQueue-CSQueue, parentQueueName-String, leafQueuePath-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-9879. Allow multiple leaf queues with the same name in CapacityScheduler. Contributed by Gergely Pollak.\n",
          "commitDate": "25/03/20 4:20 AM",
          "commitName": "cdb2107066a2d8557270888c0a9a75f29a6853bf",
          "commitAuthor": "Sunil G",
          "commitDateOld": "24/11/19 10:28 PM",
          "commitNameOld": "f8e36e03b4e65f173bf2330715dceafdb6111190",
          "commitAuthorOld": "HUAN-PING SU",
          "daysBetweenCommits": 121.2,
          "commitsBetweenForRepo": 405,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,22 @@\n   public static void validateQueueMappingUnderParentQueue(\n             CSQueue parentQueue, String parentQueueName,\n-            String leafQueueName) throws IOException {\n+            String leafQueuePath) throws IOException {\n     if (parentQueue \u003d\u003d null) {\n       throw new IOException(\n-          \"mapping contains invalid or non-leaf queue [\" + leafQueueName\n+          \"mapping contains invalid or non-leaf queue [\" + leafQueuePath\n               + \"] and invalid parent queue [\" + parentQueueName + \"]\");\n     } else if (!(parentQueue instanceof ManagedParentQueue)) {\n-      throw new IOException(\"mapping contains leaf queue [\" + leafQueueName\n+      throw new IOException(\"mapping contains leaf queue [\" + leafQueuePath\n           + \"] and invalid parent queue which \"\n           + \"does not have auto creation of leaf queues enabled [\"\n           + parentQueueName + \"]\");\n-    } else if (!parentQueue.getQueueName().equals(parentQueueName)) {\n+    } else if (!parentQueue.getQueueShortName().equals(parentQueueName)\n+        \u0026\u0026 !parentQueue.getQueuePath().equals(parentQueueName)) {\n       throw new IOException(\n-          \"mapping contains invalid or non-leaf queue [\" + leafQueueName\n+          \"mapping contains invalid or non-leaf queue [\" + leafQueuePath\n               + \"] and invalid parent queue \"\n               + \"which does not match existing leaf queue\u0027s parent : [\"\n               + parentQueueName + \"] does not match [ \" + parentQueue\n-              .getQueueName() + \"]\");\n+              .getQueueShortName() + \"]\");\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void validateQueueMappingUnderParentQueue(\n            CSQueue parentQueue, String parentQueueName,\n            String leafQueuePath) throws IOException {\n    if (parentQueue \u003d\u003d null) {\n      throw new IOException(\n          \"mapping contains invalid or non-leaf queue [\" + leafQueuePath\n              + \"] and invalid parent queue [\" + parentQueueName + \"]\");\n    } else if (!(parentQueue instanceof ManagedParentQueue)) {\n      throw new IOException(\"mapping contains leaf queue [\" + leafQueuePath\n          + \"] and invalid parent queue which \"\n          + \"does not have auto creation of leaf queues enabled [\"\n          + parentQueueName + \"]\");\n    } else if (!parentQueue.getQueueShortName().equals(parentQueueName)\n        \u0026\u0026 !parentQueue.getQueuePath().equals(parentQueueName)) {\n      throw new IOException(\n          \"mapping contains invalid or non-leaf queue [\" + leafQueuePath\n              + \"] and invalid parent queue \"\n              + \"which does not match existing leaf queue\u0027s parent : [\"\n              + parentQueueName + \"] does not match [ \" + parentQueue\n              .getQueueShortName() + \"]\");\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/placement/QueuePlacementRuleUtils.java",
          "extendedDetails": {}
        }
      ]
    },
    "f8e36e03b4e65f173bf2330715dceafdb6111190": {
      "type": "Ymodifierchange",
      "commitMessage": "YARN-9966. Code duplication in UserGroupMappingPlacementRule (#1709)\n\n",
      "commitDate": "24/11/19 10:28 PM",
      "commitName": "f8e36e03b4e65f173bf2330715dceafdb6111190",
      "commitAuthor": "HUAN-PING SU",
      "commitDateOld": "15/10/19 8:22 AM",
      "commitNameOld": "a8ef03e96183fad0ecc53b89f1f58aaa83a92ad8",
      "commitAuthorOld": "Szilard Nemeth",
      "daysBetweenCommits": 40.63,
      "commitsBetweenForRepo": 153,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,21 @@\n-  private static void validateQueueMappingUnderParentQueue(CSQueue parentQueue,\n-      String parentQueueName, String leafQueueName) throws IOException {\n+  public static void validateQueueMappingUnderParentQueue(\n+            CSQueue parentQueue, String parentQueueName,\n+            String leafQueueName) throws IOException {\n     if (parentQueue \u003d\u003d null) {\n       throw new IOException(\n           \"mapping contains invalid or non-leaf queue [\" + leafQueueName\n               + \"] and invalid parent queue [\" + parentQueueName + \"]\");\n     } else if (!(parentQueue instanceof ManagedParentQueue)) {\n       throw new IOException(\"mapping contains leaf queue [\" + leafQueueName\n           + \"] and invalid parent queue which \"\n           + \"does not have auto creation of leaf queues enabled [\"\n           + parentQueueName + \"]\");\n     } else if (!parentQueue.getQueueName().equals(parentQueueName)) {\n       throw new IOException(\n           \"mapping contains invalid or non-leaf queue [\" + leafQueueName\n               + \"] and invalid parent queue \"\n               + \"which does not match existing leaf queue\u0027s parent : [\"\n               + parentQueueName + \"] does not match [ \" + parentQueue\n               .getQueueName() + \"]\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void validateQueueMappingUnderParentQueue(\n            CSQueue parentQueue, String parentQueueName,\n            String leafQueueName) throws IOException {\n    if (parentQueue \u003d\u003d null) {\n      throw new IOException(\n          \"mapping contains invalid or non-leaf queue [\" + leafQueueName\n              + \"] and invalid parent queue [\" + parentQueueName + \"]\");\n    } else if (!(parentQueue instanceof ManagedParentQueue)) {\n      throw new IOException(\"mapping contains leaf queue [\" + leafQueueName\n          + \"] and invalid parent queue which \"\n          + \"does not have auto creation of leaf queues enabled [\"\n          + parentQueueName + \"]\");\n    } else if (!parentQueue.getQueueName().equals(parentQueueName)) {\n      throw new IOException(\n          \"mapping contains invalid or non-leaf queue [\" + leafQueueName\n              + \"] and invalid parent queue \"\n              + \"which does not match existing leaf queue\u0027s parent : [\"\n              + parentQueueName + \"] does not match [ \" + parentQueue\n              .getQueueName() + \"]\");\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/placement/QueuePlacementRuleUtils.java",
      "extendedDetails": {
        "oldValue": "[private, static]",
        "newValue": "[public, static]"
      }
    },
    "a90471b3e65326cc18ed31fe21aef654833b5883": {
      "type": "Yintroduced",
      "commitMessage": "YARN-8016. Refine PlacementRule interface and add a app-name queue mapping rule as an example. (Zian Chen via wangda)\n\nChange-Id: I35caf1480e0f76f5f3a53528af09312e39414bbb\n",
      "commitDate": "23/03/18 4:43 PM",
      "commitName": "a90471b3e65326cc18ed31fe21aef654833b5883",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,20 @@\n+  private static void validateQueueMappingUnderParentQueue(CSQueue parentQueue,\n+      String parentQueueName, String leafQueueName) throws IOException {\n+    if (parentQueue \u003d\u003d null) {\n+      throw new IOException(\n+          \"mapping contains invalid or non-leaf queue [\" + leafQueueName\n+              + \"] and invalid parent queue [\" + parentQueueName + \"]\");\n+    } else if (!(parentQueue instanceof ManagedParentQueue)) {\n+      throw new IOException(\"mapping contains leaf queue [\" + leafQueueName\n+          + \"] and invalid parent queue which \"\n+          + \"does not have auto creation of leaf queues enabled [\"\n+          + parentQueueName + \"]\");\n+    } else if (!parentQueue.getQueueName().equals(parentQueueName)) {\n+      throw new IOException(\n+          \"mapping contains invalid or non-leaf queue [\" + leafQueueName\n+              + \"] and invalid parent queue \"\n+              + \"which does not match existing leaf queue\u0027s parent : [\"\n+              + parentQueueName + \"] does not match [ \" + parentQueue\n+              .getQueueName() + \"]\");\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static void validateQueueMappingUnderParentQueue(CSQueue parentQueue,\n      String parentQueueName, String leafQueueName) throws IOException {\n    if (parentQueue \u003d\u003d null) {\n      throw new IOException(\n          \"mapping contains invalid or non-leaf queue [\" + leafQueueName\n              + \"] and invalid parent queue [\" + parentQueueName + \"]\");\n    } else if (!(parentQueue instanceof ManagedParentQueue)) {\n      throw new IOException(\"mapping contains leaf queue [\" + leafQueueName\n          + \"] and invalid parent queue which \"\n          + \"does not have auto creation of leaf queues enabled [\"\n          + parentQueueName + \"]\");\n    } else if (!parentQueue.getQueueName().equals(parentQueueName)) {\n      throw new IOException(\n          \"mapping contains invalid or non-leaf queue [\" + leafQueueName\n              + \"] and invalid parent queue \"\n              + \"which does not match existing leaf queue\u0027s parent : [\"\n              + parentQueueName + \"] does not match [ \" + parentQueue\n              .getQueueName() + \"]\");\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/placement/QueuePlacementRuleUtils.java"
    }
  }
}