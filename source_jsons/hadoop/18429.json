{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DistBbp.java",
  "functionName": "run",
  "functionId": "run___args-String[]",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-examples/src/main/java/org/apache/hadoop/examples/pi/DistBbp.java",
  "functionStartLine": 93,
  "functionEndLine": 132,
  "numCommitsSeen": 5,
  "timeTaken": 4420,
  "changeHistory": [
    "26447229ba2c3d43db978c1b3ce95613669182ee",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "26447229ba2c3d43db978c1b3ce95613669182ee": "Yfilerename",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "26447229ba2c3d43db978c1b3ce95613669182ee": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7590. Mavenize streaming and MR examples. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1203941 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/11/11 5:24 PM",
      "commitName": "26447229ba2c3d43db978c1b3ce95613669182ee",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "18/11/11 1:04 AM",
      "commitNameOld": "905a127850d5e0cba85c2e075f989fa0f5cf129a",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.68,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public int run(String[] args) throws Exception {\n    //parse arguments\n    if (args.length !\u003d DistSum.Parameters.COUNT + 1)\n      return Util.printUsage(args,\n          getClass().getName() + \" \u003cb\u003e \" + Parameters.LIST\n          + \"\\n  \u003cb\u003e The number of bits to skip, i.e. compute the (b+1)th position.\"\n          + Parameters.DESCRIPTION);\n\n    int i \u003d 0;\n    final long b \u003d Util.string2long(args[i++]);\n    final DistSum.Parameters parameters \u003d DistSum.Parameters.parse(args, i);\n\n    if (b \u003c 0)\n      throw new IllegalArgumentException(\"b \u003d \" + b + \" \u003c 0\");\n    Util.printBitSkipped(b);\n    Util.out.println(parameters);\n    Util.out.println();\n\n    //initialize sums\n    final DistSum distsum \u003d new DistSum();\n    distsum.setConf(getConf());\n    distsum.setParameters(parameters);\n    final boolean isVerbose \u003d getConf().getBoolean(Parser.VERBOSE_PROPERTY, false);\n    final Map\u003cParameter, List\u003cTaskResult\u003e\u003e existings \u003d new Parser(isVerbose).parse(parameters.localDir.getPath(), null);\n    Parser.combine(existings);\n    for(List\u003cTaskResult\u003e tr : existings.values())\n      Collections.sort(tr);\n    Util.out.println();\n    final Map\u003cBellard.Parameter, Bellard.Sum\u003e sums \u003d Bellard.getSums(b, parameters.nJobs, existings);\n    Util.out.println();\n\n    //execute the computations\n    execute(distsum, sums);\n\n    //compute Pi from the sums \n    final double pi \u003d Bellard.computePi(b, sums);\n    Util.printBitSkipped(b);\n    Util.out.println(Util.pi2string(pi, Bellard.bit2terms(b)));\n    return 0;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-examples/src/main/java/org/apache/hadoop/examples/pi/DistBbp.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/src/examples/org/apache/hadoop/examples/pi/DistBbp.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-examples/src/main/java/org/apache/hadoop/examples/pi/DistBbp.java"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public int run(String[] args) throws Exception {\n    //parse arguments\n    if (args.length !\u003d DistSum.Parameters.COUNT + 1)\n      return Util.printUsage(args,\n          getClass().getName() + \" \u003cb\u003e \" + Parameters.LIST\n          + \"\\n  \u003cb\u003e The number of bits to skip, i.e. compute the (b+1)th position.\"\n          + Parameters.DESCRIPTION);\n\n    int i \u003d 0;\n    final long b \u003d Util.string2long(args[i++]);\n    final DistSum.Parameters parameters \u003d DistSum.Parameters.parse(args, i);\n\n    if (b \u003c 0)\n      throw new IllegalArgumentException(\"b \u003d \" + b + \" \u003c 0\");\n    Util.printBitSkipped(b);\n    Util.out.println(parameters);\n    Util.out.println();\n\n    //initialize sums\n    final DistSum distsum \u003d new DistSum();\n    distsum.setConf(getConf());\n    distsum.setParameters(parameters);\n    final boolean isVerbose \u003d getConf().getBoolean(Parser.VERBOSE_PROPERTY, false);\n    final Map\u003cParameter, List\u003cTaskResult\u003e\u003e existings \u003d new Parser(isVerbose).parse(parameters.localDir.getPath(), null);\n    Parser.combine(existings);\n    for(List\u003cTaskResult\u003e tr : existings.values())\n      Collections.sort(tr);\n    Util.out.println();\n    final Map\u003cBellard.Parameter, Bellard.Sum\u003e sums \u003d Bellard.getSums(b, parameters.nJobs, existings);\n    Util.out.println();\n\n    //execute the computations\n    execute(distsum, sums);\n\n    //compute Pi from the sums \n    final double pi \u003d Bellard.computePi(b, sums);\n    Util.printBitSkipped(b);\n    Util.out.println(Util.pi2string(pi, Bellard.bit2terms(b)));\n    return 0;\n  }",
      "path": "hadoop-mapreduce-project/src/examples/org/apache/hadoop/examples/pi/DistBbp.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/src/examples/org/apache/hadoop/examples/pi/DistBbp.java",
        "newPath": "hadoop-mapreduce-project/src/examples/org/apache/hadoop/examples/pi/DistBbp.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public int run(String[] args) throws Exception {\n    //parse arguments\n    if (args.length !\u003d DistSum.Parameters.COUNT + 1)\n      return Util.printUsage(args,\n          getClass().getName() + \" \u003cb\u003e \" + Parameters.LIST\n          + \"\\n  \u003cb\u003e The number of bits to skip, i.e. compute the (b+1)th position.\"\n          + Parameters.DESCRIPTION);\n\n    int i \u003d 0;\n    final long b \u003d Util.string2long(args[i++]);\n    final DistSum.Parameters parameters \u003d DistSum.Parameters.parse(args, i);\n\n    if (b \u003c 0)\n      throw new IllegalArgumentException(\"b \u003d \" + b + \" \u003c 0\");\n    Util.printBitSkipped(b);\n    Util.out.println(parameters);\n    Util.out.println();\n\n    //initialize sums\n    final DistSum distsum \u003d new DistSum();\n    distsum.setConf(getConf());\n    distsum.setParameters(parameters);\n    final boolean isVerbose \u003d getConf().getBoolean(Parser.VERBOSE_PROPERTY, false);\n    final Map\u003cParameter, List\u003cTaskResult\u003e\u003e existings \u003d new Parser(isVerbose).parse(parameters.localDir.getPath(), null);\n    Parser.combine(existings);\n    for(List\u003cTaskResult\u003e tr : existings.values())\n      Collections.sort(tr);\n    Util.out.println();\n    final Map\u003cBellard.Parameter, Bellard.Sum\u003e sums \u003d Bellard.getSums(b, parameters.nJobs, existings);\n    Util.out.println();\n\n    //execute the computations\n    execute(distsum, sums);\n\n    //compute Pi from the sums \n    final double pi \u003d Bellard.computePi(b, sums);\n    Util.printBitSkipped(b);\n    Util.out.println(Util.pi2string(pi, Bellard.bit2terms(b)));\n    return 0;\n  }",
      "path": "hadoop-mapreduce/src/examples/org/apache/hadoop/examples/pi/DistBbp.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/examples/org/apache/hadoop/examples/pi/DistBbp.java",
        "newPath": "hadoop-mapreduce/src/examples/org/apache/hadoop/examples/pi/DistBbp.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,40 @@\n+  public int run(String[] args) throws Exception {\n+    //parse arguments\n+    if (args.length !\u003d DistSum.Parameters.COUNT + 1)\n+      return Util.printUsage(args,\n+          getClass().getName() + \" \u003cb\u003e \" + Parameters.LIST\n+          + \"\\n  \u003cb\u003e The number of bits to skip, i.e. compute the (b+1)th position.\"\n+          + Parameters.DESCRIPTION);\n+\n+    int i \u003d 0;\n+    final long b \u003d Util.string2long(args[i++]);\n+    final DistSum.Parameters parameters \u003d DistSum.Parameters.parse(args, i);\n+\n+    if (b \u003c 0)\n+      throw new IllegalArgumentException(\"b \u003d \" + b + \" \u003c 0\");\n+    Util.printBitSkipped(b);\n+    Util.out.println(parameters);\n+    Util.out.println();\n+\n+    //initialize sums\n+    final DistSum distsum \u003d new DistSum();\n+    distsum.setConf(getConf());\n+    distsum.setParameters(parameters);\n+    final boolean isVerbose \u003d getConf().getBoolean(Parser.VERBOSE_PROPERTY, false);\n+    final Map\u003cParameter, List\u003cTaskResult\u003e\u003e existings \u003d new Parser(isVerbose).parse(parameters.localDir.getPath(), null);\n+    Parser.combine(existings);\n+    for(List\u003cTaskResult\u003e tr : existings.values())\n+      Collections.sort(tr);\n+    Util.out.println();\n+    final Map\u003cBellard.Parameter, Bellard.Sum\u003e sums \u003d Bellard.getSums(b, parameters.nJobs, existings);\n+    Util.out.println();\n+\n+    //execute the computations\n+    execute(distsum, sums);\n+\n+    //compute Pi from the sums \n+    final double pi \u003d Bellard.computePi(b, sums);\n+    Util.printBitSkipped(b);\n+    Util.out.println(Util.pi2string(pi, Bellard.bit2terms(b)));\n+    return 0;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] args) throws Exception {\n    //parse arguments\n    if (args.length !\u003d DistSum.Parameters.COUNT + 1)\n      return Util.printUsage(args,\n          getClass().getName() + \" \u003cb\u003e \" + Parameters.LIST\n          + \"\\n  \u003cb\u003e The number of bits to skip, i.e. compute the (b+1)th position.\"\n          + Parameters.DESCRIPTION);\n\n    int i \u003d 0;\n    final long b \u003d Util.string2long(args[i++]);\n    final DistSum.Parameters parameters \u003d DistSum.Parameters.parse(args, i);\n\n    if (b \u003c 0)\n      throw new IllegalArgumentException(\"b \u003d \" + b + \" \u003c 0\");\n    Util.printBitSkipped(b);\n    Util.out.println(parameters);\n    Util.out.println();\n\n    //initialize sums\n    final DistSum distsum \u003d new DistSum();\n    distsum.setConf(getConf());\n    distsum.setParameters(parameters);\n    final boolean isVerbose \u003d getConf().getBoolean(Parser.VERBOSE_PROPERTY, false);\n    final Map\u003cParameter, List\u003cTaskResult\u003e\u003e existings \u003d new Parser(isVerbose).parse(parameters.localDir.getPath(), null);\n    Parser.combine(existings);\n    for(List\u003cTaskResult\u003e tr : existings.values())\n      Collections.sort(tr);\n    Util.out.println();\n    final Map\u003cBellard.Parameter, Bellard.Sum\u003e sums \u003d Bellard.getSums(b, parameters.nJobs, existings);\n    Util.out.println();\n\n    //execute the computations\n    execute(distsum, sums);\n\n    //compute Pi from the sums \n    final double pi \u003d Bellard.computePi(b, sums);\n    Util.printBitSkipped(b);\n    Util.out.println(Util.pi2string(pi, Bellard.bit2terms(b)));\n    return 0;\n  }",
      "path": "mapreduce/src/examples/org/apache/hadoop/examples/pi/DistBbp.java"
    }
  }
}