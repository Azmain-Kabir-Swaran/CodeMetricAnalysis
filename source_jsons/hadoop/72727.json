{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "KMSClientProvider.java",
  "functionName": "cancelDelegationToken",
  "functionId": "cancelDelegationToken___dToken-Token__?__(modifiers-final)",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/KMSClientProvider.java",
  "functionStartLine": 1086,
  "functionEndLine": 1112,
  "numCommitsSeen": 71,
  "timeTaken": 3630,
  "changeHistory": [
    "5ec86b445cc492f52c33639efb6a09a0d2f27475",
    "a3a1552c33d5650fbd0a702369fccd21b8c9d3e2",
    "583fa6ed48ad3df40bcaa9c591d5ccd07ce3ea81",
    "d0a347984da175948b553a675dc357491df2fd0f",
    "da901b6c1487b2e2184b300e05a7d0f6949d076b",
    "be7237224819e2491aef91cd4f055c7efcf7b90d",
    "713cb71820ad94a5436f35824d07aa12fcba5cc6"
  ],
  "changeHistoryShort": {
    "5ec86b445cc492f52c33639efb6a09a0d2f27475": "Ybodychange",
    "a3a1552c33d5650fbd0a702369fccd21b8c9d3e2": "Ybodychange",
    "583fa6ed48ad3df40bcaa9c591d5ccd07ce3ea81": "Ybodychange",
    "d0a347984da175948b553a675dc357491df2fd0f": "Ybodychange",
    "da901b6c1487b2e2184b300e05a7d0f6949d076b": "Ybodychange",
    "be7237224819e2491aef91cd4f055c7efcf7b90d": "Ybodychange",
    "713cb71820ad94a5436f35824d07aa12fcba5cc6": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5ec86b445cc492f52c33639efb6a09a0d2f27475": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14445. Use DelegationTokenIssuer to create KMS delegation tokens that can authenticate to all KMS instances.\nContributed by Daryn Sharp, Xiao Chen, Rushabh S Shah.\n",
      "commitDate": "12/10/18 9:35 AM",
      "commitName": "5ec86b445cc492f52c33639efb6a09a0d2f27475",
      "commitAuthor": "Xiao Chen",
      "commitDateOld": "10/10/18 9:51 PM",
      "commitNameOld": "7b57f2f71fbaa5af4897309597cca70a95b04edd",
      "commitAuthorOld": "Takanobu Asanuma",
      "daysBetweenCommits": 1.49,
      "commitsBetweenForRepo": 29,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n   public Void cancelDelegationToken(final Token\u003c?\u003e dToken) throws IOException {\n     try {\n       final String doAsUser \u003d getDoAsUser();\n       final DelegationTokenAuthenticatedURL.Token token \u003d\n           generateDelegationToken(dToken);\n       return getActualUgi().doAs(\n           new PrivilegedExceptionAction\u003cVoid\u003e() {\n             @Override\n             public Void run() throws Exception {\n               final URL url \u003d createURL(null, null, null, null);\n               LOG.debug(\"Cancelling delegation token {} with url:{}, as:{}\",\n                   dToken, url, doAsUser);\n               final DelegationTokenAuthenticatedURL authUrl \u003d\n-                  new DelegationTokenAuthenticatedURL(configurator);\n+                  createAuthenticatedURL();\n               authUrl.cancelDelegationToken(url, token, doAsUser);\n               return null;\n             }\n           }\n       );\n     } catch (Exception ex) {\n       if (ex instanceof IOException) {\n         throw (IOException) ex;\n       } else {\n         throw new IOException(ex);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Void cancelDelegationToken(final Token\u003c?\u003e dToken) throws IOException {\n    try {\n      final String doAsUser \u003d getDoAsUser();\n      final DelegationTokenAuthenticatedURL.Token token \u003d\n          generateDelegationToken(dToken);\n      return getActualUgi().doAs(\n          new PrivilegedExceptionAction\u003cVoid\u003e() {\n            @Override\n            public Void run() throws Exception {\n              final URL url \u003d createURL(null, null, null, null);\n              LOG.debug(\"Cancelling delegation token {} with url:{}, as:{}\",\n                  dToken, url, doAsUser);\n              final DelegationTokenAuthenticatedURL authUrl \u003d\n                  createAuthenticatedURL();\n              authUrl.cancelDelegationToken(url, token, doAsUser);\n              return null;\n            }\n          }\n      );\n    } catch (Exception ex) {\n      if (ex instanceof IOException) {\n        throw (IOException) ex;\n      } else {\n        throw new IOException(ex);\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/KMSClientProvider.java",
      "extendedDetails": {}
    },
    "a3a1552c33d5650fbd0a702369fccd21b8c9d3e2": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"HADOOP-14445. Delegation tokens are not shared between KMS instances. Contributed by Xiao Chen and Rushabh S Shah.\"\n\nThis reverts commit 583fa6ed48ad3df40bcaa9c591d5ccd07ce3ea81.\n\n Conflicts:\n\thadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/KMSTokenRenewer.java\n\thadoop-common-project/hadoop-kms/src/test/java/org/apache/hadoop/crypto/key/kms/server/TestKMS.java\n",
      "commitDate": "07/05/18 1:32 PM",
      "commitName": "a3a1552c33d5650fbd0a702369fccd21b8c9d3e2",
      "commitAuthor": "Xiao Chen",
      "commitDateOld": "04/05/18 1:36 PM",
      "commitNameOld": "4cdbdce752e192b45c2b9756c2d4bd24ceffdabd",
      "commitAuthorOld": "Rushabh Shah",
      "daysBetweenCommits": 3.0,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n   public Void cancelDelegationToken(final Token\u003c?\u003e dToken) throws IOException {\n     try {\n       final String doAsUser \u003d getDoAsUser();\n       final DelegationTokenAuthenticatedURL.Token token \u003d\n           generateDelegationToken(dToken);\n       return getActualUgi().doAs(\n           new PrivilegedExceptionAction\u003cVoid\u003e() {\n             @Override\n             public Void run() throws Exception {\n               final URL url \u003d createURL(null, null, null, null);\n               LOG.debug(\"Cancelling delegation token {} with url:{}, as:{}\",\n                   dToken, url, doAsUser);\n               final DelegationTokenAuthenticatedURL authUrl \u003d\n-                  createKMSAuthenticatedURL();\n+                  new DelegationTokenAuthenticatedURL(configurator);\n               authUrl.cancelDelegationToken(url, token, doAsUser);\n               return null;\n             }\n           }\n       );\n     } catch (Exception ex) {\n       if (ex instanceof IOException) {\n         throw (IOException) ex;\n       } else {\n         throw new IOException(ex);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Void cancelDelegationToken(final Token\u003c?\u003e dToken) throws IOException {\n    try {\n      final String doAsUser \u003d getDoAsUser();\n      final DelegationTokenAuthenticatedURL.Token token \u003d\n          generateDelegationToken(dToken);\n      return getActualUgi().doAs(\n          new PrivilegedExceptionAction\u003cVoid\u003e() {\n            @Override\n            public Void run() throws Exception {\n              final URL url \u003d createURL(null, null, null, null);\n              LOG.debug(\"Cancelling delegation token {} with url:{}, as:{}\",\n                  dToken, url, doAsUser);\n              final DelegationTokenAuthenticatedURL authUrl \u003d\n                  new DelegationTokenAuthenticatedURL(configurator);\n              authUrl.cancelDelegationToken(url, token, doAsUser);\n              return null;\n            }\n          }\n      );\n    } catch (Exception ex) {\n      if (ex instanceof IOException) {\n        throw (IOException) ex;\n      } else {\n        throw new IOException(ex);\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/KMSClientProvider.java",
      "extendedDetails": {}
    },
    "583fa6ed48ad3df40bcaa9c591d5ccd07ce3ea81": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14445. Delegation tokens are not shared between KMS instances. Contributed by Xiao Chen and Rushabh S Shah.\n",
      "commitDate": "10/04/18 3:38 PM",
      "commitName": "583fa6ed48ad3df40bcaa9c591d5ccd07ce3ea81",
      "commitAuthor": "Xiao Chen",
      "commitDateOld": "03/11/17 4:10 PM",
      "commitNameOld": "59d78a5088700350a5122c3a3ba5e76cd26d6a80",
      "commitAuthorOld": "Xiaoyu Yao",
      "daysBetweenCommits": 157.98,
      "commitsBetweenForRepo": 1162,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n   public Void cancelDelegationToken(final Token\u003c?\u003e dToken) throws IOException {\n     try {\n       final String doAsUser \u003d getDoAsUser();\n       final DelegationTokenAuthenticatedURL.Token token \u003d\n           generateDelegationToken(dToken);\n       return getActualUgi().doAs(\n           new PrivilegedExceptionAction\u003cVoid\u003e() {\n             @Override\n             public Void run() throws Exception {\n               final URL url \u003d createURL(null, null, null, null);\n               LOG.debug(\"Cancelling delegation token {} with url:{}, as:{}\",\n                   dToken, url, doAsUser);\n               final DelegationTokenAuthenticatedURL authUrl \u003d\n-                  new DelegationTokenAuthenticatedURL(configurator);\n+                  createKMSAuthenticatedURL();\n               authUrl.cancelDelegationToken(url, token, doAsUser);\n               return null;\n             }\n           }\n       );\n     } catch (Exception ex) {\n       if (ex instanceof IOException) {\n         throw (IOException) ex;\n       } else {\n         throw new IOException(ex);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Void cancelDelegationToken(final Token\u003c?\u003e dToken) throws IOException {\n    try {\n      final String doAsUser \u003d getDoAsUser();\n      final DelegationTokenAuthenticatedURL.Token token \u003d\n          generateDelegationToken(dToken);\n      return getActualUgi().doAs(\n          new PrivilegedExceptionAction\u003cVoid\u003e() {\n            @Override\n            public Void run() throws Exception {\n              final URL url \u003d createURL(null, null, null, null);\n              LOG.debug(\"Cancelling delegation token {} with url:{}, as:{}\",\n                  dToken, url, doAsUser);\n              final DelegationTokenAuthenticatedURL authUrl \u003d\n                  createKMSAuthenticatedURL();\n              authUrl.cancelDelegationToken(url, token, doAsUser);\n              return null;\n            }\n          }\n      );\n    } catch (Exception ex) {\n      if (ex instanceof IOException) {\n        throw (IOException) ex;\n      } else {\n        throw new IOException(ex);\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/KMSClientProvider.java",
      "extendedDetails": {}
    },
    "d0a347984da175948b553a675dc357491df2fd0f": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13749. KMSClientProvider combined with KeyProviderCache can result in wrong UGI being used. Contributed by Xiaoyu Yao.\n",
      "commitDate": "23/10/16 10:58 AM",
      "commitName": "d0a347984da175948b553a675dc357491df2fd0f",
      "commitAuthor": "Xiaoyu Yao",
      "commitDateOld": "23/10/16 8:25 AM",
      "commitNameOld": "da901b6c1487b2e2184b300e05a7d0f6949d076b",
      "commitAuthorOld": "Xiaoyu Yao",
      "daysBetweenCommits": 0.11,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n   public Void cancelDelegationToken(final Token\u003c?\u003e dToken) throws IOException {\n     try {\n       final String doAsUser \u003d getDoAsUser();\n       final DelegationTokenAuthenticatedURL.Token token \u003d\n           generateDelegationToken(dToken);\n-      return actualUgi.doAs(\n+      return getActualUgi().doAs(\n           new PrivilegedExceptionAction\u003cVoid\u003e() {\n             @Override\n             public Void run() throws Exception {\n               final URL url \u003d createURL(null, null, null, null);\n               LOG.debug(\"Cancelling delegation token {} with url:{}, as:{}\",\n                   dToken, url, doAsUser);\n               final DelegationTokenAuthenticatedURL authUrl \u003d\n                   new DelegationTokenAuthenticatedURL(configurator);\n               authUrl.cancelDelegationToken(url, token, doAsUser);\n               return null;\n             }\n           }\n       );\n     } catch (Exception ex) {\n       if (ex instanceof IOException) {\n         throw (IOException) ex;\n       } else {\n         throw new IOException(ex);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Void cancelDelegationToken(final Token\u003c?\u003e dToken) throws IOException {\n    try {\n      final String doAsUser \u003d getDoAsUser();\n      final DelegationTokenAuthenticatedURL.Token token \u003d\n          generateDelegationToken(dToken);\n      return getActualUgi().doAs(\n          new PrivilegedExceptionAction\u003cVoid\u003e() {\n            @Override\n            public Void run() throws Exception {\n              final URL url \u003d createURL(null, null, null, null);\n              LOG.debug(\"Cancelling delegation token {} with url:{}, as:{}\",\n                  dToken, url, doAsUser);\n              final DelegationTokenAuthenticatedURL authUrl \u003d\n                  new DelegationTokenAuthenticatedURL(configurator);\n              authUrl.cancelDelegationToken(url, token, doAsUser);\n              return null;\n            }\n          }\n      );\n    } catch (Exception ex) {\n      if (ex instanceof IOException) {\n        throw (IOException) ex;\n      } else {\n        throw new IOException(ex);\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/KMSClientProvider.java",
      "extendedDetails": {}
    },
    "da901b6c1487b2e2184b300e05a7d0f6949d076b": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"HDFS-10757. KMSClientProvider combined with KeyProviderCache can result in wrong UGI being used. Contributed by Xiaoyu Yao.\"\n\nThis reverts commit be7237224819e2491aef91cd4f055c7efcf7b90d.\n",
      "commitDate": "23/10/16 8:25 AM",
      "commitName": "da901b6c1487b2e2184b300e05a7d0f6949d076b",
      "commitAuthor": "Xiaoyu Yao",
      "commitDateOld": "21/10/16 2:23 PM",
      "commitNameOld": "be7237224819e2491aef91cd4f055c7efcf7b90d",
      "commitAuthorOld": "Xiaoyu Yao",
      "daysBetweenCommits": 1.75,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n   public Void cancelDelegationToken(final Token\u003c?\u003e dToken) throws IOException {\n     try {\n       final String doAsUser \u003d getDoAsUser();\n       final DelegationTokenAuthenticatedURL.Token token \u003d\n           generateDelegationToken(dToken);\n-      return getActualUgi().doAs(\n+      return actualUgi.doAs(\n           new PrivilegedExceptionAction\u003cVoid\u003e() {\n             @Override\n             public Void run() throws Exception {\n               final URL url \u003d createURL(null, null, null, null);\n               LOG.debug(\"Cancelling delegation token {} with url:{}, as:{}\",\n                   dToken, url, doAsUser);\n               final DelegationTokenAuthenticatedURL authUrl \u003d\n                   new DelegationTokenAuthenticatedURL(configurator);\n               authUrl.cancelDelegationToken(url, token, doAsUser);\n               return null;\n             }\n           }\n       );\n     } catch (Exception ex) {\n       if (ex instanceof IOException) {\n         throw (IOException) ex;\n       } else {\n         throw new IOException(ex);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Void cancelDelegationToken(final Token\u003c?\u003e dToken) throws IOException {\n    try {\n      final String doAsUser \u003d getDoAsUser();\n      final DelegationTokenAuthenticatedURL.Token token \u003d\n          generateDelegationToken(dToken);\n      return actualUgi.doAs(\n          new PrivilegedExceptionAction\u003cVoid\u003e() {\n            @Override\n            public Void run() throws Exception {\n              final URL url \u003d createURL(null, null, null, null);\n              LOG.debug(\"Cancelling delegation token {} with url:{}, as:{}\",\n                  dToken, url, doAsUser);\n              final DelegationTokenAuthenticatedURL authUrl \u003d\n                  new DelegationTokenAuthenticatedURL(configurator);\n              authUrl.cancelDelegationToken(url, token, doAsUser);\n              return null;\n            }\n          }\n      );\n    } catch (Exception ex) {\n      if (ex instanceof IOException) {\n        throw (IOException) ex;\n      } else {\n        throw new IOException(ex);\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/KMSClientProvider.java",
      "extendedDetails": {}
    },
    "be7237224819e2491aef91cd4f055c7efcf7b90d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10757. KMSClientProvider combined with KeyProviderCache can result in wrong UGI being used. Contributed by Xiaoyu Yao.\n",
      "commitDate": "21/10/16 2:23 PM",
      "commitName": "be7237224819e2491aef91cd4f055c7efcf7b90d",
      "commitAuthor": "Xiaoyu Yao",
      "commitDateOld": "01/08/16 1:35 AM",
      "commitNameOld": "770b5eb2db686275df445be9280e76cc3710ffdc",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 81.53,
      "commitsBetweenForRepo": 558,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n   public Void cancelDelegationToken(final Token\u003c?\u003e dToken) throws IOException {\n     try {\n       final String doAsUser \u003d getDoAsUser();\n       final DelegationTokenAuthenticatedURL.Token token \u003d\n           generateDelegationToken(dToken);\n-      return actualUgi.doAs(\n+      return getActualUgi().doAs(\n           new PrivilegedExceptionAction\u003cVoid\u003e() {\n             @Override\n             public Void run() throws Exception {\n               final URL url \u003d createURL(null, null, null, null);\n               LOG.debug(\"Cancelling delegation token {} with url:{}, as:{}\",\n                   dToken, url, doAsUser);\n               final DelegationTokenAuthenticatedURL authUrl \u003d\n                   new DelegationTokenAuthenticatedURL(configurator);\n               authUrl.cancelDelegationToken(url, token, doAsUser);\n               return null;\n             }\n           }\n       );\n     } catch (Exception ex) {\n       if (ex instanceof IOException) {\n         throw (IOException) ex;\n       } else {\n         throw new IOException(ex);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Void cancelDelegationToken(final Token\u003c?\u003e dToken) throws IOException {\n    try {\n      final String doAsUser \u003d getDoAsUser();\n      final DelegationTokenAuthenticatedURL.Token token \u003d\n          generateDelegationToken(dToken);\n      return getActualUgi().doAs(\n          new PrivilegedExceptionAction\u003cVoid\u003e() {\n            @Override\n            public Void run() throws Exception {\n              final URL url \u003d createURL(null, null, null, null);\n              LOG.debug(\"Cancelling delegation token {} with url:{}, as:{}\",\n                  dToken, url, doAsUser);\n              final DelegationTokenAuthenticatedURL authUrl \u003d\n                  new DelegationTokenAuthenticatedURL(configurator);\n              authUrl.cancelDelegationToken(url, token, doAsUser);\n              return null;\n            }\n          }\n      );\n    } catch (Exception ex) {\n      if (ex instanceof IOException) {\n        throw (IOException) ex;\n      } else {\n        throw new IOException(ex);\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/KMSClientProvider.java",
      "extendedDetails": {}
    },
    "713cb71820ad94a5436f35824d07aa12fcba5cc6": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-13155. Implement TokenRenewer to renew and cancel delegation tokens in KMS. Contributed by Xiao Chen.\n",
      "commitDate": "03/06/16 4:48 PM",
      "commitName": "713cb71820ad94a5436f35824d07aa12fcba5cc6",
      "commitAuthor": "Andrew Wang",
      "diff": "@@ -0,0 +1,27 @@\n+  public Void cancelDelegationToken(final Token\u003c?\u003e dToken) throws IOException {\n+    try {\n+      final String doAsUser \u003d getDoAsUser();\n+      final DelegationTokenAuthenticatedURL.Token token \u003d\n+          generateDelegationToken(dToken);\n+      return actualUgi.doAs(\n+          new PrivilegedExceptionAction\u003cVoid\u003e() {\n+            @Override\n+            public Void run() throws Exception {\n+              final URL url \u003d createURL(null, null, null, null);\n+              LOG.debug(\"Cancelling delegation token {} with url:{}, as:{}\",\n+                  dToken, url, doAsUser);\n+              final DelegationTokenAuthenticatedURL authUrl \u003d\n+                  new DelegationTokenAuthenticatedURL(configurator);\n+              authUrl.cancelDelegationToken(url, token, doAsUser);\n+              return null;\n+            }\n+          }\n+      );\n+    } catch (Exception ex) {\n+      if (ex instanceof IOException) {\n+        throw (IOException) ex;\n+      } else {\n+        throw new IOException(ex);\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Void cancelDelegationToken(final Token\u003c?\u003e dToken) throws IOException {\n    try {\n      final String doAsUser \u003d getDoAsUser();\n      final DelegationTokenAuthenticatedURL.Token token \u003d\n          generateDelegationToken(dToken);\n      return actualUgi.doAs(\n          new PrivilegedExceptionAction\u003cVoid\u003e() {\n            @Override\n            public Void run() throws Exception {\n              final URL url \u003d createURL(null, null, null, null);\n              LOG.debug(\"Cancelling delegation token {} with url:{}, as:{}\",\n                  dToken, url, doAsUser);\n              final DelegationTokenAuthenticatedURL authUrl \u003d\n                  new DelegationTokenAuthenticatedURL(configurator);\n              authUrl.cancelDelegationToken(url, token, doAsUser);\n              return null;\n            }\n          }\n      );\n    } catch (Exception ex) {\n      if (ex instanceof IOException) {\n        throw (IOException) ex;\n      } else {\n        throw new IOException(ex);\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/KMSClientProvider.java"
    }
  }
}