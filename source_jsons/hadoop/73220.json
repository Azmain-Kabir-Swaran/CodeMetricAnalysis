{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HttpServer2.java",
  "functionName": "initSpnego",
  "functionId": "initSpnego___conf-Configuration__hostName-String__usernameConfKey-String__keytabConfKey-String",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer2.java",
  "functionStartLine": 1200,
  "functionEndLine": 1215,
  "numCommitsSeen": 120,
  "timeTaken": 2878,
  "changeHistory": [
    "2860eeb14a958a8861b9ad3d6bd685df48da8cd3",
    "33a47743a5f4263bc21b345587370c5ecf43f5b4",
    "2214871d916fdcae62aa51afbb5fd571f2808745",
    "5770a453f304d83463879db6101da1f1e81e5563"
  ],
  "changeHistoryShort": {
    "2860eeb14a958a8861b9ad3d6bd685df48da8cd3": "Ybodychange",
    "33a47743a5f4263bc21b345587370c5ecf43f5b4": "Yfilerename",
    "2214871d916fdcae62aa51afbb5fd571f2808745": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
    "5770a453f304d83463879db6101da1f1e81e5563": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2860eeb14a958a8861b9ad3d6bd685df48da8cd3": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7555. Remove the support of unmanaged connectors in HttpServer2. Contributed by Haohui Mai.\n",
      "commitDate": "21/12/14 2:45 PM",
      "commitName": "2860eeb14a958a8861b9ad3d6bd685df48da8cd3",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "11/12/14 4:42 PM",
      "commitNameOld": "5b9fcedb4d116d91d70aaad6cbf59093eeee36df",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 9.92,
      "commitsBetweenForRepo": 72,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   private void initSpnego(Configuration conf, String hostName,\n       String usernameConfKey, String keytabConfKey) throws IOException {\n-    Map\u003cString, String\u003e params \u003d new HashMap\u003cString, String\u003e();\n+    Map\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();\n     String principalInConf \u003d conf.get(usernameConfKey);\n     if (principalInConf !\u003d null \u0026\u0026 !principalInConf.isEmpty()) {\n       params.put(\"kerberos.principal\", SecurityUtil.getServerPrincipal(\n           principalInConf, hostName));\n     }\n     String httpKeytab \u003d conf.get(keytabConfKey);\n     if (httpKeytab !\u003d null \u0026\u0026 !httpKeytab.isEmpty()) {\n       params.put(\"kerberos.keytab\", httpKeytab);\n     }\n     params.put(AuthenticationFilter.AUTH_TYPE, \"kerberos\");\n \n     defineFilter(webAppContext, SPNEGO_FILTER,\n                  AuthenticationFilter.class.getName(), params, null);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void initSpnego(Configuration conf, String hostName,\n      String usernameConfKey, String keytabConfKey) throws IOException {\n    Map\u003cString, String\u003e params \u003d new HashMap\u003c\u003e();\n    String principalInConf \u003d conf.get(usernameConfKey);\n    if (principalInConf !\u003d null \u0026\u0026 !principalInConf.isEmpty()) {\n      params.put(\"kerberos.principal\", SecurityUtil.getServerPrincipal(\n          principalInConf, hostName));\n    }\n    String httpKeytab \u003d conf.get(keytabConfKey);\n    if (httpKeytab !\u003d null \u0026\u0026 !httpKeytab.isEmpty()) {\n      params.put(\"kerberos.keytab\", httpKeytab);\n    }\n    params.put(AuthenticationFilter.AUTH_TYPE, \"kerberos\");\n\n    defineFilter(webAppContext, SPNEGO_FILTER,\n                 AuthenticationFilter.class.getName(), params, null);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer2.java",
      "extendedDetails": {}
    },
    "33a47743a5f4263bc21b345587370c5ecf43f5b4": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-10255. Rename HttpServer to HttpServer2 to retain older HttpServer in branch-2 for compatibility. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1561959 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/01/14 11:32 PM",
      "commitName": "33a47743a5f4263bc21b345587370c5ecf43f5b4",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "27/01/14 10:41 PM",
      "commitNameOld": "87166f1ee81dbad579508c2bdbc7dda96b1ef809",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   private void initSpnego(Configuration conf, String hostName,\n       String usernameConfKey, String keytabConfKey) throws IOException {\n     Map\u003cString, String\u003e params \u003d new HashMap\u003cString, String\u003e();\n     String principalInConf \u003d conf.get(usernameConfKey);\n     if (principalInConf !\u003d null \u0026\u0026 !principalInConf.isEmpty()) {\n       params.put(\"kerberos.principal\", SecurityUtil.getServerPrincipal(\n           principalInConf, hostName));\n     }\n     String httpKeytab \u003d conf.get(keytabConfKey);\n     if (httpKeytab !\u003d null \u0026\u0026 !httpKeytab.isEmpty()) {\n       params.put(\"kerberos.keytab\", httpKeytab);\n     }\n     params.put(AuthenticationFilter.AUTH_TYPE, \"kerberos\");\n-  \n+\n     defineFilter(webAppContext, SPNEGO_FILTER,\n                  AuthenticationFilter.class.getName(), params, null);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void initSpnego(Configuration conf, String hostName,\n      String usernameConfKey, String keytabConfKey) throws IOException {\n    Map\u003cString, String\u003e params \u003d new HashMap\u003cString, String\u003e();\n    String principalInConf \u003d conf.get(usernameConfKey);\n    if (principalInConf !\u003d null \u0026\u0026 !principalInConf.isEmpty()) {\n      params.put(\"kerberos.principal\", SecurityUtil.getServerPrincipal(\n          principalInConf, hostName));\n    }\n    String httpKeytab \u003d conf.get(keytabConfKey);\n    if (httpKeytab !\u003d null \u0026\u0026 !httpKeytab.isEmpty()) {\n      params.put(\"kerberos.keytab\", httpKeytab);\n    }\n    params.put(AuthenticationFilter.AUTH_TYPE, \"kerberos\");\n\n    defineFilter(webAppContext, SPNEGO_FILTER,\n                 AuthenticationFilter.class.getName(), params, null);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer2.java",
      "extendedDetails": {
        "oldPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer2.java"
      }
    },
    "2214871d916fdcae62aa51afbb5fd571f2808745": {
      "type": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
      "commitMessage": "HDFS-5545. Allow specifying endpoints for listeners in HttpServer. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1546151 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/11/13 10:20 AM",
      "commitName": "2214871d916fdcae62aa51afbb5fd571f2808745",
      "commitAuthor": "Jing Zhao",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-5545. Allow specifying endpoints for listeners in HttpServer. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1546151 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "27/11/13 10:20 AM",
          "commitName": "2214871d916fdcae62aa51afbb5fd571f2808745",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "20/11/13 1:51 PM",
          "commitNameOld": "3cae2ba63fe6f0765d860677a9bd9f1ea158c1c3",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 6.85,
          "commitsBetweenForRepo": 32,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n-  protected void initSpnego(Configuration conf,\n+  private void initSpnego(Configuration conf, String hostName,\n       String usernameConfKey, String keytabConfKey) throws IOException {\n     Map\u003cString, String\u003e params \u003d new HashMap\u003cString, String\u003e();\n     String principalInConf \u003d conf.get(usernameConfKey);\n     if (principalInConf !\u003d null \u0026\u0026 !principalInConf.isEmpty()) {\n-      params.put(\"kerberos.principal\",\n-                 SecurityUtil.getServerPrincipal(principalInConf, listener.getHost()));\n+      params.put(\"kerberos.principal\", SecurityUtil.getServerPrincipal(\n+          principalInConf, hostName));\n     }\n     String httpKeytab \u003d conf.get(keytabConfKey);\n     if (httpKeytab !\u003d null \u0026\u0026 !httpKeytab.isEmpty()) {\n       params.put(\"kerberos.keytab\", httpKeytab);\n     }\n     params.put(AuthenticationFilter.AUTH_TYPE, \"kerberos\");\n   \n     defineFilter(webAppContext, SPNEGO_FILTER,\n                  AuthenticationFilter.class.getName(), params, null);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void initSpnego(Configuration conf, String hostName,\n      String usernameConfKey, String keytabConfKey) throws IOException {\n    Map\u003cString, String\u003e params \u003d new HashMap\u003cString, String\u003e();\n    String principalInConf \u003d conf.get(usernameConfKey);\n    if (principalInConf !\u003d null \u0026\u0026 !principalInConf.isEmpty()) {\n      params.put(\"kerberos.principal\", SecurityUtil.getServerPrincipal(\n          principalInConf, hostName));\n    }\n    String httpKeytab \u003d conf.get(keytabConfKey);\n    if (httpKeytab !\u003d null \u0026\u0026 !httpKeytab.isEmpty()) {\n      params.put(\"kerberos.keytab\", httpKeytab);\n    }\n    params.put(AuthenticationFilter.AUTH_TYPE, \"kerberos\");\n  \n    defineFilter(webAppContext, SPNEGO_FILTER,\n                 AuthenticationFilter.class.getName(), params, null);\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer.java",
          "extendedDetails": {
            "oldValue": "[conf-Configuration, usernameConfKey-String, keytabConfKey-String]",
            "newValue": "[conf-Configuration, hostName-String, usernameConfKey-String, keytabConfKey-String]"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-5545. Allow specifying endpoints for listeners in HttpServer. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1546151 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "27/11/13 10:20 AM",
          "commitName": "2214871d916fdcae62aa51afbb5fd571f2808745",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "20/11/13 1:51 PM",
          "commitNameOld": "3cae2ba63fe6f0765d860677a9bd9f1ea158c1c3",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 6.85,
          "commitsBetweenForRepo": 32,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n-  protected void initSpnego(Configuration conf,\n+  private void initSpnego(Configuration conf, String hostName,\n       String usernameConfKey, String keytabConfKey) throws IOException {\n     Map\u003cString, String\u003e params \u003d new HashMap\u003cString, String\u003e();\n     String principalInConf \u003d conf.get(usernameConfKey);\n     if (principalInConf !\u003d null \u0026\u0026 !principalInConf.isEmpty()) {\n-      params.put(\"kerberos.principal\",\n-                 SecurityUtil.getServerPrincipal(principalInConf, listener.getHost()));\n+      params.put(\"kerberos.principal\", SecurityUtil.getServerPrincipal(\n+          principalInConf, hostName));\n     }\n     String httpKeytab \u003d conf.get(keytabConfKey);\n     if (httpKeytab !\u003d null \u0026\u0026 !httpKeytab.isEmpty()) {\n       params.put(\"kerberos.keytab\", httpKeytab);\n     }\n     params.put(AuthenticationFilter.AUTH_TYPE, \"kerberos\");\n   \n     defineFilter(webAppContext, SPNEGO_FILTER,\n                  AuthenticationFilter.class.getName(), params, null);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void initSpnego(Configuration conf, String hostName,\n      String usernameConfKey, String keytabConfKey) throws IOException {\n    Map\u003cString, String\u003e params \u003d new HashMap\u003cString, String\u003e();\n    String principalInConf \u003d conf.get(usernameConfKey);\n    if (principalInConf !\u003d null \u0026\u0026 !principalInConf.isEmpty()) {\n      params.put(\"kerberos.principal\", SecurityUtil.getServerPrincipal(\n          principalInConf, hostName));\n    }\n    String httpKeytab \u003d conf.get(keytabConfKey);\n    if (httpKeytab !\u003d null \u0026\u0026 !httpKeytab.isEmpty()) {\n      params.put(\"kerberos.keytab\", httpKeytab);\n    }\n    params.put(AuthenticationFilter.AUTH_TYPE, \"kerberos\");\n  \n    defineFilter(webAppContext, SPNEGO_FILTER,\n                 AuthenticationFilter.class.getName(), params, null);\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer.java",
          "extendedDetails": {
            "oldValue": "[protected]",
            "newValue": "[private]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-5545. Allow specifying endpoints for listeners in HttpServer. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1546151 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "27/11/13 10:20 AM",
          "commitName": "2214871d916fdcae62aa51afbb5fd571f2808745",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "20/11/13 1:51 PM",
          "commitNameOld": "3cae2ba63fe6f0765d860677a9bd9f1ea158c1c3",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 6.85,
          "commitsBetweenForRepo": 32,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n-  protected void initSpnego(Configuration conf,\n+  private void initSpnego(Configuration conf, String hostName,\n       String usernameConfKey, String keytabConfKey) throws IOException {\n     Map\u003cString, String\u003e params \u003d new HashMap\u003cString, String\u003e();\n     String principalInConf \u003d conf.get(usernameConfKey);\n     if (principalInConf !\u003d null \u0026\u0026 !principalInConf.isEmpty()) {\n-      params.put(\"kerberos.principal\",\n-                 SecurityUtil.getServerPrincipal(principalInConf, listener.getHost()));\n+      params.put(\"kerberos.principal\", SecurityUtil.getServerPrincipal(\n+          principalInConf, hostName));\n     }\n     String httpKeytab \u003d conf.get(keytabConfKey);\n     if (httpKeytab !\u003d null \u0026\u0026 !httpKeytab.isEmpty()) {\n       params.put(\"kerberos.keytab\", httpKeytab);\n     }\n     params.put(AuthenticationFilter.AUTH_TYPE, \"kerberos\");\n   \n     defineFilter(webAppContext, SPNEGO_FILTER,\n                  AuthenticationFilter.class.getName(), params, null);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void initSpnego(Configuration conf, String hostName,\n      String usernameConfKey, String keytabConfKey) throws IOException {\n    Map\u003cString, String\u003e params \u003d new HashMap\u003cString, String\u003e();\n    String principalInConf \u003d conf.get(usernameConfKey);\n    if (principalInConf !\u003d null \u0026\u0026 !principalInConf.isEmpty()) {\n      params.put(\"kerberos.principal\", SecurityUtil.getServerPrincipal(\n          principalInConf, hostName));\n    }\n    String httpKeytab \u003d conf.get(keytabConfKey);\n    if (httpKeytab !\u003d null \u0026\u0026 !httpKeytab.isEmpty()) {\n      params.put(\"kerberos.keytab\", httpKeytab);\n    }\n    params.put(AuthenticationFilter.AUTH_TYPE, \"kerberos\");\n  \n    defineFilter(webAppContext, SPNEGO_FILTER,\n                 AuthenticationFilter.class.getName(), params, null);\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer.java",
          "extendedDetails": {}
        }
      ]
    },
    "5770a453f304d83463879db6101da1f1e81e5563": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-3572. Cleanup code which inits SPNEGO in HttpServer. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1354767 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/06/12 3:41 PM",
      "commitName": "5770a453f304d83463879db6101da1f1e81e5563",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,17 @@\n+  protected void initSpnego(Configuration conf,\n+      String usernameConfKey, String keytabConfKey) throws IOException {\n+    Map\u003cString, String\u003e params \u003d new HashMap\u003cString, String\u003e();\n+    String principalInConf \u003d conf.get(usernameConfKey);\n+    if (principalInConf !\u003d null \u0026\u0026 !principalInConf.isEmpty()) {\n+      params.put(\"kerberos.principal\",\n+                 SecurityUtil.getServerPrincipal(principalInConf, listener.getHost()));\n+    }\n+    String httpKeytab \u003d conf.get(keytabConfKey);\n+    if (httpKeytab !\u003d null \u0026\u0026 !httpKeytab.isEmpty()) {\n+      params.put(\"kerberos.keytab\", httpKeytab);\n+    }\n+    params.put(AuthenticationFilter.AUTH_TYPE, \"kerberos\");\n+  \n+    defineFilter(webAppContext, SPNEGO_FILTER,\n+                 AuthenticationFilter.class.getName(), params, null);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void initSpnego(Configuration conf,\n      String usernameConfKey, String keytabConfKey) throws IOException {\n    Map\u003cString, String\u003e params \u003d new HashMap\u003cString, String\u003e();\n    String principalInConf \u003d conf.get(usernameConfKey);\n    if (principalInConf !\u003d null \u0026\u0026 !principalInConf.isEmpty()) {\n      params.put(\"kerberos.principal\",\n                 SecurityUtil.getServerPrincipal(principalInConf, listener.getHost()));\n    }\n    String httpKeytab \u003d conf.get(keytabConfKey);\n    if (httpKeytab !\u003d null \u0026\u0026 !httpKeytab.isEmpty()) {\n      params.put(\"kerberos.keytab\", httpKeytab);\n    }\n    params.put(AuthenticationFilter.AUTH_TYPE, \"kerberos\");\n  \n    defineFilter(webAppContext, SPNEGO_FILTER,\n                 AuthenticationFilter.class.getName(), params, null);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer.java"
    }
  }
}