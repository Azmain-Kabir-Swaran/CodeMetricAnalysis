{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSNamesystem.java",
  "functionName": "listXAttrs",
  "functionId": "listXAttrs___src-String",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
  "functionStartLine": 8327,
  "functionEndLine": 8347,
  "numCommitsSeen": 873,
  "timeTaken": 34792,
  "changeHistory": [
    "1824aee9da4056de0fb638906b2172e486bbebe7",
    "4b95c242eca540455a4d5d0899aaf73b6064b5ea",
    "f600fbb6c4987c69292faea6b5abf022bb213ffd",
    "84a1321f6aa0af6895564a7c47f8f264656f0294",
    "ff0b99eafeda035ebe0dc82cfe689808047a8893",
    "d27d7fc72e279614212c1eae52a84675073e89fb",
    "6c5bbd7a42d1e8b4416fd8870fd60c67867b35c9",
    "475c6b4978045d55d1ebcea69cc9a2f24355aca2",
    "6a5596e3b4443462fc86f800b3c2eb839d44c3bd",
    "c95b878abf313507666ea018f9e6033c4c166e10",
    "9ca2f34c8fb03227e7364ced5183562e9f805400",
    "407bb3d3e452c8277c498dd14e0cc5b7762a7091",
    "9bce3eca42b40f9b1f9fc23fc4418ed23b7beda5"
  ],
  "changeHistoryShort": {
    "1824aee9da4056de0fb638906b2172e486bbebe7": "Ybodychange",
    "4b95c242eca540455a4d5d0899aaf73b6064b5ea": "Ybodychange",
    "f600fbb6c4987c69292faea6b5abf022bb213ffd": "Ybodychange",
    "84a1321f6aa0af6895564a7c47f8f264656f0294": "Ybodychange",
    "ff0b99eafeda035ebe0dc82cfe689808047a8893": "Ybodychange",
    "d27d7fc72e279614212c1eae52a84675073e89fb": "Ybodychange",
    "6c5bbd7a42d1e8b4416fd8870fd60c67867b35c9": "Ybodychange",
    "475c6b4978045d55d1ebcea69cc9a2f24355aca2": "Ybodychange",
    "6a5596e3b4443462fc86f800b3c2eb839d44c3bd": "Ybodychange",
    "c95b878abf313507666ea018f9e6033c4c166e10": "Ybodychange",
    "9ca2f34c8fb03227e7364ced5183562e9f805400": "Ybodychange",
    "407bb3d3e452c8277c498dd14e0cc5b7762a7091": "Ybodychange",
    "9bce3eca42b40f9b1f9fc23fc4418ed23b7beda5": "Ybodychange"
  },
  "changeHistoryDetails": {
    "1824aee9da4056de0fb638906b2172e486bbebe7": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-15217 Add more information to longest write/read lock held log\n\n",
      "commitDate": "18/04/20 1:52 PM",
      "commitName": "1824aee9da4056de0fb638906b2172e486bbebe7",
      "commitAuthor": "Toshihiro Suzuki",
      "commitDateOld": "25/03/20 10:28 AM",
      "commitNameOld": "a700803a18fb957d2799001a2ce1dcb70f75c080",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 24.14,
      "commitsBetweenForRepo": 78,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n   List\u003cXAttr\u003e listXAttrs(String src) throws IOException {\n     final String operationName \u003d \"listXAttrs\";\n     checkOperation(OperationCategory.READ);\n     List\u003cXAttr\u003e fsXattrs;\n     final FSPermissionChecker pc \u003d getPermissionChecker();\n     FSPermissionChecker.setOperationType(operationName);\n     try {\n       readLock();\n       try {\n         checkOperation(OperationCategory.READ);\n         fsXattrs \u003d FSDirXAttrOp.listXAttrs(dir, pc, src);\n       } finally {\n-        readUnlock(operationName);\n+        readUnlock(operationName, getLockReportInfoSupplier(src));\n       }\n     } catch (AccessControlException e) {\n       logAuditEvent(false, operationName, src);\n       throw e;\n     }\n     logAuditEvent(true, operationName, src);\n     return fsXattrs;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  List\u003cXAttr\u003e listXAttrs(String src) throws IOException {\n    final String operationName \u003d \"listXAttrs\";\n    checkOperation(OperationCategory.READ);\n    List\u003cXAttr\u003e fsXattrs;\n    final FSPermissionChecker pc \u003d getPermissionChecker();\n    FSPermissionChecker.setOperationType(operationName);\n    try {\n      readLock();\n      try {\n        checkOperation(OperationCategory.READ);\n        fsXattrs \u003d FSDirXAttrOp.listXAttrs(dir, pc, src);\n      } finally {\n        readUnlock(operationName, getLockReportInfoSupplier(src));\n      }\n    } catch (AccessControlException e) {\n      logAuditEvent(false, operationName, src);\n      throw e;\n    }\n    logAuditEvent(true, operationName, src);\n    return fsXattrs;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "4b95c242eca540455a4d5d0899aaf73b6064b5ea": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14743. Enhance INodeAttributeProvider/ AccessControlEnforcer Interface in HDFS to support Authorization of mkdir, rm, rmdir, copy, move etc... (#1829)\n\nReviewed-by: Xiaoyu Yao \u003cxyao@apache.org\u003e",
      "commitDate": "13/03/20 11:29 AM",
      "commitName": "4b95c242eca540455a4d5d0899aaf73b6064b5ea",
      "commitAuthor": "Wei-Chiu Chuang",
      "commitDateOld": "27/02/20 8:49 AM",
      "commitNameOld": "cd2c6b1aac470991b9b90339ce2721ba179e7c48",
      "commitAuthorOld": "Ayush Saxena",
      "daysBetweenCommits": 15.07,
      "commitsBetweenForRepo": 51,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,21 @@\n   List\u003cXAttr\u003e listXAttrs(String src) throws IOException {\n     final String operationName \u003d \"listXAttrs\";\n     checkOperation(OperationCategory.READ);\n     List\u003cXAttr\u003e fsXattrs;\n     final FSPermissionChecker pc \u003d getPermissionChecker();\n+    FSPermissionChecker.setOperationType(operationName);\n     try {\n       readLock();\n       try {\n         checkOperation(OperationCategory.READ);\n         fsXattrs \u003d FSDirXAttrOp.listXAttrs(dir, pc, src);\n       } finally {\n         readUnlock(operationName);\n       }\n     } catch (AccessControlException e) {\n       logAuditEvent(false, operationName, src);\n       throw e;\n     }\n     logAuditEvent(true, operationName, src);\n     return fsXattrs;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  List\u003cXAttr\u003e listXAttrs(String src) throws IOException {\n    final String operationName \u003d \"listXAttrs\";\n    checkOperation(OperationCategory.READ);\n    List\u003cXAttr\u003e fsXattrs;\n    final FSPermissionChecker pc \u003d getPermissionChecker();\n    FSPermissionChecker.setOperationType(operationName);\n    try {\n      readLock();\n      try {\n        checkOperation(OperationCategory.READ);\n        fsXattrs \u003d FSDirXAttrOp.listXAttrs(dir, pc, src);\n      } finally {\n        readUnlock(operationName);\n      }\n    } catch (AccessControlException e) {\n      logAuditEvent(false, operationName, src);\n      throw e;\n    }\n    logAuditEvent(true, operationName, src);\n    return fsXattrs;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "f600fbb6c4987c69292faea6b5abf022bb213ffd": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11246. FSNameSystem#logAuditEvent should be called outside the read or write locks. Contributed by He Xiaoqiao, Kuhu Shukla.\n\nSigned-off-by: Wei-Chiu Chuang \u003cweichiu@apache.org\u003e\nCo-authored-by: Kuhu Shukla \u003ckshukla@apache.org\u003e\n",
      "commitDate": "29/08/19 10:10 AM",
      "commitName": "f600fbb6c4987c69292faea6b5abf022bb213ffd",
      "commitAuthor": "He Xiaoqiao",
      "commitDateOld": "27/08/19 3:26 PM",
      "commitNameOld": "dde9399b37bffb77da17c025f0b9b673d7088bc6",
      "commitAuthorOld": "He Xiaoqiao",
      "daysBetweenCommits": 1.78,
      "commitsBetweenForRepo": 27,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,20 @@\n   List\u003cXAttr\u003e listXAttrs(String src) throws IOException {\n     final String operationName \u003d \"listXAttrs\";\n     checkOperation(OperationCategory.READ);\n     List\u003cXAttr\u003e fsXattrs;\n     final FSPermissionChecker pc \u003d getPermissionChecker();\n-    readLock();\n     try {\n-      checkOperation(OperationCategory.READ);\n-      fsXattrs \u003d FSDirXAttrOp.listXAttrs(dir, pc, src);\n+      readLock();\n+      try {\n+        checkOperation(OperationCategory.READ);\n+        fsXattrs \u003d FSDirXAttrOp.listXAttrs(dir, pc, src);\n+      } finally {\n+        readUnlock(operationName);\n+      }\n     } catch (AccessControlException e) {\n       logAuditEvent(false, operationName, src);\n       throw e;\n-    } finally {\n-      readUnlock(operationName);\n     }\n     logAuditEvent(true, operationName, src);\n     return fsXattrs;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  List\u003cXAttr\u003e listXAttrs(String src) throws IOException {\n    final String operationName \u003d \"listXAttrs\";\n    checkOperation(OperationCategory.READ);\n    List\u003cXAttr\u003e fsXattrs;\n    final FSPermissionChecker pc \u003d getPermissionChecker();\n    try {\n      readLock();\n      try {\n        checkOperation(OperationCategory.READ);\n        fsXattrs \u003d FSDirXAttrOp.listXAttrs(dir, pc, src);\n      } finally {\n        readUnlock(operationName);\n      }\n    } catch (AccessControlException e) {\n      logAuditEvent(false, operationName, src);\n      throw e;\n    }\n    logAuditEvent(true, operationName, src);\n    return fsXattrs;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "84a1321f6aa0af6895564a7c47f8f264656f0294": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13136. Avoid taking FSN lock while doing group member lookup for FSD permission check. Contributed by Xiaoyu Yao.\n",
      "commitDate": "22/02/18 11:32 AM",
      "commitName": "84a1321f6aa0af6895564a7c47f8f264656f0294",
      "commitAuthor": "Xiaoyu Yao",
      "commitDateOld": "15/02/18 1:32 PM",
      "commitNameOld": "47473952e56b0380147d42f4110ad03c2276c961",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 6.92,
      "commitsBetweenForRepo": 36,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,18 @@\n   List\u003cXAttr\u003e listXAttrs(String src) throws IOException {\n     final String operationName \u003d \"listXAttrs\";\n     checkOperation(OperationCategory.READ);\n     List\u003cXAttr\u003e fsXattrs;\n+    final FSPermissionChecker pc \u003d getPermissionChecker();\n     readLock();\n     try {\n       checkOperation(OperationCategory.READ);\n-      fsXattrs \u003d FSDirXAttrOp.listXAttrs(dir, src);\n+      fsXattrs \u003d FSDirXAttrOp.listXAttrs(dir, pc, src);\n     } catch (AccessControlException e) {\n       logAuditEvent(false, operationName, src);\n       throw e;\n     } finally {\n       readUnlock(operationName);\n     }\n     logAuditEvent(true, operationName, src);\n     return fsXattrs;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  List\u003cXAttr\u003e listXAttrs(String src) throws IOException {\n    final String operationName \u003d \"listXAttrs\";\n    checkOperation(OperationCategory.READ);\n    List\u003cXAttr\u003e fsXattrs;\n    final FSPermissionChecker pc \u003d getPermissionChecker();\n    readLock();\n    try {\n      checkOperation(OperationCategory.READ);\n      fsXattrs \u003d FSDirXAttrOp.listXAttrs(dir, pc, src);\n    } catch (AccessControlException e) {\n      logAuditEvent(false, operationName, src);\n      throw e;\n    } finally {\n      readUnlock(operationName);\n    }\n    logAuditEvent(true, operationName, src);\n    return fsXattrs;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "ff0b99eafeda035ebe0dc82cfe689808047a8893": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10872. Add MutableRate metrics for FSNamesystemLock operations. Contributed by Erik Krogen.\n",
      "commitDate": "14/11/16 11:05 AM",
      "commitName": "ff0b99eafeda035ebe0dc82cfe689808047a8893",
      "commitAuthor": "Zhe Zhang",
      "commitDateOld": "08/11/16 6:17 PM",
      "commitNameOld": "ed0bebabaaf27cd730f7f8eb002d92c9c7db327d",
      "commitAuthorOld": "Brahma Reddy Battula",
      "daysBetweenCommits": 5.7,
      "commitsBetweenForRepo": 36,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,17 @@\n   List\u003cXAttr\u003e listXAttrs(String src) throws IOException {\n+    final String operationName \u003d \"listXAttrs\";\n     checkOperation(OperationCategory.READ);\n     List\u003cXAttr\u003e fsXattrs;\n     readLock();\n     try {\n       checkOperation(OperationCategory.READ);\n       fsXattrs \u003d FSDirXAttrOp.listXAttrs(dir, src);\n     } catch (AccessControlException e) {\n-      logAuditEvent(false, \"listXAttrs\", src);\n+      logAuditEvent(false, operationName, src);\n       throw e;\n     } finally {\n-      readUnlock();\n+      readUnlock(operationName);\n     }\n-    logAuditEvent(true, \"listXAttrs\", src);\n+    logAuditEvent(true, operationName, src);\n     return fsXattrs;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  List\u003cXAttr\u003e listXAttrs(String src) throws IOException {\n    final String operationName \u003d \"listXAttrs\";\n    checkOperation(OperationCategory.READ);\n    List\u003cXAttr\u003e fsXattrs;\n    readLock();\n    try {\n      checkOperation(OperationCategory.READ);\n      fsXattrs \u003d FSDirXAttrOp.listXAttrs(dir, src);\n    } catch (AccessControlException e) {\n      logAuditEvent(false, operationName, src);\n      throw e;\n    } finally {\n      readUnlock(operationName);\n    }\n    logAuditEvent(true, operationName, src);\n    return fsXattrs;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "d27d7fc72e279614212c1eae52a84675073e89fb": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9395. Make HDFS audit logging consistant. Contributed by Kuhu Shukla.\n",
      "commitDate": "24/02/16 10:04 AM",
      "commitName": "d27d7fc72e279614212c1eae52a84675073e89fb",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "21/02/16 7:51 PM",
      "commitNameOld": "f313516731d787f6be64c9406ca83d941d47ee99",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 2.59,
      "commitsBetweenForRepo": 23,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,16 @@\n   List\u003cXAttr\u003e listXAttrs(String src) throws IOException {\n     checkOperation(OperationCategory.READ);\n+    List\u003cXAttr\u003e fsXattrs;\n     readLock();\n     try {\n       checkOperation(OperationCategory.READ);\n-      return FSDirXAttrOp.listXAttrs(dir, src);\n+      fsXattrs \u003d FSDirXAttrOp.listXAttrs(dir, src);\n     } catch (AccessControlException e) {\n       logAuditEvent(false, \"listXAttrs\", src);\n       throw e;\n     } finally {\n       readUnlock();\n     }\n+    logAuditEvent(true, \"listXAttrs\", src);\n+    return fsXattrs;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  List\u003cXAttr\u003e listXAttrs(String src) throws IOException {\n    checkOperation(OperationCategory.READ);\n    List\u003cXAttr\u003e fsXattrs;\n    readLock();\n    try {\n      checkOperation(OperationCategory.READ);\n      fsXattrs \u003d FSDirXAttrOp.listXAttrs(dir, src);\n    } catch (AccessControlException e) {\n      logAuditEvent(false, \"listXAttrs\", src);\n      throw e;\n    } finally {\n      readUnlock();\n    }\n    logAuditEvent(true, \"listXAttrs\", src);\n    return fsXattrs;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "6c5bbd7a42d1e8b4416fd8870fd60c67867b35c9": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7486. Consolidate XAttr-related implementation into a single class. Contributed by Haohui Mai.\n",
      "commitDate": "08/12/14 11:52 AM",
      "commitName": "6c5bbd7a42d1e8b4416fd8870fd60c67867b35c9",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "06/12/14 2:20 PM",
      "commitNameOld": "9297f980c2de8886ff970946a2513e6890cd5552",
      "commitAuthorOld": "cnauroth",
      "daysBetweenCommits": 1.9,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,13 @@\n   List\u003cXAttr\u003e listXAttrs(String src) throws IOException {\n-    checkXAttrsConfigFlag();\n-    final FSPermissionChecker pc \u003d getPermissionChecker();\n-    final boolean isRawPath \u003d FSDirectory.isReservedRawName(src);\n     checkOperation(OperationCategory.READ);\n-    byte[][] pathComponents \u003d FSDirectory.getPathComponentsForReservedPath(src);\n     readLock();\n     try {\n       checkOperation(OperationCategory.READ);\n-      src \u003d dir.resolvePath(pc, src, pathComponents);\n-      final INodesInPath iip \u003d dir.getINodesInPath(src, true);\n-      if (isPermissionEnabled) {\n-        /* To access xattr names, you need EXECUTE in the owning directory. */\n-        dir.checkParentAccess(pc, iip, FsAction.EXECUTE);\n-      }\n-      final List\u003cXAttr\u003e all \u003d dir.getXAttrs(src);\n-      return XAttrPermissionFilter.\n-        filterXAttrsForApi(pc, all, isRawPath);\n+      return FSDirXAttrOp.listXAttrs(dir, src);\n     } catch (AccessControlException e) {\n       logAuditEvent(false, \"listXAttrs\", src);\n       throw e;\n     } finally {\n       readUnlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  List\u003cXAttr\u003e listXAttrs(String src) throws IOException {\n    checkOperation(OperationCategory.READ);\n    readLock();\n    try {\n      checkOperation(OperationCategory.READ);\n      return FSDirXAttrOp.listXAttrs(dir, src);\n    } catch (AccessControlException e) {\n      logAuditEvent(false, \"listXAttrs\", src);\n      throw e;\n    } finally {\n      readUnlock();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "475c6b4978045d55d1ebcea69cc9a2f24355aca2": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7474. Avoid resolving path in FSPermissionChecker. Contributed by Jing Zhao.\n",
      "commitDate": "05/12/14 2:17 PM",
      "commitName": "475c6b4978045d55d1ebcea69cc9a2f24355aca2",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "05/12/14 10:55 AM",
      "commitNameOld": "6a5596e3b4443462fc86f800b3c2eb839d44c3bd",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 0.14,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n   List\u003cXAttr\u003e listXAttrs(String src) throws IOException {\n     checkXAttrsConfigFlag();\n     final FSPermissionChecker pc \u003d getPermissionChecker();\n     final boolean isRawPath \u003d FSDirectory.isReservedRawName(src);\n     checkOperation(OperationCategory.READ);\n     byte[][] pathComponents \u003d FSDirectory.getPathComponentsForReservedPath(src);\n     readLock();\n     try {\n-      src \u003d dir.resolvePath(pc, src, pathComponents);\n       checkOperation(OperationCategory.READ);\n+      src \u003d dir.resolvePath(pc, src, pathComponents);\n+      final INodesInPath iip \u003d dir.getINodesInPath(src, true);\n       if (isPermissionEnabled) {\n         /* To access xattr names, you need EXECUTE in the owning directory. */\n-        checkParentAccess(pc, src, FsAction.EXECUTE);\n+        dir.checkParentAccess(pc, iip, FsAction.EXECUTE);\n       }\n       final List\u003cXAttr\u003e all \u003d dir.getXAttrs(src);\n-      final List\u003cXAttr\u003e filteredAll \u003d XAttrPermissionFilter.\n+      return XAttrPermissionFilter.\n         filterXAttrsForApi(pc, all, isRawPath);\n-      return filteredAll;\n     } catch (AccessControlException e) {\n       logAuditEvent(false, \"listXAttrs\", src);\n       throw e;\n     } finally {\n       readUnlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  List\u003cXAttr\u003e listXAttrs(String src) throws IOException {\n    checkXAttrsConfigFlag();\n    final FSPermissionChecker pc \u003d getPermissionChecker();\n    final boolean isRawPath \u003d FSDirectory.isReservedRawName(src);\n    checkOperation(OperationCategory.READ);\n    byte[][] pathComponents \u003d FSDirectory.getPathComponentsForReservedPath(src);\n    readLock();\n    try {\n      checkOperation(OperationCategory.READ);\n      src \u003d dir.resolvePath(pc, src, pathComponents);\n      final INodesInPath iip \u003d dir.getINodesInPath(src, true);\n      if (isPermissionEnabled) {\n        /* To access xattr names, you need EXECUTE in the owning directory. */\n        dir.checkParentAccess(pc, iip, FsAction.EXECUTE);\n      }\n      final List\u003cXAttr\u003e all \u003d dir.getXAttrs(src);\n      return XAttrPermissionFilter.\n        filterXAttrsForApi(pc, all, isRawPath);\n    } catch (AccessControlException e) {\n      logAuditEvent(false, \"listXAttrs\", src);\n      throw e;\n    } finally {\n      readUnlock();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "6a5596e3b4443462fc86f800b3c2eb839d44c3bd": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7478. Move org.apache.hadoop.hdfs.server.namenode.NNConf to FSNamesystem. Contributed by Li Lu.\n",
      "commitDate": "05/12/14 10:55 AM",
      "commitName": "6a5596e3b4443462fc86f800b3c2eb839d44c3bd",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "02/12/14 2:53 PM",
      "commitNameOld": "185e0c7b4c056b88f606362c71e4a22aae7076e0",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 2.83,
      "commitsBetweenForRepo": 22,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n   List\u003cXAttr\u003e listXAttrs(String src) throws IOException {\n-    nnConf.checkXAttrsConfigFlag();\n+    checkXAttrsConfigFlag();\n     final FSPermissionChecker pc \u003d getPermissionChecker();\n     final boolean isRawPath \u003d FSDirectory.isReservedRawName(src);\n     checkOperation(OperationCategory.READ);\n     byte[][] pathComponents \u003d FSDirectory.getPathComponentsForReservedPath(src);\n     readLock();\n     try {\n       src \u003d dir.resolvePath(pc, src, pathComponents);\n       checkOperation(OperationCategory.READ);\n       if (isPermissionEnabled) {\n         /* To access xattr names, you need EXECUTE in the owning directory. */\n         checkParentAccess(pc, src, FsAction.EXECUTE);\n       }\n       final List\u003cXAttr\u003e all \u003d dir.getXAttrs(src);\n       final List\u003cXAttr\u003e filteredAll \u003d XAttrPermissionFilter.\n         filterXAttrsForApi(pc, all, isRawPath);\n       return filteredAll;\n     } catch (AccessControlException e) {\n       logAuditEvent(false, \"listXAttrs\", src);\n       throw e;\n     } finally {\n       readUnlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  List\u003cXAttr\u003e listXAttrs(String src) throws IOException {\n    checkXAttrsConfigFlag();\n    final FSPermissionChecker pc \u003d getPermissionChecker();\n    final boolean isRawPath \u003d FSDirectory.isReservedRawName(src);\n    checkOperation(OperationCategory.READ);\n    byte[][] pathComponents \u003d FSDirectory.getPathComponentsForReservedPath(src);\n    readLock();\n    try {\n      src \u003d dir.resolvePath(pc, src, pathComponents);\n      checkOperation(OperationCategory.READ);\n      if (isPermissionEnabled) {\n        /* To access xattr names, you need EXECUTE in the owning directory. */\n        checkParentAccess(pc, src, FsAction.EXECUTE);\n      }\n      final List\u003cXAttr\u003e all \u003d dir.getXAttrs(src);\n      final List\u003cXAttr\u003e filteredAll \u003d XAttrPermissionFilter.\n        filterXAttrsForApi(pc, all, isRawPath);\n      return filteredAll;\n    } catch (AccessControlException e) {\n      logAuditEvent(false, \"listXAttrs\", src);\n      throw e;\n    } finally {\n      readUnlock();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "c95b878abf313507666ea018f9e6033c4c166e10": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7415. Move FSNameSystem.resolvePath() to FSDirectory. Contributed by Haohui Mai.\n",
      "commitDate": "20/11/14 7:23 PM",
      "commitName": "c95b878abf313507666ea018f9e6033c4c166e10",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "17/11/14 5:33 PM",
      "commitNameOld": "dcb8e24427b02e2f3ff9a12d2eb1eb878e3443bb",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 3.08,
      "commitsBetweenForRepo": 22,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n   List\u003cXAttr\u003e listXAttrs(String src) throws IOException {\n     nnConf.checkXAttrsConfigFlag();\n     final FSPermissionChecker pc \u003d getPermissionChecker();\n     final boolean isRawPath \u003d FSDirectory.isReservedRawName(src);\n     checkOperation(OperationCategory.READ);\n     byte[][] pathComponents \u003d FSDirectory.getPathComponentsForReservedPath(src);\n     readLock();\n     try {\n-      src \u003d resolvePath(src, pathComponents);\n+      src \u003d dir.resolvePath(pc, src, pathComponents);\n       checkOperation(OperationCategory.READ);\n       if (isPermissionEnabled) {\n         /* To access xattr names, you need EXECUTE in the owning directory. */\n         checkParentAccess(pc, src, FsAction.EXECUTE);\n       }\n       final List\u003cXAttr\u003e all \u003d dir.getXAttrs(src);\n       final List\u003cXAttr\u003e filteredAll \u003d XAttrPermissionFilter.\n         filterXAttrsForApi(pc, all, isRawPath);\n       return filteredAll;\n     } catch (AccessControlException e) {\n       logAuditEvent(false, \"listXAttrs\", src);\n       throw e;\n     } finally {\n       readUnlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  List\u003cXAttr\u003e listXAttrs(String src) throws IOException {\n    nnConf.checkXAttrsConfigFlag();\n    final FSPermissionChecker pc \u003d getPermissionChecker();\n    final boolean isRawPath \u003d FSDirectory.isReservedRawName(src);\n    checkOperation(OperationCategory.READ);\n    byte[][] pathComponents \u003d FSDirectory.getPathComponentsForReservedPath(src);\n    readLock();\n    try {\n      src \u003d dir.resolvePath(pc, src, pathComponents);\n      checkOperation(OperationCategory.READ);\n      if (isPermissionEnabled) {\n        /* To access xattr names, you need EXECUTE in the owning directory. */\n        checkParentAccess(pc, src, FsAction.EXECUTE);\n      }\n      final List\u003cXAttr\u003e all \u003d dir.getXAttrs(src);\n      final List\u003cXAttr\u003e filteredAll \u003d XAttrPermissionFilter.\n        filterXAttrsForApi(pc, all, isRawPath);\n      return filteredAll;\n    } catch (AccessControlException e) {\n      logAuditEvent(false, \"listXAttrs\", src);\n      throw e;\n    } finally {\n      readUnlock();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "9ca2f34c8fb03227e7364ced5183562e9f805400": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6730. Create a .RAW extended attribute namespace. (clamb)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1614535 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/07/14 6:35 PM",
      "commitName": "9ca2f34c8fb03227e7364ced5183562e9f805400",
      "commitAuthor": "Charles Lamb",
      "commitDateOld": "29/07/14 4:39 PM",
      "commitNameOld": "415223548d84cd17979a0cff05f87f1fc3beb7f2",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 0.08,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,25 @@\n   List\u003cXAttr\u003e listXAttrs(String src) throws IOException {\n     nnConf.checkXAttrsConfigFlag();\n     final FSPermissionChecker pc \u003d getPermissionChecker();\n+    final boolean isRawPath \u003d FSDirectory.isReservedRawName(src);\n     checkOperation(OperationCategory.READ);\n     byte[][] pathComponents \u003d FSDirectory.getPathComponentsForReservedPath(src);\n     readLock();\n     try {\n       src \u003d resolvePath(src, pathComponents);\n       checkOperation(OperationCategory.READ);\n       if (isPermissionEnabled) {\n         /* To access xattr names, you need EXECUTE in the owning directory. */\n         checkParentAccess(pc, src, FsAction.EXECUTE);\n       }\n       final List\u003cXAttr\u003e all \u003d dir.getXAttrs(src);\n       final List\u003cXAttr\u003e filteredAll \u003d XAttrPermissionFilter.\n-        filterXAttrsForApi(pc, all);\n+        filterXAttrsForApi(pc, all, isRawPath);\n       return filteredAll;\n     } catch (AccessControlException e) {\n       logAuditEvent(false, \"listXAttrs\", src);\n       throw e;\n     } finally {\n       readUnlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  List\u003cXAttr\u003e listXAttrs(String src) throws IOException {\n    nnConf.checkXAttrsConfigFlag();\n    final FSPermissionChecker pc \u003d getPermissionChecker();\n    final boolean isRawPath \u003d FSDirectory.isReservedRawName(src);\n    checkOperation(OperationCategory.READ);\n    byte[][] pathComponents \u003d FSDirectory.getPathComponentsForReservedPath(src);\n    readLock();\n    try {\n      src \u003d resolvePath(src, pathComponents);\n      checkOperation(OperationCategory.READ);\n      if (isPermissionEnabled) {\n        /* To access xattr names, you need EXECUTE in the owning directory. */\n        checkParentAccess(pc, src, FsAction.EXECUTE);\n      }\n      final List\u003cXAttr\u003e all \u003d dir.getXAttrs(src);\n      final List\u003cXAttr\u003e filteredAll \u003d XAttrPermissionFilter.\n        filterXAttrsForApi(pc, all, isRawPath);\n      return filteredAll;\n    } catch (AccessControlException e) {\n      logAuditEvent(false, \"listXAttrs\", src);\n      throw e;\n    } finally {\n      readUnlock();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "407bb3d3e452c8277c498dd14e0cc5b7762a7091": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6509. Create a special /.reserved/raw directory for raw access to encrypted data. Contributed by Charles Lamb.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1614490 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/07/14 2:11 PM",
      "commitName": "407bb3d3e452c8277c498dd14e0cc5b7762a7091",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "27/07/14 6:32 AM",
      "commitNameOld": "1d3e9ec935de0e5bcb6fda0b88fa69d9e9ce6595",
      "commitAuthorOld": "",
      "daysBetweenCommits": 2.32,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n   List\u003cXAttr\u003e listXAttrs(String src) throws IOException {\n     nnConf.checkXAttrsConfigFlag();\n     final FSPermissionChecker pc \u003d getPermissionChecker();\n     checkOperation(OperationCategory.READ);\n     byte[][] pathComponents \u003d FSDirectory.getPathComponentsForReservedPath(src);\n     readLock();\n     try {\n-      src \u003d FSDirectory.resolvePath(src, pathComponents, dir);\n+      src \u003d resolvePath(src, pathComponents);\n       checkOperation(OperationCategory.READ);\n       if (isPermissionEnabled) {\n         /* To access xattr names, you need EXECUTE in the owning directory. */\n         checkParentAccess(pc, src, FsAction.EXECUTE);\n       }\n       final List\u003cXAttr\u003e all \u003d dir.getXAttrs(src);\n       final List\u003cXAttr\u003e filteredAll \u003d XAttrPermissionFilter.\n         filterXAttrsForApi(pc, all);\n       return filteredAll;\n     } catch (AccessControlException e) {\n       logAuditEvent(false, \"listXAttrs\", src);\n       throw e;\n     } finally {\n       readUnlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  List\u003cXAttr\u003e listXAttrs(String src) throws IOException {\n    nnConf.checkXAttrsConfigFlag();\n    final FSPermissionChecker pc \u003d getPermissionChecker();\n    checkOperation(OperationCategory.READ);\n    byte[][] pathComponents \u003d FSDirectory.getPathComponentsForReservedPath(src);\n    readLock();\n    try {\n      src \u003d resolvePath(src, pathComponents);\n      checkOperation(OperationCategory.READ);\n      if (isPermissionEnabled) {\n        /* To access xattr names, you need EXECUTE in the owning directory. */\n        checkParentAccess(pc, src, FsAction.EXECUTE);\n      }\n      final List\u003cXAttr\u003e all \u003d dir.getXAttrs(src);\n      final List\u003cXAttr\u003e filteredAll \u003d XAttrPermissionFilter.\n        filterXAttrsForApi(pc, all);\n      return filteredAll;\n    } catch (AccessControlException e) {\n      logAuditEvent(false, \"listXAttrs\", src);\n      throw e;\n    } finally {\n      readUnlock();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "9bce3eca42b40f9b1f9fc23fc4418ed23b7beda5": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6749. FSNamesystem methods should call resolvePath. Contributed by Charles Lamb.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1613561 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/07/14 9:18 PM",
      "commitName": "9bce3eca42b40f9b1f9fc23fc4418ed23b7beda5",
      "commitAuthor": "Chris Nauroth",
      "commitDateOld": "23/07/14 12:05 PM",
      "commitNameOld": "5343b43fd989ec596afed807ddce29ad96c23e2d",
      "commitAuthorOld": "Uma Maheswara Rao G",
      "daysBetweenCommits": 2.38,
      "commitsBetweenForRepo": 27,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,24 @@\n   List\u003cXAttr\u003e listXAttrs(String src) throws IOException {\n     nnConf.checkXAttrsConfigFlag();\n     final FSPermissionChecker pc \u003d getPermissionChecker();\n     checkOperation(OperationCategory.READ);\n+    byte[][] pathComponents \u003d FSDirectory.getPathComponentsForReservedPath(src);\n     readLock();\n     try {\n+      src \u003d FSDirectory.resolvePath(src, pathComponents, dir);\n       checkOperation(OperationCategory.READ);\n       if (isPermissionEnabled) {\n         /* To access xattr names, you need EXECUTE in the owning directory. */\n         checkParentAccess(pc, src, FsAction.EXECUTE);\n       }\n       final List\u003cXAttr\u003e all \u003d dir.getXAttrs(src);\n       final List\u003cXAttr\u003e filteredAll \u003d XAttrPermissionFilter.\n         filterXAttrsForApi(pc, all);\n       return filteredAll;\n     } catch (AccessControlException e) {\n       logAuditEvent(false, \"listXAttrs\", src);\n       throw e;\n     } finally {\n       readUnlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  List\u003cXAttr\u003e listXAttrs(String src) throws IOException {\n    nnConf.checkXAttrsConfigFlag();\n    final FSPermissionChecker pc \u003d getPermissionChecker();\n    checkOperation(OperationCategory.READ);\n    byte[][] pathComponents \u003d FSDirectory.getPathComponentsForReservedPath(src);\n    readLock();\n    try {\n      src \u003d FSDirectory.resolvePath(src, pathComponents, dir);\n      checkOperation(OperationCategory.READ);\n      if (isPermissionEnabled) {\n        /* To access xattr names, you need EXECUTE in the owning directory. */\n        checkParentAccess(pc, src, FsAction.EXECUTE);\n      }\n      final List\u003cXAttr\u003e all \u003d dir.getXAttrs(src);\n      final List\u003cXAttr\u003e filteredAll \u003d XAttrPermissionFilter.\n        filterXAttrsForApi(pc, all);\n      return filteredAll;\n    } catch (AccessControlException e) {\n      logAuditEvent(false, \"listXAttrs\", src);\n      throw e;\n    } finally {\n      readUnlock();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    }
  }
}