{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ZKConfigurationStore.java",
  "functionName": "confirmMutation",
  "functionId": "confirmMutation___pendingMutation-LogMutation__isValid-boolean",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/conf/ZKConfigurationStore.java",
  "functionStartLine": 173,
  "functionEndLine": 194,
  "numCommitsSeen": 24,
  "timeTaken": 5448,
  "changeHistory": [
    "5ead9c15ca6766769d2dd73e91d050ecdede724c",
    "1c51f36be79924489ca4a2e5ca7e96ac75a6ec18",
    "be901f49628a553cfe6a3942478cb528cce2b266",
    "fb1ecff6a26875c7f2b86ef07d7b9145c469377e",
    "4510970e2f7728d036c750b596985e5ffa357b60",
    "ff39c0de206a4fce1f0e8a416357a7a8261f8634"
  ],
  "changeHistoryShort": {
    "5ead9c15ca6766769d2dd73e91d050ecdede724c": "Ybodychange",
    "1c51f36be79924489ca4a2e5ca7e96ac75a6ec18": "Ymultichange(Yparameterchange,Ybodychange)",
    "be901f49628a553cfe6a3942478cb528cce2b266": "Ybodychange",
    "fb1ecff6a26875c7f2b86ef07d7b9145c469377e": "Ybodychange",
    "4510970e2f7728d036c750b596985e5ffa357b60": "Ybodychange",
    "ff39c0de206a4fce1f0e8a416357a7a8261f8634": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5ead9c15ca6766769d2dd73e91d050ecdede724c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9997. Code cleanup in ZKConfigurationStore. Contributed by Andras Gyori\n",
      "commitDate": "12/03/20 4:29 AM",
      "commitName": "5ead9c15ca6766769d2dd73e91d050ecdede724c",
      "commitAuthor": "Szilard Nemeth",
      "commitDateOld": "10/03/20 8:35 AM",
      "commitNameOld": "61f4cf3055e60e64a95f4599ebceac5a924bba02",
      "commitAuthorOld": "Szilard Nemeth",
      "daysBetweenCommits": 1.83,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,22 @@\n   public void confirmMutation(LogMutation pendingMutation,\n       boolean isValid) throws Exception {\n     if (isValid) {\n       Configuration storedConfigs \u003d retrieve();\n       Map\u003cString, String\u003e mapConf \u003d new HashMap\u003c\u003e();\n       for (Map.Entry\u003cString, String\u003e storedConf : storedConfigs) {\n         mapConf.put(storedConf.getKey(), storedConf.getValue());\n       }\n       for (Map.Entry\u003cString, String\u003e confChange :\n           pendingMutation.getUpdates().entrySet()) {\n         if (confChange.getValue() \u003d\u003d null || confChange.getValue().isEmpty()) {\n           mapConf.remove(confChange.getKey());\n         } else {\n           mapConf.put(confChange.getKey(), confChange.getValue());\n         }\n       }\n-      zkManager.safeSetData(confStorePath, serializeObject(mapConf), -1,\n-          zkAcl, fencingNodePath);\n+      safeSetZkData(confStorePath, mapConf);\n       long configVersion \u003d getConfigVersion() + 1L;\n-      zkManager.setData(confVersionPath, String.valueOf(configVersion), -1);\n+      setZkData(confVersionPath, String.valueOf(configVersion));\n \n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void confirmMutation(LogMutation pendingMutation,\n      boolean isValid) throws Exception {\n    if (isValid) {\n      Configuration storedConfigs \u003d retrieve();\n      Map\u003cString, String\u003e mapConf \u003d new HashMap\u003c\u003e();\n      for (Map.Entry\u003cString, String\u003e storedConf : storedConfigs) {\n        mapConf.put(storedConf.getKey(), storedConf.getValue());\n      }\n      for (Map.Entry\u003cString, String\u003e confChange :\n          pendingMutation.getUpdates().entrySet()) {\n        if (confChange.getValue() \u003d\u003d null || confChange.getValue().isEmpty()) {\n          mapConf.remove(confChange.getKey());\n        } else {\n          mapConf.put(confChange.getKey(), confChange.getValue());\n        }\n      }\n      safeSetZkData(confStorePath, mapConf);\n      long configVersion \u003d getConfigVersion() + 1L;\n      setZkData(confVersionPath, String.valueOf(configVersion));\n\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/conf/ZKConfigurationStore.java",
      "extendedDetails": {}
    },
    "1c51f36be79924489ca4a2e5ca7e96ac75a6ec18": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-9788. Queue Management API does not support parallel updates. Contributed by Prabhu Joseph\n",
      "commitDate": "14/01/20 3:26 AM",
      "commitName": "1c51f36be79924489ca4a2e5ca7e96ac75a6ec18",
      "commitAuthor": "Szilard Nemeth",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-9788. Queue Management API does not support parallel updates. Contributed by Prabhu Joseph\n",
          "commitDate": "14/01/20 3:26 AM",
          "commitName": "1c51f36be79924489ca4a2e5ca7e96ac75a6ec18",
          "commitAuthor": "Szilard Nemeth",
          "commitDateOld": "05/12/19 11:43 AM",
          "commitNameOld": "5cc6f945da648a48441b00aca89f3cc1a9777143",
          "commitAuthorOld": "Szilard Nemeth",
          "daysBetweenCommits": 39.65,
          "commitsBetweenForRepo": 136,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,23 @@\n-  public void confirmMutation(boolean isValid)\n-      throws Exception {\n+  public void confirmMutation(LogMutation pendingMutation,\n+      boolean isValid) throws Exception {\n     if (isValid) {\n       Configuration storedConfigs \u003d retrieve();\n       Map\u003cString, String\u003e mapConf \u003d new HashMap\u003c\u003e();\n       for (Map.Entry\u003cString, String\u003e storedConf : storedConfigs) {\n         mapConf.put(storedConf.getKey(), storedConf.getValue());\n       }\n       for (Map.Entry\u003cString, String\u003e confChange :\n           pendingMutation.getUpdates().entrySet()) {\n         if (confChange.getValue() \u003d\u003d null || confChange.getValue().isEmpty()) {\n           mapConf.remove(confChange.getKey());\n         } else {\n           mapConf.put(confChange.getKey(), confChange.getValue());\n         }\n       }\n       zkManager.safeSetData(confStorePath, serializeObject(mapConf), -1,\n           zkAcl, fencingNodePath);\n       long configVersion \u003d getConfigVersion() + 1L;\n       zkManager.setData(confVersionPath, String.valueOf(configVersion), -1);\n \n     }\n-    pendingMutation \u003d null;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void confirmMutation(LogMutation pendingMutation,\n      boolean isValid) throws Exception {\n    if (isValid) {\n      Configuration storedConfigs \u003d retrieve();\n      Map\u003cString, String\u003e mapConf \u003d new HashMap\u003c\u003e();\n      for (Map.Entry\u003cString, String\u003e storedConf : storedConfigs) {\n        mapConf.put(storedConf.getKey(), storedConf.getValue());\n      }\n      for (Map.Entry\u003cString, String\u003e confChange :\n          pendingMutation.getUpdates().entrySet()) {\n        if (confChange.getValue() \u003d\u003d null || confChange.getValue().isEmpty()) {\n          mapConf.remove(confChange.getKey());\n        } else {\n          mapConf.put(confChange.getKey(), confChange.getValue());\n        }\n      }\n      zkManager.safeSetData(confStorePath, serializeObject(mapConf), -1,\n          zkAcl, fencingNodePath);\n      long configVersion \u003d getConfigVersion() + 1L;\n      zkManager.setData(confVersionPath, String.valueOf(configVersion), -1);\n\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/conf/ZKConfigurationStore.java",
          "extendedDetails": {
            "oldValue": "[isValid-boolean]",
            "newValue": "[pendingMutation-LogMutation, isValid-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-9788. Queue Management API does not support parallel updates. Contributed by Prabhu Joseph\n",
          "commitDate": "14/01/20 3:26 AM",
          "commitName": "1c51f36be79924489ca4a2e5ca7e96ac75a6ec18",
          "commitAuthor": "Szilard Nemeth",
          "commitDateOld": "05/12/19 11:43 AM",
          "commitNameOld": "5cc6f945da648a48441b00aca89f3cc1a9777143",
          "commitAuthorOld": "Szilard Nemeth",
          "daysBetweenCommits": 39.65,
          "commitsBetweenForRepo": 136,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,23 @@\n-  public void confirmMutation(boolean isValid)\n-      throws Exception {\n+  public void confirmMutation(LogMutation pendingMutation,\n+      boolean isValid) throws Exception {\n     if (isValid) {\n       Configuration storedConfigs \u003d retrieve();\n       Map\u003cString, String\u003e mapConf \u003d new HashMap\u003c\u003e();\n       for (Map.Entry\u003cString, String\u003e storedConf : storedConfigs) {\n         mapConf.put(storedConf.getKey(), storedConf.getValue());\n       }\n       for (Map.Entry\u003cString, String\u003e confChange :\n           pendingMutation.getUpdates().entrySet()) {\n         if (confChange.getValue() \u003d\u003d null || confChange.getValue().isEmpty()) {\n           mapConf.remove(confChange.getKey());\n         } else {\n           mapConf.put(confChange.getKey(), confChange.getValue());\n         }\n       }\n       zkManager.safeSetData(confStorePath, serializeObject(mapConf), -1,\n           zkAcl, fencingNodePath);\n       long configVersion \u003d getConfigVersion() + 1L;\n       zkManager.setData(confVersionPath, String.valueOf(configVersion), -1);\n \n     }\n-    pendingMutation \u003d null;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void confirmMutation(LogMutation pendingMutation,\n      boolean isValid) throws Exception {\n    if (isValid) {\n      Configuration storedConfigs \u003d retrieve();\n      Map\u003cString, String\u003e mapConf \u003d new HashMap\u003c\u003e();\n      for (Map.Entry\u003cString, String\u003e storedConf : storedConfigs) {\n        mapConf.put(storedConf.getKey(), storedConf.getValue());\n      }\n      for (Map.Entry\u003cString, String\u003e confChange :\n          pendingMutation.getUpdates().entrySet()) {\n        if (confChange.getValue() \u003d\u003d null || confChange.getValue().isEmpty()) {\n          mapConf.remove(confChange.getKey());\n        } else {\n          mapConf.put(confChange.getKey(), confChange.getValue());\n        }\n      }\n      zkManager.safeSetData(confStorePath, serializeObject(mapConf), -1,\n          zkAcl, fencingNodePath);\n      long configVersion \u003d getConfigVersion() + 1L;\n      zkManager.setData(confVersionPath, String.valueOf(configVersion), -1);\n\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/conf/ZKConfigurationStore.java",
          "extendedDetails": {}
        }
      ]
    },
    "be901f49628a553cfe6a3942478cb528cce2b266": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9873. Mutation API Config Change need to update Version Number. Contributed by Prabhu Joseph\n",
      "commitDate": "09/10/19 3:23 AM",
      "commitName": "be901f49628a553cfe6a3942478cb528cce2b266",
      "commitAuthor": "Sunil G",
      "commitDateOld": "04/10/19 8:45 PM",
      "commitNameOld": "fb1ecff6a26875c7f2b86ef07d7b9145c469377e",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 4.28,
      "commitsBetweenForRepo": 22,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,24 @@\n   public void confirmMutation(boolean isValid)\n       throws Exception {\n     if (isValid) {\n       Configuration storedConfigs \u003d retrieve();\n       Map\u003cString, String\u003e mapConf \u003d new HashMap\u003c\u003e();\n       for (Map.Entry\u003cString, String\u003e storedConf : storedConfigs) {\n         mapConf.put(storedConf.getKey(), storedConf.getValue());\n       }\n       for (Map.Entry\u003cString, String\u003e confChange :\n           pendingMutation.getUpdates().entrySet()) {\n         if (confChange.getValue() \u003d\u003d null || confChange.getValue().isEmpty()) {\n           mapConf.remove(confChange.getKey());\n         } else {\n           mapConf.put(confChange.getKey(), confChange.getValue());\n         }\n       }\n       zkManager.safeSetData(confStorePath, serializeObject(mapConf), -1,\n           zkAcl, fencingNodePath);\n+      long configVersion \u003d getConfigVersion() + 1L;\n+      zkManager.setData(confVersionPath, String.valueOf(configVersion), -1);\n+\n     }\n     pendingMutation \u003d null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void confirmMutation(boolean isValid)\n      throws Exception {\n    if (isValid) {\n      Configuration storedConfigs \u003d retrieve();\n      Map\u003cString, String\u003e mapConf \u003d new HashMap\u003c\u003e();\n      for (Map.Entry\u003cString, String\u003e storedConf : storedConfigs) {\n        mapConf.put(storedConf.getKey(), storedConf.getValue());\n      }\n      for (Map.Entry\u003cString, String\u003e confChange :\n          pendingMutation.getUpdates().entrySet()) {\n        if (confChange.getValue() \u003d\u003d null || confChange.getValue().isEmpty()) {\n          mapConf.remove(confChange.getKey());\n        } else {\n          mapConf.put(confChange.getKey(), confChange.getValue());\n        }\n      }\n      zkManager.safeSetData(confStorePath, serializeObject(mapConf), -1,\n          zkAcl, fencingNodePath);\n      long configVersion \u003d getConfigVersion() + 1L;\n      zkManager.setData(confVersionPath, String.valueOf(configVersion), -1);\n\n    }\n    pendingMutation \u003d null;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/conf/ZKConfigurationStore.java",
      "extendedDetails": {}
    },
    "fb1ecff6a26875c7f2b86ef07d7b9145c469377e": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"YARN-9873. Mutation API Config Change updates Version Number. Contributed by Prabhu Joseph\"\n\nThis reverts commit 4510970e2f7728d036c750b596985e5ffa357b60.\n",
      "commitDate": "04/10/19 8:45 PM",
      "commitName": "fb1ecff6a26875c7f2b86ef07d7b9145c469377e",
      "commitAuthor": "Sunil G",
      "commitDateOld": "04/10/19 9:19 AM",
      "commitNameOld": "4510970e2f7728d036c750b596985e5ffa357b60",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 0.48,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,21 @@\n   public void confirmMutation(boolean isValid)\n       throws Exception {\n     if (isValid) {\n       Configuration storedConfigs \u003d retrieve();\n       Map\u003cString, String\u003e mapConf \u003d new HashMap\u003c\u003e();\n       for (Map.Entry\u003cString, String\u003e storedConf : storedConfigs) {\n         mapConf.put(storedConf.getKey(), storedConf.getValue());\n       }\n       for (Map.Entry\u003cString, String\u003e confChange :\n           pendingMutation.getUpdates().entrySet()) {\n         if (confChange.getValue() \u003d\u003d null || confChange.getValue().isEmpty()) {\n           mapConf.remove(confChange.getKey());\n         } else {\n           mapConf.put(confChange.getKey(), confChange.getValue());\n         }\n       }\n       zkManager.safeSetData(confStorePath, serializeObject(mapConf), -1,\n           zkAcl, fencingNodePath);\n-      zkManager.setData(confVersionPath,\n-          String.valueOf(System.currentTimeMillis()), -1);\n-\n     }\n     pendingMutation \u003d null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void confirmMutation(boolean isValid)\n      throws Exception {\n    if (isValid) {\n      Configuration storedConfigs \u003d retrieve();\n      Map\u003cString, String\u003e mapConf \u003d new HashMap\u003c\u003e();\n      for (Map.Entry\u003cString, String\u003e storedConf : storedConfigs) {\n        mapConf.put(storedConf.getKey(), storedConf.getValue());\n      }\n      for (Map.Entry\u003cString, String\u003e confChange :\n          pendingMutation.getUpdates().entrySet()) {\n        if (confChange.getValue() \u003d\u003d null || confChange.getValue().isEmpty()) {\n          mapConf.remove(confChange.getKey());\n        } else {\n          mapConf.put(confChange.getKey(), confChange.getValue());\n        }\n      }\n      zkManager.safeSetData(confStorePath, serializeObject(mapConf), -1,\n          zkAcl, fencingNodePath);\n    }\n    pendingMutation \u003d null;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/conf/ZKConfigurationStore.java",
      "extendedDetails": {}
    },
    "4510970e2f7728d036c750b596985e5ffa357b60": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9873. Mutation API Config Change updates Version Number. Contributed by Prabhu Joseph\n",
      "commitDate": "04/10/19 9:19 AM",
      "commitName": "4510970e2f7728d036c750b596985e5ffa357b60",
      "commitAuthor": "Sunil G",
      "commitDateOld": "30/09/19 8:38 PM",
      "commitNameOld": "137546a78a45adbfb5ef338c1c2984a97b3cecc2",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 3.53,
      "commitsBetweenForRepo": 53,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,24 @@\n   public void confirmMutation(boolean isValid)\n       throws Exception {\n     if (isValid) {\n       Configuration storedConfigs \u003d retrieve();\n       Map\u003cString, String\u003e mapConf \u003d new HashMap\u003c\u003e();\n       for (Map.Entry\u003cString, String\u003e storedConf : storedConfigs) {\n         mapConf.put(storedConf.getKey(), storedConf.getValue());\n       }\n       for (Map.Entry\u003cString, String\u003e confChange :\n           pendingMutation.getUpdates().entrySet()) {\n         if (confChange.getValue() \u003d\u003d null || confChange.getValue().isEmpty()) {\n           mapConf.remove(confChange.getKey());\n         } else {\n           mapConf.put(confChange.getKey(), confChange.getValue());\n         }\n       }\n       zkManager.safeSetData(confStorePath, serializeObject(mapConf), -1,\n           zkAcl, fencingNodePath);\n+      zkManager.setData(confVersionPath,\n+          String.valueOf(System.currentTimeMillis()), -1);\n+\n     }\n     pendingMutation \u003d null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void confirmMutation(boolean isValid)\n      throws Exception {\n    if (isValid) {\n      Configuration storedConfigs \u003d retrieve();\n      Map\u003cString, String\u003e mapConf \u003d new HashMap\u003c\u003e();\n      for (Map.Entry\u003cString, String\u003e storedConf : storedConfigs) {\n        mapConf.put(storedConf.getKey(), storedConf.getValue());\n      }\n      for (Map.Entry\u003cString, String\u003e confChange :\n          pendingMutation.getUpdates().entrySet()) {\n        if (confChange.getValue() \u003d\u003d null || confChange.getValue().isEmpty()) {\n          mapConf.remove(confChange.getKey());\n        } else {\n          mapConf.put(confChange.getKey(), confChange.getValue());\n        }\n      }\n      zkManager.safeSetData(confStorePath, serializeObject(mapConf), -1,\n          zkAcl, fencingNodePath);\n      zkManager.setData(confVersionPath,\n          String.valueOf(System.currentTimeMillis()), -1);\n\n    }\n    pendingMutation \u003d null;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/conf/ZKConfigurationStore.java",
      "extendedDetails": {}
    },
    "ff39c0de206a4fce1f0e8a416357a7a8261f8634": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6840. Implement zookeeper based store for scheduler configuration updates. (Jonathan Hung via wangda)\n\nChange-Id: I9debea674fe8c7e4109d4ca136965a1ea4c48bcc\n",
      "commitDate": "09/10/17 11:11 AM",
      "commitName": "ff39c0de206a4fce1f0e8a416357a7a8261f8634",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,21 @@\n+  public void confirmMutation(boolean isValid)\n+      throws Exception {\n+    if (isValid) {\n+      Configuration storedConfigs \u003d retrieve();\n+      Map\u003cString, String\u003e mapConf \u003d new HashMap\u003c\u003e();\n+      for (Map.Entry\u003cString, String\u003e storedConf : storedConfigs) {\n+        mapConf.put(storedConf.getKey(), storedConf.getValue());\n+      }\n+      for (Map.Entry\u003cString, String\u003e confChange :\n+          pendingMutation.getUpdates().entrySet()) {\n+        if (confChange.getValue() \u003d\u003d null || confChange.getValue().isEmpty()) {\n+          mapConf.remove(confChange.getKey());\n+        } else {\n+          mapConf.put(confChange.getKey(), confChange.getValue());\n+        }\n+      }\n+      zkManager.safeSetData(confStorePath, serializeObject(mapConf), -1,\n+          zkAcl, fencingNodePath);\n+    }\n+    pendingMutation \u003d null;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void confirmMutation(boolean isValid)\n      throws Exception {\n    if (isValid) {\n      Configuration storedConfigs \u003d retrieve();\n      Map\u003cString, String\u003e mapConf \u003d new HashMap\u003c\u003e();\n      for (Map.Entry\u003cString, String\u003e storedConf : storedConfigs) {\n        mapConf.put(storedConf.getKey(), storedConf.getValue());\n      }\n      for (Map.Entry\u003cString, String\u003e confChange :\n          pendingMutation.getUpdates().entrySet()) {\n        if (confChange.getValue() \u003d\u003d null || confChange.getValue().isEmpty()) {\n          mapConf.remove(confChange.getKey());\n        } else {\n          mapConf.put(confChange.getKey(), confChange.getValue());\n        }\n      }\n      zkManager.safeSetData(confStorePath, serializeObject(mapConf), -1,\n          zkAcl, fencingNodePath);\n    }\n    pendingMutation \u003d null;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/conf/ZKConfigurationStore.java"
    }
  }
}