{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ProtoUtil.java",
  "functionName": "makeRpcRequestHeader",
  "functionId": "makeRpcRequestHeader___rpcKind-RPC.RpcKind__operation-RpcRequestHeaderProto.OperationProto__callId-int__retryCount-int__uuid-byte[]__alignmentContext-AlignmentContext",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ProtoUtil.java",
  "functionStartLine": 173,
  "functionEndLine": 207,
  "numCommitsSeen": 16,
  "timeTaken": 1232,
  "changeHistory": [
    "9bf0696c7348879678693176da0071628ca42566"
  ],
  "changeHistoryShort": {
    "9bf0696c7348879678693176da0071628ca42566": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9bf0696c7348879678693176da0071628ca42566": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-13331. [SBN read] Add lastSeenStateId to RpcRequestHeader. Contributed by Plamen Jeliazkov.\n",
      "commitDate": "24/12/18 9:33 AM",
      "commitName": "9bf0696c7348879678693176da0071628ca42566",
      "commitAuthor": "Erik Krogen",
      "diff": "@@ -0,0 +1,35 @@\n+  public static RpcRequestHeaderProto makeRpcRequestHeader(RPC.RpcKind rpcKind,\n+      RpcRequestHeaderProto.OperationProto operation, int callId,\n+      int retryCount, byte[] uuid, AlignmentContext alignmentContext) {\n+    RpcRequestHeaderProto.Builder result \u003d RpcRequestHeaderProto.newBuilder();\n+    result.setRpcKind(convert(rpcKind)).setRpcOp(operation).setCallId(callId)\n+        .setRetryCount(retryCount).setClientId(ByteString.copyFrom(uuid));\n+\n+    // Add tracing info if we are currently tracing.\n+    Span span \u003d Tracer.getCurrentSpan();\n+    if (span !\u003d null) {\n+      result.setTraceInfo(RPCTraceInfoProto.newBuilder()\n+          .setTraceId(span.getSpanId().getHigh())\n+          .setParentId(span.getSpanId().getLow())\n+            .build());\n+    }\n+\n+    // Add caller context if it is not null\n+    CallerContext callerContext \u003d CallerContext.getCurrent();\n+    if (callerContext !\u003d null \u0026\u0026 callerContext.isContextValid()) {\n+      RPCCallerContextProto.Builder contextBuilder \u003d RPCCallerContextProto\n+          .newBuilder().setContext(callerContext.getContext());\n+      if (callerContext.getSignature() !\u003d null) {\n+        contextBuilder.setSignature(\n+            ByteString.copyFrom(callerContext.getSignature()));\n+      }\n+      result.setCallerContext(contextBuilder);\n+    }\n+\n+    // Add alignment context if it is not null\n+    if (alignmentContext !\u003d null) {\n+      alignmentContext.updateRequestState(result);\n+    }\n+\n+    return result.build();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static RpcRequestHeaderProto makeRpcRequestHeader(RPC.RpcKind rpcKind,\n      RpcRequestHeaderProto.OperationProto operation, int callId,\n      int retryCount, byte[] uuid, AlignmentContext alignmentContext) {\n    RpcRequestHeaderProto.Builder result \u003d RpcRequestHeaderProto.newBuilder();\n    result.setRpcKind(convert(rpcKind)).setRpcOp(operation).setCallId(callId)\n        .setRetryCount(retryCount).setClientId(ByteString.copyFrom(uuid));\n\n    // Add tracing info if we are currently tracing.\n    Span span \u003d Tracer.getCurrentSpan();\n    if (span !\u003d null) {\n      result.setTraceInfo(RPCTraceInfoProto.newBuilder()\n          .setTraceId(span.getSpanId().getHigh())\n          .setParentId(span.getSpanId().getLow())\n            .build());\n    }\n\n    // Add caller context if it is not null\n    CallerContext callerContext \u003d CallerContext.getCurrent();\n    if (callerContext !\u003d null \u0026\u0026 callerContext.isContextValid()) {\n      RPCCallerContextProto.Builder contextBuilder \u003d RPCCallerContextProto\n          .newBuilder().setContext(callerContext.getContext());\n      if (callerContext.getSignature() !\u003d null) {\n        contextBuilder.setSignature(\n            ByteString.copyFrom(callerContext.getSignature()));\n      }\n      result.setCallerContext(contextBuilder);\n    }\n\n    // Add alignment context if it is not null\n    if (alignmentContext !\u003d null) {\n      alignmentContext.updateRequestState(result);\n    }\n\n    return result.build();\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/ProtoUtil.java"
    }
  }
}