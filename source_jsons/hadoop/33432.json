{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JavaSandboxLinuxContainerRuntime.java",
  "functionName": "initializePolicyDir",
  "functionId": "initializePolicyDir",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/runtime/JavaSandboxLinuxContainerRuntime.java",
  "functionStartLine": 172,
  "functionEndLine": 198,
  "numCommitsSeen": 9,
  "timeTaken": 858,
  "changeHistory": [
    "6f6dfe0202249c129b36edfd145a2224140139cc"
  ],
  "changeHistoryShort": {
    "6f6dfe0202249c129b36edfd145a2224140139cc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6f6dfe0202249c129b36edfd145a2224140139cc": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5280. Allow YARN containers to run with Java Security Manager (gphillips via rkanter)\n",
      "commitDate": "01/03/17 2:53 PM",
      "commitName": "6f6dfe0202249c129b36edfd145a2224140139cc",
      "commitAuthor": "Robert Kanter",
      "diff": "@@ -0,0 +1,27 @@\n+  private void initializePolicyDir() throws ContainerExecutionException {\n+    String hadoopTempDir \u003d configuration.get(\"hadoop.tmp.dir\");\n+    if (hadoopTempDir \u003d\u003d null) {\n+      throw new ContainerExecutionException(\"hadoop.tmp.dir not set!\");\n+    }\n+    policyFileDir \u003d Paths.get(hadoopTempDir, POLICY_FILE_DIR);\n+    //Delete any existing policy files if the directory has already been created\n+    if(Files.exists(policyFileDir)){\n+      try (DirectoryStream\u003cPath\u003e stream \u003d\n+         Files.newDirectoryStream(policyFileDir)){\n+        for(Path policyFile : stream){\n+          Files.delete(policyFile);\n+        }\n+      }catch(IOException e){\n+        throw new ContainerExecutionException(\"Unable to initialize policy \"\n+            + \"directory: \" + e);\n+      }\n+    } else {\n+      try {\n+        policyFileDir \u003d Files.createDirectories(\n+            Paths.get(hadoopTempDir, POLICY_FILE_DIR), POLICY_ATTR);\n+      } catch (IOException e) {\n+        throw new ContainerExecutionException(\"Unable to create policy file \" +\n+            \"directory: \" + e);\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void initializePolicyDir() throws ContainerExecutionException {\n    String hadoopTempDir \u003d configuration.get(\"hadoop.tmp.dir\");\n    if (hadoopTempDir \u003d\u003d null) {\n      throw new ContainerExecutionException(\"hadoop.tmp.dir not set!\");\n    }\n    policyFileDir \u003d Paths.get(hadoopTempDir, POLICY_FILE_DIR);\n    //Delete any existing policy files if the directory has already been created\n    if(Files.exists(policyFileDir)){\n      try (DirectoryStream\u003cPath\u003e stream \u003d\n         Files.newDirectoryStream(policyFileDir)){\n        for(Path policyFile : stream){\n          Files.delete(policyFile);\n        }\n      }catch(IOException e){\n        throw new ContainerExecutionException(\"Unable to initialize policy \"\n            + \"directory: \" + e);\n      }\n    } else {\n      try {\n        policyFileDir \u003d Files.createDirectories(\n            Paths.get(hadoopTempDir, POLICY_FILE_DIR), POLICY_ATTR);\n      } catch (IOException e) {\n        throw new ContainerExecutionException(\"Unable to create policy file \" +\n            \"directory: \" + e);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/runtime/JavaSandboxLinuxContainerRuntime.java"
    }
  }
}