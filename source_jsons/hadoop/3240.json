{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "WebHdfsFileSystem.java",
  "functionName": "getDelegationToken",
  "functionId": "getDelegationToken___renewer-String(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/web/WebHdfsFileSystem.java",
  "functionStartLine": 1746,
  "functionEndLine": 1766,
  "numCommitsSeen": 179,
  "timeTaken": 5855,
  "changeHistory": [
    "576b569b6c97bd5f57e52efdabdf8c2fa996a524",
    "832b3cbde1c2f77b04c93188e3a94420974090cf",
    "bcf89ddc7d52e04725caf104f5958e33d9f51b35",
    "ab04ff9efe632b4eca6faca7407ac35e00e6a379",
    "bbff44cb03d0150f990acc3b77170893241cc282",
    "e4ee1d111be15ae6cca2f79be7ca73c204288d2b",
    "5c381ade4e6b6428b316c41ad5f5bc145829473d",
    "7a2443e9f8b95816c7df61530cda29e8b040b12e",
    "09a156fcce2bc1be4081717bf7ef7d290e80d818",
    "8cb0d4b380e0fd4437310c1dd6ef8b8995cc383d",
    "4dc4e9e63f7385ddd1d64ae1345e0d32a4acb9de"
  ],
  "changeHistoryShort": {
    "576b569b6c97bd5f57e52efdabdf8c2fa996a524": "Ymultichange(Ymodifierchange,Ybodychange)",
    "832b3cbde1c2f77b04c93188e3a94420974090cf": "Ymultichange(Ymodifierchange,Ybodychange)",
    "bcf89ddc7d52e04725caf104f5958e33d9f51b35": "Yfilerename",
    "ab04ff9efe632b4eca6faca7407ac35e00e6a379": "Ybodychange",
    "bbff44cb03d0150f990acc3b77170893241cc282": "Ybodychange",
    "e4ee1d111be15ae6cca2f79be7ca73c204288d2b": "Ybodychange",
    "5c381ade4e6b6428b316c41ad5f5bc145829473d": "Ybodychange",
    "7a2443e9f8b95816c7df61530cda29e8b040b12e": "Ybodychange",
    "09a156fcce2bc1be4081717bf7ef7d290e80d818": "Ybodychange",
    "8cb0d4b380e0fd4437310c1dd6ef8b8995cc383d": "Ybodychange",
    "4dc4e9e63f7385ddd1d64ae1345e0d32a4acb9de": "Yintroduced"
  },
  "changeHistoryDetails": {
    "576b569b6c97bd5f57e52efdabdf8c2fa996a524": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "Revert \"HDFS-9525. hadoop utilities need to support provided delegation tokens (HeeSoo Kim via aw)\"\n\nThis reverts commit 832b3cbde1c2f77b04c93188e3a94420974090cf.\n",
      "commitDate": "11/12/15 10:59 AM",
      "commitName": "576b569b6c97bd5f57e52efdabdf8c2fa996a524",
      "commitAuthor": "Allen Wittenauer",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "Revert \"HDFS-9525. hadoop utilities need to support provided delegation tokens (HeeSoo Kim via aw)\"\n\nThis reverts commit 832b3cbde1c2f77b04c93188e3a94420974090cf.\n",
          "commitDate": "11/12/15 10:59 AM",
          "commitName": "576b569b6c97bd5f57e52efdabdf8c2fa996a524",
          "commitAuthor": "Allen Wittenauer",
          "commitDateOld": "08/12/15 12:56 PM",
          "commitNameOld": "832b3cbde1c2f77b04c93188e3a94420974090cf",
          "commitAuthorOld": "Allen Wittenauer",
          "daysBetweenCommits": 2.92,
          "commitsBetweenForRepo": 18,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,37 +1,21 @@\n-  public synchronized Token\u003cDelegationTokenIdentifier\u003e getDelegationToken(\n+  public Token\u003cDelegationTokenIdentifier\u003e getDelegationToken(\n       final String renewer) throws IOException {\n     final HttpOpParam.Op op \u003d GetOpParam.Op.GETDELEGATIONTOKEN;\n-    Token\u003cDelegationTokenIdentifier\u003e token \u003d null;\n-\n-    if (delegationToken \u003d\u003d null) {\n-      token \u003d\n-          new FsPathResponseRunner\u003cToken\u003cDelegationTokenIdentifier\u003e\u003e(\n-              op, null, new RenewerParam(renewer)) {\n+    Token\u003cDelegationTokenIdentifier\u003e token \u003d\n+        new FsPathResponseRunner\u003cToken\u003cDelegationTokenIdentifier\u003e\u003e(\n+            op, null, new RenewerParam(renewer)) {\n           @Override\n-          Token\u003cDelegationTokenIdentifier\u003e decodeResponse(Map\u003c?, ?\u003e json)\n+          Token\u003cDelegationTokenIdentifier\u003e decodeResponse(Map\u003c?,?\u003e json)\n               throws IOException {\n             return JsonUtilClient.toDelegationToken(json);\n           }\n         }.run();\n-    } else {\n-      token \u003d\n-          new FsPathResponseRunner\u003cToken\u003cDelegationTokenIdentifier\u003e\u003e(\n-              op, null, new RenewerParam(renewer),\n-              new DelegationParam(delegationToken.encodeToUrlString())) {\n-          @Override\n-          Token\u003cDelegationTokenIdentifier\u003e decodeResponse(Map\u003c?, ?\u003e json)\n-              throws IOException {\n-            return JsonUtilClient.toDelegationToken(json);\n-          }\n-        }.run();\n-    }\n-\n     if (token !\u003d null) {\n       token.setService(tokenServiceName);\n     } else {\n       if (disallowFallbackToInsecureCluster) {\n         throw new AccessControlException(CANT_FALLBACK_TO_INSECURE_MSG);\n       }\n     }\n     return token;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Token\u003cDelegationTokenIdentifier\u003e getDelegationToken(\n      final String renewer) throws IOException {\n    final HttpOpParam.Op op \u003d GetOpParam.Op.GETDELEGATIONTOKEN;\n    Token\u003cDelegationTokenIdentifier\u003e token \u003d\n        new FsPathResponseRunner\u003cToken\u003cDelegationTokenIdentifier\u003e\u003e(\n            op, null, new RenewerParam(renewer)) {\n          @Override\n          Token\u003cDelegationTokenIdentifier\u003e decodeResponse(Map\u003c?,?\u003e json)\n              throws IOException {\n            return JsonUtilClient.toDelegationToken(json);\n          }\n        }.run();\n    if (token !\u003d null) {\n      token.setService(tokenServiceName);\n    } else {\n      if (disallowFallbackToInsecureCluster) {\n        throw new AccessControlException(CANT_FALLBACK_TO_INSECURE_MSG);\n      }\n    }\n    return token;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/web/WebHdfsFileSystem.java",
          "extendedDetails": {
            "oldValue": "[public, synchronized]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Revert \"HDFS-9525. hadoop utilities need to support provided delegation tokens (HeeSoo Kim via aw)\"\n\nThis reverts commit 832b3cbde1c2f77b04c93188e3a94420974090cf.\n",
          "commitDate": "11/12/15 10:59 AM",
          "commitName": "576b569b6c97bd5f57e52efdabdf8c2fa996a524",
          "commitAuthor": "Allen Wittenauer",
          "commitDateOld": "08/12/15 12:56 PM",
          "commitNameOld": "832b3cbde1c2f77b04c93188e3a94420974090cf",
          "commitAuthorOld": "Allen Wittenauer",
          "daysBetweenCommits": 2.92,
          "commitsBetweenForRepo": 18,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,37 +1,21 @@\n-  public synchronized Token\u003cDelegationTokenIdentifier\u003e getDelegationToken(\n+  public Token\u003cDelegationTokenIdentifier\u003e getDelegationToken(\n       final String renewer) throws IOException {\n     final HttpOpParam.Op op \u003d GetOpParam.Op.GETDELEGATIONTOKEN;\n-    Token\u003cDelegationTokenIdentifier\u003e token \u003d null;\n-\n-    if (delegationToken \u003d\u003d null) {\n-      token \u003d\n-          new FsPathResponseRunner\u003cToken\u003cDelegationTokenIdentifier\u003e\u003e(\n-              op, null, new RenewerParam(renewer)) {\n+    Token\u003cDelegationTokenIdentifier\u003e token \u003d\n+        new FsPathResponseRunner\u003cToken\u003cDelegationTokenIdentifier\u003e\u003e(\n+            op, null, new RenewerParam(renewer)) {\n           @Override\n-          Token\u003cDelegationTokenIdentifier\u003e decodeResponse(Map\u003c?, ?\u003e json)\n+          Token\u003cDelegationTokenIdentifier\u003e decodeResponse(Map\u003c?,?\u003e json)\n               throws IOException {\n             return JsonUtilClient.toDelegationToken(json);\n           }\n         }.run();\n-    } else {\n-      token \u003d\n-          new FsPathResponseRunner\u003cToken\u003cDelegationTokenIdentifier\u003e\u003e(\n-              op, null, new RenewerParam(renewer),\n-              new DelegationParam(delegationToken.encodeToUrlString())) {\n-          @Override\n-          Token\u003cDelegationTokenIdentifier\u003e decodeResponse(Map\u003c?, ?\u003e json)\n-              throws IOException {\n-            return JsonUtilClient.toDelegationToken(json);\n-          }\n-        }.run();\n-    }\n-\n     if (token !\u003d null) {\n       token.setService(tokenServiceName);\n     } else {\n       if (disallowFallbackToInsecureCluster) {\n         throw new AccessControlException(CANT_FALLBACK_TO_INSECURE_MSG);\n       }\n     }\n     return token;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Token\u003cDelegationTokenIdentifier\u003e getDelegationToken(\n      final String renewer) throws IOException {\n    final HttpOpParam.Op op \u003d GetOpParam.Op.GETDELEGATIONTOKEN;\n    Token\u003cDelegationTokenIdentifier\u003e token \u003d\n        new FsPathResponseRunner\u003cToken\u003cDelegationTokenIdentifier\u003e\u003e(\n            op, null, new RenewerParam(renewer)) {\n          @Override\n          Token\u003cDelegationTokenIdentifier\u003e decodeResponse(Map\u003c?,?\u003e json)\n              throws IOException {\n            return JsonUtilClient.toDelegationToken(json);\n          }\n        }.run();\n    if (token !\u003d null) {\n      token.setService(tokenServiceName);\n    } else {\n      if (disallowFallbackToInsecureCluster) {\n        throw new AccessControlException(CANT_FALLBACK_TO_INSECURE_MSG);\n      }\n    }\n    return token;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/web/WebHdfsFileSystem.java",
          "extendedDetails": {}
        }
      ]
    },
    "832b3cbde1c2f77b04c93188e3a94420974090cf": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "HDFS-9525. hadoop utilities need to support provided delegation tokens (HeeSoo Kim via aw)\n",
      "commitDate": "08/12/15 12:56 PM",
      "commitName": "832b3cbde1c2f77b04c93188e3a94420974090cf",
      "commitAuthor": "Allen Wittenauer",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-9525. hadoop utilities need to support provided delegation tokens (HeeSoo Kim via aw)\n",
          "commitDate": "08/12/15 12:56 PM",
          "commitName": "832b3cbde1c2f77b04c93188e3a94420974090cf",
          "commitAuthor": "Allen Wittenauer",
          "commitDateOld": "08/11/15 2:54 AM",
          "commitNameOld": "6d2332ae375e26d024358c6e75fdb3c68a781a66",
          "commitAuthorOld": "Vinayakumar B",
          "daysBetweenCommits": 30.42,
          "commitsBetweenForRepo": 188,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,37 @@\n-  public Token\u003cDelegationTokenIdentifier\u003e getDelegationToken(\n+  public synchronized Token\u003cDelegationTokenIdentifier\u003e getDelegationToken(\n       final String renewer) throws IOException {\n     final HttpOpParam.Op op \u003d GetOpParam.Op.GETDELEGATIONTOKEN;\n-    Token\u003cDelegationTokenIdentifier\u003e token \u003d\n-        new FsPathResponseRunner\u003cToken\u003cDelegationTokenIdentifier\u003e\u003e(\n-            op, null, new RenewerParam(renewer)) {\n+    Token\u003cDelegationTokenIdentifier\u003e token \u003d null;\n+\n+    if (delegationToken \u003d\u003d null) {\n+      token \u003d\n+          new FsPathResponseRunner\u003cToken\u003cDelegationTokenIdentifier\u003e\u003e(\n+              op, null, new RenewerParam(renewer)) {\n           @Override\n-          Token\u003cDelegationTokenIdentifier\u003e decodeResponse(Map\u003c?,?\u003e json)\n+          Token\u003cDelegationTokenIdentifier\u003e decodeResponse(Map\u003c?, ?\u003e json)\n               throws IOException {\n             return JsonUtilClient.toDelegationToken(json);\n           }\n         }.run();\n+    } else {\n+      token \u003d\n+          new FsPathResponseRunner\u003cToken\u003cDelegationTokenIdentifier\u003e\u003e(\n+              op, null, new RenewerParam(renewer),\n+              new DelegationParam(delegationToken.encodeToUrlString())) {\n+          @Override\n+          Token\u003cDelegationTokenIdentifier\u003e decodeResponse(Map\u003c?, ?\u003e json)\n+              throws IOException {\n+            return JsonUtilClient.toDelegationToken(json);\n+          }\n+        }.run();\n+    }\n+\n     if (token !\u003d null) {\n       token.setService(tokenServiceName);\n     } else {\n       if (disallowFallbackToInsecureCluster) {\n         throw new AccessControlException(CANT_FALLBACK_TO_INSECURE_MSG);\n       }\n     }\n     return token;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized Token\u003cDelegationTokenIdentifier\u003e getDelegationToken(\n      final String renewer) throws IOException {\n    final HttpOpParam.Op op \u003d GetOpParam.Op.GETDELEGATIONTOKEN;\n    Token\u003cDelegationTokenIdentifier\u003e token \u003d null;\n\n    if (delegationToken \u003d\u003d null) {\n      token \u003d\n          new FsPathResponseRunner\u003cToken\u003cDelegationTokenIdentifier\u003e\u003e(\n              op, null, new RenewerParam(renewer)) {\n          @Override\n          Token\u003cDelegationTokenIdentifier\u003e decodeResponse(Map\u003c?, ?\u003e json)\n              throws IOException {\n            return JsonUtilClient.toDelegationToken(json);\n          }\n        }.run();\n    } else {\n      token \u003d\n          new FsPathResponseRunner\u003cToken\u003cDelegationTokenIdentifier\u003e\u003e(\n              op, null, new RenewerParam(renewer),\n              new DelegationParam(delegationToken.encodeToUrlString())) {\n          @Override\n          Token\u003cDelegationTokenIdentifier\u003e decodeResponse(Map\u003c?, ?\u003e json)\n              throws IOException {\n            return JsonUtilClient.toDelegationToken(json);\n          }\n        }.run();\n    }\n\n    if (token !\u003d null) {\n      token.setService(tokenServiceName);\n    } else {\n      if (disallowFallbackToInsecureCluster) {\n        throw new AccessControlException(CANT_FALLBACK_TO_INSECURE_MSG);\n      }\n    }\n    return token;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/web/WebHdfsFileSystem.java",
          "extendedDetails": {
            "oldValue": "[public]",
            "newValue": "[public, synchronized]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-9525. hadoop utilities need to support provided delegation tokens (HeeSoo Kim via aw)\n",
          "commitDate": "08/12/15 12:56 PM",
          "commitName": "832b3cbde1c2f77b04c93188e3a94420974090cf",
          "commitAuthor": "Allen Wittenauer",
          "commitDateOld": "08/11/15 2:54 AM",
          "commitNameOld": "6d2332ae375e26d024358c6e75fdb3c68a781a66",
          "commitAuthorOld": "Vinayakumar B",
          "daysBetweenCommits": 30.42,
          "commitsBetweenForRepo": 188,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,37 @@\n-  public Token\u003cDelegationTokenIdentifier\u003e getDelegationToken(\n+  public synchronized Token\u003cDelegationTokenIdentifier\u003e getDelegationToken(\n       final String renewer) throws IOException {\n     final HttpOpParam.Op op \u003d GetOpParam.Op.GETDELEGATIONTOKEN;\n-    Token\u003cDelegationTokenIdentifier\u003e token \u003d\n-        new FsPathResponseRunner\u003cToken\u003cDelegationTokenIdentifier\u003e\u003e(\n-            op, null, new RenewerParam(renewer)) {\n+    Token\u003cDelegationTokenIdentifier\u003e token \u003d null;\n+\n+    if (delegationToken \u003d\u003d null) {\n+      token \u003d\n+          new FsPathResponseRunner\u003cToken\u003cDelegationTokenIdentifier\u003e\u003e(\n+              op, null, new RenewerParam(renewer)) {\n           @Override\n-          Token\u003cDelegationTokenIdentifier\u003e decodeResponse(Map\u003c?,?\u003e json)\n+          Token\u003cDelegationTokenIdentifier\u003e decodeResponse(Map\u003c?, ?\u003e json)\n               throws IOException {\n             return JsonUtilClient.toDelegationToken(json);\n           }\n         }.run();\n+    } else {\n+      token \u003d\n+          new FsPathResponseRunner\u003cToken\u003cDelegationTokenIdentifier\u003e\u003e(\n+              op, null, new RenewerParam(renewer),\n+              new DelegationParam(delegationToken.encodeToUrlString())) {\n+          @Override\n+          Token\u003cDelegationTokenIdentifier\u003e decodeResponse(Map\u003c?, ?\u003e json)\n+              throws IOException {\n+            return JsonUtilClient.toDelegationToken(json);\n+          }\n+        }.run();\n+    }\n+\n     if (token !\u003d null) {\n       token.setService(tokenServiceName);\n     } else {\n       if (disallowFallbackToInsecureCluster) {\n         throw new AccessControlException(CANT_FALLBACK_TO_INSECURE_MSG);\n       }\n     }\n     return token;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized Token\u003cDelegationTokenIdentifier\u003e getDelegationToken(\n      final String renewer) throws IOException {\n    final HttpOpParam.Op op \u003d GetOpParam.Op.GETDELEGATIONTOKEN;\n    Token\u003cDelegationTokenIdentifier\u003e token \u003d null;\n\n    if (delegationToken \u003d\u003d null) {\n      token \u003d\n          new FsPathResponseRunner\u003cToken\u003cDelegationTokenIdentifier\u003e\u003e(\n              op, null, new RenewerParam(renewer)) {\n          @Override\n          Token\u003cDelegationTokenIdentifier\u003e decodeResponse(Map\u003c?, ?\u003e json)\n              throws IOException {\n            return JsonUtilClient.toDelegationToken(json);\n          }\n        }.run();\n    } else {\n      token \u003d\n          new FsPathResponseRunner\u003cToken\u003cDelegationTokenIdentifier\u003e\u003e(\n              op, null, new RenewerParam(renewer),\n              new DelegationParam(delegationToken.encodeToUrlString())) {\n          @Override\n          Token\u003cDelegationTokenIdentifier\u003e decodeResponse(Map\u003c?, ?\u003e json)\n              throws IOException {\n            return JsonUtilClient.toDelegationToken(json);\n          }\n        }.run();\n    }\n\n    if (token !\u003d null) {\n      token.setService(tokenServiceName);\n    } else {\n      if (disallowFallbackToInsecureCluster) {\n        throw new AccessControlException(CANT_FALLBACK_TO_INSECURE_MSG);\n      }\n    }\n    return token;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/web/WebHdfsFileSystem.java",
          "extendedDetails": {}
        }
      ]
    },
    "bcf89ddc7d52e04725caf104f5958e33d9f51b35": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-8052. Move WebHdfsFileSystem into hadoop-hdfs-client. Contributed by Haohui Mai.\n",
      "commitDate": "23/04/15 5:33 PM",
      "commitName": "bcf89ddc7d52e04725caf104f5958e33d9f51b35",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "23/04/15 4:40 PM",
      "commitNameOld": "0b3f8957a87ada1a275c9904b211fdbdcefafb02",
      "commitAuthorOld": "Xuan",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public Token\u003cDelegationTokenIdentifier\u003e getDelegationToken(\n      final String renewer) throws IOException {\n    final HttpOpParam.Op op \u003d GetOpParam.Op.GETDELEGATIONTOKEN;\n    Token\u003cDelegationTokenIdentifier\u003e token \u003d\n        new FsPathResponseRunner\u003cToken\u003cDelegationTokenIdentifier\u003e\u003e(\n            op, null, new RenewerParam(renewer)) {\n      @Override\n      Token\u003cDelegationTokenIdentifier\u003e decodeResponse(Map\u003c?,?\u003e json)\n          throws IOException {\n        return JsonUtilClient.toDelegationToken(json);\n      }\n    }.run();\n    if (token !\u003d null) {\n      token.setService(tokenServiceName);\n    } else {\n      if (disallowFallbackToInsecureCluster) {\n        throw new AccessControlException(CANT_FALLBACK_TO_INSECURE_MSG);\n      }\n    }\n    return token;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/web/WebHdfsFileSystem.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/WebHdfsFileSystem.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/web/WebHdfsFileSystem.java"
      }
    },
    "ab04ff9efe632b4eca6faca7407ac35e00e6a379": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8080. Separate JSON related routines used by WebHdfsFileSystem to a package local class. Contributed by Haohui Mai.\n",
      "commitDate": "07/04/15 9:30 PM",
      "commitName": "ab04ff9efe632b4eca6faca7407ac35e00e6a379",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "01/04/15 12:54 PM",
      "commitNameOld": "ed72daa5df97669906234e8ac9a406d78136b206",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 6.36,
      "commitsBetweenForRepo": 48,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n   public Token\u003cDelegationTokenIdentifier\u003e getDelegationToken(\n       final String renewer) throws IOException {\n     final HttpOpParam.Op op \u003d GetOpParam.Op.GETDELEGATIONTOKEN;\n     Token\u003cDelegationTokenIdentifier\u003e token \u003d\n         new FsPathResponseRunner\u003cToken\u003cDelegationTokenIdentifier\u003e\u003e(\n             op, null, new RenewerParam(renewer)) {\n       @Override\n       Token\u003cDelegationTokenIdentifier\u003e decodeResponse(Map\u003c?,?\u003e json)\n           throws IOException {\n-        return JsonUtil.toDelegationToken(json);\n+        return JsonUtilClient.toDelegationToken(json);\n       }\n     }.run();\n     if (token !\u003d null) {\n       token.setService(tokenServiceName);\n     } else {\n       if (disallowFallbackToInsecureCluster) {\n         throw new AccessControlException(CANT_FALLBACK_TO_INSECURE_MSG);\n       }\n     }\n     return token;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Token\u003cDelegationTokenIdentifier\u003e getDelegationToken(\n      final String renewer) throws IOException {\n    final HttpOpParam.Op op \u003d GetOpParam.Op.GETDELEGATIONTOKEN;\n    Token\u003cDelegationTokenIdentifier\u003e token \u003d\n        new FsPathResponseRunner\u003cToken\u003cDelegationTokenIdentifier\u003e\u003e(\n            op, null, new RenewerParam(renewer)) {\n      @Override\n      Token\u003cDelegationTokenIdentifier\u003e decodeResponse(Map\u003c?,?\u003e json)\n          throws IOException {\n        return JsonUtilClient.toDelegationToken(json);\n      }\n    }.run();\n    if (token !\u003d null) {\n      token.setService(tokenServiceName);\n    } else {\n      if (disallowFallbackToInsecureCluster) {\n        throw new AccessControlException(CANT_FALLBACK_TO_INSECURE_MSG);\n      }\n    }\n    return token;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/WebHdfsFileSystem.java",
      "extendedDetails": {}
    },
    "bbff44cb03d0150f990acc3b77170893241cc282": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6776. Using distcp to copy data between insecure and secure cluster via webdhfs doesn\u0027t work. (yzhangal via tucu)\n",
      "commitDate": "09/09/14 10:16 PM",
      "commitName": "bbff44cb03d0150f990acc3b77170893241cc282",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "30/07/14 10:49 AM",
      "commitNameOld": "535fe14dedbf919442ec03ac573315c7a16a6dbe",
      "commitAuthorOld": "Chris Nauroth",
      "daysBetweenCommits": 41.48,
      "commitsBetweenForRepo": 331,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,21 @@\n   public Token\u003cDelegationTokenIdentifier\u003e getDelegationToken(\n       final String renewer) throws IOException {\n     final HttpOpParam.Op op \u003d GetOpParam.Op.GETDELEGATIONTOKEN;\n     Token\u003cDelegationTokenIdentifier\u003e token \u003d\n         new FsPathResponseRunner\u003cToken\u003cDelegationTokenIdentifier\u003e\u003e(\n             op, null, new RenewerParam(renewer)) {\n       @Override\n       Token\u003cDelegationTokenIdentifier\u003e decodeResponse(Map\u003c?,?\u003e json)\n           throws IOException {\n         return JsonUtil.toDelegationToken(json);\n       }\n     }.run();\n-    token.setService(tokenServiceName);\n+    if (token !\u003d null) {\n+      token.setService(tokenServiceName);\n+    } else {\n+      if (disallowFallbackToInsecureCluster) {\n+        throw new AccessControlException(CANT_FALLBACK_TO_INSECURE_MSG);\n+      }\n+    }\n     return token;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Token\u003cDelegationTokenIdentifier\u003e getDelegationToken(\n      final String renewer) throws IOException {\n    final HttpOpParam.Op op \u003d GetOpParam.Op.GETDELEGATIONTOKEN;\n    Token\u003cDelegationTokenIdentifier\u003e token \u003d\n        new FsPathResponseRunner\u003cToken\u003cDelegationTokenIdentifier\u003e\u003e(\n            op, null, new RenewerParam(renewer)) {\n      @Override\n      Token\u003cDelegationTokenIdentifier\u003e decodeResponse(Map\u003c?,?\u003e json)\n          throws IOException {\n        return JsonUtil.toDelegationToken(json);\n      }\n    }.run();\n    if (token !\u003d null) {\n      token.setService(tokenServiceName);\n    } else {\n      if (disallowFallbackToInsecureCluster) {\n        throw new AccessControlException(CANT_FALLBACK_TO_INSECURE_MSG);\n      }\n    }\n    return token;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/WebHdfsFileSystem.java",
      "extendedDetails": {}
    },
    "e4ee1d111be15ae6cca2f79be7ca73c204288d2b": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6305. WebHdfs response decoding may throw RuntimeExceptions (Daryn Sharp via jeagles)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1594273 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/05/14 9:40 AM",
      "commitName": "e4ee1d111be15ae6cca2f79be7ca73c204288d2b",
      "commitAuthor": "Jonathan Turner Eagles",
      "commitDateOld": "13/05/14 9:19 AM",
      "commitNameOld": "33ade356b35223654a077103ed7fbed89f3f2321",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,15 @@\n   public Token\u003cDelegationTokenIdentifier\u003e getDelegationToken(\n       final String renewer) throws IOException {\n     final HttpOpParam.Op op \u003d GetOpParam.Op.GETDELEGATIONTOKEN;\n-    final Map\u003c?, ?\u003e m \u003d run(op, null, new RenewerParam(renewer));\n-    final Token\u003cDelegationTokenIdentifier\u003e token \u003d JsonUtil.toDelegationToken(m);\n+    Token\u003cDelegationTokenIdentifier\u003e token \u003d\n+        new FsPathResponseRunner\u003cToken\u003cDelegationTokenIdentifier\u003e\u003e(\n+            op, null, new RenewerParam(renewer)) {\n+      @Override\n+      Token\u003cDelegationTokenIdentifier\u003e decodeResponse(Map\u003c?,?\u003e json)\n+          throws IOException {\n+        return JsonUtil.toDelegationToken(json);\n+      }\n+    }.run();\n     token.setService(tokenServiceName);\n     return token;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Token\u003cDelegationTokenIdentifier\u003e getDelegationToken(\n      final String renewer) throws IOException {\n    final HttpOpParam.Op op \u003d GetOpParam.Op.GETDELEGATIONTOKEN;\n    Token\u003cDelegationTokenIdentifier\u003e token \u003d\n        new FsPathResponseRunner\u003cToken\u003cDelegationTokenIdentifier\u003e\u003e(\n            op, null, new RenewerParam(renewer)) {\n      @Override\n      Token\u003cDelegationTokenIdentifier\u003e decodeResponse(Map\u003c?,?\u003e json)\n          throws IOException {\n        return JsonUtil.toDelegationToken(json);\n      }\n    }.run();\n    token.setService(tokenServiceName);\n    return token;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/WebHdfsFileSystem.java",
      "extendedDetails": {}
    },
    "5c381ade4e6b6428b316c41ad5f5bc145829473d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5339. WebHDFS URI does not accept logical nameservices when security is enabled. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1573026 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/02/14 10:39 AM",
      "commitName": "5c381ade4e6b6428b316c41ad5f5bc145829473d",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "08/02/14 11:05 AM",
      "commitNameOld": "c6505f0499bc925fcc909f1c4eed89ba0c9098f7",
      "commitAuthorOld": "",
      "daysBetweenCommits": 19.98,
      "commitsBetweenForRepo": 160,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,8 @@\n   public Token\u003cDelegationTokenIdentifier\u003e getDelegationToken(\n       final String renewer) throws IOException {\n     final HttpOpParam.Op op \u003d GetOpParam.Op.GETDELEGATIONTOKEN;\n     final Map\u003c?, ?\u003e m \u003d run(op, null, new RenewerParam(renewer));\n-    final Token\u003cDelegationTokenIdentifier\u003e token \u003d JsonUtil.toDelegationToken(m); \n-    SecurityUtil.setTokenService(token, getCurrentNNAddr());\n+    final Token\u003cDelegationTokenIdentifier\u003e token \u003d JsonUtil.toDelegationToken(m);\n+    token.setService(tokenServiceName);\n     return token;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Token\u003cDelegationTokenIdentifier\u003e getDelegationToken(\n      final String renewer) throws IOException {\n    final HttpOpParam.Op op \u003d GetOpParam.Op.GETDELEGATIONTOKEN;\n    final Map\u003c?, ?\u003e m \u003d run(op, null, new RenewerParam(renewer));\n    final Token\u003cDelegationTokenIdentifier\u003e token \u003d JsonUtil.toDelegationToken(m);\n    token.setService(tokenServiceName);\n    return token;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/WebHdfsFileSystem.java",
      "extendedDetails": {}
    },
    "7a2443e9f8b95816c7df61530cda29e8b040b12e": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5122. Support failover and retry in WebHdfsFileSystem for NN HA. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1524562 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/09/13 1:47 PM",
      "commitName": "7a2443e9f8b95816c7df61530cda29e8b040b12e",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "18/09/13 10:29 AM",
      "commitNameOld": "f278a491dcec249a2ec22e14b645d8f890278be5",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 0.14,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,8 @@\n   public Token\u003cDelegationTokenIdentifier\u003e getDelegationToken(\n       final String renewer) throws IOException {\n     final HttpOpParam.Op op \u003d GetOpParam.Op.GETDELEGATIONTOKEN;\n     final Map\u003c?, ?\u003e m \u003d run(op, null, new RenewerParam(renewer));\n     final Token\u003cDelegationTokenIdentifier\u003e token \u003d JsonUtil.toDelegationToken(m); \n-    SecurityUtil.setTokenService(token, nnAddr);\n+    SecurityUtil.setTokenService(token, getCurrentNNAddr());\n     return token;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Token\u003cDelegationTokenIdentifier\u003e getDelegationToken(\n      final String renewer) throws IOException {\n    final HttpOpParam.Op op \u003d GetOpParam.Op.GETDELEGATIONTOKEN;\n    final Map\u003c?, ?\u003e m \u003d run(op, null, new RenewerParam(renewer));\n    final Token\u003cDelegationTokenIdentifier\u003e token \u003d JsonUtil.toDelegationToken(m); \n    SecurityUtil.setTokenService(token, getCurrentNNAddr());\n    return token;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/WebHdfsFileSystem.java",
      "extendedDetails": {}
    },
    "09a156fcce2bc1be4081717bf7ef7d290e80d818": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2539. Support doAs and GETHOMEDIRECTORY in webhdfs.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1200731 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/11/11 8:19 PM",
      "commitName": "09a156fcce2bc1be4081717bf7ef7d290e80d818",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "08/11/11 11:25 AM",
      "commitNameOld": "94c631af1fc49f5ae5881fcd5f0e80b17308d15d",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 2.37,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,8 @@\n   public Token\u003cDelegationTokenIdentifier\u003e getDelegationToken(final String renewer\n       ) throws IOException {\n     final HttpOpParam.Op op \u003d GetOpParam.Op.GETDELEGATIONTOKEN;\n     final Map\u003c?, ?\u003e m \u003d run(op, null, new RenewerParam(renewer));\n     final Token\u003cDelegationTokenIdentifier\u003e token \u003d JsonUtil.toDelegationToken(m); \n-    token.setService(new Text(getCanonicalServiceName()));\n+    SecurityUtil.setTokenService(token, nnAddr);\n     return token;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Token\u003cDelegationTokenIdentifier\u003e getDelegationToken(final String renewer\n      ) throws IOException {\n    final HttpOpParam.Op op \u003d GetOpParam.Op.GETDELEGATIONTOKEN;\n    final Map\u003c?, ?\u003e m \u003d run(op, null, new RenewerParam(renewer));\n    final Token\u003cDelegationTokenIdentifier\u003e token \u003d JsonUtil.toDelegationToken(m); \n    SecurityUtil.setTokenService(token, nnAddr);\n    return token;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/WebHdfsFileSystem.java",
      "extendedDetails": {}
    },
    "8cb0d4b380e0fd4437310c1dd6ef8b8995cc383d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2432. Webhdfs: response FORBIDDEN when setReplication on non-files; clear umask before creating a flie; throw IllegalArgumentException if setOwner with both owner and group empty; throw FileNotFoundException if getFileStatus on non-existing files; fix bugs in getBlockLocations; and changed getFileChecksum json response root to \"FileChecksum\".\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1190077 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/10/11 4:13 PM",
      "commitName": "8cb0d4b380e0fd4437310c1dd6ef8b8995cc383d",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "25/10/11 10:16 PM",
      "commitNameOld": "8335995630e2c4288795fa0dfa9b670090a6790b",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 1.75,
      "commitsBetweenForRepo": 30,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,8 @@\n   public Token\u003cDelegationTokenIdentifier\u003e getDelegationToken(final String renewer\n       ) throws IOException {\n     final HttpOpParam.Op op \u003d GetOpParam.Op.GETDELEGATIONTOKEN;\n-    final Map\u003cString, Object\u003e m \u003d run(op, null, new RenewerParam(renewer));\n+    final Map\u003c?, ?\u003e m \u003d run(op, null, new RenewerParam(renewer));\n     final Token\u003cDelegationTokenIdentifier\u003e token \u003d JsonUtil.toDelegationToken(m); \n     token.setService(new Text(getCanonicalServiceName()));\n     return token;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Token\u003cDelegationTokenIdentifier\u003e getDelegationToken(final String renewer\n      ) throws IOException {\n    final HttpOpParam.Op op \u003d GetOpParam.Op.GETDELEGATIONTOKEN;\n    final Map\u003c?, ?\u003e m \u003d run(op, null, new RenewerParam(renewer));\n    final Token\u003cDelegationTokenIdentifier\u003e token \u003d JsonUtil.toDelegationToken(m); \n    token.setService(new Text(getCanonicalServiceName()));\n    return token;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/WebHdfsFileSystem.java",
      "extendedDetails": {}
    },
    "4dc4e9e63f7385ddd1d64ae1345e0d32a4acb9de": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-2340. Support getFileBlockLocations and getDelegationToken in webhdfs.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1173468 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "20/09/11 7:56 PM",
      "commitName": "4dc4e9e63f7385ddd1d64ae1345e0d32a4acb9de",
      "commitAuthor": "Tsz-wo Sze",
      "diff": "@@ -0,0 +1,8 @@\n+  public Token\u003cDelegationTokenIdentifier\u003e getDelegationToken(final String renewer\n+      ) throws IOException {\n+    final HttpOpParam.Op op \u003d GetOpParam.Op.GETDELEGATIONTOKEN;\n+    final Map\u003cString, Object\u003e m \u003d run(op, null, new RenewerParam(renewer));\n+    final Token\u003cDelegationTokenIdentifier\u003e token \u003d JsonUtil.toDelegationToken(m); \n+    token.setService(new Text(getCanonicalServiceName()));\n+    return token;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Token\u003cDelegationTokenIdentifier\u003e getDelegationToken(final String renewer\n      ) throws IOException {\n    final HttpOpParam.Op op \u003d GetOpParam.Op.GETDELEGATIONTOKEN;\n    final Map\u003cString, Object\u003e m \u003d run(op, null, new RenewerParam(renewer));\n    final Token\u003cDelegationTokenIdentifier\u003e token \u003d JsonUtil.toDelegationToken(m); \n    token.setService(new Text(getCanonicalServiceName()));\n    return token;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/web/WebHdfsFileSystem.java"
    }
  }
}