{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ErasureCodingPolicyManager.java",
  "functionName": "removePolicy",
  "functionId": "removePolicy___name-String",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ErasureCodingPolicyManager.java",
  "functionStartLine": 362,
  "functionEndLine": 388,
  "numCommitsSeen": 34,
  "timeTaken": 3792,
  "changeHistory": [
    "8d99648c203004045a9339ad27258092969145d6",
    "e565b5277d5b890dad107fe85e295a3907e4bfc1",
    "ae8f55b93243560bd891962d6c64320ddc62a7d7",
    "2adf8bed712e6d770a0d53eea198d8911ae1a258",
    "200b11368d3954138a9bce128c8fa763b4a503a1",
    "5db3f9846882c51991d16853a5c431664f3f801f"
  ],
  "changeHistoryShort": {
    "8d99648c203004045a9339ad27258092969145d6": "Ybodychange",
    "e565b5277d5b890dad107fe85e295a3907e4bfc1": "Ybodychange",
    "ae8f55b93243560bd891962d6c64320ddc62a7d7": "Ybodychange",
    "2adf8bed712e6d770a0d53eea198d8911ae1a258": "Ybodychange",
    "200b11368d3954138a9bce128c8fa763b4a503a1": "Ybodychange",
    "5db3f9846882c51991d16853a5c431664f3f801f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8d99648c203004045a9339ad27258092969145d6": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14039. ec -listPolicies doesn\u0027t show correct state for the default policy when the default is not RS(6,3). Contributed by Kitti Nanasi.\n\nSigned-off-by: Xiao Chen \u003cxiao@apache.org\u003e\n",
      "commitDate": "08/11/18 10:01 AM",
      "commitName": "8d99648c203004045a9339ad27258092969145d6",
      "commitAuthor": "Kitti Nanasi",
      "commitDateOld": "28/09/18 8:53 AM",
      "commitNameOld": "e2113500df2479dd2d8f1d8a37fdb2bb16463181",
      "commitAuthorOld": "Takanobu Asanuma",
      "daysBetweenCommits": 41.09,
      "commitsBetweenForRepo": 385,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,27 @@\n   public synchronized void removePolicy(String name) {\n     final ErasureCodingPolicyInfo info \u003d policiesByName.get(name);\n     if (info \u003d\u003d null) {\n       throw new HadoopIllegalArgumentException(\"The policy name \" +\n           name + \" does not exist\");\n     }\n \n     final ErasureCodingPolicy ecPolicy \u003d info.getPolicy();\n     if (ecPolicy.isSystemPolicy()) {\n       throw new HadoopIllegalArgumentException(\"System erasure coding policy \" +\n           name + \" cannot be removed\");\n     }\n \n     if (enabledPoliciesByName.containsKey(name)) {\n       enabledPoliciesByName.remove(name);\n       enabledPolicies \u003d\n           enabledPoliciesByName.values().toArray(new ErasureCodingPolicy[0]);\n     }\n     info.setState(ErasureCodingPolicyState.REMOVED);\n     LOG.info(\"Remove erasure coding policy \" + name);\n-\n+    allPersistedPolicies.put(ecPolicy.getId(),\n+        createPolicyInfo(ecPolicy, ErasureCodingPolicyState.REMOVED));\n     /*\n      * TODO HDFS-12405 postpone the delete removed policy to Namenode restart\n      * time.\n      * */\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void removePolicy(String name) {\n    final ErasureCodingPolicyInfo info \u003d policiesByName.get(name);\n    if (info \u003d\u003d null) {\n      throw new HadoopIllegalArgumentException(\"The policy name \" +\n          name + \" does not exist\");\n    }\n\n    final ErasureCodingPolicy ecPolicy \u003d info.getPolicy();\n    if (ecPolicy.isSystemPolicy()) {\n      throw new HadoopIllegalArgumentException(\"System erasure coding policy \" +\n          name + \" cannot be removed\");\n    }\n\n    if (enabledPoliciesByName.containsKey(name)) {\n      enabledPoliciesByName.remove(name);\n      enabledPolicies \u003d\n          enabledPoliciesByName.values().toArray(new ErasureCodingPolicy[0]);\n    }\n    info.setState(ErasureCodingPolicyState.REMOVED);\n    LOG.info(\"Remove erasure coding policy \" + name);\n    allPersistedPolicies.put(ecPolicy.getId(),\n        createPolicyInfo(ecPolicy, ErasureCodingPolicyState.REMOVED));\n    /*\n     * TODO HDFS-12405 postpone the delete removed policy to Namenode restart\n     * time.\n     * */\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ErasureCodingPolicyManager.java",
      "extendedDetails": {}
    },
    "e565b5277d5b890dad107fe85e295a3907e4bfc1": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12682. ECAdmin -listPolicies will always show SystemErasureCodingPolicies state as DISABLED.\n",
      "commitDate": "02/11/17 9:27 PM",
      "commitName": "e565b5277d5b890dad107fe85e295a3907e4bfc1",
      "commitAuthor": "Xiao Chen",
      "commitDateOld": "19/10/17 6:42 PM",
      "commitNameOld": "ce7cf66e5ed74c124afdb5a6902fbf297211cc04",
      "commitAuthorOld": "Kai Zheng",
      "daysBetweenCommits": 14.11,
      "commitsBetweenForRepo": 94,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,26 @@\n   public synchronized void removePolicy(String name) {\n-    ErasureCodingPolicy ecPolicy \u003d policiesByName.get(name);\n-    if (ecPolicy \u003d\u003d null) {\n+    final ErasureCodingPolicyInfo info \u003d policiesByName.get(name);\n+    if (info \u003d\u003d null) {\n       throw new HadoopIllegalArgumentException(\"The policy name \" +\n           name + \" does not exist\");\n     }\n \n+    final ErasureCodingPolicy ecPolicy \u003d info.getPolicy();\n     if (ecPolicy.isSystemPolicy()) {\n       throw new HadoopIllegalArgumentException(\"System erasure coding policy \" +\n           name + \" cannot be removed\");\n     }\n \n     if (enabledPoliciesByName.containsKey(name)) {\n       enabledPoliciesByName.remove(name);\n       enabledPolicies \u003d\n           enabledPoliciesByName.values().toArray(new ErasureCodingPolicy[0]);\n     }\n-    ecPolicy.setState(ErasureCodingPolicyState.REMOVED);\n+    info.setState(ErasureCodingPolicyState.REMOVED);\n     LOG.info(\"Remove erasure coding policy \" + name);\n \n     /*\n      * TODO HDFS-12405 postpone the delete removed policy to Namenode restart\n      * time.\n      * */\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void removePolicy(String name) {\n    final ErasureCodingPolicyInfo info \u003d policiesByName.get(name);\n    if (info \u003d\u003d null) {\n      throw new HadoopIllegalArgumentException(\"The policy name \" +\n          name + \" does not exist\");\n    }\n\n    final ErasureCodingPolicy ecPolicy \u003d info.getPolicy();\n    if (ecPolicy.isSystemPolicy()) {\n      throw new HadoopIllegalArgumentException(\"System erasure coding policy \" +\n          name + \" cannot be removed\");\n    }\n\n    if (enabledPoliciesByName.containsKey(name)) {\n      enabledPoliciesByName.remove(name);\n      enabledPolicies \u003d\n          enabledPoliciesByName.values().toArray(new ErasureCodingPolicy[0]);\n    }\n    info.setState(ErasureCodingPolicyState.REMOVED);\n    LOG.info(\"Remove erasure coding policy \" + name);\n\n    /*\n     * TODO HDFS-12405 postpone the delete removed policy to Namenode restart\n     * time.\n     * */\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ErasureCodingPolicyManager.java",
      "extendedDetails": {}
    },
    "ae8f55b93243560bd891962d6c64320ddc62a7d7": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7859. Erasure Coding: Persist erasure coding policies in NameNode. Contributed by Sammi Chen\n",
      "commitDate": "14/09/17 6:08 PM",
      "commitName": "ae8f55b93243560bd891962d6c64320ddc62a7d7",
      "commitAuthor": "Kai Zheng",
      "commitDateOld": "13/09/17 6:15 PM",
      "commitNameOld": "e0b3c644e186d89138d4174efe0cbe77a0200315",
      "commitAuthorOld": "ChenSammi",
      "daysBetweenCommits": 1.0,
      "commitsBetweenForRepo": 14,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,25 @@\n   public synchronized void removePolicy(String name) {\n     ErasureCodingPolicy ecPolicy \u003d policiesByName.get(name);\n     if (ecPolicy \u003d\u003d null) {\n       throw new HadoopIllegalArgumentException(\"The policy name \" +\n           name + \" does not exist\");\n     }\n \n     if (ecPolicy.isSystemPolicy()) {\n       throw new HadoopIllegalArgumentException(\"System erasure coding policy \" +\n           name + \" cannot be removed\");\n     }\n \n     if (enabledPoliciesByName.containsKey(name)) {\n       enabledPoliciesByName.remove(name);\n       enabledPolicies \u003d\n           enabledPoliciesByName.values().toArray(new ErasureCodingPolicy[0]);\n     }\n     ecPolicy.setState(ErasureCodingPolicyState.REMOVED);\n     LOG.info(\"Remove erasure coding policy \" + name);\n+\n+    /*\n+     * TODO HDFS-12405 postpone the delete removed policy to Namenode restart\n+     * time.\n+     * */\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void removePolicy(String name) {\n    ErasureCodingPolicy ecPolicy \u003d policiesByName.get(name);\n    if (ecPolicy \u003d\u003d null) {\n      throw new HadoopIllegalArgumentException(\"The policy name \" +\n          name + \" does not exist\");\n    }\n\n    if (ecPolicy.isSystemPolicy()) {\n      throw new HadoopIllegalArgumentException(\"System erasure coding policy \" +\n          name + \" cannot be removed\");\n    }\n\n    if (enabledPoliciesByName.containsKey(name)) {\n      enabledPoliciesByName.remove(name);\n      enabledPolicies \u003d\n          enabledPoliciesByName.values().toArray(new ErasureCodingPolicy[0]);\n    }\n    ecPolicy.setState(ErasureCodingPolicyState.REMOVED);\n    LOG.info(\"Remove erasure coding policy \" + name);\n\n    /*\n     * TODO HDFS-12405 postpone the delete removed policy to Namenode restart\n     * time.\n     * */\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ErasureCodingPolicyManager.java",
      "extendedDetails": {}
    },
    "2adf8bed712e6d770a0d53eea198d8911ae1a258": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12402. Refactor ErasureCodingPolicyManager and related codes. Contributed by Sammi Chen\n",
      "commitDate": "07/09/17 5:38 AM",
      "commitName": "2adf8bed712e6d770a0d53eea198d8911ae1a258",
      "commitAuthor": "Kai Zheng",
      "commitDateOld": "30/08/17 12:28 AM",
      "commitNameOld": "200b11368d3954138a9bce128c8fa763b4a503a1",
      "commitAuthorOld": "Rakesh Radhakrishnan",
      "daysBetweenCommits": 8.21,
      "commitsBetweenForRepo": 53,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   public synchronized void removePolicy(String name) {\n     ErasureCodingPolicy ecPolicy \u003d policiesByName.get(name);\n     if (ecPolicy \u003d\u003d null) {\n-      throw new IllegalArgumentException(\"The policy name \" +\n-          name + \" does not exists\");\n+      throw new HadoopIllegalArgumentException(\"The policy name \" +\n+          name + \" does not exist\");\n     }\n \n     if (ecPolicy.isSystemPolicy()) {\n-      throw new IllegalArgumentException(\"System erasure coding policy \" +\n+      throw new HadoopIllegalArgumentException(\"System erasure coding policy \" +\n           name + \" cannot be removed\");\n     }\n \n     if (enabledPoliciesByName.containsKey(name)) {\n       enabledPoliciesByName.remove(name);\n       enabledPolicies \u003d\n           enabledPoliciesByName.values().toArray(new ErasureCodingPolicy[0]);\n     }\n     ecPolicy.setState(ErasureCodingPolicyState.REMOVED);\n     LOG.info(\"Remove erasure coding policy \" + name);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void removePolicy(String name) {\n    ErasureCodingPolicy ecPolicy \u003d policiesByName.get(name);\n    if (ecPolicy \u003d\u003d null) {\n      throw new HadoopIllegalArgumentException(\"The policy name \" +\n          name + \" does not exist\");\n    }\n\n    if (ecPolicy.isSystemPolicy()) {\n      throw new HadoopIllegalArgumentException(\"System erasure coding policy \" +\n          name + \" cannot be removed\");\n    }\n\n    if (enabledPoliciesByName.containsKey(name)) {\n      enabledPoliciesByName.remove(name);\n      enabledPolicies \u003d\n          enabledPoliciesByName.values().toArray(new ErasureCodingPolicy[0]);\n    }\n    ecPolicy.setState(ErasureCodingPolicyState.REMOVED);\n    LOG.info(\"Remove erasure coding policy \" + name);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ErasureCodingPolicyManager.java",
      "extendedDetails": {}
    },
    "200b11368d3954138a9bce128c8fa763b4a503a1": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12258. ec -listPolicies should list all policies in system, no matter it\u0027s enabled or disabled. Contributed by Wei Zhou.\n",
      "commitDate": "30/08/17 12:28 AM",
      "commitName": "200b11368d3954138a9bce128c8fa763b4a503a1",
      "commitAuthor": "Rakesh Radhakrishnan",
      "commitDateOld": "16/08/17 10:17 PM",
      "commitNameOld": "96b3a6b9721e922d33fadc2459b561a85dbf9b8e",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 13.09,
      "commitsBetweenForRepo": 125,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,20 @@\n   public synchronized void removePolicy(String name) {\n-    if (SystemErasureCodingPolicies.getByName(name) !\u003d null) {\n-      throw new IllegalArgumentException(\"System erasure coding policy \" +\n-          name + \" cannot be removed\");\n-    }\n-    ErasureCodingPolicy policy \u003d userPoliciesByName.get(name);\n-    if (policy \u003d\u003d null) {\n+    ErasureCodingPolicy ecPolicy \u003d policiesByName.get(name);\n+    if (ecPolicy \u003d\u003d null) {\n       throw new IllegalArgumentException(\"The policy name \" +\n           name + \" does not exists\");\n     }\n-    enabledPoliciesByName.remove(name);\n-    removedPoliciesByName.put(name, policy);\n+\n+    if (ecPolicy.isSystemPolicy()) {\n+      throw new IllegalArgumentException(\"System erasure coding policy \" +\n+          name + \" cannot be removed\");\n+    }\n+\n+    if (enabledPoliciesByName.containsKey(name)) {\n+      enabledPoliciesByName.remove(name);\n+      enabledPolicies \u003d\n+          enabledPoliciesByName.values().toArray(new ErasureCodingPolicy[0]);\n+    }\n+    ecPolicy.setState(ErasureCodingPolicyState.REMOVED);\n+    LOG.info(\"Remove erasure coding policy \" + name);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void removePolicy(String name) {\n    ErasureCodingPolicy ecPolicy \u003d policiesByName.get(name);\n    if (ecPolicy \u003d\u003d null) {\n      throw new IllegalArgumentException(\"The policy name \" +\n          name + \" does not exists\");\n    }\n\n    if (ecPolicy.isSystemPolicy()) {\n      throw new IllegalArgumentException(\"System erasure coding policy \" +\n          name + \" cannot be removed\");\n    }\n\n    if (enabledPoliciesByName.containsKey(name)) {\n      enabledPoliciesByName.remove(name);\n      enabledPolicies \u003d\n          enabledPoliciesByName.values().toArray(new ErasureCodingPolicy[0]);\n    }\n    ecPolicy.setState(ErasureCodingPolicyState.REMOVED);\n    LOG.info(\"Remove erasure coding policy \" + name);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ErasureCodingPolicyManager.java",
      "extendedDetails": {}
    },
    "5db3f9846882c51991d16853a5c431664f3f801f": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-11606. Add CLI cmd to remove an erasure code policy. Contributed by Tim Yao\n",
      "commitDate": "20/06/17 11:01 PM",
      "commitName": "5db3f9846882c51991d16853a5c431664f3f801f",
      "commitAuthor": "Kai Zheng",
      "diff": "@@ -0,0 +1,13 @@\n+  public synchronized void removePolicy(String name) {\n+    if (SystemErasureCodingPolicies.getByName(name) !\u003d null) {\n+      throw new IllegalArgumentException(\"System erasure coding policy \" +\n+          name + \" cannot be removed\");\n+    }\n+    ErasureCodingPolicy policy \u003d userPoliciesByName.get(name);\n+    if (policy \u003d\u003d null) {\n+      throw new IllegalArgumentException(\"The policy name \" +\n+          name + \" does not exists\");\n+    }\n+    enabledPoliciesByName.remove(name);\n+    removedPoliciesByName.put(name, policy);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void removePolicy(String name) {\n    if (SystemErasureCodingPolicies.getByName(name) !\u003d null) {\n      throw new IllegalArgumentException(\"System erasure coding policy \" +\n          name + \" cannot be removed\");\n    }\n    ErasureCodingPolicy policy \u003d userPoliciesByName.get(name);\n    if (policy \u003d\u003d null) {\n      throw new IllegalArgumentException(\"The policy name \" +\n          name + \" does not exists\");\n    }\n    enabledPoliciesByName.remove(name);\n    removedPoliciesByName.put(name, policy);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ErasureCodingPolicyManager.java"
    }
  }
}