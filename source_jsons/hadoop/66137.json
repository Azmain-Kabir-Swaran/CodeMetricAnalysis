{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AWSCredentialProviderList.java",
  "functionName": "getCredentials",
  "functionId": "getCredentials",
  "sourceFilePath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/AWSCredentialProviderList.java",
  "functionStartLine": 163,
  "functionEndLine": 218,
  "numCommitsSeen": 8,
  "timeTaken": 2239,
  "changeHistory": [
    "6d0bffe17eadedd60d4599427248b0db4a7c5502",
    "7f783970364930cc461d1a73833bc58cdd10553e",
    "d7152332b32a575c3a92e3f4c44b95e58462528d",
    "da9a39eed138210de29b59b90c449b28da1c04f9",
    "763f0497bb996e331e40caed9ca0af966f5b3fac"
  ],
  "changeHistoryShort": {
    "6d0bffe17eadedd60d4599427248b0db4a7c5502": "Ybodychange",
    "7f783970364930cc461d1a73833bc58cdd10553e": "Ybodychange",
    "d7152332b32a575c3a92e3f4c44b95e58462528d": "Ybodychange",
    "da9a39eed138210de29b59b90c449b28da1c04f9": "Ybodychange",
    "763f0497bb996e331e40caed9ca0af966f5b3fac": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6d0bffe17eadedd60d4599427248b0db4a7c5502": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14556. S3A to support Delegation Tokens.\n\nContributed by Steve Loughran and Daryn Sharp.\n",
      "commitDate": "14/01/19 9:59 AM",
      "commitName": "6d0bffe17eadedd60d4599427248b0db4a7c5502",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "07/01/19 9:51 PM",
      "commitNameOld": "7f783970364930cc461d1a73833bc58cdd10553e",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 6.51,
      "commitsBetweenForRepo": 32,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,56 @@\n   public AWSCredentials getCredentials() {\n     if (isClosed()) {\n       LOG.warn(CREDENTIALS_REQUESTED_WHEN_CLOSED);\n-      throw new NoAuthWithAWSException(\n+      throw new NoAuthWithAWSException(name +\n           CREDENTIALS_REQUESTED_WHEN_CLOSED);\n     }\n     checkNotEmpty();\n     if (reuseLastProvider \u0026\u0026 lastProvider !\u003d null) {\n       return lastProvider.getCredentials();\n     }\n \n     AmazonClientException lastException \u003d null;\n     for (AWSCredentialsProvider provider : providers) {\n       try {\n         AWSCredentials credentials \u003d provider.getCredentials();\n+        Preconditions.checkNotNull(credentials,\n+            \"Null credentials returned by %s\", provider);\n         if ((credentials.getAWSAccessKeyId() !\u003d null \u0026\u0026\n             credentials.getAWSSecretKey() !\u003d null)\n             || (credentials instanceof AnonymousAWSCredentials)) {\n           lastProvider \u003d provider;\n           LOG.debug(\"Using credentials from {}\", provider);\n           return credentials;\n         }\n+      } catch (NoAwsCredentialsException e) {\n+        // don\u0027t bother with the stack trace here as it is usually a\n+        // minor detail.\n+\n+        // only update the last exception if it isn\u0027t set.\n+        // Why so? Stops delegation token issues being lost on the fallback\n+        // values.\n+        if (lastException \u003d\u003d null) {\n+          lastException \u003d e;\n+        }\n+        LOG.debug(\"No credentials from {}: {}\",\n+            provider, e.toString());\n       } catch (AmazonClientException e) {\n         lastException \u003d e;\n         LOG.debug(\"No credentials provided by {}: {}\",\n             provider, e.toString(), e);\n       }\n     }\n \n     // no providers had any credentials. Rethrow the last exception\n     // or create a new one.\n-    String message \u003d \"No AWS Credentials provided by \"\n+    String message \u003d  name +  \"No AWS Credentials provided by \"\n         + listProviderNames();\n     if (lastException !\u003d null) {\n       message +\u003d \": \" + lastException;\n     }\n-    throw new NoAuthWithAWSException(message, lastException);\n+    if (lastException instanceof CredentialInitializationException) {\n+      throw lastException;\n+    } else {\n+      throw new NoAuthWithAWSException(message, lastException);\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public AWSCredentials getCredentials() {\n    if (isClosed()) {\n      LOG.warn(CREDENTIALS_REQUESTED_WHEN_CLOSED);\n      throw new NoAuthWithAWSException(name +\n          CREDENTIALS_REQUESTED_WHEN_CLOSED);\n    }\n    checkNotEmpty();\n    if (reuseLastProvider \u0026\u0026 lastProvider !\u003d null) {\n      return lastProvider.getCredentials();\n    }\n\n    AmazonClientException lastException \u003d null;\n    for (AWSCredentialsProvider provider : providers) {\n      try {\n        AWSCredentials credentials \u003d provider.getCredentials();\n        Preconditions.checkNotNull(credentials,\n            \"Null credentials returned by %s\", provider);\n        if ((credentials.getAWSAccessKeyId() !\u003d null \u0026\u0026\n            credentials.getAWSSecretKey() !\u003d null)\n            || (credentials instanceof AnonymousAWSCredentials)) {\n          lastProvider \u003d provider;\n          LOG.debug(\"Using credentials from {}\", provider);\n          return credentials;\n        }\n      } catch (NoAwsCredentialsException e) {\n        // don\u0027t bother with the stack trace here as it is usually a\n        // minor detail.\n\n        // only update the last exception if it isn\u0027t set.\n        // Why so? Stops delegation token issues being lost on the fallback\n        // values.\n        if (lastException \u003d\u003d null) {\n          lastException \u003d e;\n        }\n        LOG.debug(\"No credentials from {}: {}\",\n            provider, e.toString());\n      } catch (AmazonClientException e) {\n        lastException \u003d e;\n        LOG.debug(\"No credentials provided by {}: {}\",\n            provider, e.toString(), e);\n      }\n    }\n\n    // no providers had any credentials. Rethrow the last exception\n    // or create a new one.\n    String message \u003d  name +  \"No AWS Credentials provided by \"\n        + listProviderNames();\n    if (lastException !\u003d null) {\n      message +\u003d \": \" + lastException;\n    }\n    if (lastException instanceof CredentialInitializationException) {\n      throw lastException;\n    } else {\n      throw new NoAuthWithAWSException(message, lastException);\n    }\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/AWSCredentialProviderList.java",
      "extendedDetails": {}
    },
    "7f783970364930cc461d1a73833bc58cdd10553e": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"HADOOP-14556. S3A to support Delegation Tokens.\"\n\nThis reverts commit d7152332b32a575c3a92e3f4c44b95e58462528d.\n",
      "commitDate": "07/01/19 9:51 PM",
      "commitName": "7f783970364930cc461d1a73833bc58cdd10553e",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "07/01/19 5:18 AM",
      "commitNameOld": "d7152332b32a575c3a92e3f4c44b95e58462528d",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 0.69,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,56 +1,38 @@\n   public AWSCredentials getCredentials() {\n     if (isClosed()) {\n       LOG.warn(CREDENTIALS_REQUESTED_WHEN_CLOSED);\n-      throw new NoAuthWithAWSException(name +\n+      throw new NoAuthWithAWSException(\n           CREDENTIALS_REQUESTED_WHEN_CLOSED);\n     }\n     checkNotEmpty();\n     if (reuseLastProvider \u0026\u0026 lastProvider !\u003d null) {\n       return lastProvider.getCredentials();\n     }\n \n     AmazonClientException lastException \u003d null;\n     for (AWSCredentialsProvider provider : providers) {\n       try {\n         AWSCredentials credentials \u003d provider.getCredentials();\n-        Preconditions.checkNotNull(credentials,\n-            \"Null credentials returned by %s\", provider);\n         if ((credentials.getAWSAccessKeyId() !\u003d null \u0026\u0026\n             credentials.getAWSSecretKey() !\u003d null)\n             || (credentials instanceof AnonymousAWSCredentials)) {\n           lastProvider \u003d provider;\n           LOG.debug(\"Using credentials from {}\", provider);\n           return credentials;\n         }\n-      } catch (NoAwsCredentialsException e) {\n-        // don\u0027t bother with the stack trace here as it is usually a\n-        // minor detail.\n-\n-        // only update the last exception if it isn\u0027t set.\n-        // Why so? Stops delegation token issues being lost on the fallback\n-        // values.\n-        if (lastException \u003d\u003d null) {\n-          lastException \u003d e;\n-        }\n-        LOG.debug(\"No credentials from {}: {}\",\n-            provider, e.toString());\n       } catch (AmazonClientException e) {\n         lastException \u003d e;\n         LOG.debug(\"No credentials provided by {}: {}\",\n             provider, e.toString(), e);\n       }\n     }\n \n     // no providers had any credentials. Rethrow the last exception\n     // or create a new one.\n-    String message \u003d  name +  \"No AWS Credentials provided by \"\n+    String message \u003d \"No AWS Credentials provided by \"\n         + listProviderNames();\n     if (lastException !\u003d null) {\n       message +\u003d \": \" + lastException;\n     }\n-    if (lastException instanceof CredentialInitializationException) {\n-      throw lastException;\n-    } else {\n-      throw new NoAuthWithAWSException(message, lastException);\n-    }\n+    throw new NoAuthWithAWSException(message, lastException);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public AWSCredentials getCredentials() {\n    if (isClosed()) {\n      LOG.warn(CREDENTIALS_REQUESTED_WHEN_CLOSED);\n      throw new NoAuthWithAWSException(\n          CREDENTIALS_REQUESTED_WHEN_CLOSED);\n    }\n    checkNotEmpty();\n    if (reuseLastProvider \u0026\u0026 lastProvider !\u003d null) {\n      return lastProvider.getCredentials();\n    }\n\n    AmazonClientException lastException \u003d null;\n    for (AWSCredentialsProvider provider : providers) {\n      try {\n        AWSCredentials credentials \u003d provider.getCredentials();\n        if ((credentials.getAWSAccessKeyId() !\u003d null \u0026\u0026\n            credentials.getAWSSecretKey() !\u003d null)\n            || (credentials instanceof AnonymousAWSCredentials)) {\n          lastProvider \u003d provider;\n          LOG.debug(\"Using credentials from {}\", provider);\n          return credentials;\n        }\n      } catch (AmazonClientException e) {\n        lastException \u003d e;\n        LOG.debug(\"No credentials provided by {}: {}\",\n            provider, e.toString(), e);\n      }\n    }\n\n    // no providers had any credentials. Rethrow the last exception\n    // or create a new one.\n    String message \u003d \"No AWS Credentials provided by \"\n        + listProviderNames();\n    if (lastException !\u003d null) {\n      message +\u003d \": \" + lastException;\n    }\n    throw new NoAuthWithAWSException(message, lastException);\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/AWSCredentialProviderList.java",
      "extendedDetails": {}
    },
    "d7152332b32a575c3a92e3f4c44b95e58462528d": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14556. S3A to support Delegation Tokens.\n\nContributed by Steve Loughran.\n",
      "commitDate": "07/01/19 5:18 AM",
      "commitName": "d7152332b32a575c3a92e3f4c44b95e58462528d",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "08/08/18 10:57 PM",
      "commitNameOld": "da9a39eed138210de29b59b90c449b28da1c04f9",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 151.31,
      "commitsBetweenForRepo": 1243,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,56 @@\n   public AWSCredentials getCredentials() {\n     if (isClosed()) {\n       LOG.warn(CREDENTIALS_REQUESTED_WHEN_CLOSED);\n-      throw new NoAuthWithAWSException(\n+      throw new NoAuthWithAWSException(name +\n           CREDENTIALS_REQUESTED_WHEN_CLOSED);\n     }\n     checkNotEmpty();\n     if (reuseLastProvider \u0026\u0026 lastProvider !\u003d null) {\n       return lastProvider.getCredentials();\n     }\n \n     AmazonClientException lastException \u003d null;\n     for (AWSCredentialsProvider provider : providers) {\n       try {\n         AWSCredentials credentials \u003d provider.getCredentials();\n+        Preconditions.checkNotNull(credentials,\n+            \"Null credentials returned by %s\", provider);\n         if ((credentials.getAWSAccessKeyId() !\u003d null \u0026\u0026\n             credentials.getAWSSecretKey() !\u003d null)\n             || (credentials instanceof AnonymousAWSCredentials)) {\n           lastProvider \u003d provider;\n           LOG.debug(\"Using credentials from {}\", provider);\n           return credentials;\n         }\n+      } catch (NoAwsCredentialsException e) {\n+        // don\u0027t bother with the stack trace here as it is usually a\n+        // minor detail.\n+\n+        // only update the last exception if it isn\u0027t set.\n+        // Why so? Stops delegation token issues being lost on the fallback\n+        // values.\n+        if (lastException \u003d\u003d null) {\n+          lastException \u003d e;\n+        }\n+        LOG.debug(\"No credentials from {}: {}\",\n+            provider, e.toString());\n       } catch (AmazonClientException e) {\n         lastException \u003d e;\n         LOG.debug(\"No credentials provided by {}: {}\",\n             provider, e.toString(), e);\n       }\n     }\n \n     // no providers had any credentials. Rethrow the last exception\n     // or create a new one.\n-    String message \u003d \"No AWS Credentials provided by \"\n+    String message \u003d  name +  \"No AWS Credentials provided by \"\n         + listProviderNames();\n     if (lastException !\u003d null) {\n       message +\u003d \": \" + lastException;\n     }\n-    throw new NoAuthWithAWSException(message, lastException);\n+    if (lastException instanceof CredentialInitializationException) {\n+      throw lastException;\n+    } else {\n+      throw new NoAuthWithAWSException(message, lastException);\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public AWSCredentials getCredentials() {\n    if (isClosed()) {\n      LOG.warn(CREDENTIALS_REQUESTED_WHEN_CLOSED);\n      throw new NoAuthWithAWSException(name +\n          CREDENTIALS_REQUESTED_WHEN_CLOSED);\n    }\n    checkNotEmpty();\n    if (reuseLastProvider \u0026\u0026 lastProvider !\u003d null) {\n      return lastProvider.getCredentials();\n    }\n\n    AmazonClientException lastException \u003d null;\n    for (AWSCredentialsProvider provider : providers) {\n      try {\n        AWSCredentials credentials \u003d provider.getCredentials();\n        Preconditions.checkNotNull(credentials,\n            \"Null credentials returned by %s\", provider);\n        if ((credentials.getAWSAccessKeyId() !\u003d null \u0026\u0026\n            credentials.getAWSSecretKey() !\u003d null)\n            || (credentials instanceof AnonymousAWSCredentials)) {\n          lastProvider \u003d provider;\n          LOG.debug(\"Using credentials from {}\", provider);\n          return credentials;\n        }\n      } catch (NoAwsCredentialsException e) {\n        // don\u0027t bother with the stack trace here as it is usually a\n        // minor detail.\n\n        // only update the last exception if it isn\u0027t set.\n        // Why so? Stops delegation token issues being lost on the fallback\n        // values.\n        if (lastException \u003d\u003d null) {\n          lastException \u003d e;\n        }\n        LOG.debug(\"No credentials from {}: {}\",\n            provider, e.toString());\n      } catch (AmazonClientException e) {\n        lastException \u003d e;\n        LOG.debug(\"No credentials provided by {}: {}\",\n            provider, e.toString(), e);\n      }\n    }\n\n    // no providers had any credentials. Rethrow the last exception\n    // or create a new one.\n    String message \u003d  name +  \"No AWS Credentials provided by \"\n        + listProviderNames();\n    if (lastException !\u003d null) {\n      message +\u003d \": \" + lastException;\n    }\n    if (lastException instanceof CredentialInitializationException) {\n      throw lastException;\n    } else {\n      throw new NoAuthWithAWSException(message, lastException);\n    }\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/AWSCredentialProviderList.java",
      "extendedDetails": {}
    },
    "da9a39eed138210de29b59b90c449b28da1c04f9": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15583. Stabilize S3A Assumed Role support.\nContributed by Steve Loughran.\n",
      "commitDate": "08/08/18 10:57 PM",
      "commitName": "da9a39eed138210de29b59b90c449b28da1c04f9",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "27/06/18 10:37 PM",
      "commitNameOld": "2b2399d623539ab68e71a38fa9fbfc9a405bddb8",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 42.01,
      "commitsBetweenForRepo": 267,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,38 @@\n   public AWSCredentials getCredentials() {\n+    if (isClosed()) {\n+      LOG.warn(CREDENTIALS_REQUESTED_WHEN_CLOSED);\n+      throw new NoAuthWithAWSException(\n+          CREDENTIALS_REQUESTED_WHEN_CLOSED);\n+    }\n     checkNotEmpty();\n     if (reuseLastProvider \u0026\u0026 lastProvider !\u003d null) {\n       return lastProvider.getCredentials();\n     }\n \n     AmazonClientException lastException \u003d null;\n     for (AWSCredentialsProvider provider : providers) {\n       try {\n         AWSCredentials credentials \u003d provider.getCredentials();\n         if ((credentials.getAWSAccessKeyId() !\u003d null \u0026\u0026\n             credentials.getAWSSecretKey() !\u003d null)\n             || (credentials instanceof AnonymousAWSCredentials)) {\n           lastProvider \u003d provider;\n           LOG.debug(\"Using credentials from {}\", provider);\n           return credentials;\n         }\n       } catch (AmazonClientException e) {\n         lastException \u003d e;\n         LOG.debug(\"No credentials provided by {}: {}\",\n             provider, e.toString(), e);\n       }\n     }\n \n     // no providers had any credentials. Rethrow the last exception\n     // or create a new one.\n     String message \u003d \"No AWS Credentials provided by \"\n         + listProviderNames();\n     if (lastException !\u003d null) {\n       message +\u003d \": \" + lastException;\n     }\n-    throw new AmazonClientException(message, lastException);\n-\n+    throw new NoAuthWithAWSException(message, lastException);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public AWSCredentials getCredentials() {\n    if (isClosed()) {\n      LOG.warn(CREDENTIALS_REQUESTED_WHEN_CLOSED);\n      throw new NoAuthWithAWSException(\n          CREDENTIALS_REQUESTED_WHEN_CLOSED);\n    }\n    checkNotEmpty();\n    if (reuseLastProvider \u0026\u0026 lastProvider !\u003d null) {\n      return lastProvider.getCredentials();\n    }\n\n    AmazonClientException lastException \u003d null;\n    for (AWSCredentialsProvider provider : providers) {\n      try {\n        AWSCredentials credentials \u003d provider.getCredentials();\n        if ((credentials.getAWSAccessKeyId() !\u003d null \u0026\u0026\n            credentials.getAWSSecretKey() !\u003d null)\n            || (credentials instanceof AnonymousAWSCredentials)) {\n          lastProvider \u003d provider;\n          LOG.debug(\"Using credentials from {}\", provider);\n          return credentials;\n        }\n      } catch (AmazonClientException e) {\n        lastException \u003d e;\n        LOG.debug(\"No credentials provided by {}: {}\",\n            provider, e.toString(), e);\n      }\n    }\n\n    // no providers had any credentials. Rethrow the last exception\n    // or create a new one.\n    String message \u003d \"No AWS Credentials provided by \"\n        + listProviderNames();\n    if (lastException !\u003d null) {\n      message +\u003d \": \" + lastException;\n    }\n    throw new NoAuthWithAWSException(message, lastException);\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/AWSCredentialProviderList.java",
      "extendedDetails": {}
    },
    "763f0497bb996e331e40caed9ca0af966f5b3fac": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-13252. Tune S3A provider plugin mechanism. Contributed by Steve Loughran.\n",
      "commitDate": "19/08/16 10:48 AM",
      "commitName": "763f0497bb996e331e40caed9ca0af966f5b3fac",
      "commitAuthor": "Chris Nauroth",
      "diff": "@@ -0,0 +1,34 @@\n+  public AWSCredentials getCredentials() {\n+    checkNotEmpty();\n+    if (reuseLastProvider \u0026\u0026 lastProvider !\u003d null) {\n+      return lastProvider.getCredentials();\n+    }\n+\n+    AmazonClientException lastException \u003d null;\n+    for (AWSCredentialsProvider provider : providers) {\n+      try {\n+        AWSCredentials credentials \u003d provider.getCredentials();\n+        if ((credentials.getAWSAccessKeyId() !\u003d null \u0026\u0026\n+            credentials.getAWSSecretKey() !\u003d null)\n+            || (credentials instanceof AnonymousAWSCredentials)) {\n+          lastProvider \u003d provider;\n+          LOG.debug(\"Using credentials from {}\", provider);\n+          return credentials;\n+        }\n+      } catch (AmazonClientException e) {\n+        lastException \u003d e;\n+        LOG.debug(\"No credentials provided by {}: {}\",\n+            provider, e.toString(), e);\n+      }\n+    }\n+\n+    // no providers had any credentials. Rethrow the last exception\n+    // or create a new one.\n+    String message \u003d \"No AWS Credentials provided by \"\n+        + listProviderNames();\n+    if (lastException !\u003d null) {\n+      message +\u003d \": \" + lastException;\n+    }\n+    throw new AmazonClientException(message, lastException);\n+\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public AWSCredentials getCredentials() {\n    checkNotEmpty();\n    if (reuseLastProvider \u0026\u0026 lastProvider !\u003d null) {\n      return lastProvider.getCredentials();\n    }\n\n    AmazonClientException lastException \u003d null;\n    for (AWSCredentialsProvider provider : providers) {\n      try {\n        AWSCredentials credentials \u003d provider.getCredentials();\n        if ((credentials.getAWSAccessKeyId() !\u003d null \u0026\u0026\n            credentials.getAWSSecretKey() !\u003d null)\n            || (credentials instanceof AnonymousAWSCredentials)) {\n          lastProvider \u003d provider;\n          LOG.debug(\"Using credentials from {}\", provider);\n          return credentials;\n        }\n      } catch (AmazonClientException e) {\n        lastException \u003d e;\n        LOG.debug(\"No credentials provided by {}: {}\",\n            provider, e.toString(), e);\n      }\n    }\n\n    // no providers had any credentials. Rethrow the last exception\n    // or create a new one.\n    String message \u003d \"No AWS Credentials provided by \"\n        + listProviderNames();\n    if (lastException !\u003d null) {\n      message +\u003d \": \" + lastException;\n    }\n    throw new AmazonClientException(message, lastException);\n\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/AWSCredentialProviderList.java"
    }
  }
}