{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Server.java",
  "functionName": "getTrueCause",
  "functionId": "getTrueCause___e-IOException",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Server.java",
  "functionStartLine": 1973,
  "functionEndLine": 1994,
  "numCommitsSeen": 230,
  "timeTaken": 4802,
  "changeHistory": [
    "37cb314f79f515421cfc2c3605382bf1534dc266",
    "a4819e70dbf88b0905a6669078afa1ff0924ad4f",
    "f7eaacc103344f5fd81dd69584c93fb99d8b94c9"
  ],
  "changeHistoryShort": {
    "37cb314f79f515421cfc2c3605382bf1534dc266": "Ybodychange",
    "a4819e70dbf88b0905a6669078afa1ff0924ad4f": "Yrename",
    "f7eaacc103344f5fd81dd69584c93fb99d8b94c9": "Yintroduced"
  },
  "changeHistoryDetails": {
    "37cb314f79f515421cfc2c3605382bf1534dc266": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10407. Fix the javac warnings in org.apache.hadoop.ipc package.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1577710 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/03/14 2:12 PM",
      "commitName": "37cb314f79f515421cfc2c3605382bf1534dc266",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "21/02/14 12:53 PM",
      "commitNameOld": "d61d1c120d5cecc97514e2f8d79dacdbd4e610a3",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 21.01,
      "commitsBetweenForRepo": 194,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n     private Throwable getTrueCause(IOException e) {\n       Throwable cause \u003d e;\n       while (cause !\u003d null) {\n         if (cause instanceof RetriableException) {\n-          return (RetriableException) cause;\n+          return cause;\n         } else if (cause instanceof StandbyException) {\n-          return (StandbyException) cause;\n+          return cause;\n         } else if (cause instanceof InvalidToken) {\n           // FIXME: hadoop method signatures are restricting the SASL\n           // callbacks to only returning InvalidToken, but some services\n           // need to throw other exceptions (ex. NN + StandyException),\n           // so for now we\u0027ll tunnel the real exceptions via an\n           // InvalidToken\u0027s cause which normally is not set \n           if (cause.getCause() !\u003d null) {\n             cause \u003d cause.getCause();\n           }\n           return cause;\n         }\n         cause \u003d cause.getCause();\n       }\n       return e;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private Throwable getTrueCause(IOException e) {\n      Throwable cause \u003d e;\n      while (cause !\u003d null) {\n        if (cause instanceof RetriableException) {\n          return cause;\n        } else if (cause instanceof StandbyException) {\n          return cause;\n        } else if (cause instanceof InvalidToken) {\n          // FIXME: hadoop method signatures are restricting the SASL\n          // callbacks to only returning InvalidToken, but some services\n          // need to throw other exceptions (ex. NN + StandyException),\n          // so for now we\u0027ll tunnel the real exceptions via an\n          // InvalidToken\u0027s cause which normally is not set \n          if (cause.getCause() !\u003d null) {\n            cause \u003d cause.getCause();\n          }\n          return cause;\n        }\n        cause \u003d cause.getCause();\n      }\n      return e;\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Server.java",
      "extendedDetails": {}
    },
    "a4819e70dbf88b0905a6669078afa1ff0924ad4f": {
      "type": "Yrename",
      "commitMessage": "HADOOP-10044 Improve the javadoc of rpc code (sanjay Radia)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1550486 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/12/13 10:56 AM",
      "commitName": "a4819e70dbf88b0905a6669078afa1ff0924ad4f",
      "commitAuthor": "Sanjay Radia",
      "commitDateOld": "18/11/13 11:42 PM",
      "commitNameOld": "229472cea7920194c48f5294bf763a8bee2ade63",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 23.47,
      "commitsBetweenForRepo": 136,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n-    private Throwable getCauseForInvalidToken(IOException e) {\n+    private Throwable getTrueCause(IOException e) {\n       Throwable cause \u003d e;\n       while (cause !\u003d null) {\n         if (cause instanceof RetriableException) {\n           return (RetriableException) cause;\n         } else if (cause instanceof StandbyException) {\n           return (StandbyException) cause;\n         } else if (cause instanceof InvalidToken) {\n           // FIXME: hadoop method signatures are restricting the SASL\n           // callbacks to only returning InvalidToken, but some services\n           // need to throw other exceptions (ex. NN + StandyException),\n           // so for now we\u0027ll tunnel the real exceptions via an\n           // InvalidToken\u0027s cause which normally is not set \n           if (cause.getCause() !\u003d null) {\n             cause \u003d cause.getCause();\n           }\n           return cause;\n         }\n         cause \u003d cause.getCause();\n       }\n       return e;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private Throwable getTrueCause(IOException e) {\n      Throwable cause \u003d e;\n      while (cause !\u003d null) {\n        if (cause instanceof RetriableException) {\n          return (RetriableException) cause;\n        } else if (cause instanceof StandbyException) {\n          return (StandbyException) cause;\n        } else if (cause instanceof InvalidToken) {\n          // FIXME: hadoop method signatures are restricting the SASL\n          // callbacks to only returning InvalidToken, but some services\n          // need to throw other exceptions (ex. NN + StandyException),\n          // so for now we\u0027ll tunnel the real exceptions via an\n          // InvalidToken\u0027s cause which normally is not set \n          if (cause.getCause() !\u003d null) {\n            cause \u003d cause.getCause();\n          }\n          return cause;\n        }\n        cause \u003d cause.getCause();\n      }\n      return e;\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Server.java",
      "extendedDetails": {
        "oldValue": "getCauseForInvalidToken",
        "newValue": "getTrueCause"
      }
    },
    "f7eaacc103344f5fd81dd69584c93fb99d8b94c9": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-5322. HDFS delegation token not found in cache errors seen on secure HA clusters. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1531436 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/10/13 2:49 PM",
      "commitName": "f7eaacc103344f5fd81dd69584c93fb99d8b94c9",
      "commitAuthor": "Jing Zhao",
      "diff": "@@ -0,0 +1,22 @@\n+    private Throwable getCauseForInvalidToken(IOException e) {\n+      Throwable cause \u003d e;\n+      while (cause !\u003d null) {\n+        if (cause instanceof RetriableException) {\n+          return (RetriableException) cause;\n+        } else if (cause instanceof StandbyException) {\n+          return (StandbyException) cause;\n+        } else if (cause instanceof InvalidToken) {\n+          // FIXME: hadoop method signatures are restricting the SASL\n+          // callbacks to only returning InvalidToken, but some services\n+          // need to throw other exceptions (ex. NN + StandyException),\n+          // so for now we\u0027ll tunnel the real exceptions via an\n+          // InvalidToken\u0027s cause which normally is not set \n+          if (cause.getCause() !\u003d null) {\n+            cause \u003d cause.getCause();\n+          }\n+          return cause;\n+        }\n+        cause \u003d cause.getCause();\n+      }\n+      return e;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private Throwable getCauseForInvalidToken(IOException e) {\n      Throwable cause \u003d e;\n      while (cause !\u003d null) {\n        if (cause instanceof RetriableException) {\n          return (RetriableException) cause;\n        } else if (cause instanceof StandbyException) {\n          return (StandbyException) cause;\n        } else if (cause instanceof InvalidToken) {\n          // FIXME: hadoop method signatures are restricting the SASL\n          // callbacks to only returning InvalidToken, but some services\n          // need to throw other exceptions (ex. NN + StandyException),\n          // so for now we\u0027ll tunnel the real exceptions via an\n          // InvalidToken\u0027s cause which normally is not set \n          if (cause.getCause() !\u003d null) {\n            cause \u003d cause.getCause();\n          }\n          return cause;\n        }\n        cause \u003d cause.getCause();\n      }\n      return e;\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Server.java"
    }
  }
}