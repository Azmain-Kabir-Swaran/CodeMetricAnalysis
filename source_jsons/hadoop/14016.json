{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BlockTokenSecretManager.java",
  "functionName": "retrieveDataEncryptionKey",
  "functionId": "retrieveDataEncryptionKey___keyId-int__nonce-byte[]",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/security/token/block/BlockTokenSecretManager.java",
  "functionStartLine": 546,
  "functionEndLine": 558,
  "numCommitsSeen": 27,
  "timeTaken": 1996,
  "changeHistory": [
    "9b4a7900c7dfc0590316eedaa97144f938885651"
  ],
  "changeHistoryShort": {
    "9b4a7900c7dfc0590316eedaa97144f938885651": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9b4a7900c7dfc0590316eedaa97144f938885651": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-3637. Add support for encrypting the DataTransferProtocol. Contributed by Aaron T. Myers.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370354 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 9:40 AM",
      "commitName": "9b4a7900c7dfc0590316eedaa97144f938885651",
      "commitAuthor": "Aaron Myers",
      "diff": "@@ -0,0 +1,13 @@\n+  public byte[] retrieveDataEncryptionKey(int keyId, byte[] nonce)\n+      throws InvalidEncryptionKeyException {\n+    BlockKey key \u003d null;\n+    synchronized (this) {\n+      key \u003d allKeys.get(keyId);\n+      if (key \u003d\u003d null) {\n+        throw new InvalidEncryptionKeyException(\"Can\u0027t re-compute encryption key\"\n+            + \" for nonce, since the required block key (keyID\u003d\" + keyId\n+            + \") doesn\u0027t exist. Current key: \" + currentKey.getKeyId());\n+      }\n+    }\n+    return createPassword(nonce, key.getKey());\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public byte[] retrieveDataEncryptionKey(int keyId, byte[] nonce)\n      throws InvalidEncryptionKeyException {\n    BlockKey key \u003d null;\n    synchronized (this) {\n      key \u003d allKeys.get(keyId);\n      if (key \u003d\u003d null) {\n        throw new InvalidEncryptionKeyException(\"Can\u0027t re-compute encryption key\"\n            + \" for nonce, since the required block key (keyID\u003d\" + keyId\n            + \") doesn\u0027t exist. Current key: \" + currentKey.getKeyId());\n      }\n    }\n    return createPassword(nonce, key.getKey());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/security/token/block/BlockTokenSecretManager.java"
    }
  }
}