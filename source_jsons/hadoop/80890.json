{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ReconfigurationServlet.java",
  "functionName": "applyChanges",
  "functionId": "applyChanges___out-PrintWriter__reconf-Reconfigurable__req-HttpServletRequest",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/ReconfigurationServlet.java",
  "functionStartLine": 140,
  "functionEndLine": 197,
  "numCommitsSeen": 12,
  "timeTaken": 1472,
  "changeHistory": [
    "2b2399d623539ab68e71a38fa9fbfc9a405bddb8",
    "a126a01fa197beebe955837c8f2efbd3257f7aa5",
    "4c56bccf5ee1d6ec1fcef0804eacae785c4d7c18",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "04f1e7a41874bb93434c91c80544eda24afbb215"
  ],
  "changeHistoryShort": {
    "2b2399d623539ab68e71a38fa9fbfc9a405bddb8": "Ybodychange",
    "a126a01fa197beebe955837c8f2efbd3257f7aa5": "Yexceptionschange",
    "4c56bccf5ee1d6ec1fcef0804eacae785c4d7c18": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "04f1e7a41874bb93434c91c80544eda24afbb215": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2b2399d623539ab68e71a38fa9fbfc9a405bddb8": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15495. Upgrade commons-lang version to 3.7 in hadoop-common-project and hadoop-tools. Contributed by Takanobu Asanuma.\n",
      "commitDate": "27/06/18 10:37 PM",
      "commitName": "2b2399d623539ab68e71a38fa9fbfc9a405bddb8",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "17/07/17 9:32 PM",
      "commitNameOld": "ccaf036662e22da14583942054898c99fa51dae5",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 345.04,
      "commitsBetweenForRepo": 3144,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,58 +1,58 @@\n   private void applyChanges(PrintWriter out, Reconfigurable reconf,\n       HttpServletRequest req) throws ReconfigurationException {\n     Configuration oldConf \u003d reconf.getConf();\n     Configuration newConf \u003d new Configuration();\n \n     Enumeration\u003cString\u003e params \u003d getParams(req);\n \n     synchronized(oldConf) {\n       while (params.hasMoreElements()) {\n         String rawParam \u003d params.nextElement();\n-        String param \u003d StringEscapeUtils.unescapeHtml(rawParam);\n+        String param \u003d StringEscapeUtils.unescapeHtml4(rawParam);\n         String value \u003d\n-          StringEscapeUtils.unescapeHtml(req.getParameter(rawParam));\n+          StringEscapeUtils.unescapeHtml4(req.getParameter(rawParam));\n         if (value !\u003d null) {\n           if (value.equals(newConf.getRaw(param)) || value.equals(\"default\") ||\n               value.equals(\"null\") || value.isEmpty()) {\n             if ((value.equals(\"default\") || value.equals(\"null\") || \n                  value.isEmpty()) \u0026\u0026 \n                 oldConf.getRaw(param) !\u003d null) {\n               out.println(\"\u003cp\u003eChanged \\\"\" + \n-                          StringEscapeUtils.escapeHtml(param) + \"\\\" from \\\"\" +\n-                          StringEscapeUtils.escapeHtml(oldConf.getRaw(param)) +\n+                          StringEscapeUtils.escapeHtml4(param) + \"\\\" from \\\"\" +\n+                          StringEscapeUtils.escapeHtml4(oldConf.getRaw(param)) +\n                           \"\\\" to default\u003c/p\u003e\");\n               reconf.reconfigureProperty(param, null);\n             } else if (!value.equals(\"default\") \u0026\u0026 !value.equals(\"null\") \u0026\u0026\n                        !value.isEmpty() \u0026\u0026 \n                        (oldConf.getRaw(param) \u003d\u003d null || \n                         !oldConf.getRaw(param).equals(value))) {\n               // change from default or value to different value\n               if (oldConf.getRaw(param) \u003d\u003d null) {\n                 out.println(\"\u003cp\u003eChanged \\\"\" + \n-                            StringEscapeUtils.escapeHtml(param) + \n+                            StringEscapeUtils.escapeHtml4(param) +\n                             \"\\\" from default to \\\"\" +\n-                            StringEscapeUtils.escapeHtml(value) + \"\\\"\u003c/p\u003e\");\n+                            StringEscapeUtils.escapeHtml4(value) + \"\\\"\u003c/p\u003e\");\n               } else {\n                 out.println(\"\u003cp\u003eChanged \\\"\" + \n-                            StringEscapeUtils.escapeHtml(param) + \"\\\" from \\\"\" +\n-                            StringEscapeUtils.escapeHtml(oldConf.\n+                            StringEscapeUtils.escapeHtml4(param) + \"\\\" from \\\"\" +\n+                            StringEscapeUtils.escapeHtml4(oldConf.\n                                                          getRaw(param)) +\n                             \"\\\" to \\\"\" +\n-                            StringEscapeUtils.escapeHtml(value) + \"\\\"\u003c/p\u003e\");\n+                            StringEscapeUtils.escapeHtml4(value) + \"\\\"\u003c/p\u003e\");\n               }\n               reconf.reconfigureProperty(param, value);\n             } else {\n               LOG.info(\"property \" + param + \" unchanged\");\n             }\n           } else {\n             // parameter value !\u003d newConf value\n-            out.println(\"\u003cp\u003e\\\"\" + StringEscapeUtils.escapeHtml(param) + \n+            out.println(\"\u003cp\u003e\\\"\" + StringEscapeUtils.escapeHtml4(param) +\n                         \"\\\" not changed because value has changed from \\\"\" +\n-                        StringEscapeUtils.escapeHtml(value) + \"\\\" to \\\"\" +\n-                        StringEscapeUtils.escapeHtml(newConf.getRaw(param)) +\n+                        StringEscapeUtils.escapeHtml4(value) + \"\\\" to \\\"\" +\n+                        StringEscapeUtils.escapeHtml4(newConf.getRaw(param)) +\n                         \"\\\" since approval\u003c/p\u003e\");\n           }\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void applyChanges(PrintWriter out, Reconfigurable reconf,\n      HttpServletRequest req) throws ReconfigurationException {\n    Configuration oldConf \u003d reconf.getConf();\n    Configuration newConf \u003d new Configuration();\n\n    Enumeration\u003cString\u003e params \u003d getParams(req);\n\n    synchronized(oldConf) {\n      while (params.hasMoreElements()) {\n        String rawParam \u003d params.nextElement();\n        String param \u003d StringEscapeUtils.unescapeHtml4(rawParam);\n        String value \u003d\n          StringEscapeUtils.unescapeHtml4(req.getParameter(rawParam));\n        if (value !\u003d null) {\n          if (value.equals(newConf.getRaw(param)) || value.equals(\"default\") ||\n              value.equals(\"null\") || value.isEmpty()) {\n            if ((value.equals(\"default\") || value.equals(\"null\") || \n                 value.isEmpty()) \u0026\u0026 \n                oldConf.getRaw(param) !\u003d null) {\n              out.println(\"\u003cp\u003eChanged \\\"\" + \n                          StringEscapeUtils.escapeHtml4(param) + \"\\\" from \\\"\" +\n                          StringEscapeUtils.escapeHtml4(oldConf.getRaw(param)) +\n                          \"\\\" to default\u003c/p\u003e\");\n              reconf.reconfigureProperty(param, null);\n            } else if (!value.equals(\"default\") \u0026\u0026 !value.equals(\"null\") \u0026\u0026\n                       !value.isEmpty() \u0026\u0026 \n                       (oldConf.getRaw(param) \u003d\u003d null || \n                        !oldConf.getRaw(param).equals(value))) {\n              // change from default or value to different value\n              if (oldConf.getRaw(param) \u003d\u003d null) {\n                out.println(\"\u003cp\u003eChanged \\\"\" + \n                            StringEscapeUtils.escapeHtml4(param) +\n                            \"\\\" from default to \\\"\" +\n                            StringEscapeUtils.escapeHtml4(value) + \"\\\"\u003c/p\u003e\");\n              } else {\n                out.println(\"\u003cp\u003eChanged \\\"\" + \n                            StringEscapeUtils.escapeHtml4(param) + \"\\\" from \\\"\" +\n                            StringEscapeUtils.escapeHtml4(oldConf.\n                                                         getRaw(param)) +\n                            \"\\\" to \\\"\" +\n                            StringEscapeUtils.escapeHtml4(value) + \"\\\"\u003c/p\u003e\");\n              }\n              reconf.reconfigureProperty(param, value);\n            } else {\n              LOG.info(\"property \" + param + \" unchanged\");\n            }\n          } else {\n            // parameter value !\u003d newConf value\n            out.println(\"\u003cp\u003e\\\"\" + StringEscapeUtils.escapeHtml4(param) +\n                        \"\\\" not changed because value has changed from \\\"\" +\n                        StringEscapeUtils.escapeHtml4(value) + \"\\\" to \\\"\" +\n                        StringEscapeUtils.escapeHtml4(newConf.getRaw(param)) +\n                        \"\\\" since approval\u003c/p\u003e\");\n          }\n        }\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/ReconfigurationServlet.java",
      "extendedDetails": {}
    },
    "a126a01fa197beebe955837c8f2efbd3257f7aa5": {
      "type": "Yexceptionschange",
      "commitMessage": "HADOOP-10437. Fix the javac warnings in the conf and the util package.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1582015 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "26/03/14 12:03 PM",
      "commitName": "a126a01fa197beebe955837c8f2efbd3257f7aa5",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "19/09/12 9:06 PM",
      "commitNameOld": "4c56bccf5ee1d6ec1fcef0804eacae785c4d7c18",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 552.62,
      "commitsBetweenForRepo": 3454,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,59 +1,58 @@\n   private void applyChanges(PrintWriter out, Reconfigurable reconf,\n-                            HttpServletRequest req) \n-    throws IOException, ReconfigurationException {\n+      HttpServletRequest req) throws ReconfigurationException {\n     Configuration oldConf \u003d reconf.getConf();\n     Configuration newConf \u003d new Configuration();\n \n     Enumeration\u003cString\u003e params \u003d getParams(req);\n \n     synchronized(oldConf) {\n       while (params.hasMoreElements()) {\n         String rawParam \u003d params.nextElement();\n         String param \u003d StringEscapeUtils.unescapeHtml(rawParam);\n         String value \u003d\n           StringEscapeUtils.unescapeHtml(req.getParameter(rawParam));\n         if (value !\u003d null) {\n           if (value.equals(newConf.getRaw(param)) || value.equals(\"default\") ||\n               value.equals(\"null\") || value.isEmpty()) {\n             if ((value.equals(\"default\") || value.equals(\"null\") || \n                  value.isEmpty()) \u0026\u0026 \n                 oldConf.getRaw(param) !\u003d null) {\n               out.println(\"\u003cp\u003eChanged \\\"\" + \n                           StringEscapeUtils.escapeHtml(param) + \"\\\" from \\\"\" +\n                           StringEscapeUtils.escapeHtml(oldConf.getRaw(param)) +\n                           \"\\\" to default\u003c/p\u003e\");\n               reconf.reconfigureProperty(param, null);\n             } else if (!value.equals(\"default\") \u0026\u0026 !value.equals(\"null\") \u0026\u0026\n                        !value.isEmpty() \u0026\u0026 \n                        (oldConf.getRaw(param) \u003d\u003d null || \n                         !oldConf.getRaw(param).equals(value))) {\n               // change from default or value to different value\n               if (oldConf.getRaw(param) \u003d\u003d null) {\n                 out.println(\"\u003cp\u003eChanged \\\"\" + \n                             StringEscapeUtils.escapeHtml(param) + \n                             \"\\\" from default to \\\"\" +\n                             StringEscapeUtils.escapeHtml(value) + \"\\\"\u003c/p\u003e\");\n               } else {\n                 out.println(\"\u003cp\u003eChanged \\\"\" + \n                             StringEscapeUtils.escapeHtml(param) + \"\\\" from \\\"\" +\n                             StringEscapeUtils.escapeHtml(oldConf.\n                                                          getRaw(param)) +\n                             \"\\\" to \\\"\" +\n                             StringEscapeUtils.escapeHtml(value) + \"\\\"\u003c/p\u003e\");\n               }\n               reconf.reconfigureProperty(param, value);\n             } else {\n               LOG.info(\"property \" + param + \" unchanged\");\n             }\n           } else {\n             // parameter value !\u003d newConf value\n             out.println(\"\u003cp\u003e\\\"\" + StringEscapeUtils.escapeHtml(param) + \n                         \"\\\" not changed because value has changed from \\\"\" +\n                         StringEscapeUtils.escapeHtml(value) + \"\\\" to \\\"\" +\n                         StringEscapeUtils.escapeHtml(newConf.getRaw(param)) +\n                         \"\\\" since approval\u003c/p\u003e\");\n           }\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void applyChanges(PrintWriter out, Reconfigurable reconf,\n      HttpServletRequest req) throws ReconfigurationException {\n    Configuration oldConf \u003d reconf.getConf();\n    Configuration newConf \u003d new Configuration();\n\n    Enumeration\u003cString\u003e params \u003d getParams(req);\n\n    synchronized(oldConf) {\n      while (params.hasMoreElements()) {\n        String rawParam \u003d params.nextElement();\n        String param \u003d StringEscapeUtils.unescapeHtml(rawParam);\n        String value \u003d\n          StringEscapeUtils.unescapeHtml(req.getParameter(rawParam));\n        if (value !\u003d null) {\n          if (value.equals(newConf.getRaw(param)) || value.equals(\"default\") ||\n              value.equals(\"null\") || value.isEmpty()) {\n            if ((value.equals(\"default\") || value.equals(\"null\") || \n                 value.isEmpty()) \u0026\u0026 \n                oldConf.getRaw(param) !\u003d null) {\n              out.println(\"\u003cp\u003eChanged \\\"\" + \n                          StringEscapeUtils.escapeHtml(param) + \"\\\" from \\\"\" +\n                          StringEscapeUtils.escapeHtml(oldConf.getRaw(param)) +\n                          \"\\\" to default\u003c/p\u003e\");\n              reconf.reconfigureProperty(param, null);\n            } else if (!value.equals(\"default\") \u0026\u0026 !value.equals(\"null\") \u0026\u0026\n                       !value.isEmpty() \u0026\u0026 \n                       (oldConf.getRaw(param) \u003d\u003d null || \n                        !oldConf.getRaw(param).equals(value))) {\n              // change from default or value to different value\n              if (oldConf.getRaw(param) \u003d\u003d null) {\n                out.println(\"\u003cp\u003eChanged \\\"\" + \n                            StringEscapeUtils.escapeHtml(param) + \n                            \"\\\" from default to \\\"\" +\n                            StringEscapeUtils.escapeHtml(value) + \"\\\"\u003c/p\u003e\");\n              } else {\n                out.println(\"\u003cp\u003eChanged \\\"\" + \n                            StringEscapeUtils.escapeHtml(param) + \"\\\" from \\\"\" +\n                            StringEscapeUtils.escapeHtml(oldConf.\n                                                         getRaw(param)) +\n                            \"\\\" to \\\"\" +\n                            StringEscapeUtils.escapeHtml(value) + \"\\\"\u003c/p\u003e\");\n              }\n              reconf.reconfigureProperty(param, value);\n            } else {\n              LOG.info(\"property \" + param + \" unchanged\");\n            }\n          } else {\n            // parameter value !\u003d newConf value\n            out.println(\"\u003cp\u003e\\\"\" + StringEscapeUtils.escapeHtml(param) + \n                        \"\\\" not changed because value has changed from \\\"\" +\n                        StringEscapeUtils.escapeHtml(value) + \"\\\" to \\\"\" +\n                        StringEscapeUtils.escapeHtml(newConf.getRaw(param)) +\n                        \"\\\" since approval\u003c/p\u003e\");\n          }\n        }\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/ReconfigurationServlet.java",
      "extendedDetails": {
        "oldValue": "[IOException, ReconfigurationException]",
        "newValue": "[ReconfigurationException]"
      }
    },
    "4c56bccf5ee1d6ec1fcef0804eacae785c4d7c18": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-8814. Replace string equals  by String#isEmpty(). Contributed by Brandon Li.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1387853 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/09/12 9:06 PM",
      "commitName": "4c56bccf5ee1d6ec1fcef0804eacae785c4d7c18",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "24/08/12 6:03 PM",
      "commitNameOld": "deead78e35b0cb81af875b5a8032cbd06c9a2dae",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 26.13,
      "commitsBetweenForRepo": 135,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,59 +1,59 @@\n   private void applyChanges(PrintWriter out, Reconfigurable reconf,\n                             HttpServletRequest req) \n     throws IOException, ReconfigurationException {\n     Configuration oldConf \u003d reconf.getConf();\n     Configuration newConf \u003d new Configuration();\n \n     Enumeration\u003cString\u003e params \u003d getParams(req);\n \n     synchronized(oldConf) {\n       while (params.hasMoreElements()) {\n         String rawParam \u003d params.nextElement();\n         String param \u003d StringEscapeUtils.unescapeHtml(rawParam);\n         String value \u003d\n           StringEscapeUtils.unescapeHtml(req.getParameter(rawParam));\n         if (value !\u003d null) {\n           if (value.equals(newConf.getRaw(param)) || value.equals(\"default\") ||\n-              value.equals(\"null\") || value.equals(\"\")) {\n+              value.equals(\"null\") || value.isEmpty()) {\n             if ((value.equals(\"default\") || value.equals(\"null\") || \n-                 value.equals(\"\")) \u0026\u0026 \n+                 value.isEmpty()) \u0026\u0026 \n                 oldConf.getRaw(param) !\u003d null) {\n               out.println(\"\u003cp\u003eChanged \\\"\" + \n                           StringEscapeUtils.escapeHtml(param) + \"\\\" from \\\"\" +\n                           StringEscapeUtils.escapeHtml(oldConf.getRaw(param)) +\n                           \"\\\" to default\u003c/p\u003e\");\n               reconf.reconfigureProperty(param, null);\n             } else if (!value.equals(\"default\") \u0026\u0026 !value.equals(\"null\") \u0026\u0026\n-                       !value.equals(\"\") \u0026\u0026 \n+                       !value.isEmpty() \u0026\u0026 \n                        (oldConf.getRaw(param) \u003d\u003d null || \n                         !oldConf.getRaw(param).equals(value))) {\n               // change from default or value to different value\n               if (oldConf.getRaw(param) \u003d\u003d null) {\n                 out.println(\"\u003cp\u003eChanged \\\"\" + \n                             StringEscapeUtils.escapeHtml(param) + \n                             \"\\\" from default to \\\"\" +\n                             StringEscapeUtils.escapeHtml(value) + \"\\\"\u003c/p\u003e\");\n               } else {\n                 out.println(\"\u003cp\u003eChanged \\\"\" + \n                             StringEscapeUtils.escapeHtml(param) + \"\\\" from \\\"\" +\n                             StringEscapeUtils.escapeHtml(oldConf.\n                                                          getRaw(param)) +\n                             \"\\\" to \\\"\" +\n                             StringEscapeUtils.escapeHtml(value) + \"\\\"\u003c/p\u003e\");\n               }\n               reconf.reconfigureProperty(param, value);\n             } else {\n               LOG.info(\"property \" + param + \" unchanged\");\n             }\n           } else {\n             // parameter value !\u003d newConf value\n             out.println(\"\u003cp\u003e\\\"\" + StringEscapeUtils.escapeHtml(param) + \n                         \"\\\" not changed because value has changed from \\\"\" +\n                         StringEscapeUtils.escapeHtml(value) + \"\\\" to \\\"\" +\n                         StringEscapeUtils.escapeHtml(newConf.getRaw(param)) +\n                         \"\\\" since approval\u003c/p\u003e\");\n           }\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void applyChanges(PrintWriter out, Reconfigurable reconf,\n                            HttpServletRequest req) \n    throws IOException, ReconfigurationException {\n    Configuration oldConf \u003d reconf.getConf();\n    Configuration newConf \u003d new Configuration();\n\n    Enumeration\u003cString\u003e params \u003d getParams(req);\n\n    synchronized(oldConf) {\n      while (params.hasMoreElements()) {\n        String rawParam \u003d params.nextElement();\n        String param \u003d StringEscapeUtils.unescapeHtml(rawParam);\n        String value \u003d\n          StringEscapeUtils.unescapeHtml(req.getParameter(rawParam));\n        if (value !\u003d null) {\n          if (value.equals(newConf.getRaw(param)) || value.equals(\"default\") ||\n              value.equals(\"null\") || value.isEmpty()) {\n            if ((value.equals(\"default\") || value.equals(\"null\") || \n                 value.isEmpty()) \u0026\u0026 \n                oldConf.getRaw(param) !\u003d null) {\n              out.println(\"\u003cp\u003eChanged \\\"\" + \n                          StringEscapeUtils.escapeHtml(param) + \"\\\" from \\\"\" +\n                          StringEscapeUtils.escapeHtml(oldConf.getRaw(param)) +\n                          \"\\\" to default\u003c/p\u003e\");\n              reconf.reconfigureProperty(param, null);\n            } else if (!value.equals(\"default\") \u0026\u0026 !value.equals(\"null\") \u0026\u0026\n                       !value.isEmpty() \u0026\u0026 \n                       (oldConf.getRaw(param) \u003d\u003d null || \n                        !oldConf.getRaw(param).equals(value))) {\n              // change from default or value to different value\n              if (oldConf.getRaw(param) \u003d\u003d null) {\n                out.println(\"\u003cp\u003eChanged \\\"\" + \n                            StringEscapeUtils.escapeHtml(param) + \n                            \"\\\" from default to \\\"\" +\n                            StringEscapeUtils.escapeHtml(value) + \"\\\"\u003c/p\u003e\");\n              } else {\n                out.println(\"\u003cp\u003eChanged \\\"\" + \n                            StringEscapeUtils.escapeHtml(param) + \"\\\" from \\\"\" +\n                            StringEscapeUtils.escapeHtml(oldConf.\n                                                         getRaw(param)) +\n                            \"\\\" to \\\"\" +\n                            StringEscapeUtils.escapeHtml(value) + \"\\\"\u003c/p\u003e\");\n              }\n              reconf.reconfigureProperty(param, value);\n            } else {\n              LOG.info(\"property \" + param + \" unchanged\");\n            }\n          } else {\n            // parameter value !\u003d newConf value\n            out.println(\"\u003cp\u003e\\\"\" + StringEscapeUtils.escapeHtml(param) + \n                        \"\\\" not changed because value has changed from \\\"\" +\n                        StringEscapeUtils.escapeHtml(value) + \"\\\" to \\\"\" +\n                        StringEscapeUtils.escapeHtml(newConf.getRaw(param)) +\n                        \"\\\" since approval\u003c/p\u003e\");\n          }\n        }\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/ReconfigurationServlet.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void applyChanges(PrintWriter out, Reconfigurable reconf,\n                            HttpServletRequest req) \n    throws IOException, ReconfigurationException {\n    Configuration oldConf \u003d reconf.getConf();\n    Configuration newConf \u003d new Configuration();\n\n    Enumeration\u003cString\u003e params \u003d getParams(req);\n\n    synchronized(oldConf) {\n      while (params.hasMoreElements()) {\n        String rawParam \u003d params.nextElement();\n        String param \u003d StringEscapeUtils.unescapeHtml(rawParam);\n        String value \u003d\n          StringEscapeUtils.unescapeHtml(req.getParameter(rawParam));\n        if (value !\u003d null) {\n          if (value.equals(newConf.getRaw(param)) || value.equals(\"default\") ||\n              value.equals(\"null\") || value.equals(\"\")) {\n            if ((value.equals(\"default\") || value.equals(\"null\") || \n                 value.equals(\"\")) \u0026\u0026 \n                oldConf.getRaw(param) !\u003d null) {\n              out.println(\"\u003cp\u003eChanged \\\"\" + \n                          StringEscapeUtils.escapeHtml(param) + \"\\\" from \\\"\" +\n                          StringEscapeUtils.escapeHtml(oldConf.getRaw(param)) +\n                          \"\\\" to default\u003c/p\u003e\");\n              reconf.reconfigureProperty(param, null);\n            } else if (!value.equals(\"default\") \u0026\u0026 !value.equals(\"null\") \u0026\u0026\n                       !value.equals(\"\") \u0026\u0026 \n                       (oldConf.getRaw(param) \u003d\u003d null || \n                        !oldConf.getRaw(param).equals(value))) {\n              // change from default or value to different value\n              if (oldConf.getRaw(param) \u003d\u003d null) {\n                out.println(\"\u003cp\u003eChanged \\\"\" + \n                            StringEscapeUtils.escapeHtml(param) + \n                            \"\\\" from default to \\\"\" +\n                            StringEscapeUtils.escapeHtml(value) + \"\\\"\u003c/p\u003e\");\n              } else {\n                out.println(\"\u003cp\u003eChanged \\\"\" + \n                            StringEscapeUtils.escapeHtml(param) + \"\\\" from \\\"\" +\n                            StringEscapeUtils.escapeHtml(oldConf.\n                                                         getRaw(param)) +\n                            \"\\\" to \\\"\" +\n                            StringEscapeUtils.escapeHtml(value) + \"\\\"\u003c/p\u003e\");\n              }\n              reconf.reconfigureProperty(param, value);\n            } else {\n              LOG.info(\"property \" + param + \" unchanged\");\n            }\n          } else {\n            // parameter value !\u003d newConf value\n            out.println(\"\u003cp\u003e\\\"\" + StringEscapeUtils.escapeHtml(param) + \n                        \"\\\" not changed because value has changed from \\\"\" +\n                        StringEscapeUtils.escapeHtml(value) + \"\\\" to \\\"\" +\n                        StringEscapeUtils.escapeHtml(newConf.getRaw(param)) +\n                        \"\\\" since approval\u003c/p\u003e\");\n          }\n        }\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/ReconfigurationServlet.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/conf/ReconfigurationServlet.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/ReconfigurationServlet.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void applyChanges(PrintWriter out, Reconfigurable reconf,\n                            HttpServletRequest req) \n    throws IOException, ReconfigurationException {\n    Configuration oldConf \u003d reconf.getConf();\n    Configuration newConf \u003d new Configuration();\n\n    Enumeration\u003cString\u003e params \u003d getParams(req);\n\n    synchronized(oldConf) {\n      while (params.hasMoreElements()) {\n        String rawParam \u003d params.nextElement();\n        String param \u003d StringEscapeUtils.unescapeHtml(rawParam);\n        String value \u003d\n          StringEscapeUtils.unescapeHtml(req.getParameter(rawParam));\n        if (value !\u003d null) {\n          if (value.equals(newConf.getRaw(param)) || value.equals(\"default\") ||\n              value.equals(\"null\") || value.equals(\"\")) {\n            if ((value.equals(\"default\") || value.equals(\"null\") || \n                 value.equals(\"\")) \u0026\u0026 \n                oldConf.getRaw(param) !\u003d null) {\n              out.println(\"\u003cp\u003eChanged \\\"\" + \n                          StringEscapeUtils.escapeHtml(param) + \"\\\" from \\\"\" +\n                          StringEscapeUtils.escapeHtml(oldConf.getRaw(param)) +\n                          \"\\\" to default\u003c/p\u003e\");\n              reconf.reconfigureProperty(param, null);\n            } else if (!value.equals(\"default\") \u0026\u0026 !value.equals(\"null\") \u0026\u0026\n                       !value.equals(\"\") \u0026\u0026 \n                       (oldConf.getRaw(param) \u003d\u003d null || \n                        !oldConf.getRaw(param).equals(value))) {\n              // change from default or value to different value\n              if (oldConf.getRaw(param) \u003d\u003d null) {\n                out.println(\"\u003cp\u003eChanged \\\"\" + \n                            StringEscapeUtils.escapeHtml(param) + \n                            \"\\\" from default to \\\"\" +\n                            StringEscapeUtils.escapeHtml(value) + \"\\\"\u003c/p\u003e\");\n              } else {\n                out.println(\"\u003cp\u003eChanged \\\"\" + \n                            StringEscapeUtils.escapeHtml(param) + \"\\\" from \\\"\" +\n                            StringEscapeUtils.escapeHtml(oldConf.\n                                                         getRaw(param)) +\n                            \"\\\" to \\\"\" +\n                            StringEscapeUtils.escapeHtml(value) + \"\\\"\u003c/p\u003e\");\n              }\n              reconf.reconfigureProperty(param, value);\n            } else {\n              LOG.info(\"property \" + param + \" unchanged\");\n            }\n          } else {\n            // parameter value !\u003d newConf value\n            out.println(\"\u003cp\u003e\\\"\" + StringEscapeUtils.escapeHtml(param) + \n                        \"\\\" not changed because value has changed from \\\"\" +\n                        StringEscapeUtils.escapeHtml(value) + \"\\\" to \\\"\" +\n                        StringEscapeUtils.escapeHtml(newConf.getRaw(param)) +\n                        \"\\\" since approval\u003c/p\u003e\");\n          }\n        }\n      }\n    }\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/conf/ReconfigurationServlet.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/conf/ReconfigurationServlet.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/conf/ReconfigurationServlet.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void applyChanges(PrintWriter out, Reconfigurable reconf,\n                            HttpServletRequest req) \n    throws IOException, ReconfigurationException {\n    Configuration oldConf \u003d reconf.getConf();\n    Configuration newConf \u003d new Configuration();\n\n    Enumeration\u003cString\u003e params \u003d getParams(req);\n\n    synchronized(oldConf) {\n      while (params.hasMoreElements()) {\n        String rawParam \u003d params.nextElement();\n        String param \u003d StringEscapeUtils.unescapeHtml(rawParam);\n        String value \u003d\n          StringEscapeUtils.unescapeHtml(req.getParameter(rawParam));\n        if (value !\u003d null) {\n          if (value.equals(newConf.getRaw(param)) || value.equals(\"default\") ||\n              value.equals(\"null\") || value.equals(\"\")) {\n            if ((value.equals(\"default\") || value.equals(\"null\") || \n                 value.equals(\"\")) \u0026\u0026 \n                oldConf.getRaw(param) !\u003d null) {\n              out.println(\"\u003cp\u003eChanged \\\"\" + \n                          StringEscapeUtils.escapeHtml(param) + \"\\\" from \\\"\" +\n                          StringEscapeUtils.escapeHtml(oldConf.getRaw(param)) +\n                          \"\\\" to default\u003c/p\u003e\");\n              reconf.reconfigureProperty(param, null);\n            } else if (!value.equals(\"default\") \u0026\u0026 !value.equals(\"null\") \u0026\u0026\n                       !value.equals(\"\") \u0026\u0026 \n                       (oldConf.getRaw(param) \u003d\u003d null || \n                        !oldConf.getRaw(param).equals(value))) {\n              // change from default or value to different value\n              if (oldConf.getRaw(param) \u003d\u003d null) {\n                out.println(\"\u003cp\u003eChanged \\\"\" + \n                            StringEscapeUtils.escapeHtml(param) + \n                            \"\\\" from default to \\\"\" +\n                            StringEscapeUtils.escapeHtml(value) + \"\\\"\u003c/p\u003e\");\n              } else {\n                out.println(\"\u003cp\u003eChanged \\\"\" + \n                            StringEscapeUtils.escapeHtml(param) + \"\\\" from \\\"\" +\n                            StringEscapeUtils.escapeHtml(oldConf.\n                                                         getRaw(param)) +\n                            \"\\\" to \\\"\" +\n                            StringEscapeUtils.escapeHtml(value) + \"\\\"\u003c/p\u003e\");\n              }\n              reconf.reconfigureProperty(param, value);\n            } else {\n              LOG.info(\"property \" + param + \" unchanged\");\n            }\n          } else {\n            // parameter value !\u003d newConf value\n            out.println(\"\u003cp\u003e\\\"\" + StringEscapeUtils.escapeHtml(param) + \n                        \"\\\" not changed because value has changed from \\\"\" +\n                        StringEscapeUtils.escapeHtml(value) + \"\\\" to \\\"\" +\n                        StringEscapeUtils.escapeHtml(newConf.getRaw(param)) +\n                        \"\\\" since approval\u003c/p\u003e\");\n          }\n        }\n      }\n    }\n  }",
      "path": "common/src/java/org/apache/hadoop/conf/ReconfigurationServlet.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/conf/ReconfigurationServlet.java",
        "newPath": "common/src/java/org/apache/hadoop/conf/ReconfigurationServlet.java"
      }
    },
    "04f1e7a41874bb93434c91c80544eda24afbb215": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7001.  Configuration changes can occur via the Reconfigurable\ninterface. (Patrick Kline via dhruba)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1038480 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/11/10 9:13 PM",
      "commitName": "04f1e7a41874bb93434c91c80544eda24afbb215",
      "commitAuthor": "Dhruba Borthakur",
      "diff": "@@ -0,0 +1,59 @@\n+  private void applyChanges(PrintWriter out, Reconfigurable reconf,\n+                            HttpServletRequest req) \n+    throws IOException, ReconfigurationException {\n+    Configuration oldConf \u003d reconf.getConf();\n+    Configuration newConf \u003d new Configuration();\n+\n+    Enumeration\u003cString\u003e params \u003d getParams(req);\n+\n+    synchronized(oldConf) {\n+      while (params.hasMoreElements()) {\n+        String rawParam \u003d params.nextElement();\n+        String param \u003d StringEscapeUtils.unescapeHtml(rawParam);\n+        String value \u003d\n+          StringEscapeUtils.unescapeHtml(req.getParameter(rawParam));\n+        if (value !\u003d null) {\n+          if (value.equals(newConf.getRaw(param)) || value.equals(\"default\") ||\n+              value.equals(\"null\") || value.equals(\"\")) {\n+            if ((value.equals(\"default\") || value.equals(\"null\") || \n+                 value.equals(\"\")) \u0026\u0026 \n+                oldConf.getRaw(param) !\u003d null) {\n+              out.println(\"\u003cp\u003eChanged \\\"\" + \n+                          StringEscapeUtils.escapeHtml(param) + \"\\\" from \\\"\" +\n+                          StringEscapeUtils.escapeHtml(oldConf.getRaw(param)) +\n+                          \"\\\" to default\u003c/p\u003e\");\n+              reconf.reconfigureProperty(param, null);\n+            } else if (!value.equals(\"default\") \u0026\u0026 !value.equals(\"null\") \u0026\u0026\n+                       !value.equals(\"\") \u0026\u0026 \n+                       (oldConf.getRaw(param) \u003d\u003d null || \n+                        !oldConf.getRaw(param).equals(value))) {\n+              // change from default or value to different value\n+              if (oldConf.getRaw(param) \u003d\u003d null) {\n+                out.println(\"\u003cp\u003eChanged \\\"\" + \n+                            StringEscapeUtils.escapeHtml(param) + \n+                            \"\\\" from default to \\\"\" +\n+                            StringEscapeUtils.escapeHtml(value) + \"\\\"\u003c/p\u003e\");\n+              } else {\n+                out.println(\"\u003cp\u003eChanged \\\"\" + \n+                            StringEscapeUtils.escapeHtml(param) + \"\\\" from \\\"\" +\n+                            StringEscapeUtils.escapeHtml(oldConf.\n+                                                         getRaw(param)) +\n+                            \"\\\" to \\\"\" +\n+                            StringEscapeUtils.escapeHtml(value) + \"\\\"\u003c/p\u003e\");\n+              }\n+              reconf.reconfigureProperty(param, value);\n+            } else {\n+              LOG.info(\"property \" + param + \" unchanged\");\n+            }\n+          } else {\n+            // parameter value !\u003d newConf value\n+            out.println(\"\u003cp\u003e\\\"\" + StringEscapeUtils.escapeHtml(param) + \n+                        \"\\\" not changed because value has changed from \\\"\" +\n+                        StringEscapeUtils.escapeHtml(value) + \"\\\" to \\\"\" +\n+                        StringEscapeUtils.escapeHtml(newConf.getRaw(param)) +\n+                        \"\\\" since approval\u003c/p\u003e\");\n+          }\n+        }\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void applyChanges(PrintWriter out, Reconfigurable reconf,\n                            HttpServletRequest req) \n    throws IOException, ReconfigurationException {\n    Configuration oldConf \u003d reconf.getConf();\n    Configuration newConf \u003d new Configuration();\n\n    Enumeration\u003cString\u003e params \u003d getParams(req);\n\n    synchronized(oldConf) {\n      while (params.hasMoreElements()) {\n        String rawParam \u003d params.nextElement();\n        String param \u003d StringEscapeUtils.unescapeHtml(rawParam);\n        String value \u003d\n          StringEscapeUtils.unescapeHtml(req.getParameter(rawParam));\n        if (value !\u003d null) {\n          if (value.equals(newConf.getRaw(param)) || value.equals(\"default\") ||\n              value.equals(\"null\") || value.equals(\"\")) {\n            if ((value.equals(\"default\") || value.equals(\"null\") || \n                 value.equals(\"\")) \u0026\u0026 \n                oldConf.getRaw(param) !\u003d null) {\n              out.println(\"\u003cp\u003eChanged \\\"\" + \n                          StringEscapeUtils.escapeHtml(param) + \"\\\" from \\\"\" +\n                          StringEscapeUtils.escapeHtml(oldConf.getRaw(param)) +\n                          \"\\\" to default\u003c/p\u003e\");\n              reconf.reconfigureProperty(param, null);\n            } else if (!value.equals(\"default\") \u0026\u0026 !value.equals(\"null\") \u0026\u0026\n                       !value.equals(\"\") \u0026\u0026 \n                       (oldConf.getRaw(param) \u003d\u003d null || \n                        !oldConf.getRaw(param).equals(value))) {\n              // change from default or value to different value\n              if (oldConf.getRaw(param) \u003d\u003d null) {\n                out.println(\"\u003cp\u003eChanged \\\"\" + \n                            StringEscapeUtils.escapeHtml(param) + \n                            \"\\\" from default to \\\"\" +\n                            StringEscapeUtils.escapeHtml(value) + \"\\\"\u003c/p\u003e\");\n              } else {\n                out.println(\"\u003cp\u003eChanged \\\"\" + \n                            StringEscapeUtils.escapeHtml(param) + \"\\\" from \\\"\" +\n                            StringEscapeUtils.escapeHtml(oldConf.\n                                                         getRaw(param)) +\n                            \"\\\" to \\\"\" +\n                            StringEscapeUtils.escapeHtml(value) + \"\\\"\u003c/p\u003e\");\n              }\n              reconf.reconfigureProperty(param, value);\n            } else {\n              LOG.info(\"property \" + param + \" unchanged\");\n            }\n          } else {\n            // parameter value !\u003d newConf value\n            out.println(\"\u003cp\u003e\\\"\" + StringEscapeUtils.escapeHtml(param) + \n                        \"\\\" not changed because value has changed from \\\"\" +\n                        StringEscapeUtils.escapeHtml(value) + \"\\\" to \\\"\" +\n                        StringEscapeUtils.escapeHtml(newConf.getRaw(param)) +\n                        \"\\\" since approval\u003c/p\u003e\");\n          }\n        }\n      }\n    }\n  }",
      "path": "src/java/org/apache/hadoop/conf/ReconfigurationServlet.java"
    }
  }
}