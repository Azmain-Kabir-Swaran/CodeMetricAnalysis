{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DynamoDBMetadataStore.java",
  "functionName": "destroy",
  "functionId": "destroy",
  "sourceFilePath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/DynamoDBMetadataStore.java",
  "functionStartLine": 1514,
  "functionEndLine": 1516,
  "numCommitsSeen": 42,
  "timeTaken": 3495,
  "changeHistory": [
    "4a700c20d553dc5336ee881719bcf189fc46bfbf",
    "e02eb24e0a9139418120027b694492e0738df20a",
    "d7c0a08a1c077752918a8cf1b4f1900ce2721899",
    "de8b6ca5ef8614de6d6277b7617e27c788b0555c",
    "621b43e254afaff708cd6fc4698b29628f6abc33"
  ],
  "changeHistoryShort": {
    "4a700c20d553dc5336ee881719bcf189fc46bfbf": "Ybodychange",
    "e02eb24e0a9139418120027b694492e0738df20a": "Ybodychange",
    "d7c0a08a1c077752918a8cf1b4f1900ce2721899": "Ybodychange",
    "de8b6ca5ef8614de6d6277b7617e27c788b0555c": "Ybodychange",
    "621b43e254afaff708cd6fc4698b29628f6abc33": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4a700c20d553dc5336ee881719bcf189fc46bfbf": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16520. Race condition in DDB table init and waiting threads.  (#1576). Contributed by Gabor Bota.\n\nFixes HADOOP-16349. DynamoDBMetadataStore.getVersionMarkerItem() to log at info/warn on retry\r\n\r\nChange-Id: Ia83e92b9039ccb780090c99c41b4f71ef7539d35",
      "commitDate": "11/10/19 3:08 AM",
      "commitName": "4a700c20d553dc5336ee881719bcf189fc46bfbf",
      "commitAuthor": "Gabor Bota",
      "commitDateOld": "05/09/19 6:25 AM",
      "commitNameOld": "511df1e837b19ccb9271520589452d82d50ac69d",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 35.86,
      "commitsBetweenForRepo": 307,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,3 @@\n   public void destroy() throws IOException {\n-    if (table \u003d\u003d null) {\n-      LOG.info(\"In destroy(): no table to delete\");\n-      return;\n-    }\n-    LOG.info(\"Deleting DynamoDB table {} in region {}\", tableName, region);\n-    Preconditions.checkNotNull(dynamoDB, \"Not connected to DynamoDB\");\n-    try {\n-      invoker.retry(\"delete\", null, true,\n-          () -\u003e table.delete());\n-      table.waitForDelete();\n-    } catch (IllegalArgumentException ex) {\n-      throw new TableDeleteTimeoutException(tableName,\n-          \"Timeout waiting for the table \" + tableArn + \" to be deleted\",\n-          ex);\n-    } catch (FileNotFoundException rnfe) {\n-      LOG.info(\"FileNotFoundException while deleting DynamoDB table {} in \"\n-              + \"region {}.  This may indicate that the table does not exist, \"\n-              + \"or has been deleted by another concurrent thread or process.\",\n-          tableName, region);\n-    } catch (InterruptedException ie) {\n-      Thread.currentThread().interrupt();\n-      LOG.warn(\"Interrupted while waiting for DynamoDB table {} being deleted\",\n-          tableName, ie);\n-      throw new InterruptedIOException(\"Table \" + tableName\n-          + \" in region \" + region + \" has not been deleted\");\n-    }\n+    tableHandler.destroy();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void destroy() throws IOException {\n    tableHandler.destroy();\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/DynamoDBMetadataStore.java",
      "extendedDetails": {}
    },
    "e02eb24e0a9139418120027b694492e0738df20a": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15183. S3Guard store becomes inconsistent after partial failure of rename.\n\nContributed by Steve Loughran.\n\nChange-Id: I825b0bc36be960475d2d259b1cdab45ae1bb78eb\n",
      "commitDate": "20/06/19 1:56 AM",
      "commitName": "e02eb24e0a9139418120027b694492e0738df20a",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "16/06/19 9:05 AM",
      "commitNameOld": "f9cc9e162175444efe9d5b07ecb9a795f750ca3c",
      "commitAuthorOld": "Gabor Bota",
      "daysBetweenCommits": 3.7,
      "commitsBetweenForRepo": 44,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,28 @@\n   public void destroy() throws IOException {\n     if (table \u003d\u003d null) {\n       LOG.info(\"In destroy(): no table to delete\");\n       return;\n     }\n     LOG.info(\"Deleting DynamoDB table {} in region {}\", tableName, region);\n     Preconditions.checkNotNull(dynamoDB, \"Not connected to DynamoDB\");\n     try {\n       invoker.retry(\"delete\", null, true,\n           () -\u003e table.delete());\n       table.waitForDelete();\n+    } catch (IllegalArgumentException ex) {\n+      throw new TableDeleteTimeoutException(tableName,\n+          \"Timeout waiting for the table \" + tableArn + \" to be deleted\",\n+          ex);\n     } catch (FileNotFoundException rnfe) {\n       LOG.info(\"FileNotFoundException while deleting DynamoDB table {} in \"\n               + \"region {}.  This may indicate that the table does not exist, \"\n               + \"or has been deleted by another concurrent thread or process.\",\n           tableName, region);\n     } catch (InterruptedException ie) {\n       Thread.currentThread().interrupt();\n       LOG.warn(\"Interrupted while waiting for DynamoDB table {} being deleted\",\n           tableName, ie);\n       throw new InterruptedIOException(\"Table \" + tableName\n           + \" in region \" + region + \" has not been deleted\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void destroy() throws IOException {\n    if (table \u003d\u003d null) {\n      LOG.info(\"In destroy(): no table to delete\");\n      return;\n    }\n    LOG.info(\"Deleting DynamoDB table {} in region {}\", tableName, region);\n    Preconditions.checkNotNull(dynamoDB, \"Not connected to DynamoDB\");\n    try {\n      invoker.retry(\"delete\", null, true,\n          () -\u003e table.delete());\n      table.waitForDelete();\n    } catch (IllegalArgumentException ex) {\n      throw new TableDeleteTimeoutException(tableName,\n          \"Timeout waiting for the table \" + tableArn + \" to be deleted\",\n          ex);\n    } catch (FileNotFoundException rnfe) {\n      LOG.info(\"FileNotFoundException while deleting DynamoDB table {} in \"\n              + \"region {}.  This may indicate that the table does not exist, \"\n              + \"or has been deleted by another concurrent thread or process.\",\n          tableName, region);\n    } catch (InterruptedException ie) {\n      Thread.currentThread().interrupt();\n      LOG.warn(\"Interrupted while waiting for DynamoDB table {} being deleted\",\n          tableName, ie);\n      throw new InterruptedIOException(\"Table \" + tableName\n          + \" in region \" + region + \" has not been deleted\");\n    }\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/DynamoDBMetadataStore.java",
      "extendedDetails": {}
    },
    "d7c0a08a1c077752918a8cf1b4f1900ce2721899": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15426 Make S3guard client resilient to DDB throttle events and network failures (Contributed by Steve Loughran)\n",
      "commitDate": "12/09/18 9:04 PM",
      "commitName": "d7c0a08a1c077752918a8cf1b4f1900ce2721899",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "12/09/18 4:36 PM",
      "commitNameOld": "d32a8d5d582725eb724b78f27310ad1efd33ed2a",
      "commitAuthorOld": "Aaron Fabbri",
      "daysBetweenCommits": 0.19,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,24 @@\n   public void destroy() throws IOException {\n     if (table \u003d\u003d null) {\n       LOG.info(\"In destroy(): no table to delete\");\n       return;\n     }\n     LOG.info(\"Deleting DynamoDB table {} in region {}\", tableName, region);\n     Preconditions.checkNotNull(dynamoDB, \"Not connected to DynamoDB\");\n     try {\n-      table.delete();\n+      invoker.retry(\"delete\", null, true,\n+          () -\u003e table.delete());\n       table.waitForDelete();\n-    } catch (ResourceNotFoundException rnfe) {\n-      LOG.info(\"ResourceNotFoundException while deleting DynamoDB table {} in \"\n+    } catch (FileNotFoundException rnfe) {\n+      LOG.info(\"FileNotFoundException while deleting DynamoDB table {} in \"\n               + \"region {}.  This may indicate that the table does not exist, \"\n               + \"or has been deleted by another concurrent thread or process.\",\n           tableName, region);\n     } catch (InterruptedException ie) {\n       Thread.currentThread().interrupt();\n       LOG.warn(\"Interrupted while waiting for DynamoDB table {} being deleted\",\n           tableName, ie);\n       throw new InterruptedIOException(\"Table \" + tableName\n           + \" in region \" + region + \" has not been deleted\");\n-    } catch (AmazonClientException e) {\n-      throw translateException(\"destroy\", tableName, e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void destroy() throws IOException {\n    if (table \u003d\u003d null) {\n      LOG.info(\"In destroy(): no table to delete\");\n      return;\n    }\n    LOG.info(\"Deleting DynamoDB table {} in region {}\", tableName, region);\n    Preconditions.checkNotNull(dynamoDB, \"Not connected to DynamoDB\");\n    try {\n      invoker.retry(\"delete\", null, true,\n          () -\u003e table.delete());\n      table.waitForDelete();\n    } catch (FileNotFoundException rnfe) {\n      LOG.info(\"FileNotFoundException while deleting DynamoDB table {} in \"\n              + \"region {}.  This may indicate that the table does not exist, \"\n              + \"or has been deleted by another concurrent thread or process.\",\n          tableName, region);\n    } catch (InterruptedException ie) {\n      Thread.currentThread().interrupt();\n      LOG.warn(\"Interrupted while waiting for DynamoDB table {} being deleted\",\n          tableName, ie);\n      throw new InterruptedIOException(\"Table \" + tableName\n          + \" in region \" + region + \" has not been deleted\");\n    }\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/DynamoDBMetadataStore.java",
      "extendedDetails": {}
    },
    "de8b6ca5ef8614de6d6277b7617e27c788b0555c": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13786 Add S3A committer for zero-rename commits to S3 endpoints.\nContributed by Steve Loughran and Ryan Blue.\n",
      "commitDate": "22/11/17 7:28 AM",
      "commitName": "de8b6ca5ef8614de6d6277b7617e27c788b0555c",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "25/09/17 3:59 PM",
      "commitNameOld": "47011d7dd300b0c74bb6cfe25b918c479d718f4f",
      "commitAuthorOld": "Aaron Fabbri",
      "daysBetweenCommits": 57.69,
      "commitsBetweenForRepo": 477,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n   public void destroy() throws IOException {\n     if (table \u003d\u003d null) {\n       LOG.info(\"In destroy(): no table to delete\");\n       return;\n     }\n     LOG.info(\"Deleting DynamoDB table {} in region {}\", tableName, region);\n     Preconditions.checkNotNull(dynamoDB, \"Not connected to DynamoDB\");\n     try {\n       table.delete();\n       table.waitForDelete();\n     } catch (ResourceNotFoundException rnfe) {\n       LOG.info(\"ResourceNotFoundException while deleting DynamoDB table {} in \"\n               + \"region {}.  This may indicate that the table does not exist, \"\n               + \"or has been deleted by another concurrent thread or process.\",\n           tableName, region);\n     } catch (InterruptedException ie) {\n       Thread.currentThread().interrupt();\n       LOG.warn(\"Interrupted while waiting for DynamoDB table {} being deleted\",\n           tableName, ie);\n       throw new InterruptedIOException(\"Table \" + tableName\n           + \" in region \" + region + \" has not been deleted\");\n     } catch (AmazonClientException e) {\n-      throw translateException(\"destroy\", (String) null, e);\n+      throw translateException(\"destroy\", tableName, e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void destroy() throws IOException {\n    if (table \u003d\u003d null) {\n      LOG.info(\"In destroy(): no table to delete\");\n      return;\n    }\n    LOG.info(\"Deleting DynamoDB table {} in region {}\", tableName, region);\n    Preconditions.checkNotNull(dynamoDB, \"Not connected to DynamoDB\");\n    try {\n      table.delete();\n      table.waitForDelete();\n    } catch (ResourceNotFoundException rnfe) {\n      LOG.info(\"ResourceNotFoundException while deleting DynamoDB table {} in \"\n              + \"region {}.  This may indicate that the table does not exist, \"\n              + \"or has been deleted by another concurrent thread or process.\",\n          tableName, region);\n    } catch (InterruptedException ie) {\n      Thread.currentThread().interrupt();\n      LOG.warn(\"Interrupted while waiting for DynamoDB table {} being deleted\",\n          tableName, ie);\n      throw new InterruptedIOException(\"Table \" + tableName\n          + \" in region \" + region + \" has not been deleted\");\n    } catch (AmazonClientException e) {\n      throw translateException(\"destroy\", tableName, e);\n    }\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/DynamoDBMetadataStore.java",
      "extendedDetails": {}
    },
    "621b43e254afaff708cd6fc4698b29628f6abc33": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-13345 HS3Guard: Improved Consistency for S3A.\nContributed by: Chris Nauroth, Aaron Fabbri, Mingliang Liu, Lei (Eddy) Xu,\nSean Mackrory, Steve Loughran and others.\n",
      "commitDate": "01/09/17 6:13 AM",
      "commitName": "621b43e254afaff708cd6fc4698b29628f6abc33",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,25 @@\n+  public void destroy() throws IOException {\n+    if (table \u003d\u003d null) {\n+      LOG.info(\"In destroy(): no table to delete\");\n+      return;\n+    }\n+    LOG.info(\"Deleting DynamoDB table {} in region {}\", tableName, region);\n+    Preconditions.checkNotNull(dynamoDB, \"Not connected to DynamoDB\");\n+    try {\n+      table.delete();\n+      table.waitForDelete();\n+    } catch (ResourceNotFoundException rnfe) {\n+      LOG.info(\"ResourceNotFoundException while deleting DynamoDB table {} in \"\n+              + \"region {}.  This may indicate that the table does not exist, \"\n+              + \"or has been deleted by another concurrent thread or process.\",\n+          tableName, region);\n+    } catch (InterruptedException ie) {\n+      Thread.currentThread().interrupt();\n+      LOG.warn(\"Interrupted while waiting for DynamoDB table {} being deleted\",\n+          tableName, ie);\n+      throw new InterruptedIOException(\"Table \" + tableName\n+          + \" in region \" + region + \" has not been deleted\");\n+    } catch (AmazonClientException e) {\n+      throw translateException(\"destroy\", (String) null, e);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void destroy() throws IOException {\n    if (table \u003d\u003d null) {\n      LOG.info(\"In destroy(): no table to delete\");\n      return;\n    }\n    LOG.info(\"Deleting DynamoDB table {} in region {}\", tableName, region);\n    Preconditions.checkNotNull(dynamoDB, \"Not connected to DynamoDB\");\n    try {\n      table.delete();\n      table.waitForDelete();\n    } catch (ResourceNotFoundException rnfe) {\n      LOG.info(\"ResourceNotFoundException while deleting DynamoDB table {} in \"\n              + \"region {}.  This may indicate that the table does not exist, \"\n              + \"or has been deleted by another concurrent thread or process.\",\n          tableName, region);\n    } catch (InterruptedException ie) {\n      Thread.currentThread().interrupt();\n      LOG.warn(\"Interrupted while waiting for DynamoDB table {} being deleted\",\n          tableName, ie);\n      throw new InterruptedIOException(\"Table \" + tableName\n          + \" in region \" + region + \" has not been deleted\");\n    } catch (AmazonClientException e) {\n      throw translateException(\"destroy\", (String) null, e);\n    }\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/DynamoDBMetadataStore.java"
    }
  }
}