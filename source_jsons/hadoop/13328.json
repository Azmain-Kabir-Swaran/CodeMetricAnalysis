{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DatanodeManager.java",
  "functionName": "addCacheCommands",
  "functionId": "addCacheCommands___blockPoolId-String__nodeinfo-DatanodeDescriptor__cmds-List__DatanodeCommand__",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeManager.java",
  "functionStartLine": 1645,
  "functionEndLine": 1670,
  "numCommitsSeen": 172,
  "timeTaken": 2700,
  "changeHistory": [
    "8602692338d6f493647205e0241e4116211fab75"
  ],
  "changeHistoryShort": {
    "8602692338d6f493647205e0241e4116211fab75": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8602692338d6f493647205e0241e4116211fab75": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-9371. Code cleanup for DatanodeManager. Contributed by Jing Zhao.\n",
      "commitDate": "15/12/15 10:47 AM",
      "commitName": "8602692338d6f493647205e0241e4116211fab75",
      "commitAuthor": "Jing Zhao",
      "diff": "@@ -0,0 +1,26 @@\n+  private void addCacheCommands(String blockPoolId, DatanodeDescriptor nodeinfo,\n+      List\u003cDatanodeCommand\u003e cmds) {\n+    boolean sendingCachingCommands \u003d false;\n+    final long nowMs \u003d monotonicNow();\n+    if (shouldSendCachingCommands \u0026\u0026\n+        ((nowMs - nodeinfo.getLastCachingDirectiveSentTimeMs()) \u003e\u003d\n+            timeBetweenResendingCachingDirectivesMs)) {\n+      DatanodeCommand pendingCacheCommand \u003d getCacheCommand(\n+          nodeinfo.getPendingCached(), DatanodeProtocol.DNA_CACHE,\n+          blockPoolId);\n+      if (pendingCacheCommand !\u003d null) {\n+        cmds.add(pendingCacheCommand);\n+        sendingCachingCommands \u003d true;\n+      }\n+      DatanodeCommand pendingUncacheCommand \u003d getCacheCommand(\n+          nodeinfo.getPendingUncached(), DatanodeProtocol.DNA_UNCACHE,\n+          blockPoolId);\n+      if (pendingUncacheCommand !\u003d null) {\n+        cmds.add(pendingUncacheCommand);\n+        sendingCachingCommands \u003d true;\n+      }\n+      if (sendingCachingCommands) {\n+        nodeinfo.setLastCachingDirectiveSentTimeMs(nowMs);\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void addCacheCommands(String blockPoolId, DatanodeDescriptor nodeinfo,\n      List\u003cDatanodeCommand\u003e cmds) {\n    boolean sendingCachingCommands \u003d false;\n    final long nowMs \u003d monotonicNow();\n    if (shouldSendCachingCommands \u0026\u0026\n        ((nowMs - nodeinfo.getLastCachingDirectiveSentTimeMs()) \u003e\u003d\n            timeBetweenResendingCachingDirectivesMs)) {\n      DatanodeCommand pendingCacheCommand \u003d getCacheCommand(\n          nodeinfo.getPendingCached(), DatanodeProtocol.DNA_CACHE,\n          blockPoolId);\n      if (pendingCacheCommand !\u003d null) {\n        cmds.add(pendingCacheCommand);\n        sendingCachingCommands \u003d true;\n      }\n      DatanodeCommand pendingUncacheCommand \u003d getCacheCommand(\n          nodeinfo.getPendingUncached(), DatanodeProtocol.DNA_UNCACHE,\n          blockPoolId);\n      if (pendingUncacheCommand !\u003d null) {\n        cmds.add(pendingUncacheCommand);\n        sendingCachingCommands \u003d true;\n      }\n      if (sendingCachingCommands) {\n        nodeinfo.setLastCachingDirectiveSentTimeMs(nowMs);\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/DatanodeManager.java"
    }
  }
}