{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AzureNativeFileSystemStore.java",
  "functionName": "isOkContainerState",
  "functionId": "isOkContainerState___accessType-ContainerAccessType",
  "sourceFilePath": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/AzureNativeFileSystemStore.java",
  "functionStartLine": 1418,
  "functionEndLine": 1438,
  "numCommitsSeen": 53,
  "timeTaken": 2213,
  "changeHistory": [
    "81bc395deb3ba00567dc067d6ca71bacf9e3bc82"
  ],
  "changeHistoryShort": {
    "81bc395deb3ba00567dc067d6ca71bacf9e3bc82": "Yintroduced"
  },
  "changeHistoryDetails": {
    "81bc395deb3ba00567dc067d6ca71bacf9e3bc82": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-9629. Support Windows Azure Storage - Blob as a file system in Hadoop. Contributed by Dexter Bradshaw, Mostafa Elhemali, Xi Fang, Johannes Klein, David Lao, Mike Liddell, Chuan Liu, Lengning Liu, Ivan Mitic, Michael Rys, Alexander Stojanovic, Brian Swan, and Min Wei.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1601781 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/06/14 3:26 PM",
      "commitName": "81bc395deb3ba00567dc067d6ca71bacf9e3bc82",
      "commitAuthor": "Chris Nauroth",
      "diff": "@@ -0,0 +1,21 @@\n+  private boolean isOkContainerState(ContainerAccessType accessType) {\n+    switch (currentKnownContainerState) {\n+    case Unknown:\n+      // When using SAS, we can\u0027t discover container attributes\n+      // so just live with Unknown state and fail later if it\n+      // doesn\u0027t exist.\n+      return connectingUsingSAS;\n+    case DoesntExist:\n+      return false; // the container could have been created\n+    case ExistsAtRightVersion:\n+      return true; // fine to optimize\n+    case ExistsAtWrongVersion:\n+      return false;\n+    case ExistsNoVersion:\n+      // If there\u0027s no version, it\u0027s OK if we don\u0027t need to stamp the version\n+      // or we can\u0027t anyway even if we wanted to.\n+      return !needToStampVersion(accessType);\n+    default:\n+      throw new AssertionError(\"Unknown access type: \" + accessType);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean isOkContainerState(ContainerAccessType accessType) {\n    switch (currentKnownContainerState) {\n    case Unknown:\n      // When using SAS, we can\u0027t discover container attributes\n      // so just live with Unknown state and fail later if it\n      // doesn\u0027t exist.\n      return connectingUsingSAS;\n    case DoesntExist:\n      return false; // the container could have been created\n    case ExistsAtRightVersion:\n      return true; // fine to optimize\n    case ExistsAtWrongVersion:\n      return false;\n    case ExistsNoVersion:\n      // If there\u0027s no version, it\u0027s OK if we don\u0027t need to stamp the version\n      // or we can\u0027t anyway even if we wanted to.\n      return !needToStampVersion(accessType);\n    default:\n      throw new AssertionError(\"Unknown access type: \" + accessType);\n    }\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/AzureNativeFileSystemStore.java"
    }
  }
}